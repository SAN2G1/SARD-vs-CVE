command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	301707	File	data/converged/CVE-2015-8617_php-src/Zend_zend_object_handlers.c								
ANR	301708	Function	rebuild_object_properties	73:0:2762:4249							
ANR	301709	FunctionDef	rebuild_object_properties (zend_object * zobj)		301708	0					
ANR	301710	CompoundStatement		74:0:2831:4249	301708	0					
ANR	301711	IfStatement	if ( ! zobj -> properties )		301708	0					
ANR	301712	Condition	! zobj -> properties	75:5:2838:2854	301708	0	True				
ANR	301713	UnaryOperationExpression	! zobj -> properties		301708	0					
ANR	301714	UnaryOperator	!		301708	0					
ANR	301715	PtrMemberAccess	zobj -> properties		301708	1					
ANR	301716	Identifier	zobj		301708	0					
ANR	301717	Identifier	properties		301708	1					
ANR	301718	CompoundStatement		4:2:62:93	301708	1					
ANR	301719	IdentifierDeclStatement	zend_property_info * prop_info ;	76:2:2861:2890	301708	0	True				
ANR	301720	IdentifierDecl	* prop_info		301708	0					
ANR	301721	IdentifierDeclType	zend_property_info *		301708	0					
ANR	301722	Identifier	prop_info		301708	1					
ANR	301723	IdentifierDeclStatement	zend_class_entry * ce = zobj -> ce ;	77:2:2894:2925	301708	1	True				
ANR	301724	IdentifierDecl	* ce = zobj -> ce		301708	0					
ANR	301725	IdentifierDeclType	zend_class_entry *		301708	0					
ANR	301726	Identifier	ce		301708	1					
ANR	301727	AssignmentExpression	* ce = zobj -> ce		301708	2		=			
ANR	301728	Identifier	ce		301708	0					
ANR	301729	PtrMemberAccess	zobj -> ce		301708	1					
ANR	301730	Identifier	zobj		301708	0					
ANR	301731	Identifier	ce		301708	1					
ANR	301732	ExpressionStatement	ALLOC_HASHTABLE ( zobj -> properties )	79:2:2930:2963	301708	2	True				
ANR	301733	CallExpression	ALLOC_HASHTABLE ( zobj -> properties )		301708	0					
ANR	301734	Callee	ALLOC_HASHTABLE		301708	0					
ANR	301735	Identifier	ALLOC_HASHTABLE		301708	0					
ANR	301736	ArgumentList	zobj -> properties		301708	1					
ANR	301737	Argument	zobj -> properties		301708	0					
ANR	301738	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301739	Identifier	zobj		301708	0					
ANR	301740	Identifier	properties		301708	1					
ANR	301741	ExpressionStatement	"zend_hash_init ( zobj -> properties , ce -> default_properties_count , NULL , ZVAL_PTR_DTOR , 0 )"	80:2:2967:3053	301708	3	True				
ANR	301742	CallExpression	"zend_hash_init ( zobj -> properties , ce -> default_properties_count , NULL , ZVAL_PTR_DTOR , 0 )"		301708	0					
ANR	301743	Callee	zend_hash_init		301708	0					
ANR	301744	Identifier	zend_hash_init		301708	0					
ANR	301745	ArgumentList	zobj -> properties		301708	1					
ANR	301746	Argument	zobj -> properties		301708	0					
ANR	301747	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301748	Identifier	zobj		301708	0					
ANR	301749	Identifier	properties		301708	1					
ANR	301750	Argument	ce -> default_properties_count		301708	1					
ANR	301751	PtrMemberAccess	ce -> default_properties_count		301708	0					
ANR	301752	Identifier	ce		301708	0					
ANR	301753	Identifier	default_properties_count		301708	1					
ANR	301754	Argument	NULL		301708	2					
ANR	301755	Identifier	NULL		301708	0					
ANR	301756	Argument	ZVAL_PTR_DTOR		301708	3					
ANR	301757	Identifier	ZVAL_PTR_DTOR		301708	0					
ANR	301758	Argument	0		301708	4					
ANR	301759	PrimaryExpression	0		301708	0					
ANR	301760	IfStatement	if ( ce -> default_properties_count )		301708	4					
ANR	301761	Condition	ce -> default_properties_count	81:6:3061:3088	301708	0	True				
ANR	301762	PtrMemberAccess	ce -> default_properties_count		301708	0					
ANR	301763	Identifier	ce		301708	0					
ANR	301764	Identifier	default_properties_count		301708	1					
ANR	301765	CompoundStatement		8:36:259:259	301708	1					
ANR	301766	ExpressionStatement	"zend_hash_real_init ( zobj -> properties , 0 )"	82:3:3096:3136	301708	0	True				
ANR	301767	CallExpression	"zend_hash_real_init ( zobj -> properties , 0 )"		301708	0					
ANR	301768	Callee	zend_hash_real_init		301708	0					
ANR	301769	Identifier	zend_hash_real_init		301708	0					
ANR	301770	ArgumentList	zobj -> properties		301708	1					
ANR	301771	Argument	zobj -> properties		301708	0					
ANR	301772	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301773	Identifier	zobj		301708	0					
ANR	301774	Identifier	properties		301708	1					
ANR	301775	Argument	0		301708	1					
ANR	301776	PrimaryExpression	0		301708	0					
ANR	301777	ExpressionStatement	zobj -> properties -> nInternalPointer = 0	83:3:3141:3179	301708	1	True				
ANR	301778	AssignmentExpression	zobj -> properties -> nInternalPointer = 0		301708	0		=			
ANR	301779	PtrMemberAccess	zobj -> properties -> nInternalPointer		301708	0					
ANR	301780	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301781	Identifier	zobj		301708	0					
ANR	301782	Identifier	properties		301708	1					
ANR	301783	Identifier	nInternalPointer		301708	1					
ANR	301784	PrimaryExpression	0		301708	1					
ANR	301785	Statement	ZEND_HASH_FOREACH_PTR	84:3:3184:3204	301708	2	True				
ANR	301786	Statement	(	84:24:3205:3205	301708	3	True				
ANR	301787	Statement	&	84:25:3206:3206	301708	4	True				
ANR	301788	Statement	ce	84:26:3207:3208	301708	5	True				
ANR	301789	Statement	->	84:28:3209:3210	301708	6	True				
ANR	301790	Statement	properties_info	84:30:3211:3225	301708	7	True				
ANR	301791	Statement	","	84:45:3226:3226	301708	8	True				
ANR	301792	Statement	prop_info	84:47:3228:3236	301708	9	True				
ANR	301793	Statement	)	84:56:3237:3237	301708	10	True				
ANR	301794	CompoundStatement		11:58:407:407	301708	11					
ANR	301795	IfStatement	if ( ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 )		301708	0					
ANR	301796	Condition	( prop_info -> flags & ZEND_ACC_STATIC ) == 0	86:8:3284:3324	301708	0	True				
ANR	301797	EqualityExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0		301708	0		==			
ANR	301798	BitAndExpression	prop_info -> flags & ZEND_ACC_STATIC		301708	0		&			
ANR	301799	PtrMemberAccess	prop_info -> flags		301708	0					
ANR	301800	Identifier	prop_info		301708	0					
ANR	301801	Identifier	flags		301708	1					
ANR	301802	Identifier	ZEND_ACC_STATIC		301708	1					
ANR	301803	PrimaryExpression	0		301708	1					
ANR	301804	CompoundStatement		13:51:495:495	301708	1					
ANR	301805	IfStatement	"if ( UNEXPECTED ( Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF ) )"		301708	0					
ANR	301806	Condition	"UNEXPECTED ( Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF )"	88:9:3339:3405	301708	0	True				
ANR	301807	CallExpression	"UNEXPECTED ( Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF )"		301708	0					
ANR	301808	Callee	UNEXPECTED		301708	0					
ANR	301809	Identifier	UNEXPECTED		301708	0					
ANR	301810	ArgumentList	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF"		301708	1					
ANR	301811	Argument	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF"		301708	0					
ANR	301812	EqualityExpression	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF"		301708	0		==			
ANR	301813	CallExpression	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) )"		301708	0					
ANR	301814	Callee	Z_TYPE_P		301708	0					
ANR	301815	Identifier	Z_TYPE_P		301708	0					
ANR	301816	ArgumentList	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	1					
ANR	301817	Argument	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	0					
ANR	301818	CallExpression	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	0					
ANR	301819	Callee	OBJ_PROP		301708	0					
ANR	301820	Identifier	OBJ_PROP		301708	0					
ANR	301821	ArgumentList	zobj		301708	1					
ANR	301822	Argument	zobj		301708	0					
ANR	301823	Identifier	zobj		301708	0					
ANR	301824	Argument	prop_info -> offset		301708	1					
ANR	301825	PtrMemberAccess	prop_info -> offset		301708	0					
ANR	301826	Identifier	prop_info		301708	0					
ANR	301827	Identifier	offset		301708	1					
ANR	301828	Identifier	IS_UNDEF		301708	1					
ANR	301829	CompoundStatement		15:78:576:576	301708	1					
ANR	301830	ExpressionStatement	zobj -> properties -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND	89:6:3416:3470	301708	0	True				
ANR	301831	AssignmentExpression	zobj -> properties -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND		301708	0		|=			
ANR	301832	MemberAccess	zobj -> properties -> u . v . flags		301708	0					
ANR	301833	MemberAccess	zobj -> properties -> u . v		301708	0					
ANR	301834	PtrMemberAccess	zobj -> properties -> u		301708	0					
ANR	301835	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301836	Identifier	zobj		301708	0					
ANR	301837	Identifier	properties		301708	1					
ANR	301838	Identifier	u		301708	1					
ANR	301839	Identifier	v		301708	1					
ANR	301840	Identifier	flags		301708	1					
ANR	301841	Identifier	HASH_FLAG_HAS_EMPTY_IND		301708	1					
ANR	301842	ExpressionStatement	"_zend_hash_append_ind ( zobj -> properties , prop_info -> name , OBJ_PROP ( zobj , prop_info -> offset ) )"	92:5:3485:3583	301708	1	True				
ANR	301843	CallExpression	"_zend_hash_append_ind ( zobj -> properties , prop_info -> name , OBJ_PROP ( zobj , prop_info -> offset ) )"		301708	0					
ANR	301844	Callee	_zend_hash_append_ind		301708	0					
ANR	301845	Identifier	_zend_hash_append_ind		301708	0					
ANR	301846	ArgumentList	zobj -> properties		301708	1					
ANR	301847	Argument	zobj -> properties		301708	0					
ANR	301848	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301849	Identifier	zobj		301708	0					
ANR	301850	Identifier	properties		301708	1					
ANR	301851	Argument	prop_info -> name		301708	1					
ANR	301852	PtrMemberAccess	prop_info -> name		301708	0					
ANR	301853	Identifier	prop_info		301708	0					
ANR	301854	Identifier	name		301708	1					
ANR	301855	Argument	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	2					
ANR	301856	CallExpression	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	0					
ANR	301857	Callee	OBJ_PROP		301708	0					
ANR	301858	Identifier	OBJ_PROP		301708	0					
ANR	301859	ArgumentList	zobj		301708	1					
ANR	301860	Argument	zobj		301708	0					
ANR	301861	Identifier	zobj		301708	0					
ANR	301862	Argument	prop_info -> offset		301708	1					
ANR	301863	PtrMemberAccess	prop_info -> offset		301708	0					
ANR	301864	Identifier	prop_info		301708	0					
ANR	301865	Identifier	offset		301708	1					
ANR	301866	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	95:5:3596:3619	301708	12	True				
ANR	301867	CallExpression	ZEND_HASH_FOREACH_END ( )		301708	0					
ANR	301868	Callee	ZEND_HASH_FOREACH_END		301708	0					
ANR	301869	Identifier	ZEND_HASH_FOREACH_END		301708	0					
ANR	301870	ArgumentList			301708	1					
ANR	301871	WhileStatement	while ( ce -> parent && ce -> parent -> default_properties_count )		301708	13					
ANR	301872	Condition	ce -> parent && ce -> parent -> default_properties_count	96:10:3631:3680	301708	0	True				
ANR	301873	AndExpression	ce -> parent && ce -> parent -> default_properties_count		301708	0		&&			
ANR	301874	PtrMemberAccess	ce -> parent		301708	0					
ANR	301875	Identifier	ce		301708	0					
ANR	301876	Identifier	parent		301708	1					
ANR	301877	PtrMemberAccess	ce -> parent -> default_properties_count		301708	1					
ANR	301878	PtrMemberAccess	ce -> parent		301708	0					
ANR	301879	Identifier	ce		301708	0					
ANR	301880	Identifier	parent		301708	1					
ANR	301881	Identifier	default_properties_count		301708	1					
ANR	301882	CompoundStatement		23:62:851:851	301708	1					
ANR	301883	ExpressionStatement	ce = ce -> parent	97:4:3689:3704	301708	0	True				
ANR	301884	AssignmentExpression	ce = ce -> parent		301708	0		=			
ANR	301885	Identifier	ce		301708	0					
ANR	301886	PtrMemberAccess	ce -> parent		301708	1					
ANR	301887	Identifier	ce		301708	0					
ANR	301888	Identifier	parent		301708	1					
ANR	301889	Statement	ZEND_HASH_FOREACH_PTR	98:4:3710:3730	301708	1	True				
ANR	301890	Statement	(	98:25:3731:3731	301708	2	True				
ANR	301891	Statement	&	98:26:3732:3732	301708	3	True				
ANR	301892	Statement	ce	98:27:3733:3734	301708	4	True				
ANR	301893	Statement	->	98:29:3735:3736	301708	5	True				
ANR	301894	Statement	properties_info	98:31:3737:3751	301708	6	True				
ANR	301895	Statement	","	98:46:3752:3752	301708	7	True				
ANR	301896	Statement	prop_info	98:48:3754:3762	301708	8	True				
ANR	301897	Statement	)	98:57:3763:3763	301708	9	True				
ANR	301898	CompoundStatement		25:59:933:933	301708	10					
ANR	301899	IfStatement	if ( prop_info -> ce == ce && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0 )		301708	0					
ANR	301900	Condition	prop_info -> ce == ce && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0	99:9:3776:3903	301708	0	True				
ANR	301901	AndExpression	prop_info -> ce == ce && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0		301708	0		&&			
ANR	301902	EqualityExpression	prop_info -> ce == ce		301708	0		==			
ANR	301903	PtrMemberAccess	prop_info -> ce		301708	0					
ANR	301904	Identifier	prop_info		301708	0					
ANR	301905	Identifier	ce		301708	1					
ANR	301906	Identifier	ce		301708	1					
ANR	301907	AndExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0		301708	1		&&			
ANR	301908	EqualityExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0		301708	0		==			
ANR	301909	BitAndExpression	prop_info -> flags & ZEND_ACC_STATIC		301708	0		&			
ANR	301910	PtrMemberAccess	prop_info -> flags		301708	0					
ANR	301911	Identifier	prop_info		301708	0					
ANR	301912	Identifier	flags		301708	1					
ANR	301913	Identifier	ZEND_ACC_STATIC		301708	1					
ANR	301914	PrimaryExpression	0		301708	1					
ANR	301915	EqualityExpression	( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0		301708	1		!=			
ANR	301916	BitAndExpression	prop_info -> flags & ZEND_ACC_PRIVATE		301708	0		&			
ANR	301917	PtrMemberAccess	prop_info -> flags		301708	0					
ANR	301918	Identifier	prop_info		301708	0					
ANR	301919	Identifier	flags		301708	1					
ANR	301920	Identifier	ZEND_ACC_PRIVATE		301708	1					
ANR	301921	PrimaryExpression	0		301708	1					
ANR	301922	CompoundStatement		29:6:1082:1089	301708	1					
ANR	301923	IdentifierDeclStatement	zval zv ;	102:6:3914:3921	301708	0	True				
ANR	301924	IdentifierDecl	zv		301708	0					
ANR	301925	IdentifierDeclType	zval		301708	0					
ANR	301926	Identifier	zv		301708	1					
ANR	301927	IfStatement	"if ( UNEXPECTED ( Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF ) )"		301708	1					
ANR	301928	Condition	"UNEXPECTED ( Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF )"	104:10:3934:4000	301708	0	True				
ANR	301929	CallExpression	"UNEXPECTED ( Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF )"		301708	0					
ANR	301930	Callee	UNEXPECTED		301708	0					
ANR	301931	Identifier	UNEXPECTED		301708	0					
ANR	301932	ArgumentList	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF"		301708	1					
ANR	301933	Argument	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF"		301708	0					
ANR	301934	EqualityExpression	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) ) == IS_UNDEF"		301708	0		==			
ANR	301935	CallExpression	"Z_TYPE_P ( OBJ_PROP ( zobj , prop_info -> offset ) )"		301708	0					
ANR	301936	Callee	Z_TYPE_P		301708	0					
ANR	301937	Identifier	Z_TYPE_P		301708	0					
ANR	301938	ArgumentList	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	1					
ANR	301939	Argument	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	0					
ANR	301940	CallExpression	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	0					
ANR	301941	Callee	OBJ_PROP		301708	0					
ANR	301942	Identifier	OBJ_PROP		301708	0					
ANR	301943	ArgumentList	zobj		301708	1					
ANR	301944	Argument	zobj		301708	0					
ANR	301945	Identifier	zobj		301708	0					
ANR	301946	Argument	prop_info -> offset		301708	1					
ANR	301947	PtrMemberAccess	prop_info -> offset		301708	0					
ANR	301948	Identifier	prop_info		301708	0					
ANR	301949	Identifier	offset		301708	1					
ANR	301950	Identifier	IS_UNDEF		301708	1					
ANR	301951	CompoundStatement		31:79:1171:1171	301708	1					
ANR	301952	ExpressionStatement	zobj -> properties -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND	105:7:4012:4066	301708	0	True				
ANR	301953	AssignmentExpression	zobj -> properties -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND		301708	0		|=			
ANR	301954	MemberAccess	zobj -> properties -> u . v . flags		301708	0					
ANR	301955	MemberAccess	zobj -> properties -> u . v		301708	0					
ANR	301956	PtrMemberAccess	zobj -> properties -> u		301708	0					
ANR	301957	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301958	Identifier	zobj		301708	0					
ANR	301959	Identifier	properties		301708	1					
ANR	301960	Identifier	u		301708	1					
ANR	301961	Identifier	v		301708	1					
ANR	301962	Identifier	flags		301708	1					
ANR	301963	Identifier	HASH_FLAG_HAS_EMPTY_IND		301708	1					
ANR	301964	ExpressionStatement	"ZVAL_INDIRECT ( & zv , OBJ_PROP ( zobj , prop_info -> offset ) )"	108:6:4083:4136	301708	2	True				
ANR	301965	CallExpression	"ZVAL_INDIRECT ( & zv , OBJ_PROP ( zobj , prop_info -> offset ) )"		301708	0					
ANR	301966	Callee	ZVAL_INDIRECT		301708	0					
ANR	301967	Identifier	ZVAL_INDIRECT		301708	0					
ANR	301968	ArgumentList	& zv		301708	1					
ANR	301969	Argument	& zv		301708	0					
ANR	301970	UnaryOperationExpression	& zv		301708	0					
ANR	301971	UnaryOperator	&		301708	0					
ANR	301972	Identifier	zv		301708	1					
ANR	301973	Argument	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	1					
ANR	301974	CallExpression	"OBJ_PROP ( zobj , prop_info -> offset )"		301708	0					
ANR	301975	Callee	OBJ_PROP		301708	0					
ANR	301976	Identifier	OBJ_PROP		301708	0					
ANR	301977	ArgumentList	zobj		301708	1					
ANR	301978	Argument	zobj		301708	0					
ANR	301979	Identifier	zobj		301708	0					
ANR	301980	Argument	prop_info -> offset		301708	1					
ANR	301981	PtrMemberAccess	prop_info -> offset		301708	0					
ANR	301982	Identifier	prop_info		301708	0					
ANR	301983	Identifier	offset		301708	1					
ANR	301984	ExpressionStatement	"zend_hash_add ( zobj -> properties , prop_info -> name , & zv )"	109:6:4144:4197	301708	3	True				
ANR	301985	CallExpression	"zend_hash_add ( zobj -> properties , prop_info -> name , & zv )"		301708	0					
ANR	301986	Callee	zend_hash_add		301708	0					
ANR	301987	Identifier	zend_hash_add		301708	0					
ANR	301988	ArgumentList	zobj -> properties		301708	1					
ANR	301989	Argument	zobj -> properties		301708	0					
ANR	301990	PtrMemberAccess	zobj -> properties		301708	0					
ANR	301991	Identifier	zobj		301708	0					
ANR	301992	Identifier	properties		301708	1					
ANR	301993	Argument	prop_info -> name		301708	1					
ANR	301994	PtrMemberAccess	prop_info -> name		301708	0					
ANR	301995	Identifier	prop_info		301708	0					
ANR	301996	Identifier	name		301708	1					
ANR	301997	Argument	& zv		301708	2					
ANR	301998	UnaryOperationExpression	& zv		301708	0					
ANR	301999	UnaryOperator	&		301708	0					
ANR	302000	Identifier	zv		301708	1					
ANR	302001	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	111:6:4212:4235	301708	11	True				
ANR	302002	CallExpression	ZEND_HASH_FOREACH_END ( )		301708	0					
ANR	302003	Callee	ZEND_HASH_FOREACH_END		301708	0					
ANR	302004	Identifier	ZEND_HASH_FOREACH_END		301708	0					
ANR	302005	ArgumentList			301708	1					
ANR	302006	ReturnType	ZEND_API void		301708	1					
ANR	302007	Identifier	rebuild_object_properties		301708	2					
ANR	302008	ParameterList	zend_object * zobj		301708	3					
ANR	302009	Parameter	zend_object * zobj	73:40:2802:2818	301708	0	True				
ANR	302010	ParameterType	zend_object *		301708	0					
ANR	302011	Identifier	zobj		301708	1					
ANR	302012	CFGEntryNode	ENTRY		301708		True				
ANR	302013	CFGExitNode	EXIT		301708		True				
ANR	302014	Symbol	ce -> default_properties_count		301708						
ANR	302015	Symbol	HASH_FLAG_HAS_EMPTY_IND		301708						
ANR	302016	Symbol	zobj		301708						
ANR	302017	Symbol	prop_info -> name		301708						
ANR	302018	Symbol	* * zobj		301708						
ANR	302019	Symbol	* ce		301708						
ANR	302020	Symbol	* * ce		301708						
ANR	302021	Symbol	UNEXPECTED		301708						
ANR	302022	Symbol	zobj -> properties -> u . v . flags		301708						
ANR	302023	Symbol	* ce -> parent		301708						
ANR	302024	Symbol	* zobj		301708						
ANR	302025	Symbol	prop_info -> offset		301708						
ANR	302026	Symbol	zobj -> properties		301708						
ANR	302027	Symbol	ZEND_ACC_STATIC		301708						
ANR	302028	Symbol	* prop_info		301708						
ANR	302029	Symbol	IS_UNDEF		301708						
ANR	302030	Symbol	prop_info		301708						
ANR	302031	Symbol	ce		301708						
ANR	302032	Symbol	NULL		301708						
ANR	302033	Symbol	zobj -> properties -> u		301708						
ANR	302034	Symbol	ce -> parent		301708						
ANR	302035	Symbol	& zv		301708						
ANR	302036	Symbol	zobj -> ce		301708						
ANR	302037	Symbol	zobj -> properties -> nInternalPointer		301708						
ANR	302038	Symbol	Z_TYPE_P		301708						
ANR	302039	Symbol	ZVAL_PTR_DTOR		301708						
ANR	302040	Symbol	ZEND_ACC_PRIVATE		301708						
ANR	302041	Symbol	prop_info -> flags		301708						
ANR	302042	Symbol	OBJ_PROP		301708						
ANR	302043	Symbol	zobj -> properties -> u . v		301708						
ANR	302044	Symbol	prop_info -> ce		301708						
ANR	302045	Symbol	* zobj -> properties		301708						
ANR	302046	Symbol	ce -> parent -> default_properties_count		301708						
ANR	302047	Symbol	zv		301708						
ANR	302048	Function	zend_std_get_properties	118:0:4262:4467							
ANR	302049	FunctionDef	zend_std_get_properties (zval * object)		302048	0					
ANR	302050	CompoundStatement		119:0:4330:4467	302048	0					
ANR	302051	IdentifierDeclStatement	zend_object * zobj ;	120:1:4333:4350	302048	0	True				
ANR	302052	IdentifierDecl	* zobj		302048	0					
ANR	302053	IdentifierDeclType	zend_object *		302048	0					
ANR	302054	Identifier	zobj		302048	1					
ANR	302055	ExpressionStatement	zobj = Z_OBJ_P ( object )	121:1:4353:4375	302048	1	True				
ANR	302056	AssignmentExpression	zobj = Z_OBJ_P ( object )		302048	0		=			
ANR	302057	Identifier	zobj		302048	0					
ANR	302058	CallExpression	Z_OBJ_P ( object )		302048	1					
ANR	302059	Callee	Z_OBJ_P		302048	0					
ANR	302060	Identifier	Z_OBJ_P		302048	0					
ANR	302061	ArgumentList	object		302048	1					
ANR	302062	Argument	object		302048	0					
ANR	302063	Identifier	object		302048	0					
ANR	302064	IfStatement	if ( ! zobj -> properties )		302048	2					
ANR	302065	Condition	! zobj -> properties	122:5:4382:4398	302048	0	True				
ANR	302066	UnaryOperationExpression	! zobj -> properties		302048	0					
ANR	302067	UnaryOperator	!		302048	0					
ANR	302068	PtrMemberAccess	zobj -> properties		302048	1					
ANR	302069	Identifier	zobj		302048	0					
ANR	302070	Identifier	properties		302048	1					
ANR	302071	CompoundStatement		4:24:70:70	302048	1					
ANR	302072	ExpressionStatement	rebuild_object_properties ( zobj )	123:2:4405:4436	302048	0	True				
ANR	302073	CallExpression	rebuild_object_properties ( zobj )		302048	0					
ANR	302074	Callee	rebuild_object_properties		302048	0					
ANR	302075	Identifier	rebuild_object_properties		302048	0					
ANR	302076	ArgumentList	zobj		302048	1					
ANR	302077	Argument	zobj		302048	0					
ANR	302078	Identifier	zobj		302048	0					
ANR	302079	ReturnStatement	return zobj -> properties ;	125:1:4442:4465	302048	3	True				
ANR	302080	PtrMemberAccess	zobj -> properties		302048	0					
ANR	302081	Identifier	zobj		302048	0					
ANR	302082	Identifier	properties		302048	1					
ANR	302083	ReturnType	ZEND_API HashTable *		302048	1					
ANR	302084	Identifier	zend_std_get_properties		302048	2					
ANR	302085	ParameterList	zval * object		302048	3					
ANR	302086	Parameter	zval * object	118:44:4306:4317	302048	0	True				
ANR	302087	ParameterType	zval *		302048	0					
ANR	302088	Identifier	object		302048	1					
ANR	302089	CFGEntryNode	ENTRY		302048		True				
ANR	302090	CFGExitNode	EXIT		302048		True				
ANR	302091	Symbol	zobj		302048						
ANR	302092	Symbol	* zobj		302048						
ANR	302093	Symbol	Z_OBJ_P		302048						
ANR	302094	Symbol	zobj -> properties		302048						
ANR	302095	Symbol	object		302048						
ANR	302096	Function	zend_std_get_gc	129:0:4480:4971							
ANR	302097	FunctionDef	"zend_std_get_gc (zval * object , zval * * table , int * n)"		302096	0					
ANR	302098	CompoundStatement		130:0:4562:4971	302096	0					
ANR	302099	IfStatement	"if ( Z_OBJ_HANDLER_P ( object , get_properties ) != zend_std_get_properties )"		302096	0					
ANR	302100	Condition	"Z_OBJ_HANDLER_P ( object , get_properties ) != zend_std_get_properties"	131:5:4569:4634	302096	0	True				
ANR	302101	EqualityExpression	"Z_OBJ_HANDLER_P ( object , get_properties ) != zend_std_get_properties"		302096	0		!=			
ANR	302102	CallExpression	"Z_OBJ_HANDLER_P ( object , get_properties )"		302096	0					
ANR	302103	Callee	Z_OBJ_HANDLER_P		302096	0					
ANR	302104	Identifier	Z_OBJ_HANDLER_P		302096	0					
ANR	302105	ArgumentList	object		302096	1					
ANR	302106	Argument	object		302096	0					
ANR	302107	Identifier	object		302096	0					
ANR	302108	Argument	get_properties		302096	1					
ANR	302109	Identifier	get_properties		302096	0					
ANR	302110	Identifier	zend_std_get_properties		302096	1					
ANR	302111	CompoundStatement		2:73:74:74	302096	1					
ANR	302112	ExpressionStatement	* table = NULL	132:2:4641:4654	302096	0	True				
ANR	302113	AssignmentExpression	* table = NULL		302096	0		=			
ANR	302114	UnaryOperationExpression	* table		302096	0					
ANR	302115	UnaryOperator	*		302096	0					
ANR	302116	Identifier	table		302096	1					
ANR	302117	Identifier	NULL		302096	1					
ANR	302118	ExpressionStatement	* n = 0	133:2:4658:4664	302096	1	True				
ANR	302119	AssignmentExpression	* n = 0		302096	0		=			
ANR	302120	UnaryOperationExpression	* n		302096	0					
ANR	302121	UnaryOperator	*		302096	0					
ANR	302122	Identifier	n		302096	1					
ANR	302123	PrimaryExpression	0		302096	1					
ANR	302124	ReturnStatement	"return Z_OBJ_HANDLER_P ( object , get_properties ) ( object ) ;"	134:2:4668:4722	302096	2	True				
ANR	302125	CallExpression	"Z_OBJ_HANDLER_P ( object , get_properties ) ( object )"		302096	0					
ANR	302126	Callee	"Z_OBJ_HANDLER_P ( object , get_properties )"		302096	0					
ANR	302127	CallExpression	"Z_OBJ_HANDLER_P ( object , get_properties )"		302096	0					
ANR	302128	Callee	Z_OBJ_HANDLER_P		302096	0					
ANR	302129	Identifier	Z_OBJ_HANDLER_P		302096	0					
ANR	302130	ArgumentList	object		302096	1					
ANR	302131	Argument	object		302096	0					
ANR	302132	Identifier	object		302096	0					
ANR	302133	Argument	get_properties		302096	1					
ANR	302134	Identifier	get_properties		302096	0					
ANR	302135	ArgumentList	object		302096	1					
ANR	302136	Argument	object		302096	0					
ANR	302137	Identifier	object		302096	0					
ANR	302138	ElseStatement	else		302096	0					
ANR	302139	CompoundStatement		7:2:173:208	302096	0					
ANR	302140	IdentifierDeclStatement	zend_object * zobj = Z_OBJ_P ( object ) ;	136:2:4736:4771	302096	0	True				
ANR	302141	IdentifierDecl	* zobj = Z_OBJ_P ( object )		302096	0					
ANR	302142	IdentifierDeclType	zend_object *		302096	0					
ANR	302143	Identifier	zobj		302096	1					
ANR	302144	AssignmentExpression	* zobj = Z_OBJ_P ( object )		302096	2		=			
ANR	302145	Identifier	zobj		302096	0					
ANR	302146	CallExpression	Z_OBJ_P ( object )		302096	1					
ANR	302147	Callee	Z_OBJ_P		302096	0					
ANR	302148	Identifier	Z_OBJ_P		302096	0					
ANR	302149	ArgumentList	object		302096	1					
ANR	302150	Argument	object		302096	0					
ANR	302151	Identifier	object		302096	0					
ANR	302152	IfStatement	if ( zobj -> properties )		302096	1					
ANR	302153	Condition	zobj -> properties	138:6:4780:4795	302096	0	True				
ANR	302154	PtrMemberAccess	zobj -> properties		302096	0					
ANR	302155	Identifier	zobj		302096	0					
ANR	302156	Identifier	properties		302096	1					
ANR	302157	CompoundStatement		9:24:235:235	302096	1					
ANR	302158	ExpressionStatement	* table = NULL	139:3:4803:4816	302096	0	True				
ANR	302159	AssignmentExpression	* table = NULL		302096	0		=			
ANR	302160	UnaryOperationExpression	* table		302096	0					
ANR	302161	UnaryOperator	*		302096	0					
ANR	302162	Identifier	table		302096	1					
ANR	302163	Identifier	NULL		302096	1					
ANR	302164	ExpressionStatement	* n = 0	140:3:4821:4827	302096	1	True				
ANR	302165	AssignmentExpression	* n = 0		302096	0		=			
ANR	302166	UnaryOperationExpression	* n		302096	0					
ANR	302167	UnaryOperator	*		302096	0					
ANR	302168	Identifier	n		302096	1					
ANR	302169	PrimaryExpression	0		302096	1					
ANR	302170	ReturnStatement	return zobj -> properties ;	141:3:4832:4855	302096	2	True				
ANR	302171	PtrMemberAccess	zobj -> properties		302096	0					
ANR	302172	Identifier	zobj		302096	0					
ANR	302173	Identifier	properties		302096	1					
ANR	302174	ElseStatement	else		302096	0					
ANR	302175	CompoundStatement		13:9:303:303	302096	0					
ANR	302176	ExpressionStatement	* table = zobj -> properties_table	143:3:4871:4902	302096	0	True				
ANR	302177	AssignmentExpression	* table = zobj -> properties_table		302096	0		=			
ANR	302178	UnaryOperationExpression	* table		302096	0					
ANR	302179	UnaryOperator	*		302096	0					
ANR	302180	Identifier	table		302096	1					
ANR	302181	PtrMemberAccess	zobj -> properties_table		302096	1					
ANR	302182	Identifier	zobj		302096	0					
ANR	302183	Identifier	properties_table		302096	1					
ANR	302184	ExpressionStatement	* n = zobj -> ce -> default_properties_count	144:3:4907:4946	302096	1	True				
ANR	302185	AssignmentExpression	* n = zobj -> ce -> default_properties_count		302096	0		=			
ANR	302186	UnaryOperationExpression	* n		302096	0					
ANR	302187	UnaryOperator	*		302096	0					
ANR	302188	Identifier	n		302096	1					
ANR	302189	PtrMemberAccess	zobj -> ce -> default_properties_count		302096	1					
ANR	302190	PtrMemberAccess	zobj -> ce		302096	0					
ANR	302191	Identifier	zobj		302096	0					
ANR	302192	Identifier	ce		302096	1					
ANR	302193	Identifier	default_properties_count		302096	1					
ANR	302194	ReturnStatement	return NULL ;	145:3:4951:4962	302096	2	True				
ANR	302195	Identifier	NULL		302096	0					
ANR	302196	ReturnType	ZEND_API HashTable *		302096	1					
ANR	302197	Identifier	zend_std_get_gc		302096	2					
ANR	302198	ParameterList	"zval * object , zval * * table , int * n"		302096	3					
ANR	302199	Parameter	zval * object	129:36:4516:4527	302096	0	True				
ANR	302200	ParameterType	zval *		302096	0					
ANR	302201	Identifier	object		302096	1					
ANR	302202	Parameter	zval * * table	129:50:4530:4541	302096	1	True				
ANR	302203	ParameterType	zval * *		302096	0					
ANR	302204	Identifier	table		302096	1					
ANR	302205	Parameter	int * n	129:64:4544:4549	302096	2	True				
ANR	302206	ParameterType	int *		302096	0					
ANR	302207	Identifier	n		302096	1					
ANR	302208	CFGEntryNode	ENTRY		302096		True				
ANR	302209	CFGExitNode	EXIT		302096		True				
ANR	302210	Symbol	NULL		302096						
ANR	302211	Symbol	get_properties		302096						
ANR	302212	Symbol	zobj		302096						
ANR	302213	Symbol	* zobj -> ce		302096						
ANR	302214	Symbol	Z_OBJ_P		302096						
ANR	302215	Symbol	zend_std_get_properties		302096						
ANR	302216	Symbol	* table		302096						
ANR	302217	Symbol	* * zobj		302096						
ANR	302218	Symbol	zobj -> ce		302096						
ANR	302219	Symbol	zobj -> ce -> default_properties_count		302096						
ANR	302220	Symbol	n		302096						
ANR	302221	Symbol	zobj -> properties_table		302096						
ANR	302222	Symbol	* zobj		302096						
ANR	302223	Symbol	zobj -> properties		302096						
ANR	302224	Symbol	* n		302096						
ANR	302225	Symbol	Z_OBJ_HANDLER_P		302096						
ANR	302226	Symbol	table		302096						
ANR	302227	Symbol	object		302096						
ANR	302228	Function	zend_std_get_debug_info	151:0:4984:6064							
ANR	302229	FunctionDef	"zend_std_get_debug_info (zval * object , int * is_temp)"		302228	0					
ANR	302230	CompoundStatement		152:0:5066:6064	302228	0					
ANR	302231	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	153:1:5069:5109	302228	0	True				
ANR	302232	IdentifierDecl	* ce = Z_OBJCE_P ( object )		302228	0					
ANR	302233	IdentifierDeclType	zend_class_entry *		302228	0					
ANR	302234	Identifier	ce		302228	1					
ANR	302235	AssignmentExpression	* ce = Z_OBJCE_P ( object )		302228	2		=			
ANR	302236	Identifier	ce		302228	0					
ANR	302237	CallExpression	Z_OBJCE_P ( object )		302228	1					
ANR	302238	Callee	Z_OBJCE_P		302228	0					
ANR	302239	Identifier	Z_OBJCE_P		302228	0					
ANR	302240	ArgumentList	object		302228	1					
ANR	302241	Argument	object		302228	0					
ANR	302242	Identifier	object		302228	0					
ANR	302243	IdentifierDeclStatement	zval retval ;	154:1:5112:5123	302228	1	True				
ANR	302244	IdentifierDecl	retval		302228	0					
ANR	302245	IdentifierDeclType	zval		302228	0					
ANR	302246	Identifier	retval		302228	1					
ANR	302247	IdentifierDeclStatement	HashTable * ht ;	155:1:5126:5139	302228	2	True				
ANR	302248	IdentifierDecl	* ht		302228	0					
ANR	302249	IdentifierDeclType	HashTable *		302228	0					
ANR	302250	Identifier	ht		302228	1					
ANR	302251	IfStatement	if ( ! ce -> __debugInfo )		302228	3					
ANR	302252	Condition	! ce -> __debugInfo	157:5:5147:5162	302228	0	True				
ANR	302253	UnaryOperationExpression	! ce -> __debugInfo		302228	0					
ANR	302254	UnaryOperator	!		302228	0					
ANR	302255	PtrMemberAccess	ce -> __debugInfo		302228	1					
ANR	302256	Identifier	ce		302228	0					
ANR	302257	Identifier	__debugInfo		302228	1					
ANR	302258	CompoundStatement		6:23:98:98	302228	1					
ANR	302259	ExpressionStatement	* is_temp = 0	158:2:5169:5181	302228	0	True				
ANR	302260	AssignmentExpression	* is_temp = 0		302228	0		=			
ANR	302261	UnaryOperationExpression	* is_temp		302228	0					
ANR	302262	UnaryOperator	*		302228	0					
ANR	302263	Identifier	is_temp		302228	1					
ANR	302264	PrimaryExpression	0		302228	1					
ANR	302265	ReturnStatement	"return Z_OBJ_HANDLER_P ( object , get_properties ) ? Z_OBJ_HANDLER_P ( object , get_properties ) ( object ) : NULL ;"	159:2:5185:5294	302228	1	True				
ANR	302266	ConditionalExpression	"Z_OBJ_HANDLER_P ( object , get_properties ) ? Z_OBJ_HANDLER_P ( object , get_properties ) ( object ) : NULL"		302228	0					
ANR	302267	Condition	"Z_OBJ_HANDLER_P ( object , get_properties )"		302228	0					
ANR	302268	CallExpression	"Z_OBJ_HANDLER_P ( object , get_properties )"		302228	0					
ANR	302269	Callee	Z_OBJ_HANDLER_P		302228	0					
ANR	302270	Identifier	Z_OBJ_HANDLER_P		302228	0					
ANR	302271	ArgumentList	object		302228	1					
ANR	302272	Argument	object		302228	0					
ANR	302273	Identifier	object		302228	0					
ANR	302274	Argument	get_properties		302228	1					
ANR	302275	Identifier	get_properties		302228	0					
ANR	302276	CallExpression	"Z_OBJ_HANDLER_P ( object , get_properties ) ( object )"		302228	1					
ANR	302277	Callee	"Z_OBJ_HANDLER_P ( object , get_properties )"		302228	0					
ANR	302278	CallExpression	"Z_OBJ_HANDLER_P ( object , get_properties )"		302228	0					
ANR	302279	Callee	Z_OBJ_HANDLER_P		302228	0					
ANR	302280	Identifier	Z_OBJ_HANDLER_P		302228	0					
ANR	302281	ArgumentList	object		302228	1					
ANR	302282	Argument	object		302228	0					
ANR	302283	Identifier	object		302228	0					
ANR	302284	Argument	get_properties		302228	1					
ANR	302285	Identifier	get_properties		302228	0					
ANR	302286	ArgumentList	object		302228	1					
ANR	302287	Argument	object		302228	0					
ANR	302288	Identifier	object		302228	0					
ANR	302289	Identifier	NULL		302228	2					
ANR	302290	ExpressionStatement	"zend_call_method_with_0_params ( object , ce , & ce -> __debugInfo , ZEND_DEBUGINFO_FUNC_NAME , & retval )"	164:1:5301:5396	302228	4	True				
ANR	302291	CallExpression	"zend_call_method_with_0_params ( object , ce , & ce -> __debugInfo , ZEND_DEBUGINFO_FUNC_NAME , & retval )"		302228	0					
ANR	302292	Callee	zend_call_method_with_0_params		302228	0					
ANR	302293	Identifier	zend_call_method_with_0_params		302228	0					
ANR	302294	ArgumentList	object		302228	1					
ANR	302295	Argument	object		302228	0					
ANR	302296	Identifier	object		302228	0					
ANR	302297	Argument	ce		302228	1					
ANR	302298	Identifier	ce		302228	0					
ANR	302299	Argument	& ce -> __debugInfo		302228	2					
ANR	302300	UnaryOperationExpression	& ce -> __debugInfo		302228	0					
ANR	302301	UnaryOperator	&		302228	0					
ANR	302302	PtrMemberAccess	ce -> __debugInfo		302228	1					
ANR	302303	Identifier	ce		302228	0					
ANR	302304	Identifier	__debugInfo		302228	1					
ANR	302305	Argument	ZEND_DEBUGINFO_FUNC_NAME		302228	3					
ANR	302306	Identifier	ZEND_DEBUGINFO_FUNC_NAME		302228	0					
ANR	302307	Argument	& retval		302228	4					
ANR	302308	UnaryOperationExpression	& retval		302228	0					
ANR	302309	UnaryOperator	&		302228	0					
ANR	302310	Identifier	retval		302228	1					
ANR	302311	IfStatement	if ( Z_TYPE ( retval ) == IS_ARRAY )		302228	5					
ANR	302312	Condition	Z_TYPE ( retval ) == IS_ARRAY	165:5:5403:5428	302228	0	True				
ANR	302313	EqualityExpression	Z_TYPE ( retval ) == IS_ARRAY		302228	0		==			
ANR	302314	CallExpression	Z_TYPE ( retval )		302228	0					
ANR	302315	Callee	Z_TYPE		302228	0					
ANR	302316	Identifier	Z_TYPE		302228	0					
ANR	302317	ArgumentList	retval		302228	1					
ANR	302318	Argument	retval		302228	0					
ANR	302319	Identifier	retval		302228	0					
ANR	302320	Identifier	IS_ARRAY		302228	1					
ANR	302321	CompoundStatement		14:33:364:364	302228	1					
ANR	302322	IfStatement	if ( Z_IMMUTABLE ( retval ) )		302228	0					
ANR	302323	Condition	Z_IMMUTABLE ( retval )	166:6:5439:5457	302228	0	True				
ANR	302324	CallExpression	Z_IMMUTABLE ( retval )		302228	0					
ANR	302325	Callee	Z_IMMUTABLE		302228	0					
ANR	302326	Identifier	Z_IMMUTABLE		302228	0					
ANR	302327	ArgumentList	retval		302228	1					
ANR	302328	Argument	retval		302228	0					
ANR	302329	Identifier	retval		302228	0					
ANR	302330	CompoundStatement		15:27:393:393	302228	1					
ANR	302331	ExpressionStatement	* is_temp = 1	167:3:5465:5477	302228	0	True				
ANR	302332	AssignmentExpression	* is_temp = 1		302228	0		=			
ANR	302333	UnaryOperationExpression	* is_temp		302228	0					
ANR	302334	UnaryOperator	*		302228	0					
ANR	302335	Identifier	is_temp		302228	1					
ANR	302336	PrimaryExpression	1		302228	1					
ANR	302337	ReturnStatement	return zend_array_dup ( Z_ARRVAL ( retval ) ) ;	168:3:5482:5521	302228	1	True				
ANR	302338	CallExpression	zend_array_dup ( Z_ARRVAL ( retval ) )		302228	0					
ANR	302339	Callee	zend_array_dup		302228	0					
ANR	302340	Identifier	zend_array_dup		302228	0					
ANR	302341	ArgumentList	Z_ARRVAL ( retval )		302228	1					
ANR	302342	Argument	Z_ARRVAL ( retval )		302228	0					
ANR	302343	CallExpression	Z_ARRVAL ( retval )		302228	0					
ANR	302344	Callee	Z_ARRVAL		302228	0					
ANR	302345	Identifier	Z_ARRVAL		302228	0					
ANR	302346	ArgumentList	retval		302228	1					
ANR	302347	Argument	retval		302228	0					
ANR	302348	Identifier	retval		302228	0					
ANR	302349	ElseStatement	else		302228	0					
ANR	302350	IfStatement	if ( Z_REFCOUNT ( retval ) <= 1 )		302228	0					
ANR	302351	Condition	Z_REFCOUNT ( retval ) <= 1	169:13:5536:5558	302228	0	True				
ANR	302352	RelationalExpression	Z_REFCOUNT ( retval ) <= 1		302228	0		<=			
ANR	302353	CallExpression	Z_REFCOUNT ( retval )		302228	0					
ANR	302354	Callee	Z_REFCOUNT		302228	0					
ANR	302355	Identifier	Z_REFCOUNT		302228	0					
ANR	302356	ArgumentList	retval		302228	1					
ANR	302357	Argument	retval		302228	0					
ANR	302358	Identifier	retval		302228	0					
ANR	302359	PrimaryExpression	1		302228	1					
ANR	302360	CompoundStatement		18:38:494:494	302228	1					
ANR	302361	ExpressionStatement	* is_temp = 1	170:3:5566:5578	302228	0	True				
ANR	302362	AssignmentExpression	* is_temp = 1		302228	0		=			
ANR	302363	UnaryOperationExpression	* is_temp		302228	0					
ANR	302364	UnaryOperator	*		302228	0					
ANR	302365	Identifier	is_temp		302228	1					
ANR	302366	PrimaryExpression	1		302228	1					
ANR	302367	ExpressionStatement	ht = Z_ARR ( retval )	171:3:5583:5601	302228	1	True				
ANR	302368	AssignmentExpression	ht = Z_ARR ( retval )		302228	0		=			
ANR	302369	Identifier	ht		302228	0					
ANR	302370	CallExpression	Z_ARR ( retval )		302228	1					
ANR	302371	Callee	Z_ARR		302228	0					
ANR	302372	Identifier	Z_ARR		302228	0					
ANR	302373	ArgumentList	retval		302228	1					
ANR	302374	Argument	retval		302228	0					
ANR	302375	Identifier	retval		302228	0					
ANR	302376	ReturnStatement	return ht ;	172:3:5606:5615	302228	2	True				
ANR	302377	Identifier	ht		302228	0					
ANR	302378	ElseStatement	else		302228	0					
ANR	302379	CompoundStatement		22:9:559:559	302228	0					
ANR	302380	ExpressionStatement	* is_temp = 0	174:3:5631:5643	302228	0	True				
ANR	302381	AssignmentExpression	* is_temp = 0		302228	0		=			
ANR	302382	UnaryOperationExpression	* is_temp		302228	0					
ANR	302383	UnaryOperator	*		302228	0					
ANR	302384	Identifier	is_temp		302228	1					
ANR	302385	PrimaryExpression	0		302228	1					
ANR	302386	ExpressionStatement	zval_ptr_dtor ( & retval )	175:3:5648:5670	302228	1	True				
ANR	302387	CallExpression	zval_ptr_dtor ( & retval )		302228	0					
ANR	302388	Callee	zval_ptr_dtor		302228	0					
ANR	302389	Identifier	zval_ptr_dtor		302228	0					
ANR	302390	ArgumentList	& retval		302228	1					
ANR	302391	Argument	& retval		302228	0					
ANR	302392	UnaryOperationExpression	& retval		302228	0					
ANR	302393	UnaryOperator	&		302228	0					
ANR	302394	Identifier	retval		302228	1					
ANR	302395	ReturnStatement	return Z_ARRVAL ( retval ) ;	176:3:5675:5698	302228	2	True				
ANR	302396	CallExpression	Z_ARRVAL ( retval )		302228	0					
ANR	302397	Callee	Z_ARRVAL		302228	0					
ANR	302398	Identifier	Z_ARRVAL		302228	0					
ANR	302399	ArgumentList	retval		302228	1					
ANR	302400	Argument	retval		302228	0					
ANR	302401	Identifier	retval		302228	0					
ANR	302402	ElseStatement	else		302228	0					
ANR	302403	IfStatement	if ( Z_TYPE ( retval ) == IS_NULL )		302228	0					
ANR	302404	Condition	Z_TYPE ( retval ) == IS_NULL	178:12:5716:5740	302228	0	True				
ANR	302405	EqualityExpression	Z_TYPE ( retval ) == IS_NULL		302228	0		==			
ANR	302406	CallExpression	Z_TYPE ( retval )		302228	0					
ANR	302407	Callee	Z_TYPE		302228	0					
ANR	302408	Identifier	Z_TYPE		302228	0					
ANR	302409	ArgumentList	retval		302228	1					
ANR	302410	Argument	retval		302228	0					
ANR	302411	Identifier	retval		302228	0					
ANR	302412	Identifier	IS_NULL		302228	1					
ANR	302413	CompoundStatement		27:39:676:676	302228	1					
ANR	302414	ExpressionStatement	* is_temp = 1	179:2:5747:5759	302228	0	True				
ANR	302415	AssignmentExpression	* is_temp = 1		302228	0		=			
ANR	302416	UnaryOperationExpression	* is_temp		302228	0					
ANR	302417	UnaryOperator	*		302228	0					
ANR	302418	Identifier	is_temp		302228	1					
ANR	302419	PrimaryExpression	1		302228	1					
ANR	302420	ExpressionStatement	ALLOC_HASHTABLE ( ht )	180:2:5763:5782	302228	1	True				
ANR	302421	CallExpression	ALLOC_HASHTABLE ( ht )		302228	0					
ANR	302422	Callee	ALLOC_HASHTABLE		302228	0					
ANR	302423	Identifier	ALLOC_HASHTABLE		302228	0					
ANR	302424	ArgumentList	ht		302228	1					
ANR	302425	Argument	ht		302228	0					
ANR	302426	Identifier	ht		302228	0					
ANR	302427	ExpressionStatement	"zend_hash_init ( ht , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	181:2:5786:5831	302228	2	True				
ANR	302428	CallExpression	"zend_hash_init ( ht , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		302228	0					
ANR	302429	Callee	zend_hash_init		302228	0					
ANR	302430	Identifier	zend_hash_init		302228	0					
ANR	302431	ArgumentList	ht		302228	1					
ANR	302432	Argument	ht		302228	0					
ANR	302433	Identifier	ht		302228	0					
ANR	302434	Argument	0		302228	1					
ANR	302435	PrimaryExpression	0		302228	0					
ANR	302436	Argument	NULL		302228	2					
ANR	302437	Identifier	NULL		302228	0					
ANR	302438	Argument	ZVAL_PTR_DTOR		302228	3					
ANR	302439	Identifier	ZVAL_PTR_DTOR		302228	0					
ANR	302440	Argument	0		302228	4					
ANR	302441	PrimaryExpression	0		302228	0					
ANR	302442	ReturnStatement	return ht ;	182:2:5835:5844	302228	3	True				
ANR	302443	Identifier	ht		302228	0					
ANR	302444	Statement	zend_error_noreturn	185:1:5851:5869	302228	6	True				
ANR	302445	Statement	(	185:20:5870:5870	302228	7	True				
ANR	302446	Statement	E_ERROR	185:21:5871:5877	302228	8	True				
ANR	302447	Statement	","	185:28:5878:5878	302228	9	True				
ANR	302448	Statement	ZEND_DEBUGINFO_FUNC_NAME	185:30:5880:5903	302228	10	True				
ANR	302449	Statement	"""() must return an array"""	185:55:5905:5929	302228	11	True				
ANR	302450	Statement	)	185:80:5930:5930	302228	12	True				
ANR	302451	ExpressionStatement		185:81:5931:5931	302228	13	True				
ANR	302452	ReturnStatement	return NULL ;	187:1:5935:5946	302228	14	True				
ANR	302453	Identifier	NULL		302228	0					
ANR	302454	ReturnType	ZEND_API HashTable *		302228	1					
ANR	302455	Identifier	zend_std_get_debug_info		302228	2					
ANR	302456	ParameterList	"zval * object , int * is_temp"		302228	3					
ANR	302457	Parameter	zval * object	151:44:5028:5039	302228	0	True				
ANR	302458	ParameterType	zval *		302228	0					
ANR	302459	Identifier	object		302228	1					
ANR	302460	Parameter	int * is_temp	151:58:5042:5053	302228	1	True				
ANR	302461	ParameterType	int *		302228	0					
ANR	302462	Identifier	is_temp		302228	1					
ANR	302463	CFGEntryNode	ENTRY		302228		True				
ANR	302464	CFGExitNode	EXIT		302228		True				
ANR	302465	Symbol	ce		302228						
ANR	302466	Symbol	NULL		302228						
ANR	302467	Symbol	get_properties		302228						
ANR	302468	Symbol	Z_TYPE		302228						
ANR	302469	Symbol	* ce		302228						
ANR	302470	Symbol	Z_ARRVAL		302228						
ANR	302471	Symbol	ht		302228						
ANR	302472	Symbol	Z_REFCOUNT		302228						
ANR	302473	Symbol	ZEND_DEBUGINFO_FUNC_NAME		302228						
ANR	302474	Symbol	retval		302228						
ANR	302475	Symbol	* is_temp		302228						
ANR	302476	Symbol	ZVAL_PTR_DTOR		302228						
ANR	302477	Symbol	ce -> __debugInfo		302228						
ANR	302478	Symbol	& ce -> __debugInfo		302228						
ANR	302479	Symbol	Z_IMMUTABLE		302228						
ANR	302480	Symbol	IS_NULL		302228						
ANR	302481	Symbol	is_temp		302228						
ANR	302482	Symbol	IS_ARRAY		302228						
ANR	302483	Symbol	Z_OBJCE_P		302228						
ANR	302484	Symbol	& retval		302228						
ANR	302485	Symbol	Z_OBJ_HANDLER_P		302228						
ANR	302486	Symbol	Z_ARR		302228						
ANR	302487	Symbol	zend_array_dup		302228						
ANR	302488	Symbol	object		302228						
ANR	302489	Function	zend_std_call_getter	191:0:6077:6509							
ANR	302490	FunctionDef	"zend_std_call_getter (zval * object , zval * member , zval * retval)"		302489	0					
ANR	302491	CompoundStatement		192:0:6162:6509	302489	0					
ANR	302492	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	193:1:6165:6205	302489	0	True				
ANR	302493	IdentifierDecl	* ce = Z_OBJCE_P ( object )		302489	0					
ANR	302494	IdentifierDeclType	zend_class_entry *		302489	0					
ANR	302495	Identifier	ce		302489	1					
ANR	302496	AssignmentExpression	* ce = Z_OBJCE_P ( object )		302489	2		=			
ANR	302497	Identifier	ce		302489	0					
ANR	302498	CallExpression	Z_OBJCE_P ( object )		302489	1					
ANR	302499	Callee	Z_OBJCE_P		302489	0					
ANR	302500	Identifier	Z_OBJCE_P		302489	0					
ANR	302501	ArgumentList	object		302489	1					
ANR	302502	Argument	object		302489	0					
ANR	302503	Identifier	object		302489	0					
ANR	302504	IfStatement	if ( Z_REFCOUNTED_P ( member ) )		302489	1					
ANR	302505	Condition	Z_REFCOUNTED_P ( member )	200:5:6346:6367	302489	0	True				
ANR	302506	CallExpression	Z_REFCOUNTED_P ( member )		302489	0					
ANR	302507	Callee	Z_REFCOUNTED_P		302489	0					
ANR	302508	Identifier	Z_REFCOUNTED_P		302489	0					
ANR	302509	ArgumentList	member		302489	1					
ANR	302510	Argument	member		302489	0					
ANR	302511	Identifier	member		302489	0					
ANR	302512	ExpressionStatement	Z_ADDREF_P ( member )	200:29:6370:6388	302489	1	True				
ANR	302513	CallExpression	Z_ADDREF_P ( member )		302489	0					
ANR	302514	Callee	Z_ADDREF_P		302489	0					
ANR	302515	Identifier	Z_ADDREF_P		302489	0					
ANR	302516	ArgumentList	member		302489	1					
ANR	302517	Argument	member		302489	0					
ANR	302518	Identifier	member		302489	0					
ANR	302519	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , & ce -> __get , ZEND_GET_FUNC_NAME , retval , member )"	202:1:6392:6482	302489	2	True				
ANR	302520	CallExpression	"zend_call_method_with_1_params ( object , ce , & ce -> __get , ZEND_GET_FUNC_NAME , retval , member )"		302489	0					
ANR	302521	Callee	zend_call_method_with_1_params		302489	0					
ANR	302522	Identifier	zend_call_method_with_1_params		302489	0					
ANR	302523	ArgumentList	object		302489	1					
ANR	302524	Argument	object		302489	0					
ANR	302525	Identifier	object		302489	0					
ANR	302526	Argument	ce		302489	1					
ANR	302527	Identifier	ce		302489	0					
ANR	302528	Argument	& ce -> __get		302489	2					
ANR	302529	UnaryOperationExpression	& ce -> __get		302489	0					
ANR	302530	UnaryOperator	&		302489	0					
ANR	302531	PtrMemberAccess	ce -> __get		302489	1					
ANR	302532	Identifier	ce		302489	0					
ANR	302533	Identifier	__get		302489	1					
ANR	302534	Argument	ZEND_GET_FUNC_NAME		302489	3					
ANR	302535	Identifier	ZEND_GET_FUNC_NAME		302489	0					
ANR	302536	Argument	retval		302489	4					
ANR	302537	Identifier	retval		302489	0					
ANR	302538	Argument	member		302489	5					
ANR	302539	Identifier	member		302489	0					
ANR	302540	ExpressionStatement	zval_ptr_dtor ( member )	204:1:6486:6507	302489	3	True				
ANR	302541	CallExpression	zval_ptr_dtor ( member )		302489	0					
ANR	302542	Callee	zval_ptr_dtor		302489	0					
ANR	302543	Identifier	zval_ptr_dtor		302489	0					
ANR	302544	ArgumentList	member		302489	1					
ANR	302545	Argument	member		302489	0					
ANR	302546	Identifier	member		302489	0					
ANR	302547	ReturnType	static void		302489	1					
ANR	302548	Identifier	zend_std_call_getter		302489	2					
ANR	302549	ParameterList	"zval * object , zval * member , zval * retval"		302489	3					
ANR	302550	Parameter	zval * object	191:33:6110:6121	302489	0	True				
ANR	302551	ParameterType	zval *		302489	0					
ANR	302552	Identifier	object		302489	1					
ANR	302553	Parameter	zval * member	191:47:6124:6135	302489	1	True				
ANR	302554	ParameterType	zval *		302489	0					
ANR	302555	Identifier	member		302489	1					
ANR	302556	Parameter	zval * retval	191:61:6138:6149	302489	2	True				
ANR	302557	ParameterType	zval *		302489	0					
ANR	302558	Identifier	retval		302489	1					
ANR	302559	CFGEntryNode	ENTRY		302489		True				
ANR	302560	CFGExitNode	EXIT		302489		True				
ANR	302561	Symbol	& ce -> __get		302489						
ANR	302562	Symbol	ce		302489						
ANR	302563	Symbol	member		302489						
ANR	302564	Symbol	Z_OBJCE_P		302489						
ANR	302565	Symbol	Z_REFCOUNTED_P		302489						
ANR	302566	Symbol	ZEND_GET_FUNC_NAME		302489						
ANR	302567	Symbol	retval		302489						
ANR	302568	Symbol	object		302489						
ANR	302569	Function	zend_std_call_setter	208:0:6522:7245							
ANR	302570	FunctionDef	"zend_std_call_setter (zval * object , zval * member , zval * value)"		302569	0					
ANR	302571	CompoundStatement		209:0:6605:7245	302569	0					
ANR	302572	IdentifierDeclStatement	zval retval ;	210:1:6608:6619	302569	0	True				
ANR	302573	IdentifierDecl	retval		302569	0					
ANR	302574	IdentifierDeclType	zval		302569	0					
ANR	302575	Identifier	retval		302569	1					
ANR	302576	IdentifierDeclStatement	int result ;	211:1:6622:6632	302569	1	True				
ANR	302577	IdentifierDecl	result		302569	0					
ANR	302578	IdentifierDeclType	int		302569	0					
ANR	302579	Identifier	result		302569	1					
ANR	302580	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	212:1:6635:6675	302569	2	True				
ANR	302581	IdentifierDecl	* ce = Z_OBJCE_P ( object )		302569	0					
ANR	302582	IdentifierDeclType	zend_class_entry *		302569	0					
ANR	302583	Identifier	ce		302569	1					
ANR	302584	AssignmentExpression	* ce = Z_OBJCE_P ( object )		302569	2		=			
ANR	302585	Identifier	ce		302569	0					
ANR	302586	CallExpression	Z_OBJCE_P ( object )		302569	1					
ANR	302587	Callee	Z_OBJCE_P		302569	0					
ANR	302588	Identifier	Z_OBJCE_P		302569	0					
ANR	302589	ArgumentList	object		302569	1					
ANR	302590	Argument	object		302569	0					
ANR	302591	Identifier	object		302569	0					
ANR	302592	IfStatement	if ( Z_REFCOUNTED_P ( member ) )		302569	3					
ANR	302593	Condition	Z_REFCOUNTED_P ( member )	214:5:6683:6704	302569	0	True				
ANR	302594	CallExpression	Z_REFCOUNTED_P ( member )		302569	0					
ANR	302595	Callee	Z_REFCOUNTED_P		302569	0					
ANR	302596	Identifier	Z_REFCOUNTED_P		302569	0					
ANR	302597	ArgumentList	member		302569	1					
ANR	302598	Argument	member		302569	0					
ANR	302599	Identifier	member		302569	0					
ANR	302600	ExpressionStatement	Z_ADDREF_P ( member )	214:29:6707:6725	302569	1	True				
ANR	302601	CallExpression	Z_ADDREF_P ( member )		302569	0					
ANR	302602	Callee	Z_ADDREF_P		302569	0					
ANR	302603	Identifier	Z_ADDREF_P		302569	0					
ANR	302604	ArgumentList	member		302569	1					
ANR	302605	Argument	member		302569	0					
ANR	302606	Identifier	member		302569	0					
ANR	302607	IfStatement	if ( Z_REFCOUNTED_P ( value ) )		302569	4					
ANR	302608	Condition	Z_REFCOUNTED_P ( value )	215:5:6732:6752	302569	0	True				
ANR	302609	CallExpression	Z_REFCOUNTED_P ( value )		302569	0					
ANR	302610	Callee	Z_REFCOUNTED_P		302569	0					
ANR	302611	Identifier	Z_REFCOUNTED_P		302569	0					
ANR	302612	ArgumentList	value		302569	1					
ANR	302613	Argument	value		302569	0					
ANR	302614	Identifier	value		302569	0					
ANR	302615	ExpressionStatement	Z_ADDREF_P ( value )	215:28:6755:6772	302569	1	True				
ANR	302616	CallExpression	Z_ADDREF_P ( value )		302569	0					
ANR	302617	Callee	Z_ADDREF_P		302569	0					
ANR	302618	Identifier	Z_ADDREF_P		302569	0					
ANR	302619	ArgumentList	value		302569	1					
ANR	302620	Argument	value		302569	0					
ANR	302621	Identifier	value		302569	0					
ANR	302622	ExpressionStatement	"zend_call_method_with_2_params ( object , ce , & ce -> __set , ZEND_SET_FUNC_NAME , & retval , member , value )"	223:1:6931:7029	302569	5	True				
ANR	302623	CallExpression	"zend_call_method_with_2_params ( object , ce , & ce -> __set , ZEND_SET_FUNC_NAME , & retval , member , value )"		302569	0					
ANR	302624	Callee	zend_call_method_with_2_params		302569	0					
ANR	302625	Identifier	zend_call_method_with_2_params		302569	0					
ANR	302626	ArgumentList	object		302569	1					
ANR	302627	Argument	object		302569	0					
ANR	302628	Identifier	object		302569	0					
ANR	302629	Argument	ce		302569	1					
ANR	302630	Identifier	ce		302569	0					
ANR	302631	Argument	& ce -> __set		302569	2					
ANR	302632	UnaryOperationExpression	& ce -> __set		302569	0					
ANR	302633	UnaryOperator	&		302569	0					
ANR	302634	PtrMemberAccess	ce -> __set		302569	1					
ANR	302635	Identifier	ce		302569	0					
ANR	302636	Identifier	__set		302569	1					
ANR	302637	Argument	ZEND_SET_FUNC_NAME		302569	3					
ANR	302638	Identifier	ZEND_SET_FUNC_NAME		302569	0					
ANR	302639	Argument	& retval		302569	4					
ANR	302640	UnaryOperationExpression	& retval		302569	0					
ANR	302641	UnaryOperator	&		302569	0					
ANR	302642	Identifier	retval		302569	1					
ANR	302643	Argument	member		302569	5					
ANR	302644	Identifier	member		302569	0					
ANR	302645	Argument	value		302569	6					
ANR	302646	Identifier	value		302569	0					
ANR	302647	ExpressionStatement	zval_ptr_dtor ( member )	225:1:7033:7054	302569	6	True				
ANR	302648	CallExpression	zval_ptr_dtor ( member )		302569	0					
ANR	302649	Callee	zval_ptr_dtor		302569	0					
ANR	302650	Identifier	zval_ptr_dtor		302569	0					
ANR	302651	ArgumentList	member		302569	1					
ANR	302652	Argument	member		302569	0					
ANR	302653	Identifier	member		302569	0					
ANR	302654	ExpressionStatement	zval_ptr_dtor ( value )	226:1:7057:7077	302569	7	True				
ANR	302655	CallExpression	zval_ptr_dtor ( value )		302569	0					
ANR	302656	Callee	zval_ptr_dtor		302569	0					
ANR	302657	Identifier	zval_ptr_dtor		302569	0					
ANR	302658	ArgumentList	value		302569	1					
ANR	302659	Argument	value		302569	0					
ANR	302660	Identifier	value		302569	0					
ANR	302661	IfStatement	if ( Z_TYPE ( retval ) != IS_UNDEF )		302569	8					
ANR	302662	Condition	Z_TYPE ( retval ) != IS_UNDEF	228:5:7085:7110	302569	0	True				
ANR	302663	EqualityExpression	Z_TYPE ( retval ) != IS_UNDEF		302569	0		!=			
ANR	302664	CallExpression	Z_TYPE ( retval )		302569	0					
ANR	302665	Callee	Z_TYPE		302569	0					
ANR	302666	Identifier	Z_TYPE		302569	0					
ANR	302667	ArgumentList	retval		302569	1					
ANR	302668	Argument	retval		302569	0					
ANR	302669	Identifier	retval		302569	0					
ANR	302670	Identifier	IS_UNDEF		302569	1					
ANR	302671	CompoundStatement		20:33:507:507	302569	1					
ANR	302672	ExpressionStatement	result = i_zend_is_true ( & retval ) ? SUCCESS : FAILURE	229:2:7117:7169	302569	0	True				
ANR	302673	AssignmentExpression	result = i_zend_is_true ( & retval ) ? SUCCESS : FAILURE		302569	0		=			
ANR	302674	Identifier	result		302569	0					
ANR	302675	ConditionalExpression	i_zend_is_true ( & retval ) ? SUCCESS : FAILURE		302569	1					
ANR	302676	Condition	i_zend_is_true ( & retval )		302569	0					
ANR	302677	CallExpression	i_zend_is_true ( & retval )		302569	0					
ANR	302678	Callee	i_zend_is_true		302569	0					
ANR	302679	Identifier	i_zend_is_true		302569	0					
ANR	302680	ArgumentList	& retval		302569	1					
ANR	302681	Argument	& retval		302569	0					
ANR	302682	UnaryOperationExpression	& retval		302569	0					
ANR	302683	UnaryOperator	&		302569	0					
ANR	302684	Identifier	retval		302569	1					
ANR	302685	Identifier	SUCCESS		302569	1					
ANR	302686	Identifier	FAILURE		302569	2					
ANR	302687	ExpressionStatement	zval_ptr_dtor ( & retval )	230:2:7173:7195	302569	1	True				
ANR	302688	CallExpression	zval_ptr_dtor ( & retval )		302569	0					
ANR	302689	Callee	zval_ptr_dtor		302569	0					
ANR	302690	Identifier	zval_ptr_dtor		302569	0					
ANR	302691	ArgumentList	& retval		302569	1					
ANR	302692	Argument	& retval		302569	0					
ANR	302693	UnaryOperationExpression	& retval		302569	0					
ANR	302694	UnaryOperator	&		302569	0					
ANR	302695	Identifier	retval		302569	1					
ANR	302696	ReturnStatement	return result ;	231:2:7199:7212	302569	2	True				
ANR	302697	Identifier	result		302569	0					
ANR	302698	ElseStatement	else		302569	0					
ANR	302699	CompoundStatement		24:8:616:616	302569	0					
ANR	302700	ReturnStatement	return FAILURE ;	233:2:7226:7240	302569	0	True				
ANR	302701	Identifier	FAILURE		302569	0					
ANR	302702	ReturnType	static int		302569	1					
ANR	302703	Identifier	zend_std_call_setter		302569	2					
ANR	302704	ParameterList	"zval * object , zval * member , zval * value"		302569	3					
ANR	302705	Parameter	zval * object	208:32:6554:6565	302569	0	True				
ANR	302706	ParameterType	zval *		302569	0					
ANR	302707	Identifier	object		302569	1					
ANR	302708	Parameter	zval * member	208:46:6568:6579	302569	1	True				
ANR	302709	ParameterType	zval *		302569	0					
ANR	302710	Identifier	member		302569	1					
ANR	302711	Parameter	zval * value	208:60:6582:6592	302569	2	True				
ANR	302712	ParameterType	zval *		302569	0					
ANR	302713	Identifier	value		302569	1					
ANR	302714	CFGEntryNode	ENTRY		302569		True				
ANR	302715	CFGExitNode	EXIT		302569		True				
ANR	302716	Symbol	ce		302569						
ANR	302717	Symbol	SUCCESS		302569						
ANR	302718	Symbol	Z_TYPE		302569						
ANR	302719	Symbol	i_zend_is_true		302569						
ANR	302720	Symbol	& ce -> __set		302569						
ANR	302721	Symbol	FAILURE		302569						
ANR	302722	Symbol	retval		302569						
ANR	302723	Symbol	result		302569						
ANR	302724	Symbol	member		302569						
ANR	302725	Symbol	Z_OBJCE_P		302569						
ANR	302726	Symbol	& retval		302569						
ANR	302727	Symbol	Z_REFCOUNTED_P		302569						
ANR	302728	Symbol	value		302569						
ANR	302729	Symbol	ZEND_SET_FUNC_NAME		302569						
ANR	302730	Symbol	IS_UNDEF		302569						
ANR	302731	Symbol	object		302569						
ANR	302732	Function	zend_std_call_unsetter	238:0:7258:7622							
ANR	302733	FunctionDef	"zend_std_call_unsetter (zval * object , zval * member)"		302732	0					
ANR	302734	CompoundStatement		239:0:7331:7622	302732	0					
ANR	302735	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	240:1:7334:7374	302732	0	True				
ANR	302736	IdentifierDecl	* ce = Z_OBJCE_P ( object )		302732	0					
ANR	302737	IdentifierDeclType	zend_class_entry *		302732	0					
ANR	302738	Identifier	ce		302732	1					
ANR	302739	AssignmentExpression	* ce = Z_OBJCE_P ( object )		302732	2		=			
ANR	302740	Identifier	ce		302732	0					
ANR	302741	CallExpression	Z_OBJCE_P ( object )		302732	1					
ANR	302742	Callee	Z_OBJCE_P		302732	0					
ANR	302743	Identifier	Z_OBJCE_P		302732	0					
ANR	302744	ArgumentList	object		302732	1					
ANR	302745	Argument	object		302732	0					
ANR	302746	Identifier	object		302732	0					
ANR	302747	IfStatement	if ( Z_REFCOUNTED_P ( member ) )		302732	1					
ANR	302748	Condition	Z_REFCOUNTED_P ( member )	246:5:7457:7478	302732	0	True				
ANR	302749	CallExpression	Z_REFCOUNTED_P ( member )		302732	0					
ANR	302750	Callee	Z_REFCOUNTED_P		302732	0					
ANR	302751	Identifier	Z_REFCOUNTED_P		302732	0					
ANR	302752	ArgumentList	member		302732	1					
ANR	302753	Argument	member		302732	0					
ANR	302754	Identifier	member		302732	0					
ANR	302755	ExpressionStatement	Z_ADDREF_P ( member )	246:29:7481:7499	302732	1	True				
ANR	302756	CallExpression	Z_ADDREF_P ( member )		302732	0					
ANR	302757	Callee	Z_ADDREF_P		302732	0					
ANR	302758	Identifier	Z_ADDREF_P		302732	0					
ANR	302759	ArgumentList	member		302732	1					
ANR	302760	Argument	member		302732	0					
ANR	302761	Identifier	member		302732	0					
ANR	302762	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , & ce -> __unset , ZEND_UNSET_FUNC_NAME , NULL , member )"	248:1:7503:7595	302732	2	True				
ANR	302763	CallExpression	"zend_call_method_with_1_params ( object , ce , & ce -> __unset , ZEND_UNSET_FUNC_NAME , NULL , member )"		302732	0					
ANR	302764	Callee	zend_call_method_with_1_params		302732	0					
ANR	302765	Identifier	zend_call_method_with_1_params		302732	0					
ANR	302766	ArgumentList	object		302732	1					
ANR	302767	Argument	object		302732	0					
ANR	302768	Identifier	object		302732	0					
ANR	302769	Argument	ce		302732	1					
ANR	302770	Identifier	ce		302732	0					
ANR	302771	Argument	& ce -> __unset		302732	2					
ANR	302772	UnaryOperationExpression	& ce -> __unset		302732	0					
ANR	302773	UnaryOperator	&		302732	0					
ANR	302774	PtrMemberAccess	ce -> __unset		302732	1					
ANR	302775	Identifier	ce		302732	0					
ANR	302776	Identifier	__unset		302732	1					
ANR	302777	Argument	ZEND_UNSET_FUNC_NAME		302732	3					
ANR	302778	Identifier	ZEND_UNSET_FUNC_NAME		302732	0					
ANR	302779	Argument	NULL		302732	4					
ANR	302780	Identifier	NULL		302732	0					
ANR	302781	Argument	member		302732	5					
ANR	302782	Identifier	member		302732	0					
ANR	302783	ExpressionStatement	zval_ptr_dtor ( member )	250:1:7599:7620	302732	3	True				
ANR	302784	CallExpression	zval_ptr_dtor ( member )		302732	0					
ANR	302785	Callee	zval_ptr_dtor		302732	0					
ANR	302786	Identifier	zval_ptr_dtor		302732	0					
ANR	302787	ArgumentList	member		302732	1					
ANR	302788	Argument	member		302732	0					
ANR	302789	Identifier	member		302732	0					
ANR	302790	ReturnType	static void		302732	1					
ANR	302791	Identifier	zend_std_call_unsetter		302732	2					
ANR	302792	ParameterList	"zval * object , zval * member"		302732	3					
ANR	302793	Parameter	zval * object	238:35:7293:7304	302732	0	True				
ANR	302794	ParameterType	zval *		302732	0					
ANR	302795	Identifier	object		302732	1					
ANR	302796	Parameter	zval * member	238:49:7307:7318	302732	1	True				
ANR	302797	ParameterType	zval *		302732	0					
ANR	302798	Identifier	member		302732	1					
ANR	302799	CFGEntryNode	ENTRY		302732		True				
ANR	302800	CFGExitNode	EXIT		302732		True				
ANR	302801	Symbol	ce		302732						
ANR	302802	Symbol	NULL		302732						
ANR	302803	Symbol	member		302732						
ANR	302804	Symbol	Z_OBJCE_P		302732						
ANR	302805	Symbol	Z_REFCOUNTED_P		302732						
ANR	302806	Symbol	& ce -> __unset		302732						
ANR	302807	Symbol	ZEND_UNSET_FUNC_NAME		302732						
ANR	302808	Symbol	object		302732						
ANR	302809	Function	zend_std_call_issetter	254:0:7635:8072							
ANR	302810	FunctionDef	"zend_std_call_issetter (zval * object , zval * member , zval * retval)"		302809	0					
ANR	302811	CompoundStatement		255:0:7722:8072	302809	0					
ANR	302812	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	256:1:7725:7765	302809	0	True				
ANR	302813	IdentifierDecl	* ce = Z_OBJCE_P ( object )		302809	0					
ANR	302814	IdentifierDeclType	zend_class_entry *		302809	0					
ANR	302815	Identifier	ce		302809	1					
ANR	302816	AssignmentExpression	* ce = Z_OBJCE_P ( object )		302809	2		=			
ANR	302817	Identifier	ce		302809	0					
ANR	302818	CallExpression	Z_OBJCE_P ( object )		302809	1					
ANR	302819	Callee	Z_OBJCE_P		302809	0					
ANR	302820	Identifier	Z_OBJCE_P		302809	0					
ANR	302821	ArgumentList	object		302809	1					
ANR	302822	Argument	object		302809	0					
ANR	302823	Identifier	object		302809	0					
ANR	302824	IfStatement	if ( Z_REFCOUNTED_P ( member ) )		302809	1					
ANR	302825	Condition	Z_REFCOUNTED_P ( member )	264:5:7905:7926	302809	0	True				
ANR	302826	CallExpression	Z_REFCOUNTED_P ( member )		302809	0					
ANR	302827	Callee	Z_REFCOUNTED_P		302809	0					
ANR	302828	Identifier	Z_REFCOUNTED_P		302809	0					
ANR	302829	ArgumentList	member		302809	1					
ANR	302830	Argument	member		302809	0					
ANR	302831	Identifier	member		302809	0					
ANR	302832	ExpressionStatement	Z_ADDREF_P ( member )	264:29:7929:7947	302809	1	True				
ANR	302833	CallExpression	Z_ADDREF_P ( member )		302809	0					
ANR	302834	Callee	Z_ADDREF_P		302809	0					
ANR	302835	Identifier	Z_ADDREF_P		302809	0					
ANR	302836	ArgumentList	member		302809	1					
ANR	302837	Argument	member		302809	0					
ANR	302838	Identifier	member		302809	0					
ANR	302839	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , & ce -> __isset , ZEND_ISSET_FUNC_NAME , retval , member )"	266:1:7951:8045	302809	2	True				
ANR	302840	CallExpression	"zend_call_method_with_1_params ( object , ce , & ce -> __isset , ZEND_ISSET_FUNC_NAME , retval , member )"		302809	0					
ANR	302841	Callee	zend_call_method_with_1_params		302809	0					
ANR	302842	Identifier	zend_call_method_with_1_params		302809	0					
ANR	302843	ArgumentList	object		302809	1					
ANR	302844	Argument	object		302809	0					
ANR	302845	Identifier	object		302809	0					
ANR	302846	Argument	ce		302809	1					
ANR	302847	Identifier	ce		302809	0					
ANR	302848	Argument	& ce -> __isset		302809	2					
ANR	302849	UnaryOperationExpression	& ce -> __isset		302809	0					
ANR	302850	UnaryOperator	&		302809	0					
ANR	302851	PtrMemberAccess	ce -> __isset		302809	1					
ANR	302852	Identifier	ce		302809	0					
ANR	302853	Identifier	__isset		302809	1					
ANR	302854	Argument	ZEND_ISSET_FUNC_NAME		302809	3					
ANR	302855	Identifier	ZEND_ISSET_FUNC_NAME		302809	0					
ANR	302856	Argument	retval		302809	4					
ANR	302857	Identifier	retval		302809	0					
ANR	302858	Argument	member		302809	5					
ANR	302859	Identifier	member		302809	0					
ANR	302860	ExpressionStatement	zval_ptr_dtor ( member )	268:1:8049:8070	302809	3	True				
ANR	302861	CallExpression	zval_ptr_dtor ( member )		302809	0					
ANR	302862	Callee	zval_ptr_dtor		302809	0					
ANR	302863	Identifier	zval_ptr_dtor		302809	0					
ANR	302864	ArgumentList	member		302809	1					
ANR	302865	Argument	member		302809	0					
ANR	302866	Identifier	member		302809	0					
ANR	302867	ReturnType	static void		302809	1					
ANR	302868	Identifier	zend_std_call_issetter		302809	2					
ANR	302869	ParameterList	"zval * object , zval * member , zval * retval"		302809	3					
ANR	302870	Parameter	zval * object	254:35:7670:7681	302809	0	True				
ANR	302871	ParameterType	zval *		302809	0					
ANR	302872	Identifier	object		302809	1					
ANR	302873	Parameter	zval * member	254:49:7684:7695	302809	1	True				
ANR	302874	ParameterType	zval *		302809	0					
ANR	302875	Identifier	member		302809	1					
ANR	302876	Parameter	zval * retval	254:63:7698:7709	302809	2	True				
ANR	302877	ParameterType	zval *		302809	0					
ANR	302878	Identifier	retval		302809	1					
ANR	302879	CFGEntryNode	ENTRY		302809		True				
ANR	302880	CFGExitNode	EXIT		302809		True				
ANR	302881	Symbol	ce		302809						
ANR	302882	Symbol	& ce -> __isset		302809						
ANR	302883	Symbol	member		302809						
ANR	302884	Symbol	Z_OBJCE_P		302809						
ANR	302885	Symbol	ZEND_ISSET_FUNC_NAME		302809						
ANR	302886	Symbol	Z_REFCOUNTED_P		302809						
ANR	302887	Symbol	retval		302809						
ANR	302888	Symbol	object		302809						
ANR	302889	Function	zend_verify_property_access	272:0:8085:8520							
ANR	302890	FunctionDef	"zend_verify_property_access (zend_property_info * property_info , zend_class_entry * ce)"		302889	0					
ANR	302891	CompoundStatement		273:0:8210:8520	302889	0					
ANR	302892	IfStatement	if ( property_info -> flags & ZEND_ACC_PUBLIC )		302889	0					
ANR	302893	Condition	property_info -> flags & ZEND_ACC_PUBLIC	274:5:8217:8254	302889	0	True				
ANR	302894	BitAndExpression	property_info -> flags & ZEND_ACC_PUBLIC		302889	0		&			
ANR	302895	PtrMemberAccess	property_info -> flags		302889	0					
ANR	302896	Identifier	property_info		302889	0					
ANR	302897	Identifier	flags		302889	1					
ANR	302898	Identifier	ZEND_ACC_PUBLIC		302889	1					
ANR	302899	CompoundStatement		2:45:46:46	302889	1					
ANR	302900	ReturnStatement	return 1 ;	275:2:8261:8269	302889	0	True				
ANR	302901	PrimaryExpression	1		302889	0					
ANR	302902	ElseStatement	else		302889	0					
ANR	302903	IfStatement	if ( property_info -> flags & ZEND_ACC_PRIVATE )		302889	0					
ANR	302904	Condition	property_info -> flags & ZEND_ACC_PRIVATE	276:12:8283:8321	302889	0	True				
ANR	302905	BitAndExpression	property_info -> flags & ZEND_ACC_PRIVATE		302889	0		&			
ANR	302906	PtrMemberAccess	property_info -> flags		302889	0					
ANR	302907	Identifier	property_info		302889	0					
ANR	302908	Identifier	flags		302889	1					
ANR	302909	Identifier	ZEND_ACC_PRIVATE		302889	1					
ANR	302910	CompoundStatement		4:53:113:113	302889	1					
ANR	302911	ReturnStatement	return ( ce == EG ( scope ) || property_info -> ce == EG ( scope ) ) ;	277:2:8328:8386	302889	0	True				
ANR	302912	OrExpression	ce == EG ( scope ) || property_info -> ce == EG ( scope )		302889	0		||			
ANR	302913	EqualityExpression	ce == EG ( scope )		302889	0		==			
ANR	302914	Identifier	ce		302889	0					
ANR	302915	CallExpression	EG ( scope )		302889	1					
ANR	302916	Callee	EG		302889	0					
ANR	302917	Identifier	EG		302889	0					
ANR	302918	ArgumentList	scope		302889	1					
ANR	302919	Argument	scope		302889	0					
ANR	302920	Identifier	scope		302889	0					
ANR	302921	EqualityExpression	property_info -> ce == EG ( scope )		302889	1		==			
ANR	302922	PtrMemberAccess	property_info -> ce		302889	0					
ANR	302923	Identifier	property_info		302889	0					
ANR	302924	Identifier	ce		302889	1					
ANR	302925	CallExpression	EG ( scope )		302889	1					
ANR	302926	Callee	EG		302889	0					
ANR	302927	Identifier	EG		302889	0					
ANR	302928	ArgumentList	scope		302889	1					
ANR	302929	Argument	scope		302889	0					
ANR	302930	Identifier	scope		302889	0					
ANR	302931	ElseStatement	else		302889	0					
ANR	302932	IfStatement	if ( property_info -> flags & ZEND_ACC_PROTECTED )		302889	0					
ANR	302933	Condition	property_info -> flags & ZEND_ACC_PROTECTED	278:12:8400:8440	302889	0	True				
ANR	302934	BitAndExpression	property_info -> flags & ZEND_ACC_PROTECTED		302889	0		&			
ANR	302935	PtrMemberAccess	property_info -> flags		302889	0					
ANR	302936	Identifier	property_info		302889	0					
ANR	302937	Identifier	flags		302889	1					
ANR	302938	Identifier	ZEND_ACC_PROTECTED		302889	1					
ANR	302939	CompoundStatement		6:55:232:232	302889	1					
ANR	302940	ReturnStatement	"return zend_check_protected ( property_info -> ce , EG ( scope ) ) ;"	279:2:8447:8504	302889	0	True				
ANR	302941	CallExpression	"zend_check_protected ( property_info -> ce , EG ( scope ) )"		302889	0					
ANR	302942	Callee	zend_check_protected		302889	0					
ANR	302943	Identifier	zend_check_protected		302889	0					
ANR	302944	ArgumentList	property_info -> ce		302889	1					
ANR	302945	Argument	property_info -> ce		302889	0					
ANR	302946	PtrMemberAccess	property_info -> ce		302889	0					
ANR	302947	Identifier	property_info		302889	0					
ANR	302948	Identifier	ce		302889	1					
ANR	302949	Argument	EG ( scope )		302889	1					
ANR	302950	CallExpression	EG ( scope )		302889	0					
ANR	302951	Callee	EG		302889	0					
ANR	302952	Identifier	EG		302889	0					
ANR	302953	ArgumentList	scope		302889	1					
ANR	302954	Argument	scope		302889	0					
ANR	302955	Identifier	scope		302889	0					
ANR	302956	ReturnStatement	return 0 ;	281:1:8510:8518	302889	1	True				
ANR	302957	PrimaryExpression	0		302889	0					
ANR	302958	ReturnType	static zend_always_inline int		302889	1					
ANR	302959	Identifier	zend_verify_property_access		302889	2					
ANR	302960	ParameterList	"zend_property_info * property_info , zend_class_entry * ce"		302889	3					
ANR	302961	Parameter	zend_property_info * property_info	272:58:8143:8175	302889	0	True				
ANR	302962	ParameterType	zend_property_info *		302889	0					
ANR	302963	Identifier	property_info		302889	1					
ANR	302964	Parameter	zend_class_entry * ce	272:93:8178:8197	302889	1	True				
ANR	302965	ParameterType	zend_class_entry *		302889	0					
ANR	302966	Identifier	ce		302889	1					
ANR	302967	CFGEntryNode	ENTRY		302889		True				
ANR	302968	CFGExitNode	EXIT		302889		True				
ANR	302969	Symbol	property_info		302889						
ANR	302970	Symbol	ce		302889						
ANR	302971	Symbol	EG		302889						
ANR	302972	Symbol	* property_info		302889						
ANR	302973	Symbol	ZEND_ACC_PUBLIC		302889						
ANR	302974	Symbol	scope		302889						
ANR	302975	Symbol	zend_check_protected		302889						
ANR	302976	Symbol	ZEND_ACC_PROTECTED		302889						
ANR	302977	Symbol	property_info -> flags		302889						
ANR	302978	Symbol	property_info -> ce		302889						
ANR	302979	Symbol	ZEND_ACC_PRIVATE		302889						
ANR	302980	Function	is_derived_class	285:0:8533:8826							
ANR	302981	FunctionDef	"is_derived_class (zend_class_entry * child_class , zend_class_entry * parent_class)"		302980	0					
ANR	302982	CompoundStatement		286:0:8659:8826	302980	0					
ANR	302983	ExpressionStatement	child_class = child_class -> parent	287:1:8662:8695	302980	0	True				
ANR	302984	AssignmentExpression	child_class = child_class -> parent		302980	0		=			
ANR	302985	Identifier	child_class		302980	0					
ANR	302986	PtrMemberAccess	child_class -> parent		302980	1					
ANR	302987	Identifier	child_class		302980	0					
ANR	302988	Identifier	parent		302980	1					
ANR	302989	WhileStatement	while ( child_class )		302980	1					
ANR	302990	Condition	child_class	288:8:8705:8715	302980	0	True				
ANR	302991	Identifier	child_class		302980	0					
ANR	302992	CompoundStatement		3:21:58:58	302980	1					
ANR	302993	IfStatement	if ( child_class == parent_class )		302980	0					
ANR	302994	Condition	child_class == parent_class	289:6:8726:8752	302980	0	True				
ANR	302995	EqualityExpression	child_class == parent_class		302980	0		==			
ANR	302996	Identifier	child_class		302980	0					
ANR	302997	Identifier	parent_class		302980	1					
ANR	302998	CompoundStatement		4:35:95:95	302980	1					
ANR	302999	ReturnStatement	return 1 ;	290:3:8760:8768	302980	0	True				
ANR	303000	PrimaryExpression	1		302980	0					
ANR	303001	ExpressionStatement	child_class = child_class -> parent	292:2:8776:8809	302980	1	True				
ANR	303002	AssignmentExpression	child_class = child_class -> parent		302980	0		=			
ANR	303003	Identifier	child_class		302980	0					
ANR	303004	PtrMemberAccess	child_class -> parent		302980	1					
ANR	303005	Identifier	child_class		302980	0					
ANR	303006	Identifier	parent		302980	1					
ANR	303007	ReturnStatement	return 0 ;	295:1:8816:8824	302980	2	True				
ANR	303008	PrimaryExpression	0		302980	0					
ANR	303009	ReturnType	static zend_always_inline zend_bool		302980	1					
ANR	303010	Identifier	is_derived_class		302980	2					
ANR	303011	ParameterList	"zend_class_entry * child_class , zend_class_entry * parent_class"		302980	3					
ANR	303012	Parameter	zend_class_entry * child_class	285:53:8586:8614	302980	0	True				
ANR	303013	ParameterType	zend_class_entry *		302980	0					
ANR	303014	Identifier	child_class		302980	1					
ANR	303015	Parameter	zend_class_entry * parent_class	285:84:8617:8646	302980	1	True				
ANR	303016	ParameterType	zend_class_entry *		302980	0					
ANR	303017	Identifier	parent_class		302980	1					
ANR	303018	CFGEntryNode	ENTRY		302980		True				
ANR	303019	CFGExitNode	EXIT		302980		True				
ANR	303020	Symbol	* child_class		302980						
ANR	303021	Symbol	child_class -> parent		302980						
ANR	303022	Symbol	parent_class		302980						
ANR	303023	Symbol	child_class		302980						
ANR	303024	Function	zend_get_property_offset	299:0:8839:11513							
ANR	303025	FunctionDef	"zend_get_property_offset (zend_class_entry * ce , zend_string * member , int silent , void * * cache_slot)"		303024	0					
ANR	303026	CompoundStatement		300:0:8983:11513	303024	0					
ANR	303027	IdentifierDeclStatement	zval * zv ;	301:1:8986:8994	303024	0	True				
ANR	303028	IdentifierDecl	* zv		303024	0					
ANR	303029	IdentifierDeclType	zval *		303024	0					
ANR	303030	Identifier	zv		303024	1					
ANR	303031	IdentifierDeclStatement	zend_property_info * property_info = NULL ;	302:1:8997:9037	303024	1	True				
ANR	303032	IdentifierDecl	* property_info = NULL		303024	0					
ANR	303033	IdentifierDeclType	zend_property_info *		303024	0					
ANR	303034	Identifier	property_info		303024	1					
ANR	303035	AssignmentExpression	* property_info = NULL		303024	2		=			
ANR	303036	Identifier	NULL		303024	0					
ANR	303037	Identifier	NULL		303024	1					
ANR	303038	IdentifierDeclStatement	uint32_t flags ;	303:1:9040:9054	303024	2	True				
ANR	303039	IdentifierDecl	flags		303024	0					
ANR	303040	IdentifierDeclType	uint32_t		303024	0					
ANR	303041	Identifier	flags		303024	1					
ANR	303042	IfStatement	if ( cache_slot && EXPECTED ( ce == CACHED_PTR_EX ( cache_slot ) ) )		303024	3					
ANR	303043	Condition	cache_slot && EXPECTED ( ce == CACHED_PTR_EX ( cache_slot ) )	305:5:9062:9116	303024	0	True				
ANR	303044	AndExpression	cache_slot && EXPECTED ( ce == CACHED_PTR_EX ( cache_slot ) )		303024	0		&&			
ANR	303045	Identifier	cache_slot		303024	0					
ANR	303046	CallExpression	EXPECTED ( ce == CACHED_PTR_EX ( cache_slot ) )		303024	1					
ANR	303047	Callee	EXPECTED		303024	0					
ANR	303048	Identifier	EXPECTED		303024	0					
ANR	303049	ArgumentList	ce == CACHED_PTR_EX ( cache_slot )		303024	1					
ANR	303050	Argument	ce == CACHED_PTR_EX ( cache_slot )		303024	0					
ANR	303051	EqualityExpression	ce == CACHED_PTR_EX ( cache_slot )		303024	0		==			
ANR	303052	Identifier	ce		303024	0					
ANR	303053	CallExpression	CACHED_PTR_EX ( cache_slot )		303024	1					
ANR	303054	Callee	CACHED_PTR_EX		303024	0					
ANR	303055	Identifier	CACHED_PTR_EX		303024	0					
ANR	303056	ArgumentList	cache_slot		303024	1					
ANR	303057	Argument	cache_slot		303024	0					
ANR	303058	Identifier	cache_slot		303024	0					
ANR	303059	CompoundStatement		6:62:135:135	303024	1					
ANR	303060	ReturnStatement	return ( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 ) ;	306:2:9123:9179	303024	0	True				
ANR	303061	CastExpression	( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		303024	0					
ANR	303062	CastTarget	uint32_t		303024	0					
ANR	303063	CastExpression	( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		303024	1					
ANR	303064	CastTarget	intptr_t		303024	0					
ANR	303065	CallExpression	CACHED_PTR_EX ( cache_slot + 1 )		303024	1					
ANR	303066	Callee	CACHED_PTR_EX		303024	0					
ANR	303067	Identifier	CACHED_PTR_EX		303024	0					
ANR	303068	ArgumentList	cache_slot + 1		303024	1					
ANR	303069	Argument	cache_slot + 1		303024	0					
ANR	303070	AdditiveExpression	cache_slot + 1		303024	0		+			
ANR	303071	Identifier	cache_slot		303024	0					
ANR	303072	PrimaryExpression	1		303024	1					
ANR	303073	IfStatement	if ( UNEXPECTED ( ZSTR_VAL ( member ) [ 0 ] == '\\0' ) )		303024	4					
ANR	303074	Condition	UNEXPECTED ( ZSTR_VAL ( member ) [ 0 ] == '\\0' )	309:5:9190:9228	303024	0	True				
ANR	303075	CallExpression	UNEXPECTED ( ZSTR_VAL ( member ) [ 0 ] == '\\0' )		303024	0					
ANR	303076	Callee	UNEXPECTED		303024	0					
ANR	303077	Identifier	UNEXPECTED		303024	0					
ANR	303078	ArgumentList	ZSTR_VAL ( member ) [ 0 ] == '\\0'		303024	1					
ANR	303079	Argument	ZSTR_VAL ( member ) [ 0 ] == '\\0'		303024	0					
ANR	303080	EqualityExpression	ZSTR_VAL ( member ) [ 0 ] == '\\0'		303024	0		==			
ANR	303081	ArrayIndexing	ZSTR_VAL ( member ) [ 0 ]		303024	0					
ANR	303082	CallExpression	ZSTR_VAL ( member )		303024	0					
ANR	303083	Callee	ZSTR_VAL		303024	0					
ANR	303084	Identifier	ZSTR_VAL		303024	0					
ANR	303085	ArgumentList	member		303024	1					
ANR	303086	Argument	member		303024	0					
ANR	303087	Identifier	member		303024	0					
ANR	303088	PrimaryExpression	0		303024	1					
ANR	303089	PrimaryExpression	'\\0'		303024	1					
ANR	303090	CompoundStatement		10:46:247:247	303024	1					
ANR	303091	IfStatement	if ( ! silent )		303024	0					
ANR	303092	Condition	! silent	310:6:9239:9245	303024	0	True				
ANR	303093	UnaryOperationExpression	! silent		303024	0					
ANR	303094	UnaryOperator	!		303024	0					
ANR	303095	Identifier	silent		303024	1					
ANR	303096	CompoundStatement		11:15:264:264	303024	1					
ANR	303097	IfStatement	if ( ZSTR_LEN ( member ) == 0 )		303024	0					
ANR	303098	Condition	ZSTR_LEN ( member ) == 0	311:7:9257:9277	303024	0	True				
ANR	303099	EqualityExpression	ZSTR_LEN ( member ) == 0		303024	0		==			
ANR	303100	CallExpression	ZSTR_LEN ( member )		303024	0					
ANR	303101	Callee	ZSTR_LEN		303024	0					
ANR	303102	Identifier	ZSTR_LEN		303024	0					
ANR	303103	ArgumentList	member		303024	1					
ANR	303104	Argument	member		303024	0					
ANR	303105	Identifier	member		303024	0					
ANR	303106	PrimaryExpression	0		303024	1					
ANR	303107	CompoundStatement		12:30:296:296	303024	1					
ANR	303108	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access empty property"" )"	312:4:9286:9340	303024	0	True				
ANR	303109	CallExpression	"zend_throw_error ( NULL , ""Cannot access empty property"" )"		303024	0					
ANR	303110	Callee	zend_throw_error		303024	0					
ANR	303111	Identifier	zend_throw_error		303024	0					
ANR	303112	ArgumentList	NULL		303024	1					
ANR	303113	Argument	NULL		303024	0					
ANR	303114	Identifier	NULL		303024	0					
ANR	303115	Argument	"""Cannot access empty property"""		303024	1					
ANR	303116	PrimaryExpression	"""Cannot access empty property"""		303024	0					
ANR	303117	ElseStatement	else		303024	0					
ANR	303118	CompoundStatement		14:10:368:368	303024	0					
ANR	303119	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"	314:4:9358:9425	303024	0	True				
ANR	303120	CallExpression	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"		303024	0					
ANR	303121	Callee	zend_throw_error		303024	0					
ANR	303122	Identifier	zend_throw_error		303024	0					
ANR	303123	ArgumentList	NULL		303024	1					
ANR	303124	Argument	NULL		303024	0					
ANR	303125	Identifier	NULL		303024	0					
ANR	303126	Argument	"""Cannot access property started with '\\\\0'"""		303024	1					
ANR	303127	PrimaryExpression	"""Cannot access property started with '\\\\0'"""		303024	0					
ANR	303128	ReturnStatement	return ZEND_WRONG_PROPERTY_OFFSET ;	317:2:9438:9471	303024	1	True				
ANR	303129	Identifier	ZEND_WRONG_PROPERTY_OFFSET		303024	0					
ANR	303130	IfStatement	if ( UNEXPECTED ( zend_hash_num_elements ( & ce -> properties_info ) == 0 ) )		303024	5					
ANR	303131	Condition	UNEXPECTED ( zend_hash_num_elements ( & ce -> properties_info ) == 0 )	320:5:9482:9542	303024	0	True				
ANR	303132	CallExpression	UNEXPECTED ( zend_hash_num_elements ( & ce -> properties_info ) == 0 )		303024	0					
ANR	303133	Callee	UNEXPECTED		303024	0					
ANR	303134	Identifier	UNEXPECTED		303024	0					
ANR	303135	ArgumentList	zend_hash_num_elements ( & ce -> properties_info ) == 0		303024	1					
ANR	303136	Argument	zend_hash_num_elements ( & ce -> properties_info ) == 0		303024	0					
ANR	303137	EqualityExpression	zend_hash_num_elements ( & ce -> properties_info ) == 0		303024	0		==			
ANR	303138	CallExpression	zend_hash_num_elements ( & ce -> properties_info )		303024	0					
ANR	303139	Callee	zend_hash_num_elements		303024	0					
ANR	303140	Identifier	zend_hash_num_elements		303024	0					
ANR	303141	ArgumentList	& ce -> properties_info		303024	1					
ANR	303142	Argument	& ce -> properties_info		303024	0					
ANR	303143	UnaryOperationExpression	& ce -> properties_info		303024	0					
ANR	303144	UnaryOperator	&		303024	0					
ANR	303145	PtrMemberAccess	ce -> properties_info		303024	1					
ANR	303146	Identifier	ce		303024	0					
ANR	303147	Identifier	properties_info		303024	1					
ANR	303148	PrimaryExpression	0		303024	1					
ANR	303149	CompoundStatement		21:68:561:561	303024	1					
ANR	303150	GotoStatement	goto exit_dynamic ;	321:2:9549:9566	303024	0	True				
ANR	303151	Identifier	exit_dynamic		303024	0					
ANR	303152	ExpressionStatement	"zv = zend_hash_find ( & ce -> properties_info , member )"	324:1:9573:9622	303024	6	True				
ANR	303153	AssignmentExpression	"zv = zend_hash_find ( & ce -> properties_info , member )"		303024	0		=			
ANR	303154	Identifier	zv		303024	0					
ANR	303155	CallExpression	"zend_hash_find ( & ce -> properties_info , member )"		303024	1					
ANR	303156	Callee	zend_hash_find		303024	0					
ANR	303157	Identifier	zend_hash_find		303024	0					
ANR	303158	ArgumentList	& ce -> properties_info		303024	1					
ANR	303159	Argument	& ce -> properties_info		303024	0					
ANR	303160	UnaryOperationExpression	& ce -> properties_info		303024	0					
ANR	303161	UnaryOperator	&		303024	0					
ANR	303162	PtrMemberAccess	ce -> properties_info		303024	1					
ANR	303163	Identifier	ce		303024	0					
ANR	303164	Identifier	properties_info		303024	1					
ANR	303165	Argument	member		303024	1					
ANR	303166	Identifier	member		303024	0					
ANR	303167	IfStatement	if ( EXPECTED ( zv != NULL ) )		303024	7					
ANR	303168	Condition	EXPECTED ( zv != NULL )	325:5:9629:9648	303024	0	True				
ANR	303169	CallExpression	EXPECTED ( zv != NULL )		303024	0					
ANR	303170	Callee	EXPECTED		303024	0					
ANR	303171	Identifier	EXPECTED		303024	0					
ANR	303172	ArgumentList	zv != NULL		303024	1					
ANR	303173	Argument	zv != NULL		303024	0					
ANR	303174	EqualityExpression	zv != NULL		303024	0		!=			
ANR	303175	Identifier	zv		303024	0					
ANR	303176	Identifier	NULL		303024	1					
ANR	303177	CompoundStatement		26:27:667:667	303024	1					
ANR	303178	ExpressionStatement	property_info = ( zend_property_info * ) Z_PTR_P ( zv )	326:2:9655:9703	303024	0	True				
ANR	303179	AssignmentExpression	property_info = ( zend_property_info * ) Z_PTR_P ( zv )		303024	0		=			
ANR	303180	Identifier	property_info		303024	0					
ANR	303181	CastExpression	( zend_property_info * ) Z_PTR_P ( zv )		303024	1					
ANR	303182	CastTarget	zend_property_info *		303024	0					
ANR	303183	CallExpression	Z_PTR_P ( zv )		303024	1					
ANR	303184	Callee	Z_PTR_P		303024	0					
ANR	303185	Identifier	Z_PTR_P		303024	0					
ANR	303186	ArgumentList	zv		303024	1					
ANR	303187	Argument	zv		303024	0					
ANR	303188	Identifier	zv		303024	0					
ANR	303189	ExpressionStatement	flags = property_info -> flags	327:2:9707:9735	303024	1	True				
ANR	303190	AssignmentExpression	flags = property_info -> flags		303024	0		=			
ANR	303191	Identifier	flags		303024	0					
ANR	303192	PtrMemberAccess	property_info -> flags		303024	1					
ANR	303193	Identifier	property_info		303024	0					
ANR	303194	Identifier	flags		303024	1					
ANR	303195	IfStatement	if ( UNEXPECTED ( ( flags & ZEND_ACC_SHADOW ) != 0 ) )		303024	2					
ANR	303196	Condition	UNEXPECTED ( ( flags & ZEND_ACC_SHADOW ) != 0 )	328:6:9743:9784	303024	0	True				
ANR	303197	CallExpression	UNEXPECTED ( ( flags & ZEND_ACC_SHADOW ) != 0 )		303024	0					
ANR	303198	Callee	UNEXPECTED		303024	0					
ANR	303199	Identifier	UNEXPECTED		303024	0					
ANR	303200	ArgumentList	( flags & ZEND_ACC_SHADOW ) != 0		303024	1					
ANR	303201	Argument	( flags & ZEND_ACC_SHADOW ) != 0		303024	0					
ANR	303202	EqualityExpression	( flags & ZEND_ACC_SHADOW ) != 0		303024	0		!=			
ANR	303203	BitAndExpression	flags & ZEND_ACC_SHADOW		303024	0		&			
ANR	303204	Identifier	flags		303024	0					
ANR	303205	Identifier	ZEND_ACC_SHADOW		303024	1					
ANR	303206	PrimaryExpression	0		303024	1					
ANR	303207	CompoundStatement		29:50:803:803	303024	1					
ANR	303208	ExpressionStatement	property_info = NULL	330:3:9846:9866	303024	0	True				
ANR	303209	AssignmentExpression	property_info = NULL		303024	0		=			
ANR	303210	Identifier	property_info		303024	0					
ANR	303211	Identifier	NULL		303024	1					
ANR	303212	ElseStatement	else		303024	0					
ANR	303213	CompoundStatement		32:9:893:893	303024	0					
ANR	303214	IfStatement	"if ( EXPECTED ( zend_verify_property_access ( property_info , ce ) != 0 ) )"		303024	0					
ANR	303215	Condition	"EXPECTED ( zend_verify_property_access ( property_info , ce ) != 0 )"	332:7:9886:9946	303024	0	True				
ANR	303216	CallExpression	"EXPECTED ( zend_verify_property_access ( property_info , ce ) != 0 )"		303024	0					
ANR	303217	Callee	EXPECTED		303024	0					
ANR	303218	Identifier	EXPECTED		303024	0					
ANR	303219	ArgumentList	"zend_verify_property_access ( property_info , ce ) != 0"		303024	1					
ANR	303220	Argument	"zend_verify_property_access ( property_info , ce ) != 0"		303024	0					
ANR	303221	EqualityExpression	"zend_verify_property_access ( property_info , ce ) != 0"		303024	0		!=			
ANR	303222	CallExpression	"zend_verify_property_access ( property_info , ce )"		303024	0					
ANR	303223	Callee	zend_verify_property_access		303024	0					
ANR	303224	Identifier	zend_verify_property_access		303024	0					
ANR	303225	ArgumentList	property_info		303024	1					
ANR	303226	Argument	property_info		303024	0					
ANR	303227	Identifier	property_info		303024	0					
ANR	303228	Argument	ce		303024	1					
ANR	303229	Identifier	ce		303024	0					
ANR	303230	PrimaryExpression	0		303024	1					
ANR	303231	CompoundStatement		33:70:965:965	303024	1					
ANR	303232	IfStatement	if ( UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) ) || UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) ) )		303024	0					
ANR	303233	Condition	UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) ) || UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) )	333:8:9959:10044	303024	0	True				
ANR	303234	OrExpression	UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) ) || UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) )		303024	0		||			
ANR	303235	CallExpression	UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) )		303024	0					
ANR	303236	Callee	UNEXPECTED		303024	0					
ANR	303237	Identifier	UNEXPECTED		303024	0					
ANR	303238	ArgumentList	! ( flags & ZEND_ACC_CHANGED )		303024	1					
ANR	303239	Argument	! ( flags & ZEND_ACC_CHANGED )		303024	0					
ANR	303240	UnaryOperationExpression	! ( flags & ZEND_ACC_CHANGED )		303024	0					
ANR	303241	UnaryOperator	!		303024	0					
ANR	303242	BitAndExpression	flags & ZEND_ACC_CHANGED		303024	1		&			
ANR	303243	Identifier	flags		303024	0					
ANR	303244	Identifier	ZEND_ACC_CHANGED		303024	1					
ANR	303245	CallExpression	UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) )		303024	1					
ANR	303246	Callee	UNEXPECTED		303024	0					
ANR	303247	Identifier	UNEXPECTED		303024	0					
ANR	303248	ArgumentList	flags & ZEND_ACC_PRIVATE		303024	1					
ANR	303249	Argument	flags & ZEND_ACC_PRIVATE		303024	0					
ANR	303250	BitAndExpression	flags & ZEND_ACC_PRIVATE		303024	0		&			
ANR	303251	Identifier	flags		303024	0					
ANR	303252	Identifier	ZEND_ACC_PRIVATE		303024	1					
ANR	303253	CompoundStatement		35:48:1063:1063	303024	1					
ANR	303254	IfStatement	if ( UNEXPECTED ( ( flags & ZEND_ACC_STATIC ) != 0 ) )		303024	0					
ANR	303255	Condition	UNEXPECTED ( ( flags & ZEND_ACC_STATIC ) != 0 )	335:9:10058:10099	303024	0	True				
ANR	303256	CallExpression	UNEXPECTED ( ( flags & ZEND_ACC_STATIC ) != 0 )		303024	0					
ANR	303257	Callee	UNEXPECTED		303024	0					
ANR	303258	Identifier	UNEXPECTED		303024	0					
ANR	303259	ArgumentList	( flags & ZEND_ACC_STATIC ) != 0		303024	1					
ANR	303260	Argument	( flags & ZEND_ACC_STATIC ) != 0		303024	0					
ANR	303261	EqualityExpression	( flags & ZEND_ACC_STATIC ) != 0		303024	0		!=			
ANR	303262	BitAndExpression	flags & ZEND_ACC_STATIC		303024	0		&			
ANR	303263	Identifier	flags		303024	0					
ANR	303264	Identifier	ZEND_ACC_STATIC		303024	1					
ANR	303265	PrimaryExpression	0		303024	1					
ANR	303266	CompoundStatement		36:53:1118:1118	303024	1					
ANR	303267	IfStatement	if ( ! silent )		303024	0					
ANR	303268	Condition	! silent	336:10:10114:10120	303024	0	True				
ANR	303269	UnaryOperationExpression	! silent		303024	0					
ANR	303270	UnaryOperator	!		303024	0					
ANR	303271	Identifier	silent		303024	1					
ANR	303272	CompoundStatement		37:19:1139:1139	303024	1					
ANR	303273	ExpressionStatement	"zend_error ( E_NOTICE , ""Accessing static property %s::$%s as non static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"	337:7:10132:10241	303024	0	True				
ANR	303274	CallExpression	"zend_error ( E_NOTICE , ""Accessing static property %s::$%s as non static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"		303024	0					
ANR	303275	Callee	zend_error		303024	0					
ANR	303276	Identifier	zend_error		303024	0					
ANR	303277	ArgumentList	E_NOTICE		303024	1					
ANR	303278	Argument	E_NOTICE		303024	0					
ANR	303279	Identifier	E_NOTICE		303024	0					
ANR	303280	Argument	"""Accessing static property %s::$%s as non static"""		303024	1					
ANR	303281	PrimaryExpression	"""Accessing static property %s::$%s as non static"""		303024	0					
ANR	303282	Argument	ZSTR_VAL ( ce -> name )		303024	2					
ANR	303283	CallExpression	ZSTR_VAL ( ce -> name )		303024	0					
ANR	303284	Callee	ZSTR_VAL		303024	0					
ANR	303285	Identifier	ZSTR_VAL		303024	0					
ANR	303286	ArgumentList	ce -> name		303024	1					
ANR	303287	Argument	ce -> name		303024	0					
ANR	303288	PtrMemberAccess	ce -> name		303024	0					
ANR	303289	Identifier	ce		303024	0					
ANR	303290	Identifier	name		303024	1					
ANR	303291	Argument	ZSTR_VAL ( member )		303024	3					
ANR	303292	CallExpression	ZSTR_VAL ( member )		303024	0					
ANR	303293	Callee	ZSTR_VAL		303024	0					
ANR	303294	Identifier	ZSTR_VAL		303024	0					
ANR	303295	ArgumentList	member		303024	1					
ANR	303296	Argument	member		303024	0					
ANR	303297	Identifier	member		303024	0					
ANR	303298	ReturnStatement	return ZEND_DYNAMIC_PROPERTY_OFFSET ;	339:6:10257:10292	303024	1	True				
ANR	303299	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		303024	0					
ANR	303300	GotoStatement	goto exit ;	341:5:10306:10315	303024	1	True				
ANR	303301	Identifier	exit		303024	0					
ANR	303302	ElseStatement	else		303024	0					
ANR	303303	CompoundStatement		44:10:1349:1349	303024	0					
ANR	303304	ExpressionStatement	property_info = ZEND_WRONG_PROPERTY_INFO	345:4:10382:10422	303024	0	True				
ANR	303305	AssignmentExpression	property_info = ZEND_WRONG_PROPERTY_INFO		303024	0		=			
ANR	303306	Identifier	property_info		303024	0					
ANR	303307	Identifier	ZEND_WRONG_PROPERTY_INFO		303024	1					
ANR	303308	IfStatement	"if ( EG ( scope ) != ce && EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE )"		303024	8					
ANR	303309	Condition	"EG ( scope ) != ce && EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"	350:5:10442:10646	303024	0	True				
ANR	303310	AndExpression	"EG ( scope ) != ce && EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303024	0		&&			
ANR	303311	EqualityExpression	EG ( scope ) != ce		303024	0		!=			
ANR	303312	CallExpression	EG ( scope )		303024	0					
ANR	303313	Callee	EG		303024	0					
ANR	303314	Identifier	EG		303024	0					
ANR	303315	ArgumentList	scope		303024	1					
ANR	303316	Argument	scope		303024	0					
ANR	303317	Identifier	scope		303024	0					
ANR	303318	Identifier	ce		303024	1					
ANR	303319	AndExpression	"EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303024	1		&&			
ANR	303320	CallExpression	EG ( scope )		303024	0					
ANR	303321	Callee	EG		303024	0					
ANR	303322	Identifier	EG		303024	0					
ANR	303323	ArgumentList	scope		303024	1					
ANR	303324	Argument	scope		303024	0					
ANR	303325	Identifier	scope		303024	0					
ANR	303326	AndExpression	"is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303024	1		&&			
ANR	303327	CallExpression	"is_derived_class ( ce , EG ( scope ) )"		303024	0					
ANR	303328	Callee	is_derived_class		303024	0					
ANR	303329	Identifier	is_derived_class		303024	0					
ANR	303330	ArgumentList	ce		303024	1					
ANR	303331	Argument	ce		303024	0					
ANR	303332	Identifier	ce		303024	0					
ANR	303333	Argument	EG ( scope )		303024	1					
ANR	303334	CallExpression	EG ( scope )		303024	0					
ANR	303335	Callee	EG		303024	0					
ANR	303336	Identifier	EG		303024	0					
ANR	303337	ArgumentList	scope		303024	1					
ANR	303338	Argument	scope		303024	0					
ANR	303339	Identifier	scope		303024	0					
ANR	303340	AndExpression	"( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303024	1		&&			
ANR	303341	EqualityExpression	"( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL"		303024	0		!=			
ANR	303342	AssignmentExpression	"zv = zend_hash_find ( & EG ( scope ) -> properties_info , member )"		303024	0		=			
ANR	303343	Identifier	zv		303024	0					
ANR	303344	CallExpression	"zend_hash_find ( & EG ( scope ) -> properties_info , member )"		303024	1					
ANR	303345	Callee	zend_hash_find		303024	0					
ANR	303346	Identifier	zend_hash_find		303024	0					
ANR	303347	ArgumentList	& EG ( scope ) -> properties_info		303024	1					
ANR	303348	Argument	& EG ( scope ) -> properties_info		303024	0					
ANR	303349	UnaryOperationExpression	& EG ( scope ) -> properties_info		303024	0					
ANR	303350	UnaryOperator	&		303024	0					
ANR	303351	PtrMemberAccess	EG ( scope ) -> properties_info		303024	1					
ANR	303352	CallExpression	EG ( scope )		303024	0					
ANR	303353	Callee	EG		303024	0					
ANR	303354	Identifier	EG		303024	0					
ANR	303355	ArgumentList	scope		303024	1					
ANR	303356	Argument	scope		303024	0					
ANR	303357	Identifier	scope		303024	0					
ANR	303358	Identifier	properties_info		303024	1					
ANR	303359	Argument	member		303024	1					
ANR	303360	Identifier	member		303024	0					
ANR	303361	Identifier	NULL		303024	1					
ANR	303362	BitAndExpression	( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE		303024	1		&			
ANR	303363	PtrMemberAccess	( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags		303024	0					
ANR	303364	CastExpression	( zend_property_info * ) Z_PTR_P ( zv )		303024	0					
ANR	303365	CastTarget	zend_property_info *		303024	0					
ANR	303366	CallExpression	Z_PTR_P ( zv )		303024	1					
ANR	303367	Callee	Z_PTR_P		303024	0					
ANR	303368	Identifier	Z_PTR_P		303024	0					
ANR	303369	ArgumentList	zv		303024	1					
ANR	303370	Argument	zv		303024	0					
ANR	303371	Identifier	zv		303024	0					
ANR	303372	Identifier	flags		303024	1					
ANR	303373	Identifier	ZEND_ACC_PRIVATE		303024	1					
ANR	303374	CompoundStatement		55:67:1665:1665	303024	1					
ANR	303375	ExpressionStatement	property_info = ( zend_property_info * ) Z_PTR_P ( zv )	355:2:10653:10701	303024	0	True				
ANR	303376	AssignmentExpression	property_info = ( zend_property_info * ) Z_PTR_P ( zv )		303024	0		=			
ANR	303377	Identifier	property_info		303024	0					
ANR	303378	CastExpression	( zend_property_info * ) Z_PTR_P ( zv )		303024	1					
ANR	303379	CastTarget	zend_property_info *		303024	0					
ANR	303380	CallExpression	Z_PTR_P ( zv )		303024	1					
ANR	303381	Callee	Z_PTR_P		303024	0					
ANR	303382	Identifier	Z_PTR_P		303024	0					
ANR	303383	ArgumentList	zv		303024	1					
ANR	303384	Argument	zv		303024	0					
ANR	303385	Identifier	zv		303024	0					
ANR	303386	IfStatement	if ( UNEXPECTED ( ( property_info -> flags & ZEND_ACC_STATIC ) != 0 ) )		303024	1					
ANR	303387	Condition	UNEXPECTED ( ( property_info -> flags & ZEND_ACC_STATIC ) != 0 )	356:6:10709:10765	303024	0	True				
ANR	303388	CallExpression	UNEXPECTED ( ( property_info -> flags & ZEND_ACC_STATIC ) != 0 )		303024	0					
ANR	303389	Callee	UNEXPECTED		303024	0					
ANR	303390	Identifier	UNEXPECTED		303024	0					
ANR	303391	ArgumentList	( property_info -> flags & ZEND_ACC_STATIC ) != 0		303024	1					
ANR	303392	Argument	( property_info -> flags & ZEND_ACC_STATIC ) != 0		303024	0					
ANR	303393	EqualityExpression	( property_info -> flags & ZEND_ACC_STATIC ) != 0		303024	0		!=			
ANR	303394	BitAndExpression	property_info -> flags & ZEND_ACC_STATIC		303024	0		&			
ANR	303395	PtrMemberAccess	property_info -> flags		303024	0					
ANR	303396	Identifier	property_info		303024	0					
ANR	303397	Identifier	flags		303024	1					
ANR	303398	Identifier	ZEND_ACC_STATIC		303024	1					
ANR	303399	PrimaryExpression	0		303024	1					
ANR	303400	CompoundStatement		57:65:1784:1784	303024	1					
ANR	303401	ReturnStatement	return ZEND_DYNAMIC_PROPERTY_OFFSET ;	357:3:10773:10808	303024	0	True				
ANR	303402	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		303024	0					
ANR	303403	ElseStatement	else		303024	0					
ANR	303404	IfStatement	if ( UNEXPECTED ( property_info == NULL ) )		303024	0					
ANR	303405	Condition	UNEXPECTED ( property_info == NULL )	359:12:10826:10858	303024	0	True				
ANR	303406	CallExpression	UNEXPECTED ( property_info == NULL )		303024	0					
ANR	303407	Callee	UNEXPECTED		303024	0					
ANR	303408	Identifier	UNEXPECTED		303024	0					
ANR	303409	ArgumentList	property_info == NULL		303024	1					
ANR	303410	Argument	property_info == NULL		303024	0					
ANR	303411	EqualityExpression	property_info == NULL		303024	0		==			
ANR	303412	Identifier	property_info		303024	0					
ANR	303413	Identifier	NULL		303024	1					
ANR	303414	CompoundStatement		60:47:1877:1877	303024	1					
ANR	303415	Label	exit_dynamic :	360:0:10863:10875	303024	0	True				
ANR	303416	Identifier	exit_dynamic		303024	0					
ANR	303417	IfStatement	if ( cache_slot )		303024	1					
ANR	303418	Condition	cache_slot	361:6:10883:10892	303024	0	True				
ANR	303419	Identifier	cache_slot		303024	0					
ANR	303420	CompoundStatement		62:18:1911:1911	303024	1					
ANR	303421	ExpressionStatement	"CACHE_POLYMORPHIC_PTR_EX ( cache_slot , ce , ( void * ) ( intptr_t ) ZEND_DYNAMIC_PROPERTY_OFFSET )"	362:3:10900:10987	303024	0	True				
ANR	303422	CallExpression	"CACHE_POLYMORPHIC_PTR_EX ( cache_slot , ce , ( void * ) ( intptr_t ) ZEND_DYNAMIC_PROPERTY_OFFSET )"		303024	0					
ANR	303423	Callee	CACHE_POLYMORPHIC_PTR_EX		303024	0					
ANR	303424	Identifier	CACHE_POLYMORPHIC_PTR_EX		303024	0					
ANR	303425	ArgumentList	cache_slot		303024	1					
ANR	303426	Argument	cache_slot		303024	0					
ANR	303427	Identifier	cache_slot		303024	0					
ANR	303428	Argument	ce		303024	1					
ANR	303429	Identifier	ce		303024	0					
ANR	303430	Argument	( void * ) ( intptr_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		303024	2					
ANR	303431	CastExpression	( void * ) ( intptr_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		303024	0					
ANR	303432	CastTarget	void *		303024	0					
ANR	303433	CastExpression	( intptr_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		303024	1					
ANR	303434	CastTarget	intptr_t		303024	0					
ANR	303435	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		303024	1					
ANR	303436	ReturnStatement	return ZEND_DYNAMIC_PROPERTY_OFFSET ;	364:2:10995:11030	303024	2	True				
ANR	303437	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		303024	0					
ANR	303438	ElseStatement	else		303024	0					
ANR	303439	IfStatement	if ( UNEXPECTED ( property_info == ZEND_WRONG_PROPERTY_INFO ) )		303024	0					
ANR	303440	Condition	UNEXPECTED ( property_info == ZEND_WRONG_PROPERTY_INFO )	365:12:11044:11096	303024	0	True				
ANR	303441	CallExpression	UNEXPECTED ( property_info == ZEND_WRONG_PROPERTY_INFO )		303024	0					
ANR	303442	Callee	UNEXPECTED		303024	0					
ANR	303443	Identifier	UNEXPECTED		303024	0					
ANR	303444	ArgumentList	property_info == ZEND_WRONG_PROPERTY_INFO		303024	1					
ANR	303445	Argument	property_info == ZEND_WRONG_PROPERTY_INFO		303024	0					
ANR	303446	EqualityExpression	property_info == ZEND_WRONG_PROPERTY_INFO		303024	0		==			
ANR	303447	Identifier	property_info		303024	0					
ANR	303448	Identifier	ZEND_WRONG_PROPERTY_INFO		303024	1					
ANR	303449	CompoundStatement		66:67:2115:2115	303024	1					
ANR	303450	IfStatement	if ( ! silent )		303024	0					
ANR	303451	Condition	! silent	367:6:11181:11187	303024	0	True				
ANR	303452	UnaryOperationExpression	! silent		303024	0					
ANR	303453	UnaryOperator	!		303024	0					
ANR	303454	Identifier	silent		303024	1					
ANR	303455	CompoundStatement		68:15:2206:2206	303024	1					
ANR	303456	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access %s property %s::$%s"" , zend_visibility_string ( flags ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"	368:3:11195:11323	303024	0	True				
ANR	303457	CallExpression	"zend_throw_error ( NULL , ""Cannot access %s property %s::$%s"" , zend_visibility_string ( flags ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"		303024	0					
ANR	303458	Callee	zend_throw_error		303024	0					
ANR	303459	Identifier	zend_throw_error		303024	0					
ANR	303460	ArgumentList	NULL		303024	1					
ANR	303461	Argument	NULL		303024	0					
ANR	303462	Identifier	NULL		303024	0					
ANR	303463	Argument	"""Cannot access %s property %s::$%s"""		303024	1					
ANR	303464	PrimaryExpression	"""Cannot access %s property %s::$%s"""		303024	0					
ANR	303465	Argument	zend_visibility_string ( flags )		303024	2					
ANR	303466	CallExpression	zend_visibility_string ( flags )		303024	0					
ANR	303467	Callee	zend_visibility_string		303024	0					
ANR	303468	Identifier	zend_visibility_string		303024	0					
ANR	303469	ArgumentList	flags		303024	1					
ANR	303470	Argument	flags		303024	0					
ANR	303471	Identifier	flags		303024	0					
ANR	303472	Argument	ZSTR_VAL ( ce -> name )		303024	3					
ANR	303473	CallExpression	ZSTR_VAL ( ce -> name )		303024	0					
ANR	303474	Callee	ZSTR_VAL		303024	0					
ANR	303475	Identifier	ZSTR_VAL		303024	0					
ANR	303476	ArgumentList	ce -> name		303024	1					
ANR	303477	Argument	ce -> name		303024	0					
ANR	303478	PtrMemberAccess	ce -> name		303024	0					
ANR	303479	Identifier	ce		303024	0					
ANR	303480	Identifier	name		303024	1					
ANR	303481	Argument	ZSTR_VAL ( member )		303024	4					
ANR	303482	CallExpression	ZSTR_VAL ( member )		303024	0					
ANR	303483	Callee	ZSTR_VAL		303024	0					
ANR	303484	Identifier	ZSTR_VAL		303024	0					
ANR	303485	ArgumentList	member		303024	1					
ANR	303486	Argument	member		303024	0					
ANR	303487	Identifier	member		303024	0					
ANR	303488	ReturnStatement	return ZEND_WRONG_PROPERTY_OFFSET ;	370:2:11331:11364	303024	1	True				
ANR	303489	Identifier	ZEND_WRONG_PROPERTY_OFFSET		303024	0					
ANR	303490	Label	exit :	373:0:11370:11374	303024	9	True				
ANR	303491	Identifier	exit		303024	0					
ANR	303492	IfStatement	if ( cache_slot )		303024	10					
ANR	303493	Condition	cache_slot	374:5:11381:11390	303024	0	True				
ANR	303494	Identifier	cache_slot		303024	0					
ANR	303495	CompoundStatement		75:17:2409:2409	303024	1					
ANR	303496	ExpressionStatement	"CACHE_POLYMORPHIC_PTR_EX ( cache_slot , ce , ( void * ) ( intptr_t ) property_info -> offset )"	375:2:11397:11477	303024	0	True				
ANR	303497	CallExpression	"CACHE_POLYMORPHIC_PTR_EX ( cache_slot , ce , ( void * ) ( intptr_t ) property_info -> offset )"		303024	0					
ANR	303498	Callee	CACHE_POLYMORPHIC_PTR_EX		303024	0					
ANR	303499	Identifier	CACHE_POLYMORPHIC_PTR_EX		303024	0					
ANR	303500	ArgumentList	cache_slot		303024	1					
ANR	303501	Argument	cache_slot		303024	0					
ANR	303502	Identifier	cache_slot		303024	0					
ANR	303503	Argument	ce		303024	1					
ANR	303504	Identifier	ce		303024	0					
ANR	303505	Argument	( void * ) ( intptr_t ) property_info -> offset		303024	2					
ANR	303506	CastExpression	( void * ) ( intptr_t ) property_info -> offset		303024	0					
ANR	303507	CastTarget	void *		303024	0					
ANR	303508	CastExpression	( intptr_t ) property_info -> offset		303024	1					
ANR	303509	CastTarget	intptr_t		303024	0					
ANR	303510	PtrMemberAccess	property_info -> offset		303024	1					
ANR	303511	Identifier	property_info		303024	0					
ANR	303512	Identifier	offset		303024	1					
ANR	303513	ReturnStatement	return property_info -> offset ;	377:1:11483:11511	303024	11	True				
ANR	303514	PtrMemberAccess	property_info -> offset		303024	0					
ANR	303515	Identifier	property_info		303024	0					
ANR	303516	Identifier	offset		303024	1					
ANR	303517	ReturnType	static zend_always_inline uint32_t		303024	1					
ANR	303518	Identifier	zend_get_property_offset		303024	2					
ANR	303519	ParameterList	"zend_class_entry * ce , zend_string * member , int silent , void * * cache_slot"		303024	3					
ANR	303520	Parameter	zend_class_entry * ce	299:60:8899:8918	303024	0	True				
ANR	303521	ParameterType	zend_class_entry *		303024	0					
ANR	303522	Identifier	ce		303024	1					
ANR	303523	Parameter	zend_string * member	299:82:8921:8939	303024	1	True				
ANR	303524	ParameterType	zend_string *		303024	0					
ANR	303525	Identifier	member		303024	1					
ANR	303526	Parameter	int silent	299:103:8942:8951	303024	2	True				
ANR	303527	ParameterType	int		303024	0					
ANR	303528	Identifier	silent		303024	1					
ANR	303529	Parameter	void * * cache_slot	299:115:8954:8970	303024	3	True				
ANR	303530	ParameterType	void * *		303024	0					
ANR	303531	Identifier	cache_slot		303024	1					
ANR	303532	CFGEntryNode	ENTRY		303024		True				
ANR	303533	CFGExitNode	EXIT		303024		True				
ANR	303534	Symbol	is_derived_class		303024						
ANR	303535	Symbol	property_info -> offset		303024						
ANR	303536	Symbol	zend_verify_property_access		303024						
ANR	303537	Symbol	flags		303024						
ANR	303538	Symbol	ZEND_ACC_CHANGED		303024						
ANR	303539	Symbol	* ce		303024						
ANR	303540	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		303024						
ANR	303541	Symbol	zend_visibility_string		303024						
ANR	303542	Symbol	UNEXPECTED		303024						
ANR	303543	Symbol	zend_hash_find		303024						
ANR	303544	Symbol	* property_info		303024						
ANR	303545	Symbol	ZEND_WRONG_PROPERTY_OFFSET		303024						
ANR	303546	Symbol	ZEND_ACC_SHADOW		303024						
ANR	303547	Symbol	scope		303024						
ANR	303548	Symbol	member		303024						
ANR	303549	Symbol	ZEND_ACC_STATIC		303024						
ANR	303550	Symbol	ce -> name		303024						
ANR	303551	Symbol	property_info -> flags		303024						
ANR	303552	Symbol	* ZSTR_VAL		303024						
ANR	303553	Symbol	cache_slot		303024						
ANR	303554	Symbol	property_info		303024						
ANR	303555	Symbol	Z_PTR_P		303024						
ANR	303556	Symbol	ce		303024						
ANR	303557	Symbol	silent		303024						
ANR	303558	Symbol	EG		303024						
ANR	303559	Symbol	NULL		303024						
ANR	303560	Symbol	CACHED_PTR_EX		303024						
ANR	303561	Symbol	zend_hash_num_elements		303024						
ANR	303562	Symbol	( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags		303024						
ANR	303563	Symbol	E_NOTICE		303024						
ANR	303564	Symbol	ZSTR_VAL		303024						
ANR	303565	Symbol	ZEND_ACC_PRIVATE		303024						
ANR	303566	Symbol	ZEND_WRONG_PROPERTY_INFO		303024						
ANR	303567	Symbol	& EG ( scope ) -> properties_info		303024						
ANR	303568	Symbol	& ce -> properties_info		303024						
ANR	303569	Symbol	ZSTR_LEN		303024						
ANR	303570	Symbol	zv		303024						
ANR	303571	Symbol	EXPECTED		303024						
ANR	303572	Symbol	* Z_PTR_P		303024						
ANR	303573	Function	zend_get_property_info	381:0:11526:13633							
ANR	303574	FunctionDef	"zend_get_property_info (zend_class_entry * ce , zend_string * member , int silent)"		303573	0					
ANR	303575	CompoundStatement		382:0:11643:13633	303573	0					
ANR	303576	IdentifierDeclStatement	zval * zv ;	383:1:11646:11654	303573	0	True				
ANR	303577	IdentifierDecl	* zv		303573	0					
ANR	303578	IdentifierDeclType	zval *		303573	0					
ANR	303579	Identifier	zv		303573	1					
ANR	303580	IdentifierDeclStatement	zend_property_info * property_info = NULL ;	384:1:11657:11697	303573	1	True				
ANR	303581	IdentifierDecl	* property_info = NULL		303573	0					
ANR	303582	IdentifierDeclType	zend_property_info *		303573	0					
ANR	303583	Identifier	property_info		303573	1					
ANR	303584	AssignmentExpression	* property_info = NULL		303573	2		=			
ANR	303585	Identifier	NULL		303573	0					
ANR	303586	Identifier	NULL		303573	1					
ANR	303587	IdentifierDeclStatement	uint32_t flags ;	385:1:11700:11714	303573	2	True				
ANR	303588	IdentifierDecl	flags		303573	0					
ANR	303589	IdentifierDeclType	uint32_t		303573	0					
ANR	303590	Identifier	flags		303573	1					
ANR	303591	IfStatement	if ( UNEXPECTED ( ZSTR_VAL ( member ) [ 0 ] == '\\0' ) )		303573	3					
ANR	303592	Condition	UNEXPECTED ( ZSTR_VAL ( member ) [ 0 ] == '\\0' )	387:5:11722:11760	303573	0	True				
ANR	303593	CallExpression	UNEXPECTED ( ZSTR_VAL ( member ) [ 0 ] == '\\0' )		303573	0					
ANR	303594	Callee	UNEXPECTED		303573	0					
ANR	303595	Identifier	UNEXPECTED		303573	0					
ANR	303596	ArgumentList	ZSTR_VAL ( member ) [ 0 ] == '\\0'		303573	1					
ANR	303597	Argument	ZSTR_VAL ( member ) [ 0 ] == '\\0'		303573	0					
ANR	303598	EqualityExpression	ZSTR_VAL ( member ) [ 0 ] == '\\0'		303573	0		==			
ANR	303599	ArrayIndexing	ZSTR_VAL ( member ) [ 0 ]		303573	0					
ANR	303600	CallExpression	ZSTR_VAL ( member )		303573	0					
ANR	303601	Callee	ZSTR_VAL		303573	0					
ANR	303602	Identifier	ZSTR_VAL		303573	0					
ANR	303603	ArgumentList	member		303573	1					
ANR	303604	Argument	member		303573	0					
ANR	303605	Identifier	member		303573	0					
ANR	303606	PrimaryExpression	0		303573	1					
ANR	303607	PrimaryExpression	'\\0'		303573	1					
ANR	303608	CompoundStatement		6:46:119:119	303573	1					
ANR	303609	IfStatement	if ( ! silent )		303573	0					
ANR	303610	Condition	! silent	388:6:11771:11777	303573	0	True				
ANR	303611	UnaryOperationExpression	! silent		303573	0					
ANR	303612	UnaryOperator	!		303573	0					
ANR	303613	Identifier	silent		303573	1					
ANR	303614	CompoundStatement		7:15:136:136	303573	1					
ANR	303615	IfStatement	if ( ZSTR_LEN ( member ) == 0 )		303573	0					
ANR	303616	Condition	ZSTR_LEN ( member ) == 0	389:7:11789:11809	303573	0	True				
ANR	303617	EqualityExpression	ZSTR_LEN ( member ) == 0		303573	0		==			
ANR	303618	CallExpression	ZSTR_LEN ( member )		303573	0					
ANR	303619	Callee	ZSTR_LEN		303573	0					
ANR	303620	Identifier	ZSTR_LEN		303573	0					
ANR	303621	ArgumentList	member		303573	1					
ANR	303622	Argument	member		303573	0					
ANR	303623	Identifier	member		303573	0					
ANR	303624	PrimaryExpression	0		303573	1					
ANR	303625	CompoundStatement		8:30:168:168	303573	1					
ANR	303626	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access empty property"" )"	390:4:11818:11872	303573	0	True				
ANR	303627	CallExpression	"zend_throw_error ( NULL , ""Cannot access empty property"" )"		303573	0					
ANR	303628	Callee	zend_throw_error		303573	0					
ANR	303629	Identifier	zend_throw_error		303573	0					
ANR	303630	ArgumentList	NULL		303573	1					
ANR	303631	Argument	NULL		303573	0					
ANR	303632	Identifier	NULL		303573	0					
ANR	303633	Argument	"""Cannot access empty property"""		303573	1					
ANR	303634	PrimaryExpression	"""Cannot access empty property"""		303573	0					
ANR	303635	ElseStatement	else		303573	0					
ANR	303636	CompoundStatement		10:10:240:240	303573	0					
ANR	303637	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"	392:4:11890:11957	303573	0	True				
ANR	303638	CallExpression	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"		303573	0					
ANR	303639	Callee	zend_throw_error		303573	0					
ANR	303640	Identifier	zend_throw_error		303573	0					
ANR	303641	ArgumentList	NULL		303573	1					
ANR	303642	Argument	NULL		303573	0					
ANR	303643	Identifier	NULL		303573	0					
ANR	303644	Argument	"""Cannot access property started with '\\\\0'"""		303573	1					
ANR	303645	PrimaryExpression	"""Cannot access property started with '\\\\0'"""		303573	0					
ANR	303646	ReturnStatement	return ZEND_WRONG_PROPERTY_INFO ;	395:2:11970:12001	303573	1	True				
ANR	303647	Identifier	ZEND_WRONG_PROPERTY_INFO		303573	0					
ANR	303648	IfStatement	if ( UNEXPECTED ( zend_hash_num_elements ( & ce -> properties_info ) == 0 ) )		303573	4					
ANR	303649	Condition	UNEXPECTED ( zend_hash_num_elements ( & ce -> properties_info ) == 0 )	398:5:12012:12072	303573	0	True				
ANR	303650	CallExpression	UNEXPECTED ( zend_hash_num_elements ( & ce -> properties_info ) == 0 )		303573	0					
ANR	303651	Callee	UNEXPECTED		303573	0					
ANR	303652	Identifier	UNEXPECTED		303573	0					
ANR	303653	ArgumentList	zend_hash_num_elements ( & ce -> properties_info ) == 0		303573	1					
ANR	303654	Argument	zend_hash_num_elements ( & ce -> properties_info ) == 0		303573	0					
ANR	303655	EqualityExpression	zend_hash_num_elements ( & ce -> properties_info ) == 0		303573	0		==			
ANR	303656	CallExpression	zend_hash_num_elements ( & ce -> properties_info )		303573	0					
ANR	303657	Callee	zend_hash_num_elements		303573	0					
ANR	303658	Identifier	zend_hash_num_elements		303573	0					
ANR	303659	ArgumentList	& ce -> properties_info		303573	1					
ANR	303660	Argument	& ce -> properties_info		303573	0					
ANR	303661	UnaryOperationExpression	& ce -> properties_info		303573	0					
ANR	303662	UnaryOperator	&		303573	0					
ANR	303663	PtrMemberAccess	ce -> properties_info		303573	1					
ANR	303664	Identifier	ce		303573	0					
ANR	303665	Identifier	properties_info		303573	1					
ANR	303666	PrimaryExpression	0		303573	1					
ANR	303667	CompoundStatement		17:68:431:431	303573	1					
ANR	303668	GotoStatement	goto exit_dynamic ;	399:2:12079:12096	303573	0	True				
ANR	303669	Identifier	exit_dynamic		303573	0					
ANR	303670	ExpressionStatement	"zv = zend_hash_find ( & ce -> properties_info , member )"	402:1:12103:12152	303573	5	True				
ANR	303671	AssignmentExpression	"zv = zend_hash_find ( & ce -> properties_info , member )"		303573	0		=			
ANR	303672	Identifier	zv		303573	0					
ANR	303673	CallExpression	"zend_hash_find ( & ce -> properties_info , member )"		303573	1					
ANR	303674	Callee	zend_hash_find		303573	0					
ANR	303675	Identifier	zend_hash_find		303573	0					
ANR	303676	ArgumentList	& ce -> properties_info		303573	1					
ANR	303677	Argument	& ce -> properties_info		303573	0					
ANR	303678	UnaryOperationExpression	& ce -> properties_info		303573	0					
ANR	303679	UnaryOperator	&		303573	0					
ANR	303680	PtrMemberAccess	ce -> properties_info		303573	1					
ANR	303681	Identifier	ce		303573	0					
ANR	303682	Identifier	properties_info		303573	1					
ANR	303683	Argument	member		303573	1					
ANR	303684	Identifier	member		303573	0					
ANR	303685	IfStatement	if ( EXPECTED ( zv != NULL ) )		303573	6					
ANR	303686	Condition	EXPECTED ( zv != NULL )	403:5:12159:12178	303573	0	True				
ANR	303687	CallExpression	EXPECTED ( zv != NULL )		303573	0					
ANR	303688	Callee	EXPECTED		303573	0					
ANR	303689	Identifier	EXPECTED		303573	0					
ANR	303690	ArgumentList	zv != NULL		303573	1					
ANR	303691	Argument	zv != NULL		303573	0					
ANR	303692	EqualityExpression	zv != NULL		303573	0		!=			
ANR	303693	Identifier	zv		303573	0					
ANR	303694	Identifier	NULL		303573	1					
ANR	303695	CompoundStatement		22:27:537:537	303573	1					
ANR	303696	ExpressionStatement	property_info = ( zend_property_info * ) Z_PTR_P ( zv )	404:2:12185:12233	303573	0	True				
ANR	303697	AssignmentExpression	property_info = ( zend_property_info * ) Z_PTR_P ( zv )		303573	0		=			
ANR	303698	Identifier	property_info		303573	0					
ANR	303699	CastExpression	( zend_property_info * ) Z_PTR_P ( zv )		303573	1					
ANR	303700	CastTarget	zend_property_info *		303573	0					
ANR	303701	CallExpression	Z_PTR_P ( zv )		303573	1					
ANR	303702	Callee	Z_PTR_P		303573	0					
ANR	303703	Identifier	Z_PTR_P		303573	0					
ANR	303704	ArgumentList	zv		303573	1					
ANR	303705	Argument	zv		303573	0					
ANR	303706	Identifier	zv		303573	0					
ANR	303707	ExpressionStatement	flags = property_info -> flags	405:2:12237:12265	303573	1	True				
ANR	303708	AssignmentExpression	flags = property_info -> flags		303573	0		=			
ANR	303709	Identifier	flags		303573	0					
ANR	303710	PtrMemberAccess	property_info -> flags		303573	1					
ANR	303711	Identifier	property_info		303573	0					
ANR	303712	Identifier	flags		303573	1					
ANR	303713	IfStatement	if ( UNEXPECTED ( ( flags & ZEND_ACC_SHADOW ) != 0 ) )		303573	2					
ANR	303714	Condition	UNEXPECTED ( ( flags & ZEND_ACC_SHADOW ) != 0 )	406:6:12273:12314	303573	0	True				
ANR	303715	CallExpression	UNEXPECTED ( ( flags & ZEND_ACC_SHADOW ) != 0 )		303573	0					
ANR	303716	Callee	UNEXPECTED		303573	0					
ANR	303717	Identifier	UNEXPECTED		303573	0					
ANR	303718	ArgumentList	( flags & ZEND_ACC_SHADOW ) != 0		303573	1					
ANR	303719	Argument	( flags & ZEND_ACC_SHADOW ) != 0		303573	0					
ANR	303720	EqualityExpression	( flags & ZEND_ACC_SHADOW ) != 0		303573	0		!=			
ANR	303721	BitAndExpression	flags & ZEND_ACC_SHADOW		303573	0		&			
ANR	303722	Identifier	flags		303573	0					
ANR	303723	Identifier	ZEND_ACC_SHADOW		303573	1					
ANR	303724	PrimaryExpression	0		303573	1					
ANR	303725	CompoundStatement		25:50:673:673	303573	1					
ANR	303726	ExpressionStatement	property_info = NULL	408:3:12376:12396	303573	0	True				
ANR	303727	AssignmentExpression	property_info = NULL		303573	0		=			
ANR	303728	Identifier	property_info		303573	0					
ANR	303729	Identifier	NULL		303573	1					
ANR	303730	ElseStatement	else		303573	0					
ANR	303731	CompoundStatement		28:9:763:763	303573	0					
ANR	303732	IfStatement	"if ( EXPECTED ( zend_verify_property_access ( property_info , ce ) != 0 ) )"		303573	0					
ANR	303733	Condition	"EXPECTED ( zend_verify_property_access ( property_info , ce ) != 0 )"	410:7:12416:12476	303573	0	True				
ANR	303734	CallExpression	"EXPECTED ( zend_verify_property_access ( property_info , ce ) != 0 )"		303573	0					
ANR	303735	Callee	EXPECTED		303573	0					
ANR	303736	Identifier	EXPECTED		303573	0					
ANR	303737	ArgumentList	"zend_verify_property_access ( property_info , ce ) != 0"		303573	1					
ANR	303738	Argument	"zend_verify_property_access ( property_info , ce ) != 0"		303573	0					
ANR	303739	EqualityExpression	"zend_verify_property_access ( property_info , ce ) != 0"		303573	0		!=			
ANR	303740	CallExpression	"zend_verify_property_access ( property_info , ce )"		303573	0					
ANR	303741	Callee	zend_verify_property_access		303573	0					
ANR	303742	Identifier	zend_verify_property_access		303573	0					
ANR	303743	ArgumentList	property_info		303573	1					
ANR	303744	Argument	property_info		303573	0					
ANR	303745	Identifier	property_info		303573	0					
ANR	303746	Argument	ce		303573	1					
ANR	303747	Identifier	ce		303573	0					
ANR	303748	PrimaryExpression	0		303573	1					
ANR	303749	CompoundStatement		29:70:835:835	303573	1					
ANR	303750	IfStatement	if ( UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) ) || UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) ) )		303573	0					
ANR	303751	Condition	UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) ) || UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) )	411:8:12489:12574	303573	0	True				
ANR	303752	OrExpression	UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) ) || UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) )		303573	0		||			
ANR	303753	CallExpression	UNEXPECTED ( ! ( flags & ZEND_ACC_CHANGED ) )		303573	0					
ANR	303754	Callee	UNEXPECTED		303573	0					
ANR	303755	Identifier	UNEXPECTED		303573	0					
ANR	303756	ArgumentList	! ( flags & ZEND_ACC_CHANGED )		303573	1					
ANR	303757	Argument	! ( flags & ZEND_ACC_CHANGED )		303573	0					
ANR	303758	UnaryOperationExpression	! ( flags & ZEND_ACC_CHANGED )		303573	0					
ANR	303759	UnaryOperator	!		303573	0					
ANR	303760	BitAndExpression	flags & ZEND_ACC_CHANGED		303573	1		&			
ANR	303761	Identifier	flags		303573	0					
ANR	303762	Identifier	ZEND_ACC_CHANGED		303573	1					
ANR	303763	CallExpression	UNEXPECTED ( ( flags & ZEND_ACC_PRIVATE ) )		303573	1					
ANR	303764	Callee	UNEXPECTED		303573	0					
ANR	303765	Identifier	UNEXPECTED		303573	0					
ANR	303766	ArgumentList	flags & ZEND_ACC_PRIVATE		303573	1					
ANR	303767	Argument	flags & ZEND_ACC_PRIVATE		303573	0					
ANR	303768	BitAndExpression	flags & ZEND_ACC_PRIVATE		303573	0		&			
ANR	303769	Identifier	flags		303573	0					
ANR	303770	Identifier	ZEND_ACC_PRIVATE		303573	1					
ANR	303771	CompoundStatement		31:48:933:933	303573	1					
ANR	303772	IfStatement	if ( UNEXPECTED ( ( flags & ZEND_ACC_STATIC ) != 0 ) )		303573	0					
ANR	303773	Condition	UNEXPECTED ( ( flags & ZEND_ACC_STATIC ) != 0 )	413:9:12588:12629	303573	0	True				
ANR	303774	CallExpression	UNEXPECTED ( ( flags & ZEND_ACC_STATIC ) != 0 )		303573	0					
ANR	303775	Callee	UNEXPECTED		303573	0					
ANR	303776	Identifier	UNEXPECTED		303573	0					
ANR	303777	ArgumentList	( flags & ZEND_ACC_STATIC ) != 0		303573	1					
ANR	303778	Argument	( flags & ZEND_ACC_STATIC ) != 0		303573	0					
ANR	303779	EqualityExpression	( flags & ZEND_ACC_STATIC ) != 0		303573	0		!=			
ANR	303780	BitAndExpression	flags & ZEND_ACC_STATIC		303573	0		&			
ANR	303781	Identifier	flags		303573	0					
ANR	303782	Identifier	ZEND_ACC_STATIC		303573	1					
ANR	303783	PrimaryExpression	0		303573	1					
ANR	303784	CompoundStatement		32:53:988:988	303573	1					
ANR	303785	IfStatement	if ( ! silent )		303573	0					
ANR	303786	Condition	! silent	414:10:12644:12650	303573	0	True				
ANR	303787	UnaryOperationExpression	! silent		303573	0					
ANR	303788	UnaryOperator	!		303573	0					
ANR	303789	Identifier	silent		303573	1					
ANR	303790	CompoundStatement		33:19:1009:1009	303573	1					
ANR	303791	ExpressionStatement	"zend_error ( E_NOTICE , ""Accessing static property %s::$%s as non static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"	415:7:12662:12771	303573	0	True				
ANR	303792	CallExpression	"zend_error ( E_NOTICE , ""Accessing static property %s::$%s as non static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"		303573	0					
ANR	303793	Callee	zend_error		303573	0					
ANR	303794	Identifier	zend_error		303573	0					
ANR	303795	ArgumentList	E_NOTICE		303573	1					
ANR	303796	Argument	E_NOTICE		303573	0					
ANR	303797	Identifier	E_NOTICE		303573	0					
ANR	303798	Argument	"""Accessing static property %s::$%s as non static"""		303573	1					
ANR	303799	PrimaryExpression	"""Accessing static property %s::$%s as non static"""		303573	0					
ANR	303800	Argument	ZSTR_VAL ( ce -> name )		303573	2					
ANR	303801	CallExpression	ZSTR_VAL ( ce -> name )		303573	0					
ANR	303802	Callee	ZSTR_VAL		303573	0					
ANR	303803	Identifier	ZSTR_VAL		303573	0					
ANR	303804	ArgumentList	ce -> name		303573	1					
ANR	303805	Argument	ce -> name		303573	0					
ANR	303806	PtrMemberAccess	ce -> name		303573	0					
ANR	303807	Identifier	ce		303573	0					
ANR	303808	Identifier	name		303573	1					
ANR	303809	Argument	ZSTR_VAL ( member )		303573	3					
ANR	303810	CallExpression	ZSTR_VAL ( member )		303573	0					
ANR	303811	Callee	ZSTR_VAL		303573	0					
ANR	303812	Identifier	ZSTR_VAL		303573	0					
ANR	303813	ArgumentList	member		303573	1					
ANR	303814	Argument	member		303573	0					
ANR	303815	Identifier	member		303573	0					
ANR	303816	GotoStatement	goto exit ;	418:5:12793:12802	303573	1	True				
ANR	303817	Identifier	exit		303573	0					
ANR	303818	ElseStatement	else		303573	0					
ANR	303819	CompoundStatement		39:10:1176:1176	303573	0					
ANR	303820	ExpressionStatement	property_info = ZEND_WRONG_PROPERTY_INFO	422:4:12869:12909	303573	0	True				
ANR	303821	AssignmentExpression	property_info = ZEND_WRONG_PROPERTY_INFO		303573	0		=			
ANR	303822	Identifier	property_info		303573	0					
ANR	303823	Identifier	ZEND_WRONG_PROPERTY_INFO		303573	1					
ANR	303824	IfStatement	"if ( EG ( scope ) != ce && EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE )"		303573	7					
ANR	303825	Condition	"EG ( scope ) != ce && EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"	427:5:12929:13133	303573	0	True				
ANR	303826	AndExpression	"EG ( scope ) != ce && EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303573	0		&&			
ANR	303827	EqualityExpression	EG ( scope ) != ce		303573	0		!=			
ANR	303828	CallExpression	EG ( scope )		303573	0					
ANR	303829	Callee	EG		303573	0					
ANR	303830	Identifier	EG		303573	0					
ANR	303831	ArgumentList	scope		303573	1					
ANR	303832	Argument	scope		303573	0					
ANR	303833	Identifier	scope		303573	0					
ANR	303834	Identifier	ce		303573	1					
ANR	303835	AndExpression	"EG ( scope ) && is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303573	1		&&			
ANR	303836	CallExpression	EG ( scope )		303573	0					
ANR	303837	Callee	EG		303573	0					
ANR	303838	Identifier	EG		303573	0					
ANR	303839	ArgumentList	scope		303573	1					
ANR	303840	Argument	scope		303573	0					
ANR	303841	Identifier	scope		303573	0					
ANR	303842	AndExpression	"is_derived_class ( ce , EG ( scope ) ) && ( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303573	1		&&			
ANR	303843	CallExpression	"is_derived_class ( ce , EG ( scope ) )"		303573	0					
ANR	303844	Callee	is_derived_class		303573	0					
ANR	303845	Identifier	is_derived_class		303573	0					
ANR	303846	ArgumentList	ce		303573	1					
ANR	303847	Argument	ce		303573	0					
ANR	303848	Identifier	ce		303573	0					
ANR	303849	Argument	EG ( scope )		303573	1					
ANR	303850	CallExpression	EG ( scope )		303573	0					
ANR	303851	Callee	EG		303573	0					
ANR	303852	Identifier	EG		303573	0					
ANR	303853	ArgumentList	scope		303573	1					
ANR	303854	Argument	scope		303573	0					
ANR	303855	Identifier	scope		303573	0					
ANR	303856	AndExpression	"( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL && ( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE"		303573	1		&&			
ANR	303857	EqualityExpression	"( zv = zend_hash_find ( & EG ( scope ) -> properties_info , member ) ) != NULL"		303573	0		!=			
ANR	303858	AssignmentExpression	"zv = zend_hash_find ( & EG ( scope ) -> properties_info , member )"		303573	0		=			
ANR	303859	Identifier	zv		303573	0					
ANR	303860	CallExpression	"zend_hash_find ( & EG ( scope ) -> properties_info , member )"		303573	1					
ANR	303861	Callee	zend_hash_find		303573	0					
ANR	303862	Identifier	zend_hash_find		303573	0					
ANR	303863	ArgumentList	& EG ( scope ) -> properties_info		303573	1					
ANR	303864	Argument	& EG ( scope ) -> properties_info		303573	0					
ANR	303865	UnaryOperationExpression	& EG ( scope ) -> properties_info		303573	0					
ANR	303866	UnaryOperator	&		303573	0					
ANR	303867	PtrMemberAccess	EG ( scope ) -> properties_info		303573	1					
ANR	303868	CallExpression	EG ( scope )		303573	0					
ANR	303869	Callee	EG		303573	0					
ANR	303870	Identifier	EG		303573	0					
ANR	303871	ArgumentList	scope		303573	1					
ANR	303872	Argument	scope		303573	0					
ANR	303873	Identifier	scope		303573	0					
ANR	303874	Identifier	properties_info		303573	1					
ANR	303875	Argument	member		303573	1					
ANR	303876	Identifier	member		303573	0					
ANR	303877	Identifier	NULL		303573	1					
ANR	303878	BitAndExpression	( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags & ZEND_ACC_PRIVATE		303573	1		&			
ANR	303879	PtrMemberAccess	( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags		303573	0					
ANR	303880	CastExpression	( zend_property_info * ) Z_PTR_P ( zv )		303573	0					
ANR	303881	CastTarget	zend_property_info *		303573	0					
ANR	303882	CallExpression	Z_PTR_P ( zv )		303573	1					
ANR	303883	Callee	Z_PTR_P		303573	0					
ANR	303884	Identifier	Z_PTR_P		303573	0					
ANR	303885	ArgumentList	zv		303573	1					
ANR	303886	Argument	zv		303573	0					
ANR	303887	Identifier	zv		303573	0					
ANR	303888	Identifier	flags		303573	1					
ANR	303889	Identifier	ZEND_ACC_PRIVATE		303573	1					
ANR	303890	CompoundStatement		50:67:1492:1492	303573	1					
ANR	303891	ExpressionStatement	property_info = ( zend_property_info * ) Z_PTR_P ( zv )	432:2:13140:13188	303573	0	True				
ANR	303892	AssignmentExpression	property_info = ( zend_property_info * ) Z_PTR_P ( zv )		303573	0		=			
ANR	303893	Identifier	property_info		303573	0					
ANR	303894	CastExpression	( zend_property_info * ) Z_PTR_P ( zv )		303573	1					
ANR	303895	CastTarget	zend_property_info *		303573	0					
ANR	303896	CallExpression	Z_PTR_P ( zv )		303573	1					
ANR	303897	Callee	Z_PTR_P		303573	0					
ANR	303898	Identifier	Z_PTR_P		303573	0					
ANR	303899	ArgumentList	zv		303573	1					
ANR	303900	Argument	zv		303573	0					
ANR	303901	Identifier	zv		303573	0					
ANR	303902	ElseStatement	else		303573	0					
ANR	303903	IfStatement	if ( UNEXPECTED ( property_info == NULL ) )		303573	0					
ANR	303904	Condition	UNEXPECTED ( property_info == NULL )	433:12:13202:13234	303573	0	True				
ANR	303905	CallExpression	UNEXPECTED ( property_info == NULL )		303573	0					
ANR	303906	Callee	UNEXPECTED		303573	0					
ANR	303907	Identifier	UNEXPECTED		303573	0					
ANR	303908	ArgumentList	property_info == NULL		303573	1					
ANR	303909	Argument	property_info == NULL		303573	0					
ANR	303910	EqualityExpression	property_info == NULL		303573	0		==			
ANR	303911	Identifier	property_info		303573	0					
ANR	303912	Identifier	NULL		303573	1					
ANR	303913	CompoundStatement		52:47:1593:1593	303573	1					
ANR	303914	Label	exit_dynamic :	434:0:13239:13251	303573	0	True				
ANR	303915	Identifier	exit_dynamic		303573	0					
ANR	303916	ReturnStatement	return NULL ;	435:2:13255:13266	303573	1	True				
ANR	303917	Identifier	NULL		303573	0					
ANR	303918	ElseStatement	else		303573	0					
ANR	303919	IfStatement	if ( UNEXPECTED ( property_info == ZEND_WRONG_PROPERTY_INFO ) )		303573	0					
ANR	303920	Condition	UNEXPECTED ( property_info == ZEND_WRONG_PROPERTY_INFO )	436:12:13280:13332	303573	0	True				
ANR	303921	CallExpression	UNEXPECTED ( property_info == ZEND_WRONG_PROPERTY_INFO )		303573	0					
ANR	303922	Callee	UNEXPECTED		303573	0					
ANR	303923	Identifier	UNEXPECTED		303573	0					
ANR	303924	ArgumentList	property_info == ZEND_WRONG_PROPERTY_INFO		303573	1					
ANR	303925	Argument	property_info == ZEND_WRONG_PROPERTY_INFO		303573	0					
ANR	303926	EqualityExpression	property_info == ZEND_WRONG_PROPERTY_INFO		303573	0		==			
ANR	303927	Identifier	property_info		303573	0					
ANR	303928	Identifier	ZEND_WRONG_PROPERTY_INFO		303573	1					
ANR	303929	CompoundStatement		55:67:1691:1691	303573	1					
ANR	303930	IfStatement	if ( ! silent )		303573	0					
ANR	303931	Condition	! silent	438:6:13417:13423	303573	0	True				
ANR	303932	UnaryOperationExpression	! silent		303573	0					
ANR	303933	UnaryOperator	!		303573	0					
ANR	303934	Identifier	silent		303573	1					
ANR	303935	CompoundStatement		57:15:1782:1782	303573	1					
ANR	303936	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access %s property %s::$%s"" , zend_visibility_string ( flags ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"	439:3:13431:13559	303573	0	True				
ANR	303937	CallExpression	"zend_throw_error ( NULL , ""Cannot access %s property %s::$%s"" , zend_visibility_string ( flags ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( member ) )"		303573	0					
ANR	303938	Callee	zend_throw_error		303573	0					
ANR	303939	Identifier	zend_throw_error		303573	0					
ANR	303940	ArgumentList	NULL		303573	1					
ANR	303941	Argument	NULL		303573	0					
ANR	303942	Identifier	NULL		303573	0					
ANR	303943	Argument	"""Cannot access %s property %s::$%s"""		303573	1					
ANR	303944	PrimaryExpression	"""Cannot access %s property %s::$%s"""		303573	0					
ANR	303945	Argument	zend_visibility_string ( flags )		303573	2					
ANR	303946	CallExpression	zend_visibility_string ( flags )		303573	0					
ANR	303947	Callee	zend_visibility_string		303573	0					
ANR	303948	Identifier	zend_visibility_string		303573	0					
ANR	303949	ArgumentList	flags		303573	1					
ANR	303950	Argument	flags		303573	0					
ANR	303951	Identifier	flags		303573	0					
ANR	303952	Argument	ZSTR_VAL ( ce -> name )		303573	3					
ANR	303953	CallExpression	ZSTR_VAL ( ce -> name )		303573	0					
ANR	303954	Callee	ZSTR_VAL		303573	0					
ANR	303955	Identifier	ZSTR_VAL		303573	0					
ANR	303956	ArgumentList	ce -> name		303573	1					
ANR	303957	Argument	ce -> name		303573	0					
ANR	303958	PtrMemberAccess	ce -> name		303573	0					
ANR	303959	Identifier	ce		303573	0					
ANR	303960	Identifier	name		303573	1					
ANR	303961	Argument	ZSTR_VAL ( member )		303573	4					
ANR	303962	CallExpression	ZSTR_VAL ( member )		303573	0					
ANR	303963	Callee	ZSTR_VAL		303573	0					
ANR	303964	Identifier	ZSTR_VAL		303573	0					
ANR	303965	ArgumentList	member		303573	1					
ANR	303966	Argument	member		303573	0					
ANR	303967	Identifier	member		303573	0					
ANR	303968	ReturnStatement	return ZEND_WRONG_PROPERTY_INFO ;	441:2:13567:13598	303573	1	True				
ANR	303969	Identifier	ZEND_WRONG_PROPERTY_INFO		303573	0					
ANR	303970	Label	exit :	444:0:13604:13608	303573	8	True				
ANR	303971	Identifier	exit		303573	0					
ANR	303972	ReturnStatement	return property_info ;	445:1:13611:13631	303573	9	True				
ANR	303973	Identifier	property_info		303573	0					
ANR	303974	ReturnType	ZEND_API zend_property_info *		303573	1					
ANR	303975	Identifier	zend_get_property_info		303573	2					
ANR	303976	ParameterList	"zend_class_entry * ce , zend_string * member , int silent"		303573	3					
ANR	303977	Parameter	zend_class_entry * ce	381:52:11578:11597	303573	0	True				
ANR	303978	ParameterType	zend_class_entry *		303573	0					
ANR	303979	Identifier	ce		303573	1					
ANR	303980	Parameter	zend_string * member	381:74:11600:11618	303573	1	True				
ANR	303981	ParameterType	zend_string *		303573	0					
ANR	303982	Identifier	member		303573	1					
ANR	303983	Parameter	int silent	381:95:11621:11630	303573	2	True				
ANR	303984	ParameterType	int		303573	0					
ANR	303985	Identifier	silent		303573	1					
ANR	303986	CFGEntryNode	ENTRY		303573		True				
ANR	303987	CFGExitNode	EXIT		303573		True				
ANR	303988	Symbol	is_derived_class		303573						
ANR	303989	Symbol	zend_verify_property_access		303573						
ANR	303990	Symbol	flags		303573						
ANR	303991	Symbol	ZEND_ACC_CHANGED		303573						
ANR	303992	Symbol	* ce		303573						
ANR	303993	Symbol	zend_visibility_string		303573						
ANR	303994	Symbol	UNEXPECTED		303573						
ANR	303995	Symbol	zend_hash_find		303573						
ANR	303996	Symbol	* property_info		303573						
ANR	303997	Symbol	ZEND_ACC_SHADOW		303573						
ANR	303998	Symbol	scope		303573						
ANR	303999	Symbol	member		303573						
ANR	304000	Symbol	ZEND_ACC_STATIC		303573						
ANR	304001	Symbol	ce -> name		303573						
ANR	304002	Symbol	property_info -> flags		303573						
ANR	304003	Symbol	* ZSTR_VAL		303573						
ANR	304004	Symbol	property_info		303573						
ANR	304005	Symbol	Z_PTR_P		303573						
ANR	304006	Symbol	ce		303573						
ANR	304007	Symbol	silent		303573						
ANR	304008	Symbol	EG		303573						
ANR	304009	Symbol	NULL		303573						
ANR	304010	Symbol	zend_hash_num_elements		303573						
ANR	304011	Symbol	( ( zend_property_info * ) Z_PTR_P ( zv ) ) -> flags		303573						
ANR	304012	Symbol	E_NOTICE		303573						
ANR	304013	Symbol	ZSTR_VAL		303573						
ANR	304014	Symbol	ZEND_ACC_PRIVATE		303573						
ANR	304015	Symbol	ZEND_WRONG_PROPERTY_INFO		303573						
ANR	304016	Symbol	& EG ( scope ) -> properties_info		303573						
ANR	304017	Symbol	& ce -> properties_info		303573						
ANR	304018	Symbol	ZSTR_LEN		303573						
ANR	304019	Symbol	zv		303573						
ANR	304020	Symbol	EXPECTED		303573						
ANR	304021	Symbol	* Z_PTR_P		303573						
ANR	304022	Function	zend_check_property_access	449:0:13646:14996							
ANR	304023	FunctionDef	"zend_check_property_access (zend_object * zobj , zend_string * prop_info_name)"		304022	0					
ANR	304024	CompoundStatement		450:0:13744:14996	304022	0					
ANR	304025	IdentifierDeclStatement	zend_property_info * property_info ;	451:1:13747:13780	304022	0	True				
ANR	304026	IdentifierDecl	* property_info		304022	0					
ANR	304027	IdentifierDeclType	zend_property_info *		304022	0					
ANR	304028	Identifier	property_info		304022	1					
ANR	304029	IdentifierDeclStatement	const char * class_name = NULL ;	452:1:13783:13812	304022	1	True				
ANR	304030	IdentifierDecl	* class_name = NULL		304022	0					
ANR	304031	IdentifierDeclType	const char *		304022	0					
ANR	304032	Identifier	class_name		304022	1					
ANR	304033	AssignmentExpression	* class_name = NULL		304022	2		=			
ANR	304034	Identifier	NULL		304022	0					
ANR	304035	Identifier	NULL		304022	1					
ANR	304036	IdentifierDeclStatement	const char * prop_name ;	453:1:13815:13836	304022	2	True				
ANR	304037	IdentifierDecl	* prop_name		304022	0					
ANR	304038	IdentifierDeclType	const char *		304022	0					
ANR	304039	Identifier	prop_name		304022	1					
ANR	304040	IdentifierDeclStatement	zend_string * member ;	454:1:13839:13858	304022	3	True				
ANR	304041	IdentifierDecl	* member		304022	0					
ANR	304042	IdentifierDeclType	zend_string *		304022	0					
ANR	304043	Identifier	member		304022	1					
ANR	304044	IdentifierDeclStatement	size_t prop_name_len ;	455:1:13861:13881	304022	4	True				
ANR	304045	IdentifierDecl	prop_name_len		304022	0					
ANR	304046	IdentifierDeclType	size_t		304022	0					
ANR	304047	Identifier	prop_name_len		304022	1					
ANR	304048	IfStatement	if ( ZSTR_VAL ( prop_info_name ) [ 0 ] == 0 )		304022	5					
ANR	304049	Condition	ZSTR_VAL ( prop_info_name ) [ 0 ] == 0	457:5:13889:13920	304022	0	True				
ANR	304050	EqualityExpression	ZSTR_VAL ( prop_info_name ) [ 0 ] == 0		304022	0		==			
ANR	304051	ArrayIndexing	ZSTR_VAL ( prop_info_name ) [ 0 ]		304022	0					
ANR	304052	CallExpression	ZSTR_VAL ( prop_info_name )		304022	0					
ANR	304053	Callee	ZSTR_VAL		304022	0					
ANR	304054	Identifier	ZSTR_VAL		304022	0					
ANR	304055	ArgumentList	prop_info_name		304022	1					
ANR	304056	Argument	prop_info_name		304022	0					
ANR	304057	Identifier	prop_info_name		304022	0					
ANR	304058	PrimaryExpression	0		304022	1					
ANR	304059	PrimaryExpression	0		304022	1					
ANR	304060	CompoundStatement		8:39:178:178	304022	1					
ANR	304061	ExpressionStatement	"zend_unmangle_property_name_ex ( prop_info_name , & class_name , & prop_name , & prop_name_len )"	458:2:13927:14014	304022	0	True				
ANR	304062	CallExpression	"zend_unmangle_property_name_ex ( prop_info_name , & class_name , & prop_name , & prop_name_len )"		304022	0					
ANR	304063	Callee	zend_unmangle_property_name_ex		304022	0					
ANR	304064	Identifier	zend_unmangle_property_name_ex		304022	0					
ANR	304065	ArgumentList	prop_info_name		304022	1					
ANR	304066	Argument	prop_info_name		304022	0					
ANR	304067	Identifier	prop_info_name		304022	0					
ANR	304068	Argument	& class_name		304022	1					
ANR	304069	UnaryOperationExpression	& class_name		304022	0					
ANR	304070	UnaryOperator	&		304022	0					
ANR	304071	Identifier	class_name		304022	1					
ANR	304072	Argument	& prop_name		304022	2					
ANR	304073	UnaryOperationExpression	& prop_name		304022	0					
ANR	304074	UnaryOperator	&		304022	0					
ANR	304075	Identifier	prop_name		304022	1					
ANR	304076	Argument	& prop_name_len		304022	3					
ANR	304077	UnaryOperationExpression	& prop_name_len		304022	0					
ANR	304078	UnaryOperator	&		304022	0					
ANR	304079	Identifier	prop_name_len		304022	1					
ANR	304080	ExpressionStatement	"member = zend_string_init ( prop_name , prop_name_len , 0 )"	459:2:14018:14072	304022	1	True				
ANR	304081	AssignmentExpression	"member = zend_string_init ( prop_name , prop_name_len , 0 )"		304022	0		=			
ANR	304082	Identifier	member		304022	0					
ANR	304083	CallExpression	"zend_string_init ( prop_name , prop_name_len , 0 )"		304022	1					
ANR	304084	Callee	zend_string_init		304022	0					
ANR	304085	Identifier	zend_string_init		304022	0					
ANR	304086	ArgumentList	prop_name		304022	1					
ANR	304087	Argument	prop_name		304022	0					
ANR	304088	Identifier	prop_name		304022	0					
ANR	304089	Argument	prop_name_len		304022	1					
ANR	304090	Identifier	prop_name_len		304022	0					
ANR	304091	Argument	0		304022	2					
ANR	304092	PrimaryExpression	0		304022	0					
ANR	304093	ElseStatement	else		304022	0					
ANR	304094	CompoundStatement		11:8:337:337	304022	0					
ANR	304095	ExpressionStatement	member = zend_string_copy ( prop_info_name )	461:2:14086:14127	304022	0	True				
ANR	304096	AssignmentExpression	member = zend_string_copy ( prop_info_name )		304022	0		=			
ANR	304097	Identifier	member		304022	0					
ANR	304098	CallExpression	zend_string_copy ( prop_info_name )		304022	1					
ANR	304099	Callee	zend_string_copy		304022	0					
ANR	304100	Identifier	zend_string_copy		304022	0					
ANR	304101	ArgumentList	prop_info_name		304022	1					
ANR	304102	Argument	prop_info_name		304022	0					
ANR	304103	Identifier	prop_info_name		304022	0					
ANR	304104	ExpressionStatement	"property_info = zend_get_property_info ( zobj -> ce , member , 1 )"	463:1:14133:14192	304022	6	True				
ANR	304105	AssignmentExpression	"property_info = zend_get_property_info ( zobj -> ce , member , 1 )"		304022	0		=			
ANR	304106	Identifier	property_info		304022	0					
ANR	304107	CallExpression	"zend_get_property_info ( zobj -> ce , member , 1 )"		304022	1					
ANR	304108	Callee	zend_get_property_info		304022	0					
ANR	304109	Identifier	zend_get_property_info		304022	0					
ANR	304110	ArgumentList	zobj -> ce		304022	1					
ANR	304111	Argument	zobj -> ce		304022	0					
ANR	304112	PtrMemberAccess	zobj -> ce		304022	0					
ANR	304113	Identifier	zobj		304022	0					
ANR	304114	Identifier	ce		304022	1					
ANR	304115	Argument	member		304022	1					
ANR	304116	Identifier	member		304022	0					
ANR	304117	Argument	1		304022	2					
ANR	304118	PrimaryExpression	1		304022	0					
ANR	304119	ExpressionStatement	zend_string_release ( member )	464:1:14195:14222	304022	7	True				
ANR	304120	CallExpression	zend_string_release ( member )		304022	0					
ANR	304121	Callee	zend_string_release		304022	0					
ANR	304122	Identifier	zend_string_release		304022	0					
ANR	304123	ArgumentList	member		304022	1					
ANR	304124	Argument	member		304022	0					
ANR	304125	Identifier	member		304022	0					
ANR	304126	IfStatement	if ( property_info == NULL )		304022	8					
ANR	304127	Condition	property_info == NULL	465:5:14229:14249	304022	0	True				
ANR	304128	EqualityExpression	property_info == NULL		304022	0		==			
ANR	304129	Identifier	property_info		304022	0					
ANR	304130	Identifier	NULL		304022	1					
ANR	304131	CompoundStatement		16:28:507:507	304022	1					
ANR	304132	IfStatement	if ( class_name && class_name [ 0 ] != '*' )		304022	0					
ANR	304133	Condition	class_name && class_name [ 0 ] != '*'	467:6:14294:14327	304022	0	True				
ANR	304134	AndExpression	class_name && class_name [ 0 ] != '*'		304022	0		&&			
ANR	304135	Identifier	class_name		304022	0					
ANR	304136	EqualityExpression	class_name [ 0 ] != '*'		304022	1		!=			
ANR	304137	ArrayIndexing	class_name [ 0 ]		304022	0					
ANR	304138	Identifier	class_name		304022	0					
ANR	304139	PrimaryExpression	0		304022	1					
ANR	304140	PrimaryExpression	'*'		304022	1					
ANR	304141	CompoundStatement		18:42:585:585	304022	1					
ANR	304142	ReturnStatement	return FAILURE ;	469:3:14380:14394	304022	0	True				
ANR	304143	Identifier	FAILURE		304022	0					
ANR	304144	ReturnStatement	return SUCCESS ;	471:2:14402:14416	304022	1	True				
ANR	304145	Identifier	SUCCESS		304022	0					
ANR	304146	ElseStatement	else		304022	0					
ANR	304147	IfStatement	if ( property_info == ZEND_WRONG_PROPERTY_INFO )		304022	0					
ANR	304148	Condition	property_info == ZEND_WRONG_PROPERTY_INFO	472:12:14430:14470	304022	0	True				
ANR	304149	EqualityExpression	property_info == ZEND_WRONG_PROPERTY_INFO		304022	0		==			
ANR	304150	Identifier	property_info		304022	0					
ANR	304151	Identifier	ZEND_WRONG_PROPERTY_INFO		304022	1					
ANR	304152	CompoundStatement		23:55:728:728	304022	1					
ANR	304153	ReturnStatement	return FAILURE ;	473:2:14477:14491	304022	0	True				
ANR	304154	Identifier	FAILURE		304022	0					
ANR	304155	IfStatement	if ( class_name && class_name [ 0 ] != '*' )		304022	9					
ANR	304156	Condition	class_name && class_name [ 0 ] != '*'	475:5:14501:14534	304022	0	True				
ANR	304157	AndExpression	class_name && class_name [ 0 ] != '*'		304022	0		&&			
ANR	304158	Identifier	class_name		304022	0					
ANR	304159	EqualityExpression	class_name [ 0 ] != '*'		304022	1		!=			
ANR	304160	ArrayIndexing	class_name [ 0 ]		304022	0					
ANR	304161	Identifier	class_name		304022	0					
ANR	304162	PrimaryExpression	0		304022	1					
ANR	304163	PrimaryExpression	'*'		304022	1					
ANR	304164	CompoundStatement		26:41:792:792	304022	1					
ANR	304165	IfStatement	if ( ! ( property_info -> flags & ZEND_ACC_PRIVATE ) )		304022	0					
ANR	304166	Condition	! ( property_info -> flags & ZEND_ACC_PRIVATE )	476:6:14545:14586	304022	0	True				
ANR	304167	UnaryOperationExpression	! ( property_info -> flags & ZEND_ACC_PRIVATE )		304022	0					
ANR	304168	UnaryOperator	!		304022	0					
ANR	304169	BitAndExpression	property_info -> flags & ZEND_ACC_PRIVATE		304022	1		&			
ANR	304170	PtrMemberAccess	property_info -> flags		304022	0					
ANR	304171	Identifier	property_info		304022	0					
ANR	304172	Identifier	flags		304022	1					
ANR	304173	Identifier	ZEND_ACC_PRIVATE		304022	1					
ANR	304174	CompoundStatement		27:50:844:844	304022	1					
ANR	304175	ReturnStatement	return FAILURE ;	478:3:14684:14698	304022	0	True				
ANR	304176	Identifier	FAILURE		304022	0					
ANR	304177	ElseStatement	else		304022	0					
ANR	304178	IfStatement	"if ( strcmp ( ZSTR_VAL ( prop_info_name ) + 1 , ZSTR_VAL ( property_info -> name ) + 1 ) )"		304022	0					
ANR	304179	Condition	"strcmp ( ZSTR_VAL ( prop_info_name ) + 1 , ZSTR_VAL ( property_info -> name ) + 1 )"	479:13:14713:14779	304022	0	True				
ANR	304180	CallExpression	"strcmp ( ZSTR_VAL ( prop_info_name ) + 1 , ZSTR_VAL ( property_info -> name ) + 1 )"		304022	0					
ANR	304181	Callee	strcmp		304022	0					
ANR	304182	Identifier	strcmp		304022	0					
ANR	304183	ArgumentList	ZSTR_VAL ( prop_info_name ) + 1		304022	1					
ANR	304184	Argument	ZSTR_VAL ( prop_info_name ) + 1		304022	0					
ANR	304185	AdditiveExpression	ZSTR_VAL ( prop_info_name ) + 1		304022	0		+			
ANR	304186	CallExpression	ZSTR_VAL ( prop_info_name )		304022	0					
ANR	304187	Callee	ZSTR_VAL		304022	0					
ANR	304188	Identifier	ZSTR_VAL		304022	0					
ANR	304189	ArgumentList	prop_info_name		304022	1					
ANR	304190	Argument	prop_info_name		304022	0					
ANR	304191	Identifier	prop_info_name		304022	0					
ANR	304192	PrimaryExpression	1		304022	1					
ANR	304193	Argument	ZSTR_VAL ( property_info -> name ) + 1		304022	1					
ANR	304194	AdditiveExpression	ZSTR_VAL ( property_info -> name ) + 1		304022	0		+			
ANR	304195	CallExpression	ZSTR_VAL ( property_info -> name )		304022	0					
ANR	304196	Callee	ZSTR_VAL		304022	0					
ANR	304197	Identifier	ZSTR_VAL		304022	0					
ANR	304198	ArgumentList	property_info -> name		304022	1					
ANR	304199	Argument	property_info -> name		304022	0					
ANR	304200	PtrMemberAccess	property_info -> name		304022	0					
ANR	304201	Identifier	property_info		304022	0					
ANR	304202	Identifier	name		304022	1					
ANR	304203	PrimaryExpression	1		304022	1					
ANR	304204	CompoundStatement		30:82:1037:1037	304022	1					
ANR	304205	ReturnStatement	return FAILURE ;	481:3:14891:14905	304022	0	True				
ANR	304206	Identifier	FAILURE		304022	0					
ANR	304207	ReturnStatement	"return zend_verify_property_access ( property_info , zobj -> ce ) ? SUCCESS : FAILURE ;"	484:1:14915:14994	304022	10	True				
ANR	304208	ConditionalExpression	"zend_verify_property_access ( property_info , zobj -> ce ) ? SUCCESS : FAILURE"		304022	0					
ANR	304209	Condition	"zend_verify_property_access ( property_info , zobj -> ce )"		304022	0					
ANR	304210	CallExpression	"zend_verify_property_access ( property_info , zobj -> ce )"		304022	0					
ANR	304211	Callee	zend_verify_property_access		304022	0					
ANR	304212	Identifier	zend_verify_property_access		304022	0					
ANR	304213	ArgumentList	property_info		304022	1					
ANR	304214	Argument	property_info		304022	0					
ANR	304215	Identifier	property_info		304022	0					
ANR	304216	Argument	zobj -> ce		304022	1					
ANR	304217	PtrMemberAccess	zobj -> ce		304022	0					
ANR	304218	Identifier	zobj		304022	0					
ANR	304219	Identifier	ce		304022	1					
ANR	304220	Identifier	SUCCESS		304022	1					
ANR	304221	Identifier	FAILURE		304022	2					
ANR	304222	ReturnType	ZEND_API int		304022	1					
ANR	304223	Identifier	zend_check_property_access		304022	2					
ANR	304224	ParameterList	"zend_object * zobj , zend_string * prop_info_name"		304022	3					
ANR	304225	Parameter	zend_object * zobj	449:40:13686:13702	304022	0	True				
ANR	304226	ParameterType	zend_object *		304022	0					
ANR	304227	Identifier	zobj		304022	1					
ANR	304228	Parameter	zend_string * prop_info_name	449:59:13705:13731	304022	1	True				
ANR	304229	ParameterType	zend_string *		304022	0					
ANR	304230	Identifier	prop_info_name		304022	1					
ANR	304231	CFGEntryNode	ENTRY		304022		True				
ANR	304232	CFGExitNode	EXIT		304022		True				
ANR	304233	Symbol	* class_name		304022						
ANR	304234	Symbol	zobj		304022						
ANR	304235	Symbol	zend_verify_property_access		304022						
ANR	304236	Symbol	& class_name		304022						
ANR	304237	Symbol	zend_string_init		304022						
ANR	304238	Symbol	* property_info		304022						
ANR	304239	Symbol	* zobj		304022						
ANR	304240	Symbol	member		304022						
ANR	304241	Symbol	& prop_name		304022						
ANR	304242	Symbol	class_name		304022						
ANR	304243	Symbol	property_info -> flags		304022						
ANR	304244	Symbol	* ZSTR_VAL		304022						
ANR	304245	Symbol	property_info		304022						
ANR	304246	Symbol	& prop_name_len		304022						
ANR	304247	Symbol	strcmp		304022						
ANR	304248	Symbol	NULL		304022						
ANR	304249	Symbol	SUCCESS		304022						
ANR	304250	Symbol	prop_name_len		304022						
ANR	304251	Symbol	property_info -> name		304022						
ANR	304252	Symbol	zend_string_copy		304022						
ANR	304253	Symbol	zobj -> ce		304022						
ANR	304254	Symbol	FAILURE		304022						
ANR	304255	Symbol	ZSTR_VAL		304022						
ANR	304256	Symbol	ZEND_ACC_PRIVATE		304022						
ANR	304257	Symbol	prop_name		304022						
ANR	304258	Symbol	ZEND_WRONG_PROPERTY_INFO		304022						
ANR	304259	Symbol	zend_get_property_info		304022						
ANR	304260	Symbol	prop_info_name		304022						
ANR	304261	Function	zend_property_guard_dtor	488:0:15009:15114							
ANR	304262	FunctionDef	zend_property_guard_dtor (zval * el)		304261	0					
ANR	304263	CompoundStatement		488:57:15066:15114	304261	0					
ANR	304264	ExpressionStatement	"efree_size ( Z_PTR_P ( el ) , sizeof ( zend_ulong ) )"	489:1:15069:15112	304261	0	True				
ANR	304265	CallExpression	"efree_size ( Z_PTR_P ( el ) , sizeof ( zend_ulong ) )"		304261	0					
ANR	304266	Callee	efree_size		304261	0					
ANR	304267	Identifier	efree_size		304261	0					
ANR	304268	ArgumentList	Z_PTR_P ( el )		304261	1					
ANR	304269	Argument	Z_PTR_P ( el )		304261	0					
ANR	304270	CallExpression	Z_PTR_P ( el )		304261	0					
ANR	304271	Callee	Z_PTR_P		304261	0					
ANR	304272	Identifier	Z_PTR_P		304261	0					
ANR	304273	ArgumentList	el		304261	1					
ANR	304274	Argument	el		304261	0					
ANR	304275	Identifier	el		304261	0					
ANR	304276	Argument	sizeof ( zend_ulong )		304261	1					
ANR	304277	SizeofExpression	sizeof ( zend_ulong )		304261	0					
ANR	304278	Sizeof	sizeof		304261	0					
ANR	304279	SizeofOperand	zend_ulong		304261	1					
ANR	304280	ReturnType	static void		304261	1					
ANR	304281	Identifier	zend_property_guard_dtor		304261	2					
ANR	304282	ParameterList	zval * el		304261	3					
ANR	304283	Parameter	zval * el	488:37:15046:15053	304261	0	True				
ANR	304284	ParameterType	zval *		304261	0					
ANR	304285	Identifier	el		304261	1					
ANR	304286	CFGEntryNode	ENTRY		304261		True				
ANR	304287	CFGExitNode	EXIT		304261		True				
ANR	304288	Symbol	Z_PTR_P		304261						
ANR	304289	Symbol	el		304261						
ANR	304290	Function	zend_get_property_guard	493:0:15127:15881							
ANR	304291	FunctionDef	"zend_get_property_guard (zend_object * zobj , zend_string * member)"		304290	0					
ANR	304292	CompoundStatement		494:0:15219:15881	304290	0					
ANR	304293	IdentifierDeclStatement	HashTable * guards ;	495:1:15222:15239	304290	0	True				
ANR	304294	IdentifierDecl	* guards		304290	0					
ANR	304295	IdentifierDeclType	HashTable *		304290	0					
ANR	304296	Identifier	guards		304290	1					
ANR	304297	IdentifierDeclStatement	"zend_long stub , * guard ;"	496:1:15242:15264	304290	1	True				
ANR	304298	IdentifierDecl	stub		304290	0					
ANR	304299	IdentifierDeclType	zend_long		304290	0					
ANR	304300	Identifier	stub		304290	1					
ANR	304301	IdentifierDecl	* guard		304290	1					
ANR	304302	IdentifierDeclType	zend_long *		304290	0					
ANR	304303	Identifier	guard		304290	1					
ANR	304304	ExpressionStatement	ZEND_ASSERT ( GC_FLAGS ( zobj ) & IS_OBJ_USE_GUARDS )	498:1:15268:15315	304290	2	True				
ANR	304305	CallExpression	ZEND_ASSERT ( GC_FLAGS ( zobj ) & IS_OBJ_USE_GUARDS )		304290	0					
ANR	304306	Callee	ZEND_ASSERT		304290	0					
ANR	304307	Identifier	ZEND_ASSERT		304290	0					
ANR	304308	ArgumentList	GC_FLAGS ( zobj ) & IS_OBJ_USE_GUARDS		304290	1					
ANR	304309	Argument	GC_FLAGS ( zobj ) & IS_OBJ_USE_GUARDS		304290	0					
ANR	304310	BitAndExpression	GC_FLAGS ( zobj ) & IS_OBJ_USE_GUARDS		304290	0		&			
ANR	304311	CallExpression	GC_FLAGS ( zobj )		304290	0					
ANR	304312	Callee	GC_FLAGS		304290	0					
ANR	304313	Identifier	GC_FLAGS		304290	0					
ANR	304314	ArgumentList	zobj		304290	1					
ANR	304315	Argument	zobj		304290	0					
ANR	304316	Identifier	zobj		304290	0					
ANR	304317	Identifier	IS_OBJ_USE_GUARDS		304290	1					
ANR	304318	IfStatement	if ( GC_FLAGS ( zobj ) & IS_OBJ_HAS_GUARDS )		304290	3					
ANR	304319	Condition	GC_FLAGS ( zobj ) & IS_OBJ_HAS_GUARDS	499:5:15322:15355	304290	0	True				
ANR	304320	BitAndExpression	GC_FLAGS ( zobj ) & IS_OBJ_HAS_GUARDS		304290	0		&			
ANR	304321	CallExpression	GC_FLAGS ( zobj )		304290	0					
ANR	304322	Callee	GC_FLAGS		304290	0					
ANR	304323	Identifier	GC_FLAGS		304290	0					
ANR	304324	ArgumentList	zobj		304290	1					
ANR	304325	Argument	zobj		304290	0					
ANR	304326	Identifier	zobj		304290	0					
ANR	304327	Identifier	IS_OBJ_HAS_GUARDS		304290	1					
ANR	304328	CompoundStatement		6:41:138:138	304290	1					
ANR	304329	ExpressionStatement	guards = Z_PTR ( zobj -> properties_table [ zobj -> ce -> default_properties_count ] )	500:2:15362:15436	304290	0	True				
ANR	304330	AssignmentExpression	guards = Z_PTR ( zobj -> properties_table [ zobj -> ce -> default_properties_count ] )		304290	0		=			
ANR	304331	Identifier	guards		304290	0					
ANR	304332	CallExpression	Z_PTR ( zobj -> properties_table [ zobj -> ce -> default_properties_count ] )		304290	1					
ANR	304333	Callee	Z_PTR		304290	0					
ANR	304334	Identifier	Z_PTR		304290	0					
ANR	304335	ArgumentList	zobj -> properties_table [ zobj -> ce -> default_properties_count ]		304290	1					
ANR	304336	Argument	zobj -> properties_table [ zobj -> ce -> default_properties_count ]		304290	0					
ANR	304337	ArrayIndexing	zobj -> properties_table [ zobj -> ce -> default_properties_count ]		304290	0					
ANR	304338	PtrMemberAccess	zobj -> properties_table		304290	0					
ANR	304339	Identifier	zobj		304290	0					
ANR	304340	Identifier	properties_table		304290	1					
ANR	304341	PtrMemberAccess	zobj -> ce -> default_properties_count		304290	1					
ANR	304342	PtrMemberAccess	zobj -> ce		304290	0					
ANR	304343	Identifier	zobj		304290	0					
ANR	304344	Identifier	ce		304290	1					
ANR	304345	Identifier	default_properties_count		304290	1					
ANR	304346	ExpressionStatement	ZEND_ASSERT ( guards != NULL )	501:2:15440:15467	304290	1	True				
ANR	304347	CallExpression	ZEND_ASSERT ( guards != NULL )		304290	0					
ANR	304348	Callee	ZEND_ASSERT		304290	0					
ANR	304349	Identifier	ZEND_ASSERT		304290	0					
ANR	304350	ArgumentList	guards != NULL		304290	1					
ANR	304351	Argument	guards != NULL		304290	0					
ANR	304352	EqualityExpression	guards != NULL		304290	0		!=			
ANR	304353	Identifier	guards		304290	0					
ANR	304354	Identifier	NULL		304290	1					
ANR	304355	IfStatement	"if ( ( guard = ( zend_long * ) zend_hash_find_ptr ( guards , member ) ) != NULL )"		304290	2					
ANR	304356	Condition	"( guard = ( zend_long * ) zend_hash_find_ptr ( guards , member ) ) != NULL"	502:6:15475:15539	304290	0	True				
ANR	304357	EqualityExpression	"( guard = ( zend_long * ) zend_hash_find_ptr ( guards , member ) ) != NULL"		304290	0		!=			
ANR	304358	AssignmentExpression	"guard = ( zend_long * ) zend_hash_find_ptr ( guards , member )"		304290	0		=			
ANR	304359	Identifier	guard		304290	0					
ANR	304360	CastExpression	"( zend_long * ) zend_hash_find_ptr ( guards , member )"		304290	1					
ANR	304361	CastTarget	zend_long *		304290	0					
ANR	304362	CallExpression	"zend_hash_find_ptr ( guards , member )"		304290	1					
ANR	304363	Callee	zend_hash_find_ptr		304290	0					
ANR	304364	Identifier	zend_hash_find_ptr		304290	0					
ANR	304365	ArgumentList	guards		304290	1					
ANR	304366	Argument	guards		304290	0					
ANR	304367	Identifier	guards		304290	0					
ANR	304368	Argument	member		304290	1					
ANR	304369	Identifier	member		304290	0					
ANR	304370	Identifier	NULL		304290	1					
ANR	304371	CompoundStatement		9:73:322:322	304290	1					
ANR	304372	ReturnStatement	return guard ;	503:3:15547:15559	304290	0	True				
ANR	304373	Identifier	guard		304290	0					
ANR	304374	ElseStatement	else		304290	0					
ANR	304375	CompoundStatement		12:8:353:353	304290	0					
ANR	304376	ExpressionStatement	ALLOC_HASHTABLE ( guards )	506:2:15577:15600	304290	0	True				
ANR	304377	CallExpression	ALLOC_HASHTABLE ( guards )		304290	0					
ANR	304378	Callee	ALLOC_HASHTABLE		304290	0					
ANR	304379	Identifier	ALLOC_HASHTABLE		304290	0					
ANR	304380	ArgumentList	guards		304290	1					
ANR	304381	Argument	guards		304290	0					
ANR	304382	Identifier	guards		304290	0					
ANR	304383	ExpressionStatement	"zend_hash_init ( guards , 8 , NULL , zend_property_guard_dtor , 0 )"	507:2:15604:15664	304290	1	True				
ANR	304384	CallExpression	"zend_hash_init ( guards , 8 , NULL , zend_property_guard_dtor , 0 )"		304290	0					
ANR	304385	Callee	zend_hash_init		304290	0					
ANR	304386	Identifier	zend_hash_init		304290	0					
ANR	304387	ArgumentList	guards		304290	1					
ANR	304388	Argument	guards		304290	0					
ANR	304389	Identifier	guards		304290	0					
ANR	304390	Argument	8		304290	1					
ANR	304391	PrimaryExpression	8		304290	0					
ANR	304392	Argument	NULL		304290	2					
ANR	304393	Identifier	NULL		304290	0					
ANR	304394	Argument	zend_property_guard_dtor		304290	3					
ANR	304395	Identifier	zend_property_guard_dtor		304290	0					
ANR	304396	Argument	0		304290	4					
ANR	304397	PrimaryExpression	0		304290	0					
ANR	304398	ExpressionStatement	Z_PTR ( zobj -> properties_table [ zobj -> ce -> default_properties_count ] ) = guards	508:2:15668:15742	304290	2	True				
ANR	304399	AssignmentExpression	Z_PTR ( zobj -> properties_table [ zobj -> ce -> default_properties_count ] ) = guards		304290	0		=			
ANR	304400	CallExpression	Z_PTR ( zobj -> properties_table [ zobj -> ce -> default_properties_count ] )		304290	0					
ANR	304401	Callee	Z_PTR		304290	0					
ANR	304402	Identifier	Z_PTR		304290	0					
ANR	304403	ArgumentList	zobj -> properties_table [ zobj -> ce -> default_properties_count ]		304290	1					
ANR	304404	Argument	zobj -> properties_table [ zobj -> ce -> default_properties_count ]		304290	0					
ANR	304405	ArrayIndexing	zobj -> properties_table [ zobj -> ce -> default_properties_count ]		304290	0					
ANR	304406	PtrMemberAccess	zobj -> properties_table		304290	0					
ANR	304407	Identifier	zobj		304290	0					
ANR	304408	Identifier	properties_table		304290	1					
ANR	304409	PtrMemberAccess	zobj -> ce -> default_properties_count		304290	1					
ANR	304410	PtrMemberAccess	zobj -> ce		304290	0					
ANR	304411	Identifier	zobj		304290	0					
ANR	304412	Identifier	ce		304290	1					
ANR	304413	Identifier	default_properties_count		304290	1					
ANR	304414	Identifier	guards		304290	1					
ANR	304415	ExpressionStatement	GC_FLAGS ( zobj ) |= IS_OBJ_HAS_GUARDS	509:2:15746:15781	304290	3	True				
ANR	304416	AssignmentExpression	GC_FLAGS ( zobj ) |= IS_OBJ_HAS_GUARDS		304290	0		|=			
ANR	304417	CallExpression	GC_FLAGS ( zobj )		304290	0					
ANR	304418	Callee	GC_FLAGS		304290	0					
ANR	304419	Identifier	GC_FLAGS		304290	0					
ANR	304420	ArgumentList	zobj		304290	1					
ANR	304421	Argument	zobj		304290	0					
ANR	304422	Identifier	zobj		304290	0					
ANR	304423	Identifier	IS_OBJ_HAS_GUARDS		304290	1					
ANR	304424	ExpressionStatement	stub = 0	512:1:15788:15796	304290	4	True				
ANR	304425	AssignmentExpression	stub = 0		304290	0		=			
ANR	304426	Identifier	stub		304290	0					
ANR	304427	PrimaryExpression	0		304290	1					
ANR	304428	ReturnStatement	"return ( zend_long * ) zend_hash_add_mem ( guards , member , & stub , sizeof ( zend_ulong ) ) ;"	513:1:15799:15879	304290	5	True				
ANR	304429	CastExpression	"( zend_long * ) zend_hash_add_mem ( guards , member , & stub , sizeof ( zend_ulong ) )"		304290	0					
ANR	304430	CastTarget	zend_long *		304290	0					
ANR	304431	CallExpression	"zend_hash_add_mem ( guards , member , & stub , sizeof ( zend_ulong ) )"		304290	1					
ANR	304432	Callee	zend_hash_add_mem		304290	0					
ANR	304433	Identifier	zend_hash_add_mem		304290	0					
ANR	304434	ArgumentList	guards		304290	1					
ANR	304435	Argument	guards		304290	0					
ANR	304436	Identifier	guards		304290	0					
ANR	304437	Argument	member		304290	1					
ANR	304438	Identifier	member		304290	0					
ANR	304439	Argument	& stub		304290	2					
ANR	304440	UnaryOperationExpression	& stub		304290	0					
ANR	304441	UnaryOperator	&		304290	0					
ANR	304442	Identifier	stub		304290	1					
ANR	304443	Argument	sizeof ( zend_ulong )		304290	3					
ANR	304444	SizeofExpression	sizeof ( zend_ulong )		304290	0					
ANR	304445	Sizeof	sizeof		304290	0					
ANR	304446	SizeofOperand	zend_ulong		304290	1					
ANR	304447	ReturnType	static zend_long *		304290	1					
ANR	304448	Identifier	zend_get_property_guard		304290	2					
ANR	304449	ParameterList	"zend_object * zobj , zend_string * member"		304290	3					
ANR	304450	Parameter	zend_object * zobj	493:42:15169:15185	304290	0	True				
ANR	304451	ParameterType	zend_object *		304290	0					
ANR	304452	Identifier	zobj		304290	1					
ANR	304453	Parameter	zend_string * member	493:61:15188:15206	304290	1	True				
ANR	304454	ParameterType	zend_string *		304290	0					
ANR	304455	Identifier	member		304290	1					
ANR	304456	CFGEntryNode	ENTRY		304290		True				
ANR	304457	CFGExitNode	EXIT		304290		True				
ANR	304458	Symbol	IS_OBJ_USE_GUARDS		304290						
ANR	304459	Symbol	zend_hash_add_mem		304290						
ANR	304460	Symbol	NULL		304290						
ANR	304461	Symbol	zobj		304290						
ANR	304462	Symbol	* zobj -> ce		304290						
ANR	304463	Symbol	* * * zobj		304290						
ANR	304464	Symbol	guard		304290						
ANR	304465	Symbol	zend_property_guard_dtor		304290						
ANR	304466	Symbol	* * zobj		304290						
ANR	304467	Symbol	Z_PTR		304290						
ANR	304468	Symbol	GC_FLAGS		304290						
ANR	304469	Symbol	zobj -> ce		304290						
ANR	304470	Symbol	zobj -> ce -> default_properties_count		304290						
ANR	304471	Symbol	guards		304290						
ANR	304472	Symbol	* zobj -> ce -> default_properties_count		304290						
ANR	304473	Symbol	zobj -> properties_table		304290						
ANR	304474	Symbol	* zobj -> properties_table		304290						
ANR	304475	Symbol	* zobj		304290						
ANR	304476	Symbol	IS_OBJ_HAS_GUARDS		304290						
ANR	304477	Symbol	member		304290						
ANR	304478	Symbol	stub		304290						
ANR	304479	Symbol	& stub		304290						
ANR	304480	Symbol	zend_hash_find_ptr		304290						
ANR	304481	Symbol	* * zobj -> ce		304290						
ANR	304482	Function	zend_std_read_property	517:0:15894:18598							
ANR	304483	FunctionDef	"zend_std_read_property (zval * object , zval * member , int type , void * * cache_slot , zval * rv)"		304482	0					
ANR	304484	CompoundStatement		518:0:16000:18598	304482	0					
ANR	304485	IdentifierDeclStatement	zend_object * zobj ;	519:1:16003:16020	304482	0	True				
ANR	304486	IdentifierDecl	* zobj		304482	0					
ANR	304487	IdentifierDeclType	zend_object *		304482	0					
ANR	304488	Identifier	zobj		304482	1					
ANR	304489	IdentifierDeclStatement	zval tmp_member ;	520:1:16023:16038	304482	1	True				
ANR	304490	IdentifierDecl	tmp_member		304482	0					
ANR	304491	IdentifierDeclType	zval		304482	0					
ANR	304492	Identifier	tmp_member		304482	1					
ANR	304493	IdentifierDeclStatement	zval * retval ;	521:1:16041:16053	304482	2	True				
ANR	304494	IdentifierDecl	* retval		304482	0					
ANR	304495	IdentifierDeclType	zval *		304482	0					
ANR	304496	Identifier	retval		304482	1					
ANR	304497	IdentifierDeclStatement	uint32_t property_offset ;	522:1:16056:16080	304482	3	True				
ANR	304498	IdentifierDecl	property_offset		304482	0					
ANR	304499	IdentifierDeclType	uint32_t		304482	0					
ANR	304500	Identifier	property_offset		304482	1					
ANR	304501	ExpressionStatement	zobj = Z_OBJ_P ( object )	524:1:16084:16106	304482	4	True				
ANR	304502	AssignmentExpression	zobj = Z_OBJ_P ( object )		304482	0		=			
ANR	304503	Identifier	zobj		304482	0					
ANR	304504	CallExpression	Z_OBJ_P ( object )		304482	1					
ANR	304505	Callee	Z_OBJ_P		304482	0					
ANR	304506	Identifier	Z_OBJ_P		304482	0					
ANR	304507	ArgumentList	object		304482	1					
ANR	304508	Argument	object		304482	0					
ANR	304509	Identifier	object		304482	0					
ANR	304510	ExpressionStatement	ZVAL_UNDEF ( & tmp_member )	526:1:16110:16133	304482	5	True				
ANR	304511	CallExpression	ZVAL_UNDEF ( & tmp_member )		304482	0					
ANR	304512	Callee	ZVAL_UNDEF		304482	0					
ANR	304513	Identifier	ZVAL_UNDEF		304482	0					
ANR	304514	ArgumentList	& tmp_member		304482	1					
ANR	304515	Argument	& tmp_member		304482	0					
ANR	304516	UnaryOperationExpression	& tmp_member		304482	0					
ANR	304517	UnaryOperator	&		304482	0					
ANR	304518	Identifier	tmp_member		304482	1					
ANR	304519	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING ) )		304482	6					
ANR	304520	Condition	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )	527:5:16140:16180	304482	0	True				
ANR	304521	CallExpression	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )		304482	0					
ANR	304522	Callee	UNEXPECTED		304482	0					
ANR	304523	Identifier	UNEXPECTED		304482	0					
ANR	304524	ArgumentList	Z_TYPE_P ( member ) != IS_STRING		304482	1					
ANR	304525	Argument	Z_TYPE_P ( member ) != IS_STRING		304482	0					
ANR	304526	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		304482	0		!=			
ANR	304527	CallExpression	Z_TYPE_P ( member )		304482	0					
ANR	304528	Callee	Z_TYPE_P		304482	0					
ANR	304529	Identifier	Z_TYPE_P		304482	0					
ANR	304530	ArgumentList	member		304482	1					
ANR	304531	Argument	member		304482	0					
ANR	304532	Identifier	member		304482	0					
ANR	304533	Identifier	IS_STRING		304482	1					
ANR	304534	CompoundStatement		10:48:182:182	304482	1					
ANR	304535	ExpressionStatement	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"	528:2:16187:16233	304482	0	True				
ANR	304536	CallExpression	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"		304482	0					
ANR	304537	Callee	ZVAL_STR		304482	0					
ANR	304538	Identifier	ZVAL_STR		304482	0					
ANR	304539	ArgumentList	& tmp_member		304482	1					
ANR	304540	Argument	& tmp_member		304482	0					
ANR	304541	UnaryOperationExpression	& tmp_member		304482	0					
ANR	304542	UnaryOperator	&		304482	0					
ANR	304543	Identifier	tmp_member		304482	1					
ANR	304544	Argument	zval_get_string ( member )		304482	1					
ANR	304545	CallExpression	zval_get_string ( member )		304482	0					
ANR	304546	Callee	zval_get_string		304482	0					
ANR	304547	Identifier	zval_get_string		304482	0					
ANR	304548	ArgumentList	member		304482	1					
ANR	304549	Argument	member		304482	0					
ANR	304550	Identifier	member		304482	0					
ANR	304551	ExpressionStatement	member = & tmp_member	529:2:16237:16257	304482	1	True				
ANR	304552	AssignmentExpression	member = & tmp_member		304482	0		=			
ANR	304553	Identifier	member		304482	0					
ANR	304554	UnaryOperationExpression	& tmp_member		304482	1					
ANR	304555	UnaryOperator	&		304482	0					
ANR	304556	Identifier	tmp_member		304482	1					
ANR	304557	ExpressionStatement	cache_slot = NULL	530:2:16261:16278	304482	2	True				
ANR	304558	AssignmentExpression	cache_slot = NULL		304482	0		=			
ANR	304559	Identifier	cache_slot		304482	0					
ANR	304560	Identifier	NULL		304482	1					
ANR	304561	ExpressionStatement	"fprintf ( stderr , ""Read object #%d property: %s\\n"" , Z_OBJ_HANDLE_P ( object ) , Z_STRVAL_P ( member ) )"	534:1:16311:16404	304482	7	True				
ANR	304562	CallExpression	"fprintf ( stderr , ""Read object #%d property: %s\\n"" , Z_OBJ_HANDLE_P ( object ) , Z_STRVAL_P ( member ) )"		304482	0					
ANR	304563	Callee	fprintf		304482	0					
ANR	304564	Identifier	fprintf		304482	0					
ANR	304565	ArgumentList	stderr		304482	1					
ANR	304566	Argument	stderr		304482	0					
ANR	304567	Identifier	stderr		304482	0					
ANR	304568	Argument	"""Read object #%d property: %s\\n"""		304482	1					
ANR	304569	PrimaryExpression	"""Read object #%d property: %s\\n"""		304482	0					
ANR	304570	Argument	Z_OBJ_HANDLE_P ( object )		304482	2					
ANR	304571	CallExpression	Z_OBJ_HANDLE_P ( object )		304482	0					
ANR	304572	Callee	Z_OBJ_HANDLE_P		304482	0					
ANR	304573	Identifier	Z_OBJ_HANDLE_P		304482	0					
ANR	304574	ArgumentList	object		304482	1					
ANR	304575	Argument	object		304482	0					
ANR	304576	Identifier	object		304482	0					
ANR	304577	Argument	Z_STRVAL_P ( member )		304482	3					
ANR	304578	CallExpression	Z_STRVAL_P ( member )		304482	0					
ANR	304579	Callee	Z_STRVAL_P		304482	0					
ANR	304580	Identifier	Z_STRVAL_P		304482	0					
ANR	304581	ArgumentList	member		304482	1					
ANR	304582	Argument	member		304482	0					
ANR	304583	Identifier	member		304482	0					
ANR	304584	ExpressionStatement	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( type == BP_VAR_IS ) || ( zobj -> ce -> __get != NULL ) , cache_slot )"	538:1:16499:16630	304482	8	True				
ANR	304585	AssignmentExpression	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( type == BP_VAR_IS ) || ( zobj -> ce -> __get != NULL ) , cache_slot )"		304482	0		=			
ANR	304586	Identifier	property_offset		304482	0					
ANR	304587	CallExpression	"zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( type == BP_VAR_IS ) || ( zobj -> ce -> __get != NULL ) , cache_slot )"		304482	1					
ANR	304588	Callee	zend_get_property_offset		304482	0					
ANR	304589	Identifier	zend_get_property_offset		304482	0					
ANR	304590	ArgumentList	zobj -> ce		304482	1					
ANR	304591	Argument	zobj -> ce		304482	0					
ANR	304592	PtrMemberAccess	zobj -> ce		304482	0					
ANR	304593	Identifier	zobj		304482	0					
ANR	304594	Identifier	ce		304482	1					
ANR	304595	Argument	Z_STR_P ( member )		304482	1					
ANR	304596	CallExpression	Z_STR_P ( member )		304482	0					
ANR	304597	Callee	Z_STR_P		304482	0					
ANR	304598	Identifier	Z_STR_P		304482	0					
ANR	304599	ArgumentList	member		304482	1					
ANR	304600	Argument	member		304482	0					
ANR	304601	Identifier	member		304482	0					
ANR	304602	Argument	( type == BP_VAR_IS ) || ( zobj -> ce -> __get != NULL )		304482	2					
ANR	304603	OrExpression	( type == BP_VAR_IS ) || ( zobj -> ce -> __get != NULL )		304482	0		||			
ANR	304604	EqualityExpression	type == BP_VAR_IS		304482	0		==			
ANR	304605	Identifier	type		304482	0					
ANR	304606	Identifier	BP_VAR_IS		304482	1					
ANR	304607	EqualityExpression	zobj -> ce -> __get != NULL		304482	1		!=			
ANR	304608	PtrMemberAccess	zobj -> ce -> __get		304482	0					
ANR	304609	PtrMemberAccess	zobj -> ce		304482	0					
ANR	304610	Identifier	zobj		304482	0					
ANR	304611	Identifier	ce		304482	1					
ANR	304612	Identifier	__get		304482	1					
ANR	304613	Identifier	NULL		304482	1					
ANR	304614	Argument	cache_slot		304482	3					
ANR	304615	Identifier	cache_slot		304482	0					
ANR	304616	IfStatement	if ( EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET ) )		304482	9					
ANR	304617	Condition	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )	540:5:16638:16692	304482	0	True				
ANR	304618	CallExpression	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )		304482	0					
ANR	304619	Callee	EXPECTED		304482	0					
ANR	304620	Identifier	EXPECTED		304482	0					
ANR	304621	ArgumentList	property_offset != ZEND_WRONG_PROPERTY_OFFSET		304482	1					
ANR	304622	Argument	property_offset != ZEND_WRONG_PROPERTY_OFFSET		304482	0					
ANR	304623	EqualityExpression	property_offset != ZEND_WRONG_PROPERTY_OFFSET		304482	0		!=			
ANR	304624	Identifier	property_offset		304482	0					
ANR	304625	Identifier	ZEND_WRONG_PROPERTY_OFFSET		304482	1					
ANR	304626	CompoundStatement		23:62:694:694	304482	1					
ANR	304627	IfStatement	if ( EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET ) )		304482	0					
ANR	304628	Condition	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )	541:6:16703:16759	304482	0	True				
ANR	304629	CallExpression	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )		304482	0					
ANR	304630	Callee	EXPECTED		304482	0					
ANR	304631	Identifier	EXPECTED		304482	0					
ANR	304632	ArgumentList	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		304482	1					
ANR	304633	Argument	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		304482	0					
ANR	304634	EqualityExpression	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		304482	0		!=			
ANR	304635	Identifier	property_offset		304482	0					
ANR	304636	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		304482	1					
ANR	304637	CompoundStatement		24:65:761:761	304482	1					
ANR	304638	ExpressionStatement	"retval = OBJ_PROP ( zobj , property_offset )"	542:3:16767:16807	304482	0	True				
ANR	304639	AssignmentExpression	"retval = OBJ_PROP ( zobj , property_offset )"		304482	0		=			
ANR	304640	Identifier	retval		304482	0					
ANR	304641	CallExpression	"OBJ_PROP ( zobj , property_offset )"		304482	1					
ANR	304642	Callee	OBJ_PROP		304482	0					
ANR	304643	Identifier	OBJ_PROP		304482	0					
ANR	304644	ArgumentList	zobj		304482	1					
ANR	304645	Argument	zobj		304482	0					
ANR	304646	Identifier	zobj		304482	0					
ANR	304647	Argument	property_offset		304482	1					
ANR	304648	Identifier	property_offset		304482	0					
ANR	304649	IfStatement	if ( EXPECTED ( Z_TYPE_P ( retval ) != IS_UNDEF ) )		304482	1					
ANR	304650	Condition	EXPECTED ( Z_TYPE_P ( retval ) != IS_UNDEF )	543:7:16816:16853	304482	0	True				
ANR	304651	CallExpression	EXPECTED ( Z_TYPE_P ( retval ) != IS_UNDEF )		304482	0					
ANR	304652	Callee	EXPECTED		304482	0					
ANR	304653	Identifier	EXPECTED		304482	0					
ANR	304654	ArgumentList	Z_TYPE_P ( retval ) != IS_UNDEF		304482	1					
ANR	304655	Argument	Z_TYPE_P ( retval ) != IS_UNDEF		304482	0					
ANR	304656	EqualityExpression	Z_TYPE_P ( retval ) != IS_UNDEF		304482	0		!=			
ANR	304657	CallExpression	Z_TYPE_P ( retval )		304482	0					
ANR	304658	Callee	Z_TYPE_P		304482	0					
ANR	304659	Identifier	Z_TYPE_P		304482	0					
ANR	304660	ArgumentList	retval		304482	1					
ANR	304661	Argument	retval		304482	0					
ANR	304662	Identifier	retval		304482	0					
ANR	304663	Identifier	IS_UNDEF		304482	1					
ANR	304664	CompoundStatement		26:47:855:855	304482	1					
ANR	304665	GotoStatement	goto exit ;	544:4:16862:16871	304482	0	True				
ANR	304666	Identifier	exit		304482	0					
ANR	304667	ElseStatement	else		304482	0					
ANR	304668	IfStatement	if ( EXPECTED ( zobj -> properties != NULL ) )		304482	0					
ANR	304669	Condition	EXPECTED ( zobj -> properties != NULL )	546:13:16891:16924	304482	0	True				
ANR	304670	CallExpression	EXPECTED ( zobj -> properties != NULL )		304482	0					
ANR	304671	Callee	EXPECTED		304482	0					
ANR	304672	Identifier	EXPECTED		304482	0					
ANR	304673	ArgumentList	zobj -> properties != NULL		304482	1					
ANR	304674	Argument	zobj -> properties != NULL		304482	0					
ANR	304675	EqualityExpression	zobj -> properties != NULL		304482	0		!=			
ANR	304676	PtrMemberAccess	zobj -> properties		304482	0					
ANR	304677	Identifier	zobj		304482	0					
ANR	304678	Identifier	properties		304482	1					
ANR	304679	Identifier	NULL		304482	1					
ANR	304680	CompoundStatement		29:49:926:926	304482	1					
ANR	304681	ExpressionStatement	"retval = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) )"	547:3:16932:16990	304482	0	True				
ANR	304682	AssignmentExpression	"retval = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) )"		304482	0		=			
ANR	304683	Identifier	retval		304482	0					
ANR	304684	CallExpression	"zend_hash_find ( zobj -> properties , Z_STR_P ( member ) )"		304482	1					
ANR	304685	Callee	zend_hash_find		304482	0					
ANR	304686	Identifier	zend_hash_find		304482	0					
ANR	304687	ArgumentList	zobj -> properties		304482	1					
ANR	304688	Argument	zobj -> properties		304482	0					
ANR	304689	PtrMemberAccess	zobj -> properties		304482	0					
ANR	304690	Identifier	zobj		304482	0					
ANR	304691	Identifier	properties		304482	1					
ANR	304692	Argument	Z_STR_P ( member )		304482	1					
ANR	304693	CallExpression	Z_STR_P ( member )		304482	0					
ANR	304694	Callee	Z_STR_P		304482	0					
ANR	304695	Identifier	Z_STR_P		304482	0					
ANR	304696	ArgumentList	member		304482	1					
ANR	304697	Argument	member		304482	0					
ANR	304698	Identifier	member		304482	0					
ANR	304699	IfStatement	if ( EXPECTED ( retval ) )		304482	1					
ANR	304700	Condition	EXPECTED ( retval )	548:7:16999:17014	304482	0	True				
ANR	304701	CallExpression	EXPECTED ( retval )		304482	0					
ANR	304702	Callee	EXPECTED		304482	0					
ANR	304703	Identifier	EXPECTED		304482	0					
ANR	304704	ArgumentList	retval		304482	1					
ANR	304705	Argument	retval		304482	0					
ANR	304706	Identifier	retval		304482	0					
ANR	304707	GotoStatement	goto exit ;	548:25:17017:17026	304482	1	True				
ANR	304708	Identifier	exit		304482	0					
ANR	304709	ElseStatement	else		304482	0					
ANR	304710	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		304482	0					
ANR	304711	Condition	UNEXPECTED ( EG ( exception ) )	550:12:17044:17068	304482	0	True				
ANR	304712	CallExpression	UNEXPECTED ( EG ( exception ) )		304482	0					
ANR	304713	Callee	UNEXPECTED		304482	0					
ANR	304714	Identifier	UNEXPECTED		304482	0					
ANR	304715	ArgumentList	EG ( exception )		304482	1					
ANR	304716	Argument	EG ( exception )		304482	0					
ANR	304717	CallExpression	EG ( exception )		304482	0					
ANR	304718	Callee	EG		304482	0					
ANR	304719	Identifier	EG		304482	0					
ANR	304720	ArgumentList	exception		304482	1					
ANR	304721	Argument	exception		304482	0					
ANR	304722	Identifier	exception		304482	0					
ANR	304723	CompoundStatement		33:39:1070:1070	304482	1					
ANR	304724	ExpressionStatement	retval = & EG ( uninitialized_zval )	551:2:17075:17107	304482	0	True				
ANR	304725	AssignmentExpression	retval = & EG ( uninitialized_zval )		304482	0		=			
ANR	304726	Identifier	retval		304482	0					
ANR	304727	UnaryOperationExpression	& EG ( uninitialized_zval )		304482	1					
ANR	304728	UnaryOperator	&		304482	0					
ANR	304729	CallExpression	EG ( uninitialized_zval )		304482	1					
ANR	304730	Callee	EG		304482	0					
ANR	304731	Identifier	EG		304482	0					
ANR	304732	ArgumentList	uninitialized_zval		304482	1					
ANR	304733	Argument	uninitialized_zval		304482	0					
ANR	304734	Identifier	uninitialized_zval		304482	0					
ANR	304735	GotoStatement	goto exit ;	552:2:17111:17120	304482	1	True				
ANR	304736	Identifier	exit		304482	0					
ANR	304737	IfStatement	if ( zobj -> ce -> __get )		304482	10					
ANR	304738	Condition	zobj -> ce -> __get	556:5:17148:17162	304482	0	True				
ANR	304739	PtrMemberAccess	zobj -> ce -> __get		304482	0					
ANR	304740	PtrMemberAccess	zobj -> ce		304482	0					
ANR	304741	Identifier	zobj		304482	0					
ANR	304742	Identifier	ce		304482	1					
ANR	304743	Identifier	__get		304482	1					
ANR	304744	CompoundStatement		40:2:1168:1233	304482	1					
ANR	304745	IdentifierDeclStatement	"zend_long * guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) ) ;"	557:2:17169:17234	304482	0	True				
ANR	304746	IdentifierDecl	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		304482	0					
ANR	304747	IdentifierDeclType	zend_long *		304482	0					
ANR	304748	Identifier	guard		304482	1					
ANR	304749	AssignmentExpression	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		304482	2		=			
ANR	304750	Identifier	guard		304482	0					
ANR	304751	CallExpression	"zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		304482	1					
ANR	304752	Callee	zend_get_property_guard		304482	0					
ANR	304753	Identifier	zend_get_property_guard		304482	0					
ANR	304754	ArgumentList	zobj		304482	1					
ANR	304755	Argument	zobj		304482	0					
ANR	304756	Identifier	zobj		304482	0					
ANR	304757	Argument	Z_STR_P ( member )		304482	1					
ANR	304758	CallExpression	Z_STR_P ( member )		304482	0					
ANR	304759	Callee	Z_STR_P		304482	0					
ANR	304760	Identifier	Z_STR_P		304482	0					
ANR	304761	ArgumentList	member		304482	1					
ANR	304762	Argument	member		304482	0					
ANR	304763	Identifier	member		304482	0					
ANR	304764	IfStatement	if ( ! ( ( * guard ) & IN_GET ) )		304482	1					
ANR	304765	Condition	! ( ( * guard ) & IN_GET )	558:6:17242:17261	304482	0	True				
ANR	304766	UnaryOperationExpression	! ( ( * guard ) & IN_GET )		304482	0					
ANR	304767	UnaryOperator	!		304482	0					
ANR	304768	BitAndExpression	( * guard ) & IN_GET		304482	1		&			
ANR	304769	UnaryOperationExpression	* guard		304482	0					
ANR	304770	UnaryOperator	*		304482	0					
ANR	304771	Identifier	guard		304482	1					
ANR	304772	Identifier	IN_GET		304482	1					
ANR	304773	CompoundStatement		42:3:1268:1283	304482	1					
ANR	304774	IdentifierDeclStatement	zval tmp_object ;	559:3:17269:17284	304482	0	True				
ANR	304775	IdentifierDecl	tmp_object		304482	0					
ANR	304776	IdentifierDeclType	zval		304482	0					
ANR	304777	Identifier	tmp_object		304482	1					
ANR	304778	ExpressionStatement	"ZVAL_COPY ( & tmp_object , object )"	562:3:17326:17356	304482	1	True				
ANR	304779	CallExpression	"ZVAL_COPY ( & tmp_object , object )"		304482	0					
ANR	304780	Callee	ZVAL_COPY		304482	0					
ANR	304781	Identifier	ZVAL_COPY		304482	0					
ANR	304782	ArgumentList	& tmp_object		304482	1					
ANR	304783	Argument	& tmp_object		304482	0					
ANR	304784	UnaryOperationExpression	& tmp_object		304482	0					
ANR	304785	UnaryOperator	&		304482	0					
ANR	304786	Identifier	tmp_object		304482	1					
ANR	304787	Argument	object		304482	1					
ANR	304788	Identifier	object		304482	0					
ANR	304789	ExpressionStatement	* guard |= IN_GET	563:3:17361:17377	304482	2	True				
ANR	304790	AssignmentExpression	* guard |= IN_GET		304482	0		|=			
ANR	304791	UnaryOperationExpression	* guard		304482	0					
ANR	304792	UnaryOperator	*		304482	0					
ANR	304793	Identifier	guard		304482	1					
ANR	304794	Identifier	IN_GET		304482	1					
ANR	304795	ExpressionStatement	"zend_std_call_getter ( & tmp_object , member , rv )"	564:3:17413:17458	304482	3	True				
ANR	304796	CallExpression	"zend_std_call_getter ( & tmp_object , member , rv )"		304482	0					
ANR	304797	Callee	zend_std_call_getter		304482	0					
ANR	304798	Identifier	zend_std_call_getter		304482	0					
ANR	304799	ArgumentList	& tmp_object		304482	1					
ANR	304800	Argument	& tmp_object		304482	0					
ANR	304801	UnaryOperationExpression	& tmp_object		304482	0					
ANR	304802	UnaryOperator	&		304482	0					
ANR	304803	Identifier	tmp_object		304482	1					
ANR	304804	Argument	member		304482	1					
ANR	304805	Identifier	member		304482	0					
ANR	304806	Argument	rv		304482	2					
ANR	304807	Identifier	rv		304482	0					
ANR	304808	ExpressionStatement	* guard &= ~IN_GET	565:3:17463:17480	304482	4	True				
ANR	304809	AssignmentExpression	* guard &= ~IN_GET		304482	0		&=			
ANR	304810	UnaryOperationExpression	* guard		304482	0					
ANR	304811	UnaryOperator	*		304482	0					
ANR	304812	Identifier	guard		304482	1					
ANR	304813	Identifier	~IN_GET		304482	1					
ANR	304814	IfStatement	if ( Z_TYPE_P ( rv ) != IS_UNDEF )		304482	5					
ANR	304815	Condition	Z_TYPE_P ( rv ) != IS_UNDEF	567:7:17490:17513	304482	0	True				
ANR	304816	EqualityExpression	Z_TYPE_P ( rv ) != IS_UNDEF		304482	0		!=			
ANR	304817	CallExpression	Z_TYPE_P ( rv )		304482	0					
ANR	304818	Callee	Z_TYPE_P		304482	0					
ANR	304819	Identifier	Z_TYPE_P		304482	0					
ANR	304820	ArgumentList	rv		304482	1					
ANR	304821	Argument	rv		304482	0					
ANR	304822	Identifier	rv		304482	0					
ANR	304823	Identifier	IS_UNDEF		304482	1					
ANR	304824	CompoundStatement		50:33:1515:1515	304482	1					
ANR	304825	ExpressionStatement	retval = rv	568:4:17522:17533	304482	0	True				
ANR	304826	AssignmentExpression	retval = rv		304482	0		=			
ANR	304827	Identifier	retval		304482	0					
ANR	304828	Identifier	rv		304482	1					
ANR	304829	IfStatement	if ( ! Z_ISREF_P ( rv ) && ( type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET ) )		304482	1					
ANR	304830	Condition	! Z_ISREF_P ( rv ) && ( type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET )	569:8:17543:17632	304482	0	True				
ANR	304831	AndExpression	! Z_ISREF_P ( rv ) && ( type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET )		304482	0		&&			
ANR	304832	UnaryOperationExpression	! Z_ISREF_P ( rv )		304482	0					
ANR	304833	UnaryOperator	!		304482	0					
ANR	304834	CallExpression	Z_ISREF_P ( rv )		304482	1					
ANR	304835	Callee	Z_ISREF_P		304482	0					
ANR	304836	Identifier	Z_ISREF_P		304482	0					
ANR	304837	ArgumentList	rv		304482	1					
ANR	304838	Argument	rv		304482	0					
ANR	304839	Identifier	rv		304482	0					
ANR	304840	OrExpression	type == BP_VAR_W || type == BP_VAR_RW || type == BP_VAR_UNSET		304482	1		||			
ANR	304841	EqualityExpression	type == BP_VAR_W		304482	0		==			
ANR	304842	Identifier	type		304482	0					
ANR	304843	Identifier	BP_VAR_W		304482	1					
ANR	304844	OrExpression	type == BP_VAR_RW || type == BP_VAR_UNSET		304482	1		||			
ANR	304845	EqualityExpression	type == BP_VAR_RW		304482	0		==			
ANR	304846	Identifier	type		304482	0					
ANR	304847	Identifier	BP_VAR_RW		304482	1					
ANR	304848	EqualityExpression	type == BP_VAR_UNSET		304482	1		==			
ANR	304849	Identifier	type		304482	0					
ANR	304850	Identifier	BP_VAR_UNSET		304482	1					
ANR	304851	CompoundStatement		53:74:1634:1634	304482	1					
ANR	304852	ExpressionStatement	SEPARATE_ZVAL ( rv )	571:5:17642:17659	304482	0	True				
ANR	304853	CallExpression	SEPARATE_ZVAL ( rv )		304482	0					
ANR	304854	Callee	SEPARATE_ZVAL		304482	0					
ANR	304855	Identifier	SEPARATE_ZVAL		304482	0					
ANR	304856	ArgumentList	rv		304482	1					
ANR	304857	Argument	rv		304482	0					
ANR	304858	Identifier	rv		304482	0					
ANR	304859	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( rv ) != IS_OBJECT ) )		304482	1					
ANR	304860	Condition	UNEXPECTED ( Z_TYPE_P ( rv ) != IS_OBJECT )	572:9:17670:17706	304482	0	True				
ANR	304861	CallExpression	UNEXPECTED ( Z_TYPE_P ( rv ) != IS_OBJECT )		304482	0					
ANR	304862	Callee	UNEXPECTED		304482	0					
ANR	304863	Identifier	UNEXPECTED		304482	0					
ANR	304864	ArgumentList	Z_TYPE_P ( rv ) != IS_OBJECT		304482	1					
ANR	304865	Argument	Z_TYPE_P ( rv ) != IS_OBJECT		304482	0					
ANR	304866	EqualityExpression	Z_TYPE_P ( rv ) != IS_OBJECT		304482	0		!=			
ANR	304867	CallExpression	Z_TYPE_P ( rv )		304482	0					
ANR	304868	Callee	Z_TYPE_P		304482	0					
ANR	304869	Identifier	Z_TYPE_P		304482	0					
ANR	304870	ArgumentList	rv		304482	1					
ANR	304871	Argument	rv		304482	0					
ANR	304872	Identifier	rv		304482	0					
ANR	304873	Identifier	IS_OBJECT		304482	1					
ANR	304874	CompoundStatement		55:48:1708:1708	304482	1					
ANR	304875	ExpressionStatement	"zend_error ( E_NOTICE , ""Indirect modification of overloaded property %s::$%s has no effect"" , ZSTR_VAL ( zobj -> ce -> name ) , Z_STRVAL_P ( member ) )"	573:6:17717:17853	304482	0	True				
ANR	304876	CallExpression	"zend_error ( E_NOTICE , ""Indirect modification of overloaded property %s::$%s has no effect"" , ZSTR_VAL ( zobj -> ce -> name ) , Z_STRVAL_P ( member ) )"		304482	0					
ANR	304877	Callee	zend_error		304482	0					
ANR	304878	Identifier	zend_error		304482	0					
ANR	304879	ArgumentList	E_NOTICE		304482	1					
ANR	304880	Argument	E_NOTICE		304482	0					
ANR	304881	Identifier	E_NOTICE		304482	0					
ANR	304882	Argument	"""Indirect modification of overloaded property %s::$%s has no effect"""		304482	1					
ANR	304883	PrimaryExpression	"""Indirect modification of overloaded property %s::$%s has no effect"""		304482	0					
ANR	304884	Argument	ZSTR_VAL ( zobj -> ce -> name )		304482	2					
ANR	304885	CallExpression	ZSTR_VAL ( zobj -> ce -> name )		304482	0					
ANR	304886	Callee	ZSTR_VAL		304482	0					
ANR	304887	Identifier	ZSTR_VAL		304482	0					
ANR	304888	ArgumentList	zobj -> ce -> name		304482	1					
ANR	304889	Argument	zobj -> ce -> name		304482	0					
ANR	304890	PtrMemberAccess	zobj -> ce -> name		304482	0					
ANR	304891	PtrMemberAccess	zobj -> ce		304482	0					
ANR	304892	Identifier	zobj		304482	0					
ANR	304893	Identifier	ce		304482	1					
ANR	304894	Identifier	name		304482	1					
ANR	304895	Argument	Z_STRVAL_P ( member )		304482	3					
ANR	304896	CallExpression	Z_STRVAL_P ( member )		304482	0					
ANR	304897	Callee	Z_STRVAL_P		304482	0					
ANR	304898	Identifier	Z_STRVAL_P		304482	0					
ANR	304899	ArgumentList	member		304482	1					
ANR	304900	Argument	member		304482	0					
ANR	304901	Identifier	member		304482	0					
ANR	304902	ElseStatement	else		304482	0					
ANR	304903	CompoundStatement		59:10:1877:1877	304482	0					
ANR	304904	ExpressionStatement	retval = & EG ( uninitialized_zval )	577:4:17884:17916	304482	0	True				
ANR	304905	AssignmentExpression	retval = & EG ( uninitialized_zval )		304482	0		=			
ANR	304906	Identifier	retval		304482	0					
ANR	304907	UnaryOperationExpression	& EG ( uninitialized_zval )		304482	1					
ANR	304908	UnaryOperator	&		304482	0					
ANR	304909	CallExpression	EG ( uninitialized_zval )		304482	1					
ANR	304910	Callee	EG		304482	0					
ANR	304911	Identifier	EG		304482	0					
ANR	304912	ArgumentList	uninitialized_zval		304482	1					
ANR	304913	Argument	uninitialized_zval		304482	0					
ANR	304914	Identifier	uninitialized_zval		304482	0					
ANR	304915	ExpressionStatement	zval_ptr_dtor ( & tmp_object )	579:3:17926:17952	304482	6	True				
ANR	304916	CallExpression	zval_ptr_dtor ( & tmp_object )		304482	0					
ANR	304917	Callee	zval_ptr_dtor		304482	0					
ANR	304918	Identifier	zval_ptr_dtor		304482	0					
ANR	304919	ArgumentList	& tmp_object		304482	1					
ANR	304920	Argument	& tmp_object		304482	0					
ANR	304921	UnaryOperationExpression	& tmp_object		304482	0					
ANR	304922	UnaryOperator	&		304482	0					
ANR	304923	Identifier	tmp_object		304482	1					
ANR	304924	GotoStatement	goto exit ;	580:3:17957:17966	304482	7	True				
ANR	304925	Identifier	exit		304482	0					
ANR	304926	ElseStatement	else		304482	0					
ANR	304927	CompoundStatement		64:9:1976:1976	304482	0					
ANR	304928	IfStatement	if ( Z_STRVAL_P ( member ) [ 0 ] == '\\0' )		304482	0					
ANR	304929	Condition	Z_STRVAL_P ( member ) [ 0 ] == '\\0'	582:7:17986:18014	304482	0	True				
ANR	304930	EqualityExpression	Z_STRVAL_P ( member ) [ 0 ] == '\\0'		304482	0		==			
ANR	304931	ArrayIndexing	Z_STRVAL_P ( member ) [ 0 ]		304482	0					
ANR	304932	CallExpression	Z_STRVAL_P ( member )		304482	0					
ANR	304933	Callee	Z_STRVAL_P		304482	0					
ANR	304934	Identifier	Z_STRVAL_P		304482	0					
ANR	304935	ArgumentList	member		304482	1					
ANR	304936	Argument	member		304482	0					
ANR	304937	Identifier	member		304482	0					
ANR	304938	PrimaryExpression	0		304482	1					
ANR	304939	PrimaryExpression	'\\0'		304482	1					
ANR	304940	CompoundStatement		65:38:2016:2016	304482	1					
ANR	304941	IfStatement	if ( Z_STRLEN_P ( member ) == 0 )		304482	0					
ANR	304942	Condition	Z_STRLEN_P ( member ) == 0	583:8:18027:18049	304482	0	True				
ANR	304943	EqualityExpression	Z_STRLEN_P ( member ) == 0		304482	0		==			
ANR	304944	CallExpression	Z_STRLEN_P ( member )		304482	0					
ANR	304945	Callee	Z_STRLEN_P		304482	0					
ANR	304946	Identifier	Z_STRLEN_P		304482	0					
ANR	304947	ArgumentList	member		304482	1					
ANR	304948	Argument	member		304482	0					
ANR	304949	Identifier	member		304482	0					
ANR	304950	PrimaryExpression	0		304482	1					
ANR	304951	CompoundStatement		66:33:2051:2051	304482	1					
ANR	304952	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access empty property"" )"	584:5:18059:18113	304482	0	True				
ANR	304953	CallExpression	"zend_throw_error ( NULL , ""Cannot access empty property"" )"		304482	0					
ANR	304954	Callee	zend_throw_error		304482	0					
ANR	304955	Identifier	zend_throw_error		304482	0					
ANR	304956	ArgumentList	NULL		304482	1					
ANR	304957	Argument	NULL		304482	0					
ANR	304958	Identifier	NULL		304482	0					
ANR	304959	Argument	"""Cannot access empty property"""		304482	1					
ANR	304960	PrimaryExpression	"""Cannot access empty property"""		304482	0					
ANR	304961	ExpressionStatement	retval = & EG ( uninitialized_zval )	585:5:18120:18152	304482	1	True				
ANR	304962	AssignmentExpression	retval = & EG ( uninitialized_zval )		304482	0		=			
ANR	304963	Identifier	retval		304482	0					
ANR	304964	UnaryOperationExpression	& EG ( uninitialized_zval )		304482	1					
ANR	304965	UnaryOperator	&		304482	0					
ANR	304966	CallExpression	EG ( uninitialized_zval )		304482	1					
ANR	304967	Callee	EG		304482	0					
ANR	304968	Identifier	EG		304482	0					
ANR	304969	ArgumentList	uninitialized_zval		304482	1					
ANR	304970	Argument	uninitialized_zval		304482	0					
ANR	304971	Identifier	uninitialized_zval		304482	0					
ANR	304972	GotoStatement	goto exit ;	586:5:18159:18168	304482	2	True				
ANR	304973	Identifier	exit		304482	0					
ANR	304974	ElseStatement	else		304482	0					
ANR	304975	CompoundStatement		70:11:2180:2180	304482	0					
ANR	304976	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"	588:5:18188:18255	304482	0	True				
ANR	304977	CallExpression	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"		304482	0					
ANR	304978	Callee	zend_throw_error		304482	0					
ANR	304979	Identifier	zend_throw_error		304482	0					
ANR	304980	ArgumentList	NULL		304482	1					
ANR	304981	Argument	NULL		304482	0					
ANR	304982	Identifier	NULL		304482	0					
ANR	304983	Argument	"""Cannot access property started with '\\\\0'"""		304482	1					
ANR	304984	PrimaryExpression	"""Cannot access property started with '\\\\0'"""		304482	0					
ANR	304985	ExpressionStatement	retval = & EG ( uninitialized_zval )	589:5:18262:18294	304482	1	True				
ANR	304986	AssignmentExpression	retval = & EG ( uninitialized_zval )		304482	0		=			
ANR	304987	Identifier	retval		304482	0					
ANR	304988	UnaryOperationExpression	& EG ( uninitialized_zval )		304482	1					
ANR	304989	UnaryOperator	&		304482	0					
ANR	304990	CallExpression	EG ( uninitialized_zval )		304482	1					
ANR	304991	Callee	EG		304482	0					
ANR	304992	Identifier	EG		304482	0					
ANR	304993	ArgumentList	uninitialized_zval		304482	1					
ANR	304994	Argument	uninitialized_zval		304482	0					
ANR	304995	Identifier	uninitialized_zval		304482	0					
ANR	304996	GotoStatement	goto exit ;	590:5:18301:18310	304482	2	True				
ANR	304997	Identifier	exit		304482	0					
ANR	304998	IfStatement	if ( ( type != BP_VAR_IS ) )		304482	11					
ANR	304999	Condition	type != BP_VAR_IS	595:5:18335:18353	304482	0	True				
ANR	305000	EqualityExpression	type != BP_VAR_IS		304482	0		!=			
ANR	305001	Identifier	type		304482	0					
ANR	305002	Identifier	BP_VAR_IS		304482	1					
ANR	305003	CompoundStatement		78:26:2355:2355	304482	1					
ANR	305004	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined property: %s::$%s"" , ZSTR_VAL ( zobj -> ce -> name ) , Z_STRVAL_P ( member ) )"	596:2:18360:18456	304482	0	True				
ANR	305005	CallExpression	"zend_error ( E_NOTICE , ""Undefined property: %s::$%s"" , ZSTR_VAL ( zobj -> ce -> name ) , Z_STRVAL_P ( member ) )"		304482	0					
ANR	305006	Callee	zend_error		304482	0					
ANR	305007	Identifier	zend_error		304482	0					
ANR	305008	ArgumentList	E_NOTICE		304482	1					
ANR	305009	Argument	E_NOTICE		304482	0					
ANR	305010	Identifier	E_NOTICE		304482	0					
ANR	305011	Argument	"""Undefined property: %s::$%s"""		304482	1					
ANR	305012	PrimaryExpression	"""Undefined property: %s::$%s"""		304482	0					
ANR	305013	Argument	ZSTR_VAL ( zobj -> ce -> name )		304482	2					
ANR	305014	CallExpression	ZSTR_VAL ( zobj -> ce -> name )		304482	0					
ANR	305015	Callee	ZSTR_VAL		304482	0					
ANR	305016	Identifier	ZSTR_VAL		304482	0					
ANR	305017	ArgumentList	zobj -> ce -> name		304482	1					
ANR	305018	Argument	zobj -> ce -> name		304482	0					
ANR	305019	PtrMemberAccess	zobj -> ce -> name		304482	0					
ANR	305020	PtrMemberAccess	zobj -> ce		304482	0					
ANR	305021	Identifier	zobj		304482	0					
ANR	305022	Identifier	ce		304482	1					
ANR	305023	Identifier	name		304482	1					
ANR	305024	Argument	Z_STRVAL_P ( member )		304482	3					
ANR	305025	CallExpression	Z_STRVAL_P ( member )		304482	0					
ANR	305026	Callee	Z_STRVAL_P		304482	0					
ANR	305027	Identifier	Z_STRVAL_P		304482	0					
ANR	305028	ArgumentList	member		304482	1					
ANR	305029	Argument	member		304482	0					
ANR	305030	Identifier	member		304482	0					
ANR	305031	ExpressionStatement	retval = & EG ( uninitialized_zval )	598:1:18462:18494	304482	12	True				
ANR	305032	AssignmentExpression	retval = & EG ( uninitialized_zval )		304482	0		=			
ANR	305033	Identifier	retval		304482	0					
ANR	305034	UnaryOperationExpression	& EG ( uninitialized_zval )		304482	1					
ANR	305035	UnaryOperator	&		304482	0					
ANR	305036	CallExpression	EG ( uninitialized_zval )		304482	1					
ANR	305037	Callee	EG		304482	0					
ANR	305038	Identifier	EG		304482	0					
ANR	305039	ArgumentList	uninitialized_zval		304482	1					
ANR	305040	Argument	uninitialized_zval		304482	0					
ANR	305041	Identifier	uninitialized_zval		304482	0					
ANR	305042	Label	exit :	600:0:18497:18501	304482	13	True				
ANR	305043	Identifier	exit		304482	0					
ANR	305044	IfStatement	if ( UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) ) )		304482	14					
ANR	305045	Condition	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )	601:5:18508:18543	304482	0	True				
ANR	305046	CallExpression	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )		304482	0					
ANR	305047	Callee	UNEXPECTED		304482	0					
ANR	305048	Identifier	UNEXPECTED		304482	0					
ANR	305049	ArgumentList	Z_REFCOUNTED ( tmp_member )		304482	1					
ANR	305050	Argument	Z_REFCOUNTED ( tmp_member )		304482	0					
ANR	305051	CallExpression	Z_REFCOUNTED ( tmp_member )		304482	0					
ANR	305052	Callee	Z_REFCOUNTED		304482	0					
ANR	305053	Identifier	Z_REFCOUNTED		304482	0					
ANR	305054	ArgumentList	tmp_member		304482	1					
ANR	305055	Argument	tmp_member		304482	0					
ANR	305056	Identifier	tmp_member		304482	0					
ANR	305057	CompoundStatement		84:43:2545:2545	304482	1					
ANR	305058	ExpressionStatement	zval_ptr_dtor ( & tmp_member )	602:2:18550:18576	304482	0	True				
ANR	305059	CallExpression	zval_ptr_dtor ( & tmp_member )		304482	0					
ANR	305060	Callee	zval_ptr_dtor		304482	0					
ANR	305061	Identifier	zval_ptr_dtor		304482	0					
ANR	305062	ArgumentList	& tmp_member		304482	1					
ANR	305063	Argument	& tmp_member		304482	0					
ANR	305064	UnaryOperationExpression	& tmp_member		304482	0					
ANR	305065	UnaryOperator	&		304482	0					
ANR	305066	Identifier	tmp_member		304482	1					
ANR	305067	ReturnStatement	return retval ;	605:1:18583:18596	304482	15	True				
ANR	305068	Identifier	retval		304482	0					
ANR	305069	ReturnType	zval *		304482	1					
ANR	305070	Identifier	zend_std_read_property		304482	2					
ANR	305071	ParameterList	"zval * object , zval * member , int type , void * * cache_slot , zval * rv"		304482	3					
ANR	305072	Parameter	zval * object	517:29:15923:15934	304482	0	True				
ANR	305073	ParameterType	zval *		304482	0					
ANR	305074	Identifier	object		304482	1					
ANR	305075	Parameter	zval * member	517:43:15937:15948	304482	1	True				
ANR	305076	ParameterType	zval *		304482	0					
ANR	305077	Identifier	member		304482	1					
ANR	305078	Parameter	int type	517:57:15951:15958	304482	2	True				
ANR	305079	ParameterType	int		304482	0					
ANR	305080	Identifier	type		304482	1					
ANR	305081	Parameter	void * * cache_slot	517:67:15961:15977	304482	3	True				
ANR	305082	ParameterType	void * *		304482	0					
ANR	305083	Identifier	cache_slot		304482	1					
ANR	305084	Parameter	zval * rv	517:86:15980:15987	304482	4	True				
ANR	305085	ParameterType	zval *		304482	0					
ANR	305086	Identifier	rv		304482	1					
ANR	305087	CFGEntryNode	ENTRY		304482		True				
ANR	305088	CFGExitNode	EXIT		304482		True				
ANR	305089	Symbol	exception		304482						
ANR	305090	Symbol	zobj		304482						
ANR	305091	Symbol	zobj -> ce -> name		304482						
ANR	305092	Symbol	type		304482						
ANR	305093	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		304482						
ANR	305094	Symbol	zend_hash_find		304482						
ANR	305095	Symbol	ZEND_WRONG_PROPERTY_OFFSET		304482						
ANR	305096	Symbol	zobj -> ce -> __get		304482						
ANR	305097	Symbol	IN_GET		304482						
ANR	305098	Symbol	BP_VAR_W		304482						
ANR	305099	Symbol	IS_STRING		304482						
ANR	305100	Symbol	BP_VAR_IS		304482						
ANR	305101	Symbol	IS_UNDEF		304482						
ANR	305102	Symbol	cache_slot		304482						
ANR	305103	Symbol	EG		304482						
ANR	305104	Symbol	NULL		304482						
ANR	305105	Symbol	E_NOTICE		304482						
ANR	305106	Symbol	stderr		304482						
ANR	305107	Symbol	zend_get_property_offset		304482						
ANR	305108	Symbol	zend_get_property_guard		304482						
ANR	305109	Symbol	retval		304482						
ANR	305110	Symbol	OBJ_PROP		304482						
ANR	305111	Symbol	tmp_object		304482						
ANR	305112	Symbol	Z_STR_P		304482						
ANR	305113	Symbol	Z_ISREF_P		304482						
ANR	305114	Symbol	object		304482						
ANR	305115	Symbol	Z_REFCOUNTED		304482						
ANR	305116	Symbol	~IN_GET		304482						
ANR	305117	Symbol	rv		304482						
ANR	305118	Symbol	Z_OBJ_P		304482						
ANR	305119	Symbol	guard		304482						
ANR	305120	Symbol	* * zobj		304482						
ANR	305121	Symbol	& EG		304482						
ANR	305122	Symbol	UNEXPECTED		304482						
ANR	305123	Symbol	* zobj		304482						
ANR	305124	Symbol	zobj -> properties		304482						
ANR	305125	Symbol	member		304482						
ANR	305126	Symbol	Z_STRLEN_P		304482						
ANR	305127	Symbol	* Z_STRVAL_P		304482						
ANR	305128	Symbol	uninitialized_zval		304482						
ANR	305129	Symbol	BP_VAR_RW		304482						
ANR	305130	Symbol	tmp_member		304482						
ANR	305131	Symbol	Z_OBJ_HANDLE_P		304482						
ANR	305132	Symbol	* zobj -> ce		304482						
ANR	305133	Symbol	& tmp_member		304482						
ANR	305134	Symbol	zval_get_string		304482						
ANR	305135	Symbol	zobj -> ce		304482						
ANR	305136	Symbol	property_offset		304482						
ANR	305137	Symbol	Z_TYPE_P		304482						
ANR	305138	Symbol	Z_STRVAL_P		304482						
ANR	305139	Symbol	* guard		304482						
ANR	305140	Symbol	ZSTR_VAL		304482						
ANR	305141	Symbol	& tmp_object		304482						
ANR	305142	Symbol	IS_OBJECT		304482						
ANR	305143	Symbol	EXPECTED		304482						
ANR	305144	Symbol	BP_VAR_UNSET		304482						
ANR	305145	Function	zend_std_write_property	609:0:18611:21422							
ANR	305146	FunctionDef	"zend_std_write_property (zval * object , zval * member , zval * value , void * * cache_slot)"		305145	0					
ANR	305147	CompoundStatement		610:0:18719:21422	305145	0					
ANR	305148	IdentifierDeclStatement	zend_object * zobj ;	611:1:18722:18739	305145	0	True				
ANR	305149	IdentifierDecl	* zobj		305145	0					
ANR	305150	IdentifierDeclType	zend_object *		305145	0					
ANR	305151	Identifier	zobj		305145	1					
ANR	305152	IdentifierDeclStatement	zval tmp_member ;	612:1:18742:18757	305145	1	True				
ANR	305153	IdentifierDecl	tmp_member		305145	0					
ANR	305154	IdentifierDeclType	zval		305145	0					
ANR	305155	Identifier	tmp_member		305145	1					
ANR	305156	IdentifierDeclStatement	zval * variable_ptr ;	613:1:18760:18778	305145	2	True				
ANR	305157	IdentifierDecl	* variable_ptr		305145	0					
ANR	305158	IdentifierDeclType	zval *		305145	0					
ANR	305159	Identifier	variable_ptr		305145	1					
ANR	305160	IdentifierDeclStatement	uint32_t property_offset ;	614:1:18781:18805	305145	3	True				
ANR	305161	IdentifierDecl	property_offset		305145	0					
ANR	305162	IdentifierDeclType	uint32_t		305145	0					
ANR	305163	Identifier	property_offset		305145	1					
ANR	305164	ExpressionStatement	zobj = Z_OBJ_P ( object )	616:1:18809:18831	305145	4	True				
ANR	305165	AssignmentExpression	zobj = Z_OBJ_P ( object )		305145	0		=			
ANR	305166	Identifier	zobj		305145	0					
ANR	305167	CallExpression	Z_OBJ_P ( object )		305145	1					
ANR	305168	Callee	Z_OBJ_P		305145	0					
ANR	305169	Identifier	Z_OBJ_P		305145	0					
ANR	305170	ArgumentList	object		305145	1					
ANR	305171	Argument	object		305145	0					
ANR	305172	Identifier	object		305145	0					
ANR	305173	ExpressionStatement	ZVAL_UNDEF ( & tmp_member )	618:1:18835:18858	305145	5	True				
ANR	305174	CallExpression	ZVAL_UNDEF ( & tmp_member )		305145	0					
ANR	305175	Callee	ZVAL_UNDEF		305145	0					
ANR	305176	Identifier	ZVAL_UNDEF		305145	0					
ANR	305177	ArgumentList	& tmp_member		305145	1					
ANR	305178	Argument	& tmp_member		305145	0					
ANR	305179	UnaryOperationExpression	& tmp_member		305145	0					
ANR	305180	UnaryOperator	&		305145	0					
ANR	305181	Identifier	tmp_member		305145	1					
ANR	305182	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING ) )		305145	6					
ANR	305183	Condition	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )	619:6:18866:18906	305145	0	True				
ANR	305184	CallExpression	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )		305145	0					
ANR	305185	Callee	UNEXPECTED		305145	0					
ANR	305186	Identifier	UNEXPECTED		305145	0					
ANR	305187	ArgumentList	Z_TYPE_P ( member ) != IS_STRING		305145	1					
ANR	305188	Argument	Z_TYPE_P ( member ) != IS_STRING		305145	0					
ANR	305189	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		305145	0		!=			
ANR	305190	CallExpression	Z_TYPE_P ( member )		305145	0					
ANR	305191	Callee	Z_TYPE_P		305145	0					
ANR	305192	Identifier	Z_TYPE_P		305145	0					
ANR	305193	ArgumentList	member		305145	1					
ANR	305194	Argument	member		305145	0					
ANR	305195	Identifier	member		305145	0					
ANR	305196	Identifier	IS_STRING		305145	1					
ANR	305197	CompoundStatement		10:49:189:189	305145	1					
ANR	305198	ExpressionStatement	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"	620:2:18913:18959	305145	0	True				
ANR	305199	CallExpression	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"		305145	0					
ANR	305200	Callee	ZVAL_STR		305145	0					
ANR	305201	Identifier	ZVAL_STR		305145	0					
ANR	305202	ArgumentList	& tmp_member		305145	1					
ANR	305203	Argument	& tmp_member		305145	0					
ANR	305204	UnaryOperationExpression	& tmp_member		305145	0					
ANR	305205	UnaryOperator	&		305145	0					
ANR	305206	Identifier	tmp_member		305145	1					
ANR	305207	Argument	zval_get_string ( member )		305145	1					
ANR	305208	CallExpression	zval_get_string ( member )		305145	0					
ANR	305209	Callee	zval_get_string		305145	0					
ANR	305210	Identifier	zval_get_string		305145	0					
ANR	305211	ArgumentList	member		305145	1					
ANR	305212	Argument	member		305145	0					
ANR	305213	Identifier	member		305145	0					
ANR	305214	ExpressionStatement	member = & tmp_member	621:2:18963:18983	305145	1	True				
ANR	305215	AssignmentExpression	member = & tmp_member		305145	0		=			
ANR	305216	Identifier	member		305145	0					
ANR	305217	UnaryOperationExpression	& tmp_member		305145	1					
ANR	305218	UnaryOperator	&		305145	0					
ANR	305219	Identifier	tmp_member		305145	1					
ANR	305220	ExpressionStatement	cache_slot = NULL	622:2:18987:19004	305145	2	True				
ANR	305221	AssignmentExpression	cache_slot = NULL		305145	0		=			
ANR	305222	Identifier	cache_slot		305145	0					
ANR	305223	Identifier	NULL		305145	1					
ANR	305224	ExpressionStatement	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( zobj -> ce -> __set != NULL ) , cache_slot )"	625:1:19011:19119	305145	7	True				
ANR	305225	AssignmentExpression	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( zobj -> ce -> __set != NULL ) , cache_slot )"		305145	0		=			
ANR	305226	Identifier	property_offset		305145	0					
ANR	305227	CallExpression	"zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( zobj -> ce -> __set != NULL ) , cache_slot )"		305145	1					
ANR	305228	Callee	zend_get_property_offset		305145	0					
ANR	305229	Identifier	zend_get_property_offset		305145	0					
ANR	305230	ArgumentList	zobj -> ce		305145	1					
ANR	305231	Argument	zobj -> ce		305145	0					
ANR	305232	PtrMemberAccess	zobj -> ce		305145	0					
ANR	305233	Identifier	zobj		305145	0					
ANR	305234	Identifier	ce		305145	1					
ANR	305235	Argument	Z_STR_P ( member )		305145	1					
ANR	305236	CallExpression	Z_STR_P ( member )		305145	0					
ANR	305237	Callee	Z_STR_P		305145	0					
ANR	305238	Identifier	Z_STR_P		305145	0					
ANR	305239	ArgumentList	member		305145	1					
ANR	305240	Argument	member		305145	0					
ANR	305241	Identifier	member		305145	0					
ANR	305242	Argument	zobj -> ce -> __set != NULL		305145	2					
ANR	305243	EqualityExpression	zobj -> ce -> __set != NULL		305145	0		!=			
ANR	305244	PtrMemberAccess	zobj -> ce -> __set		305145	0					
ANR	305245	PtrMemberAccess	zobj -> ce		305145	0					
ANR	305246	Identifier	zobj		305145	0					
ANR	305247	Identifier	ce		305145	1					
ANR	305248	Identifier	__set		305145	1					
ANR	305249	Identifier	NULL		305145	1					
ANR	305250	Argument	cache_slot		305145	3					
ANR	305251	Identifier	cache_slot		305145	0					
ANR	305252	IfStatement	if ( EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET ) )		305145	8					
ANR	305253	Condition	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )	627:5:19127:19181	305145	0	True				
ANR	305254	CallExpression	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )		305145	0					
ANR	305255	Callee	EXPECTED		305145	0					
ANR	305256	Identifier	EXPECTED		305145	0					
ANR	305257	ArgumentList	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	1					
ANR	305258	Argument	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	0					
ANR	305259	EqualityExpression	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	0		!=			
ANR	305260	Identifier	property_offset		305145	0					
ANR	305261	Identifier	ZEND_WRONG_PROPERTY_OFFSET		305145	1					
ANR	305262	CompoundStatement		18:62:464:464	305145	1					
ANR	305263	IfStatement	if ( EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET ) )		305145	0					
ANR	305264	Condition	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )	628:6:19192:19248	305145	0	True				
ANR	305265	CallExpression	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )		305145	0					
ANR	305266	Callee	EXPECTED		305145	0					
ANR	305267	Identifier	EXPECTED		305145	0					
ANR	305268	ArgumentList	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		305145	1					
ANR	305269	Argument	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		305145	0					
ANR	305270	EqualityExpression	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		305145	0		!=			
ANR	305271	Identifier	property_offset		305145	0					
ANR	305272	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		305145	1					
ANR	305273	CompoundStatement		19:65:531:531	305145	1					
ANR	305274	ExpressionStatement	"variable_ptr = OBJ_PROP ( zobj , property_offset )"	629:3:19256:19302	305145	0	True				
ANR	305275	AssignmentExpression	"variable_ptr = OBJ_PROP ( zobj , property_offset )"		305145	0		=			
ANR	305276	Identifier	variable_ptr		305145	0					
ANR	305277	CallExpression	"OBJ_PROP ( zobj , property_offset )"		305145	1					
ANR	305278	Callee	OBJ_PROP		305145	0					
ANR	305279	Identifier	OBJ_PROP		305145	0					
ANR	305280	ArgumentList	zobj		305145	1					
ANR	305281	Argument	zobj		305145	0					
ANR	305282	Identifier	zobj		305145	0					
ANR	305283	Argument	property_offset		305145	1					
ANR	305284	Identifier	property_offset		305145	0					
ANR	305285	IfStatement	if ( Z_TYPE_P ( variable_ptr ) != IS_UNDEF )		305145	1					
ANR	305286	Condition	Z_TYPE_P ( variable_ptr ) != IS_UNDEF	630:7:19311:19344	305145	0	True				
ANR	305287	EqualityExpression	Z_TYPE_P ( variable_ptr ) != IS_UNDEF		305145	0		!=			
ANR	305288	CallExpression	Z_TYPE_P ( variable_ptr )		305145	0					
ANR	305289	Callee	Z_TYPE_P		305145	0					
ANR	305290	Identifier	Z_TYPE_P		305145	0					
ANR	305291	ArgumentList	variable_ptr		305145	1					
ANR	305292	Argument	variable_ptr		305145	0					
ANR	305293	Identifier	variable_ptr		305145	0					
ANR	305294	Identifier	IS_UNDEF		305145	1					
ANR	305295	CompoundStatement		21:43:627:627	305145	1					
ANR	305296	GotoStatement	goto found ;	631:4:19353:19363	305145	0	True				
ANR	305297	Identifier	found		305145	0					
ANR	305298	ElseStatement	else		305145	0					
ANR	305299	IfStatement	if ( EXPECTED ( zobj -> properties != NULL ) )		305145	0					
ANR	305300	Condition	EXPECTED ( zobj -> properties != NULL )	633:13:19383:19416	305145	0	True				
ANR	305301	CallExpression	EXPECTED ( zobj -> properties != NULL )		305145	0					
ANR	305302	Callee	EXPECTED		305145	0					
ANR	305303	Identifier	EXPECTED		305145	0					
ANR	305304	ArgumentList	zobj -> properties != NULL		305145	1					
ANR	305305	Argument	zobj -> properties != NULL		305145	0					
ANR	305306	EqualityExpression	zobj -> properties != NULL		305145	0		!=			
ANR	305307	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305308	Identifier	zobj		305145	0					
ANR	305309	Identifier	properties		305145	1					
ANR	305310	Identifier	NULL		305145	1					
ANR	305311	CompoundStatement		24:49:699:699	305145	1					
ANR	305312	IfStatement	if ( UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 ) )		305145	0					
ANR	305313	Condition	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )	634:7:19428:19472	305145	0	True				
ANR	305314	CallExpression	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )		305145	0					
ANR	305315	Callee	UNEXPECTED		305145	0					
ANR	305316	Identifier	UNEXPECTED		305145	0					
ANR	305317	ArgumentList	GC_REFCOUNT ( zobj -> properties ) > 1		305145	1					
ANR	305318	Argument	GC_REFCOUNT ( zobj -> properties ) > 1		305145	0					
ANR	305319	RelationalExpression	GC_REFCOUNT ( zobj -> properties ) > 1		305145	0		>			
ANR	305320	CallExpression	GC_REFCOUNT ( zobj -> properties )		305145	0					
ANR	305321	Callee	GC_REFCOUNT		305145	0					
ANR	305322	Identifier	GC_REFCOUNT		305145	0					
ANR	305323	ArgumentList	zobj -> properties		305145	1					
ANR	305324	Argument	zobj -> properties		305145	0					
ANR	305325	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305326	Identifier	zobj		305145	0					
ANR	305327	Identifier	properties		305145	1					
ANR	305328	PrimaryExpression	1		305145	1					
ANR	305329	CompoundStatement		25:54:755:755	305145	1					
ANR	305330	IfStatement	if ( EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) ) )		305145	0					
ANR	305331	Condition	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )	635:8:19485:19544	305145	0	True				
ANR	305332	CallExpression	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )		305145	0					
ANR	305333	Callee	EXPECTED		305145	0					
ANR	305334	Identifier	EXPECTED		305145	0					
ANR	305335	ArgumentList	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		305145	1					
ANR	305336	Argument	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		305145	0					
ANR	305337	UnaryOperationExpression	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		305145	0					
ANR	305338	UnaryOperator	!		305145	0					
ANR	305339	BitAndExpression	GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE		305145	1		&			
ANR	305340	CallExpression	GC_FLAGS ( zobj -> properties )		305145	0					
ANR	305341	Callee	GC_FLAGS		305145	0					
ANR	305342	Identifier	GC_FLAGS		305145	0					
ANR	305343	ArgumentList	zobj -> properties		305145	1					
ANR	305344	Argument	zobj -> properties		305145	0					
ANR	305345	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305346	Identifier	zobj		305145	0					
ANR	305347	Identifier	properties		305145	1					
ANR	305348	Identifier	IS_ARRAY_IMMUTABLE		305145	1					
ANR	305349	CompoundStatement		26:70:827:827	305145	1					
ANR	305350	ExpressionStatement	GC_REFCOUNT ( zobj -> properties ) --	636:5:19554:19585	305145	0	True				
ANR	305351	PostIncDecOperationExpression	GC_REFCOUNT ( zobj -> properties ) --		305145	0					
ANR	305352	CallExpression	GC_REFCOUNT ( zobj -> properties )		305145	0					
ANR	305353	Callee	GC_REFCOUNT		305145	0					
ANR	305354	Identifier	GC_REFCOUNT		305145	0					
ANR	305355	ArgumentList	zobj -> properties		305145	1					
ANR	305356	Argument	zobj -> properties		305145	0					
ANR	305357	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305358	Identifier	zobj		305145	0					
ANR	305359	Identifier	properties		305145	1					
ANR	305360	IncDec	--		305145	1					
ANR	305361	ExpressionStatement	zobj -> properties = zend_array_dup ( zobj -> properties )	638:4:19597:19648	305145	1	True				
ANR	305362	AssignmentExpression	zobj -> properties = zend_array_dup ( zobj -> properties )		305145	0		=			
ANR	305363	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305364	Identifier	zobj		305145	0					
ANR	305365	Identifier	properties		305145	1					
ANR	305366	CallExpression	zend_array_dup ( zobj -> properties )		305145	1					
ANR	305367	Callee	zend_array_dup		305145	0					
ANR	305368	Identifier	zend_array_dup		305145	0					
ANR	305369	ArgumentList	zobj -> properties		305145	1					
ANR	305370	Argument	zobj -> properties		305145	0					
ANR	305371	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305372	Identifier	zobj		305145	0					
ANR	305373	Identifier	properties		305145	1					
ANR	305374	IfStatement	"if ( ( variable_ptr = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) ) ) != NULL )"		305145	1					
ANR	305375	Condition	"( variable_ptr = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) ) ) != NULL"	640:7:19662:19735	305145	0	True				
ANR	305376	EqualityExpression	"( variable_ptr = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) ) ) != NULL"		305145	0		!=			
ANR	305377	AssignmentExpression	"variable_ptr = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) )"		305145	0		=			
ANR	305378	Identifier	variable_ptr		305145	0					
ANR	305379	CallExpression	"zend_hash_find ( zobj -> properties , Z_STR_P ( member ) )"		305145	1					
ANR	305380	Callee	zend_hash_find		305145	0					
ANR	305381	Identifier	zend_hash_find		305145	0					
ANR	305382	ArgumentList	zobj -> properties		305145	1					
ANR	305383	Argument	zobj -> properties		305145	0					
ANR	305384	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305385	Identifier	zobj		305145	0					
ANR	305386	Identifier	properties		305145	1					
ANR	305387	Argument	Z_STR_P ( member )		305145	1					
ANR	305388	CallExpression	Z_STR_P ( member )		305145	0					
ANR	305389	Callee	Z_STR_P		305145	0					
ANR	305390	Identifier	Z_STR_P		305145	0					
ANR	305391	ArgumentList	member		305145	1					
ANR	305392	Argument	member		305145	0					
ANR	305393	Identifier	member		305145	0					
ANR	305394	Identifier	NULL		305145	1					
ANR	305395	CompoundStatement		31:83:1018:1018	305145	1					
ANR	305396	Label	found :	641:0:19740:19745	305145	0	True				
ANR	305397	Identifier	found		305145	0					
ANR	305398	ExpressionStatement	"zend_assign_to_variable ( variable_ptr , value , IS_CV )"	642:4:19751:19802	305145	1	True				
ANR	305399	CallExpression	"zend_assign_to_variable ( variable_ptr , value , IS_CV )"		305145	0					
ANR	305400	Callee	zend_assign_to_variable		305145	0					
ANR	305401	Identifier	zend_assign_to_variable		305145	0					
ANR	305402	ArgumentList	variable_ptr		305145	1					
ANR	305403	Argument	variable_ptr		305145	0					
ANR	305404	Identifier	variable_ptr		305145	0					
ANR	305405	Argument	value		305145	1					
ANR	305406	Identifier	value		305145	0					
ANR	305407	Argument	IS_CV		305145	2					
ANR	305408	Identifier	IS_CV		305145	0					
ANR	305409	GotoStatement	goto exit ;	643:4:19808:19817	305145	2	True				
ANR	305410	Identifier	exit		305145	0					
ANR	305411	ElseStatement	else		305145	0					
ANR	305412	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		305145	0					
ANR	305413	Condition	UNEXPECTED ( EG ( exception ) )	646:12:19840:19864	305145	0	True				
ANR	305414	CallExpression	UNEXPECTED ( EG ( exception ) )		305145	0					
ANR	305415	Callee	UNEXPECTED		305145	0					
ANR	305416	Identifier	UNEXPECTED		305145	0					
ANR	305417	ArgumentList	EG ( exception )		305145	1					
ANR	305418	Argument	EG ( exception )		305145	0					
ANR	305419	CallExpression	EG ( exception )		305145	0					
ANR	305420	Callee	EG		305145	0					
ANR	305421	Identifier	EG		305145	0					
ANR	305422	ArgumentList	exception		305145	1					
ANR	305423	Argument	exception		305145	0					
ANR	305424	Identifier	exception		305145	0					
ANR	305425	CompoundStatement		37:39:1147:1147	305145	1					
ANR	305426	GotoStatement	goto exit ;	647:2:19871:19880	305145	0	True				
ANR	305427	Identifier	exit		305145	0					
ANR	305428	IfStatement	if ( zobj -> ce -> __set )		305145	9					
ANR	305429	Condition	zobj -> ce -> __set	651:5:19908:19922	305145	0	True				
ANR	305430	PtrMemberAccess	zobj -> ce -> __set		305145	0					
ANR	305431	PtrMemberAccess	zobj -> ce		305145	0					
ANR	305432	Identifier	zobj		305145	0					
ANR	305433	Identifier	ce		305145	1					
ANR	305434	Identifier	__set		305145	1					
ANR	305435	CompoundStatement		43:2:1209:1274	305145	1					
ANR	305436	IdentifierDeclStatement	"zend_long * guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) ) ;"	652:2:19929:19994	305145	0	True				
ANR	305437	IdentifierDecl	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		305145	0					
ANR	305438	IdentifierDeclType	zend_long *		305145	0					
ANR	305439	Identifier	guard		305145	1					
ANR	305440	AssignmentExpression	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		305145	2		=			
ANR	305441	Identifier	guard		305145	0					
ANR	305442	CallExpression	"zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		305145	1					
ANR	305443	Callee	zend_get_property_guard		305145	0					
ANR	305444	Identifier	zend_get_property_guard		305145	0					
ANR	305445	ArgumentList	zobj		305145	1					
ANR	305446	Argument	zobj		305145	0					
ANR	305447	Identifier	zobj		305145	0					
ANR	305448	Argument	Z_STR_P ( member )		305145	1					
ANR	305449	CallExpression	Z_STR_P ( member )		305145	0					
ANR	305450	Callee	Z_STR_P		305145	0					
ANR	305451	Identifier	Z_STR_P		305145	0					
ANR	305452	ArgumentList	member		305145	1					
ANR	305453	Argument	member		305145	0					
ANR	305454	Identifier	member		305145	0					
ANR	305455	IfStatement	if ( ! ( ( * guard ) & IN_SET ) )		305145	1					
ANR	305456	Condition	! ( ( * guard ) & IN_SET )	654:9:20006:20025	305145	0	True				
ANR	305457	UnaryOperationExpression	! ( ( * guard ) & IN_SET )		305145	0					
ANR	305458	UnaryOperator	!		305145	0					
ANR	305459	BitAndExpression	( * guard ) & IN_SET		305145	1		&			
ANR	305460	UnaryOperationExpression	* guard		305145	0					
ANR	305461	UnaryOperator	*		305145	0					
ANR	305462	Identifier	guard		305145	1					
ANR	305463	Identifier	IN_SET		305145	1					
ANR	305464	CompoundStatement		46:3:1313:1328	305145	1					
ANR	305465	IdentifierDeclStatement	zval tmp_object ;	655:3:20033:20048	305145	0	True				
ANR	305466	IdentifierDecl	tmp_object		305145	0					
ANR	305467	IdentifierDeclType	zval		305145	0					
ANR	305468	Identifier	tmp_object		305145	1					
ANR	305469	ExpressionStatement	"ZVAL_COPY ( & tmp_object , object )"	657:3:20054:20084	305145	1	True				
ANR	305470	CallExpression	"ZVAL_COPY ( & tmp_object , object )"		305145	0					
ANR	305471	Callee	ZVAL_COPY		305145	0					
ANR	305472	Identifier	ZVAL_COPY		305145	0					
ANR	305473	ArgumentList	& tmp_object		305145	1					
ANR	305474	Argument	& tmp_object		305145	0					
ANR	305475	UnaryOperationExpression	& tmp_object		305145	0					
ANR	305476	UnaryOperator	&		305145	0					
ANR	305477	Identifier	tmp_object		305145	1					
ANR	305478	Argument	object		305145	1					
ANR	305479	Identifier	object		305145	0					
ANR	305480	ExpressionStatement	( * guard ) |= IN_SET	658:3:20089:20107	305145	2	True				
ANR	305481	AssignmentExpression	( * guard ) |= IN_SET		305145	0		|=			
ANR	305482	UnaryOperationExpression	* guard		305145	0					
ANR	305483	UnaryOperator	*		305145	0					
ANR	305484	Identifier	guard		305145	1					
ANR	305485	Identifier	IN_SET		305145	1					
ANR	305486	IfStatement	"if ( zend_std_call_setter ( & tmp_object , member , value ) != SUCCESS )"		305145	3					
ANR	305487	Condition	"zend_std_call_setter ( & tmp_object , member , value ) != SUCCESS"	659:7:20147:20205	305145	0	True				
ANR	305488	EqualityExpression	"zend_std_call_setter ( & tmp_object , member , value ) != SUCCESS"		305145	0		!=			
ANR	305489	CallExpression	"zend_std_call_setter ( & tmp_object , member , value )"		305145	0					
ANR	305490	Callee	zend_std_call_setter		305145	0					
ANR	305491	Identifier	zend_std_call_setter		305145	0					
ANR	305492	ArgumentList	& tmp_object		305145	1					
ANR	305493	Argument	& tmp_object		305145	0					
ANR	305494	UnaryOperationExpression	& tmp_object		305145	0					
ANR	305495	UnaryOperator	&		305145	0					
ANR	305496	Identifier	tmp_object		305145	1					
ANR	305497	Argument	member		305145	1					
ANR	305498	Identifier	member		305145	0					
ANR	305499	Argument	value		305145	2					
ANR	305500	Identifier	value		305145	0					
ANR	305501	Identifier	SUCCESS		305145	1					
ANR	305502	CompoundStatement		50:68:1488:1488	305145	1					
ANR	305503	ExpressionStatement	( * guard ) &= ~IN_SET	662:3:20295:20314	305145	4	True				
ANR	305504	AssignmentExpression	( * guard ) &= ~IN_SET		305145	0		&=			
ANR	305505	UnaryOperationExpression	* guard		305145	0					
ANR	305506	UnaryOperator	*		305145	0					
ANR	305507	Identifier	guard		305145	1					
ANR	305508	Identifier	~IN_SET		305145	1					
ANR	305509	ExpressionStatement	zval_ptr_dtor ( & tmp_object )	663:3:20319:20345	305145	5	True				
ANR	305510	CallExpression	zval_ptr_dtor ( & tmp_object )		305145	0					
ANR	305511	Callee	zval_ptr_dtor		305145	0					
ANR	305512	Identifier	zval_ptr_dtor		305145	0					
ANR	305513	ArgumentList	& tmp_object		305145	1					
ANR	305514	Argument	& tmp_object		305145	0					
ANR	305515	UnaryOperationExpression	& tmp_object		305145	0					
ANR	305516	UnaryOperator	&		305145	0					
ANR	305517	Identifier	tmp_object		305145	1					
ANR	305518	ElseStatement	else		305145	0					
ANR	305519	IfStatement	if ( EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET ) )		305145	0					
ANR	305520	Condition	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )	664:13:20360:20414	305145	0	True				
ANR	305521	CallExpression	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )		305145	0					
ANR	305522	Callee	EXPECTED		305145	0					
ANR	305523	Identifier	EXPECTED		305145	0					
ANR	305524	ArgumentList	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	1					
ANR	305525	Argument	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	0					
ANR	305526	EqualityExpression	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	0		!=			
ANR	305527	Identifier	property_offset		305145	0					
ANR	305528	Identifier	ZEND_WRONG_PROPERTY_OFFSET		305145	1					
ANR	305529	CompoundStatement		55:70:1697:1697	305145	1					
ANR	305530	GotoStatement	goto write_std_property ;	665:3:20422:20445	305145	0	True				
ANR	305531	Identifier	write_std_property		305145	0					
ANR	305532	ElseStatement	else		305145	0					
ANR	305533	CompoundStatement		57:9:1736:1736	305145	0					
ANR	305534	IfStatement	if ( Z_STRVAL_P ( member ) [ 0 ] == '\\0' )		305145	0					
ANR	305535	Condition	Z_STRVAL_P ( member ) [ 0 ] == '\\0'	667:7:20465:20493	305145	0	True				
ANR	305536	EqualityExpression	Z_STRVAL_P ( member ) [ 0 ] == '\\0'		305145	0		==			
ANR	305537	ArrayIndexing	Z_STRVAL_P ( member ) [ 0 ]		305145	0					
ANR	305538	CallExpression	Z_STRVAL_P ( member )		305145	0					
ANR	305539	Callee	Z_STRVAL_P		305145	0					
ANR	305540	Identifier	Z_STRVAL_P		305145	0					
ANR	305541	ArgumentList	member		305145	1					
ANR	305542	Argument	member		305145	0					
ANR	305543	Identifier	member		305145	0					
ANR	305544	PrimaryExpression	0		305145	1					
ANR	305545	PrimaryExpression	'\\0'		305145	1					
ANR	305546	CompoundStatement		58:38:1776:1776	305145	1					
ANR	305547	IfStatement	if ( Z_STRLEN_P ( member ) == 0 )		305145	0					
ANR	305548	Condition	Z_STRLEN_P ( member ) == 0	668:8:20506:20528	305145	0	True				
ANR	305549	EqualityExpression	Z_STRLEN_P ( member ) == 0		305145	0		==			
ANR	305550	CallExpression	Z_STRLEN_P ( member )		305145	0					
ANR	305551	Callee	Z_STRLEN_P		305145	0					
ANR	305552	Identifier	Z_STRLEN_P		305145	0					
ANR	305553	ArgumentList	member		305145	1					
ANR	305554	Argument	member		305145	0					
ANR	305555	Identifier	member		305145	0					
ANR	305556	PrimaryExpression	0		305145	1					
ANR	305557	CompoundStatement		59:33:1811:1811	305145	1					
ANR	305558	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access empty property"" )"	669:5:20538:20592	305145	0	True				
ANR	305559	CallExpression	"zend_throw_error ( NULL , ""Cannot access empty property"" )"		305145	0					
ANR	305560	Callee	zend_throw_error		305145	0					
ANR	305561	Identifier	zend_throw_error		305145	0					
ANR	305562	ArgumentList	NULL		305145	1					
ANR	305563	Argument	NULL		305145	0					
ANR	305564	Identifier	NULL		305145	0					
ANR	305565	Argument	"""Cannot access empty property"""		305145	1					
ANR	305566	PrimaryExpression	"""Cannot access empty property"""		305145	0					
ANR	305567	GotoStatement	goto exit ;	670:5:20599:20608	305145	1	True				
ANR	305568	Identifier	exit		305145	0					
ANR	305569	ElseStatement	else		305145	0					
ANR	305570	CompoundStatement		62:11:1901:1901	305145	0					
ANR	305571	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"	672:5:20628:20695	305145	0	True				
ANR	305572	CallExpression	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"		305145	0					
ANR	305573	Callee	zend_throw_error		305145	0					
ANR	305574	Identifier	zend_throw_error		305145	0					
ANR	305575	ArgumentList	NULL		305145	1					
ANR	305576	Argument	NULL		305145	0					
ANR	305577	Identifier	NULL		305145	0					
ANR	305578	Argument	"""Cannot access property started with '\\\\0'"""		305145	1					
ANR	305579	PrimaryExpression	"""Cannot access property started with '\\\\0'"""		305145	0					
ANR	305580	GotoStatement	goto exit ;	673:5:20702:20711	305145	1	True				
ANR	305581	Identifier	exit		305145	0					
ANR	305582	ElseStatement	else		305145	0					
ANR	305583	IfStatement	if ( EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET ) )		305145	0					
ANR	305584	Condition	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )	677:12:20740:20794	305145	0	True				
ANR	305585	CallExpression	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )		305145	0					
ANR	305586	Callee	EXPECTED		305145	0					
ANR	305587	Identifier	EXPECTED		305145	0					
ANR	305588	ArgumentList	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	1					
ANR	305589	Argument	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	0					
ANR	305590	EqualityExpression	property_offset != ZEND_WRONG_PROPERTY_OFFSET		305145	0		!=			
ANR	305591	Identifier	property_offset		305145	0					
ANR	305592	Identifier	ZEND_WRONG_PROPERTY_OFFSET		305145	1					
ANR	305593	CompoundStatement		69:2:2081:2089	305145	1					
ANR	305594	IdentifierDeclStatement	zval tmp ;	678:2:20801:20809	305145	0	True				
ANR	305595	IdentifierDecl	tmp		305145	0					
ANR	305596	IdentifierDeclType	zval		305145	0					
ANR	305597	Identifier	tmp		305145	1					
ANR	305598	Label	write_std_property :	680:0:20812:20830	305145	1	True				
ANR	305599	Identifier	write_std_property		305145	0					
ANR	305600	IfStatement	if ( Z_REFCOUNTED_P ( value ) )		305145	2					
ANR	305601	Condition	Z_REFCOUNTED_P ( value )	681:6:20838:20858	305145	0	True				
ANR	305602	CallExpression	Z_REFCOUNTED_P ( value )		305145	0					
ANR	305603	Callee	Z_REFCOUNTED_P		305145	0					
ANR	305604	Identifier	Z_REFCOUNTED_P		305145	0					
ANR	305605	ArgumentList	value		305145	1					
ANR	305606	Argument	value		305145	0					
ANR	305607	Identifier	value		305145	0					
ANR	305608	CompoundStatement		72:29:2141:2141	305145	1					
ANR	305609	IfStatement	if ( Z_ISREF_P ( value ) )		305145	0					
ANR	305610	Condition	Z_ISREF_P ( value )	682:7:20870:20885	305145	0	True				
ANR	305611	CallExpression	Z_ISREF_P ( value )		305145	0					
ANR	305612	Callee	Z_ISREF_P		305145	0					
ANR	305613	Identifier	Z_ISREF_P		305145	0					
ANR	305614	ArgumentList	value		305145	1					
ANR	305615	Argument	value		305145	0					
ANR	305616	Identifier	value		305145	0					
ANR	305617	CompoundStatement		73:25:2168:2168	305145	1					
ANR	305618	ExpressionStatement	"ZVAL_COPY ( & tmp , Z_REFVAL_P ( value ) )"	684:4:20960:20994	305145	0	True				
ANR	305619	CallExpression	"ZVAL_COPY ( & tmp , Z_REFVAL_P ( value ) )"		305145	0					
ANR	305620	Callee	ZVAL_COPY		305145	0					
ANR	305621	Identifier	ZVAL_COPY		305145	0					
ANR	305622	ArgumentList	& tmp		305145	1					
ANR	305623	Argument	& tmp		305145	0					
ANR	305624	UnaryOperationExpression	& tmp		305145	0					
ANR	305625	UnaryOperator	&		305145	0					
ANR	305626	Identifier	tmp		305145	1					
ANR	305627	Argument	Z_REFVAL_P ( value )		305145	1					
ANR	305628	CallExpression	Z_REFVAL_P ( value )		305145	0					
ANR	305629	Callee	Z_REFVAL_P		305145	0					
ANR	305630	Identifier	Z_REFVAL_P		305145	0					
ANR	305631	ArgumentList	value		305145	1					
ANR	305632	Argument	value		305145	0					
ANR	305633	Identifier	value		305145	0					
ANR	305634	ExpressionStatement	value = & tmp	685:4:21000:21012	305145	1	True				
ANR	305635	AssignmentExpression	value = & tmp		305145	0		=			
ANR	305636	Identifier	value		305145	0					
ANR	305637	UnaryOperationExpression	& tmp		305145	1					
ANR	305638	UnaryOperator	&		305145	0					
ANR	305639	Identifier	tmp		305145	1					
ANR	305640	ElseStatement	else		305145	0					
ANR	305641	CompoundStatement		77:10:2304:2304	305145	0					
ANR	305642	ExpressionStatement	Z_ADDREF_P ( value )	687:4:21030:21047	305145	0	True				
ANR	305643	CallExpression	Z_ADDREF_P ( value )		305145	0					
ANR	305644	Callee	Z_ADDREF_P		305145	0					
ANR	305645	Identifier	Z_ADDREF_P		305145	0					
ANR	305646	ArgumentList	value		305145	1					
ANR	305647	Argument	value		305145	0					
ANR	305648	Identifier	value		305145	0					
ANR	305649	IfStatement	if ( EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET ) )		305145	3					
ANR	305650	Condition	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )	690:6:21064:21120	305145	0	True				
ANR	305651	CallExpression	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )		305145	0					
ANR	305652	Callee	EXPECTED		305145	0					
ANR	305653	Identifier	EXPECTED		305145	0					
ANR	305654	ArgumentList	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		305145	1					
ANR	305655	Argument	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		305145	0					
ANR	305656	EqualityExpression	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		305145	0		!=			
ANR	305657	Identifier	property_offset		305145	0					
ANR	305658	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		305145	1					
ANR	305659	CompoundStatement		81:65:2403:2403	305145	1					
ANR	305660	ExpressionStatement	"ZVAL_COPY_VALUE ( OBJ_PROP ( zobj , property_offset ) , value )"	691:3:21128:21183	305145	0	True				
ANR	305661	CallExpression	"ZVAL_COPY_VALUE ( OBJ_PROP ( zobj , property_offset ) , value )"		305145	0					
ANR	305662	Callee	ZVAL_COPY_VALUE		305145	0					
ANR	305663	Identifier	ZVAL_COPY_VALUE		305145	0					
ANR	305664	ArgumentList	"OBJ_PROP ( zobj , property_offset )"		305145	1					
ANR	305665	Argument	"OBJ_PROP ( zobj , property_offset )"		305145	0					
ANR	305666	CallExpression	"OBJ_PROP ( zobj , property_offset )"		305145	0					
ANR	305667	Callee	OBJ_PROP		305145	0					
ANR	305668	Identifier	OBJ_PROP		305145	0					
ANR	305669	ArgumentList	zobj		305145	1					
ANR	305670	Argument	zobj		305145	0					
ANR	305671	Identifier	zobj		305145	0					
ANR	305672	Argument	property_offset		305145	1					
ANR	305673	Identifier	property_offset		305145	0					
ANR	305674	Argument	value		305145	1					
ANR	305675	Identifier	value		305145	0					
ANR	305676	ElseStatement	else		305145	0					
ANR	305677	CompoundStatement		83:9:2474:2474	305145	0					
ANR	305678	IfStatement	if ( ! zobj -> properties )		305145	0					
ANR	305679	Condition	! zobj -> properties	693:7:21203:21219	305145	0	True				
ANR	305680	UnaryOperationExpression	! zobj -> properties		305145	0					
ANR	305681	UnaryOperator	!		305145	0					
ANR	305682	PtrMemberAccess	zobj -> properties		305145	1					
ANR	305683	Identifier	zobj		305145	0					
ANR	305684	Identifier	properties		305145	1					
ANR	305685	CompoundStatement		84:26:2502:2502	305145	1					
ANR	305686	ExpressionStatement	rebuild_object_properties ( zobj )	694:4:21228:21259	305145	0	True				
ANR	305687	CallExpression	rebuild_object_properties ( zobj )		305145	0					
ANR	305688	Callee	rebuild_object_properties		305145	0					
ANR	305689	Identifier	rebuild_object_properties		305145	0					
ANR	305690	ArgumentList	zobj		305145	1					
ANR	305691	Argument	zobj		305145	0					
ANR	305692	Identifier	zobj		305145	0					
ANR	305693	ExpressionStatement	"zend_hash_add_new ( zobj -> properties , Z_STR_P ( member ) , value )"	696:3:21269:21328	305145	1	True				
ANR	305694	CallExpression	"zend_hash_add_new ( zobj -> properties , Z_STR_P ( member ) , value )"		305145	0					
ANR	305695	Callee	zend_hash_add_new		305145	0					
ANR	305696	Identifier	zend_hash_add_new		305145	0					
ANR	305697	ArgumentList	zobj -> properties		305145	1					
ANR	305698	Argument	zobj -> properties		305145	0					
ANR	305699	PtrMemberAccess	zobj -> properties		305145	0					
ANR	305700	Identifier	zobj		305145	0					
ANR	305701	Identifier	properties		305145	1					
ANR	305702	Argument	Z_STR_P ( member )		305145	1					
ANR	305703	CallExpression	Z_STR_P ( member )		305145	0					
ANR	305704	Callee	Z_STR_P		305145	0					
ANR	305705	Identifier	Z_STR_P		305145	0					
ANR	305706	ArgumentList	member		305145	1					
ANR	305707	Argument	member		305145	0					
ANR	305708	Identifier	member		305145	0					
ANR	305709	Argument	value		305145	2					
ANR	305710	Identifier	value		305145	0					
ANR	305711	Label	exit :	700:0:21338:21342	305145	10	True				
ANR	305712	Identifier	exit		305145	0					
ANR	305713	IfStatement	if ( UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) ) )		305145	11					
ANR	305714	Condition	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )	701:5:21349:21384	305145	0	True				
ANR	305715	CallExpression	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )		305145	0					
ANR	305716	Callee	UNEXPECTED		305145	0					
ANR	305717	Identifier	UNEXPECTED		305145	0					
ANR	305718	ArgumentList	Z_REFCOUNTED ( tmp_member )		305145	1					
ANR	305719	Argument	Z_REFCOUNTED ( tmp_member )		305145	0					
ANR	305720	CallExpression	Z_REFCOUNTED ( tmp_member )		305145	0					
ANR	305721	Callee	Z_REFCOUNTED		305145	0					
ANR	305722	Identifier	Z_REFCOUNTED		305145	0					
ANR	305723	ArgumentList	tmp_member		305145	1					
ANR	305724	Argument	tmp_member		305145	0					
ANR	305725	Identifier	tmp_member		305145	0					
ANR	305726	CompoundStatement		92:43:2667:2667	305145	1					
ANR	305727	ExpressionStatement	zval_ptr_dtor ( & tmp_member )	702:2:21391:21417	305145	0	True				
ANR	305728	CallExpression	zval_ptr_dtor ( & tmp_member )		305145	0					
ANR	305729	Callee	zval_ptr_dtor		305145	0					
ANR	305730	Identifier	zval_ptr_dtor		305145	0					
ANR	305731	ArgumentList	& tmp_member		305145	1					
ANR	305732	Argument	& tmp_member		305145	0					
ANR	305733	UnaryOperationExpression	& tmp_member		305145	0					
ANR	305734	UnaryOperator	&		305145	0					
ANR	305735	Identifier	tmp_member		305145	1					
ANR	305736	ReturnType	ZEND_API void		305145	1					
ANR	305737	Identifier	zend_std_write_property		305145	2					
ANR	305738	ParameterList	"zval * object , zval * member , zval * value , void * * cache_slot"		305145	3					
ANR	305739	Parameter	zval * object	609:38:18649:18660	305145	0	True				
ANR	305740	ParameterType	zval *		305145	0					
ANR	305741	Identifier	object		305145	1					
ANR	305742	Parameter	zval * member	609:52:18663:18674	305145	1	True				
ANR	305743	ParameterType	zval *		305145	0					
ANR	305744	Identifier	member		305145	1					
ANR	305745	Parameter	zval * value	609:66:18677:18687	305145	2	True				
ANR	305746	ParameterType	zval *		305145	0					
ANR	305747	Identifier	value		305145	1					
ANR	305748	Parameter	void * * cache_slot	609:79:18690:18706	305145	3	True				
ANR	305749	ParameterType	void * *		305145	0					
ANR	305750	Identifier	cache_slot		305145	1					
ANR	305751	CFGEntryNode	ENTRY		305145		True				
ANR	305752	CFGExitNode	EXIT		305145		True				
ANR	305753	Symbol	exception		305145						
ANR	305754	Symbol	zend_std_call_setter		305145						
ANR	305755	Symbol	IS_CV		305145						
ANR	305756	Symbol	zobj		305145						
ANR	305757	Symbol	GC_FLAGS		305145						
ANR	305758	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		305145						
ANR	305759	Symbol	zend_hash_find		305145						
ANR	305760	Symbol	ZEND_WRONG_PROPERTY_OFFSET		305145						
ANR	305761	Symbol	tmp		305145						
ANR	305762	Symbol	IS_STRING		305145						
ANR	305763	Symbol	IS_UNDEF		305145						
ANR	305764	Symbol	zend_array_dup		305145						
ANR	305765	Symbol	cache_slot		305145						
ANR	305766	Symbol	IN_SET		305145						
ANR	305767	Symbol	EG		305145						
ANR	305768	Symbol	NULL		305145						
ANR	305769	Symbol	zobj -> ce -> __set		305145						
ANR	305770	Symbol	zend_get_property_offset		305145						
ANR	305771	Symbol	zend_get_property_guard		305145						
ANR	305772	Symbol	OBJ_PROP		305145						
ANR	305773	Symbol	tmp_object		305145						
ANR	305774	Symbol	& tmp		305145						
ANR	305775	Symbol	Z_STR_P		305145						
ANR	305776	Symbol	Z_REFCOUNTED_P		305145						
ANR	305777	Symbol	Z_ISREF_P		305145						
ANR	305778	Symbol	object		305145						
ANR	305779	Symbol	Z_REFCOUNTED		305145						
ANR	305780	Symbol	Z_OBJ_P		305145						
ANR	305781	Symbol	guard		305145						
ANR	305782	Symbol	* * zobj		305145						
ANR	305783	Symbol	UNEXPECTED		305145						
ANR	305784	Symbol	* zobj		305145						
ANR	305785	Symbol	zobj -> properties		305145						
ANR	305786	Symbol	member		305145						
ANR	305787	Symbol	Z_STRLEN_P		305145						
ANR	305788	Symbol	* Z_STRVAL_P		305145						
ANR	305789	Symbol	value		305145						
ANR	305790	Symbol	GC_REFCOUNT		305145						
ANR	305791	Symbol	tmp_member		305145						
ANR	305792	Symbol	SUCCESS		305145						
ANR	305793	Symbol	* zobj -> ce		305145						
ANR	305794	Symbol	variable_ptr		305145						
ANR	305795	Symbol	& tmp_member		305145						
ANR	305796	Symbol	zval_get_string		305145						
ANR	305797	Symbol	zobj -> ce		305145						
ANR	305798	Symbol	IS_ARRAY_IMMUTABLE		305145						
ANR	305799	Symbol	property_offset		305145						
ANR	305800	Symbol	Z_TYPE_P		305145						
ANR	305801	Symbol	* guard		305145						
ANR	305802	Symbol	Z_STRVAL_P		305145						
ANR	305803	Symbol	& tmp_object		305145						
ANR	305804	Symbol	Z_REFVAL_P		305145						
ANR	305805	Symbol	~IN_SET		305145						
ANR	305806	Symbol	EXPECTED		305145						
ANR	305807	Function	zend_std_read_dimension	707:0:21435:22229							
ANR	305808	FunctionDef	"zend_std_read_dimension (zval * object , zval * offset , int type , zval * rv)"		305807	0					
ANR	305809	CompoundStatement		708:0:21523:22229	305807	0					
ANR	305810	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	709:1:21526:21566	305807	0	True				
ANR	305811	IdentifierDecl	* ce = Z_OBJCE_P ( object )		305807	0					
ANR	305812	IdentifierDeclType	zend_class_entry *		305807	0					
ANR	305813	Identifier	ce		305807	1					
ANR	305814	AssignmentExpression	* ce = Z_OBJCE_P ( object )		305807	2		=			
ANR	305815	Identifier	ce		305807	0					
ANR	305816	CallExpression	Z_OBJCE_P ( object )		305807	1					
ANR	305817	Callee	Z_OBJCE_P		305807	0					
ANR	305818	Identifier	Z_OBJCE_P		305807	0					
ANR	305819	ArgumentList	object		305807	1					
ANR	305820	Argument	object		305807	0					
ANR	305821	Identifier	object		305807	0					
ANR	305822	IdentifierDeclStatement	zval tmp ;	710:1:21569:21577	305807	1	True				
ANR	305823	IdentifierDecl	tmp		305807	0					
ANR	305824	IdentifierDeclType	zval		305807	0					
ANR	305825	Identifier	tmp		305807	1					
ANR	305826	IfStatement	"if ( EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 ) )"		305807	2					
ANR	305827	Condition	"EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 )"	712:5:21585:21649	305807	0	True				
ANR	305828	CallExpression	"EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 )"		305807	0					
ANR	305829	Callee	EXPECTED		305807	0					
ANR	305830	Identifier	EXPECTED		305807	0					
ANR	305831	ArgumentList	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		305807	1					
ANR	305832	Argument	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		305807	0					
ANR	305833	EqualityExpression	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		305807	0		!=			
ANR	305834	CallExpression	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 )"		305807	0					
ANR	305835	Callee	instanceof_function_ex		305807	0					
ANR	305836	Identifier	instanceof_function_ex		305807	0					
ANR	305837	ArgumentList	ce		305807	1					
ANR	305838	Argument	ce		305807	0					
ANR	305839	Identifier	ce		305807	0					
ANR	305840	Argument	zend_ce_arrayaccess		305807	1					
ANR	305841	Identifier	zend_ce_arrayaccess		305807	0					
ANR	305842	Argument	1		305807	2					
ANR	305843	PrimaryExpression	1		305807	0					
ANR	305844	PrimaryExpression	0		305807	1					
ANR	305845	CompoundStatement		5:72:128:128	305807	1					
ANR	305846	IfStatement	if ( offset == NULL )		305807	0					
ANR	305847	Condition	offset == NULL	713:5:21659:21672	305807	0	True				
ANR	305848	EqualityExpression	offset == NULL		305807	0		==			
ANR	305849	Identifier	offset		305807	0					
ANR	305850	Identifier	NULL		305807	1					
ANR	305851	CompoundStatement		6:21:151:151	305807	1					
ANR	305852	ExpressionStatement	ZVAL_UNDEF ( & tmp )	715:3:21702:21718	305807	0	True				
ANR	305853	CallExpression	ZVAL_UNDEF ( & tmp )		305807	0					
ANR	305854	Callee	ZVAL_UNDEF		305807	0					
ANR	305855	Identifier	ZVAL_UNDEF		305807	0					
ANR	305856	ArgumentList	& tmp		305807	1					
ANR	305857	Argument	& tmp		305807	0					
ANR	305858	UnaryOperationExpression	& tmp		305807	0					
ANR	305859	UnaryOperator	&		305807	0					
ANR	305860	Identifier	tmp		305807	1					
ANR	305861	ExpressionStatement	offset = & tmp	716:3:21723:21736	305807	1	True				
ANR	305862	AssignmentExpression	offset = & tmp		305807	0		=			
ANR	305863	Identifier	offset		305807	0					
ANR	305864	UnaryOperationExpression	& tmp		305807	1					
ANR	305865	UnaryOperator	&		305807	0					
ANR	305866	Identifier	tmp		305807	1					
ANR	305867	ElseStatement	else		305807	0					
ANR	305868	CompoundStatement		10:9:223:223	305807	0					
ANR	305869	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	718:3:21752:21779	305807	0	True				
ANR	305870	CallExpression	SEPARATE_ARG_IF_REF ( offset )		305807	0					
ANR	305871	Callee	SEPARATE_ARG_IF_REF		305807	0					
ANR	305872	Identifier	SEPARATE_ARG_IF_REF		305807	0					
ANR	305873	ArgumentList	offset		305807	1					
ANR	305874	Argument	offset		305807	0					
ANR	305875	Identifier	offset		305807	0					
ANR	305876	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetget"" , rv , offset )"	720:2:21787:21860	305807	1	True				
ANR	305877	CallExpression	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetget"" , rv , offset )"		305807	0					
ANR	305878	Callee	zend_call_method_with_1_params		305807	0					
ANR	305879	Identifier	zend_call_method_with_1_params		305807	0					
ANR	305880	ArgumentList	object		305807	1					
ANR	305881	Argument	object		305807	0					
ANR	305882	Identifier	object		305807	0					
ANR	305883	Argument	ce		305807	1					
ANR	305884	Identifier	ce		305807	0					
ANR	305885	Argument	NULL		305807	2					
ANR	305886	Identifier	NULL		305807	0					
ANR	305887	Argument	"""offsetget"""		305807	3					
ANR	305888	PrimaryExpression	"""offsetget"""		305807	0					
ANR	305889	Argument	rv		305807	4					
ANR	305890	Identifier	rv		305807	0					
ANR	305891	Argument	offset		305807	5					
ANR	305892	Identifier	offset		305807	0					
ANR	305893	ExpressionStatement	zval_ptr_dtor ( offset )	722:2:21865:21886	305807	2	True				
ANR	305894	CallExpression	zval_ptr_dtor ( offset )		305807	0					
ANR	305895	Callee	zval_ptr_dtor		305807	0					
ANR	305896	Identifier	zval_ptr_dtor		305807	0					
ANR	305897	ArgumentList	offset		305807	1					
ANR	305898	Argument	offset		305807	0					
ANR	305899	Identifier	offset		305807	0					
ANR	305900	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( rv ) == IS_UNDEF ) )		305807	3					
ANR	305901	Condition	UNEXPECTED ( Z_TYPE_P ( rv ) == IS_UNDEF )	724:6:21895:21930	305807	0	True				
ANR	305902	CallExpression	UNEXPECTED ( Z_TYPE_P ( rv ) == IS_UNDEF )		305807	0					
ANR	305903	Callee	UNEXPECTED		305807	0					
ANR	305904	Identifier	UNEXPECTED		305807	0					
ANR	305905	ArgumentList	Z_TYPE_P ( rv ) == IS_UNDEF		305807	1					
ANR	305906	Argument	Z_TYPE_P ( rv ) == IS_UNDEF		305807	0					
ANR	305907	EqualityExpression	Z_TYPE_P ( rv ) == IS_UNDEF		305807	0		==			
ANR	305908	CallExpression	Z_TYPE_P ( rv )		305807	0					
ANR	305909	Callee	Z_TYPE_P		305807	0					
ANR	305910	Identifier	Z_TYPE_P		305807	0					
ANR	305911	ArgumentList	rv		305807	1					
ANR	305912	Argument	rv		305807	0					
ANR	305913	Identifier	rv		305807	0					
ANR	305914	Identifier	IS_UNDEF		305807	1					
ANR	305915	CompoundStatement		17:44:409:409	305807	1					
ANR	305916	IfStatement	if ( UNEXPECTED ( ! EG ( exception ) ) )		305807	0					
ANR	305917	Condition	UNEXPECTED ( ! EG ( exception ) )	725:7:21942:21967	305807	0	True				
ANR	305918	CallExpression	UNEXPECTED ( ! EG ( exception ) )		305807	0					
ANR	305919	Callee	UNEXPECTED		305807	0					
ANR	305920	Identifier	UNEXPECTED		305807	0					
ANR	305921	ArgumentList	! EG ( exception )		305807	1					
ANR	305922	Argument	! EG ( exception )		305807	0					
ANR	305923	UnaryOperationExpression	! EG ( exception )		305807	0					
ANR	305924	UnaryOperator	!		305807	0					
ANR	305925	CallExpression	EG ( exception )		305807	1					
ANR	305926	Callee	EG		305807	0					
ANR	305927	Identifier	EG		305807	0					
ANR	305928	ArgumentList	exception		305807	1					
ANR	305929	Argument	exception		305807	0					
ANR	305930	Identifier	exception		305807	0					
ANR	305931	CompoundStatement		18:35:446:446	305807	1					
ANR	305932	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined offset for object of type %s used as array"" , ZSTR_VAL ( ce -> name ) )"	726:4:21976:22074	305807	0	True				
ANR	305933	CallExpression	"zend_throw_error ( NULL , ""Undefined offset for object of type %s used as array"" , ZSTR_VAL ( ce -> name ) )"		305807	0					
ANR	305934	Callee	zend_throw_error		305807	0					
ANR	305935	Identifier	zend_throw_error		305807	0					
ANR	305936	ArgumentList	NULL		305807	1					
ANR	305937	Argument	NULL		305807	0					
ANR	305938	Identifier	NULL		305807	0					
ANR	305939	Argument	"""Undefined offset for object of type %s used as array"""		305807	1					
ANR	305940	PrimaryExpression	"""Undefined offset for object of type %s used as array"""		305807	0					
ANR	305941	Argument	ZSTR_VAL ( ce -> name )		305807	2					
ANR	305942	CallExpression	ZSTR_VAL ( ce -> name )		305807	0					
ANR	305943	Callee	ZSTR_VAL		305807	0					
ANR	305944	Identifier	ZSTR_VAL		305807	0					
ANR	305945	ArgumentList	ce -> name		305807	1					
ANR	305946	Argument	ce -> name		305807	0					
ANR	305947	PtrMemberAccess	ce -> name		305807	0					
ANR	305948	Identifier	ce		305807	0					
ANR	305949	Identifier	name		305807	1					
ANR	305950	ReturnStatement	return NULL ;	728:3:22084:22095	305807	1	True				
ANR	305951	Identifier	NULL		305807	0					
ANR	305952	ReturnStatement	return rv ;	730:2:22103:22112	305807	4	True				
ANR	305953	Identifier	rv		305807	0					
ANR	305954	ElseStatement	else		305807	0					
ANR	305955	CompoundStatement		24:8:598:598	305807	0					
ANR	305956	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"	732:2:22126:22209	305807	0	True				
ANR	305957	CallExpression	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"		305807	0					
ANR	305958	Callee	zend_throw_error		305807	0					
ANR	305959	Identifier	zend_throw_error		305807	0					
ANR	305960	ArgumentList	NULL		305807	1					
ANR	305961	Argument	NULL		305807	0					
ANR	305962	Identifier	NULL		305807	0					
ANR	305963	Argument	"""Cannot use object of type %s as array"""		305807	1					
ANR	305964	PrimaryExpression	"""Cannot use object of type %s as array"""		305807	0					
ANR	305965	Argument	ZSTR_VAL ( ce -> name )		305807	2					
ANR	305966	CallExpression	ZSTR_VAL ( ce -> name )		305807	0					
ANR	305967	Callee	ZSTR_VAL		305807	0					
ANR	305968	Identifier	ZSTR_VAL		305807	0					
ANR	305969	ArgumentList	ce -> name		305807	1					
ANR	305970	Argument	ce -> name		305807	0					
ANR	305971	PtrMemberAccess	ce -> name		305807	0					
ANR	305972	Identifier	ce		305807	0					
ANR	305973	Identifier	name		305807	1					
ANR	305974	ReturnStatement	return NULL ;	733:2:22213:22224	305807	1	True				
ANR	305975	Identifier	NULL		305807	0					
ANR	305976	ReturnType	zval *		305807	1					
ANR	305977	Identifier	zend_std_read_dimension		305807	2					
ANR	305978	ParameterList	"zval * object , zval * offset , int type , zval * rv"		305807	3					
ANR	305979	Parameter	zval * object	707:30:21465:21476	305807	0	True				
ANR	305980	ParameterType	zval *		305807	0					
ANR	305981	Identifier	object		305807	1					
ANR	305982	Parameter	zval * offset	707:44:21479:21490	305807	1	True				
ANR	305983	ParameterType	zval *		305807	0					
ANR	305984	Identifier	offset		305807	1					
ANR	305985	Parameter	int type	707:58:21493:21500	305807	2	True				
ANR	305986	ParameterType	int		305807	0					
ANR	305987	Identifier	type		305807	1					
ANR	305988	Parameter	zval * rv	707:68:21503:21510	305807	3	True				
ANR	305989	ParameterType	zval *		305807	0					
ANR	305990	Identifier	rv		305807	1					
ANR	305991	CFGEntryNode	ENTRY		305807		True				
ANR	305992	CFGExitNode	EXIT		305807		True				
ANR	305993	Symbol	exception		305807						
ANR	305994	Symbol	ce		305807						
ANR	305995	Symbol	EG		305807						
ANR	305996	Symbol	NULL		305807						
ANR	305997	Symbol	offset		305807						
ANR	305998	Symbol	rv		305807						
ANR	305999	Symbol	* ce		305807						
ANR	306000	Symbol	type		305807						
ANR	306001	Symbol	Z_TYPE_P		305807						
ANR	306002	Symbol	ZSTR_VAL		305807						
ANR	306003	Symbol	UNEXPECTED		305807						
ANR	306004	Symbol	tmp		305807						
ANR	306005	Symbol	zend_ce_arrayaccess		305807						
ANR	306006	Symbol	Z_OBJCE_P		305807						
ANR	306007	Symbol	instanceof_function_ex		305807						
ANR	306008	Symbol	& tmp		305807						
ANR	306009	Symbol	ce -> name		305807						
ANR	306010	Symbol	EXPECTED		305807						
ANR	306011	Symbol	IS_UNDEF		305807						
ANR	306012	Symbol	object		305807						
ANR	306013	Function	zend_std_write_dimension	738:0:22242:22774							
ANR	306014	FunctionDef	"zend_std_write_dimension (zval * object , zval * offset , zval * value)"		306013	0					
ANR	306015	CompoundStatement		739:0:22330:22774	306013	0					
ANR	306016	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	740:1:22333:22373	306013	0	True				
ANR	306017	IdentifierDecl	* ce = Z_OBJCE_P ( object )		306013	0					
ANR	306018	IdentifierDeclType	zend_class_entry *		306013	0					
ANR	306019	Identifier	ce		306013	1					
ANR	306020	AssignmentExpression	* ce = Z_OBJCE_P ( object )		306013	2		=			
ANR	306021	Identifier	ce		306013	0					
ANR	306022	CallExpression	Z_OBJCE_P ( object )		306013	1					
ANR	306023	Callee	Z_OBJCE_P		306013	0					
ANR	306024	Identifier	Z_OBJCE_P		306013	0					
ANR	306025	ArgumentList	object		306013	1					
ANR	306026	Argument	object		306013	0					
ANR	306027	Identifier	object		306013	0					
ANR	306028	IdentifierDeclStatement	zval tmp ;	741:1:22376:22384	306013	1	True				
ANR	306029	IdentifierDecl	tmp		306013	0					
ANR	306030	IdentifierDeclType	zval		306013	0					
ANR	306031	Identifier	tmp		306013	1					
ANR	306032	IfStatement	"if ( EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 ) )"		306013	2					
ANR	306033	Condition	"EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 )"	743:5:22392:22456	306013	0	True				
ANR	306034	CallExpression	"EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 )"		306013	0					
ANR	306035	Callee	EXPECTED		306013	0					
ANR	306036	Identifier	EXPECTED		306013	0					
ANR	306037	ArgumentList	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		306013	1					
ANR	306038	Argument	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		306013	0					
ANR	306039	EqualityExpression	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		306013	0		!=			
ANR	306040	CallExpression	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 )"		306013	0					
ANR	306041	Callee	instanceof_function_ex		306013	0					
ANR	306042	Identifier	instanceof_function_ex		306013	0					
ANR	306043	ArgumentList	ce		306013	1					
ANR	306044	Argument	ce		306013	0					
ANR	306045	Identifier	ce		306013	0					
ANR	306046	Argument	zend_ce_arrayaccess		306013	1					
ANR	306047	Identifier	zend_ce_arrayaccess		306013	0					
ANR	306048	Argument	1		306013	2					
ANR	306049	PrimaryExpression	1		306013	0					
ANR	306050	PrimaryExpression	0		306013	1					
ANR	306051	CompoundStatement		5:72:128:128	306013	1					
ANR	306052	IfStatement	if ( ! offset )		306013	0					
ANR	306053	Condition	! offset	744:6:22467:22473	306013	0	True				
ANR	306054	UnaryOperationExpression	! offset		306013	0					
ANR	306055	UnaryOperator	!		306013	0					
ANR	306056	Identifier	offset		306013	1					
ANR	306057	CompoundStatement		6:15:145:145	306013	1					
ANR	306058	ExpressionStatement	ZVAL_NULL ( & tmp )	745:3:22481:22496	306013	0	True				
ANR	306059	CallExpression	ZVAL_NULL ( & tmp )		306013	0					
ANR	306060	Callee	ZVAL_NULL		306013	0					
ANR	306061	Identifier	ZVAL_NULL		306013	0					
ANR	306062	ArgumentList	& tmp		306013	1					
ANR	306063	Argument	& tmp		306013	0					
ANR	306064	UnaryOperationExpression	& tmp		306013	0					
ANR	306065	UnaryOperator	&		306013	0					
ANR	306066	Identifier	tmp		306013	1					
ANR	306067	ExpressionStatement	offset = & tmp	746:3:22501:22514	306013	1	True				
ANR	306068	AssignmentExpression	offset = & tmp		306013	0		=			
ANR	306069	Identifier	offset		306013	0					
ANR	306070	UnaryOperationExpression	& tmp		306013	1					
ANR	306071	UnaryOperator	&		306013	0					
ANR	306072	Identifier	tmp		306013	1					
ANR	306073	ElseStatement	else		306013	0					
ANR	306074	CompoundStatement		9:9:194:194	306013	0					
ANR	306075	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	748:3:22530:22557	306013	0	True				
ANR	306076	CallExpression	SEPARATE_ARG_IF_REF ( offset )		306013	0					
ANR	306077	Callee	SEPARATE_ARG_IF_REF		306013	0					
ANR	306078	Identifier	SEPARATE_ARG_IF_REF		306013	0					
ANR	306079	ArgumentList	offset		306013	1					
ANR	306080	Argument	offset		306013	0					
ANR	306081	Identifier	offset		306013	0					
ANR	306082	ExpressionStatement	"zend_call_method_with_2_params ( object , ce , NULL , ""offsetset"" , NULL , offset , value )"	750:2:22565:22647	306013	1	True				
ANR	306083	CallExpression	"zend_call_method_with_2_params ( object , ce , NULL , ""offsetset"" , NULL , offset , value )"		306013	0					
ANR	306084	Callee	zend_call_method_with_2_params		306013	0					
ANR	306085	Identifier	zend_call_method_with_2_params		306013	0					
ANR	306086	ArgumentList	object		306013	1					
ANR	306087	Argument	object		306013	0					
ANR	306088	Identifier	object		306013	0					
ANR	306089	Argument	ce		306013	1					
ANR	306090	Identifier	ce		306013	0					
ANR	306091	Argument	NULL		306013	2					
ANR	306092	Identifier	NULL		306013	0					
ANR	306093	Argument	"""offsetset"""		306013	3					
ANR	306094	PrimaryExpression	"""offsetset"""		306013	0					
ANR	306095	Argument	NULL		306013	4					
ANR	306096	Identifier	NULL		306013	0					
ANR	306097	Argument	offset		306013	5					
ANR	306098	Identifier	offset		306013	0					
ANR	306099	Argument	value		306013	6					
ANR	306100	Identifier	value		306013	0					
ANR	306101	ExpressionStatement	zval_ptr_dtor ( offset )	751:2:22651:22672	306013	2	True				
ANR	306102	CallExpression	zval_ptr_dtor ( offset )		306013	0					
ANR	306103	Callee	zval_ptr_dtor		306013	0					
ANR	306104	Identifier	zval_ptr_dtor		306013	0					
ANR	306105	ArgumentList	offset		306013	1					
ANR	306106	Argument	offset		306013	0					
ANR	306107	Identifier	offset		306013	0					
ANR	306108	ElseStatement	else		306013	0					
ANR	306109	CompoundStatement		14:8:351:351	306013	0					
ANR	306110	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"	753:2:22686:22769	306013	0	True				
ANR	306111	CallExpression	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"		306013	0					
ANR	306112	Callee	zend_throw_error		306013	0					
ANR	306113	Identifier	zend_throw_error		306013	0					
ANR	306114	ArgumentList	NULL		306013	1					
ANR	306115	Argument	NULL		306013	0					
ANR	306116	Identifier	NULL		306013	0					
ANR	306117	Argument	"""Cannot use object of type %s as array"""		306013	1					
ANR	306118	PrimaryExpression	"""Cannot use object of type %s as array"""		306013	0					
ANR	306119	Argument	ZSTR_VAL ( ce -> name )		306013	2					
ANR	306120	CallExpression	ZSTR_VAL ( ce -> name )		306013	0					
ANR	306121	Callee	ZSTR_VAL		306013	0					
ANR	306122	Identifier	ZSTR_VAL		306013	0					
ANR	306123	ArgumentList	ce -> name		306013	1					
ANR	306124	Argument	ce -> name		306013	0					
ANR	306125	PtrMemberAccess	ce -> name		306013	0					
ANR	306126	Identifier	ce		306013	0					
ANR	306127	Identifier	name		306013	1					
ANR	306128	ReturnType	static void		306013	1					
ANR	306129	Identifier	zend_std_write_dimension		306013	2					
ANR	306130	ParameterList	"zval * object , zval * offset , zval * value"		306013	3					
ANR	306131	Parameter	zval * object	738:37:22279:22290	306013	0	True				
ANR	306132	ParameterType	zval *		306013	0					
ANR	306133	Identifier	object		306013	1					
ANR	306134	Parameter	zval * offset	738:51:22293:22304	306013	1	True				
ANR	306135	ParameterType	zval *		306013	0					
ANR	306136	Identifier	offset		306013	1					
ANR	306137	Parameter	zval * value	738:65:22307:22317	306013	2	True				
ANR	306138	ParameterType	zval *		306013	0					
ANR	306139	Identifier	value		306013	1					
ANR	306140	CFGEntryNode	ENTRY		306013		True				
ANR	306141	CFGExitNode	EXIT		306013		True				
ANR	306142	Symbol	ce		306013						
ANR	306143	Symbol	NULL		306013						
ANR	306144	Symbol	offset		306013						
ANR	306145	Symbol	* ce		306013						
ANR	306146	Symbol	ZSTR_VAL		306013						
ANR	306147	Symbol	tmp		306013						
ANR	306148	Symbol	zend_ce_arrayaccess		306013						
ANR	306149	Symbol	Z_OBJCE_P		306013						
ANR	306150	Symbol	instanceof_function_ex		306013						
ANR	306151	Symbol	& tmp		306013						
ANR	306152	Symbol	ce -> name		306013						
ANR	306153	Symbol	value		306013						
ANR	306154	Symbol	EXPECTED		306013						
ANR	306155	Symbol	object		306013						
ANR	306156	Function	zend_std_has_dimension	758:0:22787:23703							
ANR	306157	FunctionDef	"zend_std_has_dimension (zval * object , zval * offset , int check_empty)"		306156	0					
ANR	306158	CompoundStatement		759:0:22876:23703	306156	0					
ANR	306159	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	760:1:22879:22919	306156	0	True				
ANR	306160	IdentifierDecl	* ce = Z_OBJCE_P ( object )		306156	0					
ANR	306161	IdentifierDeclType	zend_class_entry *		306156	0					
ANR	306162	Identifier	ce		306156	1					
ANR	306163	AssignmentExpression	* ce = Z_OBJCE_P ( object )		306156	2		=			
ANR	306164	Identifier	ce		306156	0					
ANR	306165	CallExpression	Z_OBJCE_P ( object )		306156	1					
ANR	306166	Callee	Z_OBJCE_P		306156	0					
ANR	306167	Identifier	Z_OBJCE_P		306156	0					
ANR	306168	ArgumentList	object		306156	1					
ANR	306169	Argument	object		306156	0					
ANR	306170	Identifier	object		306156	0					
ANR	306171	IdentifierDeclStatement	zval retval ;	761:1:22922:22933	306156	1	True				
ANR	306172	IdentifierDecl	retval		306156	0					
ANR	306173	IdentifierDeclType	zval		306156	0					
ANR	306174	Identifier	retval		306156	1					
ANR	306175	IdentifierDeclStatement	int result ;	762:1:22936:22946	306156	2	True				
ANR	306176	IdentifierDecl	result		306156	0					
ANR	306177	IdentifierDeclType	int		306156	0					
ANR	306178	Identifier	result		306156	1					
ANR	306179	IfStatement	"if ( EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 ) )"		306156	3					
ANR	306180	Condition	"EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 )"	764:5:22954:23018	306156	0	True				
ANR	306181	CallExpression	"EXPECTED ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0 )"		306156	0					
ANR	306182	Callee	EXPECTED		306156	0					
ANR	306183	Identifier	EXPECTED		306156	0					
ANR	306184	ArgumentList	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		306156	1					
ANR	306185	Argument	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		306156	0					
ANR	306186	EqualityExpression	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) != 0"		306156	0		!=			
ANR	306187	CallExpression	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 )"		306156	0					
ANR	306188	Callee	instanceof_function_ex		306156	0					
ANR	306189	Identifier	instanceof_function_ex		306156	0					
ANR	306190	ArgumentList	ce		306156	1					
ANR	306191	Argument	ce		306156	0					
ANR	306192	Identifier	ce		306156	0					
ANR	306193	Argument	zend_ce_arrayaccess		306156	1					
ANR	306194	Identifier	zend_ce_arrayaccess		306156	0					
ANR	306195	Argument	1		306156	2					
ANR	306196	PrimaryExpression	1		306156	0					
ANR	306197	PrimaryExpression	0		306156	1					
ANR	306198	CompoundStatement		6:72:144:144	306156	1					
ANR	306199	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	765:2:23025:23052	306156	0	True				
ANR	306200	CallExpression	SEPARATE_ARG_IF_REF ( offset )		306156	0					
ANR	306201	Callee	SEPARATE_ARG_IF_REF		306156	0					
ANR	306202	Identifier	SEPARATE_ARG_IF_REF		306156	0					
ANR	306203	ArgumentList	offset		306156	1					
ANR	306204	Argument	offset		306156	0					
ANR	306205	Identifier	offset		306156	0					
ANR	306206	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetexists"" , & retval , offset )"	766:2:23056:23137	306156	1	True				
ANR	306207	CallExpression	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetexists"" , & retval , offset )"		306156	0					
ANR	306208	Callee	zend_call_method_with_1_params		306156	0					
ANR	306209	Identifier	zend_call_method_with_1_params		306156	0					
ANR	306210	ArgumentList	object		306156	1					
ANR	306211	Argument	object		306156	0					
ANR	306212	Identifier	object		306156	0					
ANR	306213	Argument	ce		306156	1					
ANR	306214	Identifier	ce		306156	0					
ANR	306215	Argument	NULL		306156	2					
ANR	306216	Identifier	NULL		306156	0					
ANR	306217	Argument	"""offsetexists"""		306156	3					
ANR	306218	PrimaryExpression	"""offsetexists"""		306156	0					
ANR	306219	Argument	& retval		306156	4					
ANR	306220	UnaryOperationExpression	& retval		306156	0					
ANR	306221	UnaryOperator	&		306156	0					
ANR	306222	Identifier	retval		306156	1					
ANR	306223	Argument	offset		306156	5					
ANR	306224	Identifier	offset		306156	0					
ANR	306225	IfStatement	if ( EXPECTED ( Z_TYPE ( retval ) != IS_UNDEF ) )		306156	2					
ANR	306226	Condition	EXPECTED ( Z_TYPE ( retval ) != IS_UNDEF )	767:6:23145:23180	306156	0	True				
ANR	306227	CallExpression	EXPECTED ( Z_TYPE ( retval ) != IS_UNDEF )		306156	0					
ANR	306228	Callee	EXPECTED		306156	0					
ANR	306229	Identifier	EXPECTED		306156	0					
ANR	306230	ArgumentList	Z_TYPE ( retval ) != IS_UNDEF		306156	1					
ANR	306231	Argument	Z_TYPE ( retval ) != IS_UNDEF		306156	0					
ANR	306232	EqualityExpression	Z_TYPE ( retval ) != IS_UNDEF		306156	0		!=			
ANR	306233	CallExpression	Z_TYPE ( retval )		306156	0					
ANR	306234	Callee	Z_TYPE		306156	0					
ANR	306235	Identifier	Z_TYPE		306156	0					
ANR	306236	ArgumentList	retval		306156	1					
ANR	306237	Argument	retval		306156	0					
ANR	306238	Identifier	retval		306156	0					
ANR	306239	Identifier	IS_UNDEF		306156	1					
ANR	306240	CompoundStatement		9:44:306:306	306156	1					
ANR	306241	ExpressionStatement	result = i_zend_is_true ( & retval )	768:3:23188:23220	306156	0	True				
ANR	306242	AssignmentExpression	result = i_zend_is_true ( & retval )		306156	0		=			
ANR	306243	Identifier	result		306156	0					
ANR	306244	CallExpression	i_zend_is_true ( & retval )		306156	1					
ANR	306245	Callee	i_zend_is_true		306156	0					
ANR	306246	Identifier	i_zend_is_true		306156	0					
ANR	306247	ArgumentList	& retval		306156	1					
ANR	306248	Argument	& retval		306156	0					
ANR	306249	UnaryOperationExpression	& retval		306156	0					
ANR	306250	UnaryOperator	&		306156	0					
ANR	306251	Identifier	retval		306156	1					
ANR	306252	ExpressionStatement	zval_ptr_dtor ( & retval )	769:3:23225:23247	306156	1	True				
ANR	306253	CallExpression	zval_ptr_dtor ( & retval )		306156	0					
ANR	306254	Callee	zval_ptr_dtor		306156	0					
ANR	306255	Identifier	zval_ptr_dtor		306156	0					
ANR	306256	ArgumentList	& retval		306156	1					
ANR	306257	Argument	& retval		306156	0					
ANR	306258	UnaryOperationExpression	& retval		306156	0					
ANR	306259	UnaryOperator	&		306156	0					
ANR	306260	Identifier	retval		306156	1					
ANR	306261	IfStatement	if ( check_empty && result && EXPECTED ( ! EG ( exception ) ) )		306156	2					
ANR	306262	Condition	check_empty && result && EXPECTED ( ! EG ( exception ) )	770:7:23256:23304	306156	0	True				
ANR	306263	AndExpression	check_empty && result && EXPECTED ( ! EG ( exception ) )		306156	0		&&			
ANR	306264	Identifier	check_empty		306156	0					
ANR	306265	AndExpression	result && EXPECTED ( ! EG ( exception ) )		306156	1		&&			
ANR	306266	Identifier	result		306156	0					
ANR	306267	CallExpression	EXPECTED ( ! EG ( exception ) )		306156	1					
ANR	306268	Callee	EXPECTED		306156	0					
ANR	306269	Identifier	EXPECTED		306156	0					
ANR	306270	ArgumentList	! EG ( exception )		306156	1					
ANR	306271	Argument	! EG ( exception )		306156	0					
ANR	306272	UnaryOperationExpression	! EG ( exception )		306156	0					
ANR	306273	UnaryOperator	!		306156	0					
ANR	306274	CallExpression	EG ( exception )		306156	1					
ANR	306275	Callee	EG		306156	0					
ANR	306276	Identifier	EG		306156	0					
ANR	306277	ArgumentList	exception		306156	1					
ANR	306278	Argument	exception		306156	0					
ANR	306279	Identifier	exception		306156	0					
ANR	306280	CompoundStatement		12:58:430:430	306156	1					
ANR	306281	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetget"" , & retval , offset )"	771:4:23313:23391	306156	0	True				
ANR	306282	CallExpression	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetget"" , & retval , offset )"		306156	0					
ANR	306283	Callee	zend_call_method_with_1_params		306156	0					
ANR	306284	Identifier	zend_call_method_with_1_params		306156	0					
ANR	306285	ArgumentList	object		306156	1					
ANR	306286	Argument	object		306156	0					
ANR	306287	Identifier	object		306156	0					
ANR	306288	Argument	ce		306156	1					
ANR	306289	Identifier	ce		306156	0					
ANR	306290	Argument	NULL		306156	2					
ANR	306291	Identifier	NULL		306156	0					
ANR	306292	Argument	"""offsetget"""		306156	3					
ANR	306293	PrimaryExpression	"""offsetget"""		306156	0					
ANR	306294	Argument	& retval		306156	4					
ANR	306295	UnaryOperationExpression	& retval		306156	0					
ANR	306296	UnaryOperator	&		306156	0					
ANR	306297	Identifier	retval		306156	1					
ANR	306298	Argument	offset		306156	5					
ANR	306299	Identifier	offset		306156	0					
ANR	306300	IfStatement	if ( EXPECTED ( Z_TYPE ( retval ) != IS_UNDEF ) )		306156	1					
ANR	306301	Condition	EXPECTED ( Z_TYPE ( retval ) != IS_UNDEF )	772:8:23401:23436	306156	0	True				
ANR	306302	CallExpression	EXPECTED ( Z_TYPE ( retval ) != IS_UNDEF )		306156	0					
ANR	306303	Callee	EXPECTED		306156	0					
ANR	306304	Identifier	EXPECTED		306156	0					
ANR	306305	ArgumentList	Z_TYPE ( retval ) != IS_UNDEF		306156	1					
ANR	306306	Argument	Z_TYPE ( retval ) != IS_UNDEF		306156	0					
ANR	306307	EqualityExpression	Z_TYPE ( retval ) != IS_UNDEF		306156	0		!=			
ANR	306308	CallExpression	Z_TYPE ( retval )		306156	0					
ANR	306309	Callee	Z_TYPE		306156	0					
ANR	306310	Identifier	Z_TYPE		306156	0					
ANR	306311	ArgumentList	retval		306156	1					
ANR	306312	Argument	retval		306156	0					
ANR	306313	Identifier	retval		306156	0					
ANR	306314	Identifier	IS_UNDEF		306156	1					
ANR	306315	CompoundStatement		14:46:562:562	306156	1					
ANR	306316	ExpressionStatement	result = i_zend_is_true ( & retval )	773:5:23446:23478	306156	0	True				
ANR	306317	AssignmentExpression	result = i_zend_is_true ( & retval )		306156	0		=			
ANR	306318	Identifier	result		306156	0					
ANR	306319	CallExpression	i_zend_is_true ( & retval )		306156	1					
ANR	306320	Callee	i_zend_is_true		306156	0					
ANR	306321	Identifier	i_zend_is_true		306156	0					
ANR	306322	ArgumentList	& retval		306156	1					
ANR	306323	Argument	& retval		306156	0					
ANR	306324	UnaryOperationExpression	& retval		306156	0					
ANR	306325	UnaryOperator	&		306156	0					
ANR	306326	Identifier	retval		306156	1					
ANR	306327	ExpressionStatement	zval_ptr_dtor ( & retval )	774:5:23485:23507	306156	1	True				
ANR	306328	CallExpression	zval_ptr_dtor ( & retval )		306156	0					
ANR	306329	Callee	zval_ptr_dtor		306156	0					
ANR	306330	Identifier	zval_ptr_dtor		306156	0					
ANR	306331	ArgumentList	& retval		306156	1					
ANR	306332	Argument	& retval		306156	0					
ANR	306333	UnaryOperationExpression	& retval		306156	0					
ANR	306334	UnaryOperator	&		306156	0					
ANR	306335	Identifier	retval		306156	1					
ANR	306336	ElseStatement	else		306156	0					
ANR	306337	CompoundStatement		19:9:652:652	306156	0					
ANR	306338	ExpressionStatement	result = 0	778:3:23534:23544	306156	0	True				
ANR	306339	AssignmentExpression	result = 0		306156	0		=			
ANR	306340	Identifier	result		306156	0					
ANR	306341	PrimaryExpression	0		306156	1					
ANR	306342	ExpressionStatement	zval_ptr_dtor ( offset )	780:2:23552:23573	306156	3	True				
ANR	306343	CallExpression	zval_ptr_dtor ( offset )		306156	0					
ANR	306344	Callee	zval_ptr_dtor		306156	0					
ANR	306345	Identifier	zval_ptr_dtor		306156	0					
ANR	306346	ArgumentList	offset		306156	1					
ANR	306347	Argument	offset		306156	0					
ANR	306348	Identifier	offset		306156	0					
ANR	306349	ElseStatement	else		306156	0					
ANR	306350	CompoundStatement		23:8:706:706	306156	0					
ANR	306351	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"	782:2:23587:23670	306156	0	True				
ANR	306352	CallExpression	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"		306156	0					
ANR	306353	Callee	zend_throw_error		306156	0					
ANR	306354	Identifier	zend_throw_error		306156	0					
ANR	306355	ArgumentList	NULL		306156	1					
ANR	306356	Argument	NULL		306156	0					
ANR	306357	Identifier	NULL		306156	0					
ANR	306358	Argument	"""Cannot use object of type %s as array"""		306156	1					
ANR	306359	PrimaryExpression	"""Cannot use object of type %s as array"""		306156	0					
ANR	306360	Argument	ZSTR_VAL ( ce -> name )		306156	2					
ANR	306361	CallExpression	ZSTR_VAL ( ce -> name )		306156	0					
ANR	306362	Callee	ZSTR_VAL		306156	0					
ANR	306363	Identifier	ZSTR_VAL		306156	0					
ANR	306364	ArgumentList	ce -> name		306156	1					
ANR	306365	Argument	ce -> name		306156	0					
ANR	306366	PtrMemberAccess	ce -> name		306156	0					
ANR	306367	Identifier	ce		306156	0					
ANR	306368	Identifier	name		306156	1					
ANR	306369	ReturnStatement	return 0 ;	783:2:23674:23682	306156	1	True				
ANR	306370	PrimaryExpression	0		306156	0					
ANR	306371	ReturnStatement	return result ;	785:1:23688:23701	306156	4	True				
ANR	306372	Identifier	result		306156	0					
ANR	306373	ReturnType	static int		306156	1					
ANR	306374	Identifier	zend_std_has_dimension		306156	2					
ANR	306375	ParameterList	"zval * object , zval * offset , int check_empty"		306156	3					
ANR	306376	Parameter	zval * object	758:34:22821:22832	306156	0	True				
ANR	306377	ParameterType	zval *		306156	0					
ANR	306378	Identifier	object		306156	1					
ANR	306379	Parameter	zval * offset	758:48:22835:22846	306156	1	True				
ANR	306380	ParameterType	zval *		306156	0					
ANR	306381	Identifier	offset		306156	1					
ANR	306382	Parameter	int check_empty	758:62:22849:22863	306156	2	True				
ANR	306383	ParameterType	int		306156	0					
ANR	306384	Identifier	check_empty		306156	1					
ANR	306385	CFGEntryNode	ENTRY		306156		True				
ANR	306386	CFGExitNode	EXIT		306156		True				
ANR	306387	Symbol	exception		306156						
ANR	306388	Symbol	check_empty		306156						
ANR	306389	Symbol	ce		306156						
ANR	306390	Symbol	EG		306156						
ANR	306391	Symbol	NULL		306156						
ANR	306392	Symbol	offset		306156						
ANR	306393	Symbol	Z_TYPE		306156						
ANR	306394	Symbol	i_zend_is_true		306156						
ANR	306395	Symbol	* ce		306156						
ANR	306396	Symbol	retval		306156						
ANR	306397	Symbol	ZSTR_VAL		306156						
ANR	306398	Symbol	result		306156						
ANR	306399	Symbol	zend_ce_arrayaccess		306156						
ANR	306400	Symbol	Z_OBJCE_P		306156						
ANR	306401	Symbol	instanceof_function_ex		306156						
ANR	306402	Symbol	& retval		306156						
ANR	306403	Symbol	ce -> name		306156						
ANR	306404	Symbol	EXPECTED		306156						
ANR	306405	Symbol	IS_UNDEF		306156						
ANR	306406	Symbol	object		306156						
ANR	306407	Function	zend_std_get_property_ptr_ptr	789:0:23716:26263							
ANR	306408	FunctionDef	"zend_std_get_property_ptr_ptr (zval * object , zval * member , int type , void * * cache_slot)"		306407	0					
ANR	306409	CompoundStatement		790:0:23826:26263	306407	0					
ANR	306410	IdentifierDeclStatement	zend_object * zobj ;	791:1:23829:23846	306407	0	True				
ANR	306411	IdentifierDecl	* zobj		306407	0					
ANR	306412	IdentifierDeclType	zend_object *		306407	0					
ANR	306413	Identifier	zobj		306407	1					
ANR	306414	IdentifierDeclStatement	zend_string * name ;	792:1:23849:23866	306407	1	True				
ANR	306415	IdentifierDecl	* name		306407	0					
ANR	306416	IdentifierDeclType	zend_string *		306407	0					
ANR	306417	Identifier	name		306407	1					
ANR	306418	IdentifierDeclStatement	zval * retval = NULL ;	793:1:23869:23888	306407	2	True				
ANR	306419	IdentifierDecl	* retval = NULL		306407	0					
ANR	306420	IdentifierDeclType	zval *		306407	0					
ANR	306421	Identifier	retval		306407	1					
ANR	306422	AssignmentExpression	* retval = NULL		306407	2		=			
ANR	306423	Identifier	NULL		306407	0					
ANR	306424	Identifier	NULL		306407	1					
ANR	306425	IdentifierDeclStatement	uint32_t property_offset ;	794:1:23891:23915	306407	3	True				
ANR	306426	IdentifierDecl	property_offset		306407	0					
ANR	306427	IdentifierDeclType	uint32_t		306407	0					
ANR	306428	Identifier	property_offset		306407	1					
ANR	306429	ExpressionStatement	zobj = Z_OBJ_P ( object )	796:1:23919:23941	306407	4	True				
ANR	306430	AssignmentExpression	zobj = Z_OBJ_P ( object )		306407	0		=			
ANR	306431	Identifier	zobj		306407	0					
ANR	306432	CallExpression	Z_OBJ_P ( object )		306407	1					
ANR	306433	Callee	Z_OBJ_P		306407	0					
ANR	306434	Identifier	Z_OBJ_P		306407	0					
ANR	306435	ArgumentList	object		306407	1					
ANR	306436	Argument	object		306407	0					
ANR	306437	Identifier	object		306407	0					
ANR	306438	IfStatement	if ( EXPECTED ( Z_TYPE_P ( member ) == IS_STRING ) )		306407	5					
ANR	306439	Condition	EXPECTED ( Z_TYPE_P ( member ) == IS_STRING )	797:5:23948:23986	306407	0	True				
ANR	306440	CallExpression	EXPECTED ( Z_TYPE_P ( member ) == IS_STRING )		306407	0					
ANR	306441	Callee	EXPECTED		306407	0					
ANR	306442	Identifier	EXPECTED		306407	0					
ANR	306443	ArgumentList	Z_TYPE_P ( member ) == IS_STRING		306407	1					
ANR	306444	Argument	Z_TYPE_P ( member ) == IS_STRING		306407	0					
ANR	306445	EqualityExpression	Z_TYPE_P ( member ) == IS_STRING		306407	0		==			
ANR	306446	CallExpression	Z_TYPE_P ( member )		306407	0					
ANR	306447	Callee	Z_TYPE_P		306407	0					
ANR	306448	Identifier	Z_TYPE_P		306407	0					
ANR	306449	ArgumentList	member		306407	1					
ANR	306450	Argument	member		306407	0					
ANR	306451	Identifier	member		306407	0					
ANR	306452	Identifier	IS_STRING		306407	1					
ANR	306453	CompoundStatement		8:46:162:162	306407	1					
ANR	306454	ExpressionStatement	name = Z_STR_P ( member )	798:2:23993:24015	306407	0	True				
ANR	306455	AssignmentExpression	name = Z_STR_P ( member )		306407	0		=			
ANR	306456	Identifier	name		306407	0					
ANR	306457	CallExpression	Z_STR_P ( member )		306407	1					
ANR	306458	Callee	Z_STR_P		306407	0					
ANR	306459	Identifier	Z_STR_P		306407	0					
ANR	306460	ArgumentList	member		306407	1					
ANR	306461	Argument	member		306407	0					
ANR	306462	Identifier	member		306407	0					
ANR	306463	ElseStatement	else		306407	0					
ANR	306464	CompoundStatement		10:8:198:198	306407	0					
ANR	306465	ExpressionStatement	name = zval_get_string ( member )	800:2:24029:24059	306407	0	True				
ANR	306466	AssignmentExpression	name = zval_get_string ( member )		306407	0		=			
ANR	306467	Identifier	name		306407	0					
ANR	306468	CallExpression	zval_get_string ( member )		306407	1					
ANR	306469	Callee	zval_get_string		306407	0					
ANR	306470	Identifier	zval_get_string		306407	0					
ANR	306471	ArgumentList	member		306407	1					
ANR	306472	Argument	member		306407	0					
ANR	306473	Identifier	member		306407	0					
ANR	306474	ExpressionStatement	"fprintf ( stderr , ""Ptr object #%d property: %s\\n"" , Z_OBJ_HANDLE_P ( object ) , ZSTR_VAL ( name ) )"	804:1:24092:24180	306407	6	True				
ANR	306475	CallExpression	"fprintf ( stderr , ""Ptr object #%d property: %s\\n"" , Z_OBJ_HANDLE_P ( object ) , ZSTR_VAL ( name ) )"		306407	0					
ANR	306476	Callee	fprintf		306407	0					
ANR	306477	Identifier	fprintf		306407	0					
ANR	306478	ArgumentList	stderr		306407	1					
ANR	306479	Argument	stderr		306407	0					
ANR	306480	Identifier	stderr		306407	0					
ANR	306481	Argument	"""Ptr object #%d property: %s\\n"""		306407	1					
ANR	306482	PrimaryExpression	"""Ptr object #%d property: %s\\n"""		306407	0					
ANR	306483	Argument	Z_OBJ_HANDLE_P ( object )		306407	2					
ANR	306484	CallExpression	Z_OBJ_HANDLE_P ( object )		306407	0					
ANR	306485	Callee	Z_OBJ_HANDLE_P		306407	0					
ANR	306486	Identifier	Z_OBJ_HANDLE_P		306407	0					
ANR	306487	ArgumentList	object		306407	1					
ANR	306488	Argument	object		306407	0					
ANR	306489	Identifier	object		306407	0					
ANR	306490	Argument	ZSTR_VAL ( name )		306407	3					
ANR	306491	CallExpression	ZSTR_VAL ( name )		306407	0					
ANR	306492	Callee	ZSTR_VAL		306407	0					
ANR	306493	Identifier	ZSTR_VAL		306407	0					
ANR	306494	ArgumentList	name		306407	1					
ANR	306495	Argument	name		306407	0					
ANR	306496	Identifier	name		306407	0					
ANR	306497	ExpressionStatement	"property_offset = zend_get_property_offset ( zobj -> ce , name , ( zobj -> ce -> __get != NULL ) , cache_slot )"	807:1:24191:24288	306407	7	True				
ANR	306498	AssignmentExpression	"property_offset = zend_get_property_offset ( zobj -> ce , name , ( zobj -> ce -> __get != NULL ) , cache_slot )"		306407	0		=			
ANR	306499	Identifier	property_offset		306407	0					
ANR	306500	CallExpression	"zend_get_property_offset ( zobj -> ce , name , ( zobj -> ce -> __get != NULL ) , cache_slot )"		306407	1					
ANR	306501	Callee	zend_get_property_offset		306407	0					
ANR	306502	Identifier	zend_get_property_offset		306407	0					
ANR	306503	ArgumentList	zobj -> ce		306407	1					
ANR	306504	Argument	zobj -> ce		306407	0					
ANR	306505	PtrMemberAccess	zobj -> ce		306407	0					
ANR	306506	Identifier	zobj		306407	0					
ANR	306507	Identifier	ce		306407	1					
ANR	306508	Argument	name		306407	1					
ANR	306509	Identifier	name		306407	0					
ANR	306510	Argument	zobj -> ce -> __get != NULL		306407	2					
ANR	306511	EqualityExpression	zobj -> ce -> __get != NULL		306407	0		!=			
ANR	306512	PtrMemberAccess	zobj -> ce -> __get		306407	0					
ANR	306513	PtrMemberAccess	zobj -> ce		306407	0					
ANR	306514	Identifier	zobj		306407	0					
ANR	306515	Identifier	ce		306407	1					
ANR	306516	Identifier	__get		306407	1					
ANR	306517	Identifier	NULL		306407	1					
ANR	306518	Argument	cache_slot		306407	3					
ANR	306519	Identifier	cache_slot		306407	0					
ANR	306520	IfStatement	if ( EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET ) )		306407	8					
ANR	306521	Condition	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )	809:5:24296:24350	306407	0	True				
ANR	306522	CallExpression	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )		306407	0					
ANR	306523	Callee	EXPECTED		306407	0					
ANR	306524	Identifier	EXPECTED		306407	0					
ANR	306525	ArgumentList	property_offset != ZEND_WRONG_PROPERTY_OFFSET		306407	1					
ANR	306526	Argument	property_offset != ZEND_WRONG_PROPERTY_OFFSET		306407	0					
ANR	306527	EqualityExpression	property_offset != ZEND_WRONG_PROPERTY_OFFSET		306407	0		!=			
ANR	306528	Identifier	property_offset		306407	0					
ANR	306529	Identifier	ZEND_WRONG_PROPERTY_OFFSET		306407	1					
ANR	306530	CompoundStatement		20:62:526:526	306407	1					
ANR	306531	IfStatement	if ( EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET ) )		306407	0					
ANR	306532	Condition	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )	810:6:24361:24417	306407	0	True				
ANR	306533	CallExpression	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )		306407	0					
ANR	306534	Callee	EXPECTED		306407	0					
ANR	306535	Identifier	EXPECTED		306407	0					
ANR	306536	ArgumentList	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		306407	1					
ANR	306537	Argument	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		306407	0					
ANR	306538	EqualityExpression	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		306407	0		!=			
ANR	306539	Identifier	property_offset		306407	0					
ANR	306540	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		306407	1					
ANR	306541	CompoundStatement		21:65:593:593	306407	1					
ANR	306542	ExpressionStatement	"retval = OBJ_PROP ( zobj , property_offset )"	811:3:24425:24465	306407	0	True				
ANR	306543	AssignmentExpression	"retval = OBJ_PROP ( zobj , property_offset )"		306407	0		=			
ANR	306544	Identifier	retval		306407	0					
ANR	306545	CallExpression	"OBJ_PROP ( zobj , property_offset )"		306407	1					
ANR	306546	Callee	OBJ_PROP		306407	0					
ANR	306547	Identifier	OBJ_PROP		306407	0					
ANR	306548	ArgumentList	zobj		306407	1					
ANR	306549	Argument	zobj		306407	0					
ANR	306550	Identifier	zobj		306407	0					
ANR	306551	Argument	property_offset		306407	1					
ANR	306552	Identifier	property_offset		306407	0					
ANR	306553	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( retval ) == IS_UNDEF ) )		306407	1					
ANR	306554	Condition	UNEXPECTED ( Z_TYPE_P ( retval ) == IS_UNDEF )	812:7:24474:24513	306407	0	True				
ANR	306555	CallExpression	UNEXPECTED ( Z_TYPE_P ( retval ) == IS_UNDEF )		306407	0					
ANR	306556	Callee	UNEXPECTED		306407	0					
ANR	306557	Identifier	UNEXPECTED		306407	0					
ANR	306558	ArgumentList	Z_TYPE_P ( retval ) == IS_UNDEF		306407	1					
ANR	306559	Argument	Z_TYPE_P ( retval ) == IS_UNDEF		306407	0					
ANR	306560	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		306407	0		==			
ANR	306561	CallExpression	Z_TYPE_P ( retval )		306407	0					
ANR	306562	Callee	Z_TYPE_P		306407	0					
ANR	306563	Identifier	Z_TYPE_P		306407	0					
ANR	306564	ArgumentList	retval		306407	1					
ANR	306565	Argument	retval		306407	0					
ANR	306566	Identifier	retval		306407	0					
ANR	306567	Identifier	IS_UNDEF		306407	1					
ANR	306568	CompoundStatement		23:49:689:689	306407	1					
ANR	306569	IfStatement	"if ( EXPECTED ( ! zobj -> ce -> __get ) || UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET ) )"		306407	0					
ANR	306570	Condition	"EXPECTED ( ! zobj -> ce -> __get ) || UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET )"	813:8:24526:24622	306407	0	True				
ANR	306571	OrExpression	"EXPECTED ( ! zobj -> ce -> __get ) || UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET )"		306407	0		||			
ANR	306572	CallExpression	EXPECTED ( ! zobj -> ce -> __get )		306407	0					
ANR	306573	Callee	EXPECTED		306407	0					
ANR	306574	Identifier	EXPECTED		306407	0					
ANR	306575	ArgumentList	! zobj -> ce -> __get		306407	1					
ANR	306576	Argument	! zobj -> ce -> __get		306407	0					
ANR	306577	UnaryOperationExpression	! zobj -> ce -> __get		306407	0					
ANR	306578	UnaryOperator	!		306407	0					
ANR	306579	PtrMemberAccess	zobj -> ce -> __get		306407	1					
ANR	306580	PtrMemberAccess	zobj -> ce		306407	0					
ANR	306581	Identifier	zobj		306407	0					
ANR	306582	Identifier	ce		306407	1					
ANR	306583	Identifier	__get		306407	1					
ANR	306584	CallExpression	"UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET )"		306407	1					
ANR	306585	Callee	UNEXPECTED		306407	0					
ANR	306586	Identifier	UNEXPECTED		306407	0					
ANR	306587	ArgumentList	"( * zend_get_property_guard ( zobj , name ) ) & IN_GET"		306407	1					
ANR	306588	Argument	"( * zend_get_property_guard ( zobj , name ) ) & IN_GET"		306407	0					
ANR	306589	BitAndExpression	"( * zend_get_property_guard ( zobj , name ) ) & IN_GET"		306407	0		&			
ANR	306590	UnaryOperationExpression	"* zend_get_property_guard ( zobj , name )"		306407	0					
ANR	306591	UnaryOperator	*		306407	0					
ANR	306592	CallExpression	"zend_get_property_guard ( zobj , name )"		306407	1					
ANR	306593	Callee	zend_get_property_guard		306407	0					
ANR	306594	Identifier	zend_get_property_guard		306407	0					
ANR	306595	ArgumentList	zobj		306407	1					
ANR	306596	Argument	zobj		306407	0					
ANR	306597	Identifier	zobj		306407	0					
ANR	306598	Argument	name		306407	1					
ANR	306599	Identifier	name		306407	0					
ANR	306600	Identifier	IN_GET		306407	1					
ANR	306601	CompoundStatement		25:69:798:798	306407	1					
ANR	306602	ExpressionStatement	ZVAL_NULL ( retval )	815:5:24632:24649	306407	0	True				
ANR	306603	CallExpression	ZVAL_NULL ( retval )		306407	0					
ANR	306604	Callee	ZVAL_NULL		306407	0					
ANR	306605	Identifier	ZVAL_NULL		306407	0					
ANR	306606	ArgumentList	retval		306407	1					
ANR	306607	Argument	retval		306407	0					
ANR	306608	Identifier	retval		306407	0					
ANR	306609	IfStatement	if ( UNEXPECTED ( type == BP_VAR_RW || type == BP_VAR_R ) )		306407	1					
ANR	306610	Condition	UNEXPECTED ( type == BP_VAR_RW || type == BP_VAR_R )	818:9:24798:24846	306407	0	True				
ANR	306611	CallExpression	UNEXPECTED ( type == BP_VAR_RW || type == BP_VAR_R )		306407	0					
ANR	306612	Callee	UNEXPECTED		306407	0					
ANR	306613	Identifier	UNEXPECTED		306407	0					
ANR	306614	ArgumentList	type == BP_VAR_RW || type == BP_VAR_R		306407	1					
ANR	306615	Argument	type == BP_VAR_RW || type == BP_VAR_R		306407	0					
ANR	306616	OrExpression	type == BP_VAR_RW || type == BP_VAR_R		306407	0		||			
ANR	306617	EqualityExpression	type == BP_VAR_RW		306407	0		==			
ANR	306618	Identifier	type		306407	0					
ANR	306619	Identifier	BP_VAR_RW		306407	1					
ANR	306620	EqualityExpression	type == BP_VAR_R		306407	1		==			
ANR	306621	Identifier	type		306407	0					
ANR	306622	Identifier	BP_VAR_R		306407	1					
ANR	306623	CompoundStatement		29:60:1022:1022	306407	1					
ANR	306624	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined property: %s::$%s"" , ZSTR_VAL ( zobj -> ce -> name ) , ZSTR_VAL ( name ) )"	819:6:24857:24950	306407	0	True				
ANR	306625	CallExpression	"zend_error ( E_NOTICE , ""Undefined property: %s::$%s"" , ZSTR_VAL ( zobj -> ce -> name ) , ZSTR_VAL ( name ) )"		306407	0					
ANR	306626	Callee	zend_error		306407	0					
ANR	306627	Identifier	zend_error		306407	0					
ANR	306628	ArgumentList	E_NOTICE		306407	1					
ANR	306629	Argument	E_NOTICE		306407	0					
ANR	306630	Identifier	E_NOTICE		306407	0					
ANR	306631	Argument	"""Undefined property: %s::$%s"""		306407	1					
ANR	306632	PrimaryExpression	"""Undefined property: %s::$%s"""		306407	0					
ANR	306633	Argument	ZSTR_VAL ( zobj -> ce -> name )		306407	2					
ANR	306634	CallExpression	ZSTR_VAL ( zobj -> ce -> name )		306407	0					
ANR	306635	Callee	ZSTR_VAL		306407	0					
ANR	306636	Identifier	ZSTR_VAL		306407	0					
ANR	306637	ArgumentList	zobj -> ce -> name		306407	1					
ANR	306638	Argument	zobj -> ce -> name		306407	0					
ANR	306639	PtrMemberAccess	zobj -> ce -> name		306407	0					
ANR	306640	PtrMemberAccess	zobj -> ce		306407	0					
ANR	306641	Identifier	zobj		306407	0					
ANR	306642	Identifier	ce		306407	1					
ANR	306643	Identifier	name		306407	1					
ANR	306644	Argument	ZSTR_VAL ( name )		306407	3					
ANR	306645	CallExpression	ZSTR_VAL ( name )		306407	0					
ANR	306646	Callee	ZSTR_VAL		306407	0					
ANR	306647	Identifier	ZSTR_VAL		306407	0					
ANR	306648	ArgumentList	name		306407	1					
ANR	306649	Argument	name		306407	0					
ANR	306650	Identifier	name		306407	0					
ANR	306651	ElseStatement	else		306407	0					
ANR	306652	CompoundStatement		32:11:1143:1143	306407	0					
ANR	306653	ExpressionStatement	retval = NULL	823:5:25053:25066	306407	0	True				
ANR	306654	AssignmentExpression	retval = NULL		306407	0		=			
ANR	306655	Identifier	retval		306407	0					
ANR	306656	Identifier	NULL		306407	1					
ANR	306657	ElseStatement	else		306407	0					
ANR	306658	CompoundStatement		37:9:1261:1261	306407	0					
ANR	306659	IfStatement	if ( EXPECTED ( zobj -> properties ) )		306407	0					
ANR	306660	Condition	EXPECTED ( zobj -> properties )	827:7:25097:25122	306407	0	True				
ANR	306661	CallExpression	EXPECTED ( zobj -> properties )		306407	0					
ANR	306662	Callee	EXPECTED		306407	0					
ANR	306663	Identifier	EXPECTED		306407	0					
ANR	306664	ArgumentList	zobj -> properties		306407	1					
ANR	306665	Argument	zobj -> properties		306407	0					
ANR	306666	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306667	Identifier	zobj		306407	0					
ANR	306668	Identifier	properties		306407	1					
ANR	306669	CompoundStatement		38:35:1298:1298	306407	1					
ANR	306670	IfStatement	if ( UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 ) )		306407	0					
ANR	306671	Condition	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )	828:8:25135:25179	306407	0	True				
ANR	306672	CallExpression	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )		306407	0					
ANR	306673	Callee	UNEXPECTED		306407	0					
ANR	306674	Identifier	UNEXPECTED		306407	0					
ANR	306675	ArgumentList	GC_REFCOUNT ( zobj -> properties ) > 1		306407	1					
ANR	306676	Argument	GC_REFCOUNT ( zobj -> properties ) > 1		306407	0					
ANR	306677	RelationalExpression	GC_REFCOUNT ( zobj -> properties ) > 1		306407	0		>			
ANR	306678	CallExpression	GC_REFCOUNT ( zobj -> properties )		306407	0					
ANR	306679	Callee	GC_REFCOUNT		306407	0					
ANR	306680	Identifier	GC_REFCOUNT		306407	0					
ANR	306681	ArgumentList	zobj -> properties		306407	1					
ANR	306682	Argument	zobj -> properties		306407	0					
ANR	306683	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306684	Identifier	zobj		306407	0					
ANR	306685	Identifier	properties		306407	1					
ANR	306686	PrimaryExpression	1		306407	1					
ANR	306687	CompoundStatement		39:55:1355:1355	306407	1					
ANR	306688	IfStatement	if ( EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) ) )		306407	0					
ANR	306689	Condition	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )	829:9:25193:25252	306407	0	True				
ANR	306690	CallExpression	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )		306407	0					
ANR	306691	Callee	EXPECTED		306407	0					
ANR	306692	Identifier	EXPECTED		306407	0					
ANR	306693	ArgumentList	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		306407	1					
ANR	306694	Argument	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		306407	0					
ANR	306695	UnaryOperationExpression	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		306407	0					
ANR	306696	UnaryOperator	!		306407	0					
ANR	306697	BitAndExpression	GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE		306407	1		&			
ANR	306698	CallExpression	GC_FLAGS ( zobj -> properties )		306407	0					
ANR	306699	Callee	GC_FLAGS		306407	0					
ANR	306700	Identifier	GC_FLAGS		306407	0					
ANR	306701	ArgumentList	zobj -> properties		306407	1					
ANR	306702	Argument	zobj -> properties		306407	0					
ANR	306703	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306704	Identifier	zobj		306407	0					
ANR	306705	Identifier	properties		306407	1					
ANR	306706	Identifier	IS_ARRAY_IMMUTABLE		306407	1					
ANR	306707	CompoundStatement		40:71:1428:1428	306407	1					
ANR	306708	ExpressionStatement	GC_REFCOUNT ( zobj -> properties ) --	830:6:25263:25294	306407	0	True				
ANR	306709	PostIncDecOperationExpression	GC_REFCOUNT ( zobj -> properties ) --		306407	0					
ANR	306710	CallExpression	GC_REFCOUNT ( zobj -> properties )		306407	0					
ANR	306711	Callee	GC_REFCOUNT		306407	0					
ANR	306712	Identifier	GC_REFCOUNT		306407	0					
ANR	306713	ArgumentList	zobj -> properties		306407	1					
ANR	306714	Argument	zobj -> properties		306407	0					
ANR	306715	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306716	Identifier	zobj		306407	0					
ANR	306717	Identifier	properties		306407	1					
ANR	306718	IncDec	--		306407	1					
ANR	306719	ExpressionStatement	zobj -> properties = zend_array_dup ( zobj -> properties )	832:5:25308:25359	306407	1	True				
ANR	306720	AssignmentExpression	zobj -> properties = zend_array_dup ( zobj -> properties )		306407	0		=			
ANR	306721	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306722	Identifier	zobj		306407	0					
ANR	306723	Identifier	properties		306407	1					
ANR	306724	CallExpression	zend_array_dup ( zobj -> properties )		306407	1					
ANR	306725	Callee	zend_array_dup		306407	0					
ANR	306726	Identifier	zend_array_dup		306407	0					
ANR	306727	ArgumentList	zobj -> properties		306407	1					
ANR	306728	Argument	zobj -> properties		306407	0					
ANR	306729	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306730	Identifier	zobj		306407	0					
ANR	306731	Identifier	properties		306407	1					
ANR	306732	IfStatement	"if ( EXPECTED ( ( retval = zend_hash_find ( zobj -> properties , name ) ) != NULL ) )"		306407	1					
ANR	306733	Condition	"EXPECTED ( ( retval = zend_hash_find ( zobj -> properties , name ) ) != NULL )"	834:11:25378:25444	306407	0	True				
ANR	306734	CallExpression	"EXPECTED ( ( retval = zend_hash_find ( zobj -> properties , name ) ) != NULL )"		306407	0					
ANR	306735	Callee	EXPECTED		306407	0					
ANR	306736	Identifier	EXPECTED		306407	0					
ANR	306737	ArgumentList	"( retval = zend_hash_find ( zobj -> properties , name ) ) != NULL"		306407	1					
ANR	306738	Argument	"( retval = zend_hash_find ( zobj -> properties , name ) ) != NULL"		306407	0					
ANR	306739	EqualityExpression	"( retval = zend_hash_find ( zobj -> properties , name ) ) != NULL"		306407	0		!=			
ANR	306740	AssignmentExpression	"retval = zend_hash_find ( zobj -> properties , name )"		306407	0		=			
ANR	306741	Identifier	retval		306407	0					
ANR	306742	CallExpression	"zend_hash_find ( zobj -> properties , name )"		306407	1					
ANR	306743	Callee	zend_hash_find		306407	0					
ANR	306744	Identifier	zend_hash_find		306407	0					
ANR	306745	ArgumentList	zobj -> properties		306407	1					
ANR	306746	Argument	zobj -> properties		306407	0					
ANR	306747	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306748	Identifier	zobj		306407	0					
ANR	306749	Identifier	properties		306407	1					
ANR	306750	Argument	name		306407	1					
ANR	306751	Identifier	name		306407	0					
ANR	306752	Identifier	NULL		306407	1					
ANR	306753	CompoundStatement		45:80:1620:1620	306407	1					
ANR	306754	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING ) )		306407	0					
ANR	306755	Condition	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )	835:9:25458:25498	306407	0	True				
ANR	306756	CallExpression	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )		306407	0					
ANR	306757	Callee	UNEXPECTED		306407	0					
ANR	306758	Identifier	UNEXPECTED		306407	0					
ANR	306759	ArgumentList	Z_TYPE_P ( member ) != IS_STRING		306407	1					
ANR	306760	Argument	Z_TYPE_P ( member ) != IS_STRING		306407	0					
ANR	306761	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		306407	0		!=			
ANR	306762	CallExpression	Z_TYPE_P ( member )		306407	0					
ANR	306763	Callee	Z_TYPE_P		306407	0					
ANR	306764	Identifier	Z_TYPE_P		306407	0					
ANR	306765	ArgumentList	member		306407	1					
ANR	306766	Argument	member		306407	0					
ANR	306767	Identifier	member		306407	0					
ANR	306768	Identifier	IS_STRING		306407	1					
ANR	306769	CompoundStatement		46:52:1674:1674	306407	1					
ANR	306770	ExpressionStatement	zend_string_release ( name )	836:6:25509:25534	306407	0	True				
ANR	306771	CallExpression	zend_string_release ( name )		306407	0					
ANR	306772	Callee	zend_string_release		306407	0					
ANR	306773	Identifier	zend_string_release		306407	0					
ANR	306774	ArgumentList	name		306407	1					
ANR	306775	Argument	name		306407	0					
ANR	306776	Identifier	name		306407	0					
ANR	306777	ReturnStatement	return retval ;	838:5:25548:25561	306407	1	True				
ANR	306778	Identifier	retval		306407	0					
ANR	306779	IfStatement	"if ( EXPECTED ( ! zobj -> ce -> __get ) || UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET ) )"		306407	1					
ANR	306780	Condition	"EXPECTED ( ! zobj -> ce -> __get ) || UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET )"	841:7:25584:25679	306407	0	True				
ANR	306781	OrExpression	"EXPECTED ( ! zobj -> ce -> __get ) || UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET )"		306407	0		||			
ANR	306782	CallExpression	EXPECTED ( ! zobj -> ce -> __get )		306407	0					
ANR	306783	Callee	EXPECTED		306407	0					
ANR	306784	Identifier	EXPECTED		306407	0					
ANR	306785	ArgumentList	! zobj -> ce -> __get		306407	1					
ANR	306786	Argument	! zobj -> ce -> __get		306407	0					
ANR	306787	UnaryOperationExpression	! zobj -> ce -> __get		306407	0					
ANR	306788	UnaryOperator	!		306407	0					
ANR	306789	PtrMemberAccess	zobj -> ce -> __get		306407	1					
ANR	306790	PtrMemberAccess	zobj -> ce		306407	0					
ANR	306791	Identifier	zobj		306407	0					
ANR	306792	Identifier	ce		306407	1					
ANR	306793	Identifier	__get		306407	1					
ANR	306794	CallExpression	"UNEXPECTED ( ( * zend_get_property_guard ( zobj , name ) ) & IN_GET )"		306407	1					
ANR	306795	Callee	UNEXPECTED		306407	0					
ANR	306796	Identifier	UNEXPECTED		306407	0					
ANR	306797	ArgumentList	"( * zend_get_property_guard ( zobj , name ) ) & IN_GET"		306407	1					
ANR	306798	Argument	"( * zend_get_property_guard ( zobj , name ) ) & IN_GET"		306407	0					
ANR	306799	BitAndExpression	"( * zend_get_property_guard ( zobj , name ) ) & IN_GET"		306407	0		&			
ANR	306800	UnaryOperationExpression	"* zend_get_property_guard ( zobj , name )"		306407	0					
ANR	306801	UnaryOperator	*		306407	0					
ANR	306802	CallExpression	"zend_get_property_guard ( zobj , name )"		306407	1					
ANR	306803	Callee	zend_get_property_guard		306407	0					
ANR	306804	Identifier	zend_get_property_guard		306407	0					
ANR	306805	ArgumentList	zobj		306407	1					
ANR	306806	Argument	zobj		306407	0					
ANR	306807	Identifier	zobj		306407	0					
ANR	306808	Argument	name		306407	1					
ANR	306809	Identifier	name		306407	0					
ANR	306810	Identifier	IN_GET		306407	1					
ANR	306811	CompoundStatement		53:68:1855:1855	306407	1					
ANR	306812	IfStatement	if ( UNEXPECTED ( ! zobj -> properties ) )		306407	0					
ANR	306813	Condition	UNEXPECTED ( ! zobj -> properties )	843:8:25692:25720	306407	0	True				
ANR	306814	CallExpression	UNEXPECTED ( ! zobj -> properties )		306407	0					
ANR	306815	Callee	UNEXPECTED		306407	0					
ANR	306816	Identifier	UNEXPECTED		306407	0					
ANR	306817	ArgumentList	! zobj -> properties		306407	1					
ANR	306818	Argument	! zobj -> properties		306407	0					
ANR	306819	UnaryOperationExpression	! zobj -> properties		306407	0					
ANR	306820	UnaryOperator	!		306407	0					
ANR	306821	PtrMemberAccess	zobj -> properties		306407	1					
ANR	306822	Identifier	zobj		306407	0					
ANR	306823	Identifier	properties		306407	1					
ANR	306824	CompoundStatement		54:39:1896:1896	306407	1					
ANR	306825	ExpressionStatement	rebuild_object_properties ( zobj )	844:5:25730:25761	306407	0	True				
ANR	306826	CallExpression	rebuild_object_properties ( zobj )		306407	0					
ANR	306827	Callee	rebuild_object_properties		306407	0					
ANR	306828	Identifier	rebuild_object_properties		306407	0					
ANR	306829	ArgumentList	zobj		306407	1					
ANR	306830	Argument	zobj		306407	0					
ANR	306831	Identifier	zobj		306407	0					
ANR	306832	ExpressionStatement	"retval = zend_hash_update ( zobj -> properties , name , & EG ( uninitialized_zval ) )"	846:4:25773:25847	306407	1	True				
ANR	306833	AssignmentExpression	"retval = zend_hash_update ( zobj -> properties , name , & EG ( uninitialized_zval ) )"		306407	0		=			
ANR	306834	Identifier	retval		306407	0					
ANR	306835	CallExpression	"zend_hash_update ( zobj -> properties , name , & EG ( uninitialized_zval ) )"		306407	1					
ANR	306836	Callee	zend_hash_update		306407	0					
ANR	306837	Identifier	zend_hash_update		306407	0					
ANR	306838	ArgumentList	zobj -> properties		306407	1					
ANR	306839	Argument	zobj -> properties		306407	0					
ANR	306840	PtrMemberAccess	zobj -> properties		306407	0					
ANR	306841	Identifier	zobj		306407	0					
ANR	306842	Identifier	properties		306407	1					
ANR	306843	Argument	name		306407	1					
ANR	306844	Identifier	name		306407	0					
ANR	306845	Argument	& EG ( uninitialized_zval )		306407	2					
ANR	306846	UnaryOperationExpression	& EG ( uninitialized_zval )		306407	0					
ANR	306847	UnaryOperator	&		306407	0					
ANR	306848	CallExpression	EG ( uninitialized_zval )		306407	1					
ANR	306849	Callee	EG		306407	0					
ANR	306850	Identifier	EG		306407	0					
ANR	306851	ArgumentList	uninitialized_zval		306407	1					
ANR	306852	Argument	uninitialized_zval		306407	0					
ANR	306853	Identifier	uninitialized_zval		306407	0					
ANR	306854	IfStatement	if ( UNEXPECTED ( type == BP_VAR_RW || type == BP_VAR_R ) )		306407	2					
ANR	306855	Condition	UNEXPECTED ( type == BP_VAR_RW || type == BP_VAR_R )	849:8:25993:26041	306407	0	True				
ANR	306856	CallExpression	UNEXPECTED ( type == BP_VAR_RW || type == BP_VAR_R )		306407	0					
ANR	306857	Callee	UNEXPECTED		306407	0					
ANR	306858	Identifier	UNEXPECTED		306407	0					
ANR	306859	ArgumentList	type == BP_VAR_RW || type == BP_VAR_R		306407	1					
ANR	306860	Argument	type == BP_VAR_RW || type == BP_VAR_R		306407	0					
ANR	306861	OrExpression	type == BP_VAR_RW || type == BP_VAR_R		306407	0		||			
ANR	306862	EqualityExpression	type == BP_VAR_RW		306407	0		==			
ANR	306863	Identifier	type		306407	0					
ANR	306864	Identifier	BP_VAR_RW		306407	1					
ANR	306865	EqualityExpression	type == BP_VAR_R		306407	1		==			
ANR	306866	Identifier	type		306407	0					
ANR	306867	Identifier	BP_VAR_R		306407	1					
ANR	306868	CompoundStatement		60:59:2217:2217	306407	1					
ANR	306869	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined property: %s::$%s"" , ZSTR_VAL ( zobj -> ce -> name ) , ZSTR_VAL ( name ) )"	850:5:26051:26144	306407	0	True				
ANR	306870	CallExpression	"zend_error ( E_NOTICE , ""Undefined property: %s::$%s"" , ZSTR_VAL ( zobj -> ce -> name ) , ZSTR_VAL ( name ) )"		306407	0					
ANR	306871	Callee	zend_error		306407	0					
ANR	306872	Identifier	zend_error		306407	0					
ANR	306873	ArgumentList	E_NOTICE		306407	1					
ANR	306874	Argument	E_NOTICE		306407	0					
ANR	306875	Identifier	E_NOTICE		306407	0					
ANR	306876	Argument	"""Undefined property: %s::$%s"""		306407	1					
ANR	306877	PrimaryExpression	"""Undefined property: %s::$%s"""		306407	0					
ANR	306878	Argument	ZSTR_VAL ( zobj -> ce -> name )		306407	2					
ANR	306879	CallExpression	ZSTR_VAL ( zobj -> ce -> name )		306407	0					
ANR	306880	Callee	ZSTR_VAL		306407	0					
ANR	306881	Identifier	ZSTR_VAL		306407	0					
ANR	306882	ArgumentList	zobj -> ce -> name		306407	1					
ANR	306883	Argument	zobj -> ce -> name		306407	0					
ANR	306884	PtrMemberAccess	zobj -> ce -> name		306407	0					
ANR	306885	PtrMemberAccess	zobj -> ce		306407	0					
ANR	306886	Identifier	zobj		306407	0					
ANR	306887	Identifier	ce		306407	1					
ANR	306888	Identifier	name		306407	1					
ANR	306889	Argument	ZSTR_VAL ( name )		306407	3					
ANR	306890	CallExpression	ZSTR_VAL ( name )		306407	0					
ANR	306891	Callee	ZSTR_VAL		306407	0					
ANR	306892	Identifier	ZSTR_VAL		306407	0					
ANR	306893	ArgumentList	name		306407	1					
ANR	306894	Argument	name		306407	0					
ANR	306895	Identifier	name		306407	0					
ANR	306896	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING ) )		306407	9					
ANR	306897	Condition	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )	856:5:26170:26210	306407	0	True				
ANR	306898	CallExpression	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )		306407	0					
ANR	306899	Callee	UNEXPECTED		306407	0					
ANR	306900	Identifier	UNEXPECTED		306407	0					
ANR	306901	ArgumentList	Z_TYPE_P ( member ) != IS_STRING		306407	1					
ANR	306902	Argument	Z_TYPE_P ( member ) != IS_STRING		306407	0					
ANR	306903	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		306407	0		!=			
ANR	306904	CallExpression	Z_TYPE_P ( member )		306407	0					
ANR	306905	Callee	Z_TYPE_P		306407	0					
ANR	306906	Identifier	Z_TYPE_P		306407	0					
ANR	306907	ArgumentList	member		306407	1					
ANR	306908	Argument	member		306407	0					
ANR	306909	Identifier	member		306407	0					
ANR	306910	Identifier	IS_STRING		306407	1					
ANR	306911	CompoundStatement		67:48:2386:2386	306407	1					
ANR	306912	ExpressionStatement	zend_string_release ( name )	857:2:26217:26242	306407	0	True				
ANR	306913	CallExpression	zend_string_release ( name )		306407	0					
ANR	306914	Callee	zend_string_release		306407	0					
ANR	306915	Identifier	zend_string_release		306407	0					
ANR	306916	ArgumentList	name		306407	1					
ANR	306917	Argument	name		306407	0					
ANR	306918	Identifier	name		306407	0					
ANR	306919	ReturnStatement	return retval ;	859:1:26248:26261	306407	10	True				
ANR	306920	Identifier	retval		306407	0					
ANR	306921	ReturnType	static zval *		306407	1					
ANR	306922	Identifier	zend_std_get_property_ptr_ptr		306407	2					
ANR	306923	ParameterList	"zval * object , zval * member , int type , void * * cache_slot"		306407	3					
ANR	306924	Parameter	zval * object	789:43:23759:23770	306407	0	True				
ANR	306925	ParameterType	zval *		306407	0					
ANR	306926	Identifier	object		306407	1					
ANR	306927	Parameter	zval * member	789:57:23773:23784	306407	1	True				
ANR	306928	ParameterType	zval *		306407	0					
ANR	306929	Identifier	member		306407	1					
ANR	306930	Parameter	int type	789:71:23787:23794	306407	2	True				
ANR	306931	ParameterType	int		306407	0					
ANR	306932	Identifier	type		306407	1					
ANR	306933	Parameter	void * * cache_slot	789:81:23797:23813	306407	3	True				
ANR	306934	ParameterType	void * *		306407	0					
ANR	306935	Identifier	cache_slot		306407	1					
ANR	306936	CFGEntryNode	ENTRY		306407		True				
ANR	306937	CFGExitNode	EXIT		306407		True				
ANR	306938	Symbol	* zend_get_property_guard		306407						
ANR	306939	Symbol	zobj		306407						
ANR	306940	Symbol	Z_OBJ_P		306407						
ANR	306941	Symbol	* * zobj		306407						
ANR	306942	Symbol	zobj -> ce -> name		306407						
ANR	306943	Symbol	GC_FLAGS		306407						
ANR	306944	Symbol	type		306407						
ANR	306945	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		306407						
ANR	306946	Symbol	& EG		306407						
ANR	306947	Symbol	UNEXPECTED		306407						
ANR	306948	Symbol	zend_hash_find		306407						
ANR	306949	Symbol	* zobj		306407						
ANR	306950	Symbol	ZEND_WRONG_PROPERTY_OFFSET		306407						
ANR	306951	Symbol	zobj -> ce -> __get		306407						
ANR	306952	Symbol	IN_GET		306407						
ANR	306953	Symbol	zobj -> properties		306407						
ANR	306954	Symbol	"* zend_get_property_guard ( zobj , name )"		306407						
ANR	306955	Symbol	member		306407						
ANR	306956	Symbol	IS_STRING		306407						
ANR	306957	Symbol	zend_hash_update		306407						
ANR	306958	Symbol	GC_REFCOUNT		306407						
ANR	306959	Symbol	IS_UNDEF		306407						
ANR	306960	Symbol	BP_VAR_R		306407						
ANR	306961	Symbol	zend_array_dup		306407						
ANR	306962	Symbol	cache_slot		306407						
ANR	306963	Symbol	BP_VAR_RW		306407						
ANR	306964	Symbol	uninitialized_zval		306407						
ANR	306965	Symbol	NULL		306407						
ANR	306966	Symbol	Z_OBJ_HANDLE_P		306407						
ANR	306967	Symbol	* zobj -> ce		306407						
ANR	306968	Symbol	zval_get_string		306407						
ANR	306969	Symbol	E_NOTICE		306407						
ANR	306970	Symbol	zobj -> ce		306407						
ANR	306971	Symbol	IS_ARRAY_IMMUTABLE		306407						
ANR	306972	Symbol	property_offset		306407						
ANR	306973	Symbol	Z_TYPE_P		306407						
ANR	306974	Symbol	stderr		306407						
ANR	306975	Symbol	zend_get_property_offset		306407						
ANR	306976	Symbol	zend_get_property_guard		306407						
ANR	306977	Symbol	retval		306407						
ANR	306978	Symbol	ZSTR_VAL		306407						
ANR	306979	Symbol	OBJ_PROP		306407						
ANR	306980	Symbol	name		306407						
ANR	306981	Symbol	Z_STR_P		306407						
ANR	306982	Symbol	EXPECTED		306407						
ANR	306983	Symbol	object		306407						
ANR	306984	Function	zend_std_unset_property	863:0:26276:28351							
ANR	306985	FunctionDef	"zend_std_unset_property (zval * object , zval * member , void * * cache_slot)"		306984	0					
ANR	306986	CompoundStatement		864:0:26369:28351	306984	0					
ANR	306987	IdentifierDeclStatement	zend_object * zobj ;	865:1:26372:26389	306984	0	True				
ANR	306988	IdentifierDecl	* zobj		306984	0					
ANR	306989	IdentifierDeclType	zend_object *		306984	0					
ANR	306990	Identifier	zobj		306984	1					
ANR	306991	IdentifierDeclStatement	zval tmp_member ;	866:1:26392:26407	306984	1	True				
ANR	306992	IdentifierDecl	tmp_member		306984	0					
ANR	306993	IdentifierDeclType	zval		306984	0					
ANR	306994	Identifier	tmp_member		306984	1					
ANR	306995	IdentifierDeclStatement	uint32_t property_offset ;	867:1:26410:26434	306984	2	True				
ANR	306996	IdentifierDecl	property_offset		306984	0					
ANR	306997	IdentifierDeclType	uint32_t		306984	0					
ANR	306998	Identifier	property_offset		306984	1					
ANR	306999	ExpressionStatement	zobj = Z_OBJ_P ( object )	869:1:26438:26460	306984	3	True				
ANR	307000	AssignmentExpression	zobj = Z_OBJ_P ( object )		306984	0		=			
ANR	307001	Identifier	zobj		306984	0					
ANR	307002	CallExpression	Z_OBJ_P ( object )		306984	1					
ANR	307003	Callee	Z_OBJ_P		306984	0					
ANR	307004	Identifier	Z_OBJ_P		306984	0					
ANR	307005	ArgumentList	object		306984	1					
ANR	307006	Argument	object		306984	0					
ANR	307007	Identifier	object		306984	0					
ANR	307008	ExpressionStatement	ZVAL_UNDEF ( & tmp_member )	871:1:26464:26487	306984	4	True				
ANR	307009	CallExpression	ZVAL_UNDEF ( & tmp_member )		306984	0					
ANR	307010	Callee	ZVAL_UNDEF		306984	0					
ANR	307011	Identifier	ZVAL_UNDEF		306984	0					
ANR	307012	ArgumentList	& tmp_member		306984	1					
ANR	307013	Argument	& tmp_member		306984	0					
ANR	307014	UnaryOperationExpression	& tmp_member		306984	0					
ANR	307015	UnaryOperator	&		306984	0					
ANR	307016	Identifier	tmp_member		306984	1					
ANR	307017	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING ) )		306984	5					
ANR	307018	Condition	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )	872:6:26495:26535	306984	0	True				
ANR	307019	CallExpression	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )		306984	0					
ANR	307020	Callee	UNEXPECTED		306984	0					
ANR	307021	Identifier	UNEXPECTED		306984	0					
ANR	307022	ArgumentList	Z_TYPE_P ( member ) != IS_STRING		306984	1					
ANR	307023	Argument	Z_TYPE_P ( member ) != IS_STRING		306984	0					
ANR	307024	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		306984	0		!=			
ANR	307025	CallExpression	Z_TYPE_P ( member )		306984	0					
ANR	307026	Callee	Z_TYPE_P		306984	0					
ANR	307027	Identifier	Z_TYPE_P		306984	0					
ANR	307028	ArgumentList	member		306984	1					
ANR	307029	Argument	member		306984	0					
ANR	307030	Identifier	member		306984	0					
ANR	307031	Identifier	IS_STRING		306984	1					
ANR	307032	CompoundStatement		9:49:168:168	306984	1					
ANR	307033	ExpressionStatement	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"	873:2:26542:26588	306984	0	True				
ANR	307034	CallExpression	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"		306984	0					
ANR	307035	Callee	ZVAL_STR		306984	0					
ANR	307036	Identifier	ZVAL_STR		306984	0					
ANR	307037	ArgumentList	& tmp_member		306984	1					
ANR	307038	Argument	& tmp_member		306984	0					
ANR	307039	UnaryOperationExpression	& tmp_member		306984	0					
ANR	307040	UnaryOperator	&		306984	0					
ANR	307041	Identifier	tmp_member		306984	1					
ANR	307042	Argument	zval_get_string ( member )		306984	1					
ANR	307043	CallExpression	zval_get_string ( member )		306984	0					
ANR	307044	Callee	zval_get_string		306984	0					
ANR	307045	Identifier	zval_get_string		306984	0					
ANR	307046	ArgumentList	member		306984	1					
ANR	307047	Argument	member		306984	0					
ANR	307048	Identifier	member		306984	0					
ANR	307049	ExpressionStatement	member = & tmp_member	874:2:26592:26612	306984	1	True				
ANR	307050	AssignmentExpression	member = & tmp_member		306984	0		=			
ANR	307051	Identifier	member		306984	0					
ANR	307052	UnaryOperationExpression	& tmp_member		306984	1					
ANR	307053	UnaryOperator	&		306984	0					
ANR	307054	Identifier	tmp_member		306984	1					
ANR	307055	ExpressionStatement	cache_slot = NULL	875:2:26616:26633	306984	2	True				
ANR	307056	AssignmentExpression	cache_slot = NULL		306984	0		=			
ANR	307057	Identifier	cache_slot		306984	0					
ANR	307058	Identifier	NULL		306984	1					
ANR	307059	ExpressionStatement	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( zobj -> ce -> __unset != NULL ) , cache_slot )"	878:1:26640:26750	306984	6	True				
ANR	307060	AssignmentExpression	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( zobj -> ce -> __unset != NULL ) , cache_slot )"		306984	0		=			
ANR	307061	Identifier	property_offset		306984	0					
ANR	307062	CallExpression	"zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , ( zobj -> ce -> __unset != NULL ) , cache_slot )"		306984	1					
ANR	307063	Callee	zend_get_property_offset		306984	0					
ANR	307064	Identifier	zend_get_property_offset		306984	0					
ANR	307065	ArgumentList	zobj -> ce		306984	1					
ANR	307066	Argument	zobj -> ce		306984	0					
ANR	307067	PtrMemberAccess	zobj -> ce		306984	0					
ANR	307068	Identifier	zobj		306984	0					
ANR	307069	Identifier	ce		306984	1					
ANR	307070	Argument	Z_STR_P ( member )		306984	1					
ANR	307071	CallExpression	Z_STR_P ( member )		306984	0					
ANR	307072	Callee	Z_STR_P		306984	0					
ANR	307073	Identifier	Z_STR_P		306984	0					
ANR	307074	ArgumentList	member		306984	1					
ANR	307075	Argument	member		306984	0					
ANR	307076	Identifier	member		306984	0					
ANR	307077	Argument	zobj -> ce -> __unset != NULL		306984	2					
ANR	307078	EqualityExpression	zobj -> ce -> __unset != NULL		306984	0		!=			
ANR	307079	PtrMemberAccess	zobj -> ce -> __unset		306984	0					
ANR	307080	PtrMemberAccess	zobj -> ce		306984	0					
ANR	307081	Identifier	zobj		306984	0					
ANR	307082	Identifier	ce		306984	1					
ANR	307083	Identifier	__unset		306984	1					
ANR	307084	Identifier	NULL		306984	1					
ANR	307085	Argument	cache_slot		306984	3					
ANR	307086	Identifier	cache_slot		306984	0					
ANR	307087	IfStatement	if ( EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET ) )		306984	7					
ANR	307088	Condition	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )	880:5:26758:26812	306984	0	True				
ANR	307089	CallExpression	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )		306984	0					
ANR	307090	Callee	EXPECTED		306984	0					
ANR	307091	Identifier	EXPECTED		306984	0					
ANR	307092	ArgumentList	property_offset != ZEND_WRONG_PROPERTY_OFFSET		306984	1					
ANR	307093	Argument	property_offset != ZEND_WRONG_PROPERTY_OFFSET		306984	0					
ANR	307094	EqualityExpression	property_offset != ZEND_WRONG_PROPERTY_OFFSET		306984	0		!=			
ANR	307095	Identifier	property_offset		306984	0					
ANR	307096	Identifier	ZEND_WRONG_PROPERTY_OFFSET		306984	1					
ANR	307097	CompoundStatement		17:62:445:445	306984	1					
ANR	307098	IfStatement	if ( EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET ) )		306984	0					
ANR	307099	Condition	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )	881:6:26823:26879	306984	0	True				
ANR	307100	CallExpression	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )		306984	0					
ANR	307101	Callee	EXPECTED		306984	0					
ANR	307102	Identifier	EXPECTED		306984	0					
ANR	307103	ArgumentList	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		306984	1					
ANR	307104	Argument	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		306984	0					
ANR	307105	EqualityExpression	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		306984	0		!=			
ANR	307106	Identifier	property_offset		306984	0					
ANR	307107	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		306984	1					
ANR	307108	CompoundStatement		19:3:517:561	306984	1					
ANR	307109	IdentifierDeclStatement	"zval * slot = OBJ_PROP ( zobj , property_offset ) ;"	882:3:26887:26931	306984	0	True				
ANR	307110	IdentifierDecl	"* slot = OBJ_PROP ( zobj , property_offset )"		306984	0					
ANR	307111	IdentifierDeclType	zval *		306984	0					
ANR	307112	Identifier	slot		306984	1					
ANR	307113	AssignmentExpression	"* slot = OBJ_PROP ( zobj , property_offset )"		306984	2		=			
ANR	307114	Identifier	slot		306984	0					
ANR	307115	CallExpression	"OBJ_PROP ( zobj , property_offset )"		306984	1					
ANR	307116	Callee	OBJ_PROP		306984	0					
ANR	307117	Identifier	OBJ_PROP		306984	0					
ANR	307118	ArgumentList	zobj		306984	1					
ANR	307119	Argument	zobj		306984	0					
ANR	307120	Identifier	zobj		306984	0					
ANR	307121	Argument	property_offset		306984	1					
ANR	307122	Identifier	property_offset		306984	0					
ANR	307123	IfStatement	if ( Z_TYPE_P ( slot ) != IS_UNDEF )		306984	1					
ANR	307124	Condition	Z_TYPE_P ( slot ) != IS_UNDEF	884:7:26941:26966	306984	0	True				
ANR	307125	EqualityExpression	Z_TYPE_P ( slot ) != IS_UNDEF		306984	0		!=			
ANR	307126	CallExpression	Z_TYPE_P ( slot )		306984	0					
ANR	307127	Callee	Z_TYPE_P		306984	0					
ANR	307128	Identifier	Z_TYPE_P		306984	0					
ANR	307129	ArgumentList	slot		306984	1					
ANR	307130	Argument	slot		306984	0					
ANR	307131	Identifier	slot		306984	0					
ANR	307132	Identifier	IS_UNDEF		306984	1					
ANR	307133	CompoundStatement		21:35:599:599	306984	1					
ANR	307134	ExpressionStatement	zval_ptr_dtor ( slot )	885:4:26975:26994	306984	0	True				
ANR	307135	CallExpression	zval_ptr_dtor ( slot )		306984	0					
ANR	307136	Callee	zval_ptr_dtor		306984	0					
ANR	307137	Identifier	zval_ptr_dtor		306984	0					
ANR	307138	ArgumentList	slot		306984	1					
ANR	307139	Argument	slot		306984	0					
ANR	307140	Identifier	slot		306984	0					
ANR	307141	ExpressionStatement	ZVAL_UNDEF ( slot )	886:4:27000:27016	306984	1	True				
ANR	307142	CallExpression	ZVAL_UNDEF ( slot )		306984	0					
ANR	307143	Callee	ZVAL_UNDEF		306984	0					
ANR	307144	Identifier	ZVAL_UNDEF		306984	0					
ANR	307145	ArgumentList	slot		306984	1					
ANR	307146	Argument	slot		306984	0					
ANR	307147	Identifier	slot		306984	0					
ANR	307148	IfStatement	if ( zobj -> properties )		306984	2					
ANR	307149	Condition	zobj -> properties	887:8:27026:27041	306984	0	True				
ANR	307150	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307151	Identifier	zobj		306984	0					
ANR	307152	Identifier	properties		306984	1					
ANR	307153	CompoundStatement		24:26:674:674	306984	1					
ANR	307154	ExpressionStatement	zobj -> properties -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND	888:5:27051:27105	306984	0	True				
ANR	307155	AssignmentExpression	zobj -> properties -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND		306984	0		|=			
ANR	307156	MemberAccess	zobj -> properties -> u . v . flags		306984	0					
ANR	307157	MemberAccess	zobj -> properties -> u . v		306984	0					
ANR	307158	PtrMemberAccess	zobj -> properties -> u		306984	0					
ANR	307159	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307160	Identifier	zobj		306984	0					
ANR	307161	Identifier	properties		306984	1					
ANR	307162	Identifier	u		306984	1					
ANR	307163	Identifier	v		306984	1					
ANR	307164	Identifier	flags		306984	1					
ANR	307165	Identifier	HASH_FLAG_HAS_EMPTY_IND		306984	1					
ANR	307166	GotoStatement	goto exit ;	890:4:27117:27126	306984	3	True				
ANR	307167	Identifier	exit		306984	0					
ANR	307168	ElseStatement	else		306984	0					
ANR	307169	IfStatement	if ( EXPECTED ( zobj -> properties != NULL ) )		306984	0					
ANR	307170	Condition	EXPECTED ( zobj -> properties != NULL )	892:13:27146:27179	306984	0	True				
ANR	307171	CallExpression	EXPECTED ( zobj -> properties != NULL )		306984	0					
ANR	307172	Callee	EXPECTED		306984	0					
ANR	307173	Identifier	EXPECTED		306984	0					
ANR	307174	ArgumentList	zobj -> properties != NULL		306984	1					
ANR	307175	Argument	zobj -> properties != NULL		306984	0					
ANR	307176	EqualityExpression	zobj -> properties != NULL		306984	0		!=			
ANR	307177	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307178	Identifier	zobj		306984	0					
ANR	307179	Identifier	properties		306984	1					
ANR	307180	Identifier	NULL		306984	1					
ANR	307181	CompoundStatement		29:49:812:812	306984	1					
ANR	307182	IfStatement	if ( UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 ) )		306984	0					
ANR	307183	Condition	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )	893:7:27191:27235	306984	0	True				
ANR	307184	CallExpression	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )		306984	0					
ANR	307185	Callee	UNEXPECTED		306984	0					
ANR	307186	Identifier	UNEXPECTED		306984	0					
ANR	307187	ArgumentList	GC_REFCOUNT ( zobj -> properties ) > 1		306984	1					
ANR	307188	Argument	GC_REFCOUNT ( zobj -> properties ) > 1		306984	0					
ANR	307189	RelationalExpression	GC_REFCOUNT ( zobj -> properties ) > 1		306984	0		>			
ANR	307190	CallExpression	GC_REFCOUNT ( zobj -> properties )		306984	0					
ANR	307191	Callee	GC_REFCOUNT		306984	0					
ANR	307192	Identifier	GC_REFCOUNT		306984	0					
ANR	307193	ArgumentList	zobj -> properties		306984	1					
ANR	307194	Argument	zobj -> properties		306984	0					
ANR	307195	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307196	Identifier	zobj		306984	0					
ANR	307197	Identifier	properties		306984	1					
ANR	307198	PrimaryExpression	1		306984	1					
ANR	307199	CompoundStatement		30:54:868:868	306984	1					
ANR	307200	IfStatement	if ( EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) ) )		306984	0					
ANR	307201	Condition	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )	894:8:27248:27307	306984	0	True				
ANR	307202	CallExpression	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )		306984	0					
ANR	307203	Callee	EXPECTED		306984	0					
ANR	307204	Identifier	EXPECTED		306984	0					
ANR	307205	ArgumentList	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		306984	1					
ANR	307206	Argument	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		306984	0					
ANR	307207	UnaryOperationExpression	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		306984	0					
ANR	307208	UnaryOperator	!		306984	0					
ANR	307209	BitAndExpression	GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE		306984	1		&			
ANR	307210	CallExpression	GC_FLAGS ( zobj -> properties )		306984	0					
ANR	307211	Callee	GC_FLAGS		306984	0					
ANR	307212	Identifier	GC_FLAGS		306984	0					
ANR	307213	ArgumentList	zobj -> properties		306984	1					
ANR	307214	Argument	zobj -> properties		306984	0					
ANR	307215	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307216	Identifier	zobj		306984	0					
ANR	307217	Identifier	properties		306984	1					
ANR	307218	Identifier	IS_ARRAY_IMMUTABLE		306984	1					
ANR	307219	CompoundStatement		31:70:940:940	306984	1					
ANR	307220	ExpressionStatement	GC_REFCOUNT ( zobj -> properties ) --	895:5:27317:27348	306984	0	True				
ANR	307221	PostIncDecOperationExpression	GC_REFCOUNT ( zobj -> properties ) --		306984	0					
ANR	307222	CallExpression	GC_REFCOUNT ( zobj -> properties )		306984	0					
ANR	307223	Callee	GC_REFCOUNT		306984	0					
ANR	307224	Identifier	GC_REFCOUNT		306984	0					
ANR	307225	ArgumentList	zobj -> properties		306984	1					
ANR	307226	Argument	zobj -> properties		306984	0					
ANR	307227	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307228	Identifier	zobj		306984	0					
ANR	307229	Identifier	properties		306984	1					
ANR	307230	IncDec	--		306984	1					
ANR	307231	ExpressionStatement	zobj -> properties = zend_array_dup ( zobj -> properties )	897:4:27360:27411	306984	1	True				
ANR	307232	AssignmentExpression	zobj -> properties = zend_array_dup ( zobj -> properties )		306984	0		=			
ANR	307233	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307234	Identifier	zobj		306984	0					
ANR	307235	Identifier	properties		306984	1					
ANR	307236	CallExpression	zend_array_dup ( zobj -> properties )		306984	1					
ANR	307237	Callee	zend_array_dup		306984	0					
ANR	307238	Identifier	zend_array_dup		306984	0					
ANR	307239	ArgumentList	zobj -> properties		306984	1					
ANR	307240	Argument	zobj -> properties		306984	0					
ANR	307241	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307242	Identifier	zobj		306984	0					
ANR	307243	Identifier	properties		306984	1					
ANR	307244	IfStatement	"if ( EXPECTED ( zend_hash_del ( zobj -> properties , Z_STR_P ( member ) ) != FAILURE ) )"		306984	1					
ANR	307245	Condition	"EXPECTED ( zend_hash_del ( zobj -> properties , Z_STR_P ( member ) ) != FAILURE )"	899:7:27425:27493	306984	0	True				
ANR	307246	CallExpression	"EXPECTED ( zend_hash_del ( zobj -> properties , Z_STR_P ( member ) ) != FAILURE )"		306984	0					
ANR	307247	Callee	EXPECTED		306984	0					
ANR	307248	Identifier	EXPECTED		306984	0					
ANR	307249	ArgumentList	"zend_hash_del ( zobj -> properties , Z_STR_P ( member ) ) != FAILURE"		306984	1					
ANR	307250	Argument	"zend_hash_del ( zobj -> properties , Z_STR_P ( member ) ) != FAILURE"		306984	0					
ANR	307251	EqualityExpression	"zend_hash_del ( zobj -> properties , Z_STR_P ( member ) ) != FAILURE"		306984	0		!=			
ANR	307252	CallExpression	"zend_hash_del ( zobj -> properties , Z_STR_P ( member ) )"		306984	0					
ANR	307253	Callee	zend_hash_del		306984	0					
ANR	307254	Identifier	zend_hash_del		306984	0					
ANR	307255	ArgumentList	zobj -> properties		306984	1					
ANR	307256	Argument	zobj -> properties		306984	0					
ANR	307257	PtrMemberAccess	zobj -> properties		306984	0					
ANR	307258	Identifier	zobj		306984	0					
ANR	307259	Identifier	properties		306984	1					
ANR	307260	Argument	Z_STR_P ( member )		306984	1					
ANR	307261	CallExpression	Z_STR_P ( member )		306984	0					
ANR	307262	Callee	Z_STR_P		306984	0					
ANR	307263	Identifier	Z_STR_P		306984	0					
ANR	307264	ArgumentList	member		306984	1					
ANR	307265	Argument	member		306984	0					
ANR	307266	Identifier	member		306984	0					
ANR	307267	Identifier	FAILURE		306984	1					
ANR	307268	CompoundStatement		36:78:1126:1126	306984	1					
ANR	307269	GotoStatement	goto exit ;	900:4:27502:27511	306984	0	True				
ANR	307270	Identifier	exit		306984	0					
ANR	307271	ElseStatement	else		306984	0					
ANR	307272	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		306984	0					
ANR	307273	Condition	UNEXPECTED ( EG ( exception ) )	903:12:27534:27558	306984	0	True				
ANR	307274	CallExpression	UNEXPECTED ( EG ( exception ) )		306984	0					
ANR	307275	Callee	UNEXPECTED		306984	0					
ANR	307276	Identifier	UNEXPECTED		306984	0					
ANR	307277	ArgumentList	EG ( exception )		306984	1					
ANR	307278	Argument	EG ( exception )		306984	0					
ANR	307279	CallExpression	EG ( exception )		306984	0					
ANR	307280	Callee	EG		306984	0					
ANR	307281	Identifier	EG		306984	0					
ANR	307282	ArgumentList	exception		306984	1					
ANR	307283	Argument	exception		306984	0					
ANR	307284	Identifier	exception		306984	0					
ANR	307285	CompoundStatement		40:39:1191:1191	306984	1					
ANR	307286	GotoStatement	goto exit ;	904:2:27565:27574	306984	0	True				
ANR	307287	Identifier	exit		306984	0					
ANR	307288	IfStatement	if ( zobj -> ce -> __unset )		306984	8					
ANR	307289	Condition	zobj -> ce -> __unset	908:5:27604:27620	306984	0	True				
ANR	307290	PtrMemberAccess	zobj -> ce -> __unset		306984	0					
ANR	307291	PtrMemberAccess	zobj -> ce		306984	0					
ANR	307292	Identifier	zobj		306984	0					
ANR	307293	Identifier	ce		306984	1					
ANR	307294	Identifier	__unset		306984	1					
ANR	307295	CompoundStatement		46:2:1257:1322	306984	1					
ANR	307296	IdentifierDeclStatement	"zend_long * guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) ) ;"	909:2:27627:27692	306984	0	True				
ANR	307297	IdentifierDecl	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		306984	0					
ANR	307298	IdentifierDeclType	zend_long *		306984	0					
ANR	307299	Identifier	guard		306984	1					
ANR	307300	AssignmentExpression	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		306984	2		=			
ANR	307301	Identifier	guard		306984	0					
ANR	307302	CallExpression	"zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		306984	1					
ANR	307303	Callee	zend_get_property_guard		306984	0					
ANR	307304	Identifier	zend_get_property_guard		306984	0					
ANR	307305	ArgumentList	zobj		306984	1					
ANR	307306	Argument	zobj		306984	0					
ANR	307307	Identifier	zobj		306984	0					
ANR	307308	Argument	Z_STR_P ( member )		306984	1					
ANR	307309	CallExpression	Z_STR_P ( member )		306984	0					
ANR	307310	Callee	Z_STR_P		306984	0					
ANR	307311	Identifier	Z_STR_P		306984	0					
ANR	307312	ArgumentList	member		306984	1					
ANR	307313	Argument	member		306984	0					
ANR	307314	Identifier	member		306984	0					
ANR	307315	IfStatement	if ( ! ( ( * guard ) & IN_UNSET ) )		306984	1					
ANR	307316	Condition	! ( ( * guard ) & IN_UNSET )	910:6:27700:27721	306984	0	True				
ANR	307317	UnaryOperationExpression	! ( ( * guard ) & IN_UNSET )		306984	0					
ANR	307318	UnaryOperator	!		306984	0					
ANR	307319	BitAndExpression	( * guard ) & IN_UNSET		306984	1		&			
ANR	307320	UnaryOperationExpression	* guard		306984	0					
ANR	307321	UnaryOperator	*		306984	0					
ANR	307322	Identifier	guard		306984	1					
ANR	307323	Identifier	IN_UNSET		306984	1					
ANR	307324	CompoundStatement		48:3:1359:1374	306984	1					
ANR	307325	IdentifierDeclStatement	zval tmp_object ;	911:3:27729:27744	306984	0	True				
ANR	307326	IdentifierDecl	tmp_object		306984	0					
ANR	307327	IdentifierDeclType	zval		306984	0					
ANR	307328	Identifier	tmp_object		306984	1					
ANR	307329	ExpressionStatement	"ZVAL_COPY ( & tmp_object , object )"	914:3:27787:27817	306984	1	True				
ANR	307330	CallExpression	"ZVAL_COPY ( & tmp_object , object )"		306984	0					
ANR	307331	Callee	ZVAL_COPY		306984	0					
ANR	307332	Identifier	ZVAL_COPY		306984	0					
ANR	307333	ArgumentList	& tmp_object		306984	1					
ANR	307334	Argument	& tmp_object		306984	0					
ANR	307335	UnaryOperationExpression	& tmp_object		306984	0					
ANR	307336	UnaryOperator	&		306984	0					
ANR	307337	Identifier	tmp_object		306984	1					
ANR	307338	Argument	object		306984	1					
ANR	307339	Identifier	object		306984	0					
ANR	307340	ExpressionStatement	( * guard ) |= IN_UNSET	915:3:27822:27842	306984	2	True				
ANR	307341	AssignmentExpression	( * guard ) |= IN_UNSET		306984	0		|=			
ANR	307342	UnaryOperationExpression	* guard		306984	0					
ANR	307343	UnaryOperator	*		306984	0					
ANR	307344	Identifier	guard		306984	1					
ANR	307345	Identifier	IN_UNSET		306984	1					
ANR	307346	ExpressionStatement	"zend_std_call_unsetter ( & tmp_object , member )"	916:3:27880:27923	306984	3	True				
ANR	307347	CallExpression	"zend_std_call_unsetter ( & tmp_object , member )"		306984	0					
ANR	307348	Callee	zend_std_call_unsetter		306984	0					
ANR	307349	Identifier	zend_std_call_unsetter		306984	0					
ANR	307350	ArgumentList	& tmp_object		306984	1					
ANR	307351	Argument	& tmp_object		306984	0					
ANR	307352	UnaryOperationExpression	& tmp_object		306984	0					
ANR	307353	UnaryOperator	&		306984	0					
ANR	307354	Identifier	tmp_object		306984	1					
ANR	307355	Argument	member		306984	1					
ANR	307356	Identifier	member		306984	0					
ANR	307357	ExpressionStatement	( * guard ) &= ~IN_UNSET	917:3:27928:27949	306984	4	True				
ANR	307358	AssignmentExpression	( * guard ) &= ~IN_UNSET		306984	0		&=			
ANR	307359	UnaryOperationExpression	* guard		306984	0					
ANR	307360	UnaryOperator	*		306984	0					
ANR	307361	Identifier	guard		306984	1					
ANR	307362	Identifier	~IN_UNSET		306984	1					
ANR	307363	ExpressionStatement	zval_ptr_dtor ( & tmp_object )	918:3:27954:27980	306984	5	True				
ANR	307364	CallExpression	zval_ptr_dtor ( & tmp_object )		306984	0					
ANR	307365	Callee	zval_ptr_dtor		306984	0					
ANR	307366	Identifier	zval_ptr_dtor		306984	0					
ANR	307367	ArgumentList	& tmp_object		306984	1					
ANR	307368	Argument	& tmp_object		306984	0					
ANR	307369	UnaryOperationExpression	& tmp_object		306984	0					
ANR	307370	UnaryOperator	&		306984	0					
ANR	307371	Identifier	tmp_object		306984	1					
ANR	307372	ElseStatement	else		306984	0					
ANR	307373	CompoundStatement		56:9:1621:1621	306984	0					
ANR	307374	IfStatement	if ( Z_STRVAL_P ( member ) [ 0 ] == '\\0' )		306984	0					
ANR	307375	Condition	Z_STRVAL_P ( member ) [ 0 ] == '\\0'	920:7:28000:28028	306984	0	True				
ANR	307376	EqualityExpression	Z_STRVAL_P ( member ) [ 0 ] == '\\0'		306984	0		==			
ANR	307377	ArrayIndexing	Z_STRVAL_P ( member ) [ 0 ]		306984	0					
ANR	307378	CallExpression	Z_STRVAL_P ( member )		306984	0					
ANR	307379	Callee	Z_STRVAL_P		306984	0					
ANR	307380	Identifier	Z_STRVAL_P		306984	0					
ANR	307381	ArgumentList	member		306984	1					
ANR	307382	Argument	member		306984	0					
ANR	307383	Identifier	member		306984	0					
ANR	307384	PrimaryExpression	0		306984	1					
ANR	307385	PrimaryExpression	'\\0'		306984	1					
ANR	307386	CompoundStatement		57:38:1661:1661	306984	1					
ANR	307387	IfStatement	if ( Z_STRLEN_P ( member ) == 0 )		306984	0					
ANR	307388	Condition	Z_STRLEN_P ( member ) == 0	921:8:28041:28063	306984	0	True				
ANR	307389	EqualityExpression	Z_STRLEN_P ( member ) == 0		306984	0		==			
ANR	307390	CallExpression	Z_STRLEN_P ( member )		306984	0					
ANR	307391	Callee	Z_STRLEN_P		306984	0					
ANR	307392	Identifier	Z_STRLEN_P		306984	0					
ANR	307393	ArgumentList	member		306984	1					
ANR	307394	Argument	member		306984	0					
ANR	307395	Identifier	member		306984	0					
ANR	307396	PrimaryExpression	0		306984	1					
ANR	307397	CompoundStatement		58:33:1696:1696	306984	1					
ANR	307398	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access empty property"" )"	922:5:28073:28127	306984	0	True				
ANR	307399	CallExpression	"zend_throw_error ( NULL , ""Cannot access empty property"" )"		306984	0					
ANR	307400	Callee	zend_throw_error		306984	0					
ANR	307401	Identifier	zend_throw_error		306984	0					
ANR	307402	ArgumentList	NULL		306984	1					
ANR	307403	Argument	NULL		306984	0					
ANR	307404	Identifier	NULL		306984	0					
ANR	307405	Argument	"""Cannot access empty property"""		306984	1					
ANR	307406	PrimaryExpression	"""Cannot access empty property"""		306984	0					
ANR	307407	GotoStatement	goto exit ;	923:5:28134:28143	306984	1	True				
ANR	307408	Identifier	exit		306984	0					
ANR	307409	ElseStatement	else		306984	0					
ANR	307410	CompoundStatement		61:11:1786:1786	306984	0					
ANR	307411	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"	925:5:28163:28230	306984	0	True				
ANR	307412	CallExpression	"zend_throw_error ( NULL , ""Cannot access property started with '\\\\0'"" )"		306984	0					
ANR	307413	Callee	zend_throw_error		306984	0					
ANR	307414	Identifier	zend_throw_error		306984	0					
ANR	307415	ArgumentList	NULL		306984	1					
ANR	307416	Argument	NULL		306984	0					
ANR	307417	Identifier	NULL		306984	0					
ANR	307418	Argument	"""Cannot access property started with '\\\\0'"""		306984	1					
ANR	307419	PrimaryExpression	"""Cannot access property started with '\\\\0'"""		306984	0					
ANR	307420	GotoStatement	goto exit ;	926:5:28237:28246	306984	1	True				
ANR	307421	Identifier	exit		306984	0					
ANR	307422	Label	exit :	932:0:28267:28271	306984	9	True				
ANR	307423	Identifier	exit		306984	0					
ANR	307424	IfStatement	if ( UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) ) )		306984	10					
ANR	307425	Condition	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )	933:5:28278:28313	306984	0	True				
ANR	307426	CallExpression	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )		306984	0					
ANR	307427	Callee	UNEXPECTED		306984	0					
ANR	307428	Identifier	UNEXPECTED		306984	0					
ANR	307429	ArgumentList	Z_REFCOUNTED ( tmp_member )		306984	1					
ANR	307430	Argument	Z_REFCOUNTED ( tmp_member )		306984	0					
ANR	307431	CallExpression	Z_REFCOUNTED ( tmp_member )		306984	0					
ANR	307432	Callee	Z_REFCOUNTED		306984	0					
ANR	307433	Identifier	Z_REFCOUNTED		306984	0					
ANR	307434	ArgumentList	tmp_member		306984	1					
ANR	307435	Argument	tmp_member		306984	0					
ANR	307436	Identifier	tmp_member		306984	0					
ANR	307437	CompoundStatement		70:43:1946:1946	306984	1					
ANR	307438	ExpressionStatement	zval_ptr_dtor ( & tmp_member )	934:2:28320:28346	306984	0	True				
ANR	307439	CallExpression	zval_ptr_dtor ( & tmp_member )		306984	0					
ANR	307440	Callee	zval_ptr_dtor		306984	0					
ANR	307441	Identifier	zval_ptr_dtor		306984	0					
ANR	307442	ArgumentList	& tmp_member		306984	1					
ANR	307443	Argument	& tmp_member		306984	0					
ANR	307444	UnaryOperationExpression	& tmp_member		306984	0					
ANR	307445	UnaryOperator	&		306984	0					
ANR	307446	Identifier	tmp_member		306984	1					
ANR	307447	ReturnType	static void		306984	1					
ANR	307448	Identifier	zend_std_unset_property		306984	2					
ANR	307449	ParameterList	"zval * object , zval * member , void * * cache_slot"		306984	3					
ANR	307450	Parameter	zval * object	863:36:26312:26323	306984	0	True				
ANR	307451	ParameterType	zval *		306984	0					
ANR	307452	Identifier	object		306984	1					
ANR	307453	Parameter	zval * member	863:50:26326:26337	306984	1	True				
ANR	307454	ParameterType	zval *		306984	0					
ANR	307455	Identifier	member		306984	1					
ANR	307456	Parameter	void * * cache_slot	863:64:26340:26356	306984	2	True				
ANR	307457	ParameterType	void * *		306984	0					
ANR	307458	Identifier	cache_slot		306984	1					
ANR	307459	CFGEntryNode	ENTRY		306984		True				
ANR	307460	CFGExitNode	EXIT		306984		True				
ANR	307461	Symbol	exception		306984						
ANR	307462	Symbol	zend_hash_del		306984						
ANR	307463	Symbol	zobj		306984						
ANR	307464	Symbol	GC_FLAGS		306984						
ANR	307465	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		306984						
ANR	307466	Symbol	ZEND_WRONG_PROPERTY_OFFSET		306984						
ANR	307467	Symbol	~IN_UNSET		306984						
ANR	307468	Symbol	IS_STRING		306984						
ANR	307469	Symbol	IS_UNDEF		306984						
ANR	307470	Symbol	zend_array_dup		306984						
ANR	307471	Symbol	cache_slot		306984						
ANR	307472	Symbol	EG		306984						
ANR	307473	Symbol	NULL		306984						
ANR	307474	Symbol	IN_UNSET		306984						
ANR	307475	Symbol	zend_get_property_offset		306984						
ANR	307476	Symbol	zend_get_property_guard		306984						
ANR	307477	Symbol	OBJ_PROP		306984						
ANR	307478	Symbol	zobj -> ce -> __unset		306984						
ANR	307479	Symbol	tmp_object		306984						
ANR	307480	Symbol	Z_STR_P		306984						
ANR	307481	Symbol	object		306984						
ANR	307482	Symbol	Z_REFCOUNTED		306984						
ANR	307483	Symbol	HASH_FLAG_HAS_EMPTY_IND		306984						
ANR	307484	Symbol	Z_OBJ_P		306984						
ANR	307485	Symbol	guard		306984						
ANR	307486	Symbol	* * zobj		306984						
ANR	307487	Symbol	slot		306984						
ANR	307488	Symbol	UNEXPECTED		306984						
ANR	307489	Symbol	zobj -> properties -> u . v . flags		306984						
ANR	307490	Symbol	* zobj		306984						
ANR	307491	Symbol	zobj -> properties		306984						
ANR	307492	Symbol	member		306984						
ANR	307493	Symbol	Z_STRLEN_P		306984						
ANR	307494	Symbol	* Z_STRVAL_P		306984						
ANR	307495	Symbol	GC_REFCOUNT		306984						
ANR	307496	Symbol	tmp_member		306984						
ANR	307497	Symbol	* zobj -> ce		306984						
ANR	307498	Symbol	zobj -> properties -> u		306984						
ANR	307499	Symbol	& tmp_member		306984						
ANR	307500	Symbol	zval_get_string		306984						
ANR	307501	Symbol	zobj -> ce		306984						
ANR	307502	Symbol	IS_ARRAY_IMMUTABLE		306984						
ANR	307503	Symbol	property_offset		306984						
ANR	307504	Symbol	Z_TYPE_P		306984						
ANR	307505	Symbol	FAILURE		306984						
ANR	307506	Symbol	* guard		306984						
ANR	307507	Symbol	Z_STRVAL_P		306984						
ANR	307508	Symbol	& tmp_object		306984						
ANR	307509	Symbol	zobj -> properties -> u . v		306984						
ANR	307510	Symbol	* zobj -> properties		306984						
ANR	307511	Symbol	EXPECTED		306984						
ANR	307512	Function	zend_std_unset_dimension	939:0:28364:28781							
ANR	307513	FunctionDef	"zend_std_unset_dimension (zval * object , zval * offset)"		307512	0					
ANR	307514	CompoundStatement		940:0:28439:28781	307512	0					
ANR	307515	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	941:1:28442:28482	307512	0	True				
ANR	307516	IdentifierDecl	* ce = Z_OBJCE_P ( object )		307512	0					
ANR	307517	IdentifierDeclType	zend_class_entry *		307512	0					
ANR	307518	Identifier	ce		307512	1					
ANR	307519	AssignmentExpression	* ce = Z_OBJCE_P ( object )		307512	2		=			
ANR	307520	Identifier	ce		307512	0					
ANR	307521	CallExpression	Z_OBJCE_P ( object )		307512	1					
ANR	307522	Callee	Z_OBJCE_P		307512	0					
ANR	307523	Identifier	Z_OBJCE_P		307512	0					
ANR	307524	ArgumentList	object		307512	1					
ANR	307525	Argument	object		307512	0					
ANR	307526	Identifier	object		307512	0					
ANR	307527	IfStatement	"if ( instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 ) )"		307512	1					
ANR	307528	Condition	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 )"	943:5:28490:28539	307512	0	True				
ANR	307529	CallExpression	"instanceof_function_ex ( ce , zend_ce_arrayaccess , 1 )"		307512	0					
ANR	307530	Callee	instanceof_function_ex		307512	0					
ANR	307531	Identifier	instanceof_function_ex		307512	0					
ANR	307532	ArgumentList	ce		307512	1					
ANR	307533	Argument	ce		307512	0					
ANR	307534	Identifier	ce		307512	0					
ANR	307535	Argument	zend_ce_arrayaccess		307512	1					
ANR	307536	Identifier	zend_ce_arrayaccess		307512	0					
ANR	307537	Argument	1		307512	2					
ANR	307538	PrimaryExpression	1		307512	0					
ANR	307539	CompoundStatement		4:57:102:102	307512	1					
ANR	307540	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	944:2:28546:28573	307512	0	True				
ANR	307541	CallExpression	SEPARATE_ARG_IF_REF ( offset )		307512	0					
ANR	307542	Callee	SEPARATE_ARG_IF_REF		307512	0					
ANR	307543	Identifier	SEPARATE_ARG_IF_REF		307512	0					
ANR	307544	ArgumentList	offset		307512	1					
ANR	307545	Argument	offset		307512	0					
ANR	307546	Identifier	offset		307512	0					
ANR	307547	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetunset"" , NULL , offset )"	945:2:28577:28654	307512	1	True				
ANR	307548	CallExpression	"zend_call_method_with_1_params ( object , ce , NULL , ""offsetunset"" , NULL , offset )"		307512	0					
ANR	307549	Callee	zend_call_method_with_1_params		307512	0					
ANR	307550	Identifier	zend_call_method_with_1_params		307512	0					
ANR	307551	ArgumentList	object		307512	1					
ANR	307552	Argument	object		307512	0					
ANR	307553	Identifier	object		307512	0					
ANR	307554	Argument	ce		307512	1					
ANR	307555	Identifier	ce		307512	0					
ANR	307556	Argument	NULL		307512	2					
ANR	307557	Identifier	NULL		307512	0					
ANR	307558	Argument	"""offsetunset"""		307512	3					
ANR	307559	PrimaryExpression	"""offsetunset"""		307512	0					
ANR	307560	Argument	NULL		307512	4					
ANR	307561	Identifier	NULL		307512	0					
ANR	307562	Argument	offset		307512	5					
ANR	307563	Identifier	offset		307512	0					
ANR	307564	ExpressionStatement	zval_ptr_dtor ( offset )	946:2:28658:28679	307512	2	True				
ANR	307565	CallExpression	zval_ptr_dtor ( offset )		307512	0					
ANR	307566	Callee	zval_ptr_dtor		307512	0					
ANR	307567	Identifier	zval_ptr_dtor		307512	0					
ANR	307568	ArgumentList	offset		307512	1					
ANR	307569	Argument	offset		307512	0					
ANR	307570	Identifier	offset		307512	0					
ANR	307571	ElseStatement	else		307512	0					
ANR	307572	CompoundStatement		8:8:249:249	307512	0					
ANR	307573	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"	948:2:28693:28776	307512	0	True				
ANR	307574	CallExpression	"zend_throw_error ( NULL , ""Cannot use object of type %s as array"" , ZSTR_VAL ( ce -> name ) )"		307512	0					
ANR	307575	Callee	zend_throw_error		307512	0					
ANR	307576	Identifier	zend_throw_error		307512	0					
ANR	307577	ArgumentList	NULL		307512	1					
ANR	307578	Argument	NULL		307512	0					
ANR	307579	Identifier	NULL		307512	0					
ANR	307580	Argument	"""Cannot use object of type %s as array"""		307512	1					
ANR	307581	PrimaryExpression	"""Cannot use object of type %s as array"""		307512	0					
ANR	307582	Argument	ZSTR_VAL ( ce -> name )		307512	2					
ANR	307583	CallExpression	ZSTR_VAL ( ce -> name )		307512	0					
ANR	307584	Callee	ZSTR_VAL		307512	0					
ANR	307585	Identifier	ZSTR_VAL		307512	0					
ANR	307586	ArgumentList	ce -> name		307512	1					
ANR	307587	Argument	ce -> name		307512	0					
ANR	307588	PtrMemberAccess	ce -> name		307512	0					
ANR	307589	Identifier	ce		307512	0					
ANR	307590	Identifier	name		307512	1					
ANR	307591	ReturnType	static void		307512	1					
ANR	307592	Identifier	zend_std_unset_dimension		307512	2					
ANR	307593	ParameterList	"zval * object , zval * offset"		307512	3					
ANR	307594	Parameter	zval * object	939:37:28401:28412	307512	0	True				
ANR	307595	ParameterType	zval *		307512	0					
ANR	307596	Identifier	object		307512	1					
ANR	307597	Parameter	zval * offset	939:51:28415:28426	307512	1	True				
ANR	307598	ParameterType	zval *		307512	0					
ANR	307599	Identifier	offset		307512	1					
ANR	307600	CFGEntryNode	ENTRY		307512		True				
ANR	307601	CFGExitNode	EXIT		307512		True				
ANR	307602	Symbol	ce		307512						
ANR	307603	Symbol	NULL		307512						
ANR	307604	Symbol	offset		307512						
ANR	307605	Symbol	zend_ce_arrayaccess		307512						
ANR	307606	Symbol	Z_OBJCE_P		307512						
ANR	307607	Symbol	instanceof_function_ex		307512						
ANR	307608	Symbol	* ce		307512						
ANR	307609	Symbol	ce -> name		307512						
ANR	307610	Symbol	object		307512						
ANR	307611	Symbol	ZSTR_VAL		307512						
ANR	307612	Function	zend_check_private_int	957:0:28948:29907							
ANR	307613	FunctionDef	"zend_check_private_int (zend_function * fbc , zend_class_entry * ce , zend_string * function_name)"		307612	0					
ANR	307614	CompoundStatement		958:0:29080:29907	307612	0					
ANR	307615	IdentifierDeclStatement	zval * func ;	959:4:29086:29096	307612	0	True				
ANR	307616	IdentifierDecl	* func		307612	0					
ANR	307617	IdentifierDeclType	zval *		307612	0					
ANR	307618	Identifier	func		307612	1					
ANR	307619	IfStatement	if ( ! ce )		307612	1					
ANR	307620	Condition	! ce	961:5:29104:29106	307612	0	True				
ANR	307621	UnaryOperationExpression	! ce		307612	0					
ANR	307622	UnaryOperator	!		307612	0					
ANR	307623	Identifier	ce		307612	1					
ANR	307624	CompoundStatement		4:10:28:28	307612	1					
ANR	307625	ReturnStatement	return 0 ;	962:2:29113:29121	307612	0	True				
ANR	307626	PrimaryExpression	0		307612	0					
ANR	307627	IfStatement	if ( fbc -> common . scope == ce && EG ( scope ) == ce )		307612	2					
ANR	307628	Condition	fbc -> common . scope == ce && EG ( scope ) == ce	971:5:29445:29486	307612	0	True				
ANR	307629	AndExpression	fbc -> common . scope == ce && EG ( scope ) == ce		307612	0		&&			
ANR	307630	EqualityExpression	fbc -> common . scope == ce		307612	0		==			
ANR	307631	MemberAccess	fbc -> common . scope		307612	0					
ANR	307632	PtrMemberAccess	fbc -> common		307612	0					
ANR	307633	Identifier	fbc		307612	0					
ANR	307634	Identifier	common		307612	1					
ANR	307635	Identifier	scope		307612	1					
ANR	307636	Identifier	ce		307612	1					
ANR	307637	EqualityExpression	EG ( scope ) == ce		307612	1		==			
ANR	307638	CallExpression	EG ( scope )		307612	0					
ANR	307639	Callee	EG		307612	0					
ANR	307640	Identifier	EG		307612	0					
ANR	307641	ArgumentList	scope		307612	1					
ANR	307642	Argument	scope		307612	0					
ANR	307643	Identifier	scope		307612	0					
ANR	307644	Identifier	ce		307612	1					
ANR	307645	CompoundStatement		14:49:408:408	307612	1					
ANR	307646	ReturnStatement	return fbc ;	973:2:29548:29558	307612	0	True				
ANR	307647	Identifier	fbc		307612	0					
ANR	307648	ExpressionStatement	ce = ce -> parent	978:1:29587:29602	307612	3	True				
ANR	307649	AssignmentExpression	ce = ce -> parent		307612	0		=			
ANR	307650	Identifier	ce		307612	0					
ANR	307651	PtrMemberAccess	ce -> parent		307612	1					
ANR	307652	Identifier	ce		307612	0					
ANR	307653	Identifier	parent		307612	1					
ANR	307654	WhileStatement	while ( ce )		307612	4					
ANR	307655	Condition	ce	979:8:29612:29613	307612	0	True				
ANR	307656	Identifier	ce		307612	0					
ANR	307657	CompoundStatement		22:12:535:535	307612	1					
ANR	307658	IfStatement	if ( ce == EG ( scope ) )		307612	0					
ANR	307659	Condition	ce == EG ( scope )	980:6:29624:29638	307612	0	True				
ANR	307660	EqualityExpression	ce == EG ( scope )		307612	0		==			
ANR	307661	Identifier	ce		307612	0					
ANR	307662	CallExpression	EG ( scope )		307612	1					
ANR	307663	Callee	EG		307612	0					
ANR	307664	Identifier	EG		307612	0					
ANR	307665	ArgumentList	scope		307612	1					
ANR	307666	Argument	scope		307612	0					
ANR	307667	Identifier	scope		307612	0					
ANR	307668	CompoundStatement		23:23:560:560	307612	1					
ANR	307669	IfStatement	"if ( ( func = zend_hash_find ( & ce -> function_table , function_name ) ) )"		307612	0					
ANR	307670	Condition	"func = zend_hash_find ( & ce -> function_table , function_name )"	981:7:29650:29708	307612	0	True				
ANR	307671	AssignmentExpression	"func = zend_hash_find ( & ce -> function_table , function_name )"		307612	0		=			
ANR	307672	Identifier	func		307612	0					
ANR	307673	CallExpression	"zend_hash_find ( & ce -> function_table , function_name )"		307612	1					
ANR	307674	Callee	zend_hash_find		307612	0					
ANR	307675	Identifier	zend_hash_find		307612	0					
ANR	307676	ArgumentList	& ce -> function_table		307612	1					
ANR	307677	Argument	& ce -> function_table		307612	0					
ANR	307678	UnaryOperationExpression	& ce -> function_table		307612	0					
ANR	307679	UnaryOperator	&		307612	0					
ANR	307680	PtrMemberAccess	ce -> function_table		307612	1					
ANR	307681	Identifier	ce		307612	0					
ANR	307682	Identifier	function_table		307612	1					
ANR	307683	Argument	function_name		307612	1					
ANR	307684	Identifier	function_name		307612	0					
ANR	307685	CompoundStatement		24:68:630:630	307612	1					
ANR	307686	ExpressionStatement	fbc = Z_FUNC_P ( func )	982:4:29717:29737	307612	0	True				
ANR	307687	AssignmentExpression	fbc = Z_FUNC_P ( func )		307612	0		=			
ANR	307688	Identifier	fbc		307612	0					
ANR	307689	CallExpression	Z_FUNC_P ( func )		307612	1					
ANR	307690	Callee	Z_FUNC_P		307612	0					
ANR	307691	Identifier	Z_FUNC_P		307612	0					
ANR	307692	ArgumentList	func		307612	1					
ANR	307693	Argument	func		307612	0					
ANR	307694	Identifier	func		307612	0					
ANR	307695	IfStatement	if ( fbc -> common . fn_flags & ZEND_ACC_PRIVATE && fbc -> common . scope == EG ( scope ) )		307612	1					
ANR	307696	Condition	fbc -> common . fn_flags & ZEND_ACC_PRIVATE && fbc -> common . scope == EG ( scope )	983:8:29747:29824	307612	0	True				
ANR	307697	AndExpression	fbc -> common . fn_flags & ZEND_ACC_PRIVATE && fbc -> common . scope == EG ( scope )		307612	0		&&			
ANR	307698	BitAndExpression	fbc -> common . fn_flags & ZEND_ACC_PRIVATE		307612	0		&			
ANR	307699	MemberAccess	fbc -> common . fn_flags		307612	0					
ANR	307700	PtrMemberAccess	fbc -> common		307612	0					
ANR	307701	Identifier	fbc		307612	0					
ANR	307702	Identifier	common		307612	1					
ANR	307703	Identifier	fn_flags		307612	1					
ANR	307704	Identifier	ZEND_ACC_PRIVATE		307612	1					
ANR	307705	EqualityExpression	fbc -> common . scope == EG ( scope )		307612	1		==			
ANR	307706	MemberAccess	fbc -> common . scope		307612	0					
ANR	307707	PtrMemberAccess	fbc -> common		307612	0					
ANR	307708	Identifier	fbc		307612	0					
ANR	307709	Identifier	common		307612	1					
ANR	307710	Identifier	scope		307612	1					
ANR	307711	CallExpression	EG ( scope )		307612	1					
ANR	307712	Callee	EG		307612	0					
ANR	307713	Identifier	EG		307612	0					
ANR	307714	ArgumentList	scope		307612	1					
ANR	307715	Argument	scope		307612	0					
ANR	307716	Identifier	scope		307612	0					
ANR	307717	CompoundStatement		27:40:746:746	307612	1					
ANR	307718	ReturnStatement	return fbc ;	985:5:29834:29844	307612	0	True				
ANR	307719	Identifier	fbc		307612	0					
ANR	307720	BreakStatement	break ;	988:3:29860:29865	307612	1	True				
ANR	307721	ExpressionStatement	ce = ce -> parent	990:2:29873:29888	307612	1	True				
ANR	307722	AssignmentExpression	ce = ce -> parent		307612	0		=			
ANR	307723	Identifier	ce		307612	0					
ANR	307724	PtrMemberAccess	ce -> parent		307612	1					
ANR	307725	Identifier	ce		307612	0					
ANR	307726	Identifier	parent		307612	1					
ANR	307727	ReturnStatement	return NULL ;	992:1:29894:29905	307612	5	True				
ANR	307728	Identifier	NULL		307612	0					
ANR	307729	ReturnType	static inline zend_function *		307612	1					
ANR	307730	Identifier	zend_check_private_int		307612	2					
ANR	307731	ParameterList	"zend_function * fbc , zend_class_entry * ce , zend_string * function_name"		307612	3					
ANR	307732	Parameter	zend_function * fbc	957:52:29000:29017	307612	0	True				
ANR	307733	ParameterType	zend_function *		307612	0					
ANR	307734	Identifier	fbc		307612	1					
ANR	307735	Parameter	zend_class_entry * ce	957:72:29020:29039	307612	1	True				
ANR	307736	ParameterType	zend_class_entry *		307612	0					
ANR	307737	Identifier	ce		307612	1					
ANR	307738	Parameter	zend_string * function_name	957:94:29042:29067	307612	2	True				
ANR	307739	ParameterType	zend_string *		307612	0					
ANR	307740	Identifier	function_name		307612	1					
ANR	307741	CFGEntryNode	ENTRY		307612		True				
ANR	307742	CFGExitNode	EXIT		307612		True				
ANR	307743	Symbol	ce		307612						
ANR	307744	Symbol	EG		307612						
ANR	307745	Symbol	NULL		307612						
ANR	307746	Symbol	ce -> parent		307612						
ANR	307747	Symbol	Z_FUNC_P		307612						
ANR	307748	Symbol	fbc		307612						
ANR	307749	Symbol	& ce -> function_table		307612						
ANR	307750	Symbol	* ce		307612						
ANR	307751	Symbol	fbc -> common		307612						
ANR	307752	Symbol	* fbc		307612						
ANR	307753	Symbol	ZEND_ACC_PRIVATE		307612						
ANR	307754	Symbol	zend_hash_find		307612						
ANR	307755	Symbol	func		307612						
ANR	307756	Symbol	function_name		307612						
ANR	307757	Symbol	scope		307612						
ANR	307758	Symbol	fbc -> common . fn_flags		307612						
ANR	307759	Symbol	fbc -> common . scope		307612						
ANR	307760	Function	zend_check_private	996:0:29920:30098							
ANR	307761	FunctionDef	"zend_check_private (zend_function * fbc , zend_class_entry * ce , zend_string * function_name)"		307760	0					
ANR	307762	CompoundStatement		997:0:30032:30098	307760	0					
ANR	307763	ReturnStatement	"return zend_check_private_int ( fbc , ce , function_name ) != NULL ;"	998:1:30035:30096	307760	0	True				
ANR	307764	EqualityExpression	"zend_check_private_int ( fbc , ce , function_name ) != NULL"		307760	0		!=			
ANR	307765	CallExpression	"zend_check_private_int ( fbc , ce , function_name )"		307760	0					
ANR	307766	Callee	zend_check_private_int		307760	0					
ANR	307767	Identifier	zend_check_private_int		307760	0					
ANR	307768	ArgumentList	fbc		307760	1					
ANR	307769	Argument	fbc		307760	0					
ANR	307770	Identifier	fbc		307760	0					
ANR	307771	Argument	ce		307760	1					
ANR	307772	Identifier	ce		307760	0					
ANR	307773	Argument	function_name		307760	2					
ANR	307774	Identifier	function_name		307760	0					
ANR	307775	Identifier	NULL		307760	1					
ANR	307776	ReturnType	ZEND_API int		307760	1					
ANR	307777	Identifier	zend_check_private		307760	2					
ANR	307778	ParameterList	"zend_function * fbc , zend_class_entry * ce , zend_string * function_name"		307760	3					
ANR	307779	Parameter	zend_function * fbc	996:32:29952:29969	307760	0	True				
ANR	307780	ParameterType	zend_function *		307760	0					
ANR	307781	Identifier	fbc		307760	1					
ANR	307782	Parameter	zend_class_entry * ce	996:52:29972:29991	307760	1	True				
ANR	307783	ParameterType	zend_class_entry *		307760	0					
ANR	307784	Identifier	ce		307760	1					
ANR	307785	Parameter	zend_string * function_name	996:74:29994:30019	307760	2	True				
ANR	307786	ParameterType	zend_string *		307760	0					
ANR	307787	Identifier	function_name		307760	1					
ANR	307788	CFGEntryNode	ENTRY		307760		True				
ANR	307789	CFGExitNode	EXIT		307760		True				
ANR	307790	Symbol	ce		307760						
ANR	307791	Symbol	NULL		307760						
ANR	307792	Symbol	fbc		307760						
ANR	307793	Symbol	function_name		307760						
ANR	307794	Symbol	zend_check_private_int		307760						
ANR	307795	Function	zend_check_protected	1004:0:30173:30710							
ANR	307796	FunctionDef	"zend_check_protected (zend_class_entry * ce , zend_class_entry * scope)"		307795	0					
ANR	307797	CompoundStatement		1005:0:30264:30710	307795	0					
ANR	307798	IdentifierDeclStatement	zend_class_entry * fbc_scope = ce ;	1006:1:30267:30299	307795	0	True				
ANR	307799	IdentifierDecl	* fbc_scope = ce		307795	0					
ANR	307800	IdentifierDeclType	zend_class_entry *		307795	0					
ANR	307801	Identifier	fbc_scope		307795	1					
ANR	307802	AssignmentExpression	* fbc_scope = ce		307795	2		=			
ANR	307803	Identifier	ce		307795	0					
ANR	307804	Identifier	ce		307795	1					
ANR	307805	WhileStatement	while ( fbc_scope )		307795	1					
ANR	307806	Condition	fbc_scope	1011:8:30410:30418	307795	0	True				
ANR	307807	Identifier	fbc_scope		307795	0					
ANR	307808	CompoundStatement		7:19:156:156	307795	1					
ANR	307809	IfStatement	if ( fbc_scope == scope )		307795	0					
ANR	307810	Condition	fbc_scope == scope	1012:6:30429:30444	307795	0	True				
ANR	307811	EqualityExpression	fbc_scope == scope		307795	0		==			
ANR	307812	Identifier	fbc_scope		307795	0					
ANR	307813	Identifier	scope		307795	1					
ANR	307814	CompoundStatement		8:24:182:182	307795	1					
ANR	307815	ReturnStatement	return 1 ;	1013:3:30452:30460	307795	0	True				
ANR	307816	PrimaryExpression	1		307795	0					
ANR	307817	ExpressionStatement	fbc_scope = fbc_scope -> parent	1015:2:30468:30497	307795	1	True				
ANR	307818	AssignmentExpression	fbc_scope = fbc_scope -> parent		307795	0		=			
ANR	307819	Identifier	fbc_scope		307795	0					
ANR	307820	PtrMemberAccess	fbc_scope -> parent		307795	1					
ANR	307821	Identifier	fbc_scope		307795	0					
ANR	307822	Identifier	parent		307795	1					
ANR	307823	WhileStatement	while ( scope )		307795	2					
ANR	307824	Condition	scope	1021:8:30626:30630	307795	0	True				
ANR	307825	Identifier	scope		307795	0					
ANR	307826	CompoundStatement		17:15:368:368	307795	1					
ANR	307827	IfStatement	if ( scope == ce )		307795	0					
ANR	307828	Condition	scope == ce	1022:6:30641:30649	307795	0	True				
ANR	307829	EqualityExpression	scope == ce		307795	0		==			
ANR	307830	Identifier	scope		307795	0					
ANR	307831	Identifier	ce		307795	1					
ANR	307832	CompoundStatement		18:17:387:387	307795	1					
ANR	307833	ReturnStatement	return 1 ;	1023:3:30657:30665	307795	0	True				
ANR	307834	PrimaryExpression	1		307795	0					
ANR	307835	ExpressionStatement	scope = scope -> parent	1025:2:30673:30694	307795	1	True				
ANR	307836	AssignmentExpression	scope = scope -> parent		307795	0		=			
ANR	307837	Identifier	scope		307795	0					
ANR	307838	PtrMemberAccess	scope -> parent		307795	1					
ANR	307839	Identifier	scope		307795	0					
ANR	307840	Identifier	parent		307795	1					
ANR	307841	ReturnStatement	return 0 ;	1027:1:30700:30708	307795	3	True				
ANR	307842	PrimaryExpression	0		307795	0					
ANR	307843	ReturnType	ZEND_API int		307795	1					
ANR	307844	Identifier	zend_check_protected		307795	2					
ANR	307845	ParameterList	"zend_class_entry * ce , zend_class_entry * scope"		307795	3					
ANR	307846	Parameter	zend_class_entry * ce	1004:34:30207:30226	307795	0	True				
ANR	307847	ParameterType	zend_class_entry *		307795	0					
ANR	307848	Identifier	ce		307795	1					
ANR	307849	Parameter	zend_class_entry * scope	1004:56:30229:30251	307795	1	True				
ANR	307850	ParameterType	zend_class_entry *		307795	0					
ANR	307851	Identifier	scope		307795	1					
ANR	307852	CFGEntryNode	ENTRY		307795		True				
ANR	307853	CFGExitNode	EXIT		307795		True				
ANR	307854	Symbol	ce		307795						
ANR	307855	Symbol	fbc_scope -> parent		307795						
ANR	307856	Symbol	fbc_scope		307795						
ANR	307857	Symbol	scope -> parent		307795						
ANR	307858	Symbol	* fbc_scope		307795						
ANR	307859	Symbol	scope		307795						
ANR	307860	Symbol	* scope		307795						
ANR	307861	Function	zend_get_call_trampoline_func	1031:0:30723:32092							
ANR	307862	FunctionDef	"zend_get_call_trampoline_func (zend_class_entry * ce , zend_string * method_name , int is_static)"		307861	0					
ANR	307863	CompoundStatement		1032:0:30850:32092	307861	0					
ANR	307864	IdentifierDeclStatement	zend_op_array * func ;	1033:1:30853:30872	307861	0	True				
ANR	307865	IdentifierDecl	* func		307861	0					
ANR	307866	IdentifierDeclType	zend_op_array *		307861	0					
ANR	307867	Identifier	func		307861	1					
ANR	307868	IdentifierDeclStatement	zend_function * fbc = is_static ? ce -> __callstatic : ce -> __call ;	1034:1:30875:30937	307861	1	True				
ANR	307869	IdentifierDecl	* fbc = is_static ? ce -> __callstatic : ce -> __call		307861	0					
ANR	307870	IdentifierDeclType	zend_function *		307861	0					
ANR	307871	Identifier	fbc		307861	1					
ANR	307872	AssignmentExpression	* fbc = is_static ? ce -> __callstatic : ce -> __call		307861	2		=			
ANR	307873	Identifier	fbc		307861	0					
ANR	307874	ConditionalExpression	is_static ? ce -> __callstatic : ce -> __call		307861	1					
ANR	307875	Condition	is_static		307861	0					
ANR	307876	Identifier	is_static		307861	0					
ANR	307877	PtrMemberAccess	ce -> __callstatic		307861	1					
ANR	307878	Identifier	ce		307861	0					
ANR	307879	Identifier	__callstatic		307861	1					
ANR	307880	PtrMemberAccess	ce -> __call		307861	2					
ANR	307881	Identifier	ce		307861	0					
ANR	307882	Identifier	__call		307861	1					
ANR	307883	ExpressionStatement	ZEND_ASSERT ( fbc )	1036:1:30941:30957	307861	2	True				
ANR	307884	CallExpression	ZEND_ASSERT ( fbc )		307861	0					
ANR	307885	Callee	ZEND_ASSERT		307861	0					
ANR	307886	Identifier	ZEND_ASSERT		307861	0					
ANR	307887	ArgumentList	fbc		307861	1					
ANR	307888	Argument	fbc		307861	0					
ANR	307889	Identifier	fbc		307861	0					
ANR	307890	IfStatement	if ( EXPECTED ( EG ( trampoline ) . common . function_name == NULL ) )		307861	3					
ANR	307891	Condition	EXPECTED ( EG ( trampoline ) . common . function_name == NULL )	1038:5:30965:31017	307861	0	True				
ANR	307892	CallExpression	EXPECTED ( EG ( trampoline ) . common . function_name == NULL )		307861	0					
ANR	307893	Callee	EXPECTED		307861	0					
ANR	307894	Identifier	EXPECTED		307861	0					
ANR	307895	ArgumentList	EG ( trampoline ) . common . function_name == NULL		307861	1					
ANR	307896	Argument	EG ( trampoline ) . common . function_name == NULL		307861	0					
ANR	307897	EqualityExpression	EG ( trampoline ) . common . function_name == NULL		307861	0		==			
ANR	307898	MemberAccess	EG ( trampoline ) . common . function_name		307861	0					
ANR	307899	MemberAccess	EG ( trampoline ) . common		307861	0					
ANR	307900	CallExpression	EG ( trampoline )		307861	0					
ANR	307901	Callee	EG		307861	0					
ANR	307902	Identifier	EG		307861	0					
ANR	307903	ArgumentList	trampoline		307861	1					
ANR	307904	Argument	trampoline		307861	0					
ANR	307905	Identifier	trampoline		307861	0					
ANR	307906	Identifier	common		307861	1					
ANR	307907	Identifier	function_name		307861	1					
ANR	307908	Identifier	NULL		307861	1					
ANR	307909	CompoundStatement		7:60:169:169	307861	1					
ANR	307910	ExpressionStatement	func = & EG ( trampoline ) . op_array	1039:2:31024:31055	307861	0	True				
ANR	307911	AssignmentExpression	func = & EG ( trampoline ) . op_array		307861	0		=			
ANR	307912	Identifier	func		307861	0					
ANR	307913	UnaryOperationExpression	& EG ( trampoline ) . op_array		307861	1					
ANR	307914	UnaryOperator	&		307861	0					
ANR	307915	MemberAccess	EG ( trampoline ) . op_array		307861	1					
ANR	307916	CallExpression	EG ( trampoline )		307861	0					
ANR	307917	Callee	EG		307861	0					
ANR	307918	Identifier	EG		307861	0					
ANR	307919	ArgumentList	trampoline		307861	1					
ANR	307920	Argument	trampoline		307861	0					
ANR	307921	Identifier	trampoline		307861	0					
ANR	307922	Identifier	op_array		307861	1					
ANR	307923	ElseStatement	else		307861	0					
ANR	307924	CompoundStatement		9:8:214:214	307861	0					
ANR	307925	ExpressionStatement	"func = ecalloc ( 1 , sizeof ( zend_op_array ) )"	1041:2:31069:31109	307861	0	True				
ANR	307926	AssignmentExpression	"func = ecalloc ( 1 , sizeof ( zend_op_array ) )"		307861	0		=			
ANR	307927	Identifier	func		307861	0					
ANR	307928	CallExpression	"ecalloc ( 1 , sizeof ( zend_op_array ) )"		307861	1					
ANR	307929	Callee	ecalloc		307861	0					
ANR	307930	Identifier	ecalloc		307861	0					
ANR	307931	ArgumentList	1		307861	1					
ANR	307932	Argument	1		307861	0					
ANR	307933	PrimaryExpression	1		307861	0					
ANR	307934	Argument	sizeof ( zend_op_array )		307861	1					
ANR	307935	SizeofExpression	sizeof ( zend_op_array )		307861	0					
ANR	307936	Sizeof	sizeof		307861	0					
ANR	307937	SizeofOperand	zend_op_array		307861	1					
ANR	307938	ExpressionStatement	func -> type = ZEND_USER_FUNCTION	1044:1:31116:31147	307861	4	True				
ANR	307939	AssignmentExpression	func -> type = ZEND_USER_FUNCTION		307861	0		=			
ANR	307940	PtrMemberAccess	func -> type		307861	0					
ANR	307941	Identifier	func		307861	0					
ANR	307942	Identifier	type		307861	1					
ANR	307943	Identifier	ZEND_USER_FUNCTION		307861	1					
ANR	307944	ExpressionStatement	func -> arg_flags [ 0 ] = 0	1045:1:31150:31172	307861	5	True				
ANR	307945	AssignmentExpression	func -> arg_flags [ 0 ] = 0		307861	0		=			
ANR	307946	ArrayIndexing	func -> arg_flags [ 0 ]		307861	0					
ANR	307947	PtrMemberAccess	func -> arg_flags		307861	0					
ANR	307948	Identifier	func		307861	0					
ANR	307949	Identifier	arg_flags		307861	1					
ANR	307950	PrimaryExpression	0		307861	1					
ANR	307951	PrimaryExpression	0		307861	1					
ANR	307952	ExpressionStatement	func -> arg_flags [ 1 ] = 0	1046:1:31175:31197	307861	6	True				
ANR	307953	AssignmentExpression	func -> arg_flags [ 1 ] = 0		307861	0		=			
ANR	307954	ArrayIndexing	func -> arg_flags [ 1 ]		307861	0					
ANR	307955	PtrMemberAccess	func -> arg_flags		307861	0					
ANR	307956	Identifier	func		307861	0					
ANR	307957	Identifier	arg_flags		307861	1					
ANR	307958	PrimaryExpression	1		307861	1					
ANR	307959	PrimaryExpression	0		307861	1					
ANR	307960	ExpressionStatement	func -> arg_flags [ 2 ] = 0	1047:1:31200:31222	307861	7	True				
ANR	307961	AssignmentExpression	func -> arg_flags [ 2 ] = 0		307861	0		=			
ANR	307962	ArrayIndexing	func -> arg_flags [ 2 ]		307861	0					
ANR	307963	PtrMemberAccess	func -> arg_flags		307861	0					
ANR	307964	Identifier	func		307861	0					
ANR	307965	Identifier	arg_flags		307861	1					
ANR	307966	PrimaryExpression	2		307861	1					
ANR	307967	PrimaryExpression	0		307861	1					
ANR	307968	ExpressionStatement	func -> fn_flags = ZEND_ACC_CALL_VIA_TRAMPOLINE | ZEND_ACC_PUBLIC	1048:1:31225:31288	307861	8	True				
ANR	307969	AssignmentExpression	func -> fn_flags = ZEND_ACC_CALL_VIA_TRAMPOLINE | ZEND_ACC_PUBLIC		307861	0		=			
ANR	307970	PtrMemberAccess	func -> fn_flags		307861	0					
ANR	307971	Identifier	func		307861	0					
ANR	307972	Identifier	fn_flags		307861	1					
ANR	307973	InclusiveOrExpression	ZEND_ACC_CALL_VIA_TRAMPOLINE | ZEND_ACC_PUBLIC		307861	1		|			
ANR	307974	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		307861	0					
ANR	307975	Identifier	ZEND_ACC_PUBLIC		307861	1					
ANR	307976	IfStatement	if ( is_static )		307861	9					
ANR	307977	Condition	is_static	1049:5:31295:31303	307861	0	True				
ANR	307978	Identifier	is_static		307861	0					
ANR	307979	CompoundStatement		18:16:455:455	307861	1					
ANR	307980	ExpressionStatement	func -> fn_flags |= ZEND_ACC_STATIC	1050:2:31310:31343	307861	0	True				
ANR	307981	AssignmentExpression	func -> fn_flags |= ZEND_ACC_STATIC		307861	0		|=			
ANR	307982	PtrMemberAccess	func -> fn_flags		307861	0					
ANR	307983	Identifier	func		307861	0					
ANR	307984	Identifier	fn_flags		307861	1					
ANR	307985	Identifier	ZEND_ACC_STATIC		307861	1					
ANR	307986	ExpressionStatement	func -> this_var = - 1	1052:1:31349:31368	307861	10	True				
ANR	307987	AssignmentExpression	func -> this_var = - 1		307861	0		=			
ANR	307988	PtrMemberAccess	func -> this_var		307861	0					
ANR	307989	Identifier	func		307861	0					
ANR	307990	Identifier	this_var		307861	1					
ANR	307991	UnaryOperationExpression	- 1		307861	1					
ANR	307992	UnaryOperator	-		307861	0					
ANR	307993	PrimaryExpression	1		307861	1					
ANR	307994	ExpressionStatement	func -> opcodes = & EG ( call_trampoline_op )	1053:1:31371:31410	307861	11	True				
ANR	307995	AssignmentExpression	func -> opcodes = & EG ( call_trampoline_op )		307861	0		=			
ANR	307996	PtrMemberAccess	func -> opcodes		307861	0					
ANR	307997	Identifier	func		307861	0					
ANR	307998	Identifier	opcodes		307861	1					
ANR	307999	UnaryOperationExpression	& EG ( call_trampoline_op )		307861	1					
ANR	308000	UnaryOperator	&		307861	0					
ANR	308001	CallExpression	EG ( call_trampoline_op )		307861	1					
ANR	308002	Callee	EG		307861	0					
ANR	308003	Identifier	EG		307861	0					
ANR	308004	ArgumentList	call_trampoline_op		307861	1					
ANR	308005	Argument	call_trampoline_op		307861	0					
ANR	308006	Identifier	call_trampoline_op		307861	0					
ANR	308007	ExpressionStatement	func -> prototype = fbc	1055:1:31414:31435	307861	12	True				
ANR	308008	AssignmentExpression	func -> prototype = fbc		307861	0		=			
ANR	308009	PtrMemberAccess	func -> prototype		307861	0					
ANR	308010	Identifier	func		307861	0					
ANR	308011	Identifier	prototype		307861	1					
ANR	308012	Identifier	fbc		307861	1					
ANR	308013	ExpressionStatement	func -> scope = fbc -> common . scope	1056:1:31438:31469	307861	13	True				
ANR	308014	AssignmentExpression	func -> scope = fbc -> common . scope		307861	0		=			
ANR	308015	PtrMemberAccess	func -> scope		307861	0					
ANR	308016	Identifier	func		307861	0					
ANR	308017	Identifier	scope		307861	1					
ANR	308018	MemberAccess	fbc -> common . scope		307861	1					
ANR	308019	PtrMemberAccess	fbc -> common		307861	0					
ANR	308020	Identifier	fbc		307861	0					
ANR	308021	Identifier	common		307861	1					
ANR	308022	Identifier	scope		307861	1					
ANR	308023	ExpressionStatement	func -> filename = ( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . filename : ZSTR_EMPTY_ALLOC ( )	1057:1:31472:31567	307861	14	True				
ANR	308024	AssignmentExpression	func -> filename = ( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . filename : ZSTR_EMPTY_ALLOC ( )		307861	0		=			
ANR	308025	PtrMemberAccess	func -> filename		307861	0					
ANR	308026	Identifier	func		307861	0					
ANR	308027	Identifier	filename		307861	1					
ANR	308028	ConditionalExpression	( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . filename : ZSTR_EMPTY_ALLOC ( )		307861	1					
ANR	308029	Condition	fbc -> type == ZEND_USER_FUNCTION		307861	0					
ANR	308030	EqualityExpression	fbc -> type == ZEND_USER_FUNCTION		307861	0		==			
ANR	308031	PtrMemberAccess	fbc -> type		307861	0					
ANR	308032	Identifier	fbc		307861	0					
ANR	308033	Identifier	type		307861	1					
ANR	308034	Identifier	ZEND_USER_FUNCTION		307861	1					
ANR	308035	MemberAccess	fbc -> op_array . filename		307861	1					
ANR	308036	PtrMemberAccess	fbc -> op_array		307861	0					
ANR	308037	Identifier	fbc		307861	0					
ANR	308038	Identifier	op_array		307861	1					
ANR	308039	Identifier	filename		307861	1					
ANR	308040	CallExpression	ZSTR_EMPTY_ALLOC ( )		307861	2					
ANR	308041	Callee	ZSTR_EMPTY_ALLOC		307861	0					
ANR	308042	Identifier	ZSTR_EMPTY_ALLOC		307861	0					
ANR	308043	ArgumentList			307861	1					
ANR	308044	ExpressionStatement	func -> line_start = ( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . line_start : 0	1058:1:31570:31652	307861	15	True				
ANR	308045	AssignmentExpression	func -> line_start = ( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . line_start : 0		307861	0		=			
ANR	308046	PtrMemberAccess	func -> line_start		307861	0					
ANR	308047	Identifier	func		307861	0					
ANR	308048	Identifier	line_start		307861	1					
ANR	308049	ConditionalExpression	( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . line_start : 0		307861	1					
ANR	308050	Condition	fbc -> type == ZEND_USER_FUNCTION		307861	0					
ANR	308051	EqualityExpression	fbc -> type == ZEND_USER_FUNCTION		307861	0		==			
ANR	308052	PtrMemberAccess	fbc -> type		307861	0					
ANR	308053	Identifier	fbc		307861	0					
ANR	308054	Identifier	type		307861	1					
ANR	308055	Identifier	ZEND_USER_FUNCTION		307861	1					
ANR	308056	MemberAccess	fbc -> op_array . line_start		307861	1					
ANR	308057	PtrMemberAccess	fbc -> op_array		307861	0					
ANR	308058	Identifier	fbc		307861	0					
ANR	308059	Identifier	op_array		307861	1					
ANR	308060	Identifier	line_start		307861	1					
ANR	308061	PrimaryExpression	0		307861	2					
ANR	308062	ExpressionStatement	func -> line_end = ( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . line_end : 0	1059:1:31655:31733	307861	16	True				
ANR	308063	AssignmentExpression	func -> line_end = ( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . line_end : 0		307861	0		=			
ANR	308064	PtrMemberAccess	func -> line_end		307861	0					
ANR	308065	Identifier	func		307861	0					
ANR	308066	Identifier	line_end		307861	1					
ANR	308067	ConditionalExpression	( fbc -> type == ZEND_USER_FUNCTION ) ? fbc -> op_array . line_end : 0		307861	1					
ANR	308068	Condition	fbc -> type == ZEND_USER_FUNCTION		307861	0					
ANR	308069	EqualityExpression	fbc -> type == ZEND_USER_FUNCTION		307861	0		==			
ANR	308070	PtrMemberAccess	fbc -> type		307861	0					
ANR	308071	Identifier	fbc		307861	0					
ANR	308072	Identifier	type		307861	1					
ANR	308073	Identifier	ZEND_USER_FUNCTION		307861	1					
ANR	308074	MemberAccess	fbc -> op_array . line_end		307861	1					
ANR	308075	PtrMemberAccess	fbc -> op_array		307861	0					
ANR	308076	Identifier	fbc		307861	0					
ANR	308077	Identifier	op_array		307861	1					
ANR	308078	Identifier	line_end		307861	1					
ANR	308079	PrimaryExpression	0		307861	2					
ANR	308080	IfStatement	if ( UNEXPECTED ( strlen ( ZSTR_VAL ( method_name ) ) != ZSTR_LEN ( method_name ) ) )		307861	17					
ANR	308081	Condition	UNEXPECTED ( strlen ( ZSTR_VAL ( method_name ) ) != ZSTR_LEN ( method_name ) )	1063:5:31824:31889	307861	0	True				
ANR	308082	CallExpression	UNEXPECTED ( strlen ( ZSTR_VAL ( method_name ) ) != ZSTR_LEN ( method_name ) )		307861	0					
ANR	308083	Callee	UNEXPECTED		307861	0					
ANR	308084	Identifier	UNEXPECTED		307861	0					
ANR	308085	ArgumentList	strlen ( ZSTR_VAL ( method_name ) ) != ZSTR_LEN ( method_name )		307861	1					
ANR	308086	Argument	strlen ( ZSTR_VAL ( method_name ) ) != ZSTR_LEN ( method_name )		307861	0					
ANR	308087	EqualityExpression	strlen ( ZSTR_VAL ( method_name ) ) != ZSTR_LEN ( method_name )		307861	0		!=			
ANR	308088	CallExpression	strlen ( ZSTR_VAL ( method_name ) )		307861	0					
ANR	308089	Callee	strlen		307861	0					
ANR	308090	Identifier	strlen		307861	0					
ANR	308091	ArgumentList	ZSTR_VAL ( method_name )		307861	1					
ANR	308092	Argument	ZSTR_VAL ( method_name )		307861	0					
ANR	308093	CallExpression	ZSTR_VAL ( method_name )		307861	0					
ANR	308094	Callee	ZSTR_VAL		307861	0					
ANR	308095	Identifier	ZSTR_VAL		307861	0					
ANR	308096	ArgumentList	method_name		307861	1					
ANR	308097	Argument	method_name		307861	0					
ANR	308098	Identifier	method_name		307861	0					
ANR	308099	CallExpression	ZSTR_LEN ( method_name )		307861	1					
ANR	308100	Callee	ZSTR_LEN		307861	0					
ANR	308101	Identifier	ZSTR_LEN		307861	0					
ANR	308102	ArgumentList	method_name		307861	1					
ANR	308103	Argument	method_name		307861	0					
ANR	308104	Identifier	method_name		307861	0					
ANR	308105	CompoundStatement		32:73:1041:1041	307861	1					
ANR	308106	ExpressionStatement	"func -> function_name = zend_string_init ( ZSTR_VAL ( method_name ) , strlen ( ZSTR_VAL ( method_name ) ) , 0 )"	1064:2:31896:31991	307861	0	True				
ANR	308107	AssignmentExpression	"func -> function_name = zend_string_init ( ZSTR_VAL ( method_name ) , strlen ( ZSTR_VAL ( method_name ) ) , 0 )"		307861	0		=			
ANR	308108	PtrMemberAccess	func -> function_name		307861	0					
ANR	308109	Identifier	func		307861	0					
ANR	308110	Identifier	function_name		307861	1					
ANR	308111	CallExpression	"zend_string_init ( ZSTR_VAL ( method_name ) , strlen ( ZSTR_VAL ( method_name ) ) , 0 )"		307861	1					
ANR	308112	Callee	zend_string_init		307861	0					
ANR	308113	Identifier	zend_string_init		307861	0					
ANR	308114	ArgumentList	ZSTR_VAL ( method_name )		307861	1					
ANR	308115	Argument	ZSTR_VAL ( method_name )		307861	0					
ANR	308116	CallExpression	ZSTR_VAL ( method_name )		307861	0					
ANR	308117	Callee	ZSTR_VAL		307861	0					
ANR	308118	Identifier	ZSTR_VAL		307861	0					
ANR	308119	ArgumentList	method_name		307861	1					
ANR	308120	Argument	method_name		307861	0					
ANR	308121	Identifier	method_name		307861	0					
ANR	308122	Argument	strlen ( ZSTR_VAL ( method_name ) )		307861	1					
ANR	308123	CallExpression	strlen ( ZSTR_VAL ( method_name ) )		307861	0					
ANR	308124	Callee	strlen		307861	0					
ANR	308125	Identifier	strlen		307861	0					
ANR	308126	ArgumentList	ZSTR_VAL ( method_name )		307861	1					
ANR	308127	Argument	ZSTR_VAL ( method_name )		307861	0					
ANR	308128	CallExpression	ZSTR_VAL ( method_name )		307861	0					
ANR	308129	Callee	ZSTR_VAL		307861	0					
ANR	308130	Identifier	ZSTR_VAL		307861	0					
ANR	308131	ArgumentList	method_name		307861	1					
ANR	308132	Argument	method_name		307861	0					
ANR	308133	Identifier	method_name		307861	0					
ANR	308134	Argument	0		307861	2					
ANR	308135	PrimaryExpression	0		307861	0					
ANR	308136	ElseStatement	else		307861	0					
ANR	308137	CompoundStatement		34:8:1150:1150	307861	0					
ANR	308138	ExpressionStatement	func -> function_name = zend_string_copy ( method_name )	1066:2:32005:32056	307861	0	True				
ANR	308139	AssignmentExpression	func -> function_name = zend_string_copy ( method_name )		307861	0		=			
ANR	308140	PtrMemberAccess	func -> function_name		307861	0					
ANR	308141	Identifier	func		307861	0					
ANR	308142	Identifier	function_name		307861	1					
ANR	308143	CallExpression	zend_string_copy ( method_name )		307861	1					
ANR	308144	Callee	zend_string_copy		307861	0					
ANR	308145	Identifier	zend_string_copy		307861	0					
ANR	308146	ArgumentList	method_name		307861	1					
ANR	308147	Argument	method_name		307861	0					
ANR	308148	Identifier	method_name		307861	0					
ANR	308149	ReturnStatement	return ( zend_function * ) func ;	1069:1:32063:32090	307861	18	True				
ANR	308150	CastExpression	( zend_function * ) func		307861	0					
ANR	308151	CastTarget	zend_function *		307861	0					
ANR	308152	Identifier	func		307861	1					
ANR	308153	ReturnType	ZEND_API zend_function *		307861	1					
ANR	308154	Identifier	zend_get_call_trampoline_func		307861	2					
ANR	308155	ParameterList	"zend_class_entry * ce , zend_string * method_name , int is_static"		307861	3					
ANR	308156	Parameter	zend_class_entry * ce	1031:54:30777:30796	307861	0	True				
ANR	308157	ParameterType	zend_class_entry *		307861	0					
ANR	308158	Identifier	ce		307861	1					
ANR	308159	Parameter	zend_string * method_name	1031:76:30799:30822	307861	1	True				
ANR	308160	ParameterType	zend_string *		307861	0					
ANR	308161	Identifier	method_name		307861	1					
ANR	308162	Parameter	int is_static	1031:102:30825:30837	307861	2	True				
ANR	308163	ParameterType	int		307861	0					
ANR	308164	Identifier	is_static		307861	1					
ANR	308165	CFGEntryNode	ENTRY		307861		True				
ANR	308166	CFGExitNode	EXIT		307861		True				
ANR	308167	Symbol	* ce		307861						
ANR	308168	Symbol	* func -> arg_flags		307861						
ANR	308169	Symbol	strlen		307861						
ANR	308170	Symbol	zend_string_init		307861						
ANR	308171	Symbol	func -> function_name		307861						
ANR	308172	Symbol	method_name		307861						
ANR	308173	Symbol	& EG ( trampoline ) . op_array		307861						
ANR	308174	Symbol	func -> scope		307861						
ANR	308175	Symbol	ZEND_USER_FUNCTION		307861						
ANR	308176	Symbol	call_trampoline_op		307861						
ANR	308177	Symbol	ecalloc		307861						
ANR	308178	Symbol	trampoline		307861						
ANR	308179	Symbol	ce -> __callstatic		307861						
ANR	308180	Symbol	EG		307861						
ANR	308181	Symbol	NULL		307861						
ANR	308182	Symbol	fbc		307861						
ANR	308183	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		307861						
ANR	308184	Symbol	zend_string_copy		307861						
ANR	308185	Symbol	func -> fn_flags		307861						
ANR	308186	Symbol	EG ( trampoline ) . common		307861						
ANR	308187	Symbol	func -> prototype		307861						
ANR	308188	Symbol	ce -> __call		307861						
ANR	308189	Symbol	func -> line_start		307861						
ANR	308190	Symbol	func -> line_end		307861						
ANR	308191	Symbol	ZEND_ACC_PUBLIC		307861						
ANR	308192	Symbol	fbc -> type		307861						
ANR	308193	Symbol	fbc -> op_array . line_end		307861						
ANR	308194	Symbol	func -> opcodes		307861						
ANR	308195	Symbol	& EG		307861						
ANR	308196	Symbol	ZSTR_EMPTY_ALLOC		307861						
ANR	308197	Symbol	UNEXPECTED		307861						
ANR	308198	Symbol	fbc -> op_array		307861						
ANR	308199	Symbol	is_static		307861						
ANR	308200	Symbol	func -> arg_flags		307861						
ANR	308201	Symbol	ZEND_ACC_STATIC		307861						
ANR	308202	Symbol	func -> type		307861						
ANR	308203	Symbol	fbc -> common . scope		307861						
ANR	308204	Symbol	ce		307861						
ANR	308205	Symbol	* func		307861						
ANR	308206	Symbol	fbc -> op_array . filename		307861						
ANR	308207	Symbol	func -> this_var		307861						
ANR	308208	Symbol	* * func		307861						
ANR	308209	Symbol	func -> filename		307861						
ANR	308210	Symbol	fbc -> common		307861						
ANR	308211	Symbol	* fbc		307861						
ANR	308212	Symbol	ZSTR_VAL		307861						
ANR	308213	Symbol	func		307861						
ANR	308214	Symbol	ZSTR_LEN		307861						
ANR	308215	Symbol	EXPECTED		307861						
ANR	308216	Symbol	EG ( trampoline ) . common . function_name		307861						
ANR	308217	Symbol	fbc -> op_array . line_start		307861						
ANR	308218	Function	zend_get_user_call_function	1073:0:32105:32293							
ANR	308219	FunctionDef	"zend_get_user_call_function (zend_class_entry * ce , zend_string * method_name)"		308218	0					
ANR	308220	CompoundStatement		1074:0:32232:32293	308218	0					
ANR	308221	ReturnStatement	"return zend_get_call_trampoline_func ( ce , method_name , 0 ) ;"	1075:1:32235:32291	308218	0	True				
ANR	308222	CallExpression	"zend_get_call_trampoline_func ( ce , method_name , 0 )"		308218	0					
ANR	308223	Callee	zend_get_call_trampoline_func		308218	0					
ANR	308224	Identifier	zend_get_call_trampoline_func		308218	0					
ANR	308225	ArgumentList	ce		308218	1					
ANR	308226	Argument	ce		308218	0					
ANR	308227	Identifier	ce		308218	0					
ANR	308228	Argument	method_name		308218	1					
ANR	308229	Identifier	method_name		308218	0					
ANR	308230	Argument	0		308218	2					
ANR	308231	PrimaryExpression	0		308218	0					
ANR	308232	ReturnType	static zend_always_inline zend_function *		308218	1					
ANR	308233	Identifier	zend_get_user_call_function		308218	2					
ANR	308234	ParameterList	"zend_class_entry * ce , zend_string * method_name"		308218	3					
ANR	308235	Parameter	zend_class_entry * ce	1073:69:32174:32193	308218	0	True				
ANR	308236	ParameterType	zend_class_entry *		308218	0					
ANR	308237	Identifier	ce		308218	1					
ANR	308238	Parameter	zend_string * method_name	1073:91:32196:32219	308218	1	True				
ANR	308239	ParameterType	zend_string *		308218	0					
ANR	308240	Identifier	method_name		308218	1					
ANR	308241	CFGEntryNode	ENTRY		308218		True				
ANR	308242	CFGExitNode	EXIT		308218		True				
ANR	308243	Symbol	ce		308218						
ANR	308244	Symbol	method_name		308218						
ANR	308245	Symbol	zend_get_call_trampoline_func		308218						
ANR	308246	Function	zend_std_get_method	1079:0:32306:35198							
ANR	308247	FunctionDef	"zend_std_get_method (zend_object * * obj_ptr , zend_string * method_name , const zval * key)"		308246	0					
ANR	308248	CompoundStatement		1080:0:32431:35198	308246	0					
ANR	308249	IdentifierDeclStatement	zend_object * zobj = * obj_ptr ;	1081:1:32434:32462	308246	0	True				
ANR	308250	IdentifierDecl	* zobj = * obj_ptr		308246	0					
ANR	308251	IdentifierDeclType	zend_object *		308246	0					
ANR	308252	Identifier	zobj		308246	1					
ANR	308253	AssignmentExpression	* zobj = * obj_ptr		308246	2		=			
ANR	308254	Identifier	zobj		308246	0					
ANR	308255	UnaryOperationExpression	* obj_ptr		308246	1					
ANR	308256	UnaryOperator	*		308246	0					
ANR	308257	Identifier	obj_ptr		308246	1					
ANR	308258	IdentifierDeclStatement	zval * func ;	1082:1:32465:32475	308246	1	True				
ANR	308259	IdentifierDecl	* func		308246	0					
ANR	308260	IdentifierDeclType	zval *		308246	0					
ANR	308261	Identifier	func		308246	1					
ANR	308262	IdentifierDeclStatement	zend_function * fbc ;	1083:1:32478:32496	308246	2	True				
ANR	308263	IdentifierDecl	* fbc		308246	0					
ANR	308264	IdentifierDeclType	zend_function *		308246	0					
ANR	308265	Identifier	fbc		308246	1					
ANR	308266	IdentifierDeclStatement	zend_string * lc_method_name ;	1084:1:32499:32526	308246	3	True				
ANR	308267	IdentifierDecl	* lc_method_name		308246	0					
ANR	308268	IdentifierDeclType	zend_string *		308246	0					
ANR	308269	Identifier	lc_method_name		308246	1					
ANR	308270	ExpressionStatement	ALLOCA_FLAG ( use_heap )	1085:1:32529:32550	308246	4	True				
ANR	308271	CallExpression	ALLOCA_FLAG ( use_heap )		308246	0					
ANR	308272	Callee	ALLOCA_FLAG		308246	0					
ANR	308273	Identifier	ALLOCA_FLAG		308246	0					
ANR	308274	ArgumentList	use_heap		308246	1					
ANR	308275	Argument	use_heap		308246	0					
ANR	308276	Identifier	use_heap		308246	0					
ANR	308277	IfStatement	if ( EXPECTED ( key != NULL ) )		308246	5					
ANR	308278	Condition	EXPECTED ( key != NULL )	1087:5:32558:32578	308246	0	True				
ANR	308279	CallExpression	EXPECTED ( key != NULL )		308246	0					
ANR	308280	Callee	EXPECTED		308246	0					
ANR	308281	Identifier	EXPECTED		308246	0					
ANR	308282	ArgumentList	key != NULL		308246	1					
ANR	308283	Argument	key != NULL		308246	0					
ANR	308284	EqualityExpression	key != NULL		308246	0		!=			
ANR	308285	Identifier	key		308246	0					
ANR	308286	Identifier	NULL		308246	1					
ANR	308287	CompoundStatement		8:28:149:149	308246	1					
ANR	308288	ExpressionStatement	lc_method_name = Z_STR_P ( key )	1088:2:32585:32614	308246	0	True				
ANR	308289	AssignmentExpression	lc_method_name = Z_STR_P ( key )		308246	0		=			
ANR	308290	Identifier	lc_method_name		308246	0					
ANR	308291	CallExpression	Z_STR_P ( key )		308246	1					
ANR	308292	Callee	Z_STR_P		308246	0					
ANR	308293	Identifier	Z_STR_P		308246	0					
ANR	308294	ArgumentList	key		308246	1					
ANR	308295	Argument	key		308246	0					
ANR	308296	Identifier	key		308246	0					
ANR	308297	ExpressionStatement	use_heap = 0	1090:2:32646:32658	308246	1	True				
ANR	308298	AssignmentExpression	use_heap = 0		308246	0		=			
ANR	308299	Identifier	use_heap		308246	0					
ANR	308300	PrimaryExpression	0		308246	1					
ANR	308301	ElseStatement	else		308246	0					
ANR	308302	CompoundStatement		13:8:243:243	308246	0					
ANR	308303	ExpressionStatement	"ZSTR_ALLOCA_ALLOC ( lc_method_name , ZSTR_LEN ( method_name ) , use_heap )"	1093:2:32679:32745	308246	0	True				
ANR	308304	CallExpression	"ZSTR_ALLOCA_ALLOC ( lc_method_name , ZSTR_LEN ( method_name ) , use_heap )"		308246	0					
ANR	308305	Callee	ZSTR_ALLOCA_ALLOC		308246	0					
ANR	308306	Identifier	ZSTR_ALLOCA_ALLOC		308246	0					
ANR	308307	ArgumentList	lc_method_name		308246	1					
ANR	308308	Argument	lc_method_name		308246	0					
ANR	308309	Identifier	lc_method_name		308246	0					
ANR	308310	Argument	ZSTR_LEN ( method_name )		308246	1					
ANR	308311	CallExpression	ZSTR_LEN ( method_name )		308246	0					
ANR	308312	Callee	ZSTR_LEN		308246	0					
ANR	308313	Identifier	ZSTR_LEN		308246	0					
ANR	308314	ArgumentList	method_name		308246	1					
ANR	308315	Argument	method_name		308246	0					
ANR	308316	Identifier	method_name		308246	0					
ANR	308317	Argument	use_heap		308246	2					
ANR	308318	Identifier	use_heap		308246	0					
ANR	308319	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lc_method_name ) , ZSTR_VAL ( method_name ) , ZSTR_LEN ( method_name ) )"	1094:2:32749:32842	308246	1	True				
ANR	308320	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lc_method_name ) , ZSTR_VAL ( method_name ) , ZSTR_LEN ( method_name ) )"		308246	0					
ANR	308321	Callee	zend_str_tolower_copy		308246	0					
ANR	308322	Identifier	zend_str_tolower_copy		308246	0					
ANR	308323	ArgumentList	ZSTR_VAL ( lc_method_name )		308246	1					
ANR	308324	Argument	ZSTR_VAL ( lc_method_name )		308246	0					
ANR	308325	CallExpression	ZSTR_VAL ( lc_method_name )		308246	0					
ANR	308326	Callee	ZSTR_VAL		308246	0					
ANR	308327	Identifier	ZSTR_VAL		308246	0					
ANR	308328	ArgumentList	lc_method_name		308246	1					
ANR	308329	Argument	lc_method_name		308246	0					
ANR	308330	Identifier	lc_method_name		308246	0					
ANR	308331	Argument	ZSTR_VAL ( method_name )		308246	1					
ANR	308332	CallExpression	ZSTR_VAL ( method_name )		308246	0					
ANR	308333	Callee	ZSTR_VAL		308246	0					
ANR	308334	Identifier	ZSTR_VAL		308246	0					
ANR	308335	ArgumentList	method_name		308246	1					
ANR	308336	Argument	method_name		308246	0					
ANR	308337	Identifier	method_name		308246	0					
ANR	308338	Argument	ZSTR_LEN ( method_name )		308246	2					
ANR	308339	CallExpression	ZSTR_LEN ( method_name )		308246	0					
ANR	308340	Callee	ZSTR_LEN		308246	0					
ANR	308341	Identifier	ZSTR_LEN		308246	0					
ANR	308342	ArgumentList	method_name		308246	1					
ANR	308343	Argument	method_name		308246	0					
ANR	308344	Identifier	method_name		308246	0					
ANR	308345	IfStatement	"if ( UNEXPECTED ( ( func = zend_hash_find ( & zobj -> ce -> function_table , lc_method_name ) ) == NULL ) )"		308246	6					
ANR	308346	Condition	"UNEXPECTED ( ( func = zend_hash_find ( & zobj -> ce -> function_table , lc_method_name ) ) == NULL )"	1097:5:32853:32938	308246	0	True				
ANR	308347	CallExpression	"UNEXPECTED ( ( func = zend_hash_find ( & zobj -> ce -> function_table , lc_method_name ) ) == NULL )"		308246	0					
ANR	308348	Callee	UNEXPECTED		308246	0					
ANR	308349	Identifier	UNEXPECTED		308246	0					
ANR	308350	ArgumentList	"( func = zend_hash_find ( & zobj -> ce -> function_table , lc_method_name ) ) == NULL"		308246	1					
ANR	308351	Argument	"( func = zend_hash_find ( & zobj -> ce -> function_table , lc_method_name ) ) == NULL"		308246	0					
ANR	308352	EqualityExpression	"( func = zend_hash_find ( & zobj -> ce -> function_table , lc_method_name ) ) == NULL"		308246	0		==			
ANR	308353	AssignmentExpression	"func = zend_hash_find ( & zobj -> ce -> function_table , lc_method_name )"		308246	0		=			
ANR	308354	Identifier	func		308246	0					
ANR	308355	CallExpression	"zend_hash_find ( & zobj -> ce -> function_table , lc_method_name )"		308246	1					
ANR	308356	Callee	zend_hash_find		308246	0					
ANR	308357	Identifier	zend_hash_find		308246	0					
ANR	308358	ArgumentList	& zobj -> ce -> function_table		308246	1					
ANR	308359	Argument	& zobj -> ce -> function_table		308246	0					
ANR	308360	UnaryOperationExpression	& zobj -> ce -> function_table		308246	0					
ANR	308361	UnaryOperator	&		308246	0					
ANR	308362	PtrMemberAccess	zobj -> ce -> function_table		308246	1					
ANR	308363	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308364	Identifier	zobj		308246	0					
ANR	308365	Identifier	ce		308246	1					
ANR	308366	Identifier	function_table		308246	1					
ANR	308367	Argument	lc_method_name		308246	1					
ANR	308368	Identifier	lc_method_name		308246	0					
ANR	308369	Identifier	NULL		308246	1					
ANR	308370	CompoundStatement		18:93:509:509	308246	1					
ANR	308371	IfStatement	if ( UNEXPECTED ( ! key ) )		308246	0					
ANR	308372	Condition	UNEXPECTED ( ! key )	1098:6:32949:32964	308246	0	True				
ANR	308373	CallExpression	UNEXPECTED ( ! key )		308246	0					
ANR	308374	Callee	UNEXPECTED		308246	0					
ANR	308375	Identifier	UNEXPECTED		308246	0					
ANR	308376	ArgumentList	! key		308246	1					
ANR	308377	Argument	! key		308246	0					
ANR	308378	UnaryOperationExpression	! key		308246	0					
ANR	308379	UnaryOperator	!		308246	0					
ANR	308380	Identifier	key		308246	1					
ANR	308381	CompoundStatement		19:24:535:535	308246	1					
ANR	308382	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lc_method_name , use_heap )"	1099:3:32972:33014	308246	0	True				
ANR	308383	CallExpression	"ZSTR_ALLOCA_FREE ( lc_method_name , use_heap )"		308246	0					
ANR	308384	Callee	ZSTR_ALLOCA_FREE		308246	0					
ANR	308385	Identifier	ZSTR_ALLOCA_FREE		308246	0					
ANR	308386	ArgumentList	lc_method_name		308246	1					
ANR	308387	Argument	lc_method_name		308246	0					
ANR	308388	Identifier	lc_method_name		308246	0					
ANR	308389	Argument	use_heap		308246	1					
ANR	308390	Identifier	use_heap		308246	0					
ANR	308391	IfStatement	if ( zobj -> ce -> __call )		308246	1					
ANR	308392	Condition	zobj -> ce -> __call	1101:6:33026:33041	308246	0	True				
ANR	308393	PtrMemberAccess	zobj -> ce -> __call		308246	0					
ANR	308394	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308395	Identifier	zobj		308246	0					
ANR	308396	Identifier	ce		308246	1					
ANR	308397	Identifier	__call		308246	1					
ANR	308398	CompoundStatement		22:24:612:612	308246	1					
ANR	308399	ReturnStatement	"return zend_get_user_call_function ( zobj -> ce , method_name ) ;"	1102:3:33049:33106	308246	0	True				
ANR	308400	CallExpression	"zend_get_user_call_function ( zobj -> ce , method_name )"		308246	0					
ANR	308401	Callee	zend_get_user_call_function		308246	0					
ANR	308402	Identifier	zend_get_user_call_function		308246	0					
ANR	308403	ArgumentList	zobj -> ce		308246	1					
ANR	308404	Argument	zobj -> ce		308246	0					
ANR	308405	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308406	Identifier	zobj		308246	0					
ANR	308407	Identifier	ce		308246	1					
ANR	308408	Argument	method_name		308246	1					
ANR	308409	Identifier	method_name		308246	0					
ANR	308410	ElseStatement	else		308246	0					
ANR	308411	CompoundStatement		24:9:685:685	308246	0					
ANR	308412	ReturnStatement	return NULL ;	1104:3:33122:33133	308246	0	True				
ANR	308413	Identifier	NULL		308246	0					
ANR	308414	ExpressionStatement	fbc = Z_FUNC_P ( func )	1108:1:33144:33164	308246	7	True				
ANR	308415	AssignmentExpression	fbc = Z_FUNC_P ( func )		308246	0		=			
ANR	308416	Identifier	fbc		308246	0					
ANR	308417	CallExpression	Z_FUNC_P ( func )		308246	1					
ANR	308418	Callee	Z_FUNC_P		308246	0					
ANR	308419	Identifier	Z_FUNC_P		308246	0					
ANR	308420	ArgumentList	func		308246	1					
ANR	308421	Argument	func		308246	0					
ANR	308422	Identifier	func		308246	0					
ANR	308423	IfStatement	if ( fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE )		308246	8					
ANR	308424	Condition	fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE	1110:5:33197:33237	308246	0	True				
ANR	308425	BitAndExpression	fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE		308246	0		&			
ANR	308426	MemberAccess	fbc -> op_array . fn_flags		308246	0					
ANR	308427	PtrMemberAccess	fbc -> op_array		308246	0					
ANR	308428	Identifier	fbc		308246	0					
ANR	308429	Identifier	op_array		308246	1					
ANR	308430	Identifier	fn_flags		308246	1					
ANR	308431	Identifier	ZEND_ACC_PRIVATE		308246	1					
ANR	308432	CompoundStatement		32:2:812:838	308246	1					
ANR	308433	IdentifierDeclStatement	zend_function * updated_fbc ;	1111:2:33244:33270	308246	0	True				
ANR	308434	IdentifierDecl	* updated_fbc		308246	0					
ANR	308435	IdentifierDeclType	zend_function *		308246	0					
ANR	308436	Identifier	updated_fbc		308246	1					
ANR	308437	ExpressionStatement	"updated_fbc = zend_check_private_int ( fbc , zobj -> ce , lc_method_name )"	1116:2:33438:33505	308246	1	True				
ANR	308438	AssignmentExpression	"updated_fbc = zend_check_private_int ( fbc , zobj -> ce , lc_method_name )"		308246	0		=			
ANR	308439	Identifier	updated_fbc		308246	0					
ANR	308440	CallExpression	"zend_check_private_int ( fbc , zobj -> ce , lc_method_name )"		308246	1					
ANR	308441	Callee	zend_check_private_int		308246	0					
ANR	308442	Identifier	zend_check_private_int		308246	0					
ANR	308443	ArgumentList	fbc		308246	1					
ANR	308444	Argument	fbc		308246	0					
ANR	308445	Identifier	fbc		308246	0					
ANR	308446	Argument	zobj -> ce		308246	1					
ANR	308447	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308448	Identifier	zobj		308246	0					
ANR	308449	Identifier	ce		308246	1					
ANR	308450	Argument	lc_method_name		308246	2					
ANR	308451	Identifier	lc_method_name		308246	0					
ANR	308452	IfStatement	if ( EXPECTED ( updated_fbc != NULL ) )		308246	2					
ANR	308453	Condition	EXPECTED ( updated_fbc != NULL )	1117:6:33513:33541	308246	0	True				
ANR	308454	CallExpression	EXPECTED ( updated_fbc != NULL )		308246	0					
ANR	308455	Callee	EXPECTED		308246	0					
ANR	308456	Identifier	EXPECTED		308246	0					
ANR	308457	ArgumentList	updated_fbc != NULL		308246	1					
ANR	308458	Argument	updated_fbc != NULL		308246	0					
ANR	308459	EqualityExpression	updated_fbc != NULL		308246	0		!=			
ANR	308460	Identifier	updated_fbc		308246	0					
ANR	308461	Identifier	NULL		308246	1					
ANR	308462	CompoundStatement		38:37:1112:1112	308246	1					
ANR	308463	ExpressionStatement	fbc = updated_fbc	1118:3:33549:33566	308246	0	True				
ANR	308464	AssignmentExpression	fbc = updated_fbc		308246	0		=			
ANR	308465	Identifier	fbc		308246	0					
ANR	308466	Identifier	updated_fbc		308246	1					
ANR	308467	ElseStatement	else		308246	0					
ANR	308468	CompoundStatement		40:9:1145:1145	308246	0					
ANR	308469	IfStatement	if ( zobj -> ce -> __call )		308246	0					
ANR	308470	Condition	zobj -> ce -> __call	1120:7:33586:33601	308246	0	True				
ANR	308471	PtrMemberAccess	zobj -> ce -> __call		308246	0					
ANR	308472	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308473	Identifier	zobj		308246	0					
ANR	308474	Identifier	ce		308246	1					
ANR	308475	Identifier	__call		308246	1					
ANR	308476	CompoundStatement		41:25:1172:1172	308246	1					
ANR	308477	ExpressionStatement	"fbc = zend_get_user_call_function ( zobj -> ce , method_name )"	1121:4:33610:33666	308246	0	True				
ANR	308478	AssignmentExpression	"fbc = zend_get_user_call_function ( zobj -> ce , method_name )"		308246	0		=			
ANR	308479	Identifier	fbc		308246	0					
ANR	308480	CallExpression	"zend_get_user_call_function ( zobj -> ce , method_name )"		308246	1					
ANR	308481	Callee	zend_get_user_call_function		308246	0					
ANR	308482	Identifier	zend_get_user_call_function		308246	0					
ANR	308483	ArgumentList	zobj -> ce		308246	1					
ANR	308484	Argument	zobj -> ce		308246	0					
ANR	308485	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308486	Identifier	zobj		308246	0					
ANR	308487	Identifier	ce		308246	1					
ANR	308488	Argument	method_name		308246	1					
ANR	308489	Identifier	method_name		308246	0					
ANR	308490	ElseStatement	else		308246	0					
ANR	308491	CompoundStatement		43:10:1246:1246	308246	0					
ANR	308492	ExpressionStatement	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( method_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"	1123:4:33684:33892	308246	0	True				
ANR	308493	CallExpression	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( method_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"		308246	0					
ANR	308494	Callee	zend_throw_error		308246	0					
ANR	308495	Identifier	zend_throw_error		308246	0					
ANR	308496	ArgumentList	NULL		308246	1					
ANR	308497	Argument	NULL		308246	0					
ANR	308498	Identifier	NULL		308246	0					
ANR	308499	Argument	"""Call to %s method %s::%s() from context '%s'"""		308246	1					
ANR	308500	PrimaryExpression	"""Call to %s method %s::%s() from context '%s'"""		308246	0					
ANR	308501	Argument	zend_visibility_string ( fbc -> common . fn_flags )		308246	2					
ANR	308502	CallExpression	zend_visibility_string ( fbc -> common . fn_flags )		308246	0					
ANR	308503	Callee	zend_visibility_string		308246	0					
ANR	308504	Identifier	zend_visibility_string		308246	0					
ANR	308505	ArgumentList	fbc -> common . fn_flags		308246	1					
ANR	308506	Argument	fbc -> common . fn_flags		308246	0					
ANR	308507	MemberAccess	fbc -> common . fn_flags		308246	0					
ANR	308508	PtrMemberAccess	fbc -> common		308246	0					
ANR	308509	Identifier	fbc		308246	0					
ANR	308510	Identifier	common		308246	1					
ANR	308511	Identifier	fn_flags		308246	1					
ANR	308512	Argument	ZEND_FN_SCOPE_NAME ( fbc )		308246	3					
ANR	308513	CallExpression	ZEND_FN_SCOPE_NAME ( fbc )		308246	0					
ANR	308514	Callee	ZEND_FN_SCOPE_NAME		308246	0					
ANR	308515	Identifier	ZEND_FN_SCOPE_NAME		308246	0					
ANR	308516	ArgumentList	fbc		308246	1					
ANR	308517	Argument	fbc		308246	0					
ANR	308518	Identifier	fbc		308246	0					
ANR	308519	Argument	ZSTR_VAL ( method_name )		308246	4					
ANR	308520	CallExpression	ZSTR_VAL ( method_name )		308246	0					
ANR	308521	Callee	ZSTR_VAL		308246	0					
ANR	308522	Identifier	ZSTR_VAL		308246	0					
ANR	308523	ArgumentList	method_name		308246	1					
ANR	308524	Argument	method_name		308246	0					
ANR	308525	Identifier	method_name		308246	0					
ANR	308526	Argument	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308246	5					
ANR	308527	ConditionalExpression	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308246	0					
ANR	308528	Condition	EG ( scope )		308246	0					
ANR	308529	CallExpression	EG ( scope )		308246	0					
ANR	308530	Callee	EG		308246	0					
ANR	308531	Identifier	EG		308246	0					
ANR	308532	ArgumentList	scope		308246	1					
ANR	308533	Argument	scope		308246	0					
ANR	308534	Identifier	scope		308246	0					
ANR	308535	CallExpression	ZSTR_VAL ( EG ( scope ) -> name )		308246	1					
ANR	308536	Callee	ZSTR_VAL		308246	0					
ANR	308537	Identifier	ZSTR_VAL		308246	0					
ANR	308538	ArgumentList	EG ( scope ) -> name		308246	1					
ANR	308539	Argument	EG ( scope ) -> name		308246	0					
ANR	308540	PtrMemberAccess	EG ( scope ) -> name		308246	0					
ANR	308541	CallExpression	EG ( scope )		308246	0					
ANR	308542	Callee	EG		308246	0					
ANR	308543	Identifier	EG		308246	0					
ANR	308544	ArgumentList	scope		308246	1					
ANR	308545	Argument	scope		308246	0					
ANR	308546	Identifier	scope		308246	0					
ANR	308547	Identifier	name		308246	1					
ANR	308548	PrimaryExpression	""""""		308246	2					
ANR	308549	ExpressionStatement	fbc = NULL	1124:4:33898:33908	308246	1	True				
ANR	308550	AssignmentExpression	fbc = NULL		308246	0		=			
ANR	308551	Identifier	fbc		308246	0					
ANR	308552	Identifier	NULL		308246	1					
ANR	308553	ElseStatement	else		308246	0					
ANR	308554	CompoundStatement		48:8:1495:1495	308246	0					
ANR	308555	IfStatement	"if ( EG ( scope ) && is_derived_class ( fbc -> common . scope , EG ( scope ) ) && fbc -> op_array . fn_flags & ZEND_ACC_CHANGED )"		308246	0					
ANR	308556	Condition	"EG ( scope ) && is_derived_class ( fbc -> common . scope , EG ( scope ) ) && fbc -> op_array . fn_flags & ZEND_ACC_CHANGED"	1131:6:34057:34172	308246	0	True				
ANR	308557	AndExpression	"EG ( scope ) && is_derived_class ( fbc -> common . scope , EG ( scope ) ) && fbc -> op_array . fn_flags & ZEND_ACC_CHANGED"		308246	0		&&			
ANR	308558	CallExpression	EG ( scope )		308246	0					
ANR	308559	Callee	EG		308246	0					
ANR	308560	Identifier	EG		308246	0					
ANR	308561	ArgumentList	scope		308246	1					
ANR	308562	Argument	scope		308246	0					
ANR	308563	Identifier	scope		308246	0					
ANR	308564	AndExpression	"is_derived_class ( fbc -> common . scope , EG ( scope ) ) && fbc -> op_array . fn_flags & ZEND_ACC_CHANGED"		308246	1		&&			
ANR	308565	CallExpression	"is_derived_class ( fbc -> common . scope , EG ( scope ) )"		308246	0					
ANR	308566	Callee	is_derived_class		308246	0					
ANR	308567	Identifier	is_derived_class		308246	0					
ANR	308568	ArgumentList	fbc -> common . scope		308246	1					
ANR	308569	Argument	fbc -> common . scope		308246	0					
ANR	308570	MemberAccess	fbc -> common . scope		308246	0					
ANR	308571	PtrMemberAccess	fbc -> common		308246	0					
ANR	308572	Identifier	fbc		308246	0					
ANR	308573	Identifier	common		308246	1					
ANR	308574	Identifier	scope		308246	1					
ANR	308575	Argument	EG ( scope )		308246	1					
ANR	308576	CallExpression	EG ( scope )		308246	0					
ANR	308577	Callee	EG		308246	0					
ANR	308578	Identifier	EG		308246	0					
ANR	308579	ArgumentList	scope		308246	1					
ANR	308580	Argument	scope		308246	0					
ANR	308581	Identifier	scope		308246	0					
ANR	308582	BitAndExpression	fbc -> op_array . fn_flags & ZEND_ACC_CHANGED		308246	1		&			
ANR	308583	MemberAccess	fbc -> op_array . fn_flags		308246	0					
ANR	308584	PtrMemberAccess	fbc -> op_array		308246	0					
ANR	308585	Identifier	fbc		308246	0					
ANR	308586	Identifier	op_array		308246	1					
ANR	308587	Identifier	fn_flags		308246	1					
ANR	308588	Identifier	ZEND_ACC_CHANGED		308246	1					
ANR	308589	CompoundStatement		54:49:1743:1743	308246	1					
ANR	308590	IfStatement	"if ( ( func = zend_hash_find ( & EG ( scope ) -> function_table , lc_method_name ) ) != NULL )"		308246	0					
ANR	308591	Condition	"( func = zend_hash_find ( & EG ( scope ) -> function_table , lc_method_name ) ) != NULL"	1134:7:34184:34258	308246	0	True				
ANR	308592	EqualityExpression	"( func = zend_hash_find ( & EG ( scope ) -> function_table , lc_method_name ) ) != NULL"		308246	0		!=			
ANR	308593	AssignmentExpression	"func = zend_hash_find ( & EG ( scope ) -> function_table , lc_method_name )"		308246	0		=			
ANR	308594	Identifier	func		308246	0					
ANR	308595	CallExpression	"zend_hash_find ( & EG ( scope ) -> function_table , lc_method_name )"		308246	1					
ANR	308596	Callee	zend_hash_find		308246	0					
ANR	308597	Identifier	zend_hash_find		308246	0					
ANR	308598	ArgumentList	& EG ( scope ) -> function_table		308246	1					
ANR	308599	Argument	& EG ( scope ) -> function_table		308246	0					
ANR	308600	UnaryOperationExpression	& EG ( scope ) -> function_table		308246	0					
ANR	308601	UnaryOperator	&		308246	0					
ANR	308602	PtrMemberAccess	EG ( scope ) -> function_table		308246	1					
ANR	308603	CallExpression	EG ( scope )		308246	0					
ANR	308604	Callee	EG		308246	0					
ANR	308605	Identifier	EG		308246	0					
ANR	308606	ArgumentList	scope		308246	1					
ANR	308607	Argument	scope		308246	0					
ANR	308608	Identifier	scope		308246	0					
ANR	308609	Identifier	function_table		308246	1					
ANR	308610	Argument	lc_method_name		308246	1					
ANR	308611	Identifier	lc_method_name		308246	0					
ANR	308612	Identifier	NULL		308246	1					
ANR	308613	CompoundStatement		56:4:1835:1875	308246	1					
ANR	308614	IdentifierDeclStatement	zend_function * priv_fbc = Z_FUNC_P ( func ) ;	1135:4:34267:34307	308246	0	True				
ANR	308615	IdentifierDecl	* priv_fbc = Z_FUNC_P ( func )		308246	0					
ANR	308616	IdentifierDeclType	zend_function *		308246	0					
ANR	308617	Identifier	priv_fbc		308246	1					
ANR	308618	AssignmentExpression	* priv_fbc = Z_FUNC_P ( func )		308246	2		=			
ANR	308619	Identifier	priv_fbc		308246	0					
ANR	308620	CallExpression	Z_FUNC_P ( func )		308246	1					
ANR	308621	Callee	Z_FUNC_P		308246	0					
ANR	308622	Identifier	Z_FUNC_P		308246	0					
ANR	308623	ArgumentList	func		308246	1					
ANR	308624	Argument	func		308246	0					
ANR	308625	Identifier	func		308246	0					
ANR	308626	IfStatement	if ( priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE && priv_fbc -> common . scope == EG ( scope ) )		308246	1					
ANR	308627	Condition	priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE && priv_fbc -> common . scope == EG ( scope )	1136:8:34317:34404	308246	0	True				
ANR	308628	AndExpression	priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE && priv_fbc -> common . scope == EG ( scope )		308246	0		&&			
ANR	308629	BitAndExpression	priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE		308246	0		&			
ANR	308630	MemberAccess	priv_fbc -> common . fn_flags		308246	0					
ANR	308631	PtrMemberAccess	priv_fbc -> common		308246	0					
ANR	308632	Identifier	priv_fbc		308246	0					
ANR	308633	Identifier	common		308246	1					
ANR	308634	Identifier	fn_flags		308246	1					
ANR	308635	Identifier	ZEND_ACC_PRIVATE		308246	1					
ANR	308636	EqualityExpression	priv_fbc -> common . scope == EG ( scope )		308246	1		==			
ANR	308637	MemberAccess	priv_fbc -> common . scope		308246	0					
ANR	308638	PtrMemberAccess	priv_fbc -> common		308246	0					
ANR	308639	Identifier	priv_fbc		308246	0					
ANR	308640	Identifier	common		308246	1					
ANR	308641	Identifier	scope		308246	1					
ANR	308642	CallExpression	EG ( scope )		308246	1					
ANR	308643	Callee	EG		308246	0					
ANR	308644	Identifier	EG		308246	0					
ANR	308645	ArgumentList	scope		308246	1					
ANR	308646	Argument	scope		308246	0					
ANR	308647	Identifier	scope		308246	0					
ANR	308648	CompoundStatement		58:45:1975:1975	308246	1					
ANR	308649	ExpressionStatement	fbc = priv_fbc	1138:5:34414:34428	308246	0	True				
ANR	308650	AssignmentExpression	fbc = priv_fbc		308246	0		=			
ANR	308651	Identifier	fbc		308246	0					
ANR	308652	Identifier	priv_fbc		308246	1					
ANR	308653	IfStatement	if ( ( fbc -> common . fn_flags & ZEND_ACC_PROTECTED ) )		308246	1					
ANR	308654	Condition	fbc -> common . fn_flags & ZEND_ACC_PROTECTED	1142:6:34451:34493	308246	0	True				
ANR	308655	BitAndExpression	fbc -> common . fn_flags & ZEND_ACC_PROTECTED		308246	0		&			
ANR	308656	MemberAccess	fbc -> common . fn_flags		308246	0					
ANR	308657	PtrMemberAccess	fbc -> common		308246	0					
ANR	308658	Identifier	fbc		308246	0					
ANR	308659	Identifier	common		308246	1					
ANR	308660	Identifier	fn_flags		308246	1					
ANR	308661	Identifier	ZEND_ACC_PROTECTED		308246	1					
ANR	308662	CompoundStatement		63:51:2064:2064	308246	1					
ANR	308663	IfStatement	"if ( UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) ) ) )"		308246	0					
ANR	308664	Condition	"UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) ) )"	1146:7:34673:34751	308246	0	True				
ANR	308665	CallExpression	"UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) ) )"		308246	0					
ANR	308666	Callee	UNEXPECTED		308246	0					
ANR	308667	Identifier	UNEXPECTED		308246	0					
ANR	308668	ArgumentList	"! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308246	1					
ANR	308669	Argument	"! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308246	0					
ANR	308670	UnaryOperationExpression	"! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308246	0					
ANR	308671	UnaryOperator	!		308246	0					
ANR	308672	CallExpression	"zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308246	1					
ANR	308673	Callee	zend_check_protected		308246	0					
ANR	308674	Identifier	zend_check_protected		308246	0					
ANR	308675	ArgumentList	zend_get_function_root_class ( fbc )		308246	1					
ANR	308676	Argument	zend_get_function_root_class ( fbc )		308246	0					
ANR	308677	CallExpression	zend_get_function_root_class ( fbc )		308246	0					
ANR	308678	Callee	zend_get_function_root_class		308246	0					
ANR	308679	Identifier	zend_get_function_root_class		308246	0					
ANR	308680	ArgumentList	fbc		308246	1					
ANR	308681	Argument	fbc		308246	0					
ANR	308682	Identifier	fbc		308246	0					
ANR	308683	Argument	EG ( scope )		308246	1					
ANR	308684	CallExpression	EG ( scope )		308246	0					
ANR	308685	Callee	EG		308246	0					
ANR	308686	Identifier	EG		308246	0					
ANR	308687	ArgumentList	scope		308246	1					
ANR	308688	Argument	scope		308246	0					
ANR	308689	Identifier	scope		308246	0					
ANR	308690	CompoundStatement		67:88:2322:2322	308246	1					
ANR	308691	IfStatement	if ( zobj -> ce -> __call )		308246	0					
ANR	308692	Condition	zobj -> ce -> __call	1147:8:34764:34779	308246	0	True				
ANR	308693	PtrMemberAccess	zobj -> ce -> __call		308246	0					
ANR	308694	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308695	Identifier	zobj		308246	0					
ANR	308696	Identifier	ce		308246	1					
ANR	308697	Identifier	__call		308246	1					
ANR	308698	CompoundStatement		68:26:2350:2350	308246	1					
ANR	308699	ExpressionStatement	"fbc = zend_get_user_call_function ( zobj -> ce , method_name )"	1148:5:34789:34845	308246	0	True				
ANR	308700	AssignmentExpression	"fbc = zend_get_user_call_function ( zobj -> ce , method_name )"		308246	0		=			
ANR	308701	Identifier	fbc		308246	0					
ANR	308702	CallExpression	"zend_get_user_call_function ( zobj -> ce , method_name )"		308246	1					
ANR	308703	Callee	zend_get_user_call_function		308246	0					
ANR	308704	Identifier	zend_get_user_call_function		308246	0					
ANR	308705	ArgumentList	zobj -> ce		308246	1					
ANR	308706	Argument	zobj -> ce		308246	0					
ANR	308707	PtrMemberAccess	zobj -> ce		308246	0					
ANR	308708	Identifier	zobj		308246	0					
ANR	308709	Identifier	ce		308246	1					
ANR	308710	Argument	method_name		308246	1					
ANR	308711	Identifier	method_name		308246	0					
ANR	308712	ElseStatement	else		308246	0					
ANR	308713	CompoundStatement		70:11:2426:2426	308246	0					
ANR	308714	ExpressionStatement	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( method_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"	1150:5:34865:35073	308246	0	True				
ANR	308715	CallExpression	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( method_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"		308246	0					
ANR	308716	Callee	zend_throw_error		308246	0					
ANR	308717	Identifier	zend_throw_error		308246	0					
ANR	308718	ArgumentList	NULL		308246	1					
ANR	308719	Argument	NULL		308246	0					
ANR	308720	Identifier	NULL		308246	0					
ANR	308721	Argument	"""Call to %s method %s::%s() from context '%s'"""		308246	1					
ANR	308722	PrimaryExpression	"""Call to %s method %s::%s() from context '%s'"""		308246	0					
ANR	308723	Argument	zend_visibility_string ( fbc -> common . fn_flags )		308246	2					
ANR	308724	CallExpression	zend_visibility_string ( fbc -> common . fn_flags )		308246	0					
ANR	308725	Callee	zend_visibility_string		308246	0					
ANR	308726	Identifier	zend_visibility_string		308246	0					
ANR	308727	ArgumentList	fbc -> common . fn_flags		308246	1					
ANR	308728	Argument	fbc -> common . fn_flags		308246	0					
ANR	308729	MemberAccess	fbc -> common . fn_flags		308246	0					
ANR	308730	PtrMemberAccess	fbc -> common		308246	0					
ANR	308731	Identifier	fbc		308246	0					
ANR	308732	Identifier	common		308246	1					
ANR	308733	Identifier	fn_flags		308246	1					
ANR	308734	Argument	ZEND_FN_SCOPE_NAME ( fbc )		308246	3					
ANR	308735	CallExpression	ZEND_FN_SCOPE_NAME ( fbc )		308246	0					
ANR	308736	Callee	ZEND_FN_SCOPE_NAME		308246	0					
ANR	308737	Identifier	ZEND_FN_SCOPE_NAME		308246	0					
ANR	308738	ArgumentList	fbc		308246	1					
ANR	308739	Argument	fbc		308246	0					
ANR	308740	Identifier	fbc		308246	0					
ANR	308741	Argument	ZSTR_VAL ( method_name )		308246	4					
ANR	308742	CallExpression	ZSTR_VAL ( method_name )		308246	0					
ANR	308743	Callee	ZSTR_VAL		308246	0					
ANR	308744	Identifier	ZSTR_VAL		308246	0					
ANR	308745	ArgumentList	method_name		308246	1					
ANR	308746	Argument	method_name		308246	0					
ANR	308747	Identifier	method_name		308246	0					
ANR	308748	Argument	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308246	5					
ANR	308749	ConditionalExpression	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308246	0					
ANR	308750	Condition	EG ( scope )		308246	0					
ANR	308751	CallExpression	EG ( scope )		308246	0					
ANR	308752	Callee	EG		308246	0					
ANR	308753	Identifier	EG		308246	0					
ANR	308754	ArgumentList	scope		308246	1					
ANR	308755	Argument	scope		308246	0					
ANR	308756	Identifier	scope		308246	0					
ANR	308757	CallExpression	ZSTR_VAL ( EG ( scope ) -> name )		308246	1					
ANR	308758	Callee	ZSTR_VAL		308246	0					
ANR	308759	Identifier	ZSTR_VAL		308246	0					
ANR	308760	ArgumentList	EG ( scope ) -> name		308246	1					
ANR	308761	Argument	EG ( scope ) -> name		308246	0					
ANR	308762	PtrMemberAccess	EG ( scope ) -> name		308246	0					
ANR	308763	CallExpression	EG ( scope )		308246	0					
ANR	308764	Callee	EG		308246	0					
ANR	308765	Identifier	EG		308246	0					
ANR	308766	ArgumentList	scope		308246	1					
ANR	308767	Argument	scope		308246	0					
ANR	308768	Identifier	scope		308246	0					
ANR	308769	Identifier	name		308246	1					
ANR	308770	PrimaryExpression	""""""		308246	2					
ANR	308771	ExpressionStatement	fbc = NULL	1151:5:35080:35090	308246	1	True				
ANR	308772	AssignmentExpression	fbc = NULL		308246	0		=			
ANR	308773	Identifier	fbc		308246	0					
ANR	308774	Identifier	NULL		308246	1					
ANR	308775	IfStatement	if ( UNEXPECTED ( ! key ) )		308246	9					
ANR	308776	Condition	UNEXPECTED ( ! key )	1157:5:35116:35131	308246	0	True				
ANR	308777	CallExpression	UNEXPECTED ( ! key )		308246	0					
ANR	308778	Callee	UNEXPECTED		308246	0					
ANR	308779	Identifier	UNEXPECTED		308246	0					
ANR	308780	ArgumentList	! key		308246	1					
ANR	308781	Argument	! key		308246	0					
ANR	308782	UnaryOperationExpression	! key		308246	0					
ANR	308783	UnaryOperator	!		308246	0					
ANR	308784	Identifier	key		308246	1					
ANR	308785	CompoundStatement		78:23:2702:2702	308246	1					
ANR	308786	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lc_method_name , use_heap )"	1158:2:35138:35180	308246	0	True				
ANR	308787	CallExpression	"ZSTR_ALLOCA_FREE ( lc_method_name , use_heap )"		308246	0					
ANR	308788	Callee	ZSTR_ALLOCA_FREE		308246	0					
ANR	308789	Identifier	ZSTR_ALLOCA_FREE		308246	0					
ANR	308790	ArgumentList	lc_method_name		308246	1					
ANR	308791	Argument	lc_method_name		308246	0					
ANR	308792	Identifier	lc_method_name		308246	0					
ANR	308793	Argument	use_heap		308246	1					
ANR	308794	Identifier	use_heap		308246	0					
ANR	308795	ReturnStatement	return fbc ;	1160:1:35186:35196	308246	10	True				
ANR	308796	Identifier	fbc		308246	0					
ANR	308797	ReturnType	static union _zend_function *		308246	1					
ANR	308798	Identifier	zend_std_get_method		308246	2					
ANR	308799	ParameterList	"zend_object * * obj_ptr , zend_string * method_name , const zval * key"		308246	3					
ANR	308800	Parameter	zend_object * * obj_ptr	1079:49:32355:32375	308246	0	True				
ANR	308801	ParameterType	zend_object * *		308246	0					
ANR	308802	Identifier	obj_ptr		308246	1					
ANR	308803	Parameter	zend_string * method_name	1079:72:32378:32401	308246	1	True				
ANR	308804	ParameterType	zend_string *		308246	0					
ANR	308805	Identifier	method_name		308246	1					
ANR	308806	Parameter	const zval * key	1079:98:32404:32418	308246	2	True				
ANR	308807	ParameterType	const zval *		308246	0					
ANR	308808	Identifier	key		308246	1					
ANR	308809	CFGEntryNode	ENTRY		308246		True				
ANR	308810	CFGExitNode	EXIT		308246		True				
ANR	308811	Symbol	zend_get_user_call_function		308246						
ANR	308812	Symbol	is_derived_class		308246						
ANR	308813	Symbol	zobj		308246						
ANR	308814	Symbol	lc_method_name		308246						
ANR	308815	Symbol	zend_visibility_string		308246						
ANR	308816	Symbol	zend_check_private_int		308246						
ANR	308817	Symbol	priv_fbc -> common . fn_flags		308246						
ANR	308818	Symbol	zend_hash_find		308246						
ANR	308819	Symbol	method_name		308246						
ANR	308820	Symbol	EG ( scope ) -> name		308246						
ANR	308821	Symbol	EG		308246						
ANR	308822	Symbol	NULL		308246						
ANR	308823	Symbol	fbc		308246						
ANR	308824	Symbol	updated_fbc		308246						
ANR	308825	Symbol	* priv_fbc		308246						
ANR	308826	Symbol	obj_ptr		308246						
ANR	308827	Symbol	& EG ( scope ) -> function_table		308246						
ANR	308828	Symbol	Z_STR_P		308246						
ANR	308829	Symbol	fbc -> common . fn_flags		308246						
ANR	308830	Symbol	use_heap		308246						
ANR	308831	Symbol	* obj_ptr		308246						
ANR	308832	Symbol	Z_FUNC_P		308246						
ANR	308833	Symbol	* * zobj		308246						
ANR	308834	Symbol	ZEND_ACC_CHANGED		308246						
ANR	308835	Symbol	* EG		308246						
ANR	308836	Symbol	UNEXPECTED		308246						
ANR	308837	Symbol	fbc -> op_array		308246						
ANR	308838	Symbol	* zobj		308246						
ANR	308839	Symbol	scope		308246						
ANR	308840	Symbol	fbc -> op_array . fn_flags		308246						
ANR	308841	Symbol	priv_fbc -> common		308246						
ANR	308842	Symbol	ZEND_ACC_PROTECTED		308246						
ANR	308843	Symbol	& zobj -> ce -> function_table		308246						
ANR	308844	Symbol	ZEND_FN_SCOPE_NAME		308246						
ANR	308845	Symbol	key		308246						
ANR	308846	Symbol	fbc -> common . scope		308246						
ANR	308847	Symbol	* zobj -> ce		308246						
ANR	308848	Symbol	priv_fbc -> common . scope		308246						
ANR	308849	Symbol	zobj -> ce		308246						
ANR	308850	Symbol	fbc -> common		308246						
ANR	308851	Symbol	zend_get_function_root_class		308246						
ANR	308852	Symbol	* fbc		308246						
ANR	308853	Symbol	ZSTR_VAL		308246						
ANR	308854	Symbol	ZEND_ACC_PRIVATE		308246						
ANR	308855	Symbol	func		308246						
ANR	308856	Symbol	priv_fbc		308246						
ANR	308857	Symbol	zobj -> ce -> __call		308246						
ANR	308858	Symbol	zend_check_protected		308246						
ANR	308859	Symbol	ZSTR_LEN		308246						
ANR	308860	Symbol	EXPECTED		308246						
ANR	308861	Function	zend_get_user_callstatic_function	1164:0:35211:35405							
ANR	308862	FunctionDef	"zend_get_user_callstatic_function (zend_class_entry * ce , zend_string * method_name)"		308861	0					
ANR	308863	CompoundStatement		1165:0:35344:35405	308861	0					
ANR	308864	ReturnStatement	"return zend_get_call_trampoline_func ( ce , method_name , 1 ) ;"	1166:1:35347:35403	308861	0	True				
ANR	308865	CallExpression	"zend_get_call_trampoline_func ( ce , method_name , 1 )"		308861	0					
ANR	308866	Callee	zend_get_call_trampoline_func		308861	0					
ANR	308867	Identifier	zend_get_call_trampoline_func		308861	0					
ANR	308868	ArgumentList	ce		308861	1					
ANR	308869	Argument	ce		308861	0					
ANR	308870	Identifier	ce		308861	0					
ANR	308871	Argument	method_name		308861	1					
ANR	308872	Identifier	method_name		308861	0					
ANR	308873	Argument	1		308861	2					
ANR	308874	PrimaryExpression	1		308861	0					
ANR	308875	ReturnType	static zend_always_inline zend_function *		308861	1					
ANR	308876	Identifier	zend_get_user_callstatic_function		308861	2					
ANR	308877	ParameterList	"zend_class_entry * ce , zend_string * method_name"		308861	3					
ANR	308878	Parameter	zend_class_entry * ce	1164:75:35286:35305	308861	0	True				
ANR	308879	ParameterType	zend_class_entry *		308861	0					
ANR	308880	Identifier	ce		308861	1					
ANR	308881	Parameter	zend_string * method_name	1164:97:35308:35331	308861	1	True				
ANR	308882	ParameterType	zend_string *		308861	0					
ANR	308883	Identifier	method_name		308861	1					
ANR	308884	CFGEntryNode	ENTRY		308861		True				
ANR	308885	CFGExitNode	EXIT		308861		True				
ANR	308886	Symbol	ce		308861						
ANR	308887	Symbol	method_name		308861						
ANR	308888	Symbol	zend_get_call_trampoline_func		308861						
ANR	308889	Function	zend_std_get_static_method	1170:0:35418:38920							
ANR	308890	FunctionDef	"zend_std_get_static_method (zend_class_entry * ce , zend_string * function_name , const zval * key)"		308889	0					
ANR	308891	CompoundStatement		1171:0:35546:38920	308889	0					
ANR	308892	IdentifierDeclStatement	zend_function * fbc = NULL ;	1172:1:35549:35574	308889	0	True				
ANR	308893	IdentifierDecl	* fbc = NULL		308889	0					
ANR	308894	IdentifierDeclType	zend_function *		308889	0					
ANR	308895	Identifier	fbc		308889	1					
ANR	308896	AssignmentExpression	* fbc = NULL		308889	2		=			
ANR	308897	Identifier	NULL		308889	0					
ANR	308898	Identifier	NULL		308889	1					
ANR	308899	IdentifierDeclStatement	char * lc_class_name ;	1173:1:35577:35596	308889	1	True				
ANR	308900	IdentifierDecl	* lc_class_name		308889	0					
ANR	308901	IdentifierDeclType	char *		308889	0					
ANR	308902	Identifier	lc_class_name		308889	1					
ANR	308903	IdentifierDeclStatement	zend_string * lc_function_name ;	1174:1:35599:35628	308889	2	True				
ANR	308904	IdentifierDecl	* lc_function_name		308889	0					
ANR	308905	IdentifierDeclType	zend_string *		308889	0					
ANR	308906	Identifier	lc_function_name		308889	1					
ANR	308907	IdentifierDeclStatement	zend_object * object ;	1175:1:35631:35650	308889	3	True				
ANR	308908	IdentifierDecl	* object		308889	0					
ANR	308909	IdentifierDeclType	zend_object *		308889	0					
ANR	308910	Identifier	object		308889	1					
ANR	308911	IfStatement	if ( EXPECTED ( key != NULL ) )		308889	4					
ANR	308912	Condition	EXPECTED ( key != NULL )	1177:5:35658:35678	308889	0	True				
ANR	308913	CallExpression	EXPECTED ( key != NULL )		308889	0					
ANR	308914	Callee	EXPECTED		308889	0					
ANR	308915	Identifier	EXPECTED		308889	0					
ANR	308916	ArgumentList	key != NULL		308889	1					
ANR	308917	Argument	key != NULL		308889	0					
ANR	308918	EqualityExpression	key != NULL		308889	0		!=			
ANR	308919	Identifier	key		308889	0					
ANR	308920	Identifier	NULL		308889	1					
ANR	308921	CompoundStatement		7:28:134:134	308889	1					
ANR	308922	ExpressionStatement	lc_function_name = Z_STR_P ( key )	1178:2:35685:35716	308889	0	True				
ANR	308923	AssignmentExpression	lc_function_name = Z_STR_P ( key )		308889	0		=			
ANR	308924	Identifier	lc_function_name		308889	0					
ANR	308925	CallExpression	Z_STR_P ( key )		308889	1					
ANR	308926	Callee	Z_STR_P		308889	0					
ANR	308927	Identifier	Z_STR_P		308889	0					
ANR	308928	ArgumentList	key		308889	1					
ANR	308929	Argument	key		308889	0					
ANR	308930	Identifier	key		308889	0					
ANR	308931	ElseStatement	else		308889	0					
ANR	308932	CompoundStatement		9:8:179:179	308889	0					
ANR	308933	ExpressionStatement	lc_function_name = zend_string_tolower ( function_name )	1180:2:35730:35783	308889	0	True				
ANR	308934	AssignmentExpression	lc_function_name = zend_string_tolower ( function_name )		308889	0		=			
ANR	308935	Identifier	lc_function_name		308889	0					
ANR	308936	CallExpression	zend_string_tolower ( function_name )		308889	1					
ANR	308937	Callee	zend_string_tolower		308889	0					
ANR	308938	Identifier	zend_string_tolower		308889	0					
ANR	308939	ArgumentList	function_name		308889	1					
ANR	308940	Argument	function_name		308889	0					
ANR	308941	Identifier	function_name		308889	0					
ANR	308942	IfStatement	if ( ZSTR_LEN ( function_name ) == ZSTR_LEN ( ce -> name ) && ce -> constructor )		308889	5					
ANR	308943	Condition	ZSTR_LEN ( function_name ) == ZSTR_LEN ( ce -> name ) && ce -> constructor	1183:5:35794:35857	308889	0	True				
ANR	308944	AndExpression	ZSTR_LEN ( function_name ) == ZSTR_LEN ( ce -> name ) && ce -> constructor		308889	0		&&			
ANR	308945	EqualityExpression	ZSTR_LEN ( function_name ) == ZSTR_LEN ( ce -> name )		308889	0		==			
ANR	308946	CallExpression	ZSTR_LEN ( function_name )		308889	0					
ANR	308947	Callee	ZSTR_LEN		308889	0					
ANR	308948	Identifier	ZSTR_LEN		308889	0					
ANR	308949	ArgumentList	function_name		308889	1					
ANR	308950	Argument	function_name		308889	0					
ANR	308951	Identifier	function_name		308889	0					
ANR	308952	CallExpression	ZSTR_LEN ( ce -> name )		308889	1					
ANR	308953	Callee	ZSTR_LEN		308889	0					
ANR	308954	Identifier	ZSTR_LEN		308889	0					
ANR	308955	ArgumentList	ce -> name		308889	1					
ANR	308956	Argument	ce -> name		308889	0					
ANR	308957	PtrMemberAccess	ce -> name		308889	0					
ANR	308958	Identifier	ce		308889	0					
ANR	308959	Identifier	name		308889	1					
ANR	308960	PtrMemberAccess	ce -> constructor		308889	1					
ANR	308961	Identifier	ce		308889	0					
ANR	308962	Identifier	constructor		308889	1					
ANR	308963	CompoundStatement		13:71:313:313	308889	1					
ANR	308964	ExpressionStatement	"lc_class_name = zend_str_tolower_dup ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) )"	1184:2:35864:35940	308889	0	True				
ANR	308965	AssignmentExpression	"lc_class_name = zend_str_tolower_dup ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) )"		308889	0		=			
ANR	308966	Identifier	lc_class_name		308889	0					
ANR	308967	CallExpression	"zend_str_tolower_dup ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) )"		308889	1					
ANR	308968	Callee	zend_str_tolower_dup		308889	0					
ANR	308969	Identifier	zend_str_tolower_dup		308889	0					
ANR	308970	ArgumentList	ZSTR_VAL ( ce -> name )		308889	1					
ANR	308971	Argument	ZSTR_VAL ( ce -> name )		308889	0					
ANR	308972	CallExpression	ZSTR_VAL ( ce -> name )		308889	0					
ANR	308973	Callee	ZSTR_VAL		308889	0					
ANR	308974	Identifier	ZSTR_VAL		308889	0					
ANR	308975	ArgumentList	ce -> name		308889	1					
ANR	308976	Argument	ce -> name		308889	0					
ANR	308977	PtrMemberAccess	ce -> name		308889	0					
ANR	308978	Identifier	ce		308889	0					
ANR	308979	Identifier	name		308889	1					
ANR	308980	Argument	ZSTR_LEN ( ce -> name )		308889	1					
ANR	308981	CallExpression	ZSTR_LEN ( ce -> name )		308889	0					
ANR	308982	Callee	ZSTR_LEN		308889	0					
ANR	308983	Identifier	ZSTR_LEN		308889	0					
ANR	308984	ArgumentList	ce -> name		308889	1					
ANR	308985	Argument	ce -> name		308889	0					
ANR	308986	PtrMemberAccess	ce -> name		308889	0					
ANR	308987	Identifier	ce		308889	0					
ANR	308988	Identifier	name		308889	1					
ANR	308989	IfStatement	"if ( ! memcmp ( lc_class_name , ZSTR_VAL ( lc_function_name ) , ZSTR_LEN ( function_name ) ) && memcmp ( ZSTR_VAL ( ce -> constructor -> common . function_name ) , ""__"" , sizeof ( ""__"" ) - 1 ) )"		308889	1					
ANR	308990	Condition	"! memcmp ( lc_class_name , ZSTR_VAL ( lc_function_name ) , ZSTR_LEN ( function_name ) ) && memcmp ( ZSTR_VAL ( ce -> constructor -> common . function_name ) , ""__"" , sizeof ( ""__"" ) - 1 )"	1188:6:36146:36303	308889	0	True				
ANR	308991	AndExpression	"! memcmp ( lc_class_name , ZSTR_VAL ( lc_function_name ) , ZSTR_LEN ( function_name ) ) && memcmp ( ZSTR_VAL ( ce -> constructor -> common . function_name ) , ""__"" , sizeof ( ""__"" ) - 1 )"		308889	0		&&			
ANR	308992	UnaryOperationExpression	"! memcmp ( lc_class_name , ZSTR_VAL ( lc_function_name ) , ZSTR_LEN ( function_name ) )"		308889	0					
ANR	308993	UnaryOperator	!		308889	0					
ANR	308994	CallExpression	"memcmp ( lc_class_name , ZSTR_VAL ( lc_function_name ) , ZSTR_LEN ( function_name ) )"		308889	1					
ANR	308995	Callee	memcmp		308889	0					
ANR	308996	Identifier	memcmp		308889	0					
ANR	308997	ArgumentList	lc_class_name		308889	1					
ANR	308998	Argument	lc_class_name		308889	0					
ANR	308999	Identifier	lc_class_name		308889	0					
ANR	309000	Argument	ZSTR_VAL ( lc_function_name )		308889	1					
ANR	309001	CallExpression	ZSTR_VAL ( lc_function_name )		308889	0					
ANR	309002	Callee	ZSTR_VAL		308889	0					
ANR	309003	Identifier	ZSTR_VAL		308889	0					
ANR	309004	ArgumentList	lc_function_name		308889	1					
ANR	309005	Argument	lc_function_name		308889	0					
ANR	309006	Identifier	lc_function_name		308889	0					
ANR	309007	Argument	ZSTR_LEN ( function_name )		308889	2					
ANR	309008	CallExpression	ZSTR_LEN ( function_name )		308889	0					
ANR	309009	Callee	ZSTR_LEN		308889	0					
ANR	309010	Identifier	ZSTR_LEN		308889	0					
ANR	309011	ArgumentList	function_name		308889	1					
ANR	309012	Argument	function_name		308889	0					
ANR	309013	Identifier	function_name		308889	0					
ANR	309014	CallExpression	"memcmp ( ZSTR_VAL ( ce -> constructor -> common . function_name ) , ""__"" , sizeof ( ""__"" ) - 1 )"		308889	1					
ANR	309015	Callee	memcmp		308889	0					
ANR	309016	Identifier	memcmp		308889	0					
ANR	309017	ArgumentList	ZSTR_VAL ( ce -> constructor -> common . function_name )		308889	1					
ANR	309018	Argument	ZSTR_VAL ( ce -> constructor -> common . function_name )		308889	0					
ANR	309019	CallExpression	ZSTR_VAL ( ce -> constructor -> common . function_name )		308889	0					
ANR	309020	Callee	ZSTR_VAL		308889	0					
ANR	309021	Identifier	ZSTR_VAL		308889	0					
ANR	309022	ArgumentList	ce -> constructor -> common . function_name		308889	1					
ANR	309023	Argument	ce -> constructor -> common . function_name		308889	0					
ANR	309024	MemberAccess	ce -> constructor -> common . function_name		308889	0					
ANR	309025	PtrMemberAccess	ce -> constructor -> common		308889	0					
ANR	309026	PtrMemberAccess	ce -> constructor		308889	0					
ANR	309027	Identifier	ce		308889	0					
ANR	309028	Identifier	constructor		308889	1					
ANR	309029	Identifier	common		308889	1					
ANR	309030	Identifier	function_name		308889	1					
ANR	309031	Argument	"""__"""		308889	1					
ANR	309032	PrimaryExpression	"""__"""		308889	0					
ANR	309033	Argument	"sizeof ( ""__"" ) - 1"		308889	2					
ANR	309034	AdditiveExpression	"sizeof ( ""__"" ) - 1"		308889	0		-			
ANR	309035	SizeofExpression	"sizeof ( ""__"" )"		308889	0					
ANR	309036	Sizeof	sizeof		308889	0					
ANR	309037	PrimaryExpression	"""__"""		308889	1					
ANR	309038	PrimaryExpression	1		308889	1					
ANR	309039	CompoundStatement		18:166:759:759	308889	1					
ANR	309040	ExpressionStatement	fbc = ce -> constructor	1189:3:36311:36332	308889	0	True				
ANR	309041	AssignmentExpression	fbc = ce -> constructor		308889	0		=			
ANR	309042	Identifier	fbc		308889	0					
ANR	309043	PtrMemberAccess	ce -> constructor		308889	1					
ANR	309044	Identifier	ce		308889	0					
ANR	309045	Identifier	constructor		308889	1					
ANR	309046	ExpressionStatement	efree ( lc_class_name )	1191:2:36340:36360	308889	2	True				
ANR	309047	CallExpression	efree ( lc_class_name )		308889	0					
ANR	309048	Callee	efree		308889	0					
ANR	309049	Identifier	efree		308889	0					
ANR	309050	ArgumentList	lc_class_name		308889	1					
ANR	309051	Argument	lc_class_name		308889	0					
ANR	309052	Identifier	lc_class_name		308889	0					
ANR	309053	IfStatement	if ( EXPECTED ( ! fbc ) )		308889	6					
ANR	309054	Condition	EXPECTED ( ! fbc )	1194:5:36371:36384	308889	0	True				
ANR	309055	CallExpression	EXPECTED ( ! fbc )		308889	0					
ANR	309056	Callee	EXPECTED		308889	0					
ANR	309057	Identifier	EXPECTED		308889	0					
ANR	309058	ArgumentList	! fbc		308889	1					
ANR	309059	Argument	! fbc		308889	0					
ANR	309060	UnaryOperationExpression	! fbc		308889	0					
ANR	309061	UnaryOperator	!		308889	0					
ANR	309062	Identifier	fbc		308889	1					
ANR	309063	CompoundStatement		25:2:844:910	308889	1					
ANR	309064	IdentifierDeclStatement	"zval * func = zend_hash_find ( & ce -> function_table , lc_function_name ) ;"	1195:2:36391:36457	308889	0	True				
ANR	309065	IdentifierDecl	"* func = zend_hash_find ( & ce -> function_table , lc_function_name )"		308889	0					
ANR	309066	IdentifierDeclType	zval *		308889	0					
ANR	309067	Identifier	func		308889	1					
ANR	309068	AssignmentExpression	"* func = zend_hash_find ( & ce -> function_table , lc_function_name )"		308889	2		=			
ANR	309069	Identifier	func		308889	0					
ANR	309070	CallExpression	"zend_hash_find ( & ce -> function_table , lc_function_name )"		308889	1					
ANR	309071	Callee	zend_hash_find		308889	0					
ANR	309072	Identifier	zend_hash_find		308889	0					
ANR	309073	ArgumentList	& ce -> function_table		308889	1					
ANR	309074	Argument	& ce -> function_table		308889	0					
ANR	309075	UnaryOperationExpression	& ce -> function_table		308889	0					
ANR	309076	UnaryOperator	&		308889	0					
ANR	309077	PtrMemberAccess	ce -> function_table		308889	1					
ANR	309078	Identifier	ce		308889	0					
ANR	309079	Identifier	function_table		308889	1					
ANR	309080	Argument	lc_function_name		308889	1					
ANR	309081	Identifier	lc_function_name		308889	0					
ANR	309082	IfStatement	if ( EXPECTED ( func != NULL ) )		308889	1					
ANR	309083	Condition	EXPECTED ( func != NULL )	1196:6:36465:36486	308889	0	True				
ANR	309084	CallExpression	EXPECTED ( func != NULL )		308889	0					
ANR	309085	Callee	EXPECTED		308889	0					
ANR	309086	Identifier	EXPECTED		308889	0					
ANR	309087	ArgumentList	func != NULL		308889	1					
ANR	309088	Argument	func != NULL		308889	0					
ANR	309089	EqualityExpression	func != NULL		308889	0		!=			
ANR	309090	Identifier	func		308889	0					
ANR	309091	Identifier	NULL		308889	1					
ANR	309092	CompoundStatement		26:30:942:942	308889	1					
ANR	309093	ExpressionStatement	fbc = Z_FUNC_P ( func )	1197:3:36494:36514	308889	0	True				
ANR	309094	AssignmentExpression	fbc = Z_FUNC_P ( func )		308889	0		=			
ANR	309095	Identifier	fbc		308889	0					
ANR	309096	CallExpression	Z_FUNC_P ( func )		308889	1					
ANR	309097	Callee	Z_FUNC_P		308889	0					
ANR	309098	Identifier	Z_FUNC_P		308889	0					
ANR	309099	ArgumentList	func		308889	1					
ANR	309100	Argument	func		308889	0					
ANR	309101	Identifier	func		308889	0					
ANR	309102	ElseStatement	else		308889	0					
ANR	309103	CompoundStatement		28:9:978:978	308889	0					
ANR	309104	IfStatement	if ( UNEXPECTED ( ! key ) )		308889	0					
ANR	309105	Condition	UNEXPECTED ( ! key )	1199:7:36534:36549	308889	0	True				
ANR	309106	CallExpression	UNEXPECTED ( ! key )		308889	0					
ANR	309107	Callee	UNEXPECTED		308889	0					
ANR	309108	Identifier	UNEXPECTED		308889	0					
ANR	309109	ArgumentList	! key		308889	1					
ANR	309110	Argument	! key		308889	0					
ANR	309111	UnaryOperationExpression	! key		308889	0					
ANR	309112	UnaryOperator	!		308889	0					
ANR	309113	Identifier	key		308889	1					
ANR	309114	CompoundStatement		29:25:1005:1005	308889	1					
ANR	309115	ExpressionStatement	zend_string_release ( lc_function_name )	1200:4:36558:36595	308889	0	True				
ANR	309116	CallExpression	zend_string_release ( lc_function_name )		308889	0					
ANR	309117	Callee	zend_string_release		308889	0					
ANR	309118	Identifier	zend_string_release		308889	0					
ANR	309119	ArgumentList	lc_function_name		308889	1					
ANR	309120	Argument	lc_function_name		308889	0					
ANR	309121	Identifier	lc_function_name		308889	0					
ANR	309122	IfStatement	"if ( ce -> __call && ( object = zend_get_this_object ( EG ( current_execute_data ) ) ) != NULL && instanceof_function ( object -> ce , ce ) )"		308889	1					
ANR	309123	Condition	"ce -> __call && ( object = zend_get_this_object ( EG ( current_execute_data ) ) ) != NULL && instanceof_function ( object -> ce , ce )"	1202:7:36609:36737	308889	0	True				
ANR	309124	AndExpression	"ce -> __call && ( object = zend_get_this_object ( EG ( current_execute_data ) ) ) != NULL && instanceof_function ( object -> ce , ce )"		308889	0		&&			
ANR	309125	PtrMemberAccess	ce -> __call		308889	0					
ANR	309126	Identifier	ce		308889	0					
ANR	309127	Identifier	__call		308889	1					
ANR	309128	AndExpression	"( object = zend_get_this_object ( EG ( current_execute_data ) ) ) != NULL && instanceof_function ( object -> ce , ce )"		308889	1		&&			
ANR	309129	EqualityExpression	( object = zend_get_this_object ( EG ( current_execute_data ) ) ) != NULL		308889	0		!=			
ANR	309130	AssignmentExpression	object = zend_get_this_object ( EG ( current_execute_data ) )		308889	0		=			
ANR	309131	Identifier	object		308889	0					
ANR	309132	CallExpression	zend_get_this_object ( EG ( current_execute_data ) )		308889	1					
ANR	309133	Callee	zend_get_this_object		308889	0					
ANR	309134	Identifier	zend_get_this_object		308889	0					
ANR	309135	ArgumentList	EG ( current_execute_data )		308889	1					
ANR	309136	Argument	EG ( current_execute_data )		308889	0					
ANR	309137	CallExpression	EG ( current_execute_data )		308889	0					
ANR	309138	Callee	EG		308889	0					
ANR	309139	Identifier	EG		308889	0					
ANR	309140	ArgumentList	current_execute_data		308889	1					
ANR	309141	Argument	current_execute_data		308889	0					
ANR	309142	Identifier	current_execute_data		308889	0					
ANR	309143	Identifier	NULL		308889	1					
ANR	309144	CallExpression	"instanceof_function ( object -> ce , ce )"		308889	1					
ANR	309145	Callee	instanceof_function		308889	0					
ANR	309146	Identifier	instanceof_function		308889	0					
ANR	309147	ArgumentList	object -> ce		308889	1					
ANR	309148	Argument	object -> ce		308889	0					
ANR	309149	PtrMemberAccess	object -> ce		308889	0					
ANR	309150	Identifier	object		308889	0					
ANR	309151	Identifier	ce		308889	1					
ANR	309152	Argument	ce		308889	1					
ANR	309153	Identifier	ce		308889	0					
ANR	309154	CompoundStatement		38:4:1290:1328	308889	1					
ANR	309155	IdentifierDeclStatement	zend_class_entry * call_ce = object -> ce ;	1208:4:36837:36875	308889	0	True				
ANR	309156	IdentifierDecl	* call_ce = object -> ce		308889	0					
ANR	309157	IdentifierDeclType	zend_class_entry *		308889	0					
ANR	309158	Identifier	call_ce		308889	1					
ANR	309159	AssignmentExpression	* call_ce = object -> ce		308889	2		=			
ANR	309160	Identifier	call_ce		308889	0					
ANR	309161	PtrMemberAccess	object -> ce		308889	1					
ANR	309162	Identifier	object		308889	0					
ANR	309163	Identifier	ce		308889	1					
ANR	309164	WhileStatement	while ( ! call_ce -> __call )		308889	1					
ANR	309165	Condition	! call_ce -> __call	1210:11:36889:36904	308889	0	True				
ANR	309166	UnaryOperationExpression	! call_ce -> __call		308889	0					
ANR	309167	UnaryOperator	!		308889	0					
ANR	309168	PtrMemberAccess	call_ce -> __call		308889	1					
ANR	309169	Identifier	call_ce		308889	0					
ANR	309170	Identifier	__call		308889	1					
ANR	309171	CompoundStatement		40:29:1360:1360	308889	1					
ANR	309172	ExpressionStatement	call_ce = call_ce -> parent	1211:5:36914:36939	308889	0	True				
ANR	309173	AssignmentExpression	call_ce = call_ce -> parent		308889	0		=			
ANR	309174	Identifier	call_ce		308889	0					
ANR	309175	PtrMemberAccess	call_ce -> parent		308889	1					
ANR	309176	Identifier	call_ce		308889	0					
ANR	309177	Identifier	parent		308889	1					
ANR	309178	ReturnStatement	"return zend_get_user_call_function ( call_ce , function_name ) ;"	1213:4:36951:37009	308889	2	True				
ANR	309179	CallExpression	"zend_get_user_call_function ( call_ce , function_name )"		308889	0					
ANR	309180	Callee	zend_get_user_call_function		308889	0					
ANR	309181	Identifier	zend_get_user_call_function		308889	0					
ANR	309182	ArgumentList	call_ce		308889	1					
ANR	309183	Argument	call_ce		308889	0					
ANR	309184	Identifier	call_ce		308889	0					
ANR	309185	Argument	function_name		308889	1					
ANR	309186	Identifier	function_name		308889	0					
ANR	309187	ElseStatement	else		308889	0					
ANR	309188	IfStatement	if ( ce -> __callstatic )		308889	0					
ANR	309189	Condition	ce -> __callstatic	1214:14:37025:37040	308889	0	True				
ANR	309190	PtrMemberAccess	ce -> __callstatic		308889	0					
ANR	309191	Identifier	ce		308889	0					
ANR	309192	Identifier	__callstatic		308889	1					
ANR	309193	CompoundStatement		44:32:1496:1496	308889	1					
ANR	309194	ReturnStatement	"return zend_get_user_callstatic_function ( ce , function_name ) ;"	1215:4:37049:37108	308889	0	True				
ANR	309195	CallExpression	"zend_get_user_callstatic_function ( ce , function_name )"		308889	0					
ANR	309196	Callee	zend_get_user_callstatic_function		308889	0					
ANR	309197	Identifier	zend_get_user_callstatic_function		308889	0					
ANR	309198	ArgumentList	ce		308889	1					
ANR	309199	Argument	ce		308889	0					
ANR	309200	Identifier	ce		308889	0					
ANR	309201	Argument	function_name		308889	1					
ANR	309202	Identifier	function_name		308889	0					
ANR	309203	ElseStatement	else		308889	0					
ANR	309204	CompoundStatement		46:10:1573:1573	308889	0					
ANR	309205	ReturnStatement	return NULL ;	1217:7:37129:37140	308889	0	True				
ANR	309206	Identifier	NULL		308889	0					
ANR	309207	IfStatement	if ( UNEXPECTED ( ! ( fbc -> common . fn_flags & ZEND_ACC_STATIC ) ) )		308889	7					
ANR	309208	Condition	UNEXPECTED ( ! ( fbc -> common . fn_flags & ZEND_ACC_STATIC ) )	1225:5:37272:37324	308889	0	True				
ANR	309209	CallExpression	UNEXPECTED ( ! ( fbc -> common . fn_flags & ZEND_ACC_STATIC ) )		308889	0					
ANR	309210	Callee	UNEXPECTED		308889	0					
ANR	309211	Identifier	UNEXPECTED		308889	0					
ANR	309212	ArgumentList	! ( fbc -> common . fn_flags & ZEND_ACC_STATIC )		308889	1					
ANR	309213	Argument	! ( fbc -> common . fn_flags & ZEND_ACC_STATIC )		308889	0					
ANR	309214	UnaryOperationExpression	! ( fbc -> common . fn_flags & ZEND_ACC_STATIC )		308889	0					
ANR	309215	UnaryOperator	!		308889	0					
ANR	309216	BitAndExpression	fbc -> common . fn_flags & ZEND_ACC_STATIC		308889	1		&			
ANR	309217	MemberAccess	fbc -> common . fn_flags		308889	0					
ANR	309218	PtrMemberAccess	fbc -> common		308889	0					
ANR	309219	Identifier	fbc		308889	0					
ANR	309220	Identifier	common		308889	1					
ANR	309221	Identifier	fn_flags		308889	1					
ANR	309222	Identifier	ZEND_ACC_STATIC		308889	1					
ANR	309223	CompoundStatement		55:60:1780:1780	308889	1					
ANR	309224	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Cannot call non static method %s::%s() without object"" , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( fbc -> common . function_name ) )"	1226:2:37331:37478	308889	0	True				
ANR	309225	CallExpression	"zend_error_noreturn ( E_ERROR , ""Cannot call non static method %s::%s() without object"" , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( fbc -> common . function_name ) )"		308889	0					
ANR	309226	Callee	zend_error_noreturn		308889	0					
ANR	309227	Identifier	zend_error_noreturn		308889	0					
ANR	309228	ArgumentList	E_ERROR		308889	1					
ANR	309229	Argument	E_ERROR		308889	0					
ANR	309230	Identifier	E_ERROR		308889	0					
ANR	309231	Argument	"""Cannot call non static method %s::%s() without object"""		308889	1					
ANR	309232	PrimaryExpression	"""Cannot call non static method %s::%s() without object"""		308889	0					
ANR	309233	Argument	ZEND_FN_SCOPE_NAME ( fbc )		308889	2					
ANR	309234	CallExpression	ZEND_FN_SCOPE_NAME ( fbc )		308889	0					
ANR	309235	Callee	ZEND_FN_SCOPE_NAME		308889	0					
ANR	309236	Identifier	ZEND_FN_SCOPE_NAME		308889	0					
ANR	309237	ArgumentList	fbc		308889	1					
ANR	309238	Argument	fbc		308889	0					
ANR	309239	Identifier	fbc		308889	0					
ANR	309240	Argument	ZSTR_VAL ( fbc -> common . function_name )		308889	3					
ANR	309241	CallExpression	ZSTR_VAL ( fbc -> common . function_name )		308889	0					
ANR	309242	Callee	ZSTR_VAL		308889	0					
ANR	309243	Identifier	ZSTR_VAL		308889	0					
ANR	309244	ArgumentList	fbc -> common . function_name		308889	1					
ANR	309245	Argument	fbc -> common . function_name		308889	0					
ANR	309246	MemberAccess	fbc -> common . function_name		308889	0					
ANR	309247	PtrMemberAccess	fbc -> common		308889	0					
ANR	309248	Identifier	fbc		308889	0					
ANR	309249	Identifier	common		308889	1					
ANR	309250	Identifier	function_name		308889	1					
ANR	309251	IfStatement	if ( fbc -> op_array . fn_flags & ZEND_ACC_PUBLIC )		308889	8					
ANR	309252	Condition	fbc -> op_array . fn_flags & ZEND_ACC_PUBLIC	1229:5:37495:37534	308889	0	True				
ANR	309253	BitAndExpression	fbc -> op_array . fn_flags & ZEND_ACC_PUBLIC		308889	0		&			
ANR	309254	MemberAccess	fbc -> op_array . fn_flags		308889	0					
ANR	309255	PtrMemberAccess	fbc -> op_array		308889	0					
ANR	309256	Identifier	fbc		308889	0					
ANR	309257	Identifier	op_array		308889	1					
ANR	309258	Identifier	fn_flags		308889	1					
ANR	309259	Identifier	ZEND_ACC_PUBLIC		308889	1					
ANR	309260	CompoundStatement		59:47:1990:1990	308889	1					
ANR	309261	ElseStatement	else		308889	0					
ANR	309262	IfStatement	if ( fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE )		308889	0					
ANR	309263	Condition	fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE	1231:12:37605:37645	308889	0	True				
ANR	309264	BitAndExpression	fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE		308889	0		&			
ANR	309265	MemberAccess	fbc -> op_array . fn_flags		308889	0					
ANR	309266	PtrMemberAccess	fbc -> op_array		308889	0					
ANR	309267	Identifier	fbc		308889	0					
ANR	309268	Identifier	op_array		308889	1					
ANR	309269	Identifier	fn_flags		308889	1					
ANR	309270	Identifier	ZEND_ACC_PRIVATE		308889	1					
ANR	309271	CompoundStatement		62:2:2105:2131	308889	1					
ANR	309272	IdentifierDeclStatement	zend_function * updated_fbc ;	1232:2:37652:37678	308889	0	True				
ANR	309273	IdentifierDecl	* updated_fbc		308889	0					
ANR	309274	IdentifierDeclType	zend_function *		308889	0					
ANR	309275	Identifier	updated_fbc		308889	1					
ANR	309276	ExpressionStatement	"updated_fbc = zend_check_private_int ( fbc , EG ( scope ) , lc_function_name )"	1236:2:37767:37837	308889	1	True				
ANR	309277	AssignmentExpression	"updated_fbc = zend_check_private_int ( fbc , EG ( scope ) , lc_function_name )"		308889	0		=			
ANR	309278	Identifier	updated_fbc		308889	0					
ANR	309279	CallExpression	"zend_check_private_int ( fbc , EG ( scope ) , lc_function_name )"		308889	1					
ANR	309280	Callee	zend_check_private_int		308889	0					
ANR	309281	Identifier	zend_check_private_int		308889	0					
ANR	309282	ArgumentList	fbc		308889	1					
ANR	309283	Argument	fbc		308889	0					
ANR	309284	Identifier	fbc		308889	0					
ANR	309285	Argument	EG ( scope )		308889	1					
ANR	309286	CallExpression	EG ( scope )		308889	0					
ANR	309287	Callee	EG		308889	0					
ANR	309288	Identifier	EG		308889	0					
ANR	309289	ArgumentList	scope		308889	1					
ANR	309290	Argument	scope		308889	0					
ANR	309291	Identifier	scope		308889	0					
ANR	309292	Argument	lc_function_name		308889	2					
ANR	309293	Identifier	lc_function_name		308889	0					
ANR	309294	IfStatement	if ( EXPECTED ( updated_fbc != NULL ) )		308889	2					
ANR	309295	Condition	EXPECTED ( updated_fbc != NULL )	1237:6:37845:37873	308889	0	True				
ANR	309296	CallExpression	EXPECTED ( updated_fbc != NULL )		308889	0					
ANR	309297	Callee	EXPECTED		308889	0					
ANR	309298	Identifier	EXPECTED		308889	0					
ANR	309299	ArgumentList	updated_fbc != NULL		308889	1					
ANR	309300	Argument	updated_fbc != NULL		308889	0					
ANR	309301	EqualityExpression	updated_fbc != NULL		308889	0		!=			
ANR	309302	Identifier	updated_fbc		308889	0					
ANR	309303	Identifier	NULL		308889	1					
ANR	309304	CompoundStatement		67:37:2329:2329	308889	1					
ANR	309305	ExpressionStatement	fbc = updated_fbc	1238:3:37881:37898	308889	0	True				
ANR	309306	AssignmentExpression	fbc = updated_fbc		308889	0		=			
ANR	309307	Identifier	fbc		308889	0					
ANR	309308	Identifier	updated_fbc		308889	1					
ANR	309309	ElseStatement	else		308889	0					
ANR	309310	CompoundStatement		69:9:2362:2362	308889	0					
ANR	309311	IfStatement	if ( ce -> __callstatic )		308889	0					
ANR	309312	Condition	ce -> __callstatic	1240:7:37918:37933	308889	0	True				
ANR	309313	PtrMemberAccess	ce -> __callstatic		308889	0					
ANR	309314	Identifier	ce		308889	0					
ANR	309315	Identifier	__callstatic		308889	1					
ANR	309316	CompoundStatement		70:25:2389:2389	308889	1					
ANR	309317	ExpressionStatement	"fbc = zend_get_user_callstatic_function ( ce , function_name )"	1241:4:37942:38000	308889	0	True				
ANR	309318	AssignmentExpression	"fbc = zend_get_user_callstatic_function ( ce , function_name )"		308889	0		=			
ANR	309319	Identifier	fbc		308889	0					
ANR	309320	CallExpression	"zend_get_user_callstatic_function ( ce , function_name )"		308889	1					
ANR	309321	Callee	zend_get_user_callstatic_function		308889	0					
ANR	309322	Identifier	zend_get_user_callstatic_function		308889	0					
ANR	309323	ArgumentList	ce		308889	1					
ANR	309324	Argument	ce		308889	0					
ANR	309325	Identifier	ce		308889	0					
ANR	309326	Argument	function_name		308889	1					
ANR	309327	Identifier	function_name		308889	0					
ANR	309328	ElseStatement	else		308889	0					
ANR	309329	CompoundStatement		72:10:2465:2465	308889	0					
ANR	309330	ExpressionStatement	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( function_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"	1243:4:38018:38228	308889	0	True				
ANR	309331	CallExpression	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( function_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"		308889	0					
ANR	309332	Callee	zend_throw_error		308889	0					
ANR	309333	Identifier	zend_throw_error		308889	0					
ANR	309334	ArgumentList	NULL		308889	1					
ANR	309335	Argument	NULL		308889	0					
ANR	309336	Identifier	NULL		308889	0					
ANR	309337	Argument	"""Call to %s method %s::%s() from context '%s'"""		308889	1					
ANR	309338	PrimaryExpression	"""Call to %s method %s::%s() from context '%s'"""		308889	0					
ANR	309339	Argument	zend_visibility_string ( fbc -> common . fn_flags )		308889	2					
ANR	309340	CallExpression	zend_visibility_string ( fbc -> common . fn_flags )		308889	0					
ANR	309341	Callee	zend_visibility_string		308889	0					
ANR	309342	Identifier	zend_visibility_string		308889	0					
ANR	309343	ArgumentList	fbc -> common . fn_flags		308889	1					
ANR	309344	Argument	fbc -> common . fn_flags		308889	0					
ANR	309345	MemberAccess	fbc -> common . fn_flags		308889	0					
ANR	309346	PtrMemberAccess	fbc -> common		308889	0					
ANR	309347	Identifier	fbc		308889	0					
ANR	309348	Identifier	common		308889	1					
ANR	309349	Identifier	fn_flags		308889	1					
ANR	309350	Argument	ZEND_FN_SCOPE_NAME ( fbc )		308889	3					
ANR	309351	CallExpression	ZEND_FN_SCOPE_NAME ( fbc )		308889	0					
ANR	309352	Callee	ZEND_FN_SCOPE_NAME		308889	0					
ANR	309353	Identifier	ZEND_FN_SCOPE_NAME		308889	0					
ANR	309354	ArgumentList	fbc		308889	1					
ANR	309355	Argument	fbc		308889	0					
ANR	309356	Identifier	fbc		308889	0					
ANR	309357	Argument	ZSTR_VAL ( function_name )		308889	4					
ANR	309358	CallExpression	ZSTR_VAL ( function_name )		308889	0					
ANR	309359	Callee	ZSTR_VAL		308889	0					
ANR	309360	Identifier	ZSTR_VAL		308889	0					
ANR	309361	ArgumentList	function_name		308889	1					
ANR	309362	Argument	function_name		308889	0					
ANR	309363	Identifier	function_name		308889	0					
ANR	309364	Argument	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308889	5					
ANR	309365	ConditionalExpression	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308889	0					
ANR	309366	Condition	EG ( scope )		308889	0					
ANR	309367	CallExpression	EG ( scope )		308889	0					
ANR	309368	Callee	EG		308889	0					
ANR	309369	Identifier	EG		308889	0					
ANR	309370	ArgumentList	scope		308889	1					
ANR	309371	Argument	scope		308889	0					
ANR	309372	Identifier	scope		308889	0					
ANR	309373	CallExpression	ZSTR_VAL ( EG ( scope ) -> name )		308889	1					
ANR	309374	Callee	ZSTR_VAL		308889	0					
ANR	309375	Identifier	ZSTR_VAL		308889	0					
ANR	309376	ArgumentList	EG ( scope ) -> name		308889	1					
ANR	309377	Argument	EG ( scope ) -> name		308889	0					
ANR	309378	PtrMemberAccess	EG ( scope ) -> name		308889	0					
ANR	309379	CallExpression	EG ( scope )		308889	0					
ANR	309380	Callee	EG		308889	0					
ANR	309381	Identifier	EG		308889	0					
ANR	309382	ArgumentList	scope		308889	1					
ANR	309383	Argument	scope		308889	0					
ANR	309384	Identifier	scope		308889	0					
ANR	309385	Identifier	name		308889	1					
ANR	309386	PrimaryExpression	""""""		308889	2					
ANR	309387	ExpressionStatement	fbc = NULL	1244:4:38234:38244	308889	1	True				
ANR	309388	AssignmentExpression	fbc = NULL		308889	0		=			
ANR	309389	Identifier	fbc		308889	0					
ANR	309390	Identifier	NULL		308889	1					
ANR	309391	ElseStatement	else		308889	0					
ANR	309392	IfStatement	if ( ( fbc -> common . fn_flags & ZEND_ACC_PROTECTED ) )		308889	0					
ANR	309393	Condition	fbc -> common . fn_flags & ZEND_ACC_PROTECTED	1247:12:38267:38309	308889	0	True				
ANR	309394	BitAndExpression	fbc -> common . fn_flags & ZEND_ACC_PROTECTED		308889	0		&			
ANR	309395	MemberAccess	fbc -> common . fn_flags		308889	0					
ANR	309396	PtrMemberAccess	fbc -> common		308889	0					
ANR	309397	Identifier	fbc		308889	0					
ANR	309398	Identifier	common		308889	1					
ANR	309399	Identifier	fn_flags		308889	1					
ANR	309400	Identifier	ZEND_ACC_PROTECTED		308889	1					
ANR	309401	CompoundStatement		77:57:2765:2765	308889	1					
ANR	309402	IfStatement	"if ( UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) ) ) )"		308889	0					
ANR	309403	Condition	"UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) ) )"	1250:6:38406:38484	308889	0	True				
ANR	309404	CallExpression	"UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) ) )"		308889	0					
ANR	309405	Callee	UNEXPECTED		308889	0					
ANR	309406	Identifier	UNEXPECTED		308889	0					
ANR	309407	ArgumentList	"! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308889	1					
ANR	309408	Argument	"! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308889	0					
ANR	309409	UnaryOperationExpression	"! zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308889	0					
ANR	309410	UnaryOperator	!		308889	0					
ANR	309411	CallExpression	"zend_check_protected ( zend_get_function_root_class ( fbc ) , EG ( scope ) )"		308889	1					
ANR	309412	Callee	zend_check_protected		308889	0					
ANR	309413	Identifier	zend_check_protected		308889	0					
ANR	309414	ArgumentList	zend_get_function_root_class ( fbc )		308889	1					
ANR	309415	Argument	zend_get_function_root_class ( fbc )		308889	0					
ANR	309416	CallExpression	zend_get_function_root_class ( fbc )		308889	0					
ANR	309417	Callee	zend_get_function_root_class		308889	0					
ANR	309418	Identifier	zend_get_function_root_class		308889	0					
ANR	309419	ArgumentList	fbc		308889	1					
ANR	309420	Argument	fbc		308889	0					
ANR	309421	Identifier	fbc		308889	0					
ANR	309422	Argument	EG ( scope )		308889	1					
ANR	309423	CallExpression	EG ( scope )		308889	0					
ANR	309424	Callee	EG		308889	0					
ANR	309425	Identifier	EG		308889	0					
ANR	309426	ArgumentList	scope		308889	1					
ANR	309427	Argument	scope		308889	0					
ANR	309428	Identifier	scope		308889	0					
ANR	309429	CompoundStatement		80:87:2940:2940	308889	1					
ANR	309430	IfStatement	if ( ce -> __callstatic )		308889	0					
ANR	309431	Condition	ce -> __callstatic	1251:7:38496:38511	308889	0	True				
ANR	309432	PtrMemberAccess	ce -> __callstatic		308889	0					
ANR	309433	Identifier	ce		308889	0					
ANR	309434	Identifier	__callstatic		308889	1					
ANR	309435	CompoundStatement		81:25:2967:2967	308889	1					
ANR	309436	ExpressionStatement	"fbc = zend_get_user_callstatic_function ( ce , function_name )"	1252:4:38520:38578	308889	0	True				
ANR	309437	AssignmentExpression	"fbc = zend_get_user_callstatic_function ( ce , function_name )"		308889	0		=			
ANR	309438	Identifier	fbc		308889	0					
ANR	309439	CallExpression	"zend_get_user_callstatic_function ( ce , function_name )"		308889	1					
ANR	309440	Callee	zend_get_user_callstatic_function		308889	0					
ANR	309441	Identifier	zend_get_user_callstatic_function		308889	0					
ANR	309442	ArgumentList	ce		308889	1					
ANR	309443	Argument	ce		308889	0					
ANR	309444	Identifier	ce		308889	0					
ANR	309445	Argument	function_name		308889	1					
ANR	309446	Identifier	function_name		308889	0					
ANR	309447	ElseStatement	else		308889	0					
ANR	309448	CompoundStatement		83:10:3043:3043	308889	0					
ANR	309449	ExpressionStatement	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( function_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"	1254:4:38596:38806	308889	0	True				
ANR	309450	CallExpression	"zend_throw_error ( NULL , ""Call to %s method %s::%s() from context '%s'"" , zend_visibility_string ( fbc -> common . fn_flags ) , ZEND_FN_SCOPE_NAME ( fbc ) , ZSTR_VAL ( function_name ) , EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """" )"		308889	0					
ANR	309451	Callee	zend_throw_error		308889	0					
ANR	309452	Identifier	zend_throw_error		308889	0					
ANR	309453	ArgumentList	NULL		308889	1					
ANR	309454	Argument	NULL		308889	0					
ANR	309455	Identifier	NULL		308889	0					
ANR	309456	Argument	"""Call to %s method %s::%s() from context '%s'"""		308889	1					
ANR	309457	PrimaryExpression	"""Call to %s method %s::%s() from context '%s'"""		308889	0					
ANR	309458	Argument	zend_visibility_string ( fbc -> common . fn_flags )		308889	2					
ANR	309459	CallExpression	zend_visibility_string ( fbc -> common . fn_flags )		308889	0					
ANR	309460	Callee	zend_visibility_string		308889	0					
ANR	309461	Identifier	zend_visibility_string		308889	0					
ANR	309462	ArgumentList	fbc -> common . fn_flags		308889	1					
ANR	309463	Argument	fbc -> common . fn_flags		308889	0					
ANR	309464	MemberAccess	fbc -> common . fn_flags		308889	0					
ANR	309465	PtrMemberAccess	fbc -> common		308889	0					
ANR	309466	Identifier	fbc		308889	0					
ANR	309467	Identifier	common		308889	1					
ANR	309468	Identifier	fn_flags		308889	1					
ANR	309469	Argument	ZEND_FN_SCOPE_NAME ( fbc )		308889	3					
ANR	309470	CallExpression	ZEND_FN_SCOPE_NAME ( fbc )		308889	0					
ANR	309471	Callee	ZEND_FN_SCOPE_NAME		308889	0					
ANR	309472	Identifier	ZEND_FN_SCOPE_NAME		308889	0					
ANR	309473	ArgumentList	fbc		308889	1					
ANR	309474	Argument	fbc		308889	0					
ANR	309475	Identifier	fbc		308889	0					
ANR	309476	Argument	ZSTR_VAL ( function_name )		308889	4					
ANR	309477	CallExpression	ZSTR_VAL ( function_name )		308889	0					
ANR	309478	Callee	ZSTR_VAL		308889	0					
ANR	309479	Identifier	ZSTR_VAL		308889	0					
ANR	309480	ArgumentList	function_name		308889	1					
ANR	309481	Argument	function_name		308889	0					
ANR	309482	Identifier	function_name		308889	0					
ANR	309483	Argument	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308889	5					
ANR	309484	ConditionalExpression	"EG ( scope ) ? ZSTR_VAL ( EG ( scope ) -> name ) : """""		308889	0					
ANR	309485	Condition	EG ( scope )		308889	0					
ANR	309486	CallExpression	EG ( scope )		308889	0					
ANR	309487	Callee	EG		308889	0					
ANR	309488	Identifier	EG		308889	0					
ANR	309489	ArgumentList	scope		308889	1					
ANR	309490	Argument	scope		308889	0					
ANR	309491	Identifier	scope		308889	0					
ANR	309492	CallExpression	ZSTR_VAL ( EG ( scope ) -> name )		308889	1					
ANR	309493	Callee	ZSTR_VAL		308889	0					
ANR	309494	Identifier	ZSTR_VAL		308889	0					
ANR	309495	ArgumentList	EG ( scope ) -> name		308889	1					
ANR	309496	Argument	EG ( scope ) -> name		308889	0					
ANR	309497	PtrMemberAccess	EG ( scope ) -> name		308889	0					
ANR	309498	CallExpression	EG ( scope )		308889	0					
ANR	309499	Callee	EG		308889	0					
ANR	309500	Identifier	EG		308889	0					
ANR	309501	ArgumentList	scope		308889	1					
ANR	309502	Argument	scope		308889	0					
ANR	309503	Identifier	scope		308889	0					
ANR	309504	Identifier	name		308889	1					
ANR	309505	PrimaryExpression	""""""		308889	2					
ANR	309506	ExpressionStatement	fbc = NULL	1255:4:38812:38822	308889	1	True				
ANR	309507	AssignmentExpression	fbc = NULL		308889	0		=			
ANR	309508	Identifier	fbc		308889	0					
ANR	309509	Identifier	NULL		308889	1					
ANR	309510	IfStatement	if ( UNEXPECTED ( ! key ) )		308889	9					
ANR	309511	Condition	UNEXPECTED ( ! key )	1260:5:38842:38857	308889	0	True				
ANR	309512	CallExpression	UNEXPECTED ( ! key )		308889	0					
ANR	309513	Callee	UNEXPECTED		308889	0					
ANR	309514	Identifier	UNEXPECTED		308889	0					
ANR	309515	ArgumentList	! key		308889	1					
ANR	309516	Argument	! key		308889	0					
ANR	309517	UnaryOperationExpression	! key		308889	0					
ANR	309518	UnaryOperator	!		308889	0					
ANR	309519	Identifier	key		308889	1					
ANR	309520	CompoundStatement		90:23:3313:3313	308889	1					
ANR	309521	ExpressionStatement	zend_string_release ( lc_function_name )	1261:2:38864:38901	308889	0	True				
ANR	309522	CallExpression	zend_string_release ( lc_function_name )		308889	0					
ANR	309523	Callee	zend_string_release		308889	0					
ANR	309524	Identifier	zend_string_release		308889	0					
ANR	309525	ArgumentList	lc_function_name		308889	1					
ANR	309526	Argument	lc_function_name		308889	0					
ANR	309527	Identifier	lc_function_name		308889	0					
ANR	309528	ReturnStatement	return fbc ;	1264:1:38908:38918	308889	10	True				
ANR	309529	Identifier	fbc		308889	0					
ANR	309530	ReturnType	ZEND_API zend_function *		308889	1					
ANR	309531	Identifier	zend_std_get_static_method		308889	2					
ANR	309532	ParameterList	"zend_class_entry * ce , zend_string * function_name , const zval * key"		308889	3					
ANR	309533	Parameter	zend_class_entry * ce	1170:51:35469:35488	308889	0	True				
ANR	309534	ParameterType	zend_class_entry *		308889	0					
ANR	309535	Identifier	ce		308889	1					
ANR	309536	Parameter	zend_string * function_name	1170:73:35491:35516	308889	1	True				
ANR	309537	ParameterType	zend_string *		308889	0					
ANR	309538	Identifier	function_name		308889	1					
ANR	309539	Parameter	const zval * key	1170:101:35519:35533	308889	2	True				
ANR	309540	ParameterType	const zval *		308889	0					
ANR	309541	Identifier	key		308889	1					
ANR	309542	CFGEntryNode	ENTRY		308889		True				
ANR	309543	CFGExitNode	EXIT		308889		True				
ANR	309544	Symbol	zend_get_user_call_function		308889						
ANR	309545	Symbol	ce -> constructor -> common . function_name		308889						
ANR	309546	Symbol	object -> ce		308889						
ANR	309547	Symbol	current_execute_data		308889						
ANR	309548	Symbol	* ce -> constructor		308889						
ANR	309549	Symbol	* ce		308889						
ANR	309550	Symbol	zend_visibility_string		308889						
ANR	309551	Symbol	zend_string_tolower		308889						
ANR	309552	Symbol	zend_check_private_int		308889						
ANR	309553	Symbol	zend_hash_find		308889						
ANR	309554	Symbol	memcmp		308889						
ANR	309555	Symbol	ce -> name		308889						
ANR	309556	Symbol	ce -> __callstatic		308889						
ANR	309557	Symbol	EG ( scope ) -> name		308889						
ANR	309558	Symbol	call_ce -> __call		308889						
ANR	309559	Symbol	EG		308889						
ANR	309560	Symbol	NULL		308889						
ANR	309561	Symbol	fbc		308889						
ANR	309562	Symbol	call_ce -> parent		308889						
ANR	309563	Symbol	updated_fbc		308889						
ANR	309564	Symbol	ce -> __call		308889						
ANR	309565	Symbol	Z_STR_P		308889						
ANR	309566	Symbol	lc_class_name		308889						
ANR	309567	Symbol	fbc -> common . fn_flags		308889						
ANR	309568	Symbol	object		308889						
ANR	309569	Symbol	instanceof_function		308889						
ANR	309570	Symbol	Z_FUNC_P		308889						
ANR	309571	Symbol	zend_get_user_callstatic_function		308889						
ANR	309572	Symbol	ZEND_ACC_PUBLIC		308889						
ANR	309573	Symbol	& ce -> function_table		308889						
ANR	309574	Symbol	* EG		308889						
ANR	309575	Symbol	ce -> constructor -> common		308889						
ANR	309576	Symbol	* * ce		308889						
ANR	309577	Symbol	* object		308889						
ANR	309578	Symbol	zend_get_this_object		308889						
ANR	309579	Symbol	UNEXPECTED		308889						
ANR	309580	Symbol	call_ce		308889						
ANR	309581	Symbol	fbc -> op_array		308889						
ANR	309582	Symbol	scope		308889						
ANR	309583	Symbol	fbc -> op_array . fn_flags		308889						
ANR	309584	Symbol	ZEND_ACC_STATIC		308889						
ANR	309585	Symbol	ZEND_ACC_PROTECTED		308889						
ANR	309586	Symbol	lc_function_name		308889						
ANR	309587	Symbol	ZEND_FN_SCOPE_NAME		308889						
ANR	309588	Symbol	key		308889						
ANR	309589	Symbol	zend_str_tolower_dup		308889						
ANR	309590	Symbol	ce		308889						
ANR	309591	Symbol	ce -> constructor		308889						
ANR	309592	Symbol	fbc -> common		308889						
ANR	309593	Symbol	zend_get_function_root_class		308889						
ANR	309594	Symbol	* fbc		308889						
ANR	309595	Symbol	ZSTR_VAL		308889						
ANR	309596	Symbol	ZEND_ACC_PRIVATE		308889						
ANR	309597	Symbol	E_ERROR		308889						
ANR	309598	Symbol	fbc -> common . function_name		308889						
ANR	309599	Symbol	func		308889						
ANR	309600	Symbol	function_name		308889						
ANR	309601	Symbol	zend_check_protected		308889						
ANR	309602	Symbol	ZSTR_LEN		308889						
ANR	309603	Symbol	EXPECTED		308889						
ANR	309604	Symbol	* call_ce		308889						
ANR	309605	Function	zend_std_get_static_property	1268:0:38933:40098							
ANR	309606	FunctionDef	"zend_std_get_static_property (zend_class_entry * ce , zend_string * property_name , zend_bool silent)"		309605	0					
ANR	309607	CompoundStatement		1269:0:39055:40098	309605	0					
ANR	309608	IdentifierDeclStatement	"zend_property_info * property_info = zend_hash_find_ptr ( & ce -> properties_info , property_name ) ;"	1270:1:39058:39149	309605	0	True				
ANR	309609	IdentifierDecl	"* property_info = zend_hash_find_ptr ( & ce -> properties_info , property_name )"		309605	0					
ANR	309610	IdentifierDeclType	zend_property_info *		309605	0					
ANR	309611	Identifier	property_info		309605	1					
ANR	309612	AssignmentExpression	"* property_info = zend_hash_find_ptr ( & ce -> properties_info , property_name )"		309605	2		=			
ANR	309613	Identifier	property_info		309605	0					
ANR	309614	CallExpression	"zend_hash_find_ptr ( & ce -> properties_info , property_name )"		309605	1					
ANR	309615	Callee	zend_hash_find_ptr		309605	0					
ANR	309616	Identifier	zend_hash_find_ptr		309605	0					
ANR	309617	ArgumentList	& ce -> properties_info		309605	1					
ANR	309618	Argument	& ce -> properties_info		309605	0					
ANR	309619	UnaryOperationExpression	& ce -> properties_info		309605	0					
ANR	309620	UnaryOperator	&		309605	0					
ANR	309621	PtrMemberAccess	ce -> properties_info		309605	1					
ANR	309622	Identifier	ce		309605	0					
ANR	309623	Identifier	properties_info		309605	1					
ANR	309624	Argument	property_name		309605	1					
ANR	309625	Identifier	property_name		309605	0					
ANR	309626	IdentifierDeclStatement	zval * ret ;	1271:1:39152:39161	309605	1	True				
ANR	309627	IdentifierDecl	* ret		309605	0					
ANR	309628	IdentifierDeclType	zval *		309605	0					
ANR	309629	Identifier	ret		309605	1					
ANR	309630	IfStatement	if ( UNEXPECTED ( property_info == NULL ) )		309605	2					
ANR	309631	Condition	UNEXPECTED ( property_info == NULL )	1273:5:39169:39201	309605	0	True				
ANR	309632	CallExpression	UNEXPECTED ( property_info == NULL )		309605	0					
ANR	309633	Callee	UNEXPECTED		309605	0					
ANR	309634	Identifier	UNEXPECTED		309605	0					
ANR	309635	ArgumentList	property_info == NULL		309605	1					
ANR	309636	Argument	property_info == NULL		309605	0					
ANR	309637	EqualityExpression	property_info == NULL		309605	0		==			
ANR	309638	Identifier	property_info		309605	0					
ANR	309639	Identifier	NULL		309605	1					
ANR	309640	CompoundStatement		5:40:148:148	309605	1					
ANR	309641	GotoStatement	goto undeclared_property ;	1274:2:39208:39232	309605	0	True				
ANR	309642	Identifier	undeclared_property		309605	0					
ANR	309643	IfStatement	"if ( UNEXPECTED ( ! zend_verify_property_access ( property_info , ce ) ) )"		309605	3					
ANR	309644	Condition	"UNEXPECTED ( ! zend_verify_property_access ( property_info , ce ) )"	1277:5:39243:39301	309605	0	True				
ANR	309645	CallExpression	"UNEXPECTED ( ! zend_verify_property_access ( property_info , ce ) )"		309605	0					
ANR	309646	Callee	UNEXPECTED		309605	0					
ANR	309647	Identifier	UNEXPECTED		309605	0					
ANR	309648	ArgumentList	"! zend_verify_property_access ( property_info , ce )"		309605	1					
ANR	309649	Argument	"! zend_verify_property_access ( property_info , ce )"		309605	0					
ANR	309650	UnaryOperationExpression	"! zend_verify_property_access ( property_info , ce )"		309605	0					
ANR	309651	UnaryOperator	!		309605	0					
ANR	309652	CallExpression	"zend_verify_property_access ( property_info , ce )"		309605	1					
ANR	309653	Callee	zend_verify_property_access		309605	0					
ANR	309654	Identifier	zend_verify_property_access		309605	0					
ANR	309655	ArgumentList	property_info		309605	1					
ANR	309656	Argument	property_info		309605	0					
ANR	309657	Identifier	property_info		309605	0					
ANR	309658	Argument	ce		309605	1					
ANR	309659	Identifier	ce		309605	0					
ANR	309660	CompoundStatement		9:66:248:248	309605	1					
ANR	309661	IfStatement	if ( ! silent )		309605	0					
ANR	309662	Condition	! silent	1278:6:39312:39318	309605	0	True				
ANR	309663	UnaryOperationExpression	! silent		309605	0					
ANR	309664	UnaryOperator	!		309605	0					
ANR	309665	Identifier	silent		309605	1					
ANR	309666	CompoundStatement		10:15:265:265	309605	1					
ANR	309667	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access %s property %s::$%s"" , zend_visibility_string ( property_info -> flags ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( property_name ) )"	1279:3:39326:39476	309605	0	True				
ANR	309668	CallExpression	"zend_throw_error ( NULL , ""Cannot access %s property %s::$%s"" , zend_visibility_string ( property_info -> flags ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( property_name ) )"		309605	0					
ANR	309669	Callee	zend_throw_error		309605	0					
ANR	309670	Identifier	zend_throw_error		309605	0					
ANR	309671	ArgumentList	NULL		309605	1					
ANR	309672	Argument	NULL		309605	0					
ANR	309673	Identifier	NULL		309605	0					
ANR	309674	Argument	"""Cannot access %s property %s::$%s"""		309605	1					
ANR	309675	PrimaryExpression	"""Cannot access %s property %s::$%s"""		309605	0					
ANR	309676	Argument	zend_visibility_string ( property_info -> flags )		309605	2					
ANR	309677	CallExpression	zend_visibility_string ( property_info -> flags )		309605	0					
ANR	309678	Callee	zend_visibility_string		309605	0					
ANR	309679	Identifier	zend_visibility_string		309605	0					
ANR	309680	ArgumentList	property_info -> flags		309605	1					
ANR	309681	Argument	property_info -> flags		309605	0					
ANR	309682	PtrMemberAccess	property_info -> flags		309605	0					
ANR	309683	Identifier	property_info		309605	0					
ANR	309684	Identifier	flags		309605	1					
ANR	309685	Argument	ZSTR_VAL ( ce -> name )		309605	3					
ANR	309686	CallExpression	ZSTR_VAL ( ce -> name )		309605	0					
ANR	309687	Callee	ZSTR_VAL		309605	0					
ANR	309688	Identifier	ZSTR_VAL		309605	0					
ANR	309689	ArgumentList	ce -> name		309605	1					
ANR	309690	Argument	ce -> name		309605	0					
ANR	309691	PtrMemberAccess	ce -> name		309605	0					
ANR	309692	Identifier	ce		309605	0					
ANR	309693	Identifier	name		309605	1					
ANR	309694	Argument	ZSTR_VAL ( property_name )		309605	4					
ANR	309695	CallExpression	ZSTR_VAL ( property_name )		309605	0					
ANR	309696	Callee	ZSTR_VAL		309605	0					
ANR	309697	Identifier	ZSTR_VAL		309605	0					
ANR	309698	ArgumentList	property_name		309605	1					
ANR	309699	Argument	property_name		309605	0					
ANR	309700	Identifier	property_name		309605	0					
ANR	309701	ReturnStatement	return NULL ;	1281:2:39484:39495	309605	1	True				
ANR	309702	Identifier	NULL		309605	0					
ANR	309703	IfStatement	if ( UNEXPECTED ( ( property_info -> flags & ZEND_ACC_STATIC ) == 0 ) )		309605	4					
ANR	309704	Condition	UNEXPECTED ( ( property_info -> flags & ZEND_ACC_STATIC ) == 0 )	1284:5:39506:39562	309605	0	True				
ANR	309705	CallExpression	UNEXPECTED ( ( property_info -> flags & ZEND_ACC_STATIC ) == 0 )		309605	0					
ANR	309706	Callee	UNEXPECTED		309605	0					
ANR	309707	Identifier	UNEXPECTED		309605	0					
ANR	309708	ArgumentList	( property_info -> flags & ZEND_ACC_STATIC ) == 0		309605	1					
ANR	309709	Argument	( property_info -> flags & ZEND_ACC_STATIC ) == 0		309605	0					
ANR	309710	EqualityExpression	( property_info -> flags & ZEND_ACC_STATIC ) == 0		309605	0		==			
ANR	309711	BitAndExpression	property_info -> flags & ZEND_ACC_STATIC		309605	0		&			
ANR	309712	PtrMemberAccess	property_info -> flags		309605	0					
ANR	309713	Identifier	property_info		309605	0					
ANR	309714	Identifier	flags		309605	1					
ANR	309715	Identifier	ZEND_ACC_STATIC		309605	1					
ANR	309716	PrimaryExpression	0		309605	1					
ANR	309717	CompoundStatement		16:64:509:509	309605	1					
ANR	309718	GotoStatement	goto undeclared_property ;	1285:2:39569:39593	309605	0	True				
ANR	309719	Identifier	undeclared_property		309605	0					
ANR	309720	IfStatement	if ( UNEXPECTED ( ! ( ce -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED ) ) )		309605	5					
ANR	309721	Condition	UNEXPECTED ( ! ( ce -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED ) )	1288:5:39604:39659	309605	0	True				
ANR	309722	CallExpression	UNEXPECTED ( ! ( ce -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED ) )		309605	0					
ANR	309723	Callee	UNEXPECTED		309605	0					
ANR	309724	Identifier	UNEXPECTED		309605	0					
ANR	309725	ArgumentList	! ( ce -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED )		309605	1					
ANR	309726	Argument	! ( ce -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED )		309605	0					
ANR	309727	UnaryOperationExpression	! ( ce -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED )		309605	0					
ANR	309728	UnaryOperator	!		309605	0					
ANR	309729	BitAndExpression	ce -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED		309605	1		&			
ANR	309730	PtrMemberAccess	ce -> ce_flags		309605	0					
ANR	309731	Identifier	ce		309605	0					
ANR	309732	Identifier	ce_flags		309605	1					
ANR	309733	Identifier	ZEND_ACC_CONSTANTS_UPDATED		309605	1					
ANR	309734	CompoundStatement		20:63:606:606	309605	1					
ANR	309735	IfStatement	if ( UNEXPECTED ( zend_update_class_constants ( ce ) ) != SUCCESS )		309605	0					
ANR	309736	Condition	UNEXPECTED ( zend_update_class_constants ( ce ) ) != SUCCESS	1289:6:39670:39723	309605	0	True				
ANR	309737	EqualityExpression	UNEXPECTED ( zend_update_class_constants ( ce ) ) != SUCCESS		309605	0		!=			
ANR	309738	CallExpression	UNEXPECTED ( zend_update_class_constants ( ce ) )		309605	0					
ANR	309739	Callee	UNEXPECTED		309605	0					
ANR	309740	Identifier	UNEXPECTED		309605	0					
ANR	309741	ArgumentList	zend_update_class_constants ( ce )		309605	1					
ANR	309742	Argument	zend_update_class_constants ( ce )		309605	0					
ANR	309743	CallExpression	zend_update_class_constants ( ce )		309605	0					
ANR	309744	Callee	zend_update_class_constants		309605	0					
ANR	309745	Identifier	zend_update_class_constants		309605	0					
ANR	309746	ArgumentList	ce		309605	1					
ANR	309747	Argument	ce		309605	0					
ANR	309748	Identifier	ce		309605	0					
ANR	309749	Identifier	SUCCESS		309605	1					
ANR	309750	CompoundStatement		21:62:670:670	309605	1					
ANR	309751	ReturnStatement	return NULL ;	1290:3:39731:39742	309605	0	True				
ANR	309752	Identifier	NULL		309605	0					
ANR	309753	ExpressionStatement	ret = CE_STATIC_MEMBERS ( ce ) + property_info -> offset	1293:1:39752:39803	309605	6	True				
ANR	309754	AssignmentExpression	ret = CE_STATIC_MEMBERS ( ce ) + property_info -> offset		309605	0		=			
ANR	309755	Identifier	ret		309605	0					
ANR	309756	AdditiveExpression	CE_STATIC_MEMBERS ( ce ) + property_info -> offset		309605	1		+			
ANR	309757	CallExpression	CE_STATIC_MEMBERS ( ce )		309605	0					
ANR	309758	Callee	CE_STATIC_MEMBERS		309605	0					
ANR	309759	Identifier	CE_STATIC_MEMBERS		309605	0					
ANR	309760	ArgumentList	ce		309605	1					
ANR	309761	Argument	ce		309605	0					
ANR	309762	Identifier	ce		309605	0					
ANR	309763	PtrMemberAccess	property_info -> offset		309605	1					
ANR	309764	Identifier	property_info		309605	0					
ANR	309765	Identifier	offset		309605	1					
ANR	309766	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		309605	7					
ANR	309767	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	1296:5:39859:39899	309605	0	True				
ANR	309768	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		309605	0					
ANR	309769	Callee	UNEXPECTED		309605	0					
ANR	309770	Identifier	UNEXPECTED		309605	0					
ANR	309771	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		309605	1					
ANR	309772	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		309605	0					
ANR	309773	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		309605	0		==			
ANR	309774	CallExpression	CE_STATIC_MEMBERS ( ce )		309605	0					
ANR	309775	Callee	CE_STATIC_MEMBERS		309605	0					
ANR	309776	Identifier	CE_STATIC_MEMBERS		309605	0					
ANR	309777	ArgumentList	ce		309605	1					
ANR	309778	Argument	ce		309605	0					
ANR	309779	Identifier	ce		309605	0					
ANR	309780	Identifier	NULL		309605	1					
ANR	309781	CompoundStatement		28:48:846:846	309605	1					
ANR	309782	Label	undeclared_property :	1297:0:39904:39923	309605	0	True				
ANR	309783	Identifier	undeclared_property		309605	0					
ANR	309784	IfStatement	if ( ! silent )		309605	1					
ANR	309785	Condition	! silent	1298:6:39931:39937	309605	0	True				
ANR	309786	UnaryOperationExpression	! silent		309605	0					
ANR	309787	UnaryOperator	!		309605	0					
ANR	309788	Identifier	silent		309605	1					
ANR	309789	CompoundStatement		30:15:884:884	309605	1					
ANR	309790	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( property_name ) )"	1299:3:39945:40061	309605	0	True				
ANR	309791	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( property_name ) )"		309605	0					
ANR	309792	Callee	zend_throw_error		309605	0					
ANR	309793	Identifier	zend_throw_error		309605	0					
ANR	309794	ArgumentList	NULL		309605	1					
ANR	309795	Argument	NULL		309605	0					
ANR	309796	Identifier	NULL		309605	0					
ANR	309797	Argument	"""Access to undeclared static property: %s::$%s"""		309605	1					
ANR	309798	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		309605	0					
ANR	309799	Argument	ZSTR_VAL ( ce -> name )		309605	2					
ANR	309800	CallExpression	ZSTR_VAL ( ce -> name )		309605	0					
ANR	309801	Callee	ZSTR_VAL		309605	0					
ANR	309802	Identifier	ZSTR_VAL		309605	0					
ANR	309803	ArgumentList	ce -> name		309605	1					
ANR	309804	Argument	ce -> name		309605	0					
ANR	309805	PtrMemberAccess	ce -> name		309605	0					
ANR	309806	Identifier	ce		309605	0					
ANR	309807	Identifier	name		309605	1					
ANR	309808	Argument	ZSTR_VAL ( property_name )		309605	3					
ANR	309809	CallExpression	ZSTR_VAL ( property_name )		309605	0					
ANR	309810	Callee	ZSTR_VAL		309605	0					
ANR	309811	Identifier	ZSTR_VAL		309605	0					
ANR	309812	ArgumentList	property_name		309605	1					
ANR	309813	Argument	property_name		309605	0					
ANR	309814	Identifier	property_name		309605	0					
ANR	309815	ExpressionStatement	ret = NULL	1301:2:40069:40079	309605	2	True				
ANR	309816	AssignmentExpression	ret = NULL		309605	0		=			
ANR	309817	Identifier	ret		309605	0					
ANR	309818	Identifier	NULL		309605	1					
ANR	309819	ReturnStatement	return ret ;	1304:1:40086:40096	309605	8	True				
ANR	309820	Identifier	ret		309605	0					
ANR	309821	ReturnType	ZEND_API zval *		309605	1					
ANR	309822	Identifier	zend_std_get_static_property		309605	2					
ANR	309823	ParameterList	"zend_class_entry * ce , zend_string * property_name , zend_bool silent"		309605	3					
ANR	309824	Parameter	zend_class_entry * ce	1268:44:38977:38996	309605	0	True				
ANR	309825	ParameterType	zend_class_entry *		309605	0					
ANR	309826	Identifier	ce		309605	1					
ANR	309827	Parameter	zend_string * property_name	1268:66:38999:39024	309605	1	True				
ANR	309828	ParameterType	zend_string *		309605	0					
ANR	309829	Identifier	property_name		309605	1					
ANR	309830	Parameter	zend_bool silent	1268:94:39027:39042	309605	2	True				
ANR	309831	ParameterType	zend_bool		309605	0					
ANR	309832	Identifier	silent		309605	1					
ANR	309833	CFGEntryNode	ENTRY		309605		True				
ANR	309834	CFGExitNode	EXIT		309605		True				
ANR	309835	Symbol	property_info		309605						
ANR	309836	Symbol	ret		309605						
ANR	309837	Symbol	ce		309605						
ANR	309838	Symbol	silent		309605						
ANR	309839	Symbol	NULL		309605						
ANR	309840	Symbol	ZEND_ACC_CONSTANTS_UPDATED		309605						
ANR	309841	Symbol	SUCCESS		309605						
ANR	309842	Symbol	property_info -> offset		309605						
ANR	309843	Symbol	zend_verify_property_access		309605						
ANR	309844	Symbol	CE_STATIC_MEMBERS		309605						
ANR	309845	Symbol	* ce		309605						
ANR	309846	Symbol	zend_visibility_string		309605						
ANR	309847	Symbol	property_name		309605						
ANR	309848	Symbol	ZSTR_VAL		309605						
ANR	309849	Symbol	UNEXPECTED		309605						
ANR	309850	Symbol	ce -> ce_flags		309605						
ANR	309851	Symbol	* property_info		309605						
ANR	309852	Symbol	& ce -> properties_info		309605						
ANR	309853	Symbol	zend_update_class_constants		309605						
ANR	309854	Symbol	ZEND_ACC_STATIC		309605						
ANR	309855	Symbol	ce -> name		309605						
ANR	309856	Symbol	zend_hash_find_ptr		309605						
ANR	309857	Symbol	property_info -> flags		309605						
ANR	309858	Function	zend_std_unset_static_property	1308:0:40111:40358							
ANR	309859	FunctionDef	"zend_std_unset_static_property (zend_class_entry * ce , zend_string * property_name)"		309858	0					
ANR	309860	CompoundStatement		1309:0:40231:40358	309858	0					
ANR	309861	ExpressionStatement	"zend_throw_error ( NULL , ""Attempt to unset static property %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( property_name ) )"	1310:1:40234:40345	309858	0	True				
ANR	309862	CallExpression	"zend_throw_error ( NULL , ""Attempt to unset static property %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( property_name ) )"		309858	0					
ANR	309863	Callee	zend_throw_error		309858	0					
ANR	309864	Identifier	zend_throw_error		309858	0					
ANR	309865	ArgumentList	NULL		309858	1					
ANR	309866	Argument	NULL		309858	0					
ANR	309867	Identifier	NULL		309858	0					
ANR	309868	Argument	"""Attempt to unset static property %s::$%s"""		309858	1					
ANR	309869	PrimaryExpression	"""Attempt to unset static property %s::$%s"""		309858	0					
ANR	309870	Argument	ZSTR_VAL ( ce -> name )		309858	2					
ANR	309871	CallExpression	ZSTR_VAL ( ce -> name )		309858	0					
ANR	309872	Callee	ZSTR_VAL		309858	0					
ANR	309873	Identifier	ZSTR_VAL		309858	0					
ANR	309874	ArgumentList	ce -> name		309858	1					
ANR	309875	Argument	ce -> name		309858	0					
ANR	309876	PtrMemberAccess	ce -> name		309858	0					
ANR	309877	Identifier	ce		309858	0					
ANR	309878	Identifier	name		309858	1					
ANR	309879	Argument	ZSTR_VAL ( property_name )		309858	3					
ANR	309880	CallExpression	ZSTR_VAL ( property_name )		309858	0					
ANR	309881	Callee	ZSTR_VAL		309858	0					
ANR	309882	Identifier	ZSTR_VAL		309858	0					
ANR	309883	ArgumentList	property_name		309858	1					
ANR	309884	Argument	property_name		309858	0					
ANR	309885	Identifier	property_name		309858	0					
ANR	309886	ReturnStatement	return 0 ;	1311:1:40348:40356	309858	1	True				
ANR	309887	PrimaryExpression	0		309858	0					
ANR	309888	ReturnType	ZEND_API ZEND_COLD zend_bool		309858	1					
ANR	309889	Identifier	zend_std_unset_static_property		309858	2					
ANR	309890	ParameterList	"zend_class_entry * ce , zend_string * property_name"		309858	3					
ANR	309891	Parameter	zend_class_entry * ce	1308:60:40171:40190	309858	0	True				
ANR	309892	ParameterType	zend_class_entry *		309858	0					
ANR	309893	Identifier	ce		309858	1					
ANR	309894	Parameter	zend_string * property_name	1308:82:40193:40218	309858	1	True				
ANR	309895	ParameterType	zend_string *		309858	0					
ANR	309896	Identifier	property_name		309858	1					
ANR	309897	CFGEntryNode	ENTRY		309858		True				
ANR	309898	CFGExitNode	EXIT		309858		True				
ANR	309899	Symbol	ce		309858						
ANR	309900	Symbol	NULL		309858						
ANR	309901	Symbol	ce -> name		309858						
ANR	309902	Symbol	* ce		309858						
ANR	309903	Symbol	property_name		309858						
ANR	309904	Symbol	ZSTR_VAL		309858						
ANR	309905	Function	zend_std_get_constructor	1315:9:40380:42180							
ANR	309906	FunctionDef	zend_std_get_constructor (zend_object * zobj)		309905	0					
ANR	309907	CompoundStatement		1316:0:40456:42180	309905	0					
ANR	309908	IdentifierDeclStatement	zend_function * constructor = zobj -> ce -> constructor ;	1317:1:40459:40509	309905	0	True				
ANR	309909	IdentifierDecl	* constructor = zobj -> ce -> constructor		309905	0					
ANR	309910	IdentifierDeclType	zend_function *		309905	0					
ANR	309911	Identifier	constructor		309905	1					
ANR	309912	AssignmentExpression	* constructor = zobj -> ce -> constructor		309905	2		=			
ANR	309913	Identifier	constructor		309905	0					
ANR	309914	PtrMemberAccess	zobj -> ce -> constructor		309905	1					
ANR	309915	PtrMemberAccess	zobj -> ce		309905	0					
ANR	309916	Identifier	zobj		309905	0					
ANR	309917	Identifier	ce		309905	1					
ANR	309918	Identifier	constructor		309905	1					
ANR	309919	IfStatement	if ( constructor )		309905	1					
ANR	309920	Condition	constructor	1319:5:40517:40527	309905	0	True				
ANR	309921	Identifier	constructor		309905	0					
ANR	309922	CompoundStatement		4:18:73:73	309905	1					
ANR	309923	IfStatement	if ( constructor -> op_array . fn_flags & ZEND_ACC_PUBLIC )		309905	0					
ANR	309924	Condition	constructor -> op_array . fn_flags & ZEND_ACC_PUBLIC	1320:6:40538:40585	309905	0	True				
ANR	309925	BitAndExpression	constructor -> op_array . fn_flags & ZEND_ACC_PUBLIC		309905	0		&			
ANR	309926	MemberAccess	constructor -> op_array . fn_flags		309905	0					
ANR	309927	PtrMemberAccess	constructor -> op_array		309905	0					
ANR	309928	Identifier	constructor		309905	0					
ANR	309929	Identifier	op_array		309905	1					
ANR	309930	Identifier	fn_flags		309905	1					
ANR	309931	Identifier	ZEND_ACC_PUBLIC		309905	1					
ANR	309932	CompoundStatement		5:56:131:131	309905	1					
ANR	309933	ElseStatement	else		309905	0					
ANR	309934	IfStatement	if ( constructor -> op_array . fn_flags & ZEND_ACC_PRIVATE )		309905	0					
ANR	309935	Condition	constructor -> op_array . fn_flags & ZEND_ACC_PRIVATE	1322:13:40640:40688	309905	0	True				
ANR	309936	BitAndExpression	constructor -> op_array . fn_flags & ZEND_ACC_PRIVATE		309905	0		&			
ANR	309937	MemberAccess	constructor -> op_array . fn_flags		309905	0					
ANR	309938	PtrMemberAccess	constructor -> op_array		309905	0					
ANR	309939	Identifier	constructor		309905	0					
ANR	309940	Identifier	op_array		309905	1					
ANR	309941	Identifier	fn_flags		309905	1					
ANR	309942	Identifier	ZEND_ACC_PRIVATE		309905	1					
ANR	309943	CompoundStatement		7:64:234:234	309905	1					
ANR	309944	IfStatement	if ( UNEXPECTED ( constructor -> common . scope != EG ( scope ) ) )		309905	0					
ANR	309945	Condition	UNEXPECTED ( constructor -> common . scope != EG ( scope ) )	1325:7:40786:40835	309905	0	True				
ANR	309946	CallExpression	UNEXPECTED ( constructor -> common . scope != EG ( scope ) )		309905	0					
ANR	309947	Callee	UNEXPECTED		309905	0					
ANR	309948	Identifier	UNEXPECTED		309905	0					
ANR	309949	ArgumentList	constructor -> common . scope != EG ( scope )		309905	1					
ANR	309950	Argument	constructor -> common . scope != EG ( scope )		309905	0					
ANR	309951	EqualityExpression	constructor -> common . scope != EG ( scope )		309905	0		!=			
ANR	309952	MemberAccess	constructor -> common . scope		309905	0					
ANR	309953	PtrMemberAccess	constructor -> common		309905	0					
ANR	309954	Identifier	constructor		309905	0					
ANR	309955	Identifier	common		309905	1					
ANR	309956	Identifier	scope		309905	1					
ANR	309957	CallExpression	EG ( scope )		309905	1					
ANR	309958	Callee	EG		309905	0					
ANR	309959	Identifier	EG		309905	0					
ANR	309960	ArgumentList	scope		309905	1					
ANR	309961	Argument	scope		309905	0					
ANR	309962	Identifier	scope		309905	0					
ANR	309963	CompoundStatement		10:59:381:381	309905	1					
ANR	309964	IfStatement	if ( EG ( scope ) )		309905	0					
ANR	309965	Condition	EG ( scope )	1326:8:40848:40856	309905	0	True				
ANR	309966	CallExpression	EG ( scope )		309905	0					
ANR	309967	Callee	EG		309905	0					
ANR	309968	Identifier	EG		309905	0					
ANR	309969	ArgumentList	scope		309905	1					
ANR	309970	Argument	scope		309905	0					
ANR	309971	Identifier	scope		309905	0					
ANR	309972	CompoundStatement		11:19:402:402	309905	1					
ANR	309973	ExpressionStatement	"zend_throw_error ( NULL , ""Call to private %s::%s() from context '%s'"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) , ZSTR_VAL ( EG ( scope ) -> name ) )"	1327:5:40866:41049	309905	0	True				
ANR	309974	CallExpression	"zend_throw_error ( NULL , ""Call to private %s::%s() from context '%s'"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) , ZSTR_VAL ( EG ( scope ) -> name ) )"		309905	0					
ANR	309975	Callee	zend_throw_error		309905	0					
ANR	309976	Identifier	zend_throw_error		309905	0					
ANR	309977	ArgumentList	NULL		309905	1					
ANR	309978	Argument	NULL		309905	0					
ANR	309979	Identifier	NULL		309905	0					
ANR	309980	Argument	"""Call to private %s::%s() from context '%s'"""		309905	1					
ANR	309981	PrimaryExpression	"""Call to private %s::%s() from context '%s'"""		309905	0					
ANR	309982	Argument	ZSTR_VAL ( constructor -> common . scope -> name )		309905	2					
ANR	309983	CallExpression	ZSTR_VAL ( constructor -> common . scope -> name )		309905	0					
ANR	309984	Callee	ZSTR_VAL		309905	0					
ANR	309985	Identifier	ZSTR_VAL		309905	0					
ANR	309986	ArgumentList	constructor -> common . scope -> name		309905	1					
ANR	309987	Argument	constructor -> common . scope -> name		309905	0					
ANR	309988	PtrMemberAccess	constructor -> common . scope -> name		309905	0					
ANR	309989	MemberAccess	constructor -> common . scope		309905	0					
ANR	309990	PtrMemberAccess	constructor -> common		309905	0					
ANR	309991	Identifier	constructor		309905	0					
ANR	309992	Identifier	common		309905	1					
ANR	309993	Identifier	scope		309905	1					
ANR	309994	Identifier	name		309905	1					
ANR	309995	Argument	ZSTR_VAL ( constructor -> common . function_name )		309905	3					
ANR	309996	CallExpression	ZSTR_VAL ( constructor -> common . function_name )		309905	0					
ANR	309997	Callee	ZSTR_VAL		309905	0					
ANR	309998	Identifier	ZSTR_VAL		309905	0					
ANR	309999	ArgumentList	constructor -> common . function_name		309905	1					
ANR	310000	Argument	constructor -> common . function_name		309905	0					
ANR	310001	MemberAccess	constructor -> common . function_name		309905	0					
ANR	310002	PtrMemberAccess	constructor -> common		309905	0					
ANR	310003	Identifier	constructor		309905	0					
ANR	310004	Identifier	common		309905	1					
ANR	310005	Identifier	function_name		309905	1					
ANR	310006	Argument	ZSTR_VAL ( EG ( scope ) -> name )		309905	4					
ANR	310007	CallExpression	ZSTR_VAL ( EG ( scope ) -> name )		309905	0					
ANR	310008	Callee	ZSTR_VAL		309905	0					
ANR	310009	Identifier	ZSTR_VAL		309905	0					
ANR	310010	ArgumentList	EG ( scope ) -> name		309905	1					
ANR	310011	Argument	EG ( scope ) -> name		309905	0					
ANR	310012	PtrMemberAccess	EG ( scope ) -> name		309905	0					
ANR	310013	CallExpression	EG ( scope )		309905	0					
ANR	310014	Callee	EG		309905	0					
ANR	310015	Identifier	EG		309905	0					
ANR	310016	ArgumentList	scope		309905	1					
ANR	310017	Argument	scope		309905	0					
ANR	310018	Identifier	scope		309905	0					
ANR	310019	Identifier	name		309905	1					
ANR	310020	ExpressionStatement	constructor = NULL	1328:5:41056:41074	309905	1	True				
ANR	310021	AssignmentExpression	constructor = NULL		309905	0		=			
ANR	310022	Identifier	constructor		309905	0					
ANR	310023	Identifier	NULL		309905	1					
ANR	310024	ElseStatement	else		309905	0					
ANR	310025	CompoundStatement		14:11:630:630	309905	0					
ANR	310026	ExpressionStatement	"zend_throw_error ( NULL , ""Call to private %s::%s() from invalid context"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) )"	1330:5:41094:41253	309905	0	True				
ANR	310027	CallExpression	"zend_throw_error ( NULL , ""Call to private %s::%s() from invalid context"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) )"		309905	0					
ANR	310028	Callee	zend_throw_error		309905	0					
ANR	310029	Identifier	zend_throw_error		309905	0					
ANR	310030	ArgumentList	NULL		309905	1					
ANR	310031	Argument	NULL		309905	0					
ANR	310032	Identifier	NULL		309905	0					
ANR	310033	Argument	"""Call to private %s::%s() from invalid context"""		309905	1					
ANR	310034	PrimaryExpression	"""Call to private %s::%s() from invalid context"""		309905	0					
ANR	310035	Argument	ZSTR_VAL ( constructor -> common . scope -> name )		309905	2					
ANR	310036	CallExpression	ZSTR_VAL ( constructor -> common . scope -> name )		309905	0					
ANR	310037	Callee	ZSTR_VAL		309905	0					
ANR	310038	Identifier	ZSTR_VAL		309905	0					
ANR	310039	ArgumentList	constructor -> common . scope -> name		309905	1					
ANR	310040	Argument	constructor -> common . scope -> name		309905	0					
ANR	310041	PtrMemberAccess	constructor -> common . scope -> name		309905	0					
ANR	310042	MemberAccess	constructor -> common . scope		309905	0					
ANR	310043	PtrMemberAccess	constructor -> common		309905	0					
ANR	310044	Identifier	constructor		309905	0					
ANR	310045	Identifier	common		309905	1					
ANR	310046	Identifier	scope		309905	1					
ANR	310047	Identifier	name		309905	1					
ANR	310048	Argument	ZSTR_VAL ( constructor -> common . function_name )		309905	3					
ANR	310049	CallExpression	ZSTR_VAL ( constructor -> common . function_name )		309905	0					
ANR	310050	Callee	ZSTR_VAL		309905	0					
ANR	310051	Identifier	ZSTR_VAL		309905	0					
ANR	310052	ArgumentList	constructor -> common . function_name		309905	1					
ANR	310053	Argument	constructor -> common . function_name		309905	0					
ANR	310054	MemberAccess	constructor -> common . function_name		309905	0					
ANR	310055	PtrMemberAccess	constructor -> common		309905	0					
ANR	310056	Identifier	constructor		309905	0					
ANR	310057	Identifier	common		309905	1					
ANR	310058	Identifier	function_name		309905	1					
ANR	310059	ExpressionStatement	constructor = NULL	1331:5:41260:41278	309905	1	True				
ANR	310060	AssignmentExpression	constructor = NULL		309905	0		=			
ANR	310061	Identifier	constructor		309905	0					
ANR	310062	Identifier	NULL		309905	1					
ANR	310063	ElseStatement	else		309905	0					
ANR	310064	IfStatement	if ( ( constructor -> common . fn_flags & ZEND_ACC_PROTECTED ) )		309905	0					
ANR	310065	Condition	constructor -> common . fn_flags & ZEND_ACC_PROTECTED	1334:13:41304:41354	309905	0	True				
ANR	310066	BitAndExpression	constructor -> common . fn_flags & ZEND_ACC_PROTECTED		309905	0		&			
ANR	310067	MemberAccess	constructor -> common . fn_flags		309905	0					
ANR	310068	PtrMemberAccess	constructor -> common		309905	0					
ANR	310069	Identifier	constructor		309905	0					
ANR	310070	Identifier	common		309905	1					
ANR	310071	Identifier	fn_flags		309905	1					
ANR	310072	Identifier	ZEND_ACC_PROTECTED		309905	1					
ANR	310073	CompoundStatement		19:66:900:900	309905	1					
ANR	310074	IfStatement	"if ( UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( constructor ) , EG ( scope ) ) ) )"		309905	0					
ANR	310075	Condition	"UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( constructor ) , EG ( scope ) ) )"	1339:7:41605:41691	309905	0	True				
ANR	310076	CallExpression	"UNEXPECTED ( ! zend_check_protected ( zend_get_function_root_class ( constructor ) , EG ( scope ) ) )"		309905	0					
ANR	310077	Callee	UNEXPECTED		309905	0					
ANR	310078	Identifier	UNEXPECTED		309905	0					
ANR	310079	ArgumentList	"! zend_check_protected ( zend_get_function_root_class ( constructor ) , EG ( scope ) )"		309905	1					
ANR	310080	Argument	"! zend_check_protected ( zend_get_function_root_class ( constructor ) , EG ( scope ) )"		309905	0					
ANR	310081	UnaryOperationExpression	"! zend_check_protected ( zend_get_function_root_class ( constructor ) , EG ( scope ) )"		309905	0					
ANR	310082	UnaryOperator	!		309905	0					
ANR	310083	CallExpression	"zend_check_protected ( zend_get_function_root_class ( constructor ) , EG ( scope ) )"		309905	1					
ANR	310084	Callee	zend_check_protected		309905	0					
ANR	310085	Identifier	zend_check_protected		309905	0					
ANR	310086	ArgumentList	zend_get_function_root_class ( constructor )		309905	1					
ANR	310087	Argument	zend_get_function_root_class ( constructor )		309905	0					
ANR	310088	CallExpression	zend_get_function_root_class ( constructor )		309905	0					
ANR	310089	Callee	zend_get_function_root_class		309905	0					
ANR	310090	Identifier	zend_get_function_root_class		309905	0					
ANR	310091	ArgumentList	constructor		309905	1					
ANR	310092	Argument	constructor		309905	0					
ANR	310093	Identifier	constructor		309905	0					
ANR	310094	Argument	EG ( scope )		309905	1					
ANR	310095	CallExpression	EG ( scope )		309905	0					
ANR	310096	Callee	EG		309905	0					
ANR	310097	Identifier	EG		309905	0					
ANR	310098	ArgumentList	scope		309905	1					
ANR	310099	Argument	scope		309905	0					
ANR	310100	Identifier	scope		309905	0					
ANR	310101	CompoundStatement		24:96:1237:1237	309905	1					
ANR	310102	IfStatement	if ( EG ( scope ) )		309905	0					
ANR	310103	Condition	EG ( scope )	1340:8:41704:41712	309905	0	True				
ANR	310104	CallExpression	EG ( scope )		309905	0					
ANR	310105	Callee	EG		309905	0					
ANR	310106	Identifier	EG		309905	0					
ANR	310107	ArgumentList	scope		309905	1					
ANR	310108	Argument	scope		309905	0					
ANR	310109	Identifier	scope		309905	0					
ANR	310110	CompoundStatement		25:19:1258:1258	309905	1					
ANR	310111	ExpressionStatement	"zend_throw_error ( NULL , ""Call to protected %s::%s() from context '%s'"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) , ZSTR_VAL ( EG ( scope ) -> name ) )"	1341:5:41722:41907	309905	0	True				
ANR	310112	CallExpression	"zend_throw_error ( NULL , ""Call to protected %s::%s() from context '%s'"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) , ZSTR_VAL ( EG ( scope ) -> name ) )"		309905	0					
ANR	310113	Callee	zend_throw_error		309905	0					
ANR	310114	Identifier	zend_throw_error		309905	0					
ANR	310115	ArgumentList	NULL		309905	1					
ANR	310116	Argument	NULL		309905	0					
ANR	310117	Identifier	NULL		309905	0					
ANR	310118	Argument	"""Call to protected %s::%s() from context '%s'"""		309905	1					
ANR	310119	PrimaryExpression	"""Call to protected %s::%s() from context '%s'"""		309905	0					
ANR	310120	Argument	ZSTR_VAL ( constructor -> common . scope -> name )		309905	2					
ANR	310121	CallExpression	ZSTR_VAL ( constructor -> common . scope -> name )		309905	0					
ANR	310122	Callee	ZSTR_VAL		309905	0					
ANR	310123	Identifier	ZSTR_VAL		309905	0					
ANR	310124	ArgumentList	constructor -> common . scope -> name		309905	1					
ANR	310125	Argument	constructor -> common . scope -> name		309905	0					
ANR	310126	PtrMemberAccess	constructor -> common . scope -> name		309905	0					
ANR	310127	MemberAccess	constructor -> common . scope		309905	0					
ANR	310128	PtrMemberAccess	constructor -> common		309905	0					
ANR	310129	Identifier	constructor		309905	0					
ANR	310130	Identifier	common		309905	1					
ANR	310131	Identifier	scope		309905	1					
ANR	310132	Identifier	name		309905	1					
ANR	310133	Argument	ZSTR_VAL ( constructor -> common . function_name )		309905	3					
ANR	310134	CallExpression	ZSTR_VAL ( constructor -> common . function_name )		309905	0					
ANR	310135	Callee	ZSTR_VAL		309905	0					
ANR	310136	Identifier	ZSTR_VAL		309905	0					
ANR	310137	ArgumentList	constructor -> common . function_name		309905	1					
ANR	310138	Argument	constructor -> common . function_name		309905	0					
ANR	310139	MemberAccess	constructor -> common . function_name		309905	0					
ANR	310140	PtrMemberAccess	constructor -> common		309905	0					
ANR	310141	Identifier	constructor		309905	0					
ANR	310142	Identifier	common		309905	1					
ANR	310143	Identifier	function_name		309905	1					
ANR	310144	Argument	ZSTR_VAL ( EG ( scope ) -> name )		309905	4					
ANR	310145	CallExpression	ZSTR_VAL ( EG ( scope ) -> name )		309905	0					
ANR	310146	Callee	ZSTR_VAL		309905	0					
ANR	310147	Identifier	ZSTR_VAL		309905	0					
ANR	310148	ArgumentList	EG ( scope ) -> name		309905	1					
ANR	310149	Argument	EG ( scope ) -> name		309905	0					
ANR	310150	PtrMemberAccess	EG ( scope ) -> name		309905	0					
ANR	310151	CallExpression	EG ( scope )		309905	0					
ANR	310152	Callee	EG		309905	0					
ANR	310153	Identifier	EG		309905	0					
ANR	310154	ArgumentList	scope		309905	1					
ANR	310155	Argument	scope		309905	0					
ANR	310156	Identifier	scope		309905	0					
ANR	310157	Identifier	name		309905	1					
ANR	310158	ExpressionStatement	constructor = NULL	1342:5:41914:41932	309905	1	True				
ANR	310159	AssignmentExpression	constructor = NULL		309905	0		=			
ANR	310160	Identifier	constructor		309905	0					
ANR	310161	Identifier	NULL		309905	1					
ANR	310162	ElseStatement	else		309905	0					
ANR	310163	CompoundStatement		28:11:1488:1488	309905	0					
ANR	310164	ExpressionStatement	"zend_throw_error ( NULL , ""Call to protected %s::%s() from invalid context"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) )"	1344:5:41952:42113	309905	0	True				
ANR	310165	CallExpression	"zend_throw_error ( NULL , ""Call to protected %s::%s() from invalid context"" , ZSTR_VAL ( constructor -> common . scope -> name ) , ZSTR_VAL ( constructor -> common . function_name ) )"		309905	0					
ANR	310166	Callee	zend_throw_error		309905	0					
ANR	310167	Identifier	zend_throw_error		309905	0					
ANR	310168	ArgumentList	NULL		309905	1					
ANR	310169	Argument	NULL		309905	0					
ANR	310170	Identifier	NULL		309905	0					
ANR	310171	Argument	"""Call to protected %s::%s() from invalid context"""		309905	1					
ANR	310172	PrimaryExpression	"""Call to protected %s::%s() from invalid context"""		309905	0					
ANR	310173	Argument	ZSTR_VAL ( constructor -> common . scope -> name )		309905	2					
ANR	310174	CallExpression	ZSTR_VAL ( constructor -> common . scope -> name )		309905	0					
ANR	310175	Callee	ZSTR_VAL		309905	0					
ANR	310176	Identifier	ZSTR_VAL		309905	0					
ANR	310177	ArgumentList	constructor -> common . scope -> name		309905	1					
ANR	310178	Argument	constructor -> common . scope -> name		309905	0					
ANR	310179	PtrMemberAccess	constructor -> common . scope -> name		309905	0					
ANR	310180	MemberAccess	constructor -> common . scope		309905	0					
ANR	310181	PtrMemberAccess	constructor -> common		309905	0					
ANR	310182	Identifier	constructor		309905	0					
ANR	310183	Identifier	common		309905	1					
ANR	310184	Identifier	scope		309905	1					
ANR	310185	Identifier	name		309905	1					
ANR	310186	Argument	ZSTR_VAL ( constructor -> common . function_name )		309905	3					
ANR	310187	CallExpression	ZSTR_VAL ( constructor -> common . function_name )		309905	0					
ANR	310188	Callee	ZSTR_VAL		309905	0					
ANR	310189	Identifier	ZSTR_VAL		309905	0					
ANR	310190	ArgumentList	constructor -> common . function_name		309905	1					
ANR	310191	Argument	constructor -> common . function_name		309905	0					
ANR	310192	MemberAccess	constructor -> common . function_name		309905	0					
ANR	310193	PtrMemberAccess	constructor -> common		309905	0					
ANR	310194	Identifier	constructor		309905	0					
ANR	310195	Identifier	common		309905	1					
ANR	310196	Identifier	function_name		309905	1					
ANR	310197	ExpressionStatement	constructor = NULL	1345:5:42120:42138	309905	1	True				
ANR	310198	AssignmentExpression	constructor = NULL		309905	0		=			
ANR	310199	Identifier	constructor		309905	0					
ANR	310200	Identifier	NULL		309905	1					
ANR	310201	ReturnStatement	return constructor ;	1351:1:42160:42178	309905	2	True				
ANR	310202	Identifier	constructor		309905	0					
ANR	310203	ReturnType	union _zend_function *		309905	1					
ANR	310204	Identifier	zend_std_get_constructor		309905	2					
ANR	310205	ParameterList	zend_object * zobj		309905	3					
ANR	310206	Parameter	zend_object * zobj	1315:56:40427:40443	309905	0	True				
ANR	310207	ParameterType	zend_object *		309905	0					
ANR	310208	Identifier	zobj		309905	1					
ANR	310209	CFGEntryNode	ENTRY		309905		True				
ANR	310210	CFGExitNode	EXIT		309905		True				
ANR	310211	Symbol	* constructor		309905						
ANR	310212	Symbol	zobj		309905						
ANR	310213	Symbol	ZEND_ACC_PUBLIC		309905						
ANR	310214	Symbol	* constructor -> common . scope		309905						
ANR	310215	Symbol	* * zobj		309905						
ANR	310216	Symbol	* EG		309905						
ANR	310217	Symbol	UNEXPECTED		309905						
ANR	310218	Symbol	* zobj		309905						
ANR	310219	Symbol	zobj -> ce -> constructor		309905						
ANR	310220	Symbol	constructor -> op_array . fn_flags		309905						
ANR	310221	Symbol	scope		309905						
ANR	310222	Symbol	constructor -> common		309905						
ANR	310223	Symbol	constructor -> common . function_name		309905						
ANR	310224	Symbol	ZEND_ACC_PROTECTED		309905						
ANR	310225	Symbol	EG ( scope ) -> name		309905						
ANR	310226	Symbol	EG		309905						
ANR	310227	Symbol	NULL		309905						
ANR	310228	Symbol	* zobj -> ce		309905						
ANR	310229	Symbol	constructor -> op_array		309905						
ANR	310230	Symbol	constructor -> common . fn_flags		309905						
ANR	310231	Symbol	constructor		309905						
ANR	310232	Symbol	zobj -> ce		309905						
ANR	310233	Symbol	zend_get_function_root_class		309905						
ANR	310234	Symbol	ZEND_ACC_PRIVATE		309905						
ANR	310235	Symbol	ZSTR_VAL		309905						
ANR	310236	Symbol	* * constructor		309905						
ANR	310237	Symbol	constructor -> common . scope -> name		309905						
ANR	310238	Symbol	constructor -> common . scope		309905						
ANR	310239	Symbol	* constructor -> common		309905						
ANR	310240	Symbol	zend_check_protected		309905						
ANR	310241	Function	zend_std_compare_objects	1355:0:42193:43706							
ANR	310242	FunctionDef	"zend_std_compare_objects (zval * o1 , zval * o2)"		310241	0					
ANR	310243	CompoundStatement		1356:0:42259:43706	310241	0					
ANR	310244	IdentifierDeclStatement	"zend_object * zobj1 , * zobj2 ;"	1357:1:42262:42288	310241	0	True				
ANR	310245	IdentifierDecl	* zobj1		310241	0					
ANR	310246	IdentifierDeclType	zend_object *		310241	0					
ANR	310247	Identifier	zobj1		310241	1					
ANR	310248	IdentifierDecl	* zobj2		310241	1					
ANR	310249	IdentifierDeclType	zend_object *		310241	0					
ANR	310250	Identifier	zobj2		310241	1					
ANR	310251	ExpressionStatement	zobj1 = Z_OBJ_P ( o1 )	1359:1:42292:42311	310241	1	True				
ANR	310252	AssignmentExpression	zobj1 = Z_OBJ_P ( o1 )		310241	0		=			
ANR	310253	Identifier	zobj1		310241	0					
ANR	310254	CallExpression	Z_OBJ_P ( o1 )		310241	1					
ANR	310255	Callee	Z_OBJ_P		310241	0					
ANR	310256	Identifier	Z_OBJ_P		310241	0					
ANR	310257	ArgumentList	o1		310241	1					
ANR	310258	Argument	o1		310241	0					
ANR	310259	Identifier	o1		310241	0					
ANR	310260	ExpressionStatement	zobj2 = Z_OBJ_P ( o2 )	1360:1:42314:42333	310241	2	True				
ANR	310261	AssignmentExpression	zobj2 = Z_OBJ_P ( o2 )		310241	0		=			
ANR	310262	Identifier	zobj2		310241	0					
ANR	310263	CallExpression	Z_OBJ_P ( o2 )		310241	1					
ANR	310264	Callee	Z_OBJ_P		310241	0					
ANR	310265	Identifier	Z_OBJ_P		310241	0					
ANR	310266	ArgumentList	o2		310241	1					
ANR	310267	Argument	o2		310241	0					
ANR	310268	Identifier	o2		310241	0					
ANR	310269	IfStatement	if ( zobj1 -> ce != zobj2 -> ce )		310241	3					
ANR	310270	Condition	zobj1 -> ce != zobj2 -> ce	1362:5:42341:42362	310241	0	True				
ANR	310271	EqualityExpression	zobj1 -> ce != zobj2 -> ce		310241	0		!=			
ANR	310272	PtrMemberAccess	zobj1 -> ce		310241	0					
ANR	310273	Identifier	zobj1		310241	0					
ANR	310274	Identifier	ce		310241	1					
ANR	310275	PtrMemberAccess	zobj2 -> ce		310241	1					
ANR	310276	Identifier	zobj2		310241	0					
ANR	310277	Identifier	ce		310241	1					
ANR	310278	CompoundStatement		7:29:105:105	310241	1					
ANR	310279	ReturnStatement	return 1 ;	1363:2:42369:42377	310241	0	True				
ANR	310280	PrimaryExpression	1		310241	0					
ANR	310281	IfStatement	if ( ! zobj1 -> properties && ! zobj2 -> properties )		310241	4					
ANR	310282	Condition	! zobj1 -> properties && ! zobj2 -> properties	1365:5:42411:42450	310241	0	True				
ANR	310283	AndExpression	! zobj1 -> properties && ! zobj2 -> properties		310241	0		&&			
ANR	310284	UnaryOperationExpression	! zobj1 -> properties		310241	0					
ANR	310285	UnaryOperator	!		310241	0					
ANR	310286	PtrMemberAccess	zobj1 -> properties		310241	1					
ANR	310287	Identifier	zobj1		310241	0					
ANR	310288	Identifier	properties		310241	1					
ANR	310289	UnaryOperationExpression	! zobj2 -> properties		310241	1					
ANR	310290	UnaryOperator	!		310241	0					
ANR	310291	PtrMemberAccess	zobj2 -> properties		310241	1					
ANR	310292	Identifier	zobj2		310241	0					
ANR	310293	Identifier	properties		310241	1					
ANR	310294	CompoundStatement		11:2:197:216	310241	1					
ANR	310295	IdentifierDeclStatement	"zval * p1 , * p2 , * end ;"	1366:2:42457:42476	310241	0	True				
ANR	310296	IdentifierDecl	* p1		310241	0					
ANR	310297	IdentifierDeclType	zval *		310241	0					
ANR	310298	Identifier	p1		310241	1					
ANR	310299	IdentifierDecl	* p2		310241	1					
ANR	310300	IdentifierDeclType	zval *		310241	0					
ANR	310301	Identifier	p2		310241	1					
ANR	310302	IdentifierDecl	* end		310241	2					
ANR	310303	IdentifierDeclType	zval *		310241	0					
ANR	310304	Identifier	end		310241	1					
ANR	310305	IfStatement	if ( ! zobj1 -> ce -> default_properties_count )		310241	1					
ANR	310306	Condition	! zobj1 -> ce -> default_properties_count	1368:6:42485:42520	310241	0	True				
ANR	310307	UnaryOperationExpression	! zobj1 -> ce -> default_properties_count		310241	0					
ANR	310308	UnaryOperator	!		310241	0					
ANR	310309	PtrMemberAccess	zobj1 -> ce -> default_properties_count		310241	1					
ANR	310310	PtrMemberAccess	zobj1 -> ce		310241	0					
ANR	310311	Identifier	zobj1		310241	0					
ANR	310312	Identifier	ce		310241	1					
ANR	310313	Identifier	default_properties_count		310241	1					
ANR	310314	CompoundStatement		13:44:263:263	310241	1					
ANR	310315	ReturnStatement	return 0 ;	1369:3:42528:42536	310241	0	True				
ANR	310316	PrimaryExpression	0		310241	0					
ANR	310317	ExpressionStatement	p1 = zobj1 -> properties_table	1371:2:42544:42572	310241	2	True				
ANR	310318	AssignmentExpression	p1 = zobj1 -> properties_table		310241	0		=			
ANR	310319	Identifier	p1		310241	0					
ANR	310320	PtrMemberAccess	zobj1 -> properties_table		310241	1					
ANR	310321	Identifier	zobj1		310241	0					
ANR	310322	Identifier	properties_table		310241	1					
ANR	310323	ExpressionStatement	p2 = zobj2 -> properties_table	1372:2:42576:42604	310241	3	True				
ANR	310324	AssignmentExpression	p2 = zobj2 -> properties_table		310241	0		=			
ANR	310325	Identifier	p2		310241	0					
ANR	310326	PtrMemberAccess	zobj2 -> properties_table		310241	1					
ANR	310327	Identifier	zobj2		310241	0					
ANR	310328	Identifier	properties_table		310241	1					
ANR	310329	ExpressionStatement	end = p1 + zobj1 -> ce -> default_properties_count	1373:2:42608:42654	310241	4	True				
ANR	310330	AssignmentExpression	end = p1 + zobj1 -> ce -> default_properties_count		310241	0		=			
ANR	310331	Identifier	end		310241	0					
ANR	310332	AdditiveExpression	p1 + zobj1 -> ce -> default_properties_count		310241	1		+			
ANR	310333	Identifier	p1		310241	0					
ANR	310334	PtrMemberAccess	zobj1 -> ce -> default_properties_count		310241	1					
ANR	310335	PtrMemberAccess	zobj1 -> ce		310241	0					
ANR	310336	Identifier	zobj1		310241	0					
ANR	310337	Identifier	ce		310241	1					
ANR	310338	Identifier	default_properties_count		310241	1					
ANR	310339	ExpressionStatement	Z_OBJ_PROTECT_RECURSION ( o1 )	1374:2:42658:42685	310241	5	True				
ANR	310340	CallExpression	Z_OBJ_PROTECT_RECURSION ( o1 )		310241	0					
ANR	310341	Callee	Z_OBJ_PROTECT_RECURSION		310241	0					
ANR	310342	Identifier	Z_OBJ_PROTECT_RECURSION		310241	0					
ANR	310343	ArgumentList	o1		310241	1					
ANR	310344	Argument	o1		310241	0					
ANR	310345	Identifier	o1		310241	0					
ANR	310346	ExpressionStatement	Z_OBJ_PROTECT_RECURSION ( o2 )	1375:2:42689:42716	310241	6	True				
ANR	310347	CallExpression	Z_OBJ_PROTECT_RECURSION ( o2 )		310241	0					
ANR	310348	Callee	Z_OBJ_PROTECT_RECURSION		310241	0					
ANR	310349	Identifier	Z_OBJ_PROTECT_RECURSION		310241	0					
ANR	310350	ArgumentList	o2		310241	1					
ANR	310351	Argument	o2		310241	0					
ANR	310352	Identifier	o2		310241	0					
ANR	310353	DoStatement	do		310241	7					
ANR	310354	CompoundStatement		21:5:463:463	310241	0					
ANR	310355	IfStatement	if ( Z_TYPE_P ( p1 ) != IS_UNDEF )		310241	0					
ANR	310356	Condition	Z_TYPE_P ( p1 ) != IS_UNDEF	1377:7:42732:42755	310241	0	True				
ANR	310357	EqualityExpression	Z_TYPE_P ( p1 ) != IS_UNDEF		310241	0		!=			
ANR	310358	CallExpression	Z_TYPE_P ( p1 )		310241	0					
ANR	310359	Callee	Z_TYPE_P		310241	0					
ANR	310360	Identifier	Z_TYPE_P		310241	0					
ANR	310361	ArgumentList	p1		310241	1					
ANR	310362	Argument	p1		310241	0					
ANR	310363	Identifier	p1		310241	0					
ANR	310364	Identifier	IS_UNDEF		310241	1					
ANR	310365	CompoundStatement		22:33:498:498	310241	1					
ANR	310366	IfStatement	if ( Z_TYPE_P ( p2 ) != IS_UNDEF )		310241	0					
ANR	310367	Condition	Z_TYPE_P ( p2 ) != IS_UNDEF	1378:8:42768:42791	310241	0	True				
ANR	310368	EqualityExpression	Z_TYPE_P ( p2 ) != IS_UNDEF		310241	0		!=			
ANR	310369	CallExpression	Z_TYPE_P ( p2 )		310241	0					
ANR	310370	Callee	Z_TYPE_P		310241	0					
ANR	310371	Identifier	Z_TYPE_P		310241	0					
ANR	310372	ArgumentList	p2		310241	1					
ANR	310373	Argument	p2		310241	0					
ANR	310374	Identifier	p2		310241	0					
ANR	310375	Identifier	IS_UNDEF		310241	1					
ANR	310376	CompoundStatement		24:5:541:552	310241	1					
ANR	310377	IdentifierDeclStatement	zval result ;	1379:5:42801:42812	310241	0	True				
ANR	310378	IdentifierDecl	result		310241	0					
ANR	310379	IdentifierDeclType	zval		310241	0					
ANR	310380	Identifier	result		310241	1					
ANR	310381	IfStatement	"if ( compare_function ( & result , p1 , p2 ) == FAILURE )"		310241	1					
ANR	310382	Condition	"compare_function ( & result , p1 , p2 ) == FAILURE"	1381:9:42824:42865	310241	0	True				
ANR	310383	EqualityExpression	"compare_function ( & result , p1 , p2 ) == FAILURE"		310241	0		==			
ANR	310384	CallExpression	"compare_function ( & result , p1 , p2 )"		310241	0					
ANR	310385	Callee	compare_function		310241	0					
ANR	310386	Identifier	compare_function		310241	0					
ANR	310387	ArgumentList	& result		310241	1					
ANR	310388	Argument	& result		310241	0					
ANR	310389	UnaryOperationExpression	& result		310241	0					
ANR	310390	UnaryOperator	&		310241	0					
ANR	310391	Identifier	result		310241	1					
ANR	310392	Argument	p1		310241	1					
ANR	310393	Identifier	p1		310241	0					
ANR	310394	Argument	p2		310241	2					
ANR	310395	Identifier	p2		310241	0					
ANR	310396	Identifier	FAILURE		310241	1					
ANR	310397	CompoundStatement		26:53:608:608	310241	1					
ANR	310398	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o1 )	1382:6:42876:42905	310241	0	True				
ANR	310399	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o1 )		310241	0					
ANR	310400	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310401	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310402	ArgumentList	o1		310241	1					
ANR	310403	Argument	o1		310241	0					
ANR	310404	Identifier	o1		310241	0					
ANR	310405	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o2 )	1383:6:42913:42942	310241	1	True				
ANR	310406	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o2 )		310241	0					
ANR	310407	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310408	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310409	ArgumentList	o2		310241	1					
ANR	310410	Argument	o2		310241	0					
ANR	310411	Identifier	o2		310241	0					
ANR	310412	ReturnStatement	return 1 ;	1384:6:42950:42958	310241	2	True				
ANR	310413	PrimaryExpression	1		310241	0					
ANR	310414	IfStatement	if ( Z_LVAL ( result ) != 0 )		310241	2					
ANR	310415	Condition	Z_LVAL ( result ) != 0	1386:9:42976:42994	310241	0	True				
ANR	310416	EqualityExpression	Z_LVAL ( result ) != 0		310241	0		!=			
ANR	310417	CallExpression	Z_LVAL ( result )		310241	0					
ANR	310418	Callee	Z_LVAL		310241	0					
ANR	310419	Identifier	Z_LVAL		310241	0					
ANR	310420	ArgumentList	result		310241	1					
ANR	310421	Argument	result		310241	0					
ANR	310422	Identifier	result		310241	0					
ANR	310423	PrimaryExpression	0		310241	1					
ANR	310424	CompoundStatement		31:30:737:737	310241	1					
ANR	310425	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o1 )	1387:6:43005:43034	310241	0	True				
ANR	310426	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o1 )		310241	0					
ANR	310427	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310428	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310429	ArgumentList	o1		310241	1					
ANR	310430	Argument	o1		310241	0					
ANR	310431	Identifier	o1		310241	0					
ANR	310432	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o2 )	1388:6:43042:43071	310241	1	True				
ANR	310433	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o2 )		310241	0					
ANR	310434	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310435	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310436	ArgumentList	o2		310241	1					
ANR	310437	Argument	o2		310241	0					
ANR	310438	Identifier	o2		310241	0					
ANR	310439	ReturnStatement	return Z_LVAL ( result ) ;	1389:6:43079:43100	310241	2	True				
ANR	310440	CallExpression	Z_LVAL ( result )		310241	0					
ANR	310441	Callee	Z_LVAL		310241	0					
ANR	310442	Identifier	Z_LVAL		310241	0					
ANR	310443	ArgumentList	result		310241	1					
ANR	310444	Argument	result		310241	0					
ANR	310445	Identifier	result		310241	0					
ANR	310446	ElseStatement	else		310241	0					
ANR	310447	CompoundStatement		36:11:860:860	310241	0					
ANR	310448	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o1 )	1392:5:43127:43156	310241	0	True				
ANR	310449	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o1 )		310241	0					
ANR	310450	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310451	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310452	ArgumentList	o1		310241	1					
ANR	310453	Argument	o1		310241	0					
ANR	310454	Identifier	o1		310241	0					
ANR	310455	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o2 )	1393:5:43163:43192	310241	1	True				
ANR	310456	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o2 )		310241	0					
ANR	310457	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310458	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310459	ArgumentList	o2		310241	1					
ANR	310460	Argument	o2		310241	0					
ANR	310461	Identifier	o2		310241	0					
ANR	310462	ReturnStatement	return 1 ;	1394:5:43199:43207	310241	2	True				
ANR	310463	PrimaryExpression	1		310241	0					
ANR	310464	ElseStatement	else		310241	0					
ANR	310465	CompoundStatement		41:10:965:965	310241	0					
ANR	310466	IfStatement	if ( Z_TYPE_P ( p2 ) != IS_UNDEF )		310241	0					
ANR	310467	Condition	Z_TYPE_P ( p2 ) != IS_UNDEF	1397:8:43235:43258	310241	0	True				
ANR	310468	EqualityExpression	Z_TYPE_P ( p2 ) != IS_UNDEF		310241	0		!=			
ANR	310469	CallExpression	Z_TYPE_P ( p2 )		310241	0					
ANR	310470	Callee	Z_TYPE_P		310241	0					
ANR	310471	Identifier	Z_TYPE_P		310241	0					
ANR	310472	ArgumentList	p2		310241	1					
ANR	310473	Argument	p2		310241	0					
ANR	310474	Identifier	p2		310241	0					
ANR	310475	Identifier	IS_UNDEF		310241	1					
ANR	310476	CompoundStatement		42:34:1001:1001	310241	1					
ANR	310477	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o1 )	1398:5:43268:43297	310241	0	True				
ANR	310478	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o1 )		310241	0					
ANR	310479	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310480	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310481	ArgumentList	o1		310241	1					
ANR	310482	Argument	o1		310241	0					
ANR	310483	Identifier	o1		310241	0					
ANR	310484	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o2 )	1399:5:43304:43333	310241	1	True				
ANR	310485	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o2 )		310241	0					
ANR	310486	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310487	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310488	ArgumentList	o2		310241	1					
ANR	310489	Argument	o2		310241	0					
ANR	310490	Identifier	o2		310241	0					
ANR	310491	ReturnStatement	return 1 ;	1400:5:43340:43348	310241	2	True				
ANR	310492	PrimaryExpression	1		310241	0					
ANR	310493	ExpressionStatement	p1 ++	1403:3:43364:43368	310241	1	True				
ANR	310494	PostIncDecOperationExpression	p1 ++		310241	0					
ANR	310495	Identifier	p1		310241	0					
ANR	310496	IncDec	++		310241	1					
ANR	310497	ExpressionStatement	p2 ++	1404:3:43373:43377	310241	2	True				
ANR	310498	PostIncDecOperationExpression	p2 ++		310241	0					
ANR	310499	Identifier	p2		310241	0					
ANR	310500	IncDec	++		310241	1					
ANR	310501	Condition	p1 != end	1405:11:43390:43398	310241	1	True				
ANR	310502	EqualityExpression	p1 != end		310241	0		!=			
ANR	310503	Identifier	p1		310241	0					
ANR	310504	Identifier	end		310241	1					
ANR	310505	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o1 )	1406:2:43404:43433	310241	8	True				
ANR	310506	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o1 )		310241	0					
ANR	310507	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310508	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310509	ArgumentList	o1		310241	1					
ANR	310510	Argument	o1		310241	0					
ANR	310511	Identifier	o1		310241	0					
ANR	310512	ExpressionStatement	Z_OBJ_UNPROTECT_RECURSION ( o2 )	1407:2:43437:43466	310241	9	True				
ANR	310513	CallExpression	Z_OBJ_UNPROTECT_RECURSION ( o2 )		310241	0					
ANR	310514	Callee	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310515	Identifier	Z_OBJ_UNPROTECT_RECURSION		310241	0					
ANR	310516	ArgumentList	o2		310241	1					
ANR	310517	Argument	o2		310241	0					
ANR	310518	Identifier	o2		310241	0					
ANR	310519	ReturnStatement	return 0 ;	1408:2:43470:43478	310241	10	True				
ANR	310520	PrimaryExpression	0		310241	0					
ANR	310521	ElseStatement	else		310241	0					
ANR	310522	CompoundStatement		54:8:1228:1228	310241	0					
ANR	310523	IfStatement	if ( ! zobj1 -> properties )		310241	0					
ANR	310524	Condition	! zobj1 -> properties	1410:6:43496:43513	310241	0	True				
ANR	310525	UnaryOperationExpression	! zobj1 -> properties		310241	0					
ANR	310526	UnaryOperator	!		310241	0					
ANR	310527	PtrMemberAccess	zobj1 -> properties		310241	1					
ANR	310528	Identifier	zobj1		310241	0					
ANR	310529	Identifier	properties		310241	1					
ANR	310530	CompoundStatement		55:26:1256:1256	310241	1					
ANR	310531	ExpressionStatement	rebuild_object_properties ( zobj1 )	1411:3:43521:43553	310241	0	True				
ANR	310532	CallExpression	rebuild_object_properties ( zobj1 )		310241	0					
ANR	310533	Callee	rebuild_object_properties		310241	0					
ANR	310534	Identifier	rebuild_object_properties		310241	0					
ANR	310535	ArgumentList	zobj1		310241	1					
ANR	310536	Argument	zobj1		310241	0					
ANR	310537	Identifier	zobj1		310241	0					
ANR	310538	IfStatement	if ( ! zobj2 -> properties )		310241	1					
ANR	310539	Condition	! zobj2 -> properties	1413:6:43565:43582	310241	0	True				
ANR	310540	UnaryOperationExpression	! zobj2 -> properties		310241	0					
ANR	310541	UnaryOperator	!		310241	0					
ANR	310542	PtrMemberAccess	zobj2 -> properties		310241	1					
ANR	310543	Identifier	zobj2		310241	0					
ANR	310544	Identifier	properties		310241	1					
ANR	310545	CompoundStatement		58:26:1325:1325	310241	1					
ANR	310546	ExpressionStatement	rebuild_object_properties ( zobj2 )	1414:3:43590:43622	310241	0	True				
ANR	310547	CallExpression	rebuild_object_properties ( zobj2 )		310241	0					
ANR	310548	Callee	rebuild_object_properties		310241	0					
ANR	310549	Identifier	rebuild_object_properties		310241	0					
ANR	310550	ArgumentList	zobj2		310241	1					
ANR	310551	Argument	zobj2		310241	0					
ANR	310552	Identifier	zobj2		310241	0					
ANR	310553	ReturnStatement	"return zend_compare_symbol_tables ( zobj1 -> properties , zobj2 -> properties ) ;"	1416:2:43630:43701	310241	2	True				
ANR	310554	CallExpression	"zend_compare_symbol_tables ( zobj1 -> properties , zobj2 -> properties )"		310241	0					
ANR	310555	Callee	zend_compare_symbol_tables		310241	0					
ANR	310556	Identifier	zend_compare_symbol_tables		310241	0					
ANR	310557	ArgumentList	zobj1 -> properties		310241	1					
ANR	310558	Argument	zobj1 -> properties		310241	0					
ANR	310559	PtrMemberAccess	zobj1 -> properties		310241	0					
ANR	310560	Identifier	zobj1		310241	0					
ANR	310561	Identifier	properties		310241	1					
ANR	310562	Argument	zobj2 -> properties		310241	1					
ANR	310563	PtrMemberAccess	zobj2 -> properties		310241	0					
ANR	310564	Identifier	zobj2		310241	0					
ANR	310565	Identifier	properties		310241	1					
ANR	310566	ReturnType	static int		310241	1					
ANR	310567	Identifier	zend_std_compare_objects		310241	2					
ANR	310568	ParameterList	"zval * o1 , zval * o2"		310241	3					
ANR	310569	Parameter	zval * o1	1355:36:42229:42236	310241	0	True				
ANR	310570	ParameterType	zval *		310241	0					
ANR	310571	Identifier	o1		310241	1					
ANR	310572	Parameter	zval * o2	1355:46:42239:42246	310241	1	True				
ANR	310573	ParameterType	zval *		310241	0					
ANR	310574	Identifier	o2		310241	1					
ANR	310575	CFGEntryNode	ENTRY		310241		True				
ANR	310576	CFGExitNode	EXIT		310241		True				
ANR	310577	Symbol	p1		310241						
ANR	310578	Symbol	p2		310241						
ANR	310579	Symbol	* * zobj1		310241						
ANR	310580	Symbol	Z_OBJ_P		310241						
ANR	310581	Symbol	zobj1 -> properties_table		310241						
ANR	310582	Symbol	Z_LVAL		310241						
ANR	310583	Symbol	zobj2 -> ce		310241						
ANR	310584	Symbol	result		310241						
ANR	310585	Symbol	zobj2 -> properties		310241						
ANR	310586	Symbol	compare_function		310241						
ANR	310587	Symbol	* zobj2		310241						
ANR	310588	Symbol	* zobj1 -> ce		310241						
ANR	310589	Symbol	* zobj1		310241						
ANR	310590	Symbol	& result		310241						
ANR	310591	Symbol	end		310241						
ANR	310592	Symbol	IS_UNDEF		310241						
ANR	310593	Symbol	zobj2 -> properties_table		310241						
ANR	310594	Symbol	o1		310241						
ANR	310595	Symbol	zobj1 -> ce		310241						
ANR	310596	Symbol	o2		310241						
ANR	310597	Symbol	zend_compare_symbol_tables		310241						
ANR	310598	Symbol	Z_TYPE_P		310241						
ANR	310599	Symbol	FAILURE		310241						
ANR	310600	Symbol	zobj1 -> ce -> default_properties_count		310241						
ANR	310601	Symbol	zobj1 -> properties		310241						
ANR	310602	Symbol	zobj2		310241						
ANR	310603	Symbol	zobj1		310241						
ANR	310604	Function	zend_std_has_property	1421:0:43719:45963							
ANR	310605	FunctionDef	"zend_std_has_property (zval * object , zval * member , int has_set_exists , void * * cache_slot)"		310604	0					
ANR	310606	CompoundStatement		1422:0:43829:45963	310604	0					
ANR	310607	IdentifierDeclStatement	zend_object * zobj ;	1423:1:43832:43849	310604	0	True				
ANR	310608	IdentifierDecl	* zobj		310604	0					
ANR	310609	IdentifierDeclType	zend_object *		310604	0					
ANR	310610	Identifier	zobj		310604	1					
ANR	310611	IdentifierDeclStatement	int result ;	1424:1:43852:43862	310604	1	True				
ANR	310612	IdentifierDecl	result		310604	0					
ANR	310613	IdentifierDeclType	int		310604	0					
ANR	310614	Identifier	result		310604	1					
ANR	310615	IdentifierDeclStatement	zval * value = NULL ;	1425:1:43865:43883	310604	2	True				
ANR	310616	IdentifierDecl	* value = NULL		310604	0					
ANR	310617	IdentifierDeclType	zval *		310604	0					
ANR	310618	Identifier	value		310604	1					
ANR	310619	AssignmentExpression	* value = NULL		310604	2		=			
ANR	310620	Identifier	NULL		310604	0					
ANR	310621	Identifier	NULL		310604	1					
ANR	310622	IdentifierDeclStatement	zval tmp_member ;	1426:1:43886:43901	310604	3	True				
ANR	310623	IdentifierDecl	tmp_member		310604	0					
ANR	310624	IdentifierDeclType	zval		310604	0					
ANR	310625	Identifier	tmp_member		310604	1					
ANR	310626	IdentifierDeclStatement	uint32_t property_offset ;	1427:1:43904:43928	310604	4	True				
ANR	310627	IdentifierDecl	property_offset		310604	0					
ANR	310628	IdentifierDeclType	uint32_t		310604	0					
ANR	310629	Identifier	property_offset		310604	1					
ANR	310630	ExpressionStatement	zobj = Z_OBJ_P ( object )	1429:1:43932:43954	310604	5	True				
ANR	310631	AssignmentExpression	zobj = Z_OBJ_P ( object )		310604	0		=			
ANR	310632	Identifier	zobj		310604	0					
ANR	310633	CallExpression	Z_OBJ_P ( object )		310604	1					
ANR	310634	Callee	Z_OBJ_P		310604	0					
ANR	310635	Identifier	Z_OBJ_P		310604	0					
ANR	310636	ArgumentList	object		310604	1					
ANR	310637	Argument	object		310604	0					
ANR	310638	Identifier	object		310604	0					
ANR	310639	ExpressionStatement	ZVAL_UNDEF ( & tmp_member )	1431:1:43958:43981	310604	6	True				
ANR	310640	CallExpression	ZVAL_UNDEF ( & tmp_member )		310604	0					
ANR	310641	Callee	ZVAL_UNDEF		310604	0					
ANR	310642	Identifier	ZVAL_UNDEF		310604	0					
ANR	310643	ArgumentList	& tmp_member		310604	1					
ANR	310644	Argument	& tmp_member		310604	0					
ANR	310645	UnaryOperationExpression	& tmp_member		310604	0					
ANR	310646	UnaryOperator	&		310604	0					
ANR	310647	Identifier	tmp_member		310604	1					
ANR	310648	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING ) )		310604	7					
ANR	310649	Condition	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )	1432:5:43988:44028	310604	0	True				
ANR	310650	CallExpression	UNEXPECTED ( Z_TYPE_P ( member ) != IS_STRING )		310604	0					
ANR	310651	Callee	UNEXPECTED		310604	0					
ANR	310652	Identifier	UNEXPECTED		310604	0					
ANR	310653	ArgumentList	Z_TYPE_P ( member ) != IS_STRING		310604	1					
ANR	310654	Argument	Z_TYPE_P ( member ) != IS_STRING		310604	0					
ANR	310655	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		310604	0		!=			
ANR	310656	CallExpression	Z_TYPE_P ( member )		310604	0					
ANR	310657	Callee	Z_TYPE_P		310604	0					
ANR	310658	Identifier	Z_TYPE_P		310604	0					
ANR	310659	ArgumentList	member		310604	1					
ANR	310660	Argument	member		310604	0					
ANR	310661	Identifier	member		310604	0					
ANR	310662	Identifier	IS_STRING		310604	1					
ANR	310663	CompoundStatement		11:48:201:201	310604	1					
ANR	310664	ExpressionStatement	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"	1433:2:44035:44081	310604	0	True				
ANR	310665	CallExpression	"ZVAL_STR ( & tmp_member , zval_get_string ( member ) )"		310604	0					
ANR	310666	Callee	ZVAL_STR		310604	0					
ANR	310667	Identifier	ZVAL_STR		310604	0					
ANR	310668	ArgumentList	& tmp_member		310604	1					
ANR	310669	Argument	& tmp_member		310604	0					
ANR	310670	UnaryOperationExpression	& tmp_member		310604	0					
ANR	310671	UnaryOperator	&		310604	0					
ANR	310672	Identifier	tmp_member		310604	1					
ANR	310673	Argument	zval_get_string ( member )		310604	1					
ANR	310674	CallExpression	zval_get_string ( member )		310604	0					
ANR	310675	Callee	zval_get_string		310604	0					
ANR	310676	Identifier	zval_get_string		310604	0					
ANR	310677	ArgumentList	member		310604	1					
ANR	310678	Argument	member		310604	0					
ANR	310679	Identifier	member		310604	0					
ANR	310680	ExpressionStatement	member = & tmp_member	1434:2:44085:44105	310604	1	True				
ANR	310681	AssignmentExpression	member = & tmp_member		310604	0		=			
ANR	310682	Identifier	member		310604	0					
ANR	310683	UnaryOperationExpression	& tmp_member		310604	1					
ANR	310684	UnaryOperator	&		310604	0					
ANR	310685	Identifier	tmp_member		310604	1					
ANR	310686	ExpressionStatement	cache_slot = NULL	1435:2:44109:44126	310604	2	True				
ANR	310687	AssignmentExpression	cache_slot = NULL		310604	0		=			
ANR	310688	Identifier	cache_slot		310604	0					
ANR	310689	Identifier	NULL		310604	1					
ANR	310690	ExpressionStatement	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , 1 , cache_slot )"	1438:1:44133:44217	310604	8	True				
ANR	310691	AssignmentExpression	"property_offset = zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , 1 , cache_slot )"		310604	0		=			
ANR	310692	Identifier	property_offset		310604	0					
ANR	310693	CallExpression	"zend_get_property_offset ( zobj -> ce , Z_STR_P ( member ) , 1 , cache_slot )"		310604	1					
ANR	310694	Callee	zend_get_property_offset		310604	0					
ANR	310695	Identifier	zend_get_property_offset		310604	0					
ANR	310696	ArgumentList	zobj -> ce		310604	1					
ANR	310697	Argument	zobj -> ce		310604	0					
ANR	310698	PtrMemberAccess	zobj -> ce		310604	0					
ANR	310699	Identifier	zobj		310604	0					
ANR	310700	Identifier	ce		310604	1					
ANR	310701	Argument	Z_STR_P ( member )		310604	1					
ANR	310702	CallExpression	Z_STR_P ( member )		310604	0					
ANR	310703	Callee	Z_STR_P		310604	0					
ANR	310704	Identifier	Z_STR_P		310604	0					
ANR	310705	ArgumentList	member		310604	1					
ANR	310706	Argument	member		310604	0					
ANR	310707	Identifier	member		310604	0					
ANR	310708	Argument	1		310604	2					
ANR	310709	PrimaryExpression	1		310604	0					
ANR	310710	Argument	cache_slot		310604	3					
ANR	310711	Identifier	cache_slot		310604	0					
ANR	310712	IfStatement	if ( EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET ) )		310604	9					
ANR	310713	Condition	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )	1440:5:44225:44279	310604	0	True				
ANR	310714	CallExpression	EXPECTED ( property_offset != ZEND_WRONG_PROPERTY_OFFSET )		310604	0					
ANR	310715	Callee	EXPECTED		310604	0					
ANR	310716	Identifier	EXPECTED		310604	0					
ANR	310717	ArgumentList	property_offset != ZEND_WRONG_PROPERTY_OFFSET		310604	1					
ANR	310718	Argument	property_offset != ZEND_WRONG_PROPERTY_OFFSET		310604	0					
ANR	310719	EqualityExpression	property_offset != ZEND_WRONG_PROPERTY_OFFSET		310604	0		!=			
ANR	310720	Identifier	property_offset		310604	0					
ANR	310721	Identifier	ZEND_WRONG_PROPERTY_OFFSET		310604	1					
ANR	310722	CompoundStatement		19:62:452:452	310604	1					
ANR	310723	IfStatement	if ( EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET ) )		310604	0					
ANR	310724	Condition	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )	1441:6:44290:44346	310604	0	True				
ANR	310725	CallExpression	EXPECTED ( property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET )		310604	0					
ANR	310726	Callee	EXPECTED		310604	0					
ANR	310727	Identifier	EXPECTED		310604	0					
ANR	310728	ArgumentList	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		310604	1					
ANR	310729	Argument	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		310604	0					
ANR	310730	EqualityExpression	property_offset != ZEND_DYNAMIC_PROPERTY_OFFSET		310604	0		!=			
ANR	310731	Identifier	property_offset		310604	0					
ANR	310732	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		310604	1					
ANR	310733	CompoundStatement		20:65:519:519	310604	1					
ANR	310734	ExpressionStatement	"value = OBJ_PROP ( zobj , property_offset )"	1442:3:44354:44393	310604	0	True				
ANR	310735	AssignmentExpression	"value = OBJ_PROP ( zobj , property_offset )"		310604	0		=			
ANR	310736	Identifier	value		310604	0					
ANR	310737	CallExpression	"OBJ_PROP ( zobj , property_offset )"		310604	1					
ANR	310738	Callee	OBJ_PROP		310604	0					
ANR	310739	Identifier	OBJ_PROP		310604	0					
ANR	310740	ArgumentList	zobj		310604	1					
ANR	310741	Argument	zobj		310604	0					
ANR	310742	Identifier	zobj		310604	0					
ANR	310743	Argument	property_offset		310604	1					
ANR	310744	Identifier	property_offset		310604	0					
ANR	310745	IfStatement	if ( Z_TYPE_P ( value ) != IS_UNDEF )		310604	1					
ANR	310746	Condition	Z_TYPE_P ( value ) != IS_UNDEF	1443:7:44402:44428	310604	0	True				
ANR	310747	EqualityExpression	Z_TYPE_P ( value ) != IS_UNDEF		310604	0		!=			
ANR	310748	CallExpression	Z_TYPE_P ( value )		310604	0					
ANR	310749	Callee	Z_TYPE_P		310604	0					
ANR	310750	Identifier	Z_TYPE_P		310604	0					
ANR	310751	ArgumentList	value		310604	1					
ANR	310752	Argument	value		310604	0					
ANR	310753	Identifier	value		310604	0					
ANR	310754	Identifier	IS_UNDEF		310604	1					
ANR	310755	CompoundStatement		22:36:601:601	310604	1					
ANR	310756	GotoStatement	goto found ;	1444:4:44437:44447	310604	0	True				
ANR	310757	Identifier	found		310604	0					
ANR	310758	ElseStatement	else		310604	0					
ANR	310759	IfStatement	"if ( EXPECTED ( zobj -> properties != NULL ) && ( value = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) ) ) != NULL )"		310604	0					
ANR	310760	Condition	"EXPECTED ( zobj -> properties != NULL ) && ( value = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) ) ) != NULL"	1446:13:44467:44584	310604	0	True				
ANR	310761	AndExpression	"EXPECTED ( zobj -> properties != NULL ) && ( value = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) ) ) != NULL"		310604	0		&&			
ANR	310762	CallExpression	EXPECTED ( zobj -> properties != NULL )		310604	0					
ANR	310763	Callee	EXPECTED		310604	0					
ANR	310764	Identifier	EXPECTED		310604	0					
ANR	310765	ArgumentList	zobj -> properties != NULL		310604	1					
ANR	310766	Argument	zobj -> properties != NULL		310604	0					
ANR	310767	EqualityExpression	zobj -> properties != NULL		310604	0		!=			
ANR	310768	PtrMemberAccess	zobj -> properties		310604	0					
ANR	310769	Identifier	zobj		310604	0					
ANR	310770	Identifier	properties		310604	1					
ANR	310771	Identifier	NULL		310604	1					
ANR	310772	EqualityExpression	"( value = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) ) ) != NULL"		310604	1		!=			
ANR	310773	AssignmentExpression	"value = zend_hash_find ( zobj -> properties , Z_STR_P ( member ) )"		310604	0		=			
ANR	310774	Identifier	value		310604	0					
ANR	310775	CallExpression	"zend_hash_find ( zobj -> properties , Z_STR_P ( member ) )"		310604	1					
ANR	310776	Callee	zend_hash_find		310604	0					
ANR	310777	Identifier	zend_hash_find		310604	0					
ANR	310778	ArgumentList	zobj -> properties		310604	1					
ANR	310779	Argument	zobj -> properties		310604	0					
ANR	310780	PtrMemberAccess	zobj -> properties		310604	0					
ANR	310781	Identifier	zobj		310604	0					
ANR	310782	Identifier	properties		310604	1					
ANR	310783	Argument	Z_STR_P ( member )		310604	1					
ANR	310784	CallExpression	Z_STR_P ( member )		310604	0					
ANR	310785	Callee	Z_STR_P		310604	0					
ANR	310786	Identifier	Z_STR_P		310604	0					
ANR	310787	ArgumentList	member		310604	1					
ANR	310788	Argument	member		310604	0					
ANR	310789	Identifier	member		310604	0					
ANR	310790	Identifier	NULL		310604	1					
ANR	310791	CompoundStatement		26:82:757:757	310604	1					
ANR	310792	Label	found :	1448:0:44589:44594	310604	0	True				
ANR	310793	Identifier	found		310604	0					
ANR	310794	SwitchStatement	switch ( has_set_exists )		310604	1					
ANR	310795	Condition	has_set_exists	1449:11:44607:44620	310604	0	True				
ANR	310796	Identifier	has_set_exists		310604	0					
ANR	310797	CompoundStatement		28:27:793:793	310604	1					
ANR	310798	Label	case 0 :	1450:4:44629:44635	310604	0	True				
ANR	310799	ExpressionStatement	ZVAL_DEREF ( value )	1451:5:44642:44659	310604	1	True				
ANR	310800	CallExpression	ZVAL_DEREF ( value )		310604	0					
ANR	310801	Callee	ZVAL_DEREF		310604	0					
ANR	310802	Identifier	ZVAL_DEREF		310604	0					
ANR	310803	ArgumentList	value		310604	1					
ANR	310804	Argument	value		310604	0					
ANR	310805	Identifier	value		310604	0					
ANR	310806	ExpressionStatement	result = ( Z_TYPE_P ( value ) != IS_NULL )	1452:5:44666:44703	310604	2	True				
ANR	310807	AssignmentExpression	result = ( Z_TYPE_P ( value ) != IS_NULL )		310604	0		=			
ANR	310808	Identifier	result		310604	0					
ANR	310809	EqualityExpression	Z_TYPE_P ( value ) != IS_NULL		310604	1		!=			
ANR	310810	CallExpression	Z_TYPE_P ( value )		310604	0					
ANR	310811	Callee	Z_TYPE_P		310604	0					
ANR	310812	Identifier	Z_TYPE_P		310604	0					
ANR	310813	ArgumentList	value		310604	1					
ANR	310814	Argument	value		310604	0					
ANR	310815	Identifier	value		310604	0					
ANR	310816	Identifier	IS_NULL		310604	1					
ANR	310817	BreakStatement	break ;	1453:5:44710:44715	310604	3	True				
ANR	310818	Label	default :	1454:4:44721:44728	310604	4	True				
ANR	310819	Identifier	default		310604	0					
ANR	310820	ExpressionStatement	result = zend_is_true ( value )	1455:5:44735:44763	310604	5	True				
ANR	310821	AssignmentExpression	result = zend_is_true ( value )		310604	0		=			
ANR	310822	Identifier	result		310604	0					
ANR	310823	CallExpression	zend_is_true ( value )		310604	1					
ANR	310824	Callee	zend_is_true		310604	0					
ANR	310825	Identifier	zend_is_true		310604	0					
ANR	310826	ArgumentList	value		310604	1					
ANR	310827	Argument	value		310604	0					
ANR	310828	Identifier	value		310604	0					
ANR	310829	BreakStatement	break ;	1456:5:44770:44775	310604	6	True				
ANR	310830	Label	case 2 :	1457:4:44781:44787	310604	7	True				
ANR	310831	ExpressionStatement	result = 1	1458:5:44794:44804	310604	8	True				
ANR	310832	AssignmentExpression	result = 1		310604	0		=			
ANR	310833	Identifier	result		310604	0					
ANR	310834	PrimaryExpression	1		310604	1					
ANR	310835	BreakStatement	break ;	1459:5:44811:44816	310604	9	True				
ANR	310836	GotoStatement	goto exit ;	1461:3:44826:44835	310604	2	True				
ANR	310837	Identifier	exit		310604	0					
ANR	310838	ElseStatement	else		310604	0					
ANR	310839	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		310604	0					
ANR	310840	Condition	UNEXPECTED ( EG ( exception ) )	1463:12:44853:44877	310604	0	True				
ANR	310841	CallExpression	UNEXPECTED ( EG ( exception ) )		310604	0					
ANR	310842	Callee	UNEXPECTED		310604	0					
ANR	310843	Identifier	UNEXPECTED		310604	0					
ANR	310844	ArgumentList	EG ( exception )		310604	1					
ANR	310845	Argument	EG ( exception )		310604	0					
ANR	310846	CallExpression	EG ( exception )		310604	0					
ANR	310847	Callee	EG		310604	0					
ANR	310848	Identifier	EG		310604	0					
ANR	310849	ArgumentList	exception		310604	1					
ANR	310850	Argument	exception		310604	0					
ANR	310851	Identifier	exception		310604	0					
ANR	310852	CompoundStatement		42:39:1050:1050	310604	1					
ANR	310853	ExpressionStatement	result = 0	1464:2:44884:44894	310604	0	True				
ANR	310854	AssignmentExpression	result = 0		310604	0		=			
ANR	310855	Identifier	result		310604	0					
ANR	310856	PrimaryExpression	0		310604	1					
ANR	310857	GotoStatement	goto exit ;	1465:2:44898:44907	310604	1	True				
ANR	310858	Identifier	exit		310604	0					
ANR	310859	ExpressionStatement	result = 0	1468:1:44914:44924	310604	10	True				
ANR	310860	AssignmentExpression	result = 0		310604	0		=			
ANR	310861	Identifier	result		310604	0					
ANR	310862	PrimaryExpression	0		310604	1					
ANR	310863	IfStatement	if ( ( has_set_exists != 2 ) && zobj -> ce -> __isset )		310604	11					
ANR	310864	Condition	( has_set_exists != 2 ) && zobj -> ce -> __isset	1469:5:44931:44972	310604	0	True				
ANR	310865	AndExpression	( has_set_exists != 2 ) && zobj -> ce -> __isset		310604	0		&&			
ANR	310866	EqualityExpression	has_set_exists != 2		310604	0		!=			
ANR	310867	Identifier	has_set_exists		310604	0					
ANR	310868	PrimaryExpression	2		310604	1					
ANR	310869	PtrMemberAccess	zobj -> ce -> __isset		310604	1					
ANR	310870	PtrMemberAccess	zobj -> ce		310604	0					
ANR	310871	Identifier	zobj		310604	0					
ANR	310872	Identifier	ce		310604	1					
ANR	310873	Identifier	__isset		310604	1					
ANR	310874	CompoundStatement		49:2:1149:1214	310604	1					
ANR	310875	IdentifierDeclStatement	"zend_long * guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) ) ;"	1470:2:44979:45044	310604	0	True				
ANR	310876	IdentifierDecl	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		310604	0					
ANR	310877	IdentifierDeclType	zend_long *		310604	0					
ANR	310878	Identifier	guard		310604	1					
ANR	310879	AssignmentExpression	"* guard = zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		310604	2		=			
ANR	310880	Identifier	guard		310604	0					
ANR	310881	CallExpression	"zend_get_property_guard ( zobj , Z_STR_P ( member ) )"		310604	1					
ANR	310882	Callee	zend_get_property_guard		310604	0					
ANR	310883	Identifier	zend_get_property_guard		310604	0					
ANR	310884	ArgumentList	zobj		310604	1					
ANR	310885	Argument	zobj		310604	0					
ANR	310886	Identifier	zobj		310604	0					
ANR	310887	Argument	Z_STR_P ( member )		310604	1					
ANR	310888	CallExpression	Z_STR_P ( member )		310604	0					
ANR	310889	Callee	Z_STR_P		310604	0					
ANR	310890	Identifier	Z_STR_P		310604	0					
ANR	310891	ArgumentList	member		310604	1					
ANR	310892	Argument	member		310604	0					
ANR	310893	Identifier	member		310604	0					
ANR	310894	IfStatement	if ( ! ( ( * guard ) & IN_ISSET ) )		310604	1					
ANR	310895	Condition	! ( ( * guard ) & IN_ISSET )	1472:6:45053:45074	310604	0	True				
ANR	310896	UnaryOperationExpression	! ( ( * guard ) & IN_ISSET )		310604	0					
ANR	310897	UnaryOperator	!		310604	0					
ANR	310898	BitAndExpression	( * guard ) & IN_ISSET		310604	1		&			
ANR	310899	UnaryOperationExpression	* guard		310604	0					
ANR	310900	UnaryOperator	*		310604	0					
ANR	310901	Identifier	guard		310604	1					
ANR	310902	Identifier	IN_ISSET		310604	1					
ANR	310903	CompoundStatement		53:3:1264:1279	310604	1					
ANR	310904	IdentifierDeclStatement	zval rv ;	1473:3:45082:45089	310604	0	True				
ANR	310905	IdentifierDecl	rv		310604	0					
ANR	310906	IdentifierDeclType	zval		310604	0					
ANR	310907	Identifier	rv		310604	1					
ANR	310908	IdentifierDeclStatement	zval tmp_object ;	1474:3:45094:45109	310604	1	True				
ANR	310909	IdentifierDecl	tmp_object		310604	0					
ANR	310910	IdentifierDeclType	zval		310604	0					
ANR	310911	Identifier	tmp_object		310604	1					
ANR	310912	ExpressionStatement	"ZVAL_COPY ( & tmp_object , object )"	1477:3:45153:45183	310604	2	True				
ANR	310913	CallExpression	"ZVAL_COPY ( & tmp_object , object )"		310604	0					
ANR	310914	Callee	ZVAL_COPY		310604	0					
ANR	310915	Identifier	ZVAL_COPY		310604	0					
ANR	310916	ArgumentList	& tmp_object		310604	1					
ANR	310917	Argument	& tmp_object		310604	0					
ANR	310918	UnaryOperationExpression	& tmp_object		310604	0					
ANR	310919	UnaryOperator	&		310604	0					
ANR	310920	Identifier	tmp_object		310604	1					
ANR	310921	Argument	object		310604	1					
ANR	310922	Identifier	object		310604	0					
ANR	310923	ExpressionStatement	( * guard ) |= IN_ISSET	1478:3:45188:45208	310604	3	True				
ANR	310924	AssignmentExpression	( * guard ) |= IN_ISSET		310604	0		|=			
ANR	310925	UnaryOperationExpression	* guard		310604	0					
ANR	310926	UnaryOperator	*		310604	0					
ANR	310927	Identifier	guard		310604	1					
ANR	310928	Identifier	IN_ISSET		310604	1					
ANR	310929	ExpressionStatement	"zend_std_call_issetter ( & tmp_object , member , & rv )"	1479:3:45244:45292	310604	4	True				
ANR	310930	CallExpression	"zend_std_call_issetter ( & tmp_object , member , & rv )"		310604	0					
ANR	310931	Callee	zend_std_call_issetter		310604	0					
ANR	310932	Identifier	zend_std_call_issetter		310604	0					
ANR	310933	ArgumentList	& tmp_object		310604	1					
ANR	310934	Argument	& tmp_object		310604	0					
ANR	310935	UnaryOperationExpression	& tmp_object		310604	0					
ANR	310936	UnaryOperator	&		310604	0					
ANR	310937	Identifier	tmp_object		310604	1					
ANR	310938	Argument	member		310604	1					
ANR	310939	Identifier	member		310604	0					
ANR	310940	Argument	& rv		310604	2					
ANR	310941	UnaryOperationExpression	& rv		310604	0					
ANR	310942	UnaryOperator	&		310604	0					
ANR	310943	Identifier	rv		310604	1					
ANR	310944	IfStatement	if ( Z_TYPE ( rv ) != IS_UNDEF )		310604	5					
ANR	310945	Condition	Z_TYPE ( rv ) != IS_UNDEF	1480:7:45301:45322	310604	0	True				
ANR	310946	EqualityExpression	Z_TYPE ( rv ) != IS_UNDEF		310604	0		!=			
ANR	310947	CallExpression	Z_TYPE ( rv )		310604	0					
ANR	310948	Callee	Z_TYPE		310604	0					
ANR	310949	Identifier	Z_TYPE		310604	0					
ANR	310950	ArgumentList	rv		310604	1					
ANR	310951	Argument	rv		310604	0					
ANR	310952	Identifier	rv		310604	0					
ANR	310953	Identifier	IS_UNDEF		310604	1					
ANR	310954	CompoundStatement		59:31:1495:1495	310604	1					
ANR	310955	ExpressionStatement	result = zend_is_true ( & rv )	1481:4:45331:45357	310604	0	True				
ANR	310956	AssignmentExpression	result = zend_is_true ( & rv )		310604	0		=			
ANR	310957	Identifier	result		310604	0					
ANR	310958	CallExpression	zend_is_true ( & rv )		310604	1					
ANR	310959	Callee	zend_is_true		310604	0					
ANR	310960	Identifier	zend_is_true		310604	0					
ANR	310961	ArgumentList	& rv		310604	1					
ANR	310962	Argument	& rv		310604	0					
ANR	310963	UnaryOperationExpression	& rv		310604	0					
ANR	310964	UnaryOperator	&		310604	0					
ANR	310965	Identifier	rv		310604	1					
ANR	310966	ExpressionStatement	zval_ptr_dtor ( & rv )	1482:4:45363:45381	310604	1	True				
ANR	310967	CallExpression	zval_ptr_dtor ( & rv )		310604	0					
ANR	310968	Callee	zval_ptr_dtor		310604	0					
ANR	310969	Identifier	zval_ptr_dtor		310604	0					
ANR	310970	ArgumentList	& rv		310604	1					
ANR	310971	Argument	& rv		310604	0					
ANR	310972	UnaryOperationExpression	& rv		310604	0					
ANR	310973	UnaryOperator	&		310604	0					
ANR	310974	Identifier	rv		310604	1					
ANR	310975	IfStatement	if ( has_set_exists && result )		310604	2					
ANR	310976	Condition	has_set_exists && result	1483:8:45391:45414	310604	0	True				
ANR	310977	AndExpression	has_set_exists && result		310604	0		&&			
ANR	310978	Identifier	has_set_exists		310604	0					
ANR	310979	Identifier	result		310604	1					
ANR	310980	CompoundStatement		62:34:1587:1587	310604	1					
ANR	310981	IfStatement	if ( EXPECTED ( ! EG ( exception ) ) && zobj -> ce -> __get && ! ( ( * guard ) & IN_GET ) )		310604	0					
ANR	310982	Condition	EXPECTED ( ! EG ( exception ) ) && zobj -> ce -> __get && ! ( ( * guard ) & IN_GET )	1484:9:45428:45494	310604	0	True				
ANR	310983	AndExpression	EXPECTED ( ! EG ( exception ) ) && zobj -> ce -> __get && ! ( ( * guard ) & IN_GET )		310604	0		&&			
ANR	310984	CallExpression	EXPECTED ( ! EG ( exception ) )		310604	0					
ANR	310985	Callee	EXPECTED		310604	0					
ANR	310986	Identifier	EXPECTED		310604	0					
ANR	310987	ArgumentList	! EG ( exception )		310604	1					
ANR	310988	Argument	! EG ( exception )		310604	0					
ANR	310989	UnaryOperationExpression	! EG ( exception )		310604	0					
ANR	310990	UnaryOperator	!		310604	0					
ANR	310991	CallExpression	EG ( exception )		310604	1					
ANR	310992	Callee	EG		310604	0					
ANR	310993	Identifier	EG		310604	0					
ANR	310994	ArgumentList	exception		310604	1					
ANR	310995	Argument	exception		310604	0					
ANR	310996	Identifier	exception		310604	0					
ANR	310997	AndExpression	zobj -> ce -> __get && ! ( ( * guard ) & IN_GET )		310604	1		&&			
ANR	310998	PtrMemberAccess	zobj -> ce -> __get		310604	0					
ANR	310999	PtrMemberAccess	zobj -> ce		310604	0					
ANR	311000	Identifier	zobj		310604	0					
ANR	311001	Identifier	ce		310604	1					
ANR	311002	Identifier	__get		310604	1					
ANR	311003	UnaryOperationExpression	! ( ( * guard ) & IN_GET )		310604	1					
ANR	311004	UnaryOperator	!		310604	0					
ANR	311005	BitAndExpression	( * guard ) & IN_GET		310604	1		&			
ANR	311006	UnaryOperationExpression	* guard		310604	0					
ANR	311007	UnaryOperator	*		310604	0					
ANR	311008	Identifier	guard		310604	1					
ANR	311009	Identifier	IN_GET		310604	1					
ANR	311010	CompoundStatement		63:78:1667:1667	310604	1					
ANR	311011	ExpressionStatement	( * guard ) |= IN_GET	1485:6:45505:45523	310604	0	True				
ANR	311012	AssignmentExpression	( * guard ) |= IN_GET		310604	0		|=			
ANR	311013	UnaryOperationExpression	* guard		310604	0					
ANR	311014	UnaryOperator	*		310604	0					
ANR	311015	Identifier	guard		310604	1					
ANR	311016	Identifier	IN_GET		310604	1					
ANR	311017	ExpressionStatement	"zend_std_call_getter ( & tmp_object , member , & rv )"	1486:6:45531:45577	310604	1	True				
ANR	311018	CallExpression	"zend_std_call_getter ( & tmp_object , member , & rv )"		310604	0					
ANR	311019	Callee	zend_std_call_getter		310604	0					
ANR	311020	Identifier	zend_std_call_getter		310604	0					
ANR	311021	ArgumentList	& tmp_object		310604	1					
ANR	311022	Argument	& tmp_object		310604	0					
ANR	311023	UnaryOperationExpression	& tmp_object		310604	0					
ANR	311024	UnaryOperator	&		310604	0					
ANR	311025	Identifier	tmp_object		310604	1					
ANR	311026	Argument	member		310604	1					
ANR	311027	Identifier	member		310604	0					
ANR	311028	Argument	& rv		310604	2					
ANR	311029	UnaryOperationExpression	& rv		310604	0					
ANR	311030	UnaryOperator	&		310604	0					
ANR	311031	Identifier	rv		310604	1					
ANR	311032	ExpressionStatement	( * guard ) &= ~IN_GET	1487:6:45585:45604	310604	2	True				
ANR	311033	AssignmentExpression	( * guard ) &= ~IN_GET		310604	0		&=			
ANR	311034	UnaryOperationExpression	* guard		310604	0					
ANR	311035	UnaryOperator	*		310604	0					
ANR	311036	Identifier	guard		310604	1					
ANR	311037	Identifier	~IN_GET		310604	1					
ANR	311038	IfStatement	if ( Z_TYPE ( rv ) != IS_UNDEF )		310604	3					
ANR	311039	Condition	Z_TYPE ( rv ) != IS_UNDEF	1488:10:45616:45637	310604	0	True				
ANR	311040	EqualityExpression	Z_TYPE ( rv ) != IS_UNDEF		310604	0		!=			
ANR	311041	CallExpression	Z_TYPE ( rv )		310604	0					
ANR	311042	Callee	Z_TYPE		310604	0					
ANR	311043	Identifier	Z_TYPE		310604	0					
ANR	311044	ArgumentList	rv		310604	1					
ANR	311045	Argument	rv		310604	0					
ANR	311046	Identifier	rv		310604	0					
ANR	311047	Identifier	IS_UNDEF		310604	1					
ANR	311048	CompoundStatement		67:34:1810:1810	310604	1					
ANR	311049	ExpressionStatement	result = i_zend_is_true ( & rv )	1489:7:45649:45677	310604	0	True				
ANR	311050	AssignmentExpression	result = i_zend_is_true ( & rv )		310604	0		=			
ANR	311051	Identifier	result		310604	0					
ANR	311052	CallExpression	i_zend_is_true ( & rv )		310604	1					
ANR	311053	Callee	i_zend_is_true		310604	0					
ANR	311054	Identifier	i_zend_is_true		310604	0					
ANR	311055	ArgumentList	& rv		310604	1					
ANR	311056	Argument	& rv		310604	0					
ANR	311057	UnaryOperationExpression	& rv		310604	0					
ANR	311058	UnaryOperator	&		310604	0					
ANR	311059	Identifier	rv		310604	1					
ANR	311060	ExpressionStatement	zval_ptr_dtor ( & rv )	1490:7:45686:45704	310604	1	True				
ANR	311061	CallExpression	zval_ptr_dtor ( & rv )		310604	0					
ANR	311062	Callee	zval_ptr_dtor		310604	0					
ANR	311063	Identifier	zval_ptr_dtor		310604	0					
ANR	311064	ArgumentList	& rv		310604	1					
ANR	311065	Argument	& rv		310604	0					
ANR	311066	UnaryOperationExpression	& rv		310604	0					
ANR	311067	UnaryOperator	&		310604	0					
ANR	311068	Identifier	rv		310604	1					
ANR	311069	ElseStatement	else		310604	0					
ANR	311070	CompoundStatement		70:13:1889:1889	310604	0					
ANR	311071	ExpressionStatement	result = 0	1492:7:45728:45738	310604	0	True				
ANR	311072	AssignmentExpression	result = 0		310604	0		=			
ANR	311073	Identifier	result		310604	0					
ANR	311074	PrimaryExpression	0		310604	1					
ANR	311075	ElseStatement	else		310604	0					
ANR	311076	CompoundStatement		73:12:1930:1930	310604	0					
ANR	311077	ExpressionStatement	result = 0	1495:6:45768:45778	310604	0	True				
ANR	311078	AssignmentExpression	result = 0		310604	0		=			
ANR	311079	Identifier	result		310604	0					
ANR	311080	PrimaryExpression	0		310604	1					
ANR	311081	ExpressionStatement	( * guard ) &= ~IN_ISSET	1499:3:45801:45822	310604	6	True				
ANR	311082	AssignmentExpression	( * guard ) &= ~IN_ISSET		310604	0		&=			
ANR	311083	UnaryOperationExpression	* guard		310604	0					
ANR	311084	UnaryOperator	*		310604	0					
ANR	311085	Identifier	guard		310604	1					
ANR	311086	Identifier	~IN_ISSET		310604	1					
ANR	311087	ExpressionStatement	zval_ptr_dtor ( & tmp_object )	1500:3:45827:45853	310604	7	True				
ANR	311088	CallExpression	zval_ptr_dtor ( & tmp_object )		310604	0					
ANR	311089	Callee	zval_ptr_dtor		310604	0					
ANR	311090	Identifier	zval_ptr_dtor		310604	0					
ANR	311091	ArgumentList	& tmp_object		310604	1					
ANR	311092	Argument	& tmp_object		310604	0					
ANR	311093	UnaryOperationExpression	& tmp_object		310604	0					
ANR	311094	UnaryOperator	&		310604	0					
ANR	311095	Identifier	tmp_object		310604	1					
ANR	311096	Label	exit :	1504:0:45863:45867	310604	12	True				
ANR	311097	Identifier	exit		310604	0					
ANR	311098	IfStatement	if ( UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) ) )		310604	13					
ANR	311099	Condition	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )	1505:5:45874:45909	310604	0	True				
ANR	311100	CallExpression	UNEXPECTED ( Z_REFCOUNTED ( tmp_member ) )		310604	0					
ANR	311101	Callee	UNEXPECTED		310604	0					
ANR	311102	Identifier	UNEXPECTED		310604	0					
ANR	311103	ArgumentList	Z_REFCOUNTED ( tmp_member )		310604	1					
ANR	311104	Argument	Z_REFCOUNTED ( tmp_member )		310604	0					
ANR	311105	CallExpression	Z_REFCOUNTED ( tmp_member )		310604	0					
ANR	311106	Callee	Z_REFCOUNTED		310604	0					
ANR	311107	Identifier	Z_REFCOUNTED		310604	0					
ANR	311108	ArgumentList	tmp_member		310604	1					
ANR	311109	Argument	tmp_member		310604	0					
ANR	311110	Identifier	tmp_member		310604	0					
ANR	311111	CompoundStatement		84:43:2082:2082	310604	1					
ANR	311112	ExpressionStatement	zval_ptr_dtor ( & tmp_member )	1506:2:45916:45942	310604	0	True				
ANR	311113	CallExpression	zval_ptr_dtor ( & tmp_member )		310604	0					
ANR	311114	Callee	zval_ptr_dtor		310604	0					
ANR	311115	Identifier	zval_ptr_dtor		310604	0					
ANR	311116	ArgumentList	& tmp_member		310604	1					
ANR	311117	Argument	& tmp_member		310604	0					
ANR	311118	UnaryOperationExpression	& tmp_member		310604	0					
ANR	311119	UnaryOperator	&		310604	0					
ANR	311120	Identifier	tmp_member		310604	1					
ANR	311121	ReturnStatement	return result ;	1508:1:45948:45961	310604	14	True				
ANR	311122	Identifier	result		310604	0					
ANR	311123	ReturnType	static int		310604	1					
ANR	311124	Identifier	zend_std_has_property		310604	2					
ANR	311125	ParameterList	"zval * object , zval * member , int has_set_exists , void * * cache_slot"		310604	3					
ANR	311126	Parameter	zval * object	1421:33:43752:43763	310604	0	True				
ANR	311127	ParameterType	zval *		310604	0					
ANR	311128	Identifier	object		310604	1					
ANR	311129	Parameter	zval * member	1421:47:43766:43777	310604	1	True				
ANR	311130	ParameterType	zval *		310604	0					
ANR	311131	Identifier	member		310604	1					
ANR	311132	Parameter	int has_set_exists	1421:61:43780:43797	310604	2	True				
ANR	311133	ParameterType	int		310604	0					
ANR	311134	Identifier	has_set_exists		310604	1					
ANR	311135	Parameter	void * * cache_slot	1421:81:43800:43816	310604	3	True				
ANR	311136	ParameterType	void * *		310604	0					
ANR	311137	Identifier	cache_slot		310604	1					
ANR	311138	CFGEntryNode	ENTRY		310604		True				
ANR	311139	CFGExitNode	EXIT		310604		True				
ANR	311140	Symbol	exception		310604						
ANR	311141	Symbol	zobj		310604						
ANR	311142	Symbol	zobj -> ce -> __isset		310604						
ANR	311143	Symbol	Z_TYPE		310604						
ANR	311144	Symbol	i_zend_is_true		310604						
ANR	311145	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		310604						
ANR	311146	Symbol	zend_hash_find		310604						
ANR	311147	Symbol	ZEND_WRONG_PROPERTY_OFFSET		310604						
ANR	311148	Symbol	zobj -> ce -> __get		310604						
ANR	311149	Symbol	IN_GET		310604						
ANR	311150	Symbol	has_set_exists		310604						
ANR	311151	Symbol	IS_STRING		310604						
ANR	311152	Symbol	IN_ISSET		310604						
ANR	311153	Symbol	IS_UNDEF		310604						
ANR	311154	Symbol	cache_slot		310604						
ANR	311155	Symbol	EG		310604						
ANR	311156	Symbol	NULL		310604						
ANR	311157	Symbol	zend_get_property_offset		310604						
ANR	311158	Symbol	zend_get_property_guard		310604						
ANR	311159	Symbol	OBJ_PROP		310604						
ANR	311160	Symbol	tmp_object		310604						
ANR	311161	Symbol	Z_STR_P		310604						
ANR	311162	Symbol	zend_is_true		310604						
ANR	311163	Symbol	object		310604						
ANR	311164	Symbol	Z_REFCOUNTED		310604						
ANR	311165	Symbol	~IN_GET		310604						
ANR	311166	Symbol	rv		310604						
ANR	311167	Symbol	Z_OBJ_P		310604						
ANR	311168	Symbol	guard		310604						
ANR	311169	Symbol	* * zobj		310604						
ANR	311170	Symbol	result		310604						
ANR	311171	Symbol	UNEXPECTED		310604						
ANR	311172	Symbol	* zobj		310604						
ANR	311173	Symbol	IS_NULL		310604						
ANR	311174	Symbol	zobj -> properties		310604						
ANR	311175	Symbol	member		310604						
ANR	311176	Symbol	value		310604						
ANR	311177	Symbol	tmp_member		310604						
ANR	311178	Symbol	* zobj -> ce		310604						
ANR	311179	Symbol	& tmp_member		310604						
ANR	311180	Symbol	zval_get_string		310604						
ANR	311181	Symbol	zobj -> ce		310604						
ANR	311182	Symbol	property_offset		310604						
ANR	311183	Symbol	Z_TYPE_P		310604						
ANR	311184	Symbol	* guard		310604						
ANR	311185	Symbol	~IN_ISSET		310604						
ANR	311186	Symbol	& rv		310604						
ANR	311187	Symbol	& tmp_object		310604						
ANR	311188	Symbol	EXPECTED		310604						
ANR	311189	Function	zend_std_object_get_class_name	1512:0:45976:46099							
ANR	311190	FunctionDef	zend_std_object_get_class_name (const zend_object * zobj)		311189	0					
ANR	311191	CompoundStatement		1513:0:46055:46099	311189	0					
ANR	311192	ReturnStatement	return zend_string_copy ( zobj -> ce -> name ) ;	1514:1:46058:46097	311189	0	True				
ANR	311193	CallExpression	zend_string_copy ( zobj -> ce -> name )		311189	0					
ANR	311194	Callee	zend_string_copy		311189	0					
ANR	311195	Identifier	zend_string_copy		311189	0					
ANR	311196	ArgumentList	zobj -> ce -> name		311189	1					
ANR	311197	Argument	zobj -> ce -> name		311189	0					
ANR	311198	PtrMemberAccess	zobj -> ce -> name		311189	0					
ANR	311199	PtrMemberAccess	zobj -> ce		311189	0					
ANR	311200	Identifier	zobj		311189	0					
ANR	311201	Identifier	ce		311189	1					
ANR	311202	Identifier	name		311189	1					
ANR	311203	ReturnType	zend_string *		311189	1					
ANR	311204	Identifier	zend_std_object_get_class_name		311189	2					
ANR	311205	ParameterList	const zend_object * zobj		311189	3					
ANR	311206	Parameter	const zend_object * zobj	1512:44:46020:46042	311189	0	True				
ANR	311207	ParameterType	const zend_object *		311189	0					
ANR	311208	Identifier	zobj		311189	1					
ANR	311209	CFGEntryNode	ENTRY		311189		True				
ANR	311210	CFGExitNode	EXIT		311189		True				
ANR	311211	Symbol	zobj		311189						
ANR	311212	Symbol	* zobj		311189						
ANR	311213	Symbol	* zobj -> ce		311189						
ANR	311214	Symbol	* * zobj		311189						
ANR	311215	Symbol	zobj -> ce		311189						
ANR	311216	Symbol	zobj -> ce -> name		311189						
ANR	311217	Symbol	zend_string_copy		311189						
ANR	311218	Function	zend_std_cast_object_tostring	1518:0:46112:48126							
ANR	311219	FunctionDef	"zend_std_cast_object_tostring (zval * readobj , zval * writeobj , int type)"		311218	0					
ANR	311220	CompoundStatement		1519:0:46206:48126	311218	0					
ANR	311221	IdentifierDeclStatement	zval retval ;	1520:1:46209:46220	311218	0	True				
ANR	311222	IdentifierDecl	retval		311218	0					
ANR	311223	IdentifierDeclType	zval		311218	0					
ANR	311224	Identifier	retval		311218	1					
ANR	311225	IdentifierDeclStatement	zend_class_entry * ce ;	1521:1:46223:46243	311218	1	True				
ANR	311226	IdentifierDecl	* ce		311218	0					
ANR	311227	IdentifierDeclType	zend_class_entry *		311218	0					
ANR	311228	Identifier	ce		311218	1					
ANR	311229	SwitchStatement	switch ( type )		311218	2					
ANR	311230	Condition	type	1523:9:46255:46258	311218	0	True				
ANR	311231	Identifier	type		311218	0					
ANR	311232	CompoundStatement		5:15:54:54	311218	1					
ANR	311233	Label	case IS_STRING :	1524:2:46265:46279	311218	0	True				
ANR	311234	Identifier	IS_STRING		311218	0					
ANR	311235	ExpressionStatement	ce = Z_OBJCE_P ( readobj )	1525:3:46284:46307	311218	1	True				
ANR	311236	AssignmentExpression	ce = Z_OBJCE_P ( readobj )		311218	0		=			
ANR	311237	Identifier	ce		311218	0					
ANR	311238	CallExpression	Z_OBJCE_P ( readobj )		311218	1					
ANR	311239	Callee	Z_OBJCE_P		311218	0					
ANR	311240	Identifier	Z_OBJCE_P		311218	0					
ANR	311241	ArgumentList	readobj		311218	1					
ANR	311242	Argument	readobj		311218	0					
ANR	311243	Identifier	readobj		311218	0					
ANR	311244	IfStatement	"if ( ce -> __tostring && ( zend_call_method_with_0_params ( readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception ) ) )"		311218	2					
ANR	311245	Condition	"ce -> __tostring && ( zend_call_method_with_0_params ( readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception ) )"	1526:7:46316:46439	311218	0	True				
ANR	311246	AndExpression	"ce -> __tostring && ( zend_call_method_with_0_params ( readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception ) )"		311218	0		&&			
ANR	311247	PtrMemberAccess	ce -> __tostring		311218	0					
ANR	311248	Identifier	ce		311218	0					
ANR	311249	Identifier	__tostring		311218	1					
ANR	311250	OrExpression	"zend_call_method_with_0_params ( readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception )"		311218	1		||			
ANR	311251	CallExpression	"zend_call_method_with_0_params ( readobj , ce , & ce -> __tostring , ""__tostring"" , & retval )"		311218	0					
ANR	311252	Callee	zend_call_method_with_0_params		311218	0					
ANR	311253	Identifier	zend_call_method_with_0_params		311218	0					
ANR	311254	ArgumentList	readobj		311218	1					
ANR	311255	Argument	readobj		311218	0					
ANR	311256	Identifier	readobj		311218	0					
ANR	311257	Argument	ce		311218	1					
ANR	311258	Identifier	ce		311218	0					
ANR	311259	Argument	& ce -> __tostring		311218	2					
ANR	311260	UnaryOperationExpression	& ce -> __tostring		311218	0					
ANR	311261	UnaryOperator	&		311218	0					
ANR	311262	PtrMemberAccess	ce -> __tostring		311218	1					
ANR	311263	Identifier	ce		311218	0					
ANR	311264	Identifier	__tostring		311218	1					
ANR	311265	Argument	"""__tostring"""		311218	3					
ANR	311266	PrimaryExpression	"""__tostring"""		311218	0					
ANR	311267	Argument	& retval		311218	4					
ANR	311268	UnaryOperationExpression	& retval		311218	0					
ANR	311269	UnaryOperator	&		311218	0					
ANR	311270	Identifier	retval		311218	1					
ANR	311271	CallExpression	EG ( exception )		311218	1					
ANR	311272	Callee	EG		311218	0					
ANR	311273	Identifier	EG		311218	0					
ANR	311274	ArgumentList	exception		311218	1					
ANR	311275	Argument	exception		311218	0					
ANR	311276	Identifier	exception		311218	0					
ANR	311277	CompoundStatement		9:108:235:235	311218	1					
ANR	311278	IfStatement	if ( UNEXPECTED ( EG ( exception ) != NULL ) )		311218	0					
ANR	311279	Condition	UNEXPECTED ( EG ( exception ) != NULL )	1528:8:46452:46484	311218	0	True				
ANR	311280	CallExpression	UNEXPECTED ( EG ( exception ) != NULL )		311218	0					
ANR	311281	Callee	UNEXPECTED		311218	0					
ANR	311282	Identifier	UNEXPECTED		311218	0					
ANR	311283	ArgumentList	EG ( exception ) != NULL		311218	1					
ANR	311284	Argument	EG ( exception ) != NULL		311218	0					
ANR	311285	EqualityExpression	EG ( exception ) != NULL		311218	0		!=			
ANR	311286	CallExpression	EG ( exception )		311218	0					
ANR	311287	Callee	EG		311218	0					
ANR	311288	Identifier	EG		311218	0					
ANR	311289	ArgumentList	exception		311218	1					
ANR	311290	Argument	exception		311218	0					
ANR	311291	Identifier	exception		311218	0					
ANR	311292	Identifier	NULL		311218	1					
ANR	311293	CompoundStatement		11:5:287:304	311218	1					
ANR	311294	IdentifierDeclStatement	"zval * msg , ex , rv ;"	1529:5:46494:46511	311218	0	True				
ANR	311295	IdentifierDecl	* msg		311218	0					
ANR	311296	IdentifierDeclType	zval *		311218	0					
ANR	311297	Identifier	msg		311218	1					
ANR	311298	IdentifierDecl	ex		311218	1					
ANR	311299	IdentifierDeclType	zval		311218	0					
ANR	311300	Identifier	ex		311218	1					
ANR	311301	IdentifierDecl	rv		311218	2					
ANR	311302	IdentifierDeclType	zval		311218	0					
ANR	311303	Identifier	rv		311218	1					
ANR	311304	ExpressionStatement	zval_ptr_dtor ( & retval )	1530:5:46518:46540	311218	1	True				
ANR	311305	CallExpression	zval_ptr_dtor ( & retval )		311218	0					
ANR	311306	Callee	zval_ptr_dtor		311218	0					
ANR	311307	Identifier	zval_ptr_dtor		311218	0					
ANR	311308	ArgumentList	& retval		311218	1					
ANR	311309	Argument	& retval		311218	0					
ANR	311310	UnaryOperationExpression	& retval		311218	0					
ANR	311311	UnaryOperator	&		311218	0					
ANR	311312	Identifier	retval		311218	1					
ANR	311313	ExpressionStatement	"ZVAL_OBJ ( & ex , EG ( exception ) )"	1531:5:46547:46575	311218	2	True				
ANR	311314	CallExpression	"ZVAL_OBJ ( & ex , EG ( exception ) )"		311218	0					
ANR	311315	Callee	ZVAL_OBJ		311218	0					
ANR	311316	Identifier	ZVAL_OBJ		311218	0					
ANR	311317	ArgumentList	& ex		311218	1					
ANR	311318	Argument	& ex		311218	0					
ANR	311319	UnaryOperationExpression	& ex		311218	0					
ANR	311320	UnaryOperator	&		311218	0					
ANR	311321	Identifier	ex		311218	1					
ANR	311322	Argument	EG ( exception )		311218	1					
ANR	311323	CallExpression	EG ( exception )		311218	0					
ANR	311324	Callee	EG		311218	0					
ANR	311325	Identifier	EG		311218	0					
ANR	311326	ArgumentList	exception		311218	1					
ANR	311327	Argument	exception		311218	0					
ANR	311328	Identifier	exception		311218	0					
ANR	311329	ExpressionStatement	EG ( exception ) = NULL	1532:5:46582:46602	311218	3	True				
ANR	311330	AssignmentExpression	EG ( exception ) = NULL		311218	0		=			
ANR	311331	CallExpression	EG ( exception )		311218	0					
ANR	311332	Callee	EG		311218	0					
ANR	311333	Identifier	EG		311218	0					
ANR	311334	ArgumentList	exception		311218	1					
ANR	311335	Argument	exception		311218	0					
ANR	311336	Identifier	exception		311218	0					
ANR	311337	Identifier	NULL		311218	1					
ANR	311338	ExpressionStatement	"msg = zend_read_property ( Z_OBJCE ( ex ) , & ex , ""message"" , sizeof ( ""message"" ) - 1 , 1 , & rv )"	1533:5:46609:46693	311218	4	True				
ANR	311339	AssignmentExpression	"msg = zend_read_property ( Z_OBJCE ( ex ) , & ex , ""message"" , sizeof ( ""message"" ) - 1 , 1 , & rv )"		311218	0		=			
ANR	311340	Identifier	msg		311218	0					
ANR	311341	CallExpression	"zend_read_property ( Z_OBJCE ( ex ) , & ex , ""message"" , sizeof ( ""message"" ) - 1 , 1 , & rv )"		311218	1					
ANR	311342	Callee	zend_read_property		311218	0					
ANR	311343	Identifier	zend_read_property		311218	0					
ANR	311344	ArgumentList	Z_OBJCE ( ex )		311218	1					
ANR	311345	Argument	Z_OBJCE ( ex )		311218	0					
ANR	311346	CallExpression	Z_OBJCE ( ex )		311218	0					
ANR	311347	Callee	Z_OBJCE		311218	0					
ANR	311348	Identifier	Z_OBJCE		311218	0					
ANR	311349	ArgumentList	ex		311218	1					
ANR	311350	Argument	ex		311218	0					
ANR	311351	Identifier	ex		311218	0					
ANR	311352	Argument	& ex		311218	1					
ANR	311353	UnaryOperationExpression	& ex		311218	0					
ANR	311354	UnaryOperator	&		311218	0					
ANR	311355	Identifier	ex		311218	1					
ANR	311356	Argument	"""message"""		311218	2					
ANR	311357	PrimaryExpression	"""message"""		311218	0					
ANR	311358	Argument	"sizeof ( ""message"" ) - 1"		311218	3					
ANR	311359	AdditiveExpression	"sizeof ( ""message"" ) - 1"		311218	0		-			
ANR	311360	SizeofExpression	"sizeof ( ""message"" )"		311218	0					
ANR	311361	Sizeof	sizeof		311218	0					
ANR	311362	PrimaryExpression	"""message"""		311218	1					
ANR	311363	PrimaryExpression	1		311218	1					
ANR	311364	Argument	1		311218	4					
ANR	311365	PrimaryExpression	1		311218	0					
ANR	311366	Argument	& rv		311218	5					
ANR	311367	UnaryOperationExpression	& rv		311218	0					
ANR	311368	UnaryOperator	&		311218	0					
ANR	311369	Identifier	rv		311218	1					
ANR	311370	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( msg ) != IS_STRING ) )		311218	5					
ANR	311371	Condition	UNEXPECTED ( Z_TYPE_P ( msg ) != IS_STRING )	1534:9:46704:46741	311218	0	True				
ANR	311372	CallExpression	UNEXPECTED ( Z_TYPE_P ( msg ) != IS_STRING )		311218	0					
ANR	311373	Callee	UNEXPECTED		311218	0					
ANR	311374	Identifier	UNEXPECTED		311218	0					
ANR	311375	ArgumentList	Z_TYPE_P ( msg ) != IS_STRING		311218	1					
ANR	311376	Argument	Z_TYPE_P ( msg ) != IS_STRING		311218	0					
ANR	311377	EqualityExpression	Z_TYPE_P ( msg ) != IS_STRING		311218	0		!=			
ANR	311378	CallExpression	Z_TYPE_P ( msg )		311218	0					
ANR	311379	Callee	Z_TYPE_P		311218	0					
ANR	311380	Identifier	Z_TYPE_P		311218	0					
ANR	311381	ArgumentList	msg		311218	1					
ANR	311382	Argument	msg		311218	0					
ANR	311383	Identifier	msg		311218	0					
ANR	311384	Identifier	IS_STRING		311218	1					
ANR	311385	CompoundStatement		16:49:537:537	311218	1					
ANR	311386	ExpressionStatement	ZVAL_EMPTY_STRING ( & rv )	1535:6:46752:46774	311218	0	True				
ANR	311387	CallExpression	ZVAL_EMPTY_STRING ( & rv )		311218	0					
ANR	311388	Callee	ZVAL_EMPTY_STRING		311218	0					
ANR	311389	Identifier	ZVAL_EMPTY_STRING		311218	0					
ANR	311390	ArgumentList	& rv		311218	1					
ANR	311391	Argument	& rv		311218	0					
ANR	311392	UnaryOperationExpression	& rv		311218	0					
ANR	311393	UnaryOperator	&		311218	0					
ANR	311394	Identifier	rv		311218	1					
ANR	311395	ExpressionStatement	msg = & rv	1536:6:46782:46791	311218	1	True				
ANR	311396	AssignmentExpression	msg = & rv		311218	0		=			
ANR	311397	Identifier	msg		311218	0					
ANR	311398	UnaryOperationExpression	& rv		311218	1					
ANR	311399	UnaryOperator	&		311218	0					
ANR	311400	Identifier	rv		311218	1					
ANR	311401	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Method %s::__toString() must not throw an exception, caught %s: %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( Z_OBJCE ( ex ) -> name ) , Z_STRVAL_P ( msg ) )"	1538:5:46805:46983	311218	6	True				
ANR	311402	CallExpression	"zend_error_noreturn ( E_ERROR , ""Method %s::__toString() must not throw an exception, caught %s: %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( Z_OBJCE ( ex ) -> name ) , Z_STRVAL_P ( msg ) )"		311218	0					
ANR	311403	Callee	zend_error_noreturn		311218	0					
ANR	311404	Identifier	zend_error_noreturn		311218	0					
ANR	311405	ArgumentList	E_ERROR		311218	1					
ANR	311406	Argument	E_ERROR		311218	0					
ANR	311407	Identifier	E_ERROR		311218	0					
ANR	311408	Argument	"""Method %s::__toString() must not throw an exception, caught %s: %s"""		311218	1					
ANR	311409	PrimaryExpression	"""Method %s::__toString() must not throw an exception, caught %s: %s"""		311218	0					
ANR	311410	Argument	ZSTR_VAL ( ce -> name )		311218	2					
ANR	311411	CallExpression	ZSTR_VAL ( ce -> name )		311218	0					
ANR	311412	Callee	ZSTR_VAL		311218	0					
ANR	311413	Identifier	ZSTR_VAL		311218	0					
ANR	311414	ArgumentList	ce -> name		311218	1					
ANR	311415	Argument	ce -> name		311218	0					
ANR	311416	PtrMemberAccess	ce -> name		311218	0					
ANR	311417	Identifier	ce		311218	0					
ANR	311418	Identifier	name		311218	1					
ANR	311419	Argument	ZSTR_VAL ( Z_OBJCE ( ex ) -> name )		311218	3					
ANR	311420	CallExpression	ZSTR_VAL ( Z_OBJCE ( ex ) -> name )		311218	0					
ANR	311421	Callee	ZSTR_VAL		311218	0					
ANR	311422	Identifier	ZSTR_VAL		311218	0					
ANR	311423	ArgumentList	Z_OBJCE ( ex ) -> name		311218	1					
ANR	311424	Argument	Z_OBJCE ( ex ) -> name		311218	0					
ANR	311425	PtrMemberAccess	Z_OBJCE ( ex ) -> name		311218	0					
ANR	311426	CallExpression	Z_OBJCE ( ex )		311218	0					
ANR	311427	Callee	Z_OBJCE		311218	0					
ANR	311428	Identifier	Z_OBJCE		311218	0					
ANR	311429	ArgumentList	ex		311218	1					
ANR	311430	Argument	ex		311218	0					
ANR	311431	Identifier	ex		311218	0					
ANR	311432	Identifier	name		311218	1					
ANR	311433	Argument	Z_STRVAL_P ( msg )		311218	4					
ANR	311434	CallExpression	Z_STRVAL_P ( msg )		311218	0					
ANR	311435	Callee	Z_STRVAL_P		311218	0					
ANR	311436	Identifier	Z_STRVAL_P		311218	0					
ANR	311437	ArgumentList	msg		311218	1					
ANR	311438	Argument	msg		311218	0					
ANR	311439	Identifier	msg		311218	0					
ANR	311440	ReturnStatement	return FAILURE ;	1541:5:46990:47004	311218	7	True				
ANR	311441	Identifier	FAILURE		311218	0					
ANR	311442	IfStatement	if ( EXPECTED ( Z_TYPE ( retval ) == IS_STRING ) )		311218	1					
ANR	311443	Condition	EXPECTED ( Z_TYPE ( retval ) == IS_STRING )	1543:8:47020:47056	311218	0	True				
ANR	311444	CallExpression	EXPECTED ( Z_TYPE ( retval ) == IS_STRING )		311218	0					
ANR	311445	Callee	EXPECTED		311218	0					
ANR	311446	Identifier	EXPECTED		311218	0					
ANR	311447	ArgumentList	Z_TYPE ( retval ) == IS_STRING		311218	1					
ANR	311448	Argument	Z_TYPE ( retval ) == IS_STRING		311218	0					
ANR	311449	EqualityExpression	Z_TYPE ( retval ) == IS_STRING		311218	0		==			
ANR	311450	CallExpression	Z_TYPE ( retval )		311218	0					
ANR	311451	Callee	Z_TYPE		311218	0					
ANR	311452	Identifier	Z_TYPE		311218	0					
ANR	311453	ArgumentList	retval		311218	1					
ANR	311454	Argument	retval		311218	0					
ANR	311455	Identifier	retval		311218	0					
ANR	311456	Identifier	IS_STRING		311218	1					
ANR	311457	CompoundStatement		25:47:852:852	311218	1					
ANR	311458	IfStatement	if ( readobj == writeobj )		311218	0					
ANR	311459	Condition	readobj == writeobj	1544:9:47070:47088	311218	0	True				
ANR	311460	EqualityExpression	readobj == writeobj		311218	0		==			
ANR	311461	Identifier	readobj		311218	0					
ANR	311462	Identifier	writeobj		311218	1					
ANR	311463	CompoundStatement		26:30:884:884	311218	1					
ANR	311464	ExpressionStatement	zval_ptr_dtor ( readobj )	1545:6:47099:47121	311218	0	True				
ANR	311465	CallExpression	zval_ptr_dtor ( readobj )		311218	0					
ANR	311466	Callee	zval_ptr_dtor		311218	0					
ANR	311467	Identifier	zval_ptr_dtor		311218	0					
ANR	311468	ArgumentList	readobj		311218	1					
ANR	311469	Argument	readobj		311218	0					
ANR	311470	Identifier	readobj		311218	0					
ANR	311471	ExpressionStatement	"ZVAL_COPY_VALUE ( writeobj , & retval )"	1547:5:47135:47169	311218	1	True				
ANR	311472	CallExpression	"ZVAL_COPY_VALUE ( writeobj , & retval )"		311218	0					
ANR	311473	Callee	ZVAL_COPY_VALUE		311218	0					
ANR	311474	Identifier	ZVAL_COPY_VALUE		311218	0					
ANR	311475	ArgumentList	writeobj		311218	1					
ANR	311476	Argument	writeobj		311218	0					
ANR	311477	Identifier	writeobj		311218	0					
ANR	311478	Argument	& retval		311218	1					
ANR	311479	UnaryOperationExpression	& retval		311218	0					
ANR	311480	UnaryOperator	&		311218	0					
ANR	311481	Identifier	retval		311218	1					
ANR	311482	ReturnStatement	return SUCCESS ;	1548:5:47176:47190	311218	2	True				
ANR	311483	Identifier	SUCCESS		311218	0					
ANR	311484	ElseStatement	else		311218	0					
ANR	311485	CompoundStatement		31:11:996:996	311218	0					
ANR	311486	ExpressionStatement	zval_ptr_dtor ( & retval )	1550:5:47210:47232	311218	0	True				
ANR	311487	CallExpression	zval_ptr_dtor ( & retval )		311218	0					
ANR	311488	Callee	zval_ptr_dtor		311218	0					
ANR	311489	Identifier	zval_ptr_dtor		311218	0					
ANR	311490	ArgumentList	& retval		311218	1					
ANR	311491	Argument	& retval		311218	0					
ANR	311492	UnaryOperationExpression	& retval		311218	0					
ANR	311493	UnaryOperator	&		311218	0					
ANR	311494	Identifier	retval		311218	1					
ANR	311495	IfStatement	if ( readobj == writeobj )		311218	1					
ANR	311496	Condition	readobj == writeobj	1551:9:47243:47261	311218	0	True				
ANR	311497	EqualityExpression	readobj == writeobj		311218	0		==			
ANR	311498	Identifier	readobj		311218	0					
ANR	311499	Identifier	writeobj		311218	1					
ANR	311500	CompoundStatement		33:30:1057:1057	311218	1					
ANR	311501	ExpressionStatement	zval_ptr_dtor ( readobj )	1552:6:47272:47294	311218	0	True				
ANR	311502	CallExpression	zval_ptr_dtor ( readobj )		311218	0					
ANR	311503	Callee	zval_ptr_dtor		311218	0					
ANR	311504	Identifier	zval_ptr_dtor		311218	0					
ANR	311505	ArgumentList	readobj		311218	1					
ANR	311506	Argument	readobj		311218	0					
ANR	311507	Identifier	readobj		311218	0					
ANR	311508	ExpressionStatement	ZVAL_EMPTY_STRING ( writeobj )	1554:5:47308:47335	311218	2	True				
ANR	311509	CallExpression	ZVAL_EMPTY_STRING ( writeobj )		311218	0					
ANR	311510	Callee	ZVAL_EMPTY_STRING		311218	0					
ANR	311511	Identifier	ZVAL_EMPTY_STRING		311218	0					
ANR	311512	ArgumentList	writeobj		311218	1					
ANR	311513	Argument	writeobj		311218	0					
ANR	311514	Identifier	writeobj		311218	0					
ANR	311515	ExpressionStatement	"zend_error ( E_RECOVERABLE_ERROR , ""Method %s::__toString() must return a string value"" , ZSTR_VAL ( ce -> name ) )"	1555:5:47342:47447	311218	3	True				
ANR	311516	CallExpression	"zend_error ( E_RECOVERABLE_ERROR , ""Method %s::__toString() must return a string value"" , ZSTR_VAL ( ce -> name ) )"		311218	0					
ANR	311517	Callee	zend_error		311218	0					
ANR	311518	Identifier	zend_error		311218	0					
ANR	311519	ArgumentList	E_RECOVERABLE_ERROR		311218	1					
ANR	311520	Argument	E_RECOVERABLE_ERROR		311218	0					
ANR	311521	Identifier	E_RECOVERABLE_ERROR		311218	0					
ANR	311522	Argument	"""Method %s::__toString() must return a string value"""		311218	1					
ANR	311523	PrimaryExpression	"""Method %s::__toString() must return a string value"""		311218	0					
ANR	311524	Argument	ZSTR_VAL ( ce -> name )		311218	2					
ANR	311525	CallExpression	ZSTR_VAL ( ce -> name )		311218	0					
ANR	311526	Callee	ZSTR_VAL		311218	0					
ANR	311527	Identifier	ZSTR_VAL		311218	0					
ANR	311528	ArgumentList	ce -> name		311218	1					
ANR	311529	Argument	ce -> name		311218	0					
ANR	311530	PtrMemberAccess	ce -> name		311218	0					
ANR	311531	Identifier	ce		311218	0					
ANR	311532	Identifier	name		311218	1					
ANR	311533	ReturnStatement	return SUCCESS ;	1556:5:47454:47468	311218	4	True				
ANR	311534	Identifier	SUCCESS		311218	0					
ANR	311535	ReturnStatement	return FAILURE ;	1559:3:47484:47498	311218	3	True				
ANR	311536	Identifier	FAILURE		311218	0					
ANR	311537	Label	case _IS_BOOL :	1560:2:47502:47515	311218	4	True				
ANR	311538	Identifier	_IS_BOOL		311218	0					
ANR	311539	ExpressionStatement	"ZVAL_BOOL ( writeobj , 1 )"	1561:3:47520:47542	311218	5	True				
ANR	311540	CallExpression	"ZVAL_BOOL ( writeobj , 1 )"		311218	0					
ANR	311541	Callee	ZVAL_BOOL		311218	0					
ANR	311542	Identifier	ZVAL_BOOL		311218	0					
ANR	311543	ArgumentList	writeobj		311218	1					
ANR	311544	Argument	writeobj		311218	0					
ANR	311545	Identifier	writeobj		311218	0					
ANR	311546	Argument	1		311218	1					
ANR	311547	PrimaryExpression	1		311218	0					
ANR	311548	ReturnStatement	return SUCCESS ;	1562:3:47547:47561	311218	6	True				
ANR	311549	Identifier	SUCCESS		311218	0					
ANR	311550	Label	case IS_LONG :	1563:2:47565:47577	311218	7	True				
ANR	311551	Identifier	IS_LONG		311218	0					
ANR	311552	ExpressionStatement	ce = Z_OBJCE_P ( readobj )	1564:3:47582:47605	311218	8	True				
ANR	311553	AssignmentExpression	ce = Z_OBJCE_P ( readobj )		311218	0		=			
ANR	311554	Identifier	ce		311218	0					
ANR	311555	CallExpression	Z_OBJCE_P ( readobj )		311218	1					
ANR	311556	Callee	Z_OBJCE_P		311218	0					
ANR	311557	Identifier	Z_OBJCE_P		311218	0					
ANR	311558	ArgumentList	readobj		311218	1					
ANR	311559	Argument	readobj		311218	0					
ANR	311560	Identifier	readobj		311218	0					
ANR	311561	ExpressionStatement	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to int"" , ZSTR_VAL ( ce -> name ) )"	1565:3:47610:47702	311218	9	True				
ANR	311562	CallExpression	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to int"" , ZSTR_VAL ( ce -> name ) )"		311218	0					
ANR	311563	Callee	zend_error		311218	0					
ANR	311564	Identifier	zend_error		311218	0					
ANR	311565	ArgumentList	E_NOTICE		311218	1					
ANR	311566	Argument	E_NOTICE		311218	0					
ANR	311567	Identifier	E_NOTICE		311218	0					
ANR	311568	Argument	"""Object of class %s could not be converted to int"""		311218	1					
ANR	311569	PrimaryExpression	"""Object of class %s could not be converted to int"""		311218	0					
ANR	311570	Argument	ZSTR_VAL ( ce -> name )		311218	2					
ANR	311571	CallExpression	ZSTR_VAL ( ce -> name )		311218	0					
ANR	311572	Callee	ZSTR_VAL		311218	0					
ANR	311573	Identifier	ZSTR_VAL		311218	0					
ANR	311574	ArgumentList	ce -> name		311218	1					
ANR	311575	Argument	ce -> name		311218	0					
ANR	311576	PtrMemberAccess	ce -> name		311218	0					
ANR	311577	Identifier	ce		311218	0					
ANR	311578	Identifier	name		311218	1					
ANR	311579	IfStatement	if ( readobj == writeobj )		311218	10					
ANR	311580	Condition	readobj == writeobj	1566:7:47711:47729	311218	0	True				
ANR	311581	EqualityExpression	readobj == writeobj		311218	0		==			
ANR	311582	Identifier	readobj		311218	0					
ANR	311583	Identifier	writeobj		311218	1					
ANR	311584	CompoundStatement		48:28:1525:1525	311218	1					
ANR	311585	ExpressionStatement	zval_dtor ( readobj )	1567:4:47738:47756	311218	0	True				
ANR	311586	CallExpression	zval_dtor ( readobj )		311218	0					
ANR	311587	Callee	zval_dtor		311218	0					
ANR	311588	Identifier	zval_dtor		311218	0					
ANR	311589	ArgumentList	readobj		311218	1					
ANR	311590	Argument	readobj		311218	0					
ANR	311591	Identifier	readobj		311218	0					
ANR	311592	ExpressionStatement	"ZVAL_LONG ( writeobj , 1 )"	1569:3:47766:47788	311218	11	True				
ANR	311593	CallExpression	"ZVAL_LONG ( writeobj , 1 )"		311218	0					
ANR	311594	Callee	ZVAL_LONG		311218	0					
ANR	311595	Identifier	ZVAL_LONG		311218	0					
ANR	311596	ArgumentList	writeobj		311218	1					
ANR	311597	Argument	writeobj		311218	0					
ANR	311598	Identifier	writeobj		311218	0					
ANR	311599	Argument	1		311218	1					
ANR	311600	PrimaryExpression	1		311218	0					
ANR	311601	ReturnStatement	return SUCCESS ;	1570:3:47793:47807	311218	12	True				
ANR	311602	Identifier	SUCCESS		311218	0					
ANR	311603	Label	case IS_DOUBLE :	1571:2:47811:47825	311218	13	True				
ANR	311604	Identifier	IS_DOUBLE		311218	0					
ANR	311605	ExpressionStatement	ce = Z_OBJCE_P ( readobj )	1572:3:47830:47853	311218	14	True				
ANR	311606	AssignmentExpression	ce = Z_OBJCE_P ( readobj )		311218	0		=			
ANR	311607	Identifier	ce		311218	0					
ANR	311608	CallExpression	Z_OBJCE_P ( readobj )		311218	1					
ANR	311609	Callee	Z_OBJCE_P		311218	0					
ANR	311610	Identifier	Z_OBJCE_P		311218	0					
ANR	311611	ArgumentList	readobj		311218	1					
ANR	311612	Argument	readobj		311218	0					
ANR	311613	Identifier	readobj		311218	0					
ANR	311614	ExpressionStatement	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to float"" , ZSTR_VAL ( ce -> name ) )"	1573:3:47858:47952	311218	15	True				
ANR	311615	CallExpression	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to float"" , ZSTR_VAL ( ce -> name ) )"		311218	0					
ANR	311616	Callee	zend_error		311218	0					
ANR	311617	Identifier	zend_error		311218	0					
ANR	311618	ArgumentList	E_NOTICE		311218	1					
ANR	311619	Argument	E_NOTICE		311218	0					
ANR	311620	Identifier	E_NOTICE		311218	0					
ANR	311621	Argument	"""Object of class %s could not be converted to float"""		311218	1					
ANR	311622	PrimaryExpression	"""Object of class %s could not be converted to float"""		311218	0					
ANR	311623	Argument	ZSTR_VAL ( ce -> name )		311218	2					
ANR	311624	CallExpression	ZSTR_VAL ( ce -> name )		311218	0					
ANR	311625	Callee	ZSTR_VAL		311218	0					
ANR	311626	Identifier	ZSTR_VAL		311218	0					
ANR	311627	ArgumentList	ce -> name		311218	1					
ANR	311628	Argument	ce -> name		311218	0					
ANR	311629	PtrMemberAccess	ce -> name		311218	0					
ANR	311630	Identifier	ce		311218	0					
ANR	311631	Identifier	name		311218	1					
ANR	311632	IfStatement	if ( readobj == writeobj )		311218	16					
ANR	311633	Condition	readobj == writeobj	1574:7:47961:47979	311218	0	True				
ANR	311634	EqualityExpression	readobj == writeobj		311218	0		==			
ANR	311635	Identifier	readobj		311218	0					
ANR	311636	Identifier	writeobj		311218	1					
ANR	311637	CompoundStatement		56:28:1775:1775	311218	1					
ANR	311638	ExpressionStatement	zval_dtor ( readobj )	1575:4:47988:48006	311218	0	True				
ANR	311639	CallExpression	zval_dtor ( readobj )		311218	0					
ANR	311640	Callee	zval_dtor		311218	0					
ANR	311641	Identifier	zval_dtor		311218	0					
ANR	311642	ArgumentList	readobj		311218	1					
ANR	311643	Argument	readobj		311218	0					
ANR	311644	Identifier	readobj		311218	0					
ANR	311645	ExpressionStatement	"ZVAL_DOUBLE ( writeobj , 1 )"	1577:3:48016:48040	311218	17	True				
ANR	311646	CallExpression	"ZVAL_DOUBLE ( writeobj , 1 )"		311218	0					
ANR	311647	Callee	ZVAL_DOUBLE		311218	0					
ANR	311648	Identifier	ZVAL_DOUBLE		311218	0					
ANR	311649	ArgumentList	writeobj		311218	1					
ANR	311650	Argument	writeobj		311218	0					
ANR	311651	Identifier	writeobj		311218	0					
ANR	311652	Argument	1		311218	1					
ANR	311653	PrimaryExpression	1		311218	0					
ANR	311654	ReturnStatement	return SUCCESS ;	1578:3:48045:48059	311218	18	True				
ANR	311655	Identifier	SUCCESS		311218	0					
ANR	311656	Label	default :	1579:2:48063:48070	311218	19	True				
ANR	311657	Identifier	default		311218	0					
ANR	311658	ExpressionStatement	ZVAL_NULL ( writeobj )	1580:3:48075:48094	311218	20	True				
ANR	311659	CallExpression	ZVAL_NULL ( writeobj )		311218	0					
ANR	311660	Callee	ZVAL_NULL		311218	0					
ANR	311661	Identifier	ZVAL_NULL		311218	0					
ANR	311662	ArgumentList	writeobj		311218	1					
ANR	311663	Argument	writeobj		311218	0					
ANR	311664	Identifier	writeobj		311218	0					
ANR	311665	BreakStatement	break ;	1581:3:48099:48104	311218	21	True				
ANR	311666	ReturnStatement	return FAILURE ;	1583:1:48110:48124	311218	3	True				
ANR	311667	Identifier	FAILURE		311218	0					
ANR	311668	ReturnType	ZEND_API int		311218	1					
ANR	311669	Identifier	zend_std_cast_object_tostring		311218	2					
ANR	311670	ParameterList	"zval * readobj , zval * writeobj , int type"		311218	3					
ANR	311671	Parameter	zval * readobj	1518:43:46155:46167	311218	0	True				
ANR	311672	ParameterType	zval *		311218	0					
ANR	311673	Identifier	readobj		311218	1					
ANR	311674	Parameter	zval * writeobj	1518:58:46170:46183	311218	1	True				
ANR	311675	ParameterType	zval *		311218	0					
ANR	311676	Identifier	writeobj		311218	1					
ANR	311677	Parameter	int type	1518:74:46186:46193	311218	2	True				
ANR	311678	ParameterType	int		311218	0					
ANR	311679	Identifier	type		311218	1					
ANR	311680	CFGEntryNode	ENTRY		311218		True				
ANR	311681	CFGExitNode	EXIT		311218		True				
ANR	311682	Symbol	exception		311218						
ANR	311683	Symbol	msg		311218						
ANR	311684	Symbol	E_RECOVERABLE_ERROR		311218						
ANR	311685	Symbol	readobj		311218						
ANR	311686	Symbol	rv		311218						
ANR	311687	Symbol	writeobj		311218						
ANR	311688	Symbol	Z_TYPE		311218						
ANR	311689	Symbol	* ce		311218						
ANR	311690	Symbol	type		311218						
ANR	311691	Symbol	UNEXPECTED		311218						
ANR	311692	Symbol	Z_OBJCE		311218						
ANR	311693	Symbol	ce -> __tostring		311218						
ANR	311694	Symbol	zend_call_method_with_0_params		311218						
ANR	311695	Symbol	Z_OBJCE_P		311218						
ANR	311696	Symbol	& retval		311218						
ANR	311697	Symbol	IS_STRING		311218						
ANR	311698	Symbol	ce -> name		311218						
ANR	311699	Symbol	Z_OBJCE ( ex ) -> name		311218						
ANR	311700	Symbol	ce		311218						
ANR	311701	Symbol	EG		311218						
ANR	311702	Symbol	NULL		311218						
ANR	311703	Symbol	SUCCESS		311218						
ANR	311704	Symbol	& ce -> __tostring		311218						
ANR	311705	Symbol	E_NOTICE		311218						
ANR	311706	Symbol	Z_TYPE_P		311218						
ANR	311707	Symbol	Z_STRVAL_P		311218						
ANR	311708	Symbol	FAILURE		311218						
ANR	311709	Symbol	retval		311218						
ANR	311710	Symbol	& rv		311218						
ANR	311711	Symbol	ZSTR_VAL		311218						
ANR	311712	Symbol	ex		311218						
ANR	311713	Symbol	E_ERROR		311218						
ANR	311714	Symbol	zend_read_property		311218						
ANR	311715	Symbol	* Z_OBJCE		311218						
ANR	311716	Symbol	& ex		311218						
ANR	311717	Symbol	EXPECTED		311218						
ANR	311718	Function	zend_std_get_closure	1587:0:48139:48742							
ANR	311719	FunctionDef	"zend_std_get_closure (zval * obj , zend_class_entry * * ce_ptr , zend_function * * fptr_ptr , zend_object * * obj_ptr)"		311718	0					
ANR	311720	CompoundStatement		1588:0:48261:48742	311718	0					
ANR	311721	IdentifierDeclStatement	zval * func ;	1589:1:48264:48274	311718	0	True				
ANR	311722	IdentifierDecl	* func		311718	0					
ANR	311723	IdentifierDeclType	zval *		311718	0					
ANR	311724	Identifier	func		311718	1					
ANR	311725	IdentifierDeclStatement	zend_class_entry * ce ;	1590:1:48277:48297	311718	1	True				
ANR	311726	IdentifierDecl	* ce		311718	0					
ANR	311727	IdentifierDeclType	zend_class_entry *		311718	0					
ANR	311728	Identifier	ce		311718	1					
ANR	311729	IfStatement	if ( Z_TYPE_P ( obj ) != IS_OBJECT )		311718	2					
ANR	311730	Condition	Z_TYPE_P ( obj ) != IS_OBJECT	1592:5:48305:48330	311718	0	True				
ANR	311731	EqualityExpression	Z_TYPE_P ( obj ) != IS_OBJECT		311718	0		!=			
ANR	311732	CallExpression	Z_TYPE_P ( obj )		311718	0					
ANR	311733	Callee	Z_TYPE_P		311718	0					
ANR	311734	Identifier	Z_TYPE_P		311718	0					
ANR	311735	ArgumentList	obj		311718	1					
ANR	311736	Argument	obj		311718	0					
ANR	311737	Identifier	obj		311718	0					
ANR	311738	Identifier	IS_OBJECT		311718	1					
ANR	311739	CompoundStatement		5:33:71:71	311718	1					
ANR	311740	ReturnStatement	return FAILURE ;	1593:2:48337:48351	311718	0	True				
ANR	311741	Identifier	FAILURE		311718	0					
ANR	311742	ExpressionStatement	ce = Z_OBJCE_P ( obj )	1596:1:48358:48377	311718	3	True				
ANR	311743	AssignmentExpression	ce = Z_OBJCE_P ( obj )		311718	0		=			
ANR	311744	Identifier	ce		311718	0					
ANR	311745	CallExpression	Z_OBJCE_P ( obj )		311718	1					
ANR	311746	Callee	Z_OBJCE_P		311718	0					
ANR	311747	Identifier	Z_OBJCE_P		311718	0					
ANR	311748	ArgumentList	obj		311718	1					
ANR	311749	Argument	obj		311718	0					
ANR	311750	Identifier	obj		311718	0					
ANR	311751	IfStatement	"if ( ( func = zend_hash_str_find ( & ce -> function_table , ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 ) ) == NULL )"		311718	4					
ANR	311752	Condition	"( func = zend_hash_str_find ( & ce -> function_table , ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 ) ) == NULL"	1598:5:48385:48496	311718	0	True				
ANR	311753	EqualityExpression	"( func = zend_hash_str_find ( & ce -> function_table , ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 ) ) == NULL"		311718	0		==			
ANR	311754	AssignmentExpression	"func = zend_hash_str_find ( & ce -> function_table , ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 )"		311718	0		=			
ANR	311755	Identifier	func		311718	0					
ANR	311756	CallExpression	"zend_hash_str_find ( & ce -> function_table , ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 )"		311718	1					
ANR	311757	Callee	zend_hash_str_find		311718	0					
ANR	311758	Identifier	zend_hash_str_find		311718	0					
ANR	311759	ArgumentList	& ce -> function_table		311718	1					
ANR	311760	Argument	& ce -> function_table		311718	0					
ANR	311761	UnaryOperationExpression	& ce -> function_table		311718	0					
ANR	311762	UnaryOperator	&		311718	0					
ANR	311763	PtrMemberAccess	ce -> function_table		311718	1					
ANR	311764	Identifier	ce		311718	0					
ANR	311765	Identifier	function_table		311718	1					
ANR	311766	Argument	ZEND_INVOKE_FUNC_NAME		311718	1					
ANR	311767	Identifier	ZEND_INVOKE_FUNC_NAME		311718	0					
ANR	311768	Argument	sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1		311718	2					
ANR	311769	AdditiveExpression	sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1		311718	0		-			
ANR	311770	SizeofExpression	sizeof ( ZEND_INVOKE_FUNC_NAME )		311718	0					
ANR	311771	Sizeof	sizeof		311718	0					
ANR	311772	SizeofOperand	ZEND_INVOKE_FUNC_NAME		311718	1					
ANR	311773	PrimaryExpression	1		311718	1					
ANR	311774	Identifier	NULL		311718	1					
ANR	311775	CompoundStatement		11:119:237:237	311718	1					
ANR	311776	ReturnStatement	return FAILURE ;	1599:2:48503:48517	311718	0	True				
ANR	311777	Identifier	FAILURE		311718	0					
ANR	311778	ExpressionStatement	* fptr_ptr = Z_FUNC_P ( func )	1601:1:48523:48549	311718	5	True				
ANR	311779	AssignmentExpression	* fptr_ptr = Z_FUNC_P ( func )		311718	0		=			
ANR	311780	UnaryOperationExpression	* fptr_ptr		311718	0					
ANR	311781	UnaryOperator	*		311718	0					
ANR	311782	Identifier	fptr_ptr		311718	1					
ANR	311783	CallExpression	Z_FUNC_P ( func )		311718	1					
ANR	311784	Callee	Z_FUNC_P		311718	0					
ANR	311785	Identifier	Z_FUNC_P		311718	0					
ANR	311786	ArgumentList	func		311718	1					
ANR	311787	Argument	func		311718	0					
ANR	311788	Identifier	func		311718	0					
ANR	311789	ExpressionStatement	* ce_ptr = ce	1603:1:48553:48565	311718	6	True				
ANR	311790	AssignmentExpression	* ce_ptr = ce		311718	0		=			
ANR	311791	UnaryOperationExpression	* ce_ptr		311718	0					
ANR	311792	UnaryOperator	*		311718	0					
ANR	311793	Identifier	ce_ptr		311718	1					
ANR	311794	Identifier	ce		311718	1					
ANR	311795	IfStatement	if ( ( * fptr_ptr ) -> common . fn_flags & ZEND_ACC_STATIC )		311718	7					
ANR	311796	Condition	( * fptr_ptr ) -> common . fn_flags & ZEND_ACC_STATIC	1604:5:48572:48617	311718	0	True				
ANR	311797	BitAndExpression	( * fptr_ptr ) -> common . fn_flags & ZEND_ACC_STATIC		311718	0		&			
ANR	311798	MemberAccess	( * fptr_ptr ) -> common . fn_flags		311718	0					
ANR	311799	PtrMemberAccess	( * fptr_ptr ) -> common		311718	0					
ANR	311800	UnaryOperationExpression	* fptr_ptr		311718	0					
ANR	311801	UnaryOperator	*		311718	0					
ANR	311802	Identifier	fptr_ptr		311718	1					
ANR	311803	Identifier	common		311718	1					
ANR	311804	Identifier	fn_flags		311718	1					
ANR	311805	Identifier	ZEND_ACC_STATIC		311718	1					
ANR	311806	CompoundStatement		17:53:358:358	311718	1					
ANR	311807	IfStatement	if ( obj_ptr )		311718	0					
ANR	311808	Condition	obj_ptr	1605:6:48628:48634	311718	0	True				
ANR	311809	Identifier	obj_ptr		311718	0					
ANR	311810	CompoundStatement		18:15:375:375	311718	1					
ANR	311811	ExpressionStatement	* obj_ptr = NULL	1606:3:48642:48657	311718	0	True				
ANR	311812	AssignmentExpression	* obj_ptr = NULL		311718	0		=			
ANR	311813	UnaryOperationExpression	* obj_ptr		311718	0					
ANR	311814	UnaryOperator	*		311718	0					
ANR	311815	Identifier	obj_ptr		311718	1					
ANR	311816	Identifier	NULL		311718	1					
ANR	311817	ElseStatement	else		311718	0					
ANR	311818	CompoundStatement		21:8:409:409	311718	0					
ANR	311819	IfStatement	if ( obj_ptr )		311718	0					
ANR	311820	Condition	obj_ptr	1609:6:48679:48685	311718	0	True				
ANR	311821	Identifier	obj_ptr		311718	0					
ANR	311822	CompoundStatement		22:15:426:426	311718	1					
ANR	311823	ExpressionStatement	* obj_ptr = Z_OBJ_P ( obj )	1610:3:48693:48716	311718	0	True				
ANR	311824	AssignmentExpression	* obj_ptr = Z_OBJ_P ( obj )		311718	0		=			
ANR	311825	UnaryOperationExpression	* obj_ptr		311718	0					
ANR	311826	UnaryOperator	*		311718	0					
ANR	311827	Identifier	obj_ptr		311718	1					
ANR	311828	CallExpression	Z_OBJ_P ( obj )		311718	1					
ANR	311829	Callee	Z_OBJ_P		311718	0					
ANR	311830	Identifier	Z_OBJ_P		311718	0					
ANR	311831	ArgumentList	obj		311718	1					
ANR	311832	Argument	obj		311718	0					
ANR	311833	Identifier	obj		311718	0					
ANR	311834	ReturnStatement	return SUCCESS ;	1613:1:48726:48740	311718	8	True				
ANR	311835	Identifier	SUCCESS		311718	0					
ANR	311836	ReturnType	int		311718	1					
ANR	311837	Identifier	zend_std_get_closure		311718	2					
ANR	311838	ParameterList	"zval * obj , zend_class_entry * * ce_ptr , zend_function * * fptr_ptr , zend_object * * obj_ptr"		311718	3					
ANR	311839	Parameter	zval * obj	1587:25:48164:48172	311718	0	True				
ANR	311840	ParameterType	zval *		311718	0					
ANR	311841	Identifier	obj		311718	1					
ANR	311842	Parameter	zend_class_entry * * ce_ptr	1587:36:48175:48199	311718	1	True				
ANR	311843	ParameterType	zend_class_entry * *		311718	0					
ANR	311844	Identifier	ce_ptr		311718	1					
ANR	311845	Parameter	zend_function * * fptr_ptr	1587:63:48202:48225	311718	2	True				
ANR	311846	ParameterType	zend_function * *		311718	0					
ANR	311847	Identifier	fptr_ptr		311718	1					
ANR	311848	Parameter	zend_object * * obj_ptr	1587:89:48228:48248	311718	3	True				
ANR	311849	ParameterType	zend_object * *		311718	0					
ANR	311850	Identifier	obj_ptr		311718	1					
ANR	311851	CFGEntryNode	ENTRY		311718		True				
ANR	311852	CFGExitNode	EXIT		311718		True				
ANR	311853	Symbol	fptr_ptr		311718						
ANR	311854	Symbol	* obj_ptr		311718						
ANR	311855	Symbol	ce		311718						
ANR	311856	Symbol	NULL		311718						
ANR	311857	Symbol	* ce_ptr		311718						
ANR	311858	Symbol	SUCCESS		311718						
ANR	311859	Symbol	Z_FUNC_P		311718						
ANR	311860	Symbol	( * fptr_ptr ) -> common . fn_flags		311718						
ANR	311861	Symbol	Z_OBJ_P		311718						
ANR	311862	Symbol	& ce -> function_table		311718						
ANR	311863	Symbol	Z_TYPE_P		311718						
ANR	311864	Symbol	FAILURE		311718						
ANR	311865	Symbol	* * fptr_ptr		311718						
ANR	311866	Symbol	( * fptr_ptr ) -> common		311718						
ANR	311867	Symbol	zend_hash_str_find		311718						
ANR	311868	Symbol	func		311718						
ANR	311869	Symbol	obj		311718						
ANR	311870	Symbol	obj_ptr		311718						
ANR	311871	Symbol	Z_OBJCE_P		311718						
ANR	311872	Symbol	ZEND_ACC_STATIC		311718						
ANR	311873	Symbol	ce_ptr		311718						
ANR	311874	Symbol	IS_OBJECT		311718						
ANR	311875	Symbol	* fptr_ptr		311718						
ANR	311876	Symbol	ZEND_INVOKE_FUNC_NAME		311718						
ANR	311877	DeclStmt									
ANR	311878	Decl							ZEND_API zend_object_handlers	ZEND_API zend_object_handlers	std_object_handlers
