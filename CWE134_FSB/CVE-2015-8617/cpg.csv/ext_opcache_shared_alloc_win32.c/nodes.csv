command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1404264	File	data/converged/CVE-2015-8617_php-src/ext_opcache_shared_alloc_win32.c								
ANR	1404265	DeclStmt									
ANR	1404266	Decl							HANDLE	HANDLE	memfile
ANR	1404267	Decl							HANDLE	HANDLE	memory_mutex
ANR	1404268	DeclStmt									
ANR	1404269	Decl							void	void *	mapping_base
ANR	1404270	Function	zend_win_error_message	40:0:1902:2903							
ANR	1404271	FunctionDef	"zend_win_error_message (int type , char * msg , int err)"		1404270	0					
ANR	1404272	CompoundStatement		41:0:1967:2903	1404270	0					
ANR	1404273	IdentifierDeclStatement	LPVOID lpMsgBuf ;	42:1:1970:1985	1404270	0	True				
ANR	1404274	IdentifierDecl	lpMsgBuf		1404270	0					
ANR	1404275	IdentifierDeclType	LPVOID		1404270	0					
ANR	1404276	Identifier	lpMsgBuf		1404270	1					
ANR	1404277	IdentifierDeclStatement	HANDLE h ;	43:1:1988:1996	1404270	1	True				
ANR	1404278	IdentifierDecl	h		1404270	0					
ANR	1404279	IdentifierDeclType	HANDLE		1404270	0					
ANR	1404280	Identifier	h		1404270	1					
ANR	1404281	IdentifierDeclStatement	char * ev_msgs [ 2 ] ;	44:1:1999:2015	1404270	2	True				
ANR	1404282	IdentifierDecl	* ev_msgs [ 2 ]		1404270	0					
ANR	1404283	IdentifierDeclType	char * [ 2 ]		1404270	0					
ANR	1404284	Identifier	ev_msgs		1404270	1					
ANR	1404285	PrimaryExpression	2		1404270	2					
ANR	1404286	ExpressionStatement	"FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPTSTR ) & lpMsgBuf , 0 , NULL )"	46:1:2019:2249	1404270	3	True				
ANR	1404287	CallExpression	"FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPTSTR ) & lpMsgBuf , 0 , NULL )"		1404270	0					
ANR	1404288	Callee	FormatMessage		1404270	0					
ANR	1404289	Identifier	FormatMessage		1404270	0					
ANR	1404290	ArgumentList	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		1404270	1					
ANR	1404291	Argument	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		1404270	0					
ANR	1404292	InclusiveOrExpression	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		1404270	0		|			
ANR	1404293	Identifier	FORMAT_MESSAGE_ALLOCATE_BUFFER		1404270	0					
ANR	1404294	InclusiveOrExpression	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		1404270	1		|			
ANR	1404295	Identifier	FORMAT_MESSAGE_FROM_SYSTEM		1404270	0					
ANR	1404296	Identifier	FORMAT_MESSAGE_IGNORE_INSERTS		1404270	1					
ANR	1404297	Argument	NULL		1404270	1					
ANR	1404298	Identifier	NULL		1404270	0					
ANR	1404299	Argument	err		1404270	2					
ANR	1404300	Identifier	err		1404270	0					
ANR	1404301	Argument	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		1404270	3					
ANR	1404302	CallExpression	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		1404270	0					
ANR	1404303	Callee	MAKELANGID		1404270	0					
ANR	1404304	Identifier	MAKELANGID		1404270	0					
ANR	1404305	ArgumentList	LANG_NEUTRAL		1404270	1					
ANR	1404306	Argument	LANG_NEUTRAL		1404270	0					
ANR	1404307	Identifier	LANG_NEUTRAL		1404270	0					
ANR	1404308	Argument	SUBLANG_DEFAULT		1404270	1					
ANR	1404309	Identifier	SUBLANG_DEFAULT		1404270	0					
ANR	1404310	Argument	( LPTSTR ) & lpMsgBuf		1404270	4					
ANR	1404311	CastExpression	( LPTSTR ) & lpMsgBuf		1404270	0					
ANR	1404312	CastTarget	LPTSTR		1404270	0					
ANR	1404313	UnaryOperationExpression	& lpMsgBuf		1404270	1					
ANR	1404314	UnaryOperator	&		1404270	0					
ANR	1404315	Identifier	lpMsgBuf		1404270	1					
ANR	1404316	Argument	0		1404270	5					
ANR	1404317	PrimaryExpression	0		1404270	0					
ANR	1404318	Argument	NULL		1404270	6					
ANR	1404319	Identifier	NULL		1404270	0					
ANR	1404320	ExpressionStatement	"h = RegisterEventSource ( NULL , TEXT ( ACCEL_EVENT_SOURCE ) )"	58:1:2253:2308	1404270	4	True				
ANR	1404321	AssignmentExpression	"h = RegisterEventSource ( NULL , TEXT ( ACCEL_EVENT_SOURCE ) )"		1404270	0		=			
ANR	1404322	Identifier	h		1404270	0					
ANR	1404323	CallExpression	"RegisterEventSource ( NULL , TEXT ( ACCEL_EVENT_SOURCE ) )"		1404270	1					
ANR	1404324	Callee	RegisterEventSource		1404270	0					
ANR	1404325	Identifier	RegisterEventSource		1404270	0					
ANR	1404326	ArgumentList	NULL		1404270	1					
ANR	1404327	Argument	NULL		1404270	0					
ANR	1404328	Identifier	NULL		1404270	0					
ANR	1404329	Argument	TEXT ( ACCEL_EVENT_SOURCE )		1404270	1					
ANR	1404330	CallExpression	TEXT ( ACCEL_EVENT_SOURCE )		1404270	0					
ANR	1404331	Callee	TEXT		1404270	0					
ANR	1404332	Identifier	TEXT		1404270	0					
ANR	1404333	ArgumentList	ACCEL_EVENT_SOURCE		1404270	1					
ANR	1404334	Argument	ACCEL_EVENT_SOURCE		1404270	0					
ANR	1404335	Identifier	ACCEL_EVENT_SOURCE		1404270	0					
ANR	1404336	ExpressionStatement	ev_msgs [ 0 ] = msg	59:1:2311:2327	1404270	5	True				
ANR	1404337	AssignmentExpression	ev_msgs [ 0 ] = msg		1404270	0		=			
ANR	1404338	ArrayIndexing	ev_msgs [ 0 ]		1404270	0					
ANR	1404339	Identifier	ev_msgs		1404270	0					
ANR	1404340	PrimaryExpression	0		1404270	1					
ANR	1404341	Identifier	msg		1404270	1					
ANR	1404342	ExpressionStatement	ev_msgs [ 1 ] = lpMsgBuf	60:1:2330:2351	1404270	6	True				
ANR	1404343	AssignmentExpression	ev_msgs [ 1 ] = lpMsgBuf		1404270	0		=			
ANR	1404344	ArrayIndexing	ev_msgs [ 1 ]		1404270	0					
ANR	1404345	Identifier	ev_msgs		1404270	0					
ANR	1404346	PrimaryExpression	1		1404270	1					
ANR	1404347	Identifier	lpMsgBuf		1404270	1					
ANR	1404348	ExpressionStatement	"ReportEvent ( h , EVENTLOG_ERROR_TYPE , 0 , err , NULL , 2 , 0 , ev_msgs , NULL )"	61:1:2354:2784	1404270	7	True				
ANR	1404349	CallExpression	"ReportEvent ( h , EVENTLOG_ERROR_TYPE , 0 , err , NULL , 2 , 0 , ev_msgs , NULL )"		1404270	0					
ANR	1404350	Callee	ReportEvent		1404270	0					
ANR	1404351	Identifier	ReportEvent		1404270	0					
ANR	1404352	ArgumentList	h		1404270	1					
ANR	1404353	Argument	h		1404270	0					
ANR	1404354	Identifier	h		1404270	0					
ANR	1404355	Argument	EVENTLOG_ERROR_TYPE		1404270	1					
ANR	1404356	Identifier	EVENTLOG_ERROR_TYPE		1404270	0					
ANR	1404357	Argument	0		1404270	2					
ANR	1404358	PrimaryExpression	0		1404270	0					
ANR	1404359	Argument	err		1404270	3					
ANR	1404360	Identifier	err		1404270	0					
ANR	1404361	Argument	NULL		1404270	4					
ANR	1404362	Identifier	NULL		1404270	0					
ANR	1404363	Argument	2		1404270	5					
ANR	1404364	PrimaryExpression	2		1404270	0					
ANR	1404365	Argument	0		1404270	6					
ANR	1404366	PrimaryExpression	0		1404270	0					
ANR	1404367	Argument	ev_msgs		1404270	7					
ANR	1404368	Identifier	ev_msgs		1404270	0					
ANR	1404369	Argument	NULL		1404270	8					
ANR	1404370	Identifier	NULL		1404270	0					
ANR	1404371	ExpressionStatement	DeregisterEventSource ( h )	70:1:2821:2845	1404270	8	True				
ANR	1404372	CallExpression	DeregisterEventSource ( h )		1404270	0					
ANR	1404373	Callee	DeregisterEventSource		1404270	0					
ANR	1404374	Identifier	DeregisterEventSource		1404270	0					
ANR	1404375	ArgumentList	h		1404270	1					
ANR	1404376	Argument	h		1404270	0					
ANR	1404377	Identifier	h		1404270	0					
ANR	1404378	ExpressionStatement	LocalFree ( lpMsgBuf )	72:1:2849:2870	1404270	9	True				
ANR	1404379	CallExpression	LocalFree ( lpMsgBuf )		1404270	0					
ANR	1404380	Callee	LocalFree		1404270	0					
ANR	1404381	Identifier	LocalFree		1404270	0					
ANR	1404382	ArgumentList	lpMsgBuf		1404270	1					
ANR	1404383	Argument	lpMsgBuf		1404270	0					
ANR	1404384	Identifier	lpMsgBuf		1404270	0					
ANR	1404385	ExpressionStatement	"zend_accel_error ( type , msg )"	74:1:2874:2901	1404270	10	True				
ANR	1404386	CallExpression	"zend_accel_error ( type , msg )"		1404270	0					
ANR	1404387	Callee	zend_accel_error		1404270	0					
ANR	1404388	Identifier	zend_accel_error		1404270	0					
ANR	1404389	ArgumentList	type		1404270	1					
ANR	1404390	Argument	type		1404270	0					
ANR	1404391	Identifier	type		1404270	0					
ANR	1404392	Argument	msg		1404270	1					
ANR	1404393	Identifier	msg		1404270	0					
ANR	1404394	ReturnType	static void		1404270	1					
ANR	1404395	Identifier	zend_win_error_message		1404270	2					
ANR	1404396	ParameterList	"int type , char * msg , int err"		1404270	3					
ANR	1404397	Parameter	int type	40:35:1937:1944	1404270	0	True				
ANR	1404398	ParameterType	int		1404270	0					
ANR	1404399	Identifier	type		1404270	1					
ANR	1404400	Parameter	char * msg	40:45:1947:1955	1404270	1	True				
ANR	1404401	ParameterType	char *		1404270	0					
ANR	1404402	Identifier	msg		1404270	1					
ANR	1404403	Parameter	int err	40:56:1958:1964	1404270	2	True				
ANR	1404404	ParameterType	int		1404270	0					
ANR	1404405	Identifier	err		1404270	1					
ANR	1404406	CFGEntryNode	ENTRY		1404270		True				
ANR	1404407	CFGExitNode	EXIT		1404270		True				
ANR	1404408	Symbol	msg		1404270						
ANR	1404409	Symbol	RegisterEventSource		1404270						
ANR	1404410	Symbol	FORMAT_MESSAGE_ALLOCATE_BUFFER		1404270						
ANR	1404411	Symbol	NULL		1404270						
ANR	1404412	Symbol	FORMAT_MESSAGE_IGNORE_INSERTS		1404270						
ANR	1404413	Symbol	EVENTLOG_ERROR_TYPE		1404270						
ANR	1404414	Symbol	err		1404270						
ANR	1404415	Symbol	LANG_NEUTRAL		1404270						
ANR	1404416	Symbol	& lpMsgBuf		1404270						
ANR	1404417	Symbol	h		1404270						
ANR	1404418	Symbol	TEXT		1404270						
ANR	1404419	Symbol	type		1404270						
ANR	1404420	Symbol	ACCEL_EVENT_SOURCE		1404270						
ANR	1404421	Symbol	MAKELANGID		1404270						
ANR	1404422	Symbol	lpMsgBuf		1404270						
ANR	1404423	Symbol	* ev_msgs		1404270						
ANR	1404424	Symbol	SUBLANG_DEFAULT		1404270						
ANR	1404425	Symbol	FORMAT_MESSAGE_FROM_SYSTEM		1404270						
ANR	1404426	Symbol	ev_msgs		1404270						
ANR	1404427	Function	create_name_with_username	77:0:2906:3194							
ANR	1404428	FunctionDef	create_name_with_username (char * name)		1404427	0					
ANR	1404429	CompoundStatement		78:0:2957:3194	1404427	0					
ANR	1404430	Statement	static	79:1:2960:2965	1404427	0	True				
ANR	1404431	IdentifierDeclStatement	char newname [ MAXPATHLEN + UNLEN + 4 + 1 + 32 ] ;	79:8:2967:3012	1404427	1	True				
ANR	1404432	IdentifierDecl	newname [ MAXPATHLEN + UNLEN + 4 + 1 + 32 ]		1404427	0					
ANR	1404433	IdentifierDeclType	char [ MAXPATHLEN + UNLEN + 4 + 1 + 32 ]		1404427	0					
ANR	1404434	Identifier	newname		1404427	1					
ANR	1404435	AdditiveExpression	MAXPATHLEN + UNLEN + 4 + 1 + 32		1404427	2		+			
ANR	1404436	Identifier	MAXPATHLEN		1404427	0					
ANR	1404437	AdditiveExpression	UNLEN + 4 + 1 + 32		1404427	1		+			
ANR	1404438	Identifier	UNLEN		1404427	0					
ANR	1404439	AdditiveExpression	4 + 1 + 32		1404427	1		+			
ANR	1404440	PrimaryExpression	4		1404427	0					
ANR	1404441	AdditiveExpression	1 + 32		1404427	1		+			
ANR	1404442	PrimaryExpression	1		1404427	0					
ANR	1404443	PrimaryExpression	32		1404427	1					
ANR	1404444	IdentifierDeclStatement	char uname [ UNLEN + 1 ] ;	80:1:3015:3036	1404427	2	True				
ANR	1404445	IdentifierDecl	uname [ UNLEN + 1 ]		1404427	0					
ANR	1404446	IdentifierDeclType	char [ UNLEN + 1 ]		1404427	0					
ANR	1404447	Identifier	uname		1404427	1					
ANR	1404448	AdditiveExpression	UNLEN + 1		1404427	2		+			
ANR	1404449	Identifier	UNLEN		1404427	0					
ANR	1404450	PrimaryExpression	1		1404427	1					
ANR	1404451	IdentifierDeclStatement	DWORD unsize = UNLEN ;	81:1:3039:3059	1404427	3	True				
ANR	1404452	IdentifierDecl	unsize = UNLEN		1404427	0					
ANR	1404453	IdentifierDeclType	DWORD		1404427	0					
ANR	1404454	Identifier	unsize		1404427	1					
ANR	1404455	AssignmentExpression	unsize = UNLEN		1404427	2		=			
ANR	1404456	Identifier	UNLEN		1404427	0					
ANR	1404457	Identifier	UNLEN		1404427	1					
ANR	1404458	ExpressionStatement	"GetUserName ( uname , & unsize )"	83:1:3063:3090	1404427	4	True				
ANR	1404459	CallExpression	"GetUserName ( uname , & unsize )"		1404427	0					
ANR	1404460	Callee	GetUserName		1404427	0					
ANR	1404461	Identifier	GetUserName		1404427	0					
ANR	1404462	ArgumentList	uname		1404427	1					
ANR	1404463	Argument	uname		1404427	0					
ANR	1404464	Identifier	uname		1404427	0					
ANR	1404465	Argument	& unsize		1404427	1					
ANR	1404466	UnaryOperationExpression	& unsize		1404427	0					
ANR	1404467	UnaryOperator	&		1404427	0					
ANR	1404468	Identifier	unsize		1404427	1					
ANR	1404469	ExpressionStatement	"snprintf ( newname , sizeof ( newname ) - 1 , ""%s@%s@%.32s"" , name , uname , ZCG ( system_id ) )"	84:1:3093:3175	1404427	5	True				
ANR	1404470	CallExpression	"snprintf ( newname , sizeof ( newname ) - 1 , ""%s@%s@%.32s"" , name , uname , ZCG ( system_id ) )"		1404427	0					
ANR	1404471	Callee	snprintf		1404427	0					
ANR	1404472	Identifier	snprintf		1404427	0					
ANR	1404473	ArgumentList	newname		1404427	1					
ANR	1404474	Argument	newname		1404427	0					
ANR	1404475	Identifier	newname		1404427	0					
ANR	1404476	Argument	sizeof ( newname ) - 1		1404427	1					
ANR	1404477	AdditiveExpression	sizeof ( newname ) - 1		1404427	0		-			
ANR	1404478	SizeofExpression	sizeof ( newname )		1404427	0					
ANR	1404479	Sizeof	sizeof		1404427	0					
ANR	1404480	SizeofOperand	newname		1404427	1					
ANR	1404481	PrimaryExpression	1		1404427	1					
ANR	1404482	Argument	"""%s@%s@%.32s"""		1404427	2					
ANR	1404483	PrimaryExpression	"""%s@%s@%.32s"""		1404427	0					
ANR	1404484	Argument	name		1404427	3					
ANR	1404485	Identifier	name		1404427	0					
ANR	1404486	Argument	uname		1404427	4					
ANR	1404487	Identifier	uname		1404427	0					
ANR	1404488	Argument	ZCG ( system_id )		1404427	5					
ANR	1404489	CallExpression	ZCG ( system_id )		1404427	0					
ANR	1404490	Callee	ZCG		1404427	0					
ANR	1404491	Identifier	ZCG		1404427	0					
ANR	1404492	ArgumentList	system_id		1404427	1					
ANR	1404493	Argument	system_id		1404427	0					
ANR	1404494	Identifier	system_id		1404427	0					
ANR	1404495	ReturnStatement	return newname ;	85:1:3178:3192	1404427	6	True				
ANR	1404496	Identifier	newname		1404427	0					
ANR	1404497	ReturnType	static char *		1404427	1					
ANR	1404498	Identifier	create_name_with_username		1404427	2					
ANR	1404499	ParameterList	char * name		1404427	3					
ANR	1404500	Parameter	char * name	77:39:2945:2954	1404427	0	True				
ANR	1404501	ParameterType	char *		1404427	0					
ANR	1404502	Identifier	name		1404427	1					
ANR	1404503	CFGEntryNode	ENTRY		1404427		True				
ANR	1404504	CFGExitNode	EXIT		1404427		True				
ANR	1404505	Symbol	unsize		1404427						
ANR	1404506	Symbol	uname		1404427						
ANR	1404507	Symbol	system_id		1404427						
ANR	1404508	Symbol	name		1404427						
ANR	1404509	Symbol	& unsize		1404427						
ANR	1404510	Symbol	newname		1404427						
ANR	1404511	Symbol	UNLEN		1404427						
ANR	1404512	Symbol	ZCG		1404427						
ANR	1404513	Function	get_mmap_base_file	88:0:3197:3571							
ANR	1404514	FunctionDef	get_mmap_base_file ()		1404513	0					
ANR	1404515	CompoundStatement		89:0:3235:3571	1404513	0					
ANR	1404516	Statement	static	90:1:3238:3243	1404513	0	True				
ANR	1404517	IdentifierDeclStatement	"char windir [ MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32 ] ;"	90:8:3245:3305	1404513	1	True				
ANR	1404518	IdentifierDecl	"windir [ MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32 ]"		1404513	0					
ANR	1404519	IdentifierDeclType	"char [ MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32 ]"		1404513	0					
ANR	1404520	Identifier	windir		1404513	1					
ANR	1404521	AdditiveExpression	"MAXPATHLEN + UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		1404513	2		+			
ANR	1404522	Identifier	MAXPATHLEN		1404513	0					
ANR	1404523	AdditiveExpression	"UNLEN + 3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		1404513	1		+			
ANR	1404524	Identifier	UNLEN		1404513	0					
ANR	1404525	AdditiveExpression	"3 + sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		1404513	1		+			
ANR	1404526	PrimaryExpression	3		1404513	0					
ANR	1404527	AdditiveExpression	"sizeof ( ""\\\\\\\\@"" ) + 1 + 32"		1404513	1		+			
ANR	1404528	SizeofExpression	"sizeof ( ""\\\\\\\\@"" )"		1404513	0					
ANR	1404529	Sizeof	sizeof		1404513	0					
ANR	1404530	PrimaryExpression	"""\\\\\\\\@"""		1404513	1					
ANR	1404531	AdditiveExpression	1 + 32		1404513	1		+			
ANR	1404532	PrimaryExpression	1		1404513	0					
ANR	1404533	PrimaryExpression	32		1404513	1					
ANR	1404534	IdentifierDeclStatement	char uname [ UNLEN + 1 ] ;	91:1:3308:3329	1404513	2	True				
ANR	1404535	IdentifierDecl	uname [ UNLEN + 1 ]		1404513	0					
ANR	1404536	IdentifierDeclType	char [ UNLEN + 1 ]		1404513	0					
ANR	1404537	Identifier	uname		1404513	1					
ANR	1404538	AdditiveExpression	UNLEN + 1		1404513	2		+			
ANR	1404539	Identifier	UNLEN		1404513	0					
ANR	1404540	PrimaryExpression	1		1404513	1					
ANR	1404541	IdentifierDeclStatement	DWORD unsize = UNLEN ;	92:1:3332:3352	1404513	3	True				
ANR	1404542	IdentifierDecl	unsize = UNLEN		1404513	0					
ANR	1404543	IdentifierDeclType	DWORD		1404513	0					
ANR	1404544	Identifier	unsize		1404513	1					
ANR	1404545	AssignmentExpression	unsize = UNLEN		1404513	2		=			
ANR	1404546	Identifier	UNLEN		1404513	0					
ANR	1404547	Identifier	UNLEN		1404513	1					
ANR	1404548	IdentifierDeclStatement	int l ;	93:1:3355:3360	1404513	4	True				
ANR	1404549	IdentifierDecl	l		1404513	0					
ANR	1404550	IdentifierDeclType	int		1404513	0					
ANR	1404551	Identifier	l		1404513	1					
ANR	1404552	ExpressionStatement	"GetTempPath ( MAXPATHLEN , windir )"	95:1:3364:3395	1404513	5	True				
ANR	1404553	CallExpression	"GetTempPath ( MAXPATHLEN , windir )"		1404513	0					
ANR	1404554	Callee	GetTempPath		1404513	0					
ANR	1404555	Identifier	GetTempPath		1404513	0					
ANR	1404556	ArgumentList	MAXPATHLEN		1404513	1					
ANR	1404557	Argument	MAXPATHLEN		1404513	0					
ANR	1404558	Identifier	MAXPATHLEN		1404513	0					
ANR	1404559	Argument	windir		1404513	1					
ANR	1404560	Identifier	windir		1404513	0					
ANR	1404561	ExpressionStatement	"GetUserName ( uname , & unsize )"	96:1:3398:3425	1404513	6	True				
ANR	1404562	CallExpression	"GetUserName ( uname , & unsize )"		1404513	0					
ANR	1404563	Callee	GetUserName		1404513	0					
ANR	1404564	Identifier	GetUserName		1404513	0					
ANR	1404565	ArgumentList	uname		1404513	1					
ANR	1404566	Argument	uname		1404513	0					
ANR	1404567	Identifier	uname		1404513	0					
ANR	1404568	Argument	& unsize		1404513	1					
ANR	1404569	UnaryOperationExpression	& unsize		1404513	0					
ANR	1404570	UnaryOperator	&		1404513	0					
ANR	1404571	Identifier	unsize		1404513	1					
ANR	1404572	ExpressionStatement	l = strlen ( windir )	97:1:3428:3446	1404513	7	True				
ANR	1404573	AssignmentExpression	l = strlen ( windir )		1404513	0		=			
ANR	1404574	Identifier	l		1404513	0					
ANR	1404575	CallExpression	strlen ( windir )		1404513	1					
ANR	1404576	Callee	strlen		1404513	0					
ANR	1404577	Identifier	strlen		1404513	0					
ANR	1404578	ArgumentList	windir		1404513	1					
ANR	1404579	Argument	windir		1404513	0					
ANR	1404580	Identifier	windir		1404513	0					
ANR	1404581	ExpressionStatement	"snprintf ( windir + l , sizeof ( windir ) - l - 1 , ""\\\\%s@%s@%.32s"" , ACCEL_FILEMAP_BASE , uname , ZCG ( system_id ) )"	98:1:3449:3553	1404513	8	True				
ANR	1404582	CallExpression	"snprintf ( windir + l , sizeof ( windir ) - l - 1 , ""\\\\%s@%s@%.32s"" , ACCEL_FILEMAP_BASE , uname , ZCG ( system_id ) )"		1404513	0					
ANR	1404583	Callee	snprintf		1404513	0					
ANR	1404584	Identifier	snprintf		1404513	0					
ANR	1404585	ArgumentList	windir + l		1404513	1					
ANR	1404586	Argument	windir + l		1404513	0					
ANR	1404587	AdditiveExpression	windir + l		1404513	0		+			
ANR	1404588	Identifier	windir		1404513	0					
ANR	1404589	Identifier	l		1404513	1					
ANR	1404590	Argument	sizeof ( windir ) - l - 1		1404513	1					
ANR	1404591	AdditiveExpression	sizeof ( windir ) - l - 1		1404513	0		-			
ANR	1404592	SizeofExpression	sizeof ( windir )		1404513	0					
ANR	1404593	Sizeof	sizeof		1404513	0					
ANR	1404594	SizeofOperand	windir		1404513	1					
ANR	1404595	AdditiveExpression	l - 1		1404513	1		-			
ANR	1404596	Identifier	l		1404513	0					
ANR	1404597	PrimaryExpression	1		1404513	1					
ANR	1404598	Argument	"""\\\\%s@%s@%.32s"""		1404513	2					
ANR	1404599	PrimaryExpression	"""\\\\%s@%s@%.32s"""		1404513	0					
ANR	1404600	Argument	ACCEL_FILEMAP_BASE		1404513	3					
ANR	1404601	Identifier	ACCEL_FILEMAP_BASE		1404513	0					
ANR	1404602	Argument	uname		1404513	4					
ANR	1404603	Identifier	uname		1404513	0					
ANR	1404604	Argument	ZCG ( system_id )		1404513	5					
ANR	1404605	CallExpression	ZCG ( system_id )		1404513	0					
ANR	1404606	Callee	ZCG		1404513	0					
ANR	1404607	Identifier	ZCG		1404513	0					
ANR	1404608	ArgumentList	system_id		1404513	1					
ANR	1404609	Argument	system_id		1404513	0					
ANR	1404610	Identifier	system_id		1404513	0					
ANR	1404611	ReturnStatement	return windir ;	99:1:3556:3569	1404513	9	True				
ANR	1404612	Identifier	windir		1404513	0					
ANR	1404613	ReturnType	static char *		1404513	1					
ANR	1404614	Identifier	get_mmap_base_file		1404513	2					
ANR	1404615	ParameterList			1404513	3					
ANR	1404616	CFGEntryNode	ENTRY		1404513		True				
ANR	1404617	CFGExitNode	EXIT		1404513		True				
ANR	1404618	Symbol	unsize		1404513						
ANR	1404619	Symbol	MAXPATHLEN		1404513						
ANR	1404620	Symbol	strlen		1404513						
ANR	1404621	Symbol	uname		1404513						
ANR	1404622	Symbol	system_id		1404513						
ANR	1404623	Symbol	ACCEL_FILEMAP_BASE		1404513						
ANR	1404624	Symbol	windir		1404513						
ANR	1404625	Symbol	& unsize		1404513						
ANR	1404626	Symbol	l		1404513						
ANR	1404627	Symbol	UNLEN		1404513						
ANR	1404628	Symbol	ZCG		1404513						
ANR	1404629	Function	zend_shared_alloc_create_lock	102:0:3574:3828							
ANR	1404630	FunctionDef	zend_shared_alloc_create_lock ()		1404629	0					
ANR	1404631	CompoundStatement		103:0:3615:3828	1404629	0					
ANR	1404632	ExpressionStatement	"memory_mutex = CreateMutex ( NULL , FALSE , create_name_with_username ( ACCEL_MUTEX_NAME ) )"	104:1:3618:3702	1404629	0	True				
ANR	1404633	AssignmentExpression	"memory_mutex = CreateMutex ( NULL , FALSE , create_name_with_username ( ACCEL_MUTEX_NAME ) )"		1404629	0		=			
ANR	1404634	Identifier	memory_mutex		1404629	0					
ANR	1404635	CallExpression	"CreateMutex ( NULL , FALSE , create_name_with_username ( ACCEL_MUTEX_NAME ) )"		1404629	1					
ANR	1404636	Callee	CreateMutex		1404629	0					
ANR	1404637	Identifier	CreateMutex		1404629	0					
ANR	1404638	ArgumentList	NULL		1404629	1					
ANR	1404639	Argument	NULL		1404629	0					
ANR	1404640	Identifier	NULL		1404629	0					
ANR	1404641	Argument	FALSE		1404629	1					
ANR	1404642	Identifier	FALSE		1404629	0					
ANR	1404643	Argument	create_name_with_username ( ACCEL_MUTEX_NAME )		1404629	2					
ANR	1404644	CallExpression	create_name_with_username ( ACCEL_MUTEX_NAME )		1404629	0					
ANR	1404645	Callee	create_name_with_username		1404629	0					
ANR	1404646	Identifier	create_name_with_username		1404629	0					
ANR	1404647	ArgumentList	ACCEL_MUTEX_NAME		1404629	1					
ANR	1404648	Argument	ACCEL_MUTEX_NAME		1404629	0					
ANR	1404649	Identifier	ACCEL_MUTEX_NAME		1404629	0					
ANR	1404650	IfStatement	if ( ! memory_mutex )		1404629	1					
ANR	1404651	Condition	! memory_mutex	105:5:3709:3721	1404629	0	True				
ANR	1404652	UnaryOperationExpression	! memory_mutex		1404629	0					
ANR	1404653	UnaryOperator	!		1404629	0					
ANR	1404654	Identifier	memory_mutex		1404629	1					
ANR	1404655	CompoundStatement		3:20:108:108	1404629	1					
ANR	1404656	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Cannot create mutex"" )"	106:2:3728:3784	1404629	0	True				
ANR	1404657	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Cannot create mutex"" )"		1404629	0					
ANR	1404658	Callee	zend_accel_error		1404629	0					
ANR	1404659	Identifier	zend_accel_error		1404629	0					
ANR	1404660	ArgumentList	ACCEL_LOG_FATAL		1404629	1					
ANR	1404661	Argument	ACCEL_LOG_FATAL		1404629	0					
ANR	1404662	Identifier	ACCEL_LOG_FATAL		1404629	0					
ANR	1404663	Argument	"""Cannot create mutex"""		1404629	1					
ANR	1404664	PrimaryExpression	"""Cannot create mutex"""		1404629	0					
ANR	1404665	ReturnStatement	return ;	107:2:3788:3794	1404629	1	True				
ANR	1404666	ExpressionStatement	ReleaseMutex ( memory_mutex )	109:1:3800:3826	1404629	2	True				
ANR	1404667	CallExpression	ReleaseMutex ( memory_mutex )		1404629	0					
ANR	1404668	Callee	ReleaseMutex		1404629	0					
ANR	1404669	Identifier	ReleaseMutex		1404629	0					
ANR	1404670	ArgumentList	memory_mutex		1404629	1					
ANR	1404671	Argument	memory_mutex		1404629	0					
ANR	1404672	Identifier	memory_mutex		1404629	0					
ANR	1404673	ReturnType	void		1404629	1					
ANR	1404674	Identifier	zend_shared_alloc_create_lock		1404629	2					
ANR	1404675	ParameterList			1404629	3					
ANR	1404676	CFGEntryNode	ENTRY		1404629		True				
ANR	1404677	CFGExitNode	EXIT		1404629		True				
ANR	1404678	Symbol	CreateMutex		1404629						
ANR	1404679	Symbol	NULL		1404629						
ANR	1404680	Symbol	ACCEL_LOG_FATAL		1404629						
ANR	1404681	Symbol	ACCEL_MUTEX_NAME		1404629						
ANR	1404682	Symbol	FALSE		1404629						
ANR	1404683	Symbol	memory_mutex		1404629						
ANR	1404684	Symbol	create_name_with_username		1404629						
ANR	1404685	Function	zend_shared_alloc_lock_win32	112:0:3831:4028							
ANR	1404686	FunctionDef	zend_shared_alloc_lock_win32 ()		1404685	0					
ANR	1404687	CompoundStatement		113:0:3871:4028	1404685	0					
ANR	1404688	IdentifierDeclStatement	"DWORD waitRes = WaitForSingleObject ( memory_mutex , INFINITE ) ;"	114:1:3874:3933	1404685	0	True				
ANR	1404689	IdentifierDecl	"waitRes = WaitForSingleObject ( memory_mutex , INFINITE )"		1404685	0					
ANR	1404690	IdentifierDeclType	DWORD		1404685	0					
ANR	1404691	Identifier	waitRes		1404685	1					
ANR	1404692	AssignmentExpression	"waitRes = WaitForSingleObject ( memory_mutex , INFINITE )"		1404685	2		=			
ANR	1404693	Identifier	waitRes		1404685	0					
ANR	1404694	CallExpression	"WaitForSingleObject ( memory_mutex , INFINITE )"		1404685	1					
ANR	1404695	Callee	WaitForSingleObject		1404685	0					
ANR	1404696	Identifier	WaitForSingleObject		1404685	0					
ANR	1404697	ArgumentList	memory_mutex		1404685	1					
ANR	1404698	Argument	memory_mutex		1404685	0					
ANR	1404699	Identifier	memory_mutex		1404685	0					
ANR	1404700	Argument	INFINITE		1404685	1					
ANR	1404701	Identifier	INFINITE		1404685	0					
ANR	1404702	IfStatement	if ( waitRes == WAIT_FAILED )		1404685	1					
ANR	1404703	Condition	waitRes == WAIT_FAILED	116:5:3941:3962	1404685	0	True				
ANR	1404704	EqualityExpression	waitRes == WAIT_FAILED		1404685	0		==			
ANR	1404705	Identifier	waitRes		1404685	0					
ANR	1404706	Identifier	WAIT_FAILED		1404685	1					
ANR	1404707	CompoundStatement		4:29:93:93	1404685	1					
ANR	1404708	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Cannot lock mutex"" )"	117:2:3969:4023	1404685	0	True				
ANR	1404709	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Cannot lock mutex"" )"		1404685	0					
ANR	1404710	Callee	zend_accel_error		1404685	0					
ANR	1404711	Identifier	zend_accel_error		1404685	0					
ANR	1404712	ArgumentList	ACCEL_LOG_ERROR		1404685	1					
ANR	1404713	Argument	ACCEL_LOG_ERROR		1404685	0					
ANR	1404714	Identifier	ACCEL_LOG_ERROR		1404685	0					
ANR	1404715	Argument	"""Cannot lock mutex"""		1404685	1					
ANR	1404716	PrimaryExpression	"""Cannot lock mutex"""		1404685	0					
ANR	1404717	ReturnType	void		1404685	1					
ANR	1404718	Identifier	zend_shared_alloc_lock_win32		1404685	2					
ANR	1404719	ParameterList			1404685	3					
ANR	1404720	CFGEntryNode	ENTRY		1404685		True				
ANR	1404721	CFGExitNode	EXIT		1404685		True				
ANR	1404722	Symbol	WaitForSingleObject		1404685						
ANR	1404723	Symbol	waitRes		1404685						
ANR	1404724	Symbol	WAIT_FAILED		1404685						
ANR	1404725	Symbol	memory_mutex		1404685						
ANR	1404726	Symbol	INFINITE		1404685						
ANR	1404727	Symbol	ACCEL_LOG_ERROR		1404685						
ANR	1404728	Function	zend_shared_alloc_unlock_win32	121:0:4031:4104							
ANR	1404729	FunctionDef	zend_shared_alloc_unlock_win32 ()		1404728	0					
ANR	1404730	CompoundStatement		122:0:4073:4104	1404728	0					
ANR	1404731	ExpressionStatement	ReleaseMutex ( memory_mutex )	123:1:4076:4102	1404728	0	True				
ANR	1404732	CallExpression	ReleaseMutex ( memory_mutex )		1404728	0					
ANR	1404733	Callee	ReleaseMutex		1404728	0					
ANR	1404734	Identifier	ReleaseMutex		1404728	0					
ANR	1404735	ArgumentList	memory_mutex		1404728	1					
ANR	1404736	Argument	memory_mutex		1404728	0					
ANR	1404737	Identifier	memory_mutex		1404728	0					
ANR	1404738	ReturnType	void		1404728	1					
ANR	1404739	Identifier	zend_shared_alloc_unlock_win32		1404728	2					
ANR	1404740	ParameterList			1404728	3					
ANR	1404741	CFGEntryNode	ENTRY		1404728		True				
ANR	1404742	CFGExitNode	EXIT		1404728		True				
ANR	1404743	Symbol	memory_mutex		1404728						
ANR	1404744	Function	zend_shared_alloc_reattach	126:0:4107:6848							
ANR	1404745	FunctionDef	"zend_shared_alloc_reattach (size_t requested_size , char * * error_in)"		1404744	0					
ANR	1404746	CompoundStatement		127:0:4185:6848	1404744	0					
ANR	1404747	IdentifierDeclStatement	int err ;	128:1:4188:4195	1404744	0	True				
ANR	1404748	IdentifierDecl	err		1404744	0					
ANR	1404749	IdentifierDeclType	int		1404744	0					
ANR	1404750	Identifier	err		1404744	1					
ANR	1404751	IdentifierDeclStatement	void * wanted_mapping_base ;	129:1:4198:4223	1404744	1	True				
ANR	1404752	IdentifierDecl	* wanted_mapping_base		1404744	0					
ANR	1404753	IdentifierDeclType	void *		1404744	0					
ANR	1404754	Identifier	wanted_mapping_base		1404744	1					
ANR	1404755	IdentifierDeclStatement	char * mmap_base_file = get_mmap_base_file ( ) ;	130:1:4226:4269	1404744	2	True				
ANR	1404756	IdentifierDecl	* mmap_base_file = get_mmap_base_file ( )		1404744	0					
ANR	1404757	IdentifierDeclType	char *		1404744	0					
ANR	1404758	Identifier	mmap_base_file		1404744	1					
ANR	1404759	AssignmentExpression	* mmap_base_file = get_mmap_base_file ( )		1404744	2		=			
ANR	1404760	Identifier	mmap_base_file		1404744	0					
ANR	1404761	CallExpression	get_mmap_base_file ( )		1404744	1					
ANR	1404762	Callee	get_mmap_base_file		1404744	0					
ANR	1404763	Identifier	get_mmap_base_file		1404744	0					
ANR	1404764	ArgumentList			1404744	1					
ANR	1404765	IdentifierDeclStatement	"FILE * fp = fopen ( mmap_base_file , ""r"" ) ;"	131:1:4272:4309	1404744	3	True				
ANR	1404766	IdentifierDecl	"* fp = fopen ( mmap_base_file , ""r"" )"		1404744	0					
ANR	1404767	IdentifierDeclType	FILE *		1404744	0					
ANR	1404768	Identifier	fp		1404744	1					
ANR	1404769	AssignmentExpression	"* fp = fopen ( mmap_base_file , ""r"" )"		1404744	2		=			
ANR	1404770	Identifier	fp		1404744	0					
ANR	1404771	CallExpression	"fopen ( mmap_base_file , ""r"" )"		1404744	1					
ANR	1404772	Callee	fopen		1404744	0					
ANR	1404773	Identifier	fopen		1404744	0					
ANR	1404774	ArgumentList	mmap_base_file		1404744	1					
ANR	1404775	Argument	mmap_base_file		1404744	0					
ANR	1404776	Identifier	mmap_base_file		1404744	0					
ANR	1404777	Argument	"""r"""		1404744	1					
ANR	1404778	PrimaryExpression	"""r"""		1404744	0					
ANR	1404779	IdentifierDeclStatement	MEMORY_BASIC_INFORMATION info ;	132:1:4312:4341	1404744	4	True				
ANR	1404780	IdentifierDecl	info		1404744	0					
ANR	1404781	IdentifierDeclType	MEMORY_BASIC_INFORMATION		1404744	0					
ANR	1404782	Identifier	info		1404744	1					
ANR	1404783	ExpressionStatement	err = GetLastError ( )	134:1:4345:4365	1404744	5	True				
ANR	1404784	AssignmentExpression	err = GetLastError ( )		1404744	0		=			
ANR	1404785	Identifier	err		1404744	0					
ANR	1404786	CallExpression	GetLastError ( )		1404744	1					
ANR	1404787	Callee	GetLastError		1404744	0					
ANR	1404788	Identifier	GetLastError		1404744	0					
ANR	1404789	ArgumentList			1404744	1					
ANR	1404790	IfStatement	if ( ! fp )		1404744	6					
ANR	1404791	Condition	! fp	135:5:4372:4374	1404744	0	True				
ANR	1404792	UnaryOperationExpression	! fp		1404744	0					
ANR	1404793	UnaryOperator	!		1404744	0					
ANR	1404794	Identifier	fp		1404744	1					
ANR	1404795	CompoundStatement		9:10:191:191	1404744	1					
ANR	1404796	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"	136:2:4381:4443	1404744	0	True				
ANR	1404797	CallExpression	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"		1404744	0					
ANR	1404798	Callee	zend_win_error_message		1404744	0					
ANR	1404799	Identifier	zend_win_error_message		1404744	0					
ANR	1404800	ArgumentList	ACCEL_LOG_WARNING		1404744	1					
ANR	1404801	Argument	ACCEL_LOG_WARNING		1404744	0					
ANR	1404802	Identifier	ACCEL_LOG_WARNING		1404744	0					
ANR	1404803	Argument	mmap_base_file		1404744	1					
ANR	1404804	Identifier	mmap_base_file		1404744	0					
ANR	1404805	Argument	err		1404744	2					
ANR	1404806	Identifier	err		1404744	0					
ANR	1404807	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open base address file"" , err )"	137:2:4447:4527	1404744	1	True				
ANR	1404808	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open base address file"" , err )"		1404744	0					
ANR	1404809	Callee	zend_win_error_message		1404744	0					
ANR	1404810	Identifier	zend_win_error_message		1404744	0					
ANR	1404811	ArgumentList	ACCEL_LOG_FATAL		1404744	1					
ANR	1404812	Argument	ACCEL_LOG_FATAL		1404744	0					
ANR	1404813	Identifier	ACCEL_LOG_FATAL		1404744	0					
ANR	1404814	Argument	"""Unable to open base address file"""		1404744	1					
ANR	1404815	PrimaryExpression	"""Unable to open base address file"""		1404744	0					
ANR	1404816	Argument	err		1404744	2					
ANR	1404817	Identifier	err		1404744	0					
ANR	1404818	ExpressionStatement	"* error_in = ""fopen"""	138:2:4531:4548	1404744	2	True				
ANR	1404819	AssignmentExpression	"* error_in = ""fopen"""		1404744	0		=			
ANR	1404820	UnaryOperationExpression	* error_in		1404744	0					
ANR	1404821	UnaryOperator	*		1404744	0					
ANR	1404822	Identifier	error_in		1404744	1					
ANR	1404823	PrimaryExpression	"""fopen"""		1404744	1					
ANR	1404824	ReturnStatement	return ALLOC_FAILURE ;	139:2:4552:4572	1404744	3	True				
ANR	1404825	Identifier	ALLOC_FAILURE		1404744	0					
ANR	1404826	IfStatement	"if ( ! fscanf ( fp , ""%p"" , & wanted_mapping_base ) )"		1404744	7					
ANR	1404827	Condition	"! fscanf ( fp , ""%p"" , & wanted_mapping_base )"	141:5:4582:4620	1404744	0	True				
ANR	1404828	UnaryOperationExpression	"! fscanf ( fp , ""%p"" , & wanted_mapping_base )"		1404744	0					
ANR	1404829	UnaryOperator	!		1404744	0					
ANR	1404830	CallExpression	"fscanf ( fp , ""%p"" , & wanted_mapping_base )"		1404744	1					
ANR	1404831	Callee	fscanf		1404744	0					
ANR	1404832	Identifier	fscanf		1404744	0					
ANR	1404833	ArgumentList	fp		1404744	1					
ANR	1404834	Argument	fp		1404744	0					
ANR	1404835	Identifier	fp		1404744	0					
ANR	1404836	Argument	"""%p"""		1404744	1					
ANR	1404837	PrimaryExpression	"""%p"""		1404744	0					
ANR	1404838	Argument	& wanted_mapping_base		1404744	2					
ANR	1404839	UnaryOperationExpression	& wanted_mapping_base		1404744	0					
ANR	1404840	UnaryOperator	&		1404744	0					
ANR	1404841	Identifier	wanted_mapping_base		1404744	1					
ANR	1404842	CompoundStatement		15:46:437:437	1404744	1					
ANR	1404843	ExpressionStatement	err = GetLastError ( )	142:2:4627:4647	1404744	0	True				
ANR	1404844	AssignmentExpression	err = GetLastError ( )		1404744	0		=			
ANR	1404845	Identifier	err		1404744	0					
ANR	1404846	CallExpression	GetLastError ( )		1404744	1					
ANR	1404847	Callee	GetLastError		1404744	0					
ANR	1404848	Identifier	GetLastError		1404744	0					
ANR	1404849	ArgumentList			1404744	1					
ANR	1404850	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to read base address"" , err )"	143:2:4651:4726	1404744	1	True				
ANR	1404851	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to read base address"" , err )"		1404744	0					
ANR	1404852	Callee	zend_win_error_message		1404744	0					
ANR	1404853	Identifier	zend_win_error_message		1404744	0					
ANR	1404854	ArgumentList	ACCEL_LOG_FATAL		1404744	1					
ANR	1404855	Argument	ACCEL_LOG_FATAL		1404744	0					
ANR	1404856	Identifier	ACCEL_LOG_FATAL		1404744	0					
ANR	1404857	Argument	"""Unable to read base address"""		1404744	1					
ANR	1404858	PrimaryExpression	"""Unable to read base address"""		1404744	0					
ANR	1404859	Argument	err		1404744	2					
ANR	1404860	Identifier	err		1404744	0					
ANR	1404861	ExpressionStatement	"* error_in = ""read mapping base"""	144:2:4730:4759	1404744	2	True				
ANR	1404862	AssignmentExpression	"* error_in = ""read mapping base"""		1404744	0		=			
ANR	1404863	UnaryOperationExpression	* error_in		1404744	0					
ANR	1404864	UnaryOperator	*		1404744	0					
ANR	1404865	Identifier	error_in		1404744	1					
ANR	1404866	PrimaryExpression	"""read mapping base"""		1404744	1					
ANR	1404867	ExpressionStatement	fclose ( fp )	145:2:4763:4773	1404744	3	True				
ANR	1404868	CallExpression	fclose ( fp )		1404744	0					
ANR	1404869	Callee	fclose		1404744	0					
ANR	1404870	Identifier	fclose		1404744	0					
ANR	1404871	ArgumentList	fp		1404744	1					
ANR	1404872	Argument	fp		1404744	0					
ANR	1404873	Identifier	fp		1404744	0					
ANR	1404874	ReturnStatement	return ALLOC_FAILURE ;	146:2:4777:4797	1404744	4	True				
ANR	1404875	Identifier	ALLOC_FAILURE		1404744	0					
ANR	1404876	ExpressionStatement	fclose ( fp )	148:1:4803:4813	1404744	8	True				
ANR	1404877	CallExpression	fclose ( fp )		1404744	0					
ANR	1404878	Callee	fclose		1404744	0					
ANR	1404879	Identifier	fclose		1404744	0					
ANR	1404880	ArgumentList	fp		1404744	1					
ANR	1404881	Argument	fp		1404744	0					
ANR	1404882	Identifier	fp		1404744	0					
ANR	1404883	IfStatement	"if ( VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0 || info . State != MEM_FREE || info . RegionSize < requested_size )"		1404744	9					
ANR	1404884	Condition	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0 || info . State != MEM_FREE || info . RegionSize < requested_size"	150:5:4872:5002	1404744	0	True				
ANR	1404885	OrExpression	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0 || info . State != MEM_FREE || info . RegionSize < requested_size"		1404744	0		||			
ANR	1404886	EqualityExpression	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) ) == 0"		1404744	0		==			
ANR	1404887	CallExpression	"VirtualQuery ( wanted_mapping_base , & info , sizeof ( info ) )"		1404744	0					
ANR	1404888	Callee	VirtualQuery		1404744	0					
ANR	1404889	Identifier	VirtualQuery		1404744	0					
ANR	1404890	ArgumentList	wanted_mapping_base		1404744	1					
ANR	1404891	Argument	wanted_mapping_base		1404744	0					
ANR	1404892	Identifier	wanted_mapping_base		1404744	0					
ANR	1404893	Argument	& info		1404744	1					
ANR	1404894	UnaryOperationExpression	& info		1404744	0					
ANR	1404895	UnaryOperator	&		1404744	0					
ANR	1404896	Identifier	info		1404744	1					
ANR	1404897	Argument	sizeof ( info )		1404744	2					
ANR	1404898	SizeofExpression	sizeof ( info )		1404744	0					
ANR	1404899	Sizeof	sizeof		1404744	0					
ANR	1404900	SizeofOperand	info		1404744	1					
ANR	1404901	PrimaryExpression	0		1404744	1					
ANR	1404902	OrExpression	info . State != MEM_FREE || info . RegionSize < requested_size		1404744	1		||			
ANR	1404903	EqualityExpression	info . State != MEM_FREE		1404744	0		!=			
ANR	1404904	MemberAccess	info . State		1404744	0					
ANR	1404905	Identifier	info		1404744	0					
ANR	1404906	Identifier	State		1404744	1					
ANR	1404907	Identifier	MEM_FREE		1404744	1					
ANR	1404908	RelationalExpression	info . RegionSize < requested_size		1404744	1		<			
ANR	1404909	MemberAccess	info . RegionSize		1404744	0					
ANR	1404910	Identifier	info		1404744	0					
ANR	1404911	Identifier	RegionSize		1404744	1					
ANR	1404912	Identifier	requested_size		1404744	1					
ANR	1404913	CompoundStatement		26:39:819:819	1404744	1					
ANR	1404914	IfStatement	if ( ZCG ( accel_directives ) . file_cache && ZCG ( accel_directives ) . file_cache_fallback )		1404744	0					
ANR	1404915	Condition	ZCG ( accel_directives ) . file_cache && ZCG ( accel_directives ) . file_cache_fallback	154:6:5044:5120	1404744	0	True				
ANR	1404916	AndExpression	ZCG ( accel_directives ) . file_cache && ZCG ( accel_directives ) . file_cache_fallback		1404744	0		&&			
ANR	1404917	MemberAccess	ZCG ( accel_directives ) . file_cache		1404744	0					
ANR	1404918	CallExpression	ZCG ( accel_directives )		1404744	0					
ANR	1404919	Callee	ZCG		1404744	0					
ANR	1404920	Identifier	ZCG		1404744	0					
ANR	1404921	ArgumentList	accel_directives		1404744	1					
ANR	1404922	Argument	accel_directives		1404744	0					
ANR	1404923	Identifier	accel_directives		1404744	0					
ANR	1404924	Identifier	file_cache		1404744	1					
ANR	1404925	MemberAccess	ZCG ( accel_directives ) . file_cache_fallback		1404744	1					
ANR	1404926	CallExpression	ZCG ( accel_directives )		1404744	0					
ANR	1404927	Callee	ZCG		1404744	0					
ANR	1404928	Identifier	ZCG		1404744	0					
ANR	1404929	ArgumentList	accel_directives		1404744	1					
ANR	1404930	Argument	accel_directives		1404744	0					
ANR	1404931	Identifier	accel_directives		1404744	0					
ANR	1404932	Identifier	file_cache_fallback		1404744	1					
ANR	1404933	CompoundStatement		29:3:942:973	1404744	1					
ANR	1404934	IdentifierDeclStatement	"size_t pre_size , wanted_mb_save ;"	155:3:5128:5159	1404744	0	True				
ANR	1404935	IdentifierDecl	pre_size		1404744	0					
ANR	1404936	IdentifierDeclType	size_t		1404744	0					
ANR	1404937	Identifier	pre_size		1404744	1					
ANR	1404938	IdentifierDecl	wanted_mb_save		1404744	1					
ANR	1404939	IdentifierDeclType	size_t		1404744	0					
ANR	1404940	Identifier	wanted_mb_save		1404744	1					
ANR	1404941	ExpressionStatement	wanted_mb_save = ( size_t ) wanted_mapping_base	157:3:5165:5209	1404744	1	True				
ANR	1404942	AssignmentExpression	wanted_mb_save = ( size_t ) wanted_mapping_base		1404744	0		=			
ANR	1404943	Identifier	wanted_mb_save		1404744	0					
ANR	1404944	CastExpression	( size_t ) wanted_mapping_base		1404744	1					
ANR	1404945	CastTarget	size_t		1404744	0					
ANR	1404946	Identifier	wanted_mapping_base		1404744	1					
ANR	1404947	ExpressionStatement	err = ERROR_INVALID_ADDRESS	159:3:5215:5242	1404744	2	True				
ANR	1404948	AssignmentExpression	err = ERROR_INVALID_ADDRESS		1404744	0		=			
ANR	1404949	Identifier	err		1404744	0					
ANR	1404950	Identifier	ERROR_INVALID_ADDRESS		1404744	1					
ANR	1404951	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_WARNING , ""Base address marks unusable memory region (fall-back to file cache)"" , err )"	160:3:5247:5364	1404744	3	True				
ANR	1404952	CallExpression	"zend_win_error_message ( ACCEL_LOG_WARNING , ""Base address marks unusable memory region (fall-back to file cache)"" , err )"		1404744	0					
ANR	1404953	Callee	zend_win_error_message		1404744	0					
ANR	1404954	Identifier	zend_win_error_message		1404744	0					
ANR	1404955	ArgumentList	ACCEL_LOG_WARNING		1404744	1					
ANR	1404956	Argument	ACCEL_LOG_WARNING		1404744	0					
ANR	1404957	Identifier	ACCEL_LOG_WARNING		1404744	0					
ANR	1404958	Argument	"""Base address marks unusable memory region (fall-back to file cache)"""		1404744	1					
ANR	1404959	PrimaryExpression	"""Base address marks unusable memory region (fall-back to file cache)"""		1404744	0					
ANR	1404960	Argument	err		1404744	2					
ANR	1404961	Identifier	err		1404744	0					
ANR	1404962	ExpressionStatement	pre_size = ZEND_ALIGNED_SIZE ( sizeof ( zend_smm_shared_globals ) ) + ZEND_ALIGNED_SIZE ( sizeof ( zend_shared_segment ) ) + ZEND_ALIGNED_SIZE ( sizeof ( void * ) ) + ZEND_ALIGNED_SIZE ( sizeof ( int ) )	162:3:5370:5549	1404744	4	True				
ANR	1404963	AssignmentExpression	pre_size = ZEND_ALIGNED_SIZE ( sizeof ( zend_smm_shared_globals ) ) + ZEND_ALIGNED_SIZE ( sizeof ( zend_shared_segment ) ) + ZEND_ALIGNED_SIZE ( sizeof ( void * ) ) + ZEND_ALIGNED_SIZE ( sizeof ( int ) )		1404744	0		=			
ANR	1404964	Identifier	pre_size		1404744	0					
ANR	1404965	AdditiveExpression	ZEND_ALIGNED_SIZE ( sizeof ( zend_smm_shared_globals ) ) + ZEND_ALIGNED_SIZE ( sizeof ( zend_shared_segment ) ) + ZEND_ALIGNED_SIZE ( sizeof ( void * ) ) + ZEND_ALIGNED_SIZE ( sizeof ( int ) )		1404744	1		+			
ANR	1404966	CallExpression	ZEND_ALIGNED_SIZE ( sizeof ( zend_smm_shared_globals ) )		1404744	0					
ANR	1404967	Callee	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404968	Identifier	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404969	ArgumentList	sizeof ( zend_smm_shared_globals )		1404744	1					
ANR	1404970	Argument	sizeof ( zend_smm_shared_globals )		1404744	0					
ANR	1404971	SizeofExpression	sizeof ( zend_smm_shared_globals )		1404744	0					
ANR	1404972	Sizeof	sizeof		1404744	0					
ANR	1404973	SizeofOperand	zend_smm_shared_globals		1404744	1					
ANR	1404974	AdditiveExpression	ZEND_ALIGNED_SIZE ( sizeof ( zend_shared_segment ) ) + ZEND_ALIGNED_SIZE ( sizeof ( void * ) ) + ZEND_ALIGNED_SIZE ( sizeof ( int ) )		1404744	1		+			
ANR	1404975	CallExpression	ZEND_ALIGNED_SIZE ( sizeof ( zend_shared_segment ) )		1404744	0					
ANR	1404976	Callee	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404977	Identifier	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404978	ArgumentList	sizeof ( zend_shared_segment )		1404744	1					
ANR	1404979	Argument	sizeof ( zend_shared_segment )		1404744	0					
ANR	1404980	SizeofExpression	sizeof ( zend_shared_segment )		1404744	0					
ANR	1404981	Sizeof	sizeof		1404744	0					
ANR	1404982	SizeofOperand	zend_shared_segment		1404744	1					
ANR	1404983	AdditiveExpression	ZEND_ALIGNED_SIZE ( sizeof ( void * ) ) + ZEND_ALIGNED_SIZE ( sizeof ( int ) )		1404744	1		+			
ANR	1404984	CallExpression	ZEND_ALIGNED_SIZE ( sizeof ( void * ) )		1404744	0					
ANR	1404985	Callee	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404986	Identifier	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404987	ArgumentList	sizeof ( void * )		1404744	1					
ANR	1404988	Argument	sizeof ( void * )		1404744	0					
ANR	1404989	SizeofExpression	sizeof ( void * )		1404744	0					
ANR	1404990	Sizeof	sizeof		1404744	0					
ANR	1404991	SizeofOperand	void *		1404744	1					
ANR	1404992	CallExpression	ZEND_ALIGNED_SIZE ( sizeof ( int ) )		1404744	1					
ANR	1404993	Callee	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404994	Identifier	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1404995	ArgumentList	sizeof ( int )		1404744	1					
ANR	1404996	Argument	sizeof ( int )		1404744	0					
ANR	1404997	SizeofExpression	sizeof ( int )		1404744	0					
ANR	1404998	Sizeof	sizeof		1404744	0					
ANR	1404999	SizeofOperand	int		1404744	1					
ANR	1405000	ExpressionStatement	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , pre_size + ZEND_ALIGNED_SIZE ( sizeof ( zend_accel_shared_globals ) ) , NULL )"	164:3:5622:5759	1404744	5	True				
ANR	1405001	AssignmentExpression	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , pre_size + ZEND_ALIGNED_SIZE ( sizeof ( zend_accel_shared_globals ) ) , NULL )"		1404744	0		=			
ANR	1405002	Identifier	mapping_base		1404744	0					
ANR	1405003	CallExpression	"MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , pre_size + ZEND_ALIGNED_SIZE ( sizeof ( zend_accel_shared_globals ) ) , NULL )"		1404744	1					
ANR	1405004	Callee	MapViewOfFileEx		1404744	0					
ANR	1405005	Identifier	MapViewOfFileEx		1404744	0					
ANR	1405006	ArgumentList	memfile		1404744	1					
ANR	1405007	Argument	memfile		1404744	0					
ANR	1405008	Identifier	memfile		1404744	0					
ANR	1405009	Argument	FILE_MAP_ALL_ACCESS		1404744	1					
ANR	1405010	Identifier	FILE_MAP_ALL_ACCESS		1404744	0					
ANR	1405011	Argument	0		1404744	2					
ANR	1405012	PrimaryExpression	0		1404744	0					
ANR	1405013	Argument	0		1404744	3					
ANR	1405014	PrimaryExpression	0		1404744	0					
ANR	1405015	Argument	pre_size + ZEND_ALIGNED_SIZE ( sizeof ( zend_accel_shared_globals ) )		1404744	4					
ANR	1405016	AdditiveExpression	pre_size + ZEND_ALIGNED_SIZE ( sizeof ( zend_accel_shared_globals ) )		1404744	0		+			
ANR	1405017	Identifier	pre_size		1404744	0					
ANR	1405018	CallExpression	ZEND_ALIGNED_SIZE ( sizeof ( zend_accel_shared_globals ) )		1404744	1					
ANR	1405019	Callee	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1405020	Identifier	ZEND_ALIGNED_SIZE		1404744	0					
ANR	1405021	ArgumentList	sizeof ( zend_accel_shared_globals )		1404744	1					
ANR	1405022	Argument	sizeof ( zend_accel_shared_globals )		1404744	0					
ANR	1405023	SizeofExpression	sizeof ( zend_accel_shared_globals )		1404744	0					
ANR	1405024	Sizeof	sizeof		1404744	0					
ANR	1405025	SizeofOperand	zend_accel_shared_globals		1404744	1					
ANR	1405026	Argument	NULL		1404744	5					
ANR	1405027	Identifier	NULL		1404744	0					
ANR	1405028	IfStatement	if ( mapping_base == NULL )		1404744	6					
ANR	1405029	Condition	mapping_base == NULL	165:7:5768:5787	1404744	0	True				
ANR	1405030	EqualityExpression	mapping_base == NULL		1404744	0		==			
ANR	1405031	Identifier	mapping_base		1404744	0					
ANR	1405032	Identifier	NULL		1404744	1					
ANR	1405033	CompoundStatement		39:29:1604:1604	1404744	1					
ANR	1405034	ExpressionStatement	err = GetLastError ( )	166:4:5796:5816	1404744	0	True				
ANR	1405035	AssignmentExpression	err = GetLastError ( )		1404744	0		=			
ANR	1405036	Identifier	err		1404744	0					
ANR	1405037	CallExpression	GetLastError ( )		1404744	1					
ANR	1405038	Callee	GetLastError		1404744	0					
ANR	1405039	Identifier	GetLastError		1404744	0					
ANR	1405040	ArgumentList			1404744	1					
ANR	1405041	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to opcache shared globals"" , err )"	167:4:5822:5914	1404744	1	True				
ANR	1405042	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to opcache shared globals"" , err )"		1404744	0					
ANR	1405043	Callee	zend_win_error_message		1404744	0					
ANR	1405044	Identifier	zend_win_error_message		1404744	0					
ANR	1405045	ArgumentList	ACCEL_LOG_FATAL		1404744	1					
ANR	1405046	Argument	ACCEL_LOG_FATAL		1404744	0					
ANR	1405047	Identifier	ACCEL_LOG_FATAL		1404744	0					
ANR	1405048	Argument	"""Unable to reattach to opcache shared globals"""		1404744	1					
ANR	1405049	PrimaryExpression	"""Unable to reattach to opcache shared globals"""		1404744	0					
ANR	1405050	Argument	err		1404744	2					
ANR	1405051	Identifier	err		1404744	0					
ANR	1405052	ReturnStatement	return ALLOC_FAILURE ;	168:4:5920:5940	1404744	2	True				
ANR	1405053	Identifier	ALLOC_FAILURE		1404744	0					
ANR	1405054	ExpressionStatement	accel_shared_globals = ( zend_accel_shared_globals * ) ( ( char * ) ( ( zend_smm_shared_globals * ) mapping_base ) -> app_shared_globals + ( ( char * ) mapping_base - ( char * ) wanted_mb_save ) )	170:3:5950:6123	1404744	7	True				
ANR	1405055	AssignmentExpression	accel_shared_globals = ( zend_accel_shared_globals * ) ( ( char * ) ( ( zend_smm_shared_globals * ) mapping_base ) -> app_shared_globals + ( ( char * ) mapping_base - ( char * ) wanted_mb_save ) )		1404744	0		=			
ANR	1405056	Identifier	accel_shared_globals		1404744	0					
ANR	1405057	CastExpression	( zend_accel_shared_globals * ) ( ( char * ) ( ( zend_smm_shared_globals * ) mapping_base ) -> app_shared_globals + ( ( char * ) mapping_base - ( char * ) wanted_mb_save ) )		1404744	1					
ANR	1405058	CastTarget	zend_accel_shared_globals *		1404744	0					
ANR	1405059	AdditiveExpression	( char * ) ( ( zend_smm_shared_globals * ) mapping_base ) -> app_shared_globals + ( ( char * ) mapping_base - ( char * ) wanted_mb_save )		1404744	1		+			
ANR	1405060	CastExpression	( char * ) ( ( zend_smm_shared_globals * ) mapping_base ) -> app_shared_globals		1404744	0					
ANR	1405061	CastTarget	char *		1404744	0					
ANR	1405062	PtrMemberAccess	( ( zend_smm_shared_globals * ) mapping_base ) -> app_shared_globals		1404744	1					
ANR	1405063	CastExpression	( zend_smm_shared_globals * ) mapping_base		1404744	0					
ANR	1405064	CastTarget	zend_smm_shared_globals *		1404744	0					
ANR	1405065	Identifier	mapping_base		1404744	1					
ANR	1405066	Identifier	app_shared_globals		1404744	1					
ANR	1405067	AdditiveExpression	( char * ) mapping_base - ( char * ) wanted_mb_save		1404744	1		-			
ANR	1405068	CastExpression	( char * ) mapping_base		1404744	0					
ANR	1405069	CastTarget	char *		1404744	0					
ANR	1405070	Identifier	mapping_base		1404744	1					
ANR	1405071	CastExpression	( char * ) wanted_mb_save		1404744	1					
ANR	1405072	CastTarget	char *		1404744	0					
ANR	1405073	Identifier	wanted_mb_save		1404744	1					
ANR	1405074	ExpressionStatement	ZCG ( accel_directives ) . file_cache_only = 1	173:3:6179:6220	1404744	8	True				
ANR	1405075	AssignmentExpression	ZCG ( accel_directives ) . file_cache_only = 1		1404744	0		=			
ANR	1405076	MemberAccess	ZCG ( accel_directives ) . file_cache_only		1404744	0					
ANR	1405077	CallExpression	ZCG ( accel_directives )		1404744	0					
ANR	1405078	Callee	ZCG		1404744	0					
ANR	1405079	Identifier	ZCG		1404744	0					
ANR	1405080	ArgumentList	accel_directives		1404744	1					
ANR	1405081	Argument	accel_directives		1404744	0					
ANR	1405082	Identifier	accel_directives		1404744	0					
ANR	1405083	Identifier	file_cache_only		1404744	1					
ANR	1405084	PrimaryExpression	1		1404744	1					
ANR	1405085	ReturnStatement	return ALLOC_FALLBACK ;	175:3:6226:6247	1404744	9	True				
ANR	1405086	Identifier	ALLOC_FALLBACK		1404744	0					
ANR	1405087	ExpressionStatement	err = ERROR_INVALID_ADDRESS	178:5:6265:6292	1404744	1	True				
ANR	1405088	AssignmentExpression	err = ERROR_INVALID_ADDRESS		1404744	0		=			
ANR	1405089	Identifier	err		1404744	0					
ANR	1405090	Identifier	ERROR_INVALID_ADDRESS		1404744	1					
ANR	1405091	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Base address marks unusable memory region"" , err )"	179:2:6296:6385	1404744	2	True				
ANR	1405092	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Base address marks unusable memory region"" , err )"		1404744	0					
ANR	1405093	Callee	zend_win_error_message		1404744	0					
ANR	1405094	Identifier	zend_win_error_message		1404744	0					
ANR	1405095	ArgumentList	ACCEL_LOG_FATAL		1404744	1					
ANR	1405096	Argument	ACCEL_LOG_FATAL		1404744	0					
ANR	1405097	Identifier	ACCEL_LOG_FATAL		1404744	0					
ANR	1405098	Argument	"""Base address marks unusable memory region"""		1404744	1					
ANR	1405099	PrimaryExpression	"""Base address marks unusable memory region"""		1404744	0					
ANR	1405100	Argument	err		1404744	2					
ANR	1405101	Identifier	err		1404744	0					
ANR	1405102	ReturnStatement	return ALLOC_FAILURE ;	180:2:6389:6409	1404744	3	True				
ANR	1405103	Identifier	ALLOC_FAILURE		1404744	0					
ANR	1405104	ExpressionStatement	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , wanted_mapping_base )"	183:1:6419:6509	1404744	10	True				
ANR	1405105	AssignmentExpression	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , wanted_mapping_base )"		1404744	0		=			
ANR	1405106	Identifier	mapping_base		1404744	0					
ANR	1405107	CallExpression	"MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , wanted_mapping_base )"		1404744	1					
ANR	1405108	Callee	MapViewOfFileEx		1404744	0					
ANR	1405109	Identifier	MapViewOfFileEx		1404744	0					
ANR	1405110	ArgumentList	memfile		1404744	1					
ANR	1405111	Argument	memfile		1404744	0					
ANR	1405112	Identifier	memfile		1404744	0					
ANR	1405113	Argument	FILE_MAP_ALL_ACCESS		1404744	1					
ANR	1405114	Identifier	FILE_MAP_ALL_ACCESS		1404744	0					
ANR	1405115	Argument	0		1404744	2					
ANR	1405116	PrimaryExpression	0		1404744	0					
ANR	1405117	Argument	0		1404744	3					
ANR	1405118	PrimaryExpression	0		1404744	0					
ANR	1405119	Argument	0		1404744	4					
ANR	1405120	PrimaryExpression	0		1404744	0					
ANR	1405121	Argument	wanted_mapping_base		1404744	5					
ANR	1405122	Identifier	wanted_mapping_base		1404744	0					
ANR	1405123	ExpressionStatement	err = GetLastError ( )	184:1:6512:6532	1404744	11	True				
ANR	1405124	AssignmentExpression	err = GetLastError ( )		1404744	0		=			
ANR	1405125	Identifier	err		1404744	0					
ANR	1405126	CallExpression	GetLastError ( )		1404744	1					
ANR	1405127	Callee	GetLastError		1404744	0					
ANR	1405128	Identifier	GetLastError		1404744	0					
ANR	1405129	ArgumentList			1404744	1					
ANR	1405130	IfStatement	if ( mapping_base == NULL )		1404744	12					
ANR	1405131	Condition	mapping_base == NULL	186:5:6540:6559	1404744	0	True				
ANR	1405132	EqualityExpression	mapping_base == NULL		1404744	0		==			
ANR	1405133	Identifier	mapping_base		1404744	0					
ANR	1405134	Identifier	NULL		1404744	1					
ANR	1405135	CompoundStatement		60:27:2376:2376	1404744	1					
ANR	1405136	IfStatement	if ( err == ERROR_INVALID_ADDRESS )		1404744	0					
ANR	1405137	Condition	err == ERROR_INVALID_ADDRESS	187:6:6570:6597	1404744	0	True				
ANR	1405138	EqualityExpression	err == ERROR_INVALID_ADDRESS		1404744	0		==			
ANR	1405139	Identifier	err		1404744	0					
ANR	1405140	Identifier	ERROR_INVALID_ADDRESS		1404744	1					
ANR	1405141	CompoundStatement		61:36:2414:2414	1404744	1					
ANR	1405142	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to base address"" , err )"	188:3:6605:6687	1404744	0	True				
ANR	1405143	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to reattach to base address"" , err )"		1404744	0					
ANR	1405144	Callee	zend_win_error_message		1404744	0					
ANR	1405145	Identifier	zend_win_error_message		1404744	0					
ANR	1405146	ArgumentList	ACCEL_LOG_FATAL		1404744	1					
ANR	1405147	Argument	ACCEL_LOG_FATAL		1404744	0					
ANR	1405148	Identifier	ACCEL_LOG_FATAL		1404744	0					
ANR	1405149	Argument	"""Unable to reattach to base address"""		1404744	1					
ANR	1405150	PrimaryExpression	"""Unable to reattach to base address"""		1404744	0					
ANR	1405151	Argument	err		1404744	2					
ANR	1405152	Identifier	err		1404744	0					
ANR	1405153	ReturnStatement	return ALLOC_FAILURE ;	189:3:6692:6712	1404744	1	True				
ANR	1405154	Identifier	ALLOC_FAILURE		1404744	0					
ANR	1405155	ReturnStatement	return ALLOC_FAIL_MAPPING ;	191:2:6720:6745	1404744	1	True				
ANR	1405156	Identifier	ALLOC_FAIL_MAPPING		1404744	0					
ANR	1405157	ExpressionStatement	smm_shared_globals = ( zend_smm_shared_globals * ) mapping_base	193:1:6751:6812	1404744	13	True				
ANR	1405158	AssignmentExpression	smm_shared_globals = ( zend_smm_shared_globals * ) mapping_base		1404744	0		=			
ANR	1405159	Identifier	smm_shared_globals		1404744	0					
ANR	1405160	CastExpression	( zend_smm_shared_globals * ) mapping_base		1404744	1					
ANR	1405161	CastTarget	zend_smm_shared_globals *		1404744	0					
ANR	1405162	Identifier	mapping_base		1404744	1					
ANR	1405163	ReturnStatement	return SUCCESSFULLY_REATTACHED ;	195:1:6816:6846	1404744	14	True				
ANR	1405164	Identifier	SUCCESSFULLY_REATTACHED		1404744	0					
ANR	1405165	ReturnType	static int		1404744	1					
ANR	1405166	Identifier	zend_shared_alloc_reattach		1404744	2					
ANR	1405167	ParameterList	"size_t requested_size , char * * error_in"		1404744	3					
ANR	1405168	Parameter	size_t requested_size	126:38:4145:4165	1404744	0	True				
ANR	1405169	ParameterType	size_t		1404744	0					
ANR	1405170	Identifier	requested_size		1404744	1					
ANR	1405171	Parameter	char * * error_in	126:61:4168:4182	1404744	1	True				
ANR	1405172	ParameterType	char * *		1404744	0					
ANR	1405173	Identifier	error_in		1404744	1					
ANR	1405174	CFGEntryNode	ENTRY		1404744		True				
ANR	1405175	CFGExitNode	EXIT		1404744		True				
ANR	1405176	Symbol	memfile		1404744						
ANR	1405177	Symbol	ACCEL_LOG_FATAL		1404744						
ANR	1405178	Symbol	wanted_mapping_base		1404744						
ANR	1405179	Symbol	pre_size		1404744						
ANR	1405180	Symbol	fp		1404744						
ANR	1405181	Symbol	error_in		1404744						
ANR	1405182	Symbol	get_mmap_base_file		1404744						
ANR	1405183	Symbol	* mapping_base		1404744						
ANR	1405184	Symbol	ALLOC_FAILURE		1404744						
ANR	1405185	Symbol	VirtualQuery		1404744						
ANR	1405186	Symbol	ACCEL_LOG_WARNING		1404744						
ANR	1405187	Symbol	ZEND_ALIGNED_SIZE		1404744						
ANR	1405188	Symbol	accel_shared_globals		1404744						
ANR	1405189	Symbol	FILE_MAP_ALL_ACCESS		1404744						
ANR	1405190	Symbol	& wanted_mapping_base		1404744						
ANR	1405191	Symbol	info		1404744						
ANR	1405192	Symbol	fopen		1404744						
ANR	1405193	Symbol	smm_shared_globals		1404744						
ANR	1405194	Symbol	MapViewOfFileEx		1404744						
ANR	1405195	Symbol	ALLOC_FAIL_MAPPING		1404744						
ANR	1405196	Symbol	* error_in		1404744						
ANR	1405197	Symbol	NULL		1404744						
ANR	1405198	Symbol	err		1404744						
ANR	1405199	Symbol	& info		1404744						
ANR	1405200	Symbol	ALLOC_FALLBACK		1404744						
ANR	1405201	Symbol	info . RegionSize		1404744						
ANR	1405202	Symbol	( ( zend_smm_shared_globals * ) mapping_base ) -> app_shared_globals		1404744						
ANR	1405203	Symbol	SUCCESSFULLY_REATTACHED		1404744						
ANR	1405204	Symbol	fscanf		1404744						
ANR	1405205	Symbol	mapping_base		1404744						
ANR	1405206	Symbol	info . State		1404744						
ANR	1405207	Symbol	mmap_base_file		1404744						
ANR	1405208	Symbol	GetLastError		1404744						
ANR	1405209	Symbol	ZCG ( accel_directives ) . file_cache_fallback		1404744						
ANR	1405210	Symbol	ERROR_INVALID_ADDRESS		1404744						
ANR	1405211	Symbol	wanted_mb_save		1404744						
ANR	1405212	Symbol	ZCG ( accel_directives ) . file_cache_only		1404744						
ANR	1405213	Symbol	requested_size		1404744						
ANR	1405214	Symbol	accel_directives		1404744						
ANR	1405215	Symbol	ZCG ( accel_directives ) . file_cache		1404744						
ANR	1405216	Symbol	MEM_FREE		1404744						
ANR	1405217	Symbol	ZCG		1404744						
ANR	1405218	Function	create_segments	198:0:6851:11744							
ANR	1405219	FunctionDef	"create_segments (size_t requested_size , zend_shared_segment * * * shared_segments_p , int * shared_segments_count , char * * error_in)"		1405218	0					
ANR	1405220	CompoundStatement		199:0:6988:11744	1405218	0					
ANR	1405221	IdentifierDeclStatement	"int err , ret ;"	200:1:6991:7003	1405218	0	True				
ANR	1405222	IdentifierDecl	err		1405218	0					
ANR	1405223	IdentifierDeclType	int		1405218	0					
ANR	1405224	Identifier	err		1405218	1					
ANR	1405225	IdentifierDecl	ret		1405218	1					
ANR	1405226	IdentifierDeclType	int		1405218	0					
ANR	1405227	Identifier	ret		1405218	1					
ANR	1405228	IdentifierDeclStatement	zend_shared_segment * shared_segment ;	201:1:7006:7041	1405218	1	True				
ANR	1405229	IdentifierDecl	* shared_segment		1405218	0					
ANR	1405230	IdentifierDeclType	zend_shared_segment *		1405218	0					
ANR	1405231	Identifier	shared_segment		1405218	1					
ANR	1405232	IdentifierDeclStatement	int map_retries = 0 ;	202:1:7044:7063	1405218	2	True				
ANR	1405233	IdentifierDecl	map_retries = 0		1405218	0					
ANR	1405234	IdentifierDeclType	int		1405218	0					
ANR	1405235	Identifier	map_retries		1405218	1					
ANR	1405236	AssignmentExpression	map_retries = 0		1405218	2		=			
ANR	1405237	Identifier	map_retries		1405218	0					
ANR	1405238	PrimaryExpression	0		1405218	1					
ANR	1405239	IdentifierDeclStatement	"void * default_mapping_base_set [ ] = { 0 , 0 } ;"	203:1:7066:7109	1405218	3	True				
ANR	1405240	IdentifierDecl	"* default_mapping_base_set [ ] = { 0 , 0 }"		1405218	0					
ANR	1405241	IdentifierDeclType	void * [ ]		1405218	0					
ANR	1405242	Identifier	default_mapping_base_set		1405218	1					
ANR	1405243	AssignmentExpression	"* default_mapping_base_set [ ] = { 0 , 0 }"		1405218	2		=			
ANR	1405244	Identifier	default_mapping_base_set		1405218	0					
ANR	1405245	InitializerList	0		1405218	1					
ANR	1405246	PrimaryExpression	0		1405218	0					
ANR	1405247	PrimaryExpression	0		1405218	1					
ANR	1405248	IdentifierDeclStatement	"void * vista_mapping_base_set [ ] = { ( void * ) 0x0000100000000000 , ( void * ) 0x0000200000000000 , ( void * ) 0x0000300000000000 , ( void * ) 0x0000700000000000 , 0 } ;"	210:1:7559:7713	1405218	4	True				
ANR	1405249	IdentifierDecl	"* vista_mapping_base_set [ ] = { ( void * ) 0x0000100000000000 , ( void * ) 0x0000200000000000 , ( void * ) 0x0000300000000000 , ( void * ) 0x0000700000000000 , 0 }"		1405218	0					
ANR	1405250	IdentifierDeclType	void * [ ]		1405218	0					
ANR	1405251	Identifier	vista_mapping_base_set		1405218	1					
ANR	1405252	AssignmentExpression	"* vista_mapping_base_set [ ] = { ( void * ) 0x0000100000000000 , ( void * ) 0x0000200000000000 , ( void * ) 0x0000300000000000 , ( void * ) 0x0000700000000000 , 0 }"		1405218	2		=			
ANR	1405253	Identifier	vista_mapping_base_set		1405218	0					
ANR	1405254	InitializerList	( void * ) 0x0000100000000000		1405218	1					
ANR	1405255	CastExpression	( void * ) 0x0000100000000000		1405218	0					
ANR	1405256	CastTarget	void *		1405218	0					
ANR	1405257	PrimaryExpression	0x0000100000000000		1405218	1					
ANR	1405258	CastExpression	( void * ) 0x0000200000000000		1405218	1					
ANR	1405259	CastTarget	void *		1405218	0					
ANR	1405260	PrimaryExpression	0x0000200000000000		1405218	1					
ANR	1405261	CastExpression	( void * ) 0x0000300000000000		1405218	2					
ANR	1405262	CastTarget	void *		1405218	0					
ANR	1405263	PrimaryExpression	0x0000300000000000		1405218	1					
ANR	1405264	CastExpression	( void * ) 0x0000700000000000		1405218	3					
ANR	1405265	CastTarget	void *		1405218	0					
ANR	1405266	PrimaryExpression	0x0000700000000000		1405218	1					
ANR	1405267	PrimaryExpression	0		1405218	4					
ANR	1405268	IdentifierDeclStatement	void * * wanted_mapping_base = default_mapping_base_set ;	214:1:7875:7928	1405218	5	True				
ANR	1405269	IdentifierDecl	* * wanted_mapping_base = default_mapping_base_set		1405218	0					
ANR	1405270	IdentifierDeclType	void * *		1405218	0					
ANR	1405271	Identifier	wanted_mapping_base		1405218	1					
ANR	1405272	AssignmentExpression	* * wanted_mapping_base = default_mapping_base_set		1405218	2		=			
ANR	1405273	Identifier	default_mapping_base_set		1405218	0					
ANR	1405274	Identifier	default_mapping_base_set		1405218	1					
ANR	1405275	ExpressionStatement	zend_shared_alloc_lock_win32 ( )	216:1:7932:7962	1405218	6	True				
ANR	1405276	CallExpression	zend_shared_alloc_lock_win32 ( )		1405218	0					
ANR	1405277	Callee	zend_shared_alloc_lock_win32		1405218	0					
ANR	1405278	Identifier	zend_shared_alloc_lock_win32		1405218	0					
ANR	1405279	ArgumentList			1405218	1					
ANR	1405280	DoStatement	do		1405218	7					
ANR	1405281	CompoundStatement		22:4:1238:1238	1405218	0					
ANR	1405282	ExpressionStatement	"memfile = OpenFileMapping ( FILE_MAP_WRITE , 0 , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"	221:2:8231:8322	1405218	0	True				
ANR	1405283	AssignmentExpression	"memfile = OpenFileMapping ( FILE_MAP_WRITE , 0 , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		1405218	0		=			
ANR	1405284	Identifier	memfile		1405218	0					
ANR	1405285	CallExpression	"OpenFileMapping ( FILE_MAP_WRITE , 0 , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		1405218	1					
ANR	1405286	Callee	OpenFileMapping		1405218	0					
ANR	1405287	Identifier	OpenFileMapping		1405218	0					
ANR	1405288	ArgumentList	FILE_MAP_WRITE		1405218	1					
ANR	1405289	Argument	FILE_MAP_WRITE		1405218	0					
ANR	1405290	Identifier	FILE_MAP_WRITE		1405218	0					
ANR	1405291	Argument	0		1405218	1					
ANR	1405292	PrimaryExpression	0		1405218	0					
ANR	1405293	Argument	create_name_with_username ( ACCEL_FILEMAP_NAME )		1405218	2					
ANR	1405294	CallExpression	create_name_with_username ( ACCEL_FILEMAP_NAME )		1405218	0					
ANR	1405295	Callee	create_name_with_username		1405218	0					
ANR	1405296	Identifier	create_name_with_username		1405218	0					
ANR	1405297	ArgumentList	ACCEL_FILEMAP_NAME		1405218	1					
ANR	1405298	Argument	ACCEL_FILEMAP_NAME		1405218	0					
ANR	1405299	Identifier	ACCEL_FILEMAP_NAME		1405218	0					
ANR	1405300	ExpressionStatement	err = GetLastError ( )	222:2:8326:8346	1405218	1	True				
ANR	1405301	AssignmentExpression	err = GetLastError ( )		1405218	0		=			
ANR	1405302	Identifier	err		1405218	0					
ANR	1405303	CallExpression	GetLastError ( )		1405218	1					
ANR	1405304	Callee	GetLastError		1405218	0					
ANR	1405305	Identifier	GetLastError		1405218	0					
ANR	1405306	ArgumentList			1405218	1					
ANR	1405307	IfStatement	if ( memfile == NULL )		1405218	2					
ANR	1405308	Condition	memfile == NULL	223:6:8354:8368	1405218	0	True				
ANR	1405309	EqualityExpression	memfile == NULL		1405218	0		==			
ANR	1405310	Identifier	memfile		1405218	0					
ANR	1405311	Identifier	NULL		1405218	1					
ANR	1405312	CompoundStatement		25:23:1382:1382	1405218	1					
ANR	1405313	BreakStatement	break ;	224:3:8376:8381	1405218	0	True				
ANR	1405314	ExpressionStatement	"ret = zend_shared_alloc_reattach ( requested_size , error_in )"	227:2:8390:8449	1405218	3	True				
ANR	1405315	AssignmentExpression	"ret = zend_shared_alloc_reattach ( requested_size , error_in )"		1405218	0		=			
ANR	1405316	Identifier	ret		1405218	0					
ANR	1405317	CallExpression	"zend_shared_alloc_reattach ( requested_size , error_in )"		1405218	1					
ANR	1405318	Callee	zend_shared_alloc_reattach		1405218	0					
ANR	1405319	Identifier	zend_shared_alloc_reattach		1405218	0					
ANR	1405320	ArgumentList	requested_size		1405218	1					
ANR	1405321	Argument	requested_size		1405218	0					
ANR	1405322	Identifier	requested_size		1405218	0					
ANR	1405323	Argument	error_in		1405218	1					
ANR	1405324	Identifier	error_in		1405218	0					
ANR	1405325	ExpressionStatement	err = GetLastError ( )	228:2:8453:8473	1405218	4	True				
ANR	1405326	AssignmentExpression	err = GetLastError ( )		1405218	0		=			
ANR	1405327	Identifier	err		1405218	0					
ANR	1405328	CallExpression	GetLastError ( )		1405218	1					
ANR	1405329	Callee	GetLastError		1405218	0					
ANR	1405330	Identifier	GetLastError		1405218	0					
ANR	1405331	ArgumentList			1405218	1					
ANR	1405332	IfStatement	if ( ret == ALLOC_FAIL_MAPPING )		1405218	5					
ANR	1405333	Condition	ret == ALLOC_FAIL_MAPPING	229:6:8481:8505	1405218	0	True				
ANR	1405334	EqualityExpression	ret == ALLOC_FAIL_MAPPING		1405218	0		==			
ANR	1405335	Identifier	ret		1405218	0					
ANR	1405336	Identifier	ALLOC_FAIL_MAPPING		1405218	1					
ANR	1405337	CompoundStatement		31:33:1519:1519	1405218	1					
ANR	1405338	ExpressionStatement	CloseHandle ( memfile )	231:3:8585:8605	1405218	0	True				
ANR	1405339	CallExpression	CloseHandle ( memfile )		1405218	0					
ANR	1405340	Callee	CloseHandle		1405218	0					
ANR	1405341	Identifier	CloseHandle		1405218	0					
ANR	1405342	ArgumentList	memfile		1405218	1					
ANR	1405343	Argument	memfile		1405218	0					
ANR	1405344	Identifier	memfile		1405218	0					
ANR	1405345	ExpressionStatement	memfile = NULL	232:3:8610:8624	1405218	1	True				
ANR	1405346	AssignmentExpression	memfile = NULL		1405218	0		=			
ANR	1405347	Identifier	memfile		1405218	0					
ANR	1405348	Identifier	NULL		1405218	1					
ANR	1405349	IfStatement	if ( ++ map_retries >= MAX_MAP_RETRIES )		1405218	2					
ANR	1405350	Condition	++ map_retries >= MAX_MAP_RETRIES	233:7:8633:8664	1405218	0	True				
ANR	1405351	RelationalExpression	++ map_retries >= MAX_MAP_RETRIES		1405218	0		>=			
ANR	1405352	UnaryExpression	++ map_retries		1405218	0					
ANR	1405353	IncDec	++		1405218	0					
ANR	1405354	Identifier	map_retries		1405218	1					
ANR	1405355	Identifier	MAX_MAP_RETRIES		1405218	1					
ANR	1405356	CompoundStatement		35:41:1678:1678	1405218	1					
ANR	1405357	BreakStatement	break ;	234:4:8673:8678	1405218	0	True				
ANR	1405358	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	236:3:8688:8720	1405218	3	True				
ANR	1405359	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405360	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405361	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405362	ArgumentList			1405218	1					
ANR	1405363	ExpressionStatement	Sleep ( 1000 * ( map_retries + 1 ) )	237:3:8725:8756	1405218	4	True				
ANR	1405364	CallExpression	Sleep ( 1000 * ( map_retries + 1 ) )		1405218	0					
ANR	1405365	Callee	Sleep		1405218	0					
ANR	1405366	Identifier	Sleep		1405218	0					
ANR	1405367	ArgumentList	1000 * ( map_retries + 1 )		1405218	1					
ANR	1405368	Argument	1000 * ( map_retries + 1 )		1405218	0					
ANR	1405369	MultiplicativeExpression	1000 * ( map_retries + 1 )		1405218	0		*			
ANR	1405370	PrimaryExpression	1000		1405218	0					
ANR	1405371	AdditiveExpression	map_retries + 1		1405218	1		+			
ANR	1405372	Identifier	map_retries		1405218	0					
ANR	1405373	PrimaryExpression	1		1405218	1					
ANR	1405374	ExpressionStatement	zend_shared_alloc_lock_win32 ( )	238:3:8761:8791	1405218	5	True				
ANR	1405375	CallExpression	zend_shared_alloc_lock_win32 ( )		1405218	0					
ANR	1405376	Callee	zend_shared_alloc_lock_win32		1405218	0					
ANR	1405377	Identifier	zend_shared_alloc_lock_win32		1405218	0					
ANR	1405378	ArgumentList			1405218	1					
ANR	1405379	ElseStatement	else		1405218	0					
ANR	1405380	CompoundStatement		41:9:1813:1813	1405218	0					
ANR	1405381	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	240:3:8807:8839	1405218	0	True				
ANR	1405382	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405383	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405384	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405385	ArgumentList			1405218	1					
ANR	1405386	ReturnStatement	return ret ;	241:3:8844:8854	1405218	1	True				
ANR	1405387	Identifier	ret		1405218	0					
ANR	1405388	Condition	1	243:10:8870:8870	1405218	1	True				
ANR	1405389	PrimaryExpression	1		1405218	0					
ANR	1405390	IfStatement	if ( map_retries == MAX_MAP_RETRIES )		1405218	8					
ANR	1405391	Condition	map_retries == MAX_MAP_RETRIES	245:5:8880:8909	1405218	0	True				
ANR	1405392	EqualityExpression	map_retries == MAX_MAP_RETRIES		1405218	0		==			
ANR	1405393	Identifier	map_retries		1405218	0					
ANR	1405394	Identifier	MAX_MAP_RETRIES		1405218	1					
ANR	1405395	CompoundStatement		47:37:1923:1923	1405218	1					
ANR	1405396	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	246:2:8916:8948	1405218	0	True				
ANR	1405397	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405398	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405399	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405400	ArgumentList			1405218	1					
ANR	1405401	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open file mapping"" , err )"	247:2:8952:9027	1405218	1	True				
ANR	1405402	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to open file mapping"" , err )"		1405218	0					
ANR	1405403	Callee	zend_win_error_message		1405218	0					
ANR	1405404	Identifier	zend_win_error_message		1405218	0					
ANR	1405405	ArgumentList	ACCEL_LOG_FATAL		1405218	1					
ANR	1405406	Argument	ACCEL_LOG_FATAL		1405218	0					
ANR	1405407	Identifier	ACCEL_LOG_FATAL		1405218	0					
ANR	1405408	Argument	"""Unable to open file mapping"""		1405218	1					
ANR	1405409	PrimaryExpression	"""Unable to open file mapping"""		1405218	0					
ANR	1405410	Argument	err		1405218	2					
ANR	1405411	Identifier	err		1405218	0					
ANR	1405412	ExpressionStatement	"* error_in = ""OpenFileMapping"""	248:2:9031:9060	1405218	2	True				
ANR	1405413	AssignmentExpression	"* error_in = ""OpenFileMapping"""		1405218	0		=			
ANR	1405414	UnaryOperationExpression	* error_in		1405218	0					
ANR	1405415	UnaryOperator	*		1405218	0					
ANR	1405416	Identifier	error_in		1405218	1					
ANR	1405417	PrimaryExpression	"""OpenFileMapping"""		1405218	1					
ANR	1405418	ReturnStatement	return ALLOC_FAILURE ;	249:2:9064:9084	1405218	3	True				
ANR	1405419	Identifier	ALLOC_FAILURE		1405218	0					
ANR	1405420	ExpressionStatement	* shared_segments_count = 1	253:1:9120:9146	1405218	9	True				
ANR	1405421	AssignmentExpression	* shared_segments_count = 1		1405218	0		=			
ANR	1405422	UnaryOperationExpression	* shared_segments_count		1405218	0					
ANR	1405423	UnaryOperator	*		1405218	0					
ANR	1405424	Identifier	shared_segments_count		1405218	1					
ANR	1405425	PrimaryExpression	1		1405218	1					
ANR	1405426	ExpressionStatement	"* shared_segments_p = ( zend_shared_segment * * ) calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"	254:1:9149:9248	1405218	10	True				
ANR	1405427	AssignmentExpression	"* shared_segments_p = ( zend_shared_segment * * ) calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"		1405218	0		=			
ANR	1405428	UnaryOperationExpression	* shared_segments_p		1405218	0					
ANR	1405429	UnaryOperator	*		1405218	0					
ANR	1405430	Identifier	shared_segments_p		1405218	1					
ANR	1405431	CastExpression	"( zend_shared_segment * * ) calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"		1405218	1					
ANR	1405432	CastTarget	zend_shared_segment * *		1405218	0					
ANR	1405433	CallExpression	"calloc ( 1 , sizeof ( zend_shared_segment ) + sizeof ( void * ) )"		1405218	1					
ANR	1405434	Callee	calloc		1405218	0					
ANR	1405435	Identifier	calloc		1405218	0					
ANR	1405436	ArgumentList	1		1405218	1					
ANR	1405437	Argument	1		1405218	0					
ANR	1405438	PrimaryExpression	1		1405218	0					
ANR	1405439	Argument	sizeof ( zend_shared_segment ) + sizeof ( void * )		1405218	1					
ANR	1405440	AdditiveExpression	sizeof ( zend_shared_segment ) + sizeof ( void * )		1405218	0		+			
ANR	1405441	SizeofExpression	sizeof ( zend_shared_segment )		1405218	0					
ANR	1405442	Sizeof	sizeof		1405218	0					
ANR	1405443	SizeofOperand	zend_shared_segment		1405218	1					
ANR	1405444	SizeofExpression	sizeof ( void * )		1405218	1					
ANR	1405445	Sizeof	sizeof		1405218	0					
ANR	1405446	SizeofOperand	void *		1405218	1					
ANR	1405447	IfStatement	if ( ! * shared_segments_p )		1405218	11					
ANR	1405448	Condition	! * shared_segments_p	255:5:9255:9273	1405218	0	True				
ANR	1405449	UnaryOperationExpression	! * shared_segments_p		1405218	0					
ANR	1405450	UnaryOperator	!		1405218	0					
ANR	1405451	UnaryOperationExpression	* shared_segments_p		1405218	1					
ANR	1405452	UnaryOperator	*		1405218	0					
ANR	1405453	Identifier	shared_segments_p		1405218	1					
ANR	1405454	CompoundStatement		57:26:2287:2287	1405218	1					
ANR	1405455	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	256:2:9280:9312	1405218	0	True				
ANR	1405456	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405457	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405458	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405459	ArgumentList			1405218	1					
ANR	1405460	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""calloc() failed"" , GetLastError ( ) )"	257:2:9316:9390	1405218	1	True				
ANR	1405461	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""calloc() failed"" , GetLastError ( ) )"		1405218	0					
ANR	1405462	Callee	zend_win_error_message		1405218	0					
ANR	1405463	Identifier	zend_win_error_message		1405218	0					
ANR	1405464	ArgumentList	ACCEL_LOG_FATAL		1405218	1					
ANR	1405465	Argument	ACCEL_LOG_FATAL		1405218	0					
ANR	1405466	Identifier	ACCEL_LOG_FATAL		1405218	0					
ANR	1405467	Argument	"""calloc() failed"""		1405218	1					
ANR	1405468	PrimaryExpression	"""calloc() failed"""		1405218	0					
ANR	1405469	Argument	GetLastError ( )		1405218	2					
ANR	1405470	CallExpression	GetLastError ( )		1405218	0					
ANR	1405471	Callee	GetLastError		1405218	0					
ANR	1405472	Identifier	GetLastError		1405218	0					
ANR	1405473	ArgumentList			1405218	1					
ANR	1405474	ExpressionStatement	"* error_in = ""calloc"""	258:2:9394:9414	1405218	2	True				
ANR	1405475	AssignmentExpression	"* error_in = ""calloc"""		1405218	0		=			
ANR	1405476	UnaryOperationExpression	* error_in		1405218	0					
ANR	1405477	UnaryOperator	*		1405218	0					
ANR	1405478	Identifier	error_in		1405218	1					
ANR	1405479	PrimaryExpression	"""calloc"""		1405218	1					
ANR	1405480	ReturnStatement	return ALLOC_FAILURE ;	259:2:9418:9438	1405218	3	True				
ANR	1405481	Identifier	ALLOC_FAILURE		1405218	0					
ANR	1405482	ExpressionStatement	shared_segment = ( zend_shared_segment * ) ( ( char * ) ( * shared_segments_p ) + sizeof ( void * ) )	261:1:9444:9531	1405218	12	True				
ANR	1405483	AssignmentExpression	shared_segment = ( zend_shared_segment * ) ( ( char * ) ( * shared_segments_p ) + sizeof ( void * ) )		1405218	0		=			
ANR	1405484	Identifier	shared_segment		1405218	0					
ANR	1405485	CastExpression	( zend_shared_segment * ) ( ( char * ) ( * shared_segments_p ) + sizeof ( void * ) )		1405218	1					
ANR	1405486	CastTarget	zend_shared_segment *		1405218	0					
ANR	1405487	AdditiveExpression	( char * ) ( * shared_segments_p ) + sizeof ( void * )		1405218	1		+			
ANR	1405488	CastExpression	( char * ) ( * shared_segments_p )		1405218	0					
ANR	1405489	CastTarget	char *		1405218	0					
ANR	1405490	UnaryOperationExpression	* shared_segments_p		1405218	1					
ANR	1405491	UnaryOperator	*		1405218	0					
ANR	1405492	Identifier	shared_segments_p		1405218	1					
ANR	1405493	SizeofExpression	sizeof ( void * )		1405218	1					
ANR	1405494	Sizeof	sizeof		1405218	0					
ANR	1405495	SizeofOperand	void *		1405218	1					
ANR	1405496	ExpressionStatement	( * shared_segments_p ) [ 0 ] = shared_segment	262:1:9534:9574	1405218	13	True				
ANR	1405497	AssignmentExpression	( * shared_segments_p ) [ 0 ] = shared_segment		1405218	0		=			
ANR	1405498	ArrayIndexing	( * shared_segments_p ) [ 0 ]		1405218	0					
ANR	1405499	UnaryOperationExpression	* shared_segments_p		1405218	0					
ANR	1405500	UnaryOperator	*		1405218	0					
ANR	1405501	Identifier	shared_segments_p		1405218	1					
ANR	1405502	PrimaryExpression	0		1405218	1					
ANR	1405503	Identifier	shared_segment		1405218	1					
ANR	1405504	ExpressionStatement	"memfile = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , requested_size , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"	264:1:9578:9723	1405218	14	True				
ANR	1405505	AssignmentExpression	"memfile = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , requested_size , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		1405218	0		=			
ANR	1405506	Identifier	memfile		1405218	0					
ANR	1405507	CallExpression	"CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , requested_size , create_name_with_username ( ACCEL_FILEMAP_NAME ) )"		1405218	1					
ANR	1405508	Callee	CreateFileMapping		1405218	0					
ANR	1405509	Identifier	CreateFileMapping		1405218	0					
ANR	1405510	ArgumentList	INVALID_HANDLE_VALUE		1405218	1					
ANR	1405511	Argument	INVALID_HANDLE_VALUE		1405218	0					
ANR	1405512	Identifier	INVALID_HANDLE_VALUE		1405218	0					
ANR	1405513	Argument	NULL		1405218	1					
ANR	1405514	Identifier	NULL		1405218	0					
ANR	1405515	Argument	PAGE_READWRITE		1405218	2					
ANR	1405516	Identifier	PAGE_READWRITE		1405218	0					
ANR	1405517	Argument	0		1405218	3					
ANR	1405518	PrimaryExpression	0		1405218	0					
ANR	1405519	Argument	requested_size		1405218	4					
ANR	1405520	Identifier	requested_size		1405218	0					
ANR	1405521	Argument	create_name_with_username ( ACCEL_FILEMAP_NAME )		1405218	5					
ANR	1405522	CallExpression	create_name_with_username ( ACCEL_FILEMAP_NAME )		1405218	0					
ANR	1405523	Callee	create_name_with_username		1405218	0					
ANR	1405524	Identifier	create_name_with_username		1405218	0					
ANR	1405525	ArgumentList	ACCEL_FILEMAP_NAME		1405218	1					
ANR	1405526	Argument	ACCEL_FILEMAP_NAME		1405218	0					
ANR	1405527	Identifier	ACCEL_FILEMAP_NAME		1405218	0					
ANR	1405528	ExpressionStatement	err = GetLastError ( )	266:1:9726:9746	1405218	15	True				
ANR	1405529	AssignmentExpression	err = GetLastError ( )		1405218	0		=			
ANR	1405530	Identifier	err		1405218	0					
ANR	1405531	CallExpression	GetLastError ( )		1405218	1					
ANR	1405532	Callee	GetLastError		1405218	0					
ANR	1405533	Identifier	GetLastError		1405218	0					
ANR	1405534	ArgumentList			1405218	1					
ANR	1405535	IfStatement	if ( memfile == NULL )		1405218	16					
ANR	1405536	Condition	memfile == NULL	267:5:9753:9767	1405218	0	True				
ANR	1405537	EqualityExpression	memfile == NULL		1405218	0		==			
ANR	1405538	Identifier	memfile		1405218	0					
ANR	1405539	Identifier	NULL		1405218	1					
ANR	1405540	CompoundStatement		69:22:2781:2781	1405218	1					
ANR	1405541	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	268:2:9774:9806	1405218	0	True				
ANR	1405542	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405543	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405544	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405545	ArgumentList			1405218	1					
ANR	1405546	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create file mapping"" , err )"	269:2:9810:9887	1405218	1	True				
ANR	1405547	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create file mapping"" , err )"		1405218	0					
ANR	1405548	Callee	zend_win_error_message		1405218	0					
ANR	1405549	Identifier	zend_win_error_message		1405218	0					
ANR	1405550	ArgumentList	ACCEL_LOG_FATAL		1405218	1					
ANR	1405551	Argument	ACCEL_LOG_FATAL		1405218	0					
ANR	1405552	Identifier	ACCEL_LOG_FATAL		1405218	0					
ANR	1405553	Argument	"""Unable to create file mapping"""		1405218	1					
ANR	1405554	PrimaryExpression	"""Unable to create file mapping"""		1405218	0					
ANR	1405555	Argument	err		1405218	2					
ANR	1405556	Identifier	err		1405218	0					
ANR	1405557	ExpressionStatement	"* error_in = ""CreateFileMapping"""	270:2:9891:9922	1405218	2	True				
ANR	1405558	AssignmentExpression	"* error_in = ""CreateFileMapping"""		1405218	0		=			
ANR	1405559	UnaryOperationExpression	* error_in		1405218	0					
ANR	1405560	UnaryOperator	*		1405218	0					
ANR	1405561	Identifier	error_in		1405218	1					
ANR	1405562	PrimaryExpression	"""CreateFileMapping"""		1405218	1					
ANR	1405563	ReturnStatement	return ALLOC_FAILURE ;	271:2:9926:9946	1405218	3	True				
ANR	1405564	Identifier	ALLOC_FAILURE		1405218	0					
ANR	1405565	IfStatement	if ( ! ZCG ( accel_directives ) . mmap_base || ! * ZCG ( accel_directives ) . mmap_base )		1405218	17					
ANR	1405566	Condition	! ZCG ( accel_directives ) . mmap_base || ! * ZCG ( accel_directives ) . mmap_base	277:5:10174:10242	1405218	0	True				
ANR	1405567	OrExpression	! ZCG ( accel_directives ) . mmap_base || ! * ZCG ( accel_directives ) . mmap_base		1405218	0		||			
ANR	1405568	UnaryOperationExpression	! ZCG ( accel_directives ) . mmap_base		1405218	0					
ANR	1405569	UnaryOperator	!		1405218	0					
ANR	1405570	MemberAccess	ZCG ( accel_directives ) . mmap_base		1405218	1					
ANR	1405571	CallExpression	ZCG ( accel_directives )		1405218	0					
ANR	1405572	Callee	ZCG		1405218	0					
ANR	1405573	Identifier	ZCG		1405218	0					
ANR	1405574	ArgumentList	accel_directives		1405218	1					
ANR	1405575	Argument	accel_directives		1405218	0					
ANR	1405576	Identifier	accel_directives		1405218	0					
ANR	1405577	Identifier	mmap_base		1405218	1					
ANR	1405578	UnaryOperationExpression	! * ZCG ( accel_directives ) . mmap_base		1405218	1					
ANR	1405579	UnaryOperator	!		1405218	0					
ANR	1405580	UnaryOperationExpression	* ZCG ( accel_directives ) . mmap_base		1405218	1					
ANR	1405581	UnaryOperator	*		1405218	0					
ANR	1405582	MemberAccess	ZCG ( accel_directives ) . mmap_base		1405218	1					
ANR	1405583	CallExpression	ZCG ( accel_directives )		1405218	0					
ANR	1405584	Callee	ZCG		1405218	0					
ANR	1405585	Identifier	ZCG		1405218	0					
ANR	1405586	ArgumentList	accel_directives		1405218	1					
ANR	1405587	Argument	accel_directives		1405218	0					
ANR	1405588	Identifier	accel_directives		1405218	0					
ANR	1405589	Identifier	mmap_base		1405218	1					
ANR	1405590	CompoundStatement		79:76:3256:3256	1405218	1					
ANR	1405591	ExpressionStatement	wanted_mapping_base = vista_mapping_base_set	278:2:10249:10293	1405218	0	True				
ANR	1405592	AssignmentExpression	wanted_mapping_base = vista_mapping_base_set		1405218	0		=			
ANR	1405593	Identifier	wanted_mapping_base		1405218	0					
ANR	1405594	Identifier	vista_mapping_base_set		1405218	1					
ANR	1405595	ElseStatement	else		1405218	0					
ANR	1405596	CompoundStatement		82:2:3318:3359	1405218	0					
ANR	1405597	IdentifierDeclStatement	char * s = ZCG ( accel_directives ) . mmap_base ;	280:2:10307:10348	1405218	0	True				
ANR	1405598	IdentifierDecl	* s = ZCG ( accel_directives ) . mmap_base		1405218	0					
ANR	1405599	IdentifierDeclType	char *		1405218	0					
ANR	1405600	Identifier	s		1405218	1					
ANR	1405601	AssignmentExpression	* s = ZCG ( accel_directives ) . mmap_base		1405218	2		=			
ANR	1405602	Identifier	s		1405218	0					
ANR	1405603	MemberAccess	ZCG ( accel_directives ) . mmap_base		1405218	1					
ANR	1405604	CallExpression	ZCG ( accel_directives )		1405218	0					
ANR	1405605	Callee	ZCG		1405218	0					
ANR	1405606	Identifier	ZCG		1405218	0					
ANR	1405607	ArgumentList	accel_directives		1405218	1					
ANR	1405608	Argument	accel_directives		1405218	0					
ANR	1405609	Identifier	accel_directives		1405218	0					
ANR	1405610	Identifier	mmap_base		1405218	1					
ANR	1405611	IfStatement	if ( * s == '0' && * ( s + 1 ) == 'x' )		1405218	1					
ANR	1405612	Condition	* s == '0' && * ( s + 1 ) == 'x'	283:6:10418:10445	1405218	0	True				
ANR	1405613	AndExpression	* s == '0' && * ( s + 1 ) == 'x'		1405218	0		&&			
ANR	1405614	EqualityExpression	* s == '0'		1405218	0		==			
ANR	1405615	UnaryOperationExpression	* s		1405218	0					
ANR	1405616	UnaryOperator	*		1405218	0					
ANR	1405617	Identifier	s		1405218	1					
ANR	1405618	PrimaryExpression	'0'		1405218	1					
ANR	1405619	EqualityExpression	* ( s + 1 ) == 'x'		1405218	1		==			
ANR	1405620	UnaryOperationExpression	* ( s + 1 )		1405218	0					
ANR	1405621	UnaryOperator	*		1405218	0					
ANR	1405622	AdditiveExpression	s + 1		1405218	1		+			
ANR	1405623	Identifier	s		1405218	0					
ANR	1405624	PrimaryExpression	1		1405218	1					
ANR	1405625	PrimaryExpression	'x'		1405218	1					
ANR	1405626	CompoundStatement		85:36:3459:3459	1405218	1					
ANR	1405627	ExpressionStatement	s += 2	284:3:10453:10459	1405218	0	True				
ANR	1405628	AssignmentExpression	s += 2		1405218	0		+=			
ANR	1405629	Identifier	s		1405218	0					
ANR	1405630	PrimaryExpression	2		1405218	1					
ANR	1405631	IfStatement	"if ( sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] ) != 1 )"		1405218	2					
ANR	1405632	Condition	"sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] ) != 1"	286:6:10471:10520	1405218	0	True				
ANR	1405633	EqualityExpression	"sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] ) != 1"		1405218	0		!=			
ANR	1405634	CallExpression	"sscanf ( s , ""%p"" , & default_mapping_base_set [ 0 ] )"		1405218	0					
ANR	1405635	Callee	sscanf		1405218	0					
ANR	1405636	Identifier	sscanf		1405218	0					
ANR	1405637	ArgumentList	s		1405218	1					
ANR	1405638	Argument	s		1405218	0					
ANR	1405639	Identifier	s		1405218	0					
ANR	1405640	Argument	"""%p"""		1405218	1					
ANR	1405641	PrimaryExpression	"""%p"""		1405218	0					
ANR	1405642	Argument	& default_mapping_base_set [ 0 ]		1405218	2					
ANR	1405643	UnaryOperationExpression	& default_mapping_base_set [ 0 ]		1405218	0					
ANR	1405644	UnaryOperator	&		1405218	0					
ANR	1405645	ArrayIndexing	default_mapping_base_set [ 0 ]		1405218	1					
ANR	1405646	Identifier	default_mapping_base_set		1405218	0					
ANR	1405647	PrimaryExpression	0		1405218	1					
ANR	1405648	PrimaryExpression	1		1405218	1					
ANR	1405649	CompoundStatement		88:58:3534:3534	1405218	1					
ANR	1405650	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	287:3:10528:10560	1405218	0	True				
ANR	1405651	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405652	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405653	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405654	ArgumentList			1405218	1					
ANR	1405655	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Bad mapping address specified in opcache.mmap_base"" , err )"	288:3:10565:10663	1405218	1	True				
ANR	1405656	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Bad mapping address specified in opcache.mmap_base"" , err )"		1405218	0					
ANR	1405657	Callee	zend_win_error_message		1405218	0					
ANR	1405658	Identifier	zend_win_error_message		1405218	0					
ANR	1405659	ArgumentList	ACCEL_LOG_FATAL		1405218	1					
ANR	1405660	Argument	ACCEL_LOG_FATAL		1405218	0					
ANR	1405661	Identifier	ACCEL_LOG_FATAL		1405218	0					
ANR	1405662	Argument	"""Bad mapping address specified in opcache.mmap_base"""		1405218	1					
ANR	1405663	PrimaryExpression	"""Bad mapping address specified in opcache.mmap_base"""		1405218	0					
ANR	1405664	Argument	err		1405218	2					
ANR	1405665	Identifier	err		1405218	0					
ANR	1405666	ReturnStatement	return ALLOC_FAILURE ;	289:3:10668:10688	1405218	2	True				
ANR	1405667	Identifier	ALLOC_FAILURE		1405218	0					
ANR	1405668	DoStatement	do		1405218	18					
ANR	1405669	CompoundStatement		95:4:3713:3713	1405218	0					
ANR	1405670	ExpressionStatement	"shared_segment -> p = mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"	294:2:10706:10817	1405218	0	True				
ANR	1405671	AssignmentExpression	"shared_segment -> p = mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"		1405218	0		=			
ANR	1405672	PtrMemberAccess	shared_segment -> p		1405218	0					
ANR	1405673	Identifier	shared_segment		1405218	0					
ANR	1405674	Identifier	p		1405218	1					
ANR	1405675	AssignmentExpression	"mapping_base = MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"		1405218	1		=			
ANR	1405676	Identifier	mapping_base		1405218	0					
ANR	1405677	CallExpression	"MapViewOfFileEx ( memfile , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , * wanted_mapping_base )"		1405218	1					
ANR	1405678	Callee	MapViewOfFileEx		1405218	0					
ANR	1405679	Identifier	MapViewOfFileEx		1405218	0					
ANR	1405680	ArgumentList	memfile		1405218	1					
ANR	1405681	Argument	memfile		1405218	0					
ANR	1405682	Identifier	memfile		1405218	0					
ANR	1405683	Argument	FILE_MAP_ALL_ACCESS		1405218	1					
ANR	1405684	Identifier	FILE_MAP_ALL_ACCESS		1405218	0					
ANR	1405685	Argument	0		1405218	2					
ANR	1405686	PrimaryExpression	0		1405218	0					
ANR	1405687	Argument	0		1405218	3					
ANR	1405688	PrimaryExpression	0		1405218	0					
ANR	1405689	Argument	0		1405218	4					
ANR	1405690	PrimaryExpression	0		1405218	0					
ANR	1405691	Argument	* wanted_mapping_base		1405218	5					
ANR	1405692	UnaryOperationExpression	* wanted_mapping_base		1405218	0					
ANR	1405693	UnaryOperator	*		1405218	0					
ANR	1405694	Identifier	wanted_mapping_base		1405218	1					
ANR	1405695	IfStatement	if ( * wanted_mapping_base == NULL )		1405218	1					
ANR	1405696	Condition	* wanted_mapping_base == NULL	295:6:10825:10852	1405218	0	True				
ANR	1405697	EqualityExpression	* wanted_mapping_base == NULL		1405218	0		==			
ANR	1405698	UnaryOperationExpression	* wanted_mapping_base		1405218	0					
ANR	1405699	UnaryOperator	*		1405218	0					
ANR	1405700	Identifier	wanted_mapping_base		1405218	1					
ANR	1405701	Identifier	NULL		1405218	1					
ANR	1405702	CompoundStatement		97:36:3866:3866	1405218	1					
ANR	1405703	BreakStatement	break ;	296:3:10918:10923	1405218	0	True				
ANR	1405704	ExpressionStatement	wanted_mapping_base ++	298:2:10931:10952	1405218	2	True				
ANR	1405705	PostIncDecOperationExpression	wanted_mapping_base ++		1405218	0					
ANR	1405706	Identifier	wanted_mapping_base		1405218	0					
ANR	1405707	IncDec	++		1405218	1					
ANR	1405708	Condition	! mapping_base	299:10:10964:10976	1405218	1	True				
ANR	1405709	UnaryOperationExpression	! mapping_base		1405218	0					
ANR	1405710	UnaryOperator	!		1405218	0					
ANR	1405711	Identifier	mapping_base		1405218	1					
ANR	1405712	ExpressionStatement	err = GetLastError ( )	301:1:10982:11002	1405218	19	True				
ANR	1405713	AssignmentExpression	err = GetLastError ( )		1405218	0		=			
ANR	1405714	Identifier	err		1405218	0					
ANR	1405715	CallExpression	GetLastError ( )		1405218	1					
ANR	1405716	Callee	GetLastError		1405218	0					
ANR	1405717	Identifier	GetLastError		1405218	0					
ANR	1405718	ArgumentList			1405218	1					
ANR	1405719	IfStatement	if ( mapping_base == NULL )		1405218	20					
ANR	1405720	Condition	mapping_base == NULL	302:5:11009:11028	1405218	0	True				
ANR	1405721	EqualityExpression	mapping_base == NULL		1405218	0		==			
ANR	1405722	Identifier	mapping_base		1405218	0					
ANR	1405723	Identifier	NULL		1405218	1					
ANR	1405724	CompoundStatement		104:27:4042:4042	1405218	1					
ANR	1405725	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	303:2:11035:11067	1405218	0	True				
ANR	1405726	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405727	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405728	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405729	ArgumentList			1405218	1					
ANR	1405730	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create view for file mapping"" , err )"	304:2:11071:11157	1405218	1	True				
ANR	1405731	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to create view for file mapping"" , err )"		1405218	0					
ANR	1405732	Callee	zend_win_error_message		1405218	0					
ANR	1405733	Identifier	zend_win_error_message		1405218	0					
ANR	1405734	ArgumentList	ACCEL_LOG_FATAL		1405218	1					
ANR	1405735	Argument	ACCEL_LOG_FATAL		1405218	0					
ANR	1405736	Identifier	ACCEL_LOG_FATAL		1405218	0					
ANR	1405737	Argument	"""Unable to create view for file mapping"""		1405218	1					
ANR	1405738	PrimaryExpression	"""Unable to create view for file mapping"""		1405218	0					
ANR	1405739	Argument	err		1405218	2					
ANR	1405740	Identifier	err		1405218	0					
ANR	1405741	ExpressionStatement	"* error_in = ""MapViewOfFile"""	305:2:11161:11188	1405218	2	True				
ANR	1405742	AssignmentExpression	"* error_in = ""MapViewOfFile"""		1405218	0		=			
ANR	1405743	UnaryOperationExpression	* error_in		1405218	0					
ANR	1405744	UnaryOperator	*		1405218	0					
ANR	1405745	Identifier	error_in		1405218	1					
ANR	1405746	PrimaryExpression	"""MapViewOfFile"""		1405218	1					
ANR	1405747	ReturnStatement	return ALLOC_FAILURE ;	306:2:11192:11212	1405218	3	True				
ANR	1405748	Identifier	ALLOC_FAILURE		1405218	0					
ANR	1405749	ElseStatement	else		1405218	0					
ANR	1405750	CompoundStatement		111:2:4284:4321	1405218	0					
ANR	1405751	IdentifierDeclStatement	char * mmap_base_file = get_mmap_base_file ( ) ;	308:2:11226:11269	1405218	0	True				
ANR	1405752	IdentifierDecl	* mmap_base_file = get_mmap_base_file ( )		1405218	0					
ANR	1405753	IdentifierDeclType	char *		1405218	0					
ANR	1405754	Identifier	mmap_base_file		1405218	1					
ANR	1405755	AssignmentExpression	* mmap_base_file = get_mmap_base_file ( )		1405218	2		=			
ANR	1405756	Identifier	mmap_base_file		1405218	0					
ANR	1405757	CallExpression	get_mmap_base_file ( )		1405218	1					
ANR	1405758	Callee	get_mmap_base_file		1405218	0					
ANR	1405759	Identifier	get_mmap_base_file		1405218	0					
ANR	1405760	ArgumentList			1405218	1					
ANR	1405761	IdentifierDeclStatement	"FILE * fp = fopen ( mmap_base_file , ""w"" ) ;"	309:2:11273:11310	1405218	1	True				
ANR	1405762	IdentifierDecl	"* fp = fopen ( mmap_base_file , ""w"" )"		1405218	0					
ANR	1405763	IdentifierDeclType	FILE *		1405218	0					
ANR	1405764	Identifier	fp		1405218	1					
ANR	1405765	AssignmentExpression	"* fp = fopen ( mmap_base_file , ""w"" )"		1405218	2		=			
ANR	1405766	Identifier	fp		1405218	0					
ANR	1405767	CallExpression	"fopen ( mmap_base_file , ""w"" )"		1405218	1					
ANR	1405768	Callee	fopen		1405218	0					
ANR	1405769	Identifier	fopen		1405218	0					
ANR	1405770	ArgumentList	mmap_base_file		1405218	1					
ANR	1405771	Argument	mmap_base_file		1405218	0					
ANR	1405772	Identifier	mmap_base_file		1405218	0					
ANR	1405773	Argument	"""w"""		1405218	1					
ANR	1405774	PrimaryExpression	"""w"""		1405218	0					
ANR	1405775	ExpressionStatement	err = GetLastError ( )	310:2:11314:11334	1405218	2	True				
ANR	1405776	AssignmentExpression	err = GetLastError ( )		1405218	0		=			
ANR	1405777	Identifier	err		1405218	0					
ANR	1405778	CallExpression	GetLastError ( )		1405218	1					
ANR	1405779	Callee	GetLastError		1405218	0					
ANR	1405780	Identifier	GetLastError		1405218	0					
ANR	1405781	ArgumentList			1405218	1					
ANR	1405782	IfStatement	if ( ! fp )		1405218	3					
ANR	1405783	Condition	! fp	311:6:11342:11344	1405218	0	True				
ANR	1405784	UnaryOperationExpression	! fp		1405218	0					
ANR	1405785	UnaryOperator	!		1405218	0					
ANR	1405786	Identifier	fp		1405218	1					
ANR	1405787	CompoundStatement		113:11:4358:4358	1405218	1					
ANR	1405788	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	312:3:11352:11384	1405218	0	True				
ANR	1405789	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405790	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405791	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405792	ArgumentList			1405218	1					
ANR	1405793	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"	313:3:11389:11451	1405218	1	True				
ANR	1405794	CallExpression	"zend_win_error_message ( ACCEL_LOG_WARNING , mmap_base_file , err )"		1405218	0					
ANR	1405795	Callee	zend_win_error_message		1405218	0					
ANR	1405796	Identifier	zend_win_error_message		1405218	0					
ANR	1405797	ArgumentList	ACCEL_LOG_WARNING		1405218	1					
ANR	1405798	Argument	ACCEL_LOG_WARNING		1405218	0					
ANR	1405799	Identifier	ACCEL_LOG_WARNING		1405218	0					
ANR	1405800	Argument	mmap_base_file		1405218	1					
ANR	1405801	Identifier	mmap_base_file		1405218	0					
ANR	1405802	Argument	err		1405218	2					
ANR	1405803	Identifier	err		1405218	0					
ANR	1405804	ExpressionStatement	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to write base address"" , err )"	314:3:11456:11532	1405218	2	True				
ANR	1405805	CallExpression	"zend_win_error_message ( ACCEL_LOG_FATAL , ""Unable to write base address"" , err )"		1405218	0					
ANR	1405806	Callee	zend_win_error_message		1405218	0					
ANR	1405807	Identifier	zend_win_error_message		1405218	0					
ANR	1405808	ArgumentList	ACCEL_LOG_FATAL		1405218	1					
ANR	1405809	Argument	ACCEL_LOG_FATAL		1405218	0					
ANR	1405810	Identifier	ACCEL_LOG_FATAL		1405218	0					
ANR	1405811	Argument	"""Unable to write base address"""		1405218	1					
ANR	1405812	PrimaryExpression	"""Unable to write base address"""		1405218	0					
ANR	1405813	Argument	err		1405218	2					
ANR	1405814	Identifier	err		1405218	0					
ANR	1405815	ReturnStatement	return ALLOC_FAILURE ;	315:3:11537:11557	1405218	3	True				
ANR	1405816	Identifier	ALLOC_FAILURE		1405218	0					
ANR	1405817	ExpressionStatement	"fprintf ( fp , ""%p\\n"" , mapping_base )"	317:2:11565:11598	1405218	4	True				
ANR	1405818	CallExpression	"fprintf ( fp , ""%p\\n"" , mapping_base )"		1405218	0					
ANR	1405819	Callee	fprintf		1405218	0					
ANR	1405820	Identifier	fprintf		1405218	0					
ANR	1405821	ArgumentList	fp		1405218	1					
ANR	1405822	Argument	fp		1405218	0					
ANR	1405823	Identifier	fp		1405218	0					
ANR	1405824	Argument	"""%p\\n"""		1405218	1					
ANR	1405825	PrimaryExpression	"""%p\\n"""		1405218	0					
ANR	1405826	Argument	mapping_base		1405218	2					
ANR	1405827	Identifier	mapping_base		1405218	0					
ANR	1405828	ExpressionStatement	fclose ( fp )	318:2:11602:11612	1405218	5	True				
ANR	1405829	CallExpression	fclose ( fp )		1405218	0					
ANR	1405830	Callee	fclose		1405218	0					
ANR	1405831	Identifier	fclose		1405218	0					
ANR	1405832	ArgumentList	fp		1405218	1					
ANR	1405833	Argument	fp		1405218	0					
ANR	1405834	Identifier	fp		1405218	0					
ANR	1405835	ExpressionStatement	shared_segment -> pos = 0	321:1:11619:11642	1405218	21	True				
ANR	1405836	AssignmentExpression	shared_segment -> pos = 0		1405218	0		=			
ANR	1405837	PtrMemberAccess	shared_segment -> pos		1405218	0					
ANR	1405838	Identifier	shared_segment		1405218	0					
ANR	1405839	Identifier	pos		1405218	1					
ANR	1405840	PrimaryExpression	0		1405218	1					
ANR	1405841	ExpressionStatement	shared_segment -> size = requested_size	322:1:11645:11682	1405218	22	True				
ANR	1405842	AssignmentExpression	shared_segment -> size = requested_size		1405218	0		=			
ANR	1405843	PtrMemberAccess	shared_segment -> size		1405218	0					
ANR	1405844	Identifier	shared_segment		1405218	0					
ANR	1405845	Identifier	size		1405218	1					
ANR	1405846	Identifier	requested_size		1405218	1					
ANR	1405847	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	324:1:11686:11718	1405218	23	True				
ANR	1405848	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405218	0					
ANR	1405849	Callee	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405850	Identifier	zend_shared_alloc_unlock_win32		1405218	0					
ANR	1405851	ArgumentList			1405218	1					
ANR	1405852	ReturnStatement	return ALLOC_SUCCESS ;	326:1:11722:11742	1405218	24	True				
ANR	1405853	Identifier	ALLOC_SUCCESS		1405218	0					
ANR	1405854	ReturnType	static int		1405218	1					
ANR	1405855	Identifier	create_segments		1405218	2					
ANR	1405856	ParameterList	"size_t requested_size , zend_shared_segment * * * shared_segments_p , int * shared_segments_count , char * * error_in"		1405218	3					
ANR	1405857	Parameter	size_t requested_size	198:27:6878:6898	1405218	0	True				
ANR	1405858	ParameterType	size_t		1405218	0					
ANR	1405859	Identifier	requested_size		1405218	1					
ANR	1405860	Parameter	zend_shared_segment * * * shared_segments_p	198:50:6901:6940	1405218	1	True				
ANR	1405861	ParameterType	zend_shared_segment * * *		1405218	0					
ANR	1405862	Identifier	shared_segments_p		1405218	1					
ANR	1405863	Parameter	int * shared_segments_count	198:92:6943:6968	1405218	2	True				
ANR	1405864	ParameterType	int *		1405218	0					
ANR	1405865	Identifier	shared_segments_count		1405218	1					
ANR	1405866	Parameter	char * * error_in	198:120:6971:6985	1405218	3	True				
ANR	1405867	ParameterType	char * *		1405218	0					
ANR	1405868	Identifier	error_in		1405218	1					
ANR	1405869	CFGEntryNode	ENTRY		1405218		True				
ANR	1405870	CFGExitNode	EXIT		1405218		True				
ANR	1405871	Symbol	shared_segments_p		1405218						
ANR	1405872	Symbol	ACCEL_LOG_FATAL		1405218						
ANR	1405873	Symbol	* ZCG ( accel_directives ) . mmap_base		1405218						
ANR	1405874	Symbol	shared_segment -> pos		1405218						
ANR	1405875	Symbol	wanted_mapping_base		1405218						
ANR	1405876	Symbol	error_in		1405218						
ANR	1405877	Symbol	get_mmap_base_file		1405218						
ANR	1405878	Symbol	CreateFileMapping		1405218						
ANR	1405879	Symbol	shared_segment -> p		1405218						
ANR	1405880	Symbol	* * shared_segments_p		1405218						
ANR	1405881	Symbol	* ZCG		1405218						
ANR	1405882	Symbol	vista_mapping_base_set		1405218						
ANR	1405883	Symbol	FILE_MAP_WRITE		1405218						
ANR	1405884	Symbol	ret		1405218						
ANR	1405885	Symbol	ACCEL_FILEMAP_NAME		1405218						
ANR	1405886	Symbol	ALLOC_FAIL_MAPPING		1405218						
ANR	1405887	Symbol	NULL		1405218						
ANR	1405888	Symbol	* error_in		1405218						
ANR	1405889	Symbol	OpenFileMapping		1405218						
ANR	1405890	Symbol	ALLOC_SUCCESS		1405218						
ANR	1405891	Symbol	* wanted_mapping_base		1405218						
ANR	1405892	Symbol	shared_segment		1405218						
ANR	1405893	Symbol	ZCG ( accel_directives ) . mmap_base		1405218						
ANR	1405894	Symbol	GetLastError		1405218						
ANR	1405895	Symbol	sscanf		1405218						
ANR	1405896	Symbol	mmap_base_file		1405218						
ANR	1405897	Symbol	requested_size		1405218						
ANR	1405898	Symbol	ZCG		1405218						
ANR	1405899	Symbol	memfile		1405218						
ANR	1405900	Symbol	MAX_MAP_RETRIES		1405218						
ANR	1405901	Symbol	shared_segment -> size		1405218						
ANR	1405902	Symbol	* shared_segment		1405218						
ANR	1405903	Symbol	fp		1405218						
ANR	1405904	Symbol	calloc		1405218						
ANR	1405905	Symbol	create_name_with_username		1405218						
ANR	1405906	Symbol	map_retries		1405218						
ANR	1405907	Symbol	ALLOC_FAILURE		1405218						
ANR	1405908	Symbol	* ( s + 1 )		1405218						
ANR	1405909	Symbol	ACCEL_LOG_WARNING		1405218						
ANR	1405910	Symbol	FILE_MAP_ALL_ACCESS		1405218						
ANR	1405911	Symbol	* shared_segments_count		1405218						
ANR	1405912	Symbol	zend_shared_alloc_reattach		1405218						
ANR	1405913	Symbol	fopen		1405218						
ANR	1405914	Symbol	MapViewOfFileEx		1405218						
ANR	1405915	Symbol	err		1405218						
ANR	1405916	Symbol	shared_segments_count		1405218						
ANR	1405917	Symbol	* shared_segments_p		1405218						
ANR	1405918	Symbol	INVALID_HANDLE_VALUE		1405218						
ANR	1405919	Symbol	PAGE_READWRITE		1405218						
ANR	1405920	Symbol	s		1405218						
ANR	1405921	Symbol	mapping_base		1405218						
ANR	1405922	Symbol	accel_directives		1405218						
ANR	1405923	Symbol	* s		1405218						
ANR	1405924	Symbol	default_mapping_base_set		1405218						
ANR	1405925	Function	detach_segment	329:0:11747:12061							
ANR	1405926	FunctionDef	detach_segment (zend_shared_segment * shared_segment)		1405925	0					
ANR	1405927	CompoundStatement		330:0:11810:12061	1405925	0					
ANR	1405928	ExpressionStatement	zend_shared_alloc_lock_win32 ( )	331:1:11813:11843	1405925	0	True				
ANR	1405929	CallExpression	zend_shared_alloc_lock_win32 ( )		1405925	0					
ANR	1405930	Callee	zend_shared_alloc_lock_win32		1405925	0					
ANR	1405931	Identifier	zend_shared_alloc_lock_win32		1405925	0					
ANR	1405932	ArgumentList			1405925	1					
ANR	1405933	IfStatement	if ( mapping_base )		1405925	1					
ANR	1405934	Condition	mapping_base	332:5:11850:11861	1405925	0	True				
ANR	1405935	Identifier	mapping_base		1405925	0					
ANR	1405936	CompoundStatement		3:19:53:53	1405925	1					
ANR	1405937	ExpressionStatement	UnmapViewOfFile ( mapping_base )	333:2:11868:11897	1405925	0	True				
ANR	1405938	CallExpression	UnmapViewOfFile ( mapping_base )		1405925	0					
ANR	1405939	Callee	UnmapViewOfFile		1405925	0					
ANR	1405940	Identifier	UnmapViewOfFile		1405925	0					
ANR	1405941	ArgumentList	mapping_base		1405925	1					
ANR	1405942	Argument	mapping_base		1405925	0					
ANR	1405943	Identifier	mapping_base		1405925	0					
ANR	1405944	ExpressionStatement	mapping_base = NULL	334:2:11901:11920	1405925	1	True				
ANR	1405945	AssignmentExpression	mapping_base = NULL		1405925	0		=			
ANR	1405946	Identifier	mapping_base		1405925	0					
ANR	1405947	Identifier	NULL		1405925	1					
ANR	1405948	ExpressionStatement	CloseHandle ( memfile )	336:1:11926:11946	1405925	2	True				
ANR	1405949	CallExpression	CloseHandle ( memfile )		1405925	0					
ANR	1405950	Callee	CloseHandle		1405925	0					
ANR	1405951	Identifier	CloseHandle		1405925	0					
ANR	1405952	ArgumentList	memfile		1405925	1					
ANR	1405953	Argument	memfile		1405925	0					
ANR	1405954	Identifier	memfile		1405925	0					
ANR	1405955	ExpressionStatement	memfile = NULL	337:1:11949:11963	1405925	3	True				
ANR	1405956	AssignmentExpression	memfile = NULL		1405925	0		=			
ANR	1405957	Identifier	memfile		1405925	0					
ANR	1405958	Identifier	NULL		1405925	1					
ANR	1405959	ExpressionStatement	zend_shared_alloc_unlock_win32 ( )	338:1:11966:11998	1405925	4	True				
ANR	1405960	CallExpression	zend_shared_alloc_unlock_win32 ( )		1405925	0					
ANR	1405961	Callee	zend_shared_alloc_unlock_win32		1405925	0					
ANR	1405962	Identifier	zend_shared_alloc_unlock_win32		1405925	0					
ANR	1405963	ArgumentList			1405925	1					
ANR	1405964	ExpressionStatement	CloseHandle ( memory_mutex )	339:1:12001:12026	1405925	5	True				
ANR	1405965	CallExpression	CloseHandle ( memory_mutex )		1405925	0					
ANR	1405966	Callee	CloseHandle		1405925	0					
ANR	1405967	Identifier	CloseHandle		1405925	0					
ANR	1405968	ArgumentList	memory_mutex		1405925	1					
ANR	1405969	Argument	memory_mutex		1405925	0					
ANR	1405970	Identifier	memory_mutex		1405925	0					
ANR	1405971	ExpressionStatement	memory_mutex = NULL	340:1:12029:12048	1405925	6	True				
ANR	1405972	AssignmentExpression	memory_mutex = NULL		1405925	0		=			
ANR	1405973	Identifier	memory_mutex		1405925	0					
ANR	1405974	Identifier	NULL		1405925	1					
ANR	1405975	ReturnStatement	return 0 ;	341:1:12051:12059	1405925	7	True				
ANR	1405976	PrimaryExpression	0		1405925	0					
ANR	1405977	ReturnType	static int		1405925	1					
ANR	1405978	Identifier	detach_segment		1405925	2					
ANR	1405979	ParameterList	zend_shared_segment * shared_segment		1405925	3					
ANR	1405980	Parameter	zend_shared_segment * shared_segment	329:26:11773:11807	1405925	0	True				
ANR	1405981	ParameterType	zend_shared_segment *		1405925	0					
ANR	1405982	Identifier	shared_segment		1405925	1					
ANR	1405983	CFGEntryNode	ENTRY		1405925		True				
ANR	1405984	CFGExitNode	EXIT		1405925		True				
ANR	1405985	Symbol	memfile		1405925						
ANR	1405986	Symbol	mapping_base		1405925						
ANR	1405987	Symbol	NULL		1405925						
ANR	1405988	Symbol	shared_segment		1405925						
ANR	1405989	Symbol	memory_mutex		1405925						
ANR	1405990	Function	segment_type_size	344:0:12064:12141							
ANR	1405991	FunctionDef	segment_type_size ()		1405990	0					
ANR	1405992	CompoundStatement		345:0:12102:12141	1405990	0					
ANR	1405993	ReturnStatement	return sizeof ( zend_shared_segment ) ;	346:1:12105:12139	1405990	0	True				
ANR	1405994	SizeofExpression	sizeof ( zend_shared_segment )		1405990	0					
ANR	1405995	Sizeof	sizeof		1405990	0					
ANR	1405996	SizeofOperand	zend_shared_segment		1405990	1					
ANR	1405997	ReturnType	static size_t		1405990	1					
ANR	1405998	Identifier	segment_type_size		1405990	2					
ANR	1405999	ParameterList			1405990	3					
ANR	1406000	CFGEntryNode	ENTRY		1405990		True				
ANR	1406001	CFGExitNode	EXIT		1405990		True				
ANR	1406002	DeclStmt									
ANR	1406003	Decl							zend_shared_memory_handlers	zend_shared_memory_handlers	zend_alloc_win32_handlers
