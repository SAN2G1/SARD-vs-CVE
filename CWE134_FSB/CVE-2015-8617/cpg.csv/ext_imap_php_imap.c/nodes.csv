command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	950973	File	data/converged/CVE-2015-8617_php-src/ext_imap_php_imap.c								
ANR	950974	DeclStmt									
ANR	950975	Decl							MAILSTREAM	MAILSTREAM	DEFAULTPROTO
ANR	950976	DeclStmt									
ANR	950977	Decl							void	"void ( zval * myzvalue , ENVELOPE * en )"	_php_make_header_object
ANR	950978	DeclStmt									
ANR	950979	Decl							void	"void ( zval * arg , BODY * body )"	_php_imap_add_body
ANR	950980	DeclStmt									
ANR	950981	Decl							zend_string	"zend_string * ( ADDRESS * addresslist , zval * paddress )"	_php_imap_parse_address
ANR	950982	DeclStmt									
ANR	950983	Decl							zend_string	zend_string * ( ADDRESS * addresslist )	_php_rfc822_write_address
ANR	950984	DeclStmt									
ANR	950985	Decl							char	"char * ( readfn_t f , void * stream , unsigned long size , GETS_DATA * md )"	php_mail_gets
ANR	950986	DeclStmt									
ANR	950987	Decl							void	void ( char * date )	rfc822_date
ANR	950988	DeclStmt									
ANR	950989	Decl							char	char * ( const char * str )	cpystr
ANR	950990	DeclStmt									
ANR	950991	Decl							char	"char * ( SIZEDTEXT * dst , char * text , unsigned long size )"	cpytxt
ANR	950992	DeclStmt									
ANR	950993	Decl							long	"long ( SIZEDTEXT * src , SIZEDTEXT * dst )"	utf8_mime2text
ANR	950994	DeclStmt									
ANR	950995	Decl							long	"long ( SIZEDTEXT * src , SIZEDTEXT * dst , long flags )"	utf8_mime2text
ANR	950996	DeclStmt									
ANR	950997	Decl							unsigned long	unsigned long ( unsigned long * valptr )	find_rightmost_bit
ANR	950998	DeclStmt									
ANR	950999	Decl							void	void ( void * * block )	fs_give
ANR	951000	DeclStmt									
ANR	951001	Decl							void	void * ( size_t size )	fs_get
ANR	951002	DeclStmt									
ANR	951003	Decl							const zend_function_entry	const zend_function_entry [ ]	imap_functions
ANR	951004	DeclStmt									
ANR	951005	Decl							const zend_module_dep	const zend_module_dep [ ]	imap_deps
ANR	951006	DeclStmt									
ANR	951007	Decl							zend_module_entry	zend_module_entry	imap_module_entry
ANR	951008	DeclStmt									
ANR	951009	Decl							int	int	le_imap
ANR	951010	Function	mail_close_it	601:0:18644:19100							
ANR	951011	FunctionDef	mail_close_it (zend_resource * rsrc)		951010	0					
ANR	951012	CompoundStatement		602:0:18691:19100	951010	0					
ANR	951013	IdentifierDeclStatement	pils * imap_le_struct = ( pils * ) rsrc -> ptr ;	603:1:18694:18734	951010	0	True				
ANR	951014	IdentifierDecl	* imap_le_struct = ( pils * ) rsrc -> ptr		951010	0					
ANR	951015	IdentifierDeclType	pils *		951010	0					
ANR	951016	Identifier	imap_le_struct		951010	1					
ANR	951017	AssignmentExpression	* imap_le_struct = ( pils * ) rsrc -> ptr		951010	2		=			
ANR	951018	Identifier	imap_le_struct		951010	0					
ANR	951019	CastExpression	( pils * ) rsrc -> ptr		951010	1					
ANR	951020	CastTarget	pils *		951010	0					
ANR	951021	PtrMemberAccess	rsrc -> ptr		951010	1					
ANR	951022	Identifier	rsrc		951010	0					
ANR	951023	Identifier	ptr		951010	1					
ANR	951024	IfStatement	if ( ! ( imap_le_struct -> flags & OP_PROTOTYPE ) )		951010	1					
ANR	951025	Condition	! ( imap_le_struct -> flags & OP_PROTOTYPE )	606:5:18787:18825	951010	0	True				
ANR	951026	UnaryOperationExpression	! ( imap_le_struct -> flags & OP_PROTOTYPE )		951010	0					
ANR	951027	UnaryOperator	!		951010	0					
ANR	951028	BitAndExpression	imap_le_struct -> flags & OP_PROTOTYPE		951010	1		&			
ANR	951029	PtrMemberAccess	imap_le_struct -> flags		951010	0					
ANR	951030	Identifier	imap_le_struct		951010	0					
ANR	951031	Identifier	flags		951010	1					
ANR	951032	Identifier	OP_PROTOTYPE		951010	1					
ANR	951033	CompoundStatement		5:46:136:136	951010	1					
ANR	951034	ExpressionStatement	"mail_close_full ( imap_le_struct -> imap_stream , imap_le_struct -> flags )"	607:2:18832:18899	951010	0	True				
ANR	951035	CallExpression	"mail_close_full ( imap_le_struct -> imap_stream , imap_le_struct -> flags )"		951010	0					
ANR	951036	Callee	mail_close_full		951010	0					
ANR	951037	Identifier	mail_close_full		951010	0					
ANR	951038	ArgumentList	imap_le_struct -> imap_stream		951010	1					
ANR	951039	Argument	imap_le_struct -> imap_stream		951010	0					
ANR	951040	PtrMemberAccess	imap_le_struct -> imap_stream		951010	0					
ANR	951041	Identifier	imap_le_struct		951010	0					
ANR	951042	Identifier	imap_stream		951010	1					
ANR	951043	Argument	imap_le_struct -> flags		951010	1					
ANR	951044	PtrMemberAccess	imap_le_struct -> flags		951010	0					
ANR	951045	Identifier	imap_le_struct		951010	0					
ANR	951046	Identifier	flags		951010	1					
ANR	951047	IfStatement	if ( IMAPG ( imap_user ) )		951010	2					
ANR	951048	Condition	IMAPG ( imap_user )	610:5:18910:18925	951010	0	True				
ANR	951049	CallExpression	IMAPG ( imap_user )		951010	0					
ANR	951050	Callee	IMAPG		951010	0					
ANR	951051	Identifier	IMAPG		951010	0					
ANR	951052	ArgumentList	imap_user		951010	1					
ANR	951053	Argument	imap_user		951010	0					
ANR	951054	Identifier	imap_user		951010	0					
ANR	951055	CompoundStatement		9:23:236:236	951010	1					
ANR	951056	ExpressionStatement	efree ( IMAPG ( imap_user ) )	611:2:18932:18955	951010	0	True				
ANR	951057	CallExpression	efree ( IMAPG ( imap_user ) )		951010	0					
ANR	951058	Callee	efree		951010	0					
ANR	951059	Identifier	efree		951010	0					
ANR	951060	ArgumentList	IMAPG ( imap_user )		951010	1					
ANR	951061	Argument	IMAPG ( imap_user )		951010	0					
ANR	951062	CallExpression	IMAPG ( imap_user )		951010	0					
ANR	951063	Callee	IMAPG		951010	0					
ANR	951064	Identifier	IMAPG		951010	0					
ANR	951065	ArgumentList	imap_user		951010	1					
ANR	951066	Argument	imap_user		951010	0					
ANR	951067	Identifier	imap_user		951010	0					
ANR	951068	ExpressionStatement	IMAPG ( imap_user ) = 0	612:2:18959:18979	951010	1	True				
ANR	951069	AssignmentExpression	IMAPG ( imap_user ) = 0		951010	0		=			
ANR	951070	CallExpression	IMAPG ( imap_user )		951010	0					
ANR	951071	Callee	IMAPG		951010	0					
ANR	951072	Identifier	IMAPG		951010	0					
ANR	951073	ArgumentList	imap_user		951010	1					
ANR	951074	Argument	imap_user		951010	0					
ANR	951075	Identifier	imap_user		951010	0					
ANR	951076	PrimaryExpression	0		951010	1					
ANR	951077	IfStatement	if ( IMAPG ( imap_password ) )		951010	3					
ANR	951078	Condition	IMAPG ( imap_password )	614:5:18989:19008	951010	0	True				
ANR	951079	CallExpression	IMAPG ( imap_password )		951010	0					
ANR	951080	Callee	IMAPG		951010	0					
ANR	951081	Identifier	IMAPG		951010	0					
ANR	951082	ArgumentList	imap_password		951010	1					
ANR	951083	Argument	imap_password		951010	0					
ANR	951084	Identifier	imap_password		951010	0					
ANR	951085	CompoundStatement		13:27:319:319	951010	1					
ANR	951086	ExpressionStatement	efree ( IMAPG ( imap_password ) )	615:2:19015:19042	951010	0	True				
ANR	951087	CallExpression	efree ( IMAPG ( imap_password ) )		951010	0					
ANR	951088	Callee	efree		951010	0					
ANR	951089	Identifier	efree		951010	0					
ANR	951090	ArgumentList	IMAPG ( imap_password )		951010	1					
ANR	951091	Argument	IMAPG ( imap_password )		951010	0					
ANR	951092	CallExpression	IMAPG ( imap_password )		951010	0					
ANR	951093	Callee	IMAPG		951010	0					
ANR	951094	Identifier	IMAPG		951010	0					
ANR	951095	ArgumentList	imap_password		951010	1					
ANR	951096	Argument	imap_password		951010	0					
ANR	951097	Identifier	imap_password		951010	0					
ANR	951098	ExpressionStatement	IMAPG ( imap_password ) = 0	616:2:19046:19070	951010	1	True				
ANR	951099	AssignmentExpression	IMAPG ( imap_password ) = 0		951010	0		=			
ANR	951100	CallExpression	IMAPG ( imap_password )		951010	0					
ANR	951101	Callee	IMAPG		951010	0					
ANR	951102	Identifier	IMAPG		951010	0					
ANR	951103	ArgumentList	imap_password		951010	1					
ANR	951104	Argument	imap_password		951010	0					
ANR	951105	Identifier	imap_password		951010	0					
ANR	951106	PrimaryExpression	0		951010	1					
ANR	951107	ExpressionStatement	efree ( imap_le_struct )	619:1:19077:19098	951010	4	True				
ANR	951108	CallExpression	efree ( imap_le_struct )		951010	0					
ANR	951109	Callee	efree		951010	0					
ANR	951110	Identifier	efree		951010	0					
ANR	951111	ArgumentList	imap_le_struct		951010	1					
ANR	951112	Argument	imap_le_struct		951010	0					
ANR	951113	Identifier	imap_le_struct		951010	0					
ANR	951114	ReturnType	static void		951010	1					
ANR	951115	Identifier	mail_close_it		951010	2					
ANR	951116	ParameterList	zend_resource * rsrc		951010	3					
ANR	951117	Parameter	zend_resource * rsrc	601:26:18670:18688	951010	0	True				
ANR	951118	ParameterType	zend_resource *		951010	0					
ANR	951119	Identifier	rsrc		951010	1					
ANR	951120	CFGEntryNode	ENTRY		951010		True				
ANR	951121	CFGExitNode	EXIT		951010		True				
ANR	951122	Symbol	imap_le_struct -> flags		951010						
ANR	951123	Symbol	* imap_le_struct		951010						
ANR	951124	Symbol	rsrc -> ptr		951010						
ANR	951125	Symbol	imap_le_struct		951010						
ANR	951126	Symbol	imap_le_struct -> imap_stream		951010						
ANR	951127	Symbol	OP_PROTOTYPE		951010						
ANR	951128	Symbol	rsrc		951010						
ANR	951129	Symbol	imap_user		951010						
ANR	951130	Symbol	* rsrc		951010						
ANR	951131	Symbol	IMAPG		951010						
ANR	951132	Symbol	imap_password		951010						
ANR	951133	Function	add_assoc_object	625:0:19141:19401							
ANR	951134	FunctionDef	"add_assoc_object (zval * arg , char * key , zval * tmp)"		951133	0					
ANR	951135	CompoundStatement		626:0:19204:19401	951133	0					
ANR	951136	IdentifierDeclStatement	HashTable * symtable ;	627:1:19207:19226	951133	0	True				
ANR	951137	IdentifierDecl	* symtable		951133	0					
ANR	951138	IdentifierDeclType	HashTable *		951133	0					
ANR	951139	Identifier	symtable		951133	1					
ANR	951140	IfStatement	if ( Z_TYPE_P ( arg ) == IS_OBJECT )		951133	1					
ANR	951141	Condition	Z_TYPE_P ( arg ) == IS_OBJECT	629:5:19234:19259	951133	0	True				
ANR	951142	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		951133	0		==			
ANR	951143	CallExpression	Z_TYPE_P ( arg )		951133	0					
ANR	951144	Callee	Z_TYPE_P		951133	0					
ANR	951145	Identifier	Z_TYPE_P		951133	0					
ANR	951146	ArgumentList	arg		951133	1					
ANR	951147	Argument	arg		951133	0					
ANR	951148	Identifier	arg		951133	0					
ANR	951149	Identifier	IS_OBJECT		951133	1					
ANR	951150	CompoundStatement		4:33:57:57	951133	1					
ANR	951151	ExpressionStatement	symtable = Z_OBJPROP_P ( arg )	630:2:19266:19293	951133	0	True				
ANR	951152	AssignmentExpression	symtable = Z_OBJPROP_P ( arg )		951133	0		=			
ANR	951153	Identifier	symtable		951133	0					
ANR	951154	CallExpression	Z_OBJPROP_P ( arg )		951133	1					
ANR	951155	Callee	Z_OBJPROP_P		951133	0					
ANR	951156	Identifier	Z_OBJPROP_P		951133	0					
ANR	951157	ArgumentList	arg		951133	1					
ANR	951158	Argument	arg		951133	0					
ANR	951159	Identifier	arg		951133	0					
ANR	951160	ElseStatement	else		951133	0					
ANR	951161	CompoundStatement		6:8:98:98	951133	0					
ANR	951162	ExpressionStatement	symtable = Z_ARRVAL_P ( arg )	632:2:19307:19333	951133	0	True				
ANR	951163	AssignmentExpression	symtable = Z_ARRVAL_P ( arg )		951133	0		=			
ANR	951164	Identifier	symtable		951133	0					
ANR	951165	CallExpression	Z_ARRVAL_P ( arg )		951133	1					
ANR	951166	Callee	Z_ARRVAL_P		951133	0					
ANR	951167	Identifier	Z_ARRVAL_P		951133	0					
ANR	951168	ArgumentList	arg		951133	1					
ANR	951169	Argument	arg		951133	0					
ANR	951170	Identifier	arg		951133	0					
ANR	951171	ReturnStatement	"return zend_hash_str_update ( symtable , key , strlen ( key ) , tmp ) ;"	634:1:19339:19399	951133	2	True				
ANR	951172	CallExpression	"zend_hash_str_update ( symtable , key , strlen ( key ) , tmp )"		951133	0					
ANR	951173	Callee	zend_hash_str_update		951133	0					
ANR	951174	Identifier	zend_hash_str_update		951133	0					
ANR	951175	ArgumentList	symtable		951133	1					
ANR	951176	Argument	symtable		951133	0					
ANR	951177	Identifier	symtable		951133	0					
ANR	951178	Argument	key		951133	1					
ANR	951179	Identifier	key		951133	0					
ANR	951180	Argument	strlen ( key )		951133	2					
ANR	951181	CallExpression	strlen ( key )		951133	0					
ANR	951182	Callee	strlen		951133	0					
ANR	951183	Identifier	strlen		951133	0					
ANR	951184	ArgumentList	key		951133	1					
ANR	951185	Argument	key		951133	0					
ANR	951186	Identifier	key		951133	0					
ANR	951187	Argument	tmp		951133	3					
ANR	951188	Identifier	tmp		951133	0					
ANR	951189	ReturnType	static zval *		951133	1					
ANR	951190	Identifier	add_assoc_object		951133	2					
ANR	951191	ParameterList	"zval * arg , char * key , zval * tmp"		951133	3					
ANR	951192	Parameter	zval * arg	625:30:19171:19179	951133	0	True				
ANR	951193	ParameterType	zval *		951133	0					
ANR	951194	Identifier	arg		951133	1					
ANR	951195	Parameter	char * key	625:41:19182:19190	951133	1	True				
ANR	951196	ParameterType	char *		951133	0					
ANR	951197	Identifier	key		951133	1					
ANR	951198	Parameter	zval * tmp	625:52:19193:19201	951133	2	True				
ANR	951199	ParameterType	zval *		951133	0					
ANR	951200	Identifier	tmp		951133	1					
ANR	951201	CFGEntryNode	ENTRY		951133		True				
ANR	951202	CFGExitNode	EXIT		951133		True				
ANR	951203	Symbol	strlen		951133						
ANR	951204	Symbol	tmp		951133						
ANR	951205	Symbol	zend_hash_str_update		951133						
ANR	951206	Symbol	arg		951133						
ANR	951207	Symbol	Z_OBJPROP_P		951133						
ANR	951208	Symbol	Z_TYPE_P		951133						
ANR	951209	Symbol	IS_OBJECT		951133						
ANR	951210	Symbol	Z_ARRVAL_P		951133						
ANR	951211	Symbol	key		951133						
ANR	951212	Symbol	symtable		951133						
ANR	951213	Function	add_next_index_object	640:0:19447:19698							
ANR	951214	FunctionDef	"add_next_index_object (zval * arg , zval * tmp)"		951213	0					
ANR	951215	CompoundStatement		641:0:19511:19698	951213	0					
ANR	951216	IdentifierDeclStatement	HashTable * symtable ;	642:1:19514:19533	951213	0	True				
ANR	951217	IdentifierDecl	* symtable		951213	0					
ANR	951218	IdentifierDeclType	HashTable *		951213	0					
ANR	951219	Identifier	symtable		951213	1					
ANR	951220	IfStatement	if ( Z_TYPE_P ( arg ) == IS_OBJECT )		951213	1					
ANR	951221	Condition	Z_TYPE_P ( arg ) == IS_OBJECT	644:5:19541:19566	951213	0	True				
ANR	951222	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		951213	0		==			
ANR	951223	CallExpression	Z_TYPE_P ( arg )		951213	0					
ANR	951224	Callee	Z_TYPE_P		951213	0					
ANR	951225	Identifier	Z_TYPE_P		951213	0					
ANR	951226	ArgumentList	arg		951213	1					
ANR	951227	Argument	arg		951213	0					
ANR	951228	Identifier	arg		951213	0					
ANR	951229	Identifier	IS_OBJECT		951213	1					
ANR	951230	CompoundStatement		4:33:57:57	951213	1					
ANR	951231	ExpressionStatement	symtable = Z_OBJPROP_P ( arg )	645:2:19573:19600	951213	0	True				
ANR	951232	AssignmentExpression	symtable = Z_OBJPROP_P ( arg )		951213	0		=			
ANR	951233	Identifier	symtable		951213	0					
ANR	951234	CallExpression	Z_OBJPROP_P ( arg )		951213	1					
ANR	951235	Callee	Z_OBJPROP_P		951213	0					
ANR	951236	Identifier	Z_OBJPROP_P		951213	0					
ANR	951237	ArgumentList	arg		951213	1					
ANR	951238	Argument	arg		951213	0					
ANR	951239	Identifier	arg		951213	0					
ANR	951240	ElseStatement	else		951213	0					
ANR	951241	CompoundStatement		6:8:98:98	951213	0					
ANR	951242	ExpressionStatement	symtable = Z_ARRVAL_P ( arg )	647:2:19614:19640	951213	0	True				
ANR	951243	AssignmentExpression	symtable = Z_ARRVAL_P ( arg )		951213	0		=			
ANR	951244	Identifier	symtable		951213	0					
ANR	951245	CallExpression	Z_ARRVAL_P ( arg )		951213	1					
ANR	951246	Callee	Z_ARRVAL_P		951213	0					
ANR	951247	Identifier	Z_ARRVAL_P		951213	0					
ANR	951248	ArgumentList	arg		951213	1					
ANR	951249	Argument	arg		951213	0					
ANR	951250	Identifier	arg		951213	0					
ANR	951251	ReturnStatement	"return zend_hash_next_index_insert ( symtable , tmp ) ;"	650:1:19647:19696	951213	2	True				
ANR	951252	CallExpression	"zend_hash_next_index_insert ( symtable , tmp )"		951213	0					
ANR	951253	Callee	zend_hash_next_index_insert		951213	0					
ANR	951254	Identifier	zend_hash_next_index_insert		951213	0					
ANR	951255	ArgumentList	symtable		951213	1					
ANR	951256	Argument	symtable		951213	0					
ANR	951257	Identifier	symtable		951213	0					
ANR	951258	Argument	tmp		951213	1					
ANR	951259	Identifier	tmp		951213	0					
ANR	951260	ReturnType	static inline zval *		951213	1					
ANR	951261	Identifier	add_next_index_object		951213	2					
ANR	951262	ParameterList	"zval * arg , zval * tmp"		951213	3					
ANR	951263	Parameter	zval * arg	640:42:19489:19497	951213	0	True				
ANR	951264	ParameterType	zval *		951213	0					
ANR	951265	Identifier	arg		951213	1					
ANR	951266	Parameter	zval * tmp	640:53:19500:19508	951213	1	True				
ANR	951267	ParameterType	zval *		951213	0					
ANR	951268	Identifier	tmp		951213	1					
ANR	951269	CFGEntryNode	ENTRY		951213		True				
ANR	951270	CFGExitNode	EXIT		951213		True				
ANR	951271	Symbol	zend_hash_next_index_insert		951213						
ANR	951272	Symbol	tmp		951213						
ANR	951273	Symbol	arg		951213						
ANR	951274	Symbol	Z_OBJPROP_P		951213						
ANR	951275	Symbol	Z_TYPE_P		951213						
ANR	951276	Symbol	IS_OBJECT		951213						
ANR	951277	Symbol	Z_ARRVAL_P		951213						
ANR	951278	Symbol	symtable		951213						
ANR	951279	Function	mail_newfolderobjectlist	660:0:19830:19961							
ANR	951280	FunctionDef	mail_newfolderobjectlist ()		951279	0					
ANR	951281	CompoundStatement		661:0:19874:19961	951279	0					
ANR	951282	ReturnStatement	"return ( FOBJECTLIST * ) memset ( fs_get ( sizeof ( FOBJECTLIST ) ) , 0 , sizeof ( FOBJECTLIST ) ) ;"	662:1:19877:19959	951279	0	True				
ANR	951283	CastExpression	"( FOBJECTLIST * ) memset ( fs_get ( sizeof ( FOBJECTLIST ) ) , 0 , sizeof ( FOBJECTLIST ) )"		951279	0					
ANR	951284	CastTarget	FOBJECTLIST *		951279	0					
ANR	951285	CallExpression	"memset ( fs_get ( sizeof ( FOBJECTLIST ) ) , 0 , sizeof ( FOBJECTLIST ) )"		951279	1					
ANR	951286	Callee	memset		951279	0					
ANR	951287	Identifier	memset		951279	0					
ANR	951288	ArgumentList	fs_get ( sizeof ( FOBJECTLIST ) )		951279	1					
ANR	951289	Argument	fs_get ( sizeof ( FOBJECTLIST ) )		951279	0					
ANR	951290	CallExpression	fs_get ( sizeof ( FOBJECTLIST ) )		951279	0					
ANR	951291	Callee	fs_get		951279	0					
ANR	951292	Identifier	fs_get		951279	0					
ANR	951293	ArgumentList	sizeof ( FOBJECTLIST )		951279	1					
ANR	951294	Argument	sizeof ( FOBJECTLIST )		951279	0					
ANR	951295	SizeofExpression	sizeof ( FOBJECTLIST )		951279	0					
ANR	951296	Sizeof	sizeof		951279	0					
ANR	951297	SizeofOperand	FOBJECTLIST		951279	1					
ANR	951298	Argument	0		951279	1					
ANR	951299	PrimaryExpression	0		951279	0					
ANR	951300	Argument	sizeof ( FOBJECTLIST )		951279	2					
ANR	951301	SizeofExpression	sizeof ( FOBJECTLIST )		951279	0					
ANR	951302	Sizeof	sizeof		951279	0					
ANR	951303	SizeofOperand	FOBJECTLIST		951279	1					
ANR	951304	ReturnType	FOBJECTLIST *		951279	1					
ANR	951305	Identifier	mail_newfolderobjectlist		951279	2					
ANR	951306	ParameterList			951279	3					
ANR	951307	CFGEntryNode	ENTRY		951279		True				
ANR	951308	CFGExitNode	EXIT		951279		True				
ANR	951309	Symbol	fs_get		951279						
ANR	951310	Symbol	memset		951279						
ANR	951311	Function	mail_free_foblist	672:0:20100:20392							
ANR	951312	FunctionDef	"mail_free_foblist (FOBJECTLIST * * foblist , FOBJECTLIST * * tail)"		951311	0					
ANR	951313	CompoundStatement		673:0:20166:20392	951311	0					
ANR	951314	IdentifierDeclStatement	"FOBJECTLIST * cur , * next ;"	674:1:20169:20192	951311	0	True				
ANR	951315	IdentifierDecl	* cur		951311	0					
ANR	951316	IdentifierDeclType	FOBJECTLIST *		951311	0					
ANR	951317	Identifier	cur		951311	1					
ANR	951318	IdentifierDecl	* next		951311	1					
ANR	951319	IdentifierDeclType	FOBJECTLIST *		951311	0					
ANR	951320	Identifier	next		951311	1					
ANR	951321	ForStatement	"for ( cur = * foblist , next = cur -> next ; cur ; cur = next )"		951311	1					
ANR	951322	ForInit	"cur = * foblist , next = cur -> next ;"	676:6:20201:20229	951311	0	True				
ANR	951323	Expression	"cur = * foblist , next = cur -> next"		951311	0					
ANR	951324	AssignmentExpression	cur = * foblist		951311	0		=			
ANR	951325	Identifier	cur		951311	0					
ANR	951326	UnaryOperationExpression	* foblist		951311	1					
ANR	951327	UnaryOperator	*		951311	0					
ANR	951328	Identifier	foblist		951311	1					
ANR	951329	AssignmentExpression	next = cur -> next		951311	1		=			
ANR	951330	Identifier	next		951311	0					
ANR	951331	PtrMemberAccess	cur -> next		951311	1					
ANR	951332	Identifier	cur		951311	0					
ANR	951333	Identifier	next		951311	1					
ANR	951334	Condition	cur	676:36:20231:20233	951311	1	True				
ANR	951335	Identifier	cur		951311	0					
ANR	951336	AssignmentExpression	cur = next	676:41:20236:20243	951311	2	True	=			
ANR	951337	Identifier	cur		951311	0					
ANR	951338	Identifier	next		951311	1					
ANR	951339	CompoundStatement		4:51:79:79	951311	3					
ANR	951340	ExpressionStatement	next = cur -> next	677:2:20250:20266	951311	0	True				
ANR	951341	AssignmentExpression	next = cur -> next		951311	0		=			
ANR	951342	Identifier	next		951311	0					
ANR	951343	PtrMemberAccess	cur -> next		951311	1					
ANR	951344	Identifier	cur		951311	0					
ANR	951345	Identifier	next		951311	1					
ANR	951346	IfStatement	if ( cur -> text . data )		951311	1					
ANR	951347	Condition	cur -> text . data	679:5:20274:20287	951311	0	True				
ANR	951348	MemberAccess	cur -> text . data		951311	0					
ANR	951349	PtrMemberAccess	cur -> text		951311	0					
ANR	951350	Identifier	cur		951311	0					
ANR	951351	Identifier	text		951311	1					
ANR	951352	Identifier	data		951311	1					
ANR	951353	ExpressionStatement	fs_give ( ( void * * ) & ( cur -> text . data ) )	680:3:20293:20328	951311	1	True				
ANR	951354	CallExpression	fs_give ( ( void * * ) & ( cur -> text . data ) )		951311	0					
ANR	951355	Callee	fs_give		951311	0					
ANR	951356	Identifier	fs_give		951311	0					
ANR	951357	ArgumentList	( void * * ) & ( cur -> text . data )		951311	1					
ANR	951358	Argument	( void * * ) & ( cur -> text . data )		951311	0					
ANR	951359	CastExpression	( void * * ) & ( cur -> text . data )		951311	0					
ANR	951360	CastTarget	void * *		951311	0					
ANR	951361	UnaryOperationExpression	& ( cur -> text . data )		951311	1					
ANR	951362	UnaryOperator	&		951311	0					
ANR	951363	MemberAccess	cur -> text . data		951311	1					
ANR	951364	PtrMemberAccess	cur -> text		951311	0					
ANR	951365	Identifier	cur		951311	0					
ANR	951366	Identifier	text		951311	1					
ANR	951367	Identifier	data		951311	1					
ANR	951368	ExpressionStatement	fs_give ( ( void * * ) & cur )	682:2:20333:20355	951311	2	True				
ANR	951369	CallExpression	fs_give ( ( void * * ) & cur )		951311	0					
ANR	951370	Callee	fs_give		951311	0					
ANR	951371	Identifier	fs_give		951311	0					
ANR	951372	ArgumentList	( void * * ) & cur		951311	1					
ANR	951373	Argument	( void * * ) & cur		951311	0					
ANR	951374	CastExpression	( void * * ) & cur		951311	0					
ANR	951375	CastTarget	void * *		951311	0					
ANR	951376	UnaryOperationExpression	& cur		951311	1					
ANR	951377	UnaryOperator	&		951311	0					
ANR	951378	Identifier	cur		951311	1					
ANR	951379	ExpressionStatement	* tail = NIL	685:1:20362:20373	951311	2	True				
ANR	951380	AssignmentExpression	* tail = NIL		951311	0		=			
ANR	951381	UnaryOperationExpression	* tail		951311	0					
ANR	951382	UnaryOperator	*		951311	0					
ANR	951383	Identifier	tail		951311	1					
ANR	951384	Identifier	NIL		951311	1					
ANR	951385	ExpressionStatement	* foblist = NIL	686:1:20376:20390	951311	3	True				
ANR	951386	AssignmentExpression	* foblist = NIL		951311	0		=			
ANR	951387	UnaryOperationExpression	* foblist		951311	0					
ANR	951388	UnaryOperator	*		951311	0					
ANR	951389	Identifier	foblist		951311	1					
ANR	951390	Identifier	NIL		951311	1					
ANR	951391	ReturnType	void		951311	1					
ANR	951392	Identifier	mail_free_foblist		951311	2					
ANR	951393	ParameterList	"FOBJECTLIST * * foblist , FOBJECTLIST * * tail"		951311	3					
ANR	951394	Parameter	FOBJECTLIST * * foblist	672:23:20123:20143	951311	0	True				
ANR	951395	ParameterType	FOBJECTLIST * *		951311	0					
ANR	951396	Identifier	foblist		951311	1					
ANR	951397	Parameter	FOBJECTLIST * * tail	672:46:20146:20163	951311	1	True				
ANR	951398	ParameterType	FOBJECTLIST * *		951311	0					
ANR	951399	Identifier	tail		951311	1					
ANR	951400	CFGEntryNode	ENTRY		951311		True				
ANR	951401	CFGExitNode	EXIT		951311		True				
ANR	951402	Symbol	next		951311						
ANR	951403	Symbol	cur		951311						
ANR	951404	Symbol	& cur		951311						
ANR	951405	Symbol	cur -> text		951311						
ANR	951406	Symbol	* tail		951311						
ANR	951407	Symbol	& cur -> text		951311						
ANR	951408	Symbol	tail		951311						
ANR	951409	Symbol	& cur -> text . data		951311						
ANR	951410	Symbol	foblist		951311						
ANR	951411	Symbol	cur -> text . data		951311						
ANR	951412	Symbol	NIL		951311						
ANR	951413	Symbol	* cur		951311						
ANR	951414	Symbol	* foblist		951311						
ANR	951415	Symbol	cur -> next		951311						
ANR	951416	Function	mail_newerrorlist	696:0:20513:20629							
ANR	951417	FunctionDef	mail_newerrorlist ()		951416	0					
ANR	951418	CompoundStatement		697:0:20548:20629	951416	0					
ANR	951419	ReturnStatement	"return ( ERRORLIST * ) memset ( fs_get ( sizeof ( ERRORLIST ) ) , 0 , sizeof ( ERRORLIST ) ) ;"	698:1:20551:20627	951416	0	True				
ANR	951420	CastExpression	"( ERRORLIST * ) memset ( fs_get ( sizeof ( ERRORLIST ) ) , 0 , sizeof ( ERRORLIST ) )"		951416	0					
ANR	951421	CastTarget	ERRORLIST *		951416	0					
ANR	951422	CallExpression	"memset ( fs_get ( sizeof ( ERRORLIST ) ) , 0 , sizeof ( ERRORLIST ) )"		951416	1					
ANR	951423	Callee	memset		951416	0					
ANR	951424	Identifier	memset		951416	0					
ANR	951425	ArgumentList	fs_get ( sizeof ( ERRORLIST ) )		951416	1					
ANR	951426	Argument	fs_get ( sizeof ( ERRORLIST ) )		951416	0					
ANR	951427	CallExpression	fs_get ( sizeof ( ERRORLIST ) )		951416	0					
ANR	951428	Callee	fs_get		951416	0					
ANR	951429	Identifier	fs_get		951416	0					
ANR	951430	ArgumentList	sizeof ( ERRORLIST )		951416	1					
ANR	951431	Argument	sizeof ( ERRORLIST )		951416	0					
ANR	951432	SizeofExpression	sizeof ( ERRORLIST )		951416	0					
ANR	951433	Sizeof	sizeof		951416	0					
ANR	951434	SizeofOperand	ERRORLIST		951416	1					
ANR	951435	Argument	0		951416	1					
ANR	951436	PrimaryExpression	0		951416	0					
ANR	951437	Argument	sizeof ( ERRORLIST )		951416	2					
ANR	951438	SizeofExpression	sizeof ( ERRORLIST )		951416	0					
ANR	951439	Sizeof	sizeof		951416	0					
ANR	951440	SizeofOperand	ERRORLIST		951416	1					
ANR	951441	ReturnType	ERRORLIST *		951416	1					
ANR	951442	Identifier	mail_newerrorlist		951416	2					
ANR	951443	ParameterList			951416	3					
ANR	951444	CFGEntryNode	ENTRY		951416		True				
ANR	951445	CFGExitNode	EXIT		951416		True				
ANR	951446	Symbol	fs_get		951416						
ANR	951447	Symbol	memset		951416						
ANR	951448	Function	mail_free_errorlist	708:0:20770:21055							
ANR	951449	FunctionDef	mail_free_errorlist (ERRORLIST * * errlist)		951448	0					
ANR	951450	CompoundStatement		709:0:20816:21055	951448	0					
ANR	951451	IfStatement	if ( * errlist )		951448	0					
ANR	951452	Condition	* errlist	710:5:20823:20830	951448	0	True				
ANR	951453	UnaryOperationExpression	* errlist		951448	0					
ANR	951454	UnaryOperator	*		951448	0					
ANR	951455	Identifier	errlist		951448	1					
ANR	951456	CompoundStatement		2:15:16:16	951448	1					
ANR	951457	IfStatement	if ( ( * errlist ) -> text . data )		951448	0					
ANR	951458	Condition	( * errlist ) -> text . data	711:6:20868:20888	951448	0	True				
ANR	951459	MemberAccess	( * errlist ) -> text . data		951448	0					
ANR	951460	PtrMemberAccess	( * errlist ) -> text		951448	0					
ANR	951461	UnaryOperationExpression	* errlist		951448	0					
ANR	951462	UnaryOperator	*		951448	0					
ANR	951463	Identifier	errlist		951448	1					
ANR	951464	Identifier	text		951448	1					
ANR	951465	Identifier	data		951448	1					
ANR	951466	CompoundStatement		3:29:74:74	951448	1					
ANR	951467	ExpressionStatement	fs_give ( ( void * * ) & ( * errlist ) -> text . data )	712:3:20896:20937	951448	0	True				
ANR	951468	CallExpression	fs_give ( ( void * * ) & ( * errlist ) -> text . data )		951448	0					
ANR	951469	Callee	fs_give		951448	0					
ANR	951470	Identifier	fs_give		951448	0					
ANR	951471	ArgumentList	( void * * ) & ( * errlist ) -> text . data		951448	1					
ANR	951472	Argument	( void * * ) & ( * errlist ) -> text . data		951448	0					
ANR	951473	CastExpression	( void * * ) & ( * errlist ) -> text . data		951448	0					
ANR	951474	CastTarget	void * *		951448	0					
ANR	951475	UnaryOperationExpression	& ( * errlist ) -> text . data		951448	1					
ANR	951476	UnaryOperator	&		951448	0					
ANR	951477	MemberAccess	( * errlist ) -> text . data		951448	1					
ANR	951478	PtrMemberAccess	( * errlist ) -> text		951448	0					
ANR	951479	UnaryOperationExpression	* errlist		951448	0					
ANR	951480	UnaryOperator	*		951448	0					
ANR	951481	Identifier	errlist		951448	1					
ANR	951482	Identifier	text		951448	1					
ANR	951483	Identifier	data		951448	1					
ANR	951484	ExpressionStatement	mail_free_errorlist ( & ( * errlist ) -> next )	714:2:20945:20984	951448	1	True				
ANR	951485	CallExpression	mail_free_errorlist ( & ( * errlist ) -> next )		951448	0					
ANR	951486	Callee	mail_free_errorlist		951448	0					
ANR	951487	Identifier	mail_free_errorlist		951448	0					
ANR	951488	ArgumentList	& ( * errlist ) -> next		951448	1					
ANR	951489	Argument	& ( * errlist ) -> next		951448	0					
ANR	951490	UnaryOperationExpression	& ( * errlist ) -> next		951448	0					
ANR	951491	UnaryOperator	&		951448	0					
ANR	951492	PtrMemberAccess	( * errlist ) -> next		951448	1					
ANR	951493	UnaryOperationExpression	* errlist		951448	0					
ANR	951494	UnaryOperator	*		951448	0					
ANR	951495	Identifier	errlist		951448	1					
ANR	951496	Identifier	next		951448	1					
ANR	951497	ExpressionStatement	fs_give ( ( void * * ) errlist )	715:2:20988:21014	951448	2	True				
ANR	951498	CallExpression	fs_give ( ( void * * ) errlist )		951448	0					
ANR	951499	Callee	fs_give		951448	0					
ANR	951500	Identifier	fs_give		951448	0					
ANR	951501	ArgumentList	( void * * ) errlist		951448	1					
ANR	951502	Argument	( void * * ) errlist		951448	0					
ANR	951503	CastExpression	( void * * ) errlist		951448	0					
ANR	951504	CastTarget	void * *		951448	0					
ANR	951505	Identifier	errlist		951448	1					
ANR	951506	ReturnType	void		951448	1					
ANR	951507	Identifier	mail_free_errorlist		951448	2					
ANR	951508	ParameterList	ERRORLIST * * errlist		951448	3					
ANR	951509	Parameter	ERRORLIST * * errlist	708:25:20795:20813	951448	0	True				
ANR	951510	ParameterType	ERRORLIST * *		951448	0					
ANR	951511	Identifier	errlist		951448	1					
ANR	951512	CFGEntryNode	ENTRY		951448		True				
ANR	951513	CFGExitNode	EXIT		951448		True				
ANR	951514	Symbol	& ( * errlist ) -> next		951448						
ANR	951515	Symbol	errlist		951448						
ANR	951516	Symbol	& ( * errlist ) -> text . data		951448						
ANR	951517	Symbol	& ( * errlist ) -> text		951448						
ANR	951518	Symbol	( * errlist ) -> text . data		951448						
ANR	951519	Symbol	* errlist		951448						
ANR	951520	Symbol	* * errlist		951448						
ANR	951521	Symbol	( * errlist ) -> text		951448						
ANR	951522	Function	mail_newmessagelist	726:0:21182:21308							
ANR	951523	FunctionDef	mail_newmessagelist ()		951522	0					
ANR	951524	CompoundStatement		727:0:21221:21308	951522	0					
ANR	951525	ReturnStatement	"return ( MESSAGELIST * ) memset ( fs_get ( sizeof ( MESSAGELIST ) ) , 0 , sizeof ( MESSAGELIST ) ) ;"	728:1:21224:21306	951522	0	True				
ANR	951526	CastExpression	"( MESSAGELIST * ) memset ( fs_get ( sizeof ( MESSAGELIST ) ) , 0 , sizeof ( MESSAGELIST ) )"		951522	0					
ANR	951527	CastTarget	MESSAGELIST *		951522	0					
ANR	951528	CallExpression	"memset ( fs_get ( sizeof ( MESSAGELIST ) ) , 0 , sizeof ( MESSAGELIST ) )"		951522	1					
ANR	951529	Callee	memset		951522	0					
ANR	951530	Identifier	memset		951522	0					
ANR	951531	ArgumentList	fs_get ( sizeof ( MESSAGELIST ) )		951522	1					
ANR	951532	Argument	fs_get ( sizeof ( MESSAGELIST ) )		951522	0					
ANR	951533	CallExpression	fs_get ( sizeof ( MESSAGELIST ) )		951522	0					
ANR	951534	Callee	fs_get		951522	0					
ANR	951535	Identifier	fs_get		951522	0					
ANR	951536	ArgumentList	sizeof ( MESSAGELIST )		951522	1					
ANR	951537	Argument	sizeof ( MESSAGELIST )		951522	0					
ANR	951538	SizeofExpression	sizeof ( MESSAGELIST )		951522	0					
ANR	951539	Sizeof	sizeof		951522	0					
ANR	951540	SizeofOperand	MESSAGELIST		951522	1					
ANR	951541	Argument	0		951522	1					
ANR	951542	PrimaryExpression	0		951522	0					
ANR	951543	Argument	sizeof ( MESSAGELIST )		951522	2					
ANR	951544	SizeofExpression	sizeof ( MESSAGELIST )		951522	0					
ANR	951545	Sizeof	sizeof		951522	0					
ANR	951546	SizeofOperand	MESSAGELIST		951522	1					
ANR	951547	ReturnType	MESSAGELIST *		951522	1					
ANR	951548	Identifier	mail_newmessagelist		951522	2					
ANR	951549	ParameterList			951522	3					
ANR	951550	CFGEntryNode	ENTRY		951522		True				
ANR	951551	CFGExitNode	EXIT		951522		True				
ANR	951552	Symbol	fs_get		951522						
ANR	951553	Symbol	memset		951522						
ANR	951554	Function	mail_free_messagelist	738:0:21451:21690							
ANR	951555	FunctionDef	"mail_free_messagelist (MESSAGELIST * * msglist , MESSAGELIST * * tail)"		951554	0					
ANR	951556	CompoundStatement		739:0:21521:21690	951554	0					
ANR	951557	IdentifierDeclStatement	"MESSAGELIST * cur , * next ;"	740:1:21524:21547	951554	0	True				
ANR	951558	IdentifierDecl	* cur		951554	0					
ANR	951559	IdentifierDeclType	MESSAGELIST *		951554	0					
ANR	951560	Identifier	cur		951554	1					
ANR	951561	IdentifierDecl	* next		951554	1					
ANR	951562	IdentifierDeclType	MESSAGELIST *		951554	0					
ANR	951563	Identifier	next		951554	1					
ANR	951564	ForStatement	"for ( cur = * msglist , next = cur -> next ; cur ; cur = next )"		951554	1					
ANR	951565	ForInit	"cur = * msglist , next = cur -> next ;"	742:6:21556:21588	951554	0	True				
ANR	951566	Expression	"cur = * msglist , next = cur -> next"		951554	0					
ANR	951567	AssignmentExpression	cur = * msglist		951554	0		=			
ANR	951568	Identifier	cur		951554	0					
ANR	951569	UnaryOperationExpression	* msglist		951554	1					
ANR	951570	UnaryOperator	*		951554	0					
ANR	951571	Identifier	msglist		951554	1					
ANR	951572	AssignmentExpression	next = cur -> next		951554	1		=			
ANR	951573	Identifier	next		951554	0					
ANR	951574	PtrMemberAccess	cur -> next		951554	1					
ANR	951575	Identifier	cur		951554	0					
ANR	951576	Identifier	next		951554	1					
ANR	951577	Condition	cur	742:40:21590:21592	951554	1	True				
ANR	951578	Identifier	cur		951554	0					
ANR	951579	AssignmentExpression	cur = next	742:45:21595:21604	951554	2	True	=			
ANR	951580	Identifier	cur		951554	0					
ANR	951581	Identifier	next		951554	1					
ANR	951582	CompoundStatement		4:57:85:85	951554	3					
ANR	951583	ExpressionStatement	next = cur -> next	743:2:21611:21627	951554	0	True				
ANR	951584	AssignmentExpression	next = cur -> next		951554	0		=			
ANR	951585	Identifier	next		951554	0					
ANR	951586	PtrMemberAccess	cur -> next		951554	1					
ANR	951587	Identifier	cur		951554	0					
ANR	951588	Identifier	next		951554	1					
ANR	951589	ExpressionStatement	fs_give ( ( void * * ) & cur )	744:2:21631:21653	951554	1	True				
ANR	951590	CallExpression	fs_give ( ( void * * ) & cur )		951554	0					
ANR	951591	Callee	fs_give		951554	0					
ANR	951592	Identifier	fs_give		951554	0					
ANR	951593	ArgumentList	( void * * ) & cur		951554	1					
ANR	951594	Argument	( void * * ) & cur		951554	0					
ANR	951595	CastExpression	( void * * ) & cur		951554	0					
ANR	951596	CastTarget	void * *		951554	0					
ANR	951597	UnaryOperationExpression	& cur		951554	1					
ANR	951598	UnaryOperator	&		951554	0					
ANR	951599	Identifier	cur		951554	1					
ANR	951600	ExpressionStatement	* tail = NIL	747:1:21660:21671	951554	2	True				
ANR	951601	AssignmentExpression	* tail = NIL		951554	0		=			
ANR	951602	UnaryOperationExpression	* tail		951554	0					
ANR	951603	UnaryOperator	*		951554	0					
ANR	951604	Identifier	tail		951554	1					
ANR	951605	Identifier	NIL		951554	1					
ANR	951606	ExpressionStatement	* msglist = NIL	748:1:21674:21688	951554	3	True				
ANR	951607	AssignmentExpression	* msglist = NIL		951554	0		=			
ANR	951608	UnaryOperationExpression	* msglist		951554	0					
ANR	951609	UnaryOperator	*		951554	0					
ANR	951610	Identifier	msglist		951554	1					
ANR	951611	Identifier	NIL		951554	1					
ANR	951612	ReturnType	void		951554	1					
ANR	951613	Identifier	mail_free_messagelist		951554	2					
ANR	951614	ParameterList	"MESSAGELIST * * msglist , MESSAGELIST * * tail"		951554	3					
ANR	951615	Parameter	MESSAGELIST * * msglist	738:27:21478:21498	951554	0	True				
ANR	951616	ParameterType	MESSAGELIST * *		951554	0					
ANR	951617	Identifier	msglist		951554	1					
ANR	951618	Parameter	MESSAGELIST * * tail	738:50:21501:21518	951554	1	True				
ANR	951619	ParameterType	MESSAGELIST * *		951554	0					
ANR	951620	Identifier	tail		951554	1					
ANR	951621	CFGEntryNode	ENTRY		951554		True				
ANR	951622	CFGExitNode	EXIT		951554		True				
ANR	951623	Symbol	next		951554						
ANR	951624	Symbol	NIL		951554						
ANR	951625	Symbol	cur		951554						
ANR	951626	Symbol	& cur		951554						
ANR	951627	Symbol	* tail		951554						
ANR	951628	Symbol	* cur		951554						
ANR	951629	Symbol	tail		951554						
ANR	951630	Symbol	* msglist		951554						
ANR	951631	Symbol	msglist		951554						
ANR	951632	Symbol	cur -> next		951554						
ANR	951633	Function	mail_getquota	760:0:21900:22617							
ANR	951634	FunctionDef	"mail_getquota (MAILSTREAM * stream , char * qroot , QUOTALIST * qlist)"		951633	0					
ANR	951635	CompoundStatement		761:0:21970:22617	951633	0					
ANR	951636	IdentifierDeclStatement	"zval t_map , * return_value ;"	762:1:21973:21998	951633	0	True				
ANR	951637	IdentifierDecl	t_map		951633	0					
ANR	951638	IdentifierDeclType	zval		951633	0					
ANR	951639	Identifier	t_map		951633	1					
ANR	951640	IdentifierDecl	* return_value		951633	1					
ANR	951641	IdentifierDeclType	zval *		951633	0					
ANR	951642	Identifier	return_value		951633	1					
ANR	951643	ExpressionStatement	return_value = * IMAPG ( quota_return )	764:1:22002:22037	951633	1	True				
ANR	951644	AssignmentExpression	return_value = * IMAPG ( quota_return )		951633	0		=			
ANR	951645	Identifier	return_value		951633	0					
ANR	951646	UnaryOperationExpression	* IMAPG ( quota_return )		951633	1					
ANR	951647	UnaryOperator	*		951633	0					
ANR	951648	CallExpression	IMAPG ( quota_return )		951633	1					
ANR	951649	Callee	IMAPG		951633	0					
ANR	951650	Identifier	IMAPG		951633	0					
ANR	951651	ArgumentList	quota_return		951633	1					
ANR	951652	Argument	quota_return		951633	0					
ANR	951653	Identifier	quota_return		951633	0					
ANR	951654	ForStatement	for ( ; qlist ; qlist = qlist -> next )		951633	2					
ANR	951655	Condition	qlist	767:7:22075:22079	951633	0	True				
ANR	951656	Identifier	qlist		951633	0					
ANR	951657	AssignmentExpression	qlist = qlist -> next	767:14:22082:22100	951633	1	True	=			
ANR	951658	Identifier	qlist		951633	0					
ANR	951659	PtrMemberAccess	qlist -> next		951633	1					
ANR	951660	Identifier	qlist		951633	0					
ANR	951661	Identifier	next		951633	1					
ANR	951662	CompoundStatement		7:35:132:132	951633	2					
ANR	951663	ExpressionStatement	array_init ( & t_map )	768:2:22107:22125	951633	0	True				
ANR	951664	CallExpression	array_init ( & t_map )		951633	0					
ANR	951665	Callee	array_init		951633	0					
ANR	951666	Identifier	array_init		951633	0					
ANR	951667	ArgumentList	& t_map		951633	1					
ANR	951668	Argument	& t_map		951633	0					
ANR	951669	UnaryOperationExpression	& t_map		951633	0					
ANR	951670	UnaryOperator	&		951633	0					
ANR	951671	Identifier	t_map		951633	1					
ANR	951672	IfStatement	"if ( strncmp ( qlist -> name , ""STORAGE"" , 7 ) == 0 )"		951633	1					
ANR	951673	Condition	"strncmp ( qlist -> name , ""STORAGE"" , 7 ) == 0"	769:6:22133:22171	951633	0	True				
ANR	951674	EqualityExpression	"strncmp ( qlist -> name , ""STORAGE"" , 7 ) == 0"		951633	0		==			
ANR	951675	CallExpression	"strncmp ( qlist -> name , ""STORAGE"" , 7 )"		951633	0					
ANR	951676	Callee	strncmp		951633	0					
ANR	951677	Identifier	strncmp		951633	0					
ANR	951678	ArgumentList	qlist -> name		951633	1					
ANR	951679	Argument	qlist -> name		951633	0					
ANR	951680	PtrMemberAccess	qlist -> name		951633	0					
ANR	951681	Identifier	qlist		951633	0					
ANR	951682	Identifier	name		951633	1					
ANR	951683	Argument	"""STORAGE"""		951633	1					
ANR	951684	PrimaryExpression	"""STORAGE"""		951633	0					
ANR	951685	Argument	7		951633	2					
ANR	951686	PrimaryExpression	7		951633	0					
ANR	951687	PrimaryExpression	0		951633	1					
ANR	951688	CompoundStatement		10:2:205:205	951633	1					
ANR	951689	ExpressionStatement	"add_assoc_long_ex ( return_value , ""usage"" , sizeof ( ""usage"" ) - 1 , qlist -> usage )"	772:3:22229:22304	951633	0	True				
ANR	951690	CallExpression	"add_assoc_long_ex ( return_value , ""usage"" , sizeof ( ""usage"" ) - 1 , qlist -> usage )"		951633	0					
ANR	951691	Callee	add_assoc_long_ex		951633	0					
ANR	951692	Identifier	add_assoc_long_ex		951633	0					
ANR	951693	ArgumentList	return_value		951633	1					
ANR	951694	Argument	return_value		951633	0					
ANR	951695	Identifier	return_value		951633	0					
ANR	951696	Argument	"""usage"""		951633	1					
ANR	951697	PrimaryExpression	"""usage"""		951633	0					
ANR	951698	Argument	"sizeof ( ""usage"" ) - 1"		951633	2					
ANR	951699	AdditiveExpression	"sizeof ( ""usage"" ) - 1"		951633	0		-			
ANR	951700	SizeofExpression	"sizeof ( ""usage"" )"		951633	0					
ANR	951701	Sizeof	sizeof		951633	0					
ANR	951702	PrimaryExpression	"""usage"""		951633	1					
ANR	951703	PrimaryExpression	1		951633	1					
ANR	951704	Argument	qlist -> usage		951633	3					
ANR	951705	PtrMemberAccess	qlist -> usage		951633	0					
ANR	951706	Identifier	qlist		951633	0					
ANR	951707	Identifier	usage		951633	1					
ANR	951708	ExpressionStatement	"add_assoc_long_ex ( return_value , ""limit"" , sizeof ( ""limit"" ) - 1 , qlist -> limit )"	773:3:22309:22384	951633	1	True				
ANR	951709	CallExpression	"add_assoc_long_ex ( return_value , ""limit"" , sizeof ( ""limit"" ) - 1 , qlist -> limit )"		951633	0					
ANR	951710	Callee	add_assoc_long_ex		951633	0					
ANR	951711	Identifier	add_assoc_long_ex		951633	0					
ANR	951712	ArgumentList	return_value		951633	1					
ANR	951713	Argument	return_value		951633	0					
ANR	951714	Identifier	return_value		951633	0					
ANR	951715	Argument	"""limit"""		951633	1					
ANR	951716	PrimaryExpression	"""limit"""		951633	0					
ANR	951717	Argument	"sizeof ( ""limit"" ) - 1"		951633	2					
ANR	951718	AdditiveExpression	"sizeof ( ""limit"" ) - 1"		951633	0		-			
ANR	951719	SizeofExpression	"sizeof ( ""limit"" )"		951633	0					
ANR	951720	Sizeof	sizeof		951633	0					
ANR	951721	PrimaryExpression	"""limit"""		951633	1					
ANR	951722	PrimaryExpression	1		951633	1					
ANR	951723	Argument	qlist -> limit		951633	3					
ANR	951724	PtrMemberAccess	qlist -> limit		951633	0					
ANR	951725	Identifier	qlist		951633	0					
ANR	951726	Identifier	limit		951633	1					
ANR	951727	ExpressionStatement	"add_assoc_long_ex ( & t_map , ""usage"" , sizeof ( ""usage"" ) - 1 , qlist -> usage )"	776:2:22393:22462	951633	2	True				
ANR	951728	CallExpression	"add_assoc_long_ex ( & t_map , ""usage"" , sizeof ( ""usage"" ) - 1 , qlist -> usage )"		951633	0					
ANR	951729	Callee	add_assoc_long_ex		951633	0					
ANR	951730	Identifier	add_assoc_long_ex		951633	0					
ANR	951731	ArgumentList	& t_map		951633	1					
ANR	951732	Argument	& t_map		951633	0					
ANR	951733	UnaryOperationExpression	& t_map		951633	0					
ANR	951734	UnaryOperator	&		951633	0					
ANR	951735	Identifier	t_map		951633	1					
ANR	951736	Argument	"""usage"""		951633	1					
ANR	951737	PrimaryExpression	"""usage"""		951633	0					
ANR	951738	Argument	"sizeof ( ""usage"" ) - 1"		951633	2					
ANR	951739	AdditiveExpression	"sizeof ( ""usage"" ) - 1"		951633	0		-			
ANR	951740	SizeofExpression	"sizeof ( ""usage"" )"		951633	0					
ANR	951741	Sizeof	sizeof		951633	0					
ANR	951742	PrimaryExpression	"""usage"""		951633	1					
ANR	951743	PrimaryExpression	1		951633	1					
ANR	951744	Argument	qlist -> usage		951633	3					
ANR	951745	PtrMemberAccess	qlist -> usage		951633	0					
ANR	951746	Identifier	qlist		951633	0					
ANR	951747	Identifier	usage		951633	1					
ANR	951748	ExpressionStatement	"add_assoc_long_ex ( & t_map , ""limit"" , sizeof ( ""limit"" ) - 1 , qlist -> limit )"	777:2:22466:22535	951633	3	True				
ANR	951749	CallExpression	"add_assoc_long_ex ( & t_map , ""limit"" , sizeof ( ""limit"" ) - 1 , qlist -> limit )"		951633	0					
ANR	951750	Callee	add_assoc_long_ex		951633	0					
ANR	951751	Identifier	add_assoc_long_ex		951633	0					
ANR	951752	ArgumentList	& t_map		951633	1					
ANR	951753	Argument	& t_map		951633	0					
ANR	951754	UnaryOperationExpression	& t_map		951633	0					
ANR	951755	UnaryOperator	&		951633	0					
ANR	951756	Identifier	t_map		951633	1					
ANR	951757	Argument	"""limit"""		951633	1					
ANR	951758	PrimaryExpression	"""limit"""		951633	0					
ANR	951759	Argument	"sizeof ( ""limit"" ) - 1"		951633	2					
ANR	951760	AdditiveExpression	"sizeof ( ""limit"" ) - 1"		951633	0		-			
ANR	951761	SizeofExpression	"sizeof ( ""limit"" )"		951633	0					
ANR	951762	Sizeof	sizeof		951633	0					
ANR	951763	PrimaryExpression	"""limit"""		951633	1					
ANR	951764	PrimaryExpression	1		951633	1					
ANR	951765	Argument	qlist -> limit		951633	3					
ANR	951766	PtrMemberAccess	qlist -> limit		951633	0					
ANR	951767	Identifier	qlist		951633	0					
ANR	951768	Identifier	limit		951633	1					
ANR	951769	ExpressionStatement	"add_assoc_zval_ex ( return_value , qlist -> name , strlen ( qlist -> name ) , & t_map )"	778:2:22539:22612	951633	4	True				
ANR	951770	CallExpression	"add_assoc_zval_ex ( return_value , qlist -> name , strlen ( qlist -> name ) , & t_map )"		951633	0					
ANR	951771	Callee	add_assoc_zval_ex		951633	0					
ANR	951772	Identifier	add_assoc_zval_ex		951633	0					
ANR	951773	ArgumentList	return_value		951633	1					
ANR	951774	Argument	return_value		951633	0					
ANR	951775	Identifier	return_value		951633	0					
ANR	951776	Argument	qlist -> name		951633	1					
ANR	951777	PtrMemberAccess	qlist -> name		951633	0					
ANR	951778	Identifier	qlist		951633	0					
ANR	951779	Identifier	name		951633	1					
ANR	951780	Argument	strlen ( qlist -> name )		951633	2					
ANR	951781	CallExpression	strlen ( qlist -> name )		951633	0					
ANR	951782	Callee	strlen		951633	0					
ANR	951783	Identifier	strlen		951633	0					
ANR	951784	ArgumentList	qlist -> name		951633	1					
ANR	951785	Argument	qlist -> name		951633	0					
ANR	951786	PtrMemberAccess	qlist -> name		951633	0					
ANR	951787	Identifier	qlist		951633	0					
ANR	951788	Identifier	name		951633	1					
ANR	951789	Argument	& t_map		951633	3					
ANR	951790	UnaryOperationExpression	& t_map		951633	0					
ANR	951791	UnaryOperator	&		951633	0					
ANR	951792	Identifier	t_map		951633	1					
ANR	951793	ReturnType	void		951633	1					
ANR	951794	Identifier	mail_getquota		951633	2					
ANR	951795	ParameterList	"MAILSTREAM * stream , char * qroot , QUOTALIST * qlist"		951633	3					
ANR	951796	Parameter	MAILSTREAM * stream	760:19:21919:21936	951633	0	True				
ANR	951797	ParameterType	MAILSTREAM *		951633	0					
ANR	951798	Identifier	stream		951633	1					
ANR	951799	Parameter	char * qroot	760:39:21939:21949	951633	1	True				
ANR	951800	ParameterType	char *		951633	0					
ANR	951801	Identifier	qroot		951633	1					
ANR	951802	Parameter	QUOTALIST * qlist	760:52:21952:21967	951633	2	True				
ANR	951803	ParameterType	QUOTALIST *		951633	0					
ANR	951804	Identifier	qlist		951633	1					
ANR	951805	CFGEntryNode	ENTRY		951633		True				
ANR	951806	CFGExitNode	EXIT		951633		True				
ANR	951807	Symbol	& t_map		951633						
ANR	951808	Symbol	return_value		951633						
ANR	951809	Symbol	qlist		951633						
ANR	951810	Symbol	qlist -> next		951633						
ANR	951811	Symbol	quota_return		951633						
ANR	951812	Symbol	qlist -> limit		951633						
ANR	951813	Symbol	* IMAPG ( quota_return )		951633						
ANR	951814	Symbol	qlist -> usage		951633						
ANR	951815	Symbol	strncmp		951633						
ANR	951816	Symbol	strlen		951633						
ANR	951817	Symbol	* qlist		951633						
ANR	951818	Symbol	stream		951633						
ANR	951819	Symbol	* IMAPG		951633						
ANR	951820	Symbol	IMAPG		951633						
ANR	951821	Symbol	qlist -> name		951633						
ANR	951822	Symbol	qroot		951633						
ANR	951823	Symbol	t_map		951633						
ANR	951824	Function	mail_getacl	788:0:22757:23000							
ANR	951825	FunctionDef	"mail_getacl (MAILSTREAM * stream , char * mailbox , ACLLIST * alist)"		951824	0					
ANR	951826	CompoundStatement		789:0:22825:23000	951824	0					
ANR	951827	ForStatement	for ( ; alist ; alist = alist -> next )		951824	0					
ANR	951828	Condition	alist	792:7:22867:22871	951824	0	True				
ANR	951829	Identifier	alist		951824	0					
ANR	951830	AssignmentExpression	alist = alist -> next	792:14:22874:22892	951824	1	True	=			
ANR	951831	Identifier	alist		951824	0					
ANR	951832	PtrMemberAccess	alist -> next		951824	1					
ANR	951833	Identifier	alist		951824	0					
ANR	951834	Identifier	next		951824	1					
ANR	951835	CompoundStatement		4:35:69:69	951824	2					
ANR	951836	ExpressionStatement	"add_assoc_stringl ( IMAPG ( imap_acl_list ) , alist -> identifier , alist -> rights , strlen ( alist -> rights ) )"	793:2:22899:22995	951824	0	True				
ANR	951837	CallExpression	"add_assoc_stringl ( IMAPG ( imap_acl_list ) , alist -> identifier , alist -> rights , strlen ( alist -> rights ) )"		951824	0					
ANR	951838	Callee	add_assoc_stringl		951824	0					
ANR	951839	Identifier	add_assoc_stringl		951824	0					
ANR	951840	ArgumentList	IMAPG ( imap_acl_list )		951824	1					
ANR	951841	Argument	IMAPG ( imap_acl_list )		951824	0					
ANR	951842	CallExpression	IMAPG ( imap_acl_list )		951824	0					
ANR	951843	Callee	IMAPG		951824	0					
ANR	951844	Identifier	IMAPG		951824	0					
ANR	951845	ArgumentList	imap_acl_list		951824	1					
ANR	951846	Argument	imap_acl_list		951824	0					
ANR	951847	Identifier	imap_acl_list		951824	0					
ANR	951848	Argument	alist -> identifier		951824	1					
ANR	951849	PtrMemberAccess	alist -> identifier		951824	0					
ANR	951850	Identifier	alist		951824	0					
ANR	951851	Identifier	identifier		951824	1					
ANR	951852	Argument	alist -> rights		951824	2					
ANR	951853	PtrMemberAccess	alist -> rights		951824	0					
ANR	951854	Identifier	alist		951824	0					
ANR	951855	Identifier	rights		951824	1					
ANR	951856	Argument	strlen ( alist -> rights )		951824	3					
ANR	951857	CallExpression	strlen ( alist -> rights )		951824	0					
ANR	951858	Callee	strlen		951824	0					
ANR	951859	Identifier	strlen		951824	0					
ANR	951860	ArgumentList	alist -> rights		951824	1					
ANR	951861	Argument	alist -> rights		951824	0					
ANR	951862	PtrMemberAccess	alist -> rights		951824	0					
ANR	951863	Identifier	alist		951824	0					
ANR	951864	Identifier	rights		951824	1					
ANR	951865	ReturnType	void		951824	1					
ANR	951866	Identifier	mail_getacl		951824	2					
ANR	951867	ParameterList	"MAILSTREAM * stream , char * mailbox , ACLLIST * alist"		951824	3					
ANR	951868	Parameter	MAILSTREAM * stream	788:17:22774:22791	951824	0	True				
ANR	951869	ParameterType	MAILSTREAM *		951824	0					
ANR	951870	Identifier	stream		951824	1					
ANR	951871	Parameter	char * mailbox	788:37:22794:22806	951824	1	True				
ANR	951872	ParameterType	char *		951824	0					
ANR	951873	Identifier	mailbox		951824	1					
ANR	951874	Parameter	ACLLIST * alist	788:52:22809:22822	951824	2	True				
ANR	951875	ParameterType	ACLLIST *		951824	0					
ANR	951876	Identifier	alist		951824	1					
ANR	951877	CFGEntryNode	ENTRY		951824		True				
ANR	951878	CFGExitNode	EXIT		951824		True				
ANR	951879	Symbol	strlen		951824						
ANR	951880	Symbol	mailbox		951824						
ANR	951881	Symbol	* alist		951824						
ANR	951882	Symbol	alist -> rights		951824						
ANR	951883	Symbol	alist -> next		951824						
ANR	951884	Symbol	stream		951824						
ANR	951885	Symbol	alist		951824						
ANR	951886	Symbol	alist -> identifier		951824						
ANR	951887	Symbol	imap_acl_list		951824						
ANR	951888	Symbol	IMAPG		951824						
ANR	951889	DeclStmt									
ANR	951890	Decl							unsigned long	unsigned long	sa_all
ANR	951891	DeclStmt									
ANR	951892	Decl							ERRORLIST	ERRORLIST *	ecur
ANR	951893	DeclStmt									
ANR	951894	Decl							STRINGLIST	STRINGLIST *	acur
ANR	951895	DeclStmt									
ANR	951896	Decl							zend_string	zend_string *	mailbox
ANR	951897	Decl							zend_string	zend_string *	user
ANR	951898	Decl							zend_string	zend_string *	passwd
ANR	951899	DeclStmt									
ANR	951900	Decl							zend_long	zend_long	retries
ANR	951901	Decl							zend_long	zend_long	flags
ANR	951902	Decl							zend_long	zend_long	cl_flags
ANR	951903	DeclStmt									
ANR	951904	Decl							MAILSTREAM	MAILSTREAM *	imap_stream
ANR	951905	DeclStmt									
ANR	951906	Decl							pils	pils *	imap_le_struct
ANR	951907	DeclStmt									
ANR	951908	Decl							zval	zval *	params
ANR	951909	DeclStmt									
ANR	951910	Decl							int	int	argc
ANR	951911	DeclStmt									
ANR	951912	Decl							zval	zval *	disabled_auth_method
ANR	951913	DeclStmt									
ANR	951914	Decl							zval	zval *	z_auth_method
ANR	951915	DeclStmt									
ANR	951916	Decl							int	int	i
ANR	951917	DeclStmt									
ANR	951918	Decl							int	int	nelems
ANR	951919	DeclStmt									
ANR	951920	Decl							zval	zval *	streamind
ANR	951921	DeclStmt									
ANR	951922	Decl							zend_string	zend_string *	mailbox
ANR	951923	DeclStmt									
ANR	951924	Decl							zend_long	zend_long	options
ANR	951925	Decl							zend_long	zend_long	retries
ANR	951926	DeclStmt									
ANR	951927	Decl							pils	pils *	imap_le_struct
ANR	951928	DeclStmt									
ANR	951929	Decl							long	long	flags
ANR	951930	DeclStmt									
ANR	951931	Decl							long	long	cl_flags
ANR	951932	DeclStmt									
ANR	951933	Decl							zval	zval *	streamind
ANR	951934	DeclStmt									
ANR	951935	Decl							zend_string	zend_string *	folder
ANR	951936	Decl							zend_string	zend_string *	message
ANR	951937	Decl							zend_string	zend_string *	internal_date
ANR	951938	Decl							zend_string	zend_string *	flags
ANR	951939	DeclStmt									
ANR	951940	Decl							pils	pils *	imap_le_struct
ANR	951941	DeclStmt									
ANR	951942	Decl							STRING	STRING	st
ANR	951943	DeclStmt									
ANR	951944	Decl							zend_string	zend_string *	regex
ANR	951945	DeclStmt									
ANR	951946	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	951947	DeclStmt									
ANR	951948	Decl							zval	zval *	subpats
ANR	951949	DeclStmt									
ANR	951950	Decl							long	long	regex_flags
ANR	951951	DeclStmt									
ANR	951952	Decl							long	long	start_offset
ANR	951953	DeclStmt									
ANR	951954	Decl							int	int	global
ANR	951955	DeclStmt									
ANR	951956	Decl							zval	zval *	streamind
ANR	951957	DeclStmt									
ANR	951958	Decl							pils	pils *	imap_le_struct
ANR	951959	DeclStmt									
ANR	951960	Decl							zval	zval *	streamind
ANR	951961	DeclStmt									
ANR	951962	Decl							pils	pils *	imap_le_struct
ANR	951963	DeclStmt									
ANR	951964	Decl							zval	zval *	streamind
ANR	951965	DeclStmt									
ANR	951966	Decl							pils	pils *	imap_le_struct
ANR	951967	DeclStmt									
ANR	951968	Decl							zval	zval *	streamind
ANR	951969	DeclStmt									
ANR	951970	Decl							zend_string	zend_string *	qroot
ANR	951971	DeclStmt									
ANR	951972	Decl							pils	pils *	imap_le_struct
ANR	951973	DeclStmt									
ANR	951974	Decl							zval	zval *	streamind
ANR	951975	DeclStmt									
ANR	951976	Decl							zend_string	zend_string *	mbox
ANR	951977	DeclStmt									
ANR	951978	Decl							pils	pils *	imap_le_struct
ANR	951979	DeclStmt									
ANR	951980	Decl							zval	zval *	streamind
ANR	951981	DeclStmt									
ANR	951982	Decl							zend_string	zend_string *	qroot
ANR	951983	DeclStmt									
ANR	951984	Decl							zend_long	zend_long	mailbox_size
ANR	951985	DeclStmt									
ANR	951986	Decl							pils	pils *	imap_le_struct
ANR	951987	DeclStmt									
ANR	951988	Decl							STRINGLIST	STRINGLIST	limits
ANR	951989	DeclStmt									
ANR	951990	Decl							zval	zval *	streamind
ANR	951991	DeclStmt									
ANR	951992	Decl							zend_string	zend_string *	mailbox
ANR	951993	Decl							zend_string	zend_string *	id
ANR	951994	Decl							zend_string	zend_string *	rights
ANR	951995	DeclStmt									
ANR	951996	Decl							pils	pils *	imap_le_struct
ANR	951997	DeclStmt									
ANR	951998	Decl							zval	zval *	streamind
ANR	951999	DeclStmt									
ANR	952000	Decl							zend_string	zend_string *	mailbox
ANR	952001	DeclStmt									
ANR	952002	Decl							pils	pils *	imap_le_struct
ANR	952003	DeclStmt									
ANR	952004	Decl							zval	zval *	streamind
ANR	952005	DeclStmt									
ANR	952006	Decl							pils	pils *	imap_le_struct
ANR	952007	DeclStmt									
ANR	952008	Decl							zval	zval *	streamind
ANR	952009	DeclStmt									
ANR	952010	Decl							pils	pils *	imap_le_struct
ANR	952011	DeclStmt									
ANR	952012	Decl							zend_long	zend_long	flags
ANR	952013	DeclStmt									
ANR	952014	Decl							zval	zval *	streamind
ANR	952015	DeclStmt									
ANR	952016	Decl							pils	pils *	imap_le_struct
ANR	952017	DeclStmt									
ANR	952018	Decl							zend_long	zend_long	options
ANR	952019	Decl							zend_long	zend_long	flags
ANR	952020	DeclStmt									
ANR	952021	Decl							int	int	argc
ANR	952022	DeclStmt									
ANR	952023	Decl							zval	zval *	streamind
ANR	952024	DeclStmt									
ANR	952025	Decl							pils	pils *	imap_le_struct
ANR	952026	DeclStmt									
ANR	952027	Decl							unsigned long	unsigned long	i
ANR	952028	DeclStmt									
ANR	952029	Decl							char	char *	t
ANR	952030	DeclStmt									
ANR	952031	Decl							unsigned int	unsigned int	msgno
ANR	952032	DeclStmt									
ANR	952033	Decl							char	char [ MAILTMPLEN ]	tmp
ANR	952034	DeclStmt									
ANR	952035	Decl							MESSAGECACHE	MESSAGECACHE *	cache
ANR	952036	DeclStmt									
ANR	952037	Decl							zval	zval *	streamind
ANR	952038	DeclStmt									
ANR	952039	Decl							zend_long	zend_long	msgno
ANR	952040	Decl							zend_long	zend_long	flags
ANR	952041	DeclStmt									
ANR	952042	Decl							pils	pils *	imap_le_struct
ANR	952043	DeclStmt									
ANR	952044	Decl							int	int	msgindex
ANR	952045	Decl							int	int	argc
ANR	952046	DeclStmt									
ANR	952047	Decl							char	char *	body
ANR	952048	DeclStmt									
ANR	952049	Decl							unsigned long	unsigned long	body_len
ANR	952050	DeclStmt									
ANR	952051	Decl							zval	zval *	streamind
ANR	952052	DeclStmt									
ANR	952053	Decl							zend_long	zend_long	options
ANR	952054	DeclStmt									
ANR	952055	Decl							zend_string	zend_string *	seq
ANR	952056	Decl							zend_string	zend_string *	folder
ANR	952057	DeclStmt									
ANR	952058	Decl							int	int	argc
ANR	952059	DeclStmt									
ANR	952060	Decl							pils	pils *	imap_le_struct
ANR	952061	DeclStmt									
ANR	952062	Decl							zval	zval *	streamind
ANR	952063	DeclStmt									
ANR	952064	Decl							zend_string	zend_string *	seq
ANR	952065	Decl							zend_string	zend_string *	folder
ANR	952066	DeclStmt									
ANR	952067	Decl							zend_long	zend_long	options
ANR	952068	DeclStmt									
ANR	952069	Decl							pils	pils *	imap_le_struct
ANR	952070	DeclStmt									
ANR	952071	Decl							int	int	argc
ANR	952072	DeclStmt									
ANR	952073	Decl							zval	zval *	streamind
ANR	952074	DeclStmt									
ANR	952075	Decl							zend_string	zend_string *	folder
ANR	952076	DeclStmt									
ANR	952077	Decl							pils	pils *	imap_le_struct
ANR	952078	DeclStmt									
ANR	952079	Decl							zval	zval *	streamind
ANR	952080	DeclStmt									
ANR	952081	Decl							zend_string	zend_string *	old_mailbox
ANR	952082	Decl							zend_string	zend_string *	new_mailbox
ANR	952083	DeclStmt									
ANR	952084	Decl							pils	pils *	imap_le_struct
ANR	952085	DeclStmt									
ANR	952086	Decl							zval	zval *	streamind
ANR	952087	DeclStmt									
ANR	952088	Decl							zend_string	zend_string *	folder
ANR	952089	DeclStmt									
ANR	952090	Decl							pils	pils *	imap_le_struct
ANR	952091	DeclStmt									
ANR	952092	Decl							zval	zval *	streamind
ANR	952093	DeclStmt									
ANR	952094	Decl							zend_string	zend_string *	ref
ANR	952095	Decl							zend_string	zend_string *	pat
ANR	952096	DeclStmt									
ANR	952097	Decl							pils	pils *	imap_le_struct
ANR	952098	DeclStmt									
ANR	952099	Decl							STRINGLIST	STRINGLIST *	cur
ANR	952100	DeclStmt									
ANR	952101	Decl							zval	zval *	streamind
ANR	952102	Decl							zval	zval	mboxob
ANR	952103	DeclStmt									
ANR	952104	Decl							zend_string	zend_string *	ref
ANR	952105	Decl							zend_string	zend_string *	pat
ANR	952106	DeclStmt									
ANR	952107	Decl							pils	pils *	imap_le_struct
ANR	952108	DeclStmt									
ANR	952109	Decl							FOBJECTLIST	FOBJECTLIST *	cur
ANR	952110	DeclStmt									
ANR	952111	Decl							char	char *	delim
ANR	952112	DeclStmt									
ANR	952113	Decl							zval	zval *	streamind
ANR	952114	DeclStmt									
ANR	952115	Decl							zend_string	zend_string *	ref
ANR	952116	Decl							zend_string	zend_string *	pat
ANR	952117	Decl							zend_string	zend_string *	content
ANR	952118	DeclStmt									
ANR	952119	Decl							pils	pils *	imap_le_struct
ANR	952120	DeclStmt									
ANR	952121	Decl							STRINGLIST	STRINGLIST *	cur
ANR	952122	DeclStmt									
ANR	952123	Decl							zval	zval *	streamind
ANR	952124	DeclStmt									
ANR	952125	Decl							pils	pils *	imap_le_struct
ANR	952126	DeclStmt									
ANR	952127	Decl							char	char [ 100 ]	date
ANR	952128	DeclStmt									
ANR	952129	Decl							zval	zval *	streamind
ANR	952130	Decl							zval	zval *	sequence
ANR	952131	DeclStmt									
ANR	952132	Decl							pils	pils *	imap_le_struct
ANR	952133	DeclStmt									
ANR	952134	Decl							zend_long	zend_long	flags
ANR	952135	DeclStmt									
ANR	952136	Decl							int	int	argc
ANR	952137	DeclStmt									
ANR	952138	Decl							zval	zval *	streamind
ANR	952139	Decl							zval	zval *	sequence
ANR	952140	DeclStmt									
ANR	952141	Decl							zend_long	zend_long	flags
ANR	952142	DeclStmt									
ANR	952143	Decl							pils	pils *	imap_le_struct
ANR	952144	DeclStmt									
ANR	952145	Decl							int	int	argc
ANR	952146	DeclStmt									
ANR	952147	Decl							zval	zval *	streamind
ANR	952148	DeclStmt									
ANR	952149	Decl							zend_string	zend_string *	defaulthost
ANR	952150	DeclStmt									
ANR	952151	Decl							int	int	argc
ANR	952152	DeclStmt									
ANR	952153	Decl							zend_long	zend_long	msgno
ANR	952154	Decl							zend_long	zend_long	fromlength
ANR	952155	Decl							zend_long	zend_long	subjectlength
ANR	952156	DeclStmt									
ANR	952157	Decl							pils	pils *	imap_le_struct
ANR	952158	DeclStmt									
ANR	952159	Decl							MESSAGECACHE	MESSAGECACHE *	cache
ANR	952160	DeclStmt									
ANR	952161	Decl							ENVELOPE	ENVELOPE *	en
ANR	952162	DeclStmt									
ANR	952163	Decl							char	char [ 2000 ]	dummy
ANR	952164	Decl							char	char [ MAILTMPLEN + 1 ]	fulladdress
ANR	952165	DeclStmt									
ANR	952166	Decl							zend_string	zend_string *	headers
ANR	952167	Decl							zend_string	zend_string *	defaulthost
ANR	952168	DeclStmt									
ANR	952169	Decl							ENVELOPE	ENVELOPE *	en
ANR	952170	DeclStmt									
ANR	952171	Decl							int	int	argc
ANR	952172	DeclStmt									
ANR	952173	Decl							zval	zval *	streamind
ANR	952174	DeclStmt									
ANR	952175	Decl							zend_string	zend_string *	ref
ANR	952176	Decl							zend_string	zend_string *	pat
ANR	952177	DeclStmt									
ANR	952178	Decl							pils	pils *	imap_le_struct
ANR	952179	DeclStmt									
ANR	952180	Decl							STRINGLIST	STRINGLIST *	cur
ANR	952181	DeclStmt									
ANR	952182	Decl							zval	zval *	streamind
ANR	952183	Decl							zval	zval	mboxob
ANR	952184	DeclStmt									
ANR	952185	Decl							zend_string	zend_string *	ref
ANR	952186	Decl							zend_string	zend_string *	pat
ANR	952187	DeclStmt									
ANR	952188	Decl							pils	pils *	imap_le_struct
ANR	952189	DeclStmt									
ANR	952190	Decl							FOBJECTLIST	FOBJECTLIST *	cur
ANR	952191	DeclStmt									
ANR	952192	Decl							char	char *	delim
ANR	952193	DeclStmt									
ANR	952194	Decl							zval	zval *	streamind
ANR	952195	DeclStmt									
ANR	952196	Decl							zend_string	zend_string *	folder
ANR	952197	DeclStmt									
ANR	952198	Decl							pils	pils *	imap_le_struct
ANR	952199	DeclStmt									
ANR	952200	Decl							zval	zval *	streamind
ANR	952201	DeclStmt									
ANR	952202	Decl							zend_string	zend_string *	folder
ANR	952203	DeclStmt									
ANR	952204	Decl							pils	pils *	imap_le_struct
ANR	952205	DeclStmt									
ANR	952206	Decl							zval	zval *	streamind
ANR	952207	DeclStmt									
ANR	952208	Decl							zend_long	zend_long	msgno
ANR	952209	Decl							zend_long	zend_long	flags
ANR	952210	DeclStmt									
ANR	952211	Decl							pils	pils *	imap_le_struct
ANR	952212	DeclStmt									
ANR	952213	Decl							BODY	BODY *	body
ANR	952214	DeclStmt									
ANR	952215	Decl							int	int	msgindex
ANR	952216	Decl							int	int	argc
ANR	952217	DeclStmt									
ANR	952218	Decl							zval	zval *	streamind
ANR	952219	DeclStmt									
ANR	952220	Decl							zend_long	zend_long	msgno
ANR	952221	Decl							zend_long	zend_long	flags
ANR	952222	DeclStmt									
ANR	952223	Decl							pils	pils *	imap_le_struct
ANR	952224	DeclStmt									
ANR	952225	Decl							char	char *	body
ANR	952226	DeclStmt									
ANR	952227	Decl							zend_string	zend_string *	sec
ANR	952228	DeclStmt									
ANR	952229	Decl							unsigned long	unsigned long	len
ANR	952230	DeclStmt									
ANR	952231	Decl							int	int	argc
ANR	952232	DeclStmt									
ANR	952233	Decl							zval	zval *	streamind
ANR	952234	DeclStmt									
ANR	952235	Decl							zend_long	zend_long	msgno
ANR	952236	Decl							zend_long	zend_long	flags
ANR	952237	DeclStmt									
ANR	952238	Decl							pils	pils *	imap_le_struct
ANR	952239	DeclStmt									
ANR	952240	Decl							char	char *	body
ANR	952241	DeclStmt									
ANR	952242	Decl							zend_string	zend_string *	sec
ANR	952243	DeclStmt									
ANR	952244	Decl							unsigned long	unsigned long	len
ANR	952245	DeclStmt									
ANR	952246	Decl							int	int	argc
ANR	952247	DeclStmt									
ANR	952248	Decl							zval	zval *	stream
ANR	952249	Decl							zval	zval *	out
ANR	952250	DeclStmt									
ANR	952251	Decl							pils	pils *	imap_ptr
ANR	952252	DeclStmt									
ANR	952253	Decl							php_stream	php_stream *	writer
ANR	952254	DeclStmt									
ANR	952255	Decl							zend_string	zend_string *	section
ANR	952256	DeclStmt									
ANR	952257	Decl							int	int	close_stream
ANR	952258	DeclStmt									
ANR	952259	Decl							zend_long	zend_long	msgno
ANR	952260	Decl							zend_long	zend_long	flags
ANR	952261	DeclStmt									
ANR	952262	Decl							zend_string	zend_string *	text
ANR	952263	DeclStmt									
ANR	952264	Decl							char	char *	decode
ANR	952265	DeclStmt									
ANR	952266	Decl							unsigned long	unsigned long	newlength
ANR	952267	DeclStmt									
ANR	952268	Decl							zend_string	zend_string *	text
ANR	952269	DeclStmt									
ANR	952270	Decl							char	char *	decode
ANR	952271	DeclStmt									
ANR	952272	Decl							unsigned long	unsigned long	newlength
ANR	952273	DeclStmt									
ANR	952274	Decl							zend_string	zend_string *	text
ANR	952275	DeclStmt									
ANR	952276	Decl							char	char *	decode
ANR	952277	DeclStmt									
ANR	952278	Decl							unsigned long	unsigned long	newlength
ANR	952279	DeclStmt									
ANR	952280	Decl							zend_string	zend_string *	text
ANR	952281	DeclStmt									
ANR	952282	Decl							char	char *	decode
ANR	952283	DeclStmt									
ANR	952284	Decl							unsigned long	unsigned long	newlength
ANR	952285	DeclStmt									
ANR	952286	Decl							zval	zval *	streamind
ANR	952287	DeclStmt									
ANR	952288	Decl							pils	pils *	imap_le_struct
ANR	952289	DeclStmt									
ANR	952290	Decl							char	char [ 100 ]	date
ANR	952291	DeclStmt									
ANR	952292	Decl							unsigned int	unsigned int	msgno
ANR	952293	Decl							unsigned int	unsigned int	unreadmsg
ANR	952294	Decl							unsigned int	unsigned int	deletedmsg
ANR	952295	Decl							unsigned int	unsigned int	msize
ANR	952296	DeclStmt									
ANR	952297	Decl							MESSAGECACHE	MESSAGECACHE *	cache
ANR	952298	DeclStmt									
ANR	952299	Decl							zend_string	zend_string *	mailbox
ANR	952300	Decl							zend_string	zend_string *	host
ANR	952301	Decl							zend_string	zend_string *	personal
ANR	952302	DeclStmt									
ANR	952303	Decl							ADDRESS	ADDRESS *	addr
ANR	952304	DeclStmt									
ANR	952305	Decl							zend_string	zend_string *	string
ANR	952306	DeclStmt									
ANR	952307	Decl							zval	zval	tovals
ANR	952308	DeclStmt									
ANR	952309	Decl							zend_string	zend_string *	str
ANR	952310	Decl							zend_string	zend_string *	defaulthost
ANR	952311	DeclStmt									
ANR	952312	Decl							char	char *	str_copy
ANR	952313	DeclStmt									
ANR	952314	Decl							ADDRESS	ADDRESS *	addresstmp
ANR	952315	DeclStmt									
ANR	952316	Decl							ENVELOPE	ENVELOPE *	env
ANR	952317	DeclStmt									
ANR	952318	Decl							zend_string	zend_string *	str
ANR	952319	DeclStmt									
ANR	952320	Decl							SIZEDTEXT	SIZEDTEXT	src
ANR	952321	Decl							SIZEDTEXT	SIZEDTEXT	dest
ANR	952322	DeclStmt									
ANR	952323	Decl							zend_string	zend_string *	arg
ANR	952324	DeclStmt									
ANR	952325	Decl							const unsigned char	const unsigned char *	in
ANR	952326	Decl							const unsigned char	const unsigned char *	inp
ANR	952327	Decl							const unsigned char	const unsigned char *	endp
ANR	952328	DeclStmt									
ANR	952329	Decl							unsigned char	unsigned char *	out
ANR	952330	Decl							unsigned char	unsigned char *	outp
ANR	952331	DeclStmt									
ANR	952332	Decl							unsigned char	unsigned char	c
ANR	952333	DeclStmt									
ANR	952334	Decl							int	int	inlen
ANR	952335	Decl							int	int	outlen
ANR	952336	ClassDef	<unnamed>	2796:1:81000:81135							
ANR	952337	DeclStmt									
ANR	952338	Decl									state
ANR	952339	DeclStmt									
ANR	952340	Decl							zend_string	zend_string *	arg
ANR	952341	DeclStmt									
ANR	952342	Decl							const unsigned char	const unsigned char *	in
ANR	952343	Decl							const unsigned char	const unsigned char *	inp
ANR	952344	Decl							const unsigned char	const unsigned char *	endp
ANR	952345	DeclStmt									
ANR	952346	Decl							zend_string	zend_string *	out
ANR	952347	DeclStmt									
ANR	952348	Decl							unsigned char	unsigned char *	outp
ANR	952349	DeclStmt									
ANR	952350	Decl							unsigned char	unsigned char	c
ANR	952351	DeclStmt									
ANR	952352	Decl							int	int	inlen
ANR	952353	Decl							int	int	outlen
ANR	952354	ClassDef	<unnamed>	2936:1:84101:84222							
ANR	952355	DeclStmt									
ANR	952356	Decl									state
ANR	952357	DeclStmt									
ANR	952358	Decl							zend_string	zend_string *	in
ANR	952359	DeclStmt									
ANR	952360	Decl							unsigned char	unsigned char *	out
ANR	952361	DeclStmt									
ANR	952362	Decl							zval	zval *	streamind
ANR	952363	DeclStmt									
ANR	952364	Decl							zend_string	zend_string *	sequence
ANR	952365	Decl							zend_string	zend_string *	flag
ANR	952366	DeclStmt									
ANR	952367	Decl							zend_long	zend_long	flags
ANR	952368	DeclStmt									
ANR	952369	Decl							pils	pils *	imap_le_struct
ANR	952370	DeclStmt									
ANR	952371	Decl							zval	zval *	streamind
ANR	952372	DeclStmt									
ANR	952373	Decl							zend_string	zend_string *	sequence
ANR	952374	Decl							zend_string	zend_string *	flag
ANR	952375	DeclStmt									
ANR	952376	Decl							zend_long	zend_long	flags
ANR	952377	DeclStmt									
ANR	952378	Decl							pils	pils *	imap_le_struct
ANR	952379	DeclStmt									
ANR	952380	Decl							int	int	argc
ANR	952381	DeclStmt									
ANR	952382	Decl							zval	zval *	streamind
ANR	952383	DeclStmt									
ANR	952384	Decl							zend_string	zend_string *	criteria
ANR	952385	Decl							zend_string	zend_string *	charset
ANR	952386	DeclStmt									
ANR	952387	Decl							zend_long	zend_long	pgm
ANR	952388	Decl							zend_long	zend_long	rev
ANR	952389	Decl							zend_long	zend_long	flags
ANR	952390	DeclStmt									
ANR	952391	Decl							pils	pils *	imap_le_struct
ANR	952392	DeclStmt									
ANR	952393	Decl							unsigned long	unsigned long *	slst
ANR	952394	Decl							unsigned long	unsigned long *	sl
ANR	952395	DeclStmt									
ANR	952396	Decl							char	char *	search_criteria
ANR	952397	DeclStmt									
ANR	952398	Decl							SORTPGM	SORTPGM *	mypgm
ANR	952399	DeclStmt									
ANR	952400	Decl							SEARCHPGM	SEARCHPGM *	spg
ANR	952401	DeclStmt									
ANR	952402	Decl							int	int	argc
ANR	952403	DeclStmt									
ANR	952404	Decl							zval	zval *	streamind
ANR	952405	DeclStmt									
ANR	952406	Decl							zend_long	zend_long	msgno
ANR	952407	Decl							zend_long	zend_long	flags
ANR	952408	DeclStmt									
ANR	952409	Decl							pils	pils *	imap_le_struct
ANR	952410	DeclStmt									
ANR	952411	Decl							int	int	msgindex
ANR	952412	Decl							int	int	argc
ANR	952413	DeclStmt									
ANR	952414	Decl							zval	zval *	streamind
ANR	952415	DeclStmt									
ANR	952416	Decl							zend_long	zend_long	msgno
ANR	952417	DeclStmt									
ANR	952418	Decl							pils	pils *	imap_le_struct
ANR	952419	DeclStmt									
ANR	952420	Decl							int	int	msgindex
ANR	952421	DeclStmt									
ANR	952422	Decl							zval	zval *	streamind
ANR	952423	DeclStmt									
ANR	952424	Decl							zend_long	zend_long	msgno
ANR	952425	DeclStmt									
ANR	952426	Decl							pils	pils *	imap_le_struct
ANR	952427	DeclStmt									
ANR	952428	Decl							zval	zval *	streamind
ANR	952429	DeclStmt									
ANR	952430	Decl							zend_string	zend_string *	mbx
ANR	952431	DeclStmt									
ANR	952432	Decl							zend_long	zend_long	flags
ANR	952433	DeclStmt									
ANR	952434	Decl							pils	pils *	imap_le_struct
ANR	952435	DeclStmt									
ANR	952436	Decl							zval	zval *	streamind
ANR	952437	DeclStmt									
ANR	952438	Decl							zend_long	zend_long	msg
ANR	952439	DeclStmt									
ANR	952440	Decl							zend_string	zend_string *	section
ANR	952441	DeclStmt									
ANR	952442	Decl							pils	pils *	imap_le_struct
ANR	952443	DeclStmt									
ANR	952444	Decl							zval	zval	parametres
ANR	952445	Decl							zval	zval	param
ANR	952446	Decl							zval	zval	dparametres
ANR	952447	Decl							zval	zval	dparam
ANR	952448	DeclStmt									
ANR	952449	Decl							PARAMETER	PARAMETER *	par
ANR	952450	Decl							PARAMETER	PARAMETER *	dpar
ANR	952451	DeclStmt									
ANR	952452	Decl							BODY	BODY *	body
ANR	952453	DeclStmt									
ANR	952454	Decl							zval	zval *	streamind
ANR	952455	DeclStmt									
ANR	952456	Decl							zend_string	zend_string *	sequence
ANR	952457	DeclStmt									
ANR	952458	Decl							pils	pils *	imap_le_struct
ANR	952459	DeclStmt									
ANR	952460	Decl							zval	zval	myoverview
ANR	952461	DeclStmt									
ANR	952462	Decl							zend_string	zend_string *	address
ANR	952463	DeclStmt									
ANR	952464	Decl							zend_long	zend_long	status
ANR	952465	Decl							zend_long	zend_long	flags
ANR	952466	DeclStmt									
ANR	952467	Decl							int	int	argc
ANR	952468	DeclStmt									
ANR	952469	Decl							MESSAGECACHE	MESSAGECACHE *	elt
ANR	952470	DeclStmt									
ANR	952471	Decl							ENVELOPE	ENVELOPE *	env
ANR	952472	DeclStmt									
ANR	952473	Decl							unsigned long	unsigned long	i
ANR	952474	DeclStmt									
ANR	952475	Decl							zval	zval *	envelope
ANR	952476	Decl							zval	zval *	body
ANR	952477	DeclStmt									
ANR	952478	Decl							zend_string	zend_string *	key
ANR	952479	DeclStmt									
ANR	952480	Decl							zval	zval *	data
ANR	952481	Decl							zval	zval *	pvalue
ANR	952482	Decl							zval	zval *	disp_data
ANR	952483	Decl							zval	zval *	env_data
ANR	952484	DeclStmt									
ANR	952485	Decl							char	char *	cookie
ANR	952486	DeclStmt									
ANR	952487	Decl							ENVELOPE	ENVELOPE *	env
ANR	952488	DeclStmt									
ANR	952489	Decl							BODY	BODY *	bod
ANR	952490	Decl							BODY	BODY *	topbod
ANR	952491	DeclStmt									
ANR	952492	Decl							PART	PART *	mypart
ANR	952493	Decl							PART	PART *	part
ANR	952494	DeclStmt									
ANR	952495	Decl							PARAMETER	PARAMETER *	param
ANR	952496	Decl							PARAMETER	PARAMETER *	disp_param
ANR	952497	Decl							PARAMETER	PARAMETER *	custom_headers_param
ANR	952498	Decl							PARAMETER	PARAMETER *	tmp_param
ANR	952499	DeclStmt									
ANR	952500	Decl							char	char *	tmp
ANR	952501	Decl							char	char *	mystring
ANR	952502	Decl							char	char *	t
ANR	952503	Decl							char	char *	tempstring
ANR	952504	Decl							char	char *	str_copy
ANR	952505	DeclStmt									
ANR	952506	Decl							int	int	toppart
ANR	952507	DeclStmt									
ANR	952508	Decl							int	int	first
ANR	952509	DeclStmt									
ANR	952510	Decl							short	short	type
ANR	952511	DeclStmt									
ANR	952512	Decl							int	int	l
ANR	952513	Decl							int	int	l2
ANR	952514	DeclStmt									
ANR	952515	Decl							PARAMETER	PARAMETER *	tp
ANR	952516	Function	_php_imap_mail	3925:0:114834:119370							
ANR	952517	FunctionDef	"_php_imap_mail (char * to , char * subject , char * message , char * headers , char * cc , char * bcc , char * rpath)"		952516	0					
ANR	952518	CompoundStatement		3926:0:114942:119370	952516	0					
ANR	952519	IdentifierDeclStatement	int tsm_err ;	3928:1:114962:114973	952516	0	True				
ANR	952520	IdentifierDecl	tsm_err		952516	0					
ANR	952521	IdentifierDeclType	int		952516	0					
ANR	952522	Identifier	tsm_err		952516	1					
ANR	952523	IdentifierDeclStatement	char * tempMailTo ;	3935:1:115034:115050	952516	1	True				
ANR	952524	IdentifierDecl	* tempMailTo		952516	0					
ANR	952525	IdentifierDeclType	char *		952516	0					
ANR	952526	Identifier	tempMailTo		952516	1					
ANR	952527	IdentifierDeclStatement	char * tsm_errmsg = NULL ;	3936:1:115053:115076	952516	2	True				
ANR	952528	IdentifierDecl	* tsm_errmsg = NULL		952516	0					
ANR	952529	IdentifierDeclType	char *		952516	0					
ANR	952530	Identifier	tsm_errmsg		952516	1					
ANR	952531	AssignmentExpression	* tsm_errmsg = NULL		952516	2		=			
ANR	952532	Identifier	NULL		952516	0					
ANR	952533	Identifier	NULL		952516	1					
ANR	952534	IdentifierDeclStatement	ADDRESS * addr ;	3937:1:115079:115092	952516	3	True				
ANR	952535	IdentifierDecl	* addr		952516	0					
ANR	952536	IdentifierDeclType	ADDRESS *		952516	0					
ANR	952537	Identifier	addr		952516	1					
ANR	952538	IdentifierDeclStatement	"char * bufferTo = NULL , * bufferCc = NULL , * bufferBcc = NULL , * bufferHeader = NULL ;"	3938:1:115095:115175	952516	4	True				
ANR	952539	IdentifierDecl	* bufferTo = NULL		952516	0					
ANR	952540	IdentifierDeclType	char *		952516	0					
ANR	952541	Identifier	bufferTo		952516	1					
ANR	952542	AssignmentExpression	* bufferTo = NULL		952516	2		=			
ANR	952543	Identifier	NULL		952516	0					
ANR	952544	Identifier	NULL		952516	1					
ANR	952545	IdentifierDecl	* bufferCc = NULL		952516	1					
ANR	952546	IdentifierDeclType	char *		952516	0					
ANR	952547	Identifier	bufferCc		952516	1					
ANR	952548	AssignmentExpression	* bufferCc = NULL		952516	2		=			
ANR	952549	Identifier	NULL		952516	0					
ANR	952550	Identifier	NULL		952516	1					
ANR	952551	IdentifierDecl	* bufferBcc = NULL		952516	2					
ANR	952552	IdentifierDeclType	char *		952516	0					
ANR	952553	Identifier	bufferBcc		952516	1					
ANR	952554	AssignmentExpression	* bufferBcc = NULL		952516	2		=			
ANR	952555	Identifier	NULL		952516	0					
ANR	952556	Identifier	NULL		952516	1					
ANR	952557	IdentifierDecl	* bufferHeader = NULL		952516	3					
ANR	952558	IdentifierDeclType	char *		952516	0					
ANR	952559	Identifier	bufferHeader		952516	1					
ANR	952560	AssignmentExpression	* bufferHeader = NULL		952516	2		=			
ANR	952561	Identifier	NULL		952516	0					
ANR	952562	Identifier	NULL		952516	1					
ANR	952563	IdentifierDeclStatement	"int offset , bufferLen = 0 ;"	3939:1:115178:115203	952516	5	True				
ANR	952564	IdentifierDecl	offset		952516	0					
ANR	952565	IdentifierDeclType	int		952516	0					
ANR	952566	Identifier	offset		952516	1					
ANR	952567	IdentifierDecl	bufferLen = 0		952516	1					
ANR	952568	IdentifierDeclType	int		952516	0					
ANR	952569	Identifier	bufferLen		952516	1					
ANR	952570	AssignmentExpression	bufferLen = 0		952516	2		=			
ANR	952571	Identifier	bufferLen		952516	0					
ANR	952572	PrimaryExpression	0		952516	1					
ANR	952573	IdentifierDeclStatement	size_t bt_len ;	3940:1:115206:115219	952516	6	True				
ANR	952574	IdentifierDecl	bt_len		952516	0					
ANR	952575	IdentifierDeclType	size_t		952516	0					
ANR	952576	Identifier	bt_len		952516	1					
ANR	952577	IfStatement	if ( headers )		952516	7					
ANR	952578	Condition	headers	3942:5:115227:115233	952516	0	True				
ANR	952579	Identifier	headers		952516	0					
ANR	952580	CompoundStatement		17:14:293:293	952516	1					
ANR	952581	ExpressionStatement	bufferLen += strlen ( headers )	3943:2:115240:115268	952516	0	True				
ANR	952582	AssignmentExpression	bufferLen += strlen ( headers )		952516	0		+=			
ANR	952583	Identifier	bufferLen		952516	0					
ANR	952584	CallExpression	strlen ( headers )		952516	1					
ANR	952585	Callee	strlen		952516	0					
ANR	952586	Identifier	strlen		952516	0					
ANR	952587	ArgumentList	headers		952516	1					
ANR	952588	Argument	headers		952516	0					
ANR	952589	Identifier	headers		952516	0					
ANR	952590	IfStatement	if ( to )		952516	8					
ANR	952591	Condition	to	3945:5:115278:115279	952516	0	True				
ANR	952592	Identifier	to		952516	0					
ANR	952593	CompoundStatement		20:9:339:339	952516	1					
ANR	952594	ExpressionStatement	bufferLen += strlen ( to ) + 6	3946:2:115286:115313	952516	0	True				
ANR	952595	AssignmentExpression	bufferLen += strlen ( to ) + 6		952516	0		+=			
ANR	952596	Identifier	bufferLen		952516	0					
ANR	952597	AdditiveExpression	strlen ( to ) + 6		952516	1		+			
ANR	952598	CallExpression	strlen ( to )		952516	0					
ANR	952599	Callee	strlen		952516	0					
ANR	952600	Identifier	strlen		952516	0					
ANR	952601	ArgumentList	to		952516	1					
ANR	952602	Argument	to		952516	0					
ANR	952603	Identifier	to		952516	0					
ANR	952604	PrimaryExpression	6		952516	1					
ANR	952605	IfStatement	if ( cc )		952516	9					
ANR	952606	Condition	cc	3948:5:115323:115324	952516	0	True				
ANR	952607	Identifier	cc		952516	0					
ANR	952608	CompoundStatement		23:9:384:384	952516	1					
ANR	952609	ExpressionStatement	bufferLen += strlen ( cc ) + 6	3949:2:115331:115358	952516	0	True				
ANR	952610	AssignmentExpression	bufferLen += strlen ( cc ) + 6		952516	0		+=			
ANR	952611	Identifier	bufferLen		952516	0					
ANR	952612	AdditiveExpression	strlen ( cc ) + 6		952516	1		+			
ANR	952613	CallExpression	strlen ( cc )		952516	0					
ANR	952614	Callee	strlen		952516	0					
ANR	952615	Identifier	strlen		952516	0					
ANR	952616	ArgumentList	cc		952516	1					
ANR	952617	Argument	cc		952516	0					
ANR	952618	Identifier	cc		952516	0					
ANR	952619	PrimaryExpression	6		952516	1					
ANR	952620	Statement	define	3952:1:115365:115370	952516	10	True				
ANR	952621	Statement	PHP_IMAP_CLEAN	3952:8:115372:115385	952516	11	True				
ANR	952622	IfStatement	if ( bufferTo )		952516	12					
ANR	952623	Condition	bufferTo	3952:27:115391:115398	952516	0	True				
ANR	952624	Identifier	bufferTo		952516	0					
ANR	952625	ExpressionStatement	efree ( bufferTo )	3952:37:115401:115416	952516	1	True				
ANR	952626	CallExpression	efree ( bufferTo )		952516	0					
ANR	952627	Callee	efree		952516	0					
ANR	952628	Identifier	efree		952516	0					
ANR	952629	ArgumentList	bufferTo		952516	1					
ANR	952630	Argument	bufferTo		952516	0					
ANR	952631	Identifier	bufferTo		952516	0					
ANR	952632	IfStatement	if ( bufferCc )		952516	13					
ANR	952633	Condition	bufferCc	3952:58:115422:115429	952516	0	True				
ANR	952634	Identifier	bufferCc		952516	0					
ANR	952635	ExpressionStatement	efree ( bufferCc )	3952:68:115432:115447	952516	1	True				
ANR	952636	CallExpression	efree ( bufferCc )		952516	0					
ANR	952637	Callee	efree		952516	0					
ANR	952638	Identifier	efree		952516	0					
ANR	952639	ArgumentList	bufferCc		952516	1					
ANR	952640	Argument	bufferCc		952516	0					
ANR	952641	Identifier	bufferCc		952516	0					
ANR	952642	IfStatement	if ( bufferBcc )		952516	14					
ANR	952643	Condition	bufferBcc	3952:89:115453:115461	952516	0	True				
ANR	952644	Identifier	bufferBcc		952516	0					
ANR	952645	ExpressionStatement	efree ( bufferBcc )	3952:100:115464:115480	952516	1	True				
ANR	952646	CallExpression	efree ( bufferBcc )		952516	0					
ANR	952647	Callee	efree		952516	0					
ANR	952648	Identifier	efree		952516	0					
ANR	952649	ArgumentList	bufferBcc		952516	1					
ANR	952650	Argument	bufferBcc		952516	0					
ANR	952651	Identifier	bufferBcc		952516	0					
ANR	952652	IfStatement	if ( bufferHeader )		952516	15					
ANR	952653	Condition	bufferHeader	3952:122:115486:115497	952516	0	True				
ANR	952654	Identifier	bufferHeader		952516	0					
ANR	952655	ExpressionStatement	efree ( bufferHeader )	3952:136:115500:115519	952516	1	True				
ANR	952656	CallExpression	efree ( bufferHeader )		952516	0					
ANR	952657	Callee	efree		952516	0					
ANR	952658	Identifier	efree		952516	0					
ANR	952659	ArgumentList	bufferHeader		952516	1					
ANR	952660	Argument	bufferHeader		952516	0					
ANR	952661	Identifier	bufferHeader		952516	0					
ANR	952662	IdentifierDeclStatement	define PHP_IMAP_BAD_DEST PHP_IMAP_CLEAN ;	3953:1:115522:115561	952516	16	True				
ANR	952663	IdentifierDecl	PHP_IMAP_CLEAN		952516	0					
ANR	952664	IdentifierDeclType	define PHP_IMAP_BAD_DEST		952516	0					
ANR	952665	Identifier	PHP_IMAP_CLEAN		952516	1					
ANR	952666	ExpressionStatement	efree ( tempMailTo )	3953:42:115563:115580	952516	17	True				
ANR	952667	CallExpression	efree ( tempMailTo )		952516	0					
ANR	952668	Callee	efree		952516	0					
ANR	952669	Identifier	efree		952516	0					
ANR	952670	ArgumentList	tempMailTo		952516	1					
ANR	952671	Argument	tempMailTo		952516	0					
ANR	952672	Identifier	tempMailTo		952516	0					
ANR	952673	ReturnStatement	return ( BAD_MSG_DESTINATION ) ;	3953:61:115582:115610	952516	18	True				
ANR	952674	Identifier	BAD_MSG_DESTINATION		952516	0					
ANR	952675	ExpressionStatement	bufferHeader = ( char * ) emalloc ( bufferLen + 1 )	3955:1:115614:115659	952516	19	True				
ANR	952676	AssignmentExpression	bufferHeader = ( char * ) emalloc ( bufferLen + 1 )		952516	0		=			
ANR	952677	Identifier	bufferHeader		952516	0					
ANR	952678	CastExpression	( char * ) emalloc ( bufferLen + 1 )		952516	1					
ANR	952679	CastTarget	char *		952516	0					
ANR	952680	CallExpression	emalloc ( bufferLen + 1 )		952516	1					
ANR	952681	Callee	emalloc		952516	0					
ANR	952682	Identifier	emalloc		952516	0					
ANR	952683	ArgumentList	bufferLen + 1		952516	1					
ANR	952684	Argument	bufferLen + 1		952516	0					
ANR	952685	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	952686	Identifier	bufferLen		952516	0					
ANR	952687	PrimaryExpression	1		952516	1					
ANR	952688	ExpressionStatement	"memset ( bufferHeader , 0 , bufferLen )"	3956:1:115662:115696	952516	20	True				
ANR	952689	CallExpression	"memset ( bufferHeader , 0 , bufferLen )"		952516	0					
ANR	952690	Callee	memset		952516	0					
ANR	952691	Identifier	memset		952516	0					
ANR	952692	ArgumentList	bufferHeader		952516	1					
ANR	952693	Argument	bufferHeader		952516	0					
ANR	952694	Identifier	bufferHeader		952516	0					
ANR	952695	Argument	0		952516	1					
ANR	952696	PrimaryExpression	0		952516	0					
ANR	952697	Argument	bufferLen		952516	2					
ANR	952698	Identifier	bufferLen		952516	0					
ANR	952699	IfStatement	if ( to && * to )		952516	21					
ANR	952700	Condition	to && * to	3957:5:115703:115711	952516	0	True				
ANR	952701	AndExpression	to && * to		952516	0		&&			
ANR	952702	Identifier	to		952516	0					
ANR	952703	UnaryOperationExpression	* to		952516	1					
ANR	952704	UnaryOperator	*		952516	0					
ANR	952705	Identifier	to		952516	1					
ANR	952706	CompoundStatement		32:16:771:771	952516	1					
ANR	952707	ExpressionStatement	"strlcat ( bufferHeader , ""To: "" , bufferLen + 1 )"	3958:2:115718:115762	952516	0	True				
ANR	952708	CallExpression	"strlcat ( bufferHeader , ""To: "" , bufferLen + 1 )"		952516	0					
ANR	952709	Callee	strlcat		952516	0					
ANR	952710	Identifier	strlcat		952516	0					
ANR	952711	ArgumentList	bufferHeader		952516	1					
ANR	952712	Argument	bufferHeader		952516	0					
ANR	952713	Identifier	bufferHeader		952516	0					
ANR	952714	Argument	"""To: """		952516	1					
ANR	952715	PrimaryExpression	"""To: """		952516	0					
ANR	952716	Argument	bufferLen + 1		952516	2					
ANR	952717	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	952718	Identifier	bufferLen		952516	0					
ANR	952719	PrimaryExpression	1		952516	1					
ANR	952720	ExpressionStatement	"strlcat ( bufferHeader , to , bufferLen + 1 )"	3959:2:115766:115806	952516	1	True				
ANR	952721	CallExpression	"strlcat ( bufferHeader , to , bufferLen + 1 )"		952516	0					
ANR	952722	Callee	strlcat		952516	0					
ANR	952723	Identifier	strlcat		952516	0					
ANR	952724	ArgumentList	bufferHeader		952516	1					
ANR	952725	Argument	bufferHeader		952516	0					
ANR	952726	Identifier	bufferHeader		952516	0					
ANR	952727	Argument	to		952516	1					
ANR	952728	Identifier	to		952516	0					
ANR	952729	Argument	bufferLen + 1		952516	2					
ANR	952730	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	952731	Identifier	bufferLen		952516	0					
ANR	952732	PrimaryExpression	1		952516	1					
ANR	952733	ExpressionStatement	"strlcat ( bufferHeader , ""\\r\\n"" , bufferLen + 1 )"	3960:2:115810:115854	952516	2	True				
ANR	952734	CallExpression	"strlcat ( bufferHeader , ""\\r\\n"" , bufferLen + 1 )"		952516	0					
ANR	952735	Callee	strlcat		952516	0					
ANR	952736	Identifier	strlcat		952516	0					
ANR	952737	ArgumentList	bufferHeader		952516	1					
ANR	952738	Argument	bufferHeader		952516	0					
ANR	952739	Identifier	bufferHeader		952516	0					
ANR	952740	Argument	"""\\r\\n"""		952516	1					
ANR	952741	PrimaryExpression	"""\\r\\n"""		952516	0					
ANR	952742	Argument	bufferLen + 1		952516	2					
ANR	952743	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	952744	Identifier	bufferLen		952516	0					
ANR	952745	PrimaryExpression	1		952516	1					
ANR	952746	ExpressionStatement	tempMailTo = estrdup ( to )	3961:2:115858:115882	952516	3	True				
ANR	952747	AssignmentExpression	tempMailTo = estrdup ( to )		952516	0		=			
ANR	952748	Identifier	tempMailTo		952516	0					
ANR	952749	CallExpression	estrdup ( to )		952516	1					
ANR	952750	Callee	estrdup		952516	0					
ANR	952751	Identifier	estrdup		952516	0					
ANR	952752	ArgumentList	to		952516	1					
ANR	952753	Argument	to		952516	0					
ANR	952754	Identifier	to		952516	0					
ANR	952755	ExpressionStatement	bt_len = strlen ( to )	3962:2:115886:115905	952516	4	True				
ANR	952756	AssignmentExpression	bt_len = strlen ( to )		952516	0		=			
ANR	952757	Identifier	bt_len		952516	0					
ANR	952758	CallExpression	strlen ( to )		952516	1					
ANR	952759	Callee	strlen		952516	0					
ANR	952760	Identifier	strlen		952516	0					
ANR	952761	ArgumentList	to		952516	1					
ANR	952762	Argument	to		952516	0					
ANR	952763	Identifier	to		952516	0					
ANR	952764	ExpressionStatement	"bufferTo = ( char * ) safe_emalloc ( bt_len , 1 , 1 )"	3963:2:115909:115954	952516	5	True				
ANR	952765	AssignmentExpression	"bufferTo = ( char * ) safe_emalloc ( bt_len , 1 , 1 )"		952516	0		=			
ANR	952766	Identifier	bufferTo		952516	0					
ANR	952767	CastExpression	"( char * ) safe_emalloc ( bt_len , 1 , 1 )"		952516	1					
ANR	952768	CastTarget	char *		952516	0					
ANR	952769	CallExpression	"safe_emalloc ( bt_len , 1 , 1 )"		952516	1					
ANR	952770	Callee	safe_emalloc		952516	0					
ANR	952771	Identifier	safe_emalloc		952516	0					
ANR	952772	ArgumentList	bt_len		952516	1					
ANR	952773	Argument	bt_len		952516	0					
ANR	952774	Identifier	bt_len		952516	0					
ANR	952775	Argument	1		952516	1					
ANR	952776	PrimaryExpression	1		952516	0					
ANR	952777	Argument	1		952516	2					
ANR	952778	PrimaryExpression	1		952516	0					
ANR	952779	ExpressionStatement	bt_len ++	3964:2:115958:115966	952516	6	True				
ANR	952780	PostIncDecOperationExpression	bt_len ++		952516	0					
ANR	952781	Identifier	bt_len		952516	0					
ANR	952782	IncDec	++		952516	1					
ANR	952783	ExpressionStatement	offset = 0	3965:2:115970:115980	952516	7	True				
ANR	952784	AssignmentExpression	offset = 0		952516	0		=			
ANR	952785	Identifier	offset		952516	0					
ANR	952786	PrimaryExpression	0		952516	1					
ANR	952787	ExpressionStatement	addr = NULL	3966:2:115984:115995	952516	8	True				
ANR	952788	AssignmentExpression	addr = NULL		952516	0		=			
ANR	952789	Identifier	addr		952516	0					
ANR	952790	Identifier	NULL		952516	1					
ANR	952791	ExpressionStatement	"rfc822_parse_adrlist ( & addr , tempMailTo , NULL )"	3967:2:115999:116044	952516	9	True				
ANR	952792	CallExpression	"rfc822_parse_adrlist ( & addr , tempMailTo , NULL )"		952516	0					
ANR	952793	Callee	rfc822_parse_adrlist		952516	0					
ANR	952794	Identifier	rfc822_parse_adrlist		952516	0					
ANR	952795	ArgumentList	& addr		952516	1					
ANR	952796	Argument	& addr		952516	0					
ANR	952797	UnaryOperationExpression	& addr		952516	0					
ANR	952798	UnaryOperator	&		952516	0					
ANR	952799	Identifier	addr		952516	1					
ANR	952800	Argument	tempMailTo		952516	1					
ANR	952801	Identifier	tempMailTo		952516	0					
ANR	952802	Argument	NULL		952516	2					
ANR	952803	Identifier	NULL		952516	0					
ANR	952804	WhileStatement	while ( addr )		952516	10					
ANR	952805	Condition	addr	3968:9:116055:116058	952516	0	True				
ANR	952806	Identifier	addr		952516	0					
ANR	952807	CompoundStatement		43:15:1118:1118	952516	1					
ANR	952808	IfStatement	"if ( addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0 )"		952516	0					
ANR	952809	Condition	"addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0"	3969:7:116070:116123	952516	0	True				
ANR	952810	OrExpression	"addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0"		952516	0		||			
ANR	952811	EqualityExpression	addr -> host == NULL		952516	0		==			
ANR	952812	PtrMemberAccess	addr -> host		952516	0					
ANR	952813	Identifier	addr		952516	0					
ANR	952814	Identifier	host		952516	1					
ANR	952815	Identifier	NULL		952516	1					
ANR	952816	EqualityExpression	"strcmp ( addr -> host , ERRHOST ) == 0"		952516	1		==			
ANR	952817	CallExpression	"strcmp ( addr -> host , ERRHOST )"		952516	0					
ANR	952818	Callee	strcmp		952516	0					
ANR	952819	Identifier	strcmp		952516	0					
ANR	952820	ArgumentList	addr -> host		952516	1					
ANR	952821	Argument	addr -> host		952516	0					
ANR	952822	PtrMemberAccess	addr -> host		952516	0					
ANR	952823	Identifier	addr		952516	0					
ANR	952824	Identifier	host		952516	1					
ANR	952825	Argument	ERRHOST		952516	1					
ANR	952826	Identifier	ERRHOST		952516	0					
ANR	952827	PrimaryExpression	0		952516	1					
ANR	952828	CompoundStatement		44:63:1183:1183	952516	1					
ANR	952829	ExpressionStatement	PHP_IMAP_BAD_DEST	3970:4:116132:116149	952516	0	True				
ANR	952830	Identifier	PHP_IMAP_BAD_DEST		952516	0					
ANR	952831	ElseStatement	else		952516	0					
ANR	952832	CompoundStatement		46:10:1218:1218	952516	0					
ANR	952833	ExpressionStatement	"bufferTo = safe_erealloc ( bufferTo , bt_len , 1 , strlen ( addr -> mailbox ) )"	3972:4:116167:116235	952516	0	True				
ANR	952834	AssignmentExpression	"bufferTo = safe_erealloc ( bufferTo , bt_len , 1 , strlen ( addr -> mailbox ) )"		952516	0		=			
ANR	952835	Identifier	bufferTo		952516	0					
ANR	952836	CallExpression	"safe_erealloc ( bufferTo , bt_len , 1 , strlen ( addr -> mailbox ) )"		952516	1					
ANR	952837	Callee	safe_erealloc		952516	0					
ANR	952838	Identifier	safe_erealloc		952516	0					
ANR	952839	ArgumentList	bufferTo		952516	1					
ANR	952840	Argument	bufferTo		952516	0					
ANR	952841	Identifier	bufferTo		952516	0					
ANR	952842	Argument	bt_len		952516	1					
ANR	952843	Identifier	bt_len		952516	0					
ANR	952844	Argument	1		952516	2					
ANR	952845	PrimaryExpression	1		952516	0					
ANR	952846	Argument	strlen ( addr -> mailbox )		952516	3					
ANR	952847	CallExpression	strlen ( addr -> mailbox )		952516	0					
ANR	952848	Callee	strlen		952516	0					
ANR	952849	Identifier	strlen		952516	0					
ANR	952850	ArgumentList	addr -> mailbox		952516	1					
ANR	952851	Argument	addr -> mailbox		952516	0					
ANR	952852	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	952853	Identifier	addr		952516	0					
ANR	952854	Identifier	mailbox		952516	1					
ANR	952855	ExpressionStatement	bt_len += strlen ( addr -> mailbox )	3973:4:116241:116272	952516	1	True				
ANR	952856	AssignmentExpression	bt_len += strlen ( addr -> mailbox )		952516	0		+=			
ANR	952857	Identifier	bt_len		952516	0					
ANR	952858	CallExpression	strlen ( addr -> mailbox )		952516	1					
ANR	952859	Callee	strlen		952516	0					
ANR	952860	Identifier	strlen		952516	0					
ANR	952861	ArgumentList	addr -> mailbox		952516	1					
ANR	952862	Argument	addr -> mailbox		952516	0					
ANR	952863	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	952864	Identifier	addr		952516	0					
ANR	952865	Identifier	mailbox		952516	1					
ANR	952866	ExpressionStatement	"bufferTo = safe_erealloc ( bufferTo , bt_len , 1 , strlen ( addr -> host ) )"	3974:4:116278:116343	952516	2	True				
ANR	952867	AssignmentExpression	"bufferTo = safe_erealloc ( bufferTo , bt_len , 1 , strlen ( addr -> host ) )"		952516	0		=			
ANR	952868	Identifier	bufferTo		952516	0					
ANR	952869	CallExpression	"safe_erealloc ( bufferTo , bt_len , 1 , strlen ( addr -> host ) )"		952516	1					
ANR	952870	Callee	safe_erealloc		952516	0					
ANR	952871	Identifier	safe_erealloc		952516	0					
ANR	952872	ArgumentList	bufferTo		952516	1					
ANR	952873	Argument	bufferTo		952516	0					
ANR	952874	Identifier	bufferTo		952516	0					
ANR	952875	Argument	bt_len		952516	1					
ANR	952876	Identifier	bt_len		952516	0					
ANR	952877	Argument	1		952516	2					
ANR	952878	PrimaryExpression	1		952516	0					
ANR	952879	Argument	strlen ( addr -> host )		952516	3					
ANR	952880	CallExpression	strlen ( addr -> host )		952516	0					
ANR	952881	Callee	strlen		952516	0					
ANR	952882	Identifier	strlen		952516	0					
ANR	952883	ArgumentList	addr -> host		952516	1					
ANR	952884	Argument	addr -> host		952516	0					
ANR	952885	PtrMemberAccess	addr -> host		952516	0					
ANR	952886	Identifier	addr		952516	0					
ANR	952887	Identifier	host		952516	1					
ANR	952888	ExpressionStatement	bt_len += strlen ( addr -> host )	3975:4:116349:116377	952516	3	True				
ANR	952889	AssignmentExpression	bt_len += strlen ( addr -> host )		952516	0		+=			
ANR	952890	Identifier	bt_len		952516	0					
ANR	952891	CallExpression	strlen ( addr -> host )		952516	1					
ANR	952892	Callee	strlen		952516	0					
ANR	952893	Identifier	strlen		952516	0					
ANR	952894	ArgumentList	addr -> host		952516	1					
ANR	952895	Argument	addr -> host		952516	0					
ANR	952896	PtrMemberAccess	addr -> host		952516	0					
ANR	952897	Identifier	addr		952516	0					
ANR	952898	Identifier	host		952516	1					
ANR	952899	ExpressionStatement	"offset += slprintf ( bufferTo + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"	3976:4:116383:116474	952516	4	True				
ANR	952900	AssignmentExpression	"offset += slprintf ( bufferTo + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"		952516	0		+=			
ANR	952901	Identifier	offset		952516	0					
ANR	952902	CallExpression	"slprintf ( bufferTo + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"		952516	1					
ANR	952903	Callee	slprintf		952516	0					
ANR	952904	Identifier	slprintf		952516	0					
ANR	952905	ArgumentList	bufferTo + offset		952516	1					
ANR	952906	Argument	bufferTo + offset		952516	0					
ANR	952907	AdditiveExpression	bufferTo + offset		952516	0		+			
ANR	952908	Identifier	bufferTo		952516	0					
ANR	952909	Identifier	offset		952516	1					
ANR	952910	Argument	bt_len - offset		952516	1					
ANR	952911	AdditiveExpression	bt_len - offset		952516	0		-			
ANR	952912	Identifier	bt_len		952516	0					
ANR	952913	Identifier	offset		952516	1					
ANR	952914	Argument	"""%s@%s,"""		952516	2					
ANR	952915	PrimaryExpression	"""%s@%s,"""		952516	0					
ANR	952916	Argument	addr -> mailbox		952516	3					
ANR	952917	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	952918	Identifier	addr		952516	0					
ANR	952919	Identifier	mailbox		952516	1					
ANR	952920	Argument	addr -> host		952516	4					
ANR	952921	PtrMemberAccess	addr -> host		952516	0					
ANR	952922	Identifier	addr		952516	0					
ANR	952923	Identifier	host		952516	1					
ANR	952924	ExpressionStatement	addr = addr -> next	3978:3:116484:116501	952516	1	True				
ANR	952925	AssignmentExpression	addr = addr -> next		952516	0		=			
ANR	952926	Identifier	addr		952516	0					
ANR	952927	PtrMemberAccess	addr -> next		952516	1					
ANR	952928	Identifier	addr		952516	0					
ANR	952929	Identifier	next		952516	1					
ANR	952930	ExpressionStatement	efree ( tempMailTo )	3980:2:116509:116526	952516	11	True				
ANR	952931	CallExpression	efree ( tempMailTo )		952516	0					
ANR	952932	Callee	efree		952516	0					
ANR	952933	Identifier	efree		952516	0					
ANR	952934	ArgumentList	tempMailTo		952516	1					
ANR	952935	Argument	tempMailTo		952516	0					
ANR	952936	Identifier	tempMailTo		952516	0					
ANR	952937	IfStatement	if ( offset > 0 )		952516	12					
ANR	952938	Condition	offset > 0	3981:6:116534:116541	952516	0	True				
ANR	952939	RelationalExpression	offset > 0		952516	0		>			
ANR	952940	Identifier	offset		952516	0					
ANR	952941	PrimaryExpression	0		952516	1					
ANR	952942	CompoundStatement		56:16:1601:1601	952516	1					
ANR	952943	ExpressionStatement	bufferTo [ offset - 1 ] = 0	3982:3:116549:116571	952516	0	True				
ANR	952944	AssignmentExpression	bufferTo [ offset - 1 ] = 0		952516	0		=			
ANR	952945	ArrayIndexing	bufferTo [ offset - 1 ]		952516	0					
ANR	952946	Identifier	bufferTo		952516	0					
ANR	952947	AdditiveExpression	offset - 1		952516	1		-			
ANR	952948	Identifier	offset		952516	0					
ANR	952949	PrimaryExpression	1		952516	1					
ANR	952950	PrimaryExpression	0		952516	1					
ANR	952951	IfStatement	if ( cc && * cc )		952516	22					
ANR	952952	Condition	cc && * cc	3986:5:116586:116594	952516	0	True				
ANR	952953	AndExpression	cc && * cc		952516	0		&&			
ANR	952954	Identifier	cc		952516	0					
ANR	952955	UnaryOperationExpression	* cc		952516	1					
ANR	952956	UnaryOperator	*		952516	0					
ANR	952957	Identifier	cc		952516	1					
ANR	952958	CompoundStatement		61:16:1654:1654	952516	1					
ANR	952959	ExpressionStatement	"strlcat ( bufferHeader , ""Cc: "" , bufferLen + 1 )"	3987:2:116601:116645	952516	0	True				
ANR	952960	CallExpression	"strlcat ( bufferHeader , ""Cc: "" , bufferLen + 1 )"		952516	0					
ANR	952961	Callee	strlcat		952516	0					
ANR	952962	Identifier	strlcat		952516	0					
ANR	952963	ArgumentList	bufferHeader		952516	1					
ANR	952964	Argument	bufferHeader		952516	0					
ANR	952965	Identifier	bufferHeader		952516	0					
ANR	952966	Argument	"""Cc: """		952516	1					
ANR	952967	PrimaryExpression	"""Cc: """		952516	0					
ANR	952968	Argument	bufferLen + 1		952516	2					
ANR	952969	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	952970	Identifier	bufferLen		952516	0					
ANR	952971	PrimaryExpression	1		952516	1					
ANR	952972	ExpressionStatement	"strlcat ( bufferHeader , cc , bufferLen + 1 )"	3988:2:116649:116689	952516	1	True				
ANR	952973	CallExpression	"strlcat ( bufferHeader , cc , bufferLen + 1 )"		952516	0					
ANR	952974	Callee	strlcat		952516	0					
ANR	952975	Identifier	strlcat		952516	0					
ANR	952976	ArgumentList	bufferHeader		952516	1					
ANR	952977	Argument	bufferHeader		952516	0					
ANR	952978	Identifier	bufferHeader		952516	0					
ANR	952979	Argument	cc		952516	1					
ANR	952980	Identifier	cc		952516	0					
ANR	952981	Argument	bufferLen + 1		952516	2					
ANR	952982	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	952983	Identifier	bufferLen		952516	0					
ANR	952984	PrimaryExpression	1		952516	1					
ANR	952985	ExpressionStatement	"strlcat ( bufferHeader , ""\\r\\n"" , bufferLen + 1 )"	3989:2:116693:116737	952516	2	True				
ANR	952986	CallExpression	"strlcat ( bufferHeader , ""\\r\\n"" , bufferLen + 1 )"		952516	0					
ANR	952987	Callee	strlcat		952516	0					
ANR	952988	Identifier	strlcat		952516	0					
ANR	952989	ArgumentList	bufferHeader		952516	1					
ANR	952990	Argument	bufferHeader		952516	0					
ANR	952991	Identifier	bufferHeader		952516	0					
ANR	952992	Argument	"""\\r\\n"""		952516	1					
ANR	952993	PrimaryExpression	"""\\r\\n"""		952516	0					
ANR	952994	Argument	bufferLen + 1		952516	2					
ANR	952995	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	952996	Identifier	bufferLen		952516	0					
ANR	952997	PrimaryExpression	1		952516	1					
ANR	952998	ExpressionStatement	tempMailTo = estrdup ( cc )	3990:2:116741:116765	952516	3	True				
ANR	952999	AssignmentExpression	tempMailTo = estrdup ( cc )		952516	0		=			
ANR	953000	Identifier	tempMailTo		952516	0					
ANR	953001	CallExpression	estrdup ( cc )		952516	1					
ANR	953002	Callee	estrdup		952516	0					
ANR	953003	Identifier	estrdup		952516	0					
ANR	953004	ArgumentList	cc		952516	1					
ANR	953005	Argument	cc		952516	0					
ANR	953006	Identifier	cc		952516	0					
ANR	953007	ExpressionStatement	bt_len = strlen ( cc )	3991:2:116769:116788	952516	4	True				
ANR	953008	AssignmentExpression	bt_len = strlen ( cc )		952516	0		=			
ANR	953009	Identifier	bt_len		952516	0					
ANR	953010	CallExpression	strlen ( cc )		952516	1					
ANR	953011	Callee	strlen		952516	0					
ANR	953012	Identifier	strlen		952516	0					
ANR	953013	ArgumentList	cc		952516	1					
ANR	953014	Argument	cc		952516	0					
ANR	953015	Identifier	cc		952516	0					
ANR	953016	ExpressionStatement	"bufferCc = ( char * ) safe_emalloc ( bt_len , 1 , 1 )"	3992:2:116792:116837	952516	5	True				
ANR	953017	AssignmentExpression	"bufferCc = ( char * ) safe_emalloc ( bt_len , 1 , 1 )"		952516	0		=			
ANR	953018	Identifier	bufferCc		952516	0					
ANR	953019	CastExpression	"( char * ) safe_emalloc ( bt_len , 1 , 1 )"		952516	1					
ANR	953020	CastTarget	char *		952516	0					
ANR	953021	CallExpression	"safe_emalloc ( bt_len , 1 , 1 )"		952516	1					
ANR	953022	Callee	safe_emalloc		952516	0					
ANR	953023	Identifier	safe_emalloc		952516	0					
ANR	953024	ArgumentList	bt_len		952516	1					
ANR	953025	Argument	bt_len		952516	0					
ANR	953026	Identifier	bt_len		952516	0					
ANR	953027	Argument	1		952516	1					
ANR	953028	PrimaryExpression	1		952516	0					
ANR	953029	Argument	1		952516	2					
ANR	953030	PrimaryExpression	1		952516	0					
ANR	953031	ExpressionStatement	bt_len ++	3993:2:116841:116849	952516	6	True				
ANR	953032	PostIncDecOperationExpression	bt_len ++		952516	0					
ANR	953033	Identifier	bt_len		952516	0					
ANR	953034	IncDec	++		952516	1					
ANR	953035	ExpressionStatement	offset = 0	3994:2:116853:116863	952516	7	True				
ANR	953036	AssignmentExpression	offset = 0		952516	0		=			
ANR	953037	Identifier	offset		952516	0					
ANR	953038	PrimaryExpression	0		952516	1					
ANR	953039	ExpressionStatement	addr = NULL	3995:2:116867:116878	952516	8	True				
ANR	953040	AssignmentExpression	addr = NULL		952516	0		=			
ANR	953041	Identifier	addr		952516	0					
ANR	953042	Identifier	NULL		952516	1					
ANR	953043	ExpressionStatement	"rfc822_parse_adrlist ( & addr , tempMailTo , NULL )"	3996:2:116882:116927	952516	9	True				
ANR	953044	CallExpression	"rfc822_parse_adrlist ( & addr , tempMailTo , NULL )"		952516	0					
ANR	953045	Callee	rfc822_parse_adrlist		952516	0					
ANR	953046	Identifier	rfc822_parse_adrlist		952516	0					
ANR	953047	ArgumentList	& addr		952516	1					
ANR	953048	Argument	& addr		952516	0					
ANR	953049	UnaryOperationExpression	& addr		952516	0					
ANR	953050	UnaryOperator	&		952516	0					
ANR	953051	Identifier	addr		952516	1					
ANR	953052	Argument	tempMailTo		952516	1					
ANR	953053	Identifier	tempMailTo		952516	0					
ANR	953054	Argument	NULL		952516	2					
ANR	953055	Identifier	NULL		952516	0					
ANR	953056	WhileStatement	while ( addr )		952516	10					
ANR	953057	Condition	addr	3997:9:116938:116941	952516	0	True				
ANR	953058	Identifier	addr		952516	0					
ANR	953059	CompoundStatement		72:15:2001:2001	952516	1					
ANR	953060	IfStatement	"if ( addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0 )"		952516	0					
ANR	953061	Condition	"addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0"	3998:7:116953:117006	952516	0	True				
ANR	953062	OrExpression	"addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0"		952516	0		||			
ANR	953063	EqualityExpression	addr -> host == NULL		952516	0		==			
ANR	953064	PtrMemberAccess	addr -> host		952516	0					
ANR	953065	Identifier	addr		952516	0					
ANR	953066	Identifier	host		952516	1					
ANR	953067	Identifier	NULL		952516	1					
ANR	953068	EqualityExpression	"strcmp ( addr -> host , ERRHOST ) == 0"		952516	1		==			
ANR	953069	CallExpression	"strcmp ( addr -> host , ERRHOST )"		952516	0					
ANR	953070	Callee	strcmp		952516	0					
ANR	953071	Identifier	strcmp		952516	0					
ANR	953072	ArgumentList	addr -> host		952516	1					
ANR	953073	Argument	addr -> host		952516	0					
ANR	953074	PtrMemberAccess	addr -> host		952516	0					
ANR	953075	Identifier	addr		952516	0					
ANR	953076	Identifier	host		952516	1					
ANR	953077	Argument	ERRHOST		952516	1					
ANR	953078	Identifier	ERRHOST		952516	0					
ANR	953079	PrimaryExpression	0		952516	1					
ANR	953080	CompoundStatement		73:63:2066:2066	952516	1					
ANR	953081	ExpressionStatement	PHP_IMAP_BAD_DEST	3999:4:117015:117032	952516	0	True				
ANR	953082	Identifier	PHP_IMAP_BAD_DEST		952516	0					
ANR	953083	ElseStatement	else		952516	0					
ANR	953084	CompoundStatement		75:10:2101:2101	952516	0					
ANR	953085	ExpressionStatement	"bufferCc = safe_erealloc ( bufferCc , bt_len , 1 , strlen ( addr -> mailbox ) )"	4001:4:117050:117118	952516	0	True				
ANR	953086	AssignmentExpression	"bufferCc = safe_erealloc ( bufferCc , bt_len , 1 , strlen ( addr -> mailbox ) )"		952516	0		=			
ANR	953087	Identifier	bufferCc		952516	0					
ANR	953088	CallExpression	"safe_erealloc ( bufferCc , bt_len , 1 , strlen ( addr -> mailbox ) )"		952516	1					
ANR	953089	Callee	safe_erealloc		952516	0					
ANR	953090	Identifier	safe_erealloc		952516	0					
ANR	953091	ArgumentList	bufferCc		952516	1					
ANR	953092	Argument	bufferCc		952516	0					
ANR	953093	Identifier	bufferCc		952516	0					
ANR	953094	Argument	bt_len		952516	1					
ANR	953095	Identifier	bt_len		952516	0					
ANR	953096	Argument	1		952516	2					
ANR	953097	PrimaryExpression	1		952516	0					
ANR	953098	Argument	strlen ( addr -> mailbox )		952516	3					
ANR	953099	CallExpression	strlen ( addr -> mailbox )		952516	0					
ANR	953100	Callee	strlen		952516	0					
ANR	953101	Identifier	strlen		952516	0					
ANR	953102	ArgumentList	addr -> mailbox		952516	1					
ANR	953103	Argument	addr -> mailbox		952516	0					
ANR	953104	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	953105	Identifier	addr		952516	0					
ANR	953106	Identifier	mailbox		952516	1					
ANR	953107	ExpressionStatement	bt_len += strlen ( addr -> mailbox )	4002:4:117124:117155	952516	1	True				
ANR	953108	AssignmentExpression	bt_len += strlen ( addr -> mailbox )		952516	0		+=			
ANR	953109	Identifier	bt_len		952516	0					
ANR	953110	CallExpression	strlen ( addr -> mailbox )		952516	1					
ANR	953111	Callee	strlen		952516	0					
ANR	953112	Identifier	strlen		952516	0					
ANR	953113	ArgumentList	addr -> mailbox		952516	1					
ANR	953114	Argument	addr -> mailbox		952516	0					
ANR	953115	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	953116	Identifier	addr		952516	0					
ANR	953117	Identifier	mailbox		952516	1					
ANR	953118	ExpressionStatement	"bufferCc = safe_erealloc ( bufferCc , bt_len , 1 , strlen ( addr -> host ) )"	4003:4:117161:117226	952516	2	True				
ANR	953119	AssignmentExpression	"bufferCc = safe_erealloc ( bufferCc , bt_len , 1 , strlen ( addr -> host ) )"		952516	0		=			
ANR	953120	Identifier	bufferCc		952516	0					
ANR	953121	CallExpression	"safe_erealloc ( bufferCc , bt_len , 1 , strlen ( addr -> host ) )"		952516	1					
ANR	953122	Callee	safe_erealloc		952516	0					
ANR	953123	Identifier	safe_erealloc		952516	0					
ANR	953124	ArgumentList	bufferCc		952516	1					
ANR	953125	Argument	bufferCc		952516	0					
ANR	953126	Identifier	bufferCc		952516	0					
ANR	953127	Argument	bt_len		952516	1					
ANR	953128	Identifier	bt_len		952516	0					
ANR	953129	Argument	1		952516	2					
ANR	953130	PrimaryExpression	1		952516	0					
ANR	953131	Argument	strlen ( addr -> host )		952516	3					
ANR	953132	CallExpression	strlen ( addr -> host )		952516	0					
ANR	953133	Callee	strlen		952516	0					
ANR	953134	Identifier	strlen		952516	0					
ANR	953135	ArgumentList	addr -> host		952516	1					
ANR	953136	Argument	addr -> host		952516	0					
ANR	953137	PtrMemberAccess	addr -> host		952516	0					
ANR	953138	Identifier	addr		952516	0					
ANR	953139	Identifier	host		952516	1					
ANR	953140	ExpressionStatement	bt_len += strlen ( addr -> host )	4004:4:117232:117260	952516	3	True				
ANR	953141	AssignmentExpression	bt_len += strlen ( addr -> host )		952516	0		+=			
ANR	953142	Identifier	bt_len		952516	0					
ANR	953143	CallExpression	strlen ( addr -> host )		952516	1					
ANR	953144	Callee	strlen		952516	0					
ANR	953145	Identifier	strlen		952516	0					
ANR	953146	ArgumentList	addr -> host		952516	1					
ANR	953147	Argument	addr -> host		952516	0					
ANR	953148	PtrMemberAccess	addr -> host		952516	0					
ANR	953149	Identifier	addr		952516	0					
ANR	953150	Identifier	host		952516	1					
ANR	953151	ExpressionStatement	"offset += slprintf ( bufferCc + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"	4005:4:117266:117357	952516	4	True				
ANR	953152	AssignmentExpression	"offset += slprintf ( bufferCc + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"		952516	0		+=			
ANR	953153	Identifier	offset		952516	0					
ANR	953154	CallExpression	"slprintf ( bufferCc + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"		952516	1					
ANR	953155	Callee	slprintf		952516	0					
ANR	953156	Identifier	slprintf		952516	0					
ANR	953157	ArgumentList	bufferCc + offset		952516	1					
ANR	953158	Argument	bufferCc + offset		952516	0					
ANR	953159	AdditiveExpression	bufferCc + offset		952516	0		+			
ANR	953160	Identifier	bufferCc		952516	0					
ANR	953161	Identifier	offset		952516	1					
ANR	953162	Argument	bt_len - offset		952516	1					
ANR	953163	AdditiveExpression	bt_len - offset		952516	0		-			
ANR	953164	Identifier	bt_len		952516	0					
ANR	953165	Identifier	offset		952516	1					
ANR	953166	Argument	"""%s@%s,"""		952516	2					
ANR	953167	PrimaryExpression	"""%s@%s,"""		952516	0					
ANR	953168	Argument	addr -> mailbox		952516	3					
ANR	953169	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	953170	Identifier	addr		952516	0					
ANR	953171	Identifier	mailbox		952516	1					
ANR	953172	Argument	addr -> host		952516	4					
ANR	953173	PtrMemberAccess	addr -> host		952516	0					
ANR	953174	Identifier	addr		952516	0					
ANR	953175	Identifier	host		952516	1					
ANR	953176	ExpressionStatement	addr = addr -> next	4007:3:117367:117384	952516	1	True				
ANR	953177	AssignmentExpression	addr = addr -> next		952516	0		=			
ANR	953178	Identifier	addr		952516	0					
ANR	953179	PtrMemberAccess	addr -> next		952516	1					
ANR	953180	Identifier	addr		952516	0					
ANR	953181	Identifier	next		952516	1					
ANR	953182	ExpressionStatement	efree ( tempMailTo )	4009:2:117392:117409	952516	11	True				
ANR	953183	CallExpression	efree ( tempMailTo )		952516	0					
ANR	953184	Callee	efree		952516	0					
ANR	953185	Identifier	efree		952516	0					
ANR	953186	ArgumentList	tempMailTo		952516	1					
ANR	953187	Argument	tempMailTo		952516	0					
ANR	953188	Identifier	tempMailTo		952516	0					
ANR	953189	IfStatement	if ( offset > 0 )		952516	12					
ANR	953190	Condition	offset > 0	4010:6:117417:117424	952516	0	True				
ANR	953191	RelationalExpression	offset > 0		952516	0		>			
ANR	953192	Identifier	offset		952516	0					
ANR	953193	PrimaryExpression	0		952516	1					
ANR	953194	CompoundStatement		85:16:2484:2484	952516	1					
ANR	953195	ExpressionStatement	bufferCc [ offset - 1 ] = 0	4011:3:117432:117454	952516	0	True				
ANR	953196	AssignmentExpression	bufferCc [ offset - 1 ] = 0		952516	0		=			
ANR	953197	ArrayIndexing	bufferCc [ offset - 1 ]		952516	0					
ANR	953198	Identifier	bufferCc		952516	0					
ANR	953199	AdditiveExpression	offset - 1		952516	1		-			
ANR	953200	Identifier	offset		952516	0					
ANR	953201	PrimaryExpression	1		952516	1					
ANR	953202	PrimaryExpression	0		952516	1					
ANR	953203	IfStatement	if ( bcc && * bcc )		952516	23					
ANR	953204	Condition	bcc && * bcc	4015:5:117469:117479	952516	0	True				
ANR	953205	AndExpression	bcc && * bcc		952516	0		&&			
ANR	953206	Identifier	bcc		952516	0					
ANR	953207	UnaryOperationExpression	* bcc		952516	1					
ANR	953208	UnaryOperator	*		952516	0					
ANR	953209	Identifier	bcc		952516	1					
ANR	953210	CompoundStatement		90:18:2539:2539	952516	1					
ANR	953211	ExpressionStatement	tempMailTo = estrdup ( bcc )	4016:2:117486:117511	952516	0	True				
ANR	953212	AssignmentExpression	tempMailTo = estrdup ( bcc )		952516	0		=			
ANR	953213	Identifier	tempMailTo		952516	0					
ANR	953214	CallExpression	estrdup ( bcc )		952516	1					
ANR	953215	Callee	estrdup		952516	0					
ANR	953216	Identifier	estrdup		952516	0					
ANR	953217	ArgumentList	bcc		952516	1					
ANR	953218	Argument	bcc		952516	0					
ANR	953219	Identifier	bcc		952516	0					
ANR	953220	ExpressionStatement	bt_len = strlen ( bcc )	4017:2:117515:117535	952516	1	True				
ANR	953221	AssignmentExpression	bt_len = strlen ( bcc )		952516	0		=			
ANR	953222	Identifier	bt_len		952516	0					
ANR	953223	CallExpression	strlen ( bcc )		952516	1					
ANR	953224	Callee	strlen		952516	0					
ANR	953225	Identifier	strlen		952516	0					
ANR	953226	ArgumentList	bcc		952516	1					
ANR	953227	Argument	bcc		952516	0					
ANR	953228	Identifier	bcc		952516	0					
ANR	953229	ExpressionStatement	"bufferBcc = ( char * ) safe_emalloc ( bt_len , 1 , 1 )"	4018:2:117539:117585	952516	2	True				
ANR	953230	AssignmentExpression	"bufferBcc = ( char * ) safe_emalloc ( bt_len , 1 , 1 )"		952516	0		=			
ANR	953231	Identifier	bufferBcc		952516	0					
ANR	953232	CastExpression	"( char * ) safe_emalloc ( bt_len , 1 , 1 )"		952516	1					
ANR	953233	CastTarget	char *		952516	0					
ANR	953234	CallExpression	"safe_emalloc ( bt_len , 1 , 1 )"		952516	1					
ANR	953235	Callee	safe_emalloc		952516	0					
ANR	953236	Identifier	safe_emalloc		952516	0					
ANR	953237	ArgumentList	bt_len		952516	1					
ANR	953238	Argument	bt_len		952516	0					
ANR	953239	Identifier	bt_len		952516	0					
ANR	953240	Argument	1		952516	1					
ANR	953241	PrimaryExpression	1		952516	0					
ANR	953242	Argument	1		952516	2					
ANR	953243	PrimaryExpression	1		952516	0					
ANR	953244	ExpressionStatement	bt_len ++	4019:2:117589:117597	952516	3	True				
ANR	953245	PostIncDecOperationExpression	bt_len ++		952516	0					
ANR	953246	Identifier	bt_len		952516	0					
ANR	953247	IncDec	++		952516	1					
ANR	953248	ExpressionStatement	offset = 0	4020:2:117601:117611	952516	4	True				
ANR	953249	AssignmentExpression	offset = 0		952516	0		=			
ANR	953250	Identifier	offset		952516	0					
ANR	953251	PrimaryExpression	0		952516	1					
ANR	953252	ExpressionStatement	addr = NULL	4021:2:117615:117626	952516	5	True				
ANR	953253	AssignmentExpression	addr = NULL		952516	0		=			
ANR	953254	Identifier	addr		952516	0					
ANR	953255	Identifier	NULL		952516	1					
ANR	953256	ExpressionStatement	"rfc822_parse_adrlist ( & addr , tempMailTo , NULL )"	4022:2:117630:117675	952516	6	True				
ANR	953257	CallExpression	"rfc822_parse_adrlist ( & addr , tempMailTo , NULL )"		952516	0					
ANR	953258	Callee	rfc822_parse_adrlist		952516	0					
ANR	953259	Identifier	rfc822_parse_adrlist		952516	0					
ANR	953260	ArgumentList	& addr		952516	1					
ANR	953261	Argument	& addr		952516	0					
ANR	953262	UnaryOperationExpression	& addr		952516	0					
ANR	953263	UnaryOperator	&		952516	0					
ANR	953264	Identifier	addr		952516	1					
ANR	953265	Argument	tempMailTo		952516	1					
ANR	953266	Identifier	tempMailTo		952516	0					
ANR	953267	Argument	NULL		952516	2					
ANR	953268	Identifier	NULL		952516	0					
ANR	953269	WhileStatement	while ( addr )		952516	7					
ANR	953270	Condition	addr	4023:9:117686:117689	952516	0	True				
ANR	953271	Identifier	addr		952516	0					
ANR	953272	CompoundStatement		98:15:2749:2749	952516	1					
ANR	953273	IfStatement	"if ( addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0 )"		952516	0					
ANR	953274	Condition	"addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0"	4024:7:117701:117754	952516	0	True				
ANR	953275	OrExpression	"addr -> host == NULL || strcmp ( addr -> host , ERRHOST ) == 0"		952516	0		||			
ANR	953276	EqualityExpression	addr -> host == NULL		952516	0		==			
ANR	953277	PtrMemberAccess	addr -> host		952516	0					
ANR	953278	Identifier	addr		952516	0					
ANR	953279	Identifier	host		952516	1					
ANR	953280	Identifier	NULL		952516	1					
ANR	953281	EqualityExpression	"strcmp ( addr -> host , ERRHOST ) == 0"		952516	1		==			
ANR	953282	CallExpression	"strcmp ( addr -> host , ERRHOST )"		952516	0					
ANR	953283	Callee	strcmp		952516	0					
ANR	953284	Identifier	strcmp		952516	0					
ANR	953285	ArgumentList	addr -> host		952516	1					
ANR	953286	Argument	addr -> host		952516	0					
ANR	953287	PtrMemberAccess	addr -> host		952516	0					
ANR	953288	Identifier	addr		952516	0					
ANR	953289	Identifier	host		952516	1					
ANR	953290	Argument	ERRHOST		952516	1					
ANR	953291	Identifier	ERRHOST		952516	0					
ANR	953292	PrimaryExpression	0		952516	1					
ANR	953293	CompoundStatement		99:63:2814:2814	952516	1					
ANR	953294	ExpressionStatement	PHP_IMAP_BAD_DEST	4025:4:117763:117780	952516	0	True				
ANR	953295	Identifier	PHP_IMAP_BAD_DEST		952516	0					
ANR	953296	ElseStatement	else		952516	0					
ANR	953297	CompoundStatement		101:10:2849:2849	952516	0					
ANR	953298	ExpressionStatement	"bufferBcc = safe_erealloc ( bufferBcc , bt_len , 1 , strlen ( addr -> mailbox ) )"	4027:4:117798:117868	952516	0	True				
ANR	953299	AssignmentExpression	"bufferBcc = safe_erealloc ( bufferBcc , bt_len , 1 , strlen ( addr -> mailbox ) )"		952516	0		=			
ANR	953300	Identifier	bufferBcc		952516	0					
ANR	953301	CallExpression	"safe_erealloc ( bufferBcc , bt_len , 1 , strlen ( addr -> mailbox ) )"		952516	1					
ANR	953302	Callee	safe_erealloc		952516	0					
ANR	953303	Identifier	safe_erealloc		952516	0					
ANR	953304	ArgumentList	bufferBcc		952516	1					
ANR	953305	Argument	bufferBcc		952516	0					
ANR	953306	Identifier	bufferBcc		952516	0					
ANR	953307	Argument	bt_len		952516	1					
ANR	953308	Identifier	bt_len		952516	0					
ANR	953309	Argument	1		952516	2					
ANR	953310	PrimaryExpression	1		952516	0					
ANR	953311	Argument	strlen ( addr -> mailbox )		952516	3					
ANR	953312	CallExpression	strlen ( addr -> mailbox )		952516	0					
ANR	953313	Callee	strlen		952516	0					
ANR	953314	Identifier	strlen		952516	0					
ANR	953315	ArgumentList	addr -> mailbox		952516	1					
ANR	953316	Argument	addr -> mailbox		952516	0					
ANR	953317	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	953318	Identifier	addr		952516	0					
ANR	953319	Identifier	mailbox		952516	1					
ANR	953320	ExpressionStatement	bt_len += strlen ( addr -> mailbox )	4028:4:117874:117905	952516	1	True				
ANR	953321	AssignmentExpression	bt_len += strlen ( addr -> mailbox )		952516	0		+=			
ANR	953322	Identifier	bt_len		952516	0					
ANR	953323	CallExpression	strlen ( addr -> mailbox )		952516	1					
ANR	953324	Callee	strlen		952516	0					
ANR	953325	Identifier	strlen		952516	0					
ANR	953326	ArgumentList	addr -> mailbox		952516	1					
ANR	953327	Argument	addr -> mailbox		952516	0					
ANR	953328	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	953329	Identifier	addr		952516	0					
ANR	953330	Identifier	mailbox		952516	1					
ANR	953331	ExpressionStatement	"bufferBcc = safe_erealloc ( bufferBcc , bt_len , 1 , strlen ( addr -> host ) )"	4029:4:117911:117978	952516	2	True				
ANR	953332	AssignmentExpression	"bufferBcc = safe_erealloc ( bufferBcc , bt_len , 1 , strlen ( addr -> host ) )"		952516	0		=			
ANR	953333	Identifier	bufferBcc		952516	0					
ANR	953334	CallExpression	"safe_erealloc ( bufferBcc , bt_len , 1 , strlen ( addr -> host ) )"		952516	1					
ANR	953335	Callee	safe_erealloc		952516	0					
ANR	953336	Identifier	safe_erealloc		952516	0					
ANR	953337	ArgumentList	bufferBcc		952516	1					
ANR	953338	Argument	bufferBcc		952516	0					
ANR	953339	Identifier	bufferBcc		952516	0					
ANR	953340	Argument	bt_len		952516	1					
ANR	953341	Identifier	bt_len		952516	0					
ANR	953342	Argument	1		952516	2					
ANR	953343	PrimaryExpression	1		952516	0					
ANR	953344	Argument	strlen ( addr -> host )		952516	3					
ANR	953345	CallExpression	strlen ( addr -> host )		952516	0					
ANR	953346	Callee	strlen		952516	0					
ANR	953347	Identifier	strlen		952516	0					
ANR	953348	ArgumentList	addr -> host		952516	1					
ANR	953349	Argument	addr -> host		952516	0					
ANR	953350	PtrMemberAccess	addr -> host		952516	0					
ANR	953351	Identifier	addr		952516	0					
ANR	953352	Identifier	host		952516	1					
ANR	953353	ExpressionStatement	bt_len += strlen ( addr -> host )	4030:4:117984:118012	952516	3	True				
ANR	953354	AssignmentExpression	bt_len += strlen ( addr -> host )		952516	0		+=			
ANR	953355	Identifier	bt_len		952516	0					
ANR	953356	CallExpression	strlen ( addr -> host )		952516	1					
ANR	953357	Callee	strlen		952516	0					
ANR	953358	Identifier	strlen		952516	0					
ANR	953359	ArgumentList	addr -> host		952516	1					
ANR	953360	Argument	addr -> host		952516	0					
ANR	953361	PtrMemberAccess	addr -> host		952516	0					
ANR	953362	Identifier	addr		952516	0					
ANR	953363	Identifier	host		952516	1					
ANR	953364	ExpressionStatement	"offset += slprintf ( bufferBcc + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"	4031:4:118018:118110	952516	4	True				
ANR	953365	AssignmentExpression	"offset += slprintf ( bufferBcc + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"		952516	0		+=			
ANR	953366	Identifier	offset		952516	0					
ANR	953367	CallExpression	"slprintf ( bufferBcc + offset , bt_len - offset , ""%s@%s,"" , addr -> mailbox , addr -> host )"		952516	1					
ANR	953368	Callee	slprintf		952516	0					
ANR	953369	Identifier	slprintf		952516	0					
ANR	953370	ArgumentList	bufferBcc + offset		952516	1					
ANR	953371	Argument	bufferBcc + offset		952516	0					
ANR	953372	AdditiveExpression	bufferBcc + offset		952516	0		+			
ANR	953373	Identifier	bufferBcc		952516	0					
ANR	953374	Identifier	offset		952516	1					
ANR	953375	Argument	bt_len - offset		952516	1					
ANR	953376	AdditiveExpression	bt_len - offset		952516	0		-			
ANR	953377	Identifier	bt_len		952516	0					
ANR	953378	Identifier	offset		952516	1					
ANR	953379	Argument	"""%s@%s,"""		952516	2					
ANR	953380	PrimaryExpression	"""%s@%s,"""		952516	0					
ANR	953381	Argument	addr -> mailbox		952516	3					
ANR	953382	PtrMemberAccess	addr -> mailbox		952516	0					
ANR	953383	Identifier	addr		952516	0					
ANR	953384	Identifier	mailbox		952516	1					
ANR	953385	Argument	addr -> host		952516	4					
ANR	953386	PtrMemberAccess	addr -> host		952516	0					
ANR	953387	Identifier	addr		952516	0					
ANR	953388	Identifier	host		952516	1					
ANR	953389	ExpressionStatement	addr = addr -> next	4033:3:118120:118137	952516	1	True				
ANR	953390	AssignmentExpression	addr = addr -> next		952516	0		=			
ANR	953391	Identifier	addr		952516	0					
ANR	953392	PtrMemberAccess	addr -> next		952516	1					
ANR	953393	Identifier	addr		952516	0					
ANR	953394	Identifier	next		952516	1					
ANR	953395	ExpressionStatement	efree ( tempMailTo )	4035:2:118145:118162	952516	8	True				
ANR	953396	CallExpression	efree ( tempMailTo )		952516	0					
ANR	953397	Callee	efree		952516	0					
ANR	953398	Identifier	efree		952516	0					
ANR	953399	ArgumentList	tempMailTo		952516	1					
ANR	953400	Argument	tempMailTo		952516	0					
ANR	953401	Identifier	tempMailTo		952516	0					
ANR	953402	IfStatement	if ( offset > 0 )		952516	9					
ANR	953403	Condition	offset > 0	4036:6:118170:118177	952516	0	True				
ANR	953404	RelationalExpression	offset > 0		952516	0		>			
ANR	953405	Identifier	offset		952516	0					
ANR	953406	PrimaryExpression	0		952516	1					
ANR	953407	CompoundStatement		111:16:3237:3237	952516	1					
ANR	953408	ExpressionStatement	bufferBcc [ offset - 1 ] = 0	4037:3:118185:118208	952516	0	True				
ANR	953409	AssignmentExpression	bufferBcc [ offset - 1 ] = 0		952516	0		=			
ANR	953410	ArrayIndexing	bufferBcc [ offset - 1 ]		952516	0					
ANR	953411	Identifier	bufferBcc		952516	0					
ANR	953412	AdditiveExpression	offset - 1		952516	1		-			
ANR	953413	Identifier	offset		952516	0					
ANR	953414	PrimaryExpression	1		952516	1					
ANR	953415	PrimaryExpression	0		952516	1					
ANR	953416	IfStatement	if ( headers && * headers )		952516	24					
ANR	953417	Condition	headers && * headers	4041:5:118223:118241	952516	0	True				
ANR	953418	AndExpression	headers && * headers		952516	0		&&			
ANR	953419	Identifier	headers		952516	0					
ANR	953420	UnaryOperationExpression	* headers		952516	1					
ANR	953421	UnaryOperator	*		952516	0					
ANR	953422	Identifier	headers		952516	1					
ANR	953423	CompoundStatement		116:26:3301:3301	952516	1					
ANR	953424	ExpressionStatement	"strlcat ( bufferHeader , headers , bufferLen + 1 )"	4042:2:118248:118293	952516	0	True				
ANR	953425	CallExpression	"strlcat ( bufferHeader , headers , bufferLen + 1 )"		952516	0					
ANR	953426	Callee	strlcat		952516	0					
ANR	953427	Identifier	strlcat		952516	0					
ANR	953428	ArgumentList	bufferHeader		952516	1					
ANR	953429	Argument	bufferHeader		952516	0					
ANR	953430	Identifier	bufferHeader		952516	0					
ANR	953431	Argument	headers		952516	1					
ANR	953432	Identifier	headers		952516	0					
ANR	953433	Argument	bufferLen + 1		952516	2					
ANR	953434	AdditiveExpression	bufferLen + 1		952516	0		+			
ANR	953435	Identifier	bufferLen		952516	0					
ANR	953436	PrimaryExpression	1		952516	1					
ANR	953437	IfStatement	"if ( TSendMail ( INI_STR ( ""SMTP"" ) , & tsm_err , & tsm_errmsg , bufferHeader , subject , bufferTo , message , bufferCc , bufferBcc , rpath ) != SUCCESS )"		952516	25					
ANR	953438	Condition	"TSendMail ( INI_STR ( ""SMTP"" ) , & tsm_err , & tsm_errmsg , bufferHeader , subject , bufferTo , message , bufferCc , bufferBcc , rpath ) != SUCCESS"	4045:5:118304:118433	952516	0	True				
ANR	953439	EqualityExpression	"TSendMail ( INI_STR ( ""SMTP"" ) , & tsm_err , & tsm_errmsg , bufferHeader , subject , bufferTo , message , bufferCc , bufferBcc , rpath ) != SUCCESS"		952516	0		!=			
ANR	953440	CallExpression	"TSendMail ( INI_STR ( ""SMTP"" ) , & tsm_err , & tsm_errmsg , bufferHeader , subject , bufferTo , message , bufferCc , bufferBcc , rpath )"		952516	0					
ANR	953441	Callee	TSendMail		952516	0					
ANR	953442	Identifier	TSendMail		952516	0					
ANR	953443	ArgumentList	"INI_STR ( ""SMTP"" )"		952516	1					
ANR	953444	Argument	"INI_STR ( ""SMTP"" )"		952516	0					
ANR	953445	CallExpression	"INI_STR ( ""SMTP"" )"		952516	0					
ANR	953446	Callee	INI_STR		952516	0					
ANR	953447	Identifier	INI_STR		952516	0					
ANR	953448	ArgumentList	"""SMTP"""		952516	1					
ANR	953449	Argument	"""SMTP"""		952516	0					
ANR	953450	PrimaryExpression	"""SMTP"""		952516	0					
ANR	953451	Argument	& tsm_err		952516	1					
ANR	953452	UnaryOperationExpression	& tsm_err		952516	0					
ANR	953453	UnaryOperator	&		952516	0					
ANR	953454	Identifier	tsm_err		952516	1					
ANR	953455	Argument	& tsm_errmsg		952516	2					
ANR	953456	UnaryOperationExpression	& tsm_errmsg		952516	0					
ANR	953457	UnaryOperator	&		952516	0					
ANR	953458	Identifier	tsm_errmsg		952516	1					
ANR	953459	Argument	bufferHeader		952516	3					
ANR	953460	Identifier	bufferHeader		952516	0					
ANR	953461	Argument	subject		952516	4					
ANR	953462	Identifier	subject		952516	0					
ANR	953463	Argument	bufferTo		952516	5					
ANR	953464	Identifier	bufferTo		952516	0					
ANR	953465	Argument	message		952516	6					
ANR	953466	Identifier	message		952516	0					
ANR	953467	Argument	bufferCc		952516	7					
ANR	953468	Identifier	bufferCc		952516	0					
ANR	953469	Argument	bufferBcc		952516	8					
ANR	953470	Identifier	bufferBcc		952516	0					
ANR	953471	Argument	rpath		952516	9					
ANR	953472	Identifier	rpath		952516	0					
ANR	953473	Identifier	SUCCESS		952516	1					
ANR	953474	CompoundStatement		120:137:3493:3493	952516	1					
ANR	953475	IfStatement	if ( tsm_errmsg )		952516	0					
ANR	953476	Condition	tsm_errmsg	4046:6:118444:118453	952516	0	True				
ANR	953477	Identifier	tsm_errmsg		952516	0					
ANR	953478	CompoundStatement		121:18:3513:3513	952516	1					
ANR	953479	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s"" , tsm_errmsg )"	4047:3:118461:118512	952516	0	True				
ANR	953480	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s"" , tsm_errmsg )"		952516	0					
ANR	953481	Callee	php_error_docref		952516	0					
ANR	953482	Identifier	php_error_docref		952516	0					
ANR	953483	ArgumentList	NULL		952516	1					
ANR	953484	Argument	NULL		952516	0					
ANR	953485	Identifier	NULL		952516	0					
ANR	953486	Argument	E_WARNING		952516	1					
ANR	953487	Identifier	E_WARNING		952516	0					
ANR	953488	Argument	"""%s"""		952516	2					
ANR	953489	PrimaryExpression	"""%s"""		952516	0					
ANR	953490	Argument	tsm_errmsg		952516	3					
ANR	953491	Identifier	tsm_errmsg		952516	0					
ANR	953492	ExpressionStatement	efree ( tsm_errmsg )	4048:3:118517:118534	952516	1	True				
ANR	953493	CallExpression	efree ( tsm_errmsg )		952516	0					
ANR	953494	Callee	efree		952516	0					
ANR	953495	Identifier	efree		952516	0					
ANR	953496	ArgumentList	tsm_errmsg		952516	1					
ANR	953497	Argument	tsm_errmsg		952516	0					
ANR	953498	Identifier	tsm_errmsg		952516	0					
ANR	953499	ElseStatement	else		952516	0					
ANR	953500	CompoundStatement		124:9:3602:3602	952516	0					
ANR	953501	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s"" , GetSMErrorText ( tsm_err ) )"	4050:3:118550:118614	952516	0	True				
ANR	953502	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s"" , GetSMErrorText ( tsm_err ) )"		952516	0					
ANR	953503	Callee	php_error_docref		952516	0					
ANR	953504	Identifier	php_error_docref		952516	0					
ANR	953505	ArgumentList	NULL		952516	1					
ANR	953506	Argument	NULL		952516	0					
ANR	953507	Identifier	NULL		952516	0					
ANR	953508	Argument	E_WARNING		952516	1					
ANR	953509	Identifier	E_WARNING		952516	0					
ANR	953510	Argument	"""%s"""		952516	2					
ANR	953511	PrimaryExpression	"""%s"""		952516	0					
ANR	953512	Argument	GetSMErrorText ( tsm_err )		952516	3					
ANR	953513	CallExpression	GetSMErrorText ( tsm_err )		952516	0					
ANR	953514	Callee	GetSMErrorText		952516	0					
ANR	953515	Identifier	GetSMErrorText		952516	0					
ANR	953516	ArgumentList	tsm_err		952516	1					
ANR	953517	Argument	tsm_err		952516	0					
ANR	953518	Identifier	tsm_err		952516	0					
ANR	953519	ExpressionStatement	PHP_IMAP_CLEAN	4052:2:118622:118636	952516	1	True				
ANR	953520	Identifier	PHP_IMAP_CLEAN		952516	0					
ANR	953521	ReturnStatement	return 0 ;	4053:2:118640:118648	952516	2	True				
ANR	953522	PrimaryExpression	0		952516	0					
ANR	953523	ExpressionStatement	PHP_IMAP_CLEAN	4055:1:118654:118668	952516	26	True				
ANR	953524	Identifier	PHP_IMAP_CLEAN		952516	0					
ANR	953525	ReturnStatement	return 1 ;	4082:1:119360:119368	952516	27	True				
ANR	953526	PrimaryExpression	1		952516	0					
ANR	953527	ReturnType	int		952516	1					
ANR	953528	Identifier	_php_imap_mail		952516	2					
ANR	953529	ParameterList	"char * to , char * subject , char * message , char * headers , char * cc , char * bcc , char * rpath"		952516	3					
ANR	953530	Parameter	char * to	3925:19:114853:114860	952516	0	True				
ANR	953531	ParameterType	char *		952516	0					
ANR	953532	Identifier	to		952516	1					
ANR	953533	Parameter	char * subject	3925:29:114863:114875	952516	1	True				
ANR	953534	ParameterType	char *		952516	0					
ANR	953535	Identifier	subject		952516	1					
ANR	953536	Parameter	char * message	3925:44:114878:114890	952516	2	True				
ANR	953537	ParameterType	char *		952516	0					
ANR	953538	Identifier	message		952516	1					
ANR	953539	Parameter	char * headers	3925:59:114893:114905	952516	3	True				
ANR	953540	ParameterType	char *		952516	0					
ANR	953541	Identifier	headers		952516	1					
ANR	953542	Parameter	char * cc	3925:74:114908:114915	952516	4	True				
ANR	953543	ParameterType	char *		952516	0					
ANR	953544	Identifier	cc		952516	1					
ANR	953545	Parameter	char * bcc	3925:84:114918:114926	952516	5	True				
ANR	953546	ParameterType	char *		952516	0					
ANR	953547	Identifier	bcc		952516	1					
ANR	953548	Parameter	char * rpath	3925:95:114929:114939	952516	6	True				
ANR	953549	ParameterType	char *		952516	0					
ANR	953550	Identifier	rpath		952516	1					
ANR	953551	CFGEntryNode	ENTRY		952516		True				
ANR	953552	CFGExitNode	EXIT		952516		True				
ANR	953553	Symbol	* cc		952516						
ANR	953554	Symbol	subject		952516						
ANR	953555	Symbol	bufferCc		952516						
ANR	953556	Symbol	strlen		952516						
ANR	953557	Symbol	* bcc		952516						
ANR	953558	Symbol	* bufferCc		952516						
ANR	953559	Symbol	addr -> mailbox		952516						
ANR	953560	Symbol	bufferTo		952516						
ANR	953561	Symbol	bufferLen		952516						
ANR	953562	Symbol	strcmp		952516						
ANR	953563	Symbol	* to		952516						
ANR	953564	Symbol	NULL		952516						
ANR	953565	Symbol	GetSMErrorText		952516						
ANR	953566	Symbol	offset		952516						
ANR	953567	Symbol	PHP_IMAP_CLEAN		952516						
ANR	953568	Symbol	addr -> host		952516						
ANR	953569	Symbol	safe_erealloc		952516						
ANR	953570	Symbol	tsm_errmsg		952516						
ANR	953571	Symbol	slprintf		952516						
ANR	953572	Symbol	* bufferBcc		952516						
ANR	953573	Symbol	* offset		952516						
ANR	953574	Symbol	* addr		952516						
ANR	953575	Symbol	bcc		952516						
ANR	953576	Symbol	tsm_err		952516						
ANR	953577	Symbol	tempMailTo		952516						
ANR	953578	Symbol	bufferBcc		952516						
ANR	953579	Symbol	BAD_MSG_DESTINATION		952516						
ANR	953580	Symbol	ERRHOST		952516						
ANR	953581	Symbol	E_WARNING		952516						
ANR	953582	Symbol	emalloc		952516						
ANR	953583	Symbol	* headers		952516						
ANR	953584	Symbol	& tsm_errmsg		952516						
ANR	953585	Symbol	addr		952516						
ANR	953586	Symbol	cc		952516						
ANR	953587	Symbol	headers		952516						
ANR	953588	Symbol	bt_len		952516						
ANR	953589	Symbol	& addr		952516						
ANR	953590	Symbol	addr -> next		952516						
ANR	953591	Symbol	SUCCESS		952516						
ANR	953592	Symbol	INI_STR		952516						
ANR	953593	Symbol	bufferHeader		952516						
ANR	953594	Symbol	message		952516						
ANR	953595	Symbol	rpath		952516						
ANR	953596	Symbol	* bufferTo		952516						
ANR	953597	Symbol	& tsm_err		952516						
ANR	953598	Symbol	TSendMail		952516						
ANR	953599	Symbol	estrdup		952516						
ANR	953600	Symbol	to		952516						
ANR	953601	Symbol	safe_emalloc		952516						
ANR	953602	DeclStmt									
ANR	953603	Decl							zend_string	zend_string *	to
ANR	953604	Decl							zend_string	zend_string *	message
ANR	953605	Decl							zend_string	zend_string *	headers
ANR	953606	Decl							zend_string	zend_string *	subject
ANR	953607	Decl							zend_string	zend_string *	cc
ANR	953608	Decl							zend_string	zend_string *	bcc
ANR	953609	Decl							zend_string	zend_string *	rpath
ANR	953610	DeclStmt									
ANR	953611	Decl							int	int	argc
ANR	953612	DeclStmt									
ANR	953613	Decl							zval	zval *	streamind
ANR	953614	DeclStmt									
ANR	953615	Decl							zend_string	zend_string *	criteria
ANR	953616	Decl							zend_string	zend_string *	charset
ANR	953617	DeclStmt									
ANR	953618	Decl							zend_long	zend_long	flags
ANR	953619	DeclStmt									
ANR	953620	Decl							pils	pils *	imap_le_struct
ANR	953621	DeclStmt									
ANR	953622	Decl							char	char *	search_criteria
ANR	953623	DeclStmt									
ANR	953624	Decl							MESSAGELIST	MESSAGELIST *	cur
ANR	953625	DeclStmt									
ANR	953626	Decl							int	int	argc
ANR	953627	DeclStmt									
ANR	953628	Decl							SEARCHPGM	SEARCHPGM *	pgm
ANR	953629	DeclStmt									
ANR	953630	Decl							STRINGLIST	STRINGLIST *	cur
ANR	953631	DeclStmt									
ANR	953632	Decl							ERRORLIST	ERRORLIST *	cur
ANR	953633	DeclStmt									
ANR	953634	Decl							ERRORLIST	ERRORLIST *	cur
ANR	953635	DeclStmt									
ANR	953636	Decl							zval	zval	myobject
ANR	953637	DeclStmt									
ANR	953638	Decl							zend_string	zend_string *	str
ANR	953639	DeclStmt									
ANR	953640	Decl							char	char *	string
ANR	953641	Decl							char	char *	charset
ANR	953642	Decl							char	char	encoding
ANR	953643	Decl							char	char *	text
ANR	953644	Decl							char	char *	decode
ANR	953645	DeclStmt									
ANR	953646	Decl							long	long	charset_token
ANR	953647	Decl							long	long	encoding_token
ANR	953648	Decl							long	long	end_token
ANR	953649	Decl							long	long	end
ANR	953650	Decl							long	long	offset
ANR	953651	Decl							long	long	i
ANR	953652	DeclStmt									
ANR	953653	Decl							unsigned long	unsigned long	newlength
ANR	953654	Function	_php_rfc822_soutr	4354:0:128110:128290							
ANR	953655	FunctionDef	"_php_rfc822_soutr (void * stream , char * string)"		953654	0					
ANR	953656	CompoundStatement		4355:0:128169:128290	953654	0					
ANR	953657	IdentifierDeclStatement	smart_str * ret = ( smart_str * ) stream ;	4356:1:128172:128207	953654	0	True				
ANR	953658	IdentifierDecl	* ret = ( smart_str * ) stream		953654	0					
ANR	953659	IdentifierDeclType	smart_str *		953654	0					
ANR	953660	Identifier	ret		953654	1					
ANR	953661	AssignmentExpression	* ret = ( smart_str * ) stream		953654	2		=			
ANR	953662	Identifier	ret		953654	0					
ANR	953663	CastExpression	( smart_str * ) stream		953654	1					
ANR	953664	CastTarget	smart_str *		953654	0					
ANR	953665	Identifier	stream		953654	1					
ANR	953666	IdentifierDeclStatement	int len = strlen ( string ) ;	4357:1:128210:128234	953654	1	True				
ANR	953667	IdentifierDecl	len = strlen ( string )		953654	0					
ANR	953668	IdentifierDeclType	int		953654	0					
ANR	953669	Identifier	len		953654	1					
ANR	953670	AssignmentExpression	len = strlen ( string )		953654	2		=			
ANR	953671	Identifier	len		953654	0					
ANR	953672	CallExpression	strlen ( string )		953654	1					
ANR	953673	Callee	strlen		953654	0					
ANR	953674	Identifier	strlen		953654	0					
ANR	953675	ArgumentList	string		953654	1					
ANR	953676	Argument	string		953654	0					
ANR	953677	Identifier	string		953654	0					
ANR	953678	ExpressionStatement	"smart_str_appendl ( ret , string , len )"	4359:1:128238:128273	953654	2	True				
ANR	953679	CallExpression	"smart_str_appendl ( ret , string , len )"		953654	0					
ANR	953680	Callee	smart_str_appendl		953654	0					
ANR	953681	Identifier	smart_str_appendl		953654	0					
ANR	953682	ArgumentList	ret		953654	1					
ANR	953683	Argument	ret		953654	0					
ANR	953684	Identifier	ret		953654	0					
ANR	953685	Argument	string		953654	1					
ANR	953686	Identifier	string		953654	0					
ANR	953687	Argument	len		953654	2					
ANR	953688	Identifier	len		953654	0					
ANR	953689	ReturnStatement	return LONGT ;	4360:1:128276:128288	953654	3	True				
ANR	953690	Identifier	LONGT		953654	0					
ANR	953691	ReturnType	static long		953654	1					
ANR	953692	Identifier	_php_rfc822_soutr		953654	2					
ANR	953693	ParameterList	"void * stream , char * string"		953654	3					
ANR	953694	Parameter	void * stream	4354:31:128141:128152	953654	0	True				
ANR	953695	ParameterType	void *		953654	0					
ANR	953696	Identifier	stream		953654	1					
ANR	953697	Parameter	char * string	4354:45:128155:128166	953654	1	True				
ANR	953698	ParameterType	char *		953654	0					
ANR	953699	Identifier	string		953654	1					
ANR	953700	CFGEntryNode	ENTRY		953654		True				
ANR	953701	CFGExitNode	EXIT		953654		True				
ANR	953702	Symbol	ret		953654						
ANR	953703	Symbol	strlen		953654						
ANR	953704	Symbol	string		953654						
ANR	953705	Symbol	len		953654						
ANR	953706	Symbol	stream		953654						
ANR	953707	Symbol	LONGT		953654						
ANR	953708	Function	_php_rfc822_write_address	4366:0:128340:128724							
ANR	953709	FunctionDef	_php_rfc822_write_address (ADDRESS * addresslist)		953708	0					
ANR	953710	CompoundStatement		4367:0:128408:128724	953708	0					
ANR	953711	IdentifierDeclStatement	char address [ MAILTMPLEN ] ;	4368:1:128411:128435	953708	0	True				
ANR	953712	IdentifierDecl	address [ MAILTMPLEN ]		953708	0					
ANR	953713	IdentifierDeclType	char [ MAILTMPLEN ]		953708	0					
ANR	953714	Identifier	address		953708	1					
ANR	953715	Identifier	MAILTMPLEN		953708	2					
ANR	953716	IdentifierDeclStatement	smart_str ret = { 0 } ;	4369:1:128438:128457	953708	1	True				
ANR	953717	IdentifierDecl	ret = { 0 }		953708	0					
ANR	953718	IdentifierDeclType	smart_str		953708	0					
ANR	953719	Identifier	ret		953708	1					
ANR	953720	AssignmentExpression	ret = { 0 }		953708	2		=			
ANR	953721	Identifier	ret		953708	0					
ANR	953722	InitializerList	0		953708	1					
ANR	953723	PrimaryExpression	0		953708	0					
ANR	953724	IdentifierDeclStatement	RFC822BUFFER buf ;	4370:1:128460:128476	953708	2	True				
ANR	953725	IdentifierDecl	buf		953708	0					
ANR	953726	IdentifierDeclType	RFC822BUFFER		953708	0					
ANR	953727	Identifier	buf		953708	1					
ANR	953728	ExpressionStatement	buf . beg = address	4372:1:128480:128497	953708	3	True				
ANR	953729	AssignmentExpression	buf . beg = address		953708	0		=			
ANR	953730	MemberAccess	buf . beg		953708	0					
ANR	953731	Identifier	buf		953708	0					
ANR	953732	Identifier	beg		953708	1					
ANR	953733	Identifier	address		953708	1					
ANR	953734	ExpressionStatement	buf . cur = buf . beg	4373:1:128500:128517	953708	4	True				
ANR	953735	AssignmentExpression	buf . cur = buf . beg		953708	0		=			
ANR	953736	MemberAccess	buf . cur		953708	0					
ANR	953737	Identifier	buf		953708	0					
ANR	953738	Identifier	cur		953708	1					
ANR	953739	MemberAccess	buf . beg		953708	1					
ANR	953740	Identifier	buf		953708	0					
ANR	953741	Identifier	beg		953708	1					
ANR	953742	ExpressionStatement	buf . end = buf . beg + sizeof ( address ) - 1	4374:1:128520:128559	953708	5	True				
ANR	953743	AssignmentExpression	buf . end = buf . beg + sizeof ( address ) - 1		953708	0		=			
ANR	953744	MemberAccess	buf . end		953708	0					
ANR	953745	Identifier	buf		953708	0					
ANR	953746	Identifier	end		953708	1					
ANR	953747	AdditiveExpression	buf . beg + sizeof ( address ) - 1		953708	1		+			
ANR	953748	MemberAccess	buf . beg		953708	0					
ANR	953749	Identifier	buf		953708	0					
ANR	953750	Identifier	beg		953708	1					
ANR	953751	AdditiveExpression	sizeof ( address ) - 1		953708	1		-			
ANR	953752	SizeofExpression	sizeof ( address )		953708	0					
ANR	953753	Sizeof	sizeof		953708	0					
ANR	953754	SizeofOperand	address		953708	1					
ANR	953755	PrimaryExpression	1		953708	1					
ANR	953756	ExpressionStatement	buf . s = & ret	4375:1:128562:128574	953708	6	True				
ANR	953757	AssignmentExpression	buf . s = & ret		953708	0		=			
ANR	953758	MemberAccess	buf . s		953708	0					
ANR	953759	Identifier	buf		953708	0					
ANR	953760	Identifier	s		953708	1					
ANR	953761	UnaryOperationExpression	& ret		953708	1					
ANR	953762	UnaryOperator	&		953708	0					
ANR	953763	Identifier	ret		953708	1					
ANR	953764	ExpressionStatement	buf . f = _php_rfc822_soutr	4376:1:128577:128602	953708	7	True				
ANR	953765	AssignmentExpression	buf . f = _php_rfc822_soutr		953708	0		=			
ANR	953766	MemberAccess	buf . f		953708	0					
ANR	953767	Identifier	buf		953708	0					
ANR	953768	Identifier	f		953708	1					
ANR	953769	Identifier	_php_rfc822_soutr		953708	1					
ANR	953770	ExpressionStatement	"rfc822_output_address_list ( & buf , addresslist , 0 , NULL )"	4377:1:128605:128659	953708	8	True				
ANR	953771	CallExpression	"rfc822_output_address_list ( & buf , addresslist , 0 , NULL )"		953708	0					
ANR	953772	Callee	rfc822_output_address_list		953708	0					
ANR	953773	Identifier	rfc822_output_address_list		953708	0					
ANR	953774	ArgumentList	& buf		953708	1					
ANR	953775	Argument	& buf		953708	0					
ANR	953776	UnaryOperationExpression	& buf		953708	0					
ANR	953777	UnaryOperator	&		953708	0					
ANR	953778	Identifier	buf		953708	1					
ANR	953779	Argument	addresslist		953708	1					
ANR	953780	Identifier	addresslist		953708	0					
ANR	953781	Argument	0		953708	2					
ANR	953782	PrimaryExpression	0		953708	0					
ANR	953783	Argument	NULL		953708	3					
ANR	953784	Identifier	NULL		953708	0					
ANR	953785	ExpressionStatement	rfc822_output_flush ( & buf )	4378:1:128662:128687	953708	9	True				
ANR	953786	CallExpression	rfc822_output_flush ( & buf )		953708	0					
ANR	953787	Callee	rfc822_output_flush		953708	0					
ANR	953788	Identifier	rfc822_output_flush		953708	0					
ANR	953789	ArgumentList	& buf		953708	1					
ANR	953790	Argument	& buf		953708	0					
ANR	953791	UnaryOperationExpression	& buf		953708	0					
ANR	953792	UnaryOperator	&		953708	0					
ANR	953793	Identifier	buf		953708	1					
ANR	953794	ExpressionStatement	smart_str_0 ( & ret )	4379:1:128690:128707	953708	10	True				
ANR	953795	CallExpression	smart_str_0 ( & ret )		953708	0					
ANR	953796	Callee	smart_str_0		953708	0					
ANR	953797	Identifier	smart_str_0		953708	0					
ANR	953798	ArgumentList	& ret		953708	1					
ANR	953799	Argument	& ret		953708	0					
ANR	953800	UnaryOperationExpression	& ret		953708	0					
ANR	953801	UnaryOperator	&		953708	0					
ANR	953802	Identifier	ret		953708	1					
ANR	953803	ReturnStatement	return ret . s ;	4380:1:128710:128722	953708	11	True				
ANR	953804	MemberAccess	ret . s		953708	0					
ANR	953805	Identifier	ret		953708	0					
ANR	953806	Identifier	s		953708	1					
ANR	953807	ReturnType	static zend_string *		953708	1					
ANR	953808	Identifier	_php_rfc822_write_address		953708	2					
ANR	953809	ParameterList	ADDRESS * addresslist		953708	3					
ANR	953810	Parameter	ADDRESS * addresslist	4366:46:128386:128405	953708	0	True				
ANR	953811	ParameterType	ADDRESS *		953708	0					
ANR	953812	Identifier	addresslist		953708	1					
ANR	953813	CFGEntryNode	ENTRY		953708		True				
ANR	953814	CFGExitNode	EXIT		953708		True				
ANR	953815	Symbol	ret		953708						
ANR	953816	Symbol	& ret		953708						
ANR	953817	Symbol	addresslist		953708						
ANR	953818	Symbol	buf . s		953708						
ANR	953819	Symbol	address		953708						
ANR	953820	Symbol	NULL		953708						
ANR	953821	Symbol	buf . cur		953708						
ANR	953822	Symbol	buf . beg		953708						
ANR	953823	Symbol	buf . f		953708						
ANR	953824	Symbol	_php_rfc822_soutr		953708						
ANR	953825	Symbol	buf		953708						
ANR	953826	Symbol	ret . s		953708						
ANR	953827	Symbol	buf . end		953708						
ANR	953828	Symbol	& buf		953708						
ANR	953829	Function	_php_rfc822_len	4389:0:128835:129312							
ANR	953830	FunctionDef	_php_rfc822_len (char * str)		953829	0					
ANR	953831	CompoundStatement		4390:0:128873:129312	953829	0					
ANR	953832	IdentifierDeclStatement	int len ;	4391:1:128876:128883	953829	0	True				
ANR	953833	IdentifierDecl	len		953829	0					
ANR	953834	IdentifierDeclType	int		953829	0					
ANR	953835	Identifier	len		953829	1					
ANR	953836	IdentifierDeclStatement	char * p ;	4392:1:128886:128893	953829	1	True				
ANR	953837	IdentifierDecl	* p		953829	0					
ANR	953838	IdentifierDeclType	char *		953829	0					
ANR	953839	Identifier	p		953829	1					
ANR	953840	IfStatement	if ( ! str || ! * str )		953829	2					
ANR	953841	Condition	! str || ! * str	4394:5:128901:128913	953829	0	True				
ANR	953842	OrExpression	! str || ! * str		953829	0		||			
ANR	953843	UnaryOperationExpression	! str		953829	0					
ANR	953844	UnaryOperator	!		953829	0					
ANR	953845	Identifier	str		953829	1					
ANR	953846	UnaryOperationExpression	! * str		953829	1					
ANR	953847	UnaryOperator	!		953829	0					
ANR	953848	UnaryOperationExpression	* str		953829	1					
ANR	953849	UnaryOperator	*		953829	0					
ANR	953850	Identifier	str		953829	1					
ANR	953851	CompoundStatement		5:20:42:42	953829	1					
ANR	953852	ReturnStatement	return 0 ;	4395:2:128920:128928	953829	0	True				
ANR	953853	PrimaryExpression	0		953829	0					
ANR	953854	ExpressionStatement	len = strlen ( str ) + 2	4401:1:129068:129089	953829	3	True				
ANR	953855	AssignmentExpression	len = strlen ( str ) + 2		953829	0		=			
ANR	953856	Identifier	len		953829	0					
ANR	953857	AdditiveExpression	strlen ( str ) + 2		953829	1		+			
ANR	953858	CallExpression	strlen ( str )		953829	0					
ANR	953859	Callee	strlen		953829	0					
ANR	953860	Identifier	strlen		953829	0					
ANR	953861	ArgumentList	str		953829	1					
ANR	953862	Argument	str		953829	0					
ANR	953863	Identifier	str		953829	0					
ANR	953864	PrimaryExpression	2		953829	1					
ANR	953865	ExpressionStatement	p = str	4402:1:129092:129099	953829	4	True				
ANR	953866	AssignmentExpression	p = str		953829	0		=			
ANR	953867	Identifier	p		953829	0					
ANR	953868	Identifier	str		953829	1					
ANR	953869	WhileStatement	"while ( ( p = strpbrk ( p , ""\\\\\\"""" ) ) )"		953829	5					
ANR	953870	Condition	"p = strpbrk ( p , ""\\\\\\"""" )"	4406:8:129251:129274	953829	0	True				
ANR	953871	AssignmentExpression	"p = strpbrk ( p , ""\\\\\\"""" )"		953829	0		=			
ANR	953872	Identifier	p		953829	0					
ANR	953873	CallExpression	"strpbrk ( p , ""\\\\\\"""" )"		953829	1					
ANR	953874	Callee	strpbrk		953829	0					
ANR	953875	Identifier	strpbrk		953829	0					
ANR	953876	ArgumentList	p		953829	1					
ANR	953877	Argument	p		953829	0					
ANR	953878	Identifier	p		953829	0					
ANR	953879	Argument	"""\\\\\\"""""		953829	1					
ANR	953880	PrimaryExpression	"""\\\\\\"""""		953829	0					
ANR	953881	CompoundStatement		17:34:403:403	953829	1					
ANR	953882	ExpressionStatement	p ++	4407:2:129281:129284	953829	0	True				
ANR	953883	PostIncDecOperationExpression	p ++		953829	0					
ANR	953884	Identifier	p		953829	0					
ANR	953885	IncDec	++		953829	1					
ANR	953886	ExpressionStatement	len ++	4408:2:129288:129293	953829	1	True				
ANR	953887	PostIncDecOperationExpression	len ++		953829	0					
ANR	953888	Identifier	len		953829	0					
ANR	953889	IncDec	++		953829	1					
ANR	953890	ReturnStatement	return len ;	4411:1:129300:129310	953829	6	True				
ANR	953891	Identifier	len		953829	0					
ANR	953892	ReturnType	static int		953829	1					
ANR	953893	Identifier	_php_rfc822_len		953829	2					
ANR	953894	ParameterList	char * str		953829	3					
ANR	953895	Parameter	char * str	4389:27:128862:128870	953829	0	True				
ANR	953896	ParameterType	char *		953829	0					
ANR	953897	Identifier	str		953829	1					
ANR	953898	CFGEntryNode	ENTRY		953829		True				
ANR	953899	CFGExitNode	EXIT		953829		True				
ANR	953900	Symbol	str		953829						
ANR	953901	Symbol	p		953829						
ANR	953902	Symbol	strlen		953829						
ANR	953903	Symbol	len		953829						
ANR	953904	Symbol	strpbrk		953829						
ANR	953905	Symbol	* str		953829						
ANR	953906	Function	_php_imap_address_size	4417:0:129363:129964							
ANR	953907	FunctionDef	_php_imap_address_size (ADDRESS * addresslist)		953906	0					
ANR	953908	CompoundStatement		4418:0:129420:129964	953906	0					
ANR	953909	IdentifierDeclStatement	ADDRESS * tmp ;	4419:1:129423:129435	953906	0	True				
ANR	953910	IdentifierDecl	* tmp		953906	0					
ANR	953911	IdentifierDeclType	ADDRESS *		953906	0					
ANR	953912	Identifier	tmp		953906	1					
ANR	953913	IdentifierDeclStatement	"int ret = 0 , num_ent = 0 ;"	4420:1:129438:129458	953906	1	True				
ANR	953914	IdentifierDecl	ret = 0		953906	0					
ANR	953915	IdentifierDeclType	int		953906	0					
ANR	953916	Identifier	ret		953906	1					
ANR	953917	AssignmentExpression	ret = 0		953906	2		=			
ANR	953918	Identifier	ret		953906	0					
ANR	953919	PrimaryExpression	0		953906	1					
ANR	953920	IdentifierDecl	num_ent = 0		953906	1					
ANR	953921	IdentifierDeclType	int		953906	0					
ANR	953922	Identifier	num_ent		953906	1					
ANR	953923	AssignmentExpression	num_ent = 0		953906	2		=			
ANR	953924	Identifier	num_ent		953906	0					
ANR	953925	PrimaryExpression	0		953906	1					
ANR	953926	ExpressionStatement	tmp = addresslist	4422:1:129462:129479	953906	2	True				
ANR	953927	AssignmentExpression	tmp = addresslist		953906	0		=			
ANR	953928	Identifier	tmp		953906	0					
ANR	953929	Identifier	addresslist		953906	1					
ANR	953930	IfStatement	if ( tmp )		953906	3					
ANR	953931	Condition	tmp	4424:5:129487:129489	953906	0	True				
ANR	953932	Identifier	tmp		953906	0					
ANR	953933	DoStatement	do		953906	1					
ANR	953934	CompoundStatement		7:13:74:74	953906	0					
ANR	953935	ExpressionStatement	ret += _php_rfc822_len ( tmp -> personal )	4425:2:129499:129536	953906	0	True				
ANR	953936	AssignmentExpression	ret += _php_rfc822_len ( tmp -> personal )		953906	0		+=			
ANR	953937	Identifier	ret		953906	0					
ANR	953938	CallExpression	_php_rfc822_len ( tmp -> personal )		953906	1					
ANR	953939	Callee	_php_rfc822_len		953906	0					
ANR	953940	Identifier	_php_rfc822_len		953906	0					
ANR	953941	ArgumentList	tmp -> personal		953906	1					
ANR	953942	Argument	tmp -> personal		953906	0					
ANR	953943	PtrMemberAccess	tmp -> personal		953906	0					
ANR	953944	Identifier	tmp		953906	0					
ANR	953945	Identifier	personal		953906	1					
ANR	953946	ExpressionStatement	ret += _php_rfc822_len ( tmp -> adl )	4426:2:129540:129572	953906	1	True				
ANR	953947	AssignmentExpression	ret += _php_rfc822_len ( tmp -> adl )		953906	0		+=			
ANR	953948	Identifier	ret		953906	0					
ANR	953949	CallExpression	_php_rfc822_len ( tmp -> adl )		953906	1					
ANR	953950	Callee	_php_rfc822_len		953906	0					
ANR	953951	Identifier	_php_rfc822_len		953906	0					
ANR	953952	ArgumentList	tmp -> adl		953906	1					
ANR	953953	Argument	tmp -> adl		953906	0					
ANR	953954	PtrMemberAccess	tmp -> adl		953906	0					
ANR	953955	Identifier	tmp		953906	0					
ANR	953956	Identifier	adl		953906	1					
ANR	953957	ExpressionStatement	ret += _php_rfc822_len ( tmp -> mailbox )	4427:2:129576:129612	953906	2	True				
ANR	953958	AssignmentExpression	ret += _php_rfc822_len ( tmp -> mailbox )		953906	0		+=			
ANR	953959	Identifier	ret		953906	0					
ANR	953960	CallExpression	_php_rfc822_len ( tmp -> mailbox )		953906	1					
ANR	953961	Callee	_php_rfc822_len		953906	0					
ANR	953962	Identifier	_php_rfc822_len		953906	0					
ANR	953963	ArgumentList	tmp -> mailbox		953906	1					
ANR	953964	Argument	tmp -> mailbox		953906	0					
ANR	953965	PtrMemberAccess	tmp -> mailbox		953906	0					
ANR	953966	Identifier	tmp		953906	0					
ANR	953967	Identifier	mailbox		953906	1					
ANR	953968	ExpressionStatement	ret += _php_rfc822_len ( tmp -> host )	4428:2:129616:129649	953906	3	True				
ANR	953969	AssignmentExpression	ret += _php_rfc822_len ( tmp -> host )		953906	0		+=			
ANR	953970	Identifier	ret		953906	0					
ANR	953971	CallExpression	_php_rfc822_len ( tmp -> host )		953906	1					
ANR	953972	Callee	_php_rfc822_len		953906	0					
ANR	953973	Identifier	_php_rfc822_len		953906	0					
ANR	953974	ArgumentList	tmp -> host		953906	1					
ANR	953975	Argument	tmp -> host		953906	0					
ANR	953976	PtrMemberAccess	tmp -> host		953906	0					
ANR	953977	Identifier	tmp		953906	0					
ANR	953978	Identifier	host		953906	1					
ANR	953979	ExpressionStatement	num_ent ++	4429:2:129653:129662	953906	4	True				
ANR	953980	PostIncDecOperationExpression	num_ent ++		953906	0					
ANR	953981	Identifier	num_ent		953906	0					
ANR	953982	IncDec	++		953906	1					
ANR	953983	Condition	tmp = tmp -> next	4430:10:129674:129690	953906	1	True				
ANR	953984	AssignmentExpression	tmp = tmp -> next		953906	0		=			
ANR	953985	Identifier	tmp		953906	0					
ANR	953986	PtrMemberAccess	tmp -> next		953906	1					
ANR	953987	Identifier	tmp		953906	0					
ANR	953988	Identifier	next		953906	1					
ANR	953989	ExpressionStatement	ret += ( ret ) ? num_ent * PHP_IMAP_ADDRESS_SIZE_BUF : 0	4437:1:129896:129948	953906	4	True				
ANR	953990	AssignmentExpression	ret += ( ret ) ? num_ent * PHP_IMAP_ADDRESS_SIZE_BUF : 0		953906	0		+=			
ANR	953991	Identifier	ret		953906	0					
ANR	953992	ConditionalExpression	( ret ) ? num_ent * PHP_IMAP_ADDRESS_SIZE_BUF : 0		953906	1					
ANR	953993	Condition	ret		953906	0					
ANR	953994	Identifier	ret		953906	0					
ANR	953995	MultiplicativeExpression	num_ent * PHP_IMAP_ADDRESS_SIZE_BUF		953906	1		*			
ANR	953996	Identifier	num_ent		953906	0					
ANR	953997	Identifier	PHP_IMAP_ADDRESS_SIZE_BUF		953906	1					
ANR	953998	PrimaryExpression	0		953906	2					
ANR	953999	ReturnStatement	return ret ;	4439:1:129952:129962	953906	5	True				
ANR	954000	Identifier	ret		953906	0					
ANR	954001	ReturnType	static int		953906	1					
ANR	954002	Identifier	_php_imap_address_size		953906	2					
ANR	954003	ParameterList	ADDRESS * addresslist		953906	3					
ANR	954004	Parameter	ADDRESS * addresslist	4417:35:129398:129417	953906	0	True				
ANR	954005	ParameterType	ADDRESS *		953906	0					
ANR	954006	Identifier	addresslist		953906	1					
ANR	954007	CFGEntryNode	ENTRY		953906		True				
ANR	954008	CFGExitNode	EXIT		953906		True				
ANR	954009	Symbol	ret		953906						
ANR	954010	Symbol	addresslist		953906						
ANR	954011	Symbol	* tmp		953906						
ANR	954012	Symbol	tmp -> personal		953906						
ANR	954013	Symbol	num_ent		953906						
ANR	954014	Symbol	tmp		953906						
ANR	954015	Symbol	_php_rfc822_len		953906						
ANR	954016	Symbol	tmp -> adl		953906						
ANR	954017	Symbol	tmp -> host		953906						
ANR	954018	Symbol	tmp -> next		953906						
ANR	954019	Symbol	tmp -> mailbox		953906						
ANR	954020	Symbol	PHP_IMAP_ADDRESS_SIZE_BUF		953906						
ANR	954021	Function	_php_rfc822_write_address	4446:0:130015:130368							
ANR	954022	FunctionDef	_php_rfc822_write_address (ADDRESS * addresslist)		954021	0					
ANR	954023	CompoundStatement		4447:0:130083:130368	954021	0					
ANR	954024	IdentifierDeclStatement	char address [ SENDBUFLEN ] ;	4448:1:130086:130110	954021	0	True				
ANR	954025	IdentifierDecl	address [ SENDBUFLEN ]		954021	0					
ANR	954026	IdentifierDeclType	char [ SENDBUFLEN ]		954021	0					
ANR	954027	Identifier	address		954021	1					
ANR	954028	Identifier	SENDBUFLEN		954021	2					
ANR	954029	IfStatement	if ( _php_imap_address_size ( addresslist ) >= SENDBUFLEN )		954021	1					
ANR	954030	Condition	_php_imap_address_size ( addresslist ) >= SENDBUFLEN	4450:5:130118:130166	954021	0	True				
ANR	954031	RelationalExpression	_php_imap_address_size ( addresslist ) >= SENDBUFLEN		954021	0		>=			
ANR	954032	CallExpression	_php_imap_address_size ( addresslist )		954021	0					
ANR	954033	Callee	_php_imap_address_size		954021	0					
ANR	954034	Identifier	_php_imap_address_size		954021	0					
ANR	954035	ArgumentList	addresslist		954021	1					
ANR	954036	Argument	addresslist		954021	0					
ANR	954037	Identifier	addresslist		954021	0					
ANR	954038	Identifier	SENDBUFLEN		954021	1					
ANR	954039	CompoundStatement		4:56:85:85	954021	1					
ANR	954040	ExpressionStatement	"php_error_docref ( NULL , E_ERROR , ""Address buffer overflow"" )"	4451:2:130173:130231	954021	0	True				
ANR	954041	CallExpression	"php_error_docref ( NULL , E_ERROR , ""Address buffer overflow"" )"		954021	0					
ANR	954042	Callee	php_error_docref		954021	0					
ANR	954043	Identifier	php_error_docref		954021	0					
ANR	954044	ArgumentList	NULL		954021	1					
ANR	954045	Argument	NULL		954021	0					
ANR	954046	Identifier	NULL		954021	0					
ANR	954047	Argument	E_ERROR		954021	1					
ANR	954048	Identifier	E_ERROR		954021	0					
ANR	954049	Argument	"""Address buffer overflow"""		954021	2					
ANR	954050	PrimaryExpression	"""Address buffer overflow"""		954021	0					
ANR	954051	ReturnStatement	return NULL ;	4452:2:130235:130246	954021	1	True				
ANR	954052	Identifier	NULL		954021	0					
ANR	954053	ExpressionStatement	address [ 0 ] = 0	4454:1:130252:130266	954021	2	True				
ANR	954054	AssignmentExpression	address [ 0 ] = 0		954021	0		=			
ANR	954055	ArrayIndexing	address [ 0 ]		954021	0					
ANR	954056	Identifier	address		954021	0					
ANR	954057	PrimaryExpression	0		954021	1					
ANR	954058	PrimaryExpression	0		954021	1					
ANR	954059	ExpressionStatement	"rfc822_write_address ( address , addresslist )"	4455:1:130269:130311	954021	3	True				
ANR	954060	CallExpression	"rfc822_write_address ( address , addresslist )"		954021	0					
ANR	954061	Callee	rfc822_write_address		954021	0					
ANR	954062	Identifier	rfc822_write_address		954021	0					
ANR	954063	ArgumentList	address		954021	1					
ANR	954064	Argument	address		954021	0					
ANR	954065	Identifier	address		954021	0					
ANR	954066	Argument	addresslist		954021	1					
ANR	954067	Identifier	addresslist		954021	0					
ANR	954068	ReturnStatement	"return zend_string_init ( address , strlen ( address ) , 0 ) ;"	4456:1:130314:130366	954021	4	True				
ANR	954069	CallExpression	"zend_string_init ( address , strlen ( address ) , 0 )"		954021	0					
ANR	954070	Callee	zend_string_init		954021	0					
ANR	954071	Identifier	zend_string_init		954021	0					
ANR	954072	ArgumentList	address		954021	1					
ANR	954073	Argument	address		954021	0					
ANR	954074	Identifier	address		954021	0					
ANR	954075	Argument	strlen ( address )		954021	1					
ANR	954076	CallExpression	strlen ( address )		954021	0					
ANR	954077	Callee	strlen		954021	0					
ANR	954078	Identifier	strlen		954021	0					
ANR	954079	ArgumentList	address		954021	1					
ANR	954080	Argument	address		954021	0					
ANR	954081	Identifier	address		954021	0					
ANR	954082	Argument	0		954021	2					
ANR	954083	PrimaryExpression	0		954021	0					
ANR	954084	ReturnType	static zend_string *		954021	1					
ANR	954085	Identifier	_php_rfc822_write_address		954021	2					
ANR	954086	ParameterList	ADDRESS * addresslist		954021	3					
ANR	954087	Parameter	ADDRESS * addresslist	4446:46:130061:130080	954021	0	True				
ANR	954088	ParameterType	ADDRESS *		954021	0					
ANR	954089	Identifier	addresslist		954021	1					
ANR	954090	CFGEntryNode	ENTRY		954021		True				
ANR	954091	CFGExitNode	EXIT		954021		True				
ANR	954092	Symbol	addresslist		954021						
ANR	954093	Symbol	strlen		954021						
ANR	954094	Symbol	zend_string_init		954021						
ANR	954095	Symbol	address		954021						
ANR	954096	Symbol	NULL		954021						
ANR	954097	Symbol	E_ERROR		954021						
ANR	954098	Symbol	SENDBUFLEN		954021						
ANR	954099	Symbol	_php_imap_address_size		954021						
ANR	954100	Symbol	* address		954021						
ANR	954101	Function	_php_imap_parse_address	4462:0:130422:131165							
ANR	954102	FunctionDef	"_php_imap_parse_address (ADDRESS * addresslist , zval * paddress)"		954101	0					
ANR	954103	CompoundStatement		4463:0:130505:131165	954101	0					
ANR	954104	IdentifierDeclStatement	zend_string * fulladdress ;	4464:1:130508:130532	954101	0	True				
ANR	954105	IdentifierDecl	* fulladdress		954101	0					
ANR	954106	IdentifierDeclType	zend_string *		954101	0					
ANR	954107	Identifier	fulladdress		954101	1					
ANR	954108	IdentifierDeclStatement	ADDRESS * addresstmp ;	4465:1:130535:130554	954101	1	True				
ANR	954109	IdentifierDecl	* addresstmp		954101	0					
ANR	954110	IdentifierDeclType	ADDRESS *		954101	0					
ANR	954111	Identifier	addresstmp		954101	1					
ANR	954112	IdentifierDeclStatement	zval tmpvals ;	4466:1:130557:130569	954101	2	True				
ANR	954113	IdentifierDecl	tmpvals		954101	0					
ANR	954114	IdentifierDeclType	zval		954101	0					
ANR	954115	Identifier	tmpvals		954101	1					
ANR	954116	ExpressionStatement	addresstmp = addresslist	4468:1:130573:130597	954101	3	True				
ANR	954117	AssignmentExpression	addresstmp = addresslist		954101	0		=			
ANR	954118	Identifier	addresstmp		954101	0					
ANR	954119	Identifier	addresslist		954101	1					
ANR	954120	ExpressionStatement	fulladdress = _php_rfc822_write_address ( addresstmp )	4470:1:130601:130652	954101	4	True				
ANR	954121	AssignmentExpression	fulladdress = _php_rfc822_write_address ( addresstmp )		954101	0		=			
ANR	954122	Identifier	fulladdress		954101	0					
ANR	954123	CallExpression	_php_rfc822_write_address ( addresstmp )		954101	1					
ANR	954124	Callee	_php_rfc822_write_address		954101	0					
ANR	954125	Identifier	_php_rfc822_write_address		954101	0					
ANR	954126	ArgumentList	addresstmp		954101	1					
ANR	954127	Argument	addresstmp		954101	0					
ANR	954128	Identifier	addresstmp		954101	0					
ANR	954129	ExpressionStatement	addresstmp = addresslist	4472:1:130656:130680	954101	5	True				
ANR	954130	AssignmentExpression	addresstmp = addresslist		954101	0		=			
ANR	954131	Identifier	addresstmp		954101	0					
ANR	954132	Identifier	addresslist		954101	1					
ANR	954133	DoStatement	do		954101	6					
ANR	954134	CompoundStatement		11:4:180:180	954101	0					
ANR	954135	ExpressionStatement	object_init ( & tmpvals )	4474:2:130690:130711	954101	0	True				
ANR	954136	CallExpression	object_init ( & tmpvals )		954101	0					
ANR	954137	Callee	object_init		954101	0					
ANR	954138	Identifier	object_init		954101	0					
ANR	954139	ArgumentList	& tmpvals		954101	1					
ANR	954140	Argument	& tmpvals		954101	0					
ANR	954141	UnaryOperationExpression	& tmpvals		954101	0					
ANR	954142	UnaryOperator	&		954101	0					
ANR	954143	Identifier	tmpvals		954101	1					
ANR	954144	IfStatement	if ( addresstmp -> personal )		954101	1					
ANR	954145	Condition	addresstmp -> personal	4475:6:130719:130738	954101	0	True				
ANR	954146	PtrMemberAccess	addresstmp -> personal		954101	0					
ANR	954147	Identifier	addresstmp		954101	0					
ANR	954148	Identifier	personal		954101	1					
ANR	954149	ExpressionStatement	"add_property_string ( & tmpvals , ""personal"" , addresstmp -> personal )"	4475:28:130741:130804	954101	1	True				
ANR	954150	CallExpression	"add_property_string ( & tmpvals , ""personal"" , addresstmp -> personal )"		954101	0					
ANR	954151	Callee	add_property_string		954101	0					
ANR	954152	Identifier	add_property_string		954101	0					
ANR	954153	ArgumentList	& tmpvals		954101	1					
ANR	954154	Argument	& tmpvals		954101	0					
ANR	954155	UnaryOperationExpression	& tmpvals		954101	0					
ANR	954156	UnaryOperator	&		954101	0					
ANR	954157	Identifier	tmpvals		954101	1					
ANR	954158	Argument	"""personal"""		954101	1					
ANR	954159	PrimaryExpression	"""personal"""		954101	0					
ANR	954160	Argument	addresstmp -> personal		954101	2					
ANR	954161	PtrMemberAccess	addresstmp -> personal		954101	0					
ANR	954162	Identifier	addresstmp		954101	0					
ANR	954163	Identifier	personal		954101	1					
ANR	954164	IfStatement	if ( addresstmp -> adl )		954101	2					
ANR	954165	Condition	addresstmp -> adl	4476:6:130812:130826	954101	0	True				
ANR	954166	PtrMemberAccess	addresstmp -> adl		954101	0					
ANR	954167	Identifier	addresstmp		954101	0					
ANR	954168	Identifier	adl		954101	1					
ANR	954169	ExpressionStatement	"add_property_string ( & tmpvals , ""adl"" , addresstmp -> adl )"	4476:23:130829:130882	954101	1	True				
ANR	954170	CallExpression	"add_property_string ( & tmpvals , ""adl"" , addresstmp -> adl )"		954101	0					
ANR	954171	Callee	add_property_string		954101	0					
ANR	954172	Identifier	add_property_string		954101	0					
ANR	954173	ArgumentList	& tmpvals		954101	1					
ANR	954174	Argument	& tmpvals		954101	0					
ANR	954175	UnaryOperationExpression	& tmpvals		954101	0					
ANR	954176	UnaryOperator	&		954101	0					
ANR	954177	Identifier	tmpvals		954101	1					
ANR	954178	Argument	"""adl"""		954101	1					
ANR	954179	PrimaryExpression	"""adl"""		954101	0					
ANR	954180	Argument	addresstmp -> adl		954101	2					
ANR	954181	PtrMemberAccess	addresstmp -> adl		954101	0					
ANR	954182	Identifier	addresstmp		954101	0					
ANR	954183	Identifier	adl		954101	1					
ANR	954184	IfStatement	if ( addresstmp -> mailbox )		954101	3					
ANR	954185	Condition	addresstmp -> mailbox	4477:6:130890:130908	954101	0	True				
ANR	954186	PtrMemberAccess	addresstmp -> mailbox		954101	0					
ANR	954187	Identifier	addresstmp		954101	0					
ANR	954188	Identifier	mailbox		954101	1					
ANR	954189	ExpressionStatement	"add_property_string ( & tmpvals , ""mailbox"" , addresstmp -> mailbox )"	4477:27:130911:130972	954101	1	True				
ANR	954190	CallExpression	"add_property_string ( & tmpvals , ""mailbox"" , addresstmp -> mailbox )"		954101	0					
ANR	954191	Callee	add_property_string		954101	0					
ANR	954192	Identifier	add_property_string		954101	0					
ANR	954193	ArgumentList	& tmpvals		954101	1					
ANR	954194	Argument	& tmpvals		954101	0					
ANR	954195	UnaryOperationExpression	& tmpvals		954101	0					
ANR	954196	UnaryOperator	&		954101	0					
ANR	954197	Identifier	tmpvals		954101	1					
ANR	954198	Argument	"""mailbox"""		954101	1					
ANR	954199	PrimaryExpression	"""mailbox"""		954101	0					
ANR	954200	Argument	addresstmp -> mailbox		954101	2					
ANR	954201	PtrMemberAccess	addresstmp -> mailbox		954101	0					
ANR	954202	Identifier	addresstmp		954101	0					
ANR	954203	Identifier	mailbox		954101	1					
ANR	954204	IfStatement	if ( addresstmp -> host )		954101	4					
ANR	954205	Condition	addresstmp -> host	4478:6:130980:130995	954101	0	True				
ANR	954206	PtrMemberAccess	addresstmp -> host		954101	0					
ANR	954207	Identifier	addresstmp		954101	0					
ANR	954208	Identifier	host		954101	1					
ANR	954209	ExpressionStatement	"add_property_string ( & tmpvals , ""host"" , addresstmp -> host )"	4478:24:130998:131053	954101	1	True				
ANR	954210	CallExpression	"add_property_string ( & tmpvals , ""host"" , addresstmp -> host )"		954101	0					
ANR	954211	Callee	add_property_string		954101	0					
ANR	954212	Identifier	add_property_string		954101	0					
ANR	954213	ArgumentList	& tmpvals		954101	1					
ANR	954214	Argument	& tmpvals		954101	0					
ANR	954215	UnaryOperationExpression	& tmpvals		954101	0					
ANR	954216	UnaryOperator	&		954101	0					
ANR	954217	Identifier	tmpvals		954101	1					
ANR	954218	Argument	"""host"""		954101	1					
ANR	954219	PrimaryExpression	"""host"""		954101	0					
ANR	954220	Argument	addresstmp -> host		954101	2					
ANR	954221	PtrMemberAccess	addresstmp -> host		954101	0					
ANR	954222	Identifier	addresstmp		954101	0					
ANR	954223	Identifier	host		954101	1					
ANR	954224	ExpressionStatement	"add_next_index_object ( paddress , & tmpvals )"	4479:2:131057:131098	954101	5	True				
ANR	954225	CallExpression	"add_next_index_object ( paddress , & tmpvals )"		954101	0					
ANR	954226	Callee	add_next_index_object		954101	0					
ANR	954227	Identifier	add_next_index_object		954101	0					
ANR	954228	ArgumentList	paddress		954101	1					
ANR	954229	Argument	paddress		954101	0					
ANR	954230	Identifier	paddress		954101	0					
ANR	954231	Argument	& tmpvals		954101	1					
ANR	954232	UnaryOperationExpression	& tmpvals		954101	0					
ANR	954233	UnaryOperator	&		954101	0					
ANR	954234	Identifier	tmpvals		954101	1					
ANR	954235	Condition	addresstmp = addresstmp -> next	4480:10:131110:131140	954101	1	True				
ANR	954236	AssignmentExpression	addresstmp = addresstmp -> next		954101	0		=			
ANR	954237	Identifier	addresstmp		954101	0					
ANR	954238	PtrMemberAccess	addresstmp -> next		954101	1					
ANR	954239	Identifier	addresstmp		954101	0					
ANR	954240	Identifier	next		954101	1					
ANR	954241	ReturnStatement	return fulladdress ;	4481:1:131145:131163	954101	7	True				
ANR	954242	Identifier	fulladdress		954101	0					
ANR	954243	ReturnType	static zend_string *		954101	1					
ANR	954244	Identifier	_php_imap_parse_address		954101	2					
ANR	954245	ParameterList	"ADDRESS * addresslist , zval * paddress"		954101	3					
ANR	954246	Parameter	ADDRESS * addresslist	4462:45:130467:130486	954101	0	True				
ANR	954247	ParameterType	ADDRESS *		954101	0					
ANR	954248	Identifier	addresslist		954101	1					
ANR	954249	Parameter	zval * paddress	4462:67:130489:130502	954101	1	True				
ANR	954250	ParameterType	zval *		954101	0					
ANR	954251	Identifier	paddress		954101	1					
ANR	954252	CFGEntryNode	ENTRY		954101		True				
ANR	954253	CFGExitNode	EXIT		954101		True				
ANR	954254	Symbol	fulladdress		954101						
ANR	954255	Symbol	addresslist		954101						
ANR	954256	Symbol	addresstmp -> host		954101						
ANR	954257	Symbol	addresstmp		954101						
ANR	954258	Symbol	addresstmp -> mailbox		954101						
ANR	954259	Symbol	& tmpvals		954101						
ANR	954260	Symbol	addresstmp -> personal		954101						
ANR	954261	Symbol	addresstmp -> adl		954101						
ANR	954262	Symbol	* addresstmp		954101						
ANR	954263	Symbol	_php_rfc822_write_address		954101						
ANR	954264	Symbol	addresstmp -> next		954101						
ANR	954265	Symbol	tmpvals		954101						
ANR	954266	Symbol	paddress		954101						
ANR	954267	Function	_php_make_header_object	4487:0:131213:133848							
ANR	954268	FunctionDef	"_php_make_header_object (zval * myzvalue , ENVELOPE * en)"		954267	0					
ANR	954269	CompoundStatement		4488:0:131279:133848	954267	0					
ANR	954270	IdentifierDeclStatement	zval paddress ;	4489:1:131282:131295	954267	0	True				
ANR	954271	IdentifierDecl	paddress		954267	0					
ANR	954272	IdentifierDeclType	zval		954267	0					
ANR	954273	Identifier	paddress		954267	1					
ANR	954274	IdentifierDeclStatement	zend_string * fulladdress = NULL ;	4490:1:131298:131327	954267	1	True				
ANR	954275	IdentifierDecl	* fulladdress = NULL		954267	0					
ANR	954276	IdentifierDeclType	zend_string *		954267	0					
ANR	954277	Identifier	fulladdress		954267	1					
ANR	954278	AssignmentExpression	* fulladdress = NULL		954267	2		=			
ANR	954279	Identifier	NULL		954267	0					
ANR	954280	Identifier	NULL		954267	1					
ANR	954281	ExpressionStatement	object_init ( myzvalue )	4492:1:131331:131352	954267	2	True				
ANR	954282	CallExpression	object_init ( myzvalue )		954267	0					
ANR	954283	Callee	object_init		954267	0					
ANR	954284	Identifier	object_init		954267	0					
ANR	954285	ArgumentList	myzvalue		954267	1					
ANR	954286	Argument	myzvalue		954267	0					
ANR	954287	Identifier	myzvalue		954267	0					
ANR	954288	IfStatement	if ( en -> remail )		954267	3					
ANR	954289	Condition	en -> remail	4494:5:131360:131369	954267	0	True				
ANR	954290	PtrMemberAccess	en -> remail		954267	0					
ANR	954291	Identifier	en		954267	0					
ANR	954292	Identifier	remail		954267	1					
ANR	954293	ExpressionStatement	"add_property_string ( myzvalue , ""remail"" , en -> remail )"	4494:17:131372:131423	954267	1	True				
ANR	954294	CallExpression	"add_property_string ( myzvalue , ""remail"" , en -> remail )"		954267	0					
ANR	954295	Callee	add_property_string		954267	0					
ANR	954296	Identifier	add_property_string		954267	0					
ANR	954297	ArgumentList	myzvalue		954267	1					
ANR	954298	Argument	myzvalue		954267	0					
ANR	954299	Identifier	myzvalue		954267	0					
ANR	954300	Argument	"""remail"""		954267	1					
ANR	954301	PrimaryExpression	"""remail"""		954267	0					
ANR	954302	Argument	en -> remail		954267	2					
ANR	954303	PtrMemberAccess	en -> remail		954267	0					
ANR	954304	Identifier	en		954267	0					
ANR	954305	Identifier	remail		954267	1					
ANR	954306	IfStatement	if ( en -> date )		954267	4					
ANR	954307	Condition	en -> date	4495:5:131430:131437	954267	0	True				
ANR	954308	PtrMemberAccess	en -> date		954267	0					
ANR	954309	Identifier	en		954267	0					
ANR	954310	Identifier	date		954267	1					
ANR	954311	ExpressionStatement	"add_property_string ( myzvalue , ""date"" , ( char * ) en -> date )"	4495:15:131440:131494	954267	1	True				
ANR	954312	CallExpression	"add_property_string ( myzvalue , ""date"" , ( char * ) en -> date )"		954267	0					
ANR	954313	Callee	add_property_string		954267	0					
ANR	954314	Identifier	add_property_string		954267	0					
ANR	954315	ArgumentList	myzvalue		954267	1					
ANR	954316	Argument	myzvalue		954267	0					
ANR	954317	Identifier	myzvalue		954267	0					
ANR	954318	Argument	"""date"""		954267	1					
ANR	954319	PrimaryExpression	"""date"""		954267	0					
ANR	954320	Argument	( char * ) en -> date		954267	2					
ANR	954321	CastExpression	( char * ) en -> date		954267	0					
ANR	954322	CastTarget	char *		954267	0					
ANR	954323	PtrMemberAccess	en -> date		954267	1					
ANR	954324	Identifier	en		954267	0					
ANR	954325	Identifier	date		954267	1					
ANR	954326	IfStatement	if ( en -> date )		954267	5					
ANR	954327	Condition	en -> date	4496:5:131501:131508	954267	0	True				
ANR	954328	PtrMemberAccess	en -> date		954267	0					
ANR	954329	Identifier	en		954267	0					
ANR	954330	Identifier	date		954267	1					
ANR	954331	ExpressionStatement	"add_property_string ( myzvalue , ""Date"" , ( char * ) en -> date )"	4496:15:131511:131565	954267	1	True				
ANR	954332	CallExpression	"add_property_string ( myzvalue , ""Date"" , ( char * ) en -> date )"		954267	0					
ANR	954333	Callee	add_property_string		954267	0					
ANR	954334	Identifier	add_property_string		954267	0					
ANR	954335	ArgumentList	myzvalue		954267	1					
ANR	954336	Argument	myzvalue		954267	0					
ANR	954337	Identifier	myzvalue		954267	0					
ANR	954338	Argument	"""Date"""		954267	1					
ANR	954339	PrimaryExpression	"""Date"""		954267	0					
ANR	954340	Argument	( char * ) en -> date		954267	2					
ANR	954341	CastExpression	( char * ) en -> date		954267	0					
ANR	954342	CastTarget	char *		954267	0					
ANR	954343	PtrMemberAccess	en -> date		954267	1					
ANR	954344	Identifier	en		954267	0					
ANR	954345	Identifier	date		954267	1					
ANR	954346	IfStatement	if ( en -> subject )		954267	6					
ANR	954347	Condition	en -> subject	4497:5:131572:131582	954267	0	True				
ANR	954348	PtrMemberAccess	en -> subject		954267	0					
ANR	954349	Identifier	en		954267	0					
ANR	954350	Identifier	subject		954267	1					
ANR	954351	ExpressionStatement	"add_property_string ( myzvalue , ""subject"" , en -> subject )"	4497:18:131585:131638	954267	1	True				
ANR	954352	CallExpression	"add_property_string ( myzvalue , ""subject"" , en -> subject )"		954267	0					
ANR	954353	Callee	add_property_string		954267	0					
ANR	954354	Identifier	add_property_string		954267	0					
ANR	954355	ArgumentList	myzvalue		954267	1					
ANR	954356	Argument	myzvalue		954267	0					
ANR	954357	Identifier	myzvalue		954267	0					
ANR	954358	Argument	"""subject"""		954267	1					
ANR	954359	PrimaryExpression	"""subject"""		954267	0					
ANR	954360	Argument	en -> subject		954267	2					
ANR	954361	PtrMemberAccess	en -> subject		954267	0					
ANR	954362	Identifier	en		954267	0					
ANR	954363	Identifier	subject		954267	1					
ANR	954364	IfStatement	if ( en -> subject )		954267	7					
ANR	954365	Condition	en -> subject	4498:5:131645:131655	954267	0	True				
ANR	954366	PtrMemberAccess	en -> subject		954267	0					
ANR	954367	Identifier	en		954267	0					
ANR	954368	Identifier	subject		954267	1					
ANR	954369	ExpressionStatement	"add_property_string ( myzvalue , ""Subject"" , en -> subject )"	4498:18:131658:131711	954267	1	True				
ANR	954370	CallExpression	"add_property_string ( myzvalue , ""Subject"" , en -> subject )"		954267	0					
ANR	954371	Callee	add_property_string		954267	0					
ANR	954372	Identifier	add_property_string		954267	0					
ANR	954373	ArgumentList	myzvalue		954267	1					
ANR	954374	Argument	myzvalue		954267	0					
ANR	954375	Identifier	myzvalue		954267	0					
ANR	954376	Argument	"""Subject"""		954267	1					
ANR	954377	PrimaryExpression	"""Subject"""		954267	0					
ANR	954378	Argument	en -> subject		954267	2					
ANR	954379	PtrMemberAccess	en -> subject		954267	0					
ANR	954380	Identifier	en		954267	0					
ANR	954381	Identifier	subject		954267	1					
ANR	954382	IfStatement	if ( en -> in_reply_to )		954267	8					
ANR	954383	Condition	en -> in_reply_to	4499:5:131718:131732	954267	0	True				
ANR	954384	PtrMemberAccess	en -> in_reply_to		954267	0					
ANR	954385	Identifier	en		954267	0					
ANR	954386	Identifier	in_reply_to		954267	1					
ANR	954387	ExpressionStatement	"add_property_string ( myzvalue , ""in_reply_to"" , en -> in_reply_to )"	4499:22:131735:131796	954267	1	True				
ANR	954388	CallExpression	"add_property_string ( myzvalue , ""in_reply_to"" , en -> in_reply_to )"		954267	0					
ANR	954389	Callee	add_property_string		954267	0					
ANR	954390	Identifier	add_property_string		954267	0					
ANR	954391	ArgumentList	myzvalue		954267	1					
ANR	954392	Argument	myzvalue		954267	0					
ANR	954393	Identifier	myzvalue		954267	0					
ANR	954394	Argument	"""in_reply_to"""		954267	1					
ANR	954395	PrimaryExpression	"""in_reply_to"""		954267	0					
ANR	954396	Argument	en -> in_reply_to		954267	2					
ANR	954397	PtrMemberAccess	en -> in_reply_to		954267	0					
ANR	954398	Identifier	en		954267	0					
ANR	954399	Identifier	in_reply_to		954267	1					
ANR	954400	IfStatement	if ( en -> message_id )		954267	9					
ANR	954401	Condition	en -> message_id	4500:5:131803:131816	954267	0	True				
ANR	954402	PtrMemberAccess	en -> message_id		954267	0					
ANR	954403	Identifier	en		954267	0					
ANR	954404	Identifier	message_id		954267	1					
ANR	954405	ExpressionStatement	"add_property_string ( myzvalue , ""message_id"" , en -> message_id )"	4500:21:131819:131878	954267	1	True				
ANR	954406	CallExpression	"add_property_string ( myzvalue , ""message_id"" , en -> message_id )"		954267	0					
ANR	954407	Callee	add_property_string		954267	0					
ANR	954408	Identifier	add_property_string		954267	0					
ANR	954409	ArgumentList	myzvalue		954267	1					
ANR	954410	Argument	myzvalue		954267	0					
ANR	954411	Identifier	myzvalue		954267	0					
ANR	954412	Argument	"""message_id"""		954267	1					
ANR	954413	PrimaryExpression	"""message_id"""		954267	0					
ANR	954414	Argument	en -> message_id		954267	2					
ANR	954415	PtrMemberAccess	en -> message_id		954267	0					
ANR	954416	Identifier	en		954267	0					
ANR	954417	Identifier	message_id		954267	1					
ANR	954418	IfStatement	if ( en -> newsgroups )		954267	10					
ANR	954419	Condition	en -> newsgroups	4501:5:131885:131898	954267	0	True				
ANR	954420	PtrMemberAccess	en -> newsgroups		954267	0					
ANR	954421	Identifier	en		954267	0					
ANR	954422	Identifier	newsgroups		954267	1					
ANR	954423	ExpressionStatement	"add_property_string ( myzvalue , ""newsgroups"" , en -> newsgroups )"	4501:21:131901:131960	954267	1	True				
ANR	954424	CallExpression	"add_property_string ( myzvalue , ""newsgroups"" , en -> newsgroups )"		954267	0					
ANR	954425	Callee	add_property_string		954267	0					
ANR	954426	Identifier	add_property_string		954267	0					
ANR	954427	ArgumentList	myzvalue		954267	1					
ANR	954428	Argument	myzvalue		954267	0					
ANR	954429	Identifier	myzvalue		954267	0					
ANR	954430	Argument	"""newsgroups"""		954267	1					
ANR	954431	PrimaryExpression	"""newsgroups"""		954267	0					
ANR	954432	Argument	en -> newsgroups		954267	2					
ANR	954433	PtrMemberAccess	en -> newsgroups		954267	0					
ANR	954434	Identifier	en		954267	0					
ANR	954435	Identifier	newsgroups		954267	1					
ANR	954436	IfStatement	if ( en -> followup_to )		954267	11					
ANR	954437	Condition	en -> followup_to	4502:5:131967:131981	954267	0	True				
ANR	954438	PtrMemberAccess	en -> followup_to		954267	0					
ANR	954439	Identifier	en		954267	0					
ANR	954440	Identifier	followup_to		954267	1					
ANR	954441	ExpressionStatement	"add_property_string ( myzvalue , ""followup_to"" , en -> followup_to )"	4502:22:131984:132045	954267	1	True				
ANR	954442	CallExpression	"add_property_string ( myzvalue , ""followup_to"" , en -> followup_to )"		954267	0					
ANR	954443	Callee	add_property_string		954267	0					
ANR	954444	Identifier	add_property_string		954267	0					
ANR	954445	ArgumentList	myzvalue		954267	1					
ANR	954446	Argument	myzvalue		954267	0					
ANR	954447	Identifier	myzvalue		954267	0					
ANR	954448	Argument	"""followup_to"""		954267	1					
ANR	954449	PrimaryExpression	"""followup_to"""		954267	0					
ANR	954450	Argument	en -> followup_to		954267	2					
ANR	954451	PtrMemberAccess	en -> followup_to		954267	0					
ANR	954452	Identifier	en		954267	0					
ANR	954453	Identifier	followup_to		954267	1					
ANR	954454	IfStatement	if ( en -> references )		954267	12					
ANR	954455	Condition	en -> references	4503:5:132052:132065	954267	0	True				
ANR	954456	PtrMemberAccess	en -> references		954267	0					
ANR	954457	Identifier	en		954267	0					
ANR	954458	Identifier	references		954267	1					
ANR	954459	ExpressionStatement	"add_property_string ( myzvalue , ""references"" , en -> references )"	4503:21:132068:132127	954267	1	True				
ANR	954460	CallExpression	"add_property_string ( myzvalue , ""references"" , en -> references )"		954267	0					
ANR	954461	Callee	add_property_string		954267	0					
ANR	954462	Identifier	add_property_string		954267	0					
ANR	954463	ArgumentList	myzvalue		954267	1					
ANR	954464	Argument	myzvalue		954267	0					
ANR	954465	Identifier	myzvalue		954267	0					
ANR	954466	Argument	"""references"""		954267	1					
ANR	954467	PrimaryExpression	"""references"""		954267	0					
ANR	954468	Argument	en -> references		954267	2					
ANR	954469	PtrMemberAccess	en -> references		954267	0					
ANR	954470	Identifier	en		954267	0					
ANR	954471	Identifier	references		954267	1					
ANR	954472	IfStatement	if ( en -> to )		954267	13					
ANR	954473	Condition	en -> to	4505:5:132135:132140	954267	0	True				
ANR	954474	PtrMemberAccess	en -> to		954267	0					
ANR	954475	Identifier	en		954267	0					
ANR	954476	Identifier	to		954267	1					
ANR	954477	CompoundStatement		18:13:863:863	954267	1					
ANR	954478	ExpressionStatement	array_init ( & paddress )	4506:2:132147:132168	954267	0	True				
ANR	954479	CallExpression	array_init ( & paddress )		954267	0					
ANR	954480	Callee	array_init		954267	0					
ANR	954481	Identifier	array_init		954267	0					
ANR	954482	ArgumentList	& paddress		954267	1					
ANR	954483	Argument	& paddress		954267	0					
ANR	954484	UnaryOperationExpression	& paddress		954267	0					
ANR	954485	UnaryOperator	&		954267	0					
ANR	954486	Identifier	paddress		954267	1					
ANR	954487	ExpressionStatement	"fulladdress = _php_imap_parse_address ( en -> to , & paddress )"	4507:2:132172:132228	954267	1	True				
ANR	954488	AssignmentExpression	"fulladdress = _php_imap_parse_address ( en -> to , & paddress )"		954267	0		=			
ANR	954489	Identifier	fulladdress		954267	0					
ANR	954490	CallExpression	"_php_imap_parse_address ( en -> to , & paddress )"		954267	1					
ANR	954491	Callee	_php_imap_parse_address		954267	0					
ANR	954492	Identifier	_php_imap_parse_address		954267	0					
ANR	954493	ArgumentList	en -> to		954267	1					
ANR	954494	Argument	en -> to		954267	0					
ANR	954495	PtrMemberAccess	en -> to		954267	0					
ANR	954496	Identifier	en		954267	0					
ANR	954497	Identifier	to		954267	1					
ANR	954498	Argument	& paddress		954267	1					
ANR	954499	UnaryOperationExpression	& paddress		954267	0					
ANR	954500	UnaryOperator	&		954267	0					
ANR	954501	Identifier	paddress		954267	1					
ANR	954502	IfStatement	if ( fulladdress )		954267	2					
ANR	954503	Condition	fulladdress	4508:6:132236:132246	954267	0	True				
ANR	954504	Identifier	fulladdress		954267	0					
ANR	954505	CompoundStatement		21:19:969:969	954267	1					
ANR	954506	ExpressionStatement	"add_property_str ( myzvalue , ""toaddress"" , fulladdress )"	4509:3:132254:132306	954267	0	True				
ANR	954507	CallExpression	"add_property_str ( myzvalue , ""toaddress"" , fulladdress )"		954267	0					
ANR	954508	Callee	add_property_str		954267	0					
ANR	954509	Identifier	add_property_str		954267	0					
ANR	954510	ArgumentList	myzvalue		954267	1					
ANR	954511	Argument	myzvalue		954267	0					
ANR	954512	Identifier	myzvalue		954267	0					
ANR	954513	Argument	"""toaddress"""		954267	1					
ANR	954514	PrimaryExpression	"""toaddress"""		954267	0					
ANR	954515	Argument	fulladdress		954267	2					
ANR	954516	Identifier	fulladdress		954267	0					
ANR	954517	ExpressionStatement	"add_assoc_object ( myzvalue , ""to"" , & paddress )"	4511:2:132314:132357	954267	3	True				
ANR	954518	CallExpression	"add_assoc_object ( myzvalue , ""to"" , & paddress )"		954267	0					
ANR	954519	Callee	add_assoc_object		954267	0					
ANR	954520	Identifier	add_assoc_object		954267	0					
ANR	954521	ArgumentList	myzvalue		954267	1					
ANR	954522	Argument	myzvalue		954267	0					
ANR	954523	Identifier	myzvalue		954267	0					
ANR	954524	Argument	"""to"""		954267	1					
ANR	954525	PrimaryExpression	"""to"""		954267	0					
ANR	954526	Argument	& paddress		954267	2					
ANR	954527	UnaryOperationExpression	& paddress		954267	0					
ANR	954528	UnaryOperator	&		954267	0					
ANR	954529	Identifier	paddress		954267	1					
ANR	954530	IfStatement	if ( en -> from )		954267	14					
ANR	954531	Condition	en -> from	4514:5:132368:132375	954267	0	True				
ANR	954532	PtrMemberAccess	en -> from		954267	0					
ANR	954533	Identifier	en		954267	0					
ANR	954534	Identifier	from		954267	1					
ANR	954535	CompoundStatement		27:15:1098:1098	954267	1					
ANR	954536	ExpressionStatement	array_init ( & paddress )	4515:2:132382:132403	954267	0	True				
ANR	954537	CallExpression	array_init ( & paddress )		954267	0					
ANR	954538	Callee	array_init		954267	0					
ANR	954539	Identifier	array_init		954267	0					
ANR	954540	ArgumentList	& paddress		954267	1					
ANR	954541	Argument	& paddress		954267	0					
ANR	954542	UnaryOperationExpression	& paddress		954267	0					
ANR	954543	UnaryOperator	&		954267	0					
ANR	954544	Identifier	paddress		954267	1					
ANR	954545	ExpressionStatement	"fulladdress = _php_imap_parse_address ( en -> from , & paddress )"	4516:2:132407:132465	954267	1	True				
ANR	954546	AssignmentExpression	"fulladdress = _php_imap_parse_address ( en -> from , & paddress )"		954267	0		=			
ANR	954547	Identifier	fulladdress		954267	0					
ANR	954548	CallExpression	"_php_imap_parse_address ( en -> from , & paddress )"		954267	1					
ANR	954549	Callee	_php_imap_parse_address		954267	0					
ANR	954550	Identifier	_php_imap_parse_address		954267	0					
ANR	954551	ArgumentList	en -> from		954267	1					
ANR	954552	Argument	en -> from		954267	0					
ANR	954553	PtrMemberAccess	en -> from		954267	0					
ANR	954554	Identifier	en		954267	0					
ANR	954555	Identifier	from		954267	1					
ANR	954556	Argument	& paddress		954267	1					
ANR	954557	UnaryOperationExpression	& paddress		954267	0					
ANR	954558	UnaryOperator	&		954267	0					
ANR	954559	Identifier	paddress		954267	1					
ANR	954560	IfStatement	if ( fulladdress )		954267	2					
ANR	954561	Condition	fulladdress	4517:6:132473:132483	954267	0	True				
ANR	954562	Identifier	fulladdress		954267	0					
ANR	954563	CompoundStatement		30:19:1206:1206	954267	1					
ANR	954564	ExpressionStatement	"add_property_str ( myzvalue , ""fromaddress"" , fulladdress )"	4518:3:132491:132545	954267	0	True				
ANR	954565	CallExpression	"add_property_str ( myzvalue , ""fromaddress"" , fulladdress )"		954267	0					
ANR	954566	Callee	add_property_str		954267	0					
ANR	954567	Identifier	add_property_str		954267	0					
ANR	954568	ArgumentList	myzvalue		954267	1					
ANR	954569	Argument	myzvalue		954267	0					
ANR	954570	Identifier	myzvalue		954267	0					
ANR	954571	Argument	"""fromaddress"""		954267	1					
ANR	954572	PrimaryExpression	"""fromaddress"""		954267	0					
ANR	954573	Argument	fulladdress		954267	2					
ANR	954574	Identifier	fulladdress		954267	0					
ANR	954575	ExpressionStatement	"add_assoc_object ( myzvalue , ""from"" , & paddress )"	4520:2:132553:132598	954267	3	True				
ANR	954576	CallExpression	"add_assoc_object ( myzvalue , ""from"" , & paddress )"		954267	0					
ANR	954577	Callee	add_assoc_object		954267	0					
ANR	954578	Identifier	add_assoc_object		954267	0					
ANR	954579	ArgumentList	myzvalue		954267	1					
ANR	954580	Argument	myzvalue		954267	0					
ANR	954581	Identifier	myzvalue		954267	0					
ANR	954582	Argument	"""from"""		954267	1					
ANR	954583	PrimaryExpression	"""from"""		954267	0					
ANR	954584	Argument	& paddress		954267	2					
ANR	954585	UnaryOperationExpression	& paddress		954267	0					
ANR	954586	UnaryOperator	&		954267	0					
ANR	954587	Identifier	paddress		954267	1					
ANR	954588	IfStatement	if ( en -> cc )		954267	15					
ANR	954589	Condition	en -> cc	4523:5:132609:132614	954267	0	True				
ANR	954590	PtrMemberAccess	en -> cc		954267	0					
ANR	954591	Identifier	en		954267	0					
ANR	954592	Identifier	cc		954267	1					
ANR	954593	CompoundStatement		36:13:1337:1337	954267	1					
ANR	954594	ExpressionStatement	array_init ( & paddress )	4524:2:132621:132642	954267	0	True				
ANR	954595	CallExpression	array_init ( & paddress )		954267	0					
ANR	954596	Callee	array_init		954267	0					
ANR	954597	Identifier	array_init		954267	0					
ANR	954598	ArgumentList	& paddress		954267	1					
ANR	954599	Argument	& paddress		954267	0					
ANR	954600	UnaryOperationExpression	& paddress		954267	0					
ANR	954601	UnaryOperator	&		954267	0					
ANR	954602	Identifier	paddress		954267	1					
ANR	954603	ExpressionStatement	"fulladdress = _php_imap_parse_address ( en -> cc , & paddress )"	4525:2:132646:132702	954267	1	True				
ANR	954604	AssignmentExpression	"fulladdress = _php_imap_parse_address ( en -> cc , & paddress )"		954267	0		=			
ANR	954605	Identifier	fulladdress		954267	0					
ANR	954606	CallExpression	"_php_imap_parse_address ( en -> cc , & paddress )"		954267	1					
ANR	954607	Callee	_php_imap_parse_address		954267	0					
ANR	954608	Identifier	_php_imap_parse_address		954267	0					
ANR	954609	ArgumentList	en -> cc		954267	1					
ANR	954610	Argument	en -> cc		954267	0					
ANR	954611	PtrMemberAccess	en -> cc		954267	0					
ANR	954612	Identifier	en		954267	0					
ANR	954613	Identifier	cc		954267	1					
ANR	954614	Argument	& paddress		954267	1					
ANR	954615	UnaryOperationExpression	& paddress		954267	0					
ANR	954616	UnaryOperator	&		954267	0					
ANR	954617	Identifier	paddress		954267	1					
ANR	954618	IfStatement	if ( fulladdress )		954267	2					
ANR	954619	Condition	fulladdress	4526:6:132710:132720	954267	0	True				
ANR	954620	Identifier	fulladdress		954267	0					
ANR	954621	CompoundStatement		39:19:1443:1443	954267	1					
ANR	954622	ExpressionStatement	"add_property_str ( myzvalue , ""ccaddress"" , fulladdress )"	4527:3:132728:132780	954267	0	True				
ANR	954623	CallExpression	"add_property_str ( myzvalue , ""ccaddress"" , fulladdress )"		954267	0					
ANR	954624	Callee	add_property_str		954267	0					
ANR	954625	Identifier	add_property_str		954267	0					
ANR	954626	ArgumentList	myzvalue		954267	1					
ANR	954627	Argument	myzvalue		954267	0					
ANR	954628	Identifier	myzvalue		954267	0					
ANR	954629	Argument	"""ccaddress"""		954267	1					
ANR	954630	PrimaryExpression	"""ccaddress"""		954267	0					
ANR	954631	Argument	fulladdress		954267	2					
ANR	954632	Identifier	fulladdress		954267	0					
ANR	954633	ExpressionStatement	"add_assoc_object ( myzvalue , ""cc"" , & paddress )"	4529:2:132788:132831	954267	3	True				
ANR	954634	CallExpression	"add_assoc_object ( myzvalue , ""cc"" , & paddress )"		954267	0					
ANR	954635	Callee	add_assoc_object		954267	0					
ANR	954636	Identifier	add_assoc_object		954267	0					
ANR	954637	ArgumentList	myzvalue		954267	1					
ANR	954638	Argument	myzvalue		954267	0					
ANR	954639	Identifier	myzvalue		954267	0					
ANR	954640	Argument	"""cc"""		954267	1					
ANR	954641	PrimaryExpression	"""cc"""		954267	0					
ANR	954642	Argument	& paddress		954267	2					
ANR	954643	UnaryOperationExpression	& paddress		954267	0					
ANR	954644	UnaryOperator	&		954267	0					
ANR	954645	Identifier	paddress		954267	1					
ANR	954646	IfStatement	if ( en -> bcc )		954267	16					
ANR	954647	Condition	en -> bcc	4532:5:132842:132848	954267	0	True				
ANR	954648	PtrMemberAccess	en -> bcc		954267	0					
ANR	954649	Identifier	en		954267	0					
ANR	954650	Identifier	bcc		954267	1					
ANR	954651	CompoundStatement		45:14:1571:1571	954267	1					
ANR	954652	ExpressionStatement	array_init ( & paddress )	4533:2:132855:132876	954267	0	True				
ANR	954653	CallExpression	array_init ( & paddress )		954267	0					
ANR	954654	Callee	array_init		954267	0					
ANR	954655	Identifier	array_init		954267	0					
ANR	954656	ArgumentList	& paddress		954267	1					
ANR	954657	Argument	& paddress		954267	0					
ANR	954658	UnaryOperationExpression	& paddress		954267	0					
ANR	954659	UnaryOperator	&		954267	0					
ANR	954660	Identifier	paddress		954267	1					
ANR	954661	ExpressionStatement	"fulladdress = _php_imap_parse_address ( en -> bcc , & paddress )"	4534:2:132880:132937	954267	1	True				
ANR	954662	AssignmentExpression	"fulladdress = _php_imap_parse_address ( en -> bcc , & paddress )"		954267	0		=			
ANR	954663	Identifier	fulladdress		954267	0					
ANR	954664	CallExpression	"_php_imap_parse_address ( en -> bcc , & paddress )"		954267	1					
ANR	954665	Callee	_php_imap_parse_address		954267	0					
ANR	954666	Identifier	_php_imap_parse_address		954267	0					
ANR	954667	ArgumentList	en -> bcc		954267	1					
ANR	954668	Argument	en -> bcc		954267	0					
ANR	954669	PtrMemberAccess	en -> bcc		954267	0					
ANR	954670	Identifier	en		954267	0					
ANR	954671	Identifier	bcc		954267	1					
ANR	954672	Argument	& paddress		954267	1					
ANR	954673	UnaryOperationExpression	& paddress		954267	0					
ANR	954674	UnaryOperator	&		954267	0					
ANR	954675	Identifier	paddress		954267	1					
ANR	954676	IfStatement	if ( fulladdress )		954267	2					
ANR	954677	Condition	fulladdress	4535:6:132945:132955	954267	0	True				
ANR	954678	Identifier	fulladdress		954267	0					
ANR	954679	CompoundStatement		48:19:1678:1678	954267	1					
ANR	954680	ExpressionStatement	"add_property_str ( myzvalue , ""bccaddress"" , fulladdress )"	4536:3:132963:133016	954267	0	True				
ANR	954681	CallExpression	"add_property_str ( myzvalue , ""bccaddress"" , fulladdress )"		954267	0					
ANR	954682	Callee	add_property_str		954267	0					
ANR	954683	Identifier	add_property_str		954267	0					
ANR	954684	ArgumentList	myzvalue		954267	1					
ANR	954685	Argument	myzvalue		954267	0					
ANR	954686	Identifier	myzvalue		954267	0					
ANR	954687	Argument	"""bccaddress"""		954267	1					
ANR	954688	PrimaryExpression	"""bccaddress"""		954267	0					
ANR	954689	Argument	fulladdress		954267	2					
ANR	954690	Identifier	fulladdress		954267	0					
ANR	954691	ExpressionStatement	"add_assoc_object ( myzvalue , ""bcc"" , & paddress )"	4538:2:133024:133068	954267	3	True				
ANR	954692	CallExpression	"add_assoc_object ( myzvalue , ""bcc"" , & paddress )"		954267	0					
ANR	954693	Callee	add_assoc_object		954267	0					
ANR	954694	Identifier	add_assoc_object		954267	0					
ANR	954695	ArgumentList	myzvalue		954267	1					
ANR	954696	Argument	myzvalue		954267	0					
ANR	954697	Identifier	myzvalue		954267	0					
ANR	954698	Argument	"""bcc"""		954267	1					
ANR	954699	PrimaryExpression	"""bcc"""		954267	0					
ANR	954700	Argument	& paddress		954267	2					
ANR	954701	UnaryOperationExpression	& paddress		954267	0					
ANR	954702	UnaryOperator	&		954267	0					
ANR	954703	Identifier	paddress		954267	1					
ANR	954704	IfStatement	if ( en -> reply_to )		954267	17					
ANR	954705	Condition	en -> reply_to	4541:5:133079:133090	954267	0	True				
ANR	954706	PtrMemberAccess	en -> reply_to		954267	0					
ANR	954707	Identifier	en		954267	0					
ANR	954708	Identifier	reply_to		954267	1					
ANR	954709	CompoundStatement		54:19:1813:1813	954267	1					
ANR	954710	ExpressionStatement	array_init ( & paddress )	4542:2:133097:133118	954267	0	True				
ANR	954711	CallExpression	array_init ( & paddress )		954267	0					
ANR	954712	Callee	array_init		954267	0					
ANR	954713	Identifier	array_init		954267	0					
ANR	954714	ArgumentList	& paddress		954267	1					
ANR	954715	Argument	& paddress		954267	0					
ANR	954716	UnaryOperationExpression	& paddress		954267	0					
ANR	954717	UnaryOperator	&		954267	0					
ANR	954718	Identifier	paddress		954267	1					
ANR	954719	ExpressionStatement	"fulladdress = _php_imap_parse_address ( en -> reply_to , & paddress )"	4543:2:133122:133184	954267	1	True				
ANR	954720	AssignmentExpression	"fulladdress = _php_imap_parse_address ( en -> reply_to , & paddress )"		954267	0		=			
ANR	954721	Identifier	fulladdress		954267	0					
ANR	954722	CallExpression	"_php_imap_parse_address ( en -> reply_to , & paddress )"		954267	1					
ANR	954723	Callee	_php_imap_parse_address		954267	0					
ANR	954724	Identifier	_php_imap_parse_address		954267	0					
ANR	954725	ArgumentList	en -> reply_to		954267	1					
ANR	954726	Argument	en -> reply_to		954267	0					
ANR	954727	PtrMemberAccess	en -> reply_to		954267	0					
ANR	954728	Identifier	en		954267	0					
ANR	954729	Identifier	reply_to		954267	1					
ANR	954730	Argument	& paddress		954267	1					
ANR	954731	UnaryOperationExpression	& paddress		954267	0					
ANR	954732	UnaryOperator	&		954267	0					
ANR	954733	Identifier	paddress		954267	1					
ANR	954734	IfStatement	if ( fulladdress )		954267	2					
ANR	954735	Condition	fulladdress	4544:6:133192:133202	954267	0	True				
ANR	954736	Identifier	fulladdress		954267	0					
ANR	954737	CompoundStatement		57:19:1925:1925	954267	1					
ANR	954738	ExpressionStatement	"add_property_str ( myzvalue , ""reply_toaddress"" , fulladdress )"	4545:3:133210:133268	954267	0	True				
ANR	954739	CallExpression	"add_property_str ( myzvalue , ""reply_toaddress"" , fulladdress )"		954267	0					
ANR	954740	Callee	add_property_str		954267	0					
ANR	954741	Identifier	add_property_str		954267	0					
ANR	954742	ArgumentList	myzvalue		954267	1					
ANR	954743	Argument	myzvalue		954267	0					
ANR	954744	Identifier	myzvalue		954267	0					
ANR	954745	Argument	"""reply_toaddress"""		954267	1					
ANR	954746	PrimaryExpression	"""reply_toaddress"""		954267	0					
ANR	954747	Argument	fulladdress		954267	2					
ANR	954748	Identifier	fulladdress		954267	0					
ANR	954749	ExpressionStatement	"add_assoc_object ( myzvalue , ""reply_to"" , & paddress )"	4547:2:133276:133325	954267	3	True				
ANR	954750	CallExpression	"add_assoc_object ( myzvalue , ""reply_to"" , & paddress )"		954267	0					
ANR	954751	Callee	add_assoc_object		954267	0					
ANR	954752	Identifier	add_assoc_object		954267	0					
ANR	954753	ArgumentList	myzvalue		954267	1					
ANR	954754	Argument	myzvalue		954267	0					
ANR	954755	Identifier	myzvalue		954267	0					
ANR	954756	Argument	"""reply_to"""		954267	1					
ANR	954757	PrimaryExpression	"""reply_to"""		954267	0					
ANR	954758	Argument	& paddress		954267	2					
ANR	954759	UnaryOperationExpression	& paddress		954267	0					
ANR	954760	UnaryOperator	&		954267	0					
ANR	954761	Identifier	paddress		954267	1					
ANR	954762	IfStatement	if ( en -> sender )		954267	18					
ANR	954763	Condition	en -> sender	4550:5:133336:133345	954267	0	True				
ANR	954764	PtrMemberAccess	en -> sender		954267	0					
ANR	954765	Identifier	en		954267	0					
ANR	954766	Identifier	sender		954267	1					
ANR	954767	CompoundStatement		63:17:2068:2068	954267	1					
ANR	954768	ExpressionStatement	array_init ( & paddress )	4551:2:133352:133373	954267	0	True				
ANR	954769	CallExpression	array_init ( & paddress )		954267	0					
ANR	954770	Callee	array_init		954267	0					
ANR	954771	Identifier	array_init		954267	0					
ANR	954772	ArgumentList	& paddress		954267	1					
ANR	954773	Argument	& paddress		954267	0					
ANR	954774	UnaryOperationExpression	& paddress		954267	0					
ANR	954775	UnaryOperator	&		954267	0					
ANR	954776	Identifier	paddress		954267	1					
ANR	954777	ExpressionStatement	"fulladdress = _php_imap_parse_address ( en -> sender , & paddress )"	4552:2:133377:133437	954267	1	True				
ANR	954778	AssignmentExpression	"fulladdress = _php_imap_parse_address ( en -> sender , & paddress )"		954267	0		=			
ANR	954779	Identifier	fulladdress		954267	0					
ANR	954780	CallExpression	"_php_imap_parse_address ( en -> sender , & paddress )"		954267	1					
ANR	954781	Callee	_php_imap_parse_address		954267	0					
ANR	954782	Identifier	_php_imap_parse_address		954267	0					
ANR	954783	ArgumentList	en -> sender		954267	1					
ANR	954784	Argument	en -> sender		954267	0					
ANR	954785	PtrMemberAccess	en -> sender		954267	0					
ANR	954786	Identifier	en		954267	0					
ANR	954787	Identifier	sender		954267	1					
ANR	954788	Argument	& paddress		954267	1					
ANR	954789	UnaryOperationExpression	& paddress		954267	0					
ANR	954790	UnaryOperator	&		954267	0					
ANR	954791	Identifier	paddress		954267	1					
ANR	954792	IfStatement	if ( fulladdress )		954267	2					
ANR	954793	Condition	fulladdress	4553:6:133445:133455	954267	0	True				
ANR	954794	Identifier	fulladdress		954267	0					
ANR	954795	CompoundStatement		66:19:2178:2178	954267	1					
ANR	954796	ExpressionStatement	"add_property_str ( myzvalue , ""senderaddress"" , fulladdress )"	4554:3:133463:133519	954267	0	True				
ANR	954797	CallExpression	"add_property_str ( myzvalue , ""senderaddress"" , fulladdress )"		954267	0					
ANR	954798	Callee	add_property_str		954267	0					
ANR	954799	Identifier	add_property_str		954267	0					
ANR	954800	ArgumentList	myzvalue		954267	1					
ANR	954801	Argument	myzvalue		954267	0					
ANR	954802	Identifier	myzvalue		954267	0					
ANR	954803	Argument	"""senderaddress"""		954267	1					
ANR	954804	PrimaryExpression	"""senderaddress"""		954267	0					
ANR	954805	Argument	fulladdress		954267	2					
ANR	954806	Identifier	fulladdress		954267	0					
ANR	954807	ExpressionStatement	"add_assoc_object ( myzvalue , ""sender"" , & paddress )"	4556:2:133527:133574	954267	3	True				
ANR	954808	CallExpression	"add_assoc_object ( myzvalue , ""sender"" , & paddress )"		954267	0					
ANR	954809	Callee	add_assoc_object		954267	0					
ANR	954810	Identifier	add_assoc_object		954267	0					
ANR	954811	ArgumentList	myzvalue		954267	1					
ANR	954812	Argument	myzvalue		954267	0					
ANR	954813	Identifier	myzvalue		954267	0					
ANR	954814	Argument	"""sender"""		954267	1					
ANR	954815	PrimaryExpression	"""sender"""		954267	0					
ANR	954816	Argument	& paddress		954267	2					
ANR	954817	UnaryOperationExpression	& paddress		954267	0					
ANR	954818	UnaryOperator	&		954267	0					
ANR	954819	Identifier	paddress		954267	1					
ANR	954820	IfStatement	if ( en -> return_path )		954267	19					
ANR	954821	Condition	en -> return_path	4559:5:133585:133599	954267	0	True				
ANR	954822	PtrMemberAccess	en -> return_path		954267	0					
ANR	954823	Identifier	en		954267	0					
ANR	954824	Identifier	return_path		954267	1					
ANR	954825	CompoundStatement		72:22:2322:2322	954267	1					
ANR	954826	ExpressionStatement	array_init ( & paddress )	4560:2:133606:133627	954267	0	True				
ANR	954827	CallExpression	array_init ( & paddress )		954267	0					
ANR	954828	Callee	array_init		954267	0					
ANR	954829	Identifier	array_init		954267	0					
ANR	954830	ArgumentList	& paddress		954267	1					
ANR	954831	Argument	& paddress		954267	0					
ANR	954832	UnaryOperationExpression	& paddress		954267	0					
ANR	954833	UnaryOperator	&		954267	0					
ANR	954834	Identifier	paddress		954267	1					
ANR	954835	ExpressionStatement	"fulladdress = _php_imap_parse_address ( en -> return_path , & paddress )"	4561:2:133631:133696	954267	1	True				
ANR	954836	AssignmentExpression	"fulladdress = _php_imap_parse_address ( en -> return_path , & paddress )"		954267	0		=			
ANR	954837	Identifier	fulladdress		954267	0					
ANR	954838	CallExpression	"_php_imap_parse_address ( en -> return_path , & paddress )"		954267	1					
ANR	954839	Callee	_php_imap_parse_address		954267	0					
ANR	954840	Identifier	_php_imap_parse_address		954267	0					
ANR	954841	ArgumentList	en -> return_path		954267	1					
ANR	954842	Argument	en -> return_path		954267	0					
ANR	954843	PtrMemberAccess	en -> return_path		954267	0					
ANR	954844	Identifier	en		954267	0					
ANR	954845	Identifier	return_path		954267	1					
ANR	954846	Argument	& paddress		954267	1					
ANR	954847	UnaryOperationExpression	& paddress		954267	0					
ANR	954848	UnaryOperator	&		954267	0					
ANR	954849	Identifier	paddress		954267	1					
ANR	954850	IfStatement	if ( fulladdress )		954267	2					
ANR	954851	Condition	fulladdress	4562:6:133704:133714	954267	0	True				
ANR	954852	Identifier	fulladdress		954267	0					
ANR	954853	CompoundStatement		75:19:2437:2437	954267	1					
ANR	954854	ExpressionStatement	"add_property_str ( myzvalue , ""return_pathaddress"" , fulladdress )"	4563:3:133722:133783	954267	0	True				
ANR	954855	CallExpression	"add_property_str ( myzvalue , ""return_pathaddress"" , fulladdress )"		954267	0					
ANR	954856	Callee	add_property_str		954267	0					
ANR	954857	Identifier	add_property_str		954267	0					
ANR	954858	ArgumentList	myzvalue		954267	1					
ANR	954859	Argument	myzvalue		954267	0					
ANR	954860	Identifier	myzvalue		954267	0					
ANR	954861	Argument	"""return_pathaddress"""		954267	1					
ANR	954862	PrimaryExpression	"""return_pathaddress"""		954267	0					
ANR	954863	Argument	fulladdress		954267	2					
ANR	954864	Identifier	fulladdress		954267	0					
ANR	954865	ExpressionStatement	"add_assoc_object ( myzvalue , ""return_path"" , & paddress )"	4565:2:133791:133843	954267	3	True				
ANR	954866	CallExpression	"add_assoc_object ( myzvalue , ""return_path"" , & paddress )"		954267	0					
ANR	954867	Callee	add_assoc_object		954267	0					
ANR	954868	Identifier	add_assoc_object		954267	0					
ANR	954869	ArgumentList	myzvalue		954267	1					
ANR	954870	Argument	myzvalue		954267	0					
ANR	954871	Identifier	myzvalue		954267	0					
ANR	954872	Argument	"""return_path"""		954267	1					
ANR	954873	PrimaryExpression	"""return_path"""		954267	0					
ANR	954874	Argument	& paddress		954267	2					
ANR	954875	UnaryOperationExpression	& paddress		954267	0					
ANR	954876	UnaryOperator	&		954267	0					
ANR	954877	Identifier	paddress		954267	1					
ANR	954878	ReturnType	static void		954267	1					
ANR	954879	Identifier	_php_make_header_object		954267	2					
ANR	954880	ParameterList	"zval * myzvalue , ENVELOPE * en"		954267	3					
ANR	954881	Parameter	zval * myzvalue	4487:36:131249:131262	954267	0	True				
ANR	954882	ParameterType	zval *		954267	0					
ANR	954883	Identifier	myzvalue		954267	1					
ANR	954884	Parameter	ENVELOPE * en	4487:52:131265:131276	954267	1	True				
ANR	954885	ParameterType	ENVELOPE *		954267	0					
ANR	954886	Identifier	en		954267	1					
ANR	954887	CFGEntryNode	ENTRY		954267		True				
ANR	954888	CFGExitNode	EXIT		954267		True				
ANR	954889	Symbol	fulladdress		954267						
ANR	954890	Symbol	en -> message_id		954267						
ANR	954891	Symbol	NULL		954267						
ANR	954892	Symbol	en -> in_reply_to		954267						
ANR	954893	Symbol	en -> to		954267						
ANR	954894	Symbol	en -> bcc		954267						
ANR	954895	Symbol	en		954267						
ANR	954896	Symbol	en -> remail		954267						
ANR	954897	Symbol	en -> newsgroups		954267						
ANR	954898	Symbol	* en		954267						
ANR	954899	Symbol	_php_imap_parse_address		954267						
ANR	954900	Symbol	en -> sender		954267						
ANR	954901	Symbol	myzvalue		954267						
ANR	954902	Symbol	en -> cc		954267						
ANR	954903	Symbol	en -> return_path		954267						
ANR	954904	Symbol	& paddress		954267						
ANR	954905	Symbol	en -> reply_to		954267						
ANR	954906	Symbol	en -> date		954267						
ANR	954907	Symbol	en -> subject		954267						
ANR	954908	Symbol	en -> followup_to		954267						
ANR	954909	Symbol	en -> from		954267						
ANR	954910	Symbol	en -> references		954267						
ANR	954911	Symbol	paddress		954267						
ANR	954912	Function	_php_imap_add_body	4572:0:133891:136764							
ANR	954913	FunctionDef	"_php_imap_add_body (zval * arg , BODY * body)"		954912	0					
ANR	954914	CompoundStatement		4573:0:133938:136764	954912	0					
ANR	954915	IdentifierDeclStatement	"zval parametres , param , dparametres , dparam ;"	4574:1:133941:133984	954912	0	True				
ANR	954916	IdentifierDecl	parametres		954912	0					
ANR	954917	IdentifierDeclType	zval		954912	0					
ANR	954918	Identifier	parametres		954912	1					
ANR	954919	IdentifierDecl	param		954912	1					
ANR	954920	IdentifierDeclType	zval		954912	0					
ANR	954921	Identifier	param		954912	1					
ANR	954922	IdentifierDecl	dparametres		954912	2					
ANR	954923	IdentifierDeclType	zval		954912	0					
ANR	954924	Identifier	dparametres		954912	1					
ANR	954925	IdentifierDecl	dparam		954912	3					
ANR	954926	IdentifierDeclType	zval		954912	0					
ANR	954927	Identifier	dparam		954912	1					
ANR	954928	IdentifierDeclStatement	"PARAMETER * par , * dpar ;"	4575:1:133987:134008	954912	1	True				
ANR	954929	IdentifierDecl	* par		954912	0					
ANR	954930	IdentifierDeclType	PARAMETER *		954912	0					
ANR	954931	Identifier	par		954912	1					
ANR	954932	IdentifierDecl	* dpar		954912	1					
ANR	954933	IdentifierDeclType	PARAMETER *		954912	0					
ANR	954934	Identifier	dpar		954912	1					
ANR	954935	IdentifierDeclStatement	PART * part ;	4576:1:134011:134021	954912	2	True				
ANR	954936	IdentifierDecl	* part		954912	0					
ANR	954937	IdentifierDeclType	PART *		954912	0					
ANR	954938	Identifier	part		954912	1					
ANR	954939	IfStatement	if ( body -> type <= TYPEMAX )		954912	3					
ANR	954940	Condition	body -> type <= TYPEMAX	4578:5:134029:134049	954912	0	True				
ANR	954941	RelationalExpression	body -> type <= TYPEMAX		954912	0		<=			
ANR	954942	PtrMemberAccess	body -> type		954912	0					
ANR	954943	Identifier	body		954912	0					
ANR	954944	Identifier	type		954912	1					
ANR	954945	Identifier	TYPEMAX		954912	1					
ANR	954946	CompoundStatement		6:28:113:113	954912	1					
ANR	954947	ExpressionStatement	"add_property_long ( arg , ""type"" , body -> type )"	4579:2:134056:134098	954912	0	True				
ANR	954948	CallExpression	"add_property_long ( arg , ""type"" , body -> type )"		954912	0					
ANR	954949	Callee	add_property_long		954912	0					
ANR	954950	Identifier	add_property_long		954912	0					
ANR	954951	ArgumentList	arg		954912	1					
ANR	954952	Argument	arg		954912	0					
ANR	954953	Identifier	arg		954912	0					
ANR	954954	Argument	"""type"""		954912	1					
ANR	954955	PrimaryExpression	"""type"""		954912	0					
ANR	954956	Argument	body -> type		954912	2					
ANR	954957	PtrMemberAccess	body -> type		954912	0					
ANR	954958	Identifier	body		954912	0					
ANR	954959	Identifier	type		954912	1					
ANR	954960	IfStatement	if ( body -> encoding <= ENCMAX )		954912	4					
ANR	954961	Condition	body -> encoding <= ENCMAX	4582:5:134109:134132	954912	0	True				
ANR	954962	RelationalExpression	body -> encoding <= ENCMAX		954912	0		<=			
ANR	954963	PtrMemberAccess	body -> encoding		954912	0					
ANR	954964	Identifier	body		954912	0					
ANR	954965	Identifier	encoding		954912	1					
ANR	954966	Identifier	ENCMAX		954912	1					
ANR	954967	CompoundStatement		10:31:196:196	954912	1					
ANR	954968	ExpressionStatement	"add_property_long ( arg , ""encoding"" , body -> encoding )"	4583:2:134139:134189	954912	0	True				
ANR	954969	CallExpression	"add_property_long ( arg , ""encoding"" , body -> encoding )"		954912	0					
ANR	954970	Callee	add_property_long		954912	0					
ANR	954971	Identifier	add_property_long		954912	0					
ANR	954972	ArgumentList	arg		954912	1					
ANR	954973	Argument	arg		954912	0					
ANR	954974	Identifier	arg		954912	0					
ANR	954975	Argument	"""encoding"""		954912	1					
ANR	954976	PrimaryExpression	"""encoding"""		954912	0					
ANR	954977	Argument	body -> encoding		954912	2					
ANR	954978	PtrMemberAccess	body -> encoding		954912	0					
ANR	954979	Identifier	body		954912	0					
ANR	954980	Identifier	encoding		954912	1					
ANR	954981	IfStatement	if ( body -> subtype )		954912	5					
ANR	954982	Condition	body -> subtype	4586:5:134200:134212	954912	0	True				
ANR	954983	PtrMemberAccess	body -> subtype		954912	0					
ANR	954984	Identifier	body		954912	0					
ANR	954985	Identifier	subtype		954912	1					
ANR	954986	CompoundStatement		14:20:276:276	954912	1					
ANR	954987	ExpressionStatement	"add_property_long ( arg , ""ifsubtype"" , 1 )"	4587:2:134219:134257	954912	0	True				
ANR	954988	CallExpression	"add_property_long ( arg , ""ifsubtype"" , 1 )"		954912	0					
ANR	954989	Callee	add_property_long		954912	0					
ANR	954990	Identifier	add_property_long		954912	0					
ANR	954991	ArgumentList	arg		954912	1					
ANR	954992	Argument	arg		954912	0					
ANR	954993	Identifier	arg		954912	0					
ANR	954994	Argument	"""ifsubtype"""		954912	1					
ANR	954995	PrimaryExpression	"""ifsubtype"""		954912	0					
ANR	954996	Argument	1		954912	2					
ANR	954997	PrimaryExpression	1		954912	0					
ANR	954998	ExpressionStatement	"add_property_string ( arg , ""subtype"" , body -> subtype )"	4588:2:134261:134311	954912	1	True				
ANR	954999	CallExpression	"add_property_string ( arg , ""subtype"" , body -> subtype )"		954912	0					
ANR	955000	Callee	add_property_string		954912	0					
ANR	955001	Identifier	add_property_string		954912	0					
ANR	955002	ArgumentList	arg		954912	1					
ANR	955003	Argument	arg		954912	0					
ANR	955004	Identifier	arg		954912	0					
ANR	955005	Argument	"""subtype"""		954912	1					
ANR	955006	PrimaryExpression	"""subtype"""		954912	0					
ANR	955007	Argument	body -> subtype		954912	2					
ANR	955008	PtrMemberAccess	body -> subtype		954912	0					
ANR	955009	Identifier	body		954912	0					
ANR	955010	Identifier	subtype		954912	1					
ANR	955011	ElseStatement	else		954912	0					
ANR	955012	CompoundStatement		17:8:382:382	954912	0					
ANR	955013	ExpressionStatement	"add_property_long ( arg , ""ifsubtype"" , 0 )"	4590:2:134325:134363	954912	0	True				
ANR	955014	CallExpression	"add_property_long ( arg , ""ifsubtype"" , 0 )"		954912	0					
ANR	955015	Callee	add_property_long		954912	0					
ANR	955016	Identifier	add_property_long		954912	0					
ANR	955017	ArgumentList	arg		954912	1					
ANR	955018	Argument	arg		954912	0					
ANR	955019	Identifier	arg		954912	0					
ANR	955020	Argument	"""ifsubtype"""		954912	1					
ANR	955021	PrimaryExpression	"""ifsubtype"""		954912	0					
ANR	955022	Argument	0		954912	2					
ANR	955023	PrimaryExpression	0		954912	0					
ANR	955024	IfStatement	if ( body -> description )		954912	6					
ANR	955025	Condition	body -> description	4593:5:134374:134390	954912	0	True				
ANR	955026	PtrMemberAccess	body -> description		954912	0					
ANR	955027	Identifier	body		954912	0					
ANR	955028	Identifier	description		954912	1					
ANR	955029	CompoundStatement		21:24:454:454	954912	1					
ANR	955030	ExpressionStatement	"add_property_long ( arg , ""ifdescription"" , 1 )"	4594:2:134397:134439	954912	0	True				
ANR	955031	CallExpression	"add_property_long ( arg , ""ifdescription"" , 1 )"		954912	0					
ANR	955032	Callee	add_property_long		954912	0					
ANR	955033	Identifier	add_property_long		954912	0					
ANR	955034	ArgumentList	arg		954912	1					
ANR	955035	Argument	arg		954912	0					
ANR	955036	Identifier	arg		954912	0					
ANR	955037	Argument	"""ifdescription"""		954912	1					
ANR	955038	PrimaryExpression	"""ifdescription"""		954912	0					
ANR	955039	Argument	1		954912	2					
ANR	955040	PrimaryExpression	1		954912	0					
ANR	955041	ExpressionStatement	"add_property_string ( arg , ""description"" , body -> description )"	4595:2:134443:134501	954912	1	True				
ANR	955042	CallExpression	"add_property_string ( arg , ""description"" , body -> description )"		954912	0					
ANR	955043	Callee	add_property_string		954912	0					
ANR	955044	Identifier	add_property_string		954912	0					
ANR	955045	ArgumentList	arg		954912	1					
ANR	955046	Argument	arg		954912	0					
ANR	955047	Identifier	arg		954912	0					
ANR	955048	Argument	"""description"""		954912	1					
ANR	955049	PrimaryExpression	"""description"""		954912	0					
ANR	955050	Argument	body -> description		954912	2					
ANR	955051	PtrMemberAccess	body -> description		954912	0					
ANR	955052	Identifier	body		954912	0					
ANR	955053	Identifier	description		954912	1					
ANR	955054	ElseStatement	else		954912	0					
ANR	955055	CompoundStatement		24:8:572:572	954912	0					
ANR	955056	ExpressionStatement	"add_property_long ( arg , ""ifdescription"" , 0 )"	4597:2:134515:134557	954912	0	True				
ANR	955057	CallExpression	"add_property_long ( arg , ""ifdescription"" , 0 )"		954912	0					
ANR	955058	Callee	add_property_long		954912	0					
ANR	955059	Identifier	add_property_long		954912	0					
ANR	955060	ArgumentList	arg		954912	1					
ANR	955061	Argument	arg		954912	0					
ANR	955062	Identifier	arg		954912	0					
ANR	955063	Argument	"""ifdescription"""		954912	1					
ANR	955064	PrimaryExpression	"""ifdescription"""		954912	0					
ANR	955065	Argument	0		954912	2					
ANR	955066	PrimaryExpression	0		954912	0					
ANR	955067	IfStatement	if ( body -> id )		954912	7					
ANR	955068	Condition	body -> id	4600:5:134568:134575	954912	0	True				
ANR	955069	PtrMemberAccess	body -> id		954912	0					
ANR	955070	Identifier	body		954912	0					
ANR	955071	Identifier	id		954912	1					
ANR	955072	CompoundStatement		28:15:639:639	954912	1					
ANR	955073	ExpressionStatement	"add_property_long ( arg , ""ifid"" , 1 )"	4601:2:134582:134615	954912	0	True				
ANR	955074	CallExpression	"add_property_long ( arg , ""ifid"" , 1 )"		954912	0					
ANR	955075	Callee	add_property_long		954912	0					
ANR	955076	Identifier	add_property_long		954912	0					
ANR	955077	ArgumentList	arg		954912	1					
ANR	955078	Argument	arg		954912	0					
ANR	955079	Identifier	arg		954912	0					
ANR	955080	Argument	"""ifid"""		954912	1					
ANR	955081	PrimaryExpression	"""ifid"""		954912	0					
ANR	955082	Argument	1		954912	2					
ANR	955083	PrimaryExpression	1		954912	0					
ANR	955084	ExpressionStatement	"add_property_string ( arg , ""id"" , body -> id )"	4602:2:134619:134659	954912	1	True				
ANR	955085	CallExpression	"add_property_string ( arg , ""id"" , body -> id )"		954912	0					
ANR	955086	Callee	add_property_string		954912	0					
ANR	955087	Identifier	add_property_string		954912	0					
ANR	955088	ArgumentList	arg		954912	1					
ANR	955089	Argument	arg		954912	0					
ANR	955090	Identifier	arg		954912	0					
ANR	955091	Argument	"""id"""		954912	1					
ANR	955092	PrimaryExpression	"""id"""		954912	0					
ANR	955093	Argument	body -> id		954912	2					
ANR	955094	PtrMemberAccess	body -> id		954912	0					
ANR	955095	Identifier	body		954912	0					
ANR	955096	Identifier	id		954912	1					
ANR	955097	ElseStatement	else		954912	0					
ANR	955098	CompoundStatement		31:8:730:730	954912	0					
ANR	955099	ExpressionStatement	"add_property_long ( arg , ""ifid"" , 0 )"	4604:2:134673:134706	954912	0	True				
ANR	955100	CallExpression	"add_property_long ( arg , ""ifid"" , 0 )"		954912	0					
ANR	955101	Callee	add_property_long		954912	0					
ANR	955102	Identifier	add_property_long		954912	0					
ANR	955103	ArgumentList	arg		954912	1					
ANR	955104	Argument	arg		954912	0					
ANR	955105	Identifier	arg		954912	0					
ANR	955106	Argument	"""ifid"""		954912	1					
ANR	955107	PrimaryExpression	"""ifid"""		954912	0					
ANR	955108	Argument	0		954912	2					
ANR	955109	PrimaryExpression	0		954912	0					
ANR	955110	IfStatement	if ( body -> size . lines )		954912	8					
ANR	955111	Condition	body -> size . lines	4607:5:134717:134732	954912	0	True				
ANR	955112	MemberAccess	body -> size . lines		954912	0					
ANR	955113	PtrMemberAccess	body -> size		954912	0					
ANR	955114	Identifier	body		954912	0					
ANR	955115	Identifier	size		954912	1					
ANR	955116	Identifier	lines		954912	1					
ANR	955117	CompoundStatement		35:23:796:796	954912	1					
ANR	955118	ExpressionStatement	"add_property_long ( arg , ""lines"" , body -> size . lines )"	4608:2:134739:134788	954912	0	True				
ANR	955119	CallExpression	"add_property_long ( arg , ""lines"" , body -> size . lines )"		954912	0					
ANR	955120	Callee	add_property_long		954912	0					
ANR	955121	Identifier	add_property_long		954912	0					
ANR	955122	ArgumentList	arg		954912	1					
ANR	955123	Argument	arg		954912	0					
ANR	955124	Identifier	arg		954912	0					
ANR	955125	Argument	"""lines"""		954912	1					
ANR	955126	PrimaryExpression	"""lines"""		954912	0					
ANR	955127	Argument	body -> size . lines		954912	2					
ANR	955128	MemberAccess	body -> size . lines		954912	0					
ANR	955129	PtrMemberAccess	body -> size		954912	0					
ANR	955130	Identifier	body		954912	0					
ANR	955131	Identifier	size		954912	1					
ANR	955132	Identifier	lines		954912	1					
ANR	955133	IfStatement	if ( body -> size . bytes )		954912	9					
ANR	955134	Condition	body -> size . bytes	4611:5:134799:134814	954912	0	True				
ANR	955135	MemberAccess	body -> size . bytes		954912	0					
ANR	955136	PtrMemberAccess	body -> size		954912	0					
ANR	955137	Identifier	body		954912	0					
ANR	955138	Identifier	size		954912	1					
ANR	955139	Identifier	bytes		954912	1					
ANR	955140	CompoundStatement		39:23:878:878	954912	1					
ANR	955141	ExpressionStatement	"add_property_long ( arg , ""bytes"" , body -> size . bytes )"	4612:2:134821:134870	954912	0	True				
ANR	955142	CallExpression	"add_property_long ( arg , ""bytes"" , body -> size . bytes )"		954912	0					
ANR	955143	Callee	add_property_long		954912	0					
ANR	955144	Identifier	add_property_long		954912	0					
ANR	955145	ArgumentList	arg		954912	1					
ANR	955146	Argument	arg		954912	0					
ANR	955147	Identifier	arg		954912	0					
ANR	955148	Argument	"""bytes"""		954912	1					
ANR	955149	PrimaryExpression	"""bytes"""		954912	0					
ANR	955150	Argument	body -> size . bytes		954912	2					
ANR	955151	MemberAccess	body -> size . bytes		954912	0					
ANR	955152	PtrMemberAccess	body -> size		954912	0					
ANR	955153	Identifier	body		954912	0					
ANR	955154	Identifier	size		954912	1					
ANR	955155	Identifier	bytes		954912	1					
ANR	955156	IfStatement	if ( body -> disposition . type )		954912	10					
ANR	955157	Condition	body -> disposition . type	4616:5:134895:134916	954912	0	True				
ANR	955158	MemberAccess	body -> disposition . type		954912	0					
ANR	955159	PtrMemberAccess	body -> disposition		954912	0					
ANR	955160	Identifier	body		954912	0					
ANR	955161	Identifier	disposition		954912	1					
ANR	955162	Identifier	type		954912	1					
ANR	955163	CompoundStatement		44:29:980:980	954912	1					
ANR	955164	ExpressionStatement	"add_property_long ( arg , ""ifdisposition"" , 1 )"	4617:2:134923:134965	954912	0	True				
ANR	955165	CallExpression	"add_property_long ( arg , ""ifdisposition"" , 1 )"		954912	0					
ANR	955166	Callee	add_property_long		954912	0					
ANR	955167	Identifier	add_property_long		954912	0					
ANR	955168	ArgumentList	arg		954912	1					
ANR	955169	Argument	arg		954912	0					
ANR	955170	Identifier	arg		954912	0					
ANR	955171	Argument	"""ifdisposition"""		954912	1					
ANR	955172	PrimaryExpression	"""ifdisposition"""		954912	0					
ANR	955173	Argument	1		954912	2					
ANR	955174	PrimaryExpression	1		954912	0					
ANR	955175	ExpressionStatement	"add_property_string ( arg , ""disposition"" , body -> disposition . type )"	4618:2:134969:135032	954912	1	True				
ANR	955176	CallExpression	"add_property_string ( arg , ""disposition"" , body -> disposition . type )"		954912	0					
ANR	955177	Callee	add_property_string		954912	0					
ANR	955178	Identifier	add_property_string		954912	0					
ANR	955179	ArgumentList	arg		954912	1					
ANR	955180	Argument	arg		954912	0					
ANR	955181	Identifier	arg		954912	0					
ANR	955182	Argument	"""disposition"""		954912	1					
ANR	955183	PrimaryExpression	"""disposition"""		954912	0					
ANR	955184	Argument	body -> disposition . type		954912	2					
ANR	955185	MemberAccess	body -> disposition . type		954912	0					
ANR	955186	PtrMemberAccess	body -> disposition		954912	0					
ANR	955187	Identifier	body		954912	0					
ANR	955188	Identifier	disposition		954912	1					
ANR	955189	Identifier	type		954912	1					
ANR	955190	ElseStatement	else		954912	0					
ANR	955191	CompoundStatement		47:8:1103:1103	954912	0					
ANR	955192	ExpressionStatement	"add_property_long ( arg , ""ifdisposition"" , 0 )"	4620:2:135046:135088	954912	0	True				
ANR	955193	CallExpression	"add_property_long ( arg , ""ifdisposition"" , 0 )"		954912	0					
ANR	955194	Callee	add_property_long		954912	0					
ANR	955195	Identifier	add_property_long		954912	0					
ANR	955196	ArgumentList	arg		954912	1					
ANR	955197	Argument	arg		954912	0					
ANR	955198	Identifier	arg		954912	0					
ANR	955199	Argument	"""ifdisposition"""		954912	1					
ANR	955200	PrimaryExpression	"""ifdisposition"""		954912	0					
ANR	955201	Argument	0		954912	2					
ANR	955202	PrimaryExpression	0		954912	0					
ANR	955203	IfStatement	if ( body -> disposition . parameter )		954912	11					
ANR	955204	Condition	body -> disposition . parameter	4623:5:135099:135125	954912	0	True				
ANR	955205	MemberAccess	body -> disposition . parameter		954912	0					
ANR	955206	PtrMemberAccess	body -> disposition		954912	0					
ANR	955207	Identifier	body		954912	0					
ANR	955208	Identifier	disposition		954912	1					
ANR	955209	Identifier	parameter		954912	1					
ANR	955210	CompoundStatement		51:34:1189:1189	954912	1					
ANR	955211	ExpressionStatement	dpar = body -> disposition . parameter	4624:2:135132:135166	954912	0	True				
ANR	955212	AssignmentExpression	dpar = body -> disposition . parameter		954912	0		=			
ANR	955213	Identifier	dpar		954912	0					
ANR	955214	MemberAccess	body -> disposition . parameter		954912	1					
ANR	955215	PtrMemberAccess	body -> disposition		954912	0					
ANR	955216	Identifier	body		954912	0					
ANR	955217	Identifier	disposition		954912	1					
ANR	955218	Identifier	parameter		954912	1					
ANR	955219	ExpressionStatement	"add_property_long ( arg , ""ifdparameters"" , 1 )"	4625:2:135170:135212	954912	1	True				
ANR	955220	CallExpression	"add_property_long ( arg , ""ifdparameters"" , 1 )"		954912	0					
ANR	955221	Callee	add_property_long		954912	0					
ANR	955222	Identifier	add_property_long		954912	0					
ANR	955223	ArgumentList	arg		954912	1					
ANR	955224	Argument	arg		954912	0					
ANR	955225	Identifier	arg		954912	0					
ANR	955226	Argument	"""ifdparameters"""		954912	1					
ANR	955227	PrimaryExpression	"""ifdparameters"""		954912	0					
ANR	955228	Argument	1		954912	2					
ANR	955229	PrimaryExpression	1		954912	0					
ANR	955230	ExpressionStatement	array_init ( & dparametres )	4626:2:135216:135240	954912	2	True				
ANR	955231	CallExpression	array_init ( & dparametres )		954912	0					
ANR	955232	Callee	array_init		954912	0					
ANR	955233	Identifier	array_init		954912	0					
ANR	955234	ArgumentList	& dparametres		954912	1					
ANR	955235	Argument	& dparametres		954912	0					
ANR	955236	UnaryOperationExpression	& dparametres		954912	0					
ANR	955237	UnaryOperator	&		954912	0					
ANR	955238	Identifier	dparametres		954912	1					
ANR	955239	DoStatement	do		954912	3					
ANR	955240	CompoundStatement		55:5:1308:1308	954912	0					
ANR	955241	ExpressionStatement	object_init ( & dparam )	4628:3:135252:135272	954912	0	True				
ANR	955242	CallExpression	object_init ( & dparam )		954912	0					
ANR	955243	Callee	object_init		954912	0					
ANR	955244	Identifier	object_init		954912	0					
ANR	955245	ArgumentList	& dparam		954912	1					
ANR	955246	Argument	& dparam		954912	0					
ANR	955247	UnaryOperationExpression	& dparam		954912	0					
ANR	955248	UnaryOperator	&		954912	0					
ANR	955249	Identifier	dparam		954912	1					
ANR	955250	ExpressionStatement	"add_property_string ( & dparam , ""attribute"" , dpar -> attribute )"	4629:3:135277:135335	954912	1	True				
ANR	955251	CallExpression	"add_property_string ( & dparam , ""attribute"" , dpar -> attribute )"		954912	0					
ANR	955252	Callee	add_property_string		954912	0					
ANR	955253	Identifier	add_property_string		954912	0					
ANR	955254	ArgumentList	& dparam		954912	1					
ANR	955255	Argument	& dparam		954912	0					
ANR	955256	UnaryOperationExpression	& dparam		954912	0					
ANR	955257	UnaryOperator	&		954912	0					
ANR	955258	Identifier	dparam		954912	1					
ANR	955259	Argument	"""attribute"""		954912	1					
ANR	955260	PrimaryExpression	"""attribute"""		954912	0					
ANR	955261	Argument	dpar -> attribute		954912	2					
ANR	955262	PtrMemberAccess	dpar -> attribute		954912	0					
ANR	955263	Identifier	dpar		954912	0					
ANR	955264	Identifier	attribute		954912	1					
ANR	955265	ExpressionStatement	"add_property_string ( & dparam , ""value"" , dpar -> value )"	4630:3:135340:135390	954912	2	True				
ANR	955266	CallExpression	"add_property_string ( & dparam , ""value"" , dpar -> value )"		954912	0					
ANR	955267	Callee	add_property_string		954912	0					
ANR	955268	Identifier	add_property_string		954912	0					
ANR	955269	ArgumentList	& dparam		954912	1					
ANR	955270	Argument	& dparam		954912	0					
ANR	955271	UnaryOperationExpression	& dparam		954912	0					
ANR	955272	UnaryOperator	&		954912	0					
ANR	955273	Identifier	dparam		954912	1					
ANR	955274	Argument	"""value"""		954912	1					
ANR	955275	PrimaryExpression	"""value"""		954912	0					
ANR	955276	Argument	dpar -> value		954912	2					
ANR	955277	PtrMemberAccess	dpar -> value		954912	0					
ANR	955278	Identifier	dpar		954912	0					
ANR	955279	Identifier	value		954912	1					
ANR	955280	ExpressionStatement	"add_next_index_object ( & dparametres , & dparam )"	4631:3:135395:135439	954912	3	True				
ANR	955281	CallExpression	"add_next_index_object ( & dparametres , & dparam )"		954912	0					
ANR	955282	Callee	add_next_index_object		954912	0					
ANR	955283	Identifier	add_next_index_object		954912	0					
ANR	955284	ArgumentList	& dparametres		954912	1					
ANR	955285	Argument	& dparametres		954912	0					
ANR	955286	UnaryOperationExpression	& dparametres		954912	0					
ANR	955287	UnaryOperator	&		954912	0					
ANR	955288	Identifier	dparametres		954912	1					
ANR	955289	Argument	& dparam		954912	1					
ANR	955290	UnaryOperationExpression	& dparam		954912	0					
ANR	955291	UnaryOperator	&		954912	0					
ANR	955292	Identifier	dparam		954912	1					
ANR	955293	Condition	dpar = dpar -> next	4632:11:135452:135470	954912	1	True				
ANR	955294	AssignmentExpression	dpar = dpar -> next		954912	0		=			
ANR	955295	Identifier	dpar		954912	0					
ANR	955296	PtrMemberAccess	dpar -> next		954912	1					
ANR	955297	Identifier	dpar		954912	0					
ANR	955298	Identifier	next		954912	1					
ANR	955299	ExpressionStatement	"add_assoc_object ( arg , ""dparameters"" , & dparametres )"	4633:2:135476:135526	954912	4	True				
ANR	955300	CallExpression	"add_assoc_object ( arg , ""dparameters"" , & dparametres )"		954912	0					
ANR	955301	Callee	add_assoc_object		954912	0					
ANR	955302	Identifier	add_assoc_object		954912	0					
ANR	955303	ArgumentList	arg		954912	1					
ANR	955304	Argument	arg		954912	0					
ANR	955305	Identifier	arg		954912	0					
ANR	955306	Argument	"""dparameters"""		954912	1					
ANR	955307	PrimaryExpression	"""dparameters"""		954912	0					
ANR	955308	Argument	& dparametres		954912	2					
ANR	955309	UnaryOperationExpression	& dparametres		954912	0					
ANR	955310	UnaryOperator	&		954912	0					
ANR	955311	Identifier	dparametres		954912	1					
ANR	955312	ElseStatement	else		954912	0					
ANR	955313	CompoundStatement		62:8:1597:1597	954912	0					
ANR	955314	ExpressionStatement	"add_property_long ( arg , ""ifdparameters"" , 0 )"	4635:2:135540:135582	954912	0	True				
ANR	955315	CallExpression	"add_property_long ( arg , ""ifdparameters"" , 0 )"		954912	0					
ANR	955316	Callee	add_property_long		954912	0					
ANR	955317	Identifier	add_property_long		954912	0					
ANR	955318	ArgumentList	arg		954912	1					
ANR	955319	Argument	arg		954912	0					
ANR	955320	Identifier	arg		954912	0					
ANR	955321	Argument	"""ifdparameters"""		954912	1					
ANR	955322	PrimaryExpression	"""ifdparameters"""		954912	0					
ANR	955323	Argument	0		954912	2					
ANR	955324	PrimaryExpression	0		954912	0					
ANR	955325	IfStatement	if ( ( par = body -> parameter ) )		954912	12					
ANR	955326	Condition	par = body -> parameter	4639:5:135600:135622	954912	0	True				
ANR	955327	AssignmentExpression	par = body -> parameter		954912	0		=			
ANR	955328	Identifier	par		954912	0					
ANR	955329	PtrMemberAccess	body -> parameter		954912	1					
ANR	955330	Identifier	body		954912	0					
ANR	955331	Identifier	parameter		954912	1					
ANR	955332	CompoundStatement		67:30:1686:1686	954912	1					
ANR	955333	ExpressionStatement	"add_property_long ( arg , ""ifparameters"" , 1 )"	4640:2:135629:135670	954912	0	True				
ANR	955334	CallExpression	"add_property_long ( arg , ""ifparameters"" , 1 )"		954912	0					
ANR	955335	Callee	add_property_long		954912	0					
ANR	955336	Identifier	add_property_long		954912	0					
ANR	955337	ArgumentList	arg		954912	1					
ANR	955338	Argument	arg		954912	0					
ANR	955339	Identifier	arg		954912	0					
ANR	955340	Argument	"""ifparameters"""		954912	1					
ANR	955341	PrimaryExpression	"""ifparameters"""		954912	0					
ANR	955342	Argument	1		954912	2					
ANR	955343	PrimaryExpression	1		954912	0					
ANR	955344	ExpressionStatement	array_init ( & parametres )	4642:2:135675:135698	954912	1	True				
ANR	955345	CallExpression	array_init ( & parametres )		954912	0					
ANR	955346	Callee	array_init		954912	0					
ANR	955347	Identifier	array_init		954912	0					
ANR	955348	ArgumentList	& parametres		954912	1					
ANR	955349	Argument	& parametres		954912	0					
ANR	955350	UnaryOperationExpression	& parametres		954912	0					
ANR	955351	UnaryOperator	&		954912	0					
ANR	955352	Identifier	parametres		954912	1					
ANR	955353	DoStatement	do		954912	2					
ANR	955354	CompoundStatement		71:5:1766:1766	954912	0					
ANR	955355	ExpressionStatement	object_init ( & param )	4644:3:135710:135729	954912	0	True				
ANR	955356	CallExpression	object_init ( & param )		954912	0					
ANR	955357	Callee	object_init		954912	0					
ANR	955358	Identifier	object_init		954912	0					
ANR	955359	ArgumentList	& param		954912	1					
ANR	955360	Argument	& param		954912	0					
ANR	955361	UnaryOperationExpression	& param		954912	0					
ANR	955362	UnaryOperator	&		954912	0					
ANR	955363	Identifier	param		954912	1					
ANR	955364	IfStatement	if ( par -> attribute )		954912	1					
ANR	955365	Condition	par -> attribute	4645:7:135738:135751	954912	0	True				
ANR	955366	PtrMemberAccess	par -> attribute		954912	0					
ANR	955367	Identifier	par		954912	0					
ANR	955368	Identifier	attribute		954912	1					
ANR	955369	CompoundStatement		73:23:1815:1815	954912	1					
ANR	955370	ExpressionStatement	"add_property_string ( & param , ""attribute"" , par -> attribute )"	4646:4:135760:135816	954912	0	True				
ANR	955371	CallExpression	"add_property_string ( & param , ""attribute"" , par -> attribute )"		954912	0					
ANR	955372	Callee	add_property_string		954912	0					
ANR	955373	Identifier	add_property_string		954912	0					
ANR	955374	ArgumentList	& param		954912	1					
ANR	955375	Argument	& param		954912	0					
ANR	955376	UnaryOperationExpression	& param		954912	0					
ANR	955377	UnaryOperator	&		954912	0					
ANR	955378	Identifier	param		954912	1					
ANR	955379	Argument	"""attribute"""		954912	1					
ANR	955380	PrimaryExpression	"""attribute"""		954912	0					
ANR	955381	Argument	par -> attribute		954912	2					
ANR	955382	PtrMemberAccess	par -> attribute		954912	0					
ANR	955383	Identifier	par		954912	0					
ANR	955384	Identifier	attribute		954912	1					
ANR	955385	IfStatement	if ( par -> value )		954912	2					
ANR	955386	Condition	par -> value	4648:7:135830:135839	954912	0	True				
ANR	955387	PtrMemberAccess	par -> value		954912	0					
ANR	955388	Identifier	par		954912	0					
ANR	955389	Identifier	value		954912	1					
ANR	955390	CompoundStatement		76:19:1903:1903	954912	1					
ANR	955391	ExpressionStatement	"add_property_string ( & param , ""value"" , par -> value )"	4649:4:135848:135896	954912	0	True				
ANR	955392	CallExpression	"add_property_string ( & param , ""value"" , par -> value )"		954912	0					
ANR	955393	Callee	add_property_string		954912	0					
ANR	955394	Identifier	add_property_string		954912	0					
ANR	955395	ArgumentList	& param		954912	1					
ANR	955396	Argument	& param		954912	0					
ANR	955397	UnaryOperationExpression	& param		954912	0					
ANR	955398	UnaryOperator	&		954912	0					
ANR	955399	Identifier	param		954912	1					
ANR	955400	Argument	"""value"""		954912	1					
ANR	955401	PrimaryExpression	"""value"""		954912	0					
ANR	955402	Argument	par -> value		954912	2					
ANR	955403	PtrMemberAccess	par -> value		954912	0					
ANR	955404	Identifier	par		954912	0					
ANR	955405	Identifier	value		954912	1					
ANR	955406	ExpressionStatement	"add_next_index_object ( & parametres , & param )"	4652:3:135907:135949	954912	3	True				
ANR	955407	CallExpression	"add_next_index_object ( & parametres , & param )"		954912	0					
ANR	955408	Callee	add_next_index_object		954912	0					
ANR	955409	Identifier	add_next_index_object		954912	0					
ANR	955410	ArgumentList	& parametres		954912	1					
ANR	955411	Argument	& parametres		954912	0					
ANR	955412	UnaryOperationExpression	& parametres		954912	0					
ANR	955413	UnaryOperator	&		954912	0					
ANR	955414	Identifier	parametres		954912	1					
ANR	955415	Argument	& param		954912	1					
ANR	955416	UnaryOperationExpression	& param		954912	0					
ANR	955417	UnaryOperator	&		954912	0					
ANR	955418	Identifier	param		954912	1					
ANR	955419	Condition	par = par -> next	4653:11:135962:135978	954912	1	True				
ANR	955420	AssignmentExpression	par = par -> next		954912	0		=			
ANR	955421	Identifier	par		954912	0					
ANR	955422	PtrMemberAccess	par -> next		954912	1					
ANR	955423	Identifier	par		954912	0					
ANR	955424	Identifier	next		954912	1					
ANR	955425	ElseStatement	else		954912	0					
ANR	955426	CompoundStatement		82:8:2051:2051	954912	0					
ANR	955427	ExpressionStatement	object_init ( & parametres )	4655:2:135994:136018	954912	0	True				
ANR	955428	CallExpression	object_init ( & parametres )		954912	0					
ANR	955429	Callee	object_init		954912	0					
ANR	955430	Identifier	object_init		954912	0					
ANR	955431	ArgumentList	& parametres		954912	1					
ANR	955432	Argument	& parametres		954912	0					
ANR	955433	UnaryOperationExpression	& parametres		954912	0					
ANR	955434	UnaryOperator	&		954912	0					
ANR	955435	Identifier	parametres		954912	1					
ANR	955436	ExpressionStatement	"add_property_long ( arg , ""ifparameters"" , 0 )"	4656:2:136022:136063	954912	1	True				
ANR	955437	CallExpression	"add_property_long ( arg , ""ifparameters"" , 0 )"		954912	0					
ANR	955438	Callee	add_property_long		954912	0					
ANR	955439	Identifier	add_property_long		954912	0					
ANR	955440	ArgumentList	arg		954912	1					
ANR	955441	Argument	arg		954912	0					
ANR	955442	Identifier	arg		954912	0					
ANR	955443	Argument	"""ifparameters"""		954912	1					
ANR	955444	PrimaryExpression	"""ifparameters"""		954912	0					
ANR	955445	Argument	0		954912	2					
ANR	955446	PrimaryExpression	0		954912	0					
ANR	955447	ExpressionStatement	"add_assoc_object ( arg , ""parameters"" , & parametres )"	4658:1:136069:136117	954912	13	True				
ANR	955448	CallExpression	"add_assoc_object ( arg , ""parameters"" , & parametres )"		954912	0					
ANR	955449	Callee	add_assoc_object		954912	0					
ANR	955450	Identifier	add_assoc_object		954912	0					
ANR	955451	ArgumentList	arg		954912	1					
ANR	955452	Argument	arg		954912	0					
ANR	955453	Identifier	arg		954912	0					
ANR	955454	Argument	"""parameters"""		954912	1					
ANR	955455	PrimaryExpression	"""parameters"""		954912	0					
ANR	955456	Argument	& parametres		954912	2					
ANR	955457	UnaryOperationExpression	& parametres		954912	0					
ANR	955458	UnaryOperator	&		954912	0					
ANR	955459	Identifier	parametres		954912	1					
ANR	955460	IfStatement	if ( body -> type == TYPEMULTIPART )		954912	14					
ANR	955461	Condition	body -> type == TYPEMULTIPART	4661:5:136152:136178	954912	0	True				
ANR	955462	EqualityExpression	body -> type == TYPEMULTIPART		954912	0		==			
ANR	955463	PtrMemberAccess	body -> type		954912	0					
ANR	955464	Identifier	body		954912	0					
ANR	955465	Identifier	type		954912	1					
ANR	955466	Identifier	TYPEMULTIPART		954912	1					
ANR	955467	CompoundStatement		89:34:2242:2242	954912	1					
ANR	955468	ExpressionStatement	array_init ( & parametres )	4662:2:136185:136208	954912	0	True				
ANR	955469	CallExpression	array_init ( & parametres )		954912	0					
ANR	955470	Callee	array_init		954912	0					
ANR	955471	Identifier	array_init		954912	0					
ANR	955472	ArgumentList	& parametres		954912	1					
ANR	955473	Argument	& parametres		954912	0					
ANR	955474	UnaryOperationExpression	& parametres		954912	0					
ANR	955475	UnaryOperator	&		954912	0					
ANR	955476	Identifier	parametres		954912	1					
ANR	955477	ForStatement	for ( part = body -> CONTENT_PART ; part ; part = part -> next )		954912	1					
ANR	955478	ForInit	part = body -> CONTENT_PART ;	4663:7:136217:136242	954912	0	True				
ANR	955479	AssignmentExpression	part = body -> CONTENT_PART		954912	0		=			
ANR	955480	Identifier	part		954912	0					
ANR	955481	PtrMemberAccess	body -> CONTENT_PART		954912	1					
ANR	955482	Identifier	body		954912	0					
ANR	955483	Identifier	CONTENT_PART		954912	1					
ANR	955484	Condition	part	4663:34:136244:136247	954912	1	True				
ANR	955485	Identifier	part		954912	0					
ANR	955486	AssignmentExpression	part = part -> next	4663:40:136250:136266	954912	2	True	=			
ANR	955487	Identifier	part		954912	0					
ANR	955488	PtrMemberAccess	part -> next		954912	1					
ANR	955489	Identifier	part		954912	0					
ANR	955490	Identifier	next		954912	1					
ANR	955491	CompoundStatement		91:59:2330:2330	954912	3					
ANR	955492	ExpressionStatement	object_init ( & param )	4664:3:136274:136293	954912	0	True				
ANR	955493	CallExpression	object_init ( & param )		954912	0					
ANR	955494	Callee	object_init		954912	0					
ANR	955495	Identifier	object_init		954912	0					
ANR	955496	ArgumentList	& param		954912	1					
ANR	955497	Argument	& param		954912	0					
ANR	955498	UnaryOperationExpression	& param		954912	0					
ANR	955499	UnaryOperator	&		954912	0					
ANR	955500	Identifier	param		954912	1					
ANR	955501	ExpressionStatement	"_php_imap_add_body ( & param , & part -> body )"	4665:3:136298:136337	954912	1	True				
ANR	955502	CallExpression	"_php_imap_add_body ( & param , & part -> body )"		954912	0					
ANR	955503	Callee	_php_imap_add_body		954912	0					
ANR	955504	Identifier	_php_imap_add_body		954912	0					
ANR	955505	ArgumentList	& param		954912	1					
ANR	955506	Argument	& param		954912	0					
ANR	955507	UnaryOperationExpression	& param		954912	0					
ANR	955508	UnaryOperator	&		954912	0					
ANR	955509	Identifier	param		954912	1					
ANR	955510	Argument	& part -> body		954912	1					
ANR	955511	UnaryOperationExpression	& part -> body		954912	0					
ANR	955512	UnaryOperator	&		954912	0					
ANR	955513	PtrMemberAccess	part -> body		954912	1					
ANR	955514	Identifier	part		954912	0					
ANR	955515	Identifier	body		954912	1					
ANR	955516	ExpressionStatement	"add_next_index_object ( & parametres , & param )"	4666:3:136342:136384	954912	2	True				
ANR	955517	CallExpression	"add_next_index_object ( & parametres , & param )"		954912	0					
ANR	955518	Callee	add_next_index_object		954912	0					
ANR	955519	Identifier	add_next_index_object		954912	0					
ANR	955520	ArgumentList	& parametres		954912	1					
ANR	955521	Argument	& parametres		954912	0					
ANR	955522	UnaryOperationExpression	& parametres		954912	0					
ANR	955523	UnaryOperator	&		954912	0					
ANR	955524	Identifier	parametres		954912	1					
ANR	955525	Argument	& param		954912	1					
ANR	955526	UnaryOperationExpression	& param		954912	0					
ANR	955527	UnaryOperator	&		954912	0					
ANR	955528	Identifier	param		954912	1					
ANR	955529	ExpressionStatement	"add_assoc_object ( arg , ""parts"" , & parametres )"	4668:2:136392:136435	954912	2	True				
ANR	955530	CallExpression	"add_assoc_object ( arg , ""parts"" , & parametres )"		954912	0					
ANR	955531	Callee	add_assoc_object		954912	0					
ANR	955532	Identifier	add_assoc_object		954912	0					
ANR	955533	ArgumentList	arg		954912	1					
ANR	955534	Argument	arg		954912	0					
ANR	955535	Identifier	arg		954912	0					
ANR	955536	Argument	"""parts"""		954912	1					
ANR	955537	PrimaryExpression	"""parts"""		954912	0					
ANR	955538	Argument	& parametres		954912	2					
ANR	955539	UnaryOperationExpression	& parametres		954912	0					
ANR	955540	UnaryOperator	&		954912	0					
ANR	955541	Identifier	parametres		954912	1					
ANR	955542	IfStatement	"if ( ( body -> type == TYPEMESSAGE ) && ( ! strcasecmp ( body -> subtype , ""rfc822"" ) ) )"		954912	15					
ANR	955543	Condition	"( body -> type == TYPEMESSAGE ) && ( ! strcasecmp ( body -> subtype , ""rfc822"" ) )"	4672:5:136476:136544	954912	0	True				
ANR	955544	AndExpression	"( body -> type == TYPEMESSAGE ) && ( ! strcasecmp ( body -> subtype , ""rfc822"" ) )"		954912	0		&&			
ANR	955545	EqualityExpression	body -> type == TYPEMESSAGE		954912	0		==			
ANR	955546	PtrMemberAccess	body -> type		954912	0					
ANR	955547	Identifier	body		954912	0					
ANR	955548	Identifier	type		954912	1					
ANR	955549	Identifier	TYPEMESSAGE		954912	1					
ANR	955550	UnaryOperationExpression	"! strcasecmp ( body -> subtype , ""rfc822"" )"		954912	1					
ANR	955551	UnaryOperator	!		954912	0					
ANR	955552	CallExpression	"strcasecmp ( body -> subtype , ""rfc822"" )"		954912	1					
ANR	955553	Callee	strcasecmp		954912	0					
ANR	955554	Identifier	strcasecmp		954912	0					
ANR	955555	ArgumentList	body -> subtype		954912	1					
ANR	955556	Argument	body -> subtype		954912	0					
ANR	955557	PtrMemberAccess	body -> subtype		954912	0					
ANR	955558	Identifier	body		954912	0					
ANR	955559	Identifier	subtype		954912	1					
ANR	955560	Argument	"""rfc822"""		954912	1					
ANR	955561	PrimaryExpression	"""rfc822"""		954912	0					
ANR	955562	CompoundStatement		100:76:2608:2608	954912	1					
ANR	955563	ExpressionStatement	body = body -> CONTENT_MSG_BODY	4673:2:136551:136580	954912	0	True				
ANR	955564	AssignmentExpression	body = body -> CONTENT_MSG_BODY		954912	0		=			
ANR	955565	Identifier	body		954912	0					
ANR	955566	PtrMemberAccess	body -> CONTENT_MSG_BODY		954912	1					
ANR	955567	Identifier	body		954912	0					
ANR	955568	Identifier	CONTENT_MSG_BODY		954912	1					
ANR	955569	ExpressionStatement	array_init ( & parametres )	4674:2:136584:136607	954912	1	True				
ANR	955570	CallExpression	array_init ( & parametres )		954912	0					
ANR	955571	Callee	array_init		954912	0					
ANR	955572	Identifier	array_init		954912	0					
ANR	955573	ArgumentList	& parametres		954912	1					
ANR	955574	Argument	& parametres		954912	0					
ANR	955575	UnaryOperationExpression	& parametres		954912	0					
ANR	955576	UnaryOperator	&		954912	0					
ANR	955577	Identifier	parametres		954912	1					
ANR	955578	ExpressionStatement	object_init ( & param )	4675:2:136611:136630	954912	2	True				
ANR	955579	CallExpression	object_init ( & param )		954912	0					
ANR	955580	Callee	object_init		954912	0					
ANR	955581	Identifier	object_init		954912	0					
ANR	955582	ArgumentList	& param		954912	1					
ANR	955583	Argument	& param		954912	0					
ANR	955584	UnaryOperationExpression	& param		954912	0					
ANR	955585	UnaryOperator	&		954912	0					
ANR	955586	Identifier	param		954912	1					
ANR	955587	ExpressionStatement	"_php_imap_add_body ( & param , body )"	4676:2:136634:136666	954912	3	True				
ANR	955588	CallExpression	"_php_imap_add_body ( & param , body )"		954912	0					
ANR	955589	Callee	_php_imap_add_body		954912	0					
ANR	955590	Identifier	_php_imap_add_body		954912	0					
ANR	955591	ArgumentList	& param		954912	1					
ANR	955592	Argument	& param		954912	0					
ANR	955593	UnaryOperationExpression	& param		954912	0					
ANR	955594	UnaryOperator	&		954912	0					
ANR	955595	Identifier	param		954912	1					
ANR	955596	Argument	body		954912	1					
ANR	955597	Identifier	body		954912	0					
ANR	955598	ExpressionStatement	"add_next_index_object ( & parametres , & param )"	4677:2:136670:136712	954912	4	True				
ANR	955599	CallExpression	"add_next_index_object ( & parametres , & param )"		954912	0					
ANR	955600	Callee	add_next_index_object		954912	0					
ANR	955601	Identifier	add_next_index_object		954912	0					
ANR	955602	ArgumentList	& parametres		954912	1					
ANR	955603	Argument	& parametres		954912	0					
ANR	955604	UnaryOperationExpression	& parametres		954912	0					
ANR	955605	UnaryOperator	&		954912	0					
ANR	955606	Identifier	parametres		954912	1					
ANR	955607	Argument	& param		954912	1					
ANR	955608	UnaryOperationExpression	& param		954912	0					
ANR	955609	UnaryOperator	&		954912	0					
ANR	955610	Identifier	param		954912	1					
ANR	955611	ExpressionStatement	"add_assoc_object ( arg , ""parts"" , & parametres )"	4678:2:136716:136759	954912	5	True				
ANR	955612	CallExpression	"add_assoc_object ( arg , ""parts"" , & parametres )"		954912	0					
ANR	955613	Callee	add_assoc_object		954912	0					
ANR	955614	Identifier	add_assoc_object		954912	0					
ANR	955615	ArgumentList	arg		954912	1					
ANR	955616	Argument	arg		954912	0					
ANR	955617	Identifier	arg		954912	0					
ANR	955618	Argument	"""parts"""		954912	1					
ANR	955619	PrimaryExpression	"""parts"""		954912	0					
ANR	955620	Argument	& parametres		954912	2					
ANR	955621	UnaryOperationExpression	& parametres		954912	0					
ANR	955622	UnaryOperator	&		954912	0					
ANR	955623	Identifier	parametres		954912	1					
ANR	955624	ReturnType	void		954912	1					
ANR	955625	Identifier	_php_imap_add_body		954912	2					
ANR	955626	ParameterList	"zval * arg , BODY * body"		954912	3					
ANR	955627	Parameter	zval * arg	4572:24:133915:133923	954912	0	True				
ANR	955628	ParameterType	zval *		954912	0					
ANR	955629	Identifier	arg		954912	1					
ANR	955630	Parameter	BODY * body	4572:35:133926:133935	954912	1	True				
ANR	955631	ParameterType	BODY *		954912	0					
ANR	955632	Identifier	body		954912	1					
ANR	955633	CFGEntryNode	ENTRY		954912		True				
ANR	955634	CFGExitNode	EXIT		954912		True				
ANR	955635	Symbol	body -> disposition . type		954912						
ANR	955636	Symbol	& part -> body		954912						
ANR	955637	Symbol	body -> parameter		954912						
ANR	955638	Symbol	* body		954912						
ANR	955639	Symbol	body -> size		954912						
ANR	955640	Symbol	part		954912						
ANR	955641	Symbol	* par		954912						
ANR	955642	Symbol	* part		954912						
ANR	955643	Symbol	body		954912						
ANR	955644	Symbol	body -> disposition . parameter		954912						
ANR	955645	Symbol	& param		954912						
ANR	955646	Symbol	dpar		954912						
ANR	955647	Symbol	& parametres		954912						
ANR	955648	Symbol	& dparam		954912						
ANR	955649	Symbol	param		954912						
ANR	955650	Symbol	dparam		954912						
ANR	955651	Symbol	arg		954912						
ANR	955652	Symbol	& dparametres		954912						
ANR	955653	Symbol	body -> type		954912						
ANR	955654	Symbol	strcasecmp		954912						
ANR	955655	Symbol	body -> description		954912						
ANR	955656	Symbol	body -> CONTENT_PART		954912						
ANR	955657	Symbol	par		954912						
ANR	955658	Symbol	body -> disposition		954912						
ANR	955659	Symbol	par -> attribute		954912						
ANR	955660	Symbol	par -> value		954912						
ANR	955661	Symbol	part -> next		954912						
ANR	955662	Symbol	ENCMAX		954912						
ANR	955663	Symbol	body -> size . lines		954912						
ANR	955664	Symbol	dparametres		954912						
ANR	955665	Symbol	TYPEMULTIPART		954912						
ANR	955666	Symbol	dpar -> value		954912						
ANR	955667	Symbol	body -> encoding		954912						
ANR	955668	Symbol	body -> id		954912						
ANR	955669	Symbol	* dpar		954912						
ANR	955670	Symbol	TYPEMESSAGE		954912						
ANR	955671	Symbol	body -> CONTENT_MSG_BODY		954912						
ANR	955672	Symbol	parametres		954912						
ANR	955673	Symbol	dpar -> attribute		954912						
ANR	955674	Symbol	TYPEMAX		954912						
ANR	955675	Symbol	body -> subtype		954912						
ANR	955676	Symbol	body -> size . bytes		954912						
ANR	955677	Symbol	dpar -> next		954912						
ANR	955678	Symbol	par -> next		954912						
ANR	955679	Function	build_thread_tree_helper	4686:0:136872:137599							
ANR	955680	FunctionDef	"build_thread_tree_helper (THREADNODE * cur , zval * tree , long * numNodes , char * buf)"		955679	0					
ANR	955681	CompoundStatement		4687:0:136965:137599	955679	0					
ANR	955682	IdentifierDeclStatement	unsigned long thisNode = * numNodes ;	4688:1:136968:137002	955679	0	True				
ANR	955683	IdentifierDecl	thisNode = * numNodes		955679	0					
ANR	955684	IdentifierDeclType	unsigned long		955679	0					
ANR	955685	Identifier	thisNode		955679	1					
ANR	955686	AssignmentExpression	thisNode = * numNodes		955679	2		=			
ANR	955687	Identifier	thisNode		955679	0					
ANR	955688	UnaryOperationExpression	* numNodes		955679	1					
ANR	955689	UnaryOperator	*		955679	0					
ANR	955690	Identifier	numNodes		955679	1					
ANR	955691	ExpressionStatement	"snprintf ( buf , 25 , ""%ld.num"" , thisNode )"	4691:1:137028:137066	955679	1	True				
ANR	955692	CallExpression	"snprintf ( buf , 25 , ""%ld.num"" , thisNode )"		955679	0					
ANR	955693	Callee	snprintf		955679	0					
ANR	955694	Identifier	snprintf		955679	0					
ANR	955695	ArgumentList	buf		955679	1					
ANR	955696	Argument	buf		955679	0					
ANR	955697	Identifier	buf		955679	0					
ANR	955698	Argument	25		955679	1					
ANR	955699	PrimaryExpression	25		955679	0					
ANR	955700	Argument	"""%ld.num"""		955679	2					
ANR	955701	PrimaryExpression	"""%ld.num"""		955679	0					
ANR	955702	Argument	thisNode		955679	3					
ANR	955703	Identifier	thisNode		955679	0					
ANR	955704	ExpressionStatement	"add_assoc_long ( tree , buf , cur -> num )"	4693:1:137070:137105	955679	2	True				
ANR	955705	CallExpression	"add_assoc_long ( tree , buf , cur -> num )"		955679	0					
ANR	955706	Callee	add_assoc_long		955679	0					
ANR	955707	Identifier	add_assoc_long		955679	0					
ANR	955708	ArgumentList	tree		955679	1					
ANR	955709	Argument	tree		955679	0					
ANR	955710	Identifier	tree		955679	0					
ANR	955711	Argument	buf		955679	1					
ANR	955712	Identifier	buf		955679	0					
ANR	955713	Argument	cur -> num		955679	2					
ANR	955714	PtrMemberAccess	cur -> num		955679	0					
ANR	955715	Identifier	cur		955679	0					
ANR	955716	Identifier	num		955679	1					
ANR	955717	ExpressionStatement	"snprintf ( buf , 25 , ""%ld.next"" , thisNode )"	4695:1:137109:137148	955679	3	True				
ANR	955718	CallExpression	"snprintf ( buf , 25 , ""%ld.next"" , thisNode )"		955679	0					
ANR	955719	Callee	snprintf		955679	0					
ANR	955720	Identifier	snprintf		955679	0					
ANR	955721	ArgumentList	buf		955679	1					
ANR	955722	Argument	buf		955679	0					
ANR	955723	Identifier	buf		955679	0					
ANR	955724	Argument	25		955679	1					
ANR	955725	PrimaryExpression	25		955679	0					
ANR	955726	Argument	"""%ld.next"""		955679	2					
ANR	955727	PrimaryExpression	"""%ld.next"""		955679	0					
ANR	955728	Argument	thisNode		955679	3					
ANR	955729	Identifier	thisNode		955679	0					
ANR	955730	IfStatement	if ( cur -> next )		955679	4					
ANR	955731	Condition	cur -> next	4696:4:137154:137162	955679	0	True				
ANR	955732	PtrMemberAccess	cur -> next		955679	0					
ANR	955733	Identifier	cur		955679	0					
ANR	955734	Identifier	next		955679	1					
ANR	955735	CompoundStatement		10:15:199:199	955679	1					
ANR	955736	ExpressionStatement	( * numNodes ) ++	4697:2:137169:137182	955679	0	True				
ANR	955737	PostIncDecOperationExpression	( * numNodes ) ++		955679	0					
ANR	955738	UnaryOperationExpression	* numNodes		955679	0					
ANR	955739	UnaryOperator	*		955679	0					
ANR	955740	Identifier	numNodes		955679	1					
ANR	955741	IncDec	++		955679	1					
ANR	955742	ExpressionStatement	"add_assoc_long ( tree , buf , * numNodes )"	4698:2:137186:137222	955679	1	True				
ANR	955743	CallExpression	"add_assoc_long ( tree , buf , * numNodes )"		955679	0					
ANR	955744	Callee	add_assoc_long		955679	0					
ANR	955745	Identifier	add_assoc_long		955679	0					
ANR	955746	ArgumentList	tree		955679	1					
ANR	955747	Argument	tree		955679	0					
ANR	955748	Identifier	tree		955679	0					
ANR	955749	Argument	buf		955679	1					
ANR	955750	Identifier	buf		955679	0					
ANR	955751	Argument	* numNodes		955679	2					
ANR	955752	UnaryOperationExpression	* numNodes		955679	0					
ANR	955753	UnaryOperator	*		955679	0					
ANR	955754	Identifier	numNodes		955679	1					
ANR	955755	ExpressionStatement	"build_thread_tree_helper ( cur -> next , tree , numNodes , buf )"	4699:2:137226:137282	955679	2	True				
ANR	955756	CallExpression	"build_thread_tree_helper ( cur -> next , tree , numNodes , buf )"		955679	0					
ANR	955757	Callee	build_thread_tree_helper		955679	0					
ANR	955758	Identifier	build_thread_tree_helper		955679	0					
ANR	955759	ArgumentList	cur -> next		955679	1					
ANR	955760	Argument	cur -> next		955679	0					
ANR	955761	PtrMemberAccess	cur -> next		955679	0					
ANR	955762	Identifier	cur		955679	0					
ANR	955763	Identifier	next		955679	1					
ANR	955764	Argument	tree		955679	1					
ANR	955765	Identifier	tree		955679	0					
ANR	955766	Argument	numNodes		955679	2					
ANR	955767	Identifier	numNodes		955679	0					
ANR	955768	Argument	buf		955679	3					
ANR	955769	Identifier	buf		955679	0					
ANR	955770	ElseStatement	else		955679	0					
ANR	955771	CompoundStatement		14:8:326:326	955679	0					
ANR	955772	ExpressionStatement	"add_assoc_long ( tree , buf , 0 )"	4701:2:137317:137345	955679	0	True				
ANR	955773	CallExpression	"add_assoc_long ( tree , buf , 0 )"		955679	0					
ANR	955774	Callee	add_assoc_long		955679	0					
ANR	955775	Identifier	add_assoc_long		955679	0					
ANR	955776	ArgumentList	tree		955679	1					
ANR	955777	Argument	tree		955679	0					
ANR	955778	Identifier	tree		955679	0					
ANR	955779	Argument	buf		955679	1					
ANR	955780	Identifier	buf		955679	0					
ANR	955781	Argument	0		955679	2					
ANR	955782	PrimaryExpression	0		955679	0					
ANR	955783	ExpressionStatement	"snprintf ( buf , 25 , ""%ld.branch"" , thisNode )"	4704:1:137352:137393	955679	5	True				
ANR	955784	CallExpression	"snprintf ( buf , 25 , ""%ld.branch"" , thisNode )"		955679	0					
ANR	955785	Callee	snprintf		955679	0					
ANR	955786	Identifier	snprintf		955679	0					
ANR	955787	ArgumentList	buf		955679	1					
ANR	955788	Argument	buf		955679	0					
ANR	955789	Identifier	buf		955679	0					
ANR	955790	Argument	25		955679	1					
ANR	955791	PrimaryExpression	25		955679	0					
ANR	955792	Argument	"""%ld.branch"""		955679	2					
ANR	955793	PrimaryExpression	"""%ld.branch"""		955679	0					
ANR	955794	Argument	thisNode		955679	3					
ANR	955795	Identifier	thisNode		955679	0					
ANR	955796	IfStatement	if ( cur -> branch )		955679	6					
ANR	955797	Condition	cur -> branch	4705:4:137399:137409	955679	0	True				
ANR	955798	PtrMemberAccess	cur -> branch		955679	0					
ANR	955799	Identifier	cur		955679	0					
ANR	955800	Identifier	branch		955679	1					
ANR	955801	CompoundStatement		19:17:446:446	955679	1					
ANR	955802	ExpressionStatement	( * numNodes ) ++	4706:2:137416:137429	955679	0	True				
ANR	955803	PostIncDecOperationExpression	( * numNodes ) ++		955679	0					
ANR	955804	UnaryOperationExpression	* numNodes		955679	0					
ANR	955805	UnaryOperator	*		955679	0					
ANR	955806	Identifier	numNodes		955679	1					
ANR	955807	IncDec	++		955679	1					
ANR	955808	ExpressionStatement	"add_assoc_long ( tree , buf , * numNodes )"	4707:2:137433:137469	955679	1	True				
ANR	955809	CallExpression	"add_assoc_long ( tree , buf , * numNodes )"		955679	0					
ANR	955810	Callee	add_assoc_long		955679	0					
ANR	955811	Identifier	add_assoc_long		955679	0					
ANR	955812	ArgumentList	tree		955679	1					
ANR	955813	Argument	tree		955679	0					
ANR	955814	Identifier	tree		955679	0					
ANR	955815	Argument	buf		955679	1					
ANR	955816	Identifier	buf		955679	0					
ANR	955817	Argument	* numNodes		955679	2					
ANR	955818	UnaryOperationExpression	* numNodes		955679	0					
ANR	955819	UnaryOperator	*		955679	0					
ANR	955820	Identifier	numNodes		955679	1					
ANR	955821	ExpressionStatement	"build_thread_tree_helper ( cur -> branch , tree , numNodes , buf )"	4708:2:137473:137531	955679	2	True				
ANR	955822	CallExpression	"build_thread_tree_helper ( cur -> branch , tree , numNodes , buf )"		955679	0					
ANR	955823	Callee	build_thread_tree_helper		955679	0					
ANR	955824	Identifier	build_thread_tree_helper		955679	0					
ANR	955825	ArgumentList	cur -> branch		955679	1					
ANR	955826	Argument	cur -> branch		955679	0					
ANR	955827	PtrMemberAccess	cur -> branch		955679	0					
ANR	955828	Identifier	cur		955679	0					
ANR	955829	Identifier	branch		955679	1					
ANR	955830	Argument	tree		955679	1					
ANR	955831	Identifier	tree		955679	0					
ANR	955832	Argument	numNodes		955679	2					
ANR	955833	Identifier	numNodes		955679	0					
ANR	955834	Argument	buf		955679	3					
ANR	955835	Identifier	buf		955679	0					
ANR	955836	ElseStatement	else		955679	0					
ANR	955837	CompoundStatement		23:8:575:575	955679	0					
ANR	955838	ExpressionStatement	"add_assoc_long ( tree , buf , 0 )"	4710:2:137566:137594	955679	0	True				
ANR	955839	CallExpression	"add_assoc_long ( tree , buf , 0 )"		955679	0					
ANR	955840	Callee	add_assoc_long		955679	0					
ANR	955841	Identifier	add_assoc_long		955679	0					
ANR	955842	ArgumentList	tree		955679	1					
ANR	955843	Argument	tree		955679	0					
ANR	955844	Identifier	tree		955679	0					
ANR	955845	Argument	buf		955679	1					
ANR	955846	Identifier	buf		955679	0					
ANR	955847	Argument	0		955679	2					
ANR	955848	PrimaryExpression	0		955679	0					
ANR	955849	ReturnType	static void		955679	1					
ANR	955850	Identifier	build_thread_tree_helper		955679	2					
ANR	955851	ParameterList	"THREADNODE * cur , zval * tree , long * numNodes , char * buf"		955679	3					
ANR	955852	Parameter	THREADNODE * cur	4686:37:136909:136923	955679	0	True				
ANR	955853	ParameterType	THREADNODE *		955679	0					
ANR	955854	Identifier	cur		955679	1					
ANR	955855	Parameter	zval * tree	4686:54:136926:136935	955679	1	True				
ANR	955856	ParameterType	zval *		955679	0					
ANR	955857	Identifier	tree		955679	1					
ANR	955858	Parameter	long * numNodes	4686:66:136938:136951	955679	2	True				
ANR	955859	ParameterType	long *		955679	0					
ANR	955860	Identifier	numNodes		955679	1					
ANR	955861	Parameter	char * buf	4686:82:136954:136962	955679	3	True				
ANR	955862	ParameterType	char *		955679	0					
ANR	955863	Identifier	buf		955679	1					
ANR	955864	CFGEntryNode	ENTRY		955679		True				
ANR	955865	CFGExitNode	EXIT		955679		True				
ANR	955866	Symbol	cur		955679						
ANR	955867	Symbol	numNodes		955679						
ANR	955868	Symbol	buf		955679						
ANR	955869	Symbol	* numNodes		955679						
ANR	955870	Symbol	* cur		955679						
ANR	955871	Symbol	thisNode		955679						
ANR	955872	Symbol	tree		955679						
ANR	955873	Symbol	cur -> num		955679						
ANR	955874	Symbol	cur -> branch		955679						
ANR	955875	Symbol	cur -> next		955679						
ANR	955876	Function	build_thread_tree	4717:0:137641:137832							
ANR	955877	FunctionDef	"build_thread_tree (THREADNODE * top , zval * * tree)"		955876	0					
ANR	955878	CompoundStatement		4718:0:137700:137832	955876	0					
ANR	955879	IdentifierDeclStatement	long numNodes = 0 ;	4719:1:137703:137720	955876	0	True				
ANR	955880	IdentifierDecl	numNodes = 0		955876	0					
ANR	955881	IdentifierDeclType	long		955876	0					
ANR	955882	Identifier	numNodes		955876	1					
ANR	955883	AssignmentExpression	numNodes = 0		955876	2		=			
ANR	955884	Identifier	numNodes		955876	0					
ANR	955885	PrimaryExpression	0		955876	1					
ANR	955886	IdentifierDeclStatement	char buf [ 25 ] ;	4720:1:137723:137735	955876	1	True				
ANR	955887	IdentifierDecl	buf [ 25 ]		955876	0					
ANR	955888	IdentifierDeclType	char [ 25 ]		955876	0					
ANR	955889	Identifier	buf		955876	1					
ANR	955890	PrimaryExpression	25		955876	2					
ANR	955891	ExpressionStatement	array_init ( * tree )	4722:1:137739:137756	955876	2	True				
ANR	955892	CallExpression	array_init ( * tree )		955876	0					
ANR	955893	Callee	array_init		955876	0					
ANR	955894	Identifier	array_init		955876	0					
ANR	955895	ArgumentList	* tree		955876	1					
ANR	955896	Argument	* tree		955876	0					
ANR	955897	UnaryOperationExpression	* tree		955876	0					
ANR	955898	UnaryOperator	*		955876	0					
ANR	955899	Identifier	tree		955876	1					
ANR	955900	ExpressionStatement	"build_thread_tree_helper ( top , * tree , & numNodes , buf )"	4724:1:137760:137812	955876	3	True				
ANR	955901	CallExpression	"build_thread_tree_helper ( top , * tree , & numNodes , buf )"		955876	0					
ANR	955902	Callee	build_thread_tree_helper		955876	0					
ANR	955903	Identifier	build_thread_tree_helper		955876	0					
ANR	955904	ArgumentList	top		955876	1					
ANR	955905	Argument	top		955876	0					
ANR	955906	Identifier	top		955876	0					
ANR	955907	Argument	* tree		955876	1					
ANR	955908	UnaryOperationExpression	* tree		955876	0					
ANR	955909	UnaryOperator	*		955876	0					
ANR	955910	Identifier	tree		955876	1					
ANR	955911	Argument	& numNodes		955876	2					
ANR	955912	UnaryOperationExpression	& numNodes		955876	0					
ANR	955913	UnaryOperator	&		955876	0					
ANR	955914	Identifier	numNodes		955876	1					
ANR	955915	Argument	buf		955876	3					
ANR	955916	Identifier	buf		955876	0					
ANR	955917	ReturnStatement	return SUCCESS ;	4726:1:137816:137830	955876	4	True				
ANR	955918	Identifier	SUCCESS		955876	0					
ANR	955919	ReturnType	static int		955876	1					
ANR	955920	Identifier	build_thread_tree		955876	2					
ANR	955921	ParameterList	"THREADNODE * top , zval * * tree"		955876	3					
ANR	955922	Parameter	THREADNODE * top	4717:29:137670:137684	955876	0	True				
ANR	955923	ParameterType	THREADNODE *		955876	0					
ANR	955924	Identifier	top		955876	1					
ANR	955925	Parameter	zval * * tree	4717:46:137687:137697	955876	1	True				
ANR	955926	ParameterType	zval * *		955876	0					
ANR	955927	Identifier	tree		955876	1					
ANR	955928	CFGEntryNode	ENTRY		955876		True				
ANR	955929	CFGExitNode	EXIT		955876		True				
ANR	955930	Symbol	* tree		955876						
ANR	955931	Symbol	numNodes		955876						
ANR	955932	Symbol	buf		955876						
ANR	955933	Symbol	SUCCESS		955876						
ANR	955934	Symbol	top		955876						
ANR	955935	Symbol	tree		955876						
ANR	955936	Symbol	& numNodes		955876						
ANR	955937	DeclStmt									
ANR	955938	Decl							zval	zval *	streamind
ANR	955939	DeclStmt									
ANR	955940	Decl							pils	pils *	imap_le_struct
ANR	955941	DeclStmt									
ANR	955942	Decl							zend_long	zend_long	flags
ANR	955943	DeclStmt									
ANR	955944	Decl							char	char [ ]	criteria
ANR	955945	DeclStmt									
ANR	955946	Decl							THREADNODE	THREADNODE *	top
ANR	955947	DeclStmt									
ANR	955948	Decl							int	int	argc
ANR	955949	DeclStmt									
ANR	955950	Decl							SEARCHPGM	SEARCHPGM *	pgm
ANR	955951	DeclStmt									
ANR	955952	Decl							zend_long	zend_long	ttype
ANR	955953	Decl							zend_long	zend_long	timeout
ANR	955954	DeclStmt									
ANR	955955	Decl							int	int	timeout_type
ANR	955956	Function	php_mail_gets	4830:0:140018:140955							
ANR	955957	FunctionDef	"php_mail_gets (readfn_t f , void * stream , unsigned long size , GETS_DATA * md)"		955956	0					
ANR	955958	CompoundStatement		4831:0:140116:140955	955956	0					
ANR	955959	IfStatement	if ( IMAPG ( gets_stream ) )		955956	0					
ANR	955960	Condition	IMAPG ( gets_stream )	4835:5:140208:140225	955956	0	True				
ANR	955961	CallExpression	IMAPG ( gets_stream )		955956	0					
ANR	955962	Callee	IMAPG		955956	0					
ANR	955963	Identifier	IMAPG		955956	0					
ANR	955964	ArgumentList	gets_stream		955956	1					
ANR	955965	Argument	gets_stream		955956	0					
ANR	955966	Identifier	gets_stream		955956	0					
ANR	955967	CompoundStatement		6:2:115:140	955956	1					
ANR	955968	IdentifierDeclStatement	char buf [ GETS_FETCH_SIZE ] ;	4836:2:140232:140257	955956	0	True				
ANR	955969	IdentifierDecl	buf [ GETS_FETCH_SIZE ]		955956	0					
ANR	955970	IdentifierDeclType	char [ GETS_FETCH_SIZE ]		955956	0					
ANR	955971	Identifier	buf		955956	1					
ANR	955972	Identifier	GETS_FETCH_SIZE		955956	2					
ANR	955973	WhileStatement	while ( size )		955956	1					
ANR	955974	Condition	size	4838:9:140269:140272	955956	0	True				
ANR	955975	Identifier	size		955956	0					
ANR	955976	CompoundStatement		9:3:163:181	955956	1					
ANR	955977	IdentifierDeclStatement	unsigned long read ;	4839:3:140280:140298	955956	0	True				
ANR	955978	IdentifierDecl	read		955956	0					
ANR	955979	IdentifierDeclType	unsigned long		955956	0					
ANR	955980	Identifier	read		955956	1					
ANR	955981	IfStatement	if ( size > GETS_FETCH_SIZE )		955956	1					
ANR	955982	Condition	size > GETS_FETCH_SIZE	4841:7:140308:140329	955956	0	True				
ANR	955983	RelationalExpression	size > GETS_FETCH_SIZE		955956	0		>			
ANR	955984	Identifier	size		955956	0					
ANR	955985	Identifier	GETS_FETCH_SIZE		955956	1					
ANR	955986	CompoundStatement		11:31:215:215	955956	1					
ANR	955987	ExpressionStatement	read = GETS_FETCH_SIZE	4842:4:140338:140360	955956	0	True				
ANR	955988	AssignmentExpression	read = GETS_FETCH_SIZE		955956	0		=			
ANR	955989	Identifier	read		955956	0					
ANR	955990	Identifier	GETS_FETCH_SIZE		955956	1					
ANR	955991	ExpressionStatement	size -= GETS_FETCH_SIZE	4843:4:140366:140388	955956	1	True				
ANR	955992	AssignmentExpression	size -= GETS_FETCH_SIZE		955956	0		-=			
ANR	955993	Identifier	size		955956	0					
ANR	955994	Identifier	GETS_FETCH_SIZE		955956	1					
ANR	955995	ElseStatement	else		955956	0					
ANR	955996	CompoundStatement		14:10:283:283	955956	0					
ANR	955997	ExpressionStatement	read = size	4845:4:140406:140417	955956	0	True				
ANR	955998	AssignmentExpression	read = size		955956	0		=			
ANR	955999	Identifier	read		955956	0					
ANR	956000	Identifier	size		955956	1					
ANR	956001	ExpressionStatement	size = 0	4846:4:140423:140431	955956	1	True				
ANR	956002	AssignmentExpression	size = 0		955956	0		=			
ANR	956003	Identifier	size		955956	0					
ANR	956004	PrimaryExpression	0		955956	1					
ANR	956005	IfStatement	"if ( ! f ( stream , read , buf ) )"		955956	2					
ANR	956006	Condition	"! f ( stream , read , buf )"	4849:7:140446:140466	955956	0	True				
ANR	956007	UnaryOperationExpression	"! f ( stream , read , buf )"		955956	0					
ANR	956008	UnaryOperator	!		955956	0					
ANR	956009	CallExpression	"f ( stream , read , buf )"		955956	1					
ANR	956010	Callee	f		955956	0					
ANR	956011	Identifier	f		955956	0					
ANR	956012	ArgumentList	stream		955956	1					
ANR	956013	Argument	stream		955956	0					
ANR	956014	Identifier	stream		955956	0					
ANR	956015	Argument	read		955956	1					
ANR	956016	Identifier	read		955956	0					
ANR	956017	Argument	buf		955956	2					
ANR	956018	Identifier	buf		955956	0					
ANR	956019	CompoundStatement		19:30:352:352	955956	1					
ANR	956020	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Failed to read from socket"" )"	4850:4:140475:140538	955956	0	True				
ANR	956021	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Failed to read from socket"" )"		955956	0					
ANR	956022	Callee	php_error_docref		955956	0					
ANR	956023	Identifier	php_error_docref		955956	0					
ANR	956024	ArgumentList	NULL		955956	1					
ANR	956025	Argument	NULL		955956	0					
ANR	956026	Identifier	NULL		955956	0					
ANR	956027	Argument	E_WARNING		955956	1					
ANR	956028	Identifier	E_WARNING		955956	0					
ANR	956029	Argument	"""Failed to read from socket"""		955956	2					
ANR	956030	PrimaryExpression	"""Failed to read from socket"""		955956	0					
ANR	956031	BreakStatement	break ;	4851:4:140544:140549	955956	1	True				
ANR	956032	ElseStatement	else		955956	0					
ANR	956033	IfStatement	"if ( read != php_stream_write ( IMAPG ( gets_stream ) , buf , read ) )"		955956	0					
ANR	956034	Condition	"read != php_stream_write ( IMAPG ( gets_stream ) , buf , read )"	4852:14:140565:140619	955956	0	True				
ANR	956035	EqualityExpression	"read != php_stream_write ( IMAPG ( gets_stream ) , buf , read )"		955956	0		!=			
ANR	956036	Identifier	read		955956	0					
ANR	956037	CallExpression	"php_stream_write ( IMAPG ( gets_stream ) , buf , read )"		955956	1					
ANR	956038	Callee	php_stream_write		955956	0					
ANR	956039	Identifier	php_stream_write		955956	0					
ANR	956040	ArgumentList	IMAPG ( gets_stream )		955956	1					
ANR	956041	Argument	IMAPG ( gets_stream )		955956	0					
ANR	956042	CallExpression	IMAPG ( gets_stream )		955956	0					
ANR	956043	Callee	IMAPG		955956	0					
ANR	956044	Identifier	IMAPG		955956	0					
ANR	956045	ArgumentList	gets_stream		955956	1					
ANR	956046	Argument	gets_stream		955956	0					
ANR	956047	Identifier	gets_stream		955956	0					
ANR	956048	Argument	buf		955956	1					
ANR	956049	Identifier	buf		955956	0					
ANR	956050	Argument	read		955956	2					
ANR	956051	Identifier	read		955956	0					
ANR	956052	CompoundStatement		22:71:505:505	955956	1					
ANR	956053	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Failed to write to stream"" )"	4853:4:140628:140690	955956	0	True				
ANR	956054	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Failed to write to stream"" )"		955956	0					
ANR	956055	Callee	php_error_docref		955956	0					
ANR	956056	Identifier	php_error_docref		955956	0					
ANR	956057	ArgumentList	NULL		955956	1					
ANR	956058	Argument	NULL		955956	0					
ANR	956059	Identifier	NULL		955956	0					
ANR	956060	Argument	E_WARNING		955956	1					
ANR	956061	Identifier	E_WARNING		955956	0					
ANR	956062	Argument	"""Failed to write to stream"""		955956	2					
ANR	956063	PrimaryExpression	"""Failed to write to stream"""		955956	0					
ANR	956064	BreakStatement	break ;	4854:4:140696:140701	955956	1	True				
ANR	956065	ReturnStatement	return NULL ;	4857:2:140714:140725	955956	2	True				
ANR	956066	Identifier	NULL		955956	0					
ANR	956067	ElseStatement	else		955956	0					
ANR	956068	CompoundStatement		29:2:622:655	955956	0					
ANR	956069	IdentifierDeclStatement	"char * buf = pemalloc ( size + 1 , 1 ) ;"	4859:2:140739:140772	955956	0	True				
ANR	956070	IdentifierDecl	"* buf = pemalloc ( size + 1 , 1 )"		955956	0					
ANR	956071	IdentifierDeclType	char *		955956	0					
ANR	956072	Identifier	buf		955956	1					
ANR	956073	AssignmentExpression	"* buf = pemalloc ( size + 1 , 1 )"		955956	2		=			
ANR	956074	Identifier	buf		955956	0					
ANR	956075	CallExpression	"pemalloc ( size + 1 , 1 )"		955956	1					
ANR	956076	Callee	pemalloc		955956	0					
ANR	956077	Identifier	pemalloc		955956	0					
ANR	956078	ArgumentList	size + 1		955956	1					
ANR	956079	Argument	size + 1		955956	0					
ANR	956080	AdditiveExpression	size + 1		955956	0		+			
ANR	956081	Identifier	size		955956	0					
ANR	956082	PrimaryExpression	1		955956	1					
ANR	956083	Argument	1		955956	1					
ANR	956084	PrimaryExpression	1		955956	0					
ANR	956085	IfStatement	"if ( f ( stream , size , buf ) )"		955956	1					
ANR	956086	Condition	"f ( stream , size , buf )"	4861:6:140781:140800	955956	0	True				
ANR	956087	CallExpression	"f ( stream , size , buf )"		955956	0					
ANR	956088	Callee	f		955956	0					
ANR	956089	Identifier	f		955956	0					
ANR	956090	ArgumentList	stream		955956	1					
ANR	956091	Argument	stream		955956	0					
ANR	956092	Identifier	stream		955956	0					
ANR	956093	Argument	size		955956	1					
ANR	956094	Identifier	size		955956	0					
ANR	956095	Argument	buf		955956	2					
ANR	956096	Identifier	buf		955956	0					
ANR	956097	CompoundStatement		31:28:686:686	955956	1					
ANR	956098	ExpressionStatement	buf [ size ] = '\\0'	4862:3:140808:140824	955956	0	True				
ANR	956099	AssignmentExpression	buf [ size ] = '\\0'		955956	0		=			
ANR	956100	ArrayIndexing	buf [ size ]		955956	0					
ANR	956101	Identifier	buf		955956	0					
ANR	956102	Identifier	size		955956	1					
ANR	956103	PrimaryExpression	'\\0'		955956	1					
ANR	956104	ElseStatement	else		955956	0					
ANR	956105	CompoundStatement		33:9:718:718	955956	0					
ANR	956106	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Failed to read from socket"" )"	4864:3:140840:140903	955956	0	True				
ANR	956107	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Failed to read from socket"" )"		955956	0					
ANR	956108	Callee	php_error_docref		955956	0					
ANR	956109	Identifier	php_error_docref		955956	0					
ANR	956110	ArgumentList	NULL		955956	1					
ANR	956111	Argument	NULL		955956	0					
ANR	956112	Identifier	NULL		955956	0					
ANR	956113	Argument	E_WARNING		955956	1					
ANR	956114	Identifier	E_WARNING		955956	0					
ANR	956115	Argument	"""Failed to read from socket"""		955956	2					
ANR	956116	PrimaryExpression	"""Failed to read from socket"""		955956	0					
ANR	956117	ExpressionStatement	free ( buf )	4865:3:140908:140917	955956	1	True				
ANR	956118	CallExpression	free ( buf )		955956	0					
ANR	956119	Callee	free		955956	0					
ANR	956120	Identifier	free		955956	0					
ANR	956121	ArgumentList	buf		955956	1					
ANR	956122	Argument	buf		955956	0					
ANR	956123	Identifier	buf		955956	0					
ANR	956124	ExpressionStatement	buf = NULL	4866:3:140922:140932	955956	2	True				
ANR	956125	AssignmentExpression	buf = NULL		955956	0		=			
ANR	956126	Identifier	buf		955956	0					
ANR	956127	Identifier	NULL		955956	1					
ANR	956128	ReturnStatement	return buf ;	4868:2:140940:140950	955956	2	True				
ANR	956129	Identifier	buf		955956	0					
ANR	956130	ReturnType	static char *		955956	1					
ANR	956131	Identifier	php_mail_gets		955956	2					
ANR	956132	ParameterList	"readfn_t f , void * stream , unsigned long size , GETS_DATA * md"		955956	3					
ANR	956133	Parameter	readfn_t f	4830:27:140045:140054	955956	0	True				
ANR	956134	ParameterType	readfn_t		955956	0					
ANR	956135	Identifier	f		955956	1					
ANR	956136	Parameter	void * stream	4830:39:140057:140068	955956	1	True				
ANR	956137	ParameterType	void *		955956	0					
ANR	956138	Identifier	stream		955956	1					
ANR	956139	Parameter	unsigned long size	4830:53:140071:140088	955956	2	True				
ANR	956140	ParameterType	unsigned long		955956	0					
ANR	956141	Identifier	size		955956	1					
ANR	956142	Parameter	GETS_DATA * md	4830:73:140091:140103	955956	3	True				
ANR	956143	ParameterType	GETS_DATA *		955956	0					
ANR	956144	Identifier	md		955956	1					
ANR	956145	CFGEntryNode	ENTRY		955956		True				
ANR	956146	CFGExitNode	EXIT		955956		True				
ANR	956147	Symbol	* buf		955956						
ANR	956148	Symbol	read		955956						
ANR	956149	Symbol	NULL		955956						
ANR	956150	Symbol	f		955956						
ANR	956151	Symbol	GETS_FETCH_SIZE		955956						
ANR	956152	Symbol	gets_stream		955956						
ANR	956153	Symbol	E_WARNING		955956						
ANR	956154	Symbol	php_stream_write		955956						
ANR	956155	Symbol	buf		955956						
ANR	956156	Symbol	* size		955956						
ANR	956157	Symbol	size		955956						
ANR	956158	Symbol	stream		955956						
ANR	956159	Symbol	md		955956						
ANR	956160	Symbol	IMAPG		955956						
ANR	956161	Symbol	pemalloc		955956						
ANR	956162	Function	mm_searched	4875:0:141002:141498							
ANR	956163	FunctionDef	"mm_searched (MAILSTREAM * stream , unsigned long number)"		956162	0					
ANR	956164	CompoundStatement		4876:0:141077:141498	956162	0					
ANR	956165	IdentifierDeclStatement	MESSAGELIST * cur = NIL ;	4877:1:141080:141102	956162	0	True				
ANR	956166	IdentifierDecl	* cur = NIL		956162	0					
ANR	956167	IdentifierDeclType	MESSAGELIST *		956162	0					
ANR	956168	Identifier	cur		956162	1					
ANR	956169	AssignmentExpression	* cur = NIL		956162	2		=			
ANR	956170	Identifier	NIL		956162	0					
ANR	956171	Identifier	NIL		956162	1					
ANR	956172	IfStatement	if ( IMAPG ( imap_messages ) == NIL )		956162	1					
ANR	956173	Condition	IMAPG ( imap_messages ) == NIL	4879:5:141110:141136	956162	0	True				
ANR	956174	EqualityExpression	IMAPG ( imap_messages ) == NIL		956162	0		==			
ANR	956175	CallExpression	IMAPG ( imap_messages )		956162	0					
ANR	956176	Callee	IMAPG		956162	0					
ANR	956177	Identifier	IMAPG		956162	0					
ANR	956178	ArgumentList	imap_messages		956162	1					
ANR	956179	Argument	imap_messages		956162	0					
ANR	956180	Identifier	imap_messages		956162	0					
ANR	956181	Identifier	NIL		956162	1					
ANR	956182	CompoundStatement		4:34:61:61	956162	1					
ANR	956183	ExpressionStatement	IMAPG ( imap_messages ) = mail_newmessagelist ( )	4880:2:141143:141187	956162	0	True				
ANR	956184	AssignmentExpression	IMAPG ( imap_messages ) = mail_newmessagelist ( )		956162	0		=			
ANR	956185	CallExpression	IMAPG ( imap_messages )		956162	0					
ANR	956186	Callee	IMAPG		956162	0					
ANR	956187	Identifier	IMAPG		956162	0					
ANR	956188	ArgumentList	imap_messages		956162	1					
ANR	956189	Argument	imap_messages		956162	0					
ANR	956190	Identifier	imap_messages		956162	0					
ANR	956191	CallExpression	mail_newmessagelist ( )		956162	1					
ANR	956192	Callee	mail_newmessagelist		956162	0					
ANR	956193	Identifier	mail_newmessagelist		956162	0					
ANR	956194	ArgumentList			956162	1					
ANR	956195	ExpressionStatement	IMAPG ( imap_messages ) -> msgid = number	4881:2:141191:141227	956162	1	True				
ANR	956196	AssignmentExpression	IMAPG ( imap_messages ) -> msgid = number		956162	0		=			
ANR	956197	PtrMemberAccess	IMAPG ( imap_messages ) -> msgid		956162	0					
ANR	956198	CallExpression	IMAPG ( imap_messages )		956162	0					
ANR	956199	Callee	IMAPG		956162	0					
ANR	956200	Identifier	IMAPG		956162	0					
ANR	956201	ArgumentList	imap_messages		956162	1					
ANR	956202	Argument	imap_messages		956162	0					
ANR	956203	Identifier	imap_messages		956162	0					
ANR	956204	Identifier	msgid		956162	1					
ANR	956205	Identifier	number		956162	1					
ANR	956206	ExpressionStatement	IMAPG ( imap_messages ) -> next = NIL	4882:2:141231:141263	956162	2	True				
ANR	956207	AssignmentExpression	IMAPG ( imap_messages ) -> next = NIL		956162	0		=			
ANR	956208	PtrMemberAccess	IMAPG ( imap_messages ) -> next		956162	0					
ANR	956209	CallExpression	IMAPG ( imap_messages )		956162	0					
ANR	956210	Callee	IMAPG		956162	0					
ANR	956211	Identifier	IMAPG		956162	0					
ANR	956212	ArgumentList	imap_messages		956162	1					
ANR	956213	Argument	imap_messages		956162	0					
ANR	956214	Identifier	imap_messages		956162	0					
ANR	956215	Identifier	next		956162	1					
ANR	956216	Identifier	NIL		956162	1					
ANR	956217	ExpressionStatement	IMAPG ( imap_messages_tail ) = IMAPG ( imap_messages )	4883:2:141267:141315	956162	3	True				
ANR	956218	AssignmentExpression	IMAPG ( imap_messages_tail ) = IMAPG ( imap_messages )		956162	0		=			
ANR	956219	CallExpression	IMAPG ( imap_messages_tail )		956162	0					
ANR	956220	Callee	IMAPG		956162	0					
ANR	956221	Identifier	IMAPG		956162	0					
ANR	956222	ArgumentList	imap_messages_tail		956162	1					
ANR	956223	Argument	imap_messages_tail		956162	0					
ANR	956224	Identifier	imap_messages_tail		956162	0					
ANR	956225	CallExpression	IMAPG ( imap_messages )		956162	1					
ANR	956226	Callee	IMAPG		956162	0					
ANR	956227	Identifier	IMAPG		956162	0					
ANR	956228	ArgumentList	imap_messages		956162	1					
ANR	956229	Argument	imap_messages		956162	0					
ANR	956230	Identifier	imap_messages		956162	0					
ANR	956231	ElseStatement	else		956162	0					
ANR	956232	CompoundStatement		9:8:247:247	956162	0					
ANR	956233	ExpressionStatement	cur = IMAPG ( imap_messages_tail )	4885:2:141329:141360	956162	0	True				
ANR	956234	AssignmentExpression	cur = IMAPG ( imap_messages_tail )		956162	0		=			
ANR	956235	Identifier	cur		956162	0					
ANR	956236	CallExpression	IMAPG ( imap_messages_tail )		956162	1					
ANR	956237	Callee	IMAPG		956162	0					
ANR	956238	Identifier	IMAPG		956162	0					
ANR	956239	ArgumentList	imap_messages_tail		956162	1					
ANR	956240	Argument	imap_messages_tail		956162	0					
ANR	956241	Identifier	imap_messages_tail		956162	0					
ANR	956242	ExpressionStatement	cur -> next = mail_newmessagelist ( )	4886:2:141364:141397	956162	1	True				
ANR	956243	AssignmentExpression	cur -> next = mail_newmessagelist ( )		956162	0		=			
ANR	956244	PtrMemberAccess	cur -> next		956162	0					
ANR	956245	Identifier	cur		956162	0					
ANR	956246	Identifier	next		956162	1					
ANR	956247	CallExpression	mail_newmessagelist ( )		956162	1					
ANR	956248	Callee	mail_newmessagelist		956162	0					
ANR	956249	Identifier	mail_newmessagelist		956162	0					
ANR	956250	ArgumentList			956162	1					
ANR	956251	ExpressionStatement	cur = cur -> next	4887:2:141401:141416	956162	2	True				
ANR	956252	AssignmentExpression	cur = cur -> next		956162	0		=			
ANR	956253	Identifier	cur		956162	0					
ANR	956254	PtrMemberAccess	cur -> next		956162	1					
ANR	956255	Identifier	cur		956162	0					
ANR	956256	Identifier	next		956162	1					
ANR	956257	ExpressionStatement	cur -> msgid = number	4888:2:141420:141439	956162	3	True				
ANR	956258	AssignmentExpression	cur -> msgid = number		956162	0		=			
ANR	956259	PtrMemberAccess	cur -> msgid		956162	0					
ANR	956260	Identifier	cur		956162	0					
ANR	956261	Identifier	msgid		956162	1					
ANR	956262	Identifier	number		956162	1					
ANR	956263	ExpressionStatement	cur -> next = NIL	4889:2:141443:141458	956162	4	True				
ANR	956264	AssignmentExpression	cur -> next = NIL		956162	0		=			
ANR	956265	PtrMemberAccess	cur -> next		956162	0					
ANR	956266	Identifier	cur		956162	0					
ANR	956267	Identifier	next		956162	1					
ANR	956268	Identifier	NIL		956162	1					
ANR	956269	ExpressionStatement	IMAPG ( imap_messages_tail ) = cur	4890:2:141462:141493	956162	5	True				
ANR	956270	AssignmentExpression	IMAPG ( imap_messages_tail ) = cur		956162	0		=			
ANR	956271	CallExpression	IMAPG ( imap_messages_tail )		956162	0					
ANR	956272	Callee	IMAPG		956162	0					
ANR	956273	Identifier	IMAPG		956162	0					
ANR	956274	ArgumentList	imap_messages_tail		956162	1					
ANR	956275	Argument	imap_messages_tail		956162	0					
ANR	956276	Identifier	imap_messages_tail		956162	0					
ANR	956277	Identifier	cur		956162	1					
ANR	956278	ReturnType	PHP_IMAP_EXPORT void		956162	1					
ANR	956279	Identifier	mm_searched		956162	2					
ANR	956280	ParameterList	"MAILSTREAM * stream , unsigned long number"		956162	3					
ANR	956281	Parameter	MAILSTREAM * stream	4875:33:141035:141052	956162	0	True				
ANR	956282	ParameterType	MAILSTREAM *		956162	0					
ANR	956283	Identifier	stream		956162	1					
ANR	956284	Parameter	unsigned long number	4875:53:141055:141074	956162	1	True				
ANR	956285	ParameterType	unsigned long		956162	0					
ANR	956286	Identifier	number		956162	1					
ANR	956287	CFGEntryNode	ENTRY		956162		True				
ANR	956288	CFGExitNode	EXIT		956162		True				
ANR	956289	Symbol	cur		956162						
ANR	956290	Symbol	IMAPG ( imap_messages ) -> msgid		956162						
ANR	956291	Symbol	imap_messages_tail		956162						
ANR	956292	Symbol	mail_newmessagelist		956162						
ANR	956293	Symbol	cur -> msgid		956162						
ANR	956294	Symbol	NIL		956162						
ANR	956295	Symbol	number		956162						
ANR	956296	Symbol	stream		956162						
ANR	956297	Symbol	* cur		956162						
ANR	956298	Symbol	* IMAPG		956162						
ANR	956299	Symbol	IMAPG ( imap_messages ) -> next		956162						
ANR	956300	Symbol	imap_messages		956162						
ANR	956301	Symbol	IMAPG		956162						
ANR	956302	Symbol	cur -> next		956162						
ANR	956303	Function	mm_exists	4894:0:141501:141576							
ANR	956304	FunctionDef	"mm_exists (MAILSTREAM * stream , unsigned long number)"		956303	0					
ANR	956305	CompoundStatement		4895:0:141574:141576	956303	0					
ANR	956306	ReturnType	PHP_IMAP_EXPORT void		956303	1					
ANR	956307	Identifier	mm_exists		956303	2					
ANR	956308	ParameterList	"MAILSTREAM * stream , unsigned long number"		956303	3					
ANR	956309	Parameter	MAILSTREAM * stream	4894:31:141532:141549	956303	0	True				
ANR	956310	ParameterType	MAILSTREAM *		956303	0					
ANR	956311	Identifier	stream		956303	1					
ANR	956312	Parameter	unsigned long number	4894:51:141552:141571	956303	1	True				
ANR	956313	ParameterType	unsigned long		956303	0					
ANR	956314	Identifier	number		956303	1					
ANR	956315	CFGEntryNode	ENTRY		956303		True				
ANR	956316	CFGExitNode	EXIT		956303		True				
ANR	956317	Symbol	number		956303						
ANR	956318	Symbol	stream		956303						
ANR	956319	Function	mm_expunged	4898:0:141579:141656							
ANR	956320	FunctionDef	"mm_expunged (MAILSTREAM * stream , unsigned long number)"		956319	0					
ANR	956321	CompoundStatement		4899:0:141654:141656	956319	0					
ANR	956322	ReturnType	PHP_IMAP_EXPORT void		956319	1					
ANR	956323	Identifier	mm_expunged		956319	2					
ANR	956324	ParameterList	"MAILSTREAM * stream , unsigned long number"		956319	3					
ANR	956325	Parameter	MAILSTREAM * stream	4898:33:141612:141629	956319	0	True				
ANR	956326	ParameterType	MAILSTREAM *		956319	0					
ANR	956327	Identifier	stream		956319	1					
ANR	956328	Parameter	unsigned long number	4898:53:141632:141651	956319	1	True				
ANR	956329	ParameterType	unsigned long		956319	0					
ANR	956330	Identifier	number		956319	1					
ANR	956331	CFGEntryNode	ENTRY		956319		True				
ANR	956332	CFGExitNode	EXIT		956319		True				
ANR	956333	Symbol	number		956319						
ANR	956334	Symbol	stream		956319						
ANR	956335	Function	mm_flags	4902:0:141659:141733							
ANR	956336	FunctionDef	"mm_flags (MAILSTREAM * stream , unsigned long number)"		956335	0					
ANR	956337	CompoundStatement		4903:0:141731:141733	956335	0					
ANR	956338	ReturnType	PHP_IMAP_EXPORT void		956335	1					
ANR	956339	Identifier	mm_flags		956335	2					
ANR	956340	ParameterList	"MAILSTREAM * stream , unsigned long number"		956335	3					
ANR	956341	Parameter	MAILSTREAM * stream	4902:30:141689:141706	956335	0	True				
ANR	956342	ParameterType	MAILSTREAM *		956335	0					
ANR	956343	Identifier	stream		956335	1					
ANR	956344	Parameter	unsigned long number	4902:50:141709:141728	956335	1	True				
ANR	956345	ParameterType	unsigned long		956335	0					
ANR	956346	Identifier	number		956335	1					
ANR	956347	CFGEntryNode	ENTRY		956335		True				
ANR	956348	CFGExitNode	EXIT		956335		True				
ANR	956349	Symbol	number		956335						
ANR	956350	Symbol	stream		956335						
ANR	956351	Function	mm_notify	4907:0:141754:142398							
ANR	956352	FunctionDef	"mm_notify (MAILSTREAM * stream , char * str , long errflg)"		956351	0					
ANR	956353	CompoundStatement		4908:0:141829:142398	956351	0					
ANR	956354	IdentifierDeclStatement	STRINGLIST * cur = NIL ;	4909:1:141832:141853	956351	0	True				
ANR	956355	IdentifierDecl	* cur = NIL		956351	0					
ANR	956356	IdentifierDeclType	STRINGLIST *		956351	0					
ANR	956357	Identifier	cur		956351	1					
ANR	956358	AssignmentExpression	* cur = NIL		956351	2		=			
ANR	956359	Identifier	NIL		956351	0					
ANR	956360	Identifier	NIL		956351	1					
ANR	956361	IfStatement	"if ( strncmp ( str , ""[ALERT] "" , 8 ) == 0 )"		956351	1					
ANR	956362	Condition	"strncmp ( str , ""[ALERT] "" , 8 ) == 0"	4911:5:141861:141892	956351	0	True				
ANR	956363	EqualityExpression	"strncmp ( str , ""[ALERT] "" , 8 ) == 0"		956351	0		==			
ANR	956364	CallExpression	"strncmp ( str , ""[ALERT] "" , 8 )"		956351	0					
ANR	956365	Callee	strncmp		956351	0					
ANR	956366	Identifier	strncmp		956351	0					
ANR	956367	ArgumentList	str		956351	1					
ANR	956368	Argument	str		956351	0					
ANR	956369	Identifier	str		956351	0					
ANR	956370	Argument	"""[ALERT] """		956351	1					
ANR	956371	PrimaryExpression	"""[ALERT] """		956351	0					
ANR	956372	Argument	8		956351	2					
ANR	956373	PrimaryExpression	8		956351	0					
ANR	956374	PrimaryExpression	0		956351	1					
ANR	956375	CompoundStatement		4:39:65:65	956351	1					
ANR	956376	IfStatement	if ( IMAPG ( imap_alertstack ) == NIL )		956351	0					
ANR	956377	Condition	IMAPG ( imap_alertstack ) == NIL	4912:6:141903:141931	956351	0	True				
ANR	956378	EqualityExpression	IMAPG ( imap_alertstack ) == NIL		956351	0		==			
ANR	956379	CallExpression	IMAPG ( imap_alertstack )		956351	0					
ANR	956380	Callee	IMAPG		956351	0					
ANR	956381	Identifier	IMAPG		956351	0					
ANR	956382	ArgumentList	imap_alertstack		956351	1					
ANR	956383	Argument	imap_alertstack		956351	0					
ANR	956384	Identifier	imap_alertstack		956351	0					
ANR	956385	Identifier	NIL		956351	1					
ANR	956386	CompoundStatement		5:37:104:104	956351	1					
ANR	956387	ExpressionStatement	IMAPG ( imap_alertstack ) = mail_newstringlist ( )	4913:3:141939:141984	956351	0	True				
ANR	956388	AssignmentExpression	IMAPG ( imap_alertstack ) = mail_newstringlist ( )		956351	0		=			
ANR	956389	CallExpression	IMAPG ( imap_alertstack )		956351	0					
ANR	956390	Callee	IMAPG		956351	0					
ANR	956391	Identifier	IMAPG		956351	0					
ANR	956392	ArgumentList	imap_alertstack		956351	1					
ANR	956393	Argument	imap_alertstack		956351	0					
ANR	956394	Identifier	imap_alertstack		956351	0					
ANR	956395	CallExpression	mail_newstringlist ( )		956351	1					
ANR	956396	Callee	mail_newstringlist		956351	0					
ANR	956397	Identifier	mail_newstringlist		956351	0					
ANR	956398	ArgumentList			956351	1					
ANR	956399	ExpressionStatement	IMAPG ( imap_alertstack ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_alertstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )	4914:3:141989:142097	956351	1	True				
ANR	956400	AssignmentExpression	IMAPG ( imap_alertstack ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_alertstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		956351	0		=			
ANR	956401	PtrMemberAccess	IMAPG ( imap_alertstack ) -> LSIZE		956351	0					
ANR	956402	CallExpression	IMAPG ( imap_alertstack )		956351	0					
ANR	956403	Callee	IMAPG		956351	0					
ANR	956404	Identifier	IMAPG		956351	0					
ANR	956405	ArgumentList	imap_alertstack		956351	1					
ANR	956406	Argument	imap_alertstack		956351	0					
ANR	956407	Identifier	imap_alertstack		956351	0					
ANR	956408	Identifier	LSIZE		956351	1					
ANR	956409	CallExpression	strlen ( ( char * ) ( IMAPG ( imap_alertstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		956351	1					
ANR	956410	Callee	strlen		956351	0					
ANR	956411	Identifier	strlen		956351	0					
ANR	956412	ArgumentList	( char * ) ( IMAPG ( imap_alertstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) )		956351	1					
ANR	956413	Argument	( char * ) ( IMAPG ( imap_alertstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) )		956351	0					
ANR	956414	CastExpression	( char * ) ( IMAPG ( imap_alertstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) )		956351	0					
ANR	956415	CastTarget	char *		956351	0					
ANR	956416	AssignmentExpression	IMAPG ( imap_alertstack ) -> LTEXT = ( unsigned char * ) cpystr ( str )		956351	1		=			
ANR	956417	PtrMemberAccess	IMAPG ( imap_alertstack ) -> LTEXT		956351	0					
ANR	956418	CallExpression	IMAPG ( imap_alertstack )		956351	0					
ANR	956419	Callee	IMAPG		956351	0					
ANR	956420	Identifier	IMAPG		956351	0					
ANR	956421	ArgumentList	imap_alertstack		956351	1					
ANR	956422	Argument	imap_alertstack		956351	0					
ANR	956423	Identifier	imap_alertstack		956351	0					
ANR	956424	Identifier	LTEXT		956351	1					
ANR	956425	CastExpression	( unsigned char * ) cpystr ( str )		956351	1					
ANR	956426	CastTarget	unsigned char *		956351	0					
ANR	956427	CallExpression	cpystr ( str )		956351	1					
ANR	956428	Callee	cpystr		956351	0					
ANR	956429	Identifier	cpystr		956351	0					
ANR	956430	ArgumentList	str		956351	1					
ANR	956431	Argument	str		956351	0					
ANR	956432	Identifier	str		956351	0					
ANR	956433	ExpressionStatement	IMAPG ( imap_alertstack ) -> next = NIL	4915:3:142102:142136	956351	2	True				
ANR	956434	AssignmentExpression	IMAPG ( imap_alertstack ) -> next = NIL		956351	0		=			
ANR	956435	PtrMemberAccess	IMAPG ( imap_alertstack ) -> next		956351	0					
ANR	956436	CallExpression	IMAPG ( imap_alertstack )		956351	0					
ANR	956437	Callee	IMAPG		956351	0					
ANR	956438	Identifier	IMAPG		956351	0					
ANR	956439	ArgumentList	imap_alertstack		956351	1					
ANR	956440	Argument	imap_alertstack		956351	0					
ANR	956441	Identifier	imap_alertstack		956351	0					
ANR	956442	Identifier	next		956351	1					
ANR	956443	Identifier	NIL		956351	1					
ANR	956444	ElseStatement	else		956351	0					
ANR	956445	CompoundStatement		9:9:317:317	956351	0					
ANR	956446	ExpressionStatement	cur = IMAPG ( imap_alertstack )	4917:3:142152:142180	956351	0	True				
ANR	956447	AssignmentExpression	cur = IMAPG ( imap_alertstack )		956351	0		=			
ANR	956448	Identifier	cur		956351	0					
ANR	956449	CallExpression	IMAPG ( imap_alertstack )		956351	1					
ANR	956450	Callee	IMAPG		956351	0					
ANR	956451	Identifier	IMAPG		956351	0					
ANR	956452	ArgumentList	imap_alertstack		956351	1					
ANR	956453	Argument	imap_alertstack		956351	0					
ANR	956454	Identifier	imap_alertstack		956351	0					
ANR	956455	WhileStatement	while ( cur -> next != NIL )		956351	1					
ANR	956456	Condition	cur -> next != NIL	4918:10:142192:142207	956351	0	True				
ANR	956457	EqualityExpression	cur -> next != NIL		956351	0		!=			
ANR	956458	PtrMemberAccess	cur -> next		956351	0					
ANR	956459	Identifier	cur		956351	0					
ANR	956460	Identifier	next		956351	1					
ANR	956461	Identifier	NIL		956351	1					
ANR	956462	CompoundStatement		11:28:380:380	956351	1					
ANR	956463	ExpressionStatement	cur = cur -> next	4919:4:142216:142231	956351	0	True				
ANR	956464	AssignmentExpression	cur = cur -> next		956351	0		=			
ANR	956465	Identifier	cur		956351	0					
ANR	956466	PtrMemberAccess	cur -> next		956351	1					
ANR	956467	Identifier	cur		956351	0					
ANR	956468	Identifier	next		956351	1					
ANR	956469	ExpressionStatement	cur -> next = mail_newstringlist ( )	4921:3:142241:142274	956351	2	True				
ANR	956470	AssignmentExpression	cur -> next = mail_newstringlist ( )		956351	0		=			
ANR	956471	PtrMemberAccess	cur -> next		956351	0					
ANR	956472	Identifier	cur		956351	0					
ANR	956473	Identifier	next		956351	1					
ANR	956474	CallExpression	mail_newstringlist ( )		956351	1					
ANR	956475	Callee	mail_newstringlist		956351	0					
ANR	956476	Identifier	mail_newstringlist		956351	0					
ANR	956477	ArgumentList			956351	1					
ANR	956478	ExpressionStatement	cur = cur -> next	4922:3:142279:142294	956351	3	True				
ANR	956479	AssignmentExpression	cur = cur -> next		956351	0		=			
ANR	956480	Identifier	cur		956351	0					
ANR	956481	PtrMemberAccess	cur -> next		956351	1					
ANR	956482	Identifier	cur		956351	0					
ANR	956483	Identifier	next		956351	1					
ANR	956484	ExpressionStatement	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )	4923:3:142299:142369	956351	4	True				
ANR	956485	AssignmentExpression	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		956351	0		=			
ANR	956486	PtrMemberAccess	cur -> LSIZE		956351	0					
ANR	956487	Identifier	cur		956351	0					
ANR	956488	Identifier	LSIZE		956351	1					
ANR	956489	CallExpression	strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		956351	1					
ANR	956490	Callee	strlen		956351	0					
ANR	956491	Identifier	strlen		956351	0					
ANR	956492	ArgumentList	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) )		956351	1					
ANR	956493	Argument	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) )		956351	0					
ANR	956494	CastExpression	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) )		956351	0					
ANR	956495	CastTarget	char *		956351	0					
ANR	956496	AssignmentExpression	cur -> LTEXT = ( unsigned char * ) cpystr ( str )		956351	1		=			
ANR	956497	PtrMemberAccess	cur -> LTEXT		956351	0					
ANR	956498	Identifier	cur		956351	0					
ANR	956499	Identifier	LTEXT		956351	1					
ANR	956500	CastExpression	( unsigned char * ) cpystr ( str )		956351	1					
ANR	956501	CastTarget	unsigned char *		956351	0					
ANR	956502	CallExpression	cpystr ( str )		956351	1					
ANR	956503	Callee	cpystr		956351	0					
ANR	956504	Identifier	cpystr		956351	0					
ANR	956505	ArgumentList	str		956351	1					
ANR	956506	Argument	str		956351	0					
ANR	956507	Identifier	str		956351	0					
ANR	956508	ExpressionStatement	cur -> next = NIL	4924:3:142374:142389	956351	5	True				
ANR	956509	AssignmentExpression	cur -> next = NIL		956351	0		=			
ANR	956510	PtrMemberAccess	cur -> next		956351	0					
ANR	956511	Identifier	cur		956351	0					
ANR	956512	Identifier	next		956351	1					
ANR	956513	Identifier	NIL		956351	1					
ANR	956514	ReturnType	PHP_IMAP_EXPORT void		956351	1					
ANR	956515	Identifier	mm_notify		956351	2					
ANR	956516	ParameterList	"MAILSTREAM * stream , char * str , long errflg"		956351	3					
ANR	956517	Parameter	MAILSTREAM * stream	4907:31:141785:141802	956351	0	True				
ANR	956518	ParameterType	MAILSTREAM *		956351	0					
ANR	956519	Identifier	stream		956351	1					
ANR	956520	Parameter	char * str	4907:51:141805:141813	956351	1	True				
ANR	956521	ParameterType	char *		956351	0					
ANR	956522	Identifier	str		956351	1					
ANR	956523	Parameter	long errflg	4907:62:141816:141826	956351	2	True				
ANR	956524	ParameterType	long		956351	0					
ANR	956525	Identifier	errflg		956351	1					
ANR	956526	CFGEntryNode	ENTRY		956351		True				
ANR	956527	CFGExitNode	EXIT		956351		True				
ANR	956528	Symbol	cur		956351						
ANR	956529	Symbol	mail_newstringlist		956351						
ANR	956530	Symbol	errflg		956351						
ANR	956531	Symbol	cur -> LTEXT		956351						
ANR	956532	Symbol	imap_alertstack		956351						
ANR	956533	Symbol	str		956351						
ANR	956534	Symbol	NIL		956351						
ANR	956535	Symbol	strncmp		956351						
ANR	956536	Symbol	strlen		956351						
ANR	956537	Symbol	IMAPG ( imap_alertstack ) -> LSIZE		956351						
ANR	956538	Symbol	stream		956351						
ANR	956539	Symbol	* cur		956351						
ANR	956540	Symbol	* IMAPG		956351						
ANR	956541	Symbol	cpystr		956351						
ANR	956542	Symbol	IMAPG ( imap_alertstack ) -> LTEXT		956351						
ANR	956543	Symbol	IMAPG		956351						
ANR	956544	Symbol	IMAPG ( imap_alertstack ) -> next		956351						
ANR	956545	Symbol	cur -> LSIZE		956351						
ANR	956546	Symbol	cur -> next		956351						
ANR	956547	Function	mm_list	4929:0:142401:144105							
ANR	956548	FunctionDef	"mm_list (MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes)"		956547	0					
ANR	956549	CompoundStatement		4930:0:142499:144105	956547	0					
ANR	956550	IdentifierDeclStatement	STRINGLIST * cur = NIL ;	4931:1:142502:142521	956547	0	True				
ANR	956551	IdentifierDecl	* cur = NIL		956547	0					
ANR	956552	IdentifierDeclType	STRINGLIST *		956547	0					
ANR	956553	Identifier	cur		956547	1					
ANR	956554	AssignmentExpression	* cur = NIL		956547	2		=			
ANR	956555	Identifier	NIL		956547	0					
ANR	956556	Identifier	NIL		956547	1					
ANR	956557	IdentifierDeclStatement	FOBJECTLIST * ocur = NIL ;	4932:1:142524:142545	956547	1	True				
ANR	956558	IdentifierDecl	* ocur = NIL		956547	0					
ANR	956559	IdentifierDeclType	FOBJECTLIST *		956547	0					
ANR	956560	Identifier	ocur		956547	1					
ANR	956561	AssignmentExpression	* ocur = NIL		956547	2		=			
ANR	956562	Identifier	NIL		956547	0					
ANR	956563	Identifier	NIL		956547	1					
ANR	956564	IfStatement	if ( IMAPG ( folderlist_style ) == FLIST_OBJECT )		956547	2					
ANR	956565	Condition	IMAPG ( folderlist_style ) == FLIST_OBJECT	4934:5:142553:142591	956547	0	True				
ANR	956566	EqualityExpression	IMAPG ( folderlist_style ) == FLIST_OBJECT		956547	0		==			
ANR	956567	CallExpression	IMAPG ( folderlist_style )		956547	0					
ANR	956568	Callee	IMAPG		956547	0					
ANR	956569	Identifier	IMAPG		956547	0					
ANR	956570	ArgumentList	folderlist_style		956547	1					
ANR	956571	Argument	folderlist_style		956547	0					
ANR	956572	Identifier	folderlist_style		956547	0					
ANR	956573	Identifier	FLIST_OBJECT		956547	1					
ANR	956574	CompoundStatement		5:46:94:94	956547	1					
ANR	956575	IfStatement	if ( IMAPG ( imap_folder_objects ) == NIL )		956547	0					
ANR	956576	Condition	IMAPG ( imap_folder_objects ) == NIL	4937:6:142666:142698	956547	0	True				
ANR	956577	EqualityExpression	IMAPG ( imap_folder_objects ) == NIL		956547	0		==			
ANR	956578	CallExpression	IMAPG ( imap_folder_objects )		956547	0					
ANR	956579	Callee	IMAPG		956547	0					
ANR	956580	Identifier	IMAPG		956547	0					
ANR	956581	ArgumentList	imap_folder_objects		956547	1					
ANR	956582	Argument	imap_folder_objects		956547	0					
ANR	956583	Identifier	imap_folder_objects		956547	0					
ANR	956584	Identifier	NIL		956547	1					
ANR	956585	CompoundStatement		8:41:201:201	956547	1					
ANR	956586	ExpressionStatement	IMAPG ( imap_folder_objects ) = mail_newfolderobjectlist ( )	4938:3:142706:142761	956547	0	True				
ANR	956587	AssignmentExpression	IMAPG ( imap_folder_objects ) = mail_newfolderobjectlist ( )		956547	0		=			
ANR	956588	CallExpression	IMAPG ( imap_folder_objects )		956547	0					
ANR	956589	Callee	IMAPG		956547	0					
ANR	956590	Identifier	IMAPG		956547	0					
ANR	956591	ArgumentList	imap_folder_objects		956547	1					
ANR	956592	Argument	imap_folder_objects		956547	0					
ANR	956593	Identifier	imap_folder_objects		956547	0					
ANR	956594	CallExpression	mail_newfolderobjectlist ( )		956547	1					
ANR	956595	Callee	mail_newfolderobjectlist		956547	0					
ANR	956596	Identifier	mail_newfolderobjectlist		956547	0					
ANR	956597	ArgumentList			956547	1					
ANR	956598	ExpressionStatement	IMAPG ( imap_folder_objects ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_folder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	4939:3:142766:142884	956547	1	True				
ANR	956599	AssignmentExpression	IMAPG ( imap_folder_objects ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_folder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	0		=			
ANR	956600	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> LSIZE		956547	0					
ANR	956601	CallExpression	IMAPG ( imap_folder_objects )		956547	0					
ANR	956602	Callee	IMAPG		956547	0					
ANR	956603	Identifier	IMAPG		956547	0					
ANR	956604	ArgumentList	imap_folder_objects		956547	1					
ANR	956605	Argument	imap_folder_objects		956547	0					
ANR	956606	Identifier	imap_folder_objects		956547	0					
ANR	956607	Identifier	LSIZE		956547	1					
ANR	956608	CallExpression	strlen ( ( char * ) ( IMAPG ( imap_folder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	1					
ANR	956609	Callee	strlen		956547	0					
ANR	956610	Identifier	strlen		956547	0					
ANR	956611	ArgumentList	( char * ) ( IMAPG ( imap_folder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	1					
ANR	956612	Argument	( char * ) ( IMAPG ( imap_folder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956613	CastExpression	( char * ) ( IMAPG ( imap_folder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956614	CastTarget	char *		956547	0					
ANR	956615	AssignmentExpression	IMAPG ( imap_folder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956547	1		=			
ANR	956616	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> LTEXT		956547	0					
ANR	956617	CallExpression	IMAPG ( imap_folder_objects )		956547	0					
ANR	956618	Callee	IMAPG		956547	0					
ANR	956619	Identifier	IMAPG		956547	0					
ANR	956620	ArgumentList	imap_folder_objects		956547	1					
ANR	956621	Argument	imap_folder_objects		956547	0					
ANR	956622	Identifier	imap_folder_objects		956547	0					
ANR	956623	Identifier	LTEXT		956547	1					
ANR	956624	CastExpression	( unsigned char * ) cpystr ( mailbox )		956547	1					
ANR	956625	CastTarget	unsigned char *		956547	0					
ANR	956626	CallExpression	cpystr ( mailbox )		956547	1					
ANR	956627	Callee	cpystr		956547	0					
ANR	956628	Identifier	cpystr		956547	0					
ANR	956629	ArgumentList	mailbox		956547	1					
ANR	956630	Argument	mailbox		956547	0					
ANR	956631	Identifier	mailbox		956547	0					
ANR	956632	ExpressionStatement	IMAPG ( imap_folder_objects ) -> delimiter = delimiter	4940:3:142889:142938	956547	2	True				
ANR	956633	AssignmentExpression	IMAPG ( imap_folder_objects ) -> delimiter = delimiter		956547	0		=			
ANR	956634	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> delimiter		956547	0					
ANR	956635	CallExpression	IMAPG ( imap_folder_objects )		956547	0					
ANR	956636	Callee	IMAPG		956547	0					
ANR	956637	Identifier	IMAPG		956547	0					
ANR	956638	ArgumentList	imap_folder_objects		956547	1					
ANR	956639	Argument	imap_folder_objects		956547	0					
ANR	956640	Identifier	imap_folder_objects		956547	0					
ANR	956641	Identifier	delimiter		956547	1					
ANR	956642	Identifier	delimiter		956547	1					
ANR	956643	ExpressionStatement	IMAPG ( imap_folder_objects ) -> attributes = attributes	4941:3:142943:142994	956547	3	True				
ANR	956644	AssignmentExpression	IMAPG ( imap_folder_objects ) -> attributes = attributes		956547	0		=			
ANR	956645	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> attributes		956547	0					
ANR	956646	CallExpression	IMAPG ( imap_folder_objects )		956547	0					
ANR	956647	Callee	IMAPG		956547	0					
ANR	956648	Identifier	IMAPG		956547	0					
ANR	956649	ArgumentList	imap_folder_objects		956547	1					
ANR	956650	Argument	imap_folder_objects		956547	0					
ANR	956651	Identifier	imap_folder_objects		956547	0					
ANR	956652	Identifier	attributes		956547	1					
ANR	956653	Identifier	attributes		956547	1					
ANR	956654	ExpressionStatement	IMAPG ( imap_folder_objects ) -> next = NIL	4942:3:142999:143037	956547	4	True				
ANR	956655	AssignmentExpression	IMAPG ( imap_folder_objects ) -> next = NIL		956547	0		=			
ANR	956656	PtrMemberAccess	IMAPG ( imap_folder_objects ) -> next		956547	0					
ANR	956657	CallExpression	IMAPG ( imap_folder_objects )		956547	0					
ANR	956658	Callee	IMAPG		956547	0					
ANR	956659	Identifier	IMAPG		956547	0					
ANR	956660	ArgumentList	imap_folder_objects		956547	1					
ANR	956661	Argument	imap_folder_objects		956547	0					
ANR	956662	Identifier	imap_folder_objects		956547	0					
ANR	956663	Identifier	next		956547	1					
ANR	956664	Identifier	NIL		956547	1					
ANR	956665	ExpressionStatement	IMAPG ( imap_folder_objects_tail ) = IMAPG ( imap_folder_objects )	4943:3:143042:143102	956547	5	True				
ANR	956666	AssignmentExpression	IMAPG ( imap_folder_objects_tail ) = IMAPG ( imap_folder_objects )		956547	0		=			
ANR	956667	CallExpression	IMAPG ( imap_folder_objects_tail )		956547	0					
ANR	956668	Callee	IMAPG		956547	0					
ANR	956669	Identifier	IMAPG		956547	0					
ANR	956670	ArgumentList	imap_folder_objects_tail		956547	1					
ANR	956671	Argument	imap_folder_objects_tail		956547	0					
ANR	956672	Identifier	imap_folder_objects_tail		956547	0					
ANR	956673	CallExpression	IMAPG ( imap_folder_objects )		956547	1					
ANR	956674	Callee	IMAPG		956547	0					
ANR	956675	Identifier	IMAPG		956547	0					
ANR	956676	ArgumentList	imap_folder_objects		956547	1					
ANR	956677	Argument	imap_folder_objects		956547	0					
ANR	956678	Identifier	imap_folder_objects		956547	0					
ANR	956679	ElseStatement	else		956547	0					
ANR	956680	CompoundStatement		15:9:613:613	956547	0					
ANR	956681	ExpressionStatement	ocur = IMAPG ( imap_folder_objects_tail )	4945:3:143118:143154	956547	0	True				
ANR	956682	AssignmentExpression	ocur = IMAPG ( imap_folder_objects_tail )		956547	0		=			
ANR	956683	Identifier	ocur		956547	0					
ANR	956684	CallExpression	IMAPG ( imap_folder_objects_tail )		956547	1					
ANR	956685	Callee	IMAPG		956547	0					
ANR	956686	Identifier	IMAPG		956547	0					
ANR	956687	ArgumentList	imap_folder_objects_tail		956547	1					
ANR	956688	Argument	imap_folder_objects_tail		956547	0					
ANR	956689	Identifier	imap_folder_objects_tail		956547	0					
ANR	956690	ExpressionStatement	ocur -> next = mail_newfolderobjectlist ( )	4946:3:143159:143196	956547	1	True				
ANR	956691	AssignmentExpression	ocur -> next = mail_newfolderobjectlist ( )		956547	0		=			
ANR	956692	PtrMemberAccess	ocur -> next		956547	0					
ANR	956693	Identifier	ocur		956547	0					
ANR	956694	Identifier	next		956547	1					
ANR	956695	CallExpression	mail_newfolderobjectlist ( )		956547	1					
ANR	956696	Callee	mail_newfolderobjectlist		956547	0					
ANR	956697	Identifier	mail_newfolderobjectlist		956547	0					
ANR	956698	ArgumentList			956547	1					
ANR	956699	ExpressionStatement	ocur = ocur -> next	4947:3:143201:143216	956547	2	True				
ANR	956700	AssignmentExpression	ocur = ocur -> next		956547	0		=			
ANR	956701	Identifier	ocur		956547	0					
ANR	956702	PtrMemberAccess	ocur -> next		956547	1					
ANR	956703	Identifier	ocur		956547	0					
ANR	956704	Identifier	next		956547	1					
ANR	956705	ExpressionStatement	ocur -> LSIZE = strlen ( ( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	4948:3:143221:143297	956547	3	True				
ANR	956706	AssignmentExpression	ocur -> LSIZE = strlen ( ( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	0		=			
ANR	956707	PtrMemberAccess	ocur -> LSIZE		956547	0					
ANR	956708	Identifier	ocur		956547	0					
ANR	956709	Identifier	LSIZE		956547	1					
ANR	956710	CallExpression	strlen ( ( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	1					
ANR	956711	Callee	strlen		956547	0					
ANR	956712	Identifier	strlen		956547	0					
ANR	956713	ArgumentList	( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	1					
ANR	956714	Argument	( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956715	CastExpression	( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956716	CastTarget	char *		956547	0					
ANR	956717	AssignmentExpression	ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956547	1		=			
ANR	956718	PtrMemberAccess	ocur -> LTEXT		956547	0					
ANR	956719	Identifier	ocur		956547	0					
ANR	956720	Identifier	LTEXT		956547	1					
ANR	956721	CastExpression	( unsigned char * ) cpystr ( mailbox )		956547	1					
ANR	956722	CastTarget	unsigned char *		956547	0					
ANR	956723	CallExpression	cpystr ( mailbox )		956547	1					
ANR	956724	Callee	cpystr		956547	0					
ANR	956725	Identifier	cpystr		956547	0					
ANR	956726	ArgumentList	mailbox		956547	1					
ANR	956727	Argument	mailbox		956547	0					
ANR	956728	Identifier	mailbox		956547	0					
ANR	956729	ExpressionStatement	ocur -> delimiter = delimiter	4949:3:143302:143329	956547	4	True				
ANR	956730	AssignmentExpression	ocur -> delimiter = delimiter		956547	0		=			
ANR	956731	PtrMemberAccess	ocur -> delimiter		956547	0					
ANR	956732	Identifier	ocur		956547	0					
ANR	956733	Identifier	delimiter		956547	1					
ANR	956734	Identifier	delimiter		956547	1					
ANR	956735	ExpressionStatement	ocur -> attributes = attributes	4950:3:143334:143363	956547	5	True				
ANR	956736	AssignmentExpression	ocur -> attributes = attributes		956547	0		=			
ANR	956737	PtrMemberAccess	ocur -> attributes		956547	0					
ANR	956738	Identifier	ocur		956547	0					
ANR	956739	Identifier	attributes		956547	1					
ANR	956740	Identifier	attributes		956547	1					
ANR	956741	ExpressionStatement	ocur -> next = NIL	4951:3:143368:143384	956547	6	True				
ANR	956742	AssignmentExpression	ocur -> next = NIL		956547	0		=			
ANR	956743	PtrMemberAccess	ocur -> next		956547	0					
ANR	956744	Identifier	ocur		956547	0					
ANR	956745	Identifier	next		956547	1					
ANR	956746	Identifier	NIL		956547	1					
ANR	956747	ExpressionStatement	IMAPG ( imap_folder_objects_tail ) = ocur	4952:3:143389:143427	956547	7	True				
ANR	956748	AssignmentExpression	IMAPG ( imap_folder_objects_tail ) = ocur		956547	0		=			
ANR	956749	CallExpression	IMAPG ( imap_folder_objects_tail )		956547	0					
ANR	956750	Callee	IMAPG		956547	0					
ANR	956751	Identifier	IMAPG		956547	0					
ANR	956752	ArgumentList	imap_folder_objects_tail		956547	1					
ANR	956753	Argument	imap_folder_objects_tail		956547	0					
ANR	956754	Identifier	imap_folder_objects_tail		956547	0					
ANR	956755	Identifier	ocur		956547	1					
ANR	956756	ElseStatement	else		956547	0					
ANR	956757	CompoundStatement		26:8:942:942	956547	0					
ANR	956758	IfStatement	if ( ! ( attributes & LATT_NOSELECT ) )		956547	0					
ANR	956759	Condition	! ( attributes & LATT_NOSELECT )	4957:6:143541:143569	956547	0	True				
ANR	956760	UnaryOperationExpression	! ( attributes & LATT_NOSELECT )		956547	0					
ANR	956761	UnaryOperator	!		956547	0					
ANR	956762	BitAndExpression	attributes & LATT_NOSELECT		956547	1		&			
ANR	956763	Identifier	attributes		956547	0					
ANR	956764	Identifier	LATT_NOSELECT		956547	1					
ANR	956765	CompoundStatement		28:37:1072:1072	956547	1					
ANR	956766	IfStatement	if ( IMAPG ( imap_folders ) == NIL )		956547	0					
ANR	956767	Condition	IMAPG ( imap_folders ) == NIL	4958:7:143581:143606	956547	0	True				
ANR	956768	EqualityExpression	IMAPG ( imap_folders ) == NIL		956547	0		==			
ANR	956769	CallExpression	IMAPG ( imap_folders )		956547	0					
ANR	956770	Callee	IMAPG		956547	0					
ANR	956771	Identifier	IMAPG		956547	0					
ANR	956772	ArgumentList	imap_folders		956547	1					
ANR	956773	Argument	imap_folders		956547	0					
ANR	956774	Identifier	imap_folders		956547	0					
ANR	956775	Identifier	NIL		956547	1					
ANR	956776	CompoundStatement		29:35:1109:1109	956547	1					
ANR	956777	ExpressionStatement	IMAPG ( imap_folders ) = mail_newstringlist ( )	4959:4:143615:143655	956547	0	True				
ANR	956778	AssignmentExpression	IMAPG ( imap_folders ) = mail_newstringlist ( )		956547	0		=			
ANR	956779	CallExpression	IMAPG ( imap_folders )		956547	0					
ANR	956780	Callee	IMAPG		956547	0					
ANR	956781	Identifier	IMAPG		956547	0					
ANR	956782	ArgumentList	imap_folders		956547	1					
ANR	956783	Argument	imap_folders		956547	0					
ANR	956784	Identifier	imap_folders		956547	0					
ANR	956785	CallExpression	mail_newstringlist ( )		956547	1					
ANR	956786	Callee	mail_newstringlist		956547	0					
ANR	956787	Identifier	mail_newstringlist		956547	0					
ANR	956788	ArgumentList			956547	1					
ANR	956789	ExpressionStatement	IMAPG ( imap_folders ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_folders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	4960:4:143661:143765	956547	1	True				
ANR	956790	AssignmentExpression	IMAPG ( imap_folders ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_folders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	0		=			
ANR	956791	PtrMemberAccess	IMAPG ( imap_folders ) -> LSIZE		956547	0					
ANR	956792	CallExpression	IMAPG ( imap_folders )		956547	0					
ANR	956793	Callee	IMAPG		956547	0					
ANR	956794	Identifier	IMAPG		956547	0					
ANR	956795	ArgumentList	imap_folders		956547	1					
ANR	956796	Argument	imap_folders		956547	0					
ANR	956797	Identifier	imap_folders		956547	0					
ANR	956798	Identifier	LSIZE		956547	1					
ANR	956799	CallExpression	strlen ( ( char * ) ( IMAPG ( imap_folders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	1					
ANR	956800	Callee	strlen		956547	0					
ANR	956801	Identifier	strlen		956547	0					
ANR	956802	ArgumentList	( char * ) ( IMAPG ( imap_folders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	1					
ANR	956803	Argument	( char * ) ( IMAPG ( imap_folders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956804	CastExpression	( char * ) ( IMAPG ( imap_folders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956805	CastTarget	char *		956547	0					
ANR	956806	AssignmentExpression	IMAPG ( imap_folders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956547	1		=			
ANR	956807	PtrMemberAccess	IMAPG ( imap_folders ) -> LTEXT		956547	0					
ANR	956808	CallExpression	IMAPG ( imap_folders )		956547	0					
ANR	956809	Callee	IMAPG		956547	0					
ANR	956810	Identifier	IMAPG		956547	0					
ANR	956811	ArgumentList	imap_folders		956547	1					
ANR	956812	Argument	imap_folders		956547	0					
ANR	956813	Identifier	imap_folders		956547	0					
ANR	956814	Identifier	LTEXT		956547	1					
ANR	956815	CastExpression	( unsigned char * ) cpystr ( mailbox )		956547	1					
ANR	956816	CastTarget	unsigned char *		956547	0					
ANR	956817	CallExpression	cpystr ( mailbox )		956547	1					
ANR	956818	Callee	cpystr		956547	0					
ANR	956819	Identifier	cpystr		956547	0					
ANR	956820	ArgumentList	mailbox		956547	1					
ANR	956821	Argument	mailbox		956547	0					
ANR	956822	Identifier	mailbox		956547	0					
ANR	956823	ExpressionStatement	IMAPG ( imap_folders ) -> next = NIL	4961:4:143771:143800	956547	2	True				
ANR	956824	AssignmentExpression	IMAPG ( imap_folders ) -> next = NIL		956547	0		=			
ANR	956825	PtrMemberAccess	IMAPG ( imap_folders ) -> next		956547	0					
ANR	956826	CallExpression	IMAPG ( imap_folders )		956547	0					
ANR	956827	Callee	IMAPG		956547	0					
ANR	956828	Identifier	IMAPG		956547	0					
ANR	956829	ArgumentList	imap_folders		956547	1					
ANR	956830	Argument	imap_folders		956547	0					
ANR	956831	Identifier	imap_folders		956547	0					
ANR	956832	Identifier	next		956547	1					
ANR	956833	Identifier	NIL		956547	1					
ANR	956834	ExpressionStatement	IMAPG ( imap_folders_tail ) = IMAPG ( imap_folders )	4962:4:143806:143852	956547	3	True				
ANR	956835	AssignmentExpression	IMAPG ( imap_folders_tail ) = IMAPG ( imap_folders )		956547	0		=			
ANR	956836	CallExpression	IMAPG ( imap_folders_tail )		956547	0					
ANR	956837	Callee	IMAPG		956547	0					
ANR	956838	Identifier	IMAPG		956547	0					
ANR	956839	ArgumentList	imap_folders_tail		956547	1					
ANR	956840	Argument	imap_folders_tail		956547	0					
ANR	956841	Identifier	imap_folders_tail		956547	0					
ANR	956842	CallExpression	IMAPG ( imap_folders )		956547	1					
ANR	956843	Callee	IMAPG		956547	0					
ANR	956844	Identifier	IMAPG		956547	0					
ANR	956845	ArgumentList	imap_folders		956547	1					
ANR	956846	Argument	imap_folders		956547	0					
ANR	956847	Identifier	imap_folders		956547	0					
ANR	956848	ElseStatement	else		956547	0					
ANR	956849	CompoundStatement		34:10:1364:1364	956547	0					
ANR	956850	ExpressionStatement	cur = IMAPG ( imap_folders_tail )	4964:4:143870:143898	956547	0	True				
ANR	956851	AssignmentExpression	cur = IMAPG ( imap_folders_tail )		956547	0		=			
ANR	956852	Identifier	cur		956547	0					
ANR	956853	CallExpression	IMAPG ( imap_folders_tail )		956547	1					
ANR	956854	Callee	IMAPG		956547	0					
ANR	956855	Identifier	IMAPG		956547	0					
ANR	956856	ArgumentList	imap_folders_tail		956547	1					
ANR	956857	Argument	imap_folders_tail		956547	0					
ANR	956858	Identifier	imap_folders_tail		956547	0					
ANR	956859	ExpressionStatement	cur -> next = mail_newstringlist ( )	4965:4:143904:143935	956547	1	True				
ANR	956860	AssignmentExpression	cur -> next = mail_newstringlist ( )		956547	0		=			
ANR	956861	PtrMemberAccess	cur -> next		956547	0					
ANR	956862	Identifier	cur		956547	0					
ANR	956863	Identifier	next		956547	1					
ANR	956864	CallExpression	mail_newstringlist ( )		956547	1					
ANR	956865	Callee	mail_newstringlist		956547	0					
ANR	956866	Identifier	mail_newstringlist		956547	0					
ANR	956867	ArgumentList			956547	1					
ANR	956868	ExpressionStatement	cur = cur -> next	4966:4:143941:143954	956547	2	True				
ANR	956869	AssignmentExpression	cur = cur -> next		956547	0		=			
ANR	956870	Identifier	cur		956547	0					
ANR	956871	PtrMemberAccess	cur -> next		956547	1					
ANR	956872	Identifier	cur		956547	0					
ANR	956873	Identifier	next		956547	1					
ANR	956874	ExpressionStatement	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	4967:4:143960:144034	956547	3	True				
ANR	956875	AssignmentExpression	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	0		=			
ANR	956876	PtrMemberAccess	cur -> LSIZE		956547	0					
ANR	956877	Identifier	cur		956547	0					
ANR	956878	Identifier	LSIZE		956547	1					
ANR	956879	CallExpression	strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956547	1					
ANR	956880	Callee	strlen		956547	0					
ANR	956881	Identifier	strlen		956547	0					
ANR	956882	ArgumentList	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	1					
ANR	956883	Argument	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956884	CastExpression	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956547	0					
ANR	956885	CastTarget	char *		956547	0					
ANR	956886	AssignmentExpression	cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956547	1		=			
ANR	956887	PtrMemberAccess	cur -> LTEXT		956547	0					
ANR	956888	Identifier	cur		956547	0					
ANR	956889	Identifier	LTEXT		956547	1					
ANR	956890	CastExpression	( unsigned char * ) cpystr ( mailbox )		956547	1					
ANR	956891	CastTarget	unsigned char *		956547	0					
ANR	956892	CallExpression	cpystr ( mailbox )		956547	1					
ANR	956893	Callee	cpystr		956547	0					
ANR	956894	Identifier	cpystr		956547	0					
ANR	956895	ArgumentList	mailbox		956547	1					
ANR	956896	Argument	mailbox		956547	0					
ANR	956897	Identifier	mailbox		956547	0					
ANR	956898	ExpressionStatement	cur -> next = NIL	4968:4:144040:144055	956547	4	True				
ANR	956899	AssignmentExpression	cur -> next = NIL		956547	0		=			
ANR	956900	PtrMemberAccess	cur -> next		956547	0					
ANR	956901	Identifier	cur		956547	0					
ANR	956902	Identifier	next		956547	1					
ANR	956903	Identifier	NIL		956547	1					
ANR	956904	ExpressionStatement	IMAPG ( imap_folders_tail ) = cur	4969:4:144061:144091	956547	5	True				
ANR	956905	AssignmentExpression	IMAPG ( imap_folders_tail ) = cur		956547	0		=			
ANR	956906	CallExpression	IMAPG ( imap_folders_tail )		956547	0					
ANR	956907	Callee	IMAPG		956547	0					
ANR	956908	Identifier	IMAPG		956547	0					
ANR	956909	ArgumentList	imap_folders_tail		956547	1					
ANR	956910	Argument	imap_folders_tail		956547	0					
ANR	956911	Identifier	imap_folders_tail		956547	0					
ANR	956912	Identifier	cur		956547	1					
ANR	956913	ReturnType	PHP_IMAP_EXPORT void		956547	1					
ANR	956914	Identifier	mm_list		956547	2					
ANR	956915	ParameterList	"MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes"		956547	3					
ANR	956916	Parameter	MAILSTREAM * stream	4929:29:142430:142447	956547	0	True				
ANR	956917	ParameterType	MAILSTREAM *		956547	0					
ANR	956918	Identifier	stream		956547	1					
ANR	956919	Parameter	DTYPE delimiter	4929:49:142450:142464	956547	1	True				
ANR	956920	ParameterType	DTYPE		956547	0					
ANR	956921	Identifier	delimiter		956547	1					
ANR	956922	Parameter	char * mailbox	4929:66:142467:142479	956547	2	True				
ANR	956923	ParameterType	char *		956547	0					
ANR	956924	Identifier	mailbox		956547	1					
ANR	956925	Parameter	long attributes	4929:81:142482:142496	956547	3	True				
ANR	956926	ParameterType	long		956547	0					
ANR	956927	Identifier	attributes		956547	1					
ANR	956928	CFGEntryNode	ENTRY		956547		True				
ANR	956929	CFGExitNode	EXIT		956547		True				
ANR	956930	Symbol	IMAPG ( imap_folder_objects ) -> attributes		956547						
ANR	956931	Symbol	cur		956547						
ANR	956932	Symbol	ocur		956547						
ANR	956933	Symbol	LATT_NOSELECT		956547						
ANR	956934	Symbol	FLIST_OBJECT		956547						
ANR	956935	Symbol	* ocur		956547						
ANR	956936	Symbol	imap_folder_objects		956547						
ANR	956937	Symbol	ocur -> LTEXT		956547						
ANR	956938	Symbol	IMAPG ( imap_folder_objects ) -> LTEXT		956547						
ANR	956939	Symbol	mail_newfolderobjectlist		956547						
ANR	956940	Symbol	imap_folders		956547						
ANR	956941	Symbol	strlen		956547						
ANR	956942	Symbol	stream		956547						
ANR	956943	Symbol	imap_folder_objects_tail		956547						
ANR	956944	Symbol	* cur		956547						
ANR	956945	Symbol	delimiter		956547						
ANR	956946	Symbol	* IMAPG		956547						
ANR	956947	Symbol	cpystr		956547						
ANR	956948	Symbol	IMAPG ( imap_folder_objects ) -> next		956547						
ANR	956949	Symbol	IMAPG ( imap_folders ) -> next		956547						
ANR	956950	Symbol	mail_newstringlist		956547						
ANR	956951	Symbol	folderlist_style		956547						
ANR	956952	Symbol	cur -> LTEXT		956547						
ANR	956953	Symbol	ocur -> attributes		956547						
ANR	956954	Symbol	IMAPG ( imap_folders ) -> LSIZE		956547						
ANR	956955	Symbol	NIL		956547						
ANR	956956	Symbol	imap_folders_tail		956547						
ANR	956957	Symbol	ocur -> next		956547						
ANR	956958	Symbol	mailbox		956547						
ANR	956959	Symbol	IMAPG ( imap_folders ) -> LTEXT		956547						
ANR	956960	Symbol	IMAPG ( imap_folder_objects ) -> LSIZE		956547						
ANR	956961	Symbol	attributes		956547						
ANR	956962	Symbol	IMAPG		956547						
ANR	956963	Symbol	IMAPG ( imap_folder_objects ) -> delimiter		956547						
ANR	956964	Symbol	cur -> LSIZE		956547						
ANR	956965	Symbol	ocur -> delimiter		956547						
ANR	956966	Symbol	cur -> next		956547						
ANR	956967	Symbol	ocur -> LSIZE		956547						
ANR	956968	Function	mm_lsub	4975:0:144108:145736							
ANR	956969	FunctionDef	"mm_lsub (MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes)"		956968	0					
ANR	956970	CompoundStatement		4976:0:144206:145736	956968	0					
ANR	956971	IdentifierDeclStatement	STRINGLIST * cur = NIL ;	4977:1:144209:144228	956968	0	True				
ANR	956972	IdentifierDecl	* cur = NIL		956968	0					
ANR	956973	IdentifierDeclType	STRINGLIST *		956968	0					
ANR	956974	Identifier	cur		956968	1					
ANR	956975	AssignmentExpression	* cur = NIL		956968	2		=			
ANR	956976	Identifier	NIL		956968	0					
ANR	956977	Identifier	NIL		956968	1					
ANR	956978	IdentifierDeclStatement	FOBJECTLIST * ocur = NIL ;	4978:1:144231:144252	956968	1	True				
ANR	956979	IdentifierDecl	* ocur = NIL		956968	0					
ANR	956980	IdentifierDeclType	FOBJECTLIST *		956968	0					
ANR	956981	Identifier	ocur		956968	1					
ANR	956982	AssignmentExpression	* ocur = NIL		956968	2		=			
ANR	956983	Identifier	NIL		956968	0					
ANR	956984	Identifier	NIL		956968	1					
ANR	956985	IfStatement	if ( IMAPG ( folderlist_style ) == FLIST_OBJECT )		956968	2					
ANR	956986	Condition	IMAPG ( folderlist_style ) == FLIST_OBJECT	4980:5:144260:144298	956968	0	True				
ANR	956987	EqualityExpression	IMAPG ( folderlist_style ) == FLIST_OBJECT		956968	0		==			
ANR	956988	CallExpression	IMAPG ( folderlist_style )		956968	0					
ANR	956989	Callee	IMAPG		956968	0					
ANR	956990	Identifier	IMAPG		956968	0					
ANR	956991	ArgumentList	folderlist_style		956968	1					
ANR	956992	Argument	folderlist_style		956968	0					
ANR	956993	Identifier	folderlist_style		956968	0					
ANR	956994	Identifier	FLIST_OBJECT		956968	1					
ANR	956995	CompoundStatement		5:46:94:94	956968	1					
ANR	956996	IfStatement	if ( IMAPG ( imap_sfolder_objects ) == NIL )		956968	0					
ANR	956997	Condition	IMAPG ( imap_sfolder_objects ) == NIL	4983:6:144364:144397	956968	0	True				
ANR	956998	EqualityExpression	IMAPG ( imap_sfolder_objects ) == NIL		956968	0		==			
ANR	956999	CallExpression	IMAPG ( imap_sfolder_objects )		956968	0					
ANR	957000	Callee	IMAPG		956968	0					
ANR	957001	Identifier	IMAPG		956968	0					
ANR	957002	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957003	Argument	imap_sfolder_objects		956968	0					
ANR	957004	Identifier	imap_sfolder_objects		956968	0					
ANR	957005	Identifier	NIL		956968	1					
ANR	957006	CompoundStatement		8:42:193:193	956968	1					
ANR	957007	ExpressionStatement	IMAPG ( imap_sfolder_objects ) = mail_newfolderobjectlist ( )	4984:3:144405:144461	956968	0	True				
ANR	957008	AssignmentExpression	IMAPG ( imap_sfolder_objects ) = mail_newfolderobjectlist ( )		956968	0		=			
ANR	957009	CallExpression	IMAPG ( imap_sfolder_objects )		956968	0					
ANR	957010	Callee	IMAPG		956968	0					
ANR	957011	Identifier	IMAPG		956968	0					
ANR	957012	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957013	Argument	imap_sfolder_objects		956968	0					
ANR	957014	Identifier	imap_sfolder_objects		956968	0					
ANR	957015	CallExpression	mail_newfolderobjectlist ( )		956968	1					
ANR	957016	Callee	mail_newfolderobjectlist		956968	0					
ANR	957017	Identifier	mail_newfolderobjectlist		956968	0					
ANR	957018	ArgumentList			956968	1					
ANR	957019	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_sfolder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	4985:3:144466:144588	956968	1	True				
ANR	957020	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_sfolder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	0		=			
ANR	957021	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> LSIZE		956968	0					
ANR	957022	CallExpression	IMAPG ( imap_sfolder_objects )		956968	0					
ANR	957023	Callee	IMAPG		956968	0					
ANR	957024	Identifier	IMAPG		956968	0					
ANR	957025	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957026	Argument	imap_sfolder_objects		956968	0					
ANR	957027	Identifier	imap_sfolder_objects		956968	0					
ANR	957028	Identifier	LSIZE		956968	1					
ANR	957029	CallExpression	strlen ( ( char * ) ( IMAPG ( imap_sfolder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	1					
ANR	957030	Callee	strlen		956968	0					
ANR	957031	Identifier	strlen		956968	0					
ANR	957032	ArgumentList	( char * ) ( IMAPG ( imap_sfolder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	1					
ANR	957033	Argument	( char * ) ( IMAPG ( imap_sfolder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957034	CastExpression	( char * ) ( IMAPG ( imap_sfolder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957035	CastTarget	char *		956968	0					
ANR	957036	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956968	1		=			
ANR	957037	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> LTEXT		956968	0					
ANR	957038	CallExpression	IMAPG ( imap_sfolder_objects )		956968	0					
ANR	957039	Callee	IMAPG		956968	0					
ANR	957040	Identifier	IMAPG		956968	0					
ANR	957041	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957042	Argument	imap_sfolder_objects		956968	0					
ANR	957043	Identifier	imap_sfolder_objects		956968	0					
ANR	957044	Identifier	LTEXT		956968	1					
ANR	957045	CastExpression	( unsigned char * ) cpystr ( mailbox )		956968	1					
ANR	957046	CastTarget	unsigned char *		956968	0					
ANR	957047	CallExpression	cpystr ( mailbox )		956968	1					
ANR	957048	Callee	cpystr		956968	0					
ANR	957049	Identifier	cpystr		956968	0					
ANR	957050	ArgumentList	mailbox		956968	1					
ANR	957051	Argument	mailbox		956968	0					
ANR	957052	Identifier	mailbox		956968	0					
ANR	957053	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> delimiter = delimiter	4986:3:144593:144643	956968	2	True				
ANR	957054	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> delimiter = delimiter		956968	0		=			
ANR	957055	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> delimiter		956968	0					
ANR	957056	CallExpression	IMAPG ( imap_sfolder_objects )		956968	0					
ANR	957057	Callee	IMAPG		956968	0					
ANR	957058	Identifier	IMAPG		956968	0					
ANR	957059	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957060	Argument	imap_sfolder_objects		956968	0					
ANR	957061	Identifier	imap_sfolder_objects		956968	0					
ANR	957062	Identifier	delimiter		956968	1					
ANR	957063	Identifier	delimiter		956968	1					
ANR	957064	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> attributes = attributes	4987:3:144648:144700	956968	3	True				
ANR	957065	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> attributes = attributes		956968	0		=			
ANR	957066	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> attributes		956968	0					
ANR	957067	CallExpression	IMAPG ( imap_sfolder_objects )		956968	0					
ANR	957068	Callee	IMAPG		956968	0					
ANR	957069	Identifier	IMAPG		956968	0					
ANR	957070	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957071	Argument	imap_sfolder_objects		956968	0					
ANR	957072	Identifier	imap_sfolder_objects		956968	0					
ANR	957073	Identifier	attributes		956968	1					
ANR	957074	Identifier	attributes		956968	1					
ANR	957075	ExpressionStatement	IMAPG ( imap_sfolder_objects ) -> next = NIL	4988:3:144705:144744	956968	4	True				
ANR	957076	AssignmentExpression	IMAPG ( imap_sfolder_objects ) -> next = NIL		956968	0		=			
ANR	957077	PtrMemberAccess	IMAPG ( imap_sfolder_objects ) -> next		956968	0					
ANR	957078	CallExpression	IMAPG ( imap_sfolder_objects )		956968	0					
ANR	957079	Callee	IMAPG		956968	0					
ANR	957080	Identifier	IMAPG		956968	0					
ANR	957081	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957082	Argument	imap_sfolder_objects		956968	0					
ANR	957083	Identifier	imap_sfolder_objects		956968	0					
ANR	957084	Identifier	next		956968	1					
ANR	957085	Identifier	NIL		956968	1					
ANR	957086	ExpressionStatement	IMAPG ( imap_sfolder_objects_tail ) = IMAPG ( imap_sfolder_objects )	4989:3:144749:144811	956968	5	True				
ANR	957087	AssignmentExpression	IMAPG ( imap_sfolder_objects_tail ) = IMAPG ( imap_sfolder_objects )		956968	0		=			
ANR	957088	CallExpression	IMAPG ( imap_sfolder_objects_tail )		956968	0					
ANR	957089	Callee	IMAPG		956968	0					
ANR	957090	Identifier	IMAPG		956968	0					
ANR	957091	ArgumentList	imap_sfolder_objects_tail		956968	1					
ANR	957092	Argument	imap_sfolder_objects_tail		956968	0					
ANR	957093	Identifier	imap_sfolder_objects_tail		956968	0					
ANR	957094	CallExpression	IMAPG ( imap_sfolder_objects )		956968	1					
ANR	957095	Callee	IMAPG		956968	0					
ANR	957096	Identifier	IMAPG		956968	0					
ANR	957097	ArgumentList	imap_sfolder_objects		956968	1					
ANR	957098	Argument	imap_sfolder_objects		956968	0					
ANR	957099	Identifier	imap_sfolder_objects		956968	0					
ANR	957100	ElseStatement	else		956968	0					
ANR	957101	CompoundStatement		15:9:615:615	956968	0					
ANR	957102	ExpressionStatement	ocur = IMAPG ( imap_sfolder_objects_tail )	4991:3:144827:144864	956968	0	True				
ANR	957103	AssignmentExpression	ocur = IMAPG ( imap_sfolder_objects_tail )		956968	0		=			
ANR	957104	Identifier	ocur		956968	0					
ANR	957105	CallExpression	IMAPG ( imap_sfolder_objects_tail )		956968	1					
ANR	957106	Callee	IMAPG		956968	0					
ANR	957107	Identifier	IMAPG		956968	0					
ANR	957108	ArgumentList	imap_sfolder_objects_tail		956968	1					
ANR	957109	Argument	imap_sfolder_objects_tail		956968	0					
ANR	957110	Identifier	imap_sfolder_objects_tail		956968	0					
ANR	957111	ExpressionStatement	ocur -> next = mail_newfolderobjectlist ( )	4992:3:144869:144906	956968	1	True				
ANR	957112	AssignmentExpression	ocur -> next = mail_newfolderobjectlist ( )		956968	0		=			
ANR	957113	PtrMemberAccess	ocur -> next		956968	0					
ANR	957114	Identifier	ocur		956968	0					
ANR	957115	Identifier	next		956968	1					
ANR	957116	CallExpression	mail_newfolderobjectlist ( )		956968	1					
ANR	957117	Callee	mail_newfolderobjectlist		956968	0					
ANR	957118	Identifier	mail_newfolderobjectlist		956968	0					
ANR	957119	ArgumentList			956968	1					
ANR	957120	ExpressionStatement	ocur = ocur -> next	4993:3:144911:144926	956968	2	True				
ANR	957121	AssignmentExpression	ocur = ocur -> next		956968	0		=			
ANR	957122	Identifier	ocur		956968	0					
ANR	957123	PtrMemberAccess	ocur -> next		956968	1					
ANR	957124	Identifier	ocur		956968	0					
ANR	957125	Identifier	next		956968	1					
ANR	957126	ExpressionStatement	ocur -> LSIZE = strlen ( ( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	4994:3:144931:145005	956968	3	True				
ANR	957127	AssignmentExpression	ocur -> LSIZE = strlen ( ( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	0		=			
ANR	957128	PtrMemberAccess	ocur -> LSIZE		956968	0					
ANR	957129	Identifier	ocur		956968	0					
ANR	957130	Identifier	LSIZE		956968	1					
ANR	957131	CallExpression	strlen ( ( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	1					
ANR	957132	Callee	strlen		956968	0					
ANR	957133	Identifier	strlen		956968	0					
ANR	957134	ArgumentList	( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	1					
ANR	957135	Argument	( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957136	CastExpression	( char * ) ( ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957137	CastTarget	char *		956968	0					
ANR	957138	AssignmentExpression	ocur -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956968	1		=			
ANR	957139	PtrMemberAccess	ocur -> LTEXT		956968	0					
ANR	957140	Identifier	ocur		956968	0					
ANR	957141	Identifier	LTEXT		956968	1					
ANR	957142	CastExpression	( unsigned char * ) cpystr ( mailbox )		956968	1					
ANR	957143	CastTarget	unsigned char *		956968	0					
ANR	957144	CallExpression	cpystr ( mailbox )		956968	1					
ANR	957145	Callee	cpystr		956968	0					
ANR	957146	Identifier	cpystr		956968	0					
ANR	957147	ArgumentList	mailbox		956968	1					
ANR	957148	Argument	mailbox		956968	0					
ANR	957149	Identifier	mailbox		956968	0					
ANR	957150	ExpressionStatement	ocur -> delimiter = delimiter	4995:3:145010:145037	956968	4	True				
ANR	957151	AssignmentExpression	ocur -> delimiter = delimiter		956968	0		=			
ANR	957152	PtrMemberAccess	ocur -> delimiter		956968	0					
ANR	957153	Identifier	ocur		956968	0					
ANR	957154	Identifier	delimiter		956968	1					
ANR	957155	Identifier	delimiter		956968	1					
ANR	957156	ExpressionStatement	ocur -> attributes = attributes	4996:3:145042:145071	956968	5	True				
ANR	957157	AssignmentExpression	ocur -> attributes = attributes		956968	0		=			
ANR	957158	PtrMemberAccess	ocur -> attributes		956968	0					
ANR	957159	Identifier	ocur		956968	0					
ANR	957160	Identifier	attributes		956968	1					
ANR	957161	Identifier	attributes		956968	1					
ANR	957162	ExpressionStatement	ocur -> next = NIL	4997:3:145076:145092	956968	6	True				
ANR	957163	AssignmentExpression	ocur -> next = NIL		956968	0		=			
ANR	957164	PtrMemberAccess	ocur -> next		956968	0					
ANR	957165	Identifier	ocur		956968	0					
ANR	957166	Identifier	next		956968	1					
ANR	957167	Identifier	NIL		956968	1					
ANR	957168	ExpressionStatement	IMAPG ( imap_sfolder_objects_tail ) = ocur	4998:3:145097:145136	956968	7	True				
ANR	957169	AssignmentExpression	IMAPG ( imap_sfolder_objects_tail ) = ocur		956968	0		=			
ANR	957170	CallExpression	IMAPG ( imap_sfolder_objects_tail )		956968	0					
ANR	957171	Callee	IMAPG		956968	0					
ANR	957172	Identifier	IMAPG		956968	0					
ANR	957173	ArgumentList	imap_sfolder_objects_tail		956968	1					
ANR	957174	Argument	imap_sfolder_objects_tail		956968	0					
ANR	957175	Identifier	imap_sfolder_objects_tail		956968	0					
ANR	957176	Identifier	ocur		956968	1					
ANR	957177	ElseStatement	else		956968	0					
ANR	957178	CompoundStatement		25:8:943:943	956968	0					
ANR	957179	IfStatement	if ( IMAPG ( imap_sfolders ) == NIL )		956968	0					
ANR	957180	Condition	IMAPG ( imap_sfolders ) == NIL	5002:6:145219:145245	956968	0	True				
ANR	957181	EqualityExpression	IMAPG ( imap_sfolders ) == NIL		956968	0		==			
ANR	957182	CallExpression	IMAPG ( imap_sfolders )		956968	0					
ANR	957183	Callee	IMAPG		956968	0					
ANR	957184	Identifier	IMAPG		956968	0					
ANR	957185	ArgumentList	imap_sfolders		956968	1					
ANR	957186	Argument	imap_sfolders		956968	0					
ANR	957187	Identifier	imap_sfolders		956968	0					
ANR	957188	Identifier	NIL		956968	1					
ANR	957189	CompoundStatement		27:35:1041:1041	956968	1					
ANR	957190	ExpressionStatement	IMAPG ( imap_sfolders ) = mail_newstringlist ( )	5003:3:145253:145294	956968	0	True				
ANR	957191	AssignmentExpression	IMAPG ( imap_sfolders ) = mail_newstringlist ( )		956968	0		=			
ANR	957192	CallExpression	IMAPG ( imap_sfolders )		956968	0					
ANR	957193	Callee	IMAPG		956968	0					
ANR	957194	Identifier	IMAPG		956968	0					
ANR	957195	ArgumentList	imap_sfolders		956968	1					
ANR	957196	Argument	imap_sfolders		956968	0					
ANR	957197	Identifier	imap_sfolders		956968	0					
ANR	957198	CallExpression	mail_newstringlist ( )		956968	1					
ANR	957199	Callee	mail_newstringlist		956968	0					
ANR	957200	Identifier	mail_newstringlist		956968	0					
ANR	957201	ArgumentList			956968	1					
ANR	957202	ExpressionStatement	IMAPG ( imap_sfolders ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_sfolders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	5004:3:145299:145405	956968	1	True				
ANR	957203	AssignmentExpression	IMAPG ( imap_sfolders ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_sfolders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	0		=			
ANR	957204	PtrMemberAccess	IMAPG ( imap_sfolders ) -> LSIZE		956968	0					
ANR	957205	CallExpression	IMAPG ( imap_sfolders )		956968	0					
ANR	957206	Callee	IMAPG		956968	0					
ANR	957207	Identifier	IMAPG		956968	0					
ANR	957208	ArgumentList	imap_sfolders		956968	1					
ANR	957209	Argument	imap_sfolders		956968	0					
ANR	957210	Identifier	imap_sfolders		956968	0					
ANR	957211	Identifier	LSIZE		956968	1					
ANR	957212	CallExpression	strlen ( ( char * ) ( IMAPG ( imap_sfolders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	1					
ANR	957213	Callee	strlen		956968	0					
ANR	957214	Identifier	strlen		956968	0					
ANR	957215	ArgumentList	( char * ) ( IMAPG ( imap_sfolders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	1					
ANR	957216	Argument	( char * ) ( IMAPG ( imap_sfolders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957217	CastExpression	( char * ) ( IMAPG ( imap_sfolders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957218	CastTarget	char *		956968	0					
ANR	957219	AssignmentExpression	IMAPG ( imap_sfolders ) -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956968	1		=			
ANR	957220	PtrMemberAccess	IMAPG ( imap_sfolders ) -> LTEXT		956968	0					
ANR	957221	CallExpression	IMAPG ( imap_sfolders )		956968	0					
ANR	957222	Callee	IMAPG		956968	0					
ANR	957223	Identifier	IMAPG		956968	0					
ANR	957224	ArgumentList	imap_sfolders		956968	1					
ANR	957225	Argument	imap_sfolders		956968	0					
ANR	957226	Identifier	imap_sfolders		956968	0					
ANR	957227	Identifier	LTEXT		956968	1					
ANR	957228	CastExpression	( unsigned char * ) cpystr ( mailbox )		956968	1					
ANR	957229	CastTarget	unsigned char *		956968	0					
ANR	957230	CallExpression	cpystr ( mailbox )		956968	1					
ANR	957231	Callee	cpystr		956968	0					
ANR	957232	Identifier	cpystr		956968	0					
ANR	957233	ArgumentList	mailbox		956968	1					
ANR	957234	Argument	mailbox		956968	0					
ANR	957235	Identifier	mailbox		956968	0					
ANR	957236	ExpressionStatement	IMAPG ( imap_sfolders ) -> next = NIL	5005:3:145410:145440	956968	2	True				
ANR	957237	AssignmentExpression	IMAPG ( imap_sfolders ) -> next = NIL		956968	0		=			
ANR	957238	PtrMemberAccess	IMAPG ( imap_sfolders ) -> next		956968	0					
ANR	957239	CallExpression	IMAPG ( imap_sfolders )		956968	0					
ANR	957240	Callee	IMAPG		956968	0					
ANR	957241	Identifier	IMAPG		956968	0					
ANR	957242	ArgumentList	imap_sfolders		956968	1					
ANR	957243	Argument	imap_sfolders		956968	0					
ANR	957244	Identifier	imap_sfolders		956968	0					
ANR	957245	Identifier	next		956968	1					
ANR	957246	Identifier	NIL		956968	1					
ANR	957247	ExpressionStatement	IMAPG ( imap_sfolders_tail ) = IMAPG ( imap_sfolders )	5006:3:145445:145493	956968	3	True				
ANR	957248	AssignmentExpression	IMAPG ( imap_sfolders_tail ) = IMAPG ( imap_sfolders )		956968	0		=			
ANR	957249	CallExpression	IMAPG ( imap_sfolders_tail )		956968	0					
ANR	957250	Callee	IMAPG		956968	0					
ANR	957251	Identifier	IMAPG		956968	0					
ANR	957252	ArgumentList	imap_sfolders_tail		956968	1					
ANR	957253	Argument	imap_sfolders_tail		956968	0					
ANR	957254	Identifier	imap_sfolders_tail		956968	0					
ANR	957255	CallExpression	IMAPG ( imap_sfolders )		956968	1					
ANR	957256	Callee	IMAPG		956968	0					
ANR	957257	Identifier	IMAPG		956968	0					
ANR	957258	ArgumentList	imap_sfolders		956968	1					
ANR	957259	Argument	imap_sfolders		956968	0					
ANR	957260	Identifier	imap_sfolders		956968	0					
ANR	957261	ElseStatement	else		956968	0					
ANR	957262	CompoundStatement		32:9:1297:1297	956968	0					
ANR	957263	ExpressionStatement	cur = IMAPG ( imap_sfolders_tail )	5008:3:145509:145538	956968	0	True				
ANR	957264	AssignmentExpression	cur = IMAPG ( imap_sfolders_tail )		956968	0		=			
ANR	957265	Identifier	cur		956968	0					
ANR	957266	CallExpression	IMAPG ( imap_sfolders_tail )		956968	1					
ANR	957267	Callee	IMAPG		956968	0					
ANR	957268	Identifier	IMAPG		956968	0					
ANR	957269	ArgumentList	imap_sfolders_tail		956968	1					
ANR	957270	Argument	imap_sfolders_tail		956968	0					
ANR	957271	Identifier	imap_sfolders_tail		956968	0					
ANR	957272	ExpressionStatement	cur -> next = mail_newstringlist ( )	5009:3:145543:145574	956968	1	True				
ANR	957273	AssignmentExpression	cur -> next = mail_newstringlist ( )		956968	0		=			
ANR	957274	PtrMemberAccess	cur -> next		956968	0					
ANR	957275	Identifier	cur		956968	0					
ANR	957276	Identifier	next		956968	1					
ANR	957277	CallExpression	mail_newstringlist ( )		956968	1					
ANR	957278	Callee	mail_newstringlist		956968	0					
ANR	957279	Identifier	mail_newstringlist		956968	0					
ANR	957280	ArgumentList			956968	1					
ANR	957281	ExpressionStatement	cur = cur -> next	5010:3:145579:145592	956968	2	True				
ANR	957282	AssignmentExpression	cur = cur -> next		956968	0		=			
ANR	957283	Identifier	cur		956968	0					
ANR	957284	PtrMemberAccess	cur -> next		956968	1					
ANR	957285	Identifier	cur		956968	0					
ANR	957286	Identifier	next		956968	1					
ANR	957287	ExpressionStatement	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )	5011:3:145597:145671	956968	3	True				
ANR	957288	AssignmentExpression	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	0		=			
ANR	957289	PtrMemberAccess	cur -> LSIZE		956968	0					
ANR	957290	Identifier	cur		956968	0					
ANR	957291	Identifier	LSIZE		956968	1					
ANR	957292	CallExpression	strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) ) )		956968	1					
ANR	957293	Callee	strlen		956968	0					
ANR	957294	Identifier	strlen		956968	0					
ANR	957295	ArgumentList	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	1					
ANR	957296	Argument	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957297	CastExpression	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox ) )		956968	0					
ANR	957298	CastTarget	char *		956968	0					
ANR	957299	AssignmentExpression	cur -> LTEXT = ( unsigned char * ) cpystr ( mailbox )		956968	1		=			
ANR	957300	PtrMemberAccess	cur -> LTEXT		956968	0					
ANR	957301	Identifier	cur		956968	0					
ANR	957302	Identifier	LTEXT		956968	1					
ANR	957303	CastExpression	( unsigned char * ) cpystr ( mailbox )		956968	1					
ANR	957304	CastTarget	unsigned char *		956968	0					
ANR	957305	CallExpression	cpystr ( mailbox )		956968	1					
ANR	957306	Callee	cpystr		956968	0					
ANR	957307	Identifier	cpystr		956968	0					
ANR	957308	ArgumentList	mailbox		956968	1					
ANR	957309	Argument	mailbox		956968	0					
ANR	957310	Identifier	mailbox		956968	0					
ANR	957311	ExpressionStatement	cur -> next = NIL	5012:3:145676:145691	956968	4	True				
ANR	957312	AssignmentExpression	cur -> next = NIL		956968	0		=			
ANR	957313	PtrMemberAccess	cur -> next		956968	0					
ANR	957314	Identifier	cur		956968	0					
ANR	957315	Identifier	next		956968	1					
ANR	957316	Identifier	NIL		956968	1					
ANR	957317	ExpressionStatement	IMAPG ( imap_sfolders_tail ) = cur	5013:3:145696:145727	956968	5	True				
ANR	957318	AssignmentExpression	IMAPG ( imap_sfolders_tail ) = cur		956968	0		=			
ANR	957319	CallExpression	IMAPG ( imap_sfolders_tail )		956968	0					
ANR	957320	Callee	IMAPG		956968	0					
ANR	957321	Identifier	IMAPG		956968	0					
ANR	957322	ArgumentList	imap_sfolders_tail		956968	1					
ANR	957323	Argument	imap_sfolders_tail		956968	0					
ANR	957324	Identifier	imap_sfolders_tail		956968	0					
ANR	957325	Identifier	cur		956968	1					
ANR	957326	ReturnType	PHP_IMAP_EXPORT void		956968	1					
ANR	957327	Identifier	mm_lsub		956968	2					
ANR	957328	ParameterList	"MAILSTREAM * stream , DTYPE delimiter , char * mailbox , long attributes"		956968	3					
ANR	957329	Parameter	MAILSTREAM * stream	4975:29:144137:144154	956968	0	True				
ANR	957330	ParameterType	MAILSTREAM *		956968	0					
ANR	957331	Identifier	stream		956968	1					
ANR	957332	Parameter	DTYPE delimiter	4975:49:144157:144171	956968	1	True				
ANR	957333	ParameterType	DTYPE		956968	0					
ANR	957334	Identifier	delimiter		956968	1					
ANR	957335	Parameter	char * mailbox	4975:66:144174:144186	956968	2	True				
ANR	957336	ParameterType	char *		956968	0					
ANR	957337	Identifier	mailbox		956968	1					
ANR	957338	Parameter	long attributes	4975:81:144189:144203	956968	3	True				
ANR	957339	ParameterType	long		956968	0					
ANR	957340	Identifier	attributes		956968	1					
ANR	957341	CFGEntryNode	ENTRY		956968		True				
ANR	957342	CFGExitNode	EXIT		956968		True				
ANR	957343	Symbol	cur		956968						
ANR	957344	Symbol	ocur		956968						
ANR	957345	Symbol	FLIST_OBJECT		956968						
ANR	957346	Symbol	* ocur		956968						
ANR	957347	Symbol	IMAPG ( imap_sfolders ) -> LSIZE		956968						
ANR	957348	Symbol	imap_sfolder_objects		956968						
ANR	957349	Symbol	IMAPG ( imap_sfolders ) -> next		956968						
ANR	957350	Symbol	ocur -> LTEXT		956968						
ANR	957351	Symbol	mail_newfolderobjectlist		956968						
ANR	957352	Symbol	IMAPG ( imap_sfolder_objects ) -> LSIZE		956968						
ANR	957353	Symbol	strlen		956968						
ANR	957354	Symbol	stream		956968						
ANR	957355	Symbol	* cur		956968						
ANR	957356	Symbol	delimiter		956968						
ANR	957357	Symbol	* IMAPG		956968						
ANR	957358	Symbol	cpystr		956968						
ANR	957359	Symbol	IMAPG ( imap_sfolders ) -> LTEXT		956968						
ANR	957360	Symbol	imap_sfolders_tail		956968						
ANR	957361	Symbol	IMAPG ( imap_sfolder_objects ) -> attributes		956968						
ANR	957362	Symbol	mail_newstringlist		956968						
ANR	957363	Symbol	folderlist_style		956968						
ANR	957364	Symbol	imap_sfolders		956968						
ANR	957365	Symbol	IMAPG ( imap_sfolder_objects ) -> delimiter		956968						
ANR	957366	Symbol	cur -> LTEXT		956968						
ANR	957367	Symbol	ocur -> attributes		956968						
ANR	957368	Symbol	IMAPG ( imap_sfolder_objects ) -> LTEXT		956968						
ANR	957369	Symbol	imap_sfolder_objects_tail		956968						
ANR	957370	Symbol	NIL		956968						
ANR	957371	Symbol	ocur -> next		956968						
ANR	957372	Symbol	mailbox		956968						
ANR	957373	Symbol	attributes		956968						
ANR	957374	Symbol	IMAPG ( imap_sfolder_objects ) -> next		956968						
ANR	957375	Symbol	IMAPG		956968						
ANR	957376	Symbol	cur -> LSIZE		956968						
ANR	957377	Symbol	ocur -> delimiter		956968						
ANR	957378	Symbol	cur -> next		956968						
ANR	957379	Symbol	ocur -> LSIZE		956968						
ANR	957380	Function	mm_status	5018:0:145739:146298							
ANR	957381	FunctionDef	"mm_status (MAILSTREAM * stream , char * mailbox , MAILSTATUS * status)"		957380	0					
ANR	957382	CompoundStatement		5019:0:145825:146298	957380	0					
ANR	957383	ExpressionStatement	IMAPG ( status_flags ) = status -> flags	5021:1:145829:145862	957380	0	True				
ANR	957384	AssignmentExpression	IMAPG ( status_flags ) = status -> flags		957380	0		=			
ANR	957385	CallExpression	IMAPG ( status_flags )		957380	0					
ANR	957386	Callee	IMAPG		957380	0					
ANR	957387	Identifier	IMAPG		957380	0					
ANR	957388	ArgumentList	status_flags		957380	1					
ANR	957389	Argument	status_flags		957380	0					
ANR	957390	Identifier	status_flags		957380	0					
ANR	957391	PtrMemberAccess	status -> flags		957380	1					
ANR	957392	Identifier	status		957380	0					
ANR	957393	Identifier	flags		957380	1					
ANR	957394	IfStatement	if ( IMAPG ( status_flags ) & SA_MESSAGES )		957380	1					
ANR	957395	Condition	IMAPG ( status_flags ) & SA_MESSAGES	5022:5:145869:145901	957380	0	True				
ANR	957396	BitAndExpression	IMAPG ( status_flags ) & SA_MESSAGES		957380	0		&			
ANR	957397	CallExpression	IMAPG ( status_flags )		957380	0					
ANR	957398	Callee	IMAPG		957380	0					
ANR	957399	Identifier	IMAPG		957380	0					
ANR	957400	ArgumentList	status_flags		957380	1					
ANR	957401	Argument	status_flags		957380	0					
ANR	957402	Identifier	status_flags		957380	0					
ANR	957403	Identifier	SA_MESSAGES		957380	1					
ANR	957404	CompoundStatement		4:40:78:78	957380	1					
ANR	957405	ExpressionStatement	IMAPG ( status_messages ) = status -> messages	5023:2:145908:145947	957380	0	True				
ANR	957406	AssignmentExpression	IMAPG ( status_messages ) = status -> messages		957380	0		=			
ANR	957407	CallExpression	IMAPG ( status_messages )		957380	0					
ANR	957408	Callee	IMAPG		957380	0					
ANR	957409	Identifier	IMAPG		957380	0					
ANR	957410	ArgumentList	status_messages		957380	1					
ANR	957411	Argument	status_messages		957380	0					
ANR	957412	Identifier	status_messages		957380	0					
ANR	957413	PtrMemberAccess	status -> messages		957380	1					
ANR	957414	Identifier	status		957380	0					
ANR	957415	Identifier	messages		957380	1					
ANR	957416	IfStatement	if ( IMAPG ( status_flags ) & SA_RECENT )		957380	2					
ANR	957417	Condition	IMAPG ( status_flags ) & SA_RECENT	5025:5:145957:145987	957380	0	True				
ANR	957418	BitAndExpression	IMAPG ( status_flags ) & SA_RECENT		957380	0		&			
ANR	957419	CallExpression	IMAPG ( status_flags )		957380	0					
ANR	957420	Callee	IMAPG		957380	0					
ANR	957421	Identifier	IMAPG		957380	0					
ANR	957422	ArgumentList	status_flags		957380	1					
ANR	957423	Argument	status_flags		957380	0					
ANR	957424	Identifier	status_flags		957380	0					
ANR	957425	Identifier	SA_RECENT		957380	1					
ANR	957426	CompoundStatement		7:38:164:164	957380	1					
ANR	957427	ExpressionStatement	IMAPG ( status_recent ) = status -> recent	5026:2:145994:146029	957380	0	True				
ANR	957428	AssignmentExpression	IMAPG ( status_recent ) = status -> recent		957380	0		=			
ANR	957429	CallExpression	IMAPG ( status_recent )		957380	0					
ANR	957430	Callee	IMAPG		957380	0					
ANR	957431	Identifier	IMAPG		957380	0					
ANR	957432	ArgumentList	status_recent		957380	1					
ANR	957433	Argument	status_recent		957380	0					
ANR	957434	Identifier	status_recent		957380	0					
ANR	957435	PtrMemberAccess	status -> recent		957380	1					
ANR	957436	Identifier	status		957380	0					
ANR	957437	Identifier	recent		957380	1					
ANR	957438	IfStatement	if ( IMAPG ( status_flags ) & SA_UNSEEN )		957380	3					
ANR	957439	Condition	IMAPG ( status_flags ) & SA_UNSEEN	5028:5:146039:146069	957380	0	True				
ANR	957440	BitAndExpression	IMAPG ( status_flags ) & SA_UNSEEN		957380	0		&			
ANR	957441	CallExpression	IMAPG ( status_flags )		957380	0					
ANR	957442	Callee	IMAPG		957380	0					
ANR	957443	Identifier	IMAPG		957380	0					
ANR	957444	ArgumentList	status_flags		957380	1					
ANR	957445	Argument	status_flags		957380	0					
ANR	957446	Identifier	status_flags		957380	0					
ANR	957447	Identifier	SA_UNSEEN		957380	1					
ANR	957448	CompoundStatement		10:38:246:246	957380	1					
ANR	957449	ExpressionStatement	IMAPG ( status_unseen ) = status -> unseen	5029:2:146076:146111	957380	0	True				
ANR	957450	AssignmentExpression	IMAPG ( status_unseen ) = status -> unseen		957380	0		=			
ANR	957451	CallExpression	IMAPG ( status_unseen )		957380	0					
ANR	957452	Callee	IMAPG		957380	0					
ANR	957453	Identifier	IMAPG		957380	0					
ANR	957454	ArgumentList	status_unseen		957380	1					
ANR	957455	Argument	status_unseen		957380	0					
ANR	957456	Identifier	status_unseen		957380	0					
ANR	957457	PtrMemberAccess	status -> unseen		957380	1					
ANR	957458	Identifier	status		957380	0					
ANR	957459	Identifier	unseen		957380	1					
ANR	957460	IfStatement	if ( IMAPG ( status_flags ) & SA_UIDNEXT )		957380	4					
ANR	957461	Condition	IMAPG ( status_flags ) & SA_UIDNEXT	5031:5:146121:146152	957380	0	True				
ANR	957462	BitAndExpression	IMAPG ( status_flags ) & SA_UIDNEXT		957380	0		&			
ANR	957463	CallExpression	IMAPG ( status_flags )		957380	0					
ANR	957464	Callee	IMAPG		957380	0					
ANR	957465	Identifier	IMAPG		957380	0					
ANR	957466	ArgumentList	status_flags		957380	1					
ANR	957467	Argument	status_flags		957380	0					
ANR	957468	Identifier	status_flags		957380	0					
ANR	957469	Identifier	SA_UIDNEXT		957380	1					
ANR	957470	CompoundStatement		13:39:329:329	957380	1					
ANR	957471	ExpressionStatement	IMAPG ( status_uidnext ) = status -> uidnext	5032:2:146159:146196	957380	0	True				
ANR	957472	AssignmentExpression	IMAPG ( status_uidnext ) = status -> uidnext		957380	0		=			
ANR	957473	CallExpression	IMAPG ( status_uidnext )		957380	0					
ANR	957474	Callee	IMAPG		957380	0					
ANR	957475	Identifier	IMAPG		957380	0					
ANR	957476	ArgumentList	status_uidnext		957380	1					
ANR	957477	Argument	status_uidnext		957380	0					
ANR	957478	Identifier	status_uidnext		957380	0					
ANR	957479	PtrMemberAccess	status -> uidnext		957380	1					
ANR	957480	Identifier	status		957380	0					
ANR	957481	Identifier	uidnext		957380	1					
ANR	957482	IfStatement	if ( IMAPG ( status_flags ) & SA_UIDVALIDITY )		957380	5					
ANR	957483	Condition	IMAPG ( status_flags ) & SA_UIDVALIDITY	5034:5:146206:146241	957380	0	True				
ANR	957484	BitAndExpression	IMAPG ( status_flags ) & SA_UIDVALIDITY		957380	0		&			
ANR	957485	CallExpression	IMAPG ( status_flags )		957380	0					
ANR	957486	Callee	IMAPG		957380	0					
ANR	957487	Identifier	IMAPG		957380	0					
ANR	957488	ArgumentList	status_flags		957380	1					
ANR	957489	Argument	status_flags		957380	0					
ANR	957490	Identifier	status_flags		957380	0					
ANR	957491	Identifier	SA_UIDVALIDITY		957380	1					
ANR	957492	CompoundStatement		16:43:418:418	957380	1					
ANR	957493	ExpressionStatement	IMAPG ( status_uidvalidity ) = status -> uidvalidity	5035:2:146248:146293	957380	0	True				
ANR	957494	AssignmentExpression	IMAPG ( status_uidvalidity ) = status -> uidvalidity		957380	0		=			
ANR	957495	CallExpression	IMAPG ( status_uidvalidity )		957380	0					
ANR	957496	Callee	IMAPG		957380	0					
ANR	957497	Identifier	IMAPG		957380	0					
ANR	957498	ArgumentList	status_uidvalidity		957380	1					
ANR	957499	Argument	status_uidvalidity		957380	0					
ANR	957500	Identifier	status_uidvalidity		957380	0					
ANR	957501	PtrMemberAccess	status -> uidvalidity		957380	1					
ANR	957502	Identifier	status		957380	0					
ANR	957503	Identifier	uidvalidity		957380	1					
ANR	957504	ReturnType	PHP_IMAP_EXPORT void		957380	1					
ANR	957505	Identifier	mm_status		957380	2					
ANR	957506	ParameterList	"MAILSTREAM * stream , char * mailbox , MAILSTATUS * status"		957380	3					
ANR	957507	Parameter	MAILSTREAM * stream	5018:31:145770:145787	957380	0	True				
ANR	957508	ParameterType	MAILSTREAM *		957380	0					
ANR	957509	Identifier	stream		957380	1					
ANR	957510	Parameter	char * mailbox	5018:51:145790:145802	957380	1	True				
ANR	957511	ParameterType	char *		957380	0					
ANR	957512	Identifier	mailbox		957380	1					
ANR	957513	Parameter	MAILSTATUS * status	5018:66:145805:145822	957380	2	True				
ANR	957514	ParameterType	MAILSTATUS *		957380	0					
ANR	957515	Identifier	status		957380	1					
ANR	957516	CFGEntryNode	ENTRY		957380		True				
ANR	957517	CFGExitNode	EXIT		957380		True				
ANR	957518	Symbol	status -> uidvalidity		957380						
ANR	957519	Symbol	status_recent		957380						
ANR	957520	Symbol	SA_UIDVALIDITY		957380						
ANR	957521	Symbol	status -> recent		957380						
ANR	957522	Symbol	SA_RECENT		957380						
ANR	957523	Symbol	status -> uidnext		957380						
ANR	957524	Symbol	status_messages		957380						
ANR	957525	Symbol	status -> unseen		957380						
ANR	957526	Symbol	status -> flags		957380						
ANR	957527	Symbol	* status		957380						
ANR	957528	Symbol	SA_UNSEEN		957380						
ANR	957529	Symbol	status -> messages		957380						
ANR	957530	Symbol	mailbox		957380						
ANR	957531	Symbol	status_unseen		957380						
ANR	957532	Symbol	status_uidvalidity		957380						
ANR	957533	Symbol	stream		957380						
ANR	957534	Symbol	SA_MESSAGES		957380						
ANR	957535	Symbol	SA_UIDNEXT		957380						
ANR	957536	Symbol	status_flags		957380						
ANR	957537	Symbol	IMAPG		957380						
ANR	957538	Symbol	status_uidnext		957380						
ANR	957539	Symbol	status		957380						
ANR	957540	Function	mm_log	5039:0:146301:147068							
ANR	957541	FunctionDef	"mm_log (char * str , long errflg)"		957540	0					
ANR	957542	CompoundStatement		5040:0:146353:147068	957540	0					
ANR	957543	IdentifierDeclStatement	ERRORLIST * cur = NIL ;	5041:1:146356:146376	957540	0	True				
ANR	957544	IdentifierDecl	* cur = NIL		957540	0					
ANR	957545	IdentifierDeclType	ERRORLIST *		957540	0					
ANR	957546	Identifier	cur		957540	1					
ANR	957547	AssignmentExpression	* cur = NIL		957540	2		=			
ANR	957548	Identifier	NIL		957540	0					
ANR	957549	Identifier	NIL		957540	1					
ANR	957550	IfStatement	if ( errflg != NIL )		957540	1					
ANR	957551	Condition	errflg != NIL	5044:5:146403:146415	957540	0	True				
ANR	957552	EqualityExpression	errflg != NIL		957540	0		!=			
ANR	957553	Identifier	errflg		957540	0					
ANR	957554	Identifier	NIL		957540	1					
ANR	957555	CompoundStatement		5:20:64:64	957540	1					
ANR	957556	IfStatement	if ( IMAPG ( imap_errorstack ) == NIL )		957540	0					
ANR	957557	Condition	IMAPG ( imap_errorstack ) == NIL	5045:6:146507:146535	957540	0	True				
ANR	957558	EqualityExpression	IMAPG ( imap_errorstack ) == NIL		957540	0		==			
ANR	957559	CallExpression	IMAPG ( imap_errorstack )		957540	0					
ANR	957560	Callee	IMAPG		957540	0					
ANR	957561	Identifier	IMAPG		957540	0					
ANR	957562	ArgumentList	imap_errorstack		957540	1					
ANR	957563	Argument	imap_errorstack		957540	0					
ANR	957564	Identifier	imap_errorstack		957540	0					
ANR	957565	Identifier	NIL		957540	1					
ANR	957566	CompoundStatement		6:37:184:184	957540	1					
ANR	957567	ExpressionStatement	IMAPG ( imap_errorstack ) = mail_newerrorlist ( )	5046:3:146543:146587	957540	0	True				
ANR	957568	AssignmentExpression	IMAPG ( imap_errorstack ) = mail_newerrorlist ( )		957540	0		=			
ANR	957569	CallExpression	IMAPG ( imap_errorstack )		957540	0					
ANR	957570	Callee	IMAPG		957540	0					
ANR	957571	Identifier	IMAPG		957540	0					
ANR	957572	ArgumentList	imap_errorstack		957540	1					
ANR	957573	Argument	imap_errorstack		957540	0					
ANR	957574	Identifier	imap_errorstack		957540	0					
ANR	957575	CallExpression	mail_newerrorlist ( )		957540	1					
ANR	957576	Callee	mail_newerrorlist		957540	0					
ANR	957577	Identifier	mail_newerrorlist		957540	0					
ANR	957578	ArgumentList			957540	1					
ANR	957579	ExpressionStatement	IMAPG ( imap_errorstack ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_errorstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )	5047:3:146592:146700	957540	1	True				
ANR	957580	AssignmentExpression	IMAPG ( imap_errorstack ) -> LSIZE = strlen ( ( char * ) ( IMAPG ( imap_errorstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		957540	0		=			
ANR	957581	PtrMemberAccess	IMAPG ( imap_errorstack ) -> LSIZE		957540	0					
ANR	957582	CallExpression	IMAPG ( imap_errorstack )		957540	0					
ANR	957583	Callee	IMAPG		957540	0					
ANR	957584	Identifier	IMAPG		957540	0					
ANR	957585	ArgumentList	imap_errorstack		957540	1					
ANR	957586	Argument	imap_errorstack		957540	0					
ANR	957587	Identifier	imap_errorstack		957540	0					
ANR	957588	Identifier	LSIZE		957540	1					
ANR	957589	CallExpression	strlen ( ( char * ) ( IMAPG ( imap_errorstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		957540	1					
ANR	957590	Callee	strlen		957540	0					
ANR	957591	Identifier	strlen		957540	0					
ANR	957592	ArgumentList	( char * ) ( IMAPG ( imap_errorstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) )		957540	1					
ANR	957593	Argument	( char * ) ( IMAPG ( imap_errorstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) )		957540	0					
ANR	957594	CastExpression	( char * ) ( IMAPG ( imap_errorstack ) -> LTEXT = ( unsigned char * ) cpystr ( str ) )		957540	0					
ANR	957595	CastTarget	char *		957540	0					
ANR	957596	AssignmentExpression	IMAPG ( imap_errorstack ) -> LTEXT = ( unsigned char * ) cpystr ( str )		957540	1		=			
ANR	957597	PtrMemberAccess	IMAPG ( imap_errorstack ) -> LTEXT		957540	0					
ANR	957598	CallExpression	IMAPG ( imap_errorstack )		957540	0					
ANR	957599	Callee	IMAPG		957540	0					
ANR	957600	Identifier	IMAPG		957540	0					
ANR	957601	ArgumentList	imap_errorstack		957540	1					
ANR	957602	Argument	imap_errorstack		957540	0					
ANR	957603	Identifier	imap_errorstack		957540	0					
ANR	957604	Identifier	LTEXT		957540	1					
ANR	957605	CastExpression	( unsigned char * ) cpystr ( str )		957540	1					
ANR	957606	CastTarget	unsigned char *		957540	0					
ANR	957607	CallExpression	cpystr ( str )		957540	1					
ANR	957608	Callee	cpystr		957540	0					
ANR	957609	Identifier	cpystr		957540	0					
ANR	957610	ArgumentList	str		957540	1					
ANR	957611	Argument	str		957540	0					
ANR	957612	Identifier	str		957540	0					
ANR	957613	ExpressionStatement	IMAPG ( imap_errorstack ) -> errflg = errflg	5048:3:146705:146744	957540	2	True				
ANR	957614	AssignmentExpression	IMAPG ( imap_errorstack ) -> errflg = errflg		957540	0		=			
ANR	957615	PtrMemberAccess	IMAPG ( imap_errorstack ) -> errflg		957540	0					
ANR	957616	CallExpression	IMAPG ( imap_errorstack )		957540	0					
ANR	957617	Callee	IMAPG		957540	0					
ANR	957618	Identifier	IMAPG		957540	0					
ANR	957619	ArgumentList	imap_errorstack		957540	1					
ANR	957620	Argument	imap_errorstack		957540	0					
ANR	957621	Identifier	imap_errorstack		957540	0					
ANR	957622	Identifier	errflg		957540	1					
ANR	957623	Identifier	errflg		957540	1					
ANR	957624	ExpressionStatement	IMAPG ( imap_errorstack ) -> next = NIL	5049:3:146749:146783	957540	3	True				
ANR	957625	AssignmentExpression	IMAPG ( imap_errorstack ) -> next = NIL		957540	0		=			
ANR	957626	PtrMemberAccess	IMAPG ( imap_errorstack ) -> next		957540	0					
ANR	957627	CallExpression	IMAPG ( imap_errorstack )		957540	0					
ANR	957628	Callee	IMAPG		957540	0					
ANR	957629	Identifier	IMAPG		957540	0					
ANR	957630	ArgumentList	imap_errorstack		957540	1					
ANR	957631	Argument	imap_errorstack		957540	0					
ANR	957632	Identifier	imap_errorstack		957540	0					
ANR	957633	Identifier	next		957540	1					
ANR	957634	Identifier	NIL		957540	1					
ANR	957635	ElseStatement	else		957540	0					
ANR	957636	CompoundStatement		11:9:440:440	957540	0					
ANR	957637	ExpressionStatement	cur = IMAPG ( imap_errorstack )	5051:3:146799:146827	957540	0	True				
ANR	957638	AssignmentExpression	cur = IMAPG ( imap_errorstack )		957540	0		=			
ANR	957639	Identifier	cur		957540	0					
ANR	957640	CallExpression	IMAPG ( imap_errorstack )		957540	1					
ANR	957641	Callee	IMAPG		957540	0					
ANR	957642	Identifier	IMAPG		957540	0					
ANR	957643	ArgumentList	imap_errorstack		957540	1					
ANR	957644	Argument	imap_errorstack		957540	0					
ANR	957645	Identifier	imap_errorstack		957540	0					
ANR	957646	WhileStatement	while ( cur -> next != NIL )		957540	1					
ANR	957647	Condition	cur -> next != NIL	5052:10:146839:146854	957540	0	True				
ANR	957648	EqualityExpression	cur -> next != NIL		957540	0		!=			
ANR	957649	PtrMemberAccess	cur -> next		957540	0					
ANR	957650	Identifier	cur		957540	0					
ANR	957651	Identifier	next		957540	1					
ANR	957652	Identifier	NIL		957540	1					
ANR	957653	CompoundStatement		13:28:503:503	957540	1					
ANR	957654	ExpressionStatement	cur = cur -> next	5053:4:146863:146878	957540	0	True				
ANR	957655	AssignmentExpression	cur = cur -> next		957540	0		=			
ANR	957656	Identifier	cur		957540	0					
ANR	957657	PtrMemberAccess	cur -> next		957540	1					
ANR	957658	Identifier	cur		957540	0					
ANR	957659	Identifier	next		957540	1					
ANR	957660	ExpressionStatement	cur -> next = mail_newerrorlist ( )	5055:3:146888:146919	957540	2	True				
ANR	957661	AssignmentExpression	cur -> next = mail_newerrorlist ( )		957540	0		=			
ANR	957662	PtrMemberAccess	cur -> next		957540	0					
ANR	957663	Identifier	cur		957540	0					
ANR	957664	Identifier	next		957540	1					
ANR	957665	CallExpression	mail_newerrorlist ( )		957540	1					
ANR	957666	Callee	mail_newerrorlist		957540	0					
ANR	957667	Identifier	mail_newerrorlist		957540	0					
ANR	957668	ArgumentList			957540	1					
ANR	957669	ExpressionStatement	cur = cur -> next	5056:3:146924:146939	957540	3	True				
ANR	957670	AssignmentExpression	cur = cur -> next		957540	0		=			
ANR	957671	Identifier	cur		957540	0					
ANR	957672	PtrMemberAccess	cur -> next		957540	1					
ANR	957673	Identifier	cur		957540	0					
ANR	957674	Identifier	next		957540	1					
ANR	957675	ExpressionStatement	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )	5057:3:146944:147014	957540	4	True				
ANR	957676	AssignmentExpression	cur -> LSIZE = strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		957540	0		=			
ANR	957677	PtrMemberAccess	cur -> LSIZE		957540	0					
ANR	957678	Identifier	cur		957540	0					
ANR	957679	Identifier	LSIZE		957540	1					
ANR	957680	CallExpression	strlen ( ( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) ) )		957540	1					
ANR	957681	Callee	strlen		957540	0					
ANR	957682	Identifier	strlen		957540	0					
ANR	957683	ArgumentList	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) )		957540	1					
ANR	957684	Argument	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) )		957540	0					
ANR	957685	CastExpression	( char * ) ( cur -> LTEXT = ( unsigned char * ) cpystr ( str ) )		957540	0					
ANR	957686	CastTarget	char *		957540	0					
ANR	957687	AssignmentExpression	cur -> LTEXT = ( unsigned char * ) cpystr ( str )		957540	1		=			
ANR	957688	PtrMemberAccess	cur -> LTEXT		957540	0					
ANR	957689	Identifier	cur		957540	0					
ANR	957690	Identifier	LTEXT		957540	1					
ANR	957691	CastExpression	( unsigned char * ) cpystr ( str )		957540	1					
ANR	957692	CastTarget	unsigned char *		957540	0					
ANR	957693	CallExpression	cpystr ( str )		957540	1					
ANR	957694	Callee	cpystr		957540	0					
ANR	957695	Identifier	cpystr		957540	0					
ANR	957696	ArgumentList	str		957540	1					
ANR	957697	Argument	str		957540	0					
ANR	957698	Identifier	str		957540	0					
ANR	957699	ExpressionStatement	cur -> errflg = errflg	5058:3:147019:147039	957540	5	True				
ANR	957700	AssignmentExpression	cur -> errflg = errflg		957540	0		=			
ANR	957701	PtrMemberAccess	cur -> errflg		957540	0					
ANR	957702	Identifier	cur		957540	0					
ANR	957703	Identifier	errflg		957540	1					
ANR	957704	Identifier	errflg		957540	1					
ANR	957705	ExpressionStatement	cur -> next = NIL	5059:3:147044:147059	957540	6	True				
ANR	957706	AssignmentExpression	cur -> next = NIL		957540	0		=			
ANR	957707	PtrMemberAccess	cur -> next		957540	0					
ANR	957708	Identifier	cur		957540	0					
ANR	957709	Identifier	next		957540	1					
ANR	957710	Identifier	NIL		957540	1					
ANR	957711	ReturnType	PHP_IMAP_EXPORT void		957540	1					
ANR	957712	Identifier	mm_log		957540	2					
ANR	957713	ParameterList	"char * str , long errflg"		957540	3					
ANR	957714	Parameter	char * str	5039:28:146329:146337	957540	0	True				
ANR	957715	ParameterType	char *		957540	0					
ANR	957716	Identifier	str		957540	1					
ANR	957717	Parameter	long errflg	5039:39:146340:146350	957540	1	True				
ANR	957718	ParameterType	long		957540	0					
ANR	957719	Identifier	errflg		957540	1					
ANR	957720	CFGEntryNode	ENTRY		957540		True				
ANR	957721	CFGExitNode	EXIT		957540		True				
ANR	957722	Symbol	cur		957540						
ANR	957723	Symbol	mail_newerrorlist		957540						
ANR	957724	Symbol	imap_errorstack		957540						
ANR	957725	Symbol	cur -> errflg		957540						
ANR	957726	Symbol	errflg		957540						
ANR	957727	Symbol	cur -> LTEXT		957540						
ANR	957728	Symbol	IMAPG ( imap_errorstack ) -> errflg		957540						
ANR	957729	Symbol	IMAPG ( imap_errorstack ) -> LSIZE		957540						
ANR	957730	Symbol	str		957540						
ANR	957731	Symbol	NIL		957540						
ANR	957732	Symbol	strlen		957540						
ANR	957733	Symbol	* cur		957540						
ANR	957734	Symbol	* IMAPG		957540						
ANR	957735	Symbol	cpystr		957540						
ANR	957736	Symbol	IMAPG ( imap_errorstack ) -> LTEXT		957540						
ANR	957737	Symbol	IMAPG		957540						
ANR	957738	Symbol	IMAPG ( imap_errorstack ) -> next		957540						
ANR	957739	Symbol	cur -> LSIZE		957540						
ANR	957740	Symbol	cur -> next		957540						
ANR	957741	Function	mm_dlog	5064:0:147071:147270							
ANR	957742	FunctionDef	mm_dlog (char * str)		957741	0					
ANR	957743	CompoundStatement		5065:0:147111:147270	957741	0					
ANR	957744	ReturnType	PHP_IMAP_EXPORT void		957741	1					
ANR	957745	Identifier	mm_dlog		957741	2					
ANR	957746	ParameterList	char * str		957741	3					
ANR	957747	Parameter	char * str	5064:29:147100:147108	957741	0	True				
ANR	957748	ParameterType	char *		957741	0					
ANR	957749	Identifier	str		957741	1					
ANR	957750	CFGEntryNode	ENTRY		957741		True				
ANR	957751	CFGExitNode	EXIT		957741		True				
ANR	957752	Symbol	str		957741						
ANR	957753	Function	mm_login	5071:0:147273:147522							
ANR	957754	FunctionDef	"mm_login (NETMBX * mb , char * user , char * pwd , long trial)"		957753	0					
ANR	957755	CompoundStatement		5072:0:147350:147522	957753	0					
ANR	957756	IfStatement	if ( * mb -> user )		957753	0					
ANR	957757	Condition	* mb -> user	5074:5:147358:147366	957753	0	True				
ANR	957758	UnaryOperationExpression	* mb -> user		957753	0					
ANR	957759	UnaryOperator	*		957753	0					
ANR	957760	PtrMemberAccess	mb -> user		957753	1					
ANR	957761	Identifier	mb		957753	0					
ANR	957762	Identifier	user		957753	1					
ANR	957763	CompoundStatement		3:16:18:18	957753	1					
ANR	957764	ExpressionStatement	"strlcpy ( user , mb -> user , MAILTMPLEN )"	5075:2:147373:147409	957753	0	True				
ANR	957765	CallExpression	"strlcpy ( user , mb -> user , MAILTMPLEN )"		957753	0					
ANR	957766	Callee	strlcpy		957753	0					
ANR	957767	Identifier	strlcpy		957753	0					
ANR	957768	ArgumentList	user		957753	1					
ANR	957769	Argument	user		957753	0					
ANR	957770	Identifier	user		957753	0					
ANR	957771	Argument	mb -> user		957753	1					
ANR	957772	PtrMemberAccess	mb -> user		957753	0					
ANR	957773	Identifier	mb		957753	0					
ANR	957774	Identifier	user		957753	1					
ANR	957775	Argument	MAILTMPLEN		957753	2					
ANR	957776	Identifier	MAILTMPLEN		957753	0					
ANR	957777	ElseStatement	else		957753	0					
ANR	957778	CompoundStatement		5:8:68:68	957753	0					
ANR	957779	ExpressionStatement	"strlcpy ( user , IMAPG ( imap_user ) , MAILTMPLEN )"	5077:2:147423:147467	957753	0	True				
ANR	957780	CallExpression	"strlcpy ( user , IMAPG ( imap_user ) , MAILTMPLEN )"		957753	0					
ANR	957781	Callee	strlcpy		957753	0					
ANR	957782	Identifier	strlcpy		957753	0					
ANR	957783	ArgumentList	user		957753	1					
ANR	957784	Argument	user		957753	0					
ANR	957785	Identifier	user		957753	0					
ANR	957786	Argument	IMAPG ( imap_user )		957753	1					
ANR	957787	CallExpression	IMAPG ( imap_user )		957753	0					
ANR	957788	Callee	IMAPG		957753	0					
ANR	957789	Identifier	IMAPG		957753	0					
ANR	957790	ArgumentList	imap_user		957753	1					
ANR	957791	Argument	imap_user		957753	0					
ANR	957792	Identifier	imap_user		957753	0					
ANR	957793	Argument	MAILTMPLEN		957753	2					
ANR	957794	Identifier	MAILTMPLEN		957753	0					
ANR	957795	ExpressionStatement	"strlcpy ( pwd , IMAPG ( imap_password ) , MAILTMPLEN )"	5079:1:147473:147520	957753	1	True				
ANR	957796	CallExpression	"strlcpy ( pwd , IMAPG ( imap_password ) , MAILTMPLEN )"		957753	0					
ANR	957797	Callee	strlcpy		957753	0					
ANR	957798	Identifier	strlcpy		957753	0					
ANR	957799	ArgumentList	pwd		957753	1					
ANR	957800	Argument	pwd		957753	0					
ANR	957801	Identifier	pwd		957753	0					
ANR	957802	Argument	IMAPG ( imap_password )		957753	1					
ANR	957803	CallExpression	IMAPG ( imap_password )		957753	0					
ANR	957804	Callee	IMAPG		957753	0					
ANR	957805	Identifier	IMAPG		957753	0					
ANR	957806	ArgumentList	imap_password		957753	1					
ANR	957807	Argument	imap_password		957753	0					
ANR	957808	Identifier	imap_password		957753	0					
ANR	957809	Argument	MAILTMPLEN		957753	2					
ANR	957810	Identifier	MAILTMPLEN		957753	0					
ANR	957811	ReturnType	PHP_IMAP_EXPORT void		957753	1					
ANR	957812	Identifier	mm_login		957753	2					
ANR	957813	ParameterList	"NETMBX * mb , char * user , char * pwd , long trial"		957753	3					
ANR	957814	Parameter	NETMBX * mb	5071:30:147303:147312	957753	0	True				
ANR	957815	ParameterType	NETMBX *		957753	0					
ANR	957816	Identifier	mb		957753	1					
ANR	957817	Parameter	char * user	5071:42:147315:147324	957753	1	True				
ANR	957818	ParameterType	char *		957753	0					
ANR	957819	Identifier	user		957753	1					
ANR	957820	Parameter	char * pwd	5071:54:147327:147335	957753	2	True				
ANR	957821	ParameterType	char *		957753	0					
ANR	957822	Identifier	pwd		957753	1					
ANR	957823	Parameter	long trial	5071:65:147338:147347	957753	3	True				
ANR	957824	ParameterType	long		957753	0					
ANR	957825	Identifier	trial		957753	1					
ANR	957826	CFGEntryNode	ENTRY		957753		True				
ANR	957827	CFGExitNode	EXIT		957753		True				
ANR	957828	Symbol	* mb -> user		957753						
ANR	957829	Symbol	* * mb		957753						
ANR	957830	Symbol	mb -> user		957753						
ANR	957831	Symbol	mb		957753						
ANR	957832	Symbol	MAILTMPLEN		957753						
ANR	957833	Symbol	* mb		957753						
ANR	957834	Symbol	imap_user		957753						
ANR	957835	Symbol	pwd		957753						
ANR	957836	Symbol	IMAPG		957753						
ANR	957837	Symbol	user		957753						
ANR	957838	Symbol	trial		957753						
ANR	957839	Symbol	imap_password		957753						
ANR	957840	Function	mm_critical	5082:0:147525:147580							
ANR	957841	FunctionDef	mm_critical (MAILSTREAM * stream)		957840	0					
ANR	957842	CompoundStatement		5083:0:147578:147580	957840	0					
ANR	957843	ReturnType	PHP_IMAP_EXPORT void		957840	1					
ANR	957844	Identifier	mm_critical		957840	2					
ANR	957845	ParameterList	MAILSTREAM * stream		957840	3					
ANR	957846	Parameter	MAILSTREAM * stream	5082:33:147558:147575	957840	0	True				
ANR	957847	ParameterType	MAILSTREAM *		957840	0					
ANR	957848	Identifier	stream		957840	1					
ANR	957849	CFGEntryNode	ENTRY		957840		True				
ANR	957850	CFGExitNode	EXIT		957840		True				
ANR	957851	Symbol	stream		957840						
ANR	957852	Function	mm_nocritical	5086:0:147583:147640							
ANR	957853	FunctionDef	mm_nocritical (MAILSTREAM * stream)		957852	0					
ANR	957854	CompoundStatement		5087:0:147638:147640	957852	0					
ANR	957855	ReturnType	PHP_IMAP_EXPORT void		957852	1					
ANR	957856	Identifier	mm_nocritical		957852	2					
ANR	957857	ParameterList	MAILSTREAM * stream		957852	3					
ANR	957858	Parameter	MAILSTREAM * stream	5086:35:147618:147635	957852	0	True				
ANR	957859	ParameterType	MAILSTREAM *		957852	0					
ANR	957860	Identifier	stream		957852	1					
ANR	957861	CFGEntryNode	ENTRY		957852		True				
ANR	957862	CFGExitNode	EXIT		957852		True				
ANR	957863	Symbol	stream		957852						
ANR	957864	Function	mm_diskerror	5090:0:147643:147738							
ANR	957865	FunctionDef	"mm_diskerror (MAILSTREAM * stream , long errcode , long serious)"		957864	0					
ANR	957866	CompoundStatement		5091:0:147725:147738	957864	0					
ANR	957867	ReturnStatement	return 1 ;	5092:1:147728:147736	957864	0	True				
ANR	957868	PrimaryExpression	1		957864	0					
ANR	957869	ReturnType	PHP_IMAP_EXPORT long		957864	1					
ANR	957870	Identifier	mm_diskerror		957864	2					
ANR	957871	ParameterList	"MAILSTREAM * stream , long errcode , long serious"		957864	3					
ANR	957872	Parameter	MAILSTREAM * stream	5090:34:147677:147694	957864	0	True				
ANR	957873	ParameterType	MAILSTREAM *		957864	0					
ANR	957874	Identifier	stream		957864	1					
ANR	957875	Parameter	long errcode	5090:54:147697:147708	957864	1	True				
ANR	957876	ParameterType	long		957864	0					
ANR	957877	Identifier	errcode		957864	1					
ANR	957878	Parameter	long serious	5090:68:147711:147722	957864	2	True				
ANR	957879	ParameterType	long		957864	0					
ANR	957880	Identifier	serious		957864	1					
ANR	957881	CFGEntryNode	ENTRY		957864		True				
ANR	957882	CFGExitNode	EXIT		957864		True				
ANR	957883	Symbol	errcode		957864						
ANR	957884	Symbol	stream		957864						
ANR	957885	Symbol	serious		957864						
ANR	957886	Function	mm_fatal	5095:0:147741:147784							
ANR	957887	FunctionDef	mm_fatal (char * str)		957886	0					
ANR	957888	CompoundStatement		5096:0:147782:147784	957886	0					
ANR	957889	ReturnType	PHP_IMAP_EXPORT void		957886	1					
ANR	957890	Identifier	mm_fatal		957886	2					
ANR	957891	ParameterList	char * str		957886	3					
ANR	957892	Parameter	char * str	5095:30:147771:147779	957886	0	True				
ANR	957893	ParameterType	char *		957886	0					
ANR	957894	Identifier	str		957886	1					
ANR	957895	CFGEntryNode	ENTRY		957886		True				
ANR	957896	CFGExitNode	EXIT		957886		True				
ANR	957897	Symbol	str		957886						
