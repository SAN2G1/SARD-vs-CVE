command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	502517	File	data/converged/CVE-2015-8617_php-src/ext_bcmath_libbcmath_src_str2num.c								
ANR	502518	Function	bc_str2num	43:0:1460:2928							
ANR	502519	FunctionDef	"bc_str2num (bc_num * num , char * str , int scale)"		502518	0					
ANR	502520	CompoundStatement		45:0:1512:2928	502518	0					
ANR	502521	IdentifierDeclStatement	"int digits , strscale ;"	46:2:1516:1536	502518	0	True				
ANR	502522	IdentifierDecl	digits		502518	0					
ANR	502523	IdentifierDeclType	int		502518	0					
ANR	502524	Identifier	digits		502518	1					
ANR	502525	IdentifierDecl	strscale		502518	1					
ANR	502526	IdentifierDeclType	int		502518	0					
ANR	502527	Identifier	strscale		502518	1					
ANR	502528	IdentifierDeclStatement	"char * ptr , * nptr ;"	47:2:1540:1556	502518	1	True				
ANR	502529	IdentifierDecl	* ptr		502518	0					
ANR	502530	IdentifierDeclType	char *		502518	0					
ANR	502531	Identifier	ptr		502518	1					
ANR	502532	IdentifierDecl	* nptr		502518	1					
ANR	502533	IdentifierDeclType	char *		502518	0					
ANR	502534	Identifier	nptr		502518	1					
ANR	502535	IdentifierDeclStatement	char zero_int ;	48:2:1560:1573	502518	2	True				
ANR	502536	IdentifierDecl	zero_int		502518	0					
ANR	502537	IdentifierDeclType	char		502518	0					
ANR	502538	Identifier	zero_int		502518	1					
ANR	502539	ExpressionStatement	bc_free_num ( num )	51:2:1599:1616	502518	3	True				
ANR	502540	CallExpression	bc_free_num ( num )		502518	0					
ANR	502541	Callee	bc_free_num		502518	0					
ANR	502542	Identifier	bc_free_num		502518	0					
ANR	502543	ArgumentList	num		502518	1					
ANR	502544	Argument	num		502518	0					
ANR	502545	Identifier	num		502518	0					
ANR	502546	ExpressionStatement	ptr = str	54:2:1670:1679	502518	4	True				
ANR	502547	AssignmentExpression	ptr = str		502518	0		=			
ANR	502548	Identifier	ptr		502518	0					
ANR	502549	Identifier	str		502518	1					
ANR	502550	ExpressionStatement	digits = 0	55:2:1683:1693	502518	5	True				
ANR	502551	AssignmentExpression	digits = 0		502518	0		=			
ANR	502552	Identifier	digits		502518	0					
ANR	502553	PrimaryExpression	0		502518	1					
ANR	502554	ExpressionStatement	strscale = 0	56:2:1697:1709	502518	6	True				
ANR	502555	AssignmentExpression	strscale = 0		502518	0		=			
ANR	502556	Identifier	strscale		502518	0					
ANR	502557	PrimaryExpression	0		502518	1					
ANR	502558	ExpressionStatement	zero_int = FALSE	57:2:1713:1729	502518	7	True				
ANR	502559	AssignmentExpression	zero_int = FALSE		502518	0		=			
ANR	502560	Identifier	zero_int		502518	0					
ANR	502561	Identifier	FALSE		502518	1					
ANR	502562	IfStatement	if ( ( * ptr == '+' ) || ( * ptr == '-' ) )		502518	8					
ANR	502563	Condition	( * ptr == '+' ) || ( * ptr == '-' )	58:7:1738:1767	502518	0	True				
ANR	502564	OrExpression	( * ptr == '+' ) || ( * ptr == '-' )		502518	0		||			
ANR	502565	EqualityExpression	* ptr == '+'		502518	0		==			
ANR	502566	UnaryOperationExpression	* ptr		502518	0					
ANR	502567	UnaryOperator	*		502518	0					
ANR	502568	Identifier	ptr		502518	1					
ANR	502569	PrimaryExpression	'+'		502518	1					
ANR	502570	EqualityExpression	* ptr == '-'		502518	1		==			
ANR	502571	UnaryOperationExpression	* ptr		502518	0					
ANR	502572	UnaryOperator	*		502518	0					
ANR	502573	Identifier	ptr		502518	1					
ANR	502574	PrimaryExpression	'-'		502518	1					
ANR	502575	ExpressionStatement	ptr ++	58:40:1771:1776	502518	1	True				
ANR	502576	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502577	Identifier	ptr		502518	0					
ANR	502578	IncDec	++		502518	1					
ANR	502579	WhileStatement	while ( * ptr == '0' )		502518	9					
ANR	502580	Condition	* ptr == '0'	59:9:1799:1809	502518	0	True				
ANR	502581	EqualityExpression	* ptr == '0'		502518	0		==			
ANR	502582	UnaryOperationExpression	* ptr		502518	0					
ANR	502583	UnaryOperator	*		502518	0					
ANR	502584	Identifier	ptr		502518	1					
ANR	502585	PrimaryExpression	'0'		502518	1					
ANR	502586	ExpressionStatement	ptr ++	59:22:1812:1817	502518	1	True				
ANR	502587	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502588	Identifier	ptr		502518	0					
ANR	502589	IncDec	++		502518	1					
ANR	502590	WhileStatement	while ( isdigit ( ( int ) * ptr ) )		502518	10					
ANR	502591	Condition	isdigit ( ( int ) * ptr )	60:9:1856:1873	502518	0	True				
ANR	502592	CallExpression	isdigit ( ( int ) * ptr )		502518	0					
ANR	502593	Callee	isdigit		502518	0					
ANR	502594	Identifier	isdigit		502518	0					
ANR	502595	ArgumentList	( int ) * ptr		502518	1					
ANR	502596	Argument	( int ) * ptr		502518	0					
ANR	502597	CastExpression	( int ) * ptr		502518	0					
ANR	502598	CastTarget	int		502518	0					
ANR	502599	UnaryOperationExpression	* ptr		502518	1					
ANR	502600	UnaryOperator	*		502518	0					
ANR	502601	Identifier	ptr		502518	1					
ANR	502602	ExpressionStatement	"ptr ++ , digits ++"	60:29:1876:1891	502518	1	True				
ANR	502603	Expression	"ptr ++ , digits ++"		502518	0					
ANR	502604	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502605	Identifier	ptr		502518	0					
ANR	502606	IncDec	++		502518	1					
ANR	502607	PostIncDecOperationExpression	digits ++		502518	1					
ANR	502608	Identifier	digits		502518	0					
ANR	502609	IncDec	++		502518	1					
ANR	502610	IfStatement	if ( * ptr == '.' )		502518	11					
ANR	502611	Condition	* ptr == '.'	61:6:1912:1922	502518	0	True				
ANR	502612	EqualityExpression	* ptr == '.'		502518	0		==			
ANR	502613	UnaryOperationExpression	* ptr		502518	0					
ANR	502614	UnaryOperator	*		502518	0					
ANR	502615	Identifier	ptr		502518	1					
ANR	502616	PrimaryExpression	'.'		502518	1					
ANR	502617	ExpressionStatement	ptr ++	61:19:1925:1930	502518	1	True				
ANR	502618	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502619	Identifier	ptr		502518	0					
ANR	502620	IncDec	++		502518	1					
ANR	502621	WhileStatement	while ( isdigit ( ( int ) * ptr ) )		502518	12					
ANR	502622	Condition	isdigit ( ( int ) * ptr )	62:9:1963:1980	502518	0	True				
ANR	502623	CallExpression	isdigit ( ( int ) * ptr )		502518	0					
ANR	502624	Callee	isdigit		502518	0					
ANR	502625	Identifier	isdigit		502518	0					
ANR	502626	ArgumentList	( int ) * ptr		502518	1					
ANR	502627	Argument	( int ) * ptr		502518	0					
ANR	502628	CastExpression	( int ) * ptr		502518	0					
ANR	502629	CastTarget	int		502518	0					
ANR	502630	UnaryOperationExpression	* ptr		502518	1					
ANR	502631	UnaryOperator	*		502518	0					
ANR	502632	Identifier	ptr		502518	1					
ANR	502633	ExpressionStatement	"ptr ++ , strscale ++"	62:29:1983:2000	502518	1	True				
ANR	502634	Expression	"ptr ++ , strscale ++"		502518	0					
ANR	502635	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502636	Identifier	ptr		502518	0					
ANR	502637	IncDec	++		502518	1					
ANR	502638	PostIncDecOperationExpression	strscale ++		502518	1					
ANR	502639	Identifier	strscale		502518	0					
ANR	502640	IncDec	++		502518	1					
ANR	502641	IfStatement	if ( ( * ptr != '\\0' ) || ( digits + strscale == 0 ) )		502518	13					
ANR	502642	Condition	( * ptr != '\\0' ) || ( digits + strscale == 0 )	63:6:2021:2060	502518	0	True				
ANR	502643	OrExpression	( * ptr != '\\0' ) || ( digits + strscale == 0 )		502518	0		||			
ANR	502644	EqualityExpression	* ptr != '\\0'		502518	0		!=			
ANR	502645	UnaryOperationExpression	* ptr		502518	0					
ANR	502646	UnaryOperator	*		502518	0					
ANR	502647	Identifier	ptr		502518	1					
ANR	502648	PrimaryExpression	'\\0'		502518	1					
ANR	502649	EqualityExpression	digits + strscale == 0		502518	1		==			
ANR	502650	AdditiveExpression	digits + strscale		502518	0		+			
ANR	502651	Identifier	digits		502518	0					
ANR	502652	Identifier	strscale		502518	1					
ANR	502653	PrimaryExpression	0		502518	1					
ANR	502654	CompoundStatement		20:4:554:554	502518	1					
ANR	502655	ExpressionStatement	* num = bc_copy_num ( BCG ( _zero_ ) )	65:6:2075:2107	502518	0	True				
ANR	502656	AssignmentExpression	* num = bc_copy_num ( BCG ( _zero_ ) )		502518	0		=			
ANR	502657	UnaryOperationExpression	* num		502518	0					
ANR	502658	UnaryOperator	*		502518	0					
ANR	502659	Identifier	num		502518	1					
ANR	502660	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		502518	1					
ANR	502661	Callee	bc_copy_num		502518	0					
ANR	502662	Identifier	bc_copy_num		502518	0					
ANR	502663	ArgumentList	BCG ( _zero_ )		502518	1					
ANR	502664	Argument	BCG ( _zero_ )		502518	0					
ANR	502665	CallExpression	BCG ( _zero_ )		502518	0					
ANR	502666	Callee	BCG		502518	0					
ANR	502667	Identifier	BCG		502518	0					
ANR	502668	ArgumentList	_zero_		502518	1					
ANR	502669	Argument	_zero_		502518	0					
ANR	502670	Identifier	_zero_		502518	0					
ANR	502671	ReturnStatement	return ;	66:6:2115:2121	502518	1	True				
ANR	502672	ExpressionStatement	"strscale = MIN ( strscale , scale )"	70:2:2199:2230	502518	14	True				
ANR	502673	AssignmentExpression	"strscale = MIN ( strscale , scale )"		502518	0		=			
ANR	502674	Identifier	strscale		502518	0					
ANR	502675	CallExpression	"MIN ( strscale , scale )"		502518	1					
ANR	502676	Callee	MIN		502518	0					
ANR	502677	Identifier	MIN		502518	0					
ANR	502678	ArgumentList	strscale		502518	1					
ANR	502679	Argument	strscale		502518	0					
ANR	502680	Identifier	strscale		502518	0					
ANR	502681	Argument	scale		502518	1					
ANR	502682	Identifier	scale		502518	0					
ANR	502683	IfStatement	if ( digits == 0 )		502518	15					
ANR	502684	Condition	digits == 0	71:6:2238:2248	502518	0	True				
ANR	502685	EqualityExpression	digits == 0		502518	0		==			
ANR	502686	Identifier	digits		502518	0					
ANR	502687	PrimaryExpression	0		502518	1					
ANR	502688	CompoundStatement		28:4:742:742	502518	1					
ANR	502689	ExpressionStatement	zero_int = TRUE	73:6:2263:2278	502518	0	True				
ANR	502690	AssignmentExpression	zero_int = TRUE		502518	0		=			
ANR	502691	Identifier	zero_int		502518	0					
ANR	502692	Identifier	TRUE		502518	1					
ANR	502693	ExpressionStatement	digits = 1	74:6:2286:2296	502518	1	True				
ANR	502694	AssignmentExpression	digits = 1		502518	0		=			
ANR	502695	Identifier	digits		502518	0					
ANR	502696	PrimaryExpression	1		502518	1					
ANR	502697	ExpressionStatement	"* num = bc_new_num ( digits , strscale )"	76:2:2306:2342	502518	16	True				
ANR	502698	AssignmentExpression	"* num = bc_new_num ( digits , strscale )"		502518	0		=			
ANR	502699	UnaryOperationExpression	* num		502518	0					
ANR	502700	UnaryOperator	*		502518	0					
ANR	502701	Identifier	num		502518	1					
ANR	502702	CallExpression	"bc_new_num ( digits , strscale )"		502518	1					
ANR	502703	Callee	bc_new_num		502518	0					
ANR	502704	Identifier	bc_new_num		502518	0					
ANR	502705	ArgumentList	digits		502518	1					
ANR	502706	Argument	digits		502518	0					
ANR	502707	Identifier	digits		502518	0					
ANR	502708	Argument	strscale		502518	1					
ANR	502709	Identifier	strscale		502518	0					
ANR	502710	ExpressionStatement	ptr = str	79:2:2379:2388	502518	17	True				
ANR	502711	AssignmentExpression	ptr = str		502518	0		=			
ANR	502712	Identifier	ptr		502518	0					
ANR	502713	Identifier	str		502518	1					
ANR	502714	IfStatement	if ( * ptr == '-' )		502518	18					
ANR	502715	Condition	* ptr == '-'	80:6:2396:2406	502518	0	True				
ANR	502716	EqualityExpression	* ptr == '-'		502518	0		==			
ANR	502717	UnaryOperationExpression	* ptr		502518	0					
ANR	502718	UnaryOperator	*		502518	0					
ANR	502719	Identifier	ptr		502518	1					
ANR	502720	PrimaryExpression	'-'		502518	1					
ANR	502721	CompoundStatement		37:4:900:900	502518	1					
ANR	502722	ExpressionStatement	( * num ) -> n_sign = MINUS	82:6:2421:2443	502518	0	True				
ANR	502723	AssignmentExpression	( * num ) -> n_sign = MINUS		502518	0		=			
ANR	502724	PtrMemberAccess	( * num ) -> n_sign		502518	0					
ANR	502725	UnaryOperationExpression	* num		502518	0					
ANR	502726	UnaryOperator	*		502518	0					
ANR	502727	Identifier	num		502518	1					
ANR	502728	Identifier	n_sign		502518	1					
ANR	502729	Identifier	MINUS		502518	1					
ANR	502730	ExpressionStatement	ptr ++	83:6:2451:2456	502518	1	True				
ANR	502731	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502732	Identifier	ptr		502518	0					
ANR	502733	IncDec	++		502518	1					
ANR	502734	ElseStatement	else		502518	0					
ANR	502735	CompoundStatement		42:4:962:962	502518	0					
ANR	502736	ExpressionStatement	( * num ) -> n_sign = PLUS	87:6:2483:2504	502518	0	True				
ANR	502737	AssignmentExpression	( * num ) -> n_sign = PLUS		502518	0		=			
ANR	502738	PtrMemberAccess	( * num ) -> n_sign		502518	0					
ANR	502739	UnaryOperationExpression	* num		502518	0					
ANR	502740	UnaryOperator	*		502518	0					
ANR	502741	Identifier	num		502518	1					
ANR	502742	Identifier	n_sign		502518	1					
ANR	502743	Identifier	PLUS		502518	1					
ANR	502744	IfStatement	if ( * ptr == '+' )		502518	1					
ANR	502745	Condition	* ptr == '+'	88:10:2516:2526	502518	0	True				
ANR	502746	EqualityExpression	* ptr == '+'		502518	0		==			
ANR	502747	UnaryOperationExpression	* ptr		502518	0					
ANR	502748	UnaryOperator	*		502518	0					
ANR	502749	Identifier	ptr		502518	1					
ANR	502750	PrimaryExpression	'+'		502518	1					
ANR	502751	ExpressionStatement	ptr ++	88:23:2529:2534	502518	1	True				
ANR	502752	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502753	Identifier	ptr		502518	0					
ANR	502754	IncDec	++		502518	1					
ANR	502755	WhileStatement	while ( * ptr == '0' )		502518	19					
ANR	502756	Condition	* ptr == '0'	90:9:2551:2561	502518	0	True				
ANR	502757	EqualityExpression	* ptr == '0'		502518	0		==			
ANR	502758	UnaryOperationExpression	* ptr		502518	0					
ANR	502759	UnaryOperator	*		502518	0					
ANR	502760	Identifier	ptr		502518	1					
ANR	502761	PrimaryExpression	'0'		502518	1					
ANR	502762	ExpressionStatement	ptr ++	90:22:2564:2569	502518	1	True				
ANR	502763	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502764	Identifier	ptr		502518	0					
ANR	502765	IncDec	++		502518	1					
ANR	502766	ExpressionStatement	nptr = ( * num ) -> n_value	91:2:2601:2623	502518	20	True				
ANR	502767	AssignmentExpression	nptr = ( * num ) -> n_value		502518	0		=			
ANR	502768	Identifier	nptr		502518	0					
ANR	502769	PtrMemberAccess	( * num ) -> n_value		502518	1					
ANR	502770	UnaryOperationExpression	* num		502518	0					
ANR	502771	UnaryOperator	*		502518	0					
ANR	502772	Identifier	num		502518	1					
ANR	502773	Identifier	n_value		502518	1					
ANR	502774	IfStatement	if ( zero_int )		502518	21					
ANR	502775	Condition	zero_int	92:6:2631:2638	502518	0	True				
ANR	502776	Identifier	zero_int		502518	0					
ANR	502777	CompoundStatement		49:4:1132:1132	502518	1					
ANR	502778	ExpressionStatement	* nptr ++ = 0	94:6:2653:2664	502518	0	True				
ANR	502779	AssignmentExpression	* nptr ++ = 0		502518	0		=			
ANR	502780	UnaryOperationExpression	* nptr ++		502518	0					
ANR	502781	UnaryOperator	*		502518	0					
ANR	502782	PostIncDecOperationExpression	nptr ++		502518	1					
ANR	502783	Identifier	nptr		502518	0					
ANR	502784	IncDec	++		502518	1					
ANR	502785	PrimaryExpression	0		502518	1					
ANR	502786	ExpressionStatement	digits = 0	95:6:2672:2682	502518	1	True				
ANR	502787	AssignmentExpression	digits = 0		502518	0		=			
ANR	502788	Identifier	digits		502518	0					
ANR	502789	PrimaryExpression	0		502518	1					
ANR	502790	ForStatement	for ( ; digits > 0 ; digits -- )		502518	22					
ANR	502791	Condition	digits > 0	97:8:2698:2707	502518	0	True				
ANR	502792	RelationalExpression	digits > 0		502518	0		>			
ANR	502793	Identifier	digits		502518	0					
ANR	502794	PrimaryExpression	0		502518	1					
ANR	502795	PostIncDecOperationExpression	digits --	97:20:2710:2717	502518	1	True				
ANR	502796	Identifier	digits		502518	0					
ANR	502797	IncDec	--		502518	1					
ANR	502798	ExpressionStatement	* nptr ++ = CH_VAL ( * ptr ++ )	98:4:2724:2748	502518	2	True				
ANR	502799	AssignmentExpression	* nptr ++ = CH_VAL ( * ptr ++ )		502518	0		=			
ANR	502800	UnaryOperationExpression	* nptr ++		502518	0					
ANR	502801	UnaryOperator	*		502518	0					
ANR	502802	PostIncDecOperationExpression	nptr ++		502518	1					
ANR	502803	Identifier	nptr		502518	0					
ANR	502804	IncDec	++		502518	1					
ANR	502805	CallExpression	CH_VAL ( * ptr ++ )		502518	1					
ANR	502806	Callee	CH_VAL		502518	0					
ANR	502807	Identifier	CH_VAL		502518	0					
ANR	502808	ArgumentList	* ptr ++		502518	1					
ANR	502809	Argument	* ptr ++		502518	0					
ANR	502810	UnaryOperationExpression	* ptr ++		502518	0					
ANR	502811	UnaryOperator	*		502518	0					
ANR	502812	PostIncDecOperationExpression	ptr ++		502518	1					
ANR	502813	Identifier	ptr		502518	0					
ANR	502814	IncDec	++		502518	1					
ANR	502815	IfStatement	if ( strscale > 0 )		502518	23					
ANR	502816	Condition	strscale > 0	102:6:2793:2804	502518	0	True				
ANR	502817	RelationalExpression	strscale > 0		502518	0		>			
ANR	502818	Identifier	strscale		502518	0					
ANR	502819	PrimaryExpression	0		502518	1					
ANR	502820	CompoundStatement		59:4:1298:1298	502518	1					
ANR	502821	ExpressionStatement	ptr ++	104:6:2819:2824	502518	0	True				
ANR	502822	PostIncDecOperationExpression	ptr ++		502518	0					
ANR	502823	Identifier	ptr		502518	0					
ANR	502824	IncDec	++		502518	1					
ANR	502825	ForStatement	for ( ; strscale > 0 ; strscale -- )		502518	1					
ANR	502826	Condition	strscale > 0	105:12:2869:2880	502518	0	True				
ANR	502827	RelationalExpression	strscale > 0		502518	0		>			
ANR	502828	Identifier	strscale		502518	0					
ANR	502829	PrimaryExpression	0		502518	1					
ANR	502830	PostIncDecOperationExpression	strscale --	105:26:2883:2892	502518	1	True				
ANR	502831	Identifier	strscale		502518	0					
ANR	502832	IncDec	--		502518	1					
ANR	502833	ExpressionStatement	* nptr ++ = CH_VAL ( * ptr ++ )	106:1:2896:2920	502518	2	True				
ANR	502834	AssignmentExpression	* nptr ++ = CH_VAL ( * ptr ++ )		502518	0		=			
ANR	502835	UnaryOperationExpression	* nptr ++		502518	0					
ANR	502836	UnaryOperator	*		502518	0					
ANR	502837	PostIncDecOperationExpression	nptr ++		502518	1					
ANR	502838	Identifier	nptr		502518	0					
ANR	502839	IncDec	++		502518	1					
ANR	502840	CallExpression	CH_VAL ( * ptr ++ )		502518	1					
ANR	502841	Callee	CH_VAL		502518	0					
ANR	502842	Identifier	CH_VAL		502518	0					
ANR	502843	ArgumentList	* ptr ++		502518	1					
ANR	502844	Argument	* ptr ++		502518	0					
ANR	502845	UnaryOperationExpression	* ptr ++		502518	0					
ANR	502846	UnaryOperator	*		502518	0					
ANR	502847	PostIncDecOperationExpression	ptr ++		502518	1					
ANR	502848	Identifier	ptr		502518	0					
ANR	502849	IncDec	++		502518	1					
ANR	502850	ReturnType	void		502518	1					
ANR	502851	Identifier	bc_str2num		502518	2					
ANR	502852	ParameterList	"bc_num * num , char * str , int scale"		502518	3					
ANR	502853	Parameter	bc_num * num	44:12:1477:1487	502518	0	True				
ANR	502854	ParameterType	bc_num *		502518	0					
ANR	502855	Identifier	num		502518	1					
ANR	502856	Parameter	char * str	44:25:1490:1498	502518	1	True				
ANR	502857	ParameterType	char *		502518	0					
ANR	502858	Identifier	str		502518	1					
ANR	502859	Parameter	int scale	44:36:1501:1509	502518	2	True				
ANR	502860	ParameterType	int		502518	0					
ANR	502861	Identifier	scale		502518	1					
ANR	502862	CFGEntryNode	ENTRY		502518		True				
ANR	502863	CFGExitNode	EXIT		502518		True				
ANR	502864	Symbol	num		502518						
ANR	502865	Symbol	scale		502518						
ANR	502866	Symbol	* nptr ++		502518						
ANR	502867	Symbol	bc_new_num		502518						
ANR	502868	Symbol	bc_copy_num		502518						
ANR	502869	Symbol	MINUS		502518						
ANR	502870	Symbol	CH_VAL		502518						
ANR	502871	Symbol	* ptr		502518						
ANR	502872	Symbol	* * num		502518						
ANR	502873	Symbol	( * num ) -> n_sign		502518						
ANR	502874	Symbol	isdigit		502518						
ANR	502875	Symbol	* ptr ++		502518						
ANR	502876	Symbol	BCG		502518						
ANR	502877	Symbol	TRUE		502518						
ANR	502878	Symbol	zero_int		502518						
ANR	502879	Symbol	ptr		502518						
ANR	502880	Symbol	str		502518						
ANR	502881	Symbol	* num		502518						
ANR	502882	Symbol	nptr		502518						
ANR	502883	Symbol	MIN		502518						
ANR	502884	Symbol	( * num ) -> n_value		502518						
ANR	502885	Symbol	digits		502518						
ANR	502886	Symbol	FALSE		502518						
ANR	502887	Symbol	_zero_		502518						
ANR	502888	Symbol	strscale		502518						
ANR	502889	Symbol	PLUS		502518						
