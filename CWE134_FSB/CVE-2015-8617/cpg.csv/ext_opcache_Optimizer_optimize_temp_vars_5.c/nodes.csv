command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1373943	File	data/converged/CVE-2015-8617_php-src/ext_opcache_Optimizer_optimize_temp_vars_5.c								
ANR	1373944	Function	optimize_temporary_variables	42:0:1831:7744							
ANR	1373945	FunctionDef	"optimize_temporary_variables (zend_op_array * op_array , zend_optimizer_ctx * ctx)"		1373944	0					
ANR	1373946	CompoundStatement		43:0:1915:7744	1373944	0					
ANR	1373947	IdentifierDeclStatement	int T = op_array -> T ;	44:1:1918:1937	1373944	0	True				
ANR	1373948	IdentifierDecl	T = op_array -> T		1373944	0					
ANR	1373949	IdentifierDeclType	int		1373944	0					
ANR	1373950	Identifier	T		1373944	1					
ANR	1373951	AssignmentExpression	T = op_array -> T		1373944	2		=			
ANR	1373952	Identifier	T		1373944	0					
ANR	1373953	PtrMemberAccess	op_array -> T		1373944	1					
ANR	1373954	Identifier	op_array		1373944	0					
ANR	1373955	Identifier	T		1373944	1					
ANR	1373956	IdentifierDeclStatement	int offset = op_array -> last_var ;	45:1:1940:1971	1373944	1	True				
ANR	1373957	IdentifierDecl	offset = op_array -> last_var		1373944	0					
ANR	1373958	IdentifierDeclType	int		1373944	0					
ANR	1373959	Identifier	offset		1373944	1					
ANR	1373960	AssignmentExpression	offset = op_array -> last_var		1373944	2		=			
ANR	1373961	Identifier	offset		1373944	0					
ANR	1373962	PtrMemberAccess	op_array -> last_var		1373944	1					
ANR	1373963	Identifier	op_array		1373944	0					
ANR	1373964	Identifier	last_var		1373944	1					
ANR	1373965	IdentifierDeclStatement	uint32_t bitset_len ;	46:1:1974:1993	1373944	2	True				
ANR	1373966	IdentifierDecl	bitset_len		1373944	0					
ANR	1373967	IdentifierDeclType	uint32_t		1373944	0					
ANR	1373968	Identifier	bitset_len		1373944	1					
ANR	1373969	IdentifierDeclStatement	zend_bitset taken_T ;	47:1:1996:2015	1373944	3	True				
ANR	1373970	IdentifierDecl	taken_T		1373944	0					
ANR	1373971	IdentifierDeclType	zend_bitset		1373944	0					
ANR	1373972	Identifier	taken_T		1373944	1					
ANR	1373973	IdentifierDeclStatement	zend_op * * start_of_T ;	48:1:2039:2059	1373944	4	True				
ANR	1373974	IdentifierDecl	* * start_of_T		1373944	0					
ANR	1373975	IdentifierDeclType	zend_op * *		1373944	0					
ANR	1373976	Identifier	start_of_T		1373944	1					
ANR	1373977	IdentifierDeclStatement	zend_bitset valid_T ;	49:1:2097:2116	1373944	5	True				
ANR	1373978	IdentifierDecl	valid_T		1373944	0					
ANR	1373979	IdentifierDeclType	zend_bitset		1373944	0					
ANR	1373980	Identifier	valid_T		1373944	1					
ANR	1373981	IdentifierDeclStatement	int * map_T ;	50:1:2144:2154	1373944	6	True				
ANR	1373982	IdentifierDecl	* map_T		1373944	0					
ANR	1373983	IdentifierDeclType	int *		1373944	0					
ANR	1373984	Identifier	map_T		1373944	1					
ANR	1373985	IdentifierDeclStatement	"zend_op * opline , * end ;"	51:1:2195:2216	1373944	7	True				
ANR	1373986	IdentifierDecl	* opline		1373944	0					
ANR	1373987	IdentifierDeclType	zend_op *		1373944	0					
ANR	1373988	Identifier	opline		1373944	1					
ANR	1373989	IdentifierDecl	* end		1373944	1					
ANR	1373990	IdentifierDeclType	zend_op *		1373944	0					
ANR	1373991	Identifier	end		1373944	1					
ANR	1373992	IdentifierDeclStatement	int currT ;	52:1:2219:2228	1373944	8	True				
ANR	1373993	IdentifierDecl	currT		1373944	0					
ANR	1373994	IdentifierDeclType	int		1373944	0					
ANR	1373995	Identifier	currT		1373944	1					
ANR	1373996	IdentifierDeclStatement	int i ;	53:1:2231:2236	1373944	9	True				
ANR	1373997	IdentifierDecl	i		1373944	0					
ANR	1373998	IdentifierDeclType	int		1373944	0					
ANR	1373999	Identifier	i		1373944	1					
ANR	1374000	IdentifierDeclStatement	int max = - 1 ;	54:1:2239:2251	1373944	10	True				
ANR	1374001	IdentifierDecl	max = - 1		1373944	0					
ANR	1374002	IdentifierDeclType	int		1373944	0					
ANR	1374003	Identifier	max		1373944	1					
ANR	1374004	AssignmentExpression	max = - 1		1373944	2		=			
ANR	1374005	Identifier	max		1373944	0					
ANR	1374006	UnaryOperationExpression	- 1		1373944	1					
ANR	1374007	UnaryOperator	-		1373944	0					
ANR	1374008	PrimaryExpression	1		1373944	1					
ANR	1374009	IdentifierDeclStatement	int var_to_free = - 1 ;	55:1:2254:2274	1373944	11	True				
ANR	1374010	IdentifierDecl	var_to_free = - 1		1373944	0					
ANR	1374011	IdentifierDeclType	int		1373944	0					
ANR	1374012	Identifier	var_to_free		1373944	1					
ANR	1374013	AssignmentExpression	var_to_free = - 1		1373944	2		=			
ANR	1374014	Identifier	var_to_free		1373944	0					
ANR	1374015	UnaryOperationExpression	- 1		1373944	1					
ANR	1374016	UnaryOperator	-		1373944	0					
ANR	1374017	PrimaryExpression	1		1373944	1					
ANR	1374018	IdentifierDeclStatement	void * checkpoint = zend_arena_checkpoint ( ctx -> arena ) ;	56:1:2277:2329	1373944	12	True				
ANR	1374019	IdentifierDecl	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		1373944	0					
ANR	1374020	IdentifierDeclType	void *		1373944	0					
ANR	1374021	Identifier	checkpoint		1373944	1					
ANR	1374022	AssignmentExpression	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		1373944	2		=			
ANR	1374023	Identifier	checkpoint		1373944	0					
ANR	1374024	CallExpression	zend_arena_checkpoint ( ctx -> arena )		1373944	1					
ANR	1374025	Callee	zend_arena_checkpoint		1373944	0					
ANR	1374026	Identifier	zend_arena_checkpoint		1373944	0					
ANR	1374027	ArgumentList	ctx -> arena		1373944	1					
ANR	1374028	Argument	ctx -> arena		1373944	0					
ANR	1374029	PtrMemberAccess	ctx -> arena		1373944	0					
ANR	1374030	Identifier	ctx		1373944	0					
ANR	1374031	Identifier	arena		1373944	1					
ANR	1374032	ExpressionStatement	bitset_len = zend_bitset_len ( T )	58:1:2333:2364	1373944	13	True				
ANR	1374033	AssignmentExpression	bitset_len = zend_bitset_len ( T )		1373944	0		=			
ANR	1374034	Identifier	bitset_len		1373944	0					
ANR	1374035	CallExpression	zend_bitset_len ( T )		1373944	1					
ANR	1374036	Callee	zend_bitset_len		1373944	0					
ANR	1374037	Identifier	zend_bitset_len		1373944	0					
ANR	1374038	ArgumentList	T		1373944	1					
ANR	1374039	Argument	T		1373944	0					
ANR	1374040	Identifier	T		1373944	0					
ANR	1374041	ExpressionStatement	"taken_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"	59:1:2367:2455	1373944	14	True				
ANR	1374042	AssignmentExpression	"taken_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		1373944	0		=			
ANR	1374043	Identifier	taken_T		1373944	0					
ANR	1374044	CastExpression	"( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		1373944	1					
ANR	1374045	CastTarget	zend_bitset		1373944	0					
ANR	1374046	CallExpression	"zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		1373944	1					
ANR	1374047	Callee	zend_arena_alloc		1373944	0					
ANR	1374048	Identifier	zend_arena_alloc		1373944	0					
ANR	1374049	ArgumentList	& ctx -> arena		1373944	1					
ANR	1374050	Argument	& ctx -> arena		1373944	0					
ANR	1374051	UnaryOperationExpression	& ctx -> arena		1373944	0					
ANR	1374052	UnaryOperator	&		1373944	0					
ANR	1374053	PtrMemberAccess	ctx -> arena		1373944	1					
ANR	1374054	Identifier	ctx		1373944	0					
ANR	1374055	Identifier	arena		1373944	1					
ANR	1374056	Argument	bitset_len * ZEND_BITSET_ELM_SIZE		1373944	1					
ANR	1374057	MultiplicativeExpression	bitset_len * ZEND_BITSET_ELM_SIZE		1373944	0		*			
ANR	1374058	Identifier	bitset_len		1373944	0					
ANR	1374059	Identifier	ZEND_BITSET_ELM_SIZE		1373944	1					
ANR	1374060	ExpressionStatement	"start_of_T = ( zend_op * * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"	60:1:2458:2536	1373944	15	True				
ANR	1374061	AssignmentExpression	"start_of_T = ( zend_op * * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"		1373944	0		=			
ANR	1374062	Identifier	start_of_T		1373944	0					
ANR	1374063	CastExpression	"( zend_op * * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"		1373944	1					
ANR	1374064	CastTarget	zend_op * *		1373944	0					
ANR	1374065	CallExpression	"zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"		1373944	1					
ANR	1374066	Callee	zend_arena_alloc		1373944	0					
ANR	1374067	Identifier	zend_arena_alloc		1373944	0					
ANR	1374068	ArgumentList	& ctx -> arena		1373944	1					
ANR	1374069	Argument	& ctx -> arena		1373944	0					
ANR	1374070	UnaryOperationExpression	& ctx -> arena		1373944	0					
ANR	1374071	UnaryOperator	&		1373944	0					
ANR	1374072	PtrMemberAccess	ctx -> arena		1373944	1					
ANR	1374073	Identifier	ctx		1373944	0					
ANR	1374074	Identifier	arena		1373944	1					
ANR	1374075	Argument	T * sizeof ( zend_op * )		1373944	1					
ANR	1374076	MultiplicativeExpression	T * sizeof ( zend_op * )		1373944	0		*			
ANR	1374077	Identifier	T		1373944	0					
ANR	1374078	SizeofExpression	sizeof ( zend_op * )		1373944	1					
ANR	1374079	Sizeof	sizeof		1373944	0					
ANR	1374080	SizeofOperand	zend_op *		1373944	1					
ANR	1374081	ExpressionStatement	"valid_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"	61:1:2539:2627	1373944	16	True				
ANR	1374082	AssignmentExpression	"valid_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		1373944	0		=			
ANR	1374083	Identifier	valid_T		1373944	0					
ANR	1374084	CastExpression	"( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		1373944	1					
ANR	1374085	CastTarget	zend_bitset		1373944	0					
ANR	1374086	CallExpression	"zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		1373944	1					
ANR	1374087	Callee	zend_arena_alloc		1373944	0					
ANR	1374088	Identifier	zend_arena_alloc		1373944	0					
ANR	1374089	ArgumentList	& ctx -> arena		1373944	1					
ANR	1374090	Argument	& ctx -> arena		1373944	0					
ANR	1374091	UnaryOperationExpression	& ctx -> arena		1373944	0					
ANR	1374092	UnaryOperator	&		1373944	0					
ANR	1374093	PtrMemberAccess	ctx -> arena		1373944	1					
ANR	1374094	Identifier	ctx		1373944	0					
ANR	1374095	Identifier	arena		1373944	1					
ANR	1374096	Argument	bitset_len * ZEND_BITSET_ELM_SIZE		1373944	1					
ANR	1374097	MultiplicativeExpression	bitset_len * ZEND_BITSET_ELM_SIZE		1373944	0		*			
ANR	1374098	Identifier	bitset_len		1373944	0					
ANR	1374099	Identifier	ZEND_BITSET_ELM_SIZE		1373944	1					
ANR	1374100	ExpressionStatement	"map_T = ( int * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"	62:1:2630:2692	1373944	17	True				
ANR	1374101	AssignmentExpression	"map_T = ( int * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"		1373944	0		=			
ANR	1374102	Identifier	map_T		1373944	0					
ANR	1374103	CastExpression	"( int * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"		1373944	1					
ANR	1374104	CastTarget	int *		1373944	0					
ANR	1374105	CallExpression	"zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"		1373944	1					
ANR	1374106	Callee	zend_arena_alloc		1373944	0					
ANR	1374107	Identifier	zend_arena_alloc		1373944	0					
ANR	1374108	ArgumentList	& ctx -> arena		1373944	1					
ANR	1374109	Argument	& ctx -> arena		1373944	0					
ANR	1374110	UnaryOperationExpression	& ctx -> arena		1373944	0					
ANR	1374111	UnaryOperator	&		1373944	0					
ANR	1374112	PtrMemberAccess	ctx -> arena		1373944	1					
ANR	1374113	Identifier	ctx		1373944	0					
ANR	1374114	Identifier	arena		1373944	1					
ANR	1374115	Argument	T * sizeof ( int )		1373944	1					
ANR	1374116	MultiplicativeExpression	T * sizeof ( int )		1373944	0		*			
ANR	1374117	Identifier	T		1373944	0					
ANR	1374118	SizeofExpression	sizeof ( int )		1373944	1					
ANR	1374119	Sizeof	sizeof		1373944	0					
ANR	1374120	SizeofOperand	int		1373944	1					
ANR	1374121	ExpressionStatement	end = op_array -> opcodes	64:4:2699:2722	1373944	18	True				
ANR	1374122	AssignmentExpression	end = op_array -> opcodes		1373944	0		=			
ANR	1374123	Identifier	end		1373944	0					
ANR	1374124	PtrMemberAccess	op_array -> opcodes		1373944	1					
ANR	1374125	Identifier	op_array		1373944	0					
ANR	1374126	Identifier	opcodes		1373944	1					
ANR	1374127	ExpressionStatement	opline = & op_array -> opcodes [ op_array -> last - 1 ]	65:4:2728:2775	1373944	19	True				
ANR	1374128	AssignmentExpression	opline = & op_array -> opcodes [ op_array -> last - 1 ]		1373944	0		=			
ANR	1374129	Identifier	opline		1373944	0					
ANR	1374130	UnaryOperationExpression	& op_array -> opcodes [ op_array -> last - 1 ]		1373944	1					
ANR	1374131	UnaryOperator	&		1373944	0					
ANR	1374132	ArrayIndexing	op_array -> opcodes [ op_array -> last - 1 ]		1373944	1					
ANR	1374133	PtrMemberAccess	op_array -> opcodes		1373944	0					
ANR	1374134	Identifier	op_array		1373944	0					
ANR	1374135	Identifier	opcodes		1373944	1					
ANR	1374136	AdditiveExpression	op_array -> last - 1		1373944	1		-			
ANR	1374137	PtrMemberAccess	op_array -> last		1373944	0					
ANR	1374138	Identifier	op_array		1373944	0					
ANR	1374139	Identifier	last		1373944	1					
ANR	1374140	PrimaryExpression	1		1373944	1					
ANR	1374141	WhileStatement	while ( opline >= end )		1373944	20					
ANR	1374142	Condition	opline >= end	68:11:2824:2836	1373944	0	True				
ANR	1374143	RelationalExpression	opline >= end		1373944	0		>=			
ANR	1374144	Identifier	opline		1373944	0					
ANR	1374145	Identifier	end		1373944	1					
ANR	1374146	CompoundStatement		26:26:923:923	1373944	1					
ANR	1374147	IfStatement	if ( ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) )		1373944	0					
ANR	1374148	Condition	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	69:12:2853:2900	1373944	0	True				
ANR	1374149	BitAndExpression	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		1373944	0		&			
ANR	1374150	CallExpression	ZEND_RESULT_TYPE ( opline )		1373944	0					
ANR	1374151	Callee	ZEND_RESULT_TYPE		1373944	0					
ANR	1374152	Identifier	ZEND_RESULT_TYPE		1373944	0					
ANR	1374153	ArgumentList	opline		1373944	1					
ANR	1374154	Argument	opline		1373944	0					
ANR	1374155	Identifier	opline		1373944	0					
ANR	1374156	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		1373944	1		|			
ANR	1374157	Identifier	IS_VAR		1373944	0					
ANR	1374158	Identifier	IS_TMP_VAR		1373944	1					
ANR	1374159	CompoundStatement		27:62:987:987	1373944	1					
ANR	1374160	ExpressionStatement	start_of_T [ VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset ] = opline	70:3:2908:2970	1373944	0	True				
ANR	1374161	AssignmentExpression	start_of_T [ VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset ] = opline		1373944	0		=			
ANR	1374162	ArrayIndexing	start_of_T [ VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset ]		1373944	0					
ANR	1374163	Identifier	start_of_T		1373944	0					
ANR	1374164	AdditiveExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset		1373944	1		-			
ANR	1374165	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		1373944	0					
ANR	1374166	Callee	VAR_NUM		1373944	0					
ANR	1374167	Identifier	VAR_NUM		1373944	0					
ANR	1374168	ArgumentList	ZEND_RESULT ( opline ) . var		1373944	1					
ANR	1374169	Argument	ZEND_RESULT ( opline ) . var		1373944	0					
ANR	1374170	MemberAccess	ZEND_RESULT ( opline ) . var		1373944	0					
ANR	1374171	CallExpression	ZEND_RESULT ( opline )		1373944	0					
ANR	1374172	Callee	ZEND_RESULT		1373944	0					
ANR	1374173	Identifier	ZEND_RESULT		1373944	0					
ANR	1374174	ArgumentList	opline		1373944	1					
ANR	1374175	Argument	opline		1373944	0					
ANR	1374176	Identifier	opline		1373944	0					
ANR	1374177	Identifier	var		1373944	1					
ANR	1374178	Identifier	offset		1373944	1					
ANR	1374179	Identifier	opline		1373944	1					
ANR	1374180	ExpressionStatement	opline --	72:2:2978:2986	1373944	1	True				
ANR	1374181	PostIncDecOperationExpression	opline --		1373944	0					
ANR	1374182	Identifier	opline		1373944	0					
ANR	1374183	IncDec	--		1373944	1					
ANR	1374184	ExpressionStatement	"zend_bitset_clear ( valid_T , bitset_len )"	75:1:2993:3031	1373944	21	True				
ANR	1374185	CallExpression	"zend_bitset_clear ( valid_T , bitset_len )"		1373944	0					
ANR	1374186	Callee	zend_bitset_clear		1373944	0					
ANR	1374187	Identifier	zend_bitset_clear		1373944	0					
ANR	1374188	ArgumentList	valid_T		1373944	1					
ANR	1374189	Argument	valid_T		1373944	0					
ANR	1374190	Identifier	valid_T		1373944	0					
ANR	1374191	Argument	bitset_len		1373944	1					
ANR	1374192	Identifier	bitset_len		1373944	0					
ANR	1374193	ExpressionStatement	"zend_bitset_clear ( taken_T , bitset_len )"	76:1:3034:3072	1373944	22	True				
ANR	1374194	CallExpression	"zend_bitset_clear ( taken_T , bitset_len )"		1373944	0					
ANR	1374195	Callee	zend_bitset_clear		1373944	0					
ANR	1374196	Identifier	zend_bitset_clear		1373944	0					
ANR	1374197	ArgumentList	taken_T		1373944	1					
ANR	1374198	Argument	taken_T		1373944	0					
ANR	1374199	Identifier	taken_T		1373944	0					
ANR	1374200	Argument	bitset_len		1373944	1					
ANR	1374201	Identifier	bitset_len		1373944	0					
ANR	1374202	ExpressionStatement	end = op_array -> opcodes	78:4:3079:3102	1373944	23	True				
ANR	1374203	AssignmentExpression	end = op_array -> opcodes		1373944	0		=			
ANR	1374204	Identifier	end		1373944	0					
ANR	1374205	PtrMemberAccess	op_array -> opcodes		1373944	1					
ANR	1374206	Identifier	op_array		1373944	0					
ANR	1374207	Identifier	opcodes		1373944	1					
ANR	1374208	ExpressionStatement	opline = & op_array -> opcodes [ op_array -> last - 1 ]	79:4:3108:3155	1373944	24	True				
ANR	1374209	AssignmentExpression	opline = & op_array -> opcodes [ op_array -> last - 1 ]		1373944	0		=			
ANR	1374210	Identifier	opline		1373944	0					
ANR	1374211	UnaryOperationExpression	& op_array -> opcodes [ op_array -> last - 1 ]		1373944	1					
ANR	1374212	UnaryOperator	&		1373944	0					
ANR	1374213	ArrayIndexing	op_array -> opcodes [ op_array -> last - 1 ]		1373944	1					
ANR	1374214	PtrMemberAccess	op_array -> opcodes		1373944	0					
ANR	1374215	Identifier	op_array		1373944	0					
ANR	1374216	Identifier	opcodes		1373944	1					
ANR	1374217	AdditiveExpression	op_array -> last - 1		1373944	1		-			
ANR	1374218	PtrMemberAccess	op_array -> last		1373944	0					
ANR	1374219	Identifier	op_array		1373944	0					
ANR	1374220	Identifier	last		1373944	1					
ANR	1374221	PrimaryExpression	1		1373944	1					
ANR	1374222	WhileStatement	while ( opline >= end )		1373944	25					
ANR	1374223	Condition	opline >= end	81:11:3169:3181	1373944	0	True				
ANR	1374224	RelationalExpression	opline >= end		1373944	0		>=			
ANR	1374225	Identifier	opline		1373944	0					
ANR	1374226	Identifier	end		1373944	1					
ANR	1374227	CompoundStatement		39:26:1268:1268	1373944	1					
ANR	1374228	IfStatement	if ( ( ZEND_OP1_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) ) )		1373944	0					
ANR	1374229	Condition	ZEND_OP1_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	82:6:3192:3238	1373944	0	True				
ANR	1374230	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		1373944	0		&			
ANR	1374231	CallExpression	ZEND_OP1_TYPE ( opline )		1373944	0					
ANR	1374232	Callee	ZEND_OP1_TYPE		1373944	0					
ANR	1374233	Identifier	ZEND_OP1_TYPE		1373944	0					
ANR	1374234	ArgumentList	opline		1373944	1					
ANR	1374235	Argument	opline		1373944	0					
ANR	1374236	Identifier	opline		1373944	0					
ANR	1374237	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		1373944	1		|			
ANR	1374238	Identifier	IS_VAR		1373944	0					
ANR	1374239	Identifier	IS_TMP_VAR		1373944	1					
ANR	1374240	CompoundStatement		40:55:1325:1325	1373944	1					
ANR	1374241	ExpressionStatement	currT = VAR_NUM ( ZEND_OP1 ( opline ) . var ) - offset	83:3:3246:3292	1373944	0	True				
ANR	1374242	AssignmentExpression	currT = VAR_NUM ( ZEND_OP1 ( opline ) . var ) - offset		1373944	0		=			
ANR	1374243	Identifier	currT		1373944	0					
ANR	1374244	AdditiveExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var ) - offset		1373944	1		-			
ANR	1374245	CallExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var )		1373944	0					
ANR	1374246	Callee	VAR_NUM		1373944	0					
ANR	1374247	Identifier	VAR_NUM		1373944	0					
ANR	1374248	ArgumentList	ZEND_OP1 ( opline ) . var		1373944	1					
ANR	1374249	Argument	ZEND_OP1 ( opline ) . var		1373944	0					
ANR	1374250	MemberAccess	ZEND_OP1 ( opline ) . var		1373944	0					
ANR	1374251	CallExpression	ZEND_OP1 ( opline )		1373944	0					
ANR	1374252	Callee	ZEND_OP1		1373944	0					
ANR	1374253	Identifier	ZEND_OP1		1373944	0					
ANR	1374254	ArgumentList	opline		1373944	1					
ANR	1374255	Argument	opline		1373944	0					
ANR	1374256	Identifier	opline		1373944	0					
ANR	1374257	Identifier	var		1373944	1					
ANR	1374258	Identifier	offset		1373944	1					
ANR	1374259	IfStatement	if ( opline -> opcode == ZEND_ROPE_END )		1373944	1					
ANR	1374260	Condition	opline -> opcode == ZEND_ROPE_END	84:7:3301:3331	1373944	0	True				
ANR	1374261	EqualityExpression	opline -> opcode == ZEND_ROPE_END		1373944	0		==			
ANR	1374262	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374263	Identifier	opline		1373944	0					
ANR	1374264	Identifier	opcode		1373944	1					
ANR	1374265	Identifier	ZEND_ROPE_END		1373944	1					
ANR	1374266	CompoundStatement		44:4:1531:1538	1373944	1					
ANR	1374267	IdentifierDeclStatement	int num = ( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval ) ;	85:4:3340:3441	1373944	0	True				
ANR	1374268	IdentifierDecl	num = ( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		1373944	0					
ANR	1374269	IdentifierDeclType	int		1373944	0					
ANR	1374270	Identifier	num		1373944	1					
ANR	1374271	AssignmentExpression	num = ( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		1373944	2		=			
ANR	1374272	Identifier	num		1373944	0					
ANR	1374273	MultiplicativeExpression	( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		1373944	1		/			
ANR	1374274	AdditiveExpression	( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 )		1373944	0		+			
ANR	1374275	MultiplicativeExpression	( opline -> extended_value + 1 ) * sizeof ( zend_string * )		1373944	0		*			
ANR	1374276	AdditiveExpression	opline -> extended_value + 1		1373944	0		+			
ANR	1374277	PtrMemberAccess	opline -> extended_value		1373944	0					
ANR	1374278	Identifier	opline		1373944	0					
ANR	1374279	Identifier	extended_value		1373944	1					
ANR	1374280	PrimaryExpression	1		1373944	1					
ANR	1374281	SizeofExpression	sizeof ( zend_string * )		1373944	1					
ANR	1374282	Sizeof	sizeof		1373944	0					
ANR	1374283	SizeofOperand	zend_string *		1373944	1					
ANR	1374284	AdditiveExpression	sizeof ( zval ) - 1		1373944	1		-			
ANR	1374285	SizeofExpression	sizeof ( zval )		1373944	0					
ANR	1374286	Sizeof	sizeof		1373944	0					
ANR	1374287	SizeofOperand	zval		1373944	1					
ANR	1374288	PrimaryExpression	1		1373944	1					
ANR	1374289	SizeofExpression	sizeof ( zval )		1373944	1					
ANR	1374290	Sizeof	sizeof		1373944	0					
ANR	1374291	SizeofOperand	zval		1373944	1					
ANR	1374292	IdentifierDeclStatement	int var ;	86:4:3447:3454	1373944	1	True				
ANR	1374293	IdentifierDecl	var		1373944	0					
ANR	1374294	IdentifierDeclType	int		1373944	0					
ANR	1374295	Identifier	var		1373944	1					
ANR	1374296	ExpressionStatement	var = max	88:4:3461:3470	1373944	2	True				
ANR	1374297	AssignmentExpression	var = max		1373944	0		=			
ANR	1374298	Identifier	var		1373944	0					
ANR	1374299	Identifier	max		1373944	1					
ANR	1374300	WhileStatement	"while ( var >= 0 && ! zend_bitset_in ( taken_T , var ) )"		1373944	3					
ANR	1374301	Condition	"var >= 0 && ! zend_bitset_in ( taken_T , var )"	89:11:3483:3523	1373944	0	True				
ANR	1374302	AndExpression	"var >= 0 && ! zend_bitset_in ( taken_T , var )"		1373944	0		&&			
ANR	1374303	RelationalExpression	var >= 0		1373944	0		>=			
ANR	1374304	Identifier	var		1373944	0					
ANR	1374305	PrimaryExpression	0		1373944	1					
ANR	1374306	UnaryOperationExpression	"! zend_bitset_in ( taken_T , var )"		1373944	1					
ANR	1374307	UnaryOperator	!		1373944	0					
ANR	1374308	CallExpression	"zend_bitset_in ( taken_T , var )"		1373944	1					
ANR	1374309	Callee	zend_bitset_in		1373944	0					
ANR	1374310	Identifier	zend_bitset_in		1373944	0					
ANR	1374311	ArgumentList	taken_T		1373944	1					
ANR	1374312	Argument	taken_T		1373944	0					
ANR	1374313	Identifier	taken_T		1373944	0					
ANR	1374314	Argument	var		1373944	1					
ANR	1374315	Identifier	var		1373944	0					
ANR	1374316	CompoundStatement		47:54:1610:1610	1373944	1					
ANR	1374317	ExpressionStatement	var --	90:5:3533:3538	1373944	0	True				
ANR	1374318	PostIncDecOperationExpression	var --		1373944	0					
ANR	1374319	Identifier	var		1373944	0					
ANR	1374320	IncDec	--		1373944	1					
ANR	1374321	ExpressionStatement	"max = MAX ( max , var + num )"	92:4:3550:3575	1373944	4	True				
ANR	1374322	AssignmentExpression	"max = MAX ( max , var + num )"		1373944	0		=			
ANR	1374323	Identifier	max		1373944	0					
ANR	1374324	CallExpression	"MAX ( max , var + num )"		1373944	1					
ANR	1374325	Callee	MAX		1373944	0					
ANR	1374326	Identifier	MAX		1373944	0					
ANR	1374327	ArgumentList	max		1373944	1					
ANR	1374328	Argument	max		1373944	0					
ANR	1374329	Identifier	max		1373944	0					
ANR	1374330	Argument	var + num		1373944	1					
ANR	1374331	AdditiveExpression	var + num		1373944	0		+			
ANR	1374332	Identifier	var		1373944	0					
ANR	1374333	Identifier	num		1373944	1					
ANR	1374334	ExpressionStatement	var = var + 1	93:4:3581:3594	1373944	5	True				
ANR	1374335	AssignmentExpression	var = var + 1		1373944	0		=			
ANR	1374336	Identifier	var		1373944	0					
ANR	1374337	AdditiveExpression	var + 1		1373944	1		+			
ANR	1374338	Identifier	var		1373944	0					
ANR	1374339	PrimaryExpression	1		1373944	1					
ANR	1374340	ExpressionStatement	map_T [ currT ] = var	94:4:3600:3618	1373944	6	True				
ANR	1374341	AssignmentExpression	map_T [ currT ] = var		1373944	0		=			
ANR	1374342	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374343	Identifier	map_T		1373944	0					
ANR	1374344	Identifier	currT		1373944	1					
ANR	1374345	Identifier	var		1373944	1					
ANR	1374346	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	95:4:3624:3656	1373944	7	True				
ANR	1374347	CallExpression	"zend_bitset_incl ( valid_T , currT )"		1373944	0					
ANR	1374348	Callee	zend_bitset_incl		1373944	0					
ANR	1374349	Identifier	zend_bitset_incl		1373944	0					
ANR	1374350	ArgumentList	valid_T		1373944	1					
ANR	1374351	Argument	valid_T		1373944	0					
ANR	1374352	Identifier	valid_T		1373944	0					
ANR	1374353	Argument	currT		1373944	1					
ANR	1374354	Identifier	currT		1373944	0					
ANR	1374355	ExpressionStatement	"zend_bitset_incl ( taken_T , var )"	96:4:3662:3692	1373944	8	True				
ANR	1374356	CallExpression	"zend_bitset_incl ( taken_T , var )"		1373944	0					
ANR	1374357	Callee	zend_bitset_incl		1373944	0					
ANR	1374358	Identifier	zend_bitset_incl		1373944	0					
ANR	1374359	ArgumentList	taken_T		1373944	1					
ANR	1374360	Argument	taken_T		1373944	0					
ANR	1374361	Identifier	taken_T		1373944	0					
ANR	1374362	Argument	var		1373944	1					
ANR	1374363	Identifier	var		1373944	0					
ANR	1374364	ExpressionStatement	ZEND_OP1 ( opline ) . var = NUM_VAR ( var + offset )	97:4:3698:3742	1373944	9	True				
ANR	1374365	AssignmentExpression	ZEND_OP1 ( opline ) . var = NUM_VAR ( var + offset )		1373944	0		=			
ANR	1374366	MemberAccess	ZEND_OP1 ( opline ) . var		1373944	0					
ANR	1374367	CallExpression	ZEND_OP1 ( opline )		1373944	0					
ANR	1374368	Callee	ZEND_OP1		1373944	0					
ANR	1374369	Identifier	ZEND_OP1		1373944	0					
ANR	1374370	ArgumentList	opline		1373944	1					
ANR	1374371	Argument	opline		1373944	0					
ANR	1374372	Identifier	opline		1373944	0					
ANR	1374373	Identifier	var		1373944	1					
ANR	1374374	CallExpression	NUM_VAR ( var + offset )		1373944	1					
ANR	1374375	Callee	NUM_VAR		1373944	0					
ANR	1374376	Identifier	NUM_VAR		1373944	0					
ANR	1374377	ArgumentList	var + offset		1373944	1					
ANR	1374378	Argument	var + offset		1373944	0					
ANR	1374379	AdditiveExpression	var + offset		1373944	0		+			
ANR	1374380	Identifier	var		1373944	0					
ANR	1374381	Identifier	offset		1373944	1					
ANR	1374382	WhileStatement	while ( num > 1 )		1373944	10					
ANR	1374383	Condition	num > 1	98:11:3755:3761	1373944	0	True				
ANR	1374384	RelationalExpression	num > 1		1373944	0		>			
ANR	1374385	Identifier	num		1373944	0					
ANR	1374386	PrimaryExpression	1		1373944	1					
ANR	1374387	CompoundStatement		56:20:1848:1848	1373944	1					
ANR	1374388	ExpressionStatement	num --	99:5:3771:3776	1373944	0	True				
ANR	1374389	PostIncDecOperationExpression	num --		1373944	0					
ANR	1374390	Identifier	num		1373944	0					
ANR	1374391	IncDec	--		1373944	1					
ANR	1374392	ExpressionStatement	"zend_bitset_incl ( taken_T , var + num )"	100:5:3783:3819	1373944	1	True				
ANR	1374393	CallExpression	"zend_bitset_incl ( taken_T , var + num )"		1373944	0					
ANR	1374394	Callee	zend_bitset_incl		1373944	0					
ANR	1374395	Identifier	zend_bitset_incl		1373944	0					
ANR	1374396	ArgumentList	taken_T		1373944	1					
ANR	1374397	Argument	taken_T		1373944	0					
ANR	1374398	Identifier	taken_T		1373944	0					
ANR	1374399	Argument	var + num		1373944	1					
ANR	1374400	AdditiveExpression	var + num		1373944	0		+			
ANR	1374401	Identifier	var		1373944	0					
ANR	1374402	Identifier	num		1373944	1					
ANR	1374403	ElseStatement	else		1373944	0					
ANR	1374404	CompoundStatement		60:10:1921:1921	1373944	0					
ANR	1374405	IfStatement	"if ( ! zend_bitset_in ( valid_T , currT ) )"		1373944	0					
ANR	1374406	Condition	"! zend_bitset_in ( valid_T , currT )"	103:8:3847:3877	1373944	0	True				
ANR	1374407	UnaryOperationExpression	"! zend_bitset_in ( valid_T , currT )"		1373944	0					
ANR	1374408	UnaryOperator	!		1373944	0					
ANR	1374409	CallExpression	"zend_bitset_in ( valid_T , currT )"		1373944	1					
ANR	1374410	Callee	zend_bitset_in		1373944	0					
ANR	1374411	Identifier	zend_bitset_in		1373944	0					
ANR	1374412	ArgumentList	valid_T		1373944	1					
ANR	1374413	Argument	valid_T		1373944	0					
ANR	1374414	Identifier	valid_T		1373944	0					
ANR	1374415	Argument	currT		1373944	1					
ANR	1374416	Identifier	currT		1373944	0					
ANR	1374417	CompoundStatement		62:5:1971:1990	1373944	1					
ANR	1374418	IdentifierDeclStatement	int use_new_var = 0 ;	104:5:3887:3906	1373944	0	True				
ANR	1374419	IdentifierDecl	use_new_var = 0		1373944	0					
ANR	1374420	IdentifierDeclType	int		1373944	0					
ANR	1374421	Identifier	use_new_var		1373944	1					
ANR	1374422	AssignmentExpression	use_new_var = 0		1373944	2		=			
ANR	1374423	Identifier	use_new_var		1373944	0					
ANR	1374424	PrimaryExpression	0		1373944	1					
ANR	1374425	IfStatement	if ( ( op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) && ( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE ) )		1373944	1					
ANR	1374426	Condition	( op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) && ( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE )	110:9:4078:4305	1373944	0	True				
ANR	1374427	AndExpression	( op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) && ( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE )		1373944	0		&&			
ANR	1374428	BitAndExpression	op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK		1373944	0		&			
ANR	1374429	PtrMemberAccess	op_array -> fn_flags		1373944	0					
ANR	1374430	Identifier	op_array		1373944	0					
ANR	1374431	Identifier	fn_flags		1373944	1					
ANR	1374432	Identifier	ZEND_ACC_HAS_FINALLY_BLOCK		1373944	1					
ANR	1374433	OrExpression	opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE		1373944	1		||			
ANR	1374434	EqualityExpression	opline -> opcode == ZEND_RETURN		1373944	0		==			
ANR	1374435	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374436	Identifier	opline		1373944	0					
ANR	1374437	Identifier	opcode		1373944	1					
ANR	1374438	Identifier	ZEND_RETURN		1373944	1					
ANR	1374439	OrExpression	opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE		1373944	1		||			
ANR	1374440	EqualityExpression	opline -> opcode == ZEND_RETURN_BY_REF		1373944	0		==			
ANR	1374441	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374442	Identifier	opline		1373944	0					
ANR	1374443	Identifier	opcode		1373944	1					
ANR	1374444	Identifier	ZEND_RETURN_BY_REF		1373944	1					
ANR	1374445	OrExpression	opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE		1373944	1		||			
ANR	1374446	EqualityExpression	opline -> opcode == ZEND_FREE		1373944	0		==			
ANR	1374447	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374448	Identifier	opline		1373944	0					
ANR	1374449	Identifier	opcode		1373944	1					
ANR	1374450	Identifier	ZEND_FREE		1373944	1					
ANR	1374451	EqualityExpression	opline -> opcode == ZEND_FE_FREE		1373944	1		==			
ANR	1374452	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374453	Identifier	opline		1373944	0					
ANR	1374454	Identifier	opcode		1373944	1					
ANR	1374455	Identifier	ZEND_FE_FREE		1373944	1					
ANR	1374456	CompoundStatement		73:6:2400:2422	1373944	1					
ANR	1374457	IdentifierDeclStatement	zend_op * curr = opline ;	115:6:4316:4338	1373944	0	True				
ANR	1374458	IdentifierDecl	* curr = opline		1373944	0					
ANR	1374459	IdentifierDeclType	zend_op *		1373944	0					
ANR	1374460	Identifier	curr		1373944	1					
ANR	1374461	AssignmentExpression	* curr = opline		1373944	2		=			
ANR	1374462	Identifier	opline		1373944	0					
ANR	1374463	Identifier	opline		1373944	1					
ANR	1374464	WhileStatement	while ( -- curr >= end )		1373944	1					
ANR	1374465	Condition	-- curr >= end	117:13:4354:4366	1373944	0	True				
ANR	1374466	RelationalExpression	-- curr >= end		1373944	0		>=			
ANR	1374467	UnaryExpression	-- curr		1373944	0					
ANR	1374468	IncDec	--		1373944	0					
ANR	1374469	Identifier	curr		1373944	1					
ANR	1374470	Identifier	end		1373944	1					
ANR	1374471	CompoundStatement		75:28:2453:2453	1373944	1					
ANR	1374472	IfStatement	if ( curr -> opcode == ZEND_FAST_CALL )		1373944	0					
ANR	1374473	Condition	curr -> opcode == ZEND_FAST_CALL	118:11:4382:4411	1373944	0	True				
ANR	1374474	EqualityExpression	curr -> opcode == ZEND_FAST_CALL		1373944	0		==			
ANR	1374475	PtrMemberAccess	curr -> opcode		1373944	0					
ANR	1374476	Identifier	curr		1373944	0					
ANR	1374477	Identifier	opcode		1373944	1					
ANR	1374478	Identifier	ZEND_FAST_CALL		1373944	1					
ANR	1374479	CompoundStatement		76:43:2498:2498	1373944	1					
ANR	1374480	ExpressionStatement	use_new_var = 1	119:8:4424:4439	1373944	0	True				
ANR	1374481	AssignmentExpression	use_new_var = 1		1373944	0		=			
ANR	1374482	Identifier	use_new_var		1373944	0					
ANR	1374483	PrimaryExpression	1		1373944	1					
ANR	1374484	BreakStatement	break ;	120:8:4449:4454	1373944	1	True				
ANR	1374485	ElseStatement	else		1373944	0					
ANR	1374486	IfStatement	if ( curr -> opcode != ZEND_FREE && curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION )		1373944	0					
ANR	1374487	Condition	curr -> opcode != ZEND_FREE && curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION	121:18:4474:4669	1373944	0	True				
ANR	1374488	AndExpression	curr -> opcode != ZEND_FREE && curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION		1373944	0		&&			
ANR	1374489	EqualityExpression	curr -> opcode != ZEND_FREE		1373944	0		!=			
ANR	1374490	PtrMemberAccess	curr -> opcode		1373944	0					
ANR	1374491	Identifier	curr		1373944	0					
ANR	1374492	Identifier	opcode		1373944	1					
ANR	1374493	Identifier	ZEND_FREE		1373944	1					
ANR	1374494	AndExpression	curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION		1373944	1		&&			
ANR	1374495	EqualityExpression	curr -> opcode != ZEND_FE_FREE		1373944	0		!=			
ANR	1374496	PtrMemberAccess	curr -> opcode		1373944	0					
ANR	1374497	Identifier	curr		1373944	0					
ANR	1374498	Identifier	opcode		1373944	1					
ANR	1374499	Identifier	ZEND_FE_FREE		1373944	1					
ANR	1374500	AndExpression	curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION		1373944	1		&&			
ANR	1374501	EqualityExpression	curr -> opcode != ZEND_VERIFY_RETURN_TYPE		1373944	0		!=			
ANR	1374502	PtrMemberAccess	curr -> opcode		1373944	0					
ANR	1374503	Identifier	curr		1373944	0					
ANR	1374504	Identifier	opcode		1373944	1					
ANR	1374505	Identifier	ZEND_VERIFY_RETURN_TYPE		1373944	1					
ANR	1374506	EqualityExpression	curr -> opcode != ZEND_DISCARD_EXCEPTION		1373944	1		!=			
ANR	1374507	PtrMemberAccess	curr -> opcode		1373944	0					
ANR	1374508	Identifier	curr		1373944	0					
ANR	1374509	Identifier	opcode		1373944	1					
ANR	1374510	Identifier	ZEND_DISCARD_EXCEPTION		1373944	1					
ANR	1374511	CompoundStatement		82:58:2756:2756	1373944	1					
ANR	1374512	BreakStatement	break ;	125:8:4682:4687	1373944	0	True				
ANR	1374513	IfStatement	if ( use_new_var )		1373944	2					
ANR	1374514	Condition	use_new_var	129:9:4722:4732	1373944	0	True				
ANR	1374515	Identifier	use_new_var		1373944	0					
ANR	1374516	CompoundStatement		87:22:2819:2819	1373944	1					
ANR	1374517	ExpressionStatement	i = ++ max	130:6:4743:4752	1373944	0	True				
ANR	1374518	AssignmentExpression	i = ++ max		1373944	0		=			
ANR	1374519	Identifier	i		1373944	0					
ANR	1374520	UnaryExpression	++ max		1373944	1					
ANR	1374521	IncDec	++		1373944	0					
ANR	1374522	Identifier	max		1373944	1					
ANR	1374523	ExpressionStatement	"zend_bitset_incl ( taken_T , i )"	131:6:4760:4788	1373944	1	True				
ANR	1374524	CallExpression	"zend_bitset_incl ( taken_T , i )"		1373944	0					
ANR	1374525	Callee	zend_bitset_incl		1373944	0					
ANR	1374526	Identifier	zend_bitset_incl		1373944	0					
ANR	1374527	ArgumentList	taken_T		1373944	1					
ANR	1374528	Argument	taken_T		1373944	0					
ANR	1374529	Identifier	taken_T		1373944	0					
ANR	1374530	Argument	i		1373944	1					
ANR	1374531	Identifier	i		1373944	0					
ANR	1374532	ElseStatement	else		1373944	0					
ANR	1374533	CompoundStatement		90:12:2886:2886	1373944	0					
ANR	1374534	ExpressionStatement	GET_AVAILABLE_T ( )	133:6:4810:4827	1373944	0	True				
ANR	1374535	CallExpression	GET_AVAILABLE_T ( )		1373944	0					
ANR	1374536	Callee	GET_AVAILABLE_T		1373944	0					
ANR	1374537	Identifier	GET_AVAILABLE_T		1373944	0					
ANR	1374538	ArgumentList			1373944	1					
ANR	1374539	ExpressionStatement	map_T [ currT ] = i	135:5:4841:4857	1373944	3	True				
ANR	1374540	AssignmentExpression	map_T [ currT ] = i		1373944	0		=			
ANR	1374541	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374542	Identifier	map_T		1373944	0					
ANR	1374543	Identifier	currT		1373944	1					
ANR	1374544	Identifier	i		1373944	1					
ANR	1374545	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	136:5:4864:4896	1373944	4	True				
ANR	1374546	CallExpression	"zend_bitset_incl ( valid_T , currT )"		1373944	0					
ANR	1374547	Callee	zend_bitset_incl		1373944	0					
ANR	1374548	Identifier	zend_bitset_incl		1373944	0					
ANR	1374549	ArgumentList	valid_T		1373944	1					
ANR	1374550	Argument	valid_T		1373944	0					
ANR	1374551	Identifier	valid_T		1373944	0					
ANR	1374552	Argument	currT		1373944	1					
ANR	1374553	Identifier	currT		1373944	0					
ANR	1374554	ExpressionStatement	ZEND_OP1 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )	138:4:4908:4961	1373944	1	True				
ANR	1374555	AssignmentExpression	ZEND_OP1 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )		1373944	0		=			
ANR	1374556	MemberAccess	ZEND_OP1 ( opline ) . var		1373944	0					
ANR	1374557	CallExpression	ZEND_OP1 ( opline )		1373944	0					
ANR	1374558	Callee	ZEND_OP1		1373944	0					
ANR	1374559	Identifier	ZEND_OP1		1373944	0					
ANR	1374560	ArgumentList	opline		1373944	1					
ANR	1374561	Argument	opline		1373944	0					
ANR	1374562	Identifier	opline		1373944	0					
ANR	1374563	Identifier	var		1373944	1					
ANR	1374564	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		1373944	1					
ANR	1374565	Callee	NUM_VAR		1373944	0					
ANR	1374566	Identifier	NUM_VAR		1373944	0					
ANR	1374567	ArgumentList	map_T [ currT ] + offset		1373944	1					
ANR	1374568	Argument	map_T [ currT ] + offset		1373944	0					
ANR	1374569	AdditiveExpression	map_T [ currT ] + offset		1373944	0		+			
ANR	1374570	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374571	Identifier	map_T		1373944	0					
ANR	1374572	Identifier	currT		1373944	1					
ANR	1374573	Identifier	offset		1373944	1					
ANR	1374574	IfStatement	if ( opline -> opcode == ZEND_OP_DATA && ( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM )		1373944	1					
ANR	1374575	Condition	opline -> opcode == ZEND_OP_DATA && ( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM	143:6:5000:5076	1373944	0	True				
ANR	1374576	AndExpression	opline -> opcode == ZEND_OP_DATA && ( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM		1373944	0		&&			
ANR	1374577	EqualityExpression	opline -> opcode == ZEND_OP_DATA		1373944	0		==			
ANR	1374578	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374579	Identifier	opline		1373944	0					
ANR	1374580	Identifier	opcode		1373944	1					
ANR	1374581	Identifier	ZEND_OP_DATA		1373944	1					
ANR	1374582	EqualityExpression	( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM		1373944	1		==			
ANR	1374583	PtrMemberAccess	( opline - 1 ) -> opcode		1373944	0					
ANR	1374584	AdditiveExpression	opline - 1		1373944	0		-			
ANR	1374585	Identifier	opline		1373944	0					
ANR	1374586	PrimaryExpression	1		1373944	1					
ANR	1374587	Identifier	opcode		1373944	1					
ANR	1374588	Identifier	ZEND_ASSIGN_DIM		1373944	1					
ANR	1374589	CompoundStatement		102:45:3163:3163	1373944	1					
ANR	1374590	ExpressionStatement	opline --	145:6:5087:5095	1373944	0	True				
ANR	1374591	PostIncDecOperationExpression	opline --		1373944	0					
ANR	1374592	Identifier	opline		1373944	0					
ANR	1374593	IncDec	--		1373944	1					
ANR	1374594	ContinueStatement	continue ;	146:6:5103:5111	1373944	1	True				
ANR	1374595	IfStatement	if ( ( ZEND_OP2_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) ) )		1373944	2					
ANR	1374596	Condition	ZEND_OP2_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	149:6:5124:5170	1373944	0	True				
ANR	1374597	BitAndExpression	ZEND_OP2_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		1373944	0		&			
ANR	1374598	CallExpression	ZEND_OP2_TYPE ( opline )		1373944	0					
ANR	1374599	Callee	ZEND_OP2_TYPE		1373944	0					
ANR	1374600	Identifier	ZEND_OP2_TYPE		1373944	0					
ANR	1374601	ArgumentList	opline		1373944	1					
ANR	1374602	Argument	opline		1373944	0					
ANR	1374603	Identifier	opline		1373944	0					
ANR	1374604	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		1373944	1		|			
ANR	1374605	Identifier	IS_VAR		1373944	0					
ANR	1374606	Identifier	IS_TMP_VAR		1373944	1					
ANR	1374607	CompoundStatement		107:55:3257:3257	1373944	1					
ANR	1374608	ExpressionStatement	currT = VAR_NUM ( ZEND_OP2 ( opline ) . var ) - offset	150:3:5178:5224	1373944	0	True				
ANR	1374609	AssignmentExpression	currT = VAR_NUM ( ZEND_OP2 ( opline ) . var ) - offset		1373944	0		=			
ANR	1374610	Identifier	currT		1373944	0					
ANR	1374611	AdditiveExpression	VAR_NUM ( ZEND_OP2 ( opline ) . var ) - offset		1373944	1		-			
ANR	1374612	CallExpression	VAR_NUM ( ZEND_OP2 ( opline ) . var )		1373944	0					
ANR	1374613	Callee	VAR_NUM		1373944	0					
ANR	1374614	Identifier	VAR_NUM		1373944	0					
ANR	1374615	ArgumentList	ZEND_OP2 ( opline ) . var		1373944	1					
ANR	1374616	Argument	ZEND_OP2 ( opline ) . var		1373944	0					
ANR	1374617	MemberAccess	ZEND_OP2 ( opline ) . var		1373944	0					
ANR	1374618	CallExpression	ZEND_OP2 ( opline )		1373944	0					
ANR	1374619	Callee	ZEND_OP2		1373944	0					
ANR	1374620	Identifier	ZEND_OP2		1373944	0					
ANR	1374621	ArgumentList	opline		1373944	1					
ANR	1374622	Argument	opline		1373944	0					
ANR	1374623	Identifier	opline		1373944	0					
ANR	1374624	Identifier	var		1373944	1					
ANR	1374625	Identifier	offset		1373944	1					
ANR	1374626	IfStatement	"if ( ! zend_bitset_in ( valid_T , currT ) )"		1373944	1					
ANR	1374627	Condition	"! zend_bitset_in ( valid_T , currT )"	151:7:5233:5263	1373944	0	True				
ANR	1374628	UnaryOperationExpression	"! zend_bitset_in ( valid_T , currT )"		1373944	0					
ANR	1374629	UnaryOperator	!		1373944	0					
ANR	1374630	CallExpression	"zend_bitset_in ( valid_T , currT )"		1373944	1					
ANR	1374631	Callee	zend_bitset_in		1373944	0					
ANR	1374632	Identifier	zend_bitset_in		1373944	0					
ANR	1374633	ArgumentList	valid_T		1373944	1					
ANR	1374634	Argument	valid_T		1373944	0					
ANR	1374635	Identifier	valid_T		1373944	0					
ANR	1374636	Argument	currT		1373944	1					
ANR	1374637	Identifier	currT		1373944	0					
ANR	1374638	CompoundStatement		109:40:3350:3350	1373944	1					
ANR	1374639	ExpressionStatement	GET_AVAILABLE_T ( )	152:4:5272:5289	1373944	0	True				
ANR	1374640	CallExpression	GET_AVAILABLE_T ( )		1373944	0					
ANR	1374641	Callee	GET_AVAILABLE_T		1373944	0					
ANR	1374642	Identifier	GET_AVAILABLE_T		1373944	0					
ANR	1374643	ArgumentList			1373944	1					
ANR	1374644	ExpressionStatement	map_T [ currT ] = i	153:4:5295:5311	1373944	1	True				
ANR	1374645	AssignmentExpression	map_T [ currT ] = i		1373944	0		=			
ANR	1374646	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374647	Identifier	map_T		1373944	0					
ANR	1374648	Identifier	currT		1373944	1					
ANR	1374649	Identifier	i		1373944	1					
ANR	1374650	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	154:4:5317:5349	1373944	2	True				
ANR	1374651	CallExpression	"zend_bitset_incl ( valid_T , currT )"		1373944	0					
ANR	1374652	Callee	zend_bitset_incl		1373944	0					
ANR	1374653	Identifier	zend_bitset_incl		1373944	0					
ANR	1374654	ArgumentList	valid_T		1373944	1					
ANR	1374655	Argument	valid_T		1373944	0					
ANR	1374656	Identifier	valid_T		1373944	0					
ANR	1374657	Argument	currT		1373944	1					
ANR	1374658	Identifier	currT		1373944	0					
ANR	1374659	ExpressionStatement	ZEND_OP2 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )	156:3:5359:5412	1373944	2	True				
ANR	1374660	AssignmentExpression	ZEND_OP2 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )		1373944	0		=			
ANR	1374661	MemberAccess	ZEND_OP2 ( opline ) . var		1373944	0					
ANR	1374662	CallExpression	ZEND_OP2 ( opline )		1373944	0					
ANR	1374663	Callee	ZEND_OP2		1373944	0					
ANR	1374664	Identifier	ZEND_OP2		1373944	0					
ANR	1374665	ArgumentList	opline		1373944	1					
ANR	1374666	Argument	opline		1373944	0					
ANR	1374667	Identifier	opline		1373944	0					
ANR	1374668	Identifier	var		1373944	1					
ANR	1374669	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		1373944	1					
ANR	1374670	Callee	NUM_VAR		1373944	0					
ANR	1374671	Identifier	NUM_VAR		1373944	0					
ANR	1374672	ArgumentList	map_T [ currT ] + offset		1373944	1					
ANR	1374673	Argument	map_T [ currT ] + offset		1373944	0					
ANR	1374674	AdditiveExpression	map_T [ currT ] + offset		1373944	0		+			
ANR	1374675	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374676	Identifier	map_T		1373944	0					
ANR	1374677	Identifier	currT		1373944	1					
ANR	1374678	Identifier	offset		1373944	1					
ANR	1374679	IfStatement	if ( opline -> opcode == ZEND_DECLARE_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED )		1373944	3					
ANR	1374680	Condition	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED	159:6:5425:5601	1373944	0	True				
ANR	1374681	OrExpression	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED		1373944	0		||			
ANR	1374682	EqualityExpression	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS		1373944	0		==			
ANR	1374683	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374684	Identifier	opline		1373944	0					
ANR	1374685	Identifier	opcode		1373944	1					
ANR	1374686	Identifier	ZEND_DECLARE_INHERITED_CLASS		1373944	1					
ANR	1374687	OrExpression	opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED		1373944	1		||			
ANR	1374688	EqualityExpression	opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS		1373944	0		==			
ANR	1374689	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374690	Identifier	opline		1373944	0					
ANR	1374691	Identifier	opcode		1373944	1					
ANR	1374692	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS		1373944	1					
ANR	1374693	EqualityExpression	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED		1373944	1		==			
ANR	1374694	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374695	Identifier	opline		1373944	0					
ANR	1374696	Identifier	opcode		1373944	1					
ANR	1374697	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED		1373944	1					
ANR	1374698	CompoundStatement		119:68:3688:3688	1373944	1					
ANR	1374699	ExpressionStatement	currT = VAR_NUM ( opline -> extended_value ) - offset	162:3:5609:5657	1373944	0	True				
ANR	1374700	AssignmentExpression	currT = VAR_NUM ( opline -> extended_value ) - offset		1373944	0		=			
ANR	1374701	Identifier	currT		1373944	0					
ANR	1374702	AdditiveExpression	VAR_NUM ( opline -> extended_value ) - offset		1373944	1		-			
ANR	1374703	CallExpression	VAR_NUM ( opline -> extended_value )		1373944	0					
ANR	1374704	Callee	VAR_NUM		1373944	0					
ANR	1374705	Identifier	VAR_NUM		1373944	0					
ANR	1374706	ArgumentList	opline -> extended_value		1373944	1					
ANR	1374707	Argument	opline -> extended_value		1373944	0					
ANR	1374708	PtrMemberAccess	opline -> extended_value		1373944	0					
ANR	1374709	Identifier	opline		1373944	0					
ANR	1374710	Identifier	extended_value		1373944	1					
ANR	1374711	Identifier	offset		1373944	1					
ANR	1374712	IfStatement	"if ( ! zend_bitset_in ( valid_T , currT ) )"		1373944	1					
ANR	1374713	Condition	"! zend_bitset_in ( valid_T , currT )"	163:7:5666:5696	1373944	0	True				
ANR	1374714	UnaryOperationExpression	"! zend_bitset_in ( valid_T , currT )"		1373944	0					
ANR	1374715	UnaryOperator	!		1373944	0					
ANR	1374716	CallExpression	"zend_bitset_in ( valid_T , currT )"		1373944	1					
ANR	1374717	Callee	zend_bitset_in		1373944	0					
ANR	1374718	Identifier	zend_bitset_in		1373944	0					
ANR	1374719	ArgumentList	valid_T		1373944	1					
ANR	1374720	Argument	valid_T		1373944	0					
ANR	1374721	Identifier	valid_T		1373944	0					
ANR	1374722	Argument	currT		1373944	1					
ANR	1374723	Identifier	currT		1373944	0					
ANR	1374724	CompoundStatement		121:40:3783:3783	1373944	1					
ANR	1374725	ExpressionStatement	GET_AVAILABLE_T ( )	164:4:5705:5722	1373944	0	True				
ANR	1374726	CallExpression	GET_AVAILABLE_T ( )		1373944	0					
ANR	1374727	Callee	GET_AVAILABLE_T		1373944	0					
ANR	1374728	Identifier	GET_AVAILABLE_T		1373944	0					
ANR	1374729	ArgumentList			1373944	1					
ANR	1374730	ExpressionStatement	map_T [ currT ] = i	165:4:5728:5744	1373944	1	True				
ANR	1374731	AssignmentExpression	map_T [ currT ] = i		1373944	0		=			
ANR	1374732	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374733	Identifier	map_T		1373944	0					
ANR	1374734	Identifier	currT		1373944	1					
ANR	1374735	Identifier	i		1373944	1					
ANR	1374736	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	166:4:5750:5782	1373944	2	True				
ANR	1374737	CallExpression	"zend_bitset_incl ( valid_T , currT )"		1373944	0					
ANR	1374738	Callee	zend_bitset_incl		1373944	0					
ANR	1374739	Identifier	zend_bitset_incl		1373944	0					
ANR	1374740	ArgumentList	valid_T		1373944	1					
ANR	1374741	Argument	valid_T		1373944	0					
ANR	1374742	Identifier	valid_T		1373944	0					
ANR	1374743	Argument	currT		1373944	1					
ANR	1374744	Identifier	currT		1373944	0					
ANR	1374745	ExpressionStatement	opline -> extended_value = NUM_VAR ( map_T [ currT ] + offset )	168:3:5792:5847	1373944	2	True				
ANR	1374746	AssignmentExpression	opline -> extended_value = NUM_VAR ( map_T [ currT ] + offset )		1373944	0		=			
ANR	1374747	PtrMemberAccess	opline -> extended_value		1373944	0					
ANR	1374748	Identifier	opline		1373944	0					
ANR	1374749	Identifier	extended_value		1373944	1					
ANR	1374750	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		1373944	1					
ANR	1374751	Callee	NUM_VAR		1373944	0					
ANR	1374752	Identifier	NUM_VAR		1373944	0					
ANR	1374753	ArgumentList	map_T [ currT ] + offset		1373944	1					
ANR	1374754	Argument	map_T [ currT ] + offset		1373944	0					
ANR	1374755	AdditiveExpression	map_T [ currT ] + offset		1373944	0		+			
ANR	1374756	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374757	Identifier	map_T		1373944	0					
ANR	1374758	Identifier	currT		1373944	1					
ANR	1374759	Identifier	offset		1373944	1					
ANR	1374760	IfStatement	if ( opline -> opcode == ZEND_ASSIGN_DIM && ( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR ) )		1373944	4					
ANR	1374761	Condition	opline -> opcode == ZEND_ASSIGN_DIM && ( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )	172:6:5928:6065	1373944	0	True				
ANR	1374762	AndExpression	opline -> opcode == ZEND_ASSIGN_DIM && ( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )		1373944	0		&&			
ANR	1374763	EqualityExpression	opline -> opcode == ZEND_ASSIGN_DIM		1373944	0		==			
ANR	1374764	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374765	Identifier	opline		1373944	0					
ANR	1374766	Identifier	opcode		1373944	1					
ANR	1374767	Identifier	ZEND_ASSIGN_DIM		1373944	1					
ANR	1374768	AndExpression	( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )		1373944	1		&&			
ANR	1374769	EqualityExpression	( opline + 1 ) -> opcode == ZEND_OP_DATA		1373944	0		==			
ANR	1374770	PtrMemberAccess	( opline + 1 ) -> opcode		1373944	0					
ANR	1374771	AdditiveExpression	opline + 1		1373944	0		+			
ANR	1374772	Identifier	opline		1373944	0					
ANR	1374773	PrimaryExpression	1		1373944	1					
ANR	1374774	Identifier	opcode		1373944	1					
ANR	1374775	Identifier	ZEND_OP_DATA		1373944	1					
ANR	1374776	BitAndExpression	ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )		1373944	1		&			
ANR	1374777	CallExpression	ZEND_OP2_TYPE ( opline + 1 )		1373944	0					
ANR	1374778	Callee	ZEND_OP2_TYPE		1373944	0					
ANR	1374779	Identifier	ZEND_OP2_TYPE		1373944	0					
ANR	1374780	ArgumentList	opline + 1		1373944	1					
ANR	1374781	Argument	opline + 1		1373944	0					
ANR	1374782	AdditiveExpression	opline + 1		1373944	0		+			
ANR	1374783	Identifier	opline		1373944	0					
ANR	1374784	PrimaryExpression	1		1373944	1					
ANR	1374785	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		1373944	1		|			
ANR	1374786	Identifier	IS_VAR		1373944	0					
ANR	1374787	Identifier	IS_TMP_VAR		1373944	1					
ANR	1374788	CompoundStatement		132:57:4152:4152	1373944	1					
ANR	1374789	ExpressionStatement	currT = VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var ) - offset	175:3:6073:6123	1373944	0	True				
ANR	1374790	AssignmentExpression	currT = VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var ) - offset		1373944	0		=			
ANR	1374791	Identifier	currT		1373944	0					
ANR	1374792	AdditiveExpression	VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var ) - offset		1373944	1		-			
ANR	1374793	CallExpression	VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var )		1373944	0					
ANR	1374794	Callee	VAR_NUM		1373944	0					
ANR	1374795	Identifier	VAR_NUM		1373944	0					
ANR	1374796	ArgumentList	ZEND_OP2 ( opline + 1 ) . var		1373944	1					
ANR	1374797	Argument	ZEND_OP2 ( opline + 1 ) . var		1373944	0					
ANR	1374798	MemberAccess	ZEND_OP2 ( opline + 1 ) . var		1373944	0					
ANR	1374799	CallExpression	ZEND_OP2 ( opline + 1 )		1373944	0					
ANR	1374800	Callee	ZEND_OP2		1373944	0					
ANR	1374801	Identifier	ZEND_OP2		1373944	0					
ANR	1374802	ArgumentList	opline + 1		1373944	1					
ANR	1374803	Argument	opline + 1		1373944	0					
ANR	1374804	AdditiveExpression	opline + 1		1373944	0		+			
ANR	1374805	Identifier	opline		1373944	0					
ANR	1374806	PrimaryExpression	1		1373944	1					
ANR	1374807	Identifier	var		1373944	1					
ANR	1374808	Identifier	offset		1373944	1					
ANR	1374809	ExpressionStatement	GET_AVAILABLE_T ( )	176:3:6128:6145	1373944	1	True				
ANR	1374810	CallExpression	GET_AVAILABLE_T ( )		1373944	0					
ANR	1374811	Callee	GET_AVAILABLE_T		1373944	0					
ANR	1374812	Identifier	GET_AVAILABLE_T		1373944	0					
ANR	1374813	ArgumentList			1373944	1					
ANR	1374814	ExpressionStatement	map_T [ currT ] = i	177:3:6150:6166	1373944	2	True				
ANR	1374815	AssignmentExpression	map_T [ currT ] = i		1373944	0		=			
ANR	1374816	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374817	Identifier	map_T		1373944	0					
ANR	1374818	Identifier	currT		1373944	1					
ANR	1374819	Identifier	i		1373944	1					
ANR	1374820	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	178:3:6171:6203	1373944	3	True				
ANR	1374821	CallExpression	"zend_bitset_incl ( valid_T , currT )"		1373944	0					
ANR	1374822	Callee	zend_bitset_incl		1373944	0					
ANR	1374823	Identifier	zend_bitset_incl		1373944	0					
ANR	1374824	ArgumentList	valid_T		1373944	1					
ANR	1374825	Argument	valid_T		1373944	0					
ANR	1374826	Identifier	valid_T		1373944	0					
ANR	1374827	Argument	currT		1373944	1					
ANR	1374828	Identifier	currT		1373944	0					
ANR	1374829	ExpressionStatement	"zend_bitset_excl ( taken_T , i )"	179:3:6208:6236	1373944	4	True				
ANR	1374830	CallExpression	"zend_bitset_excl ( taken_T , i )"		1373944	0					
ANR	1374831	Callee	zend_bitset_excl		1373944	0					
ANR	1374832	Identifier	zend_bitset_excl		1373944	0					
ANR	1374833	ArgumentList	taken_T		1373944	1					
ANR	1374834	Argument	taken_T		1373944	0					
ANR	1374835	Identifier	taken_T		1373944	0					
ANR	1374836	Argument	i		1373944	1					
ANR	1374837	Identifier	i		1373944	0					
ANR	1374838	ExpressionStatement	ZEND_OP2 ( opline + 1 ) . var = NUM_VAR ( i + offset )	180:3:6241:6287	1373944	5	True				
ANR	1374839	AssignmentExpression	ZEND_OP2 ( opline + 1 ) . var = NUM_VAR ( i + offset )		1373944	0		=			
ANR	1374840	MemberAccess	ZEND_OP2 ( opline + 1 ) . var		1373944	0					
ANR	1374841	CallExpression	ZEND_OP2 ( opline + 1 )		1373944	0					
ANR	1374842	Callee	ZEND_OP2		1373944	0					
ANR	1374843	Identifier	ZEND_OP2		1373944	0					
ANR	1374844	ArgumentList	opline + 1		1373944	1					
ANR	1374845	Argument	opline + 1		1373944	0					
ANR	1374846	AdditiveExpression	opline + 1		1373944	0		+			
ANR	1374847	Identifier	opline		1373944	0					
ANR	1374848	PrimaryExpression	1		1373944	1					
ANR	1374849	Identifier	var		1373944	1					
ANR	1374850	CallExpression	NUM_VAR ( i + offset )		1373944	1					
ANR	1374851	Callee	NUM_VAR		1373944	0					
ANR	1374852	Identifier	NUM_VAR		1373944	0					
ANR	1374853	ArgumentList	i + offset		1373944	1					
ANR	1374854	Argument	i + offset		1373944	0					
ANR	1374855	AdditiveExpression	i + offset		1373944	0		+			
ANR	1374856	Identifier	i		1373944	0					
ANR	1374857	Identifier	offset		1373944	1					
ANR	1374858	ExpressionStatement	var_to_free = i	181:3:6292:6307	1373944	6	True				
ANR	1374859	AssignmentExpression	var_to_free = i		1373944	0		=			
ANR	1374860	Identifier	var_to_free		1373944	0					
ANR	1374861	Identifier	i		1373944	1					
ANR	1374862	IfStatement	if ( ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) )		1373944	5					
ANR	1374863	Condition	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	184:6:6320:6367	1373944	0	True				
ANR	1374864	BitAndExpression	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		1373944	0		&			
ANR	1374865	CallExpression	ZEND_RESULT_TYPE ( opline )		1373944	0					
ANR	1374866	Callee	ZEND_RESULT_TYPE		1373944	0					
ANR	1374867	Identifier	ZEND_RESULT_TYPE		1373944	0					
ANR	1374868	ArgumentList	opline		1373944	1					
ANR	1374869	Argument	opline		1373944	0					
ANR	1374870	Identifier	opline		1373944	0					
ANR	1374871	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		1373944	1		|			
ANR	1374872	Identifier	IS_VAR		1373944	0					
ANR	1374873	Identifier	IS_TMP_VAR		1373944	1					
ANR	1374874	CompoundStatement		142:56:4454:4454	1373944	1					
ANR	1374875	ExpressionStatement	currT = VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset	185:3:6375:6424	1373944	0	True				
ANR	1374876	AssignmentExpression	currT = VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset		1373944	0		=			
ANR	1374877	Identifier	currT		1373944	0					
ANR	1374878	AdditiveExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset		1373944	1		-			
ANR	1374879	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		1373944	0					
ANR	1374880	Callee	VAR_NUM		1373944	0					
ANR	1374881	Identifier	VAR_NUM		1373944	0					
ANR	1374882	ArgumentList	ZEND_RESULT ( opline ) . var		1373944	1					
ANR	1374883	Argument	ZEND_RESULT ( opline ) . var		1373944	0					
ANR	1374884	MemberAccess	ZEND_RESULT ( opline ) . var		1373944	0					
ANR	1374885	CallExpression	ZEND_RESULT ( opline )		1373944	0					
ANR	1374886	Callee	ZEND_RESULT		1373944	0					
ANR	1374887	Identifier	ZEND_RESULT		1373944	0					
ANR	1374888	ArgumentList	opline		1373944	1					
ANR	1374889	Argument	opline		1373944	0					
ANR	1374890	Identifier	opline		1373944	0					
ANR	1374891	Identifier	var		1373944	1					
ANR	1374892	Identifier	offset		1373944	1					
ANR	1374893	IfStatement	"if ( zend_bitset_in ( valid_T , currT ) )"		1373944	1					
ANR	1374894	Condition	"zend_bitset_in ( valid_T , currT )"	186:7:6433:6462	1373944	0	True				
ANR	1374895	CallExpression	"zend_bitset_in ( valid_T , currT )"		1373944	0					
ANR	1374896	Callee	zend_bitset_in		1373944	0					
ANR	1374897	Identifier	zend_bitset_in		1373944	0					
ANR	1374898	ArgumentList	valid_T		1373944	1					
ANR	1374899	Argument	valid_T		1373944	0					
ANR	1374900	Identifier	valid_T		1373944	0					
ANR	1374901	Argument	currT		1373944	1					
ANR	1374902	Identifier	currT		1373944	0					
ANR	1374903	CompoundStatement		144:39:4549:4549	1373944	1					
ANR	1374904	IfStatement	if ( start_of_T [ currT ] == opline )		1373944	0					
ANR	1374905	Condition	start_of_T [ currT ] == opline	187:8:6475:6501	1373944	0	True				
ANR	1374906	EqualityExpression	start_of_T [ currT ] == opline		1373944	0		==			
ANR	1374907	ArrayIndexing	start_of_T [ currT ]		1373944	0					
ANR	1374908	Identifier	start_of_T		1373944	0					
ANR	1374909	Identifier	currT		1373944	1					
ANR	1374910	Identifier	opline		1373944	1					
ANR	1374911	CompoundStatement		145:37:4588:4588	1373944	1					
ANR	1374912	IfStatement	if ( opline -> opcode != ZEND_FAST_CALL )		1373944	0					
ANR	1374913	Condition	opline -> opcode != ZEND_FAST_CALL	191:9:6686:6717	1373944	0	True				
ANR	1374914	EqualityExpression	opline -> opcode != ZEND_FAST_CALL		1373944	0		!=			
ANR	1374915	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374916	Identifier	opline		1373944	0					
ANR	1374917	Identifier	opcode		1373944	1					
ANR	1374918	Identifier	ZEND_FAST_CALL		1373944	1					
ANR	1374919	CompoundStatement		149:43:4804:4804	1373944	1					
ANR	1374920	ExpressionStatement	"zend_bitset_excl ( taken_T , map_T [ currT ] )"	192:6:6728:6767	1373944	0	True				
ANR	1374921	CallExpression	"zend_bitset_excl ( taken_T , map_T [ currT ] )"		1373944	0					
ANR	1374922	Callee	zend_bitset_excl		1373944	0					
ANR	1374923	Identifier	zend_bitset_excl		1373944	0					
ANR	1374924	ArgumentList	taken_T		1373944	1					
ANR	1374925	Argument	taken_T		1373944	0					
ANR	1374926	Identifier	taken_T		1373944	0					
ANR	1374927	Argument	map_T [ currT ]		1373944	1					
ANR	1374928	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374929	Identifier	map_T		1373944	0					
ANR	1374930	Identifier	currT		1373944	1					
ANR	1374931	ExpressionStatement	ZEND_RESULT ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )	195:4:6786:6842	1373944	1	True				
ANR	1374932	AssignmentExpression	ZEND_RESULT ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )		1373944	0		=			
ANR	1374933	MemberAccess	ZEND_RESULT ( opline ) . var		1373944	0					
ANR	1374934	CallExpression	ZEND_RESULT ( opline )		1373944	0					
ANR	1374935	Callee	ZEND_RESULT		1373944	0					
ANR	1374936	Identifier	ZEND_RESULT		1373944	0					
ANR	1374937	ArgumentList	opline		1373944	1					
ANR	1374938	Argument	opline		1373944	0					
ANR	1374939	Identifier	opline		1373944	0					
ANR	1374940	Identifier	var		1373944	1					
ANR	1374941	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		1373944	1					
ANR	1374942	Callee	NUM_VAR		1373944	0					
ANR	1374943	Identifier	NUM_VAR		1373944	0					
ANR	1374944	ArgumentList	map_T [ currT ] + offset		1373944	1					
ANR	1374945	Argument	map_T [ currT ] + offset		1373944	0					
ANR	1374946	AdditiveExpression	map_T [ currT ] + offset		1373944	0		+			
ANR	1374947	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1374948	Identifier	map_T		1373944	0					
ANR	1374949	Identifier	currT		1373944	1					
ANR	1374950	Identifier	offset		1373944	1					
ANR	1374951	IfStatement	if ( opline -> opcode == ZEND_ROPE_INIT )		1373944	2					
ANR	1374952	Condition	opline -> opcode == ZEND_ROPE_INIT	196:8:6852:6883	1373944	0	True				
ANR	1374953	EqualityExpression	opline -> opcode == ZEND_ROPE_INIT		1373944	0		==			
ANR	1374954	PtrMemberAccess	opline -> opcode		1373944	0					
ANR	1374955	Identifier	opline		1373944	0					
ANR	1374956	Identifier	opcode		1373944	1					
ANR	1374957	Identifier	ZEND_ROPE_INIT		1373944	1					
ANR	1374958	CompoundStatement		154:42:4970:4970	1373944	1					
ANR	1374959	IfStatement	if ( start_of_T [ currT ] == opline )		1373944	0					
ANR	1374960	Condition	start_of_T [ currT ] == opline	197:9:6897:6923	1373944	0	True				
ANR	1374961	EqualityExpression	start_of_T [ currT ] == opline		1373944	0		==			
ANR	1374962	ArrayIndexing	start_of_T [ currT ]		1373944	0					
ANR	1374963	Identifier	start_of_T		1373944	0					
ANR	1374964	Identifier	currT		1373944	1					
ANR	1374965	Identifier	opline		1373944	1					
ANR	1374966	CompoundStatement		156:6:5018:5118	1373944	1					
ANR	1374967	IdentifierDeclStatement	uint32_t num = ( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval ) ;	198:6:6934:7034	1373944	0	True				
ANR	1374968	IdentifierDecl	num = ( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		1373944	0					
ANR	1374969	IdentifierDeclType	uint32_t		1373944	0					
ANR	1374970	Identifier	num		1373944	1					
ANR	1374971	AssignmentExpression	num = ( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		1373944	2		=			
ANR	1374972	Identifier	num		1373944	0					
ANR	1374973	MultiplicativeExpression	( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		1373944	1		/			
ANR	1374974	AdditiveExpression	( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 )		1373944	0		+			
ANR	1374975	MultiplicativeExpression	opline -> extended_value * sizeof ( zend_string * )		1373944	0		*			
ANR	1374976	PtrMemberAccess	opline -> extended_value		1373944	0					
ANR	1374977	Identifier	opline		1373944	0					
ANR	1374978	Identifier	extended_value		1373944	1					
ANR	1374979	SizeofExpression	sizeof ( zend_string * )		1373944	1					
ANR	1374980	Sizeof	sizeof		1373944	0					
ANR	1374981	SizeofOperand	zend_string *		1373944	1					
ANR	1374982	AdditiveExpression	sizeof ( zval ) - 1		1373944	1		-			
ANR	1374983	SizeofExpression	sizeof ( zval )		1373944	0					
ANR	1374984	Sizeof	sizeof		1373944	0					
ANR	1374985	SizeofOperand	zval		1373944	1					
ANR	1374986	PrimaryExpression	1		1373944	1					
ANR	1374987	SizeofExpression	sizeof ( zval )		1373944	1					
ANR	1374988	Sizeof	sizeof		1373944	0					
ANR	1374989	SizeofOperand	zval		1373944	1					
ANR	1374990	WhileStatement	while ( num > 1 )		1373944	1					
ANR	1374991	Condition	num > 1	199:13:7049:7055	1373944	0	True				
ANR	1374992	RelationalExpression	num > 1		1373944	0		>			
ANR	1374993	Identifier	num		1373944	0					
ANR	1374994	PrimaryExpression	1		1373944	1					
ANR	1374995	CompoundStatement		157:22:5142:5142	1373944	1					
ANR	1374996	ExpressionStatement	num --	200:7:7067:7072	1373944	0	True				
ANR	1374997	PostIncDecOperationExpression	num --		1373944	0					
ANR	1374998	Identifier	num		1373944	0					
ANR	1374999	IncDec	--		1373944	1					
ANR	1375000	ExpressionStatement	"zend_bitset_excl ( taken_T , map_T [ currT ] + num )"	201:7:7081:7124	1373944	1	True				
ANR	1375001	CallExpression	"zend_bitset_excl ( taken_T , map_T [ currT ] + num )"		1373944	0					
ANR	1375002	Callee	zend_bitset_excl		1373944	0					
ANR	1375003	Identifier	zend_bitset_excl		1373944	0					
ANR	1375004	ArgumentList	taken_T		1373944	1					
ANR	1375005	Argument	taken_T		1373944	0					
ANR	1375006	Identifier	taken_T		1373944	0					
ANR	1375007	Argument	map_T [ currT ] + num		1373944	1					
ANR	1375008	AdditiveExpression	map_T [ currT ] + num		1373944	0		+			
ANR	1375009	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1375010	Identifier	map_T		1373944	0					
ANR	1375011	Identifier	currT		1373944	1					
ANR	1375012	Identifier	num		1373944	1					
ANR	1375013	ElseStatement	else		1373944	0					
ANR	1375014	CompoundStatement		163:10:5241:5241	1373944	0					
ANR	1375015	ExpressionStatement	GET_AVAILABLE_T ( )	206:4:7254:7271	1373944	0	True				
ANR	1375016	CallExpression	GET_AVAILABLE_T ( )		1373944	0					
ANR	1375017	Callee	GET_AVAILABLE_T		1373944	0					
ANR	1375018	Identifier	GET_AVAILABLE_T		1373944	0					
ANR	1375019	ArgumentList			1373944	1					
ANR	1375020	IfStatement	if ( RESULT_UNUSED ( opline ) )		1373944	1					
ANR	1375021	Condition	RESULT_UNUSED ( opline )	208:8:7282:7302	1373944	0	True				
ANR	1375022	CallExpression	RESULT_UNUSED ( opline )		1373944	0					
ANR	1375023	Callee	RESULT_UNUSED		1373944	0					
ANR	1375024	Identifier	RESULT_UNUSED		1373944	0					
ANR	1375025	ArgumentList	opline		1373944	1					
ANR	1375026	Argument	opline		1373944	0					
ANR	1375027	Identifier	opline		1373944	0					
ANR	1375028	CompoundStatement		166:31:5389:5389	1373944	1					
ANR	1375029	ExpressionStatement	"zend_bitset_excl ( taken_T , i )"	209:5:7312:7340	1373944	0	True				
ANR	1375030	CallExpression	"zend_bitset_excl ( taken_T , i )"		1373944	0					
ANR	1375031	Callee	zend_bitset_excl		1373944	0					
ANR	1375032	Identifier	zend_bitset_excl		1373944	0					
ANR	1375033	ArgumentList	taken_T		1373944	1					
ANR	1375034	Argument	taken_T		1373944	0					
ANR	1375035	Identifier	taken_T		1373944	0					
ANR	1375036	Argument	i		1373944	1					
ANR	1375037	Identifier	i		1373944	0					
ANR	1375038	ElseStatement	else		1373944	0					
ANR	1375039	CompoundStatement		168:11:5437:5437	1373944	0					
ANR	1375040	ExpressionStatement	map_T [ currT ] = i	212:5:7439:7455	1373944	0	True				
ANR	1375041	AssignmentExpression	map_T [ currT ] = i		1373944	0		=			
ANR	1375042	ArrayIndexing	map_T [ currT ]		1373944	0					
ANR	1375043	Identifier	map_T		1373944	0					
ANR	1375044	Identifier	currT		1373944	1					
ANR	1375045	Identifier	i		1373944	1					
ANR	1375046	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	213:5:7462:7494	1373944	1	True				
ANR	1375047	CallExpression	"zend_bitset_incl ( valid_T , currT )"		1373944	0					
ANR	1375048	Callee	zend_bitset_incl		1373944	0					
ANR	1375049	Identifier	zend_bitset_incl		1373944	0					
ANR	1375050	ArgumentList	valid_T		1373944	1					
ANR	1375051	Argument	valid_T		1373944	0					
ANR	1375052	Identifier	valid_T		1373944	0					
ANR	1375053	Argument	currT		1373944	1					
ANR	1375054	Identifier	currT		1373944	0					
ANR	1375055	ExpressionStatement	ZEND_RESULT ( opline ) . var = NUM_VAR ( i + offset )	215:4:7506:7551	1373944	2	True				
ANR	1375056	AssignmentExpression	ZEND_RESULT ( opline ) . var = NUM_VAR ( i + offset )		1373944	0		=			
ANR	1375057	MemberAccess	ZEND_RESULT ( opline ) . var		1373944	0					
ANR	1375058	CallExpression	ZEND_RESULT ( opline )		1373944	0					
ANR	1375059	Callee	ZEND_RESULT		1373944	0					
ANR	1375060	Identifier	ZEND_RESULT		1373944	0					
ANR	1375061	ArgumentList	opline		1373944	1					
ANR	1375062	Argument	opline		1373944	0					
ANR	1375063	Identifier	opline		1373944	0					
ANR	1375064	Identifier	var		1373944	1					
ANR	1375065	CallExpression	NUM_VAR ( i + offset )		1373944	1					
ANR	1375066	Callee	NUM_VAR		1373944	0					
ANR	1375067	Identifier	NUM_VAR		1373944	0					
ANR	1375068	ArgumentList	i + offset		1373944	1					
ANR	1375069	Argument	i + offset		1373944	0					
ANR	1375070	AdditiveExpression	i + offset		1373944	0		+			
ANR	1375071	Identifier	i		1373944	0					
ANR	1375072	Identifier	offset		1373944	1					
ANR	1375073	IfStatement	if ( var_to_free >= 0 )		1373944	6					
ANR	1375074	Condition	var_to_free >= 0	219:6:7569:7584	1373944	0	True				
ANR	1375075	RelationalExpression	var_to_free >= 0		1373944	0		>=			
ANR	1375076	Identifier	var_to_free		1373944	0					
ANR	1375077	PrimaryExpression	0		1373944	1					
ANR	1375078	CompoundStatement		177:24:5671:5671	1373944	1					
ANR	1375079	ExpressionStatement	"zend_bitset_excl ( taken_T , var_to_free )"	220:3:7592:7630	1373944	0	True				
ANR	1375080	CallExpression	"zend_bitset_excl ( taken_T , var_to_free )"		1373944	0					
ANR	1375081	Callee	zend_bitset_excl		1373944	0					
ANR	1375082	Identifier	zend_bitset_excl		1373944	0					
ANR	1375083	ArgumentList	taken_T		1373944	1					
ANR	1375084	Argument	taken_T		1373944	0					
ANR	1375085	Identifier	taken_T		1373944	0					
ANR	1375086	Argument	var_to_free		1373944	1					
ANR	1375087	Identifier	var_to_free		1373944	0					
ANR	1375088	ExpressionStatement	var_to_free = - 1	221:3:7635:7651	1373944	1	True				
ANR	1375089	AssignmentExpression	var_to_free = - 1		1373944	0		=			
ANR	1375090	Identifier	var_to_free		1373944	0					
ANR	1375091	UnaryOperationExpression	- 1		1373944	1					
ANR	1375092	UnaryOperator	-		1373944	0					
ANR	1375093	PrimaryExpression	1		1373944	1					
ANR	1375094	ExpressionStatement	opline --	224:2:7660:7668	1373944	7	True				
ANR	1375095	PostIncDecOperationExpression	opline --		1373944	0					
ANR	1375096	Identifier	opline		1373944	0					
ANR	1375097	IncDec	--		1373944	1					
ANR	1375098	ExpressionStatement	"zend_arena_release ( & ctx -> arena , checkpoint )"	227:1:7675:7718	1373944	26	True				
ANR	1375099	CallExpression	"zend_arena_release ( & ctx -> arena , checkpoint )"		1373944	0					
ANR	1375100	Callee	zend_arena_release		1373944	0					
ANR	1375101	Identifier	zend_arena_release		1373944	0					
ANR	1375102	ArgumentList	& ctx -> arena		1373944	1					
ANR	1375103	Argument	& ctx -> arena		1373944	0					
ANR	1375104	UnaryOperationExpression	& ctx -> arena		1373944	0					
ANR	1375105	UnaryOperator	&		1373944	0					
ANR	1375106	PtrMemberAccess	ctx -> arena		1373944	1					
ANR	1375107	Identifier	ctx		1373944	0					
ANR	1375108	Identifier	arena		1373944	1					
ANR	1375109	Argument	checkpoint		1373944	1					
ANR	1375110	Identifier	checkpoint		1373944	0					
ANR	1375111	ExpressionStatement	op_array -> T = max + 1	228:1:7721:7742	1373944	27	True				
ANR	1375112	AssignmentExpression	op_array -> T = max + 1		1373944	0		=			
ANR	1375113	PtrMemberAccess	op_array -> T		1373944	0					
ANR	1375114	Identifier	op_array		1373944	0					
ANR	1375115	Identifier	T		1373944	1					
ANR	1375116	AdditiveExpression	max + 1		1373944	1		+			
ANR	1375117	Identifier	max		1373944	0					
ANR	1375118	PrimaryExpression	1		1373944	1					
ANR	1375119	ReturnType	void		1373944	1					
ANR	1375120	Identifier	optimize_temporary_variables		1373944	2					
ANR	1375121	ParameterList	"zend_op_array * op_array , zend_optimizer_ctx * ctx"		1373944	3					
ANR	1375122	Parameter	zend_op_array * op_array	42:34:1865:1887	1373944	0	True				
ANR	1375123	ParameterType	zend_op_array *		1373944	0					
ANR	1375124	Identifier	op_array		1373944	1					
ANR	1375125	Parameter	zend_optimizer_ctx * ctx	42:59:1890:1912	1373944	1	True				
ANR	1375126	ParameterType	zend_optimizer_ctx *		1373944	0					
ANR	1375127	Identifier	ctx		1373944	1					
ANR	1375128	CFGEntryNode	ENTRY		1373944		True				
ANR	1375129	CFGExitNode	EXIT		1373944		True				
ANR	1375130	Symbol	checkpoint		1373944						
ANR	1375131	Symbol	ZEND_VERIFY_RETURN_TYPE		1373944						
ANR	1375132	Symbol	ZEND_FREE		1373944						
ANR	1375133	Symbol	bitset_len		1373944						
ANR	1375134	Symbol	num		1373944						
ANR	1375135	Symbol	ZEND_FE_FREE		1373944						
ANR	1375136	Symbol	ZEND_OP_DATA		1373944						
ANR	1375137	Symbol	ZEND_OP2_TYPE		1373944						
ANR	1375138	Symbol	opline -> extended_value		1373944						
ANR	1375139	Symbol	start_of_T		1373944						
ANR	1375140	Symbol	ZEND_RESULT ( opline ) . var		1373944						
ANR	1375141	Symbol	opline		1373944						
ANR	1375142	Symbol	op_array -> fn_flags		1373944						
ANR	1375143	Symbol	valid_T		1373944						
ANR	1375144	Symbol	ZEND_BITSET_ELM_SIZE		1373944						
ANR	1375145	Symbol	map_T		1373944						
ANR	1375146	Symbol	curr		1373944						
ANR	1375147	Symbol	IS_TMP_VAR		1373944						
ANR	1375148	Symbol	( opline - 1 ) -> opcode		1373944						
ANR	1375149	Symbol	op_array -> T		1373944						
ANR	1375150	Symbol	ZEND_RETURN		1373944						
ANR	1375151	Symbol	offset		1373944						
ANR	1375152	Symbol	zend_arena_alloc		1373944						
ANR	1375153	Symbol	ctx		1373944						
ANR	1375154	Symbol	var		1373944						
ANR	1375155	Symbol	ZEND_OP2 ( opline ) . var		1373944						
ANR	1375156	Symbol	* start_of_T		1373944						
ANR	1375157	Symbol	* op_array		1373944						
ANR	1375158	Symbol	taken_T		1373944						
ANR	1375159	Symbol	op_array -> last		1373944						
ANR	1375160	Symbol	ZEND_RESULT_TYPE		1373944						
ANR	1375161	Symbol	* map_T		1373944						
ANR	1375162	Symbol	NUM_VAR		1373944						
ANR	1375163	Symbol	* offset		1373944						
ANR	1375164	Symbol	RESULT_UNUSED		1373944						
ANR	1375165	Symbol	IS_VAR		1373944						
ANR	1375166	Symbol	use_new_var		1373944						
ANR	1375167	Symbol	zend_bitset_len		1373944						
ANR	1375168	Symbol	MAX		1373944						
ANR	1375169	Symbol	op_array -> last_var		1373944						
ANR	1375170	Symbol	currT		1373944						
ANR	1375171	Symbol	curr -> opcode		1373944						
ANR	1375172	Symbol	op_array -> opcodes		1373944						
ANR	1375173	Symbol	T		1373944						
ANR	1375174	Symbol	ZEND_ACC_HAS_FINALLY_BLOCK		1373944						
ANR	1375175	Symbol	ZEND_RETURN_BY_REF		1373944						
ANR	1375176	Symbol	ZEND_RESULT		1373944						
ANR	1375177	Symbol	( opline + 1 ) -> opcode		1373944						
ANR	1375178	Symbol	end		1373944						
ANR	1375179	Symbol	VAR_NUM		1373944						
ANR	1375180	Symbol	ZEND_DECLARE_INHERITED_CLASS_DELAYED		1373944						
ANR	1375181	Symbol	ZEND_FAST_CALL		1373944						
ANR	1375182	Symbol	zend_bitset_in		1373944						
ANR	1375183	Symbol	ZEND_DECLARE_ANON_INHERITED_CLASS		1373944						
ANR	1375184	Symbol	max		1373944						
ANR	1375185	Symbol	zend_arena_checkpoint		1373944						
ANR	1375186	Symbol	ZEND_OP1 ( opline ) . var		1373944						
ANR	1375187	Symbol	* currT		1373944						
ANR	1375188	Symbol	i		1373944						
ANR	1375189	Symbol	* VAR_NUM		1373944						
ANR	1375190	Symbol	* ctx		1373944						
ANR	1375191	Symbol	ZEND_OP1		1373944						
ANR	1375192	Symbol	ZEND_OP2		1373944						
ANR	1375193	Symbol	& ctx -> arena		1373944						
ANR	1375194	Symbol	ZEND_OP1_TYPE		1373944						
ANR	1375195	Symbol	* opline		1373944						
ANR	1375196	Symbol	ZEND_ASSIGN_DIM		1373944						
ANR	1375197	Symbol	* curr		1373944						
ANR	1375198	Symbol	var_to_free		1373944						
ANR	1375199	Symbol	opline -> opcode		1373944						
ANR	1375200	Symbol	ZEND_OP2 ( opline + 1 ) . var		1373944						
ANR	1375201	Symbol	ZEND_DECLARE_INHERITED_CLASS		1373944						
ANR	1375202	Symbol	ctx -> arena		1373944						
ANR	1375203	Symbol	ZEND_ROPE_END		1373944						
ANR	1375204	Symbol	ZEND_DISCARD_EXCEPTION		1373944						
ANR	1375205	Symbol	op_array		1373944						
ANR	1375206	Symbol	ZEND_ROPE_INIT		1373944						
