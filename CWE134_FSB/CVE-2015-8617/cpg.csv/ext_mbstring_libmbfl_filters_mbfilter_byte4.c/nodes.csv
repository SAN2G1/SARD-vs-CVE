command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1032725	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_libmbfl_filters_mbfilter_byte4.c								
ANR	1032726	DeclStmt									
ANR	1032727	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_byte4be
ANR	1032728	DeclStmt									
ANR	1032729	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_byte4le
ANR	1032730	DeclStmt									
ANR	1032731	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_byte4be_wchar
ANR	1032732	DeclStmt									
ANR	1032733	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_byte4be
ANR	1032734	DeclStmt									
ANR	1032735	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_byte4le_wchar
ANR	1032736	DeclStmt									
ANR	1032737	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_byte4le
ANR	1032738	Function	mbfl_filt_conv_byte4be_wchar	93:0:2436:2947							
ANR	1032739	FunctionDef	"mbfl_filt_conv_byte4be_wchar (int c , mbfl_convert_filter * filter)"		1032738	0					
ANR	1032740	CompoundStatement		94:0:2505:2947	1032738	0					
ANR	1032741	IdentifierDeclStatement	int n ;	95:1:2508:2513	1032738	0	True				
ANR	1032742	IdentifierDecl	n		1032738	0					
ANR	1032743	IdentifierDeclType	int		1032738	0					
ANR	1032744	Identifier	n		1032738	1					
ANR	1032745	IfStatement	if ( filter -> status == 0 )		1032738	1					
ANR	1032746	Condition	filter -> status == 0	97:5:2521:2539	1032738	0	True				
ANR	1032747	EqualityExpression	filter -> status == 0		1032738	0		==			
ANR	1032748	PtrMemberAccess	filter -> status		1032738	0					
ANR	1032749	Identifier	filter		1032738	0					
ANR	1032750	Identifier	status		1032738	1					
ANR	1032751	PrimaryExpression	0		1032738	1					
ANR	1032752	CompoundStatement		4:26:36:36	1032738	1					
ANR	1032753	ExpressionStatement	filter -> status = 1	98:2:2546:2564	1032738	0	True				
ANR	1032754	AssignmentExpression	filter -> status = 1		1032738	0		=			
ANR	1032755	PtrMemberAccess	filter -> status		1032738	0					
ANR	1032756	Identifier	filter		1032738	0					
ANR	1032757	Identifier	status		1032738	1					
ANR	1032758	PrimaryExpression	1		1032738	1					
ANR	1032759	ExpressionStatement	n = ( c & 0xff ) << 24	99:2:2568:2588	1032738	1	True				
ANR	1032760	AssignmentExpression	n = ( c & 0xff ) << 24		1032738	0		=			
ANR	1032761	Identifier	n		1032738	0					
ANR	1032762	ShiftExpression	( c & 0xff ) << 24		1032738	1		<<			
ANR	1032763	BitAndExpression	c & 0xff		1032738	0		&			
ANR	1032764	Identifier	c		1032738	0					
ANR	1032765	PrimaryExpression	0xff		1032738	1					
ANR	1032766	PrimaryExpression	24		1032738	1					
ANR	1032767	ExpressionStatement	filter -> cache = n	100:2:2592:2609	1032738	2	True				
ANR	1032768	AssignmentExpression	filter -> cache = n		1032738	0		=			
ANR	1032769	PtrMemberAccess	filter -> cache		1032738	0					
ANR	1032770	Identifier	filter		1032738	0					
ANR	1032771	Identifier	cache		1032738	1					
ANR	1032772	Identifier	n		1032738	1					
ANR	1032773	ElseStatement	else		1032738	0					
ANR	1032774	IfStatement	if ( filter -> status == 1 )		1032738	0					
ANR	1032775	Condition	filter -> status == 1	101:12:2623:2641	1032738	0	True				
ANR	1032776	EqualityExpression	filter -> status == 1		1032738	0		==			
ANR	1032777	PtrMemberAccess	filter -> status		1032738	0					
ANR	1032778	Identifier	filter		1032738	0					
ANR	1032779	Identifier	status		1032738	1					
ANR	1032780	PrimaryExpression	1		1032738	1					
ANR	1032781	CompoundStatement		8:33:138:138	1032738	1					
ANR	1032782	ExpressionStatement	filter -> status = 2	102:2:2648:2666	1032738	0	True				
ANR	1032783	AssignmentExpression	filter -> status = 2		1032738	0		=			
ANR	1032784	PtrMemberAccess	filter -> status		1032738	0					
ANR	1032785	Identifier	filter		1032738	0					
ANR	1032786	Identifier	status		1032738	1					
ANR	1032787	PrimaryExpression	2		1032738	1					
ANR	1032788	ExpressionStatement	n = ( c & 0xff ) << 16	103:2:2670:2690	1032738	1	True				
ANR	1032789	AssignmentExpression	n = ( c & 0xff ) << 16		1032738	0		=			
ANR	1032790	Identifier	n		1032738	0					
ANR	1032791	ShiftExpression	( c & 0xff ) << 16		1032738	1		<<			
ANR	1032792	BitAndExpression	c & 0xff		1032738	0		&			
ANR	1032793	Identifier	c		1032738	0					
ANR	1032794	PrimaryExpression	0xff		1032738	1					
ANR	1032795	PrimaryExpression	16		1032738	1					
ANR	1032796	ExpressionStatement	filter -> cache |= n	104:2:2694:2712	1032738	2	True				
ANR	1032797	AssignmentExpression	filter -> cache |= n		1032738	0		|=			
ANR	1032798	PtrMemberAccess	filter -> cache		1032738	0					
ANR	1032799	Identifier	filter		1032738	0					
ANR	1032800	Identifier	cache		1032738	1					
ANR	1032801	Identifier	n		1032738	1					
ANR	1032802	ElseStatement	else		1032738	0					
ANR	1032803	IfStatement	if ( filter -> status == 2 )		1032738	0					
ANR	1032804	Condition	filter -> status == 2	105:12:2726:2744	1032738	0	True				
ANR	1032805	EqualityExpression	filter -> status == 2		1032738	0		==			
ANR	1032806	PtrMemberAccess	filter -> status		1032738	0					
ANR	1032807	Identifier	filter		1032738	0					
ANR	1032808	Identifier	status		1032738	1					
ANR	1032809	PrimaryExpression	2		1032738	1					
ANR	1032810	CompoundStatement		12:33:241:241	1032738	1					
ANR	1032811	ExpressionStatement	filter -> status = 3	106:2:2751:2769	1032738	0	True				
ANR	1032812	AssignmentExpression	filter -> status = 3		1032738	0		=			
ANR	1032813	PtrMemberAccess	filter -> status		1032738	0					
ANR	1032814	Identifier	filter		1032738	0					
ANR	1032815	Identifier	status		1032738	1					
ANR	1032816	PrimaryExpression	3		1032738	1					
ANR	1032817	ExpressionStatement	n = ( c & 0xff ) << 8	107:2:2773:2792	1032738	1	True				
ANR	1032818	AssignmentExpression	n = ( c & 0xff ) << 8		1032738	0		=			
ANR	1032819	Identifier	n		1032738	0					
ANR	1032820	ShiftExpression	( c & 0xff ) << 8		1032738	1		<<			
ANR	1032821	BitAndExpression	c & 0xff		1032738	0		&			
ANR	1032822	Identifier	c		1032738	0					
ANR	1032823	PrimaryExpression	0xff		1032738	1					
ANR	1032824	PrimaryExpression	8		1032738	1					
ANR	1032825	ExpressionStatement	filter -> cache |= n	108:2:2796:2814	1032738	2	True				
ANR	1032826	AssignmentExpression	filter -> cache |= n		1032738	0		|=			
ANR	1032827	PtrMemberAccess	filter -> cache		1032738	0					
ANR	1032828	Identifier	filter		1032738	0					
ANR	1032829	Identifier	cache		1032738	1					
ANR	1032830	Identifier	n		1032738	1					
ANR	1032831	ElseStatement	else		1032738	0					
ANR	1032832	CompoundStatement		16:8:318:318	1032738	0					
ANR	1032833	ExpressionStatement	filter -> status = 0	110:2:2828:2846	1032738	0	True				
ANR	1032834	AssignmentExpression	filter -> status = 0		1032738	0		=			
ANR	1032835	PtrMemberAccess	filter -> status		1032738	0					
ANR	1032836	Identifier	filter		1032738	0					
ANR	1032837	Identifier	status		1032738	1					
ANR	1032838	PrimaryExpression	0		1032738	1					
ANR	1032839	ExpressionStatement	n = ( c & 0xff ) | filter -> cache	111:2:2850:2880	1032738	1	True				
ANR	1032840	AssignmentExpression	n = ( c & 0xff ) | filter -> cache		1032738	0		=			
ANR	1032841	Identifier	n		1032738	0					
ANR	1032842	InclusiveOrExpression	( c & 0xff ) | filter -> cache		1032738	1		|			
ANR	1032843	BitAndExpression	c & 0xff		1032738	0		&			
ANR	1032844	Identifier	c		1032738	0					
ANR	1032845	PrimaryExpression	0xff		1032738	1					
ANR	1032846	PtrMemberAccess	filter -> cache		1032738	1					
ANR	1032847	Identifier	filter		1032738	0					
ANR	1032848	Identifier	cache		1032738	1					
ANR	1032849	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	112:2:2884:2931	1032738	2	True				
ANR	1032850	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1032738	0					
ANR	1032851	Callee	CK		1032738	0					
ANR	1032852	Identifier	CK		1032738	0					
ANR	1032853	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1032738	1					
ANR	1032854	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1032738	0					
ANR	1032855	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1032738	0					
ANR	1032856	Callee	* filter -> output_function		1032738	0					
ANR	1032857	UnaryOperationExpression	* filter -> output_function		1032738	0					
ANR	1032858	UnaryOperator	*		1032738	0					
ANR	1032859	PtrMemberAccess	filter -> output_function		1032738	1					
ANR	1032860	Identifier	filter		1032738	0					
ANR	1032861	Identifier	output_function		1032738	1					
ANR	1032862	ArgumentList	n		1032738	1					
ANR	1032863	Argument	n		1032738	0					
ANR	1032864	Identifier	n		1032738	0					
ANR	1032865	Argument	filter -> data		1032738	1					
ANR	1032866	PtrMemberAccess	filter -> data		1032738	0					
ANR	1032867	Identifier	filter		1032738	0					
ANR	1032868	Identifier	data		1032738	1					
ANR	1032869	ReturnStatement	return c ;	114:1:2937:2945	1032738	2	True				
ANR	1032870	Identifier	c		1032738	0					
ANR	1032871	ReturnType	int		1032738	1					
ANR	1032872	Identifier	mbfl_filt_conv_byte4be_wchar		1032738	2					
ANR	1032873	ParameterList	"int c , mbfl_convert_filter * filter"		1032738	3					
ANR	1032874	Parameter	int c	93:33:2469:2473	1032738	0	True				
ANR	1032875	ParameterType	int		1032738	0					
ANR	1032876	Identifier	c		1032738	1					
ANR	1032877	Parameter	mbfl_convert_filter * filter	93:40:2476:2502	1032738	1	True				
ANR	1032878	ParameterType	mbfl_convert_filter *		1032738	0					
ANR	1032879	Identifier	filter		1032738	1					
ANR	1032880	CFGEntryNode	ENTRY		1032738		True				
ANR	1032881	CFGExitNode	EXIT		1032738		True				
ANR	1032882	Symbol	filter		1032738						
ANR	1032883	Symbol	filter -> cache		1032738						
ANR	1032884	Symbol	c		1032738						
ANR	1032885	Symbol	filter -> output_function		1032738						
ANR	1032886	Symbol	filter -> status		1032738						
ANR	1032887	Symbol	* filter -> output_function		1032738						
ANR	1032888	Symbol	n		1032738						
ANR	1032889	Symbol	* filter		1032738						
ANR	1032890	Symbol	* * filter		1032738						
ANR	1032891	Symbol	filter -> data		1032738						
ANR	1032892	Function	mbfl_filt_conv_wchar_byte4be	117:0:2950:3283							
ANR	1032893	FunctionDef	"mbfl_filt_conv_wchar_byte4be (int c , mbfl_convert_filter * filter)"		1032892	0					
ANR	1032894	CompoundStatement		118:0:3019:3283	1032892	0					
ANR	1032895	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"	119:1:3022:3084	1032892	0	True				
ANR	1032896	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"		1032892	0					
ANR	1032897	Callee	CK		1032892	0					
ANR	1032898	Identifier	CK		1032892	0					
ANR	1032899	ArgumentList	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1032892	1					
ANR	1032900	Argument	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1032892	0					
ANR	1032901	CallExpression	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1032892	0					
ANR	1032902	Callee	* filter -> output_function		1032892	0					
ANR	1032903	UnaryOperationExpression	* filter -> output_function		1032892	0					
ANR	1032904	UnaryOperator	*		1032892	0					
ANR	1032905	PtrMemberAccess	filter -> output_function		1032892	1					
ANR	1032906	Identifier	filter		1032892	0					
ANR	1032907	Identifier	output_function		1032892	1					
ANR	1032908	ArgumentList	( c >> 24 ) & 0xff		1032892	1					
ANR	1032909	Argument	( c >> 24 ) & 0xff		1032892	0					
ANR	1032910	BitAndExpression	( c >> 24 ) & 0xff		1032892	0		&			
ANR	1032911	ShiftExpression	c >> 24		1032892	0		>>			
ANR	1032912	Identifier	c		1032892	0					
ANR	1032913	PrimaryExpression	24		1032892	1					
ANR	1032914	PrimaryExpression	0xff		1032892	1					
ANR	1032915	Argument	filter -> data		1032892	1					
ANR	1032916	PtrMemberAccess	filter -> data		1032892	0					
ANR	1032917	Identifier	filter		1032892	0					
ANR	1032918	Identifier	data		1032892	1					
ANR	1032919	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"	120:1:3087:3149	1032892	1	True				
ANR	1032920	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"		1032892	0					
ANR	1032921	Callee	CK		1032892	0					
ANR	1032922	Identifier	CK		1032892	0					
ANR	1032923	ArgumentList	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1032892	1					
ANR	1032924	Argument	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1032892	0					
ANR	1032925	CallExpression	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1032892	0					
ANR	1032926	Callee	* filter -> output_function		1032892	0					
ANR	1032927	UnaryOperationExpression	* filter -> output_function		1032892	0					
ANR	1032928	UnaryOperator	*		1032892	0					
ANR	1032929	PtrMemberAccess	filter -> output_function		1032892	1					
ANR	1032930	Identifier	filter		1032892	0					
ANR	1032931	Identifier	output_function		1032892	1					
ANR	1032932	ArgumentList	( c >> 16 ) & 0xff		1032892	1					
ANR	1032933	Argument	( c >> 16 ) & 0xff		1032892	0					
ANR	1032934	BitAndExpression	( c >> 16 ) & 0xff		1032892	0		&			
ANR	1032935	ShiftExpression	c >> 16		1032892	0		>>			
ANR	1032936	Identifier	c		1032892	0					
ANR	1032937	PrimaryExpression	16		1032892	1					
ANR	1032938	PrimaryExpression	0xff		1032892	1					
ANR	1032939	Argument	filter -> data		1032892	1					
ANR	1032940	PtrMemberAccess	filter -> data		1032892	0					
ANR	1032941	Identifier	filter		1032892	0					
ANR	1032942	Identifier	data		1032892	1					
ANR	1032943	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	121:1:3152:3213	1032892	2	True				
ANR	1032944	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		1032892	0					
ANR	1032945	Callee	CK		1032892	0					
ANR	1032946	Identifier	CK		1032892	0					
ANR	1032947	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1032892	1					
ANR	1032948	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1032892	0					
ANR	1032949	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1032892	0					
ANR	1032950	Callee	* filter -> output_function		1032892	0					
ANR	1032951	UnaryOperationExpression	* filter -> output_function		1032892	0					
ANR	1032952	UnaryOperator	*		1032892	0					
ANR	1032953	PtrMemberAccess	filter -> output_function		1032892	1					
ANR	1032954	Identifier	filter		1032892	0					
ANR	1032955	Identifier	output_function		1032892	1					
ANR	1032956	ArgumentList	( c >> 8 ) & 0xff		1032892	1					
ANR	1032957	Argument	( c >> 8 ) & 0xff		1032892	0					
ANR	1032958	BitAndExpression	( c >> 8 ) & 0xff		1032892	0		&			
ANR	1032959	ShiftExpression	c >> 8		1032892	0		>>			
ANR	1032960	Identifier	c		1032892	0					
ANR	1032961	PrimaryExpression	8		1032892	1					
ANR	1032962	PrimaryExpression	0xff		1032892	1					
ANR	1032963	Argument	filter -> data		1032892	1					
ANR	1032964	PtrMemberAccess	filter -> data		1032892	0					
ANR	1032965	Identifier	filter		1032892	0					
ANR	1032966	Identifier	data		1032892	1					
ANR	1032967	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	122:1:3216:3270	1032892	3	True				
ANR	1032968	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		1032892	0					
ANR	1032969	Callee	CK		1032892	0					
ANR	1032970	Identifier	CK		1032892	0					
ANR	1032971	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1032892	1					
ANR	1032972	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1032892	0					
ANR	1032973	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1032892	0					
ANR	1032974	Callee	* filter -> output_function		1032892	0					
ANR	1032975	UnaryOperationExpression	* filter -> output_function		1032892	0					
ANR	1032976	UnaryOperator	*		1032892	0					
ANR	1032977	PtrMemberAccess	filter -> output_function		1032892	1					
ANR	1032978	Identifier	filter		1032892	0					
ANR	1032979	Identifier	output_function		1032892	1					
ANR	1032980	ArgumentList	c & 0xff		1032892	1					
ANR	1032981	Argument	c & 0xff		1032892	0					
ANR	1032982	BitAndExpression	c & 0xff		1032892	0		&			
ANR	1032983	Identifier	c		1032892	0					
ANR	1032984	PrimaryExpression	0xff		1032892	1					
ANR	1032985	Argument	filter -> data		1032892	1					
ANR	1032986	PtrMemberAccess	filter -> data		1032892	0					
ANR	1032987	Identifier	filter		1032892	0					
ANR	1032988	Identifier	data		1032892	1					
ANR	1032989	ReturnStatement	return c ;	123:1:3273:3281	1032892	4	True				
ANR	1032990	Identifier	c		1032892	0					
ANR	1032991	ReturnType	int		1032892	1					
ANR	1032992	Identifier	mbfl_filt_conv_wchar_byte4be		1032892	2					
ANR	1032993	ParameterList	"int c , mbfl_convert_filter * filter"		1032892	3					
ANR	1032994	Parameter	int c	117:33:2983:2987	1032892	0	True				
ANR	1032995	ParameterType	int		1032892	0					
ANR	1032996	Identifier	c		1032892	1					
ANR	1032997	Parameter	mbfl_convert_filter * filter	117:40:2990:3016	1032892	1	True				
ANR	1032998	ParameterType	mbfl_convert_filter *		1032892	0					
ANR	1032999	Identifier	filter		1032892	1					
ANR	1033000	CFGEntryNode	ENTRY		1032892		True				
ANR	1033001	CFGExitNode	EXIT		1032892		True				
ANR	1033002	Symbol	filter		1032892						
ANR	1033003	Symbol	c		1032892						
ANR	1033004	Symbol	filter -> output_function		1032892						
ANR	1033005	Symbol	* filter -> output_function		1032892						
ANR	1033006	Symbol	* filter		1032892						
ANR	1033007	Symbol	* * filter		1032892						
ANR	1033008	Symbol	filter -> data		1032892						
ANR	1033009	Function	mbfl_filt_conv_byte4le_wchar	126:0:3286:3799							
ANR	1033010	FunctionDef	"mbfl_filt_conv_byte4le_wchar (int c , mbfl_convert_filter * filter)"		1033009	0					
ANR	1033011	CompoundStatement		127:0:3355:3799	1033009	0					
ANR	1033012	IdentifierDeclStatement	int n ;	128:1:3358:3363	1033009	0	True				
ANR	1033013	IdentifierDecl	n		1033009	0					
ANR	1033014	IdentifierDeclType	int		1033009	0					
ANR	1033015	Identifier	n		1033009	1					
ANR	1033016	IfStatement	if ( filter -> status == 0 )		1033009	1					
ANR	1033017	Condition	filter -> status == 0	130:5:3371:3389	1033009	0	True				
ANR	1033018	EqualityExpression	filter -> status == 0		1033009	0		==			
ANR	1033019	PtrMemberAccess	filter -> status		1033009	0					
ANR	1033020	Identifier	filter		1033009	0					
ANR	1033021	Identifier	status		1033009	1					
ANR	1033022	PrimaryExpression	0		1033009	1					
ANR	1033023	CompoundStatement		4:26:36:36	1033009	1					
ANR	1033024	ExpressionStatement	filter -> status = 1	131:2:3396:3414	1033009	0	True				
ANR	1033025	AssignmentExpression	filter -> status = 1		1033009	0		=			
ANR	1033026	PtrMemberAccess	filter -> status		1033009	0					
ANR	1033027	Identifier	filter		1033009	0					
ANR	1033028	Identifier	status		1033009	1					
ANR	1033029	PrimaryExpression	1		1033009	1					
ANR	1033030	ExpressionStatement	n = ( c & 0xff )	132:2:3418:3432	1033009	1	True				
ANR	1033031	AssignmentExpression	n = ( c & 0xff )		1033009	0		=			
ANR	1033032	Identifier	n		1033009	0					
ANR	1033033	BitAndExpression	c & 0xff		1033009	1		&			
ANR	1033034	Identifier	c		1033009	0					
ANR	1033035	PrimaryExpression	0xff		1033009	1					
ANR	1033036	ExpressionStatement	filter -> cache = n	133:2:3436:3453	1033009	2	True				
ANR	1033037	AssignmentExpression	filter -> cache = n		1033009	0		=			
ANR	1033038	PtrMemberAccess	filter -> cache		1033009	0					
ANR	1033039	Identifier	filter		1033009	0					
ANR	1033040	Identifier	cache		1033009	1					
ANR	1033041	Identifier	n		1033009	1					
ANR	1033042	ElseStatement	else		1033009	0					
ANR	1033043	IfStatement	if ( filter -> status == 1 )		1033009	0					
ANR	1033044	Condition	filter -> status == 1	134:12:3467:3485	1033009	0	True				
ANR	1033045	EqualityExpression	filter -> status == 1		1033009	0		==			
ANR	1033046	PtrMemberAccess	filter -> status		1033009	0					
ANR	1033047	Identifier	filter		1033009	0					
ANR	1033048	Identifier	status		1033009	1					
ANR	1033049	PrimaryExpression	1		1033009	1					
ANR	1033050	CompoundStatement		8:33:132:132	1033009	1					
ANR	1033051	ExpressionStatement	filter -> status = 2	135:2:3492:3510	1033009	0	True				
ANR	1033052	AssignmentExpression	filter -> status = 2		1033009	0		=			
ANR	1033053	PtrMemberAccess	filter -> status		1033009	0					
ANR	1033054	Identifier	filter		1033009	0					
ANR	1033055	Identifier	status		1033009	1					
ANR	1033056	PrimaryExpression	2		1033009	1					
ANR	1033057	ExpressionStatement	n = ( c & 0xff ) << 8	136:2:3514:3533	1033009	1	True				
ANR	1033058	AssignmentExpression	n = ( c & 0xff ) << 8		1033009	0		=			
ANR	1033059	Identifier	n		1033009	0					
ANR	1033060	ShiftExpression	( c & 0xff ) << 8		1033009	1		<<			
ANR	1033061	BitAndExpression	c & 0xff		1033009	0		&			
ANR	1033062	Identifier	c		1033009	0					
ANR	1033063	PrimaryExpression	0xff		1033009	1					
ANR	1033064	PrimaryExpression	8		1033009	1					
ANR	1033065	ExpressionStatement	filter -> cache |= n	137:2:3537:3555	1033009	2	True				
ANR	1033066	AssignmentExpression	filter -> cache |= n		1033009	0		|=			
ANR	1033067	PtrMemberAccess	filter -> cache		1033009	0					
ANR	1033068	Identifier	filter		1033009	0					
ANR	1033069	Identifier	cache		1033009	1					
ANR	1033070	Identifier	n		1033009	1					
ANR	1033071	ElseStatement	else		1033009	0					
ANR	1033072	IfStatement	if ( filter -> status == 2 )		1033009	0					
ANR	1033073	Condition	filter -> status == 2	138:12:3569:3587	1033009	0	True				
ANR	1033074	EqualityExpression	filter -> status == 2		1033009	0		==			
ANR	1033075	PtrMemberAccess	filter -> status		1033009	0					
ANR	1033076	Identifier	filter		1033009	0					
ANR	1033077	Identifier	status		1033009	1					
ANR	1033078	PrimaryExpression	2		1033009	1					
ANR	1033079	CompoundStatement		12:33:234:234	1033009	1					
ANR	1033080	ExpressionStatement	filter -> status = 3	139:2:3594:3612	1033009	0	True				
ANR	1033081	AssignmentExpression	filter -> status = 3		1033009	0		=			
ANR	1033082	PtrMemberAccess	filter -> status		1033009	0					
ANR	1033083	Identifier	filter		1033009	0					
ANR	1033084	Identifier	status		1033009	1					
ANR	1033085	PrimaryExpression	3		1033009	1					
ANR	1033086	ExpressionStatement	n = ( c & 0xff ) << 16	140:2:3616:3636	1033009	1	True				
ANR	1033087	AssignmentExpression	n = ( c & 0xff ) << 16		1033009	0		=			
ANR	1033088	Identifier	n		1033009	0					
ANR	1033089	ShiftExpression	( c & 0xff ) << 16		1033009	1		<<			
ANR	1033090	BitAndExpression	c & 0xff		1033009	0		&			
ANR	1033091	Identifier	c		1033009	0					
ANR	1033092	PrimaryExpression	0xff		1033009	1					
ANR	1033093	PrimaryExpression	16		1033009	1					
ANR	1033094	ExpressionStatement	filter -> cache |= n	141:2:3640:3658	1033009	2	True				
ANR	1033095	AssignmentExpression	filter -> cache |= n		1033009	0		|=			
ANR	1033096	PtrMemberAccess	filter -> cache		1033009	0					
ANR	1033097	Identifier	filter		1033009	0					
ANR	1033098	Identifier	cache		1033009	1					
ANR	1033099	Identifier	n		1033009	1					
ANR	1033100	ElseStatement	else		1033009	0					
ANR	1033101	CompoundStatement		16:8:312:312	1033009	0					
ANR	1033102	ExpressionStatement	filter -> status = 0	143:2:3672:3690	1033009	0	True				
ANR	1033103	AssignmentExpression	filter -> status = 0		1033009	0		=			
ANR	1033104	PtrMemberAccess	filter -> status		1033009	0					
ANR	1033105	Identifier	filter		1033009	0					
ANR	1033106	Identifier	status		1033009	1					
ANR	1033107	PrimaryExpression	0		1033009	1					
ANR	1033108	ExpressionStatement	n = ( ( c & 0xff ) << 24 ) | filter -> cache	144:2:3694:3732	1033009	1	True				
ANR	1033109	AssignmentExpression	n = ( ( c & 0xff ) << 24 ) | filter -> cache		1033009	0		=			
ANR	1033110	Identifier	n		1033009	0					
ANR	1033111	InclusiveOrExpression	( ( c & 0xff ) << 24 ) | filter -> cache		1033009	1		|			
ANR	1033112	ShiftExpression	( c & 0xff ) << 24		1033009	0		<<			
ANR	1033113	BitAndExpression	c & 0xff		1033009	0		&			
ANR	1033114	Identifier	c		1033009	0					
ANR	1033115	PrimaryExpression	0xff		1033009	1					
ANR	1033116	PrimaryExpression	24		1033009	1					
ANR	1033117	PtrMemberAccess	filter -> cache		1033009	1					
ANR	1033118	Identifier	filter		1033009	0					
ANR	1033119	Identifier	cache		1033009	1					
ANR	1033120	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	145:2:3736:3783	1033009	2	True				
ANR	1033121	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1033009	0					
ANR	1033122	Callee	CK		1033009	0					
ANR	1033123	Identifier	CK		1033009	0					
ANR	1033124	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1033009	1					
ANR	1033125	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1033009	0					
ANR	1033126	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1033009	0					
ANR	1033127	Callee	* filter -> output_function		1033009	0					
ANR	1033128	UnaryOperationExpression	* filter -> output_function		1033009	0					
ANR	1033129	UnaryOperator	*		1033009	0					
ANR	1033130	PtrMemberAccess	filter -> output_function		1033009	1					
ANR	1033131	Identifier	filter		1033009	0					
ANR	1033132	Identifier	output_function		1033009	1					
ANR	1033133	ArgumentList	n		1033009	1					
ANR	1033134	Argument	n		1033009	0					
ANR	1033135	Identifier	n		1033009	0					
ANR	1033136	Argument	filter -> data		1033009	1					
ANR	1033137	PtrMemberAccess	filter -> data		1033009	0					
ANR	1033138	Identifier	filter		1033009	0					
ANR	1033139	Identifier	data		1033009	1					
ANR	1033140	ReturnStatement	return c ;	147:1:3789:3797	1033009	2	True				
ANR	1033141	Identifier	c		1033009	0					
ANR	1033142	ReturnType	int		1033009	1					
ANR	1033143	Identifier	mbfl_filt_conv_byte4le_wchar		1033009	2					
ANR	1033144	ParameterList	"int c , mbfl_convert_filter * filter"		1033009	3					
ANR	1033145	Parameter	int c	126:33:3319:3323	1033009	0	True				
ANR	1033146	ParameterType	int		1033009	0					
ANR	1033147	Identifier	c		1033009	1					
ANR	1033148	Parameter	mbfl_convert_filter * filter	126:40:3326:3352	1033009	1	True				
ANR	1033149	ParameterType	mbfl_convert_filter *		1033009	0					
ANR	1033150	Identifier	filter		1033009	1					
ANR	1033151	CFGEntryNode	ENTRY		1033009		True				
ANR	1033152	CFGExitNode	EXIT		1033009		True				
ANR	1033153	Symbol	filter		1033009						
ANR	1033154	Symbol	filter -> cache		1033009						
ANR	1033155	Symbol	c		1033009						
ANR	1033156	Symbol	filter -> output_function		1033009						
ANR	1033157	Symbol	filter -> status		1033009						
ANR	1033158	Symbol	* filter -> output_function		1033009						
ANR	1033159	Symbol	n		1033009						
ANR	1033160	Symbol	* filter		1033009						
ANR	1033161	Symbol	* * filter		1033009						
ANR	1033162	Symbol	filter -> data		1033009						
ANR	1033163	Function	mbfl_filt_conv_wchar_byte4le	150:0:3802:4135							
ANR	1033164	FunctionDef	"mbfl_filt_conv_wchar_byte4le (int c , mbfl_convert_filter * filter)"		1033163	0					
ANR	1033165	CompoundStatement		151:0:3871:4135	1033163	0					
ANR	1033166	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	152:1:3874:3928	1033163	0	True				
ANR	1033167	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		1033163	0					
ANR	1033168	Callee	CK		1033163	0					
ANR	1033169	Identifier	CK		1033163	0					
ANR	1033170	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1033163	1					
ANR	1033171	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1033163	0					
ANR	1033172	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1033163	0					
ANR	1033173	Callee	* filter -> output_function		1033163	0					
ANR	1033174	UnaryOperationExpression	* filter -> output_function		1033163	0					
ANR	1033175	UnaryOperator	*		1033163	0					
ANR	1033176	PtrMemberAccess	filter -> output_function		1033163	1					
ANR	1033177	Identifier	filter		1033163	0					
ANR	1033178	Identifier	output_function		1033163	1					
ANR	1033179	ArgumentList	c & 0xff		1033163	1					
ANR	1033180	Argument	c & 0xff		1033163	0					
ANR	1033181	BitAndExpression	c & 0xff		1033163	0		&			
ANR	1033182	Identifier	c		1033163	0					
ANR	1033183	PrimaryExpression	0xff		1033163	1					
ANR	1033184	Argument	filter -> data		1033163	1					
ANR	1033185	PtrMemberAccess	filter -> data		1033163	0					
ANR	1033186	Identifier	filter		1033163	0					
ANR	1033187	Identifier	data		1033163	1					
ANR	1033188	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	153:1:3931:3992	1033163	1	True				
ANR	1033189	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		1033163	0					
ANR	1033190	Callee	CK		1033163	0					
ANR	1033191	Identifier	CK		1033163	0					
ANR	1033192	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1033163	1					
ANR	1033193	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1033163	0					
ANR	1033194	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1033163	0					
ANR	1033195	Callee	* filter -> output_function		1033163	0					
ANR	1033196	UnaryOperationExpression	* filter -> output_function		1033163	0					
ANR	1033197	UnaryOperator	*		1033163	0					
ANR	1033198	PtrMemberAccess	filter -> output_function		1033163	1					
ANR	1033199	Identifier	filter		1033163	0					
ANR	1033200	Identifier	output_function		1033163	1					
ANR	1033201	ArgumentList	( c >> 8 ) & 0xff		1033163	1					
ANR	1033202	Argument	( c >> 8 ) & 0xff		1033163	0					
ANR	1033203	BitAndExpression	( c >> 8 ) & 0xff		1033163	0		&			
ANR	1033204	ShiftExpression	c >> 8		1033163	0		>>			
ANR	1033205	Identifier	c		1033163	0					
ANR	1033206	PrimaryExpression	8		1033163	1					
ANR	1033207	PrimaryExpression	0xff		1033163	1					
ANR	1033208	Argument	filter -> data		1033163	1					
ANR	1033209	PtrMemberAccess	filter -> data		1033163	0					
ANR	1033210	Identifier	filter		1033163	0					
ANR	1033211	Identifier	data		1033163	1					
ANR	1033212	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"	154:1:3995:4057	1033163	2	True				
ANR	1033213	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"		1033163	0					
ANR	1033214	Callee	CK		1033163	0					
ANR	1033215	Identifier	CK		1033163	0					
ANR	1033216	ArgumentList	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1033163	1					
ANR	1033217	Argument	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1033163	0					
ANR	1033218	CallExpression	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1033163	0					
ANR	1033219	Callee	* filter -> output_function		1033163	0					
ANR	1033220	UnaryOperationExpression	* filter -> output_function		1033163	0					
ANR	1033221	UnaryOperator	*		1033163	0					
ANR	1033222	PtrMemberAccess	filter -> output_function		1033163	1					
ANR	1033223	Identifier	filter		1033163	0					
ANR	1033224	Identifier	output_function		1033163	1					
ANR	1033225	ArgumentList	( c >> 16 ) & 0xff		1033163	1					
ANR	1033226	Argument	( c >> 16 ) & 0xff		1033163	0					
ANR	1033227	BitAndExpression	( c >> 16 ) & 0xff		1033163	0		&			
ANR	1033228	ShiftExpression	c >> 16		1033163	0		>>			
ANR	1033229	Identifier	c		1033163	0					
ANR	1033230	PrimaryExpression	16		1033163	1					
ANR	1033231	PrimaryExpression	0xff		1033163	1					
ANR	1033232	Argument	filter -> data		1033163	1					
ANR	1033233	PtrMemberAccess	filter -> data		1033163	0					
ANR	1033234	Identifier	filter		1033163	0					
ANR	1033235	Identifier	data		1033163	1					
ANR	1033236	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"	155:1:4060:4122	1033163	3	True				
ANR	1033237	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"		1033163	0					
ANR	1033238	Callee	CK		1033163	0					
ANR	1033239	Identifier	CK		1033163	0					
ANR	1033240	ArgumentList	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1033163	1					
ANR	1033241	Argument	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1033163	0					
ANR	1033242	CallExpression	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1033163	0					
ANR	1033243	Callee	* filter -> output_function		1033163	0					
ANR	1033244	UnaryOperationExpression	* filter -> output_function		1033163	0					
ANR	1033245	UnaryOperator	*		1033163	0					
ANR	1033246	PtrMemberAccess	filter -> output_function		1033163	1					
ANR	1033247	Identifier	filter		1033163	0					
ANR	1033248	Identifier	output_function		1033163	1					
ANR	1033249	ArgumentList	( c >> 24 ) & 0xff		1033163	1					
ANR	1033250	Argument	( c >> 24 ) & 0xff		1033163	0					
ANR	1033251	BitAndExpression	( c >> 24 ) & 0xff		1033163	0		&			
ANR	1033252	ShiftExpression	c >> 24		1033163	0		>>			
ANR	1033253	Identifier	c		1033163	0					
ANR	1033254	PrimaryExpression	24		1033163	1					
ANR	1033255	PrimaryExpression	0xff		1033163	1					
ANR	1033256	Argument	filter -> data		1033163	1					
ANR	1033257	PtrMemberAccess	filter -> data		1033163	0					
ANR	1033258	Identifier	filter		1033163	0					
ANR	1033259	Identifier	data		1033163	1					
ANR	1033260	ReturnStatement	return c ;	156:1:4125:4133	1033163	4	True				
ANR	1033261	Identifier	c		1033163	0					
ANR	1033262	ReturnType	int		1033163	1					
ANR	1033263	Identifier	mbfl_filt_conv_wchar_byte4le		1033163	2					
ANR	1033264	ParameterList	"int c , mbfl_convert_filter * filter"		1033163	3					
ANR	1033265	Parameter	int c	150:33:3835:3839	1033163	0	True				
ANR	1033266	ParameterType	int		1033163	0					
ANR	1033267	Identifier	c		1033163	1					
ANR	1033268	Parameter	mbfl_convert_filter * filter	150:40:3842:3868	1033163	1	True				
ANR	1033269	ParameterType	mbfl_convert_filter *		1033163	0					
ANR	1033270	Identifier	filter		1033163	1					
ANR	1033271	CFGEntryNode	ENTRY		1033163		True				
ANR	1033272	CFGExitNode	EXIT		1033163		True				
ANR	1033273	Symbol	filter		1033163						
ANR	1033274	Symbol	c		1033163						
ANR	1033275	Symbol	filter -> output_function		1033163						
ANR	1033276	Symbol	* filter -> output_function		1033163						
ANR	1033277	Symbol	* * filter		1033163						
ANR	1033278	Symbol	* filter		1033163						
ANR	1033279	Symbol	filter -> data		1033163						
