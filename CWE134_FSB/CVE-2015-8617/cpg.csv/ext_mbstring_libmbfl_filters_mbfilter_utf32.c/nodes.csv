command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1093448	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_libmbfl_filters_mbfilter_utf32.c								
ANR	1093449	DeclStmt									
ANR	1093450	Decl							const char	const char * [ ]	mbfl_encoding_utf32_aliases
ANR	1093451	DeclStmt									
ANR	1093452	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf32
ANR	1093453	DeclStmt									
ANR	1093454	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf32be
ANR	1093455	DeclStmt									
ANR	1093456	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf32le
ANR	1093457	DeclStmt									
ANR	1093458	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf32_wchar
ANR	1093459	DeclStmt									
ANR	1093460	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf32
ANR	1093461	DeclStmt									
ANR	1093462	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf32be_wchar
ANR	1093463	DeclStmt									
ANR	1093464	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf32be
ANR	1093465	DeclStmt									
ANR	1093466	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf32le_wchar
ANR	1093467	DeclStmt									
ANR	1093468	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf32le
ANR	1093469	Function	mbfl_filt_conv_utf32_wchar	125:0:3116:4346							
ANR	1093470	FunctionDef	"mbfl_filt_conv_utf32_wchar (int c , mbfl_convert_filter * filter)"		1093469	0					
ANR	1093471	CompoundStatement		126:0:3183:4346	1093469	0					
ANR	1093472	IdentifierDeclStatement	"int n , endian ;"	127:1:3186:3199	1093469	0	True				
ANR	1093473	IdentifierDecl	n		1093469	0					
ANR	1093474	IdentifierDeclType	int		1093469	0					
ANR	1093475	Identifier	n		1093469	1					
ANR	1093476	IdentifierDecl	endian		1093469	1					
ANR	1093477	IdentifierDeclType	int		1093469	0					
ANR	1093478	Identifier	endian		1093469	1					
ANR	1093479	ExpressionStatement	endian = filter -> status & 0xff00	129:1:3203:3235	1093469	1	True				
ANR	1093480	AssignmentExpression	endian = filter -> status & 0xff00		1093469	0		=			
ANR	1093481	Identifier	endian		1093469	0					
ANR	1093482	BitAndExpression	filter -> status & 0xff00		1093469	1		&			
ANR	1093483	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093484	Identifier	filter		1093469	0					
ANR	1093485	Identifier	status		1093469	1					
ANR	1093486	PrimaryExpression	0xff00		1093469	1					
ANR	1093487	SwitchStatement	switch ( filter -> status & 0xff )		1093469	2					
ANR	1093488	Condition	filter -> status & 0xff	130:9:3246:3266	1093469	0	True				
ANR	1093489	BitAndExpression	filter -> status & 0xff		1093469	0		&			
ANR	1093490	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093491	Identifier	filter		1093469	0					
ANR	1093492	Identifier	status		1093469	1					
ANR	1093493	PrimaryExpression	0xff		1093469	1					
ANR	1093494	CompoundStatement		5:32:85:85	1093469	1					
ANR	1093495	Label	case 0 :	131:1:3272:3278	1093469	0	True				
ANR	1093496	IfStatement	if ( endian )		1093469	1					
ANR	1093497	Condition	endian	132:6:3286:3291	1093469	0	True				
ANR	1093498	Identifier	endian		1093469	0					
ANR	1093499	CompoundStatement		7:14:110:110	1093469	1					
ANR	1093500	ExpressionStatement	n = c & 0xff	133:3:3299:3311	1093469	0	True				
ANR	1093501	AssignmentExpression	n = c & 0xff		1093469	0		=			
ANR	1093502	Identifier	n		1093469	0					
ANR	1093503	BitAndExpression	c & 0xff		1093469	1		&			
ANR	1093504	Identifier	c		1093469	0					
ANR	1093505	PrimaryExpression	0xff		1093469	1					
ANR	1093506	ElseStatement	else		1093469	0					
ANR	1093507	CompoundStatement		9:9:138:138	1093469	0					
ANR	1093508	ExpressionStatement	n = ( c & 0xff ) << 24	135:3:3327:3347	1093469	0	True				
ANR	1093509	AssignmentExpression	n = ( c & 0xff ) << 24		1093469	0		=			
ANR	1093510	Identifier	n		1093469	0					
ANR	1093511	ShiftExpression	( c & 0xff ) << 24		1093469	1		<<			
ANR	1093512	BitAndExpression	c & 0xff		1093469	0		&			
ANR	1093513	Identifier	c		1093469	0					
ANR	1093514	PrimaryExpression	0xff		1093469	1					
ANR	1093515	PrimaryExpression	24		1093469	1					
ANR	1093516	ExpressionStatement	filter -> cache = n	137:2:3355:3372	1093469	2	True				
ANR	1093517	AssignmentExpression	filter -> cache = n		1093469	0		=			
ANR	1093518	PtrMemberAccess	filter -> cache		1093469	0					
ANR	1093519	Identifier	filter		1093469	0					
ANR	1093520	Identifier	cache		1093469	1					
ANR	1093521	Identifier	n		1093469	1					
ANR	1093522	ExpressionStatement	filter -> status ++	138:2:3376:3392	1093469	3	True				
ANR	1093523	PostIncDecOperationExpression	filter -> status ++		1093469	0					
ANR	1093524	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093525	Identifier	filter		1093469	0					
ANR	1093526	Identifier	status		1093469	1					
ANR	1093527	IncDec	++		1093469	1					
ANR	1093528	BreakStatement	break ;	139:2:3396:3401	1093469	4	True				
ANR	1093529	Label	case 1 :	140:1:3404:3410	1093469	5	True				
ANR	1093530	IfStatement	if ( endian )		1093469	6					
ANR	1093531	Condition	endian	141:6:3418:3423	1093469	0	True				
ANR	1093532	Identifier	endian		1093469	0					
ANR	1093533	CompoundStatement		16:14:242:242	1093469	1					
ANR	1093534	ExpressionStatement	n = ( c & 0xff ) << 8	142:3:3431:3450	1093469	0	True				
ANR	1093535	AssignmentExpression	n = ( c & 0xff ) << 8		1093469	0		=			
ANR	1093536	Identifier	n		1093469	0					
ANR	1093537	ShiftExpression	( c & 0xff ) << 8		1093469	1		<<			
ANR	1093538	BitAndExpression	c & 0xff		1093469	0		&			
ANR	1093539	Identifier	c		1093469	0					
ANR	1093540	PrimaryExpression	0xff		1093469	1					
ANR	1093541	PrimaryExpression	8		1093469	1					
ANR	1093542	ElseStatement	else		1093469	0					
ANR	1093543	CompoundStatement		18:9:277:277	1093469	0					
ANR	1093544	ExpressionStatement	n = ( c & 0xff ) << 16	144:3:3466:3486	1093469	0	True				
ANR	1093545	AssignmentExpression	n = ( c & 0xff ) << 16		1093469	0		=			
ANR	1093546	Identifier	n		1093469	0					
ANR	1093547	ShiftExpression	( c & 0xff ) << 16		1093469	1		<<			
ANR	1093548	BitAndExpression	c & 0xff		1093469	0		&			
ANR	1093549	Identifier	c		1093469	0					
ANR	1093550	PrimaryExpression	0xff		1093469	1					
ANR	1093551	PrimaryExpression	16		1093469	1					
ANR	1093552	ExpressionStatement	filter -> cache |= n	146:2:3494:3512	1093469	7	True				
ANR	1093553	AssignmentExpression	filter -> cache |= n		1093469	0		|=			
ANR	1093554	PtrMemberAccess	filter -> cache		1093469	0					
ANR	1093555	Identifier	filter		1093469	0					
ANR	1093556	Identifier	cache		1093469	1					
ANR	1093557	Identifier	n		1093469	1					
ANR	1093558	ExpressionStatement	filter -> status ++	147:2:3516:3532	1093469	8	True				
ANR	1093559	PostIncDecOperationExpression	filter -> status ++		1093469	0					
ANR	1093560	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093561	Identifier	filter		1093469	0					
ANR	1093562	Identifier	status		1093469	1					
ANR	1093563	IncDec	++		1093469	1					
ANR	1093564	BreakStatement	break ;	148:2:3536:3541	1093469	9	True				
ANR	1093565	Label	case 2 :	149:1:3544:3550	1093469	10	True				
ANR	1093566	IfStatement	if ( endian )		1093469	11					
ANR	1093567	Condition	endian	150:6:3558:3563	1093469	0	True				
ANR	1093568	Identifier	endian		1093469	0					
ANR	1093569	CompoundStatement		25:14:382:382	1093469	1					
ANR	1093570	ExpressionStatement	n = ( c & 0xff ) << 16	151:3:3571:3591	1093469	0	True				
ANR	1093571	AssignmentExpression	n = ( c & 0xff ) << 16		1093469	0		=			
ANR	1093572	Identifier	n		1093469	0					
ANR	1093573	ShiftExpression	( c & 0xff ) << 16		1093469	1		<<			
ANR	1093574	BitAndExpression	c & 0xff		1093469	0		&			
ANR	1093575	Identifier	c		1093469	0					
ANR	1093576	PrimaryExpression	0xff		1093469	1					
ANR	1093577	PrimaryExpression	16		1093469	1					
ANR	1093578	ElseStatement	else		1093469	0					
ANR	1093579	CompoundStatement		27:9:418:418	1093469	0					
ANR	1093580	ExpressionStatement	n = ( c & 0xff ) << 8	153:3:3607:3626	1093469	0	True				
ANR	1093581	AssignmentExpression	n = ( c & 0xff ) << 8		1093469	0		=			
ANR	1093582	Identifier	n		1093469	0					
ANR	1093583	ShiftExpression	( c & 0xff ) << 8		1093469	1		<<			
ANR	1093584	BitAndExpression	c & 0xff		1093469	0		&			
ANR	1093585	Identifier	c		1093469	0					
ANR	1093586	PrimaryExpression	0xff		1093469	1					
ANR	1093587	PrimaryExpression	8		1093469	1					
ANR	1093588	ExpressionStatement	filter -> cache |= n	155:2:3634:3652	1093469	12	True				
ANR	1093589	AssignmentExpression	filter -> cache |= n		1093469	0		|=			
ANR	1093590	PtrMemberAccess	filter -> cache		1093469	0					
ANR	1093591	Identifier	filter		1093469	0					
ANR	1093592	Identifier	cache		1093469	1					
ANR	1093593	Identifier	n		1093469	1					
ANR	1093594	ExpressionStatement	filter -> status ++	156:2:3656:3672	1093469	13	True				
ANR	1093595	PostIncDecOperationExpression	filter -> status ++		1093469	0					
ANR	1093596	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093597	Identifier	filter		1093469	0					
ANR	1093598	Identifier	status		1093469	1					
ANR	1093599	IncDec	++		1093469	1					
ANR	1093600	BreakStatement	break ;	157:2:3676:3681	1093469	14	True				
ANR	1093601	Label	default :	158:1:3684:3691	1093469	15	True				
ANR	1093602	Identifier	default		1093469	0					
ANR	1093603	IfStatement	if ( endian )		1093469	16					
ANR	1093604	Condition	endian	159:6:3699:3704	1093469	0	True				
ANR	1093605	Identifier	endian		1093469	0					
ANR	1093606	CompoundStatement		34:14:523:523	1093469	1					
ANR	1093607	ExpressionStatement	n = ( c & 0xff ) << 24	160:3:3712:3732	1093469	0	True				
ANR	1093608	AssignmentExpression	n = ( c & 0xff ) << 24		1093469	0		=			
ANR	1093609	Identifier	n		1093469	0					
ANR	1093610	ShiftExpression	( c & 0xff ) << 24		1093469	1		<<			
ANR	1093611	BitAndExpression	c & 0xff		1093469	0		&			
ANR	1093612	Identifier	c		1093469	0					
ANR	1093613	PrimaryExpression	0xff		1093469	1					
ANR	1093614	PrimaryExpression	24		1093469	1					
ANR	1093615	ElseStatement	else		1093469	0					
ANR	1093616	CompoundStatement		36:9:559:559	1093469	0					
ANR	1093617	ExpressionStatement	n = c & 0xff	162:3:3748:3760	1093469	0	True				
ANR	1093618	AssignmentExpression	n = c & 0xff		1093469	0		=			
ANR	1093619	Identifier	n		1093469	0					
ANR	1093620	BitAndExpression	c & 0xff		1093469	1		&			
ANR	1093621	Identifier	c		1093469	0					
ANR	1093622	PrimaryExpression	0xff		1093469	1					
ANR	1093623	ExpressionStatement	n |= filter -> cache	164:2:3768:3786	1093469	17	True				
ANR	1093624	AssignmentExpression	n |= filter -> cache		1093469	0		|=			
ANR	1093625	Identifier	n		1093469	0					
ANR	1093626	PtrMemberAccess	filter -> cache		1093469	1					
ANR	1093627	Identifier	filter		1093469	0					
ANR	1093628	Identifier	cache		1093469	1					
ANR	1093629	IfStatement	if ( ( n & 0xffff ) == 0 && ( ( n >> 16 ) & 0xffff ) == 0xfffe )		1093469	18					
ANR	1093630	Condition	( n & 0xffff ) == 0 && ( ( n >> 16 ) & 0xffff ) == 0xfffe	165:6:3794:3844	1093469	0	True				
ANR	1093631	AndExpression	( n & 0xffff ) == 0 && ( ( n >> 16 ) & 0xffff ) == 0xfffe		1093469	0		&&			
ANR	1093632	EqualityExpression	( n & 0xffff ) == 0		1093469	0		==			
ANR	1093633	BitAndExpression	n & 0xffff		1093469	0		&			
ANR	1093634	Identifier	n		1093469	0					
ANR	1093635	PrimaryExpression	0xffff		1093469	1					
ANR	1093636	PrimaryExpression	0		1093469	1					
ANR	1093637	EqualityExpression	( ( n >> 16 ) & 0xffff ) == 0xfffe		1093469	1		==			
ANR	1093638	BitAndExpression	( n >> 16 ) & 0xffff		1093469	0		&			
ANR	1093639	ShiftExpression	n >> 16		1093469	0		>>			
ANR	1093640	Identifier	n		1093469	0					
ANR	1093641	PrimaryExpression	16		1093469	1					
ANR	1093642	PrimaryExpression	0xffff		1093469	1					
ANR	1093643	PrimaryExpression	0xfffe		1093469	1					
ANR	1093644	CompoundStatement		40:59:663:663	1093469	1					
ANR	1093645	IfStatement	if ( endian )		1093469	0					
ANR	1093646	Condition	endian	166:7:3856:3861	1093469	0	True				
ANR	1093647	Identifier	endian		1093469	0					
ANR	1093648	CompoundStatement		41:15:680:680	1093469	1					
ANR	1093649	ExpressionStatement	filter -> status = 0	167:4:3870:3888	1093469	0	True				
ANR	1093650	AssignmentExpression	filter -> status = 0		1093469	0		=			
ANR	1093651	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093652	Identifier	filter		1093469	0					
ANR	1093653	Identifier	status		1093469	1					
ANR	1093654	PrimaryExpression	0		1093469	1					
ANR	1093655	ElseStatement	else		1093469	0					
ANR	1093656	CompoundStatement		43:10:734:734	1093469	0					
ANR	1093657	ExpressionStatement	filter -> status = 0x100	169:4:3924:3946	1093469	0	True				
ANR	1093658	AssignmentExpression	filter -> status = 0x100		1093469	0		=			
ANR	1093659	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093660	Identifier	filter		1093469	0					
ANR	1093661	Identifier	status		1093469	1					
ANR	1093662	PrimaryExpression	0x100		1093469	1					
ANR	1093663	ExpressionStatement	"CK ( ( * filter -> output_function ) ( 0xfeff , filter -> data ) )"	171:3:3977:4029	1093469	1	True				
ANR	1093664	CallExpression	"CK ( ( * filter -> output_function ) ( 0xfeff , filter -> data ) )"		1093469	0					
ANR	1093665	Callee	CK		1093469	0					
ANR	1093666	Identifier	CK		1093469	0					
ANR	1093667	ArgumentList	"( * filter -> output_function ) ( 0xfeff , filter -> data )"		1093469	1					
ANR	1093668	Argument	"( * filter -> output_function ) ( 0xfeff , filter -> data )"		1093469	0					
ANR	1093669	CallExpression	"( * filter -> output_function ) ( 0xfeff , filter -> data )"		1093469	0					
ANR	1093670	Callee	* filter -> output_function		1093469	0					
ANR	1093671	UnaryOperationExpression	* filter -> output_function		1093469	0					
ANR	1093672	UnaryOperator	*		1093469	0					
ANR	1093673	PtrMemberAccess	filter -> output_function		1093469	1					
ANR	1093674	Identifier	filter		1093469	0					
ANR	1093675	Identifier	output_function		1093469	1					
ANR	1093676	ArgumentList	0xfeff		1093469	1					
ANR	1093677	Argument	0xfeff		1093469	0					
ANR	1093678	PrimaryExpression	0xfeff		1093469	0					
ANR	1093679	Argument	filter -> data		1093469	1					
ANR	1093680	PtrMemberAccess	filter -> data		1093469	0					
ANR	1093681	Identifier	filter		1093469	0					
ANR	1093682	Identifier	data		1093469	1					
ANR	1093683	ElseStatement	else		1093469	0					
ANR	1093684	CompoundStatement		47:9:856:856	1093469	0					
ANR	1093685	ExpressionStatement	filter -> status &= ~0xff	173:3:4045:4068	1093469	0	True				
ANR	1093686	AssignmentExpression	filter -> status &= ~0xff		1093469	0		&=			
ANR	1093687	PtrMemberAccess	filter -> status		1093469	0					
ANR	1093688	Identifier	filter		1093469	0					
ANR	1093689	Identifier	status		1093469	1					
ANR	1093690	Identifier	~0xff		1093469	1					
ANR	1093691	IfStatement	if ( n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff ) )		1093469	1					
ANR	1093692	Condition	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )	174:7:4077:4132	1093469	0	True				
ANR	1093693	AndExpression	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )		1093469	0		&&			
ANR	1093694	RelationalExpression	n < MBFL_WCSPLANE_UTF32MAX		1093469	0		<			
ANR	1093695	Identifier	n		1093469	0					
ANR	1093696	Identifier	MBFL_WCSPLANE_UTF32MAX		1093469	1					
ANR	1093697	OrExpression	n < 0xd800 || n > 0xdfff		1093469	1		||			
ANR	1093698	RelationalExpression	n < 0xd800		1093469	0		<			
ANR	1093699	Identifier	n		1093469	0					
ANR	1093700	PrimaryExpression	0xd800		1093469	1					
ANR	1093701	RelationalExpression	n > 0xdfff		1093469	1		>			
ANR	1093702	Identifier	n		1093469	0					
ANR	1093703	PrimaryExpression	0xdfff		1093469	1					
ANR	1093704	CompoundStatement		49:65:951:951	1093469	1					
ANR	1093705	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	175:4:4141:4188	1093469	0	True				
ANR	1093706	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1093469	0					
ANR	1093707	Callee	CK		1093469	0					
ANR	1093708	Identifier	CK		1093469	0					
ANR	1093709	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1093469	1					
ANR	1093710	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1093469	0					
ANR	1093711	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1093469	0					
ANR	1093712	Callee	* filter -> output_function		1093469	0					
ANR	1093713	UnaryOperationExpression	* filter -> output_function		1093469	0					
ANR	1093714	UnaryOperator	*		1093469	0					
ANR	1093715	PtrMemberAccess	filter -> output_function		1093469	1					
ANR	1093716	Identifier	filter		1093469	0					
ANR	1093717	Identifier	output_function		1093469	1					
ANR	1093718	ArgumentList	n		1093469	1					
ANR	1093719	Argument	n		1093469	0					
ANR	1093720	Identifier	n		1093469	0					
ANR	1093721	Argument	filter -> data		1093469	1					
ANR	1093722	PtrMemberAccess	filter -> data		1093469	0					
ANR	1093723	Identifier	filter		1093469	0					
ANR	1093724	Identifier	data		1093469	1					
ANR	1093725	ElseStatement	else		1093469	0					
ANR	1093726	CompoundStatement		51:10:1016:1016	1093469	0					
ANR	1093727	ExpressionStatement	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH	177:4:4206:4258	1093469	0	True				
ANR	1093728	AssignmentExpression	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		1093469	0		=			
ANR	1093729	Identifier	n		1093469	0					
ANR	1093730	InclusiveOrExpression	( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		1093469	1		|			
ANR	1093731	BitAndExpression	n & MBFL_WCSGROUP_MASK		1093469	0		&			
ANR	1093732	Identifier	n		1093469	0					
ANR	1093733	Identifier	MBFL_WCSGROUP_MASK		1093469	1					
ANR	1093734	Identifier	MBFL_WCSGROUP_THROUGH		1093469	1					
ANR	1093735	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	178:4:4264:4311	1093469	1	True				
ANR	1093736	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1093469	0					
ANR	1093737	Callee	CK		1093469	0					
ANR	1093738	Identifier	CK		1093469	0					
ANR	1093739	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1093469	1					
ANR	1093740	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1093469	0					
ANR	1093741	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1093469	0					
ANR	1093742	Callee	* filter -> output_function		1093469	0					
ANR	1093743	UnaryOperationExpression	* filter -> output_function		1093469	0					
ANR	1093744	UnaryOperator	*		1093469	0					
ANR	1093745	PtrMemberAccess	filter -> output_function		1093469	1					
ANR	1093746	Identifier	filter		1093469	0					
ANR	1093747	Identifier	output_function		1093469	1					
ANR	1093748	ArgumentList	n		1093469	1					
ANR	1093749	Argument	n		1093469	0					
ANR	1093750	Identifier	n		1093469	0					
ANR	1093751	Argument	filter -> data		1093469	1					
ANR	1093752	PtrMemberAccess	filter -> data		1093469	0					
ANR	1093753	Identifier	filter		1093469	0					
ANR	1093754	Identifier	data		1093469	1					
ANR	1093755	BreakStatement	break ;	181:2:4324:4329	1093469	19	True				
ANR	1093756	ReturnStatement	return c ;	184:1:4336:4344	1093469	3	True				
ANR	1093757	Identifier	c		1093469	0					
ANR	1093758	ReturnType	int		1093469	1					
ANR	1093759	Identifier	mbfl_filt_conv_utf32_wchar		1093469	2					
ANR	1093760	ParameterList	"int c , mbfl_convert_filter * filter"		1093469	3					
ANR	1093761	Parameter	int c	125:31:3147:3151	1093469	0	True				
ANR	1093762	ParameterType	int		1093469	0					
ANR	1093763	Identifier	c		1093469	1					
ANR	1093764	Parameter	mbfl_convert_filter * filter	125:38:3154:3180	1093469	1	True				
ANR	1093765	ParameterType	mbfl_convert_filter *		1093469	0					
ANR	1093766	Identifier	filter		1093469	1					
ANR	1093767	CFGEntryNode	ENTRY		1093469		True				
ANR	1093768	CFGExitNode	EXIT		1093469		True				
ANR	1093769	Symbol	MBFL_WCSPLANE_UTF32MAX		1093469						
ANR	1093770	Symbol	~0xff		1093469						
ANR	1093771	Symbol	filter -> cache		1093469						
ANR	1093772	Symbol	c		1093469						
ANR	1093773	Symbol	MBFL_WCSGROUP_MASK		1093469						
ANR	1093774	Symbol	MBFL_WCSGROUP_THROUGH		1093469						
ANR	1093775	Symbol	* filter -> output_function		1093469						
ANR	1093776	Symbol	endian		1093469						
ANR	1093777	Symbol	n		1093469						
ANR	1093778	Symbol	* filter		1093469						
ANR	1093779	Symbol	filter -> data		1093469						
ANR	1093780	Symbol	filter		1093469						
ANR	1093781	Symbol	filter -> output_function		1093469						
ANR	1093782	Symbol	filter -> status		1093469						
ANR	1093783	Symbol	* * filter		1093469						
ANR	1093784	Function	mbfl_filt_conv_utf32be_wchar	190:0:4377:5079							
ANR	1093785	FunctionDef	"mbfl_filt_conv_utf32be_wchar (int c , mbfl_convert_filter * filter)"		1093784	0					
ANR	1093786	CompoundStatement		191:0:4446:5079	1093784	0					
ANR	1093787	IdentifierDeclStatement	int n ;	192:1:4449:4454	1093784	0	True				
ANR	1093788	IdentifierDecl	n		1093784	0					
ANR	1093789	IdentifierDeclType	int		1093784	0					
ANR	1093790	Identifier	n		1093784	1					
ANR	1093791	IfStatement	if ( filter -> status == 0 )		1093784	1					
ANR	1093792	Condition	filter -> status == 0	194:5:4462:4480	1093784	0	True				
ANR	1093793	EqualityExpression	filter -> status == 0		1093784	0		==			
ANR	1093794	PtrMemberAccess	filter -> status		1093784	0					
ANR	1093795	Identifier	filter		1093784	0					
ANR	1093796	Identifier	status		1093784	1					
ANR	1093797	PrimaryExpression	0		1093784	1					
ANR	1093798	CompoundStatement		4:26:36:36	1093784	1					
ANR	1093799	ExpressionStatement	filter -> status = 1	195:2:4487:4505	1093784	0	True				
ANR	1093800	AssignmentExpression	filter -> status = 1		1093784	0		=			
ANR	1093801	PtrMemberAccess	filter -> status		1093784	0					
ANR	1093802	Identifier	filter		1093784	0					
ANR	1093803	Identifier	status		1093784	1					
ANR	1093804	PrimaryExpression	1		1093784	1					
ANR	1093805	ExpressionStatement	n = ( c & 0xff ) << 24	196:2:4509:4529	1093784	1	True				
ANR	1093806	AssignmentExpression	n = ( c & 0xff ) << 24		1093784	0		=			
ANR	1093807	Identifier	n		1093784	0					
ANR	1093808	ShiftExpression	( c & 0xff ) << 24		1093784	1		<<			
ANR	1093809	BitAndExpression	c & 0xff		1093784	0		&			
ANR	1093810	Identifier	c		1093784	0					
ANR	1093811	PrimaryExpression	0xff		1093784	1					
ANR	1093812	PrimaryExpression	24		1093784	1					
ANR	1093813	ExpressionStatement	filter -> cache = n	197:2:4533:4550	1093784	2	True				
ANR	1093814	AssignmentExpression	filter -> cache = n		1093784	0		=			
ANR	1093815	PtrMemberAccess	filter -> cache		1093784	0					
ANR	1093816	Identifier	filter		1093784	0					
ANR	1093817	Identifier	cache		1093784	1					
ANR	1093818	Identifier	n		1093784	1					
ANR	1093819	ElseStatement	else		1093784	0					
ANR	1093820	IfStatement	if ( filter -> status == 1 )		1093784	0					
ANR	1093821	Condition	filter -> status == 1	198:12:4564:4582	1093784	0	True				
ANR	1093822	EqualityExpression	filter -> status == 1		1093784	0		==			
ANR	1093823	PtrMemberAccess	filter -> status		1093784	0					
ANR	1093824	Identifier	filter		1093784	0					
ANR	1093825	Identifier	status		1093784	1					
ANR	1093826	PrimaryExpression	1		1093784	1					
ANR	1093827	CompoundStatement		8:33:138:138	1093784	1					
ANR	1093828	ExpressionStatement	filter -> status = 2	199:2:4589:4607	1093784	0	True				
ANR	1093829	AssignmentExpression	filter -> status = 2		1093784	0		=			
ANR	1093830	PtrMemberAccess	filter -> status		1093784	0					
ANR	1093831	Identifier	filter		1093784	0					
ANR	1093832	Identifier	status		1093784	1					
ANR	1093833	PrimaryExpression	2		1093784	1					
ANR	1093834	ExpressionStatement	n = ( c & 0xff ) << 16	200:2:4611:4631	1093784	1	True				
ANR	1093835	AssignmentExpression	n = ( c & 0xff ) << 16		1093784	0		=			
ANR	1093836	Identifier	n		1093784	0					
ANR	1093837	ShiftExpression	( c & 0xff ) << 16		1093784	1		<<			
ANR	1093838	BitAndExpression	c & 0xff		1093784	0		&			
ANR	1093839	Identifier	c		1093784	0					
ANR	1093840	PrimaryExpression	0xff		1093784	1					
ANR	1093841	PrimaryExpression	16		1093784	1					
ANR	1093842	ExpressionStatement	filter -> cache |= n	201:2:4635:4653	1093784	2	True				
ANR	1093843	AssignmentExpression	filter -> cache |= n		1093784	0		|=			
ANR	1093844	PtrMemberAccess	filter -> cache		1093784	0					
ANR	1093845	Identifier	filter		1093784	0					
ANR	1093846	Identifier	cache		1093784	1					
ANR	1093847	Identifier	n		1093784	1					
ANR	1093848	ElseStatement	else		1093784	0					
ANR	1093849	IfStatement	if ( filter -> status == 2 )		1093784	0					
ANR	1093850	Condition	filter -> status == 2	202:12:4667:4685	1093784	0	True				
ANR	1093851	EqualityExpression	filter -> status == 2		1093784	0		==			
ANR	1093852	PtrMemberAccess	filter -> status		1093784	0					
ANR	1093853	Identifier	filter		1093784	0					
ANR	1093854	Identifier	status		1093784	1					
ANR	1093855	PrimaryExpression	2		1093784	1					
ANR	1093856	CompoundStatement		12:33:241:241	1093784	1					
ANR	1093857	ExpressionStatement	filter -> status = 3	203:2:4692:4710	1093784	0	True				
ANR	1093858	AssignmentExpression	filter -> status = 3		1093784	0		=			
ANR	1093859	PtrMemberAccess	filter -> status		1093784	0					
ANR	1093860	Identifier	filter		1093784	0					
ANR	1093861	Identifier	status		1093784	1					
ANR	1093862	PrimaryExpression	3		1093784	1					
ANR	1093863	ExpressionStatement	n = ( c & 0xff ) << 8	204:2:4714:4733	1093784	1	True				
ANR	1093864	AssignmentExpression	n = ( c & 0xff ) << 8		1093784	0		=			
ANR	1093865	Identifier	n		1093784	0					
ANR	1093866	ShiftExpression	( c & 0xff ) << 8		1093784	1		<<			
ANR	1093867	BitAndExpression	c & 0xff		1093784	0		&			
ANR	1093868	Identifier	c		1093784	0					
ANR	1093869	PrimaryExpression	0xff		1093784	1					
ANR	1093870	PrimaryExpression	8		1093784	1					
ANR	1093871	ExpressionStatement	filter -> cache |= n	205:2:4737:4755	1093784	2	True				
ANR	1093872	AssignmentExpression	filter -> cache |= n		1093784	0		|=			
ANR	1093873	PtrMemberAccess	filter -> cache		1093784	0					
ANR	1093874	Identifier	filter		1093784	0					
ANR	1093875	Identifier	cache		1093784	1					
ANR	1093876	Identifier	n		1093784	1					
ANR	1093877	ElseStatement	else		1093784	0					
ANR	1093878	CompoundStatement		16:8:318:318	1093784	0					
ANR	1093879	ExpressionStatement	filter -> status = 0	207:2:4769:4787	1093784	0	True				
ANR	1093880	AssignmentExpression	filter -> status = 0		1093784	0		=			
ANR	1093881	PtrMemberAccess	filter -> status		1093784	0					
ANR	1093882	Identifier	filter		1093784	0					
ANR	1093883	Identifier	status		1093784	1					
ANR	1093884	PrimaryExpression	0		1093784	1					
ANR	1093885	ExpressionStatement	n = ( c & 0xff ) | filter -> cache	208:2:4791:4821	1093784	1	True				
ANR	1093886	AssignmentExpression	n = ( c & 0xff ) | filter -> cache		1093784	0		=			
ANR	1093887	Identifier	n		1093784	0					
ANR	1093888	InclusiveOrExpression	( c & 0xff ) | filter -> cache		1093784	1		|			
ANR	1093889	BitAndExpression	c & 0xff		1093784	0		&			
ANR	1093890	Identifier	c		1093784	0					
ANR	1093891	PrimaryExpression	0xff		1093784	1					
ANR	1093892	PtrMemberAccess	filter -> cache		1093784	1					
ANR	1093893	Identifier	filter		1093784	0					
ANR	1093894	Identifier	cache		1093784	1					
ANR	1093895	IfStatement	if ( n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff ) )		1093784	2					
ANR	1093896	Condition	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )	209:6:4829:4884	1093784	0	True				
ANR	1093897	AndExpression	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )		1093784	0		&&			
ANR	1093898	RelationalExpression	n < MBFL_WCSPLANE_UTF32MAX		1093784	0		<			
ANR	1093899	Identifier	n		1093784	0					
ANR	1093900	Identifier	MBFL_WCSPLANE_UTF32MAX		1093784	1					
ANR	1093901	OrExpression	n < 0xd800 || n > 0xdfff		1093784	1		||			
ANR	1093902	RelationalExpression	n < 0xd800		1093784	0		<			
ANR	1093903	Identifier	n		1093784	0					
ANR	1093904	PrimaryExpression	0xd800		1093784	1					
ANR	1093905	RelationalExpression	n > 0xdfff		1093784	1		>			
ANR	1093906	Identifier	n		1093784	0					
ANR	1093907	PrimaryExpression	0xdfff		1093784	1					
ANR	1093908	CompoundStatement		19:64:440:440	1093784	1					
ANR	1093909	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	210:3:4892:4939	1093784	0	True				
ANR	1093910	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1093784	0					
ANR	1093911	Callee	CK		1093784	0					
ANR	1093912	Identifier	CK		1093784	0					
ANR	1093913	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1093784	1					
ANR	1093914	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1093784	0					
ANR	1093915	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1093784	0					
ANR	1093916	Callee	* filter -> output_function		1093784	0					
ANR	1093917	UnaryOperationExpression	* filter -> output_function		1093784	0					
ANR	1093918	UnaryOperator	*		1093784	0					
ANR	1093919	PtrMemberAccess	filter -> output_function		1093784	1					
ANR	1093920	Identifier	filter		1093784	0					
ANR	1093921	Identifier	output_function		1093784	1					
ANR	1093922	ArgumentList	n		1093784	1					
ANR	1093923	Argument	n		1093784	0					
ANR	1093924	Identifier	n		1093784	0					
ANR	1093925	Argument	filter -> data		1093784	1					
ANR	1093926	PtrMemberAccess	filter -> data		1093784	0					
ANR	1093927	Identifier	filter		1093784	0					
ANR	1093928	Identifier	data		1093784	1					
ANR	1093929	ElseStatement	else		1093784	0					
ANR	1093930	CompoundStatement		21:9:503:503	1093784	0					
ANR	1093931	ExpressionStatement	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH	212:3:4955:5007	1093784	0	True				
ANR	1093932	AssignmentExpression	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		1093784	0		=			
ANR	1093933	Identifier	n		1093784	0					
ANR	1093934	InclusiveOrExpression	( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		1093784	1		|			
ANR	1093935	BitAndExpression	n & MBFL_WCSGROUP_MASK		1093784	0		&			
ANR	1093936	Identifier	n		1093784	0					
ANR	1093937	Identifier	MBFL_WCSGROUP_MASK		1093784	1					
ANR	1093938	Identifier	MBFL_WCSGROUP_THROUGH		1093784	1					
ANR	1093939	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	213:3:5012:5059	1093784	1	True				
ANR	1093940	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1093784	0					
ANR	1093941	Callee	CK		1093784	0					
ANR	1093942	Identifier	CK		1093784	0					
ANR	1093943	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1093784	1					
ANR	1093944	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1093784	0					
ANR	1093945	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1093784	0					
ANR	1093946	Callee	* filter -> output_function		1093784	0					
ANR	1093947	UnaryOperationExpression	* filter -> output_function		1093784	0					
ANR	1093948	UnaryOperator	*		1093784	0					
ANR	1093949	PtrMemberAccess	filter -> output_function		1093784	1					
ANR	1093950	Identifier	filter		1093784	0					
ANR	1093951	Identifier	output_function		1093784	1					
ANR	1093952	ArgumentList	n		1093784	1					
ANR	1093953	Argument	n		1093784	0					
ANR	1093954	Identifier	n		1093784	0					
ANR	1093955	Argument	filter -> data		1093784	1					
ANR	1093956	PtrMemberAccess	filter -> data		1093784	0					
ANR	1093957	Identifier	filter		1093784	0					
ANR	1093958	Identifier	data		1093784	1					
ANR	1093959	ReturnStatement	return c ;	216:1:5069:5077	1093784	2	True				
ANR	1093960	Identifier	c		1093784	0					
ANR	1093961	ReturnType	int		1093784	1					
ANR	1093962	Identifier	mbfl_filt_conv_utf32be_wchar		1093784	2					
ANR	1093963	ParameterList	"int c , mbfl_convert_filter * filter"		1093784	3					
ANR	1093964	Parameter	int c	190:33:4410:4414	1093784	0	True				
ANR	1093965	ParameterType	int		1093784	0					
ANR	1093966	Identifier	c		1093784	1					
ANR	1093967	Parameter	mbfl_convert_filter * filter	190:40:4417:4443	1093784	1	True				
ANR	1093968	ParameterType	mbfl_convert_filter *		1093784	0					
ANR	1093969	Identifier	filter		1093784	1					
ANR	1093970	CFGEntryNode	ENTRY		1093784		True				
ANR	1093971	CFGExitNode	EXIT		1093784		True				
ANR	1093972	Symbol	MBFL_WCSPLANE_UTF32MAX		1093784						
ANR	1093973	Symbol	filter -> cache		1093784						
ANR	1093974	Symbol	c		1093784						
ANR	1093975	Symbol	MBFL_WCSGROUP_MASK		1093784						
ANR	1093976	Symbol	MBFL_WCSGROUP_THROUGH		1093784						
ANR	1093977	Symbol	* filter -> output_function		1093784						
ANR	1093978	Symbol	n		1093784						
ANR	1093979	Symbol	* filter		1093784						
ANR	1093980	Symbol	filter -> data		1093784						
ANR	1093981	Symbol	filter		1093784						
ANR	1093982	Symbol	filter -> output_function		1093784						
ANR	1093983	Symbol	filter -> status		1093784						
ANR	1093984	Symbol	* * filter		1093784						
ANR	1093985	Function	mbfl_filt_conv_wchar_utf32be	222:0:5110:5628							
ANR	1093986	FunctionDef	"mbfl_filt_conv_wchar_utf32be (int c , mbfl_convert_filter * filter)"		1093985	0					
ANR	1093987	CompoundStatement		223:0:5179:5628	1093985	0					
ANR	1093988	IfStatement	if ( c >= 0 && c < MBFL_WCSPLANE_UTF32MAX )		1093985	0					
ANR	1093989	Condition	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX	224:5:5186:5221	1093985	0	True				
ANR	1093990	AndExpression	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX		1093985	0		&&			
ANR	1093991	RelationalExpression	c >= 0		1093985	0		>=			
ANR	1093992	Identifier	c		1093985	0					
ANR	1093993	PrimaryExpression	0		1093985	1					
ANR	1093994	RelationalExpression	c < MBFL_WCSPLANE_UTF32MAX		1093985	1		<			
ANR	1093995	Identifier	c		1093985	0					
ANR	1093996	Identifier	MBFL_WCSPLANE_UTF32MAX		1093985	1					
ANR	1093997	CompoundStatement		2:43:44:44	1093985	1					
ANR	1093998	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"	225:2:5228:5290	1093985	0	True				
ANR	1093999	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"		1093985	0					
ANR	1094000	Callee	CK		1093985	0					
ANR	1094001	Identifier	CK		1093985	0					
ANR	1094002	ArgumentList	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1093985	1					
ANR	1094003	Argument	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1093985	0					
ANR	1094004	CallExpression	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1093985	0					
ANR	1094005	Callee	* filter -> output_function		1093985	0					
ANR	1094006	UnaryOperationExpression	* filter -> output_function		1093985	0					
ANR	1094007	UnaryOperator	*		1093985	0					
ANR	1094008	PtrMemberAccess	filter -> output_function		1093985	1					
ANR	1094009	Identifier	filter		1093985	0					
ANR	1094010	Identifier	output_function		1093985	1					
ANR	1094011	ArgumentList	( c >> 24 ) & 0xff		1093985	1					
ANR	1094012	Argument	( c >> 24 ) & 0xff		1093985	0					
ANR	1094013	BitAndExpression	( c >> 24 ) & 0xff		1093985	0		&			
ANR	1094014	ShiftExpression	c >> 24		1093985	0		>>			
ANR	1094015	Identifier	c		1093985	0					
ANR	1094016	PrimaryExpression	24		1093985	1					
ANR	1094017	PrimaryExpression	0xff		1093985	1					
ANR	1094018	Argument	filter -> data		1093985	1					
ANR	1094019	PtrMemberAccess	filter -> data		1093985	0					
ANR	1094020	Identifier	filter		1093985	0					
ANR	1094021	Identifier	data		1093985	1					
ANR	1094022	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"	226:2:5294:5356	1093985	1	True				
ANR	1094023	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"		1093985	0					
ANR	1094024	Callee	CK		1093985	0					
ANR	1094025	Identifier	CK		1093985	0					
ANR	1094026	ArgumentList	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1093985	1					
ANR	1094027	Argument	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1093985	0					
ANR	1094028	CallExpression	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1093985	0					
ANR	1094029	Callee	* filter -> output_function		1093985	0					
ANR	1094030	UnaryOperationExpression	* filter -> output_function		1093985	0					
ANR	1094031	UnaryOperator	*		1093985	0					
ANR	1094032	PtrMemberAccess	filter -> output_function		1093985	1					
ANR	1094033	Identifier	filter		1093985	0					
ANR	1094034	Identifier	output_function		1093985	1					
ANR	1094035	ArgumentList	( c >> 16 ) & 0xff		1093985	1					
ANR	1094036	Argument	( c >> 16 ) & 0xff		1093985	0					
ANR	1094037	BitAndExpression	( c >> 16 ) & 0xff		1093985	0		&			
ANR	1094038	ShiftExpression	c >> 16		1093985	0		>>			
ANR	1094039	Identifier	c		1093985	0					
ANR	1094040	PrimaryExpression	16		1093985	1					
ANR	1094041	PrimaryExpression	0xff		1093985	1					
ANR	1094042	Argument	filter -> data		1093985	1					
ANR	1094043	PtrMemberAccess	filter -> data		1093985	0					
ANR	1094044	Identifier	filter		1093985	0					
ANR	1094045	Identifier	data		1093985	1					
ANR	1094046	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	227:2:5360:5421	1093985	2	True				
ANR	1094047	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		1093985	0					
ANR	1094048	Callee	CK		1093985	0					
ANR	1094049	Identifier	CK		1093985	0					
ANR	1094050	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1093985	1					
ANR	1094051	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1093985	0					
ANR	1094052	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1093985	0					
ANR	1094053	Callee	* filter -> output_function		1093985	0					
ANR	1094054	UnaryOperationExpression	* filter -> output_function		1093985	0					
ANR	1094055	UnaryOperator	*		1093985	0					
ANR	1094056	PtrMemberAccess	filter -> output_function		1093985	1					
ANR	1094057	Identifier	filter		1093985	0					
ANR	1094058	Identifier	output_function		1093985	1					
ANR	1094059	ArgumentList	( c >> 8 ) & 0xff		1093985	1					
ANR	1094060	Argument	( c >> 8 ) & 0xff		1093985	0					
ANR	1094061	BitAndExpression	( c >> 8 ) & 0xff		1093985	0		&			
ANR	1094062	ShiftExpression	c >> 8		1093985	0		>>			
ANR	1094063	Identifier	c		1093985	0					
ANR	1094064	PrimaryExpression	8		1093985	1					
ANR	1094065	PrimaryExpression	0xff		1093985	1					
ANR	1094066	Argument	filter -> data		1093985	1					
ANR	1094067	PtrMemberAccess	filter -> data		1093985	0					
ANR	1094068	Identifier	filter		1093985	0					
ANR	1094069	Identifier	data		1093985	1					
ANR	1094070	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	228:2:5425:5479	1093985	3	True				
ANR	1094071	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		1093985	0					
ANR	1094072	Callee	CK		1093985	0					
ANR	1094073	Identifier	CK		1093985	0					
ANR	1094074	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1093985	1					
ANR	1094075	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1093985	0					
ANR	1094076	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1093985	0					
ANR	1094077	Callee	* filter -> output_function		1093985	0					
ANR	1094078	UnaryOperationExpression	* filter -> output_function		1093985	0					
ANR	1094079	UnaryOperator	*		1093985	0					
ANR	1094080	PtrMemberAccess	filter -> output_function		1093985	1					
ANR	1094081	Identifier	filter		1093985	0					
ANR	1094082	Identifier	output_function		1093985	1					
ANR	1094083	ArgumentList	c & 0xff		1093985	1					
ANR	1094084	Argument	c & 0xff		1093985	0					
ANR	1094085	BitAndExpression	c & 0xff		1093985	0		&			
ANR	1094086	Identifier	c		1093985	0					
ANR	1094087	PrimaryExpression	0xff		1093985	1					
ANR	1094088	Argument	filter -> data		1093985	1					
ANR	1094089	PtrMemberAccess	filter -> data		1093985	0					
ANR	1094090	Identifier	filter		1093985	0					
ANR	1094091	Identifier	data		1093985	1					
ANR	1094092	ElseStatement	else		1093985	0					
ANR	1094093	CompoundStatement		7:8:309:309	1093985	0					
ANR	1094094	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		1093985	0					
ANR	1094095	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	230:6:5497:5555	1093985	0	True				
ANR	1094096	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1093985	0		!=			
ANR	1094097	PtrMemberAccess	filter -> illegal_mode		1093985	0					
ANR	1094098	Identifier	filter		1093985	0					
ANR	1094099	Identifier	illegal_mode		1093985	1					
ANR	1094100	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1093985	1					
ANR	1094101	CompoundStatement		8:67:378:378	1093985	1					
ANR	1094102	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	231:3:5563:5607	1093985	0	True				
ANR	1094103	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		1093985	0					
ANR	1094104	Callee	CK		1093985	0					
ANR	1094105	Identifier	CK		1093985	0					
ANR	1094106	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		1093985	1					
ANR	1094107	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		1093985	0					
ANR	1094108	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		1093985	0					
ANR	1094109	Callee	mbfl_filt_conv_illegal_output		1093985	0					
ANR	1094110	Identifier	mbfl_filt_conv_illegal_output		1093985	0					
ANR	1094111	ArgumentList	c		1093985	1					
ANR	1094112	Argument	c		1093985	0					
ANR	1094113	Identifier	c		1093985	0					
ANR	1094114	Argument	filter		1093985	1					
ANR	1094115	Identifier	filter		1093985	0					
ANR	1094116	ReturnStatement	return c ;	235:1:5618:5626	1093985	1	True				
ANR	1094117	Identifier	c		1093985	0					
ANR	1094118	ReturnType	int		1093985	1					
ANR	1094119	Identifier	mbfl_filt_conv_wchar_utf32be		1093985	2					
ANR	1094120	ParameterList	"int c , mbfl_convert_filter * filter"		1093985	3					
ANR	1094121	Parameter	int c	222:33:5143:5147	1093985	0	True				
ANR	1094122	ParameterType	int		1093985	0					
ANR	1094123	Identifier	c		1093985	1					
ANR	1094124	Parameter	mbfl_convert_filter * filter	222:40:5150:5176	1093985	1	True				
ANR	1094125	ParameterType	mbfl_convert_filter *		1093985	0					
ANR	1094126	Identifier	filter		1093985	1					
ANR	1094127	CFGEntryNode	ENTRY		1093985		True				
ANR	1094128	CFGExitNode	EXIT		1093985		True				
ANR	1094129	Symbol	filter		1093985						
ANR	1094130	Symbol	MBFL_WCSPLANE_UTF32MAX		1093985						
ANR	1094131	Symbol	c		1093985						
ANR	1094132	Symbol	filter -> output_function		1093985						
ANR	1094133	Symbol	mbfl_filt_conv_illegal_output		1093985						
ANR	1094134	Symbol	filter -> illegal_mode		1093985						
ANR	1094135	Symbol	* filter -> output_function		1093985						
ANR	1094136	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1093985						
ANR	1094137	Symbol	* filter		1093985						
ANR	1094138	Symbol	* * filter		1093985						
ANR	1094139	Symbol	filter -> data		1093985						
ANR	1094140	Function	mbfl_filt_conv_utf32le_wchar	241:0:5659:6363							
ANR	1094141	FunctionDef	"mbfl_filt_conv_utf32le_wchar (int c , mbfl_convert_filter * filter)"		1094140	0					
ANR	1094142	CompoundStatement		242:0:5728:6363	1094140	0					
ANR	1094143	IdentifierDeclStatement	int n ;	243:1:5731:5736	1094140	0	True				
ANR	1094144	IdentifierDecl	n		1094140	0					
ANR	1094145	IdentifierDeclType	int		1094140	0					
ANR	1094146	Identifier	n		1094140	1					
ANR	1094147	IfStatement	if ( filter -> status == 0 )		1094140	1					
ANR	1094148	Condition	filter -> status == 0	245:5:5744:5762	1094140	0	True				
ANR	1094149	EqualityExpression	filter -> status == 0		1094140	0		==			
ANR	1094150	PtrMemberAccess	filter -> status		1094140	0					
ANR	1094151	Identifier	filter		1094140	0					
ANR	1094152	Identifier	status		1094140	1					
ANR	1094153	PrimaryExpression	0		1094140	1					
ANR	1094154	CompoundStatement		4:26:36:36	1094140	1					
ANR	1094155	ExpressionStatement	filter -> status = 1	246:2:5769:5787	1094140	0	True				
ANR	1094156	AssignmentExpression	filter -> status = 1		1094140	0		=			
ANR	1094157	PtrMemberAccess	filter -> status		1094140	0					
ANR	1094158	Identifier	filter		1094140	0					
ANR	1094159	Identifier	status		1094140	1					
ANR	1094160	PrimaryExpression	1		1094140	1					
ANR	1094161	ExpressionStatement	n = ( c & 0xff )	247:2:5791:5805	1094140	1	True				
ANR	1094162	AssignmentExpression	n = ( c & 0xff )		1094140	0		=			
ANR	1094163	Identifier	n		1094140	0					
ANR	1094164	BitAndExpression	c & 0xff		1094140	1		&			
ANR	1094165	Identifier	c		1094140	0					
ANR	1094166	PrimaryExpression	0xff		1094140	1					
ANR	1094167	ExpressionStatement	filter -> cache = n	248:2:5809:5826	1094140	2	True				
ANR	1094168	AssignmentExpression	filter -> cache = n		1094140	0		=			
ANR	1094169	PtrMemberAccess	filter -> cache		1094140	0					
ANR	1094170	Identifier	filter		1094140	0					
ANR	1094171	Identifier	cache		1094140	1					
ANR	1094172	Identifier	n		1094140	1					
ANR	1094173	ElseStatement	else		1094140	0					
ANR	1094174	IfStatement	if ( filter -> status == 1 )		1094140	0					
ANR	1094175	Condition	filter -> status == 1	249:12:5840:5858	1094140	0	True				
ANR	1094176	EqualityExpression	filter -> status == 1		1094140	0		==			
ANR	1094177	PtrMemberAccess	filter -> status		1094140	0					
ANR	1094178	Identifier	filter		1094140	0					
ANR	1094179	Identifier	status		1094140	1					
ANR	1094180	PrimaryExpression	1		1094140	1					
ANR	1094181	CompoundStatement		8:33:132:132	1094140	1					
ANR	1094182	ExpressionStatement	filter -> status = 2	250:2:5865:5883	1094140	0	True				
ANR	1094183	AssignmentExpression	filter -> status = 2		1094140	0		=			
ANR	1094184	PtrMemberAccess	filter -> status		1094140	0					
ANR	1094185	Identifier	filter		1094140	0					
ANR	1094186	Identifier	status		1094140	1					
ANR	1094187	PrimaryExpression	2		1094140	1					
ANR	1094188	ExpressionStatement	n = ( c & 0xff ) << 8	251:2:5887:5906	1094140	1	True				
ANR	1094189	AssignmentExpression	n = ( c & 0xff ) << 8		1094140	0		=			
ANR	1094190	Identifier	n		1094140	0					
ANR	1094191	ShiftExpression	( c & 0xff ) << 8		1094140	1		<<			
ANR	1094192	BitAndExpression	c & 0xff		1094140	0		&			
ANR	1094193	Identifier	c		1094140	0					
ANR	1094194	PrimaryExpression	0xff		1094140	1					
ANR	1094195	PrimaryExpression	8		1094140	1					
ANR	1094196	ExpressionStatement	filter -> cache |= n	252:2:5910:5928	1094140	2	True				
ANR	1094197	AssignmentExpression	filter -> cache |= n		1094140	0		|=			
ANR	1094198	PtrMemberAccess	filter -> cache		1094140	0					
ANR	1094199	Identifier	filter		1094140	0					
ANR	1094200	Identifier	cache		1094140	1					
ANR	1094201	Identifier	n		1094140	1					
ANR	1094202	ElseStatement	else		1094140	0					
ANR	1094203	IfStatement	if ( filter -> status == 2 )		1094140	0					
ANR	1094204	Condition	filter -> status == 2	253:12:5942:5960	1094140	0	True				
ANR	1094205	EqualityExpression	filter -> status == 2		1094140	0		==			
ANR	1094206	PtrMemberAccess	filter -> status		1094140	0					
ANR	1094207	Identifier	filter		1094140	0					
ANR	1094208	Identifier	status		1094140	1					
ANR	1094209	PrimaryExpression	2		1094140	1					
ANR	1094210	CompoundStatement		12:33:234:234	1094140	1					
ANR	1094211	ExpressionStatement	filter -> status = 3	254:2:5967:5985	1094140	0	True				
ANR	1094212	AssignmentExpression	filter -> status = 3		1094140	0		=			
ANR	1094213	PtrMemberAccess	filter -> status		1094140	0					
ANR	1094214	Identifier	filter		1094140	0					
ANR	1094215	Identifier	status		1094140	1					
ANR	1094216	PrimaryExpression	3		1094140	1					
ANR	1094217	ExpressionStatement	n = ( c & 0xff ) << 16	255:2:5989:6009	1094140	1	True				
ANR	1094218	AssignmentExpression	n = ( c & 0xff ) << 16		1094140	0		=			
ANR	1094219	Identifier	n		1094140	0					
ANR	1094220	ShiftExpression	( c & 0xff ) << 16		1094140	1		<<			
ANR	1094221	BitAndExpression	c & 0xff		1094140	0		&			
ANR	1094222	Identifier	c		1094140	0					
ANR	1094223	PrimaryExpression	0xff		1094140	1					
ANR	1094224	PrimaryExpression	16		1094140	1					
ANR	1094225	ExpressionStatement	filter -> cache |= n	256:2:6013:6031	1094140	2	True				
ANR	1094226	AssignmentExpression	filter -> cache |= n		1094140	0		|=			
ANR	1094227	PtrMemberAccess	filter -> cache		1094140	0					
ANR	1094228	Identifier	filter		1094140	0					
ANR	1094229	Identifier	cache		1094140	1					
ANR	1094230	Identifier	n		1094140	1					
ANR	1094231	ElseStatement	else		1094140	0					
ANR	1094232	CompoundStatement		16:8:312:312	1094140	0					
ANR	1094233	ExpressionStatement	filter -> status = 0	258:2:6045:6063	1094140	0	True				
ANR	1094234	AssignmentExpression	filter -> status = 0		1094140	0		=			
ANR	1094235	PtrMemberAccess	filter -> status		1094140	0					
ANR	1094236	Identifier	filter		1094140	0					
ANR	1094237	Identifier	status		1094140	1					
ANR	1094238	PrimaryExpression	0		1094140	1					
ANR	1094239	ExpressionStatement	n = ( ( c & 0xff ) << 24 ) | filter -> cache	259:2:6067:6105	1094140	1	True				
ANR	1094240	AssignmentExpression	n = ( ( c & 0xff ) << 24 ) | filter -> cache		1094140	0		=			
ANR	1094241	Identifier	n		1094140	0					
ANR	1094242	InclusiveOrExpression	( ( c & 0xff ) << 24 ) | filter -> cache		1094140	1		|			
ANR	1094243	ShiftExpression	( c & 0xff ) << 24		1094140	0		<<			
ANR	1094244	BitAndExpression	c & 0xff		1094140	0		&			
ANR	1094245	Identifier	c		1094140	0					
ANR	1094246	PrimaryExpression	0xff		1094140	1					
ANR	1094247	PrimaryExpression	24		1094140	1					
ANR	1094248	PtrMemberAccess	filter -> cache		1094140	1					
ANR	1094249	Identifier	filter		1094140	0					
ANR	1094250	Identifier	cache		1094140	1					
ANR	1094251	IfStatement	if ( n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff ) )		1094140	2					
ANR	1094252	Condition	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )	260:6:6113:6168	1094140	0	True				
ANR	1094253	AndExpression	n < MBFL_WCSPLANE_UTF32MAX && ( n < 0xd800 || n > 0xdfff )		1094140	0		&&			
ANR	1094254	RelationalExpression	n < MBFL_WCSPLANE_UTF32MAX		1094140	0		<			
ANR	1094255	Identifier	n		1094140	0					
ANR	1094256	Identifier	MBFL_WCSPLANE_UTF32MAX		1094140	1					
ANR	1094257	OrExpression	n < 0xd800 || n > 0xdfff		1094140	1		||			
ANR	1094258	RelationalExpression	n < 0xd800		1094140	0		<			
ANR	1094259	Identifier	n		1094140	0					
ANR	1094260	PrimaryExpression	0xd800		1094140	1					
ANR	1094261	RelationalExpression	n > 0xdfff		1094140	1		>			
ANR	1094262	Identifier	n		1094140	0					
ANR	1094263	PrimaryExpression	0xdfff		1094140	1					
ANR	1094264	CompoundStatement		19:64:442:442	1094140	1					
ANR	1094265	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	261:3:6176:6223	1094140	0	True				
ANR	1094266	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1094140	0					
ANR	1094267	Callee	CK		1094140	0					
ANR	1094268	Identifier	CK		1094140	0					
ANR	1094269	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1094140	1					
ANR	1094270	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1094140	0					
ANR	1094271	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1094140	0					
ANR	1094272	Callee	* filter -> output_function		1094140	0					
ANR	1094273	UnaryOperationExpression	* filter -> output_function		1094140	0					
ANR	1094274	UnaryOperator	*		1094140	0					
ANR	1094275	PtrMemberAccess	filter -> output_function		1094140	1					
ANR	1094276	Identifier	filter		1094140	0					
ANR	1094277	Identifier	output_function		1094140	1					
ANR	1094278	ArgumentList	n		1094140	1					
ANR	1094279	Argument	n		1094140	0					
ANR	1094280	Identifier	n		1094140	0					
ANR	1094281	Argument	filter -> data		1094140	1					
ANR	1094282	PtrMemberAccess	filter -> data		1094140	0					
ANR	1094283	Identifier	filter		1094140	0					
ANR	1094284	Identifier	data		1094140	1					
ANR	1094285	ElseStatement	else		1094140	0					
ANR	1094286	CompoundStatement		21:9:505:505	1094140	0					
ANR	1094287	ExpressionStatement	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH	263:3:6239:6291	1094140	0	True				
ANR	1094288	AssignmentExpression	n = ( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		1094140	0		=			
ANR	1094289	Identifier	n		1094140	0					
ANR	1094290	InclusiveOrExpression	( n & MBFL_WCSGROUP_MASK ) | MBFL_WCSGROUP_THROUGH		1094140	1		|			
ANR	1094291	BitAndExpression	n & MBFL_WCSGROUP_MASK		1094140	0		&			
ANR	1094292	Identifier	n		1094140	0					
ANR	1094293	Identifier	MBFL_WCSGROUP_MASK		1094140	1					
ANR	1094294	Identifier	MBFL_WCSGROUP_THROUGH		1094140	1					
ANR	1094295	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	264:3:6296:6343	1094140	1	True				
ANR	1094296	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1094140	0					
ANR	1094297	Callee	CK		1094140	0					
ANR	1094298	Identifier	CK		1094140	0					
ANR	1094299	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1094140	1					
ANR	1094300	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1094140	0					
ANR	1094301	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1094140	0					
ANR	1094302	Callee	* filter -> output_function		1094140	0					
ANR	1094303	UnaryOperationExpression	* filter -> output_function		1094140	0					
ANR	1094304	UnaryOperator	*		1094140	0					
ANR	1094305	PtrMemberAccess	filter -> output_function		1094140	1					
ANR	1094306	Identifier	filter		1094140	0					
ANR	1094307	Identifier	output_function		1094140	1					
ANR	1094308	ArgumentList	n		1094140	1					
ANR	1094309	Argument	n		1094140	0					
ANR	1094310	Identifier	n		1094140	0					
ANR	1094311	Argument	filter -> data		1094140	1					
ANR	1094312	PtrMemberAccess	filter -> data		1094140	0					
ANR	1094313	Identifier	filter		1094140	0					
ANR	1094314	Identifier	data		1094140	1					
ANR	1094315	ReturnStatement	return c ;	267:1:6353:6361	1094140	2	True				
ANR	1094316	Identifier	c		1094140	0					
ANR	1094317	ReturnType	int		1094140	1					
ANR	1094318	Identifier	mbfl_filt_conv_utf32le_wchar		1094140	2					
ANR	1094319	ParameterList	"int c , mbfl_convert_filter * filter"		1094140	3					
ANR	1094320	Parameter	int c	241:33:5692:5696	1094140	0	True				
ANR	1094321	ParameterType	int		1094140	0					
ANR	1094322	Identifier	c		1094140	1					
ANR	1094323	Parameter	mbfl_convert_filter * filter	241:40:5699:5725	1094140	1	True				
ANR	1094324	ParameterType	mbfl_convert_filter *		1094140	0					
ANR	1094325	Identifier	filter		1094140	1					
ANR	1094326	CFGEntryNode	ENTRY		1094140		True				
ANR	1094327	CFGExitNode	EXIT		1094140		True				
ANR	1094328	Symbol	MBFL_WCSPLANE_UTF32MAX		1094140						
ANR	1094329	Symbol	filter -> cache		1094140						
ANR	1094330	Symbol	c		1094140						
ANR	1094331	Symbol	MBFL_WCSGROUP_MASK		1094140						
ANR	1094332	Symbol	MBFL_WCSGROUP_THROUGH		1094140						
ANR	1094333	Symbol	* filter -> output_function		1094140						
ANR	1094334	Symbol	n		1094140						
ANR	1094335	Symbol	* filter		1094140						
ANR	1094336	Symbol	filter -> data		1094140						
ANR	1094337	Symbol	filter		1094140						
ANR	1094338	Symbol	filter -> output_function		1094140						
ANR	1094339	Symbol	filter -> status		1094140						
ANR	1094340	Symbol	* * filter		1094140						
ANR	1094341	Function	mbfl_filt_conv_wchar_utf32le	273:0:6394:6912							
ANR	1094342	FunctionDef	"mbfl_filt_conv_wchar_utf32le (int c , mbfl_convert_filter * filter)"		1094341	0					
ANR	1094343	CompoundStatement		274:0:6463:6912	1094341	0					
ANR	1094344	IfStatement	if ( c >= 0 && c < MBFL_WCSPLANE_UTF32MAX )		1094341	0					
ANR	1094345	Condition	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX	275:5:6470:6505	1094341	0	True				
ANR	1094346	AndExpression	c >= 0 && c < MBFL_WCSPLANE_UTF32MAX		1094341	0		&&			
ANR	1094347	RelationalExpression	c >= 0		1094341	0		>=			
ANR	1094348	Identifier	c		1094341	0					
ANR	1094349	PrimaryExpression	0		1094341	1					
ANR	1094350	RelationalExpression	c < MBFL_WCSPLANE_UTF32MAX		1094341	1		<			
ANR	1094351	Identifier	c		1094341	0					
ANR	1094352	Identifier	MBFL_WCSPLANE_UTF32MAX		1094341	1					
ANR	1094353	CompoundStatement		2:43:44:44	1094341	1					
ANR	1094354	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	276:2:6512:6566	1094341	0	True				
ANR	1094355	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		1094341	0					
ANR	1094356	Callee	CK		1094341	0					
ANR	1094357	Identifier	CK		1094341	0					
ANR	1094358	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1094341	1					
ANR	1094359	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1094341	0					
ANR	1094360	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1094341	0					
ANR	1094361	Callee	* filter -> output_function		1094341	0					
ANR	1094362	UnaryOperationExpression	* filter -> output_function		1094341	0					
ANR	1094363	UnaryOperator	*		1094341	0					
ANR	1094364	PtrMemberAccess	filter -> output_function		1094341	1					
ANR	1094365	Identifier	filter		1094341	0					
ANR	1094366	Identifier	output_function		1094341	1					
ANR	1094367	ArgumentList	c & 0xff		1094341	1					
ANR	1094368	Argument	c & 0xff		1094341	0					
ANR	1094369	BitAndExpression	c & 0xff		1094341	0		&			
ANR	1094370	Identifier	c		1094341	0					
ANR	1094371	PrimaryExpression	0xff		1094341	1					
ANR	1094372	Argument	filter -> data		1094341	1					
ANR	1094373	PtrMemberAccess	filter -> data		1094341	0					
ANR	1094374	Identifier	filter		1094341	0					
ANR	1094375	Identifier	data		1094341	1					
ANR	1094376	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	277:2:6570:6631	1094341	1	True				
ANR	1094377	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		1094341	0					
ANR	1094378	Callee	CK		1094341	0					
ANR	1094379	Identifier	CK		1094341	0					
ANR	1094380	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1094341	1					
ANR	1094381	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1094341	0					
ANR	1094382	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1094341	0					
ANR	1094383	Callee	* filter -> output_function		1094341	0					
ANR	1094384	UnaryOperationExpression	* filter -> output_function		1094341	0					
ANR	1094385	UnaryOperator	*		1094341	0					
ANR	1094386	PtrMemberAccess	filter -> output_function		1094341	1					
ANR	1094387	Identifier	filter		1094341	0					
ANR	1094388	Identifier	output_function		1094341	1					
ANR	1094389	ArgumentList	( c >> 8 ) & 0xff		1094341	1					
ANR	1094390	Argument	( c >> 8 ) & 0xff		1094341	0					
ANR	1094391	BitAndExpression	( c >> 8 ) & 0xff		1094341	0		&			
ANR	1094392	ShiftExpression	c >> 8		1094341	0		>>			
ANR	1094393	Identifier	c		1094341	0					
ANR	1094394	PrimaryExpression	8		1094341	1					
ANR	1094395	PrimaryExpression	0xff		1094341	1					
ANR	1094396	Argument	filter -> data		1094341	1					
ANR	1094397	PtrMemberAccess	filter -> data		1094341	0					
ANR	1094398	Identifier	filter		1094341	0					
ANR	1094399	Identifier	data		1094341	1					
ANR	1094400	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"	278:2:6635:6697	1094341	2	True				
ANR	1094401	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data ) )"		1094341	0					
ANR	1094402	Callee	CK		1094341	0					
ANR	1094403	Identifier	CK		1094341	0					
ANR	1094404	ArgumentList	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1094341	1					
ANR	1094405	Argument	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1094341	0					
ANR	1094406	CallExpression	"( * filter -> output_function ) ( ( c >> 16 ) & 0xff , filter -> data )"		1094341	0					
ANR	1094407	Callee	* filter -> output_function		1094341	0					
ANR	1094408	UnaryOperationExpression	* filter -> output_function		1094341	0					
ANR	1094409	UnaryOperator	*		1094341	0					
ANR	1094410	PtrMemberAccess	filter -> output_function		1094341	1					
ANR	1094411	Identifier	filter		1094341	0					
ANR	1094412	Identifier	output_function		1094341	1					
ANR	1094413	ArgumentList	( c >> 16 ) & 0xff		1094341	1					
ANR	1094414	Argument	( c >> 16 ) & 0xff		1094341	0					
ANR	1094415	BitAndExpression	( c >> 16 ) & 0xff		1094341	0		&			
ANR	1094416	ShiftExpression	c >> 16		1094341	0		>>			
ANR	1094417	Identifier	c		1094341	0					
ANR	1094418	PrimaryExpression	16		1094341	1					
ANR	1094419	PrimaryExpression	0xff		1094341	1					
ANR	1094420	Argument	filter -> data		1094341	1					
ANR	1094421	PtrMemberAccess	filter -> data		1094341	0					
ANR	1094422	Identifier	filter		1094341	0					
ANR	1094423	Identifier	data		1094341	1					
ANR	1094424	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"	279:2:6701:6763	1094341	3	True				
ANR	1094425	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data ) )"		1094341	0					
ANR	1094426	Callee	CK		1094341	0					
ANR	1094427	Identifier	CK		1094341	0					
ANR	1094428	ArgumentList	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1094341	1					
ANR	1094429	Argument	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1094341	0					
ANR	1094430	CallExpression	"( * filter -> output_function ) ( ( c >> 24 ) & 0xff , filter -> data )"		1094341	0					
ANR	1094431	Callee	* filter -> output_function		1094341	0					
ANR	1094432	UnaryOperationExpression	* filter -> output_function		1094341	0					
ANR	1094433	UnaryOperator	*		1094341	0					
ANR	1094434	PtrMemberAccess	filter -> output_function		1094341	1					
ANR	1094435	Identifier	filter		1094341	0					
ANR	1094436	Identifier	output_function		1094341	1					
ANR	1094437	ArgumentList	( c >> 24 ) & 0xff		1094341	1					
ANR	1094438	Argument	( c >> 24 ) & 0xff		1094341	0					
ANR	1094439	BitAndExpression	( c >> 24 ) & 0xff		1094341	0		&			
ANR	1094440	ShiftExpression	c >> 24		1094341	0		>>			
ANR	1094441	Identifier	c		1094341	0					
ANR	1094442	PrimaryExpression	24		1094341	1					
ANR	1094443	PrimaryExpression	0xff		1094341	1					
ANR	1094444	Argument	filter -> data		1094341	1					
ANR	1094445	PtrMemberAccess	filter -> data		1094341	0					
ANR	1094446	Identifier	filter		1094341	0					
ANR	1094447	Identifier	data		1094341	1					
ANR	1094448	ElseStatement	else		1094341	0					
ANR	1094449	CompoundStatement		7:8:309:309	1094341	0					
ANR	1094450	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		1094341	0					
ANR	1094451	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	281:6:6781:6839	1094341	0	True				
ANR	1094452	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1094341	0		!=			
ANR	1094453	PtrMemberAccess	filter -> illegal_mode		1094341	0					
ANR	1094454	Identifier	filter		1094341	0					
ANR	1094455	Identifier	illegal_mode		1094341	1					
ANR	1094456	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1094341	1					
ANR	1094457	CompoundStatement		8:67:378:378	1094341	1					
ANR	1094458	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	282:3:6847:6891	1094341	0	True				
ANR	1094459	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		1094341	0					
ANR	1094460	Callee	CK		1094341	0					
ANR	1094461	Identifier	CK		1094341	0					
ANR	1094462	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		1094341	1					
ANR	1094463	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		1094341	0					
ANR	1094464	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		1094341	0					
ANR	1094465	Callee	mbfl_filt_conv_illegal_output		1094341	0					
ANR	1094466	Identifier	mbfl_filt_conv_illegal_output		1094341	0					
ANR	1094467	ArgumentList	c		1094341	1					
ANR	1094468	Argument	c		1094341	0					
ANR	1094469	Identifier	c		1094341	0					
ANR	1094470	Argument	filter		1094341	1					
ANR	1094471	Identifier	filter		1094341	0					
ANR	1094472	ReturnStatement	return c ;	286:1:6902:6910	1094341	1	True				
ANR	1094473	Identifier	c		1094341	0					
ANR	1094474	ReturnType	int		1094341	1					
ANR	1094475	Identifier	mbfl_filt_conv_wchar_utf32le		1094341	2					
ANR	1094476	ParameterList	"int c , mbfl_convert_filter * filter"		1094341	3					
ANR	1094477	Parameter	int c	273:33:6427:6431	1094341	0	True				
ANR	1094478	ParameterType	int		1094341	0					
ANR	1094479	Identifier	c		1094341	1					
ANR	1094480	Parameter	mbfl_convert_filter * filter	273:40:6434:6460	1094341	1	True				
ANR	1094481	ParameterType	mbfl_convert_filter *		1094341	0					
ANR	1094482	Identifier	filter		1094341	1					
ANR	1094483	CFGEntryNode	ENTRY		1094341		True				
ANR	1094484	CFGExitNode	EXIT		1094341		True				
ANR	1094485	Symbol	filter		1094341						
ANR	1094486	Symbol	MBFL_WCSPLANE_UTF32MAX		1094341						
ANR	1094487	Symbol	c		1094341						
ANR	1094488	Symbol	filter -> output_function		1094341						
ANR	1094489	Symbol	mbfl_filt_conv_illegal_output		1094341						
ANR	1094490	Symbol	filter -> illegal_mode		1094341						
ANR	1094491	Symbol	* filter -> output_function		1094341						
ANR	1094492	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1094341						
ANR	1094493	Symbol	* filter		1094341						
ANR	1094494	Symbol	filter -> data		1094341						
ANR	1094495	Symbol	* * filter		1094341						
