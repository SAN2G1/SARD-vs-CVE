command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3003491	File	data/converged/CVE-2015-8617_php-src/main_network.c								
ANR	3003492	DeclStmt									
ANR	3003493	Decl							int	"int ( const char * , struct in_addr * )"	inet_aton
ANR	3003494	DeclStmt									
ANR	3003495	Decl							const struct in6_addr	const struct in6_addr	in6addr_any
ANR	3003496	Function	php_gai_strerror	115:0:2905:4089							
ANR	3003497	FunctionDef	php_gai_strerror (int code)		3003496	0					
ANR	3003498	CompoundStatement		116:0:2951:4089	3003496	0					
ANR	3003499	Statement	static	117:8:2961:2966	3003496	0	True				
ANR	3003500	ClassDefStatement	struct { int code ; const char * msg ; }	117:15:2968:3044	3003496	1	True				
ANR	3003501	Statement	values	120:10:3046:3051	3003496	2	True				
ANR	3003502	Statement	[	120:16:3052:3052	3003496	3	True				
ANR	3003503	Statement	]	120:17:3053:3053	3003496	4	True				
ANR	3003504	Statement	=	120:19:3055:3055	3003496	5	True				
ANR	3003505	CompoundStatement		5:21:105:105	3003496	6					
ANR	3003506	Statement	ifdef	121:3:3062:3066	3003496	0	True				
ANR	3003507	Statement	EAI_ADDRFAMILY	121:9:3068:3081	3003496	1	True				
ANR	3003508	CompoundStatement		7:16:147:147	3003496	2					
ANR	3003509	Statement	EAI_ADDRFAMILY	122:17:3100:3113	3003496	0	True				
ANR	3003510	Statement	","	122:31:3114:3114	3003496	1	True				
ANR	3003511	Statement	"""Address family for hostname not supported"""	122:33:3116:3158	3003496	2	True				
ANR	3003512	Statement	","	122:77:3160:3160	3003496	3	True				
ANR	3003513	Statement	endif	123:3:3165:3169	3003496	4	True				
ANR	3003514	CompoundStatement		9:16:235:235	3003496	5					
ANR	3003515	Statement	EAI_AGAIN	124:17:3188:3196	3003496	0	True				
ANR	3003516	Statement	","	124:26:3197:3197	3003496	1	True				
ANR	3003517	Statement	"""Temporary failure in name resolution"""	124:28:3199:3236	3003496	2	True				
ANR	3003518	Statement	","	124:67:3238:3238	3003496	6	True				
ANR	3003519	CompoundStatement		10:16:304:304	3003496	7					
ANR	3003520	Statement	EAI_BADFLAGS	125:17:3257:3268	3003496	0	True				
ANR	3003521	Statement	","	125:29:3269:3269	3003496	1	True				
ANR	3003522	Statement	"""Bad value for ai_flags"""	125:31:3271:3294	3003496	2	True				
ANR	3003523	Statement	","	125:56:3296:3296	3003496	8	True				
ANR	3003524	CompoundStatement		11:16:362:362	3003496	9					
ANR	3003525	Statement	EAI_FAIL	126:17:3315:3322	3003496	0	True				
ANR	3003526	Statement	","	126:25:3323:3323	3003496	1	True				
ANR	3003527	Statement	"""Non-recoverable failure in name resolution"""	126:27:3325:3368	3003496	2	True				
ANR	3003528	Statement	","	126:72:3370:3370	3003496	10	True				
ANR	3003529	CompoundStatement		12:16:436:436	3003496	11					
ANR	3003530	Statement	EAI_FAMILY	127:17:3389:3398	3003496	0	True				
ANR	3003531	Statement	","	127:27:3399:3399	3003496	1	True				
ANR	3003532	Statement	"""ai_family not supported"""	127:29:3401:3425	3003496	2	True				
ANR	3003533	Statement	","	127:55:3427:3427	3003496	12	True				
ANR	3003534	CompoundStatement		13:16:493:493	3003496	13					
ANR	3003535	Statement	EAI_MEMORY	128:17:3446:3455	3003496	0	True				
ANR	3003536	Statement	","	128:27:3456:3456	3003496	1	True				
ANR	3003537	Statement	"""Memory allocation failure"""	128:29:3458:3484	3003496	2	True				
ANR	3003538	Statement	","	128:57:3486:3486	3003496	14	True				
ANR	3003539	Statement	ifdef	129:3:3491:3495	3003496	15	True				
ANR	3003540	Statement	EAI_NODATA	129:9:3497:3506	3003496	16	True				
ANR	3003541	CompoundStatement		15:16:572:572	3003496	17					
ANR	3003542	Statement	EAI_NODATA	130:17:3525:3534	3003496	0	True				
ANR	3003543	Statement	","	130:27:3535:3535	3003496	1	True				
ANR	3003544	Statement	"""No address associated with hostname"""	130:29:3537:3573	3003496	2	True				
ANR	3003545	Statement	","	130:67:3575:3575	3003496	18	True				
ANR	3003546	Statement	endif	131:3:3580:3584	3003496	19	True				
ANR	3003547	CompoundStatement		17:16:650:650	3003496	20					
ANR	3003548	Statement	EAI_NONAME	132:17:3603:3612	3003496	0	True				
ANR	3003549	Statement	","	132:27:3613:3613	3003496	1	True				
ANR	3003550	Statement	"""Name or service not known"""	132:29:3615:3641	3003496	2	True				
ANR	3003551	Statement	","	132:57:3643:3643	3003496	21	True				
ANR	3003552	CompoundStatement		18:16:709:709	3003496	22					
ANR	3003553	Statement	EAI_SERVICE	133:17:3662:3672	3003496	0	True				
ANR	3003554	Statement	","	133:28:3673:3673	3003496	1	True				
ANR	3003555	Statement	"""Servname not supported for ai_socktype"""	133:30:3675:3714	3003496	2	True				
ANR	3003556	Statement	","	133:71:3716:3716	3003496	23	True				
ANR	3003557	CompoundStatement		19:16:782:782	3003496	24					
ANR	3003558	Statement	EAI_SOCKTYPE	134:17:3735:3746	3003496	0	True				
ANR	3003559	Statement	","	134:29:3747:3747	3003496	1	True				
ANR	3003560	Statement	"""ai_socktype not supported"""	134:31:3749:3775	3003496	2	True				
ANR	3003561	Statement	","	134:59:3777:3777	3003496	25	True				
ANR	3003562	CompoundStatement		20:16:843:843	3003496	26					
ANR	3003563	Statement	EAI_SYSTEM	135:17:3796:3805	3003496	0	True				
ANR	3003564	Statement	","	135:27:3806:3806	3003496	1	True				
ANR	3003565	Statement	"""System error"""	135:29:3808:3821	3003496	2	True				
ANR	3003566	Statement	","	135:44:3823:3823	3003496	27	True				
ANR	3003567	CompoundStatement		21:16:889:889	3003496	28					
ANR	3003568	Statement	0	136:17:3842:3842	3003496	0	True				
ANR	3003569	Statement	","	136:18:3843:3843	3003496	1	True				
ANR	3003570	Statement	NULL	136:20:3845:3848	3003496	2	True				
ANR	3003571	ExpressionStatement		137:9:3860:3860	3003496	7	True				
ANR	3003572	IdentifierDeclStatement	int i ;	138:8:3870:3875	3003496	8	True				
ANR	3003573	IdentifierDecl	i		3003496	0					
ANR	3003574	IdentifierDeclType	int		3003496	0					
ANR	3003575	Identifier	i		3003496	1					
ANR	3003576	ForStatement	for ( i = 0 ; values [ i ] . msg != NULL ; i ++ )		3003496	9					
ANR	3003577	ForInit	i = 0 ;	140:13:3891:3896	3003496	0	True				
ANR	3003578	AssignmentExpression	i = 0		3003496	0		=			
ANR	3003579	Identifier	i		3003496	0					
ANR	3003580	PrimaryExpression	0		3003496	1					
ANR	3003581	Condition	values [ i ] . msg != NULL	140:20:3898:3918	3003496	1	True				
ANR	3003582	EqualityExpression	values [ i ] . msg != NULL		3003496	0		!=			
ANR	3003583	MemberAccess	values [ i ] . msg		3003496	0					
ANR	3003584	ArrayIndexing	values [ i ]		3003496	0					
ANR	3003585	Identifier	values		3003496	0					
ANR	3003586	Identifier	i		3003496	1					
ANR	3003587	Identifier	msg		3003496	1					
ANR	3003588	Identifier	NULL		3003496	1					
ANR	3003589	PostIncDecOperationExpression	i ++	140:43:3921:3923	3003496	2	True				
ANR	3003590	Identifier	i		3003496	0					
ANR	3003591	IncDec	++		3003496	1					
ANR	3003592	CompoundStatement		25:48:974:974	3003496	3					
ANR	3003593	IfStatement	if ( values [ i ] . code == code )		3003496	0					
ANR	3003594	Condition	values [ i ] . code == code	141:20:3948:3969	3003496	0	True				
ANR	3003595	EqualityExpression	values [ i ] . code == code		3003496	0		==			
ANR	3003596	MemberAccess	values [ i ] . code		3003496	0					
ANR	3003597	ArrayIndexing	values [ i ]		3003496	0					
ANR	3003598	Identifier	values		3003496	0					
ANR	3003599	Identifier	i		3003496	1					
ANR	3003600	Identifier	code		3003496	1					
ANR	3003601	Identifier	code		3003496	1					
ANR	3003602	CompoundStatement		26:44:1020:1020	3003496	1					
ANR	3003603	ReturnStatement	return ( char * ) values [ i ] . msg ;	142:24:3998:4026	3003496	0	True				
ANR	3003604	CastExpression	( char * ) values [ i ] . msg		3003496	0					
ANR	3003605	CastTarget	char *		3003496	0					
ANR	3003606	MemberAccess	values [ i ] . msg		3003496	1					
ANR	3003607	ArrayIndexing	values [ i ]		3003496	0					
ANR	3003608	Identifier	values		3003496	0					
ANR	3003609	Identifier	i		3003496	1					
ANR	3003610	Identifier	msg		3003496	1					
ANR	3003611	ReturnStatement	"return ""Unknown error"" ;"	146:8:4065:4087	3003496	10	True				
ANR	3003612	PrimaryExpression	"""Unknown error"""		3003496	0					
ANR	3003613	ReturnType	static const char *		3003496	1					
ANR	3003614	Identifier	php_gai_strerror		3003496	2					
ANR	3003615	ParameterList	int code		3003496	3					
ANR	3003616	Parameter	int code	115:36:2941:2948	3003496	0	True				
ANR	3003617	ParameterType	int		3003496	0					
ANR	3003618	Identifier	code		3003496	1					
ANR	3003619	CFGEntryNode	ENTRY		3003496		True				
ANR	3003620	CFGExitNode	EXIT		3003496		True				
ANR	3003621	Symbol	code		3003496						
ANR	3003622	Symbol	NULL		3003496						
ANR	3003623	Symbol	* i		3003496						
ANR	3003624	Symbol	* values		3003496						
ANR	3003625	Symbol	values		3003496						
ANR	3003626	Symbol	values [ i ] . msg		3003496						
ANR	3003627	Symbol	i		3003496						
ANR	3003628	Symbol	values [ i ] . code		3003496						
ANR	3003629	Function	php_network_freeaddresses	154:0:4153:4335							
ANR	3003630	FunctionDef	php_network_freeaddresses (struct sockaddr * * sal)		3003629	0					
ANR	3003631	CompoundStatement		155:0:4214:4335	3003629	0					
ANR	3003632	IdentifierDeclStatement	struct sockaddr * * sap ;	156:1:4217:4238	3003629	0	True				
ANR	3003633	IdentifierDecl	* * sap		3003629	0					
ANR	3003634	IdentifierDeclType	struct sockaddr * *		3003629	0					
ANR	3003635	Identifier	sap		3003629	1					
ANR	3003636	IfStatement	if ( sal == NULL )		3003629	1					
ANR	3003637	Condition	sal == NULL	158:5:4246:4256	3003629	0	True				
ANR	3003638	EqualityExpression	sal == NULL		3003629	0		==			
ANR	3003639	Identifier	sal		3003629	0					
ANR	3003640	Identifier	NULL		3003629	1					
ANR	3003641	ReturnStatement	return ;	159:2:4261:4267	3003629	1	True				
ANR	3003642	ForStatement	for ( sap = sal ; * sap != NULL ; sap ++ )		3003629	2					
ANR	3003643	ForInit	sap = sal ;	160:6:4275:4284	3003629	0	True				
ANR	3003644	AssignmentExpression	sap = sal		3003629	0		=			
ANR	3003645	Identifier	sap		3003629	0					
ANR	3003646	Identifier	sal		3003629	1					
ANR	3003647	Condition	* sap != NULL	160:17:4286:4297	3003629	1	True				
ANR	3003648	EqualityExpression	* sap != NULL		3003629	0		!=			
ANR	3003649	UnaryOperationExpression	* sap		3003629	0					
ANR	3003650	UnaryOperator	*		3003629	0					
ANR	3003651	Identifier	sap		3003629	1					
ANR	3003652	Identifier	NULL		3003629	1					
ANR	3003653	PostIncDecOperationExpression	sap ++	160:31:4300:4304	3003629	2	True				
ANR	3003654	Identifier	sap		3003629	0					
ANR	3003655	IncDec	++		3003629	1					
ANR	3003656	ExpressionStatement	efree ( * sap )	161:2:4309:4320	3003629	3	True				
ANR	3003657	CallExpression	efree ( * sap )		3003629	0					
ANR	3003658	Callee	efree		3003629	0					
ANR	3003659	Identifier	efree		3003629	0					
ANR	3003660	ArgumentList	* sap		3003629	1					
ANR	3003661	Argument	* sap		3003629	0					
ANR	3003662	UnaryOperationExpression	* sap		3003629	0					
ANR	3003663	UnaryOperator	*		3003629	0					
ANR	3003664	Identifier	sap		3003629	1					
ANR	3003665	ExpressionStatement	efree ( sal )	162:1:4323:4333	3003629	3	True				
ANR	3003666	CallExpression	efree ( sal )		3003629	0					
ANR	3003667	Callee	efree		3003629	0					
ANR	3003668	Identifier	efree		3003629	0					
ANR	3003669	ArgumentList	sal		3003629	1					
ANR	3003670	Argument	sal		3003629	0					
ANR	3003671	Identifier	sal		3003629	0					
ANR	3003672	ReturnType	PHPAPI void		3003629	1					
ANR	3003673	Identifier	php_network_freeaddresses		3003629	2					
ANR	3003674	ParameterList	struct sockaddr * * sal		3003629	3					
ANR	3003675	Parameter	struct sockaddr * * sal	154:38:4191:4211	3003629	0	True				
ANR	3003676	ParameterType	struct sockaddr * *		3003629	0					
ANR	3003677	Identifier	sal		3003629	1					
ANR	3003678	CFGEntryNode	ENTRY		3003629		True				
ANR	3003679	CFGExitNode	EXIT		3003629		True				
ANR	3003680	Symbol	sap		3003629						
ANR	3003681	Symbol	NULL		3003629						
ANR	3003682	Symbol	* sap		3003629						
ANR	3003683	Symbol	sal		3003629						
ANR	3003684	Function	php_network_getaddresses	169:0:4433:7527							
ANR	3003685	FunctionDef	"php_network_getaddresses (const char * host , int socktype , struct sockaddr * * * sal , zend_string * * error_string)"		3003684	0					
ANR	3003686	CompoundStatement		170:0:4553:7527	3003684	0					
ANR	3003687	IdentifierDeclStatement	struct sockaddr * * sap ;	171:1:4556:4577	3003684	0	True				
ANR	3003688	IdentifierDecl	* * sap		3003684	0					
ANR	3003689	IdentifierDeclType	struct sockaddr * *		3003684	0					
ANR	3003690	Identifier	sap		3003684	1					
ANR	3003691	IdentifierDeclStatement	int n ;	172:1:4580:4585	3003684	1	True				
ANR	3003692	IdentifierDecl	n		3003684	0					
ANR	3003693	IdentifierDeclType	int		3003684	0					
ANR	3003694	Identifier	n		3003684	1					
ANR	3003695	Statement	if	174:2:4610:4611	3003684	2	True				
ANR	3003696	Statement	HAVE_IPV6	174:5:4613:4621	3003684	3	True				
ANR	3003697	Statement	static	175:1:4624:4629	3003684	4	True				
ANR	3003698	IdentifierDeclStatement	int ipv6_borked = - 1 ;	175:8:4631:4651	3003684	5	True				
ANR	3003699	IdentifierDecl	ipv6_borked = - 1		3003684	0					
ANR	3003700	IdentifierDeclType	int		3003684	0					
ANR	3003701	Identifier	ipv6_borked		3003684	1					
ANR	3003702	AssignmentExpression	ipv6_borked = - 1		3003684	2		=			
ANR	3003703	Identifier	ipv6_borked		3003684	0					
ANR	3003704	UnaryOperationExpression	- 1		3003684	1					
ANR	3003705	UnaryOperator	-		3003684	0					
ANR	3003706	PrimaryExpression	1		3003684	1					
ANR	3003707	Statement	endif	176:2:4699:4703	3003684	6	True				
ANR	3003708	IdentifierDeclStatement	"struct addrinfo hints , * res , * sai ;"	177:1:4706:4739	3003684	7	True				
ANR	3003709	IdentifierDecl	hints		3003684	0					
ANR	3003710	IdentifierDeclType	struct addrinfo		3003684	0					
ANR	3003711	Identifier	hints		3003684	1					
ANR	3003712	IdentifierDecl	* res		3003684	1					
ANR	3003713	IdentifierDeclType	struct addrinfo *		3003684	0					
ANR	3003714	Identifier	res		3003684	1					
ANR	3003715	IdentifierDecl	* sai		3003684	2					
ANR	3003716	IdentifierDeclType	struct addrinfo *		3003684	0					
ANR	3003717	Identifier	sai		3003684	1					
ANR	3003718	IfStatement	if ( host == NULL )		3003684	8					
ANR	3003719	Condition	host == NULL	183:5:4808:4819	3003684	0	True				
ANR	3003720	EqualityExpression	host == NULL		3003684	0		==			
ANR	3003721	Identifier	host		3003684	0					
ANR	3003722	Identifier	NULL		3003684	1					
ANR	3003723	CompoundStatement		14:19:268:268	3003684	1					
ANR	3003724	ReturnStatement	return 0 ;	184:2:4826:4834	3003684	0	True				
ANR	3003725	PrimaryExpression	0		3003684	0					
ANR	3003726	ExpressionStatement	"memset ( & hints , '\\0' , sizeof ( hints ) )"	187:1:4861:4896	3003684	9	True				
ANR	3003727	CallExpression	"memset ( & hints , '\\0' , sizeof ( hints ) )"		3003684	0					
ANR	3003728	Callee	memset		3003684	0					
ANR	3003729	Identifier	memset		3003684	0					
ANR	3003730	ArgumentList	& hints		3003684	1					
ANR	3003731	Argument	& hints		3003684	0					
ANR	3003732	UnaryOperationExpression	& hints		3003684	0					
ANR	3003733	UnaryOperator	&		3003684	0					
ANR	3003734	Identifier	hints		3003684	1					
ANR	3003735	Argument	'\\0'		3003684	1					
ANR	3003736	PrimaryExpression	'\\0'		3003684	0					
ANR	3003737	Argument	sizeof ( hints )		3003684	2					
ANR	3003738	SizeofExpression	sizeof ( hints )		3003684	0					
ANR	3003739	Sizeof	sizeof		3003684	0					
ANR	3003740	SizeofOperand	hints		3003684	1					
ANR	3003741	ExpressionStatement	hints . ai_family = AF_INET	189:1:4900:4925	3003684	10	True				
ANR	3003742	AssignmentExpression	hints . ai_family = AF_INET		3003684	0		=			
ANR	3003743	MemberAccess	hints . ai_family		3003684	0					
ANR	3003744	Identifier	hints		3003684	0					
ANR	3003745	Identifier	ai_family		3003684	1					
ANR	3003746	Identifier	AF_INET		3003684	1					
ANR	3003747	ExpressionStatement	hints . ai_socktype = socktype	190:1:4970:4998	3003684	11	True				
ANR	3003748	AssignmentExpression	hints . ai_socktype = socktype		3003684	0		=			
ANR	3003749	MemberAccess	hints . ai_socktype		3003684	0					
ANR	3003750	Identifier	hints		3003684	0					
ANR	3003751	Identifier	ai_socktype		3003684	1					
ANR	3003752	Identifier	socktype		3003684	1					
ANR	3003753	Statement	if	192:2:5003:5004	3003684	12	True				
ANR	3003754	Statement	HAVE_IPV6	192:5:5006:5014	3003684	13	True				
ANR	3003755	IfStatement	if ( ipv6_borked == - 1 )		3003684	14					
ANR	3003756	Condition	ipv6_borked == - 1	199:5:5400:5416	3003684	0	True				
ANR	3003757	EqualityExpression	ipv6_borked == - 1		3003684	0		==			
ANR	3003758	Identifier	ipv6_borked		3003684	0					
ANR	3003759	UnaryOperationExpression	- 1		3003684	1					
ANR	3003760	UnaryOperator	-		3003684	0					
ANR	3003761	PrimaryExpression	1		3003684	1					
ANR	3003762	CompoundStatement		31:2:869:874	3003684	1					
ANR	3003763	IdentifierDeclStatement	int s ;	200:2:5423:5428	3003684	0	True				
ANR	3003764	IdentifierDecl	s		3003684	0					
ANR	3003765	IdentifierDeclType	int		3003684	0					
ANR	3003766	Identifier	s		3003684	1					
ANR	3003767	ExpressionStatement	"s = socket ( PF_INET6 , SOCK_DGRAM , 0 )"	202:2:5433:5468	3003684	1	True				
ANR	3003768	AssignmentExpression	"s = socket ( PF_INET6 , SOCK_DGRAM , 0 )"		3003684	0		=			
ANR	3003769	Identifier	s		3003684	0					
ANR	3003770	CallExpression	"socket ( PF_INET6 , SOCK_DGRAM , 0 )"		3003684	1					
ANR	3003771	Callee	socket		3003684	0					
ANR	3003772	Identifier	socket		3003684	0					
ANR	3003773	ArgumentList	PF_INET6		3003684	1					
ANR	3003774	Argument	PF_INET6		3003684	0					
ANR	3003775	Identifier	PF_INET6		3003684	0					
ANR	3003776	Argument	SOCK_DGRAM		3003684	1					
ANR	3003777	Identifier	SOCK_DGRAM		3003684	0					
ANR	3003778	Argument	0		3003684	2					
ANR	3003779	PrimaryExpression	0		3003684	0					
ANR	3003780	IfStatement	if ( s == SOCK_ERR )		3003684	2					
ANR	3003781	Condition	s == SOCK_ERR	203:6:5476:5488	3003684	0	True				
ANR	3003782	EqualityExpression	s == SOCK_ERR		3003684	0		==			
ANR	3003783	Identifier	s		3003684	0					
ANR	3003784	Identifier	SOCK_ERR		3003684	1					
ANR	3003785	CompoundStatement		34:21:937:937	3003684	1					
ANR	3003786	ExpressionStatement	ipv6_borked = 1	204:3:5496:5511	3003684	0	True				
ANR	3003787	AssignmentExpression	ipv6_borked = 1		3003684	0		=			
ANR	3003788	Identifier	ipv6_borked		3003684	0					
ANR	3003789	PrimaryExpression	1		3003684	1					
ANR	3003790	ElseStatement	else		3003684	0					
ANR	3003791	CompoundStatement		36:9:968:968	3003684	0					
ANR	3003792	ExpressionStatement	ipv6_borked = 0	206:3:5527:5542	3003684	0	True				
ANR	3003793	AssignmentExpression	ipv6_borked = 0		3003684	0		=			
ANR	3003794	Identifier	ipv6_borked		3003684	0					
ANR	3003795	PrimaryExpression	0		3003684	1					
ANR	3003796	ExpressionStatement	closesocket ( s )	207:3:5547:5561	3003684	1	True				
ANR	3003797	CallExpression	closesocket ( s )		3003684	0					
ANR	3003798	Callee	closesocket		3003684	0					
ANR	3003799	Identifier	closesocket		3003684	0					
ANR	3003800	ArgumentList	s		3003684	1					
ANR	3003801	Argument	s		3003684	0					
ANR	3003802	Identifier	s		3003684	0					
ANR	3003803	ExpressionStatement	hints . ai_family = ipv6_borked ? AF_INET : AF_UNSPEC	210:1:5571:5622	3003684	15	True				
ANR	3003804	AssignmentExpression	hints . ai_family = ipv6_borked ? AF_INET : AF_UNSPEC		3003684	0		=			
ANR	3003805	MemberAccess	hints . ai_family		3003684	0					
ANR	3003806	Identifier	hints		3003684	0					
ANR	3003807	Identifier	ai_family		3003684	1					
ANR	3003808	ConditionalExpression	ipv6_borked ? AF_INET : AF_UNSPEC		3003684	1					
ANR	3003809	Condition	ipv6_borked		3003684	0					
ANR	3003810	Identifier	ipv6_borked		3003684	0					
ANR	3003811	Identifier	AF_INET		3003684	1					
ANR	3003812	Identifier	AF_UNSPEC		3003684	2					
ANR	3003813	Statement	endif	211:2:5626:5630	3003684	16	True				
ANR	3003814	IfStatement	"if ( ( n = getaddrinfo ( host , NULL , & hints , & res ) ) )"		3003684	17					
ANR	3003815	Condition	"n = getaddrinfo ( host , NULL , & hints , & res )"	213:5:5638:5680	3003684	0	True				
ANR	3003816	AssignmentExpression	"n = getaddrinfo ( host , NULL , & hints , & res )"		3003684	0		=			
ANR	3003817	Identifier	n		3003684	0					
ANR	3003818	CallExpression	"getaddrinfo ( host , NULL , & hints , & res )"		3003684	1					
ANR	3003819	Callee	getaddrinfo		3003684	0					
ANR	3003820	Identifier	getaddrinfo		3003684	0					
ANR	3003821	ArgumentList	host		3003684	1					
ANR	3003822	Argument	host		3003684	0					
ANR	3003823	Identifier	host		3003684	0					
ANR	3003824	Argument	NULL		3003684	1					
ANR	3003825	Identifier	NULL		3003684	0					
ANR	3003826	Argument	& hints		3003684	2					
ANR	3003827	UnaryOperationExpression	& hints		3003684	0					
ANR	3003828	UnaryOperator	&		3003684	0					
ANR	3003829	Identifier	hints		3003684	1					
ANR	3003830	Argument	& res		3003684	3					
ANR	3003831	UnaryOperationExpression	& res		3003684	0					
ANR	3003832	UnaryOperator	&		3003684	0					
ANR	3003833	Identifier	res		3003684	1					
ANR	3003834	CompoundStatement		44:50:1129:1129	3003684	1					
ANR	3003835	IfStatement	if ( error_string )		3003684	0					
ANR	3003836	Condition	error_string	214:6:5691:5702	3003684	0	True				
ANR	3003837	Identifier	error_string		3003684	0					
ANR	3003838	CompoundStatement		45:20:1151:1151	3003684	1					
ANR	3003839	ExpressionStatement	"* error_string = strpprintf ( 0 , ""php_network_getaddresses: getaddrinfo failed: %s"" , PHP_GAI_STRERROR ( n ) )"	215:3:5710:5812	3003684	0	True				
ANR	3003840	AssignmentExpression	"* error_string = strpprintf ( 0 , ""php_network_getaddresses: getaddrinfo failed: %s"" , PHP_GAI_STRERROR ( n ) )"		3003684	0		=			
ANR	3003841	UnaryOperationExpression	* error_string		3003684	0					
ANR	3003842	UnaryOperator	*		3003684	0					
ANR	3003843	Identifier	error_string		3003684	1					
ANR	3003844	CallExpression	"strpprintf ( 0 , ""php_network_getaddresses: getaddrinfo failed: %s"" , PHP_GAI_STRERROR ( n ) )"		3003684	1					
ANR	3003845	Callee	strpprintf		3003684	0					
ANR	3003846	Identifier	strpprintf		3003684	0					
ANR	3003847	ArgumentList	0		3003684	1					
ANR	3003848	Argument	0		3003684	0					
ANR	3003849	PrimaryExpression	0		3003684	0					
ANR	3003850	Argument	"""php_network_getaddresses: getaddrinfo failed: %s"""		3003684	1					
ANR	3003851	PrimaryExpression	"""php_network_getaddresses: getaddrinfo failed: %s"""		3003684	0					
ANR	3003852	Argument	PHP_GAI_STRERROR ( n )		3003684	2					
ANR	3003853	CallExpression	PHP_GAI_STRERROR ( n )		3003684	0					
ANR	3003854	Callee	PHP_GAI_STRERROR		3003684	0					
ANR	3003855	Identifier	PHP_GAI_STRERROR		3003684	0					
ANR	3003856	ArgumentList	n		3003684	1					
ANR	3003857	Argument	n		3003684	0					
ANR	3003858	Identifier	n		3003684	0					
ANR	3003859	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s"" , ZSTR_VAL ( * error_string ) )"	216:3:5817:5881	3003684	1	True				
ANR	3003860	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s"" , ZSTR_VAL ( * error_string ) )"		3003684	0					
ANR	3003861	Callee	php_error_docref		3003684	0					
ANR	3003862	Identifier	php_error_docref		3003684	0					
ANR	3003863	ArgumentList	NULL		3003684	1					
ANR	3003864	Argument	NULL		3003684	0					
ANR	3003865	Identifier	NULL		3003684	0					
ANR	3003866	Argument	E_WARNING		3003684	1					
ANR	3003867	Identifier	E_WARNING		3003684	0					
ANR	3003868	Argument	"""%s"""		3003684	2					
ANR	3003869	PrimaryExpression	"""%s"""		3003684	0					
ANR	3003870	Argument	ZSTR_VAL ( * error_string )		3003684	3					
ANR	3003871	CallExpression	ZSTR_VAL ( * error_string )		3003684	0					
ANR	3003872	Callee	ZSTR_VAL		3003684	0					
ANR	3003873	Identifier	ZSTR_VAL		3003684	0					
ANR	3003874	ArgumentList	* error_string		3003684	1					
ANR	3003875	Argument	* error_string		3003684	0					
ANR	3003876	UnaryOperationExpression	* error_string		3003684	0					
ANR	3003877	UnaryOperator	*		3003684	0					
ANR	3003878	Identifier	error_string		3003684	1					
ANR	3003879	ElseStatement	else		3003684	0					
ANR	3003880	CompoundStatement		48:9:1338:1338	3003684	0					
ANR	3003881	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""php_network_getaddresses: getaddrinfo failed: %s"" , PHP_GAI_STRERROR ( n ) )"	218:3:5897:6003	3003684	0	True				
ANR	3003882	CallExpression	"php_error_docref ( NULL , E_WARNING , ""php_network_getaddresses: getaddrinfo failed: %s"" , PHP_GAI_STRERROR ( n ) )"		3003684	0					
ANR	3003883	Callee	php_error_docref		3003684	0					
ANR	3003884	Identifier	php_error_docref		3003684	0					
ANR	3003885	ArgumentList	NULL		3003684	1					
ANR	3003886	Argument	NULL		3003684	0					
ANR	3003887	Identifier	NULL		3003684	0					
ANR	3003888	Argument	E_WARNING		3003684	1					
ANR	3003889	Identifier	E_WARNING		3003684	0					
ANR	3003890	Argument	"""php_network_getaddresses: getaddrinfo failed: %s"""		3003684	2					
ANR	3003891	PrimaryExpression	"""php_network_getaddresses: getaddrinfo failed: %s"""		3003684	0					
ANR	3003892	Argument	PHP_GAI_STRERROR ( n )		3003684	3					
ANR	3003893	CallExpression	PHP_GAI_STRERROR ( n )		3003684	0					
ANR	3003894	Callee	PHP_GAI_STRERROR		3003684	0					
ANR	3003895	Identifier	PHP_GAI_STRERROR		3003684	0					
ANR	3003896	ArgumentList	n		3003684	1					
ANR	3003897	Argument	n		3003684	0					
ANR	3003898	Identifier	n		3003684	0					
ANR	3003899	ReturnStatement	return 0 ;	220:2:6011:6019	3003684	1	True				
ANR	3003900	PrimaryExpression	0		3003684	0					
ANR	3003901	ElseStatement	else		3003684	0					
ANR	3003902	IfStatement	if ( res == NULL )		3003684	0					
ANR	3003903	Condition	res == NULL	221:12:6033:6043	3003684	0	True				
ANR	3003904	EqualityExpression	res == NULL		3003684	0		==			
ANR	3003905	Identifier	res		3003684	0					
ANR	3003906	Identifier	NULL		3003684	1					
ANR	3003907	CompoundStatement		52:25:1492:1492	3003684	1					
ANR	3003908	IfStatement	if ( error_string )		3003684	0					
ANR	3003909	Condition	error_string	222:6:6054:6065	3003684	0	True				
ANR	3003910	Identifier	error_string		3003684	0					
ANR	3003911	CompoundStatement		53:20:1514:1514	3003684	1					
ANR	3003912	ExpressionStatement	"* error_string = strpprintf ( 0 , ""php_network_getaddresses: getaddrinfo failed (null result pointer) errno=%d"" , errno )"	223:3:6073:6188	3003684	0	True				
ANR	3003913	AssignmentExpression	"* error_string = strpprintf ( 0 , ""php_network_getaddresses: getaddrinfo failed (null result pointer) errno=%d"" , errno )"		3003684	0		=			
ANR	3003914	UnaryOperationExpression	* error_string		3003684	0					
ANR	3003915	UnaryOperator	*		3003684	0					
ANR	3003916	Identifier	error_string		3003684	1					
ANR	3003917	CallExpression	"strpprintf ( 0 , ""php_network_getaddresses: getaddrinfo failed (null result pointer) errno=%d"" , errno )"		3003684	1					
ANR	3003918	Callee	strpprintf		3003684	0					
ANR	3003919	Identifier	strpprintf		3003684	0					
ANR	3003920	ArgumentList	0		3003684	1					
ANR	3003921	Argument	0		3003684	0					
ANR	3003922	PrimaryExpression	0		3003684	0					
ANR	3003923	Argument	"""php_network_getaddresses: getaddrinfo failed (null result pointer) errno=%d"""		3003684	1					
ANR	3003924	PrimaryExpression	"""php_network_getaddresses: getaddrinfo failed (null result pointer) errno=%d"""		3003684	0					
ANR	3003925	Argument	errno		3003684	2					
ANR	3003926	Identifier	errno		3003684	0					
ANR	3003927	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s"" , ZSTR_VAL ( * error_string ) )"	224:3:6193:6257	3003684	1	True				
ANR	3003928	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s"" , ZSTR_VAL ( * error_string ) )"		3003684	0					
ANR	3003929	Callee	php_error_docref		3003684	0					
ANR	3003930	Identifier	php_error_docref		3003684	0					
ANR	3003931	ArgumentList	NULL		3003684	1					
ANR	3003932	Argument	NULL		3003684	0					
ANR	3003933	Identifier	NULL		3003684	0					
ANR	3003934	Argument	E_WARNING		3003684	1					
ANR	3003935	Identifier	E_WARNING		3003684	0					
ANR	3003936	Argument	"""%s"""		3003684	2					
ANR	3003937	PrimaryExpression	"""%s"""		3003684	0					
ANR	3003938	Argument	ZSTR_VAL ( * error_string )		3003684	3					
ANR	3003939	CallExpression	ZSTR_VAL ( * error_string )		3003684	0					
ANR	3003940	Callee	ZSTR_VAL		3003684	0					
ANR	3003941	Identifier	ZSTR_VAL		3003684	0					
ANR	3003942	ArgumentList	* error_string		3003684	1					
ANR	3003943	Argument	* error_string		3003684	0					
ANR	3003944	UnaryOperationExpression	* error_string		3003684	0					
ANR	3003945	UnaryOperator	*		3003684	0					
ANR	3003946	Identifier	error_string		3003684	1					
ANR	3003947	ElseStatement	else		3003684	0					
ANR	3003948	CompoundStatement		56:9:1714:1714	3003684	0					
ANR	3003949	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""php_network_getaddresses: getaddrinfo failed (null result pointer)"" )"	226:3:6273:6376	3003684	0	True				
ANR	3003950	CallExpression	"php_error_docref ( NULL , E_WARNING , ""php_network_getaddresses: getaddrinfo failed (null result pointer)"" )"		3003684	0					
ANR	3003951	Callee	php_error_docref		3003684	0					
ANR	3003952	Identifier	php_error_docref		3003684	0					
ANR	3003953	ArgumentList	NULL		3003684	1					
ANR	3003954	Argument	NULL		3003684	0					
ANR	3003955	Identifier	NULL		3003684	0					
ANR	3003956	Argument	E_WARNING		3003684	1					
ANR	3003957	Identifier	E_WARNING		3003684	0					
ANR	3003958	Argument	"""php_network_getaddresses: getaddrinfo failed (null result pointer)"""		3003684	2					
ANR	3003959	PrimaryExpression	"""php_network_getaddresses: getaddrinfo failed (null result pointer)"""		3003684	0					
ANR	3003960	ReturnStatement	return 0 ;	228:2:6384:6392	3003684	1	True				
ANR	3003961	PrimaryExpression	0		3003684	0					
ANR	3003962	ExpressionStatement	sai = res	231:1:6399:6408	3003684	18	True				
ANR	3003963	AssignmentExpression	sai = res		3003684	0		=			
ANR	3003964	Identifier	sai		3003684	0					
ANR	3003965	Identifier	res		3003684	1					
ANR	3003966	ForStatement	for ( n = 1 ; ( sai = sai -> ai_next ) != NULL ; n ++ )		3003684	19					
ANR	3003967	ForInit	n = 1 ;	232:6:6416:6421	3003684	0	True				
ANR	3003968	AssignmentExpression	n = 1		3003684	0		=			
ANR	3003969	Identifier	n		3003684	0					
ANR	3003970	PrimaryExpression	1		3003684	1					
ANR	3003971	Condition	( sai = sai -> ai_next ) != NULL	232:13:6423:6450	3003684	1	True				
ANR	3003972	EqualityExpression	( sai = sai -> ai_next ) != NULL		3003684	0		!=			
ANR	3003973	AssignmentExpression	sai = sai -> ai_next		3003684	0		=			
ANR	3003974	Identifier	sai		3003684	0					
ANR	3003975	PtrMemberAccess	sai -> ai_next		3003684	1					
ANR	3003976	Identifier	sai		3003684	0					
ANR	3003977	Identifier	ai_next		3003684	1					
ANR	3003978	Identifier	NULL		3003684	1					
ANR	3003979	PostIncDecOperationExpression	n ++	232:43:6453:6455	3003684	2	True				
ANR	3003980	Identifier	n		3003684	0					
ANR	3003981	IncDec	++		3003684	1					
ANR	3003982	ExpressionStatement		233:2:6460:6460	3003684	3	True				
ANR	3003983	ExpressionStatement	"* sal = safe_emalloc ( ( n + 1 ) , sizeof ( * sal ) , 0 )"	235:1:6464:6509	3003684	20	True				
ANR	3003984	AssignmentExpression	"* sal = safe_emalloc ( ( n + 1 ) , sizeof ( * sal ) , 0 )"		3003684	0		=			
ANR	3003985	UnaryOperationExpression	* sal		3003684	0					
ANR	3003986	UnaryOperator	*		3003684	0					
ANR	3003987	Identifier	sal		3003684	1					
ANR	3003988	CallExpression	"safe_emalloc ( ( n + 1 ) , sizeof ( * sal ) , 0 )"		3003684	1					
ANR	3003989	Callee	safe_emalloc		3003684	0					
ANR	3003990	Identifier	safe_emalloc		3003684	0					
ANR	3003991	ArgumentList	n + 1		3003684	1					
ANR	3003992	Argument	n + 1		3003684	0					
ANR	3003993	AdditiveExpression	n + 1		3003684	0		+			
ANR	3003994	Identifier	n		3003684	0					
ANR	3003995	PrimaryExpression	1		3003684	1					
ANR	3003996	Argument	sizeof ( * sal )		3003684	1					
ANR	3003997	SizeofExpression	sizeof ( * sal )		3003684	0					
ANR	3003998	Sizeof	sizeof		3003684	0					
ANR	3003999	UnaryOperationExpression	* sal		3003684	1					
ANR	3004000	UnaryOperator	*		3003684	0					
ANR	3004001	Identifier	sal		3003684	1					
ANR	3004002	Argument	0		3003684	2					
ANR	3004003	PrimaryExpression	0		3003684	0					
ANR	3004004	ExpressionStatement	sai = res	236:1:6512:6521	3003684	21	True				
ANR	3004005	AssignmentExpression	sai = res		3003684	0		=			
ANR	3004006	Identifier	sai		3003684	0					
ANR	3004007	Identifier	res		3003684	1					
ANR	3004008	ExpressionStatement	sap = * sal	237:1:6524:6534	3003684	22	True				
ANR	3004009	AssignmentExpression	sap = * sal		3003684	0		=			
ANR	3004010	Identifier	sap		3003684	0					
ANR	3004011	UnaryOperationExpression	* sal		3003684	1					
ANR	3004012	UnaryOperator	*		3003684	0					
ANR	3004013	Identifier	sal		3003684	1					
ANR	3004014	DoStatement	do		3003684	23					
ANR	3004015	CompoundStatement		70:4:1987:1987	3003684	0					
ANR	3004016	ExpressionStatement	* sap = emalloc ( sai -> ai_addrlen )	240:2:6545:6576	3003684	0	True				
ANR	3004017	AssignmentExpression	* sap = emalloc ( sai -> ai_addrlen )		3003684	0		=			
ANR	3004018	UnaryOperationExpression	* sap		3003684	0					
ANR	3004019	UnaryOperator	*		3003684	0					
ANR	3004020	Identifier	sap		3003684	1					
ANR	3004021	CallExpression	emalloc ( sai -> ai_addrlen )		3003684	1					
ANR	3004022	Callee	emalloc		3003684	0					
ANR	3004023	Identifier	emalloc		3003684	0					
ANR	3004024	ArgumentList	sai -> ai_addrlen		3003684	1					
ANR	3004025	Argument	sai -> ai_addrlen		3003684	0					
ANR	3004026	PtrMemberAccess	sai -> ai_addrlen		3003684	0					
ANR	3004027	Identifier	sai		3003684	0					
ANR	3004028	Identifier	ai_addrlen		3003684	1					
ANR	3004029	ExpressionStatement	"memcpy ( * sap , sai -> ai_addr , sai -> ai_addrlen )"	241:2:6580:6623	3003684	1	True				
ANR	3004030	CallExpression	"memcpy ( * sap , sai -> ai_addr , sai -> ai_addrlen )"		3003684	0					
ANR	3004031	Callee	memcpy		3003684	0					
ANR	3004032	Identifier	memcpy		3003684	0					
ANR	3004033	ArgumentList	* sap		3003684	1					
ANR	3004034	Argument	* sap		3003684	0					
ANR	3004035	UnaryOperationExpression	* sap		3003684	0					
ANR	3004036	UnaryOperator	*		3003684	0					
ANR	3004037	Identifier	sap		3003684	1					
ANR	3004038	Argument	sai -> ai_addr		3003684	1					
ANR	3004039	PtrMemberAccess	sai -> ai_addr		3003684	0					
ANR	3004040	Identifier	sai		3003684	0					
ANR	3004041	Identifier	ai_addr		3003684	1					
ANR	3004042	Argument	sai -> ai_addrlen		3003684	2					
ANR	3004043	PtrMemberAccess	sai -> ai_addrlen		3003684	0					
ANR	3004044	Identifier	sai		3003684	0					
ANR	3004045	Identifier	ai_addrlen		3003684	1					
ANR	3004046	ExpressionStatement	sap ++	242:2:6627:6632	3003684	2	True				
ANR	3004047	PostIncDecOperationExpression	sap ++		3003684	0					
ANR	3004048	Identifier	sap		3003684	0					
ANR	3004049	IncDec	++		3003684	1					
ANR	3004050	Condition	( sai = sai -> ai_next ) != NULL	243:10:6644:6671	3003684	1	True				
ANR	3004051	EqualityExpression	( sai = sai -> ai_next ) != NULL		3003684	0		!=			
ANR	3004052	AssignmentExpression	sai = sai -> ai_next		3003684	0		=			
ANR	3004053	Identifier	sai		3003684	0					
ANR	3004054	PtrMemberAccess	sai -> ai_next		3003684	1					
ANR	3004055	Identifier	sai		3003684	0					
ANR	3004056	Identifier	ai_next		3003684	1					
ANR	3004057	Identifier	NULL		3003684	1					
ANR	3004058	ExpressionStatement	freeaddrinfo ( res )	245:1:6677:6694	3003684	24	True				
ANR	3004059	CallExpression	freeaddrinfo ( res )		3003684	0					
ANR	3004060	Callee	freeaddrinfo		3003684	0					
ANR	3004061	Identifier	freeaddrinfo		3003684	0					
ANR	3004062	ArgumentList	res		3003684	1					
ANR	3004063	Argument	res		3003684	0					
ANR	3004064	Identifier	res		3003684	0					
ANR	3004065	ExpressionStatement	* sap = NULL	276:1:7503:7514	3003684	25	True				
ANR	3004066	AssignmentExpression	* sap = NULL		3003684	0		=			
ANR	3004067	UnaryOperationExpression	* sap		3003684	0					
ANR	3004068	UnaryOperator	*		3003684	0					
ANR	3004069	Identifier	sap		3003684	1					
ANR	3004070	Identifier	NULL		3003684	1					
ANR	3004071	ReturnStatement	return n ;	277:1:7517:7525	3003684	26	True				
ANR	3004072	Identifier	n		3003684	0					
ANR	3004073	ReturnType	PHPAPI int		3003684	1					
ANR	3004074	Identifier	php_network_getaddresses		3003684	2					
ANR	3004075	ParameterList	"const char * host , int socktype , struct sockaddr * * * sal , zend_string * * error_string"		3003684	3					
ANR	3004076	Parameter	const char * host	169:36:4469:4484	3003684	0	True				
ANR	3004077	ParameterType	const char *		3003684	0					
ANR	3004078	Identifier	host		3003684	1					
ANR	3004079	Parameter	int socktype	169:54:4487:4498	3003684	1	True				
ANR	3004080	ParameterType	int		3003684	0					
ANR	3004081	Identifier	socktype		3003684	1					
ANR	3004082	Parameter	struct sockaddr * * * sal	169:68:4501:4522	3003684	2	True				
ANR	3004083	ParameterType	struct sockaddr * * *		3003684	0					
ANR	3004084	Identifier	sal		3003684	1					
ANR	3004085	Parameter	zend_string * * error_string	169:92:4525:4550	3003684	3	True				
ANR	3004086	ParameterType	zend_string * *		3003684	0					
ANR	3004087	Identifier	error_string		3003684	1					
ANR	3004088	CFGEntryNode	ENTRY		3003684		True				
ANR	3004089	CFGExitNode	EXIT		3003684		True				
ANR	3004090	Symbol	& res		3003684						
ANR	3004091	Symbol	* error_string		3003684						
ANR	3004092	Symbol	* sai		3003684						
ANR	3004093	Symbol	ipv6_borked		3003684						
ANR	3004094	Symbol	* sal		3003684						
ANR	3004095	Symbol	sai -> ai_addrlen		3003684						
ANR	3004096	Symbol	* sap		3003684						
ANR	3004097	Symbol	PF_INET6		3003684						
ANR	3004098	Symbol	AF_UNSPEC		3003684						
ANR	3004099	Symbol	hints . ai_family		3003684						
ANR	3004100	Symbol	E_WARNING		3003684						
ANR	3004101	Symbol	emalloc		3003684						
ANR	3004102	Symbol	sai -> ai_next		3003684						
ANR	3004103	Symbol	host		3003684						
ANR	3004104	Symbol	sai		3003684						
ANR	3004105	Symbol	PHP_GAI_STRERROR		3003684						
ANR	3004106	Symbol	sal		3003684						
ANR	3004107	Symbol	& hints		3003684						
ANR	3004108	Symbol	res		3003684						
ANR	3004109	Symbol	errno		3003684						
ANR	3004110	Symbol	sap		3003684						
ANR	3004111	Symbol	NULL		3003684						
ANR	3004112	Symbol	SOCK_ERR		3003684						
ANR	3004113	Symbol	hints		3003684						
ANR	3004114	Symbol	getaddrinfo		3003684						
ANR	3004115	Symbol	AF_INET		3003684						
ANR	3004116	Symbol	SOCK_DGRAM		3003684						
ANR	3004117	Symbol	n		3003684						
ANR	3004118	Symbol	strpprintf		3003684						
ANR	3004119	Symbol	ZSTR_VAL		3003684						
ANR	3004120	Symbol	error_string		3003684						
ANR	3004121	Symbol	hints . ai_socktype		3003684						
ANR	3004122	Symbol	s		3003684						
ANR	3004123	Symbol	sai -> ai_addr		3003684						
ANR	3004124	Symbol	socktype		3003684						
ANR	3004125	Symbol	socket		3003684						
ANR	3004126	Symbol	safe_emalloc		3003684						
ANR	3004127	DeclStmt									
ANR	3004128	Decl							u_long	u_long	php_non_blocking_flags_t
ANR	3004129	DeclStmt									
ANR	3004130	Decl							int	int	php_non_blocking_flags_t
ANR	3004131	Function	php_network_connect_socket	308:0:8414:10632							
ANR	3004132	FunctionDef	"php_network_connect_socket (php_socket_t sockfd , const struct sockaddr * addr , socklen_t addrlen , int asynchronous , struct timeval * timeout , zend_string * * error_string , int * error_code)"		3004131	0					
ANR	3004133	CompoundStatement		315:0:8621:10632	3004131	0					
ANR	3004134	IdentifierDeclStatement	php_non_blocking_flags_t orig_flags ;	317:1:8654:8689	3004131	0	True				
ANR	3004135	IdentifierDecl	orig_flags		3004131	0					
ANR	3004136	IdentifierDeclType	php_non_blocking_flags_t		3004131	0					
ANR	3004137	Identifier	orig_flags		3004131	1					
ANR	3004138	IdentifierDeclStatement	int n ;	318:1:8692:8697	3004131	1	True				
ANR	3004139	IdentifierDecl	n		3004131	0					
ANR	3004140	IdentifierDeclType	int		3004131	0					
ANR	3004141	Identifier	n		3004131	1					
ANR	3004142	IdentifierDeclStatement	int error = 0 ;	319:1:8700:8713	3004131	2	True				
ANR	3004143	IdentifierDecl	error = 0		3004131	0					
ANR	3004144	IdentifierDeclType	int		3004131	0					
ANR	3004145	Identifier	error		3004131	1					
ANR	3004146	AssignmentExpression	error = 0		3004131	2		=			
ANR	3004147	Identifier	error		3004131	0					
ANR	3004148	PrimaryExpression	0		3004131	1					
ANR	3004149	IdentifierDeclStatement	socklen_t len ;	320:1:8716:8729	3004131	3	True				
ANR	3004150	IdentifierDecl	len		3004131	0					
ANR	3004151	IdentifierDeclType	socklen_t		3004131	0					
ANR	3004152	Identifier	len		3004131	1					
ANR	3004153	IdentifierDeclStatement	int ret = 0 ;	321:1:8732:8743	3004131	4	True				
ANR	3004154	IdentifierDecl	ret = 0		3004131	0					
ANR	3004155	IdentifierDeclType	int		3004131	0					
ANR	3004156	Identifier	ret		3004131	1					
ANR	3004157	AssignmentExpression	ret = 0		3004131	2		=			
ANR	3004158	Identifier	ret		3004131	0					
ANR	3004159	PrimaryExpression	0		3004131	1					
ANR	3004160	ExpressionStatement	"SET_SOCKET_BLOCKING_MODE ( sockfd , orig_flags )"	323:1:8747:8791	3004131	5	True				
ANR	3004161	CallExpression	"SET_SOCKET_BLOCKING_MODE ( sockfd , orig_flags )"		3004131	0					
ANR	3004162	Callee	SET_SOCKET_BLOCKING_MODE		3004131	0					
ANR	3004163	Identifier	SET_SOCKET_BLOCKING_MODE		3004131	0					
ANR	3004164	ArgumentList	sockfd		3004131	1					
ANR	3004165	Argument	sockfd		3004131	0					
ANR	3004166	Identifier	sockfd		3004131	0					
ANR	3004167	Argument	orig_flags		3004131	1					
ANR	3004168	Identifier	orig_flags		3004131	0					
ANR	3004169	IfStatement	"if ( ( n = connect ( sockfd , addr , addrlen ) ) != 0 )"		3004131	6					
ANR	3004170	Condition	"( n = connect ( sockfd , addr , addrlen ) ) != 0"	325:5:8799:8839	3004131	0	True				
ANR	3004171	EqualityExpression	"( n = connect ( sockfd , addr , addrlen ) ) != 0"		3004131	0		!=			
ANR	3004172	AssignmentExpression	"n = connect ( sockfd , addr , addrlen )"		3004131	0		=			
ANR	3004173	Identifier	n		3004131	0					
ANR	3004174	CallExpression	"connect ( sockfd , addr , addrlen )"		3004131	1					
ANR	3004175	Callee	connect		3004131	0					
ANR	3004176	Identifier	connect		3004131	0					
ANR	3004177	ArgumentList	sockfd		3004131	1					
ANR	3004178	Argument	sockfd		3004131	0					
ANR	3004179	Identifier	sockfd		3004131	0					
ANR	3004180	Argument	addr		3004131	1					
ANR	3004181	Identifier	addr		3004131	0					
ANR	3004182	Argument	addrlen		3004131	2					
ANR	3004183	Identifier	addrlen		3004131	0					
ANR	3004184	PrimaryExpression	0		3004131	1					
ANR	3004185	CompoundStatement		11:48:220:220	3004131	1					
ANR	3004186	ExpressionStatement	error = php_socket_errno ( )	326:2:8846:8872	3004131	0	True				
ANR	3004187	AssignmentExpression	error = php_socket_errno ( )		3004131	0		=			
ANR	3004188	Identifier	error		3004131	0					
ANR	3004189	CallExpression	php_socket_errno ( )		3004131	1					
ANR	3004190	Callee	php_socket_errno		3004131	0					
ANR	3004191	Identifier	php_socket_errno		3004131	0					
ANR	3004192	ArgumentList			3004131	1					
ANR	3004193	IfStatement	if ( error_code )		3004131	1					
ANR	3004194	Condition	error_code	328:6:8881:8890	3004131	0	True				
ANR	3004195	Identifier	error_code		3004131	0					
ANR	3004196	CompoundStatement		14:18:271:271	3004131	1					
ANR	3004197	ExpressionStatement	* error_code = error	329:3:8898:8917	3004131	0	True				
ANR	3004198	AssignmentExpression	* error_code = error		3004131	0		=			
ANR	3004199	UnaryOperationExpression	* error_code		3004131	0					
ANR	3004200	UnaryOperator	*		3004131	0					
ANR	3004201	Identifier	error_code		3004131	1					
ANR	3004202	Identifier	error		3004131	1					
ANR	3004203	IfStatement	if ( error != EINPROGRESS )		3004131	2					
ANR	3004204	Condition	error != EINPROGRESS	332:6:8930:8949	3004131	0	True				
ANR	3004205	EqualityExpression	error != EINPROGRESS		3004131	0		!=			
ANR	3004206	Identifier	error		3004131	0					
ANR	3004207	Identifier	EINPROGRESS		3004131	1					
ANR	3004208	CompoundStatement		18:28:330:330	3004131	1					
ANR	3004209	IfStatement	if ( error_string )		3004131	0					
ANR	3004210	Condition	error_string	333:7:8961:8972	3004131	0	True				
ANR	3004211	Identifier	error_string		3004131	0					
ANR	3004212	CompoundStatement		19:21:353:353	3004131	1					
ANR	3004213	ExpressionStatement	* error_string = php_socket_error_str ( error )	334:4:8981:9024	3004131	0	True				
ANR	3004214	AssignmentExpression	* error_string = php_socket_error_str ( error )		3004131	0		=			
ANR	3004215	UnaryOperationExpression	* error_string		3004131	0					
ANR	3004216	UnaryOperator	*		3004131	0					
ANR	3004217	Identifier	error_string		3004131	1					
ANR	3004218	CallExpression	php_socket_error_str ( error )		3004131	1					
ANR	3004219	Callee	php_socket_error_str		3004131	0					
ANR	3004220	Identifier	php_socket_error_str		3004131	0					
ANR	3004221	ArgumentList	error		3004131	1					
ANR	3004222	Argument	error		3004131	0					
ANR	3004223	Identifier	error		3004131	0					
ANR	3004224	ReturnStatement	return - 1 ;	337:3:9035:9044	3004131	1	True				
ANR	3004225	UnaryOperationExpression	- 1		3004131	0					
ANR	3004226	UnaryOperator	-		3004131	0					
ANR	3004227	PrimaryExpression	1		3004131	1					
ANR	3004228	IfStatement	if ( asynchronous && error == EINPROGRESS )		3004131	3					
ANR	3004229	Condition	asynchronous && error == EINPROGRESS	339:6:9056:9091	3004131	0	True				
ANR	3004230	AndExpression	asynchronous && error == EINPROGRESS		3004131	0		&&			
ANR	3004231	Identifier	asynchronous		3004131	0					
ANR	3004232	EqualityExpression	error == EINPROGRESS		3004131	1		==			
ANR	3004233	Identifier	error		3004131	0					
ANR	3004234	Identifier	EINPROGRESS		3004131	1					
ANR	3004235	CompoundStatement		25:44:472:472	3004131	1					
ANR	3004236	ReturnStatement	return 0 ;	341:3:9127:9135	3004131	0	True				
ANR	3004237	PrimaryExpression	0		3004131	0					
ANR	3004238	IfStatement	if ( n == 0 )		3004131	7					
ANR	3004239	Condition	n == 0	345:5:9150:9155	3004131	0	True				
ANR	3004240	EqualityExpression	n == 0		3004131	0		==			
ANR	3004241	Identifier	n		3004131	0					
ANR	3004242	PrimaryExpression	0		3004131	1					
ANR	3004243	CompoundStatement		31:13:536:536	3004131	1					
ANR	3004244	GotoStatement	goto ok ;	346:2:9162:9169	3004131	0	True				
ANR	3004245	Identifier	ok		3004131	0					
ANR	3004246	Statement	ifdef	348:2:9176:9180	3004131	8	True				
ANR	3004247	Statement	PHP_WIN32	348:8:9182:9190	3004131	9	True				
ANR	3004248	IfStatement	"if ( ( n = php_pollfd_for ( sockfd , POLLOUT | POLLPRI , timeout ) ) == 0 )"		3004131	10					
ANR	3004249	Condition	"( n = php_pollfd_for ( sockfd , POLLOUT | POLLPRI , timeout ) ) == 0"	356:5:9669:9727	3004131	0	True				
ANR	3004250	EqualityExpression	"( n = php_pollfd_for ( sockfd , POLLOUT | POLLPRI , timeout ) ) == 0"		3004131	0		==			
ANR	3004251	AssignmentExpression	"n = php_pollfd_for ( sockfd , POLLOUT | POLLPRI , timeout )"		3004131	0		=			
ANR	3004252	Identifier	n		3004131	0					
ANR	3004253	CallExpression	"php_pollfd_for ( sockfd , POLLOUT | POLLPRI , timeout )"		3004131	1					
ANR	3004254	Callee	php_pollfd_for		3004131	0					
ANR	3004255	Identifier	php_pollfd_for		3004131	0					
ANR	3004256	ArgumentList	sockfd		3004131	1					
ANR	3004257	Argument	sockfd		3004131	0					
ANR	3004258	Identifier	sockfd		3004131	0					
ANR	3004259	Argument	POLLOUT | POLLPRI		3004131	1					
ANR	3004260	InclusiveOrExpression	POLLOUT | POLLPRI		3004131	0		|			
ANR	3004261	Identifier	POLLOUT		3004131	0					
ANR	3004262	Identifier	POLLPRI		3004131	1					
ANR	3004263	Argument	timeout		3004131	2					
ANR	3004264	Identifier	timeout		3004131	0					
ANR	3004265	PrimaryExpression	0		3004131	1					
ANR	3004266	CompoundStatement		42:66:1108:1108	3004131	1					
ANR	3004267	ExpressionStatement	error = PHP_TIMEOUT_ERROR_VALUE	360:2:9824:9855	3004131	0	True				
ANR	3004268	AssignmentExpression	error = PHP_TIMEOUT_ERROR_VALUE		3004131	0		=			
ANR	3004269	Identifier	error		3004131	0					
ANR	3004270	Identifier	PHP_TIMEOUT_ERROR_VALUE		3004131	1					
ANR	3004271	IfStatement	if ( n > 0 )		3004131	11					
ANR	3004272	Condition	n > 0	363:5:9866:9870	3004131	0	True				
ANR	3004273	RelationalExpression	n > 0		3004131	0		>			
ANR	3004274	Identifier	n		3004131	0					
ANR	3004275	PrimaryExpression	0		3004131	1					
ANR	3004276	CompoundStatement		49:12:1251:1251	3004131	1					
ANR	3004277	ExpressionStatement	len = sizeof ( error )	364:2:9877:9896	3004131	0	True				
ANR	3004278	AssignmentExpression	len = sizeof ( error )		3004131	0		=			
ANR	3004279	Identifier	len		3004131	0					
ANR	3004280	SizeofExpression	sizeof ( error )		3004131	1					
ANR	3004281	Sizeof	sizeof		3004131	0					
ANR	3004282	SizeofOperand	error		3004131	1					
ANR	3004283	IfStatement	"if ( getsockopt ( sockfd , SOL_SOCKET , SO_ERROR , ( char * ) & error , & len ) != 0 )"		3004131	1					
ANR	3004284	Condition	"getsockopt ( sockfd , SOL_SOCKET , SO_ERROR , ( char * ) & error , & len ) != 0"	369:6:10019:10084	3004131	0	True				
ANR	3004285	EqualityExpression	"getsockopt ( sockfd , SOL_SOCKET , SO_ERROR , ( char * ) & error , & len ) != 0"		3004131	0		!=			
ANR	3004286	CallExpression	"getsockopt ( sockfd , SOL_SOCKET , SO_ERROR , ( char * ) & error , & len )"		3004131	0					
ANR	3004287	Callee	getsockopt		3004131	0					
ANR	3004288	Identifier	getsockopt		3004131	0					
ANR	3004289	ArgumentList	sockfd		3004131	1					
ANR	3004290	Argument	sockfd		3004131	0					
ANR	3004291	Identifier	sockfd		3004131	0					
ANR	3004292	Argument	SOL_SOCKET		3004131	1					
ANR	3004293	Identifier	SOL_SOCKET		3004131	0					
ANR	3004294	Argument	SO_ERROR		3004131	2					
ANR	3004295	Identifier	SO_ERROR		3004131	0					
ANR	3004296	Argument	( char * ) & error		3004131	3					
ANR	3004297	CastExpression	( char * ) & error		3004131	0					
ANR	3004298	CastTarget	char *		3004131	0					
ANR	3004299	UnaryOperationExpression	& error		3004131	1					
ANR	3004300	UnaryOperator	&		3004131	0					
ANR	3004301	Identifier	error		3004131	1					
ANR	3004302	Argument	& len		3004131	4					
ANR	3004303	UnaryOperationExpression	& len		3004131	0					
ANR	3004304	UnaryOperator	&		3004131	0					
ANR	3004305	Identifier	len		3004131	1					
ANR	3004306	PrimaryExpression	0		3004131	1					
ANR	3004307	CompoundStatement		55:74:1465:1465	3004131	1					
ANR	3004308	ExpressionStatement	ret = - 1	370:3:10092:10100	3004131	0	True				
ANR	3004309	AssignmentExpression	ret = - 1		3004131	0		=			
ANR	3004310	Identifier	ret		3004131	0					
ANR	3004311	UnaryOperationExpression	- 1		3004131	1					
ANR	3004312	UnaryOperator	-		3004131	0					
ANR	3004313	PrimaryExpression	1		3004131	1					
ANR	3004314	ElseStatement	else		3004131	0					
ANR	3004315	CompoundStatement		58:8:1492:1492	3004131	0					
ANR	3004316	ExpressionStatement	ret = - 1	374:2:10157:10165	3004131	0	True				
ANR	3004317	AssignmentExpression	ret = - 1		3004131	0		=			
ANR	3004318	Identifier	ret		3004131	0					
ANR	3004319	UnaryOperationExpression	- 1		3004131	1					
ANR	3004320	UnaryOperator	-		3004131	0					
ANR	3004321	PrimaryExpression	1		3004131	1					
ANR	3004322	Label	ok :	377:0:10171:10173	3004131	12	True				
ANR	3004323	Identifier	ok		3004131	0					
ANR	3004324	IfStatement	if ( ! asynchronous )		3004131	13					
ANR	3004325	Condition	! asynchronous	378:5:10180:10192	3004131	0	True				
ANR	3004326	UnaryOperationExpression	! asynchronous		3004131	0					
ANR	3004327	UnaryOperator	!		3004131	0					
ANR	3004328	Identifier	asynchronous		3004131	1					
ANR	3004329	CompoundStatement		64:20:1573:1573	3004131	1					
ANR	3004330	ExpressionStatement	"RESTORE_SOCKET_BLOCKING_MODE ( sockfd , orig_flags )"	380:2:10229:10277	3004131	0	True				
ANR	3004331	CallExpression	"RESTORE_SOCKET_BLOCKING_MODE ( sockfd , orig_flags )"		3004131	0					
ANR	3004332	Callee	RESTORE_SOCKET_BLOCKING_MODE		3004131	0					
ANR	3004333	Identifier	RESTORE_SOCKET_BLOCKING_MODE		3004131	0					
ANR	3004334	ArgumentList	sockfd		3004131	1					
ANR	3004335	Argument	sockfd		3004131	0					
ANR	3004336	Identifier	sockfd		3004131	0					
ANR	3004337	Argument	orig_flags		3004131	1					
ANR	3004338	Identifier	orig_flags		3004131	0					
ANR	3004339	IfStatement	if ( error_code )		3004131	14					
ANR	3004340	Condition	error_code	383:5:10288:10297	3004131	0	True				
ANR	3004341	Identifier	error_code		3004131	0					
ANR	3004342	CompoundStatement		69:17:1678:1678	3004131	1					
ANR	3004343	ExpressionStatement	* error_code = error	384:2:10304:10323	3004131	0	True				
ANR	3004344	AssignmentExpression	* error_code = error		3004131	0		=			
ANR	3004345	UnaryOperationExpression	* error_code		3004131	0					
ANR	3004346	UnaryOperator	*		3004131	0					
ANR	3004347	Identifier	error_code		3004131	1					
ANR	3004348	Identifier	error		3004131	1					
ANR	3004349	IfStatement	if ( error )		3004131	15					
ANR	3004350	Condition	error	387:5:10334:10338	3004131	0	True				
ANR	3004351	Identifier	error		3004131	0					
ANR	3004352	CompoundStatement		73:12:1719:1719	3004131	1					
ANR	3004353	ExpressionStatement	ret = - 1	388:2:10345:10353	3004131	0	True				
ANR	3004354	AssignmentExpression	ret = - 1		3004131	0		=			
ANR	3004355	Identifier	ret		3004131	0					
ANR	3004356	UnaryOperationExpression	- 1		3004131	1					
ANR	3004357	UnaryOperator	-		3004131	0					
ANR	3004358	PrimaryExpression	1		3004131	1					
ANR	3004359	IfStatement	if ( error_string )		3004131	1					
ANR	3004360	Condition	error_string	389:6:10361:10372	3004131	0	True				
ANR	3004361	Identifier	error_string		3004131	0					
ANR	3004362	CompoundStatement		75:20:1753:1753	3004131	1					
ANR	3004363	ExpressionStatement	* error_string = php_socket_error_str ( error )	390:3:10380:10423	3004131	0	True				
ANR	3004364	AssignmentExpression	* error_string = php_socket_error_str ( error )		3004131	0		=			
ANR	3004365	UnaryOperationExpression	* error_string		3004131	0					
ANR	3004366	UnaryOperator	*		3004131	0					
ANR	3004367	Identifier	error_string		3004131	1					
ANR	3004368	CallExpression	php_socket_error_str ( error )		3004131	1					
ANR	3004369	Callee	php_socket_error_str		3004131	0					
ANR	3004370	Identifier	php_socket_error_str		3004131	0					
ANR	3004371	ArgumentList	error		3004131	1					
ANR	3004372	Argument	error		3004131	0					
ANR	3004373	Identifier	error		3004131	0					
ANR	3004374	ReturnStatement	return ret ;	393:1:10433:10443	3004131	16	True				
ANR	3004375	Identifier	ret		3004131	0					
ANR	3004376	ReturnType	PHPAPI int		3004131	1					
ANR	3004377	Identifier	php_network_connect_socket		3004131	2					
ANR	3004378	ParameterList	"php_socket_t sockfd , const struct sockaddr * addr , socklen_t addrlen , int asynchronous , struct timeval * timeout , zend_string * * error_string , int * error_code"		3004131	3					
ANR	3004379	Parameter	php_socket_t sockfd	308:38:8452:8470	3004131	0	True				
ANR	3004380	ParameterType	php_socket_t		3004131	0					
ANR	3004381	Identifier	sockfd		3004131	1					
ANR	3004382	Parameter	const struct sockaddr * addr	309:2:8475:8501	3004131	1	True				
ANR	3004383	ParameterType	const struct sockaddr *		3004131	0					
ANR	3004384	Identifier	addr		3004131	1					
ANR	3004385	Parameter	socklen_t addrlen	310:2:8506:8522	3004131	2	True				
ANR	3004386	ParameterType	socklen_t		3004131	0					
ANR	3004387	Identifier	addrlen		3004131	1					
ANR	3004388	Parameter	int asynchronous	311:2:8527:8542	3004131	3	True				
ANR	3004389	ParameterType	int		3004131	0					
ANR	3004390	Identifier	asynchronous		3004131	1					
ANR	3004391	Parameter	struct timeval * timeout	312:2:8547:8569	3004131	4	True				
ANR	3004392	ParameterType	struct timeval *		3004131	0					
ANR	3004393	Identifier	timeout		3004131	1					
ANR	3004394	Parameter	zend_string * * error_string	313:2:8574:8599	3004131	5	True				
ANR	3004395	ParameterType	zend_string * *		3004131	0					
ANR	3004396	Identifier	error_string		3004131	1					
ANR	3004397	Parameter	int * error_code	314:2:8604:8618	3004131	6	True				
ANR	3004398	ParameterType	int *		3004131	0					
ANR	3004399	Identifier	error_code		3004131	1					
ANR	3004400	CFGEntryNode	ENTRY		3004131		True				
ANR	3004401	CFGExitNode	EXIT		3004131		True				
ANR	3004402	Symbol	* error_code		3004131						
ANR	3004403	Symbol	& error		3004131						
ANR	3004404	Symbol	* error_string		3004131						
ANR	3004405	Symbol	getsockopt		3004131						
ANR	3004406	Symbol	sockfd		3004131						
ANR	3004407	Symbol	error		3004131						
ANR	3004408	Symbol	timeout		3004131						
ANR	3004409	Symbol	addrlen		3004131						
ANR	3004410	Symbol	len		3004131						
ANR	3004411	Symbol	asynchronous		3004131						
ANR	3004412	Symbol	SO_ERROR		3004131						
ANR	3004413	Symbol	POLLOUT		3004131						
ANR	3004414	Symbol	addr		3004131						
ANR	3004415	Symbol	connect		3004131						
ANR	3004416	Symbol	php_socket_errno		3004131						
ANR	3004417	Symbol	ret		3004131						
ANR	3004418	Symbol	php_socket_error_str		3004131						
ANR	3004419	Symbol	php_pollfd_for		3004131						
ANR	3004420	Symbol	n		3004131						
ANR	3004421	Symbol	SOL_SOCKET		3004131						
ANR	3004422	Symbol	error_string		3004131						
ANR	3004423	Symbol	orig_flags		3004131						
ANR	3004424	Symbol	error_code		3004131						
ANR	3004425	Symbol	PHP_TIMEOUT_ERROR_VALUE		3004131						
ANR	3004426	Symbol	POLLPRI		3004131						
ANR	3004427	Symbol	& len		3004131						
ANR	3004428	Symbol	EINPROGRESS		3004131						
ANR	3004429	Function	sub_times	404:0:10665:10996							
ANR	3004430	FunctionDef	"sub_times (struct timeval a , struct timeval b , struct timeval * result)"		3004429	0					
ANR	3004431	CompoundStatement		405:0:10754:10996	3004429	0					
ANR	3004432	ExpressionStatement	result -> tv_usec = a . tv_usec - b . tv_usec	406:1:10757:10796	3004429	0	True				
ANR	3004433	AssignmentExpression	result -> tv_usec = a . tv_usec - b . tv_usec		3004429	0		=			
ANR	3004434	PtrMemberAccess	result -> tv_usec		3004429	0					
ANR	3004435	Identifier	result		3004429	0					
ANR	3004436	Identifier	tv_usec		3004429	1					
ANR	3004437	AdditiveExpression	a . tv_usec - b . tv_usec		3004429	1		-			
ANR	3004438	MemberAccess	a . tv_usec		3004429	0					
ANR	3004439	Identifier	a		3004429	0					
ANR	3004440	Identifier	tv_usec		3004429	1					
ANR	3004441	MemberAccess	b . tv_usec		3004429	1					
ANR	3004442	Identifier	b		3004429	0					
ANR	3004443	Identifier	tv_usec		3004429	1					
ANR	3004444	IfStatement	if ( result -> tv_usec < 0L )		3004429	1					
ANR	3004445	Condition	result -> tv_usec < 0L	407:5:10803:10822	3004429	0	True				
ANR	3004446	RelationalExpression	result -> tv_usec < 0L		3004429	0		<			
ANR	3004447	PtrMemberAccess	result -> tv_usec		3004429	0					
ANR	3004448	Identifier	result		3004429	0					
ANR	3004449	Identifier	tv_usec		3004429	1					
ANR	3004450	PrimaryExpression	0L		3004429	1					
ANR	3004451	CompoundStatement		3:27:70:70	3004429	1					
ANR	3004452	ExpressionStatement	a . tv_sec --	408:2:10829:10839	3004429	0	True				
ANR	3004453	PostIncDecOperationExpression	a . tv_sec --		3004429	0					
ANR	3004454	MemberAccess	a . tv_sec		3004429	0					
ANR	3004455	Identifier	a		3004429	0					
ANR	3004456	Identifier	tv_sec		3004429	1					
ANR	3004457	IncDec	--		3004429	1					
ANR	3004458	ExpressionStatement	result -> tv_usec += 1000000L	409:2:10843:10870	3004429	1	True				
ANR	3004459	AssignmentExpression	result -> tv_usec += 1000000L		3004429	0		+=			
ANR	3004460	PtrMemberAccess	result -> tv_usec		3004429	0					
ANR	3004461	Identifier	result		3004429	0					
ANR	3004462	Identifier	tv_usec		3004429	1					
ANR	3004463	PrimaryExpression	1000000L		3004429	1					
ANR	3004464	ExpressionStatement	result -> tv_sec = a . tv_sec - b . tv_sec	411:1:10876:10912	3004429	2	True				
ANR	3004465	AssignmentExpression	result -> tv_sec = a . tv_sec - b . tv_sec		3004429	0		=			
ANR	3004466	PtrMemberAccess	result -> tv_sec		3004429	0					
ANR	3004467	Identifier	result		3004429	0					
ANR	3004468	Identifier	tv_sec		3004429	1					
ANR	3004469	AdditiveExpression	a . tv_sec - b . tv_sec		3004429	1		-			
ANR	3004470	MemberAccess	a . tv_sec		3004429	0					
ANR	3004471	Identifier	a		3004429	0					
ANR	3004472	Identifier	tv_sec		3004429	1					
ANR	3004473	MemberAccess	b . tv_sec		3004429	1					
ANR	3004474	Identifier	b		3004429	0					
ANR	3004475	Identifier	tv_sec		3004429	1					
ANR	3004476	IfStatement	if ( result -> tv_sec < 0L )		3004429	3					
ANR	3004477	Condition	result -> tv_sec < 0L	412:5:10919:10937	3004429	0	True				
ANR	3004478	RelationalExpression	result -> tv_sec < 0L		3004429	0		<			
ANR	3004479	PtrMemberAccess	result -> tv_sec		3004429	0					
ANR	3004480	Identifier	result		3004429	0					
ANR	3004481	Identifier	tv_sec		3004429	1					
ANR	3004482	PrimaryExpression	0L		3004429	1					
ANR	3004483	CompoundStatement		8:26:185:185	3004429	1					
ANR	3004484	ExpressionStatement	result -> tv_sec ++	413:2:10944:10960	3004429	0	True				
ANR	3004485	PostIncDecOperationExpression	result -> tv_sec ++		3004429	0					
ANR	3004486	PtrMemberAccess	result -> tv_sec		3004429	0					
ANR	3004487	Identifier	result		3004429	0					
ANR	3004488	Identifier	tv_sec		3004429	1					
ANR	3004489	IncDec	++		3004429	1					
ANR	3004490	ExpressionStatement	result -> tv_usec -= 1000000L	414:2:10964:10991	3004429	1	True				
ANR	3004491	AssignmentExpression	result -> tv_usec -= 1000000L		3004429	0		-=			
ANR	3004492	PtrMemberAccess	result -> tv_usec		3004429	0					
ANR	3004493	Identifier	result		3004429	0					
ANR	3004494	Identifier	tv_usec		3004429	1					
ANR	3004495	PrimaryExpression	1000000L		3004429	1					
ANR	3004496	ReturnType	static inline void		3004429	1					
ANR	3004497	Identifier	sub_times		3004429	2					
ANR	3004498	ParameterList	"struct timeval a , struct timeval b , struct timeval * result"		3004429	3					
ANR	3004499	Parameter	struct timeval a	404:29:10694:10709	3004429	0	True				
ANR	3004500	ParameterType	struct timeval		3004429	0					
ANR	3004501	Identifier	a		3004429	1					
ANR	3004502	Parameter	struct timeval b	404:47:10712:10727	3004429	1	True				
ANR	3004503	ParameterType	struct timeval		3004429	0					
ANR	3004504	Identifier	b		3004429	1					
ANR	3004505	Parameter	struct timeval * result	404:65:10730:10751	3004429	2	True				
ANR	3004506	ParameterType	struct timeval *		3004429	0					
ANR	3004507	Identifier	result		3004429	1					
ANR	3004508	CFGEntryNode	ENTRY		3004429		True				
ANR	3004509	CFGExitNode	EXIT		3004429		True				
ANR	3004510	Symbol	result		3004429						
ANR	3004511	Symbol	result -> tv_usec		3004429						
ANR	3004512	Symbol	a		3004429						
ANR	3004513	Symbol	b		3004429						
ANR	3004514	Symbol	b . tv_sec		3004429						
ANR	3004515	Symbol	* result		3004429						
ANR	3004516	Symbol	b . tv_usec		3004429						
ANR	3004517	Symbol	a . tv_sec		3004429						
ANR	3004518	Symbol	a . tv_usec		3004429						
ANR	3004519	Symbol	result -> tv_sec		3004429						
ANR	3004520	Function	php_network_bind_socket_to_local_addr	423:0:11141:13343							
ANR	3004521	FunctionDef	"php_network_bind_socket_to_local_addr (const char * host , unsigned port , int socktype , long sockopts , zend_string * * error_string , int * error_code)"		3004520	0					
ANR	3004522	CompoundStatement		426:0:11304:13343	3004520	0					
ANR	3004523	IdentifierDeclStatement	"int num_addrs , n , err = 0 ;"	427:1:11307:11332	3004520	0	True				
ANR	3004524	IdentifierDecl	num_addrs		3004520	0					
ANR	3004525	IdentifierDeclType	int		3004520	0					
ANR	3004526	Identifier	num_addrs		3004520	1					
ANR	3004527	IdentifierDecl	n		3004520	1					
ANR	3004528	IdentifierDeclType	int		3004520	0					
ANR	3004529	Identifier	n		3004520	1					
ANR	3004530	IdentifierDecl	err = 0		3004520	2					
ANR	3004531	IdentifierDeclType	int		3004520	0					
ANR	3004532	Identifier	err		3004520	1					
ANR	3004533	AssignmentExpression	err = 0		3004520	2		=			
ANR	3004534	Identifier	err		3004520	0					
ANR	3004535	PrimaryExpression	0		3004520	1					
ANR	3004536	IdentifierDeclStatement	php_socket_t sock ;	428:1:11335:11352	3004520	1	True				
ANR	3004537	IdentifierDecl	sock		3004520	0					
ANR	3004538	IdentifierDeclType	php_socket_t		3004520	0					
ANR	3004539	Identifier	sock		3004520	1					
ANR	3004540	IdentifierDeclStatement	"struct sockaddr * * sal , * * psal , * sa ;"	429:1:11355:11389	3004520	2	True				
ANR	3004541	IdentifierDecl	* * sal		3004520	0					
ANR	3004542	IdentifierDeclType	struct sockaddr * *		3004520	0					
ANR	3004543	Identifier	sal		3004520	1					
ANR	3004544	IdentifierDecl	* * psal		3004520	1					
ANR	3004545	IdentifierDeclType	struct sockaddr * *		3004520	0					
ANR	3004546	Identifier	psal		3004520	1					
ANR	3004547	IdentifierDecl	* sa		3004520	2					
ANR	3004548	IdentifierDeclType	struct sockaddr *		3004520	0					
ANR	3004549	Identifier	sa		3004520	1					
ANR	3004550	IdentifierDeclStatement	socklen_t socklen ;	430:1:11392:11409	3004520	3	True				
ANR	3004551	IdentifierDecl	socklen		3004520	0					
ANR	3004552	IdentifierDeclType	socklen_t		3004520	0					
ANR	3004553	Identifier	socklen		3004520	1					
ANR	3004554	IdentifierDeclStatement	int sockoptval = 1 ;	431:1:11412:11430	3004520	4	True				
ANR	3004555	IdentifierDecl	sockoptval = 1		3004520	0					
ANR	3004556	IdentifierDeclType	int		3004520	0					
ANR	3004557	Identifier	sockoptval		3004520	1					
ANR	3004558	AssignmentExpression	sockoptval = 1		3004520	2		=			
ANR	3004559	Identifier	sockoptval		3004520	0					
ANR	3004560	PrimaryExpression	1		3004520	1					
ANR	3004561	ExpressionStatement	"num_addrs = php_network_getaddresses ( host , socktype , & psal , error_string )"	433:1:11434:11507	3004520	5	True				
ANR	3004562	AssignmentExpression	"num_addrs = php_network_getaddresses ( host , socktype , & psal , error_string )"		3004520	0		=			
ANR	3004563	Identifier	num_addrs		3004520	0					
ANR	3004564	CallExpression	"php_network_getaddresses ( host , socktype , & psal , error_string )"		3004520	1					
ANR	3004565	Callee	php_network_getaddresses		3004520	0					
ANR	3004566	Identifier	php_network_getaddresses		3004520	0					
ANR	3004567	ArgumentList	host		3004520	1					
ANR	3004568	Argument	host		3004520	0					
ANR	3004569	Identifier	host		3004520	0					
ANR	3004570	Argument	socktype		3004520	1					
ANR	3004571	Identifier	socktype		3004520	0					
ANR	3004572	Argument	& psal		3004520	2					
ANR	3004573	UnaryOperationExpression	& psal		3004520	0					
ANR	3004574	UnaryOperator	&		3004520	0					
ANR	3004575	Identifier	psal		3004520	1					
ANR	3004576	Argument	error_string		3004520	3					
ANR	3004577	Identifier	error_string		3004520	0					
ANR	3004578	IfStatement	if ( num_addrs == 0 )		3004520	6					
ANR	3004579	Condition	num_addrs == 0	435:5:11515:11528	3004520	0	True				
ANR	3004580	EqualityExpression	num_addrs == 0		3004520	0		==			
ANR	3004581	Identifier	num_addrs		3004520	0					
ANR	3004582	PrimaryExpression	0		3004520	1					
ANR	3004583	CompoundStatement		10:21:226:226	3004520	1					
ANR	3004584	ReturnStatement	return - 1 ;	437:2:11573:11582	3004520	0	True				
ANR	3004585	UnaryOperationExpression	- 1		3004520	0					
ANR	3004586	UnaryOperator	-		3004520	0					
ANR	3004587	PrimaryExpression	1		3004520	1					
ANR	3004588	ForStatement	for ( sal = psal ; * sal != NULL ; sal ++ )		3004520	7					
ANR	3004589	ForInit	sal = psal ;	440:6:11594:11604	3004520	0	True				
ANR	3004590	AssignmentExpression	sal = psal		3004520	0		=			
ANR	3004591	Identifier	sal		3004520	0					
ANR	3004592	Identifier	psal		3004520	1					
ANR	3004593	Condition	* sal != NULL	440:18:11606:11617	3004520	1	True				
ANR	3004594	EqualityExpression	* sal != NULL		3004520	0		!=			
ANR	3004595	UnaryOperationExpression	* sal		3004520	0					
ANR	3004596	UnaryOperator	*		3004520	0					
ANR	3004597	Identifier	sal		3004520	1					
ANR	3004598	Identifier	NULL		3004520	1					
ANR	3004599	PostIncDecOperationExpression	sal ++	440:32:11620:11624	3004520	2	True				
ANR	3004600	Identifier	sal		3004520	0					
ANR	3004601	IncDec	++		3004520	1					
ANR	3004602	CompoundStatement		15:39:322:322	3004520	3					
ANR	3004603	ExpressionStatement	sa = * sal	441:2:11631:11640	3004520	0	True				
ANR	3004604	AssignmentExpression	sa = * sal		3004520	0		=			
ANR	3004605	Identifier	sa		3004520	0					
ANR	3004606	UnaryOperationExpression	* sal		3004520	1					
ANR	3004607	UnaryOperator	*		3004520	0					
ANR	3004608	Identifier	sal		3004520	1					
ANR	3004609	ExpressionStatement	"sock = socket ( sa -> sa_family , socktype , 0 )"	444:2:11686:11727	3004520	1	True				
ANR	3004610	AssignmentExpression	"sock = socket ( sa -> sa_family , socktype , 0 )"		3004520	0		=			
ANR	3004611	Identifier	sock		3004520	0					
ANR	3004612	CallExpression	"socket ( sa -> sa_family , socktype , 0 )"		3004520	1					
ANR	3004613	Callee	socket		3004520	0					
ANR	3004614	Identifier	socket		3004520	0					
ANR	3004615	ArgumentList	sa -> sa_family		3004520	1					
ANR	3004616	Argument	sa -> sa_family		3004520	0					
ANR	3004617	PtrMemberAccess	sa -> sa_family		3004520	0					
ANR	3004618	Identifier	sa		3004520	0					
ANR	3004619	Identifier	sa_family		3004520	1					
ANR	3004620	Argument	socktype		3004520	1					
ANR	3004621	Identifier	socktype		3004520	0					
ANR	3004622	Argument	0		3004520	2					
ANR	3004623	PrimaryExpression	0		3004520	0					
ANR	3004624	IfStatement	if ( sock == SOCK_ERR )		3004520	2					
ANR	3004625	Condition	sock == SOCK_ERR	446:6:11736:11751	3004520	0	True				
ANR	3004626	EqualityExpression	sock == SOCK_ERR		3004520	0		==			
ANR	3004627	Identifier	sock		3004520	0					
ANR	3004628	Identifier	SOCK_ERR		3004520	1					
ANR	3004629	CompoundStatement		21:24:449:449	3004520	1					
ANR	3004630	ContinueStatement	continue ;	447:3:11759:11767	3004520	0	True				
ANR	3004631	SwitchStatement	switch ( sa -> sa_family )		3004520	3					
ANR	3004632	Condition	sa -> sa_family	450:10:11784:11796	3004520	0	True				
ANR	3004633	PtrMemberAccess	sa -> sa_family		3004520	0					
ANR	3004634	Identifier	sa		3004520	0					
ANR	3004635	Identifier	sa_family		3004520	1					
ANR	3004636	CompoundStatement		25:25:494:494	3004520	1					
ANR	3004637	Label	case AF_INET6 :	452:3:11838:11851	3004520	0	True				
ANR	3004638	Identifier	AF_INET6		3004520	0					
ANR	3004639	ExpressionStatement	( ( struct sockaddr_in6 * ) sa ) -> sin6_family = sa -> sa_family	453:4:11857:11913	3004520	1	True				
ANR	3004640	AssignmentExpression	( ( struct sockaddr_in6 * ) sa ) -> sin6_family = sa -> sa_family		3004520	0		=			
ANR	3004641	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_family		3004520	0					
ANR	3004642	CastExpression	( struct sockaddr_in6 * ) sa		3004520	0					
ANR	3004643	CastTarget	struct sockaddr_in6 *		3004520	0					
ANR	3004644	Identifier	sa		3004520	1					
ANR	3004645	Identifier	sin6_family		3004520	1					
ANR	3004646	PtrMemberAccess	sa -> sa_family		3004520	1					
ANR	3004647	Identifier	sa		3004520	0					
ANR	3004648	Identifier	sa_family		3004520	1					
ANR	3004649	ExpressionStatement	( ( struct sockaddr_in6 * ) sa ) -> sin6_port = htons ( port )	454:4:11919:11971	3004520	2	True				
ANR	3004650	AssignmentExpression	( ( struct sockaddr_in6 * ) sa ) -> sin6_port = htons ( port )		3004520	0		=			
ANR	3004651	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3004520	0					
ANR	3004652	CastExpression	( struct sockaddr_in6 * ) sa		3004520	0					
ANR	3004653	CastTarget	struct sockaddr_in6 *		3004520	0					
ANR	3004654	Identifier	sa		3004520	1					
ANR	3004655	Identifier	sin6_port		3004520	1					
ANR	3004656	CallExpression	htons ( port )		3004520	1					
ANR	3004657	Callee	htons		3004520	0					
ANR	3004658	Identifier	htons		3004520	0					
ANR	3004659	ArgumentList	port		3004520	1					
ANR	3004660	Argument	port		3004520	0					
ANR	3004661	Identifier	port		3004520	0					
ANR	3004662	ExpressionStatement	socklen = sizeof ( struct sockaddr_in6 )	455:4:11977:12014	3004520	3	True				
ANR	3004663	AssignmentExpression	socklen = sizeof ( struct sockaddr_in6 )		3004520	0		=			
ANR	3004664	Identifier	socklen		3004520	0					
ANR	3004665	SizeofExpression	sizeof ( struct sockaddr_in6 )		3004520	1					
ANR	3004666	Sizeof	sizeof		3004520	0					
ANR	3004667	SizeofOperand	struct sockaddr_in6		3004520	1					
ANR	3004668	BreakStatement	break ;	456:4:12020:12025	3004520	4	True				
ANR	3004669	Label	case AF_INET :	458:3:12037:12049	3004520	5	True				
ANR	3004670	Identifier	AF_INET		3004520	0					
ANR	3004671	ExpressionStatement	( ( struct sockaddr_in * ) sa ) -> sin_family = sa -> sa_family	459:4:12055:12109	3004520	6	True				
ANR	3004672	AssignmentExpression	( ( struct sockaddr_in * ) sa ) -> sin_family = sa -> sa_family		3004520	0		=			
ANR	3004673	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_family		3004520	0					
ANR	3004674	CastExpression	( struct sockaddr_in * ) sa		3004520	0					
ANR	3004675	CastTarget	struct sockaddr_in *		3004520	0					
ANR	3004676	Identifier	sa		3004520	1					
ANR	3004677	Identifier	sin_family		3004520	1					
ANR	3004678	PtrMemberAccess	sa -> sa_family		3004520	1					
ANR	3004679	Identifier	sa		3004520	0					
ANR	3004680	Identifier	sa_family		3004520	1					
ANR	3004681	ExpressionStatement	( ( struct sockaddr_in * ) sa ) -> sin_port = htons ( port )	460:4:12115:12165	3004520	7	True				
ANR	3004682	AssignmentExpression	( ( struct sockaddr_in * ) sa ) -> sin_port = htons ( port )		3004520	0		=			
ANR	3004683	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_port		3004520	0					
ANR	3004684	CastExpression	( struct sockaddr_in * ) sa		3004520	0					
ANR	3004685	CastTarget	struct sockaddr_in *		3004520	0					
ANR	3004686	Identifier	sa		3004520	1					
ANR	3004687	Identifier	sin_port		3004520	1					
ANR	3004688	CallExpression	htons ( port )		3004520	1					
ANR	3004689	Callee	htons		3004520	0					
ANR	3004690	Identifier	htons		3004520	0					
ANR	3004691	ArgumentList	port		3004520	1					
ANR	3004692	Argument	port		3004520	0					
ANR	3004693	Identifier	port		3004520	0					
ANR	3004694	ExpressionStatement	socklen = sizeof ( struct sockaddr_in )	461:4:12171:12207	3004520	8	True				
ANR	3004695	AssignmentExpression	socklen = sizeof ( struct sockaddr_in )		3004520	0		=			
ANR	3004696	Identifier	socklen		3004520	0					
ANR	3004697	SizeofExpression	sizeof ( struct sockaddr_in )		3004520	1					
ANR	3004698	Sizeof	sizeof		3004520	0					
ANR	3004699	SizeofOperand	struct sockaddr_in		3004520	1					
ANR	3004700	BreakStatement	break ;	462:4:12213:12218	3004520	9	True				
ANR	3004701	Label	default :	463:3:12223:12230	3004520	10	True				
ANR	3004702	Identifier	default		3004520	0					
ANR	3004703	ExpressionStatement	socklen = 0	465:4:12261:12272	3004520	11	True				
ANR	3004704	AssignmentExpression	socklen = 0		3004520	0		=			
ANR	3004705	Identifier	socklen		3004520	0					
ANR	3004706	PrimaryExpression	0		3004520	1					
ANR	3004707	ExpressionStatement	sa = NULL	466:4:12278:12287	3004520	12	True				
ANR	3004708	AssignmentExpression	sa = NULL		3004520	0		=			
ANR	3004709	Identifier	sa		3004520	0					
ANR	3004710	Identifier	NULL		3004520	1					
ANR	3004711	IfStatement	if ( sa )		3004520	4					
ANR	3004712	Condition	sa	469:6:12300:12301	3004520	0	True				
ANR	3004713	Identifier	sa		3004520	0					
ANR	3004714	CompoundStatement		44:10:999:999	3004520	1					
ANR	3004715	ExpressionStatement	"setsockopt ( sock , SOL_SOCKET , SO_REUSEADDR , ( char * ) & sockoptval , sizeof ( sockoptval ) )"	473:3:12355:12437	3004520	0	True				
ANR	3004716	CallExpression	"setsockopt ( sock , SOL_SOCKET , SO_REUSEADDR , ( char * ) & sockoptval , sizeof ( sockoptval ) )"		3004520	0					
ANR	3004717	Callee	setsockopt		3004520	0					
ANR	3004718	Identifier	setsockopt		3004520	0					
ANR	3004719	ArgumentList	sock		3004520	1					
ANR	3004720	Argument	sock		3004520	0					
ANR	3004721	Identifier	sock		3004520	0					
ANR	3004722	Argument	SOL_SOCKET		3004520	1					
ANR	3004723	Identifier	SOL_SOCKET		3004520	0					
ANR	3004724	Argument	SO_REUSEADDR		3004520	2					
ANR	3004725	Identifier	SO_REUSEADDR		3004520	0					
ANR	3004726	Argument	( char * ) & sockoptval		3004520	3					
ANR	3004727	CastExpression	( char * ) & sockoptval		3004520	0					
ANR	3004728	CastTarget	char *		3004520	0					
ANR	3004729	UnaryOperationExpression	& sockoptval		3004520	1					
ANR	3004730	UnaryOperator	&		3004520	0					
ANR	3004731	Identifier	sockoptval		3004520	1					
ANR	3004732	Argument	sizeof ( sockoptval )		3004520	4					
ANR	3004733	SizeofExpression	sizeof ( sockoptval )		3004520	0					
ANR	3004734	Sizeof	sizeof		3004520	0					
ANR	3004735	SizeofOperand	sockoptval		3004520	1					
ANR	3004736	IfStatement	if ( sockopts & STREAM_SOCKOP_IPV6_V6ONLY )		3004520	1					
ANR	3004737	Condition	sockopts & STREAM_SOCKOP_IPV6_V6ONLY	476:7:12472:12507	3004520	0	True				
ANR	3004738	BitAndExpression	sockopts & STREAM_SOCKOP_IPV6_V6ONLY		3004520	0		&			
ANR	3004739	Identifier	sockopts		3004520	0					
ANR	3004740	Identifier	STREAM_SOCKOP_IPV6_V6ONLY		3004520	1					
ANR	3004741	CompoundStatement		52:4:1211:1274	3004520	1					
ANR	3004742	IdentifierDeclStatement	int ipv6_val = ! ! ( sockopts & STREAM_SOCKOP_IPV6_V6ONLY_ENABLED ) ;	477:4:12516:12579	3004520	0	True				
ANR	3004743	IdentifierDecl	ipv6_val = ! ! ( sockopts & STREAM_SOCKOP_IPV6_V6ONLY_ENABLED )		3004520	0					
ANR	3004744	IdentifierDeclType	int		3004520	0					
ANR	3004745	Identifier	ipv6_val		3004520	1					
ANR	3004746	AssignmentExpression	ipv6_val = ! ! ( sockopts & STREAM_SOCKOP_IPV6_V6ONLY_ENABLED )		3004520	2		=			
ANR	3004747	Identifier	ipv6_val		3004520	0					
ANR	3004748	UnaryOperationExpression	! ! ( sockopts & STREAM_SOCKOP_IPV6_V6ONLY_ENABLED )		3004520	1					
ANR	3004749	UnaryOperator	!		3004520	0					
ANR	3004750	UnaryOperationExpression	! ( sockopts & STREAM_SOCKOP_IPV6_V6ONLY_ENABLED )		3004520	1					
ANR	3004751	UnaryOperator	!		3004520	0					
ANR	3004752	BitAndExpression	sockopts & STREAM_SOCKOP_IPV6_V6ONLY_ENABLED		3004520	1		&			
ANR	3004753	Identifier	sockopts		3004520	0					
ANR	3004754	Identifier	STREAM_SOCKOP_IPV6_V6ONLY_ENABLED		3004520	1					
ANR	3004755	ExpressionStatement	"setsockopt ( sock , IPPROTO_IPV6 , IPV6_V6ONLY , ( char * ) & ipv6_val , sizeof ( sockoptval ) )"	478:4:12585:12666	3004520	1	True				
ANR	3004756	CallExpression	"setsockopt ( sock , IPPROTO_IPV6 , IPV6_V6ONLY , ( char * ) & ipv6_val , sizeof ( sockoptval ) )"		3004520	0					
ANR	3004757	Callee	setsockopt		3004520	0					
ANR	3004758	Identifier	setsockopt		3004520	0					
ANR	3004759	ArgumentList	sock		3004520	1					
ANR	3004760	Argument	sock		3004520	0					
ANR	3004761	Identifier	sock		3004520	0					
ANR	3004762	Argument	IPPROTO_IPV6		3004520	1					
ANR	3004763	Identifier	IPPROTO_IPV6		3004520	0					
ANR	3004764	Argument	IPV6_V6ONLY		3004520	2					
ANR	3004765	Identifier	IPV6_V6ONLY		3004520	0					
ANR	3004766	Argument	( char * ) & ipv6_val		3004520	3					
ANR	3004767	CastExpression	( char * ) & ipv6_val		3004520	0					
ANR	3004768	CastTarget	char *		3004520	0					
ANR	3004769	UnaryOperationExpression	& ipv6_val		3004520	1					
ANR	3004770	UnaryOperator	&		3004520	0					
ANR	3004771	Identifier	ipv6_val		3004520	1					
ANR	3004772	Argument	sizeof ( sockoptval )		3004520	4					
ANR	3004773	SizeofExpression	sizeof ( sockoptval )		3004520	0					
ANR	3004774	Sizeof	sizeof		3004520	0					
ANR	3004775	SizeofOperand	sockoptval		3004520	1					
ANR	3004776	IfStatement	if ( sockopts & STREAM_SOCKOP_SO_REUSEPORT )		3004520	2					
ANR	3004777	Condition	sockopts & STREAM_SOCKOP_SO_REUSEPORT	482:7:12707:12743	3004520	0	True				
ANR	3004778	BitAndExpression	sockopts & STREAM_SOCKOP_SO_REUSEPORT		3004520	0		&			
ANR	3004779	Identifier	sockopts		3004520	0					
ANR	3004780	Identifier	STREAM_SOCKOP_SO_REUSEPORT		3004520	1					
ANR	3004781	CompoundStatement		57:46:1441:1441	3004520	1					
ANR	3004782	ExpressionStatement	"setsockopt ( sock , SOL_SOCKET , SO_REUSEPORT , ( char * ) & sockoptval , sizeof ( sockoptval ) )"	483:4:12752:12834	3004520	0	True				
ANR	3004783	CallExpression	"setsockopt ( sock , SOL_SOCKET , SO_REUSEPORT , ( char * ) & sockoptval , sizeof ( sockoptval ) )"		3004520	0					
ANR	3004784	Callee	setsockopt		3004520	0					
ANR	3004785	Identifier	setsockopt		3004520	0					
ANR	3004786	ArgumentList	sock		3004520	1					
ANR	3004787	Argument	sock		3004520	0					
ANR	3004788	Identifier	sock		3004520	0					
ANR	3004789	Argument	SOL_SOCKET		3004520	1					
ANR	3004790	Identifier	SOL_SOCKET		3004520	0					
ANR	3004791	Argument	SO_REUSEPORT		3004520	2					
ANR	3004792	Identifier	SO_REUSEPORT		3004520	0					
ANR	3004793	Argument	( char * ) & sockoptval		3004520	3					
ANR	3004794	CastExpression	( char * ) & sockoptval		3004520	0					
ANR	3004795	CastTarget	char *		3004520	0					
ANR	3004796	UnaryOperationExpression	& sockoptval		3004520	1					
ANR	3004797	UnaryOperator	&		3004520	0					
ANR	3004798	Identifier	sockoptval		3004520	1					
ANR	3004799	Argument	sizeof ( sockoptval )		3004520	4					
ANR	3004800	SizeofExpression	sizeof ( sockoptval )		3004520	0					
ANR	3004801	Sizeof	sizeof		3004520	0					
ANR	3004802	SizeofOperand	sockoptval		3004520	1					
ANR	3004803	IfStatement	if ( sockopts & STREAM_SOCKOP_SO_BROADCAST )		3004520	3					
ANR	3004804	Condition	sockopts & STREAM_SOCKOP_SO_BROADCAST	487:7:12875:12911	3004520	0	True				
ANR	3004805	BitAndExpression	sockopts & STREAM_SOCKOP_SO_BROADCAST		3004520	0		&			
ANR	3004806	Identifier	sockopts		3004520	0					
ANR	3004807	Identifier	STREAM_SOCKOP_SO_BROADCAST		3004520	1					
ANR	3004808	CompoundStatement		62:46:1609:1609	3004520	1					
ANR	3004809	ExpressionStatement	"setsockopt ( sock , SOL_SOCKET , SO_BROADCAST , ( char * ) & sockoptval , sizeof ( sockoptval ) )"	488:4:12920:13002	3004520	0	True				
ANR	3004810	CallExpression	"setsockopt ( sock , SOL_SOCKET , SO_BROADCAST , ( char * ) & sockoptval , sizeof ( sockoptval ) )"		3004520	0					
ANR	3004811	Callee	setsockopt		3004520	0					
ANR	3004812	Identifier	setsockopt		3004520	0					
ANR	3004813	ArgumentList	sock		3004520	1					
ANR	3004814	Argument	sock		3004520	0					
ANR	3004815	Identifier	sock		3004520	0					
ANR	3004816	Argument	SOL_SOCKET		3004520	1					
ANR	3004817	Identifier	SOL_SOCKET		3004520	0					
ANR	3004818	Argument	SO_BROADCAST		3004520	2					
ANR	3004819	Identifier	SO_BROADCAST		3004520	0					
ANR	3004820	Argument	( char * ) & sockoptval		3004520	3					
ANR	3004821	CastExpression	( char * ) & sockoptval		3004520	0					
ANR	3004822	CastTarget	char *		3004520	0					
ANR	3004823	UnaryOperationExpression	& sockoptval		3004520	1					
ANR	3004824	UnaryOperator	&		3004520	0					
ANR	3004825	Identifier	sockoptval		3004520	1					
ANR	3004826	Argument	sizeof ( sockoptval )		3004520	4					
ANR	3004827	SizeofExpression	sizeof ( sockoptval )		3004520	0					
ANR	3004828	Sizeof	sizeof		3004520	0					
ANR	3004829	SizeofOperand	sockoptval		3004520	1					
ANR	3004830	ExpressionStatement	"n = bind ( sock , sa , socklen )"	492:3:13020:13047	3004520	4	True				
ANR	3004831	AssignmentExpression	"n = bind ( sock , sa , socklen )"		3004520	0		=			
ANR	3004832	Identifier	n		3004520	0					
ANR	3004833	CallExpression	"bind ( sock , sa , socklen )"		3004520	1					
ANR	3004834	Callee	bind		3004520	0					
ANR	3004835	Identifier	bind		3004520	0					
ANR	3004836	ArgumentList	sock		3004520	1					
ANR	3004837	Argument	sock		3004520	0					
ANR	3004838	Identifier	sock		3004520	0					
ANR	3004839	Argument	sa		3004520	1					
ANR	3004840	Identifier	sa		3004520	0					
ANR	3004841	Argument	socklen		3004520	2					
ANR	3004842	Identifier	socklen		3004520	0					
ANR	3004843	IfStatement	if ( n != SOCK_CONN_ERR )		3004520	5					
ANR	3004844	Condition	n != SOCK_CONN_ERR	494:7:13057:13074	3004520	0	True				
ANR	3004845	EqualityExpression	n != SOCK_CONN_ERR		3004520	0		!=			
ANR	3004846	Identifier	n		3004520	0					
ANR	3004847	Identifier	SOCK_CONN_ERR		3004520	1					
ANR	3004848	CompoundStatement		69:27:1772:1772	3004520	1					
ANR	3004849	GotoStatement	goto bound ;	495:4:13083:13093	3004520	0	True				
ANR	3004850	Identifier	bound		3004520	0					
ANR	3004851	ExpressionStatement	err = php_socket_errno ( )	498:3:13104:13128	3004520	6	True				
ANR	3004852	AssignmentExpression	err = php_socket_errno ( )		3004520	0		=			
ANR	3004853	Identifier	err		3004520	0					
ANR	3004854	CallExpression	php_socket_errno ( )		3004520	1					
ANR	3004855	Callee	php_socket_errno		3004520	0					
ANR	3004856	Identifier	php_socket_errno		3004520	0					
ANR	3004857	ArgumentList			3004520	1					
ANR	3004858	ExpressionStatement	closesocket ( sock )	501:2:13137:13154	3004520	5	True				
ANR	3004859	CallExpression	closesocket ( sock )		3004520	0					
ANR	3004860	Callee	closesocket		3004520	0					
ANR	3004861	Identifier	closesocket		3004520	0					
ANR	3004862	ArgumentList	sock		3004520	1					
ANR	3004863	Argument	sock		3004520	0					
ANR	3004864	Identifier	sock		3004520	0					
ANR	3004865	ExpressionStatement	sock = - 1	503:1:13160:13169	3004520	8	True				
ANR	3004866	AssignmentExpression	sock = - 1		3004520	0		=			
ANR	3004867	Identifier	sock		3004520	0					
ANR	3004868	UnaryOperationExpression	- 1		3004520	1					
ANR	3004869	UnaryOperator	-		3004520	0					
ANR	3004870	PrimaryExpression	1		3004520	1					
ANR	3004871	IfStatement	if ( error_code )		3004520	9					
ANR	3004872	Condition	error_code	505:5:13177:13186	3004520	0	True				
ANR	3004873	Identifier	error_code		3004520	0					
ANR	3004874	CompoundStatement		80:17:1884:1884	3004520	1					
ANR	3004875	ExpressionStatement	* error_code = err	506:2:13193:13210	3004520	0	True				
ANR	3004876	AssignmentExpression	* error_code = err		3004520	0		=			
ANR	3004877	UnaryOperationExpression	* error_code		3004520	0					
ANR	3004878	UnaryOperator	*		3004520	0					
ANR	3004879	Identifier	error_code		3004520	1					
ANR	3004880	Identifier	err		3004520	1					
ANR	3004881	IfStatement	if ( error_string )		3004520	10					
ANR	3004882	Condition	error_string	508:5:13220:13231	3004520	0	True				
ANR	3004883	Identifier	error_string		3004520	0					
ANR	3004884	CompoundStatement		83:19:1929:1929	3004520	1					
ANR	3004885	ExpressionStatement	* error_string = php_socket_error_str ( err )	509:2:13238:13279	3004520	0	True				
ANR	3004886	AssignmentExpression	* error_string = php_socket_error_str ( err )		3004520	0		=			
ANR	3004887	UnaryOperationExpression	* error_string		3004520	0					
ANR	3004888	UnaryOperator	*		3004520	0					
ANR	3004889	Identifier	error_string		3004520	1					
ANR	3004890	CallExpression	php_socket_error_str ( err )		3004520	1					
ANR	3004891	Callee	php_socket_error_str		3004520	0					
ANR	3004892	Identifier	php_socket_error_str		3004520	0					
ANR	3004893	ArgumentList	err		3004520	1					
ANR	3004894	Argument	err		3004520	0					
ANR	3004895	Identifier	err		3004520	0					
ANR	3004896	Label	bound :	512:0:13285:13290	3004520	11	True				
ANR	3004897	Identifier	bound		3004520	0					
ANR	3004898	ExpressionStatement	php_network_freeaddresses ( psal )	514:1:13294:13325	3004520	12	True				
ANR	3004899	CallExpression	php_network_freeaddresses ( psal )		3004520	0					
ANR	3004900	Callee	php_network_freeaddresses		3004520	0					
ANR	3004901	Identifier	php_network_freeaddresses		3004520	0					
ANR	3004902	ArgumentList	psal		3004520	1					
ANR	3004903	Argument	psal		3004520	0					
ANR	3004904	Identifier	psal		3004520	0					
ANR	3004905	ReturnStatement	return sock ;	516:1:13329:13340	3004520	13	True				
ANR	3004906	Identifier	sock		3004520	0					
ANR	3004907	ReturnType	php_socket_t		3004520	1					
ANR	3004908	Identifier	php_network_bind_socket_to_local_addr		3004520	2					
ANR	3004909	ParameterList	"const char * host , unsigned port , int socktype , long sockopts , zend_string * * error_string , int * error_code"		3004520	3					
ANR	3004910	Parameter	const char * host	423:51:11192:11207	3004520	0	True				
ANR	3004911	ParameterType	const char *		3004520	0					
ANR	3004912	Identifier	host		3004520	1					
ANR	3004913	Parameter	unsigned port	423:69:11210:11222	3004520	1	True				
ANR	3004914	ParameterType	unsigned		3004520	0					
ANR	3004915	Identifier	port		3004520	1					
ANR	3004916	Parameter	int socktype	424:2:11227:11238	3004520	2	True				
ANR	3004917	ParameterType	int		3004520	0					
ANR	3004918	Identifier	socktype		3004520	1					
ANR	3004919	Parameter	long sockopts	424:16:11241:11253	3004520	3	True				
ANR	3004920	ParameterType	long		3004520	0					
ANR	3004921	Identifier	sockopts		3004520	1					
ANR	3004922	Parameter	zend_string * * error_string	424:31:11256:11281	3004520	4	True				
ANR	3004923	ParameterType	zend_string * *		3004520	0					
ANR	3004924	Identifier	error_string		3004520	1					
ANR	3004925	Parameter	int * error_code	424:59:11284:11298	3004520	5	True				
ANR	3004926	ParameterType	int *		3004520	0					
ANR	3004927	Identifier	error_code		3004520	1					
ANR	3004928	CFGEntryNode	ENTRY		3004520		True				
ANR	3004929	CFGExitNode	EXIT		3004520		True				
ANR	3004930	Symbol	* error_code		3004520						
ANR	3004931	Symbol	STREAM_SOCKOP_IPV6_V6ONLY		3004520						
ANR	3004932	Symbol	* error_string		3004520						
ANR	3004933	Symbol	sa -> sa_family		3004520						
ANR	3004934	Symbol	htons		3004520						
ANR	3004935	Symbol	* sal		3004520						
ANR	3004936	Symbol	STREAM_SOCKOP_IPV6_V6ONLY_ENABLED		3004520						
ANR	3004937	Symbol	& ipv6_val		3004520						
ANR	3004938	Symbol	STREAM_SOCKOP_SO_BROADCAST		3004520						
ANR	3004939	Symbol	sa		3004520						
ANR	3004940	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_port		3004520						
ANR	3004941	Symbol	SOCK_CONN_ERR		3004520						
ANR	3004942	Symbol	sockoptval		3004520						
ANR	3004943	Symbol	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3004520						
ANR	3004944	Symbol	num_addrs		3004520						
ANR	3004945	Symbol	bind		3004520						
ANR	3004946	Symbol	STREAM_SOCKOP_SO_REUSEPORT		3004520						
ANR	3004947	Symbol	* sa		3004520						
ANR	3004948	Symbol	host		3004520						
ANR	3004949	Symbol	psal		3004520						
ANR	3004950	Symbol	ipv6_val		3004520						
ANR	3004951	Symbol	sal		3004520						
ANR	3004952	Symbol	php_socket_errno		3004520						
ANR	3004953	Symbol	php_socket_error_str		3004520						
ANR	3004954	Symbol	NULL		3004520						
ANR	3004955	Symbol	err		3004520						
ANR	3004956	Symbol	SOCK_ERR		3004520						
ANR	3004957	Symbol	sockopts		3004520						
ANR	3004958	Symbol	& psal		3004520						
ANR	3004959	Symbol	socklen		3004520						
ANR	3004960	Symbol	SO_REUSEADDR		3004520						
ANR	3004961	Symbol	php_network_getaddresses		3004520						
ANR	3004962	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_family		3004520						
ANR	3004963	Symbol	n		3004520						
ANR	3004964	Symbol	SOL_SOCKET		3004520						
ANR	3004965	Symbol	error_string		3004520						
ANR	3004966	Symbol	sock		3004520						
ANR	3004967	Symbol	IPV6_V6ONLY		3004520						
ANR	3004968	Symbol	& sockoptval		3004520						
ANR	3004969	Symbol	port		3004520						
ANR	3004970	Symbol	IPPROTO_IPV6		3004520						
ANR	3004971	Symbol	SO_BROADCAST		3004520						
ANR	3004972	Symbol	error_code		3004520						
ANR	3004973	Symbol	socktype		3004520						
ANR	3004974	Symbol	socket		3004520						
ANR	3004975	Symbol	SO_REUSEPORT		3004520						
ANR	3004976	Symbol	( ( struct sockaddr_in6 * ) sa ) -> sin6_family		3004520						
ANR	3004977	Function	php_network_parse_network_address_with_port	521:0:13356:15289							
ANR	3004978	FunctionDef	"php_network_parse_network_address_with_port (const char * addr , zend_long addrlen , struct sockaddr * sa , socklen_t * sl)"		3004977	0					
ANR	3004979	CompoundStatement		522:0:13484:15289	3004977	0					
ANR	3004980	IdentifierDeclStatement	char * colon ;	523:1:13487:13498	3004977	0	True				
ANR	3004981	IdentifierDecl	* colon		3004977	0					
ANR	3004982	IdentifierDeclType	char *		3004977	0					
ANR	3004983	Identifier	colon		3004977	1					
ANR	3004984	IdentifierDeclStatement	char * tmp ;	524:1:13501:13510	3004977	1	True				
ANR	3004985	IdentifierDecl	* tmp		3004977	0					
ANR	3004986	IdentifierDeclType	char *		3004977	0					
ANR	3004987	Identifier	tmp		3004977	1					
ANR	3004988	IdentifierDeclStatement	int ret = FAILURE ;	525:1:13513:13530	3004977	2	True				
ANR	3004989	IdentifierDecl	ret = FAILURE		3004977	0					
ANR	3004990	IdentifierDeclType	int		3004977	0					
ANR	3004991	Identifier	ret		3004977	1					
ANR	3004992	AssignmentExpression	ret = FAILURE		3004977	2		=			
ANR	3004993	Identifier	FAILURE		3004977	0					
ANR	3004994	Identifier	FAILURE		3004977	1					
ANR	3004995	IdentifierDeclStatement	short port ;	526:1:13533:13543	3004977	3	True				
ANR	3004996	IdentifierDecl	port		3004977	0					
ANR	3004997	IdentifierDeclType	short		3004977	0					
ANR	3004998	Identifier	port		3004977	1					
ANR	3004999	IdentifierDeclStatement	struct sockaddr_in * in4 = ( struct sockaddr_in * ) sa ;	527:1:13546:13595	3004977	4	True				
ANR	3005000	IdentifierDecl	* in4 = ( struct sockaddr_in * ) sa		3004977	0					
ANR	3005001	IdentifierDeclType	struct sockaddr_in *		3004977	0					
ANR	3005002	Identifier	in4		3004977	1					
ANR	3005003	AssignmentExpression	* in4 = ( struct sockaddr_in * ) sa		3004977	2		=			
ANR	3005004	Identifier	in4		3004977	0					
ANR	3005005	CastExpression	( struct sockaddr_in * ) sa		3004977	1					
ANR	3005006	CastTarget	struct sockaddr_in *		3004977	0					
ANR	3005007	Identifier	sa		3004977	1					
ANR	3005008	IdentifierDeclStatement	struct sockaddr * * psal ;	528:1:13598:13620	3004977	5	True				
ANR	3005009	IdentifierDecl	* * psal		3004977	0					
ANR	3005010	IdentifierDeclType	struct sockaddr * *		3004977	0					
ANR	3005011	Identifier	psal		3004977	1					
ANR	3005012	IdentifierDeclStatement	int n ;	529:1:13623:13628	3004977	6	True				
ANR	3005013	IdentifierDecl	n		3004977	0					
ANR	3005014	IdentifierDeclType	int		3004977	0					
ANR	3005015	Identifier	n		3004977	1					
ANR	3005016	IdentifierDeclStatement	zend_string * errstr = NULL ;	530:1:13631:13657	3004977	7	True				
ANR	3005017	IdentifierDecl	* errstr = NULL		3004977	0					
ANR	3005018	IdentifierDeclType	zend_string *		3004977	0					
ANR	3005019	Identifier	errstr		3004977	1					
ANR	3005020	AssignmentExpression	* errstr = NULL		3004977	2		=			
ANR	3005021	Identifier	NULL		3004977	0					
ANR	3005022	Identifier	NULL		3004977	1					
ANR	3005023	IdentifierDeclStatement	struct sockaddr_in6 * in6 = ( struct sockaddr_in6 * ) sa ;	532:1:13674:13725	3004977	8	True				
ANR	3005024	IdentifierDecl	* in6 = ( struct sockaddr_in6 * ) sa		3004977	0					
ANR	3005025	IdentifierDeclType	struct sockaddr_in6 *		3004977	0					
ANR	3005026	Identifier	in6		3004977	1					
ANR	3005027	AssignmentExpression	* in6 = ( struct sockaddr_in6 * ) sa		3004977	2		=			
ANR	3005028	Identifier	in6		3004977	0					
ANR	3005029	CastExpression	( struct sockaddr_in6 * ) sa		3004977	1					
ANR	3005030	CastTarget	struct sockaddr_in6 *		3004977	0					
ANR	3005031	Identifier	sa		3004977	1					
ANR	3005032	IfStatement	if ( * addr == '[' )		3004977	9					
ANR	3005033	Condition	* addr == '['	535:5:13740:13751	3004977	0	True				
ANR	3005034	EqualityExpression	* addr == '['		3004977	0		==			
ANR	3005035	UnaryOperationExpression	* addr		3004977	0					
ANR	3005036	UnaryOperator	*		3004977	0					
ANR	3005037	Identifier	addr		3004977	1					
ANR	3005038	PrimaryExpression	'['		3004977	1					
ANR	3005039	CompoundStatement		14:19:269:269	3004977	1					
ANR	3005040	ExpressionStatement	"colon = memchr ( addr + 1 , ']' , addrlen - 1 )"	536:2:13758:13798	3004977	0	True				
ANR	3005041	AssignmentExpression	"colon = memchr ( addr + 1 , ']' , addrlen - 1 )"		3004977	0		=			
ANR	3005042	Identifier	colon		3004977	0					
ANR	3005043	CallExpression	"memchr ( addr + 1 , ']' , addrlen - 1 )"		3004977	1					
ANR	3005044	Callee	memchr		3004977	0					
ANR	3005045	Identifier	memchr		3004977	0					
ANR	3005046	ArgumentList	addr + 1		3004977	1					
ANR	3005047	Argument	addr + 1		3004977	0					
ANR	3005048	AdditiveExpression	addr + 1		3004977	0		+			
ANR	3005049	Identifier	addr		3004977	0					
ANR	3005050	PrimaryExpression	1		3004977	1					
ANR	3005051	Argument	']'		3004977	1					
ANR	3005052	PrimaryExpression	']'		3004977	0					
ANR	3005053	Argument	addrlen - 1		3004977	2					
ANR	3005054	AdditiveExpression	addrlen - 1		3004977	0		-			
ANR	3005055	Identifier	addrlen		3004977	0					
ANR	3005056	PrimaryExpression	1		3004977	1					
ANR	3005057	IfStatement	if ( ! colon || colon [ 1 ] != ':' )		3004977	1					
ANR	3005058	Condition	! colon || colon [ 1 ] != ':'	537:6:13806:13830	3004977	0	True				
ANR	3005059	OrExpression	! colon || colon [ 1 ] != ':'		3004977	0		||			
ANR	3005060	UnaryOperationExpression	! colon		3004977	0					
ANR	3005061	UnaryOperator	!		3004977	0					
ANR	3005062	Identifier	colon		3004977	1					
ANR	3005063	EqualityExpression	colon [ 1 ] != ':'		3004977	1		!=			
ANR	3005064	ArrayIndexing	colon [ 1 ]		3004977	0					
ANR	3005065	Identifier	colon		3004977	0					
ANR	3005066	PrimaryExpression	1		3004977	1					
ANR	3005067	PrimaryExpression	':'		3004977	1					
ANR	3005068	CompoundStatement		16:33:348:348	3004977	1					
ANR	3005069	ReturnStatement	return FAILURE ;	538:3:13838:13852	3004977	0	True				
ANR	3005070	Identifier	FAILURE		3004977	0					
ANR	3005071	ExpressionStatement	port = atoi ( colon + 2 )	540:2:13860:13882	3004977	2	True				
ANR	3005072	AssignmentExpression	port = atoi ( colon + 2 )		3004977	0		=			
ANR	3005073	Identifier	port		3004977	0					
ANR	3005074	CallExpression	atoi ( colon + 2 )		3004977	1					
ANR	3005075	Callee	atoi		3004977	0					
ANR	3005076	Identifier	atoi		3004977	0					
ANR	3005077	ArgumentList	colon + 2		3004977	1					
ANR	3005078	Argument	colon + 2		3004977	0					
ANR	3005079	AdditiveExpression	colon + 2		3004977	0		+			
ANR	3005080	Identifier	colon		3004977	0					
ANR	3005081	PrimaryExpression	2		3004977	1					
ANR	3005082	ExpressionStatement	addr ++	541:2:13886:13892	3004977	3	True				
ANR	3005083	PostIncDecOperationExpression	addr ++		3004977	0					
ANR	3005084	Identifier	addr		3004977	0					
ANR	3005085	IncDec	++		3004977	1					
ANR	3005086	ElseStatement	else		3004977	0					
ANR	3005087	CompoundStatement		21:8:417:417	3004977	0					
ANR	3005088	ExpressionStatement	"colon = memchr ( addr , ':' , addrlen )"	543:2:13906:13940	3004977	0	True				
ANR	3005089	AssignmentExpression	"colon = memchr ( addr , ':' , addrlen )"		3004977	0		=			
ANR	3005090	Identifier	colon		3004977	0					
ANR	3005091	CallExpression	"memchr ( addr , ':' , addrlen )"		3004977	1					
ANR	3005092	Callee	memchr		3004977	0					
ANR	3005093	Identifier	memchr		3004977	0					
ANR	3005094	ArgumentList	addr		3004977	1					
ANR	3005095	Argument	addr		3004977	0					
ANR	3005096	Identifier	addr		3004977	0					
ANR	3005097	Argument	':'		3004977	1					
ANR	3005098	PrimaryExpression	':'		3004977	0					
ANR	3005099	Argument	addrlen		3004977	2					
ANR	3005100	Identifier	addrlen		3004977	0					
ANR	3005101	IfStatement	if ( ! colon )		3004977	1					
ANR	3005102	Condition	! colon	544:6:13948:13953	3004977	0	True				
ANR	3005103	UnaryOperationExpression	! colon		3004977	0					
ANR	3005104	UnaryOperator	!		3004977	0					
ANR	3005105	Identifier	colon		3004977	1					
ANR	3005106	CompoundStatement		23:14:471:471	3004977	1					
ANR	3005107	ReturnStatement	return FAILURE ;	545:3:13961:13975	3004977	0	True				
ANR	3005108	Identifier	FAILURE		3004977	0					
ANR	3005109	ExpressionStatement	port = atoi ( colon + 1 )	547:2:13983:14005	3004977	2	True				
ANR	3005110	AssignmentExpression	port = atoi ( colon + 1 )		3004977	0		=			
ANR	3005111	Identifier	port		3004977	0					
ANR	3005112	CallExpression	atoi ( colon + 1 )		3004977	1					
ANR	3005113	Callee	atoi		3004977	0					
ANR	3005114	Identifier	atoi		3004977	0					
ANR	3005115	ArgumentList	colon + 1		3004977	1					
ANR	3005116	Argument	colon + 1		3004977	0					
ANR	3005117	AdditiveExpression	colon + 1		3004977	0		+			
ANR	3005118	Identifier	colon		3004977	0					
ANR	3005119	PrimaryExpression	1		3004977	1					
ANR	3005120	ExpressionStatement	"tmp = estrndup ( addr , colon - addr )"	550:1:14012:14046	3004977	10	True				
ANR	3005121	AssignmentExpression	"tmp = estrndup ( addr , colon - addr )"		3004977	0		=			
ANR	3005122	Identifier	tmp		3004977	0					
ANR	3005123	CallExpression	"estrndup ( addr , colon - addr )"		3004977	1					
ANR	3005124	Callee	estrndup		3004977	0					
ANR	3005125	Identifier	estrndup		3004977	0					
ANR	3005126	ArgumentList	addr		3004977	1					
ANR	3005127	Argument	addr		3004977	0					
ANR	3005128	Identifier	addr		3004977	0					
ANR	3005129	Argument	colon - addr		3004977	1					
ANR	3005130	AdditiveExpression	colon - addr		3004977	0		-			
ANR	3005131	Identifier	colon		3004977	0					
ANR	3005132	Identifier	addr		3004977	1					
ANR	3005133	IfStatement	"if ( inet_pton ( AF_INET6 , tmp , & in6 -> sin6_addr ) > 0 )"		3004977	11					
ANR	3005134	Condition	"inet_pton ( AF_INET6 , tmp , & in6 -> sin6_addr ) > 0"	555:5:14151:14195	3004977	0	True				
ANR	3005135	RelationalExpression	"inet_pton ( AF_INET6 , tmp , & in6 -> sin6_addr ) > 0"		3004977	0		>			
ANR	3005136	CallExpression	"inet_pton ( AF_INET6 , tmp , & in6 -> sin6_addr )"		3004977	0					
ANR	3005137	Callee	inet_pton		3004977	0					
ANR	3005138	Identifier	inet_pton		3004977	0					
ANR	3005139	ArgumentList	AF_INET6		3004977	1					
ANR	3005140	Argument	AF_INET6		3004977	0					
ANR	3005141	Identifier	AF_INET6		3004977	0					
ANR	3005142	Argument	tmp		3004977	1					
ANR	3005143	Identifier	tmp		3004977	0					
ANR	3005144	Argument	& in6 -> sin6_addr		3004977	2					
ANR	3005145	UnaryOperationExpression	& in6 -> sin6_addr		3004977	0					
ANR	3005146	UnaryOperator	&		3004977	0					
ANR	3005147	PtrMemberAccess	in6 -> sin6_addr		3004977	1					
ANR	3005148	Identifier	in6		3004977	0					
ANR	3005149	Identifier	sin6_addr		3004977	1					
ANR	3005150	PrimaryExpression	0		3004977	1					
ANR	3005151	CompoundStatement		34:52:713:713	3004977	1					
ANR	3005152	ExpressionStatement	in6 -> sin6_port = htons ( port )	556:2:14202:14230	3004977	0	True				
ANR	3005153	AssignmentExpression	in6 -> sin6_port = htons ( port )		3004977	0		=			
ANR	3005154	PtrMemberAccess	in6 -> sin6_port		3004977	0					
ANR	3005155	Identifier	in6		3004977	0					
ANR	3005156	Identifier	sin6_port		3004977	1					
ANR	3005157	CallExpression	htons ( port )		3004977	1					
ANR	3005158	Callee	htons		3004977	0					
ANR	3005159	Identifier	htons		3004977	0					
ANR	3005160	ArgumentList	port		3004977	1					
ANR	3005161	Argument	port		3004977	0					
ANR	3005162	Identifier	port		3004977	0					
ANR	3005163	ExpressionStatement	in6 -> sin6_family = AF_INET6	557:2:14234:14261	3004977	1	True				
ANR	3005164	AssignmentExpression	in6 -> sin6_family = AF_INET6		3004977	0		=			
ANR	3005165	PtrMemberAccess	in6 -> sin6_family		3004977	0					
ANR	3005166	Identifier	in6		3004977	0					
ANR	3005167	Identifier	sin6_family		3004977	1					
ANR	3005168	Identifier	AF_INET6		3004977	1					
ANR	3005169	ExpressionStatement	* sl = sizeof ( struct sockaddr_in6 )	558:2:14265:14298	3004977	2	True				
ANR	3005170	AssignmentExpression	* sl = sizeof ( struct sockaddr_in6 )		3004977	0		=			
ANR	3005171	UnaryOperationExpression	* sl		3004977	0					
ANR	3005172	UnaryOperator	*		3004977	0					
ANR	3005173	Identifier	sl		3004977	1					
ANR	3005174	SizeofExpression	sizeof ( struct sockaddr_in6 )		3004977	1					
ANR	3005175	Sizeof	sizeof		3004977	0					
ANR	3005176	SizeofOperand	struct sockaddr_in6		3004977	1					
ANR	3005177	ExpressionStatement	ret = SUCCESS	559:2:14302:14315	3004977	3	True				
ANR	3005178	AssignmentExpression	ret = SUCCESS		3004977	0		=			
ANR	3005179	Identifier	ret		3004977	0					
ANR	3005180	Identifier	SUCCESS		3004977	1					
ANR	3005181	GotoStatement	goto out ;	560:2:14319:14327	3004977	4	True				
ANR	3005182	Identifier	out		3004977	0					
ANR	3005183	IfStatement	"if ( inet_aton ( tmp , & in4 -> sin_addr ) > 0 )"		3004977	12					
ANR	3005184	Condition	"inet_aton ( tmp , & in4 -> sin_addr ) > 0"	563:5:14344:14377	3004977	0	True				
ANR	3005185	RelationalExpression	"inet_aton ( tmp , & in4 -> sin_addr ) > 0"		3004977	0		>			
ANR	3005186	CallExpression	"inet_aton ( tmp , & in4 -> sin_addr )"		3004977	0					
ANR	3005187	Callee	inet_aton		3004977	0					
ANR	3005188	Identifier	inet_aton		3004977	0					
ANR	3005189	ArgumentList	tmp		3004977	1					
ANR	3005190	Argument	tmp		3004977	0					
ANR	3005191	Identifier	tmp		3004977	0					
ANR	3005192	Argument	& in4 -> sin_addr		3004977	1					
ANR	3005193	UnaryOperationExpression	& in4 -> sin_addr		3004977	0					
ANR	3005194	UnaryOperator	&		3004977	0					
ANR	3005195	PtrMemberAccess	in4 -> sin_addr		3004977	1					
ANR	3005196	Identifier	in4		3004977	0					
ANR	3005197	Identifier	sin_addr		3004977	1					
ANR	3005198	PrimaryExpression	0		3004977	1					
ANR	3005199	CompoundStatement		42:41:895:895	3004977	1					
ANR	3005200	ExpressionStatement	in4 -> sin_port = htons ( port )	564:2:14384:14411	3004977	0	True				
ANR	3005201	AssignmentExpression	in4 -> sin_port = htons ( port )		3004977	0		=			
ANR	3005202	PtrMemberAccess	in4 -> sin_port		3004977	0					
ANR	3005203	Identifier	in4		3004977	0					
ANR	3005204	Identifier	sin_port		3004977	1					
ANR	3005205	CallExpression	htons ( port )		3004977	1					
ANR	3005206	Callee	htons		3004977	0					
ANR	3005207	Identifier	htons		3004977	0					
ANR	3005208	ArgumentList	port		3004977	1					
ANR	3005209	Argument	port		3004977	0					
ANR	3005210	Identifier	port		3004977	0					
ANR	3005211	ExpressionStatement	in4 -> sin_family = AF_INET	565:2:14415:14440	3004977	1	True				
ANR	3005212	AssignmentExpression	in4 -> sin_family = AF_INET		3004977	0		=			
ANR	3005213	PtrMemberAccess	in4 -> sin_family		3004977	0					
ANR	3005214	Identifier	in4		3004977	0					
ANR	3005215	Identifier	sin_family		3004977	1					
ANR	3005216	Identifier	AF_INET		3004977	1					
ANR	3005217	ExpressionStatement	* sl = sizeof ( struct sockaddr_in )	566:2:14444:14476	3004977	2	True				
ANR	3005218	AssignmentExpression	* sl = sizeof ( struct sockaddr_in )		3004977	0		=			
ANR	3005219	UnaryOperationExpression	* sl		3004977	0					
ANR	3005220	UnaryOperator	*		3004977	0					
ANR	3005221	Identifier	sl		3004977	1					
ANR	3005222	SizeofExpression	sizeof ( struct sockaddr_in )		3004977	1					
ANR	3005223	Sizeof	sizeof		3004977	0					
ANR	3005224	SizeofOperand	struct sockaddr_in		3004977	1					
ANR	3005225	ExpressionStatement	ret = SUCCESS	567:2:14480:14493	3004977	3	True				
ANR	3005226	AssignmentExpression	ret = SUCCESS		3004977	0		=			
ANR	3005227	Identifier	ret		3004977	0					
ANR	3005228	Identifier	SUCCESS		3004977	1					
ANR	3005229	GotoStatement	goto out ;	568:2:14497:14505	3004977	4	True				
ANR	3005230	Identifier	out		3004977	0					
ANR	3005231	ExpressionStatement	"n = php_network_getaddresses ( tmp , SOCK_DGRAM , & psal , & errstr )"	572:1:14555:14616	3004977	13	True				
ANR	3005232	AssignmentExpression	"n = php_network_getaddresses ( tmp , SOCK_DGRAM , & psal , & errstr )"		3004977	0		=			
ANR	3005233	Identifier	n		3004977	0					
ANR	3005234	CallExpression	"php_network_getaddresses ( tmp , SOCK_DGRAM , & psal , & errstr )"		3004977	1					
ANR	3005235	Callee	php_network_getaddresses		3004977	0					
ANR	3005236	Identifier	php_network_getaddresses		3004977	0					
ANR	3005237	ArgumentList	tmp		3004977	1					
ANR	3005238	Argument	tmp		3004977	0					
ANR	3005239	Identifier	tmp		3004977	0					
ANR	3005240	Argument	SOCK_DGRAM		3004977	1					
ANR	3005241	Identifier	SOCK_DGRAM		3004977	0					
ANR	3005242	Argument	& psal		3004977	2					
ANR	3005243	UnaryOperationExpression	& psal		3004977	0					
ANR	3005244	UnaryOperator	&		3004977	0					
ANR	3005245	Identifier	psal		3004977	1					
ANR	3005246	Argument	& errstr		3004977	3					
ANR	3005247	UnaryOperationExpression	& errstr		3004977	0					
ANR	3005248	UnaryOperator	&		3004977	0					
ANR	3005249	Identifier	errstr		3004977	1					
ANR	3005250	IfStatement	if ( n == 0 )		3004977	14					
ANR	3005251	Condition	n == 0	574:5:14624:14629	3004977	0	True				
ANR	3005252	EqualityExpression	n == 0		3004977	0		==			
ANR	3005253	Identifier	n		3004977	0					
ANR	3005254	PrimaryExpression	0		3004977	1					
ANR	3005255	CompoundStatement		53:13:1147:1147	3004977	1					
ANR	3005256	IfStatement	if ( errstr )		3004977	0					
ANR	3005257	Condition	errstr	575:6:14640:14645	3004977	0	True				
ANR	3005258	Identifier	errstr		3004977	0					
ANR	3005259	CompoundStatement		54:14:1163:1163	3004977	1					
ANR	3005260	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Failed to resolve `%s': %s"" , tmp , ZSTR_VAL ( errstr ) )"	576:3:14653:14739	3004977	0	True				
ANR	3005261	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Failed to resolve `%s': %s"" , tmp , ZSTR_VAL ( errstr ) )"		3004977	0					
ANR	3005262	Callee	php_error_docref		3004977	0					
ANR	3005263	Identifier	php_error_docref		3004977	0					
ANR	3005264	ArgumentList	NULL		3004977	1					
ANR	3005265	Argument	NULL		3004977	0					
ANR	3005266	Identifier	NULL		3004977	0					
ANR	3005267	Argument	E_WARNING		3004977	1					
ANR	3005268	Identifier	E_WARNING		3004977	0					
ANR	3005269	Argument	"""Failed to resolve `%s': %s"""		3004977	2					
ANR	3005270	PrimaryExpression	"""Failed to resolve `%s': %s"""		3004977	0					
ANR	3005271	Argument	tmp		3004977	3					
ANR	3005272	Identifier	tmp		3004977	0					
ANR	3005273	Argument	ZSTR_VAL ( errstr )		3004977	4					
ANR	3005274	CallExpression	ZSTR_VAL ( errstr )		3004977	0					
ANR	3005275	Callee	ZSTR_VAL		3004977	0					
ANR	3005276	Identifier	ZSTR_VAL		3004977	0					
ANR	3005277	ArgumentList	errstr		3004977	1					
ANR	3005278	Argument	errstr		3004977	0					
ANR	3005279	Identifier	errstr		3004977	0					
ANR	3005280	ExpressionStatement	zend_string_release ( errstr )	577:3:14744:14771	3004977	1	True				
ANR	3005281	CallExpression	zend_string_release ( errstr )		3004977	0					
ANR	3005282	Callee	zend_string_release		3004977	0					
ANR	3005283	Identifier	zend_string_release		3004977	0					
ANR	3005284	ArgumentList	errstr		3004977	1					
ANR	3005285	Argument	errstr		3004977	0					
ANR	3005286	Identifier	errstr		3004977	0					
ANR	3005287	GotoStatement	goto out ;	579:2:14779:14787	3004977	1	True				
ANR	3005288	Identifier	out		3004977	0					
ANR	3005289	SwitchStatement	switch ( ( * psal ) -> sa_family )		3004977	15					
ANR	3005290	Condition	( * psal ) -> sa_family	583:9:14846:14863	3004977	0	True				
ANR	3005291	PtrMemberAccess	( * psal ) -> sa_family		3004977	0					
ANR	3005292	UnaryOperationExpression	* psal		3004977	0					
ANR	3005293	UnaryOperator	*		3004977	0					
ANR	3005294	Identifier	psal		3004977	1					
ANR	3005295	Identifier	sa_family		3004977	1					
ANR	3005296	CompoundStatement		62:29:1381:1381	3004977	1					
ANR	3005297	Label	case AF_INET6 :	585:2:14904:14917	3004977	0	True				
ANR	3005298	Identifier	AF_INET6		3004977	0					
ANR	3005299	ExpressionStatement	* in6 = * * ( struct sockaddr_in6 * * ) psal	586:3:14922:14958	3004977	1	True				
ANR	3005300	AssignmentExpression	* in6 = * * ( struct sockaddr_in6 * * ) psal		3004977	0		=			
ANR	3005301	UnaryOperationExpression	* in6		3004977	0					
ANR	3005302	UnaryOperator	*		3004977	0					
ANR	3005303	Identifier	in6		3004977	1					
ANR	3005304	UnaryOperationExpression	* * ( struct sockaddr_in6 * * ) psal		3004977	1					
ANR	3005305	UnaryOperator	*		3004977	0					
ANR	3005306	UnaryOperationExpression	* ( struct sockaddr_in6 * * ) psal		3004977	1					
ANR	3005307	UnaryOperator	*		3004977	0					
ANR	3005308	CastExpression	( struct sockaddr_in6 * * ) psal		3004977	1					
ANR	3005309	CastTarget	struct sockaddr_in6 * *		3004977	0					
ANR	3005310	Identifier	psal		3004977	1					
ANR	3005311	ExpressionStatement	in6 -> sin6_port = htons ( port )	587:3:14963:14991	3004977	2	True				
ANR	3005312	AssignmentExpression	in6 -> sin6_port = htons ( port )		3004977	0		=			
ANR	3005313	PtrMemberAccess	in6 -> sin6_port		3004977	0					
ANR	3005314	Identifier	in6		3004977	0					
ANR	3005315	Identifier	sin6_port		3004977	1					
ANR	3005316	CallExpression	htons ( port )		3004977	1					
ANR	3005317	Callee	htons		3004977	0					
ANR	3005318	Identifier	htons		3004977	0					
ANR	3005319	ArgumentList	port		3004977	1					
ANR	3005320	Argument	port		3004977	0					
ANR	3005321	Identifier	port		3004977	0					
ANR	3005322	ExpressionStatement	* sl = sizeof ( struct sockaddr_in6 )	588:3:14996:15029	3004977	3	True				
ANR	3005323	AssignmentExpression	* sl = sizeof ( struct sockaddr_in6 )		3004977	0		=			
ANR	3005324	UnaryOperationExpression	* sl		3004977	0					
ANR	3005325	UnaryOperator	*		3004977	0					
ANR	3005326	Identifier	sl		3004977	1					
ANR	3005327	SizeofExpression	sizeof ( struct sockaddr_in6 )		3004977	1					
ANR	3005328	Sizeof	sizeof		3004977	0					
ANR	3005329	SizeofOperand	struct sockaddr_in6		3004977	1					
ANR	3005330	ExpressionStatement	ret = SUCCESS	589:3:15034:15047	3004977	4	True				
ANR	3005331	AssignmentExpression	ret = SUCCESS		3004977	0		=			
ANR	3005332	Identifier	ret		3004977	0					
ANR	3005333	Identifier	SUCCESS		3004977	1					
ANR	3005334	BreakStatement	break ;	590:3:15052:15057	3004977	5	True				
ANR	3005335	Label	case AF_INET :	592:2:15068:15080	3004977	6	True				
ANR	3005336	Identifier	AF_INET		3004977	0					
ANR	3005337	ExpressionStatement	* in4 = * * ( struct sockaddr_in * * ) psal	593:3:15085:15120	3004977	7	True				
ANR	3005338	AssignmentExpression	* in4 = * * ( struct sockaddr_in * * ) psal		3004977	0		=			
ANR	3005339	UnaryOperationExpression	* in4		3004977	0					
ANR	3005340	UnaryOperator	*		3004977	0					
ANR	3005341	Identifier	in4		3004977	1					
ANR	3005342	UnaryOperationExpression	* * ( struct sockaddr_in * * ) psal		3004977	1					
ANR	3005343	UnaryOperator	*		3004977	0					
ANR	3005344	UnaryOperationExpression	* ( struct sockaddr_in * * ) psal		3004977	1					
ANR	3005345	UnaryOperator	*		3004977	0					
ANR	3005346	CastExpression	( struct sockaddr_in * * ) psal		3004977	1					
ANR	3005347	CastTarget	struct sockaddr_in * *		3004977	0					
ANR	3005348	Identifier	psal		3004977	1					
ANR	3005349	ExpressionStatement	in4 -> sin_port = htons ( port )	594:3:15125:15152	3004977	8	True				
ANR	3005350	AssignmentExpression	in4 -> sin_port = htons ( port )		3004977	0		=			
ANR	3005351	PtrMemberAccess	in4 -> sin_port		3004977	0					
ANR	3005352	Identifier	in4		3004977	0					
ANR	3005353	Identifier	sin_port		3004977	1					
ANR	3005354	CallExpression	htons ( port )		3004977	1					
ANR	3005355	Callee	htons		3004977	0					
ANR	3005356	Identifier	htons		3004977	0					
ANR	3005357	ArgumentList	port		3004977	1					
ANR	3005358	Argument	port		3004977	0					
ANR	3005359	Identifier	port		3004977	0					
ANR	3005360	ExpressionStatement	* sl = sizeof ( struct sockaddr_in )	595:3:15157:15189	3004977	9	True				
ANR	3005361	AssignmentExpression	* sl = sizeof ( struct sockaddr_in )		3004977	0		=			
ANR	3005362	UnaryOperationExpression	* sl		3004977	0					
ANR	3005363	UnaryOperator	*		3004977	0					
ANR	3005364	Identifier	sl		3004977	1					
ANR	3005365	SizeofExpression	sizeof ( struct sockaddr_in )		3004977	1					
ANR	3005366	Sizeof	sizeof		3004977	0					
ANR	3005367	SizeofOperand	struct sockaddr_in		3004977	1					
ANR	3005368	ExpressionStatement	ret = SUCCESS	596:3:15194:15207	3004977	10	True				
ANR	3005369	AssignmentExpression	ret = SUCCESS		3004977	0		=			
ANR	3005370	Identifier	ret		3004977	0					
ANR	3005371	Identifier	SUCCESS		3004977	1					
ANR	3005372	BreakStatement	break ;	597:3:15212:15217	3004977	11	True				
ANR	3005373	ExpressionStatement	php_network_freeaddresses ( psal )	600:1:15224:15255	3004977	16	True				
ANR	3005374	CallExpression	php_network_freeaddresses ( psal )		3004977	0					
ANR	3005375	Callee	php_network_freeaddresses		3004977	0					
ANR	3005376	Identifier	php_network_freeaddresses		3004977	0					
ANR	3005377	ArgumentList	psal		3004977	1					
ANR	3005378	Argument	psal		3004977	0					
ANR	3005379	Identifier	psal		3004977	0					
ANR	3005380	Label	out :	602:0:15258:15261	3004977	17	True				
ANR	3005381	Identifier	out		3004977	0					
ANR	3005382	ExpressionStatement	efree ( tmp )	603:1:15264:15274	3004977	18	True				
ANR	3005383	CallExpression	efree ( tmp )		3004977	0					
ANR	3005384	Callee	efree		3004977	0					
ANR	3005385	Identifier	efree		3004977	0					
ANR	3005386	ArgumentList	tmp		3004977	1					
ANR	3005387	Argument	tmp		3004977	0					
ANR	3005388	Identifier	tmp		3004977	0					
ANR	3005389	ReturnStatement	return ret ;	604:1:15277:15287	3004977	19	True				
ANR	3005390	Identifier	ret		3004977	0					
ANR	3005391	ReturnType	PHPAPI int		3004977	1					
ANR	3005392	Identifier	php_network_parse_network_address_with_port		3004977	2					
ANR	3005393	ParameterList	"const char * addr , zend_long addrlen , struct sockaddr * sa , socklen_t * sl"		3004977	3					
ANR	3005394	Parameter	const char * addr	521:55:13411:13426	3004977	0	True				
ANR	3005395	ParameterType	const char *		3004977	0					
ANR	3005396	Identifier	addr		3004977	1					
ANR	3005397	Parameter	zend_long addrlen	521:73:13429:13445	3004977	1	True				
ANR	3005398	ParameterType	zend_long		3004977	0					
ANR	3005399	Identifier	addrlen		3004977	1					
ANR	3005400	Parameter	struct sockaddr * sa	521:92:13448:13466	3004977	2	True				
ANR	3005401	ParameterType	struct sockaddr *		3004977	0					
ANR	3005402	Identifier	sa		3004977	1					
ANR	3005403	Parameter	socklen_t * sl	521:113:13469:13481	3004977	3	True				
ANR	3005404	ParameterType	socklen_t *		3004977	0					
ANR	3005405	Identifier	sl		3004977	1					
ANR	3005406	CFGEntryNode	ENTRY		3004977		True				
ANR	3005407	CFGExitNode	EXIT		3004977		True				
ANR	3005408	Symbol	* * psal		3004977						
ANR	3005409	Symbol	& in6 -> sin6_addr		3004977						
ANR	3005410	Symbol	* ( struct sockaddr_in * * ) psal		3004977						
ANR	3005411	Symbol	htons		3004977						
ANR	3005412	Symbol	in4 -> sin_port		3004977						
ANR	3005413	Symbol	* psal		3004977						
ANR	3005414	Symbol	* * ( struct sockaddr_in * * ) psal		3004977						
ANR	3005415	Symbol	sa		3004977						
ANR	3005416	Symbol	in6 -> sin6_port		3004977						
ANR	3005417	Symbol	E_WARNING		3004977						
ANR	3005418	Symbol	& in4 -> sin_addr		3004977						
ANR	3005419	Symbol	estrndup		3004977						
ANR	3005420	Symbol	addrlen		3004977						
ANR	3005421	Symbol	tmp		3004977						
ANR	3005422	Symbol	sl		3004977						
ANR	3005423	Symbol	* * ( struct sockaddr_in6 * * ) psal		3004977						
ANR	3005424	Symbol	psal		3004977						
ANR	3005425	Symbol	( * psal ) -> sa_family		3004977						
ANR	3005426	Symbol	addr		3004977						
ANR	3005427	Symbol	* sl		3004977						
ANR	3005428	Symbol	inet_aton		3004977						
ANR	3005429	Symbol	ret		3004977						
ANR	3005430	Symbol	atoi		3004977						
ANR	3005431	Symbol	NULL		3004977						
ANR	3005432	Symbol	SUCCESS		3004977						
ANR	3005433	Symbol	* in6		3004977						
ANR	3005434	Symbol	* in4		3004977						
ANR	3005435	Symbol	inet_pton		3004977						
ANR	3005436	Symbol	& psal		3004977						
ANR	3005437	Symbol	in4 -> sin_family		3004977						
ANR	3005438	Symbol	AF_INET		3004977						
ANR	3005439	Symbol	php_network_getaddresses		3004977						
ANR	3005440	Symbol	SOCK_DGRAM		3004977						
ANR	3005441	Symbol	FAILURE		3004977						
ANR	3005442	Symbol	in4		3004977						
ANR	3005443	Symbol	n		3004977						
ANR	3005444	Symbol	* colon		3004977						
ANR	3005445	Symbol	AF_INET6		3004977						
ANR	3005446	Symbol	& errstr		3004977						
ANR	3005447	Symbol	ZSTR_VAL		3004977						
ANR	3005448	Symbol	* ( struct sockaddr_in6 * * ) psal		3004977						
ANR	3005449	Symbol	in6		3004977						
ANR	3005450	Symbol	port		3004977						
ANR	3005451	Symbol	colon		3004977						
ANR	3005452	Symbol	in6 -> sin6_family		3004977						
ANR	3005453	Symbol	errstr		3004977						
ANR	3005454	Symbol	memchr		3004977						
ANR	3005455	Symbol	* addr		3004977						
ANR	3005456	Function	php_network_populate_name_from_sockaddr	608:0:15293:16745							
ANR	3005457	FunctionDef	"php_network_populate_name_from_sockaddr (struct sockaddr * sa , socklen_t sl , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen)"		3005456	0					
ANR	3005458	CompoundStatement		617:0:15537:16745	3005456	0					
ANR	3005459	IfStatement	if ( addr )		3005456	0					
ANR	3005460	Condition	addr	618:5:15544:15547	3005456	0	True				
ANR	3005461	Identifier	addr		3005456	0					
ANR	3005462	CompoundStatement		2:11:12:12	3005456	1					
ANR	3005463	ExpressionStatement	* addr = emalloc ( sl )	619:2:15554:15573	3005456	0	True				
ANR	3005464	AssignmentExpression	* addr = emalloc ( sl )		3005456	0		=			
ANR	3005465	UnaryOperationExpression	* addr		3005456	0					
ANR	3005466	UnaryOperator	*		3005456	0					
ANR	3005467	Identifier	addr		3005456	1					
ANR	3005468	CallExpression	emalloc ( sl )		3005456	1					
ANR	3005469	Callee	emalloc		3005456	0					
ANR	3005470	Identifier	emalloc		3005456	0					
ANR	3005471	ArgumentList	sl		3005456	1					
ANR	3005472	Argument	sl		3005456	0					
ANR	3005473	Identifier	sl		3005456	0					
ANR	3005474	ExpressionStatement	"memcpy ( * addr , sa , sl )"	620:2:15577:15598	3005456	1	True				
ANR	3005475	CallExpression	"memcpy ( * addr , sa , sl )"		3005456	0					
ANR	3005476	Callee	memcpy		3005456	0					
ANR	3005477	Identifier	memcpy		3005456	0					
ANR	3005478	ArgumentList	* addr		3005456	1					
ANR	3005479	Argument	* addr		3005456	0					
ANR	3005480	UnaryOperationExpression	* addr		3005456	0					
ANR	3005481	UnaryOperator	*		3005456	0					
ANR	3005482	Identifier	addr		3005456	1					
ANR	3005483	Argument	sa		3005456	1					
ANR	3005484	Identifier	sa		3005456	0					
ANR	3005485	Argument	sl		3005456	2					
ANR	3005486	Identifier	sl		3005456	0					
ANR	3005487	ExpressionStatement	* addrlen = sl	621:2:15602:15615	3005456	2	True				
ANR	3005488	AssignmentExpression	* addrlen = sl		3005456	0		=			
ANR	3005489	UnaryOperationExpression	* addrlen		3005456	0					
ANR	3005490	UnaryOperator	*		3005456	0					
ANR	3005491	Identifier	addrlen		3005456	1					
ANR	3005492	Identifier	sl		3005456	1					
ANR	3005493	IfStatement	if ( textaddr )		3005456	1					
ANR	3005494	Condition	textaddr	624:5:15626:15633	3005456	0	True				
ANR	3005495	Identifier	textaddr		3005456	0					
ANR	3005496	CompoundStatement		12:2:159:175	3005456	1					
ANR	3005497	IdentifierDeclStatement	char abuf [ 256 ] ;	626:2:15672:15686	3005456	0	True				
ANR	3005498	IdentifierDecl	abuf [ 256 ]		3005456	0					
ANR	3005499	IdentifierDeclType	char [ 256 ]		3005456	0					
ANR	3005500	Identifier	abuf		3005456	1					
ANR	3005501	PrimaryExpression	256		3005456	2					
ANR	3005502	IdentifierDeclStatement	char * buf = NULL ;	628:2:15697:15713	3005456	1	True				
ANR	3005503	IdentifierDecl	* buf = NULL		3005456	0					
ANR	3005504	IdentifierDeclType	char *		3005456	0					
ANR	3005505	Identifier	buf		3005456	1					
ANR	3005506	AssignmentExpression	* buf = NULL		3005456	2		=			
ANR	3005507	Identifier	NULL		3005456	0					
ANR	3005508	Identifier	NULL		3005456	1					
ANR	3005509	SwitchStatement	switch ( sa -> sa_family )		3005456	2					
ANR	3005510	Condition	sa -> sa_family	630:10:15726:15738	3005456	0	True				
ANR	3005511	PtrMemberAccess	sa -> sa_family		3005456	0					
ANR	3005512	Identifier	sa		3005456	0					
ANR	3005513	Identifier	sa_family		3005456	1					
ANR	3005514	CompoundStatement		14:25:203:203	3005456	1					
ANR	3005515	Label	case AF_INET :	631:3:15746:15758	3005456	0	True				
ANR	3005516	Identifier	AF_INET		3005456	0					
ANR	3005517	ExpressionStatement	buf = inet_ntoa ( ( ( struct sockaddr_in * ) sa ) -> sin_addr )	633:4:15837:15889	3005456	1	True				
ANR	3005518	AssignmentExpression	buf = inet_ntoa ( ( ( struct sockaddr_in * ) sa ) -> sin_addr )		3005456	0		=			
ANR	3005519	Identifier	buf		3005456	0					
ANR	3005520	CallExpression	inet_ntoa ( ( ( struct sockaddr_in * ) sa ) -> sin_addr )		3005456	1					
ANR	3005521	Callee	inet_ntoa		3005456	0					
ANR	3005522	Identifier	inet_ntoa		3005456	0					
ANR	3005523	ArgumentList	( ( struct sockaddr_in * ) sa ) -> sin_addr		3005456	1					
ANR	3005524	Argument	( ( struct sockaddr_in * ) sa ) -> sin_addr		3005456	0					
ANR	3005525	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_addr		3005456	0					
ANR	3005526	CastExpression	( struct sockaddr_in * ) sa		3005456	0					
ANR	3005527	CastTarget	struct sockaddr_in *		3005456	0					
ANR	3005528	Identifier	sa		3005456	1					
ANR	3005529	Identifier	sin_addr		3005456	1					
ANR	3005530	IfStatement	if ( buf )		3005456	2					
ANR	3005531	Condition	buf	634:8:15899:15901	3005456	0	True				
ANR	3005532	Identifier	buf		3005456	0					
ANR	3005533	CompoundStatement		18:13:366:366	3005456	1					
ANR	3005534	ExpressionStatement	"* textaddr = strpprintf ( 0 , ""%s:%d"" , buf , ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port ) )"	635:5:15911:16000	3005456	0	True				
ANR	3005535	AssignmentExpression	"* textaddr = strpprintf ( 0 , ""%s:%d"" , buf , ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port ) )"		3005456	0		=			
ANR	3005536	UnaryOperationExpression	* textaddr		3005456	0					
ANR	3005537	UnaryOperator	*		3005456	0					
ANR	3005538	Identifier	textaddr		3005456	1					
ANR	3005539	CallExpression	"strpprintf ( 0 , ""%s:%d"" , buf , ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port ) )"		3005456	1					
ANR	3005540	Callee	strpprintf		3005456	0					
ANR	3005541	Identifier	strpprintf		3005456	0					
ANR	3005542	ArgumentList	0		3005456	1					
ANR	3005543	Argument	0		3005456	0					
ANR	3005544	PrimaryExpression	0		3005456	0					
ANR	3005545	Argument	"""%s:%d"""		3005456	1					
ANR	3005546	PrimaryExpression	"""%s:%d"""		3005456	0					
ANR	3005547	Argument	buf		3005456	2					
ANR	3005548	Identifier	buf		3005456	0					
ANR	3005549	Argument	ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		3005456	3					
ANR	3005550	CallExpression	ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		3005456	0					
ANR	3005551	Callee	ntohs		3005456	0					
ANR	3005552	Identifier	ntohs		3005456	0					
ANR	3005553	ArgumentList	( ( struct sockaddr_in * ) sa ) -> sin_port		3005456	1					
ANR	3005554	Argument	( ( struct sockaddr_in * ) sa ) -> sin_port		3005456	0					
ANR	3005555	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_port		3005456	0					
ANR	3005556	CastExpression	( struct sockaddr_in * ) sa		3005456	0					
ANR	3005557	CastTarget	struct sockaddr_in *		3005456	0					
ANR	3005558	Identifier	sa		3005456	1					
ANR	3005559	Identifier	sin_port		3005456	1					
ANR	3005560	BreakStatement	break ;	639:4:16013:16018	3005456	3	True				
ANR	3005561	Label	case AF_INET6 :	642:3:16056:16069	3005456	4	True				
ANR	3005562	Identifier	AF_INET6		3005456	0					
ANR	3005563	ExpressionStatement	"buf = ( char * ) inet_ntop ( sa -> sa_family , & ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr , ( char * ) & abuf , sizeof ( abuf ) )"	643:4:16075:16181	3005456	5	True				
ANR	3005564	AssignmentExpression	"buf = ( char * ) inet_ntop ( sa -> sa_family , & ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr , ( char * ) & abuf , sizeof ( abuf ) )"		3005456	0		=			
ANR	3005565	Identifier	buf		3005456	0					
ANR	3005566	CastExpression	"( char * ) inet_ntop ( sa -> sa_family , & ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr , ( char * ) & abuf , sizeof ( abuf ) )"		3005456	1					
ANR	3005567	CastTarget	char *		3005456	0					
ANR	3005568	CallExpression	"inet_ntop ( sa -> sa_family , & ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr , ( char * ) & abuf , sizeof ( abuf ) )"		3005456	1					
ANR	3005569	Callee	inet_ntop		3005456	0					
ANR	3005570	Identifier	inet_ntop		3005456	0					
ANR	3005571	ArgumentList	sa -> sa_family		3005456	1					
ANR	3005572	Argument	sa -> sa_family		3005456	0					
ANR	3005573	PtrMemberAccess	sa -> sa_family		3005456	0					
ANR	3005574	Identifier	sa		3005456	0					
ANR	3005575	Identifier	sa_family		3005456	1					
ANR	3005576	Argument	& ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		3005456	1					
ANR	3005577	UnaryOperationExpression	& ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		3005456	0					
ANR	3005578	UnaryOperator	&		3005456	0					
ANR	3005579	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		3005456	1					
ANR	3005580	CastExpression	( struct sockaddr_in6 * ) sa		3005456	0					
ANR	3005581	CastTarget	struct sockaddr_in6 *		3005456	0					
ANR	3005582	Identifier	sa		3005456	1					
ANR	3005583	Identifier	sin6_addr		3005456	1					
ANR	3005584	Argument	( char * ) & abuf		3005456	2					
ANR	3005585	CastExpression	( char * ) & abuf		3005456	0					
ANR	3005586	CastTarget	char *		3005456	0					
ANR	3005587	UnaryOperationExpression	& abuf		3005456	1					
ANR	3005588	UnaryOperator	&		3005456	0					
ANR	3005589	Identifier	abuf		3005456	1					
ANR	3005590	Argument	sizeof ( abuf )		3005456	3					
ANR	3005591	SizeofExpression	sizeof ( abuf )		3005456	0					
ANR	3005592	Sizeof	sizeof		3005456	0					
ANR	3005593	SizeofOperand	abuf		3005456	1					
ANR	3005594	IfStatement	if ( buf )		3005456	6					
ANR	3005595	Condition	buf	644:8:16191:16193	3005456	0	True				
ANR	3005596	Identifier	buf		3005456	0					
ANR	3005597	CompoundStatement		28:13:658:658	3005456	1					
ANR	3005598	ExpressionStatement	"* textaddr = strpprintf ( 0 , ""%s:%d"" , buf , ntohs ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_port ) )"	645:5:16203:16294	3005456	0	True				
ANR	3005599	AssignmentExpression	"* textaddr = strpprintf ( 0 , ""%s:%d"" , buf , ntohs ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_port ) )"		3005456	0		=			
ANR	3005600	UnaryOperationExpression	* textaddr		3005456	0					
ANR	3005601	UnaryOperator	*		3005456	0					
ANR	3005602	Identifier	textaddr		3005456	1					
ANR	3005603	CallExpression	"strpprintf ( 0 , ""%s:%d"" , buf , ntohs ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_port ) )"		3005456	1					
ANR	3005604	Callee	strpprintf		3005456	0					
ANR	3005605	Identifier	strpprintf		3005456	0					
ANR	3005606	ArgumentList	0		3005456	1					
ANR	3005607	Argument	0		3005456	0					
ANR	3005608	PrimaryExpression	0		3005456	0					
ANR	3005609	Argument	"""%s:%d"""		3005456	1					
ANR	3005610	PrimaryExpression	"""%s:%d"""		3005456	0					
ANR	3005611	Argument	buf		3005456	2					
ANR	3005612	Identifier	buf		3005456	0					
ANR	3005613	Argument	ntohs ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_port )		3005456	3					
ANR	3005614	CallExpression	ntohs ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_port )		3005456	0					
ANR	3005615	Callee	ntohs		3005456	0					
ANR	3005616	Identifier	ntohs		3005456	0					
ANR	3005617	ArgumentList	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3005456	1					
ANR	3005618	Argument	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3005456	0					
ANR	3005619	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3005456	0					
ANR	3005620	CastExpression	( struct sockaddr_in6 * ) sa		3005456	0					
ANR	3005621	CastTarget	struct sockaddr_in6 *		3005456	0					
ANR	3005622	Identifier	sa		3005456	1					
ANR	3005623	Identifier	sin6_port		3005456	1					
ANR	3005624	BreakStatement	break ;	649:4:16307:16312	3005456	7	True				
ANR	3005625	Label	case AF_UNIX :	652:3:16339:16351	3005456	8	True				
ANR	3005626	Identifier	AF_UNIX		3005456	0					
ANR	3005627	CompoundStatement		38:5:826:874	3005456	9					
ANR	3005628	IdentifierDeclStatement	struct sockaddr_un * ua = ( struct sockaddr_un * ) sa ;	654:5:16364:16412	3005456	0	True				
ANR	3005629	IdentifierDecl	* ua = ( struct sockaddr_un * ) sa		3005456	0					
ANR	3005630	IdentifierDeclType	struct sockaddr_un *		3005456	0					
ANR	3005631	Identifier	ua		3005456	1					
ANR	3005632	AssignmentExpression	* ua = ( struct sockaddr_un * ) sa		3005456	2		=			
ANR	3005633	Identifier	ua		3005456	0					
ANR	3005634	CastExpression	( struct sockaddr_un * ) sa		3005456	1					
ANR	3005635	CastTarget	struct sockaddr_un *		3005456	0					
ANR	3005636	Identifier	sa		3005456	1					
ANR	3005637	IfStatement	if ( ua -> sun_path [ 0 ] == '\\0' )		3005456	1					
ANR	3005638	Condition	ua -> sun_path [ 0 ] == '\\0'	656:9:16424:16446	3005456	0	True				
ANR	3005639	EqualityExpression	ua -> sun_path [ 0 ] == '\\0'		3005456	0		==			
ANR	3005640	ArrayIndexing	ua -> sun_path [ 0 ]		3005456	0					
ANR	3005641	PtrMemberAccess	ua -> sun_path		3005456	0					
ANR	3005642	Identifier	ua		3005456	0					
ANR	3005643	Identifier	sun_path		3005456	1					
ANR	3005644	PrimaryExpression	0		3005456	1					
ANR	3005645	PrimaryExpression	'\\0'		3005456	1					
ANR	3005646	CompoundStatement		42:6:945:983	3005456	1					
ANR	3005647	IdentifierDeclStatement	int len = strlen ( ua -> sun_path + 1 ) + 1 ;	658:6:16483:16521	3005456	0	True				
ANR	3005648	IdentifierDecl	len = strlen ( ua -> sun_path + 1 ) + 1		3005456	0					
ANR	3005649	IdentifierDeclType	int		3005456	0					
ANR	3005650	Identifier	len		3005456	1					
ANR	3005651	AssignmentExpression	len = strlen ( ua -> sun_path + 1 ) + 1		3005456	2		=			
ANR	3005652	Identifier	len		3005456	0					
ANR	3005653	AdditiveExpression	strlen ( ua -> sun_path + 1 ) + 1		3005456	1		+			
ANR	3005654	CallExpression	strlen ( ua -> sun_path + 1 )		3005456	0					
ANR	3005655	Callee	strlen		3005456	0					
ANR	3005656	Identifier	strlen		3005456	0					
ANR	3005657	ArgumentList	ua -> sun_path + 1		3005456	1					
ANR	3005658	Argument	ua -> sun_path + 1		3005456	0					
ANR	3005659	AdditiveExpression	ua -> sun_path + 1		3005456	0		+			
ANR	3005660	PtrMemberAccess	ua -> sun_path		3005456	0					
ANR	3005661	Identifier	ua		3005456	0					
ANR	3005662	Identifier	sun_path		3005456	1					
ANR	3005663	PrimaryExpression	1		3005456	1					
ANR	3005664	PrimaryExpression	1		3005456	1					
ANR	3005665	ExpressionStatement	"* textaddr = zend_string_init ( ( char * ) ua -> sun_path , len , 0 )"	659:6:16529:16586	3005456	1	True				
ANR	3005666	AssignmentExpression	"* textaddr = zend_string_init ( ( char * ) ua -> sun_path , len , 0 )"		3005456	0		=			
ANR	3005667	UnaryOperationExpression	* textaddr		3005456	0					
ANR	3005668	UnaryOperator	*		3005456	0					
ANR	3005669	Identifier	textaddr		3005456	1					
ANR	3005670	CallExpression	"zend_string_init ( ( char * ) ua -> sun_path , len , 0 )"		3005456	1					
ANR	3005671	Callee	zend_string_init		3005456	0					
ANR	3005672	Identifier	zend_string_init		3005456	0					
ANR	3005673	ArgumentList	( char * ) ua -> sun_path		3005456	1					
ANR	3005674	Argument	( char * ) ua -> sun_path		3005456	0					
ANR	3005675	CastExpression	( char * ) ua -> sun_path		3005456	0					
ANR	3005676	CastTarget	char *		3005456	0					
ANR	3005677	PtrMemberAccess	ua -> sun_path		3005456	1					
ANR	3005678	Identifier	ua		3005456	0					
ANR	3005679	Identifier	sun_path		3005456	1					
ANR	3005680	Argument	len		3005456	1					
ANR	3005681	Identifier	len		3005456	0					
ANR	3005682	Argument	0		3005456	2					
ANR	3005683	PrimaryExpression	0		3005456	0					
ANR	3005684	ElseStatement	else		3005456	0					
ANR	3005685	CompoundStatement		45:6:1070:1100	3005456	0					
ANR	3005686	IdentifierDeclStatement	int len = strlen ( ua -> sun_path ) ;	661:6:16608:16638	3005456	0	True				
ANR	3005687	IdentifierDecl	len = strlen ( ua -> sun_path )		3005456	0					
ANR	3005688	IdentifierDeclType	int		3005456	0					
ANR	3005689	Identifier	len		3005456	1					
ANR	3005690	AssignmentExpression	len = strlen ( ua -> sun_path )		3005456	2		=			
ANR	3005691	Identifier	len		3005456	0					
ANR	3005692	CallExpression	strlen ( ua -> sun_path )		3005456	1					
ANR	3005693	Callee	strlen		3005456	0					
ANR	3005694	Identifier	strlen		3005456	0					
ANR	3005695	ArgumentList	ua -> sun_path		3005456	1					
ANR	3005696	Argument	ua -> sun_path		3005456	0					
ANR	3005697	PtrMemberAccess	ua -> sun_path		3005456	0					
ANR	3005698	Identifier	ua		3005456	0					
ANR	3005699	Identifier	sun_path		3005456	1					
ANR	3005700	ExpressionStatement	"* textaddr = zend_string_init ( ( char * ) ua -> sun_path , len , 0 )"	662:6:16646:16703	3005456	1	True				
ANR	3005701	AssignmentExpression	"* textaddr = zend_string_init ( ( char * ) ua -> sun_path , len , 0 )"		3005456	0		=			
ANR	3005702	UnaryOperationExpression	* textaddr		3005456	0					
ANR	3005703	UnaryOperator	*		3005456	0					
ANR	3005704	Identifier	textaddr		3005456	1					
ANR	3005705	CallExpression	"zend_string_init ( ( char * ) ua -> sun_path , len , 0 )"		3005456	1					
ANR	3005706	Callee	zend_string_init		3005456	0					
ANR	3005707	Identifier	zend_string_init		3005456	0					
ANR	3005708	ArgumentList	( char * ) ua -> sun_path		3005456	1					
ANR	3005709	Argument	( char * ) ua -> sun_path		3005456	0					
ANR	3005710	CastExpression	( char * ) ua -> sun_path		3005456	0					
ANR	3005711	CastTarget	char *		3005456	0					
ANR	3005712	PtrMemberAccess	ua -> sun_path		3005456	1					
ANR	3005713	Identifier	ua		3005456	0					
ANR	3005714	Identifier	sun_path		3005456	1					
ANR	3005715	Argument	len		3005456	1					
ANR	3005716	Identifier	len		3005456	0					
ANR	3005717	Argument	0		3005456	2					
ANR	3005718	PrimaryExpression	0		3005456	0					
ANR	3005719	BreakStatement	break ;	665:4:16722:16727	3005456	10	True				
ANR	3005720	ReturnType	PHPAPI void		3005456	1					
ANR	3005721	Identifier	php_network_populate_name_from_sockaddr		3005456	2					
ANR	3005722	ParameterList	"struct sockaddr * sa , socklen_t sl , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen"		3005456	3					
ANR	3005723	Parameter	struct sockaddr * sa	610:2:15370:15388	3005456	0	True				
ANR	3005724	ParameterType	struct sockaddr *		3005456	0					
ANR	3005725	Identifier	sa		3005456	1					
ANR	3005726	Parameter	socklen_t sl	610:23:15391:15402	3005456	1	True				
ANR	3005727	ParameterType	socklen_t		3005456	0					
ANR	3005728	Identifier	sl		3005456	1					
ANR	3005729	Parameter	zend_string * * textaddr	612:2:15439:15460	3005456	2	True				
ANR	3005730	ParameterType	zend_string * *		3005456	0					
ANR	3005731	Identifier	textaddr		3005456	1					
ANR	3005732	Parameter	struct sockaddr * * addr	614:2:15488:15509	3005456	3	True				
ANR	3005733	ParameterType	struct sockaddr * *		3005456	0					
ANR	3005734	Identifier	addr		3005456	1					
ANR	3005735	Parameter	socklen_t * addrlen	615:2:15514:15531	3005456	4	True				
ANR	3005736	ParameterType	socklen_t *		3005456	0					
ANR	3005737	Identifier	addrlen		3005456	1					
ANR	3005738	CFGEntryNode	ENTRY		3005456		True				
ANR	3005739	CFGExitNode	EXIT		3005456		True				
ANR	3005740	Symbol	sa -> sa_family		3005456						
ANR	3005741	Symbol	& ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		3005456						
ANR	3005742	Symbol	* ua -> sun_path		3005456						
ANR	3005743	Symbol	ua		3005456						
ANR	3005744	Symbol	sa		3005456						
ANR	3005745	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_port		3005456						
ANR	3005746	Symbol	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3005456						
ANR	3005747	Symbol	* ua		3005456						
ANR	3005748	Symbol	strlen		3005456						
ANR	3005749	Symbol	zend_string_init		3005456						
ANR	3005750	Symbol	emalloc		3005456						
ANR	3005751	Symbol	addrlen		3005456						
ANR	3005752	Symbol	len		3005456						
ANR	3005753	Symbol	* sa		3005456						
ANR	3005754	Symbol	sl		3005456						
ANR	3005755	Symbol	* textaddr		3005456						
ANR	3005756	Symbol	addr		3005456						
ANR	3005757	Symbol	abuf		3005456						
ANR	3005758	Symbol	NULL		3005456						
ANR	3005759	Symbol	& abuf		3005456						
ANR	3005760	Symbol	inet_ntoa		3005456						
ANR	3005761	Symbol	textaddr		3005456						
ANR	3005762	Symbol	strpprintf		3005456						
ANR	3005763	Symbol	ntohs		3005456						
ANR	3005764	Symbol	buf		3005456						
ANR	3005765	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_addr		3005456						
ANR	3005766	Symbol	ua -> sun_path		3005456						
ANR	3005767	Symbol	* addrlen		3005456						
ANR	3005768	Symbol	inet_ntop		3005456						
ANR	3005769	Symbol	* * ua		3005456						
ANR	3005770	Symbol	* addr		3005456						
ANR	3005771	Function	php_network_get_peer_name	673:0:16748:17161							
ANR	3005772	FunctionDef	"php_network_get_peer_name (php_socket_t sock , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen)"		3005771	0					
ANR	3005773	CompoundStatement		678:0:16881:17161	3005771	0					
ANR	3005774	IdentifierDeclStatement	php_sockaddr_storage sa ;	679:1:16884:16907	3005771	0	True				
ANR	3005775	IdentifierDecl	sa		3005771	0					
ANR	3005776	IdentifierDeclType	php_sockaddr_storage		3005771	0					
ANR	3005777	Identifier	sa		3005771	1					
ANR	3005778	IdentifierDeclStatement	socklen_t sl = sizeof ( sa ) ;	680:1:16910:16935	3005771	1	True				
ANR	3005779	IdentifierDecl	sl = sizeof ( sa )		3005771	0					
ANR	3005780	IdentifierDeclType	socklen_t		3005771	0					
ANR	3005781	Identifier	sl		3005771	1					
ANR	3005782	AssignmentExpression	sl = sizeof ( sa )		3005771	2		=			
ANR	3005783	Identifier	sl		3005771	0					
ANR	3005784	SizeofExpression	sizeof ( sa )		3005771	1					
ANR	3005785	Sizeof	sizeof		3005771	0					
ANR	3005786	SizeofOperand	sa		3005771	1					
ANR	3005787	ExpressionStatement	"memset ( & sa , 0 , sizeof ( sa ) )"	681:1:16938:16964	3005771	2	True				
ANR	3005788	CallExpression	"memset ( & sa , 0 , sizeof ( sa ) )"		3005771	0					
ANR	3005789	Callee	memset		3005771	0					
ANR	3005790	Identifier	memset		3005771	0					
ANR	3005791	ArgumentList	& sa		3005771	1					
ANR	3005792	Argument	& sa		3005771	0					
ANR	3005793	UnaryOperationExpression	& sa		3005771	0					
ANR	3005794	UnaryOperator	&		3005771	0					
ANR	3005795	Identifier	sa		3005771	1					
ANR	3005796	Argument	0		3005771	1					
ANR	3005797	PrimaryExpression	0		3005771	0					
ANR	3005798	Argument	sizeof ( sa )		3005771	2					
ANR	3005799	SizeofExpression	sizeof ( sa )		3005771	0					
ANR	3005800	Sizeof	sizeof		3005771	0					
ANR	3005801	SizeofOperand	sa		3005771	1					
ANR	3005802	IfStatement	"if ( getpeername ( sock , ( struct sockaddr * ) & sa , & sl ) == 0 )"		3005771	3					
ANR	3005803	Condition	"getpeername ( sock , ( struct sockaddr * ) & sa , & sl ) == 0"	683:5:16972:17021	3005771	0	True				
ANR	3005804	EqualityExpression	"getpeername ( sock , ( struct sockaddr * ) & sa , & sl ) == 0"		3005771	0		==			
ANR	3005805	CallExpression	"getpeername ( sock , ( struct sockaddr * ) & sa , & sl )"		3005771	0					
ANR	3005806	Callee	getpeername		3005771	0					
ANR	3005807	Identifier	getpeername		3005771	0					
ANR	3005808	ArgumentList	sock		3005771	1					
ANR	3005809	Argument	sock		3005771	0					
ANR	3005810	Identifier	sock		3005771	0					
ANR	3005811	Argument	( struct sockaddr * ) & sa		3005771	1					
ANR	3005812	CastExpression	( struct sockaddr * ) & sa		3005771	0					
ANR	3005813	CastTarget	struct sockaddr *		3005771	0					
ANR	3005814	UnaryOperationExpression	& sa		3005771	1					
ANR	3005815	UnaryOperator	&		3005771	0					
ANR	3005816	Identifier	sa		3005771	1					
ANR	3005817	Argument	& sl		3005771	2					
ANR	3005818	UnaryOperationExpression	& sl		3005771	0					
ANR	3005819	UnaryOperator	&		3005771	0					
ANR	3005820	Identifier	sl		3005771	1					
ANR	3005821	PrimaryExpression	0		3005771	1					
ANR	3005822	CompoundStatement		6:57:142:142	3005771	1					
ANR	3005823	ExpressionStatement	"php_network_populate_name_from_sockaddr ( ( struct sockaddr * ) & sa , sl , textaddr , addr , addrlen )"	684:2:17028:17132	3005771	0	True				
ANR	3005824	CallExpression	"php_network_populate_name_from_sockaddr ( ( struct sockaddr * ) & sa , sl , textaddr , addr , addrlen )"		3005771	0					
ANR	3005825	Callee	php_network_populate_name_from_sockaddr		3005771	0					
ANR	3005826	Identifier	php_network_populate_name_from_sockaddr		3005771	0					
ANR	3005827	ArgumentList	( struct sockaddr * ) & sa		3005771	1					
ANR	3005828	Argument	( struct sockaddr * ) & sa		3005771	0					
ANR	3005829	CastExpression	( struct sockaddr * ) & sa		3005771	0					
ANR	3005830	CastTarget	struct sockaddr *		3005771	0					
ANR	3005831	UnaryOperationExpression	& sa		3005771	1					
ANR	3005832	UnaryOperator	&		3005771	0					
ANR	3005833	Identifier	sa		3005771	1					
ANR	3005834	Argument	sl		3005771	1					
ANR	3005835	Identifier	sl		3005771	0					
ANR	3005836	Argument	textaddr		3005771	2					
ANR	3005837	Identifier	textaddr		3005771	0					
ANR	3005838	Argument	addr		3005771	3					
ANR	3005839	Identifier	addr		3005771	0					
ANR	3005840	Argument	addrlen		3005771	4					
ANR	3005841	Identifier	addrlen		3005771	0					
ANR	3005842	ReturnStatement	return 0 ;	688:2:17136:17144	3005771	1	True				
ANR	3005843	PrimaryExpression	0		3005771	0					
ANR	3005844	ReturnStatement	return - 1 ;	690:1:17150:17159	3005771	4	True				
ANR	3005845	UnaryOperationExpression	- 1		3005771	0					
ANR	3005846	UnaryOperator	-		3005771	0					
ANR	3005847	PrimaryExpression	1		3005771	1					
ANR	3005848	ReturnType	PHPAPI int		3005771	1					
ANR	3005849	Identifier	php_network_get_peer_name		3005771	2					
ANR	3005850	ParameterList	"php_socket_t sock , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen"		3005771	3					
ANR	3005851	Parameter	php_socket_t sock	673:37:16785:16801	3005771	0	True				
ANR	3005852	ParameterType	php_socket_t		3005771	0					
ANR	3005853	Identifier	sock		3005771	1					
ANR	3005854	Parameter	zend_string * * textaddr	674:2:16806:16827	3005771	1	True				
ANR	3005855	ParameterType	zend_string * *		3005771	0					
ANR	3005856	Identifier	textaddr		3005771	1					
ANR	3005857	Parameter	struct sockaddr * * addr	675:2:16832:16853	3005771	2	True				
ANR	3005858	ParameterType	struct sockaddr * *		3005771	0					
ANR	3005859	Identifier	addr		3005771	1					
ANR	3005860	Parameter	socklen_t * addrlen	676:2:16858:16875	3005771	3	True				
ANR	3005861	ParameterType	socklen_t *		3005771	0					
ANR	3005862	Identifier	addrlen		3005771	1					
ANR	3005863	CFGEntryNode	ENTRY		3005771		True				
ANR	3005864	CFGExitNode	EXIT		3005771		True				
ANR	3005865	Symbol	sock		3005771						
ANR	3005866	Symbol	& sl		3005771						
ANR	3005867	Symbol	addrlen		3005771						
ANR	3005868	Symbol	sl		3005771						
ANR	3005869	Symbol	& sa		3005771						
ANR	3005870	Symbol	addr		3005771						
ANR	3005871	Symbol	textaddr		3005771						
ANR	3005872	Symbol	sa		3005771						
ANR	3005873	Symbol	getpeername		3005771						
ANR	3005874	Function	php_network_get_sock_name	693:0:17164:17578							
ANR	3005875	FunctionDef	"php_network_get_sock_name (php_socket_t sock , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen)"		3005874	0					
ANR	3005876	CompoundStatement		698:0:17297:17578	3005874	0					
ANR	3005877	IdentifierDeclStatement	php_sockaddr_storage sa ;	699:1:17300:17323	3005874	0	True				
ANR	3005878	IdentifierDecl	sa		3005874	0					
ANR	3005879	IdentifierDeclType	php_sockaddr_storage		3005874	0					
ANR	3005880	Identifier	sa		3005874	1					
ANR	3005881	IdentifierDeclStatement	socklen_t sl = sizeof ( sa ) ;	700:1:17326:17351	3005874	1	True				
ANR	3005882	IdentifierDecl	sl = sizeof ( sa )		3005874	0					
ANR	3005883	IdentifierDeclType	socklen_t		3005874	0					
ANR	3005884	Identifier	sl		3005874	1					
ANR	3005885	AssignmentExpression	sl = sizeof ( sa )		3005874	2		=			
ANR	3005886	Identifier	sl		3005874	0					
ANR	3005887	SizeofExpression	sizeof ( sa )		3005874	1					
ANR	3005888	Sizeof	sizeof		3005874	0					
ANR	3005889	SizeofOperand	sa		3005874	1					
ANR	3005890	ExpressionStatement	"memset ( & sa , 0 , sizeof ( sa ) )"	701:1:17354:17380	3005874	2	True				
ANR	3005891	CallExpression	"memset ( & sa , 0 , sizeof ( sa ) )"		3005874	0					
ANR	3005892	Callee	memset		3005874	0					
ANR	3005893	Identifier	memset		3005874	0					
ANR	3005894	ArgumentList	& sa		3005874	1					
ANR	3005895	Argument	& sa		3005874	0					
ANR	3005896	UnaryOperationExpression	& sa		3005874	0					
ANR	3005897	UnaryOperator	&		3005874	0					
ANR	3005898	Identifier	sa		3005874	1					
ANR	3005899	Argument	0		3005874	1					
ANR	3005900	PrimaryExpression	0		3005874	0					
ANR	3005901	Argument	sizeof ( sa )		3005874	2					
ANR	3005902	SizeofExpression	sizeof ( sa )		3005874	0					
ANR	3005903	Sizeof	sizeof		3005874	0					
ANR	3005904	SizeofOperand	sa		3005874	1					
ANR	3005905	IfStatement	"if ( getsockname ( sock , ( struct sockaddr * ) & sa , & sl ) == 0 )"		3005874	3					
ANR	3005906	Condition	"getsockname ( sock , ( struct sockaddr * ) & sa , & sl ) == 0"	703:5:17388:17437	3005874	0	True				
ANR	3005907	EqualityExpression	"getsockname ( sock , ( struct sockaddr * ) & sa , & sl ) == 0"		3005874	0		==			
ANR	3005908	CallExpression	"getsockname ( sock , ( struct sockaddr * ) & sa , & sl )"		3005874	0					
ANR	3005909	Callee	getsockname		3005874	0					
ANR	3005910	Identifier	getsockname		3005874	0					
ANR	3005911	ArgumentList	sock		3005874	1					
ANR	3005912	Argument	sock		3005874	0					
ANR	3005913	Identifier	sock		3005874	0					
ANR	3005914	Argument	( struct sockaddr * ) & sa		3005874	1					
ANR	3005915	CastExpression	( struct sockaddr * ) & sa		3005874	0					
ANR	3005916	CastTarget	struct sockaddr *		3005874	0					
ANR	3005917	UnaryOperationExpression	& sa		3005874	1					
ANR	3005918	UnaryOperator	&		3005874	0					
ANR	3005919	Identifier	sa		3005874	1					
ANR	3005920	Argument	& sl		3005874	2					
ANR	3005921	UnaryOperationExpression	& sl		3005874	0					
ANR	3005922	UnaryOperator	&		3005874	0					
ANR	3005923	Identifier	sl		3005874	1					
ANR	3005924	PrimaryExpression	0		3005874	1					
ANR	3005925	CompoundStatement		6:57:142:142	3005874	1					
ANR	3005926	ExpressionStatement	"php_network_populate_name_from_sockaddr ( ( struct sockaddr * ) & sa , sl , textaddr , addr , addrlen )"	704:2:17444:17548	3005874	0	True				
ANR	3005927	CallExpression	"php_network_populate_name_from_sockaddr ( ( struct sockaddr * ) & sa , sl , textaddr , addr , addrlen )"		3005874	0					
ANR	3005928	Callee	php_network_populate_name_from_sockaddr		3005874	0					
ANR	3005929	Identifier	php_network_populate_name_from_sockaddr		3005874	0					
ANR	3005930	ArgumentList	( struct sockaddr * ) & sa		3005874	1					
ANR	3005931	Argument	( struct sockaddr * ) & sa		3005874	0					
ANR	3005932	CastExpression	( struct sockaddr * ) & sa		3005874	0					
ANR	3005933	CastTarget	struct sockaddr *		3005874	0					
ANR	3005934	UnaryOperationExpression	& sa		3005874	1					
ANR	3005935	UnaryOperator	&		3005874	0					
ANR	3005936	Identifier	sa		3005874	1					
ANR	3005937	Argument	sl		3005874	1					
ANR	3005938	Identifier	sl		3005874	0					
ANR	3005939	Argument	textaddr		3005874	2					
ANR	3005940	Identifier	textaddr		3005874	0					
ANR	3005941	Argument	addr		3005874	3					
ANR	3005942	Identifier	addr		3005874	0					
ANR	3005943	Argument	addrlen		3005874	4					
ANR	3005944	Identifier	addrlen		3005874	0					
ANR	3005945	ReturnStatement	return 0 ;	708:2:17552:17560	3005874	1	True				
ANR	3005946	PrimaryExpression	0		3005874	0					
ANR	3005947	ReturnStatement	return - 1 ;	710:1:17566:17575	3005874	4	True				
ANR	3005948	UnaryOperationExpression	- 1		3005874	0					
ANR	3005949	UnaryOperator	-		3005874	0					
ANR	3005950	PrimaryExpression	1		3005874	1					
ANR	3005951	ReturnType	PHPAPI int		3005874	1					
ANR	3005952	Identifier	php_network_get_sock_name		3005874	2					
ANR	3005953	ParameterList	"php_socket_t sock , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen"		3005874	3					
ANR	3005954	Parameter	php_socket_t sock	693:37:17201:17217	3005874	0	True				
ANR	3005955	ParameterType	php_socket_t		3005874	0					
ANR	3005956	Identifier	sock		3005874	1					
ANR	3005957	Parameter	zend_string * * textaddr	694:2:17222:17243	3005874	1	True				
ANR	3005958	ParameterType	zend_string * *		3005874	0					
ANR	3005959	Identifier	textaddr		3005874	1					
ANR	3005960	Parameter	struct sockaddr * * addr	695:2:17248:17269	3005874	2	True				
ANR	3005961	ParameterType	struct sockaddr * *		3005874	0					
ANR	3005962	Identifier	addr		3005874	1					
ANR	3005963	Parameter	socklen_t * addrlen	696:2:17274:17291	3005874	3	True				
ANR	3005964	ParameterType	socklen_t *		3005874	0					
ANR	3005965	Identifier	addrlen		3005874	1					
ANR	3005966	CFGEntryNode	ENTRY		3005874		True				
ANR	3005967	CFGExitNode	EXIT		3005874		True				
ANR	3005968	Symbol	sock		3005874						
ANR	3005969	Symbol	& sl		3005874						
ANR	3005970	Symbol	addrlen		3005874						
ANR	3005971	Symbol	getsockname		3005874						
ANR	3005972	Symbol	sl		3005874						
ANR	3005973	Symbol	& sa		3005874						
ANR	3005974	Symbol	addr		3005874						
ANR	3005975	Symbol	textaddr		3005874						
ANR	3005976	Symbol	sa		3005874						
ANR	3005977	Function	php_network_accept_incoming	724:0:17916:18804							
ANR	3005978	FunctionDef	"php_network_accept_incoming (php_socket_t srvsock , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen , struct timeval * timeout , zend_string * * error_string , int * error_code)"		3005977	0					
ANR	3005979	CompoundStatement		732:0:18139:18804	3005977	0					
ANR	3005980	IdentifierDeclStatement	php_socket_t clisock = - 1 ;	733:1:18142:18167	3005977	0	True				
ANR	3005981	IdentifierDecl	clisock = - 1		3005977	0					
ANR	3005982	IdentifierDeclType	php_socket_t		3005977	0					
ANR	3005983	Identifier	clisock		3005977	1					
ANR	3005984	AssignmentExpression	clisock = - 1		3005977	2		=			
ANR	3005985	Identifier	clisock		3005977	0					
ANR	3005986	UnaryOperationExpression	- 1		3005977	1					
ANR	3005987	UnaryOperator	-		3005977	0					
ANR	3005988	PrimaryExpression	1		3005977	1					
ANR	3005989	IdentifierDeclStatement	"int error = 0 , n ;"	734:1:18170:18186	3005977	1	True				
ANR	3005990	IdentifierDecl	error = 0		3005977	0					
ANR	3005991	IdentifierDeclType	int		3005977	0					
ANR	3005992	Identifier	error		3005977	1					
ANR	3005993	AssignmentExpression	error = 0		3005977	2		=			
ANR	3005994	Identifier	error		3005977	0					
ANR	3005995	PrimaryExpression	0		3005977	1					
ANR	3005996	IdentifierDecl	n		3005977	1					
ANR	3005997	IdentifierDeclType	int		3005977	0					
ANR	3005998	Identifier	n		3005977	1					
ANR	3005999	IdentifierDeclStatement	php_sockaddr_storage sa ;	735:1:18189:18212	3005977	2	True				
ANR	3006000	IdentifierDecl	sa		3005977	0					
ANR	3006001	IdentifierDeclType	php_sockaddr_storage		3005977	0					
ANR	3006002	Identifier	sa		3005977	1					
ANR	3006003	IdentifierDeclStatement	socklen_t sl ;	736:1:18215:18227	3005977	3	True				
ANR	3006004	IdentifierDecl	sl		3005977	0					
ANR	3006005	IdentifierDeclType	socklen_t		3005977	0					
ANR	3006006	Identifier	sl		3005977	1					
ANR	3006007	ExpressionStatement	"n = php_pollfd_for ( srvsock , PHP_POLLREADABLE , timeout )"	738:1:18231:18285	3005977	4	True				
ANR	3006008	AssignmentExpression	"n = php_pollfd_for ( srvsock , PHP_POLLREADABLE , timeout )"		3005977	0		=			
ANR	3006009	Identifier	n		3005977	0					
ANR	3006010	CallExpression	"php_pollfd_for ( srvsock , PHP_POLLREADABLE , timeout )"		3005977	1					
ANR	3006011	Callee	php_pollfd_for		3005977	0					
ANR	3006012	Identifier	php_pollfd_for		3005977	0					
ANR	3006013	ArgumentList	srvsock		3005977	1					
ANR	3006014	Argument	srvsock		3005977	0					
ANR	3006015	Identifier	srvsock		3005977	0					
ANR	3006016	Argument	PHP_POLLREADABLE		3005977	1					
ANR	3006017	Identifier	PHP_POLLREADABLE		3005977	0					
ANR	3006018	Argument	timeout		3005977	2					
ANR	3006019	Identifier	timeout		3005977	0					
ANR	3006020	IfStatement	if ( n == 0 )		3005977	5					
ANR	3006021	Condition	n == 0	740:5:18293:18298	3005977	0	True				
ANR	3006022	EqualityExpression	n == 0		3005977	0		==			
ANR	3006023	Identifier	n		3005977	0					
ANR	3006024	PrimaryExpression	0		3005977	1					
ANR	3006025	CompoundStatement		9:13:161:161	3005977	1					
ANR	3006026	ExpressionStatement	error = PHP_TIMEOUT_ERROR_VALUE	741:2:18305:18336	3005977	0	True				
ANR	3006027	AssignmentExpression	error = PHP_TIMEOUT_ERROR_VALUE		3005977	0		=			
ANR	3006028	Identifier	error		3005977	0					
ANR	3006029	Identifier	PHP_TIMEOUT_ERROR_VALUE		3005977	1					
ANR	3006030	ElseStatement	else		3005977	0					
ANR	3006031	IfStatement	if ( n == - 1 )		3005977	0					
ANR	3006032	Condition	n == - 1	742:12:18350:18356	3005977	0	True				
ANR	3006033	EqualityExpression	n == - 1		3005977	0		==			
ANR	3006034	Identifier	n		3005977	0					
ANR	3006035	UnaryOperationExpression	- 1		3005977	1					
ANR	3006036	UnaryOperator	-		3005977	0					
ANR	3006037	PrimaryExpression	1		3005977	1					
ANR	3006038	CompoundStatement		11:21:219:219	3005977	1					
ANR	3006039	ExpressionStatement	error = php_socket_errno ( )	743:2:18363:18389	3005977	0	True				
ANR	3006040	AssignmentExpression	error = php_socket_errno ( )		3005977	0		=			
ANR	3006041	Identifier	error		3005977	0					
ANR	3006042	CallExpression	php_socket_errno ( )		3005977	1					
ANR	3006043	Callee	php_socket_errno		3005977	0					
ANR	3006044	Identifier	php_socket_errno		3005977	0					
ANR	3006045	ArgumentList			3005977	1					
ANR	3006046	ElseStatement	else		3005977	0					
ANR	3006047	CompoundStatement		13:8:259:259	3005977	0					
ANR	3006048	ExpressionStatement	sl = sizeof ( sa )	745:2:18403:18418	3005977	0	True				
ANR	3006049	AssignmentExpression	sl = sizeof ( sa )		3005977	0		=			
ANR	3006050	Identifier	sl		3005977	0					
ANR	3006051	SizeofExpression	sizeof ( sa )		3005977	1					
ANR	3006052	Sizeof	sizeof		3005977	0					
ANR	3006053	SizeofOperand	sa		3005977	1					
ANR	3006054	ExpressionStatement	"clisock = accept ( srvsock , ( struct sockaddr * ) & sa , & sl )"	747:2:18423:18476	3005977	1	True				
ANR	3006055	AssignmentExpression	"clisock = accept ( srvsock , ( struct sockaddr * ) & sa , & sl )"		3005977	0		=			
ANR	3006056	Identifier	clisock		3005977	0					
ANR	3006057	CallExpression	"accept ( srvsock , ( struct sockaddr * ) & sa , & sl )"		3005977	1					
ANR	3006058	Callee	accept		3005977	0					
ANR	3006059	Identifier	accept		3005977	0					
ANR	3006060	ArgumentList	srvsock		3005977	1					
ANR	3006061	Argument	srvsock		3005977	0					
ANR	3006062	Identifier	srvsock		3005977	0					
ANR	3006063	Argument	( struct sockaddr * ) & sa		3005977	1					
ANR	3006064	CastExpression	( struct sockaddr * ) & sa		3005977	0					
ANR	3006065	CastTarget	struct sockaddr *		3005977	0					
ANR	3006066	UnaryOperationExpression	& sa		3005977	1					
ANR	3006067	UnaryOperator	&		3005977	0					
ANR	3006068	Identifier	sa		3005977	1					
ANR	3006069	Argument	& sl		3005977	2					
ANR	3006070	UnaryOperationExpression	& sl		3005977	0					
ANR	3006071	UnaryOperator	&		3005977	0					
ANR	3006072	Identifier	sl		3005977	1					
ANR	3006073	IfStatement	if ( clisock != SOCK_ERR )		3005977	2					
ANR	3006074	Condition	clisock != SOCK_ERR	749:6:18485:18503	3005977	0	True				
ANR	3006075	EqualityExpression	clisock != SOCK_ERR		3005977	0		!=			
ANR	3006076	Identifier	clisock		3005977	0					
ANR	3006077	Identifier	SOCK_ERR		3005977	1					
ANR	3006078	CompoundStatement		18:27:366:366	3005977	1					
ANR	3006079	ExpressionStatement	"php_network_populate_name_from_sockaddr ( ( struct sockaddr * ) & sa , sl , textaddr , addr , addrlen )"	750:3:18511:18618	3005977	0	True				
ANR	3006080	CallExpression	"php_network_populate_name_from_sockaddr ( ( struct sockaddr * ) & sa , sl , textaddr , addr , addrlen )"		3005977	0					
ANR	3006081	Callee	php_network_populate_name_from_sockaddr		3005977	0					
ANR	3006082	Identifier	php_network_populate_name_from_sockaddr		3005977	0					
ANR	3006083	ArgumentList	( struct sockaddr * ) & sa		3005977	1					
ANR	3006084	Argument	( struct sockaddr * ) & sa		3005977	0					
ANR	3006085	CastExpression	( struct sockaddr * ) & sa		3005977	0					
ANR	3006086	CastTarget	struct sockaddr *		3005977	0					
ANR	3006087	UnaryOperationExpression	& sa		3005977	1					
ANR	3006088	UnaryOperator	&		3005977	0					
ANR	3006089	Identifier	sa		3005977	1					
ANR	3006090	Argument	sl		3005977	1					
ANR	3006091	Identifier	sl		3005977	0					
ANR	3006092	Argument	textaddr		3005977	2					
ANR	3006093	Identifier	textaddr		3005977	0					
ANR	3006094	Argument	addr		3005977	3					
ANR	3006095	Identifier	addr		3005977	0					
ANR	3006096	Argument	addrlen		3005977	4					
ANR	3006097	Identifier	addrlen		3005977	0					
ANR	3006098	ElseStatement	else		3005977	0					
ANR	3006099	CompoundStatement		23:9:489:489	3005977	0					
ANR	3006100	ExpressionStatement	error = php_socket_errno ( )	755:3:18634:18660	3005977	0	True				
ANR	3006101	AssignmentExpression	error = php_socket_errno ( )		3005977	0		=			
ANR	3006102	Identifier	error		3005977	0					
ANR	3006103	CallExpression	php_socket_errno ( )		3005977	1					
ANR	3006104	Callee	php_socket_errno		3005977	0					
ANR	3006105	Identifier	php_socket_errno		3005977	0					
ANR	3006106	ArgumentList			3005977	1					
ANR	3006107	IfStatement	if ( error_code )		3005977	6					
ANR	3006108	Condition	error_code	759:5:18675:18684	3005977	0	True				
ANR	3006109	Identifier	error_code		3005977	0					
ANR	3006110	CompoundStatement		28:17:547:547	3005977	1					
ANR	3006111	ExpressionStatement	* error_code = error	760:2:18691:18710	3005977	0	True				
ANR	3006112	AssignmentExpression	* error_code = error		3005977	0		=			
ANR	3006113	UnaryOperationExpression	* error_code		3005977	0					
ANR	3006114	UnaryOperator	*		3005977	0					
ANR	3006115	Identifier	error_code		3005977	1					
ANR	3006116	Identifier	error		3005977	1					
ANR	3006117	IfStatement	if ( error_string )		3005977	7					
ANR	3006118	Condition	error_string	762:5:18720:18731	3005977	0	True				
ANR	3006119	Identifier	error_string		3005977	0					
ANR	3006120	CompoundStatement		31:19:594:594	3005977	1					
ANR	3006121	ExpressionStatement	* error_string = php_socket_error_str ( error )	763:2:18738:18781	3005977	0	True				
ANR	3006122	AssignmentExpression	* error_string = php_socket_error_str ( error )		3005977	0		=			
ANR	3006123	UnaryOperationExpression	* error_string		3005977	0					
ANR	3006124	UnaryOperator	*		3005977	0					
ANR	3006125	Identifier	error_string		3005977	1					
ANR	3006126	CallExpression	php_socket_error_str ( error )		3005977	1					
ANR	3006127	Callee	php_socket_error_str		3005977	0					
ANR	3006128	Identifier	php_socket_error_str		3005977	0					
ANR	3006129	ArgumentList	error		3005977	1					
ANR	3006130	Argument	error		3005977	0					
ANR	3006131	Identifier	error		3005977	0					
ANR	3006132	ReturnStatement	return clisock ;	766:1:18788:18802	3005977	8	True				
ANR	3006133	Identifier	clisock		3005977	0					
ANR	3006134	ReturnType	PHPAPI php_socket_t		3005977	1					
ANR	3006135	Identifier	php_network_accept_incoming		3005977	2					
ANR	3006136	ParameterList	"php_socket_t srvsock , zend_string * * textaddr , struct sockaddr * * addr , socklen_t * addrlen , struct timeval * timeout , zend_string * * error_string , int * error_code"		3005977	3					
ANR	3006137	Parameter	php_socket_t srvsock	724:48:17964:17983	3005977	0	True				
ANR	3006138	ParameterType	php_socket_t		3005977	0					
ANR	3006139	Identifier	srvsock		3005977	1					
ANR	3006140	Parameter	zend_string * * textaddr	725:2:17988:18009	3005977	1	True				
ANR	3006141	ParameterType	zend_string * *		3005977	0					
ANR	3006142	Identifier	textaddr		3005977	1					
ANR	3006143	Parameter	struct sockaddr * * addr	726:2:18014:18035	3005977	2	True				
ANR	3006144	ParameterType	struct sockaddr * *		3005977	0					
ANR	3006145	Identifier	addr		3005977	1					
ANR	3006146	Parameter	socklen_t * addrlen	727:2:18040:18057	3005977	3	True				
ANR	3006147	ParameterType	socklen_t *		3005977	0					
ANR	3006148	Identifier	addrlen		3005977	1					
ANR	3006149	Parameter	struct timeval * timeout	728:2:18062:18084	3005977	4	True				
ANR	3006150	ParameterType	struct timeval *		3005977	0					
ANR	3006151	Identifier	timeout		3005977	1					
ANR	3006152	Parameter	zend_string * * error_string	729:2:18089:18114	3005977	5	True				
ANR	3006153	ParameterType	zend_string * *		3005977	0					
ANR	3006154	Identifier	error_string		3005977	1					
ANR	3006155	Parameter	int * error_code	730:2:18119:18133	3005977	6	True				
ANR	3006156	ParameterType	int *		3005977	0					
ANR	3006157	Identifier	error_code		3005977	1					
ANR	3006158	CFGEntryNode	ENTRY		3005977		True				
ANR	3006159	CFGExitNode	EXIT		3005977		True				
ANR	3006160	Symbol	* error_code		3005977						
ANR	3006161	Symbol	php_socket_error_str		3005977						
ANR	3006162	Symbol	& sl		3005977						
ANR	3006163	Symbol	* error_string		3005977						
ANR	3006164	Symbol	SOCK_ERR		3005977						
ANR	3006165	Symbol	error		3005977						
ANR	3006166	Symbol	textaddr		3005977						
ANR	3006167	Symbol	php_pollfd_for		3005977						
ANR	3006168	Symbol	timeout		3005977						
ANR	3006169	Symbol	n		3005977						
ANR	3006170	Symbol	sa		3005977						
ANR	3006171	Symbol	accept		3005977						
ANR	3006172	Symbol	error_string		3005977						
ANR	3006173	Symbol	srvsock		3005977						
ANR	3006174	Symbol	addrlen		3005977						
ANR	3006175	Symbol	PHP_POLLREADABLE		3005977						
ANR	3006176	Symbol	clisock		3005977						
ANR	3006177	Symbol	sl		3005977						
ANR	3006178	Symbol	& sa		3005977						
ANR	3006179	Symbol	error_code		3005977						
ANR	3006180	Symbol	PHP_TIMEOUT_ERROR_VALUE		3005977						
ANR	3006181	Symbol	addr		3005977						
ANR	3006182	Symbol	php_socket_errno		3005977						
ANR	3006183	Function	php_network_connect_socket_to_host	779:0:19140:23834							
ANR	3006184	FunctionDef	"php_network_connect_socket_to_host (const char * host , unsigned short port , int socktype , int asynchronous , struct timeval * timeout , zend_string * * error_string , int * error_code , char * bindto , unsigned short bindport , long sockopts)"		3006183	0					
ANR	3006185	CompoundStatement		783:0:19390:23834	3006183	0					
ANR	3006186	IdentifierDeclStatement	"int num_addrs , n , fatal = 0 ;"	784:1:19393:19420	3006183	0	True				
ANR	3006187	IdentifierDecl	num_addrs		3006183	0					
ANR	3006188	IdentifierDeclType	int		3006183	0					
ANR	3006189	Identifier	num_addrs		3006183	1					
ANR	3006190	IdentifierDecl	n		3006183	1					
ANR	3006191	IdentifierDeclType	int		3006183	0					
ANR	3006192	Identifier	n		3006183	1					
ANR	3006193	IdentifierDecl	fatal = 0		3006183	2					
ANR	3006194	IdentifierDeclType	int		3006183	0					
ANR	3006195	Identifier	fatal		3006183	1					
ANR	3006196	AssignmentExpression	fatal = 0		3006183	2		=			
ANR	3006197	Identifier	fatal		3006183	0					
ANR	3006198	PrimaryExpression	0		3006183	1					
ANR	3006199	IdentifierDeclStatement	php_socket_t sock ;	785:1:19423:19440	3006183	1	True				
ANR	3006200	IdentifierDecl	sock		3006183	0					
ANR	3006201	IdentifierDeclType	php_socket_t		3006183	0					
ANR	3006202	Identifier	sock		3006183	1					
ANR	3006203	IdentifierDeclStatement	"struct sockaddr * * sal , * * psal , * sa ;"	786:1:19443:19477	3006183	2	True				
ANR	3006204	IdentifierDecl	* * sal		3006183	0					
ANR	3006205	IdentifierDeclType	struct sockaddr * *		3006183	0					
ANR	3006206	Identifier	sal		3006183	1					
ANR	3006207	IdentifierDecl	* * psal		3006183	1					
ANR	3006208	IdentifierDeclType	struct sockaddr * *		3006183	0					
ANR	3006209	Identifier	psal		3006183	1					
ANR	3006210	IdentifierDecl	* sa		3006183	2					
ANR	3006211	IdentifierDeclType	struct sockaddr *		3006183	0					
ANR	3006212	Identifier	sa		3006183	1					
ANR	3006213	IdentifierDeclStatement	struct timeval working_timeout ;	787:1:19480:19510	3006183	3	True				
ANR	3006214	IdentifierDecl	working_timeout		3006183	0					
ANR	3006215	IdentifierDeclType	struct timeval		3006183	0					
ANR	3006216	Identifier	working_timeout		3006183	1					
ANR	3006217	IdentifierDeclStatement	socklen_t socklen ;	788:1:19513:19530	3006183	4	True				
ANR	3006218	IdentifierDecl	socklen		3006183	0					
ANR	3006219	IdentifierDeclType	socklen_t		3006183	0					
ANR	3006220	Identifier	socklen		3006183	1					
ANR	3006221	IdentifierDeclStatement	"struct timeval limit_time , time_now ;"	790:1:19555:19590	3006183	5	True				
ANR	3006222	IdentifierDecl	limit_time		3006183	0					
ANR	3006223	IdentifierDeclType	struct timeval		3006183	0					
ANR	3006224	Identifier	limit_time		3006183	1					
ANR	3006225	IdentifierDecl	time_now		3006183	1					
ANR	3006226	IdentifierDeclType	struct timeval		3006183	0					
ANR	3006227	Identifier	time_now		3006183	1					
ANR	3006228	ExpressionStatement	"num_addrs = php_network_getaddresses ( host , socktype , & psal , error_string )"	793:1:19601:19674	3006183	6	True				
ANR	3006229	AssignmentExpression	"num_addrs = php_network_getaddresses ( host , socktype , & psal , error_string )"		3006183	0		=			
ANR	3006230	Identifier	num_addrs		3006183	0					
ANR	3006231	CallExpression	"php_network_getaddresses ( host , socktype , & psal , error_string )"		3006183	1					
ANR	3006232	Callee	php_network_getaddresses		3006183	0					
ANR	3006233	Identifier	php_network_getaddresses		3006183	0					
ANR	3006234	ArgumentList	host		3006183	1					
ANR	3006235	Argument	host		3006183	0					
ANR	3006236	Identifier	host		3006183	0					
ANR	3006237	Argument	socktype		3006183	1					
ANR	3006238	Identifier	socktype		3006183	0					
ANR	3006239	Argument	& psal		3006183	2					
ANR	3006240	UnaryOperationExpression	& psal		3006183	0					
ANR	3006241	UnaryOperator	&		3006183	0					
ANR	3006242	Identifier	psal		3006183	1					
ANR	3006243	Argument	error_string		3006183	3					
ANR	3006244	Identifier	error_string		3006183	0					
ANR	3006245	IfStatement	if ( num_addrs == 0 )		3006183	7					
ANR	3006246	Condition	num_addrs == 0	795:5:19682:19695	3006183	0	True				
ANR	3006247	EqualityExpression	num_addrs == 0		3006183	0		==			
ANR	3006248	Identifier	num_addrs		3006183	0					
ANR	3006249	PrimaryExpression	0		3006183	1					
ANR	3006250	CompoundStatement		13:21:307:307	3006183	1					
ANR	3006251	ReturnStatement	return - 1 ;	797:2:19740:19749	3006183	0	True				
ANR	3006252	UnaryOperationExpression	- 1		3006183	0					
ANR	3006253	UnaryOperator	-		3006183	0					
ANR	3006254	PrimaryExpression	1		3006183	1					
ANR	3006255	IfStatement	if ( timeout )		3006183	8					
ANR	3006256	Condition	timeout	800:5:19760:19766	3006183	0	True				
ANR	3006257	Identifier	timeout		3006183	0					
ANR	3006258	CompoundStatement		18:14:378:378	3006183	1					
ANR	3006259	ExpressionStatement	"memcpy ( & working_timeout , timeout , sizeof ( working_timeout ) )"	801:2:19773:19831	3006183	0	True				
ANR	3006260	CallExpression	"memcpy ( & working_timeout , timeout , sizeof ( working_timeout ) )"		3006183	0					
ANR	3006261	Callee	memcpy		3006183	0					
ANR	3006262	Identifier	memcpy		3006183	0					
ANR	3006263	ArgumentList	& working_timeout		3006183	1					
ANR	3006264	Argument	& working_timeout		3006183	0					
ANR	3006265	UnaryOperationExpression	& working_timeout		3006183	0					
ANR	3006266	UnaryOperator	&		3006183	0					
ANR	3006267	Identifier	working_timeout		3006183	1					
ANR	3006268	Argument	timeout		3006183	1					
ANR	3006269	Identifier	timeout		3006183	0					
ANR	3006270	Argument	sizeof ( working_timeout )		3006183	2					
ANR	3006271	SizeofExpression	sizeof ( working_timeout )		3006183	0					
ANR	3006272	Sizeof	sizeof		3006183	0					
ANR	3006273	SizeofOperand	working_timeout		3006183	1					
ANR	3006274	ExpressionStatement	"gettimeofday ( & limit_time , NULL )"	803:2:19857:19888	3006183	1	True				
ANR	3006275	CallExpression	"gettimeofday ( & limit_time , NULL )"		3006183	0					
ANR	3006276	Callee	gettimeofday		3006183	0					
ANR	3006277	Identifier	gettimeofday		3006183	0					
ANR	3006278	ArgumentList	& limit_time		3006183	1					
ANR	3006279	Argument	& limit_time		3006183	0					
ANR	3006280	UnaryOperationExpression	& limit_time		3006183	0					
ANR	3006281	UnaryOperator	&		3006183	0					
ANR	3006282	Identifier	limit_time		3006183	1					
ANR	3006283	Argument	NULL		3006183	1					
ANR	3006284	Identifier	NULL		3006183	0					
ANR	3006285	ExpressionStatement	limit_time . tv_sec += working_timeout . tv_sec	804:2:19892:19935	3006183	2	True				
ANR	3006286	AssignmentExpression	limit_time . tv_sec += working_timeout . tv_sec		3006183	0		+=			
ANR	3006287	MemberAccess	limit_time . tv_sec		3006183	0					
ANR	3006288	Identifier	limit_time		3006183	0					
ANR	3006289	Identifier	tv_sec		3006183	1					
ANR	3006290	MemberAccess	working_timeout . tv_sec		3006183	1					
ANR	3006291	Identifier	working_timeout		3006183	0					
ANR	3006292	Identifier	tv_sec		3006183	1					
ANR	3006293	ExpressionStatement	limit_time . tv_usec += working_timeout . tv_usec	805:2:19939:19984	3006183	3	True				
ANR	3006294	AssignmentExpression	limit_time . tv_usec += working_timeout . tv_usec		3006183	0		+=			
ANR	3006295	MemberAccess	limit_time . tv_usec		3006183	0					
ANR	3006296	Identifier	limit_time		3006183	0					
ANR	3006297	Identifier	tv_usec		3006183	1					
ANR	3006298	MemberAccess	working_timeout . tv_usec		3006183	1					
ANR	3006299	Identifier	working_timeout		3006183	0					
ANR	3006300	Identifier	tv_usec		3006183	1					
ANR	3006301	IfStatement	if ( limit_time . tv_usec >= 1000000 )		3006183	4					
ANR	3006302	Condition	limit_time . tv_usec >= 1000000	806:6:19992:20020	3006183	0	True				
ANR	3006303	RelationalExpression	limit_time . tv_usec >= 1000000		3006183	0		>=			
ANR	3006304	MemberAccess	limit_time . tv_usec		3006183	0					
ANR	3006305	Identifier	limit_time		3006183	0					
ANR	3006306	Identifier	tv_usec		3006183	1					
ANR	3006307	PrimaryExpression	1000000		3006183	1					
ANR	3006308	CompoundStatement		24:37:632:632	3006183	1					
ANR	3006309	ExpressionStatement	limit_time . tv_usec -= 1000000	807:3:20028:20057	3006183	0	True				
ANR	3006310	AssignmentExpression	limit_time . tv_usec -= 1000000		3006183	0		-=			
ANR	3006311	MemberAccess	limit_time . tv_usec		3006183	0					
ANR	3006312	Identifier	limit_time		3006183	0					
ANR	3006313	Identifier	tv_usec		3006183	1					
ANR	3006314	PrimaryExpression	1000000		3006183	1					
ANR	3006315	ExpressionStatement	limit_time . tv_sec ++	808:3:20062:20081	3006183	1	True				
ANR	3006316	PostIncDecOperationExpression	limit_time . tv_sec ++		3006183	0					
ANR	3006317	MemberAccess	limit_time . tv_sec		3006183	0					
ANR	3006318	Identifier	limit_time		3006183	0					
ANR	3006319	Identifier	tv_sec		3006183	1					
ANR	3006320	IncDec	++		3006183	1					
ANR	3006321	ForStatement	for ( sal = psal ; ! fatal && * sal != NULL ; sal ++ )		3006183	9					
ANR	3006322	ForInit	sal = psal ;	813:6:20104:20114	3006183	0	True				
ANR	3006323	AssignmentExpression	sal = psal		3006183	0		=			
ANR	3006324	Identifier	sal		3006183	0					
ANR	3006325	Identifier	psal		3006183	1					
ANR	3006326	Condition	! fatal && * sal != NULL	813:18:20116:20137	3006183	1	True				
ANR	3006327	AndExpression	! fatal && * sal != NULL		3006183	0		&&			
ANR	3006328	UnaryOperationExpression	! fatal		3006183	0					
ANR	3006329	UnaryOperator	!		3006183	0					
ANR	3006330	Identifier	fatal		3006183	1					
ANR	3006331	EqualityExpression	* sal != NULL		3006183	1		!=			
ANR	3006332	UnaryOperationExpression	* sal		3006183	0					
ANR	3006333	UnaryOperator	*		3006183	0					
ANR	3006334	Identifier	sal		3006183	1					
ANR	3006335	Identifier	NULL		3006183	1					
ANR	3006336	PostIncDecOperationExpression	sal ++	813:42:20140:20144	3006183	2	True				
ANR	3006337	Identifier	sal		3006183	0					
ANR	3006338	IncDec	++		3006183	1					
ANR	3006339	CompoundStatement		31:49:756:756	3006183	3					
ANR	3006340	ExpressionStatement	sa = * sal	814:2:20151:20160	3006183	0	True				
ANR	3006341	AssignmentExpression	sa = * sal		3006183	0		=			
ANR	3006342	Identifier	sa		3006183	0					
ANR	3006343	UnaryOperationExpression	* sal		3006183	1					
ANR	3006344	UnaryOperator	*		3006183	0					
ANR	3006345	Identifier	sal		3006183	1					
ANR	3006346	ExpressionStatement	"sock = socket ( sa -> sa_family , socktype , 0 )"	817:2:20206:20247	3006183	1	True				
ANR	3006347	AssignmentExpression	"sock = socket ( sa -> sa_family , socktype , 0 )"		3006183	0		=			
ANR	3006348	Identifier	sock		3006183	0					
ANR	3006349	CallExpression	"socket ( sa -> sa_family , socktype , 0 )"		3006183	1					
ANR	3006350	Callee	socket		3006183	0					
ANR	3006351	Identifier	socket		3006183	0					
ANR	3006352	ArgumentList	sa -> sa_family		3006183	1					
ANR	3006353	Argument	sa -> sa_family		3006183	0					
ANR	3006354	PtrMemberAccess	sa -> sa_family		3006183	0					
ANR	3006355	Identifier	sa		3006183	0					
ANR	3006356	Identifier	sa_family		3006183	1					
ANR	3006357	Argument	socktype		3006183	1					
ANR	3006358	Identifier	socktype		3006183	0					
ANR	3006359	Argument	0		3006183	2					
ANR	3006360	PrimaryExpression	0		3006183	0					
ANR	3006361	IfStatement	if ( sock == SOCK_ERR )		3006183	2					
ANR	3006362	Condition	sock == SOCK_ERR	819:6:20256:20271	3006183	0	True				
ANR	3006363	EqualityExpression	sock == SOCK_ERR		3006183	0		==			
ANR	3006364	Identifier	sock		3006183	0					
ANR	3006365	Identifier	SOCK_ERR		3006183	1					
ANR	3006366	CompoundStatement		37:24:883:883	3006183	1					
ANR	3006367	ContinueStatement	continue ;	820:3:20279:20287	3006183	0	True				
ANR	3006368	SwitchStatement	switch ( sa -> sa_family )		3006183	3					
ANR	3006369	Condition	sa -> sa_family	823:10:20304:20316	3006183	0	True				
ANR	3006370	PtrMemberAccess	sa -> sa_family		3006183	0					
ANR	3006371	Identifier	sa		3006183	0					
ANR	3006372	Identifier	sa_family		3006183	1					
ANR	3006373	CompoundStatement		41:25:928:928	3006183	1					
ANR	3006374	Label	case AF_INET6 :	825:3:20358:20371	3006183	0	True				
ANR	3006375	Identifier	AF_INET6		3006183	0					
ANR	3006376	IfStatement	"if ( ! bindto || strchr ( bindto , ':' ) )"		3006183	1					
ANR	3006377	Condition	"! bindto || strchr ( bindto , ':' )"	826:8:20381:20410	3006183	0	True				
ANR	3006378	OrExpression	"! bindto || strchr ( bindto , ':' )"		3006183	0		||			
ANR	3006379	UnaryOperationExpression	! bindto		3006183	0					
ANR	3006380	UnaryOperator	!		3006183	0					
ANR	3006381	Identifier	bindto		3006183	1					
ANR	3006382	CallExpression	"strchr ( bindto , ':' )"		3006183	1					
ANR	3006383	Callee	strchr		3006183	0					
ANR	3006384	Identifier	strchr		3006183	0					
ANR	3006385	ArgumentList	bindto		3006183	1					
ANR	3006386	Argument	bindto		3006183	0					
ANR	3006387	Identifier	bindto		3006183	0					
ANR	3006388	Argument	':'		3006183	1					
ANR	3006389	PrimaryExpression	':'		3006183	0					
ANR	3006390	CompoundStatement		44:40:1022:1022	3006183	1					
ANR	3006391	ExpressionStatement	( ( struct sockaddr_in6 * ) sa ) -> sin6_family = sa -> sa_family	827:5:20420:20476	3006183	0	True				
ANR	3006392	AssignmentExpression	( ( struct sockaddr_in6 * ) sa ) -> sin6_family = sa -> sa_family		3006183	0		=			
ANR	3006393	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_family		3006183	0					
ANR	3006394	CastExpression	( struct sockaddr_in6 * ) sa		3006183	0					
ANR	3006395	CastTarget	struct sockaddr_in6 *		3006183	0					
ANR	3006396	Identifier	sa		3006183	1					
ANR	3006397	Identifier	sin6_family		3006183	1					
ANR	3006398	PtrMemberAccess	sa -> sa_family		3006183	1					
ANR	3006399	Identifier	sa		3006183	0					
ANR	3006400	Identifier	sa_family		3006183	1					
ANR	3006401	ExpressionStatement	( ( struct sockaddr_in6 * ) sa ) -> sin6_port = htons ( port )	828:5:20483:20535	3006183	1	True				
ANR	3006402	AssignmentExpression	( ( struct sockaddr_in6 * ) sa ) -> sin6_port = htons ( port )		3006183	0		=			
ANR	3006403	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3006183	0					
ANR	3006404	CastExpression	( struct sockaddr_in6 * ) sa		3006183	0					
ANR	3006405	CastTarget	struct sockaddr_in6 *		3006183	0					
ANR	3006406	Identifier	sa		3006183	1					
ANR	3006407	Identifier	sin6_port		3006183	1					
ANR	3006408	CallExpression	htons ( port )		3006183	1					
ANR	3006409	Callee	htons		3006183	0					
ANR	3006410	Identifier	htons		3006183	0					
ANR	3006411	ArgumentList	port		3006183	1					
ANR	3006412	Argument	port		3006183	0					
ANR	3006413	Identifier	port		3006183	0					
ANR	3006414	ExpressionStatement	socklen = sizeof ( struct sockaddr_in6 )	829:5:20542:20579	3006183	2	True				
ANR	3006415	AssignmentExpression	socklen = sizeof ( struct sockaddr_in6 )		3006183	0		=			
ANR	3006416	Identifier	socklen		3006183	0					
ANR	3006417	SizeofExpression	sizeof ( struct sockaddr_in6 )		3006183	1					
ANR	3006418	Sizeof	sizeof		3006183	0					
ANR	3006419	SizeofOperand	struct sockaddr_in6		3006183	1					
ANR	3006420	ElseStatement	else		3006183	0					
ANR	3006421	CompoundStatement		48:11:1201:1201	3006183	0					
ANR	3006422	ExpressionStatement	socklen = 0	831:5:20599:20610	3006183	0	True				
ANR	3006423	AssignmentExpression	socklen = 0		3006183	0		=			
ANR	3006424	Identifier	socklen		3006183	0					
ANR	3006425	PrimaryExpression	0		3006183	1					
ANR	3006426	ExpressionStatement	sa = NULL	832:5:20617:20626	3006183	1	True				
ANR	3006427	AssignmentExpression	sa = NULL		3006183	0		=			
ANR	3006428	Identifier	sa		3006183	0					
ANR	3006429	Identifier	NULL		3006183	1					
ANR	3006430	BreakStatement	break ;	834:4:20638:20643	3006183	2	True				
ANR	3006431	Label	case AF_INET :	836:3:20655:20667	3006183	3	True				
ANR	3006432	Identifier	AF_INET		3006183	0					
ANR	3006433	ExpressionStatement	( ( struct sockaddr_in * ) sa ) -> sin_family = sa -> sa_family	837:4:20673:20727	3006183	4	True				
ANR	3006434	AssignmentExpression	( ( struct sockaddr_in * ) sa ) -> sin_family = sa -> sa_family		3006183	0		=			
ANR	3006435	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_family		3006183	0					
ANR	3006436	CastExpression	( struct sockaddr_in * ) sa		3006183	0					
ANR	3006437	CastTarget	struct sockaddr_in *		3006183	0					
ANR	3006438	Identifier	sa		3006183	1					
ANR	3006439	Identifier	sin_family		3006183	1					
ANR	3006440	PtrMemberAccess	sa -> sa_family		3006183	1					
ANR	3006441	Identifier	sa		3006183	0					
ANR	3006442	Identifier	sa_family		3006183	1					
ANR	3006443	ExpressionStatement	( ( struct sockaddr_in * ) sa ) -> sin_port = htons ( port )	838:4:20733:20783	3006183	5	True				
ANR	3006444	AssignmentExpression	( ( struct sockaddr_in * ) sa ) -> sin_port = htons ( port )		3006183	0		=			
ANR	3006445	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_port		3006183	0					
ANR	3006446	CastExpression	( struct sockaddr_in * ) sa		3006183	0					
ANR	3006447	CastTarget	struct sockaddr_in *		3006183	0					
ANR	3006448	Identifier	sa		3006183	1					
ANR	3006449	Identifier	sin_port		3006183	1					
ANR	3006450	CallExpression	htons ( port )		3006183	1					
ANR	3006451	Callee	htons		3006183	0					
ANR	3006452	Identifier	htons		3006183	0					
ANR	3006453	ArgumentList	port		3006183	1					
ANR	3006454	Argument	port		3006183	0					
ANR	3006455	Identifier	port		3006183	0					
ANR	3006456	ExpressionStatement	socklen = sizeof ( struct sockaddr_in )	839:4:20789:20825	3006183	6	True				
ANR	3006457	AssignmentExpression	socklen = sizeof ( struct sockaddr_in )		3006183	0		=			
ANR	3006458	Identifier	socklen		3006183	0					
ANR	3006459	SizeofExpression	sizeof ( struct sockaddr_in )		3006183	1					
ANR	3006460	Sizeof	sizeof		3006183	0					
ANR	3006461	SizeofOperand	struct sockaddr_in		3006183	1					
ANR	3006462	BreakStatement	break ;	840:4:20831:20836	3006183	7	True				
ANR	3006463	Label	default :	841:3:20841:20848	3006183	8	True				
ANR	3006464	Identifier	default		3006183	0					
ANR	3006465	ExpressionStatement	socklen = 0	843:4:20879:20890	3006183	9	True				
ANR	3006466	AssignmentExpression	socklen = 0		3006183	0		=			
ANR	3006467	Identifier	socklen		3006183	0					
ANR	3006468	PrimaryExpression	0		3006183	1					
ANR	3006469	ExpressionStatement	sa = NULL	844:4:20896:20905	3006183	10	True				
ANR	3006470	AssignmentExpression	sa = NULL		3006183	0		=			
ANR	3006471	Identifier	sa		3006183	0					
ANR	3006472	Identifier	NULL		3006183	1					
ANR	3006473	IfStatement	if ( sa )		3006183	4					
ANR	3006474	Condition	sa	847:6:20918:20919	3006183	0	True				
ANR	3006475	Identifier	sa		3006183	0					
ANR	3006476	CompoundStatement		65:10:1531:1531	3006183	1					
ANR	3006477	IfStatement	if ( bindto )		3006183	0					
ANR	3006478	Condition	bindto	850:7:20967:20972	3006183	0	True				
ANR	3006479	Identifier	bindto		3006183	0					
ANR	3006480	CompoundStatement		70:4:1633:1658	3006183	1					
ANR	3006481	IdentifierDeclStatement	struct sockaddr * local_address = NULL ;	851:4:20981:21018	3006183	0	True				
ANR	3006482	IdentifierDecl	* local_address = NULL		3006183	0					
ANR	3006483	IdentifierDeclType	struct sockaddr *		3006183	0					
ANR	3006484	Identifier	local_address		3006183	1					
ANR	3006485	AssignmentExpression	* local_address = NULL		3006183	2		=			
ANR	3006486	Identifier	NULL		3006183	0					
ANR	3006487	Identifier	NULL		3006183	1					
ANR	3006488	IdentifierDeclStatement	int local_address_len = 0 ;	852:4:21024:21049	3006183	1	True				
ANR	3006489	IdentifierDecl	local_address_len = 0		3006183	0					
ANR	3006490	IdentifierDeclType	int		3006183	0					
ANR	3006491	Identifier	local_address_len		3006183	1					
ANR	3006492	AssignmentExpression	local_address_len = 0		3006183	2		=			
ANR	3006493	Identifier	local_address_len		3006183	0					
ANR	3006494	PrimaryExpression	0		3006183	1					
ANR	3006495	IfStatement	if ( sa -> sa_family == AF_INET )		3006183	2					
ANR	3006496	Condition	sa -> sa_family == AF_INET	854:8:21060:21083	3006183	0	True				
ANR	3006497	EqualityExpression	sa -> sa_family == AF_INET		3006183	0		==			
ANR	3006498	PtrMemberAccess	sa -> sa_family		3006183	0					
ANR	3006499	Identifier	sa		3006183	0					
ANR	3006500	Identifier	sa_family		3006183	1					
ANR	3006501	Identifier	AF_INET		3006183	1					
ANR	3006502	CompoundStatement		73:5:1702:1763	3006183	1					
ANR	3006503	IdentifierDeclStatement	struct sockaddr_in * in4 = emalloc ( sizeof ( struct sockaddr_in ) ) ;	855:5:21093:21154	3006183	0	True				
ANR	3006504	IdentifierDecl	* in4 = emalloc ( sizeof ( struct sockaddr_in ) )		3006183	0					
ANR	3006505	IdentifierDeclType	struct sockaddr_in *		3006183	0					
ANR	3006506	Identifier	in4		3006183	1					
ANR	3006507	AssignmentExpression	* in4 = emalloc ( sizeof ( struct sockaddr_in ) )		3006183	2		=			
ANR	3006508	Identifier	in4		3006183	0					
ANR	3006509	CallExpression	emalloc ( sizeof ( struct sockaddr_in ) )		3006183	1					
ANR	3006510	Callee	emalloc		3006183	0					
ANR	3006511	Identifier	emalloc		3006183	0					
ANR	3006512	ArgumentList	sizeof ( struct sockaddr_in )		3006183	1					
ANR	3006513	Argument	sizeof ( struct sockaddr_in )		3006183	0					
ANR	3006514	SizeofExpression	sizeof ( struct sockaddr_in )		3006183	0					
ANR	3006515	Sizeof	sizeof		3006183	0					
ANR	3006516	SizeofOperand	struct sockaddr_in		3006183	1					
ANR	3006517	ExpressionStatement	local_address = ( struct sockaddr * ) in4	857:5:21162:21199	3006183	1	True				
ANR	3006518	AssignmentExpression	local_address = ( struct sockaddr * ) in4		3006183	0		=			
ANR	3006519	Identifier	local_address		3006183	0					
ANR	3006520	CastExpression	( struct sockaddr * ) in4		3006183	1					
ANR	3006521	CastTarget	struct sockaddr *		3006183	0					
ANR	3006522	Identifier	in4		3006183	1					
ANR	3006523	ExpressionStatement	local_address_len = sizeof ( struct sockaddr_in )	858:5:21206:21252	3006183	2	True				
ANR	3006524	AssignmentExpression	local_address_len = sizeof ( struct sockaddr_in )		3006183	0		=			
ANR	3006525	Identifier	local_address_len		3006183	0					
ANR	3006526	SizeofExpression	sizeof ( struct sockaddr_in )		3006183	1					
ANR	3006527	Sizeof	sizeof		3006183	0					
ANR	3006528	SizeofOperand	struct sockaddr_in		3006183	1					
ANR	3006529	ExpressionStatement	in4 -> sin_family = sa -> sa_family	860:5:21260:21291	3006183	3	True				
ANR	3006530	AssignmentExpression	in4 -> sin_family = sa -> sa_family		3006183	0		=			
ANR	3006531	PtrMemberAccess	in4 -> sin_family		3006183	0					
ANR	3006532	Identifier	in4		3006183	0					
ANR	3006533	Identifier	sin_family		3006183	1					
ANR	3006534	PtrMemberAccess	sa -> sa_family		3006183	1					
ANR	3006535	Identifier	sa		3006183	0					
ANR	3006536	Identifier	sa_family		3006183	1					
ANR	3006537	ExpressionStatement	in4 -> sin_port = htons ( bindport )	861:5:21298:21329	3006183	4	True				
ANR	3006538	AssignmentExpression	in4 -> sin_port = htons ( bindport )		3006183	0		=			
ANR	3006539	PtrMemberAccess	in4 -> sin_port		3006183	0					
ANR	3006540	Identifier	in4		3006183	0					
ANR	3006541	Identifier	sin_port		3006183	1					
ANR	3006542	CallExpression	htons ( bindport )		3006183	1					
ANR	3006543	Callee	htons		3006183	0					
ANR	3006544	Identifier	htons		3006183	0					
ANR	3006545	ArgumentList	bindport		3006183	1					
ANR	3006546	Argument	bindport		3006183	0					
ANR	3006547	Identifier	bindport		3006183	0					
ANR	3006548	IfStatement	"if ( ! inet_aton ( bindto , & in4 -> sin_addr ) )"		3006183	5					
ANR	3006549	Condition	"! inet_aton ( bindto , & in4 -> sin_addr )"	862:9:21340:21373	3006183	0	True				
ANR	3006550	UnaryOperationExpression	"! inet_aton ( bindto , & in4 -> sin_addr )"		3006183	0					
ANR	3006551	UnaryOperator	!		3006183	0					
ANR	3006552	CallExpression	"inet_aton ( bindto , & in4 -> sin_addr )"		3006183	1					
ANR	3006553	Callee	inet_aton		3006183	0					
ANR	3006554	Identifier	inet_aton		3006183	0					
ANR	3006555	ArgumentList	bindto		3006183	1					
ANR	3006556	Argument	bindto		3006183	0					
ANR	3006557	Identifier	bindto		3006183	0					
ANR	3006558	Argument	& in4 -> sin_addr		3006183	1					
ANR	3006559	UnaryOperationExpression	& in4 -> sin_addr		3006183	0					
ANR	3006560	UnaryOperator	&		3006183	0					
ANR	3006561	PtrMemberAccess	in4 -> sin_addr		3006183	1					
ANR	3006562	Identifier	in4		3006183	0					
ANR	3006563	Identifier	sin_addr		3006183	1					
ANR	3006564	CompoundStatement		80:45:1985:1985	3006183	1					
ANR	3006565	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid IP Address: %s"" , bindto )"	863:6:21384:21451	3006183	0	True				
ANR	3006566	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid IP Address: %s"" , bindto )"		3006183	0					
ANR	3006567	Callee	php_error_docref		3006183	0					
ANR	3006568	Identifier	php_error_docref		3006183	0					
ANR	3006569	ArgumentList	NULL		3006183	1					
ANR	3006570	Argument	NULL		3006183	0					
ANR	3006571	Identifier	NULL		3006183	0					
ANR	3006572	Argument	E_WARNING		3006183	1					
ANR	3006573	Identifier	E_WARNING		3006183	0					
ANR	3006574	Argument	"""Invalid IP Address: %s"""		3006183	2					
ANR	3006575	PrimaryExpression	"""Invalid IP Address: %s"""		3006183	0					
ANR	3006576	Argument	bindto		3006183	3					
ANR	3006577	Identifier	bindto		3006183	0					
ANR	3006578	GotoStatement	goto skip_bind ;	864:6:21459:21473	3006183	1	True				
ANR	3006579	Identifier	skip_bind		3006183	0					
ANR	3006580	ExpressionStatement	"memset ( & ( in4 -> sin_zero ) , 0 , sizeof ( in4 -> sin_zero ) )"	866:5:21487:21537	3006183	6	True				
ANR	3006581	CallExpression	"memset ( & ( in4 -> sin_zero ) , 0 , sizeof ( in4 -> sin_zero ) )"		3006183	0					
ANR	3006582	Callee	memset		3006183	0					
ANR	3006583	Identifier	memset		3006183	0					
ANR	3006584	ArgumentList	& ( in4 -> sin_zero )		3006183	1					
ANR	3006585	Argument	& ( in4 -> sin_zero )		3006183	0					
ANR	3006586	UnaryOperationExpression	& ( in4 -> sin_zero )		3006183	0					
ANR	3006587	UnaryOperator	&		3006183	0					
ANR	3006588	PtrMemberAccess	in4 -> sin_zero		3006183	1					
ANR	3006589	Identifier	in4		3006183	0					
ANR	3006590	Identifier	sin_zero		3006183	1					
ANR	3006591	Argument	0		3006183	1					
ANR	3006592	PrimaryExpression	0		3006183	0					
ANR	3006593	Argument	sizeof ( in4 -> sin_zero )		3006183	2					
ANR	3006594	SizeofExpression	sizeof ( in4 -> sin_zero )		3006183	0					
ANR	3006595	Sizeof	sizeof		3006183	0					
ANR	3006596	PtrMemberAccess	in4 -> sin_zero		3006183	1					
ANR	3006597	Identifier	in4		3006183	0					
ANR	3006598	Identifier	sin_zero		3006183	1					
ANR	3006599	ElseStatement	else		3006183	0					
ANR	3006600	CompoundStatement		88:5:2214:2277	3006183	0					
ANR	3006601	IdentifierDeclStatement	struct sockaddr_in6 * in6 = emalloc ( sizeof ( struct sockaddr_in6 ) ) ;	870:5:21605:21668	3006183	0	True				
ANR	3006602	IdentifierDecl	* in6 = emalloc ( sizeof ( struct sockaddr_in6 ) )		3006183	0					
ANR	3006603	IdentifierDeclType	struct sockaddr_in6 *		3006183	0					
ANR	3006604	Identifier	in6		3006183	1					
ANR	3006605	AssignmentExpression	* in6 = emalloc ( sizeof ( struct sockaddr_in6 ) )		3006183	2		=			
ANR	3006606	Identifier	in6		3006183	0					
ANR	3006607	CallExpression	emalloc ( sizeof ( struct sockaddr_in6 ) )		3006183	1					
ANR	3006608	Callee	emalloc		3006183	0					
ANR	3006609	Identifier	emalloc		3006183	0					
ANR	3006610	ArgumentList	sizeof ( struct sockaddr_in6 )		3006183	1					
ANR	3006611	Argument	sizeof ( struct sockaddr_in6 )		3006183	0					
ANR	3006612	SizeofExpression	sizeof ( struct sockaddr_in6 )		3006183	0					
ANR	3006613	Sizeof	sizeof		3006183	0					
ANR	3006614	SizeofOperand	struct sockaddr_in6		3006183	1					
ANR	3006615	ExpressionStatement	local_address = ( struct sockaddr * ) in6	872:5:21676:21713	3006183	1	True				
ANR	3006616	AssignmentExpression	local_address = ( struct sockaddr * ) in6		3006183	0		=			
ANR	3006617	Identifier	local_address		3006183	0					
ANR	3006618	CastExpression	( struct sockaddr * ) in6		3006183	1					
ANR	3006619	CastTarget	struct sockaddr *		3006183	0					
ANR	3006620	Identifier	in6		3006183	1					
ANR	3006621	ExpressionStatement	local_address_len = sizeof ( struct sockaddr_in6 )	873:5:21720:21767	3006183	2	True				
ANR	3006622	AssignmentExpression	local_address_len = sizeof ( struct sockaddr_in6 )		3006183	0		=			
ANR	3006623	Identifier	local_address_len		3006183	0					
ANR	3006624	SizeofExpression	sizeof ( struct sockaddr_in6 )		3006183	1					
ANR	3006625	Sizeof	sizeof		3006183	0					
ANR	3006626	SizeofOperand	struct sockaddr_in6		3006183	1					
ANR	3006627	ExpressionStatement	in6 -> sin6_family = sa -> sa_family	875:5:21775:21807	3006183	3	True				
ANR	3006628	AssignmentExpression	in6 -> sin6_family = sa -> sa_family		3006183	0		=			
ANR	3006629	PtrMemberAccess	in6 -> sin6_family		3006183	0					
ANR	3006630	Identifier	in6		3006183	0					
ANR	3006631	Identifier	sin6_family		3006183	1					
ANR	3006632	PtrMemberAccess	sa -> sa_family		3006183	1					
ANR	3006633	Identifier	sa		3006183	0					
ANR	3006634	Identifier	sa_family		3006183	1					
ANR	3006635	ExpressionStatement	in6 -> sin6_port = htons ( bindport )	876:5:21814:21846	3006183	4	True				
ANR	3006636	AssignmentExpression	in6 -> sin6_port = htons ( bindport )		3006183	0		=			
ANR	3006637	PtrMemberAccess	in6 -> sin6_port		3006183	0					
ANR	3006638	Identifier	in6		3006183	0					
ANR	3006639	Identifier	sin6_port		3006183	1					
ANR	3006640	CallExpression	htons ( bindport )		3006183	1					
ANR	3006641	Callee	htons		3006183	0					
ANR	3006642	Identifier	htons		3006183	0					
ANR	3006643	ArgumentList	bindport		3006183	1					
ANR	3006644	Argument	bindport		3006183	0					
ANR	3006645	Identifier	bindport		3006183	0					
ANR	3006646	IfStatement	"if ( inet_pton ( AF_INET6 , bindto , & in6 -> sin6_addr ) < 1 )"		3006183	5					
ANR	3006647	Condition	"inet_pton ( AF_INET6 , bindto , & in6 -> sin6_addr ) < 1"	877:9:21857:21904	3006183	0	True				
ANR	3006648	RelationalExpression	"inet_pton ( AF_INET6 , bindto , & in6 -> sin6_addr ) < 1"		3006183	0		<			
ANR	3006649	CallExpression	"inet_pton ( AF_INET6 , bindto , & in6 -> sin6_addr )"		3006183	0					
ANR	3006650	Callee	inet_pton		3006183	0					
ANR	3006651	Identifier	inet_pton		3006183	0					
ANR	3006652	ArgumentList	AF_INET6		3006183	1					
ANR	3006653	Argument	AF_INET6		3006183	0					
ANR	3006654	Identifier	AF_INET6		3006183	0					
ANR	3006655	Argument	bindto		3006183	1					
ANR	3006656	Identifier	bindto		3006183	0					
ANR	3006657	Argument	& in6 -> sin6_addr		3006183	2					
ANR	3006658	UnaryOperationExpression	& in6 -> sin6_addr		3006183	0					
ANR	3006659	UnaryOperator	&		3006183	0					
ANR	3006660	PtrMemberAccess	in6 -> sin6_addr		3006183	1					
ANR	3006661	Identifier	in6		3006183	0					
ANR	3006662	Identifier	sin6_addr		3006183	1					
ANR	3006663	PrimaryExpression	1		3006183	1					
ANR	3006664	CompoundStatement		95:59:2516:2516	3006183	1					
ANR	3006665	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid IP Address: %s"" , bindto )"	878:6:21915:21982	3006183	0	True				
ANR	3006666	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid IP Address: %s"" , bindto )"		3006183	0					
ANR	3006667	Callee	php_error_docref		3006183	0					
ANR	3006668	Identifier	php_error_docref		3006183	0					
ANR	3006669	ArgumentList	NULL		3006183	1					
ANR	3006670	Argument	NULL		3006183	0					
ANR	3006671	Identifier	NULL		3006183	0					
ANR	3006672	Argument	E_WARNING		3006183	1					
ANR	3006673	Identifier	E_WARNING		3006183	0					
ANR	3006674	Argument	"""Invalid IP Address: %s"""		3006183	2					
ANR	3006675	PrimaryExpression	"""Invalid IP Address: %s"""		3006183	0					
ANR	3006676	Argument	bindto		3006183	3					
ANR	3006677	Identifier	bindto		3006183	0					
ANR	3006678	GotoStatement	goto skip_bind ;	879:6:21990:22004	3006183	1	True				
ANR	3006679	Identifier	skip_bind		3006183	0					
ANR	3006680	IfStatement	"if ( ! local_address || bind ( sock , local_address , local_address_len ) )"		3006183	3					
ANR	3006681	Condition	"! local_address || bind ( sock , local_address , local_address_len )"	884:8:22035:22096	3006183	0	True				
ANR	3006682	OrExpression	"! local_address || bind ( sock , local_address , local_address_len )"		3006183	0		||			
ANR	3006683	UnaryOperationExpression	! local_address		3006183	0					
ANR	3006684	UnaryOperator	!		3006183	0					
ANR	3006685	Identifier	local_address		3006183	1					
ANR	3006686	CallExpression	"bind ( sock , local_address , local_address_len )"		3006183	1					
ANR	3006687	Callee	bind		3006183	0					
ANR	3006688	Identifier	bind		3006183	0					
ANR	3006689	ArgumentList	sock		3006183	1					
ANR	3006690	Argument	sock		3006183	0					
ANR	3006691	Identifier	sock		3006183	0					
ANR	3006692	Argument	local_address		3006183	1					
ANR	3006693	Identifier	local_address		3006183	0					
ANR	3006694	Argument	local_address_len		3006183	2					
ANR	3006695	Identifier	local_address_len		3006183	0					
ANR	3006696	CompoundStatement		102:72:2708:2708	3006183	1					
ANR	3006697	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""failed to bind to '%s:%d', system said: %s"" , bindto , bindport , strerror ( errno ) )"	885:5:22106:22220	3006183	0	True				
ANR	3006698	CallExpression	"php_error_docref ( NULL , E_WARNING , ""failed to bind to '%s:%d', system said: %s"" , bindto , bindport , strerror ( errno ) )"		3006183	0					
ANR	3006699	Callee	php_error_docref		3006183	0					
ANR	3006700	Identifier	php_error_docref		3006183	0					
ANR	3006701	ArgumentList	NULL		3006183	1					
ANR	3006702	Argument	NULL		3006183	0					
ANR	3006703	Identifier	NULL		3006183	0					
ANR	3006704	Argument	E_WARNING		3006183	1					
ANR	3006705	Identifier	E_WARNING		3006183	0					
ANR	3006706	Argument	"""failed to bind to '%s:%d', system said: %s"""		3006183	2					
ANR	3006707	PrimaryExpression	"""failed to bind to '%s:%d', system said: %s"""		3006183	0					
ANR	3006708	Argument	bindto		3006183	3					
ANR	3006709	Identifier	bindto		3006183	0					
ANR	3006710	Argument	bindport		3006183	4					
ANR	3006711	Identifier	bindport		3006183	0					
ANR	3006712	Argument	strerror ( errno )		3006183	5					
ANR	3006713	CallExpression	strerror ( errno )		3006183	0					
ANR	3006714	Callee	strerror		3006183	0					
ANR	3006715	Identifier	strerror		3006183	0					
ANR	3006716	ArgumentList	errno		3006183	1					
ANR	3006717	Argument	errno		3006183	0					
ANR	3006718	Identifier	errno		3006183	0					
ANR	3006719	Label	skip_bind :	887:0:22228:22237	3006183	4	True				
ANR	3006720	Identifier	skip_bind		3006183	0					
ANR	3006721	IfStatement	if ( local_address )		3006183	5					
ANR	3006722	Condition	local_address	888:8:22247:22259	3006183	0	True				
ANR	3006723	Identifier	local_address		3006183	0					
ANR	3006724	CompoundStatement		106:23:2871:2871	3006183	1					
ANR	3006725	ExpressionStatement	efree ( local_address )	889:5:22269:22289	3006183	0	True				
ANR	3006726	CallExpression	efree ( local_address )		3006183	0					
ANR	3006727	Callee	efree		3006183	0					
ANR	3006728	Identifier	efree		3006183	0					
ANR	3006729	ArgumentList	local_address		3006183	1					
ANR	3006730	Argument	local_address		3006183	0					
ANR	3006731	Identifier	local_address		3006183	0					
ANR	3006732	IfStatement	if ( error_string && * error_string )		3006183	1					
ANR	3006733	Condition	error_string && * error_string	893:7:22380:22408	3006183	0	True				
ANR	3006734	AndExpression	error_string && * error_string		3006183	0		&&			
ANR	3006735	Identifier	error_string		3006183	0					
ANR	3006736	UnaryOperationExpression	* error_string		3006183	1					
ANR	3006737	UnaryOperator	*		3006183	0					
ANR	3006738	Identifier	error_string		3006183	1					
ANR	3006739	CompoundStatement		111:38:3020:3020	3006183	1					
ANR	3006740	ExpressionStatement	zend_string_release ( * error_string )	894:4:22417:22451	3006183	0	True				
ANR	3006741	CallExpression	zend_string_release ( * error_string )		3006183	0					
ANR	3006742	Callee	zend_string_release		3006183	0					
ANR	3006743	Identifier	zend_string_release		3006183	0					
ANR	3006744	ArgumentList	* error_string		3006183	1					
ANR	3006745	Argument	* error_string		3006183	0					
ANR	3006746	UnaryOperationExpression	* error_string		3006183	0					
ANR	3006747	UnaryOperator	*		3006183	0					
ANR	3006748	Identifier	error_string		3006183	1					
ANR	3006749	ExpressionStatement	* error_string = NULL	895:4:22457:22477	3006183	1	True				
ANR	3006750	AssignmentExpression	* error_string = NULL		3006183	0		=			
ANR	3006751	UnaryOperationExpression	* error_string		3006183	0					
ANR	3006752	UnaryOperator	*		3006183	0					
ANR	3006753	Identifier	error_string		3006183	1					
ANR	3006754	Identifier	NULL		3006183	1					
ANR	3006755	CompoundStatement		118:4:3123:3134	3006183	2					
ANR	3006756	IdentifierDeclStatement	int val = 1 ;	900:4:22514:22525	3006183	0	True				
ANR	3006757	IdentifierDecl	val = 1		3006183	0					
ANR	3006758	IdentifierDeclType	int		3006183	0					
ANR	3006759	Identifier	val		3006183	1					
ANR	3006760	AssignmentExpression	val = 1		3006183	2		=			
ANR	3006761	Identifier	val		3006183	0					
ANR	3006762	PrimaryExpression	1		3006183	1					
ANR	3006763	IfStatement	if ( sockopts & STREAM_SOCKOP_SO_BROADCAST )		3006183	1					
ANR	3006764	Condition	sockopts & STREAM_SOCKOP_SO_BROADCAST	901:8:22535:22571	3006183	0	True				
ANR	3006765	BitAndExpression	sockopts & STREAM_SOCKOP_SO_BROADCAST		3006183	0		&			
ANR	3006766	Identifier	sockopts		3006183	0					
ANR	3006767	Identifier	STREAM_SOCKOP_SO_BROADCAST		3006183	1					
ANR	3006768	CompoundStatement		119:47:3183:3183	3006183	1					
ANR	3006769	ExpressionStatement	"setsockopt ( sock , SOL_SOCKET , SO_BROADCAST , ( char * ) & val , sizeof ( val ) )"	902:5:22581:22649	3006183	0	True				
ANR	3006770	CallExpression	"setsockopt ( sock , SOL_SOCKET , SO_BROADCAST , ( char * ) & val , sizeof ( val ) )"		3006183	0					
ANR	3006771	Callee	setsockopt		3006183	0					
ANR	3006772	Identifier	setsockopt		3006183	0					
ANR	3006773	ArgumentList	sock		3006183	1					
ANR	3006774	Argument	sock		3006183	0					
ANR	3006775	Identifier	sock		3006183	0					
ANR	3006776	Argument	SOL_SOCKET		3006183	1					
ANR	3006777	Identifier	SOL_SOCKET		3006183	0					
ANR	3006778	Argument	SO_BROADCAST		3006183	2					
ANR	3006779	Identifier	SO_BROADCAST		3006183	0					
ANR	3006780	Argument	( char * ) & val		3006183	3					
ANR	3006781	CastExpression	( char * ) & val		3006183	0					
ANR	3006782	CastTarget	char *		3006183	0					
ANR	3006783	UnaryOperationExpression	& val		3006183	1					
ANR	3006784	UnaryOperator	&		3006183	0					
ANR	3006785	Identifier	val		3006183	1					
ANR	3006786	Argument	sizeof ( val )		3006183	4					
ANR	3006787	SizeofExpression	sizeof ( val )		3006183	0					
ANR	3006788	Sizeof	sizeof		3006183	0					
ANR	3006789	SizeofOperand	val		3006183	1					
ANR	3006790	ExpressionStatement	"n = php_network_connect_socket ( sock , sa , socklen , asynchronous , timeout ? & working_timeout : NULL , error_string , error_code )"	906:3:22672:22806	3006183	3	True				
ANR	3006791	AssignmentExpression	"n = php_network_connect_socket ( sock , sa , socklen , asynchronous , timeout ? & working_timeout : NULL , error_string , error_code )"		3006183	0		=			
ANR	3006792	Identifier	n		3006183	0					
ANR	3006793	CallExpression	"php_network_connect_socket ( sock , sa , socklen , asynchronous , timeout ? & working_timeout : NULL , error_string , error_code )"		3006183	1					
ANR	3006794	Callee	php_network_connect_socket		3006183	0					
ANR	3006795	Identifier	php_network_connect_socket		3006183	0					
ANR	3006796	ArgumentList	sock		3006183	1					
ANR	3006797	Argument	sock		3006183	0					
ANR	3006798	Identifier	sock		3006183	0					
ANR	3006799	Argument	sa		3006183	1					
ANR	3006800	Identifier	sa		3006183	0					
ANR	3006801	Argument	socklen		3006183	2					
ANR	3006802	Identifier	socklen		3006183	0					
ANR	3006803	Argument	asynchronous		3006183	3					
ANR	3006804	Identifier	asynchronous		3006183	0					
ANR	3006805	Argument	timeout ? & working_timeout : NULL		3006183	4					
ANR	3006806	ConditionalExpression	timeout ? & working_timeout : NULL		3006183	0					
ANR	3006807	Condition	timeout		3006183	0					
ANR	3006808	Identifier	timeout		3006183	0					
ANR	3006809	UnaryOperationExpression	& working_timeout		3006183	1					
ANR	3006810	UnaryOperator	&		3006183	0					
ANR	3006811	Identifier	working_timeout		3006183	1					
ANR	3006812	Identifier	NULL		3006183	2					
ANR	3006813	Argument	error_string		3006183	5					
ANR	3006814	Identifier	error_string		3006183	0					
ANR	3006815	Argument	error_code		3006183	6					
ANR	3006816	Identifier	error_code		3006183	0					
ANR	3006817	IfStatement	if ( n != - 1 )		3006183	4					
ANR	3006818	Condition	n != - 1	910:7:22816:22822	3006183	0	True				
ANR	3006819	EqualityExpression	n != - 1		3006183	0		!=			
ANR	3006820	Identifier	n		3006183	0					
ANR	3006821	UnaryOperationExpression	- 1		3006183	1					
ANR	3006822	UnaryOperator	-		3006183	0					
ANR	3006823	PrimaryExpression	1		3006183	1					
ANR	3006824	CompoundStatement		128:16:3434:3434	3006183	1					
ANR	3006825	GotoStatement	goto connected ;	911:4:22831:22845	3006183	0	True				
ANR	3006826	Identifier	connected		3006183	0					
ANR	3006827	IfStatement	if ( timeout )		3006183	5					
ANR	3006828	Condition	timeout	916:7:22923:22929	3006183	0	True				
ANR	3006829	Identifier	timeout		3006183	0					
ANR	3006830	CompoundStatement		134:16:3541:3541	3006183	1					
ANR	3006831	ExpressionStatement	"gettimeofday ( & time_now , NULL )"	917:4:22938:22967	3006183	0	True				
ANR	3006832	CallExpression	"gettimeofday ( & time_now , NULL )"		3006183	0					
ANR	3006833	Callee	gettimeofday		3006183	0					
ANR	3006834	Identifier	gettimeofday		3006183	0					
ANR	3006835	ArgumentList	& time_now		3006183	1					
ANR	3006836	Argument	& time_now		3006183	0					
ANR	3006837	UnaryOperationExpression	& time_now		3006183	0					
ANR	3006838	UnaryOperator	&		3006183	0					
ANR	3006839	Identifier	time_now		3006183	1					
ANR	3006840	Argument	NULL		3006183	1					
ANR	3006841	Identifier	NULL		3006183	0					
ANR	3006842	Statement	if	919:4:22974:22975	3006183	1	True				
ANR	3006843	Statement	(	919:7:22977:22977	3006183	2	True				
ANR	3006844	Statement	timercmp	919:8:22978:22985	3006183	3	True				
ANR	3006845	Statement	(	919:16:22986:22986	3006183	4	True				
ANR	3006846	Statement	&	919:17:22987:22987	3006183	5	True				
ANR	3006847	Statement	time_now	919:18:22988:22995	3006183	6	True				
ANR	3006848	Statement	","	919:26:22996:22996	3006183	7	True				
ANR	3006849	Statement	&	919:28:22998:22998	3006183	8	True				
ANR	3006850	Statement	limit_time	919:29:22999:23008	3006183	9	True				
ANR	3006851	Statement	","	919:39:23009:23009	3006183	10	True				
ANR	3006852	Statement	>=	919:41:23011:23012	3006183	11	True				
ANR	3006853	Statement	)	919:43:23013:23013	3006183	12	True				
ANR	3006854	Statement	)	919:44:23014:23014	3006183	13	True				
ANR	3006855	CompoundStatement		137:46:3625:3625	3006183	14					
ANR	3006856	ExpressionStatement	fatal = 1	921:5:23092:23101	3006183	0	True				
ANR	3006857	AssignmentExpression	fatal = 1		3006183	0		=			
ANR	3006858	Identifier	fatal		3006183	0					
ANR	3006859	PrimaryExpression	1		3006183	1					
ANR	3006860	ElseStatement	else		3006183	0					
ANR	3006861	CompoundStatement		140:11:3723:3723	3006183	0					
ANR	3006862	ExpressionStatement	"sub_times ( limit_time , time_now , & working_timeout )"	924:5:23156:23205	3006183	0	True				
ANR	3006863	CallExpression	"sub_times ( limit_time , time_now , & working_timeout )"		3006183	0					
ANR	3006864	Callee	sub_times		3006183	0					
ANR	3006865	Identifier	sub_times		3006183	0					
ANR	3006866	ArgumentList	limit_time		3006183	1					
ANR	3006867	Argument	limit_time		3006183	0					
ANR	3006868	Identifier	limit_time		3006183	0					
ANR	3006869	Argument	time_now		3006183	1					
ANR	3006870	Identifier	time_now		3006183	0					
ANR	3006871	Argument	& working_timeout		3006183	2					
ANR	3006872	UnaryOperationExpression	& working_timeout		3006183	0					
ANR	3006873	UnaryOperator	&		3006183	0					
ANR	3006874	Identifier	working_timeout		3006183	1					
ANR	3006875	ExpressionStatement	closesocket ( sock )	943:2:23738:23755	3006183	5	True				
ANR	3006876	CallExpression	closesocket ( sock )		3006183	0					
ANR	3006877	Callee	closesocket		3006183	0					
ANR	3006878	Identifier	closesocket		3006183	0					
ANR	3006879	ArgumentList	sock		3006183	1					
ANR	3006880	Argument	sock		3006183	0					
ANR	3006881	Identifier	sock		3006183	0					
ANR	3006882	ExpressionStatement	sock = - 1	945:1:23761:23770	3006183	10	True				
ANR	3006883	AssignmentExpression	sock = - 1		3006183	0		=			
ANR	3006884	Identifier	sock		3006183	0					
ANR	3006885	UnaryOperationExpression	- 1		3006183	1					
ANR	3006886	UnaryOperator	-		3006183	0					
ANR	3006887	PrimaryExpression	1		3006183	1					
ANR	3006888	Label	connected :	947:0:23773:23782	3006183	11	True				
ANR	3006889	Identifier	connected		3006183	0					
ANR	3006890	ExpressionStatement	php_network_freeaddresses ( psal )	949:1:23786:23817	3006183	12	True				
ANR	3006891	CallExpression	php_network_freeaddresses ( psal )		3006183	0					
ANR	3006892	Callee	php_network_freeaddresses		3006183	0					
ANR	3006893	Identifier	php_network_freeaddresses		3006183	0					
ANR	3006894	ArgumentList	psal		3006183	1					
ANR	3006895	Argument	psal		3006183	0					
ANR	3006896	Identifier	psal		3006183	0					
ANR	3006897	ReturnStatement	return sock ;	951:1:23821:23832	3006183	13	True				
ANR	3006898	Identifier	sock		3006183	0					
ANR	3006899	ReturnType	php_socket_t		3006183	1					
ANR	3006900	Identifier	php_network_connect_socket_to_host		3006183	2					
ANR	3006901	ParameterList	"const char * host , unsigned short port , int socktype , int asynchronous , struct timeval * timeout , zend_string * * error_string , int * error_code , char * bindto , unsigned short bindport , long sockopts"		3006183	3					
ANR	3006902	Parameter	const char * host	779:48:19188:19203	3006183	0	True				
ANR	3006903	ParameterType	const char *		3006183	0					
ANR	3006904	Identifier	host		3006183	1					
ANR	3006905	Parameter	unsigned short port	779:66:19206:19224	3006183	1	True				
ANR	3006906	ParameterType	unsigned short		3006183	0					
ANR	3006907	Identifier	port		3006183	1					
ANR	3006908	Parameter	int socktype	780:2:19229:19240	3006183	2	True				
ANR	3006909	ParameterType	int		3006183	0					
ANR	3006910	Identifier	socktype		3006183	1					
ANR	3006911	Parameter	int asynchronous	780:16:19243:19258	3006183	3	True				
ANR	3006912	ParameterType	int		3006183	0					
ANR	3006913	Identifier	asynchronous		3006183	1					
ANR	3006914	Parameter	struct timeval * timeout	780:34:19261:19283	3006183	4	True				
ANR	3006915	ParameterType	struct timeval *		3006183	0					
ANR	3006916	Identifier	timeout		3006183	1					
ANR	3006917	Parameter	zend_string * * error_string	780:59:19286:19311	3006183	5	True				
ANR	3006918	ParameterType	zend_string * *		3006183	0					
ANR	3006919	Identifier	error_string		3006183	1					
ANR	3006920	Parameter	int * error_code	781:2:19316:19330	3006183	6	True				
ANR	3006921	ParameterType	int *		3006183	0					
ANR	3006922	Identifier	error_code		3006183	1					
ANR	3006923	Parameter	char * bindto	781:19:19333:19344	3006183	7	True				
ANR	3006924	ParameterType	char *		3006183	0					
ANR	3006925	Identifier	bindto		3006183	1					
ANR	3006926	Parameter	unsigned short bindport	781:33:19347:19369	3006183	8	True				
ANR	3006927	ParameterType	unsigned short		3006183	0					
ANR	3006928	Identifier	bindport		3006183	1					
ANR	3006929	Parameter	long sockopts	781:58:19372:19384	3006183	9	True				
ANR	3006930	ParameterType	long		3006183	0					
ANR	3006931	Identifier	sockopts		3006183	1					
ANR	3006932	CFGEntryNode	ENTRY		3006183		True				
ANR	3006933	CFGExitNode	EXIT		3006183		True				
ANR	3006934	Symbol	& val		3006183						
ANR	3006935	Symbol	& working_timeout		3006183						
ANR	3006936	Symbol	sa -> sa_family		3006183						
ANR	3006937	Symbol	htons		3006183						
ANR	3006938	Symbol	* sal		3006183						
ANR	3006939	Symbol	limit_time . tv_usec		3006183						
ANR	3006940	Symbol	strchr		3006183						
ANR	3006941	Symbol	& in4 -> sin_zero		3006183						
ANR	3006942	Symbol	working_timeout . tv_sec		3006183						
ANR	3006943	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_port		3006183						
ANR	3006944	Symbol	in6 -> sin6_port		3006183						
ANR	3006945	Symbol	( ( struct sockaddr_in6 * ) sa ) -> sin6_port		3006183						
ANR	3006946	Symbol	bind		3006183						
ANR	3006947	Symbol	* sa		3006183						
ANR	3006948	Symbol	host		3006183						
ANR	3006949	Symbol	local_address_len		3006183						
ANR	3006950	Symbol	inet_aton		3006183						
ANR	3006951	Symbol	val		3006183						
ANR	3006952	Symbol	limit_time . tv_sec		3006183						
ANR	3006953	Symbol	errno		3006183						
ANR	3006954	Symbol	NULL		3006183						
ANR	3006955	Symbol	inet_pton		3006183						
ANR	3006956	Symbol	socklen		3006183						
ANR	3006957	Symbol	php_network_getaddresses		3006183						
ANR	3006958	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_family		3006183						
ANR	3006959	Symbol	AF_INET		3006183						
ANR	3006960	Symbol	in4 -> sin_zero		3006183						
ANR	3006961	Symbol	in4		3006183						
ANR	3006962	Symbol	in6		3006183						
ANR	3006963	Symbol	strerror		3006183						
ANR	3006964	Symbol	bindport		3006183						
ANR	3006965	Symbol	port		3006183						
ANR	3006966	Symbol	working_timeout		3006183						
ANR	3006967	Symbol	& limit_time		3006183						
ANR	3006968	Symbol	local_address		3006183						
ANR	3006969	Symbol	& time_now		3006183						
ANR	3006970	Symbol	error_code		3006183						
ANR	3006971	Symbol	* error_string		3006183						
ANR	3006972	Symbol	& in6 -> sin6_addr		3006183						
ANR	3006973	Symbol	in4 -> sin_port		3006183						
ANR	3006974	Symbol	STREAM_SOCKOP_SO_BROADCAST		3006183						
ANR	3006975	Symbol	php_network_connect_socket		3006183						
ANR	3006976	Symbol	timeout		3006183						
ANR	3006977	Symbol	bindto		3006183						
ANR	3006978	Symbol	sa		3006183						
ANR	3006979	Symbol	fatal		3006183						
ANR	3006980	Symbol	E_WARNING		3006183						
ANR	3006981	Symbol	& in4 -> sin_addr		3006183						
ANR	3006982	Symbol	emalloc		3006183						
ANR	3006983	Symbol	num_addrs		3006183						
ANR	3006984	Symbol	asynchronous		3006183						
ANR	3006985	Symbol	time_now		3006183						
ANR	3006986	Symbol	psal		3006183						
ANR	3006987	Symbol	sal		3006183						
ANR	3006988	Symbol	* in6		3006183						
ANR	3006989	Symbol	SOCK_ERR		3006183						
ANR	3006990	Symbol	sockopts		3006183						
ANR	3006991	Symbol	* in4		3006183						
ANR	3006992	Symbol	& psal		3006183						
ANR	3006993	Symbol	in4 -> sin_family		3006183						
ANR	3006994	Symbol	n		3006183						
ANR	3006995	Symbol	AF_INET6		3006183						
ANR	3006996	Symbol	limit_time		3006183						
ANR	3006997	Symbol	SOL_SOCKET		3006183						
ANR	3006998	Symbol	error_string		3006183						
ANR	3006999	Symbol	sock		3006183						
ANR	3007000	Symbol	working_timeout . tv_usec		3006183						
ANR	3007001	Symbol	in6 -> sin6_family		3006183						
ANR	3007002	Symbol	SO_BROADCAST		3006183						
ANR	3007003	Symbol	socktype		3006183						
ANR	3007004	Symbol	socket		3006183						
ANR	3007005	Symbol	( ( struct sockaddr_in6 * ) sa ) -> sin6_family		3006183						
ANR	3007006	Function	php_any_addr	958:0:23933:24490							
ANR	3007007	FunctionDef	"php_any_addr (int family , php_sockaddr_storage * addr , unsigned short port)"		3007006	0					
ANR	3007008	CompoundStatement		959:0:24019:24490	3007006	0					
ANR	3007009	ExpressionStatement	"memset ( addr , 0 , sizeof ( php_sockaddr_storage ) )"	960:1:24022:24067	3007006	0	True				
ANR	3007010	CallExpression	"memset ( addr , 0 , sizeof ( php_sockaddr_storage ) )"		3007006	0					
ANR	3007011	Callee	memset		3007006	0					
ANR	3007012	Identifier	memset		3007006	0					
ANR	3007013	ArgumentList	addr		3007006	1					
ANR	3007014	Argument	addr		3007006	0					
ANR	3007015	Identifier	addr		3007006	0					
ANR	3007016	Argument	0		3007006	1					
ANR	3007017	PrimaryExpression	0		3007006	0					
ANR	3007018	Argument	sizeof ( php_sockaddr_storage )		3007006	2					
ANR	3007019	SizeofExpression	sizeof ( php_sockaddr_storage )		3007006	0					
ANR	3007020	Sizeof	sizeof		3007006	0					
ANR	3007021	SizeofOperand	php_sockaddr_storage		3007006	1					
ANR	3007022	SwitchStatement	switch ( family )		3007006	1					
ANR	3007023	Condition	family	961:9:24078:24083	3007006	0	True				
ANR	3007024	Identifier	family		3007006	0					
ANR	3007025	CompoundStatement		3:17:66:66	3007006	1					
ANR	3007026	Label	case AF_INET6 :	963:1:24103:24116	3007006	0	True				
ANR	3007027	Identifier	AF_INET6		3007006	0					
ANR	3007028	CompoundStatement		6:2:102:158	3007006	1					
ANR	3007029	IdentifierDeclStatement	struct sockaddr_in6 * sin6 = ( struct sockaddr_in6 * ) addr ;	964:2:24122:24178	3007006	0	True				
ANR	3007030	IdentifierDecl	* sin6 = ( struct sockaddr_in6 * ) addr		3007006	0					
ANR	3007031	IdentifierDeclType	struct sockaddr_in6 *		3007006	0					
ANR	3007032	Identifier	sin6		3007006	1					
ANR	3007033	AssignmentExpression	* sin6 = ( struct sockaddr_in6 * ) addr		3007006	2		=			
ANR	3007034	Identifier	sin6		3007006	0					
ANR	3007035	CastExpression	( struct sockaddr_in6 * ) addr		3007006	1					
ANR	3007036	CastTarget	struct sockaddr_in6 *		3007006	0					
ANR	3007037	Identifier	addr		3007006	1					
ANR	3007038	ExpressionStatement	sin6 -> sin6_family = AF_INET6	965:2:24182:24210	3007006	1	True				
ANR	3007039	AssignmentExpression	sin6 -> sin6_family = AF_INET6		3007006	0		=			
ANR	3007040	PtrMemberAccess	sin6 -> sin6_family		3007006	0					
ANR	3007041	Identifier	sin6		3007006	0					
ANR	3007042	Identifier	sin6_family		3007006	1					
ANR	3007043	Identifier	AF_INET6		3007006	1					
ANR	3007044	ExpressionStatement	sin6 -> sin6_port = htons ( port )	966:2:24214:24243	3007006	2	True				
ANR	3007045	AssignmentExpression	sin6 -> sin6_port = htons ( port )		3007006	0		=			
ANR	3007046	PtrMemberAccess	sin6 -> sin6_port		3007006	0					
ANR	3007047	Identifier	sin6		3007006	0					
ANR	3007048	Identifier	sin6_port		3007006	1					
ANR	3007049	CallExpression	htons ( port )		3007006	1					
ANR	3007050	Callee	htons		3007006	0					
ANR	3007051	Identifier	htons		3007006	0					
ANR	3007052	ArgumentList	port		3007006	1					
ANR	3007053	Argument	port		3007006	0					
ANR	3007054	Identifier	port		3007006	0					
ANR	3007055	ExpressionStatement	sin6 -> sin6_addr = in6addr_any	967:2:24247:24276	3007006	3	True				
ANR	3007056	AssignmentExpression	sin6 -> sin6_addr = in6addr_any		3007006	0		=			
ANR	3007057	PtrMemberAccess	sin6 -> sin6_addr		3007006	0					
ANR	3007058	Identifier	sin6		3007006	0					
ANR	3007059	Identifier	sin6_addr		3007006	1					
ANR	3007060	Identifier	in6addr_any		3007006	1					
ANR	3007061	BreakStatement	break ;	968:2:24280:24285	3007006	4	True				
ANR	3007062	Label	case AF_INET :	971:1:24298:24310	3007006	2	True				
ANR	3007063	Identifier	AF_INET		3007006	0					
ANR	3007064	CompoundStatement		14:2:296:349	3007006	3					
ANR	3007065	IdentifierDeclStatement	struct sockaddr_in * sin = ( struct sockaddr_in * ) addr ;	972:2:24316:24369	3007006	0	True				
ANR	3007066	IdentifierDecl	* sin = ( struct sockaddr_in * ) addr		3007006	0					
ANR	3007067	IdentifierDeclType	struct sockaddr_in *		3007006	0					
ANR	3007068	Identifier	sin		3007006	1					
ANR	3007069	AssignmentExpression	* sin = ( struct sockaddr_in * ) addr		3007006	2		=			
ANR	3007070	Identifier	sin		3007006	0					
ANR	3007071	CastExpression	( struct sockaddr_in * ) addr		3007006	1					
ANR	3007072	CastTarget	struct sockaddr_in *		3007006	0					
ANR	3007073	Identifier	addr		3007006	1					
ANR	3007074	ExpressionStatement	sin -> sin_family = AF_INET	973:2:24373:24398	3007006	1	True				
ANR	3007075	AssignmentExpression	sin -> sin_family = AF_INET		3007006	0		=			
ANR	3007076	PtrMemberAccess	sin -> sin_family		3007006	0					
ANR	3007077	Identifier	sin		3007006	0					
ANR	3007078	Identifier	sin_family		3007006	1					
ANR	3007079	Identifier	AF_INET		3007006	1					
ANR	3007080	ExpressionStatement	sin -> sin_port = htons ( port )	974:2:24402:24429	3007006	2	True				
ANR	3007081	AssignmentExpression	sin -> sin_port = htons ( port )		3007006	0		=			
ANR	3007082	PtrMemberAccess	sin -> sin_port		3007006	0					
ANR	3007083	Identifier	sin		3007006	0					
ANR	3007084	Identifier	sin_port		3007006	1					
ANR	3007085	CallExpression	htons ( port )		3007006	1					
ANR	3007086	Callee	htons		3007006	0					
ANR	3007087	Identifier	htons		3007006	0					
ANR	3007088	ArgumentList	port		3007006	1					
ANR	3007089	Argument	port		3007006	0					
ANR	3007090	Identifier	port		3007006	0					
ANR	3007091	ExpressionStatement	sin -> sin_addr . s_addr = htonl ( INADDR_ANY )	975:2:24433:24473	3007006	3	True				
ANR	3007092	AssignmentExpression	sin -> sin_addr . s_addr = htonl ( INADDR_ANY )		3007006	0		=			
ANR	3007093	MemberAccess	sin -> sin_addr . s_addr		3007006	0					
ANR	3007094	PtrMemberAccess	sin -> sin_addr		3007006	0					
ANR	3007095	Identifier	sin		3007006	0					
ANR	3007096	Identifier	sin_addr		3007006	1					
ANR	3007097	Identifier	s_addr		3007006	1					
ANR	3007098	CallExpression	htonl ( INADDR_ANY )		3007006	1					
ANR	3007099	Callee	htonl		3007006	0					
ANR	3007100	Identifier	htonl		3007006	0					
ANR	3007101	ArgumentList	INADDR_ANY		3007006	1					
ANR	3007102	Argument	INADDR_ANY		3007006	0					
ANR	3007103	Identifier	INADDR_ANY		3007006	0					
ANR	3007104	BreakStatement	break ;	976:2:24477:24482	3007006	4	True				
ANR	3007105	ReturnType	PHPAPI void		3007006	1					
ANR	3007106	Identifier	php_any_addr		3007006	2					
ANR	3007107	ParameterList	"int family , php_sockaddr_storage * addr , unsigned short port"		3007006	3					
ANR	3007108	Parameter	int family	958:25:23958:23967	3007006	0	True				
ANR	3007109	ParameterType	int		3007006	0					
ANR	3007110	Identifier	family		3007006	1					
ANR	3007111	Parameter	php_sockaddr_storage * addr	958:37:23970:23995	3007006	1	True				
ANR	3007112	ParameterType	php_sockaddr_storage *		3007006	0					
ANR	3007113	Identifier	addr		3007006	1					
ANR	3007114	Parameter	unsigned short port	958:65:23998:24016	3007006	2	True				
ANR	3007115	ParameterType	unsigned short		3007006	0					
ANR	3007116	Identifier	port		3007006	1					
ANR	3007117	CFGEntryNode	ENTRY		3007006		True				
ANR	3007118	CFGExitNode	EXIT		3007006		True				
ANR	3007119	Symbol	sin -> sin_port		3007006						
ANR	3007120	Symbol	* sin		3007006						
ANR	3007121	Symbol	htons		3007006						
ANR	3007122	Symbol	sin6		3007006						
ANR	3007123	Symbol	in6addr_any		3007006						
ANR	3007124	Symbol	AF_INET		3007006						
ANR	3007125	Symbol	AF_INET6		3007006						
ANR	3007126	Symbol	htonl		3007006						
ANR	3007127	Symbol	sin6 -> sin6_port		3007006						
ANR	3007128	Symbol	* sin6		3007006						
ANR	3007129	Symbol	sin -> sin_family		3007006						
ANR	3007130	Symbol	port		3007006						
ANR	3007131	Symbol	sin6 -> sin6_addr		3007006						
ANR	3007132	Symbol	sin -> sin_addr		3007006						
ANR	3007133	Symbol	sin		3007006						
ANR	3007134	Symbol	INADDR_ANY		3007006						
ANR	3007135	Symbol	family		3007006						
ANR	3007136	Symbol	addr		3007006						
ANR	3007137	Symbol	sin6 -> sin6_family		3007006						
ANR	3007138	Symbol	sin -> sin_addr . s_addr		3007006						
ANR	3007139	Function	php_sockaddr_size	985:0:24589:24923							
ANR	3007140	FunctionDef	php_sockaddr_size (php_sockaddr_storage * addr)		3007139	0					
ANR	3007141	CompoundStatement		986:0:24646:24923	3007139	0					
ANR	3007142	SwitchStatement	switch ( ( ( struct sockaddr * ) addr ) -> sa_family )		3007139	0					
ANR	3007143	Condition	( ( struct sockaddr * ) addr ) -> sa_family	987:9:24657:24692	3007139	0	True				
ANR	3007144	PtrMemberAccess	( ( struct sockaddr * ) addr ) -> sa_family		3007139	0					
ANR	3007145	CastExpression	( struct sockaddr * ) addr		3007139	0					
ANR	3007146	CastTarget	struct sockaddr *		3007139	0					
ANR	3007147	Identifier	addr		3007139	1					
ANR	3007148	Identifier	sa_family		3007139	1					
ANR	3007149	CompoundStatement		2:47:48:48	3007139	1					
ANR	3007150	Label	case AF_INET :	988:1:24698:24710	3007139	0	True				
ANR	3007151	Identifier	AF_INET		3007139	0					
ANR	3007152	ReturnStatement	return sizeof ( struct sockaddr_in ) ;	989:2:24714:24747	3007139	1	True				
ANR	3007153	SizeofExpression	sizeof ( struct sockaddr_in )		3007139	0					
ANR	3007154	Sizeof	sizeof		3007139	0					
ANR	3007155	SizeofOperand	struct sockaddr_in		3007139	1					
ANR	3007156	Label	case AF_INET6 :	991:1:24764:24777	3007139	2	True				
ANR	3007157	Identifier	AF_INET6		3007139	0					
ANR	3007158	ReturnStatement	return sizeof ( struct sockaddr_in6 ) ;	992:2:24781:24815	3007139	3	True				
ANR	3007159	SizeofExpression	sizeof ( struct sockaddr_in6 )		3007139	0					
ANR	3007160	Sizeof	sizeof		3007139	0					
ANR	3007161	SizeofOperand	struct sockaddr_in6		3007139	1					
ANR	3007162	Label	case AF_UNIX :	995:1:24840:24852	3007139	4	True				
ANR	3007163	Identifier	AF_UNIX		3007139	0					
ANR	3007164	ReturnStatement	return sizeof ( struct sockaddr_un ) ;	996:2:24856:24889	3007139	5	True				
ANR	3007165	SizeofExpression	sizeof ( struct sockaddr_un )		3007139	0					
ANR	3007166	Sizeof	sizeof		3007139	0					
ANR	3007167	SizeofOperand	struct sockaddr_un		3007139	1					
ANR	3007168	Label	default :	998:1:24899:24906	3007139	6	True				
ANR	3007169	Identifier	default		3007139	0					
ANR	3007170	ReturnStatement	return 0 ;	999:2:24910:24918	3007139	7	True				
ANR	3007171	PrimaryExpression	0		3007139	0					
ANR	3007172	ReturnType	PHPAPI int		3007139	1					
ANR	3007173	Identifier	php_sockaddr_size		3007139	2					
ANR	3007174	ParameterList	php_sockaddr_storage * addr		3007139	3					
ANR	3007175	Parameter	php_sockaddr_storage * addr	985:29:24618:24643	3007139	0	True				
ANR	3007176	ParameterType	php_sockaddr_storage *		3007139	0					
ANR	3007177	Identifier	addr		3007139	1					
ANR	3007178	CFGEntryNode	ENTRY		3007139		True				
ANR	3007179	CFGExitNode	EXIT		3007139		True				
ANR	3007180	Symbol	( ( struct sockaddr * ) addr ) -> sa_family		3007139						
ANR	3007181	Symbol	* addr		3007139						
ANR	3007182	Symbol	addr		3007139						
ANR	3007183	Function	php_socket_strerror	1010:0:25138:25914							
ANR	3007184	FunctionDef	"php_socket_strerror (long err , char * buf , size_t bufsize)"		3007183	0					
ANR	3007185	CompoundStatement		1011:0:25208:25914	3007183	0					
ANR	3007186	IdentifierDeclStatement	char * errstr ;	1013:1:25229:25241	3007183	0	True				
ANR	3007187	IdentifierDecl	* errstr		3007183	0					
ANR	3007188	IdentifierDeclType	char *		3007183	0					
ANR	3007189	Identifier	errstr		3007183	1					
ANR	3007190	ExpressionStatement	errstr = strerror ( err )	1015:1:25245:25267	3007183	1	True				
ANR	3007191	AssignmentExpression	errstr = strerror ( err )		3007183	0		=			
ANR	3007192	Identifier	errstr		3007183	0					
ANR	3007193	CallExpression	strerror ( err )		3007183	1					
ANR	3007194	Callee	strerror		3007183	0					
ANR	3007195	Identifier	strerror		3007183	0					
ANR	3007196	ArgumentList	err		3007183	1					
ANR	3007197	Argument	err		3007183	0					
ANR	3007198	Identifier	err		3007183	0					
ANR	3007199	IfStatement	if ( buf == NULL )		3007183	2					
ANR	3007200	Condition	buf == NULL	1016:5:25274:25284	3007183	0	True				
ANR	3007201	EqualityExpression	buf == NULL		3007183	0		==			
ANR	3007202	Identifier	buf		3007183	0					
ANR	3007203	Identifier	NULL		3007183	1					
ANR	3007204	CompoundStatement		6:18:78:78	3007183	1					
ANR	3007205	ExpressionStatement	buf = estrdup ( errstr )	1017:2:25291:25312	3007183	0	True				
ANR	3007206	AssignmentExpression	buf = estrdup ( errstr )		3007183	0		=			
ANR	3007207	Identifier	buf		3007183	0					
ANR	3007208	CallExpression	estrdup ( errstr )		3007183	1					
ANR	3007209	Callee	estrdup		3007183	0					
ANR	3007210	Identifier	estrdup		3007183	0					
ANR	3007211	ArgumentList	errstr		3007183	1					
ANR	3007212	Argument	errstr		3007183	0					
ANR	3007213	Identifier	errstr		3007183	0					
ANR	3007214	ElseStatement	else		3007183	0					
ANR	3007215	CompoundStatement		8:8:113:113	3007183	0					
ANR	3007216	ExpressionStatement	"strncpy ( buf , errstr , bufsize )"	1019:2:25326:25355	3007183	0	True				
ANR	3007217	CallExpression	"strncpy ( buf , errstr , bufsize )"		3007183	0					
ANR	3007218	Callee	strncpy		3007183	0					
ANR	3007219	Identifier	strncpy		3007183	0					
ANR	3007220	ArgumentList	buf		3007183	1					
ANR	3007221	Argument	buf		3007183	0					
ANR	3007222	Identifier	buf		3007183	0					
ANR	3007223	Argument	errstr		3007183	1					
ANR	3007224	Identifier	errstr		3007183	0					
ANR	3007225	Argument	bufsize		3007183	2					
ANR	3007226	Identifier	bufsize		3007183	0					
ANR	3007227	ExpressionStatement	buf [ bufsize ? ( bufsize - 1 ) : 0 ] = 0	1020:2:25359:25389	3007183	1	True				
ANR	3007228	AssignmentExpression	buf [ bufsize ? ( bufsize - 1 ) : 0 ] = 0		3007183	0		=			
ANR	3007229	ArrayIndexing	buf [ bufsize ? ( bufsize - 1 ) : 0 ]		3007183	0					
ANR	3007230	Identifier	buf		3007183	0					
ANR	3007231	ConditionalExpression	bufsize ? ( bufsize - 1 ) : 0		3007183	1					
ANR	3007232	Condition	bufsize		3007183	0					
ANR	3007233	Identifier	bufsize		3007183	0					
ANR	3007234	AdditiveExpression	bufsize - 1		3007183	1		-			
ANR	3007235	Identifier	bufsize		3007183	0					
ANR	3007236	PrimaryExpression	1		3007183	1					
ANR	3007237	PrimaryExpression	0		3007183	2					
ANR	3007238	PrimaryExpression	0		3007183	1					
ANR	3007239	ReturnStatement	return buf ;	1022:1:25395:25405	3007183	3	True				
ANR	3007240	Identifier	buf		3007183	0					
ANR	3007241	ReturnType	PHPAPI char *		3007183	1					
ANR	3007242	Identifier	php_socket_strerror		3007183	2					
ANR	3007243	ParameterList	"long err , char * buf , size_t bufsize"		3007183	3					
ANR	3007244	Parameter	long err	1010:33:25171:25178	3007183	0	True				
ANR	3007245	ParameterType	long		3007183	0					
ANR	3007246	Identifier	err		3007183	1					
ANR	3007247	Parameter	char * buf	1010:43:25181:25189	3007183	1	True				
ANR	3007248	ParameterType	char *		3007183	0					
ANR	3007249	Identifier	buf		3007183	1					
ANR	3007250	Parameter	size_t bufsize	1010:54:25192:25205	3007183	2	True				
ANR	3007251	ParameterType	size_t		3007183	0					
ANR	3007252	Identifier	bufsize		3007183	1					
ANR	3007253	CFGEntryNode	ENTRY		3007183		True				
ANR	3007254	CFGExitNode	EXIT		3007183		True				
ANR	3007255	Symbol	strerror		3007183						
ANR	3007256	Symbol	buf		3007183						
ANR	3007257	Symbol	* bufsize		3007183						
ANR	3007258	Symbol	* buf		3007183						
ANR	3007259	Symbol	NULL		3007183						
ANR	3007260	Symbol	err		3007183						
ANR	3007261	Symbol	bufsize		3007183						
ANR	3007262	Symbol	errstr		3007183						
ANR	3007263	Symbol	estrdup		3007183						
ANR	3007264	Function	php_socket_error_str	1058:0:25958:26576							
ANR	3007265	FunctionDef	php_socket_error_str (long err)		3007264	0					
ANR	3007266	CompoundStatement		1059:0:26009:26576	3007264	0					
ANR	3007267	IdentifierDeclStatement	char * errstr ;	1061:1:26030:26042	3007264	0	True				
ANR	3007268	IdentifierDecl	* errstr		3007264	0					
ANR	3007269	IdentifierDeclType	char *		3007264	0					
ANR	3007270	Identifier	errstr		3007264	1					
ANR	3007271	ExpressionStatement	errstr = strerror ( err )	1063:1:26046:26068	3007264	1	True				
ANR	3007272	AssignmentExpression	errstr = strerror ( err )		3007264	0		=			
ANR	3007273	Identifier	errstr		3007264	0					
ANR	3007274	CallExpression	strerror ( err )		3007264	1					
ANR	3007275	Callee	strerror		3007264	0					
ANR	3007276	Identifier	strerror		3007264	0					
ANR	3007277	ArgumentList	err		3007264	1					
ANR	3007278	Argument	err		3007264	0					
ANR	3007279	Identifier	err		3007264	0					
ANR	3007280	ReturnStatement	"return zend_string_init ( errstr , strlen ( errstr ) , 0 ) ;"	1064:1:26071:26121	3007264	2	True				
ANR	3007281	CallExpression	"zend_string_init ( errstr , strlen ( errstr ) , 0 )"		3007264	0					
ANR	3007282	Callee	zend_string_init		3007264	0					
ANR	3007283	Identifier	zend_string_init		3007264	0					
ANR	3007284	ArgumentList	errstr		3007264	1					
ANR	3007285	Argument	errstr		3007264	0					
ANR	3007286	Identifier	errstr		3007264	0					
ANR	3007287	Argument	strlen ( errstr )		3007264	1					
ANR	3007288	CallExpression	strlen ( errstr )		3007264	0					
ANR	3007289	Callee	strlen		3007264	0					
ANR	3007290	Identifier	strlen		3007264	0					
ANR	3007291	ArgumentList	errstr		3007264	1					
ANR	3007292	Argument	errstr		3007264	0					
ANR	3007293	Identifier	errstr		3007264	0					
ANR	3007294	Argument	0		3007264	2					
ANR	3007295	PrimaryExpression	0		3007264	0					
ANR	3007296	ReturnType	PHPAPI zend_string *		3007264	1					
ANR	3007297	Identifier	php_socket_error_str		3007264	2					
ANR	3007298	ParameterList	long err		3007264	3					
ANR	3007299	Parameter	long err	1058:41:25999:26006	3007264	0	True				
ANR	3007300	ParameterType	long		3007264	0					
ANR	3007301	Identifier	err		3007264	1					
ANR	3007302	CFGEntryNode	ENTRY		3007264		True				
ANR	3007303	CFGExitNode	EXIT		3007264		True				
ANR	3007304	Symbol	strerror		3007264						
ANR	3007305	Symbol	strlen		3007264						
ANR	3007306	Symbol	zend_string_init		3007264						
ANR	3007307	Symbol	err		3007264						
ANR	3007308	Symbol	errstr		3007264						
ANR	3007309	DeclStmt									
ANR	3007310	Decl							php_stream	php_stream *	stream
ANR	3007311	DeclStmt									
ANR	3007312	Decl							php_netstream_data_t	php_netstream_data_t *	sock
ANR	3007313	DeclStmt									
ANR	3007314	Decl							char	char *	res
ANR	3007315	DeclStmt									
ANR	3007316	Decl							zend_long	zend_long	reslen
ANR	3007317	DeclStmt									
ANR	3007318	Decl							php_stream	php_stream *	stream
ANR	3007319	Function	php_set_sock_blocking	1137:0:27719:28370							
ANR	3007320	FunctionDef	"php_set_sock_blocking (php_socket_t socketd , int block)"		3007319	0					
ANR	3007321	CompoundStatement		1138:0:27785:28370	3007319	0					
ANR	3007322	IdentifierDeclStatement	int ret = SUCCESS ;	1139:1:27788:27805	3007319	0	True				
ANR	3007323	IdentifierDecl	ret = SUCCESS		3007319	0					
ANR	3007324	IdentifierDeclType	int		3007319	0					
ANR	3007325	Identifier	ret		3007319	1					
ANR	3007326	AssignmentExpression	ret = SUCCESS		3007319	2		=			
ANR	3007327	Identifier	SUCCESS		3007319	0					
ANR	3007328	Identifier	SUCCESS		3007319	1					
ANR	3007329	IdentifierDeclStatement	u_long flags ;	1142:1:27826:27838	3007319	1	True				
ANR	3007330	IdentifierDecl	flags		3007319	0					
ANR	3007331	IdentifierDeclType	u_long		3007319	0					
ANR	3007332	Identifier	flags		3007319	1					
ANR	3007333	ExpressionStatement	flags = ! block	1145:1:27917:27931	3007319	2	True				
ANR	3007334	AssignmentExpression	flags = ! block		3007319	0		=			
ANR	3007335	Identifier	flags		3007319	0					
ANR	3007336	UnaryOperationExpression	! block		3007319	1					
ANR	3007337	UnaryOperator	!		3007319	0					
ANR	3007338	Identifier	block		3007319	1					
ANR	3007339	IfStatement	"if ( ioctlsocket ( socketd , FIONBIO , & flags ) == SOCKET_ERROR )"		3007319	3					
ANR	3007340	Condition	"ioctlsocket ( socketd , FIONBIO , & flags ) == SOCKET_ERROR"	1146:5:27938:27990	3007319	0	True				
ANR	3007341	EqualityExpression	"ioctlsocket ( socketd , FIONBIO , & flags ) == SOCKET_ERROR"		3007319	0		==			
ANR	3007342	CallExpression	"ioctlsocket ( socketd , FIONBIO , & flags )"		3007319	0					
ANR	3007343	Callee	ioctlsocket		3007319	0					
ANR	3007344	Identifier	ioctlsocket		3007319	0					
ANR	3007345	ArgumentList	socketd		3007319	1					
ANR	3007346	Argument	socketd		3007319	0					
ANR	3007347	Identifier	socketd		3007319	0					
ANR	3007348	Argument	FIONBIO		3007319	1					
ANR	3007349	Identifier	FIONBIO		3007319	0					
ANR	3007350	Argument	& flags		3007319	2					
ANR	3007351	UnaryOperationExpression	& flags		3007319	0					
ANR	3007352	UnaryOperator	&		3007319	0					
ANR	3007353	Identifier	flags		3007319	1					
ANR	3007354	Identifier	SOCKET_ERROR		3007319	1					
ANR	3007355	CompoundStatement		9:60:207:207	3007319	1					
ANR	3007356	ExpressionStatement	ret = FAILURE	1147:2:27997:28010	3007319	0	True				
ANR	3007357	AssignmentExpression	ret = FAILURE		3007319	0		=			
ANR	3007358	Identifier	ret		3007319	0					
ANR	3007359	Identifier	FAILURE		3007319	1					
ANR	3007360	ReturnStatement	return ret ;	1167:1:28358:28368	3007319	4	True				
ANR	3007361	Identifier	ret		3007319	0					
ANR	3007362	ReturnType	PHPAPI int		3007319	1					
ANR	3007363	Identifier	php_set_sock_blocking		3007319	2					
ANR	3007364	ParameterList	"php_socket_t socketd , int block"		3007319	3					
ANR	3007365	Parameter	php_socket_t socketd	1137:33:27752:27771	3007319	0	True				
ANR	3007366	ParameterType	php_socket_t		3007319	0					
ANR	3007367	Identifier	socketd		3007319	1					
ANR	3007368	Parameter	int block	1137:55:27774:27782	3007319	1	True				
ANR	3007369	ParameterType	int		3007319	0					
ANR	3007370	Identifier	block		3007319	1					
ANR	3007371	CFGEntryNode	ENTRY		3007319		True				
ANR	3007372	CFGExitNode	EXIT		3007319		True				
ANR	3007373	Symbol	ret		3007319						
ANR	3007374	Symbol	SOCKET_ERROR		3007319						
ANR	3007375	Symbol	SUCCESS		3007319						
ANR	3007376	Symbol	FIONBIO		3007319						
ANR	3007377	Symbol	ioctlsocket		3007319						
ANR	3007378	Symbol	flags		3007319						
ANR	3007379	Symbol	socketd		3007319						
ANR	3007380	Symbol	block		3007319						
ANR	3007381	Symbol	& flags		3007319						
ANR	3007382	Symbol	FAILURE		3007319						
ANR	3007383	Function	_php_emit_fd_setsize_warning	1170:0:28373:29458							
ANR	3007384	FunctionDef	_php_emit_fd_setsize_warning (int max_fd)		3007383	0					
ANR	3007385	CompoundStatement		1171:0:28426:29458	3007383	0					
ANR	3007386	Statement	php_error_docref	1174:1:28447:28462	3007383	0	True				
ANR	3007387	Statement	(	1174:17:28463:28463	3007383	1	True				
ANR	3007388	Statement	NULL	1174:18:28464:28467	3007383	2	True				
ANR	3007389	Statement	","	1174:22:28468:28468	3007383	3	True				
ANR	3007390	Statement	E_WARNING	1174:24:28470:28478	3007383	4	True				
ANR	3007391	Statement	","	1174:33:28479:28479	3007383	5	True				
ANR	3007392	Statement	"""PHP needs to be recompiled with a larger value of FD_SETSIZE.\\n"""	1175:2:28483:28547	3007383	6	True				
ANR	3007393	Statement	"""If this binary is from an official www.php.net package, file a bug report\\n"""	1176:2:28551:28627	3007383	7	True				
ANR	3007394	Statement	"""at http://bugs.php.net, including the following information:\\n"""	1177:2:28631:28694	3007383	8	True				
ANR	3007395	Statement	"""FD_SETSIZE=%d, but you are using %d.\\n"""	1178:2:28698:28737	3007383	9	True				
ANR	3007396	Statement	""" --enable-fd-setsize=%d is recommended, but you may want to set it\\n"""	1179:2:28741:28810	3007383	10	True				
ANR	3007397	Statement	"""to match to maximum number of sockets each script will work with at\\n"""	1180:2:28814:28884	3007383	11	True				
ANR	3007398	Statement	"""one time, in order to avoid seeing this error again at a later date."""	1181:2:28888:28957	3007383	12	True				
ANR	3007399	Statement	","	1181:72:28958:28958	3007383	13	True				
ANR	3007400	Statement	FD_SETSIZE	1182:2:28962:28971	3007383	14	True				
ANR	3007401	Statement	","	1182:12:28972:28972	3007383	15	True				
ANR	3007402	Statement	max_fd	1182:14:28974:28979	3007383	16	True				
ANR	3007403	Statement	","	1182:20:28980:28980	3007383	17	True				
ANR	3007404	Statement	(	1182:22:28982:28982	3007383	18	True				
ANR	3007405	Statement	max_fd	1182:23:28983:28988	3007383	19	True				
ANR	3007406	Statement	+	1182:30:28990:28990	3007383	20	True				
ANR	3007407	Statement	128	1182:32:28992:28994	3007383	21	True				
ANR	3007408	Statement	)	1182:35:28995:28995	3007383	22	True				
ANR	3007409	Statement	&	1182:37:28997:28997	3007383	23	True				
ANR	3007410	Statement	~127	1182:39:28999:29002	3007383	24	True				
ANR	3007411	Statement	)	1182:43:29003:29003	3007383	25	True				
ANR	3007412	ExpressionStatement		1182:44:29004:29004	3007383	26	True				
ANR	3007413	ReturnType	PHPAPI void		3007383	1					
ANR	3007414	Identifier	_php_emit_fd_setsize_warning		3007383	2					
ANR	3007415	ParameterList	int max_fd		3007383	3					
ANR	3007416	Parameter	int max_fd	1170:41:28414:28423	3007383	0	True				
ANR	3007417	ParameterType	int		3007383	0					
ANR	3007418	Identifier	max_fd		3007383	1					
ANR	3007419	CFGEntryNode	ENTRY		3007383		True				
ANR	3007420	CFGExitNode	EXIT		3007383		True				
ANR	3007421	Symbol	max_fd		3007383						
ANR	3007422	Function	php_poll2	1198:0:29548:30901							
ANR	3007423	FunctionDef	"php_poll2 (php_pollfd * ufds , unsigned int nfds , int timeout)"		3007422	0					
ANR	3007424	CompoundStatement		1199:0:29619:30901	3007422	0					
ANR	3007425	IdentifierDeclStatement	"fd_set rset , wset , eset ;"	1200:1:29622:29645	3007422	0	True				
ANR	3007426	IdentifierDecl	rset		3007422	0					
ANR	3007427	IdentifierDeclType	fd_set		3007422	0					
ANR	3007428	Identifier	rset		3007422	1					
ANR	3007429	IdentifierDecl	wset		3007422	1					
ANR	3007430	IdentifierDeclType	fd_set		3007422	0					
ANR	3007431	Identifier	wset		3007422	1					
ANR	3007432	IdentifierDecl	eset		3007422	2					
ANR	3007433	IdentifierDeclType	fd_set		3007422	0					
ANR	3007434	Identifier	eset		3007422	1					
ANR	3007435	IdentifierDeclStatement	php_socket_t max_fd = SOCK_ERR ;	1201:1:29648:29678	3007422	1	True				
ANR	3007436	IdentifierDecl	max_fd = SOCK_ERR		3007422	0					
ANR	3007437	IdentifierDeclType	php_socket_t		3007422	0					
ANR	3007438	Identifier	max_fd		3007422	1					
ANR	3007439	AssignmentExpression	max_fd = SOCK_ERR		3007422	2		=			
ANR	3007440	Identifier	SOCK_ERR		3007422	0					
ANR	3007441	Identifier	SOCK_ERR		3007422	1					
ANR	3007442	IdentifierDeclStatement	unsigned int i ;	1202:1:29681:29695	3007422	2	True				
ANR	3007443	IdentifierDecl	i		3007422	0					
ANR	3007444	IdentifierDeclType	unsigned int		3007422	0					
ANR	3007445	Identifier	i		3007422	1					
ANR	3007446	IdentifierDeclStatement	int n ;	1203:1:29698:29703	3007422	3	True				
ANR	3007447	IdentifierDecl	n		3007422	0					
ANR	3007448	IdentifierDeclType	int		3007422	0					
ANR	3007449	Identifier	n		3007422	1					
ANR	3007450	IdentifierDeclStatement	struct timeval tv ;	1204:1:29706:29723	3007422	4	True				
ANR	3007451	IdentifierDecl	tv		3007422	0					
ANR	3007452	IdentifierDeclType	struct timeval		3007422	0					
ANR	3007453	Identifier	tv		3007422	1					
ANR	3007454	ForStatement	for ( i = 0 ; i < nfds ; i ++ )		3007422	5					
ANR	3007455	ForInit	i = 0 ;	1207:6:29777:29782	3007422	0	True				
ANR	3007456	AssignmentExpression	i = 0		3007422	0		=			
ANR	3007457	Identifier	i		3007422	0					
ANR	3007458	PrimaryExpression	0		3007422	1					
ANR	3007459	Condition	i < nfds	1207:13:29784:29791	3007422	1	True				
ANR	3007460	RelationalExpression	i < nfds		3007422	0		<			
ANR	3007461	Identifier	i		3007422	0					
ANR	3007462	Identifier	nfds		3007422	1					
ANR	3007463	PostIncDecOperationExpression	i ++	1207:23:29794:29796	3007422	2	True				
ANR	3007464	Identifier	i		3007422	0					
ANR	3007465	IncDec	++		3007422	1					
ANR	3007466	CompoundStatement		9:28:179:179	3007422	3					
ANR	3007467	IfStatement	if ( ufds [ i ] . fd > max_fd )		3007422	0					
ANR	3007468	Condition	ufds [ i ] . fd > max_fd	1208:6:29807:29825	3007422	0	True				
ANR	3007469	RelationalExpression	ufds [ i ] . fd > max_fd		3007422	0		>			
ANR	3007470	MemberAccess	ufds [ i ] . fd		3007422	0					
ANR	3007471	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007472	Identifier	ufds		3007422	0					
ANR	3007473	Identifier	i		3007422	1					
ANR	3007474	Identifier	fd		3007422	1					
ANR	3007475	Identifier	max_fd		3007422	1					
ANR	3007476	ExpressionStatement	max_fd = ufds [ i ] . fd	1209:3:29831:29850	3007422	1	True				
ANR	3007477	AssignmentExpression	max_fd = ufds [ i ] . fd		3007422	0		=			
ANR	3007478	Identifier	max_fd		3007422	0					
ANR	3007479	MemberAccess	ufds [ i ] . fd		3007422	1					
ANR	3007480	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007481	Identifier	ufds		3007422	0					
ANR	3007482	Identifier	i		3007422	1					
ANR	3007483	Identifier	fd		3007422	1					
ANR	3007484	ExpressionStatement	"PHP_SAFE_MAX_FD ( max_fd , nfds + 1 )"	1212:1:29857:29890	3007422	6	True				
ANR	3007485	CallExpression	"PHP_SAFE_MAX_FD ( max_fd , nfds + 1 )"		3007422	0					
ANR	3007486	Callee	PHP_SAFE_MAX_FD		3007422	0					
ANR	3007487	Identifier	PHP_SAFE_MAX_FD		3007422	0					
ANR	3007488	ArgumentList	max_fd		3007422	1					
ANR	3007489	Argument	max_fd		3007422	0					
ANR	3007490	Identifier	max_fd		3007422	0					
ANR	3007491	Argument	nfds + 1		3007422	1					
ANR	3007492	AdditiveExpression	nfds + 1		3007422	0		+			
ANR	3007493	Identifier	nfds		3007422	0					
ANR	3007494	PrimaryExpression	1		3007422	1					
ANR	3007495	ExpressionStatement	FD_ZERO ( & rset )	1214:1:29894:29908	3007422	7	True				
ANR	3007496	CallExpression	FD_ZERO ( & rset )		3007422	0					
ANR	3007497	Callee	FD_ZERO		3007422	0					
ANR	3007498	Identifier	FD_ZERO		3007422	0					
ANR	3007499	ArgumentList	& rset		3007422	1					
ANR	3007500	Argument	& rset		3007422	0					
ANR	3007501	UnaryOperationExpression	& rset		3007422	0					
ANR	3007502	UnaryOperator	&		3007422	0					
ANR	3007503	Identifier	rset		3007422	1					
ANR	3007504	ExpressionStatement	FD_ZERO ( & wset )	1215:1:29911:29925	3007422	8	True				
ANR	3007505	CallExpression	FD_ZERO ( & wset )		3007422	0					
ANR	3007506	Callee	FD_ZERO		3007422	0					
ANR	3007507	Identifier	FD_ZERO		3007422	0					
ANR	3007508	ArgumentList	& wset		3007422	1					
ANR	3007509	Argument	& wset		3007422	0					
ANR	3007510	UnaryOperationExpression	& wset		3007422	0					
ANR	3007511	UnaryOperator	&		3007422	0					
ANR	3007512	Identifier	wset		3007422	1					
ANR	3007513	ExpressionStatement	FD_ZERO ( & eset )	1216:1:29928:29942	3007422	9	True				
ANR	3007514	CallExpression	FD_ZERO ( & eset )		3007422	0					
ANR	3007515	Callee	FD_ZERO		3007422	0					
ANR	3007516	Identifier	FD_ZERO		3007422	0					
ANR	3007517	ArgumentList	& eset		3007422	1					
ANR	3007518	Argument	& eset		3007422	0					
ANR	3007519	UnaryOperationExpression	& eset		3007422	0					
ANR	3007520	UnaryOperator	&		3007422	0					
ANR	3007521	Identifier	eset		3007422	1					
ANR	3007522	ForStatement	for ( i = 0 ; i < nfds ; i ++ )		3007422	10					
ANR	3007523	ForInit	i = 0 ;	1218:6:29951:29956	3007422	0	True				
ANR	3007524	AssignmentExpression	i = 0		3007422	0		=			
ANR	3007525	Identifier	i		3007422	0					
ANR	3007526	PrimaryExpression	0		3007422	1					
ANR	3007527	Condition	i < nfds	1218:13:29958:29965	3007422	1	True				
ANR	3007528	RelationalExpression	i < nfds		3007422	0		<			
ANR	3007529	Identifier	i		3007422	0					
ANR	3007530	Identifier	nfds		3007422	1					
ANR	3007531	PostIncDecOperationExpression	i ++	1218:23:29968:29970	3007422	2	True				
ANR	3007532	Identifier	i		3007422	0					
ANR	3007533	IncDec	++		3007422	1					
ANR	3007534	CompoundStatement		20:28:353:353	3007422	3					
ANR	3007535	IfStatement	if ( ufds [ i ] . events & PHP_POLLREADABLE )		3007422	0					
ANR	3007536	Condition	ufds [ i ] . events & PHP_POLLREADABLE	1219:6:29981:30013	3007422	0	True				
ANR	3007537	BitAndExpression	ufds [ i ] . events & PHP_POLLREADABLE		3007422	0		&			
ANR	3007538	MemberAccess	ufds [ i ] . events		3007422	0					
ANR	3007539	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007540	Identifier	ufds		3007422	0					
ANR	3007541	Identifier	i		3007422	1					
ANR	3007542	Identifier	events		3007422	1					
ANR	3007543	Identifier	PHP_POLLREADABLE		3007422	1					
ANR	3007544	CompoundStatement		21:41:396:396	3007422	1					
ANR	3007545	ExpressionStatement	"PHP_SAFE_FD_SET ( ufds [ i ] . fd , & rset )"	1220:3:30021:30055	3007422	0	True				
ANR	3007546	CallExpression	"PHP_SAFE_FD_SET ( ufds [ i ] . fd , & rset )"		3007422	0					
ANR	3007547	Callee	PHP_SAFE_FD_SET		3007422	0					
ANR	3007548	Identifier	PHP_SAFE_FD_SET		3007422	0					
ANR	3007549	ArgumentList	ufds [ i ] . fd		3007422	1					
ANR	3007550	Argument	ufds [ i ] . fd		3007422	0					
ANR	3007551	MemberAccess	ufds [ i ] . fd		3007422	0					
ANR	3007552	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007553	Identifier	ufds		3007422	0					
ANR	3007554	Identifier	i		3007422	1					
ANR	3007555	Identifier	fd		3007422	1					
ANR	3007556	Argument	& rset		3007422	1					
ANR	3007557	UnaryOperationExpression	& rset		3007422	0					
ANR	3007558	UnaryOperator	&		3007422	0					
ANR	3007559	Identifier	rset		3007422	1					
ANR	3007560	IfStatement	if ( ufds [ i ] . events & POLLOUT )		3007422	1					
ANR	3007561	Condition	ufds [ i ] . events & POLLOUT	1222:6:30067:30090	3007422	0	True				
ANR	3007562	BitAndExpression	ufds [ i ] . events & POLLOUT		3007422	0		&			
ANR	3007563	MemberAccess	ufds [ i ] . events		3007422	0					
ANR	3007564	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007565	Identifier	ufds		3007422	0					
ANR	3007566	Identifier	i		3007422	1					
ANR	3007567	Identifier	events		3007422	1					
ANR	3007568	Identifier	POLLOUT		3007422	1					
ANR	3007569	CompoundStatement		24:32:473:473	3007422	1					
ANR	3007570	ExpressionStatement	"PHP_SAFE_FD_SET ( ufds [ i ] . fd , & wset )"	1223:3:30098:30132	3007422	0	True				
ANR	3007571	CallExpression	"PHP_SAFE_FD_SET ( ufds [ i ] . fd , & wset )"		3007422	0					
ANR	3007572	Callee	PHP_SAFE_FD_SET		3007422	0					
ANR	3007573	Identifier	PHP_SAFE_FD_SET		3007422	0					
ANR	3007574	ArgumentList	ufds [ i ] . fd		3007422	1					
ANR	3007575	Argument	ufds [ i ] . fd		3007422	0					
ANR	3007576	MemberAccess	ufds [ i ] . fd		3007422	0					
ANR	3007577	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007578	Identifier	ufds		3007422	0					
ANR	3007579	Identifier	i		3007422	1					
ANR	3007580	Identifier	fd		3007422	1					
ANR	3007581	Argument	& wset		3007422	1					
ANR	3007582	UnaryOperationExpression	& wset		3007422	0					
ANR	3007583	UnaryOperator	&		3007422	0					
ANR	3007584	Identifier	wset		3007422	1					
ANR	3007585	IfStatement	if ( ufds [ i ] . events & POLLPRI )		3007422	2					
ANR	3007586	Condition	ufds [ i ] . events & POLLPRI	1225:6:30144:30167	3007422	0	True				
ANR	3007587	BitAndExpression	ufds [ i ] . events & POLLPRI		3007422	0		&			
ANR	3007588	MemberAccess	ufds [ i ] . events		3007422	0					
ANR	3007589	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007590	Identifier	ufds		3007422	0					
ANR	3007591	Identifier	i		3007422	1					
ANR	3007592	Identifier	events		3007422	1					
ANR	3007593	Identifier	POLLPRI		3007422	1					
ANR	3007594	CompoundStatement		27:32:550:550	3007422	1					
ANR	3007595	ExpressionStatement	"PHP_SAFE_FD_SET ( ufds [ i ] . fd , & eset )"	1226:3:30175:30209	3007422	0	True				
ANR	3007596	CallExpression	"PHP_SAFE_FD_SET ( ufds [ i ] . fd , & eset )"		3007422	0					
ANR	3007597	Callee	PHP_SAFE_FD_SET		3007422	0					
ANR	3007598	Identifier	PHP_SAFE_FD_SET		3007422	0					
ANR	3007599	ArgumentList	ufds [ i ] . fd		3007422	1					
ANR	3007600	Argument	ufds [ i ] . fd		3007422	0					
ANR	3007601	MemberAccess	ufds [ i ] . fd		3007422	0					
ANR	3007602	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007603	Identifier	ufds		3007422	0					
ANR	3007604	Identifier	i		3007422	1					
ANR	3007605	Identifier	fd		3007422	1					
ANR	3007606	Argument	& eset		3007422	1					
ANR	3007607	UnaryOperationExpression	& eset		3007422	0					
ANR	3007608	UnaryOperator	&		3007422	0					
ANR	3007609	Identifier	eset		3007422	1					
ANR	3007610	IfStatement	if ( timeout >= 0 )		3007422	11					
ANR	3007611	Condition	timeout >= 0	1230:5:30224:30235	3007422	0	True				
ANR	3007612	RelationalExpression	timeout >= 0		3007422	0		>=			
ANR	3007613	Identifier	timeout		3007422	0					
ANR	3007614	PrimaryExpression	0		3007422	1					
ANR	3007615	CompoundStatement		32:19:618:618	3007422	1					
ANR	3007616	ExpressionStatement	tv . tv_sec = timeout / 1000	1231:2:30242:30268	3007422	0	True				
ANR	3007617	AssignmentExpression	tv . tv_sec = timeout / 1000		3007422	0		=			
ANR	3007618	MemberAccess	tv . tv_sec		3007422	0					
ANR	3007619	Identifier	tv		3007422	0					
ANR	3007620	Identifier	tv_sec		3007422	1					
ANR	3007621	MultiplicativeExpression	timeout / 1000		3007422	1		/			
ANR	3007622	Identifier	timeout		3007422	0					
ANR	3007623	PrimaryExpression	1000		3007422	1					
ANR	3007624	ExpressionStatement	tv . tv_usec = ( timeout - ( tv . tv_sec * 1000 ) ) * 1000	1232:2:30272:30322	3007422	1	True				
ANR	3007625	AssignmentExpression	tv . tv_usec = ( timeout - ( tv . tv_sec * 1000 ) ) * 1000		3007422	0		=			
ANR	3007626	MemberAccess	tv . tv_usec		3007422	0					
ANR	3007627	Identifier	tv		3007422	0					
ANR	3007628	Identifier	tv_usec		3007422	1					
ANR	3007629	MultiplicativeExpression	( timeout - ( tv . tv_sec * 1000 ) ) * 1000		3007422	1		*			
ANR	3007630	AdditiveExpression	timeout - ( tv . tv_sec * 1000 )		3007422	0		-			
ANR	3007631	Identifier	timeout		3007422	0					
ANR	3007632	MultiplicativeExpression	tv . tv_sec * 1000		3007422	1		*			
ANR	3007633	MemberAccess	tv . tv_sec		3007422	0					
ANR	3007634	Identifier	tv		3007422	0					
ANR	3007635	Identifier	tv_sec		3007422	1					
ANR	3007636	PrimaryExpression	1000		3007422	1					
ANR	3007637	PrimaryExpression	1000		3007422	1					
ANR	3007638	ExpressionStatement	WSASetLastError ( 0 )	1236:1:30373:30391	3007422	12	True				
ANR	3007639	CallExpression	WSASetLastError ( 0 )		3007422	0					
ANR	3007640	Callee	WSASetLastError		3007422	0					
ANR	3007641	Identifier	WSASetLastError		3007422	0					
ANR	3007642	ArgumentList	0		3007422	1					
ANR	3007643	Argument	0		3007422	0					
ANR	3007644	PrimaryExpression	0		3007422	0					
ANR	3007645	ExpressionStatement	"n = select ( max_fd + 1 , & rset , & wset , & eset , timeout >= 0 ? & tv : NULL )"	1240:1:30419:30489	3007422	13	True				
ANR	3007646	AssignmentExpression	"n = select ( max_fd + 1 , & rset , & wset , & eset , timeout >= 0 ? & tv : NULL )"		3007422	0		=			
ANR	3007647	Identifier	n		3007422	0					
ANR	3007648	CallExpression	"select ( max_fd + 1 , & rset , & wset , & eset , timeout >= 0 ? & tv : NULL )"		3007422	1					
ANR	3007649	Callee	select		3007422	0					
ANR	3007650	Identifier	select		3007422	0					
ANR	3007651	ArgumentList	max_fd + 1		3007422	1					
ANR	3007652	Argument	max_fd + 1		3007422	0					
ANR	3007653	AdditiveExpression	max_fd + 1		3007422	0		+			
ANR	3007654	Identifier	max_fd		3007422	0					
ANR	3007655	PrimaryExpression	1		3007422	1					
ANR	3007656	Argument	& rset		3007422	1					
ANR	3007657	UnaryOperationExpression	& rset		3007422	0					
ANR	3007658	UnaryOperator	&		3007422	0					
ANR	3007659	Identifier	rset		3007422	1					
ANR	3007660	Argument	& wset		3007422	2					
ANR	3007661	UnaryOperationExpression	& wset		3007422	0					
ANR	3007662	UnaryOperator	&		3007422	0					
ANR	3007663	Identifier	wset		3007422	1					
ANR	3007664	Argument	& eset		3007422	3					
ANR	3007665	UnaryOperationExpression	& eset		3007422	0					
ANR	3007666	UnaryOperator	&		3007422	0					
ANR	3007667	Identifier	eset		3007422	1					
ANR	3007668	Argument	timeout >= 0 ? & tv : NULL		3007422	4					
ANR	3007669	ConditionalExpression	timeout >= 0 ? & tv : NULL		3007422	0					
ANR	3007670	Condition	timeout >= 0		3007422	0					
ANR	3007671	RelationalExpression	timeout >= 0		3007422	0		>=			
ANR	3007672	Identifier	timeout		3007422	0					
ANR	3007673	PrimaryExpression	0		3007422	1					
ANR	3007674	UnaryOperationExpression	& tv		3007422	1					
ANR	3007675	UnaryOperator	&		3007422	0					
ANR	3007676	Identifier	tv		3007422	1					
ANR	3007677	Identifier	NULL		3007422	2					
ANR	3007678	IfStatement	if ( n >= 0 )		3007422	14					
ANR	3007679	Condition	n >= 0	1242:5:30497:30502	3007422	0	True				
ANR	3007680	RelationalExpression	n >= 0		3007422	0		>=			
ANR	3007681	Identifier	n		3007422	0					
ANR	3007682	PrimaryExpression	0		3007422	1					
ANR	3007683	CompoundStatement		44:13:885:885	3007422	1					
ANR	3007684	ForStatement	for ( i = 0 ; i < nfds ; i ++ )		3007422	0					
ANR	3007685	ForInit	i = 0 ;	1243:7:30514:30519	3007422	0	True				
ANR	3007686	AssignmentExpression	i = 0		3007422	0		=			
ANR	3007687	Identifier	i		3007422	0					
ANR	3007688	PrimaryExpression	0		3007422	1					
ANR	3007689	Condition	i < nfds	1243:14:30521:30528	3007422	1	True				
ANR	3007690	RelationalExpression	i < nfds		3007422	0		<			
ANR	3007691	Identifier	i		3007422	0					
ANR	3007692	Identifier	nfds		3007422	1					
ANR	3007693	PostIncDecOperationExpression	i ++	1243:24:30531:30533	3007422	2	True				
ANR	3007694	Identifier	i		3007422	0					
ANR	3007695	IncDec	++		3007422	1					
ANR	3007696	CompoundStatement		45:29:916:916	3007422	3					
ANR	3007697	ExpressionStatement	ufds [ i ] . revents = 0	1244:3:30541:30560	3007422	0	True				
ANR	3007698	AssignmentExpression	ufds [ i ] . revents = 0		3007422	0		=			
ANR	3007699	MemberAccess	ufds [ i ] . revents		3007422	0					
ANR	3007700	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007701	Identifier	ufds		3007422	0					
ANR	3007702	Identifier	i		3007422	1					
ANR	3007703	Identifier	revents		3007422	1					
ANR	3007704	PrimaryExpression	0		3007422	1					
ANR	3007705	IfStatement	"if ( PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & rset ) )"		3007422	1					
ANR	3007706	Condition	"PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & rset )"	1246:7:30570:30605	3007422	0	True				
ANR	3007707	CallExpression	"PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & rset )"		3007422	0					
ANR	3007708	Callee	PHP_SAFE_FD_ISSET		3007422	0					
ANR	3007709	Identifier	PHP_SAFE_FD_ISSET		3007422	0					
ANR	3007710	ArgumentList	ufds [ i ] . fd		3007422	1					
ANR	3007711	Argument	ufds [ i ] . fd		3007422	0					
ANR	3007712	MemberAccess	ufds [ i ] . fd		3007422	0					
ANR	3007713	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007714	Identifier	ufds		3007422	0					
ANR	3007715	Identifier	i		3007422	1					
ANR	3007716	Identifier	fd		3007422	1					
ANR	3007717	Argument	& rset		3007422	1					
ANR	3007718	UnaryOperationExpression	& rset		3007422	0					
ANR	3007719	UnaryOperator	&		3007422	0					
ANR	3007720	Identifier	rset		3007422	1					
ANR	3007721	CompoundStatement		48:45:988:988	3007422	1					
ANR	3007722	ExpressionStatement	ufds [ i ] . revents |= POLLIN	1248:4:30683:30708	3007422	0	True				
ANR	3007723	AssignmentExpression	ufds [ i ] . revents |= POLLIN		3007422	0		|=			
ANR	3007724	MemberAccess	ufds [ i ] . revents		3007422	0					
ANR	3007725	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007726	Identifier	ufds		3007422	0					
ANR	3007727	Identifier	i		3007422	1					
ANR	3007728	Identifier	revents		3007422	1					
ANR	3007729	Identifier	POLLIN		3007422	1					
ANR	3007730	IfStatement	"if ( PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & wset ) )"		3007422	2					
ANR	3007731	Condition	"PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & wset )"	1250:7:30722:30757	3007422	0	True				
ANR	3007732	CallExpression	"PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & wset )"		3007422	0					
ANR	3007733	Callee	PHP_SAFE_FD_ISSET		3007422	0					
ANR	3007734	Identifier	PHP_SAFE_FD_ISSET		3007422	0					
ANR	3007735	ArgumentList	ufds [ i ] . fd		3007422	1					
ANR	3007736	Argument	ufds [ i ] . fd		3007422	0					
ANR	3007737	MemberAccess	ufds [ i ] . fd		3007422	0					
ANR	3007738	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007739	Identifier	ufds		3007422	0					
ANR	3007740	Identifier	i		3007422	1					
ANR	3007741	Identifier	fd		3007422	1					
ANR	3007742	Argument	& wset		3007422	1					
ANR	3007743	UnaryOperationExpression	& wset		3007422	0					
ANR	3007744	UnaryOperator	&		3007422	0					
ANR	3007745	Identifier	wset		3007422	1					
ANR	3007746	CompoundStatement		52:45:1140:1140	3007422	1					
ANR	3007747	ExpressionStatement	ufds [ i ] . revents |= POLLOUT	1251:4:30766:30792	3007422	0	True				
ANR	3007748	AssignmentExpression	ufds [ i ] . revents |= POLLOUT		3007422	0		|=			
ANR	3007749	MemberAccess	ufds [ i ] . revents		3007422	0					
ANR	3007750	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007751	Identifier	ufds		3007422	0					
ANR	3007752	Identifier	i		3007422	1					
ANR	3007753	Identifier	revents		3007422	1					
ANR	3007754	Identifier	POLLOUT		3007422	1					
ANR	3007755	IfStatement	"if ( PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & eset ) )"		3007422	3					
ANR	3007756	Condition	"PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & eset )"	1253:7:30806:30841	3007422	0	True				
ANR	3007757	CallExpression	"PHP_SAFE_FD_ISSET ( ufds [ i ] . fd , & eset )"		3007422	0					
ANR	3007758	Callee	PHP_SAFE_FD_ISSET		3007422	0					
ANR	3007759	Identifier	PHP_SAFE_FD_ISSET		3007422	0					
ANR	3007760	ArgumentList	ufds [ i ] . fd		3007422	1					
ANR	3007761	Argument	ufds [ i ] . fd		3007422	0					
ANR	3007762	MemberAccess	ufds [ i ] . fd		3007422	0					
ANR	3007763	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007764	Identifier	ufds		3007422	0					
ANR	3007765	Identifier	i		3007422	1					
ANR	3007766	Identifier	fd		3007422	1					
ANR	3007767	Argument	& eset		3007422	1					
ANR	3007768	UnaryOperationExpression	& eset		3007422	0					
ANR	3007769	UnaryOperator	&		3007422	0					
ANR	3007770	Identifier	eset		3007422	1					
ANR	3007771	CompoundStatement		55:45:1224:1224	3007422	1					
ANR	3007772	ExpressionStatement	ufds [ i ] . revents |= POLLPRI	1254:4:30850:30876	3007422	0	True				
ANR	3007773	AssignmentExpression	ufds [ i ] . revents |= POLLPRI		3007422	0		|=			
ANR	3007774	MemberAccess	ufds [ i ] . revents		3007422	0					
ANR	3007775	ArrayIndexing	ufds [ i ]		3007422	0					
ANR	3007776	Identifier	ufds		3007422	0					
ANR	3007777	Identifier	i		3007422	1					
ANR	3007778	Identifier	revents		3007422	1					
ANR	3007779	Identifier	POLLPRI		3007422	1					
ANR	3007780	ReturnStatement	return n ;	1258:1:30891:30899	3007422	15	True				
ANR	3007781	Identifier	n		3007422	0					
ANR	3007782	ReturnType	PHPAPI int		3007422	1					
ANR	3007783	Identifier	php_poll2		3007422	2					
ANR	3007784	ParameterList	"php_pollfd * ufds , unsigned int nfds , int timeout"		3007422	3					
ANR	3007785	Parameter	php_pollfd * ufds	1198:21:29569:29584	3007422	0	True				
ANR	3007786	ParameterType	php_pollfd *		3007422	0					
ANR	3007787	Identifier	ufds		3007422	1					
ANR	3007788	Parameter	unsigned int nfds	1198:39:29587:29603	3007422	1	True				
ANR	3007789	ParameterType	unsigned int		3007422	0					
ANR	3007790	Identifier	nfds		3007422	1					
ANR	3007791	Parameter	int timeout	1198:58:29606:29616	3007422	2	True				
ANR	3007792	ParameterType	int		3007422	0					
ANR	3007793	Identifier	timeout		3007422	1					
ANR	3007794	CFGEntryNode	ENTRY		3007422		True				
ANR	3007795	CFGExitNode	EXIT		3007422		True				
ANR	3007796	Symbol	ufds [ i ] . fd		3007422						
ANR	3007797	Symbol	tv . tv_sec		3007422						
ANR	3007798	Symbol	tv		3007422						
ANR	3007799	Symbol	select		3007422						
ANR	3007800	Symbol	rset		3007422						
ANR	3007801	Symbol	timeout		3007422						
ANR	3007802	Symbol	PHP_POLLREADABLE		3007422						
ANR	3007803	Symbol	ufds [ i ] . events		3007422						
ANR	3007804	Symbol	ufds		3007422						
ANR	3007805	Symbol	& wset		3007422						
ANR	3007806	Symbol	ufds [ i ] . revents		3007422						
ANR	3007807	Symbol	POLLOUT		3007422						
ANR	3007808	Symbol	& eset		3007422						
ANR	3007809	Symbol	tv . tv_usec		3007422						
ANR	3007810	Symbol	NULL		3007422						
ANR	3007811	Symbol	POLLIN		3007422						
ANR	3007812	Symbol	SOCK_ERR		3007422						
ANR	3007813	Symbol	i		3007422						
ANR	3007814	Symbol	& tv		3007422						
ANR	3007815	Symbol	n		3007422						
ANR	3007816	Symbol	PHP_SAFE_FD_ISSET		3007422						
ANR	3007817	Symbol	eset		3007422						
ANR	3007818	Symbol	* i		3007422						
ANR	3007819	Symbol	* ufds		3007422						
ANR	3007820	Symbol	nfds		3007422						
ANR	3007821	Symbol	max_fd		3007422						
ANR	3007822	Symbol	& rset		3007422						
ANR	3007823	Symbol	wset		3007422						
ANR	3007824	Symbol	POLLPRI		3007422						
