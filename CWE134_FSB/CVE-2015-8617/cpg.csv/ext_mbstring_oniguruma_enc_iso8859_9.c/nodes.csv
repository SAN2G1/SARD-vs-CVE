command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1143953	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_iso8859_9.c								
ANR	1143954	DeclStmt									
ANR	1143955	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_9_ToLowerCaseTable
ANR	1143956	DeclStmt									
ANR	1143957	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_9_CtypeTable
ANR	1143958	DeclStmt									
ANR	1143959	Decl							const UChar	const UChar *	p
ANR	1143960	Function	is_mbc_ambiguous	125:0:6514:7055							
ANR	1143961	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1143960	0					
ANR	1143962	CompoundStatement		127:0:6601:7055	1143960	0					
ANR	1143963	IdentifierDeclStatement	int v ;	128:2:6605:6610	1143960	0	True				
ANR	1143964	IdentifierDecl	v		1143960	0					
ANR	1143965	IdentifierDeclType	int		1143960	0					
ANR	1143966	Identifier	v		1143960	1					
ANR	1143967	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6614:6634	1143960	1	True				
ANR	1143968	IdentifierDecl	* p = * pp		1143960	0					
ANR	1143969	IdentifierDeclType	const UChar *		1143960	0					
ANR	1143970	Identifier	p		1143960	1					
ANR	1143971	AssignmentExpression	* p = * pp		1143960	2		=			
ANR	1143972	Identifier	p		1143960	0					
ANR	1143973	UnaryOperationExpression	* pp		1143960	1					
ANR	1143974	UnaryOperator	*		1143960	0					
ANR	1143975	Identifier	pp		1143960	1					
ANR	1143976	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1143960	2					
ANR	1143977	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6643:6707	1143960	0	True				
ANR	1143978	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1143960	0		&&			
ANR	1143979	EqualityExpression	* p == 0xdf		1143960	0		==			
ANR	1143980	UnaryOperationExpression	* p		1143960	0					
ANR	1143981	UnaryOperator	*		1143960	0					
ANR	1143982	Identifier	p		1143960	1					
ANR	1143983	PrimaryExpression	0xdf		1143960	1					
ANR	1143984	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1143960	1		!=			
ANR	1143985	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1143960	0		&			
ANR	1143986	Identifier	flag		1143960	0					
ANR	1143987	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1143960	1					
ANR	1143988	PrimaryExpression	0		1143960	1					
ANR	1143989	CompoundStatement		5:73:108:108	1143960	1					
ANR	1143990	ExpressionStatement	( * pp ) ++	132:4:6716:6723	1143960	0	True				
ANR	1143991	PostIncDecOperationExpression	( * pp ) ++		1143960	0					
ANR	1143992	UnaryOperationExpression	* pp		1143960	0					
ANR	1143993	UnaryOperator	*		1143960	0					
ANR	1143994	Identifier	pp		1143960	1					
ANR	1143995	IncDec	++		1143960	1					
ANR	1143996	ReturnStatement	return TRUE ;	133:4:6729:6740	1143960	1	True				
ANR	1143997	Identifier	TRUE		1143960	0					
ANR	1143998	ExpressionStatement	( * pp ) ++	136:2:6749:6756	1143960	3	True				
ANR	1143999	PostIncDecOperationExpression	( * pp ) ++		1143960	0					
ANR	1144000	UnaryOperationExpression	* pp		1143960	0					
ANR	1144001	UnaryOperator	*		1143960	0					
ANR	1144002	Identifier	pp		1143960	1					
ANR	1144003	IncDec	++		1143960	1					
ANR	1144004	ExpressionStatement	v = ( EncISO_8859_9_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6760:6832	1143960	4	True				
ANR	1144005	AssignmentExpression	v = ( EncISO_8859_9_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		1143960	0		=			
ANR	1144006	Identifier	v		1143960	0					
ANR	1144007	BitAndExpression	EncISO_8859_9_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		1143960	1		&			
ANR	1144008	ArrayIndexing	EncISO_8859_9_CtypeTable [ * p ]		1143960	0					
ANR	1144009	Identifier	EncISO_8859_9_CtypeTable		1143960	0					
ANR	1144010	UnaryOperationExpression	* p		1143960	1					
ANR	1144011	UnaryOperator	*		1143960	0					
ANR	1144012	Identifier	p		1143960	1					
ANR	1144013	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1143960	1		|			
ANR	1144014	Identifier	BIT_CTYPE_UPPER		1143960	0					
ANR	1144015	Identifier	BIT_CTYPE_LOWER		1143960	1					
ANR	1144016	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		1143960	5					
ANR	1144017	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6840:6865	1143960	0	True				
ANR	1144018	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		1143960	0		!=			
ANR	1144019	InclusiveOrExpression	v | BIT_CTYPE_LOWER		1143960	0		|			
ANR	1144020	Identifier	v		1143960	0					
ANR	1144021	Identifier	BIT_CTYPE_LOWER		1143960	1					
ANR	1144022	PrimaryExpression	0		1143960	1					
ANR	1144023	CompoundStatement		12:34:266:266	1143960	1					
ANR	1144024	IfStatement	if ( * p >= 0xaa && * p <= 0xba )		1143960	0					
ANR	1144025	Condition	* p >= 0xaa && * p <= 0xba	140:8:6942:6965	1143960	0	True				
ANR	1144026	AndExpression	* p >= 0xaa && * p <= 0xba		1143960	0		&&			
ANR	1144027	RelationalExpression	* p >= 0xaa		1143960	0		>=			
ANR	1144028	UnaryOperationExpression	* p		1143960	0					
ANR	1144029	UnaryOperator	*		1143960	0					
ANR	1144030	Identifier	p		1143960	1					
ANR	1144031	PrimaryExpression	0xaa		1143960	1					
ANR	1144032	RelationalExpression	* p <= 0xba		1143960	1		<=			
ANR	1144033	UnaryOperationExpression	* p		1143960	0					
ANR	1144034	UnaryOperator	*		1143960	0					
ANR	1144035	Identifier	p		1143960	1					
ANR	1144036	PrimaryExpression	0xba		1143960	1					
ANR	1144037	ReturnStatement	return FALSE ;	141:6:6974:6986	1143960	1	True				
ANR	1144038	Identifier	FALSE		1143960	0					
ANR	1144039	ElseStatement	else		1143960	0					
ANR	1144040	ReturnStatement	return TRUE ;	143:6:7003:7014	1143960	0	True				
ANR	1144041	Identifier	TRUE		1143960	0					
ANR	1144042	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7023:7053	1143960	6	True				
ANR	1144043	ConditionalExpression	v != 0 ? TRUE : FALSE		1143960	0					
ANR	1144044	Condition	v != 0		1143960	0					
ANR	1144045	EqualityExpression	v != 0		1143960	0		!=			
ANR	1144046	Identifier	v		1143960	0					
ANR	1144047	PrimaryExpression	0		1143960	1					
ANR	1144048	Identifier	TRUE		1143960	1					
ANR	1144049	Identifier	FALSE		1143960	2					
ANR	1144050	ReturnType	static int		1143960	1					
ANR	1144051	Identifier	is_mbc_ambiguous		1143960	2					
ANR	1144052	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1143960	3					
ANR	1144053	Parameter	OnigCaseFoldType flag	126:17:6542:6562	1143960	0	True				
ANR	1144054	ParameterType	OnigCaseFoldType		1143960	0					
ANR	1144055	Identifier	flag		1143960	1					
ANR	1144056	Parameter	const UChar * * pp	126:40:6565:6580	1143960	1	True				
ANR	1144057	ParameterType	const UChar * *		1143960	0					
ANR	1144058	Identifier	pp		1143960	1					
ANR	1144059	Parameter	const UChar * end	126:58:6583:6598	1143960	2	True				
ANR	1144060	ParameterType	const UChar *		1143960	0					
ANR	1144061	Identifier	end		1143960	1					
ANR	1144062	CFGEntryNode	ENTRY		1143960		True				
ANR	1144063	CFGExitNode	EXIT		1143960		True				
ANR	1144064	Symbol	pp		1143960						
ANR	1144065	Symbol	flag		1143960						
ANR	1144066	Symbol	* pp		1143960						
ANR	1144067	Symbol	TRUE		1143960						
ANR	1144068	Symbol	EncISO_8859_9_CtypeTable		1143960						
ANR	1144069	Symbol	p		1143960						
ANR	1144070	Symbol	* EncISO_8859_9_CtypeTable		1143960						
ANR	1144071	Symbol	v		1143960						
ANR	1144072	Symbol	BIT_CTYPE_LOWER		1143960						
ANR	1144073	Symbol	end		1143960						
ANR	1144074	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1143960						
ANR	1144075	Symbol	* p		1143960						
ANR	1144076	Symbol	BIT_CTYPE_UPPER		1143960						
ANR	1144077	Symbol	FALSE		1143960						
ANR	1144078	Symbol	* * p		1143960						
ANR	1144079	Function	is_code_ctype	150:0:7065:7224							
ANR	1144080	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		1144079	0					
ANR	1144081	CompoundStatement		152:0:7130:7224	1144079	0					
ANR	1144082	IfStatement	if ( code < 256 )		1144079	0					
ANR	1144083	Condition	code < 256	153:6:7138:7147	1144079	0	True				
ANR	1144084	RelationalExpression	code < 256		1144079	0		<			
ANR	1144085	Identifier	code		1144079	0					
ANR	1144086	PrimaryExpression	256		1144079	1					
ANR	1144087	ReturnStatement	"return ENC_IS_ISO_8859_9_CTYPE ( code , ctype ) ;"	154:4:7154:7197	1144079	1	True				
ANR	1144088	CallExpression	"ENC_IS_ISO_8859_9_CTYPE ( code , ctype )"		1144079	0					
ANR	1144089	Callee	ENC_IS_ISO_8859_9_CTYPE		1144079	0					
ANR	1144090	Identifier	ENC_IS_ISO_8859_9_CTYPE		1144079	0					
ANR	1144091	ArgumentList	code		1144079	1					
ANR	1144092	Argument	code		1144079	0					
ANR	1144093	Identifier	code		1144079	0					
ANR	1144094	Argument	ctype		1144079	1					
ANR	1144095	Identifier	ctype		1144079	0					
ANR	1144096	ElseStatement	else		1144079	0					
ANR	1144097	ReturnStatement	return FALSE ;	156:4:7210:7222	1144079	0	True				
ANR	1144098	Identifier	FALSE		1144079	0					
ANR	1144099	ReturnType	static int		1144079	1					
ANR	1144100	Identifier	is_code_ctype		1144079	2					
ANR	1144101	ParameterList	"OnigCodePoint code , unsigned int ctype"		1144079	3					
ANR	1144102	Parameter	OnigCodePoint code	151:14:7090:7107	1144079	0	True				
ANR	1144103	ParameterType	OnigCodePoint		1144079	0					
ANR	1144104	Identifier	code		1144079	1					
ANR	1144105	Parameter	unsigned int ctype	151:34:7110:7127	1144079	1	True				
ANR	1144106	ParameterType	unsigned int		1144079	0					
ANR	1144107	Identifier	ctype		1144079	1					
ANR	1144108	CFGEntryNode	ENTRY		1144079		True				
ANR	1144109	CFGExitNode	EXIT		1144079		True				
ANR	1144110	Symbol	ENC_IS_ISO_8859_9_CTYPE		1144079						
ANR	1144111	Symbol	code		1144079						
ANR	1144112	Symbol	ctype		1144079						
ANR	1144113	Symbol	FALSE		1144079						
ANR	1144114	DeclStmt									
ANR	1144115	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	1144116	Function	apply_all_case_fold	193:0:7824:8080							
ANR	1144117	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		1144116	0					
ANR	1144118	CompoundStatement		196:0:7923:8080	1144116	0					
ANR	1144119	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	197:2:7927:8078	1144116	0	True				
ANR	1144120	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		1144116	0					
ANR	1144121	Callee	onigenc_apply_all_case_fold_with_map		1144116	0					
ANR	1144122	Identifier	onigenc_apply_all_case_fold_with_map		1144116	0					
ANR	1144123	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1144116	1					
ANR	1144124	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1144116	0					
ANR	1144125	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1144116	0		/			
ANR	1144126	SizeofExpression	sizeof ( CaseFoldMap )		1144116	0					
ANR	1144127	Sizeof	sizeof		1144116	0					
ANR	1144128	SizeofOperand	CaseFoldMap		1144116	1					
ANR	1144129	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1144116	1					
ANR	1144130	Sizeof	sizeof		1144116	0					
ANR	1144131	SizeofOperand	OnigPairCaseFoldCodes		1144116	1					
ANR	1144132	Argument	CaseFoldMap		1144116	1					
ANR	1144133	Identifier	CaseFoldMap		1144116	0					
ANR	1144134	Argument	1		1144116	2					
ANR	1144135	PrimaryExpression	1		1144116	0					
ANR	1144136	Argument	flag		1144116	3					
ANR	1144137	Identifier	flag		1144116	0					
ANR	1144138	Argument	f		1144116	4					
ANR	1144139	Identifier	f		1144116	0					
ANR	1144140	Argument	arg		1144116	5					
ANR	1144141	Identifier	arg		1144116	0					
ANR	1144142	ReturnType	static int		1144116	1					
ANR	1144143	Identifier	apply_all_case_fold		1144116	2					
ANR	1144144	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		1144116	3					
ANR	1144145	Parameter	OnigCaseFoldType flag	194:20:7855:7875	1144116	0	True				
ANR	1144146	ParameterType	OnigCaseFoldType		1144116	0					
ANR	1144147	Identifier	flag		1144116	1					
ANR	1144148	Parameter	OnigApplyAllCaseFoldFunc f	195:6:7884:7909	1144116	1	True				
ANR	1144149	ParameterType	OnigApplyAllCaseFoldFunc		1144116	0					
ANR	1144150	Identifier	f		1144116	1					
ANR	1144151	Parameter	void * arg	195:34:7912:7920	1144116	2	True				
ANR	1144152	ParameterType	void *		1144116	0					
ANR	1144153	Identifier	arg		1144116	1					
ANR	1144154	CFGEntryNode	ENTRY		1144116		True				
ANR	1144155	CFGExitNode	EXIT		1144116		True				
ANR	1144156	Symbol	flag		1144116						
ANR	1144157	Symbol	f		1144116						
ANR	1144158	Symbol	arg		1144116						
ANR	1144159	Symbol	CaseFoldMap		1144116						
ANR	1144160	Symbol	onigenc_apply_all_case_fold_with_map		1144116						
ANR	1144161	Function	get_case_fold_codes_by_str	202:0:8083:8377							
ANR	1144162	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1144161	0					
ANR	1144163	CompoundStatement		205:0:8220:8377	1144161	0					
ANR	1144164	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	206:2:8224:8375	1144161	0	True				
ANR	1144165	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		1144161	0					
ANR	1144166	Callee	onigenc_get_case_fold_codes_by_str_with_map		1144161	0					
ANR	1144167	Identifier	onigenc_get_case_fold_codes_by_str_with_map		1144161	0					
ANR	1144168	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1144161	1					
ANR	1144169	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1144161	0					
ANR	1144170	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1144161	0		/			
ANR	1144171	SizeofExpression	sizeof ( CaseFoldMap )		1144161	0					
ANR	1144172	Sizeof	sizeof		1144161	0					
ANR	1144173	SizeofOperand	CaseFoldMap		1144161	1					
ANR	1144174	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1144161	1					
ANR	1144175	Sizeof	sizeof		1144161	0					
ANR	1144176	SizeofOperand	OnigPairCaseFoldCodes		1144161	1					
ANR	1144177	Argument	CaseFoldMap		1144161	1					
ANR	1144178	Identifier	CaseFoldMap		1144161	0					
ANR	1144179	Argument	1		1144161	2					
ANR	1144180	PrimaryExpression	1		1144161	0					
ANR	1144181	Argument	flag		1144161	3					
ANR	1144182	Identifier	flag		1144161	0					
ANR	1144183	Argument	p		1144161	4					
ANR	1144184	Identifier	p		1144161	0					
ANR	1144185	Argument	end		1144161	5					
ANR	1144186	Identifier	end		1144161	0					
ANR	1144187	Argument	items		1144161	6					
ANR	1144188	Identifier	items		1144161	0					
ANR	1144189	ReturnType	static int		1144161	1					
ANR	1144190	Identifier	get_case_fold_codes_by_str		1144161	2					
ANR	1144191	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1144161	3					
ANR	1144192	Parameter	OnigCaseFoldType flag	203:27:8121:8141	1144161	0	True				
ANR	1144193	ParameterType	OnigCaseFoldType		1144161	0					
ANR	1144194	Identifier	flag		1144161	1					
ANR	1144195	Parameter	const OnigUChar * p	204:4:8148:8165	1144161	1	True				
ANR	1144196	ParameterType	const OnigUChar *		1144161	0					
ANR	1144197	Identifier	p		1144161	1					
ANR	1144198	Parameter	const OnigUChar * end	204:24:8168:8187	1144161	2	True				
ANR	1144199	ParameterType	const OnigUChar *		1144161	0					
ANR	1144200	Identifier	end		1144161	1					
ANR	1144201	Parameter	OnigCaseFoldCodeItem items [ ]	204:46:8190:8217	1144161	3	True				
ANR	1144202	ParameterType	OnigCaseFoldCodeItem [ ]		1144161	0					
ANR	1144203	Identifier	items		1144161	1					
ANR	1144204	CFGEntryNode	ENTRY		1144161		True				
ANR	1144205	CFGExitNode	EXIT		1144161		True				
ANR	1144206	Symbol	p		1144161						
ANR	1144207	Symbol	flag		1144161						
ANR	1144208	Symbol	end		1144161						
ANR	1144209	Symbol	CaseFoldMap		1144161						
ANR	1144210	Symbol	onigenc_get_case_fold_codes_by_str_with_map		1144161						
ANR	1144211	Symbol	items		1144161						
ANR	1144212	DeclStmt									
ANR	1144213	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_9
