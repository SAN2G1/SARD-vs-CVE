command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	515244	File	data/converged/CVE-2015-8617_php-src/ext_com_dotnet_com_iterator.c								
ANR	515245	ClassDef	php_com_iterator	32:0:1378:1583							
ANR	515246	DeclStmt									
ANR	515247	Decl							zend_object_iterator	zend_object_iterator	iter
ANR	515248	DeclStmt									
ANR	515249	Decl							IEnumVARIANT	IEnumVARIANT *	ev
ANR	515250	DeclStmt									
ANR	515251	Decl							zend_ulong	zend_ulong	key
ANR	515252	DeclStmt									
ANR	515253	Decl							VARIANT	VARIANT	v
ANR	515254	DeclStmt									
ANR	515255	Decl							int	int	code_page
ANR	515256	DeclStmt									
ANR	515257	Decl							VARIANT	VARIANT	safe_array
ANR	515258	DeclStmt									
ANR	515259	Decl							VARTYPE	VARTYPE	sa_type
ANR	515260	DeclStmt									
ANR	515261	Decl							LONG	LONG	sa_max
ANR	515262	DeclStmt									
ANR	515263	Decl							zval	zval	zdata
ANR	515264	Function	com_iter_dtor	44:0:1587:1847							
ANR	515265	FunctionDef	com_iter_dtor (zend_object_iterator * iter)		515264	0					
ANR	515266	CompoundStatement		45:0:1641:1847	515264	0					
ANR	515267	IdentifierDeclStatement	struct php_com_iterator * I = ( struct php_com_iterator * ) Z_PTR ( iter -> data ) ;	46:1:1644:1716	515264	0	True				
ANR	515268	IdentifierDecl	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515264	0					
ANR	515269	IdentifierDeclType	struct php_com_iterator *		515264	0					
ANR	515270	Identifier	I		515264	1					
ANR	515271	AssignmentExpression	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515264	2		=			
ANR	515272	Identifier	I		515264	0					
ANR	515273	CastExpression	( struct php_com_iterator * ) Z_PTR ( iter -> data )		515264	1					
ANR	515274	CastTarget	struct php_com_iterator *		515264	0					
ANR	515275	CallExpression	Z_PTR ( iter -> data )		515264	1					
ANR	515276	Callee	Z_PTR		515264	0					
ANR	515277	Identifier	Z_PTR		515264	0					
ANR	515278	ArgumentList	iter -> data		515264	1					
ANR	515279	Argument	iter -> data		515264	0					
ANR	515280	PtrMemberAccess	iter -> data		515264	0					
ANR	515281	Identifier	iter		515264	0					
ANR	515282	Identifier	data		515264	1					
ANR	515283	IfStatement	if ( I -> ev )		515264	1					
ANR	515284	Condition	I -> ev	48:5:1724:1728	515264	0	True				
ANR	515285	PtrMemberAccess	I -> ev		515264	0					
ANR	515286	Identifier	I		515264	0					
ANR	515287	Identifier	ev		515264	1					
ANR	515288	CompoundStatement		4:12:89:89	515264	1					
ANR	515289	ExpressionStatement	IEnumVARIANT_Release ( I -> ev )	49:2:1735:1762	515264	0	True				
ANR	515290	CallExpression	IEnumVARIANT_Release ( I -> ev )		515264	0					
ANR	515291	Callee	IEnumVARIANT_Release		515264	0					
ANR	515292	Identifier	IEnumVARIANT_Release		515264	0					
ANR	515293	ArgumentList	I -> ev		515264	1					
ANR	515294	Argument	I -> ev		515264	0					
ANR	515295	PtrMemberAccess	I -> ev		515264	0					
ANR	515296	Identifier	I		515264	0					
ANR	515297	Identifier	ev		515264	1					
ANR	515298	ExpressionStatement	VariantClear ( & I -> v )	51:1:1768:1787	515264	2	True				
ANR	515299	CallExpression	VariantClear ( & I -> v )		515264	0					
ANR	515300	Callee	VariantClear		515264	0					
ANR	515301	Identifier	VariantClear		515264	0					
ANR	515302	ArgumentList	& I -> v		515264	1					
ANR	515303	Argument	& I -> v		515264	0					
ANR	515304	UnaryOperationExpression	& I -> v		515264	0					
ANR	515305	UnaryOperator	&		515264	0					
ANR	515306	PtrMemberAccess	I -> v		515264	1					
ANR	515307	Identifier	I		515264	0					
ANR	515308	Identifier	v		515264	1					
ANR	515309	ExpressionStatement	VariantClear ( & I -> safe_array )	52:1:1790:1818	515264	3	True				
ANR	515310	CallExpression	VariantClear ( & I -> safe_array )		515264	0					
ANR	515311	Callee	VariantClear		515264	0					
ANR	515312	Identifier	VariantClear		515264	0					
ANR	515313	ArgumentList	& I -> safe_array		515264	1					
ANR	515314	Argument	& I -> safe_array		515264	0					
ANR	515315	UnaryOperationExpression	& I -> safe_array		515264	0					
ANR	515316	UnaryOperator	&		515264	0					
ANR	515317	PtrMemberAccess	I -> safe_array		515264	1					
ANR	515318	Identifier	I		515264	0					
ANR	515319	Identifier	safe_array		515264	1					
ANR	515320	ExpressionStatement	zval_ptr_dtor ( & I -> zdata )	53:1:1821:1845	515264	4	True				
ANR	515321	CallExpression	zval_ptr_dtor ( & I -> zdata )		515264	0					
ANR	515322	Callee	zval_ptr_dtor		515264	0					
ANR	515323	Identifier	zval_ptr_dtor		515264	0					
ANR	515324	ArgumentList	& I -> zdata		515264	1					
ANR	515325	Argument	& I -> zdata		515264	0					
ANR	515326	UnaryOperationExpression	& I -> zdata		515264	0					
ANR	515327	UnaryOperator	&		515264	0					
ANR	515328	PtrMemberAccess	I -> zdata		515264	1					
ANR	515329	Identifier	I		515264	0					
ANR	515330	Identifier	zdata		515264	1					
ANR	515331	ReturnType	static void		515264	1					
ANR	515332	Identifier	com_iter_dtor		515264	2					
ANR	515333	ParameterList	zend_object_iterator * iter		515264	3					
ANR	515334	Parameter	zend_object_iterator * iter	44:26:1613:1638	515264	0	True				
ANR	515335	ParameterType	zend_object_iterator *		515264	0					
ANR	515336	Identifier	iter		515264	1					
ANR	515337	CFGEntryNode	ENTRY		515264		True				
ANR	515338	CFGExitNode	EXIT		515264		True				
ANR	515339	Symbol	* iter		515264						
ANR	515340	Symbol	I -> ev		515264						
ANR	515341	Symbol	* I		515264						
ANR	515342	Symbol	& I -> v		515264						
ANR	515343	Symbol	& I -> safe_array		515264						
ANR	515344	Symbol	iter		515264						
ANR	515345	Symbol	I		515264						
ANR	515346	Symbol	Z_PTR		515264						
ANR	515347	Symbol	& I -> zdata		515264						
ANR	515348	Symbol	iter -> data		515264						
ANR	515349	Function	com_iter_valid	56:0:1850:2058							
ANR	515350	FunctionDef	com_iter_valid (zend_object_iterator * iter)		515349	0					
ANR	515351	CompoundStatement		57:0:1904:2058	515349	0					
ANR	515352	IdentifierDeclStatement	struct php_com_iterator * I = ( struct php_com_iterator * ) Z_PTR ( iter -> data ) ;	58:1:1907:1979	515349	0	True				
ANR	515353	IdentifierDecl	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515349	0					
ANR	515354	IdentifierDeclType	struct php_com_iterator *		515349	0					
ANR	515355	Identifier	I		515349	1					
ANR	515356	AssignmentExpression	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515349	2		=			
ANR	515357	Identifier	I		515349	0					
ANR	515358	CastExpression	( struct php_com_iterator * ) Z_PTR ( iter -> data )		515349	1					
ANR	515359	CastTarget	struct php_com_iterator *		515349	0					
ANR	515360	CallExpression	Z_PTR ( iter -> data )		515349	1					
ANR	515361	Callee	Z_PTR		515349	0					
ANR	515362	Identifier	Z_PTR		515349	0					
ANR	515363	ArgumentList	iter -> data		515349	1					
ANR	515364	Argument	iter -> data		515349	0					
ANR	515365	PtrMemberAccess	iter -> data		515349	0					
ANR	515366	Identifier	iter		515349	0					
ANR	515367	Identifier	data		515349	1					
ANR	515368	IfStatement	if ( Z_TYPE ( I -> zdata ) != IS_UNDEF )		515349	1					
ANR	515369	Condition	Z_TYPE ( I -> zdata ) != IS_UNDEF	60:5:1987:2014	515349	0	True				
ANR	515370	EqualityExpression	Z_TYPE ( I -> zdata ) != IS_UNDEF		515349	0		!=			
ANR	515371	CallExpression	Z_TYPE ( I -> zdata )		515349	0					
ANR	515372	Callee	Z_TYPE		515349	0					
ANR	515373	Identifier	Z_TYPE		515349	0					
ANR	515374	ArgumentList	I -> zdata		515349	1					
ANR	515375	Argument	I -> zdata		515349	0					
ANR	515376	PtrMemberAccess	I -> zdata		515349	0					
ANR	515377	Identifier	I		515349	0					
ANR	515378	Identifier	zdata		515349	1					
ANR	515379	Identifier	IS_UNDEF		515349	1					
ANR	515380	CompoundStatement		4:35:112:112	515349	1					
ANR	515381	ReturnStatement	return SUCCESS ;	61:2:2021:2035	515349	0	True				
ANR	515382	Identifier	SUCCESS		515349	0					
ANR	515383	ReturnStatement	return FAILURE ;	64:1:2042:2056	515349	2	True				
ANR	515384	Identifier	FAILURE		515349	0					
ANR	515385	ReturnType	static int		515349	1					
ANR	515386	Identifier	com_iter_valid		515349	2					
ANR	515387	ParameterList	zend_object_iterator * iter		515349	3					
ANR	515388	Parameter	zend_object_iterator * iter	56:26:1876:1901	515349	0	True				
ANR	515389	ParameterType	zend_object_iterator *		515349	0					
ANR	515390	Identifier	iter		515349	1					
ANR	515391	CFGEntryNode	ENTRY		515349		True				
ANR	515392	CFGExitNode	EXIT		515349		True				
ANR	515393	Symbol	* iter		515349						
ANR	515394	Symbol	* I		515349						
ANR	515395	Symbol	SUCCESS		515349						
ANR	515396	Symbol	iter		515349						
ANR	515397	Symbol	I		515349						
ANR	515398	Symbol	Z_PTR		515349						
ANR	515399	Symbol	Z_TYPE		515349						
ANR	515400	Symbol	I -> zdata		515349						
ANR	515401	Symbol	iter -> data		515349						
ANR	515402	Symbol	FAILURE		515349						
ANR	515403	Symbol	IS_UNDEF		515349						
ANR	515404	Function	com_iter_get_data	67:0:2061:2217							
ANR	515405	FunctionDef	com_iter_get_data (zend_object_iterator * iter)		515404	0					
ANR	515406	CompoundStatement		68:0:2120:2217	515404	0					
ANR	515407	IdentifierDeclStatement	struct php_com_iterator * I = ( struct php_com_iterator * ) Z_PTR ( iter -> data ) ;	69:1:2123:2195	515404	0	True				
ANR	515408	IdentifierDecl	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515404	0					
ANR	515409	IdentifierDeclType	struct php_com_iterator *		515404	0					
ANR	515410	Identifier	I		515404	1					
ANR	515411	AssignmentExpression	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515404	2		=			
ANR	515412	Identifier	I		515404	0					
ANR	515413	CastExpression	( struct php_com_iterator * ) Z_PTR ( iter -> data )		515404	1					
ANR	515414	CastTarget	struct php_com_iterator *		515404	0					
ANR	515415	CallExpression	Z_PTR ( iter -> data )		515404	1					
ANR	515416	Callee	Z_PTR		515404	0					
ANR	515417	Identifier	Z_PTR		515404	0					
ANR	515418	ArgumentList	iter -> data		515404	1					
ANR	515419	Argument	iter -> data		515404	0					
ANR	515420	PtrMemberAccess	iter -> data		515404	0					
ANR	515421	Identifier	iter		515404	0					
ANR	515422	Identifier	data		515404	1					
ANR	515423	ReturnStatement	return & I -> zdata ;	71:1:2199:2215	515404	1	True				
ANR	515424	UnaryOperationExpression	& I -> zdata		515404	0					
ANR	515425	UnaryOperator	&		515404	0					
ANR	515426	PtrMemberAccess	I -> zdata		515404	1					
ANR	515427	Identifier	I		515404	0					
ANR	515428	Identifier	zdata		515404	1					
ANR	515429	ReturnType	static zval *		515404	1					
ANR	515430	Identifier	com_iter_get_data		515404	2					
ANR	515431	ParameterList	zend_object_iterator * iter		515404	3					
ANR	515432	Parameter	zend_object_iterator * iter	67:31:2092:2117	515404	0	True				
ANR	515433	ParameterType	zend_object_iterator *		515404	0					
ANR	515434	Identifier	iter		515404	1					
ANR	515435	CFGEntryNode	ENTRY		515404		True				
ANR	515436	CFGExitNode	EXIT		515404		True				
ANR	515437	Symbol	* iter		515404						
ANR	515438	Symbol	iter		515404						
ANR	515439	Symbol	Z_PTR		515404						
ANR	515440	Symbol	I		515404						
ANR	515441	Symbol	& I -> zdata		515404						
ANR	515442	Symbol	iter -> data		515404						
ANR	515443	Function	com_iter_get_key	74:0:2220:2456							
ANR	515444	FunctionDef	"com_iter_get_key (zend_object_iterator * iter , zval * key)"		515443	0					
ANR	515445	CompoundStatement		75:0:2288:2456	515443	0					
ANR	515446	IdentifierDeclStatement	struct php_com_iterator * I = ( struct php_com_iterator * ) Z_PTR ( iter -> data ) ;	76:1:2291:2363	515443	0	True				
ANR	515447	IdentifierDecl	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515443	0					
ANR	515448	IdentifierDeclType	struct php_com_iterator *		515443	0					
ANR	515449	Identifier	I		515443	1					
ANR	515450	AssignmentExpression	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515443	2		=			
ANR	515451	Identifier	I		515443	0					
ANR	515452	CastExpression	( struct php_com_iterator * ) Z_PTR ( iter -> data )		515443	1					
ANR	515453	CastTarget	struct php_com_iterator *		515443	0					
ANR	515454	CallExpression	Z_PTR ( iter -> data )		515443	1					
ANR	515455	Callee	Z_PTR		515443	0					
ANR	515456	Identifier	Z_PTR		515443	0					
ANR	515457	ArgumentList	iter -> data		515443	1					
ANR	515458	Argument	iter -> data		515443	0					
ANR	515459	PtrMemberAccess	iter -> data		515443	0					
ANR	515460	Identifier	iter		515443	0					
ANR	515461	Identifier	data		515443	1					
ANR	515462	IfStatement	if ( I -> key == ( zend_ulong ) - 1 )		515443	1					
ANR	515463	Condition	I -> key == ( zend_ulong ) - 1	78:5:2371:2394	515443	0	True				
ANR	515464	EqualityExpression	I -> key == ( zend_ulong ) - 1		515443	0		==			
ANR	515465	PtrMemberAccess	I -> key		515443	0					
ANR	515466	Identifier	I		515443	0					
ANR	515467	Identifier	key		515443	1					
ANR	515468	CastExpression	( zend_ulong ) - 1		515443	1					
ANR	515469	CastTarget	zend_ulong		515443	0					
ANR	515470	UnaryOperationExpression	- 1		515443	1					
ANR	515471	UnaryOperator	-		515443	0					
ANR	515472	PrimaryExpression	1		515443	1					
ANR	515473	CompoundStatement		4:31:108:108	515443	1					
ANR	515474	ExpressionStatement	ZVAL_NULL ( key )	79:2:2401:2415	515443	0	True				
ANR	515475	CallExpression	ZVAL_NULL ( key )		515443	0					
ANR	515476	Callee	ZVAL_NULL		515443	0					
ANR	515477	Identifier	ZVAL_NULL		515443	0					
ANR	515478	ArgumentList	key		515443	1					
ANR	515479	Argument	key		515443	0					
ANR	515480	Identifier	key		515443	0					
ANR	515481	ElseStatement	else		515443	0					
ANR	515482	CompoundStatement		6:8:136:136	515443	0					
ANR	515483	ExpressionStatement	"ZVAL_LONG ( key , I -> key )"	81:2:2429:2451	515443	0	True				
ANR	515484	CallExpression	"ZVAL_LONG ( key , I -> key )"		515443	0					
ANR	515485	Callee	ZVAL_LONG		515443	0					
ANR	515486	Identifier	ZVAL_LONG		515443	0					
ANR	515487	ArgumentList	key		515443	1					
ANR	515488	Argument	key		515443	0					
ANR	515489	Identifier	key		515443	0					
ANR	515490	Argument	I -> key		515443	1					
ANR	515491	PtrMemberAccess	I -> key		515443	0					
ANR	515492	Identifier	I		515443	0					
ANR	515493	Identifier	key		515443	1					
ANR	515494	ReturnType	static void		515443	1					
ANR	515495	Identifier	com_iter_get_key		515443	2					
ANR	515496	ParameterList	"zend_object_iterator * iter , zval * key"		515443	3					
ANR	515497	Parameter	zend_object_iterator * iter	74:29:2249:2274	515443	0	True				
ANR	515498	ParameterType	zend_object_iterator *		515443	0					
ANR	515499	Identifier	iter		515443	1					
ANR	515500	Parameter	zval * key	74:57:2277:2285	515443	1	True				
ANR	515501	ParameterType	zval *		515443	0					
ANR	515502	Identifier	key		515443	1					
ANR	515503	CFGEntryNode	ENTRY		515443		True				
ANR	515504	CFGExitNode	EXIT		515443		True				
ANR	515505	Symbol	* iter		515443						
ANR	515506	Symbol	* I		515443						
ANR	515507	Symbol	I -> key		515443						
ANR	515508	Symbol	iter		515443						
ANR	515509	Symbol	Z_PTR		515443						
ANR	515510	Symbol	I		515443						
ANR	515511	Symbol	iter -> data		515443						
ANR	515512	Symbol	key		515443						
ANR	515513	Function	com_iter_move_forwards	85:0:2459:3467							
ANR	515514	FunctionDef	com_iter_move_forwards (zend_object_iterator * iter)		515513	0					
ANR	515515	CompoundStatement		86:0:2521:3467	515513	0					
ANR	515516	IdentifierDeclStatement	struct php_com_iterator * I = ( struct php_com_iterator * ) Z_PTR ( iter -> data ) ;	87:1:2524:2596	515513	0	True				
ANR	515517	IdentifierDecl	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515513	0					
ANR	515518	IdentifierDeclType	struct php_com_iterator *		515513	0					
ANR	515519	Identifier	I		515513	1					
ANR	515520	AssignmentExpression	* I = ( struct php_com_iterator * ) Z_PTR ( iter -> data )		515513	2		=			
ANR	515521	Identifier	I		515513	0					
ANR	515522	CastExpression	( struct php_com_iterator * ) Z_PTR ( iter -> data )		515513	1					
ANR	515523	CastTarget	struct php_com_iterator *		515513	0					
ANR	515524	CallExpression	Z_PTR ( iter -> data )		515513	1					
ANR	515525	Callee	Z_PTR		515513	0					
ANR	515526	Identifier	Z_PTR		515513	0					
ANR	515527	ArgumentList	iter -> data		515513	1					
ANR	515528	Argument	iter -> data		515513	0					
ANR	515529	PtrMemberAccess	iter -> data		515513	0					
ANR	515530	Identifier	iter		515513	0					
ANR	515531	Identifier	data		515513	1					
ANR	515532	IdentifierDeclStatement	unsigned long n_fetched ;	88:1:2599:2622	515513	1	True				
ANR	515533	IdentifierDecl	n_fetched		515513	0					
ANR	515534	IdentifierDeclType	unsigned long		515513	0					
ANR	515535	Identifier	n_fetched		515513	1					
ANR	515536	IdentifierDeclStatement	zval ptr ;	89:1:2625:2633	515513	2	True				
ANR	515537	IdentifierDecl	ptr		515513	0					
ANR	515538	IdentifierDeclType	zval		515513	0					
ANR	515539	Identifier	ptr		515513	1					
ANR	515540	ExpressionStatement	VariantClear ( & I -> v )	92:1:2675:2694	515513	3	True				
ANR	515541	CallExpression	VariantClear ( & I -> v )		515513	0					
ANR	515542	Callee	VariantClear		515513	0					
ANR	515543	Identifier	VariantClear		515513	0					
ANR	515544	ArgumentList	& I -> v		515513	1					
ANR	515545	Argument	& I -> v		515513	0					
ANR	515546	UnaryOperationExpression	& I -> v		515513	0					
ANR	515547	UnaryOperator	&		515513	0					
ANR	515548	PtrMemberAccess	I -> v		515513	1					
ANR	515549	Identifier	I		515513	0					
ANR	515550	Identifier	v		515513	1					
ANR	515551	IfStatement	if ( Z_TYPE ( I -> zdata ) != IS_UNDEF )		515513	4					
ANR	515552	Condition	Z_TYPE ( I -> zdata ) != IS_UNDEF	94:5:2702:2729	515513	0	True				
ANR	515553	EqualityExpression	Z_TYPE ( I -> zdata ) != IS_UNDEF		515513	0		!=			
ANR	515554	CallExpression	Z_TYPE ( I -> zdata )		515513	0					
ANR	515555	Callee	Z_TYPE		515513	0					
ANR	515556	Identifier	Z_TYPE		515513	0					
ANR	515557	ArgumentList	I -> zdata		515513	1					
ANR	515558	Argument	I -> zdata		515513	0					
ANR	515559	PtrMemberAccess	I -> zdata		515513	0					
ANR	515560	Identifier	I		515513	0					
ANR	515561	Identifier	zdata		515513	1					
ANR	515562	Identifier	IS_UNDEF		515513	1					
ANR	515563	CompoundStatement		9:35:210:210	515513	1					
ANR	515564	ExpressionStatement	zval_ptr_dtor ( & I -> zdata )	95:2:2736:2760	515513	0	True				
ANR	515565	CallExpression	zval_ptr_dtor ( & I -> zdata )		515513	0					
ANR	515566	Callee	zval_ptr_dtor		515513	0					
ANR	515567	Identifier	zval_ptr_dtor		515513	0					
ANR	515568	ArgumentList	& I -> zdata		515513	1					
ANR	515569	Argument	& I -> zdata		515513	0					
ANR	515570	UnaryOperationExpression	& I -> zdata		515513	0					
ANR	515571	UnaryOperator	&		515513	0					
ANR	515572	PtrMemberAccess	I -> zdata		515513	1					
ANR	515573	Identifier	I		515513	0					
ANR	515574	Identifier	zdata		515513	1					
ANR	515575	ExpressionStatement	ZVAL_UNDEF ( & I -> zdata )	96:2:2764:2785	515513	1	True				
ANR	515576	CallExpression	ZVAL_UNDEF ( & I -> zdata )		515513	0					
ANR	515577	Callee	ZVAL_UNDEF		515513	0					
ANR	515578	Identifier	ZVAL_UNDEF		515513	0					
ANR	515579	ArgumentList	& I -> zdata		515513	1					
ANR	515580	Argument	& I -> zdata		515513	0					
ANR	515581	UnaryOperationExpression	& I -> zdata		515513	0					
ANR	515582	UnaryOperator	&		515513	0					
ANR	515583	PtrMemberAccess	I -> zdata		515513	1					
ANR	515584	Identifier	I		515513	0					
ANR	515585	Identifier	zdata		515513	1					
ANR	515586	IfStatement	if ( I -> ev )		515513	5					
ANR	515587	Condition	I -> ev	99:5:2796:2800	515513	0	True				
ANR	515588	PtrMemberAccess	I -> ev		515513	0					
ANR	515589	Identifier	I		515513	0					
ANR	515590	Identifier	ev		515513	1					
ANR	515591	CompoundStatement		14:12:281:281	515513	1					
ANR	515592	IfStatement	"if ( SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) ) && n_fetched > 0 )"		515513	0					
ANR	515593	Condition	"SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) ) && n_fetched > 0"	101:6:2840:2913	515513	0	True				
ANR	515594	AndExpression	"SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) ) && n_fetched > 0"		515513	0		&&			
ANR	515595	CallExpression	"SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) )"		515513	0					
ANR	515596	Callee	SUCCEEDED		515513	0					
ANR	515597	Identifier	SUCCEEDED		515513	0					
ANR	515598	ArgumentList	"IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched )"		515513	1					
ANR	515599	Argument	"IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched )"		515513	0					
ANR	515600	CallExpression	"IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched )"		515513	0					
ANR	515601	Callee	IEnumVARIANT_Next		515513	0					
ANR	515602	Identifier	IEnumVARIANT_Next		515513	0					
ANR	515603	ArgumentList	I -> ev		515513	1					
ANR	515604	Argument	I -> ev		515513	0					
ANR	515605	PtrMemberAccess	I -> ev		515513	0					
ANR	515606	Identifier	I		515513	0					
ANR	515607	Identifier	ev		515513	1					
ANR	515608	Argument	1		515513	1					
ANR	515609	PrimaryExpression	1		515513	0					
ANR	515610	Argument	& I -> v		515513	2					
ANR	515611	UnaryOperationExpression	& I -> v		515513	0					
ANR	515612	UnaryOperator	&		515513	0					
ANR	515613	PtrMemberAccess	I -> v		515513	1					
ANR	515614	Identifier	I		515513	0					
ANR	515615	Identifier	v		515513	1					
ANR	515616	Argument	& n_fetched		515513	3					
ANR	515617	UnaryOperationExpression	& n_fetched		515513	0					
ANR	515618	UnaryOperator	&		515513	0					
ANR	515619	Identifier	n_fetched		515513	1					
ANR	515620	RelationalExpression	n_fetched > 0		515513	1		>			
ANR	515621	Identifier	n_fetched		515513	0					
ANR	515622	PrimaryExpression	0		515513	1					
ANR	515623	CompoundStatement		16:82:394:394	515513	1					
ANR	515624	ExpressionStatement	I -> key ++	102:3:2921:2929	515513	0	True				
ANR	515625	PostIncDecOperationExpression	I -> key ++		515513	0					
ANR	515626	PtrMemberAccess	I -> key		515513	0					
ANR	515627	Identifier	I		515513	0					
ANR	515628	Identifier	key		515513	1					
ANR	515629	IncDec	++		515513	1					
ANR	515630	ElseStatement	else		515513	0					
ANR	515631	CompoundStatement		18:9:418:418	515513	0					
ANR	515632	ExpressionStatement	I -> key = ( ulong ) - 1	105:3:2992:3010	515513	0	True				
ANR	515633	AssignmentExpression	I -> key = ( ulong ) - 1		515513	0		=			
ANR	515634	PtrMemberAccess	I -> key		515513	0					
ANR	515635	Identifier	I		515513	0					
ANR	515636	Identifier	key		515513	1					
ANR	515637	CastExpression	( ulong ) - 1		515513	1					
ANR	515638	CastTarget	ulong		515513	0					
ANR	515639	UnaryOperationExpression	- 1		515513	1					
ANR	515640	UnaryOperator	-		515513	0					
ANR	515641	PrimaryExpression	1		515513	1					
ANR	515642	ReturnStatement	return FAILURE ;	106:3:3015:3029	515513	1	True				
ANR	515643	Identifier	FAILURE		515513	0					
ANR	515644	ElseStatement	else		515513	0					
ANR	515645	CompoundStatement		23:8:521:521	515513	0					
ANR	515646	IfStatement	if ( I -> key >= ( ULONG ) I -> sa_max )		515513	0					
ANR	515647	Condition	I -> key >= ( ULONG ) I -> sa_max	110:6:3070:3096	515513	0	True				
ANR	515648	RelationalExpression	I -> key >= ( ULONG ) I -> sa_max		515513	0		>=			
ANR	515649	PtrMemberAccess	I -> key		515513	0					
ANR	515650	Identifier	I		515513	0					
ANR	515651	Identifier	key		515513	1					
ANR	515652	CastExpression	( ULONG ) I -> sa_max		515513	1					
ANR	515653	CastTarget	ULONG		515513	0					
ANR	515654	PtrMemberAccess	I -> sa_max		515513	1					
ANR	515655	Identifier	I		515513	0					
ANR	515656	Identifier	sa_max		515513	1					
ANR	515657	CompoundStatement		25:35:577:577	515513	1					
ANR	515658	ExpressionStatement	I -> key = ( ulong ) - 1	111:3:3104:3122	515513	0	True				
ANR	515659	AssignmentExpression	I -> key = ( ulong ) - 1		515513	0		=			
ANR	515660	PtrMemberAccess	I -> key		515513	0					
ANR	515661	Identifier	I		515513	0					
ANR	515662	Identifier	key		515513	1					
ANR	515663	CastExpression	( ulong ) - 1		515513	1					
ANR	515664	CastTarget	ulong		515513	0					
ANR	515665	UnaryOperationExpression	- 1		515513	1					
ANR	515666	UnaryOperator	-		515513	0					
ANR	515667	PrimaryExpression	1		515513	1					
ANR	515668	ReturnStatement	return FAILURE ;	112:3:3127:3141	515513	1	True				
ANR	515669	Identifier	FAILURE		515513	0					
ANR	515670	ExpressionStatement	I -> key ++	114:2:3149:3157	515513	1	True				
ANR	515671	PostIncDecOperationExpression	I -> key ++		515513	0					
ANR	515672	PtrMemberAccess	I -> key		515513	0					
ANR	515673	Identifier	I		515513	0					
ANR	515674	Identifier	key		515513	1					
ANR	515675	IncDec	++		515513	1					
ANR	515676	IfStatement	"if ( php_com_safearray_get_elem ( & I -> safe_array , & I -> v , ( LONG ) I -> key ) == 0 )"		515513	2					
ANR	515677	Condition	"php_com_safearray_get_elem ( & I -> safe_array , & I -> v , ( LONG ) I -> key ) == 0"	115:6:3165:3232	515513	0	True				
ANR	515678	EqualityExpression	"php_com_safearray_get_elem ( & I -> safe_array , & I -> v , ( LONG ) I -> key ) == 0"		515513	0		==			
ANR	515679	CallExpression	"php_com_safearray_get_elem ( & I -> safe_array , & I -> v , ( LONG ) I -> key )"		515513	0					
ANR	515680	Callee	php_com_safearray_get_elem		515513	0					
ANR	515681	Identifier	php_com_safearray_get_elem		515513	0					
ANR	515682	ArgumentList	& I -> safe_array		515513	1					
ANR	515683	Argument	& I -> safe_array		515513	0					
ANR	515684	UnaryOperationExpression	& I -> safe_array		515513	0					
ANR	515685	UnaryOperator	&		515513	0					
ANR	515686	PtrMemberAccess	I -> safe_array		515513	1					
ANR	515687	Identifier	I		515513	0					
ANR	515688	Identifier	safe_array		515513	1					
ANR	515689	Argument	& I -> v		515513	1					
ANR	515690	UnaryOperationExpression	& I -> v		515513	0					
ANR	515691	UnaryOperator	&		515513	0					
ANR	515692	PtrMemberAccess	I -> v		515513	1					
ANR	515693	Identifier	I		515513	0					
ANR	515694	Identifier	v		515513	1					
ANR	515695	Argument	( LONG ) I -> key		515513	2					
ANR	515696	CastExpression	( LONG ) I -> key		515513	0					
ANR	515697	CastTarget	LONG		515513	0					
ANR	515698	PtrMemberAccess	I -> key		515513	1					
ANR	515699	Identifier	I		515513	0					
ANR	515700	Identifier	key		515513	1					
ANR	515701	PrimaryExpression	0		515513	1					
ANR	515702	CompoundStatement		30:76:713:713	515513	1					
ANR	515703	ExpressionStatement	I -> key = ( ulong ) - 1	116:3:3240:3258	515513	0	True				
ANR	515704	AssignmentExpression	I -> key = ( ulong ) - 1		515513	0		=			
ANR	515705	PtrMemberAccess	I -> key		515513	0					
ANR	515706	Identifier	I		515513	0					
ANR	515707	Identifier	key		515513	1					
ANR	515708	CastExpression	( ulong ) - 1		515513	1					
ANR	515709	CastTarget	ulong		515513	0					
ANR	515710	UnaryOperationExpression	- 1		515513	1					
ANR	515711	UnaryOperator	-		515513	0					
ANR	515712	PrimaryExpression	1		515513	1					
ANR	515713	ReturnStatement	return FAILURE ;	117:3:3263:3277	515513	1	True				
ANR	515714	Identifier	FAILURE		515513	0					
ANR	515715	ExpressionStatement	ZVAL_NULL ( & ptr )	121:1:3288:3303	515513	6	True				
ANR	515716	CallExpression	ZVAL_NULL ( & ptr )		515513	0					
ANR	515717	Callee	ZVAL_NULL		515513	0					
ANR	515718	Identifier	ZVAL_NULL		515513	0					
ANR	515719	ArgumentList	& ptr		515513	1					
ANR	515720	Argument	& ptr		515513	0					
ANR	515721	UnaryOperationExpression	& ptr		515513	0					
ANR	515722	UnaryOperator	&		515513	0					
ANR	515723	Identifier	ptr		515513	1					
ANR	515724	ExpressionStatement	"php_com_zval_from_variant ( & ptr , & I -> v , I -> code_page )"	122:1:3306:3358	515513	7	True				
ANR	515725	CallExpression	"php_com_zval_from_variant ( & ptr , & I -> v , I -> code_page )"		515513	0					
ANR	515726	Callee	php_com_zval_from_variant		515513	0					
ANR	515727	Identifier	php_com_zval_from_variant		515513	0					
ANR	515728	ArgumentList	& ptr		515513	1					
ANR	515729	Argument	& ptr		515513	0					
ANR	515730	UnaryOperationExpression	& ptr		515513	0					
ANR	515731	UnaryOperator	&		515513	0					
ANR	515732	Identifier	ptr		515513	1					
ANR	515733	Argument	& I -> v		515513	1					
ANR	515734	UnaryOperationExpression	& I -> v		515513	0					
ANR	515735	UnaryOperator	&		515513	0					
ANR	515736	PtrMemberAccess	I -> v		515513	1					
ANR	515737	Identifier	I		515513	0					
ANR	515738	Identifier	v		515513	1					
ANR	515739	Argument	I -> code_page		515513	2					
ANR	515740	PtrMemberAccess	I -> code_page		515513	0					
ANR	515741	Identifier	I		515513	0					
ANR	515742	Identifier	code_page		515513	1					
ANR	515743	ExpressionStatement	"ZVAL_COPY_VALUE ( & I -> zdata , & ptr )"	124:1:3416:3448	515513	8	True				
ANR	515744	CallExpression	"ZVAL_COPY_VALUE ( & I -> zdata , & ptr )"		515513	0					
ANR	515745	Callee	ZVAL_COPY_VALUE		515513	0					
ANR	515746	Identifier	ZVAL_COPY_VALUE		515513	0					
ANR	515747	ArgumentList	& I -> zdata		515513	1					
ANR	515748	Argument	& I -> zdata		515513	0					
ANR	515749	UnaryOperationExpression	& I -> zdata		515513	0					
ANR	515750	UnaryOperator	&		515513	0					
ANR	515751	PtrMemberAccess	I -> zdata		515513	1					
ANR	515752	Identifier	I		515513	0					
ANR	515753	Identifier	zdata		515513	1					
ANR	515754	Argument	& ptr		515513	1					
ANR	515755	UnaryOperationExpression	& ptr		515513	0					
ANR	515756	UnaryOperator	&		515513	0					
ANR	515757	Identifier	ptr		515513	1					
ANR	515758	ReturnStatement	return SUCCESS ;	125:1:3451:3465	515513	9	True				
ANR	515759	Identifier	SUCCESS		515513	0					
ANR	515760	ReturnType	static int		515513	1					
ANR	515761	Identifier	com_iter_move_forwards		515513	2					
ANR	515762	ParameterList	zend_object_iterator * iter		515513	3					
ANR	515763	Parameter	zend_object_iterator * iter	85:34:2493:2518	515513	0	True				
ANR	515764	ParameterType	zend_object_iterator *		515513	0					
ANR	515765	Identifier	iter		515513	1					
ANR	515766	CFGEntryNode	ENTRY		515513		True				
ANR	515767	CFGExitNode	EXIT		515513		True				
ANR	515768	Symbol	Z_PTR		515513						
ANR	515769	Symbol	I		515513						
ANR	515770	Symbol	Z_TYPE		515513						
ANR	515771	Symbol	* iter		515513						
ANR	515772	Symbol	I -> code_page		515513						
ANR	515773	Symbol	* I		515513						
ANR	515774	Symbol	& ptr		515513						
ANR	515775	Symbol	n_fetched		515513						
ANR	515776	Symbol	IEnumVARIANT_Next		515513						
ANR	515777	Symbol	I -> sa_max		515513						
ANR	515778	Symbol	IS_UNDEF		515513						
ANR	515779	Symbol	SUCCESS		515513						
ANR	515780	Symbol	& I -> v		515513						
ANR	515781	Symbol	I -> key		515513						
ANR	515782	Symbol	& I -> safe_array		515513						
ANR	515783	Symbol	php_com_safearray_get_elem		515513						
ANR	515784	Symbol	iter		515513						
ANR	515785	Symbol	& I -> zdata		515513						
ANR	515786	Symbol	FAILURE		515513						
ANR	515787	Symbol	ptr		515513						
ANR	515788	Symbol	& n_fetched		515513						
ANR	515789	Symbol	I -> ev		515513						
ANR	515790	Symbol	SUCCEEDED		515513						
ANR	515791	Symbol	I -> zdata		515513						
ANR	515792	Symbol	iter -> data		515513						
ANR	515793	DeclStmt									
ANR	515794	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	com_iter_funcs
ANR	515795	Function	php_com_iter_get	138:0:3631:6377							
ANR	515796	FunctionDef	"php_com_iter_get (zend_class_entry * ce , zval * object , int by_ref)"		515795	0					
ANR	515797	CompoundStatement		139:0:3718:6377	515795	0					
ANR	515798	IdentifierDeclStatement	php_com_dotnet_object * obj ;	140:1:3721:3747	515795	0	True				
ANR	515799	IdentifierDecl	* obj		515795	0					
ANR	515800	IdentifierDeclType	php_com_dotnet_object *		515795	0					
ANR	515801	Identifier	obj		515795	1					
ANR	515802	IdentifierDeclStatement	struct php_com_iterator * I ;	141:1:3750:3776	515795	1	True				
ANR	515803	IdentifierDecl	* I		515795	0					
ANR	515804	IdentifierDeclType	struct php_com_iterator *		515795	0					
ANR	515805	Identifier	I		515795	1					
ANR	515806	IdentifierDeclStatement	IEnumVARIANT * iev = NULL ;	142:1:3779:3803	515795	2	True				
ANR	515807	IdentifierDecl	* iev = NULL		515795	0					
ANR	515808	IdentifierDeclType	IEnumVARIANT *		515795	0					
ANR	515809	Identifier	iev		515795	1					
ANR	515810	AssignmentExpression	* iev = NULL		515795	2		=			
ANR	515811	Identifier	NULL		515795	0					
ANR	515812	Identifier	NULL		515795	1					
ANR	515813	IdentifierDeclStatement	DISPPARAMS dp ;	143:1:3806:3819	515795	3	True				
ANR	515814	IdentifierDecl	dp		515795	0					
ANR	515815	IdentifierDeclType	DISPPARAMS		515795	0					
ANR	515816	Identifier	dp		515795	1					
ANR	515817	IdentifierDeclStatement	VARIANT v ;	144:1:3822:3831	515795	4	True				
ANR	515818	IdentifierDecl	v		515795	0					
ANR	515819	IdentifierDeclType	VARIANT		515795	0					
ANR	515820	Identifier	v		515795	1					
ANR	515821	IdentifierDeclStatement	unsigned long n_fetched ;	145:1:3834:3857	515795	5	True				
ANR	515822	IdentifierDecl	n_fetched		515795	0					
ANR	515823	IdentifierDeclType	unsigned long		515795	0					
ANR	515824	Identifier	n_fetched		515795	1					
ANR	515825	IdentifierDeclStatement	zval ptr ;	146:1:3860:3868	515795	6	True				
ANR	515826	IdentifierDecl	ptr		515795	0					
ANR	515827	IdentifierDeclType	zval		515795	0					
ANR	515828	Identifier	ptr		515795	1					
ANR	515829	IfStatement	if ( by_ref )		515795	7					
ANR	515830	Condition	by_ref	148:5:3876:3881	515795	0	True				
ANR	515831	Identifier	by_ref		515795	0					
ANR	515832	CompoundStatement		10:13:165:165	515795	1					
ANR	515833	ExpressionStatement	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"	149:2:3888:3963	515795	0	True				
ANR	515834	CallExpression	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"		515795	0					
ANR	515835	Callee	zend_error		515795	0					
ANR	515836	Identifier	zend_error		515795	0					
ANR	515837	ArgumentList	E_ERROR		515795	1					
ANR	515838	Argument	E_ERROR		515795	0					
ANR	515839	Identifier	E_ERROR		515795	0					
ANR	515840	Argument	"""An iterator cannot be used with foreach by reference"""		515795	1					
ANR	515841	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		515795	0					
ANR	515842	ExpressionStatement	obj = CDNO_FETCH ( object )	152:1:3970:3994	515795	8	True				
ANR	515843	AssignmentExpression	obj = CDNO_FETCH ( object )		515795	0		=			
ANR	515844	Identifier	obj		515795	0					
ANR	515845	CallExpression	CDNO_FETCH ( object )		515795	1					
ANR	515846	Callee	CDNO_FETCH		515795	0					
ANR	515847	Identifier	CDNO_FETCH		515795	0					
ANR	515848	ArgumentList	object		515795	1					
ANR	515849	Argument	object		515795	0					
ANR	515850	Identifier	object		515795	0					
ANR	515851	IfStatement	if ( V_VT ( & obj -> v ) != VT_DISPATCH && ! V_ISARRAY ( & obj -> v ) )		515795	9					
ANR	515852	Condition	V_VT ( & obj -> v ) != VT_DISPATCH && ! V_ISARRAY ( & obj -> v )	154:5:4002:4052	515795	0	True				
ANR	515853	AndExpression	V_VT ( & obj -> v ) != VT_DISPATCH && ! V_ISARRAY ( & obj -> v )		515795	0		&&			
ANR	515854	EqualityExpression	V_VT ( & obj -> v ) != VT_DISPATCH		515795	0		!=			
ANR	515855	CallExpression	V_VT ( & obj -> v )		515795	0					
ANR	515856	Callee	V_VT		515795	0					
ANR	515857	Identifier	V_VT		515795	0					
ANR	515858	ArgumentList	& obj -> v		515795	1					
ANR	515859	Argument	& obj -> v		515795	0					
ANR	515860	UnaryOperationExpression	& obj -> v		515795	0					
ANR	515861	UnaryOperator	&		515795	0					
ANR	515862	PtrMemberAccess	obj -> v		515795	1					
ANR	515863	Identifier	obj		515795	0					
ANR	515864	Identifier	v		515795	1					
ANR	515865	Identifier	VT_DISPATCH		515795	1					
ANR	515866	UnaryOperationExpression	! V_ISARRAY ( & obj -> v )		515795	1					
ANR	515867	UnaryOperator	!		515795	0					
ANR	515868	CallExpression	V_ISARRAY ( & obj -> v )		515795	1					
ANR	515869	Callee	V_ISARRAY		515795	0					
ANR	515870	Identifier	V_ISARRAY		515795	0					
ANR	515871	ArgumentList	& obj -> v		515795	1					
ANR	515872	Argument	& obj -> v		515795	0					
ANR	515873	UnaryOperationExpression	& obj -> v		515795	0					
ANR	515874	UnaryOperator	&		515795	0					
ANR	515875	PtrMemberAccess	obj -> v		515795	1					
ANR	515876	Identifier	obj		515795	0					
ANR	515877	Identifier	v		515795	1					
ANR	515878	CompoundStatement		16:58:336:336	515795	1					
ANR	515879	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""variant is not an object or array VT=%d"" , V_VT ( & obj -> v ) )"	155:2:4059:4150	515795	0	True				
ANR	515880	CallExpression	"php_error_docref ( NULL , E_WARNING , ""variant is not an object or array VT=%d"" , V_VT ( & obj -> v ) )"		515795	0					
ANR	515881	Callee	php_error_docref		515795	0					
ANR	515882	Identifier	php_error_docref		515795	0					
ANR	515883	ArgumentList	NULL		515795	1					
ANR	515884	Argument	NULL		515795	0					
ANR	515885	Identifier	NULL		515795	0					
ANR	515886	Argument	E_WARNING		515795	1					
ANR	515887	Identifier	E_WARNING		515795	0					
ANR	515888	Argument	"""variant is not an object or array VT=%d"""		515795	2					
ANR	515889	PrimaryExpression	"""variant is not an object or array VT=%d"""		515795	0					
ANR	515890	Argument	V_VT ( & obj -> v )		515795	3					
ANR	515891	CallExpression	V_VT ( & obj -> v )		515795	0					
ANR	515892	Callee	V_VT		515795	0					
ANR	515893	Identifier	V_VT		515795	0					
ANR	515894	ArgumentList	& obj -> v		515795	1					
ANR	515895	Argument	& obj -> v		515795	0					
ANR	515896	UnaryOperationExpression	& obj -> v		515795	0					
ANR	515897	UnaryOperator	&		515795	0					
ANR	515898	PtrMemberAccess	obj -> v		515795	1					
ANR	515899	Identifier	obj		515795	0					
ANR	515900	Identifier	v		515795	1					
ANR	515901	ReturnStatement	return NULL ;	156:2:4154:4165	515795	1	True				
ANR	515902	Identifier	NULL		515795	0					
ANR	515903	ExpressionStatement	"memset ( & dp , 0 , sizeof ( dp ) )"	159:1:4172:4198	515795	10	True				
ANR	515904	CallExpression	"memset ( & dp , 0 , sizeof ( dp ) )"		515795	0					
ANR	515905	Callee	memset		515795	0					
ANR	515906	Identifier	memset		515795	0					
ANR	515907	ArgumentList	& dp		515795	1					
ANR	515908	Argument	& dp		515795	0					
ANR	515909	UnaryOperationExpression	& dp		515795	0					
ANR	515910	UnaryOperator	&		515795	0					
ANR	515911	Identifier	dp		515795	1					
ANR	515912	Argument	0		515795	1					
ANR	515913	PrimaryExpression	0		515795	0					
ANR	515914	Argument	sizeof ( dp )		515795	2					
ANR	515915	SizeofExpression	sizeof ( dp )		515795	0					
ANR	515916	Sizeof	sizeof		515795	0					
ANR	515917	SizeofOperand	dp		515795	1					
ANR	515918	ExpressionStatement	VariantInit ( & v )	160:1:4201:4216	515795	11	True				
ANR	515919	CallExpression	VariantInit ( & v )		515795	0					
ANR	515920	Callee	VariantInit		515795	0					
ANR	515921	Identifier	VariantInit		515795	0					
ANR	515922	ArgumentList	& v		515795	1					
ANR	515923	Argument	& v		515795	0					
ANR	515924	UnaryOperationExpression	& v		515795	0					
ANR	515925	UnaryOperator	&		515795	0					
ANR	515926	Identifier	v		515795	1					
ANR	515927	ExpressionStatement	"I = ( struct php_com_iterator * ) ecalloc ( 1 , sizeof ( * I ) )"	162:1:4220:4272	515795	12	True				
ANR	515928	AssignmentExpression	"I = ( struct php_com_iterator * ) ecalloc ( 1 , sizeof ( * I ) )"		515795	0		=			
ANR	515929	Identifier	I		515795	0					
ANR	515930	CastExpression	"( struct php_com_iterator * ) ecalloc ( 1 , sizeof ( * I ) )"		515795	1					
ANR	515931	CastTarget	struct php_com_iterator *		515795	0					
ANR	515932	CallExpression	"ecalloc ( 1 , sizeof ( * I ) )"		515795	1					
ANR	515933	Callee	ecalloc		515795	0					
ANR	515934	Identifier	ecalloc		515795	0					
ANR	515935	ArgumentList	1		515795	1					
ANR	515936	Argument	1		515795	0					
ANR	515937	PrimaryExpression	1		515795	0					
ANR	515938	Argument	sizeof ( * I )		515795	1					
ANR	515939	SizeofExpression	sizeof ( * I )		515795	0					
ANR	515940	Sizeof	sizeof		515795	0					
ANR	515941	UnaryOperationExpression	* I		515795	1					
ANR	515942	UnaryOperator	*		515795	0					
ANR	515943	Identifier	I		515795	1					
ANR	515944	ExpressionStatement	zend_iterator_init ( & I -> iter )	163:1:4275:4303	515795	13	True				
ANR	515945	CallExpression	zend_iterator_init ( & I -> iter )		515795	0					
ANR	515946	Callee	zend_iterator_init		515795	0					
ANR	515947	Identifier	zend_iterator_init		515795	0					
ANR	515948	ArgumentList	& I -> iter		515795	1					
ANR	515949	Argument	& I -> iter		515795	0					
ANR	515950	UnaryOperationExpression	& I -> iter		515795	0					
ANR	515951	UnaryOperator	&		515795	0					
ANR	515952	PtrMemberAccess	I -> iter		515795	1					
ANR	515953	Identifier	I		515795	0					
ANR	515954	Identifier	iter		515795	1					
ANR	515955	ExpressionStatement	I -> iter . funcs = & com_iter_funcs	164:1:4306:4337	515795	14	True				
ANR	515956	AssignmentExpression	I -> iter . funcs = & com_iter_funcs		515795	0		=			
ANR	515957	MemberAccess	I -> iter . funcs		515795	0					
ANR	515958	PtrMemberAccess	I -> iter		515795	0					
ANR	515959	Identifier	I		515795	0					
ANR	515960	Identifier	iter		515795	1					
ANR	515961	Identifier	funcs		515795	1					
ANR	515962	UnaryOperationExpression	& com_iter_funcs		515795	1					
ANR	515963	UnaryOperator	&		515795	0					
ANR	515964	Identifier	com_iter_funcs		515795	1					
ANR	515965	ExpressionStatement	Z_PTR ( I -> iter . data ) = I	165:1:4340:4363	515795	15	True				
ANR	515966	AssignmentExpression	Z_PTR ( I -> iter . data ) = I		515795	0		=			
ANR	515967	CallExpression	Z_PTR ( I -> iter . data )		515795	0					
ANR	515968	Callee	Z_PTR		515795	0					
ANR	515969	Identifier	Z_PTR		515795	0					
ANR	515970	ArgumentList	I -> iter . data		515795	1					
ANR	515971	Argument	I -> iter . data		515795	0					
ANR	515972	MemberAccess	I -> iter . data		515795	0					
ANR	515973	PtrMemberAccess	I -> iter		515795	0					
ANR	515974	Identifier	I		515795	0					
ANR	515975	Identifier	iter		515795	1					
ANR	515976	Identifier	data		515795	1					
ANR	515977	Identifier	I		515795	1					
ANR	515978	ExpressionStatement	I -> code_page = obj -> code_page	166:1:4366:4395	515795	16	True				
ANR	515979	AssignmentExpression	I -> code_page = obj -> code_page		515795	0		=			
ANR	515980	PtrMemberAccess	I -> code_page		515795	0					
ANR	515981	Identifier	I		515795	0					
ANR	515982	Identifier	code_page		515795	1					
ANR	515983	PtrMemberAccess	obj -> code_page		515795	1					
ANR	515984	Identifier	obj		515795	0					
ANR	515985	Identifier	code_page		515795	1					
ANR	515986	ExpressionStatement	ZVAL_UNDEF ( & I -> zdata )	167:1:4398:4419	515795	17	True				
ANR	515987	CallExpression	ZVAL_UNDEF ( & I -> zdata )		515795	0					
ANR	515988	Callee	ZVAL_UNDEF		515795	0					
ANR	515989	Identifier	ZVAL_UNDEF		515795	0					
ANR	515990	ArgumentList	& I -> zdata		515795	1					
ANR	515991	Argument	& I -> zdata		515795	0					
ANR	515992	UnaryOperationExpression	& I -> zdata		515795	0					
ANR	515993	UnaryOperator	&		515795	0					
ANR	515994	PtrMemberAccess	I -> zdata		515795	1					
ANR	515995	Identifier	I		515795	0					
ANR	515996	Identifier	zdata		515795	1					
ANR	515997	ExpressionStatement	VariantInit ( & I -> safe_array )	168:1:4422:4449	515795	18	True				
ANR	515998	CallExpression	VariantInit ( & I -> safe_array )		515795	0					
ANR	515999	Callee	VariantInit		515795	0					
ANR	516000	Identifier	VariantInit		515795	0					
ANR	516001	ArgumentList	& I -> safe_array		515795	1					
ANR	516002	Argument	& I -> safe_array		515795	0					
ANR	516003	UnaryOperationExpression	& I -> safe_array		515795	0					
ANR	516004	UnaryOperator	&		515795	0					
ANR	516005	PtrMemberAccess	I -> safe_array		515795	1					
ANR	516006	Identifier	I		515795	0					
ANR	516007	Identifier	safe_array		515795	1					
ANR	516008	ExpressionStatement	VariantInit ( & I -> v )	169:1:4452:4470	515795	19	True				
ANR	516009	CallExpression	VariantInit ( & I -> v )		515795	0					
ANR	516010	Callee	VariantInit		515795	0					
ANR	516011	Identifier	VariantInit		515795	0					
ANR	516012	ArgumentList	& I -> v		515795	1					
ANR	516013	Argument	& I -> v		515795	0					
ANR	516014	UnaryOperationExpression	& I -> v		515795	0					
ANR	516015	UnaryOperator	&		515795	0					
ANR	516016	PtrMemberAccess	I -> v		515795	1					
ANR	516017	Identifier	I		515795	0					
ANR	516018	Identifier	v		515795	1					
ANR	516019	IfStatement	if ( V_ISARRAY ( & obj -> v ) )		515795	20					
ANR	516020	Condition	V_ISARRAY ( & obj -> v )	171:5:4478:4495	515795	0	True				
ANR	516021	CallExpression	V_ISARRAY ( & obj -> v )		515795	0					
ANR	516022	Callee	V_ISARRAY		515795	0					
ANR	516023	Identifier	V_ISARRAY		515795	0					
ANR	516024	ArgumentList	& obj -> v		515795	1					
ANR	516025	Argument	& obj -> v		515795	0					
ANR	516026	UnaryOperationExpression	& obj -> v		515795	0					
ANR	516027	UnaryOperator	&		515795	0					
ANR	516028	PtrMemberAccess	obj -> v		515795	1					
ANR	516029	Identifier	obj		515795	0					
ANR	516030	Identifier	v		515795	1					
ANR	516031	CompoundStatement		35:2:797:806	515795	1					
ANR	516032	IdentifierDeclStatement	LONG bound ;	172:2:4502:4512	515795	0	True				
ANR	516033	IdentifierDecl	bound		515795	0					
ANR	516034	IdentifierDeclType	LONG		515795	0					
ANR	516035	Identifier	bound		515795	1					
ANR	516036	IdentifierDeclStatement	UINT dims ;	173:2:4516:4525	515795	1	True				
ANR	516037	IdentifierDecl	dims		515795	0					
ANR	516038	IdentifierDeclType	UINT		515795	0					
ANR	516039	Identifier	dims		515795	1					
ANR	516040	ExpressionStatement	dims = SafeArrayGetDim ( V_ARRAY ( & obj -> v ) )	175:2:4530:4570	515795	2	True				
ANR	516041	AssignmentExpression	dims = SafeArrayGetDim ( V_ARRAY ( & obj -> v ) )		515795	0		=			
ANR	516042	Identifier	dims		515795	0					
ANR	516043	CallExpression	SafeArrayGetDim ( V_ARRAY ( & obj -> v ) )		515795	1					
ANR	516044	Callee	SafeArrayGetDim		515795	0					
ANR	516045	Identifier	SafeArrayGetDim		515795	0					
ANR	516046	ArgumentList	V_ARRAY ( & obj -> v )		515795	1					
ANR	516047	Argument	V_ARRAY ( & obj -> v )		515795	0					
ANR	516048	CallExpression	V_ARRAY ( & obj -> v )		515795	0					
ANR	516049	Callee	V_ARRAY		515795	0					
ANR	516050	Identifier	V_ARRAY		515795	0					
ANR	516051	ArgumentList	& obj -> v		515795	1					
ANR	516052	Argument	& obj -> v		515795	0					
ANR	516053	UnaryOperationExpression	& obj -> v		515795	0					
ANR	516054	UnaryOperator	&		515795	0					
ANR	516055	PtrMemberAccess	obj -> v		515795	1					
ANR	516056	Identifier	obj		515795	0					
ANR	516057	Identifier	v		515795	1					
ANR	516058	IfStatement	if ( dims != 1 )		515795	3					
ANR	516059	Condition	dims != 1	177:6:4579:4587	515795	0	True				
ANR	516060	EqualityExpression	dims != 1		515795	0		!=			
ANR	516061	Identifier	dims		515795	0					
ANR	516062	PrimaryExpression	1		515795	1					
ANR	516063	CompoundStatement		39:17:871:871	515795	1					
ANR	516064	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Can only handle single dimension variant arrays (this array has %d)"" , dims )"	178:3:4595:4712	515795	0	True				
ANR	516065	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Can only handle single dimension variant arrays (this array has %d)"" , dims )"		515795	0					
ANR	516066	Callee	php_error_docref		515795	0					
ANR	516067	Identifier	php_error_docref		515795	0					
ANR	516068	ArgumentList	NULL		515795	1					
ANR	516069	Argument	NULL		515795	0					
ANR	516070	Identifier	NULL		515795	0					
ANR	516071	Argument	E_WARNING		515795	1					
ANR	516072	Identifier	E_WARNING		515795	0					
ANR	516073	Argument	"""Can only handle single dimension variant arrays (this array has %d)"""		515795	2					
ANR	516074	PrimaryExpression	"""Can only handle single dimension variant arrays (this array has %d)"""		515795	0					
ANR	516075	Argument	dims		515795	3					
ANR	516076	Identifier	dims		515795	0					
ANR	516077	GotoStatement	goto fail ;	180:3:4717:4726	515795	1	True				
ANR	516078	Identifier	fail		515795	0					
ANR	516079	ExpressionStatement	"VariantCopy ( & I -> safe_array , & obj -> v )"	185:2:4826:4862	515795	4	True				
ANR	516080	CallExpression	"VariantCopy ( & I -> safe_array , & obj -> v )"		515795	0					
ANR	516081	Callee	VariantCopy		515795	0					
ANR	516082	Identifier	VariantCopy		515795	0					
ANR	516083	ArgumentList	& I -> safe_array		515795	1					
ANR	516084	Argument	& I -> safe_array		515795	0					
ANR	516085	UnaryOperationExpression	& I -> safe_array		515795	0					
ANR	516086	UnaryOperator	&		515795	0					
ANR	516087	PtrMemberAccess	I -> safe_array		515795	1					
ANR	516088	Identifier	I		515795	0					
ANR	516089	Identifier	safe_array		515795	1					
ANR	516090	Argument	& obj -> v		515795	1					
ANR	516091	UnaryOperationExpression	& obj -> v		515795	0					
ANR	516092	UnaryOperator	&		515795	0					
ANR	516093	PtrMemberAccess	obj -> v		515795	1					
ANR	516094	Identifier	obj		515795	0					
ANR	516095	Identifier	v		515795	1					
ANR	516096	ExpressionStatement	"SafeArrayGetLBound ( V_ARRAY ( & I -> safe_array ) , 1 , & bound )"	188:2:4913:4967	515795	5	True				
ANR	516097	CallExpression	"SafeArrayGetLBound ( V_ARRAY ( & I -> safe_array ) , 1 , & bound )"		515795	0					
ANR	516098	Callee	SafeArrayGetLBound		515795	0					
ANR	516099	Identifier	SafeArrayGetLBound		515795	0					
ANR	516100	ArgumentList	V_ARRAY ( & I -> safe_array )		515795	1					
ANR	516101	Argument	V_ARRAY ( & I -> safe_array )		515795	0					
ANR	516102	CallExpression	V_ARRAY ( & I -> safe_array )		515795	0					
ANR	516103	Callee	V_ARRAY		515795	0					
ANR	516104	Identifier	V_ARRAY		515795	0					
ANR	516105	ArgumentList	& I -> safe_array		515795	1					
ANR	516106	Argument	& I -> safe_array		515795	0					
ANR	516107	UnaryOperationExpression	& I -> safe_array		515795	0					
ANR	516108	UnaryOperator	&		515795	0					
ANR	516109	PtrMemberAccess	I -> safe_array		515795	1					
ANR	516110	Identifier	I		515795	0					
ANR	516111	Identifier	safe_array		515795	1					
ANR	516112	Argument	1		515795	1					
ANR	516113	PrimaryExpression	1		515795	0					
ANR	516114	Argument	& bound		515795	2					
ANR	516115	UnaryOperationExpression	& bound		515795	0					
ANR	516116	UnaryOperator	&		515795	0					
ANR	516117	Identifier	bound		515795	1					
ANR	516118	ExpressionStatement	"SafeArrayGetUBound ( V_ARRAY ( & I -> safe_array ) , 1 , & I -> sa_max )"	189:2:4971:5029	515795	6	True				
ANR	516119	CallExpression	"SafeArrayGetUBound ( V_ARRAY ( & I -> safe_array ) , 1 , & I -> sa_max )"		515795	0					
ANR	516120	Callee	SafeArrayGetUBound		515795	0					
ANR	516121	Identifier	SafeArrayGetUBound		515795	0					
ANR	516122	ArgumentList	V_ARRAY ( & I -> safe_array )		515795	1					
ANR	516123	Argument	V_ARRAY ( & I -> safe_array )		515795	0					
ANR	516124	CallExpression	V_ARRAY ( & I -> safe_array )		515795	0					
ANR	516125	Callee	V_ARRAY		515795	0					
ANR	516126	Identifier	V_ARRAY		515795	0					
ANR	516127	ArgumentList	& I -> safe_array		515795	1					
ANR	516128	Argument	& I -> safe_array		515795	0					
ANR	516129	UnaryOperationExpression	& I -> safe_array		515795	0					
ANR	516130	UnaryOperator	&		515795	0					
ANR	516131	PtrMemberAccess	I -> safe_array		515795	1					
ANR	516132	Identifier	I		515795	0					
ANR	516133	Identifier	safe_array		515795	1					
ANR	516134	Argument	1		515795	1					
ANR	516135	PrimaryExpression	1		515795	0					
ANR	516136	Argument	& I -> sa_max		515795	2					
ANR	516137	UnaryOperationExpression	& I -> sa_max		515795	0					
ANR	516138	UnaryOperator	&		515795	0					
ANR	516139	PtrMemberAccess	I -> sa_max		515795	1					
ANR	516140	Identifier	I		515795	0					
ANR	516141	Identifier	sa_max		515795	1					
ANR	516142	IfStatement	"if ( php_com_safearray_get_elem ( & I -> safe_array , & I -> v , bound ) )"		515795	7					
ANR	516143	Condition	"php_com_safearray_get_elem ( & I -> safe_array , & I -> v , bound )"	192:6:5068:5123	515795	0	True				
ANR	516144	CallExpression	"php_com_safearray_get_elem ( & I -> safe_array , & I -> v , bound )"		515795	0					
ANR	516145	Callee	php_com_safearray_get_elem		515795	0					
ANR	516146	Identifier	php_com_safearray_get_elem		515795	0					
ANR	516147	ArgumentList	& I -> safe_array		515795	1					
ANR	516148	Argument	& I -> safe_array		515795	0					
ANR	516149	UnaryOperationExpression	& I -> safe_array		515795	0					
ANR	516150	UnaryOperator	&		515795	0					
ANR	516151	PtrMemberAccess	I -> safe_array		515795	1					
ANR	516152	Identifier	I		515795	0					
ANR	516153	Identifier	safe_array		515795	1					
ANR	516154	Argument	& I -> v		515795	1					
ANR	516155	UnaryOperationExpression	& I -> v		515795	0					
ANR	516156	UnaryOperator	&		515795	0					
ANR	516157	PtrMemberAccess	I -> v		515795	1					
ANR	516158	Identifier	I		515795	0					
ANR	516159	Identifier	v		515795	1					
ANR	516160	Argument	bound		515795	2					
ANR	516161	Identifier	bound		515795	0					
ANR	516162	CompoundStatement		54:64:1407:1407	515795	1					
ANR	516163	ExpressionStatement	I -> key = bound	193:3:5131:5145	515795	0	True				
ANR	516164	AssignmentExpression	I -> key = bound		515795	0		=			
ANR	516165	PtrMemberAccess	I -> key		515795	0					
ANR	516166	Identifier	I		515795	0					
ANR	516167	Identifier	key		515795	1					
ANR	516168	Identifier	bound		515795	1					
ANR	516169	ExpressionStatement	ZVAL_NULL ( & ptr )	194:3:5150:5165	515795	1	True				
ANR	516170	CallExpression	ZVAL_NULL ( & ptr )		515795	0					
ANR	516171	Callee	ZVAL_NULL		515795	0					
ANR	516172	Identifier	ZVAL_NULL		515795	0					
ANR	516173	ArgumentList	& ptr		515795	1					
ANR	516174	Argument	& ptr		515795	0					
ANR	516175	UnaryOperationExpression	& ptr		515795	0					
ANR	516176	UnaryOperator	&		515795	0					
ANR	516177	Identifier	ptr		515795	1					
ANR	516178	ExpressionStatement	"php_com_zval_from_variant ( & ptr , & I -> v , I -> code_page )"	195:3:5170:5222	515795	2	True				
ANR	516179	CallExpression	"php_com_zval_from_variant ( & ptr , & I -> v , I -> code_page )"		515795	0					
ANR	516180	Callee	php_com_zval_from_variant		515795	0					
ANR	516181	Identifier	php_com_zval_from_variant		515795	0					
ANR	516182	ArgumentList	& ptr		515795	1					
ANR	516183	Argument	& ptr		515795	0					
ANR	516184	UnaryOperationExpression	& ptr		515795	0					
ANR	516185	UnaryOperator	&		515795	0					
ANR	516186	Identifier	ptr		515795	1					
ANR	516187	Argument	& I -> v		515795	1					
ANR	516188	UnaryOperationExpression	& I -> v		515795	0					
ANR	516189	UnaryOperator	&		515795	0					
ANR	516190	PtrMemberAccess	I -> v		515795	1					
ANR	516191	Identifier	I		515795	0					
ANR	516192	Identifier	v		515795	1					
ANR	516193	Argument	I -> code_page		515795	2					
ANR	516194	PtrMemberAccess	I -> code_page		515795	0					
ANR	516195	Identifier	I		515795	0					
ANR	516196	Identifier	code_page		515795	1					
ANR	516197	ExpressionStatement	"ZVAL_COPY_VALUE ( & I -> zdata , & ptr )"	196:3:5227:5259	515795	3	True				
ANR	516198	CallExpression	"ZVAL_COPY_VALUE ( & I -> zdata , & ptr )"		515795	0					
ANR	516199	Callee	ZVAL_COPY_VALUE		515795	0					
ANR	516200	Identifier	ZVAL_COPY_VALUE		515795	0					
ANR	516201	ArgumentList	& I -> zdata		515795	1					
ANR	516202	Argument	& I -> zdata		515795	0					
ANR	516203	UnaryOperationExpression	& I -> zdata		515795	0					
ANR	516204	UnaryOperator	&		515795	0					
ANR	516205	PtrMemberAccess	I -> zdata		515795	1					
ANR	516206	Identifier	I		515795	0					
ANR	516207	Identifier	zdata		515795	1					
ANR	516208	Argument	& ptr		515795	1					
ANR	516209	UnaryOperationExpression	& ptr		515795	0					
ANR	516210	UnaryOperator	&		515795	0					
ANR	516211	Identifier	ptr		515795	1					
ANR	516212	ElseStatement	else		515795	0					
ANR	516213	CompoundStatement		59:9:1551:1551	515795	0					
ANR	516214	ExpressionStatement	I -> key = ( ulong ) - 1	198:3:5275:5293	515795	0	True				
ANR	516215	AssignmentExpression	I -> key = ( ulong ) - 1		515795	0		=			
ANR	516216	PtrMemberAccess	I -> key		515795	0					
ANR	516217	Identifier	I		515795	0					
ANR	516218	Identifier	key		515795	1					
ANR	516219	CastExpression	( ulong ) - 1		515795	1					
ANR	516220	CastTarget	ulong		515795	0					
ANR	516221	UnaryOperationExpression	- 1		515795	1					
ANR	516222	UnaryOperator	-		515795	0					
ANR	516223	PrimaryExpression	1		515795	1					
ANR	516224	ElseStatement	else		515795	0					
ANR	516225	CompoundStatement		63:8:1589:1589	515795	0					
ANR	516226	IfStatement	"if ( FAILED ( IDispatch_Invoke ( V_DISPATCH ( & obj -> v ) , DISPID_NEWENUM , & IID_NULL , LOCALE_SYSTEM_DEFAULT , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & dp , & v , NULL , NULL ) ) )"		515795	0					
ANR	516227	Condition	"FAILED ( IDispatch_Invoke ( V_DISPATCH ( & obj -> v ) , DISPID_NEWENUM , & IID_NULL , LOCALE_SYSTEM_DEFAULT , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & dp , & v , NULL , NULL ) )"	203:6:5345:5510	515795	0	True				
ANR	516228	CallExpression	"FAILED ( IDispatch_Invoke ( V_DISPATCH ( & obj -> v ) , DISPID_NEWENUM , & IID_NULL , LOCALE_SYSTEM_DEFAULT , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & dp , & v , NULL , NULL ) )"		515795	0					
ANR	516229	Callee	FAILED		515795	0					
ANR	516230	Identifier	FAILED		515795	0					
ANR	516231	ArgumentList	"IDispatch_Invoke ( V_DISPATCH ( & obj -> v ) , DISPID_NEWENUM , & IID_NULL , LOCALE_SYSTEM_DEFAULT , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & dp , & v , NULL , NULL )"		515795	1					
ANR	516232	Argument	"IDispatch_Invoke ( V_DISPATCH ( & obj -> v ) , DISPID_NEWENUM , & IID_NULL , LOCALE_SYSTEM_DEFAULT , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & dp , & v , NULL , NULL )"		515795	0					
ANR	516233	CallExpression	"IDispatch_Invoke ( V_DISPATCH ( & obj -> v ) , DISPID_NEWENUM , & IID_NULL , LOCALE_SYSTEM_DEFAULT , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & dp , & v , NULL , NULL )"		515795	0					
ANR	516234	Callee	IDispatch_Invoke		515795	0					
ANR	516235	Identifier	IDispatch_Invoke		515795	0					
ANR	516236	ArgumentList	V_DISPATCH ( & obj -> v )		515795	1					
ANR	516237	Argument	V_DISPATCH ( & obj -> v )		515795	0					
ANR	516238	CallExpression	V_DISPATCH ( & obj -> v )		515795	0					
ANR	516239	Callee	V_DISPATCH		515795	0					
ANR	516240	Identifier	V_DISPATCH		515795	0					
ANR	516241	ArgumentList	& obj -> v		515795	1					
ANR	516242	Argument	& obj -> v		515795	0					
ANR	516243	UnaryOperationExpression	& obj -> v		515795	0					
ANR	516244	UnaryOperator	&		515795	0					
ANR	516245	PtrMemberAccess	obj -> v		515795	1					
ANR	516246	Identifier	obj		515795	0					
ANR	516247	Identifier	v		515795	1					
ANR	516248	Argument	DISPID_NEWENUM		515795	1					
ANR	516249	Identifier	DISPID_NEWENUM		515795	0					
ANR	516250	Argument	& IID_NULL		515795	2					
ANR	516251	UnaryOperationExpression	& IID_NULL		515795	0					
ANR	516252	UnaryOperator	&		515795	0					
ANR	516253	Identifier	IID_NULL		515795	1					
ANR	516254	Argument	LOCALE_SYSTEM_DEFAULT		515795	3					
ANR	516255	Identifier	LOCALE_SYSTEM_DEFAULT		515795	0					
ANR	516256	Argument	DISPATCH_METHOD | DISPATCH_PROPERTYGET		515795	4					
ANR	516257	InclusiveOrExpression	DISPATCH_METHOD | DISPATCH_PROPERTYGET		515795	0		|			
ANR	516258	Identifier	DISPATCH_METHOD		515795	0					
ANR	516259	Identifier	DISPATCH_PROPERTYGET		515795	1					
ANR	516260	Argument	& dp		515795	5					
ANR	516261	UnaryOperationExpression	& dp		515795	0					
ANR	516262	UnaryOperator	&		515795	0					
ANR	516263	Identifier	dp		515795	1					
ANR	516264	Argument	& v		515795	6					
ANR	516265	UnaryOperationExpression	& v		515795	0					
ANR	516266	UnaryOperator	&		515795	0					
ANR	516267	Identifier	v		515795	1					
ANR	516268	Argument	NULL		515795	7					
ANR	516269	Identifier	NULL		515795	0					
ANR	516270	Argument	NULL		515795	8					
ANR	516271	Identifier	NULL		515795	0					
ANR	516272	CompoundStatement		67:29:1794:1794	515795	1					
ANR	516273	GotoStatement	goto fail ;	206:3:5518:5527	515795	0	True				
ANR	516274	Identifier	fail		515795	0					
ANR	516275	IfStatement	if ( V_VT ( & v ) == VT_UNKNOWN )		515795	1					
ANR	516276	Condition	V_VT ( & v ) == VT_UNKNOWN	210:6:5579:5600	515795	0	True				
ANR	516277	EqualityExpression	V_VT ( & v ) == VT_UNKNOWN		515795	0		==			
ANR	516278	CallExpression	V_VT ( & v )		515795	0					
ANR	516279	Callee	V_VT		515795	0					
ANR	516280	Identifier	V_VT		515795	0					
ANR	516281	ArgumentList	& v		515795	1					
ANR	516282	Argument	& v		515795	0					
ANR	516283	UnaryOperationExpression	& v		515795	0					
ANR	516284	UnaryOperator	&		515795	0					
ANR	516285	Identifier	v		515795	1					
ANR	516286	Identifier	VT_UNKNOWN		515795	1					
ANR	516287	CompoundStatement		72:30:1884:1884	515795	1					
ANR	516288	ExpressionStatement	"IUnknown_QueryInterface ( V_UNKNOWN ( & v ) , & IID_IEnumVARIANT , ( void * * ) & iev )"	211:3:5608:5679	515795	0	True				
ANR	516289	CallExpression	"IUnknown_QueryInterface ( V_UNKNOWN ( & v ) , & IID_IEnumVARIANT , ( void * * ) & iev )"		515795	0					
ANR	516290	Callee	IUnknown_QueryInterface		515795	0					
ANR	516291	Identifier	IUnknown_QueryInterface		515795	0					
ANR	516292	ArgumentList	V_UNKNOWN ( & v )		515795	1					
ANR	516293	Argument	V_UNKNOWN ( & v )		515795	0					
ANR	516294	CallExpression	V_UNKNOWN ( & v )		515795	0					
ANR	516295	Callee	V_UNKNOWN		515795	0					
ANR	516296	Identifier	V_UNKNOWN		515795	0					
ANR	516297	ArgumentList	& v		515795	1					
ANR	516298	Argument	& v		515795	0					
ANR	516299	UnaryOperationExpression	& v		515795	0					
ANR	516300	UnaryOperator	&		515795	0					
ANR	516301	Identifier	v		515795	1					
ANR	516302	Argument	& IID_IEnumVARIANT		515795	1					
ANR	516303	UnaryOperationExpression	& IID_IEnumVARIANT		515795	0					
ANR	516304	UnaryOperator	&		515795	0					
ANR	516305	Identifier	IID_IEnumVARIANT		515795	1					
ANR	516306	Argument	( void * * ) & iev		515795	2					
ANR	516307	CastExpression	( void * * ) & iev		515795	0					
ANR	516308	CastTarget	void * *		515795	0					
ANR	516309	UnaryOperationExpression	& iev		515795	1					
ANR	516310	UnaryOperator	&		515795	0					
ANR	516311	Identifier	iev		515795	1					
ANR	516312	ElseStatement	else		515795	0					
ANR	516313	IfStatement	if ( V_VT ( & v ) == VT_DISPATCH )		515795	0					
ANR	516314	Condition	V_VT ( & v ) == VT_DISPATCH	212:13:5694:5716	515795	0	True				
ANR	516315	EqualityExpression	V_VT ( & v ) == VT_DISPATCH		515795	0		==			
ANR	516316	CallExpression	V_VT ( & v )		515795	0					
ANR	516317	Callee	V_VT		515795	0					
ANR	516318	Identifier	V_VT		515795	0					
ANR	516319	ArgumentList	& v		515795	1					
ANR	516320	Argument	& v		515795	0					
ANR	516321	UnaryOperationExpression	& v		515795	0					
ANR	516322	UnaryOperator	&		515795	0					
ANR	516323	Identifier	v		515795	1					
ANR	516324	Identifier	VT_DISPATCH		515795	1					
ANR	516325	CompoundStatement		74:38:2000:2000	515795	1					
ANR	516326	ExpressionStatement	"IDispatch_QueryInterface ( V_DISPATCH ( & v ) , & IID_IEnumVARIANT , ( void * * ) & iev )"	213:3:5724:5797	515795	0	True				
ANR	516327	CallExpression	"IDispatch_QueryInterface ( V_DISPATCH ( & v ) , & IID_IEnumVARIANT , ( void * * ) & iev )"		515795	0					
ANR	516328	Callee	IDispatch_QueryInterface		515795	0					
ANR	516329	Identifier	IDispatch_QueryInterface		515795	0					
ANR	516330	ArgumentList	V_DISPATCH ( & v )		515795	1					
ANR	516331	Argument	V_DISPATCH ( & v )		515795	0					
ANR	516332	CallExpression	V_DISPATCH ( & v )		515795	0					
ANR	516333	Callee	V_DISPATCH		515795	0					
ANR	516334	Identifier	V_DISPATCH		515795	0					
ANR	516335	ArgumentList	& v		515795	1					
ANR	516336	Argument	& v		515795	0					
ANR	516337	UnaryOperationExpression	& v		515795	0					
ANR	516338	UnaryOperator	&		515795	0					
ANR	516339	Identifier	v		515795	1					
ANR	516340	Argument	& IID_IEnumVARIANT		515795	1					
ANR	516341	UnaryOperationExpression	& IID_IEnumVARIANT		515795	0					
ANR	516342	UnaryOperator	&		515795	0					
ANR	516343	Identifier	IID_IEnumVARIANT		515795	1					
ANR	516344	Argument	( void * * ) & iev		515795	2					
ANR	516345	CastExpression	( void * * ) & iev		515795	0					
ANR	516346	CastTarget	void * *		515795	0					
ANR	516347	UnaryOperationExpression	& iev		515795	1					
ANR	516348	UnaryOperator	&		515795	0					
ANR	516349	Identifier	iev		515795	1					
ANR	516350	ExpressionStatement	VariantClear ( & v )	216:2:5806:5822	515795	2	True				
ANR	516351	CallExpression	VariantClear ( & v )		515795	0					
ANR	516352	Callee	VariantClear		515795	0					
ANR	516353	Identifier	VariantClear		515795	0					
ANR	516354	ArgumentList	& v		515795	1					
ANR	516355	Argument	& v		515795	0					
ANR	516356	UnaryOperationExpression	& v		515795	0					
ANR	516357	UnaryOperator	&		515795	0					
ANR	516358	Identifier	v		515795	1					
ANR	516359	IfStatement	if ( iev == NULL )		515795	3					
ANR	516360	Condition	iev == NULL	218:6:5831:5841	515795	0	True				
ANR	516361	EqualityExpression	iev == NULL		515795	0		==			
ANR	516362	Identifier	iev		515795	0					
ANR	516363	Identifier	NULL		515795	1					
ANR	516364	CompoundStatement		80:19:2125:2125	515795	1					
ANR	516365	GotoStatement	goto fail ;	219:3:5849:5858	515795	0	True				
ANR	516366	Identifier	fail		515795	0					
ANR	516367	ExpressionStatement	I -> ev = iev	222:2:5867:5878	515795	4	True				
ANR	516368	AssignmentExpression	I -> ev = iev		515795	0		=			
ANR	516369	PtrMemberAccess	I -> ev		515795	0					
ANR	516370	Identifier	I		515795	0					
ANR	516371	Identifier	ev		515795	1					
ANR	516372	Identifier	iev		515795	1					
ANR	516373	IfStatement	"if ( SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) ) && n_fetched > 0 )"		515795	5					
ANR	516374	Condition	"SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) ) && n_fetched > 0"	225:6:5921:5994	515795	0	True				
ANR	516375	AndExpression	"SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) ) && n_fetched > 0"		515795	0		&&			
ANR	516376	CallExpression	"SUCCEEDED ( IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched ) )"		515795	0					
ANR	516377	Callee	SUCCEEDED		515795	0					
ANR	516378	Identifier	SUCCEEDED		515795	0					
ANR	516379	ArgumentList	"IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched )"		515795	1					
ANR	516380	Argument	"IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched )"		515795	0					
ANR	516381	CallExpression	"IEnumVARIANT_Next ( I -> ev , 1 , & I -> v , & n_fetched )"		515795	0					
ANR	516382	Callee	IEnumVARIANT_Next		515795	0					
ANR	516383	Identifier	IEnumVARIANT_Next		515795	0					
ANR	516384	ArgumentList	I -> ev		515795	1					
ANR	516385	Argument	I -> ev		515795	0					
ANR	516386	PtrMemberAccess	I -> ev		515795	0					
ANR	516387	Identifier	I		515795	0					
ANR	516388	Identifier	ev		515795	1					
ANR	516389	Argument	1		515795	1					
ANR	516390	PrimaryExpression	1		515795	0					
ANR	516391	Argument	& I -> v		515795	2					
ANR	516392	UnaryOperationExpression	& I -> v		515795	0					
ANR	516393	UnaryOperator	&		515795	0					
ANR	516394	PtrMemberAccess	I -> v		515795	1					
ANR	516395	Identifier	I		515795	0					
ANR	516396	Identifier	v		515795	1					
ANR	516397	Argument	& n_fetched		515795	3					
ANR	516398	UnaryOperationExpression	& n_fetched		515795	0					
ANR	516399	UnaryOperator	&		515795	0					
ANR	516400	Identifier	n_fetched		515795	1					
ANR	516401	RelationalExpression	n_fetched > 0		515795	1		>			
ANR	516402	Identifier	n_fetched		515795	0					
ANR	516403	PrimaryExpression	0		515795	1					
ANR	516404	CompoundStatement		87:82:2278:2278	515795	1					
ANR	516405	ExpressionStatement	I -> key = 0	227:3:6043:6053	515795	0	True				
ANR	516406	AssignmentExpression	I -> key = 0		515795	0		=			
ANR	516407	PtrMemberAccess	I -> key		515795	0					
ANR	516408	Identifier	I		515795	0					
ANR	516409	Identifier	key		515795	1					
ANR	516410	PrimaryExpression	0		515795	1					
ANR	516411	ExpressionStatement	ZVAL_NULL ( & ptr )	228:3:6058:6073	515795	1	True				
ANR	516412	CallExpression	ZVAL_NULL ( & ptr )		515795	0					
ANR	516413	Callee	ZVAL_NULL		515795	0					
ANR	516414	Identifier	ZVAL_NULL		515795	0					
ANR	516415	ArgumentList	& ptr		515795	1					
ANR	516416	Argument	& ptr		515795	0					
ANR	516417	UnaryOperationExpression	& ptr		515795	0					
ANR	516418	UnaryOperator	&		515795	0					
ANR	516419	Identifier	ptr		515795	1					
ANR	516420	ExpressionStatement	"php_com_zval_from_variant ( & ptr , & I -> v , I -> code_page )"	229:3:6078:6130	515795	2	True				
ANR	516421	CallExpression	"php_com_zval_from_variant ( & ptr , & I -> v , I -> code_page )"		515795	0					
ANR	516422	Callee	php_com_zval_from_variant		515795	0					
ANR	516423	Identifier	php_com_zval_from_variant		515795	0					
ANR	516424	ArgumentList	& ptr		515795	1					
ANR	516425	Argument	& ptr		515795	0					
ANR	516426	UnaryOperationExpression	& ptr		515795	0					
ANR	516427	UnaryOperator	&		515795	0					
ANR	516428	Identifier	ptr		515795	1					
ANR	516429	Argument	& I -> v		515795	1					
ANR	516430	UnaryOperationExpression	& I -> v		515795	0					
ANR	516431	UnaryOperator	&		515795	0					
ANR	516432	PtrMemberAccess	I -> v		515795	1					
ANR	516433	Identifier	I		515795	0					
ANR	516434	Identifier	v		515795	1					
ANR	516435	Argument	I -> code_page		515795	2					
ANR	516436	PtrMemberAccess	I -> code_page		515795	0					
ANR	516437	Identifier	I		515795	0					
ANR	516438	Identifier	code_page		515795	1					
ANR	516439	ExpressionStatement	"ZVAL_COPY_VALUE ( & I -> zdata , & ptr )"	230:3:6135:6167	515795	3	True				
ANR	516440	CallExpression	"ZVAL_COPY_VALUE ( & I -> zdata , & ptr )"		515795	0					
ANR	516441	Callee	ZVAL_COPY_VALUE		515795	0					
ANR	516442	Identifier	ZVAL_COPY_VALUE		515795	0					
ANR	516443	ArgumentList	& I -> zdata		515795	1					
ANR	516444	Argument	& I -> zdata		515795	0					
ANR	516445	UnaryOperationExpression	& I -> zdata		515795	0					
ANR	516446	UnaryOperator	&		515795	0					
ANR	516447	PtrMemberAccess	I -> zdata		515795	1					
ANR	516448	Identifier	I		515795	0					
ANR	516449	Identifier	zdata		515795	1					
ANR	516450	Argument	& ptr		515795	1					
ANR	516451	UnaryOperationExpression	& ptr		515795	0					
ANR	516452	UnaryOperator	&		515795	0					
ANR	516453	Identifier	ptr		515795	1					
ANR	516454	ElseStatement	else		515795	0					
ANR	516455	CompoundStatement		93:9:2459:2459	515795	0					
ANR	516456	ExpressionStatement	I -> key = ( ulong ) - 1	233:3:6230:6248	515795	0	True				
ANR	516457	AssignmentExpression	I -> key = ( ulong ) - 1		515795	0		=			
ANR	516458	PtrMemberAccess	I -> key		515795	0					
ANR	516459	Identifier	I		515795	0					
ANR	516460	Identifier	key		515795	1					
ANR	516461	CastExpression	( ulong ) - 1		515795	1					
ANR	516462	CastTarget	ulong		515795	0					
ANR	516463	UnaryOperationExpression	- 1		515795	1					
ANR	516464	UnaryOperator	-		515795	0					
ANR	516465	PrimaryExpression	1		515795	1					
ANR	516466	ReturnStatement	return & I -> iter ;	237:1:6259:6274	515795	21	True				
ANR	516467	UnaryOperationExpression	& I -> iter		515795	0					
ANR	516468	UnaryOperator	&		515795	0					
ANR	516469	PtrMemberAccess	I -> iter		515795	1					
ANR	516470	Identifier	I		515795	0					
ANR	516471	Identifier	iter		515795	1					
ANR	516472	Label	fail :	239:0:6277:6281	515795	22	True				
ANR	516473	Identifier	fail		515795	0					
ANR	516474	IfStatement	if ( I )		515795	23					
ANR	516475	Condition	I	240:5:6288:6288	515795	0	True				
ANR	516476	Identifier	I		515795	0					
ANR	516477	CompoundStatement		102:8:2572:2572	515795	1					
ANR	516478	ExpressionStatement	VariantClear ( & I -> safe_array )	241:2:6295:6323	515795	0	True				
ANR	516479	CallExpression	VariantClear ( & I -> safe_array )		515795	0					
ANR	516480	Callee	VariantClear		515795	0					
ANR	516481	Identifier	VariantClear		515795	0					
ANR	516482	ArgumentList	& I -> safe_array		515795	1					
ANR	516483	Argument	& I -> safe_array		515795	0					
ANR	516484	UnaryOperationExpression	& I -> safe_array		515795	0					
ANR	516485	UnaryOperator	&		515795	0					
ANR	516486	PtrMemberAccess	I -> safe_array		515795	1					
ANR	516487	Identifier	I		515795	0					
ANR	516488	Identifier	safe_array		515795	1					
ANR	516489	ExpressionStatement	VariantClear ( & I -> v )	242:2:6327:6346	515795	1	True				
ANR	516490	CallExpression	VariantClear ( & I -> v )		515795	0					
ANR	516491	Callee	VariantClear		515795	0					
ANR	516492	Identifier	VariantClear		515795	0					
ANR	516493	ArgumentList	& I -> v		515795	1					
ANR	516494	Argument	& I -> v		515795	0					
ANR	516495	UnaryOperationExpression	& I -> v		515795	0					
ANR	516496	UnaryOperator	&		515795	0					
ANR	516497	PtrMemberAccess	I -> v		515795	1					
ANR	516498	Identifier	I		515795	0					
ANR	516499	Identifier	v		515795	1					
ANR	516500	ExpressionStatement	efree ( I )	243:2:6350:6358	515795	2	True				
ANR	516501	CallExpression	efree ( I )		515795	0					
ANR	516502	Callee	efree		515795	0					
ANR	516503	Identifier	efree		515795	0					
ANR	516504	ArgumentList	I		515795	1					
ANR	516505	Argument	I		515795	0					
ANR	516506	Identifier	I		515795	0					
ANR	516507	ReturnStatement	return NULL ;	245:1:6364:6375	515795	24	True				
ANR	516508	Identifier	NULL		515795	0					
ANR	516509	ReturnType	zend_object_iterator *		515795	1					
ANR	516510	Identifier	php_com_iter_get		515795	2					
ANR	516511	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		515795	3					
ANR	516512	Parameter	zend_class_entry * ce	138:39:3670:3689	515795	0	True				
ANR	516513	ParameterType	zend_class_entry *		515795	0					
ANR	516514	Identifier	ce		515795	1					
ANR	516515	Parameter	zval * object	138:61:3692:3703	515795	1	True				
ANR	516516	ParameterType	zval *		515795	0					
ANR	516517	Identifier	object		515795	1					
ANR	516518	Parameter	int by_ref	138:75:3706:3715	515795	2	True				
ANR	516519	ParameterType	int		515795	0					
ANR	516520	Identifier	by_ref		515795	1					
ANR	516521	CFGEntryNode	ENTRY		515795		True				
ANR	516522	CFGExitNode	EXIT		515795		True				
ANR	516523	Symbol	dp		515795						
ANR	516524	Symbol	& I -> sa_max		515795						
ANR	516525	Symbol	FAILED		515795						
ANR	516526	Symbol	n_fetched		515795						
ANR	516527	Symbol	IEnumVARIANT_Next		515795						
ANR	516528	Symbol	ecalloc		515795						
ANR	516529	Symbol	LOCALE_SYSTEM_DEFAULT		515795						
ANR	516530	Symbol	& com_iter_funcs		515795						
ANR	516531	Symbol	V_UNKNOWN		515795						
ANR	516532	Symbol	NULL		515795						
ANR	516533	Symbol	I -> iter . data		515795						
ANR	516534	Symbol	VT_UNKNOWN		515795						
ANR	516535	Symbol	VT_DISPATCH		515795						
ANR	516536	Symbol	DISPID_NEWENUM		515795						
ANR	516537	Symbol	& IID_IEnumVARIANT		515795						
ANR	516538	Symbol	& n_fetched		515795						
ANR	516539	Symbol	I -> ev		515795						
ANR	516540	Symbol	I -> iter		515795						
ANR	516541	Symbol	SUCCEEDED		515795						
ANR	516542	Symbol	by_ref		515795						
ANR	516543	Symbol	V_ARRAY		515795						
ANR	516544	Symbol	object		515795						
ANR	516545	Symbol	dims		515795						
ANR	516546	Symbol	& IID_NULL		515795						
ANR	516547	Symbol	& iev		515795						
ANR	516548	Symbol	I		515795						
ANR	516549	Symbol	Z_PTR		515795						
ANR	516550	Symbol	E_WARNING		515795						
ANR	516551	Symbol	I -> code_page		515795						
ANR	516552	Symbol	* I		515795						
ANR	516553	Symbol	& ptr		515795						
ANR	516554	Symbol	I -> iter . funcs		515795						
ANR	516555	Symbol	& I -> iter		515795						
ANR	516556	Symbol	SafeArrayGetDim		515795						
ANR	516557	Symbol	& dp		515795						
ANR	516558	Symbol	CDNO_FETCH		515795						
ANR	516559	Symbol	iev		515795						
ANR	516560	Symbol	* obj		515795						
ANR	516561	Symbol	ce		515795						
ANR	516562	Symbol	& bound		515795						
ANR	516563	Symbol	& I -> safe_array		515795						
ANR	516564	Symbol	& I -> v		515795						
ANR	516565	Symbol	I -> key		515795						
ANR	516566	Symbol	bound		515795						
ANR	516567	Symbol	php_com_safearray_get_elem		515795						
ANR	516568	Symbol	IDispatch_Invoke		515795						
ANR	516569	Symbol	& I -> zdata		515795						
ANR	516570	Symbol	obj -> code_page		515795						
ANR	516571	Symbol	ptr		515795						
ANR	516572	Symbol	V_VT		515795						
ANR	516573	Symbol	DISPATCH_METHOD		515795						
ANR	516574	Symbol	DISPATCH_PROPERTYGET		515795						
ANR	516575	Symbol	E_ERROR		515795						
ANR	516576	Symbol	V_DISPATCH		515795						
ANR	516577	Symbol	obj		515795						
ANR	516578	Symbol	v		515795						
ANR	516579	Symbol	V_ISARRAY		515795						
ANR	516580	Symbol	& obj -> v		515795						
ANR	516581	Symbol	& v		515795						
