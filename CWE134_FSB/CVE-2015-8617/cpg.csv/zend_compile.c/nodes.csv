command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3910569	File	data/converged/CVE-2015-8617_php-src/zend_compile.c								
ANR	3910570	DeclStmt									
ANR	3910571	Decl							target	target	_type
ANR	3910572	DeclStmt									
ANR	3910573	Decl							src	src	_type
ANR	3910574	ClassDef	_zend_loop_var	57:8:2214:2388							
ANR	3910575	DeclStmt									
ANR	3910576	Decl							zend_uchar	zend_uchar	opcode
ANR	3910577	DeclStmt									
ANR	3910578	Decl							zend_uchar	zend_uchar	var_type
ANR	3910579	DeclStmt									
ANR	3910580	Decl							uint32_t	uint32_t	var_num
ANR	3910581	ClassDef	<unnamed>	61:1:2302:2371							
ANR	3910582	DeclStmt									
ANR	3910583	Decl							uint32_t	uint32_t	try_catch_offset
ANR	3910584	DeclStmt									
ANR	3910585	Decl							uint32_t	uint32_t	brk_cont_offset
ANR	3910586	DeclStmt									
ANR	3910587	Decl									u
ANR	3910588	DeclStmt									
ANR	3910589	Decl							_zend_loop_var	_zend_loop_var	zend_loop_var
ANR	3910590	Function	zend_alloc_cache_slot	67:0:2391:2607							
ANR	3910591	FunctionDef	zend_alloc_cache_slot (uint32_t literal)		3910590	0					
ANR	3910592	CompoundStatement		67:59:2450:2607	3910590	0					
ANR	3910593	IdentifierDeclStatement	zend_op_array * op_array = CG ( active_op_array ) ;	68:1:2453:2498	3910590	0	True				
ANR	3910594	IdentifierDecl	* op_array = CG ( active_op_array )		3910590	0					
ANR	3910595	IdentifierDeclType	zend_op_array *		3910590	0					
ANR	3910596	Identifier	op_array		3910590	1					
ANR	3910597	AssignmentExpression	* op_array = CG ( active_op_array )		3910590	2		=			
ANR	3910598	Identifier	op_array		3910590	0					
ANR	3910599	CallExpression	CG ( active_op_array )		3910590	1					
ANR	3910600	Callee	CG		3910590	0					
ANR	3910601	Identifier	CG		3910590	0					
ANR	3910602	ArgumentList	active_op_array		3910590	1					
ANR	3910603	Argument	active_op_array		3910590	0					
ANR	3910604	Identifier	active_op_array		3910590	0					
ANR	3910605	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ literal ] ) = op_array -> cache_size	69:1:2501:2565	3910590	1	True				
ANR	3910606	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ literal ] ) = op_array -> cache_size		3910590	0		=			
ANR	3910607	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ literal ] )		3910590	0					
ANR	3910608	Callee	Z_CACHE_SLOT		3910590	0					
ANR	3910609	Identifier	Z_CACHE_SLOT		3910590	0					
ANR	3910610	ArgumentList	op_array -> literals [ literal ]		3910590	1					
ANR	3910611	Argument	op_array -> literals [ literal ]		3910590	0					
ANR	3910612	ArrayIndexing	op_array -> literals [ literal ]		3910590	0					
ANR	3910613	PtrMemberAccess	op_array -> literals		3910590	0					
ANR	3910614	Identifier	op_array		3910590	0					
ANR	3910615	Identifier	literals		3910590	1					
ANR	3910616	Identifier	literal		3910590	1					
ANR	3910617	PtrMemberAccess	op_array -> cache_size		3910590	1					
ANR	3910618	Identifier	op_array		3910590	0					
ANR	3910619	Identifier	cache_size		3910590	1					
ANR	3910620	ExpressionStatement	op_array -> cache_size += sizeof ( void * )	70:1:2568:2605	3910590	2	True				
ANR	3910621	AssignmentExpression	op_array -> cache_size += sizeof ( void * )		3910590	0		+=			
ANR	3910622	PtrMemberAccess	op_array -> cache_size		3910590	0					
ANR	3910623	Identifier	op_array		3910590	0					
ANR	3910624	Identifier	cache_size		3910590	1					
ANR	3910625	SizeofExpression	sizeof ( void * )		3910590	1					
ANR	3910626	Sizeof	sizeof		3910590	0					
ANR	3910627	SizeofOperand	void *		3910590	1					
ANR	3910628	ReturnType	static inline void		3910590	1					
ANR	3910629	Identifier	zend_alloc_cache_slot		3910590	2					
ANR	3910630	ParameterList	uint32_t literal		3910590	3					
ANR	3910631	Parameter	uint32_t literal	67:41:2432:2447	3910590	0	True				
ANR	3910632	ParameterType	uint32_t		3910590	0					
ANR	3910633	Identifier	literal		3910590	1					
ANR	3910634	CFGEntryNode	ENTRY		3910590		True				
ANR	3910635	CFGExitNode	EXIT		3910590		True				
ANR	3910636	Symbol	CG		3910590						
ANR	3910637	Symbol	op_array -> literals		3910590						
ANR	3910638	Symbol	active_op_array		3910590						
ANR	3910639	Symbol	* literal		3910590						
ANR	3910640	Symbol	Z_CACHE_SLOT		3910590						
ANR	3910641	Symbol	op_array -> cache_size		3910590						
ANR	3910642	Symbol	* * op_array		3910590						
ANR	3910643	Symbol	op_array		3910590						
ANR	3910644	Symbol	* op_array		3910590						
ANR	3910645	Symbol	* op_array -> literals		3910590						
ANR	3910646	Symbol	literal		3910590						
ANR	3910647	Function	zend_alloc_polymorphic_cache_slot	75:0:2649:2907							
ANR	3910648	FunctionDef	zend_alloc_polymorphic_cache_slot (uint32_t literal)		3910647	0					
ANR	3910649	CompoundStatement		75:71:2720:2907	3910647	0					
ANR	3910650	IdentifierDeclStatement	zend_op_array * op_array = CG ( active_op_array ) ;	76:1:2723:2768	3910647	0	True				
ANR	3910651	IdentifierDecl	* op_array = CG ( active_op_array )		3910647	0					
ANR	3910652	IdentifierDeclType	zend_op_array *		3910647	0					
ANR	3910653	Identifier	op_array		3910647	1					
ANR	3910654	AssignmentExpression	* op_array = CG ( active_op_array )		3910647	2		=			
ANR	3910655	Identifier	op_array		3910647	0					
ANR	3910656	CallExpression	CG ( active_op_array )		3910647	1					
ANR	3910657	Callee	CG		3910647	0					
ANR	3910658	Identifier	CG		3910647	0					
ANR	3910659	ArgumentList	active_op_array		3910647	1					
ANR	3910660	Argument	active_op_array		3910647	0					
ANR	3910661	Identifier	active_op_array		3910647	0					
ANR	3910662	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ literal ] ) = op_array -> cache_size	77:1:2771:2835	3910647	1	True				
ANR	3910663	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ literal ] ) = op_array -> cache_size		3910647	0		=			
ANR	3910664	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ literal ] )		3910647	0					
ANR	3910665	Callee	Z_CACHE_SLOT		3910647	0					
ANR	3910666	Identifier	Z_CACHE_SLOT		3910647	0					
ANR	3910667	ArgumentList	op_array -> literals [ literal ]		3910647	1					
ANR	3910668	Argument	op_array -> literals [ literal ]		3910647	0					
ANR	3910669	ArrayIndexing	op_array -> literals [ literal ]		3910647	0					
ANR	3910670	PtrMemberAccess	op_array -> literals		3910647	0					
ANR	3910671	Identifier	op_array		3910647	0					
ANR	3910672	Identifier	literals		3910647	1					
ANR	3910673	Identifier	literal		3910647	1					
ANR	3910674	PtrMemberAccess	op_array -> cache_size		3910647	1					
ANR	3910675	Identifier	op_array		3910647	0					
ANR	3910676	Identifier	cache_size		3910647	1					
ANR	3910677	ExpressionStatement	op_array -> cache_size += POLYMORPHIC_CACHE_SLOT_SIZE * sizeof ( void * )	78:1:2838:2905	3910647	2	True				
ANR	3910678	AssignmentExpression	op_array -> cache_size += POLYMORPHIC_CACHE_SLOT_SIZE * sizeof ( void * )		3910647	0		+=			
ANR	3910679	PtrMemberAccess	op_array -> cache_size		3910647	0					
ANR	3910680	Identifier	op_array		3910647	0					
ANR	3910681	Identifier	cache_size		3910647	1					
ANR	3910682	MultiplicativeExpression	POLYMORPHIC_CACHE_SLOT_SIZE * sizeof ( void * )		3910647	1		*			
ANR	3910683	Identifier	POLYMORPHIC_CACHE_SLOT_SIZE		3910647	0					
ANR	3910684	SizeofExpression	sizeof ( void * )		3910647	1					
ANR	3910685	Sizeof	sizeof		3910647	0					
ANR	3910686	SizeofOperand	void *		3910647	1					
ANR	3910687	ReturnType	static inline void		3910647	1					
ANR	3910688	Identifier	zend_alloc_polymorphic_cache_slot		3910647	2					
ANR	3910689	ParameterList	uint32_t literal		3910647	3					
ANR	3910690	Parameter	uint32_t literal	75:53:2702:2717	3910647	0	True				
ANR	3910691	ParameterType	uint32_t		3910647	0					
ANR	3910692	Identifier	literal		3910647	1					
ANR	3910693	CFGEntryNode	ENTRY		3910647		True				
ANR	3910694	CFGExitNode	EXIT		3910647		True				
ANR	3910695	Symbol	CG		3910647						
ANR	3910696	Symbol	op_array -> literals		3910647						
ANR	3910697	Symbol	active_op_array		3910647						
ANR	3910698	Symbol	* literal		3910647						
ANR	3910699	Symbol	POLYMORPHIC_CACHE_SLOT_SIZE		3910647						
ANR	3910700	Symbol	Z_CACHE_SLOT		3910647						
ANR	3910701	Symbol	op_array -> cache_size		3910647						
ANR	3910702	Symbol	* * op_array		3910647						
ANR	3910703	Symbol	op_array		3910647						
ANR	3910704	Symbol	* op_array -> literals		3910647						
ANR	3910705	Symbol	* op_array		3910647						
ANR	3910706	Symbol	literal		3910647						
ANR	3910707	DeclStmt									
ANR	3910708	Decl							"ZEND_API zend_op_array * ( * ) ( zend_file_handle * file_handle , int type )"	"ZEND_API zend_op_array * ( * ) ( zend_file_handle * file_handle , int type )"	zend_compile_file
ANR	3910709	DeclStmt									
ANR	3910710	Decl							"ZEND_API zend_op_array * ( * ) ( zval * source_string , char * filename )"	"ZEND_API zend_op_array * ( * ) ( zval * source_string , char * filename )"	zend_compile_string
ANR	3910711	DeclStmt									
ANR	3910712	Decl							ZEND_API zend_compiler_globals	ZEND_API zend_compiler_globals	compiler_globals
ANR	3910713	DeclStmt									
ANR	3910714	Decl							ZEND_API zend_executor_globals	ZEND_API zend_executor_globals	executor_globals
ANR	3910715	Function	zend_destroy_property_info_internal	89:0:3201:3387							
ANR	3910716	FunctionDef	zend_destroy_property_info_internal (zval * zv)		3910715	0					
ANR	3910717	CompoundStatement		90:0:3269:3387	3910715	0					
ANR	3910718	IdentifierDeclStatement	zend_property_info * property_info = Z_PTR_P ( zv ) ;	91:1:3272:3319	3910715	0	True				
ANR	3910719	IdentifierDecl	* property_info = Z_PTR_P ( zv )		3910715	0					
ANR	3910720	IdentifierDeclType	zend_property_info *		3910715	0					
ANR	3910721	Identifier	property_info		3910715	1					
ANR	3910722	AssignmentExpression	* property_info = Z_PTR_P ( zv )		3910715	2		=			
ANR	3910723	Identifier	property_info		3910715	0					
ANR	3910724	CallExpression	Z_PTR_P ( zv )		3910715	1					
ANR	3910725	Callee	Z_PTR_P		3910715	0					
ANR	3910726	Identifier	Z_PTR_P		3910715	0					
ANR	3910727	ArgumentList	zv		3910715	1					
ANR	3910728	Argument	zv		3910715	0					
ANR	3910729	Identifier	zv		3910715	0					
ANR	3910730	ExpressionStatement	zend_string_release ( property_info -> name )	93:1:3323:3363	3910715	1	True				
ANR	3910731	CallExpression	zend_string_release ( property_info -> name )		3910715	0					
ANR	3910732	Callee	zend_string_release		3910715	0					
ANR	3910733	Identifier	zend_string_release		3910715	0					
ANR	3910734	ArgumentList	property_info -> name		3910715	1					
ANR	3910735	Argument	property_info -> name		3910715	0					
ANR	3910736	PtrMemberAccess	property_info -> name		3910715	0					
ANR	3910737	Identifier	property_info		3910715	0					
ANR	3910738	Identifier	name		3910715	1					
ANR	3910739	ExpressionStatement	free ( property_info )	94:1:3366:3385	3910715	2	True				
ANR	3910740	CallExpression	free ( property_info )		3910715	0					
ANR	3910741	Callee	free		3910715	0					
ANR	3910742	Identifier	free		3910715	0					
ANR	3910743	ArgumentList	property_info		3910715	1					
ANR	3910744	Argument	property_info		3910715	0					
ANR	3910745	Identifier	property_info		3910715	0					
ANR	3910746	ReturnType	static void		3910715	1					
ANR	3910747	Identifier	zend_destroy_property_info_internal		3910715	2					
ANR	3910748	ParameterList	zval * zv		3910715	3					
ANR	3910749	Parameter	zval * zv	89:48:3249:3256	3910715	0	True				
ANR	3910750	ParameterType	zval *		3910715	0					
ANR	3910751	Identifier	zv		3910715	1					
ANR	3910752	CFGEntryNode	ENTRY		3910715		True				
ANR	3910753	CFGExitNode	EXIT		3910715		True				
ANR	3910754	Symbol	property_info		3910715						
ANR	3910755	Symbol	Z_PTR_P		3910715						
ANR	3910756	Symbol	* property_info		3910715						
ANR	3910757	Symbol	property_info -> name		3910715						
ANR	3910758	Symbol	zv		3910715						
ANR	3910759	Function	zend_new_interned_string_safe	98:0:3400:3688							
ANR	3910760	FunctionDef	zend_new_interned_string_safe (zend_string * str)		3910759	0					
ANR	3910761	CompoundStatement		98:78:3478:3688	3910759	0					
ANR	3910762	IdentifierDeclStatement	zend_string * interned_str ;	99:1:3481:3506	3910759	0	True				
ANR	3910763	IdentifierDecl	* interned_str		3910759	0					
ANR	3910764	IdentifierDeclType	zend_string *		3910759	0					
ANR	3910765	Identifier	interned_str		3910759	1					
ANR	3910766	ExpressionStatement	zend_string_addref ( str )	101:1:3510:3533	3910759	1	True				
ANR	3910767	CallExpression	zend_string_addref ( str )		3910759	0					
ANR	3910768	Callee	zend_string_addref		3910759	0					
ANR	3910769	Identifier	zend_string_addref		3910759	0					
ANR	3910770	ArgumentList	str		3910759	1					
ANR	3910771	Argument	str		3910759	0					
ANR	3910772	Identifier	str		3910759	0					
ANR	3910773	ExpressionStatement	interned_str = zend_new_interned_string ( str )	102:1:3536:3580	3910759	2	True				
ANR	3910774	AssignmentExpression	interned_str = zend_new_interned_string ( str )		3910759	0		=			
ANR	3910775	Identifier	interned_str		3910759	0					
ANR	3910776	CallExpression	zend_new_interned_string ( str )		3910759	1					
ANR	3910777	Callee	zend_new_interned_string		3910759	0					
ANR	3910778	Identifier	zend_new_interned_string		3910759	0					
ANR	3910779	ArgumentList	str		3910759	1					
ANR	3910780	Argument	str		3910759	0					
ANR	3910781	Identifier	str		3910759	0					
ANR	3910782	IfStatement	if ( str != interned_str )		3910759	3					
ANR	3910783	Condition	str != interned_str	103:5:3587:3605	3910759	0	True				
ANR	3910784	EqualityExpression	str != interned_str		3910759	0		!=			
ANR	3910785	Identifier	str		3910759	0					
ANR	3910786	Identifier	interned_str		3910759	1					
ANR	3910787	CompoundStatement		6:26:129:129	3910759	1					
ANR	3910788	ReturnStatement	return interned_str ;	104:2:3612:3631	3910759	0	True				
ANR	3910789	Identifier	interned_str		3910759	0					
ANR	3910790	ElseStatement	else		3910759	0					
ANR	3910791	CompoundStatement		8:8:162:162	3910759	0					
ANR	3910792	ExpressionStatement	zend_string_release ( str )	106:2:3645:3669	3910759	0	True				
ANR	3910793	CallExpression	zend_string_release ( str )		3910759	0					
ANR	3910794	Callee	zend_string_release		3910759	0					
ANR	3910795	Identifier	zend_string_release		3910759	0					
ANR	3910796	ArgumentList	str		3910759	1					
ANR	3910797	Argument	str		3910759	0					
ANR	3910798	Identifier	str		3910759	0					
ANR	3910799	ReturnStatement	return str ;	107:2:3673:3683	3910759	1	True				
ANR	3910800	Identifier	str		3910759	0					
ANR	3910801	ReturnType	static zend_string *		3910759	1					
ANR	3910802	Identifier	zend_new_interned_string_safe		3910759	2					
ANR	3910803	ParameterList	zend_string * str		3910759	3					
ANR	3910804	Parameter	zend_string * str	98:50:3450:3465	3910759	0	True				
ANR	3910805	ParameterType	zend_string *		3910759	0					
ANR	3910806	Identifier	str		3910759	1					
ANR	3910807	CFGEntryNode	ENTRY		3910759		True				
ANR	3910808	CFGExitNode	EXIT		3910759		True				
ANR	3910809	Symbol	str		3910759						
ANR	3910810	Symbol	interned_str		3910759						
ANR	3910811	Symbol	zend_new_interned_string		3910759						
ANR	3910812	Function	zend_build_runtime_definition_key	112:0:3701:4285							
ANR	3910813	FunctionDef	"zend_build_runtime_definition_key (zend_string * name , unsigned char * lex_pos)"		3910812	0					
ANR	3910814	CompoundStatement		113:0:3808:4285	3910812	0					
ANR	3910815	IdentifierDeclStatement	zend_string * result ;	114:1:3811:3830	3910812	0	True				
ANR	3910816	IdentifierDecl	* result		3910812	0					
ANR	3910817	IdentifierDeclType	zend_string *		3910812	0					
ANR	3910818	Identifier	result		3910812	1					
ANR	3910819	IdentifierDeclStatement	char char_pos_buf [ 32 ] ;	115:1:3833:3854	3910812	1	True				
ANR	3910820	IdentifierDecl	char_pos_buf [ 32 ]		3910812	0					
ANR	3910821	IdentifierDeclType	char [ 32 ]		3910812	0					
ANR	3910822	Identifier	char_pos_buf		3910812	1					
ANR	3910823	PrimaryExpression	32		3910812	2					
ANR	3910824	IdentifierDeclStatement	"size_t char_pos_len = zend_sprintf ( char_pos_buf , ""%p"" , lex_pos ) ;"	116:1:3857:3920	3910812	2	True				
ANR	3910825	IdentifierDecl	"char_pos_len = zend_sprintf ( char_pos_buf , ""%p"" , lex_pos )"		3910812	0					
ANR	3910826	IdentifierDeclType	size_t		3910812	0					
ANR	3910827	Identifier	char_pos_len		3910812	1					
ANR	3910828	AssignmentExpression	"char_pos_len = zend_sprintf ( char_pos_buf , ""%p"" , lex_pos )"		3910812	2		=			
ANR	3910829	Identifier	char_pos_len		3910812	0					
ANR	3910830	CallExpression	"zend_sprintf ( char_pos_buf , ""%p"" , lex_pos )"		3910812	1					
ANR	3910831	Callee	zend_sprintf		3910812	0					
ANR	3910832	Identifier	zend_sprintf		3910812	0					
ANR	3910833	ArgumentList	char_pos_buf		3910812	1					
ANR	3910834	Argument	char_pos_buf		3910812	0					
ANR	3910835	Identifier	char_pos_buf		3910812	0					
ANR	3910836	Argument	"""%p"""		3910812	1					
ANR	3910837	PrimaryExpression	"""%p"""		3910812	0					
ANR	3910838	Argument	lex_pos		3910812	2					
ANR	3910839	Identifier	lex_pos		3910812	0					
ANR	3910840	IdentifierDeclStatement	zend_string * filename = CG ( active_op_array ) -> filename ;	117:1:3923:3976	3910812	3	True				
ANR	3910841	IdentifierDecl	* filename = CG ( active_op_array ) -> filename		3910812	0					
ANR	3910842	IdentifierDeclType	zend_string *		3910812	0					
ANR	3910843	Identifier	filename		3910812	1					
ANR	3910844	AssignmentExpression	* filename = CG ( active_op_array ) -> filename		3910812	2		=			
ANR	3910845	Identifier	filename		3910812	0					
ANR	3910846	PtrMemberAccess	CG ( active_op_array ) -> filename		3910812	1					
ANR	3910847	CallExpression	CG ( active_op_array )		3910812	0					
ANR	3910848	Callee	CG		3910812	0					
ANR	3910849	Identifier	CG		3910812	0					
ANR	3910850	ArgumentList	active_op_array		3910812	1					
ANR	3910851	Argument	active_op_array		3910812	0					
ANR	3910852	Identifier	active_op_array		3910812	0					
ANR	3910853	Identifier	filename		3910812	1					
ANR	3910854	ExpressionStatement	"result = zend_string_alloc ( 1 + ZSTR_LEN ( name ) + ZSTR_LEN ( filename ) + char_pos_len , 0 )"	120:1:4059:4144	3910812	4	True				
ANR	3910855	AssignmentExpression	"result = zend_string_alloc ( 1 + ZSTR_LEN ( name ) + ZSTR_LEN ( filename ) + char_pos_len , 0 )"		3910812	0		=			
ANR	3910856	Identifier	result		3910812	0					
ANR	3910857	CallExpression	"zend_string_alloc ( 1 + ZSTR_LEN ( name ) + ZSTR_LEN ( filename ) + char_pos_len , 0 )"		3910812	1					
ANR	3910858	Callee	zend_string_alloc		3910812	0					
ANR	3910859	Identifier	zend_string_alloc		3910812	0					
ANR	3910860	ArgumentList	1 + ZSTR_LEN ( name ) + ZSTR_LEN ( filename ) + char_pos_len		3910812	1					
ANR	3910861	Argument	1 + ZSTR_LEN ( name ) + ZSTR_LEN ( filename ) + char_pos_len		3910812	0					
ANR	3910862	AdditiveExpression	1 + ZSTR_LEN ( name ) + ZSTR_LEN ( filename ) + char_pos_len		3910812	0		+			
ANR	3910863	PrimaryExpression	1		3910812	0					
ANR	3910864	AdditiveExpression	ZSTR_LEN ( name ) + ZSTR_LEN ( filename ) + char_pos_len		3910812	1		+			
ANR	3910865	CallExpression	ZSTR_LEN ( name )		3910812	0					
ANR	3910866	Callee	ZSTR_LEN		3910812	0					
ANR	3910867	Identifier	ZSTR_LEN		3910812	0					
ANR	3910868	ArgumentList	name		3910812	1					
ANR	3910869	Argument	name		3910812	0					
ANR	3910870	Identifier	name		3910812	0					
ANR	3910871	AdditiveExpression	ZSTR_LEN ( filename ) + char_pos_len		3910812	1		+			
ANR	3910872	CallExpression	ZSTR_LEN ( filename )		3910812	0					
ANR	3910873	Callee	ZSTR_LEN		3910812	0					
ANR	3910874	Identifier	ZSTR_LEN		3910812	0					
ANR	3910875	ArgumentList	filename		3910812	1					
ANR	3910876	Argument	filename		3910812	0					
ANR	3910877	Identifier	filename		3910812	0					
ANR	3910878	Identifier	char_pos_len		3910812	1					
ANR	3910879	Argument	0		3910812	1					
ANR	3910880	PrimaryExpression	0		3910812	0					
ANR	3910881	ExpressionStatement	"sprintf ( ZSTR_VAL ( result ) , ""%c%s%s%s"" , '\\0' , ZSTR_VAL ( name ) , ZSTR_VAL ( filename ) , char_pos_buf )"	121:2:4148:4241	3910812	5	True				
ANR	3910882	CallExpression	"sprintf ( ZSTR_VAL ( result ) , ""%c%s%s%s"" , '\\0' , ZSTR_VAL ( name ) , ZSTR_VAL ( filename ) , char_pos_buf )"		3910812	0					
ANR	3910883	Callee	sprintf		3910812	0					
ANR	3910884	Identifier	sprintf		3910812	0					
ANR	3910885	ArgumentList	ZSTR_VAL ( result )		3910812	1					
ANR	3910886	Argument	ZSTR_VAL ( result )		3910812	0					
ANR	3910887	CallExpression	ZSTR_VAL ( result )		3910812	0					
ANR	3910888	Callee	ZSTR_VAL		3910812	0					
ANR	3910889	Identifier	ZSTR_VAL		3910812	0					
ANR	3910890	ArgumentList	result		3910812	1					
ANR	3910891	Argument	result		3910812	0					
ANR	3910892	Identifier	result		3910812	0					
ANR	3910893	Argument	"""%c%s%s%s"""		3910812	1					
ANR	3910894	PrimaryExpression	"""%c%s%s%s"""		3910812	0					
ANR	3910895	Argument	'\\0'		3910812	2					
ANR	3910896	PrimaryExpression	'\\0'		3910812	0					
ANR	3910897	Argument	ZSTR_VAL ( name )		3910812	3					
ANR	3910898	CallExpression	ZSTR_VAL ( name )		3910812	0					
ANR	3910899	Callee	ZSTR_VAL		3910812	0					
ANR	3910900	Identifier	ZSTR_VAL		3910812	0					
ANR	3910901	ArgumentList	name		3910812	1					
ANR	3910902	Argument	name		3910812	0					
ANR	3910903	Identifier	name		3910812	0					
ANR	3910904	Argument	ZSTR_VAL ( filename )		3910812	4					
ANR	3910905	CallExpression	ZSTR_VAL ( filename )		3910812	0					
ANR	3910906	Callee	ZSTR_VAL		3910812	0					
ANR	3910907	Identifier	ZSTR_VAL		3910812	0					
ANR	3910908	ArgumentList	filename		3910812	1					
ANR	3910909	Argument	filename		3910812	0					
ANR	3910910	Identifier	filename		3910812	0					
ANR	3910911	Argument	char_pos_buf		3910812	5					
ANR	3910912	Identifier	char_pos_buf		3910812	0					
ANR	3910913	ReturnStatement	return zend_new_interned_string ( result ) ;	122:1:4244:4283	3910812	6	True				
ANR	3910914	CallExpression	zend_new_interned_string ( result )		3910812	0					
ANR	3910915	Callee	zend_new_interned_string		3910812	0					
ANR	3910916	Identifier	zend_new_interned_string		3910812	0					
ANR	3910917	ArgumentList	result		3910812	1					
ANR	3910918	Argument	result		3910812	0					
ANR	3910919	Identifier	result		3910812	0					
ANR	3910920	ReturnType	static zend_string *		3910812	1					
ANR	3910921	Identifier	zend_build_runtime_definition_key		3910812	2					
ANR	3910922	ParameterList	"zend_string * name , unsigned char * lex_pos"		3910812	3					
ANR	3910923	Parameter	zend_string * name	112:54:3755:3771	3910812	0	True				
ANR	3910924	ParameterType	zend_string *		3910812	0					
ANR	3910925	Identifier	name		3910812	1					
ANR	3910926	Parameter	unsigned char * lex_pos	112:73:3774:3795	3910812	1	True				
ANR	3910927	ParameterType	unsigned char *		3910812	0					
ANR	3910928	Identifier	lex_pos		3910812	1					
ANR	3910929	CFGEntryNode	ENTRY		3910812		True				
ANR	3910930	CFGExitNode	EXIT		3910812		True				
ANR	3910931	Symbol	char_pos_buf		3910812						
ANR	3910932	Symbol	zend_string_alloc		3910812						
ANR	3910933	Symbol	CG		3910812						
ANR	3910934	Symbol	active_op_array		3910812						
ANR	3910935	Symbol	* CG		3910812						
ANR	3910936	Symbol	zend_sprintf		3910812						
ANR	3910937	Symbol	ZSTR_VAL		3910812						
ANR	3910938	Symbol	result		3910812						
ANR	3910939	Symbol	filename		3910812						
ANR	3910940	Symbol	zend_new_interned_string		3910812						
ANR	3910941	Symbol	lex_pos		3910812						
ANR	3910942	Symbol	CG ( active_op_array ) -> filename		3910812						
ANR	3910943	Symbol	name		3910812						
ANR	3910944	Symbol	ZSTR_LEN		3910812						
ANR	3910945	Symbol	char_pos_len		3910812						
ANR	3910946	Function	zend_get_unqualified_name	126:0:4298:4644							
ANR	3910947	FunctionDef	"zend_get_unqualified_name (const zend_string * name , const char * * result , size_t * result_len)"		3910946	0					
ANR	3910948	CompoundStatement		127:0:4417:4644	3910946	0					
ANR	3910949	IdentifierDeclStatement	"const char * ns_separator = zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) ) ;"	128:1:4420:4497	3910946	0	True				
ANR	3910950	IdentifierDecl	"* ns_separator = zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3910946	0					
ANR	3910951	IdentifierDeclType	const char *		3910946	0					
ANR	3910952	Identifier	ns_separator		3910946	1					
ANR	3910953	AssignmentExpression	"* ns_separator = zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3910946	2		=			
ANR	3910954	Identifier	ns_separator		3910946	0					
ANR	3910955	CallExpression	"zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3910946	1					
ANR	3910956	Callee	zend_memrchr		3910946	0					
ANR	3910957	Identifier	zend_memrchr		3910946	0					
ANR	3910958	ArgumentList	ZSTR_VAL ( name )		3910946	1					
ANR	3910959	Argument	ZSTR_VAL ( name )		3910946	0					
ANR	3910960	CallExpression	ZSTR_VAL ( name )		3910946	0					
ANR	3910961	Callee	ZSTR_VAL		3910946	0					
ANR	3910962	Identifier	ZSTR_VAL		3910946	0					
ANR	3910963	ArgumentList	name		3910946	1					
ANR	3910964	Argument	name		3910946	0					
ANR	3910965	Identifier	name		3910946	0					
ANR	3910966	Argument	'\\\\'		3910946	1					
ANR	3910967	PrimaryExpression	'\\\\'		3910946	0					
ANR	3910968	Argument	ZSTR_LEN ( name )		3910946	2					
ANR	3910969	CallExpression	ZSTR_LEN ( name )		3910946	0					
ANR	3910970	Callee	ZSTR_LEN		3910946	0					
ANR	3910971	Identifier	ZSTR_LEN		3910946	0					
ANR	3910972	ArgumentList	name		3910946	1					
ANR	3910973	Argument	name		3910946	0					
ANR	3910974	Identifier	name		3910946	0					
ANR	3910975	IfStatement	if ( ns_separator != NULL )		3910946	1					
ANR	3910976	Condition	ns_separator != NULL	129:5:4504:4523	3910946	0	True				
ANR	3910977	EqualityExpression	ns_separator != NULL		3910946	0		!=			
ANR	3910978	Identifier	ns_separator		3910946	0					
ANR	3910979	Identifier	NULL		3910946	1					
ANR	3910980	CompoundStatement		3:27:108:108	3910946	1					
ANR	3910981	ExpressionStatement	* result = ns_separator + 1	130:2:4530:4556	3910946	0	True				
ANR	3910982	AssignmentExpression	* result = ns_separator + 1		3910946	0		=			
ANR	3910983	UnaryOperationExpression	* result		3910946	0					
ANR	3910984	UnaryOperator	*		3910946	0					
ANR	3910985	Identifier	result		3910946	1					
ANR	3910986	AdditiveExpression	ns_separator + 1		3910946	1		+			
ANR	3910987	Identifier	ns_separator		3910946	0					
ANR	3910988	PrimaryExpression	1		3910946	1					
ANR	3910989	ExpressionStatement	* result_len = ZSTR_VAL ( name ) + ZSTR_LEN ( name ) - * result	131:2:4560:4615	3910946	1	True				
ANR	3910990	AssignmentExpression	* result_len = ZSTR_VAL ( name ) + ZSTR_LEN ( name ) - * result		3910946	0		=			
ANR	3910991	UnaryOperationExpression	* result_len		3910946	0					
ANR	3910992	UnaryOperator	*		3910946	0					
ANR	3910993	Identifier	result_len		3910946	1					
ANR	3910994	AdditiveExpression	ZSTR_VAL ( name ) + ZSTR_LEN ( name ) - * result		3910946	1		+			
ANR	3910995	CallExpression	ZSTR_VAL ( name )		3910946	0					
ANR	3910996	Callee	ZSTR_VAL		3910946	0					
ANR	3910997	Identifier	ZSTR_VAL		3910946	0					
ANR	3910998	ArgumentList	name		3910946	1					
ANR	3910999	Argument	name		3910946	0					
ANR	3911000	Identifier	name		3910946	0					
ANR	3911001	AdditiveExpression	ZSTR_LEN ( name ) - * result		3910946	1		-			
ANR	3911002	CallExpression	ZSTR_LEN ( name )		3910946	0					
ANR	3911003	Callee	ZSTR_LEN		3910946	0					
ANR	3911004	Identifier	ZSTR_LEN		3910946	0					
ANR	3911005	ArgumentList	name		3910946	1					
ANR	3911006	Argument	name		3910946	0					
ANR	3911007	Identifier	name		3910946	0					
ANR	3911008	UnaryOperationExpression	* result		3910946	1					
ANR	3911009	UnaryOperator	*		3910946	0					
ANR	3911010	Identifier	result		3910946	1					
ANR	3911011	ReturnStatement	return 1 ;	132:2:4619:4627	3910946	2	True				
ANR	3911012	PrimaryExpression	1		3910946	0					
ANR	3911013	ReturnStatement	return 0 ;	135:1:4634:4642	3910946	2	True				
ANR	3911014	PrimaryExpression	0		3910946	0					
ANR	3911015	ReturnType	static zend_bool		3910946	1					
ANR	3911016	Identifier	zend_get_unqualified_name		3910946	2					
ANR	3911017	ParameterList	"const zend_string * name , const char * * result , size_t * result_len"		3910946	3					
ANR	3911018	Parameter	const zend_string * name	126:43:4341:4363	3910946	0	True				
ANR	3911019	ParameterType	const zend_string *		3910946	0					
ANR	3911020	Identifier	name		3910946	1					
ANR	3911021	Parameter	const char * * result	126:68:4366:4384	3910946	1	True				
ANR	3911022	ParameterType	const char * *		3910946	0					
ANR	3911023	Identifier	result		3910946	1					
ANR	3911024	Parameter	size_t * result_len	126:89:4387:4404	3910946	2	True				
ANR	3911025	ParameterType	size_t *		3910946	0					
ANR	3911026	Identifier	result_len		3910946	1					
ANR	3911027	CFGEntryNode	ENTRY		3910946		True				
ANR	3911028	CFGExitNode	EXIT		3910946		True				
ANR	3911029	Symbol	result		3910946						
ANR	3911030	Symbol	ns_separator		3910946						
ANR	3911031	Symbol	zend_memrchr		3910946						
ANR	3911032	Symbol	NULL		3910946						
ANR	3911033	Symbol	* result_len		3910946						
ANR	3911034	Symbol	* result		3910946						
ANR	3911035	Symbol	name		3910946						
ANR	3911036	Symbol	ZSTR_LEN		3910946						
ANR	3911037	Symbol	result_len		3910946						
ANR	3911038	Symbol	ZSTR_VAL		3910946						
ANR	3911039	ClassDef	reserved_class_name	139:0:4657:4718							
ANR	3911040	DeclStmt									
ANR	3911041	Decl							const char	const char *	name
ANR	3911042	DeclStmt									
ANR	3911043	Decl							size_t	size_t	len
ANR	3911044	DeclStmt									
ANR	3911045	Decl							const struct reserved_class_name	const struct reserved_class_name [ ]	reserved_class_names
ANR	3911046	Function	zend_is_reserved_class_name	157:0:5030:5508							
ANR	3911047	FunctionDef	zend_is_reserved_class_name (const zend_string * name)		3911046	0					
ANR	3911048	CompoundStatement		158:0:5110:5508	3911046	0					
ANR	3911049	IdentifierDeclStatement	const struct reserved_class_name * reserved = reserved_class_names ;	159:1:5113:5178	3911046	0	True				
ANR	3911050	IdentifierDecl	* reserved = reserved_class_names		3911046	0					
ANR	3911051	IdentifierDeclType	const struct reserved_class_name *		3911046	0					
ANR	3911052	Identifier	reserved		3911046	1					
ANR	3911053	AssignmentExpression	* reserved = reserved_class_names		3911046	2		=			
ANR	3911054	Identifier	reserved_class_names		3911046	0					
ANR	3911055	Identifier	reserved_class_names		3911046	1					
ANR	3911056	IdentifierDeclStatement	const char * uqname = ZSTR_VAL ( name ) ;	161:1:5182:5217	3911046	1	True				
ANR	3911057	IdentifierDecl	* uqname = ZSTR_VAL ( name )		3911046	0					
ANR	3911058	IdentifierDeclType	const char *		3911046	0					
ANR	3911059	Identifier	uqname		3911046	1					
ANR	3911060	AssignmentExpression	* uqname = ZSTR_VAL ( name )		3911046	2		=			
ANR	3911061	Identifier	uqname		3911046	0					
ANR	3911062	CallExpression	ZSTR_VAL ( name )		3911046	1					
ANR	3911063	Callee	ZSTR_VAL		3911046	0					
ANR	3911064	Identifier	ZSTR_VAL		3911046	0					
ANR	3911065	ArgumentList	name		3911046	1					
ANR	3911066	Argument	name		3911046	0					
ANR	3911067	Identifier	name		3911046	0					
ANR	3911068	IdentifierDeclStatement	size_t uqname_len = ZSTR_LEN ( name ) ;	162:1:5220:5254	3911046	2	True				
ANR	3911069	IdentifierDecl	uqname_len = ZSTR_LEN ( name )		3911046	0					
ANR	3911070	IdentifierDeclType	size_t		3911046	0					
ANR	3911071	Identifier	uqname_len		3911046	1					
ANR	3911072	AssignmentExpression	uqname_len = ZSTR_LEN ( name )		3911046	2		=			
ANR	3911073	Identifier	uqname_len		3911046	0					
ANR	3911074	CallExpression	ZSTR_LEN ( name )		3911046	1					
ANR	3911075	Callee	ZSTR_LEN		3911046	0					
ANR	3911076	Identifier	ZSTR_LEN		3911046	0					
ANR	3911077	ArgumentList	name		3911046	1					
ANR	3911078	Argument	name		3911046	0					
ANR	3911079	Identifier	name		3911046	0					
ANR	3911080	ExpressionStatement	"zend_get_unqualified_name ( name , & uqname , & uqname_len )"	163:1:5257:5310	3911046	3	True				
ANR	3911081	CallExpression	"zend_get_unqualified_name ( name , & uqname , & uqname_len )"		3911046	0					
ANR	3911082	Callee	zend_get_unqualified_name		3911046	0					
ANR	3911083	Identifier	zend_get_unqualified_name		3911046	0					
ANR	3911084	ArgumentList	name		3911046	1					
ANR	3911085	Argument	name		3911046	0					
ANR	3911086	Identifier	name		3911046	0					
ANR	3911087	Argument	& uqname		3911046	1					
ANR	3911088	UnaryOperationExpression	& uqname		3911046	0					
ANR	3911089	UnaryOperator	&		3911046	0					
ANR	3911090	Identifier	uqname		3911046	1					
ANR	3911091	Argument	& uqname_len		3911046	2					
ANR	3911092	UnaryOperationExpression	& uqname_len		3911046	0					
ANR	3911093	UnaryOperator	&		3911046	0					
ANR	3911094	Identifier	uqname_len		3911046	1					
ANR	3911095	ForStatement	for ( ; reserved -> name ; ++ reserved )		3911046	4					
ANR	3911096	Condition	reserved -> name	165:8:5321:5334	3911046	0	True				
ANR	3911097	PtrMemberAccess	reserved -> name		3911046	0					
ANR	3911098	Identifier	reserved		3911046	0					
ANR	3911099	Identifier	name		3911046	1					
ANR	3911100	UnaryExpression	++ reserved	165:24:5337:5346	3911046	1	True				
ANR	3911101	IncDec	++		3911046	0					
ANR	3911102	Identifier	reserved		3911046	1					
ANR	3911103	CompoundStatement		8:36:238:238	3911046	2					
ANR	3911104	IfStatement	"if ( uqname_len == reserved -> len && zend_binary_strcasecmp ( uqname , uqname_len , reserved -> name , reserved -> len ) == 0 )"		3911046	0					
ANR	3911105	Condition	"uqname_len == reserved -> len && zend_binary_strcasecmp ( uqname , uqname_len , reserved -> name , reserved -> len ) == 0"	166:6:5357:5468	3911046	0	True				
ANR	3911106	AndExpression	"uqname_len == reserved -> len && zend_binary_strcasecmp ( uqname , uqname_len , reserved -> name , reserved -> len ) == 0"		3911046	0		&&			
ANR	3911107	EqualityExpression	uqname_len == reserved -> len		3911046	0		==			
ANR	3911108	Identifier	uqname_len		3911046	0					
ANR	3911109	PtrMemberAccess	reserved -> len		3911046	1					
ANR	3911110	Identifier	reserved		3911046	0					
ANR	3911111	Identifier	len		3911046	1					
ANR	3911112	EqualityExpression	"zend_binary_strcasecmp ( uqname , uqname_len , reserved -> name , reserved -> len ) == 0"		3911046	1		==			
ANR	3911113	CallExpression	"zend_binary_strcasecmp ( uqname , uqname_len , reserved -> name , reserved -> len )"		3911046	0					
ANR	3911114	Callee	zend_binary_strcasecmp		3911046	0					
ANR	3911115	Identifier	zend_binary_strcasecmp		3911046	0					
ANR	3911116	ArgumentList	uqname		3911046	1					
ANR	3911117	Argument	uqname		3911046	0					
ANR	3911118	Identifier	uqname		3911046	0					
ANR	3911119	Argument	uqname_len		3911046	1					
ANR	3911120	Identifier	uqname_len		3911046	0					
ANR	3911121	Argument	reserved -> name		3911046	2					
ANR	3911122	PtrMemberAccess	reserved -> name		3911046	0					
ANR	3911123	Identifier	reserved		3911046	0					
ANR	3911124	Identifier	name		3911046	1					
ANR	3911125	Argument	reserved -> len		3911046	3					
ANR	3911126	PtrMemberAccess	reserved -> len		3911046	0					
ANR	3911127	Identifier	reserved		3911046	0					
ANR	3911128	Identifier	len		3911046	1					
ANR	3911129	PrimaryExpression	0		3911046	1					
ANR	3911130	CompoundStatement		11:4:363:363	3911046	1					
ANR	3911131	ReturnStatement	return 1 ;	169:3:5479:5487	3911046	0	True				
ANR	3911132	PrimaryExpression	1		3911046	0					
ANR	3911133	ReturnStatement	return 0 ;	173:1:5498:5506	3911046	5	True				
ANR	3911134	PrimaryExpression	0		3911046	0					
ANR	3911135	ReturnType	static zend_bool		3911046	1					
ANR	3911136	Identifier	zend_is_reserved_class_name		3911046	2					
ANR	3911137	ParameterList	const zend_string * name		3911046	3					
ANR	3911138	Parameter	const zend_string * name	157:45:5075:5097	3911046	0	True				
ANR	3911139	ParameterType	const zend_string *		3911046	0					
ANR	3911140	Identifier	name		3911046	1					
ANR	3911141	CFGEntryNode	ENTRY		3911046		True				
ANR	3911142	CFGExitNode	EXIT		3911046		True				
ANR	3911143	Symbol	uqname_len		3911046						
ANR	3911144	Symbol	& uqname_len		3911046						
ANR	3911145	Symbol	reserved -> len		3911046						
ANR	3911146	Symbol	& uqname		3911046						
ANR	3911147	Symbol	zend_binary_strcasecmp		3911046						
ANR	3911148	Symbol	* reserved		3911046						
ANR	3911149	Symbol	ZSTR_VAL		3911046						
ANR	3911150	Symbol	reserved		3911046						
ANR	3911151	Symbol	uqname		3911046						
ANR	3911152	Symbol	reserved -> name		3911046						
ANR	3911153	Symbol	name		3911046						
ANR	3911154	Symbol	ZSTR_LEN		3911046						
ANR	3911155	Symbol	reserved_class_names		3911046						
ANR	3911156	Function	zend_assert_valid_class_name	177:0:5521:5756							
ANR	3911157	FunctionDef	zend_assert_valid_class_name (const zend_string * name)		3911156	0					
ANR	3911158	CompoundStatement		178:0:5599:5756	3911156	0					
ANR	3911159	IfStatement	if ( zend_is_reserved_class_name ( name ) )		3911156	0					
ANR	3911160	Condition	zend_is_reserved_class_name ( name )	179:5:5606:5638	3911156	0	True				
ANR	3911161	CallExpression	zend_is_reserved_class_name ( name )		3911156	0					
ANR	3911162	Callee	zend_is_reserved_class_name		3911156	0					
ANR	3911163	Identifier	zend_is_reserved_class_name		3911156	0					
ANR	3911164	ArgumentList	name		3911156	1					
ANR	3911165	Argument	name		3911156	0					
ANR	3911166	Identifier	name		3911156	0					
ANR	3911167	CompoundStatement		2:40:41:41	3911156	1					
ANR	3911168	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as class name as it is reserved"" , ZSTR_VAL ( name ) )"	180:2:5645:5751	3911156	0	True				
ANR	3911169	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as class name as it is reserved"" , ZSTR_VAL ( name ) )"		3911156	0					
ANR	3911170	Callee	zend_error_noreturn		3911156	0					
ANR	3911171	Identifier	zend_error_noreturn		3911156	0					
ANR	3911172	ArgumentList	E_COMPILE_ERROR		3911156	1					
ANR	3911173	Argument	E_COMPILE_ERROR		3911156	0					
ANR	3911174	Identifier	E_COMPILE_ERROR		3911156	0					
ANR	3911175	Argument	"""Cannot use '%s' as class name as it is reserved"""		3911156	1					
ANR	3911176	PrimaryExpression	"""Cannot use '%s' as class name as it is reserved"""		3911156	0					
ANR	3911177	Argument	ZSTR_VAL ( name )		3911156	2					
ANR	3911178	CallExpression	ZSTR_VAL ( name )		3911156	0					
ANR	3911179	Callee	ZSTR_VAL		3911156	0					
ANR	3911180	Identifier	ZSTR_VAL		3911156	0					
ANR	3911181	ArgumentList	name		3911156	1					
ANR	3911182	Argument	name		3911156	0					
ANR	3911183	Identifier	name		3911156	0					
ANR	3911184	ReturnType	ZEND_API void		3911156	1					
ANR	3911185	Identifier	zend_assert_valid_class_name		3911156	2					
ANR	3911186	ParameterList	const zend_string * name		3911156	3					
ANR	3911187	Parameter	const zend_string * name	177:43:5564:5586	3911156	0	True				
ANR	3911188	ParameterType	const zend_string *		3911156	0					
ANR	3911189	Identifier	name		3911156	1					
ANR	3911190	CFGEntryNode	ENTRY		3911156		True				
ANR	3911191	CFGExitNode	EXIT		3911156		True				
ANR	3911192	Symbol	zend_is_reserved_class_name		3911156						
ANR	3911193	Symbol	E_COMPILE_ERROR		3911156						
ANR	3911194	Symbol	name		3911156						
ANR	3911195	Symbol	ZSTR_VAL		3911156						
ANR	3911196	ClassDef	_builtin_type_info	186:8:5777:5891							
ANR	3911197	DeclStmt									
ANR	3911198	Decl							const char	const char *	name
ANR	3911199	DeclStmt									
ANR	3911200	Decl							const size_t	const size_t	name_len
ANR	3911201	DeclStmt									
ANR	3911202	Decl							const zend_uchar	const zend_uchar	type
ANR	3911203	DeclStmt									
ANR	3911204	Decl							_builtin_type_info	_builtin_type_info	builtin_type_info
ANR	3911205	DeclStmt									
ANR	3911206	Decl							const builtin_type_info	const builtin_type_info [ ]	builtin_types
ANR	3911207	Function	zend_lookup_builtin_type_by_name	201:0:6102:6472							
ANR	3911208	FunctionDef	zend_lookup_builtin_type_by_name (const zend_string * name)		3911207	0					
ANR	3911209	CompoundStatement		202:0:6207:6472	3911207	0					
ANR	3911210	IdentifierDeclStatement	const builtin_type_info * info = & builtin_types [ 0 ] ;	203:1:6210:6259	3911207	0	True				
ANR	3911211	IdentifierDecl	* info = & builtin_types [ 0 ]		3911207	0					
ANR	3911212	IdentifierDeclType	const builtin_type_info *		3911207	0					
ANR	3911213	Identifier	info		3911207	1					
ANR	3911214	AssignmentExpression	* info = & builtin_types [ 0 ]		3911207	2		=			
ANR	3911215	Identifier	info		3911207	0					
ANR	3911216	UnaryOperationExpression	& builtin_types [ 0 ]		3911207	1					
ANR	3911217	UnaryOperator	&		3911207	0					
ANR	3911218	ArrayIndexing	builtin_types [ 0 ]		3911207	1					
ANR	3911219	Identifier	builtin_types		3911207	0					
ANR	3911220	PrimaryExpression	0		3911207	1					
ANR	3911221	ForStatement	for ( ; info -> name ; ++ info )		3911207	1					
ANR	3911222	Condition	info -> name	205:8:6270:6279	3911207	0	True				
ANR	3911223	PtrMemberAccess	info -> name		3911207	0					
ANR	3911224	Identifier	info		3911207	0					
ANR	3911225	Identifier	name		3911207	1					
ANR	3911226	UnaryExpression	++ info	205:20:6282:6287	3911207	1	True				
ANR	3911227	IncDec	++		3911207	0					
ANR	3911228	Identifier	info		3911207	1					
ANR	3911229	CompoundStatement		4:28:82:82	3911207	2					
ANR	3911230	IfStatement	"if ( ZSTR_LEN ( name ) == info -> name_len && zend_binary_strcasecmp ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , info -> name , info -> name_len ) == 0 )"		3911207	0					
ANR	3911231	Condition	"ZSTR_LEN ( name ) == info -> name_len && zend_binary_strcasecmp ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , info -> name , info -> name_len ) == 0"	206:6:6298:6423	3911207	0	True				
ANR	3911232	AndExpression	"ZSTR_LEN ( name ) == info -> name_len && zend_binary_strcasecmp ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , info -> name , info -> name_len ) == 0"		3911207	0		&&			
ANR	3911233	EqualityExpression	ZSTR_LEN ( name ) == info -> name_len		3911207	0		==			
ANR	3911234	CallExpression	ZSTR_LEN ( name )		3911207	0					
ANR	3911235	Callee	ZSTR_LEN		3911207	0					
ANR	3911236	Identifier	ZSTR_LEN		3911207	0					
ANR	3911237	ArgumentList	name		3911207	1					
ANR	3911238	Argument	name		3911207	0					
ANR	3911239	Identifier	name		3911207	0					
ANR	3911240	PtrMemberAccess	info -> name_len		3911207	1					
ANR	3911241	Identifier	info		3911207	0					
ANR	3911242	Identifier	name_len		3911207	1					
ANR	3911243	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , info -> name , info -> name_len ) == 0"		3911207	1		==			
ANR	3911244	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , info -> name , info -> name_len )"		3911207	0					
ANR	3911245	Callee	zend_binary_strcasecmp		3911207	0					
ANR	3911246	Identifier	zend_binary_strcasecmp		3911207	0					
ANR	3911247	ArgumentList	ZSTR_VAL ( name )		3911207	1					
ANR	3911248	Argument	ZSTR_VAL ( name )		3911207	0					
ANR	3911249	CallExpression	ZSTR_VAL ( name )		3911207	0					
ANR	3911250	Callee	ZSTR_VAL		3911207	0					
ANR	3911251	Identifier	ZSTR_VAL		3911207	0					
ANR	3911252	ArgumentList	name		3911207	1					
ANR	3911253	Argument	name		3911207	0					
ANR	3911254	Identifier	name		3911207	0					
ANR	3911255	Argument	ZSTR_LEN ( name )		3911207	1					
ANR	3911256	CallExpression	ZSTR_LEN ( name )		3911207	0					
ANR	3911257	Callee	ZSTR_LEN		3911207	0					
ANR	3911258	Identifier	ZSTR_LEN		3911207	0					
ANR	3911259	ArgumentList	name		3911207	1					
ANR	3911260	Argument	name		3911207	0					
ANR	3911261	Identifier	name		3911207	0					
ANR	3911262	Argument	info -> name		3911207	2					
ANR	3911263	PtrMemberAccess	info -> name		3911207	0					
ANR	3911264	Identifier	info		3911207	0					
ANR	3911265	Identifier	name		3911207	1					
ANR	3911266	Argument	info -> name_len		3911207	3					
ANR	3911267	PtrMemberAccess	info -> name_len		3911207	0					
ANR	3911268	Identifier	info		3911207	0					
ANR	3911269	Identifier	name_len		3911207	1					
ANR	3911270	PrimaryExpression	0		3911207	1					
ANR	3911271	CompoundStatement		7:4:221:221	3911207	1					
ANR	3911272	ReturnStatement	return info -> type ;	209:3:6434:6451	3911207	0	True				
ANR	3911273	PtrMemberAccess	info -> type		3911207	0					
ANR	3911274	Identifier	info		3911207	0					
ANR	3911275	Identifier	type		3911207	1					
ANR	3911276	ReturnStatement	return 0 ;	213:1:6462:6470	3911207	2	True				
ANR	3911277	PrimaryExpression	0		3911207	0					
ANR	3911278	ReturnType	static zend_always_inline zend_uchar		3911207	1					
ANR	3911279	Identifier	zend_lookup_builtin_type_by_name		3911207	2					
ANR	3911280	ParameterList	const zend_string * name		3911207	3					
ANR	3911281	Parameter	const zend_string * name	201:70:6172:6194	3911207	0	True				
ANR	3911282	ParameterType	const zend_string *		3911207	0					
ANR	3911283	Identifier	name		3911207	1					
ANR	3911284	CFGEntryNode	ENTRY		3911207		True				
ANR	3911285	CFGExitNode	EXIT		3911207		True				
ANR	3911286	Symbol	info -> type		3911207						
ANR	3911287	Symbol	zend_binary_strcasecmp		3911207						
ANR	3911288	Symbol	name		3911207						
ANR	3911289	Symbol	builtin_types		3911207						
ANR	3911290	Symbol	ZSTR_LEN		3911207						
ANR	3911291	Symbol	info -> name		3911207						
ANR	3911292	Symbol	* info		3911207						
ANR	3911293	Symbol	info -> name_len		3911207						
ANR	3911294	Symbol	info		3911207						
ANR	3911295	Symbol	ZSTR_VAL		3911207						
ANR	3911296	Function	zend_oparray_context_begin	218:0:6486:6867							
ANR	3911297	FunctionDef	zend_oparray_context_begin (zend_oparray_context * prev_context)		3911296	0					
ANR	3911298	CompoundStatement		219:0:6564:6867	3911296	0					
ANR	3911299	ExpressionStatement	* prev_context = CG ( context )	220:1:6567:6594	3911296	0	True				
ANR	3911300	AssignmentExpression	* prev_context = CG ( context )		3911296	0		=			
ANR	3911301	UnaryOperationExpression	* prev_context		3911296	0					
ANR	3911302	UnaryOperator	*		3911296	0					
ANR	3911303	Identifier	prev_context		3911296	1					
ANR	3911304	CallExpression	CG ( context )		3911296	1					
ANR	3911305	Callee	CG		3911296	0					
ANR	3911306	Identifier	CG		3911296	0					
ANR	3911307	ArgumentList	context		3911296	1					
ANR	3911308	Argument	context		3911296	0					
ANR	3911309	Identifier	context		3911296	0					
ANR	3911310	ExpressionStatement	CG ( context ) . opcodes_size = INITIAL_OP_ARRAY_SIZE	221:1:6597:6645	3911296	1	True				
ANR	3911311	AssignmentExpression	CG ( context ) . opcodes_size = INITIAL_OP_ARRAY_SIZE		3911296	0		=			
ANR	3911312	MemberAccess	CG ( context ) . opcodes_size		3911296	0					
ANR	3911313	CallExpression	CG ( context )		3911296	0					
ANR	3911314	Callee	CG		3911296	0					
ANR	3911315	Identifier	CG		3911296	0					
ANR	3911316	ArgumentList	context		3911296	1					
ANR	3911317	Argument	context		3911296	0					
ANR	3911318	Identifier	context		3911296	0					
ANR	3911319	Identifier	opcodes_size		3911296	1					
ANR	3911320	Identifier	INITIAL_OP_ARRAY_SIZE		3911296	1					
ANR	3911321	ExpressionStatement	CG ( context ) . vars_size = 0	222:1:6648:6673	3911296	2	True				
ANR	3911322	AssignmentExpression	CG ( context ) . vars_size = 0		3911296	0		=			
ANR	3911323	MemberAccess	CG ( context ) . vars_size		3911296	0					
ANR	3911324	CallExpression	CG ( context )		3911296	0					
ANR	3911325	Callee	CG		3911296	0					
ANR	3911326	Identifier	CG		3911296	0					
ANR	3911327	ArgumentList	context		3911296	1					
ANR	3911328	Argument	context		3911296	0					
ANR	3911329	Identifier	context		3911296	0					
ANR	3911330	Identifier	vars_size		3911296	1					
ANR	3911331	PrimaryExpression	0		3911296	1					
ANR	3911332	ExpressionStatement	CG ( context ) . literals_size = 0	223:1:6676:6705	3911296	3	True				
ANR	3911333	AssignmentExpression	CG ( context ) . literals_size = 0		3911296	0		=			
ANR	3911334	MemberAccess	CG ( context ) . literals_size		3911296	0					
ANR	3911335	CallExpression	CG ( context )		3911296	0					
ANR	3911336	Callee	CG		3911296	0					
ANR	3911337	Identifier	CG		3911296	0					
ANR	3911338	ArgumentList	context		3911296	1					
ANR	3911339	Argument	context		3911296	0					
ANR	3911340	Identifier	context		3911296	0					
ANR	3911341	Identifier	literals_size		3911296	1					
ANR	3911342	PrimaryExpression	0		3911296	1					
ANR	3911343	ExpressionStatement	CG ( context ) . current_brk_cont = - 1	224:1:6708:6741	3911296	4	True				
ANR	3911344	AssignmentExpression	CG ( context ) . current_brk_cont = - 1		3911296	0		=			
ANR	3911345	MemberAccess	CG ( context ) . current_brk_cont		3911296	0					
ANR	3911346	CallExpression	CG ( context )		3911296	0					
ANR	3911347	Callee	CG		3911296	0					
ANR	3911348	Identifier	CG		3911296	0					
ANR	3911349	ArgumentList	context		3911296	1					
ANR	3911350	Argument	context		3911296	0					
ANR	3911351	Identifier	context		3911296	0					
ANR	3911352	Identifier	current_brk_cont		3911296	1					
ANR	3911353	UnaryOperationExpression	- 1		3911296	1					
ANR	3911354	UnaryOperator	-		3911296	0					
ANR	3911355	PrimaryExpression	1		3911296	1					
ANR	3911356	ExpressionStatement	CG ( context ) . backpatch_count = 0	225:1:6744:6775	3911296	5	True				
ANR	3911357	AssignmentExpression	CG ( context ) . backpatch_count = 0		3911296	0		=			
ANR	3911358	MemberAccess	CG ( context ) . backpatch_count		3911296	0					
ANR	3911359	CallExpression	CG ( context )		3911296	0					
ANR	3911360	Callee	CG		3911296	0					
ANR	3911361	Identifier	CG		3911296	0					
ANR	3911362	ArgumentList	context		3911296	1					
ANR	3911363	Argument	context		3911296	0					
ANR	3911364	Identifier	context		3911296	0					
ANR	3911365	Identifier	backpatch_count		3911296	1					
ANR	3911366	PrimaryExpression	0		3911296	1					
ANR	3911367	ExpressionStatement	CG ( context ) . in_finally = 0	226:1:6778:6804	3911296	6	True				
ANR	3911368	AssignmentExpression	CG ( context ) . in_finally = 0		3911296	0		=			
ANR	3911369	MemberAccess	CG ( context ) . in_finally		3911296	0					
ANR	3911370	CallExpression	CG ( context )		3911296	0					
ANR	3911371	Callee	CG		3911296	0					
ANR	3911372	Identifier	CG		3911296	0					
ANR	3911373	ArgumentList	context		3911296	1					
ANR	3911374	Argument	context		3911296	0					
ANR	3911375	Identifier	context		3911296	0					
ANR	3911376	Identifier	in_finally		3911296	1					
ANR	3911377	PrimaryExpression	0		3911296	1					
ANR	3911378	ExpressionStatement	CG ( context ) . fast_call_var = - 1	227:1:6807:6837	3911296	7	True				
ANR	3911379	AssignmentExpression	CG ( context ) . fast_call_var = - 1		3911296	0		=			
ANR	3911380	MemberAccess	CG ( context ) . fast_call_var		3911296	0					
ANR	3911381	CallExpression	CG ( context )		3911296	0					
ANR	3911382	Callee	CG		3911296	0					
ANR	3911383	Identifier	CG		3911296	0					
ANR	3911384	ArgumentList	context		3911296	1					
ANR	3911385	Argument	context		3911296	0					
ANR	3911386	Identifier	context		3911296	0					
ANR	3911387	Identifier	fast_call_var		3911296	1					
ANR	3911388	UnaryOperationExpression	- 1		3911296	1					
ANR	3911389	UnaryOperator	-		3911296	0					
ANR	3911390	PrimaryExpression	1		3911296	1					
ANR	3911391	ExpressionStatement	CG ( context ) . labels = NULL	228:1:6840:6865	3911296	8	True				
ANR	3911392	AssignmentExpression	CG ( context ) . labels = NULL		3911296	0		=			
ANR	3911393	MemberAccess	CG ( context ) . labels		3911296	0					
ANR	3911394	CallExpression	CG ( context )		3911296	0					
ANR	3911395	Callee	CG		3911296	0					
ANR	3911396	Identifier	CG		3911296	0					
ANR	3911397	ArgumentList	context		3911296	1					
ANR	3911398	Argument	context		3911296	0					
ANR	3911399	Identifier	context		3911296	0					
ANR	3911400	Identifier	labels		3911296	1					
ANR	3911401	Identifier	NULL		3911296	1					
ANR	3911402	ReturnType	void		3911296	1					
ANR	3911403	Identifier	zend_oparray_context_begin		3911296	2					
ANR	3911404	ParameterList	zend_oparray_context * prev_context		3911296	3					
ANR	3911405	Parameter	zend_oparray_context * prev_context	218:32:6518:6551	3911296	0	True				
ANR	3911406	ParameterType	zend_oparray_context *		3911296	0					
ANR	3911407	Identifier	prev_context		3911296	1					
ANR	3911408	CFGEntryNode	ENTRY		3911296		True				
ANR	3911409	CFGExitNode	EXIT		3911296		True				
ANR	3911410	Symbol	CG ( context ) . in_finally		3911296						
ANR	3911411	Symbol	CG ( context ) . vars_size		3911296						
ANR	3911412	Symbol	NULL		3911296						
ANR	3911413	Symbol	CG		3911296						
ANR	3911414	Symbol	* prev_context		3911296						
ANR	3911415	Symbol	CG ( context ) . literals_size		3911296						
ANR	3911416	Symbol	CG ( context ) . fast_call_var		3911296						
ANR	3911417	Symbol	INITIAL_OP_ARRAY_SIZE		3911296						
ANR	3911418	Symbol	CG ( context ) . backpatch_count		3911296						
ANR	3911419	Symbol	prev_context		3911296						
ANR	3911420	Symbol	context		3911296						
ANR	3911421	Symbol	CG ( context ) . labels		3911296						
ANR	3911422	Symbol	CG ( context ) . opcodes_size		3911296						
ANR	3911423	Symbol	CG ( context ) . current_brk_cont		3911296						
ANR	3911424	Function	zend_oparray_context_end	232:0:6880:7126							
ANR	3911425	FunctionDef	zend_oparray_context_end (zend_oparray_context * prev_context)		3911424	0					
ANR	3911426	CompoundStatement		233:0:6956:7126	3911424	0					
ANR	3911427	IfStatement	if ( CG ( context ) . labels )		3911424	0					
ANR	3911428	Condition	CG ( context ) . labels	234:5:6963:6980	3911424	0	True				
ANR	3911429	MemberAccess	CG ( context ) . labels		3911424	0					
ANR	3911430	CallExpression	CG ( context )		3911424	0					
ANR	3911431	Callee	CG		3911424	0					
ANR	3911432	Identifier	CG		3911424	0					
ANR	3911433	ArgumentList	context		3911424	1					
ANR	3911434	Argument	context		3911424	0					
ANR	3911435	Identifier	context		3911424	0					
ANR	3911436	Identifier	labels		3911424	1					
ANR	3911437	CompoundStatement		2:25:26:26	3911424	1					
ANR	3911438	ExpressionStatement	zend_hash_destroy ( CG ( context ) . labels )	235:2:6987:7024	3911424	0	True				
ANR	3911439	CallExpression	zend_hash_destroy ( CG ( context ) . labels )		3911424	0					
ANR	3911440	Callee	zend_hash_destroy		3911424	0					
ANR	3911441	Identifier	zend_hash_destroy		3911424	0					
ANR	3911442	ArgumentList	CG ( context ) . labels		3911424	1					
ANR	3911443	Argument	CG ( context ) . labels		3911424	0					
ANR	3911444	MemberAccess	CG ( context ) . labels		3911424	0					
ANR	3911445	CallExpression	CG ( context )		3911424	0					
ANR	3911446	Callee	CG		3911424	0					
ANR	3911447	Identifier	CG		3911424	0					
ANR	3911448	ArgumentList	context		3911424	1					
ANR	3911449	Argument	context		3911424	0					
ANR	3911450	Identifier	context		3911424	0					
ANR	3911451	Identifier	labels		3911424	1					
ANR	3911452	ExpressionStatement	FREE_HASHTABLE ( CG ( context ) . labels )	236:2:7028:7062	3911424	1	True				
ANR	3911453	CallExpression	FREE_HASHTABLE ( CG ( context ) . labels )		3911424	0					
ANR	3911454	Callee	FREE_HASHTABLE		3911424	0					
ANR	3911455	Identifier	FREE_HASHTABLE		3911424	0					
ANR	3911456	ArgumentList	CG ( context ) . labels		3911424	1					
ANR	3911457	Argument	CG ( context ) . labels		3911424	0					
ANR	3911458	MemberAccess	CG ( context ) . labels		3911424	0					
ANR	3911459	CallExpression	CG ( context )		3911424	0					
ANR	3911460	Callee	CG		3911424	0					
ANR	3911461	Identifier	CG		3911424	0					
ANR	3911462	ArgumentList	context		3911424	1					
ANR	3911463	Argument	context		3911424	0					
ANR	3911464	Identifier	context		3911424	0					
ANR	3911465	Identifier	labels		3911424	1					
ANR	3911466	ExpressionStatement	CG ( context ) . labels = NULL	237:2:7066:7091	3911424	2	True				
ANR	3911467	AssignmentExpression	CG ( context ) . labels = NULL		3911424	0		=			
ANR	3911468	MemberAccess	CG ( context ) . labels		3911424	0					
ANR	3911469	CallExpression	CG ( context )		3911424	0					
ANR	3911470	Callee	CG		3911424	0					
ANR	3911471	Identifier	CG		3911424	0					
ANR	3911472	ArgumentList	context		3911424	1					
ANR	3911473	Argument	context		3911424	0					
ANR	3911474	Identifier	context		3911424	0					
ANR	3911475	Identifier	labels		3911424	1					
ANR	3911476	Identifier	NULL		3911424	1					
ANR	3911477	ExpressionStatement	CG ( context ) = * prev_context	239:1:7097:7124	3911424	1	True				
ANR	3911478	AssignmentExpression	CG ( context ) = * prev_context		3911424	0		=			
ANR	3911479	CallExpression	CG ( context )		3911424	0					
ANR	3911480	Callee	CG		3911424	0					
ANR	3911481	Identifier	CG		3911424	0					
ANR	3911482	ArgumentList	context		3911424	1					
ANR	3911483	Argument	context		3911424	0					
ANR	3911484	Identifier	context		3911424	0					
ANR	3911485	UnaryOperationExpression	* prev_context		3911424	1					
ANR	3911486	UnaryOperator	*		3911424	0					
ANR	3911487	Identifier	prev_context		3911424	1					
ANR	3911488	ReturnType	void		3911424	1					
ANR	3911489	Identifier	zend_oparray_context_end		3911424	2					
ANR	3911490	ParameterList	zend_oparray_context * prev_context		3911424	3					
ANR	3911491	Parameter	zend_oparray_context * prev_context	232:30:6910:6943	3911424	0	True				
ANR	3911492	ParameterType	zend_oparray_context *		3911424	0					
ANR	3911493	Identifier	prev_context		3911424	1					
ANR	3911494	CFGEntryNode	ENTRY		3911424		True				
ANR	3911495	CFGExitNode	EXIT		3911424		True				
ANR	3911496	Symbol	NULL		3911424						
ANR	3911497	Symbol	CG		3911424						
ANR	3911498	Symbol	* prev_context		3911424						
ANR	3911499	Symbol	prev_context		3911424						
ANR	3911500	Symbol	context		3911424						
ANR	3911501	Symbol	CG ( context ) . labels		3911424						
ANR	3911502	Function	zend_reset_import_tables	243:0:7139:7559							
ANR	3911503	FunctionDef	zend_reset_import_tables ()		3911502	0					
ANR	3911504	CompoundStatement		244:0:7192:7559	3911502	0					
ANR	3911505	IfStatement	if ( FC ( imports ) )		3911502	0					
ANR	3911506	Condition	FC ( imports )	245:5:7199:7209	3911502	0	True				
ANR	3911507	CallExpression	FC ( imports )		3911502	0					
ANR	3911508	Callee	FC		3911502	0					
ANR	3911509	Identifier	FC		3911502	0					
ANR	3911510	ArgumentList	imports		3911502	1					
ANR	3911511	Argument	imports		3911502	0					
ANR	3911512	Identifier	imports		3911502	0					
ANR	3911513	CompoundStatement		2:18:19:19	3911502	1					
ANR	3911514	ExpressionStatement	zend_hash_destroy ( FC ( imports ) )	246:2:7216:7246	3911502	0	True				
ANR	3911515	CallExpression	zend_hash_destroy ( FC ( imports ) )		3911502	0					
ANR	3911516	Callee	zend_hash_destroy		3911502	0					
ANR	3911517	Identifier	zend_hash_destroy		3911502	0					
ANR	3911518	ArgumentList	FC ( imports )		3911502	1					
ANR	3911519	Argument	FC ( imports )		3911502	0					
ANR	3911520	CallExpression	FC ( imports )		3911502	0					
ANR	3911521	Callee	FC		3911502	0					
ANR	3911522	Identifier	FC		3911502	0					
ANR	3911523	ArgumentList	imports		3911502	1					
ANR	3911524	Argument	imports		3911502	0					
ANR	3911525	Identifier	imports		3911502	0					
ANR	3911526	ExpressionStatement	efree ( FC ( imports ) )	247:2:7250:7268	3911502	1	True				
ANR	3911527	CallExpression	efree ( FC ( imports ) )		3911502	0					
ANR	3911528	Callee	efree		3911502	0					
ANR	3911529	Identifier	efree		3911502	0					
ANR	3911530	ArgumentList	FC ( imports )		3911502	1					
ANR	3911531	Argument	FC ( imports )		3911502	0					
ANR	3911532	CallExpression	FC ( imports )		3911502	0					
ANR	3911533	Callee	FC		3911502	0					
ANR	3911534	Identifier	FC		3911502	0					
ANR	3911535	ArgumentList	imports		3911502	1					
ANR	3911536	Argument	imports		3911502	0					
ANR	3911537	Identifier	imports		3911502	0					
ANR	3911538	ExpressionStatement	FC ( imports ) = NULL	248:2:7272:7290	3911502	2	True				
ANR	3911539	AssignmentExpression	FC ( imports ) = NULL		3911502	0		=			
ANR	3911540	CallExpression	FC ( imports )		3911502	0					
ANR	3911541	Callee	FC		3911502	0					
ANR	3911542	Identifier	FC		3911502	0					
ANR	3911543	ArgumentList	imports		3911502	1					
ANR	3911544	Argument	imports		3911502	0					
ANR	3911545	Identifier	imports		3911502	0					
ANR	3911546	Identifier	NULL		3911502	1					
ANR	3911547	IfStatement	if ( FC ( imports_function ) )		3911502	1					
ANR	3911548	Condition	FC ( imports_function )	251:5:7301:7320	3911502	0	True				
ANR	3911549	CallExpression	FC ( imports_function )		3911502	0					
ANR	3911550	Callee	FC		3911502	0					
ANR	3911551	Identifier	FC		3911502	0					
ANR	3911552	ArgumentList	imports_function		3911502	1					
ANR	3911553	Argument	imports_function		3911502	0					
ANR	3911554	Identifier	imports_function		3911502	0					
ANR	3911555	CompoundStatement		8:27:130:130	3911502	1					
ANR	3911556	ExpressionStatement	zend_hash_destroy ( FC ( imports_function ) )	252:2:7327:7366	3911502	0	True				
ANR	3911557	CallExpression	zend_hash_destroy ( FC ( imports_function ) )		3911502	0					
ANR	3911558	Callee	zend_hash_destroy		3911502	0					
ANR	3911559	Identifier	zend_hash_destroy		3911502	0					
ANR	3911560	ArgumentList	FC ( imports_function )		3911502	1					
ANR	3911561	Argument	FC ( imports_function )		3911502	0					
ANR	3911562	CallExpression	FC ( imports_function )		3911502	0					
ANR	3911563	Callee	FC		3911502	0					
ANR	3911564	Identifier	FC		3911502	0					
ANR	3911565	ArgumentList	imports_function		3911502	1					
ANR	3911566	Argument	imports_function		3911502	0					
ANR	3911567	Identifier	imports_function		3911502	0					
ANR	3911568	ExpressionStatement	efree ( FC ( imports_function ) )	253:2:7370:7397	3911502	1	True				
ANR	3911569	CallExpression	efree ( FC ( imports_function ) )		3911502	0					
ANR	3911570	Callee	efree		3911502	0					
ANR	3911571	Identifier	efree		3911502	0					
ANR	3911572	ArgumentList	FC ( imports_function )		3911502	1					
ANR	3911573	Argument	FC ( imports_function )		3911502	0					
ANR	3911574	CallExpression	FC ( imports_function )		3911502	0					
ANR	3911575	Callee	FC		3911502	0					
ANR	3911576	Identifier	FC		3911502	0					
ANR	3911577	ArgumentList	imports_function		3911502	1					
ANR	3911578	Argument	imports_function		3911502	0					
ANR	3911579	Identifier	imports_function		3911502	0					
ANR	3911580	ExpressionStatement	FC ( imports_function ) = NULL	254:2:7401:7428	3911502	2	True				
ANR	3911581	AssignmentExpression	FC ( imports_function ) = NULL		3911502	0		=			
ANR	3911582	CallExpression	FC ( imports_function )		3911502	0					
ANR	3911583	Callee	FC		3911502	0					
ANR	3911584	Identifier	FC		3911502	0					
ANR	3911585	ArgumentList	imports_function		3911502	1					
ANR	3911586	Argument	imports_function		3911502	0					
ANR	3911587	Identifier	imports_function		3911502	0					
ANR	3911588	Identifier	NULL		3911502	1					
ANR	3911589	IfStatement	if ( FC ( imports_const ) )		3911502	2					
ANR	3911590	Condition	FC ( imports_const )	257:5:7439:7455	3911502	0	True				
ANR	3911591	CallExpression	FC ( imports_const )		3911502	0					
ANR	3911592	Callee	FC		3911502	0					
ANR	3911593	Identifier	FC		3911502	0					
ANR	3911594	ArgumentList	imports_const		3911502	1					
ANR	3911595	Argument	imports_const		3911502	0					
ANR	3911596	Identifier	imports_const		3911502	0					
ANR	3911597	CompoundStatement		14:24:265:265	3911502	1					
ANR	3911598	ExpressionStatement	zend_hash_destroy ( FC ( imports_const ) )	258:2:7462:7498	3911502	0	True				
ANR	3911599	CallExpression	zend_hash_destroy ( FC ( imports_const ) )		3911502	0					
ANR	3911600	Callee	zend_hash_destroy		3911502	0					
ANR	3911601	Identifier	zend_hash_destroy		3911502	0					
ANR	3911602	ArgumentList	FC ( imports_const )		3911502	1					
ANR	3911603	Argument	FC ( imports_const )		3911502	0					
ANR	3911604	CallExpression	FC ( imports_const )		3911502	0					
ANR	3911605	Callee	FC		3911502	0					
ANR	3911606	Identifier	FC		3911502	0					
ANR	3911607	ArgumentList	imports_const		3911502	1					
ANR	3911608	Argument	imports_const		3911502	0					
ANR	3911609	Identifier	imports_const		3911502	0					
ANR	3911610	ExpressionStatement	efree ( FC ( imports_const ) )	259:2:7502:7526	3911502	1	True				
ANR	3911611	CallExpression	efree ( FC ( imports_const ) )		3911502	0					
ANR	3911612	Callee	efree		3911502	0					
ANR	3911613	Identifier	efree		3911502	0					
ANR	3911614	ArgumentList	FC ( imports_const )		3911502	1					
ANR	3911615	Argument	FC ( imports_const )		3911502	0					
ANR	3911616	CallExpression	FC ( imports_const )		3911502	0					
ANR	3911617	Callee	FC		3911502	0					
ANR	3911618	Identifier	FC		3911502	0					
ANR	3911619	ArgumentList	imports_const		3911502	1					
ANR	3911620	Argument	imports_const		3911502	0					
ANR	3911621	Identifier	imports_const		3911502	0					
ANR	3911622	ExpressionStatement	FC ( imports_const ) = NULL	260:2:7530:7554	3911502	2	True				
ANR	3911623	AssignmentExpression	FC ( imports_const ) = NULL		3911502	0		=			
ANR	3911624	CallExpression	FC ( imports_const )		3911502	0					
ANR	3911625	Callee	FC		3911502	0					
ANR	3911626	Identifier	FC		3911502	0					
ANR	3911627	ArgumentList	imports_const		3911502	1					
ANR	3911628	Argument	imports_const		3911502	0					
ANR	3911629	Identifier	imports_const		3911502	0					
ANR	3911630	Identifier	NULL		3911502	1					
ANR	3911631	ReturnType	static void		3911502	1					
ANR	3911632	Identifier	zend_reset_import_tables		3911502	2					
ANR	3911633	ParameterList			3911502	3					
ANR	3911634	CFGEntryNode	ENTRY		3911502		True				
ANR	3911635	CFGExitNode	EXIT		3911502		True				
ANR	3911636	Symbol	imports		3911502						
ANR	3911637	Symbol	NULL		3911502						
ANR	3911638	Symbol	imports_const		3911502						
ANR	3911639	Symbol	FC		3911502						
ANR	3911640	Symbol	imports_function		3911502						
ANR	3911641	Function	zend_end_namespace	265:0:7572:7784							
ANR	3911642	FunctionDef	zend_end_namespace ()		3911641	0					
ANR	3911643	CompoundStatement		265:47:7619:7784	3911641	0					
ANR	3911644	ExpressionStatement	FC ( in_namespace ) = 0	266:1:7622:7642	3911641	0	True				
ANR	3911645	AssignmentExpression	FC ( in_namespace ) = 0		3911641	0		=			
ANR	3911646	CallExpression	FC ( in_namespace )		3911641	0					
ANR	3911647	Callee	FC		3911641	0					
ANR	3911648	Identifier	FC		3911641	0					
ANR	3911649	ArgumentList	in_namespace		3911641	1					
ANR	3911650	Argument	in_namespace		3911641	0					
ANR	3911651	Identifier	in_namespace		3911641	0					
ANR	3911652	PrimaryExpression	0		3911641	1					
ANR	3911653	ExpressionStatement	zend_reset_import_tables ( )	267:1:7645:7671	3911641	1	True				
ANR	3911654	CallExpression	zend_reset_import_tables ( )		3911641	0					
ANR	3911655	Callee	zend_reset_import_tables		3911641	0					
ANR	3911656	Identifier	zend_reset_import_tables		3911641	0					
ANR	3911657	ArgumentList			3911641	1					
ANR	3911658	IfStatement	if ( FC ( current_namespace ) )		3911641	2					
ANR	3911659	Condition	FC ( current_namespace )	268:5:7678:7698	3911641	0	True				
ANR	3911660	CallExpression	FC ( current_namespace )		3911641	0					
ANR	3911661	Callee	FC		3911641	0					
ANR	3911662	Identifier	FC		3911641	0					
ANR	3911663	ArgumentList	current_namespace		3911641	1					
ANR	3911664	Argument	current_namespace		3911641	0					
ANR	3911665	Identifier	current_namespace		3911641	0					
ANR	3911666	CompoundStatement		4:28:81:81	3911641	1					
ANR	3911667	ExpressionStatement	zend_string_release ( FC ( current_namespace ) )	269:2:7705:7747	3911641	0	True				
ANR	3911668	CallExpression	zend_string_release ( FC ( current_namespace ) )		3911641	0					
ANR	3911669	Callee	zend_string_release		3911641	0					
ANR	3911670	Identifier	zend_string_release		3911641	0					
ANR	3911671	ArgumentList	FC ( current_namespace )		3911641	1					
ANR	3911672	Argument	FC ( current_namespace )		3911641	0					
ANR	3911673	CallExpression	FC ( current_namespace )		3911641	0					
ANR	3911674	Callee	FC		3911641	0					
ANR	3911675	Identifier	FC		3911641	0					
ANR	3911676	ArgumentList	current_namespace		3911641	1					
ANR	3911677	Argument	current_namespace		3911641	0					
ANR	3911678	Identifier	current_namespace		3911641	0					
ANR	3911679	ExpressionStatement	FC ( current_namespace ) = NULL	270:2:7751:7779	3911641	1	True				
ANR	3911680	AssignmentExpression	FC ( current_namespace ) = NULL		3911641	0		=			
ANR	3911681	CallExpression	FC ( current_namespace )		3911641	0					
ANR	3911682	Callee	FC		3911641	0					
ANR	3911683	Identifier	FC		3911641	0					
ANR	3911684	ArgumentList	current_namespace		3911641	1					
ANR	3911685	Argument	current_namespace		3911641	0					
ANR	3911686	Identifier	current_namespace		3911641	0					
ANR	3911687	Identifier	NULL		3911641	1					
ANR	3911688	ReturnType	static void		3911641	1					
ANR	3911689	Identifier	zend_end_namespace		3911641	2					
ANR	3911690	ParameterList			3911641	3					
ANR	3911691	CFGEntryNode	ENTRY		3911641		True				
ANR	3911692	CFGExitNode	EXIT		3911641		True				
ANR	3911693	Symbol	NULL		3911641						
ANR	3911694	Symbol	in_namespace		3911641						
ANR	3911695	Symbol	current_namespace		3911641						
ANR	3911696	Symbol	FC		3911641						
ANR	3911697	Function	zend_file_context_begin	275:0:7797:8101							
ANR	3911698	FunctionDef	zend_file_context_begin (zend_file_context * prev_context)		3911697	0					
ANR	3911699	CompoundStatement		276:0:7869:8101	3911697	0					
ANR	3911700	ExpressionStatement	* prev_context = CG ( file_context )	277:1:7872:7904	3911697	0	True				
ANR	3911701	AssignmentExpression	* prev_context = CG ( file_context )		3911697	0		=			
ANR	3911702	UnaryOperationExpression	* prev_context		3911697	0					
ANR	3911703	UnaryOperator	*		3911697	0					
ANR	3911704	Identifier	prev_context		3911697	1					
ANR	3911705	CallExpression	CG ( file_context )		3911697	1					
ANR	3911706	Callee	CG		3911697	0					
ANR	3911707	Identifier	CG		3911697	0					
ANR	3911708	ArgumentList	file_context		3911697	1					
ANR	3911709	Argument	file_context		3911697	0					
ANR	3911710	Identifier	file_context		3911697	0					
ANR	3911711	ExpressionStatement	FC ( imports ) = NULL	278:1:7907:7925	3911697	1	True				
ANR	3911712	AssignmentExpression	FC ( imports ) = NULL		3911697	0		=			
ANR	3911713	CallExpression	FC ( imports )		3911697	0					
ANR	3911714	Callee	FC		3911697	0					
ANR	3911715	Identifier	FC		3911697	0					
ANR	3911716	ArgumentList	imports		3911697	1					
ANR	3911717	Argument	imports		3911697	0					
ANR	3911718	Identifier	imports		3911697	0					
ANR	3911719	Identifier	NULL		3911697	1					
ANR	3911720	ExpressionStatement	FC ( imports_function ) = NULL	279:1:7928:7955	3911697	2	True				
ANR	3911721	AssignmentExpression	FC ( imports_function ) = NULL		3911697	0		=			
ANR	3911722	CallExpression	FC ( imports_function )		3911697	0					
ANR	3911723	Callee	FC		3911697	0					
ANR	3911724	Identifier	FC		3911697	0					
ANR	3911725	ArgumentList	imports_function		3911697	1					
ANR	3911726	Argument	imports_function		3911697	0					
ANR	3911727	Identifier	imports_function		3911697	0					
ANR	3911728	Identifier	NULL		3911697	1					
ANR	3911729	ExpressionStatement	FC ( imports_const ) = NULL	280:1:7958:7982	3911697	3	True				
ANR	3911730	AssignmentExpression	FC ( imports_const ) = NULL		3911697	0		=			
ANR	3911731	CallExpression	FC ( imports_const )		3911697	0					
ANR	3911732	Callee	FC		3911697	0					
ANR	3911733	Identifier	FC		3911697	0					
ANR	3911734	ArgumentList	imports_const		3911697	1					
ANR	3911735	Argument	imports_const		3911697	0					
ANR	3911736	Identifier	imports_const		3911697	0					
ANR	3911737	Identifier	NULL		3911697	1					
ANR	3911738	ExpressionStatement	FC ( current_namespace ) = NULL	281:1:7985:8013	3911697	4	True				
ANR	3911739	AssignmentExpression	FC ( current_namespace ) = NULL		3911697	0		=			
ANR	3911740	CallExpression	FC ( current_namespace )		3911697	0					
ANR	3911741	Callee	FC		3911697	0					
ANR	3911742	Identifier	FC		3911697	0					
ANR	3911743	ArgumentList	current_namespace		3911697	1					
ANR	3911744	Argument	current_namespace		3911697	0					
ANR	3911745	Identifier	current_namespace		3911697	0					
ANR	3911746	Identifier	NULL		3911697	1					
ANR	3911747	ExpressionStatement	FC ( in_namespace ) = 0	282:1:8016:8036	3911697	5	True				
ANR	3911748	AssignmentExpression	FC ( in_namespace ) = 0		3911697	0		=			
ANR	3911749	CallExpression	FC ( in_namespace )		3911697	0					
ANR	3911750	Callee	FC		3911697	0					
ANR	3911751	Identifier	FC		3911697	0					
ANR	3911752	ArgumentList	in_namespace		3911697	1					
ANR	3911753	Argument	in_namespace		3911697	0					
ANR	3911754	Identifier	in_namespace		3911697	0					
ANR	3911755	PrimaryExpression	0		3911697	1					
ANR	3911756	ExpressionStatement	FC ( has_bracketed_namespaces ) = 0	283:1:8039:8071	3911697	6	True				
ANR	3911757	AssignmentExpression	FC ( has_bracketed_namespaces ) = 0		3911697	0		=			
ANR	3911758	CallExpression	FC ( has_bracketed_namespaces )		3911697	0					
ANR	3911759	Callee	FC		3911697	0					
ANR	3911760	Identifier	FC		3911697	0					
ANR	3911761	ArgumentList	has_bracketed_namespaces		3911697	1					
ANR	3911762	Argument	has_bracketed_namespaces		3911697	0					
ANR	3911763	Identifier	has_bracketed_namespaces		3911697	0					
ANR	3911764	PrimaryExpression	0		3911697	1					
ANR	3911765	ExpressionStatement	FC ( declarables ) . ticks = 0	284:1:8074:8099	3911697	7	True				
ANR	3911766	AssignmentExpression	FC ( declarables ) . ticks = 0		3911697	0		=			
ANR	3911767	MemberAccess	FC ( declarables ) . ticks		3911697	0					
ANR	3911768	CallExpression	FC ( declarables )		3911697	0					
ANR	3911769	Callee	FC		3911697	0					
ANR	3911770	Identifier	FC		3911697	0					
ANR	3911771	ArgumentList	declarables		3911697	1					
ANR	3911772	Argument	declarables		3911697	0					
ANR	3911773	Identifier	declarables		3911697	0					
ANR	3911774	Identifier	ticks		3911697	1					
ANR	3911775	PrimaryExpression	0		3911697	1					
ANR	3911776	ReturnType	void		3911697	1					
ANR	3911777	Identifier	zend_file_context_begin		3911697	2					
ANR	3911778	ParameterList	zend_file_context * prev_context		3911697	3					
ANR	3911779	Parameter	zend_file_context * prev_context	275:29:7826:7856	3911697	0	True				
ANR	3911780	ParameterType	zend_file_context *		3911697	0					
ANR	3911781	Identifier	prev_context		3911697	1					
ANR	3911782	CFGEntryNode	ENTRY		3911697		True				
ANR	3911783	CFGExitNode	EXIT		3911697		True				
ANR	3911784	Symbol	NULL		3911697						
ANR	3911785	Symbol	imports		3911697						
ANR	3911786	Symbol	CG		3911697						
ANR	3911787	Symbol	in_namespace		3911697						
ANR	3911788	Symbol	* prev_context		3911697						
ANR	3911789	Symbol	has_bracketed_namespaces		3911697						
ANR	3911790	Symbol	imports_const		3911697						
ANR	3911791	Symbol	imports_function		3911697						
ANR	3911792	Symbol	declarables		3911697						
ANR	3911793	Symbol	current_namespace		3911697						
ANR	3911794	Symbol	prev_context		3911697						
ANR	3911795	Symbol	file_context		3911697						
ANR	3911796	Symbol	FC		3911697						
ANR	3911797	Symbol	FC ( declarables ) . ticks		3911697						
ANR	3911798	Function	zend_file_context_end	288:0:8114:8244							
ANR	3911799	FunctionDef	zend_file_context_end (zend_file_context * prev_context)		3911798	0					
ANR	3911800	CompoundStatement		289:0:8184:8244	3911798	0					
ANR	3911801	ExpressionStatement	zend_end_namespace ( )	290:1:8187:8207	3911798	0	True				
ANR	3911802	CallExpression	zend_end_namespace ( )		3911798	0					
ANR	3911803	Callee	zend_end_namespace		3911798	0					
ANR	3911804	Identifier	zend_end_namespace		3911798	0					
ANR	3911805	ArgumentList			3911798	1					
ANR	3911806	ExpressionStatement	CG ( file_context ) = * prev_context	291:1:8210:8242	3911798	1	True				
ANR	3911807	AssignmentExpression	CG ( file_context ) = * prev_context		3911798	0		=			
ANR	3911808	CallExpression	CG ( file_context )		3911798	0					
ANR	3911809	Callee	CG		3911798	0					
ANR	3911810	Identifier	CG		3911798	0					
ANR	3911811	ArgumentList	file_context		3911798	1					
ANR	3911812	Argument	file_context		3911798	0					
ANR	3911813	Identifier	file_context		3911798	0					
ANR	3911814	UnaryOperationExpression	* prev_context		3911798	1					
ANR	3911815	UnaryOperator	*		3911798	0					
ANR	3911816	Identifier	prev_context		3911798	1					
ANR	3911817	ReturnType	void		3911798	1					
ANR	3911818	Identifier	zend_file_context_end		3911798	2					
ANR	3911819	ParameterList	zend_file_context * prev_context		3911798	3					
ANR	3911820	Parameter	zend_file_context * prev_context	288:27:8141:8171	3911798	0	True				
ANR	3911821	ParameterType	zend_file_context *		3911798	0					
ANR	3911822	Identifier	prev_context		3911798	1					
ANR	3911823	CFGEntryNode	ENTRY		3911798		True				
ANR	3911824	CFGExitNode	EXIT		3911798		True				
ANR	3911825	Symbol	CG		3911798						
ANR	3911826	Symbol	* prev_context		3911798						
ANR	3911827	Symbol	prev_context		3911798						
ANR	3911828	Symbol	file_context		3911798						
ANR	3911829	Function	zend_init_compiler_data_structures	295:0:8257:8606							
ANR	3911830	FunctionDef	zend_init_compiler_data_structures ()		3911829	0					
ANR	3911831	CompoundStatement		296:0:8313:8606	3911829	0					
ANR	3911832	ExpressionStatement	"zend_stack_init ( & CG ( loop_var_stack ) , sizeof ( zend_loop_var ) )"	297:1:8316:8375	3911829	0	True				
ANR	3911833	CallExpression	"zend_stack_init ( & CG ( loop_var_stack ) , sizeof ( zend_loop_var ) )"		3911829	0					
ANR	3911834	Callee	zend_stack_init		3911829	0					
ANR	3911835	Identifier	zend_stack_init		3911829	0					
ANR	3911836	ArgumentList	& CG ( loop_var_stack )		3911829	1					
ANR	3911837	Argument	& CG ( loop_var_stack )		3911829	0					
ANR	3911838	UnaryOperationExpression	& CG ( loop_var_stack )		3911829	0					
ANR	3911839	UnaryOperator	&		3911829	0					
ANR	3911840	CallExpression	CG ( loop_var_stack )		3911829	1					
ANR	3911841	Callee	CG		3911829	0					
ANR	3911842	Identifier	CG		3911829	0					
ANR	3911843	ArgumentList	loop_var_stack		3911829	1					
ANR	3911844	Argument	loop_var_stack		3911829	0					
ANR	3911845	Identifier	loop_var_stack		3911829	0					
ANR	3911846	Argument	sizeof ( zend_loop_var )		3911829	1					
ANR	3911847	SizeofExpression	sizeof ( zend_loop_var )		3911829	0					
ANR	3911848	Sizeof	sizeof		3911829	0					
ANR	3911849	SizeofOperand	zend_loop_var		3911829	1					
ANR	3911850	ExpressionStatement	"zend_stack_init ( & CG ( delayed_oplines_stack ) , sizeof ( zend_op ) )"	298:1:8378:8438	3911829	1	True				
ANR	3911851	CallExpression	"zend_stack_init ( & CG ( delayed_oplines_stack ) , sizeof ( zend_op ) )"		3911829	0					
ANR	3911852	Callee	zend_stack_init		3911829	0					
ANR	3911853	Identifier	zend_stack_init		3911829	0					
ANR	3911854	ArgumentList	& CG ( delayed_oplines_stack )		3911829	1					
ANR	3911855	Argument	& CG ( delayed_oplines_stack )		3911829	0					
ANR	3911856	UnaryOperationExpression	& CG ( delayed_oplines_stack )		3911829	0					
ANR	3911857	UnaryOperator	&		3911829	0					
ANR	3911858	CallExpression	CG ( delayed_oplines_stack )		3911829	1					
ANR	3911859	Callee	CG		3911829	0					
ANR	3911860	Identifier	CG		3911829	0					
ANR	3911861	ArgumentList	delayed_oplines_stack		3911829	1					
ANR	3911862	Argument	delayed_oplines_stack		3911829	0					
ANR	3911863	Identifier	delayed_oplines_stack		3911829	0					
ANR	3911864	Argument	sizeof ( zend_op )		3911829	1					
ANR	3911865	SizeofExpression	sizeof ( zend_op )		3911829	0					
ANR	3911866	Sizeof	sizeof		3911829	0					
ANR	3911867	SizeofOperand	zend_op		3911829	1					
ANR	3911868	ExpressionStatement	CG ( active_class_entry ) = NULL	299:1:8441:8470	3911829	2	True				
ANR	3911869	AssignmentExpression	CG ( active_class_entry ) = NULL		3911829	0		=			
ANR	3911870	CallExpression	CG ( active_class_entry )		3911829	0					
ANR	3911871	Callee	CG		3911829	0					
ANR	3911872	Identifier	CG		3911829	0					
ANR	3911873	ArgumentList	active_class_entry		3911829	1					
ANR	3911874	Argument	active_class_entry		3911829	0					
ANR	3911875	Identifier	active_class_entry		3911829	0					
ANR	3911876	Identifier	NULL		3911829	1					
ANR	3911877	ExpressionStatement	CG ( in_compilation ) = 0	300:1:8473:8495	3911829	3	True				
ANR	3911878	AssignmentExpression	CG ( in_compilation ) = 0		3911829	0		=			
ANR	3911879	CallExpression	CG ( in_compilation )		3911829	0					
ANR	3911880	Callee	CG		3911829	0					
ANR	3911881	Identifier	CG		3911829	0					
ANR	3911882	ArgumentList	in_compilation		3911829	1					
ANR	3911883	Argument	in_compilation		3911829	0					
ANR	3911884	Identifier	in_compilation		3911829	0					
ANR	3911885	PrimaryExpression	0		3911829	1					
ANR	3911886	ExpressionStatement	CG ( start_lineno ) = 0	301:1:8498:8518	3911829	4	True				
ANR	3911887	AssignmentExpression	CG ( start_lineno ) = 0		3911829	0		=			
ANR	3911888	CallExpression	CG ( start_lineno )		3911829	0					
ANR	3911889	Callee	CG		3911829	0					
ANR	3911890	Identifier	CG		3911829	0					
ANR	3911891	ArgumentList	start_lineno		3911829	1					
ANR	3911892	Argument	start_lineno		3911829	0					
ANR	3911893	Identifier	start_lineno		3911829	0					
ANR	3911894	PrimaryExpression	0		3911829	1					
ANR	3911895	ExpressionStatement	"zend_hash_init ( & CG ( const_filenames ) , 8 , NULL , NULL , 0 )"	302:1:8521:8575	3911829	5	True				
ANR	3911896	CallExpression	"zend_hash_init ( & CG ( const_filenames ) , 8 , NULL , NULL , 0 )"		3911829	0					
ANR	3911897	Callee	zend_hash_init		3911829	0					
ANR	3911898	Identifier	zend_hash_init		3911829	0					
ANR	3911899	ArgumentList	& CG ( const_filenames )		3911829	1					
ANR	3911900	Argument	& CG ( const_filenames )		3911829	0					
ANR	3911901	UnaryOperationExpression	& CG ( const_filenames )		3911829	0					
ANR	3911902	UnaryOperator	&		3911829	0					
ANR	3911903	CallExpression	CG ( const_filenames )		3911829	1					
ANR	3911904	Callee	CG		3911829	0					
ANR	3911905	Identifier	CG		3911829	0					
ANR	3911906	ArgumentList	const_filenames		3911829	1					
ANR	3911907	Argument	const_filenames		3911829	0					
ANR	3911908	Identifier	const_filenames		3911829	0					
ANR	3911909	Argument	8		3911829	1					
ANR	3911910	PrimaryExpression	8		3911829	0					
ANR	3911911	Argument	NULL		3911829	2					
ANR	3911912	Identifier	NULL		3911829	0					
ANR	3911913	Argument	NULL		3911829	3					
ANR	3911914	Identifier	NULL		3911829	0					
ANR	3911915	Argument	0		3911829	4					
ANR	3911916	PrimaryExpression	0		3911829	0					
ANR	3911917	ExpressionStatement	CG ( encoding_declared ) = 0	304:1:8579:8604	3911829	6	True				
ANR	3911918	AssignmentExpression	CG ( encoding_declared ) = 0		3911829	0		=			
ANR	3911919	CallExpression	CG ( encoding_declared )		3911829	0					
ANR	3911920	Callee	CG		3911829	0					
ANR	3911921	Identifier	CG		3911829	0					
ANR	3911922	ArgumentList	encoding_declared		3911829	1					
ANR	3911923	Argument	encoding_declared		3911829	0					
ANR	3911924	Identifier	encoding_declared		3911829	0					
ANR	3911925	PrimaryExpression	0		3911829	1					
ANR	3911926	ReturnType	void		3911829	1					
ANR	3911927	Identifier	zend_init_compiler_data_structures		3911829	2					
ANR	3911928	ParameterList			3911829	3					
ANR	3911929	CFGEntryNode	ENTRY		3911829		True				
ANR	3911930	CFGExitNode	EXIT		3911829		True				
ANR	3911931	Symbol	NULL		3911829						
ANR	3911932	Symbol	loop_var_stack		3911829						
ANR	3911933	Symbol	CG		3911829						
ANR	3911934	Symbol	encoding_declared		3911829						
ANR	3911935	Symbol	const_filenames		3911829						
ANR	3911936	Symbol	active_class_entry		3911829						
ANR	3911937	Symbol	start_lineno		3911829						
ANR	3911938	Symbol	delayed_oplines_stack		3911829						
ANR	3911939	Symbol	in_compilation		3911829						
ANR	3911940	Symbol	& CG		3911829						
ANR	3911941	Function	file_handle_dtor	308:0:8619:8713							
ANR	3911942	FunctionDef	file_handle_dtor (zend_file_handle * fh)		3911941	0					
ANR	3911943	CompoundStatement		309:0:8682:8713	3911941	0					
ANR	3911944	ExpressionStatement	zend_file_handle_dtor ( fh )	311:1:8686:8711	3911941	0	True				
ANR	3911945	CallExpression	zend_file_handle_dtor ( fh )		3911941	0					
ANR	3911946	Callee	zend_file_handle_dtor		3911941	0					
ANR	3911947	Identifier	zend_file_handle_dtor		3911941	0					
ANR	3911948	ArgumentList	fh		3911941	1					
ANR	3911949	Argument	fh		3911941	0					
ANR	3911950	Identifier	fh		3911941	0					
ANR	3911951	ReturnType	ZEND_API void		3911941	1					
ANR	3911952	Identifier	file_handle_dtor		3911941	2					
ANR	3911953	ParameterList	zend_file_handle * fh		3911941	3					
ANR	3911954	Parameter	zend_file_handle * fh	308:31:8650:8669	3911941	0	True				
ANR	3911955	ParameterType	zend_file_handle *		3911941	0					
ANR	3911956	Identifier	fh		3911941	1					
ANR	3911957	CFGEntryNode	ENTRY		3911941		True				
ANR	3911958	CFGExitNode	EXIT		3911941		True				
ANR	3911959	Symbol	fh		3911941						
ANR	3911960	Function	init_compiler	315:0:8726:9139							
ANR	3911961	FunctionDef	init_compiler ()		3911960	0					
ANR	3911962	CompoundStatement		316:0:8761:9139	3911960	0					
ANR	3911963	ExpressionStatement	CG ( arena ) = zend_arena_create ( 64 * 1024 )	317:1:8764:8804	3911960	0	True				
ANR	3911964	AssignmentExpression	CG ( arena ) = zend_arena_create ( 64 * 1024 )		3911960	0		=			
ANR	3911965	CallExpression	CG ( arena )		3911960	0					
ANR	3911966	Callee	CG		3911960	0					
ANR	3911967	Identifier	CG		3911960	0					
ANR	3911968	ArgumentList	arena		3911960	1					
ANR	3911969	Argument	arena		3911960	0					
ANR	3911970	Identifier	arena		3911960	0					
ANR	3911971	CallExpression	zend_arena_create ( 64 * 1024 )		3911960	1					
ANR	3911972	Callee	zend_arena_create		3911960	0					
ANR	3911973	Identifier	zend_arena_create		3911960	0					
ANR	3911974	ArgumentList	64 * 1024		3911960	1					
ANR	3911975	Argument	64 * 1024		3911960	0					
ANR	3911976	MultiplicativeExpression	64 * 1024		3911960	0		*			
ANR	3911977	PrimaryExpression	64		3911960	0					
ANR	3911978	PrimaryExpression	1024		3911960	1					
ANR	3911979	ExpressionStatement	CG ( active_op_array ) = NULL	318:1:8807:8833	3911960	1	True				
ANR	3911980	AssignmentExpression	CG ( active_op_array ) = NULL		3911960	0		=			
ANR	3911981	CallExpression	CG ( active_op_array )		3911960	0					
ANR	3911982	Callee	CG		3911960	0					
ANR	3911983	Identifier	CG		3911960	0					
ANR	3911984	ArgumentList	active_op_array		3911960	1					
ANR	3911985	Argument	active_op_array		3911960	0					
ANR	3911986	Identifier	active_op_array		3911960	0					
ANR	3911987	Identifier	NULL		3911960	1					
ANR	3911988	ExpressionStatement	"memset ( & CG ( context ) , 0 , sizeof ( CG ( context ) ) )"	319:1:8836:8880	3911960	2	True				
ANR	3911989	CallExpression	"memset ( & CG ( context ) , 0 , sizeof ( CG ( context ) ) )"		3911960	0					
ANR	3911990	Callee	memset		3911960	0					
ANR	3911991	Identifier	memset		3911960	0					
ANR	3911992	ArgumentList	& CG ( context )		3911960	1					
ANR	3911993	Argument	& CG ( context )		3911960	0					
ANR	3911994	UnaryOperationExpression	& CG ( context )		3911960	0					
ANR	3911995	UnaryOperator	&		3911960	0					
ANR	3911996	CallExpression	CG ( context )		3911960	1					
ANR	3911997	Callee	CG		3911960	0					
ANR	3911998	Identifier	CG		3911960	0					
ANR	3911999	ArgumentList	context		3911960	1					
ANR	3912000	Argument	context		3911960	0					
ANR	3912001	Identifier	context		3911960	0					
ANR	3912002	Argument	0		3911960	1					
ANR	3912003	PrimaryExpression	0		3911960	0					
ANR	3912004	Argument	sizeof ( CG ( context ) )		3911960	2					
ANR	3912005	SizeofExpression	sizeof ( CG ( context ) )		3911960	0					
ANR	3912006	Sizeof	sizeof		3911960	0					
ANR	3912007	CallExpression	CG ( context )		3911960	1					
ANR	3912008	Callee	CG		3911960	0					
ANR	3912009	Identifier	CG		3911960	0					
ANR	3912010	ArgumentList	context		3911960	1					
ANR	3912011	Argument	context		3911960	0					
ANR	3912012	Identifier	context		3911960	0					
ANR	3912013	ExpressionStatement	zend_init_compiler_data_structures ( )	320:1:8883:8919	3911960	3	True				
ANR	3912014	CallExpression	zend_init_compiler_data_structures ( )		3911960	0					
ANR	3912015	Callee	zend_init_compiler_data_structures		3911960	0					
ANR	3912016	Identifier	zend_init_compiler_data_structures		3911960	0					
ANR	3912017	ArgumentList			3911960	1					
ANR	3912018	ExpressionStatement	zend_init_rsrc_list ( )	321:1:8922:8943	3911960	4	True				
ANR	3912019	CallExpression	zend_init_rsrc_list ( )		3911960	0					
ANR	3912020	Callee	zend_init_rsrc_list		3911960	0					
ANR	3912021	Identifier	zend_init_rsrc_list		3911960	0					
ANR	3912022	ArgumentList			3911960	1					
ANR	3912023	ExpressionStatement	"zend_hash_init ( & CG ( filenames_table ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"	322:1:8946:9009	3911960	5	True				
ANR	3912024	CallExpression	"zend_hash_init ( & CG ( filenames_table ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"		3911960	0					
ANR	3912025	Callee	zend_hash_init		3911960	0					
ANR	3912026	Identifier	zend_hash_init		3911960	0					
ANR	3912027	ArgumentList	& CG ( filenames_table )		3911960	1					
ANR	3912028	Argument	& CG ( filenames_table )		3911960	0					
ANR	3912029	UnaryOperationExpression	& CG ( filenames_table )		3911960	0					
ANR	3912030	UnaryOperator	&		3911960	0					
ANR	3912031	CallExpression	CG ( filenames_table )		3911960	1					
ANR	3912032	Callee	CG		3911960	0					
ANR	3912033	Identifier	CG		3911960	0					
ANR	3912034	ArgumentList	filenames_table		3911960	1					
ANR	3912035	Argument	filenames_table		3911960	0					
ANR	3912036	Identifier	filenames_table		3911960	0					
ANR	3912037	Argument	8		3911960	1					
ANR	3912038	PrimaryExpression	8		3911960	0					
ANR	3912039	Argument	NULL		3911960	2					
ANR	3912040	Identifier	NULL		3911960	0					
ANR	3912041	Argument	ZVAL_PTR_DTOR		3911960	3					
ANR	3912042	Identifier	ZVAL_PTR_DTOR		3911960	0					
ANR	3912043	Argument	0		3911960	4					
ANR	3912044	PrimaryExpression	0		3911960	0					
ANR	3912045	Statement	zend_llist_init	323:1:9012:9026	3911960	6	True				
ANR	3912046	Statement	(	323:16:9027:9027	3911960	7	True				
ANR	3912047	Statement	&	323:17:9028:9028	3911960	8	True				
ANR	3912048	Statement	CG	323:18:9029:9030	3911960	9	True				
ANR	3912049	Statement	(	323:20:9031:9031	3911960	10	True				
ANR	3912050	Statement	open_files	323:21:9032:9041	3911960	11	True				
ANR	3912051	Statement	)	323:31:9042:9042	3911960	12	True				
ANR	3912052	Statement	","	323:32:9043:9043	3911960	13	True				
ANR	3912053	Statement	sizeof	323:34:9045:9050	3911960	14	True				
ANR	3912054	Statement	(	323:40:9051:9051	3911960	15	True				
ANR	3912055	Statement	zend_file_handle	323:41:9052:9067	3911960	16	True				
ANR	3912056	Statement	)	323:57:9068:9068	3911960	17	True				
ANR	3912057	Statement	","	323:58:9069:9069	3911960	18	True				
ANR	3912058	Statement	(	323:60:9071:9071	3911960	19	True				
ANR	3912059	Statement	void	323:61:9072:9075	3911960	20	True				
ANR	3912060	Statement	(	323:66:9077:9077	3911960	21	True				
ANR	3912061	Statement	*	323:67:9078:9078	3911960	22	True				
ANR	3912062	Statement	)	323:68:9079:9079	3911960	23	True				
ANR	3912063	Statement	(	323:69:9080:9080	3911960	24	True				
ANR	3912064	Statement	void	323:70:9081:9084	3911960	25	True				
ANR	3912065	Statement	*	323:75:9086:9086	3911960	26	True				
ANR	3912066	Statement	)	323:76:9087:9087	3911960	27	True				
ANR	3912067	Statement	)	323:77:9088:9088	3911960	28	True				
ANR	3912068	Statement	file_handle_dtor	323:79:9090:9105	3911960	29	True				
ANR	3912069	Statement	","	323:95:9106:9106	3911960	30	True				
ANR	3912070	Statement	0	323:97:9108:9108	3911960	31	True				
ANR	3912071	Statement	)	323:98:9109:9109	3911960	32	True				
ANR	3912072	ExpressionStatement		323:99:9110:9110	3911960	33	True				
ANR	3912073	ExpressionStatement	CG ( unclean_shutdown ) = 0	324:1:9113:9137	3911960	34	True				
ANR	3912074	AssignmentExpression	CG ( unclean_shutdown ) = 0		3911960	0		=			
ANR	3912075	CallExpression	CG ( unclean_shutdown )		3911960	0					
ANR	3912076	Callee	CG		3911960	0					
ANR	3912077	Identifier	CG		3911960	0					
ANR	3912078	ArgumentList	unclean_shutdown		3911960	1					
ANR	3912079	Argument	unclean_shutdown		3911960	0					
ANR	3912080	Identifier	unclean_shutdown		3911960	0					
ANR	3912081	PrimaryExpression	0		3911960	1					
ANR	3912082	ReturnType	void		3911960	1					
ANR	3912083	Identifier	init_compiler		3911960	2					
ANR	3912084	ParameterList			3911960	3					
ANR	3912085	CFGEntryNode	ENTRY		3911960		True				
ANR	3912086	CFGExitNode	EXIT		3911960		True				
ANR	3912087	Symbol	unclean_shutdown		3911960						
ANR	3912088	Symbol	NULL		3911960						
ANR	3912089	Symbol	CG		3911960						
ANR	3912090	Symbol	active_op_array		3911960						
ANR	3912091	Symbol	filenames_table		3911960						
ANR	3912092	Symbol	zend_arena_create		3911960						
ANR	3912093	Symbol	context		3911960						
ANR	3912094	Symbol	arena		3911960						
ANR	3912095	Symbol	& CG		3911960						
ANR	3912096	Symbol	ZVAL_PTR_DTOR		3911960						
ANR	3912097	Function	shutdown_compiler	328:0:9152:9400							
ANR	3912098	FunctionDef	shutdown_compiler ()		3912097	0					
ANR	3912099	CompoundStatement		329:0:9191:9400	3912097	0					
ANR	3912100	ExpressionStatement	zend_stack_destroy ( & CG ( loop_var_stack ) )	330:1:9194:9233	3912097	0	True				
ANR	3912101	CallExpression	zend_stack_destroy ( & CG ( loop_var_stack ) )		3912097	0					
ANR	3912102	Callee	zend_stack_destroy		3912097	0					
ANR	3912103	Identifier	zend_stack_destroy		3912097	0					
ANR	3912104	ArgumentList	& CG ( loop_var_stack )		3912097	1					
ANR	3912105	Argument	& CG ( loop_var_stack )		3912097	0					
ANR	3912106	UnaryOperationExpression	& CG ( loop_var_stack )		3912097	0					
ANR	3912107	UnaryOperator	&		3912097	0					
ANR	3912108	CallExpression	CG ( loop_var_stack )		3912097	1					
ANR	3912109	Callee	CG		3912097	0					
ANR	3912110	Identifier	CG		3912097	0					
ANR	3912111	ArgumentList	loop_var_stack		3912097	1					
ANR	3912112	Argument	loop_var_stack		3912097	0					
ANR	3912113	Identifier	loop_var_stack		3912097	0					
ANR	3912114	ExpressionStatement	zend_stack_destroy ( & CG ( delayed_oplines_stack ) )	331:1:9236:9282	3912097	1	True				
ANR	3912115	CallExpression	zend_stack_destroy ( & CG ( delayed_oplines_stack ) )		3912097	0					
ANR	3912116	Callee	zend_stack_destroy		3912097	0					
ANR	3912117	Identifier	zend_stack_destroy		3912097	0					
ANR	3912118	ArgumentList	& CG ( delayed_oplines_stack )		3912097	1					
ANR	3912119	Argument	& CG ( delayed_oplines_stack )		3912097	0					
ANR	3912120	UnaryOperationExpression	& CG ( delayed_oplines_stack )		3912097	0					
ANR	3912121	UnaryOperator	&		3912097	0					
ANR	3912122	CallExpression	CG ( delayed_oplines_stack )		3912097	1					
ANR	3912123	Callee	CG		3912097	0					
ANR	3912124	Identifier	CG		3912097	0					
ANR	3912125	ArgumentList	delayed_oplines_stack		3912097	1					
ANR	3912126	Argument	delayed_oplines_stack		3912097	0					
ANR	3912127	Identifier	delayed_oplines_stack		3912097	0					
ANR	3912128	ExpressionStatement	zend_hash_destroy ( & CG ( filenames_table ) )	332:1:9285:9324	3912097	2	True				
ANR	3912129	CallExpression	zend_hash_destroy ( & CG ( filenames_table ) )		3912097	0					
ANR	3912130	Callee	zend_hash_destroy		3912097	0					
ANR	3912131	Identifier	zend_hash_destroy		3912097	0					
ANR	3912132	ArgumentList	& CG ( filenames_table )		3912097	1					
ANR	3912133	Argument	& CG ( filenames_table )		3912097	0					
ANR	3912134	UnaryOperationExpression	& CG ( filenames_table )		3912097	0					
ANR	3912135	UnaryOperator	&		3912097	0					
ANR	3912136	CallExpression	CG ( filenames_table )		3912097	1					
ANR	3912137	Callee	CG		3912097	0					
ANR	3912138	Identifier	CG		3912097	0					
ANR	3912139	ArgumentList	filenames_table		3912097	1					
ANR	3912140	Argument	filenames_table		3912097	0					
ANR	3912141	Identifier	filenames_table		3912097	0					
ANR	3912142	ExpressionStatement	zend_hash_destroy ( & CG ( const_filenames ) )	333:1:9327:9366	3912097	3	True				
ANR	3912143	CallExpression	zend_hash_destroy ( & CG ( const_filenames ) )		3912097	0					
ANR	3912144	Callee	zend_hash_destroy		3912097	0					
ANR	3912145	Identifier	zend_hash_destroy		3912097	0					
ANR	3912146	ArgumentList	& CG ( const_filenames )		3912097	1					
ANR	3912147	Argument	& CG ( const_filenames )		3912097	0					
ANR	3912148	UnaryOperationExpression	& CG ( const_filenames )		3912097	0					
ANR	3912149	UnaryOperator	&		3912097	0					
ANR	3912150	CallExpression	CG ( const_filenames )		3912097	1					
ANR	3912151	Callee	CG		3912097	0					
ANR	3912152	Identifier	CG		3912097	0					
ANR	3912153	ArgumentList	const_filenames		3912097	1					
ANR	3912154	Argument	const_filenames		3912097	0					
ANR	3912155	Identifier	const_filenames		3912097	0					
ANR	3912156	ExpressionStatement	zend_arena_destroy ( CG ( arena ) )	334:1:9369:9398	3912097	4	True				
ANR	3912157	CallExpression	zend_arena_destroy ( CG ( arena ) )		3912097	0					
ANR	3912158	Callee	zend_arena_destroy		3912097	0					
ANR	3912159	Identifier	zend_arena_destroy		3912097	0					
ANR	3912160	ArgumentList	CG ( arena )		3912097	1					
ANR	3912161	Argument	CG ( arena )		3912097	0					
ANR	3912162	CallExpression	CG ( arena )		3912097	0					
ANR	3912163	Callee	CG		3912097	0					
ANR	3912164	Identifier	CG		3912097	0					
ANR	3912165	ArgumentList	arena		3912097	1					
ANR	3912166	Argument	arena		3912097	0					
ANR	3912167	Identifier	arena		3912097	0					
ANR	3912168	ReturnType	void		3912097	1					
ANR	3912169	Identifier	shutdown_compiler		3912097	2					
ANR	3912170	ParameterList			3912097	3					
ANR	3912171	CFGEntryNode	ENTRY		3912097		True				
ANR	3912172	CFGExitNode	EXIT		3912097		True				
ANR	3912173	Symbol	loop_var_stack		3912097						
ANR	3912174	Symbol	CG		3912097						
ANR	3912175	Symbol	const_filenames		3912097						
ANR	3912176	Symbol	filenames_table		3912097						
ANR	3912177	Symbol	delayed_oplines_stack		3912097						
ANR	3912178	Symbol	arena		3912097						
ANR	3912179	Symbol	& CG		3912097						
ANR	3912180	Function	zend_set_compiled_filename	338:0:9413:9896							
ANR	3912181	FunctionDef	zend_set_compiled_filename (zend_string * new_compiled_filename)		3912180	0					
ANR	3912182	CompoundStatement		339:0:9508:9896	3912180	0					
ANR	3912183	IdentifierDeclStatement	"zval * p , rv ;"	340:1:9511:9522	3912180	0	True				
ANR	3912184	IdentifierDecl	* p		3912180	0					
ANR	3912185	IdentifierDeclType	zval *		3912180	0					
ANR	3912186	Identifier	p		3912180	1					
ANR	3912187	IdentifierDecl	rv		3912180	1					
ANR	3912188	IdentifierDeclType	zval		3912180	0					
ANR	3912189	Identifier	rv		3912180	1					
ANR	3912190	IfStatement	"if ( ( p = zend_hash_find ( & CG ( filenames_table ) , new_compiled_filename ) ) )"		3912180	1					
ANR	3912191	Condition	"p = zend_hash_find ( & CG ( filenames_table ) , new_compiled_filename )"	342:5:9530:9594	3912180	0	True				
ANR	3912192	AssignmentExpression	"p = zend_hash_find ( & CG ( filenames_table ) , new_compiled_filename )"		3912180	0		=			
ANR	3912193	Identifier	p		3912180	0					
ANR	3912194	CallExpression	"zend_hash_find ( & CG ( filenames_table ) , new_compiled_filename )"		3912180	1					
ANR	3912195	Callee	zend_hash_find		3912180	0					
ANR	3912196	Identifier	zend_hash_find		3912180	0					
ANR	3912197	ArgumentList	& CG ( filenames_table )		3912180	1					
ANR	3912198	Argument	& CG ( filenames_table )		3912180	0					
ANR	3912199	UnaryOperationExpression	& CG ( filenames_table )		3912180	0					
ANR	3912200	UnaryOperator	&		3912180	0					
ANR	3912201	CallExpression	CG ( filenames_table )		3912180	1					
ANR	3912202	Callee	CG		3912180	0					
ANR	3912203	Identifier	CG		3912180	0					
ANR	3912204	ArgumentList	filenames_table		3912180	1					
ANR	3912205	Argument	filenames_table		3912180	0					
ANR	3912206	Identifier	filenames_table		3912180	0					
ANR	3912207	Argument	new_compiled_filename		3912180	1					
ANR	3912208	Identifier	new_compiled_filename		3912180	0					
ANR	3912209	CompoundStatement		4:72:88:88	3912180	1					
ANR	3912210	ExpressionStatement	ZEND_ASSERT ( Z_TYPE_P ( p ) == IS_STRING )	343:2:9601:9638	3912180	0	True				
ANR	3912211	CallExpression	ZEND_ASSERT ( Z_TYPE_P ( p ) == IS_STRING )		3912180	0					
ANR	3912212	Callee	ZEND_ASSERT		3912180	0					
ANR	3912213	Identifier	ZEND_ASSERT		3912180	0					
ANR	3912214	ArgumentList	Z_TYPE_P ( p ) == IS_STRING		3912180	1					
ANR	3912215	Argument	Z_TYPE_P ( p ) == IS_STRING		3912180	0					
ANR	3912216	EqualityExpression	Z_TYPE_P ( p ) == IS_STRING		3912180	0		==			
ANR	3912217	CallExpression	Z_TYPE_P ( p )		3912180	0					
ANR	3912218	Callee	Z_TYPE_P		3912180	0					
ANR	3912219	Identifier	Z_TYPE_P		3912180	0					
ANR	3912220	ArgumentList	p		3912180	1					
ANR	3912221	Argument	p		3912180	0					
ANR	3912222	Identifier	p		3912180	0					
ANR	3912223	Identifier	IS_STRING		3912180	1					
ANR	3912224	ExpressionStatement	CG ( compiled_filename ) = Z_STR_P ( p )	344:2:9642:9676	3912180	1	True				
ANR	3912225	AssignmentExpression	CG ( compiled_filename ) = Z_STR_P ( p )		3912180	0		=			
ANR	3912226	CallExpression	CG ( compiled_filename )		3912180	0					
ANR	3912227	Callee	CG		3912180	0					
ANR	3912228	Identifier	CG		3912180	0					
ANR	3912229	ArgumentList	compiled_filename		3912180	1					
ANR	3912230	Argument	compiled_filename		3912180	0					
ANR	3912231	Identifier	compiled_filename		3912180	0					
ANR	3912232	CallExpression	Z_STR_P ( p )		3912180	1					
ANR	3912233	Callee	Z_STR_P		3912180	0					
ANR	3912234	Identifier	Z_STR_P		3912180	0					
ANR	3912235	ArgumentList	p		3912180	1					
ANR	3912236	Argument	p		3912180	0					
ANR	3912237	Identifier	p		3912180	0					
ANR	3912238	ReturnStatement	return Z_STR_P ( p ) ;	345:2:9680:9697	3912180	2	True				
ANR	3912239	CallExpression	Z_STR_P ( p )		3912180	0					
ANR	3912240	Callee	Z_STR_P		3912180	0					
ANR	3912241	Identifier	Z_STR_P		3912180	0					
ANR	3912242	ArgumentList	p		3912180	1					
ANR	3912243	Argument	p		3912180	0					
ANR	3912244	Identifier	p		3912180	0					
ANR	3912245	ExpressionStatement	"ZVAL_STR_COPY ( & rv , new_compiled_filename )"	348:1:9704:9745	3912180	2	True				
ANR	3912246	CallExpression	"ZVAL_STR_COPY ( & rv , new_compiled_filename )"		3912180	0					
ANR	3912247	Callee	ZVAL_STR_COPY		3912180	0					
ANR	3912248	Identifier	ZVAL_STR_COPY		3912180	0					
ANR	3912249	ArgumentList	& rv		3912180	1					
ANR	3912250	Argument	& rv		3912180	0					
ANR	3912251	UnaryOperationExpression	& rv		3912180	0					
ANR	3912252	UnaryOperator	&		3912180	0					
ANR	3912253	Identifier	rv		3912180	1					
ANR	3912254	Argument	new_compiled_filename		3912180	1					
ANR	3912255	Identifier	new_compiled_filename		3912180	0					
ANR	3912256	ExpressionStatement	"zend_hash_update ( & CG ( filenames_table ) , new_compiled_filename , & rv )"	349:1:9748:9814	3912180	3	True				
ANR	3912257	CallExpression	"zend_hash_update ( & CG ( filenames_table ) , new_compiled_filename , & rv )"		3912180	0					
ANR	3912258	Callee	zend_hash_update		3912180	0					
ANR	3912259	Identifier	zend_hash_update		3912180	0					
ANR	3912260	ArgumentList	& CG ( filenames_table )		3912180	1					
ANR	3912261	Argument	& CG ( filenames_table )		3912180	0					
ANR	3912262	UnaryOperationExpression	& CG ( filenames_table )		3912180	0					
ANR	3912263	UnaryOperator	&		3912180	0					
ANR	3912264	CallExpression	CG ( filenames_table )		3912180	1					
ANR	3912265	Callee	CG		3912180	0					
ANR	3912266	Identifier	CG		3912180	0					
ANR	3912267	ArgumentList	filenames_table		3912180	1					
ANR	3912268	Argument	filenames_table		3912180	0					
ANR	3912269	Identifier	filenames_table		3912180	0					
ANR	3912270	Argument	new_compiled_filename		3912180	1					
ANR	3912271	Identifier	new_compiled_filename		3912180	0					
ANR	3912272	Argument	& rv		3912180	2					
ANR	3912273	UnaryOperationExpression	& rv		3912180	0					
ANR	3912274	UnaryOperator	&		3912180	0					
ANR	3912275	Identifier	rv		3912180	1					
ANR	3912276	ExpressionStatement	CG ( compiled_filename ) = new_compiled_filename	351:1:9818:9863	3912180	4	True				
ANR	3912277	AssignmentExpression	CG ( compiled_filename ) = new_compiled_filename		3912180	0		=			
ANR	3912278	CallExpression	CG ( compiled_filename )		3912180	0					
ANR	3912279	Callee	CG		3912180	0					
ANR	3912280	Identifier	CG		3912180	0					
ANR	3912281	ArgumentList	compiled_filename		3912180	1					
ANR	3912282	Argument	compiled_filename		3912180	0					
ANR	3912283	Identifier	compiled_filename		3912180	0					
ANR	3912284	Identifier	new_compiled_filename		3912180	1					
ANR	3912285	ReturnStatement	return new_compiled_filename ;	352:1:9866:9894	3912180	5	True				
ANR	3912286	Identifier	new_compiled_filename		3912180	0					
ANR	3912287	ReturnType	ZEND_API zend_string *		3912180	1					
ANR	3912288	Identifier	zend_set_compiled_filename		3912180	2					
ANR	3912289	ParameterList	zend_string * new_compiled_filename		3912180	3					
ANR	3912290	Parameter	zend_string * new_compiled_filename	338:49:9462:9495	3912180	0	True				
ANR	3912291	ParameterType	zend_string *		3912180	0					
ANR	3912292	Identifier	new_compiled_filename		3912180	1					
ANR	3912293	CFGEntryNode	ENTRY		3912180		True				
ANR	3912294	CFGExitNode	EXIT		3912180		True				
ANR	3912295	Symbol	p		3912180						
ANR	3912296	Symbol	zend_hash_find		3912180						
ANR	3912297	Symbol	rv		3912180						
ANR	3912298	Symbol	CG		3912180						
ANR	3912299	Symbol	new_compiled_filename		3912180						
ANR	3912300	Symbol	filenames_table		3912180						
ANR	3912301	Symbol	IS_STRING		3912180						
ANR	3912302	Symbol	Z_STR_P		3912180						
ANR	3912303	Symbol	Z_TYPE_P		3912180						
ANR	3912304	Symbol	compiled_filename		3912180						
ANR	3912305	Symbol	& CG		3912180						
ANR	3912306	Symbol	& rv		3912180						
ANR	3912307	Function	zend_restore_compiled_filename	356:0:9909:10060							
ANR	3912308	FunctionDef	zend_restore_compiled_filename (zend_string * original_compiled_filename)		3912307	0					
ANR	3912309	CompoundStatement		357:0:10005:10060	3912307	0					
ANR	3912310	ExpressionStatement	CG ( compiled_filename ) = original_compiled_filename	358:1:10008:10058	3912307	0	True				
ANR	3912311	AssignmentExpression	CG ( compiled_filename ) = original_compiled_filename		3912307	0		=			
ANR	3912312	CallExpression	CG ( compiled_filename )		3912307	0					
ANR	3912313	Callee	CG		3912307	0					
ANR	3912314	Identifier	CG		3912307	0					
ANR	3912315	ArgumentList	compiled_filename		3912307	1					
ANR	3912316	Argument	compiled_filename		3912307	0					
ANR	3912317	Identifier	compiled_filename		3912307	0					
ANR	3912318	Identifier	original_compiled_filename		3912307	1					
ANR	3912319	ReturnType	ZEND_API void		3912307	1					
ANR	3912320	Identifier	zend_restore_compiled_filename		3912307	2					
ANR	3912321	ParameterList	zend_string * original_compiled_filename		3912307	3					
ANR	3912322	Parameter	zend_string * original_compiled_filename	356:45:9954:9992	3912307	0	True				
ANR	3912323	ParameterType	zend_string *		3912307	0					
ANR	3912324	Identifier	original_compiled_filename		3912307	1					
ANR	3912325	CFGEntryNode	ENTRY		3912307		True				
ANR	3912326	CFGExitNode	EXIT		3912307		True				
ANR	3912327	Symbol	original_compiled_filename		3912307						
ANR	3912328	Symbol	CG		3912307						
ANR	3912329	Symbol	compiled_filename		3912307						
ANR	3912330	Function	zend_get_compiled_filename	362:0:10073:10171							
ANR	3912331	FunctionDef	zend_get_compiled_filename ()		3912330	0					
ANR	3912332	CompoundStatement		363:0:10138:10171	3912330	0					
ANR	3912333	ReturnStatement	return CG ( compiled_filename ) ;	364:1:10141:10169	3912330	0	True				
ANR	3912334	CallExpression	CG ( compiled_filename )		3912330	0					
ANR	3912335	Callee	CG		3912330	0					
ANR	3912336	Identifier	CG		3912330	0					
ANR	3912337	ArgumentList	compiled_filename		3912330	1					
ANR	3912338	Argument	compiled_filename		3912330	0					
ANR	3912339	Identifier	compiled_filename		3912330	0					
ANR	3912340	ReturnType	ZEND_API zend_string *		3912330	1					
ANR	3912341	Identifier	zend_get_compiled_filename		3912330	2					
ANR	3912342	ParameterList			3912330	3					
ANR	3912343	CFGEntryNode	ENTRY		3912330		True				
ANR	3912344	CFGExitNode	EXIT		3912330		True				
ANR	3912345	Symbol	CG		3912330						
ANR	3912346	Symbol	compiled_filename		3912330						
ANR	3912347	Function	zend_get_compiled_lineno	368:0:10184:10265							
ANR	3912348	FunctionDef	zend_get_compiled_lineno ()		3912347	0					
ANR	3912349	CompoundStatement		369:0:10238:10265	3912347	0					
ANR	3912350	ReturnStatement	return CG ( zend_lineno ) ;	370:1:10241:10263	3912347	0	True				
ANR	3912351	CallExpression	CG ( zend_lineno )		3912347	0					
ANR	3912352	Callee	CG		3912347	0					
ANR	3912353	Identifier	CG		3912347	0					
ANR	3912354	ArgumentList	zend_lineno		3912347	1					
ANR	3912355	Argument	zend_lineno		3912347	0					
ANR	3912356	Identifier	zend_lineno		3912347	0					
ANR	3912357	ReturnType	ZEND_API int		3912347	1					
ANR	3912358	Identifier	zend_get_compiled_lineno		3912347	2					
ANR	3912359	ParameterList			3912347	3					
ANR	3912360	CFGEntryNode	ENTRY		3912347		True				
ANR	3912361	CFGExitNode	EXIT		3912347		True				
ANR	3912362	Symbol	CG		3912347						
ANR	3912363	Symbol	zend_lineno		3912347						
ANR	3912364	Function	zend_is_compiling	374:0:10278:10361							
ANR	3912365	FunctionDef	zend_is_compiling ()		3912364	0					
ANR	3912366	CompoundStatement		375:0:10331:10361	3912364	0					
ANR	3912367	ReturnStatement	return CG ( in_compilation ) ;	376:1:10334:10359	3912364	0	True				
ANR	3912368	CallExpression	CG ( in_compilation )		3912364	0					
ANR	3912369	Callee	CG		3912364	0					
ANR	3912370	Identifier	CG		3912364	0					
ANR	3912371	ArgumentList	in_compilation		3912364	1					
ANR	3912372	Argument	in_compilation		3912364	0					
ANR	3912373	Identifier	in_compilation		3912364	0					
ANR	3912374	ReturnType	ZEND_API zend_bool		3912364	1					
ANR	3912375	Identifier	zend_is_compiling		3912364	2					
ANR	3912376	ParameterList			3912364	3					
ANR	3912377	CFGEntryNode	ENTRY		3912364		True				
ANR	3912378	CFGExitNode	EXIT		3912364		True				
ANR	3912379	Symbol	CG		3912364						
ANR	3912380	Symbol	in_compilation		3912364						
ANR	3912381	Function	get_temporary_variable	380:0:10374:10483							
ANR	3912382	FunctionDef	get_temporary_variable (zend_op_array * op_array)		3912381	0					
ANR	3912383	CompoundStatement		381:0:10448:10483	3912381	0					
ANR	3912384	ReturnStatement	return ( uint32_t ) op_array -> T ++ ;	382:1:10451:10481	3912381	0	True				
ANR	3912385	CastExpression	( uint32_t ) op_array -> T ++		3912381	0					
ANR	3912386	CastTarget	uint32_t		3912381	0					
ANR	3912387	PostIncDecOperationExpression	op_array -> T ++		3912381	1					
ANR	3912388	PtrMemberAccess	op_array -> T		3912381	0					
ANR	3912389	Identifier	op_array		3912381	0					
ANR	3912390	Identifier	T		3912381	1					
ANR	3912391	IncDec	++		3912381	1					
ANR	3912392	ReturnType	static uint32_t		3912381	1					
ANR	3912393	Identifier	get_temporary_variable		3912381	2					
ANR	3912394	ParameterList	zend_op_array * op_array		3912381	3					
ANR	3912395	Parameter	zend_op_array * op_array	380:39:10413:10435	3912381	0	True				
ANR	3912396	ParameterType	zend_op_array *		3912381	0					
ANR	3912397	Identifier	op_array		3912381	1					
ANR	3912398	CFGEntryNode	ENTRY		3912381		True				
ANR	3912399	CFGExitNode	EXIT		3912381		True				
ANR	3912400	Symbol	op_array -> T		3912381						
ANR	3912401	Symbol	op_array		3912381						
ANR	3912402	Symbol	* op_array		3912381						
ANR	3912403	Function	lookup_cv	386:0:10496:11365							
ANR	3912404	FunctionDef	"lookup_cv (zend_op_array * op_array , zend_string * name)"		3912403	0					
ANR	3912405	CompoundStatement		386:74:10570:11365	3912403	0					
ANR	3912406	IdentifierDeclStatement	int i = 0 ;	387:1:10573:10582	3912403	0	True				
ANR	3912407	IdentifierDecl	i = 0		3912403	0					
ANR	3912408	IdentifierDeclType	int		3912403	0					
ANR	3912409	Identifier	i		3912403	1					
ANR	3912410	AssignmentExpression	i = 0		3912403	2		=			
ANR	3912411	Identifier	i		3912403	0					
ANR	3912412	PrimaryExpression	0		3912403	1					
ANR	3912413	IdentifierDeclStatement	zend_ulong hash_value = zend_string_hash_val ( name ) ;	388:1:10585:10635	3912403	1	True				
ANR	3912414	IdentifierDecl	hash_value = zend_string_hash_val ( name )		3912403	0					
ANR	3912415	IdentifierDeclType	zend_ulong		3912403	0					
ANR	3912416	Identifier	hash_value		3912403	1					
ANR	3912417	AssignmentExpression	hash_value = zend_string_hash_val ( name )		3912403	2		=			
ANR	3912418	Identifier	hash_value		3912403	0					
ANR	3912419	CallExpression	zend_string_hash_val ( name )		3912403	1					
ANR	3912420	Callee	zend_string_hash_val		3912403	0					
ANR	3912421	Identifier	zend_string_hash_val		3912403	0					
ANR	3912422	ArgumentList	name		3912403	1					
ANR	3912423	Argument	name		3912403	0					
ANR	3912424	Identifier	name		3912403	0					
ANR	3912425	WhileStatement	while ( i < op_array -> last_var )		3912403	2					
ANR	3912426	Condition	i < op_array -> last_var	390:8:10646:10667	3912403	0	True				
ANR	3912427	RelationalExpression	i < op_array -> last_var		3912403	0		<			
ANR	3912428	Identifier	i		3912403	0					
ANR	3912429	PtrMemberAccess	op_array -> last_var		3912403	1					
ANR	3912430	Identifier	op_array		3912403	0					
ANR	3912431	Identifier	last_var		3912403	1					
ANR	3912432	CompoundStatement		5:32:99:99	3912403	1					
ANR	3912433	IfStatement	"if ( ZSTR_VAL ( op_array -> vars [ i ] ) == ZSTR_VAL ( name ) || ( ZSTR_H ( op_array -> vars [ i ] ) == hash_value && ZSTR_LEN ( op_array -> vars [ i ] ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( op_array -> vars [ i ] ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0 ) )"		3912403	0					
ANR	3912434	Condition	"ZSTR_VAL ( op_array -> vars [ i ] ) == ZSTR_VAL ( name ) || ( ZSTR_H ( op_array -> vars [ i ] ) == hash_value && ZSTR_LEN ( op_array -> vars [ i ] ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( op_array -> vars [ i ] ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0 )"	391:6:10678:10912	3912403	0	True				
ANR	3912435	OrExpression	"ZSTR_VAL ( op_array -> vars [ i ] ) == ZSTR_VAL ( name ) || ( ZSTR_H ( op_array -> vars [ i ] ) == hash_value && ZSTR_LEN ( op_array -> vars [ i ] ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( op_array -> vars [ i ] ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0 )"		3912403	0		||			
ANR	3912436	EqualityExpression	ZSTR_VAL ( op_array -> vars [ i ] ) == ZSTR_VAL ( name )		3912403	0		==			
ANR	3912437	CallExpression	ZSTR_VAL ( op_array -> vars [ i ] )		3912403	0					
ANR	3912438	Callee	ZSTR_VAL		3912403	0					
ANR	3912439	Identifier	ZSTR_VAL		3912403	0					
ANR	3912440	ArgumentList	op_array -> vars [ i ]		3912403	1					
ANR	3912441	Argument	op_array -> vars [ i ]		3912403	0					
ANR	3912442	ArrayIndexing	op_array -> vars [ i ]		3912403	0					
ANR	3912443	PtrMemberAccess	op_array -> vars		3912403	0					
ANR	3912444	Identifier	op_array		3912403	0					
ANR	3912445	Identifier	vars		3912403	1					
ANR	3912446	Identifier	i		3912403	1					
ANR	3912447	CallExpression	ZSTR_VAL ( name )		3912403	1					
ANR	3912448	Callee	ZSTR_VAL		3912403	0					
ANR	3912449	Identifier	ZSTR_VAL		3912403	0					
ANR	3912450	ArgumentList	name		3912403	1					
ANR	3912451	Argument	name		3912403	0					
ANR	3912452	Identifier	name		3912403	0					
ANR	3912453	AndExpression	"ZSTR_H ( op_array -> vars [ i ] ) == hash_value && ZSTR_LEN ( op_array -> vars [ i ] ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( op_array -> vars [ i ] ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		3912403	1		&&			
ANR	3912454	EqualityExpression	ZSTR_H ( op_array -> vars [ i ] ) == hash_value		3912403	0		==			
ANR	3912455	CallExpression	ZSTR_H ( op_array -> vars [ i ] )		3912403	0					
ANR	3912456	Callee	ZSTR_H		3912403	0					
ANR	3912457	Identifier	ZSTR_H		3912403	0					
ANR	3912458	ArgumentList	op_array -> vars [ i ]		3912403	1					
ANR	3912459	Argument	op_array -> vars [ i ]		3912403	0					
ANR	3912460	ArrayIndexing	op_array -> vars [ i ]		3912403	0					
ANR	3912461	PtrMemberAccess	op_array -> vars		3912403	0					
ANR	3912462	Identifier	op_array		3912403	0					
ANR	3912463	Identifier	vars		3912403	1					
ANR	3912464	Identifier	i		3912403	1					
ANR	3912465	Identifier	hash_value		3912403	1					
ANR	3912466	AndExpression	"ZSTR_LEN ( op_array -> vars [ i ] ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( op_array -> vars [ i ] ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		3912403	1		&&			
ANR	3912467	EqualityExpression	ZSTR_LEN ( op_array -> vars [ i ] ) == ZSTR_LEN ( name )		3912403	0		==			
ANR	3912468	CallExpression	ZSTR_LEN ( op_array -> vars [ i ] )		3912403	0					
ANR	3912469	Callee	ZSTR_LEN		3912403	0					
ANR	3912470	Identifier	ZSTR_LEN		3912403	0					
ANR	3912471	ArgumentList	op_array -> vars [ i ]		3912403	1					
ANR	3912472	Argument	op_array -> vars [ i ]		3912403	0					
ANR	3912473	ArrayIndexing	op_array -> vars [ i ]		3912403	0					
ANR	3912474	PtrMemberAccess	op_array -> vars		3912403	0					
ANR	3912475	Identifier	op_array		3912403	0					
ANR	3912476	Identifier	vars		3912403	1					
ANR	3912477	Identifier	i		3912403	1					
ANR	3912478	CallExpression	ZSTR_LEN ( name )		3912403	1					
ANR	3912479	Callee	ZSTR_LEN		3912403	0					
ANR	3912480	Identifier	ZSTR_LEN		3912403	0					
ANR	3912481	ArgumentList	name		3912403	1					
ANR	3912482	Argument	name		3912403	0					
ANR	3912483	Identifier	name		3912403	0					
ANR	3912484	EqualityExpression	"memcmp ( ZSTR_VAL ( op_array -> vars [ i ] ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		3912403	1		==			
ANR	3912485	CallExpression	"memcmp ( ZSTR_VAL ( op_array -> vars [ i ] ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3912403	0					
ANR	3912486	Callee	memcmp		3912403	0					
ANR	3912487	Identifier	memcmp		3912403	0					
ANR	3912488	ArgumentList	ZSTR_VAL ( op_array -> vars [ i ] )		3912403	1					
ANR	3912489	Argument	ZSTR_VAL ( op_array -> vars [ i ] )		3912403	0					
ANR	3912490	CallExpression	ZSTR_VAL ( op_array -> vars [ i ] )		3912403	0					
ANR	3912491	Callee	ZSTR_VAL		3912403	0					
ANR	3912492	Identifier	ZSTR_VAL		3912403	0					
ANR	3912493	ArgumentList	op_array -> vars [ i ]		3912403	1					
ANR	3912494	Argument	op_array -> vars [ i ]		3912403	0					
ANR	3912495	ArrayIndexing	op_array -> vars [ i ]		3912403	0					
ANR	3912496	PtrMemberAccess	op_array -> vars		3912403	0					
ANR	3912497	Identifier	op_array		3912403	0					
ANR	3912498	Identifier	vars		3912403	1					
ANR	3912499	Identifier	i		3912403	1					
ANR	3912500	Argument	ZSTR_VAL ( name )		3912403	1					
ANR	3912501	CallExpression	ZSTR_VAL ( name )		3912403	0					
ANR	3912502	Callee	ZSTR_VAL		3912403	0					
ANR	3912503	Identifier	ZSTR_VAL		3912403	0					
ANR	3912504	ArgumentList	name		3912403	1					
ANR	3912505	Argument	name		3912403	0					
ANR	3912506	Identifier	name		3912403	0					
ANR	3912507	Argument	ZSTR_LEN ( name )		3912403	2					
ANR	3912508	CallExpression	ZSTR_LEN ( name )		3912403	0					
ANR	3912509	Callee	ZSTR_LEN		3912403	0					
ANR	3912510	Identifier	ZSTR_LEN		3912403	0					
ANR	3912511	ArgumentList	name		3912403	1					
ANR	3912512	Argument	name		3912403	0					
ANR	3912513	Identifier	name		3912403	0					
ANR	3912514	PrimaryExpression	0		3912403	1					
ANR	3912515	CompoundStatement		9:82:344:344	3912403	1					
ANR	3912516	ExpressionStatement	zend_string_release ( name )	395:3:10920:10945	3912403	0	True				
ANR	3912517	CallExpression	zend_string_release ( name )		3912403	0					
ANR	3912518	Callee	zend_string_release		3912403	0					
ANR	3912519	Identifier	zend_string_release		3912403	0					
ANR	3912520	ArgumentList	name		3912403	1					
ANR	3912521	Argument	name		3912403	0					
ANR	3912522	Identifier	name		3912403	0					
ANR	3912523	ReturnStatement	"return ( int ) ( zend_intptr_t ) ZEND_CALL_VAR_NUM ( NULL , i ) ;"	396:3:10950:11003	3912403	1	True				
ANR	3912524	CastExpression	"( int ) ( zend_intptr_t ) ZEND_CALL_VAR_NUM ( NULL , i )"		3912403	0					
ANR	3912525	CastTarget	int		3912403	0					
ANR	3912526	CastExpression	"( zend_intptr_t ) ZEND_CALL_VAR_NUM ( NULL , i )"		3912403	1					
ANR	3912527	CastTarget	zend_intptr_t		3912403	0					
ANR	3912528	CallExpression	"ZEND_CALL_VAR_NUM ( NULL , i )"		3912403	1					
ANR	3912529	Callee	ZEND_CALL_VAR_NUM		3912403	0					
ANR	3912530	Identifier	ZEND_CALL_VAR_NUM		3912403	0					
ANR	3912531	ArgumentList	NULL		3912403	1					
ANR	3912532	Argument	NULL		3912403	0					
ANR	3912533	Identifier	NULL		3912403	0					
ANR	3912534	Argument	i		3912403	1					
ANR	3912535	Identifier	i		3912403	0					
ANR	3912536	ExpressionStatement	i ++	398:2:11011:11014	3912403	1	True				
ANR	3912537	PostIncDecOperationExpression	i ++		3912403	0					
ANR	3912538	Identifier	i		3912403	0					
ANR	3912539	IncDec	++		3912403	1					
ANR	3912540	ExpressionStatement	i = op_array -> last_var	400:1:11020:11042	3912403	3	True				
ANR	3912541	AssignmentExpression	i = op_array -> last_var		3912403	0		=			
ANR	3912542	Identifier	i		3912403	0					
ANR	3912543	PtrMemberAccess	op_array -> last_var		3912403	1					
ANR	3912544	Identifier	op_array		3912403	0					
ANR	3912545	Identifier	last_var		3912403	1					
ANR	3912546	ExpressionStatement	op_array -> last_var ++	401:1:11045:11065	3912403	4	True				
ANR	3912547	PostIncDecOperationExpression	op_array -> last_var ++		3912403	0					
ANR	3912548	PtrMemberAccess	op_array -> last_var		3912403	0					
ANR	3912549	Identifier	op_array		3912403	0					
ANR	3912550	Identifier	last_var		3912403	1					
ANR	3912551	IncDec	++		3912403	1					
ANR	3912552	IfStatement	if ( op_array -> last_var > CG ( context ) . vars_size )		3912403	5					
ANR	3912553	Condition	op_array -> last_var > CG ( context ) . vars_size	402:5:11072:11113	3912403	0	True				
ANR	3912554	RelationalExpression	op_array -> last_var > CG ( context ) . vars_size		3912403	0		>			
ANR	3912555	PtrMemberAccess	op_array -> last_var		3912403	0					
ANR	3912556	Identifier	op_array		3912403	0					
ANR	3912557	Identifier	last_var		3912403	1					
ANR	3912558	MemberAccess	CG ( context ) . vars_size		3912403	1					
ANR	3912559	CallExpression	CG ( context )		3912403	0					
ANR	3912560	Callee	CG		3912403	0					
ANR	3912561	Identifier	CG		3912403	0					
ANR	3912562	ArgumentList	context		3912403	1					
ANR	3912563	Argument	context		3912403	0					
ANR	3912564	Identifier	context		3912403	0					
ANR	3912565	Identifier	vars_size		3912403	1					
ANR	3912566	CompoundStatement		17:49:545:545	3912403	1					
ANR	3912567	ExpressionStatement	CG ( context ) . vars_size += 16	403:2:11120:11147	3912403	0	True				
ANR	3912568	AssignmentExpression	CG ( context ) . vars_size += 16		3912403	0		+=			
ANR	3912569	MemberAccess	CG ( context ) . vars_size		3912403	0					
ANR	3912570	CallExpression	CG ( context )		3912403	0					
ANR	3912571	Callee	CG		3912403	0					
ANR	3912572	Identifier	CG		3912403	0					
ANR	3912573	ArgumentList	context		3912403	1					
ANR	3912574	Argument	context		3912403	0					
ANR	3912575	Identifier	context		3912403	0					
ANR	3912576	Identifier	vars_size		3912403	1					
ANR	3912577	PrimaryExpression	16		3912403	1					
ANR	3912578	ExpressionStatement	"op_array -> vars = erealloc ( op_array -> vars , CG ( context ) . vars_size * sizeof ( zend_string * ) )"	404:2:11163:11250	3912403	1	True				
ANR	3912579	AssignmentExpression	"op_array -> vars = erealloc ( op_array -> vars , CG ( context ) . vars_size * sizeof ( zend_string * ) )"		3912403	0		=			
ANR	3912580	PtrMemberAccess	op_array -> vars		3912403	0					
ANR	3912581	Identifier	op_array		3912403	0					
ANR	3912582	Identifier	vars		3912403	1					
ANR	3912583	CallExpression	"erealloc ( op_array -> vars , CG ( context ) . vars_size * sizeof ( zend_string * ) )"		3912403	1					
ANR	3912584	Callee	erealloc		3912403	0					
ANR	3912585	Identifier	erealloc		3912403	0					
ANR	3912586	ArgumentList	op_array -> vars		3912403	1					
ANR	3912587	Argument	op_array -> vars		3912403	0					
ANR	3912588	PtrMemberAccess	op_array -> vars		3912403	0					
ANR	3912589	Identifier	op_array		3912403	0					
ANR	3912590	Identifier	vars		3912403	1					
ANR	3912591	Argument	CG ( context ) . vars_size * sizeof ( zend_string * )		3912403	1					
ANR	3912592	MultiplicativeExpression	CG ( context ) . vars_size * sizeof ( zend_string * )		3912403	0		*			
ANR	3912593	MemberAccess	CG ( context ) . vars_size		3912403	0					
ANR	3912594	CallExpression	CG ( context )		3912403	0					
ANR	3912595	Callee	CG		3912403	0					
ANR	3912596	Identifier	CG		3912403	0					
ANR	3912597	ArgumentList	context		3912403	1					
ANR	3912598	Argument	context		3912403	0					
ANR	3912599	Identifier	context		3912403	0					
ANR	3912600	Identifier	vars_size		3912403	1					
ANR	3912601	SizeofExpression	sizeof ( zend_string * )		3912403	1					
ANR	3912602	Sizeof	sizeof		3912403	0					
ANR	3912603	SizeofOperand	zend_string *		3912403	1					
ANR	3912604	ExpressionStatement	op_array -> vars [ i ] = zend_new_interned_string ( name )	407:1:11257:11307	3912403	6	True				
ANR	3912605	AssignmentExpression	op_array -> vars [ i ] = zend_new_interned_string ( name )		3912403	0		=			
ANR	3912606	ArrayIndexing	op_array -> vars [ i ]		3912403	0					
ANR	3912607	PtrMemberAccess	op_array -> vars		3912403	0					
ANR	3912608	Identifier	op_array		3912403	0					
ANR	3912609	Identifier	vars		3912403	1					
ANR	3912610	Identifier	i		3912403	1					
ANR	3912611	CallExpression	zend_new_interned_string ( name )		3912403	1					
ANR	3912612	Callee	zend_new_interned_string		3912403	0					
ANR	3912613	Identifier	zend_new_interned_string		3912403	0					
ANR	3912614	ArgumentList	name		3912403	1					
ANR	3912615	Argument	name		3912403	0					
ANR	3912616	Identifier	name		3912403	0					
ANR	3912617	ReturnStatement	"return ( int ) ( zend_intptr_t ) ZEND_CALL_VAR_NUM ( NULL , i ) ;"	408:1:11310:11363	3912403	7	True				
ANR	3912618	CastExpression	"( int ) ( zend_intptr_t ) ZEND_CALL_VAR_NUM ( NULL , i )"		3912403	0					
ANR	3912619	CastTarget	int		3912403	0					
ANR	3912620	CastExpression	"( zend_intptr_t ) ZEND_CALL_VAR_NUM ( NULL , i )"		3912403	1					
ANR	3912621	CastTarget	zend_intptr_t		3912403	0					
ANR	3912622	CallExpression	"ZEND_CALL_VAR_NUM ( NULL , i )"		3912403	1					
ANR	3912623	Callee	ZEND_CALL_VAR_NUM		3912403	0					
ANR	3912624	Identifier	ZEND_CALL_VAR_NUM		3912403	0					
ANR	3912625	ArgumentList	NULL		3912403	1					
ANR	3912626	Argument	NULL		3912403	0					
ANR	3912627	Identifier	NULL		3912403	0					
ANR	3912628	Argument	i		3912403	1					
ANR	3912629	Identifier	i		3912403	0					
ANR	3912630	ReturnType	static int		3912403	1					
ANR	3912631	Identifier	lookup_cv		3912403	2					
ANR	3912632	ParameterList	"zend_op_array * op_array , zend_string * name"		3912403	3					
ANR	3912633	Parameter	zend_op_array * op_array	386:21:10517:10539	3912403	0	True				
ANR	3912634	ParameterType	zend_op_array *		3912403	0					
ANR	3912635	Identifier	op_array		3912403	1					
ANR	3912636	Parameter	zend_string * name	386:46:10542:10558	3912403	1	True				
ANR	3912637	ParameterType	zend_string *		3912403	0					
ANR	3912638	Identifier	name		3912403	1					
ANR	3912639	CFGEntryNode	ENTRY		3912403		True				
ANR	3912640	CFGExitNode	EXIT		3912403		True				
ANR	3912641	Symbol	CG ( context ) . vars_size		3912403						
ANR	3912642	Symbol	op_array -> vars		3912403						
ANR	3912643	Symbol	NULL		3912403						
ANR	3912644	Symbol	CG		3912403						
ANR	3912645	Symbol	op_array -> last_var		3912403						
ANR	3912646	Symbol	i		3912403						
ANR	3912647	Symbol	ZSTR_H		3912403						
ANR	3912648	Symbol	* op_array		3912403						
ANR	3912649	Symbol	ZSTR_VAL		3912403						
ANR	3912650	Symbol	* op_array -> vars		3912403						
ANR	3912651	Symbol	* i		3912403						
ANR	3912652	Symbol	memcmp		3912403						
ANR	3912653	Symbol	zend_new_interned_string		3912403						
ANR	3912654	Symbol	ZEND_CALL_VAR_NUM		3912403						
ANR	3912655	Symbol	name		3912403						
ANR	3912656	Symbol	ZSTR_LEN		3912403						
ANR	3912657	Symbol	context		3912403						
ANR	3912658	Symbol	zend_string_hash_val		3912403						
ANR	3912659	Symbol	hash_value		3912403						
ANR	3912660	Symbol	* * op_array		3912403						
ANR	3912661	Symbol	erealloc		3912403						
ANR	3912662	Symbol	op_array		3912403						
ANR	3912663	Function	zend_del_literal	412:0:11378:11609							
ANR	3912664	FunctionDef	"zend_del_literal (zend_op_array * op_array , int n)"		3912663	0					
ANR	3912665	CompoundStatement		413:0:11442:11609	3912663	0					
ANR	3912666	ExpressionStatement	"zval_dtor ( CT_CONSTANT_EX ( op_array , n ) )"	414:1:11445:11483	3912663	0	True				
ANR	3912667	CallExpression	"zval_dtor ( CT_CONSTANT_EX ( op_array , n ) )"		3912663	0					
ANR	3912668	Callee	zval_dtor		3912663	0					
ANR	3912669	Identifier	zval_dtor		3912663	0					
ANR	3912670	ArgumentList	"CT_CONSTANT_EX ( op_array , n )"		3912663	1					
ANR	3912671	Argument	"CT_CONSTANT_EX ( op_array , n )"		3912663	0					
ANR	3912672	CallExpression	"CT_CONSTANT_EX ( op_array , n )"		3912663	0					
ANR	3912673	Callee	CT_CONSTANT_EX		3912663	0					
ANR	3912674	Identifier	CT_CONSTANT_EX		3912663	0					
ANR	3912675	ArgumentList	op_array		3912663	1					
ANR	3912676	Argument	op_array		3912663	0					
ANR	3912677	Identifier	op_array		3912663	0					
ANR	3912678	Argument	n		3912663	1					
ANR	3912679	Identifier	n		3912663	0					
ANR	3912680	IfStatement	if ( n + 1 == op_array -> last_literal )		3912663	1					
ANR	3912681	Condition	n + 1 == op_array -> last_literal	415:5:11490:11520	3912663	0	True				
ANR	3912682	EqualityExpression	n + 1 == op_array -> last_literal		3912663	0		==			
ANR	3912683	AdditiveExpression	n + 1		3912663	0		+			
ANR	3912684	Identifier	n		3912663	0					
ANR	3912685	PrimaryExpression	1		3912663	1					
ANR	3912686	PtrMemberAccess	op_array -> last_literal		3912663	1					
ANR	3912687	Identifier	op_array		3912663	0					
ANR	3912688	Identifier	last_literal		3912663	1					
ANR	3912689	CompoundStatement		3:38:80:80	3912663	1					
ANR	3912690	ExpressionStatement	op_array -> last_literal --	416:2:11527:11551	3912663	0	True				
ANR	3912691	PostIncDecOperationExpression	op_array -> last_literal --		3912663	0					
ANR	3912692	PtrMemberAccess	op_array -> last_literal		3912663	0					
ANR	3912693	Identifier	op_array		3912663	0					
ANR	3912694	Identifier	last_literal		3912663	1					
ANR	3912695	IncDec	--		3912663	1					
ANR	3912696	ElseStatement	else		3912663	0					
ANR	3912697	CompoundStatement		5:8:118:118	3912663	0					
ANR	3912698	ExpressionStatement	"ZVAL_UNDEF ( CT_CONSTANT_EX ( op_array , n ) )"	418:2:11565:11604	3912663	0	True				
ANR	3912699	CallExpression	"ZVAL_UNDEF ( CT_CONSTANT_EX ( op_array , n ) )"		3912663	0					
ANR	3912700	Callee	ZVAL_UNDEF		3912663	0					
ANR	3912701	Identifier	ZVAL_UNDEF		3912663	0					
ANR	3912702	ArgumentList	"CT_CONSTANT_EX ( op_array , n )"		3912663	1					
ANR	3912703	Argument	"CT_CONSTANT_EX ( op_array , n )"		3912663	0					
ANR	3912704	CallExpression	"CT_CONSTANT_EX ( op_array , n )"		3912663	0					
ANR	3912705	Callee	CT_CONSTANT_EX		3912663	0					
ANR	3912706	Identifier	CT_CONSTANT_EX		3912663	0					
ANR	3912707	ArgumentList	op_array		3912663	1					
ANR	3912708	Argument	op_array		3912663	0					
ANR	3912709	Identifier	op_array		3912663	0					
ANR	3912710	Argument	n		3912663	1					
ANR	3912711	Identifier	n		3912663	0					
ANR	3912712	ReturnType	void		3912663	1					
ANR	3912713	Identifier	zend_del_literal		3912663	2					
ANR	3912714	ParameterList	"zend_op_array * op_array , int n"		3912663	3					
ANR	3912715	Parameter	zend_op_array * op_array	412:22:11400:11422	3912663	0	True				
ANR	3912716	ParameterType	zend_op_array *		3912663	0					
ANR	3912717	Identifier	op_array		3912663	1					
ANR	3912718	Parameter	int n	412:47:11425:11429	3912663	1	True				
ANR	3912719	ParameterType	int		3912663	0					
ANR	3912720	Identifier	n		3912663	1					
ANR	3912721	CFGEntryNode	ENTRY		3912663		True				
ANR	3912722	CFGExitNode	EXIT		3912663		True				
ANR	3912723	Symbol	op_array -> last_literal		3912663						
ANR	3912724	Symbol	op_array		3912663						
ANR	3912725	Symbol	n		3912663						
ANR	3912726	Symbol	* op_array		3912663						
ANR	3912727	Symbol	CT_CONSTANT_EX		3912663						
ANR	3912728	Function	zend_insert_literal	424:0:11695:12198							
ANR	3912729	FunctionDef	"zend_insert_literal (zend_op_array * op_array , zval * zv , int literal_position)"		3912728	0					
ANR	3912730	CompoundStatement		425:0:11801:12198	3912728	0					
ANR	3912731	IfStatement	if ( Z_TYPE_P ( zv ) == IS_STRING || Z_TYPE_P ( zv ) == IS_CONSTANT )		3912728	0					
ANR	3912732	Condition	Z_TYPE_P ( zv ) == IS_STRING || Z_TYPE_P ( zv ) == IS_CONSTANT	426:5:11808:11863	3912728	0	True				
ANR	3912733	OrExpression	Z_TYPE_P ( zv ) == IS_STRING || Z_TYPE_P ( zv ) == IS_CONSTANT		3912728	0		||			
ANR	3912734	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		3912728	0		==			
ANR	3912735	CallExpression	Z_TYPE_P ( zv )		3912728	0					
ANR	3912736	Callee	Z_TYPE_P		3912728	0					
ANR	3912737	Identifier	Z_TYPE_P		3912728	0					
ANR	3912738	ArgumentList	zv		3912728	1					
ANR	3912739	Argument	zv		3912728	0					
ANR	3912740	Identifier	zv		3912728	0					
ANR	3912741	Identifier	IS_STRING		3912728	1					
ANR	3912742	EqualityExpression	Z_TYPE_P ( zv ) == IS_CONSTANT		3912728	1		==			
ANR	3912743	CallExpression	Z_TYPE_P ( zv )		3912728	0					
ANR	3912744	Callee	Z_TYPE_P		3912728	0					
ANR	3912745	Identifier	Z_TYPE_P		3912728	0					
ANR	3912746	ArgumentList	zv		3912728	1					
ANR	3912747	Argument	zv		3912728	0					
ANR	3912748	Identifier	zv		3912728	0					
ANR	3912749	Identifier	IS_CONSTANT		3912728	1					
ANR	3912750	CompoundStatement		2:63:64:64	3912728	1					
ANR	3912751	ExpressionStatement	zend_string_hash_val ( Z_STR_P ( zv ) )	427:2:11870:11903	3912728	0	True				
ANR	3912752	CallExpression	zend_string_hash_val ( Z_STR_P ( zv ) )		3912728	0					
ANR	3912753	Callee	zend_string_hash_val		3912728	0					
ANR	3912754	Identifier	zend_string_hash_val		3912728	0					
ANR	3912755	ArgumentList	Z_STR_P ( zv )		3912728	1					
ANR	3912756	Argument	Z_STR_P ( zv )		3912728	0					
ANR	3912757	CallExpression	Z_STR_P ( zv )		3912728	0					
ANR	3912758	Callee	Z_STR_P		3912728	0					
ANR	3912759	Identifier	Z_STR_P		3912728	0					
ANR	3912760	ArgumentList	zv		3912728	1					
ANR	3912761	Argument	zv		3912728	0					
ANR	3912762	Identifier	zv		3912728	0					
ANR	3912763	ExpressionStatement	Z_STR_P ( zv ) = zend_new_interned_string ( Z_STR_P ( zv ) )	428:2:11907:11958	3912728	1	True				
ANR	3912764	AssignmentExpression	Z_STR_P ( zv ) = zend_new_interned_string ( Z_STR_P ( zv ) )		3912728	0		=			
ANR	3912765	CallExpression	Z_STR_P ( zv )		3912728	0					
ANR	3912766	Callee	Z_STR_P		3912728	0					
ANR	3912767	Identifier	Z_STR_P		3912728	0					
ANR	3912768	ArgumentList	zv		3912728	1					
ANR	3912769	Argument	zv		3912728	0					
ANR	3912770	Identifier	zv		3912728	0					
ANR	3912771	CallExpression	zend_new_interned_string ( Z_STR_P ( zv ) )		3912728	1					
ANR	3912772	Callee	zend_new_interned_string		3912728	0					
ANR	3912773	Identifier	zend_new_interned_string		3912728	0					
ANR	3912774	ArgumentList	Z_STR_P ( zv )		3912728	1					
ANR	3912775	Argument	Z_STR_P ( zv )		3912728	0					
ANR	3912776	CallExpression	Z_STR_P ( zv )		3912728	0					
ANR	3912777	Callee	Z_STR_P		3912728	0					
ANR	3912778	Identifier	Z_STR_P		3912728	0					
ANR	3912779	ArgumentList	zv		3912728	1					
ANR	3912780	Argument	zv		3912728	0					
ANR	3912781	Identifier	zv		3912728	0					
ANR	3912782	IfStatement	if ( ZSTR_IS_INTERNED ( Z_STR_P ( zv ) ) )		3912728	2					
ANR	3912783	Condition	ZSTR_IS_INTERNED ( Z_STR_P ( zv ) )	429:6:11966:11994	3912728	0	True				
ANR	3912784	CallExpression	ZSTR_IS_INTERNED ( Z_STR_P ( zv ) )		3912728	0					
ANR	3912785	Callee	ZSTR_IS_INTERNED		3912728	0					
ANR	3912786	Identifier	ZSTR_IS_INTERNED		3912728	0					
ANR	3912787	ArgumentList	Z_STR_P ( zv )		3912728	1					
ANR	3912788	Argument	Z_STR_P ( zv )		3912728	0					
ANR	3912789	CallExpression	Z_STR_P ( zv )		3912728	0					
ANR	3912790	Callee	Z_STR_P		3912728	0					
ANR	3912791	Identifier	Z_STR_P		3912728	0					
ANR	3912792	ArgumentList	zv		3912728	1					
ANR	3912793	Argument	zv		3912728	0					
ANR	3912794	Identifier	zv		3912728	0					
ANR	3912795	CompoundStatement		5:37:195:195	3912728	1					
ANR	3912796	ExpressionStatement	Z_TYPE_FLAGS_P ( zv ) &= ~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )	430:3:12002:12065	3912728	0	True				
ANR	3912797	AssignmentExpression	Z_TYPE_FLAGS_P ( zv ) &= ~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )		3912728	0		&=			
ANR	3912798	CallExpression	Z_TYPE_FLAGS_P ( zv )		3912728	0					
ANR	3912799	Callee	Z_TYPE_FLAGS_P		3912728	0					
ANR	3912800	Identifier	Z_TYPE_FLAGS_P		3912728	0					
ANR	3912801	ArgumentList	zv		3912728	1					
ANR	3912802	Argument	zv		3912728	0					
ANR	3912803	Identifier	zv		3912728	0					
ANR	3912804	UnaryOperationExpression	~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )		3912728	1					
ANR	3912805	UnaryOperator	~		3912728	0					
ANR	3912806	InclusiveOrExpression	IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE		3912728	1		|			
ANR	3912807	Identifier	IS_TYPE_REFCOUNTED		3912728	0					
ANR	3912808	Identifier	IS_TYPE_COPYABLE		3912728	1					
ANR	3912809	ExpressionStatement	"ZVAL_COPY_VALUE ( CT_CONSTANT_EX ( op_array , literal_position ) , zv )"	433:1:12075:12138	3912728	1	True				
ANR	3912810	CallExpression	"ZVAL_COPY_VALUE ( CT_CONSTANT_EX ( op_array , literal_position ) , zv )"		3912728	0					
ANR	3912811	Callee	ZVAL_COPY_VALUE		3912728	0					
ANR	3912812	Identifier	ZVAL_COPY_VALUE		3912728	0					
ANR	3912813	ArgumentList	"CT_CONSTANT_EX ( op_array , literal_position )"		3912728	1					
ANR	3912814	Argument	"CT_CONSTANT_EX ( op_array , literal_position )"		3912728	0					
ANR	3912815	CallExpression	"CT_CONSTANT_EX ( op_array , literal_position )"		3912728	0					
ANR	3912816	Callee	CT_CONSTANT_EX		3912728	0					
ANR	3912817	Identifier	CT_CONSTANT_EX		3912728	0					
ANR	3912818	ArgumentList	op_array		3912728	1					
ANR	3912819	Argument	op_array		3912728	0					
ANR	3912820	Identifier	op_array		3912728	0					
ANR	3912821	Argument	literal_position		3912728	1					
ANR	3912822	Identifier	literal_position		3912728	0					
ANR	3912823	Argument	zv		3912728	1					
ANR	3912824	Identifier	zv		3912728	0					
ANR	3912825	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ literal_position ] ) = - 1	434:1:12141:12196	3912728	2	True				
ANR	3912826	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ literal_position ] ) = - 1		3912728	0		=			
ANR	3912827	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ literal_position ] )		3912728	0					
ANR	3912828	Callee	Z_CACHE_SLOT		3912728	0					
ANR	3912829	Identifier	Z_CACHE_SLOT		3912728	0					
ANR	3912830	ArgumentList	op_array -> literals [ literal_position ]		3912728	1					
ANR	3912831	Argument	op_array -> literals [ literal_position ]		3912728	0					
ANR	3912832	ArrayIndexing	op_array -> literals [ literal_position ]		3912728	0					
ANR	3912833	PtrMemberAccess	op_array -> literals		3912728	0					
ANR	3912834	Identifier	op_array		3912728	0					
ANR	3912835	Identifier	literals		3912728	1					
ANR	3912836	Identifier	literal_position		3912728	1					
ANR	3912837	UnaryOperationExpression	- 1		3912728	1					
ANR	3912838	UnaryOperator	-		3912728	0					
ANR	3912839	PrimaryExpression	1		3912728	1					
ANR	3912840	ReturnType	static inline void		3912728	1					
ANR	3912841	Identifier	zend_insert_literal		3912728	2					
ANR	3912842	ParameterList	"zend_op_array * op_array , zval * zv , int literal_position"		3912728	3					
ANR	3912843	Parameter	zend_op_array * op_array	424:39:11734:11756	3912728	0	True				
ANR	3912844	ParameterType	zend_op_array *		3912728	0					
ANR	3912845	Identifier	op_array		3912728	1					
ANR	3912846	Parameter	zval * zv	424:64:11759:11766	3912728	1	True				
ANR	3912847	ParameterType	zval *		3912728	0					
ANR	3912848	Identifier	zv		3912728	1					
ANR	3912849	Parameter	int literal_position	424:74:11769:11788	3912728	2	True				
ANR	3912850	ParameterType	int		3912728	0					
ANR	3912851	Identifier	literal_position		3912728	1					
ANR	3912852	CFGEntryNode	ENTRY		3912728		True				
ANR	3912853	CFGExitNode	EXIT		3912728		True				
ANR	3912854	Symbol	IS_CONSTANT		3912728						
ANR	3912855	Symbol	IS_TYPE_COPYABLE		3912728						
ANR	3912856	Symbol	Z_TYPE_FLAGS_P		3912728						
ANR	3912857	Symbol	Z_TYPE_P		3912728						
ANR	3912858	Symbol	IS_TYPE_REFCOUNTED		3912728						
ANR	3912859	Symbol	* op_array -> literals		3912728						
ANR	3912860	Symbol	* op_array		3912728						
ANR	3912861	Symbol	zend_new_interned_string		3912728						
ANR	3912862	Symbol	* literal_position		3912728						
ANR	3912863	Symbol	op_array -> literals		3912728						
ANR	3912864	Symbol	literal_position		3912728						
ANR	3912865	Symbol	ZSTR_IS_INTERNED		3912728						
ANR	3912866	Symbol	Z_CACHE_SLOT		3912728						
ANR	3912867	Symbol	IS_STRING		3912728						
ANR	3912868	Symbol	Z_STR_P		3912728						
ANR	3912869	Symbol	zv		3912728						
ANR	3912870	Symbol	* * op_array		3912728						
ANR	3912871	Symbol	op_array		3912728						
ANR	3912872	Symbol	CT_CONSTANT_EX		3912728						
ANR	3912873	Function	zend_add_literal	441:0:12425:12842							
ANR	3912874	FunctionDef	"zend_add_literal (zend_op_array * op_array , zval * zv)"		3912873	0					
ANR	3912875	CompoundStatement		442:0:12491:12842	3912873	0					
ANR	3912876	IdentifierDeclStatement	int i = op_array -> last_literal ;	443:1:12494:12524	3912873	0	True				
ANR	3912877	IdentifierDecl	i = op_array -> last_literal		3912873	0					
ANR	3912878	IdentifierDeclType	int		3912873	0					
ANR	3912879	Identifier	i		3912873	1					
ANR	3912880	AssignmentExpression	i = op_array -> last_literal		3912873	2		=			
ANR	3912881	Identifier	i		3912873	0					
ANR	3912882	PtrMemberAccess	op_array -> last_literal		3912873	1					
ANR	3912883	Identifier	op_array		3912873	0					
ANR	3912884	Identifier	last_literal		3912873	1					
ANR	3912885	ExpressionStatement	op_array -> last_literal ++	444:1:12527:12551	3912873	1	True				
ANR	3912886	PostIncDecOperationExpression	op_array -> last_literal ++		3912873	0					
ANR	3912887	PtrMemberAccess	op_array -> last_literal		3912873	0					
ANR	3912888	Identifier	op_array		3912873	0					
ANR	3912889	Identifier	last_literal		3912873	1					
ANR	3912890	IncDec	++		3912873	1					
ANR	3912891	IfStatement	if ( i >= CG ( context ) . literals_size )		3912873	2					
ANR	3912892	Condition	i >= CG ( context ) . literals_size	445:5:12558:12587	3912873	0	True				
ANR	3912893	RelationalExpression	i >= CG ( context ) . literals_size		3912873	0		>=			
ANR	3912894	Identifier	i		3912873	0					
ANR	3912895	MemberAccess	CG ( context ) . literals_size		3912873	1					
ANR	3912896	CallExpression	CG ( context )		3912873	0					
ANR	3912897	Callee	CG		3912873	0					
ANR	3912898	Identifier	CG		3912873	0					
ANR	3912899	ArgumentList	context		3912873	1					
ANR	3912900	Argument	context		3912873	0					
ANR	3912901	Identifier	context		3912873	0					
ANR	3912902	Identifier	literals_size		3912873	1					
ANR	3912903	CompoundStatement		4:37:98:98	3912873	1					
ANR	3912904	WhileStatement	while ( i >= CG ( context ) . literals_size )		3912873	0					
ANR	3912905	Condition	i >= CG ( context ) . literals_size	446:9:12601:12630	3912873	0	True				
ANR	3912906	RelationalExpression	i >= CG ( context ) . literals_size		3912873	0		>=			
ANR	3912907	Identifier	i		3912873	0					
ANR	3912908	MemberAccess	CG ( context ) . literals_size		3912873	1					
ANR	3912909	CallExpression	CG ( context )		3912873	0					
ANR	3912910	Callee	CG		3912873	0					
ANR	3912911	Identifier	CG		3912873	0					
ANR	3912912	ArgumentList	context		3912873	1					
ANR	3912913	Argument	context		3912873	0					
ANR	3912914	Identifier	context		3912873	0					
ANR	3912915	Identifier	literals_size		3912873	1					
ANR	3912916	CompoundStatement		5:41:141:141	3912873	1					
ANR	3912917	ExpressionStatement	CG ( context ) . literals_size += 16	447:3:12638:12669	3912873	0	True				
ANR	3912918	AssignmentExpression	CG ( context ) . literals_size += 16		3912873	0		+=			
ANR	3912919	MemberAccess	CG ( context ) . literals_size		3912873	0					
ANR	3912920	CallExpression	CG ( context )		3912873	0					
ANR	3912921	Callee	CG		3912873	0					
ANR	3912922	Identifier	CG		3912873	0					
ANR	3912923	ArgumentList	context		3912873	1					
ANR	3912924	Argument	context		3912873	0					
ANR	3912925	Identifier	context		3912873	0					
ANR	3912926	Identifier	literals_size		3912873	1					
ANR	3912927	PrimaryExpression	16		3912873	1					
ANR	3912928	ExpressionStatement	"op_array -> literals = ( zval * ) erealloc ( op_array -> literals , CG ( context ) . literals_size * sizeof ( zval ) )"	449:2:12689:12787	3912873	1	True				
ANR	3912929	AssignmentExpression	"op_array -> literals = ( zval * ) erealloc ( op_array -> literals , CG ( context ) . literals_size * sizeof ( zval ) )"		3912873	0		=			
ANR	3912930	PtrMemberAccess	op_array -> literals		3912873	0					
ANR	3912931	Identifier	op_array		3912873	0					
ANR	3912932	Identifier	literals		3912873	1					
ANR	3912933	CastExpression	"( zval * ) erealloc ( op_array -> literals , CG ( context ) . literals_size * sizeof ( zval ) )"		3912873	1					
ANR	3912934	CastTarget	zval *		3912873	0					
ANR	3912935	CallExpression	"erealloc ( op_array -> literals , CG ( context ) . literals_size * sizeof ( zval ) )"		3912873	1					
ANR	3912936	Callee	erealloc		3912873	0					
ANR	3912937	Identifier	erealloc		3912873	0					
ANR	3912938	ArgumentList	op_array -> literals		3912873	1					
ANR	3912939	Argument	op_array -> literals		3912873	0					
ANR	3912940	PtrMemberAccess	op_array -> literals		3912873	0					
ANR	3912941	Identifier	op_array		3912873	0					
ANR	3912942	Identifier	literals		3912873	1					
ANR	3912943	Argument	CG ( context ) . literals_size * sizeof ( zval )		3912873	1					
ANR	3912944	MultiplicativeExpression	CG ( context ) . literals_size * sizeof ( zval )		3912873	0		*			
ANR	3912945	MemberAccess	CG ( context ) . literals_size		3912873	0					
ANR	3912946	CallExpression	CG ( context )		3912873	0					
ANR	3912947	Callee	CG		3912873	0					
ANR	3912948	Identifier	CG		3912873	0					
ANR	3912949	ArgumentList	context		3912873	1					
ANR	3912950	Argument	context		3912873	0					
ANR	3912951	Identifier	context		3912873	0					
ANR	3912952	Identifier	literals_size		3912873	1					
ANR	3912953	SizeofExpression	sizeof ( zval )		3912873	1					
ANR	3912954	Sizeof	sizeof		3912873	0					
ANR	3912955	SizeofOperand	zval		3912873	1					
ANR	3912956	ExpressionStatement	"zend_insert_literal ( op_array , zv , i )"	451:1:12793:12829	3912873	3	True				
ANR	3912957	CallExpression	"zend_insert_literal ( op_array , zv , i )"		3912873	0					
ANR	3912958	Callee	zend_insert_literal		3912873	0					
ANR	3912959	Identifier	zend_insert_literal		3912873	0					
ANR	3912960	ArgumentList	op_array		3912873	1					
ANR	3912961	Argument	op_array		3912873	0					
ANR	3912962	Identifier	op_array		3912873	0					
ANR	3912963	Argument	zv		3912873	1					
ANR	3912964	Identifier	zv		3912873	0					
ANR	3912965	Argument	i		3912873	2					
ANR	3912966	Identifier	i		3912873	0					
ANR	3912967	ReturnStatement	return i ;	452:1:12832:12840	3912873	4	True				
ANR	3912968	Identifier	i		3912873	0					
ANR	3912969	ReturnType	int		3912873	1					
ANR	3912970	Identifier	zend_add_literal		3912873	2					
ANR	3912971	ParameterList	"zend_op_array * op_array , zval * zv"		3912873	3					
ANR	3912972	Parameter	zend_op_array * op_array	441:21:12446:12468	3912873	0	True				
ANR	3912973	ParameterType	zend_op_array *		3912873	0					
ANR	3912974	Identifier	op_array		3912873	1					
ANR	3912975	Parameter	zval * zv	441:46:12471:12478	3912873	1	True				
ANR	3912976	ParameterType	zval *		3912873	0					
ANR	3912977	Identifier	zv		3912873	1					
ANR	3912978	CFGEntryNode	ENTRY		3912873		True				
ANR	3912979	CFGExitNode	EXIT		3912873		True				
ANR	3912980	Symbol	CG		3912873						
ANR	3912981	Symbol	op_array -> last_literal		3912873						
ANR	3912982	Symbol	op_array -> literals		3912873						
ANR	3912983	Symbol	context		3912873						
ANR	3912984	Symbol	i		3912873						
ANR	3912985	Symbol	CG ( context ) . literals_size		3912873						
ANR	3912986	Symbol	zv		3912873						
ANR	3912987	Symbol	erealloc		3912873						
ANR	3912988	Symbol	op_array		3912873						
ANR	3912989	Symbol	* op_array		3912873						
ANR	3912990	Function	zend_add_literal_string	456:0:12855:13067							
ANR	3912991	FunctionDef	"zend_add_literal_string (zend_op_array * op_array , zend_string * * str)"		3912990	0					
ANR	3912992	CompoundStatement		457:0:12951:13067	3912990	0					
ANR	3912993	IdentifierDeclStatement	int ret ;	458:1:12954:12961	3912990	0	True				
ANR	3912994	IdentifierDecl	ret		3912990	0					
ANR	3912995	IdentifierDeclType	int		3912990	0					
ANR	3912996	Identifier	ret		3912990	1					
ANR	3912997	IdentifierDeclStatement	zval zv ;	459:1:12964:12971	3912990	1	True				
ANR	3912998	IdentifierDecl	zv		3912990	0					
ANR	3912999	IdentifierDeclType	zval		3912990	0					
ANR	3913000	Identifier	zv		3912990	1					
ANR	3913001	ExpressionStatement	"ZVAL_STR ( & zv , * str )"	460:1:12974:12993	3912990	2	True				
ANR	3913002	CallExpression	"ZVAL_STR ( & zv , * str )"		3912990	0					
ANR	3913003	Callee	ZVAL_STR		3912990	0					
ANR	3913004	Identifier	ZVAL_STR		3912990	0					
ANR	3913005	ArgumentList	& zv		3912990	1					
ANR	3913006	Argument	& zv		3912990	0					
ANR	3913007	UnaryOperationExpression	& zv		3912990	0					
ANR	3913008	UnaryOperator	&		3912990	0					
ANR	3913009	Identifier	zv		3912990	1					
ANR	3913010	Argument	* str		3912990	1					
ANR	3913011	UnaryOperationExpression	* str		3912990	0					
ANR	3913012	UnaryOperator	*		3912990	0					
ANR	3913013	Identifier	str		3912990	1					
ANR	3913014	ExpressionStatement	"ret = zend_add_literal ( op_array , & zv )"	461:1:12996:13033	3912990	3	True				
ANR	3913015	AssignmentExpression	"ret = zend_add_literal ( op_array , & zv )"		3912990	0		=			
ANR	3913016	Identifier	ret		3912990	0					
ANR	3913017	CallExpression	"zend_add_literal ( op_array , & zv )"		3912990	1					
ANR	3913018	Callee	zend_add_literal		3912990	0					
ANR	3913019	Identifier	zend_add_literal		3912990	0					
ANR	3913020	ArgumentList	op_array		3912990	1					
ANR	3913021	Argument	op_array		3912990	0					
ANR	3913022	Identifier	op_array		3912990	0					
ANR	3913023	Argument	& zv		3912990	1					
ANR	3913024	UnaryOperationExpression	& zv		3912990	0					
ANR	3913025	UnaryOperator	&		3912990	0					
ANR	3913026	Identifier	zv		3912990	1					
ANR	3913027	ExpressionStatement	* str = Z_STR ( zv )	462:1:13036:13052	3912990	4	True				
ANR	3913028	AssignmentExpression	* str = Z_STR ( zv )		3912990	0		=			
ANR	3913029	UnaryOperationExpression	* str		3912990	0					
ANR	3913030	UnaryOperator	*		3912990	0					
ANR	3913031	Identifier	str		3912990	1					
ANR	3913032	CallExpression	Z_STR ( zv )		3912990	1					
ANR	3913033	Callee	Z_STR		3912990	0					
ANR	3913034	Identifier	Z_STR		3912990	0					
ANR	3913035	ArgumentList	zv		3912990	1					
ANR	3913036	Argument	zv		3912990	0					
ANR	3913037	Identifier	zv		3912990	0					
ANR	3913038	ReturnStatement	return ret ;	463:1:13055:13065	3912990	5	True				
ANR	3913039	Identifier	ret		3912990	0					
ANR	3913040	ReturnType	static inline int		3912990	1					
ANR	3913041	Identifier	zend_add_literal_string		3912990	2					
ANR	3913042	ParameterList	"zend_op_array * op_array , zend_string * * str"		3912990	3					
ANR	3913043	Parameter	zend_op_array * op_array	456:42:12897:12919	3912990	0	True				
ANR	3913044	ParameterType	zend_op_array *		3912990	0					
ANR	3913045	Identifier	op_array		3912990	1					
ANR	3913046	Parameter	zend_string * * str	456:67:12922:12938	3912990	1	True				
ANR	3913047	ParameterType	zend_string * *		3912990	0					
ANR	3913048	Identifier	str		3912990	1					
ANR	3913049	CFGEntryNode	ENTRY		3912990		True				
ANR	3913050	CFGExitNode	EXIT		3912990		True				
ANR	3913051	Symbol	str		3912990						
ANR	3913052	Symbol	ret		3912990						
ANR	3913053	Symbol	& zv		3912990						
ANR	3913054	Symbol	* str		3912990						
ANR	3913055	Symbol	zv		3912990						
ANR	3913056	Symbol	zend_add_literal		3912990						
ANR	3913057	Symbol	Z_STR		3912990						
ANR	3913058	Symbol	op_array		3912990						
ANR	3913059	Function	zend_add_func_name_literal	467:0:13080:13383							
ANR	3913060	FunctionDef	"zend_add_func_name_literal (zend_op_array * op_array , zend_string * name)"		3913059	0					
ANR	3913061	CompoundStatement		468:0:13172:13383	3913059	0					
ANR	3913062	IdentifierDeclStatement	"int ret = zend_add_literal_string ( op_array , & name ) ;"	470:1:13196:13246	3913059	0	True				
ANR	3913063	IdentifierDecl	"ret = zend_add_literal_string ( op_array , & name )"		3913059	0					
ANR	3913064	IdentifierDeclType	int		3913059	0					
ANR	3913065	Identifier	ret		3913059	1					
ANR	3913066	AssignmentExpression	"ret = zend_add_literal_string ( op_array , & name )"		3913059	2		=			
ANR	3913067	Identifier	ret		3913059	0					
ANR	3913068	CallExpression	"zend_add_literal_string ( op_array , & name )"		3913059	1					
ANR	3913069	Callee	zend_add_literal_string		3913059	0					
ANR	3913070	Identifier	zend_add_literal_string		3913059	0					
ANR	3913071	ArgumentList	op_array		3913059	1					
ANR	3913072	Argument	op_array		3913059	0					
ANR	3913073	Identifier	op_array		3913059	0					
ANR	3913074	Argument	& name		3913059	1					
ANR	3913075	UnaryOperationExpression	& name		3913059	0					
ANR	3913076	UnaryOperator	&		3913059	0					
ANR	3913077	Identifier	name		3913059	1					
ANR	3913078	IdentifierDeclStatement	zend_string * lc_name = zend_string_tolower ( name ) ;	473:1:13273:13321	3913059	1	True				
ANR	3913079	IdentifierDecl	* lc_name = zend_string_tolower ( name )		3913059	0					
ANR	3913080	IdentifierDeclType	zend_string *		3913059	0					
ANR	3913081	Identifier	lc_name		3913059	1					
ANR	3913082	AssignmentExpression	* lc_name = zend_string_tolower ( name )		3913059	2		=			
ANR	3913083	Identifier	lc_name		3913059	0					
ANR	3913084	CallExpression	zend_string_tolower ( name )		3913059	1					
ANR	3913085	Callee	zend_string_tolower		3913059	0					
ANR	3913086	Identifier	zend_string_tolower		3913059	0					
ANR	3913087	ArgumentList	name		3913059	1					
ANR	3913088	Argument	name		3913059	0					
ANR	3913089	Identifier	name		3913059	0					
ANR	3913090	ExpressionStatement	"zend_add_literal_string ( op_array , & lc_name )"	474:1:13324:13367	3913059	2	True				
ANR	3913091	CallExpression	"zend_add_literal_string ( op_array , & lc_name )"		3913059	0					
ANR	3913092	Callee	zend_add_literal_string		3913059	0					
ANR	3913093	Identifier	zend_add_literal_string		3913059	0					
ANR	3913094	ArgumentList	op_array		3913059	1					
ANR	3913095	Argument	op_array		3913059	0					
ANR	3913096	Identifier	op_array		3913059	0					
ANR	3913097	Argument	& lc_name		3913059	1					
ANR	3913098	UnaryOperationExpression	& lc_name		3913059	0					
ANR	3913099	UnaryOperator	&		3913059	0					
ANR	3913100	Identifier	lc_name		3913059	1					
ANR	3913101	ReturnStatement	return ret ;	476:1:13371:13381	3913059	3	True				
ANR	3913102	Identifier	ret		3913059	0					
ANR	3913103	ReturnType	static int		3913059	1					
ANR	3913104	Identifier	zend_add_func_name_literal		3913059	2					
ANR	3913105	ParameterList	"zend_op_array * op_array , zend_string * name"		3913059	3					
ANR	3913106	Parameter	zend_op_array * op_array	467:38:13118:13140	3913059	0	True				
ANR	3913107	ParameterType	zend_op_array *		3913059	0					
ANR	3913108	Identifier	op_array		3913059	1					
ANR	3913109	Parameter	zend_string * name	467:63:13143:13159	3913059	1	True				
ANR	3913110	ParameterType	zend_string *		3913059	0					
ANR	3913111	Identifier	name		3913059	1					
ANR	3913112	CFGEntryNode	ENTRY		3913059		True				
ANR	3913113	CFGExitNode	EXIT		3913059		True				
ANR	3913114	Symbol	ret		3913059						
ANR	3913115	Symbol	& lc_name		3913059						
ANR	3913116	Symbol	zend_add_literal_string		3913059						
ANR	3913117	Symbol	name		3913059						
ANR	3913118	Symbol	& name		3913059						
ANR	3913119	Symbol	lc_name		3913059						
ANR	3913120	Symbol	op_array		3913059						
ANR	3913121	Symbol	zend_string_tolower		3913059						
ANR	3913122	Function	zend_add_ns_func_name_literal	480:0:13396:14071							
ANR	3913123	FunctionDef	"zend_add_ns_func_name_literal (zend_op_array * op_array , zend_string * name)"		3913122	0					
ANR	3913124	CompoundStatement		481:0:13491:14071	3913122	0					
ANR	3913125	IdentifierDeclStatement	const char * unqualified_name ;	482:1:13494:13522	3913122	0	True				
ANR	3913126	IdentifierDecl	* unqualified_name		3913122	0					
ANR	3913127	IdentifierDeclType	const char *		3913122	0					
ANR	3913128	Identifier	unqualified_name		3913122	1					
ANR	3913129	IdentifierDeclStatement	size_t unqualified_name_len ;	483:1:13525:13552	3913122	1	True				
ANR	3913130	IdentifierDecl	unqualified_name_len		3913122	0					
ANR	3913131	IdentifierDeclType	size_t		3913122	0					
ANR	3913132	Identifier	unqualified_name_len		3913122	1					
ANR	3913133	IdentifierDeclStatement	"int ret = zend_add_literal_string ( op_array , & name ) ;"	486:1:13577:13627	3913122	2	True				
ANR	3913134	IdentifierDecl	"ret = zend_add_literal_string ( op_array , & name )"		3913122	0					
ANR	3913135	IdentifierDeclType	int		3913122	0					
ANR	3913136	Identifier	ret		3913122	1					
ANR	3913137	AssignmentExpression	"ret = zend_add_literal_string ( op_array , & name )"		3913122	2		=			
ANR	3913138	Identifier	ret		3913122	0					
ANR	3913139	CallExpression	"zend_add_literal_string ( op_array , & name )"		3913122	1					
ANR	3913140	Callee	zend_add_literal_string		3913122	0					
ANR	3913141	Identifier	zend_add_literal_string		3913122	0					
ANR	3913142	ArgumentList	op_array		3913122	1					
ANR	3913143	Argument	op_array		3913122	0					
ANR	3913144	Identifier	op_array		3913122	0					
ANR	3913145	Argument	& name		3913122	1					
ANR	3913146	UnaryOperationExpression	& name		3913122	0					
ANR	3913147	UnaryOperator	&		3913122	0					
ANR	3913148	Identifier	name		3913122	1					
ANR	3913149	IdentifierDeclStatement	zend_string * lc_name = zend_string_tolower ( name ) ;	489:1:13654:13702	3913122	3	True				
ANR	3913150	IdentifierDecl	* lc_name = zend_string_tolower ( name )		3913122	0					
ANR	3913151	IdentifierDeclType	zend_string *		3913122	0					
ANR	3913152	Identifier	lc_name		3913122	1					
ANR	3913153	AssignmentExpression	* lc_name = zend_string_tolower ( name )		3913122	2		=			
ANR	3913154	Identifier	lc_name		3913122	0					
ANR	3913155	CallExpression	zend_string_tolower ( name )		3913122	1					
ANR	3913156	Callee	zend_string_tolower		3913122	0					
ANR	3913157	Identifier	zend_string_tolower		3913122	0					
ANR	3913158	ArgumentList	name		3913122	1					
ANR	3913159	Argument	name		3913122	0					
ANR	3913160	Identifier	name		3913122	0					
ANR	3913161	ExpressionStatement	"zend_add_literal_string ( op_array , & lc_name )"	490:1:13705:13748	3913122	4	True				
ANR	3913162	CallExpression	"zend_add_literal_string ( op_array , & lc_name )"		3913122	0					
ANR	3913163	Callee	zend_add_literal_string		3913122	0					
ANR	3913164	Identifier	zend_add_literal_string		3913122	0					
ANR	3913165	ArgumentList	op_array		3913122	1					
ANR	3913166	Argument	op_array		3913122	0					
ANR	3913167	Identifier	op_array		3913122	0					
ANR	3913168	Argument	& lc_name		3913122	1					
ANR	3913169	UnaryOperationExpression	& lc_name		3913122	0					
ANR	3913170	UnaryOperator	&		3913122	0					
ANR	3913171	Identifier	lc_name		3913122	1					
ANR	3913172	IfStatement	"if ( zend_get_unqualified_name ( name , & unqualified_name , & unqualified_name_len ) )"		3913122	5					
ANR	3913173	Condition	"zend_get_unqualified_name ( name , & unqualified_name , & unqualified_name_len )"	493:5:13790:13862	3913122	0	True				
ANR	3913174	CallExpression	"zend_get_unqualified_name ( name , & unqualified_name , & unqualified_name_len )"		3913122	0					
ANR	3913175	Callee	zend_get_unqualified_name		3913122	0					
ANR	3913176	Identifier	zend_get_unqualified_name		3913122	0					
ANR	3913177	ArgumentList	name		3913122	1					
ANR	3913178	Argument	name		3913122	0					
ANR	3913179	Identifier	name		3913122	0					
ANR	3913180	Argument	& unqualified_name		3913122	1					
ANR	3913181	UnaryOperationExpression	& unqualified_name		3913122	0					
ANR	3913182	UnaryOperator	&		3913122	0					
ANR	3913183	Identifier	unqualified_name		3913122	1					
ANR	3913184	Argument	& unqualified_name_len		3913122	2					
ANR	3913185	UnaryOperationExpression	& unqualified_name_len		3913122	0					
ANR	3913186	UnaryOperator	&		3913122	0					
ANR	3913187	Identifier	unqualified_name_len		3913122	1					
ANR	3913188	CompoundStatement		13:80:373:373	3913122	1					
ANR	3913189	ExpressionStatement	"lc_name = zend_string_alloc ( unqualified_name_len , 0 )"	494:2:13869:13921	3913122	0	True				
ANR	3913190	AssignmentExpression	"lc_name = zend_string_alloc ( unqualified_name_len , 0 )"		3913122	0		=			
ANR	3913191	Identifier	lc_name		3913122	0					
ANR	3913192	CallExpression	"zend_string_alloc ( unqualified_name_len , 0 )"		3913122	1					
ANR	3913193	Callee	zend_string_alloc		3913122	0					
ANR	3913194	Identifier	zend_string_alloc		3913122	0					
ANR	3913195	ArgumentList	unqualified_name_len		3913122	1					
ANR	3913196	Argument	unqualified_name_len		3913122	0					
ANR	3913197	Identifier	unqualified_name_len		3913122	0					
ANR	3913198	Argument	0		3913122	1					
ANR	3913199	PrimaryExpression	0		3913122	0					
ANR	3913200	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lc_name ) , unqualified_name , unqualified_name_len )"	495:2:13925:14005	3913122	1	True				
ANR	3913201	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lc_name ) , unqualified_name , unqualified_name_len )"		3913122	0					
ANR	3913202	Callee	zend_str_tolower_copy		3913122	0					
ANR	3913203	Identifier	zend_str_tolower_copy		3913122	0					
ANR	3913204	ArgumentList	ZSTR_VAL ( lc_name )		3913122	1					
ANR	3913205	Argument	ZSTR_VAL ( lc_name )		3913122	0					
ANR	3913206	CallExpression	ZSTR_VAL ( lc_name )		3913122	0					
ANR	3913207	Callee	ZSTR_VAL		3913122	0					
ANR	3913208	Identifier	ZSTR_VAL		3913122	0					
ANR	3913209	ArgumentList	lc_name		3913122	1					
ANR	3913210	Argument	lc_name		3913122	0					
ANR	3913211	Identifier	lc_name		3913122	0					
ANR	3913212	Argument	unqualified_name		3913122	1					
ANR	3913213	Identifier	unqualified_name		3913122	0					
ANR	3913214	Argument	unqualified_name_len		3913122	2					
ANR	3913215	Identifier	unqualified_name_len		3913122	0					
ANR	3913216	ExpressionStatement	"zend_add_literal_string ( op_array , & lc_name )"	496:2:14009:14052	3913122	2	True				
ANR	3913217	CallExpression	"zend_add_literal_string ( op_array , & lc_name )"		3913122	0					
ANR	3913218	Callee	zend_add_literal_string		3913122	0					
ANR	3913219	Identifier	zend_add_literal_string		3913122	0					
ANR	3913220	ArgumentList	op_array		3913122	1					
ANR	3913221	Argument	op_array		3913122	0					
ANR	3913222	Identifier	op_array		3913122	0					
ANR	3913223	Argument	& lc_name		3913122	1					
ANR	3913224	UnaryOperationExpression	& lc_name		3913122	0					
ANR	3913225	UnaryOperator	&		3913122	0					
ANR	3913226	Identifier	lc_name		3913122	1					
ANR	3913227	ReturnStatement	return ret ;	499:1:14059:14069	3913122	6	True				
ANR	3913228	Identifier	ret		3913122	0					
ANR	3913229	ReturnType	static int		3913122	1					
ANR	3913230	Identifier	zend_add_ns_func_name_literal		3913122	2					
ANR	3913231	ParameterList	"zend_op_array * op_array , zend_string * name"		3913122	3					
ANR	3913232	Parameter	zend_op_array * op_array	480:41:13437:13459	3913122	0	True				
ANR	3913233	ParameterType	zend_op_array *		3913122	0					
ANR	3913234	Identifier	op_array		3913122	1					
ANR	3913235	Parameter	zend_string * name	480:66:13462:13478	3913122	1	True				
ANR	3913236	ParameterType	zend_string *		3913122	0					
ANR	3913237	Identifier	name		3913122	1					
ANR	3913238	CFGEntryNode	ENTRY		3913122		True				
ANR	3913239	CFGExitNode	EXIT		3913122		True				
ANR	3913240	Symbol	unqualified_name_len		3913122						
ANR	3913241	Symbol	ret		3913122						
ANR	3913242	Symbol	& unqualified_name_len		3913122						
ANR	3913243	Symbol	zend_string_alloc		3913122						
ANR	3913244	Symbol	unqualified_name		3913122						
ANR	3913245	Symbol	& name		3913122						
ANR	3913246	Symbol	lc_name		3913122						
ANR	3913247	Symbol	zend_string_tolower		3913122						
ANR	3913248	Symbol	& unqualified_name		3913122						
ANR	3913249	Symbol	ZSTR_VAL		3913122						
ANR	3913250	Symbol	& lc_name		3913122						
ANR	3913251	Symbol	zend_add_literal_string		3913122						
ANR	3913252	Symbol	name		3913122						
ANR	3913253	Symbol	zend_get_unqualified_name		3913122						
ANR	3913254	Symbol	op_array		3913122						
ANR	3913255	Function	zend_add_class_name_literal	503:0:14084:14418							
ANR	3913256	FunctionDef	"zend_add_class_name_literal (zend_op_array * op_array , zend_string * name)"		3913255	0					
ANR	3913257	CompoundStatement		504:0:14177:14418	3913255	0					
ANR	3913258	IdentifierDeclStatement	"int ret = zend_add_literal_string ( op_array , & name ) ;"	506:1:14201:14251	3913255	0	True				
ANR	3913259	IdentifierDecl	"ret = zend_add_literal_string ( op_array , & name )"		3913255	0					
ANR	3913260	IdentifierDeclType	int		3913255	0					
ANR	3913261	Identifier	ret		3913255	1					
ANR	3913262	AssignmentExpression	"ret = zend_add_literal_string ( op_array , & name )"		3913255	2		=			
ANR	3913263	Identifier	ret		3913255	0					
ANR	3913264	CallExpression	"zend_add_literal_string ( op_array , & name )"		3913255	1					
ANR	3913265	Callee	zend_add_literal_string		3913255	0					
ANR	3913266	Identifier	zend_add_literal_string		3913255	0					
ANR	3913267	ArgumentList	op_array		3913255	1					
ANR	3913268	Argument	op_array		3913255	0					
ANR	3913269	Identifier	op_array		3913255	0					
ANR	3913270	Argument	& name		3913255	1					
ANR	3913271	UnaryOperationExpression	& name		3913255	0					
ANR	3913272	UnaryOperator	&		3913255	0					
ANR	3913273	Identifier	name		3913255	1					
ANR	3913274	IdentifierDeclStatement	zend_string * lc_name = zend_string_tolower ( name ) ;	509:1:14278:14326	3913255	1	True				
ANR	3913275	IdentifierDecl	* lc_name = zend_string_tolower ( name )		3913255	0					
ANR	3913276	IdentifierDeclType	zend_string *		3913255	0					
ANR	3913277	Identifier	lc_name		3913255	1					
ANR	3913278	AssignmentExpression	* lc_name = zend_string_tolower ( name )		3913255	2		=			
ANR	3913279	Identifier	lc_name		3913255	0					
ANR	3913280	CallExpression	zend_string_tolower ( name )		3913255	1					
ANR	3913281	Callee	zend_string_tolower		3913255	0					
ANR	3913282	Identifier	zend_string_tolower		3913255	0					
ANR	3913283	ArgumentList	name		3913255	1					
ANR	3913284	Argument	name		3913255	0					
ANR	3913285	Identifier	name		3913255	0					
ANR	3913286	ExpressionStatement	"zend_add_literal_string ( op_array , & lc_name )"	510:1:14329:14372	3913255	2	True				
ANR	3913287	CallExpression	"zend_add_literal_string ( op_array , & lc_name )"		3913255	0					
ANR	3913288	Callee	zend_add_literal_string		3913255	0					
ANR	3913289	Identifier	zend_add_literal_string		3913255	0					
ANR	3913290	ArgumentList	op_array		3913255	1					
ANR	3913291	Argument	op_array		3913255	0					
ANR	3913292	Identifier	op_array		3913255	0					
ANR	3913293	Argument	& lc_name		3913255	1					
ANR	3913294	UnaryOperationExpression	& lc_name		3913255	0					
ANR	3913295	UnaryOperator	&		3913255	0					
ANR	3913296	Identifier	lc_name		3913255	1					
ANR	3913297	ExpressionStatement	zend_alloc_cache_slot ( ret )	512:1:14376:14402	3913255	3	True				
ANR	3913298	CallExpression	zend_alloc_cache_slot ( ret )		3913255	0					
ANR	3913299	Callee	zend_alloc_cache_slot		3913255	0					
ANR	3913300	Identifier	zend_alloc_cache_slot		3913255	0					
ANR	3913301	ArgumentList	ret		3913255	1					
ANR	3913302	Argument	ret		3913255	0					
ANR	3913303	Identifier	ret		3913255	0					
ANR	3913304	ReturnStatement	return ret ;	514:1:14406:14416	3913255	4	True				
ANR	3913305	Identifier	ret		3913255	0					
ANR	3913306	ReturnType	static int		3913255	1					
ANR	3913307	Identifier	zend_add_class_name_literal		3913255	2					
ANR	3913308	ParameterList	"zend_op_array * op_array , zend_string * name"		3913255	3					
ANR	3913309	Parameter	zend_op_array * op_array	503:39:14123:14145	3913255	0	True				
ANR	3913310	ParameterType	zend_op_array *		3913255	0					
ANR	3913311	Identifier	op_array		3913255	1					
ANR	3913312	Parameter	zend_string * name	503:64:14148:14164	3913255	1	True				
ANR	3913313	ParameterType	zend_string *		3913255	0					
ANR	3913314	Identifier	name		3913255	1					
ANR	3913315	CFGEntryNode	ENTRY		3913255		True				
ANR	3913316	CFGExitNode	EXIT		3913255		True				
ANR	3913317	Symbol	ret		3913255						
ANR	3913318	Symbol	& lc_name		3913255						
ANR	3913319	Symbol	zend_add_literal_string		3913255						
ANR	3913320	Symbol	name		3913255						
ANR	3913321	Symbol	& name		3913255						
ANR	3913322	Symbol	lc_name		3913255						
ANR	3913323	Symbol	op_array		3913255						
ANR	3913324	Symbol	zend_string_tolower		3913255						
ANR	3913325	Function	zend_add_const_name_literal	518:0:14431:15702							
ANR	3913326	FunctionDef	"zend_add_const_name_literal (zend_op_array * op_array , zend_string * name , zend_bool unqualified)"		3913325	0					
ANR	3913327	CompoundStatement		519:0:14547:15702	3913325	0					
ANR	3913328	IdentifierDeclStatement	zend_string * tmp_name ;	520:1:14550:14571	3913325	0	True				
ANR	3913329	IdentifierDecl	* tmp_name		3913325	0					
ANR	3913330	IdentifierDeclType	zend_string *		3913325	0					
ANR	3913331	Identifier	tmp_name		3913325	1					
ANR	3913332	IdentifierDeclStatement	"int ret = zend_add_literal_string ( op_array , & name ) ;"	522:1:14575:14625	3913325	1	True				
ANR	3913333	IdentifierDecl	"ret = zend_add_literal_string ( op_array , & name )"		3913325	0					
ANR	3913334	IdentifierDeclType	int		3913325	0					
ANR	3913335	Identifier	ret		3913325	1					
ANR	3913336	AssignmentExpression	"ret = zend_add_literal_string ( op_array , & name )"		3913325	2		=			
ANR	3913337	Identifier	ret		3913325	0					
ANR	3913338	CallExpression	"zend_add_literal_string ( op_array , & name )"		3913325	1					
ANR	3913339	Callee	zend_add_literal_string		3913325	0					
ANR	3913340	Identifier	zend_add_literal_string		3913325	0					
ANR	3913341	ArgumentList	op_array		3913325	1					
ANR	3913342	Argument	op_array		3913325	0					
ANR	3913343	Identifier	op_array		3913325	0					
ANR	3913344	Argument	& name		3913325	1					
ANR	3913345	UnaryOperationExpression	& name		3913325	0					
ANR	3913346	UnaryOperator	&		3913325	0					
ANR	3913347	Identifier	name		3913325	1					
ANR	3913348	IdentifierDeclStatement	"size_t ns_len = 0 , after_ns_len = ZSTR_LEN ( name ) ;"	524:1:14629:14677	3913325	2	True				
ANR	3913349	IdentifierDecl	ns_len = 0		3913325	0					
ANR	3913350	IdentifierDeclType	size_t		3913325	0					
ANR	3913351	Identifier	ns_len		3913325	1					
ANR	3913352	AssignmentExpression	ns_len = 0		3913325	2		=			
ANR	3913353	Identifier	ns_len		3913325	0					
ANR	3913354	PrimaryExpression	0		3913325	1					
ANR	3913355	IdentifierDecl	after_ns_len = ZSTR_LEN ( name )		3913325	1					
ANR	3913356	IdentifierDeclType	size_t		3913325	0					
ANR	3913357	Identifier	after_ns_len		3913325	1					
ANR	3913358	AssignmentExpression	after_ns_len = ZSTR_LEN ( name )		3913325	2		=			
ANR	3913359	Identifier	after_ns_len		3913325	0					
ANR	3913360	CallExpression	ZSTR_LEN ( name )		3913325	1					
ANR	3913361	Callee	ZSTR_LEN		3913325	0					
ANR	3913362	Identifier	ZSTR_LEN		3913325	0					
ANR	3913363	ArgumentList	name		3913325	1					
ANR	3913364	Argument	name		3913325	0					
ANR	3913365	Identifier	name		3913325	0					
ANR	3913366	IdentifierDeclStatement	"const char * after_ns = zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) ) ;"	525:1:14680:14753	3913325	3	True				
ANR	3913367	IdentifierDecl	"* after_ns = zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3913325	0					
ANR	3913368	IdentifierDeclType	const char *		3913325	0					
ANR	3913369	Identifier	after_ns		3913325	1					
ANR	3913370	AssignmentExpression	"* after_ns = zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3913325	2		=			
ANR	3913371	Identifier	after_ns		3913325	0					
ANR	3913372	CallExpression	"zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3913325	1					
ANR	3913373	Callee	zend_memrchr		3913325	0					
ANR	3913374	Identifier	zend_memrchr		3913325	0					
ANR	3913375	ArgumentList	ZSTR_VAL ( name )		3913325	1					
ANR	3913376	Argument	ZSTR_VAL ( name )		3913325	0					
ANR	3913377	CallExpression	ZSTR_VAL ( name )		3913325	0					
ANR	3913378	Callee	ZSTR_VAL		3913325	0					
ANR	3913379	Identifier	ZSTR_VAL		3913325	0					
ANR	3913380	ArgumentList	name		3913325	1					
ANR	3913381	Argument	name		3913325	0					
ANR	3913382	Identifier	name		3913325	0					
ANR	3913383	Argument	'\\\\'		3913325	1					
ANR	3913384	PrimaryExpression	'\\\\'		3913325	0					
ANR	3913385	Argument	ZSTR_LEN ( name )		3913325	2					
ANR	3913386	CallExpression	ZSTR_LEN ( name )		3913325	0					
ANR	3913387	Callee	ZSTR_LEN		3913325	0					
ANR	3913388	Identifier	ZSTR_LEN		3913325	0					
ANR	3913389	ArgumentList	name		3913325	1					
ANR	3913390	Argument	name		3913325	0					
ANR	3913391	Identifier	name		3913325	0					
ANR	3913392	IfStatement	if ( after_ns )		3913325	4					
ANR	3913393	Condition	after_ns	526:5:14760:14767	3913325	0	True				
ANR	3913394	Identifier	after_ns		3913325	0					
ANR	3913395	CompoundStatement		8:15:222:222	3913325	1					
ANR	3913396	ExpressionStatement	after_ns += 1	527:2:14774:14787	3913325	0	True				
ANR	3913397	AssignmentExpression	after_ns += 1		3913325	0		+=			
ANR	3913398	Identifier	after_ns		3913325	0					
ANR	3913399	PrimaryExpression	1		3913325	1					
ANR	3913400	ExpressionStatement	ns_len = after_ns - ZSTR_VAL ( name ) - 1	528:2:14791:14829	3913325	1	True				
ANR	3913401	AssignmentExpression	ns_len = after_ns - ZSTR_VAL ( name ) - 1		3913325	0		=			
ANR	3913402	Identifier	ns_len		3913325	0					
ANR	3913403	AdditiveExpression	after_ns - ZSTR_VAL ( name ) - 1		3913325	1		-			
ANR	3913404	Identifier	after_ns		3913325	0					
ANR	3913405	AdditiveExpression	ZSTR_VAL ( name ) - 1		3913325	1		-			
ANR	3913406	CallExpression	ZSTR_VAL ( name )		3913325	0					
ANR	3913407	Callee	ZSTR_VAL		3913325	0					
ANR	3913408	Identifier	ZSTR_VAL		3913325	0					
ANR	3913409	ArgumentList	name		3913325	1					
ANR	3913410	Argument	name		3913325	0					
ANR	3913411	Identifier	name		3913325	0					
ANR	3913412	PrimaryExpression	1		3913325	1					
ANR	3913413	ExpressionStatement	after_ns_len = ZSTR_LEN ( name ) - ns_len - 1	529:2:14833:14875	3913325	2	True				
ANR	3913414	AssignmentExpression	after_ns_len = ZSTR_LEN ( name ) - ns_len - 1		3913325	0		=			
ANR	3913415	Identifier	after_ns_len		3913325	0					
ANR	3913416	AdditiveExpression	ZSTR_LEN ( name ) - ns_len - 1		3913325	1		-			
ANR	3913417	CallExpression	ZSTR_LEN ( name )		3913325	0					
ANR	3913418	Callee	ZSTR_LEN		3913325	0					
ANR	3913419	Identifier	ZSTR_LEN		3913325	0					
ANR	3913420	ArgumentList	name		3913325	1					
ANR	3913421	Argument	name		3913325	0					
ANR	3913422	Identifier	name		3913325	0					
ANR	3913423	AdditiveExpression	ns_len - 1		3913325	1		-			
ANR	3913424	Identifier	ns_len		3913325	0					
ANR	3913425	PrimaryExpression	1		3913325	1					
ANR	3913426	ExpressionStatement	"tmp_name = zend_string_init ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , 0 )"	532:2:14939:15001	3913325	3	True				
ANR	3913427	AssignmentExpression	"tmp_name = zend_string_init ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , 0 )"		3913325	0		=			
ANR	3913428	Identifier	tmp_name		3913325	0					
ANR	3913429	CallExpression	"zend_string_init ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , 0 )"		3913325	1					
ANR	3913430	Callee	zend_string_init		3913325	0					
ANR	3913431	Identifier	zend_string_init		3913325	0					
ANR	3913432	ArgumentList	ZSTR_VAL ( name )		3913325	1					
ANR	3913433	Argument	ZSTR_VAL ( name )		3913325	0					
ANR	3913434	CallExpression	ZSTR_VAL ( name )		3913325	0					
ANR	3913435	Callee	ZSTR_VAL		3913325	0					
ANR	3913436	Identifier	ZSTR_VAL		3913325	0					
ANR	3913437	ArgumentList	name		3913325	1					
ANR	3913438	Argument	name		3913325	0					
ANR	3913439	Identifier	name		3913325	0					
ANR	3913440	Argument	ZSTR_LEN ( name )		3913325	1					
ANR	3913441	CallExpression	ZSTR_LEN ( name )		3913325	0					
ANR	3913442	Callee	ZSTR_LEN		3913325	0					
ANR	3913443	Identifier	ZSTR_LEN		3913325	0					
ANR	3913444	ArgumentList	name		3913325	1					
ANR	3913445	Argument	name		3913325	0					
ANR	3913446	Identifier	name		3913325	0					
ANR	3913447	Argument	0		3913325	2					
ANR	3913448	PrimaryExpression	0		3913325	0					
ANR	3913449	ExpressionStatement	"zend_str_tolower ( ZSTR_VAL ( tmp_name ) , ns_len )"	533:2:15005:15049	3913325	4	True				
ANR	3913450	CallExpression	"zend_str_tolower ( ZSTR_VAL ( tmp_name ) , ns_len )"		3913325	0					
ANR	3913451	Callee	zend_str_tolower		3913325	0					
ANR	3913452	Identifier	zend_str_tolower		3913325	0					
ANR	3913453	ArgumentList	ZSTR_VAL ( tmp_name )		3913325	1					
ANR	3913454	Argument	ZSTR_VAL ( tmp_name )		3913325	0					
ANR	3913455	CallExpression	ZSTR_VAL ( tmp_name )		3913325	0					
ANR	3913456	Callee	ZSTR_VAL		3913325	0					
ANR	3913457	Identifier	ZSTR_VAL		3913325	0					
ANR	3913458	ArgumentList	tmp_name		3913325	1					
ANR	3913459	Argument	tmp_name		3913325	0					
ANR	3913460	Identifier	tmp_name		3913325	0					
ANR	3913461	Argument	ns_len		3913325	1					
ANR	3913462	Identifier	ns_len		3913325	0					
ANR	3913463	ExpressionStatement	"zend_add_literal_string ( op_array , & tmp_name )"	534:2:15053:15097	3913325	5	True				
ANR	3913464	CallExpression	"zend_add_literal_string ( op_array , & tmp_name )"		3913325	0					
ANR	3913465	Callee	zend_add_literal_string		3913325	0					
ANR	3913466	Identifier	zend_add_literal_string		3913325	0					
ANR	3913467	ArgumentList	op_array		3913325	1					
ANR	3913468	Argument	op_array		3913325	0					
ANR	3913469	Identifier	op_array		3913325	0					
ANR	3913470	Argument	& tmp_name		3913325	1					
ANR	3913471	UnaryOperationExpression	& tmp_name		3913325	0					
ANR	3913472	UnaryOperator	&		3913325	0					
ANR	3913473	Identifier	tmp_name		3913325	1					
ANR	3913474	ExpressionStatement	tmp_name = zend_string_tolower ( name )	537:2:15163:15199	3913325	6	True				
ANR	3913475	AssignmentExpression	tmp_name = zend_string_tolower ( name )		3913325	0		=			
ANR	3913476	Identifier	tmp_name		3913325	0					
ANR	3913477	CallExpression	zend_string_tolower ( name )		3913325	1					
ANR	3913478	Callee	zend_string_tolower		3913325	0					
ANR	3913479	Identifier	zend_string_tolower		3913325	0					
ANR	3913480	ArgumentList	name		3913325	1					
ANR	3913481	Argument	name		3913325	0					
ANR	3913482	Identifier	name		3913325	0					
ANR	3913483	ExpressionStatement	"zend_add_literal_string ( op_array , & tmp_name )"	538:2:15203:15247	3913325	7	True				
ANR	3913484	CallExpression	"zend_add_literal_string ( op_array , & tmp_name )"		3913325	0					
ANR	3913485	Callee	zend_add_literal_string		3913325	0					
ANR	3913486	Identifier	zend_add_literal_string		3913325	0					
ANR	3913487	ArgumentList	op_array		3913325	1					
ANR	3913488	Argument	op_array		3913325	0					
ANR	3913489	Identifier	op_array		3913325	0					
ANR	3913490	Argument	& tmp_name		3913325	1					
ANR	3913491	UnaryOperationExpression	& tmp_name		3913325	0					
ANR	3913492	UnaryOperator	&		3913325	0					
ANR	3913493	Identifier	tmp_name		3913325	1					
ANR	3913494	IfStatement	if ( ! unqualified )		3913325	8					
ANR	3913495	Condition	! unqualified	540:6:15256:15267	3913325	0	True				
ANR	3913496	UnaryOperationExpression	! unqualified		3913325	0					
ANR	3913497	UnaryOperator	!		3913325	0					
ANR	3913498	Identifier	unqualified		3913325	1					
ANR	3913499	CompoundStatement		22:20:722:722	3913325	1					
ANR	3913500	ReturnStatement	return ret ;	541:3:15275:15285	3913325	0	True				
ANR	3913501	Identifier	ret		3913325	0					
ANR	3913502	ElseStatement	else		3913325	0					
ANR	3913503	CompoundStatement		25:8:751:751	3913325	0					
ANR	3913504	ExpressionStatement	after_ns = ZSTR_VAL ( name )	544:2:15303:15328	3913325	0	True				
ANR	3913505	AssignmentExpression	after_ns = ZSTR_VAL ( name )		3913325	0		=			
ANR	3913506	Identifier	after_ns		3913325	0					
ANR	3913507	CallExpression	ZSTR_VAL ( name )		3913325	1					
ANR	3913508	Callee	ZSTR_VAL		3913325	0					
ANR	3913509	Identifier	ZSTR_VAL		3913325	0					
ANR	3913510	ArgumentList	name		3913325	1					
ANR	3913511	Argument	name		3913325	0					
ANR	3913512	Identifier	name		3913325	0					
ANR	3913513	ExpressionStatement	"tmp_name = zend_string_init ( after_ns , after_ns_len , 0 )"	548:1:15377:15431	3913325	5	True				
ANR	3913514	AssignmentExpression	"tmp_name = zend_string_init ( after_ns , after_ns_len , 0 )"		3913325	0		=			
ANR	3913515	Identifier	tmp_name		3913325	0					
ANR	3913516	CallExpression	"zend_string_init ( after_ns , after_ns_len , 0 )"		3913325	1					
ANR	3913517	Callee	zend_string_init		3913325	0					
ANR	3913518	Identifier	zend_string_init		3913325	0					
ANR	3913519	ArgumentList	after_ns		3913325	1					
ANR	3913520	Argument	after_ns		3913325	0					
ANR	3913521	Identifier	after_ns		3913325	0					
ANR	3913522	Argument	after_ns_len		3913325	1					
ANR	3913523	Identifier	after_ns_len		3913325	0					
ANR	3913524	Argument	0		3913325	2					
ANR	3913525	PrimaryExpression	0		3913325	0					
ANR	3913526	ExpressionStatement	"zend_add_literal_string ( op_array , & tmp_name )"	549:1:15434:15478	3913325	6	True				
ANR	3913527	CallExpression	"zend_add_literal_string ( op_array , & tmp_name )"		3913325	0					
ANR	3913528	Callee	zend_add_literal_string		3913325	0					
ANR	3913529	Identifier	zend_add_literal_string		3913325	0					
ANR	3913530	ArgumentList	op_array		3913325	1					
ANR	3913531	Argument	op_array		3913325	0					
ANR	3913532	Identifier	op_array		3913325	0					
ANR	3913533	Argument	& tmp_name		3913325	1					
ANR	3913534	UnaryOperationExpression	& tmp_name		3913325	0					
ANR	3913535	UnaryOperator	&		3913325	0					
ANR	3913536	Identifier	tmp_name		3913325	1					
ANR	3913537	ExpressionStatement	"tmp_name = zend_string_alloc ( after_ns_len , 0 )"	552:1:15526:15571	3913325	7	True				
ANR	3913538	AssignmentExpression	"tmp_name = zend_string_alloc ( after_ns_len , 0 )"		3913325	0		=			
ANR	3913539	Identifier	tmp_name		3913325	0					
ANR	3913540	CallExpression	"zend_string_alloc ( after_ns_len , 0 )"		3913325	1					
ANR	3913541	Callee	zend_string_alloc		3913325	0					
ANR	3913542	Identifier	zend_string_alloc		3913325	0					
ANR	3913543	ArgumentList	after_ns_len		3913325	1					
ANR	3913544	Argument	after_ns_len		3913325	0					
ANR	3913545	Identifier	after_ns_len		3913325	0					
ANR	3913546	Argument	0		3913325	1					
ANR	3913547	PrimaryExpression	0		3913325	0					
ANR	3913548	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( tmp_name ) , after_ns , after_ns_len )"	553:1:15574:15639	3913325	8	True				
ANR	3913549	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( tmp_name ) , after_ns , after_ns_len )"		3913325	0					
ANR	3913550	Callee	zend_str_tolower_copy		3913325	0					
ANR	3913551	Identifier	zend_str_tolower_copy		3913325	0					
ANR	3913552	ArgumentList	ZSTR_VAL ( tmp_name )		3913325	1					
ANR	3913553	Argument	ZSTR_VAL ( tmp_name )		3913325	0					
ANR	3913554	CallExpression	ZSTR_VAL ( tmp_name )		3913325	0					
ANR	3913555	Callee	ZSTR_VAL		3913325	0					
ANR	3913556	Identifier	ZSTR_VAL		3913325	0					
ANR	3913557	ArgumentList	tmp_name		3913325	1					
ANR	3913558	Argument	tmp_name		3913325	0					
ANR	3913559	Identifier	tmp_name		3913325	0					
ANR	3913560	Argument	after_ns		3913325	1					
ANR	3913561	Identifier	after_ns		3913325	0					
ANR	3913562	Argument	after_ns_len		3913325	2					
ANR	3913563	Identifier	after_ns_len		3913325	0					
ANR	3913564	ExpressionStatement	"zend_add_literal_string ( op_array , & tmp_name )"	554:1:15642:15686	3913325	9	True				
ANR	3913565	CallExpression	"zend_add_literal_string ( op_array , & tmp_name )"		3913325	0					
ANR	3913566	Callee	zend_add_literal_string		3913325	0					
ANR	3913567	Identifier	zend_add_literal_string		3913325	0					
ANR	3913568	ArgumentList	op_array		3913325	1					
ANR	3913569	Argument	op_array		3913325	0					
ANR	3913570	Identifier	op_array		3913325	0					
ANR	3913571	Argument	& tmp_name		3913325	1					
ANR	3913572	UnaryOperationExpression	& tmp_name		3913325	0					
ANR	3913573	UnaryOperator	&		3913325	0					
ANR	3913574	Identifier	tmp_name		3913325	1					
ANR	3913575	ReturnStatement	return ret ;	556:1:15690:15700	3913325	10	True				
ANR	3913576	Identifier	ret		3913325	0					
ANR	3913577	ReturnType	static int		3913325	1					
ANR	3913578	Identifier	zend_add_const_name_literal		3913325	2					
ANR	3913579	ParameterList	"zend_op_array * op_array , zend_string * name , zend_bool unqualified"		3913325	3					
ANR	3913580	Parameter	zend_op_array * op_array	518:39:14470:14492	3913325	0	True				
ANR	3913581	ParameterType	zend_op_array *		3913325	0					
ANR	3913582	Identifier	op_array		3913325	1					
ANR	3913583	Parameter	zend_string * name	518:64:14495:14511	3913325	1	True				
ANR	3913584	ParameterType	zend_string *		3913325	0					
ANR	3913585	Identifier	name		3913325	1					
ANR	3913586	Parameter	zend_bool unqualified	518:83:14514:14534	3913325	2	True				
ANR	3913587	ParameterType	zend_bool		3913325	0					
ANR	3913588	Identifier	unqualified		3913325	1					
ANR	3913589	CFGEntryNode	ENTRY		3913325		True				
ANR	3913590	CFGExitNode	EXIT		3913325		True				
ANR	3913591	Symbol	ret		3913325						
ANR	3913592	Symbol	zend_memrchr		3913325						
ANR	3913593	Symbol	zend_string_alloc		3913325						
ANR	3913594	Symbol	& name		3913325						
ANR	3913595	Symbol	after_ns		3913325						
ANR	3913596	Symbol	ns_len		3913325						
ANR	3913597	Symbol	zend_string_tolower		3913325						
ANR	3913598	Symbol	tmp_name		3913325						
ANR	3913599	Symbol	ZSTR_VAL		3913325						
ANR	3913600	Symbol	unqualified		3913325						
ANR	3913601	Symbol	zend_string_init		3913325						
ANR	3913602	Symbol	zend_add_literal_string		3913325						
ANR	3913603	Symbol	name		3913325						
ANR	3913604	Symbol	ZSTR_LEN		3913325						
ANR	3913605	Symbol	after_ns_len		3913325						
ANR	3913606	Symbol	& tmp_name		3913325						
ANR	3913607	Symbol	op_array		3913325						
ANR	3913608	DeclStmt									
ANR	3913609	Decl							zval	zval	_c
ANR	3913610	Function	zend_stop_lexing	566:0:15864:16003							
ANR	3913611	FunctionDef	zend_stop_lexing ()		3913610	0					
ANR	3913612	CompoundStatement		567:0:15892:16003	3913610	0					
ANR	3913613	IfStatement	if ( LANG_SCNG ( on_event ) )		3913610	0					
ANR	3913614	Condition	LANG_SCNG ( on_event )	568:4:15898:15916	3913610	0	True				
ANR	3913615	CallExpression	LANG_SCNG ( on_event )		3913610	0					
ANR	3913616	Callee	LANG_SCNG		3913610	0					
ANR	3913617	Identifier	LANG_SCNG		3913610	0					
ANR	3913618	ArgumentList	on_event		3913610	1					
ANR	3913619	Argument	on_event		3913610	0					
ANR	3913620	Identifier	on_event		3913610	0					
ANR	3913621	ExpressionStatement	"LANG_SCNG ( on_event ) ( ON_STOP , END , 0 )"	568:25:15919:15955	3913610	1	True				
ANR	3913622	CallExpression	"LANG_SCNG ( on_event ) ( ON_STOP , END , 0 )"		3913610	0					
ANR	3913623	Callee	LANG_SCNG ( on_event )		3913610	0					
ANR	3913624	CallExpression	LANG_SCNG ( on_event )		3913610	0					
ANR	3913625	Callee	LANG_SCNG		3913610	0					
ANR	3913626	Identifier	LANG_SCNG		3913610	0					
ANR	3913627	ArgumentList	on_event		3913610	1					
ANR	3913628	Argument	on_event		3913610	0					
ANR	3913629	Identifier	on_event		3913610	0					
ANR	3913630	ArgumentList	ON_STOP		3913610	1					
ANR	3913631	Argument	ON_STOP		3913610	0					
ANR	3913632	Identifier	ON_STOP		3913610	0					
ANR	3913633	Argument	END		3913610	1					
ANR	3913634	Identifier	END		3913610	0					
ANR	3913635	Argument	0		3913610	2					
ANR	3913636	PrimaryExpression	0		3913610	0					
ANR	3913637	ExpressionStatement	LANG_SCNG ( yy_cursor ) = LANG_SCNG ( yy_limit )	570:1:15959:16001	3913610	1	True				
ANR	3913638	AssignmentExpression	LANG_SCNG ( yy_cursor ) = LANG_SCNG ( yy_limit )		3913610	0		=			
ANR	3913639	CallExpression	LANG_SCNG ( yy_cursor )		3913610	0					
ANR	3913640	Callee	LANG_SCNG		3913610	0					
ANR	3913641	Identifier	LANG_SCNG		3913610	0					
ANR	3913642	ArgumentList	yy_cursor		3913610	1					
ANR	3913643	Argument	yy_cursor		3913610	0					
ANR	3913644	Identifier	yy_cursor		3913610	0					
ANR	3913645	CallExpression	LANG_SCNG ( yy_limit )		3913610	1					
ANR	3913646	Callee	LANG_SCNG		3913610	0					
ANR	3913647	Identifier	LANG_SCNG		3913610	0					
ANR	3913648	ArgumentList	yy_limit		3913610	1					
ANR	3913649	Argument	yy_limit		3913610	0					
ANR	3913650	Identifier	yy_limit		3913610	0					
ANR	3913651	ReturnType	void		3913610	1					
ANR	3913652	Identifier	zend_stop_lexing		3913610	2					
ANR	3913653	ParameterList			3913610	3					
ANR	3913654	CFGEntryNode	ENTRY		3913610		True				
ANR	3913655	CFGExitNode	EXIT		3913610		True				
ANR	3913656	Symbol	yy_limit		3913610						
ANR	3913657	Symbol	LANG_SCNG		3913610						
ANR	3913658	Symbol	on_event		3913610						
ANR	3913659	Symbol	yy_cursor		3913610						
ANR	3913660	Symbol	ON_STOP		3913610						
ANR	3913661	Symbol	END		3913610						
ANR	3913662	Function	zend_begin_loop	573:0:16006:16948							
ANR	3913663	FunctionDef	"zend_begin_loop (zend_uchar free_opcode , const znode * loop_var)"		3913662	0					
ANR	3913664	CompoundStatement		574:0:16098:16948	3913662	0					
ANR	3913665	IdentifierDeclStatement	zend_brk_cont_element * brk_cont_element ;	575:1:16101:16140	3913662	0	True				
ANR	3913666	IdentifierDecl	* brk_cont_element		3913662	0					
ANR	3913667	IdentifierDeclType	zend_brk_cont_element *		3913662	0					
ANR	3913668	Identifier	brk_cont_element		3913662	1					
ANR	3913669	IdentifierDeclStatement	int parent = CG ( context ) . current_brk_cont ;	576:1:16143:16184	3913662	1	True				
ANR	3913670	IdentifierDecl	parent = CG ( context ) . current_brk_cont		3913662	0					
ANR	3913671	IdentifierDeclType	int		3913662	0					
ANR	3913672	Identifier	parent		3913662	1					
ANR	3913673	AssignmentExpression	parent = CG ( context ) . current_brk_cont		3913662	2		=			
ANR	3913674	Identifier	parent		3913662	0					
ANR	3913675	MemberAccess	CG ( context ) . current_brk_cont		3913662	1					
ANR	3913676	CallExpression	CG ( context )		3913662	0					
ANR	3913677	Callee	CG		3913662	0					
ANR	3913678	Identifier	CG		3913662	0					
ANR	3913679	ArgumentList	context		3913662	1					
ANR	3913680	Argument	context		3913662	0					
ANR	3913681	Identifier	context		3913662	0					
ANR	3913682	Identifier	current_brk_cont		3913662	1					
ANR	3913683	IdentifierDeclStatement	zend_loop_var info = { 0 } ;	577:1:16187:16211	3913662	2	True				
ANR	3913684	IdentifierDecl	info = { 0 }		3913662	0					
ANR	3913685	IdentifierDeclType	zend_loop_var		3913662	0					
ANR	3913686	Identifier	info		3913662	1					
ANR	3913687	AssignmentExpression	info = { 0 }		3913662	2		=			
ANR	3913688	Identifier	info		3913662	0					
ANR	3913689	InitializerList	0		3913662	1					
ANR	3913690	PrimaryExpression	0		3913662	0					
ANR	3913691	ExpressionStatement	CG ( context ) . current_brk_cont = CG ( active_op_array ) -> last_brk_cont	579:1:16215:16280	3913662	3	True				
ANR	3913692	AssignmentExpression	CG ( context ) . current_brk_cont = CG ( active_op_array ) -> last_brk_cont		3913662	0		=			
ANR	3913693	MemberAccess	CG ( context ) . current_brk_cont		3913662	0					
ANR	3913694	CallExpression	CG ( context )		3913662	0					
ANR	3913695	Callee	CG		3913662	0					
ANR	3913696	Identifier	CG		3913662	0					
ANR	3913697	ArgumentList	context		3913662	1					
ANR	3913698	Argument	context		3913662	0					
ANR	3913699	Identifier	context		3913662	0					
ANR	3913700	Identifier	current_brk_cont		3913662	1					
ANR	3913701	PtrMemberAccess	CG ( active_op_array ) -> last_brk_cont		3913662	1					
ANR	3913702	CallExpression	CG ( active_op_array )		3913662	0					
ANR	3913703	Callee	CG		3913662	0					
ANR	3913704	Identifier	CG		3913662	0					
ANR	3913705	ArgumentList	active_op_array		3913662	1					
ANR	3913706	Argument	active_op_array		3913662	0					
ANR	3913707	Identifier	active_op_array		3913662	0					
ANR	3913708	Identifier	last_brk_cont		3913662	1					
ANR	3913709	ExpressionStatement	brk_cont_element = get_next_brk_cont_element ( CG ( active_op_array ) )	580:1:16283:16348	3913662	4	True				
ANR	3913710	AssignmentExpression	brk_cont_element = get_next_brk_cont_element ( CG ( active_op_array ) )		3913662	0		=			
ANR	3913711	Identifier	brk_cont_element		3913662	0					
ANR	3913712	CallExpression	get_next_brk_cont_element ( CG ( active_op_array ) )		3913662	1					
ANR	3913713	Callee	get_next_brk_cont_element		3913662	0					
ANR	3913714	Identifier	get_next_brk_cont_element		3913662	0					
ANR	3913715	ArgumentList	CG ( active_op_array )		3913662	1					
ANR	3913716	Argument	CG ( active_op_array )		3913662	0					
ANR	3913717	CallExpression	CG ( active_op_array )		3913662	0					
ANR	3913718	Callee	CG		3913662	0					
ANR	3913719	Identifier	CG		3913662	0					
ANR	3913720	ArgumentList	active_op_array		3913662	1					
ANR	3913721	Argument	active_op_array		3913662	0					
ANR	3913722	Identifier	active_op_array		3913662	0					
ANR	3913723	ExpressionStatement	brk_cont_element -> parent = parent	581:1:16351:16384	3913662	5	True				
ANR	3913724	AssignmentExpression	brk_cont_element -> parent = parent		3913662	0		=			
ANR	3913725	PtrMemberAccess	brk_cont_element -> parent		3913662	0					
ANR	3913726	Identifier	brk_cont_element		3913662	0					
ANR	3913727	Identifier	parent		3913662	1					
ANR	3913728	Identifier	parent		3913662	1					
ANR	3913729	IfStatement	if ( loop_var && ( loop_var -> op_type & ( IS_VAR | IS_TMP_VAR ) ) )		3913662	6					
ANR	3913730	Condition	loop_var && ( loop_var -> op_type & ( IS_VAR | IS_TMP_VAR ) )	583:5:16392:16444	3913662	0	True				
ANR	3913731	AndExpression	loop_var && ( loop_var -> op_type & ( IS_VAR | IS_TMP_VAR ) )		3913662	0		&&			
ANR	3913732	Identifier	loop_var		3913662	0					
ANR	3913733	BitAndExpression	loop_var -> op_type & ( IS_VAR | IS_TMP_VAR )		3913662	1		&			
ANR	3913734	PtrMemberAccess	loop_var -> op_type		3913662	0					
ANR	3913735	Identifier	loop_var		3913662	0					
ANR	3913736	Identifier	op_type		3913662	1					
ANR	3913737	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		3913662	1		|			
ANR	3913738	Identifier	IS_VAR		3913662	0					
ANR	3913739	Identifier	IS_TMP_VAR		3913662	1					
ANR	3913740	CompoundStatement		10:60:348:348	3913662	1					
ANR	3913741	ExpressionStatement	info . opcode = free_opcode	584:2:16451:16476	3913662	0	True				
ANR	3913742	AssignmentExpression	info . opcode = free_opcode		3913662	0		=			
ANR	3913743	MemberAccess	info . opcode		3913662	0					
ANR	3913744	Identifier	info		3913662	0					
ANR	3913745	Identifier	opcode		3913662	1					
ANR	3913746	Identifier	free_opcode		3913662	1					
ANR	3913747	ExpressionStatement	info . var_type = loop_var -> op_type	585:2:16480:16513	3913662	1	True				
ANR	3913748	AssignmentExpression	info . var_type = loop_var -> op_type		3913662	0		=			
ANR	3913749	MemberAccess	info . var_type		3913662	0					
ANR	3913750	Identifier	info		3913662	0					
ANR	3913751	Identifier	var_type		3913662	1					
ANR	3913752	PtrMemberAccess	loop_var -> op_type		3913662	1					
ANR	3913753	Identifier	loop_var		3913662	0					
ANR	3913754	Identifier	op_type		3913662	1					
ANR	3913755	ExpressionStatement	info . var_num = loop_var -> u . op . var	586:2:16517:16550	3913662	2	True				
ANR	3913756	AssignmentExpression	info . var_num = loop_var -> u . op . var		3913662	0		=			
ANR	3913757	MemberAccess	info . var_num		3913662	0					
ANR	3913758	Identifier	info		3913662	0					
ANR	3913759	Identifier	var_num		3913662	1					
ANR	3913760	MemberAccess	loop_var -> u . op . var		3913662	1					
ANR	3913761	MemberAccess	loop_var -> u . op		3913662	0					
ANR	3913762	PtrMemberAccess	loop_var -> u		3913662	0					
ANR	3913763	Identifier	loop_var		3913662	0					
ANR	3913764	Identifier	u		3913662	1					
ANR	3913765	Identifier	op		3913662	1					
ANR	3913766	Identifier	var		3913662	1					
ANR	3913767	ExpressionStatement	info . u . brk_cont_offset = CG ( context ) . current_brk_cont	587:2:16554:16607	3913662	3	True				
ANR	3913768	AssignmentExpression	info . u . brk_cont_offset = CG ( context ) . current_brk_cont		3913662	0		=			
ANR	3913769	MemberAccess	info . u . brk_cont_offset		3913662	0					
ANR	3913770	MemberAccess	info . u		3913662	0					
ANR	3913771	Identifier	info		3913662	0					
ANR	3913772	Identifier	u		3913662	1					
ANR	3913773	Identifier	brk_cont_offset		3913662	1					
ANR	3913774	MemberAccess	CG ( context ) . current_brk_cont		3913662	1					
ANR	3913775	CallExpression	CG ( context )		3913662	0					
ANR	3913776	Callee	CG		3913662	0					
ANR	3913777	Identifier	CG		3913662	0					
ANR	3913778	ArgumentList	context		3913662	1					
ANR	3913779	Argument	context		3913662	0					
ANR	3913780	Identifier	context		3913662	0					
ANR	3913781	Identifier	current_brk_cont		3913662	1					
ANR	3913782	ExpressionStatement	brk_cont_element -> start = get_next_op_number ( CG ( active_op_array ) )	588:2:16611:16676	3913662	4	True				
ANR	3913783	AssignmentExpression	brk_cont_element -> start = get_next_op_number ( CG ( active_op_array ) )		3913662	0		=			
ANR	3913784	PtrMemberAccess	brk_cont_element -> start		3913662	0					
ANR	3913785	Identifier	brk_cont_element		3913662	0					
ANR	3913786	Identifier	start		3913662	1					
ANR	3913787	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3913662	1					
ANR	3913788	Callee	get_next_op_number		3913662	0					
ANR	3913789	Identifier	get_next_op_number		3913662	0					
ANR	3913790	ArgumentList	CG ( active_op_array )		3913662	1					
ANR	3913791	Argument	CG ( active_op_array )		3913662	0					
ANR	3913792	CallExpression	CG ( active_op_array )		3913662	0					
ANR	3913793	Callee	CG		3913662	0					
ANR	3913794	Identifier	CG		3913662	0					
ANR	3913795	ArgumentList	active_op_array		3913662	1					
ANR	3913796	Argument	active_op_array		3913662	0					
ANR	3913797	Identifier	active_op_array		3913662	0					
ANR	3913798	ElseStatement	else		3913662	0					
ANR	3913799	CompoundStatement		16:8:587:587	3913662	0					
ANR	3913800	ExpressionStatement	info . opcode = ZEND_NOP	590:2:16690:16712	3913662	0	True				
ANR	3913801	AssignmentExpression	info . opcode = ZEND_NOP		3913662	0		=			
ANR	3913802	MemberAccess	info . opcode		3913662	0					
ANR	3913803	Identifier	info		3913662	0					
ANR	3913804	Identifier	opcode		3913662	1					
ANR	3913805	Identifier	ZEND_NOP		3913662	1					
ANR	3913806	ExpressionStatement	brk_cont_element -> start = - 1	593:2:16868:16896	3913662	1	True				
ANR	3913807	AssignmentExpression	brk_cont_element -> start = - 1		3913662	0		=			
ANR	3913808	PtrMemberAccess	brk_cont_element -> start		3913662	0					
ANR	3913809	Identifier	brk_cont_element		3913662	0					
ANR	3913810	Identifier	start		3913662	1					
ANR	3913811	UnaryOperationExpression	- 1		3913662	1					
ANR	3913812	UnaryOperator	-		3913662	0					
ANR	3913813	PrimaryExpression	1		3913662	1					
ANR	3913814	ExpressionStatement	"zend_stack_push ( & CG ( loop_var_stack ) , & info )"	596:1:16903:16946	3913662	7	True				
ANR	3913815	CallExpression	"zend_stack_push ( & CG ( loop_var_stack ) , & info )"		3913662	0					
ANR	3913816	Callee	zend_stack_push		3913662	0					
ANR	3913817	Identifier	zend_stack_push		3913662	0					
ANR	3913818	ArgumentList	& CG ( loop_var_stack )		3913662	1					
ANR	3913819	Argument	& CG ( loop_var_stack )		3913662	0					
ANR	3913820	UnaryOperationExpression	& CG ( loop_var_stack )		3913662	0					
ANR	3913821	UnaryOperator	&		3913662	0					
ANR	3913822	CallExpression	CG ( loop_var_stack )		3913662	1					
ANR	3913823	Callee	CG		3913662	0					
ANR	3913824	Identifier	CG		3913662	0					
ANR	3913825	ArgumentList	loop_var_stack		3913662	1					
ANR	3913826	Argument	loop_var_stack		3913662	0					
ANR	3913827	Identifier	loop_var_stack		3913662	0					
ANR	3913828	Argument	& info		3913662	1					
ANR	3913829	UnaryOperationExpression	& info		3913662	0					
ANR	3913830	UnaryOperator	&		3913662	0					
ANR	3913831	Identifier	info		3913662	1					
ANR	3913832	ReturnType	static inline void		3913662	1					
ANR	3913833	Identifier	zend_begin_loop		3913662	2					
ANR	3913834	ParameterList	"zend_uchar free_opcode , const znode * loop_var"		3913662	3					
ANR	3913835	Parameter	zend_uchar free_opcode	573:35:16041:16062	3913662	0	True				
ANR	3913836	ParameterType	zend_uchar		3913662	0					
ANR	3913837	Identifier	free_opcode		3913662	1					
ANR	3913838	Parameter	const znode * loop_var	573:59:16065:16085	3913662	1	True				
ANR	3913839	ParameterType	const znode *		3913662	0					
ANR	3913840	Identifier	loop_var		3913662	1					
ANR	3913841	CFGEntryNode	ENTRY		3913662		True				
ANR	3913842	CFGExitNode	EXIT		3913662		True				
ANR	3913843	Symbol	parent		3913662						
ANR	3913844	Symbol	* CG		3913662						
ANR	3913845	Symbol	CG ( active_op_array ) -> last_brk_cont		3913662						
ANR	3913846	Symbol	get_next_brk_cont_element		3913662						
ANR	3913847	Symbol	& CG		3913662						
ANR	3913848	Symbol	info . u		3913662						
ANR	3913849	Symbol	loop_var_stack		3913662						
ANR	3913850	Symbol	loop_var -> u . op		3913662						
ANR	3913851	Symbol	context		3913662						
ANR	3913852	Symbol	free_opcode		3913662						
ANR	3913853	Symbol	loop_var		3913662						
ANR	3913854	Symbol	CG ( context ) . current_brk_cont		3913662						
ANR	3913855	Symbol	info		3913662						
ANR	3913856	Symbol	IS_TMP_VAR		3913662						
ANR	3913857	Symbol	* brk_cont_element		3913662						
ANR	3913858	Symbol	loop_var -> op_type		3913662						
ANR	3913859	Symbol	CG		3913662						
ANR	3913860	Symbol	info . var_num		3913662						
ANR	3913861	Symbol	& info		3913662						
ANR	3913862	Symbol	active_op_array		3913662						
ANR	3913863	Symbol	info . opcode		3913662						
ANR	3913864	Symbol	info . var_type		3913662						
ANR	3913865	Symbol	brk_cont_element		3913662						
ANR	3913866	Symbol	* loop_var		3913662						
ANR	3913867	Symbol	brk_cont_element -> start		3913662						
ANR	3913868	Symbol	ZEND_NOP		3913662						
ANR	3913869	Symbol	brk_cont_element -> parent		3913662						
ANR	3913870	Symbol	info . u . brk_cont_offset		3913662						
ANR	3913871	Symbol	IS_VAR		3913662						
ANR	3913872	Symbol	get_next_op_number		3913662						
ANR	3913873	Symbol	loop_var -> u . op . var		3913662						
ANR	3913874	Symbol	loop_var -> u		3913662						
ANR	3913875	Function	zend_end_loop	600:0:16961:17338							
ANR	3913876	FunctionDef	zend_end_loop (int cont_addr)		3913875	0					
ANR	3913877	CompoundStatement		601:0:17019:17338	3913875	0					
ANR	3913878	IdentifierDeclStatement	zend_brk_cont_element * brk_cont_element = & CG ( active_op_array ) -> brk_cont_array [ CG ( context ) . current_brk_cont ] ;	602:1:17022:17132	3913875	0	True				
ANR	3913879	IdentifierDecl	* brk_cont_element = & CG ( active_op_array ) -> brk_cont_array [ CG ( context ) . current_brk_cont ]		3913875	0					
ANR	3913880	IdentifierDeclType	zend_brk_cont_element *		3913875	0					
ANR	3913881	Identifier	brk_cont_element		3913875	1					
ANR	3913882	AssignmentExpression	* brk_cont_element = & CG ( active_op_array ) -> brk_cont_array [ CG ( context ) . current_brk_cont ]		3913875	2		=			
ANR	3913883	Identifier	brk_cont_element		3913875	0					
ANR	3913884	UnaryOperationExpression	& CG ( active_op_array ) -> brk_cont_array [ CG ( context ) . current_brk_cont ]		3913875	1					
ANR	3913885	UnaryOperator	&		3913875	0					
ANR	3913886	ArrayIndexing	CG ( active_op_array ) -> brk_cont_array [ CG ( context ) . current_brk_cont ]		3913875	1					
ANR	3913887	PtrMemberAccess	CG ( active_op_array ) -> brk_cont_array		3913875	0					
ANR	3913888	CallExpression	CG ( active_op_array )		3913875	0					
ANR	3913889	Callee	CG		3913875	0					
ANR	3913890	Identifier	CG		3913875	0					
ANR	3913891	ArgumentList	active_op_array		3913875	1					
ANR	3913892	Argument	active_op_array		3913875	0					
ANR	3913893	Identifier	active_op_array		3913875	0					
ANR	3913894	Identifier	brk_cont_array		3913875	1					
ANR	3913895	MemberAccess	CG ( context ) . current_brk_cont		3913875	1					
ANR	3913896	CallExpression	CG ( context )		3913875	0					
ANR	3913897	Callee	CG		3913875	0					
ANR	3913898	Identifier	CG		3913875	0					
ANR	3913899	ArgumentList	context		3913875	1					
ANR	3913900	Argument	context		3913875	0					
ANR	3913901	Identifier	context		3913875	0					
ANR	3913902	Identifier	current_brk_cont		3913875	1					
ANR	3913903	ExpressionStatement	brk_cont_element -> cont = cont_addr	604:1:17135:17169	3913875	1	True				
ANR	3913904	AssignmentExpression	brk_cont_element -> cont = cont_addr		3913875	0		=			
ANR	3913905	PtrMemberAccess	brk_cont_element -> cont		3913875	0					
ANR	3913906	Identifier	brk_cont_element		3913875	0					
ANR	3913907	Identifier	cont		3913875	1					
ANR	3913908	Identifier	cont_addr		3913875	1					
ANR	3913909	ExpressionStatement	brk_cont_element -> brk = get_next_op_number ( CG ( active_op_array ) )	605:1:17172:17235	3913875	2	True				
ANR	3913910	AssignmentExpression	brk_cont_element -> brk = get_next_op_number ( CG ( active_op_array ) )		3913875	0		=			
ANR	3913911	PtrMemberAccess	brk_cont_element -> brk		3913875	0					
ANR	3913912	Identifier	brk_cont_element		3913875	0					
ANR	3913913	Identifier	brk		3913875	1					
ANR	3913914	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3913875	1					
ANR	3913915	Callee	get_next_op_number		3913875	0					
ANR	3913916	Identifier	get_next_op_number		3913875	0					
ANR	3913917	ArgumentList	CG ( active_op_array )		3913875	1					
ANR	3913918	Argument	CG ( active_op_array )		3913875	0					
ANR	3913919	CallExpression	CG ( active_op_array )		3913875	0					
ANR	3913920	Callee	CG		3913875	0					
ANR	3913921	Identifier	CG		3913875	0					
ANR	3913922	ArgumentList	active_op_array		3913875	1					
ANR	3913923	Argument	active_op_array		3913875	0					
ANR	3913924	Identifier	active_op_array		3913875	0					
ANR	3913925	ExpressionStatement	CG ( context ) . current_brk_cont = brk_cont_element -> parent	606:1:17238:17293	3913875	3	True				
ANR	3913926	AssignmentExpression	CG ( context ) . current_brk_cont = brk_cont_element -> parent		3913875	0		=			
ANR	3913927	MemberAccess	CG ( context ) . current_brk_cont		3913875	0					
ANR	3913928	CallExpression	CG ( context )		3913875	0					
ANR	3913929	Callee	CG		3913875	0					
ANR	3913930	Identifier	CG		3913875	0					
ANR	3913931	ArgumentList	context		3913875	1					
ANR	3913932	Argument	context		3913875	0					
ANR	3913933	Identifier	context		3913875	0					
ANR	3913934	Identifier	current_brk_cont		3913875	1					
ANR	3913935	PtrMemberAccess	brk_cont_element -> parent		3913875	1					
ANR	3913936	Identifier	brk_cont_element		3913875	0					
ANR	3913937	Identifier	parent		3913875	1					
ANR	3913938	ExpressionStatement	zend_stack_del_top ( & CG ( loop_var_stack ) )	608:1:17297:17336	3913875	4	True				
ANR	3913939	CallExpression	zend_stack_del_top ( & CG ( loop_var_stack ) )		3913875	0					
ANR	3913940	Callee	zend_stack_del_top		3913875	0					
ANR	3913941	Identifier	zend_stack_del_top		3913875	0					
ANR	3913942	ArgumentList	& CG ( loop_var_stack )		3913875	1					
ANR	3913943	Argument	& CG ( loop_var_stack )		3913875	0					
ANR	3913944	UnaryOperationExpression	& CG ( loop_var_stack )		3913875	0					
ANR	3913945	UnaryOperator	&		3913875	0					
ANR	3913946	CallExpression	CG ( loop_var_stack )		3913875	1					
ANR	3913947	Callee	CG		3913875	0					
ANR	3913948	Identifier	CG		3913875	0					
ANR	3913949	ArgumentList	loop_var_stack		3913875	1					
ANR	3913950	Argument	loop_var_stack		3913875	0					
ANR	3913951	Identifier	loop_var_stack		3913875	0					
ANR	3913952	ReturnType	static inline void		3913875	1					
ANR	3913953	Identifier	zend_end_loop		3913875	2					
ANR	3913954	ParameterList	int cont_addr		3913875	3					
ANR	3913955	Parameter	int cont_addr	600:33:16994:17006	3913875	0	True				
ANR	3913956	ParameterType	int		3913875	0					
ANR	3913957	Identifier	cont_addr		3913875	1					
ANR	3913958	CFGEntryNode	ENTRY		3913875		True				
ANR	3913959	CFGExitNode	EXIT		3913875		True				
ANR	3913960	Symbol	brk_cont_element -> cont		3913875						
ANR	3913961	Symbol	* brk_cont_element		3913875						
ANR	3913962	Symbol	CG		3913875						
ANR	3913963	Symbol	CG ( active_op_array ) -> brk_cont_array		3913875						
ANR	3913964	Symbol	active_op_array		3913875						
ANR	3913965	Symbol	* CG		3913875						
ANR	3913966	Symbol	brk_cont_element		3913875						
ANR	3913967	Symbol	& CG		3913875						
ANR	3913968	Symbol	loop_var_stack		3913875						
ANR	3913969	Symbol	context		3913875						
ANR	3913970	Symbol	brk_cont_element -> parent		3913875						
ANR	3913971	Symbol	brk_cont_element -> brk		3913875						
ANR	3913972	Symbol	get_next_op_number		3913875						
ANR	3913973	Symbol	cont_addr		3913875						
ANR	3913974	Symbol	CG ( context ) . current_brk_cont		3913875						
ANR	3913975	Function	zend_do_free	612:0:17351:19511							
ANR	3913976	FunctionDef	zend_do_free (znode * op1)		3913975	0					
ANR	3913977	CompoundStatement		613:0:17391:19511	3913975	0					
ANR	3913978	IfStatement	if ( op1 -> op_type == IS_TMP_VAR )		3913975	0					
ANR	3913979	Condition	op1 -> op_type == IS_TMP_VAR	614:5:17398:17421	3913975	0	True				
ANR	3913980	EqualityExpression	op1 -> op_type == IS_TMP_VAR		3913975	0		==			
ANR	3913981	PtrMemberAccess	op1 -> op_type		3913975	0					
ANR	3913982	Identifier	op1		3913975	0					
ANR	3913983	Identifier	op_type		3913975	1					
ANR	3913984	Identifier	IS_TMP_VAR		3913975	1					
ANR	3913985	CompoundStatement		3:2:36:86	3913975	1					
ANR	3913986	IdentifierDeclStatement	zend_op * opline = get_next_op ( CG ( active_op_array ) ) ;	615:2:17428:17478	3913975	0	True				
ANR	3913987	IdentifierDecl	* opline = get_next_op ( CG ( active_op_array ) )		3913975	0					
ANR	3913988	IdentifierDeclType	zend_op *		3913975	0					
ANR	3913989	Identifier	opline		3913975	1					
ANR	3913990	AssignmentExpression	* opline = get_next_op ( CG ( active_op_array ) )		3913975	2		=			
ANR	3913991	Identifier	opline		3913975	0					
ANR	3913992	CallExpression	get_next_op ( CG ( active_op_array ) )		3913975	1					
ANR	3913993	Callee	get_next_op		3913975	0					
ANR	3913994	Identifier	get_next_op		3913975	0					
ANR	3913995	ArgumentList	CG ( active_op_array )		3913975	1					
ANR	3913996	Argument	CG ( active_op_array )		3913975	0					
ANR	3913997	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3913998	Callee	CG		3913975	0					
ANR	3913999	Identifier	CG		3913975	0					
ANR	3914000	ArgumentList	active_op_array		3913975	1					
ANR	3914001	Argument	active_op_array		3913975	0					
ANR	3914002	Identifier	active_op_array		3913975	0					
ANR	3914003	ExpressionStatement	opline -> opcode = ZEND_FREE	617:2:17483:17509	3913975	1	True				
ANR	3914004	AssignmentExpression	opline -> opcode = ZEND_FREE		3913975	0		=			
ANR	3914005	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914006	Identifier	opline		3913975	0					
ANR	3914007	Identifier	opcode		3913975	1					
ANR	3914008	Identifier	ZEND_FREE		3913975	1					
ANR	3914009	ExpressionStatement	"SET_NODE ( opline -> op1 , op1 )"	618:2:17513:17539	3913975	2	True				
ANR	3914010	CallExpression	"SET_NODE ( opline -> op1 , op1 )"		3913975	0					
ANR	3914011	Callee	SET_NODE		3913975	0					
ANR	3914012	Identifier	SET_NODE		3913975	0					
ANR	3914013	ArgumentList	opline -> op1		3913975	1					
ANR	3914014	Argument	opline -> op1		3913975	0					
ANR	3914015	PtrMemberAccess	opline -> op1		3913975	0					
ANR	3914016	Identifier	opline		3913975	0					
ANR	3914017	Identifier	op1		3913975	1					
ANR	3914018	Argument	op1		3913975	1					
ANR	3914019	Identifier	op1		3913975	0					
ANR	3914020	ExpressionStatement	SET_UNUSED ( opline -> op2 )	619:2:17543:17566	3913975	3	True				
ANR	3914021	CallExpression	SET_UNUSED ( opline -> op2 )		3913975	0					
ANR	3914022	Callee	SET_UNUSED		3913975	0					
ANR	3914023	Identifier	SET_UNUSED		3913975	0					
ANR	3914024	ArgumentList	opline -> op2		3913975	1					
ANR	3914025	Argument	opline -> op2		3913975	0					
ANR	3914026	PtrMemberAccess	opline -> op2		3913975	0					
ANR	3914027	Identifier	opline		3913975	0					
ANR	3914028	Identifier	op2		3913975	1					
ANR	3914029	ElseStatement	else		3913975	0					
ANR	3914030	IfStatement	if ( op1 -> op_type == IS_VAR )		3913975	0					
ANR	3914031	Condition	op1 -> op_type == IS_VAR	620:12:17580:17599	3913975	0	True				
ANR	3914032	EqualityExpression	op1 -> op_type == IS_VAR		3913975	0		==			
ANR	3914033	PtrMemberAccess	op1 -> op_type		3913975	0					
ANR	3914034	Identifier	op1		3913975	0					
ANR	3914035	Identifier	op_type		3913975	1					
ANR	3914036	Identifier	IS_VAR		3913975	1					
ANR	3914037	CompoundStatement		9:2:214:290	3913975	1					
ANR	3914038	IdentifierDeclStatement	zend_op * opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] ;	621:2:17606:17682	3913975	0	True				
ANR	3914039	IdentifierDecl	* opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3913975	0					
ANR	3914040	IdentifierDeclType	zend_op *		3913975	0					
ANR	3914041	Identifier	opline		3913975	1					
ANR	3914042	AssignmentExpression	* opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3913975	2		=			
ANR	3914043	Identifier	opline		3913975	0					
ANR	3914044	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3913975	1					
ANR	3914045	UnaryOperator	&		3913975	0					
ANR	3914046	ArrayIndexing	CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3913975	1					
ANR	3914047	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3913975	0					
ANR	3914048	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3914049	Callee	CG		3913975	0					
ANR	3914050	Identifier	CG		3913975	0					
ANR	3914051	ArgumentList	active_op_array		3913975	1					
ANR	3914052	Argument	active_op_array		3913975	0					
ANR	3914053	Identifier	active_op_array		3913975	0					
ANR	3914054	Identifier	opcodes		3913975	1					
ANR	3914055	AdditiveExpression	CG ( active_op_array ) -> last - 1		3913975	1		-			
ANR	3914056	PtrMemberAccess	CG ( active_op_array ) -> last		3913975	0					
ANR	3914057	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3914058	Callee	CG		3913975	0					
ANR	3914059	Identifier	CG		3913975	0					
ANR	3914060	ArgumentList	active_op_array		3913975	1					
ANR	3914061	Argument	active_op_array		3913975	0					
ANR	3914062	Identifier	active_op_array		3913975	0					
ANR	3914063	Identifier	last		3913975	1					
ANR	3914064	PrimaryExpression	1		3913975	1					
ANR	3914065	WhileStatement	while ( opline -> opcode == ZEND_END_SILENCE || opline -> opcode == ZEND_EXT_FCALL_END || opline -> opcode == ZEND_OP_DATA )		3913975	1					
ANR	3914066	Condition	opline -> opcode == ZEND_END_SILENCE || opline -> opcode == ZEND_EXT_FCALL_END || opline -> opcode == ZEND_OP_DATA	623:9:17694:17801	3913975	0	True				
ANR	3914067	OrExpression	opline -> opcode == ZEND_END_SILENCE || opline -> opcode == ZEND_EXT_FCALL_END || opline -> opcode == ZEND_OP_DATA		3913975	0		||			
ANR	3914068	EqualityExpression	opline -> opcode == ZEND_END_SILENCE		3913975	0		==			
ANR	3914069	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914070	Identifier	opline		3913975	0					
ANR	3914071	Identifier	opcode		3913975	1					
ANR	3914072	Identifier	ZEND_END_SILENCE		3913975	1					
ANR	3914073	OrExpression	opline -> opcode == ZEND_EXT_FCALL_END || opline -> opcode == ZEND_OP_DATA		3913975	1		||			
ANR	3914074	EqualityExpression	opline -> opcode == ZEND_EXT_FCALL_END		3913975	0		==			
ANR	3914075	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914076	Identifier	opline		3913975	0					
ANR	3914077	Identifier	opcode		3913975	1					
ANR	3914078	Identifier	ZEND_EXT_FCALL_END		3913975	1					
ANR	3914079	EqualityExpression	opline -> opcode == ZEND_OP_DATA		3913975	1		==			
ANR	3914080	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914081	Identifier	opline		3913975	0					
ANR	3914082	Identifier	opcode		3913975	1					
ANR	3914083	Identifier	ZEND_OP_DATA		3913975	1					
ANR	3914084	CompoundStatement		11:119:412:412	3913975	1					
ANR	3914085	ExpressionStatement	opline --	624:3:17809:17817	3913975	0	True				
ANR	3914086	PostIncDecOperationExpression	opline --		3913975	0					
ANR	3914087	Identifier	opline		3913975	0					
ANR	3914088	IncDec	--		3913975	1					
ANR	3914089	IfStatement	if ( opline -> result_type == IS_VAR && opline -> result . var == op1 -> u . op . var )		3913975	2					
ANR	3914090	Condition	opline -> result_type == IS_VAR && opline -> result . var == op1 -> u . op . var	626:6:17829:17899	3913975	0	True				
ANR	3914091	AndExpression	opline -> result_type == IS_VAR && opline -> result . var == op1 -> u . op . var		3913975	0		&&			
ANR	3914092	EqualityExpression	opline -> result_type == IS_VAR		3913975	0		==			
ANR	3914093	PtrMemberAccess	opline -> result_type		3913975	0					
ANR	3914094	Identifier	opline		3913975	0					
ANR	3914095	Identifier	result_type		3913975	1					
ANR	3914096	Identifier	IS_VAR		3913975	1					
ANR	3914097	EqualityExpression	opline -> result . var == op1 -> u . op . var		3913975	1		==			
ANR	3914098	MemberAccess	opline -> result . var		3913975	0					
ANR	3914099	PtrMemberAccess	opline -> result		3913975	0					
ANR	3914100	Identifier	opline		3913975	0					
ANR	3914101	Identifier	result		3913975	1					
ANR	3914102	Identifier	var		3913975	1					
ANR	3914103	MemberAccess	op1 -> u . op . var		3913975	1					
ANR	3914104	MemberAccess	op1 -> u . op		3913975	0					
ANR	3914105	PtrMemberAccess	op1 -> u		3913975	0					
ANR	3914106	Identifier	op1		3913975	0					
ANR	3914107	Identifier	u		3913975	1					
ANR	3914108	Identifier	op		3913975	1					
ANR	3914109	Identifier	var		3913975	1					
ANR	3914110	CompoundStatement		15:43:510:510	3913975	1					
ANR	3914111	IfStatement	if ( opline -> opcode == ZEND_FETCH_R || opline -> opcode == ZEND_FETCH_DIM_R || opline -> opcode == ZEND_FETCH_OBJ_R )		3913975	0					
ANR	3914112	Condition	opline -> opcode == ZEND_FETCH_R || opline -> opcode == ZEND_FETCH_DIM_R || opline -> opcode == ZEND_FETCH_OBJ_R	628:7:17911:18030	3913975	0	True				
ANR	3914113	OrExpression	opline -> opcode == ZEND_FETCH_R || opline -> opcode == ZEND_FETCH_DIM_R || opline -> opcode == ZEND_FETCH_OBJ_R		3913975	0		||			
ANR	3914114	EqualityExpression	opline -> opcode == ZEND_FETCH_R		3913975	0		==			
ANR	3914115	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914116	Identifier	opline		3913975	0					
ANR	3914117	Identifier	opcode		3913975	1					
ANR	3914118	Identifier	ZEND_FETCH_R		3913975	1					
ANR	3914119	OrExpression	opline -> opcode == ZEND_FETCH_DIM_R || opline -> opcode == ZEND_FETCH_OBJ_R		3913975	1		||			
ANR	3914120	EqualityExpression	opline -> opcode == ZEND_FETCH_DIM_R		3913975	0		==			
ANR	3914121	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914122	Identifier	opline		3913975	0					
ANR	3914123	Identifier	opcode		3913975	1					
ANR	3914124	Identifier	ZEND_FETCH_DIM_R		3913975	1					
ANR	3914125	EqualityExpression	opline -> opcode == ZEND_FETCH_OBJ_R		3913975	1		==			
ANR	3914126	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914127	Identifier	opline		3913975	0					
ANR	3914128	Identifier	opcode		3913975	1					
ANR	3914129	Identifier	ZEND_FETCH_OBJ_R		3913975	1					
ANR	3914130	CompoundStatement		18:43:641:641	3913975	1					
ANR	3914131	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	634:4:18183:18224	3913975	0	True				
ANR	3914132	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3913975	0		=			
ANR	3914133	Identifier	opline		3913975	0					
ANR	3914134	CallExpression	get_next_op ( CG ( active_op_array ) )		3913975	1					
ANR	3914135	Callee	get_next_op		3913975	0					
ANR	3914136	Identifier	get_next_op		3913975	0					
ANR	3914137	ArgumentList	CG ( active_op_array )		3913975	1					
ANR	3914138	Argument	CG ( active_op_array )		3913975	0					
ANR	3914139	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3914140	Callee	CG		3913975	0					
ANR	3914141	Identifier	CG		3913975	0					
ANR	3914142	ArgumentList	active_op_array		3913975	1					
ANR	3914143	Argument	active_op_array		3913975	0					
ANR	3914144	Identifier	active_op_array		3913975	0					
ANR	3914145	ExpressionStatement	opline -> opcode = ZEND_FREE	635:4:18230:18256	3913975	1	True				
ANR	3914146	AssignmentExpression	opline -> opcode = ZEND_FREE		3913975	0		=			
ANR	3914147	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914148	Identifier	opline		3913975	0					
ANR	3914149	Identifier	opcode		3913975	1					
ANR	3914150	Identifier	ZEND_FREE		3913975	1					
ANR	3914151	ExpressionStatement	"SET_NODE ( opline -> op1 , op1 )"	636:4:18262:18288	3913975	2	True				
ANR	3914152	CallExpression	"SET_NODE ( opline -> op1 , op1 )"		3913975	0					
ANR	3914153	Callee	SET_NODE		3913975	0					
ANR	3914154	Identifier	SET_NODE		3913975	0					
ANR	3914155	ArgumentList	opline -> op1		3913975	1					
ANR	3914156	Argument	opline -> op1		3913975	0					
ANR	3914157	PtrMemberAccess	opline -> op1		3913975	0					
ANR	3914158	Identifier	opline		3913975	0					
ANR	3914159	Identifier	op1		3913975	1					
ANR	3914160	Argument	op1		3913975	1					
ANR	3914161	Identifier	op1		3913975	0					
ANR	3914162	ExpressionStatement	SET_UNUSED ( opline -> op2 )	637:4:18294:18317	3913975	3	True				
ANR	3914163	CallExpression	SET_UNUSED ( opline -> op2 )		3913975	0					
ANR	3914164	Callee	SET_UNUSED		3913975	0					
ANR	3914165	Identifier	SET_UNUSED		3913975	0					
ANR	3914166	ArgumentList	opline -> op2		3913975	1					
ANR	3914167	Argument	opline -> op2		3913975	0					
ANR	3914168	PtrMemberAccess	opline -> op2		3913975	0					
ANR	3914169	Identifier	opline		3913975	0					
ANR	3914170	Identifier	op2		3913975	1					
ANR	3914171	ElseStatement	else		3913975	0					
ANR	3914172	CompoundStatement		26:10:937:937	3913975	0					
ANR	3914173	ExpressionStatement	opline -> result_type |= EXT_TYPE_UNUSED	639:4:18335:18373	3913975	0	True				
ANR	3914174	AssignmentExpression	opline -> result_type |= EXT_TYPE_UNUSED		3913975	0		|=			
ANR	3914175	PtrMemberAccess	opline -> result_type		3913975	0					
ANR	3914176	Identifier	opline		3913975	0					
ANR	3914177	Identifier	result_type		3913975	1					
ANR	3914178	Identifier	EXT_TYPE_UNUSED		3913975	1					
ANR	3914179	ElseStatement	else		3913975	0					
ANR	3914180	CompoundStatement		29:9:997:997	3913975	0					
ANR	3914181	WhileStatement	while ( opline >= CG ( active_op_array ) -> opcodes )		3913975	0					
ANR	3914182	Condition	opline >= CG ( active_op_array ) -> opcodes	642:10:18401:18438	3913975	0	True				
ANR	3914183	RelationalExpression	opline >= CG ( active_op_array ) -> opcodes		3913975	0		>=			
ANR	3914184	Identifier	opline		3913975	0					
ANR	3914185	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3913975	1					
ANR	3914186	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3914187	Callee	CG		3913975	0					
ANR	3914188	Identifier	CG		3913975	0					
ANR	3914189	ArgumentList	active_op_array		3913975	1					
ANR	3914190	Argument	active_op_array		3913975	0					
ANR	3914191	Identifier	active_op_array		3913975	0					
ANR	3914192	Identifier	opcodes		3913975	1					
ANR	3914193	CompoundStatement		30:50:1049:1049	3913975	1					
ANR	3914194	IfStatement	if ( opline -> opcode == ZEND_FETCH_LIST && opline -> op1_type == IS_VAR && opline -> op1 . var == op1 -> u . op . var )		3913975	0					
ANR	3914195	Condition	opline -> opcode == ZEND_FETCH_LIST && opline -> op1_type == IS_VAR && opline -> op1 . var == op1 -> u . op . var	643:8:18451:18565	3913975	0	True				
ANR	3914196	AndExpression	opline -> opcode == ZEND_FETCH_LIST && opline -> op1_type == IS_VAR && opline -> op1 . var == op1 -> u . op . var		3913975	0		&&			
ANR	3914197	EqualityExpression	opline -> opcode == ZEND_FETCH_LIST		3913975	0		==			
ANR	3914198	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914199	Identifier	opline		3913975	0					
ANR	3914200	Identifier	opcode		3913975	1					
ANR	3914201	Identifier	ZEND_FETCH_LIST		3913975	1					
ANR	3914202	AndExpression	opline -> op1_type == IS_VAR && opline -> op1 . var == op1 -> u . op . var		3913975	1		&&			
ANR	3914203	EqualityExpression	opline -> op1_type == IS_VAR		3913975	0		==			
ANR	3914204	PtrMemberAccess	opline -> op1_type		3913975	0					
ANR	3914205	Identifier	opline		3913975	0					
ANR	3914206	Identifier	op1_type		3913975	1					
ANR	3914207	Identifier	IS_VAR		3913975	1					
ANR	3914208	EqualityExpression	opline -> op1 . var == op1 -> u . op . var		3913975	1		==			
ANR	3914209	MemberAccess	opline -> op1 . var		3913975	0					
ANR	3914210	PtrMemberAccess	opline -> op1		3913975	0					
ANR	3914211	Identifier	opline		3913975	0					
ANR	3914212	Identifier	op1		3913975	1					
ANR	3914213	Identifier	var		3913975	1					
ANR	3914214	MemberAccess	op1 -> u . op . var		3913975	1					
ANR	3914215	MemberAccess	op1 -> u . op		3913975	0					
ANR	3914216	PtrMemberAccess	op1 -> u		3913975	0					
ANR	3914217	Identifier	op1		3913975	0					
ANR	3914218	Identifier	u		3913975	1					
ANR	3914219	Identifier	op		3913975	1					
ANR	3914220	Identifier	var		3913975	1					
ANR	3914221	CompoundStatement		33:42:1176:1176	3913975	1					
ANR	3914222	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	646:5:18575:18616	3913975	0	True				
ANR	3914223	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3913975	0		=			
ANR	3914224	Identifier	opline		3913975	0					
ANR	3914225	CallExpression	get_next_op ( CG ( active_op_array ) )		3913975	1					
ANR	3914226	Callee	get_next_op		3913975	0					
ANR	3914227	Identifier	get_next_op		3913975	0					
ANR	3914228	ArgumentList	CG ( active_op_array )		3913975	1					
ANR	3914229	Argument	CG ( active_op_array )		3913975	0					
ANR	3914230	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3914231	Callee	CG		3913975	0					
ANR	3914232	Identifier	CG		3913975	0					
ANR	3914233	ArgumentList	active_op_array		3913975	1					
ANR	3914234	Argument	active_op_array		3913975	0					
ANR	3914235	Identifier	active_op_array		3913975	0					
ANR	3914236	ExpressionStatement	opline -> opcode = ZEND_FREE	648:5:18624:18650	3913975	1	True				
ANR	3914237	AssignmentExpression	opline -> opcode = ZEND_FREE		3913975	0		=			
ANR	3914238	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914239	Identifier	opline		3913975	0					
ANR	3914240	Identifier	opcode		3913975	1					
ANR	3914241	Identifier	ZEND_FREE		3913975	1					
ANR	3914242	ExpressionStatement	"SET_NODE ( opline -> op1 , op1 )"	649:5:18657:18683	3913975	2	True				
ANR	3914243	CallExpression	"SET_NODE ( opline -> op1 , op1 )"		3913975	0					
ANR	3914244	Callee	SET_NODE		3913975	0					
ANR	3914245	Identifier	SET_NODE		3913975	0					
ANR	3914246	ArgumentList	opline -> op1		3913975	1					
ANR	3914247	Argument	opline -> op1		3913975	0					
ANR	3914248	PtrMemberAccess	opline -> op1		3913975	0					
ANR	3914249	Identifier	opline		3913975	0					
ANR	3914250	Identifier	op1		3913975	1					
ANR	3914251	Argument	op1		3913975	1					
ANR	3914252	Identifier	op1		3913975	0					
ANR	3914253	ExpressionStatement	SET_UNUSED ( opline -> op2 )	650:5:18690:18713	3913975	3	True				
ANR	3914254	CallExpression	SET_UNUSED ( opline -> op2 )		3913975	0					
ANR	3914255	Callee	SET_UNUSED		3913975	0					
ANR	3914256	Identifier	SET_UNUSED		3913975	0					
ANR	3914257	ArgumentList	opline -> op2		3913975	1					
ANR	3914258	Argument	opline -> op2		3913975	0					
ANR	3914259	PtrMemberAccess	opline -> op2		3913975	0					
ANR	3914260	Identifier	opline		3913975	0					
ANR	3914261	Identifier	op2		3913975	1					
ANR	3914262	ReturnStatement	return ;	651:5:18720:18726	3913975	4	True				
ANR	3914263	IfStatement	if ( opline -> result_type == IS_VAR && opline -> result . var == op1 -> u . op . var )		3913975	1					
ANR	3914264	Condition	opline -> result_type == IS_VAR && opline -> result . var == op1 -> u . op . var	653:8:18742:18812	3913975	0	True				
ANR	3914265	AndExpression	opline -> result_type == IS_VAR && opline -> result . var == op1 -> u . op . var		3913975	0		&&			
ANR	3914266	EqualityExpression	opline -> result_type == IS_VAR		3913975	0		==			
ANR	3914267	PtrMemberAccess	opline -> result_type		3913975	0					
ANR	3914268	Identifier	opline		3913975	0					
ANR	3914269	Identifier	result_type		3913975	1					
ANR	3914270	Identifier	IS_VAR		3913975	1					
ANR	3914271	EqualityExpression	opline -> result . var == op1 -> u . op . var		3913975	1		==			
ANR	3914272	MemberAccess	opline -> result . var		3913975	0					
ANR	3914273	PtrMemberAccess	opline -> result		3913975	0					
ANR	3914274	Identifier	opline		3913975	0					
ANR	3914275	Identifier	result		3913975	1					
ANR	3914276	Identifier	var		3913975	1					
ANR	3914277	MemberAccess	op1 -> u . op . var		3913975	1					
ANR	3914278	MemberAccess	op1 -> u . op		3913975	0					
ANR	3914279	PtrMemberAccess	op1 -> u		3913975	0					
ANR	3914280	Identifier	op1		3913975	0					
ANR	3914281	Identifier	u		3913975	1					
ANR	3914282	Identifier	op		3913975	1					
ANR	3914283	Identifier	var		3913975	1					
ANR	3914284	CompoundStatement		42:45:1423:1423	3913975	1					
ANR	3914285	IfStatement	if ( opline -> opcode == ZEND_NEW )		3913975	0					
ANR	3914286	Condition	opline -> opcode == ZEND_NEW	655:9:18826:18851	3913975	0	True				
ANR	3914287	EqualityExpression	opline -> opcode == ZEND_NEW		3913975	0		==			
ANR	3914288	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914289	Identifier	opline		3913975	0					
ANR	3914290	Identifier	opcode		3913975	1					
ANR	3914291	Identifier	ZEND_NEW		3913975	1					
ANR	3914292	CompoundStatement		43:37:1462:1462	3913975	1					
ANR	3914293	ExpressionStatement	opline -> result_type |= EXT_TYPE_UNUSED	656:6:18862:18900	3913975	0	True				
ANR	3914294	AssignmentExpression	opline -> result_type |= EXT_TYPE_UNUSED		3913975	0		|=			
ANR	3914295	PtrMemberAccess	opline -> result_type		3913975	0					
ANR	3914296	Identifier	opline		3913975	0					
ANR	3914297	Identifier	result_type		3913975	1					
ANR	3914298	Identifier	EXT_TYPE_UNUSED		3913975	1					
ANR	3914299	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]	657:6:18908:18975	3913975	1	True				
ANR	3914300	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3913975	0		=			
ANR	3914301	Identifier	opline		3913975	0					
ANR	3914302	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3913975	1					
ANR	3914303	UnaryOperator	&		3913975	0					
ANR	3914304	ArrayIndexing	CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3913975	1					
ANR	3914305	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3913975	0					
ANR	3914306	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3914307	Callee	CG		3913975	0					
ANR	3914308	Identifier	CG		3913975	0					
ANR	3914309	ArgumentList	active_op_array		3913975	1					
ANR	3914310	Argument	active_op_array		3913975	0					
ANR	3914311	Identifier	active_op_array		3913975	0					
ANR	3914312	Identifier	opcodes		3913975	1					
ANR	3914313	AdditiveExpression	CG ( active_op_array ) -> last - 1		3913975	1		-			
ANR	3914314	PtrMemberAccess	CG ( active_op_array ) -> last		3913975	0					
ANR	3914315	CallExpression	CG ( active_op_array )		3913975	0					
ANR	3914316	Callee	CG		3913975	0					
ANR	3914317	Identifier	CG		3913975	0					
ANR	3914318	ArgumentList	active_op_array		3913975	1					
ANR	3914319	Argument	active_op_array		3913975	0					
ANR	3914320	Identifier	active_op_array		3913975	0					
ANR	3914321	Identifier	last		3913975	1					
ANR	3914322	PrimaryExpression	1		3913975	1					
ANR	3914323	WhileStatement	while ( opline -> opcode != ZEND_DO_FCALL || opline -> op1 . num != ZEND_CALL_CTOR )		3913975	2					
ANR	3914324	Condition	opline -> opcode != ZEND_DO_FCALL || opline -> op1 . num != ZEND_CALL_CTOR	658:13:18990:19057	3913975	0	True				
ANR	3914325	OrExpression	opline -> opcode != ZEND_DO_FCALL || opline -> op1 . num != ZEND_CALL_CTOR		3913975	0		||			
ANR	3914326	EqualityExpression	opline -> opcode != ZEND_DO_FCALL		3913975	0		!=			
ANR	3914327	PtrMemberAccess	opline -> opcode		3913975	0					
ANR	3914328	Identifier	opline		3913975	0					
ANR	3914329	Identifier	opcode		3913975	1					
ANR	3914330	Identifier	ZEND_DO_FCALL		3913975	1					
ANR	3914331	EqualityExpression	opline -> op1 . num != ZEND_CALL_CTOR		3913975	1		!=			
ANR	3914332	MemberAccess	opline -> op1 . num		3913975	0					
ANR	3914333	PtrMemberAccess	opline -> op1		3913975	0					
ANR	3914334	Identifier	opline		3913975	0					
ANR	3914335	Identifier	op1		3913975	1					
ANR	3914336	Identifier	num		3913975	1					
ANR	3914337	Identifier	ZEND_CALL_CTOR		3913975	1					
ANR	3914338	CompoundStatement		46:83:1668:1668	3913975	1					
ANR	3914339	ExpressionStatement	opline --	659:7:19069:19077	3913975	0	True				
ANR	3914340	PostIncDecOperationExpression	opline --		3913975	0					
ANR	3914341	Identifier	opline		3913975	0					
ANR	3914342	IncDec	--		3913975	1					
ANR	3914343	ExpressionStatement	opline -> op1 . num |= ZEND_CALL_CTOR_RESULT_UNUSED	661:6:19093:19140	3913975	3	True				
ANR	3914344	AssignmentExpression	opline -> op1 . num |= ZEND_CALL_CTOR_RESULT_UNUSED		3913975	0		|=			
ANR	3914345	MemberAccess	opline -> op1 . num		3913975	0					
ANR	3914346	PtrMemberAccess	opline -> op1		3913975	0					
ANR	3914347	Identifier	opline		3913975	0					
ANR	3914348	Identifier	op1		3913975	1					
ANR	3914349	Identifier	num		3913975	1					
ANR	3914350	Identifier	ZEND_CALL_CTOR_RESULT_UNUSED		3913975	1					
ANR	3914351	BreakStatement	break ;	663:5:19154:19159	3913975	1	True				
ANR	3914352	ExpressionStatement	opline --	665:4:19171:19179	3913975	2	True				
ANR	3914353	PostIncDecOperationExpression	opline --		3913975	0					
ANR	3914354	Identifier	opline		3913975	0					
ANR	3914355	IncDec	--		3913975	1					
ANR	3914356	ElseStatement	else		3913975	0					
ANR	3914357	IfStatement	if ( op1 -> op_type == IS_CONST )		3913975	0					
ANR	3914358	Condition	op1 -> op_type == IS_CONST	668:12:19202:19225	3913975	0	True				
ANR	3914359	EqualityExpression	op1 -> op_type == IS_CONST		3913975	0		==			
ANR	3914360	PtrMemberAccess	op1 -> op_type		3913975	0					
ANR	3914361	Identifier	op1		3913975	0					
ANR	3914362	Identifier	op_type		3913975	1					
ANR	3914363	Identifier	IS_CONST		3913975	1					
ANR	3914364	CompoundStatement		56:38:1836:1836	3913975	1					
ANR	3914365	ExpressionStatement	zval_ptr_dtor_nogc ( & op1 -> u . constant )	672:2:19470:19506	3913975	0	True				
ANR	3914366	CallExpression	zval_ptr_dtor_nogc ( & op1 -> u . constant )		3913975	0					
ANR	3914367	Callee	zval_ptr_dtor_nogc		3913975	0					
ANR	3914368	Identifier	zval_ptr_dtor_nogc		3913975	0					
ANR	3914369	ArgumentList	& op1 -> u . constant		3913975	1					
ANR	3914370	Argument	& op1 -> u . constant		3913975	0					
ANR	3914371	UnaryOperationExpression	& op1 -> u . constant		3913975	0					
ANR	3914372	UnaryOperator	&		3913975	0					
ANR	3914373	MemberAccess	op1 -> u . constant		3913975	1					
ANR	3914374	PtrMemberAccess	op1 -> u		3913975	0					
ANR	3914375	Identifier	op1		3913975	0					
ANR	3914376	Identifier	u		3913975	1					
ANR	3914377	Identifier	constant		3913975	1					
ANR	3914378	ReturnType	void		3913975	1					
ANR	3914379	Identifier	zend_do_free		3913975	2					
ANR	3914380	ParameterList	znode * op1		3913975	3					
ANR	3914381	Parameter	znode * op1	612:18:17369:17378	3913975	0	True				
ANR	3914382	ParameterType	znode *		3913975	0					
ANR	3914383	Identifier	op1		3913975	1					
ANR	3914384	CFGEntryNode	ENTRY		3913975		True				
ANR	3914385	CFGExitNode	EXIT		3913975		True				
ANR	3914386	Symbol	op1 -> op_type		3913975						
ANR	3914387	Symbol	opline -> op1		3913975						
ANR	3914388	Symbol	ZEND_FREE		3913975						
ANR	3914389	Symbol	opline -> op2		3913975						
ANR	3914390	Symbol	* CG		3913975						
ANR	3914391	Symbol	ZEND_OP_DATA		3913975						
ANR	3914392	Symbol	ZEND_FETCH_LIST		3913975						
ANR	3914393	Symbol	CG ( active_op_array ) -> opcodes		3913975						
ANR	3914394	Symbol	opline -> result		3913975						
ANR	3914395	Symbol	CG ( active_op_array ) -> last		3913975						
ANR	3914396	Symbol	opline		3913975						
ANR	3914397	Symbol	ZEND_CALL_CTOR		3913975						
ANR	3914398	Symbol	ZEND_FETCH_DIM_R		3913975						
ANR	3914399	Symbol	* op1		3913975						
ANR	3914400	Symbol	opline -> op1 . var		3913975						
ANR	3914401	Symbol	EXT_TYPE_UNUSED		3913975						
ANR	3914402	Symbol	ZEND_END_SILENCE		3913975						
ANR	3914403	Symbol	ZEND_NEW		3913975						
ANR	3914404	Symbol	IS_TMP_VAR		3913975						
ANR	3914405	Symbol	opline -> result_type		3913975						
ANR	3914406	Symbol	op1 -> u . op . var		3913975						
ANR	3914407	Symbol	ZEND_FETCH_OBJ_R		3913975						
ANR	3914408	Symbol	IS_CONST		3913975						
ANR	3914409	Symbol	get_next_op		3913975						
ANR	3914410	Symbol	CG		3913975						
ANR	3914411	Symbol	op1 -> u		3913975						
ANR	3914412	Symbol	active_op_array		3913975						
ANR	3914413	Symbol	ZEND_EXT_FCALL_END		3913975						
ANR	3914414	Symbol	ZEND_FETCH_R		3913975						
ANR	3914415	Symbol	ZEND_CALL_CTOR_RESULT_UNUSED		3913975						
ANR	3914416	Symbol	op1 -> u . op		3913975						
ANR	3914417	Symbol	opline -> op1_type		3913975						
ANR	3914418	Symbol	op1		3913975						
ANR	3914419	Symbol	* opline		3913975						
ANR	3914420	Symbol	ZEND_DO_FCALL		3913975						
ANR	3914421	Symbol	opline -> opcode		3913975						
ANR	3914422	Symbol	& op1 -> u		3913975						
ANR	3914423	Symbol	opline -> op1 . num		3913975						
ANR	3914424	Symbol	& op1 -> u . constant		3913975						
ANR	3914425	Symbol	IS_VAR		3913975						
ANR	3914426	Symbol	opline -> result . var		3913975						
ANR	3914427	Function	zend_add_class_modifier	677:0:19524:20188							
ANR	3914428	FunctionDef	"zend_add_class_modifier (uint32_t flags , uint32_t new_flag)"		3914427	0					
ANR	3914429	CompoundStatement		678:0:19602:20188	3914427	0					
ANR	3914430	IdentifierDeclStatement	uint32_t new_flags = flags | new_flag ;	679:1:19605:19642	3914427	0	True				
ANR	3914431	IdentifierDecl	new_flags = flags | new_flag		3914427	0					
ANR	3914432	IdentifierDeclType	uint32_t		3914427	0					
ANR	3914433	Identifier	new_flags		3914427	1					
ANR	3914434	AssignmentExpression	new_flags = flags | new_flag		3914427	2		=			
ANR	3914435	Identifier	new_flags		3914427	0					
ANR	3914436	InclusiveOrExpression	flags | new_flag		3914427	1		|			
ANR	3914437	Identifier	flags		3914427	0					
ANR	3914438	Identifier	new_flag		3914427	1					
ANR	3914439	IfStatement	if ( ( flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) && ( new_flag & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )		3914427	1					
ANR	3914440	Condition	( flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) && ( new_flag & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS )	680:5:19649:19739	3914427	0	True				
ANR	3914441	AndExpression	( flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) && ( new_flag & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS )		3914427	0		&&			
ANR	3914442	BitAndExpression	flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3914427	0		&			
ANR	3914443	Identifier	flags		3914427	0					
ANR	3914444	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3914427	1					
ANR	3914445	BitAndExpression	new_flag & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3914427	1		&			
ANR	3914446	Identifier	new_flag		3914427	0					
ANR	3914447	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3914427	1					
ANR	3914448	CompoundStatement		3:98:139:139	3914427	1					
ANR	3914449	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple abstract modifiers are not allowed"" )"	681:2:19746:19829	3914427	0	True				
ANR	3914450	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple abstract modifiers are not allowed"" )"		3914427	0					
ANR	3914451	Callee	zend_error_noreturn		3914427	0					
ANR	3914452	Identifier	zend_error_noreturn		3914427	0					
ANR	3914453	ArgumentList	E_COMPILE_ERROR		3914427	1					
ANR	3914454	Argument	E_COMPILE_ERROR		3914427	0					
ANR	3914455	Identifier	E_COMPILE_ERROR		3914427	0					
ANR	3914456	Argument	"""Multiple abstract modifiers are not allowed"""		3914427	1					
ANR	3914457	PrimaryExpression	"""Multiple abstract modifiers are not allowed"""		3914427	0					
ANR	3914458	IfStatement	if ( ( flags & ZEND_ACC_FINAL ) && ( new_flag & ZEND_ACC_FINAL ) )		3914427	2					
ANR	3914459	Condition	( flags & ZEND_ACC_FINAL ) && ( new_flag & ZEND_ACC_FINAL )	683:5:19839:19893	3914427	0	True				
ANR	3914460	AndExpression	( flags & ZEND_ACC_FINAL ) && ( new_flag & ZEND_ACC_FINAL )		3914427	0		&&			
ANR	3914461	BitAndExpression	flags & ZEND_ACC_FINAL		3914427	0		&			
ANR	3914462	Identifier	flags		3914427	0					
ANR	3914463	Identifier	ZEND_ACC_FINAL		3914427	1					
ANR	3914464	BitAndExpression	new_flag & ZEND_ACC_FINAL		3914427	1		&			
ANR	3914465	Identifier	new_flag		3914427	0					
ANR	3914466	Identifier	ZEND_ACC_FINAL		3914427	1					
ANR	3914467	CompoundStatement		6:62:293:293	3914427	1					
ANR	3914468	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple final modifiers are not allowed"" )"	684:2:19900:19980	3914427	0	True				
ANR	3914469	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple final modifiers are not allowed"" )"		3914427	0					
ANR	3914470	Callee	zend_error_noreturn		3914427	0					
ANR	3914471	Identifier	zend_error_noreturn		3914427	0					
ANR	3914472	ArgumentList	E_COMPILE_ERROR		3914427	1					
ANR	3914473	Argument	E_COMPILE_ERROR		3914427	0					
ANR	3914474	Identifier	E_COMPILE_ERROR		3914427	0					
ANR	3914475	Argument	"""Multiple final modifiers are not allowed"""		3914427	1					
ANR	3914476	PrimaryExpression	"""Multiple final modifiers are not allowed"""		3914427	0					
ANR	3914477	IfStatement	if ( ( new_flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) && ( new_flags & ZEND_ACC_FINAL ) )		3914427	3					
ANR	3914478	Condition	( new_flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) && ( new_flags & ZEND_ACC_FINAL )	686:5:19990:20067	3914427	0	True				
ANR	3914479	AndExpression	( new_flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) && ( new_flags & ZEND_ACC_FINAL )		3914427	0		&&			
ANR	3914480	BitAndExpression	new_flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3914427	0		&			
ANR	3914481	Identifier	new_flags		3914427	0					
ANR	3914482	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3914427	1					
ANR	3914483	BitAndExpression	new_flags & ZEND_ACC_FINAL		3914427	1		&			
ANR	3914484	Identifier	new_flags		3914427	0					
ANR	3914485	Identifier	ZEND_ACC_FINAL		3914427	1					
ANR	3914486	CompoundStatement		9:85:467:467	3914427	1					
ANR	3914487	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use the final modifier on an abstract class"" )"	687:2:20074:20164	3914427	0	True				
ANR	3914488	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use the final modifier on an abstract class"" )"		3914427	0					
ANR	3914489	Callee	zend_error_noreturn		3914427	0					
ANR	3914490	Identifier	zend_error_noreturn		3914427	0					
ANR	3914491	ArgumentList	E_COMPILE_ERROR		3914427	1					
ANR	3914492	Argument	E_COMPILE_ERROR		3914427	0					
ANR	3914493	Identifier	E_COMPILE_ERROR		3914427	0					
ANR	3914494	Argument	"""Cannot use the final modifier on an abstract class"""		3914427	1					
ANR	3914495	PrimaryExpression	"""Cannot use the final modifier on an abstract class"""		3914427	0					
ANR	3914496	ReturnStatement	return new_flags ;	689:1:20170:20186	3914427	4	True				
ANR	3914497	Identifier	new_flags		3914427	0					
ANR	3914498	ReturnType	uint32_t		3914427	1					
ANR	3914499	Identifier	zend_add_class_modifier		3914427	2					
ANR	3914500	ParameterList	"uint32_t flags , uint32_t new_flag"		3914427	3					
ANR	3914501	Parameter	uint32_t flags	677:33:19557:19570	3914427	0	True				
ANR	3914502	ParameterType	uint32_t		3914427	0					
ANR	3914503	Identifier	flags		3914427	1					
ANR	3914504	Parameter	uint32_t new_flag	677:49:19573:19589	3914427	1	True				
ANR	3914505	ParameterType	uint32_t		3914427	0					
ANR	3914506	Identifier	new_flag		3914427	1					
ANR	3914507	CFGEntryNode	ENTRY		3914427		True				
ANR	3914508	CFGExitNode	EXIT		3914427		True				
ANR	3914509	Symbol	E_COMPILE_ERROR		3914427						
ANR	3914510	Symbol	flags		3914427						
ANR	3914511	Symbol	new_flags		3914427						
ANR	3914512	Symbol	new_flag		3914427						
ANR	3914513	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3914427						
ANR	3914514	Symbol	ZEND_ACC_FINAL		3914427						
ANR	3914515	Function	zend_add_member_modifier	693:0:20201:21145							
ANR	3914516	FunctionDef	"zend_add_member_modifier (uint32_t flags , uint32_t new_flag)"		3914515	0					
ANR	3914517	CompoundStatement		694:0:20280:21145	3914515	0					
ANR	3914518	IdentifierDeclStatement	uint32_t new_flags = flags | new_flag ;	695:1:20283:20320	3914515	0	True				
ANR	3914519	IdentifierDecl	new_flags = flags | new_flag		3914515	0					
ANR	3914520	IdentifierDeclType	uint32_t		3914515	0					
ANR	3914521	Identifier	new_flags		3914515	1					
ANR	3914522	AssignmentExpression	new_flags = flags | new_flag		3914515	2		=			
ANR	3914523	Identifier	new_flags		3914515	0					
ANR	3914524	InclusiveOrExpression	flags | new_flag		3914515	1		|			
ANR	3914525	Identifier	flags		3914515	0					
ANR	3914526	Identifier	new_flag		3914515	1					
ANR	3914527	IfStatement	if ( ( flags & ZEND_ACC_PPP_MASK ) && ( new_flag & ZEND_ACC_PPP_MASK ) )		3914515	1					
ANR	3914528	Condition	( flags & ZEND_ACC_PPP_MASK ) && ( new_flag & ZEND_ACC_PPP_MASK )	696:5:20327:20387	3914515	0	True				
ANR	3914529	AndExpression	( flags & ZEND_ACC_PPP_MASK ) && ( new_flag & ZEND_ACC_PPP_MASK )		3914515	0		&&			
ANR	3914530	BitAndExpression	flags & ZEND_ACC_PPP_MASK		3914515	0		&			
ANR	3914531	Identifier	flags		3914515	0					
ANR	3914532	Identifier	ZEND_ACC_PPP_MASK		3914515	1					
ANR	3914533	BitAndExpression	new_flag & ZEND_ACC_PPP_MASK		3914515	1		&			
ANR	3914534	Identifier	new_flag		3914515	0					
ANR	3914535	Identifier	ZEND_ACC_PPP_MASK		3914515	1					
ANR	3914536	CompoundStatement		3:68:109:109	3914515	1					
ANR	3914537	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple access type modifiers are not allowed"" )"	697:2:20394:20480	3914515	0	True				
ANR	3914538	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple access type modifiers are not allowed"" )"		3914515	0					
ANR	3914539	Callee	zend_error_noreturn		3914515	0					
ANR	3914540	Identifier	zend_error_noreturn		3914515	0					
ANR	3914541	ArgumentList	E_COMPILE_ERROR		3914515	1					
ANR	3914542	Argument	E_COMPILE_ERROR		3914515	0					
ANR	3914543	Identifier	E_COMPILE_ERROR		3914515	0					
ANR	3914544	Argument	"""Multiple access type modifiers are not allowed"""		3914515	1					
ANR	3914545	PrimaryExpression	"""Multiple access type modifiers are not allowed"""		3914515	0					
ANR	3914546	IfStatement	if ( ( flags & ZEND_ACC_ABSTRACT ) && ( new_flag & ZEND_ACC_ABSTRACT ) )		3914515	2					
ANR	3914547	Condition	( flags & ZEND_ACC_ABSTRACT ) && ( new_flag & ZEND_ACC_ABSTRACT )	699:5:20490:20550	3914515	0	True				
ANR	3914548	AndExpression	( flags & ZEND_ACC_ABSTRACT ) && ( new_flag & ZEND_ACC_ABSTRACT )		3914515	0		&&			
ANR	3914549	BitAndExpression	flags & ZEND_ACC_ABSTRACT		3914515	0		&			
ANR	3914550	Identifier	flags		3914515	0					
ANR	3914551	Identifier	ZEND_ACC_ABSTRACT		3914515	1					
ANR	3914552	BitAndExpression	new_flag & ZEND_ACC_ABSTRACT		3914515	1		&			
ANR	3914553	Identifier	new_flag		3914515	0					
ANR	3914554	Identifier	ZEND_ACC_ABSTRACT		3914515	1					
ANR	3914555	CompoundStatement		6:68:272:272	3914515	1					
ANR	3914556	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple abstract modifiers are not allowed"" )"	700:2:20557:20640	3914515	0	True				
ANR	3914557	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple abstract modifiers are not allowed"" )"		3914515	0					
ANR	3914558	Callee	zend_error_noreturn		3914515	0					
ANR	3914559	Identifier	zend_error_noreturn		3914515	0					
ANR	3914560	ArgumentList	E_COMPILE_ERROR		3914515	1					
ANR	3914561	Argument	E_COMPILE_ERROR		3914515	0					
ANR	3914562	Identifier	E_COMPILE_ERROR		3914515	0					
ANR	3914563	Argument	"""Multiple abstract modifiers are not allowed"""		3914515	1					
ANR	3914564	PrimaryExpression	"""Multiple abstract modifiers are not allowed"""		3914515	0					
ANR	3914565	IfStatement	if ( ( flags & ZEND_ACC_STATIC ) && ( new_flag & ZEND_ACC_STATIC ) )		3914515	3					
ANR	3914566	Condition	( flags & ZEND_ACC_STATIC ) && ( new_flag & ZEND_ACC_STATIC )	702:5:20650:20706	3914515	0	True				
ANR	3914567	AndExpression	( flags & ZEND_ACC_STATIC ) && ( new_flag & ZEND_ACC_STATIC )		3914515	0		&&			
ANR	3914568	BitAndExpression	flags & ZEND_ACC_STATIC		3914515	0		&			
ANR	3914569	Identifier	flags		3914515	0					
ANR	3914570	Identifier	ZEND_ACC_STATIC		3914515	1					
ANR	3914571	BitAndExpression	new_flag & ZEND_ACC_STATIC		3914515	1		&			
ANR	3914572	Identifier	new_flag		3914515	0					
ANR	3914573	Identifier	ZEND_ACC_STATIC		3914515	1					
ANR	3914574	CompoundStatement		9:64:428:428	3914515	1					
ANR	3914575	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple static modifiers are not allowed"" )"	703:2:20713:20794	3914515	0	True				
ANR	3914576	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple static modifiers are not allowed"" )"		3914515	0					
ANR	3914577	Callee	zend_error_noreturn		3914515	0					
ANR	3914578	Identifier	zend_error_noreturn		3914515	0					
ANR	3914579	ArgumentList	E_COMPILE_ERROR		3914515	1					
ANR	3914580	Argument	E_COMPILE_ERROR		3914515	0					
ANR	3914581	Identifier	E_COMPILE_ERROR		3914515	0					
ANR	3914582	Argument	"""Multiple static modifiers are not allowed"""		3914515	1					
ANR	3914583	PrimaryExpression	"""Multiple static modifiers are not allowed"""		3914515	0					
ANR	3914584	IfStatement	if ( ( flags & ZEND_ACC_FINAL ) && ( new_flag & ZEND_ACC_FINAL ) )		3914515	4					
ANR	3914585	Condition	( flags & ZEND_ACC_FINAL ) && ( new_flag & ZEND_ACC_FINAL )	705:5:20804:20858	3914515	0	True				
ANR	3914586	AndExpression	( flags & ZEND_ACC_FINAL ) && ( new_flag & ZEND_ACC_FINAL )		3914515	0		&&			
ANR	3914587	BitAndExpression	flags & ZEND_ACC_FINAL		3914515	0		&			
ANR	3914588	Identifier	flags		3914515	0					
ANR	3914589	Identifier	ZEND_ACC_FINAL		3914515	1					
ANR	3914590	BitAndExpression	new_flag & ZEND_ACC_FINAL		3914515	1		&			
ANR	3914591	Identifier	new_flag		3914515	0					
ANR	3914592	Identifier	ZEND_ACC_FINAL		3914515	1					
ANR	3914593	CompoundStatement		12:62:580:580	3914515	1					
ANR	3914594	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple final modifiers are not allowed"" )"	706:2:20865:20945	3914515	0	True				
ANR	3914595	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Multiple final modifiers are not allowed"" )"		3914515	0					
ANR	3914596	Callee	zend_error_noreturn		3914515	0					
ANR	3914597	Identifier	zend_error_noreturn		3914515	0					
ANR	3914598	ArgumentList	E_COMPILE_ERROR		3914515	1					
ANR	3914599	Argument	E_COMPILE_ERROR		3914515	0					
ANR	3914600	Identifier	E_COMPILE_ERROR		3914515	0					
ANR	3914601	Argument	"""Multiple final modifiers are not allowed"""		3914515	1					
ANR	3914602	PrimaryExpression	"""Multiple final modifiers are not allowed"""		3914515	0					
ANR	3914603	IfStatement	if ( ( new_flags & ZEND_ACC_ABSTRACT ) && ( new_flags & ZEND_ACC_FINAL ) )		3914515	5					
ANR	3914604	Condition	( new_flags & ZEND_ACC_ABSTRACT ) && ( new_flags & ZEND_ACC_FINAL )	708:5:20955:21017	3914515	0	True				
ANR	3914605	AndExpression	( new_flags & ZEND_ACC_ABSTRACT ) && ( new_flags & ZEND_ACC_FINAL )		3914515	0		&&			
ANR	3914606	BitAndExpression	new_flags & ZEND_ACC_ABSTRACT		3914515	0		&			
ANR	3914607	Identifier	new_flags		3914515	0					
ANR	3914608	Identifier	ZEND_ACC_ABSTRACT		3914515	1					
ANR	3914609	BitAndExpression	new_flags & ZEND_ACC_FINAL		3914515	1		&			
ANR	3914610	Identifier	new_flags		3914515	0					
ANR	3914611	Identifier	ZEND_ACC_FINAL		3914515	1					
ANR	3914612	CompoundStatement		15:70:739:739	3914515	1					
ANR	3914613	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use the final modifier on an abstract class member"" )"	709:2:21024:21121	3914515	0	True				
ANR	3914614	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use the final modifier on an abstract class member"" )"		3914515	0					
ANR	3914615	Callee	zend_error_noreturn		3914515	0					
ANR	3914616	Identifier	zend_error_noreturn		3914515	0					
ANR	3914617	ArgumentList	E_COMPILE_ERROR		3914515	1					
ANR	3914618	Argument	E_COMPILE_ERROR		3914515	0					
ANR	3914619	Identifier	E_COMPILE_ERROR		3914515	0					
ANR	3914620	Argument	"""Cannot use the final modifier on an abstract class member"""		3914515	1					
ANR	3914621	PrimaryExpression	"""Cannot use the final modifier on an abstract class member"""		3914515	0					
ANR	3914622	ReturnStatement	return new_flags ;	711:1:21127:21143	3914515	6	True				
ANR	3914623	Identifier	new_flags		3914515	0					
ANR	3914624	ReturnType	uint32_t		3914515	1					
ANR	3914625	Identifier	zend_add_member_modifier		3914515	2					
ANR	3914626	ParameterList	"uint32_t flags , uint32_t new_flag"		3914515	3					
ANR	3914627	Parameter	uint32_t flags	693:34:20235:20248	3914515	0	True				
ANR	3914628	ParameterType	uint32_t		3914515	0					
ANR	3914629	Identifier	flags		3914515	1					
ANR	3914630	Parameter	uint32_t new_flag	693:50:20251:20267	3914515	1	True				
ANR	3914631	ParameterType	uint32_t		3914515	0					
ANR	3914632	Identifier	new_flag		3914515	1					
ANR	3914633	CFGEntryNode	ENTRY		3914515		True				
ANR	3914634	CFGExitNode	EXIT		3914515		True				
ANR	3914635	Symbol	ZEND_ACC_ABSTRACT		3914515						
ANR	3914636	Symbol	ZEND_ACC_PPP_MASK		3914515						
ANR	3914637	Symbol	E_COMPILE_ERROR		3914515						
ANR	3914638	Symbol	flags		3914515						
ANR	3914639	Symbol	new_flags		3914515						
ANR	3914640	Symbol	new_flag		3914515						
ANR	3914641	Symbol	ZEND_ACC_STATIC		3914515						
ANR	3914642	Symbol	ZEND_ACC_FINAL		3914515						
ANR	3914643	Function	zend_concat3	715:0:21158:21572							
ANR	3914644	FunctionDef	"zend_concat3 (char * str1 , size_t str1_len , char * str2 , size_t str2_len , char * str3 , size_t str3_len)"		3914643	0					
ANR	3914645	CompoundStatement		716:0:21281:21572	3914643	0					
ANR	3914646	IdentifierDeclStatement	size_t len = str1_len + str2_len + str3_len ;	717:1:21284:21327	3914643	0	True				
ANR	3914647	IdentifierDecl	len = str1_len + str2_len + str3_len		3914643	0					
ANR	3914648	IdentifierDeclType	size_t		3914643	0					
ANR	3914649	Identifier	len		3914643	1					
ANR	3914650	AssignmentExpression	len = str1_len + str2_len + str3_len		3914643	2		=			
ANR	3914651	Identifier	len		3914643	0					
ANR	3914652	AdditiveExpression	str1_len + str2_len + str3_len		3914643	1		+			
ANR	3914653	Identifier	str1_len		3914643	0					
ANR	3914654	AdditiveExpression	str2_len + str3_len		3914643	1		+			
ANR	3914655	Identifier	str2_len		3914643	0					
ANR	3914656	Identifier	str3_len		3914643	1					
ANR	3914657	IdentifierDeclStatement	"zend_string * res = zend_string_alloc ( len , 0 ) ;"	718:1:21330:21374	3914643	1	True				
ANR	3914658	IdentifierDecl	"* res = zend_string_alloc ( len , 0 )"		3914643	0					
ANR	3914659	IdentifierDeclType	zend_string *		3914643	0					
ANR	3914660	Identifier	res		3914643	1					
ANR	3914661	AssignmentExpression	"* res = zend_string_alloc ( len , 0 )"		3914643	2		=			
ANR	3914662	Identifier	res		3914643	0					
ANR	3914663	CallExpression	"zend_string_alloc ( len , 0 )"		3914643	1					
ANR	3914664	Callee	zend_string_alloc		3914643	0					
ANR	3914665	Identifier	zend_string_alloc		3914643	0					
ANR	3914666	ArgumentList	len		3914643	1					
ANR	3914667	Argument	len		3914643	0					
ANR	3914668	Identifier	len		3914643	0					
ANR	3914669	Argument	0		3914643	1					
ANR	3914670	PrimaryExpression	0		3914643	0					
ANR	3914671	ExpressionStatement	"memcpy ( ZSTR_VAL ( res ) , str1 , str1_len )"	720:1:21378:21415	3914643	2	True				
ANR	3914672	CallExpression	"memcpy ( ZSTR_VAL ( res ) , str1 , str1_len )"		3914643	0					
ANR	3914673	Callee	memcpy		3914643	0					
ANR	3914674	Identifier	memcpy		3914643	0					
ANR	3914675	ArgumentList	ZSTR_VAL ( res )		3914643	1					
ANR	3914676	Argument	ZSTR_VAL ( res )		3914643	0					
ANR	3914677	CallExpression	ZSTR_VAL ( res )		3914643	0					
ANR	3914678	Callee	ZSTR_VAL		3914643	0					
ANR	3914679	Identifier	ZSTR_VAL		3914643	0					
ANR	3914680	ArgumentList	res		3914643	1					
ANR	3914681	Argument	res		3914643	0					
ANR	3914682	Identifier	res		3914643	0					
ANR	3914683	Argument	str1		3914643	1					
ANR	3914684	Identifier	str1		3914643	0					
ANR	3914685	Argument	str1_len		3914643	2					
ANR	3914686	Identifier	str1_len		3914643	0					
ANR	3914687	ExpressionStatement	"memcpy ( ZSTR_VAL ( res ) + str1_len , str2 , str2_len )"	721:1:21418:21466	3914643	3	True				
ANR	3914688	CallExpression	"memcpy ( ZSTR_VAL ( res ) + str1_len , str2 , str2_len )"		3914643	0					
ANR	3914689	Callee	memcpy		3914643	0					
ANR	3914690	Identifier	memcpy		3914643	0					
ANR	3914691	ArgumentList	ZSTR_VAL ( res ) + str1_len		3914643	1					
ANR	3914692	Argument	ZSTR_VAL ( res ) + str1_len		3914643	0					
ANR	3914693	AdditiveExpression	ZSTR_VAL ( res ) + str1_len		3914643	0		+			
ANR	3914694	CallExpression	ZSTR_VAL ( res )		3914643	0					
ANR	3914695	Callee	ZSTR_VAL		3914643	0					
ANR	3914696	Identifier	ZSTR_VAL		3914643	0					
ANR	3914697	ArgumentList	res		3914643	1					
ANR	3914698	Argument	res		3914643	0					
ANR	3914699	Identifier	res		3914643	0					
ANR	3914700	Identifier	str1_len		3914643	1					
ANR	3914701	Argument	str2		3914643	1					
ANR	3914702	Identifier	str2		3914643	0					
ANR	3914703	Argument	str2_len		3914643	2					
ANR	3914704	Identifier	str2_len		3914643	0					
ANR	3914705	ExpressionStatement	"memcpy ( ZSTR_VAL ( res ) + str1_len + str2_len , str3 , str3_len )"	722:1:21469:21528	3914643	4	True				
ANR	3914706	CallExpression	"memcpy ( ZSTR_VAL ( res ) + str1_len + str2_len , str3 , str3_len )"		3914643	0					
ANR	3914707	Callee	memcpy		3914643	0					
ANR	3914708	Identifier	memcpy		3914643	0					
ANR	3914709	ArgumentList	ZSTR_VAL ( res ) + str1_len + str2_len		3914643	1					
ANR	3914710	Argument	ZSTR_VAL ( res ) + str1_len + str2_len		3914643	0					
ANR	3914711	AdditiveExpression	ZSTR_VAL ( res ) + str1_len + str2_len		3914643	0		+			
ANR	3914712	CallExpression	ZSTR_VAL ( res )		3914643	0					
ANR	3914713	Callee	ZSTR_VAL		3914643	0					
ANR	3914714	Identifier	ZSTR_VAL		3914643	0					
ANR	3914715	ArgumentList	res		3914643	1					
ANR	3914716	Argument	res		3914643	0					
ANR	3914717	Identifier	res		3914643	0					
ANR	3914718	AdditiveExpression	str1_len + str2_len		3914643	1		+			
ANR	3914719	Identifier	str1_len		3914643	0					
ANR	3914720	Identifier	str2_len		3914643	1					
ANR	3914721	Argument	str3		3914643	1					
ANR	3914722	Identifier	str3		3914643	0					
ANR	3914723	Argument	str3_len		3914643	2					
ANR	3914724	Identifier	str3_len		3914643	0					
ANR	3914725	ExpressionStatement	ZSTR_VAL ( res ) [ len ] = '\\0'	723:1:21531:21556	3914643	5	True				
ANR	3914726	AssignmentExpression	ZSTR_VAL ( res ) [ len ] = '\\0'		3914643	0		=			
ANR	3914727	ArrayIndexing	ZSTR_VAL ( res ) [ len ]		3914643	0					
ANR	3914728	CallExpression	ZSTR_VAL ( res )		3914643	0					
ANR	3914729	Callee	ZSTR_VAL		3914643	0					
ANR	3914730	Identifier	ZSTR_VAL		3914643	0					
ANR	3914731	ArgumentList	res		3914643	1					
ANR	3914732	Argument	res		3914643	0					
ANR	3914733	Identifier	res		3914643	0					
ANR	3914734	Identifier	len		3914643	1					
ANR	3914735	PrimaryExpression	'\\0'		3914643	1					
ANR	3914736	ReturnStatement	return res ;	725:1:21560:21570	3914643	6	True				
ANR	3914737	Identifier	res		3914643	0					
ANR	3914738	ReturnType	zend_string *		3914643	1					
ANR	3914739	Identifier	zend_concat3		3914643	2					
ANR	3914740	ParameterList	"char * str1 , size_t str1_len , char * str2 , size_t str2_len , char * str3 , size_t str3_len"		3914643	3					
ANR	3914741	Parameter	char * str1	715:26:21184:21193	3914643	0	True				
ANR	3914742	ParameterType	char *		3914643	0					
ANR	3914743	Identifier	str1		3914643	1					
ANR	3914744	Parameter	size_t str1_len	715:38:21196:21210	3914643	1	True				
ANR	3914745	ParameterType	size_t		3914643	0					
ANR	3914746	Identifier	str1_len		3914643	1					
ANR	3914747	Parameter	char * str2	715:55:21213:21222	3914643	2	True				
ANR	3914748	ParameterType	char *		3914643	0					
ANR	3914749	Identifier	str2		3914643	1					
ANR	3914750	Parameter	size_t str2_len	715:67:21225:21239	3914643	3	True				
ANR	3914751	ParameterType	size_t		3914643	0					
ANR	3914752	Identifier	str2_len		3914643	1					
ANR	3914753	Parameter	char * str3	715:84:21242:21251	3914643	4	True				
ANR	3914754	ParameterType	char *		3914643	0					
ANR	3914755	Identifier	str3		3914643	1					
ANR	3914756	Parameter	size_t str3_len	715:96:21254:21268	3914643	5	True				
ANR	3914757	ParameterType	size_t		3914643	0					
ANR	3914758	Identifier	str3_len		3914643	1					
ANR	3914759	CFGEntryNode	ENTRY		3914643		True				
ANR	3914760	CFGExitNode	EXIT		3914643		True				
ANR	3914761	Symbol	res		3914643						
ANR	3914762	Symbol	zend_string_alloc		3914643						
ANR	3914763	Symbol	str3		3914643						
ANR	3914764	Symbol	len		3914643						
ANR	3914765	Symbol	str3_len		3914643						
ANR	3914766	Symbol	str1		3914643						
ANR	3914767	Symbol	str1_len		3914643						
ANR	3914768	Symbol	str2		3914643						
ANR	3914769	Symbol	str2_len		3914643						
ANR	3914770	Symbol	ZSTR_VAL		3914643						
ANR	3914771	Symbol	* ZSTR_VAL		3914643						
ANR	3914772	Symbol	* len		3914643						
ANR	3914773	Function	zend_concat_names	728:0:21575:21737							
ANR	3914774	FunctionDef	"zend_concat_names (char * name1 , size_t name1_len , char * name2 , size_t name2_len)"		3914773	0					
ANR	3914775	CompoundStatement		728:93:21668:21737	3914773	0					
ANR	3914776	ReturnStatement	"return zend_concat3 ( name1 , name1_len , ""\\\\"" , 1 , name2 , name2_len ) ;"	729:1:21671:21735	3914773	0	True				
ANR	3914777	CallExpression	"zend_concat3 ( name1 , name1_len , ""\\\\"" , 1 , name2 , name2_len )"		3914773	0					
ANR	3914778	Callee	zend_concat3		3914773	0					
ANR	3914779	Identifier	zend_concat3		3914773	0					
ANR	3914780	ArgumentList	name1		3914773	1					
ANR	3914781	Argument	name1		3914773	0					
ANR	3914782	Identifier	name1		3914773	0					
ANR	3914783	Argument	name1_len		3914773	1					
ANR	3914784	Identifier	name1_len		3914773	0					
ANR	3914785	Argument	"""\\\\"""		3914773	2					
ANR	3914786	PrimaryExpression	"""\\\\"""		3914773	0					
ANR	3914787	Argument	1		3914773	3					
ANR	3914788	PrimaryExpression	1		3914773	0					
ANR	3914789	Argument	name2		3914773	4					
ANR	3914790	Identifier	name2		3914773	0					
ANR	3914791	Argument	name2_len		3914773	5					
ANR	3914792	Identifier	name2_len		3914773	0					
ANR	3914793	ReturnType	zend_string *		3914773	1					
ANR	3914794	Identifier	zend_concat_names		3914773	2					
ANR	3914795	ParameterList	"char * name1 , size_t name1_len , char * name2 , size_t name2_len"		3914773	3					
ANR	3914796	Parameter	char * name1	728:31:21606:21616	3914773	0	True				
ANR	3914797	ParameterType	char *		3914773	0					
ANR	3914798	Identifier	name1		3914773	1					
ANR	3914799	Parameter	size_t name1_len	728:44:21619:21634	3914773	1	True				
ANR	3914800	ParameterType	size_t		3914773	0					
ANR	3914801	Identifier	name1_len		3914773	1					
ANR	3914802	Parameter	char * name2	728:62:21637:21647	3914773	2	True				
ANR	3914803	ParameterType	char *		3914773	0					
ANR	3914804	Identifier	name2		3914773	1					
ANR	3914805	Parameter	size_t name2_len	728:75:21650:21665	3914773	3	True				
ANR	3914806	ParameterType	size_t		3914773	0					
ANR	3914807	Identifier	name2_len		3914773	1					
ANR	3914808	CFGEntryNode	ENTRY		3914773		True				
ANR	3914809	CFGExitNode	EXIT		3914773		True				
ANR	3914810	Symbol	name1_len		3914773						
ANR	3914811	Symbol	name2_len		3914773						
ANR	3914812	Symbol	name2		3914773						
ANR	3914813	Symbol	name1		3914773						
ANR	3914814	Symbol	zend_concat3		3914773						
ANR	3914815	Function	zend_prefix_with_ns	732:0:21740:22001							
ANR	3914816	FunctionDef	zend_prefix_with_ns (zend_string * name)		3914815	0					
ANR	3914817	CompoundStatement		732:52:21792:22001	3914815	0					
ANR	3914818	IfStatement	if ( FC ( current_namespace ) )		3914815	0					
ANR	3914819	Condition	FC ( current_namespace )	733:5:21799:21819	3914815	0	True				
ANR	3914820	CallExpression	FC ( current_namespace )		3914815	0					
ANR	3914821	Callee	FC		3914815	0					
ANR	3914822	Identifier	FC		3914815	0					
ANR	3914823	ArgumentList	current_namespace		3914815	1					
ANR	3914824	Argument	current_namespace		3914815	0					
ANR	3914825	Identifier	current_namespace		3914815	0					
ANR	3914826	CompoundStatement		3:2:33:72	3914815	1					
ANR	3914827	IdentifierDeclStatement	zend_string * ns = FC ( current_namespace ) ;	734:2:21826:21865	3914815	0	True				
ANR	3914828	IdentifierDecl	* ns = FC ( current_namespace )		3914815	0					
ANR	3914829	IdentifierDeclType	zend_string *		3914815	0					
ANR	3914830	Identifier	ns		3914815	1					
ANR	3914831	AssignmentExpression	* ns = FC ( current_namespace )		3914815	2		=			
ANR	3914832	Identifier	ns		3914815	0					
ANR	3914833	CallExpression	FC ( current_namespace )		3914815	1					
ANR	3914834	Callee	FC		3914815	0					
ANR	3914835	Identifier	FC		3914815	0					
ANR	3914836	ArgumentList	current_namespace		3914815	1					
ANR	3914837	Argument	current_namespace		3914815	0					
ANR	3914838	Identifier	current_namespace		3914815	0					
ANR	3914839	ReturnStatement	"return zend_concat_names ( ZSTR_VAL ( ns ) , ZSTR_LEN ( ns ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) ;"	735:2:21869:21953	3914815	1	True				
ANR	3914840	CallExpression	"zend_concat_names ( ZSTR_VAL ( ns ) , ZSTR_LEN ( ns ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3914815	0					
ANR	3914841	Callee	zend_concat_names		3914815	0					
ANR	3914842	Identifier	zend_concat_names		3914815	0					
ANR	3914843	ArgumentList	ZSTR_VAL ( ns )		3914815	1					
ANR	3914844	Argument	ZSTR_VAL ( ns )		3914815	0					
ANR	3914845	CallExpression	ZSTR_VAL ( ns )		3914815	0					
ANR	3914846	Callee	ZSTR_VAL		3914815	0					
ANR	3914847	Identifier	ZSTR_VAL		3914815	0					
ANR	3914848	ArgumentList	ns		3914815	1					
ANR	3914849	Argument	ns		3914815	0					
ANR	3914850	Identifier	ns		3914815	0					
ANR	3914851	Argument	ZSTR_LEN ( ns )		3914815	1					
ANR	3914852	CallExpression	ZSTR_LEN ( ns )		3914815	0					
ANR	3914853	Callee	ZSTR_LEN		3914815	0					
ANR	3914854	Identifier	ZSTR_LEN		3914815	0					
ANR	3914855	ArgumentList	ns		3914815	1					
ANR	3914856	Argument	ns		3914815	0					
ANR	3914857	Identifier	ns		3914815	0					
ANR	3914858	Argument	ZSTR_VAL ( name )		3914815	2					
ANR	3914859	CallExpression	ZSTR_VAL ( name )		3914815	0					
ANR	3914860	Callee	ZSTR_VAL		3914815	0					
ANR	3914861	Identifier	ZSTR_VAL		3914815	0					
ANR	3914862	ArgumentList	name		3914815	1					
ANR	3914863	Argument	name		3914815	0					
ANR	3914864	Identifier	name		3914815	0					
ANR	3914865	Argument	ZSTR_LEN ( name )		3914815	3					
ANR	3914866	CallExpression	ZSTR_LEN ( name )		3914815	0					
ANR	3914867	Callee	ZSTR_LEN		3914815	0					
ANR	3914868	Identifier	ZSTR_LEN		3914815	0					
ANR	3914869	ArgumentList	name		3914815	1					
ANR	3914870	Argument	name		3914815	0					
ANR	3914871	Identifier	name		3914815	0					
ANR	3914872	ElseStatement	else		3914815	0					
ANR	3914873	CompoundStatement		5:8:170:170	3914815	0					
ANR	3914874	ReturnStatement	return zend_string_copy ( name ) ;	737:2:21967:21996	3914815	0	True				
ANR	3914875	CallExpression	zend_string_copy ( name )		3914815	0					
ANR	3914876	Callee	zend_string_copy		3914815	0					
ANR	3914877	Identifier	zend_string_copy		3914815	0					
ANR	3914878	ArgumentList	name		3914815	1					
ANR	3914879	Argument	name		3914815	0					
ANR	3914880	Identifier	name		3914815	0					
ANR	3914881	ReturnType	zend_string *		3914815	1					
ANR	3914882	Identifier	zend_prefix_with_ns		3914815	2					
ANR	3914883	ParameterList	zend_string * name		3914815	3					
ANR	3914884	Parameter	zend_string * name	732:33:21773:21789	3914815	0	True				
ANR	3914885	ParameterType	zend_string *		3914815	0					
ANR	3914886	Identifier	name		3914815	1					
ANR	3914887	CFGEntryNode	ENTRY		3914815		True				
ANR	3914888	CFGExitNode	EXIT		3914815		True				
ANR	3914889	Symbol	zend_concat_names		3914815						
ANR	3914890	Symbol	current_namespace		3914815						
ANR	3914891	Symbol	ns		3914815						
ANR	3914892	Symbol	name		3914815						
ANR	3914893	Symbol	ZSTR_LEN		3914815						
ANR	3914894	Symbol	zend_string_copy		3914815						
ANR	3914895	Symbol	FC		3914815						
ANR	3914896	Symbol	ZSTR_VAL		3914815						
ANR	3914897	Function	zend_hash_find_ptr_lc	741:0:22004:22331							
ANR	3914898	FunctionDef	"zend_hash_find_ptr_lc (HashTable * ht , const char * str , size_t len)"		3914897	0					
ANR	3914899	CompoundStatement		741:72:22076:22331	3914897	0					
ANR	3914900	IdentifierDeclStatement	void * result ;	742:1:22079:22091	3914897	0	True				
ANR	3914901	IdentifierDecl	* result		3914897	0					
ANR	3914902	IdentifierDeclType	void *		3914897	0					
ANR	3914903	Identifier	result		3914897	1					
ANR	3914904	IdentifierDeclStatement	zend_string * lcname ;	743:1:22094:22113	3914897	1	True				
ANR	3914905	IdentifierDecl	* lcname		3914897	0					
ANR	3914906	IdentifierDeclType	zend_string *		3914897	0					
ANR	3914907	Identifier	lcname		3914897	1					
ANR	3914908	ExpressionStatement	ALLOCA_FLAG ( use_heap )	744:1:22116:22137	3914897	2	True				
ANR	3914909	CallExpression	ALLOCA_FLAG ( use_heap )		3914897	0					
ANR	3914910	Callee	ALLOCA_FLAG		3914897	0					
ANR	3914911	Identifier	ALLOCA_FLAG		3914897	0					
ANR	3914912	ArgumentList	use_heap		3914897	1					
ANR	3914913	Argument	use_heap		3914897	0					
ANR	3914914	Identifier	use_heap		3914897	0					
ANR	3914915	ExpressionStatement	"ZSTR_ALLOCA_ALLOC ( lcname , len , use_heap )"	746:1:22141:22181	3914897	3	True				
ANR	3914916	CallExpression	"ZSTR_ALLOCA_ALLOC ( lcname , len , use_heap )"		3914897	0					
ANR	3914917	Callee	ZSTR_ALLOCA_ALLOC		3914897	0					
ANR	3914918	Identifier	ZSTR_ALLOCA_ALLOC		3914897	0					
ANR	3914919	ArgumentList	lcname		3914897	1					
ANR	3914920	Argument	lcname		3914897	0					
ANR	3914921	Identifier	lcname		3914897	0					
ANR	3914922	Argument	len		3914897	1					
ANR	3914923	Identifier	len		3914897	0					
ANR	3914924	Argument	use_heap		3914897	2					
ANR	3914925	Identifier	use_heap		3914897	0					
ANR	3914926	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , str , len )"	747:1:22184:22233	3914897	4	True				
ANR	3914927	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , str , len )"		3914897	0					
ANR	3914928	Callee	zend_str_tolower_copy		3914897	0					
ANR	3914929	Identifier	zend_str_tolower_copy		3914897	0					
ANR	3914930	ArgumentList	ZSTR_VAL ( lcname )		3914897	1					
ANR	3914931	Argument	ZSTR_VAL ( lcname )		3914897	0					
ANR	3914932	CallExpression	ZSTR_VAL ( lcname )		3914897	0					
ANR	3914933	Callee	ZSTR_VAL		3914897	0					
ANR	3914934	Identifier	ZSTR_VAL		3914897	0					
ANR	3914935	ArgumentList	lcname		3914897	1					
ANR	3914936	Argument	lcname		3914897	0					
ANR	3914937	Identifier	lcname		3914897	0					
ANR	3914938	Argument	str		3914897	1					
ANR	3914939	Identifier	str		3914897	0					
ANR	3914940	Argument	len		3914897	2					
ANR	3914941	Identifier	len		3914897	0					
ANR	3914942	ExpressionStatement	"result = zend_hash_find_ptr ( ht , lcname )"	748:1:22236:22275	3914897	5	True				
ANR	3914943	AssignmentExpression	"result = zend_hash_find_ptr ( ht , lcname )"		3914897	0		=			
ANR	3914944	Identifier	result		3914897	0					
ANR	3914945	CallExpression	"zend_hash_find_ptr ( ht , lcname )"		3914897	1					
ANR	3914946	Callee	zend_hash_find_ptr		3914897	0					
ANR	3914947	Identifier	zend_hash_find_ptr		3914897	0					
ANR	3914948	ArgumentList	ht		3914897	1					
ANR	3914949	Argument	ht		3914897	0					
ANR	3914950	Identifier	ht		3914897	0					
ANR	3914951	Argument	lcname		3914897	1					
ANR	3914952	Identifier	lcname		3914897	0					
ANR	3914953	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lcname , use_heap )"	749:1:22278:22312	3914897	6	True				
ANR	3914954	CallExpression	"ZSTR_ALLOCA_FREE ( lcname , use_heap )"		3914897	0					
ANR	3914955	Callee	ZSTR_ALLOCA_FREE		3914897	0					
ANR	3914956	Identifier	ZSTR_ALLOCA_FREE		3914897	0					
ANR	3914957	ArgumentList	lcname		3914897	1					
ANR	3914958	Argument	lcname		3914897	0					
ANR	3914959	Identifier	lcname		3914897	0					
ANR	3914960	Argument	use_heap		3914897	1					
ANR	3914961	Identifier	use_heap		3914897	0					
ANR	3914962	ReturnStatement	return result ;	751:1:22316:22329	3914897	7	True				
ANR	3914963	Identifier	result		3914897	0					
ANR	3914964	ReturnType	void *		3914897	1					
ANR	3914965	Identifier	zend_hash_find_ptr_lc		3914897	2					
ANR	3914966	ParameterList	"HashTable * ht , const char * str , size_t len"		3914897	3					
ANR	3914967	Parameter	HashTable * ht	741:28:22032:22044	3914897	0	True				
ANR	3914968	ParameterType	HashTable *		3914897	0					
ANR	3914969	Identifier	ht		3914897	1					
ANR	3914970	Parameter	const char * str	741:43:22047:22061	3914897	1	True				
ANR	3914971	ParameterType	const char *		3914897	0					
ANR	3914972	Identifier	str		3914897	1					
ANR	3914973	Parameter	size_t len	741:60:22064:22073	3914897	2	True				
ANR	3914974	ParameterType	size_t		3914897	0					
ANR	3914975	Identifier	len		3914897	1					
ANR	3914976	CFGEntryNode	ENTRY		3914897		True				
ANR	3914977	CFGExitNode	EXIT		3914897		True				
ANR	3914978	Symbol	str		3914897						
ANR	3914979	Symbol	result		3914897						
ANR	3914980	Symbol	lcname		3914897						
ANR	3914981	Symbol	len		3914897						
ANR	3914982	Symbol	ht		3914897						
ANR	3914983	Symbol	zend_hash_find_ptr		3914897						
ANR	3914984	Symbol	use_heap		3914897						
ANR	3914985	Symbol	ZSTR_VAL		3914897						
ANR	3914986	Function	zend_resolve_non_class_name	754:0:22334:23885							
ANR	3914987	FunctionDef	"zend_resolve_non_class_name (zend_string * name , uint32_t type , zend_bool * is_fully_qualified , zend_bool case_sensitive , HashTable * current_import_sub)"		3914986	0					
ANR	3914988	CompoundStatement		757:2:22501:23885	3914986	0					
ANR	3914989	IdentifierDeclStatement	char * compound ;	758:1:22504:22518	3914986	0	True				
ANR	3914990	IdentifierDecl	* compound		3914986	0					
ANR	3914991	IdentifierDeclType	char *		3914986	0					
ANR	3914992	Identifier	compound		3914986	1					
ANR	3914993	ExpressionStatement	* is_fully_qualified = 0	759:1:22521:22544	3914986	1	True				
ANR	3914994	AssignmentExpression	* is_fully_qualified = 0		3914986	0		=			
ANR	3914995	UnaryOperationExpression	* is_fully_qualified		3914986	0					
ANR	3914996	UnaryOperator	*		3914986	0					
ANR	3914997	Identifier	is_fully_qualified		3914986	1					
ANR	3914998	PrimaryExpression	0		3914986	1					
ANR	3914999	IfStatement	if ( ZSTR_VAL ( name ) [ 0 ] == '\\\\' )		3914986	2					
ANR	3915000	Condition	ZSTR_VAL ( name ) [ 0 ] == '\\\\'	761:5:22552:22576	3914986	0	True				
ANR	3915001	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] == '\\\\'		3914986	0		==			
ANR	3915002	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		3914986	0					
ANR	3915003	CallExpression	ZSTR_VAL ( name )		3914986	0					
ANR	3915004	Callee	ZSTR_VAL		3914986	0					
ANR	3915005	Identifier	ZSTR_VAL		3914986	0					
ANR	3915006	ArgumentList	name		3914986	1					
ANR	3915007	Argument	name		3914986	0					
ANR	3915008	Identifier	name		3914986	0					
ANR	3915009	PrimaryExpression	0		3914986	1					
ANR	3915010	PrimaryExpression	'\\\\'		3914986	1					
ANR	3915011	CompoundStatement		5:32:77:77	3914986	1					
ANR	3915012	ReturnStatement	"return zend_string_init ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 , 0 ) ;"	763:2:22663:22729	3914986	0	True				
ANR	3915013	CallExpression	"zend_string_init ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 , 0 )"		3914986	0					
ANR	3915014	Callee	zend_string_init		3914986	0					
ANR	3915015	Identifier	zend_string_init		3914986	0					
ANR	3915016	ArgumentList	ZSTR_VAL ( name ) + 1		3914986	1					
ANR	3915017	Argument	ZSTR_VAL ( name ) + 1		3914986	0					
ANR	3915018	AdditiveExpression	ZSTR_VAL ( name ) + 1		3914986	0		+			
ANR	3915019	CallExpression	ZSTR_VAL ( name )		3914986	0					
ANR	3915020	Callee	ZSTR_VAL		3914986	0					
ANR	3915021	Identifier	ZSTR_VAL		3914986	0					
ANR	3915022	ArgumentList	name		3914986	1					
ANR	3915023	Argument	name		3914986	0					
ANR	3915024	Identifier	name		3914986	0					
ANR	3915025	PrimaryExpression	1		3914986	1					
ANR	3915026	Argument	ZSTR_LEN ( name ) - 1		3914986	1					
ANR	3915027	AdditiveExpression	ZSTR_LEN ( name ) - 1		3914986	0		-			
ANR	3915028	CallExpression	ZSTR_LEN ( name )		3914986	0					
ANR	3915029	Callee	ZSTR_LEN		3914986	0					
ANR	3915030	Identifier	ZSTR_LEN		3914986	0					
ANR	3915031	ArgumentList	name		3914986	1					
ANR	3915032	Argument	name		3914986	0					
ANR	3915033	Identifier	name		3914986	0					
ANR	3915034	PrimaryExpression	1		3914986	1					
ANR	3915035	Argument	0		3914986	2					
ANR	3915036	PrimaryExpression	0		3914986	0					
ANR	3915037	IfStatement	if ( type == ZEND_NAME_FQ )		3914986	3					
ANR	3915038	Condition	type == ZEND_NAME_FQ	766:5:22740:22759	3914986	0	True				
ANR	3915039	EqualityExpression	type == ZEND_NAME_FQ		3914986	0		==			
ANR	3915040	Identifier	type		3914986	0					
ANR	3915041	Identifier	ZEND_NAME_FQ		3914986	1					
ANR	3915042	CompoundStatement		10:27:260:260	3914986	1					
ANR	3915043	ExpressionStatement	* is_fully_qualified = 1	767:2:22766:22789	3914986	0	True				
ANR	3915044	AssignmentExpression	* is_fully_qualified = 1		3914986	0		=			
ANR	3915045	UnaryOperationExpression	* is_fully_qualified		3914986	0					
ANR	3915046	UnaryOperator	*		3914986	0					
ANR	3915047	Identifier	is_fully_qualified		3914986	1					
ANR	3915048	PrimaryExpression	1		3914986	1					
ANR	3915049	ReturnStatement	return zend_string_copy ( name ) ;	768:2:22793:22822	3914986	1	True				
ANR	3915050	CallExpression	zend_string_copy ( name )		3914986	0					
ANR	3915051	Callee	zend_string_copy		3914986	0					
ANR	3915052	Identifier	zend_string_copy		3914986	0					
ANR	3915053	ArgumentList	name		3914986	1					
ANR	3915054	Argument	name		3914986	0					
ANR	3915055	Identifier	name		3914986	0					
ANR	3915056	IfStatement	if ( type == ZEND_NAME_RELATIVE )		3914986	4					
ANR	3915057	Condition	type == ZEND_NAME_RELATIVE	771:5:22833:22858	3914986	0	True				
ANR	3915058	EqualityExpression	type == ZEND_NAME_RELATIVE		3914986	0		==			
ANR	3915059	Identifier	type		3914986	0					
ANR	3915060	Identifier	ZEND_NAME_RELATIVE		3914986	1					
ANR	3915061	CompoundStatement		15:33:359:359	3914986	1					
ANR	3915062	ExpressionStatement	* is_fully_qualified = 1	772:2:22865:22888	3914986	0	True				
ANR	3915063	AssignmentExpression	* is_fully_qualified = 1		3914986	0		=			
ANR	3915064	UnaryOperationExpression	* is_fully_qualified		3914986	0					
ANR	3915065	UnaryOperator	*		3914986	0					
ANR	3915066	Identifier	is_fully_qualified		3914986	1					
ANR	3915067	PrimaryExpression	1		3914986	1					
ANR	3915068	ReturnStatement	return zend_prefix_with_ns ( name ) ;	773:2:22892:22924	3914986	1	True				
ANR	3915069	CallExpression	zend_prefix_with_ns ( name )		3914986	0					
ANR	3915070	Callee	zend_prefix_with_ns		3914986	0					
ANR	3915071	Identifier	zend_prefix_with_ns		3914986	0					
ANR	3915072	ArgumentList	name		3914986	1					
ANR	3915073	Argument	name		3914986	0					
ANR	3915074	Identifier	name		3914986	0					
ANR	3915075	IfStatement	if ( current_import_sub )		3914986	5					
ANR	3915076	Condition	current_import_sub	776:5:22935:22952	3914986	0	True				
ANR	3915077	Identifier	current_import_sub		3914986	0					
ANR	3915078	CompoundStatement		22:2:527:551	3914986	1					
ANR	3915079	IdentifierDeclStatement	zend_string * import_name ;	778:2:23029:23053	3914986	0	True				
ANR	3915080	IdentifierDecl	* import_name		3914986	0					
ANR	3915081	IdentifierDeclType	zend_string *		3914986	0					
ANR	3915082	Identifier	import_name		3914986	1					
ANR	3915083	IfStatement	if ( case_sensitive )		3914986	1					
ANR	3915084	Condition	case_sensitive	779:6:23061:23074	3914986	0	True				
ANR	3915085	Identifier	case_sensitive		3914986	0					
ANR	3915086	CompoundStatement		23:22:575:575	3914986	1					
ANR	3915087	ExpressionStatement	"import_name = zend_hash_find_ptr ( current_import_sub , name )"	780:3:23082:23140	3914986	0	True				
ANR	3915088	AssignmentExpression	"import_name = zend_hash_find_ptr ( current_import_sub , name )"		3914986	0		=			
ANR	3915089	Identifier	import_name		3914986	0					
ANR	3915090	CallExpression	"zend_hash_find_ptr ( current_import_sub , name )"		3914986	1					
ANR	3915091	Callee	zend_hash_find_ptr		3914986	0					
ANR	3915092	Identifier	zend_hash_find_ptr		3914986	0					
ANR	3915093	ArgumentList	current_import_sub		3914986	1					
ANR	3915094	Argument	current_import_sub		3914986	0					
ANR	3915095	Identifier	current_import_sub		3914986	0					
ANR	3915096	Argument	name		3914986	1					
ANR	3915097	Identifier	name		3914986	0					
ANR	3915098	ElseStatement	else		3914986	0					
ANR	3915099	CompoundStatement		25:9:649:649	3914986	0					
ANR	3915100	ExpressionStatement	"import_name = zend_hash_find_ptr_lc ( current_import_sub , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"	782:3:23156:23243	3914986	0	True				
ANR	3915101	AssignmentExpression	"import_name = zend_hash_find_ptr_lc ( current_import_sub , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3914986	0		=			
ANR	3915102	Identifier	import_name		3914986	0					
ANR	3915103	CallExpression	"zend_hash_find_ptr_lc ( current_import_sub , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3914986	1					
ANR	3915104	Callee	zend_hash_find_ptr_lc		3914986	0					
ANR	3915105	Identifier	zend_hash_find_ptr_lc		3914986	0					
ANR	3915106	ArgumentList	current_import_sub		3914986	1					
ANR	3915107	Argument	current_import_sub		3914986	0					
ANR	3915108	Identifier	current_import_sub		3914986	0					
ANR	3915109	Argument	ZSTR_VAL ( name )		3914986	1					
ANR	3915110	CallExpression	ZSTR_VAL ( name )		3914986	0					
ANR	3915111	Callee	ZSTR_VAL		3914986	0					
ANR	3915112	Identifier	ZSTR_VAL		3914986	0					
ANR	3915113	ArgumentList	name		3914986	1					
ANR	3915114	Argument	name		3914986	0					
ANR	3915115	Identifier	name		3914986	0					
ANR	3915116	Argument	ZSTR_LEN ( name )		3914986	2					
ANR	3915117	CallExpression	ZSTR_LEN ( name )		3914986	0					
ANR	3915118	Callee	ZSTR_LEN		3914986	0					
ANR	3915119	Identifier	ZSTR_LEN		3914986	0					
ANR	3915120	ArgumentList	name		3914986	1					
ANR	3915121	Argument	name		3914986	0					
ANR	3915122	Identifier	name		3914986	0					
ANR	3915123	IfStatement	if ( import_name )		3914986	2					
ANR	3915124	Condition	import_name	785:6:23256:23266	3914986	0	True				
ANR	3915125	Identifier	import_name		3914986	0					
ANR	3915126	CompoundStatement		29:19:767:767	3914986	1					
ANR	3915127	ExpressionStatement	* is_fully_qualified = 1	786:3:23274:23297	3914986	0	True				
ANR	3915128	AssignmentExpression	* is_fully_qualified = 1		3914986	0		=			
ANR	3915129	UnaryOperationExpression	* is_fully_qualified		3914986	0					
ANR	3915130	UnaryOperator	*		3914986	0					
ANR	3915131	Identifier	is_fully_qualified		3914986	1					
ANR	3915132	PrimaryExpression	1		3914986	1					
ANR	3915133	ReturnStatement	return zend_string_copy ( import_name ) ;	787:3:23302:23338	3914986	1	True				
ANR	3915134	CallExpression	zend_string_copy ( import_name )		3914986	0					
ANR	3915135	Callee	zend_string_copy		3914986	0					
ANR	3915136	Identifier	zend_string_copy		3914986	0					
ANR	3915137	ArgumentList	import_name		3914986	1					
ANR	3915138	Argument	import_name		3914986	0					
ANR	3915139	Identifier	import_name		3914986	0					
ANR	3915140	ExpressionStatement	"compound = memchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"	791:1:23349:23404	3914986	6	True				
ANR	3915141	AssignmentExpression	"compound = memchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3914986	0		=			
ANR	3915142	Identifier	compound		3914986	0					
ANR	3915143	CallExpression	"memchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3914986	1					
ANR	3915144	Callee	memchr		3914986	0					
ANR	3915145	Identifier	memchr		3914986	0					
ANR	3915146	ArgumentList	ZSTR_VAL ( name )		3914986	1					
ANR	3915147	Argument	ZSTR_VAL ( name )		3914986	0					
ANR	3915148	CallExpression	ZSTR_VAL ( name )		3914986	0					
ANR	3915149	Callee	ZSTR_VAL		3914986	0					
ANR	3915150	Identifier	ZSTR_VAL		3914986	0					
ANR	3915151	ArgumentList	name		3914986	1					
ANR	3915152	Argument	name		3914986	0					
ANR	3915153	Identifier	name		3914986	0					
ANR	3915154	Argument	'\\\\'		3914986	1					
ANR	3915155	PrimaryExpression	'\\\\'		3914986	0					
ANR	3915156	Argument	ZSTR_LEN ( name )		3914986	2					
ANR	3915157	CallExpression	ZSTR_LEN ( name )		3914986	0					
ANR	3915158	Callee	ZSTR_LEN		3914986	0					
ANR	3915159	Identifier	ZSTR_LEN		3914986	0					
ANR	3915160	ArgumentList	name		3914986	1					
ANR	3915161	Argument	name		3914986	0					
ANR	3915162	Identifier	name		3914986	0					
ANR	3915163	IfStatement	if ( compound )		3914986	7					
ANR	3915164	Condition	compound	792:5:23411:23418	3914986	0	True				
ANR	3915165	Identifier	compound		3914986	0					
ANR	3915166	CompoundStatement		36:15:919:919	3914986	1					
ANR	3915167	ExpressionStatement	* is_fully_qualified = 1	793:2:23425:23448	3914986	0	True				
ANR	3915168	AssignmentExpression	* is_fully_qualified = 1		3914986	0		=			
ANR	3915169	UnaryOperationExpression	* is_fully_qualified		3914986	0					
ANR	3915170	UnaryOperator	*		3914986	0					
ANR	3915171	Identifier	is_fully_qualified		3914986	1					
ANR	3915172	PrimaryExpression	1		3914986	1					
ANR	3915173	IfStatement	if ( compound && FC ( imports ) )		3914986	8					
ANR	3915174	Condition	compound && FC ( imports )	796:5:23459:23481	3914986	0	True				
ANR	3915175	AndExpression	compound && FC ( imports )		3914986	0		&&			
ANR	3915176	Identifier	compound		3914986	0					
ANR	3915177	CallExpression	FC ( imports )		3914986	1					
ANR	3915178	Callee	FC		3914986	0					
ANR	3915179	Identifier	FC		3914986	0					
ANR	3915180	ArgumentList	imports		3914986	1					
ANR	3915181	Argument	imports		3914986	0					
ANR	3915182	Identifier	imports		3914986	0					
ANR	3915183	CompoundStatement		43:2:1102:1184	3914986	1					
ANR	3915184	IdentifierDeclStatement	size_t len = compound - ZSTR_VAL ( name ) ;	798:2:23562:23600	3914986	0	True				
ANR	3915185	IdentifierDecl	len = compound - ZSTR_VAL ( name )		3914986	0					
ANR	3915186	IdentifierDeclType	size_t		3914986	0					
ANR	3915187	Identifier	len		3914986	1					
ANR	3915188	AssignmentExpression	len = compound - ZSTR_VAL ( name )		3914986	2		=			
ANR	3915189	Identifier	len		3914986	0					
ANR	3915190	AdditiveExpression	compound - ZSTR_VAL ( name )		3914986	1		-			
ANR	3915191	Identifier	compound		3914986	0					
ANR	3915192	CallExpression	ZSTR_VAL ( name )		3914986	1					
ANR	3915193	Callee	ZSTR_VAL		3914986	0					
ANR	3915194	Identifier	ZSTR_VAL		3914986	0					
ANR	3915195	ArgumentList	name		3914986	1					
ANR	3915196	Argument	name		3914986	0					
ANR	3915197	Identifier	name		3914986	0					
ANR	3915198	IdentifierDeclStatement	"zend_string * import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len ) ;"	799:2:23604:23686	3914986	1	True				
ANR	3915199	IdentifierDecl	"* import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len )"		3914986	0					
ANR	3915200	IdentifierDeclType	zend_string *		3914986	0					
ANR	3915201	Identifier	import_name		3914986	1					
ANR	3915202	AssignmentExpression	"* import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len )"		3914986	2		=			
ANR	3915203	Identifier	import_name		3914986	0					
ANR	3915204	CallExpression	"zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len )"		3914986	1					
ANR	3915205	Callee	zend_hash_find_ptr_lc		3914986	0					
ANR	3915206	Identifier	zend_hash_find_ptr_lc		3914986	0					
ANR	3915207	ArgumentList	FC ( imports )		3914986	1					
ANR	3915208	Argument	FC ( imports )		3914986	0					
ANR	3915209	CallExpression	FC ( imports )		3914986	0					
ANR	3915210	Callee	FC		3914986	0					
ANR	3915211	Identifier	FC		3914986	0					
ANR	3915212	ArgumentList	imports		3914986	1					
ANR	3915213	Argument	imports		3914986	0					
ANR	3915214	Identifier	imports		3914986	0					
ANR	3915215	Argument	ZSTR_VAL ( name )		3914986	1					
ANR	3915216	CallExpression	ZSTR_VAL ( name )		3914986	0					
ANR	3915217	Callee	ZSTR_VAL		3914986	0					
ANR	3915218	Identifier	ZSTR_VAL		3914986	0					
ANR	3915219	ArgumentList	name		3914986	1					
ANR	3915220	Argument	name		3914986	0					
ANR	3915221	Identifier	name		3914986	0					
ANR	3915222	Argument	len		3914986	2					
ANR	3915223	Identifier	len		3914986	0					
ANR	3915224	IfStatement	if ( import_name )		3914986	2					
ANR	3915225	Condition	import_name	801:6:23695:23705	3914986	0	True				
ANR	3915226	Identifier	import_name		3914986	0					
ANR	3915227	CompoundStatement		45:19:1206:1206	3914986	1					
ANR	3915228	ReturnStatement	"return zend_concat_names ( ZSTR_VAL ( import_name ) , ZSTR_LEN ( import_name ) , ZSTR_VAL ( name ) + len + 1 , ZSTR_LEN ( name ) - len - 1 ) ;"	802:3:23713:23840	3914986	0	True				
ANR	3915229	CallExpression	"zend_concat_names ( ZSTR_VAL ( import_name ) , ZSTR_LEN ( import_name ) , ZSTR_VAL ( name ) + len + 1 , ZSTR_LEN ( name ) - len - 1 )"		3914986	0					
ANR	3915230	Callee	zend_concat_names		3914986	0					
ANR	3915231	Identifier	zend_concat_names		3914986	0					
ANR	3915232	ArgumentList	ZSTR_VAL ( import_name )		3914986	1					
ANR	3915233	Argument	ZSTR_VAL ( import_name )		3914986	0					
ANR	3915234	CallExpression	ZSTR_VAL ( import_name )		3914986	0					
ANR	3915235	Callee	ZSTR_VAL		3914986	0					
ANR	3915236	Identifier	ZSTR_VAL		3914986	0					
ANR	3915237	ArgumentList	import_name		3914986	1					
ANR	3915238	Argument	import_name		3914986	0					
ANR	3915239	Identifier	import_name		3914986	0					
ANR	3915240	Argument	ZSTR_LEN ( import_name )		3914986	1					
ANR	3915241	CallExpression	ZSTR_LEN ( import_name )		3914986	0					
ANR	3915242	Callee	ZSTR_LEN		3914986	0					
ANR	3915243	Identifier	ZSTR_LEN		3914986	0					
ANR	3915244	ArgumentList	import_name		3914986	1					
ANR	3915245	Argument	import_name		3914986	0					
ANR	3915246	Identifier	import_name		3914986	0					
ANR	3915247	Argument	ZSTR_VAL ( name ) + len + 1		3914986	2					
ANR	3915248	AdditiveExpression	ZSTR_VAL ( name ) + len + 1		3914986	0		+			
ANR	3915249	CallExpression	ZSTR_VAL ( name )		3914986	0					
ANR	3915250	Callee	ZSTR_VAL		3914986	0					
ANR	3915251	Identifier	ZSTR_VAL		3914986	0					
ANR	3915252	ArgumentList	name		3914986	1					
ANR	3915253	Argument	name		3914986	0					
ANR	3915254	Identifier	name		3914986	0					
ANR	3915255	AdditiveExpression	len + 1		3914986	1		+			
ANR	3915256	Identifier	len		3914986	0					
ANR	3915257	PrimaryExpression	1		3914986	1					
ANR	3915258	Argument	ZSTR_LEN ( name ) - len - 1		3914986	3					
ANR	3915259	AdditiveExpression	ZSTR_LEN ( name ) - len - 1		3914986	0		-			
ANR	3915260	CallExpression	ZSTR_LEN ( name )		3914986	0					
ANR	3915261	Callee	ZSTR_LEN		3914986	0					
ANR	3915262	Identifier	ZSTR_LEN		3914986	0					
ANR	3915263	ArgumentList	name		3914986	1					
ANR	3915264	Argument	name		3914986	0					
ANR	3915265	Identifier	name		3914986	0					
ANR	3915266	AdditiveExpression	len - 1		3914986	1		-			
ANR	3915267	Identifier	len		3914986	0					
ANR	3915268	PrimaryExpression	1		3914986	1					
ANR	3915269	ReturnStatement	return zend_prefix_with_ns ( name ) ;	807:1:23851:23883	3914986	9	True				
ANR	3915270	CallExpression	zend_prefix_with_ns ( name )		3914986	0					
ANR	3915271	Callee	zend_prefix_with_ns		3914986	0					
ANR	3915272	Identifier	zend_prefix_with_ns		3914986	0					
ANR	3915273	ArgumentList	name		3914986	1					
ANR	3915274	Argument	name		3914986	0					
ANR	3915275	Identifier	name		3914986	0					
ANR	3915276	ReturnType	zend_string *		3914986	1					
ANR	3915277	Identifier	zend_resolve_non_class_name		3914986	2					
ANR	3915278	ParameterList	"zend_string * name , uint32_t type , zend_bool * is_fully_qualified , zend_bool case_sensitive , HashTable * current_import_sub"		3914986	3					
ANR	3915279	Parameter	zend_string * name	755:1:22377:22393	3914986	0	True				
ANR	3915280	ParameterType	zend_string *		3914986	0					
ANR	3915281	Identifier	name		3914986	1					
ANR	3915282	Parameter	uint32_t type	755:20:22396:22408	3914986	1	True				
ANR	3915283	ParameterType	uint32_t		3914986	0					
ANR	3915284	Identifier	type		3914986	1					
ANR	3915285	Parameter	zend_bool * is_fully_qualified	755:35:22411:22439	3914986	2	True				
ANR	3915286	ParameterType	zend_bool *		3914986	0					
ANR	3915287	Identifier	is_fully_qualified		3914986	1					
ANR	3915288	Parameter	zend_bool case_sensitive	756:1:22443:22466	3914986	3	True				
ANR	3915289	ParameterType	zend_bool		3914986	0					
ANR	3915290	Identifier	case_sensitive		3914986	1					
ANR	3915291	Parameter	HashTable * current_import_sub	756:27:22469:22497	3914986	4	True				
ANR	3915292	ParameterType	HashTable *		3914986	0					
ANR	3915293	Identifier	current_import_sub		3914986	1					
ANR	3915294	CFGEntryNode	ENTRY		3914986		True				
ANR	3915295	CFGExitNode	EXIT		3914986		True				
ANR	3915296	Symbol	imports		3914986						
ANR	3915297	Symbol	ZEND_NAME_FQ		3914986						
ANR	3915298	Symbol	import_name		3914986						
ANR	3915299	Symbol	zend_string_copy		3914986						
ANR	3915300	Symbol	zend_prefix_with_ns		3914986						
ANR	3915301	Symbol	type		3914986						
ANR	3915302	Symbol	is_fully_qualified		3914986						
ANR	3915303	Symbol	compound		3914986						
ANR	3915304	Symbol	ZSTR_VAL		3914986						
ANR	3915305	Symbol	* is_fully_qualified		3914986						
ANR	3915306	Symbol	zend_string_init		3914986						
ANR	3915307	Symbol	zend_hash_find_ptr_lc		3914986						
ANR	3915308	Symbol	zend_concat_names		3914986						
ANR	3915309	Symbol	len		3914986						
ANR	3915310	Symbol	case_sensitive		3914986						
ANR	3915311	Symbol	ZEND_NAME_RELATIVE		3914986						
ANR	3915312	Symbol	name		3914986						
ANR	3915313	Symbol	ZSTR_LEN		3914986						
ANR	3915314	Symbol	memchr		3914986						
ANR	3915315	Symbol	zend_hash_find_ptr		3914986						
ANR	3915316	Symbol	FC		3914986						
ANR	3915317	Symbol	current_import_sub		3914986						
ANR	3915318	Symbol	* ZSTR_VAL		3914986						
ANR	3915319	Function	zend_resolve_function_name	811:0:23898:24112							
ANR	3915320	FunctionDef	"zend_resolve_function_name (zend_string * name , uint32_t type , zend_bool * is_fully_qualified)"		3915319	0					
ANR	3915321	CompoundStatement		812:0:24013:24112	3915319	0					
ANR	3915322	ReturnStatement	"return zend_resolve_non_class_name ( name , type , is_fully_qualified , 0 , FC ( imports_function ) ) ;"	813:1:24016:24110	3915319	0	True				
ANR	3915323	CallExpression	"zend_resolve_non_class_name ( name , type , is_fully_qualified , 0 , FC ( imports_function ) )"		3915319	0					
ANR	3915324	Callee	zend_resolve_non_class_name		3915319	0					
ANR	3915325	Identifier	zend_resolve_non_class_name		3915319	0					
ANR	3915326	ArgumentList	name		3915319	1					
ANR	3915327	Argument	name		3915319	0					
ANR	3915328	Identifier	name		3915319	0					
ANR	3915329	Argument	type		3915319	1					
ANR	3915330	Identifier	type		3915319	0					
ANR	3915331	Argument	is_fully_qualified		3915319	2					
ANR	3915332	Identifier	is_fully_qualified		3915319	0					
ANR	3915333	Argument	0		3915319	3					
ANR	3915334	PrimaryExpression	0		3915319	0					
ANR	3915335	Argument	FC ( imports_function )		3915319	4					
ANR	3915336	CallExpression	FC ( imports_function )		3915319	0					
ANR	3915337	Callee	FC		3915319	0					
ANR	3915338	Identifier	FC		3915319	0					
ANR	3915339	ArgumentList	imports_function		3915319	1					
ANR	3915340	Argument	imports_function		3915319	0					
ANR	3915341	Identifier	imports_function		3915319	0					
ANR	3915342	ReturnType	zend_string *		3915319	1					
ANR	3915343	Identifier	zend_resolve_function_name		3915319	2					
ANR	3915344	ParameterList	"zend_string * name , uint32_t type , zend_bool * is_fully_qualified"		3915319	3					
ANR	3915345	Parameter	zend_string * name	811:40:23938:23954	3915319	0	True				
ANR	3915346	ParameterType	zend_string *		3915319	0					
ANR	3915347	Identifier	name		3915319	1					
ANR	3915348	Parameter	uint32_t type	811:59:23957:23969	3915319	1	True				
ANR	3915349	ParameterType	uint32_t		3915319	0					
ANR	3915350	Identifier	type		3915319	1					
ANR	3915351	Parameter	zend_bool * is_fully_qualified	811:74:23972:24000	3915319	2	True				
ANR	3915352	ParameterType	zend_bool *		3915319	0					
ANR	3915353	Identifier	is_fully_qualified		3915319	1					
ANR	3915354	CFGEntryNode	ENTRY		3915319		True				
ANR	3915355	CFGExitNode	EXIT		3915319		True				
ANR	3915356	Symbol	name		3915319						
ANR	3915357	Symbol	zend_resolve_non_class_name		3915319						
ANR	3915358	Symbol	type		3915319						
ANR	3915359	Symbol	is_fully_qualified		3915319						
ANR	3915360	Symbol	FC		3915319						
ANR	3915361	Symbol	imports_function		3915319						
ANR	3915362	Function	zend_resolve_const_name	818:0:24125:24333							
ANR	3915363	FunctionDef	"zend_resolve_const_name (zend_string * name , uint32_t type , zend_bool * is_fully_qualified)"		3915362	0					
ANR	3915364	CompoundStatement		818:112:24237:24333	3915362	0					
ANR	3915365	ReturnStatement	"return zend_resolve_non_class_name ( name , type , is_fully_qualified , 1 , FC ( imports_const ) ) ;"	819:1:24240:24331	3915362	0	True				
ANR	3915366	CallExpression	"zend_resolve_non_class_name ( name , type , is_fully_qualified , 1 , FC ( imports_const ) )"		3915362	0					
ANR	3915367	Callee	zend_resolve_non_class_name		3915362	0					
ANR	3915368	Identifier	zend_resolve_non_class_name		3915362	0					
ANR	3915369	ArgumentList	name		3915362	1					
ANR	3915370	Argument	name		3915362	0					
ANR	3915371	Identifier	name		3915362	0					
ANR	3915372	Argument	type		3915362	1					
ANR	3915373	Identifier	type		3915362	0					
ANR	3915374	Argument	is_fully_qualified		3915362	2					
ANR	3915375	Identifier	is_fully_qualified		3915362	0					
ANR	3915376	Argument	1		3915362	3					
ANR	3915377	PrimaryExpression	1		3915362	0					
ANR	3915378	Argument	FC ( imports_const )		3915362	4					
ANR	3915379	CallExpression	FC ( imports_const )		3915362	0					
ANR	3915380	Callee	FC		3915362	0					
ANR	3915381	Identifier	FC		3915362	0					
ANR	3915382	ArgumentList	imports_const		3915362	1					
ANR	3915383	Argument	imports_const		3915362	0					
ANR	3915384	Identifier	imports_const		3915362	0					
ANR	3915385	ReturnType	zend_string *		3915362	1					
ANR	3915386	Identifier	zend_resolve_const_name		3915362	2					
ANR	3915387	ParameterList	"zend_string * name , uint32_t type , zend_bool * is_fully_qualified"		3915362	3					
ANR	3915388	Parameter	zend_string * name	818:37:24162:24178	3915362	0	True				
ANR	3915389	ParameterType	zend_string *		3915362	0					
ANR	3915390	Identifier	name		3915362	1					
ANR	3915391	Parameter	uint32_t type	818:56:24181:24193	3915362	1	True				
ANR	3915392	ParameterType	uint32_t		3915362	0					
ANR	3915393	Identifier	type		3915362	1					
ANR	3915394	Parameter	zend_bool * is_fully_qualified	818:71:24196:24224	3915362	2	True				
ANR	3915395	ParameterType	zend_bool *		3915362	0					
ANR	3915396	Identifier	is_fully_qualified		3915362	1					
ANR	3915397	CFGEntryNode	ENTRY		3915362		True				
ANR	3915398	CFGExitNode	EXIT		3915362		True				
ANR	3915399	Symbol	name		3915362						
ANR	3915400	Symbol	zend_resolve_non_class_name		3915362						
ANR	3915401	Symbol	imports_const		3915362						
ANR	3915402	Symbol	type		3915362						
ANR	3915403	Symbol	is_fully_qualified		3915362						
ANR	3915404	Symbol	FC		3915362						
ANR	3915405	Function	zend_resolve_class_name	824:0:24346:25883							
ANR	3915406	FunctionDef	"zend_resolve_class_name (zend_string * name , uint32_t type)"		3915405	0					
ANR	3915407	CompoundStatement		825:0:24427:25883	3915405	0					
ANR	3915408	IdentifierDeclStatement	char * compound ;	826:1:24430:24444	3915405	0	True				
ANR	3915409	IdentifierDecl	* compound		3915405	0					
ANR	3915410	IdentifierDeclType	char *		3915405	0					
ANR	3915411	Identifier	compound		3915405	1					
ANR	3915412	IfStatement	if ( type == ZEND_NAME_RELATIVE )		3915405	1					
ANR	3915413	Condition	type == ZEND_NAME_RELATIVE	828:5:24452:24477	3915405	0	True				
ANR	3915414	EqualityExpression	type == ZEND_NAME_RELATIVE		3915405	0		==			
ANR	3915415	Identifier	type		3915405	0					
ANR	3915416	Identifier	ZEND_NAME_RELATIVE		3915405	1					
ANR	3915417	CompoundStatement		4:33:52:52	3915405	1					
ANR	3915418	ReturnStatement	return zend_prefix_with_ns ( name ) ;	829:2:24484:24516	3915405	0	True				
ANR	3915419	CallExpression	zend_prefix_with_ns ( name )		3915405	0					
ANR	3915420	Callee	zend_prefix_with_ns		3915405	0					
ANR	3915421	Identifier	zend_prefix_with_ns		3915405	0					
ANR	3915422	ArgumentList	name		3915405	1					
ANR	3915423	Argument	name		3915405	0					
ANR	3915424	Identifier	name		3915405	0					
ANR	3915425	IfStatement	if ( type == ZEND_NAME_FQ || ZSTR_VAL ( name ) [ 0 ] == '\\\\' )		3915405	2					
ANR	3915426	Condition	type == ZEND_NAME_FQ || ZSTR_VAL ( name ) [ 0 ] == '\\\\'	832:5:24527:24575	3915405	0	True				
ANR	3915427	OrExpression	type == ZEND_NAME_FQ || ZSTR_VAL ( name ) [ 0 ] == '\\\\'		3915405	0		||			
ANR	3915428	EqualityExpression	type == ZEND_NAME_FQ		3915405	0		==			
ANR	3915429	Identifier	type		3915405	0					
ANR	3915430	Identifier	ZEND_NAME_FQ		3915405	1					
ANR	3915431	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] == '\\\\'		3915405	1		==			
ANR	3915432	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		3915405	0					
ANR	3915433	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915434	Callee	ZSTR_VAL		3915405	0					
ANR	3915435	Identifier	ZSTR_VAL		3915405	0					
ANR	3915436	ArgumentList	name		3915405	1					
ANR	3915437	Argument	name		3915405	0					
ANR	3915438	Identifier	name		3915405	0					
ANR	3915439	PrimaryExpression	0		3915405	1					
ANR	3915440	PrimaryExpression	'\\\\'		3915405	1					
ANR	3915441	CompoundStatement		8:56:150:150	3915405	1					
ANR	3915442	IfStatement	if ( ZSTR_VAL ( name ) [ 0 ] == '\\\\' )		3915405	0					
ANR	3915443	Condition	ZSTR_VAL ( name ) [ 0 ] == '\\\\'	834:6:24666:24690	3915405	0	True				
ANR	3915444	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] == '\\\\'		3915405	0		==			
ANR	3915445	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		3915405	0					
ANR	3915446	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915447	Callee	ZSTR_VAL		3915405	0					
ANR	3915448	Identifier	ZSTR_VAL		3915405	0					
ANR	3915449	ArgumentList	name		3915405	1					
ANR	3915450	Argument	name		3915405	0					
ANR	3915451	Identifier	name		3915405	0					
ANR	3915452	PrimaryExpression	0		3915405	1					
ANR	3915453	PrimaryExpression	'\\\\'		3915405	1					
ANR	3915454	CompoundStatement		10:33:265:265	3915405	1					
ANR	3915455	ExpressionStatement	"name = zend_string_init ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 , 0 )"	835:3:24698:24764	3915405	0	True				
ANR	3915456	AssignmentExpression	"name = zend_string_init ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 , 0 )"		3915405	0		=			
ANR	3915457	Identifier	name		3915405	0					
ANR	3915458	CallExpression	"zend_string_init ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 , 0 )"		3915405	1					
ANR	3915459	Callee	zend_string_init		3915405	0					
ANR	3915460	Identifier	zend_string_init		3915405	0					
ANR	3915461	ArgumentList	ZSTR_VAL ( name ) + 1		3915405	1					
ANR	3915462	Argument	ZSTR_VAL ( name ) + 1		3915405	0					
ANR	3915463	AdditiveExpression	ZSTR_VAL ( name ) + 1		3915405	0		+			
ANR	3915464	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915465	Callee	ZSTR_VAL		3915405	0					
ANR	3915466	Identifier	ZSTR_VAL		3915405	0					
ANR	3915467	ArgumentList	name		3915405	1					
ANR	3915468	Argument	name		3915405	0					
ANR	3915469	Identifier	name		3915405	0					
ANR	3915470	PrimaryExpression	1		3915405	1					
ANR	3915471	Argument	ZSTR_LEN ( name ) - 1		3915405	1					
ANR	3915472	AdditiveExpression	ZSTR_LEN ( name ) - 1		3915405	0		-			
ANR	3915473	CallExpression	ZSTR_LEN ( name )		3915405	0					
ANR	3915474	Callee	ZSTR_LEN		3915405	0					
ANR	3915475	Identifier	ZSTR_LEN		3915405	0					
ANR	3915476	ArgumentList	name		3915405	1					
ANR	3915477	Argument	name		3915405	0					
ANR	3915478	Identifier	name		3915405	0					
ANR	3915479	PrimaryExpression	1		3915405	1					
ANR	3915480	Argument	0		3915405	2					
ANR	3915481	PrimaryExpression	0		3915405	0					
ANR	3915482	ElseStatement	else		3915405	0					
ANR	3915483	CompoundStatement		12:9:347:347	3915405	0					
ANR	3915484	ExpressionStatement	zend_string_addref ( name )	837:3:24780:24804	3915405	0	True				
ANR	3915485	CallExpression	zend_string_addref ( name )		3915405	0					
ANR	3915486	Callee	zend_string_addref		3915405	0					
ANR	3915487	Identifier	zend_string_addref		3915405	0					
ANR	3915488	ArgumentList	name		3915405	1					
ANR	3915489	Argument	name		3915405	0					
ANR	3915490	Identifier	name		3915405	0					
ANR	3915491	IfStatement	if ( ZEND_FETCH_CLASS_DEFAULT != zend_get_class_fetch_type ( name ) )		3915405	1					
ANR	3915492	Condition	ZEND_FETCH_CLASS_DEFAULT != zend_get_class_fetch_type ( name )	840:6:24876:24934	3915405	0	True				
ANR	3915493	EqualityExpression	ZEND_FETCH_CLASS_DEFAULT != zend_get_class_fetch_type ( name )		3915405	0		!=			
ANR	3915494	Identifier	ZEND_FETCH_CLASS_DEFAULT		3915405	0					
ANR	3915495	CallExpression	zend_get_class_fetch_type ( name )		3915405	1					
ANR	3915496	Callee	zend_get_class_fetch_type		3915405	0					
ANR	3915497	Identifier	zend_get_class_fetch_type		3915405	0					
ANR	3915498	ArgumentList	name		3915405	1					
ANR	3915499	Argument	name		3915405	0					
ANR	3915500	Identifier	name		3915405	0					
ANR	3915501	CompoundStatement		16:67:509:509	3915405	1					
ANR	3915502	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""'\\\\%s' is an invalid class name"" , ZSTR_VAL ( name ) )"	841:3:24942:25029	3915405	0	True				
ANR	3915503	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""'\\\\%s' is an invalid class name"" , ZSTR_VAL ( name ) )"		3915405	0					
ANR	3915504	Callee	zend_error_noreturn		3915405	0					
ANR	3915505	Identifier	zend_error_noreturn		3915405	0					
ANR	3915506	ArgumentList	E_COMPILE_ERROR		3915405	1					
ANR	3915507	Argument	E_COMPILE_ERROR		3915405	0					
ANR	3915508	Identifier	E_COMPILE_ERROR		3915405	0					
ANR	3915509	Argument	"""'\\\\%s' is an invalid class name"""		3915405	1					
ANR	3915510	PrimaryExpression	"""'\\\\%s' is an invalid class name"""		3915405	0					
ANR	3915511	Argument	ZSTR_VAL ( name )		3915405	2					
ANR	3915512	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915513	Callee	ZSTR_VAL		3915405	0					
ANR	3915514	Identifier	ZSTR_VAL		3915405	0					
ANR	3915515	ArgumentList	name		3915405	1					
ANR	3915516	Argument	name		3915405	0					
ANR	3915517	Identifier	name		3915405	0					
ANR	3915518	ReturnStatement	return name ;	843:2:25037:25048	3915405	2	True				
ANR	3915519	Identifier	name		3915405	0					
ANR	3915520	IfStatement	if ( FC ( imports ) )		3915405	3					
ANR	3915521	Condition	FC ( imports )	846:5:25059:25069	3915405	0	True				
ANR	3915522	CallExpression	FC ( imports )		3915405	0					
ANR	3915523	Callee	FC		3915405	0					
ANR	3915524	Identifier	FC		3915405	0					
ANR	3915525	ArgumentList	imports		3915405	1					
ANR	3915526	Argument	imports		3915405	0					
ANR	3915527	Identifier	imports		3915405	0					
ANR	3915528	CompoundStatement		22:18:644:644	3915405	1					
ANR	3915529	ExpressionStatement	"compound = memchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"	847:2:25076:25131	3915405	0	True				
ANR	3915530	AssignmentExpression	"compound = memchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3915405	0		=			
ANR	3915531	Identifier	compound		3915405	0					
ANR	3915532	CallExpression	"memchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3915405	1					
ANR	3915533	Callee	memchr		3915405	0					
ANR	3915534	Identifier	memchr		3915405	0					
ANR	3915535	ArgumentList	ZSTR_VAL ( name )		3915405	1					
ANR	3915536	Argument	ZSTR_VAL ( name )		3915405	0					
ANR	3915537	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915538	Callee	ZSTR_VAL		3915405	0					
ANR	3915539	Identifier	ZSTR_VAL		3915405	0					
ANR	3915540	ArgumentList	name		3915405	1					
ANR	3915541	Argument	name		3915405	0					
ANR	3915542	Identifier	name		3915405	0					
ANR	3915543	Argument	'\\\\'		3915405	1					
ANR	3915544	PrimaryExpression	'\\\\'		3915405	0					
ANR	3915545	Argument	ZSTR_LEN ( name )		3915405	2					
ANR	3915546	CallExpression	ZSTR_LEN ( name )		3915405	0					
ANR	3915547	Callee	ZSTR_LEN		3915405	0					
ANR	3915548	Identifier	ZSTR_LEN		3915405	0					
ANR	3915549	ArgumentList	name		3915405	1					
ANR	3915550	Argument	name		3915405	0					
ANR	3915551	Identifier	name		3915405	0					
ANR	3915552	IfStatement	if ( compound )		3915405	1					
ANR	3915553	Condition	compound	848:6:25139:25146	3915405	0	True				
ANR	3915554	Identifier	compound		3915405	0					
ANR	3915555	CompoundStatement		27:3:844:930	3915405	1					
ANR	3915556	IdentifierDeclStatement	size_t len = compound - ZSTR_VAL ( name ) ;	850:3:25229:25267	3915405	0	True				
ANR	3915557	IdentifierDecl	len = compound - ZSTR_VAL ( name )		3915405	0					
ANR	3915558	IdentifierDeclType	size_t		3915405	0					
ANR	3915559	Identifier	len		3915405	1					
ANR	3915560	AssignmentExpression	len = compound - ZSTR_VAL ( name )		3915405	2		=			
ANR	3915561	Identifier	len		3915405	0					
ANR	3915562	AdditiveExpression	compound - ZSTR_VAL ( name )		3915405	1		-			
ANR	3915563	Identifier	compound		3915405	0					
ANR	3915564	CallExpression	ZSTR_VAL ( name )		3915405	1					
ANR	3915565	Callee	ZSTR_VAL		3915405	0					
ANR	3915566	Identifier	ZSTR_VAL		3915405	0					
ANR	3915567	ArgumentList	name		3915405	1					
ANR	3915568	Argument	name		3915405	0					
ANR	3915569	Identifier	name		3915405	0					
ANR	3915570	IdentifierDeclStatement	"zend_string * import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len ) ;"	851:3:25272:25358	3915405	1	True				
ANR	3915571	IdentifierDecl	"* import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len )"		3915405	0					
ANR	3915572	IdentifierDeclType	zend_string *		3915405	0					
ANR	3915573	Identifier	import_name		3915405	1					
ANR	3915574	AssignmentExpression	"* import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len )"		3915405	2		=			
ANR	3915575	Identifier	import_name		3915405	0					
ANR	3915576	CallExpression	"zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , len )"		3915405	1					
ANR	3915577	Callee	zend_hash_find_ptr_lc		3915405	0					
ANR	3915578	Identifier	zend_hash_find_ptr_lc		3915405	0					
ANR	3915579	ArgumentList	FC ( imports )		3915405	1					
ANR	3915580	Argument	FC ( imports )		3915405	0					
ANR	3915581	CallExpression	FC ( imports )		3915405	0					
ANR	3915582	Callee	FC		3915405	0					
ANR	3915583	Identifier	FC		3915405	0					
ANR	3915584	ArgumentList	imports		3915405	1					
ANR	3915585	Argument	imports		3915405	0					
ANR	3915586	Identifier	imports		3915405	0					
ANR	3915587	Argument	ZSTR_VAL ( name )		3915405	1					
ANR	3915588	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915589	Callee	ZSTR_VAL		3915405	0					
ANR	3915590	Identifier	ZSTR_VAL		3915405	0					
ANR	3915591	ArgumentList	name		3915405	1					
ANR	3915592	Argument	name		3915405	0					
ANR	3915593	Identifier	name		3915405	0					
ANR	3915594	Argument	len		3915405	2					
ANR	3915595	Identifier	len		3915405	0					
ANR	3915596	IfStatement	if ( import_name )		3915405	2					
ANR	3915597	Condition	import_name	854:7:25368:25378	3915405	0	True				
ANR	3915598	Identifier	import_name		3915405	0					
ANR	3915599	CompoundStatement		30:20:953:953	3915405	1					
ANR	3915600	ReturnStatement	"return zend_concat_names ( ZSTR_VAL ( import_name ) , ZSTR_LEN ( import_name ) , ZSTR_VAL ( name ) + len + 1 , ZSTR_LEN ( name ) - len - 1 ) ;"	855:4:25387:25515	3915405	0	True				
ANR	3915601	CallExpression	"zend_concat_names ( ZSTR_VAL ( import_name ) , ZSTR_LEN ( import_name ) , ZSTR_VAL ( name ) + len + 1 , ZSTR_LEN ( name ) - len - 1 )"		3915405	0					
ANR	3915602	Callee	zend_concat_names		3915405	0					
ANR	3915603	Identifier	zend_concat_names		3915405	0					
ANR	3915604	ArgumentList	ZSTR_VAL ( import_name )		3915405	1					
ANR	3915605	Argument	ZSTR_VAL ( import_name )		3915405	0					
ANR	3915606	CallExpression	ZSTR_VAL ( import_name )		3915405	0					
ANR	3915607	Callee	ZSTR_VAL		3915405	0					
ANR	3915608	Identifier	ZSTR_VAL		3915405	0					
ANR	3915609	ArgumentList	import_name		3915405	1					
ANR	3915610	Argument	import_name		3915405	0					
ANR	3915611	Identifier	import_name		3915405	0					
ANR	3915612	Argument	ZSTR_LEN ( import_name )		3915405	1					
ANR	3915613	CallExpression	ZSTR_LEN ( import_name )		3915405	0					
ANR	3915614	Callee	ZSTR_LEN		3915405	0					
ANR	3915615	Identifier	ZSTR_LEN		3915405	0					
ANR	3915616	ArgumentList	import_name		3915405	1					
ANR	3915617	Argument	import_name		3915405	0					
ANR	3915618	Identifier	import_name		3915405	0					
ANR	3915619	Argument	ZSTR_VAL ( name ) + len + 1		3915405	2					
ANR	3915620	AdditiveExpression	ZSTR_VAL ( name ) + len + 1		3915405	0		+			
ANR	3915621	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915622	Callee	ZSTR_VAL		3915405	0					
ANR	3915623	Identifier	ZSTR_VAL		3915405	0					
ANR	3915624	ArgumentList	name		3915405	1					
ANR	3915625	Argument	name		3915405	0					
ANR	3915626	Identifier	name		3915405	0					
ANR	3915627	AdditiveExpression	len + 1		3915405	1		+			
ANR	3915628	Identifier	len		3915405	0					
ANR	3915629	PrimaryExpression	1		3915405	1					
ANR	3915630	Argument	ZSTR_LEN ( name ) - len - 1		3915405	3					
ANR	3915631	AdditiveExpression	ZSTR_LEN ( name ) - len - 1		3915405	0		-			
ANR	3915632	CallExpression	ZSTR_LEN ( name )		3915405	0					
ANR	3915633	Callee	ZSTR_LEN		3915405	0					
ANR	3915634	Identifier	ZSTR_LEN		3915405	0					
ANR	3915635	ArgumentList	name		3915405	1					
ANR	3915636	Argument	name		3915405	0					
ANR	3915637	Identifier	name		3915405	0					
ANR	3915638	AdditiveExpression	len - 1		3915405	1		-			
ANR	3915639	Identifier	len		3915405	0					
ANR	3915640	PrimaryExpression	1		3915405	1					
ANR	3915641	ElseStatement	else		3915405	0					
ANR	3915642	CompoundStatement		36:3:1165:1262	3915405	0					
ANR	3915643	IdentifierDeclStatement	"zend_string * import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) ;"	860:3:25593:25690	3915405	0	True				
ANR	3915644	IdentifierDecl	"* import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3915405	0					
ANR	3915645	IdentifierDeclType	zend_string *		3915405	0					
ANR	3915646	Identifier	import_name		3915405	1					
ANR	3915647	AssignmentExpression	"* import_name = zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3915405	2		=			
ANR	3915648	Identifier	import_name		3915405	0					
ANR	3915649	CallExpression	"zend_hash_find_ptr_lc ( FC ( imports ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3915405	1					
ANR	3915650	Callee	zend_hash_find_ptr_lc		3915405	0					
ANR	3915651	Identifier	zend_hash_find_ptr_lc		3915405	0					
ANR	3915652	ArgumentList	FC ( imports )		3915405	1					
ANR	3915653	Argument	FC ( imports )		3915405	0					
ANR	3915654	CallExpression	FC ( imports )		3915405	0					
ANR	3915655	Callee	FC		3915405	0					
ANR	3915656	Identifier	FC		3915405	0					
ANR	3915657	ArgumentList	imports		3915405	1					
ANR	3915658	Argument	imports		3915405	0					
ANR	3915659	Identifier	imports		3915405	0					
ANR	3915660	Argument	ZSTR_VAL ( name )		3915405	1					
ANR	3915661	CallExpression	ZSTR_VAL ( name )		3915405	0					
ANR	3915662	Callee	ZSTR_VAL		3915405	0					
ANR	3915663	Identifier	ZSTR_VAL		3915405	0					
ANR	3915664	ArgumentList	name		3915405	1					
ANR	3915665	Argument	name		3915405	0					
ANR	3915666	Identifier	name		3915405	0					
ANR	3915667	Argument	ZSTR_LEN ( name )		3915405	2					
ANR	3915668	CallExpression	ZSTR_LEN ( name )		3915405	0					
ANR	3915669	Callee	ZSTR_LEN		3915405	0					
ANR	3915670	Identifier	ZSTR_LEN		3915405	0					
ANR	3915671	ArgumentList	name		3915405	1					
ANR	3915672	Argument	name		3915405	0					
ANR	3915673	Identifier	name		3915405	0					
ANR	3915674	IfStatement	if ( import_name )		3915405	1					
ANR	3915675	Condition	import_name	863:7:25700:25710	3915405	0	True				
ANR	3915676	Identifier	import_name		3915405	0					
ANR	3915677	CompoundStatement		39:20:1285:1285	3915405	1					
ANR	3915678	ReturnStatement	return zend_string_copy ( import_name ) ;	864:4:25719:25755	3915405	0	True				
ANR	3915679	CallExpression	zend_string_copy ( import_name )		3915405	0					
ANR	3915680	Callee	zend_string_copy		3915405	0					
ANR	3915681	Identifier	zend_string_copy		3915405	0					
ANR	3915682	ArgumentList	import_name		3915405	1					
ANR	3915683	Argument	import_name		3915405	0					
ANR	3915684	Identifier	import_name		3915405	0					
ANR	3915685	ReturnStatement	return zend_prefix_with_ns ( name ) ;	870:1:25849:25881	3915405	4	True				
ANR	3915686	CallExpression	zend_prefix_with_ns ( name )		3915405	0					
ANR	3915687	Callee	zend_prefix_with_ns		3915405	0					
ANR	3915688	Identifier	zend_prefix_with_ns		3915405	0					
ANR	3915689	ArgumentList	name		3915405	1					
ANR	3915690	Argument	name		3915405	0					
ANR	3915691	Identifier	name		3915405	0					
ANR	3915692	ReturnType	zend_string *		3915405	1					
ANR	3915693	Identifier	zend_resolve_class_name		3915405	2					
ANR	3915694	ParameterList	"zend_string * name , uint32_t type"		3915405	3					
ANR	3915695	Parameter	zend_string * name	824:37:24383:24399	3915405	0	True				
ANR	3915696	ParameterType	zend_string *		3915405	0					
ANR	3915697	Identifier	name		3915405	1					
ANR	3915698	Parameter	uint32_t type	824:56:24402:24414	3915405	1	True				
ANR	3915699	ParameterType	uint32_t		3915405	0					
ANR	3915700	Identifier	type		3915405	1					
ANR	3915701	CFGEntryNode	ENTRY		3915405		True				
ANR	3915702	CFGExitNode	EXIT		3915405		True				
ANR	3915703	Symbol	ZEND_FETCH_CLASS_DEFAULT		3915405						
ANR	3915704	Symbol	imports		3915405						
ANR	3915705	Symbol	ZEND_NAME_FQ		3915405						
ANR	3915706	Symbol	E_COMPILE_ERROR		3915405						
ANR	3915707	Symbol	import_name		3915405						
ANR	3915708	Symbol	zend_prefix_with_ns		3915405						
ANR	3915709	Symbol	zend_string_copy		3915405						
ANR	3915710	Symbol	type		3915405						
ANR	3915711	Symbol	compound		3915405						
ANR	3915712	Symbol	ZSTR_VAL		3915405						
ANR	3915713	Symbol	zend_string_init		3915405						
ANR	3915714	Symbol	zend_hash_find_ptr_lc		3915405						
ANR	3915715	Symbol	zend_concat_names		3915405						
ANR	3915716	Symbol	len		3915405						
ANR	3915717	Symbol	ZEND_NAME_RELATIVE		3915405						
ANR	3915718	Symbol	name		3915405						
ANR	3915719	Symbol	ZSTR_LEN		3915405						
ANR	3915720	Symbol	memchr		3915405						
ANR	3915721	Symbol	FC		3915405						
ANR	3915722	Symbol	zend_get_class_fetch_type		3915405						
ANR	3915723	Symbol	* ZSTR_VAL		3915405						
ANR	3915724	Function	zend_resolve_class_name_ast	874:0:25896:26180							
ANR	3915725	FunctionDef	zend_resolve_class_name_ast (zend_ast * ast)		3915724	0					
ANR	3915726	CompoundStatement		875:0:25962:26180	3915724	0					
ANR	3915727	IdentifierDeclStatement	zval * class_name = zend_ast_get_zval ( ast ) ;	876:1:25965:26006	3915724	0	True				
ANR	3915728	IdentifierDecl	* class_name = zend_ast_get_zval ( ast )		3915724	0					
ANR	3915729	IdentifierDeclType	zval *		3915724	0					
ANR	3915730	Identifier	class_name		3915724	1					
ANR	3915731	AssignmentExpression	* class_name = zend_ast_get_zval ( ast )		3915724	2		=			
ANR	3915732	Identifier	class_name		3915724	0					
ANR	3915733	CallExpression	zend_ast_get_zval ( ast )		3915724	1					
ANR	3915734	Callee	zend_ast_get_zval		3915724	0					
ANR	3915735	Identifier	zend_ast_get_zval		3915724	0					
ANR	3915736	ArgumentList	ast		3915724	1					
ANR	3915737	Argument	ast		3915724	0					
ANR	3915738	Identifier	ast		3915724	0					
ANR	3915739	IfStatement	if ( Z_TYPE_P ( class_name ) != IS_STRING )		3915724	1					
ANR	3915740	Condition	Z_TYPE_P ( class_name ) != IS_STRING	877:5:26013:26045	3915724	0	True				
ANR	3915741	EqualityExpression	Z_TYPE_P ( class_name ) != IS_STRING		3915724	0		!=			
ANR	3915742	CallExpression	Z_TYPE_P ( class_name )		3915724	0					
ANR	3915743	Callee	Z_TYPE_P		3915724	0					
ANR	3915744	Identifier	Z_TYPE_P		3915724	0					
ANR	3915745	ArgumentList	class_name		3915724	1					
ANR	3915746	Argument	class_name		3915724	0					
ANR	3915747	Identifier	class_name		3915724	0					
ANR	3915748	Identifier	IS_STRING		3915724	1					
ANR	3915749	CompoundStatement		3:40:85:85	3915724	1					
ANR	3915750	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Illegal class name"" )"	878:2:26052:26110	3915724	0	True				
ANR	3915751	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Illegal class name"" )"		3915724	0					
ANR	3915752	Callee	zend_error_noreturn		3915724	0					
ANR	3915753	Identifier	zend_error_noreturn		3915724	0					
ANR	3915754	ArgumentList	E_COMPILE_ERROR		3915724	1					
ANR	3915755	Argument	E_COMPILE_ERROR		3915724	0					
ANR	3915756	Identifier	E_COMPILE_ERROR		3915724	0					
ANR	3915757	Argument	"""Illegal class name"""		3915724	1					
ANR	3915758	PrimaryExpression	"""Illegal class name"""		3915724	0					
ANR	3915759	ReturnStatement	"return zend_resolve_class_name ( Z_STR_P ( class_name ) , ast -> attr ) ;"	880:1:26116:26178	3915724	2	True				
ANR	3915760	CallExpression	"zend_resolve_class_name ( Z_STR_P ( class_name ) , ast -> attr )"		3915724	0					
ANR	3915761	Callee	zend_resolve_class_name		3915724	0					
ANR	3915762	Identifier	zend_resolve_class_name		3915724	0					
ANR	3915763	ArgumentList	Z_STR_P ( class_name )		3915724	1					
ANR	3915764	Argument	Z_STR_P ( class_name )		3915724	0					
ANR	3915765	CallExpression	Z_STR_P ( class_name )		3915724	0					
ANR	3915766	Callee	Z_STR_P		3915724	0					
ANR	3915767	Identifier	Z_STR_P		3915724	0					
ANR	3915768	ArgumentList	class_name		3915724	1					
ANR	3915769	Argument	class_name		3915724	0					
ANR	3915770	Identifier	class_name		3915724	0					
ANR	3915771	Argument	ast -> attr		3915724	1					
ANR	3915772	PtrMemberAccess	ast -> attr		3915724	0					
ANR	3915773	Identifier	ast		3915724	0					
ANR	3915774	Identifier	attr		3915724	1					
ANR	3915775	ReturnType	zend_string *		3915724	1					
ANR	3915776	Identifier	zend_resolve_class_name_ast		3915724	2					
ANR	3915777	ParameterList	zend_ast * ast		3915724	3					
ANR	3915778	Parameter	zend_ast * ast	874:41:25937:25949	3915724	0	True				
ANR	3915779	ParameterType	zend_ast *		3915724	0					
ANR	3915780	Identifier	ast		3915724	1					
ANR	3915781	CFGEntryNode	ENTRY		3915724		True				
ANR	3915782	CFGExitNode	EXIT		3915724		True				
ANR	3915783	Symbol	ast -> attr		3915724						
ANR	3915784	Symbol	ast		3915724						
ANR	3915785	Symbol	* ast		3915724						
ANR	3915786	Symbol	zend_resolve_class_name		3915724						
ANR	3915787	Symbol	E_COMPILE_ERROR		3915724						
ANR	3915788	Symbol	IS_STRING		3915724						
ANR	3915789	Symbol	Z_STR_P		3915724						
ANR	3915790	Symbol	zend_ast_get_zval		3915724						
ANR	3915791	Symbol	Z_TYPE_P		3915724						
ANR	3915792	Symbol	class_name		3915724						
ANR	3915793	Function	label_ptr_dtor	884:0:26193:26288							
ANR	3915794	FunctionDef	label_ptr_dtor (zval * zv)		3915793	0					
ANR	3915795	CompoundStatement		885:0:26240:26288	3915793	0					
ANR	3915796	ExpressionStatement	"efree_size ( Z_PTR_P ( zv ) , sizeof ( zend_label ) )"	886:1:26243:26286	3915793	0	True				
ANR	3915797	CallExpression	"efree_size ( Z_PTR_P ( zv ) , sizeof ( zend_label ) )"		3915793	0					
ANR	3915798	Callee	efree_size		3915793	0					
ANR	3915799	Identifier	efree_size		3915793	0					
ANR	3915800	ArgumentList	Z_PTR_P ( zv )		3915793	1					
ANR	3915801	Argument	Z_PTR_P ( zv )		3915793	0					
ANR	3915802	CallExpression	Z_PTR_P ( zv )		3915793	0					
ANR	3915803	Callee	Z_PTR_P		3915793	0					
ANR	3915804	Identifier	Z_PTR_P		3915793	0					
ANR	3915805	ArgumentList	zv		3915793	1					
ANR	3915806	Argument	zv		3915793	0					
ANR	3915807	Identifier	zv		3915793	0					
ANR	3915808	Argument	sizeof ( zend_label )		3915793	1					
ANR	3915809	SizeofExpression	sizeof ( zend_label )		3915793	0					
ANR	3915810	Sizeof	sizeof		3915793	0					
ANR	3915811	SizeofOperand	zend_label		3915793	1					
ANR	3915812	ReturnType	static void		3915793	1					
ANR	3915813	Identifier	label_ptr_dtor		3915793	2					
ANR	3915814	ParameterList	zval * zv		3915793	3					
ANR	3915815	Parameter	zval * zv	884:27:26220:26227	3915793	0	True				
ANR	3915816	ParameterType	zval *		3915793	0					
ANR	3915817	Identifier	zv		3915793	1					
ANR	3915818	CFGEntryNode	ENTRY		3915793		True				
ANR	3915819	CFGExitNode	EXIT		3915793		True				
ANR	3915820	Symbol	Z_PTR_P		3915793						
ANR	3915821	Symbol	zv		3915793						
ANR	3915822	Function	str_dtor	890:0:26301:26380							
ANR	3915823	FunctionDef	str_dtor (zval * zv)		3915822	0					
ANR	3915824	CompoundStatement		890:42:26343:26380	3915822	0					
ANR	3915825	ExpressionStatement	zend_string_release ( Z_STR_P ( zv ) )	891:1:26346:26378	3915822	0	True				
ANR	3915826	CallExpression	zend_string_release ( Z_STR_P ( zv ) )		3915822	0					
ANR	3915827	Callee	zend_string_release		3915822	0					
ANR	3915828	Identifier	zend_string_release		3915822	0					
ANR	3915829	ArgumentList	Z_STR_P ( zv )		3915822	1					
ANR	3915830	Argument	Z_STR_P ( zv )		3915822	0					
ANR	3915831	CallExpression	Z_STR_P ( zv )		3915822	0					
ANR	3915832	Callee	Z_STR_P		3915822	0					
ANR	3915833	Identifier	Z_STR_P		3915822	0					
ANR	3915834	ArgumentList	zv		3915822	1					
ANR	3915835	Argument	zv		3915822	0					
ANR	3915836	Identifier	zv		3915822	0					
ANR	3915837	ReturnType	static void		3915822	1					
ANR	3915838	Identifier	str_dtor		3915822	2					
ANR	3915839	ParameterList	zval * zv		3915822	3					
ANR	3915840	Parameter	zval * zv	890:21:26322:26329	3915822	0	True				
ANR	3915841	ParameterType	zval *		3915822	0					
ANR	3915842	Identifier	zv		3915822	1					
ANR	3915843	CFGEntryNode	ENTRY		3915822		True				
ANR	3915844	CFGExitNode	EXIT		3915822		True				
ANR	3915845	Symbol	Z_STR_P		3915822						
ANR	3915846	Symbol	zv		3915822						
ANR	3915847	DeclStmt									
ANR	3915848	Decl							zend_bool	zend_bool ( zend_ast * ast )	zend_is_call
ANR	3915849	Function	zend_add_try_element	897:0:26440:26952							
ANR	3915850	FunctionDef	zend_add_try_element (uint32_t try_op)		3915849	0					
ANR	3915851	CompoundStatement		898:0:26504:26952	3915849	0					
ANR	3915852	IdentifierDeclStatement	zend_op_array * op_array = CG ( active_op_array ) ;	899:1:26507:26552	3915849	0	True				
ANR	3915853	IdentifierDecl	* op_array = CG ( active_op_array )		3915849	0					
ANR	3915854	IdentifierDeclType	zend_op_array *		3915849	0					
ANR	3915855	Identifier	op_array		3915849	1					
ANR	3915856	AssignmentExpression	* op_array = CG ( active_op_array )		3915849	2		=			
ANR	3915857	Identifier	op_array		3915849	0					
ANR	3915858	CallExpression	CG ( active_op_array )		3915849	1					
ANR	3915859	Callee	CG		3915849	0					
ANR	3915860	Identifier	CG		3915849	0					
ANR	3915861	ArgumentList	active_op_array		3915849	1					
ANR	3915862	Argument	active_op_array		3915849	0					
ANR	3915863	Identifier	active_op_array		3915849	0					
ANR	3915864	IdentifierDeclStatement	uint32_t try_catch_offset = op_array -> last_try_catch ++ ;	900:1:26555:26609	3915849	1	True				
ANR	3915865	IdentifierDecl	try_catch_offset = op_array -> last_try_catch ++		3915849	0					
ANR	3915866	IdentifierDeclType	uint32_t		3915849	0					
ANR	3915867	Identifier	try_catch_offset		3915849	1					
ANR	3915868	AssignmentExpression	try_catch_offset = op_array -> last_try_catch ++		3915849	2		=			
ANR	3915869	Identifier	try_catch_offset		3915849	0					
ANR	3915870	PostIncDecOperationExpression	op_array -> last_try_catch ++		3915849	1					
ANR	3915871	PtrMemberAccess	op_array -> last_try_catch		3915849	0					
ANR	3915872	Identifier	op_array		3915849	0					
ANR	3915873	Identifier	last_try_catch		3915849	1					
ANR	3915874	IncDec	++		3915849	1					
ANR	3915875	IdentifierDeclStatement	zend_try_catch_element * elem ;	901:1:26612:26640	3915849	2	True				
ANR	3915876	IdentifierDecl	* elem		3915849	0					
ANR	3915877	IdentifierDeclType	zend_try_catch_element *		3915849	0					
ANR	3915878	Identifier	elem		3915849	1					
ANR	3915879	ExpressionStatement	"op_array -> try_catch_array = safe_erealloc ( op_array -> try_catch_array , sizeof ( zend_try_catch_element ) , op_array -> last_try_catch , 0 )"	903:1:26644:26776	3915849	3	True				
ANR	3915880	AssignmentExpression	"op_array -> try_catch_array = safe_erealloc ( op_array -> try_catch_array , sizeof ( zend_try_catch_element ) , op_array -> last_try_catch , 0 )"		3915849	0		=			
ANR	3915881	PtrMemberAccess	op_array -> try_catch_array		3915849	0					
ANR	3915882	Identifier	op_array		3915849	0					
ANR	3915883	Identifier	try_catch_array		3915849	1					
ANR	3915884	CallExpression	"safe_erealloc ( op_array -> try_catch_array , sizeof ( zend_try_catch_element ) , op_array -> last_try_catch , 0 )"		3915849	1					
ANR	3915885	Callee	safe_erealloc		3915849	0					
ANR	3915886	Identifier	safe_erealloc		3915849	0					
ANR	3915887	ArgumentList	op_array -> try_catch_array		3915849	1					
ANR	3915888	Argument	op_array -> try_catch_array		3915849	0					
ANR	3915889	PtrMemberAccess	op_array -> try_catch_array		3915849	0					
ANR	3915890	Identifier	op_array		3915849	0					
ANR	3915891	Identifier	try_catch_array		3915849	1					
ANR	3915892	Argument	sizeof ( zend_try_catch_element )		3915849	1					
ANR	3915893	SizeofExpression	sizeof ( zend_try_catch_element )		3915849	0					
ANR	3915894	Sizeof	sizeof		3915849	0					
ANR	3915895	SizeofOperand	zend_try_catch_element		3915849	1					
ANR	3915896	Argument	op_array -> last_try_catch		3915849	2					
ANR	3915897	PtrMemberAccess	op_array -> last_try_catch		3915849	0					
ANR	3915898	Identifier	op_array		3915849	0					
ANR	3915899	Identifier	last_try_catch		3915849	1					
ANR	3915900	Argument	0		3915849	3					
ANR	3915901	PrimaryExpression	0		3915849	0					
ANR	3915902	ExpressionStatement	elem = & op_array -> try_catch_array [ try_catch_offset ]	906:1:26780:26831	3915849	4	True				
ANR	3915903	AssignmentExpression	elem = & op_array -> try_catch_array [ try_catch_offset ]		3915849	0		=			
ANR	3915904	Identifier	elem		3915849	0					
ANR	3915905	UnaryOperationExpression	& op_array -> try_catch_array [ try_catch_offset ]		3915849	1					
ANR	3915906	UnaryOperator	&		3915849	0					
ANR	3915907	ArrayIndexing	op_array -> try_catch_array [ try_catch_offset ]		3915849	1					
ANR	3915908	PtrMemberAccess	op_array -> try_catch_array		3915849	0					
ANR	3915909	Identifier	op_array		3915849	0					
ANR	3915910	Identifier	try_catch_array		3915849	1					
ANR	3915911	Identifier	try_catch_offset		3915849	1					
ANR	3915912	ExpressionStatement	elem -> try_op = try_op	907:1:26834:26855	3915849	5	True				
ANR	3915913	AssignmentExpression	elem -> try_op = try_op		3915849	0		=			
ANR	3915914	PtrMemberAccess	elem -> try_op		3915849	0					
ANR	3915915	Identifier	elem		3915849	0					
ANR	3915916	Identifier	try_op		3915849	1					
ANR	3915917	Identifier	try_op		3915849	1					
ANR	3915918	ExpressionStatement	elem -> catch_op = 0	908:1:26858:26876	3915849	6	True				
ANR	3915919	AssignmentExpression	elem -> catch_op = 0		3915849	0		=			
ANR	3915920	PtrMemberAccess	elem -> catch_op		3915849	0					
ANR	3915921	Identifier	elem		3915849	0					
ANR	3915922	Identifier	catch_op		3915849	1					
ANR	3915923	PrimaryExpression	0		3915849	1					
ANR	3915924	ExpressionStatement	elem -> finally_op = 0	909:1:26879:26899	3915849	7	True				
ANR	3915925	AssignmentExpression	elem -> finally_op = 0		3915849	0		=			
ANR	3915926	PtrMemberAccess	elem -> finally_op		3915849	0					
ANR	3915927	Identifier	elem		3915849	0					
ANR	3915928	Identifier	finally_op		3915849	1					
ANR	3915929	PrimaryExpression	0		3915849	1					
ANR	3915930	ExpressionStatement	elem -> finally_end = 0	910:1:26902:26923	3915849	8	True				
ANR	3915931	AssignmentExpression	elem -> finally_end = 0		3915849	0		=			
ANR	3915932	PtrMemberAccess	elem -> finally_end		3915849	0					
ANR	3915933	Identifier	elem		3915849	0					
ANR	3915934	Identifier	finally_end		3915849	1					
ANR	3915935	PrimaryExpression	0		3915849	1					
ANR	3915936	ReturnStatement	return try_catch_offset ;	912:1:26927:26950	3915849	9	True				
ANR	3915937	Identifier	try_catch_offset		3915849	0					
ANR	3915938	ReturnType	static uint32_t		3915849	1					
ANR	3915939	Identifier	zend_add_try_element		3915849	2					
ANR	3915940	ParameterList	uint32_t try_op		3915849	3					
ANR	3915941	Parameter	uint32_t try_op	897:37:26477:26491	3915849	0	True				
ANR	3915942	ParameterType	uint32_t		3915849	0					
ANR	3915943	Identifier	try_op		3915849	1					
ANR	3915944	CFGEntryNode	ENTRY		3915849		True				
ANR	3915945	CFGExitNode	EXIT		3915849		True				
ANR	3915946	Symbol	elem		3915849						
ANR	3915947	Symbol	CG		3915849						
ANR	3915948	Symbol	active_op_array		3915849						
ANR	3915949	Symbol	safe_erealloc		3915849						
ANR	3915950	Symbol	try_catch_offset		3915849						
ANR	3915951	Symbol	elem -> finally_op		3915849						
ANR	3915952	Symbol	* op_array		3915849						
ANR	3915953	Symbol	elem -> catch_op		3915849						
ANR	3915954	Symbol	op_array -> last_try_catch		3915849						
ANR	3915955	Symbol	try_op		3915849						
ANR	3915956	Symbol	elem -> try_op		3915849						
ANR	3915957	Symbol	elem -> finally_end		3915849						
ANR	3915958	Symbol	op_array -> try_catch_array		3915849						
ANR	3915959	Symbol	* elem		3915849						
ANR	3915960	Symbol	op_array		3915849						
ANR	3915961	Function	function_add_ref	916:0:26965:27544							
ANR	3915962	FunctionDef	function_add_ref (zend_function * function)		3915961	0					
ANR	3915963	CompoundStatement		917:0:27031:27544	3915961	0					
ANR	3915964	IfStatement	if ( function -> type == ZEND_USER_FUNCTION )		3915961	0					
ANR	3915965	Condition	function -> type == ZEND_USER_FUNCTION	918:5:27038:27073	3915961	0	True				
ANR	3915966	EqualityExpression	function -> type == ZEND_USER_FUNCTION		3915961	0		==			
ANR	3915967	PtrMemberAccess	function -> type		3915961	0					
ANR	3915968	Identifier	function		3915961	0					
ANR	3915969	Identifier	type		3915961	1					
ANR	3915970	Identifier	ZEND_USER_FUNCTION		3915961	1					
ANR	3915971	CompoundStatement		3:2:48:93	3915961	1					
ANR	3915972	IdentifierDeclStatement	zend_op_array * op_array = & function -> op_array ;	919:2:27080:27125	3915961	0	True				
ANR	3915973	IdentifierDecl	* op_array = & function -> op_array		3915961	0					
ANR	3915974	IdentifierDeclType	zend_op_array *		3915961	0					
ANR	3915975	Identifier	op_array		3915961	1					
ANR	3915976	AssignmentExpression	* op_array = & function -> op_array		3915961	2		=			
ANR	3915977	Identifier	op_array		3915961	0					
ANR	3915978	UnaryOperationExpression	& function -> op_array		3915961	1					
ANR	3915979	UnaryOperator	&		3915961	0					
ANR	3915980	PtrMemberAccess	function -> op_array		3915961	1					
ANR	3915981	Identifier	function		3915961	0					
ANR	3915982	Identifier	op_array		3915961	1					
ANR	3915983	IfStatement	if ( op_array -> refcount )		3915961	1					
ANR	3915984	Condition	op_array -> refcount	921:6:27134:27151	3915961	0	True				
ANR	3915985	PtrMemberAccess	op_array -> refcount		3915961	0					
ANR	3915986	Identifier	op_array		3915961	0					
ANR	3915987	Identifier	refcount		3915961	1					
ANR	3915988	CompoundStatement		5:26:122:122	3915961	1					
ANR	3915989	ExpressionStatement	( * op_array -> refcount ) ++	922:3:27159:27182	3915961	0	True				
ANR	3915990	PostIncDecOperationExpression	( * op_array -> refcount ) ++		3915961	0					
ANR	3915991	UnaryOperationExpression	* op_array -> refcount		3915961	0					
ANR	3915992	UnaryOperator	*		3915961	0					
ANR	3915993	PtrMemberAccess	op_array -> refcount		3915961	1					
ANR	3915994	Identifier	op_array		3915961	0					
ANR	3915995	Identifier	refcount		3915961	1					
ANR	3915996	IncDec	++		3915961	1					
ANR	3915997	IfStatement	if ( op_array -> static_variables )		3915961	2					
ANR	3915998	Condition	op_array -> static_variables	924:6:27194:27219	3915961	0	True				
ANR	3915999	PtrMemberAccess	op_array -> static_variables		3915961	0					
ANR	3916000	Identifier	op_array		3915961	0					
ANR	3916001	Identifier	static_variables		3915961	1					
ANR	3916002	CompoundStatement		8:34:190:190	3915961	1					
ANR	3916003	IfStatement	if ( ! ( GC_FLAGS ( op_array -> static_variables ) & IS_ARRAY_IMMUTABLE ) )		3915961	0					
ANR	3916004	Condition	! ( GC_FLAGS ( op_array -> static_variables ) & IS_ARRAY_IMMUTABLE )	925:7:27231:27290	3915961	0	True				
ANR	3916005	UnaryOperationExpression	! ( GC_FLAGS ( op_array -> static_variables ) & IS_ARRAY_IMMUTABLE )		3915961	0					
ANR	3916006	UnaryOperator	!		3915961	0					
ANR	3916007	BitAndExpression	GC_FLAGS ( op_array -> static_variables ) & IS_ARRAY_IMMUTABLE		3915961	1		&			
ANR	3916008	CallExpression	GC_FLAGS ( op_array -> static_variables )		3915961	0					
ANR	3916009	Callee	GC_FLAGS		3915961	0					
ANR	3916010	Identifier	GC_FLAGS		3915961	0					
ANR	3916011	ArgumentList	op_array -> static_variables		3915961	1					
ANR	3916012	Argument	op_array -> static_variables		3915961	0					
ANR	3916013	PtrMemberAccess	op_array -> static_variables		3915961	0					
ANR	3916014	Identifier	op_array		3915961	0					
ANR	3916015	Identifier	static_variables		3915961	1					
ANR	3916016	Identifier	IS_ARRAY_IMMUTABLE		3915961	1					
ANR	3916017	CompoundStatement		9:69:261:261	3915961	1					
ANR	3916018	ExpressionStatement	GC_REFCOUNT ( op_array -> static_variables ) ++	926:4:27299:27340	3915961	0	True				
ANR	3916019	PostIncDecOperationExpression	GC_REFCOUNT ( op_array -> static_variables ) ++		3915961	0					
ANR	3916020	CallExpression	GC_REFCOUNT ( op_array -> static_variables )		3915961	0					
ANR	3916021	Callee	GC_REFCOUNT		3915961	0					
ANR	3916022	Identifier	GC_REFCOUNT		3915961	0					
ANR	3916023	ArgumentList	op_array -> static_variables		3915961	1					
ANR	3916024	Argument	op_array -> static_variables		3915961	0					
ANR	3916025	PtrMemberAccess	op_array -> static_variables		3915961	0					
ANR	3916026	Identifier	op_array		3915961	0					
ANR	3916027	Identifier	static_variables		3915961	1					
ANR	3916028	IncDec	++		3915961	1					
ANR	3916029	ExpressionStatement	op_array -> run_time_cache = NULL	929:2:27353:27384	3915961	3	True				
ANR	3916030	AssignmentExpression	op_array -> run_time_cache = NULL		3915961	0		=			
ANR	3916031	PtrMemberAccess	op_array -> run_time_cache		3915961	0					
ANR	3916032	Identifier	op_array		3915961	0					
ANR	3916033	Identifier	run_time_cache		3915961	1					
ANR	3916034	Identifier	NULL		3915961	1					
ANR	3916035	ElseStatement	else		3915961	0					
ANR	3916036	IfStatement	if ( function -> type == ZEND_INTERNAL_FUNCTION )		3915961	0					
ANR	3916037	Condition	function -> type == ZEND_INTERNAL_FUNCTION	930:12:27398:27437	3915961	0	True				
ANR	3916038	EqualityExpression	function -> type == ZEND_INTERNAL_FUNCTION		3915961	0		==			
ANR	3916039	PtrMemberAccess	function -> type		3915961	0					
ANR	3916040	Identifier	function		3915961	0					
ANR	3916041	Identifier	type		3915961	1					
ANR	3916042	Identifier	ZEND_INTERNAL_FUNCTION		3915961	1					
ANR	3916043	CompoundStatement		14:54:408:408	3915961	1					
ANR	3916044	IfStatement	if ( function -> common . function_name )		3915961	0					
ANR	3916045	Condition	function -> common . function_name	931:6:27448:27477	3915961	0	True				
ANR	3916046	MemberAccess	function -> common . function_name		3915961	0					
ANR	3916047	PtrMemberAccess	function -> common		3915961	0					
ANR	3916048	Identifier	function		3915961	0					
ANR	3916049	Identifier	common		3915961	1					
ANR	3916050	Identifier	function_name		3915961	1					
ANR	3916051	CompoundStatement		15:38:448:448	3915961	1					
ANR	3916052	ExpressionStatement	zend_string_addref ( function -> common . function_name )	932:3:27485:27535	3915961	0	True				
ANR	3916053	CallExpression	zend_string_addref ( function -> common . function_name )		3915961	0					
ANR	3916054	Callee	zend_string_addref		3915961	0					
ANR	3916055	Identifier	zend_string_addref		3915961	0					
ANR	3916056	ArgumentList	function -> common . function_name		3915961	1					
ANR	3916057	Argument	function -> common . function_name		3915961	0					
ANR	3916058	MemberAccess	function -> common . function_name		3915961	0					
ANR	3916059	PtrMemberAccess	function -> common		3915961	0					
ANR	3916060	Identifier	function		3915961	0					
ANR	3916061	Identifier	common		3915961	1					
ANR	3916062	Identifier	function_name		3915961	1					
ANR	3916063	ReturnType	ZEND_API void		3915961	1					
ANR	3916064	Identifier	function_add_ref		3915961	2					
ANR	3916065	ParameterList	zend_function * function		3915961	3					
ANR	3916066	Parameter	zend_function * function	916:31:26996:27018	3915961	0	True				
ANR	3916067	ParameterType	zend_function *		3915961	0					
ANR	3916068	Identifier	function		3915961	1					
ANR	3916069	CFGEntryNode	ENTRY		3915961		True				
ANR	3916070	CFGExitNode	EXIT		3915961		True				
ANR	3916071	Symbol	NULL		3915961						
ANR	3916072	Symbol	function -> common		3915961						
ANR	3916073	Symbol	* function		3915961						
ANR	3916074	Symbol	function -> common . function_name		3915961						
ANR	3916075	Symbol	* op_array -> refcount		3915961						
ANR	3916076	Symbol	GC_FLAGS		3915961						
ANR	3916077	Symbol	IS_ARRAY_IMMUTABLE		3915961						
ANR	3916078	Symbol	op_array -> refcount		3915961						
ANR	3916079	Symbol	* op_array		3915961						
ANR	3916080	Symbol	function -> type		3915961						
ANR	3916081	Symbol	op_array -> run_time_cache		3915961						
ANR	3916082	Symbol	ZEND_INTERNAL_FUNCTION		3915961						
ANR	3916083	Symbol	ZEND_USER_FUNCTION		3915961						
ANR	3916084	Symbol	function		3915961						
ANR	3916085	Symbol	& function -> op_array		3915961						
ANR	3916086	Symbol	op_array -> static_variables		3915961						
ANR	3916087	Symbol	* * op_array		3915961						
ANR	3916088	Symbol	GC_REFCOUNT		3915961						
ANR	3916089	Symbol	op_array		3915961						
ANR	3916090	Function	do_bind_function	938:0:27557:29092							
ANR	3916091	FunctionDef	"do_bind_function (const zend_op_array * op_array , const zend_op * opline , HashTable * function_table , zend_bool compile_time)"		3916090	0					
ANR	3916092	CompoundStatement		939:0:27702:29092	3916090	0					
ANR	3916093	IdentifierDeclStatement	"zend_function * function , * new_function ;"	940:1:27705:27743	3916090	0	True				
ANR	3916094	IdentifierDecl	* function		3916090	0					
ANR	3916095	IdentifierDeclType	zend_function *		3916090	0					
ANR	3916096	Identifier	function		3916090	1					
ANR	3916097	IdentifierDecl	* new_function		3916090	1					
ANR	3916098	IdentifierDeclType	zend_function *		3916090	0					
ANR	3916099	Identifier	new_function		3916090	1					
ANR	3916100	IdentifierDeclStatement	"zval * op1 , * op2 ;"	941:1:27746:27761	3916090	1	True				
ANR	3916101	IdentifierDecl	* op1		3916090	0					
ANR	3916102	IdentifierDeclType	zval *		3916090	0					
ANR	3916103	Identifier	op1		3916090	1					
ANR	3916104	IdentifierDecl	* op2		3916090	1					
ANR	3916105	IdentifierDeclType	zval *		3916090	0					
ANR	3916106	Identifier	op2		3916090	1					
ANR	3916107	IfStatement	if ( compile_time )		3916090	2					
ANR	3916108	Condition	compile_time	943:5:27769:27780	3916090	0	True				
ANR	3916109	Identifier	compile_time		3916090	0					
ANR	3916110	CompoundStatement		5:19:80:80	3916090	1					
ANR	3916111	ExpressionStatement	"op1 = CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"	944:2:27787:27839	3916090	0	True				
ANR	3916112	AssignmentExpression	"op1 = CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"		3916090	0		=			
ANR	3916113	Identifier	op1		3916090	0					
ANR	3916114	CallExpression	"CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"		3916090	1					
ANR	3916115	Callee	CT_CONSTANT_EX		3916090	0					
ANR	3916116	Identifier	CT_CONSTANT_EX		3916090	0					
ANR	3916117	ArgumentList	op_array		3916090	1					
ANR	3916118	Argument	op_array		3916090	0					
ANR	3916119	Identifier	op_array		3916090	0					
ANR	3916120	Argument	opline -> op1 . constant		3916090	1					
ANR	3916121	MemberAccess	opline -> op1 . constant		3916090	0					
ANR	3916122	PtrMemberAccess	opline -> op1		3916090	0					
ANR	3916123	Identifier	opline		3916090	0					
ANR	3916124	Identifier	op1		3916090	1					
ANR	3916125	Identifier	constant		3916090	1					
ANR	3916126	ExpressionStatement	"op2 = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"	945:2:27843:27895	3916090	1	True				
ANR	3916127	AssignmentExpression	"op2 = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3916090	0		=			
ANR	3916128	Identifier	op2		3916090	0					
ANR	3916129	CallExpression	"CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3916090	1					
ANR	3916130	Callee	CT_CONSTANT_EX		3916090	0					
ANR	3916131	Identifier	CT_CONSTANT_EX		3916090	0					
ANR	3916132	ArgumentList	op_array		3916090	1					
ANR	3916133	Argument	op_array		3916090	0					
ANR	3916134	Identifier	op_array		3916090	0					
ANR	3916135	Argument	opline -> op2 . constant		3916090	1					
ANR	3916136	MemberAccess	opline -> op2 . constant		3916090	0					
ANR	3916137	PtrMemberAccess	opline -> op2		3916090	0					
ANR	3916138	Identifier	opline		3916090	0					
ANR	3916139	Identifier	op2		3916090	1					
ANR	3916140	Identifier	constant		3916090	1					
ANR	3916141	ElseStatement	else		3916090	0					
ANR	3916142	CompoundStatement		8:8:202:202	3916090	0					
ANR	3916143	ExpressionStatement	"op1 = RT_CONSTANT ( op_array , opline -> op1 )"	947:2:27909:27949	3916090	0	True				
ANR	3916144	AssignmentExpression	"op1 = RT_CONSTANT ( op_array , opline -> op1 )"		3916090	0		=			
ANR	3916145	Identifier	op1		3916090	0					
ANR	3916146	CallExpression	"RT_CONSTANT ( op_array , opline -> op1 )"		3916090	1					
ANR	3916147	Callee	RT_CONSTANT		3916090	0					
ANR	3916148	Identifier	RT_CONSTANT		3916090	0					
ANR	3916149	ArgumentList	op_array		3916090	1					
ANR	3916150	Argument	op_array		3916090	0					
ANR	3916151	Identifier	op_array		3916090	0					
ANR	3916152	Argument	opline -> op1		3916090	1					
ANR	3916153	PtrMemberAccess	opline -> op1		3916090	0					
ANR	3916154	Identifier	opline		3916090	0					
ANR	3916155	Identifier	op1		3916090	1					
ANR	3916156	ExpressionStatement	"op2 = RT_CONSTANT ( op_array , opline -> op2 )"	948:2:27953:27993	3916090	1	True				
ANR	3916157	AssignmentExpression	"op2 = RT_CONSTANT ( op_array , opline -> op2 )"		3916090	0		=			
ANR	3916158	Identifier	op2		3916090	0					
ANR	3916159	CallExpression	"RT_CONSTANT ( op_array , opline -> op2 )"		3916090	1					
ANR	3916160	Callee	RT_CONSTANT		3916090	0					
ANR	3916161	Identifier	RT_CONSTANT		3916090	0					
ANR	3916162	ArgumentList	op_array		3916090	1					
ANR	3916163	Argument	op_array		3916090	0					
ANR	3916164	Identifier	op_array		3916090	0					
ANR	3916165	Argument	opline -> op2		3916090	1					
ANR	3916166	PtrMemberAccess	opline -> op2		3916090	0					
ANR	3916167	Identifier	opline		3916090	0					
ANR	3916168	Identifier	op2		3916090	1					
ANR	3916169	ExpressionStatement	"function = zend_hash_find_ptr ( function_table , Z_STR_P ( op1 ) )"	951:1:28000:28059	3916090	3	True				
ANR	3916170	AssignmentExpression	"function = zend_hash_find_ptr ( function_table , Z_STR_P ( op1 ) )"		3916090	0		=			
ANR	3916171	Identifier	function		3916090	0					
ANR	3916172	CallExpression	"zend_hash_find_ptr ( function_table , Z_STR_P ( op1 ) )"		3916090	1					
ANR	3916173	Callee	zend_hash_find_ptr		3916090	0					
ANR	3916174	Identifier	zend_hash_find_ptr		3916090	0					
ANR	3916175	ArgumentList	function_table		3916090	1					
ANR	3916176	Argument	function_table		3916090	0					
ANR	3916177	Identifier	function_table		3916090	0					
ANR	3916178	Argument	Z_STR_P ( op1 )		3916090	1					
ANR	3916179	CallExpression	Z_STR_P ( op1 )		3916090	0					
ANR	3916180	Callee	Z_STR_P		3916090	0					
ANR	3916181	Identifier	Z_STR_P		3916090	0					
ANR	3916182	ArgumentList	op1		3916090	1					
ANR	3916183	Argument	op1		3916090	0					
ANR	3916184	Identifier	op1		3916090	0					
ANR	3916185	ExpressionStatement	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"	952:1:28062:28128	3916090	4	True				
ANR	3916186	AssignmentExpression	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		3916090	0		=			
ANR	3916187	Identifier	new_function		3916090	0					
ANR	3916188	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		3916090	1					
ANR	3916189	Callee	zend_arena_alloc		3916090	0					
ANR	3916190	Identifier	zend_arena_alloc		3916090	0					
ANR	3916191	ArgumentList	& CG ( arena )		3916090	1					
ANR	3916192	Argument	& CG ( arena )		3916090	0					
ANR	3916193	UnaryOperationExpression	& CG ( arena )		3916090	0					
ANR	3916194	UnaryOperator	&		3916090	0					
ANR	3916195	CallExpression	CG ( arena )		3916090	1					
ANR	3916196	Callee	CG		3916090	0					
ANR	3916197	Identifier	CG		3916090	0					
ANR	3916198	ArgumentList	arena		3916090	1					
ANR	3916199	Argument	arena		3916090	0					
ANR	3916200	Identifier	arena		3916090	0					
ANR	3916201	Argument	sizeof ( zend_op_array )		3916090	1					
ANR	3916202	SizeofExpression	sizeof ( zend_op_array )		3916090	0					
ANR	3916203	Sizeof	sizeof		3916090	0					
ANR	3916204	SizeofOperand	zend_op_array		3916090	1					
ANR	3916205	ExpressionStatement	"memcpy ( new_function , function , sizeof ( zend_op_array ) )"	953:1:28131:28184	3916090	5	True				
ANR	3916206	CallExpression	"memcpy ( new_function , function , sizeof ( zend_op_array ) )"		3916090	0					
ANR	3916207	Callee	memcpy		3916090	0					
ANR	3916208	Identifier	memcpy		3916090	0					
ANR	3916209	ArgumentList	new_function		3916090	1					
ANR	3916210	Argument	new_function		3916090	0					
ANR	3916211	Identifier	new_function		3916090	0					
ANR	3916212	Argument	function		3916090	1					
ANR	3916213	Identifier	function		3916090	0					
ANR	3916214	Argument	sizeof ( zend_op_array )		3916090	2					
ANR	3916215	SizeofExpression	sizeof ( zend_op_array )		3916090	0					
ANR	3916216	Sizeof	sizeof		3916090	0					
ANR	3916217	SizeofOperand	zend_op_array		3916090	1					
ANR	3916218	IfStatement	"if ( zend_hash_add_ptr ( function_table , Z_STR_P ( op2 ) , new_function ) == NULL )"		3916090	6					
ANR	3916219	Condition	"zend_hash_add_ptr ( function_table , Z_STR_P ( op2 ) , new_function ) == NULL"	954:5:28191:28259	3916090	0	True				
ANR	3916220	EqualityExpression	"zend_hash_add_ptr ( function_table , Z_STR_P ( op2 ) , new_function ) == NULL"		3916090	0		==			
ANR	3916221	CallExpression	"zend_hash_add_ptr ( function_table , Z_STR_P ( op2 ) , new_function )"		3916090	0					
ANR	3916222	Callee	zend_hash_add_ptr		3916090	0					
ANR	3916223	Identifier	zend_hash_add_ptr		3916090	0					
ANR	3916224	ArgumentList	function_table		3916090	1					
ANR	3916225	Argument	function_table		3916090	0					
ANR	3916226	Identifier	function_table		3916090	0					
ANR	3916227	Argument	Z_STR_P ( op2 )		3916090	1					
ANR	3916228	CallExpression	Z_STR_P ( op2 )		3916090	0					
ANR	3916229	Callee	Z_STR_P		3916090	0					
ANR	3916230	Identifier	Z_STR_P		3916090	0					
ANR	3916231	ArgumentList	op2		3916090	1					
ANR	3916232	Argument	op2		3916090	0					
ANR	3916233	Identifier	op2		3916090	0					
ANR	3916234	Argument	new_function		3916090	2					
ANR	3916235	Identifier	new_function		3916090	0					
ANR	3916236	Identifier	NULL		3916090	1					
ANR	3916237	CompoundStatement		18:2:625:652	3916090	1					
ANR	3916238	IdentifierDeclStatement	int error_level = compile_time ? E_COMPILE_ERROR : E_ERROR ;	955:2:28266:28324	3916090	0	True				
ANR	3916239	IdentifierDecl	error_level = compile_time ? E_COMPILE_ERROR : E_ERROR		3916090	0					
ANR	3916240	IdentifierDeclType	int		3916090	0					
ANR	3916241	Identifier	error_level		3916090	1					
ANR	3916242	AssignmentExpression	error_level = compile_time ? E_COMPILE_ERROR : E_ERROR		3916090	2		=			
ANR	3916243	Identifier	error_level		3916090	0					
ANR	3916244	ConditionalExpression	compile_time ? E_COMPILE_ERROR : E_ERROR		3916090	1					
ANR	3916245	Condition	compile_time		3916090	0					
ANR	3916246	Identifier	compile_time		3916090	0					
ANR	3916247	Identifier	E_COMPILE_ERROR		3916090	1					
ANR	3916248	Identifier	E_ERROR		3916090	2					
ANR	3916249	IdentifierDeclStatement	zend_function * old_function ;	956:2:28328:28355	3916090	1	True				
ANR	3916250	IdentifierDecl	* old_function		3916090	0					
ANR	3916251	IdentifierDeclType	zend_function *		3916090	0					
ANR	3916252	Identifier	old_function		3916090	1					
ANR	3916253	IfStatement	"if ( ( old_function = zend_hash_find_ptr ( function_table , Z_STR_P ( op2 ) ) ) != NULL && old_function -> type == ZEND_USER_FUNCTION && old_function -> op_array . last > 0 )"		3916090	2					
ANR	3916254	Condition	"( old_function = zend_hash_find_ptr ( function_table , Z_STR_P ( op2 ) ) ) != NULL && old_function -> type == ZEND_USER_FUNCTION && old_function -> op_array . last > 0"	958:6:28364:28521	3916090	0	True				
ANR	3916255	AndExpression	"( old_function = zend_hash_find_ptr ( function_table , Z_STR_P ( op2 ) ) ) != NULL && old_function -> type == ZEND_USER_FUNCTION && old_function -> op_array . last > 0"		3916090	0		&&			
ANR	3916256	EqualityExpression	"( old_function = zend_hash_find_ptr ( function_table , Z_STR_P ( op2 ) ) ) != NULL"		3916090	0		!=			
ANR	3916257	AssignmentExpression	"old_function = zend_hash_find_ptr ( function_table , Z_STR_P ( op2 ) )"		3916090	0		=			
ANR	3916258	Identifier	old_function		3916090	0					
ANR	3916259	CallExpression	"zend_hash_find_ptr ( function_table , Z_STR_P ( op2 ) )"		3916090	1					
ANR	3916260	Callee	zend_hash_find_ptr		3916090	0					
ANR	3916261	Identifier	zend_hash_find_ptr		3916090	0					
ANR	3916262	ArgumentList	function_table		3916090	1					
ANR	3916263	Argument	function_table		3916090	0					
ANR	3916264	Identifier	function_table		3916090	0					
ANR	3916265	Argument	Z_STR_P ( op2 )		3916090	1					
ANR	3916266	CallExpression	Z_STR_P ( op2 )		3916090	0					
ANR	3916267	Callee	Z_STR_P		3916090	0					
ANR	3916268	Identifier	Z_STR_P		3916090	0					
ANR	3916269	ArgumentList	op2		3916090	1					
ANR	3916270	Argument	op2		3916090	0					
ANR	3916271	Identifier	op2		3916090	0					
ANR	3916272	Identifier	NULL		3916090	1					
ANR	3916273	AndExpression	old_function -> type == ZEND_USER_FUNCTION && old_function -> op_array . last > 0		3916090	1		&&			
ANR	3916274	EqualityExpression	old_function -> type == ZEND_USER_FUNCTION		3916090	0		==			
ANR	3916275	PtrMemberAccess	old_function -> type		3916090	0					
ANR	3916276	Identifier	old_function		3916090	0					
ANR	3916277	Identifier	type		3916090	1					
ANR	3916278	Identifier	ZEND_USER_FUNCTION		3916090	1					
ANR	3916279	RelationalExpression	old_function -> op_array . last > 0		3916090	1		>			
ANR	3916280	MemberAccess	old_function -> op_array . last		3916090	0					
ANR	3916281	PtrMemberAccess	old_function -> op_array		3916090	0					
ANR	3916282	Identifier	old_function		3916090	0					
ANR	3916283	Identifier	op_array		3916090	1					
ANR	3916284	Identifier	last		3916090	1					
ANR	3916285	PrimaryExpression	0		3916090	1					
ANR	3916286	CompoundStatement		22:39:821:821	3916090	1					
ANR	3916287	ExpressionStatement	"zend_error_noreturn ( error_level , ""Cannot redeclare %s() (previously declared in %s:%d)"" , ZSTR_VAL ( function -> common . function_name ) , ZSTR_VAL ( old_function -> op_array . filename ) , old_function -> op_array . opcodes [ 0 ] . lineno )"	961:3:28529:28762	3916090	0	True				
ANR	3916288	CallExpression	"zend_error_noreturn ( error_level , ""Cannot redeclare %s() (previously declared in %s:%d)"" , ZSTR_VAL ( function -> common . function_name ) , ZSTR_VAL ( old_function -> op_array . filename ) , old_function -> op_array . opcodes [ 0 ] . lineno )"		3916090	0					
ANR	3916289	Callee	zend_error_noreturn		3916090	0					
ANR	3916290	Identifier	zend_error_noreturn		3916090	0					
ANR	3916291	ArgumentList	error_level		3916090	1					
ANR	3916292	Argument	error_level		3916090	0					
ANR	3916293	Identifier	error_level		3916090	0					
ANR	3916294	Argument	"""Cannot redeclare %s() (previously declared in %s:%d)"""		3916090	1					
ANR	3916295	PrimaryExpression	"""Cannot redeclare %s() (previously declared in %s:%d)"""		3916090	0					
ANR	3916296	Argument	ZSTR_VAL ( function -> common . function_name )		3916090	2					
ANR	3916297	CallExpression	ZSTR_VAL ( function -> common . function_name )		3916090	0					
ANR	3916298	Callee	ZSTR_VAL		3916090	0					
ANR	3916299	Identifier	ZSTR_VAL		3916090	0					
ANR	3916300	ArgumentList	function -> common . function_name		3916090	1					
ANR	3916301	Argument	function -> common . function_name		3916090	0					
ANR	3916302	MemberAccess	function -> common . function_name		3916090	0					
ANR	3916303	PtrMemberAccess	function -> common		3916090	0					
ANR	3916304	Identifier	function		3916090	0					
ANR	3916305	Identifier	common		3916090	1					
ANR	3916306	Identifier	function_name		3916090	1					
ANR	3916307	Argument	ZSTR_VAL ( old_function -> op_array . filename )		3916090	3					
ANR	3916308	CallExpression	ZSTR_VAL ( old_function -> op_array . filename )		3916090	0					
ANR	3916309	Callee	ZSTR_VAL		3916090	0					
ANR	3916310	Identifier	ZSTR_VAL		3916090	0					
ANR	3916311	ArgumentList	old_function -> op_array . filename		3916090	1					
ANR	3916312	Argument	old_function -> op_array . filename		3916090	0					
ANR	3916313	MemberAccess	old_function -> op_array . filename		3916090	0					
ANR	3916314	PtrMemberAccess	old_function -> op_array		3916090	0					
ANR	3916315	Identifier	old_function		3916090	0					
ANR	3916316	Identifier	op_array		3916090	1					
ANR	3916317	Identifier	filename		3916090	1					
ANR	3916318	Argument	old_function -> op_array . opcodes [ 0 ] . lineno		3916090	4					
ANR	3916319	MemberAccess	old_function -> op_array . opcodes [ 0 ] . lineno		3916090	0					
ANR	3916320	ArrayIndexing	old_function -> op_array . opcodes [ 0 ]		3916090	0					
ANR	3916321	MemberAccess	old_function -> op_array . opcodes		3916090	0					
ANR	3916322	PtrMemberAccess	old_function -> op_array		3916090	0					
ANR	3916323	Identifier	old_function		3916090	0					
ANR	3916324	Identifier	op_array		3916090	1					
ANR	3916325	Identifier	opcodes		3916090	1					
ANR	3916326	PrimaryExpression	0		3916090	1					
ANR	3916327	Identifier	lineno		3916090	1					
ANR	3916328	ElseStatement	else		3916090	0					
ANR	3916329	CompoundStatement		27:9:1070:1070	3916090	0					
ANR	3916330	ExpressionStatement	"zend_error_noreturn ( error_level , ""Cannot redeclare %s()"" , ZSTR_VAL ( function -> common . function_name ) )"	966:3:28778:28877	3916090	0	True				
ANR	3916331	CallExpression	"zend_error_noreturn ( error_level , ""Cannot redeclare %s()"" , ZSTR_VAL ( function -> common . function_name ) )"		3916090	0					
ANR	3916332	Callee	zend_error_noreturn		3916090	0					
ANR	3916333	Identifier	zend_error_noreturn		3916090	0					
ANR	3916334	ArgumentList	error_level		3916090	1					
ANR	3916335	Argument	error_level		3916090	0					
ANR	3916336	Identifier	error_level		3916090	0					
ANR	3916337	Argument	"""Cannot redeclare %s()"""		3916090	1					
ANR	3916338	PrimaryExpression	"""Cannot redeclare %s()"""		3916090	0					
ANR	3916339	Argument	ZSTR_VAL ( function -> common . function_name )		3916090	2					
ANR	3916340	CallExpression	ZSTR_VAL ( function -> common . function_name )		3916090	0					
ANR	3916341	Callee	ZSTR_VAL		3916090	0					
ANR	3916342	Identifier	ZSTR_VAL		3916090	0					
ANR	3916343	ArgumentList	function -> common . function_name		3916090	1					
ANR	3916344	Argument	function -> common . function_name		3916090	0					
ANR	3916345	MemberAccess	function -> common . function_name		3916090	0					
ANR	3916346	PtrMemberAccess	function -> common		3916090	0					
ANR	3916347	Identifier	function		3916090	0					
ANR	3916348	Identifier	common		3916090	1					
ANR	3916349	Identifier	function_name		3916090	1					
ANR	3916350	ReturnStatement	return FAILURE ;	968:2:28885:28899	3916090	3	True				
ANR	3916351	Identifier	FAILURE		3916090	0					
ANR	3916352	ElseStatement	else		3916090	0					
ANR	3916353	CompoundStatement		31:8:1206:1206	3916090	0					
ANR	3916354	IfStatement	if ( function -> op_array . refcount )		3916090	0					
ANR	3916355	Condition	function -> op_array . refcount	970:6:28917:28943	3916090	0	True				
ANR	3916356	MemberAccess	function -> op_array . refcount		3916090	0					
ANR	3916357	PtrMemberAccess	function -> op_array		3916090	0					
ANR	3916358	Identifier	function		3916090	0					
ANR	3916359	Identifier	op_array		3916090	1					
ANR	3916360	Identifier	refcount		3916090	1					
ANR	3916361	CompoundStatement		32:35:1243:1243	3916090	1					
ANR	3916362	ExpressionStatement	( * function -> op_array . refcount ) ++	971:3:28951:28983	3916090	0	True				
ANR	3916363	PostIncDecOperationExpression	( * function -> op_array . refcount ) ++		3916090	0					
ANR	3916364	UnaryOperationExpression	* function -> op_array . refcount		3916090	0					
ANR	3916365	UnaryOperator	*		3916090	0					
ANR	3916366	MemberAccess	function -> op_array . refcount		3916090	1					
ANR	3916367	PtrMemberAccess	function -> op_array		3916090	0					
ANR	3916368	Identifier	function		3916090	0					
ANR	3916369	Identifier	op_array		3916090	1					
ANR	3916370	Identifier	refcount		3916090	1					
ANR	3916371	IncDec	++		3916090	1					
ANR	3916372	ExpressionStatement	function -> op_array . static_variables = NULL	973:2:28991:29033	3916090	1	True				
ANR	3916373	AssignmentExpression	function -> op_array . static_variables = NULL		3916090	0		=			
ANR	3916374	MemberAccess	function -> op_array . static_variables		3916090	0					
ANR	3916375	PtrMemberAccess	function -> op_array		3916090	0					
ANR	3916376	Identifier	function		3916090	0					
ANR	3916377	Identifier	op_array		3916090	1					
ANR	3916378	Identifier	static_variables		3916090	1					
ANR	3916379	Identifier	NULL		3916090	1					
ANR	3916380	ReturnStatement	return SUCCESS ;	974:2:29073:29087	3916090	2	True				
ANR	3916381	Identifier	SUCCESS		3916090	0					
ANR	3916382	ReturnType	ZEND_API int		3916090	1					
ANR	3916383	Identifier	do_bind_function		3916090	2					
ANR	3916384	ParameterList	"const zend_op_array * op_array , const zend_op * opline , HashTable * function_table , zend_bool compile_time"		3916090	3					
ANR	3916385	Parameter	const zend_op_array * op_array	938:30:27587:27615	3916090	0	True				
ANR	3916386	ParameterType	const zend_op_array *		3916090	0					
ANR	3916387	Identifier	op_array		3916090	1					
ANR	3916388	Parameter	const zend_op * opline	938:61:27618:27638	3916090	1	True				
ANR	3916389	ParameterType	const zend_op *		3916090	0					
ANR	3916390	Identifier	opline		3916090	1					
ANR	3916391	Parameter	HashTable * function_table	938:84:27641:27665	3916090	2	True				
ANR	3916392	ParameterType	HashTable *		3916090	0					
ANR	3916393	Identifier	function_table		3916090	1					
ANR	3916394	Parameter	zend_bool compile_time	938:111:27668:27689	3916090	3	True				
ANR	3916395	ParameterType	zend_bool		3916090	0					
ANR	3916396	Identifier	compile_time		3916090	1					
ANR	3916397	CFGEntryNode	ENTRY		3916090		True				
ANR	3916398	CFGExitNode	EXIT		3916090		True				
ANR	3916399	Symbol	compile_time		3916090						
ANR	3916400	Symbol	E_COMPILE_ERROR		3916090						
ANR	3916401	Symbol	old_function -> op_array . last		3916090						
ANR	3916402	Symbol	* old_function -> op_array . opcodes		3916090						
ANR	3916403	Symbol	arena		3916090						
ANR	3916404	Symbol	RT_CONSTANT		3916090						
ANR	3916405	Symbol	* old_function		3916090						
ANR	3916406	Symbol	function -> op_array . static_variables		3916090						
ANR	3916407	Symbol	& CG		3916090						
ANR	3916408	Symbol	opline		3916090						
ANR	3916409	Symbol	old_function		3916090						
ANR	3916410	Symbol	ZEND_USER_FUNCTION		3916090						
ANR	3916411	Symbol	function		3916090						
ANR	3916412	Symbol	old_function -> op_array . opcodes [ 0 ] . lineno		3916090						
ANR	3916413	Symbol	zend_hash_find_ptr		3916090						
ANR	3916414	Symbol	NULL		3916090						
ANR	3916415	Symbol	zend_arena_alloc		3916090						
ANR	3916416	Symbol	function -> op_array . refcount		3916090						
ANR	3916417	Symbol	Z_STR_P		3916090						
ANR	3916418	Symbol	zend_hash_add_ptr		3916090						
ANR	3916419	Symbol	function_table		3916090						
ANR	3916420	Symbol	opline -> op1		3916090						
ANR	3916421	Symbol	* function -> op_array . refcount		3916090						
ANR	3916422	Symbol	opline -> op2		3916090						
ANR	3916423	Symbol	error_level		3916090						
ANR	3916424	Symbol	old_function -> op_array . filename		3916090						
ANR	3916425	Symbol	* old_function -> op_array		3916090						
ANR	3916426	Symbol	function -> common . function_name		3916090						
ANR	3916427	Symbol	function -> op_array		3916090						
ANR	3916428	Symbol	opline -> op1 . constant		3916090						
ANR	3916429	Symbol	* * old_function		3916090						
ANR	3916430	Symbol	CT_CONSTANT_EX		3916090						
ANR	3916431	Symbol	old_function -> op_array . opcodes		3916090						
ANR	3916432	Symbol	* * function		3916090						
ANR	3916433	Symbol	SUCCESS		3916090						
ANR	3916434	Symbol	* function -> op_array		3916090						
ANR	3916435	Symbol	function -> common		3916090						
ANR	3916436	Symbol	* function		3916090						
ANR	3916437	Symbol	FAILURE		3916090						
ANR	3916438	Symbol	ZSTR_VAL		3916090						
ANR	3916439	Symbol	new_function		3916090						
ANR	3916440	Symbol	op2		3916090						
ANR	3916441	Symbol	op1		3916090						
ANR	3916442	Symbol	E_ERROR		3916090						
ANR	3916443	Symbol	* opline		3916090						
ANR	3916444	Symbol	opline -> op2 . constant		3916090						
ANR	3916445	Symbol	old_function -> type		3916090						
ANR	3916446	Symbol	old_function -> op_array		3916090						
ANR	3916447	Symbol	op_array		3916090						
ANR	3916448	Function	do_bind_class	979:0:29105:30436							
ANR	3916449	FunctionDef	"do_bind_class (const zend_op_array * op_array , const zend_op * opline , HashTable * class_table , zend_bool compile_time)"		3916448	0					
ANR	3916450	CompoundStatement		980:0:29258:30436	3916448	0					
ANR	3916451	IdentifierDeclStatement	zend_class_entry * ce ;	981:1:29261:29281	3916448	0	True				
ANR	3916452	IdentifierDecl	* ce		3916448	0					
ANR	3916453	IdentifierDeclType	zend_class_entry *		3916448	0					
ANR	3916454	Identifier	ce		3916448	1					
ANR	3916455	IdentifierDeclStatement	"zval * op1 , * op2 ;"	982:1:29284:29299	3916448	1	True				
ANR	3916456	IdentifierDecl	* op1		3916448	0					
ANR	3916457	IdentifierDeclType	zval *		3916448	0					
ANR	3916458	Identifier	op1		3916448	1					
ANR	3916459	IdentifierDecl	* op2		3916448	1					
ANR	3916460	IdentifierDeclType	zval *		3916448	0					
ANR	3916461	Identifier	op2		3916448	1					
ANR	3916462	IfStatement	if ( compile_time )		3916448	2					
ANR	3916463	Condition	compile_time	984:5:29307:29318	3916448	0	True				
ANR	3916464	Identifier	compile_time		3916448	0					
ANR	3916465	CompoundStatement		5:19:62:62	3916448	1					
ANR	3916466	ExpressionStatement	"op1 = CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"	985:2:29325:29377	3916448	0	True				
ANR	3916467	AssignmentExpression	"op1 = CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"		3916448	0		=			
ANR	3916468	Identifier	op1		3916448	0					
ANR	3916469	CallExpression	"CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"		3916448	1					
ANR	3916470	Callee	CT_CONSTANT_EX		3916448	0					
ANR	3916471	Identifier	CT_CONSTANT_EX		3916448	0					
ANR	3916472	ArgumentList	op_array		3916448	1					
ANR	3916473	Argument	op_array		3916448	0					
ANR	3916474	Identifier	op_array		3916448	0					
ANR	3916475	Argument	opline -> op1 . constant		3916448	1					
ANR	3916476	MemberAccess	opline -> op1 . constant		3916448	0					
ANR	3916477	PtrMemberAccess	opline -> op1		3916448	0					
ANR	3916478	Identifier	opline		3916448	0					
ANR	3916479	Identifier	op1		3916448	1					
ANR	3916480	Identifier	constant		3916448	1					
ANR	3916481	ExpressionStatement	"op2 = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"	986:2:29381:29433	3916448	1	True				
ANR	3916482	AssignmentExpression	"op2 = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3916448	0		=			
ANR	3916483	Identifier	op2		3916448	0					
ANR	3916484	CallExpression	"CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3916448	1					
ANR	3916485	Callee	CT_CONSTANT_EX		3916448	0					
ANR	3916486	Identifier	CT_CONSTANT_EX		3916448	0					
ANR	3916487	ArgumentList	op_array		3916448	1					
ANR	3916488	Argument	op_array		3916448	0					
ANR	3916489	Identifier	op_array		3916448	0					
ANR	3916490	Argument	opline -> op2 . constant		3916448	1					
ANR	3916491	MemberAccess	opline -> op2 . constant		3916448	0					
ANR	3916492	PtrMemberAccess	opline -> op2		3916448	0					
ANR	3916493	Identifier	opline		3916448	0					
ANR	3916494	Identifier	op2		3916448	1					
ANR	3916495	Identifier	constant		3916448	1					
ANR	3916496	ElseStatement	else		3916448	0					
ANR	3916497	CompoundStatement		8:8:184:184	3916448	0					
ANR	3916498	ExpressionStatement	"op1 = RT_CONSTANT ( op_array , opline -> op1 )"	988:2:29447:29487	3916448	0	True				
ANR	3916499	AssignmentExpression	"op1 = RT_CONSTANT ( op_array , opline -> op1 )"		3916448	0		=			
ANR	3916500	Identifier	op1		3916448	0					
ANR	3916501	CallExpression	"RT_CONSTANT ( op_array , opline -> op1 )"		3916448	1					
ANR	3916502	Callee	RT_CONSTANT		3916448	0					
ANR	3916503	Identifier	RT_CONSTANT		3916448	0					
ANR	3916504	ArgumentList	op_array		3916448	1					
ANR	3916505	Argument	op_array		3916448	0					
ANR	3916506	Identifier	op_array		3916448	0					
ANR	3916507	Argument	opline -> op1		3916448	1					
ANR	3916508	PtrMemberAccess	opline -> op1		3916448	0					
ANR	3916509	Identifier	opline		3916448	0					
ANR	3916510	Identifier	op1		3916448	1					
ANR	3916511	ExpressionStatement	"op2 = RT_CONSTANT ( op_array , opline -> op2 )"	989:2:29491:29531	3916448	1	True				
ANR	3916512	AssignmentExpression	"op2 = RT_CONSTANT ( op_array , opline -> op2 )"		3916448	0		=			
ANR	3916513	Identifier	op2		3916448	0					
ANR	3916514	CallExpression	"RT_CONSTANT ( op_array , opline -> op2 )"		3916448	1					
ANR	3916515	Callee	RT_CONSTANT		3916448	0					
ANR	3916516	Identifier	RT_CONSTANT		3916448	0					
ANR	3916517	ArgumentList	op_array		3916448	1					
ANR	3916518	Argument	op_array		3916448	0					
ANR	3916519	Identifier	op_array		3916448	0					
ANR	3916520	Argument	opline -> op2		3916448	1					
ANR	3916521	PtrMemberAccess	opline -> op2		3916448	0					
ANR	3916522	Identifier	opline		3916448	0					
ANR	3916523	Identifier	op2		3916448	1					
ANR	3916524	IfStatement	"if ( ( ce = zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) ) ) == NULL )"		3916448	3					
ANR	3916525	Condition	"( ce = zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) ) ) == NULL"	991:5:29541:29600	3916448	0	True				
ANR	3916526	EqualityExpression	"( ce = zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) ) ) == NULL"		3916448	0		==			
ANR	3916527	AssignmentExpression	"ce = zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) )"		3916448	0		=			
ANR	3916528	Identifier	ce		3916448	0					
ANR	3916529	CallExpression	"zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) )"		3916448	1					
ANR	3916530	Callee	zend_hash_find_ptr		3916448	0					
ANR	3916531	Identifier	zend_hash_find_ptr		3916448	0					
ANR	3916532	ArgumentList	class_table		3916448	1					
ANR	3916533	Argument	class_table		3916448	0					
ANR	3916534	Identifier	class_table		3916448	0					
ANR	3916535	Argument	Z_STR_P ( op1 )		3916448	1					
ANR	3916536	CallExpression	Z_STR_P ( op1 )		3916448	0					
ANR	3916537	Callee	Z_STR_P		3916448	0					
ANR	3916538	Identifier	Z_STR_P		3916448	0					
ANR	3916539	ArgumentList	op1		3916448	1					
ANR	3916540	Argument	op1		3916448	0					
ANR	3916541	Identifier	op1		3916448	0					
ANR	3916542	Identifier	NULL		3916448	1					
ANR	3916543	CompoundStatement		12:67:344:344	3916448	1					
ANR	3916544	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Internal Zend error - Missing class information for %s"" , Z_STRVAL_P ( op1 ) )"	992:2:29607:29718	3916448	0	True				
ANR	3916545	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Internal Zend error - Missing class information for %s"" , Z_STRVAL_P ( op1 ) )"		3916448	0					
ANR	3916546	Callee	zend_error_noreturn		3916448	0					
ANR	3916547	Identifier	zend_error_noreturn		3916448	0					
ANR	3916548	ArgumentList	E_COMPILE_ERROR		3916448	1					
ANR	3916549	Argument	E_COMPILE_ERROR		3916448	0					
ANR	3916550	Identifier	E_COMPILE_ERROR		3916448	0					
ANR	3916551	Argument	"""Internal Zend error - Missing class information for %s"""		3916448	1					
ANR	3916552	PrimaryExpression	"""Internal Zend error - Missing class information for %s"""		3916448	0					
ANR	3916553	Argument	Z_STRVAL_P ( op1 )		3916448	2					
ANR	3916554	CallExpression	Z_STRVAL_P ( op1 )		3916448	0					
ANR	3916555	Callee	Z_STRVAL_P		3916448	0					
ANR	3916556	Identifier	Z_STRVAL_P		3916448	0					
ANR	3916557	ArgumentList	op1		3916448	1					
ANR	3916558	Argument	op1		3916448	0					
ANR	3916559	Identifier	op1		3916448	0					
ANR	3916560	ReturnStatement	return NULL ;	993:2:29722:29733	3916448	1	True				
ANR	3916561	Identifier	NULL		3916448	0					
ANR	3916562	ExpressionStatement	ce -> refcount ++	995:1:29739:29753	3916448	4	True				
ANR	3916563	PostIncDecOperationExpression	ce -> refcount ++		3916448	0					
ANR	3916564	PtrMemberAccess	ce -> refcount		3916448	0					
ANR	3916565	Identifier	ce		3916448	0					
ANR	3916566	Identifier	refcount		3916448	1					
ANR	3916567	IncDec	++		3916448	1					
ANR	3916568	IfStatement	"if ( zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce ) == NULL )"		3916448	5					
ANR	3916569	Condition	"zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce ) == NULL"	996:5:29760:29815	3916448	0	True				
ANR	3916570	EqualityExpression	"zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce ) == NULL"		3916448	0		==			
ANR	3916571	CallExpression	"zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce )"		3916448	0					
ANR	3916572	Callee	zend_hash_add_ptr		3916448	0					
ANR	3916573	Identifier	zend_hash_add_ptr		3916448	0					
ANR	3916574	ArgumentList	class_table		3916448	1					
ANR	3916575	Argument	class_table		3916448	0					
ANR	3916576	Identifier	class_table		3916448	0					
ANR	3916577	Argument	Z_STR_P ( op2 )		3916448	1					
ANR	3916578	CallExpression	Z_STR_P ( op2 )		3916448	0					
ANR	3916579	Callee	Z_STR_P		3916448	0					
ANR	3916580	Identifier	Z_STR_P		3916448	0					
ANR	3916581	ArgumentList	op2		3916448	1					
ANR	3916582	Argument	op2		3916448	0					
ANR	3916583	Identifier	op2		3916448	0					
ANR	3916584	Argument	ce		3916448	2					
ANR	3916585	Identifier	ce		3916448	0					
ANR	3916586	Identifier	NULL		3916448	1					
ANR	3916587	CompoundStatement		17:63:559:559	3916448	1					
ANR	3916588	ExpressionStatement	ce -> refcount --	997:2:29822:29836	3916448	0	True				
ANR	3916589	PostIncDecOperationExpression	ce -> refcount --		3916448	0					
ANR	3916590	PtrMemberAccess	ce -> refcount		3916448	0					
ANR	3916591	Identifier	ce		3916448	0					
ANR	3916592	Identifier	refcount		3916448	1					
ANR	3916593	IncDec	--		3916448	1					
ANR	3916594	IfStatement	if ( ! compile_time )		3916448	1					
ANR	3916595	Condition	! compile_time	998:6:29844:29856	3916448	0	True				
ANR	3916596	UnaryOperationExpression	! compile_time		3916448	0					
ANR	3916597	UnaryOperator	!		3916448	0					
ANR	3916598	Identifier	compile_time		3916448	1					
ANR	3916599	CompoundStatement		19:21:600:600	3916448	1					
ANR	3916600	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( ce ) , ZSTR_VAL ( ce -> name ) )"	1004:3:30104:30246	3916448	0	True				
ANR	3916601	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( ce ) , ZSTR_VAL ( ce -> name ) )"		3916448	0					
ANR	3916602	Callee	zend_error_noreturn		3916448	0					
ANR	3916603	Identifier	zend_error_noreturn		3916448	0					
ANR	3916604	ArgumentList	E_COMPILE_ERROR		3916448	1					
ANR	3916605	Argument	E_COMPILE_ERROR		3916448	0					
ANR	3916606	Identifier	E_COMPILE_ERROR		3916448	0					
ANR	3916607	Argument	"""Cannot declare %s %s, because the name is already in use"""		3916448	1					
ANR	3916608	PrimaryExpression	"""Cannot declare %s %s, because the name is already in use"""		3916448	0					
ANR	3916609	Argument	zend_get_object_type ( ce )		3916448	2					
ANR	3916610	CallExpression	zend_get_object_type ( ce )		3916448	0					
ANR	3916611	Callee	zend_get_object_type		3916448	0					
ANR	3916612	Identifier	zend_get_object_type		3916448	0					
ANR	3916613	ArgumentList	ce		3916448	1					
ANR	3916614	Argument	ce		3916448	0					
ANR	3916615	Identifier	ce		3916448	0					
ANR	3916616	Argument	ZSTR_VAL ( ce -> name )		3916448	3					
ANR	3916617	CallExpression	ZSTR_VAL ( ce -> name )		3916448	0					
ANR	3916618	Callee	ZSTR_VAL		3916448	0					
ANR	3916619	Identifier	ZSTR_VAL		3916448	0					
ANR	3916620	ArgumentList	ce -> name		3916448	1					
ANR	3916621	Argument	ce -> name		3916448	0					
ANR	3916622	PtrMemberAccess	ce -> name		3916448	0					
ANR	3916623	Identifier	ce		3916448	0					
ANR	3916624	Identifier	name		3916448	1					
ANR	3916625	ReturnStatement	return NULL ;	1006:2:30254:30265	3916448	2	True				
ANR	3916626	Identifier	NULL		3916448	0					
ANR	3916627	ElseStatement	else		3916448	0					
ANR	3916628	CompoundStatement		28:8:1016:1016	3916448	0					
ANR	3916629	IfStatement	if ( ! ( ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) ) )		3916448	0					
ANR	3916630	Condition	! ( ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) )	1008:6:30283:30376	3916448	0	True				
ANR	3916631	UnaryOperationExpression	! ( ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) )		3916448	0					
ANR	3916632	UnaryOperator	!		3916448	0					
ANR	3916633	BitAndExpression	ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS )		3916448	1		&			
ANR	3916634	PtrMemberAccess	ce -> ce_flags		3916448	0					
ANR	3916635	Identifier	ce		3916448	0					
ANR	3916636	Identifier	ce_flags		3916448	1					
ANR	3916637	InclusiveOrExpression	ZEND_ACC_INTERFACE | ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS		3916448	1		|			
ANR	3916638	Identifier	ZEND_ACC_INTERFACE		3916448	0					
ANR	3916639	InclusiveOrExpression	ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS		3916448	1		|			
ANR	3916640	Identifier	ZEND_ACC_IMPLEMENT_INTERFACES		3916448	0					
ANR	3916641	Identifier	ZEND_ACC_IMPLEMENT_TRAITS		3916448	1					
ANR	3916642	CompoundStatement		29:102:1120:1120	3916448	1					
ANR	3916643	ExpressionStatement	zend_verify_abstract_class ( ce )	1009:3:30384:30414	3916448	0	True				
ANR	3916644	CallExpression	zend_verify_abstract_class ( ce )		3916448	0					
ANR	3916645	Callee	zend_verify_abstract_class		3916448	0					
ANR	3916646	Identifier	zend_verify_abstract_class		3916448	0					
ANR	3916647	ArgumentList	ce		3916448	1					
ANR	3916648	Argument	ce		3916448	0					
ANR	3916649	Identifier	ce		3916448	0					
ANR	3916650	ReturnStatement	return ce ;	1011:2:30422:30431	3916448	1	True				
ANR	3916651	Identifier	ce		3916448	0					
ANR	3916652	ReturnType	ZEND_API zend_class_entry *		3916448	1					
ANR	3916653	Identifier	do_bind_class		3916448	2					
ANR	3916654	ParameterList	"const zend_op_array * op_array , const zend_op * opline , HashTable * class_table , zend_bool compile_time"		3916448	3					
ANR	3916655	Parameter	const zend_op_array * op_array	979:41:29146:29174	3916448	0	True				
ANR	3916656	ParameterType	const zend_op_array *		3916448	0					
ANR	3916657	Identifier	op_array		3916448	1					
ANR	3916658	Parameter	const zend_op * opline	979:72:29177:29197	3916448	1	True				
ANR	3916659	ParameterType	const zend_op *		3916448	0					
ANR	3916660	Identifier	opline		3916448	1					
ANR	3916661	Parameter	HashTable * class_table	979:95:29200:29221	3916448	2	True				
ANR	3916662	ParameterType	HashTable *		3916448	0					
ANR	3916663	Identifier	class_table		3916448	1					
ANR	3916664	Parameter	zend_bool compile_time	979:119:29224:29245	3916448	3	True				
ANR	3916665	ParameterType	zend_bool		3916448	0					
ANR	3916666	Identifier	compile_time		3916448	1					
ANR	3916667	CFGEntryNode	ENTRY		3916448		True				
ANR	3916668	CFGExitNode	EXIT		3916448		True				
ANR	3916669	Symbol	compile_time		3916448						
ANR	3916670	Symbol	opline -> op1		3916448						
ANR	3916671	Symbol	opline -> op2		3916448						
ANR	3916672	Symbol	zend_get_object_type		3916448						
ANR	3916673	Symbol	ZEND_ACC_IMPLEMENT_TRAITS		3916448						
ANR	3916674	Symbol	E_COMPILE_ERROR		3916448						
ANR	3916675	Symbol	* ce		3916448						
ANR	3916676	Symbol	RT_CONSTANT		3916448						
ANR	3916677	Symbol	opline		3916448						
ANR	3916678	Symbol	opline -> op1 . constant		3916448						
ANR	3916679	Symbol	ce -> name		3916448						
ANR	3916680	Symbol	ZEND_ACC_INTERFACE		3916448						
ANR	3916681	Symbol	class_table		3916448						
ANR	3916682	Symbol	zend_hash_find_ptr		3916448						
ANR	3916683	Symbol	CT_CONSTANT_EX		3916448						
ANR	3916684	Symbol	ce		3916448						
ANR	3916685	Symbol	NULL		3916448						
ANR	3916686	Symbol	ce -> refcount		3916448						
ANR	3916687	Symbol	Z_STRVAL_P		3916448						
ANR	3916688	Symbol	ZSTR_VAL		3916448						
ANR	3916689	Symbol	op2		3916448						
ANR	3916690	Symbol	ZEND_ACC_IMPLEMENT_INTERFACES		3916448						
ANR	3916691	Symbol	ce -> ce_flags		3916448						
ANR	3916692	Symbol	op1		3916448						
ANR	3916693	Symbol	* opline		3916448						
ANR	3916694	Symbol	opline -> op2 . constant		3916448						
ANR	3916695	Symbol	Z_STR_P		3916448						
ANR	3916696	Symbol	zend_hash_add_ptr		3916448						
ANR	3916697	Symbol	op_array		3916448						
ANR	3916698	Function	do_bind_inherited_class	1016:0:30449:31946							
ANR	3916699	FunctionDef	"do_bind_inherited_class (const zend_op_array * op_array , const zend_op * opline , HashTable * class_table , zend_class_entry * parent_ce , zend_bool compile_time)"		3916698	0					
ANR	3916700	CompoundStatement		1017:0:30641:31946	3916698	0					
ANR	3916701	IdentifierDeclStatement	zend_class_entry * ce ;	1018:1:30644:30664	3916698	0	True				
ANR	3916702	IdentifierDecl	* ce		3916698	0					
ANR	3916703	IdentifierDeclType	zend_class_entry *		3916698	0					
ANR	3916704	Identifier	ce		3916698	1					
ANR	3916705	IdentifierDeclStatement	"zval * op1 , * op2 ;"	1019:1:30667:30682	3916698	1	True				
ANR	3916706	IdentifierDecl	* op1		3916698	0					
ANR	3916707	IdentifierDeclType	zval *		3916698	0					
ANR	3916708	Identifier	op1		3916698	1					
ANR	3916709	IdentifierDecl	* op2		3916698	1					
ANR	3916710	IdentifierDeclType	zval *		3916698	0					
ANR	3916711	Identifier	op2		3916698	1					
ANR	3916712	IfStatement	if ( compile_time )		3916698	2					
ANR	3916713	Condition	compile_time	1021:5:30690:30701	3916698	0	True				
ANR	3916714	Identifier	compile_time		3916698	0					
ANR	3916715	CompoundStatement		5:19:62:62	3916698	1					
ANR	3916716	ExpressionStatement	"op1 = CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"	1022:2:30708:30760	3916698	0	True				
ANR	3916717	AssignmentExpression	"op1 = CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"		3916698	0		=			
ANR	3916718	Identifier	op1		3916698	0					
ANR	3916719	CallExpression	"CT_CONSTANT_EX ( op_array , opline -> op1 . constant )"		3916698	1					
ANR	3916720	Callee	CT_CONSTANT_EX		3916698	0					
ANR	3916721	Identifier	CT_CONSTANT_EX		3916698	0					
ANR	3916722	ArgumentList	op_array		3916698	1					
ANR	3916723	Argument	op_array		3916698	0					
ANR	3916724	Identifier	op_array		3916698	0					
ANR	3916725	Argument	opline -> op1 . constant		3916698	1					
ANR	3916726	MemberAccess	opline -> op1 . constant		3916698	0					
ANR	3916727	PtrMemberAccess	opline -> op1		3916698	0					
ANR	3916728	Identifier	opline		3916698	0					
ANR	3916729	Identifier	op1		3916698	1					
ANR	3916730	Identifier	constant		3916698	1					
ANR	3916731	ExpressionStatement	"op2 = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"	1023:2:30764:30816	3916698	1	True				
ANR	3916732	AssignmentExpression	"op2 = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3916698	0		=			
ANR	3916733	Identifier	op2		3916698	0					
ANR	3916734	CallExpression	"CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3916698	1					
ANR	3916735	Callee	CT_CONSTANT_EX		3916698	0					
ANR	3916736	Identifier	CT_CONSTANT_EX		3916698	0					
ANR	3916737	ArgumentList	op_array		3916698	1					
ANR	3916738	Argument	op_array		3916698	0					
ANR	3916739	Identifier	op_array		3916698	0					
ANR	3916740	Argument	opline -> op2 . constant		3916698	1					
ANR	3916741	MemberAccess	opline -> op2 . constant		3916698	0					
ANR	3916742	PtrMemberAccess	opline -> op2		3916698	0					
ANR	3916743	Identifier	opline		3916698	0					
ANR	3916744	Identifier	op2		3916698	1					
ANR	3916745	Identifier	constant		3916698	1					
ANR	3916746	ElseStatement	else		3916698	0					
ANR	3916747	CompoundStatement		8:8:184:184	3916698	0					
ANR	3916748	ExpressionStatement	"op1 = RT_CONSTANT ( op_array , opline -> op1 )"	1025:2:30830:30870	3916698	0	True				
ANR	3916749	AssignmentExpression	"op1 = RT_CONSTANT ( op_array , opline -> op1 )"		3916698	0		=			
ANR	3916750	Identifier	op1		3916698	0					
ANR	3916751	CallExpression	"RT_CONSTANT ( op_array , opline -> op1 )"		3916698	1					
ANR	3916752	Callee	RT_CONSTANT		3916698	0					
ANR	3916753	Identifier	RT_CONSTANT		3916698	0					
ANR	3916754	ArgumentList	op_array		3916698	1					
ANR	3916755	Argument	op_array		3916698	0					
ANR	3916756	Identifier	op_array		3916698	0					
ANR	3916757	Argument	opline -> op1		3916698	1					
ANR	3916758	PtrMemberAccess	opline -> op1		3916698	0					
ANR	3916759	Identifier	opline		3916698	0					
ANR	3916760	Identifier	op1		3916698	1					
ANR	3916761	ExpressionStatement	"op2 = RT_CONSTANT ( op_array , opline -> op2 )"	1026:2:30874:30914	3916698	1	True				
ANR	3916762	AssignmentExpression	"op2 = RT_CONSTANT ( op_array , opline -> op2 )"		3916698	0		=			
ANR	3916763	Identifier	op2		3916698	0					
ANR	3916764	CallExpression	"RT_CONSTANT ( op_array , opline -> op2 )"		3916698	1					
ANR	3916765	Callee	RT_CONSTANT		3916698	0					
ANR	3916766	Identifier	RT_CONSTANT		3916698	0					
ANR	3916767	ArgumentList	op_array		3916698	1					
ANR	3916768	Argument	op_array		3916698	0					
ANR	3916769	Identifier	op_array		3916698	0					
ANR	3916770	Argument	opline -> op2		3916698	1					
ANR	3916771	PtrMemberAccess	opline -> op2		3916698	0					
ANR	3916772	Identifier	opline		3916698	0					
ANR	3916773	Identifier	op2		3916698	1					
ANR	3916774	ExpressionStatement	"ce = zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) )"	1029:1:30921:30971	3916698	3	True				
ANR	3916775	AssignmentExpression	"ce = zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) )"		3916698	0		=			
ANR	3916776	Identifier	ce		3916698	0					
ANR	3916777	CallExpression	"zend_hash_find_ptr ( class_table , Z_STR_P ( op1 ) )"		3916698	1					
ANR	3916778	Callee	zend_hash_find_ptr		3916698	0					
ANR	3916779	Identifier	zend_hash_find_ptr		3916698	0					
ANR	3916780	ArgumentList	class_table		3916698	1					
ANR	3916781	Argument	class_table		3916698	0					
ANR	3916782	Identifier	class_table		3916698	0					
ANR	3916783	Argument	Z_STR_P ( op1 )		3916698	1					
ANR	3916784	CallExpression	Z_STR_P ( op1 )		3916698	0					
ANR	3916785	Callee	Z_STR_P		3916698	0					
ANR	3916786	Identifier	Z_STR_P		3916698	0					
ANR	3916787	ArgumentList	op1		3916698	1					
ANR	3916788	Argument	op1		3916698	0					
ANR	3916789	Identifier	op1		3916698	0					
ANR	3916790	IfStatement	if ( ! ce )		3916698	4					
ANR	3916791	Condition	! ce	1031:5:30979:30981	3916698	0	True				
ANR	3916792	UnaryOperationExpression	! ce		3916698	0					
ANR	3916793	UnaryOperator	!		3916698	0					
ANR	3916794	Identifier	ce		3916698	1					
ANR	3916795	CompoundStatement		15:10:342:342	3916698	1					
ANR	3916796	IfStatement	if ( ! compile_time )		3916698	0					
ANR	3916797	Condition	! compile_time	1032:6:30992:31004	3916698	0	True				
ANR	3916798	UnaryOperationExpression	! compile_time		3916698	0					
ANR	3916799	UnaryOperator	!		3916698	0					
ANR	3916800	Identifier	compile_time		3916698	1					
ANR	3916801	CompoundStatement		16:21:365:365	3916698	1					
ANR	3916802	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( Z_OBJCE_P ( op2 ) ) , Z_STRVAL_P ( op2 ) )"	1038:3:31252:31403	3916698	0	True				
ANR	3916803	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( Z_OBJCE_P ( op2 ) ) , Z_STRVAL_P ( op2 ) )"		3916698	0					
ANR	3916804	Callee	zend_error_noreturn		3916698	0					
ANR	3916805	Identifier	zend_error_noreturn		3916698	0					
ANR	3916806	ArgumentList	E_COMPILE_ERROR		3916698	1					
ANR	3916807	Argument	E_COMPILE_ERROR		3916698	0					
ANR	3916808	Identifier	E_COMPILE_ERROR		3916698	0					
ANR	3916809	Argument	"""Cannot declare %s %s, because the name is already in use"""		3916698	1					
ANR	3916810	PrimaryExpression	"""Cannot declare %s %s, because the name is already in use"""		3916698	0					
ANR	3916811	Argument	zend_get_object_type ( Z_OBJCE_P ( op2 ) )		3916698	2					
ANR	3916812	CallExpression	zend_get_object_type ( Z_OBJCE_P ( op2 ) )		3916698	0					
ANR	3916813	Callee	zend_get_object_type		3916698	0					
ANR	3916814	Identifier	zend_get_object_type		3916698	0					
ANR	3916815	ArgumentList	Z_OBJCE_P ( op2 )		3916698	1					
ANR	3916816	Argument	Z_OBJCE_P ( op2 )		3916698	0					
ANR	3916817	CallExpression	Z_OBJCE_P ( op2 )		3916698	0					
ANR	3916818	Callee	Z_OBJCE_P		3916698	0					
ANR	3916819	Identifier	Z_OBJCE_P		3916698	0					
ANR	3916820	ArgumentList	op2		3916698	1					
ANR	3916821	Argument	op2		3916698	0					
ANR	3916822	Identifier	op2		3916698	0					
ANR	3916823	Argument	Z_STRVAL_P ( op2 )		3916698	3					
ANR	3916824	CallExpression	Z_STRVAL_P ( op2 )		3916698	0					
ANR	3916825	Callee	Z_STRVAL_P		3916698	0					
ANR	3916826	Identifier	Z_STRVAL_P		3916698	0					
ANR	3916827	ArgumentList	op2		3916698	1					
ANR	3916828	Argument	op2		3916698	0					
ANR	3916829	Identifier	op2		3916698	0					
ANR	3916830	ReturnStatement	return NULL ;	1040:2:31411:31422	3916698	1	True				
ANR	3916831	Identifier	NULL		3916698	0					
ANR	3916832	IfStatement	"if ( zend_hash_exists ( class_table , Z_STR_P ( op2 ) ) )"		3916698	5					
ANR	3916833	Condition	"zend_hash_exists ( class_table , Z_STR_P ( op2 ) )"	1043:5:31433:31475	3916698	0	True				
ANR	3916834	CallExpression	"zend_hash_exists ( class_table , Z_STR_P ( op2 ) )"		3916698	0					
ANR	3916835	Callee	zend_hash_exists		3916698	0					
ANR	3916836	Identifier	zend_hash_exists		3916698	0					
ANR	3916837	ArgumentList	class_table		3916698	1					
ANR	3916838	Argument	class_table		3916698	0					
ANR	3916839	Identifier	class_table		3916698	0					
ANR	3916840	Argument	Z_STR_P ( op2 )		3916698	1					
ANR	3916841	CallExpression	Z_STR_P ( op2 )		3916698	0					
ANR	3916842	Callee	Z_STR_P		3916698	0					
ANR	3916843	Identifier	Z_STR_P		3916698	0					
ANR	3916844	ArgumentList	op2		3916698	1					
ANR	3916845	Argument	op2		3916698	0					
ANR	3916846	Identifier	op2		3916698	0					
ANR	3916847	CompoundStatement		27:50:836:836	3916698	1					
ANR	3916848	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( ce ) , ZSTR_VAL ( ce -> name ) )"	1044:2:31482:31624	3916698	0	True				
ANR	3916849	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( ce ) , ZSTR_VAL ( ce -> name ) )"		3916698	0					
ANR	3916850	Callee	zend_error_noreturn		3916698	0					
ANR	3916851	Identifier	zend_error_noreturn		3916698	0					
ANR	3916852	ArgumentList	E_COMPILE_ERROR		3916698	1					
ANR	3916853	Argument	E_COMPILE_ERROR		3916698	0					
ANR	3916854	Identifier	E_COMPILE_ERROR		3916698	0					
ANR	3916855	Argument	"""Cannot declare %s %s, because the name is already in use"""		3916698	1					
ANR	3916856	PrimaryExpression	"""Cannot declare %s %s, because the name is already in use"""		3916698	0					
ANR	3916857	Argument	zend_get_object_type ( ce )		3916698	2					
ANR	3916858	CallExpression	zend_get_object_type ( ce )		3916698	0					
ANR	3916859	Callee	zend_get_object_type		3916698	0					
ANR	3916860	Identifier	zend_get_object_type		3916698	0					
ANR	3916861	ArgumentList	ce		3916698	1					
ANR	3916862	Argument	ce		3916698	0					
ANR	3916863	Identifier	ce		3916698	0					
ANR	3916864	Argument	ZSTR_VAL ( ce -> name )		3916698	3					
ANR	3916865	CallExpression	ZSTR_VAL ( ce -> name )		3916698	0					
ANR	3916866	Callee	ZSTR_VAL		3916698	0					
ANR	3916867	Identifier	ZSTR_VAL		3916698	0					
ANR	3916868	ArgumentList	ce -> name		3916698	1					
ANR	3916869	Argument	ce -> name		3916698	0					
ANR	3916870	PtrMemberAccess	ce -> name		3916698	0					
ANR	3916871	Identifier	ce		3916698	0					
ANR	3916872	Identifier	name		3916698	1					
ANR	3916873	ExpressionStatement	"zend_do_inheritance ( ce , parent_ce )"	1047:1:31631:31665	3916698	6	True				
ANR	3916874	CallExpression	"zend_do_inheritance ( ce , parent_ce )"		3916698	0					
ANR	3916875	Callee	zend_do_inheritance		3916698	0					
ANR	3916876	Identifier	zend_do_inheritance		3916698	0					
ANR	3916877	ArgumentList	ce		3916698	1					
ANR	3916878	Argument	ce		3916698	0					
ANR	3916879	Identifier	ce		3916698	0					
ANR	3916880	Argument	parent_ce		3916698	1					
ANR	3916881	Identifier	parent_ce		3916698	0					
ANR	3916882	ExpressionStatement	ce -> refcount ++	1049:1:31669:31683	3916698	7	True				
ANR	3916883	PostIncDecOperationExpression	ce -> refcount ++		3916698	0					
ANR	3916884	PtrMemberAccess	ce -> refcount		3916698	0					
ANR	3916885	Identifier	ce		3916698	0					
ANR	3916886	Identifier	refcount		3916698	1					
ANR	3916887	IncDec	++		3916698	1					
ANR	3916888	IfStatement	"if ( zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce ) == NULL )"		3916698	8					
ANR	3916889	Condition	"zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce ) == NULL"	1052:5:31725:31780	3916698	0	True				
ANR	3916890	EqualityExpression	"zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce ) == NULL"		3916698	0		==			
ANR	3916891	CallExpression	"zend_hash_add_ptr ( class_table , Z_STR_P ( op2 ) , ce )"		3916698	0					
ANR	3916892	Callee	zend_hash_add_ptr		3916698	0					
ANR	3916893	Identifier	zend_hash_add_ptr		3916698	0					
ANR	3916894	ArgumentList	class_table		3916698	1					
ANR	3916895	Argument	class_table		3916698	0					
ANR	3916896	Identifier	class_table		3916698	0					
ANR	3916897	Argument	Z_STR_P ( op2 )		3916698	1					
ANR	3916898	CallExpression	Z_STR_P ( op2 )		3916698	0					
ANR	3916899	Callee	Z_STR_P		3916698	0					
ANR	3916900	Identifier	Z_STR_P		3916698	0					
ANR	3916901	ArgumentList	op2		3916698	1					
ANR	3916902	Argument	op2		3916698	0					
ANR	3916903	Identifier	op2		3916698	0					
ANR	3916904	Argument	ce		3916698	2					
ANR	3916905	Identifier	ce		3916698	0					
ANR	3916906	Identifier	NULL		3916698	1					
ANR	3916907	CompoundStatement		36:63:1141:1141	3916698	1					
ANR	3916908	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( ce ) , ZSTR_VAL ( ce -> name ) )"	1053:2:31787:31929	3916698	0	True				
ANR	3916909	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot declare %s %s, because the name is already in use"" , zend_get_object_type ( ce ) , ZSTR_VAL ( ce -> name ) )"		3916698	0					
ANR	3916910	Callee	zend_error_noreturn		3916698	0					
ANR	3916911	Identifier	zend_error_noreturn		3916698	0					
ANR	3916912	ArgumentList	E_COMPILE_ERROR		3916698	1					
ANR	3916913	Argument	E_COMPILE_ERROR		3916698	0					
ANR	3916914	Identifier	E_COMPILE_ERROR		3916698	0					
ANR	3916915	Argument	"""Cannot declare %s %s, because the name is already in use"""		3916698	1					
ANR	3916916	PrimaryExpression	"""Cannot declare %s %s, because the name is already in use"""		3916698	0					
ANR	3916917	Argument	zend_get_object_type ( ce )		3916698	2					
ANR	3916918	CallExpression	zend_get_object_type ( ce )		3916698	0					
ANR	3916919	Callee	zend_get_object_type		3916698	0					
ANR	3916920	Identifier	zend_get_object_type		3916698	0					
ANR	3916921	ArgumentList	ce		3916698	1					
ANR	3916922	Argument	ce		3916698	0					
ANR	3916923	Identifier	ce		3916698	0					
ANR	3916924	Argument	ZSTR_VAL ( ce -> name )		3916698	3					
ANR	3916925	CallExpression	ZSTR_VAL ( ce -> name )		3916698	0					
ANR	3916926	Callee	ZSTR_VAL		3916698	0					
ANR	3916927	Identifier	ZSTR_VAL		3916698	0					
ANR	3916928	ArgumentList	ce -> name		3916698	1					
ANR	3916929	Argument	ce -> name		3916698	0					
ANR	3916930	PtrMemberAccess	ce -> name		3916698	0					
ANR	3916931	Identifier	ce		3916698	0					
ANR	3916932	Identifier	name		3916698	1					
ANR	3916933	ReturnStatement	return ce ;	1055:1:31935:31944	3916698	9	True				
ANR	3916934	Identifier	ce		3916698	0					
ANR	3916935	ReturnType	ZEND_API zend_class_entry *		3916698	1					
ANR	3916936	Identifier	do_bind_inherited_class		3916698	2					
ANR	3916937	ParameterList	"const zend_op_array * op_array , const zend_op * opline , HashTable * class_table , zend_class_entry * parent_ce , zend_bool compile_time"		3916698	3					
ANR	3916938	Parameter	const zend_op_array * op_array	1016:51:30500:30528	3916698	0	True				
ANR	3916939	ParameterType	const zend_op_array *		3916698	0					
ANR	3916940	Identifier	op_array		3916698	1					
ANR	3916941	Parameter	const zend_op * opline	1016:82:30531:30551	3916698	1	True				
ANR	3916942	ParameterType	const zend_op *		3916698	0					
ANR	3916943	Identifier	opline		3916698	1					
ANR	3916944	Parameter	HashTable * class_table	1016:105:30554:30575	3916698	2	True				
ANR	3916945	ParameterType	HashTable *		3916698	0					
ANR	3916946	Identifier	class_table		3916698	1					
ANR	3916947	Parameter	zend_class_entry * parent_ce	1016:129:30578:30604	3916698	3	True				
ANR	3916948	ParameterType	zend_class_entry *		3916698	0					
ANR	3916949	Identifier	parent_ce		3916698	1					
ANR	3916950	Parameter	zend_bool compile_time	1016:158:30607:30628	3916698	4	True				
ANR	3916951	ParameterType	zend_bool		3916698	0					
ANR	3916952	Identifier	compile_time		3916698	1					
ANR	3916953	CFGEntryNode	ENTRY		3916698		True				
ANR	3916954	CFGExitNode	EXIT		3916698		True				
ANR	3916955	Symbol	compile_time		3916698						
ANR	3916956	Symbol	opline -> op1		3916698						
ANR	3916957	Symbol	opline -> op2		3916698						
ANR	3916958	Symbol	zend_get_object_type		3916698						
ANR	3916959	Symbol	E_COMPILE_ERROR		3916698						
ANR	3916960	Symbol	zend_hash_exists		3916698						
ANR	3916961	Symbol	* ce		3916698						
ANR	3916962	Symbol	RT_CONSTANT		3916698						
ANR	3916963	Symbol	opline		3916698						
ANR	3916964	Symbol	opline -> op1 . constant		3916698						
ANR	3916965	Symbol	Z_OBJCE_P		3916698						
ANR	3916966	Symbol	ce -> name		3916698						
ANR	3916967	Symbol	class_table		3916698						
ANR	3916968	Symbol	zend_hash_find_ptr		3916698						
ANR	3916969	Symbol	CT_CONSTANT_EX		3916698						
ANR	3916970	Symbol	ce		3916698						
ANR	3916971	Symbol	NULL		3916698						
ANR	3916972	Symbol	ce -> refcount		3916698						
ANR	3916973	Symbol	Z_STRVAL_P		3916698						
ANR	3916974	Symbol	ZSTR_VAL		3916698						
ANR	3916975	Symbol	op2		3916698						
ANR	3916976	Symbol	parent_ce		3916698						
ANR	3916977	Symbol	op1		3916698						
ANR	3916978	Symbol	* opline		3916698						
ANR	3916979	Symbol	opline -> op2 . constant		3916698						
ANR	3916980	Symbol	Z_STR_P		3916698						
ANR	3916981	Symbol	zend_hash_add_ptr		3916698						
ANR	3916982	Symbol	op_array		3916698						
ANR	3916983	Function	zend_do_early_binding	1059:0:31959:34348							
ANR	3916984	FunctionDef	zend_do_early_binding ()		3916983	0					
ANR	3916985	CompoundStatement		1060:0:32002:34348	3916983	0					
ANR	3916986	IdentifierDeclStatement	zend_op * opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] ;	1061:1:32005:32081	3916983	0	True				
ANR	3916987	IdentifierDecl	* opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3916983	0					
ANR	3916988	IdentifierDeclType	zend_op *		3916983	0					
ANR	3916989	Identifier	opline		3916983	1					
ANR	3916990	AssignmentExpression	* opline = & CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3916983	2		=			
ANR	3916991	Identifier	opline		3916983	0					
ANR	3916992	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3916983	1					
ANR	3916993	UnaryOperator	&		3916983	0					
ANR	3916994	ArrayIndexing	CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3916983	1					
ANR	3916995	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3916983	0					
ANR	3916996	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3916997	Callee	CG		3916983	0					
ANR	3916998	Identifier	CG		3916983	0					
ANR	3916999	ArgumentList	active_op_array		3916983	1					
ANR	3917000	Argument	active_op_array		3916983	0					
ANR	3917001	Identifier	active_op_array		3916983	0					
ANR	3917002	Identifier	opcodes		3916983	1					
ANR	3917003	AdditiveExpression	CG ( active_op_array ) -> last - 1		3916983	1		-			
ANR	3917004	PtrMemberAccess	CG ( active_op_array ) -> last		3916983	0					
ANR	3917005	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917006	Callee	CG		3916983	0					
ANR	3917007	Identifier	CG		3916983	0					
ANR	3917008	ArgumentList	active_op_array		3916983	1					
ANR	3917009	Argument	active_op_array		3916983	0					
ANR	3917010	Identifier	active_op_array		3916983	0					
ANR	3917011	Identifier	last		3916983	1					
ANR	3917012	PrimaryExpression	1		3916983	1					
ANR	3917013	IdentifierDeclStatement	HashTable * table ;	1062:1:32084:32100	3916983	1	True				
ANR	3917014	IdentifierDecl	* table		3916983	0					
ANR	3917015	IdentifierDeclType	HashTable *		3916983	0					
ANR	3917016	Identifier	table		3916983	1					
ANR	3917017	WhileStatement	while ( opline -> opcode == ZEND_TICKS && opline > CG ( active_op_array ) -> opcodes )		3916983	2					
ANR	3917018	Condition	opline -> opcode == ZEND_TICKS && opline > CG ( active_op_array ) -> opcodes	1064:8:32111:32179	3916983	0	True				
ANR	3917019	AndExpression	opline -> opcode == ZEND_TICKS && opline > CG ( active_op_array ) -> opcodes		3916983	0		&&			
ANR	3917020	EqualityExpression	opline -> opcode == ZEND_TICKS		3916983	0		==			
ANR	3917021	PtrMemberAccess	opline -> opcode		3916983	0					
ANR	3917022	Identifier	opline		3916983	0					
ANR	3917023	Identifier	opcode		3916983	1					
ANR	3917024	Identifier	ZEND_TICKS		3916983	1					
ANR	3917025	RelationalExpression	opline > CG ( active_op_array ) -> opcodes		3916983	1		>			
ANR	3917026	Identifier	opline		3916983	0					
ANR	3917027	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3916983	1					
ANR	3917028	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917029	Callee	CG		3916983	0					
ANR	3917030	Identifier	CG		3916983	0					
ANR	3917031	ArgumentList	active_op_array		3916983	1					
ANR	3917032	Argument	active_op_array		3916983	0					
ANR	3917033	Identifier	active_op_array		3916983	0					
ANR	3917034	Identifier	opcodes		3916983	1					
ANR	3917035	CompoundStatement		5:79:179:179	3916983	1					
ANR	3917036	ExpressionStatement	opline --	1065:2:32186:32194	3916983	0	True				
ANR	3917037	PostIncDecOperationExpression	opline --		3916983	0					
ANR	3917038	Identifier	opline		3916983	0					
ANR	3917039	IncDec	--		3916983	1					
ANR	3917040	SwitchStatement	switch ( opline -> opcode )		3916983	3					
ANR	3917041	Condition	opline -> opcode	1068:9:32209:32222	3916983	0	True				
ANR	3917042	PtrMemberAccess	opline -> opcode		3916983	0					
ANR	3917043	Identifier	opline		3916983	0					
ANR	3917044	Identifier	opcode		3916983	1					
ANR	3917045	CompoundStatement		9:25:222:222	3916983	1					
ANR	3917046	Label	case ZEND_DECLARE_FUNCTION :	1069:2:32229:32255	3916983	0	True				
ANR	3917047	Identifier	ZEND_DECLARE_FUNCTION		3916983	0					
ANR	3917048	IfStatement	"if ( do_bind_function ( CG ( active_op_array ) , opline , CG ( function_table ) , 1 ) == FAILURE )"		3916983	1					
ANR	3917049	Condition	"do_bind_function ( CG ( active_op_array ) , opline , CG ( function_table ) , 1 ) == FAILURE"	1070:7:32264:32342	3916983	0	True				
ANR	3917050	EqualityExpression	"do_bind_function ( CG ( active_op_array ) , opline , CG ( function_table ) , 1 ) == FAILURE"		3916983	0		==			
ANR	3917051	CallExpression	"do_bind_function ( CG ( active_op_array ) , opline , CG ( function_table ) , 1 )"		3916983	0					
ANR	3917052	Callee	do_bind_function		3916983	0					
ANR	3917053	Identifier	do_bind_function		3916983	0					
ANR	3917054	ArgumentList	CG ( active_op_array )		3916983	1					
ANR	3917055	Argument	CG ( active_op_array )		3916983	0					
ANR	3917056	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917057	Callee	CG		3916983	0					
ANR	3917058	Identifier	CG		3916983	0					
ANR	3917059	ArgumentList	active_op_array		3916983	1					
ANR	3917060	Argument	active_op_array		3916983	0					
ANR	3917061	Identifier	active_op_array		3916983	0					
ANR	3917062	Argument	opline		3916983	1					
ANR	3917063	Identifier	opline		3916983	0					
ANR	3917064	Argument	CG ( function_table )		3916983	2					
ANR	3917065	CallExpression	CG ( function_table )		3916983	0					
ANR	3917066	Callee	CG		3916983	0					
ANR	3917067	Identifier	CG		3916983	0					
ANR	3917068	ArgumentList	function_table		3916983	1					
ANR	3917069	Argument	function_table		3916983	0					
ANR	3917070	Identifier	function_table		3916983	0					
ANR	3917071	Argument	1		3916983	3					
ANR	3917072	PrimaryExpression	1		3916983	0					
ANR	3917073	Identifier	FAILURE		3916983	1					
ANR	3917074	CompoundStatement		11:88:342:342	3916983	1					
ANR	3917075	ReturnStatement	return ;	1071:4:32351:32357	3916983	0	True				
ANR	3917076	ExpressionStatement	table = CG ( function_table )	1073:3:32367:32393	3916983	2	True				
ANR	3917077	AssignmentExpression	table = CG ( function_table )		3916983	0		=			
ANR	3917078	Identifier	table		3916983	0					
ANR	3917079	CallExpression	CG ( function_table )		3916983	1					
ANR	3917080	Callee	CG		3916983	0					
ANR	3917081	Identifier	CG		3916983	0					
ANR	3917082	ArgumentList	function_table		3916983	1					
ANR	3917083	Argument	function_table		3916983	0					
ANR	3917084	Identifier	function_table		3916983	0					
ANR	3917085	BreakStatement	break ;	1074:3:32398:32403	3916983	3	True				
ANR	3917086	Label	case ZEND_DECLARE_CLASS :	1075:2:32407:32430	3916983	4	True				
ANR	3917087	Identifier	ZEND_DECLARE_CLASS		3916983	0					
ANR	3917088	IfStatement	"if ( do_bind_class ( CG ( active_op_array ) , opline , CG ( class_table ) , 1 ) == NULL )"		3916983	5					
ANR	3917089	Condition	"do_bind_class ( CG ( active_op_array ) , opline , CG ( class_table ) , 1 ) == NULL"	1076:7:32439:32508	3916983	0	True				
ANR	3917090	EqualityExpression	"do_bind_class ( CG ( active_op_array ) , opline , CG ( class_table ) , 1 ) == NULL"		3916983	0		==			
ANR	3917091	CallExpression	"do_bind_class ( CG ( active_op_array ) , opline , CG ( class_table ) , 1 )"		3916983	0					
ANR	3917092	Callee	do_bind_class		3916983	0					
ANR	3917093	Identifier	do_bind_class		3916983	0					
ANR	3917094	ArgumentList	CG ( active_op_array )		3916983	1					
ANR	3917095	Argument	CG ( active_op_array )		3916983	0					
ANR	3917096	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917097	Callee	CG		3916983	0					
ANR	3917098	Identifier	CG		3916983	0					
ANR	3917099	ArgumentList	active_op_array		3916983	1					
ANR	3917100	Argument	active_op_array		3916983	0					
ANR	3917101	Identifier	active_op_array		3916983	0					
ANR	3917102	Argument	opline		3916983	1					
ANR	3917103	Identifier	opline		3916983	0					
ANR	3917104	Argument	CG ( class_table )		3916983	2					
ANR	3917105	CallExpression	CG ( class_table )		3916983	0					
ANR	3917106	Callee	CG		3916983	0					
ANR	3917107	Identifier	CG		3916983	0					
ANR	3917108	ArgumentList	class_table		3916983	1					
ANR	3917109	Argument	class_table		3916983	0					
ANR	3917110	Identifier	class_table		3916983	0					
ANR	3917111	Argument	1		3916983	3					
ANR	3917112	PrimaryExpression	1		3916983	0					
ANR	3917113	Identifier	NULL		3916983	1					
ANR	3917114	CompoundStatement		17:79:508:508	3916983	1					
ANR	3917115	ReturnStatement	return ;	1077:4:32517:32523	3916983	0	True				
ANR	3917116	ExpressionStatement	table = CG ( class_table )	1079:3:32533:32556	3916983	6	True				
ANR	3917117	AssignmentExpression	table = CG ( class_table )		3916983	0		=			
ANR	3917118	Identifier	table		3916983	0					
ANR	3917119	CallExpression	CG ( class_table )		3916983	1					
ANR	3917120	Callee	CG		3916983	0					
ANR	3917121	Identifier	CG		3916983	0					
ANR	3917122	ArgumentList	class_table		3916983	1					
ANR	3917123	Argument	class_table		3916983	0					
ANR	3917124	Identifier	class_table		3916983	0					
ANR	3917125	BreakStatement	break ;	1080:3:32561:32566	3916983	7	True				
ANR	3917126	Label	case ZEND_DECLARE_INHERITED_CLASS :	1081:2:32570:32603	3916983	8	True				
ANR	3917127	Identifier	ZEND_DECLARE_INHERITED_CLASS		3916983	0					
ANR	3917128	CompoundStatement		26:4:678:698	3916983	9					
ANR	3917129	IdentifierDeclStatement	zend_op * fetch_class_opline = opline - 1 ;	1083:4:32614:32652	3916983	0	True				
ANR	3917130	IdentifierDecl	* fetch_class_opline = opline - 1		3916983	0					
ANR	3917131	IdentifierDeclType	zend_op *		3916983	0					
ANR	3917132	Identifier	fetch_class_opline		3916983	1					
ANR	3917133	AssignmentExpression	* fetch_class_opline = opline - 1		3916983	2		=			
ANR	3917134	Identifier	fetch_class_opline		3916983	0					
ANR	3917135	AdditiveExpression	opline - 1		3916983	1		-			
ANR	3917136	Identifier	opline		3916983	0					
ANR	3917137	PrimaryExpression	1		3916983	1					
ANR	3917138	IdentifierDeclStatement	zval * parent_name ;	1084:4:32658:32675	3916983	1	True				
ANR	3917139	IdentifierDecl	* parent_name		3916983	0					
ANR	3917140	IdentifierDeclType	zval *		3916983	0					
ANR	3917141	Identifier	parent_name		3916983	1					
ANR	3917142	IdentifierDeclStatement	zend_class_entry * ce ;	1085:4:32681:32701	3916983	2	True				
ANR	3917143	IdentifierDecl	* ce		3916983	0					
ANR	3917144	IdentifierDeclType	zend_class_entry *		3916983	0					
ANR	3917145	Identifier	ce		3916983	1					
ANR	3917146	ExpressionStatement	parent_name = CT_CONSTANT ( fetch_class_opline -> op2 )	1087:4:32708:32758	3916983	3	True				
ANR	3917147	AssignmentExpression	parent_name = CT_CONSTANT ( fetch_class_opline -> op2 )		3916983	0		=			
ANR	3917148	Identifier	parent_name		3916983	0					
ANR	3917149	CallExpression	CT_CONSTANT ( fetch_class_opline -> op2 )		3916983	1					
ANR	3917150	Callee	CT_CONSTANT		3916983	0					
ANR	3917151	Identifier	CT_CONSTANT		3916983	0					
ANR	3917152	ArgumentList	fetch_class_opline -> op2		3916983	1					
ANR	3917153	Argument	fetch_class_opline -> op2		3916983	0					
ANR	3917154	PtrMemberAccess	fetch_class_opline -> op2		3916983	0					
ANR	3917155	Identifier	fetch_class_opline		3916983	0					
ANR	3917156	Identifier	op2		3916983	1					
ANR	3917157	IfStatement	"if ( ( ( ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 ) ) == NULL ) || ( ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_CLASSES ) && ( ce -> type == ZEND_INTERNAL_CLASS ) ) )"		3916983	4					
ANR	3917158	Condition	"( ( ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 ) ) == NULL ) || ( ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_CLASSES ) && ( ce -> type == ZEND_INTERNAL_CLASS ) )"	1088:8:32768:32967	3916983	0	True				
ANR	3917159	OrExpression	"( ( ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 ) ) == NULL ) || ( ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_CLASSES ) && ( ce -> type == ZEND_INTERNAL_CLASS ) )"		3916983	0		||			
ANR	3917160	EqualityExpression	"( ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 ) ) == NULL"		3916983	0		==			
ANR	3917161	AssignmentExpression	"ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 )"		3916983	0		=			
ANR	3917162	Identifier	ce		3916983	0					
ANR	3917163	CallExpression	"zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 )"		3916983	1					
ANR	3917164	Callee	zend_lookup_class_ex		3916983	0					
ANR	3917165	Identifier	zend_lookup_class_ex		3916983	0					
ANR	3917166	ArgumentList	Z_STR_P ( parent_name )		3916983	1					
ANR	3917167	Argument	Z_STR_P ( parent_name )		3916983	0					
ANR	3917168	CallExpression	Z_STR_P ( parent_name )		3916983	0					
ANR	3917169	Callee	Z_STR_P		3916983	0					
ANR	3917170	Identifier	Z_STR_P		3916983	0					
ANR	3917171	ArgumentList	parent_name		3916983	1					
ANR	3917172	Argument	parent_name		3916983	0					
ANR	3917173	Identifier	parent_name		3916983	0					
ANR	3917174	Argument	parent_name + 1		3916983	1					
ANR	3917175	AdditiveExpression	parent_name + 1		3916983	0		+			
ANR	3917176	Identifier	parent_name		3916983	0					
ANR	3917177	PrimaryExpression	1		3916983	1					
ANR	3917178	Argument	0		3916983	2					
ANR	3917179	PrimaryExpression	0		3916983	0					
ANR	3917180	Identifier	NULL		3916983	1					
ANR	3917181	AndExpression	( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_CLASSES ) && ( ce -> type == ZEND_INTERNAL_CLASS )		3916983	1		&&			
ANR	3917182	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		3916983	0		&			
ANR	3917183	CallExpression	CG ( compiler_options )		3916983	0					
ANR	3917184	Callee	CG		3916983	0					
ANR	3917185	Identifier	CG		3916983	0					
ANR	3917186	ArgumentList	compiler_options		3916983	1					
ANR	3917187	Argument	compiler_options		3916983	0					
ANR	3917188	Identifier	compiler_options		3916983	0					
ANR	3917189	Identifier	ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		3916983	1					
ANR	3917190	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3916983	1		==			
ANR	3917191	PtrMemberAccess	ce -> type		3916983	0					
ANR	3917192	Identifier	ce		3916983	0					
ANR	3917193	Identifier	type		3916983	1					
ANR	3917194	Identifier	ZEND_INTERNAL_CLASS		3916983	1					
ANR	3917195	CompoundStatement		31:45:967:967	3916983	1					
ANR	3917196	IfStatement	if ( CG ( compiler_options ) & ZEND_COMPILE_DELAYED_BINDING )		3916983	0					
ANR	3917197	Condition	CG ( compiler_options ) & ZEND_COMPILE_DELAYED_BINDING	1091:9:32981:33031	3916983	0	True				
ANR	3917198	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_DELAYED_BINDING		3916983	0		&			
ANR	3917199	CallExpression	CG ( compiler_options )		3916983	0					
ANR	3917200	Callee	CG		3916983	0					
ANR	3917201	Identifier	CG		3916983	0					
ANR	3917202	ArgumentList	compiler_options		3916983	1					
ANR	3917203	Argument	compiler_options		3916983	0					
ANR	3917204	Identifier	compiler_options		3916983	0					
ANR	3917205	Identifier	ZEND_COMPILE_DELAYED_BINDING		3916983	1					
ANR	3917206	CompoundStatement		33:6:1039:1097	3916983	1					
ANR	3917207	IdentifierDeclStatement	uint32_t * opline_num = & CG ( active_op_array ) -> early_binding ;	1092:6:33042:33100	3916983	0	True				
ANR	3917208	IdentifierDecl	* opline_num = & CG ( active_op_array ) -> early_binding		3916983	0					
ANR	3917209	IdentifierDeclType	uint32_t *		3916983	0					
ANR	3917210	Identifier	opline_num		3916983	1					
ANR	3917211	AssignmentExpression	* opline_num = & CG ( active_op_array ) -> early_binding		3916983	2		=			
ANR	3917212	Identifier	opline_num		3916983	0					
ANR	3917213	UnaryOperationExpression	& CG ( active_op_array ) -> early_binding		3916983	1					
ANR	3917214	UnaryOperator	&		3916983	0					
ANR	3917215	PtrMemberAccess	CG ( active_op_array ) -> early_binding		3916983	1					
ANR	3917216	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917217	Callee	CG		3916983	0					
ANR	3917218	Identifier	CG		3916983	0					
ANR	3917219	ArgumentList	active_op_array		3916983	1					
ANR	3917220	Argument	active_op_array		3916983	0					
ANR	3917221	Identifier	active_op_array		3916983	0					
ANR	3917222	Identifier	early_binding		3916983	1					
ANR	3917223	WhileStatement	while ( * opline_num != ( uint32_t ) - 1 )		3916983	1					
ANR	3917224	Condition	* opline_num != ( uint32_t ) - 1	1094:13:33116:33142	3916983	0	True				
ANR	3917225	EqualityExpression	* opline_num != ( uint32_t ) - 1		3916983	0		!=			
ANR	3917226	UnaryOperationExpression	* opline_num		3916983	0					
ANR	3917227	UnaryOperator	*		3916983	0					
ANR	3917228	Identifier	opline_num		3916983	1					
ANR	3917229	CastExpression	( uint32_t ) - 1		3916983	1					
ANR	3917230	CastTarget	uint32_t		3916983	0					
ANR	3917231	UnaryOperationExpression	- 1		3916983	1					
ANR	3917232	UnaryOperator	-		3916983	0					
ANR	3917233	PrimaryExpression	1		3916983	1					
ANR	3917234	CompoundStatement		35:42:1142:1142	3916983	1					
ANR	3917235	ExpressionStatement	opline_num = & CG ( active_op_array ) -> opcodes [ * opline_num ] . result . opline_num	1095:7:33154:33227	3916983	0	True				
ANR	3917236	AssignmentExpression	opline_num = & CG ( active_op_array ) -> opcodes [ * opline_num ] . result . opline_num		3916983	0		=			
ANR	3917237	Identifier	opline_num		3916983	0					
ANR	3917238	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ * opline_num ] . result . opline_num		3916983	1					
ANR	3917239	UnaryOperator	&		3916983	0					
ANR	3917240	MemberAccess	CG ( active_op_array ) -> opcodes [ * opline_num ] . result . opline_num		3916983	1					
ANR	3917241	MemberAccess	CG ( active_op_array ) -> opcodes [ * opline_num ] . result		3916983	0					
ANR	3917242	ArrayIndexing	CG ( active_op_array ) -> opcodes [ * opline_num ]		3916983	0					
ANR	3917243	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3916983	0					
ANR	3917244	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917245	Callee	CG		3916983	0					
ANR	3917246	Identifier	CG		3916983	0					
ANR	3917247	ArgumentList	active_op_array		3916983	1					
ANR	3917248	Argument	active_op_array		3916983	0					
ANR	3917249	Identifier	active_op_array		3916983	0					
ANR	3917250	Identifier	opcodes		3916983	1					
ANR	3917251	UnaryOperationExpression	* opline_num		3916983	1					
ANR	3917252	UnaryOperator	*		3916983	0					
ANR	3917253	Identifier	opline_num		3916983	1					
ANR	3917254	Identifier	result		3916983	1					
ANR	3917255	Identifier	opline_num		3916983	1					
ANR	3917256	ExpressionStatement	* opline_num = opline - CG ( active_op_array ) -> opcodes	1097:6:33243:33294	3916983	2	True				
ANR	3917257	AssignmentExpression	* opline_num = opline - CG ( active_op_array ) -> opcodes		3916983	0		=			
ANR	3917258	UnaryOperationExpression	* opline_num		3916983	0					
ANR	3917259	UnaryOperator	*		3916983	0					
ANR	3917260	Identifier	opline_num		3916983	1					
ANR	3917261	AdditiveExpression	opline - CG ( active_op_array ) -> opcodes		3916983	1		-			
ANR	3917262	Identifier	opline		3916983	0					
ANR	3917263	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3916983	1					
ANR	3917264	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917265	Callee	CG		3916983	0					
ANR	3917266	Identifier	CG		3916983	0					
ANR	3917267	ArgumentList	active_op_array		3916983	1					
ANR	3917268	Argument	active_op_array		3916983	0					
ANR	3917269	Identifier	active_op_array		3916983	0					
ANR	3917270	Identifier	opcodes		3916983	1					
ANR	3917271	ExpressionStatement	opline -> opcode = ZEND_DECLARE_INHERITED_CLASS_DELAYED	1098:6:33302:33355	3916983	3	True				
ANR	3917272	AssignmentExpression	opline -> opcode = ZEND_DECLARE_INHERITED_CLASS_DELAYED		3916983	0		=			
ANR	3917273	PtrMemberAccess	opline -> opcode		3916983	0					
ANR	3917274	Identifier	opline		3916983	0					
ANR	3917275	Identifier	opcode		3916983	1					
ANR	3917276	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED		3916983	1					
ANR	3917277	ExpressionStatement	opline -> result_type = IS_UNUSED	1099:6:33363:33394	3916983	4	True				
ANR	3917278	AssignmentExpression	opline -> result_type = IS_UNUSED		3916983	0		=			
ANR	3917279	PtrMemberAccess	opline -> result_type		3916983	0					
ANR	3917280	Identifier	opline		3916983	0					
ANR	3917281	Identifier	result_type		3916983	1					
ANR	3917282	Identifier	IS_UNUSED		3916983	1					
ANR	3917283	ExpressionStatement	opline -> result . opline_num = - 1	1100:6:33402:33432	3916983	5	True				
ANR	3917284	AssignmentExpression	opline -> result . opline_num = - 1		3916983	0		=			
ANR	3917285	MemberAccess	opline -> result . opline_num		3916983	0					
ANR	3917286	PtrMemberAccess	opline -> result		3916983	0					
ANR	3917287	Identifier	opline		3916983	0					
ANR	3917288	Identifier	result		3916983	1					
ANR	3917289	Identifier	opline_num		3916983	1					
ANR	3917290	UnaryOperationExpression	- 1		3916983	1					
ANR	3917291	UnaryOperator	-		3916983	0					
ANR	3917292	PrimaryExpression	1		3916983	1					
ANR	3917293	ReturnStatement	return ;	1102:5:33446:33452	3916983	1	True				
ANR	3917294	IfStatement	"if ( do_bind_inherited_class ( CG ( active_op_array ) , opline , CG ( class_table ) , ce , 1 ) == NULL )"		3916983	5					
ANR	3917295	Condition	"do_bind_inherited_class ( CG ( active_op_array ) , opline , CG ( class_table ) , ce , 1 ) == NULL"	1104:8:33468:33551	3916983	0	True				
ANR	3917296	EqualityExpression	"do_bind_inherited_class ( CG ( active_op_array ) , opline , CG ( class_table ) , ce , 1 ) == NULL"		3916983	0		==			
ANR	3917297	CallExpression	"do_bind_inherited_class ( CG ( active_op_array ) , opline , CG ( class_table ) , ce , 1 )"		3916983	0					
ANR	3917298	Callee	do_bind_inherited_class		3916983	0					
ANR	3917299	Identifier	do_bind_inherited_class		3916983	0					
ANR	3917300	ArgumentList	CG ( active_op_array )		3916983	1					
ANR	3917301	Argument	CG ( active_op_array )		3916983	0					
ANR	3917302	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917303	Callee	CG		3916983	0					
ANR	3917304	Identifier	CG		3916983	0					
ANR	3917305	ArgumentList	active_op_array		3916983	1					
ANR	3917306	Argument	active_op_array		3916983	0					
ANR	3917307	Identifier	active_op_array		3916983	0					
ANR	3917308	Argument	opline		3916983	1					
ANR	3917309	Identifier	opline		3916983	0					
ANR	3917310	Argument	CG ( class_table )		3916983	2					
ANR	3917311	CallExpression	CG ( class_table )		3916983	0					
ANR	3917312	Callee	CG		3916983	0					
ANR	3917313	Identifier	CG		3916983	0					
ANR	3917314	ArgumentList	class_table		3916983	1					
ANR	3917315	Argument	class_table		3916983	0					
ANR	3917316	Identifier	class_table		3916983	0					
ANR	3917317	Argument	ce		3916983	3					
ANR	3917318	Identifier	ce		3916983	0					
ANR	3917319	Argument	1		3916983	4					
ANR	3917320	PrimaryExpression	1		3916983	0					
ANR	3917321	Identifier	NULL		3916983	1					
ANR	3917322	CompoundStatement		45:94:1551:1551	3916983	1					
ANR	3917323	ReturnStatement	return ;	1105:5:33561:33567	3916983	0	True				
ANR	3917324	ExpressionStatement	"zend_del_literal ( CG ( active_op_array ) , fetch_class_opline -> op2 . constant )"	1108:4:33631:33702	3916983	6	True				
ANR	3917325	CallExpression	"zend_del_literal ( CG ( active_op_array ) , fetch_class_opline -> op2 . constant )"		3916983	0					
ANR	3917326	Callee	zend_del_literal		3916983	0					
ANR	3917327	Identifier	zend_del_literal		3916983	0					
ANR	3917328	ArgumentList	CG ( active_op_array )		3916983	1					
ANR	3917329	Argument	CG ( active_op_array )		3916983	0					
ANR	3917330	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917331	Callee	CG		3916983	0					
ANR	3917332	Identifier	CG		3916983	0					
ANR	3917333	ArgumentList	active_op_array		3916983	1					
ANR	3917334	Argument	active_op_array		3916983	0					
ANR	3917335	Identifier	active_op_array		3916983	0					
ANR	3917336	Argument	fetch_class_opline -> op2 . constant		3916983	1					
ANR	3917337	MemberAccess	fetch_class_opline -> op2 . constant		3916983	0					
ANR	3917338	PtrMemberAccess	fetch_class_opline -> op2		3916983	0					
ANR	3917339	Identifier	fetch_class_opline		3916983	0					
ANR	3917340	Identifier	op2		3916983	1					
ANR	3917341	Identifier	constant		3916983	1					
ANR	3917342	ExpressionStatement	MAKE_NOP ( fetch_class_opline )	1109:4:33708:33736	3916983	7	True				
ANR	3917343	CallExpression	MAKE_NOP ( fetch_class_opline )		3916983	0					
ANR	3917344	Callee	MAKE_NOP		3916983	0					
ANR	3917345	Identifier	MAKE_NOP		3916983	0					
ANR	3917346	ArgumentList	fetch_class_opline		3916983	1					
ANR	3917347	Argument	fetch_class_opline		3916983	0					
ANR	3917348	Identifier	fetch_class_opline		3916983	0					
ANR	3917349	ExpressionStatement	table = CG ( class_table )	1111:4:33743:33766	3916983	8	True				
ANR	3917350	AssignmentExpression	table = CG ( class_table )		3916983	0		=			
ANR	3917351	Identifier	table		3916983	0					
ANR	3917352	CallExpression	CG ( class_table )		3916983	1					
ANR	3917353	Callee	CG		3916983	0					
ANR	3917354	Identifier	CG		3916983	0					
ANR	3917355	ArgumentList	class_table		3916983	1					
ANR	3917356	Argument	class_table		3916983	0					
ANR	3917357	Identifier	class_table		3916983	0					
ANR	3917358	BreakStatement	break ;	1112:4:33772:33777	3916983	9	True				
ANR	3917359	Label	case ZEND_VERIFY_ABSTRACT_CLASS :	1114:2:33786:33817	3916983	10	True				
ANR	3917360	Identifier	ZEND_VERIFY_ABSTRACT_CLASS		3916983	0					
ANR	3917361	Label	case ZEND_ADD_INTERFACE :	1115:2:33821:33844	3916983	11	True				
ANR	3917362	Identifier	ZEND_ADD_INTERFACE		3916983	0					
ANR	3917363	Label	case ZEND_ADD_TRAIT :	1116:2:33848:33867	3916983	12	True				
ANR	3917364	Identifier	ZEND_ADD_TRAIT		3916983	0					
ANR	3917365	Label	case ZEND_BIND_TRAITS :	1117:2:33871:33892	3916983	13	True				
ANR	3917366	Identifier	ZEND_BIND_TRAITS		3916983	0					
ANR	3917367	ReturnStatement	return ;	1120:3:34048:34054	3916983	14	True				
ANR	3917368	Label	default :	1121:2:34058:34065	3916983	15	True				
ANR	3917369	Identifier	default		3916983	0					
ANR	3917370	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Invalid binding type"" )"	1122:3:34070:34130	3916983	16	True				
ANR	3917371	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Invalid binding type"" )"		3916983	0					
ANR	3917372	Callee	zend_error_noreturn		3916983	0					
ANR	3917373	Identifier	zend_error_noreturn		3916983	0					
ANR	3917374	ArgumentList	E_COMPILE_ERROR		3916983	1					
ANR	3917375	Argument	E_COMPILE_ERROR		3916983	0					
ANR	3917376	Identifier	E_COMPILE_ERROR		3916983	0					
ANR	3917377	Argument	"""Invalid binding type"""		3916983	1					
ANR	3917378	PrimaryExpression	"""Invalid binding type"""		3916983	0					
ANR	3917379	ReturnStatement	return ;	1123:3:34135:34141	3916983	17	True				
ANR	3917380	ExpressionStatement	"zend_hash_del ( table , Z_STR_P ( CT_CONSTANT ( opline -> op1 ) ) )"	1126:1:34148:34203	3916983	4	True				
ANR	3917381	CallExpression	"zend_hash_del ( table , Z_STR_P ( CT_CONSTANT ( opline -> op1 ) ) )"		3916983	0					
ANR	3917382	Callee	zend_hash_del		3916983	0					
ANR	3917383	Identifier	zend_hash_del		3916983	0					
ANR	3917384	ArgumentList	table		3916983	1					
ANR	3917385	Argument	table		3916983	0					
ANR	3917386	Identifier	table		3916983	0					
ANR	3917387	Argument	Z_STR_P ( CT_CONSTANT ( opline -> op1 ) )		3916983	1					
ANR	3917388	CallExpression	Z_STR_P ( CT_CONSTANT ( opline -> op1 ) )		3916983	0					
ANR	3917389	Callee	Z_STR_P		3916983	0					
ANR	3917390	Identifier	Z_STR_P		3916983	0					
ANR	3917391	ArgumentList	CT_CONSTANT ( opline -> op1 )		3916983	1					
ANR	3917392	Argument	CT_CONSTANT ( opline -> op1 )		3916983	0					
ANR	3917393	CallExpression	CT_CONSTANT ( opline -> op1 )		3916983	0					
ANR	3917394	Callee	CT_CONSTANT		3916983	0					
ANR	3917395	Identifier	CT_CONSTANT		3916983	0					
ANR	3917396	ArgumentList	opline -> op1		3916983	1					
ANR	3917397	Argument	opline -> op1		3916983	0					
ANR	3917398	PtrMemberAccess	opline -> op1		3916983	0					
ANR	3917399	Identifier	opline		3916983	0					
ANR	3917400	Identifier	op1		3916983	1					
ANR	3917401	ExpressionStatement	"zend_del_literal ( CG ( active_op_array ) , opline -> op1 . constant )"	1127:1:34206:34265	3916983	5	True				
ANR	3917402	CallExpression	"zend_del_literal ( CG ( active_op_array ) , opline -> op1 . constant )"		3916983	0					
ANR	3917403	Callee	zend_del_literal		3916983	0					
ANR	3917404	Identifier	zend_del_literal		3916983	0					
ANR	3917405	ArgumentList	CG ( active_op_array )		3916983	1					
ANR	3917406	Argument	CG ( active_op_array )		3916983	0					
ANR	3917407	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917408	Callee	CG		3916983	0					
ANR	3917409	Identifier	CG		3916983	0					
ANR	3917410	ArgumentList	active_op_array		3916983	1					
ANR	3917411	Argument	active_op_array		3916983	0					
ANR	3917412	Identifier	active_op_array		3916983	0					
ANR	3917413	Argument	opline -> op1 . constant		3916983	1					
ANR	3917414	MemberAccess	opline -> op1 . constant		3916983	0					
ANR	3917415	PtrMemberAccess	opline -> op1		3916983	0					
ANR	3917416	Identifier	opline		3916983	0					
ANR	3917417	Identifier	op1		3916983	1					
ANR	3917418	Identifier	constant		3916983	1					
ANR	3917419	ExpressionStatement	"zend_del_literal ( CG ( active_op_array ) , opline -> op2 . constant )"	1128:1:34268:34327	3916983	6	True				
ANR	3917420	CallExpression	"zend_del_literal ( CG ( active_op_array ) , opline -> op2 . constant )"		3916983	0					
ANR	3917421	Callee	zend_del_literal		3916983	0					
ANR	3917422	Identifier	zend_del_literal		3916983	0					
ANR	3917423	ArgumentList	CG ( active_op_array )		3916983	1					
ANR	3917424	Argument	CG ( active_op_array )		3916983	0					
ANR	3917425	CallExpression	CG ( active_op_array )		3916983	0					
ANR	3917426	Callee	CG		3916983	0					
ANR	3917427	Identifier	CG		3916983	0					
ANR	3917428	ArgumentList	active_op_array		3916983	1					
ANR	3917429	Argument	active_op_array		3916983	0					
ANR	3917430	Identifier	active_op_array		3916983	0					
ANR	3917431	Argument	opline -> op2 . constant		3916983	1					
ANR	3917432	MemberAccess	opline -> op2 . constant		3916983	0					
ANR	3917433	PtrMemberAccess	opline -> op2		3916983	0					
ANR	3917434	Identifier	opline		3916983	0					
ANR	3917435	Identifier	op2		3916983	1					
ANR	3917436	Identifier	constant		3916983	1					
ANR	3917437	ExpressionStatement	MAKE_NOP ( opline )	1129:1:34330:34346	3916983	7	True				
ANR	3917438	CallExpression	MAKE_NOP ( opline )		3916983	0					
ANR	3917439	Callee	MAKE_NOP		3916983	0					
ANR	3917440	Identifier	MAKE_NOP		3916983	0					
ANR	3917441	ArgumentList	opline		3916983	1					
ANR	3917442	Argument	opline		3916983	0					
ANR	3917443	Identifier	opline		3916983	0					
ANR	3917444	ReturnType	void		3916983	1					
ANR	3917445	Identifier	zend_do_early_binding		3916983	2					
ANR	3917446	ParameterList			3916983	3					
ANR	3917447	CFGEntryNode	ENTRY		3916983		True				
ANR	3917448	CFGExitNode	EXIT		3916983		True				
ANR	3917449	Symbol	parent_name		3916983						
ANR	3917450	Symbol	E_COMPILE_ERROR		3916983						
ANR	3917451	Symbol	* CG		3916983						
ANR	3917452	Symbol	* ce		3916983						
ANR	3917453	Symbol	CG ( active_op_array ) -> opcodes		3916983						
ANR	3917454	Symbol	opline -> result		3916983						
ANR	3917455	Symbol	fetch_class_opline		3916983						
ANR	3917456	Symbol	CG ( active_op_array ) -> last		3916983						
ANR	3917457	Symbol	opline		3916983						
ANR	3917458	Symbol	ZEND_COMPILE_DELAYED_BINDING		3916983						
ANR	3917459	Symbol	CT_CONSTANT		3916983						
ANR	3917460	Symbol	do_bind_class		3916983						
ANR	3917461	Symbol	& CG ( active_op_array ) -> opcodes [ * opline_num ] . result . opline_num		3916983						
ANR	3917462	Symbol	* CG ( active_op_array ) -> opcodes		3916983						
ANR	3917463	Symbol	ZEND_INTERNAL_CLASS		3916983						
ANR	3917464	Symbol	NULL		3916983						
ANR	3917465	Symbol	* * opline_num		3916983						
ANR	3917466	Symbol	* opline_num		3916983						
ANR	3917467	Symbol	do_bind_inherited_class		3916983						
ANR	3917468	Symbol	Z_STR_P		3916983						
ANR	3917469	Symbol	opline_num		3916983						
ANR	3917470	Symbol	function_table		3916983						
ANR	3917471	Symbol	zend_lookup_class_ex		3916983						
ANR	3917472	Symbol	opline -> op1		3916983						
ANR	3917473	Symbol	ce -> type		3916983						
ANR	3917474	Symbol	opline -> op2		3916983						
ANR	3917475	Symbol	fetch_class_opline -> op2 . constant		3916983						
ANR	3917476	Symbol	compiler_options		3916983						
ANR	3917477	Symbol	* * CG		3916983						
ANR	3917478	Symbol	opline -> op1 . constant		3916983						
ANR	3917479	Symbol	class_table		3916983						
ANR	3917480	Symbol	ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		3916983						
ANR	3917481	Symbol	ZEND_TICKS		3916983						
ANR	3917482	Symbol	ZEND_DECLARE_INHERITED_CLASS_DELAYED		3916983						
ANR	3917483	Symbol	table		3916983						
ANR	3917484	Symbol	* fetch_class_opline		3916983						
ANR	3917485	Symbol	opline -> result_type		3916983						
ANR	3917486	Symbol	ce		3916983						
ANR	3917487	Symbol	CG		3916983						
ANR	3917488	Symbol	opline -> result . opline_num		3916983						
ANR	3917489	Symbol	active_op_array		3916983						
ANR	3917490	Symbol	& CG ( active_op_array ) -> opcodes [ * opline_num ] . result		3916983						
ANR	3917491	Symbol	FAILURE		3916983						
ANR	3917492	Symbol	* opline		3916983						
ANR	3917493	Symbol	& CG ( active_op_array ) -> early_binding		3916983						
ANR	3917494	Symbol	opline -> opcode		3916983						
ANR	3917495	Symbol	opline -> op2 . constant		3916983						
ANR	3917496	Symbol	do_bind_function		3916983						
ANR	3917497	Symbol	fetch_class_opline -> op2		3916983						
ANR	3917498	Symbol	CG ( active_op_array ) -> opcodes [ * opline_num ] . result		3916983						
ANR	3917499	Symbol	IS_UNUSED		3916983						
ANR	3917500	Function	zend_mark_function_as_generator	1133:0:34361:35827							
ANR	3917501	FunctionDef	zend_mark_function_as_generator ()		3917500	0					
ANR	3917502	CompoundStatement		1134:0:34417:35827	3917500	0					
ANR	3917503	IfStatement	if ( ! CG ( active_op_array ) -> function_name )		3917500	0					
ANR	3917504	Condition	! CG ( active_op_array ) -> function_name	1135:5:34424:34458	3917500	0	True				
ANR	3917505	UnaryOperationExpression	! CG ( active_op_array ) -> function_name		3917500	0					
ANR	3917506	UnaryOperator	!		3917500	0					
ANR	3917507	PtrMemberAccess	CG ( active_op_array ) -> function_name		3917500	1					
ANR	3917508	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917509	Callee	CG		3917500	0					
ANR	3917510	Identifier	CG		3917500	0					
ANR	3917511	ArgumentList	active_op_array		3917500	1					
ANR	3917512	Argument	active_op_array		3917500	0					
ANR	3917513	Identifier	active_op_array		3917500	0					
ANR	3917514	Identifier	function_name		3917500	1					
ANR	3917515	CompoundStatement		2:42:43:43	3917500	1					
ANR	3917516	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""The \\""yield\\"" expression can only be used inside a function"" )"	1136:2:34465:34567	3917500	0	True				
ANR	3917517	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""The \\""yield\\"" expression can only be used inside a function"" )"		3917500	0					
ANR	3917518	Callee	zend_error_noreturn		3917500	0					
ANR	3917519	Identifier	zend_error_noreturn		3917500	0					
ANR	3917520	ArgumentList	E_COMPILE_ERROR		3917500	1					
ANR	3917521	Argument	E_COMPILE_ERROR		3917500	0					
ANR	3917522	Identifier	E_COMPILE_ERROR		3917500	0					
ANR	3917523	Argument	"""The \\""yield\\"" expression can only be used inside a function"""		3917500	1					
ANR	3917524	PrimaryExpression	"""The \\""yield\\"" expression can only be used inside a function"""		3917500	0					
ANR	3917525	IfStatement	if ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		3917500	1					
ANR	3917526	Condition	CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE	1139:5:34577:34632	3917500	0	True				
ANR	3917527	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3917500	0		&			
ANR	3917528	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3917500	0					
ANR	3917529	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917530	Callee	CG		3917500	0					
ANR	3917531	Identifier	CG		3917500	0					
ANR	3917532	ArgumentList	active_op_array		3917500	1					
ANR	3917533	Argument	active_op_array		3917500	0					
ANR	3917534	Identifier	active_op_array		3917500	0					
ANR	3917535	Identifier	fn_flags		3917500	1					
ANR	3917536	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3917500	1					
ANR	3917537	CompoundStatement		7:2:221:341	3917500	1					
ANR	3917538	IdentifierDeclStatement	"const char * msg = ""Generators may only declare a return type of Generator, Iterator or Traversable, %s is not permitted"" ;"	1140:2:34639:34759	3917500	0	True				
ANR	3917539	IdentifierDecl	"* msg = ""Generators may only declare a return type of Generator, Iterator or Traversable, %s is not permitted"""		3917500	0					
ANR	3917540	IdentifierDeclType	const char *		3917500	0					
ANR	3917541	Identifier	msg		3917500	1					
ANR	3917542	AssignmentExpression	"* msg = ""Generators may only declare a return type of Generator, Iterator or Traversable, %s is not permitted"""		3917500	2		=			
ANR	3917543	Identifier	msg		3917500	0					
ANR	3917544	PrimaryExpression	"""Generators may only declare a return type of Generator, Iterator or Traversable, %s is not permitted"""		3917500	1					
ANR	3917545	IfStatement	if ( ! CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	1					
ANR	3917546	Condition	! CG ( active_op_array ) -> arg_info [ - 1 ] . class_name	1141:6:34767:34811	3917500	0	True				
ANR	3917547	UnaryOperationExpression	! CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917548	UnaryOperator	!		3917500	0					
ANR	3917549	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917550	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917551	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917552	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917553	Callee	CG		3917500	0					
ANR	3917554	Identifier	CG		3917500	0					
ANR	3917555	ArgumentList	active_op_array		3917500	1					
ANR	3917556	Argument	active_op_array		3917500	0					
ANR	3917557	Identifier	active_op_array		3917500	0					
ANR	3917558	Identifier	arg_info		3917500	1					
ANR	3917559	UnaryOperationExpression	- 1		3917500	1					
ANR	3917560	UnaryOperator	-		3917500	0					
ANR	3917561	PrimaryExpression	1		3917500	1					
ANR	3917562	Identifier	class_name		3917500	1					
ANR	3917563	CompoundStatement		8:53:396:396	3917500	1					
ANR	3917564	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , msg , zend_get_type_by_const ( CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint ) )"	1142:3:34819:34933	3917500	0	True				
ANR	3917565	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , msg , zend_get_type_by_const ( CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint ) )"		3917500	0					
ANR	3917566	Callee	zend_error_noreturn		3917500	0					
ANR	3917567	Identifier	zend_error_noreturn		3917500	0					
ANR	3917568	ArgumentList	E_COMPILE_ERROR		3917500	1					
ANR	3917569	Argument	E_COMPILE_ERROR		3917500	0					
ANR	3917570	Identifier	E_COMPILE_ERROR		3917500	0					
ANR	3917571	Argument	msg		3917500	1					
ANR	3917572	Identifier	msg		3917500	0					
ANR	3917573	Argument	zend_get_type_by_const ( CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint )		3917500	2					
ANR	3917574	CallExpression	zend_get_type_by_const ( CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint )		3917500	0					
ANR	3917575	Callee	zend_get_type_by_const		3917500	0					
ANR	3917576	Identifier	zend_get_type_by_const		3917500	0					
ANR	3917577	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint		3917500	1					
ANR	3917578	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint		3917500	0					
ANR	3917579	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint		3917500	0					
ANR	3917580	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917581	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917582	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917583	Callee	CG		3917500	0					
ANR	3917584	Identifier	CG		3917500	0					
ANR	3917585	ArgumentList	active_op_array		3917500	1					
ANR	3917586	Argument	active_op_array		3917500	0					
ANR	3917587	Identifier	active_op_array		3917500	0					
ANR	3917588	Identifier	arg_info		3917500	1					
ANR	3917589	UnaryOperationExpression	- 1		3917500	1					
ANR	3917590	UnaryOperator	-		3917500	0					
ANR	3917591	PrimaryExpression	1		3917500	1					
ANR	3917592	Identifier	type_hint		3917500	1					
ANR	3917593	IfStatement	"if ( ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Traversable"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Traversable"" ) - 1 , ""Traversable"" , sizeof ( ""Traversable"" ) - 1 ) == 0 ) && ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Iterator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 ) == 0 ) && ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Generator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 ) == 0 ) )"		3917500	2					
ANR	3917594	Condition	"! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Traversable"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Traversable"" ) - 1 , ""Traversable"" , sizeof ( ""Traversable"" ) - 1 ) == 0 ) && ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Iterator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 ) == 0 ) && ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Generator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 ) == 0 )"	1145:6:34945:35658	3917500	0	True				
ANR	3917595	AndExpression	"! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Traversable"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Traversable"" ) - 1 , ""Traversable"" , sizeof ( ""Traversable"" ) - 1 ) == 0 ) && ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Iterator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 ) == 0 ) && ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Generator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 ) == 0 )"		3917500	0		&&			
ANR	3917596	UnaryOperationExpression	"! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Traversable"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Traversable"" ) - 1 , ""Traversable"" , sizeof ( ""Traversable"" ) - 1 ) == 0 )"		3917500	0					
ANR	3917597	UnaryOperator	!		3917500	0					
ANR	3917598	AndExpression	"ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Traversable"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Traversable"" ) - 1 , ""Traversable"" , sizeof ( ""Traversable"" ) - 1 ) == 0"		3917500	1		&&			
ANR	3917599	EqualityExpression	"ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Traversable"" ) - 1"		3917500	0		==			
ANR	3917600	CallExpression	ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917601	Callee	ZSTR_LEN		3917500	0					
ANR	3917602	Identifier	ZSTR_LEN		3917500	0					
ANR	3917603	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917604	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917605	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917606	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917607	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917608	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917609	Callee	CG		3917500	0					
ANR	3917610	Identifier	CG		3917500	0					
ANR	3917611	ArgumentList	active_op_array		3917500	1					
ANR	3917612	Argument	active_op_array		3917500	0					
ANR	3917613	Identifier	active_op_array		3917500	0					
ANR	3917614	Identifier	arg_info		3917500	1					
ANR	3917615	UnaryOperationExpression	- 1		3917500	1					
ANR	3917616	UnaryOperator	-		3917500	0					
ANR	3917617	PrimaryExpression	1		3917500	1					
ANR	3917618	Identifier	class_name		3917500	1					
ANR	3917619	AdditiveExpression	"sizeof ( ""Traversable"" ) - 1"		3917500	1		-			
ANR	3917620	SizeofExpression	"sizeof ( ""Traversable"" )"		3917500	0					
ANR	3917621	Sizeof	sizeof		3917500	0					
ANR	3917622	PrimaryExpression	"""Traversable"""		3917500	1					
ANR	3917623	PrimaryExpression	1		3917500	1					
ANR	3917624	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Traversable"" ) - 1 , ""Traversable"" , sizeof ( ""Traversable"" ) - 1 ) == 0"		3917500	1		==			
ANR	3917625	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Traversable"" ) - 1 , ""Traversable"" , sizeof ( ""Traversable"" ) - 1 )"		3917500	0					
ANR	3917626	Callee	zend_binary_strcasecmp		3917500	0					
ANR	3917627	Identifier	zend_binary_strcasecmp		3917500	0					
ANR	3917628	ArgumentList	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	1					
ANR	3917629	Argument	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917630	CallExpression	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917631	Callee	ZSTR_VAL		3917500	0					
ANR	3917632	Identifier	ZSTR_VAL		3917500	0					
ANR	3917633	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917634	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917635	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917636	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917637	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917638	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917639	Callee	CG		3917500	0					
ANR	3917640	Identifier	CG		3917500	0					
ANR	3917641	ArgumentList	active_op_array		3917500	1					
ANR	3917642	Argument	active_op_array		3917500	0					
ANR	3917643	Identifier	active_op_array		3917500	0					
ANR	3917644	Identifier	arg_info		3917500	1					
ANR	3917645	UnaryOperationExpression	- 1		3917500	1					
ANR	3917646	UnaryOperator	-		3917500	0					
ANR	3917647	PrimaryExpression	1		3917500	1					
ANR	3917648	Identifier	class_name		3917500	1					
ANR	3917649	Argument	"sizeof ( ""Traversable"" ) - 1"		3917500	1					
ANR	3917650	AdditiveExpression	"sizeof ( ""Traversable"" ) - 1"		3917500	0		-			
ANR	3917651	SizeofExpression	"sizeof ( ""Traversable"" )"		3917500	0					
ANR	3917652	Sizeof	sizeof		3917500	0					
ANR	3917653	PrimaryExpression	"""Traversable"""		3917500	1					
ANR	3917654	PrimaryExpression	1		3917500	1					
ANR	3917655	Argument	"""Traversable"""		3917500	2					
ANR	3917656	PrimaryExpression	"""Traversable"""		3917500	0					
ANR	3917657	Argument	"sizeof ( ""Traversable"" ) - 1"		3917500	3					
ANR	3917658	AdditiveExpression	"sizeof ( ""Traversable"" ) - 1"		3917500	0		-			
ANR	3917659	SizeofExpression	"sizeof ( ""Traversable"" )"		3917500	0					
ANR	3917660	Sizeof	sizeof		3917500	0					
ANR	3917661	PrimaryExpression	"""Traversable"""		3917500	1					
ANR	3917662	PrimaryExpression	1		3917500	1					
ANR	3917663	PrimaryExpression	0		3917500	1					
ANR	3917664	AndExpression	"! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Iterator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 ) == 0 ) && ! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Generator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 ) == 0 )"		3917500	1		&&			
ANR	3917665	UnaryOperationExpression	"! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Iterator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 ) == 0 )"		3917500	0					
ANR	3917666	UnaryOperator	!		3917500	0					
ANR	3917667	AndExpression	"ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Iterator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 ) == 0"		3917500	1		&&			
ANR	3917668	EqualityExpression	"ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Iterator"" ) - 1"		3917500	0		==			
ANR	3917669	CallExpression	ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917670	Callee	ZSTR_LEN		3917500	0					
ANR	3917671	Identifier	ZSTR_LEN		3917500	0					
ANR	3917672	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917673	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917674	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917675	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917676	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917677	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917678	Callee	CG		3917500	0					
ANR	3917679	Identifier	CG		3917500	0					
ANR	3917680	ArgumentList	active_op_array		3917500	1					
ANR	3917681	Argument	active_op_array		3917500	0					
ANR	3917682	Identifier	active_op_array		3917500	0					
ANR	3917683	Identifier	arg_info		3917500	1					
ANR	3917684	UnaryOperationExpression	- 1		3917500	1					
ANR	3917685	UnaryOperator	-		3917500	0					
ANR	3917686	PrimaryExpression	1		3917500	1					
ANR	3917687	Identifier	class_name		3917500	1					
ANR	3917688	AdditiveExpression	"sizeof ( ""Iterator"" ) - 1"		3917500	1		-			
ANR	3917689	SizeofExpression	"sizeof ( ""Iterator"" )"		3917500	0					
ANR	3917690	Sizeof	sizeof		3917500	0					
ANR	3917691	PrimaryExpression	"""Iterator"""		3917500	1					
ANR	3917692	PrimaryExpression	1		3917500	1					
ANR	3917693	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 ) == 0"		3917500	1		==			
ANR	3917694	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Iterator"" ) - 1 , ""Iterator"" , sizeof ( ""Iterator"" ) - 1 )"		3917500	0					
ANR	3917695	Callee	zend_binary_strcasecmp		3917500	0					
ANR	3917696	Identifier	zend_binary_strcasecmp		3917500	0					
ANR	3917697	ArgumentList	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	1					
ANR	3917698	Argument	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917699	CallExpression	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917700	Callee	ZSTR_VAL		3917500	0					
ANR	3917701	Identifier	ZSTR_VAL		3917500	0					
ANR	3917702	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917703	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917704	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917705	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917706	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917707	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917708	Callee	CG		3917500	0					
ANR	3917709	Identifier	CG		3917500	0					
ANR	3917710	ArgumentList	active_op_array		3917500	1					
ANR	3917711	Argument	active_op_array		3917500	0					
ANR	3917712	Identifier	active_op_array		3917500	0					
ANR	3917713	Identifier	arg_info		3917500	1					
ANR	3917714	UnaryOperationExpression	- 1		3917500	1					
ANR	3917715	UnaryOperator	-		3917500	0					
ANR	3917716	PrimaryExpression	1		3917500	1					
ANR	3917717	Identifier	class_name		3917500	1					
ANR	3917718	Argument	"sizeof ( ""Iterator"" ) - 1"		3917500	1					
ANR	3917719	AdditiveExpression	"sizeof ( ""Iterator"" ) - 1"		3917500	0		-			
ANR	3917720	SizeofExpression	"sizeof ( ""Iterator"" )"		3917500	0					
ANR	3917721	Sizeof	sizeof		3917500	0					
ANR	3917722	PrimaryExpression	"""Iterator"""		3917500	1					
ANR	3917723	PrimaryExpression	1		3917500	1					
ANR	3917724	Argument	"""Iterator"""		3917500	2					
ANR	3917725	PrimaryExpression	"""Iterator"""		3917500	0					
ANR	3917726	Argument	"sizeof ( ""Iterator"" ) - 1"		3917500	3					
ANR	3917727	AdditiveExpression	"sizeof ( ""Iterator"" ) - 1"		3917500	0		-			
ANR	3917728	SizeofExpression	"sizeof ( ""Iterator"" )"		3917500	0					
ANR	3917729	Sizeof	sizeof		3917500	0					
ANR	3917730	PrimaryExpression	"""Iterator"""		3917500	1					
ANR	3917731	PrimaryExpression	1		3917500	1					
ANR	3917732	PrimaryExpression	0		3917500	1					
ANR	3917733	UnaryOperationExpression	"! ( ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Generator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 ) == 0 )"		3917500	1					
ANR	3917734	UnaryOperator	!		3917500	0					
ANR	3917735	AndExpression	"ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Generator"" ) - 1 && zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 ) == 0"		3917500	1		&&			
ANR	3917736	EqualityExpression	"ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) == sizeof ( ""Generator"" ) - 1"		3917500	0		==			
ANR	3917737	CallExpression	ZSTR_LEN ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917738	Callee	ZSTR_LEN		3917500	0					
ANR	3917739	Identifier	ZSTR_LEN		3917500	0					
ANR	3917740	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917741	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917742	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917743	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917744	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917745	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917746	Callee	CG		3917500	0					
ANR	3917747	Identifier	CG		3917500	0					
ANR	3917748	ArgumentList	active_op_array		3917500	1					
ANR	3917749	Argument	active_op_array		3917500	0					
ANR	3917750	Identifier	active_op_array		3917500	0					
ANR	3917751	Identifier	arg_info		3917500	1					
ANR	3917752	UnaryOperationExpression	- 1		3917500	1					
ANR	3917753	UnaryOperator	-		3917500	0					
ANR	3917754	PrimaryExpression	1		3917500	1					
ANR	3917755	Identifier	class_name		3917500	1					
ANR	3917756	AdditiveExpression	"sizeof ( ""Generator"" ) - 1"		3917500	1		-			
ANR	3917757	SizeofExpression	"sizeof ( ""Generator"" )"		3917500	0					
ANR	3917758	Sizeof	sizeof		3917500	0					
ANR	3917759	PrimaryExpression	"""Generator"""		3917500	1					
ANR	3917760	PrimaryExpression	1		3917500	1					
ANR	3917761	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 ) == 0"		3917500	1		==			
ANR	3917762	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) , sizeof ( ""Generator"" ) - 1 , ""Generator"" , sizeof ( ""Generator"" ) - 1 )"		3917500	0					
ANR	3917763	Callee	zend_binary_strcasecmp		3917500	0					
ANR	3917764	Identifier	zend_binary_strcasecmp		3917500	0					
ANR	3917765	ArgumentList	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	1					
ANR	3917766	Argument	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917767	CallExpression	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917768	Callee	ZSTR_VAL		3917500	0					
ANR	3917769	Identifier	ZSTR_VAL		3917500	0					
ANR	3917770	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917771	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917772	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917773	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917774	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917775	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917776	Callee	CG		3917500	0					
ANR	3917777	Identifier	CG		3917500	0					
ANR	3917778	ArgumentList	active_op_array		3917500	1					
ANR	3917779	Argument	active_op_array		3917500	0					
ANR	3917780	Identifier	active_op_array		3917500	0					
ANR	3917781	Identifier	arg_info		3917500	1					
ANR	3917782	UnaryOperationExpression	- 1		3917500	1					
ANR	3917783	UnaryOperator	-		3917500	0					
ANR	3917784	PrimaryExpression	1		3917500	1					
ANR	3917785	Identifier	class_name		3917500	1					
ANR	3917786	Argument	"sizeof ( ""Generator"" ) - 1"		3917500	1					
ANR	3917787	AdditiveExpression	"sizeof ( ""Generator"" ) - 1"		3917500	0		-			
ANR	3917788	SizeofExpression	"sizeof ( ""Generator"" )"		3917500	0					
ANR	3917789	Sizeof	sizeof		3917500	0					
ANR	3917790	PrimaryExpression	"""Generator"""		3917500	1					
ANR	3917791	PrimaryExpression	1		3917500	1					
ANR	3917792	Argument	"""Generator"""		3917500	2					
ANR	3917793	PrimaryExpression	"""Generator"""		3917500	0					
ANR	3917794	Argument	"sizeof ( ""Generator"" ) - 1"		3917500	3					
ANR	3917795	AdditiveExpression	"sizeof ( ""Generator"" ) - 1"		3917500	0		-			
ANR	3917796	SizeofExpression	"sizeof ( ""Generator"" )"		3917500	0					
ANR	3917797	Sizeof	sizeof		3917500	0					
ANR	3917798	PrimaryExpression	"""Generator"""		3917500	1					
ANR	3917799	PrimaryExpression	1		3917500	1					
ANR	3917800	PrimaryExpression	0		3917500	1					
ANR	3917801	CompoundStatement		17:152:1243:1243	3917500	1					
ANR	3917802	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , msg , ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) )"	1151:3:35666:35763	3917500	0	True				
ANR	3917803	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , msg , ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name ) )"		3917500	0					
ANR	3917804	Callee	zend_error_noreturn		3917500	0					
ANR	3917805	Identifier	zend_error_noreturn		3917500	0					
ANR	3917806	ArgumentList	E_COMPILE_ERROR		3917500	1					
ANR	3917807	Argument	E_COMPILE_ERROR		3917500	0					
ANR	3917808	Identifier	E_COMPILE_ERROR		3917500	0					
ANR	3917809	Argument	msg		3917500	1					
ANR	3917810	Identifier	msg		3917500	0					
ANR	3917811	Argument	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	2					
ANR	3917812	CallExpression	ZSTR_VAL ( CG ( active_op_array ) -> arg_info [ - 1 ] . class_name )		3917500	0					
ANR	3917813	Callee	ZSTR_VAL		3917500	0					
ANR	3917814	Identifier	ZSTR_VAL		3917500	0					
ANR	3917815	ArgumentList	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	1					
ANR	3917816	Argument	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917817	MemberAccess	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500	0					
ANR	3917818	ArrayIndexing	CG ( active_op_array ) -> arg_info [ - 1 ]		3917500	0					
ANR	3917819	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3917500	0					
ANR	3917820	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917821	Callee	CG		3917500	0					
ANR	3917822	Identifier	CG		3917500	0					
ANR	3917823	ArgumentList	active_op_array		3917500	1					
ANR	3917824	Argument	active_op_array		3917500	0					
ANR	3917825	Identifier	active_op_array		3917500	0					
ANR	3917826	Identifier	arg_info		3917500	1					
ANR	3917827	UnaryOperationExpression	- 1		3917500	1					
ANR	3917828	UnaryOperator	-		3917500	0					
ANR	3917829	PrimaryExpression	1		3917500	1					
ANR	3917830	Identifier	class_name		3917500	1					
ANR	3917831	ExpressionStatement	CG ( active_op_array ) -> fn_flags |= ZEND_ACC_GENERATOR	1155:1:35774:35825	3917500	2	True				
ANR	3917832	AssignmentExpression	CG ( active_op_array ) -> fn_flags |= ZEND_ACC_GENERATOR		3917500	0		|=			
ANR	3917833	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3917500	0					
ANR	3917834	CallExpression	CG ( active_op_array )		3917500	0					
ANR	3917835	Callee	CG		3917500	0					
ANR	3917836	Identifier	CG		3917500	0					
ANR	3917837	ArgumentList	active_op_array		3917500	1					
ANR	3917838	Argument	active_op_array		3917500	0					
ANR	3917839	Identifier	active_op_array		3917500	0					
ANR	3917840	Identifier	fn_flags		3917500	1					
ANR	3917841	Identifier	ZEND_ACC_GENERATOR		3917500	1					
ANR	3917842	ReturnType	static void		3917500	1					
ANR	3917843	Identifier	zend_mark_function_as_generator		3917500	2					
ANR	3917844	ParameterList			3917500	3					
ANR	3917845	CFGEntryNode	ENTRY		3917500		True				
ANR	3917846	CFGExitNode	EXIT		3917500		True				
ANR	3917847	Symbol	CG ( active_op_array ) -> function_name		3917500						
ANR	3917848	Symbol	msg		3917500						
ANR	3917849	Symbol	zend_get_type_by_const		3917500						
ANR	3917850	Symbol	CG ( active_op_array ) -> arg_info [ - 1 ] . type_hint		3917500						
ANR	3917851	Symbol	CG		3917500						
ANR	3917852	Symbol	active_op_array		3917500						
ANR	3917853	Symbol	ZEND_ACC_HAS_RETURN_TYPE		3917500						
ANR	3917854	Symbol	E_COMPILE_ERROR		3917500						
ANR	3917855	Symbol	zend_binary_strcasecmp		3917500						
ANR	3917856	Symbol	* CG		3917500						
ANR	3917857	Symbol	CG ( active_op_array ) -> fn_flags		3917500						
ANR	3917858	Symbol	ZSTR_VAL		3917500						
ANR	3917859	Symbol	CG ( active_op_array ) -> arg_info [ - 1 ] . class_name		3917500						
ANR	3917860	Symbol	* * CG		3917500						
ANR	3917861	Symbol	CG ( active_op_array ) -> arg_info		3917500						
ANR	3917862	Symbol	* CG ( active_op_array ) -> arg_info		3917500						
ANR	3917863	Symbol	ZSTR_LEN		3917500						
ANR	3917864	Symbol	ZEND_ACC_GENERATOR		3917500						
ANR	3917865	Function	zend_do_delayed_early_binding	1159:0:35840:36555							
ANR	3917866	FunctionDef	zend_do_delayed_early_binding (const zend_op_array * op_array)		3917865	0					
ANR	3917867	CompoundStatement		1160:0:35925:36555	3917865	0					
ANR	3917868	IfStatement	if ( op_array -> early_binding != ( uint32_t ) - 1 )		3917865	0					
ANR	3917869	Condition	op_array -> early_binding != ( uint32_t ) - 1	1161:5:35932:35970	3917865	0	True				
ANR	3917870	EqualityExpression	op_array -> early_binding != ( uint32_t ) - 1		3917865	0		!=			
ANR	3917871	PtrMemberAccess	op_array -> early_binding		3917865	0					
ANR	3917872	Identifier	op_array		3917865	0					
ANR	3917873	Identifier	early_binding		3917865	1					
ANR	3917874	CastExpression	( uint32_t ) - 1		3917865	1					
ANR	3917875	CastTarget	uint32_t		3917865	0					
ANR	3917876	UnaryOperationExpression	- 1		3917865	1					
ANR	3917877	UnaryOperator	-		3917865	0					
ANR	3917878	PrimaryExpression	1		3917865	1					
ANR	3917879	CompoundStatement		5:2:154:174	3917865	1					
ANR	3917880	IdentifierDeclStatement	zend_bool orig_in_compilation = CG ( in_compilation ) ;	1162:2:35977:36027	3917865	0	True				
ANR	3917881	IdentifierDecl	orig_in_compilation = CG ( in_compilation )		3917865	0					
ANR	3917882	IdentifierDeclType	zend_bool		3917865	0					
ANR	3917883	Identifier	orig_in_compilation		3917865	1					
ANR	3917884	AssignmentExpression	orig_in_compilation = CG ( in_compilation )		3917865	2		=			
ANR	3917885	Identifier	orig_in_compilation		3917865	0					
ANR	3917886	CallExpression	CG ( in_compilation )		3917865	1					
ANR	3917887	Callee	CG		3917865	0					
ANR	3917888	Identifier	CG		3917865	0					
ANR	3917889	ArgumentList	in_compilation		3917865	1					
ANR	3917890	Argument	in_compilation		3917865	0					
ANR	3917891	Identifier	in_compilation		3917865	0					
ANR	3917892	IdentifierDeclStatement	uint32_t opline_num = op_array -> early_binding ;	1163:2:36031:36076	3917865	1	True				
ANR	3917893	IdentifierDecl	opline_num = op_array -> early_binding		3917865	0					
ANR	3917894	IdentifierDeclType	uint32_t		3917865	0					
ANR	3917895	Identifier	opline_num		3917865	1					
ANR	3917896	AssignmentExpression	opline_num = op_array -> early_binding		3917865	2		=			
ANR	3917897	Identifier	opline_num		3917865	0					
ANR	3917898	PtrMemberAccess	op_array -> early_binding		3917865	1					
ANR	3917899	Identifier	op_array		3917865	0					
ANR	3917900	Identifier	early_binding		3917865	1					
ANR	3917901	IdentifierDeclStatement	zend_class_entry * ce ;	1164:2:36080:36100	3917865	2	True				
ANR	3917902	IdentifierDecl	* ce		3917865	0					
ANR	3917903	IdentifierDeclType	zend_class_entry *		3917865	0					
ANR	3917904	Identifier	ce		3917865	1					
ANR	3917905	ExpressionStatement	CG ( in_compilation ) = 1	1166:2:36105:36127	3917865	3	True				
ANR	3917906	AssignmentExpression	CG ( in_compilation ) = 1		3917865	0		=			
ANR	3917907	CallExpression	CG ( in_compilation )		3917865	0					
ANR	3917908	Callee	CG		3917865	0					
ANR	3917909	Identifier	CG		3917865	0					
ANR	3917910	ArgumentList	in_compilation		3917865	1					
ANR	3917911	Argument	in_compilation		3917865	0					
ANR	3917912	Identifier	in_compilation		3917865	0					
ANR	3917913	PrimaryExpression	1		3917865	1					
ANR	3917914	WhileStatement	while ( opline_num != ( uint32_t ) - 1 )		3917865	4					
ANR	3917915	Condition	opline_num != ( uint32_t ) - 1	1167:9:36138:36163	3917865	0	True				
ANR	3917916	EqualityExpression	opline_num != ( uint32_t ) - 1		3917865	0		!=			
ANR	3917917	Identifier	opline_num		3917865	0					
ANR	3917918	CastExpression	( uint32_t ) - 1		3917865	1					
ANR	3917919	CastTarget	uint32_t		3917865	0					
ANR	3917920	UnaryOperationExpression	- 1		3917865	1					
ANR	3917921	UnaryOperator	-		3917865	0					
ANR	3917922	PrimaryExpression	1		3917865	1					
ANR	3917923	CompoundStatement		9:3:245:323	3917865	1					
ANR	3917924	IdentifierDeclStatement	"zval * parent_name = RT_CONSTANT ( op_array , op_array -> opcodes [ opline_num - 1 ] . op2 ) ;"	1168:3:36171:36249	3917865	0	True				
ANR	3917925	IdentifierDecl	"* parent_name = RT_CONSTANT ( op_array , op_array -> opcodes [ opline_num - 1 ] . op2 )"		3917865	0					
ANR	3917926	IdentifierDeclType	zval *		3917865	0					
ANR	3917927	Identifier	parent_name		3917865	1					
ANR	3917928	AssignmentExpression	"* parent_name = RT_CONSTANT ( op_array , op_array -> opcodes [ opline_num - 1 ] . op2 )"		3917865	2		=			
ANR	3917929	Identifier	parent_name		3917865	0					
ANR	3917930	CallExpression	"RT_CONSTANT ( op_array , op_array -> opcodes [ opline_num - 1 ] . op2 )"		3917865	1					
ANR	3917931	Callee	RT_CONSTANT		3917865	0					
ANR	3917932	Identifier	RT_CONSTANT		3917865	0					
ANR	3917933	ArgumentList	op_array		3917865	1					
ANR	3917934	Argument	op_array		3917865	0					
ANR	3917935	Identifier	op_array		3917865	0					
ANR	3917936	Argument	op_array -> opcodes [ opline_num - 1 ] . op2		3917865	1					
ANR	3917937	MemberAccess	op_array -> opcodes [ opline_num - 1 ] . op2		3917865	0					
ANR	3917938	ArrayIndexing	op_array -> opcodes [ opline_num - 1 ]		3917865	0					
ANR	3917939	PtrMemberAccess	op_array -> opcodes		3917865	0					
ANR	3917940	Identifier	op_array		3917865	0					
ANR	3917941	Identifier	opcodes		3917865	1					
ANR	3917942	AdditiveExpression	opline_num - 1		3917865	1		-			
ANR	3917943	Identifier	opline_num		3917865	0					
ANR	3917944	PrimaryExpression	1		3917865	1					
ANR	3917945	Identifier	op2		3917865	1					
ANR	3917946	IfStatement	"if ( ( ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 ) ) != NULL )"		3917865	1					
ANR	3917947	Condition	"( ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 ) ) != NULL"	1169:7:36258:36334	3917865	0	True				
ANR	3917948	EqualityExpression	"( ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 ) ) != NULL"		3917865	0		!=			
ANR	3917949	AssignmentExpression	"ce = zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 )"		3917865	0		=			
ANR	3917950	Identifier	ce		3917865	0					
ANR	3917951	CallExpression	"zend_lookup_class_ex ( Z_STR_P ( parent_name ) , parent_name + 1 , 0 )"		3917865	1					
ANR	3917952	Callee	zend_lookup_class_ex		3917865	0					
ANR	3917953	Identifier	zend_lookup_class_ex		3917865	0					
ANR	3917954	ArgumentList	Z_STR_P ( parent_name )		3917865	1					
ANR	3917955	Argument	Z_STR_P ( parent_name )		3917865	0					
ANR	3917956	CallExpression	Z_STR_P ( parent_name )		3917865	0					
ANR	3917957	Callee	Z_STR_P		3917865	0					
ANR	3917958	Identifier	Z_STR_P		3917865	0					
ANR	3917959	ArgumentList	parent_name		3917865	1					
ANR	3917960	Argument	parent_name		3917865	0					
ANR	3917961	Identifier	parent_name		3917865	0					
ANR	3917962	Argument	parent_name + 1		3917865	1					
ANR	3917963	AdditiveExpression	parent_name + 1		3917865	0		+			
ANR	3917964	Identifier	parent_name		3917865	0					
ANR	3917965	PrimaryExpression	1		3917865	1					
ANR	3917966	Argument	0		3917865	2					
ANR	3917967	PrimaryExpression	0		3917865	0					
ANR	3917968	Identifier	NULL		3917865	1					
ANR	3917969	CompoundStatement		10:86:411:411	3917865	1					
ANR	3917970	ExpressionStatement	"do_bind_inherited_class ( op_array , & op_array -> opcodes [ opline_num ] , EG ( class_table ) , ce , 0 )"	1170:4:36343:36432	3917865	0	True				
ANR	3917971	CallExpression	"do_bind_inherited_class ( op_array , & op_array -> opcodes [ opline_num ] , EG ( class_table ) , ce , 0 )"		3917865	0					
ANR	3917972	Callee	do_bind_inherited_class		3917865	0					
ANR	3917973	Identifier	do_bind_inherited_class		3917865	0					
ANR	3917974	ArgumentList	op_array		3917865	1					
ANR	3917975	Argument	op_array		3917865	0					
ANR	3917976	Identifier	op_array		3917865	0					
ANR	3917977	Argument	& op_array -> opcodes [ opline_num ]		3917865	1					
ANR	3917978	UnaryOperationExpression	& op_array -> opcodes [ opline_num ]		3917865	0					
ANR	3917979	UnaryOperator	&		3917865	0					
ANR	3917980	ArrayIndexing	op_array -> opcodes [ opline_num ]		3917865	1					
ANR	3917981	PtrMemberAccess	op_array -> opcodes		3917865	0					
ANR	3917982	Identifier	op_array		3917865	0					
ANR	3917983	Identifier	opcodes		3917865	1					
ANR	3917984	Identifier	opline_num		3917865	1					
ANR	3917985	Argument	EG ( class_table )		3917865	2					
ANR	3917986	CallExpression	EG ( class_table )		3917865	0					
ANR	3917987	Callee	EG		3917865	0					
ANR	3917988	Identifier	EG		3917865	0					
ANR	3917989	ArgumentList	class_table		3917865	1					
ANR	3917990	Argument	class_table		3917865	0					
ANR	3917991	Identifier	class_table		3917865	0					
ANR	3917992	Argument	ce		3917865	3					
ANR	3917993	Identifier	ce		3917865	0					
ANR	3917994	Argument	0		3917865	4					
ANR	3917995	PrimaryExpression	0		3917865	0					
ANR	3917996	ExpressionStatement	opline_num = op_array -> opcodes [ opline_num ] . result . opline_num	1172:3:36442:36502	3917865	2	True				
ANR	3917997	AssignmentExpression	opline_num = op_array -> opcodes [ opline_num ] . result . opline_num		3917865	0		=			
ANR	3917998	Identifier	opline_num		3917865	0					
ANR	3917999	MemberAccess	op_array -> opcodes [ opline_num ] . result . opline_num		3917865	1					
ANR	3918000	MemberAccess	op_array -> opcodes [ opline_num ] . result		3917865	0					
ANR	3918001	ArrayIndexing	op_array -> opcodes [ opline_num ]		3917865	0					
ANR	3918002	PtrMemberAccess	op_array -> opcodes		3917865	0					
ANR	3918003	Identifier	op_array		3917865	0					
ANR	3918004	Identifier	opcodes		3917865	1					
ANR	3918005	Identifier	opline_num		3917865	1					
ANR	3918006	Identifier	result		3917865	1					
ANR	3918007	Identifier	opline_num		3917865	1					
ANR	3918008	ExpressionStatement	CG ( in_compilation ) = orig_in_compilation	1174:2:36510:36550	3917865	5	True				
ANR	3918009	AssignmentExpression	CG ( in_compilation ) = orig_in_compilation		3917865	0		=			
ANR	3918010	CallExpression	CG ( in_compilation )		3917865	0					
ANR	3918011	Callee	CG		3917865	0					
ANR	3918012	Identifier	CG		3917865	0					
ANR	3918013	ArgumentList	in_compilation		3917865	1					
ANR	3918014	Argument	in_compilation		3917865	0					
ANR	3918015	Identifier	in_compilation		3917865	0					
ANR	3918016	Identifier	orig_in_compilation		3917865	1					
ANR	3918017	ReturnType	ZEND_API void		3917865	1					
ANR	3918018	Identifier	zend_do_delayed_early_binding		3917865	2					
ANR	3918019	ParameterList	const zend_op_array * op_array		3917865	3					
ANR	3918020	Parameter	const zend_op_array * op_array	1159:44:35884:35912	3917865	0	True				
ANR	3918021	ParameterType	const zend_op_array *		3917865	0					
ANR	3918022	Identifier	op_array		3917865	1					
ANR	3918023	CFGEntryNode	ENTRY		3917865		True				
ANR	3918024	CFGExitNode	EXIT		3917865		True				
ANR	3918025	Symbol	orig_in_compilation		3917865						
ANR	3918026	Symbol	parent_name		3917865						
ANR	3918027	Symbol	zend_lookup_class_ex		3917865						
ANR	3918028	Symbol	ce		3917865						
ANR	3918029	Symbol	EG		3917865						
ANR	3918030	Symbol	NULL		3917865						
ANR	3918031	Symbol	CG		3917865						
ANR	3918032	Symbol	op_array -> opcodes [ opline_num - 1 ] . op2		3917865						
ANR	3918033	Symbol	RT_CONSTANT		3917865						
ANR	3918034	Symbol	* op_array		3917865						
ANR	3918035	Symbol	in_compilation		3917865						
ANR	3918036	Symbol	* opline_num		3917865						
ANR	3918037	Symbol	op_array -> opcodes [ opline_num ] . result . opline_num		3917865						
ANR	3918038	Symbol	op_array -> opcodes		3917865						
ANR	3918039	Symbol	op_array -> early_binding		3917865						
ANR	3918040	Symbol	op_array -> opcodes [ opline_num ] . result		3917865						
ANR	3918041	Symbol	opline_num		3917865						
ANR	3918042	Symbol	Z_STR_P		3917865						
ANR	3918043	Symbol	* * op_array		3917865						
ANR	3918044	Symbol	class_table		3917865						
ANR	3918045	Symbol	op_array		3917865						
ANR	3918046	Symbol	* op_array -> opcodes		3917865						
ANR	3918047	Function	zend_mangle_property_name	1179:0:36568:37033							
ANR	3918048	FunctionDef	"zend_mangle_property_name (const char * src1 , size_t src1_length , const char * src2 , size_t src2_length , int internal)"		3918047	0					
ANR	3918049	CompoundStatement		1180:0:36716:37033	3918047	0					
ANR	3918050	IdentifierDeclStatement	size_t prop_name_length = 1 + src1_length + 1 + src2_length ;	1181:1:36719:36778	3918047	0	True				
ANR	3918051	IdentifierDecl	prop_name_length = 1 + src1_length + 1 + src2_length		3918047	0					
ANR	3918052	IdentifierDeclType	size_t		3918047	0					
ANR	3918053	Identifier	prop_name_length		3918047	1					
ANR	3918054	AssignmentExpression	prop_name_length = 1 + src1_length + 1 + src2_length		3918047	2		=			
ANR	3918055	Identifier	prop_name_length		3918047	0					
ANR	3918056	AdditiveExpression	1 + src1_length + 1 + src2_length		3918047	1		+			
ANR	3918057	PrimaryExpression	1		3918047	0					
ANR	3918058	AdditiveExpression	src1_length + 1 + src2_length		3918047	1		+			
ANR	3918059	Identifier	src1_length		3918047	0					
ANR	3918060	AdditiveExpression	1 + src2_length		3918047	1		+			
ANR	3918061	PrimaryExpression	1		3918047	0					
ANR	3918062	Identifier	src2_length		3918047	1					
ANR	3918063	IdentifierDeclStatement	"zend_string * prop_name = zend_string_alloc ( prop_name_length , internal ) ;"	1182:1:36781:36851	3918047	1	True				
ANR	3918064	IdentifierDecl	"* prop_name = zend_string_alloc ( prop_name_length , internal )"		3918047	0					
ANR	3918065	IdentifierDeclType	zend_string *		3918047	0					
ANR	3918066	Identifier	prop_name		3918047	1					
ANR	3918067	AssignmentExpression	"* prop_name = zend_string_alloc ( prop_name_length , internal )"		3918047	2		=			
ANR	3918068	Identifier	prop_name		3918047	0					
ANR	3918069	CallExpression	"zend_string_alloc ( prop_name_length , internal )"		3918047	1					
ANR	3918070	Callee	zend_string_alloc		3918047	0					
ANR	3918071	Identifier	zend_string_alloc		3918047	0					
ANR	3918072	ArgumentList	prop_name_length		3918047	1					
ANR	3918073	Argument	prop_name_length		3918047	0					
ANR	3918074	Identifier	prop_name_length		3918047	0					
ANR	3918075	Argument	internal		3918047	1					
ANR	3918076	Identifier	internal		3918047	0					
ANR	3918077	ExpressionStatement	ZSTR_VAL ( prop_name ) [ 0 ] = '\\0'	1184:1:36855:36884	3918047	2	True				
ANR	3918078	AssignmentExpression	ZSTR_VAL ( prop_name ) [ 0 ] = '\\0'		3918047	0		=			
ANR	3918079	ArrayIndexing	ZSTR_VAL ( prop_name ) [ 0 ]		3918047	0					
ANR	3918080	CallExpression	ZSTR_VAL ( prop_name )		3918047	0					
ANR	3918081	Callee	ZSTR_VAL		3918047	0					
ANR	3918082	Identifier	ZSTR_VAL		3918047	0					
ANR	3918083	ArgumentList	prop_name		3918047	1					
ANR	3918084	Argument	prop_name		3918047	0					
ANR	3918085	Identifier	prop_name		3918047	0					
ANR	3918086	PrimaryExpression	0		3918047	1					
ANR	3918087	PrimaryExpression	'\\0'		3918047	1					
ANR	3918088	ExpressionStatement	"memcpy ( ZSTR_VAL ( prop_name ) + 1 , src1 , src1_length + 1 )"	1185:1:36887:36939	3918047	3	True				
ANR	3918089	CallExpression	"memcpy ( ZSTR_VAL ( prop_name ) + 1 , src1 , src1_length + 1 )"		3918047	0					
ANR	3918090	Callee	memcpy		3918047	0					
ANR	3918091	Identifier	memcpy		3918047	0					
ANR	3918092	ArgumentList	ZSTR_VAL ( prop_name ) + 1		3918047	1					
ANR	3918093	Argument	ZSTR_VAL ( prop_name ) + 1		3918047	0					
ANR	3918094	AdditiveExpression	ZSTR_VAL ( prop_name ) + 1		3918047	0		+			
ANR	3918095	CallExpression	ZSTR_VAL ( prop_name )		3918047	0					
ANR	3918096	Callee	ZSTR_VAL		3918047	0					
ANR	3918097	Identifier	ZSTR_VAL		3918047	0					
ANR	3918098	ArgumentList	prop_name		3918047	1					
ANR	3918099	Argument	prop_name		3918047	0					
ANR	3918100	Identifier	prop_name		3918047	0					
ANR	3918101	PrimaryExpression	1		3918047	1					
ANR	3918102	Argument	src1		3918047	1					
ANR	3918103	Identifier	src1		3918047	0					
ANR	3918104	Argument	src1_length + 1		3918047	2					
ANR	3918105	AdditiveExpression	src1_length + 1		3918047	0		+			
ANR	3918106	Identifier	src1_length		3918047	0					
ANR	3918107	PrimaryExpression	1		3918047	1					
ANR	3918108	ExpressionStatement	"memcpy ( ZSTR_VAL ( prop_name ) + 1 + src1_length + 1 , src2 , src2_length + 1 )"	1186:1:36942:37012	3918047	4	True				
ANR	3918109	CallExpression	"memcpy ( ZSTR_VAL ( prop_name ) + 1 + src1_length + 1 , src2 , src2_length + 1 )"		3918047	0					
ANR	3918110	Callee	memcpy		3918047	0					
ANR	3918111	Identifier	memcpy		3918047	0					
ANR	3918112	ArgumentList	ZSTR_VAL ( prop_name ) + 1 + src1_length + 1		3918047	1					
ANR	3918113	Argument	ZSTR_VAL ( prop_name ) + 1 + src1_length + 1		3918047	0					
ANR	3918114	AdditiveExpression	ZSTR_VAL ( prop_name ) + 1 + src1_length + 1		3918047	0		+			
ANR	3918115	CallExpression	ZSTR_VAL ( prop_name )		3918047	0					
ANR	3918116	Callee	ZSTR_VAL		3918047	0					
ANR	3918117	Identifier	ZSTR_VAL		3918047	0					
ANR	3918118	ArgumentList	prop_name		3918047	1					
ANR	3918119	Argument	prop_name		3918047	0					
ANR	3918120	Identifier	prop_name		3918047	0					
ANR	3918121	AdditiveExpression	1 + src1_length + 1		3918047	1		+			
ANR	3918122	PrimaryExpression	1		3918047	0					
ANR	3918123	AdditiveExpression	src1_length + 1		3918047	1		+			
ANR	3918124	Identifier	src1_length		3918047	0					
ANR	3918125	PrimaryExpression	1		3918047	1					
ANR	3918126	Argument	src2		3918047	1					
ANR	3918127	Identifier	src2		3918047	0					
ANR	3918128	Argument	src2_length + 1		3918047	2					
ANR	3918129	AdditiveExpression	src2_length + 1		3918047	0		+			
ANR	3918130	Identifier	src2_length		3918047	0					
ANR	3918131	PrimaryExpression	1		3918047	1					
ANR	3918132	ReturnStatement	return prop_name ;	1187:1:37015:37031	3918047	5	True				
ANR	3918133	Identifier	prop_name		3918047	0					
ANR	3918134	ReturnType	ZEND_API zend_string *		3918047	1					
ANR	3918135	Identifier	zend_mangle_property_name		3918047	2					
ANR	3918136	ParameterList	"const char * src1 , size_t src1_length , const char * src2 , size_t src2_length , int internal"		3918047	3					
ANR	3918137	Parameter	const char * src1	1179:48:36616:36631	3918047	0	True				
ANR	3918138	ParameterType	const char *		3918047	0					
ANR	3918139	Identifier	src1		3918047	1					
ANR	3918140	Parameter	size_t src1_length	1179:66:36634:36651	3918047	1	True				
ANR	3918141	ParameterType	size_t		3918047	0					
ANR	3918142	Identifier	src1_length		3918047	1					
ANR	3918143	Parameter	const char * src2	1179:86:36654:36669	3918047	2	True				
ANR	3918144	ParameterType	const char *		3918047	0					
ANR	3918145	Identifier	src2		3918047	1					
ANR	3918146	Parameter	size_t src2_length	1179:104:36672:36689	3918047	3	True				
ANR	3918147	ParameterType	size_t		3918047	0					
ANR	3918148	Identifier	src2_length		3918047	1					
ANR	3918149	Parameter	int internal	1179:124:36692:36703	3918047	4	True				
ANR	3918150	ParameterType	int		3918047	0					
ANR	3918151	Identifier	internal		3918047	1					
ANR	3918152	CFGEntryNode	ENTRY		3918047		True				
ANR	3918153	CFGExitNode	EXIT		3918047		True				
ANR	3918154	Symbol	prop_name		3918047						
ANR	3918155	Symbol	internal		3918047						
ANR	3918156	Symbol	zend_string_alloc		3918047						
ANR	3918157	Symbol	src1_length		3918047						
ANR	3918158	Symbol	src2_length		3918047						
ANR	3918159	Symbol	src1		3918047						
ANR	3918160	Symbol	src2		3918047						
ANR	3918161	Symbol	prop_name_length		3918047						
ANR	3918162	Symbol	ZSTR_VAL		3918047						
ANR	3918163	Symbol	* ZSTR_VAL		3918047						
ANR	3918164	Function	zend_strnlen	1191:0:37046:37197							
ANR	3918165	FunctionDef	"zend_strnlen (const char * s , size_t maxlen)"		3918164	0					
ANR	3918166	CompoundStatement		1192:0:37132:37197	3918164	0					
ANR	3918167	IdentifierDeclStatement	size_t len = 0 ;	1193:1:37135:37149	3918164	0	True				
ANR	3918168	IdentifierDecl	len = 0		3918164	0					
ANR	3918169	IdentifierDeclType	size_t		3918164	0					
ANR	3918170	Identifier	len		3918164	1					
ANR	3918171	AssignmentExpression	len = 0		3918164	2		=			
ANR	3918172	Identifier	len		3918164	0					
ANR	3918173	PrimaryExpression	0		3918164	1					
ANR	3918174	WhileStatement	while ( * s ++ && maxlen -- )		3918164	1					
ANR	3918175	Condition	* s ++ && maxlen --	1194:8:37159:37174	3918164	0	True				
ANR	3918176	AndExpression	* s ++ && maxlen --		3918164	0		&&			
ANR	3918177	UnaryOperationExpression	* s ++		3918164	0					
ANR	3918178	UnaryOperator	*		3918164	0					
ANR	3918179	PostIncDecOperationExpression	s ++		3918164	1					
ANR	3918180	Identifier	s		3918164	0					
ANR	3918181	IncDec	++		3918164	1					
ANR	3918182	PostIncDecOperationExpression	maxlen --		3918164	1					
ANR	3918183	Identifier	maxlen		3918164	0					
ANR	3918184	IncDec	--		3918164	1					
ANR	3918185	ExpressionStatement	len ++	1194:26:37177:37182	3918164	1	True				
ANR	3918186	PostIncDecOperationExpression	len ++		3918164	0					
ANR	3918187	Identifier	len		3918164	0					
ANR	3918188	IncDec	++		3918164	1					
ANR	3918189	ReturnStatement	return len ;	1195:1:37185:37195	3918164	2	True				
ANR	3918190	Identifier	len		3918164	0					
ANR	3918191	ReturnType	static zend_always_inline size_t		3918164	1					
ANR	3918192	Identifier	zend_strnlen		3918164	2					
ANR	3918193	ParameterList	"const char * s , size_t maxlen"		3918164	3					
ANR	3918194	Parameter	const char * s	1191:46:37092:37104	3918164	0	True				
ANR	3918195	ParameterType	const char *		3918164	0					
ANR	3918196	Identifier	s		3918164	1					
ANR	3918197	Parameter	size_t maxlen	1191:61:37107:37119	3918164	1	True				
ANR	3918198	ParameterType	size_t		3918164	0					
ANR	3918199	Identifier	maxlen		3918164	1					
ANR	3918200	CFGEntryNode	ENTRY		3918164		True				
ANR	3918201	CFGExitNode	EXIT		3918164		True				
ANR	3918202	Symbol	* s ++		3918164						
ANR	3918203	Symbol	s		3918164						
ANR	3918204	Symbol	len		3918164						
ANR	3918205	Symbol	maxlen		3918164						
ANR	3918206	Function	zend_unmangle_property_name_ex	1199:0:37210:38505							
ANR	3918207	FunctionDef	"zend_unmangle_property_name_ex (const zend_string * name , const char * * class_name , const char * * prop_name , size_t * prop_len)"		3918206	0					
ANR	3918208	CompoundStatement		1200:0:37356:38505	3918206	0					
ANR	3918209	IdentifierDeclStatement	size_t class_name_len ;	1201:1:37359:37380	3918206	0	True				
ANR	3918210	IdentifierDecl	class_name_len		3918206	0					
ANR	3918211	IdentifierDeclType	size_t		3918206	0					
ANR	3918212	Identifier	class_name_len		3918206	1					
ANR	3918213	IdentifierDeclStatement	size_t anonclass_src_len ;	1202:1:37383:37407	3918206	1	True				
ANR	3918214	IdentifierDecl	anonclass_src_len		3918206	0					
ANR	3918215	IdentifierDeclType	size_t		3918206	0					
ANR	3918216	Identifier	anonclass_src_len		3918206	1					
ANR	3918217	ExpressionStatement	* class_name = NULL	1204:1:37411:37429	3918206	2	True				
ANR	3918218	AssignmentExpression	* class_name = NULL		3918206	0		=			
ANR	3918219	UnaryOperationExpression	* class_name		3918206	0					
ANR	3918220	UnaryOperator	*		3918206	0					
ANR	3918221	Identifier	class_name		3918206	1					
ANR	3918222	Identifier	NULL		3918206	1					
ANR	3918223	IfStatement	if ( ZSTR_VAL ( name ) [ 0 ] != '\\0' )		3918206	3					
ANR	3918224	Condition	ZSTR_VAL ( name ) [ 0 ] != '\\0'	1206:5:37437:37461	3918206	0	True				
ANR	3918225	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] != '\\0'		3918206	0		!=			
ANR	3918226	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		3918206	0					
ANR	3918227	CallExpression	ZSTR_VAL ( name )		3918206	0					
ANR	3918228	Callee	ZSTR_VAL		3918206	0					
ANR	3918229	Identifier	ZSTR_VAL		3918206	0					
ANR	3918230	ArgumentList	name		3918206	1					
ANR	3918231	Argument	name		3918206	0					
ANR	3918232	Identifier	name		3918206	0					
ANR	3918233	PrimaryExpression	0		3918206	1					
ANR	3918234	PrimaryExpression	'\\0'		3918206	1					
ANR	3918235	CompoundStatement		7:32:107:107	3918206	1					
ANR	3918236	ExpressionStatement	* prop_name = ZSTR_VAL ( name )	1207:2:37468:37495	3918206	0	True				
ANR	3918237	AssignmentExpression	* prop_name = ZSTR_VAL ( name )		3918206	0		=			
ANR	3918238	UnaryOperationExpression	* prop_name		3918206	0					
ANR	3918239	UnaryOperator	*		3918206	0					
ANR	3918240	Identifier	prop_name		3918206	1					
ANR	3918241	CallExpression	ZSTR_VAL ( name )		3918206	1					
ANR	3918242	Callee	ZSTR_VAL		3918206	0					
ANR	3918243	Identifier	ZSTR_VAL		3918206	0					
ANR	3918244	ArgumentList	name		3918206	1					
ANR	3918245	Argument	name		3918206	0					
ANR	3918246	Identifier	name		3918206	0					
ANR	3918247	IfStatement	if ( prop_len )		3918206	1					
ANR	3918248	Condition	prop_len	1208:6:37503:37510	3918206	0	True				
ANR	3918249	Identifier	prop_len		3918206	0					
ANR	3918250	CompoundStatement		9:16:156:156	3918206	1					
ANR	3918251	ExpressionStatement	* prop_len = ZSTR_LEN ( name )	1209:3:37518:37544	3918206	0	True				
ANR	3918252	AssignmentExpression	* prop_len = ZSTR_LEN ( name )		3918206	0		=			
ANR	3918253	UnaryOperationExpression	* prop_len		3918206	0					
ANR	3918254	UnaryOperator	*		3918206	0					
ANR	3918255	Identifier	prop_len		3918206	1					
ANR	3918256	CallExpression	ZSTR_LEN ( name )		3918206	1					
ANR	3918257	Callee	ZSTR_LEN		3918206	0					
ANR	3918258	Identifier	ZSTR_LEN		3918206	0					
ANR	3918259	ArgumentList	name		3918206	1					
ANR	3918260	Argument	name		3918206	0					
ANR	3918261	Identifier	name		3918206	0					
ANR	3918262	ReturnStatement	return SUCCESS ;	1211:2:37552:37566	3918206	2	True				
ANR	3918263	Identifier	SUCCESS		3918206	0					
ANR	3918264	IfStatement	if ( ZSTR_LEN ( name ) < 3 || ZSTR_VAL ( name ) [ 1 ] == '\\0' )		3918206	4					
ANR	3918265	Condition	ZSTR_LEN ( name ) < 3 || ZSTR_VAL ( name ) [ 1 ] == '\\0'	1213:5:37576:37622	3918206	0	True				
ANR	3918266	OrExpression	ZSTR_LEN ( name ) < 3 || ZSTR_VAL ( name ) [ 1 ] == '\\0'		3918206	0		||			
ANR	3918267	RelationalExpression	ZSTR_LEN ( name ) < 3		3918206	0		<			
ANR	3918268	CallExpression	ZSTR_LEN ( name )		3918206	0					
ANR	3918269	Callee	ZSTR_LEN		3918206	0					
ANR	3918270	Identifier	ZSTR_LEN		3918206	0					
ANR	3918271	ArgumentList	name		3918206	1					
ANR	3918272	Argument	name		3918206	0					
ANR	3918273	Identifier	name		3918206	0					
ANR	3918274	PrimaryExpression	3		3918206	1					
ANR	3918275	EqualityExpression	ZSTR_VAL ( name ) [ 1 ] == '\\0'		3918206	1		==			
ANR	3918276	ArrayIndexing	ZSTR_VAL ( name ) [ 1 ]		3918206	0					
ANR	3918277	CallExpression	ZSTR_VAL ( name )		3918206	0					
ANR	3918278	Callee	ZSTR_VAL		3918206	0					
ANR	3918279	Identifier	ZSTR_VAL		3918206	0					
ANR	3918280	ArgumentList	name		3918206	1					
ANR	3918281	Argument	name		3918206	0					
ANR	3918282	Identifier	name		3918206	0					
ANR	3918283	PrimaryExpression	1		3918206	1					
ANR	3918284	PrimaryExpression	'\\0'		3918206	1					
ANR	3918285	CompoundStatement		14:54:268:268	3918206	1					
ANR	3918286	ExpressionStatement	"zend_error ( E_NOTICE , ""Illegal member variable name"" )"	1214:2:37629:37681	3918206	0	True				
ANR	3918287	CallExpression	"zend_error ( E_NOTICE , ""Illegal member variable name"" )"		3918206	0					
ANR	3918288	Callee	zend_error		3918206	0					
ANR	3918289	Identifier	zend_error		3918206	0					
ANR	3918290	ArgumentList	E_NOTICE		3918206	1					
ANR	3918291	Argument	E_NOTICE		3918206	0					
ANR	3918292	Identifier	E_NOTICE		3918206	0					
ANR	3918293	Argument	"""Illegal member variable name"""		3918206	1					
ANR	3918294	PrimaryExpression	"""Illegal member variable name"""		3918206	0					
ANR	3918295	ExpressionStatement	* prop_name = ZSTR_VAL ( name )	1215:2:37685:37712	3918206	1	True				
ANR	3918296	AssignmentExpression	* prop_name = ZSTR_VAL ( name )		3918206	0		=			
ANR	3918297	UnaryOperationExpression	* prop_name		3918206	0					
ANR	3918298	UnaryOperator	*		3918206	0					
ANR	3918299	Identifier	prop_name		3918206	1					
ANR	3918300	CallExpression	ZSTR_VAL ( name )		3918206	1					
ANR	3918301	Callee	ZSTR_VAL		3918206	0					
ANR	3918302	Identifier	ZSTR_VAL		3918206	0					
ANR	3918303	ArgumentList	name		3918206	1					
ANR	3918304	Argument	name		3918206	0					
ANR	3918305	Identifier	name		3918206	0					
ANR	3918306	IfStatement	if ( prop_len )		3918206	2					
ANR	3918307	Condition	prop_len	1216:6:37720:37727	3918206	0	True				
ANR	3918308	Identifier	prop_len		3918206	0					
ANR	3918309	CompoundStatement		17:16:373:373	3918206	1					
ANR	3918310	ExpressionStatement	* prop_len = ZSTR_LEN ( name )	1217:3:37735:37761	3918206	0	True				
ANR	3918311	AssignmentExpression	* prop_len = ZSTR_LEN ( name )		3918206	0		=			
ANR	3918312	UnaryOperationExpression	* prop_len		3918206	0					
ANR	3918313	UnaryOperator	*		3918206	0					
ANR	3918314	Identifier	prop_len		3918206	1					
ANR	3918315	CallExpression	ZSTR_LEN ( name )		3918206	1					
ANR	3918316	Callee	ZSTR_LEN		3918206	0					
ANR	3918317	Identifier	ZSTR_LEN		3918206	0					
ANR	3918318	ArgumentList	name		3918206	1					
ANR	3918319	Argument	name		3918206	0					
ANR	3918320	Identifier	name		3918206	0					
ANR	3918321	ReturnStatement	return FAILURE ;	1219:2:37769:37783	3918206	3	True				
ANR	3918322	Identifier	FAILURE		3918206	0					
ANR	3918323	ExpressionStatement	"class_name_len = zend_strnlen ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 2 )"	1222:1:37790:37859	3918206	5	True				
ANR	3918324	AssignmentExpression	"class_name_len = zend_strnlen ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 2 )"		3918206	0		=			
ANR	3918325	Identifier	class_name_len		3918206	0					
ANR	3918326	CallExpression	"zend_strnlen ( ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 2 )"		3918206	1					
ANR	3918327	Callee	zend_strnlen		3918206	0					
ANR	3918328	Identifier	zend_strnlen		3918206	0					
ANR	3918329	ArgumentList	ZSTR_VAL ( name ) + 1		3918206	1					
ANR	3918330	Argument	ZSTR_VAL ( name ) + 1		3918206	0					
ANR	3918331	AdditiveExpression	ZSTR_VAL ( name ) + 1		3918206	0		+			
ANR	3918332	CallExpression	ZSTR_VAL ( name )		3918206	0					
ANR	3918333	Callee	ZSTR_VAL		3918206	0					
ANR	3918334	Identifier	ZSTR_VAL		3918206	0					
ANR	3918335	ArgumentList	name		3918206	1					
ANR	3918336	Argument	name		3918206	0					
ANR	3918337	Identifier	name		3918206	0					
ANR	3918338	PrimaryExpression	1		3918206	1					
ANR	3918339	Argument	ZSTR_LEN ( name ) - 2		3918206	1					
ANR	3918340	AdditiveExpression	ZSTR_LEN ( name ) - 2		3918206	0		-			
ANR	3918341	CallExpression	ZSTR_LEN ( name )		3918206	0					
ANR	3918342	Callee	ZSTR_LEN		3918206	0					
ANR	3918343	Identifier	ZSTR_LEN		3918206	0					
ANR	3918344	ArgumentList	name		3918206	1					
ANR	3918345	Argument	name		3918206	0					
ANR	3918346	Identifier	name		3918206	0					
ANR	3918347	PrimaryExpression	2		3918206	1					
ANR	3918348	IfStatement	if ( class_name_len >= ZSTR_LEN ( name ) - 2 || ZSTR_VAL ( name ) [ class_name_len + 1 ] != '\\0' )		3918206	6					
ANR	3918349	Condition	class_name_len >= ZSTR_LEN ( name ) - 2 || ZSTR_VAL ( name ) [ class_name_len + 1 ] != '\\0'	1223:5:37866:37947	3918206	0	True				
ANR	3918350	OrExpression	class_name_len >= ZSTR_LEN ( name ) - 2 || ZSTR_VAL ( name ) [ class_name_len + 1 ] != '\\0'		3918206	0		||			
ANR	3918351	RelationalExpression	class_name_len >= ZSTR_LEN ( name ) - 2		3918206	0		>=			
ANR	3918352	Identifier	class_name_len		3918206	0					
ANR	3918353	AdditiveExpression	ZSTR_LEN ( name ) - 2		3918206	1		-			
ANR	3918354	CallExpression	ZSTR_LEN ( name )		3918206	0					
ANR	3918355	Callee	ZSTR_LEN		3918206	0					
ANR	3918356	Identifier	ZSTR_LEN		3918206	0					
ANR	3918357	ArgumentList	name		3918206	1					
ANR	3918358	Argument	name		3918206	0					
ANR	3918359	Identifier	name		3918206	0					
ANR	3918360	PrimaryExpression	2		3918206	1					
ANR	3918361	EqualityExpression	ZSTR_VAL ( name ) [ class_name_len + 1 ] != '\\0'		3918206	1		!=			
ANR	3918362	ArrayIndexing	ZSTR_VAL ( name ) [ class_name_len + 1 ]		3918206	0					
ANR	3918363	CallExpression	ZSTR_VAL ( name )		3918206	0					
ANR	3918364	Callee	ZSTR_VAL		3918206	0					
ANR	3918365	Identifier	ZSTR_VAL		3918206	0					
ANR	3918366	ArgumentList	name		3918206	1					
ANR	3918367	Argument	name		3918206	0					
ANR	3918368	Identifier	name		3918206	0					
ANR	3918369	AdditiveExpression	class_name_len + 1		3918206	1		+			
ANR	3918370	Identifier	class_name_len		3918206	0					
ANR	3918371	PrimaryExpression	1		3918206	1					
ANR	3918372	PrimaryExpression	'\\0'		3918206	1					
ANR	3918373	CompoundStatement		24:89:593:593	3918206	1					
ANR	3918374	ExpressionStatement	"zend_error ( E_NOTICE , ""Corrupt member variable name"" )"	1224:2:37954:38006	3918206	0	True				
ANR	3918375	CallExpression	"zend_error ( E_NOTICE , ""Corrupt member variable name"" )"		3918206	0					
ANR	3918376	Callee	zend_error		3918206	0					
ANR	3918377	Identifier	zend_error		3918206	0					
ANR	3918378	ArgumentList	E_NOTICE		3918206	1					
ANR	3918379	Argument	E_NOTICE		3918206	0					
ANR	3918380	Identifier	E_NOTICE		3918206	0					
ANR	3918381	Argument	"""Corrupt member variable name"""		3918206	1					
ANR	3918382	PrimaryExpression	"""Corrupt member variable name"""		3918206	0					
ANR	3918383	ExpressionStatement	* prop_name = ZSTR_VAL ( name )	1225:2:38010:38037	3918206	1	True				
ANR	3918384	AssignmentExpression	* prop_name = ZSTR_VAL ( name )		3918206	0		=			
ANR	3918385	UnaryOperationExpression	* prop_name		3918206	0					
ANR	3918386	UnaryOperator	*		3918206	0					
ANR	3918387	Identifier	prop_name		3918206	1					
ANR	3918388	CallExpression	ZSTR_VAL ( name )		3918206	1					
ANR	3918389	Callee	ZSTR_VAL		3918206	0					
ANR	3918390	Identifier	ZSTR_VAL		3918206	0					
ANR	3918391	ArgumentList	name		3918206	1					
ANR	3918392	Argument	name		3918206	0					
ANR	3918393	Identifier	name		3918206	0					
ANR	3918394	IfStatement	if ( prop_len )		3918206	2					
ANR	3918395	Condition	prop_len	1226:6:38045:38052	3918206	0	True				
ANR	3918396	Identifier	prop_len		3918206	0					
ANR	3918397	CompoundStatement		27:16:698:698	3918206	1					
ANR	3918398	ExpressionStatement	* prop_len = ZSTR_LEN ( name )	1227:3:38060:38086	3918206	0	True				
ANR	3918399	AssignmentExpression	* prop_len = ZSTR_LEN ( name )		3918206	0		=			
ANR	3918400	UnaryOperationExpression	* prop_len		3918206	0					
ANR	3918401	UnaryOperator	*		3918206	0					
ANR	3918402	Identifier	prop_len		3918206	1					
ANR	3918403	CallExpression	ZSTR_LEN ( name )		3918206	1					
ANR	3918404	Callee	ZSTR_LEN		3918206	0					
ANR	3918405	Identifier	ZSTR_LEN		3918206	0					
ANR	3918406	ArgumentList	name		3918206	1					
ANR	3918407	Argument	name		3918206	0					
ANR	3918408	Identifier	name		3918206	0					
ANR	3918409	ReturnStatement	return FAILURE ;	1229:2:38094:38108	3918206	3	True				
ANR	3918410	Identifier	FAILURE		3918206	0					
ANR	3918411	ExpressionStatement	* class_name = ZSTR_VAL ( name ) + 1	1232:1:38115:38147	3918206	7	True				
ANR	3918412	AssignmentExpression	* class_name = ZSTR_VAL ( name ) + 1		3918206	0		=			
ANR	3918413	UnaryOperationExpression	* class_name		3918206	0					
ANR	3918414	UnaryOperator	*		3918206	0					
ANR	3918415	Identifier	class_name		3918206	1					
ANR	3918416	AdditiveExpression	ZSTR_VAL ( name ) + 1		3918206	1		+			
ANR	3918417	CallExpression	ZSTR_VAL ( name )		3918206	0					
ANR	3918418	Callee	ZSTR_VAL		3918206	0					
ANR	3918419	Identifier	ZSTR_VAL		3918206	0					
ANR	3918420	ArgumentList	name		3918206	1					
ANR	3918421	Argument	name		3918206	0					
ANR	3918422	Identifier	name		3918206	0					
ANR	3918423	PrimaryExpression	1		3918206	1					
ANR	3918424	ExpressionStatement	"anonclass_src_len = zend_strnlen ( * class_name + class_name_len + 1 , ZSTR_LEN ( name ) - class_name_len - 2 )"	1233:1:38150:38253	3918206	8	True				
ANR	3918425	AssignmentExpression	"anonclass_src_len = zend_strnlen ( * class_name + class_name_len + 1 , ZSTR_LEN ( name ) - class_name_len - 2 )"		3918206	0		=			
ANR	3918426	Identifier	anonclass_src_len		3918206	0					
ANR	3918427	CallExpression	"zend_strnlen ( * class_name + class_name_len + 1 , ZSTR_LEN ( name ) - class_name_len - 2 )"		3918206	1					
ANR	3918428	Callee	zend_strnlen		3918206	0					
ANR	3918429	Identifier	zend_strnlen		3918206	0					
ANR	3918430	ArgumentList	* class_name + class_name_len + 1		3918206	1					
ANR	3918431	Argument	* class_name + class_name_len + 1		3918206	0					
ANR	3918432	AdditiveExpression	* class_name + class_name_len + 1		3918206	0		+			
ANR	3918433	UnaryOperationExpression	* class_name		3918206	0					
ANR	3918434	UnaryOperator	*		3918206	0					
ANR	3918435	Identifier	class_name		3918206	1					
ANR	3918436	AdditiveExpression	class_name_len + 1		3918206	1		+			
ANR	3918437	Identifier	class_name_len		3918206	0					
ANR	3918438	PrimaryExpression	1		3918206	1					
ANR	3918439	Argument	ZSTR_LEN ( name ) - class_name_len - 2		3918206	1					
ANR	3918440	AdditiveExpression	ZSTR_LEN ( name ) - class_name_len - 2		3918206	0		-			
ANR	3918441	CallExpression	ZSTR_LEN ( name )		3918206	0					
ANR	3918442	Callee	ZSTR_LEN		3918206	0					
ANR	3918443	Identifier	ZSTR_LEN		3918206	0					
ANR	3918444	ArgumentList	name		3918206	1					
ANR	3918445	Argument	name		3918206	0					
ANR	3918446	Identifier	name		3918206	0					
ANR	3918447	AdditiveExpression	class_name_len - 2		3918206	1		-			
ANR	3918448	Identifier	class_name_len		3918206	0					
ANR	3918449	PrimaryExpression	2		3918206	1					
ANR	3918450	IfStatement	if ( class_name_len + anonclass_src_len + 2 != ZSTR_LEN ( name ) )		3918206	9					
ANR	3918451	Condition	class_name_len + anonclass_src_len + 2 != ZSTR_LEN ( name )	1234:5:38260:38315	3918206	0	True				
ANR	3918452	EqualityExpression	class_name_len + anonclass_src_len + 2 != ZSTR_LEN ( name )		3918206	0		!=			
ANR	3918453	AdditiveExpression	class_name_len + anonclass_src_len + 2		3918206	0		+			
ANR	3918454	Identifier	class_name_len		3918206	0					
ANR	3918455	AdditiveExpression	anonclass_src_len + 2		3918206	1		+			
ANR	3918456	Identifier	anonclass_src_len		3918206	0					
ANR	3918457	PrimaryExpression	2		3918206	1					
ANR	3918458	CallExpression	ZSTR_LEN ( name )		3918206	1					
ANR	3918459	Callee	ZSTR_LEN		3918206	0					
ANR	3918460	Identifier	ZSTR_LEN		3918206	0					
ANR	3918461	ArgumentList	name		3918206	1					
ANR	3918462	Argument	name		3918206	0					
ANR	3918463	Identifier	name		3918206	0					
ANR	3918464	CompoundStatement		35:63:961:961	3918206	1					
ANR	3918465	ExpressionStatement	class_name_len += anonclass_src_len + 1	1235:2:38322:38361	3918206	0	True				
ANR	3918466	AssignmentExpression	class_name_len += anonclass_src_len + 1		3918206	0		+=			
ANR	3918467	Identifier	class_name_len		3918206	0					
ANR	3918468	AdditiveExpression	anonclass_src_len + 1		3918206	1		+			
ANR	3918469	Identifier	anonclass_src_len		3918206	0					
ANR	3918470	PrimaryExpression	1		3918206	1					
ANR	3918471	ExpressionStatement	* prop_name = ZSTR_VAL ( name ) + class_name_len + 2	1237:1:38367:38415	3918206	10	True				
ANR	3918472	AssignmentExpression	* prop_name = ZSTR_VAL ( name ) + class_name_len + 2		3918206	0		=			
ANR	3918473	UnaryOperationExpression	* prop_name		3918206	0					
ANR	3918474	UnaryOperator	*		3918206	0					
ANR	3918475	Identifier	prop_name		3918206	1					
ANR	3918476	AdditiveExpression	ZSTR_VAL ( name ) + class_name_len + 2		3918206	1		+			
ANR	3918477	CallExpression	ZSTR_VAL ( name )		3918206	0					
ANR	3918478	Callee	ZSTR_VAL		3918206	0					
ANR	3918479	Identifier	ZSTR_VAL		3918206	0					
ANR	3918480	ArgumentList	name		3918206	1					
ANR	3918481	Argument	name		3918206	0					
ANR	3918482	Identifier	name		3918206	0					
ANR	3918483	AdditiveExpression	class_name_len + 2		3918206	1		+			
ANR	3918484	Identifier	class_name_len		3918206	0					
ANR	3918485	PrimaryExpression	2		3918206	1					
ANR	3918486	IfStatement	if ( prop_len )		3918206	11					
ANR	3918487	Condition	prop_len	1238:5:38422:38429	3918206	0	True				
ANR	3918488	Identifier	prop_len		3918206	0					
ANR	3918489	CompoundStatement		39:15:1075:1075	3918206	1					
ANR	3918490	ExpressionStatement	* prop_len = ZSTR_LEN ( name ) - class_name_len - 2	1239:2:38436:38483	3918206	0	True				
ANR	3918491	AssignmentExpression	* prop_len = ZSTR_LEN ( name ) - class_name_len - 2		3918206	0		=			
ANR	3918492	UnaryOperationExpression	* prop_len		3918206	0					
ANR	3918493	UnaryOperator	*		3918206	0					
ANR	3918494	Identifier	prop_len		3918206	1					
ANR	3918495	AdditiveExpression	ZSTR_LEN ( name ) - class_name_len - 2		3918206	1		-			
ANR	3918496	CallExpression	ZSTR_LEN ( name )		3918206	0					
ANR	3918497	Callee	ZSTR_LEN		3918206	0					
ANR	3918498	Identifier	ZSTR_LEN		3918206	0					
ANR	3918499	ArgumentList	name		3918206	1					
ANR	3918500	Argument	name		3918206	0					
ANR	3918501	Identifier	name		3918206	0					
ANR	3918502	AdditiveExpression	class_name_len - 2		3918206	1		-			
ANR	3918503	Identifier	class_name_len		3918206	0					
ANR	3918504	PrimaryExpression	2		3918206	1					
ANR	3918505	ReturnStatement	return SUCCESS ;	1241:1:38489:38503	3918206	12	True				
ANR	3918506	Identifier	SUCCESS		3918206	0					
ANR	3918507	ReturnType	ZEND_API int		3918206	1					
ANR	3918508	Identifier	zend_unmangle_property_name_ex		3918206	2					
ANR	3918509	ParameterList	"const zend_string * name , const char * * class_name , const char * * prop_name , size_t * prop_len"		3918206	3					
ANR	3918510	Parameter	const zend_string * name	1199:44:37254:37276	3918206	0	True				
ANR	3918511	ParameterType	const zend_string *		3918206	0					
ANR	3918512	Identifier	name		3918206	1					
ANR	3918513	Parameter	const char * * class_name	1199:69:37279:37301	3918206	1	True				
ANR	3918514	ParameterType	const char * *		3918206	0					
ANR	3918515	Identifier	class_name		3918206	1					
ANR	3918516	Parameter	const char * * prop_name	1199:94:37304:37325	3918206	2	True				
ANR	3918517	ParameterType	const char * *		3918206	0					
ANR	3918518	Identifier	prop_name		3918206	1					
ANR	3918519	Parameter	size_t * prop_len	1199:118:37328:37343	3918206	3	True				
ANR	3918520	ParameterType	size_t *		3918206	0					
ANR	3918521	Identifier	prop_len		3918206	1					
ANR	3918522	CFGEntryNode	ENTRY		3918206		True				
ANR	3918523	CFGExitNode	EXIT		3918206		True				
ANR	3918524	Symbol	* class_name		3918206						
ANR	3918525	Symbol	NULL		3918206						
ANR	3918526	Symbol	SUCCESS		3918206						
ANR	3918527	Symbol	E_NOTICE		3918206						
ANR	3918528	Symbol	* prop_len		3918206						
ANR	3918529	Symbol	FAILURE		3918206						
ANR	3918530	Symbol	* class_name_len		3918206						
ANR	3918531	Symbol	ZSTR_VAL		3918206						
ANR	3918532	Symbol	zend_strnlen		3918206						
ANR	3918533	Symbol	prop_name		3918206						
ANR	3918534	Symbol	prop_len		3918206						
ANR	3918535	Symbol	name		3918206						
ANR	3918536	Symbol	anonclass_src_len		3918206						
ANR	3918537	Symbol	ZSTR_LEN		3918206						
ANR	3918538	Symbol	* prop_name		3918206						
ANR	3918539	Symbol	class_name_len		3918206						
ANR	3918540	Symbol	class_name		3918206						
ANR	3918541	Symbol	* ZSTR_VAL		3918206						
ANR	3918542	Function	zend_lookup_reserved_const	1245:0:38518:38779							
ANR	3918543	FunctionDef	"zend_lookup_reserved_const (const char * name , size_t len)"		3918542	0					
ANR	3918544	CompoundStatement		1246:0:38607:38779	3918542	0					
ANR	3918545	IdentifierDeclStatement	"zend_constant * c = zend_hash_find_ptr_lc ( EG ( zend_constants ) , name , len ) ;"	1247:1:38610:38681	3918542	0	True				
ANR	3918546	IdentifierDecl	"* c = zend_hash_find_ptr_lc ( EG ( zend_constants ) , name , len )"		3918542	0					
ANR	3918547	IdentifierDeclType	zend_constant *		3918542	0					
ANR	3918548	Identifier	c		3918542	1					
ANR	3918549	AssignmentExpression	"* c = zend_hash_find_ptr_lc ( EG ( zend_constants ) , name , len )"		3918542	2		=			
ANR	3918550	Identifier	c		3918542	0					
ANR	3918551	CallExpression	"zend_hash_find_ptr_lc ( EG ( zend_constants ) , name , len )"		3918542	1					
ANR	3918552	Callee	zend_hash_find_ptr_lc		3918542	0					
ANR	3918553	Identifier	zend_hash_find_ptr_lc		3918542	0					
ANR	3918554	ArgumentList	EG ( zend_constants )		3918542	1					
ANR	3918555	Argument	EG ( zend_constants )		3918542	0					
ANR	3918556	CallExpression	EG ( zend_constants )		3918542	0					
ANR	3918557	Callee	EG		3918542	0					
ANR	3918558	Identifier	EG		3918542	0					
ANR	3918559	ArgumentList	zend_constants		3918542	1					
ANR	3918560	Argument	zend_constants		3918542	0					
ANR	3918561	Identifier	zend_constants		3918542	0					
ANR	3918562	Argument	name		3918542	1					
ANR	3918563	Identifier	name		3918542	0					
ANR	3918564	Argument	len		3918542	2					
ANR	3918565	Identifier	len		3918542	0					
ANR	3918566	IfStatement	if ( c && ! ( c -> flags & CONST_CS ) && ( c -> flags & CONST_CT_SUBST ) )		3918542	1					
ANR	3918567	Condition	c && ! ( c -> flags & CONST_CS ) && ( c -> flags & CONST_CT_SUBST )	1248:5:38688:38745	3918542	0	True				
ANR	3918568	AndExpression	c && ! ( c -> flags & CONST_CS ) && ( c -> flags & CONST_CT_SUBST )		3918542	0		&&			
ANR	3918569	Identifier	c		3918542	0					
ANR	3918570	AndExpression	! ( c -> flags & CONST_CS ) && ( c -> flags & CONST_CT_SUBST )		3918542	1		&&			
ANR	3918571	UnaryOperationExpression	! ( c -> flags & CONST_CS )		3918542	0					
ANR	3918572	UnaryOperator	!		3918542	0					
ANR	3918573	BitAndExpression	c -> flags & CONST_CS		3918542	1		&			
ANR	3918574	PtrMemberAccess	c -> flags		3918542	0					
ANR	3918575	Identifier	c		3918542	0					
ANR	3918576	Identifier	flags		3918542	1					
ANR	3918577	Identifier	CONST_CS		3918542	1					
ANR	3918578	BitAndExpression	c -> flags & CONST_CT_SUBST		3918542	1		&			
ANR	3918579	PtrMemberAccess	c -> flags		3918542	0					
ANR	3918580	Identifier	c		3918542	0					
ANR	3918581	Identifier	flags		3918542	1					
ANR	3918582	Identifier	CONST_CT_SUBST		3918542	1					
ANR	3918583	CompoundStatement		3:65:140:140	3918542	1					
ANR	3918584	ReturnStatement	return c ;	1249:2:38752:38760	3918542	0	True				
ANR	3918585	Identifier	c		3918542	0					
ANR	3918586	ReturnStatement	return NULL ;	1251:1:38766:38777	3918542	2	True				
ANR	3918587	Identifier	NULL		3918542	0					
ANR	3918588	ReturnType	static zend_constant *		3918542	1					
ANR	3918589	Identifier	zend_lookup_reserved_const		3918542	2					
ANR	3918590	ParameterList	"const char * name , size_t len"		3918542	3					
ANR	3918591	Parameter	const char * name	1245:49:38567:38582	3918542	0	True				
ANR	3918592	ParameterType	const char *		3918542	0					
ANR	3918593	Identifier	name		3918542	1					
ANR	3918594	Parameter	size_t len	1245:67:38585:38594	3918542	1	True				
ANR	3918595	ParameterType	size_t		3918542	0					
ANR	3918596	Identifier	len		3918542	1					
ANR	3918597	CFGEntryNode	ENTRY		3918542		True				
ANR	3918598	CFGExitNode	EXIT		3918542		True				
ANR	3918599	Symbol	CONST_CT_SUBST		3918542						
ANR	3918600	Symbol	zend_hash_find_ptr_lc		3918542						
ANR	3918601	Symbol	EG		3918542						
ANR	3918602	Symbol	CONST_CS		3918542						
ANR	3918603	Symbol	c		3918542						
ANR	3918604	Symbol	c -> flags		3918542						
ANR	3918605	Symbol	NULL		3918542						
ANR	3918606	Symbol	len		3918542						
ANR	3918607	Symbol	zend_constants		3918542						
ANR	3918608	Symbol	name		3918542						
ANR	3918609	Symbol	* c		3918542						
ANR	3918610	Function	zend_try_ct_eval_const	1255:0:38792:39712							
ANR	3918611	FunctionDef	"zend_try_ct_eval_const (zval * zv , zend_string * name , zend_bool is_fully_qualified)"		3918610	0					
ANR	3918612	CompoundStatement		1256:0:38901:39712	3918610	0					
ANR	3918613	IdentifierDeclStatement	zend_constant * c ;	1257:1:38904:38920	3918610	0	True				
ANR	3918614	IdentifierDecl	* c		3918610	0					
ANR	3918615	IdentifierDeclType	zend_constant *		3918610	0					
ANR	3918616	Identifier	c		3918610	1					
ANR	3918617	ExpressionStatement	"c = zend_hash_find_ptr ( EG ( zend_constants ) , name )"	1260:1:38982:39030	3918610	1	True				
ANR	3918618	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , name )"		3918610	0		=			
ANR	3918619	Identifier	c		3918610	0					
ANR	3918620	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , name )"		3918610	1					
ANR	3918621	Callee	zend_hash_find_ptr		3918610	0					
ANR	3918622	Identifier	zend_hash_find_ptr		3918610	0					
ANR	3918623	ArgumentList	EG ( zend_constants )		3918610	1					
ANR	3918624	Argument	EG ( zend_constants )		3918610	0					
ANR	3918625	CallExpression	EG ( zend_constants )		3918610	0					
ANR	3918626	Callee	EG		3918610	0					
ANR	3918627	Identifier	EG		3918610	0					
ANR	3918628	ArgumentList	zend_constants		3918610	1					
ANR	3918629	Argument	zend_constants		3918610	0					
ANR	3918630	Identifier	zend_constants		3918610	0					
ANR	3918631	Argument	name		3918610	1					
ANR	3918632	Identifier	name		3918610	0					
ANR	3918633	IfStatement	if ( c && ( ( ( c -> flags & CONST_PERSISTENT ) && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION ) ) || ( Z_TYPE ( c -> value ) < IS_OBJECT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION ) ) ) )		3918610	2					
ANR	3918634	Condition	c && ( ( ( c -> flags & CONST_PERSISTENT ) && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION ) ) || ( Z_TYPE ( c -> value ) < IS_OBJECT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION ) ) )	1261:5:39037:39267	3918610	0	True				
ANR	3918635	AndExpression	c && ( ( ( c -> flags & CONST_PERSISTENT ) && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION ) ) || ( Z_TYPE ( c -> value ) < IS_OBJECT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION ) ) )		3918610	0		&&			
ANR	3918636	Identifier	c		3918610	0					
ANR	3918637	OrExpression	( ( c -> flags & CONST_PERSISTENT ) && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION ) ) || ( Z_TYPE ( c -> value ) < IS_OBJECT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION ) )		3918610	1		||			
ANR	3918638	AndExpression	( c -> flags & CONST_PERSISTENT ) && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION )		3918610	0		&&			
ANR	3918639	BitAndExpression	c -> flags & CONST_PERSISTENT		3918610	0		&			
ANR	3918640	PtrMemberAccess	c -> flags		3918610	0					
ANR	3918641	Identifier	c		3918610	0					
ANR	3918642	Identifier	flags		3918610	1					
ANR	3918643	Identifier	CONST_PERSISTENT		3918610	1					
ANR	3918644	UnaryOperationExpression	! ( CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION )		3918610	1					
ANR	3918645	UnaryOperator	!		3918610	0					
ANR	3918646	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3918610	1		&			
ANR	3918647	CallExpression	CG ( compiler_options )		3918610	0					
ANR	3918648	Callee	CG		3918610	0					
ANR	3918649	Identifier	CG		3918610	0					
ANR	3918650	ArgumentList	compiler_options		3918610	1					
ANR	3918651	Argument	compiler_options		3918610	0					
ANR	3918652	Identifier	compiler_options		3918610	0					
ANR	3918653	Identifier	ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3918610	1					
ANR	3918654	AndExpression	Z_TYPE ( c -> value ) < IS_OBJECT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION )		3918610	1		&&			
ANR	3918655	RelationalExpression	Z_TYPE ( c -> value ) < IS_OBJECT		3918610	0		<			
ANR	3918656	CallExpression	Z_TYPE ( c -> value )		3918610	0					
ANR	3918657	Callee	Z_TYPE		3918610	0					
ANR	3918658	Identifier	Z_TYPE		3918610	0					
ANR	3918659	ArgumentList	c -> value		3918610	1					
ANR	3918660	Argument	c -> value		3918610	0					
ANR	3918661	PtrMemberAccess	c -> value		3918610	0					
ANR	3918662	Identifier	c		3918610	0					
ANR	3918663	Identifier	value		3918610	1					
ANR	3918664	Identifier	IS_OBJECT		3918610	1					
ANR	3918665	UnaryOperationExpression	! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION )		3918610	1					
ANR	3918666	UnaryOperator	!		3918610	0					
ANR	3918667	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3918610	1		&			
ANR	3918668	CallExpression	CG ( compiler_options )		3918610	0					
ANR	3918669	Callee	CG		3918610	0					
ANR	3918670	Identifier	CG		3918610	0					
ANR	3918671	ArgumentList	compiler_options		3918610	1					
ANR	3918672	Argument	compiler_options		3918610	0					
ANR	3918673	Identifier	compiler_options		3918610	0					
ANR	3918674	Identifier	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3918610	1					
ANR	3918675	CompoundStatement		9:4:368:368	3918610	1					
ANR	3918676	ExpressionStatement	"ZVAL_DUP ( zv , & c -> value )"	1265:2:39274:39297	3918610	0	True				
ANR	3918677	CallExpression	"ZVAL_DUP ( zv , & c -> value )"		3918610	0					
ANR	3918678	Callee	ZVAL_DUP		3918610	0					
ANR	3918679	Identifier	ZVAL_DUP		3918610	0					
ANR	3918680	ArgumentList	zv		3918610	1					
ANR	3918681	Argument	zv		3918610	0					
ANR	3918682	Identifier	zv		3918610	0					
ANR	3918683	Argument	& c -> value		3918610	1					
ANR	3918684	UnaryOperationExpression	& c -> value		3918610	0					
ANR	3918685	UnaryOperator	&		3918610	0					
ANR	3918686	PtrMemberAccess	c -> value		3918610	1					
ANR	3918687	Identifier	c		3918610	0					
ANR	3918688	Identifier	value		3918610	1					
ANR	3918689	ReturnStatement	return 1 ;	1266:2:39301:39309	3918610	1	True				
ANR	3918690	PrimaryExpression	1		3918610	0					
ANR	3918691	CompoundStatement		17:2:546:580	3918610	3					
ANR	3918692	IdentifierDeclStatement	const char * lookup_name = ZSTR_VAL ( name ) ;	1271:2:39404:39444	3918610	0	True				
ANR	3918693	IdentifierDecl	* lookup_name = ZSTR_VAL ( name )		3918610	0					
ANR	3918694	IdentifierDeclType	const char *		3918610	0					
ANR	3918695	Identifier	lookup_name		3918610	1					
ANR	3918696	AssignmentExpression	* lookup_name = ZSTR_VAL ( name )		3918610	2		=			
ANR	3918697	Identifier	lookup_name		3918610	0					
ANR	3918698	CallExpression	ZSTR_VAL ( name )		3918610	1					
ANR	3918699	Callee	ZSTR_VAL		3918610	0					
ANR	3918700	Identifier	ZSTR_VAL		3918610	0					
ANR	3918701	ArgumentList	name		3918610	1					
ANR	3918702	Argument	name		3918610	0					
ANR	3918703	Identifier	name		3918610	0					
ANR	3918704	IdentifierDeclStatement	size_t lookup_len = ZSTR_LEN ( name ) ;	1272:2:39448:39482	3918610	1	True				
ANR	3918705	IdentifierDecl	lookup_len = ZSTR_LEN ( name )		3918610	0					
ANR	3918706	IdentifierDeclType	size_t		3918610	0					
ANR	3918707	Identifier	lookup_len		3918610	1					
ANR	3918708	AssignmentExpression	lookup_len = ZSTR_LEN ( name )		3918610	2		=			
ANR	3918709	Identifier	lookup_len		3918610	0					
ANR	3918710	CallExpression	ZSTR_LEN ( name )		3918610	1					
ANR	3918711	Callee	ZSTR_LEN		3918610	0					
ANR	3918712	Identifier	ZSTR_LEN		3918610	0					
ANR	3918713	ArgumentList	name		3918610	1					
ANR	3918714	Argument	name		3918610	0					
ANR	3918715	Identifier	name		3918610	0					
ANR	3918716	IfStatement	if ( ! is_fully_qualified )		3918610	2					
ANR	3918717	Condition	! is_fully_qualified	1274:6:39491:39509	3918610	0	True				
ANR	3918718	UnaryOperationExpression	! is_fully_qualified		3918610	0					
ANR	3918719	UnaryOperator	!		3918610	0					
ANR	3918720	Identifier	is_fully_qualified		3918610	1					
ANR	3918721	CompoundStatement		19:27:610:610	3918610	1					
ANR	3918722	ExpressionStatement	"zend_get_unqualified_name ( name , & lookup_name , & lookup_len )"	1275:3:39517:39575	3918610	0	True				
ANR	3918723	CallExpression	"zend_get_unqualified_name ( name , & lookup_name , & lookup_len )"		3918610	0					
ANR	3918724	Callee	zend_get_unqualified_name		3918610	0					
ANR	3918725	Identifier	zend_get_unqualified_name		3918610	0					
ANR	3918726	ArgumentList	name		3918610	1					
ANR	3918727	Argument	name		3918610	0					
ANR	3918728	Identifier	name		3918610	0					
ANR	3918729	Argument	& lookup_name		3918610	1					
ANR	3918730	UnaryOperationExpression	& lookup_name		3918610	0					
ANR	3918731	UnaryOperator	&		3918610	0					
ANR	3918732	Identifier	lookup_name		3918610	1					
ANR	3918733	Argument	& lookup_len		3918610	2					
ANR	3918734	UnaryOperationExpression	& lookup_len		3918610	0					
ANR	3918735	UnaryOperator	&		3918610	0					
ANR	3918736	Identifier	lookup_len		3918610	1					
ANR	3918737	ExpressionStatement	"c = zend_lookup_reserved_const ( lookup_name , lookup_len )"	1278:2:39584:39639	3918610	3	True				
ANR	3918738	AssignmentExpression	"c = zend_lookup_reserved_const ( lookup_name , lookup_len )"		3918610	0		=			
ANR	3918739	Identifier	c		3918610	0					
ANR	3918740	CallExpression	"zend_lookup_reserved_const ( lookup_name , lookup_len )"		3918610	1					
ANR	3918741	Callee	zend_lookup_reserved_const		3918610	0					
ANR	3918742	Identifier	zend_lookup_reserved_const		3918610	0					
ANR	3918743	ArgumentList	lookup_name		3918610	1					
ANR	3918744	Argument	lookup_name		3918610	0					
ANR	3918745	Identifier	lookup_name		3918610	0					
ANR	3918746	Argument	lookup_len		3918610	1					
ANR	3918747	Identifier	lookup_len		3918610	0					
ANR	3918748	IfStatement	if ( c )		3918610	4					
ANR	3918749	Condition	c	1279:6:39647:39647	3918610	0	True				
ANR	3918750	Identifier	c		3918610	0					
ANR	3918751	CompoundStatement		24:9:748:748	3918610	1					
ANR	3918752	ExpressionStatement	"ZVAL_DUP ( zv , & c -> value )"	1280:3:39655:39678	3918610	0	True				
ANR	3918753	CallExpression	"ZVAL_DUP ( zv , & c -> value )"		3918610	0					
ANR	3918754	Callee	ZVAL_DUP		3918610	0					
ANR	3918755	Identifier	ZVAL_DUP		3918610	0					
ANR	3918756	ArgumentList	zv		3918610	1					
ANR	3918757	Argument	zv		3918610	0					
ANR	3918758	Identifier	zv		3918610	0					
ANR	3918759	Argument	& c -> value		3918610	1					
ANR	3918760	UnaryOperationExpression	& c -> value		3918610	0					
ANR	3918761	UnaryOperator	&		3918610	0					
ANR	3918762	PtrMemberAccess	c -> value		3918610	1					
ANR	3918763	Identifier	c		3918610	0					
ANR	3918764	Identifier	value		3918610	1					
ANR	3918765	ReturnStatement	return 1 ;	1281:3:39683:39691	3918610	1	True				
ANR	3918766	PrimaryExpression	1		3918610	0					
ANR	3918767	ReturnStatement	return 0 ;	1285:1:39702:39710	3918610	4	True				
ANR	3918768	PrimaryExpression	0		3918610	0					
ANR	3918769	ReturnType	static zend_bool		3918610	1					
ANR	3918770	Identifier	zend_try_ct_eval_const		3918610	2					
ANR	3918771	ParameterList	"zval * zv , zend_string * name , zend_bool is_fully_qualified"		3918610	3					
ANR	3918772	Parameter	zval * zv	1255:40:38832:38839	3918610	0	True				
ANR	3918773	ParameterType	zval *		3918610	0					
ANR	3918774	Identifier	zv		3918610	1					
ANR	3918775	Parameter	zend_string * name	1255:50:38842:38858	3918610	1	True				
ANR	3918776	ParameterType	zend_string *		3918610	0					
ANR	3918777	Identifier	name		3918610	1					
ANR	3918778	Parameter	zend_bool is_fully_qualified	1255:69:38861:38888	3918610	2	True				
ANR	3918779	ParameterType	zend_bool		3918610	0					
ANR	3918780	Identifier	is_fully_qualified		3918610	1					
ANR	3918781	CFGEntryNode	ENTRY		3918610		True				
ANR	3918782	CFGExitNode	EXIT		3918610		True				
ANR	3918783	Symbol	c -> flags		3918610						
ANR	3918784	Symbol	ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3918610						
ANR	3918785	Symbol	Z_TYPE		3918610						
ANR	3918786	Symbol	c -> value		3918610						
ANR	3918787	Symbol	compiler_options		3918610						
ANR	3918788	Symbol	& c -> value		3918610						
ANR	3918789	Symbol	lookup_name		3918610						
ANR	3918790	Symbol	lookup_len		3918610						
ANR	3918791	Symbol	zend_constants		3918610						
ANR	3918792	Symbol	CONST_PERSISTENT		3918610						
ANR	3918793	Symbol	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3918610						
ANR	3918794	Symbol	zend_hash_find_ptr		3918610						
ANR	3918795	Symbol	EG		3918610						
ANR	3918796	Symbol	c		3918610						
ANR	3918797	Symbol	CG		3918610						
ANR	3918798	Symbol	zend_lookup_reserved_const		3918610						
ANR	3918799	Symbol	is_fully_qualified		3918610						
ANR	3918800	Symbol	* c		3918610						
ANR	3918801	Symbol	ZSTR_VAL		3918610						
ANR	3918802	Symbol	& lookup_len		3918610						
ANR	3918803	Symbol	name		3918610						
ANR	3918804	Symbol	ZSTR_LEN		3918610						
ANR	3918805	Symbol	zv		3918610						
ANR	3918806	Symbol	IS_OBJECT		3918610						
ANR	3918807	Symbol	& lookup_name		3918610						
ANR	3918808	Function	zend_is_scope_known	1289:0:39725:40286							
ANR	3918809	FunctionDef	zend_is_scope_known ()		3918808	0					
ANR	3918810	CompoundStatement		1290:0:39781:40286	3918808	0					
ANR	3918811	IfStatement	if ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_CLOSURE )		3918808	0					
ANR	3918812	Condition	CG ( active_op_array ) -> fn_flags & ZEND_ACC_CLOSURE	1291:5:39788:39835	3918808	0	True				
ANR	3918813	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_CLOSURE		3918808	0		&			
ANR	3918814	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3918808	0					
ANR	3918815	CallExpression	CG ( active_op_array )		3918808	0					
ANR	3918816	Callee	CG		3918808	0					
ANR	3918817	Identifier	CG		3918808	0					
ANR	3918818	ArgumentList	active_op_array		3918808	1					
ANR	3918819	Argument	active_op_array		3918808	0					
ANR	3918820	Identifier	active_op_array		3918808	0					
ANR	3918821	Identifier	fn_flags		3918808	1					
ANR	3918822	Identifier	ZEND_ACC_CLOSURE		3918808	1					
ANR	3918823	CompoundStatement		2:55:56:56	3918808	1					
ANR	3918824	ReturnStatement	return 0 ;	1293:2:39895:39903	3918808	0	True				
ANR	3918825	PrimaryExpression	0		3918808	0					
ANR	3918826	IfStatement	if ( ! CG ( active_class_entry ) )		3918808	1					
ANR	3918827	Condition	! CG ( active_class_entry )	1296:5:39914:39936	3918808	0	True				
ANR	3918828	UnaryOperationExpression	! CG ( active_class_entry )		3918808	0					
ANR	3918829	UnaryOperator	!		3918808	0					
ANR	3918830	CallExpression	CG ( active_class_entry )		3918808	1					
ANR	3918831	Callee	CG		3918808	0					
ANR	3918832	Identifier	CG		3918808	0					
ANR	3918833	ArgumentList	active_class_entry		3918808	1					
ANR	3918834	Argument	active_class_entry		3918808	0					
ANR	3918835	Identifier	active_class_entry		3918808	0					
ANR	3918836	CompoundStatement		7:30:157:157	3918808	1					
ANR	3918837	ReturnStatement	return CG ( active_op_array ) -> function_name != NULL ;	1299:2:40090:40139	3918808	0	True				
ANR	3918838	EqualityExpression	CG ( active_op_array ) -> function_name != NULL		3918808	0		!=			
ANR	3918839	PtrMemberAccess	CG ( active_op_array ) -> function_name		3918808	0					
ANR	3918840	CallExpression	CG ( active_op_array )		3918808	0					
ANR	3918841	Callee	CG		3918808	0					
ANR	3918842	Identifier	CG		3918808	0					
ANR	3918843	ArgumentList	active_op_array		3918808	1					
ANR	3918844	Argument	active_op_array		3918808	0					
ANR	3918845	Identifier	active_op_array		3918808	0					
ANR	3918846	Identifier	function_name		3918808	1					
ANR	3918847	Identifier	NULL		3918808	1					
ANR	3918848	ReturnStatement	return ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) == 0 ;	1303:1:40221:40284	3918808	2	True				
ANR	3918849	EqualityExpression	( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) == 0		3918808	0		==			
ANR	3918850	BitAndExpression	CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT		3918808	0		&			
ANR	3918851	PtrMemberAccess	CG ( active_class_entry ) -> ce_flags		3918808	0					
ANR	3918852	CallExpression	CG ( active_class_entry )		3918808	0					
ANR	3918853	Callee	CG		3918808	0					
ANR	3918854	Identifier	CG		3918808	0					
ANR	3918855	ArgumentList	active_class_entry		3918808	1					
ANR	3918856	Argument	active_class_entry		3918808	0					
ANR	3918857	Identifier	active_class_entry		3918808	0					
ANR	3918858	Identifier	ce_flags		3918808	1					
ANR	3918859	Identifier	ZEND_ACC_TRAIT		3918808	1					
ANR	3918860	PrimaryExpression	0		3918808	1					
ANR	3918861	ReturnType	static inline zend_bool		3918808	1					
ANR	3918862	Identifier	zend_is_scope_known		3918808	2					
ANR	3918863	ParameterList			3918808	3					
ANR	3918864	CFGEntryNode	ENTRY		3918808		True				
ANR	3918865	CFGExitNode	EXIT		3918808		True				
ANR	3918866	Symbol	CG ( active_op_array ) -> function_name		3918808						
ANR	3918867	Symbol	ZEND_ACC_CLOSURE		3918808						
ANR	3918868	Symbol	NULL		3918808						
ANR	3918869	Symbol	CG		3918808						
ANR	3918870	Symbol	active_op_array		3918808						
ANR	3918871	Symbol	active_class_entry		3918808						
ANR	3918872	Symbol	* CG		3918808						
ANR	3918873	Symbol	CG ( active_class_entry ) -> ce_flags		3918808						
ANR	3918874	Symbol	CG ( active_op_array ) -> fn_flags		3918808						
ANR	3918875	Symbol	ZEND_ACC_TRAIT		3918808						
ANR	3918876	Function	class_name_refers_to_active_ce	1307:0:40299:40660							
ANR	3918877	FunctionDef	"class_name_refers_to_active_ce (zend_string * class_name , uint32_t fetch_type)"		3918876	0					
ANR	3918878	CompoundStatement		1308:0:40410:40660	3918876	0					
ANR	3918879	IfStatement	if ( ! CG ( active_class_entry ) )		3918876	0					
ANR	3918880	Condition	! CG ( active_class_entry )	1309:5:40417:40439	3918876	0	True				
ANR	3918881	UnaryOperationExpression	! CG ( active_class_entry )		3918876	0					
ANR	3918882	UnaryOperator	!		3918876	0					
ANR	3918883	CallExpression	CG ( active_class_entry )		3918876	1					
ANR	3918884	Callee	CG		3918876	0					
ANR	3918885	Identifier	CG		3918876	0					
ANR	3918886	ArgumentList	active_class_entry		3918876	1					
ANR	3918887	Argument	active_class_entry		3918876	0					
ANR	3918888	Identifier	active_class_entry		3918876	0					
ANR	3918889	CompoundStatement		2:30:31:31	3918876	1					
ANR	3918890	ReturnStatement	return 0 ;	1310:2:40446:40454	3918876	0	True				
ANR	3918891	PrimaryExpression	0		3918876	0					
ANR	3918892	IfStatement	if ( fetch_type == ZEND_FETCH_CLASS_SELF && zend_is_scope_known ( ) )		3918876	1					
ANR	3918893	Condition	fetch_type == ZEND_FETCH_CLASS_SELF && zend_is_scope_known ( )	1312:5:40464:40523	3918876	0	True				
ANR	3918894	AndExpression	fetch_type == ZEND_FETCH_CLASS_SELF && zend_is_scope_known ( )		3918876	0		&&			
ANR	3918895	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_SELF		3918876	0		==			
ANR	3918896	Identifier	fetch_type		3918876	0					
ANR	3918897	Identifier	ZEND_FETCH_CLASS_SELF		3918876	1					
ANR	3918898	CallExpression	zend_is_scope_known ( )		3918876	1					
ANR	3918899	Callee	zend_is_scope_known		3918876	0					
ANR	3918900	Identifier	zend_is_scope_known		3918876	0					
ANR	3918901	ArgumentList			3918876	1					
ANR	3918902	CompoundStatement		5:67:115:115	3918876	1					
ANR	3918903	ReturnStatement	return 1 ;	1313:2:40530:40538	3918876	0	True				
ANR	3918904	PrimaryExpression	1		3918876	0					
ANR	3918905	ReturnStatement	"return fetch_type == ZEND_FETCH_CLASS_DEFAULT && zend_string_equals_ci ( class_name , CG ( active_class_entry ) -> name ) ;"	1315:1:40544:40658	3918876	2	True				
ANR	3918906	AndExpression	"fetch_type == ZEND_FETCH_CLASS_DEFAULT && zend_string_equals_ci ( class_name , CG ( active_class_entry ) -> name )"		3918876	0		&&			
ANR	3918907	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_DEFAULT		3918876	0		==			
ANR	3918908	Identifier	fetch_type		3918876	0					
ANR	3918909	Identifier	ZEND_FETCH_CLASS_DEFAULT		3918876	1					
ANR	3918910	CallExpression	"zend_string_equals_ci ( class_name , CG ( active_class_entry ) -> name )"		3918876	1					
ANR	3918911	Callee	zend_string_equals_ci		3918876	0					
ANR	3918912	Identifier	zend_string_equals_ci		3918876	0					
ANR	3918913	ArgumentList	class_name		3918876	1					
ANR	3918914	Argument	class_name		3918876	0					
ANR	3918915	Identifier	class_name		3918876	0					
ANR	3918916	Argument	CG ( active_class_entry ) -> name		3918876	1					
ANR	3918917	PtrMemberAccess	CG ( active_class_entry ) -> name		3918876	0					
ANR	3918918	CallExpression	CG ( active_class_entry )		3918876	0					
ANR	3918919	Callee	CG		3918876	0					
ANR	3918920	Identifier	CG		3918876	0					
ANR	3918921	ArgumentList	active_class_entry		3918876	1					
ANR	3918922	Argument	active_class_entry		3918876	0					
ANR	3918923	Identifier	active_class_entry		3918876	0					
ANR	3918924	Identifier	name		3918876	1					
ANR	3918925	ReturnType	static inline zend_bool		3918876	1					
ANR	3918926	Identifier	class_name_refers_to_active_ce		3918876	2					
ANR	3918927	ParameterList	"zend_string * class_name , uint32_t fetch_type"		3918876	3					
ANR	3918928	Parameter	zend_string * class_name	1307:55:40354:40376	3918876	0	True				
ANR	3918929	ParameterType	zend_string *		3918876	0					
ANR	3918930	Identifier	class_name		3918876	1					
ANR	3918931	Parameter	uint32_t fetch_type	1307:80:40379:40397	3918876	1	True				
ANR	3918932	ParameterType	uint32_t		3918876	0					
ANR	3918933	Identifier	fetch_type		3918876	1					
ANR	3918934	CFGEntryNode	ENTRY		3918876		True				
ANR	3918935	CFGExitNode	EXIT		3918876		True				
ANR	3918936	Symbol	zend_is_scope_known		3918876						
ANR	3918937	Symbol	ZEND_FETCH_CLASS_DEFAULT		3918876						
ANR	3918938	Symbol	fetch_type		3918876						
ANR	3918939	Symbol	CG		3918876						
ANR	3918940	Symbol	ZEND_FETCH_CLASS_SELF		3918876						
ANR	3918941	Symbol	zend_string_equals_ci		3918876						
ANR	3918942	Symbol	active_class_entry		3918876						
ANR	3918943	Symbol	* CG		3918876						
ANR	3918944	Symbol	CG ( active_class_entry ) -> name		3918876						
ANR	3918945	Symbol	class_name		3918876						
ANR	3918946	Function	zend_get_class_fetch_type	1320:0:40673:41061							
ANR	3918947	FunctionDef	zend_get_class_fetch_type (zend_string * name)		3918946	0					
ANR	3918948	CompoundStatement		1321:0:40737:41061	3918946	0					
ANR	3918949	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""self"" ) )"		3918946	0					
ANR	3918950	Condition	"zend_string_equals_literal_ci ( name , ""self"" )"	1322:5:40744:40786	3918946	0	True				
ANR	3918951	CallExpression	"zend_string_equals_literal_ci ( name , ""self"" )"		3918946	0					
ANR	3918952	Callee	zend_string_equals_literal_ci		3918946	0					
ANR	3918953	Identifier	zend_string_equals_literal_ci		3918946	0					
ANR	3918954	ArgumentList	name		3918946	1					
ANR	3918955	Argument	name		3918946	0					
ANR	3918956	Identifier	name		3918946	0					
ANR	3918957	Argument	"""self"""		3918946	1					
ANR	3918958	PrimaryExpression	"""self"""		3918946	0					
ANR	3918959	CompoundStatement		2:50:51:51	3918946	1					
ANR	3918960	ReturnStatement	return ZEND_FETCH_CLASS_SELF ;	1323:2:40793:40821	3918946	0	True				
ANR	3918961	Identifier	ZEND_FETCH_CLASS_SELF		3918946	0					
ANR	3918962	ElseStatement	else		3918946	0					
ANR	3918963	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""parent"" ) )"		3918946	0					
ANR	3918964	Condition	"zend_string_equals_literal_ci ( name , ""parent"" )"	1324:12:40835:40879	3918946	0	True				
ANR	3918965	CallExpression	"zend_string_equals_literal_ci ( name , ""parent"" )"		3918946	0					
ANR	3918966	Callee	zend_string_equals_literal_ci		3918946	0					
ANR	3918967	Identifier	zend_string_equals_literal_ci		3918946	0					
ANR	3918968	ArgumentList	name		3918946	1					
ANR	3918969	Argument	name		3918946	0					
ANR	3918970	Identifier	name		3918946	0					
ANR	3918971	Argument	"""parent"""		3918946	1					
ANR	3918972	PrimaryExpression	"""parent"""		3918946	0					
ANR	3918973	CompoundStatement		4:59:144:144	3918946	1					
ANR	3918974	ReturnStatement	return ZEND_FETCH_CLASS_PARENT ;	1325:2:40886:40916	3918946	0	True				
ANR	3918975	Identifier	ZEND_FETCH_CLASS_PARENT		3918946	0					
ANR	3918976	ElseStatement	else		3918946	0					
ANR	3918977	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""static"" ) )"		3918946	0					
ANR	3918978	Condition	"zend_string_equals_literal_ci ( name , ""static"" )"	1326:12:40930:40974	3918946	0	True				
ANR	3918979	CallExpression	"zend_string_equals_literal_ci ( name , ""static"" )"		3918946	0					
ANR	3918980	Callee	zend_string_equals_literal_ci		3918946	0					
ANR	3918981	Identifier	zend_string_equals_literal_ci		3918946	0					
ANR	3918982	ArgumentList	name		3918946	1					
ANR	3918983	Argument	name		3918946	0					
ANR	3918984	Identifier	name		3918946	0					
ANR	3918985	Argument	"""static"""		3918946	1					
ANR	3918986	PrimaryExpression	"""static"""		3918946	0					
ANR	3918987	CompoundStatement		6:59:239:239	3918946	1					
ANR	3918988	ReturnStatement	return ZEND_FETCH_CLASS_STATIC ;	1327:2:40981:41011	3918946	0	True				
ANR	3918989	Identifier	ZEND_FETCH_CLASS_STATIC		3918946	0					
ANR	3918990	ElseStatement	else		3918946	0					
ANR	3918991	CompoundStatement		8:8:283:283	3918946	0					
ANR	3918992	ReturnStatement	return ZEND_FETCH_CLASS_DEFAULT ;	1329:2:41025:41056	3918946	0	True				
ANR	3918993	Identifier	ZEND_FETCH_CLASS_DEFAULT		3918946	0					
ANR	3918994	ReturnType	uint32_t		3918946	1					
ANR	3918995	Identifier	zend_get_class_fetch_type		3918946	2					
ANR	3918996	ParameterList	zend_string * name		3918946	3					
ANR	3918997	Parameter	zend_string * name	1320:35:40708:40724	3918946	0	True				
ANR	3918998	ParameterType	zend_string *		3918946	0					
ANR	3918999	Identifier	name		3918946	1					
ANR	3919000	CFGEntryNode	ENTRY		3918946		True				
ANR	3919001	CFGExitNode	EXIT		3918946		True				
ANR	3919002	Symbol	ZEND_FETCH_CLASS_DEFAULT		3918946						
ANR	3919003	Symbol	ZEND_FETCH_CLASS_SELF		3918946						
ANR	3919004	Symbol	ZEND_FETCH_CLASS_STATIC		3918946						
ANR	3919005	Symbol	name		3918946						
ANR	3919006	Symbol	ZEND_FETCH_CLASS_PARENT		3918946						
ANR	3919007	Symbol	zend_string_equals_literal_ci		3918946						
ANR	3919008	Function	zend_get_class_fetch_type_ast	1334:0:41074:41346							
ANR	3919009	FunctionDef	zend_get_class_fetch_type_ast (zend_ast * name_ast)		3919008	0					
ANR	3919010	CompoundStatement		1335:0:41150:41346	3919008	0					
ANR	3919011	IfStatement	if ( name_ast -> attr == ZEND_NAME_FQ )		3919008	0					
ANR	3919012	Condition	name_ast -> attr == ZEND_NAME_FQ	1337:5:41210:41239	3919008	0	True				
ANR	3919013	EqualityExpression	name_ast -> attr == ZEND_NAME_FQ		3919008	0		==			
ANR	3919014	PtrMemberAccess	name_ast -> attr		3919008	0					
ANR	3919015	Identifier	name_ast		3919008	0					
ANR	3919016	Identifier	attr		3919008	1					
ANR	3919017	Identifier	ZEND_NAME_FQ		3919008	1					
ANR	3919018	CompoundStatement		3:37:91:91	3919008	1					
ANR	3919019	ReturnStatement	return ZEND_FETCH_CLASS_DEFAULT ;	1338:2:41246:41277	3919008	0	True				
ANR	3919020	Identifier	ZEND_FETCH_CLASS_DEFAULT		3919008	0					
ANR	3919021	ReturnStatement	return zend_get_class_fetch_type ( zend_ast_get_str ( name_ast ) ) ;	1341:1:41284:41344	3919008	1	True				
ANR	3919022	CallExpression	zend_get_class_fetch_type ( zend_ast_get_str ( name_ast ) )		3919008	0					
ANR	3919023	Callee	zend_get_class_fetch_type		3919008	0					
ANR	3919024	Identifier	zend_get_class_fetch_type		3919008	0					
ANR	3919025	ArgumentList	zend_ast_get_str ( name_ast )		3919008	1					
ANR	3919026	Argument	zend_ast_get_str ( name_ast )		3919008	0					
ANR	3919027	CallExpression	zend_ast_get_str ( name_ast )		3919008	0					
ANR	3919028	Callee	zend_ast_get_str		3919008	0					
ANR	3919029	Identifier	zend_ast_get_str		3919008	0					
ANR	3919030	ArgumentList	name_ast		3919008	1					
ANR	3919031	Argument	name_ast		3919008	0					
ANR	3919032	Identifier	name_ast		3919008	0					
ANR	3919033	ReturnType	static uint32_t		3919008	1					
ANR	3919034	Identifier	zend_get_class_fetch_type_ast		3919008	2					
ANR	3919035	ParameterList	zend_ast * name_ast		3919008	3					
ANR	3919036	Parameter	zend_ast * name_ast	1334:46:41120:41137	3919008	0	True				
ANR	3919037	ParameterType	zend_ast *		3919008	0					
ANR	3919038	Identifier	name_ast		3919008	1					
ANR	3919039	CFGEntryNode	ENTRY		3919008		True				
ANR	3919040	CFGExitNode	EXIT		3919008		True				
ANR	3919041	Symbol	* name_ast		3919008						
ANR	3919042	Symbol	ZEND_FETCH_CLASS_DEFAULT		3919008						
ANR	3919043	Symbol	zend_ast_get_str		3919008						
ANR	3919044	Symbol	ZEND_NAME_FQ		3919008						
ANR	3919045	Symbol	name_ast		3919008						
ANR	3919046	Symbol	name_ast -> attr		3919008						
ANR	3919047	Symbol	zend_get_class_fetch_type		3919008						
ANR	3919048	Function	zend_ensure_valid_class_fetch_type	1345:0:41359:41746							
ANR	3919049	FunctionDef	zend_ensure_valid_class_fetch_type (uint32_t fetch_type)		3919048	0					
ANR	3919050	CompoundStatement		1346:0:41437:41746	3919048	0					
ANR	3919051	IfStatement	if ( fetch_type != ZEND_FETCH_CLASS_DEFAULT && ! CG ( active_class_entry ) && zend_is_scope_known ( ) )		3919048	0					
ANR	3919052	Condition	fetch_type != ZEND_FETCH_CLASS_DEFAULT && ! CG ( active_class_entry ) && zend_is_scope_known ( )	1347:5:41444:41533	3919048	0	True				
ANR	3919053	AndExpression	fetch_type != ZEND_FETCH_CLASS_DEFAULT && ! CG ( active_class_entry ) && zend_is_scope_known ( )		3919048	0		&&			
ANR	3919054	EqualityExpression	fetch_type != ZEND_FETCH_CLASS_DEFAULT		3919048	0		!=			
ANR	3919055	Identifier	fetch_type		3919048	0					
ANR	3919056	Identifier	ZEND_FETCH_CLASS_DEFAULT		3919048	1					
ANR	3919057	AndExpression	! CG ( active_class_entry ) && zend_is_scope_known ( )		3919048	1		&&			
ANR	3919058	UnaryOperationExpression	! CG ( active_class_entry )		3919048	0					
ANR	3919059	UnaryOperator	!		3919048	0					
ANR	3919060	CallExpression	CG ( active_class_entry )		3919048	1					
ANR	3919061	Callee	CG		3919048	0					
ANR	3919062	Identifier	CG		3919048	0					
ANR	3919063	ArgumentList	active_class_entry		3919048	1					
ANR	3919064	Argument	active_class_entry		3919048	0					
ANR	3919065	Identifier	active_class_entry		3919048	0					
ANR	3919066	CallExpression	zend_is_scope_known ( )		3919048	1					
ANR	3919067	Callee	zend_is_scope_known		3919048	0					
ANR	3919068	Identifier	zend_is_scope_known		3919048	0					
ANR	3919069	ArgumentList			3919048	1					
ANR	3919070	CompoundStatement		2:97:98:98	3919048	1					
ANR	3919071	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use \\""%s\\"" when no class scope is active"" , fetch_type == ZEND_FETCH_CLASS_SELF ? ""self"" : fetch_type == ZEND_FETCH_CLASS_PARENT ? ""parent"" : ""static"" )"	1348:2:41540:41741	3919048	0	True				
ANR	3919072	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use \\""%s\\"" when no class scope is active"" , fetch_type == ZEND_FETCH_CLASS_SELF ? ""self"" : fetch_type == ZEND_FETCH_CLASS_PARENT ? ""parent"" : ""static"" )"		3919048	0					
ANR	3919073	Callee	zend_error_noreturn		3919048	0					
ANR	3919074	Identifier	zend_error_noreturn		3919048	0					
ANR	3919075	ArgumentList	E_COMPILE_ERROR		3919048	1					
ANR	3919076	Argument	E_COMPILE_ERROR		3919048	0					
ANR	3919077	Identifier	E_COMPILE_ERROR		3919048	0					
ANR	3919078	Argument	"""Cannot use \\""%s\\"" when no class scope is active"""		3919048	1					
ANR	3919079	PrimaryExpression	"""Cannot use \\""%s\\"" when no class scope is active"""		3919048	0					
ANR	3919080	Argument	"fetch_type == ZEND_FETCH_CLASS_SELF ? ""self"" : fetch_type == ZEND_FETCH_CLASS_PARENT ? ""parent"" : ""static"""		3919048	2					
ANR	3919081	ConditionalExpression	"fetch_type == ZEND_FETCH_CLASS_SELF ? ""self"" : fetch_type == ZEND_FETCH_CLASS_PARENT ? ""parent"" : ""static"""		3919048	0					
ANR	3919082	Condition	fetch_type == ZEND_FETCH_CLASS_SELF		3919048	0					
ANR	3919083	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_SELF		3919048	0		==			
ANR	3919084	Identifier	fetch_type		3919048	0					
ANR	3919085	Identifier	ZEND_FETCH_CLASS_SELF		3919048	1					
ANR	3919086	PrimaryExpression	"""self"""		3919048	1					
ANR	3919087	ConditionalExpression	"fetch_type == ZEND_FETCH_CLASS_PARENT ? ""parent"" : ""static"""		3919048	2					
ANR	3919088	Condition	fetch_type == ZEND_FETCH_CLASS_PARENT		3919048	0					
ANR	3919089	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_PARENT		3919048	0		==			
ANR	3919090	Identifier	fetch_type		3919048	0					
ANR	3919091	Identifier	ZEND_FETCH_CLASS_PARENT		3919048	1					
ANR	3919092	PrimaryExpression	"""parent"""		3919048	1					
ANR	3919093	PrimaryExpression	"""static"""		3919048	2					
ANR	3919094	ReturnType	static void		3919048	1					
ANR	3919095	Identifier	zend_ensure_valid_class_fetch_type		3919048	2					
ANR	3919096	ParameterList	uint32_t fetch_type		3919048	3					
ANR	3919097	Parameter	uint32_t fetch_type	1345:47:41406:41424	3919048	0	True				
ANR	3919098	ParameterType	uint32_t		3919048	0					
ANR	3919099	Identifier	fetch_type		3919048	1					
ANR	3919100	CFGEntryNode	ENTRY		3919048		True				
ANR	3919101	CFGExitNode	EXIT		3919048		True				
ANR	3919102	Symbol	zend_is_scope_known		3919048						
ANR	3919103	Symbol	ZEND_FETCH_CLASS_DEFAULT		3919048						
ANR	3919104	Symbol	fetch_type		3919048						
ANR	3919105	Symbol	CG		3919048						
ANR	3919106	Symbol	ZEND_FETCH_CLASS_SELF		3919048						
ANR	3919107	Symbol	active_class_entry		3919048						
ANR	3919108	Symbol	E_COMPILE_ERROR		3919048						
ANR	3919109	Symbol	ZEND_FETCH_CLASS_PARENT		3919048						
ANR	3919110	Function	zend_try_compile_const_expr_resolve_class_name	1355:0:41759:43034							
ANR	3919111	FunctionDef	"zend_try_compile_const_expr_resolve_class_name (zval * zv , zend_ast * class_ast , zend_ast * name_ast , zend_bool constant)"		3919110	0					
ANR	3919112	CompoundStatement		1356:0:41904:43034	3919110	0					
ANR	3919113	IdentifierDeclStatement	uint32_t fetch_type ;	1357:1:41907:41926	3919110	0	True				
ANR	3919114	IdentifierDecl	fetch_type		3919110	0					
ANR	3919115	IdentifierDeclType	uint32_t		3919110	0					
ANR	3919116	Identifier	fetch_type		3919110	1					
ANR	3919117	IfStatement	if ( name_ast -> kind != ZEND_AST_ZVAL )		3919110	1					
ANR	3919118	Condition	name_ast -> kind != ZEND_AST_ZVAL	1359:5:41934:41964	3919110	0	True				
ANR	3919119	EqualityExpression	name_ast -> kind != ZEND_AST_ZVAL		3919110	0		!=			
ANR	3919120	PtrMemberAccess	name_ast -> kind		3919110	0					
ANR	3919121	Identifier	name_ast		3919110	0					
ANR	3919122	Identifier	kind		3919110	1					
ANR	3919123	Identifier	ZEND_AST_ZVAL		3919110	1					
ANR	3919124	CompoundStatement		4:38:62:62	3919110	1					
ANR	3919125	ReturnStatement	return 0 ;	1360:2:41971:41979	3919110	0	True				
ANR	3919126	PrimaryExpression	0		3919110	0					
ANR	3919127	IfStatement	"if ( ! zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" ) )"		3919110	2					
ANR	3919128	Condition	"! zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" )"	1363:5:41990:42056	3919110	0	True				
ANR	3919129	UnaryOperationExpression	"! zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" )"		3919110	0					
ANR	3919130	UnaryOperator	!		3919110	0					
ANR	3919131	CallExpression	"zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" )"		3919110	1					
ANR	3919132	Callee	zend_string_equals_literal_ci		3919110	0					
ANR	3919133	Identifier	zend_string_equals_literal_ci		3919110	0					
ANR	3919134	ArgumentList	zend_ast_get_str ( name_ast )		3919110	1					
ANR	3919135	Argument	zend_ast_get_str ( name_ast )		3919110	0					
ANR	3919136	CallExpression	zend_ast_get_str ( name_ast )		3919110	0					
ANR	3919137	Callee	zend_ast_get_str		3919110	0					
ANR	3919138	Identifier	zend_ast_get_str		3919110	0					
ANR	3919139	ArgumentList	name_ast		3919110	1					
ANR	3919140	Argument	name_ast		3919110	0					
ANR	3919141	Identifier	name_ast		3919110	0					
ANR	3919142	Argument	"""class"""		3919110	1					
ANR	3919143	PrimaryExpression	"""class"""		3919110	0					
ANR	3919144	CompoundStatement		8:74:154:154	3919110	1					
ANR	3919145	ReturnStatement	return 0 ;	1364:2:42063:42071	3919110	0	True				
ANR	3919146	PrimaryExpression	0		3919110	0					
ANR	3919147	IfStatement	if ( class_ast -> kind != ZEND_AST_ZVAL )		3919110	3					
ANR	3919148	Condition	class_ast -> kind != ZEND_AST_ZVAL	1367:5:42082:42113	3919110	0	True				
ANR	3919149	EqualityExpression	class_ast -> kind != ZEND_AST_ZVAL		3919110	0		!=			
ANR	3919150	PtrMemberAccess	class_ast -> kind		3919110	0					
ANR	3919151	Identifier	class_ast		3919110	0					
ANR	3919152	Identifier	kind		3919110	1					
ANR	3919153	Identifier	ZEND_AST_ZVAL		3919110	1					
ANR	3919154	CompoundStatement		12:39:211:211	3919110	1					
ANR	3919155	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time ::class fetch"" )"	1368:2:42120:42228	3919110	0	True				
ANR	3919156	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time ::class fetch"" )"		3919110	0					
ANR	3919157	Callee	zend_error_noreturn		3919110	0					
ANR	3919158	Identifier	zend_error_noreturn		3919110	0					
ANR	3919159	ArgumentList	E_COMPILE_ERROR		3919110	1					
ANR	3919160	Argument	E_COMPILE_ERROR		3919110	0					
ANR	3919161	Identifier	E_COMPILE_ERROR		3919110	0					
ANR	3919162	Argument	"""Dynamic class names are not allowed in compile-time ::class fetch"""		3919110	1					
ANR	3919163	PrimaryExpression	"""Dynamic class names are not allowed in compile-time ::class fetch"""		3919110	0					
ANR	3919164	ExpressionStatement	fetch_type = zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) )	1372:1:42235:42302	3919110	4	True				
ANR	3919165	AssignmentExpression	fetch_type = zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) )		3919110	0		=			
ANR	3919166	Identifier	fetch_type		3919110	0					
ANR	3919167	CallExpression	zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) )		3919110	1					
ANR	3919168	Callee	zend_get_class_fetch_type		3919110	0					
ANR	3919169	Identifier	zend_get_class_fetch_type		3919110	0					
ANR	3919170	ArgumentList	zend_ast_get_str ( class_ast )		3919110	1					
ANR	3919171	Argument	zend_ast_get_str ( class_ast )		3919110	0					
ANR	3919172	CallExpression	zend_ast_get_str ( class_ast )		3919110	0					
ANR	3919173	Callee	zend_ast_get_str		3919110	0					
ANR	3919174	Identifier	zend_ast_get_str		3919110	0					
ANR	3919175	ArgumentList	class_ast		3919110	1					
ANR	3919176	Argument	class_ast		3919110	0					
ANR	3919177	Identifier	class_ast		3919110	0					
ANR	3919178	ExpressionStatement	zend_ensure_valid_class_fetch_type ( fetch_type )	1373:1:42305:42351	3919110	5	True				
ANR	3919179	CallExpression	zend_ensure_valid_class_fetch_type ( fetch_type )		3919110	0					
ANR	3919180	Callee	zend_ensure_valid_class_fetch_type		3919110	0					
ANR	3919181	Identifier	zend_ensure_valid_class_fetch_type		3919110	0					
ANR	3919182	ArgumentList	fetch_type		3919110	1					
ANR	3919183	Argument	fetch_type		3919110	0					
ANR	3919184	Identifier	fetch_type		3919110	0					
ANR	3919185	SwitchStatement	switch ( fetch_type )		3919110	6					
ANR	3919186	Condition	fetch_type	1375:9:42363:42372	3919110	0	True				
ANR	3919187	Identifier	fetch_type		3919110	0					
ANR	3919188	CompoundStatement		20:21:470:470	3919110	1					
ANR	3919189	Label	case ZEND_FETCH_CLASS_SELF :	1376:2:42379:42405	3919110	0	True				
ANR	3919190	Identifier	ZEND_FETCH_CLASS_SELF		3919110	0					
ANR	3919191	IfStatement	if ( constant || ( CG ( active_class_entry ) && zend_is_scope_known ( ) ) )		3919110	1					
ANR	3919192	Condition	constant || ( CG ( active_class_entry ) && zend_is_scope_known ( ) )	1377:7:42414:42474	3919110	0	True				
ANR	3919193	OrExpression	constant || ( CG ( active_class_entry ) && zend_is_scope_known ( ) )		3919110	0		||			
ANR	3919194	Identifier	constant		3919110	0					
ANR	3919195	AndExpression	CG ( active_class_entry ) && zend_is_scope_known ( )		3919110	1		&&			
ANR	3919196	CallExpression	CG ( active_class_entry )		3919110	0					
ANR	3919197	Callee	CG		3919110	0					
ANR	3919198	Identifier	CG		3919110	0					
ANR	3919199	ArgumentList	active_class_entry		3919110	1					
ANR	3919200	Argument	active_class_entry		3919110	0					
ANR	3919201	Identifier	active_class_entry		3919110	0					
ANR	3919202	CallExpression	zend_is_scope_known ( )		3919110	1					
ANR	3919203	Callee	zend_is_scope_known		3919110	0					
ANR	3919204	Identifier	zend_is_scope_known		3919110	0					
ANR	3919205	ArgumentList			3919110	1					
ANR	3919206	CompoundStatement		22:70:572:572	3919110	1					
ANR	3919207	ExpressionStatement	"ZVAL_STR_COPY ( zv , CG ( active_class_entry ) -> name )"	1378:4:42483:42530	3919110	0	True				
ANR	3919208	CallExpression	"ZVAL_STR_COPY ( zv , CG ( active_class_entry ) -> name )"		3919110	0					
ANR	3919209	Callee	ZVAL_STR_COPY		3919110	0					
ANR	3919210	Identifier	ZVAL_STR_COPY		3919110	0					
ANR	3919211	ArgumentList	zv		3919110	1					
ANR	3919212	Argument	zv		3919110	0					
ANR	3919213	Identifier	zv		3919110	0					
ANR	3919214	Argument	CG ( active_class_entry ) -> name		3919110	1					
ANR	3919215	PtrMemberAccess	CG ( active_class_entry ) -> name		3919110	0					
ANR	3919216	CallExpression	CG ( active_class_entry )		3919110	0					
ANR	3919217	Callee	CG		3919110	0					
ANR	3919218	Identifier	CG		3919110	0					
ANR	3919219	ArgumentList	active_class_entry		3919110	1					
ANR	3919220	Argument	active_class_entry		3919110	0					
ANR	3919221	Identifier	active_class_entry		3919110	0					
ANR	3919222	Identifier	name		3919110	1					
ANR	3919223	ElseStatement	else		3919110	0					
ANR	3919224	CompoundStatement		24:10:637:637	3919110	0					
ANR	3919225	ExpressionStatement	ZVAL_NULL ( zv )	1380:4:42548:42561	3919110	0	True				
ANR	3919226	CallExpression	ZVAL_NULL ( zv )		3919110	0					
ANR	3919227	Callee	ZVAL_NULL		3919110	0					
ANR	3919228	Identifier	ZVAL_NULL		3919110	0					
ANR	3919229	ArgumentList	zv		3919110	1					
ANR	3919230	Argument	zv		3919110	0					
ANR	3919231	Identifier	zv		3919110	0					
ANR	3919232	ReturnStatement	return 1 ;	1382:3:42571:42579	3919110	2	True				
ANR	3919233	PrimaryExpression	1		3919110	0					
ANR	3919234	Label	case ZEND_FETCH_CLASS_STATIC :	1383:2:42583:42611	3919110	3	True				
ANR	3919235	Identifier	ZEND_FETCH_CLASS_STATIC		3919110	0					
ANR	3919236	Label	case ZEND_FETCH_CLASS_PARENT :	1384:2:42615:42643	3919110	4	True				
ANR	3919237	Identifier	ZEND_FETCH_CLASS_PARENT		3919110	0					
ANR	3919238	IfStatement	if ( constant )		3919110	5					
ANR	3919239	Condition	constant	1385:7:42652:42659	3919110	0	True				
ANR	3919240	Identifier	constant		3919110	0					
ANR	3919241	CompoundStatement		30:17:757:757	3919110	1					
ANR	3919242	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s::class cannot be used for compile-time class name resolution"" , fetch_type == ZEND_FETCH_CLASS_STATIC ? ""static"" : ""parent"" )"	1386:4:42668:42847	3919110	0	True				
ANR	3919243	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s::class cannot be used for compile-time class name resolution"" , fetch_type == ZEND_FETCH_CLASS_STATIC ? ""static"" : ""parent"" )"		3919110	0					
ANR	3919244	Callee	zend_error_noreturn		3919110	0					
ANR	3919245	Identifier	zend_error_noreturn		3919110	0					
ANR	3919246	ArgumentList	E_COMPILE_ERROR		3919110	1					
ANR	3919247	Argument	E_COMPILE_ERROR		3919110	0					
ANR	3919248	Identifier	E_COMPILE_ERROR		3919110	0					
ANR	3919249	Argument	"""%s::class cannot be used for compile-time class name resolution"""		3919110	1					
ANR	3919250	PrimaryExpression	"""%s::class cannot be used for compile-time class name resolution"""		3919110	0					
ANR	3919251	Argument	"fetch_type == ZEND_FETCH_CLASS_STATIC ? ""static"" : ""parent"""		3919110	2					
ANR	3919252	ConditionalExpression	"fetch_type == ZEND_FETCH_CLASS_STATIC ? ""static"" : ""parent"""		3919110	0					
ANR	3919253	Condition	fetch_type == ZEND_FETCH_CLASS_STATIC		3919110	0					
ANR	3919254	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_STATIC		3919110	0		==			
ANR	3919255	Identifier	fetch_type		3919110	0					
ANR	3919256	Identifier	ZEND_FETCH_CLASS_STATIC		3919110	1					
ANR	3919257	PrimaryExpression	"""static"""		3919110	1					
ANR	3919258	PrimaryExpression	"""parent"""		3919110	2					
ANR	3919259	ElseStatement	else		3919110	0					
ANR	3919260	CompoundStatement		35:10:954:954	3919110	0					
ANR	3919261	ExpressionStatement	ZVAL_NULL ( zv )	1391:4:42865:42878	3919110	0	True				
ANR	3919262	CallExpression	ZVAL_NULL ( zv )		3919110	0					
ANR	3919263	Callee	ZVAL_NULL		3919110	0					
ANR	3919264	Identifier	ZVAL_NULL		3919110	0					
ANR	3919265	ArgumentList	zv		3919110	1					
ANR	3919266	Argument	zv		3919110	0					
ANR	3919267	Identifier	zv		3919110	0					
ANR	3919268	ReturnStatement	return 1 ;	1393:3:42888:42896	3919110	6	True				
ANR	3919269	PrimaryExpression	1		3919110	0					
ANR	3919270	Label	case ZEND_FETCH_CLASS_DEFAULT :	1394:2:42900:42929	3919110	7	True				
ANR	3919271	Identifier	ZEND_FETCH_CLASS_DEFAULT		3919110	0					
ANR	3919272	ExpressionStatement	"ZVAL_STR ( zv , zend_resolve_class_name_ast ( class_ast ) )"	1395:3:42934:42986	3919110	8	True				
ANR	3919273	CallExpression	"ZVAL_STR ( zv , zend_resolve_class_name_ast ( class_ast ) )"		3919110	0					
ANR	3919274	Callee	ZVAL_STR		3919110	0					
ANR	3919275	Identifier	ZVAL_STR		3919110	0					
ANR	3919276	ArgumentList	zv		3919110	1					
ANR	3919277	Argument	zv		3919110	0					
ANR	3919278	Identifier	zv		3919110	0					
ANR	3919279	Argument	zend_resolve_class_name_ast ( class_ast )		3919110	1					
ANR	3919280	CallExpression	zend_resolve_class_name_ast ( class_ast )		3919110	0					
ANR	3919281	Callee	zend_resolve_class_name_ast		3919110	0					
ANR	3919282	Identifier	zend_resolve_class_name_ast		3919110	0					
ANR	3919283	ArgumentList	class_ast		3919110	1					
ANR	3919284	Argument	class_ast		3919110	0					
ANR	3919285	Identifier	class_ast		3919110	0					
ANR	3919286	ReturnStatement	return 1 ;	1396:3:42991:42999	3919110	9	True				
ANR	3919287	PrimaryExpression	1		3919110	0					
ANR	3919288	Statement	EMPTY_SWITCH_DEFAULT_CASE	1397:2:43003:43027	3919110	10	True				
ANR	3919289	Statement	(	1397:27:43028:43028	3919110	11	True				
ANR	3919290	Statement	)	1397:28:43029:43029	3919110	12	True				
ANR	3919291	ReturnType	static zend_bool		3919110	1					
ANR	3919292	Identifier	zend_try_compile_const_expr_resolve_class_name		3919110	2					
ANR	3919293	ParameterList	"zval * zv , zend_ast * class_ast , zend_ast * name_ast , zend_bool constant"		3919110	3					
ANR	3919294	Parameter	zval * zv	1355:64:41823:41830	3919110	0	True				
ANR	3919295	ParameterType	zval *		3919110	0					
ANR	3919296	Identifier	zv		3919110	1					
ANR	3919297	Parameter	zend_ast * class_ast	1355:74:41833:41851	3919110	1	True				
ANR	3919298	ParameterType	zend_ast *		3919110	0					
ANR	3919299	Identifier	class_ast		3919110	1					
ANR	3919300	Parameter	zend_ast * name_ast	1355:95:41854:41871	3919110	2	True				
ANR	3919301	ParameterType	zend_ast *		3919110	0					
ANR	3919302	Identifier	name_ast		3919110	1					
ANR	3919303	Parameter	zend_bool constant	1355:115:41874:41891	3919110	3	True				
ANR	3919304	ParameterType	zend_bool		3919110	0					
ANR	3919305	Identifier	constant		3919110	1					
ANR	3919306	CFGEntryNode	ENTRY		3919110		True				
ANR	3919307	CFGExitNode	EXIT		3919110		True				
ANR	3919308	Symbol	zend_is_scope_known		3919110						
ANR	3919309	Symbol	* class_ast		3919110						
ANR	3919310	Symbol	fetch_type		3919110						
ANR	3919311	Symbol	constant		3919110						
ANR	3919312	Symbol	CG		3919110						
ANR	3919313	Symbol	zend_resolve_class_name_ast		3919110						
ANR	3919314	Symbol	E_COMPILE_ERROR		3919110						
ANR	3919315	Symbol	active_class_entry		3919110						
ANR	3919316	Symbol	* CG		3919110						
ANR	3919317	Symbol	class_ast		3919110						
ANR	3919318	Symbol	zend_string_equals_literal_ci		3919110						
ANR	3919319	Symbol	* name_ast		3919110						
ANR	3919320	Symbol	class_ast -> kind		3919110						
ANR	3919321	Symbol	zend_ast_get_str		3919110						
ANR	3919322	Symbol	name_ast -> kind		3919110						
ANR	3919323	Symbol	ZEND_FETCH_CLASS_STATIC		3919110						
ANR	3919324	Symbol	name_ast		3919110						
ANR	3919325	Symbol	ZEND_AST_ZVAL		3919110						
ANR	3919326	Symbol	CG ( active_class_entry ) -> name		3919110						
ANR	3919327	Symbol	zv		3919110						
ANR	3919328	Symbol	zend_get_class_fetch_type		3919110						
ANR	3919329	Function	zend_try_ct_eval_class_const	1402:0:43047:43966							
ANR	3919330	FunctionDef	"zend_try_ct_eval_class_const (zval * zv , zend_string * class_name , zend_string * name)"		3919329	0					
ANR	3919331	CompoundStatement		1403:0:43157:43966	3919329	0					
ANR	3919332	IdentifierDeclStatement	uint32_t fetch_type = zend_get_class_fetch_type ( class_name ) ;	1404:1:43160:43219	3919329	0	True				
ANR	3919333	IdentifierDecl	fetch_type = zend_get_class_fetch_type ( class_name )		3919329	0					
ANR	3919334	IdentifierDeclType	uint32_t		3919329	0					
ANR	3919335	Identifier	fetch_type		3919329	1					
ANR	3919336	AssignmentExpression	fetch_type = zend_get_class_fetch_type ( class_name )		3919329	2		=			
ANR	3919337	Identifier	fetch_type		3919329	0					
ANR	3919338	CallExpression	zend_get_class_fetch_type ( class_name )		3919329	1					
ANR	3919339	Callee	zend_get_class_fetch_type		3919329	0					
ANR	3919340	Identifier	zend_get_class_fetch_type		3919329	0					
ANR	3919341	ArgumentList	class_name		3919329	1					
ANR	3919342	Argument	class_name		3919329	0					
ANR	3919343	Identifier	class_name		3919329	0					
ANR	3919344	IdentifierDeclStatement	zval * c ;	1405:1:43222:43229	3919329	1	True				
ANR	3919345	IdentifierDecl	* c		3919329	0					
ANR	3919346	IdentifierDeclType	zval *		3919329	0					
ANR	3919347	Identifier	c		3919329	1					
ANR	3919348	IfStatement	"if ( class_name_refers_to_active_ce ( class_name , fetch_type ) )"		3919329	2					
ANR	3919349	Condition	"class_name_refers_to_active_ce ( class_name , fetch_type )"	1407:5:43237:43290	3919329	0	True				
ANR	3919350	CallExpression	"class_name_refers_to_active_ce ( class_name , fetch_type )"		3919329	0					
ANR	3919351	Callee	class_name_refers_to_active_ce		3919329	0					
ANR	3919352	Identifier	class_name_refers_to_active_ce		3919329	0					
ANR	3919353	ArgumentList	class_name		3919329	1					
ANR	3919354	Argument	class_name		3919329	0					
ANR	3919355	Identifier	class_name		3919329	0					
ANR	3919356	Argument	fetch_type		3919329	1					
ANR	3919357	Identifier	fetch_type		3919329	0					
ANR	3919358	CompoundStatement		5:61:135:135	3919329	1					
ANR	3919359	ExpressionStatement	"c = zend_hash_find ( & CG ( active_class_entry ) -> constants_table , name )"	1408:2:43297:43363	3919329	0	True				
ANR	3919360	AssignmentExpression	"c = zend_hash_find ( & CG ( active_class_entry ) -> constants_table , name )"		3919329	0		=			
ANR	3919361	Identifier	c		3919329	0					
ANR	3919362	CallExpression	"zend_hash_find ( & CG ( active_class_entry ) -> constants_table , name )"		3919329	1					
ANR	3919363	Callee	zend_hash_find		3919329	0					
ANR	3919364	Identifier	zend_hash_find		3919329	0					
ANR	3919365	ArgumentList	& CG ( active_class_entry ) -> constants_table		3919329	1					
ANR	3919366	Argument	& CG ( active_class_entry ) -> constants_table		3919329	0					
ANR	3919367	UnaryOperationExpression	& CG ( active_class_entry ) -> constants_table		3919329	0					
ANR	3919368	UnaryOperator	&		3919329	0					
ANR	3919369	PtrMemberAccess	CG ( active_class_entry ) -> constants_table		3919329	1					
ANR	3919370	CallExpression	CG ( active_class_entry )		3919329	0					
ANR	3919371	Callee	CG		3919329	0					
ANR	3919372	Identifier	CG		3919329	0					
ANR	3919373	ArgumentList	active_class_entry		3919329	1					
ANR	3919374	Argument	active_class_entry		3919329	0					
ANR	3919375	Identifier	active_class_entry		3919329	0					
ANR	3919376	Identifier	constants_table		3919329	1					
ANR	3919377	Argument	name		3919329	1					
ANR	3919378	Identifier	name		3919329	0					
ANR	3919379	ElseStatement	else		3919329	0					
ANR	3919380	IfStatement	if ( fetch_type == ZEND_FETCH_CLASS_DEFAULT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION ) )		3919329	0					
ANR	3919381	Condition	fetch_type == ZEND_FETCH_CLASS_DEFAULT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION )	1409:12:43377:43481	3919329	0	True				
ANR	3919382	AndExpression	fetch_type == ZEND_FETCH_CLASS_DEFAULT && ! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION )		3919329	0		&&			
ANR	3919383	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_DEFAULT		3919329	0		==			
ANR	3919384	Identifier	fetch_type		3919329	0					
ANR	3919385	Identifier	ZEND_FETCH_CLASS_DEFAULT		3919329	1					
ANR	3919386	UnaryOperationExpression	! ( CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION )		3919329	1					
ANR	3919387	UnaryOperator	!		3919329	0					
ANR	3919388	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3919329	1		&			
ANR	3919389	CallExpression	CG ( compiler_options )		3919329	0					
ANR	3919390	Callee	CG		3919329	0					
ANR	3919391	Identifier	CG		3919329	0					
ANR	3919392	ArgumentList	compiler_options		3919329	1					
ANR	3919393	Argument	compiler_options		3919329	0					
ANR	3919394	Identifier	compiler_options		3919329	0					
ANR	3919395	Identifier	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3919329	1					
ANR	3919396	CompoundStatement		8:2:330:435	3919329	1					
ANR	3919397	IdentifierDeclStatement	"zend_class_entry * ce = zend_hash_find_ptr_lc ( CG ( class_table ) , ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) ) ;"	1410:2:43488:43593	3919329	0	True				
ANR	3919398	IdentifierDecl	"* ce = zend_hash_find_ptr_lc ( CG ( class_table ) , ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) )"		3919329	0					
ANR	3919399	IdentifierDeclType	zend_class_entry *		3919329	0					
ANR	3919400	Identifier	ce		3919329	1					
ANR	3919401	AssignmentExpression	"* ce = zend_hash_find_ptr_lc ( CG ( class_table ) , ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) )"		3919329	2		=			
ANR	3919402	Identifier	ce		3919329	0					
ANR	3919403	CallExpression	"zend_hash_find_ptr_lc ( CG ( class_table ) , ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) )"		3919329	1					
ANR	3919404	Callee	zend_hash_find_ptr_lc		3919329	0					
ANR	3919405	Identifier	zend_hash_find_ptr_lc		3919329	0					
ANR	3919406	ArgumentList	CG ( class_table )		3919329	1					
ANR	3919407	Argument	CG ( class_table )		3919329	0					
ANR	3919408	CallExpression	CG ( class_table )		3919329	0					
ANR	3919409	Callee	CG		3919329	0					
ANR	3919410	Identifier	CG		3919329	0					
ANR	3919411	ArgumentList	class_table		3919329	1					
ANR	3919412	Argument	class_table		3919329	0					
ANR	3919413	Identifier	class_table		3919329	0					
ANR	3919414	Argument	ZSTR_VAL ( class_name )		3919329	1					
ANR	3919415	CallExpression	ZSTR_VAL ( class_name )		3919329	0					
ANR	3919416	Callee	ZSTR_VAL		3919329	0					
ANR	3919417	Identifier	ZSTR_VAL		3919329	0					
ANR	3919418	ArgumentList	class_name		3919329	1					
ANR	3919419	Argument	class_name		3919329	0					
ANR	3919420	Identifier	class_name		3919329	0					
ANR	3919421	Argument	ZSTR_LEN ( class_name )		3919329	2					
ANR	3919422	CallExpression	ZSTR_LEN ( class_name )		3919329	0					
ANR	3919423	Callee	ZSTR_LEN		3919329	0					
ANR	3919424	Identifier	ZSTR_LEN		3919329	0					
ANR	3919425	ArgumentList	class_name		3919329	1					
ANR	3919426	Argument	class_name		3919329	0					
ANR	3919427	Identifier	class_name		3919329	0					
ANR	3919428	IfStatement	if ( ce )		3919329	1					
ANR	3919429	Condition	ce	1411:6:43601:43602	3919329	0	True				
ANR	3919430	Identifier	ce		3919329	0					
ANR	3919431	CompoundStatement		9:10:447:447	3919329	1					
ANR	3919432	ExpressionStatement	"c = zend_hash_find ( & ce -> constants_table , name )"	1412:3:43610:43656	3919329	0	True				
ANR	3919433	AssignmentExpression	"c = zend_hash_find ( & ce -> constants_table , name )"		3919329	0		=			
ANR	3919434	Identifier	c		3919329	0					
ANR	3919435	CallExpression	"zend_hash_find ( & ce -> constants_table , name )"		3919329	1					
ANR	3919436	Callee	zend_hash_find		3919329	0					
ANR	3919437	Identifier	zend_hash_find		3919329	0					
ANR	3919438	ArgumentList	& ce -> constants_table		3919329	1					
ANR	3919439	Argument	& ce -> constants_table		3919329	0					
ANR	3919440	UnaryOperationExpression	& ce -> constants_table		3919329	0					
ANR	3919441	UnaryOperator	&		3919329	0					
ANR	3919442	PtrMemberAccess	ce -> constants_table		3919329	1					
ANR	3919443	Identifier	ce		3919329	0					
ANR	3919444	Identifier	constants_table		3919329	1					
ANR	3919445	Argument	name		3919329	1					
ANR	3919446	Identifier	name		3919329	0					
ANR	3919447	ElseStatement	else		3919329	0					
ANR	3919448	CompoundStatement		11:9:509:509	3919329	0					
ANR	3919449	ReturnStatement	return 0 ;	1414:3:43672:43680	3919329	0	True				
ANR	3919450	PrimaryExpression	0		3919329	0					
ANR	3919451	ElseStatement	else		3919329	0					
ANR	3919452	CompoundStatement		14:8:536:536	3919329	0					
ANR	3919453	ReturnStatement	return 0 ;	1417:2:43698:43706	3919329	0	True				
ANR	3919454	PrimaryExpression	0		3919329	0					
ANR	3919455	IfStatement	if ( CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION )		3919329	3					
ANR	3919456	Condition	CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION	1420:5:43717:43787	3919329	0	True				
ANR	3919457	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3919329	0		&			
ANR	3919458	CallExpression	CG ( compiler_options )		3919329	0					
ANR	3919459	Callee	CG		3919329	0					
ANR	3919460	Identifier	CG		3919329	0					
ANR	3919461	ArgumentList	compiler_options		3919329	1					
ANR	3919462	Argument	compiler_options		3919329	0					
ANR	3919463	Identifier	compiler_options		3919329	0					
ANR	3919464	Identifier	ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3919329	1					
ANR	3919465	CompoundStatement		18:78:632:632	3919329	1					
ANR	3919466	ReturnStatement	return 0 ;	1421:2:43794:43802	3919329	0	True				
ANR	3919467	PrimaryExpression	0		3919329	0					
ANR	3919468	IfStatement	if ( c && Z_TYPE_P ( c ) < IS_OBJECT )		3919329	4					
ANR	3919469	Condition	c && Z_TYPE_P ( c ) < IS_OBJECT	1425:5:43888:43915	3919329	0	True				
ANR	3919470	AndExpression	c && Z_TYPE_P ( c ) < IS_OBJECT		3919329	0		&&			
ANR	3919471	Identifier	c		3919329	0					
ANR	3919472	RelationalExpression	Z_TYPE_P ( c ) < IS_OBJECT		3919329	1		<			
ANR	3919473	CallExpression	Z_TYPE_P ( c )		3919329	0					
ANR	3919474	Callee	Z_TYPE_P		3919329	0					
ANR	3919475	Identifier	Z_TYPE_P		3919329	0					
ANR	3919476	ArgumentList	c		3919329	1					
ANR	3919477	Argument	c		3919329	0					
ANR	3919478	Identifier	c		3919329	0					
ANR	3919479	Identifier	IS_OBJECT		3919329	1					
ANR	3919480	CompoundStatement		23:35:760:760	3919329	1					
ANR	3919481	ExpressionStatement	"ZVAL_DUP ( zv , c )"	1426:2:43922:43937	3919329	0	True				
ANR	3919482	CallExpression	"ZVAL_DUP ( zv , c )"		3919329	0					
ANR	3919483	Callee	ZVAL_DUP		3919329	0					
ANR	3919484	Identifier	ZVAL_DUP		3919329	0					
ANR	3919485	ArgumentList	zv		3919329	1					
ANR	3919486	Argument	zv		3919329	0					
ANR	3919487	Identifier	zv		3919329	0					
ANR	3919488	Argument	c		3919329	1					
ANR	3919489	Identifier	c		3919329	0					
ANR	3919490	ReturnStatement	return 1 ;	1427:2:43941:43949	3919329	1	True				
ANR	3919491	PrimaryExpression	1		3919329	0					
ANR	3919492	ReturnStatement	return 0 ;	1430:1:43956:43964	3919329	5	True				
ANR	3919493	PrimaryExpression	0		3919329	0					
ANR	3919494	ReturnType	static zend_bool		3919329	1					
ANR	3919495	Identifier	zend_try_ct_eval_class_const		3919329	2					
ANR	3919496	ParameterList	"zval * zv , zend_string * class_name , zend_string * name"		3919329	3					
ANR	3919497	Parameter	zval * zv	1402:46:43093:43100	3919329	0	True				
ANR	3919498	ParameterType	zval *		3919329	0					
ANR	3919499	Identifier	zv		3919329	1					
ANR	3919500	Parameter	zend_string * class_name	1402:56:43103:43125	3919329	1	True				
ANR	3919501	ParameterType	zend_string *		3919329	0					
ANR	3919502	Identifier	class_name		3919329	1					
ANR	3919503	Parameter	zend_string * name	1402:81:43128:43144	3919329	2	True				
ANR	3919504	ParameterType	zend_string *		3919329	0					
ANR	3919505	Identifier	name		3919329	1					
ANR	3919506	CFGEntryNode	ENTRY		3919329		True				
ANR	3919507	CFGExitNode	EXIT		3919329		True				
ANR	3919508	Symbol	ZEND_FETCH_CLASS_DEFAULT		3919329						
ANR	3919509	Symbol	fetch_type		3919329						
ANR	3919510	Symbol	ce		3919329						
ANR	3919511	Symbol	c		3919329						
ANR	3919512	Symbol	CG		3919329						
ANR	3919513	Symbol	ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3919329						
ANR	3919514	Symbol	active_class_entry		3919329						
ANR	3919515	Symbol	& CG ( active_class_entry ) -> constants_table		3919329						
ANR	3919516	Symbol	Z_TYPE_P		3919329						
ANR	3919517	Symbol	ZSTR_VAL		3919329						
ANR	3919518	Symbol	zend_hash_find		3919329						
ANR	3919519	Symbol	compiler_options		3919329						
ANR	3919520	Symbol	zend_hash_find_ptr_lc		3919329						
ANR	3919521	Symbol	& ce -> constants_table		3919329						
ANR	3919522	Symbol	name		3919329						
ANR	3919523	Symbol	ZSTR_LEN		3919329						
ANR	3919524	Symbol	class_name_refers_to_active_ce		3919329						
ANR	3919525	Symbol	zv		3919329						
ANR	3919526	Symbol	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3919329						
ANR	3919527	Symbol	class_table		3919329						
ANR	3919528	Symbol	IS_OBJECT		3919329						
ANR	3919529	Symbol	class_name		3919329						
ANR	3919530	Symbol	zend_get_class_fetch_type		3919329						
ANR	3919531	Function	zend_add_to_list	1434:0:43979:44255							
ANR	3919532	FunctionDef	"zend_add_to_list (void * result , void * item)"		3919531	0					
ANR	3919533	CompoundStatement		1435:0:44044:44255	3919531	0					
ANR	3919534	IdentifierDeclStatement	void * * list = * ( void * * ) result ;	1436:1:44047:44076	3919531	0	True				
ANR	3919535	IdentifierDecl	* * list = * ( void * * ) result		3919531	0					
ANR	3919536	IdentifierDeclType	void * *		3919531	0					
ANR	3919537	Identifier	list		3919531	1					
ANR	3919538	AssignmentExpression	* * list = * ( void * * ) result		3919531	2		=			
ANR	3919539	Identifier	list		3919531	0					
ANR	3919540	UnaryOperationExpression	* ( void * * ) result		3919531	1					
ANR	3919541	UnaryOperator	*		3919531	0					
ANR	3919542	CastExpression	( void * * ) result		3919531	1					
ANR	3919543	CastTarget	void * *		3919531	0					
ANR	3919544	Identifier	result		3919531	1					
ANR	3919545	IdentifierDeclStatement	size_t n = 0 ;	1437:1:44079:44091	3919531	1	True				
ANR	3919546	IdentifierDecl	n = 0		3919531	0					
ANR	3919547	IdentifierDeclType	size_t		3919531	0					
ANR	3919548	Identifier	n		3919531	1					
ANR	3919549	AssignmentExpression	n = 0		3919531	2		=			
ANR	3919550	Identifier	n		3919531	0					
ANR	3919551	PrimaryExpression	0		3919531	1					
ANR	3919552	IfStatement	if ( list )		3919531	2					
ANR	3919553	Condition	list	1439:5:44099:44102	3919531	0	True				
ANR	3919554	Identifier	list		3919531	0					
ANR	3919555	CompoundStatement		5:11:60:60	3919531	1					
ANR	3919556	WhileStatement	while ( list [ n ] )		3919531	0					
ANR	3919557	Condition	list [ n ]	1440:9:44116:44122	3919531	0	True				
ANR	3919558	ArrayIndexing	list [ n ]		3919531	0					
ANR	3919559	Identifier	list		3919531	0					
ANR	3919560	Identifier	n		3919531	1					
ANR	3919561	CompoundStatement		6:18:80:80	3919531	1					
ANR	3919562	ExpressionStatement	n ++	1441:3:44130:44133	3919531	0	True				
ANR	3919563	PostIncDecOperationExpression	n ++		3919531	0					
ANR	3919564	Identifier	n		3919531	0					
ANR	3919565	IncDec	++		3919531	1					
ANR	3919566	ExpressionStatement	"list = erealloc ( list , sizeof ( void * ) * ( n + 2 ) )"	1445:1:44144:44188	3919531	3	True				
ANR	3919567	AssignmentExpression	"list = erealloc ( list , sizeof ( void * ) * ( n + 2 ) )"		3919531	0		=			
ANR	3919568	Identifier	list		3919531	0					
ANR	3919569	CallExpression	"erealloc ( list , sizeof ( void * ) * ( n + 2 ) )"		3919531	1					
ANR	3919570	Callee	erealloc		3919531	0					
ANR	3919571	Identifier	erealloc		3919531	0					
ANR	3919572	ArgumentList	list		3919531	1					
ANR	3919573	Argument	list		3919531	0					
ANR	3919574	Identifier	list		3919531	0					
ANR	3919575	Argument	sizeof ( void * ) * ( n + 2 )		3919531	1					
ANR	3919576	MultiplicativeExpression	sizeof ( void * ) * ( n + 2 )		3919531	0		*			
ANR	3919577	SizeofExpression	sizeof ( void * )		3919531	0					
ANR	3919578	Sizeof	sizeof		3919531	0					
ANR	3919579	SizeofOperand	void *		3919531	1					
ANR	3919580	AdditiveExpression	n + 2		3919531	1		+			
ANR	3919581	Identifier	n		3919531	0					
ANR	3919582	PrimaryExpression	2		3919531	1					
ANR	3919583	ExpressionStatement	list [ n ] = item	1447:1:44192:44208	3919531	4	True				
ANR	3919584	AssignmentExpression	list [ n ] = item		3919531	0		=			
ANR	3919585	ArrayIndexing	list [ n ]		3919531	0					
ANR	3919586	Identifier	list		3919531	0					
ANR	3919587	Identifier	n		3919531	1					
ANR	3919588	Identifier	item		3919531	1					
ANR	3919589	ExpressionStatement	list [ n + 1 ] = NULL	1448:1:44211:44227	3919531	5	True				
ANR	3919590	AssignmentExpression	list [ n + 1 ] = NULL		3919531	0		=			
ANR	3919591	ArrayIndexing	list [ n + 1 ]		3919531	0					
ANR	3919592	Identifier	list		3919531	0					
ANR	3919593	AdditiveExpression	n + 1		3919531	1		+			
ANR	3919594	Identifier	n		3919531	0					
ANR	3919595	PrimaryExpression	1		3919531	1					
ANR	3919596	Identifier	NULL		3919531	1					
ANR	3919597	ExpressionStatement	* ( void * * ) result = list	1450:1:44231:44253	3919531	6	True				
ANR	3919598	AssignmentExpression	* ( void * * ) result = list		3919531	0		=			
ANR	3919599	UnaryOperationExpression	* ( void * * ) result		3919531	0					
ANR	3919600	UnaryOperator	*		3919531	0					
ANR	3919601	CastExpression	( void * * ) result		3919531	1					
ANR	3919602	CastTarget	void * *		3919531	0					
ANR	3919603	Identifier	result		3919531	1					
ANR	3919604	Identifier	list		3919531	1					
ANR	3919605	ReturnType	static void		3919531	1					
ANR	3919606	Identifier	zend_add_to_list		3919531	2					
ANR	3919607	ParameterList	"void * result , void * item"		3919531	3					
ANR	3919608	Parameter	void * result	1434:29:44008:44019	3919531	0	True				
ANR	3919609	ParameterType	void *		3919531	0					
ANR	3919610	Identifier	result		3919531	1					
ANR	3919611	Parameter	void * item	1434:43:44022:44031	3919531	1	True				
ANR	3919612	ParameterType	void *		3919531	0					
ANR	3919613	Identifier	item		3919531	1					
ANR	3919614	CFGEntryNode	ENTRY		3919531		True				
ANR	3919615	CFGExitNode	EXIT		3919531		True				
ANR	3919616	Symbol	result		3919531						
ANR	3919617	Symbol	item		3919531						
ANR	3919618	Symbol	NULL		3919531						
ANR	3919619	Symbol	* result		3919531						
ANR	3919620	Symbol	* list		3919531						
ANR	3919621	Symbol	* n		3919531						
ANR	3919622	Symbol	* ( void * * ) result		3919531						
ANR	3919623	Symbol	list		3919531						
ANR	3919624	Symbol	erealloc		3919531						
ANR	3919625	Symbol	n		3919531						
ANR	3919626	Function	zend_do_extended_info	1454:0:44268:44537							
ANR	3919627	FunctionDef	zend_do_extended_info ()		3919626	0					
ANR	3919628	CompoundStatement		1455:0:44311:44537	3919626	0					
ANR	3919629	IdentifierDeclStatement	zend_op * opline ;	1456:1:44314:44329	3919626	0	True				
ANR	3919630	IdentifierDecl	* opline		3919626	0					
ANR	3919631	IdentifierDeclType	zend_op *		3919626	0					
ANR	3919632	Identifier	opline		3919626	1					
ANR	3919633	IfStatement	if ( ! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO ) )		3919626	1					
ANR	3919634	Condition	! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO )	1458:5:44337:44388	3919626	0	True				
ANR	3919635	UnaryOperationExpression	! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO )		3919626	0					
ANR	3919636	UnaryOperator	!		3919626	0					
ANR	3919637	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO		3919626	1		&			
ANR	3919638	CallExpression	CG ( compiler_options )		3919626	0					
ANR	3919639	Callee	CG		3919626	0					
ANR	3919640	Identifier	CG		3919626	0					
ANR	3919641	ArgumentList	compiler_options		3919626	1					
ANR	3919642	Argument	compiler_options		3919626	0					
ANR	3919643	Identifier	compiler_options		3919626	0					
ANR	3919644	Identifier	ZEND_COMPILE_EXTENDED_INFO		3919626	1					
ANR	3919645	CompoundStatement		4:59:79:79	3919626	1					
ANR	3919646	ReturnStatement	return ;	1459:2:44395:44401	3919626	0	True				
ANR	3919647	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	1462:1:44408:44449	3919626	2	True				
ANR	3919648	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3919626	0		=			
ANR	3919649	Identifier	opline		3919626	0					
ANR	3919650	CallExpression	get_next_op ( CG ( active_op_array ) )		3919626	1					
ANR	3919651	Callee	get_next_op		3919626	0					
ANR	3919652	Identifier	get_next_op		3919626	0					
ANR	3919653	ArgumentList	CG ( active_op_array )		3919626	1					
ANR	3919654	Argument	CG ( active_op_array )		3919626	0					
ANR	3919655	CallExpression	CG ( active_op_array )		3919626	0					
ANR	3919656	Callee	CG		3919626	0					
ANR	3919657	Identifier	CG		3919626	0					
ANR	3919658	ArgumentList	active_op_array		3919626	1					
ANR	3919659	Argument	active_op_array		3919626	0					
ANR	3919660	Identifier	active_op_array		3919626	0					
ANR	3919661	ExpressionStatement	opline -> opcode = ZEND_EXT_STMT	1464:1:44453:44483	3919626	3	True				
ANR	3919662	AssignmentExpression	opline -> opcode = ZEND_EXT_STMT		3919626	0		=			
ANR	3919663	PtrMemberAccess	opline -> opcode		3919626	0					
ANR	3919664	Identifier	opline		3919626	0					
ANR	3919665	Identifier	opcode		3919626	1					
ANR	3919666	Identifier	ZEND_EXT_STMT		3919626	1					
ANR	3919667	ExpressionStatement	SET_UNUSED ( opline -> op1 )	1465:1:44486:44509	3919626	4	True				
ANR	3919668	CallExpression	SET_UNUSED ( opline -> op1 )		3919626	0					
ANR	3919669	Callee	SET_UNUSED		3919626	0					
ANR	3919670	Identifier	SET_UNUSED		3919626	0					
ANR	3919671	ArgumentList	opline -> op1		3919626	1					
ANR	3919672	Argument	opline -> op1		3919626	0					
ANR	3919673	PtrMemberAccess	opline -> op1		3919626	0					
ANR	3919674	Identifier	opline		3919626	0					
ANR	3919675	Identifier	op1		3919626	1					
ANR	3919676	ExpressionStatement	SET_UNUSED ( opline -> op2 )	1466:1:44512:44535	3919626	5	True				
ANR	3919677	CallExpression	SET_UNUSED ( opline -> op2 )		3919626	0					
ANR	3919678	Callee	SET_UNUSED		3919626	0					
ANR	3919679	Identifier	SET_UNUSED		3919626	0					
ANR	3919680	ArgumentList	opline -> op2		3919626	1					
ANR	3919681	Argument	opline -> op2		3919626	0					
ANR	3919682	PtrMemberAccess	opline -> op2		3919626	0					
ANR	3919683	Identifier	opline		3919626	0					
ANR	3919684	Identifier	op2		3919626	1					
ANR	3919685	ReturnType	void		3919626	1					
ANR	3919686	Identifier	zend_do_extended_info		3919626	2					
ANR	3919687	ParameterList			3919626	3					
ANR	3919688	CFGEntryNode	ENTRY		3919626		True				
ANR	3919689	CFGExitNode	EXIT		3919626		True				
ANR	3919690	Symbol	opline -> op1		3919626						
ANR	3919691	Symbol	compiler_options		3919626						
ANR	3919692	Symbol	ZEND_EXT_STMT		3919626						
ANR	3919693	Symbol	opline -> op2		3919626						
ANR	3919694	Symbol	opline		3919626						
ANR	3919695	Symbol	get_next_op		3919626						
ANR	3919696	Symbol	CG		3919626						
ANR	3919697	Symbol	* opline		3919626						
ANR	3919698	Symbol	active_op_array		3919626						
ANR	3919699	Symbol	opline -> opcode		3919626						
ANR	3919700	Symbol	ZEND_COMPILE_EXTENDED_INFO		3919626						
ANR	3919701	Function	zend_do_extended_fcall_begin	1470:0:44550:44833							
ANR	3919702	FunctionDef	zend_do_extended_fcall_begin ()		3919701	0					
ANR	3919703	CompoundStatement		1471:0:44600:44833	3919701	0					
ANR	3919704	IdentifierDeclStatement	zend_op * opline ;	1472:1:44603:44618	3919701	0	True				
ANR	3919705	IdentifierDecl	* opline		3919701	0					
ANR	3919706	IdentifierDeclType	zend_op *		3919701	0					
ANR	3919707	Identifier	opline		3919701	1					
ANR	3919708	IfStatement	if ( ! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO ) )		3919701	1					
ANR	3919709	Condition	! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO )	1474:5:44626:44677	3919701	0	True				
ANR	3919710	UnaryOperationExpression	! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO )		3919701	0					
ANR	3919711	UnaryOperator	!		3919701	0					
ANR	3919712	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO		3919701	1		&			
ANR	3919713	CallExpression	CG ( compiler_options )		3919701	0					
ANR	3919714	Callee	CG		3919701	0					
ANR	3919715	Identifier	CG		3919701	0					
ANR	3919716	ArgumentList	compiler_options		3919701	1					
ANR	3919717	Argument	compiler_options		3919701	0					
ANR	3919718	Identifier	compiler_options		3919701	0					
ANR	3919719	Identifier	ZEND_COMPILE_EXTENDED_INFO		3919701	1					
ANR	3919720	CompoundStatement		4:59:79:79	3919701	1					
ANR	3919721	ReturnStatement	return ;	1475:2:44684:44690	3919701	0	True				
ANR	3919722	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	1478:1:44697:44738	3919701	2	True				
ANR	3919723	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3919701	0		=			
ANR	3919724	Identifier	opline		3919701	0					
ANR	3919725	CallExpression	get_next_op ( CG ( active_op_array ) )		3919701	1					
ANR	3919726	Callee	get_next_op		3919701	0					
ANR	3919727	Identifier	get_next_op		3919701	0					
ANR	3919728	ArgumentList	CG ( active_op_array )		3919701	1					
ANR	3919729	Argument	CG ( active_op_array )		3919701	0					
ANR	3919730	CallExpression	CG ( active_op_array )		3919701	0					
ANR	3919731	Callee	CG		3919701	0					
ANR	3919732	Identifier	CG		3919701	0					
ANR	3919733	ArgumentList	active_op_array		3919701	1					
ANR	3919734	Argument	active_op_array		3919701	0					
ANR	3919735	Identifier	active_op_array		3919701	0					
ANR	3919736	ExpressionStatement	opline -> opcode = ZEND_EXT_FCALL_BEGIN	1480:1:44742:44779	3919701	3	True				
ANR	3919737	AssignmentExpression	opline -> opcode = ZEND_EXT_FCALL_BEGIN		3919701	0		=			
ANR	3919738	PtrMemberAccess	opline -> opcode		3919701	0					
ANR	3919739	Identifier	opline		3919701	0					
ANR	3919740	Identifier	opcode		3919701	1					
ANR	3919741	Identifier	ZEND_EXT_FCALL_BEGIN		3919701	1					
ANR	3919742	ExpressionStatement	SET_UNUSED ( opline -> op1 )	1481:1:44782:44805	3919701	4	True				
ANR	3919743	CallExpression	SET_UNUSED ( opline -> op1 )		3919701	0					
ANR	3919744	Callee	SET_UNUSED		3919701	0					
ANR	3919745	Identifier	SET_UNUSED		3919701	0					
ANR	3919746	ArgumentList	opline -> op1		3919701	1					
ANR	3919747	Argument	opline -> op1		3919701	0					
ANR	3919748	PtrMemberAccess	opline -> op1		3919701	0					
ANR	3919749	Identifier	opline		3919701	0					
ANR	3919750	Identifier	op1		3919701	1					
ANR	3919751	ExpressionStatement	SET_UNUSED ( opline -> op2 )	1482:1:44808:44831	3919701	5	True				
ANR	3919752	CallExpression	SET_UNUSED ( opline -> op2 )		3919701	0					
ANR	3919753	Callee	SET_UNUSED		3919701	0					
ANR	3919754	Identifier	SET_UNUSED		3919701	0					
ANR	3919755	ArgumentList	opline -> op2		3919701	1					
ANR	3919756	Argument	opline -> op2		3919701	0					
ANR	3919757	PtrMemberAccess	opline -> op2		3919701	0					
ANR	3919758	Identifier	opline		3919701	0					
ANR	3919759	Identifier	op2		3919701	1					
ANR	3919760	ReturnType	void		3919701	1					
ANR	3919761	Identifier	zend_do_extended_fcall_begin		3919701	2					
ANR	3919762	ParameterList			3919701	3					
ANR	3919763	CFGEntryNode	ENTRY		3919701		True				
ANR	3919764	CFGExitNode	EXIT		3919701		True				
ANR	3919765	Symbol	opline -> op1		3919701						
ANR	3919766	Symbol	compiler_options		3919701						
ANR	3919767	Symbol	ZEND_EXT_FCALL_BEGIN		3919701						
ANR	3919768	Symbol	opline -> op2		3919701						
ANR	3919769	Symbol	opline		3919701						
ANR	3919770	Symbol	get_next_op		3919701						
ANR	3919771	Symbol	CG		3919701						
ANR	3919772	Symbol	* opline		3919701						
ANR	3919773	Symbol	active_op_array		3919701						
ANR	3919774	Symbol	opline -> opcode		3919701						
ANR	3919775	Symbol	ZEND_COMPILE_EXTENDED_INFO		3919701						
ANR	3919776	Function	zend_do_extended_fcall_end	1486:0:44846:45125							
ANR	3919777	FunctionDef	zend_do_extended_fcall_end ()		3919776	0					
ANR	3919778	CompoundStatement		1487:0:44894:45125	3919776	0					
ANR	3919779	IdentifierDeclStatement	zend_op * opline ;	1488:1:44897:44912	3919776	0	True				
ANR	3919780	IdentifierDecl	* opline		3919776	0					
ANR	3919781	IdentifierDeclType	zend_op *		3919776	0					
ANR	3919782	Identifier	opline		3919776	1					
ANR	3919783	IfStatement	if ( ! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO ) )		3919776	1					
ANR	3919784	Condition	! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO )	1490:5:44920:44971	3919776	0	True				
ANR	3919785	UnaryOperationExpression	! ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO )		3919776	0					
ANR	3919786	UnaryOperator	!		3919776	0					
ANR	3919787	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO		3919776	1		&			
ANR	3919788	CallExpression	CG ( compiler_options )		3919776	0					
ANR	3919789	Callee	CG		3919776	0					
ANR	3919790	Identifier	CG		3919776	0					
ANR	3919791	ArgumentList	compiler_options		3919776	1					
ANR	3919792	Argument	compiler_options		3919776	0					
ANR	3919793	Identifier	compiler_options		3919776	0					
ANR	3919794	Identifier	ZEND_COMPILE_EXTENDED_INFO		3919776	1					
ANR	3919795	CompoundStatement		4:59:79:79	3919776	1					
ANR	3919796	ReturnStatement	return ;	1491:2:44978:44984	3919776	0	True				
ANR	3919797	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	1494:1:44991:45032	3919776	2	True				
ANR	3919798	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3919776	0		=			
ANR	3919799	Identifier	opline		3919776	0					
ANR	3919800	CallExpression	get_next_op ( CG ( active_op_array ) )		3919776	1					
ANR	3919801	Callee	get_next_op		3919776	0					
ANR	3919802	Identifier	get_next_op		3919776	0					
ANR	3919803	ArgumentList	CG ( active_op_array )		3919776	1					
ANR	3919804	Argument	CG ( active_op_array )		3919776	0					
ANR	3919805	CallExpression	CG ( active_op_array )		3919776	0					
ANR	3919806	Callee	CG		3919776	0					
ANR	3919807	Identifier	CG		3919776	0					
ANR	3919808	ArgumentList	active_op_array		3919776	1					
ANR	3919809	Argument	active_op_array		3919776	0					
ANR	3919810	Identifier	active_op_array		3919776	0					
ANR	3919811	ExpressionStatement	opline -> opcode = ZEND_EXT_FCALL_END	1496:1:45036:45071	3919776	3	True				
ANR	3919812	AssignmentExpression	opline -> opcode = ZEND_EXT_FCALL_END		3919776	0		=			
ANR	3919813	PtrMemberAccess	opline -> opcode		3919776	0					
ANR	3919814	Identifier	opline		3919776	0					
ANR	3919815	Identifier	opcode		3919776	1					
ANR	3919816	Identifier	ZEND_EXT_FCALL_END		3919776	1					
ANR	3919817	ExpressionStatement	SET_UNUSED ( opline -> op1 )	1497:1:45074:45097	3919776	4	True				
ANR	3919818	CallExpression	SET_UNUSED ( opline -> op1 )		3919776	0					
ANR	3919819	Callee	SET_UNUSED		3919776	0					
ANR	3919820	Identifier	SET_UNUSED		3919776	0					
ANR	3919821	ArgumentList	opline -> op1		3919776	1					
ANR	3919822	Argument	opline -> op1		3919776	0					
ANR	3919823	PtrMemberAccess	opline -> op1		3919776	0					
ANR	3919824	Identifier	opline		3919776	0					
ANR	3919825	Identifier	op1		3919776	1					
ANR	3919826	ExpressionStatement	SET_UNUSED ( opline -> op2 )	1498:1:45100:45123	3919776	5	True				
ANR	3919827	CallExpression	SET_UNUSED ( opline -> op2 )		3919776	0					
ANR	3919828	Callee	SET_UNUSED		3919776	0					
ANR	3919829	Identifier	SET_UNUSED		3919776	0					
ANR	3919830	ArgumentList	opline -> op2		3919776	1					
ANR	3919831	Argument	opline -> op2		3919776	0					
ANR	3919832	PtrMemberAccess	opline -> op2		3919776	0					
ANR	3919833	Identifier	opline		3919776	0					
ANR	3919834	Identifier	op2		3919776	1					
ANR	3919835	ReturnType	void		3919776	1					
ANR	3919836	Identifier	zend_do_extended_fcall_end		3919776	2					
ANR	3919837	ParameterList			3919776	3					
ANR	3919838	CFGEntryNode	ENTRY		3919776		True				
ANR	3919839	CFGExitNode	EXIT		3919776		True				
ANR	3919840	Symbol	opline -> op1		3919776						
ANR	3919841	Symbol	compiler_options		3919776						
ANR	3919842	Symbol	opline -> op2		3919776						
ANR	3919843	Symbol	opline		3919776						
ANR	3919844	Symbol	get_next_op		3919776						
ANR	3919845	Symbol	CG		3919776						
ANR	3919846	Symbol	* opline		3919776						
ANR	3919847	Symbol	active_op_array		3919776						
ANR	3919848	Symbol	opline -> opcode		3919776						
ANR	3919849	Symbol	ZEND_EXT_FCALL_END		3919776						
ANR	3919850	Symbol	ZEND_COMPILE_EXTENDED_INFO		3919776						
ANR	3919851	Function	zend_is_auto_global_str	1502:0:45138:45461							
ANR	3919852	FunctionDef	"zend_is_auto_global_str (char * name , size_t len)"		3919851	0					
ANR	3919853	CompoundStatement		1502:68:45206:45461	3919851	0					
ANR	3919854	IdentifierDeclStatement	zend_auto_global * auto_global ;	1503:1:45209:45238	3919851	0	True				
ANR	3919855	IdentifierDecl	* auto_global		3919851	0					
ANR	3919856	IdentifierDeclType	zend_auto_global *		3919851	0					
ANR	3919857	Identifier	auto_global		3919851	1					
ANR	3919858	IfStatement	"if ( ( auto_global = zend_hash_str_find_ptr ( CG ( auto_globals ) , name , len ) ) != NULL )"		3919851	1					
ANR	3919859	Condition	"( auto_global = zend_hash_str_find_ptr ( CG ( auto_globals ) , name , len ) ) != NULL"	1505:5:45246:45320	3919851	0	True				
ANR	3919860	EqualityExpression	"( auto_global = zend_hash_str_find_ptr ( CG ( auto_globals ) , name , len ) ) != NULL"		3919851	0		!=			
ANR	3919861	AssignmentExpression	"auto_global = zend_hash_str_find_ptr ( CG ( auto_globals ) , name , len )"		3919851	0		=			
ANR	3919862	Identifier	auto_global		3919851	0					
ANR	3919863	CallExpression	"zend_hash_str_find_ptr ( CG ( auto_globals ) , name , len )"		3919851	1					
ANR	3919864	Callee	zend_hash_str_find_ptr		3919851	0					
ANR	3919865	Identifier	zend_hash_str_find_ptr		3919851	0					
ANR	3919866	ArgumentList	CG ( auto_globals )		3919851	1					
ANR	3919867	Argument	CG ( auto_globals )		3919851	0					
ANR	3919868	CallExpression	CG ( auto_globals )		3919851	0					
ANR	3919869	Callee	CG		3919851	0					
ANR	3919870	Identifier	CG		3919851	0					
ANR	3919871	ArgumentList	auto_globals		3919851	1					
ANR	3919872	Argument	auto_globals		3919851	0					
ANR	3919873	Identifier	auto_globals		3919851	0					
ANR	3919874	Argument	name		3919851	1					
ANR	3919875	Identifier	name		3919851	0					
ANR	3919876	Argument	len		3919851	2					
ANR	3919877	Identifier	len		3919851	0					
ANR	3919878	Identifier	NULL		3919851	1					
ANR	3919879	CompoundStatement		4:82:116:116	3919851	1					
ANR	3919880	IfStatement	if ( auto_global -> armed )		3919851	0					
ANR	3919881	Condition	auto_global -> armed	1506:6:45331:45348	3919851	0	True				
ANR	3919882	PtrMemberAccess	auto_global -> armed		3919851	0					
ANR	3919883	Identifier	auto_global		3919851	0					
ANR	3919884	Identifier	armed		3919851	1					
ANR	3919885	CompoundStatement		5:26:144:144	3919851	1					
ANR	3919886	ExpressionStatement	auto_global -> armed = auto_global -> auto_global_callback ( auto_global -> name )	1507:3:45356:45429	3919851	0	True				
ANR	3919887	AssignmentExpression	auto_global -> armed = auto_global -> auto_global_callback ( auto_global -> name )		3919851	0		=			
ANR	3919888	PtrMemberAccess	auto_global -> armed		3919851	0					
ANR	3919889	Identifier	auto_global		3919851	0					
ANR	3919890	Identifier	armed		3919851	1					
ANR	3919891	CallExpression	auto_global -> auto_global_callback ( auto_global -> name )		3919851	1					
ANR	3919892	Callee	auto_global -> auto_global_callback		3919851	0					
ANR	3919893	PtrMemberAccess	auto_global -> auto_global_callback		3919851	0					
ANR	3919894	Identifier	auto_global		3919851	0					
ANR	3919895	Identifier	auto_global_callback		3919851	1					
ANR	3919896	ArgumentList	auto_global -> name		3919851	1					
ANR	3919897	Argument	auto_global -> name		3919851	0					
ANR	3919898	PtrMemberAccess	auto_global -> name		3919851	0					
ANR	3919899	Identifier	auto_global		3919851	0					
ANR	3919900	Identifier	name		3919851	1					
ANR	3919901	ReturnStatement	return 1 ;	1509:2:45437:45445	3919851	1	True				
ANR	3919902	PrimaryExpression	1		3919851	0					
ANR	3919903	ReturnStatement	return 0 ;	1511:1:45451:45459	3919851	2	True				
ANR	3919904	PrimaryExpression	0		3919851	0					
ANR	3919905	ReturnType	zend_bool		3919851	1					
ANR	3919906	Identifier	zend_is_auto_global_str		3919851	2					
ANR	3919907	ParameterList	"char * name , size_t len"		3919851	3					
ANR	3919908	Parameter	char * name	1502:34:45172:45181	3919851	0	True				
ANR	3919909	ParameterType	char *		3919851	0					
ANR	3919910	Identifier	name		3919851	1					
ANR	3919911	Parameter	size_t len	1502:46:45184:45193	3919851	1	True				
ANR	3919912	ParameterType	size_t		3919851	0					
ANR	3919913	Identifier	len		3919851	1					
ANR	3919914	CFGEntryNode	ENTRY		3919851		True				
ANR	3919915	CFGExitNode	EXIT		3919851		True				
ANR	3919916	Symbol	auto_global -> auto_global_callback		3919851						
ANR	3919917	Symbol	NULL		3919851						
ANR	3919918	Symbol	len		3919851						
ANR	3919919	Symbol	CG		3919851						
ANR	3919920	Symbol	auto_global -> armed		3919851						
ANR	3919921	Symbol	* auto_global		3919851						
ANR	3919922	Symbol	auto_global -> name		3919851						
ANR	3919923	Symbol	auto_global		3919851						
ANR	3919924	Symbol	name		3919851						
ANR	3919925	Symbol	zend_hash_str_find_ptr		3919851						
ANR	3919926	Symbol	auto_globals		3919851						
ANR	3919927	Function	zend_is_auto_global	1515:0:45474:45779							
ANR	3919928	FunctionDef	zend_is_auto_global (zend_string * name)		3919927	0					
ANR	3919929	CompoundStatement		1516:0:45533:45779	3919927	0					
ANR	3919930	IdentifierDeclStatement	zend_auto_global * auto_global ;	1517:1:45536:45565	3919927	0	True				
ANR	3919931	IdentifierDecl	* auto_global		3919927	0					
ANR	3919932	IdentifierDeclType	zend_auto_global *		3919927	0					
ANR	3919933	Identifier	auto_global		3919927	1					
ANR	3919934	IfStatement	"if ( ( auto_global = zend_hash_find_ptr ( CG ( auto_globals ) , name ) ) != NULL )"		3919927	1					
ANR	3919935	Condition	"( auto_global = zend_hash_find_ptr ( CG ( auto_globals ) , name ) ) != NULL"	1519:5:45573:45638	3919927	0	True				
ANR	3919936	EqualityExpression	"( auto_global = zend_hash_find_ptr ( CG ( auto_globals ) , name ) ) != NULL"		3919927	0		!=			
ANR	3919937	AssignmentExpression	"auto_global = zend_hash_find_ptr ( CG ( auto_globals ) , name )"		3919927	0		=			
ANR	3919938	Identifier	auto_global		3919927	0					
ANR	3919939	CallExpression	"zend_hash_find_ptr ( CG ( auto_globals ) , name )"		3919927	1					
ANR	3919940	Callee	zend_hash_find_ptr		3919927	0					
ANR	3919941	Identifier	zend_hash_find_ptr		3919927	0					
ANR	3919942	ArgumentList	CG ( auto_globals )		3919927	1					
ANR	3919943	Argument	CG ( auto_globals )		3919927	0					
ANR	3919944	CallExpression	CG ( auto_globals )		3919927	0					
ANR	3919945	Callee	CG		3919927	0					
ANR	3919946	Identifier	CG		3919927	0					
ANR	3919947	ArgumentList	auto_globals		3919927	1					
ANR	3919948	Argument	auto_globals		3919927	0					
ANR	3919949	Identifier	auto_globals		3919927	0					
ANR	3919950	Argument	name		3919927	1					
ANR	3919951	Identifier	name		3919927	0					
ANR	3919952	Identifier	NULL		3919927	1					
ANR	3919953	CompoundStatement		4:73:107:107	3919927	1					
ANR	3919954	IfStatement	if ( auto_global -> armed )		3919927	0					
ANR	3919955	Condition	auto_global -> armed	1520:6:45649:45666	3919927	0	True				
ANR	3919956	PtrMemberAccess	auto_global -> armed		3919927	0					
ANR	3919957	Identifier	auto_global		3919927	0					
ANR	3919958	Identifier	armed		3919927	1					
ANR	3919959	CompoundStatement		5:26:135:135	3919927	1					
ANR	3919960	ExpressionStatement	auto_global -> armed = auto_global -> auto_global_callback ( auto_global -> name )	1521:3:45674:45747	3919927	0	True				
ANR	3919961	AssignmentExpression	auto_global -> armed = auto_global -> auto_global_callback ( auto_global -> name )		3919927	0		=			
ANR	3919962	PtrMemberAccess	auto_global -> armed		3919927	0					
ANR	3919963	Identifier	auto_global		3919927	0					
ANR	3919964	Identifier	armed		3919927	1					
ANR	3919965	CallExpression	auto_global -> auto_global_callback ( auto_global -> name )		3919927	1					
ANR	3919966	Callee	auto_global -> auto_global_callback		3919927	0					
ANR	3919967	PtrMemberAccess	auto_global -> auto_global_callback		3919927	0					
ANR	3919968	Identifier	auto_global		3919927	0					
ANR	3919969	Identifier	auto_global_callback		3919927	1					
ANR	3919970	ArgumentList	auto_global -> name		3919927	1					
ANR	3919971	Argument	auto_global -> name		3919927	0					
ANR	3919972	PtrMemberAccess	auto_global -> name		3919927	0					
ANR	3919973	Identifier	auto_global		3919927	0					
ANR	3919974	Identifier	name		3919927	1					
ANR	3919975	ReturnStatement	return 1 ;	1523:2:45755:45763	3919927	1	True				
ANR	3919976	PrimaryExpression	1		3919927	0					
ANR	3919977	ReturnStatement	return 0 ;	1525:1:45769:45777	3919927	2	True				
ANR	3919978	PrimaryExpression	0		3919927	0					
ANR	3919979	ReturnType	zend_bool		3919927	1					
ANR	3919980	Identifier	zend_is_auto_global		3919927	2					
ANR	3919981	ParameterList	zend_string * name		3919927	3					
ANR	3919982	Parameter	zend_string * name	1515:30:45504:45520	3919927	0	True				
ANR	3919983	ParameterType	zend_string *		3919927	0					
ANR	3919984	Identifier	name		3919927	1					
ANR	3919985	CFGEntryNode	ENTRY		3919927		True				
ANR	3919986	CFGExitNode	EXIT		3919927		True				
ANR	3919987	Symbol	auto_global -> auto_global_callback		3919927						
ANR	3919988	Symbol	NULL		3919927						
ANR	3919989	Symbol	CG		3919927						
ANR	3919990	Symbol	* auto_global		3919927						
ANR	3919991	Symbol	auto_global -> armed		3919927						
ANR	3919992	Symbol	auto_global -> name		3919927						
ANR	3919993	Symbol	auto_global		3919927						
ANR	3919994	Symbol	name		3919927						
ANR	3919995	Symbol	zend_hash_find_ptr		3919927						
ANR	3919996	Symbol	auto_globals		3919927						
ANR	3919997	Function	zend_register_auto_global	1529:0:45792:46274							
ANR	3919998	FunctionDef	"zend_register_auto_global (zend_string * name , zend_bool jit , zend_auto_global_callback auto_global_callback)"		3919997	0					
ANR	3919999	CompoundStatement		1530:0:45914:46274	3919997	0					
ANR	3920000	IdentifierDeclStatement	zend_auto_global auto_global ;	1531:1:45917:45945	3919997	0	True				
ANR	3920001	IdentifierDecl	auto_global		3919997	0					
ANR	3920002	IdentifierDeclType	zend_auto_global		3919997	0					
ANR	3920003	Identifier	auto_global		3919997	1					
ANR	3920004	IdentifierDeclStatement	int retval ;	1532:1:45948:45958	3919997	1	True				
ANR	3920005	IdentifierDecl	retval		3919997	0					
ANR	3920006	IdentifierDeclType	int		3919997	0					
ANR	3920007	Identifier	retval		3919997	1					
ANR	3920008	ExpressionStatement	auto_global . name = zend_new_interned_string ( name )	1534:1:45962:46011	3919997	2	True				
ANR	3920009	AssignmentExpression	auto_global . name = zend_new_interned_string ( name )		3919997	0		=			
ANR	3920010	MemberAccess	auto_global . name		3919997	0					
ANR	3920011	Identifier	auto_global		3919997	0					
ANR	3920012	Identifier	name		3919997	1					
ANR	3920013	CallExpression	zend_new_interned_string ( name )		3919997	1					
ANR	3920014	Callee	zend_new_interned_string		3919997	0					
ANR	3920015	Identifier	zend_new_interned_string		3919997	0					
ANR	3920016	ArgumentList	name		3919997	1					
ANR	3920017	Argument	name		3919997	0					
ANR	3920018	Identifier	name		3919997	0					
ANR	3920019	ExpressionStatement	auto_global . auto_global_callback = auto_global_callback	1535:1:46014:46069	3919997	3	True				
ANR	3920020	AssignmentExpression	auto_global . auto_global_callback = auto_global_callback		3919997	0		=			
ANR	3920021	MemberAccess	auto_global . auto_global_callback		3919997	0					
ANR	3920022	Identifier	auto_global		3919997	0					
ANR	3920023	Identifier	auto_global_callback		3919997	1					
ANR	3920024	Identifier	auto_global_callback		3919997	1					
ANR	3920025	ExpressionStatement	auto_global . jit = jit	1536:1:46072:46093	3919997	4	True				
ANR	3920026	AssignmentExpression	auto_global . jit = jit		3919997	0		=			
ANR	3920027	MemberAccess	auto_global . jit		3919997	0					
ANR	3920028	Identifier	auto_global		3919997	0					
ANR	3920029	Identifier	jit		3919997	1					
ANR	3920030	Identifier	jit		3919997	1					
ANR	3920031	ExpressionStatement	"retval = zend_hash_add_mem ( CG ( auto_globals ) , auto_global . name , & auto_global , sizeof ( zend_auto_global ) ) != NULL ? SUCCESS : FAILURE"	1538:1:46097:46227	3919997	5	True				
ANR	3920032	AssignmentExpression	"retval = zend_hash_add_mem ( CG ( auto_globals ) , auto_global . name , & auto_global , sizeof ( zend_auto_global ) ) != NULL ? SUCCESS : FAILURE"		3919997	0		=			
ANR	3920033	Identifier	retval		3919997	0					
ANR	3920034	ConditionalExpression	"zend_hash_add_mem ( CG ( auto_globals ) , auto_global . name , & auto_global , sizeof ( zend_auto_global ) ) != NULL ? SUCCESS : FAILURE"		3919997	1					
ANR	3920035	Condition	"zend_hash_add_mem ( CG ( auto_globals ) , auto_global . name , & auto_global , sizeof ( zend_auto_global ) ) != NULL"		3919997	0					
ANR	3920036	EqualityExpression	"zend_hash_add_mem ( CG ( auto_globals ) , auto_global . name , & auto_global , sizeof ( zend_auto_global ) ) != NULL"		3919997	0		!=			
ANR	3920037	CallExpression	"zend_hash_add_mem ( CG ( auto_globals ) , auto_global . name , & auto_global , sizeof ( zend_auto_global ) )"		3919997	0					
ANR	3920038	Callee	zend_hash_add_mem		3919997	0					
ANR	3920039	Identifier	zend_hash_add_mem		3919997	0					
ANR	3920040	ArgumentList	CG ( auto_globals )		3919997	1					
ANR	3920041	Argument	CG ( auto_globals )		3919997	0					
ANR	3920042	CallExpression	CG ( auto_globals )		3919997	0					
ANR	3920043	Callee	CG		3919997	0					
ANR	3920044	Identifier	CG		3919997	0					
ANR	3920045	ArgumentList	auto_globals		3919997	1					
ANR	3920046	Argument	auto_globals		3919997	0					
ANR	3920047	Identifier	auto_globals		3919997	0					
ANR	3920048	Argument	auto_global . name		3919997	1					
ANR	3920049	MemberAccess	auto_global . name		3919997	0					
ANR	3920050	Identifier	auto_global		3919997	0					
ANR	3920051	Identifier	name		3919997	1					
ANR	3920052	Argument	& auto_global		3919997	2					
ANR	3920053	UnaryOperationExpression	& auto_global		3919997	0					
ANR	3920054	UnaryOperator	&		3919997	0					
ANR	3920055	Identifier	auto_global		3919997	1					
ANR	3920056	Argument	sizeof ( zend_auto_global )		3919997	3					
ANR	3920057	SizeofExpression	sizeof ( zend_auto_global )		3919997	0					
ANR	3920058	Sizeof	sizeof		3919997	0					
ANR	3920059	SizeofOperand	zend_auto_global		3919997	1					
ANR	3920060	Identifier	NULL		3919997	1					
ANR	3920061	Identifier	SUCCESS		3919997	1					
ANR	3920062	Identifier	FAILURE		3919997	2					
ANR	3920063	ExpressionStatement	zend_string_release ( name )	1540:1:46231:46256	3919997	6	True				
ANR	3920064	CallExpression	zend_string_release ( name )		3919997	0					
ANR	3920065	Callee	zend_string_release		3919997	0					
ANR	3920066	Identifier	zend_string_release		3919997	0					
ANR	3920067	ArgumentList	name		3919997	1					
ANR	3920068	Argument	name		3919997	0					
ANR	3920069	Identifier	name		3919997	0					
ANR	3920070	ReturnStatement	return retval ;	1541:1:46259:46272	3919997	7	True				
ANR	3920071	Identifier	retval		3919997	0					
ANR	3920072	ReturnType	int		3919997	1					
ANR	3920073	Identifier	zend_register_auto_global		3919997	2					
ANR	3920074	ParameterList	"zend_string * name , zend_bool jit , zend_auto_global_callback auto_global_callback"		3919997	3					
ANR	3920075	Parameter	zend_string * name	1529:30:45822:45838	3919997	0	True				
ANR	3920076	ParameterType	zend_string *		3919997	0					
ANR	3920077	Identifier	name		3919997	1					
ANR	3920078	Parameter	zend_bool jit	1529:49:45841:45853	3919997	1	True				
ANR	3920079	ParameterType	zend_bool		3919997	0					
ANR	3920080	Identifier	jit		3919997	1					
ANR	3920081	Parameter	zend_auto_global_callback auto_global_callback	1529:64:45856:45901	3919997	2	True				
ANR	3920082	ParameterType	zend_auto_global_callback		3919997	0					
ANR	3920083	Identifier	auto_global_callback		3919997	1					
ANR	3920084	CFGEntryNode	ENTRY		3919997		True				
ANR	3920085	CFGExitNode	EXIT		3919997		True				
ANR	3920086	Symbol	zend_hash_add_mem		3919997						
ANR	3920087	Symbol	NULL		3919997						
ANR	3920088	Symbol	SUCCESS		3919997						
ANR	3920089	Symbol	CG		3919997						
ANR	3920090	Symbol	& auto_global		3919997						
ANR	3920091	Symbol	auto_global		3919997						
ANR	3920092	Symbol	auto_global . name		3919997						
ANR	3920093	Symbol	FAILURE		3919997						
ANR	3920094	Symbol	retval		3919997						
ANR	3920095	Symbol	auto_global . auto_global_callback		3919997						
ANR	3920096	Symbol	auto_globals		3919997						
ANR	3920097	Symbol	auto_global_callback		3919997						
ANR	3920098	Symbol	zend_new_interned_string		3919997						
ANR	3920099	Symbol	jit		3919997						
ANR	3920100	Symbol	auto_global . jit		3919997						
ANR	3920101	Symbol	name		3919997						
ANR	3920102	Function	zend_activate_auto_globals	1545:0:46287:46686							
ANR	3920103	FunctionDef	zend_activate_auto_globals ()		3920102	0					
ANR	3920104	CompoundStatement		1546:0:46344:46686	3920102	0					
ANR	3920105	IdentifierDeclStatement	zend_auto_global * auto_global ;	1547:1:46347:46376	3920102	0	True				
ANR	3920106	IdentifierDecl	* auto_global		3920102	0					
ANR	3920107	IdentifierDeclType	zend_auto_global *		3920102	0					
ANR	3920108	Identifier	auto_global		3920102	1					
ANR	3920109	Statement	ZEND_HASH_FOREACH_PTR	1549:1:46380:46400	3920102	1	True				
ANR	3920110	Statement	(	1549:22:46401:46401	3920102	2	True				
ANR	3920111	Statement	CG	1549:23:46402:46403	3920102	3	True				
ANR	3920112	Statement	(	1549:25:46404:46404	3920102	4	True				
ANR	3920113	Statement	auto_globals	1549:26:46405:46416	3920102	5	True				
ANR	3920114	Statement	)	1549:38:46417:46417	3920102	6	True				
ANR	3920115	Statement	","	1549:39:46418:46418	3920102	7	True				
ANR	3920116	Statement	auto_global	1549:41:46420:46430	3920102	8	True				
ANR	3920117	Statement	)	1549:52:46431:46431	3920102	9	True				
ANR	3920118	CompoundStatement		4:54:88:88	3920102	10					
ANR	3920119	IfStatement	if ( auto_global -> jit )		3920102	0					
ANR	3920120	Condition	auto_global -> jit	1550:6:46441:46456	3920102	0	True				
ANR	3920121	PtrMemberAccess	auto_global -> jit		3920102	0					
ANR	3920122	Identifier	auto_global		3920102	0					
ANR	3920123	Identifier	jit		3920102	1					
ANR	3920124	CompoundStatement		5:24:114:114	3920102	1					
ANR	3920125	ExpressionStatement	auto_global -> armed = 1	1551:3:46464:46486	3920102	0	True				
ANR	3920126	AssignmentExpression	auto_global -> armed = 1		3920102	0		=			
ANR	3920127	PtrMemberAccess	auto_global -> armed		3920102	0					
ANR	3920128	Identifier	auto_global		3920102	0					
ANR	3920129	Identifier	armed		3920102	1					
ANR	3920130	PrimaryExpression	1		3920102	1					
ANR	3920131	ElseStatement	else		3920102	0					
ANR	3920132	IfStatement	if ( auto_global -> auto_global_callback )		3920102	0					
ANR	3920133	Condition	auto_global -> auto_global_callback	1552:13:46501:46533	3920102	0	True				
ANR	3920134	PtrMemberAccess	auto_global -> auto_global_callback		3920102	0					
ANR	3920135	Identifier	auto_global		3920102	0					
ANR	3920136	Identifier	auto_global_callback		3920102	1					
ANR	3920137	CompoundStatement		7:48:191:191	3920102	1					
ANR	3920138	ExpressionStatement	auto_global -> armed = auto_global -> auto_global_callback ( auto_global -> name )	1553:3:46541:46614	3920102	0	True				
ANR	3920139	AssignmentExpression	auto_global -> armed = auto_global -> auto_global_callback ( auto_global -> name )		3920102	0		=			
ANR	3920140	PtrMemberAccess	auto_global -> armed		3920102	0					
ANR	3920141	Identifier	auto_global		3920102	0					
ANR	3920142	Identifier	armed		3920102	1					
ANR	3920143	CallExpression	auto_global -> auto_global_callback ( auto_global -> name )		3920102	1					
ANR	3920144	Callee	auto_global -> auto_global_callback		3920102	0					
ANR	3920145	PtrMemberAccess	auto_global -> auto_global_callback		3920102	0					
ANR	3920146	Identifier	auto_global		3920102	0					
ANR	3920147	Identifier	auto_global_callback		3920102	1					
ANR	3920148	ArgumentList	auto_global -> name		3920102	1					
ANR	3920149	Argument	auto_global -> name		3920102	0					
ANR	3920150	PtrMemberAccess	auto_global -> name		3920102	0					
ANR	3920151	Identifier	auto_global		3920102	0					
ANR	3920152	Identifier	name		3920102	1					
ANR	3920153	ElseStatement	else		3920102	0					
ANR	3920154	CompoundStatement		9:9:280:280	3920102	0					
ANR	3920155	ExpressionStatement	auto_global -> armed = 0	1555:3:46630:46652	3920102	0	True				
ANR	3920156	AssignmentExpression	auto_global -> armed = 0		3920102	0		=			
ANR	3920157	PtrMemberAccess	auto_global -> armed		3920102	0					
ANR	3920158	Identifier	auto_global		3920102	0					
ANR	3920159	Identifier	armed		3920102	1					
ANR	3920160	PrimaryExpression	0		3920102	1					
ANR	3920161	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1557:3:46661:46684	3920102	11	True				
ANR	3920162	CallExpression	ZEND_HASH_FOREACH_END ( )		3920102	0					
ANR	3920163	Callee	ZEND_HASH_FOREACH_END		3920102	0					
ANR	3920164	Identifier	ZEND_HASH_FOREACH_END		3920102	0					
ANR	3920165	ArgumentList			3920102	1					
ANR	3920166	ReturnType	ZEND_API void		3920102	1					
ANR	3920167	Identifier	zend_activate_auto_globals		3920102	2					
ANR	3920168	ParameterList			3920102	3					
ANR	3920169	CFGEntryNode	ENTRY		3920102		True				
ANR	3920170	CFGExitNode	EXIT		3920102		True				
ANR	3920171	Symbol	auto_global -> auto_global_callback		3920102						
ANR	3920172	Symbol	* auto_global		3920102						
ANR	3920173	Symbol	auto_global -> armed		3920102						
ANR	3920174	Symbol	auto_global -> name		3920102						
ANR	3920175	Symbol	auto_global		3920102						
ANR	3920176	Symbol	auto_global -> jit		3920102						
ANR	3920177	Function	zendlex	1561:0:46699:47379							
ANR	3920178	FunctionDef	zendlex (zend_parser_stack_elem * elem)		3920177	0					
ANR	3920179	CompoundStatement		1562:0:46751:47379	3920177	0					
ANR	3920180	IdentifierDeclStatement	zval zv ;	1563:1:46754:46761	3920177	0	True				
ANR	3920181	IdentifierDecl	zv		3920177	0					
ANR	3920182	IdentifierDeclType	zval		3920177	0					
ANR	3920183	Identifier	zv		3920177	1					
ANR	3920184	IdentifierDeclStatement	int retval ;	1564:1:46764:46774	3920177	1	True				
ANR	3920185	IdentifierDecl	retval		3920177	0					
ANR	3920186	IdentifierDeclType	int		3920177	0					
ANR	3920187	Identifier	retval		3920177	1					
ANR	3920188	IfStatement	if ( CG ( increment_lineno ) )		3920177	2					
ANR	3920189	Condition	CG ( increment_lineno )	1566:5:46782:46801	3920177	0	True				
ANR	3920190	CallExpression	CG ( increment_lineno )		3920177	0					
ANR	3920191	Callee	CG		3920177	0					
ANR	3920192	Identifier	CG		3920177	0					
ANR	3920193	ArgumentList	increment_lineno		3920177	1					
ANR	3920194	Argument	increment_lineno		3920177	0					
ANR	3920195	Identifier	increment_lineno		3920177	0					
ANR	3920196	CompoundStatement		5:27:52:52	3920177	1					
ANR	3920197	ExpressionStatement	CG ( zend_lineno ) ++	1567:2:46808:46825	3920177	0	True				
ANR	3920198	PostIncDecOperationExpression	CG ( zend_lineno ) ++		3920177	0					
ANR	3920199	CallExpression	CG ( zend_lineno )		3920177	0					
ANR	3920200	Callee	CG		3920177	0					
ANR	3920201	Identifier	CG		3920177	0					
ANR	3920202	ArgumentList	zend_lineno		3920177	1					
ANR	3920203	Argument	zend_lineno		3920177	0					
ANR	3920204	Identifier	zend_lineno		3920177	0					
ANR	3920205	IncDec	++		3920177	1					
ANR	3920206	ExpressionStatement	CG ( increment_lineno ) = 0	1568:2:46829:46853	3920177	1	True				
ANR	3920207	AssignmentExpression	CG ( increment_lineno ) = 0		3920177	0		=			
ANR	3920208	CallExpression	CG ( increment_lineno )		3920177	0					
ANR	3920209	Callee	CG		3920177	0					
ANR	3920210	Identifier	CG		3920177	0					
ANR	3920211	ArgumentList	increment_lineno		3920177	1					
ANR	3920212	Argument	increment_lineno		3920177	0					
ANR	3920213	Identifier	increment_lineno		3920177	0					
ANR	3920214	PrimaryExpression	0		3920177	1					
ANR	3920215	Label	again :	1571:0:46859:46864	3920177	3	True				
ANR	3920216	Identifier	again		3920177	0					
ANR	3920217	ExpressionStatement	ZVAL_UNDEF ( & zv )	1572:1:46867:46882	3920177	4	True				
ANR	3920218	CallExpression	ZVAL_UNDEF ( & zv )		3920177	0					
ANR	3920219	Callee	ZVAL_UNDEF		3920177	0					
ANR	3920220	Identifier	ZVAL_UNDEF		3920177	0					
ANR	3920221	ArgumentList	& zv		3920177	1					
ANR	3920222	Argument	& zv		3920177	0					
ANR	3920223	UnaryOperationExpression	& zv		3920177	0					
ANR	3920224	UnaryOperator	&		3920177	0					
ANR	3920225	Identifier	zv		3920177	1					
ANR	3920226	ExpressionStatement	retval = lex_scan ( & zv )	1573:1:46885:46907	3920177	5	True				
ANR	3920227	AssignmentExpression	retval = lex_scan ( & zv )		3920177	0		=			
ANR	3920228	Identifier	retval		3920177	0					
ANR	3920229	CallExpression	lex_scan ( & zv )		3920177	1					
ANR	3920230	Callee	lex_scan		3920177	0					
ANR	3920231	Identifier	lex_scan		3920177	0					
ANR	3920232	ArgumentList	& zv		3920177	1					
ANR	3920233	Argument	& zv		3920177	0					
ANR	3920234	UnaryOperationExpression	& zv		3920177	0					
ANR	3920235	UnaryOperator	&		3920177	0					
ANR	3920236	Identifier	zv		3920177	1					
ANR	3920237	IfStatement	if ( EG ( exception ) )		3920177	6					
ANR	3920238	Condition	EG ( exception )	1574:5:46914:46926	3920177	0	True				
ANR	3920239	CallExpression	EG ( exception )		3920177	0					
ANR	3920240	Callee	EG		3920177	0					
ANR	3920241	Identifier	EG		3920177	0					
ANR	3920242	ArgumentList	exception		3920177	1					
ANR	3920243	Argument	exception		3920177	0					
ANR	3920244	Identifier	exception		3920177	0					
ANR	3920245	CompoundStatement		13:20:177:177	3920177	1					
ANR	3920246	ReturnStatement	return T_ERROR ;	1575:2:46933:46947	3920177	0	True				
ANR	3920247	Identifier	T_ERROR		3920177	0					
ANR	3920248	SwitchStatement	switch ( retval )		3920177	7					
ANR	3920249	Condition	retval	1578:9:46962:46967	3920177	0	True				
ANR	3920250	Identifier	retval		3920177	0					
ANR	3920251	CompoundStatement		17:17:218:218	3920177	1					
ANR	3920252	Label	case T_COMMENT :	1579:2:46974:46988	3920177	0	True				
ANR	3920253	Identifier	T_COMMENT		3920177	0					
ANR	3920254	Label	case T_DOC_COMMENT :	1580:2:46992:47010	3920177	1	True				
ANR	3920255	Identifier	T_DOC_COMMENT		3920177	0					
ANR	3920256	Label	case T_OPEN_TAG :	1581:2:47014:47029	3920177	2	True				
ANR	3920257	Identifier	T_OPEN_TAG		3920177	0					
ANR	3920258	Label	case T_WHITESPACE :	1582:2:47033:47050	3920177	3	True				
ANR	3920259	Identifier	T_WHITESPACE		3920177	0					
ANR	3920260	GotoStatement	goto again ;	1583:3:47055:47065	3920177	4	True				
ANR	3920261	Identifier	again		3920177	0					
ANR	3920262	Label	case T_CLOSE_TAG :	1585:2:47070:47086	3920177	5	True				
ANR	3920263	Identifier	T_CLOSE_TAG		3920177	0					
ANR	3920264	IfStatement	if ( LANG_SCNG ( yy_text ) [ LANG_SCNG ( yy_leng ) - 1 ] != '>' )		3920177	6					
ANR	3920265	Condition	LANG_SCNG ( yy_text ) [ LANG_SCNG ( yy_leng ) - 1 ] != '>'	1586:7:47095:47141	3920177	0	True				
ANR	3920266	EqualityExpression	LANG_SCNG ( yy_text ) [ LANG_SCNG ( yy_leng ) - 1 ] != '>'		3920177	0		!=			
ANR	3920267	ArrayIndexing	LANG_SCNG ( yy_text ) [ LANG_SCNG ( yy_leng ) - 1 ]		3920177	0					
ANR	3920268	CallExpression	LANG_SCNG ( yy_text )		3920177	0					
ANR	3920269	Callee	LANG_SCNG		3920177	0					
ANR	3920270	Identifier	LANG_SCNG		3920177	0					
ANR	3920271	ArgumentList	yy_text		3920177	1					
ANR	3920272	Argument	yy_text		3920177	0					
ANR	3920273	Identifier	yy_text		3920177	0					
ANR	3920274	AdditiveExpression	LANG_SCNG ( yy_leng ) - 1		3920177	1		-			
ANR	3920275	CallExpression	LANG_SCNG ( yy_leng )		3920177	0					
ANR	3920276	Callee	LANG_SCNG		3920177	0					
ANR	3920277	Identifier	LANG_SCNG		3920177	0					
ANR	3920278	ArgumentList	yy_leng		3920177	1					
ANR	3920279	Argument	yy_leng		3920177	0					
ANR	3920280	Identifier	yy_leng		3920177	0					
ANR	3920281	PrimaryExpression	1		3920177	1					
ANR	3920282	PrimaryExpression	'>'		3920177	1					
ANR	3920283	CompoundStatement		25:56:392:392	3920177	1					
ANR	3920284	ExpressionStatement	CG ( increment_lineno ) = 1	1587:4:47150:47174	3920177	0	True				
ANR	3920285	AssignmentExpression	CG ( increment_lineno ) = 1		3920177	0		=			
ANR	3920286	CallExpression	CG ( increment_lineno )		3920177	0					
ANR	3920287	Callee	CG		3920177	0					
ANR	3920288	Identifier	CG		3920177	0					
ANR	3920289	ArgumentList	increment_lineno		3920177	1					
ANR	3920290	Argument	increment_lineno		3920177	0					
ANR	3920291	Identifier	increment_lineno		3920177	0					
ANR	3920292	PrimaryExpression	1		3920177	1					
ANR	3920293	ExpressionStatement	retval = ';'	1589:3:47184:47196	3920177	7	True				
ANR	3920294	AssignmentExpression	retval = ';'		3920177	0		=			
ANR	3920295	Identifier	retval		3920177	0					
ANR	3920296	PrimaryExpression	';'		3920177	1					
ANR	3920297	BreakStatement	break ;	1590:3:47218:47223	3920177	8	True				
ANR	3920298	Label	case T_OPEN_TAG_WITH_ECHO :	1591:2:47227:47252	3920177	9	True				
ANR	3920299	Identifier	T_OPEN_TAG_WITH_ECHO		3920177	0					
ANR	3920300	ExpressionStatement	retval = T_ECHO	1592:3:47257:47272	3920177	10	True				
ANR	3920301	AssignmentExpression	retval = T_ECHO		3920177	0		=			
ANR	3920302	Identifier	retval		3920177	0					
ANR	3920303	Identifier	T_ECHO		3920177	1					
ANR	3920304	BreakStatement	break ;	1593:3:47277:47282	3920177	11	True				
ANR	3920305	IfStatement	if ( Z_TYPE ( zv ) != IS_UNDEF )		3920177	8					
ANR	3920306	Condition	Z_TYPE ( zv ) != IS_UNDEF	1595:5:47292:47313	3920177	0	True				
ANR	3920307	EqualityExpression	Z_TYPE ( zv ) != IS_UNDEF		3920177	0		!=			
ANR	3920308	CallExpression	Z_TYPE ( zv )		3920177	0					
ANR	3920309	Callee	Z_TYPE		3920177	0					
ANR	3920310	Identifier	Z_TYPE		3920177	0					
ANR	3920311	ArgumentList	zv		3920177	1					
ANR	3920312	Argument	zv		3920177	0					
ANR	3920313	Identifier	zv		3920177	0					
ANR	3920314	Identifier	IS_UNDEF		3920177	1					
ANR	3920315	CompoundStatement		34:29:564:564	3920177	1					
ANR	3920316	ExpressionStatement	elem -> ast = zend_ast_create_zval ( & zv )	1596:2:47320:47357	3920177	0	True				
ANR	3920317	AssignmentExpression	elem -> ast = zend_ast_create_zval ( & zv )		3920177	0		=			
ANR	3920318	PtrMemberAccess	elem -> ast		3920177	0					
ANR	3920319	Identifier	elem		3920177	0					
ANR	3920320	Identifier	ast		3920177	1					
ANR	3920321	CallExpression	zend_ast_create_zval ( & zv )		3920177	1					
ANR	3920322	Callee	zend_ast_create_zval		3920177	0					
ANR	3920323	Identifier	zend_ast_create_zval		3920177	0					
ANR	3920324	ArgumentList	& zv		3920177	1					
ANR	3920325	Argument	& zv		3920177	0					
ANR	3920326	UnaryOperationExpression	& zv		3920177	0					
ANR	3920327	UnaryOperator	&		3920177	0					
ANR	3920328	Identifier	zv		3920177	1					
ANR	3920329	ReturnStatement	return retval ;	1599:1:47364:47377	3920177	9	True				
ANR	3920330	Identifier	retval		3920177	0					
ANR	3920331	ReturnType	int		3920177	1					
ANR	3920332	Identifier	zendlex		3920177	2					
ANR	3920333	ParameterList	zend_parser_stack_elem * elem		3920177	3					
ANR	3920334	Parameter	zend_parser_stack_elem * elem	1561:12:46711:46738	3920177	0	True				
ANR	3920335	ParameterType	zend_parser_stack_elem *		3920177	0					
ANR	3920336	Identifier	elem		3920177	1					
ANR	3920337	CFGEntryNode	ENTRY		3920177		True				
ANR	3920338	CFGExitNode	EXIT		3920177		True				
ANR	3920339	Symbol	elem		3920177						
ANR	3920340	Symbol	exception		3920177						
ANR	3920341	Symbol	EG		3920177						
ANR	3920342	Symbol	T_ECHO		3920177						
ANR	3920343	Symbol	CG		3920177						
ANR	3920344	Symbol	* LANG_SCNG		3920177						
ANR	3920345	Symbol	zend_ast_create_zval		3920177						
ANR	3920346	Symbol	elem -> ast		3920177						
ANR	3920347	Symbol	& zv		3920177						
ANR	3920348	Symbol	T_ERROR		3920177						
ANR	3920349	Symbol	yy_leng		3920177						
ANR	3920350	Symbol	Z_TYPE		3920177						
ANR	3920351	Symbol	retval		3920177						
ANR	3920352	Symbol	yy_text		3920177						
ANR	3920353	Symbol	increment_lineno		3920177						
ANR	3920354	Symbol	LANG_SCNG		3920177						
ANR	3920355	Symbol	lex_scan		3920177						
ANR	3920356	Symbol	zend_lineno		3920177						
ANR	3920357	Symbol	* elem		3920177						
ANR	3920358	Symbol	zv		3920177						
ANR	3920359	Symbol	IS_UNDEF		3920177						
ANR	3920360	Function	zend_initialize_class_data	1603:0:47392:49757							
ANR	3920361	FunctionDef	"zend_initialize_class_data (zend_class_entry * ce , zend_bool nullify_handlers)"		3920360	0					
ANR	3920362	CompoundStatement		1604:0:47493:49757	3920360	0					
ANR	3920363	IdentifierDeclStatement	zend_bool persistent_hashes = ( ce -> type == ZEND_INTERNAL_CLASS ) ? 1 : 0 ;	1605:1:47496:47567	3920360	0	True				
ANR	3920364	IdentifierDecl	persistent_hashes = ( ce -> type == ZEND_INTERNAL_CLASS ) ? 1 : 0		3920360	0					
ANR	3920365	IdentifierDeclType	zend_bool		3920360	0					
ANR	3920366	Identifier	persistent_hashes		3920360	1					
ANR	3920367	AssignmentExpression	persistent_hashes = ( ce -> type == ZEND_INTERNAL_CLASS ) ? 1 : 0		3920360	2		=			
ANR	3920368	Identifier	persistent_hashes		3920360	0					
ANR	3920369	ConditionalExpression	( ce -> type == ZEND_INTERNAL_CLASS ) ? 1 : 0		3920360	1					
ANR	3920370	Condition	ce -> type == ZEND_INTERNAL_CLASS		3920360	0					
ANR	3920371	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3920360	0		==			
ANR	3920372	PtrMemberAccess	ce -> type		3920360	0					
ANR	3920373	Identifier	ce		3920360	0					
ANR	3920374	Identifier	type		3920360	1					
ANR	3920375	Identifier	ZEND_INTERNAL_CLASS		3920360	1					
ANR	3920376	PrimaryExpression	1		3920360	1					
ANR	3920377	PrimaryExpression	0		3920360	2					
ANR	3920378	IdentifierDeclStatement	dtor_func_t zval_ptr_dtor_func = ( ( persistent_hashes ) ? ZVAL_INTERNAL_PTR_DTOR : ZVAL_PTR_DTOR ) ;	1606:1:47570:47665	3920360	1	True				
ANR	3920379	IdentifierDecl	zval_ptr_dtor_func = ( ( persistent_hashes ) ? ZVAL_INTERNAL_PTR_DTOR : ZVAL_PTR_DTOR )		3920360	0					
ANR	3920380	IdentifierDeclType	dtor_func_t		3920360	0					
ANR	3920381	Identifier	zval_ptr_dtor_func		3920360	1					
ANR	3920382	AssignmentExpression	zval_ptr_dtor_func = ( ( persistent_hashes ) ? ZVAL_INTERNAL_PTR_DTOR : ZVAL_PTR_DTOR )		3920360	2		=			
ANR	3920383	Identifier	zval_ptr_dtor_func		3920360	0					
ANR	3920384	ConditionalExpression	( persistent_hashes ) ? ZVAL_INTERNAL_PTR_DTOR : ZVAL_PTR_DTOR		3920360	1					
ANR	3920385	Condition	persistent_hashes		3920360	0					
ANR	3920386	Identifier	persistent_hashes		3920360	0					
ANR	3920387	Identifier	ZVAL_INTERNAL_PTR_DTOR		3920360	1					
ANR	3920388	Identifier	ZVAL_PTR_DTOR		3920360	2					
ANR	3920389	ExpressionStatement	ce -> refcount = 1	1608:1:47669:47685	3920360	2	True				
ANR	3920390	AssignmentExpression	ce -> refcount = 1		3920360	0		=			
ANR	3920391	PtrMemberAccess	ce -> refcount		3920360	0					
ANR	3920392	Identifier	ce		3920360	0					
ANR	3920393	Identifier	refcount		3920360	1					
ANR	3920394	PrimaryExpression	1		3920360	1					
ANR	3920395	ExpressionStatement	ce -> ce_flags = ZEND_ACC_CONSTANTS_UPDATED	1609:1:47688:47729	3920360	3	True				
ANR	3920396	AssignmentExpression	ce -> ce_flags = ZEND_ACC_CONSTANTS_UPDATED		3920360	0		=			
ANR	3920397	PtrMemberAccess	ce -> ce_flags		3920360	0					
ANR	3920398	Identifier	ce		3920360	0					
ANR	3920399	Identifier	ce_flags		3920360	1					
ANR	3920400	Identifier	ZEND_ACC_CONSTANTS_UPDATED		3920360	1					
ANR	3920401	IfStatement	if ( CG ( compiler_options ) & ZEND_COMPILE_GUARDS )		3920360	4					
ANR	3920402	Condition	CG ( compiler_options ) & ZEND_COMPILE_GUARDS	1611:5:47737:47778	3920360	0	True				
ANR	3920403	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_GUARDS		3920360	0		&			
ANR	3920404	CallExpression	CG ( compiler_options )		3920360	0					
ANR	3920405	Callee	CG		3920360	0					
ANR	3920406	Identifier	CG		3920360	0					
ANR	3920407	ArgumentList	compiler_options		3920360	1					
ANR	3920408	Argument	compiler_options		3920360	0					
ANR	3920409	Identifier	compiler_options		3920360	0					
ANR	3920410	Identifier	ZEND_COMPILE_GUARDS		3920360	1					
ANR	3920411	CompoundStatement		8:49:287:287	3920360	1					
ANR	3920412	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1612:2:47785:47820	3920360	0	True				
ANR	3920413	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		3920360	0		|=			
ANR	3920414	PtrMemberAccess	ce -> ce_flags		3920360	0					
ANR	3920415	Identifier	ce		3920360	0					
ANR	3920416	Identifier	ce_flags		3920360	1					
ANR	3920417	Identifier	ZEND_ACC_USE_GUARDS		3920360	1					
ANR	3920418	ExpressionStatement	ce -> default_properties_table = NULL	1615:1:47827:47862	3920360	5	True				
ANR	3920419	AssignmentExpression	ce -> default_properties_table = NULL		3920360	0		=			
ANR	3920420	PtrMemberAccess	ce -> default_properties_table		3920360	0					
ANR	3920421	Identifier	ce		3920360	0					
ANR	3920422	Identifier	default_properties_table		3920360	1					
ANR	3920423	Identifier	NULL		3920360	1					
ANR	3920424	ExpressionStatement	ce -> default_static_members_table = NULL	1616:1:47865:47904	3920360	6	True				
ANR	3920425	AssignmentExpression	ce -> default_static_members_table = NULL		3920360	0		=			
ANR	3920426	PtrMemberAccess	ce -> default_static_members_table		3920360	0					
ANR	3920427	Identifier	ce		3920360	0					
ANR	3920428	Identifier	default_static_members_table		3920360	1					
ANR	3920429	Identifier	NULL		3920360	1					
ANR	3920430	ExpressionStatement	"zend_hash_init_ex ( & ce -> properties_info , 8 , NULL , ( persistent_hashes ? zend_destroy_property_info_internal : NULL ) , persistent_hashes , 0 )"	1617:1:47907:48043	3920360	7	True				
ANR	3920431	CallExpression	"zend_hash_init_ex ( & ce -> properties_info , 8 , NULL , ( persistent_hashes ? zend_destroy_property_info_internal : NULL ) , persistent_hashes , 0 )"		3920360	0					
ANR	3920432	Callee	zend_hash_init_ex		3920360	0					
ANR	3920433	Identifier	zend_hash_init_ex		3920360	0					
ANR	3920434	ArgumentList	& ce -> properties_info		3920360	1					
ANR	3920435	Argument	& ce -> properties_info		3920360	0					
ANR	3920436	UnaryOperationExpression	& ce -> properties_info		3920360	0					
ANR	3920437	UnaryOperator	&		3920360	0					
ANR	3920438	PtrMemberAccess	ce -> properties_info		3920360	1					
ANR	3920439	Identifier	ce		3920360	0					
ANR	3920440	Identifier	properties_info		3920360	1					
ANR	3920441	Argument	8		3920360	1					
ANR	3920442	PrimaryExpression	8		3920360	0					
ANR	3920443	Argument	NULL		3920360	2					
ANR	3920444	Identifier	NULL		3920360	0					
ANR	3920445	Argument	persistent_hashes ? zend_destroy_property_info_internal : NULL		3920360	3					
ANR	3920446	ConditionalExpression	persistent_hashes ? zend_destroy_property_info_internal : NULL		3920360	0					
ANR	3920447	Condition	persistent_hashes		3920360	0					
ANR	3920448	Identifier	persistent_hashes		3920360	0					
ANR	3920449	Identifier	zend_destroy_property_info_internal		3920360	1					
ANR	3920450	Identifier	NULL		3920360	2					
ANR	3920451	Argument	persistent_hashes		3920360	4					
ANR	3920452	Identifier	persistent_hashes		3920360	0					
ANR	3920453	Argument	0		3920360	5					
ANR	3920454	PrimaryExpression	0		3920360	0					
ANR	3920455	ExpressionStatement	"zend_hash_init_ex ( & ce -> constants_table , 8 , NULL , zval_ptr_dtor_func , persistent_hashes , 0 )"	1618:1:48046:48136	3920360	8	True				
ANR	3920456	CallExpression	"zend_hash_init_ex ( & ce -> constants_table , 8 , NULL , zval_ptr_dtor_func , persistent_hashes , 0 )"		3920360	0					
ANR	3920457	Callee	zend_hash_init_ex		3920360	0					
ANR	3920458	Identifier	zend_hash_init_ex		3920360	0					
ANR	3920459	ArgumentList	& ce -> constants_table		3920360	1					
ANR	3920460	Argument	& ce -> constants_table		3920360	0					
ANR	3920461	UnaryOperationExpression	& ce -> constants_table		3920360	0					
ANR	3920462	UnaryOperator	&		3920360	0					
ANR	3920463	PtrMemberAccess	ce -> constants_table		3920360	1					
ANR	3920464	Identifier	ce		3920360	0					
ANR	3920465	Identifier	constants_table		3920360	1					
ANR	3920466	Argument	8		3920360	1					
ANR	3920467	PrimaryExpression	8		3920360	0					
ANR	3920468	Argument	NULL		3920360	2					
ANR	3920469	Identifier	NULL		3920360	0					
ANR	3920470	Argument	zval_ptr_dtor_func		3920360	3					
ANR	3920471	Identifier	zval_ptr_dtor_func		3920360	0					
ANR	3920472	Argument	persistent_hashes		3920360	4					
ANR	3920473	Identifier	persistent_hashes		3920360	0					
ANR	3920474	Argument	0		3920360	5					
ANR	3920475	PrimaryExpression	0		3920360	0					
ANR	3920476	ExpressionStatement	"zend_hash_init_ex ( & ce -> function_table , 8 , NULL , ZEND_FUNCTION_DTOR , persistent_hashes , 0 )"	1619:1:48139:48228	3920360	9	True				
ANR	3920477	CallExpression	"zend_hash_init_ex ( & ce -> function_table , 8 , NULL , ZEND_FUNCTION_DTOR , persistent_hashes , 0 )"		3920360	0					
ANR	3920478	Callee	zend_hash_init_ex		3920360	0					
ANR	3920479	Identifier	zend_hash_init_ex		3920360	0					
ANR	3920480	ArgumentList	& ce -> function_table		3920360	1					
ANR	3920481	Argument	& ce -> function_table		3920360	0					
ANR	3920482	UnaryOperationExpression	& ce -> function_table		3920360	0					
ANR	3920483	UnaryOperator	&		3920360	0					
ANR	3920484	PtrMemberAccess	ce -> function_table		3920360	1					
ANR	3920485	Identifier	ce		3920360	0					
ANR	3920486	Identifier	function_table		3920360	1					
ANR	3920487	Argument	8		3920360	1					
ANR	3920488	PrimaryExpression	8		3920360	0					
ANR	3920489	Argument	NULL		3920360	2					
ANR	3920490	Identifier	NULL		3920360	0					
ANR	3920491	Argument	ZEND_FUNCTION_DTOR		3920360	3					
ANR	3920492	Identifier	ZEND_FUNCTION_DTOR		3920360	0					
ANR	3920493	Argument	persistent_hashes		3920360	4					
ANR	3920494	Identifier	persistent_hashes		3920360	0					
ANR	3920495	Argument	0		3920360	5					
ANR	3920496	PrimaryExpression	0		3920360	0					
ANR	3920497	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		3920360	10					
ANR	3920498	Condition	ce -> type == ZEND_INTERNAL_CLASS	1621:5:48236:48266	3920360	0	True				
ANR	3920499	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3920360	0		==			
ANR	3920500	PtrMemberAccess	ce -> type		3920360	0					
ANR	3920501	Identifier	ce		3920360	0					
ANR	3920502	Identifier	type		3920360	1					
ANR	3920503	Identifier	ZEND_INTERNAL_CLASS		3920360	1					
ANR	3920504	CompoundStatement		20:2:790:837	3920360	1					
ANR	3920505	IdentifierDeclStatement	int n = zend_hash_num_elements ( CG ( class_table ) ) ;	1623:2:48284:48331	3920360	0	True				
ANR	3920506	IdentifierDecl	n = zend_hash_num_elements ( CG ( class_table ) )		3920360	0					
ANR	3920507	IdentifierDeclType	int		3920360	0					
ANR	3920508	Identifier	n		3920360	1					
ANR	3920509	AssignmentExpression	n = zend_hash_num_elements ( CG ( class_table ) )		3920360	2		=			
ANR	3920510	Identifier	n		3920360	0					
ANR	3920511	CallExpression	zend_hash_num_elements ( CG ( class_table ) )		3920360	1					
ANR	3920512	Callee	zend_hash_num_elements		3920360	0					
ANR	3920513	Identifier	zend_hash_num_elements		3920360	0					
ANR	3920514	ArgumentList	CG ( class_table )		3920360	1					
ANR	3920515	Argument	CG ( class_table )		3920360	0					
ANR	3920516	CallExpression	CG ( class_table )		3920360	0					
ANR	3920517	Callee	CG		3920360	0					
ANR	3920518	Identifier	CG		3920360	0					
ANR	3920519	ArgumentList	class_table		3920360	1					
ANR	3920520	Argument	class_table		3920360	0					
ANR	3920521	Identifier	class_table		3920360	0					
ANR	3920522	IfStatement	if ( CG ( static_members_table ) && n >= CG ( last_static_member ) )		3920360	1					
ANR	3920523	Condition	CG ( static_members_table ) && n >= CG ( last_static_member )	1625:6:48340:48394	3920360	0	True				
ANR	3920524	AndExpression	CG ( static_members_table ) && n >= CG ( last_static_member )		3920360	0		&&			
ANR	3920525	CallExpression	CG ( static_members_table )		3920360	0					
ANR	3920526	Callee	CG		3920360	0					
ANR	3920527	Identifier	CG		3920360	0					
ANR	3920528	ArgumentList	static_members_table		3920360	1					
ANR	3920529	Argument	static_members_table		3920360	0					
ANR	3920530	Identifier	static_members_table		3920360	0					
ANR	3920531	RelationalExpression	n >= CG ( last_static_member )		3920360	1		>=			
ANR	3920532	Identifier	n		3920360	0					
ANR	3920533	CallExpression	CG ( last_static_member )		3920360	1					
ANR	3920534	Callee	CG		3920360	0					
ANR	3920535	Identifier	CG		3920360	0					
ANR	3920536	ArgumentList	last_static_member		3920360	1					
ANR	3920537	Argument	last_static_member		3920360	0					
ANR	3920538	Identifier	last_static_member		3920360	0					
ANR	3920539	CompoundStatement		22:63:903:903	3920360	1					
ANR	3920540	ExpressionStatement	CG ( last_static_member ) = n + 1	1627:3:48450:48478	3920360	0	True				
ANR	3920541	AssignmentExpression	CG ( last_static_member ) = n + 1		3920360	0		=			
ANR	3920542	CallExpression	CG ( last_static_member )		3920360	0					
ANR	3920543	Callee	CG		3920360	0					
ANR	3920544	Identifier	CG		3920360	0					
ANR	3920545	ArgumentList	last_static_member		3920360	1					
ANR	3920546	Argument	last_static_member		3920360	0					
ANR	3920547	Identifier	last_static_member		3920360	0					
ANR	3920548	AdditiveExpression	n + 1		3920360	1		+			
ANR	3920549	Identifier	n		3920360	0					
ANR	3920550	PrimaryExpression	1		3920360	1					
ANR	3920551	ExpressionStatement	"CG ( static_members_table ) = realloc ( CG ( static_members_table ) , ( n + 1 ) * sizeof ( zval * ) )"	1628:3:48483:48564	3920360	1	True				
ANR	3920552	AssignmentExpression	"CG ( static_members_table ) = realloc ( CG ( static_members_table ) , ( n + 1 ) * sizeof ( zval * ) )"		3920360	0		=			
ANR	3920553	CallExpression	CG ( static_members_table )		3920360	0					
ANR	3920554	Callee	CG		3920360	0					
ANR	3920555	Identifier	CG		3920360	0					
ANR	3920556	ArgumentList	static_members_table		3920360	1					
ANR	3920557	Argument	static_members_table		3920360	0					
ANR	3920558	Identifier	static_members_table		3920360	0					
ANR	3920559	CallExpression	"realloc ( CG ( static_members_table ) , ( n + 1 ) * sizeof ( zval * ) )"		3920360	1					
ANR	3920560	Callee	realloc		3920360	0					
ANR	3920561	Identifier	realloc		3920360	0					
ANR	3920562	ArgumentList	CG ( static_members_table )		3920360	1					
ANR	3920563	Argument	CG ( static_members_table )		3920360	0					
ANR	3920564	CallExpression	CG ( static_members_table )		3920360	0					
ANR	3920565	Callee	CG		3920360	0					
ANR	3920566	Identifier	CG		3920360	0					
ANR	3920567	ArgumentList	static_members_table		3920360	1					
ANR	3920568	Argument	static_members_table		3920360	0					
ANR	3920569	Identifier	static_members_table		3920360	0					
ANR	3920570	Argument	( n + 1 ) * sizeof ( zval * )		3920360	1					
ANR	3920571	MultiplicativeExpression	( n + 1 ) * sizeof ( zval * )		3920360	0		*			
ANR	3920572	AdditiveExpression	n + 1		3920360	0		+			
ANR	3920573	Identifier	n		3920360	0					
ANR	3920574	PrimaryExpression	1		3920360	1					
ANR	3920575	SizeofExpression	sizeof ( zval * )		3920360	1					
ANR	3920576	Sizeof	sizeof		3920360	0					
ANR	3920577	SizeofOperand	zval *		3920360	1					
ANR	3920578	ExpressionStatement	CG ( static_members_table ) [ n ] = NULL	1629:3:48569:48603	3920360	2	True				
ANR	3920579	AssignmentExpression	CG ( static_members_table ) [ n ] = NULL		3920360	0		=			
ANR	3920580	ArrayIndexing	CG ( static_members_table ) [ n ]		3920360	0					
ANR	3920581	CallExpression	CG ( static_members_table )		3920360	0					
ANR	3920582	Callee	CG		3920360	0					
ANR	3920583	Identifier	CG		3920360	0					
ANR	3920584	ArgumentList	static_members_table		3920360	1					
ANR	3920585	Argument	static_members_table		3920360	0					
ANR	3920586	Identifier	static_members_table		3920360	0					
ANR	3920587	Identifier	n		3920360	1					
ANR	3920588	Identifier	NULL		3920360	1					
ANR	3920589	ExpressionStatement	ce -> static_members_table = ( zval * ) ( zend_intptr_t ) n	1631:2:48611:48661	3920360	2	True				
ANR	3920590	AssignmentExpression	ce -> static_members_table = ( zval * ) ( zend_intptr_t ) n		3920360	0		=			
ANR	3920591	PtrMemberAccess	ce -> static_members_table		3920360	0					
ANR	3920592	Identifier	ce		3920360	0					
ANR	3920593	Identifier	static_members_table		3920360	1					
ANR	3920594	CastExpression	( zval * ) ( zend_intptr_t ) n		3920360	1					
ANR	3920595	CastTarget	zval *		3920360	0					
ANR	3920596	CastExpression	( zend_intptr_t ) n		3920360	1					
ANR	3920597	CastTarget	zend_intptr_t		3920360	0					
ANR	3920598	Identifier	n		3920360	1					
ANR	3920599	ElseStatement	else		3920360	0					
ANR	3920600	CompoundStatement		32:8:1225:1225	3920360	0					
ANR	3920601	ExpressionStatement	ce -> static_members_table = ce -> default_static_members_table	1636:2:48723:48782	3920360	0	True				
ANR	3920602	AssignmentExpression	ce -> static_members_table = ce -> default_static_members_table		3920360	0		=			
ANR	3920603	PtrMemberAccess	ce -> static_members_table		3920360	0					
ANR	3920604	Identifier	ce		3920360	0					
ANR	3920605	Identifier	static_members_table		3920360	1					
ANR	3920606	PtrMemberAccess	ce -> default_static_members_table		3920360	1					
ANR	3920607	Identifier	ce		3920360	0					
ANR	3920608	Identifier	default_static_members_table		3920360	1					
ANR	3920609	ExpressionStatement	ce -> info . user . doc_comment = NULL	1637:2:48786:48818	3920360	1	True				
ANR	3920610	AssignmentExpression	ce -> info . user . doc_comment = NULL		3920360	0		=			
ANR	3920611	MemberAccess	ce -> info . user . doc_comment		3920360	0					
ANR	3920612	MemberAccess	ce -> info . user		3920360	0					
ANR	3920613	PtrMemberAccess	ce -> info		3920360	0					
ANR	3920614	Identifier	ce		3920360	0					
ANR	3920615	Identifier	info		3920360	1					
ANR	3920616	Identifier	user		3920360	1					
ANR	3920617	Identifier	doc_comment		3920360	1					
ANR	3920618	Identifier	NULL		3920360	1					
ANR	3920619	ExpressionStatement	ce -> default_properties_count = 0	1640:1:48825:48857	3920360	11	True				
ANR	3920620	AssignmentExpression	ce -> default_properties_count = 0		3920360	0		=			
ANR	3920621	PtrMemberAccess	ce -> default_properties_count		3920360	0					
ANR	3920622	Identifier	ce		3920360	0					
ANR	3920623	Identifier	default_properties_count		3920360	1					
ANR	3920624	PrimaryExpression	0		3920360	1					
ANR	3920625	ExpressionStatement	ce -> default_static_members_count = 0	1641:1:48860:48896	3920360	12	True				
ANR	3920626	AssignmentExpression	ce -> default_static_members_count = 0		3920360	0		=			
ANR	3920627	PtrMemberAccess	ce -> default_static_members_count		3920360	0					
ANR	3920628	Identifier	ce		3920360	0					
ANR	3920629	Identifier	default_static_members_count		3920360	1					
ANR	3920630	PrimaryExpression	0		3920360	1					
ANR	3920631	IfStatement	if ( nullify_handlers )		3920360	13					
ANR	3920632	Condition	nullify_handlers	1643:5:48904:48919	3920360	0	True				
ANR	3920633	Identifier	nullify_handlers		3920360	0					
ANR	3920634	CompoundStatement		40:23:1428:1428	3920360	1					
ANR	3920635	ExpressionStatement	ce -> constructor = NULL	1644:2:48926:48948	3920360	0	True				
ANR	3920636	AssignmentExpression	ce -> constructor = NULL		3920360	0		=			
ANR	3920637	PtrMemberAccess	ce -> constructor		3920360	0					
ANR	3920638	Identifier	ce		3920360	0					
ANR	3920639	Identifier	constructor		3920360	1					
ANR	3920640	Identifier	NULL		3920360	1					
ANR	3920641	ExpressionStatement	ce -> destructor = NULL	1645:2:48952:48973	3920360	1	True				
ANR	3920642	AssignmentExpression	ce -> destructor = NULL		3920360	0		=			
ANR	3920643	PtrMemberAccess	ce -> destructor		3920360	0					
ANR	3920644	Identifier	ce		3920360	0					
ANR	3920645	Identifier	destructor		3920360	1					
ANR	3920646	Identifier	NULL		3920360	1					
ANR	3920647	ExpressionStatement	ce -> clone = NULL	1646:2:48977:48993	3920360	2	True				
ANR	3920648	AssignmentExpression	ce -> clone = NULL		3920360	0		=			
ANR	3920649	PtrMemberAccess	ce -> clone		3920360	0					
ANR	3920650	Identifier	ce		3920360	0					
ANR	3920651	Identifier	clone		3920360	1					
ANR	3920652	Identifier	NULL		3920360	1					
ANR	3920653	ExpressionStatement	ce -> __get = NULL	1647:2:48997:49013	3920360	3	True				
ANR	3920654	AssignmentExpression	ce -> __get = NULL		3920360	0		=			
ANR	3920655	PtrMemberAccess	ce -> __get		3920360	0					
ANR	3920656	Identifier	ce		3920360	0					
ANR	3920657	Identifier	__get		3920360	1					
ANR	3920658	Identifier	NULL		3920360	1					
ANR	3920659	ExpressionStatement	ce -> __set = NULL	1648:2:49017:49033	3920360	4	True				
ANR	3920660	AssignmentExpression	ce -> __set = NULL		3920360	0		=			
ANR	3920661	PtrMemberAccess	ce -> __set		3920360	0					
ANR	3920662	Identifier	ce		3920360	0					
ANR	3920663	Identifier	__set		3920360	1					
ANR	3920664	Identifier	NULL		3920360	1					
ANR	3920665	ExpressionStatement	ce -> __unset = NULL	1649:2:49037:49055	3920360	5	True				
ANR	3920666	AssignmentExpression	ce -> __unset = NULL		3920360	0		=			
ANR	3920667	PtrMemberAccess	ce -> __unset		3920360	0					
ANR	3920668	Identifier	ce		3920360	0					
ANR	3920669	Identifier	__unset		3920360	1					
ANR	3920670	Identifier	NULL		3920360	1					
ANR	3920671	ExpressionStatement	ce -> __isset = NULL	1650:2:49059:49077	3920360	6	True				
ANR	3920672	AssignmentExpression	ce -> __isset = NULL		3920360	0		=			
ANR	3920673	PtrMemberAccess	ce -> __isset		3920360	0					
ANR	3920674	Identifier	ce		3920360	0					
ANR	3920675	Identifier	__isset		3920360	1					
ANR	3920676	Identifier	NULL		3920360	1					
ANR	3920677	ExpressionStatement	ce -> __call = NULL	1651:2:49081:49098	3920360	7	True				
ANR	3920678	AssignmentExpression	ce -> __call = NULL		3920360	0		=			
ANR	3920679	PtrMemberAccess	ce -> __call		3920360	0					
ANR	3920680	Identifier	ce		3920360	0					
ANR	3920681	Identifier	__call		3920360	1					
ANR	3920682	Identifier	NULL		3920360	1					
ANR	3920683	ExpressionStatement	ce -> __callstatic = NULL	1652:2:49102:49125	3920360	8	True				
ANR	3920684	AssignmentExpression	ce -> __callstatic = NULL		3920360	0		=			
ANR	3920685	PtrMemberAccess	ce -> __callstatic		3920360	0					
ANR	3920686	Identifier	ce		3920360	0					
ANR	3920687	Identifier	__callstatic		3920360	1					
ANR	3920688	Identifier	NULL		3920360	1					
ANR	3920689	ExpressionStatement	ce -> __tostring = NULL	1653:2:49129:49150	3920360	9	True				
ANR	3920690	AssignmentExpression	ce -> __tostring = NULL		3920360	0		=			
ANR	3920691	PtrMemberAccess	ce -> __tostring		3920360	0					
ANR	3920692	Identifier	ce		3920360	0					
ANR	3920693	Identifier	__tostring		3920360	1					
ANR	3920694	Identifier	NULL		3920360	1					
ANR	3920695	ExpressionStatement	ce -> create_object = NULL	1654:2:49154:49178	3920360	10	True				
ANR	3920696	AssignmentExpression	ce -> create_object = NULL		3920360	0		=			
ANR	3920697	PtrMemberAccess	ce -> create_object		3920360	0					
ANR	3920698	Identifier	ce		3920360	0					
ANR	3920699	Identifier	create_object		3920360	1					
ANR	3920700	Identifier	NULL		3920360	1					
ANR	3920701	ExpressionStatement	ce -> get_iterator = NULL	1655:2:49182:49205	3920360	11	True				
ANR	3920702	AssignmentExpression	ce -> get_iterator = NULL		3920360	0		=			
ANR	3920703	PtrMemberAccess	ce -> get_iterator		3920360	0					
ANR	3920704	Identifier	ce		3920360	0					
ANR	3920705	Identifier	get_iterator		3920360	1					
ANR	3920706	Identifier	NULL		3920360	1					
ANR	3920707	ExpressionStatement	ce -> iterator_funcs . funcs = NULL	1656:2:49209:49240	3920360	12	True				
ANR	3920708	AssignmentExpression	ce -> iterator_funcs . funcs = NULL		3920360	0		=			
ANR	3920709	MemberAccess	ce -> iterator_funcs . funcs		3920360	0					
ANR	3920710	PtrMemberAccess	ce -> iterator_funcs		3920360	0					
ANR	3920711	Identifier	ce		3920360	0					
ANR	3920712	Identifier	iterator_funcs		3920360	1					
ANR	3920713	Identifier	funcs		3920360	1					
ANR	3920714	Identifier	NULL		3920360	1					
ANR	3920715	ExpressionStatement	ce -> interface_gets_implemented = NULL	1657:2:49244:49281	3920360	13	True				
ANR	3920716	AssignmentExpression	ce -> interface_gets_implemented = NULL		3920360	0		=			
ANR	3920717	PtrMemberAccess	ce -> interface_gets_implemented		3920360	0					
ANR	3920718	Identifier	ce		3920360	0					
ANR	3920719	Identifier	interface_gets_implemented		3920360	1					
ANR	3920720	Identifier	NULL		3920360	1					
ANR	3920721	ExpressionStatement	ce -> get_static_method = NULL	1658:2:49285:49313	3920360	14	True				
ANR	3920722	AssignmentExpression	ce -> get_static_method = NULL		3920360	0		=			
ANR	3920723	PtrMemberAccess	ce -> get_static_method		3920360	0					
ANR	3920724	Identifier	ce		3920360	0					
ANR	3920725	Identifier	get_static_method		3920360	1					
ANR	3920726	Identifier	NULL		3920360	1					
ANR	3920727	ExpressionStatement	ce -> parent = NULL	1659:2:49317:49334	3920360	15	True				
ANR	3920728	AssignmentExpression	ce -> parent = NULL		3920360	0		=			
ANR	3920729	PtrMemberAccess	ce -> parent		3920360	0					
ANR	3920730	Identifier	ce		3920360	0					
ANR	3920731	Identifier	parent		3920360	1					
ANR	3920732	Identifier	NULL		3920360	1					
ANR	3920733	ExpressionStatement	ce -> num_interfaces = 0	1660:2:49338:49360	3920360	16	True				
ANR	3920734	AssignmentExpression	ce -> num_interfaces = 0		3920360	0		=			
ANR	3920735	PtrMemberAccess	ce -> num_interfaces		3920360	0					
ANR	3920736	Identifier	ce		3920360	0					
ANR	3920737	Identifier	num_interfaces		3920360	1					
ANR	3920738	PrimaryExpression	0		3920360	1					
ANR	3920739	ExpressionStatement	ce -> interfaces = NULL	1661:2:49364:49385	3920360	17	True				
ANR	3920740	AssignmentExpression	ce -> interfaces = NULL		3920360	0		=			
ANR	3920741	PtrMemberAccess	ce -> interfaces		3920360	0					
ANR	3920742	Identifier	ce		3920360	0					
ANR	3920743	Identifier	interfaces		3920360	1					
ANR	3920744	Identifier	NULL		3920360	1					
ANR	3920745	ExpressionStatement	ce -> num_traits = 0	1662:2:49389:49407	3920360	18	True				
ANR	3920746	AssignmentExpression	ce -> num_traits = 0		3920360	0		=			
ANR	3920747	PtrMemberAccess	ce -> num_traits		3920360	0					
ANR	3920748	Identifier	ce		3920360	0					
ANR	3920749	Identifier	num_traits		3920360	1					
ANR	3920750	PrimaryExpression	0		3920360	1					
ANR	3920751	ExpressionStatement	ce -> traits = NULL	1663:2:49411:49428	3920360	19	True				
ANR	3920752	AssignmentExpression	ce -> traits = NULL		3920360	0		=			
ANR	3920753	PtrMemberAccess	ce -> traits		3920360	0					
ANR	3920754	Identifier	ce		3920360	0					
ANR	3920755	Identifier	traits		3920360	1					
ANR	3920756	Identifier	NULL		3920360	1					
ANR	3920757	ExpressionStatement	ce -> trait_aliases = NULL	1664:2:49432:49456	3920360	20	True				
ANR	3920758	AssignmentExpression	ce -> trait_aliases = NULL		3920360	0		=			
ANR	3920759	PtrMemberAccess	ce -> trait_aliases		3920360	0					
ANR	3920760	Identifier	ce		3920360	0					
ANR	3920761	Identifier	trait_aliases		3920360	1					
ANR	3920762	Identifier	NULL		3920360	1					
ANR	3920763	ExpressionStatement	ce -> trait_precedences = NULL	1665:2:49460:49488	3920360	21	True				
ANR	3920764	AssignmentExpression	ce -> trait_precedences = NULL		3920360	0		=			
ANR	3920765	PtrMemberAccess	ce -> trait_precedences		3920360	0					
ANR	3920766	Identifier	ce		3920360	0					
ANR	3920767	Identifier	trait_precedences		3920360	1					
ANR	3920768	Identifier	NULL		3920360	1					
ANR	3920769	ExpressionStatement	ce -> serialize = NULL	1666:2:49492:49512	3920360	22	True				
ANR	3920770	AssignmentExpression	ce -> serialize = NULL		3920360	0		=			
ANR	3920771	PtrMemberAccess	ce -> serialize		3920360	0					
ANR	3920772	Identifier	ce		3920360	0					
ANR	3920773	Identifier	serialize		3920360	1					
ANR	3920774	Identifier	NULL		3920360	1					
ANR	3920775	ExpressionStatement	ce -> unserialize = NULL	1667:2:49516:49538	3920360	23	True				
ANR	3920776	AssignmentExpression	ce -> unserialize = NULL		3920360	0		=			
ANR	3920777	PtrMemberAccess	ce -> unserialize		3920360	0					
ANR	3920778	Identifier	ce		3920360	0					
ANR	3920779	Identifier	unserialize		3920360	1					
ANR	3920780	Identifier	NULL		3920360	1					
ANR	3920781	ExpressionStatement	ce -> serialize_func = NULL	1668:2:49542:49567	3920360	24	True				
ANR	3920782	AssignmentExpression	ce -> serialize_func = NULL		3920360	0		=			
ANR	3920783	PtrMemberAccess	ce -> serialize_func		3920360	0					
ANR	3920784	Identifier	ce		3920360	0					
ANR	3920785	Identifier	serialize_func		3920360	1					
ANR	3920786	Identifier	NULL		3920360	1					
ANR	3920787	ExpressionStatement	ce -> unserialize_func = NULL	1669:2:49571:49598	3920360	25	True				
ANR	3920788	AssignmentExpression	ce -> unserialize_func = NULL		3920360	0		=			
ANR	3920789	PtrMemberAccess	ce -> unserialize_func		3920360	0					
ANR	3920790	Identifier	ce		3920360	0					
ANR	3920791	Identifier	unserialize_func		3920360	1					
ANR	3920792	Identifier	NULL		3920360	1					
ANR	3920793	ExpressionStatement	ce -> __debugInfo = NULL	1670:2:49602:49624	3920360	26	True				
ANR	3920794	AssignmentExpression	ce -> __debugInfo = NULL		3920360	0		=			
ANR	3920795	PtrMemberAccess	ce -> __debugInfo		3920360	0					
ANR	3920796	Identifier	ce		3920360	0					
ANR	3920797	Identifier	__debugInfo		3920360	1					
ANR	3920798	Identifier	NULL		3920360	1					
ANR	3920799	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		3920360	27					
ANR	3920800	Condition	ce -> type == ZEND_INTERNAL_CLASS	1671:6:49632:49662	3920360	0	True				
ANR	3920801	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3920360	0		==			
ANR	3920802	PtrMemberAccess	ce -> type		3920360	0					
ANR	3920803	Identifier	ce		3920360	0					
ANR	3920804	Identifier	type		3920360	1					
ANR	3920805	Identifier	ZEND_INTERNAL_CLASS		3920360	1					
ANR	3920806	CompoundStatement		68:39:2171:2171	3920360	1					
ANR	3920807	ExpressionStatement	ce -> info . internal . module = NULL	1672:3:49670:49701	3920360	0	True				
ANR	3920808	AssignmentExpression	ce -> info . internal . module = NULL		3920360	0		=			
ANR	3920809	MemberAccess	ce -> info . internal . module		3920360	0					
ANR	3920810	MemberAccess	ce -> info . internal		3920360	0					
ANR	3920811	PtrMemberAccess	ce -> info		3920360	0					
ANR	3920812	Identifier	ce		3920360	0					
ANR	3920813	Identifier	info		3920360	1					
ANR	3920814	Identifier	internal		3920360	1					
ANR	3920815	Identifier	module		3920360	1					
ANR	3920816	Identifier	NULL		3920360	1					
ANR	3920817	ExpressionStatement	ce -> info . internal . builtin_functions = NULL	1673:3:49706:49748	3920360	1	True				
ANR	3920818	AssignmentExpression	ce -> info . internal . builtin_functions = NULL		3920360	0		=			
ANR	3920819	MemberAccess	ce -> info . internal . builtin_functions		3920360	0					
ANR	3920820	MemberAccess	ce -> info . internal		3920360	0					
ANR	3920821	PtrMemberAccess	ce -> info		3920360	0					
ANR	3920822	Identifier	ce		3920360	0					
ANR	3920823	Identifier	info		3920360	1					
ANR	3920824	Identifier	internal		3920360	1					
ANR	3920825	Identifier	builtin_functions		3920360	1					
ANR	3920826	Identifier	NULL		3920360	1					
ANR	3920827	ReturnType	ZEND_API void		3920360	1					
ANR	3920828	Identifier	zend_initialize_class_data		3920360	2					
ANR	3920829	ParameterList	"zend_class_entry * ce , zend_bool nullify_handlers"		3920360	3					
ANR	3920830	Parameter	zend_class_entry * ce	1603:41:47433:47452	3920360	0	True				
ANR	3920831	ParameterType	zend_class_entry *		3920360	0					
ANR	3920832	Identifier	ce		3920360	1					
ANR	3920833	Parameter	zend_bool nullify_handlers	1603:63:47455:47480	3920360	1	True				
ANR	3920834	ParameterType	zend_bool		3920360	0					
ANR	3920835	Identifier	nullify_handlers		3920360	1					
ANR	3920836	CFGEntryNode	ENTRY		3920360		True				
ANR	3920837	CFGExitNode	EXIT		3920360		True				
ANR	3920838	Symbol	ce -> default_properties_count		3920360						
ANR	3920839	Symbol	ce -> __set		3920360						
ANR	3920840	Symbol	ZEND_ACC_USE_GUARDS		3920360						
ANR	3920841	Symbol	* CG		3920360						
ANR	3920842	Symbol	* ce		3920360						
ANR	3920843	Symbol	realloc		3920360						
ANR	3920844	Symbol	ce -> interface_gets_implemented		3920360						
ANR	3920845	Symbol	ce -> unserialize		3920360						
ANR	3920846	Symbol	ce -> static_members_table		3920360						
ANR	3920847	Symbol	ce -> __tostring		3920360						
ANR	3920848	Symbol	ce -> __get		3920360						
ANR	3920849	Symbol	ce -> __callstatic		3920360						
ANR	3920850	Symbol	ce -> info . internal		3920360						
ANR	3920851	Symbol	ZEND_INTERNAL_CLASS		3920360						
ANR	3920852	Symbol	ZEND_FUNCTION_DTOR		3920360						
ANR	3920853	Symbol	NULL		3920360						
ANR	3920854	Symbol	ce -> destructor		3920360						
ANR	3920855	Symbol	ce -> info . user		3920360						
ANR	3920856	Symbol	ce -> __isset		3920360						
ANR	3920857	Symbol	ce -> parent		3920360						
ANR	3920858	Symbol	ZEND_COMPILE_GUARDS		3920360						
ANR	3920859	Symbol	ce -> info . internal . module		3920360						
ANR	3920860	Symbol	ce -> default_properties_table		3920360						
ANR	3920861	Symbol	ce -> refcount		3920360						
ANR	3920862	Symbol	ce -> default_static_members_table		3920360						
ANR	3920863	Symbol	ce -> trait_precedences		3920360						
ANR	3920864	Symbol	ZVAL_PTR_DTOR		3920360						
ANR	3920865	Symbol	ce -> ce_flags		3920360						
ANR	3920866	Symbol	ce -> __debugInfo		3920360						
ANR	3920867	Symbol	& ce -> properties_info		3920360						
ANR	3920868	Symbol	ce -> __call		3920360						
ANR	3920869	Symbol	ce -> get_iterator		3920360						
ANR	3920870	Symbol	ce -> info		3920360						
ANR	3920871	Symbol	ce -> serialize_func		3920360						
ANR	3920872	Symbol	ce -> clone		3920360						
ANR	3920873	Symbol	ce -> get_static_method		3920360						
ANR	3920874	Symbol	ce -> type		3920360						
ANR	3920875	Symbol	ZEND_ACC_CONSTANTS_UPDATED		3920360						
ANR	3920876	Symbol	ce -> default_static_members_count		3920360						
ANR	3920877	Symbol	ZVAL_INTERNAL_PTR_DTOR		3920360						
ANR	3920878	Symbol	static_members_table		3920360						
ANR	3920879	Symbol	& ce -> function_table		3920360						
ANR	3920880	Symbol	zend_destroy_property_info_internal		3920360						
ANR	3920881	Symbol	zval_ptr_dtor_func		3920360						
ANR	3920882	Symbol	nullify_handlers		3920360						
ANR	3920883	Symbol	compiler_options		3920360						
ANR	3920884	Symbol	ce -> num_interfaces		3920360						
ANR	3920885	Symbol	persistent_hashes		3920360						
ANR	3920886	Symbol	class_table		3920360						
ANR	3920887	Symbol	ce		3920360						
ANR	3920888	Symbol	ce -> info . internal . builtin_functions		3920360						
ANR	3920889	Symbol	ce -> constructor		3920360						
ANR	3920890	Symbol	ce -> trait_aliases		3920360						
ANR	3920891	Symbol	CG		3920360						
ANR	3920892	Symbol	ce -> interfaces		3920360						
ANR	3920893	Symbol	zend_hash_num_elements		3920360						
ANR	3920894	Symbol	last_static_member		3920360						
ANR	3920895	Symbol	ce -> unserialize_func		3920360						
ANR	3920896	Symbol	ce -> num_traits		3920360						
ANR	3920897	Symbol	n		3920360						
ANR	3920898	Symbol	ce -> traits		3920360						
ANR	3920899	Symbol	& ce -> constants_table		3920360						
ANR	3920900	Symbol	ce -> info . user . doc_comment		3920360						
ANR	3920901	Symbol	ce -> __unset		3920360						
ANR	3920902	Symbol	ce -> iterator_funcs		3920360						
ANR	3920903	Symbol	ce -> serialize		3920360						
ANR	3920904	Symbol	* n		3920360						
ANR	3920905	Symbol	ce -> create_object		3920360						
ANR	3920906	Symbol	ce -> iterator_funcs . funcs		3920360						
ANR	3920907	Function	zend_get_compiled_variable_name	1679:0:49770:49925							
ANR	3920908	FunctionDef	"zend_get_compiled_variable_name (const zend_op_array * op_array , uint32_t var)"		3920907	0					
ANR	3920909	CompoundStatement		1680:0:49879:49925	3920907	0					
ANR	3920910	ReturnStatement	return op_array -> vars [ EX_VAR_TO_NUM ( var ) ] ;	1681:1:49882:49923	3920907	0	True				
ANR	3920911	ArrayIndexing	op_array -> vars [ EX_VAR_TO_NUM ( var ) ]		3920907	0					
ANR	3920912	PtrMemberAccess	op_array -> vars		3920907	0					
ANR	3920913	Identifier	op_array		3920907	0					
ANR	3920914	Identifier	vars		3920907	1					
ANR	3920915	CallExpression	EX_VAR_TO_NUM ( var )		3920907	1					
ANR	3920916	Callee	EX_VAR_TO_NUM		3920907	0					
ANR	3920917	Identifier	EX_VAR_TO_NUM		3920907	0					
ANR	3920918	ArgumentList	var		3920907	1					
ANR	3920919	Argument	var		3920907	0					
ANR	3920920	Identifier	var		3920907	0					
ANR	3920921	ReturnType	ZEND_API zend_string *		3920907	1					
ANR	3920922	Identifier	zend_get_compiled_variable_name		3920907	2					
ANR	3920923	ParameterList	"const zend_op_array * op_array , uint32_t var"		3920907	3					
ANR	3920924	Parameter	const zend_op_array * op_array	1679:54:49824:49852	3920907	0	True				
ANR	3920925	ParameterType	const zend_op_array *		3920907	0					
ANR	3920926	Identifier	op_array		3920907	1					
ANR	3920927	Parameter	uint32_t var	1679:85:49855:49866	3920907	1	True				
ANR	3920928	ParameterType	uint32_t		3920907	0					
ANR	3920929	Identifier	var		3920907	1					
ANR	3920930	CFGEntryNode	ENTRY		3920907		True				
ANR	3920931	CFGExitNode	EXIT		3920907		True				
ANR	3920932	Symbol	* EX_VAR_TO_NUM		3920907						
ANR	3920933	Symbol	* op_array -> vars		3920907						
ANR	3920934	Symbol	op_array -> vars		3920907						
ANR	3920935	Symbol	var		3920907						
ANR	3920936	Symbol	* * op_array		3920907						
ANR	3920937	Symbol	op_array		3920907						
ANR	3920938	Symbol	* op_array		3920907						
ANR	3920939	Symbol	EX_VAR_TO_NUM		3920907						
ANR	3920940	Function	zend_ast_append_str	1685:0:49938:50542							
ANR	3920941	FunctionDef	"zend_ast_append_str (zend_ast * left_ast , zend_ast * right_ast)"		3920940	0					
ANR	3920942	CompoundStatement		1686:0:50019:50542	3920940	0					
ANR	3920943	IdentifierDeclStatement	zval * left_zv = zend_ast_get_zval ( left_ast ) ;	1687:1:50022:50065	3920940	0	True				
ANR	3920944	IdentifierDecl	* left_zv = zend_ast_get_zval ( left_ast )		3920940	0					
ANR	3920945	IdentifierDeclType	zval *		3920940	0					
ANR	3920946	Identifier	left_zv		3920940	1					
ANR	3920947	AssignmentExpression	* left_zv = zend_ast_get_zval ( left_ast )		3920940	2		=			
ANR	3920948	Identifier	left_zv		3920940	0					
ANR	3920949	CallExpression	zend_ast_get_zval ( left_ast )		3920940	1					
ANR	3920950	Callee	zend_ast_get_zval		3920940	0					
ANR	3920951	Identifier	zend_ast_get_zval		3920940	0					
ANR	3920952	ArgumentList	left_ast		3920940	1					
ANR	3920953	Argument	left_ast		3920940	0					
ANR	3920954	Identifier	left_ast		3920940	0					
ANR	3920955	IdentifierDeclStatement	zend_string * left = Z_STR_P ( left_zv ) ;	1688:1:50068:50104	3920940	1	True				
ANR	3920956	IdentifierDecl	* left = Z_STR_P ( left_zv )		3920940	0					
ANR	3920957	IdentifierDeclType	zend_string *		3920940	0					
ANR	3920958	Identifier	left		3920940	1					
ANR	3920959	AssignmentExpression	* left = Z_STR_P ( left_zv )		3920940	2		=			
ANR	3920960	Identifier	left		3920940	0					
ANR	3920961	CallExpression	Z_STR_P ( left_zv )		3920940	1					
ANR	3920962	Callee	Z_STR_P		3920940	0					
ANR	3920963	Identifier	Z_STR_P		3920940	0					
ANR	3920964	ArgumentList	left_zv		3920940	1					
ANR	3920965	Argument	left_zv		3920940	0					
ANR	3920966	Identifier	left_zv		3920940	0					
ANR	3920967	IdentifierDeclStatement	zend_string * right = zend_ast_get_str ( right_ast ) ;	1689:1:50107:50155	3920940	2	True				
ANR	3920968	IdentifierDecl	* right = zend_ast_get_str ( right_ast )		3920940	0					
ANR	3920969	IdentifierDeclType	zend_string *		3920940	0					
ANR	3920970	Identifier	right		3920940	1					
ANR	3920971	AssignmentExpression	* right = zend_ast_get_str ( right_ast )		3920940	2		=			
ANR	3920972	Identifier	right		3920940	0					
ANR	3920973	CallExpression	zend_ast_get_str ( right_ast )		3920940	1					
ANR	3920974	Callee	zend_ast_get_str		3920940	0					
ANR	3920975	Identifier	zend_ast_get_str		3920940	0					
ANR	3920976	ArgumentList	right_ast		3920940	1					
ANR	3920977	Argument	right_ast		3920940	0					
ANR	3920978	Identifier	right_ast		3920940	0					
ANR	3920979	IdentifierDeclStatement	zend_string * result ;	1691:1:50159:50178	3920940	3	True				
ANR	3920980	IdentifierDecl	* result		3920940	0					
ANR	3920981	IdentifierDeclType	zend_string *		3920940	0					
ANR	3920982	Identifier	result		3920940	1					
ANR	3920983	IdentifierDeclStatement	size_t left_len = ZSTR_LEN ( left ) ;	1692:1:50181:50213	3920940	4	True				
ANR	3920984	IdentifierDecl	left_len = ZSTR_LEN ( left )		3920940	0					
ANR	3920985	IdentifierDeclType	size_t		3920940	0					
ANR	3920986	Identifier	left_len		3920940	1					
ANR	3920987	AssignmentExpression	left_len = ZSTR_LEN ( left )		3920940	2		=			
ANR	3920988	Identifier	left_len		3920940	0					
ANR	3920989	CallExpression	ZSTR_LEN ( left )		3920940	1					
ANR	3920990	Callee	ZSTR_LEN		3920940	0					
ANR	3920991	Identifier	ZSTR_LEN		3920940	0					
ANR	3920992	ArgumentList	left		3920940	1					
ANR	3920993	Argument	left		3920940	0					
ANR	3920994	Identifier	left		3920940	0					
ANR	3920995	IdentifierDeclStatement	size_t len = left_len + ZSTR_LEN ( right ) + 1 ;	1693:1:50216:50259	3920940	5	True				
ANR	3920996	IdentifierDecl	len = left_len + ZSTR_LEN ( right ) + 1		3920940	0					
ANR	3920997	IdentifierDeclType	size_t		3920940	0					
ANR	3920998	Identifier	len		3920940	1					
ANR	3920999	AssignmentExpression	len = left_len + ZSTR_LEN ( right ) + 1		3920940	2		=			
ANR	3921000	Identifier	len		3920940	0					
ANR	3921001	AdditiveExpression	left_len + ZSTR_LEN ( right ) + 1		3920940	1		+			
ANR	3921002	Identifier	left_len		3920940	0					
ANR	3921003	AdditiveExpression	ZSTR_LEN ( right ) + 1		3920940	1		+			
ANR	3921004	CallExpression	ZSTR_LEN ( right )		3920940	0					
ANR	3921005	Callee	ZSTR_LEN		3920940	0					
ANR	3921006	Identifier	ZSTR_LEN		3920940	0					
ANR	3921007	ArgumentList	right		3920940	1					
ANR	3921008	Argument	right		3920940	0					
ANR	3921009	Identifier	right		3920940	0					
ANR	3921010	PrimaryExpression	1		3920940	1					
ANR	3921011	ExpressionStatement	"result = zend_string_extend ( left , len , 0 )"	1695:1:50280:50321	3920940	6	True				
ANR	3921012	AssignmentExpression	"result = zend_string_extend ( left , len , 0 )"		3920940	0		=			
ANR	3921013	Identifier	result		3920940	0					
ANR	3921014	CallExpression	"zend_string_extend ( left , len , 0 )"		3920940	1					
ANR	3921015	Callee	zend_string_extend		3920940	0					
ANR	3921016	Identifier	zend_string_extend		3920940	0					
ANR	3921017	ArgumentList	left		3920940	1					
ANR	3921018	Argument	left		3920940	0					
ANR	3921019	Identifier	left		3920940	0					
ANR	3921020	Argument	len		3920940	1					
ANR	3921021	Identifier	len		3920940	0					
ANR	3921022	Argument	0		3920940	2					
ANR	3921023	PrimaryExpression	0		3920940	0					
ANR	3921024	ExpressionStatement	ZSTR_VAL ( result ) [ left_len ] = '\\\\'	1696:1:50324:50357	3920940	7	True				
ANR	3921025	AssignmentExpression	ZSTR_VAL ( result ) [ left_len ] = '\\\\'		3920940	0		=			
ANR	3921026	ArrayIndexing	ZSTR_VAL ( result ) [ left_len ]		3920940	0					
ANR	3921027	CallExpression	ZSTR_VAL ( result )		3920940	0					
ANR	3921028	Callee	ZSTR_VAL		3920940	0					
ANR	3921029	Identifier	ZSTR_VAL		3920940	0					
ANR	3921030	ArgumentList	result		3920940	1					
ANR	3921031	Argument	result		3920940	0					
ANR	3921032	Identifier	result		3920940	0					
ANR	3921033	Identifier	left_len		3920940	1					
ANR	3921034	PrimaryExpression	'\\\\'		3920940	1					
ANR	3921035	ExpressionStatement	"memcpy ( & ZSTR_VAL ( result ) [ left_len + 1 ] , ZSTR_VAL ( right ) , ZSTR_LEN ( right ) )"	1697:1:50360:50433	3920940	8	True				
ANR	3921036	CallExpression	"memcpy ( & ZSTR_VAL ( result ) [ left_len + 1 ] , ZSTR_VAL ( right ) , ZSTR_LEN ( right ) )"		3920940	0					
ANR	3921037	Callee	memcpy		3920940	0					
ANR	3921038	Identifier	memcpy		3920940	0					
ANR	3921039	ArgumentList	& ZSTR_VAL ( result ) [ left_len + 1 ]		3920940	1					
ANR	3921040	Argument	& ZSTR_VAL ( result ) [ left_len + 1 ]		3920940	0					
ANR	3921041	UnaryOperationExpression	& ZSTR_VAL ( result ) [ left_len + 1 ]		3920940	0					
ANR	3921042	UnaryOperator	&		3920940	0					
ANR	3921043	ArrayIndexing	ZSTR_VAL ( result ) [ left_len + 1 ]		3920940	1					
ANR	3921044	CallExpression	ZSTR_VAL ( result )		3920940	0					
ANR	3921045	Callee	ZSTR_VAL		3920940	0					
ANR	3921046	Identifier	ZSTR_VAL		3920940	0					
ANR	3921047	ArgumentList	result		3920940	1					
ANR	3921048	Argument	result		3920940	0					
ANR	3921049	Identifier	result		3920940	0					
ANR	3921050	AdditiveExpression	left_len + 1		3920940	1		+			
ANR	3921051	Identifier	left_len		3920940	0					
ANR	3921052	PrimaryExpression	1		3920940	1					
ANR	3921053	Argument	ZSTR_VAL ( right )		3920940	1					
ANR	3921054	CallExpression	ZSTR_VAL ( right )		3920940	0					
ANR	3921055	Callee	ZSTR_VAL		3920940	0					
ANR	3921056	Identifier	ZSTR_VAL		3920940	0					
ANR	3921057	ArgumentList	right		3920940	1					
ANR	3921058	Argument	right		3920940	0					
ANR	3921059	Identifier	right		3920940	0					
ANR	3921060	Argument	ZSTR_LEN ( right )		3920940	2					
ANR	3921061	CallExpression	ZSTR_LEN ( right )		3920940	0					
ANR	3921062	Callee	ZSTR_LEN		3920940	0					
ANR	3921063	Identifier	ZSTR_LEN		3920940	0					
ANR	3921064	ArgumentList	right		3920940	1					
ANR	3921065	Argument	right		3920940	0					
ANR	3921066	Identifier	right		3920940	0					
ANR	3921067	ExpressionStatement	ZSTR_VAL ( result ) [ len ] = '\\0'	1698:1:50436:50464	3920940	9	True				
ANR	3921068	AssignmentExpression	ZSTR_VAL ( result ) [ len ] = '\\0'		3920940	0		=			
ANR	3921069	ArrayIndexing	ZSTR_VAL ( result ) [ len ]		3920940	0					
ANR	3921070	CallExpression	ZSTR_VAL ( result )		3920940	0					
ANR	3921071	Callee	ZSTR_VAL		3920940	0					
ANR	3921072	Identifier	ZSTR_VAL		3920940	0					
ANR	3921073	ArgumentList	result		3920940	1					
ANR	3921074	Argument	result		3920940	0					
ANR	3921075	Identifier	result		3920940	0					
ANR	3921076	Identifier	len		3920940	1					
ANR	3921077	PrimaryExpression	'\\0'		3920940	1					
ANR	3921078	ExpressionStatement	zend_string_release ( right )	1699:1:50467:50493	3920940	10	True				
ANR	3921079	CallExpression	zend_string_release ( right )		3920940	0					
ANR	3921080	Callee	zend_string_release		3920940	0					
ANR	3921081	Identifier	zend_string_release		3920940	0					
ANR	3921082	ArgumentList	right		3920940	1					
ANR	3921083	Argument	right		3920940	0					
ANR	3921084	Identifier	right		3920940	0					
ANR	3921085	ExpressionStatement	"ZVAL_STR ( left_zv , result )"	1701:1:50497:50522	3920940	11	True				
ANR	3921086	CallExpression	"ZVAL_STR ( left_zv , result )"		3920940	0					
ANR	3921087	Callee	ZVAL_STR		3920940	0					
ANR	3921088	Identifier	ZVAL_STR		3920940	0					
ANR	3921089	ArgumentList	left_zv		3920940	1					
ANR	3921090	Argument	left_zv		3920940	0					
ANR	3921091	Identifier	left_zv		3920940	0					
ANR	3921092	Argument	result		3920940	1					
ANR	3921093	Identifier	result		3920940	0					
ANR	3921094	ReturnStatement	return left_ast ;	1702:1:50525:50540	3920940	12	True				
ANR	3921095	Identifier	left_ast		3920940	0					
ANR	3921096	ReturnType	zend_ast *		3920940	1					
ANR	3921097	Identifier	zend_ast_append_str		3920940	2					
ANR	3921098	ParameterList	"zend_ast * left_ast , zend_ast * right_ast"		3920940	3					
ANR	3921099	Parameter	zend_ast * left_ast	1685:30:49968:49985	3920940	0	True				
ANR	3921100	ParameterType	zend_ast *		3920940	0					
ANR	3921101	Identifier	left_ast		3920940	1					
ANR	3921102	Parameter	zend_ast * right_ast	1685:50:49988:50006	3920940	1	True				
ANR	3921103	ParameterType	zend_ast *		3920940	0					
ANR	3921104	Identifier	right_ast		3920940	1					
ANR	3921105	CFGEntryNode	ENTRY		3920940		True				
ANR	3921106	CFGExitNode	EXIT		3920940		True				
ANR	3921107	Symbol	right_ast		3920940						
ANR	3921108	Symbol	zend_string_extend		3920940						
ANR	3921109	Symbol	right		3920940						
ANR	3921110	Symbol	left_len		3920940						
ANR	3921111	Symbol	ZSTR_VAL		3920940						
ANR	3921112	Symbol	result		3920940						
ANR	3921113	Symbol	zend_ast_get_str		3920940						
ANR	3921114	Symbol	len		3920940						
ANR	3921115	Symbol	left		3920940						
ANR	3921116	Symbol	ZSTR_LEN		3920940						
ANR	3921117	Symbol	left_zv		3920940						
ANR	3921118	Symbol	left_ast		3920940						
ANR	3921119	Symbol	Z_STR_P		3920940						
ANR	3921120	Symbol	zend_ast_get_zval		3920940						
ANR	3921121	Symbol	* left_len		3920940						
ANR	3921122	Symbol	* ZSTR_VAL		3920940						
ANR	3921123	Symbol	* len		3920940						
ANR	3921124	Function	zend_verify_namespace	1706:0:50555:50746							
ANR	3921125	FunctionDef	zend_verify_namespace ()		3921124	0					
ANR	3921126	CompoundStatement		1707:0:50598:50746	3921124	0					
ANR	3921127	IfStatement	if ( FC ( has_bracketed_namespaces ) && ! FC ( in_namespace ) )		3921124	0					
ANR	3921128	Condition	FC ( has_bracketed_namespaces ) && ! FC ( in_namespace )	1708:5:50605:50653	3921124	0	True				
ANR	3921129	AndExpression	FC ( has_bracketed_namespaces ) && ! FC ( in_namespace )		3921124	0		&&			
ANR	3921130	CallExpression	FC ( has_bracketed_namespaces )		3921124	0					
ANR	3921131	Callee	FC		3921124	0					
ANR	3921132	Identifier	FC		3921124	0					
ANR	3921133	ArgumentList	has_bracketed_namespaces		3921124	1					
ANR	3921134	Argument	has_bracketed_namespaces		3921124	0					
ANR	3921135	Identifier	has_bracketed_namespaces		3921124	0					
ANR	3921136	UnaryOperationExpression	! FC ( in_namespace )		3921124	1					
ANR	3921137	UnaryOperator	!		3921124	0					
ANR	3921138	CallExpression	FC ( in_namespace )		3921124	1					
ANR	3921139	Callee	FC		3921124	0					
ANR	3921140	Identifier	FC		3921124	0					
ANR	3921141	ArgumentList	in_namespace		3921124	1					
ANR	3921142	Argument	in_namespace		3921124	0					
ANR	3921143	Identifier	in_namespace		3921124	0					
ANR	3921144	CompoundStatement		2:56:57:57	3921124	1					
ANR	3921145	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""No code may exist outside of namespace {}"" )"	1709:2:50660:50741	3921124	0	True				
ANR	3921146	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""No code may exist outside of namespace {}"" )"		3921124	0					
ANR	3921147	Callee	zend_error_noreturn		3921124	0					
ANR	3921148	Identifier	zend_error_noreturn		3921124	0					
ANR	3921149	ArgumentList	E_COMPILE_ERROR		3921124	1					
ANR	3921150	Argument	E_COMPILE_ERROR		3921124	0					
ANR	3921151	Identifier	E_COMPILE_ERROR		3921124	0					
ANR	3921152	Argument	"""No code may exist outside of namespace {}"""		3921124	1					
ANR	3921153	PrimaryExpression	"""No code may exist outside of namespace {}"""		3921124	0					
ANR	3921154	ReturnType	void		3921124	1					
ANR	3921155	Identifier	zend_verify_namespace		3921124	2					
ANR	3921156	ParameterList			3921124	3					
ANR	3921157	CFGEntryNode	ENTRY		3921124		True				
ANR	3921158	CFGExitNode	EXIT		3921124		True				
ANR	3921159	Symbol	in_namespace		3921124						
ANR	3921160	Symbol	has_bracketed_namespaces		3921124						
ANR	3921161	Symbol	E_COMPILE_ERROR		3921124						
ANR	3921162	Symbol	FC		3921124						
ANR	3921163	Function	zend_dirname	1716:0:50826:52912							
ANR	3921164	FunctionDef	"zend_dirname (char * path , size_t len)"		3921163	0					
ANR	3921165	CompoundStatement		1717:0:50879:52912	3921163	0					
ANR	3921166	Statement	register	1718:1:50882:50889	3921163	0	True				
ANR	3921167	IdentifierDeclStatement	char * end = path + len - 1 ;	1718:10:50891:50917	3921163	1	True				
ANR	3921168	IdentifierDecl	* end = path + len - 1		3921163	0					
ANR	3921169	IdentifierDeclType	char *		3921163	0					
ANR	3921170	Identifier	end		3921163	1					
ANR	3921171	AssignmentExpression	* end = path + len - 1		3921163	2		=			
ANR	3921172	Identifier	end		3921163	0					
ANR	3921173	AdditiveExpression	path + len - 1		3921163	1		+			
ANR	3921174	Identifier	path		3921163	0					
ANR	3921175	AdditiveExpression	len - 1		3921163	1		-			
ANR	3921176	Identifier	len		3921163	0					
ANR	3921177	PrimaryExpression	1		3921163	1					
ANR	3921178	IdentifierDeclStatement	unsigned int len_adjust = 0 ;	1719:1:50920:50947	3921163	2	True				
ANR	3921179	IdentifierDecl	len_adjust = 0		3921163	0					
ANR	3921180	IdentifierDeclType	unsigned int		3921163	0					
ANR	3921181	Identifier	len_adjust		3921163	1					
ANR	3921182	AssignmentExpression	len_adjust = 0		3921163	2		=			
ANR	3921183	Identifier	len_adjust		3921163	0					
ANR	3921184	PrimaryExpression	0		3921163	1					
ANR	3921185	IfStatement	if ( ( 2 <= len ) && isalpha ( ( int ) ( ( unsigned char * ) path ) [ 0 ] ) && ( ':' == path [ 1 ] ) )		3921163	3					
ANR	3921186	Condition	( 2 <= len ) && isalpha ( ( int ) ( ( unsigned char * ) path ) [ 0 ] ) && ( ':' == path [ 1 ] )	1725:5:51125:51198	3921163	0	True				
ANR	3921187	AndExpression	( 2 <= len ) && isalpha ( ( int ) ( ( unsigned char * ) path ) [ 0 ] ) && ( ':' == path [ 1 ] )		3921163	0		&&			
ANR	3921188	RelationalExpression	2 <= len		3921163	0		<=			
ANR	3921189	PrimaryExpression	2		3921163	0					
ANR	3921190	Identifier	len		3921163	1					
ANR	3921191	AndExpression	isalpha ( ( int ) ( ( unsigned char * ) path ) [ 0 ] ) && ( ':' == path [ 1 ] )		3921163	1		&&			
ANR	3921192	CallExpression	isalpha ( ( int ) ( ( unsigned char * ) path ) [ 0 ] )		3921163	0					
ANR	3921193	Callee	isalpha		3921163	0					
ANR	3921194	Identifier	isalpha		3921163	0					
ANR	3921195	ArgumentList	( int ) ( ( unsigned char * ) path ) [ 0 ]		3921163	1					
ANR	3921196	Argument	( int ) ( ( unsigned char * ) path ) [ 0 ]		3921163	0					
ANR	3921197	CastExpression	( int ) ( ( unsigned char * ) path ) [ 0 ]		3921163	0					
ANR	3921198	CastTarget	int		3921163	0					
ANR	3921199	ArrayIndexing	( ( unsigned char * ) path ) [ 0 ]		3921163	1					
ANR	3921200	CastExpression	( unsigned char * ) path		3921163	0					
ANR	3921201	CastTarget	unsigned char *		3921163	0					
ANR	3921202	Identifier	path		3921163	1					
ANR	3921203	PrimaryExpression	0		3921163	1					
ANR	3921204	EqualityExpression	':' == path [ 1 ]		3921163	1		==			
ANR	3921205	PrimaryExpression	':'		3921163	0					
ANR	3921206	ArrayIndexing	path [ 1 ]		3921163	1					
ANR	3921207	Identifier	path		3921163	0					
ANR	3921208	PrimaryExpression	1		3921163	1					
ANR	3921209	CompoundStatement		9:81:321:321	3921163	1					
ANR	3921210	ExpressionStatement	path += 2	1727:2:51267:51276	3921163	0	True				
ANR	3921211	AssignmentExpression	path += 2		3921163	0		+=			
ANR	3921212	Identifier	path		3921163	0					
ANR	3921213	PrimaryExpression	2		3921163	1					
ANR	3921214	ExpressionStatement	len_adjust += 2	1728:2:51280:51295	3921163	1	True				
ANR	3921215	AssignmentExpression	len_adjust += 2		3921163	0		+=			
ANR	3921216	Identifier	len_adjust		3921163	0					
ANR	3921217	PrimaryExpression	2		3921163	1					
ANR	3921218	IfStatement	if ( 2 == len )		3921163	2					
ANR	3921219	Condition	2 == len	1729:6:51303:51310	3921163	0	True				
ANR	3921220	EqualityExpression	2 == len		3921163	0		==			
ANR	3921221	PrimaryExpression	2		3921163	0					
ANR	3921222	Identifier	len		3921163	1					
ANR	3921223	CompoundStatement		13:16:433:433	3921163	1					
ANR	3921224	ReturnStatement	return len ;	1734:3:51478:51488	3921163	0	True				
ANR	3921225	Identifier	len		3921163	0					
ANR	3921226	IfStatement	if ( len == 0 )		3921163	4					
ANR	3921227	Condition	len == 0	1755:5:51976:51983	3921163	0	True				
ANR	3921228	EqualityExpression	len == 0		3921163	0		==			
ANR	3921229	Identifier	len		3921163	0					
ANR	3921230	PrimaryExpression	0		3921163	1					
ANR	3921231	CompoundStatement		39:15:1106:1106	3921163	1					
ANR	3921232	ReturnStatement	return 0 ;	1757:2:52027:52035	3921163	0	True				
ANR	3921233	PrimaryExpression	0		3921163	0					
ANR	3921234	WhileStatement	while ( end >= path && IS_SLASH_P ( end ) )		3921163	5					
ANR	3921235	Condition	end >= path && IS_SLASH_P ( end )	1761:8:52079:52108	3921163	0	True				
ANR	3921236	AndExpression	end >= path && IS_SLASH_P ( end )		3921163	0		&&			
ANR	3921237	RelationalExpression	end >= path		3921163	0		>=			
ANR	3921238	Identifier	end		3921163	0					
ANR	3921239	Identifier	path		3921163	1					
ANR	3921240	CallExpression	IS_SLASH_P ( end )		3921163	1					
ANR	3921241	Callee	IS_SLASH_P		3921163	0					
ANR	3921242	Identifier	IS_SLASH_P		3921163	0					
ANR	3921243	ArgumentList	end		3921163	1					
ANR	3921244	Argument	end		3921163	0					
ANR	3921245	Identifier	end		3921163	0					
ANR	3921246	CompoundStatement		45:40:1231:1231	3921163	1					
ANR	3921247	ExpressionStatement	end --	1762:2:52115:52120	3921163	0	True				
ANR	3921248	PostIncDecOperationExpression	end --		3921163	0					
ANR	3921249	Identifier	end		3921163	0					
ANR	3921250	IncDec	--		3921163	1					
ANR	3921251	IfStatement	if ( end < path )		3921163	6					
ANR	3921252	Condition	end < path	1764:5:52130:52139	3921163	0	True				
ANR	3921253	RelationalExpression	end < path		3921163	0		<			
ANR	3921254	Identifier	end		3921163	0					
ANR	3921255	Identifier	path		3921163	1					
ANR	3921256	CompoundStatement		48:17:1262:1262	3921163	1					
ANR	3921257	ExpressionStatement	path [ 0 ] = DEFAULT_SLASH	1766:2:52186:52209	3921163	0	True				
ANR	3921258	AssignmentExpression	path [ 0 ] = DEFAULT_SLASH		3921163	0		=			
ANR	3921259	ArrayIndexing	path [ 0 ]		3921163	0					
ANR	3921260	Identifier	path		3921163	0					
ANR	3921261	PrimaryExpression	0		3921163	1					
ANR	3921262	Identifier	DEFAULT_SLASH		3921163	1					
ANR	3921263	ExpressionStatement	path [ 1 ] = '\\0'	1767:2:52213:52227	3921163	1	True				
ANR	3921264	AssignmentExpression	path [ 1 ] = '\\0'		3921163	0		=			
ANR	3921265	ArrayIndexing	path [ 1 ]		3921163	0					
ANR	3921266	Identifier	path		3921163	0					
ANR	3921267	PrimaryExpression	1		3921163	1					
ANR	3921268	PrimaryExpression	'\\0'		3921163	1					
ANR	3921269	ReturnStatement	return 1 + len_adjust ;	1768:2:52231:52252	3921163	2	True				
ANR	3921270	AdditiveExpression	1 + len_adjust		3921163	0		+			
ANR	3921271	PrimaryExpression	1		3921163	0					
ANR	3921272	Identifier	len_adjust		3921163	1					
ANR	3921273	WhileStatement	while ( end >= path && ! IS_SLASH_P ( end ) )		3921163	7					
ANR	3921274	Condition	end >= path && ! IS_SLASH_P ( end )	1772:8:52288:52318	3921163	0	True				
ANR	3921275	AndExpression	end >= path && ! IS_SLASH_P ( end )		3921163	0		&&			
ANR	3921276	RelationalExpression	end >= path		3921163	0		>=			
ANR	3921277	Identifier	end		3921163	0					
ANR	3921278	Identifier	path		3921163	1					
ANR	3921279	UnaryOperationExpression	! IS_SLASH_P ( end )		3921163	1					
ANR	3921280	UnaryOperator	!		3921163	0					
ANR	3921281	CallExpression	IS_SLASH_P ( end )		3921163	1					
ANR	3921282	Callee	IS_SLASH_P		3921163	0					
ANR	3921283	Identifier	IS_SLASH_P		3921163	0					
ANR	3921284	ArgumentList	end		3921163	1					
ANR	3921285	Argument	end		3921163	0					
ANR	3921286	Identifier	end		3921163	0					
ANR	3921287	CompoundStatement		56:41:1441:1441	3921163	1					
ANR	3921288	ExpressionStatement	end --	1773:2:52325:52330	3921163	0	True				
ANR	3921289	PostIncDecOperationExpression	end --		3921163	0					
ANR	3921290	Identifier	end		3921163	0					
ANR	3921291	IncDec	--		3921163	1					
ANR	3921292	IfStatement	if ( end < path )		3921163	8					
ANR	3921293	Condition	end < path	1775:5:52340:52349	3921163	0	True				
ANR	3921294	RelationalExpression	end < path		3921163	0		<			
ANR	3921295	Identifier	end		3921163	0					
ANR	3921296	Identifier	path		3921163	1					
ANR	3921297	CompoundStatement		59:17:1472:1472	3921163	1					
ANR	3921298	IfStatement	if ( len_adjust == 0 )		3921163	0					
ANR	3921299	Condition	len_adjust == 0	1778:6:52420:52434	3921163	0	True				
ANR	3921300	EqualityExpression	len_adjust == 0		3921163	0		==			
ANR	3921301	Identifier	len_adjust		3921163	0					
ANR	3921302	PrimaryExpression	0		3921163	1					
ANR	3921303	CompoundStatement		62:23:1557:1557	3921163	1					
ANR	3921304	ExpressionStatement	path [ 0 ] = '.'	1779:3:52442:52455	3921163	0	True				
ANR	3921305	AssignmentExpression	path [ 0 ] = '.'		3921163	0		=			
ANR	3921306	ArrayIndexing	path [ 0 ]		3921163	0					
ANR	3921307	Identifier	path		3921163	0					
ANR	3921308	PrimaryExpression	0		3921163	1					
ANR	3921309	PrimaryExpression	'.'		3921163	1					
ANR	3921310	ExpressionStatement	path [ 1 ] = '\\0'	1780:3:52460:52474	3921163	1	True				
ANR	3921311	AssignmentExpression	path [ 1 ] = '\\0'		3921163	0		=			
ANR	3921312	ArrayIndexing	path [ 1 ]		3921163	0					
ANR	3921313	Identifier	path		3921163	0					
ANR	3921314	PrimaryExpression	1		3921163	1					
ANR	3921315	PrimaryExpression	'\\0'		3921163	1					
ANR	3921316	ReturnStatement	return 1 ;	1781:3:52479:52487	3921163	2	True				
ANR	3921317	PrimaryExpression	1		3921163	0					
ANR	3921318	ElseStatement	else		3921163	0					
ANR	3921319	CompoundStatement		66:9:1643:1643	3921163	0					
ANR	3921320	ExpressionStatement	path [ 0 ] = '\\0'	1783:3:52528:52542	3921163	0	True				
ANR	3921321	AssignmentExpression	path [ 0 ] = '\\0'		3921163	0		=			
ANR	3921322	ArrayIndexing	path [ 0 ]		3921163	0					
ANR	3921323	Identifier	path		3921163	0					
ANR	3921324	PrimaryExpression	0		3921163	1					
ANR	3921325	PrimaryExpression	'\\0'		3921163	1					
ANR	3921326	ReturnStatement	return len_adjust ;	1784:3:52547:52564	3921163	1	True				
ANR	3921327	Identifier	len_adjust		3921163	0					
ANR	3921328	WhileStatement	while ( end >= path && IS_SLASH_P ( end ) )		3921163	9					
ANR	3921329	Condition	end >= path && IS_SLASH_P ( end )	1794:8:52708:52737	3921163	0	True				
ANR	3921330	AndExpression	end >= path && IS_SLASH_P ( end )		3921163	0		&&			
ANR	3921331	RelationalExpression	end >= path		3921163	0		>=			
ANR	3921332	Identifier	end		3921163	0					
ANR	3921333	Identifier	path		3921163	1					
ANR	3921334	CallExpression	IS_SLASH_P ( end )		3921163	1					
ANR	3921335	Callee	IS_SLASH_P		3921163	0					
ANR	3921336	Identifier	IS_SLASH_P		3921163	0					
ANR	3921337	ArgumentList	end		3921163	1					
ANR	3921338	Argument	end		3921163	0					
ANR	3921339	Identifier	end		3921163	0					
ANR	3921340	CompoundStatement		78:40:1860:1860	3921163	1					
ANR	3921341	ExpressionStatement	end --	1795:2:52744:52749	3921163	0	True				
ANR	3921342	PostIncDecOperationExpression	end --		3921163	0					
ANR	3921343	Identifier	end		3921163	0					
ANR	3921344	IncDec	--		3921163	1					
ANR	3921345	IfStatement	if ( end < path )		3921163	10					
ANR	3921346	Condition	end < path	1797:5:52759:52768	3921163	0	True				
ANR	3921347	RelationalExpression	end < path		3921163	0		<			
ANR	3921348	Identifier	end		3921163	0					
ANR	3921349	Identifier	path		3921163	1					
ANR	3921350	CompoundStatement		81:17:1891:1891	3921163	1					
ANR	3921351	ExpressionStatement	path [ 0 ] = DEFAULT_SLASH	1798:2:52775:52798	3921163	0	True				
ANR	3921352	AssignmentExpression	path [ 0 ] = DEFAULT_SLASH		3921163	0		=			
ANR	3921353	ArrayIndexing	path [ 0 ]		3921163	0					
ANR	3921354	Identifier	path		3921163	0					
ANR	3921355	PrimaryExpression	0		3921163	1					
ANR	3921356	Identifier	DEFAULT_SLASH		3921163	1					
ANR	3921357	ExpressionStatement	path [ 1 ] = '\\0'	1799:2:52802:52816	3921163	1	True				
ANR	3921358	AssignmentExpression	path [ 1 ] = '\\0'		3921163	0		=			
ANR	3921359	ArrayIndexing	path [ 1 ]		3921163	0					
ANR	3921360	Identifier	path		3921163	0					
ANR	3921361	PrimaryExpression	1		3921163	1					
ANR	3921362	PrimaryExpression	'\\0'		3921163	1					
ANR	3921363	ReturnStatement	return 1 + len_adjust ;	1800:2:52820:52841	3921163	2	True				
ANR	3921364	AdditiveExpression	1 + len_adjust		3921163	0		+			
ANR	3921365	PrimaryExpression	1		3921163	0					
ANR	3921366	Identifier	len_adjust		3921163	1					
ANR	3921367	ExpressionStatement	* ( end + 1 ) = '\\0'	1802:1:52847:52862	3921163	11	True				
ANR	3921368	AssignmentExpression	* ( end + 1 ) = '\\0'		3921163	0		=			
ANR	3921369	UnaryOperationExpression	* ( end + 1 )		3921163	0					
ANR	3921370	UnaryOperator	*		3921163	0					
ANR	3921371	AdditiveExpression	end + 1		3921163	1		+			
ANR	3921372	Identifier	end		3921163	0					
ANR	3921373	PrimaryExpression	1		3921163	1					
ANR	3921374	PrimaryExpression	'\\0'		3921163	1					
ANR	3921375	ReturnStatement	return ( size_t ) ( end + 1 - path ) + len_adjust ;	1804:1:52866:52910	3921163	12	True				
ANR	3921376	AdditiveExpression	( size_t ) ( end + 1 - path ) + len_adjust		3921163	0		+			
ANR	3921377	CastExpression	( size_t ) ( end + 1 - path )		3921163	0					
ANR	3921378	CastTarget	size_t		3921163	0					
ANR	3921379	AdditiveExpression	end + 1 - path		3921163	1		+			
ANR	3921380	Identifier	end		3921163	0					
ANR	3921381	AdditiveExpression	1 - path		3921163	1		-			
ANR	3921382	PrimaryExpression	1		3921163	0					
ANR	3921383	Identifier	path		3921163	1					
ANR	3921384	Identifier	len_adjust		3921163	1					
ANR	3921385	ReturnType	ZEND_API size_t		3921163	1					
ANR	3921386	Identifier	zend_dirname		3921163	2					
ANR	3921387	ParameterList	"char * path , size_t len"		3921163	3					
ANR	3921388	Parameter	char * path	1716:29:50855:50864	3921163	0	True				
ANR	3921389	ParameterType	char *		3921163	0					
ANR	3921390	Identifier	path		3921163	1					
ANR	3921391	Parameter	size_t len	1716:41:50867:50876	3921163	1	True				
ANR	3921392	ParameterType	size_t		3921163	0					
ANR	3921393	Identifier	len		3921163	1					
ANR	3921394	CFGEntryNode	ENTRY		3921163		True				
ANR	3921395	CFGExitNode	EXIT		3921163		True				
ANR	3921396	Symbol	path		3921163						
ANR	3921397	Symbol	isalpha		3921163						
ANR	3921398	Symbol	DEFAULT_SLASH		3921163						
ANR	3921399	Symbol	len		3921163						
ANR	3921400	Symbol	* ( end + 1 )		3921163						
ANR	3921401	Symbol	IS_SLASH_P		3921163						
ANR	3921402	Symbol	* path		3921163						
ANR	3921403	Symbol	end		3921163						
ANR	3921404	Symbol	* end		3921163						
ANR	3921405	Symbol	len_adjust		3921163						
ANR	3921406	Function	zend_adjust_for_fetch_type	1808:0:52925:53445							
ANR	3921407	FunctionDef	"zend_adjust_for_fetch_type (zend_op * opline , uint32_t type)"		3921406	0					
ANR	3921408	CompoundStatement		1809:0:53006:53445	3921406	0					
ANR	3921409	SwitchStatement	switch ( type & BP_VAR_MASK )		3921406	0					
ANR	3921410	Condition	type & BP_VAR_MASK	1810:9:53017:53034	3921406	0	True				
ANR	3921411	BitAndExpression	type & BP_VAR_MASK		3921406	0		&			
ANR	3921412	Identifier	type		3921406	0					
ANR	3921413	Identifier	BP_VAR_MASK		3921406	1					
ANR	3921414	CompoundStatement		2:29:30:30	3921406	1					
ANR	3921415	Label	case BP_VAR_R :	1811:2:53041:53054	3921406	0	True				
ANR	3921416	Identifier	BP_VAR_R		3921406	0					
ANR	3921417	ReturnStatement	return ;	1812:3:53059:53065	3921406	1	True				
ANR	3921418	Label	case BP_VAR_W :	1813:2:53069:53082	3921406	2	True				
ANR	3921419	Identifier	BP_VAR_W		3921406	0					
ANR	3921420	Label	case BP_VAR_REF :	1814:2:53086:53101	3921406	3	True				
ANR	3921421	Identifier	BP_VAR_REF		3921406	0					
ANR	3921422	ExpressionStatement	opline -> opcode += 3	1815:3:53106:53125	3921406	4	True				
ANR	3921423	AssignmentExpression	opline -> opcode += 3		3921406	0		+=			
ANR	3921424	PtrMemberAccess	opline -> opcode		3921406	0					
ANR	3921425	Identifier	opline		3921406	0					
ANR	3921426	Identifier	opcode		3921406	1					
ANR	3921427	PrimaryExpression	3		3921406	1					
ANR	3921428	ReturnStatement	return ;	1816:3:53130:53136	3921406	5	True				
ANR	3921429	Label	case BP_VAR_RW :	1817:2:53140:53154	3921406	6	True				
ANR	3921430	Identifier	BP_VAR_RW		3921406	0					
ANR	3921431	ExpressionStatement	opline -> opcode += 6	1818:3:53159:53178	3921406	7	True				
ANR	3921432	AssignmentExpression	opline -> opcode += 6		3921406	0		+=			
ANR	3921433	PtrMemberAccess	opline -> opcode		3921406	0					
ANR	3921434	Identifier	opline		3921406	0					
ANR	3921435	Identifier	opcode		3921406	1					
ANR	3921436	PrimaryExpression	6		3921406	1					
ANR	3921437	ReturnStatement	return ;	1819:3:53183:53189	3921406	8	True				
ANR	3921438	Label	case BP_VAR_IS :	1820:2:53193:53207	3921406	9	True				
ANR	3921439	Identifier	BP_VAR_IS		3921406	0					
ANR	3921440	ExpressionStatement	opline -> opcode += 9	1821:3:53212:53231	3921406	10	True				
ANR	3921441	AssignmentExpression	opline -> opcode += 9		3921406	0		+=			
ANR	3921442	PtrMemberAccess	opline -> opcode		3921406	0					
ANR	3921443	Identifier	opline		3921406	0					
ANR	3921444	Identifier	opcode		3921406	1					
ANR	3921445	PrimaryExpression	9		3921406	1					
ANR	3921446	ReturnStatement	return ;	1822:3:53236:53242	3921406	11	True				
ANR	3921447	Label	case BP_VAR_FUNC_ARG :	1823:2:53246:53266	3921406	12	True				
ANR	3921448	Identifier	BP_VAR_FUNC_ARG		3921406	0					
ANR	3921449	ExpressionStatement	opline -> opcode += 12	1824:3:53271:53291	3921406	13	True				
ANR	3921450	AssignmentExpression	opline -> opcode += 12		3921406	0		+=			
ANR	3921451	PtrMemberAccess	opline -> opcode		3921406	0					
ANR	3921452	Identifier	opline		3921406	0					
ANR	3921453	Identifier	opcode		3921406	1					
ANR	3921454	PrimaryExpression	12		3921406	1					
ANR	3921455	ExpressionStatement	opline -> extended_value |= type >> BP_VAR_SHIFT	1825:3:53296:53342	3921406	14	True				
ANR	3921456	AssignmentExpression	opline -> extended_value |= type >> BP_VAR_SHIFT		3921406	0		|=			
ANR	3921457	PtrMemberAccess	opline -> extended_value		3921406	0					
ANR	3921458	Identifier	opline		3921406	0					
ANR	3921459	Identifier	extended_value		3921406	1					
ANR	3921460	ShiftExpression	type >> BP_VAR_SHIFT		3921406	1		>>			
ANR	3921461	Identifier	type		3921406	0					
ANR	3921462	Identifier	BP_VAR_SHIFT		3921406	1					
ANR	3921463	ReturnStatement	return ;	1826:3:53347:53353	3921406	15	True				
ANR	3921464	Label	case BP_VAR_UNSET :	1827:2:53357:53374	3921406	16	True				
ANR	3921465	Identifier	BP_VAR_UNSET		3921406	0					
ANR	3921466	ExpressionStatement	opline -> opcode += 15	1828:3:53379:53399	3921406	17	True				
ANR	3921467	AssignmentExpression	opline -> opcode += 15		3921406	0		+=			
ANR	3921468	PtrMemberAccess	opline -> opcode		3921406	0					
ANR	3921469	Identifier	opline		3921406	0					
ANR	3921470	Identifier	opcode		3921406	1					
ANR	3921471	PrimaryExpression	15		3921406	1					
ANR	3921472	ReturnStatement	return ;	1829:3:53404:53410	3921406	18	True				
ANR	3921473	Statement	EMPTY_SWITCH_DEFAULT_CASE	1830:2:53414:53438	3921406	19	True				
ANR	3921474	Statement	(	1830:27:53439:53439	3921406	20	True				
ANR	3921475	Statement	)	1830:28:53440:53440	3921406	21	True				
ANR	3921476	ReturnType	static void		3921406	1					
ANR	3921477	Identifier	zend_adjust_for_fetch_type		3921406	2					
ANR	3921478	ParameterList	"zend_op * opline , uint32_t type"		3921406	3					
ANR	3921479	Parameter	zend_op * opline	1808:39:52964:52978	3921406	0	True				
ANR	3921480	ParameterType	zend_op *		3921406	0					
ANR	3921481	Identifier	opline		3921406	1					
ANR	3921482	Parameter	uint32_t type	1808:56:52981:52993	3921406	1	True				
ANR	3921483	ParameterType	uint32_t		3921406	0					
ANR	3921484	Identifier	type		3921406	1					
ANR	3921485	CFGEntryNode	ENTRY		3921406		True				
ANR	3921486	CFGExitNode	EXIT		3921406		True				
ANR	3921487	Symbol	BP_VAR_MASK		3921406						
ANR	3921488	Symbol	opline		3921406						
ANR	3921489	Symbol	* opline		3921406						
ANR	3921490	Symbol	BP_VAR_SHIFT		3921406						
ANR	3921491	Symbol	opline -> opcode		3921406						
ANR	3921492	Symbol	type		3921406						
ANR	3921493	Symbol	opline -> extended_value		3921406						
ANR	3921494	Function	zend_make_var_result	1835:0:53458:53675							
ANR	3921495	FunctionDef	"zend_make_var_result (znode * result , zend_op * opline)"		3921494	0					
ANR	3921496	CompoundStatement		1836:0:53540:53675	3921494	0					
ANR	3921497	ExpressionStatement	opline -> result_type = IS_VAR	1837:1:53543:53571	3921494	0	True				
ANR	3921498	AssignmentExpression	opline -> result_type = IS_VAR		3921494	0		=			
ANR	3921499	PtrMemberAccess	opline -> result_type		3921494	0					
ANR	3921500	Identifier	opline		3921494	0					
ANR	3921501	Identifier	result_type		3921494	1					
ANR	3921502	Identifier	IS_VAR		3921494	1					
ANR	3921503	ExpressionStatement	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )	1838:1:53574:53638	3921494	1	True				
ANR	3921504	AssignmentExpression	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )		3921494	0		=			
ANR	3921505	MemberAccess	opline -> result . var		3921494	0					
ANR	3921506	PtrMemberAccess	opline -> result		3921494	0					
ANR	3921507	Identifier	opline		3921494	0					
ANR	3921508	Identifier	result		3921494	1					
ANR	3921509	Identifier	var		3921494	1					
ANR	3921510	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3921494	1					
ANR	3921511	Callee	get_temporary_variable		3921494	0					
ANR	3921512	Identifier	get_temporary_variable		3921494	0					
ANR	3921513	ArgumentList	CG ( active_op_array )		3921494	1					
ANR	3921514	Argument	CG ( active_op_array )		3921494	0					
ANR	3921515	CallExpression	CG ( active_op_array )		3921494	0					
ANR	3921516	Callee	CG		3921494	0					
ANR	3921517	Identifier	CG		3921494	0					
ANR	3921518	ArgumentList	active_op_array		3921494	1					
ANR	3921519	Argument	active_op_array		3921494	0					
ANR	3921520	Identifier	active_op_array		3921494	0					
ANR	3921521	ExpressionStatement	"GET_NODE ( result , opline -> result )"	1839:1:53641:53673	3921494	2	True				
ANR	3921522	CallExpression	"GET_NODE ( result , opline -> result )"		3921494	0					
ANR	3921523	Callee	GET_NODE		3921494	0					
ANR	3921524	Identifier	GET_NODE		3921494	0					
ANR	3921525	ArgumentList	result		3921494	1					
ANR	3921526	Argument	result		3921494	0					
ANR	3921527	Identifier	result		3921494	0					
ANR	3921528	Argument	opline -> result		3921494	1					
ANR	3921529	PtrMemberAccess	opline -> result		3921494	0					
ANR	3921530	Identifier	opline		3921494	0					
ANR	3921531	Identifier	result		3921494	1					
ANR	3921532	ReturnType	static inline void		3921494	1					
ANR	3921533	Identifier	zend_make_var_result		3921494	2					
ANR	3921534	ParameterList	"znode * result , zend_op * opline"		3921494	3					
ANR	3921535	Parameter	znode * result	1835:40:53498:53510	3921494	0	True				
ANR	3921536	ParameterType	znode *		3921494	0					
ANR	3921537	Identifier	result		3921494	1					
ANR	3921538	Parameter	zend_op * opline	1835:55:53513:53527	3921494	1	True				
ANR	3921539	ParameterType	zend_op *		3921494	0					
ANR	3921540	Identifier	opline		3921494	1					
ANR	3921541	CFGEntryNode	ENTRY		3921494		True				
ANR	3921542	CFGExitNode	EXIT		3921494		True				
ANR	3921543	Symbol	result		3921494						
ANR	3921544	Symbol	opline -> result_type		3921494						
ANR	3921545	Symbol	opline		3921494						
ANR	3921546	Symbol	* opline		3921494						
ANR	3921547	Symbol	CG		3921494						
ANR	3921548	Symbol	active_op_array		3921494						
ANR	3921549	Symbol	get_temporary_variable		3921494						
ANR	3921550	Symbol	IS_VAR		3921494						
ANR	3921551	Symbol	opline -> result . var		3921494						
ANR	3921552	Symbol	opline -> result		3921494						
ANR	3921553	Function	zend_make_tmp_result	1843:0:53688:53909							
ANR	3921554	FunctionDef	"zend_make_tmp_result (znode * result , zend_op * opline)"		3921553	0					
ANR	3921555	CompoundStatement		1844:0:53770:53909	3921553	0					
ANR	3921556	ExpressionStatement	opline -> result_type = IS_TMP_VAR	1845:1:53773:53805	3921553	0	True				
ANR	3921557	AssignmentExpression	opline -> result_type = IS_TMP_VAR		3921553	0		=			
ANR	3921558	PtrMemberAccess	opline -> result_type		3921553	0					
ANR	3921559	Identifier	opline		3921553	0					
ANR	3921560	Identifier	result_type		3921553	1					
ANR	3921561	Identifier	IS_TMP_VAR		3921553	1					
ANR	3921562	ExpressionStatement	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )	1846:1:53808:53872	3921553	1	True				
ANR	3921563	AssignmentExpression	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )		3921553	0		=			
ANR	3921564	MemberAccess	opline -> result . var		3921553	0					
ANR	3921565	PtrMemberAccess	opline -> result		3921553	0					
ANR	3921566	Identifier	opline		3921553	0					
ANR	3921567	Identifier	result		3921553	1					
ANR	3921568	Identifier	var		3921553	1					
ANR	3921569	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3921553	1					
ANR	3921570	Callee	get_temporary_variable		3921553	0					
ANR	3921571	Identifier	get_temporary_variable		3921553	0					
ANR	3921572	ArgumentList	CG ( active_op_array )		3921553	1					
ANR	3921573	Argument	CG ( active_op_array )		3921553	0					
ANR	3921574	CallExpression	CG ( active_op_array )		3921553	0					
ANR	3921575	Callee	CG		3921553	0					
ANR	3921576	Identifier	CG		3921553	0					
ANR	3921577	ArgumentList	active_op_array		3921553	1					
ANR	3921578	Argument	active_op_array		3921553	0					
ANR	3921579	Identifier	active_op_array		3921553	0					
ANR	3921580	ExpressionStatement	"GET_NODE ( result , opline -> result )"	1847:1:53875:53907	3921553	2	True				
ANR	3921581	CallExpression	"GET_NODE ( result , opline -> result )"		3921553	0					
ANR	3921582	Callee	GET_NODE		3921553	0					
ANR	3921583	Identifier	GET_NODE		3921553	0					
ANR	3921584	ArgumentList	result		3921553	1					
ANR	3921585	Argument	result		3921553	0					
ANR	3921586	Identifier	result		3921553	0					
ANR	3921587	Argument	opline -> result		3921553	1					
ANR	3921588	PtrMemberAccess	opline -> result		3921553	0					
ANR	3921589	Identifier	opline		3921553	0					
ANR	3921590	Identifier	result		3921553	1					
ANR	3921591	ReturnType	static inline void		3921553	1					
ANR	3921592	Identifier	zend_make_tmp_result		3921553	2					
ANR	3921593	ParameterList	"znode * result , zend_op * opline"		3921553	3					
ANR	3921594	Parameter	znode * result	1843:40:53728:53740	3921553	0	True				
ANR	3921595	ParameterType	znode *		3921553	0					
ANR	3921596	Identifier	result		3921553	1					
ANR	3921597	Parameter	zend_op * opline	1843:55:53743:53757	3921553	1	True				
ANR	3921598	ParameterType	zend_op *		3921553	0					
ANR	3921599	Identifier	opline		3921553	1					
ANR	3921600	CFGEntryNode	ENTRY		3921553		True				
ANR	3921601	CFGExitNode	EXIT		3921553		True				
ANR	3921602	Symbol	result		3921553						
ANR	3921603	Symbol	opline -> result_type		3921553						
ANR	3921604	Symbol	opline		3921553						
ANR	3921605	Symbol	* opline		3921553						
ANR	3921606	Symbol	CG		3921553						
ANR	3921607	Symbol	active_op_array		3921553						
ANR	3921608	Symbol	get_temporary_variable		3921553						
ANR	3921609	Symbol	opline -> result		3921553						
ANR	3921610	Symbol	opline -> result . var		3921553						
ANR	3921611	Symbol	IS_TMP_VAR		3921553						
ANR	3921612	Function	zend_emit_op	1851:0:53922:54357							
ANR	3921613	FunctionDef	"zend_emit_op (znode * result , zend_uchar opcode , znode * op1 , znode * op2)"		3921612	0					
ANR	3921614	CompoundStatement		1852:0:54019:54357	3921612	0					
ANR	3921615	IdentifierDeclStatement	zend_op * opline = get_next_op ( CG ( active_op_array ) ) ;	1853:1:54022:54072	3921612	0	True				
ANR	3921616	IdentifierDecl	* opline = get_next_op ( CG ( active_op_array ) )		3921612	0					
ANR	3921617	IdentifierDeclType	zend_op *		3921612	0					
ANR	3921618	Identifier	opline		3921612	1					
ANR	3921619	AssignmentExpression	* opline = get_next_op ( CG ( active_op_array ) )		3921612	2		=			
ANR	3921620	Identifier	opline		3921612	0					
ANR	3921621	CallExpression	get_next_op ( CG ( active_op_array ) )		3921612	1					
ANR	3921622	Callee	get_next_op		3921612	0					
ANR	3921623	Identifier	get_next_op		3921612	0					
ANR	3921624	ArgumentList	CG ( active_op_array )		3921612	1					
ANR	3921625	Argument	CG ( active_op_array )		3921612	0					
ANR	3921626	CallExpression	CG ( active_op_array )		3921612	0					
ANR	3921627	Callee	CG		3921612	0					
ANR	3921628	Identifier	CG		3921612	0					
ANR	3921629	ArgumentList	active_op_array		3921612	1					
ANR	3921630	Argument	active_op_array		3921612	0					
ANR	3921631	Identifier	active_op_array		3921612	0					
ANR	3921632	ExpressionStatement	opline -> opcode = opcode	1854:1:54075:54098	3921612	1	True				
ANR	3921633	AssignmentExpression	opline -> opcode = opcode		3921612	0		=			
ANR	3921634	PtrMemberAccess	opline -> opcode		3921612	0					
ANR	3921635	Identifier	opline		3921612	0					
ANR	3921636	Identifier	opcode		3921612	1					
ANR	3921637	Identifier	opcode		3921612	1					
ANR	3921638	IfStatement	if ( op1 == NULL )		3921612	2					
ANR	3921639	Condition	op1 == NULL	1856:5:54106:54116	3921612	0	True				
ANR	3921640	EqualityExpression	op1 == NULL		3921612	0		==			
ANR	3921641	Identifier	op1		3921612	0					
ANR	3921642	Identifier	NULL		3921612	1					
ANR	3921643	CompoundStatement		5:18:99:99	3921612	1					
ANR	3921644	ExpressionStatement	SET_UNUSED ( opline -> op1 )	1857:2:54123:54146	3921612	0	True				
ANR	3921645	CallExpression	SET_UNUSED ( opline -> op1 )		3921612	0					
ANR	3921646	Callee	SET_UNUSED		3921612	0					
ANR	3921647	Identifier	SET_UNUSED		3921612	0					
ANR	3921648	ArgumentList	opline -> op1		3921612	1					
ANR	3921649	Argument	opline -> op1		3921612	0					
ANR	3921650	PtrMemberAccess	opline -> op1		3921612	0					
ANR	3921651	Identifier	opline		3921612	0					
ANR	3921652	Identifier	op1		3921612	1					
ANR	3921653	ElseStatement	else		3921612	0					
ANR	3921654	CompoundStatement		7:8:136:136	3921612	0					
ANR	3921655	ExpressionStatement	"SET_NODE ( opline -> op1 , op1 )"	1859:2:54160:54186	3921612	0	True				
ANR	3921656	CallExpression	"SET_NODE ( opline -> op1 , op1 )"		3921612	0					
ANR	3921657	Callee	SET_NODE		3921612	0					
ANR	3921658	Identifier	SET_NODE		3921612	0					
ANR	3921659	ArgumentList	opline -> op1		3921612	1					
ANR	3921660	Argument	opline -> op1		3921612	0					
ANR	3921661	PtrMemberAccess	opline -> op1		3921612	0					
ANR	3921662	Identifier	opline		3921612	0					
ANR	3921663	Identifier	op1		3921612	1					
ANR	3921664	Argument	op1		3921612	1					
ANR	3921665	Identifier	op1		3921612	0					
ANR	3921666	IfStatement	if ( op2 == NULL )		3921612	3					
ANR	3921667	Condition	op2 == NULL	1862:5:54197:54207	3921612	0	True				
ANR	3921668	EqualityExpression	op2 == NULL		3921612	0		==			
ANR	3921669	Identifier	op2		3921612	0					
ANR	3921670	Identifier	NULL		3921612	1					
ANR	3921671	CompoundStatement		11:18:190:190	3921612	1					
ANR	3921672	ExpressionStatement	SET_UNUSED ( opline -> op2 )	1863:2:54214:54237	3921612	0	True				
ANR	3921673	CallExpression	SET_UNUSED ( opline -> op2 )		3921612	0					
ANR	3921674	Callee	SET_UNUSED		3921612	0					
ANR	3921675	Identifier	SET_UNUSED		3921612	0					
ANR	3921676	ArgumentList	opline -> op2		3921612	1					
ANR	3921677	Argument	opline -> op2		3921612	0					
ANR	3921678	PtrMemberAccess	opline -> op2		3921612	0					
ANR	3921679	Identifier	opline		3921612	0					
ANR	3921680	Identifier	op2		3921612	1					
ANR	3921681	ElseStatement	else		3921612	0					
ANR	3921682	CompoundStatement		13:8:227:227	3921612	0					
ANR	3921683	ExpressionStatement	"SET_NODE ( opline -> op2 , op2 )"	1865:2:54251:54277	3921612	0	True				
ANR	3921684	CallExpression	"SET_NODE ( opline -> op2 , op2 )"		3921612	0					
ANR	3921685	Callee	SET_NODE		3921612	0					
ANR	3921686	Identifier	SET_NODE		3921612	0					
ANR	3921687	ArgumentList	opline -> op2		3921612	1					
ANR	3921688	Argument	opline -> op2		3921612	0					
ANR	3921689	PtrMemberAccess	opline -> op2		3921612	0					
ANR	3921690	Identifier	opline		3921612	0					
ANR	3921691	Identifier	op2		3921612	1					
ANR	3921692	Argument	op2		3921612	1					
ANR	3921693	Identifier	op2		3921612	0					
ANR	3921694	IfStatement	if ( result )		3921612	4					
ANR	3921695	Condition	result	1868:5:54288:54293	3921612	0	True				
ANR	3921696	Identifier	result		3921612	0					
ANR	3921697	CompoundStatement		17:13:276:276	3921612	1					
ANR	3921698	ExpressionStatement	"zend_make_var_result ( result , opline )"	1869:2:54300:54336	3921612	0	True				
ANR	3921699	CallExpression	"zend_make_var_result ( result , opline )"		3921612	0					
ANR	3921700	Callee	zend_make_var_result		3921612	0					
ANR	3921701	Identifier	zend_make_var_result		3921612	0					
ANR	3921702	ArgumentList	result		3921612	1					
ANR	3921703	Argument	result		3921612	0					
ANR	3921704	Identifier	result		3921612	0					
ANR	3921705	Argument	opline		3921612	1					
ANR	3921706	Identifier	opline		3921612	0					
ANR	3921707	ReturnStatement	return opline ;	1871:1:54342:54355	3921612	5	True				
ANR	3921708	Identifier	opline		3921612	0					
ANR	3921709	ReturnType	static zend_op *		3921612	1					
ANR	3921710	Identifier	zend_emit_op		3921612	2					
ANR	3921711	ParameterList	"znode * result , zend_uchar opcode , znode * op1 , znode * op2"		3921612	3					
ANR	3921712	Parameter	znode * result	1851:29:53951:53963	3921612	0	True				
ANR	3921713	ParameterType	znode *		3921612	0					
ANR	3921714	Identifier	result		3921612	1					
ANR	3921715	Parameter	zend_uchar opcode	1851:44:53966:53982	3921612	1	True				
ANR	3921716	ParameterType	zend_uchar		3921612	0					
ANR	3921717	Identifier	opcode		3921612	1					
ANR	3921718	Parameter	znode * op1	1851:63:53985:53994	3921612	2	True				
ANR	3921719	ParameterType	znode *		3921612	0					
ANR	3921720	Identifier	op1		3921612	1					
ANR	3921721	Parameter	znode * op2	1851:75:53997:54006	3921612	3	True				
ANR	3921722	ParameterType	znode *		3921612	0					
ANR	3921723	Identifier	op2		3921612	1					
ANR	3921724	CFGEntryNode	ENTRY		3921612		True				
ANR	3921725	CFGExitNode	EXIT		3921612		True				
ANR	3921726	Symbol	opline -> op1		3921612						
ANR	3921727	Symbol	opline -> op2		3921612						
ANR	3921728	Symbol	get_next_op		3921612						
ANR	3921729	Symbol	NULL		3921612						
ANR	3921730	Symbol	CG		3921612						
ANR	3921731	Symbol	active_op_array		3921612						
ANR	3921732	Symbol	opcode		3921612						
ANR	3921733	Symbol	result		3921612						
ANR	3921734	Symbol	op2		3921612						
ANR	3921735	Symbol	op1		3921612						
ANR	3921736	Symbol	opline		3921612						
ANR	3921737	Symbol	* opline		3921612						
ANR	3921738	Symbol	opline -> opcode		3921612						
ANR	3921739	Function	zend_emit_op_tmp	1875:0:54370:54810							
ANR	3921740	FunctionDef	"zend_emit_op_tmp (znode * result , zend_uchar opcode , znode * op1 , znode * op2)"		3921739	0					
ANR	3921741	CompoundStatement		1876:0:54471:54810	3921739	0					
ANR	3921742	IdentifierDeclStatement	zend_op * opline = get_next_op ( CG ( active_op_array ) ) ;	1877:1:54474:54524	3921739	0	True				
ANR	3921743	IdentifierDecl	* opline = get_next_op ( CG ( active_op_array ) )		3921739	0					
ANR	3921744	IdentifierDeclType	zend_op *		3921739	0					
ANR	3921745	Identifier	opline		3921739	1					
ANR	3921746	AssignmentExpression	* opline = get_next_op ( CG ( active_op_array ) )		3921739	2		=			
ANR	3921747	Identifier	opline		3921739	0					
ANR	3921748	CallExpression	get_next_op ( CG ( active_op_array ) )		3921739	1					
ANR	3921749	Callee	get_next_op		3921739	0					
ANR	3921750	Identifier	get_next_op		3921739	0					
ANR	3921751	ArgumentList	CG ( active_op_array )		3921739	1					
ANR	3921752	Argument	CG ( active_op_array )		3921739	0					
ANR	3921753	CallExpression	CG ( active_op_array )		3921739	0					
ANR	3921754	Callee	CG		3921739	0					
ANR	3921755	Identifier	CG		3921739	0					
ANR	3921756	ArgumentList	active_op_array		3921739	1					
ANR	3921757	Argument	active_op_array		3921739	0					
ANR	3921758	Identifier	active_op_array		3921739	0					
ANR	3921759	ExpressionStatement	opline -> opcode = opcode	1878:1:54527:54550	3921739	1	True				
ANR	3921760	AssignmentExpression	opline -> opcode = opcode		3921739	0		=			
ANR	3921761	PtrMemberAccess	opline -> opcode		3921739	0					
ANR	3921762	Identifier	opline		3921739	0					
ANR	3921763	Identifier	opcode		3921739	1					
ANR	3921764	Identifier	opcode		3921739	1					
ANR	3921765	IfStatement	if ( op1 == NULL )		3921739	2					
ANR	3921766	Condition	op1 == NULL	1880:5:54558:54568	3921739	0	True				
ANR	3921767	EqualityExpression	op1 == NULL		3921739	0		==			
ANR	3921768	Identifier	op1		3921739	0					
ANR	3921769	Identifier	NULL		3921739	1					
ANR	3921770	CompoundStatement		5:18:99:99	3921739	1					
ANR	3921771	ExpressionStatement	SET_UNUSED ( opline -> op1 )	1881:2:54575:54598	3921739	0	True				
ANR	3921772	CallExpression	SET_UNUSED ( opline -> op1 )		3921739	0					
ANR	3921773	Callee	SET_UNUSED		3921739	0					
ANR	3921774	Identifier	SET_UNUSED		3921739	0					
ANR	3921775	ArgumentList	opline -> op1		3921739	1					
ANR	3921776	Argument	opline -> op1		3921739	0					
ANR	3921777	PtrMemberAccess	opline -> op1		3921739	0					
ANR	3921778	Identifier	opline		3921739	0					
ANR	3921779	Identifier	op1		3921739	1					
ANR	3921780	ElseStatement	else		3921739	0					
ANR	3921781	CompoundStatement		7:8:136:136	3921739	0					
ANR	3921782	ExpressionStatement	"SET_NODE ( opline -> op1 , op1 )"	1883:2:54612:54638	3921739	0	True				
ANR	3921783	CallExpression	"SET_NODE ( opline -> op1 , op1 )"		3921739	0					
ANR	3921784	Callee	SET_NODE		3921739	0					
ANR	3921785	Identifier	SET_NODE		3921739	0					
ANR	3921786	ArgumentList	opline -> op1		3921739	1					
ANR	3921787	Argument	opline -> op1		3921739	0					
ANR	3921788	PtrMemberAccess	opline -> op1		3921739	0					
ANR	3921789	Identifier	opline		3921739	0					
ANR	3921790	Identifier	op1		3921739	1					
ANR	3921791	Argument	op1		3921739	1					
ANR	3921792	Identifier	op1		3921739	0					
ANR	3921793	IfStatement	if ( op2 == NULL )		3921739	3					
ANR	3921794	Condition	op2 == NULL	1886:5:54649:54659	3921739	0	True				
ANR	3921795	EqualityExpression	op2 == NULL		3921739	0		==			
ANR	3921796	Identifier	op2		3921739	0					
ANR	3921797	Identifier	NULL		3921739	1					
ANR	3921798	CompoundStatement		11:18:190:190	3921739	1					
ANR	3921799	ExpressionStatement	SET_UNUSED ( opline -> op2 )	1887:2:54666:54689	3921739	0	True				
ANR	3921800	CallExpression	SET_UNUSED ( opline -> op2 )		3921739	0					
ANR	3921801	Callee	SET_UNUSED		3921739	0					
ANR	3921802	Identifier	SET_UNUSED		3921739	0					
ANR	3921803	ArgumentList	opline -> op2		3921739	1					
ANR	3921804	Argument	opline -> op2		3921739	0					
ANR	3921805	PtrMemberAccess	opline -> op2		3921739	0					
ANR	3921806	Identifier	opline		3921739	0					
ANR	3921807	Identifier	op2		3921739	1					
ANR	3921808	ElseStatement	else		3921739	0					
ANR	3921809	CompoundStatement		13:8:227:227	3921739	0					
ANR	3921810	ExpressionStatement	"SET_NODE ( opline -> op2 , op2 )"	1889:2:54703:54729	3921739	0	True				
ANR	3921811	CallExpression	"SET_NODE ( opline -> op2 , op2 )"		3921739	0					
ANR	3921812	Callee	SET_NODE		3921739	0					
ANR	3921813	Identifier	SET_NODE		3921739	0					
ANR	3921814	ArgumentList	opline -> op2		3921739	1					
ANR	3921815	Argument	opline -> op2		3921739	0					
ANR	3921816	PtrMemberAccess	opline -> op2		3921739	0					
ANR	3921817	Identifier	opline		3921739	0					
ANR	3921818	Identifier	op2		3921739	1					
ANR	3921819	Argument	op2		3921739	1					
ANR	3921820	Identifier	op2		3921739	0					
ANR	3921821	IfStatement	if ( result )		3921739	4					
ANR	3921822	Condition	result	1892:5:54740:54745	3921739	0	True				
ANR	3921823	Identifier	result		3921739	0					
ANR	3921824	CompoundStatement		17:13:276:276	3921739	1					
ANR	3921825	ExpressionStatement	"zend_make_tmp_result ( result , opline )"	1893:2:54752:54788	3921739	0	True				
ANR	3921826	CallExpression	"zend_make_tmp_result ( result , opline )"		3921739	0					
ANR	3921827	Callee	zend_make_tmp_result		3921739	0					
ANR	3921828	Identifier	zend_make_tmp_result		3921739	0					
ANR	3921829	ArgumentList	result		3921739	1					
ANR	3921830	Argument	result		3921739	0					
ANR	3921831	Identifier	result		3921739	0					
ANR	3921832	Argument	opline		3921739	1					
ANR	3921833	Identifier	opline		3921739	0					
ANR	3921834	ReturnStatement	return opline ;	1896:1:54795:54808	3921739	5	True				
ANR	3921835	Identifier	opline		3921739	0					
ANR	3921836	ReturnType	static zend_op *		3921739	1					
ANR	3921837	Identifier	zend_emit_op_tmp		3921739	2					
ANR	3921838	ParameterList	"znode * result , zend_uchar opcode , znode * op1 , znode * op2"		3921739	3					
ANR	3921839	Parameter	znode * result	1875:33:54403:54415	3921739	0	True				
ANR	3921840	ParameterType	znode *		3921739	0					
ANR	3921841	Identifier	result		3921739	1					
ANR	3921842	Parameter	zend_uchar opcode	1875:48:54418:54434	3921739	1	True				
ANR	3921843	ParameterType	zend_uchar		3921739	0					
ANR	3921844	Identifier	opcode		3921739	1					
ANR	3921845	Parameter	znode * op1	1875:67:54437:54446	3921739	2	True				
ANR	3921846	ParameterType	znode *		3921739	0					
ANR	3921847	Identifier	op1		3921739	1					
ANR	3921848	Parameter	znode * op2	1875:79:54449:54458	3921739	3	True				
ANR	3921849	ParameterType	znode *		3921739	0					
ANR	3921850	Identifier	op2		3921739	1					
ANR	3921851	CFGEntryNode	ENTRY		3921739		True				
ANR	3921852	CFGExitNode	EXIT		3921739		True				
ANR	3921853	Symbol	opline -> op1		3921739						
ANR	3921854	Symbol	opline -> op2		3921739						
ANR	3921855	Symbol	get_next_op		3921739						
ANR	3921856	Symbol	NULL		3921739						
ANR	3921857	Symbol	CG		3921739						
ANR	3921858	Symbol	active_op_array		3921739						
ANR	3921859	Symbol	opcode		3921739						
ANR	3921860	Symbol	result		3921739						
ANR	3921861	Symbol	op2		3921739						
ANR	3921862	Symbol	op1		3921739						
ANR	3921863	Symbol	opline		3921739						
ANR	3921864	Symbol	* opline		3921739						
ANR	3921865	Symbol	opline -> opcode		3921739						
ANR	3921866	Function	zend_emit_tick	1900:0:54823:55280							
ANR	3921867	FunctionDef	zend_emit_tick ()		3921866	0					
ANR	3921868	CompoundStatement		1901:0:54866:55280	3921866	0					
ANR	3921869	IdentifierDeclStatement	zend_op * opline ;	1902:1:54869:54884	3921866	0	True				
ANR	3921870	IdentifierDecl	* opline		3921866	0					
ANR	3921871	IdentifierDeclType	zend_op *		3921866	0					
ANR	3921872	Identifier	opline		3921866	1					
ANR	3921873	IfStatement	if ( CG ( active_op_array ) -> last && CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] . opcode == ZEND_TICKS )		3921866	1					
ANR	3921874	Condition	CG ( active_op_array ) -> last && CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] . opcode == ZEND_TICKS	1905:5:54976:55084	3921866	0	True				
ANR	3921875	AndExpression	CG ( active_op_array ) -> last && CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] . opcode == ZEND_TICKS		3921866	0		&&			
ANR	3921876	PtrMemberAccess	CG ( active_op_array ) -> last		3921866	0					
ANR	3921877	CallExpression	CG ( active_op_array )		3921866	0					
ANR	3921878	Callee	CG		3921866	0					
ANR	3921879	Identifier	CG		3921866	0					
ANR	3921880	ArgumentList	active_op_array		3921866	1					
ANR	3921881	Argument	active_op_array		3921866	0					
ANR	3921882	Identifier	active_op_array		3921866	0					
ANR	3921883	Identifier	last		3921866	1					
ANR	3921884	EqualityExpression	CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] . opcode == ZEND_TICKS		3921866	1		==			
ANR	3921885	MemberAccess	CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] . opcode		3921866	0					
ANR	3921886	ArrayIndexing	CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ]		3921866	0					
ANR	3921887	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3921866	0					
ANR	3921888	CallExpression	CG ( active_op_array )		3921866	0					
ANR	3921889	Callee	CG		3921866	0					
ANR	3921890	Identifier	CG		3921866	0					
ANR	3921891	ArgumentList	active_op_array		3921866	1					
ANR	3921892	Argument	active_op_array		3921866	0					
ANR	3921893	Identifier	active_op_array		3921866	0					
ANR	3921894	Identifier	opcodes		3921866	1					
ANR	3921895	AdditiveExpression	CG ( active_op_array ) -> last - 1		3921866	1		-			
ANR	3921896	PtrMemberAccess	CG ( active_op_array ) -> last		3921866	0					
ANR	3921897	CallExpression	CG ( active_op_array )		3921866	0					
ANR	3921898	Callee	CG		3921866	0					
ANR	3921899	Identifier	CG		3921866	0					
ANR	3921900	ArgumentList	active_op_array		3921866	1					
ANR	3921901	Argument	active_op_array		3921866	0					
ANR	3921902	Identifier	active_op_array		3921866	0					
ANR	3921903	Identifier	last		3921866	1					
ANR	3921904	PrimaryExpression	1		3921866	1					
ANR	3921905	Identifier	opcode		3921866	1					
ANR	3921906	Identifier	ZEND_TICKS		3921866	1					
ANR	3921907	CompoundStatement		5:116:220:220	3921866	1					
ANR	3921908	ReturnStatement	return ;	1906:2:55091:55097	3921866	0	True				
ANR	3921909	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	1909:1:55105:55146	3921866	2	True				
ANR	3921910	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3921866	0		=			
ANR	3921911	Identifier	opline		3921866	0					
ANR	3921912	CallExpression	get_next_op ( CG ( active_op_array ) )		3921866	1					
ANR	3921913	Callee	get_next_op		3921866	0					
ANR	3921914	Identifier	get_next_op		3921866	0					
ANR	3921915	ArgumentList	CG ( active_op_array )		3921866	1					
ANR	3921916	Argument	CG ( active_op_array )		3921866	0					
ANR	3921917	CallExpression	CG ( active_op_array )		3921866	0					
ANR	3921918	Callee	CG		3921866	0					
ANR	3921919	Identifier	CG		3921866	0					
ANR	3921920	ArgumentList	active_op_array		3921866	1					
ANR	3921921	Argument	active_op_array		3921866	0					
ANR	3921922	Identifier	active_op_array		3921866	0					
ANR	3921923	ExpressionStatement	opline -> opcode = ZEND_TICKS	1911:1:55150:55177	3921866	3	True				
ANR	3921924	AssignmentExpression	opline -> opcode = ZEND_TICKS		3921866	0		=			
ANR	3921925	PtrMemberAccess	opline -> opcode		3921866	0					
ANR	3921926	Identifier	opline		3921866	0					
ANR	3921927	Identifier	opcode		3921866	1					
ANR	3921928	Identifier	ZEND_TICKS		3921866	1					
ANR	3921929	ExpressionStatement	SET_UNUSED ( opline -> op1 )	1912:1:55180:55203	3921866	4	True				
ANR	3921930	CallExpression	SET_UNUSED ( opline -> op1 )		3921866	0					
ANR	3921931	Callee	SET_UNUSED		3921866	0					
ANR	3921932	Identifier	SET_UNUSED		3921866	0					
ANR	3921933	ArgumentList	opline -> op1		3921866	1					
ANR	3921934	Argument	opline -> op1		3921866	0					
ANR	3921935	PtrMemberAccess	opline -> op1		3921866	0					
ANR	3921936	Identifier	opline		3921866	0					
ANR	3921937	Identifier	op1		3921866	1					
ANR	3921938	ExpressionStatement	SET_UNUSED ( opline -> op2 )	1913:1:55206:55229	3921866	5	True				
ANR	3921939	CallExpression	SET_UNUSED ( opline -> op2 )		3921866	0					
ANR	3921940	Callee	SET_UNUSED		3921866	0					
ANR	3921941	Identifier	SET_UNUSED		3921866	0					
ANR	3921942	ArgumentList	opline -> op2		3921866	1					
ANR	3921943	Argument	opline -> op2		3921866	0					
ANR	3921944	PtrMemberAccess	opline -> op2		3921866	0					
ANR	3921945	Identifier	opline		3921866	0					
ANR	3921946	Identifier	op2		3921866	1					
ANR	3921947	ExpressionStatement	opline -> extended_value = FC ( declarables ) . ticks	1914:1:55232:55278	3921866	6	True				
ANR	3921948	AssignmentExpression	opline -> extended_value = FC ( declarables ) . ticks		3921866	0		=			
ANR	3921949	PtrMemberAccess	opline -> extended_value		3921866	0					
ANR	3921950	Identifier	opline		3921866	0					
ANR	3921951	Identifier	extended_value		3921866	1					
ANR	3921952	MemberAccess	FC ( declarables ) . ticks		3921866	1					
ANR	3921953	CallExpression	FC ( declarables )		3921866	0					
ANR	3921954	Callee	FC		3921866	0					
ANR	3921955	Identifier	FC		3921866	0					
ANR	3921956	ArgumentList	declarables		3921866	1					
ANR	3921957	Argument	declarables		3921866	0					
ANR	3921958	Identifier	declarables		3921866	0					
ANR	3921959	Identifier	ticks		3921866	1					
ANR	3921960	ReturnType	static void		3921866	1					
ANR	3921961	Identifier	zend_emit_tick		3921866	2					
ANR	3921962	ParameterList			3921866	3					
ANR	3921963	CFGEntryNode	ENTRY		3921866		True				
ANR	3921964	CFGExitNode	EXIT		3921866		True				
ANR	3921965	Symbol	opline -> op1		3921866						
ANR	3921966	Symbol	CG ( active_op_array ) -> opcodes [ CG ( active_op_array ) -> last - 1 ] . opcode		3921866						
ANR	3921967	Symbol	opline -> op2		3921866						
ANR	3921968	Symbol	get_next_op		3921866						
ANR	3921969	Symbol	CG		3921866						
ANR	3921970	Symbol	* CG ( active_op_array ) -> last		3921866						
ANR	3921971	Symbol	active_op_array		3921866						
ANR	3921972	Symbol	* CG		3921866						
ANR	3921973	Symbol	CG ( active_op_array ) -> opcodes		3921866						
ANR	3921974	Symbol	opline -> extended_value		3921866						
ANR	3921975	Symbol	CG ( active_op_array ) -> last		3921866						
ANR	3921976	Symbol	declarables		3921866						
ANR	3921977	Symbol	* * CG		3921866						
ANR	3921978	Symbol	opline		3921866						
ANR	3921979	Symbol	* opline		3921866						
ANR	3921980	Symbol	opline -> opcode		3921866						
ANR	3921981	Symbol	ZEND_TICKS		3921866						
ANR	3921982	Symbol	FC		3921866						
ANR	3921983	Symbol	* CG ( active_op_array ) -> opcodes		3921866						
ANR	3921984	Symbol	FC ( declarables ) . ticks		3921866						
ANR	3921985	Function	zend_emit_op_data	1918:0:55293:55415							
ANR	3921986	FunctionDef	zend_emit_op_data (znode * value)		3921985	0					
ANR	3921987	CompoundStatement		1919:0:55358:55415	3921985	0					
ANR	3921988	ReturnStatement	"return zend_emit_op ( NULL , ZEND_OP_DATA , value , NULL ) ;"	1920:1:55361:55413	3921985	0	True				
ANR	3921989	CallExpression	"zend_emit_op ( NULL , ZEND_OP_DATA , value , NULL )"		3921985	0					
ANR	3921990	Callee	zend_emit_op		3921985	0					
ANR	3921991	Identifier	zend_emit_op		3921985	0					
ANR	3921992	ArgumentList	NULL		3921985	1					
ANR	3921993	Argument	NULL		3921985	0					
ANR	3921994	Identifier	NULL		3921985	0					
ANR	3921995	Argument	ZEND_OP_DATA		3921985	1					
ANR	3921996	Identifier	ZEND_OP_DATA		3921985	0					
ANR	3921997	Argument	value		3921985	2					
ANR	3921998	Identifier	value		3921985	0					
ANR	3921999	Argument	NULL		3921985	3					
ANR	3922000	Identifier	NULL		3921985	0					
ANR	3922001	ReturnType	static inline zend_op *		3921985	1					
ANR	3922002	Identifier	zend_emit_op_data		3921985	2					
ANR	3922003	ParameterList	znode * value		3921985	3					
ANR	3922004	Parameter	znode * value	1918:41:55334:55345	3921985	0	True				
ANR	3922005	ParameterType	znode *		3921985	0					
ANR	3922006	Identifier	value		3921985	1					
ANR	3922007	CFGEntryNode	ENTRY		3921985		True				
ANR	3922008	CFGExitNode	EXIT		3921985		True				
ANR	3922009	Symbol	NULL		3921985						
ANR	3922010	Symbol	ZEND_OP_DATA		3921985						
ANR	3922011	Symbol	value		3921985						
ANR	3922012	Symbol	zend_emit_op		3921985						
ANR	3922013	Function	zend_emit_jump	1924:0:55428:55676							
ANR	3922014	FunctionDef	zend_emit_jump (uint32_t opnum_target)		3922013	0					
ANR	3922015	CompoundStatement		1925:0:55499:55676	3922013	0					
ANR	3922016	IdentifierDeclStatement	uint32_t opnum = get_next_op_number ( CG ( active_op_array ) ) ;	1926:1:55502:55558	3922013	0	True				
ANR	3922017	IdentifierDecl	opnum = get_next_op_number ( CG ( active_op_array ) )		3922013	0					
ANR	3922018	IdentifierDeclType	uint32_t		3922013	0					
ANR	3922019	Identifier	opnum		3922013	1					
ANR	3922020	AssignmentExpression	opnum = get_next_op_number ( CG ( active_op_array ) )		3922013	2		=			
ANR	3922021	Identifier	opnum		3922013	0					
ANR	3922022	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3922013	1					
ANR	3922023	Callee	get_next_op_number		3922013	0					
ANR	3922024	Identifier	get_next_op_number		3922013	0					
ANR	3922025	ArgumentList	CG ( active_op_array )		3922013	1					
ANR	3922026	Argument	CG ( active_op_array )		3922013	0					
ANR	3922027	CallExpression	CG ( active_op_array )		3922013	0					
ANR	3922028	Callee	CG		3922013	0					
ANR	3922029	Identifier	CG		3922013	0					
ANR	3922030	ArgumentList	active_op_array		3922013	1					
ANR	3922031	Argument	active_op_array		3922013	0					
ANR	3922032	Identifier	active_op_array		3922013	0					
ANR	3922033	IdentifierDeclStatement	"zend_op * opline = zend_emit_op ( NULL , ZEND_JMP , NULL , NULL ) ;"	1927:1:55561:55619	3922013	1	True				
ANR	3922034	IdentifierDecl	"* opline = zend_emit_op ( NULL , ZEND_JMP , NULL , NULL )"		3922013	0					
ANR	3922035	IdentifierDeclType	zend_op *		3922013	0					
ANR	3922036	Identifier	opline		3922013	1					
ANR	3922037	AssignmentExpression	"* opline = zend_emit_op ( NULL , ZEND_JMP , NULL , NULL )"		3922013	2		=			
ANR	3922038	Identifier	opline		3922013	0					
ANR	3922039	CallExpression	"zend_emit_op ( NULL , ZEND_JMP , NULL , NULL )"		3922013	1					
ANR	3922040	Callee	zend_emit_op		3922013	0					
ANR	3922041	Identifier	zend_emit_op		3922013	0					
ANR	3922042	ArgumentList	NULL		3922013	1					
ANR	3922043	Argument	NULL		3922013	0					
ANR	3922044	Identifier	NULL		3922013	0					
ANR	3922045	Argument	ZEND_JMP		3922013	1					
ANR	3922046	Identifier	ZEND_JMP		3922013	0					
ANR	3922047	Argument	NULL		3922013	2					
ANR	3922048	Identifier	NULL		3922013	0					
ANR	3922049	Argument	NULL		3922013	3					
ANR	3922050	Identifier	NULL		3922013	0					
ANR	3922051	ExpressionStatement	opline -> op1 . opline_num = opnum_target	1928:1:55622:55659	3922013	2	True				
ANR	3922052	AssignmentExpression	opline -> op1 . opline_num = opnum_target		3922013	0		=			
ANR	3922053	MemberAccess	opline -> op1 . opline_num		3922013	0					
ANR	3922054	PtrMemberAccess	opline -> op1		3922013	0					
ANR	3922055	Identifier	opline		3922013	0					
ANR	3922056	Identifier	op1		3922013	1					
ANR	3922057	Identifier	opline_num		3922013	1					
ANR	3922058	Identifier	opnum_target		3922013	1					
ANR	3922059	ReturnStatement	return opnum ;	1929:1:55662:55674	3922013	3	True				
ANR	3922060	Identifier	opnum		3922013	0					
ANR	3922061	ReturnType	static inline uint32_t		3922013	1					
ANR	3922062	Identifier	zend_emit_jump		3922013	2					
ANR	3922063	ParameterList	uint32_t opnum_target		3922013	3					
ANR	3922064	Parameter	uint32_t opnum_target	1924:38:55466:55486	3922013	0	True				
ANR	3922065	ParameterType	uint32_t		3922013	0					
ANR	3922066	Identifier	opnum_target		3922013	1					
ANR	3922067	CFGEntryNode	ENTRY		3922013		True				
ANR	3922068	CFGExitNode	EXIT		3922013		True				
ANR	3922069	Symbol	opline -> op1		3922013						
ANR	3922070	Symbol	opnum_target		3922013						
ANR	3922071	Symbol	opline		3922013						
ANR	3922072	Symbol	NULL		3922013						
ANR	3922073	Symbol	ZEND_JMP		3922013						
ANR	3922074	Symbol	CG		3922013						
ANR	3922075	Symbol	* opline		3922013						
ANR	3922076	Symbol	opnum		3922013						
ANR	3922077	Symbol	active_op_array		3922013						
ANR	3922078	Symbol	opline -> op1 . opline_num		3922013						
ANR	3922079	Symbol	get_next_op_number		3922013						
ANR	3922080	Symbol	zend_emit_op		3922013						
ANR	3922081	Function	zend_emit_cond_jump	1933:0:55689:55972							
ANR	3922082	FunctionDef	"zend_emit_cond_jump (zend_uchar opcode , znode * cond , uint32_t opnum_target)"		3922081	0					
ANR	3922083	CompoundStatement		1934:0:55797:55972	3922081	0					
ANR	3922084	IdentifierDeclStatement	uint32_t opnum = get_next_op_number ( CG ( active_op_array ) ) ;	1935:1:55800:55856	3922081	0	True				
ANR	3922085	IdentifierDecl	opnum = get_next_op_number ( CG ( active_op_array ) )		3922081	0					
ANR	3922086	IdentifierDeclType	uint32_t		3922081	0					
ANR	3922087	Identifier	opnum		3922081	1					
ANR	3922088	AssignmentExpression	opnum = get_next_op_number ( CG ( active_op_array ) )		3922081	2		=			
ANR	3922089	Identifier	opnum		3922081	0					
ANR	3922090	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3922081	1					
ANR	3922091	Callee	get_next_op_number		3922081	0					
ANR	3922092	Identifier	get_next_op_number		3922081	0					
ANR	3922093	ArgumentList	CG ( active_op_array )		3922081	1					
ANR	3922094	Argument	CG ( active_op_array )		3922081	0					
ANR	3922095	CallExpression	CG ( active_op_array )		3922081	0					
ANR	3922096	Callee	CG		3922081	0					
ANR	3922097	Identifier	CG		3922081	0					
ANR	3922098	ArgumentList	active_op_array		3922081	1					
ANR	3922099	Argument	active_op_array		3922081	0					
ANR	3922100	Identifier	active_op_array		3922081	0					
ANR	3922101	IdentifierDeclStatement	"zend_op * opline = zend_emit_op ( NULL , opcode , cond , NULL ) ;"	1936:1:55859:55915	3922081	1	True				
ANR	3922102	IdentifierDecl	"* opline = zend_emit_op ( NULL , opcode , cond , NULL )"		3922081	0					
ANR	3922103	IdentifierDeclType	zend_op *		3922081	0					
ANR	3922104	Identifier	opline		3922081	1					
ANR	3922105	AssignmentExpression	"* opline = zend_emit_op ( NULL , opcode , cond , NULL )"		3922081	2		=			
ANR	3922106	Identifier	opline		3922081	0					
ANR	3922107	CallExpression	"zend_emit_op ( NULL , opcode , cond , NULL )"		3922081	1					
ANR	3922108	Callee	zend_emit_op		3922081	0					
ANR	3922109	Identifier	zend_emit_op		3922081	0					
ANR	3922110	ArgumentList	NULL		3922081	1					
ANR	3922111	Argument	NULL		3922081	0					
ANR	3922112	Identifier	NULL		3922081	0					
ANR	3922113	Argument	opcode		3922081	1					
ANR	3922114	Identifier	opcode		3922081	0					
ANR	3922115	Argument	cond		3922081	2					
ANR	3922116	Identifier	cond		3922081	0					
ANR	3922117	Argument	NULL		3922081	3					
ANR	3922118	Identifier	NULL		3922081	0					
ANR	3922119	ExpressionStatement	opline -> op2 . opline_num = opnum_target	1937:1:55918:55955	3922081	2	True				
ANR	3922120	AssignmentExpression	opline -> op2 . opline_num = opnum_target		3922081	0		=			
ANR	3922121	MemberAccess	opline -> op2 . opline_num		3922081	0					
ANR	3922122	PtrMemberAccess	opline -> op2		3922081	0					
ANR	3922123	Identifier	opline		3922081	0					
ANR	3922124	Identifier	op2		3922081	1					
ANR	3922125	Identifier	opline_num		3922081	1					
ANR	3922126	Identifier	opnum_target		3922081	1					
ANR	3922127	ReturnStatement	return opnum ;	1938:1:55958:55970	3922081	3	True				
ANR	3922128	Identifier	opnum		3922081	0					
ANR	3922129	ReturnType	static inline uint32_t		3922081	1					
ANR	3922130	Identifier	zend_emit_cond_jump		3922081	2					
ANR	3922131	ParameterList	"zend_uchar opcode , znode * cond , uint32_t opnum_target"		3922081	3					
ANR	3922132	Parameter	zend_uchar opcode	1933:43:55732:55748	3922081	0	True				
ANR	3922133	ParameterType	zend_uchar		3922081	0					
ANR	3922134	Identifier	opcode		3922081	1					
ANR	3922135	Parameter	znode * cond	1933:62:55751:55761	3922081	1	True				
ANR	3922136	ParameterType	znode *		3922081	0					
ANR	3922137	Identifier	cond		3922081	1					
ANR	3922138	Parameter	uint32_t opnum_target	1933:75:55764:55784	3922081	2	True				
ANR	3922139	ParameterType	uint32_t		3922081	0					
ANR	3922140	Identifier	opnum_target		3922081	1					
ANR	3922141	CFGEntryNode	ENTRY		3922081		True				
ANR	3922142	CFGExitNode	EXIT		3922081		True				
ANR	3922143	Symbol	opline -> op2		3922081						
ANR	3922144	Symbol	opline -> op2 . opline_num		3922081						
ANR	3922145	Symbol	NULL		3922081						
ANR	3922146	Symbol	CG		3922081						
ANR	3922147	Symbol	active_op_array		3922081						
ANR	3922148	Symbol	opcode		3922081						
ANR	3922149	Symbol	cond		3922081						
ANR	3922150	Symbol	opnum_target		3922081						
ANR	3922151	Symbol	opline		3922081						
ANR	3922152	Symbol	* opline		3922081						
ANR	3922153	Symbol	opnum		3922081						
ANR	3922154	Symbol	get_next_op_number		3922081						
ANR	3922155	Symbol	zend_emit_op		3922081						
ANR	3922156	Function	zend_update_jump_target	1942:0:55985:56428							
ANR	3922157	FunctionDef	"zend_update_jump_target (uint32_t opnum_jump , uint32_t opnum_target)"		3922156	0					
ANR	3922158	CompoundStatement		1943:0:56082:56428	3922156	0					
ANR	3922159	IdentifierDeclStatement	zend_op * opline = & CG ( active_op_array ) -> opcodes [ opnum_jump ] ;	1944:1:56085:56144	3922156	0	True				
ANR	3922160	IdentifierDecl	* opline = & CG ( active_op_array ) -> opcodes [ opnum_jump ]		3922156	0					
ANR	3922161	IdentifierDeclType	zend_op *		3922156	0					
ANR	3922162	Identifier	opline		3922156	1					
ANR	3922163	AssignmentExpression	* opline = & CG ( active_op_array ) -> opcodes [ opnum_jump ]		3922156	2		=			
ANR	3922164	Identifier	opline		3922156	0					
ANR	3922165	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum_jump ]		3922156	1					
ANR	3922166	UnaryOperator	&		3922156	0					
ANR	3922167	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum_jump ]		3922156	1					
ANR	3922168	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3922156	0					
ANR	3922169	CallExpression	CG ( active_op_array )		3922156	0					
ANR	3922170	Callee	CG		3922156	0					
ANR	3922171	Identifier	CG		3922156	0					
ANR	3922172	ArgumentList	active_op_array		3922156	1					
ANR	3922173	Argument	active_op_array		3922156	0					
ANR	3922174	Identifier	active_op_array		3922156	0					
ANR	3922175	Identifier	opcodes		3922156	1					
ANR	3922176	Identifier	opnum_jump		3922156	1					
ANR	3922177	SwitchStatement	switch ( opline -> opcode )		3922156	1					
ANR	3922178	Condition	opline -> opcode	1945:9:56155:56168	3922156	0	True				
ANR	3922179	PtrMemberAccess	opline -> opcode		3922156	0					
ANR	3922180	Identifier	opline		3922156	0					
ANR	3922181	Identifier	opcode		3922156	1					
ANR	3922182	CompoundStatement		3:25:88:88	3922156	1					
ANR	3922183	Label	case ZEND_JMP :	1946:2:56175:56188	3922156	0	True				
ANR	3922184	Identifier	ZEND_JMP		3922156	0					
ANR	3922185	ExpressionStatement	opline -> op1 . opline_num = opnum_target	1947:3:56193:56230	3922156	1	True				
ANR	3922186	AssignmentExpression	opline -> op1 . opline_num = opnum_target		3922156	0		=			
ANR	3922187	MemberAccess	opline -> op1 . opline_num		3922156	0					
ANR	3922188	PtrMemberAccess	opline -> op1		3922156	0					
ANR	3922189	Identifier	opline		3922156	0					
ANR	3922190	Identifier	op1		3922156	1					
ANR	3922191	Identifier	opline_num		3922156	1					
ANR	3922192	Identifier	opnum_target		3922156	1					
ANR	3922193	BreakStatement	break ;	1948:3:56235:56240	3922156	2	True				
ANR	3922194	Label	case ZEND_JMPZ :	1949:2:56244:56258	3922156	3	True				
ANR	3922195	Identifier	ZEND_JMPZ		3922156	0					
ANR	3922196	Label	case ZEND_JMPNZ :	1950:2:56262:56277	3922156	4	True				
ANR	3922197	Identifier	ZEND_JMPNZ		3922156	0					
ANR	3922198	Label	case ZEND_JMPZ_EX :	1951:2:56281:56298	3922156	5	True				
ANR	3922199	Identifier	ZEND_JMPZ_EX		3922156	0					
ANR	3922200	Label	case ZEND_JMPNZ_EX :	1952:2:56302:56320	3922156	6	True				
ANR	3922201	Identifier	ZEND_JMPNZ_EX		3922156	0					
ANR	3922202	Label	case ZEND_JMP_SET :	1953:2:56324:56341	3922156	7	True				
ANR	3922203	Identifier	ZEND_JMP_SET		3922156	0					
ANR	3922204	ExpressionStatement	opline -> op2 . opline_num = opnum_target	1954:3:56346:56383	3922156	8	True				
ANR	3922205	AssignmentExpression	opline -> op2 . opline_num = opnum_target		3922156	0		=			
ANR	3922206	MemberAccess	opline -> op2 . opline_num		3922156	0					
ANR	3922207	PtrMemberAccess	opline -> op2		3922156	0					
ANR	3922208	Identifier	opline		3922156	0					
ANR	3922209	Identifier	op2		3922156	1					
ANR	3922210	Identifier	opline_num		3922156	1					
ANR	3922211	Identifier	opnum_target		3922156	1					
ANR	3922212	BreakStatement	break ;	1955:3:56388:56393	3922156	9	True				
ANR	3922213	Statement	EMPTY_SWITCH_DEFAULT_CASE	1956:2:56397:56421	3922156	10	True				
ANR	3922214	Statement	(	1956:27:56422:56422	3922156	11	True				
ANR	3922215	Statement	)	1956:28:56423:56423	3922156	12	True				
ANR	3922216	ReturnType	static inline void		3922156	1					
ANR	3922217	Identifier	zend_update_jump_target		3922156	2					
ANR	3922218	ParameterList	"uint32_t opnum_jump , uint32_t opnum_target"		3922156	3					
ANR	3922219	Parameter	uint32_t opnum_jump	1942:43:56028:56046	3922156	0	True				
ANR	3922220	ParameterType	uint32_t		3922156	0					
ANR	3922221	Identifier	opnum_jump		3922156	1					
ANR	3922222	Parameter	uint32_t opnum_target	1942:64:56049:56069	3922156	1	True				
ANR	3922223	ParameterType	uint32_t		3922156	0					
ANR	3922224	Identifier	opnum_target		3922156	1					
ANR	3922225	CFGEntryNode	ENTRY		3922156		True				
ANR	3922226	CFGExitNode	EXIT		3922156		True				
ANR	3922227	Symbol	opline -> op1		3922156						
ANR	3922228	Symbol	opline -> op2		3922156						
ANR	3922229	Symbol	opline -> op2 . opline_num		3922156						
ANR	3922230	Symbol	CG		3922156						
ANR	3922231	Symbol	active_op_array		3922156						
ANR	3922232	Symbol	opnum_jump		3922156						
ANR	3922233	Symbol	opline -> op1 . opline_num		3922156						
ANR	3922234	Symbol	* CG		3922156						
ANR	3922235	Symbol	CG ( active_op_array ) -> opcodes		3922156						
ANR	3922236	Symbol	opnum_target		3922156						
ANR	3922237	Symbol	opline		3922156						
ANR	3922238	Symbol	* opline		3922156						
ANR	3922239	Symbol	opline -> opcode		3922156						
ANR	3922240	Function	zend_update_jump_target_to_next	1961:0:56441:56604							
ANR	3922241	FunctionDef	zend_update_jump_target_to_next (uint32_t opnum_jump)		3922240	0					
ANR	3922242	CompoundStatement		1962:0:56523:56604	3922240	0					
ANR	3922243	ExpressionStatement	"zend_update_jump_target ( opnum_jump , get_next_op_number ( CG ( active_op_array ) ) )"	1963:1:56526:56602	3922240	0	True				
ANR	3922244	CallExpression	"zend_update_jump_target ( opnum_jump , get_next_op_number ( CG ( active_op_array ) ) )"		3922240	0					
ANR	3922245	Callee	zend_update_jump_target		3922240	0					
ANR	3922246	Identifier	zend_update_jump_target		3922240	0					
ANR	3922247	ArgumentList	opnum_jump		3922240	1					
ANR	3922248	Argument	opnum_jump		3922240	0					
ANR	3922249	Identifier	opnum_jump		3922240	0					
ANR	3922250	Argument	get_next_op_number ( CG ( active_op_array ) )		3922240	1					
ANR	3922251	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3922240	0					
ANR	3922252	Callee	get_next_op_number		3922240	0					
ANR	3922253	Identifier	get_next_op_number		3922240	0					
ANR	3922254	ArgumentList	CG ( active_op_array )		3922240	1					
ANR	3922255	Argument	CG ( active_op_array )		3922240	0					
ANR	3922256	CallExpression	CG ( active_op_array )		3922240	0					
ANR	3922257	Callee	CG		3922240	0					
ANR	3922258	Identifier	CG		3922240	0					
ANR	3922259	ArgumentList	active_op_array		3922240	1					
ANR	3922260	Argument	active_op_array		3922240	0					
ANR	3922261	Identifier	active_op_array		3922240	0					
ANR	3922262	ReturnType	static inline void		3922240	1					
ANR	3922263	Identifier	zend_update_jump_target_to_next		3922240	2					
ANR	3922264	ParameterList	uint32_t opnum_jump		3922240	3					
ANR	3922265	Parameter	uint32_t opnum_jump	1961:51:56492:56510	3922240	0	True				
ANR	3922266	ParameterType	uint32_t		3922240	0					
ANR	3922267	Identifier	opnum_jump		3922240	1					
ANR	3922268	CFGEntryNode	ENTRY		3922240		True				
ANR	3922269	CFGExitNode	EXIT		3922240		True				
ANR	3922270	Symbol	CG		3922240						
ANR	3922271	Symbol	active_op_array		3922240						
ANR	3922272	Symbol	opnum_jump		3922240						
ANR	3922273	Symbol	get_next_op_number		3922240						
ANR	3922274	Function	zend_delayed_emit_op	1967:0:56617:57171							
ANR	3922275	FunctionDef	"zend_delayed_emit_op (znode * result , zend_uchar opcode , znode * op1 , znode * op2)"		3922274	0					
ANR	3922276	CompoundStatement		1968:0:56729:57171	3922274	0					
ANR	3922277	IdentifierDeclStatement	zend_op tmp_opline ;	1969:1:56732:56750	3922274	0	True				
ANR	3922278	IdentifierDecl	tmp_opline		3922274	0					
ANR	3922279	IdentifierDeclType	zend_op		3922274	0					
ANR	3922280	Identifier	tmp_opline		3922274	1					
ANR	3922281	ExpressionStatement	init_op ( & tmp_opline )	1970:1:56753:56773	3922274	1	True				
ANR	3922282	CallExpression	init_op ( & tmp_opline )		3922274	0					
ANR	3922283	Callee	init_op		3922274	0					
ANR	3922284	Identifier	init_op		3922274	0					
ANR	3922285	ArgumentList	& tmp_opline		3922274	1					
ANR	3922286	Argument	& tmp_opline		3922274	0					
ANR	3922287	UnaryOperationExpression	& tmp_opline		3922274	0					
ANR	3922288	UnaryOperator	&		3922274	0					
ANR	3922289	Identifier	tmp_opline		3922274	1					
ANR	3922290	ExpressionStatement	tmp_opline . opcode = opcode	1971:1:56776:56802	3922274	2	True				
ANR	3922291	AssignmentExpression	tmp_opline . opcode = opcode		3922274	0		=			
ANR	3922292	MemberAccess	tmp_opline . opcode		3922274	0					
ANR	3922293	Identifier	tmp_opline		3922274	0					
ANR	3922294	Identifier	opcode		3922274	1					
ANR	3922295	Identifier	opcode		3922274	1					
ANR	3922296	IfStatement	if ( op1 == NULL )		3922274	3					
ANR	3922297	Condition	op1 == NULL	1972:5:56809:56819	3922274	0	True				
ANR	3922298	EqualityExpression	op1 == NULL		3922274	0		==			
ANR	3922299	Identifier	op1		3922274	0					
ANR	3922300	Identifier	NULL		3922274	1					
ANR	3922301	CompoundStatement		5:18:92:92	3922274	1					
ANR	3922302	ExpressionStatement	SET_UNUSED ( tmp_opline . op1 )	1973:2:56826:56852	3922274	0	True				
ANR	3922303	CallExpression	SET_UNUSED ( tmp_opline . op1 )		3922274	0					
ANR	3922304	Callee	SET_UNUSED		3922274	0					
ANR	3922305	Identifier	SET_UNUSED		3922274	0					
ANR	3922306	ArgumentList	tmp_opline . op1		3922274	1					
ANR	3922307	Argument	tmp_opline . op1		3922274	0					
ANR	3922308	MemberAccess	tmp_opline . op1		3922274	0					
ANR	3922309	Identifier	tmp_opline		3922274	0					
ANR	3922310	Identifier	op1		3922274	1					
ANR	3922311	ElseStatement	else		3922274	0					
ANR	3922312	CompoundStatement		7:8:132:132	3922274	0					
ANR	3922313	ExpressionStatement	"SET_NODE ( tmp_opline . op1 , op1 )"	1975:2:56866:56895	3922274	0	True				
ANR	3922314	CallExpression	"SET_NODE ( tmp_opline . op1 , op1 )"		3922274	0					
ANR	3922315	Callee	SET_NODE		3922274	0					
ANR	3922316	Identifier	SET_NODE		3922274	0					
ANR	3922317	ArgumentList	tmp_opline . op1		3922274	1					
ANR	3922318	Argument	tmp_opline . op1		3922274	0					
ANR	3922319	MemberAccess	tmp_opline . op1		3922274	0					
ANR	3922320	Identifier	tmp_opline		3922274	0					
ANR	3922321	Identifier	op1		3922274	1					
ANR	3922322	Argument	op1		3922274	1					
ANR	3922323	Identifier	op1		3922274	0					
ANR	3922324	IfStatement	if ( op2 == NULL )		3922274	4					
ANR	3922325	Condition	op2 == NULL	1977:5:56905:56915	3922274	0	True				
ANR	3922326	EqualityExpression	op2 == NULL		3922274	0		==			
ANR	3922327	Identifier	op2		3922274	0					
ANR	3922328	Identifier	NULL		3922274	1					
ANR	3922329	CompoundStatement		10:18:188:188	3922274	1					
ANR	3922330	ExpressionStatement	SET_UNUSED ( tmp_opline . op2 )	1978:2:56922:56948	3922274	0	True				
ANR	3922331	CallExpression	SET_UNUSED ( tmp_opline . op2 )		3922274	0					
ANR	3922332	Callee	SET_UNUSED		3922274	0					
ANR	3922333	Identifier	SET_UNUSED		3922274	0					
ANR	3922334	ArgumentList	tmp_opline . op2		3922274	1					
ANR	3922335	Argument	tmp_opline . op2		3922274	0					
ANR	3922336	MemberAccess	tmp_opline . op2		3922274	0					
ANR	3922337	Identifier	tmp_opline		3922274	0					
ANR	3922338	Identifier	op2		3922274	1					
ANR	3922339	ElseStatement	else		3922274	0					
ANR	3922340	CompoundStatement		12:8:228:228	3922274	0					
ANR	3922341	ExpressionStatement	"SET_NODE ( tmp_opline . op2 , op2 )"	1980:2:56962:56991	3922274	0	True				
ANR	3922342	CallExpression	"SET_NODE ( tmp_opline . op2 , op2 )"		3922274	0					
ANR	3922343	Callee	SET_NODE		3922274	0					
ANR	3922344	Identifier	SET_NODE		3922274	0					
ANR	3922345	ArgumentList	tmp_opline . op2		3922274	1					
ANR	3922346	Argument	tmp_opline . op2		3922274	0					
ANR	3922347	MemberAccess	tmp_opline . op2		3922274	0					
ANR	3922348	Identifier	tmp_opline		3922274	0					
ANR	3922349	Identifier	op2		3922274	1					
ANR	3922350	Argument	op2		3922274	1					
ANR	3922351	Identifier	op2		3922274	0					
ANR	3922352	IfStatement	if ( result )		3922274	5					
ANR	3922353	Condition	result	1982:5:57001:57006	3922274	0	True				
ANR	3922354	Identifier	result		3922274	0					
ANR	3922355	CompoundStatement		15:13:279:279	3922274	1					
ANR	3922356	ExpressionStatement	"zend_make_var_result ( result , & tmp_opline )"	1983:2:57013:57054	3922274	0	True				
ANR	3922357	CallExpression	"zend_make_var_result ( result , & tmp_opline )"		3922274	0					
ANR	3922358	Callee	zend_make_var_result		3922274	0					
ANR	3922359	Identifier	zend_make_var_result		3922274	0					
ANR	3922360	ArgumentList	result		3922274	1					
ANR	3922361	Argument	result		3922274	0					
ANR	3922362	Identifier	result		3922274	0					
ANR	3922363	Argument	& tmp_opline		3922274	1					
ANR	3922364	UnaryOperationExpression	& tmp_opline		3922274	0					
ANR	3922365	UnaryOperator	&		3922274	0					
ANR	3922366	Identifier	tmp_opline		3922274	1					
ANR	3922367	ExpressionStatement	"zend_stack_push ( & CG ( delayed_oplines_stack ) , & tmp_opline )"	1986:1:57061:57117	3922274	6	True				
ANR	3922368	CallExpression	"zend_stack_push ( & CG ( delayed_oplines_stack ) , & tmp_opline )"		3922274	0					
ANR	3922369	Callee	zend_stack_push		3922274	0					
ANR	3922370	Identifier	zend_stack_push		3922274	0					
ANR	3922371	ArgumentList	& CG ( delayed_oplines_stack )		3922274	1					
ANR	3922372	Argument	& CG ( delayed_oplines_stack )		3922274	0					
ANR	3922373	UnaryOperationExpression	& CG ( delayed_oplines_stack )		3922274	0					
ANR	3922374	UnaryOperator	&		3922274	0					
ANR	3922375	CallExpression	CG ( delayed_oplines_stack )		3922274	1					
ANR	3922376	Callee	CG		3922274	0					
ANR	3922377	Identifier	CG		3922274	0					
ANR	3922378	ArgumentList	delayed_oplines_stack		3922274	1					
ANR	3922379	Argument	delayed_oplines_stack		3922274	0					
ANR	3922380	Identifier	delayed_oplines_stack		3922274	0					
ANR	3922381	Argument	& tmp_opline		3922274	1					
ANR	3922382	UnaryOperationExpression	& tmp_opline		3922274	0					
ANR	3922383	UnaryOperator	&		3922274	0					
ANR	3922384	Identifier	tmp_opline		3922274	1					
ANR	3922385	ReturnStatement	return zend_stack_top ( & CG ( delayed_oplines_stack ) ) ;	1987:1:57120:57169	3922274	7	True				
ANR	3922386	CallExpression	zend_stack_top ( & CG ( delayed_oplines_stack ) )		3922274	0					
ANR	3922387	Callee	zend_stack_top		3922274	0					
ANR	3922388	Identifier	zend_stack_top		3922274	0					
ANR	3922389	ArgumentList	& CG ( delayed_oplines_stack )		3922274	1					
ANR	3922390	Argument	& CG ( delayed_oplines_stack )		3922274	0					
ANR	3922391	UnaryOperationExpression	& CG ( delayed_oplines_stack )		3922274	0					
ANR	3922392	UnaryOperator	&		3922274	0					
ANR	3922393	CallExpression	CG ( delayed_oplines_stack )		3922274	1					
ANR	3922394	Callee	CG		3922274	0					
ANR	3922395	Identifier	CG		3922274	0					
ANR	3922396	ArgumentList	delayed_oplines_stack		3922274	1					
ANR	3922397	Argument	delayed_oplines_stack		3922274	0					
ANR	3922398	Identifier	delayed_oplines_stack		3922274	0					
ANR	3922399	ReturnType	static inline zend_op *		3922274	1					
ANR	3922400	Identifier	zend_delayed_emit_op		3922274	2					
ANR	3922401	ParameterList	"znode * result , zend_uchar opcode , znode * op1 , znode * op2"		3922274	3					
ANR	3922402	Parameter	znode * result	1967:44:56661:56673	3922274	0	True				
ANR	3922403	ParameterType	znode *		3922274	0					
ANR	3922404	Identifier	result		3922274	1					
ANR	3922405	Parameter	zend_uchar opcode	1967:59:56676:56692	3922274	1	True				
ANR	3922406	ParameterType	zend_uchar		3922274	0					
ANR	3922407	Identifier	opcode		3922274	1					
ANR	3922408	Parameter	znode * op1	1967:78:56695:56704	3922274	2	True				
ANR	3922409	ParameterType	znode *		3922274	0					
ANR	3922410	Identifier	op1		3922274	1					
ANR	3922411	Parameter	znode * op2	1967:90:56707:56716	3922274	3	True				
ANR	3922412	ParameterType	znode *		3922274	0					
ANR	3922413	Identifier	op2		3922274	1					
ANR	3922414	CFGEntryNode	ENTRY		3922274		True				
ANR	3922415	CFGExitNode	EXIT		3922274		True				
ANR	3922416	Symbol	NULL		3922274						
ANR	3922417	Symbol	tmp_opline . op1		3922274						
ANR	3922418	Symbol	tmp_opline . op2		3922274						
ANR	3922419	Symbol	opcode		3922274						
ANR	3922420	Symbol	& tmp_opline		3922274						
ANR	3922421	Symbol	& CG		3922274						
ANR	3922422	Symbol	result		3922274						
ANR	3922423	Symbol	op2		3922274						
ANR	3922424	Symbol	op1		3922274						
ANR	3922425	Symbol	zend_stack_top		3922274						
ANR	3922426	Symbol	tmp_opline		3922274						
ANR	3922427	Symbol	delayed_oplines_stack		3922274						
ANR	3922428	Symbol	tmp_opline . opcode		3922274						
ANR	3922429	Function	zend_delayed_compile_begin	1991:0:57184:57306							
ANR	3922430	FunctionDef	zend_delayed_compile_begin ()		3922429	0					
ANR	3922431	CompoundStatement		1992:0:57250:57306	3922429	0					
ANR	3922432	ReturnStatement	return zend_stack_count ( & CG ( delayed_oplines_stack ) ) ;	1993:1:57253:57304	3922429	0	True				
ANR	3922433	CallExpression	zend_stack_count ( & CG ( delayed_oplines_stack ) )		3922429	0					
ANR	3922434	Callee	zend_stack_count		3922429	0					
ANR	3922435	Identifier	zend_stack_count		3922429	0					
ANR	3922436	ArgumentList	& CG ( delayed_oplines_stack )		3922429	1					
ANR	3922437	Argument	& CG ( delayed_oplines_stack )		3922429	0					
ANR	3922438	UnaryOperationExpression	& CG ( delayed_oplines_stack )		3922429	0					
ANR	3922439	UnaryOperator	&		3922429	0					
ANR	3922440	CallExpression	CG ( delayed_oplines_stack )		3922429	1					
ANR	3922441	Callee	CG		3922429	0					
ANR	3922442	Identifier	CG		3922429	0					
ANR	3922443	ArgumentList	delayed_oplines_stack		3922429	1					
ANR	3922444	Argument	delayed_oplines_stack		3922429	0					
ANR	3922445	Identifier	delayed_oplines_stack		3922429	0					
ANR	3922446	ReturnType	static inline uint32_t		3922429	1					
ANR	3922447	Identifier	zend_delayed_compile_begin		3922429	2					
ANR	3922448	ParameterList			3922429	3					
ANR	3922449	CFGEntryNode	ENTRY		3922429		True				
ANR	3922450	CFGExitNode	EXIT		3922429		True				
ANR	3922451	Symbol	zend_stack_count		3922429						
ANR	3922452	Symbol	delayed_oplines_stack		3922429						
ANR	3922453	Symbol	& CG		3922429						
ANR	3922454	Function	zend_delayed_compile_end	1997:0:57319:57757							
ANR	3922455	FunctionDef	zend_delayed_compile_end (uint32_t offset)		3922454	0					
ANR	3922456	CompoundStatement		1998:0:57387:57757	3922454	0					
ANR	3922457	IdentifierDeclStatement	"zend_op * opline = NULL , * oplines = zend_stack_base ( & CG ( delayed_oplines_stack ) ) ;"	1999:1:57390:57468	3922454	0	True				
ANR	3922458	IdentifierDecl	* opline = NULL		3922454	0					
ANR	3922459	IdentifierDeclType	zend_op *		3922454	0					
ANR	3922460	Identifier	opline		3922454	1					
ANR	3922461	AssignmentExpression	* opline = NULL		3922454	2		=			
ANR	3922462	Identifier	NULL		3922454	0					
ANR	3922463	Identifier	NULL		3922454	1					
ANR	3922464	IdentifierDecl	* oplines = zend_stack_base ( & CG ( delayed_oplines_stack ) )		3922454	1					
ANR	3922465	IdentifierDeclType	zend_op *		3922454	0					
ANR	3922466	Identifier	oplines		3922454	1					
ANR	3922467	AssignmentExpression	* oplines = zend_stack_base ( & CG ( delayed_oplines_stack ) )		3922454	2		=			
ANR	3922468	Identifier	oplines		3922454	0					
ANR	3922469	CallExpression	zend_stack_base ( & CG ( delayed_oplines_stack ) )		3922454	1					
ANR	3922470	Callee	zend_stack_base		3922454	0					
ANR	3922471	Identifier	zend_stack_base		3922454	0					
ANR	3922472	ArgumentList	& CG ( delayed_oplines_stack )		3922454	1					
ANR	3922473	Argument	& CG ( delayed_oplines_stack )		3922454	0					
ANR	3922474	UnaryOperationExpression	& CG ( delayed_oplines_stack )		3922454	0					
ANR	3922475	UnaryOperator	&		3922454	0					
ANR	3922476	CallExpression	CG ( delayed_oplines_stack )		3922454	1					
ANR	3922477	Callee	CG		3922454	0					
ANR	3922478	Identifier	CG		3922454	0					
ANR	3922479	ArgumentList	delayed_oplines_stack		3922454	1					
ANR	3922480	Argument	delayed_oplines_stack		3922454	0					
ANR	3922481	Identifier	delayed_oplines_stack		3922454	0					
ANR	3922482	IdentifierDeclStatement	"uint32_t i , count = zend_stack_count ( & CG ( delayed_oplines_stack ) ) ;"	2000:1:57471:57535	3922454	1	True				
ANR	3922483	IdentifierDecl	i		3922454	0					
ANR	3922484	IdentifierDeclType	uint32_t		3922454	0					
ANR	3922485	Identifier	i		3922454	1					
ANR	3922486	IdentifierDecl	count = zend_stack_count ( & CG ( delayed_oplines_stack ) )		3922454	1					
ANR	3922487	IdentifierDeclType	uint32_t		3922454	0					
ANR	3922488	Identifier	count		3922454	1					
ANR	3922489	AssignmentExpression	count = zend_stack_count ( & CG ( delayed_oplines_stack ) )		3922454	2		=			
ANR	3922490	Identifier	count		3922454	0					
ANR	3922491	CallExpression	zend_stack_count ( & CG ( delayed_oplines_stack ) )		3922454	1					
ANR	3922492	Callee	zend_stack_count		3922454	0					
ANR	3922493	Identifier	zend_stack_count		3922454	0					
ANR	3922494	ArgumentList	& CG ( delayed_oplines_stack )		3922454	1					
ANR	3922495	Argument	& CG ( delayed_oplines_stack )		3922454	0					
ANR	3922496	UnaryOperationExpression	& CG ( delayed_oplines_stack )		3922454	0					
ANR	3922497	UnaryOperator	&		3922454	0					
ANR	3922498	CallExpression	CG ( delayed_oplines_stack )		3922454	1					
ANR	3922499	Callee	CG		3922454	0					
ANR	3922500	Identifier	CG		3922454	0					
ANR	3922501	ArgumentList	delayed_oplines_stack		3922454	1					
ANR	3922502	Argument	delayed_oplines_stack		3922454	0					
ANR	3922503	Identifier	delayed_oplines_stack		3922454	0					
ANR	3922504	ExpressionStatement	ZEND_ASSERT ( count > offset )	2002:1:57539:57566	3922454	2	True				
ANR	3922505	CallExpression	ZEND_ASSERT ( count > offset )		3922454	0					
ANR	3922506	Callee	ZEND_ASSERT		3922454	0					
ANR	3922507	Identifier	ZEND_ASSERT		3922454	0					
ANR	3922508	ArgumentList	count > offset		3922454	1					
ANR	3922509	Argument	count > offset		3922454	0					
ANR	3922510	RelationalExpression	count > offset		3922454	0		>			
ANR	3922511	Identifier	count		3922454	0					
ANR	3922512	Identifier	offset		3922454	1					
ANR	3922513	ForStatement	for ( i = offset ; i < count ; ++ i )		3922454	3					
ANR	3922514	ForInit	i = offset ;	2003:6:57574:57584	3922454	0	True				
ANR	3922515	AssignmentExpression	i = offset		3922454	0		=			
ANR	3922516	Identifier	i		3922454	0					
ANR	3922517	Identifier	offset		3922454	1					
ANR	3922518	Condition	i < count	2003:18:57586:57594	3922454	1	True				
ANR	3922519	RelationalExpression	i < count		3922454	0		<			
ANR	3922520	Identifier	i		3922454	0					
ANR	3922521	Identifier	count		3922454	1					
ANR	3922522	UnaryExpression	++ i	2003:29:57597:57599	3922454	2	True				
ANR	3922523	IncDec	++		3922454	0					
ANR	3922524	Identifier	i		3922454	1					
ANR	3922525	CompoundStatement		6:34:214:214	3922454	3					
ANR	3922526	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	2004:2:57606:57647	3922454	0	True				
ANR	3922527	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3922454	0		=			
ANR	3922528	Identifier	opline		3922454	0					
ANR	3922529	CallExpression	get_next_op ( CG ( active_op_array ) )		3922454	1					
ANR	3922530	Callee	get_next_op		3922454	0					
ANR	3922531	Identifier	get_next_op		3922454	0					
ANR	3922532	ArgumentList	CG ( active_op_array )		3922454	1					
ANR	3922533	Argument	CG ( active_op_array )		3922454	0					
ANR	3922534	CallExpression	CG ( active_op_array )		3922454	0					
ANR	3922535	Callee	CG		3922454	0					
ANR	3922536	Identifier	CG		3922454	0					
ANR	3922537	ArgumentList	active_op_array		3922454	1					
ANR	3922538	Argument	active_op_array		3922454	0					
ANR	3922539	Identifier	active_op_array		3922454	0					
ANR	3922540	ExpressionStatement	"memcpy ( opline , & oplines [ i ] , sizeof ( zend_op ) )"	2005:2:57651:57695	3922454	1	True				
ANR	3922541	CallExpression	"memcpy ( opline , & oplines [ i ] , sizeof ( zend_op ) )"		3922454	0					
ANR	3922542	Callee	memcpy		3922454	0					
ANR	3922543	Identifier	memcpy		3922454	0					
ANR	3922544	ArgumentList	opline		3922454	1					
ANR	3922545	Argument	opline		3922454	0					
ANR	3922546	Identifier	opline		3922454	0					
ANR	3922547	Argument	& oplines [ i ]		3922454	1					
ANR	3922548	UnaryOperationExpression	& oplines [ i ]		3922454	0					
ANR	3922549	UnaryOperator	&		3922454	0					
ANR	3922550	ArrayIndexing	oplines [ i ]		3922454	1					
ANR	3922551	Identifier	oplines		3922454	0					
ANR	3922552	Identifier	i		3922454	1					
ANR	3922553	Argument	sizeof ( zend_op )		3922454	2					
ANR	3922554	SizeofExpression	sizeof ( zend_op )		3922454	0					
ANR	3922555	Sizeof	sizeof		3922454	0					
ANR	3922556	SizeofOperand	zend_op		3922454	1					
ANR	3922557	ExpressionStatement	CG ( delayed_oplines_stack ) . top = offset	2007:1:57701:57739	3922454	4	True				
ANR	3922558	AssignmentExpression	CG ( delayed_oplines_stack ) . top = offset		3922454	0		=			
ANR	3922559	MemberAccess	CG ( delayed_oplines_stack ) . top		3922454	0					
ANR	3922560	CallExpression	CG ( delayed_oplines_stack )		3922454	0					
ANR	3922561	Callee	CG		3922454	0					
ANR	3922562	Identifier	CG		3922454	0					
ANR	3922563	ArgumentList	delayed_oplines_stack		3922454	1					
ANR	3922564	Argument	delayed_oplines_stack		3922454	0					
ANR	3922565	Identifier	delayed_oplines_stack		3922454	0					
ANR	3922566	Identifier	top		3922454	1					
ANR	3922567	Identifier	offset		3922454	1					
ANR	3922568	ReturnStatement	return opline ;	2008:1:57742:57755	3922454	5	True				
ANR	3922569	Identifier	opline		3922454	0					
ANR	3922570	ReturnType	static zend_op *		3922454	1					
ANR	3922571	Identifier	zend_delayed_compile_end		3922454	2					
ANR	3922572	ParameterList	uint32_t offset		3922454	3					
ANR	3922573	Parameter	uint32_t offset	1997:41:57360:57374	3922454	0	True				
ANR	3922574	ParameterType	uint32_t		3922454	0					
ANR	3922575	Identifier	offset		3922454	1					
ANR	3922576	CFGEntryNode	ENTRY		3922454		True				
ANR	3922577	CFGExitNode	EXIT		3922454		True				
ANR	3922578	Symbol	NULL		3922454						
ANR	3922579	Symbol	get_next_op		3922454						
ANR	3922580	Symbol	offset		3922454						
ANR	3922581	Symbol	CG		3922454						
ANR	3922582	Symbol	active_op_array		3922454						
ANR	3922583	Symbol	count		3922454						
ANR	3922584	Symbol	i		3922454						
ANR	3922585	Symbol	CG ( delayed_oplines_stack ) . top		3922454						
ANR	3922586	Symbol	oplines		3922454						
ANR	3922587	Symbol	& CG		3922454						
ANR	3922588	Symbol	opline		3922454						
ANR	3922589	Symbol	delayed_oplines_stack		3922454						
ANR	3922590	Symbol	zend_stack_count		3922454						
ANR	3922591	Symbol	zend_stack_base		3922454						
ANR	3922592	Function	zend_emit_return_type_check	2012:0:57770:58352							
ANR	3922593	FunctionDef	"zend_emit_return_type_check (znode * expr , zend_arg_info * return_info)"		3922592	0					
ANR	3922594	CompoundStatement		2013:0:57861:58352	3922592	0					
ANR	3922595	IfStatement	if ( return_info -> type_hint != IS_UNDEF )		3922592	0					
ANR	3922596	Condition	return_info -> type_hint != IS_UNDEF	2014:5:57868:57901	3922592	0	True				
ANR	3922597	EqualityExpression	return_info -> type_hint != IS_UNDEF		3922592	0		!=			
ANR	3922598	PtrMemberAccess	return_info -> type_hint		3922592	0					
ANR	3922599	Identifier	return_info		3922592	0					
ANR	3922600	Identifier	type_hint		3922592	1					
ANR	3922601	Identifier	IS_UNDEF		3922592	1					
ANR	3922602	CompoundStatement		3:2:46:119	3922592	1					
ANR	3922603	IdentifierDeclStatement	"zend_op * opline = zend_emit_op ( NULL , ZEND_VERIFY_RETURN_TYPE , expr , NULL ) ;"	2015:2:57908:57981	3922592	0	True				
ANR	3922604	IdentifierDecl	"* opline = zend_emit_op ( NULL , ZEND_VERIFY_RETURN_TYPE , expr , NULL )"		3922592	0					
ANR	3922605	IdentifierDeclType	zend_op *		3922592	0					
ANR	3922606	Identifier	opline		3922592	1					
ANR	3922607	AssignmentExpression	"* opline = zend_emit_op ( NULL , ZEND_VERIFY_RETURN_TYPE , expr , NULL )"		3922592	2		=			
ANR	3922608	Identifier	opline		3922592	0					
ANR	3922609	CallExpression	"zend_emit_op ( NULL , ZEND_VERIFY_RETURN_TYPE , expr , NULL )"		3922592	1					
ANR	3922610	Callee	zend_emit_op		3922592	0					
ANR	3922611	Identifier	zend_emit_op		3922592	0					
ANR	3922612	ArgumentList	NULL		3922592	1					
ANR	3922613	Argument	NULL		3922592	0					
ANR	3922614	Identifier	NULL		3922592	0					
ANR	3922615	Argument	ZEND_VERIFY_RETURN_TYPE		3922592	1					
ANR	3922616	Identifier	ZEND_VERIFY_RETURN_TYPE		3922592	0					
ANR	3922617	Argument	expr		3922592	2					
ANR	3922618	Identifier	expr		3922592	0					
ANR	3922619	Argument	NULL		3922592	3					
ANR	3922620	Identifier	NULL		3922592	0					
ANR	3922621	IfStatement	if ( expr && expr -> op_type == IS_CONST )		3922592	1					
ANR	3922622	Condition	expr && expr -> op_type == IS_CONST	2016:6:57989:58021	3922592	0	True				
ANR	3922623	AndExpression	expr && expr -> op_type == IS_CONST		3922592	0		&&			
ANR	3922624	Identifier	expr		3922592	0					
ANR	3922625	EqualityExpression	expr -> op_type == IS_CONST		3922592	1		==			
ANR	3922626	PtrMemberAccess	expr -> op_type		3922592	0					
ANR	3922627	Identifier	expr		3922592	0					
ANR	3922628	Identifier	op_type		3922592	1					
ANR	3922629	Identifier	IS_CONST		3922592	1					
ANR	3922630	CompoundStatement		4:41:162:162	3922592	1					
ANR	3922631	ExpressionStatement	opline -> result_type = expr -> op_type = IS_TMP_VAR	2017:3:58029:58077	3922592	0	True				
ANR	3922632	AssignmentExpression	opline -> result_type = expr -> op_type = IS_TMP_VAR		3922592	0		=			
ANR	3922633	PtrMemberAccess	opline -> result_type		3922592	0					
ANR	3922634	Identifier	opline		3922592	0					
ANR	3922635	Identifier	result_type		3922592	1					
ANR	3922636	AssignmentExpression	expr -> op_type = IS_TMP_VAR		3922592	1		=			
ANR	3922637	PtrMemberAccess	expr -> op_type		3922592	0					
ANR	3922638	Identifier	expr		3922592	0					
ANR	3922639	Identifier	op_type		3922592	1					
ANR	3922640	Identifier	IS_TMP_VAR		3922592	1					
ANR	3922641	ExpressionStatement	opline -> result . var = expr -> u . op . var = get_temporary_variable ( CG ( active_op_array ) )	2018:3:58082:58163	3922592	1	True				
ANR	3922642	AssignmentExpression	opline -> result . var = expr -> u . op . var = get_temporary_variable ( CG ( active_op_array ) )		3922592	0		=			
ANR	3922643	MemberAccess	opline -> result . var		3922592	0					
ANR	3922644	PtrMemberAccess	opline -> result		3922592	0					
ANR	3922645	Identifier	opline		3922592	0					
ANR	3922646	Identifier	result		3922592	1					
ANR	3922647	Identifier	var		3922592	1					
ANR	3922648	AssignmentExpression	expr -> u . op . var = get_temporary_variable ( CG ( active_op_array ) )		3922592	1		=			
ANR	3922649	MemberAccess	expr -> u . op . var		3922592	0					
ANR	3922650	MemberAccess	expr -> u . op		3922592	0					
ANR	3922651	PtrMemberAccess	expr -> u		3922592	0					
ANR	3922652	Identifier	expr		3922592	0					
ANR	3922653	Identifier	u		3922592	1					
ANR	3922654	Identifier	op		3922592	1					
ANR	3922655	Identifier	var		3922592	1					
ANR	3922656	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3922592	1					
ANR	3922657	Callee	get_temporary_variable		3922592	0					
ANR	3922658	Identifier	get_temporary_variable		3922592	0					
ANR	3922659	ArgumentList	CG ( active_op_array )		3922592	1					
ANR	3922660	Argument	CG ( active_op_array )		3922592	0					
ANR	3922661	CallExpression	CG ( active_op_array )		3922592	0					
ANR	3922662	Callee	CG		3922592	0					
ANR	3922663	Identifier	CG		3922592	0					
ANR	3922664	ArgumentList	active_op_array		3922592	1					
ANR	3922665	Argument	active_op_array		3922592	0					
ANR	3922666	Identifier	active_op_array		3922592	0					
ANR	3922667	IfStatement	if ( return_info -> class_name )		3922592	2					
ANR	3922668	Condition	return_info -> class_name	2020:6:58175:58197	3922592	0	True				
ANR	3922669	PtrMemberAccess	return_info -> class_name		3922592	0					
ANR	3922670	Identifier	return_info		3922592	0					
ANR	3922671	Identifier	class_name		3922592	1					
ANR	3922672	CompoundStatement		8:31:338:338	3922592	1					
ANR	3922673	ExpressionStatement	opline -> op2 . num = CG ( active_op_array ) -> cache_size	2021:3:58205:58254	3922592	0	True				
ANR	3922674	AssignmentExpression	opline -> op2 . num = CG ( active_op_array ) -> cache_size		3922592	0		=			
ANR	3922675	MemberAccess	opline -> op2 . num		3922592	0					
ANR	3922676	PtrMemberAccess	opline -> op2		3922592	0					
ANR	3922677	Identifier	opline		3922592	0					
ANR	3922678	Identifier	op2		3922592	1					
ANR	3922679	Identifier	num		3922592	1					
ANR	3922680	PtrMemberAccess	CG ( active_op_array ) -> cache_size		3922592	1					
ANR	3922681	CallExpression	CG ( active_op_array )		3922592	0					
ANR	3922682	Callee	CG		3922592	0					
ANR	3922683	Identifier	CG		3922592	0					
ANR	3922684	ArgumentList	active_op_array		3922592	1					
ANR	3922685	Argument	active_op_array		3922592	0					
ANR	3922686	Identifier	active_op_array		3922592	0					
ANR	3922687	Identifier	cache_size		3922592	1					
ANR	3922688	ExpressionStatement	CG ( active_op_array ) -> cache_size += sizeof ( void * )	2022:3:58259:58307	3922592	1	True				
ANR	3922689	AssignmentExpression	CG ( active_op_array ) -> cache_size += sizeof ( void * )		3922592	0		+=			
ANR	3922690	PtrMemberAccess	CG ( active_op_array ) -> cache_size		3922592	0					
ANR	3922691	CallExpression	CG ( active_op_array )		3922592	0					
ANR	3922692	Callee	CG		3922592	0					
ANR	3922693	Identifier	CG		3922592	0					
ANR	3922694	ArgumentList	active_op_array		3922592	1					
ANR	3922695	Argument	active_op_array		3922592	0					
ANR	3922696	Identifier	active_op_array		3922592	0					
ANR	3922697	Identifier	cache_size		3922592	1					
ANR	3922698	SizeofExpression	sizeof ( void * )		3922592	1					
ANR	3922699	Sizeof	sizeof		3922592	0					
ANR	3922700	SizeofOperand	void *		3922592	1					
ANR	3922701	ElseStatement	else		3922592	0					
ANR	3922702	CompoundStatement		11:9:456:456	3922592	0					
ANR	3922703	ExpressionStatement	opline -> op2 . num = - 1	2024:3:58323:58343	3922592	0	True				
ANR	3922704	AssignmentExpression	opline -> op2 . num = - 1		3922592	0		=			
ANR	3922705	MemberAccess	opline -> op2 . num		3922592	0					
ANR	3922706	PtrMemberAccess	opline -> op2		3922592	0					
ANR	3922707	Identifier	opline		3922592	0					
ANR	3922708	Identifier	op2		3922592	1					
ANR	3922709	Identifier	num		3922592	1					
ANR	3922710	UnaryOperationExpression	- 1		3922592	1					
ANR	3922711	UnaryOperator	-		3922592	0					
ANR	3922712	PrimaryExpression	1		3922592	1					
ANR	3922713	ReturnType	static void		3922592	1					
ANR	3922714	Identifier	zend_emit_return_type_check		3922592	2					
ANR	3922715	ParameterList	"znode * expr , zend_arg_info * return_info"		3922592	3					
ANR	3922716	Parameter	znode * expr	2012:40:57810:57820	3922592	0	True				
ANR	3922717	ParameterType	znode *		3922592	0					
ANR	3922718	Identifier	expr		3922592	1					
ANR	3922719	Parameter	zend_arg_info * return_info	2012:53:57823:57848	3922592	1	True				
ANR	3922720	ParameterType	zend_arg_info *		3922592	0					
ANR	3922721	Identifier	return_info		3922592	1					
ANR	3922722	CFGEntryNode	ENTRY		3922592		True				
ANR	3922723	CFGExitNode	EXIT		3922592		True				
ANR	3922724	Symbol	ZEND_VERIFY_RETURN_TYPE		3922592						
ANR	3922725	Symbol	opline -> op2		3922592						
ANR	3922726	Symbol	expr -> u . op		3922592						
ANR	3922727	Symbol	return_info -> class_name		3922592						
ANR	3922728	Symbol	get_temporary_variable		3922592						
ANR	3922729	Symbol	* CG		3922592						
ANR	3922730	Symbol	opline -> result		3922592						
ANR	3922731	Symbol	opline		3922592						
ANR	3922732	Symbol	expr		3922592						
ANR	3922733	Symbol	return_info -> type_hint		3922592						
ANR	3922734	Symbol	IS_UNDEF		3922592						
ANR	3922735	Symbol	IS_TMP_VAR		3922592						
ANR	3922736	Symbol	opline -> result_type		3922592						
ANR	3922737	Symbol	opline -> op2 . num		3922592						
ANR	3922738	Symbol	IS_CONST		3922592						
ANR	3922739	Symbol	NULL		3922592						
ANR	3922740	Symbol	CG		3922592						
ANR	3922741	Symbol	expr -> op_type		3922592						
ANR	3922742	Symbol	active_op_array		3922592						
ANR	3922743	Symbol	* opline		3922592						
ANR	3922744	Symbol	* expr		3922592						
ANR	3922745	Symbol	expr -> u		3922592						
ANR	3922746	Symbol	CG ( active_op_array ) -> cache_size		3922592						
ANR	3922747	Symbol	return_info		3922592						
ANR	3922748	Symbol	expr -> u . op . var		3922592						
ANR	3922749	Symbol	opline -> result . var		3922592						
ANR	3922750	Symbol	* return_info		3922592						
ANR	3922751	Symbol	zend_emit_op		3922592						
ANR	3922752	Function	zend_emit_final_return	2030:0:58365:58916							
ANR	3922753	FunctionDef	zend_emit_final_return (zval * zv)		3922752	0					
ANR	3922754	CompoundStatement		2031:0:58413:58916	3922752	0					
ANR	3922755	IdentifierDeclStatement	znode zn ;	2032:1:58416:58424	3922752	0	True				
ANR	3922756	IdentifierDecl	zn		3922752	0					
ANR	3922757	IdentifierDeclType	znode		3922752	0					
ANR	3922758	Identifier	zn		3922752	1					
ANR	3922759	IdentifierDeclStatement	zend_op * ret ;	2033:1:58427:58439	3922752	1	True				
ANR	3922760	IdentifierDecl	* ret		3922752	0					
ANR	3922761	IdentifierDeclType	zend_op *		3922752	0					
ANR	3922762	Identifier	ret		3922752	1					
ANR	3922763	IdentifierDeclStatement	zend_bool returns_reference = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0 ;	2034:1:58442:58536	3922752	2	True				
ANR	3922764	IdentifierDecl	returns_reference = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3922752	0					
ANR	3922765	IdentifierDeclType	zend_bool		3922752	0					
ANR	3922766	Identifier	returns_reference		3922752	1					
ANR	3922767	AssignmentExpression	returns_reference = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3922752	2		=			
ANR	3922768	Identifier	returns_reference		3922752	0					
ANR	3922769	EqualityExpression	( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3922752	1		!=			
ANR	3922770	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE		3922752	0		&			
ANR	3922771	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3922752	0					
ANR	3922772	CallExpression	CG ( active_op_array )		3922752	0					
ANR	3922773	Callee	CG		3922752	0					
ANR	3922774	Identifier	CG		3922752	0					
ANR	3922775	ArgumentList	active_op_array		3922752	1					
ANR	3922776	Argument	active_op_array		3922752	0					
ANR	3922777	Identifier	active_op_array		3922752	0					
ANR	3922778	Identifier	fn_flags		3922752	1					
ANR	3922779	Identifier	ZEND_ACC_RETURN_REFERENCE		3922752	1					
ANR	3922780	PrimaryExpression	0		3922752	1					
ANR	3922781	IfStatement	if ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		3922752	3					
ANR	3922782	Condition	CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE	2036:5:58544:58599	3922752	0	True				
ANR	3922783	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3922752	0		&			
ANR	3922784	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3922752	0					
ANR	3922785	CallExpression	CG ( active_op_array )		3922752	0					
ANR	3922786	Callee	CG		3922752	0					
ANR	3922787	Identifier	CG		3922752	0					
ANR	3922788	ArgumentList	active_op_array		3922752	1					
ANR	3922789	Argument	active_op_array		3922752	0					
ANR	3922790	Identifier	active_op_array		3922752	0					
ANR	3922791	Identifier	fn_flags		3922752	1					
ANR	3922792	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3922752	1					
ANR	3922793	CompoundStatement		6:63:188:188	3922752	1					
ANR	3922794	ExpressionStatement	"zend_emit_return_type_check ( NULL , CG ( active_op_array ) -> arg_info - 1 )"	2037:2:58606:58674	3922752	0	True				
ANR	3922795	CallExpression	"zend_emit_return_type_check ( NULL , CG ( active_op_array ) -> arg_info - 1 )"		3922752	0					
ANR	3922796	Callee	zend_emit_return_type_check		3922752	0					
ANR	3922797	Identifier	zend_emit_return_type_check		3922752	0					
ANR	3922798	ArgumentList	NULL		3922752	1					
ANR	3922799	Argument	NULL		3922752	0					
ANR	3922800	Identifier	NULL		3922752	0					
ANR	3922801	Argument	CG ( active_op_array ) -> arg_info - 1		3922752	1					
ANR	3922802	AdditiveExpression	CG ( active_op_array ) -> arg_info - 1		3922752	0		-			
ANR	3922803	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3922752	0					
ANR	3922804	CallExpression	CG ( active_op_array )		3922752	0					
ANR	3922805	Callee	CG		3922752	0					
ANR	3922806	Identifier	CG		3922752	0					
ANR	3922807	ArgumentList	active_op_array		3922752	1					
ANR	3922808	Argument	active_op_array		3922752	0					
ANR	3922809	Identifier	active_op_array		3922752	0					
ANR	3922810	Identifier	arg_info		3922752	1					
ANR	3922811	PrimaryExpression	1		3922752	1					
ANR	3922812	ExpressionStatement	zn . op_type = IS_CONST	2040:1:58681:58702	3922752	4	True				
ANR	3922813	AssignmentExpression	zn . op_type = IS_CONST		3922752	0		=			
ANR	3922814	MemberAccess	zn . op_type		3922752	0					
ANR	3922815	Identifier	zn		3922752	0					
ANR	3922816	Identifier	op_type		3922752	1					
ANR	3922817	Identifier	IS_CONST		3922752	1					
ANR	3922818	IfStatement	if ( zv )		3922752	5					
ANR	3922819	Condition	zv	2041:5:58709:58710	3922752	0	True				
ANR	3922820	Identifier	zv		3922752	0					
ANR	3922821	CompoundStatement		11:9:299:299	3922752	1					
ANR	3922822	ExpressionStatement	"ZVAL_COPY_VALUE ( & zn . u . constant , zv )"	2042:2:58717:58752	3922752	0	True				
ANR	3922823	CallExpression	"ZVAL_COPY_VALUE ( & zn . u . constant , zv )"		3922752	0					
ANR	3922824	Callee	ZVAL_COPY_VALUE		3922752	0					
ANR	3922825	Identifier	ZVAL_COPY_VALUE		3922752	0					
ANR	3922826	ArgumentList	& zn . u . constant		3922752	1					
ANR	3922827	Argument	& zn . u . constant		3922752	0					
ANR	3922828	UnaryOperationExpression	& zn . u . constant		3922752	0					
ANR	3922829	UnaryOperator	&		3922752	0					
ANR	3922830	MemberAccess	zn . u . constant		3922752	1					
ANR	3922831	MemberAccess	zn . u		3922752	0					
ANR	3922832	Identifier	zn		3922752	0					
ANR	3922833	Identifier	u		3922752	1					
ANR	3922834	Identifier	constant		3922752	1					
ANR	3922835	Argument	zv		3922752	1					
ANR	3922836	Identifier	zv		3922752	0					
ANR	3922837	ElseStatement	else		3922752	0					
ANR	3922838	CompoundStatement		13:8:348:348	3922752	0					
ANR	3922839	ExpressionStatement	ZVAL_NULL ( & zn . u . constant )	2044:2:58766:58791	3922752	0	True				
ANR	3922840	CallExpression	ZVAL_NULL ( & zn . u . constant )		3922752	0					
ANR	3922841	Callee	ZVAL_NULL		3922752	0					
ANR	3922842	Identifier	ZVAL_NULL		3922752	0					
ANR	3922843	ArgumentList	& zn . u . constant		3922752	1					
ANR	3922844	Argument	& zn . u . constant		3922752	0					
ANR	3922845	UnaryOperationExpression	& zn . u . constant		3922752	0					
ANR	3922846	UnaryOperator	&		3922752	0					
ANR	3922847	MemberAccess	zn . u . constant		3922752	1					
ANR	3922848	MemberAccess	zn . u		3922752	0					
ANR	3922849	Identifier	zn		3922752	0					
ANR	3922850	Identifier	u		3922752	1					
ANR	3922851	Identifier	constant		3922752	1					
ANR	3922852	ExpressionStatement	"ret = zend_emit_op ( NULL , returns_reference ? ZEND_RETURN_BY_REF : ZEND_RETURN , & zn , NULL )"	2047:1:58798:58887	3922752	6	True				
ANR	3922853	AssignmentExpression	"ret = zend_emit_op ( NULL , returns_reference ? ZEND_RETURN_BY_REF : ZEND_RETURN , & zn , NULL )"		3922752	0		=			
ANR	3922854	Identifier	ret		3922752	0					
ANR	3922855	CallExpression	"zend_emit_op ( NULL , returns_reference ? ZEND_RETURN_BY_REF : ZEND_RETURN , & zn , NULL )"		3922752	1					
ANR	3922856	Callee	zend_emit_op		3922752	0					
ANR	3922857	Identifier	zend_emit_op		3922752	0					
ANR	3922858	ArgumentList	NULL		3922752	1					
ANR	3922859	Argument	NULL		3922752	0					
ANR	3922860	Identifier	NULL		3922752	0					
ANR	3922861	Argument	returns_reference ? ZEND_RETURN_BY_REF : ZEND_RETURN		3922752	1					
ANR	3922862	ConditionalExpression	returns_reference ? ZEND_RETURN_BY_REF : ZEND_RETURN		3922752	0					
ANR	3922863	Condition	returns_reference		3922752	0					
ANR	3922864	Identifier	returns_reference		3922752	0					
ANR	3922865	Identifier	ZEND_RETURN_BY_REF		3922752	1					
ANR	3922866	Identifier	ZEND_RETURN		3922752	2					
ANR	3922867	Argument	& zn		3922752	2					
ANR	3922868	UnaryOperationExpression	& zn		3922752	0					
ANR	3922869	UnaryOperator	&		3922752	0					
ANR	3922870	Identifier	zn		3922752	1					
ANR	3922871	Argument	NULL		3922752	3					
ANR	3922872	Identifier	NULL		3922752	0					
ANR	3922873	ExpressionStatement	ret -> extended_value = - 1	2048:1:58890:58914	3922752	7	True				
ANR	3922874	AssignmentExpression	ret -> extended_value = - 1		3922752	0		=			
ANR	3922875	PtrMemberAccess	ret -> extended_value		3922752	0					
ANR	3922876	Identifier	ret		3922752	0					
ANR	3922877	Identifier	extended_value		3922752	1					
ANR	3922878	UnaryOperationExpression	- 1		3922752	1					
ANR	3922879	UnaryOperator	-		3922752	0					
ANR	3922880	PrimaryExpression	1		3922752	1					
ANR	3922881	ReturnType	void		3922752	1					
ANR	3922882	Identifier	zend_emit_final_return		3922752	2					
ANR	3922883	ParameterList	zval * zv		3922752	3					
ANR	3922884	Parameter	zval * zv	2030:28:58393:58400	3922752	0	True				
ANR	3922885	ParameterType	zval *		3922752	0					
ANR	3922886	Identifier	zv		3922752	1					
ANR	3922887	CFGEntryNode	ENTRY		3922752		True				
ANR	3922888	CFGExitNode	EXIT		3922752		True				
ANR	3922889	Symbol	ret		3922752						
ANR	3922890	Symbol	IS_CONST		3922752						
ANR	3922891	Symbol	NULL		3922752						
ANR	3922892	Symbol	ZEND_RETURN		3922752						
ANR	3922893	Symbol	CG		3922752						
ANR	3922894	Symbol	active_op_array		3922752						
ANR	3922895	Symbol	ZEND_ACC_HAS_RETURN_TYPE		3922752						
ANR	3922896	Symbol	* CG		3922752						
ANR	3922897	Symbol	zn . op_type		3922752						
ANR	3922898	Symbol	* ret		3922752						
ANR	3922899	Symbol	returns_reference		3922752						
ANR	3922900	Symbol	CG ( active_op_array ) -> fn_flags		3922752						
ANR	3922901	Symbol	& zn . u		3922752						
ANR	3922902	Symbol	CG ( active_op_array ) -> arg_info		3922752						
ANR	3922903	Symbol	zn		3922752						
ANR	3922904	Symbol	ZEND_RETURN_BY_REF		3922752						
ANR	3922905	Symbol	ZEND_ACC_RETURN_REFERENCE		3922752						
ANR	3922906	Symbol	ret -> extended_value		3922752						
ANR	3922907	Symbol	& zn . u . constant		3922752						
ANR	3922908	Symbol	zn . u		3922752						
ANR	3922909	Symbol	zv		3922752						
ANR	3922910	Symbol	& zn		3922752						
ANR	3922911	Symbol	zend_emit_op		3922752						
ANR	3922912	Function	zend_is_variable	2052:0:58929:59238							
ANR	3922913	FunctionDef	zend_is_variable (zend_ast * ast)		3922912	0					
ANR	3922914	CompoundStatement		2053:0:58995:59238	3922912	0					
ANR	3922915	ReturnStatement	return ast -> kind == ZEND_AST_VAR || ast -> kind == ZEND_AST_DIM || ast -> kind == ZEND_AST_PROP || ast -> kind == ZEND_AST_STATIC_PROP || ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL ;	2054:1:58998:59236	3922912	0	True				
ANR	3922916	OrExpression	ast -> kind == ZEND_AST_VAR || ast -> kind == ZEND_AST_DIM || ast -> kind == ZEND_AST_PROP || ast -> kind == ZEND_AST_STATIC_PROP || ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922912	0		||			
ANR	3922917	EqualityExpression	ast -> kind == ZEND_AST_VAR		3922912	0		==			
ANR	3922918	PtrMemberAccess	ast -> kind		3922912	0					
ANR	3922919	Identifier	ast		3922912	0					
ANR	3922920	Identifier	kind		3922912	1					
ANR	3922921	Identifier	ZEND_AST_VAR		3922912	1					
ANR	3922922	OrExpression	ast -> kind == ZEND_AST_DIM || ast -> kind == ZEND_AST_PROP || ast -> kind == ZEND_AST_STATIC_PROP || ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922912	1		||			
ANR	3922923	EqualityExpression	ast -> kind == ZEND_AST_DIM		3922912	0		==			
ANR	3922924	PtrMemberAccess	ast -> kind		3922912	0					
ANR	3922925	Identifier	ast		3922912	0					
ANR	3922926	Identifier	kind		3922912	1					
ANR	3922927	Identifier	ZEND_AST_DIM		3922912	1					
ANR	3922928	OrExpression	ast -> kind == ZEND_AST_PROP || ast -> kind == ZEND_AST_STATIC_PROP || ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922912	1		||			
ANR	3922929	EqualityExpression	ast -> kind == ZEND_AST_PROP		3922912	0		==			
ANR	3922930	PtrMemberAccess	ast -> kind		3922912	0					
ANR	3922931	Identifier	ast		3922912	0					
ANR	3922932	Identifier	kind		3922912	1					
ANR	3922933	Identifier	ZEND_AST_PROP		3922912	1					
ANR	3922934	OrExpression	ast -> kind == ZEND_AST_STATIC_PROP || ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922912	1		||			
ANR	3922935	EqualityExpression	ast -> kind == ZEND_AST_STATIC_PROP		3922912	0		==			
ANR	3922936	PtrMemberAccess	ast -> kind		3922912	0					
ANR	3922937	Identifier	ast		3922912	0					
ANR	3922938	Identifier	kind		3922912	1					
ANR	3922939	Identifier	ZEND_AST_STATIC_PROP		3922912	1					
ANR	3922940	OrExpression	ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922912	1		||			
ANR	3922941	EqualityExpression	ast -> kind == ZEND_AST_CALL		3922912	0		==			
ANR	3922942	PtrMemberAccess	ast -> kind		3922912	0					
ANR	3922943	Identifier	ast		3922912	0					
ANR	3922944	Identifier	kind		3922912	1					
ANR	3922945	Identifier	ZEND_AST_CALL		3922912	1					
ANR	3922946	OrExpression	ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922912	1		||			
ANR	3922947	EqualityExpression	ast -> kind == ZEND_AST_METHOD_CALL		3922912	0		==			
ANR	3922948	PtrMemberAccess	ast -> kind		3922912	0					
ANR	3922949	Identifier	ast		3922912	0					
ANR	3922950	Identifier	kind		3922912	1					
ANR	3922951	Identifier	ZEND_AST_METHOD_CALL		3922912	1					
ANR	3922952	EqualityExpression	ast -> kind == ZEND_AST_STATIC_CALL		3922912	1		==			
ANR	3922953	PtrMemberAccess	ast -> kind		3922912	0					
ANR	3922954	Identifier	ast		3922912	0					
ANR	3922955	Identifier	kind		3922912	1					
ANR	3922956	Identifier	ZEND_AST_STATIC_CALL		3922912	1					
ANR	3922957	ReturnType	static inline zend_bool		3922912	1					
ANR	3922958	Identifier	zend_is_variable		3922912	2					
ANR	3922959	ParameterList	zend_ast * ast		3922912	3					
ANR	3922960	Parameter	zend_ast * ast	2052:41:58970:58982	3922912	0	True				
ANR	3922961	ParameterType	zend_ast *		3922912	0					
ANR	3922962	Identifier	ast		3922912	1					
ANR	3922963	CFGEntryNode	ENTRY		3922912		True				
ANR	3922964	CFGExitNode	EXIT		3922912		True				
ANR	3922965	Symbol	ZEND_AST_STATIC_CALL		3922912						
ANR	3922966	Symbol	ast -> kind		3922912						
ANR	3922967	Symbol	ZEND_AST_STATIC_PROP		3922912						
ANR	3922968	Symbol	ast		3922912						
ANR	3922969	Symbol	* ast		3922912						
ANR	3922970	Symbol	ZEND_AST_CALL		3922912						
ANR	3922971	Symbol	ZEND_AST_DIM		3922912						
ANR	3922972	Symbol	ZEND_AST_VAR		3922912						
ANR	3922973	Symbol	ZEND_AST_METHOD_CALL		3922912						
ANR	3922974	Symbol	ZEND_AST_PROP		3922912						
ANR	3922975	Function	zend_is_call	2061:0:59251:59429							
ANR	3922976	FunctionDef	zend_is_call (zend_ast * ast)		3922975	0					
ANR	3922977	CompoundStatement		2062:0:59313:59429	3922975	0					
ANR	3922978	ReturnStatement	return ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL ;	2063:1:59316:59427	3922975	0	True				
ANR	3922979	OrExpression	ast -> kind == ZEND_AST_CALL || ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922975	0		||			
ANR	3922980	EqualityExpression	ast -> kind == ZEND_AST_CALL		3922975	0		==			
ANR	3922981	PtrMemberAccess	ast -> kind		3922975	0					
ANR	3922982	Identifier	ast		3922975	0					
ANR	3922983	Identifier	kind		3922975	1					
ANR	3922984	Identifier	ZEND_AST_CALL		3922975	1					
ANR	3922985	OrExpression	ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3922975	1		||			
ANR	3922986	EqualityExpression	ast -> kind == ZEND_AST_METHOD_CALL		3922975	0		==			
ANR	3922987	PtrMemberAccess	ast -> kind		3922975	0					
ANR	3922988	Identifier	ast		3922975	0					
ANR	3922989	Identifier	kind		3922975	1					
ANR	3922990	Identifier	ZEND_AST_METHOD_CALL		3922975	1					
ANR	3922991	EqualityExpression	ast -> kind == ZEND_AST_STATIC_CALL		3922975	1		==			
ANR	3922992	PtrMemberAccess	ast -> kind		3922975	0					
ANR	3922993	Identifier	ast		3922975	0					
ANR	3922994	Identifier	kind		3922975	1					
ANR	3922995	Identifier	ZEND_AST_STATIC_CALL		3922975	1					
ANR	3922996	ReturnType	static inline zend_bool		3922975	1					
ANR	3922997	Identifier	zend_is_call		3922975	2					
ANR	3922998	ParameterList	zend_ast * ast		3922975	3					
ANR	3922999	Parameter	zend_ast * ast	2061:37:59288:59300	3922975	0	True				
ANR	3923000	ParameterType	zend_ast *		3922975	0					
ANR	3923001	Identifier	ast		3922975	1					
ANR	3923002	CFGEntryNode	ENTRY		3922975		True				
ANR	3923003	CFGExitNode	EXIT		3922975		True				
ANR	3923004	Symbol	ZEND_AST_STATIC_CALL		3922975						
ANR	3923005	Symbol	ast -> kind		3922975						
ANR	3923006	Symbol	ast		3922975						
ANR	3923007	Symbol	ZEND_AST_CALL		3922975						
ANR	3923008	Symbol	* ast		3922975						
ANR	3923009	Symbol	ZEND_AST_METHOD_CALL		3922975						
ANR	3923010	Function	zend_is_unticked_stmt	2069:0:59442:59735							
ANR	3923011	FunctionDef	zend_is_unticked_stmt (zend_ast * ast)		3923010	0					
ANR	3923012	CompoundStatement		2070:0:59513:59735	3923010	0					
ANR	3923013	ReturnStatement	return ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_LABEL || ast -> kind == ZEND_AST_PROP_DECL || ast -> kind == ZEND_AST_CLASS_CONST_DECL || ast -> kind == ZEND_AST_USE_TRAIT || ast -> kind == ZEND_AST_METHOD ;	2071:1:59516:59733	3923010	0	True				
ANR	3923014	OrExpression	ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_LABEL || ast -> kind == ZEND_AST_PROP_DECL || ast -> kind == ZEND_AST_CLASS_CONST_DECL || ast -> kind == ZEND_AST_USE_TRAIT || ast -> kind == ZEND_AST_METHOD		3923010	0		||			
ANR	3923015	EqualityExpression	ast -> kind == ZEND_AST_STMT_LIST		3923010	0		==			
ANR	3923016	PtrMemberAccess	ast -> kind		3923010	0					
ANR	3923017	Identifier	ast		3923010	0					
ANR	3923018	Identifier	kind		3923010	1					
ANR	3923019	Identifier	ZEND_AST_STMT_LIST		3923010	1					
ANR	3923020	OrExpression	ast -> kind == ZEND_AST_LABEL || ast -> kind == ZEND_AST_PROP_DECL || ast -> kind == ZEND_AST_CLASS_CONST_DECL || ast -> kind == ZEND_AST_USE_TRAIT || ast -> kind == ZEND_AST_METHOD		3923010	1		||			
ANR	3923021	EqualityExpression	ast -> kind == ZEND_AST_LABEL		3923010	0		==			
ANR	3923022	PtrMemberAccess	ast -> kind		3923010	0					
ANR	3923023	Identifier	ast		3923010	0					
ANR	3923024	Identifier	kind		3923010	1					
ANR	3923025	Identifier	ZEND_AST_LABEL		3923010	1					
ANR	3923026	OrExpression	ast -> kind == ZEND_AST_PROP_DECL || ast -> kind == ZEND_AST_CLASS_CONST_DECL || ast -> kind == ZEND_AST_USE_TRAIT || ast -> kind == ZEND_AST_METHOD		3923010	1		||			
ANR	3923027	EqualityExpression	ast -> kind == ZEND_AST_PROP_DECL		3923010	0		==			
ANR	3923028	PtrMemberAccess	ast -> kind		3923010	0					
ANR	3923029	Identifier	ast		3923010	0					
ANR	3923030	Identifier	kind		3923010	1					
ANR	3923031	Identifier	ZEND_AST_PROP_DECL		3923010	1					
ANR	3923032	OrExpression	ast -> kind == ZEND_AST_CLASS_CONST_DECL || ast -> kind == ZEND_AST_USE_TRAIT || ast -> kind == ZEND_AST_METHOD		3923010	1		||			
ANR	3923033	EqualityExpression	ast -> kind == ZEND_AST_CLASS_CONST_DECL		3923010	0		==			
ANR	3923034	PtrMemberAccess	ast -> kind		3923010	0					
ANR	3923035	Identifier	ast		3923010	0					
ANR	3923036	Identifier	kind		3923010	1					
ANR	3923037	Identifier	ZEND_AST_CLASS_CONST_DECL		3923010	1					
ANR	3923038	OrExpression	ast -> kind == ZEND_AST_USE_TRAIT || ast -> kind == ZEND_AST_METHOD		3923010	1		||			
ANR	3923039	EqualityExpression	ast -> kind == ZEND_AST_USE_TRAIT		3923010	0		==			
ANR	3923040	PtrMemberAccess	ast -> kind		3923010	0					
ANR	3923041	Identifier	ast		3923010	0					
ANR	3923042	Identifier	kind		3923010	1					
ANR	3923043	Identifier	ZEND_AST_USE_TRAIT		3923010	1					
ANR	3923044	EqualityExpression	ast -> kind == ZEND_AST_METHOD		3923010	1		==			
ANR	3923045	PtrMemberAccess	ast -> kind		3923010	0					
ANR	3923046	Identifier	ast		3923010	0					
ANR	3923047	Identifier	kind		3923010	1					
ANR	3923048	Identifier	ZEND_AST_METHOD		3923010	1					
ANR	3923049	ReturnType	static inline zend_bool		3923010	1					
ANR	3923050	Identifier	zend_is_unticked_stmt		3923010	2					
ANR	3923051	ParameterList	zend_ast * ast		3923010	3					
ANR	3923052	Parameter	zend_ast * ast	2069:46:59488:59500	3923010	0	True				
ANR	3923053	ParameterType	zend_ast *		3923010	0					
ANR	3923054	Identifier	ast		3923010	1					
ANR	3923055	CFGEntryNode	ENTRY		3923010		True				
ANR	3923056	CFGExitNode	EXIT		3923010		True				
ANR	3923057	Symbol	ZEND_AST_STMT_LIST		3923010						
ANR	3923058	Symbol	ast -> kind		3923010						
ANR	3923059	Symbol	ast		3923010						
ANR	3923060	Symbol	* ast		3923010						
ANR	3923061	Symbol	ZEND_AST_USE_TRAIT		3923010						
ANR	3923062	Symbol	ZEND_AST_LABEL		3923010						
ANR	3923063	Symbol	ZEND_AST_METHOD		3923010						
ANR	3923064	Symbol	ZEND_AST_PROP_DECL		3923010						
ANR	3923065	Symbol	ZEND_AST_CLASS_CONST_DECL		3923010						
ANR	3923066	Function	zend_can_write_to_variable	2077:0:59748:59951							
ANR	3923067	FunctionDef	zend_can_write_to_variable (zend_ast * ast)		3923066	0					
ANR	3923068	CompoundStatement		2078:0:59824:59951	3923066	0					
ANR	3923069	WhileStatement	while ( ast -> kind == ZEND_AST_DIM || ast -> kind == ZEND_AST_PROP )		3923066	0					
ANR	3923070	Condition	ast -> kind == ZEND_AST_DIM || ast -> kind == ZEND_AST_PROP	2079:8:59834:59888	3923066	0	True				
ANR	3923071	OrExpression	ast -> kind == ZEND_AST_DIM || ast -> kind == ZEND_AST_PROP		3923066	0		||			
ANR	3923072	EqualityExpression	ast -> kind == ZEND_AST_DIM		3923066	0		==			
ANR	3923073	PtrMemberAccess	ast -> kind		3923066	0					
ANR	3923074	Identifier	ast		3923066	0					
ANR	3923075	Identifier	kind		3923066	1					
ANR	3923076	Identifier	ZEND_AST_DIM		3923066	1					
ANR	3923077	EqualityExpression	ast -> kind == ZEND_AST_PROP		3923066	1		==			
ANR	3923078	PtrMemberAccess	ast -> kind		3923066	0					
ANR	3923079	Identifier	ast		3923066	0					
ANR	3923080	Identifier	kind		3923066	1					
ANR	3923081	Identifier	ZEND_AST_PROP		3923066	1					
ANR	3923082	CompoundStatement		2:65:66:66	3923066	1					
ANR	3923083	ExpressionStatement	ast = ast -> child [ 0 ]	2080:2:59895:59914	3923066	0	True				
ANR	3923084	AssignmentExpression	ast = ast -> child [ 0 ]		3923066	0		=			
ANR	3923085	Identifier	ast		3923066	0					
ANR	3923086	ArrayIndexing	ast -> child [ 0 ]		3923066	1					
ANR	3923087	PtrMemberAccess	ast -> child		3923066	0					
ANR	3923088	Identifier	ast		3923066	0					
ANR	3923089	Identifier	child		3923066	1					
ANR	3923090	PrimaryExpression	0		3923066	1					
ANR	3923091	ReturnStatement	return zend_is_variable ( ast ) ;	2083:1:59921:59949	3923066	1	True				
ANR	3923092	CallExpression	zend_is_variable ( ast )		3923066	0					
ANR	3923093	Callee	zend_is_variable		3923066	0					
ANR	3923094	Identifier	zend_is_variable		3923066	0					
ANR	3923095	ArgumentList	ast		3923066	1					
ANR	3923096	Argument	ast		3923066	0					
ANR	3923097	Identifier	ast		3923066	0					
ANR	3923098	ReturnType	static inline zend_bool		3923066	1					
ANR	3923099	Identifier	zend_can_write_to_variable		3923066	2					
ANR	3923100	ParameterList	zend_ast * ast		3923066	3					
ANR	3923101	Parameter	zend_ast * ast	2077:51:59799:59811	3923066	0	True				
ANR	3923102	ParameterType	zend_ast *		3923066	0					
ANR	3923103	Identifier	ast		3923066	1					
ANR	3923104	CFGEntryNode	ENTRY		3923066		True				
ANR	3923105	CFGExitNode	EXIT		3923066		True				
ANR	3923106	Symbol	ast -> kind		3923066						
ANR	3923107	Symbol	zend_is_variable		3923066						
ANR	3923108	Symbol	ast		3923066						
ANR	3923109	Symbol	* ast		3923066						
ANR	3923110	Symbol	ZEND_AST_DIM		3923066						
ANR	3923111	Symbol	* * ast		3923066						
ANR	3923112	Symbol	* ast -> child		3923066						
ANR	3923113	Symbol	ast -> child		3923066						
ANR	3923114	Symbol	ZEND_AST_PROP		3923066						
ANR	3923115	Function	zend_is_const_default_class_ref	2087:0:59964:60185							
ANR	3923116	FunctionDef	zend_is_const_default_class_ref (zend_ast * name_ast)		3923115	0					
ANR	3923117	CompoundStatement		2088:0:60050:60185	3923115	0					
ANR	3923118	IfStatement	if ( name_ast -> kind != ZEND_AST_ZVAL )		3923115	0					
ANR	3923119	Condition	name_ast -> kind != ZEND_AST_ZVAL	2089:5:60057:60087	3923115	0	True				
ANR	3923120	EqualityExpression	name_ast -> kind != ZEND_AST_ZVAL		3923115	0		!=			
ANR	3923121	PtrMemberAccess	name_ast -> kind		3923115	0					
ANR	3923122	Identifier	name_ast		3923115	0					
ANR	3923123	Identifier	kind		3923115	1					
ANR	3923124	Identifier	ZEND_AST_ZVAL		3923115	1					
ANR	3923125	CompoundStatement		2:38:39:39	3923115	1					
ANR	3923126	ReturnStatement	return 0 ;	2090:2:60094:60102	3923115	0	True				
ANR	3923127	PrimaryExpression	0		3923115	0					
ANR	3923128	ReturnStatement	return ZEND_FETCH_CLASS_DEFAULT == zend_get_class_fetch_type_ast ( name_ast ) ;	2093:1:60109:60183	3923115	1	True				
ANR	3923129	EqualityExpression	ZEND_FETCH_CLASS_DEFAULT == zend_get_class_fetch_type_ast ( name_ast )		3923115	0		==			
ANR	3923130	Identifier	ZEND_FETCH_CLASS_DEFAULT		3923115	0					
ANR	3923131	CallExpression	zend_get_class_fetch_type_ast ( name_ast )		3923115	1					
ANR	3923132	Callee	zend_get_class_fetch_type_ast		3923115	0					
ANR	3923133	Identifier	zend_get_class_fetch_type_ast		3923115	0					
ANR	3923134	ArgumentList	name_ast		3923115	1					
ANR	3923135	Argument	name_ast		3923115	0					
ANR	3923136	Identifier	name_ast		3923115	0					
ANR	3923137	ReturnType	static inline zend_bool		3923115	1					
ANR	3923138	Identifier	zend_is_const_default_class_ref		3923115	2					
ANR	3923139	ParameterList	zend_ast * name_ast		3923115	3					
ANR	3923140	Parameter	zend_ast * name_ast	2087:56:60020:60037	3923115	0	True				
ANR	3923141	ParameterType	zend_ast *		3923115	0					
ANR	3923142	Identifier	name_ast		3923115	1					
ANR	3923143	CFGEntryNode	ENTRY		3923115		True				
ANR	3923144	CFGExitNode	EXIT		3923115		True				
ANR	3923145	Symbol	* name_ast		3923115						
ANR	3923146	Symbol	ZEND_FETCH_CLASS_DEFAULT		3923115						
ANR	3923147	Symbol	name_ast -> kind		3923115						
ANR	3923148	Symbol	name_ast		3923115						
ANR	3923149	Symbol	ZEND_AST_ZVAL		3923115						
ANR	3923150	Symbol	zend_get_class_fetch_type_ast		3923115						
ANR	3923151	Function	zend_handle_numeric_op	2097:0:60198:60506							
ANR	3923152	FunctionDef	zend_handle_numeric_op (znode * node)		3923151	0					
ANR	3923153	CompoundStatement		2098:0:60263:60506	3923151	0					
ANR	3923154	IfStatement	if ( node -> op_type == IS_CONST && Z_TYPE ( node -> u . constant ) == IS_STRING )		3923151	0					
ANR	3923155	Condition	node -> op_type == IS_CONST && Z_TYPE ( node -> u . constant ) == IS_STRING	2099:5:60270:60335	3923151	0	True				
ANR	3923156	AndExpression	node -> op_type == IS_CONST && Z_TYPE ( node -> u . constant ) == IS_STRING		3923151	0		&&			
ANR	3923157	EqualityExpression	node -> op_type == IS_CONST		3923151	0		==			
ANR	3923158	PtrMemberAccess	node -> op_type		3923151	0					
ANR	3923159	Identifier	node		3923151	0					
ANR	3923160	Identifier	op_type		3923151	1					
ANR	3923161	Identifier	IS_CONST		3923151	1					
ANR	3923162	EqualityExpression	Z_TYPE ( node -> u . constant ) == IS_STRING		3923151	1		==			
ANR	3923163	CallExpression	Z_TYPE ( node -> u . constant )		3923151	0					
ANR	3923164	Callee	Z_TYPE		3923151	0					
ANR	3923165	Identifier	Z_TYPE		3923151	0					
ANR	3923166	ArgumentList	node -> u . constant		3923151	1					
ANR	3923167	Argument	node -> u . constant		3923151	0					
ANR	3923168	MemberAccess	node -> u . constant		3923151	0					
ANR	3923169	PtrMemberAccess	node -> u		3923151	0					
ANR	3923170	Identifier	node		3923151	0					
ANR	3923171	Identifier	u		3923151	1					
ANR	3923172	Identifier	constant		3923151	1					
ANR	3923173	Identifier	IS_STRING		3923151	1					
ANR	3923174	CompoundStatement		3:2:78:94	3923151	1					
ANR	3923175	IdentifierDeclStatement	zend_ulong index ;	2100:2:60342:60358	3923151	0	True				
ANR	3923176	IdentifierDecl	index		3923151	0					
ANR	3923177	IdentifierDeclType	zend_ulong		3923151	0					
ANR	3923178	Identifier	index		3923151	1					
ANR	3923179	IfStatement	"if ( ZEND_HANDLE_NUMERIC ( Z_STR ( node -> u . constant ) , index ) )"		3923151	1					
ANR	3923180	Condition	"ZEND_HANDLE_NUMERIC ( Z_STR ( node -> u . constant ) , index )"	2102:6:60367:60417	3923151	0	True				
ANR	3923181	CallExpression	"ZEND_HANDLE_NUMERIC ( Z_STR ( node -> u . constant ) , index )"		3923151	0					
ANR	3923182	Callee	ZEND_HANDLE_NUMERIC		3923151	0					
ANR	3923183	Identifier	ZEND_HANDLE_NUMERIC		3923151	0					
ANR	3923184	ArgumentList	Z_STR ( node -> u . constant )		3923151	1					
ANR	3923185	Argument	Z_STR ( node -> u . constant )		3923151	0					
ANR	3923186	CallExpression	Z_STR ( node -> u . constant )		3923151	0					
ANR	3923187	Callee	Z_STR		3923151	0					
ANR	3923188	Identifier	Z_STR		3923151	0					
ANR	3923189	ArgumentList	node -> u . constant		3923151	1					
ANR	3923190	Argument	node -> u . constant		3923151	0					
ANR	3923191	MemberAccess	node -> u . constant		3923151	0					
ANR	3923192	PtrMemberAccess	node -> u		3923151	0					
ANR	3923193	Identifier	node		3923151	0					
ANR	3923194	Identifier	u		3923151	1					
ANR	3923195	Identifier	constant		3923151	1					
ANR	3923196	Argument	index		3923151	1					
ANR	3923197	Identifier	index		3923151	0					
ANR	3923198	CompoundStatement		5:59:156:156	3923151	1					
ANR	3923199	ExpressionStatement	zval_ptr_dtor ( & node -> u . constant )	2103:3:60425:60457	3923151	0	True				
ANR	3923200	CallExpression	zval_ptr_dtor ( & node -> u . constant )		3923151	0					
ANR	3923201	Callee	zval_ptr_dtor		3923151	0					
ANR	3923202	Identifier	zval_ptr_dtor		3923151	0					
ANR	3923203	ArgumentList	& node -> u . constant		3923151	1					
ANR	3923204	Argument	& node -> u . constant		3923151	0					
ANR	3923205	UnaryOperationExpression	& node -> u . constant		3923151	0					
ANR	3923206	UnaryOperator	&		3923151	0					
ANR	3923207	MemberAccess	node -> u . constant		3923151	1					
ANR	3923208	PtrMemberAccess	node -> u		3923151	0					
ANR	3923209	Identifier	node		3923151	0					
ANR	3923210	Identifier	u		3923151	1					
ANR	3923211	Identifier	constant		3923151	1					
ANR	3923212	ExpressionStatement	"ZVAL_LONG ( & node -> u . constant , index )"	2104:3:60462:60497	3923151	1	True				
ANR	3923213	CallExpression	"ZVAL_LONG ( & node -> u . constant , index )"		3923151	0					
ANR	3923214	Callee	ZVAL_LONG		3923151	0					
ANR	3923215	Identifier	ZVAL_LONG		3923151	0					
ANR	3923216	ArgumentList	& node -> u . constant		3923151	1					
ANR	3923217	Argument	& node -> u . constant		3923151	0					
ANR	3923218	UnaryOperationExpression	& node -> u . constant		3923151	0					
ANR	3923219	UnaryOperator	&		3923151	0					
ANR	3923220	MemberAccess	node -> u . constant		3923151	1					
ANR	3923221	PtrMemberAccess	node -> u		3923151	0					
ANR	3923222	Identifier	node		3923151	0					
ANR	3923223	Identifier	u		3923151	1					
ANR	3923224	Identifier	constant		3923151	1					
ANR	3923225	Argument	index		3923151	1					
ANR	3923226	Identifier	index		3923151	0					
ANR	3923227	ReturnType	static inline void		3923151	1					
ANR	3923228	Identifier	zend_handle_numeric_op		3923151	2					
ANR	3923229	ParameterList	znode * node		3923151	3					
ANR	3923230	Parameter	znode * node	2097:42:60240:60250	3923151	0	True				
ANR	3923231	ParameterType	znode *		3923151	0					
ANR	3923232	Identifier	node		3923151	1					
ANR	3923233	CFGEntryNode	ENTRY		3923151		True				
ANR	3923234	CFGExitNode	EXIT		3923151		True				
ANR	3923235	Symbol	& node -> u		3923151						
ANR	3923236	Symbol	IS_CONST		3923151						
ANR	3923237	Symbol	Z_TYPE		3923151						
ANR	3923238	Symbol	index		3923151						
ANR	3923239	Symbol	Z_STR		3923151						
ANR	3923240	Symbol	node -> u . constant		3923151						
ANR	3923241	Symbol	node -> u		3923151						
ANR	3923242	Symbol	node		3923151						
ANR	3923243	Symbol	node -> op_type		3923151						
ANR	3923244	Symbol	* node		3923151						
ANR	3923245	Symbol	IS_STRING		3923151						
ANR	3923246	Symbol	& node -> u . constant		3923151						
ANR	3923247	Symbol	ZEND_HANDLE_NUMERIC		3923151						
ANR	3923248	Function	zend_set_class_name_op1	2110:0:60519:60841							
ANR	3923249	FunctionDef	"zend_set_class_name_op1 (zend_op * opline , znode * class_node)"		3923248	0					
ANR	3923250	CompoundStatement		2111:0:60608:60841	3923248	0					
ANR	3923251	IfStatement	if ( class_node -> op_type == IS_CONST )		3923248	0					
ANR	3923252	Condition	class_node -> op_type == IS_CONST	2112:5:60615:60645	3923248	0	True				
ANR	3923253	EqualityExpression	class_node -> op_type == IS_CONST		3923248	0		==			
ANR	3923254	PtrMemberAccess	class_node -> op_type		3923248	0					
ANR	3923255	Identifier	class_node		3923248	0					
ANR	3923256	Identifier	op_type		3923248	1					
ANR	3923257	Identifier	IS_CONST		3923248	1					
ANR	3923258	CompoundStatement		2:38:39:39	3923248	1					
ANR	3923259	ExpressionStatement	opline -> op1_type = IS_CONST	2113:2:60652:60679	3923248	0	True				
ANR	3923260	AssignmentExpression	opline -> op1_type = IS_CONST		3923248	0		=			
ANR	3923261	PtrMemberAccess	opline -> op1_type		3923248	0					
ANR	3923262	Identifier	opline		3923248	0					
ANR	3923263	Identifier	op1_type		3923248	1					
ANR	3923264	Identifier	IS_CONST		3923248	1					
ANR	3923265	ExpressionStatement	"opline -> op1 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node -> u . constant ) )"	2114:2:60683:60789	3923248	1	True				
ANR	3923266	AssignmentExpression	"opline -> op1 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node -> u . constant ) )"		3923248	0		=			
ANR	3923267	MemberAccess	opline -> op1 . constant		3923248	0					
ANR	3923268	PtrMemberAccess	opline -> op1		3923248	0					
ANR	3923269	Identifier	opline		3923248	0					
ANR	3923270	Identifier	op1		3923248	1					
ANR	3923271	Identifier	constant		3923248	1					
ANR	3923272	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node -> u . constant ) )"		3923248	1					
ANR	3923273	Callee	zend_add_class_name_literal		3923248	0					
ANR	3923274	Identifier	zend_add_class_name_literal		3923248	0					
ANR	3923275	ArgumentList	CG ( active_op_array )		3923248	1					
ANR	3923276	Argument	CG ( active_op_array )		3923248	0					
ANR	3923277	CallExpression	CG ( active_op_array )		3923248	0					
ANR	3923278	Callee	CG		3923248	0					
ANR	3923279	Identifier	CG		3923248	0					
ANR	3923280	ArgumentList	active_op_array		3923248	1					
ANR	3923281	Argument	active_op_array		3923248	0					
ANR	3923282	Identifier	active_op_array		3923248	0					
ANR	3923283	Argument	Z_STR ( class_node -> u . constant )		3923248	1					
ANR	3923284	CallExpression	Z_STR ( class_node -> u . constant )		3923248	0					
ANR	3923285	Callee	Z_STR		3923248	0					
ANR	3923286	Identifier	Z_STR		3923248	0					
ANR	3923287	ArgumentList	class_node -> u . constant		3923248	1					
ANR	3923288	Argument	class_node -> u . constant		3923248	0					
ANR	3923289	MemberAccess	class_node -> u . constant		3923248	0					
ANR	3923290	PtrMemberAccess	class_node -> u		3923248	0					
ANR	3923291	Identifier	class_node		3923248	0					
ANR	3923292	Identifier	u		3923248	1					
ANR	3923293	Identifier	constant		3923248	1					
ANR	3923294	ElseStatement	else		3923248	0					
ANR	3923295	CompoundStatement		6:8:190:190	3923248	0					
ANR	3923296	ExpressionStatement	"SET_NODE ( opline -> op1 , class_node )"	2117:2:60803:60836	3923248	0	True				
ANR	3923297	CallExpression	"SET_NODE ( opline -> op1 , class_node )"		3923248	0					
ANR	3923298	Callee	SET_NODE		3923248	0					
ANR	3923299	Identifier	SET_NODE		3923248	0					
ANR	3923300	ArgumentList	opline -> op1		3923248	1					
ANR	3923301	Argument	opline -> op1		3923248	0					
ANR	3923302	PtrMemberAccess	opline -> op1		3923248	0					
ANR	3923303	Identifier	opline		3923248	0					
ANR	3923304	Identifier	op1		3923248	1					
ANR	3923305	Argument	class_node		3923248	1					
ANR	3923306	Identifier	class_node		3923248	0					
ANR	3923307	ReturnType	static inline void		3923248	1					
ANR	3923308	Identifier	zend_set_class_name_op1		3923248	2					
ANR	3923309	ParameterList	"zend_op * opline , znode * class_node"		3923248	3					
ANR	3923310	Parameter	zend_op * opline	2110:43:60562:60576	3923248	0	True				
ANR	3923311	ParameterType	zend_op *		3923248	0					
ANR	3923312	Identifier	opline		3923248	1					
ANR	3923313	Parameter	znode * class_node	2110:60:60579:60595	3923248	1	True				
ANR	3923314	ParameterType	znode *		3923248	0					
ANR	3923315	Identifier	class_node		3923248	1					
ANR	3923316	CFGEntryNode	ENTRY		3923248		True				
ANR	3923317	CFGExitNode	EXIT		3923248		True				
ANR	3923318	Symbol	opline -> op1		3923248						
ANR	3923319	Symbol	zend_add_class_name_literal		3923248						
ANR	3923320	Symbol	IS_CONST		3923248						
ANR	3923321	Symbol	CG		3923248						
ANR	3923322	Symbol	class_node		3923248						
ANR	3923323	Symbol	active_op_array		3923248						
ANR	3923324	Symbol	class_node -> op_type		3923248						
ANR	3923325	Symbol	Z_STR		3923248						
ANR	3923326	Symbol	opline -> op1_type		3923248						
ANR	3923327	Symbol	opline		3923248						
ANR	3923328	Symbol	* class_node		3923248						
ANR	3923329	Symbol	* opline		3923248						
ANR	3923330	Symbol	opline -> op1 . constant		3923248						
ANR	3923331	Symbol	class_node -> u . constant		3923248						
ANR	3923332	Symbol	class_node -> u		3923248						
ANR	3923333	Function	zend_compile_class_ref	2122:0:60854:62067							
ANR	3923334	FunctionDef	"zend_compile_class_ref (znode * result , zend_ast * name_ast , int throw_exception)"		3923333	0					
ANR	3923335	CompoundStatement		2123:0:60959:62067	3923333	0					
ANR	3923336	IdentifierDeclStatement	zend_op * opline ;	2124:1:60962:60977	3923333	0	True				
ANR	3923337	IdentifierDecl	* opline		3923333	0					
ANR	3923338	IdentifierDeclType	zend_op *		3923333	0					
ANR	3923339	Identifier	opline		3923333	1					
ANR	3923340	IdentifierDeclStatement	znode name_node ;	2125:1:60980:60995	3923333	1	True				
ANR	3923341	IdentifierDecl	name_node		3923333	0					
ANR	3923342	IdentifierDeclType	znode		3923333	0					
ANR	3923343	Identifier	name_node		3923333	1					
ANR	3923344	ExpressionStatement	"zend_compile_expr ( & name_node , name_ast )"	2126:1:60998:61037	3923333	2	True				
ANR	3923345	CallExpression	"zend_compile_expr ( & name_node , name_ast )"		3923333	0					
ANR	3923346	Callee	zend_compile_expr		3923333	0					
ANR	3923347	Identifier	zend_compile_expr		3923333	0					
ANR	3923348	ArgumentList	& name_node		3923333	1					
ANR	3923349	Argument	& name_node		3923333	0					
ANR	3923350	UnaryOperationExpression	& name_node		3923333	0					
ANR	3923351	UnaryOperator	&		3923333	0					
ANR	3923352	Identifier	name_node		3923333	1					
ANR	3923353	Argument	name_ast		3923333	1					
ANR	3923354	Identifier	name_ast		3923333	0					
ANR	3923355	IfStatement	if ( name_node . op_type == IS_CONST )		3923333	3					
ANR	3923356	Condition	name_node . op_type == IS_CONST	2128:5:61045:61073	3923333	0	True				
ANR	3923357	EqualityExpression	name_node . op_type == IS_CONST		3923333	0		==			
ANR	3923358	MemberAccess	name_node . op_type		3923333	0					
ANR	3923359	Identifier	name_node		3923333	0					
ANR	3923360	Identifier	op_type		3923333	1					
ANR	3923361	Identifier	IS_CONST		3923333	1					
ANR	3923362	CompoundStatement		8:2:141:160	3923333	1					
ANR	3923363	IdentifierDeclStatement	zend_string * name ;	2129:2:61080:61097	3923333	0	True				
ANR	3923364	IdentifierDecl	* name		3923333	0					
ANR	3923365	IdentifierDeclType	zend_string *		3923333	0					
ANR	3923366	Identifier	name		3923333	1					
ANR	3923367	IdentifierDeclStatement	uint32_t fetch_type ;	2130:2:61101:61120	3923333	1	True				
ANR	3923368	IdentifierDecl	fetch_type		3923333	0					
ANR	3923369	IdentifierDeclType	uint32_t		3923333	0					
ANR	3923370	Identifier	fetch_type		3923333	1					
ANR	3923371	IfStatement	if ( Z_TYPE ( name_node . u . constant ) != IS_STRING )		3923333	2					
ANR	3923372	Condition	Z_TYPE ( name_node . u . constant ) != IS_STRING	2132:6:61129:61169	3923333	0	True				
ANR	3923373	EqualityExpression	Z_TYPE ( name_node . u . constant ) != IS_STRING		3923333	0		!=			
ANR	3923374	CallExpression	Z_TYPE ( name_node . u . constant )		3923333	0					
ANR	3923375	Callee	Z_TYPE		3923333	0					
ANR	3923376	Identifier	Z_TYPE		3923333	0					
ANR	3923377	ArgumentList	name_node . u . constant		3923333	1					
ANR	3923378	Argument	name_node . u . constant		3923333	0					
ANR	3923379	MemberAccess	name_node . u . constant		3923333	0					
ANR	3923380	MemberAccess	name_node . u		3923333	0					
ANR	3923381	Identifier	name_node		3923333	0					
ANR	3923382	Identifier	u		3923333	1					
ANR	3923383	Identifier	constant		3923333	1					
ANR	3923384	Identifier	IS_STRING		3923333	1					
ANR	3923385	CompoundStatement		10:49:212:212	3923333	1					
ANR	3923386	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Illegal class name"" )"	2133:3:61177:61235	3923333	0	True				
ANR	3923387	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Illegal class name"" )"		3923333	0					
ANR	3923388	Callee	zend_error_noreturn		3923333	0					
ANR	3923389	Identifier	zend_error_noreturn		3923333	0					
ANR	3923390	ArgumentList	E_COMPILE_ERROR		3923333	1					
ANR	3923391	Argument	E_COMPILE_ERROR		3923333	0					
ANR	3923392	Identifier	E_COMPILE_ERROR		3923333	0					
ANR	3923393	Argument	"""Illegal class name"""		3923333	1					
ANR	3923394	PrimaryExpression	"""Illegal class name"""		3923333	0					
ANR	3923395	ExpressionStatement	name = Z_STR ( name_node . u . constant )	2136:2:61244:61278	3923333	3	True				
ANR	3923396	AssignmentExpression	name = Z_STR ( name_node . u . constant )		3923333	0		=			
ANR	3923397	Identifier	name		3923333	0					
ANR	3923398	CallExpression	Z_STR ( name_node . u . constant )		3923333	1					
ANR	3923399	Callee	Z_STR		3923333	0					
ANR	3923400	Identifier	Z_STR		3923333	0					
ANR	3923401	ArgumentList	name_node . u . constant		3923333	1					
ANR	3923402	Argument	name_node . u . constant		3923333	0					
ANR	3923403	MemberAccess	name_node . u . constant		3923333	0					
ANR	3923404	MemberAccess	name_node . u		3923333	0					
ANR	3923405	Identifier	name_node		3923333	0					
ANR	3923406	Identifier	u		3923333	1					
ANR	3923407	Identifier	constant		3923333	1					
ANR	3923408	ExpressionStatement	fetch_type = zend_get_class_fetch_type ( name )	2137:2:61282:61326	3923333	4	True				
ANR	3923409	AssignmentExpression	fetch_type = zend_get_class_fetch_type ( name )		3923333	0		=			
ANR	3923410	Identifier	fetch_type		3923333	0					
ANR	3923411	CallExpression	zend_get_class_fetch_type ( name )		3923333	1					
ANR	3923412	Callee	zend_get_class_fetch_type		3923333	0					
ANR	3923413	Identifier	zend_get_class_fetch_type		3923333	0					
ANR	3923414	ArgumentList	name		3923333	1					
ANR	3923415	Argument	name		3923333	0					
ANR	3923416	Identifier	name		3923333	0					
ANR	3923417	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_FETCH_CLASS , NULL , NULL )"	2139:2:61331:61390	3923333	5	True				
ANR	3923418	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_FETCH_CLASS , NULL , NULL )"		3923333	0		=			
ANR	3923419	Identifier	opline		3923333	0					
ANR	3923420	CallExpression	"zend_emit_op ( result , ZEND_FETCH_CLASS , NULL , NULL )"		3923333	1					
ANR	3923421	Callee	zend_emit_op		3923333	0					
ANR	3923422	Identifier	zend_emit_op		3923333	0					
ANR	3923423	ArgumentList	result		3923333	1					
ANR	3923424	Argument	result		3923333	0					
ANR	3923425	Identifier	result		3923333	0					
ANR	3923426	Argument	ZEND_FETCH_CLASS		3923333	1					
ANR	3923427	Identifier	ZEND_FETCH_CLASS		3923333	0					
ANR	3923428	Argument	NULL		3923333	2					
ANR	3923429	Identifier	NULL		3923333	0					
ANR	3923430	Argument	NULL		3923333	3					
ANR	3923431	Identifier	NULL		3923333	0					
ANR	3923432	ExpressionStatement	opline -> extended_value = fetch_type | ( throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0 )	2140:2:61394:61482	3923333	6	True				
ANR	3923433	AssignmentExpression	opline -> extended_value = fetch_type | ( throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0 )		3923333	0		=			
ANR	3923434	PtrMemberAccess	opline -> extended_value		3923333	0					
ANR	3923435	Identifier	opline		3923333	0					
ANR	3923436	Identifier	extended_value		3923333	1					
ANR	3923437	InclusiveOrExpression	fetch_type | ( throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0 )		3923333	1		|			
ANR	3923438	Identifier	fetch_type		3923333	0					
ANR	3923439	ConditionalExpression	throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0		3923333	1					
ANR	3923440	Condition	throw_exception		3923333	0					
ANR	3923441	Identifier	throw_exception		3923333	0					
ANR	3923442	Identifier	ZEND_FETCH_CLASS_EXCEPTION		3923333	1					
ANR	3923443	PrimaryExpression	0		3923333	2					
ANR	3923444	IfStatement	if ( fetch_type == ZEND_FETCH_CLASS_DEFAULT )		3923333	7					
ANR	3923445	Condition	fetch_type == ZEND_FETCH_CLASS_DEFAULT	2142:6:61491:61528	3923333	0	True				
ANR	3923446	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_DEFAULT		3923333	0		==			
ANR	3923447	Identifier	fetch_type		3923333	0					
ANR	3923448	Identifier	ZEND_FETCH_CLASS_DEFAULT		3923333	1					
ANR	3923449	CompoundStatement		21:3:576:655	3923333	1					
ANR	3923450	IdentifierDeclStatement	uint32_t type = name_ast -> kind == ZEND_AST_ZVAL ? name_ast -> attr : ZEND_NAME_FQ ;	2143:3:61536:61615	3923333	0	True				
ANR	3923451	IdentifierDecl	type = name_ast -> kind == ZEND_AST_ZVAL ? name_ast -> attr : ZEND_NAME_FQ		3923333	0					
ANR	3923452	IdentifierDeclType	uint32_t		3923333	0					
ANR	3923453	Identifier	type		3923333	1					
ANR	3923454	AssignmentExpression	type = name_ast -> kind == ZEND_AST_ZVAL ? name_ast -> attr : ZEND_NAME_FQ		3923333	2		=			
ANR	3923455	Identifier	type		3923333	0					
ANR	3923456	ConditionalExpression	name_ast -> kind == ZEND_AST_ZVAL ? name_ast -> attr : ZEND_NAME_FQ		3923333	1					
ANR	3923457	Condition	name_ast -> kind == ZEND_AST_ZVAL		3923333	0					
ANR	3923458	EqualityExpression	name_ast -> kind == ZEND_AST_ZVAL		3923333	0		==			
ANR	3923459	PtrMemberAccess	name_ast -> kind		3923333	0					
ANR	3923460	Identifier	name_ast		3923333	0					
ANR	3923461	Identifier	kind		3923333	1					
ANR	3923462	Identifier	ZEND_AST_ZVAL		3923333	1					
ANR	3923463	PtrMemberAccess	name_ast -> attr		3923333	1					
ANR	3923464	Identifier	name_ast		3923333	0					
ANR	3923465	Identifier	attr		3923333	1					
ANR	3923466	Identifier	ZEND_NAME_FQ		3923333	2					
ANR	3923467	ExpressionStatement	opline -> op2_type = IS_CONST	2144:3:61620:61647	3923333	1	True				
ANR	3923468	AssignmentExpression	opline -> op2_type = IS_CONST		3923333	0		=			
ANR	3923469	PtrMemberAccess	opline -> op2_type		3923333	0					
ANR	3923470	Identifier	opline		3923333	0					
ANR	3923471	Identifier	op2_type		3923333	1					
ANR	3923472	Identifier	IS_CONST		3923333	1					
ANR	3923473	ExpressionStatement	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name ( name , type ) )"	2145:3:61652:61764	3923333	2	True				
ANR	3923474	AssignmentExpression	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name ( name , type ) )"		3923333	0		=			
ANR	3923475	MemberAccess	opline -> op2 . constant		3923333	0					
ANR	3923476	PtrMemberAccess	opline -> op2		3923333	0					
ANR	3923477	Identifier	opline		3923333	0					
ANR	3923478	Identifier	op2		3923333	1					
ANR	3923479	Identifier	constant		3923333	1					
ANR	3923480	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name ( name , type ) )"		3923333	1					
ANR	3923481	Callee	zend_add_class_name_literal		3923333	0					
ANR	3923482	Identifier	zend_add_class_name_literal		3923333	0					
ANR	3923483	ArgumentList	CG ( active_op_array )		3923333	1					
ANR	3923484	Argument	CG ( active_op_array )		3923333	0					
ANR	3923485	CallExpression	CG ( active_op_array )		3923333	0					
ANR	3923486	Callee	CG		3923333	0					
ANR	3923487	Identifier	CG		3923333	0					
ANR	3923488	ArgumentList	active_op_array		3923333	1					
ANR	3923489	Argument	active_op_array		3923333	0					
ANR	3923490	Identifier	active_op_array		3923333	0					
ANR	3923491	Argument	"zend_resolve_class_name ( name , type )"		3923333	1					
ANR	3923492	CallExpression	"zend_resolve_class_name ( name , type )"		3923333	0					
ANR	3923493	Callee	zend_resolve_class_name		3923333	0					
ANR	3923494	Identifier	zend_resolve_class_name		3923333	0					
ANR	3923495	ArgumentList	name		3923333	1					
ANR	3923496	Argument	name		3923333	0					
ANR	3923497	Identifier	name		3923333	0					
ANR	3923498	Argument	type		3923333	1					
ANR	3923499	Identifier	type		3923333	0					
ANR	3923500	ElseStatement	else		3923333	0					
ANR	3923501	CompoundStatement		25:9:815:815	3923333	0					
ANR	3923502	ExpressionStatement	zend_ensure_valid_class_fetch_type ( fetch_type )	2148:3:61780:61826	3923333	0	True				
ANR	3923503	CallExpression	zend_ensure_valid_class_fetch_type ( fetch_type )		3923333	0					
ANR	3923504	Callee	zend_ensure_valid_class_fetch_type		3923333	0					
ANR	3923505	Identifier	zend_ensure_valid_class_fetch_type		3923333	0					
ANR	3923506	ArgumentList	fetch_type		3923333	1					
ANR	3923507	Argument	fetch_type		3923333	0					
ANR	3923508	Identifier	fetch_type		3923333	0					
ANR	3923509	ExpressionStatement	zend_string_release ( name )	2151:2:61835:61860	3923333	8	True				
ANR	3923510	CallExpression	zend_string_release ( name )		3923333	0					
ANR	3923511	Callee	zend_string_release		3923333	0					
ANR	3923512	Identifier	zend_string_release		3923333	0					
ANR	3923513	ArgumentList	name		3923333	1					
ANR	3923514	Argument	name		3923333	0					
ANR	3923515	Identifier	name		3923333	0					
ANR	3923516	ElseStatement	else		3923333	0					
ANR	3923517	CompoundStatement		30:8:910:910	3923333	0					
ANR	3923518	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_FETCH_CLASS , NULL , & name_node )"	2153:2:61874:61939	3923333	0	True				
ANR	3923519	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_FETCH_CLASS , NULL , & name_node )"		3923333	0		=			
ANR	3923520	Identifier	opline		3923333	0					
ANR	3923521	CallExpression	"zend_emit_op ( result , ZEND_FETCH_CLASS , NULL , & name_node )"		3923333	1					
ANR	3923522	Callee	zend_emit_op		3923333	0					
ANR	3923523	Identifier	zend_emit_op		3923333	0					
ANR	3923524	ArgumentList	result		3923333	1					
ANR	3923525	Argument	result		3923333	0					
ANR	3923526	Identifier	result		3923333	0					
ANR	3923527	Argument	ZEND_FETCH_CLASS		3923333	1					
ANR	3923528	Identifier	ZEND_FETCH_CLASS		3923333	0					
ANR	3923529	Argument	NULL		3923333	2					
ANR	3923530	Identifier	NULL		3923333	0					
ANR	3923531	Argument	& name_node		3923333	3					
ANR	3923532	UnaryOperationExpression	& name_node		3923333	0					
ANR	3923533	UnaryOperator	&		3923333	0					
ANR	3923534	Identifier	name_node		3923333	1					
ANR	3923535	ExpressionStatement	opline -> extended_value = ZEND_FETCH_CLASS_DEFAULT | ( throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0 )	2154:2:61943:62045	3923333	1	True				
ANR	3923536	AssignmentExpression	opline -> extended_value = ZEND_FETCH_CLASS_DEFAULT | ( throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0 )		3923333	0		=			
ANR	3923537	PtrMemberAccess	opline -> extended_value		3923333	0					
ANR	3923538	Identifier	opline		3923333	0					
ANR	3923539	Identifier	extended_value		3923333	1					
ANR	3923540	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ( throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0 )		3923333	1		|			
ANR	3923541	Identifier	ZEND_FETCH_CLASS_DEFAULT		3923333	0					
ANR	3923542	ConditionalExpression	throw_exception ? ZEND_FETCH_CLASS_EXCEPTION : 0		3923333	1					
ANR	3923543	Condition	throw_exception		3923333	0					
ANR	3923544	Identifier	throw_exception		3923333	0					
ANR	3923545	Identifier	ZEND_FETCH_CLASS_EXCEPTION		3923333	1					
ANR	3923546	PrimaryExpression	0		3923333	2					
ANR	3923547	ReturnStatement	return opline ;	2157:1:62052:62065	3923333	4	True				
ANR	3923548	Identifier	opline		3923333	0					
ANR	3923549	ReturnType	static zend_op *		3923333	1					
ANR	3923550	Identifier	zend_compile_class_ref		3923333	2					
ANR	3923551	ParameterList	"znode * result , zend_ast * name_ast , int throw_exception"		3923333	3					
ANR	3923552	Parameter	znode * result	2122:39:60893:60905	3923333	0	True				
ANR	3923553	ParameterType	znode *		3923333	0					
ANR	3923554	Identifier	result		3923333	1					
ANR	3923555	Parameter	zend_ast * name_ast	2122:54:60908:60925	3923333	1	True				
ANR	3923556	ParameterType	zend_ast *		3923333	0					
ANR	3923557	Identifier	name_ast		3923333	1					
ANR	3923558	Parameter	int throw_exception	2122:74:60928:60946	3923333	2	True				
ANR	3923559	ParameterType	int		3923333	0					
ANR	3923560	Identifier	throw_exception		3923333	1					
ANR	3923561	CFGEntryNode	ENTRY		3923333		True				
ANR	3923562	CFGExitNode	EXIT		3923333		True				
ANR	3923563	Symbol	ZEND_FETCH_CLASS_DEFAULT		3923333						
ANR	3923564	Symbol	zend_add_class_name_literal		3923333						
ANR	3923565	Symbol	opline -> op2		3923333						
ANR	3923566	Symbol	ZEND_NAME_FQ		3923333						
ANR	3923567	Symbol	E_COMPILE_ERROR		3923333						
ANR	3923568	Symbol	Z_TYPE		3923333						
ANR	3923569	Symbol	Z_STR		3923333						
ANR	3923570	Symbol	type		3923333						
ANR	3923571	Symbol	opline -> extended_value		3923333						
ANR	3923572	Symbol	name_ast -> attr		3923333						
ANR	3923573	Symbol	result		3923333						
ANR	3923574	Symbol	* name_ast		3923333						
ANR	3923575	Symbol	opline		3923333						
ANR	3923576	Symbol	zend_resolve_class_name		3923333						
ANR	3923577	Symbol	& name_node		3923333						
ANR	3923578	Symbol	ZEND_FETCH_CLASS_EXCEPTION		3923333						
ANR	3923579	Symbol	ZEND_AST_ZVAL		3923333						
ANR	3923580	Symbol	IS_STRING		3923333						
ANR	3923581	Symbol	zend_get_class_fetch_type		3923333						
ANR	3923582	Symbol	IS_CONST		3923333						
ANR	3923583	Symbol	fetch_type		3923333						
ANR	3923584	Symbol	NULL		3923333						
ANR	3923585	Symbol	CG		3923333						
ANR	3923586	Symbol	active_op_array		3923333						
ANR	3923587	Symbol	name_node . u		3923333						
ANR	3923588	Symbol	throw_exception		3923333						
ANR	3923589	Symbol	name_node . op_type		3923333						
ANR	3923590	Symbol	ZEND_FETCH_CLASS		3923333						
ANR	3923591	Symbol	* opline		3923333						
ANR	3923592	Symbol	name_ast -> kind		3923333						
ANR	3923593	Symbol	name_ast		3923333						
ANR	3923594	Symbol	name		3923333						
ANR	3923595	Symbol	opline -> op2 . constant		3923333						
ANR	3923596	Symbol	opline -> op2_type		3923333						
ANR	3923597	Symbol	name_node		3923333						
ANR	3923598	Symbol	name_node . u . constant		3923333						
ANR	3923599	Symbol	zend_emit_op		3923333						
ANR	3923600	Function	zend_try_compile_cv	2161:0:62080:62752							
ANR	3923601	FunctionDef	"zend_try_compile_cv (znode * result , zend_ast * ast)"		3923600	0					
ANR	3923602	CompoundStatement		2162:0:62151:62752	3923600	0					
ANR	3923603	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	2163:1:62154:62188	3923600	0	True				
ANR	3923604	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3923600	0					
ANR	3923605	IdentifierDeclType	zend_ast *		3923600	0					
ANR	3923606	Identifier	name_ast		3923600	1					
ANR	3923607	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3923600	2		=			
ANR	3923608	Identifier	name_ast		3923600	0					
ANR	3923609	ArrayIndexing	ast -> child [ 0 ]		3923600	1					
ANR	3923610	PtrMemberAccess	ast -> child		3923600	0					
ANR	3923611	Identifier	ast		3923600	0					
ANR	3923612	Identifier	child		3923600	1					
ANR	3923613	PrimaryExpression	0		3923600	1					
ANR	3923614	IfStatement	if ( name_ast -> kind == ZEND_AST_ZVAL )		3923600	1					
ANR	3923615	Condition	name_ast -> kind == ZEND_AST_ZVAL	2164:5:62195:62225	3923600	0	True				
ANR	3923616	EqualityExpression	name_ast -> kind == ZEND_AST_ZVAL		3923600	0		==			
ANR	3923617	PtrMemberAccess	name_ast -> kind		3923600	0					
ANR	3923618	Identifier	name_ast		3923600	0					
ANR	3923619	Identifier	kind		3923600	1					
ANR	3923620	Identifier	ZEND_AST_ZVAL		3923600	1					
ANR	3923621	CompoundStatement		4:2:80:144	3923600	1					
ANR	3923622	IdentifierDeclStatement	zend_string * name = zval_get_string ( zend_ast_get_zval ( name_ast ) ) ;	2165:2:62232:62296	3923600	0	True				
ANR	3923623	IdentifierDecl	* name = zval_get_string ( zend_ast_get_zval ( name_ast ) )		3923600	0					
ANR	3923624	IdentifierDeclType	zend_string *		3923600	0					
ANR	3923625	Identifier	name		3923600	1					
ANR	3923626	AssignmentExpression	* name = zval_get_string ( zend_ast_get_zval ( name_ast ) )		3923600	2		=			
ANR	3923627	Identifier	name		3923600	0					
ANR	3923628	CallExpression	zval_get_string ( zend_ast_get_zval ( name_ast ) )		3923600	1					
ANR	3923629	Callee	zval_get_string		3923600	0					
ANR	3923630	Identifier	zval_get_string		3923600	0					
ANR	3923631	ArgumentList	zend_ast_get_zval ( name_ast )		3923600	1					
ANR	3923632	Argument	zend_ast_get_zval ( name_ast )		3923600	0					
ANR	3923633	CallExpression	zend_ast_get_zval ( name_ast )		3923600	0					
ANR	3923634	Callee	zend_ast_get_zval		3923600	0					
ANR	3923635	Identifier	zend_ast_get_zval		3923600	0					
ANR	3923636	ArgumentList	name_ast		3923600	1					
ANR	3923637	Argument	name_ast		3923600	0					
ANR	3923638	Identifier	name_ast		3923600	0					
ANR	3923639	IfStatement	if ( zend_is_auto_global ( name ) )		3923600	1					
ANR	3923640	Condition	zend_is_auto_global ( name )	2167:6:62305:62329	3923600	0	True				
ANR	3923641	CallExpression	zend_is_auto_global ( name )		3923600	0					
ANR	3923642	Callee	zend_is_auto_global		3923600	0					
ANR	3923643	Identifier	zend_is_auto_global		3923600	0					
ANR	3923644	ArgumentList	name		3923600	1					
ANR	3923645	Argument	name		3923600	0					
ANR	3923646	Identifier	name		3923600	0					
ANR	3923647	CompoundStatement		6:33:180:180	3923600	1					
ANR	3923648	ExpressionStatement	zend_string_release ( name )	2168:3:62337:62362	3923600	0	True				
ANR	3923649	CallExpression	zend_string_release ( name )		3923600	0					
ANR	3923650	Callee	zend_string_release		3923600	0					
ANR	3923651	Identifier	zend_string_release		3923600	0					
ANR	3923652	ArgumentList	name		3923600	1					
ANR	3923653	Argument	name		3923600	0					
ANR	3923654	Identifier	name		3923600	0					
ANR	3923655	ReturnStatement	return FAILURE ;	2169:3:62367:62381	3923600	1	True				
ANR	3923656	Identifier	FAILURE		3923600	0					
ANR	3923657	ExpressionStatement	result -> op_type = IS_CV	2172:2:62390:62413	3923600	2	True				
ANR	3923658	AssignmentExpression	result -> op_type = IS_CV		3923600	0		=			
ANR	3923659	PtrMemberAccess	result -> op_type		3923600	0					
ANR	3923660	Identifier	result		3923600	0					
ANR	3923661	Identifier	op_type		3923600	1					
ANR	3923662	Identifier	IS_CV		3923600	1					
ANR	3923663	ExpressionStatement	"result -> u . op . var = lookup_cv ( CG ( active_op_array ) , name )"	2173:2:62417:62472	3923600	3	True				
ANR	3923664	AssignmentExpression	"result -> u . op . var = lookup_cv ( CG ( active_op_array ) , name )"		3923600	0		=			
ANR	3923665	MemberAccess	result -> u . op . var		3923600	0					
ANR	3923666	MemberAccess	result -> u . op		3923600	0					
ANR	3923667	PtrMemberAccess	result -> u		3923600	0					
ANR	3923668	Identifier	result		3923600	0					
ANR	3923669	Identifier	u		3923600	1					
ANR	3923670	Identifier	op		3923600	1					
ANR	3923671	Identifier	var		3923600	1					
ANR	3923672	CallExpression	"lookup_cv ( CG ( active_op_array ) , name )"		3923600	1					
ANR	3923673	Callee	lookup_cv		3923600	0					
ANR	3923674	Identifier	lookup_cv		3923600	0					
ANR	3923675	ArgumentList	CG ( active_op_array )		3923600	1					
ANR	3923676	Argument	CG ( active_op_array )		3923600	0					
ANR	3923677	CallExpression	CG ( active_op_array )		3923600	0					
ANR	3923678	Callee	CG		3923600	0					
ANR	3923679	Identifier	CG		3923600	0					
ANR	3923680	ArgumentList	active_op_array		3923600	1					
ANR	3923681	Argument	active_op_array		3923600	0					
ANR	3923682	Identifier	active_op_array		3923600	0					
ANR	3923683	Argument	name		3923600	1					
ANR	3923684	Identifier	name		3923600	0					
ANR	3923685	ExpressionStatement	name = CG ( active_op_array ) -> vars [ EX_VAR_TO_NUM ( result -> u . op . var ) ]	2176:2:62538:62603	3923600	4	True				
ANR	3923686	AssignmentExpression	name = CG ( active_op_array ) -> vars [ EX_VAR_TO_NUM ( result -> u . op . var ) ]		3923600	0		=			
ANR	3923687	Identifier	name		3923600	0					
ANR	3923688	ArrayIndexing	CG ( active_op_array ) -> vars [ EX_VAR_TO_NUM ( result -> u . op . var ) ]		3923600	1					
ANR	3923689	PtrMemberAccess	CG ( active_op_array ) -> vars		3923600	0					
ANR	3923690	CallExpression	CG ( active_op_array )		3923600	0					
ANR	3923691	Callee	CG		3923600	0					
ANR	3923692	Identifier	CG		3923600	0					
ANR	3923693	ArgumentList	active_op_array		3923600	1					
ANR	3923694	Argument	active_op_array		3923600	0					
ANR	3923695	Identifier	active_op_array		3923600	0					
ANR	3923696	Identifier	vars		3923600	1					
ANR	3923697	CallExpression	EX_VAR_TO_NUM ( result -> u . op . var )		3923600	1					
ANR	3923698	Callee	EX_VAR_TO_NUM		3923600	0					
ANR	3923699	Identifier	EX_VAR_TO_NUM		3923600	0					
ANR	3923700	ArgumentList	result -> u . op . var		3923600	1					
ANR	3923701	Argument	result -> u . op . var		3923600	0					
ANR	3923702	MemberAccess	result -> u . op . var		3923600	0					
ANR	3923703	MemberAccess	result -> u . op		3923600	0					
ANR	3923704	PtrMemberAccess	result -> u		3923600	0					
ANR	3923705	Identifier	result		3923600	0					
ANR	3923706	Identifier	u		3923600	1					
ANR	3923707	Identifier	op		3923600	1					
ANR	3923708	Identifier	var		3923600	1					
ANR	3923709	IfStatement	"if ( zend_string_equals_literal ( name , ""this"" ) )"		3923600	5					
ANR	3923710	Condition	"zend_string_equals_literal ( name , ""this"" )"	2178:6:62612:62651	3923600	0	True				
ANR	3923711	CallExpression	"zend_string_equals_literal ( name , ""this"" )"		3923600	0					
ANR	3923712	Callee	zend_string_equals_literal		3923600	0					
ANR	3923713	Identifier	zend_string_equals_literal		3923600	0					
ANR	3923714	ArgumentList	name		3923600	1					
ANR	3923715	Argument	name		3923600	0					
ANR	3923716	Identifier	name		3923600	0					
ANR	3923717	Argument	"""this"""		3923600	1					
ANR	3923718	PrimaryExpression	"""this"""		3923600	0					
ANR	3923719	CompoundStatement		17:48:502:502	3923600	1					
ANR	3923720	ExpressionStatement	CG ( active_op_array ) -> this_var = result -> u . op . var	2179:3:62659:62707	3923600	0	True				
ANR	3923721	AssignmentExpression	CG ( active_op_array ) -> this_var = result -> u . op . var		3923600	0		=			
ANR	3923722	PtrMemberAccess	CG ( active_op_array ) -> this_var		3923600	0					
ANR	3923723	CallExpression	CG ( active_op_array )		3923600	0					
ANR	3923724	Callee	CG		3923600	0					
ANR	3923725	Identifier	CG		3923600	0					
ANR	3923726	ArgumentList	active_op_array		3923600	1					
ANR	3923727	Argument	active_op_array		3923600	0					
ANR	3923728	Identifier	active_op_array		3923600	0					
ANR	3923729	Identifier	this_var		3923600	1					
ANR	3923730	MemberAccess	result -> u . op . var		3923600	1					
ANR	3923731	MemberAccess	result -> u . op		3923600	0					
ANR	3923732	PtrMemberAccess	result -> u		3923600	0					
ANR	3923733	Identifier	result		3923600	0					
ANR	3923734	Identifier	u		3923600	1					
ANR	3923735	Identifier	op		3923600	1					
ANR	3923736	Identifier	var		3923600	1					
ANR	3923737	ReturnStatement	return SUCCESS ;	2181:2:62715:62729	3923600	6	True				
ANR	3923738	Identifier	SUCCESS		3923600	0					
ANR	3923739	ReturnStatement	return FAILURE ;	2184:1:62736:62750	3923600	2	True				
ANR	3923740	Identifier	FAILURE		3923600	0					
ANR	3923741	ReturnType	static int		3923600	1					
ANR	3923742	Identifier	zend_try_compile_cv		3923600	2					
ANR	3923743	ParameterList	"znode * result , zend_ast * ast"		3923600	3					
ANR	3923744	Parameter	znode * result	2161:31:62111:62123	3923600	0	True				
ANR	3923745	ParameterType	znode *		3923600	0					
ANR	3923746	Identifier	result		3923600	1					
ANR	3923747	Parameter	zend_ast * ast	2161:46:62126:62138	3923600	1	True				
ANR	3923748	ParameterType	zend_ast *		3923600	0					
ANR	3923749	Identifier	ast		3923600	1					
ANR	3923750	CFGEntryNode	ENTRY		3923600		True				
ANR	3923751	CFGExitNode	EXIT		3923600		True				
ANR	3923752	Symbol	* EX_VAR_TO_NUM		3923600						
ANR	3923753	Symbol	zend_string_equals_literal		3923600						
ANR	3923754	Symbol	ast		3923600						
ANR	3923755	Symbol	IS_CV		3923600						
ANR	3923756	Symbol	CG ( active_op_array ) -> vars		3923600						
ANR	3923757	Symbol	result -> u . op . var		3923600						
ANR	3923758	Symbol	lookup_cv		3923600						
ANR	3923759	Symbol	* CG		3923600						
ANR	3923760	Symbol	result -> u . op		3923600						
ANR	3923761	Symbol	result -> op_type		3923600						
ANR	3923762	Symbol	result -> u		3923600						
ANR	3923763	Symbol	result		3923600						
ANR	3923764	Symbol	* name_ast		3923600						
ANR	3923765	Symbol	* * CG		3923600						
ANR	3923766	Symbol	* ast		3923600						
ANR	3923767	Symbol	* result		3923600						
ANR	3923768	Symbol	* * ast		3923600						
ANR	3923769	Symbol	ZEND_AST_ZVAL		3923600						
ANR	3923770	Symbol	EX_VAR_TO_NUM		3923600						
ANR	3923771	Symbol	SUCCESS		3923600						
ANR	3923772	Symbol	CG		3923600						
ANR	3923773	Symbol	active_op_array		3923600						
ANR	3923774	Symbol	zend_is_auto_global		3923600						
ANR	3923775	Symbol	zval_get_string		3923600						
ANR	3923776	Symbol	FAILURE		3923600						
ANR	3923777	Symbol	CG ( active_op_array ) -> this_var		3923600						
ANR	3923778	Symbol	name_ast -> kind		3923600						
ANR	3923779	Symbol	name_ast		3923600						
ANR	3923780	Symbol	name		3923600						
ANR	3923781	Symbol	* ast -> child		3923600						
ANR	3923782	Symbol	ast -> child		3923600						
ANR	3923783	Symbol	zend_ast_get_zval		3923600						
ANR	3923784	Symbol	* CG ( active_op_array ) -> vars		3923600						
ANR	3923785	Function	zend_compile_simple_var_no_cv	2188:0:62765:63790							
ANR	3923786	FunctionDef	"zend_compile_simple_var_no_cv (znode * result , zend_ast * ast , uint32_t type , int delayed)"		3923785	0					
ANR	3923787	CompoundStatement		2189:0:62879:63790	3923785	0					
ANR	3923788	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	2190:1:62882:62916	3923785	0	True				
ANR	3923789	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3923785	0					
ANR	3923790	IdentifierDeclType	zend_ast *		3923785	0					
ANR	3923791	Identifier	name_ast		3923785	1					
ANR	3923792	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3923785	2		=			
ANR	3923793	Identifier	name_ast		3923785	0					
ANR	3923794	ArrayIndexing	ast -> child [ 0 ]		3923785	1					
ANR	3923795	PtrMemberAccess	ast -> child		3923785	0					
ANR	3923796	Identifier	ast		3923785	0					
ANR	3923797	Identifier	child		3923785	1					
ANR	3923798	PrimaryExpression	0		3923785	1					
ANR	3923799	IdentifierDeclStatement	znode name_node ;	2191:1:62919:62934	3923785	1	True				
ANR	3923800	IdentifierDecl	name_node		3923785	0					
ANR	3923801	IdentifierDeclType	znode		3923785	0					
ANR	3923802	Identifier	name_node		3923785	1					
ANR	3923803	IdentifierDeclStatement	zend_op * opline ;	2192:1:62937:62952	3923785	2	True				
ANR	3923804	IdentifierDecl	* opline		3923785	0					
ANR	3923805	IdentifierDeclType	zend_op *		3923785	0					
ANR	3923806	Identifier	opline		3923785	1					
ANR	3923807	ExpressionStatement	"zend_compile_expr ( & name_node , name_ast )"	2194:1:62956:62995	3923785	3	True				
ANR	3923808	CallExpression	"zend_compile_expr ( & name_node , name_ast )"		3923785	0					
ANR	3923809	Callee	zend_compile_expr		3923785	0					
ANR	3923810	Identifier	zend_compile_expr		3923785	0					
ANR	3923811	ArgumentList	& name_node		3923785	1					
ANR	3923812	Argument	& name_node		3923785	0					
ANR	3923813	UnaryOperationExpression	& name_node		3923785	0					
ANR	3923814	UnaryOperator	&		3923785	0					
ANR	3923815	Identifier	name_node		3923785	1					
ANR	3923816	Argument	name_ast		3923785	1					
ANR	3923817	Identifier	name_ast		3923785	0					
ANR	3923818	IfStatement	if ( name_node . op_type == IS_CONST )		3923785	4					
ANR	3923819	Condition	name_node . op_type == IS_CONST	2195:5:63002:63030	3923785	0	True				
ANR	3923820	EqualityExpression	name_node . op_type == IS_CONST		3923785	0		==			
ANR	3923821	MemberAccess	name_node . op_type		3923785	0					
ANR	3923822	Identifier	name_node		3923785	0					
ANR	3923823	Identifier	op_type		3923785	1					
ANR	3923824	Identifier	IS_CONST		3923785	1					
ANR	3923825	CompoundStatement		7:36:153:153	3923785	1					
ANR	3923826	ExpressionStatement	convert_to_string ( & name_node . u . constant )	2196:2:63037:63077	3923785	0	True				
ANR	3923827	CallExpression	convert_to_string ( & name_node . u . constant )		3923785	0					
ANR	3923828	Callee	convert_to_string		3923785	0					
ANR	3923829	Identifier	convert_to_string		3923785	0					
ANR	3923830	ArgumentList	& name_node . u . constant		3923785	1					
ANR	3923831	Argument	& name_node . u . constant		3923785	0					
ANR	3923832	UnaryOperationExpression	& name_node . u . constant		3923785	0					
ANR	3923833	UnaryOperator	&		3923785	0					
ANR	3923834	MemberAccess	name_node . u . constant		3923785	1					
ANR	3923835	MemberAccess	name_node . u		3923785	0					
ANR	3923836	Identifier	name_node		3923785	0					
ANR	3923837	Identifier	u		3923785	1					
ANR	3923838	Identifier	constant		3923785	1					
ANR	3923839	IfStatement	if ( delayed )		3923785	5					
ANR	3923840	Condition	delayed	2199:5:63088:63094	3923785	0	True				
ANR	3923841	Identifier	delayed		3923785	0					
ANR	3923842	CompoundStatement		11:14:217:217	3923785	1					
ANR	3923843	ExpressionStatement	"opline = zend_delayed_emit_op ( result , ZEND_FETCH_R , & name_node , NULL )"	2200:2:63101:63170	3923785	0	True				
ANR	3923844	AssignmentExpression	"opline = zend_delayed_emit_op ( result , ZEND_FETCH_R , & name_node , NULL )"		3923785	0		=			
ANR	3923845	Identifier	opline		3923785	0					
ANR	3923846	CallExpression	"zend_delayed_emit_op ( result , ZEND_FETCH_R , & name_node , NULL )"		3923785	1					
ANR	3923847	Callee	zend_delayed_emit_op		3923785	0					
ANR	3923848	Identifier	zend_delayed_emit_op		3923785	0					
ANR	3923849	ArgumentList	result		3923785	1					
ANR	3923850	Argument	result		3923785	0					
ANR	3923851	Identifier	result		3923785	0					
ANR	3923852	Argument	ZEND_FETCH_R		3923785	1					
ANR	3923853	Identifier	ZEND_FETCH_R		3923785	0					
ANR	3923854	Argument	& name_node		3923785	2					
ANR	3923855	UnaryOperationExpression	& name_node		3923785	0					
ANR	3923856	UnaryOperator	&		3923785	0					
ANR	3923857	Identifier	name_node		3923785	1					
ANR	3923858	Argument	NULL		3923785	3					
ANR	3923859	Identifier	NULL		3923785	0					
ANR	3923860	ElseStatement	else		3923785	0					
ANR	3923861	CompoundStatement		13:8:300:300	3923785	0					
ANR	3923862	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_FETCH_R , & name_node , NULL )"	2202:2:63184:63245	3923785	0	True				
ANR	3923863	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_FETCH_R , & name_node , NULL )"		3923785	0		=			
ANR	3923864	Identifier	opline		3923785	0					
ANR	3923865	CallExpression	"zend_emit_op ( result , ZEND_FETCH_R , & name_node , NULL )"		3923785	1					
ANR	3923866	Callee	zend_emit_op		3923785	0					
ANR	3923867	Identifier	zend_emit_op		3923785	0					
ANR	3923868	ArgumentList	result		3923785	1					
ANR	3923869	Argument	result		3923785	0					
ANR	3923870	Identifier	result		3923785	0					
ANR	3923871	Argument	ZEND_FETCH_R		3923785	1					
ANR	3923872	Identifier	ZEND_FETCH_R		3923785	0					
ANR	3923873	Argument	& name_node		3923785	2					
ANR	3923874	UnaryOperationExpression	& name_node		3923785	0					
ANR	3923875	UnaryOperator	&		3923785	0					
ANR	3923876	Identifier	name_node		3923785	1					
ANR	3923877	Argument	NULL		3923785	3					
ANR	3923878	Identifier	NULL		3923785	0					
ANR	3923879	IfStatement	if ( name_node . op_type == IS_CONST && zend_is_auto_global ( Z_STR ( name_node . u . constant ) ) )		3923785	6					
ANR	3923880	Condition	name_node . op_type == IS_CONST && zend_is_auto_global ( Z_STR ( name_node . u . constant ) )	2205:5:63256:63342	3923785	0	True				
ANR	3923881	AndExpression	name_node . op_type == IS_CONST && zend_is_auto_global ( Z_STR ( name_node . u . constant ) )		3923785	0		&&			
ANR	3923882	EqualityExpression	name_node . op_type == IS_CONST		3923785	0		==			
ANR	3923883	MemberAccess	name_node . op_type		3923785	0					
ANR	3923884	Identifier	name_node		3923785	0					
ANR	3923885	Identifier	op_type		3923785	1					
ANR	3923886	Identifier	IS_CONST		3923785	1					
ANR	3923887	CallExpression	zend_is_auto_global ( Z_STR ( name_node . u . constant ) )		3923785	1					
ANR	3923888	Callee	zend_is_auto_global		3923785	0					
ANR	3923889	Identifier	zend_is_auto_global		3923785	0					
ANR	3923890	ArgumentList	Z_STR ( name_node . u . constant )		3923785	1					
ANR	3923891	Argument	Z_STR ( name_node . u . constant )		3923785	0					
ANR	3923892	CallExpression	Z_STR ( name_node . u . constant )		3923785	0					
ANR	3923893	Callee	Z_STR		3923785	0					
ANR	3923894	Identifier	Z_STR		3923785	0					
ANR	3923895	ArgumentList	name_node . u . constant		3923785	1					
ANR	3923896	Argument	name_node . u . constant		3923785	0					
ANR	3923897	MemberAccess	name_node . u . constant		3923785	0					
ANR	3923898	MemberAccess	name_node . u		3923785	0					
ANR	3923899	Identifier	name_node		3923785	0					
ANR	3923900	Identifier	u		3923785	1					
ANR	3923901	Identifier	constant		3923785	1					
ANR	3923902	CompoundStatement		18:55:465:465	3923785	1					
ANR	3923903	ExpressionStatement	opline -> extended_value = ZEND_FETCH_GLOBAL	2208:2:63350:63392	3923785	0	True				
ANR	3923904	AssignmentExpression	opline -> extended_value = ZEND_FETCH_GLOBAL		3923785	0		=			
ANR	3923905	PtrMemberAccess	opline -> extended_value		3923785	0					
ANR	3923906	Identifier	opline		3923785	0					
ANR	3923907	Identifier	extended_value		3923785	1					
ANR	3923908	Identifier	ZEND_FETCH_GLOBAL		3923785	1					
ANR	3923909	ElseStatement	else		3923785	0					
ANR	3923910	CompoundStatement		21:8:522:522	3923785	0					
ANR	3923911	ExpressionStatement	opline -> extended_value = ZEND_FETCH_LOCAL	2210:2:63406:63447	3923785	0	True				
ANR	3923912	AssignmentExpression	opline -> extended_value = ZEND_FETCH_LOCAL		3923785	0		=			
ANR	3923913	PtrMemberAccess	opline -> extended_value		3923785	0					
ANR	3923914	Identifier	opline		3923785	0					
ANR	3923915	Identifier	extended_value		3923785	1					
ANR	3923916	Identifier	ZEND_FETCH_LOCAL		3923785	1					
ANR	3923917	IfStatement	if ( ast -> kind != ZEND_AST_ZVAL && CG ( active_op_array ) -> scope && CG ( active_op_array ) -> this_var == ( uint32_t ) - 1 )		3923785	1					
ANR	3923918	Condition	ast -> kind != ZEND_AST_ZVAL && CG ( active_op_array ) -> scope && CG ( active_op_array ) -> this_var == ( uint32_t ) - 1	2212:6:63508:63615	3923785	0	True				
ANR	3923919	AndExpression	ast -> kind != ZEND_AST_ZVAL && CG ( active_op_array ) -> scope && CG ( active_op_array ) -> this_var == ( uint32_t ) - 1		3923785	0		&&			
ANR	3923920	EqualityExpression	ast -> kind != ZEND_AST_ZVAL		3923785	0		!=			
ANR	3923921	PtrMemberAccess	ast -> kind		3923785	0					
ANR	3923922	Identifier	ast		3923785	0					
ANR	3923923	Identifier	kind		3923785	1					
ANR	3923924	Identifier	ZEND_AST_ZVAL		3923785	1					
ANR	3923925	AndExpression	CG ( active_op_array ) -> scope && CG ( active_op_array ) -> this_var == ( uint32_t ) - 1		3923785	1		&&			
ANR	3923926	PtrMemberAccess	CG ( active_op_array ) -> scope		3923785	0					
ANR	3923927	CallExpression	CG ( active_op_array )		3923785	0					
ANR	3923928	Callee	CG		3923785	0					
ANR	3923929	Identifier	CG		3923785	0					
ANR	3923930	ArgumentList	active_op_array		3923785	1					
ANR	3923931	Argument	active_op_array		3923785	0					
ANR	3923932	Identifier	active_op_array		3923785	0					
ANR	3923933	Identifier	scope		3923785	1					
ANR	3923934	EqualityExpression	CG ( active_op_array ) -> this_var == ( uint32_t ) - 1		3923785	1		==			
ANR	3923935	PtrMemberAccess	CG ( active_op_array ) -> this_var		3923785	0					
ANR	3923936	CallExpression	CG ( active_op_array )		3923785	0					
ANR	3923937	Callee	CG		3923785	0					
ANR	3923938	Identifier	CG		3923785	0					
ANR	3923939	ArgumentList	active_op_array		3923785	1					
ANR	3923940	Argument	active_op_array		3923785	0					
ANR	3923941	Identifier	active_op_array		3923785	0					
ANR	3923942	Identifier	this_var		3923785	1					
ANR	3923943	CastExpression	( uint32_t ) - 1		3923785	1					
ANR	3923944	CastTarget	uint32_t		3923785	0					
ANR	3923945	UnaryOperationExpression	- 1		3923785	1					
ANR	3923946	UnaryOperator	-		3923785	0					
ANR	3923947	PrimaryExpression	1		3923785	1					
ANR	3923948	CompoundStatement		27:3:746:812	3923785	1					
ANR	3923949	IdentifierDeclStatement	"zend_string * key = zend_string_init ( ""this"" , sizeof ( ""this"" ) - 1 , 0 ) ;"	2215:3:63626:63692	3923785	0	True				
ANR	3923950	IdentifierDecl	"* key = zend_string_init ( ""this"" , sizeof ( ""this"" ) - 1 , 0 )"		3923785	0					
ANR	3923951	IdentifierDeclType	zend_string *		3923785	0					
ANR	3923952	Identifier	key		3923785	1					
ANR	3923953	AssignmentExpression	"* key = zend_string_init ( ""this"" , sizeof ( ""this"" ) - 1 , 0 )"		3923785	2		=			
ANR	3923954	Identifier	key		3923785	0					
ANR	3923955	CallExpression	"zend_string_init ( ""this"" , sizeof ( ""this"" ) - 1 , 0 )"		3923785	1					
ANR	3923956	Callee	zend_string_init		3923785	0					
ANR	3923957	Identifier	zend_string_init		3923785	0					
ANR	3923958	ArgumentList	"""this"""		3923785	1					
ANR	3923959	Argument	"""this"""		3923785	0					
ANR	3923960	PrimaryExpression	"""this"""		3923785	0					
ANR	3923961	Argument	"sizeof ( ""this"" ) - 1"		3923785	1					
ANR	3923962	AdditiveExpression	"sizeof ( ""this"" ) - 1"		3923785	0		-			
ANR	3923963	SizeofExpression	"sizeof ( ""this"" )"		3923785	0					
ANR	3923964	Sizeof	sizeof		3923785	0					
ANR	3923965	PrimaryExpression	"""this"""		3923785	1					
ANR	3923966	PrimaryExpression	1		3923785	1					
ANR	3923967	Argument	0		3923785	2					
ANR	3923968	PrimaryExpression	0		3923785	0					
ANR	3923969	ExpressionStatement	"CG ( active_op_array ) -> this_var = lookup_cv ( CG ( active_op_array ) , key )"	2216:3:63697:63764	3923785	1	True				
ANR	3923970	AssignmentExpression	"CG ( active_op_array ) -> this_var = lookup_cv ( CG ( active_op_array ) , key )"		3923785	0		=			
ANR	3923971	PtrMemberAccess	CG ( active_op_array ) -> this_var		3923785	0					
ANR	3923972	CallExpression	CG ( active_op_array )		3923785	0					
ANR	3923973	Callee	CG		3923785	0					
ANR	3923974	Identifier	CG		3923785	0					
ANR	3923975	ArgumentList	active_op_array		3923785	1					
ANR	3923976	Argument	active_op_array		3923785	0					
ANR	3923977	Identifier	active_op_array		3923785	0					
ANR	3923978	Identifier	this_var		3923785	1					
ANR	3923979	CallExpression	"lookup_cv ( CG ( active_op_array ) , key )"		3923785	1					
ANR	3923980	Callee	lookup_cv		3923785	0					
ANR	3923981	Identifier	lookup_cv		3923785	0					
ANR	3923982	ArgumentList	CG ( active_op_array )		3923785	1					
ANR	3923983	Argument	CG ( active_op_array )		3923785	0					
ANR	3923984	CallExpression	CG ( active_op_array )		3923785	0					
ANR	3923985	Callee	CG		3923785	0					
ANR	3923986	Identifier	CG		3923785	0					
ANR	3923987	ArgumentList	active_op_array		3923785	1					
ANR	3923988	Argument	active_op_array		3923785	0					
ANR	3923989	Identifier	active_op_array		3923785	0					
ANR	3923990	Argument	key		3923785	1					
ANR	3923991	Identifier	key		3923785	0					
ANR	3923992	ReturnStatement	return opline ;	2220:1:63775:63788	3923785	7	True				
ANR	3923993	Identifier	opline		3923785	0					
ANR	3923994	ReturnType	static zend_op *		3923785	1					
ANR	3923995	Identifier	zend_compile_simple_var_no_cv		3923785	2					
ANR	3923996	ParameterList	"znode * result , zend_ast * ast , uint32_t type , int delayed"		3923785	3					
ANR	3923997	Parameter	znode * result	2188:46:62811:62823	3923785	0	True				
ANR	3923998	ParameterType	znode *		3923785	0					
ANR	3923999	Identifier	result		3923785	1					
ANR	3924000	Parameter	zend_ast * ast	2188:61:62826:62838	3923785	1	True				
ANR	3924001	ParameterType	zend_ast *		3923785	0					
ANR	3924002	Identifier	ast		3923785	1					
ANR	3924003	Parameter	uint32_t type	2188:76:62841:62853	3923785	2	True				
ANR	3924004	ParameterType	uint32_t		3923785	0					
ANR	3924005	Identifier	type		3923785	1					
ANR	3924006	Parameter	int delayed	2188:91:62856:62866	3923785	3	True				
ANR	3924007	ParameterType	int		3923785	0					
ANR	3924008	Identifier	delayed		3923785	1					
ANR	3924009	CFGEntryNode	ENTRY		3923785		True				
ANR	3924010	CFGExitNode	EXIT		3923785		True				
ANR	3924011	Symbol	ast -> kind		3923785						
ANR	3924012	Symbol	ast		3923785						
ANR	3924013	Symbol	lookup_cv		3923785						
ANR	3924014	Symbol	* CG		3923785						
ANR	3924015	Symbol	delayed		3923785						
ANR	3924016	Symbol	type		3923785						
ANR	3924017	Symbol	Z_STR		3923785						
ANR	3924018	Symbol	opline -> extended_value		3923785						
ANR	3924019	Symbol	result		3923785						
ANR	3924020	Symbol	zend_string_init		3923785						
ANR	3924021	Symbol	zend_delayed_emit_op		3923785						
ANR	3924022	Symbol	* ast		3923785						
ANR	3924023	Symbol	opline		3923785						
ANR	3924024	Symbol	& name_node		3923785						
ANR	3924025	Symbol	* * ast		3923785						
ANR	3924026	Symbol	CG ( active_op_array ) -> scope		3923785						
ANR	3924027	Symbol	ZEND_AST_ZVAL		3923785						
ANR	3924028	Symbol	key		3923785						
ANR	3924029	Symbol	ZEND_FETCH_GLOBAL		3923785						
ANR	3924030	Symbol	& name_node . u		3923785						
ANR	3924031	Symbol	IS_CONST		3923785						
ANR	3924032	Symbol	NULL		3923785						
ANR	3924033	Symbol	CG		3923785						
ANR	3924034	Symbol	active_op_array		3923785						
ANR	3924035	Symbol	zend_is_auto_global		3923785						
ANR	3924036	Symbol	ZEND_FETCH_R		3923785						
ANR	3924037	Symbol	ZEND_FETCH_LOCAL		3923785						
ANR	3924038	Symbol	name_node . u		3923785						
ANR	3924039	Symbol	CG ( active_op_array ) -> this_var		3923785						
ANR	3924040	Symbol	name_node . op_type		3923785						
ANR	3924041	Symbol	* opline		3923785						
ANR	3924042	Symbol	name_ast		3923785						
ANR	3924043	Symbol	& name_node . u . constant		3923785						
ANR	3924044	Symbol	* ast -> child		3923785						
ANR	3924045	Symbol	ast -> child		3923785						
ANR	3924046	Symbol	name_node		3923785						
ANR	3924047	Symbol	name_node . u . constant		3923785						
ANR	3924048	Symbol	zend_emit_op		3923785						
ANR	3924049	Function	zend_compile_simple_var	2224:0:63803:64087							
ANR	3924050	FunctionDef	"zend_compile_simple_var (znode * result , zend_ast * ast , uint32_t type , int delayed)"		3924049	0					
ANR	3924051	CompoundStatement		2225:0:63907:64087	3924049	0					
ANR	3924052	IfStatement	"if ( zend_try_compile_cv ( result , ast ) == FAILURE )"		3924049	0					
ANR	3924053	Condition	"zend_try_compile_cv ( result , ast ) == FAILURE"	2226:5:63914:63956	3924049	0	True				
ANR	3924054	EqualityExpression	"zend_try_compile_cv ( result , ast ) == FAILURE"		3924049	0		==			
ANR	3924055	CallExpression	"zend_try_compile_cv ( result , ast )"		3924049	0					
ANR	3924056	Callee	zend_try_compile_cv		3924049	0					
ANR	3924057	Identifier	zend_try_compile_cv		3924049	0					
ANR	3924058	ArgumentList	result		3924049	1					
ANR	3924059	Argument	result		3924049	0					
ANR	3924060	Identifier	result		3924049	0					
ANR	3924061	Argument	ast		3924049	1					
ANR	3924062	Identifier	ast		3924049	0					
ANR	3924063	Identifier	FAILURE		3924049	1					
ANR	3924064	CompoundStatement		3:2:55:130	3924049	1					
ANR	3924065	IdentifierDeclStatement	"zend_op * opline = zend_compile_simple_var_no_cv ( result , ast , type , delayed ) ;"	2227:2:63963:64038	3924049	0	True				
ANR	3924066	IdentifierDecl	"* opline = zend_compile_simple_var_no_cv ( result , ast , type , delayed )"		3924049	0					
ANR	3924067	IdentifierDeclType	zend_op *		3924049	0					
ANR	3924068	Identifier	opline		3924049	1					
ANR	3924069	AssignmentExpression	"* opline = zend_compile_simple_var_no_cv ( result , ast , type , delayed )"		3924049	2		=			
ANR	3924070	Identifier	opline		3924049	0					
ANR	3924071	CallExpression	"zend_compile_simple_var_no_cv ( result , ast , type , delayed )"		3924049	1					
ANR	3924072	Callee	zend_compile_simple_var_no_cv		3924049	0					
ANR	3924073	Identifier	zend_compile_simple_var_no_cv		3924049	0					
ANR	3924074	ArgumentList	result		3924049	1					
ANR	3924075	Argument	result		3924049	0					
ANR	3924076	Identifier	result		3924049	0					
ANR	3924077	Argument	ast		3924049	1					
ANR	3924078	Identifier	ast		3924049	0					
ANR	3924079	Argument	type		3924049	2					
ANR	3924080	Identifier	type		3924049	0					
ANR	3924081	Argument	delayed		3924049	3					
ANR	3924082	Identifier	delayed		3924049	0					
ANR	3924083	ExpressionStatement	"zend_adjust_for_fetch_type ( opline , type )"	2228:2:64042:64082	3924049	1	True				
ANR	3924084	CallExpression	"zend_adjust_for_fetch_type ( opline , type )"		3924049	0					
ANR	3924085	Callee	zend_adjust_for_fetch_type		3924049	0					
ANR	3924086	Identifier	zend_adjust_for_fetch_type		3924049	0					
ANR	3924087	ArgumentList	opline		3924049	1					
ANR	3924088	Argument	opline		3924049	0					
ANR	3924089	Identifier	opline		3924049	0					
ANR	3924090	Argument	type		3924049	1					
ANR	3924091	Identifier	type		3924049	0					
ANR	3924092	ReturnType	static void		3924049	1					
ANR	3924093	Identifier	zend_compile_simple_var		3924049	2					
ANR	3924094	ParameterList	"znode * result , zend_ast * ast , uint32_t type , int delayed"		3924049	3					
ANR	3924095	Parameter	znode * result	2224:36:63839:63851	3924049	0	True				
ANR	3924096	ParameterType	znode *		3924049	0					
ANR	3924097	Identifier	result		3924049	1					
ANR	3924098	Parameter	zend_ast * ast	2224:51:63854:63866	3924049	1	True				
ANR	3924099	ParameterType	zend_ast *		3924049	0					
ANR	3924100	Identifier	ast		3924049	1					
ANR	3924101	Parameter	uint32_t type	2224:66:63869:63881	3924049	2	True				
ANR	3924102	ParameterType	uint32_t		3924049	0					
ANR	3924103	Identifier	type		3924049	1					
ANR	3924104	Parameter	int delayed	2224:81:63884:63894	3924049	3	True				
ANR	3924105	ParameterType	int		3924049	0					
ANR	3924106	Identifier	delayed		3924049	1					
ANR	3924107	CFGEntryNode	ENTRY		3924049		True				
ANR	3924108	CFGExitNode	EXIT		3924049		True				
ANR	3924109	Symbol	result		3924049						
ANR	3924110	Symbol	ast		3924049						
ANR	3924111	Symbol	opline		3924049						
ANR	3924112	Symbol	delayed		3924049						
ANR	3924113	Symbol	type		3924049						
ANR	3924114	Symbol	FAILURE		3924049						
ANR	3924115	Symbol	zend_compile_simple_var_no_cv		3924049						
ANR	3924116	Symbol	zend_try_compile_cv		3924049						
ANR	3924117	Function	zend_separate_if_call_and_write	2233:0:64100:64559							
ANR	3924118	FunctionDef	"zend_separate_if_call_and_write (znode * node , zend_ast * ast , uint32_t type)"		3924117	0					
ANR	3924119	CompoundStatement		2234:0:64197:64559	3924117	0					
ANR	3924120	IfStatement	if ( type != BP_VAR_R && type != BP_VAR_IS && zend_is_call ( ast ) )		3924117	0					
ANR	3924121	Condition	type != BP_VAR_R && type != BP_VAR_IS && zend_is_call ( ast )	2235:5:64204:64261	3924117	0	True				
ANR	3924122	AndExpression	type != BP_VAR_R && type != BP_VAR_IS && zend_is_call ( ast )		3924117	0		&&			
ANR	3924123	EqualityExpression	type != BP_VAR_R		3924117	0		!=			
ANR	3924124	Identifier	type		3924117	0					
ANR	3924125	Identifier	BP_VAR_R		3924117	1					
ANR	3924126	AndExpression	type != BP_VAR_IS && zend_is_call ( ast )		3924117	1		&&			
ANR	3924127	EqualityExpression	type != BP_VAR_IS		3924117	0		!=			
ANR	3924128	Identifier	type		3924117	0					
ANR	3924129	Identifier	BP_VAR_IS		3924117	1					
ANR	3924130	CallExpression	zend_is_call ( ast )		3924117	1					
ANR	3924131	Callee	zend_is_call		3924117	0					
ANR	3924132	Identifier	zend_is_call		3924117	0					
ANR	3924133	ArgumentList	ast		3924117	1					
ANR	3924134	Argument	ast		3924117	0					
ANR	3924135	Identifier	ast		3924117	0					
ANR	3924136	CompoundStatement		2:65:66:66	3924117	1					
ANR	3924137	IfStatement	if ( node -> op_type == IS_VAR )		3924117	0					
ANR	3924138	Condition	node -> op_type == IS_VAR	2236:6:64272:64294	3924117	0	True				
ANR	3924139	EqualityExpression	node -> op_type == IS_VAR		3924117	0		==			
ANR	3924140	PtrMemberAccess	node -> op_type		3924117	0					
ANR	3924141	Identifier	node		3924117	0					
ANR	3924142	Identifier	op_type		3924117	1					
ANR	3924143	Identifier	IS_VAR		3924117	1					
ANR	3924144	CompoundStatement		4:3:104:167	3924117	1					
ANR	3924145	IdentifierDeclStatement	"zend_op * opline = zend_emit_op ( NULL , ZEND_SEPARATE , node , NULL ) ;"	2237:3:64302:64365	3924117	0	True				
ANR	3924146	IdentifierDecl	"* opline = zend_emit_op ( NULL , ZEND_SEPARATE , node , NULL )"		3924117	0					
ANR	3924147	IdentifierDeclType	zend_op *		3924117	0					
ANR	3924148	Identifier	opline		3924117	1					
ANR	3924149	AssignmentExpression	"* opline = zend_emit_op ( NULL , ZEND_SEPARATE , node , NULL )"		3924117	2		=			
ANR	3924150	Identifier	opline		3924117	0					
ANR	3924151	CallExpression	"zend_emit_op ( NULL , ZEND_SEPARATE , node , NULL )"		3924117	1					
ANR	3924152	Callee	zend_emit_op		3924117	0					
ANR	3924153	Identifier	zend_emit_op		3924117	0					
ANR	3924154	ArgumentList	NULL		3924117	1					
ANR	3924155	Argument	NULL		3924117	0					
ANR	3924156	Identifier	NULL		3924117	0					
ANR	3924157	Argument	ZEND_SEPARATE		3924117	1					
ANR	3924158	Identifier	ZEND_SEPARATE		3924117	0					
ANR	3924159	Argument	node		3924117	2					
ANR	3924160	Identifier	node		3924117	0					
ANR	3924161	Argument	NULL		3924117	3					
ANR	3924162	Identifier	NULL		3924117	0					
ANR	3924163	ExpressionStatement	opline -> result_type = IS_VAR	2238:3:64370:64398	3924117	1	True				
ANR	3924164	AssignmentExpression	opline -> result_type = IS_VAR		3924117	0		=			
ANR	3924165	PtrMemberAccess	opline -> result_type		3924117	0					
ANR	3924166	Identifier	opline		3924117	0					
ANR	3924167	Identifier	result_type		3924117	1					
ANR	3924168	Identifier	IS_VAR		3924117	1					
ANR	3924169	ExpressionStatement	opline -> result . var = opline -> op1 . var	2239:3:64403:64439	3924117	2	True				
ANR	3924170	AssignmentExpression	opline -> result . var = opline -> op1 . var		3924117	0		=			
ANR	3924171	MemberAccess	opline -> result . var		3924117	0					
ANR	3924172	PtrMemberAccess	opline -> result		3924117	0					
ANR	3924173	Identifier	opline		3924117	0					
ANR	3924174	Identifier	result		3924117	1					
ANR	3924175	Identifier	var		3924117	1					
ANR	3924176	MemberAccess	opline -> op1 . var		3924117	1					
ANR	3924177	PtrMemberAccess	opline -> op1		3924117	0					
ANR	3924178	Identifier	opline		3924117	0					
ANR	3924179	Identifier	op1		3924117	1					
ANR	3924180	Identifier	var		3924117	1					
ANR	3924181	ElseStatement	else		3924117	0					
ANR	3924182	CompoundStatement		7:9:252:252	3924117	0					
ANR	3924183	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use result of built-in function in write context"" )"	2241:3:64455:64550	3924117	0	True				
ANR	3924184	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use result of built-in function in write context"" )"		3924117	0					
ANR	3924185	Callee	zend_error_noreturn		3924117	0					
ANR	3924186	Identifier	zend_error_noreturn		3924117	0					
ANR	3924187	ArgumentList	E_COMPILE_ERROR		3924117	1					
ANR	3924188	Argument	E_COMPILE_ERROR		3924117	0					
ANR	3924189	Identifier	E_COMPILE_ERROR		3924117	0					
ANR	3924190	Argument	"""Cannot use result of built-in function in write context"""		3924117	1					
ANR	3924191	PrimaryExpression	"""Cannot use result of built-in function in write context"""		3924117	0					
ANR	3924192	ReturnType	static void		3924117	1					
ANR	3924193	Identifier	zend_separate_if_call_and_write		3924117	2					
ANR	3924194	ParameterList	"znode * node , zend_ast * ast , uint32_t type"		3924117	3					
ANR	3924195	Parameter	znode * node	2233:44:64144:64154	3924117	0	True				
ANR	3924196	ParameterType	znode *		3924117	0					
ANR	3924197	Identifier	node		3924117	1					
ANR	3924198	Parameter	zend_ast * ast	2233:57:64157:64169	3924117	1	True				
ANR	3924199	ParameterType	zend_ast *		3924117	0					
ANR	3924200	Identifier	ast		3924117	1					
ANR	3924201	Parameter	uint32_t type	2233:72:64172:64184	3924117	2	True				
ANR	3924202	ParameterType	uint32_t		3924117	0					
ANR	3924203	Identifier	type		3924117	1					
ANR	3924204	CFGEntryNode	ENTRY		3924117		True				
ANR	3924205	CFGExitNode	EXIT		3924117		True				
ANR	3924206	Symbol	opline -> result_type		3924117						
ANR	3924207	Symbol	opline -> op1		3924117						
ANR	3924208	Symbol	ast		3924117						
ANR	3924209	Symbol	NULL		3924117						
ANR	3924210	Symbol	zend_is_call		3924117						
ANR	3924211	Symbol	E_COMPILE_ERROR		3924117						
ANR	3924212	Symbol	type		3924117						
ANR	3924213	Symbol	opline -> result		3924117						
ANR	3924214	Symbol	node		3924117						
ANR	3924215	Symbol	opline		3924117						
ANR	3924216	Symbol	ZEND_SEPARATE		3924117						
ANR	3924217	Symbol	* opline		3924117						
ANR	3924218	Symbol	node -> op_type		3924117						
ANR	3924219	Symbol	* node		3924117						
ANR	3924220	Symbol	opline -> op1 . var		3924117						
ANR	3924221	Symbol	BP_VAR_IS		3924117						
ANR	3924222	Symbol	IS_VAR		3924117						
ANR	3924223	Symbol	BP_VAR_R		3924117						
ANR	3924224	Symbol	opline -> result . var		3924117						
ANR	3924225	Symbol	zend_emit_op		3924117						
ANR	3924226	DeclStmt									
ANR	3924227	Decl							void	"void ( znode * result , zend_ast * ast , uint32_t type )"	zend_delayed_compile_var
ANR	3924228	DeclStmt									
ANR	3924229	Decl							void	"void ( znode * result , zend_ast * ast )"	zend_compile_assign
ANR	3924230	DeclStmt									
ANR	3924231	Decl							void	"void ( znode * result , zend_ast * ast , znode * expr_node )"	zend_compile_list_assign
ANR	3924232	Function	zend_emit_assign_znode	2251:0:64791:65198							
ANR	3924233	FunctionDef	"zend_emit_assign_znode (zend_ast * var_ast , znode * value_node)"		3924232	0					
ANR	3924234	CompoundStatement		2252:0:64881:65198	3924232	0					
ANR	3924235	IdentifierDeclStatement	znode dummy_node ;	2253:1:64884:64900	3924232	0	True				
ANR	3924236	IdentifierDecl	dummy_node		3924232	0					
ANR	3924237	IdentifierDeclType	znode		3924232	0					
ANR	3924238	Identifier	dummy_node		3924232	1					
ANR	3924239	IfStatement	if ( var_ast -> kind == ZEND_AST_LIST )		3924232	1					
ANR	3924240	Condition	var_ast -> kind == ZEND_AST_LIST	2254:5:64907:64936	3924232	0	True				
ANR	3924241	EqualityExpression	var_ast -> kind == ZEND_AST_LIST		3924232	0		==			
ANR	3924242	PtrMemberAccess	var_ast -> kind		3924232	0					
ANR	3924243	Identifier	var_ast		3924232	0					
ANR	3924244	Identifier	kind		3924232	1					
ANR	3924245	Identifier	ZEND_AST_LIST		3924232	1					
ANR	3924246	CompoundStatement		3:37:57:57	3924232	1					
ANR	3924247	ExpressionStatement	"zend_compile_list_assign ( & dummy_node , var_ast , value_node )"	2255:2:64943:65001	3924232	0	True				
ANR	3924248	CallExpression	"zend_compile_list_assign ( & dummy_node , var_ast , value_node )"		3924232	0					
ANR	3924249	Callee	zend_compile_list_assign		3924232	0					
ANR	3924250	Identifier	zend_compile_list_assign		3924232	0					
ANR	3924251	ArgumentList	& dummy_node		3924232	1					
ANR	3924252	Argument	& dummy_node		3924232	0					
ANR	3924253	UnaryOperationExpression	& dummy_node		3924232	0					
ANR	3924254	UnaryOperator	&		3924232	0					
ANR	3924255	Identifier	dummy_node		3924232	1					
ANR	3924256	Argument	var_ast		3924232	1					
ANR	3924257	Identifier	var_ast		3924232	0					
ANR	3924258	Argument	value_node		3924232	2					
ANR	3924259	Identifier	value_node		3924232	0					
ANR	3924260	ElseStatement	else		3924232	0					
ANR	3924261	CompoundStatement		6:2:133:235	3924232	0					
ANR	3924262	IdentifierDeclStatement	"zend_ast * assign_ast = zend_ast_create ( ZEND_AST_ASSIGN , var_ast , zend_ast_create_znode ( value_node ) ) ;"	2257:2:65015:65117	3924232	0	True				
ANR	3924263	IdentifierDecl	"* assign_ast = zend_ast_create ( ZEND_AST_ASSIGN , var_ast , zend_ast_create_znode ( value_node ) )"		3924232	0					
ANR	3924264	IdentifierDeclType	zend_ast *		3924232	0					
ANR	3924265	Identifier	assign_ast		3924232	1					
ANR	3924266	AssignmentExpression	"* assign_ast = zend_ast_create ( ZEND_AST_ASSIGN , var_ast , zend_ast_create_znode ( value_node ) )"		3924232	2		=			
ANR	3924267	Identifier	assign_ast		3924232	0					
ANR	3924268	CallExpression	"zend_ast_create ( ZEND_AST_ASSIGN , var_ast , zend_ast_create_znode ( value_node ) )"		3924232	1					
ANR	3924269	Callee	zend_ast_create		3924232	0					
ANR	3924270	Identifier	zend_ast_create		3924232	0					
ANR	3924271	ArgumentList	ZEND_AST_ASSIGN		3924232	1					
ANR	3924272	Argument	ZEND_AST_ASSIGN		3924232	0					
ANR	3924273	Identifier	ZEND_AST_ASSIGN		3924232	0					
ANR	3924274	Argument	var_ast		3924232	1					
ANR	3924275	Identifier	var_ast		3924232	0					
ANR	3924276	Argument	zend_ast_create_znode ( value_node )		3924232	2					
ANR	3924277	CallExpression	zend_ast_create_znode ( value_node )		3924232	0					
ANR	3924278	Callee	zend_ast_create_znode		3924232	0					
ANR	3924279	Identifier	zend_ast_create_znode		3924232	0					
ANR	3924280	ArgumentList	value_node		3924232	1					
ANR	3924281	Argument	value_node		3924232	0					
ANR	3924282	Identifier	value_node		3924232	0					
ANR	3924283	ExpressionStatement	"zend_compile_assign ( & dummy_node , assign_ast )"	2259:2:65121:65165	3924232	1	True				
ANR	3924284	CallExpression	"zend_compile_assign ( & dummy_node , assign_ast )"		3924232	0					
ANR	3924285	Callee	zend_compile_assign		3924232	0					
ANR	3924286	Identifier	zend_compile_assign		3924232	0					
ANR	3924287	ArgumentList	& dummy_node		3924232	1					
ANR	3924288	Argument	& dummy_node		3924232	0					
ANR	3924289	UnaryOperationExpression	& dummy_node		3924232	0					
ANR	3924290	UnaryOperator	&		3924232	0					
ANR	3924291	Identifier	dummy_node		3924232	1					
ANR	3924292	Argument	assign_ast		3924232	1					
ANR	3924293	Identifier	assign_ast		3924232	0					
ANR	3924294	ExpressionStatement	zend_do_free ( & dummy_node )	2261:1:65171:65196	3924232	2	True				
ANR	3924295	CallExpression	zend_do_free ( & dummy_node )		3924232	0					
ANR	3924296	Callee	zend_do_free		3924232	0					
ANR	3924297	Identifier	zend_do_free		3924232	0					
ANR	3924298	ArgumentList	& dummy_node		3924232	1					
ANR	3924299	Argument	& dummy_node		3924232	0					
ANR	3924300	UnaryOperationExpression	& dummy_node		3924232	0					
ANR	3924301	UnaryOperator	&		3924232	0					
ANR	3924302	Identifier	dummy_node		3924232	1					
ANR	3924303	ReturnType	static inline void		3924232	1					
ANR	3924304	Identifier	zend_emit_assign_znode		3924232	2					
ANR	3924305	ParameterList	"zend_ast * var_ast , znode * value_node"		3924232	3					
ANR	3924306	Parameter	zend_ast * var_ast	2251:42:64833:64849	3924232	0	True				
ANR	3924307	ParameterType	zend_ast *		3924232	0					
ANR	3924308	Identifier	var_ast		3924232	1					
ANR	3924309	Parameter	znode * value_node	2251:61:64852:64868	3924232	1	True				
ANR	3924310	ParameterType	znode *		3924232	0					
ANR	3924311	Identifier	value_node		3924232	1					
ANR	3924312	CFGEntryNode	ENTRY		3924232		True				
ANR	3924313	CFGExitNode	EXIT		3924232		True				
ANR	3924314	Symbol	var_ast		3924232						
ANR	3924315	Symbol	zend_ast_create_znode		3924232						
ANR	3924316	Symbol	var_ast -> kind		3924232						
ANR	3924317	Symbol	ZEND_AST_LIST		3924232						
ANR	3924318	Symbol	assign_ast		3924232						
ANR	3924319	Symbol	zend_ast_create		3924232						
ANR	3924320	Symbol	value_node		3924232						
ANR	3924321	Symbol	& dummy_node		3924232						
ANR	3924322	Symbol	ZEND_AST_ASSIGN		3924232						
ANR	3924323	Symbol	* var_ast		3924232						
ANR	3924324	Symbol	dummy_node		3924232						
ANR	3924325	Function	zend_delayed_compile_dim	2265:0:65211:65977							
ANR	3924326	FunctionDef	"zend_delayed_compile_dim (znode * result , zend_ast * ast , uint32_t type)"		3924325	0					
ANR	3924327	CompoundStatement		2266:0:65307:65977	3924325	0					
ANR	3924328	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	2267:1:65310:65343	3924325	0	True				
ANR	3924329	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3924325	0					
ANR	3924330	IdentifierDeclType	zend_ast *		3924325	0					
ANR	3924331	Identifier	var_ast		3924325	1					
ANR	3924332	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3924325	2		=			
ANR	3924333	Identifier	var_ast		3924325	0					
ANR	3924334	ArrayIndexing	ast -> child [ 0 ]		3924325	1					
ANR	3924335	PtrMemberAccess	ast -> child		3924325	0					
ANR	3924336	Identifier	ast		3924325	0					
ANR	3924337	Identifier	child		3924325	1					
ANR	3924338	PrimaryExpression	0		3924325	1					
ANR	3924339	IdentifierDeclStatement	zend_ast * dim_ast = ast -> child [ 1 ] ;	2268:1:65346:65379	3924325	1	True				
ANR	3924340	IdentifierDecl	* dim_ast = ast -> child [ 1 ]		3924325	0					
ANR	3924341	IdentifierDeclType	zend_ast *		3924325	0					
ANR	3924342	Identifier	dim_ast		3924325	1					
ANR	3924343	AssignmentExpression	* dim_ast = ast -> child [ 1 ]		3924325	2		=			
ANR	3924344	Identifier	dim_ast		3924325	0					
ANR	3924345	ArrayIndexing	ast -> child [ 1 ]		3924325	1					
ANR	3924346	PtrMemberAccess	ast -> child		3924325	0					
ANR	3924347	Identifier	ast		3924325	0					
ANR	3924348	Identifier	child		3924325	1					
ANR	3924349	PrimaryExpression	1		3924325	1					
ANR	3924350	IdentifierDeclStatement	"znode var_node , dim_node ;"	2270:1:65383:65407	3924325	2	True				
ANR	3924351	IdentifierDecl	var_node		3924325	0					
ANR	3924352	IdentifierDeclType	znode		3924325	0					
ANR	3924353	Identifier	var_node		3924325	1					
ANR	3924354	IdentifierDecl	dim_node		3924325	1					
ANR	3924355	IdentifierDeclType	znode		3924325	0					
ANR	3924356	Identifier	dim_node		3924325	1					
ANR	3924357	ExpressionStatement	"zend_delayed_compile_var ( & var_node , var_ast , type )"	2272:1:65411:65461	3924325	3	True				
ANR	3924358	CallExpression	"zend_delayed_compile_var ( & var_node , var_ast , type )"		3924325	0					
ANR	3924359	Callee	zend_delayed_compile_var		3924325	0					
ANR	3924360	Identifier	zend_delayed_compile_var		3924325	0					
ANR	3924361	ArgumentList	& var_node		3924325	1					
ANR	3924362	Argument	& var_node		3924325	0					
ANR	3924363	UnaryOperationExpression	& var_node		3924325	0					
ANR	3924364	UnaryOperator	&		3924325	0					
ANR	3924365	Identifier	var_node		3924325	1					
ANR	3924366	Argument	var_ast		3924325	1					
ANR	3924367	Identifier	var_ast		3924325	0					
ANR	3924368	Argument	type		3924325	2					
ANR	3924369	Identifier	type		3924325	0					
ANR	3924370	ExpressionStatement	"zend_separate_if_call_and_write ( & var_node , var_ast , type )"	2273:1:65464:65521	3924325	4	True				
ANR	3924371	CallExpression	"zend_separate_if_call_and_write ( & var_node , var_ast , type )"		3924325	0					
ANR	3924372	Callee	zend_separate_if_call_and_write		3924325	0					
ANR	3924373	Identifier	zend_separate_if_call_and_write		3924325	0					
ANR	3924374	ArgumentList	& var_node		3924325	1					
ANR	3924375	Argument	& var_node		3924325	0					
ANR	3924376	UnaryOperationExpression	& var_node		3924325	0					
ANR	3924377	UnaryOperator	&		3924325	0					
ANR	3924378	Identifier	var_node		3924325	1					
ANR	3924379	Argument	var_ast		3924325	1					
ANR	3924380	Identifier	var_ast		3924325	0					
ANR	3924381	Argument	type		3924325	2					
ANR	3924382	Identifier	type		3924325	0					
ANR	3924383	IfStatement	if ( dim_ast == NULL )		3924325	5					
ANR	3924384	Condition	dim_ast == NULL	2275:5:65529:65543	3924325	0	True				
ANR	3924385	EqualityExpression	dim_ast == NULL		3924325	0		==			
ANR	3924386	Identifier	dim_ast		3924325	0					
ANR	3924387	Identifier	NULL		3924325	1					
ANR	3924388	CompoundStatement		10:22:238:238	3924325	1					
ANR	3924389	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		3924325	0					
ANR	3924390	Condition	type == BP_VAR_R || type == BP_VAR_IS	2276:6:65554:65590	3924325	0	True				
ANR	3924391	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		3924325	0		||			
ANR	3924392	EqualityExpression	type == BP_VAR_R		3924325	0		==			
ANR	3924393	Identifier	type		3924325	0					
ANR	3924394	Identifier	BP_VAR_R		3924325	1					
ANR	3924395	EqualityExpression	type == BP_VAR_IS		3924325	1		==			
ANR	3924396	Identifier	type		3924325	0					
ANR	3924397	Identifier	BP_VAR_IS		3924325	1					
ANR	3924398	CompoundStatement		11:45:285:285	3924325	1					
ANR	3924399	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use [] for reading"" )"	2277:3:65598:65663	3924325	0	True				
ANR	3924400	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use [] for reading"" )"		3924325	0					
ANR	3924401	Callee	zend_error_noreturn		3924325	0					
ANR	3924402	Identifier	zend_error_noreturn		3924325	0					
ANR	3924403	ArgumentList	E_COMPILE_ERROR		3924325	1					
ANR	3924404	Argument	E_COMPILE_ERROR		3924325	0					
ANR	3924405	Identifier	E_COMPILE_ERROR		3924325	0					
ANR	3924406	Argument	"""Cannot use [] for reading"""		3924325	1					
ANR	3924407	PrimaryExpression	"""Cannot use [] for reading"""		3924325	0					
ANR	3924408	IfStatement	if ( type == BP_VAR_UNSET )		3924325	1					
ANR	3924409	Condition	type == BP_VAR_UNSET	2279:6:65675:65694	3924325	0	True				
ANR	3924410	EqualityExpression	type == BP_VAR_UNSET		3924325	0		==			
ANR	3924411	Identifier	type		3924325	0					
ANR	3924412	Identifier	BP_VAR_UNSET		3924325	1					
ANR	3924413	CompoundStatement		14:28:389:389	3924325	1					
ANR	3924414	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use [] for unsetting"" )"	2280:3:65702:65769	3924325	0	True				
ANR	3924415	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use [] for unsetting"" )"		3924325	0					
ANR	3924416	Callee	zend_error_noreturn		3924325	0					
ANR	3924417	Identifier	zend_error_noreturn		3924325	0					
ANR	3924418	ArgumentList	E_COMPILE_ERROR		3924325	1					
ANR	3924419	Argument	E_COMPILE_ERROR		3924325	0					
ANR	3924420	Identifier	E_COMPILE_ERROR		3924325	0					
ANR	3924421	Argument	"""Cannot use [] for unsetting"""		3924325	1					
ANR	3924422	PrimaryExpression	"""Cannot use [] for unsetting"""		3924325	0					
ANR	3924423	ExpressionStatement	dim_node . op_type = IS_UNUSED	2282:2:65777:65805	3924325	2	True				
ANR	3924424	AssignmentExpression	dim_node . op_type = IS_UNUSED		3924325	0		=			
ANR	3924425	MemberAccess	dim_node . op_type		3924325	0					
ANR	3924426	Identifier	dim_node		3924325	0					
ANR	3924427	Identifier	op_type		3924325	1					
ANR	3924428	Identifier	IS_UNUSED		3924325	1					
ANR	3924429	ElseStatement	else		3924325	0					
ANR	3924430	CompoundStatement		18:8:507:507	3924325	0					
ANR	3924431	ExpressionStatement	"zend_compile_expr ( & dim_node , dim_ast )"	2284:2:65819:65856	3924325	0	True				
ANR	3924432	CallExpression	"zend_compile_expr ( & dim_node , dim_ast )"		3924325	0					
ANR	3924433	Callee	zend_compile_expr		3924325	0					
ANR	3924434	Identifier	zend_compile_expr		3924325	0					
ANR	3924435	ArgumentList	& dim_node		3924325	1					
ANR	3924436	Argument	& dim_node		3924325	0					
ANR	3924437	UnaryOperationExpression	& dim_node		3924325	0					
ANR	3924438	UnaryOperator	&		3924325	0					
ANR	3924439	Identifier	dim_node		3924325	1					
ANR	3924440	Argument	dim_ast		3924325	1					
ANR	3924441	Identifier	dim_ast		3924325	0					
ANR	3924442	ExpressionStatement	zend_handle_numeric_op ( & dim_node )	2285:2:65860:65893	3924325	1	True				
ANR	3924443	CallExpression	zend_handle_numeric_op ( & dim_node )		3924325	0					
ANR	3924444	Callee	zend_handle_numeric_op		3924325	0					
ANR	3924445	Identifier	zend_handle_numeric_op		3924325	0					
ANR	3924446	ArgumentList	& dim_node		3924325	1					
ANR	3924447	Argument	& dim_node		3924325	0					
ANR	3924448	UnaryOperationExpression	& dim_node		3924325	0					
ANR	3924449	UnaryOperator	&		3924325	0					
ANR	3924450	Identifier	dim_node		3924325	1					
ANR	3924451	ReturnStatement	"return zend_delayed_emit_op ( result , ZEND_FETCH_DIM_R , & var_node , & dim_node ) ;"	2288:1:65900:65975	3924325	6	True				
ANR	3924452	CallExpression	"zend_delayed_emit_op ( result , ZEND_FETCH_DIM_R , & var_node , & dim_node )"		3924325	0					
ANR	3924453	Callee	zend_delayed_emit_op		3924325	0					
ANR	3924454	Identifier	zend_delayed_emit_op		3924325	0					
ANR	3924455	ArgumentList	result		3924325	1					
ANR	3924456	Argument	result		3924325	0					
ANR	3924457	Identifier	result		3924325	0					
ANR	3924458	Argument	ZEND_FETCH_DIM_R		3924325	1					
ANR	3924459	Identifier	ZEND_FETCH_DIM_R		3924325	0					
ANR	3924460	Argument	& var_node		3924325	2					
ANR	3924461	UnaryOperationExpression	& var_node		3924325	0					
ANR	3924462	UnaryOperator	&		3924325	0					
ANR	3924463	Identifier	var_node		3924325	1					
ANR	3924464	Argument	& dim_node		3924325	3					
ANR	3924465	UnaryOperationExpression	& dim_node		3924325	0					
ANR	3924466	UnaryOperator	&		3924325	0					
ANR	3924467	Identifier	dim_node		3924325	1					
ANR	3924468	ReturnType	static zend_op *		3924325	1					
ANR	3924469	Identifier	zend_delayed_compile_dim		3924325	2					
ANR	3924470	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3924325	3					
ANR	3924471	Parameter	znode * result	2265:41:65252:65264	3924325	0	True				
ANR	3924472	ParameterType	znode *		3924325	0					
ANR	3924473	Identifier	result		3924325	1					
ANR	3924474	Parameter	zend_ast * ast	2265:56:65267:65279	3924325	1	True				
ANR	3924475	ParameterType	zend_ast *		3924325	0					
ANR	3924476	Identifier	ast		3924325	1					
ANR	3924477	Parameter	uint32_t type	2265:71:65282:65294	3924325	2	True				
ANR	3924478	ParameterType	uint32_t		3924325	0					
ANR	3924479	Identifier	type		3924325	1					
ANR	3924480	CFGEntryNode	ENTRY		3924325		True				
ANR	3924481	CFGExitNode	EXIT		3924325		True				
ANR	3924482	Symbol	ast		3924325						
ANR	3924483	Symbol	dim_ast		3924325						
ANR	3924484	Symbol	NULL		3924325						
ANR	3924485	Symbol	var_node		3924325						
ANR	3924486	Symbol	& var_node		3924325						
ANR	3924487	Symbol	E_COMPILE_ERROR		3924325						
ANR	3924488	Symbol	dim_node		3924325						
ANR	3924489	Symbol	type		3924325						
ANR	3924490	Symbol	result		3924325						
ANR	3924491	Symbol	dim_node . op_type		3924325						
ANR	3924492	Symbol	var_ast		3924325						
ANR	3924493	Symbol	zend_delayed_emit_op		3924325						
ANR	3924494	Symbol	* ast		3924325						
ANR	3924495	Symbol	& dim_node		3924325						
ANR	3924496	Symbol	* * ast		3924325						
ANR	3924497	Symbol	ZEND_FETCH_DIM_R		3924325						
ANR	3924498	Symbol	* ast -> child		3924325						
ANR	3924499	Symbol	ast -> child		3924325						
ANR	3924500	Symbol	BP_VAR_IS		3924325						
ANR	3924501	Symbol	BP_VAR_UNSET		3924325						
ANR	3924502	Symbol	BP_VAR_R		3924325						
ANR	3924503	Symbol	IS_UNUSED		3924325						
ANR	3924504	Function	zend_compile_dim_common	2292:0:65990:66231							
ANR	3924505	FunctionDef	"zend_compile_dim_common (znode * result , zend_ast * ast , uint32_t type)"		3924504	0					
ANR	3924506	CompoundStatement		2293:0:66092:66231	3924504	0					
ANR	3924507	IdentifierDeclStatement	uint32_t offset = zend_delayed_compile_begin ( ) ;	2294:1:66095:66141	3924504	0	True				
ANR	3924508	IdentifierDecl	offset = zend_delayed_compile_begin ( )		3924504	0					
ANR	3924509	IdentifierDeclType	uint32_t		3924504	0					
ANR	3924510	Identifier	offset		3924504	1					
ANR	3924511	AssignmentExpression	offset = zend_delayed_compile_begin ( )		3924504	2		=			
ANR	3924512	Identifier	offset		3924504	0					
ANR	3924513	CallExpression	zend_delayed_compile_begin ( )		3924504	1					
ANR	3924514	Callee	zend_delayed_compile_begin		3924504	0					
ANR	3924515	Identifier	zend_delayed_compile_begin		3924504	0					
ANR	3924516	ArgumentList			3924504	1					
ANR	3924517	ExpressionStatement	"zend_delayed_compile_dim ( result , ast , type )"	2295:1:66144:66187	3924504	1	True				
ANR	3924518	CallExpression	"zend_delayed_compile_dim ( result , ast , type )"		3924504	0					
ANR	3924519	Callee	zend_delayed_compile_dim		3924504	0					
ANR	3924520	Identifier	zend_delayed_compile_dim		3924504	0					
ANR	3924521	ArgumentList	result		3924504	1					
ANR	3924522	Argument	result		3924504	0					
ANR	3924523	Identifier	result		3924504	0					
ANR	3924524	Argument	ast		3924504	1					
ANR	3924525	Identifier	ast		3924504	0					
ANR	3924526	Argument	type		3924504	2					
ANR	3924527	Identifier	type		3924504	0					
ANR	3924528	ReturnStatement	return zend_delayed_compile_end ( offset ) ;	2296:1:66190:66229	3924504	2	True				
ANR	3924529	CallExpression	zend_delayed_compile_end ( offset )		3924504	0					
ANR	3924530	Callee	zend_delayed_compile_end		3924504	0					
ANR	3924531	Identifier	zend_delayed_compile_end		3924504	0					
ANR	3924532	ArgumentList	offset		3924504	1					
ANR	3924533	Argument	offset		3924504	0					
ANR	3924534	Identifier	offset		3924504	0					
ANR	3924535	ReturnType	static inline zend_op *		3924504	1					
ANR	3924536	Identifier	zend_compile_dim_common		3924504	2					
ANR	3924537	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3924504	3					
ANR	3924538	Parameter	znode * result	2292:47:66037:66049	3924504	0	True				
ANR	3924539	ParameterType	znode *		3924504	0					
ANR	3924540	Identifier	result		3924504	1					
ANR	3924541	Parameter	zend_ast * ast	2292:62:66052:66064	3924504	1	True				
ANR	3924542	ParameterType	zend_ast *		3924504	0					
ANR	3924543	Identifier	ast		3924504	1					
ANR	3924544	Parameter	uint32_t type	2292:77:66067:66079	3924504	2	True				
ANR	3924545	ParameterType	uint32_t		3924504	0					
ANR	3924546	Identifier	type		3924504	1					
ANR	3924547	CFGEntryNode	ENTRY		3924504		True				
ANR	3924548	CFGExitNode	EXIT		3924504		True				
ANR	3924549	Symbol	result		3924504						
ANR	3924550	Symbol	zend_delayed_compile_end		3924504						
ANR	3924551	Symbol	ast		3924504						
ANR	3924552	Symbol	zend_delayed_compile_begin		3924504						
ANR	3924553	Symbol	offset		3924504						
ANR	3924554	Symbol	type		3924504						
ANR	3924555	Function	zend_compile_dim	2300:0:66244:66429							
ANR	3924556	FunctionDef	"zend_compile_dim (znode * result , zend_ast * ast , uint32_t type)"		3924555	0					
ANR	3924557	CompoundStatement		2301:0:66321:66429	3924555	0					
ANR	3924558	IdentifierDeclStatement	"zend_op * opline = zend_compile_dim_common ( result , ast , type ) ;"	2302:1:66324:66384	3924555	0	True				
ANR	3924559	IdentifierDecl	"* opline = zend_compile_dim_common ( result , ast , type )"		3924555	0					
ANR	3924560	IdentifierDeclType	zend_op *		3924555	0					
ANR	3924561	Identifier	opline		3924555	1					
ANR	3924562	AssignmentExpression	"* opline = zend_compile_dim_common ( result , ast , type )"		3924555	2		=			
ANR	3924563	Identifier	opline		3924555	0					
ANR	3924564	CallExpression	"zend_compile_dim_common ( result , ast , type )"		3924555	1					
ANR	3924565	Callee	zend_compile_dim_common		3924555	0					
ANR	3924566	Identifier	zend_compile_dim_common		3924555	0					
ANR	3924567	ArgumentList	result		3924555	1					
ANR	3924568	Argument	result		3924555	0					
ANR	3924569	Identifier	result		3924555	0					
ANR	3924570	Argument	ast		3924555	1					
ANR	3924571	Identifier	ast		3924555	0					
ANR	3924572	Argument	type		3924555	2					
ANR	3924573	Identifier	type		3924555	0					
ANR	3924574	ExpressionStatement	"zend_adjust_for_fetch_type ( opline , type )"	2303:1:66387:66427	3924555	1	True				
ANR	3924575	CallExpression	"zend_adjust_for_fetch_type ( opline , type )"		3924555	0					
ANR	3924576	Callee	zend_adjust_for_fetch_type		3924555	0					
ANR	3924577	Identifier	zend_adjust_for_fetch_type		3924555	0					
ANR	3924578	ArgumentList	opline		3924555	1					
ANR	3924579	Argument	opline		3924555	0					
ANR	3924580	Identifier	opline		3924555	0					
ANR	3924581	Argument	type		3924555	1					
ANR	3924582	Identifier	type		3924555	0					
ANR	3924583	ReturnType	void		3924555	1					
ANR	3924584	Identifier	zend_compile_dim		3924555	2					
ANR	3924585	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3924555	3					
ANR	3924586	Parameter	znode * result	2300:22:66266:66278	3924555	0	True				
ANR	3924587	ParameterType	znode *		3924555	0					
ANR	3924588	Identifier	result		3924555	1					
ANR	3924589	Parameter	zend_ast * ast	2300:37:66281:66293	3924555	1	True				
ANR	3924590	ParameterType	zend_ast *		3924555	0					
ANR	3924591	Identifier	ast		3924555	1					
ANR	3924592	Parameter	uint32_t type	2300:52:66296:66308	3924555	2	True				
ANR	3924593	ParameterType	uint32_t		3924555	0					
ANR	3924594	Identifier	type		3924555	1					
ANR	3924595	CFGEntryNode	ENTRY		3924555		True				
ANR	3924596	CFGExitNode	EXIT		3924555		True				
ANR	3924597	Symbol	result		3924555						
ANR	3924598	Symbol	ast		3924555						
ANR	3924599	Symbol	opline		3924555						
ANR	3924600	Symbol	type		3924555						
ANR	3924601	Symbol	zend_compile_dim_common		3924555						
ANR	3924602	Function	is_this_fetch	2307:0:66442:66729							
ANR	3924603	FunctionDef	is_this_fetch (zend_ast * ast)		3924602	0					
ANR	3924604	CompoundStatement		2308:0:66498:66729	3924602	0					
ANR	3924605	IfStatement	if ( ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL )		3924602	0					
ANR	3924606	Condition	ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL	2309:5:66505:66569	3924602	0	True				
ANR	3924607	AndExpression	ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		3924602	0		&&			
ANR	3924608	EqualityExpression	ast -> kind == ZEND_AST_VAR		3924602	0		==			
ANR	3924609	PtrMemberAccess	ast -> kind		3924602	0					
ANR	3924610	Identifier	ast		3924602	0					
ANR	3924611	Identifier	kind		3924602	1					
ANR	3924612	Identifier	ZEND_AST_VAR		3924602	1					
ANR	3924613	EqualityExpression	ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		3924602	1		==			
ANR	3924614	PtrMemberAccess	ast -> child [ 0 ] -> kind		3924602	0					
ANR	3924615	ArrayIndexing	ast -> child [ 0 ]		3924602	0					
ANR	3924616	PtrMemberAccess	ast -> child		3924602	0					
ANR	3924617	Identifier	ast		3924602	0					
ANR	3924618	Identifier	child		3924602	1					
ANR	3924619	PrimaryExpression	0		3924602	1					
ANR	3924620	Identifier	kind		3924602	1					
ANR	3924621	Identifier	ZEND_AST_ZVAL		3924602	1					
ANR	3924622	CompoundStatement		3:2:77:122	3924602	1					
ANR	3924623	IdentifierDeclStatement	zval * name = zend_ast_get_zval ( ast -> child [ 0 ] ) ;	2310:2:66576:66621	3924602	0	True				
ANR	3924624	IdentifierDecl	* name = zend_ast_get_zval ( ast -> child [ 0 ] )		3924602	0					
ANR	3924625	IdentifierDeclType	zval *		3924602	0					
ANR	3924626	Identifier	name		3924602	1					
ANR	3924627	AssignmentExpression	* name = zend_ast_get_zval ( ast -> child [ 0 ] )		3924602	2		=			
ANR	3924628	Identifier	name		3924602	0					
ANR	3924629	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3924602	1					
ANR	3924630	Callee	zend_ast_get_zval		3924602	0					
ANR	3924631	Identifier	zend_ast_get_zval		3924602	0					
ANR	3924632	ArgumentList	ast -> child [ 0 ]		3924602	1					
ANR	3924633	Argument	ast -> child [ 0 ]		3924602	0					
ANR	3924634	ArrayIndexing	ast -> child [ 0 ]		3924602	0					
ANR	3924635	PtrMemberAccess	ast -> child		3924602	0					
ANR	3924636	Identifier	ast		3924602	0					
ANR	3924637	Identifier	child		3924602	1					
ANR	3924638	PrimaryExpression	0		3924602	1					
ANR	3924639	ReturnStatement	"return Z_TYPE_P ( name ) == IS_STRING && zend_string_equals_literal ( Z_STR_P ( name ) , ""this"" ) ;"	2311:2:66625:66712	3924602	1	True				
ANR	3924640	AndExpression	"Z_TYPE_P ( name ) == IS_STRING && zend_string_equals_literal ( Z_STR_P ( name ) , ""this"" )"		3924602	0		&&			
ANR	3924641	EqualityExpression	Z_TYPE_P ( name ) == IS_STRING		3924602	0		==			
ANR	3924642	CallExpression	Z_TYPE_P ( name )		3924602	0					
ANR	3924643	Callee	Z_TYPE_P		3924602	0					
ANR	3924644	Identifier	Z_TYPE_P		3924602	0					
ANR	3924645	ArgumentList	name		3924602	1					
ANR	3924646	Argument	name		3924602	0					
ANR	3924647	Identifier	name		3924602	0					
ANR	3924648	Identifier	IS_STRING		3924602	1					
ANR	3924649	CallExpression	"zend_string_equals_literal ( Z_STR_P ( name ) , ""this"" )"		3924602	1					
ANR	3924650	Callee	zend_string_equals_literal		3924602	0					
ANR	3924651	Identifier	zend_string_equals_literal		3924602	0					
ANR	3924652	ArgumentList	Z_STR_P ( name )		3924602	1					
ANR	3924653	Argument	Z_STR_P ( name )		3924602	0					
ANR	3924654	CallExpression	Z_STR_P ( name )		3924602	0					
ANR	3924655	Callee	Z_STR_P		3924602	0					
ANR	3924656	Identifier	Z_STR_P		3924602	0					
ANR	3924657	ArgumentList	name		3924602	1					
ANR	3924658	Argument	name		3924602	0					
ANR	3924659	Identifier	name		3924602	0					
ANR	3924660	Argument	"""this"""		3924602	1					
ANR	3924661	PrimaryExpression	"""this"""		3924602	0					
ANR	3924662	ReturnStatement	return 0 ;	2314:1:66719:66727	3924602	1	True				
ANR	3924663	PrimaryExpression	0		3924602	0					
ANR	3924664	ReturnType	static zend_bool		3924602	1					
ANR	3924665	Identifier	is_this_fetch		3924602	2					
ANR	3924666	ParameterList	zend_ast * ast		3924602	3					
ANR	3924667	Parameter	zend_ast * ast	2307:31:66473:66485	3924602	0	True				
ANR	3924668	ParameterType	zend_ast *		3924602	0					
ANR	3924669	Identifier	ast		3924602	1					
ANR	3924670	CFGEntryNode	ENTRY		3924602		True				
ANR	3924671	CFGExitNode	EXIT		3924602		True				
ANR	3924672	Symbol	* * * ast		3924602						
ANR	3924673	Symbol	* * ast -> child		3924602						
ANR	3924674	Symbol	zend_string_equals_literal		3924602						
ANR	3924675	Symbol	ast -> kind		3924602						
ANR	3924676	Symbol	ast		3924602						
ANR	3924677	Symbol	ast -> child [ 0 ] -> kind		3924602						
ANR	3924678	Symbol	Z_TYPE_P		3924602						
ANR	3924679	Symbol	* ast		3924602						
ANR	3924680	Symbol	ZEND_AST_VAR		3924602						
ANR	3924681	Symbol	* * ast		3924602						
ANR	3924682	Symbol	ZEND_AST_ZVAL		3924602						
ANR	3924683	Symbol	name		3924602						
ANR	3924684	Symbol	* ast -> child		3924602						
ANR	3924685	Symbol	IS_STRING		3924602						
ANR	3924686	Symbol	Z_STR_P		3924602						
ANR	3924687	Symbol	ast -> child		3924602						
ANR	3924688	Symbol	zend_ast_get_zval		3924602						
ANR	3924689	Function	zend_delayed_compile_prop	2318:0:66742:67440							
ANR	3924690	FunctionDef	"zend_delayed_compile_prop (znode * result , zend_ast * ast , uint32_t type)"		3924689	0					
ANR	3924691	CompoundStatement		2319:0:66839:67440	3924689	0					
ANR	3924692	IdentifierDeclStatement	zend_ast * obj_ast = ast -> child [ 0 ] ;	2320:1:66842:66875	3924689	0	True				
ANR	3924693	IdentifierDecl	* obj_ast = ast -> child [ 0 ]		3924689	0					
ANR	3924694	IdentifierDeclType	zend_ast *		3924689	0					
ANR	3924695	Identifier	obj_ast		3924689	1					
ANR	3924696	AssignmentExpression	* obj_ast = ast -> child [ 0 ]		3924689	2		=			
ANR	3924697	Identifier	obj_ast		3924689	0					
ANR	3924698	ArrayIndexing	ast -> child [ 0 ]		3924689	1					
ANR	3924699	PtrMemberAccess	ast -> child		3924689	0					
ANR	3924700	Identifier	ast		3924689	0					
ANR	3924701	Identifier	child		3924689	1					
ANR	3924702	PrimaryExpression	0		3924689	1					
ANR	3924703	IdentifierDeclStatement	zend_ast * prop_ast = ast -> child [ 1 ] ;	2321:1:66878:66912	3924689	1	True				
ANR	3924704	IdentifierDecl	* prop_ast = ast -> child [ 1 ]		3924689	0					
ANR	3924705	IdentifierDeclType	zend_ast *		3924689	0					
ANR	3924706	Identifier	prop_ast		3924689	1					
ANR	3924707	AssignmentExpression	* prop_ast = ast -> child [ 1 ]		3924689	2		=			
ANR	3924708	Identifier	prop_ast		3924689	0					
ANR	3924709	ArrayIndexing	ast -> child [ 1 ]		3924689	1					
ANR	3924710	PtrMemberAccess	ast -> child		3924689	0					
ANR	3924711	Identifier	ast		3924689	0					
ANR	3924712	Identifier	child		3924689	1					
ANR	3924713	PrimaryExpression	1		3924689	1					
ANR	3924714	IdentifierDeclStatement	"znode obj_node , prop_node ;"	2323:1:66916:66941	3924689	2	True				
ANR	3924715	IdentifierDecl	obj_node		3924689	0					
ANR	3924716	IdentifierDeclType	znode		3924689	0					
ANR	3924717	Identifier	obj_node		3924689	1					
ANR	3924718	IdentifierDecl	prop_node		3924689	1					
ANR	3924719	IdentifierDeclType	znode		3924689	0					
ANR	3924720	Identifier	prop_node		3924689	1					
ANR	3924721	IdentifierDeclStatement	zend_op * opline ;	2324:1:66944:66959	3924689	3	True				
ANR	3924722	IdentifierDecl	* opline		3924689	0					
ANR	3924723	IdentifierDeclType	zend_op *		3924689	0					
ANR	3924724	Identifier	opline		3924689	1					
ANR	3924725	IfStatement	if ( is_this_fetch ( obj_ast ) )		3924689	4					
ANR	3924726	Condition	is_this_fetch ( obj_ast )	2326:5:66967:66988	3924689	0	True				
ANR	3924727	CallExpression	is_this_fetch ( obj_ast )		3924689	0					
ANR	3924728	Callee	is_this_fetch		3924689	0					
ANR	3924729	Identifier	is_this_fetch		3924689	0					
ANR	3924730	ArgumentList	obj_ast		3924689	1					
ANR	3924731	Argument	obj_ast		3924689	0					
ANR	3924732	Identifier	obj_ast		3924689	0					
ANR	3924733	CompoundStatement		8:29:151:151	3924689	1					
ANR	3924734	ExpressionStatement	obj_node . op_type = IS_UNUSED	2327:2:66995:67023	3924689	0	True				
ANR	3924735	AssignmentExpression	obj_node . op_type = IS_UNUSED		3924689	0		=			
ANR	3924736	MemberAccess	obj_node . op_type		3924689	0					
ANR	3924737	Identifier	obj_node		3924689	0					
ANR	3924738	Identifier	op_type		3924689	1					
ANR	3924739	Identifier	IS_UNUSED		3924689	1					
ANR	3924740	ElseStatement	else		3924689	0					
ANR	3924741	CompoundStatement		10:8:193:193	3924689	0					
ANR	3924742	ExpressionStatement	"zend_delayed_compile_var ( & obj_node , obj_ast , type )"	2329:2:67037:67087	3924689	0	True				
ANR	3924743	CallExpression	"zend_delayed_compile_var ( & obj_node , obj_ast , type )"		3924689	0					
ANR	3924744	Callee	zend_delayed_compile_var		3924689	0					
ANR	3924745	Identifier	zend_delayed_compile_var		3924689	0					
ANR	3924746	ArgumentList	& obj_node		3924689	1					
ANR	3924747	Argument	& obj_node		3924689	0					
ANR	3924748	UnaryOperationExpression	& obj_node		3924689	0					
ANR	3924749	UnaryOperator	&		3924689	0					
ANR	3924750	Identifier	obj_node		3924689	1					
ANR	3924751	Argument	obj_ast		3924689	1					
ANR	3924752	Identifier	obj_ast		3924689	0					
ANR	3924753	Argument	type		3924689	2					
ANR	3924754	Identifier	type		3924689	0					
ANR	3924755	ExpressionStatement	"zend_separate_if_call_and_write ( & obj_node , obj_ast , type )"	2330:2:67091:67148	3924689	1	True				
ANR	3924756	CallExpression	"zend_separate_if_call_and_write ( & obj_node , obj_ast , type )"		3924689	0					
ANR	3924757	Callee	zend_separate_if_call_and_write		3924689	0					
ANR	3924758	Identifier	zend_separate_if_call_and_write		3924689	0					
ANR	3924759	ArgumentList	& obj_node		3924689	1					
ANR	3924760	Argument	& obj_node		3924689	0					
ANR	3924761	UnaryOperationExpression	& obj_node		3924689	0					
ANR	3924762	UnaryOperator	&		3924689	0					
ANR	3924763	Identifier	obj_node		3924689	1					
ANR	3924764	Argument	obj_ast		3924689	1					
ANR	3924765	Identifier	obj_ast		3924689	0					
ANR	3924766	Argument	type		3924689	2					
ANR	3924767	Identifier	type		3924689	0					
ANR	3924768	ExpressionStatement	"zend_compile_expr ( & prop_node , prop_ast )"	2332:1:67154:67193	3924689	5	True				
ANR	3924769	CallExpression	"zend_compile_expr ( & prop_node , prop_ast )"		3924689	0					
ANR	3924770	Callee	zend_compile_expr		3924689	0					
ANR	3924771	Identifier	zend_compile_expr		3924689	0					
ANR	3924772	ArgumentList	& prop_node		3924689	1					
ANR	3924773	Argument	& prop_node		3924689	0					
ANR	3924774	UnaryOperationExpression	& prop_node		3924689	0					
ANR	3924775	UnaryOperator	&		3924689	0					
ANR	3924776	Identifier	prop_node		3924689	1					
ANR	3924777	Argument	prop_ast		3924689	1					
ANR	3924778	Identifier	prop_ast		3924689	0					
ANR	3924779	ExpressionStatement	"opline = zend_delayed_emit_op ( result , ZEND_FETCH_OBJ_R , & obj_node , & prop_node )"	2334:1:67197:67275	3924689	6	True				
ANR	3924780	AssignmentExpression	"opline = zend_delayed_emit_op ( result , ZEND_FETCH_OBJ_R , & obj_node , & prop_node )"		3924689	0		=			
ANR	3924781	Identifier	opline		3924689	0					
ANR	3924782	CallExpression	"zend_delayed_emit_op ( result , ZEND_FETCH_OBJ_R , & obj_node , & prop_node )"		3924689	1					
ANR	3924783	Callee	zend_delayed_emit_op		3924689	0					
ANR	3924784	Identifier	zend_delayed_emit_op		3924689	0					
ANR	3924785	ArgumentList	result		3924689	1					
ANR	3924786	Argument	result		3924689	0					
ANR	3924787	Identifier	result		3924689	0					
ANR	3924788	Argument	ZEND_FETCH_OBJ_R		3924689	1					
ANR	3924789	Identifier	ZEND_FETCH_OBJ_R		3924689	0					
ANR	3924790	Argument	& obj_node		3924689	2					
ANR	3924791	UnaryOperationExpression	& obj_node		3924689	0					
ANR	3924792	UnaryOperator	&		3924689	0					
ANR	3924793	Identifier	obj_node		3924689	1					
ANR	3924794	Argument	& prop_node		3924689	3					
ANR	3924795	UnaryOperationExpression	& prop_node		3924689	0					
ANR	3924796	UnaryOperator	&		3924689	0					
ANR	3924797	Identifier	prop_node		3924689	1					
ANR	3924798	IfStatement	if ( opline -> op2_type == IS_CONST )		3924689	7					
ANR	3924799	Condition	opline -> op2_type == IS_CONST	2335:5:67282:67309	3924689	0	True				
ANR	3924800	EqualityExpression	opline -> op2_type == IS_CONST		3924689	0		==			
ANR	3924801	PtrMemberAccess	opline -> op2_type		3924689	0					
ANR	3924802	Identifier	opline		3924689	0					
ANR	3924803	Identifier	op2_type		3924689	1					
ANR	3924804	Identifier	IS_CONST		3924689	1					
ANR	3924805	CompoundStatement		17:35:472:472	3924689	1					
ANR	3924806	ExpressionStatement	convert_to_string ( CT_CONSTANT ( opline -> op2 ) )	2336:2:67316:67359	3924689	0	True				
ANR	3924807	CallExpression	convert_to_string ( CT_CONSTANT ( opline -> op2 ) )		3924689	0					
ANR	3924808	Callee	convert_to_string		3924689	0					
ANR	3924809	Identifier	convert_to_string		3924689	0					
ANR	3924810	ArgumentList	CT_CONSTANT ( opline -> op2 )		3924689	1					
ANR	3924811	Argument	CT_CONSTANT ( opline -> op2 )		3924689	0					
ANR	3924812	CallExpression	CT_CONSTANT ( opline -> op2 )		3924689	0					
ANR	3924813	Callee	CT_CONSTANT		3924689	0					
ANR	3924814	Identifier	CT_CONSTANT		3924689	0					
ANR	3924815	ArgumentList	opline -> op2		3924689	1					
ANR	3924816	Argument	opline -> op2		3924689	0					
ANR	3924817	PtrMemberAccess	opline -> op2		3924689	0					
ANR	3924818	Identifier	opline		3924689	0					
ANR	3924819	Identifier	op2		3924689	1					
ANR	3924820	ExpressionStatement	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )	2337:2:67363:67418	3924689	1	True				
ANR	3924821	CallExpression	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )		3924689	0					
ANR	3924822	Callee	zend_alloc_polymorphic_cache_slot		3924689	0					
ANR	3924823	Identifier	zend_alloc_polymorphic_cache_slot		3924689	0					
ANR	3924824	ArgumentList	opline -> op2 . constant		3924689	1					
ANR	3924825	Argument	opline -> op2 . constant		3924689	0					
ANR	3924826	MemberAccess	opline -> op2 . constant		3924689	0					
ANR	3924827	PtrMemberAccess	opline -> op2		3924689	0					
ANR	3924828	Identifier	opline		3924689	0					
ANR	3924829	Identifier	op2		3924689	1					
ANR	3924830	Identifier	constant		3924689	1					
ANR	3924831	ReturnStatement	return opline ;	2340:1:67425:67438	3924689	8	True				
ANR	3924832	Identifier	opline		3924689	0					
ANR	3924833	ReturnType	static zend_op *		3924689	1					
ANR	3924834	Identifier	zend_delayed_compile_prop		3924689	2					
ANR	3924835	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3924689	3					
ANR	3924836	Parameter	znode * result	2318:42:66784:66796	3924689	0	True				
ANR	3924837	ParameterType	znode *		3924689	0					
ANR	3924838	Identifier	result		3924689	1					
ANR	3924839	Parameter	zend_ast * ast	2318:57:66799:66811	3924689	1	True				
ANR	3924840	ParameterType	zend_ast *		3924689	0					
ANR	3924841	Identifier	ast		3924689	1					
ANR	3924842	Parameter	uint32_t type	2318:72:66814:66826	3924689	2	True				
ANR	3924843	ParameterType	uint32_t		3924689	0					
ANR	3924844	Identifier	type		3924689	1					
ANR	3924845	CFGEntryNode	ENTRY		3924689		True				
ANR	3924846	CFGExitNode	EXIT		3924689		True				
ANR	3924847	Symbol	opline -> op2		3924689						
ANR	3924848	Symbol	ast		3924689						
ANR	3924849	Symbol	prop_node		3924689						
ANR	3924850	Symbol	obj_node . op_type		3924689						
ANR	3924851	Symbol	type		3924689						
ANR	3924852	Symbol	& obj_node		3924689						
ANR	3924853	Symbol	result		3924689						
ANR	3924854	Symbol	zend_delayed_emit_op		3924689						
ANR	3924855	Symbol	* ast		3924689						
ANR	3924856	Symbol	opline		3924689						
ANR	3924857	Symbol	CT_CONSTANT		3924689						
ANR	3924858	Symbol	* * ast		3924689						
ANR	3924859	Symbol	& prop_node		3924689						
ANR	3924860	Symbol	obj_node		3924689						
ANR	3924861	Symbol	is_this_fetch		3924689						
ANR	3924862	Symbol	ZEND_FETCH_OBJ_R		3924689						
ANR	3924863	Symbol	IS_CONST		3924689						
ANR	3924864	Symbol	obj_ast		3924689						
ANR	3924865	Symbol	prop_ast		3924689						
ANR	3924866	Symbol	* opline		3924689						
ANR	3924867	Symbol	opline -> op2 . constant		3924689						
ANR	3924868	Symbol	* ast -> child		3924689						
ANR	3924869	Symbol	opline -> op2_type		3924689						
ANR	3924870	Symbol	ast -> child		3924689						
ANR	3924871	Symbol	IS_UNUSED		3924689						
ANR	3924872	Function	zend_compile_prop_common	2344:0:67453:67689							
ANR	3924873	FunctionDef	"zend_compile_prop_common (znode * result , zend_ast * ast , uint32_t type)"		3924872	0					
ANR	3924874	CompoundStatement		2345:0:67549:67689	3924872	0					
ANR	3924875	IdentifierDeclStatement	uint32_t offset = zend_delayed_compile_begin ( ) ;	2346:1:67552:67598	3924872	0	True				
ANR	3924876	IdentifierDecl	offset = zend_delayed_compile_begin ( )		3924872	0					
ANR	3924877	IdentifierDeclType	uint32_t		3924872	0					
ANR	3924878	Identifier	offset		3924872	1					
ANR	3924879	AssignmentExpression	offset = zend_delayed_compile_begin ( )		3924872	2		=			
ANR	3924880	Identifier	offset		3924872	0					
ANR	3924881	CallExpression	zend_delayed_compile_begin ( )		3924872	1					
ANR	3924882	Callee	zend_delayed_compile_begin		3924872	0					
ANR	3924883	Identifier	zend_delayed_compile_begin		3924872	0					
ANR	3924884	ArgumentList			3924872	1					
ANR	3924885	ExpressionStatement	"zend_delayed_compile_prop ( result , ast , type )"	2347:1:67601:67645	3924872	1	True				
ANR	3924886	CallExpression	"zend_delayed_compile_prop ( result , ast , type )"		3924872	0					
ANR	3924887	Callee	zend_delayed_compile_prop		3924872	0					
ANR	3924888	Identifier	zend_delayed_compile_prop		3924872	0					
ANR	3924889	ArgumentList	result		3924872	1					
ANR	3924890	Argument	result		3924872	0					
ANR	3924891	Identifier	result		3924872	0					
ANR	3924892	Argument	ast		3924872	1					
ANR	3924893	Identifier	ast		3924872	0					
ANR	3924894	Argument	type		3924872	2					
ANR	3924895	Identifier	type		3924872	0					
ANR	3924896	ReturnStatement	return zend_delayed_compile_end ( offset ) ;	2348:1:67648:67687	3924872	2	True				
ANR	3924897	CallExpression	zend_delayed_compile_end ( offset )		3924872	0					
ANR	3924898	Callee	zend_delayed_compile_end		3924872	0					
ANR	3924899	Identifier	zend_delayed_compile_end		3924872	0					
ANR	3924900	ArgumentList	offset		3924872	1					
ANR	3924901	Argument	offset		3924872	0					
ANR	3924902	Identifier	offset		3924872	0					
ANR	3924903	ReturnType	static zend_op *		3924872	1					
ANR	3924904	Identifier	zend_compile_prop_common		3924872	2					
ANR	3924905	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3924872	3					
ANR	3924906	Parameter	znode * result	2344:41:67494:67506	3924872	0	True				
ANR	3924907	ParameterType	znode *		3924872	0					
ANR	3924908	Identifier	result		3924872	1					
ANR	3924909	Parameter	zend_ast * ast	2344:56:67509:67521	3924872	1	True				
ANR	3924910	ParameterType	zend_ast *		3924872	0					
ANR	3924911	Identifier	ast		3924872	1					
ANR	3924912	Parameter	uint32_t type	2344:71:67524:67536	3924872	2	True				
ANR	3924913	ParameterType	uint32_t		3924872	0					
ANR	3924914	Identifier	type		3924872	1					
ANR	3924915	CFGEntryNode	ENTRY		3924872		True				
ANR	3924916	CFGExitNode	EXIT		3924872		True				
ANR	3924917	Symbol	result		3924872						
ANR	3924918	Symbol	zend_delayed_compile_end		3924872						
ANR	3924919	Symbol	ast		3924872						
ANR	3924920	Symbol	zend_delayed_compile_begin		3924872						
ANR	3924921	Symbol	offset		3924872						
ANR	3924922	Symbol	type		3924872						
ANR	3924923	Function	zend_compile_prop	2352:0:67702:67889							
ANR	3924924	FunctionDef	"zend_compile_prop (znode * result , zend_ast * ast , uint32_t type)"		3924923	0					
ANR	3924925	CompoundStatement		2353:0:67780:67889	3924923	0					
ANR	3924926	IdentifierDeclStatement	"zend_op * opline = zend_compile_prop_common ( result , ast , type ) ;"	2354:1:67783:67844	3924923	0	True				
ANR	3924927	IdentifierDecl	"* opline = zend_compile_prop_common ( result , ast , type )"		3924923	0					
ANR	3924928	IdentifierDeclType	zend_op *		3924923	0					
ANR	3924929	Identifier	opline		3924923	1					
ANR	3924930	AssignmentExpression	"* opline = zend_compile_prop_common ( result , ast , type )"		3924923	2		=			
ANR	3924931	Identifier	opline		3924923	0					
ANR	3924932	CallExpression	"zend_compile_prop_common ( result , ast , type )"		3924923	1					
ANR	3924933	Callee	zend_compile_prop_common		3924923	0					
ANR	3924934	Identifier	zend_compile_prop_common		3924923	0					
ANR	3924935	ArgumentList	result		3924923	1					
ANR	3924936	Argument	result		3924923	0					
ANR	3924937	Identifier	result		3924923	0					
ANR	3924938	Argument	ast		3924923	1					
ANR	3924939	Identifier	ast		3924923	0					
ANR	3924940	Argument	type		3924923	2					
ANR	3924941	Identifier	type		3924923	0					
ANR	3924942	ExpressionStatement	"zend_adjust_for_fetch_type ( opline , type )"	2355:1:67847:67887	3924923	1	True				
ANR	3924943	CallExpression	"zend_adjust_for_fetch_type ( opline , type )"		3924923	0					
ANR	3924944	Callee	zend_adjust_for_fetch_type		3924923	0					
ANR	3924945	Identifier	zend_adjust_for_fetch_type		3924923	0					
ANR	3924946	ArgumentList	opline		3924923	1					
ANR	3924947	Argument	opline		3924923	0					
ANR	3924948	Identifier	opline		3924923	0					
ANR	3924949	Argument	type		3924923	1					
ANR	3924950	Identifier	type		3924923	0					
ANR	3924951	ReturnType	void		3924923	1					
ANR	3924952	Identifier	zend_compile_prop		3924923	2					
ANR	3924953	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3924923	3					
ANR	3924954	Parameter	znode * result	2352:23:67725:67737	3924923	0	True				
ANR	3924955	ParameterType	znode *		3924923	0					
ANR	3924956	Identifier	result		3924923	1					
ANR	3924957	Parameter	zend_ast * ast	2352:38:67740:67752	3924923	1	True				
ANR	3924958	ParameterType	zend_ast *		3924923	0					
ANR	3924959	Identifier	ast		3924923	1					
ANR	3924960	Parameter	uint32_t type	2352:53:67755:67767	3924923	2	True				
ANR	3924961	ParameterType	uint32_t		3924923	0					
ANR	3924962	Identifier	type		3924923	1					
ANR	3924963	CFGEntryNode	ENTRY		3924923		True				
ANR	3924964	CFGExitNode	EXIT		3924923		True				
ANR	3924965	Symbol	result		3924923						
ANR	3924966	Symbol	zend_compile_prop_common		3924923						
ANR	3924967	Symbol	ast		3924923						
ANR	3924968	Symbol	opline		3924923						
ANR	3924969	Symbol	type		3924923						
ANR	3924970	Function	zend_compile_static_prop_common	2359:0:67902:69021							
ANR	3924971	FunctionDef	"zend_compile_static_prop_common (znode * result , zend_ast * ast , uint32_t type , int delayed)"		3924970	0					
ANR	3924972	CompoundStatement		2360:0:68011:69021	3924970	0					
ANR	3924973	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 0 ] ;	2361:1:68014:68049	3924970	0	True				
ANR	3924974	IdentifierDecl	* class_ast = ast -> child [ 0 ]		3924970	0					
ANR	3924975	IdentifierDeclType	zend_ast *		3924970	0					
ANR	3924976	Identifier	class_ast		3924970	1					
ANR	3924977	AssignmentExpression	* class_ast = ast -> child [ 0 ]		3924970	2		=			
ANR	3924978	Identifier	class_ast		3924970	0					
ANR	3924979	ArrayIndexing	ast -> child [ 0 ]		3924970	1					
ANR	3924980	PtrMemberAccess	ast -> child		3924970	0					
ANR	3924981	Identifier	ast		3924970	0					
ANR	3924982	Identifier	child		3924970	1					
ANR	3924983	PrimaryExpression	0		3924970	1					
ANR	3924984	IdentifierDeclStatement	zend_ast * prop_ast = ast -> child [ 1 ] ;	2362:1:68052:68086	3924970	1	True				
ANR	3924985	IdentifierDecl	* prop_ast = ast -> child [ 1 ]		3924970	0					
ANR	3924986	IdentifierDeclType	zend_ast *		3924970	0					
ANR	3924987	Identifier	prop_ast		3924970	1					
ANR	3924988	AssignmentExpression	* prop_ast = ast -> child [ 1 ]		3924970	2		=			
ANR	3924989	Identifier	prop_ast		3924970	0					
ANR	3924990	ArrayIndexing	ast -> child [ 1 ]		3924970	1					
ANR	3924991	PtrMemberAccess	ast -> child		3924970	0					
ANR	3924992	Identifier	ast		3924970	0					
ANR	3924993	Identifier	child		3924970	1					
ANR	3924994	PrimaryExpression	1		3924970	1					
ANR	3924995	IdentifierDeclStatement	"znode class_node , prop_node ;"	2364:1:68090:68117	3924970	2	True				
ANR	3924996	IdentifierDecl	class_node		3924970	0					
ANR	3924997	IdentifierDeclType	znode		3924970	0					
ANR	3924998	Identifier	class_node		3924970	1					
ANR	3924999	IdentifierDecl	prop_node		3924970	1					
ANR	3925000	IdentifierDeclType	znode		3924970	0					
ANR	3925001	Identifier	prop_node		3924970	1					
ANR	3925002	IdentifierDeclStatement	zend_op * opline ;	2365:1:68120:68135	3924970	3	True				
ANR	3925003	IdentifierDecl	* opline		3924970	0					
ANR	3925004	IdentifierDeclType	zend_op *		3924970	0					
ANR	3925005	Identifier	opline		3924970	1					
ANR	3925006	IfStatement	if ( zend_is_const_default_class_ref ( class_ast ) )		3924970	4					
ANR	3925007	Condition	zend_is_const_default_class_ref ( class_ast )	2367:5:68143:68184	3924970	0	True				
ANR	3925008	CallExpression	zend_is_const_default_class_ref ( class_ast )		3924970	0					
ANR	3925009	Callee	zend_is_const_default_class_ref		3924970	0					
ANR	3925010	Identifier	zend_is_const_default_class_ref		3924970	0					
ANR	3925011	ArgumentList	class_ast		3924970	1					
ANR	3925012	Argument	class_ast		3924970	0					
ANR	3925013	Identifier	class_ast		3924970	0					
ANR	3925014	CompoundStatement		8:49:175:175	3924970	1					
ANR	3925015	ExpressionStatement	class_node . op_type = IS_CONST	2368:2:68191:68220	3924970	0	True				
ANR	3925016	AssignmentExpression	class_node . op_type = IS_CONST		3924970	0		=			
ANR	3925017	MemberAccess	class_node . op_type		3924970	0					
ANR	3925018	Identifier	class_node		3924970	0					
ANR	3925019	Identifier	op_type		3924970	1					
ANR	3925020	Identifier	IS_CONST		3924970	1					
ANR	3925021	ExpressionStatement	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"	2369:2:68224:68296	3924970	1	True				
ANR	3925022	CallExpression	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"		3924970	0					
ANR	3925023	Callee	ZVAL_STR		3924970	0					
ANR	3925024	Identifier	ZVAL_STR		3924970	0					
ANR	3925025	ArgumentList	& class_node . u . constant		3924970	1					
ANR	3925026	Argument	& class_node . u . constant		3924970	0					
ANR	3925027	UnaryOperationExpression	& class_node . u . constant		3924970	0					
ANR	3925028	UnaryOperator	&		3924970	0					
ANR	3925029	MemberAccess	class_node . u . constant		3924970	1					
ANR	3925030	MemberAccess	class_node . u		3924970	0					
ANR	3925031	Identifier	class_node		3924970	0					
ANR	3925032	Identifier	u		3924970	1					
ANR	3925033	Identifier	constant		3924970	1					
ANR	3925034	Argument	zend_resolve_class_name_ast ( class_ast )		3924970	1					
ANR	3925035	CallExpression	zend_resolve_class_name_ast ( class_ast )		3924970	0					
ANR	3925036	Callee	zend_resolve_class_name_ast		3924970	0					
ANR	3925037	Identifier	zend_resolve_class_name_ast		3924970	0					
ANR	3925038	ArgumentList	class_ast		3924970	1					
ANR	3925039	Argument	class_ast		3924970	0					
ANR	3925040	Identifier	class_ast		3924970	0					
ANR	3925041	ElseStatement	else		3924970	0					
ANR	3925042	CompoundStatement		11:8:294:294	3924970	0					
ANR	3925043	ExpressionStatement	"zend_compile_class_ref ( & class_node , class_ast , 1 )"	2371:2:68310:68359	3924970	0	True				
ANR	3925044	CallExpression	"zend_compile_class_ref ( & class_node , class_ast , 1 )"		3924970	0					
ANR	3925045	Callee	zend_compile_class_ref		3924970	0					
ANR	3925046	Identifier	zend_compile_class_ref		3924970	0					
ANR	3925047	ArgumentList	& class_node		3924970	1					
ANR	3925048	Argument	& class_node		3924970	0					
ANR	3925049	UnaryOperationExpression	& class_node		3924970	0					
ANR	3925050	UnaryOperator	&		3924970	0					
ANR	3925051	Identifier	class_node		3924970	1					
ANR	3925052	Argument	class_ast		3924970	1					
ANR	3925053	Identifier	class_ast		3924970	0					
ANR	3925054	Argument	1		3924970	2					
ANR	3925055	PrimaryExpression	1		3924970	0					
ANR	3925056	ExpressionStatement	"zend_compile_expr ( & prop_node , prop_ast )"	2374:1:68366:68405	3924970	5	True				
ANR	3925057	CallExpression	"zend_compile_expr ( & prop_node , prop_ast )"		3924970	0					
ANR	3925058	Callee	zend_compile_expr		3924970	0					
ANR	3925059	Identifier	zend_compile_expr		3924970	0					
ANR	3925060	ArgumentList	& prop_node		3924970	1					
ANR	3925061	Argument	& prop_node		3924970	0					
ANR	3925062	UnaryOperationExpression	& prop_node		3924970	0					
ANR	3925063	UnaryOperator	&		3924970	0					
ANR	3925064	Identifier	prop_node		3924970	1					
ANR	3925065	Argument	prop_ast		3924970	1					
ANR	3925066	Identifier	prop_ast		3924970	0					
ANR	3925067	IfStatement	if ( delayed )		3924970	6					
ANR	3925068	Condition	delayed	2376:5:68413:68419	3924970	0	True				
ANR	3925069	Identifier	delayed		3924970	0					
ANR	3925070	CompoundStatement		17:14:410:410	3924970	1					
ANR	3925071	ExpressionStatement	"opline = zend_delayed_emit_op ( result , ZEND_FETCH_R , & prop_node , NULL )"	2377:2:68426:68495	3924970	0	True				
ANR	3925072	AssignmentExpression	"opline = zend_delayed_emit_op ( result , ZEND_FETCH_R , & prop_node , NULL )"		3924970	0		=			
ANR	3925073	Identifier	opline		3924970	0					
ANR	3925074	CallExpression	"zend_delayed_emit_op ( result , ZEND_FETCH_R , & prop_node , NULL )"		3924970	1					
ANR	3925075	Callee	zend_delayed_emit_op		3924970	0					
ANR	3925076	Identifier	zend_delayed_emit_op		3924970	0					
ANR	3925077	ArgumentList	result		3924970	1					
ANR	3925078	Argument	result		3924970	0					
ANR	3925079	Identifier	result		3924970	0					
ANR	3925080	Argument	ZEND_FETCH_R		3924970	1					
ANR	3925081	Identifier	ZEND_FETCH_R		3924970	0					
ANR	3925082	Argument	& prop_node		3924970	2					
ANR	3925083	UnaryOperationExpression	& prop_node		3924970	0					
ANR	3925084	UnaryOperator	&		3924970	0					
ANR	3925085	Identifier	prop_node		3924970	1					
ANR	3925086	Argument	NULL		3924970	3					
ANR	3925087	Identifier	NULL		3924970	0					
ANR	3925088	ElseStatement	else		3924970	0					
ANR	3925089	CompoundStatement		19:8:493:493	3924970	0					
ANR	3925090	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_FETCH_R , & prop_node , NULL )"	2379:2:68509:68570	3924970	0	True				
ANR	3925091	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_FETCH_R , & prop_node , NULL )"		3924970	0		=			
ANR	3925092	Identifier	opline		3924970	0					
ANR	3925093	CallExpression	"zend_emit_op ( result , ZEND_FETCH_R , & prop_node , NULL )"		3924970	1					
ANR	3925094	Callee	zend_emit_op		3924970	0					
ANR	3925095	Identifier	zend_emit_op		3924970	0					
ANR	3925096	ArgumentList	result		3924970	1					
ANR	3925097	Argument	result		3924970	0					
ANR	3925098	Identifier	result		3924970	0					
ANR	3925099	Argument	ZEND_FETCH_R		3924970	1					
ANR	3925100	Identifier	ZEND_FETCH_R		3924970	0					
ANR	3925101	Argument	& prop_node		3924970	2					
ANR	3925102	UnaryOperationExpression	& prop_node		3924970	0					
ANR	3925103	UnaryOperator	&		3924970	0					
ANR	3925104	Identifier	prop_node		3924970	1					
ANR	3925105	Argument	NULL		3924970	3					
ANR	3925106	Identifier	NULL		3924970	0					
ANR	3925107	IfStatement	if ( opline -> op1_type == IS_CONST )		3924970	7					
ANR	3925108	Condition	opline -> op1_type == IS_CONST	2381:5:68580:68607	3924970	0	True				
ANR	3925109	EqualityExpression	opline -> op1_type == IS_CONST		3924970	0		==			
ANR	3925110	PtrMemberAccess	opline -> op1_type		3924970	0					
ANR	3925111	Identifier	opline		3924970	0					
ANR	3925112	Identifier	op1_type		3924970	1					
ANR	3925113	Identifier	IS_CONST		3924970	1					
ANR	3925114	CompoundStatement		22:35:598:598	3924970	1					
ANR	3925115	ExpressionStatement	convert_to_string ( CT_CONSTANT ( opline -> op1 ) )	2382:2:68614:68657	3924970	0	True				
ANR	3925116	CallExpression	convert_to_string ( CT_CONSTANT ( opline -> op1 ) )		3924970	0					
ANR	3925117	Callee	convert_to_string		3924970	0					
ANR	3925118	Identifier	convert_to_string		3924970	0					
ANR	3925119	ArgumentList	CT_CONSTANT ( opline -> op1 )		3924970	1					
ANR	3925120	Argument	CT_CONSTANT ( opline -> op1 )		3924970	0					
ANR	3925121	CallExpression	CT_CONSTANT ( opline -> op1 )		3924970	0					
ANR	3925122	Callee	CT_CONSTANT		3924970	0					
ANR	3925123	Identifier	CT_CONSTANT		3924970	0					
ANR	3925124	ArgumentList	opline -> op1		3924970	1					
ANR	3925125	Argument	opline -> op1		3924970	0					
ANR	3925126	PtrMemberAccess	opline -> op1		3924970	0					
ANR	3925127	Identifier	opline		3924970	0					
ANR	3925128	Identifier	op1		3924970	1					
ANR	3925129	ExpressionStatement	zend_alloc_polymorphic_cache_slot ( opline -> op1 . constant )	2383:2:68661:68716	3924970	1	True				
ANR	3925130	CallExpression	zend_alloc_polymorphic_cache_slot ( opline -> op1 . constant )		3924970	0					
ANR	3925131	Callee	zend_alloc_polymorphic_cache_slot		3924970	0					
ANR	3925132	Identifier	zend_alloc_polymorphic_cache_slot		3924970	0					
ANR	3925133	ArgumentList	opline -> op1 . constant		3924970	1					
ANR	3925134	Argument	opline -> op1 . constant		3924970	0					
ANR	3925135	MemberAccess	opline -> op1 . constant		3924970	0					
ANR	3925136	PtrMemberAccess	opline -> op1		3924970	0					
ANR	3925137	Identifier	opline		3924970	0					
ANR	3925138	Identifier	op1		3924970	1					
ANR	3925139	Identifier	constant		3924970	1					
ANR	3925140	IfStatement	if ( class_node . op_type == IS_CONST )		3924970	8					
ANR	3925141	Condition	class_node . op_type == IS_CONST	2385:5:68726:68755	3924970	0	True				
ANR	3925142	EqualityExpression	class_node . op_type == IS_CONST		3924970	0		==			
ANR	3925143	MemberAccess	class_node . op_type		3924970	0					
ANR	3925144	Identifier	class_node		3924970	0					
ANR	3925145	Identifier	op_type		3924970	1					
ANR	3925146	Identifier	IS_CONST		3924970	1					
ANR	3925147	CompoundStatement		26:37:746:746	3924970	1					
ANR	3925148	ExpressionStatement	opline -> op2_type = IS_CONST	2386:2:68762:68789	3924970	0	True				
ANR	3925149	AssignmentExpression	opline -> op2_type = IS_CONST		3924970	0		=			
ANR	3925150	PtrMemberAccess	opline -> op2_type		3924970	0					
ANR	3925151	Identifier	opline		3924970	0					
ANR	3925152	Identifier	op2_type		3924970	1					
ANR	3925153	Identifier	IS_CONST		3924970	1					
ANR	3925154	ExpressionStatement	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"	2387:2:68793:68898	3924970	1	True				
ANR	3925155	AssignmentExpression	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"		3924970	0		=			
ANR	3925156	MemberAccess	opline -> op2 . constant		3924970	0					
ANR	3925157	PtrMemberAccess	opline -> op2		3924970	0					
ANR	3925158	Identifier	opline		3924970	0					
ANR	3925159	Identifier	op2		3924970	1					
ANR	3925160	Identifier	constant		3924970	1					
ANR	3925161	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"		3924970	1					
ANR	3925162	Callee	zend_add_class_name_literal		3924970	0					
ANR	3925163	Identifier	zend_add_class_name_literal		3924970	0					
ANR	3925164	ArgumentList	CG ( active_op_array )		3924970	1					
ANR	3925165	Argument	CG ( active_op_array )		3924970	0					
ANR	3925166	CallExpression	CG ( active_op_array )		3924970	0					
ANR	3925167	Callee	CG		3924970	0					
ANR	3925168	Identifier	CG		3924970	0					
ANR	3925169	ArgumentList	active_op_array		3924970	1					
ANR	3925170	Argument	active_op_array		3924970	0					
ANR	3925171	Identifier	active_op_array		3924970	0					
ANR	3925172	Argument	Z_STR ( class_node . u . constant )		3924970	1					
ANR	3925173	CallExpression	Z_STR ( class_node . u . constant )		3924970	0					
ANR	3925174	Callee	Z_STR		3924970	0					
ANR	3925175	Identifier	Z_STR		3924970	0					
ANR	3925176	ArgumentList	class_node . u . constant		3924970	1					
ANR	3925177	Argument	class_node . u . constant		3924970	0					
ANR	3925178	MemberAccess	class_node . u . constant		3924970	0					
ANR	3925179	MemberAccess	class_node . u		3924970	0					
ANR	3925180	Identifier	class_node		3924970	0					
ANR	3925181	Identifier	u		3924970	1					
ANR	3925182	Identifier	constant		3924970	1					
ANR	3925183	ElseStatement	else		3924970	0					
ANR	3925184	CompoundStatement		30:8:896:896	3924970	0					
ANR	3925185	ExpressionStatement	"SET_NODE ( opline -> op2 , & class_node )"	2390:2:68912:68946	3924970	0	True				
ANR	3925186	CallExpression	"SET_NODE ( opline -> op2 , & class_node )"		3924970	0					
ANR	3925187	Callee	SET_NODE		3924970	0					
ANR	3925188	Identifier	SET_NODE		3924970	0					
ANR	3925189	ArgumentList	opline -> op2		3924970	1					
ANR	3925190	Argument	opline -> op2		3924970	0					
ANR	3925191	PtrMemberAccess	opline -> op2		3924970	0					
ANR	3925192	Identifier	opline		3924970	0					
ANR	3925193	Identifier	op2		3924970	1					
ANR	3925194	Argument	& class_node		3924970	1					
ANR	3925195	UnaryOperationExpression	& class_node		3924970	0					
ANR	3925196	UnaryOperator	&		3924970	0					
ANR	3925197	Identifier	class_node		3924970	1					
ANR	3925198	ExpressionStatement	opline -> extended_value |= ZEND_FETCH_STATIC_MEMBER	2392:1:68952:69002	3924970	9	True				
ANR	3925199	AssignmentExpression	opline -> extended_value |= ZEND_FETCH_STATIC_MEMBER		3924970	0		|=			
ANR	3925200	PtrMemberAccess	opline -> extended_value		3924970	0					
ANR	3925201	Identifier	opline		3924970	0					
ANR	3925202	Identifier	extended_value		3924970	1					
ANR	3925203	Identifier	ZEND_FETCH_STATIC_MEMBER		3924970	1					
ANR	3925204	ReturnStatement	return opline ;	2394:1:69006:69019	3924970	10	True				
ANR	3925205	Identifier	opline		3924970	0					
ANR	3925206	ReturnType	zend_op *		3924970	1					
ANR	3925207	Identifier	zend_compile_static_prop_common		3924970	2					
ANR	3925208	ParameterList	"znode * result , zend_ast * ast , uint32_t type , int delayed"		3924970	3					
ANR	3925209	Parameter	znode * result	2359:41:67943:67955	3924970	0	True				
ANR	3925210	ParameterType	znode *		3924970	0					
ANR	3925211	Identifier	result		3924970	1					
ANR	3925212	Parameter	zend_ast * ast	2359:56:67958:67970	3924970	1	True				
ANR	3925213	ParameterType	zend_ast *		3924970	0					
ANR	3925214	Identifier	ast		3924970	1					
ANR	3925215	Parameter	uint32_t type	2359:71:67973:67985	3924970	2	True				
ANR	3925216	ParameterType	uint32_t		3924970	0					
ANR	3925217	Identifier	type		3924970	1					
ANR	3925218	Parameter	int delayed	2359:86:67988:67998	3924970	3	True				
ANR	3925219	ParameterType	int		3924970	0					
ANR	3925220	Identifier	delayed		3924970	1					
ANR	3925221	CFGEntryNode	ENTRY		3924970		True				
ANR	3925222	CFGExitNode	EXIT		3924970		True				
ANR	3925223	Symbol	zend_is_const_default_class_ref		3924970						
ANR	3925224	Symbol	opline -> op1		3924970						
ANR	3925225	Symbol	zend_add_class_name_literal		3924970						
ANR	3925226	Symbol	opline -> op2		3924970						
ANR	3925227	Symbol	ast		3924970						
ANR	3925228	Symbol	class_node . u . constant		3924970						
ANR	3925229	Symbol	class_node		3924970						
ANR	3925230	Symbol	& class_node		3924970						
ANR	3925231	Symbol	prop_node		3924970						
ANR	3925232	Symbol	delayed		3924970						
ANR	3925233	Symbol	class_ast		3924970						
ANR	3925234	Symbol	type		3924970						
ANR	3925235	Symbol	Z_STR		3924970						
ANR	3925236	Symbol	opline -> extended_value		3924970						
ANR	3925237	Symbol	result		3924970						
ANR	3925238	Symbol	class_node . op_type		3924970						
ANR	3925239	Symbol	& class_node . u . constant		3924970						
ANR	3925240	Symbol	zend_delayed_emit_op		3924970						
ANR	3925241	Symbol	* ast		3924970						
ANR	3925242	Symbol	opline		3924970						
ANR	3925243	Symbol	CT_CONSTANT		3924970						
ANR	3925244	Symbol	opline -> op1 . constant		3924970						
ANR	3925245	Symbol	* * ast		3924970						
ANR	3925246	Symbol	& prop_node		3924970						
ANR	3925247	Symbol	class_node . u		3924970						
ANR	3925248	Symbol	ZEND_FETCH_STATIC_MEMBER		3924970						
ANR	3925249	Symbol	& class_node . u		3924970						
ANR	3925250	Symbol	IS_CONST		3924970						
ANR	3925251	Symbol	NULL		3924970						
ANR	3925252	Symbol	CG		3924970						
ANR	3925253	Symbol	zend_resolve_class_name_ast		3924970						
ANR	3925254	Symbol	active_op_array		3924970						
ANR	3925255	Symbol	ZEND_FETCH_R		3924970						
ANR	3925256	Symbol	prop_ast		3924970						
ANR	3925257	Symbol	opline -> op1_type		3924970						
ANR	3925258	Symbol	* opline		3924970						
ANR	3925259	Symbol	opline -> op2 . constant		3924970						
ANR	3925260	Symbol	* ast -> child		3924970						
ANR	3925261	Symbol	opline -> op2_type		3924970						
ANR	3925262	Symbol	ast -> child		3924970						
ANR	3925263	Symbol	zend_emit_op		3924970						
ANR	3925264	Function	zend_compile_static_prop	2398:0:69034:69257							
ANR	3925265	FunctionDef	"zend_compile_static_prop (znode * result , zend_ast * ast , uint32_t type , int delayed)"		3925264	0					
ANR	3925266	CompoundStatement		2399:0:69132:69257	3925264	0					
ANR	3925267	IdentifierDeclStatement	"zend_op * opline = zend_compile_static_prop_common ( result , ast , type , delayed ) ;"	2400:1:69135:69212	3925264	0	True				
ANR	3925268	IdentifierDecl	"* opline = zend_compile_static_prop_common ( result , ast , type , delayed )"		3925264	0					
ANR	3925269	IdentifierDeclType	zend_op *		3925264	0					
ANR	3925270	Identifier	opline		3925264	1					
ANR	3925271	AssignmentExpression	"* opline = zend_compile_static_prop_common ( result , ast , type , delayed )"		3925264	2		=			
ANR	3925272	Identifier	opline		3925264	0					
ANR	3925273	CallExpression	"zend_compile_static_prop_common ( result , ast , type , delayed )"		3925264	1					
ANR	3925274	Callee	zend_compile_static_prop_common		3925264	0					
ANR	3925275	Identifier	zend_compile_static_prop_common		3925264	0					
ANR	3925276	ArgumentList	result		3925264	1					
ANR	3925277	Argument	result		3925264	0					
ANR	3925278	Identifier	result		3925264	0					
ANR	3925279	Argument	ast		3925264	1					
ANR	3925280	Identifier	ast		3925264	0					
ANR	3925281	Argument	type		3925264	2					
ANR	3925282	Identifier	type		3925264	0					
ANR	3925283	Argument	delayed		3925264	3					
ANR	3925284	Identifier	delayed		3925264	0					
ANR	3925285	ExpressionStatement	"zend_adjust_for_fetch_type ( opline , type )"	2401:1:69215:69255	3925264	1	True				
ANR	3925286	CallExpression	"zend_adjust_for_fetch_type ( opline , type )"		3925264	0					
ANR	3925287	Callee	zend_adjust_for_fetch_type		3925264	0					
ANR	3925288	Identifier	zend_adjust_for_fetch_type		3925264	0					
ANR	3925289	ArgumentList	opline		3925264	1					
ANR	3925290	Argument	opline		3925264	0					
ANR	3925291	Identifier	opline		3925264	0					
ANR	3925292	Argument	type		3925264	1					
ANR	3925293	Identifier	type		3925264	0					
ANR	3925294	ReturnType	void		3925264	1					
ANR	3925295	Identifier	zend_compile_static_prop		3925264	2					
ANR	3925296	ParameterList	"znode * result , zend_ast * ast , uint32_t type , int delayed"		3925264	3					
ANR	3925297	Parameter	znode * result	2398:30:69064:69076	3925264	0	True				
ANR	3925298	ParameterType	znode *		3925264	0					
ANR	3925299	Identifier	result		3925264	1					
ANR	3925300	Parameter	zend_ast * ast	2398:45:69079:69091	3925264	1	True				
ANR	3925301	ParameterType	zend_ast *		3925264	0					
ANR	3925302	Identifier	ast		3925264	1					
ANR	3925303	Parameter	uint32_t type	2398:60:69094:69106	3925264	2	True				
ANR	3925304	ParameterType	uint32_t		3925264	0					
ANR	3925305	Identifier	type		3925264	1					
ANR	3925306	Parameter	int delayed	2398:75:69109:69119	3925264	3	True				
ANR	3925307	ParameterType	int		3925264	0					
ANR	3925308	Identifier	delayed		3925264	1					
ANR	3925309	CFGEntryNode	ENTRY		3925264		True				
ANR	3925310	CFGExitNode	EXIT		3925264		True				
ANR	3925311	Symbol	result		3925264						
ANR	3925312	Symbol	zend_compile_static_prop_common		3925264						
ANR	3925313	Symbol	ast		3925264						
ANR	3925314	Symbol	opline		3925264						
ANR	3925315	Symbol	delayed		3925264						
ANR	3925316	Symbol	type		3925264						
ANR	3925317	Function	zend_compile_list_assign	2405:0:69270:70015							
ANR	3925318	FunctionDef	"zend_compile_list_assign (znode * result , zend_ast * ast , znode * expr_node)"		3925317	0					
ANR	3925319	CompoundStatement		2406:0:69365:70015	3925317	0					
ANR	3925320	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	2407:1:69368:69412	3925317	0	True				
ANR	3925321	IdentifierDecl	* list = zend_ast_get_list ( ast )		3925317	0					
ANR	3925322	IdentifierDeclType	zend_ast_list *		3925317	0					
ANR	3925323	Identifier	list		3925317	1					
ANR	3925324	AssignmentExpression	* list = zend_ast_get_list ( ast )		3925317	2		=			
ANR	3925325	Identifier	list		3925317	0					
ANR	3925326	CallExpression	zend_ast_get_list ( ast )		3925317	1					
ANR	3925327	Callee	zend_ast_get_list		3925317	0					
ANR	3925328	Identifier	zend_ast_get_list		3925317	0					
ANR	3925329	ArgumentList	ast		3925317	1					
ANR	3925330	Argument	ast		3925317	0					
ANR	3925331	Identifier	ast		3925317	0					
ANR	3925332	IdentifierDeclStatement	uint32_t i ;	2408:1:69415:69425	3925317	1	True				
ANR	3925333	IdentifierDecl	i		3925317	0					
ANR	3925334	IdentifierDeclType	uint32_t		3925317	0					
ANR	3925335	Identifier	i		3925317	1					
ANR	3925336	IdentifierDeclStatement	zend_bool has_elems = 0 ;	2409:1:69428:69451	3925317	2	True				
ANR	3925337	IdentifierDecl	has_elems = 0		3925317	0					
ANR	3925338	IdentifierDeclType	zend_bool		3925317	0					
ANR	3925339	Identifier	has_elems		3925317	1					
ANR	3925340	AssignmentExpression	has_elems = 0		3925317	2		=			
ANR	3925341	Identifier	has_elems		3925317	0					
ANR	3925342	PrimaryExpression	0		3925317	1					
ANR	3925343	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3925317	3					
ANR	3925344	ForInit	i = 0 ;	2411:6:69460:69465	3925317	0	True				
ANR	3925345	AssignmentExpression	i = 0		3925317	0		=			
ANR	3925346	Identifier	i		3925317	0					
ANR	3925347	PrimaryExpression	0		3925317	1					
ANR	3925348	Condition	i < list -> children	2411:13:69467:69484	3925317	1	True				
ANR	3925349	RelationalExpression	i < list -> children		3925317	0		<			
ANR	3925350	Identifier	i		3925317	0					
ANR	3925351	PtrMemberAccess	list -> children		3925317	1					
ANR	3925352	Identifier	list		3925317	0					
ANR	3925353	Identifier	children		3925317	1					
ANR	3925354	UnaryExpression	++ i	2411:33:69487:69489	3925317	2	True				
ANR	3925355	IncDec	++		3925317	0					
ANR	3925356	Identifier	i		3925317	1					
ANR	3925357	CompoundStatement		8:2:168:196	3925317	3					
ANR	3925358	IdentifierDeclStatement	zend_ast * var_ast = list -> child [ i ] ;	2412:2:69496:69530	3925317	0	True				
ANR	3925359	IdentifierDecl	* var_ast = list -> child [ i ]		3925317	0					
ANR	3925360	IdentifierDeclType	zend_ast *		3925317	0					
ANR	3925361	Identifier	var_ast		3925317	1					
ANR	3925362	AssignmentExpression	* var_ast = list -> child [ i ]		3925317	2		=			
ANR	3925363	Identifier	var_ast		3925317	0					
ANR	3925364	ArrayIndexing	list -> child [ i ]		3925317	1					
ANR	3925365	PtrMemberAccess	list -> child		3925317	0					
ANR	3925366	Identifier	list		3925317	0					
ANR	3925367	Identifier	child		3925317	1					
ANR	3925368	Identifier	i		3925317	1					
ANR	3925369	IdentifierDeclStatement	"znode fetch_result , dim_node ;"	2413:2:69534:69562	3925317	1	True				
ANR	3925370	IdentifierDecl	fetch_result		3925317	0					
ANR	3925371	IdentifierDeclType	znode		3925317	0					
ANR	3925372	Identifier	fetch_result		3925317	1					
ANR	3925373	IdentifierDecl	dim_node		3925317	1					
ANR	3925374	IdentifierDeclType	znode		3925317	0					
ANR	3925375	Identifier	dim_node		3925317	1					
ANR	3925376	IfStatement	if ( var_ast == NULL )		3925317	2					
ANR	3925377	Condition	var_ast == NULL	2415:6:69571:69585	3925317	0	True				
ANR	3925378	EqualityExpression	var_ast == NULL		3925317	0		==			
ANR	3925379	Identifier	var_ast		3925317	0					
ANR	3925380	Identifier	NULL		3925317	1					
ANR	3925381	CompoundStatement		10:23:222:222	3925317	1					
ANR	3925382	ContinueStatement	continue ;	2416:3:69593:69601	3925317	0	True				
ANR	3925383	ExpressionStatement	has_elems = 1	2418:2:69609:69622	3925317	3	True				
ANR	3925384	AssignmentExpression	has_elems = 1		3925317	0		=			
ANR	3925385	Identifier	has_elems		3925317	0					
ANR	3925386	PrimaryExpression	1		3925317	1					
ANR	3925387	ExpressionStatement	dim_node . op_type = IS_CONST	2420:2:69627:69654	3925317	4	True				
ANR	3925388	AssignmentExpression	dim_node . op_type = IS_CONST		3925317	0		=			
ANR	3925389	MemberAccess	dim_node . op_type		3925317	0					
ANR	3925390	Identifier	dim_node		3925317	0					
ANR	3925391	Identifier	op_type		3925317	1					
ANR	3925392	Identifier	IS_CONST		3925317	1					
ANR	3925393	ExpressionStatement	"ZVAL_LONG ( & dim_node . u . constant , i )"	2421:2:69658:69692	3925317	5	True				
ANR	3925394	CallExpression	"ZVAL_LONG ( & dim_node . u . constant , i )"		3925317	0					
ANR	3925395	Callee	ZVAL_LONG		3925317	0					
ANR	3925396	Identifier	ZVAL_LONG		3925317	0					
ANR	3925397	ArgumentList	& dim_node . u . constant		3925317	1					
ANR	3925398	Argument	& dim_node . u . constant		3925317	0					
ANR	3925399	UnaryOperationExpression	& dim_node . u . constant		3925317	0					
ANR	3925400	UnaryOperator	&		3925317	0					
ANR	3925401	MemberAccess	dim_node . u . constant		3925317	1					
ANR	3925402	MemberAccess	dim_node . u		3925317	0					
ANR	3925403	Identifier	dim_node		3925317	0					
ANR	3925404	Identifier	u		3925317	1					
ANR	3925405	Identifier	constant		3925317	1					
ANR	3925406	Argument	i		3925317	1					
ANR	3925407	Identifier	i		3925317	0					
ANR	3925408	IfStatement	if ( expr_node -> op_type == IS_CONST )		3925317	6					
ANR	3925409	Condition	expr_node -> op_type == IS_CONST	2423:6:69701:69730	3925317	0	True				
ANR	3925410	EqualityExpression	expr_node -> op_type == IS_CONST		3925317	0		==			
ANR	3925411	PtrMemberAccess	expr_node -> op_type		3925317	0					
ANR	3925412	Identifier	expr_node		3925317	0					
ANR	3925413	Identifier	op_type		3925317	1					
ANR	3925414	Identifier	IS_CONST		3925317	1					
ANR	3925415	CompoundStatement		18:38:367:367	3925317	1					
ANR	3925416	ExpressionStatement	Z_TRY_ADDREF ( expr_node -> u . constant )	2424:3:69738:69773	3925317	0	True				
ANR	3925417	CallExpression	Z_TRY_ADDREF ( expr_node -> u . constant )		3925317	0					
ANR	3925418	Callee	Z_TRY_ADDREF		3925317	0					
ANR	3925419	Identifier	Z_TRY_ADDREF		3925317	0					
ANR	3925420	ArgumentList	expr_node -> u . constant		3925317	1					
ANR	3925421	Argument	expr_node -> u . constant		3925317	0					
ANR	3925422	MemberAccess	expr_node -> u . constant		3925317	0					
ANR	3925423	PtrMemberAccess	expr_node -> u		3925317	0					
ANR	3925424	Identifier	expr_node		3925317	0					
ANR	3925425	Identifier	u		3925317	1					
ANR	3925426	Identifier	constant		3925317	1					
ANR	3925427	ExpressionStatement	"zend_emit_op ( & fetch_result , ZEND_FETCH_LIST , expr_node , & dim_node )"	2427:2:69782:69848	3925317	7	True				
ANR	3925428	CallExpression	"zend_emit_op ( & fetch_result , ZEND_FETCH_LIST , expr_node , & dim_node )"		3925317	0					
ANR	3925429	Callee	zend_emit_op		3925317	0					
ANR	3925430	Identifier	zend_emit_op		3925317	0					
ANR	3925431	ArgumentList	& fetch_result		3925317	1					
ANR	3925432	Argument	& fetch_result		3925317	0					
ANR	3925433	UnaryOperationExpression	& fetch_result		3925317	0					
ANR	3925434	UnaryOperator	&		3925317	0					
ANR	3925435	Identifier	fetch_result		3925317	1					
ANR	3925436	Argument	ZEND_FETCH_LIST		3925317	1					
ANR	3925437	Identifier	ZEND_FETCH_LIST		3925317	0					
ANR	3925438	Argument	expr_node		3925317	2					
ANR	3925439	Identifier	expr_node		3925317	0					
ANR	3925440	Argument	& dim_node		3925317	3					
ANR	3925441	UnaryOperationExpression	& dim_node		3925317	0					
ANR	3925442	UnaryOperator	&		3925317	0					
ANR	3925443	Identifier	dim_node		3925317	1					
ANR	3925444	ExpressionStatement	"zend_emit_assign_znode ( var_ast , & fetch_result )"	2428:2:69852:69898	3925317	8	True				
ANR	3925445	CallExpression	"zend_emit_assign_znode ( var_ast , & fetch_result )"		3925317	0					
ANR	3925446	Callee	zend_emit_assign_znode		3925317	0					
ANR	3925447	Identifier	zend_emit_assign_znode		3925317	0					
ANR	3925448	ArgumentList	var_ast		3925317	1					
ANR	3925449	Argument	var_ast		3925317	0					
ANR	3925450	Identifier	var_ast		3925317	0					
ANR	3925451	Argument	& fetch_result		3925317	1					
ANR	3925452	UnaryOperationExpression	& fetch_result		3925317	0					
ANR	3925453	UnaryOperator	&		3925317	0					
ANR	3925454	Identifier	fetch_result		3925317	1					
ANR	3925455	IfStatement	if ( ! has_elems )		3925317	4					
ANR	3925456	Condition	! has_elems	2431:5:69909:69918	3925317	0	True				
ANR	3925457	UnaryOperationExpression	! has_elems		3925317	0					
ANR	3925458	UnaryOperator	!		3925317	0					
ANR	3925459	Identifier	has_elems		3925317	1					
ANR	3925460	CompoundStatement		26:17:555:555	3925317	1					
ANR	3925461	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use empty list"" )"	2432:2:69925:69986	3925317	0	True				
ANR	3925462	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use empty list"" )"		3925317	0					
ANR	3925463	Callee	zend_error_noreturn		3925317	0					
ANR	3925464	Identifier	zend_error_noreturn		3925317	0					
ANR	3925465	ArgumentList	E_COMPILE_ERROR		3925317	1					
ANR	3925466	Argument	E_COMPILE_ERROR		3925317	0					
ANR	3925467	Identifier	E_COMPILE_ERROR		3925317	0					
ANR	3925468	Argument	"""Cannot use empty list"""		3925317	1					
ANR	3925469	PrimaryExpression	"""Cannot use empty list"""		3925317	0					
ANR	3925470	ExpressionStatement	* result = * expr_node	2435:1:69993:70013	3925317	5	True				
ANR	3925471	AssignmentExpression	* result = * expr_node		3925317	0		=			
ANR	3925472	UnaryOperationExpression	* result		3925317	0					
ANR	3925473	UnaryOperator	*		3925317	0					
ANR	3925474	Identifier	result		3925317	1					
ANR	3925475	UnaryOperationExpression	* expr_node		3925317	1					
ANR	3925476	UnaryOperator	*		3925317	0					
ANR	3925477	Identifier	expr_node		3925317	1					
ANR	3925478	ReturnType	static void		3925317	1					
ANR	3925479	Identifier	zend_compile_list_assign		3925317	2					
ANR	3925480	ParameterList	"znode * result , zend_ast * ast , znode * expr_node"		3925317	3					
ANR	3925481	Parameter	znode * result	2405:37:69307:69319	3925317	0	True				
ANR	3925482	ParameterType	znode *		3925317	0					
ANR	3925483	Identifier	result		3925317	1					
ANR	3925484	Parameter	zend_ast * ast	2405:52:69322:69334	3925317	1	True				
ANR	3925485	ParameterType	zend_ast *		3925317	0					
ANR	3925486	Identifier	ast		3925317	1					
ANR	3925487	Parameter	znode * expr_node	2405:67:69337:69352	3925317	2	True				
ANR	3925488	ParameterType	znode *		3925317	0					
ANR	3925489	Identifier	expr_node		3925317	1					
ANR	3925490	CFGEntryNode	ENTRY		3925317		True				
ANR	3925491	CFGExitNode	EXIT		3925317		True				
ANR	3925492	Symbol	ast		3925317						
ANR	3925493	Symbol	E_COMPILE_ERROR		3925317						
ANR	3925494	Symbol	dim_node . u		3925317						
ANR	3925495	Symbol	ZEND_FETCH_LIST		3925317						
ANR	3925496	Symbol	dim_node		3925317						
ANR	3925497	Symbol	result		3925317						
ANR	3925498	Symbol	expr_node -> u . constant		3925317						
ANR	3925499	Symbol	* * list		3925317						
ANR	3925500	Symbol	& dim_node		3925317						
ANR	3925501	Symbol	* result		3925317						
ANR	3925502	Symbol	expr_node -> op_type		3925317						
ANR	3925503	Symbol	IS_CONST		3925317						
ANR	3925504	Symbol	NULL		3925317						
ANR	3925505	Symbol	list -> child		3925317						
ANR	3925506	Symbol	* expr_node		3925317						
ANR	3925507	Symbol	i		3925317						
ANR	3925508	Symbol	list		3925317						
ANR	3925509	Symbol	dim_node . op_type		3925317						
ANR	3925510	Symbol	expr_node		3925317						
ANR	3925511	Symbol	zend_ast_get_list		3925317						
ANR	3925512	Symbol	var_ast		3925317						
ANR	3925513	Symbol	* i		3925317						
ANR	3925514	Symbol	has_elems		3925317						
ANR	3925515	Symbol	* list		3925317						
ANR	3925516	Symbol	& dim_node . u		3925317						
ANR	3925517	Symbol	& fetch_result		3925317						
ANR	3925518	Symbol	* list -> child		3925317						
ANR	3925519	Symbol	fetch_result		3925317						
ANR	3925520	Symbol	& dim_node . u . constant		3925317						
ANR	3925521	Symbol	expr_node -> u		3925317						
ANR	3925522	Symbol	list -> children		3925317						
ANR	3925523	Function	zend_ensure_writable_variable	2439:0:70028:70405							
ANR	3925524	FunctionDef	zend_ensure_writable_variable (const zend_ast * ast)		3925523	0					
ANR	3925525	CompoundStatement		2440:0:70101:70405	3925523	0					
ANR	3925526	IfStatement	if ( ast -> kind == ZEND_AST_CALL )		3925523	0					
ANR	3925527	Condition	ast -> kind == ZEND_AST_CALL	2441:5:70108:70133	3925523	0	True				
ANR	3925528	EqualityExpression	ast -> kind == ZEND_AST_CALL		3925523	0		==			
ANR	3925529	PtrMemberAccess	ast -> kind		3925523	0					
ANR	3925530	Identifier	ast		3925523	0					
ANR	3925531	Identifier	kind		3925523	1					
ANR	3925532	Identifier	ZEND_AST_CALL		3925523	1					
ANR	3925533	CompoundStatement		2:33:34:34	3925523	1					
ANR	3925534	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't use function return value in write context"" )"	2442:2:70140:70228	3925523	0	True				
ANR	3925535	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't use function return value in write context"" )"		3925523	0					
ANR	3925536	Callee	zend_error_noreturn		3925523	0					
ANR	3925537	Identifier	zend_error_noreturn		3925523	0					
ANR	3925538	ArgumentList	E_COMPILE_ERROR		3925523	1					
ANR	3925539	Argument	E_COMPILE_ERROR		3925523	0					
ANR	3925540	Identifier	E_COMPILE_ERROR		3925523	0					
ANR	3925541	Argument	"""Can't use function return value in write context"""		3925523	1					
ANR	3925542	PrimaryExpression	"""Can't use function return value in write context"""		3925523	0					
ANR	3925543	IfStatement	if ( ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL )		3925523	1					
ANR	3925544	Condition	ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL	2444:5:70238:70307	3925523	0	True				
ANR	3925545	OrExpression	ast -> kind == ZEND_AST_METHOD_CALL || ast -> kind == ZEND_AST_STATIC_CALL		3925523	0		||			
ANR	3925546	EqualityExpression	ast -> kind == ZEND_AST_METHOD_CALL		3925523	0		==			
ANR	3925547	PtrMemberAccess	ast -> kind		3925523	0					
ANR	3925548	Identifier	ast		3925523	0					
ANR	3925549	Identifier	kind		3925523	1					
ANR	3925550	Identifier	ZEND_AST_METHOD_CALL		3925523	1					
ANR	3925551	EqualityExpression	ast -> kind == ZEND_AST_STATIC_CALL		3925523	1		==			
ANR	3925552	PtrMemberAccess	ast -> kind		3925523	0					
ANR	3925553	Identifier	ast		3925523	0					
ANR	3925554	Identifier	kind		3925523	1					
ANR	3925555	Identifier	ZEND_AST_STATIC_CALL		3925523	1					
ANR	3925556	CompoundStatement		5:77:208:208	3925523	1					
ANR	3925557	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't use method return value in write context"" )"	2445:2:70314:70400	3925523	0	True				
ANR	3925558	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't use method return value in write context"" )"		3925523	0					
ANR	3925559	Callee	zend_error_noreturn		3925523	0					
ANR	3925560	Identifier	zend_error_noreturn		3925523	0					
ANR	3925561	ArgumentList	E_COMPILE_ERROR		3925523	1					
ANR	3925562	Argument	E_COMPILE_ERROR		3925523	0					
ANR	3925563	Identifier	E_COMPILE_ERROR		3925523	0					
ANR	3925564	Argument	"""Can't use method return value in write context"""		3925523	1					
ANR	3925565	PrimaryExpression	"""Can't use method return value in write context"""		3925523	0					
ANR	3925566	ReturnType	static void		3925523	1					
ANR	3925567	Identifier	zend_ensure_writable_variable		3925523	2					
ANR	3925568	ParameterList	const zend_ast * ast		3925523	3					
ANR	3925569	Parameter	const zend_ast * ast	2439:42:70070:70088	3925523	0	True				
ANR	3925570	ParameterType	const zend_ast *		3925523	0					
ANR	3925571	Identifier	ast		3925523	1					
ANR	3925572	CFGEntryNode	ENTRY		3925523		True				
ANR	3925573	CFGExitNode	EXIT		3925523		True				
ANR	3925574	Symbol	ZEND_AST_STATIC_CALL		3925523						
ANR	3925575	Symbol	ast -> kind		3925523						
ANR	3925576	Symbol	ast		3925523						
ANR	3925577	Symbol	ZEND_AST_CALL		3925523						
ANR	3925578	Symbol	* ast		3925523						
ANR	3925579	Symbol	E_COMPILE_ERROR		3925523						
ANR	3925580	Symbol	ZEND_AST_METHOD_CALL		3925523						
ANR	3925581	Function	zend_is_assign_to_self	2451:0:70451:71133							
ANR	3925582	FunctionDef	"zend_is_assign_to_self (zend_ast * var_ast , zend_ast * expr_ast)"		3925581	0					
ANR	3925583	CompoundStatement		2452:0:70533:71133	3925581	0					
ANR	3925584	IfStatement	if ( expr_ast -> kind != ZEND_AST_VAR || expr_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL )		3925581	0					
ANR	3925585	Condition	expr_ast -> kind != ZEND_AST_VAR || expr_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL	2453:5:70540:70614	3925581	0	True				
ANR	3925586	OrExpression	expr_ast -> kind != ZEND_AST_VAR || expr_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3925581	0		||			
ANR	3925587	EqualityExpression	expr_ast -> kind != ZEND_AST_VAR		3925581	0		!=			
ANR	3925588	PtrMemberAccess	expr_ast -> kind		3925581	0					
ANR	3925589	Identifier	expr_ast		3925581	0					
ANR	3925590	Identifier	kind		3925581	1					
ANR	3925591	Identifier	ZEND_AST_VAR		3925581	1					
ANR	3925592	EqualityExpression	expr_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3925581	1		!=			
ANR	3925593	PtrMemberAccess	expr_ast -> child [ 0 ] -> kind		3925581	0					
ANR	3925594	ArrayIndexing	expr_ast -> child [ 0 ]		3925581	0					
ANR	3925595	PtrMemberAccess	expr_ast -> child		3925581	0					
ANR	3925596	Identifier	expr_ast		3925581	0					
ANR	3925597	Identifier	child		3925581	1					
ANR	3925598	PrimaryExpression	0		3925581	1					
ANR	3925599	Identifier	kind		3925581	1					
ANR	3925600	Identifier	ZEND_AST_ZVAL		3925581	1					
ANR	3925601	CompoundStatement		2:82:83:83	3925581	1					
ANR	3925602	ReturnStatement	return 0 ;	2454:2:70621:70629	3925581	0	True				
ANR	3925603	PrimaryExpression	0		3925581	0					
ANR	3925604	WhileStatement	while ( zend_is_variable ( var_ast ) && var_ast -> kind != ZEND_AST_VAR )		3925581	1					
ANR	3925605	Condition	zend_is_variable ( var_ast ) && var_ast -> kind != ZEND_AST_VAR	2457:8:70643:70700	3925581	0	True				
ANR	3925606	AndExpression	zend_is_variable ( var_ast ) && var_ast -> kind != ZEND_AST_VAR		3925581	0		&&			
ANR	3925607	CallExpression	zend_is_variable ( var_ast )		3925581	0					
ANR	3925608	Callee	zend_is_variable		3925581	0					
ANR	3925609	Identifier	zend_is_variable		3925581	0					
ANR	3925610	ArgumentList	var_ast		3925581	1					
ANR	3925611	Argument	var_ast		3925581	0					
ANR	3925612	Identifier	var_ast		3925581	0					
ANR	3925613	EqualityExpression	var_ast -> kind != ZEND_AST_VAR		3925581	1		!=			
ANR	3925614	PtrMemberAccess	var_ast -> kind		3925581	0					
ANR	3925615	Identifier	var_ast		3925581	0					
ANR	3925616	Identifier	kind		3925581	1					
ANR	3925617	Identifier	ZEND_AST_VAR		3925581	1					
ANR	3925618	CompoundStatement		6:68:169:169	3925581	1					
ANR	3925619	ExpressionStatement	var_ast = var_ast -> child [ 0 ]	2458:2:70707:70734	3925581	0	True				
ANR	3925620	AssignmentExpression	var_ast = var_ast -> child [ 0 ]		3925581	0		=			
ANR	3925621	Identifier	var_ast		3925581	0					
ANR	3925622	ArrayIndexing	var_ast -> child [ 0 ]		3925581	1					
ANR	3925623	PtrMemberAccess	var_ast -> child		3925581	0					
ANR	3925624	Identifier	var_ast		3925581	0					
ANR	3925625	Identifier	child		3925581	1					
ANR	3925626	PrimaryExpression	0		3925581	1					
ANR	3925627	IfStatement	if ( var_ast -> kind != ZEND_AST_VAR || var_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL )		3925581	2					
ANR	3925628	Condition	var_ast -> kind != ZEND_AST_VAR || var_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL	2461:5:70745:70817	3925581	0	True				
ANR	3925629	OrExpression	var_ast -> kind != ZEND_AST_VAR || var_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3925581	0		||			
ANR	3925630	EqualityExpression	var_ast -> kind != ZEND_AST_VAR		3925581	0		!=			
ANR	3925631	PtrMemberAccess	var_ast -> kind		3925581	0					
ANR	3925632	Identifier	var_ast		3925581	0					
ANR	3925633	Identifier	kind		3925581	1					
ANR	3925634	Identifier	ZEND_AST_VAR		3925581	1					
ANR	3925635	EqualityExpression	var_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3925581	1		!=			
ANR	3925636	PtrMemberAccess	var_ast -> child [ 0 ] -> kind		3925581	0					
ANR	3925637	ArrayIndexing	var_ast -> child [ 0 ]		3925581	0					
ANR	3925638	PtrMemberAccess	var_ast -> child		3925581	0					
ANR	3925639	Identifier	var_ast		3925581	0					
ANR	3925640	Identifier	child		3925581	1					
ANR	3925641	PrimaryExpression	0		3925581	1					
ANR	3925642	Identifier	kind		3925581	1					
ANR	3925643	Identifier	ZEND_AST_ZVAL		3925581	1					
ANR	3925644	CompoundStatement		10:80:286:286	3925581	1					
ANR	3925645	ReturnStatement	return 0 ;	2462:2:70824:70832	3925581	0	True				
ANR	3925646	PrimaryExpression	0		3925581	0					
ANR	3925647	CompoundStatement		17:2:466:517	3925581	3					
ANR	3925648	IdentifierDeclStatement	zend_string * name1 = zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) ) ;	2466:2:70843:70917	3925581	0	True				
ANR	3925649	IdentifierDecl	* name1 = zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) )		3925581	0					
ANR	3925650	IdentifierDeclType	zend_string *		3925581	0					
ANR	3925651	Identifier	name1		3925581	1					
ANR	3925652	AssignmentExpression	* name1 = zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) )		3925581	2		=			
ANR	3925653	Identifier	name1		3925581	0					
ANR	3925654	CallExpression	zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) )		3925581	1					
ANR	3925655	Callee	zval_get_string		3925581	0					
ANR	3925656	Identifier	zval_get_string		3925581	0					
ANR	3925657	ArgumentList	zend_ast_get_zval ( var_ast -> child [ 0 ] )		3925581	1					
ANR	3925658	Argument	zend_ast_get_zval ( var_ast -> child [ 0 ] )		3925581	0					
ANR	3925659	CallExpression	zend_ast_get_zval ( var_ast -> child [ 0 ] )		3925581	0					
ANR	3925660	Callee	zend_ast_get_zval		3925581	0					
ANR	3925661	Identifier	zend_ast_get_zval		3925581	0					
ANR	3925662	ArgumentList	var_ast -> child [ 0 ]		3925581	1					
ANR	3925663	Argument	var_ast -> child [ 0 ]		3925581	0					
ANR	3925664	ArrayIndexing	var_ast -> child [ 0 ]		3925581	0					
ANR	3925665	PtrMemberAccess	var_ast -> child		3925581	0					
ANR	3925666	Identifier	var_ast		3925581	0					
ANR	3925667	Identifier	child		3925581	1					
ANR	3925668	PrimaryExpression	0		3925581	1					
ANR	3925669	IdentifierDeclStatement	zend_string * name2 = zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) ) ;	2467:2:70921:70996	3925581	1	True				
ANR	3925670	IdentifierDecl	* name2 = zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) )		3925581	0					
ANR	3925671	IdentifierDeclType	zend_string *		3925581	0					
ANR	3925672	Identifier	name2		3925581	1					
ANR	3925673	AssignmentExpression	* name2 = zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) )		3925581	2		=			
ANR	3925674	Identifier	name2		3925581	0					
ANR	3925675	CallExpression	zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) )		3925581	1					
ANR	3925676	Callee	zval_get_string		3925581	0					
ANR	3925677	Identifier	zval_get_string		3925581	0					
ANR	3925678	ArgumentList	zend_ast_get_zval ( expr_ast -> child [ 0 ] )		3925581	1					
ANR	3925679	Argument	zend_ast_get_zval ( expr_ast -> child [ 0 ] )		3925581	0					
ANR	3925680	CallExpression	zend_ast_get_zval ( expr_ast -> child [ 0 ] )		3925581	0					
ANR	3925681	Callee	zend_ast_get_zval		3925581	0					
ANR	3925682	Identifier	zend_ast_get_zval		3925581	0					
ANR	3925683	ArgumentList	expr_ast -> child [ 0 ]		3925581	1					
ANR	3925684	Argument	expr_ast -> child [ 0 ]		3925581	0					
ANR	3925685	ArrayIndexing	expr_ast -> child [ 0 ]		3925581	0					
ANR	3925686	PtrMemberAccess	expr_ast -> child		3925581	0					
ANR	3925687	Identifier	expr_ast		3925581	0					
ANR	3925688	Identifier	child		3925581	1					
ANR	3925689	PrimaryExpression	0		3925581	1					
ANR	3925690	IdentifierDeclStatement	"zend_bool result = zend_string_equals ( name1 , name2 ) ;"	2468:2:71000:71051	3925581	2	True				
ANR	3925691	IdentifierDecl	"result = zend_string_equals ( name1 , name2 )"		3925581	0					
ANR	3925692	IdentifierDeclType	zend_bool		3925581	0					
ANR	3925693	Identifier	result		3925581	1					
ANR	3925694	AssignmentExpression	"result = zend_string_equals ( name1 , name2 )"		3925581	2		=			
ANR	3925695	Identifier	result		3925581	0					
ANR	3925696	CallExpression	"zend_string_equals ( name1 , name2 )"		3925581	1					
ANR	3925697	Callee	zend_string_equals		3925581	0					
ANR	3925698	Identifier	zend_string_equals		3925581	0					
ANR	3925699	ArgumentList	name1		3925581	1					
ANR	3925700	Argument	name1		3925581	0					
ANR	3925701	Identifier	name1		3925581	0					
ANR	3925702	Argument	name2		3925581	1					
ANR	3925703	Identifier	name2		3925581	0					
ANR	3925704	ExpressionStatement	zend_string_release ( name1 )	2469:2:71055:71081	3925581	3	True				
ANR	3925705	CallExpression	zend_string_release ( name1 )		3925581	0					
ANR	3925706	Callee	zend_string_release		3925581	0					
ANR	3925707	Identifier	zend_string_release		3925581	0					
ANR	3925708	ArgumentList	name1		3925581	1					
ANR	3925709	Argument	name1		3925581	0					
ANR	3925710	Identifier	name1		3925581	0					
ANR	3925711	ExpressionStatement	zend_string_release ( name2 )	2470:2:71085:71111	3925581	4	True				
ANR	3925712	CallExpression	zend_string_release ( name2 )		3925581	0					
ANR	3925713	Callee	zend_string_release		3925581	0					
ANR	3925714	Identifier	zend_string_release		3925581	0					
ANR	3925715	ArgumentList	name2		3925581	1					
ANR	3925716	Argument	name2		3925581	0					
ANR	3925717	Identifier	name2		3925581	0					
ANR	3925718	ReturnStatement	return result ;	2471:2:71115:71128	3925581	5	True				
ANR	3925719	Identifier	result		3925581	0					
ANR	3925720	ReturnType	zend_bool		3925581	1					
ANR	3925721	Identifier	zend_is_assign_to_self		3925581	2					
ANR	3925722	ParameterList	"zend_ast * var_ast , zend_ast * expr_ast"		3925581	3					
ANR	3925723	Parameter	zend_ast * var_ast	2451:33:70484:70500	3925581	0	True				
ANR	3925724	ParameterType	zend_ast *		3925581	0					
ANR	3925725	Identifier	var_ast		3925581	1					
ANR	3925726	Parameter	zend_ast * expr_ast	2451:52:70503:70520	3925581	1	True				
ANR	3925727	ParameterType	zend_ast *		3925581	0					
ANR	3925728	Identifier	expr_ast		3925581	1					
ANR	3925729	CFGEntryNode	ENTRY		3925581		True				
ANR	3925730	CFGExitNode	EXIT		3925581		True				
ANR	3925731	Symbol	expr_ast -> kind		3925581						
ANR	3925732	Symbol	* expr_ast		3925581						
ANR	3925733	Symbol	zend_string_equals		3925581						
ANR	3925734	Symbol	* var_ast		3925581						
ANR	3925735	Symbol	* * expr_ast		3925581						
ANR	3925736	Symbol	var_ast -> child [ 0 ] -> kind		3925581						
ANR	3925737	Symbol	result		3925581						
ANR	3925738	Symbol	var_ast -> kind		3925581						
ANR	3925739	Symbol	ZEND_AST_VAR		3925581						
ANR	3925740	Symbol	* * var_ast		3925581						
ANR	3925741	Symbol	ZEND_AST_ZVAL		3925581						
ANR	3925742	Symbol	* * * var_ast		3925581						
ANR	3925743	Symbol	var_ast -> child		3925581						
ANR	3925744	Symbol	expr_ast -> child [ 0 ] -> kind		3925581						
ANR	3925745	Symbol	zend_is_variable		3925581						
ANR	3925746	Symbol	* * expr_ast -> child		3925581						
ANR	3925747	Symbol	expr_ast -> child		3925581						
ANR	3925748	Symbol	zval_get_string		3925581						
ANR	3925749	Symbol	expr_ast		3925581						
ANR	3925750	Symbol	* * var_ast -> child		3925581						
ANR	3925751	Symbol	var_ast		3925581						
ANR	3925752	Symbol	* expr_ast -> child		3925581						
ANR	3925753	Symbol	* * * expr_ast		3925581						
ANR	3925754	Symbol	zend_ast_get_zval		3925581						
ANR	3925755	Symbol	name2		3925581						
ANR	3925756	Symbol	* var_ast -> child		3925581						
ANR	3925757	Symbol	name1		3925581						
ANR	3925758	Function	zend_list_has_assign_to	2477:0:71214:71931							
ANR	3925759	FunctionDef	"zend_list_has_assign_to (zend_ast * list_ast , zend_string * name)"		3925758	0					
ANR	3925760	CompoundStatement		2478:0:71297:71931	3925758	0					
ANR	3925761	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( list_ast ) ;	2479:1:71300:71349	3925758	0	True				
ANR	3925762	IdentifierDecl	* list = zend_ast_get_list ( list_ast )		3925758	0					
ANR	3925763	IdentifierDeclType	zend_ast_list *		3925758	0					
ANR	3925764	Identifier	list		3925758	1					
ANR	3925765	AssignmentExpression	* list = zend_ast_get_list ( list_ast )		3925758	2		=			
ANR	3925766	Identifier	list		3925758	0					
ANR	3925767	CallExpression	zend_ast_get_list ( list_ast )		3925758	1					
ANR	3925768	Callee	zend_ast_get_list		3925758	0					
ANR	3925769	Identifier	zend_ast_get_list		3925758	0					
ANR	3925770	ArgumentList	list_ast		3925758	1					
ANR	3925771	Argument	list_ast		3925758	0					
ANR	3925772	Identifier	list_ast		3925758	0					
ANR	3925773	IdentifierDeclStatement	uint32_t i ;	2480:1:71352:71362	3925758	1	True				
ANR	3925774	IdentifierDecl	i		3925758	0					
ANR	3925775	IdentifierDeclType	uint32_t		3925758	0					
ANR	3925776	Identifier	i		3925758	1					
ANR	3925777	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		3925758	2					
ANR	3925778	ForInit	i = 0 ;	2481:6:71370:71375	3925758	0	True				
ANR	3925779	AssignmentExpression	i = 0		3925758	0		=			
ANR	3925780	Identifier	i		3925758	0					
ANR	3925781	PrimaryExpression	0		3925758	1					
ANR	3925782	Condition	i < list -> children	2481:13:71377:71394	3925758	1	True				
ANR	3925783	RelationalExpression	i < list -> children		3925758	0		<			
ANR	3925784	Identifier	i		3925758	0					
ANR	3925785	PtrMemberAccess	list -> children		3925758	1					
ANR	3925786	Identifier	list		3925758	0					
ANR	3925787	Identifier	children		3925758	1					
ANR	3925788	PostIncDecOperationExpression	i ++	2481:33:71397:71399	3925758	2	True				
ANR	3925789	Identifier	i		3925758	0					
ANR	3925790	IncDec	++		3925758	1					
ANR	3925791	CompoundStatement		5:2:108:142	3925758	3					
ANR	3925792	IdentifierDeclStatement	zend_ast * var_ast = list -> child [ i ] ;	2482:2:71406:71440	3925758	0	True				
ANR	3925793	IdentifierDecl	* var_ast = list -> child [ i ]		3925758	0					
ANR	3925794	IdentifierDeclType	zend_ast *		3925758	0					
ANR	3925795	Identifier	var_ast		3925758	1					
ANR	3925796	AssignmentExpression	* var_ast = list -> child [ i ]		3925758	2		=			
ANR	3925797	Identifier	var_ast		3925758	0					
ANR	3925798	ArrayIndexing	list -> child [ i ]		3925758	1					
ANR	3925799	PtrMemberAccess	list -> child		3925758	0					
ANR	3925800	Identifier	list		3925758	0					
ANR	3925801	Identifier	child		3925758	1					
ANR	3925802	Identifier	i		3925758	1					
ANR	3925803	IfStatement	if ( ! var_ast )		3925758	1					
ANR	3925804	Condition	! var_ast	2483:6:71448:71455	3925758	0	True				
ANR	3925805	UnaryOperationExpression	! var_ast		3925758	0					
ANR	3925806	UnaryOperator	!		3925758	0					
ANR	3925807	Identifier	var_ast		3925758	1					
ANR	3925808	CompoundStatement		6:16:160:160	3925758	1					
ANR	3925809	ContinueStatement	continue ;	2484:3:71463:71471	3925758	0	True				
ANR	3925810	IfStatement	"if ( var_ast -> kind == ZEND_AST_LIST && zend_list_has_assign_to ( var_ast , name ) )"		3925758	2					
ANR	3925811	Condition	"var_ast -> kind == ZEND_AST_LIST && zend_list_has_assign_to ( var_ast , name )"	2488:6:71525:71596	3925758	0	True				
ANR	3925812	AndExpression	"var_ast -> kind == ZEND_AST_LIST && zend_list_has_assign_to ( var_ast , name )"		3925758	0		&&			
ANR	3925813	EqualityExpression	var_ast -> kind == ZEND_AST_LIST		3925758	0		==			
ANR	3925814	PtrMemberAccess	var_ast -> kind		3925758	0					
ANR	3925815	Identifier	var_ast		3925758	0					
ANR	3925816	Identifier	kind		3925758	1					
ANR	3925817	Identifier	ZEND_AST_LIST		3925758	1					
ANR	3925818	CallExpression	"zend_list_has_assign_to ( var_ast , name )"		3925758	1					
ANR	3925819	Callee	zend_list_has_assign_to		3925758	0					
ANR	3925820	Identifier	zend_list_has_assign_to		3925758	0					
ANR	3925821	ArgumentList	var_ast		3925758	1					
ANR	3925822	Argument	var_ast		3925758	0					
ANR	3925823	Identifier	var_ast		3925758	0					
ANR	3925824	Argument	name		3925758	1					
ANR	3925825	Identifier	name		3925758	0					
ANR	3925826	CompoundStatement		11:80:301:301	3925758	1					
ANR	3925827	ReturnStatement	return 1 ;	2489:3:71604:71612	3925758	0	True				
ANR	3925828	PrimaryExpression	1		3925758	0					
ANR	3925829	IfStatement	if ( var_ast -> kind == ZEND_AST_VAR && var_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL )		3925758	3					
ANR	3925830	Condition	var_ast -> kind == ZEND_AST_VAR && var_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL	2492:6:71625:71697	3925758	0	True				
ANR	3925831	AndExpression	var_ast -> kind == ZEND_AST_VAR && var_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		3925758	0		&&			
ANR	3925832	EqualityExpression	var_ast -> kind == ZEND_AST_VAR		3925758	0		==			
ANR	3925833	PtrMemberAccess	var_ast -> kind		3925758	0					
ANR	3925834	Identifier	var_ast		3925758	0					
ANR	3925835	Identifier	kind		3925758	1					
ANR	3925836	Identifier	ZEND_AST_VAR		3925758	1					
ANR	3925837	EqualityExpression	var_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		3925758	1		==			
ANR	3925838	PtrMemberAccess	var_ast -> child [ 0 ] -> kind		3925758	0					
ANR	3925839	ArrayIndexing	var_ast -> child [ 0 ]		3925758	0					
ANR	3925840	PtrMemberAccess	var_ast -> child		3925758	0					
ANR	3925841	Identifier	var_ast		3925758	0					
ANR	3925842	Identifier	child		3925758	1					
ANR	3925843	PrimaryExpression	0		3925758	1					
ANR	3925844	Identifier	kind		3925758	1					
ANR	3925845	Identifier	ZEND_AST_ZVAL		3925758	1					
ANR	3925846	CompoundStatement		17:3:489:542	3925758	1					
ANR	3925847	IdentifierDeclStatement	zend_string * var_name = zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) ) ;	2493:3:71705:71782	3925758	0	True				
ANR	3925848	IdentifierDecl	* var_name = zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) )		3925758	0					
ANR	3925849	IdentifierDeclType	zend_string *		3925758	0					
ANR	3925850	Identifier	var_name		3925758	1					
ANR	3925851	AssignmentExpression	* var_name = zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) )		3925758	2		=			
ANR	3925852	Identifier	var_name		3925758	0					
ANR	3925853	CallExpression	zval_get_string ( zend_ast_get_zval ( var_ast -> child [ 0 ] ) )		3925758	1					
ANR	3925854	Callee	zval_get_string		3925758	0					
ANR	3925855	Identifier	zval_get_string		3925758	0					
ANR	3925856	ArgumentList	zend_ast_get_zval ( var_ast -> child [ 0 ] )		3925758	1					
ANR	3925857	Argument	zend_ast_get_zval ( var_ast -> child [ 0 ] )		3925758	0					
ANR	3925858	CallExpression	zend_ast_get_zval ( var_ast -> child [ 0 ] )		3925758	0					
ANR	3925859	Callee	zend_ast_get_zval		3925758	0					
ANR	3925860	Identifier	zend_ast_get_zval		3925758	0					
ANR	3925861	ArgumentList	var_ast -> child [ 0 ]		3925758	1					
ANR	3925862	Argument	var_ast -> child [ 0 ]		3925758	0					
ANR	3925863	ArrayIndexing	var_ast -> child [ 0 ]		3925758	0					
ANR	3925864	PtrMemberAccess	var_ast -> child		3925758	0					
ANR	3925865	Identifier	var_ast		3925758	0					
ANR	3925866	Identifier	child		3925758	1					
ANR	3925867	PrimaryExpression	0		3925758	1					
ANR	3925868	IdentifierDeclStatement	"zend_bool result = zend_string_equals ( var_name , name ) ;"	2494:3:71787:71840	3925758	1	True				
ANR	3925869	IdentifierDecl	"result = zend_string_equals ( var_name , name )"		3925758	0					
ANR	3925870	IdentifierDeclType	zend_bool		3925758	0					
ANR	3925871	Identifier	result		3925758	1					
ANR	3925872	AssignmentExpression	"result = zend_string_equals ( var_name , name )"		3925758	2		=			
ANR	3925873	Identifier	result		3925758	0					
ANR	3925874	CallExpression	"zend_string_equals ( var_name , name )"		3925758	1					
ANR	3925875	Callee	zend_string_equals		3925758	0					
ANR	3925876	Identifier	zend_string_equals		3925758	0					
ANR	3925877	ArgumentList	var_name		3925758	1					
ANR	3925878	Argument	var_name		3925758	0					
ANR	3925879	Identifier	var_name		3925758	0					
ANR	3925880	Argument	name		3925758	1					
ANR	3925881	Identifier	name		3925758	0					
ANR	3925882	ExpressionStatement	zend_string_release ( var_name )	2495:3:71845:71874	3925758	2	True				
ANR	3925883	CallExpression	zend_string_release ( var_name )		3925758	0					
ANR	3925884	Callee	zend_string_release		3925758	0					
ANR	3925885	Identifier	zend_string_release		3925758	0					
ANR	3925886	ArgumentList	var_name		3925758	1					
ANR	3925887	Argument	var_name		3925758	0					
ANR	3925888	Identifier	var_name		3925758	0					
ANR	3925889	IfStatement	if ( result )		3925758	3					
ANR	3925890	Condition	result	2496:7:71883:71888	3925758	0	True				
ANR	3925891	Identifier	result		3925758	0					
ANR	3925892	CompoundStatement		19:15:593:593	3925758	1					
ANR	3925893	ReturnStatement	return 1 ;	2497:4:71897:71905	3925758	0	True				
ANR	3925894	PrimaryExpression	1		3925758	0					
ANR	3925895	ReturnStatement	return 0 ;	2502:1:71921:71929	3925758	3	True				
ANR	3925896	PrimaryExpression	0		3925758	0					
ANR	3925897	ReturnType	zend_bool		3925758	1					
ANR	3925898	Identifier	zend_list_has_assign_to		3925758	2					
ANR	3925899	ParameterList	"zend_ast * list_ast , zend_string * name"		3925758	3					
ANR	3925900	Parameter	zend_ast * list_ast	2477:34:71248:71265	3925758	0	True				
ANR	3925901	ParameterType	zend_ast *		3925758	0					
ANR	3925902	Identifier	list_ast		3925758	1					
ANR	3925903	Parameter	zend_string * name	2477:54:71268:71284	3925758	1	True				
ANR	3925904	ParameterType	zend_string *		3925758	0					
ANR	3925905	Identifier	name		3925758	1					
ANR	3925906	CFGEntryNode	ENTRY		3925758		True				
ANR	3925907	CFGExitNode	EXIT		3925758		True				
ANR	3925908	Symbol	zend_string_equals		3925758						
ANR	3925909	Symbol	* var_ast		3925758						
ANR	3925910	Symbol	var_ast -> child [ 0 ] -> kind		3925758						
ANR	3925911	Symbol	result		3925758						
ANR	3925912	Symbol	* * list		3925758						
ANR	3925913	Symbol	var_ast -> kind		3925758						
ANR	3925914	Symbol	ZEND_AST_VAR		3925758						
ANR	3925915	Symbol	* * var_ast		3925758						
ANR	3925916	Symbol	* * * var_ast		3925758						
ANR	3925917	Symbol	ZEND_AST_ZVAL		3925758						
ANR	3925918	Symbol	list_ast		3925758						
ANR	3925919	Symbol	var_ast -> child		3925758						
ANR	3925920	Symbol	var_name		3925758						
ANR	3925921	Symbol	list -> child		3925758						
ANR	3925922	Symbol	i		3925758						
ANR	3925923	Symbol	zval_get_string		3925758						
ANR	3925924	Symbol	list		3925758						
ANR	3925925	Symbol	* * var_ast -> child		3925758						
ANR	3925926	Symbol	zend_ast_get_list		3925758						
ANR	3925927	Symbol	var_ast		3925758						
ANR	3925928	Symbol	* i		3925758						
ANR	3925929	Symbol	* list		3925758						
ANR	3925930	Symbol	ZEND_AST_LIST		3925758						
ANR	3925931	Symbol	name		3925758						
ANR	3925932	Symbol	* list -> child		3925758						
ANR	3925933	Symbol	zend_ast_get_zval		3925758						
ANR	3925934	Symbol	zend_list_has_assign_to		3925758						
ANR	3925935	Symbol	* var_ast -> child		3925758						
ANR	3925936	Symbol	list -> children		3925758						
ANR	3925937	Function	zend_list_has_assign_to_self	2507:0:71994:72452							
ANR	3925938	FunctionDef	"zend_list_has_assign_to_self (zend_ast * list_ast , zend_ast * expr_ast)"		3925937	0					
ANR	3925939	CompoundStatement		2508:0:72083:72452	3925937	0					
ANR	3925940	IfStatement	if ( expr_ast -> kind == ZEND_AST_VAR && expr_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL )		3925937	0					
ANR	3925941	Condition	expr_ast -> kind == ZEND_AST_VAR && expr_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL	2510:5:72173:72247	3925937	0	True				
ANR	3925942	AndExpression	expr_ast -> kind == ZEND_AST_VAR && expr_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		3925937	0		&&			
ANR	3925943	EqualityExpression	expr_ast -> kind == ZEND_AST_VAR		3925937	0		==			
ANR	3925944	PtrMemberAccess	expr_ast -> kind		3925937	0					
ANR	3925945	Identifier	expr_ast		3925937	0					
ANR	3925946	Identifier	kind		3925937	1					
ANR	3925947	Identifier	ZEND_AST_VAR		3925937	1					
ANR	3925948	EqualityExpression	expr_ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		3925937	1		==			
ANR	3925949	PtrMemberAccess	expr_ast -> child [ 0 ] -> kind		3925937	0					
ANR	3925950	ArrayIndexing	expr_ast -> child [ 0 ]		3925937	0					
ANR	3925951	PtrMemberAccess	expr_ast -> child		3925937	0					
ANR	3925952	Identifier	expr_ast		3925937	0					
ANR	3925953	Identifier	child		3925937	1					
ANR	3925954	PrimaryExpression	0		3925937	1					
ANR	3925955	Identifier	kind		3925937	1					
ANR	3925956	Identifier	ZEND_AST_ZVAL		3925937	1					
ANR	3925957	CompoundStatement		5:2:248:306	3925937	1					
ANR	3925958	IdentifierDeclStatement	zend_string * name = zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) ) ;	2511:2:72254:72328	3925937	0	True				
ANR	3925959	IdentifierDecl	* name = zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) )		3925937	0					
ANR	3925960	IdentifierDeclType	zend_string *		3925937	0					
ANR	3925961	Identifier	name		3925937	1					
ANR	3925962	AssignmentExpression	* name = zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) )		3925937	2		=			
ANR	3925963	Identifier	name		3925937	0					
ANR	3925964	CallExpression	zval_get_string ( zend_ast_get_zval ( expr_ast -> child [ 0 ] ) )		3925937	1					
ANR	3925965	Callee	zval_get_string		3925937	0					
ANR	3925966	Identifier	zval_get_string		3925937	0					
ANR	3925967	ArgumentList	zend_ast_get_zval ( expr_ast -> child [ 0 ] )		3925937	1					
ANR	3925968	Argument	zend_ast_get_zval ( expr_ast -> child [ 0 ] )		3925937	0					
ANR	3925969	CallExpression	zend_ast_get_zval ( expr_ast -> child [ 0 ] )		3925937	0					
ANR	3925970	Callee	zend_ast_get_zval		3925937	0					
ANR	3925971	Identifier	zend_ast_get_zval		3925937	0					
ANR	3925972	ArgumentList	expr_ast -> child [ 0 ]		3925937	1					
ANR	3925973	Argument	expr_ast -> child [ 0 ]		3925937	0					
ANR	3925974	ArrayIndexing	expr_ast -> child [ 0 ]		3925937	0					
ANR	3925975	PtrMemberAccess	expr_ast -> child		3925937	0					
ANR	3925976	Identifier	expr_ast		3925937	0					
ANR	3925977	Identifier	child		3925937	1					
ANR	3925978	PrimaryExpression	0		3925937	1					
ANR	3925979	IdentifierDeclStatement	"zend_bool result = zend_list_has_assign_to ( list_ast , name ) ;"	2512:2:72332:72390	3925937	1	True				
ANR	3925980	IdentifierDecl	"result = zend_list_has_assign_to ( list_ast , name )"		3925937	0					
ANR	3925981	IdentifierDeclType	zend_bool		3925937	0					
ANR	3925982	Identifier	result		3925937	1					
ANR	3925983	AssignmentExpression	"result = zend_list_has_assign_to ( list_ast , name )"		3925937	2		=			
ANR	3925984	Identifier	result		3925937	0					
ANR	3925985	CallExpression	"zend_list_has_assign_to ( list_ast , name )"		3925937	1					
ANR	3925986	Callee	zend_list_has_assign_to		3925937	0					
ANR	3925987	Identifier	zend_list_has_assign_to		3925937	0					
ANR	3925988	ArgumentList	list_ast		3925937	1					
ANR	3925989	Argument	list_ast		3925937	0					
ANR	3925990	Identifier	list_ast		3925937	0					
ANR	3925991	Argument	name		3925937	1					
ANR	3925992	Identifier	name		3925937	0					
ANR	3925993	ExpressionStatement	zend_string_release ( name )	2513:2:72394:72419	3925937	2	True				
ANR	3925994	CallExpression	zend_string_release ( name )		3925937	0					
ANR	3925995	Callee	zend_string_release		3925937	0					
ANR	3925996	Identifier	zend_string_release		3925937	0					
ANR	3925997	ArgumentList	name		3925937	1					
ANR	3925998	Argument	name		3925937	0					
ANR	3925999	Identifier	name		3925937	0					
ANR	3926000	ReturnStatement	return result ;	2514:2:72423:72436	3925937	3	True				
ANR	3926001	Identifier	result		3925937	0					
ANR	3926002	ReturnStatement	return 0 ;	2516:1:72442:72450	3925937	1	True				
ANR	3926003	PrimaryExpression	0		3925937	0					
ANR	3926004	ReturnType	zend_bool		3925937	1					
ANR	3926005	Identifier	zend_list_has_assign_to_self		3925937	2					
ANR	3926006	ParameterList	"zend_ast * list_ast , zend_ast * expr_ast"		3925937	3					
ANR	3926007	Parameter	zend_ast * list_ast	2507:39:72033:72050	3925937	0	True				
ANR	3926008	ParameterType	zend_ast *		3925937	0					
ANR	3926009	Identifier	list_ast		3925937	1					
ANR	3926010	Parameter	zend_ast * expr_ast	2507:59:72053:72070	3925937	1	True				
ANR	3926011	ParameterType	zend_ast *		3925937	0					
ANR	3926012	Identifier	expr_ast		3925937	1					
ANR	3926013	CFGEntryNode	ENTRY		3925937		True				
ANR	3926014	CFGExitNode	EXIT		3925937		True				
ANR	3926015	Symbol	expr_ast -> kind		3925937						
ANR	3926016	Symbol	* expr_ast		3925937						
ANR	3926017	Symbol	expr_ast -> child [ 0 ] -> kind		3925937						
ANR	3926018	Symbol	expr_ast -> child		3925937						
ANR	3926019	Symbol	* * expr_ast -> child		3925937						
ANR	3926020	Symbol	zval_get_string		3925937						
ANR	3926021	Symbol	expr_ast		3925937						
ANR	3926022	Symbol	* * expr_ast		3925937						
ANR	3926023	Symbol	result		3925937						
ANR	3926024	Symbol	* expr_ast -> child		3925937						
ANR	3926025	Symbol	* * * expr_ast		3925937						
ANR	3926026	Symbol	ZEND_AST_VAR		3925937						
ANR	3926027	Symbol	ZEND_AST_ZVAL		3925937						
ANR	3926028	Symbol	list_ast		3925937						
ANR	3926029	Symbol	name		3925937						
ANR	3926030	Symbol	zend_ast_get_zval		3925937						
ANR	3926031	Symbol	zend_list_has_assign_to		3925937						
ANR	3926032	Function	zend_compile_assign	2520:0:72465:74230							
ANR	3926033	FunctionDef	"zend_compile_assign (znode * result , zend_ast * ast)"		3926032	0					
ANR	3926034	CompoundStatement		2521:0:72530:74230	3926032	0					
ANR	3926035	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	2522:1:72533:72566	3926032	0	True				
ANR	3926036	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3926032	0					
ANR	3926037	IdentifierDeclType	zend_ast *		3926032	0					
ANR	3926038	Identifier	var_ast		3926032	1					
ANR	3926039	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3926032	2		=			
ANR	3926040	Identifier	var_ast		3926032	0					
ANR	3926041	ArrayIndexing	ast -> child [ 0 ]		3926032	1					
ANR	3926042	PtrMemberAccess	ast -> child		3926032	0					
ANR	3926043	Identifier	ast		3926032	0					
ANR	3926044	Identifier	child		3926032	1					
ANR	3926045	PrimaryExpression	0		3926032	1					
ANR	3926046	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 1 ] ;	2523:1:72569:72603	3926032	1	True				
ANR	3926047	IdentifierDecl	* expr_ast = ast -> child [ 1 ]		3926032	0					
ANR	3926048	IdentifierDeclType	zend_ast *		3926032	0					
ANR	3926049	Identifier	expr_ast		3926032	1					
ANR	3926050	AssignmentExpression	* expr_ast = ast -> child [ 1 ]		3926032	2		=			
ANR	3926051	Identifier	expr_ast		3926032	0					
ANR	3926052	ArrayIndexing	ast -> child [ 1 ]		3926032	1					
ANR	3926053	PtrMemberAccess	ast -> child		3926032	0					
ANR	3926054	Identifier	ast		3926032	0					
ANR	3926055	Identifier	child		3926032	1					
ANR	3926056	PrimaryExpression	1		3926032	1					
ANR	3926057	IdentifierDeclStatement	"znode var_node , expr_node ;"	2525:1:72607:72632	3926032	2	True				
ANR	3926058	IdentifierDecl	var_node		3926032	0					
ANR	3926059	IdentifierDeclType	znode		3926032	0					
ANR	3926060	Identifier	var_node		3926032	1					
ANR	3926061	IdentifierDecl	expr_node		3926032	1					
ANR	3926062	IdentifierDeclType	znode		3926032	0					
ANR	3926063	Identifier	expr_node		3926032	1					
ANR	3926064	IdentifierDeclStatement	zend_op * opline ;	2526:1:72635:72650	3926032	3	True				
ANR	3926065	IdentifierDecl	* opline		3926032	0					
ANR	3926066	IdentifierDeclType	zend_op *		3926032	0					
ANR	3926067	Identifier	opline		3926032	1					
ANR	3926068	IdentifierDeclStatement	uint32_t offset ;	2527:1:72653:72668	3926032	4	True				
ANR	3926069	IdentifierDecl	offset		3926032	0					
ANR	3926070	IdentifierDeclType	uint32_t		3926032	0					
ANR	3926071	Identifier	offset		3926032	1					
ANR	3926072	IfStatement	if ( is_this_fetch ( var_ast ) )		3926032	5					
ANR	3926073	Condition	is_this_fetch ( var_ast )	2529:5:72676:72697	3926032	0	True				
ANR	3926074	CallExpression	is_this_fetch ( var_ast )		3926032	0					
ANR	3926075	Callee	is_this_fetch		3926032	0					
ANR	3926076	Identifier	is_this_fetch		3926032	0					
ANR	3926077	ArgumentList	var_ast		3926032	1					
ANR	3926078	Argument	var_ast		3926032	0					
ANR	3926079	Identifier	var_ast		3926032	0					
ANR	3926080	CompoundStatement		9:29:169:169	3926032	1					
ANR	3926081	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign $this"" )"	2530:2:72704:72766	3926032	0	True				
ANR	3926082	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign $this"" )"		3926032	0					
ANR	3926083	Callee	zend_error_noreturn		3926032	0					
ANR	3926084	Identifier	zend_error_noreturn		3926032	0					
ANR	3926085	ArgumentList	E_COMPILE_ERROR		3926032	1					
ANR	3926086	Argument	E_COMPILE_ERROR		3926032	0					
ANR	3926087	Identifier	E_COMPILE_ERROR		3926032	0					
ANR	3926088	Argument	"""Cannot re-assign $this"""		3926032	1					
ANR	3926089	PrimaryExpression	"""Cannot re-assign $this"""		3926032	0					
ANR	3926090	ExpressionStatement	zend_ensure_writable_variable ( var_ast )	2533:1:72773:72811	3926032	6	True				
ANR	3926091	CallExpression	zend_ensure_writable_variable ( var_ast )		3926032	0					
ANR	3926092	Callee	zend_ensure_writable_variable		3926032	0					
ANR	3926093	Identifier	zend_ensure_writable_variable		3926032	0					
ANR	3926094	ArgumentList	var_ast		3926032	1					
ANR	3926095	Argument	var_ast		3926032	0					
ANR	3926096	Identifier	var_ast		3926032	0					
ANR	3926097	SwitchStatement	switch ( var_ast -> kind )		3926032	7					
ANR	3926098	Condition	var_ast -> kind	2535:9:72823:72835	3926032	0	True				
ANR	3926099	PtrMemberAccess	var_ast -> kind		3926032	0					
ANR	3926100	Identifier	var_ast		3926032	0					
ANR	3926101	Identifier	kind		3926032	1					
ANR	3926102	CompoundStatement		15:24:307:307	3926032	1					
ANR	3926103	Label	case ZEND_AST_VAR :	2536:2:72842:72859	3926032	0	True				
ANR	3926104	Identifier	ZEND_AST_VAR		3926032	0					
ANR	3926105	Label	case ZEND_AST_STATIC_PROP :	2537:2:72863:72888	3926032	1	True				
ANR	3926106	Identifier	ZEND_AST_STATIC_PROP		3926032	0					
ANR	3926107	ExpressionStatement	"zend_compile_var ( & var_node , var_ast , BP_VAR_W )"	2538:3:72893:72939	3926032	2	True				
ANR	3926108	CallExpression	"zend_compile_var ( & var_node , var_ast , BP_VAR_W )"		3926032	0					
ANR	3926109	Callee	zend_compile_var		3926032	0					
ANR	3926110	Identifier	zend_compile_var		3926032	0					
ANR	3926111	ArgumentList	& var_node		3926032	1					
ANR	3926112	Argument	& var_node		3926032	0					
ANR	3926113	UnaryOperationExpression	& var_node		3926032	0					
ANR	3926114	UnaryOperator	&		3926032	0					
ANR	3926115	Identifier	var_node		3926032	1					
ANR	3926116	Argument	var_ast		3926032	1					
ANR	3926117	Identifier	var_ast		3926032	0					
ANR	3926118	Argument	BP_VAR_W		3926032	2					
ANR	3926119	Identifier	BP_VAR_W		3926032	0					
ANR	3926120	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	2539:3:72944:72983	3926032	3	True				
ANR	3926121	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3926032	0					
ANR	3926122	Callee	zend_compile_expr		3926032	0					
ANR	3926123	Identifier	zend_compile_expr		3926032	0					
ANR	3926124	ArgumentList	& expr_node		3926032	1					
ANR	3926125	Argument	& expr_node		3926032	0					
ANR	3926126	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926127	UnaryOperator	&		3926032	0					
ANR	3926128	Identifier	expr_node		3926032	1					
ANR	3926129	Argument	expr_ast		3926032	1					
ANR	3926130	Identifier	expr_ast		3926032	0					
ANR	3926131	ExpressionStatement	"zend_emit_op ( result , ZEND_ASSIGN , & var_node , & expr_node )"	2540:3:72988:73044	3926032	4	True				
ANR	3926132	CallExpression	"zend_emit_op ( result , ZEND_ASSIGN , & var_node , & expr_node )"		3926032	0					
ANR	3926133	Callee	zend_emit_op		3926032	0					
ANR	3926134	Identifier	zend_emit_op		3926032	0					
ANR	3926135	ArgumentList	result		3926032	1					
ANR	3926136	Argument	result		3926032	0					
ANR	3926137	Identifier	result		3926032	0					
ANR	3926138	Argument	ZEND_ASSIGN		3926032	1					
ANR	3926139	Identifier	ZEND_ASSIGN		3926032	0					
ANR	3926140	Argument	& var_node		3926032	2					
ANR	3926141	UnaryOperationExpression	& var_node		3926032	0					
ANR	3926142	UnaryOperator	&		3926032	0					
ANR	3926143	Identifier	var_node		3926032	1					
ANR	3926144	Argument	& expr_node		3926032	3					
ANR	3926145	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926146	UnaryOperator	&		3926032	0					
ANR	3926147	Identifier	expr_node		3926032	1					
ANR	3926148	ReturnStatement	return ;	2541:3:73049:73055	3926032	5	True				
ANR	3926149	Label	case ZEND_AST_DIM :	2542:2:73059:73076	3926032	6	True				
ANR	3926150	Identifier	ZEND_AST_DIM		3926032	0					
ANR	3926151	ExpressionStatement	offset = zend_delayed_compile_begin ( )	2543:3:73081:73118	3926032	7	True				
ANR	3926152	AssignmentExpression	offset = zend_delayed_compile_begin ( )		3926032	0		=			
ANR	3926153	Identifier	offset		3926032	0					
ANR	3926154	CallExpression	zend_delayed_compile_begin ( )		3926032	1					
ANR	3926155	Callee	zend_delayed_compile_begin		3926032	0					
ANR	3926156	Identifier	zend_delayed_compile_begin		3926032	0					
ANR	3926157	ArgumentList			3926032	1					
ANR	3926158	ExpressionStatement	"zend_delayed_compile_dim ( result , var_ast , BP_VAR_W )"	2544:3:73123:73174	3926032	8	True				
ANR	3926159	CallExpression	"zend_delayed_compile_dim ( result , var_ast , BP_VAR_W )"		3926032	0					
ANR	3926160	Callee	zend_delayed_compile_dim		3926032	0					
ANR	3926161	Identifier	zend_delayed_compile_dim		3926032	0					
ANR	3926162	ArgumentList	result		3926032	1					
ANR	3926163	Argument	result		3926032	0					
ANR	3926164	Identifier	result		3926032	0					
ANR	3926165	Argument	var_ast		3926032	1					
ANR	3926166	Identifier	var_ast		3926032	0					
ANR	3926167	Argument	BP_VAR_W		3926032	2					
ANR	3926168	Identifier	BP_VAR_W		3926032	0					
ANR	3926169	IfStatement	"if ( zend_is_assign_to_self ( var_ast , expr_ast ) )"		3926032	9					
ANR	3926170	Condition	"zend_is_assign_to_self ( var_ast , expr_ast )"	2546:7:73184:73224	3926032	0	True				
ANR	3926171	CallExpression	"zend_is_assign_to_self ( var_ast , expr_ast )"		3926032	0					
ANR	3926172	Callee	zend_is_assign_to_self		3926032	0					
ANR	3926173	Identifier	zend_is_assign_to_self		3926032	0					
ANR	3926174	ArgumentList	var_ast		3926032	1					
ANR	3926175	Argument	var_ast		3926032	0					
ANR	3926176	Identifier	var_ast		3926032	0					
ANR	3926177	Argument	expr_ast		3926032	1					
ANR	3926178	Identifier	expr_ast		3926032	0					
ANR	3926179	CompoundStatement		26:50:696:696	3926032	1					
ANR	3926180	ExpressionStatement	"zend_compile_simple_var_no_cv ( & expr_node , expr_ast , BP_VAR_R , 0 )"	2548:4:73289:73353	3926032	0	True				
ANR	3926181	CallExpression	"zend_compile_simple_var_no_cv ( & expr_node , expr_ast , BP_VAR_R , 0 )"		3926032	0					
ANR	3926182	Callee	zend_compile_simple_var_no_cv		3926032	0					
ANR	3926183	Identifier	zend_compile_simple_var_no_cv		3926032	0					
ANR	3926184	ArgumentList	& expr_node		3926032	1					
ANR	3926185	Argument	& expr_node		3926032	0					
ANR	3926186	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926187	UnaryOperator	&		3926032	0					
ANR	3926188	Identifier	expr_node		3926032	1					
ANR	3926189	Argument	expr_ast		3926032	1					
ANR	3926190	Identifier	expr_ast		3926032	0					
ANR	3926191	Argument	BP_VAR_R		3926032	2					
ANR	3926192	Identifier	BP_VAR_R		3926032	0					
ANR	3926193	Argument	0		3926032	3					
ANR	3926194	PrimaryExpression	0		3926032	0					
ANR	3926195	ElseStatement	else		3926032	0					
ANR	3926196	CompoundStatement		29:10:834:834	3926032	0					
ANR	3926197	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	2550:4:73371:73410	3926032	0	True				
ANR	3926198	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3926032	0					
ANR	3926199	Callee	zend_compile_expr		3926032	0					
ANR	3926200	Identifier	zend_compile_expr		3926032	0					
ANR	3926201	ArgumentList	& expr_node		3926032	1					
ANR	3926202	Argument	& expr_node		3926032	0					
ANR	3926203	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926204	UnaryOperator	&		3926032	0					
ANR	3926205	Identifier	expr_node		3926032	1					
ANR	3926206	Argument	expr_ast		3926032	1					
ANR	3926207	Identifier	expr_ast		3926032	0					
ANR	3926208	ExpressionStatement	opline = zend_delayed_compile_end ( offset )	2553:3:73421:73462	3926032	10	True				
ANR	3926209	AssignmentExpression	opline = zend_delayed_compile_end ( offset )		3926032	0		=			
ANR	3926210	Identifier	opline		3926032	0					
ANR	3926211	CallExpression	zend_delayed_compile_end ( offset )		3926032	1					
ANR	3926212	Callee	zend_delayed_compile_end		3926032	0					
ANR	3926213	Identifier	zend_delayed_compile_end		3926032	0					
ANR	3926214	ArgumentList	offset		3926032	1					
ANR	3926215	Argument	offset		3926032	0					
ANR	3926216	Identifier	offset		3926032	0					
ANR	3926217	ExpressionStatement	opline -> opcode = ZEND_ASSIGN_DIM	2554:3:73467:73499	3926032	11	True				
ANR	3926218	AssignmentExpression	opline -> opcode = ZEND_ASSIGN_DIM		3926032	0		=			
ANR	3926219	PtrMemberAccess	opline -> opcode		3926032	0					
ANR	3926220	Identifier	opline		3926032	0					
ANR	3926221	Identifier	opcode		3926032	1					
ANR	3926222	Identifier	ZEND_ASSIGN_DIM		3926032	1					
ANR	3926223	ExpressionStatement	opline = zend_emit_op_data ( & expr_node )	2556:3:73505:73543	3926032	12	True				
ANR	3926224	AssignmentExpression	opline = zend_emit_op_data ( & expr_node )		3926032	0		=			
ANR	3926225	Identifier	opline		3926032	0					
ANR	3926226	CallExpression	zend_emit_op_data ( & expr_node )		3926032	1					
ANR	3926227	Callee	zend_emit_op_data		3926032	0					
ANR	3926228	Identifier	zend_emit_op_data		3926032	0					
ANR	3926229	ArgumentList	& expr_node		3926032	1					
ANR	3926230	Argument	& expr_node		3926032	0					
ANR	3926231	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926232	UnaryOperator	&		3926032	0					
ANR	3926233	Identifier	expr_node		3926032	1					
ANR	3926234	ReturnStatement	return ;	2557:3:73548:73554	3926032	13	True				
ANR	3926235	Label	case ZEND_AST_PROP :	2558:2:73558:73576	3926032	14	True				
ANR	3926236	Identifier	ZEND_AST_PROP		3926032	0					
ANR	3926237	ExpressionStatement	offset = zend_delayed_compile_begin ( )	2559:3:73581:73618	3926032	15	True				
ANR	3926238	AssignmentExpression	offset = zend_delayed_compile_begin ( )		3926032	0		=			
ANR	3926239	Identifier	offset		3926032	0					
ANR	3926240	CallExpression	zend_delayed_compile_begin ( )		3926032	1					
ANR	3926241	Callee	zend_delayed_compile_begin		3926032	0					
ANR	3926242	Identifier	zend_delayed_compile_begin		3926032	0					
ANR	3926243	ArgumentList			3926032	1					
ANR	3926244	ExpressionStatement	"zend_delayed_compile_prop ( result , var_ast , BP_VAR_W )"	2560:3:73623:73675	3926032	16	True				
ANR	3926245	CallExpression	"zend_delayed_compile_prop ( result , var_ast , BP_VAR_W )"		3926032	0					
ANR	3926246	Callee	zend_delayed_compile_prop		3926032	0					
ANR	3926247	Identifier	zend_delayed_compile_prop		3926032	0					
ANR	3926248	ArgumentList	result		3926032	1					
ANR	3926249	Argument	result		3926032	0					
ANR	3926250	Identifier	result		3926032	0					
ANR	3926251	Argument	var_ast		3926032	1					
ANR	3926252	Identifier	var_ast		3926032	0					
ANR	3926253	Argument	BP_VAR_W		3926032	2					
ANR	3926254	Identifier	BP_VAR_W		3926032	0					
ANR	3926255	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	2561:3:73680:73719	3926032	17	True				
ANR	3926256	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3926032	0					
ANR	3926257	Callee	zend_compile_expr		3926032	0					
ANR	3926258	Identifier	zend_compile_expr		3926032	0					
ANR	3926259	ArgumentList	& expr_node		3926032	1					
ANR	3926260	Argument	& expr_node		3926032	0					
ANR	3926261	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926262	UnaryOperator	&		3926032	0					
ANR	3926263	Identifier	expr_node		3926032	1					
ANR	3926264	Argument	expr_ast		3926032	1					
ANR	3926265	Identifier	expr_ast		3926032	0					
ANR	3926266	ExpressionStatement	opline = zend_delayed_compile_end ( offset )	2563:3:73725:73766	3926032	18	True				
ANR	3926267	AssignmentExpression	opline = zend_delayed_compile_end ( offset )		3926032	0		=			
ANR	3926268	Identifier	opline		3926032	0					
ANR	3926269	CallExpression	zend_delayed_compile_end ( offset )		3926032	1					
ANR	3926270	Callee	zend_delayed_compile_end		3926032	0					
ANR	3926271	Identifier	zend_delayed_compile_end		3926032	0					
ANR	3926272	ArgumentList	offset		3926032	1					
ANR	3926273	Argument	offset		3926032	0					
ANR	3926274	Identifier	offset		3926032	0					
ANR	3926275	ExpressionStatement	opline -> opcode = ZEND_ASSIGN_OBJ	2564:3:73771:73803	3926032	19	True				
ANR	3926276	AssignmentExpression	opline -> opcode = ZEND_ASSIGN_OBJ		3926032	0		=			
ANR	3926277	PtrMemberAccess	opline -> opcode		3926032	0					
ANR	3926278	Identifier	opline		3926032	0					
ANR	3926279	Identifier	opcode		3926032	1					
ANR	3926280	Identifier	ZEND_ASSIGN_OBJ		3926032	1					
ANR	3926281	ExpressionStatement	zend_emit_op_data ( & expr_node )	2566:3:73809:73838	3926032	20	True				
ANR	3926282	CallExpression	zend_emit_op_data ( & expr_node )		3926032	0					
ANR	3926283	Callee	zend_emit_op_data		3926032	0					
ANR	3926284	Identifier	zend_emit_op_data		3926032	0					
ANR	3926285	ArgumentList	& expr_node		3926032	1					
ANR	3926286	Argument	& expr_node		3926032	0					
ANR	3926287	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926288	UnaryOperator	&		3926032	0					
ANR	3926289	Identifier	expr_node		3926032	1					
ANR	3926290	ReturnStatement	return ;	2567:3:73843:73849	3926032	21	True				
ANR	3926291	Label	case ZEND_AST_LIST :	2568:2:73853:73871	3926032	22	True				
ANR	3926292	Identifier	ZEND_AST_LIST		3926032	0					
ANR	3926293	IfStatement	"if ( zend_list_has_assign_to_self ( var_ast , expr_ast ) )"		3926032	23					
ANR	3926294	Condition	"zend_list_has_assign_to_self ( var_ast , expr_ast )"	2569:7:73880:73926	3926032	0	True				
ANR	3926295	CallExpression	"zend_list_has_assign_to_self ( var_ast , expr_ast )"		3926032	0					
ANR	3926296	Callee	zend_list_has_assign_to_self		3926032	0					
ANR	3926297	Identifier	zend_list_has_assign_to_self		3926032	0					
ANR	3926298	ArgumentList	var_ast		3926032	1					
ANR	3926299	Argument	var_ast		3926032	0					
ANR	3926300	Identifier	var_ast		3926032	0					
ANR	3926301	Argument	expr_ast		3926032	1					
ANR	3926302	Identifier	expr_ast		3926032	0					
ANR	3926303	CompoundStatement		49:56:1398:1398	3926032	1					
ANR	3926304	ExpressionStatement	"zend_compile_simple_var_no_cv ( & expr_node , expr_ast , BP_VAR_R , 0 )"	2571:4:73998:74062	3926032	0	True				
ANR	3926305	CallExpression	"zend_compile_simple_var_no_cv ( & expr_node , expr_ast , BP_VAR_R , 0 )"		3926032	0					
ANR	3926306	Callee	zend_compile_simple_var_no_cv		3926032	0					
ANR	3926307	Identifier	zend_compile_simple_var_no_cv		3926032	0					
ANR	3926308	ArgumentList	& expr_node		3926032	1					
ANR	3926309	Argument	& expr_node		3926032	0					
ANR	3926310	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926311	UnaryOperator	&		3926032	0					
ANR	3926312	Identifier	expr_node		3926032	1					
ANR	3926313	Argument	expr_ast		3926032	1					
ANR	3926314	Identifier	expr_ast		3926032	0					
ANR	3926315	Argument	BP_VAR_R		3926032	2					
ANR	3926316	Identifier	BP_VAR_R		3926032	0					
ANR	3926317	Argument	0		3926032	3					
ANR	3926318	PrimaryExpression	0		3926032	0					
ANR	3926319	ElseStatement	else		3926032	0					
ANR	3926320	CompoundStatement		52:10:1543:1543	3926032	0					
ANR	3926321	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	2573:4:74080:74119	3926032	0	True				
ANR	3926322	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3926032	0					
ANR	3926323	Callee	zend_compile_expr		3926032	0					
ANR	3926324	Identifier	zend_compile_expr		3926032	0					
ANR	3926325	ArgumentList	& expr_node		3926032	1					
ANR	3926326	Argument	& expr_node		3926032	0					
ANR	3926327	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926328	UnaryOperator	&		3926032	0					
ANR	3926329	Identifier	expr_node		3926032	1					
ANR	3926330	Argument	expr_ast		3926032	1					
ANR	3926331	Identifier	expr_ast		3926032	0					
ANR	3926332	ExpressionStatement	"zend_compile_list_assign ( result , var_ast , & expr_node )"	2576:3:74130:74183	3926032	24	True				
ANR	3926333	CallExpression	"zend_compile_list_assign ( result , var_ast , & expr_node )"		3926032	0					
ANR	3926334	Callee	zend_compile_list_assign		3926032	0					
ANR	3926335	Identifier	zend_compile_list_assign		3926032	0					
ANR	3926336	ArgumentList	result		3926032	1					
ANR	3926337	Argument	result		3926032	0					
ANR	3926338	Identifier	result		3926032	0					
ANR	3926339	Argument	var_ast		3926032	1					
ANR	3926340	Identifier	var_ast		3926032	0					
ANR	3926341	Argument	& expr_node		3926032	2					
ANR	3926342	UnaryOperationExpression	& expr_node		3926032	0					
ANR	3926343	UnaryOperator	&		3926032	0					
ANR	3926344	Identifier	expr_node		3926032	1					
ANR	3926345	ReturnStatement	return ;	2577:3:74188:74194	3926032	25	True				
ANR	3926346	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	2578:2:74198:74225	3926032	26	True				
ANR	3926347	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3926032	0					
ANR	3926348	Callee	EMPTY_SWITCH_DEFAULT_CASE		3926032	0					
ANR	3926349	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3926032	0					
ANR	3926350	ArgumentList			3926032	1					
ANR	3926351	ReturnType	void		3926032	1					
ANR	3926352	Identifier	zend_compile_assign		3926032	2					
ANR	3926353	ParameterList	"znode * result , zend_ast * ast"		3926032	3					
ANR	3926354	Parameter	znode * result	2520:25:72490:72502	3926032	0	True				
ANR	3926355	ParameterType	znode *		3926032	0					
ANR	3926356	Identifier	result		3926032	1					
ANR	3926357	Parameter	zend_ast * ast	2520:40:72505:72517	3926032	1	True				
ANR	3926358	ParameterType	zend_ast *		3926032	0					
ANR	3926359	Identifier	ast		3926032	1					
ANR	3926360	CFGEntryNode	ENTRY		3926032		True				
ANR	3926361	CFGExitNode	EXIT		3926032		True				
ANR	3926362	Symbol	zend_delayed_compile_end		3926032						
ANR	3926363	Symbol	ast		3926032						
ANR	3926364	Symbol	E_COMPILE_ERROR		3926032						
ANR	3926365	Symbol	zend_is_assign_to_self		3926032						
ANR	3926366	Symbol	* var_ast		3926032						
ANR	3926367	Symbol	& expr_node		3926032						
ANR	3926368	Symbol	result		3926032						
ANR	3926369	Symbol	* ast		3926032						
ANR	3926370	Symbol	opline		3926032						
ANR	3926371	Symbol	zend_delayed_compile_begin		3926032						
ANR	3926372	Symbol	var_ast -> kind		3926032						
ANR	3926373	Symbol	* * ast		3926032						
ANR	3926374	Symbol	zend_list_has_assign_to_self		3926032						
ANR	3926375	Symbol	BP_VAR_W		3926032						
ANR	3926376	Symbol	BP_VAR_R		3926032						
ANR	3926377	Symbol	is_this_fetch		3926032						
ANR	3926378	Symbol	ZEND_ASSIGN		3926032						
ANR	3926379	Symbol	var_node		3926032						
ANR	3926380	Symbol	offset		3926032						
ANR	3926381	Symbol	& var_node		3926032						
ANR	3926382	Symbol	ZEND_ASSIGN_OBJ		3926032						
ANR	3926383	Symbol	expr_ast		3926032						
ANR	3926384	Symbol	expr_node		3926032						
ANR	3926385	Symbol	var_ast		3926032						
ANR	3926386	Symbol	ZEND_ASSIGN_DIM		3926032						
ANR	3926387	Symbol	* opline		3926032						
ANR	3926388	Symbol	opline -> opcode		3926032						
ANR	3926389	Symbol	zend_emit_op_data		3926032						
ANR	3926390	Symbol	* ast -> child		3926032						
ANR	3926391	Symbol	ast -> child		3926032						
ANR	3926392	Function	zend_compile_assign_ref	2583:0:74243:75100							
ANR	3926393	FunctionDef	"zend_compile_assign_ref (znode * result , zend_ast * ast)"		3926392	0					
ANR	3926394	CompoundStatement		2584:0:74312:75100	3926392	0					
ANR	3926395	IdentifierDeclStatement	zend_ast * target_ast = ast -> child [ 0 ] ;	2585:1:74315:74351	3926392	0	True				
ANR	3926396	IdentifierDecl	* target_ast = ast -> child [ 0 ]		3926392	0					
ANR	3926397	IdentifierDeclType	zend_ast *		3926392	0					
ANR	3926398	Identifier	target_ast		3926392	1					
ANR	3926399	AssignmentExpression	* target_ast = ast -> child [ 0 ]		3926392	2		=			
ANR	3926400	Identifier	target_ast		3926392	0					
ANR	3926401	ArrayIndexing	ast -> child [ 0 ]		3926392	1					
ANR	3926402	PtrMemberAccess	ast -> child		3926392	0					
ANR	3926403	Identifier	ast		3926392	0					
ANR	3926404	Identifier	child		3926392	1					
ANR	3926405	PrimaryExpression	0		3926392	1					
ANR	3926406	IdentifierDeclStatement	zend_ast * source_ast = ast -> child [ 1 ] ;	2586:1:74354:74390	3926392	1	True				
ANR	3926407	IdentifierDecl	* source_ast = ast -> child [ 1 ]		3926392	0					
ANR	3926408	IdentifierDeclType	zend_ast *		3926392	0					
ANR	3926409	Identifier	source_ast		3926392	1					
ANR	3926410	AssignmentExpression	* source_ast = ast -> child [ 1 ]		3926392	2		=			
ANR	3926411	Identifier	source_ast		3926392	0					
ANR	3926412	ArrayIndexing	ast -> child [ 1 ]		3926392	1					
ANR	3926413	PtrMemberAccess	ast -> child		3926392	0					
ANR	3926414	Identifier	ast		3926392	0					
ANR	3926415	Identifier	child		3926392	1					
ANR	3926416	PrimaryExpression	1		3926392	1					
ANR	3926417	IdentifierDeclStatement	"znode target_node , source_node ;"	2588:1:74394:74424	3926392	2	True				
ANR	3926418	IdentifierDecl	target_node		3926392	0					
ANR	3926419	IdentifierDeclType	znode		3926392	0					
ANR	3926420	Identifier	target_node		3926392	1					
ANR	3926421	IdentifierDecl	source_node		3926392	1					
ANR	3926422	IdentifierDeclType	znode		3926392	0					
ANR	3926423	Identifier	source_node		3926392	1					
ANR	3926424	IdentifierDeclStatement	zend_op * opline ;	2589:1:74427:74442	3926392	3	True				
ANR	3926425	IdentifierDecl	* opline		3926392	0					
ANR	3926426	IdentifierDeclType	zend_op *		3926392	0					
ANR	3926427	Identifier	opline		3926392	1					
ANR	3926428	IfStatement	if ( is_this_fetch ( target_ast ) )		3926392	4					
ANR	3926429	Condition	is_this_fetch ( target_ast )	2591:5:74450:74474	3926392	0	True				
ANR	3926430	CallExpression	is_this_fetch ( target_ast )		3926392	0					
ANR	3926431	Callee	is_this_fetch		3926392	0					
ANR	3926432	Identifier	is_this_fetch		3926392	0					
ANR	3926433	ArgumentList	target_ast		3926392	1					
ANR	3926434	Argument	target_ast		3926392	0					
ANR	3926435	Identifier	target_ast		3926392	0					
ANR	3926436	CompoundStatement		8:32:164:164	3926392	1					
ANR	3926437	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign $this"" )"	2592:2:74481:74543	3926392	0	True				
ANR	3926438	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign $this"" )"		3926392	0					
ANR	3926439	Callee	zend_error_noreturn		3926392	0					
ANR	3926440	Identifier	zend_error_noreturn		3926392	0					
ANR	3926441	ArgumentList	E_COMPILE_ERROR		3926392	1					
ANR	3926442	Argument	E_COMPILE_ERROR		3926392	0					
ANR	3926443	Identifier	E_COMPILE_ERROR		3926392	0					
ANR	3926444	Argument	"""Cannot re-assign $this"""		3926392	1					
ANR	3926445	PrimaryExpression	"""Cannot re-assign $this"""		3926392	0					
ANR	3926446	ExpressionStatement	zend_ensure_writable_variable ( target_ast )	2594:1:74549:74590	3926392	5	True				
ANR	3926447	CallExpression	zend_ensure_writable_variable ( target_ast )		3926392	0					
ANR	3926448	Callee	zend_ensure_writable_variable		3926392	0					
ANR	3926449	Identifier	zend_ensure_writable_variable		3926392	0					
ANR	3926450	ArgumentList	target_ast		3926392	1					
ANR	3926451	Argument	target_ast		3926392	0					
ANR	3926452	Identifier	target_ast		3926392	0					
ANR	3926453	ExpressionStatement	"zend_compile_var ( & target_node , target_ast , BP_VAR_W )"	2596:1:74594:74646	3926392	6	True				
ANR	3926454	CallExpression	"zend_compile_var ( & target_node , target_ast , BP_VAR_W )"		3926392	0					
ANR	3926455	Callee	zend_compile_var		3926392	0					
ANR	3926456	Identifier	zend_compile_var		3926392	0					
ANR	3926457	ArgumentList	& target_node		3926392	1					
ANR	3926458	Argument	& target_node		3926392	0					
ANR	3926459	UnaryOperationExpression	& target_node		3926392	0					
ANR	3926460	UnaryOperator	&		3926392	0					
ANR	3926461	Identifier	target_node		3926392	1					
ANR	3926462	Argument	target_ast		3926392	1					
ANR	3926463	Identifier	target_ast		3926392	0					
ANR	3926464	Argument	BP_VAR_W		3926392	2					
ANR	3926465	Identifier	BP_VAR_W		3926392	0					
ANR	3926466	ExpressionStatement	"zend_compile_var ( & source_node , source_ast , BP_VAR_REF )"	2597:1:74649:74703	3926392	7	True				
ANR	3926467	CallExpression	"zend_compile_var ( & source_node , source_ast , BP_VAR_REF )"		3926392	0					
ANR	3926468	Callee	zend_compile_var		3926392	0					
ANR	3926469	Identifier	zend_compile_var		3926392	0					
ANR	3926470	ArgumentList	& source_node		3926392	1					
ANR	3926471	Argument	& source_node		3926392	0					
ANR	3926472	UnaryOperationExpression	& source_node		3926392	0					
ANR	3926473	UnaryOperator	&		3926392	0					
ANR	3926474	Identifier	source_node		3926392	1					
ANR	3926475	Argument	source_ast		3926392	1					
ANR	3926476	Identifier	source_ast		3926392	0					
ANR	3926477	Argument	BP_VAR_REF		3926392	2					
ANR	3926478	Identifier	BP_VAR_REF		3926392	0					
ANR	3926479	IfStatement	if ( source_node . op_type != IS_VAR && zend_is_call ( source_ast ) )		3926392	8					
ANR	3926480	Condition	source_node . op_type != IS_VAR && zend_is_call ( source_ast )	2599:5:74711:74767	3926392	0	True				
ANR	3926481	AndExpression	source_node . op_type != IS_VAR && zend_is_call ( source_ast )		3926392	0		&&			
ANR	3926482	EqualityExpression	source_node . op_type != IS_VAR		3926392	0		!=			
ANR	3926483	MemberAccess	source_node . op_type		3926392	0					
ANR	3926484	Identifier	source_node		3926392	0					
ANR	3926485	Identifier	op_type		3926392	1					
ANR	3926486	Identifier	IS_VAR		3926392	1					
ANR	3926487	CallExpression	zend_is_call ( source_ast )		3926392	1					
ANR	3926488	Callee	zend_is_call		3926392	0					
ANR	3926489	Identifier	zend_is_call		3926392	0					
ANR	3926490	ArgumentList	source_ast		3926392	1					
ANR	3926491	Argument	source_ast		3926392	0					
ANR	3926492	Identifier	source_ast		3926392	0					
ANR	3926493	CompoundStatement		16:64:457:457	3926392	1					
ANR	3926494	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use result of built-in function in write context"" )"	2600:2:74774:74869	3926392	0	True				
ANR	3926495	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use result of built-in function in write context"" )"		3926392	0					
ANR	3926496	Callee	zend_error_noreturn		3926392	0					
ANR	3926497	Identifier	zend_error_noreturn		3926392	0					
ANR	3926498	ArgumentList	E_COMPILE_ERROR		3926392	1					
ANR	3926499	Argument	E_COMPILE_ERROR		3926392	0					
ANR	3926500	Identifier	E_COMPILE_ERROR		3926392	0					
ANR	3926501	Argument	"""Cannot use result of built-in function in write context"""		3926392	1					
ANR	3926502	PrimaryExpression	"""Cannot use result of built-in function in write context"""		3926392	0					
ANR	3926503	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_ASSIGN_REF , & target_node , & source_node )"	2603:1:74876:74950	3926392	9	True				
ANR	3926504	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_ASSIGN_REF , & target_node , & source_node )"		3926392	0		=			
ANR	3926505	Identifier	opline		3926392	0					
ANR	3926506	CallExpression	"zend_emit_op ( result , ZEND_ASSIGN_REF , & target_node , & source_node )"		3926392	1					
ANR	3926507	Callee	zend_emit_op		3926392	0					
ANR	3926508	Identifier	zend_emit_op		3926392	0					
ANR	3926509	ArgumentList	result		3926392	1					
ANR	3926510	Argument	result		3926392	0					
ANR	3926511	Identifier	result		3926392	0					
ANR	3926512	Argument	ZEND_ASSIGN_REF		3926392	1					
ANR	3926513	Identifier	ZEND_ASSIGN_REF		3926392	0					
ANR	3926514	Argument	& target_node		3926392	2					
ANR	3926515	UnaryOperationExpression	& target_node		3926392	0					
ANR	3926516	UnaryOperator	&		3926392	0					
ANR	3926517	Identifier	target_node		3926392	1					
ANR	3926518	Argument	& source_node		3926392	3					
ANR	3926519	UnaryOperationExpression	& source_node		3926392	0					
ANR	3926520	UnaryOperator	&		3926392	0					
ANR	3926521	Identifier	source_node		3926392	1					
ANR	3926522	IfStatement	if ( ! result )		3926392	10					
ANR	3926523	Condition	! result	2604:5:74957:74963	3926392	0	True				
ANR	3926524	UnaryOperationExpression	! result		3926392	0					
ANR	3926525	UnaryOperator	!		3926392	0					
ANR	3926526	Identifier	result		3926392	1					
ANR	3926527	CompoundStatement		21:14:653:653	3926392	1					
ANR	3926528	ExpressionStatement	opline -> result_type |= EXT_TYPE_UNUSED	2605:2:74970:75008	3926392	0	True				
ANR	3926529	AssignmentExpression	opline -> result_type |= EXT_TYPE_UNUSED		3926392	0		|=			
ANR	3926530	PtrMemberAccess	opline -> result_type		3926392	0					
ANR	3926531	Identifier	opline		3926392	0					
ANR	3926532	Identifier	result_type		3926392	1					
ANR	3926533	Identifier	EXT_TYPE_UNUSED		3926392	1					
ANR	3926534	IfStatement	if ( zend_is_call ( source_ast ) )		3926392	11					
ANR	3926535	Condition	zend_is_call ( source_ast )	2608:5:75019:75042	3926392	0	True				
ANR	3926536	CallExpression	zend_is_call ( source_ast )		3926392	0					
ANR	3926537	Callee	zend_is_call		3926392	0					
ANR	3926538	Identifier	zend_is_call		3926392	0					
ANR	3926539	ArgumentList	source_ast		3926392	1					
ANR	3926540	Argument	source_ast		3926392	0					
ANR	3926541	Identifier	source_ast		3926392	0					
ANR	3926542	CompoundStatement		25:31:732:732	3926392	1					
ANR	3926543	ExpressionStatement	opline -> extended_value = ZEND_RETURNS_FUNCTION	2609:2:75049:75095	3926392	0	True				
ANR	3926544	AssignmentExpression	opline -> extended_value = ZEND_RETURNS_FUNCTION		3926392	0		=			
ANR	3926545	PtrMemberAccess	opline -> extended_value		3926392	0					
ANR	3926546	Identifier	opline		3926392	0					
ANR	3926547	Identifier	extended_value		3926392	1					
ANR	3926548	Identifier	ZEND_RETURNS_FUNCTION		3926392	1					
ANR	3926549	ReturnType	void		3926392	1					
ANR	3926550	Identifier	zend_compile_assign_ref		3926392	2					
ANR	3926551	ParameterList	"znode * result , zend_ast * ast"		3926392	3					
ANR	3926552	Parameter	znode * result	2583:29:74272:74284	3926392	0	True				
ANR	3926553	ParameterType	znode *		3926392	0					
ANR	3926554	Identifier	result		3926392	1					
ANR	3926555	Parameter	zend_ast * ast	2583:44:74287:74299	3926392	1	True				
ANR	3926556	ParameterType	zend_ast *		3926392	0					
ANR	3926557	Identifier	ast		3926392	1					
ANR	3926558	CFGEntryNode	ENTRY		3926392		True				
ANR	3926559	CFGExitNode	EXIT		3926392		True				
ANR	3926560	Symbol	ast		3926392						
ANR	3926561	Symbol	ZEND_ASSIGN_REF		3926392						
ANR	3926562	Symbol	E_COMPILE_ERROR		3926392						
ANR	3926563	Symbol	source_node . op_type		3926392						
ANR	3926564	Symbol	target_node		3926392						
ANR	3926565	Symbol	opline -> extended_value		3926392						
ANR	3926566	Symbol	result		3926392						
ANR	3926567	Symbol	target_ast		3926392						
ANR	3926568	Symbol	& target_node		3926392						
ANR	3926569	Symbol	* ast		3926392						
ANR	3926570	Symbol	opline		3926392						
ANR	3926571	Symbol	* * ast		3926392						
ANR	3926572	Symbol	source_node		3926392						
ANR	3926573	Symbol	BP_VAR_W		3926392						
ANR	3926574	Symbol	source_ast		3926392						
ANR	3926575	Symbol	EXT_TYPE_UNUSED		3926392						
ANR	3926576	Symbol	BP_VAR_REF		3926392						
ANR	3926577	Symbol	opline -> result_type		3926392						
ANR	3926578	Symbol	is_this_fetch		3926392						
ANR	3926579	Symbol	zend_is_call		3926392						
ANR	3926580	Symbol	ZEND_RETURNS_FUNCTION		3926392						
ANR	3926581	Symbol	* opline		3926392						
ANR	3926582	Symbol	& source_node		3926392						
ANR	3926583	Symbol	* ast -> child		3926392						
ANR	3926584	Symbol	ast -> child		3926392						
ANR	3926585	Symbol	IS_VAR		3926392						
ANR	3926586	Symbol	zend_emit_op		3926392						
ANR	3926587	Function	zend_emit_assign_ref_znode	2614:0:75113:75361							
ANR	3926588	FunctionDef	"zend_emit_assign_ref_znode (zend_ast * var_ast , znode * value_node)"		3926587	0					
ANR	3926589	CompoundStatement		2615:0:75207:75361	3926587	0					
ANR	3926590	IdentifierDeclStatement	"zend_ast * assign_ast = zend_ast_create ( ZEND_AST_ASSIGN_REF , var_ast , zend_ast_create_znode ( value_node ) ) ;"	2616:1:75210:75315	3926587	0	True				
ANR	3926591	IdentifierDecl	"* assign_ast = zend_ast_create ( ZEND_AST_ASSIGN_REF , var_ast , zend_ast_create_znode ( value_node ) )"		3926587	0					
ANR	3926592	IdentifierDeclType	zend_ast *		3926587	0					
ANR	3926593	Identifier	assign_ast		3926587	1					
ANR	3926594	AssignmentExpression	"* assign_ast = zend_ast_create ( ZEND_AST_ASSIGN_REF , var_ast , zend_ast_create_znode ( value_node ) )"		3926587	2		=			
ANR	3926595	Identifier	assign_ast		3926587	0					
ANR	3926596	CallExpression	"zend_ast_create ( ZEND_AST_ASSIGN_REF , var_ast , zend_ast_create_znode ( value_node ) )"		3926587	1					
ANR	3926597	Callee	zend_ast_create		3926587	0					
ANR	3926598	Identifier	zend_ast_create		3926587	0					
ANR	3926599	ArgumentList	ZEND_AST_ASSIGN_REF		3926587	1					
ANR	3926600	Argument	ZEND_AST_ASSIGN_REF		3926587	0					
ANR	3926601	Identifier	ZEND_AST_ASSIGN_REF		3926587	0					
ANR	3926602	Argument	var_ast		3926587	1					
ANR	3926603	Identifier	var_ast		3926587	0					
ANR	3926604	Argument	zend_ast_create_znode ( value_node )		3926587	2					
ANR	3926605	CallExpression	zend_ast_create_znode ( value_node )		3926587	0					
ANR	3926606	Callee	zend_ast_create_znode		3926587	0					
ANR	3926607	Identifier	zend_ast_create_znode		3926587	0					
ANR	3926608	ArgumentList	value_node		3926587	1					
ANR	3926609	Argument	value_node		3926587	0					
ANR	3926610	Identifier	value_node		3926587	0					
ANR	3926611	ExpressionStatement	"zend_compile_assign_ref ( NULL , assign_ast )"	2618:1:75318:75359	3926587	1	True				
ANR	3926612	CallExpression	"zend_compile_assign_ref ( NULL , assign_ast )"		3926587	0					
ANR	3926613	Callee	zend_compile_assign_ref		3926587	0					
ANR	3926614	Identifier	zend_compile_assign_ref		3926587	0					
ANR	3926615	ArgumentList	NULL		3926587	1					
ANR	3926616	Argument	NULL		3926587	0					
ANR	3926617	Identifier	NULL		3926587	0					
ANR	3926618	Argument	assign_ast		3926587	1					
ANR	3926619	Identifier	assign_ast		3926587	0					
ANR	3926620	ReturnType	static inline void		3926587	1					
ANR	3926621	Identifier	zend_emit_assign_ref_znode		3926587	2					
ANR	3926622	ParameterList	"zend_ast * var_ast , znode * value_node"		3926587	3					
ANR	3926623	Parameter	zend_ast * var_ast	2614:46:75159:75175	3926587	0	True				
ANR	3926624	ParameterType	zend_ast *		3926587	0					
ANR	3926625	Identifier	var_ast		3926587	1					
ANR	3926626	Parameter	znode * value_node	2614:65:75178:75194	3926587	1	True				
ANR	3926627	ParameterType	znode *		3926587	0					
ANR	3926628	Identifier	value_node		3926587	1					
ANR	3926629	CFGEntryNode	ENTRY		3926587		True				
ANR	3926630	CFGExitNode	EXIT		3926587		True				
ANR	3926631	Symbol	var_ast		3926587						
ANR	3926632	Symbol	zend_ast_create_znode		3926587						
ANR	3926633	Symbol	NULL		3926587						
ANR	3926634	Symbol	zend_ast_create		3926587						
ANR	3926635	Symbol	assign_ast		3926587						
ANR	3926636	Symbol	value_node		3926587						
ANR	3926637	Symbol	ZEND_AST_ASSIGN_REF		3926587						
ANR	3926638	Function	zend_compile_compound_assign	2622:0:75374:76604							
ANR	3926639	FunctionDef	"zend_compile_compound_assign (znode * result , zend_ast * ast)"		3926638	0					
ANR	3926640	CompoundStatement		2623:0:75448:76604	3926638	0					
ANR	3926641	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	2624:1:75451:75484	3926638	0	True				
ANR	3926642	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3926638	0					
ANR	3926643	IdentifierDeclType	zend_ast *		3926638	0					
ANR	3926644	Identifier	var_ast		3926638	1					
ANR	3926645	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3926638	2		=			
ANR	3926646	Identifier	var_ast		3926638	0					
ANR	3926647	ArrayIndexing	ast -> child [ 0 ]		3926638	1					
ANR	3926648	PtrMemberAccess	ast -> child		3926638	0					
ANR	3926649	Identifier	ast		3926638	0					
ANR	3926650	Identifier	child		3926638	1					
ANR	3926651	PrimaryExpression	0		3926638	1					
ANR	3926652	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 1 ] ;	2625:1:75487:75521	3926638	1	True				
ANR	3926653	IdentifierDecl	* expr_ast = ast -> child [ 1 ]		3926638	0					
ANR	3926654	IdentifierDeclType	zend_ast *		3926638	0					
ANR	3926655	Identifier	expr_ast		3926638	1					
ANR	3926656	AssignmentExpression	* expr_ast = ast -> child [ 1 ]		3926638	2		=			
ANR	3926657	Identifier	expr_ast		3926638	0					
ANR	3926658	ArrayIndexing	ast -> child [ 1 ]		3926638	1					
ANR	3926659	PtrMemberAccess	ast -> child		3926638	0					
ANR	3926660	Identifier	ast		3926638	0					
ANR	3926661	Identifier	child		3926638	1					
ANR	3926662	PrimaryExpression	1		3926638	1					
ANR	3926663	IdentifierDeclStatement	uint32_t opcode = ast -> attr ;	2626:1:75524:75551	3926638	2	True				
ANR	3926664	IdentifierDecl	opcode = ast -> attr		3926638	0					
ANR	3926665	IdentifierDeclType	uint32_t		3926638	0					
ANR	3926666	Identifier	opcode		3926638	1					
ANR	3926667	AssignmentExpression	opcode = ast -> attr		3926638	2		=			
ANR	3926668	Identifier	opcode		3926638	0					
ANR	3926669	PtrMemberAccess	ast -> attr		3926638	1					
ANR	3926670	Identifier	ast		3926638	0					
ANR	3926671	Identifier	attr		3926638	1					
ANR	3926672	IdentifierDeclStatement	"znode var_node , expr_node ;"	2628:1:75555:75580	3926638	3	True				
ANR	3926673	IdentifierDecl	var_node		3926638	0					
ANR	3926674	IdentifierDeclType	znode		3926638	0					
ANR	3926675	Identifier	var_node		3926638	1					
ANR	3926676	IdentifierDecl	expr_node		3926638	1					
ANR	3926677	IdentifierDeclType	znode		3926638	0					
ANR	3926678	Identifier	expr_node		3926638	1					
ANR	3926679	IdentifierDeclStatement	zend_op * opline ;	2629:1:75583:75598	3926638	4	True				
ANR	3926680	IdentifierDecl	* opline		3926638	0					
ANR	3926681	IdentifierDeclType	zend_op *		3926638	0					
ANR	3926682	Identifier	opline		3926638	1					
ANR	3926683	IdentifierDeclStatement	uint32_t offset ;	2630:1:75601:75616	3926638	5	True				
ANR	3926684	IdentifierDecl	offset		3926638	0					
ANR	3926685	IdentifierDeclType	uint32_t		3926638	0					
ANR	3926686	Identifier	offset		3926638	1					
ANR	3926687	ExpressionStatement	zend_ensure_writable_variable ( var_ast )	2632:1:75620:75658	3926638	6	True				
ANR	3926688	CallExpression	zend_ensure_writable_variable ( var_ast )		3926638	0					
ANR	3926689	Callee	zend_ensure_writable_variable		3926638	0					
ANR	3926690	Identifier	zend_ensure_writable_variable		3926638	0					
ANR	3926691	ArgumentList	var_ast		3926638	1					
ANR	3926692	Argument	var_ast		3926638	0					
ANR	3926693	Identifier	var_ast		3926638	0					
ANR	3926694	SwitchStatement	switch ( var_ast -> kind )		3926638	7					
ANR	3926695	Condition	var_ast -> kind	2634:9:75670:75682	3926638	0	True				
ANR	3926696	PtrMemberAccess	var_ast -> kind		3926638	0					
ANR	3926697	Identifier	var_ast		3926638	0					
ANR	3926698	Identifier	kind		3926638	1					
ANR	3926699	CompoundStatement		12:24:236:236	3926638	1					
ANR	3926700	Label	case ZEND_AST_VAR :	2635:2:75689:75706	3926638	0	True				
ANR	3926701	Identifier	ZEND_AST_VAR		3926638	0					
ANR	3926702	Label	case ZEND_AST_STATIC_PROP :	2636:2:75710:75735	3926638	1	True				
ANR	3926703	Identifier	ZEND_AST_STATIC_PROP		3926638	0					
ANR	3926704	ExpressionStatement	"zend_compile_var ( & var_node , var_ast , BP_VAR_RW )"	2637:3:75740:75787	3926638	2	True				
ANR	3926705	CallExpression	"zend_compile_var ( & var_node , var_ast , BP_VAR_RW )"		3926638	0					
ANR	3926706	Callee	zend_compile_var		3926638	0					
ANR	3926707	Identifier	zend_compile_var		3926638	0					
ANR	3926708	ArgumentList	& var_node		3926638	1					
ANR	3926709	Argument	& var_node		3926638	0					
ANR	3926710	UnaryOperationExpression	& var_node		3926638	0					
ANR	3926711	UnaryOperator	&		3926638	0					
ANR	3926712	Identifier	var_node		3926638	1					
ANR	3926713	Argument	var_ast		3926638	1					
ANR	3926714	Identifier	var_ast		3926638	0					
ANR	3926715	Argument	BP_VAR_RW		3926638	2					
ANR	3926716	Identifier	BP_VAR_RW		3926638	0					
ANR	3926717	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	2638:3:75792:75831	3926638	3	True				
ANR	3926718	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3926638	0					
ANR	3926719	Callee	zend_compile_expr		3926638	0					
ANR	3926720	Identifier	zend_compile_expr		3926638	0					
ANR	3926721	ArgumentList	& expr_node		3926638	1					
ANR	3926722	Argument	& expr_node		3926638	0					
ANR	3926723	UnaryOperationExpression	& expr_node		3926638	0					
ANR	3926724	UnaryOperator	&		3926638	0					
ANR	3926725	Identifier	expr_node		3926638	1					
ANR	3926726	Argument	expr_ast		3926638	1					
ANR	3926727	Identifier	expr_ast		3926638	0					
ANR	3926728	ExpressionStatement	"zend_emit_op ( result , opcode , & var_node , & expr_node )"	2639:3:75836:75887	3926638	4	True				
ANR	3926729	CallExpression	"zend_emit_op ( result , opcode , & var_node , & expr_node )"		3926638	0					
ANR	3926730	Callee	zend_emit_op		3926638	0					
ANR	3926731	Identifier	zend_emit_op		3926638	0					
ANR	3926732	ArgumentList	result		3926638	1					
ANR	3926733	Argument	result		3926638	0					
ANR	3926734	Identifier	result		3926638	0					
ANR	3926735	Argument	opcode		3926638	1					
ANR	3926736	Identifier	opcode		3926638	0					
ANR	3926737	Argument	& var_node		3926638	2					
ANR	3926738	UnaryOperationExpression	& var_node		3926638	0					
ANR	3926739	UnaryOperator	&		3926638	0					
ANR	3926740	Identifier	var_node		3926638	1					
ANR	3926741	Argument	& expr_node		3926638	3					
ANR	3926742	UnaryOperationExpression	& expr_node		3926638	0					
ANR	3926743	UnaryOperator	&		3926638	0					
ANR	3926744	Identifier	expr_node		3926638	1					
ANR	3926745	ReturnStatement	return ;	2640:3:75892:75898	3926638	5	True				
ANR	3926746	Label	case ZEND_AST_DIM :	2641:2:75902:75919	3926638	6	True				
ANR	3926747	Identifier	ZEND_AST_DIM		3926638	0					
ANR	3926748	ExpressionStatement	offset = zend_delayed_compile_begin ( )	2642:3:75924:75961	3926638	7	True				
ANR	3926749	AssignmentExpression	offset = zend_delayed_compile_begin ( )		3926638	0		=			
ANR	3926750	Identifier	offset		3926638	0					
ANR	3926751	CallExpression	zend_delayed_compile_begin ( )		3926638	1					
ANR	3926752	Callee	zend_delayed_compile_begin		3926638	0					
ANR	3926753	Identifier	zend_delayed_compile_begin		3926638	0					
ANR	3926754	ArgumentList			3926638	1					
ANR	3926755	ExpressionStatement	"zend_delayed_compile_dim ( result , var_ast , BP_VAR_RW )"	2643:3:75966:76018	3926638	8	True				
ANR	3926756	CallExpression	"zend_delayed_compile_dim ( result , var_ast , BP_VAR_RW )"		3926638	0					
ANR	3926757	Callee	zend_delayed_compile_dim		3926638	0					
ANR	3926758	Identifier	zend_delayed_compile_dim		3926638	0					
ANR	3926759	ArgumentList	result		3926638	1					
ANR	3926760	Argument	result		3926638	0					
ANR	3926761	Identifier	result		3926638	0					
ANR	3926762	Argument	var_ast		3926638	1					
ANR	3926763	Identifier	var_ast		3926638	0					
ANR	3926764	Argument	BP_VAR_RW		3926638	2					
ANR	3926765	Identifier	BP_VAR_RW		3926638	0					
ANR	3926766	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	2644:3:76023:76062	3926638	9	True				
ANR	3926767	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3926638	0					
ANR	3926768	Callee	zend_compile_expr		3926638	0					
ANR	3926769	Identifier	zend_compile_expr		3926638	0					
ANR	3926770	ArgumentList	& expr_node		3926638	1					
ANR	3926771	Argument	& expr_node		3926638	0					
ANR	3926772	UnaryOperationExpression	& expr_node		3926638	0					
ANR	3926773	UnaryOperator	&		3926638	0					
ANR	3926774	Identifier	expr_node		3926638	1					
ANR	3926775	Argument	expr_ast		3926638	1					
ANR	3926776	Identifier	expr_ast		3926638	0					
ANR	3926777	ExpressionStatement	opline = zend_delayed_compile_end ( offset )	2646:3:76068:76109	3926638	10	True				
ANR	3926778	AssignmentExpression	opline = zend_delayed_compile_end ( offset )		3926638	0		=			
ANR	3926779	Identifier	opline		3926638	0					
ANR	3926780	CallExpression	zend_delayed_compile_end ( offset )		3926638	1					
ANR	3926781	Callee	zend_delayed_compile_end		3926638	0					
ANR	3926782	Identifier	zend_delayed_compile_end		3926638	0					
ANR	3926783	ArgumentList	offset		3926638	1					
ANR	3926784	Argument	offset		3926638	0					
ANR	3926785	Identifier	offset		3926638	0					
ANR	3926786	ExpressionStatement	opline -> opcode = opcode	2647:3:76114:76137	3926638	11	True				
ANR	3926787	AssignmentExpression	opline -> opcode = opcode		3926638	0		=			
ANR	3926788	PtrMemberAccess	opline -> opcode		3926638	0					
ANR	3926789	Identifier	opline		3926638	0					
ANR	3926790	Identifier	opcode		3926638	1					
ANR	3926791	Identifier	opcode		3926638	1					
ANR	3926792	ExpressionStatement	opline -> extended_value = ZEND_ASSIGN_DIM	2648:3:76142:76182	3926638	12	True				
ANR	3926793	AssignmentExpression	opline -> extended_value = ZEND_ASSIGN_DIM		3926638	0		=			
ANR	3926794	PtrMemberAccess	opline -> extended_value		3926638	0					
ANR	3926795	Identifier	opline		3926638	0					
ANR	3926796	Identifier	extended_value		3926638	1					
ANR	3926797	Identifier	ZEND_ASSIGN_DIM		3926638	1					
ANR	3926798	ExpressionStatement	opline = zend_emit_op_data ( & expr_node )	2650:3:76188:76226	3926638	13	True				
ANR	3926799	AssignmentExpression	opline = zend_emit_op_data ( & expr_node )		3926638	0		=			
ANR	3926800	Identifier	opline		3926638	0					
ANR	3926801	CallExpression	zend_emit_op_data ( & expr_node )		3926638	1					
ANR	3926802	Callee	zend_emit_op_data		3926638	0					
ANR	3926803	Identifier	zend_emit_op_data		3926638	0					
ANR	3926804	ArgumentList	& expr_node		3926638	1					
ANR	3926805	Argument	& expr_node		3926638	0					
ANR	3926806	UnaryOperationExpression	& expr_node		3926638	0					
ANR	3926807	UnaryOperator	&		3926638	0					
ANR	3926808	Identifier	expr_node		3926638	1					
ANR	3926809	ReturnStatement	return ;	2651:3:76231:76237	3926638	14	True				
ANR	3926810	Label	case ZEND_AST_PROP :	2652:2:76241:76259	3926638	15	True				
ANR	3926811	Identifier	ZEND_AST_PROP		3926638	0					
ANR	3926812	ExpressionStatement	offset = zend_delayed_compile_begin ( )	2653:3:76264:76301	3926638	16	True				
ANR	3926813	AssignmentExpression	offset = zend_delayed_compile_begin ( )		3926638	0		=			
ANR	3926814	Identifier	offset		3926638	0					
ANR	3926815	CallExpression	zend_delayed_compile_begin ( )		3926638	1					
ANR	3926816	Callee	zend_delayed_compile_begin		3926638	0					
ANR	3926817	Identifier	zend_delayed_compile_begin		3926638	0					
ANR	3926818	ArgumentList			3926638	1					
ANR	3926819	ExpressionStatement	"zend_delayed_compile_prop ( result , var_ast , BP_VAR_RW )"	2654:3:76306:76359	3926638	17	True				
ANR	3926820	CallExpression	"zend_delayed_compile_prop ( result , var_ast , BP_VAR_RW )"		3926638	0					
ANR	3926821	Callee	zend_delayed_compile_prop		3926638	0					
ANR	3926822	Identifier	zend_delayed_compile_prop		3926638	0					
ANR	3926823	ArgumentList	result		3926638	1					
ANR	3926824	Argument	result		3926638	0					
ANR	3926825	Identifier	result		3926638	0					
ANR	3926826	Argument	var_ast		3926638	1					
ANR	3926827	Identifier	var_ast		3926638	0					
ANR	3926828	Argument	BP_VAR_RW		3926638	2					
ANR	3926829	Identifier	BP_VAR_RW		3926638	0					
ANR	3926830	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	2655:3:76364:76403	3926638	18	True				
ANR	3926831	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3926638	0					
ANR	3926832	Callee	zend_compile_expr		3926638	0					
ANR	3926833	Identifier	zend_compile_expr		3926638	0					
ANR	3926834	ArgumentList	& expr_node		3926638	1					
ANR	3926835	Argument	& expr_node		3926638	0					
ANR	3926836	UnaryOperationExpression	& expr_node		3926638	0					
ANR	3926837	UnaryOperator	&		3926638	0					
ANR	3926838	Identifier	expr_node		3926638	1					
ANR	3926839	Argument	expr_ast		3926638	1					
ANR	3926840	Identifier	expr_ast		3926638	0					
ANR	3926841	ExpressionStatement	opline = zend_delayed_compile_end ( offset )	2657:3:76409:76450	3926638	19	True				
ANR	3926842	AssignmentExpression	opline = zend_delayed_compile_end ( offset )		3926638	0		=			
ANR	3926843	Identifier	opline		3926638	0					
ANR	3926844	CallExpression	zend_delayed_compile_end ( offset )		3926638	1					
ANR	3926845	Callee	zend_delayed_compile_end		3926638	0					
ANR	3926846	Identifier	zend_delayed_compile_end		3926638	0					
ANR	3926847	ArgumentList	offset		3926638	1					
ANR	3926848	Argument	offset		3926638	0					
ANR	3926849	Identifier	offset		3926638	0					
ANR	3926850	ExpressionStatement	opline -> opcode = opcode	2658:3:76455:76478	3926638	20	True				
ANR	3926851	AssignmentExpression	opline -> opcode = opcode		3926638	0		=			
ANR	3926852	PtrMemberAccess	opline -> opcode		3926638	0					
ANR	3926853	Identifier	opline		3926638	0					
ANR	3926854	Identifier	opcode		3926638	1					
ANR	3926855	Identifier	opcode		3926638	1					
ANR	3926856	ExpressionStatement	opline -> extended_value = ZEND_ASSIGN_OBJ	2659:3:76483:76523	3926638	21	True				
ANR	3926857	AssignmentExpression	opline -> extended_value = ZEND_ASSIGN_OBJ		3926638	0		=			
ANR	3926858	PtrMemberAccess	opline -> extended_value		3926638	0					
ANR	3926859	Identifier	opline		3926638	0					
ANR	3926860	Identifier	extended_value		3926638	1					
ANR	3926861	Identifier	ZEND_ASSIGN_OBJ		3926638	1					
ANR	3926862	ExpressionStatement	zend_emit_op_data ( & expr_node )	2661:3:76529:76558	3926638	22	True				
ANR	3926863	CallExpression	zend_emit_op_data ( & expr_node )		3926638	0					
ANR	3926864	Callee	zend_emit_op_data		3926638	0					
ANR	3926865	Identifier	zend_emit_op_data		3926638	0					
ANR	3926866	ArgumentList	& expr_node		3926638	1					
ANR	3926867	Argument	& expr_node		3926638	0					
ANR	3926868	UnaryOperationExpression	& expr_node		3926638	0					
ANR	3926869	UnaryOperator	&		3926638	0					
ANR	3926870	Identifier	expr_node		3926638	1					
ANR	3926871	ReturnStatement	return ;	2662:3:76563:76569	3926638	23	True				
ANR	3926872	Statement	EMPTY_SWITCH_DEFAULT_CASE	2663:2:76573:76597	3926638	24	True				
ANR	3926873	Statement	(	2663:27:76598:76598	3926638	25	True				
ANR	3926874	Statement	)	2663:28:76599:76599	3926638	26	True				
ANR	3926875	ReturnType	void		3926638	1					
ANR	3926876	Identifier	zend_compile_compound_assign		3926638	2					
ANR	3926877	ParameterList	"znode * result , zend_ast * ast"		3926638	3					
ANR	3926878	Parameter	znode * result	2622:34:75408:75420	3926638	0	True				
ANR	3926879	ParameterType	znode *		3926638	0					
ANR	3926880	Identifier	result		3926638	1					
ANR	3926881	Parameter	zend_ast * ast	2622:49:75423:75435	3926638	1	True				
ANR	3926882	ParameterType	zend_ast *		3926638	0					
ANR	3926883	Identifier	ast		3926638	1					
ANR	3926884	CFGEntryNode	ENTRY		3926638		True				
ANR	3926885	CFGExitNode	EXIT		3926638		True				
ANR	3926886	Symbol	zend_delayed_compile_end		3926638						
ANR	3926887	Symbol	ast		3926638						
ANR	3926888	Symbol	opcode		3926638						
ANR	3926889	Symbol	* var_ast		3926638						
ANR	3926890	Symbol	& expr_node		3926638						
ANR	3926891	Symbol	opline -> extended_value		3926638						
ANR	3926892	Symbol	result		3926638						
ANR	3926893	Symbol	* ast		3926638						
ANR	3926894	Symbol	opline		3926638						
ANR	3926895	Symbol	zend_delayed_compile_begin		3926638						
ANR	3926896	Symbol	var_ast -> kind		3926638						
ANR	3926897	Symbol	* * ast		3926638						
ANR	3926898	Symbol	BP_VAR_RW		3926638						
ANR	3926899	Symbol	ast -> attr		3926638						
ANR	3926900	Symbol	var_node		3926638						
ANR	3926901	Symbol	offset		3926638						
ANR	3926902	Symbol	& var_node		3926638						
ANR	3926903	Symbol	ZEND_ASSIGN_OBJ		3926638						
ANR	3926904	Symbol	expr_ast		3926638						
ANR	3926905	Symbol	expr_node		3926638						
ANR	3926906	Symbol	var_ast		3926638						
ANR	3926907	Symbol	* opline		3926638						
ANR	3926908	Symbol	ZEND_ASSIGN_DIM		3926638						
ANR	3926909	Symbol	opline -> opcode		3926638						
ANR	3926910	Symbol	zend_emit_op_data		3926638						
ANR	3926911	Symbol	* ast -> child		3926638						
ANR	3926912	Symbol	ast -> child		3926638						
ANR	3926913	Function	zend_compile_args	2668:0:76617:79680							
ANR	3926914	FunctionDef	"zend_compile_args (zend_ast * ast , zend_function * fbc)"		3926913	0					
ANR	3926915	CompoundStatement		2669:0:76689:79680	3926913	0					
ANR	3926916	IdentifierDeclStatement	zend_ast_list * args = zend_ast_get_list ( ast ) ;	2671:1:76719:76763	3926913	0	True				
ANR	3926917	IdentifierDecl	* args = zend_ast_get_list ( ast )		3926913	0					
ANR	3926918	IdentifierDeclType	zend_ast_list *		3926913	0					
ANR	3926919	Identifier	args		3926913	1					
ANR	3926920	AssignmentExpression	* args = zend_ast_get_list ( ast )		3926913	2		=			
ANR	3926921	Identifier	args		3926913	0					
ANR	3926922	CallExpression	zend_ast_get_list ( ast )		3926913	1					
ANR	3926923	Callee	zend_ast_get_list		3926913	0					
ANR	3926924	Identifier	zend_ast_get_list		3926913	0					
ANR	3926925	ArgumentList	ast		3926913	1					
ANR	3926926	Argument	ast		3926913	0					
ANR	3926927	Identifier	ast		3926913	0					
ANR	3926928	IdentifierDeclStatement	uint32_t i ;	2672:1:76766:76776	3926913	1	True				
ANR	3926929	IdentifierDecl	i		3926913	0					
ANR	3926930	IdentifierDeclType	uint32_t		3926913	0					
ANR	3926931	Identifier	i		3926913	1					
ANR	3926932	IdentifierDeclStatement	zend_bool uses_arg_unpack = 0 ;	2673:1:76779:76808	3926913	2	True				
ANR	3926933	IdentifierDecl	uses_arg_unpack = 0		3926913	0					
ANR	3926934	IdentifierDeclType	zend_bool		3926913	0					
ANR	3926935	Identifier	uses_arg_unpack		3926913	1					
ANR	3926936	AssignmentExpression	uses_arg_unpack = 0		3926913	2		=			
ANR	3926937	Identifier	uses_arg_unpack		3926913	0					
ANR	3926938	PrimaryExpression	0		3926913	1					
ANR	3926939	IdentifierDeclStatement	uint32_t arg_count = 0 ;	2674:1:76811:76833	3926913	3	True				
ANR	3926940	IdentifierDecl	arg_count = 0		3926913	0					
ANR	3926941	IdentifierDeclType	uint32_t		3926913	0					
ANR	3926942	Identifier	arg_count		3926913	1					
ANR	3926943	AssignmentExpression	arg_count = 0		3926913	2		=			
ANR	3926944	Identifier	arg_count		3926913	0					
ANR	3926945	PrimaryExpression	0		3926913	1					
ANR	3926946	ForStatement	for ( i = 0 ; i < args -> children ; ++ i )		3926913	4					
ANR	3926947	ForInit	i = 0 ;	2676:6:76890:76895	3926913	0	True				
ANR	3926948	AssignmentExpression	i = 0		3926913	0		=			
ANR	3926949	Identifier	i		3926913	0					
ANR	3926950	PrimaryExpression	0		3926913	1					
ANR	3926951	Condition	i < args -> children	2676:13:76897:76914	3926913	1	True				
ANR	3926952	RelationalExpression	i < args -> children		3926913	0		<			
ANR	3926953	Identifier	i		3926913	0					
ANR	3926954	PtrMemberAccess	args -> children		3926913	1					
ANR	3926955	Identifier	args		3926913	0					
ANR	3926956	Identifier	children		3926913	1					
ANR	3926957	UnaryExpression	++ i	2676:33:76917:76919	3926913	2	True				
ANR	3926958	IncDec	++		3926913	0					
ANR	3926959	Identifier	i		3926913	1					
ANR	3926960	CompoundStatement		15:2:357:377	3926913	3					
ANR	3926961	IdentifierDeclStatement	zend_ast * arg = args -> child [ i ] ;	2677:2:76926:76956	3926913	0	True				
ANR	3926962	IdentifierDecl	* arg = args -> child [ i ]		3926913	0					
ANR	3926963	IdentifierDeclType	zend_ast *		3926913	0					
ANR	3926964	Identifier	arg		3926913	1					
ANR	3926965	AssignmentExpression	* arg = args -> child [ i ]		3926913	2		=			
ANR	3926966	Identifier	arg		3926913	0					
ANR	3926967	ArrayIndexing	args -> child [ i ]		3926913	1					
ANR	3926968	PtrMemberAccess	args -> child		3926913	0					
ANR	3926969	Identifier	args		3926913	0					
ANR	3926970	Identifier	child		3926913	1					
ANR	3926971	Identifier	i		3926913	1					
ANR	3926972	IdentifierDeclStatement	uint32_t arg_num = i + 1 ;	2678:2:76960:76984	3926913	1	True				
ANR	3926973	IdentifierDecl	arg_num = i + 1		3926913	0					
ANR	3926974	IdentifierDeclType	uint32_t		3926913	0					
ANR	3926975	Identifier	arg_num		3926913	1					
ANR	3926976	AssignmentExpression	arg_num = i + 1		3926913	2		=			
ANR	3926977	Identifier	arg_num		3926913	0					
ANR	3926978	AdditiveExpression	i + 1		3926913	1		+			
ANR	3926979	Identifier	i		3926913	0					
ANR	3926980	PrimaryExpression	1		3926913	1					
ANR	3926981	IdentifierDeclStatement	znode arg_node ;	2680:2:76989:77003	3926913	2	True				
ANR	3926982	IdentifierDecl	arg_node		3926913	0					
ANR	3926983	IdentifierDeclType	znode		3926913	0					
ANR	3926984	Identifier	arg_node		3926913	1					
ANR	3926985	IdentifierDeclStatement	zend_op * opline ;	2681:2:77007:77022	3926913	3	True				
ANR	3926986	IdentifierDecl	* opline		3926913	0					
ANR	3926987	IdentifierDeclType	zend_op *		3926913	0					
ANR	3926988	Identifier	opline		3926913	1					
ANR	3926989	IdentifierDeclStatement	zend_uchar opcode ;	2682:2:77026:77043	3926913	4	True				
ANR	3926990	IdentifierDecl	opcode		3926913	0					
ANR	3926991	IdentifierDeclType	zend_uchar		3926913	0					
ANR	3926992	Identifier	opcode		3926913	1					
ANR	3926993	IdentifierDeclStatement	zend_ulong flags = 0 ;	2683:2:77047:77067	3926913	5	True				
ANR	3926994	IdentifierDecl	flags = 0		3926913	0					
ANR	3926995	IdentifierDeclType	zend_ulong		3926913	0					
ANR	3926996	Identifier	flags		3926913	1					
ANR	3926997	AssignmentExpression	flags = 0		3926913	2		=			
ANR	3926998	Identifier	flags		3926913	0					
ANR	3926999	PrimaryExpression	0		3926913	1					
ANR	3927000	IfStatement	if ( arg -> kind == ZEND_AST_UNPACK )		3926913	6					
ANR	3927001	Condition	arg -> kind == ZEND_AST_UNPACK	2685:6:77076:77103	3926913	0	True				
ANR	3927002	EqualityExpression	arg -> kind == ZEND_AST_UNPACK		3926913	0		==			
ANR	3927003	PtrMemberAccess	arg -> kind		3926913	0					
ANR	3927004	Identifier	arg		3926913	0					
ANR	3927005	Identifier	kind		3926913	1					
ANR	3927006	Identifier	ZEND_AST_UNPACK		3926913	1					
ANR	3927007	CompoundStatement		17:36:416:416	3926913	1					
ANR	3927008	ExpressionStatement	uses_arg_unpack = 1	2686:3:77111:77130	3926913	0	True				
ANR	3927009	AssignmentExpression	uses_arg_unpack = 1		3926913	0		=			
ANR	3927010	Identifier	uses_arg_unpack		3926913	0					
ANR	3927011	PrimaryExpression	1		3926913	1					
ANR	3927012	ExpressionStatement	fbc = NULL	2687:3:77135:77145	3926913	1	True				
ANR	3927013	AssignmentExpression	fbc = NULL		3926913	0		=			
ANR	3927014	Identifier	fbc		3926913	0					
ANR	3927015	Identifier	NULL		3926913	1					
ANR	3927016	ExpressionStatement	"zend_compile_expr ( & arg_node , arg -> child [ 0 ] )"	2689:3:77151:77194	3926913	2	True				
ANR	3927017	CallExpression	"zend_compile_expr ( & arg_node , arg -> child [ 0 ] )"		3926913	0					
ANR	3927018	Callee	zend_compile_expr		3926913	0					
ANR	3927019	Identifier	zend_compile_expr		3926913	0					
ANR	3927020	ArgumentList	& arg_node		3926913	1					
ANR	3927021	Argument	& arg_node		3926913	0					
ANR	3927022	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927023	UnaryOperator	&		3926913	0					
ANR	3927024	Identifier	arg_node		3926913	1					
ANR	3927025	Argument	arg -> child [ 0 ]		3926913	1					
ANR	3927026	ArrayIndexing	arg -> child [ 0 ]		3926913	0					
ANR	3927027	PtrMemberAccess	arg -> child		3926913	0					
ANR	3927028	Identifier	arg		3926913	0					
ANR	3927029	Identifier	child		3926913	1					
ANR	3927030	PrimaryExpression	0		3926913	1					
ANR	3927031	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_SEND_UNPACK , & arg_node , NULL )"	2690:3:77199:77261	3926913	3	True				
ANR	3927032	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_SEND_UNPACK , & arg_node , NULL )"		3926913	0		=			
ANR	3927033	Identifier	opline		3926913	0					
ANR	3927034	CallExpression	"zend_emit_op ( NULL , ZEND_SEND_UNPACK , & arg_node , NULL )"		3926913	1					
ANR	3927035	Callee	zend_emit_op		3926913	0					
ANR	3927036	Identifier	zend_emit_op		3926913	0					
ANR	3927037	ArgumentList	NULL		3926913	1					
ANR	3927038	Argument	NULL		3926913	0					
ANR	3927039	Identifier	NULL		3926913	0					
ANR	3927040	Argument	ZEND_SEND_UNPACK		3926913	1					
ANR	3927041	Identifier	ZEND_SEND_UNPACK		3926913	0					
ANR	3927042	Argument	& arg_node		3926913	2					
ANR	3927043	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927044	UnaryOperator	&		3926913	0					
ANR	3927045	Identifier	arg_node		3926913	1					
ANR	3927046	Argument	NULL		3926913	3					
ANR	3927047	Identifier	NULL		3926913	0					
ANR	3927048	ExpressionStatement	opline -> op2 . num = arg_count	2691:3:77266:77293	3926913	4	True				
ANR	3927049	AssignmentExpression	opline -> op2 . num = arg_count		3926913	0		=			
ANR	3927050	MemberAccess	opline -> op2 . num		3926913	0					
ANR	3927051	PtrMemberAccess	opline -> op2		3926913	0					
ANR	3927052	Identifier	opline		3926913	0					
ANR	3927053	Identifier	op2		3926913	1					
ANR	3927054	Identifier	num		3926913	1					
ANR	3927055	Identifier	arg_count		3926913	1					
ANR	3927056	ExpressionStatement	"opline -> result . var = ( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_count )"	2692:3:77298:77374	3926913	5	True				
ANR	3927057	AssignmentExpression	"opline -> result . var = ( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_count )"		3926913	0		=			
ANR	3927058	MemberAccess	opline -> result . var		3926913	0					
ANR	3927059	PtrMemberAccess	opline -> result		3926913	0					
ANR	3927060	Identifier	opline		3926913	0					
ANR	3927061	Identifier	result		3926913	1					
ANR	3927062	Identifier	var		3926913	1					
ANR	3927063	CastExpression	"( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_count )"		3926913	1					
ANR	3927064	CastTarget	uint32_t		3926913	0					
ANR	3927065	CastExpression	"( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_count )"		3926913	1					
ANR	3927066	CastTarget	zend_intptr_t		3926913	0					
ANR	3927067	CallExpression	"ZEND_CALL_ARG ( NULL , arg_count )"		3926913	1					
ANR	3927068	Callee	ZEND_CALL_ARG		3926913	0					
ANR	3927069	Identifier	ZEND_CALL_ARG		3926913	0					
ANR	3927070	ArgumentList	NULL		3926913	1					
ANR	3927071	Argument	NULL		3926913	0					
ANR	3927072	Identifier	NULL		3926913	0					
ANR	3927073	Argument	arg_count		3926913	1					
ANR	3927074	Identifier	arg_count		3926913	0					
ANR	3927075	ContinueStatement	continue ;	2693:3:77379:77387	3926913	6	True				
ANR	3927076	IfStatement	if ( uses_arg_unpack )		3926913	7					
ANR	3927077	Condition	uses_arg_unpack	2696:6:77400:77414	3926913	0	True				
ANR	3927078	Identifier	uses_arg_unpack		3926913	0					
ANR	3927079	CompoundStatement		28:23:727:727	3926913	1					
ANR	3927080	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use positional argument after argument unpacking"" )"	2697:3:77422:77521	3926913	0	True				
ANR	3927081	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use positional argument after argument unpacking"" )"		3926913	0					
ANR	3927082	Callee	zend_error_noreturn		3926913	0					
ANR	3927083	Identifier	zend_error_noreturn		3926913	0					
ANR	3927084	ArgumentList	E_COMPILE_ERROR		3926913	1					
ANR	3927085	Argument	E_COMPILE_ERROR		3926913	0					
ANR	3927086	Identifier	E_COMPILE_ERROR		3926913	0					
ANR	3927087	Argument	"""Cannot use positional argument after argument unpacking"""		3926913	1					
ANR	3927088	PrimaryExpression	"""Cannot use positional argument after argument unpacking"""		3926913	0					
ANR	3927089	ExpressionStatement	arg_count ++	2701:2:77530:77541	3926913	8	True				
ANR	3927090	PostIncDecOperationExpression	arg_count ++		3926913	0					
ANR	3927091	Identifier	arg_count		3926913	0					
ANR	3927092	IncDec	++		3926913	1					
ANR	3927093	IfStatement	if ( zend_is_variable ( arg ) )		3926913	9					
ANR	3927094	Condition	zend_is_variable ( arg )	2702:6:77549:77569	3926913	0	True				
ANR	3927095	CallExpression	zend_is_variable ( arg )		3926913	0					
ANR	3927096	Callee	zend_is_variable		3926913	0					
ANR	3927097	Identifier	zend_is_variable		3926913	0					
ANR	3927098	ArgumentList	arg		3926913	1					
ANR	3927099	Argument	arg		3926913	0					
ANR	3927100	Identifier	arg		3926913	0					
ANR	3927101	CompoundStatement		34:29:882:882	3926913	1					
ANR	3927102	IfStatement	if ( zend_is_call ( arg ) )		3926913	0					
ANR	3927103	Condition	zend_is_call ( arg )	2703:7:77581:77597	3926913	0	True				
ANR	3927104	CallExpression	zend_is_call ( arg )		3926913	0					
ANR	3927105	Callee	zend_is_call		3926913	0					
ANR	3927106	Identifier	zend_is_call		3926913	0					
ANR	3927107	ArgumentList	arg		3926913	1					
ANR	3927108	Argument	arg		3926913	0					
ANR	3927109	Identifier	arg		3926913	0					
ANR	3927110	CompoundStatement		35:26:910:910	3926913	1					
ANR	3927111	ExpressionStatement	"zend_compile_var ( & arg_node , arg , BP_VAR_R )"	2704:4:77606:77648	3926913	0	True				
ANR	3927112	CallExpression	"zend_compile_var ( & arg_node , arg , BP_VAR_R )"		3926913	0					
ANR	3927113	Callee	zend_compile_var		3926913	0					
ANR	3927114	Identifier	zend_compile_var		3926913	0					
ANR	3927115	ArgumentList	& arg_node		3926913	1					
ANR	3927116	Argument	& arg_node		3926913	0					
ANR	3927117	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927118	UnaryOperator	&		3926913	0					
ANR	3927119	Identifier	arg_node		3926913	1					
ANR	3927120	Argument	arg		3926913	1					
ANR	3927121	Identifier	arg		3926913	0					
ANR	3927122	Argument	BP_VAR_R		3926913	2					
ANR	3927123	Identifier	BP_VAR_R		3926913	0					
ANR	3927124	IfStatement	if ( arg_node . op_type & ( IS_CONST | IS_TMP_VAR ) )		3926913	1					
ANR	3927125	Condition	arg_node . op_type & ( IS_CONST | IS_TMP_VAR )	2705:8:77658:77697	3926913	0	True				
ANR	3927126	BitAndExpression	arg_node . op_type & ( IS_CONST | IS_TMP_VAR )		3926913	0		&			
ANR	3927127	MemberAccess	arg_node . op_type		3926913	0					
ANR	3927128	Identifier	arg_node		3926913	0					
ANR	3927129	Identifier	op_type		3926913	1					
ANR	3927130	InclusiveOrExpression	IS_CONST | IS_TMP_VAR		3926913	1		|			
ANR	3927131	Identifier	IS_CONST		3926913	0					
ANR	3927132	Identifier	IS_TMP_VAR		3926913	1					
ANR	3927133	CompoundStatement		37:50:1010:1010	3926913	1					
ANR	3927134	ExpressionStatement	opcode = ZEND_SEND_VAL	2707:5:77771:77793	3926913	0	True				
ANR	3927135	AssignmentExpression	opcode = ZEND_SEND_VAL		3926913	0		=			
ANR	3927136	Identifier	opcode		3926913	0					
ANR	3927137	Identifier	ZEND_SEND_VAL		3926913	1					
ANR	3927138	ElseStatement	else		3926913	0					
ANR	3927139	CompoundStatement		40:11:1116:1116	3926913	0					
ANR	3927140	ExpressionStatement	opcode = ZEND_SEND_VAR_NO_REF	2709:5:77813:77842	3926913	0	True				
ANR	3927141	AssignmentExpression	opcode = ZEND_SEND_VAR_NO_REF		3926913	0		=			
ANR	3927142	Identifier	opcode		3926913	0					
ANR	3927143	Identifier	ZEND_SEND_VAR_NO_REF		3926913	1					
ANR	3927144	ExpressionStatement	flags |= ZEND_ARG_SEND_FUNCTION	2710:5:77849:77880	3926913	1	True				
ANR	3927145	AssignmentExpression	flags |= ZEND_ARG_SEND_FUNCTION		3926913	0		|=			
ANR	3927146	Identifier	flags		3926913	0					
ANR	3927147	Identifier	ZEND_ARG_SEND_FUNCTION		3926913	1					
ANR	3927148	IfStatement	"if ( fbc && ARG_SHOULD_BE_SENT_BY_REF ( fbc , arg_num ) )"		3926913	2					
ANR	3927149	Condition	"fbc && ARG_SHOULD_BE_SENT_BY_REF ( fbc , arg_num )"	2711:9:77891:77936	3926913	0	True				
ANR	3927150	AndExpression	"fbc && ARG_SHOULD_BE_SENT_BY_REF ( fbc , arg_num )"		3926913	0		&&			
ANR	3927151	Identifier	fbc		3926913	0					
ANR	3927152	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fbc , arg_num )"		3926913	1					
ANR	3927153	Callee	ARG_SHOULD_BE_SENT_BY_REF		3926913	0					
ANR	3927154	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3926913	0					
ANR	3927155	ArgumentList	fbc		3926913	1					
ANR	3927156	Argument	fbc		3926913	0					
ANR	3927157	Identifier	fbc		3926913	0					
ANR	3927158	Argument	arg_num		3926913	1					
ANR	3927159	Identifier	arg_num		3926913	0					
ANR	3927160	CompoundStatement		43:57:1249:1249	3926913	1					
ANR	3927161	ExpressionStatement	flags |= ZEND_ARG_SEND_BY_REF	2712:6:77947:77976	3926913	0	True				
ANR	3927162	AssignmentExpression	flags |= ZEND_ARG_SEND_BY_REF		3926913	0		|=			
ANR	3927163	Identifier	flags		3926913	0					
ANR	3927164	Identifier	ZEND_ARG_SEND_BY_REF		3926913	1					
ANR	3927165	IfStatement	"if ( ARG_MAY_BE_SENT_BY_REF ( fbc , arg_num ) )"		3926913	1					
ANR	3927166	Condition	"ARG_MAY_BE_SENT_BY_REF ( fbc , arg_num )"	2713:10:77988:78023	3926913	0	True				
ANR	3927167	CallExpression	"ARG_MAY_BE_SENT_BY_REF ( fbc , arg_num )"		3926913	0					
ANR	3927168	Callee	ARG_MAY_BE_SENT_BY_REF		3926913	0					
ANR	3927169	Identifier	ARG_MAY_BE_SENT_BY_REF		3926913	0					
ANR	3927170	ArgumentList	fbc		3926913	1					
ANR	3927171	Argument	fbc		3926913	0					
ANR	3927172	Identifier	fbc		3926913	0					
ANR	3927173	Argument	arg_num		3926913	1					
ANR	3927174	Identifier	arg_num		3926913	0					
ANR	3927175	CompoundStatement		45:48:1336:1336	3926913	1					
ANR	3927176	ExpressionStatement	flags |= ZEND_ARG_SEND_SILENT	2714:7:78035:78064	3926913	0	True				
ANR	3927177	AssignmentExpression	flags |= ZEND_ARG_SEND_SILENT		3926913	0		|=			
ANR	3927178	Identifier	flags		3926913	0					
ANR	3927179	Identifier	ZEND_ARG_SEND_SILENT		3926913	1					
ANR	3927180	ElseStatement	else		3926913	0					
ANR	3927181	IfStatement	if ( fbc )		3926913	0					
ANR	3927182	Condition	fbc	2718:14:78101:78103	3926913	0	True				
ANR	3927183	Identifier	fbc		3926913	0					
ANR	3927184	CompoundStatement		50:19:1416:1416	3926913	1					
ANR	3927185	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( fbc , arg_num ) )"		3926913	0					
ANR	3927186	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( fbc , arg_num )"	2719:8:78116:78154	3926913	0	True				
ANR	3927187	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fbc , arg_num )"		3926913	0					
ANR	3927188	Callee	ARG_SHOULD_BE_SENT_BY_REF		3926913	0					
ANR	3927189	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3926913	0					
ANR	3927190	ArgumentList	fbc		3926913	1					
ANR	3927191	Argument	fbc		3926913	0					
ANR	3927192	Identifier	fbc		3926913	0					
ANR	3927193	Argument	arg_num		3926913	1					
ANR	3927194	Identifier	arg_num		3926913	0					
ANR	3927195	CompoundStatement		51:49:1467:1467	3926913	1					
ANR	3927196	ExpressionStatement	"zend_compile_var ( & arg_node , arg , BP_VAR_W )"	2720:5:78164:78206	3926913	0	True				
ANR	3927197	CallExpression	"zend_compile_var ( & arg_node , arg , BP_VAR_W )"		3926913	0					
ANR	3927198	Callee	zend_compile_var		3926913	0					
ANR	3927199	Identifier	zend_compile_var		3926913	0					
ANR	3927200	ArgumentList	& arg_node		3926913	1					
ANR	3927201	Argument	& arg_node		3926913	0					
ANR	3927202	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927203	UnaryOperator	&		3926913	0					
ANR	3927204	Identifier	arg_node		3926913	1					
ANR	3927205	Argument	arg		3926913	1					
ANR	3927206	Identifier	arg		3926913	0					
ANR	3927207	Argument	BP_VAR_W		3926913	2					
ANR	3927208	Identifier	BP_VAR_W		3926913	0					
ANR	3927209	ExpressionStatement	opcode = ZEND_SEND_REF	2721:5:78213:78235	3926913	1	True				
ANR	3927210	AssignmentExpression	opcode = ZEND_SEND_REF		3926913	0		=			
ANR	3927211	Identifier	opcode		3926913	0					
ANR	3927212	Identifier	ZEND_SEND_REF		3926913	1					
ANR	3927213	ElseStatement	else		3926913	0					
ANR	3927214	CompoundStatement		54:11:1558:1558	3926913	0					
ANR	3927215	ExpressionStatement	"zend_compile_var ( & arg_node , arg , BP_VAR_R )"	2723:5:78255:78297	3926913	0	True				
ANR	3927216	CallExpression	"zend_compile_var ( & arg_node , arg , BP_VAR_R )"		3926913	0					
ANR	3927217	Callee	zend_compile_var		3926913	0					
ANR	3927218	Identifier	zend_compile_var		3926913	0					
ANR	3927219	ArgumentList	& arg_node		3926913	1					
ANR	3927220	Argument	& arg_node		3926913	0					
ANR	3927221	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927222	UnaryOperator	&		3926913	0					
ANR	3927223	Identifier	arg_node		3926913	1					
ANR	3927224	Argument	arg		3926913	1					
ANR	3927225	Identifier	arg		3926913	0					
ANR	3927226	Argument	BP_VAR_R		3926913	2					
ANR	3927227	Identifier	BP_VAR_R		3926913	0					
ANR	3927228	ExpressionStatement	opcode = ZEND_SEND_VAR	2724:5:78304:78326	3926913	1	True				
ANR	3927229	AssignmentExpression	opcode = ZEND_SEND_VAR		3926913	0		=			
ANR	3927230	Identifier	opcode		3926913	0					
ANR	3927231	Identifier	ZEND_SEND_VAR		3926913	1					
ANR	3927232	ElseStatement	else		3926913	0					
ANR	3927233	CompoundStatement		58:10:1654:1654	3926913	0					
ANR	3927234	ExpressionStatement	"zend_compile_var ( & arg_node , arg , BP_VAR_FUNC_ARG | ( arg_num << BP_VAR_SHIFT ) )"	2727:4:78350:78432	3926913	0	True				
ANR	3927235	CallExpression	"zend_compile_var ( & arg_node , arg , BP_VAR_FUNC_ARG | ( arg_num << BP_VAR_SHIFT ) )"		3926913	0					
ANR	3927236	Callee	zend_compile_var		3926913	0					
ANR	3927237	Identifier	zend_compile_var		3926913	0					
ANR	3927238	ArgumentList	& arg_node		3926913	1					
ANR	3927239	Argument	& arg_node		3926913	0					
ANR	3927240	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927241	UnaryOperator	&		3926913	0					
ANR	3927242	Identifier	arg_node		3926913	1					
ANR	3927243	Argument	arg		3926913	1					
ANR	3927244	Identifier	arg		3926913	0					
ANR	3927245	Argument	BP_VAR_FUNC_ARG | ( arg_num << BP_VAR_SHIFT )		3926913	2					
ANR	3927246	InclusiveOrExpression	BP_VAR_FUNC_ARG | ( arg_num << BP_VAR_SHIFT )		3926913	0		|			
ANR	3927247	Identifier	BP_VAR_FUNC_ARG		3926913	0					
ANR	3927248	ShiftExpression	arg_num << BP_VAR_SHIFT		3926913	1		<<			
ANR	3927249	Identifier	arg_num		3926913	0					
ANR	3927250	Identifier	BP_VAR_SHIFT		3926913	1					
ANR	3927251	ExpressionStatement	opcode = ZEND_SEND_VAR_EX	2729:4:78438:78463	3926913	1	True				
ANR	3927252	AssignmentExpression	opcode = ZEND_SEND_VAR_EX		3926913	0		=			
ANR	3927253	Identifier	opcode		3926913	0					
ANR	3927254	Identifier	ZEND_SEND_VAR_EX		3926913	1					
ANR	3927255	ElseStatement	else		3926913	0					
ANR	3927256	CompoundStatement		63:9:1789:1789	3926913	0					
ANR	3927257	ExpressionStatement	"zend_compile_expr ( & arg_node , arg )"	2732:3:78484:78517	3926913	0	True				
ANR	3927258	CallExpression	"zend_compile_expr ( & arg_node , arg )"		3926913	0					
ANR	3927259	Callee	zend_compile_expr		3926913	0					
ANR	3927260	Identifier	zend_compile_expr		3926913	0					
ANR	3927261	ArgumentList	& arg_node		3926913	1					
ANR	3927262	Argument	& arg_node		3926913	0					
ANR	3927263	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927264	UnaryOperator	&		3926913	0					
ANR	3927265	Identifier	arg_node		3926913	1					
ANR	3927266	Argument	arg		3926913	1					
ANR	3927267	Identifier	arg		3926913	0					
ANR	3927268	ExpressionStatement	ZEND_ASSERT ( arg_node . op_type != IS_CV )	2733:3:78522:78560	3926913	1	True				
ANR	3927269	CallExpression	ZEND_ASSERT ( arg_node . op_type != IS_CV )		3926913	0					
ANR	3927270	Callee	ZEND_ASSERT		3926913	0					
ANR	3927271	Identifier	ZEND_ASSERT		3926913	0					
ANR	3927272	ArgumentList	arg_node . op_type != IS_CV		3926913	1					
ANR	3927273	Argument	arg_node . op_type != IS_CV		3926913	0					
ANR	3927274	EqualityExpression	arg_node . op_type != IS_CV		3926913	0		!=			
ANR	3927275	MemberAccess	arg_node . op_type		3926913	0					
ANR	3927276	Identifier	arg_node		3926913	0					
ANR	3927277	Identifier	op_type		3926913	1					
ANR	3927278	Identifier	IS_CV		3926913	1					
ANR	3927279	IfStatement	if ( arg_node . op_type == IS_VAR )		3926913	2					
ANR	3927280	Condition	arg_node . op_type == IS_VAR	2734:7:78569:78594	3926913	0	True				
ANR	3927281	EqualityExpression	arg_node . op_type == IS_VAR		3926913	0		==			
ANR	3927282	MemberAccess	arg_node . op_type		3926913	0					
ANR	3927283	Identifier	arg_node		3926913	0					
ANR	3927284	Identifier	op_type		3926913	1					
ANR	3927285	Identifier	IS_VAR		3926913	1					
ANR	3927286	CompoundStatement		66:35:1907:1907	3926913	1					
ANR	3927287	ExpressionStatement	opcode = ZEND_SEND_VAR_NO_REF	2735:4:78603:78632	3926913	0	True				
ANR	3927288	AssignmentExpression	opcode = ZEND_SEND_VAR_NO_REF		3926913	0		=			
ANR	3927289	Identifier	opcode		3926913	0					
ANR	3927290	Identifier	ZEND_SEND_VAR_NO_REF		3926913	1					
ANR	3927291	IfStatement	"if ( fbc && ARG_MUST_BE_SENT_BY_REF ( fbc , arg_num ) )"		3926913	1					
ANR	3927292	Condition	"fbc && ARG_MUST_BE_SENT_BY_REF ( fbc , arg_num )"	2736:8:78642:78685	3926913	0	True				
ANR	3927293	AndExpression	"fbc && ARG_MUST_BE_SENT_BY_REF ( fbc , arg_num )"		3926913	0		&&			
ANR	3927294	Identifier	fbc		3926913	0					
ANR	3927295	CallExpression	"ARG_MUST_BE_SENT_BY_REF ( fbc , arg_num )"		3926913	1					
ANR	3927296	Callee	ARG_MUST_BE_SENT_BY_REF		3926913	0					
ANR	3927297	Identifier	ARG_MUST_BE_SENT_BY_REF		3926913	0					
ANR	3927298	ArgumentList	fbc		3926913	1					
ANR	3927299	Argument	fbc		3926913	0					
ANR	3927300	Identifier	fbc		3926913	0					
ANR	3927301	Argument	arg_num		3926913	1					
ANR	3927302	Identifier	arg_num		3926913	0					
ANR	3927303	CompoundStatement		68:54:1998:1998	3926913	1					
ANR	3927304	ExpressionStatement	flags |= ZEND_ARG_SEND_BY_REF	2737:5:78695:78724	3926913	0	True				
ANR	3927305	AssignmentExpression	flags |= ZEND_ARG_SEND_BY_REF		3926913	0		|=			
ANR	3927306	Identifier	flags		3926913	0					
ANR	3927307	Identifier	ZEND_ARG_SEND_BY_REF		3926913	1					
ANR	3927308	ElseStatement	else		3926913	0					
ANR	3927309	CompoundStatement		71:10:2052:2052	3926913	0					
ANR	3927310	IfStatement	if ( fbc )		3926913	0					
ANR	3927311	Condition	fbc	2740:8:78752:78754	3926913	0	True				
ANR	3927312	Identifier	fbc		3926913	0					
ANR	3927313	CompoundStatement		72:13:2067:2067	3926913	1					
ANR	3927314	ExpressionStatement	opcode = ZEND_SEND_VAL	2741:5:78764:78786	3926913	0	True				
ANR	3927315	AssignmentExpression	opcode = ZEND_SEND_VAL		3926913	0		=			
ANR	3927316	Identifier	opcode		3926913	0					
ANR	3927317	Identifier	ZEND_SEND_VAL		3926913	1					
ANR	3927318	IfStatement	"if ( ARG_MUST_BE_SENT_BY_REF ( fbc , arg_num ) )"		3926913	1					
ANR	3927319	Condition	"ARG_MUST_BE_SENT_BY_REF ( fbc , arg_num )"	2742:9:78797:78833	3926913	0	True				
ANR	3927320	CallExpression	"ARG_MUST_BE_SENT_BY_REF ( fbc , arg_num )"		3926913	0					
ANR	3927321	Callee	ARG_MUST_BE_SENT_BY_REF		3926913	0					
ANR	3927322	Identifier	ARG_MUST_BE_SENT_BY_REF		3926913	0					
ANR	3927323	ArgumentList	fbc		3926913	1					
ANR	3927324	Argument	fbc		3926913	0					
ANR	3927325	Identifier	fbc		3926913	0					
ANR	3927326	Argument	arg_num		3926913	1					
ANR	3927327	Identifier	arg_num		3926913	0					
ANR	3927328	CompoundStatement		74:48:2146:2146	3926913	1					
ANR	3927329	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Only variables can be passed by reference"" )"	2743:6:78844:78925	3926913	0	True				
ANR	3927330	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Only variables can be passed by reference"" )"		3926913	0					
ANR	3927331	Callee	zend_error_noreturn		3926913	0					
ANR	3927332	Identifier	zend_error_noreturn		3926913	0					
ANR	3927333	ArgumentList	E_COMPILE_ERROR		3926913	1					
ANR	3927334	Argument	E_COMPILE_ERROR		3926913	0					
ANR	3927335	Identifier	E_COMPILE_ERROR		3926913	0					
ANR	3927336	Argument	"""Only variables can be passed by reference"""		3926913	1					
ANR	3927337	PrimaryExpression	"""Only variables can be passed by reference"""		3926913	0					
ANR	3927338	ElseStatement	else		3926913	0					
ANR	3927339	CompoundStatement		77:11:2255:2255	3926913	0					
ANR	3927340	ExpressionStatement	opcode = ZEND_SEND_VAL_EX	2746:5:78952:78977	3926913	0	True				
ANR	3927341	AssignmentExpression	opcode = ZEND_SEND_VAL_EX		3926913	0		=			
ANR	3927342	Identifier	opcode		3926913	0					
ANR	3927343	Identifier	ZEND_SEND_VAL_EX		3926913	1					
ANR	3927344	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	2751:2:78997:79038	3926913	10	True				
ANR	3927345	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3926913	0		=			
ANR	3927346	Identifier	opline		3926913	0					
ANR	3927347	CallExpression	get_next_op ( CG ( active_op_array ) )		3926913	1					
ANR	3927348	Callee	get_next_op		3926913	0					
ANR	3927349	Identifier	get_next_op		3926913	0					
ANR	3927350	ArgumentList	CG ( active_op_array )		3926913	1					
ANR	3927351	Argument	CG ( active_op_array )		3926913	0					
ANR	3927352	CallExpression	CG ( active_op_array )		3926913	0					
ANR	3927353	Callee	CG		3926913	0					
ANR	3927354	Identifier	CG		3926913	0					
ANR	3927355	ArgumentList	active_op_array		3926913	1					
ANR	3927356	Argument	active_op_array		3926913	0					
ANR	3927357	Identifier	active_op_array		3926913	0					
ANR	3927358	ExpressionStatement	opline -> opcode = opcode	2752:2:79042:79065	3926913	11	True				
ANR	3927359	AssignmentExpression	opline -> opcode = opcode		3926913	0		=			
ANR	3927360	PtrMemberAccess	opline -> opcode		3926913	0					
ANR	3927361	Identifier	opline		3926913	0					
ANR	3927362	Identifier	opcode		3926913	1					
ANR	3927363	Identifier	opcode		3926913	1					
ANR	3927364	ExpressionStatement	"SET_NODE ( opline -> op1 , & arg_node )"	2753:2:79069:79101	3926913	12	True				
ANR	3927365	CallExpression	"SET_NODE ( opline -> op1 , & arg_node )"		3926913	0					
ANR	3927366	Callee	SET_NODE		3926913	0					
ANR	3927367	Identifier	SET_NODE		3926913	0					
ANR	3927368	ArgumentList	opline -> op1		3926913	1					
ANR	3927369	Argument	opline -> op1		3926913	0					
ANR	3927370	PtrMemberAccess	opline -> op1		3926913	0					
ANR	3927371	Identifier	opline		3926913	0					
ANR	3927372	Identifier	op1		3926913	1					
ANR	3927373	Argument	& arg_node		3926913	1					
ANR	3927374	UnaryOperationExpression	& arg_node		3926913	0					
ANR	3927375	UnaryOperator	&		3926913	0					
ANR	3927376	Identifier	arg_node		3926913	1					
ANR	3927377	ExpressionStatement	SET_UNUSED ( opline -> op2 )	2754:2:79105:79128	3926913	13	True				
ANR	3927378	CallExpression	SET_UNUSED ( opline -> op2 )		3926913	0					
ANR	3927379	Callee	SET_UNUSED		3926913	0					
ANR	3927380	Identifier	SET_UNUSED		3926913	0					
ANR	3927381	ArgumentList	opline -> op2		3926913	1					
ANR	3927382	Argument	opline -> op2		3926913	0					
ANR	3927383	PtrMemberAccess	opline -> op2		3926913	0					
ANR	3927384	Identifier	opline		3926913	0					
ANR	3927385	Identifier	op2		3926913	1					
ANR	3927386	ExpressionStatement	opline -> op2 . opline_num = arg_num	2755:2:79132:79164	3926913	14	True				
ANR	3927387	AssignmentExpression	opline -> op2 . opline_num = arg_num		3926913	0		=			
ANR	3927388	MemberAccess	opline -> op2 . opline_num		3926913	0					
ANR	3927389	PtrMemberAccess	opline -> op2		3926913	0					
ANR	3927390	Identifier	opline		3926913	0					
ANR	3927391	Identifier	op2		3926913	1					
ANR	3927392	Identifier	opline_num		3926913	1					
ANR	3927393	Identifier	arg_num		3926913	1					
ANR	3927394	ExpressionStatement	"opline -> result . var = ( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_num )"	2756:2:79168:79242	3926913	15	True				
ANR	3927395	AssignmentExpression	"opline -> result . var = ( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_num )"		3926913	0		=			
ANR	3927396	MemberAccess	opline -> result . var		3926913	0					
ANR	3927397	PtrMemberAccess	opline -> result		3926913	0					
ANR	3927398	Identifier	opline		3926913	0					
ANR	3927399	Identifier	result		3926913	1					
ANR	3927400	Identifier	var		3926913	1					
ANR	3927401	CastExpression	"( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_num )"		3926913	1					
ANR	3927402	CastTarget	uint32_t		3926913	0					
ANR	3927403	CastExpression	"( zend_intptr_t ) ZEND_CALL_ARG ( NULL , arg_num )"		3926913	1					
ANR	3927404	CastTarget	zend_intptr_t		3926913	0					
ANR	3927405	CallExpression	"ZEND_CALL_ARG ( NULL , arg_num )"		3926913	1					
ANR	3927406	Callee	ZEND_CALL_ARG		3926913	0					
ANR	3927407	Identifier	ZEND_CALL_ARG		3926913	0					
ANR	3927408	ArgumentList	NULL		3926913	1					
ANR	3927409	Argument	NULL		3926913	0					
ANR	3927410	Identifier	NULL		3926913	0					
ANR	3927411	Argument	arg_num		3926913	1					
ANR	3927412	Identifier	arg_num		3926913	0					
ANR	3927413	IfStatement	if ( opcode == ZEND_SEND_VAR_NO_REF )		3926913	16					
ANR	3927414	Condition	opcode == ZEND_SEND_VAR_NO_REF	2758:6:79251:79280	3926913	0	True				
ANR	3927415	EqualityExpression	opcode == ZEND_SEND_VAR_NO_REF		3926913	0		==			
ANR	3927416	Identifier	opcode		3926913	0					
ANR	3927417	Identifier	ZEND_SEND_VAR_NO_REF		3926913	1					
ANR	3927418	CompoundStatement		90:38:2593:2593	3926913	1					
ANR	3927419	IfStatement	if ( fbc )		3926913	0					
ANR	3927420	Condition	fbc	2759:7:79292:79294	3926913	0	True				
ANR	3927421	Identifier	fbc		3926913	0					
ANR	3927422	CompoundStatement		91:12:2607:2607	3926913	1					
ANR	3927423	ExpressionStatement	flags |= ZEND_ARG_COMPILE_TIME_BOUND	2760:4:79303:79339	3926913	0	True				
ANR	3927424	AssignmentExpression	flags |= ZEND_ARG_COMPILE_TIME_BOUND		3926913	0		|=			
ANR	3927425	Identifier	flags		3926913	0					
ANR	3927426	Identifier	ZEND_ARG_COMPILE_TIME_BOUND		3926913	1					
ANR	3927427	IfStatement	if ( ( flags & ZEND_ARG_COMPILE_TIME_BOUND ) && ! ( flags & ZEND_ARG_SEND_BY_REF ) )		3926913	1					
ANR	3927428	Condition	( flags & ZEND_ARG_COMPILE_TIME_BOUND ) && ! ( flags & ZEND_ARG_SEND_BY_REF )	2762:7:79353:79424	3926913	0	True				
ANR	3927429	AndExpression	( flags & ZEND_ARG_COMPILE_TIME_BOUND ) && ! ( flags & ZEND_ARG_SEND_BY_REF )		3926913	0		&&			
ANR	3927430	BitAndExpression	flags & ZEND_ARG_COMPILE_TIME_BOUND		3926913	0		&			
ANR	3927431	Identifier	flags		3926913	0					
ANR	3927432	Identifier	ZEND_ARG_COMPILE_TIME_BOUND		3926913	1					
ANR	3927433	UnaryOperationExpression	! ( flags & ZEND_ARG_SEND_BY_REF )		3926913	1					
ANR	3927434	UnaryOperator	!		3926913	0					
ANR	3927435	BitAndExpression	flags & ZEND_ARG_SEND_BY_REF		3926913	1		&			
ANR	3927436	Identifier	flags		3926913	0					
ANR	3927437	Identifier	ZEND_ARG_SEND_BY_REF		3926913	1					
ANR	3927438	CompoundStatement		94:81:2737:2737	3926913	1					
ANR	3927439	ExpressionStatement	opline -> opcode = ZEND_SEND_VAR	2763:4:79433:79463	3926913	0	True				
ANR	3927440	AssignmentExpression	opline -> opcode = ZEND_SEND_VAR		3926913	0		=			
ANR	3927441	PtrMemberAccess	opline -> opcode		3926913	0					
ANR	3927442	Identifier	opline		3926913	0					
ANR	3927443	Identifier	opcode		3926913	1					
ANR	3927444	Identifier	ZEND_SEND_VAR		3926913	1					
ANR	3927445	ExpressionStatement	opline -> extended_value = ZEND_ARG_COMPILE_TIME_BOUND	2764:4:79469:79521	3926913	1	True				
ANR	3927446	AssignmentExpression	opline -> extended_value = ZEND_ARG_COMPILE_TIME_BOUND		3926913	0		=			
ANR	3927447	PtrMemberAccess	opline -> extended_value		3926913	0					
ANR	3927448	Identifier	opline		3926913	0					
ANR	3927449	Identifier	extended_value		3926913	1					
ANR	3927450	Identifier	ZEND_ARG_COMPILE_TIME_BOUND		3926913	1					
ANR	3927451	ElseStatement	else		3926913	0					
ANR	3927452	CompoundStatement		97:10:2843:2843	3926913	0					
ANR	3927453	ExpressionStatement	opline -> extended_value = flags	2766:4:79539:79569	3926913	0	True				
ANR	3927454	AssignmentExpression	opline -> extended_value = flags		3926913	0		=			
ANR	3927455	PtrMemberAccess	opline -> extended_value		3926913	0					
ANR	3927456	Identifier	opline		3926913	0					
ANR	3927457	Identifier	extended_value		3926913	1					
ANR	3927458	Identifier	flags		3926913	1					
ANR	3927459	ElseStatement	else		3926913	0					
ANR	3927460	IfStatement	if ( fbc )		3926913	0					
ANR	3927461	Condition	fbc	2768:13:79589:79591	3926913	0	True				
ANR	3927462	Identifier	fbc		3926913	0					
ANR	3927463	CompoundStatement		100:18:2904:2904	3926913	1					
ANR	3927464	ExpressionStatement	opline -> extended_value = ZEND_ARG_COMPILE_TIME_BOUND	2769:3:79599:79651	3926913	0	True				
ANR	3927465	AssignmentExpression	opline -> extended_value = ZEND_ARG_COMPILE_TIME_BOUND		3926913	0		=			
ANR	3927466	PtrMemberAccess	opline -> extended_value		3926913	0					
ANR	3927467	Identifier	opline		3926913	0					
ANR	3927468	Identifier	extended_value		3926913	1					
ANR	3927469	Identifier	ZEND_ARG_COMPILE_TIME_BOUND		3926913	1					
ANR	3927470	ReturnStatement	return arg_count ;	2773:1:79662:79678	3926913	5	True				
ANR	3927471	Identifier	arg_count		3926913	0					
ANR	3927472	ReturnType	uint32_t		3926913	1					
ANR	3927473	Identifier	zend_compile_args		3926913	2					
ANR	3927474	ParameterList	"zend_ast * ast , zend_function * fbc"		3926913	3					
ANR	3927475	Parameter	zend_ast * ast	2668:27:76644:76656	3926913	0	True				
ANR	3927476	ParameterType	zend_ast *		3926913	0					
ANR	3927477	Identifier	ast		3926913	1					
ANR	3927478	Parameter	zend_function * fbc	2668:42:76659:76676	3926913	1	True				
ANR	3927479	ParameterType	zend_function *		3926913	0					
ANR	3927480	Identifier	fbc		3926913	1					
ANR	3927481	CFGEntryNode	ENTRY		3926913		True				
ANR	3927482	CFGExitNode	EXIT		3926913		True				
ANR	3927483	Symbol	arg_num		3926913						
ANR	3927484	Symbol	ZEND_SEND_VAR_NO_REF		3926913						
ANR	3927485	Symbol	ZEND_SEND_REF		3926913						
ANR	3927486	Symbol	ast		3926913						
ANR	3927487	Symbol	IS_CV		3926913						
ANR	3927488	Symbol	ZEND_AST_UNPACK		3926913						
ANR	3927489	Symbol	E_COMPILE_ERROR		3926913						
ANR	3927490	Symbol	uses_arg_unpack		3926913						
ANR	3927491	Symbol	ARG_MAY_BE_SENT_BY_REF		3926913						
ANR	3927492	Symbol	opcode		3926913						
ANR	3927493	Symbol	opline -> result		3926913						
ANR	3927494	Symbol	opline -> extended_value		3926913						
ANR	3927495	Symbol	* args		3926913						
ANR	3927496	Symbol	opline		3926913						
ANR	3927497	Symbol	ZEND_ARG_SEND_FUNCTION		3926913						
ANR	3927498	Symbol	arg_node . op_type		3926913						
ANR	3927499	Symbol	ZEND_SEND_VAL_EX		3926913						
ANR	3927500	Symbol	BP_VAR_W		3926913						
ANR	3927501	Symbol	ZEND_ARG_SEND_SILENT		3926913						
ANR	3927502	Symbol	* * args		3926913						
ANR	3927503	Symbol	arg -> kind		3926913						
ANR	3927504	Symbol	BP_VAR_R		3926913						
ANR	3927505	Symbol	IS_TMP_VAR		3926913						
ANR	3927506	Symbol	arg -> child		3926913						
ANR	3927507	Symbol	IS_CONST		3926913						
ANR	3927508	Symbol	NULL		3926913						
ANR	3927509	Symbol	fbc		3926913						
ANR	3927510	Symbol	* * arg		3926913						
ANR	3927511	Symbol	ARG_MUST_BE_SENT_BY_REF		3926913						
ANR	3927512	Symbol	ZEND_SEND_VAL		3926913						
ANR	3927513	Symbol	ZEND_SEND_VAR		3926913						
ANR	3927514	Symbol	args -> child		3926913						
ANR	3927515	Symbol	* arg -> child		3926913						
ANR	3927516	Symbol	ZEND_ARG_SEND_BY_REF		3926913						
ANR	3927517	Symbol	IS_VAR		3926913						
ANR	3927518	Symbol	* arg		3926913						
ANR	3927519	Symbol	zend_emit_op		3926913						
ANR	3927520	Symbol	ARG_SHOULD_BE_SENT_BY_REF		3926913						
ANR	3927521	Symbol	opline -> op1		3926913						
ANR	3927522	Symbol	opline -> op2		3926913						
ANR	3927523	Symbol	arg_node		3926913						
ANR	3927524	Symbol	BP_VAR_SHIFT		3926913						
ANR	3927525	Symbol	* args -> child		3926913						
ANR	3927526	Symbol	ZEND_CALL_ARG		3926913						
ANR	3927527	Symbol	flags		3926913						
ANR	3927528	Symbol	arg		3926913						
ANR	3927529	Symbol	ZEND_SEND_VAR_EX		3926913						
ANR	3927530	Symbol	BP_VAR_FUNC_ARG		3926913						
ANR	3927531	Symbol	opline -> op2 . num		3926913						
ANR	3927532	Symbol	zend_is_variable		3926913						
ANR	3927533	Symbol	opline -> op2 . opline_num		3926913						
ANR	3927534	Symbol	get_next_op		3926913						
ANR	3927535	Symbol	zend_is_call		3926913						
ANR	3927536	Symbol	CG		3926913						
ANR	3927537	Symbol	active_op_array		3926913						
ANR	3927538	Symbol	i		3926913						
ANR	3927539	Symbol	ZEND_SEND_UNPACK		3926913						
ANR	3927540	Symbol	args		3926913						
ANR	3927541	Symbol	zend_ast_get_list		3926913						
ANR	3927542	Symbol	* i		3926913						
ANR	3927543	Symbol	* opline		3926913						
ANR	3927544	Symbol	opline -> opcode		3926913						
ANR	3927545	Symbol	args -> children		3926913						
ANR	3927546	Symbol	& arg_node		3926913						
ANR	3927547	Symbol	ZEND_ARG_COMPILE_TIME_BOUND		3926913						
ANR	3927548	Symbol	opline -> result . var		3926913						
ANR	3927549	Symbol	arg_count		3926913						
ANR	3927550	Function	zend_get_call_op	2777:0:79693:80446							
ANR	3927551	FunctionDef	"zend_get_call_op (zend_uchar init_op , zend_function * fbc)"		3927550	0					
ANR	3927552	CompoundStatement		2778:0:79780:80446	3927550	0					
ANR	3927553	IfStatement	if ( fbc )		3927550	0					
ANR	3927554	Condition	fbc	2779:5:79787:79789	3927550	0	True				
ANR	3927555	Identifier	fbc		3927550	0					
ANR	3927556	CompoundStatement		2:10:11:11	3927550	1					
ANR	3927557	IfStatement	if ( fbc -> type == ZEND_INTERNAL_FUNCTION )		3927550	0					
ANR	3927558	Condition	fbc -> type == ZEND_INTERNAL_FUNCTION	2780:6:79800:79834	3927550	0	True				
ANR	3927559	EqualityExpression	fbc -> type == ZEND_INTERNAL_FUNCTION		3927550	0		==			
ANR	3927560	PtrMemberAccess	fbc -> type		3927550	0					
ANR	3927561	Identifier	fbc		3927550	0					
ANR	3927562	Identifier	type		3927550	1					
ANR	3927563	Identifier	ZEND_INTERNAL_FUNCTION		3927550	1					
ANR	3927564	CompoundStatement		3:43:56:56	3927550	1					
ANR	3927565	IfStatement	if ( ! zend_execute_internal && ! fbc -> common . scope && ! ( fbc -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE ) ) )		3927550	0					
ANR	3927566	Condition	! zend_execute_internal && ! fbc -> common . scope && ! ( fbc -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE ) )	2781:7:79846:80022	3927550	0	True				
ANR	3927567	AndExpression	! zend_execute_internal && ! fbc -> common . scope && ! ( fbc -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE ) )		3927550	0		&&			
ANR	3927568	UnaryOperationExpression	! zend_execute_internal		3927550	0					
ANR	3927569	UnaryOperator	!		3927550	0					
ANR	3927570	Identifier	zend_execute_internal		3927550	1					
ANR	3927571	AndExpression	! fbc -> common . scope && ! ( fbc -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE ) )		3927550	1		&&			
ANR	3927572	UnaryOperationExpression	! fbc -> common . scope		3927550	0					
ANR	3927573	UnaryOperator	!		3927550	0					
ANR	3927574	MemberAccess	fbc -> common . scope		3927550	1					
ANR	3927575	PtrMemberAccess	fbc -> common		3927550	0					
ANR	3927576	Identifier	fbc		3927550	0					
ANR	3927577	Identifier	common		3927550	1					
ANR	3927578	Identifier	scope		3927550	1					
ANR	3927579	UnaryOperationExpression	! ( fbc -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE ) )		3927550	1					
ANR	3927580	UnaryOperator	!		3927550	0					
ANR	3927581	BitAndExpression	fbc -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE )		3927550	1		&			
ANR	3927582	MemberAccess	fbc -> common . fn_flags		3927550	0					
ANR	3927583	PtrMemberAccess	fbc -> common		3927550	0					
ANR	3927584	Identifier	fbc		3927550	0					
ANR	3927585	Identifier	common		3927550	1					
ANR	3927586	Identifier	fn_flags		3927550	1					
ANR	3927587	InclusiveOrExpression	ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE		3927550	1		|			
ANR	3927588	Identifier	ZEND_ACC_ABSTRACT		3927550	0					
ANR	3927589	InclusiveOrExpression	ZEND_ACC_DEPRECATED | ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE		3927550	1		|			
ANR	3927590	Identifier	ZEND_ACC_DEPRECATED		3927550	0					
ANR	3927591	InclusiveOrExpression	ZEND_ACC_HAS_TYPE_HINTS | ZEND_ACC_RETURN_REFERENCE		3927550	1		|			
ANR	3927592	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3927550	0					
ANR	3927593	Identifier	ZEND_ACC_RETURN_REFERENCE		3927550	1					
ANR	3927594	CompoundStatement		6:124:244:244	3927550	1					
ANR	3927595	ReturnStatement	return ZEND_DO_ICALL ;	2784:4:80031:80051	3927550	0	True				
ANR	3927596	Identifier	ZEND_DO_ICALL		3927550	0					
ANR	3927597	ElseStatement	else		3927550	0					
ANR	3927598	CompoundStatement		9:9:286:286	3927550	0					
ANR	3927599	IfStatement	if ( zend_execute_ex == execute_ex && ! ( fbc -> common . fn_flags & ZEND_ACC_GENERATOR ) )		3927550	0					
ANR	3927600	Condition	zend_execute_ex == execute_ex && ! ( fbc -> common . fn_flags & ZEND_ACC_GENERATOR )	2787:7:80076:80159	3927550	0	True				
ANR	3927601	AndExpression	zend_execute_ex == execute_ex && ! ( fbc -> common . fn_flags & ZEND_ACC_GENERATOR )		3927550	0		&&			
ANR	3927602	EqualityExpression	zend_execute_ex == execute_ex		3927550	0		==			
ANR	3927603	Identifier	zend_execute_ex		3927550	0					
ANR	3927604	Identifier	execute_ex		3927550	1					
ANR	3927605	UnaryOperationExpression	! ( fbc -> common . fn_flags & ZEND_ACC_GENERATOR )		3927550	1					
ANR	3927606	UnaryOperator	!		3927550	0					
ANR	3927607	BitAndExpression	fbc -> common . fn_flags & ZEND_ACC_GENERATOR		3927550	1		&			
ANR	3927608	MemberAccess	fbc -> common . fn_flags		3927550	0					
ANR	3927609	PtrMemberAccess	fbc -> common		3927550	0					
ANR	3927610	Identifier	fbc		3927550	0					
ANR	3927611	Identifier	common		3927550	1					
ANR	3927612	Identifier	fn_flags		3927550	1					
ANR	3927613	Identifier	ZEND_ACC_GENERATOR		3927550	1					
ANR	3927614	CompoundStatement		11:53:381:381	3927550	1					
ANR	3927615	ReturnStatement	return ZEND_DO_UCALL ;	2789:4:80168:80188	3927550	0	True				
ANR	3927616	Identifier	ZEND_DO_UCALL		3927550	0					
ANR	3927617	ElseStatement	else		3927550	0					
ANR	3927618	IfStatement	if ( zend_execute_ex == execute_ex && ! zend_execute_internal && ( init_op == ZEND_INIT_FCALL_BY_NAME || init_op == ZEND_INIT_NS_FCALL_BY_NAME ) )		3927550	0					
ANR	3927619	Condition	zend_execute_ex == execute_ex && ! zend_execute_internal && ( init_op == ZEND_INIT_FCALL_BY_NAME || init_op == ZEND_INIT_NS_FCALL_BY_NAME )	2792:12:80211:80383	3927550	0	True				
ANR	3927620	AndExpression	zend_execute_ex == execute_ex && ! zend_execute_internal && ( init_op == ZEND_INIT_FCALL_BY_NAME || init_op == ZEND_INIT_NS_FCALL_BY_NAME )		3927550	0		&&			
ANR	3927621	EqualityExpression	zend_execute_ex == execute_ex		3927550	0		==			
ANR	3927622	Identifier	zend_execute_ex		3927550	0					
ANR	3927623	Identifier	execute_ex		3927550	1					
ANR	3927624	AndExpression	! zend_execute_internal && ( init_op == ZEND_INIT_FCALL_BY_NAME || init_op == ZEND_INIT_NS_FCALL_BY_NAME )		3927550	1		&&			
ANR	3927625	UnaryOperationExpression	! zend_execute_internal		3927550	0					
ANR	3927626	UnaryOperator	!		3927550	0					
ANR	3927627	Identifier	zend_execute_internal		3927550	1					
ANR	3927628	OrExpression	init_op == ZEND_INIT_FCALL_BY_NAME || init_op == ZEND_INIT_NS_FCALL_BY_NAME		3927550	1		||			
ANR	3927629	EqualityExpression	init_op == ZEND_INIT_FCALL_BY_NAME		3927550	0		==			
ANR	3927630	Identifier	init_op		3927550	0					
ANR	3927631	Identifier	ZEND_INIT_FCALL_BY_NAME		3927550	1					
ANR	3927632	EqualityExpression	init_op == ZEND_INIT_NS_FCALL_BY_NAME		3927550	1		==			
ANR	3927633	Identifier	init_op		3927550	0					
ANR	3927634	Identifier	ZEND_INIT_NS_FCALL_BY_NAME		3927550	1					
ANR	3927635	CompoundStatement		18:53:605:605	3927550	1					
ANR	3927636	ReturnStatement	return ZEND_DO_FCALL_BY_NAME ;	2796:2:80390:80418	3927550	0	True				
ANR	3927637	Identifier	ZEND_DO_FCALL_BY_NAME		3927550	0					
ANR	3927638	ReturnStatement	return ZEND_DO_FCALL ;	2798:1:80424:80444	3927550	1	True				
ANR	3927639	Identifier	ZEND_DO_FCALL		3927550	0					
ANR	3927640	ReturnType	ZEND_API zend_uchar		3927550	1					
ANR	3927641	Identifier	zend_get_call_op		3927550	2					
ANR	3927642	ParameterList	"zend_uchar init_op , zend_function * fbc"		3927550	3					
ANR	3927643	Parameter	zend_uchar init_op	2777:37:79730:79747	3927550	0	True				
ANR	3927644	ParameterType	zend_uchar		3927550	0					
ANR	3927645	Identifier	init_op		3927550	1					
ANR	3927646	Parameter	zend_function * fbc	2777:57:79750:79767	3927550	1	True				
ANR	3927647	ParameterType	zend_function *		3927550	0					
ANR	3927648	Identifier	fbc		3927550	1					
ANR	3927649	CFGEntryNode	ENTRY		3927550		True				
ANR	3927650	CFGExitNode	EXIT		3927550		True				
ANR	3927651	Symbol	ZEND_INIT_NS_FCALL_BY_NAME		3927550						
ANR	3927652	Symbol	ZEND_DO_FCALL_BY_NAME		3927550						
ANR	3927653	Symbol	fbc		3927550						
ANR	3927654	Symbol	fbc -> type		3927550						
ANR	3927655	Symbol	fbc -> common		3927550						
ANR	3927656	Symbol	* fbc		3927550						
ANR	3927657	Symbol	ZEND_ACC_HAS_TYPE_HINTS		3927550						
ANR	3927658	Symbol	ZEND_INTERNAL_FUNCTION		3927550						
ANR	3927659	Symbol	ZEND_DO_UCALL		3927550						
ANR	3927660	Symbol	init_op		3927550						
ANR	3927661	Symbol	ZEND_ACC_ABSTRACT		3927550						
ANR	3927662	Symbol	ZEND_ACC_DEPRECATED		3927550						
ANR	3927663	Symbol	ZEND_DO_FCALL		3927550						
ANR	3927664	Symbol	ZEND_DO_ICALL		3927550						
ANR	3927665	Symbol	ZEND_ACC_RETURN_REFERENCE		3927550						
ANR	3927666	Symbol	zend_execute_internal		3927550						
ANR	3927667	Symbol	execute_ex		3927550						
ANR	3927668	Symbol	zend_execute_ex		3927550						
ANR	3927669	Symbol	ZEND_ACC_GENERATOR		3927550						
ANR	3927670	Symbol	fbc -> common . fn_flags		3927550						
ANR	3927671	Symbol	fbc -> common . scope		3927550						
ANR	3927672	Symbol	ZEND_INIT_FCALL_BY_NAME		3927550						
ANR	3927673	Function	zend_compile_call_common	2802:0:80459:81177							
ANR	3927674	FunctionDef	"zend_compile_call_common (znode * result , zend_ast * args_ast , zend_function * fbc)"		3927673	0					
ANR	3927675	CompoundStatement		2803:0:80554:81177	3927673	0					
ANR	3927676	IdentifierDeclStatement	zend_op * opline ;	2804:1:80557:80572	3927673	0	True				
ANR	3927677	IdentifierDecl	* opline		3927673	0					
ANR	3927678	IdentifierDeclType	zend_op *		3927673	0					
ANR	3927679	Identifier	opline		3927673	1					
ANR	3927680	IdentifierDeclStatement	uint32_t opnum_init = get_next_op_number ( CG ( active_op_array ) ) - 1 ;	2805:1:80575:80640	3927673	1	True				
ANR	3927681	IdentifierDecl	opnum_init = get_next_op_number ( CG ( active_op_array ) ) - 1		3927673	0					
ANR	3927682	IdentifierDeclType	uint32_t		3927673	0					
ANR	3927683	Identifier	opnum_init		3927673	1					
ANR	3927684	AssignmentExpression	opnum_init = get_next_op_number ( CG ( active_op_array ) ) - 1		3927673	2		=			
ANR	3927685	Identifier	opnum_init		3927673	0					
ANR	3927686	AdditiveExpression	get_next_op_number ( CG ( active_op_array ) ) - 1		3927673	1		-			
ANR	3927687	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3927673	0					
ANR	3927688	Callee	get_next_op_number		3927673	0					
ANR	3927689	Identifier	get_next_op_number		3927673	0					
ANR	3927690	ArgumentList	CG ( active_op_array )		3927673	1					
ANR	3927691	Argument	CG ( active_op_array )		3927673	0					
ANR	3927692	CallExpression	CG ( active_op_array )		3927673	0					
ANR	3927693	Callee	CG		3927673	0					
ANR	3927694	Identifier	CG		3927673	0					
ANR	3927695	ArgumentList	active_op_array		3927673	1					
ANR	3927696	Argument	active_op_array		3927673	0					
ANR	3927697	Identifier	active_op_array		3927673	0					
ANR	3927698	PrimaryExpression	1		3927673	1					
ANR	3927699	IdentifierDeclStatement	uint32_t arg_count ;	2806:1:80643:80661	3927673	2	True				
ANR	3927700	IdentifierDecl	arg_count		3927673	0					
ANR	3927701	IdentifierDeclType	uint32_t		3927673	0					
ANR	3927702	Identifier	arg_count		3927673	1					
ANR	3927703	IdentifierDeclStatement	uint32_t call_flags ;	2807:1:80664:80683	3927673	3	True				
ANR	3927704	IdentifierDecl	call_flags		3927673	0					
ANR	3927705	IdentifierDeclType	uint32_t		3927673	0					
ANR	3927706	Identifier	call_flags		3927673	1					
ANR	3927707	ExpressionStatement	zend_do_extended_fcall_begin ( )	2809:1:80687:80717	3927673	4	True				
ANR	3927708	CallExpression	zend_do_extended_fcall_begin ( )		3927673	0					
ANR	3927709	Callee	zend_do_extended_fcall_begin		3927673	0					
ANR	3927710	Identifier	zend_do_extended_fcall_begin		3927673	0					
ANR	3927711	ArgumentList			3927673	1					
ANR	3927712	ExpressionStatement	"arg_count = zend_compile_args ( args_ast , fbc )"	2811:1:80721:80765	3927673	5	True				
ANR	3927713	AssignmentExpression	"arg_count = zend_compile_args ( args_ast , fbc )"		3927673	0		=			
ANR	3927714	Identifier	arg_count		3927673	0					
ANR	3927715	CallExpression	"zend_compile_args ( args_ast , fbc )"		3927673	1					
ANR	3927716	Callee	zend_compile_args		3927673	0					
ANR	3927717	Identifier	zend_compile_args		3927673	0					
ANR	3927718	ArgumentList	args_ast		3927673	1					
ANR	3927719	Argument	args_ast		3927673	0					
ANR	3927720	Identifier	args_ast		3927673	0					
ANR	3927721	Argument	fbc		3927673	1					
ANR	3927722	Identifier	fbc		3927673	0					
ANR	3927723	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum_init ]	2813:1:80769:80819	3927673	6	True				
ANR	3927724	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum_init ]		3927673	0		=			
ANR	3927725	Identifier	opline		3927673	0					
ANR	3927726	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum_init ]		3927673	1					
ANR	3927727	UnaryOperator	&		3927673	0					
ANR	3927728	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum_init ]		3927673	1					
ANR	3927729	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3927673	0					
ANR	3927730	CallExpression	CG ( active_op_array )		3927673	0					
ANR	3927731	Callee	CG		3927673	0					
ANR	3927732	Identifier	CG		3927673	0					
ANR	3927733	ArgumentList	active_op_array		3927673	1					
ANR	3927734	Argument	active_op_array		3927673	0					
ANR	3927735	Identifier	active_op_array		3927673	0					
ANR	3927736	Identifier	opcodes		3927673	1					
ANR	3927737	Identifier	opnum_init		3927673	1					
ANR	3927738	ExpressionStatement	opline -> extended_value = arg_count	2814:1:80822:80856	3927673	7	True				
ANR	3927739	AssignmentExpression	opline -> extended_value = arg_count		3927673	0		=			
ANR	3927740	PtrMemberAccess	opline -> extended_value		3927673	0					
ANR	3927741	Identifier	opline		3927673	0					
ANR	3927742	Identifier	extended_value		3927673	1					
ANR	3927743	Identifier	arg_count		3927673	1					
ANR	3927744	IfStatement	if ( opline -> opcode == ZEND_INIT_FCALL )		3927673	8					
ANR	3927745	Condition	opline -> opcode == ZEND_INIT_FCALL	2816:5:80864:80896	3927673	0	True				
ANR	3927746	EqualityExpression	opline -> opcode == ZEND_INIT_FCALL		3927673	0		==			
ANR	3927747	PtrMemberAccess	opline -> opcode		3927673	0					
ANR	3927748	Identifier	opline		3927673	0					
ANR	3927749	Identifier	opcode		3927673	1					
ANR	3927750	Identifier	ZEND_INIT_FCALL		3927673	1					
ANR	3927751	CompoundStatement		14:40:344:344	3927673	1					
ANR	3927752	ExpressionStatement	"opline -> op1 . num = zend_vm_calc_used_stack ( arg_count , fbc )"	2817:2:80903:80960	3927673	0	True				
ANR	3927753	AssignmentExpression	"opline -> op1 . num = zend_vm_calc_used_stack ( arg_count , fbc )"		3927673	0		=			
ANR	3927754	MemberAccess	opline -> op1 . num		3927673	0					
ANR	3927755	PtrMemberAccess	opline -> op1		3927673	0					
ANR	3927756	Identifier	opline		3927673	0					
ANR	3927757	Identifier	op1		3927673	1					
ANR	3927758	Identifier	num		3927673	1					
ANR	3927759	CallExpression	"zend_vm_calc_used_stack ( arg_count , fbc )"		3927673	1					
ANR	3927760	Callee	zend_vm_calc_used_stack		3927673	0					
ANR	3927761	Identifier	zend_vm_calc_used_stack		3927673	0					
ANR	3927762	ArgumentList	arg_count		3927673	1					
ANR	3927763	Argument	arg_count		3927673	0					
ANR	3927764	Identifier	arg_count		3927673	0					
ANR	3927765	Argument	fbc		3927673	1					
ANR	3927766	Identifier	fbc		3927673	0					
ANR	3927767	ExpressionStatement	call_flags = ( opline -> opcode == ZEND_NEW ? ZEND_CALL_CTOR : 0 )	2820:1:80967:81029	3927673	9	True				
ANR	3927768	AssignmentExpression	call_flags = ( opline -> opcode == ZEND_NEW ? ZEND_CALL_CTOR : 0 )		3927673	0		=			
ANR	3927769	Identifier	call_flags		3927673	0					
ANR	3927770	ConditionalExpression	opline -> opcode == ZEND_NEW ? ZEND_CALL_CTOR : 0		3927673	1					
ANR	3927771	Condition	opline -> opcode == ZEND_NEW		3927673	0					
ANR	3927772	EqualityExpression	opline -> opcode == ZEND_NEW		3927673	0		==			
ANR	3927773	PtrMemberAccess	opline -> opcode		3927673	0					
ANR	3927774	Identifier	opline		3927673	0					
ANR	3927775	Identifier	opcode		3927673	1					
ANR	3927776	Identifier	ZEND_NEW		3927673	1					
ANR	3927777	Identifier	ZEND_CALL_CTOR		3927673	1					
ANR	3927778	PrimaryExpression	0		3927673	2					
ANR	3927779	ExpressionStatement	"opline = zend_emit_op ( result , zend_get_call_op ( opline -> opcode , fbc ) , NULL , NULL )"	2821:1:81032:81112	3927673	10	True				
ANR	3927780	AssignmentExpression	"opline = zend_emit_op ( result , zend_get_call_op ( opline -> opcode , fbc ) , NULL , NULL )"		3927673	0		=			
ANR	3927781	Identifier	opline		3927673	0					
ANR	3927782	CallExpression	"zend_emit_op ( result , zend_get_call_op ( opline -> opcode , fbc ) , NULL , NULL )"		3927673	1					
ANR	3927783	Callee	zend_emit_op		3927673	0					
ANR	3927784	Identifier	zend_emit_op		3927673	0					
ANR	3927785	ArgumentList	result		3927673	1					
ANR	3927786	Argument	result		3927673	0					
ANR	3927787	Identifier	result		3927673	0					
ANR	3927788	Argument	"zend_get_call_op ( opline -> opcode , fbc )"		3927673	1					
ANR	3927789	CallExpression	"zend_get_call_op ( opline -> opcode , fbc )"		3927673	0					
ANR	3927790	Callee	zend_get_call_op		3927673	0					
ANR	3927791	Identifier	zend_get_call_op		3927673	0					
ANR	3927792	ArgumentList	opline -> opcode		3927673	1					
ANR	3927793	Argument	opline -> opcode		3927673	0					
ANR	3927794	PtrMemberAccess	opline -> opcode		3927673	0					
ANR	3927795	Identifier	opline		3927673	0					
ANR	3927796	Identifier	opcode		3927673	1					
ANR	3927797	Argument	fbc		3927673	1					
ANR	3927798	Identifier	fbc		3927673	0					
ANR	3927799	Argument	NULL		3927673	2					
ANR	3927800	Identifier	NULL		3927673	0					
ANR	3927801	Argument	NULL		3927673	3					
ANR	3927802	Identifier	NULL		3927673	0					
ANR	3927803	ExpressionStatement	opline -> op1 . num = call_flags	2822:1:81115:81143	3927673	11	True				
ANR	3927804	AssignmentExpression	opline -> op1 . num = call_flags		3927673	0		=			
ANR	3927805	MemberAccess	opline -> op1 . num		3927673	0					
ANR	3927806	PtrMemberAccess	opline -> op1		3927673	0					
ANR	3927807	Identifier	opline		3927673	0					
ANR	3927808	Identifier	op1		3927673	1					
ANR	3927809	Identifier	num		3927673	1					
ANR	3927810	Identifier	call_flags		3927673	1					
ANR	3927811	ExpressionStatement	zend_do_extended_fcall_end ( )	2824:1:81147:81175	3927673	12	True				
ANR	3927812	CallExpression	zend_do_extended_fcall_end ( )		3927673	0					
ANR	3927813	Callee	zend_do_extended_fcall_end		3927673	0					
ANR	3927814	Identifier	zend_do_extended_fcall_end		3927673	0					
ANR	3927815	ArgumentList			3927673	1					
ANR	3927816	ReturnType	void		3927673	1					
ANR	3927817	Identifier	zend_compile_call_common		3927673	2					
ANR	3927818	ParameterList	"znode * result , zend_ast * args_ast , zend_function * fbc"		3927673	3					
ANR	3927819	Parameter	znode * result	2802:30:80489:80501	3927673	0	True				
ANR	3927820	ParameterType	znode *		3927673	0					
ANR	3927821	Identifier	result		3927673	1					
ANR	3927822	Parameter	zend_ast * args_ast	2802:45:80504:80521	3927673	1	True				
ANR	3927823	ParameterType	zend_ast *		3927673	0					
ANR	3927824	Identifier	args_ast		3927673	1					
ANR	3927825	Parameter	zend_function * fbc	2802:65:80524:80541	3927673	2	True				
ANR	3927826	ParameterType	zend_function *		3927673	0					
ANR	3927827	Identifier	fbc		3927673	1					
ANR	3927828	CFGEntryNode	ENTRY		3927673		True				
ANR	3927829	CFGExitNode	EXIT		3927673		True				
ANR	3927830	Symbol	opline -> op1		3927673						
ANR	3927831	Symbol	call_flags		3927673						
ANR	3927832	Symbol	* CG		3927673						
ANR	3927833	Symbol	CG ( active_op_array ) -> opcodes		3927673						
ANR	3927834	Symbol	opline -> extended_value		3927673						
ANR	3927835	Symbol	result		3927673						
ANR	3927836	Symbol	opline		3927673						
ANR	3927837	Symbol	ZEND_CALL_CTOR		3927673						
ANR	3927838	Symbol	ZEND_INIT_FCALL		3927673						
ANR	3927839	Symbol	zend_compile_args		3927673						
ANR	3927840	Symbol	ZEND_NEW		3927673						
ANR	3927841	Symbol	NULL		3927673						
ANR	3927842	Symbol	CG		3927673						
ANR	3927843	Symbol	zend_get_call_op		3927673						
ANR	3927844	Symbol	opnum_init		3927673						
ANR	3927845	Symbol	fbc		3927673						
ANR	3927846	Symbol	active_op_array		3927673						
ANR	3927847	Symbol	* opline		3927673						
ANR	3927848	Symbol	opline -> opcode		3927673						
ANR	3927849	Symbol	opline -> op1 . num		3927673						
ANR	3927850	Symbol	args_ast		3927673						
ANR	3927851	Symbol	get_next_op_number		3927673						
ANR	3927852	Symbol	zend_vm_calc_used_stack		3927673						
ANR	3927853	Symbol	arg_count		3927673						
ANR	3927854	Symbol	zend_emit_op		3927673						
ANR	3927855	Function	zend_compile_function_name	2828:0:81190:81564							
ANR	3927856	FunctionDef	"zend_compile_function_name (znode * name_node , zend_ast * name_ast)"		3927855	0					
ANR	3927857	CompoundStatement		2829:0:81275:81564	3927855	0					
ANR	3927858	IdentifierDeclStatement	zend_string * orig_name = zend_ast_get_str ( name_ast ) ;	2830:1:81278:81329	3927855	0	True				
ANR	3927859	IdentifierDecl	* orig_name = zend_ast_get_str ( name_ast )		3927855	0					
ANR	3927860	IdentifierDeclType	zend_string *		3927855	0					
ANR	3927861	Identifier	orig_name		3927855	1					
ANR	3927862	AssignmentExpression	* orig_name = zend_ast_get_str ( name_ast )		3927855	2		=			
ANR	3927863	Identifier	orig_name		3927855	0					
ANR	3927864	CallExpression	zend_ast_get_str ( name_ast )		3927855	1					
ANR	3927865	Callee	zend_ast_get_str		3927855	0					
ANR	3927866	Identifier	zend_ast_get_str		3927855	0					
ANR	3927867	ArgumentList	name_ast		3927855	1					
ANR	3927868	Argument	name_ast		3927855	0					
ANR	3927869	Identifier	name_ast		3927855	0					
ANR	3927870	IdentifierDeclStatement	zend_bool is_fully_qualified ;	2831:1:81332:81360	3927855	1	True				
ANR	3927871	IdentifierDecl	is_fully_qualified		3927855	0					
ANR	3927872	IdentifierDeclType	zend_bool		3927855	0					
ANR	3927873	Identifier	is_fully_qualified		3927855	1					
ANR	3927874	ExpressionStatement	name_node -> op_type = IS_CONST	2833:1:81364:81393	3927855	2	True				
ANR	3927875	AssignmentExpression	name_node -> op_type = IS_CONST		3927855	0		=			
ANR	3927876	PtrMemberAccess	name_node -> op_type		3927855	0					
ANR	3927877	Identifier	name_node		3927855	0					
ANR	3927878	Identifier	op_type		3927855	1					
ANR	3927879	Identifier	IS_CONST		3927855	1					
ANR	3927880	ExpressionStatement	"ZVAL_STR ( & name_node -> u . constant , zend_resolve_function_name ( orig_name , name_ast -> attr , & is_fully_qualified ) )"	2834:1:81396:81507	3927855	3	True				
ANR	3927881	CallExpression	"ZVAL_STR ( & name_node -> u . constant , zend_resolve_function_name ( orig_name , name_ast -> attr , & is_fully_qualified ) )"		3927855	0					
ANR	3927882	Callee	ZVAL_STR		3927855	0					
ANR	3927883	Identifier	ZVAL_STR		3927855	0					
ANR	3927884	ArgumentList	& name_node -> u . constant		3927855	1					
ANR	3927885	Argument	& name_node -> u . constant		3927855	0					
ANR	3927886	UnaryOperationExpression	& name_node -> u . constant		3927855	0					
ANR	3927887	UnaryOperator	&		3927855	0					
ANR	3927888	MemberAccess	name_node -> u . constant		3927855	1					
ANR	3927889	PtrMemberAccess	name_node -> u		3927855	0					
ANR	3927890	Identifier	name_node		3927855	0					
ANR	3927891	Identifier	u		3927855	1					
ANR	3927892	Identifier	constant		3927855	1					
ANR	3927893	Argument	"zend_resolve_function_name ( orig_name , name_ast -> attr , & is_fully_qualified )"		3927855	1					
ANR	3927894	CallExpression	"zend_resolve_function_name ( orig_name , name_ast -> attr , & is_fully_qualified )"		3927855	0					
ANR	3927895	Callee	zend_resolve_function_name		3927855	0					
ANR	3927896	Identifier	zend_resolve_function_name		3927855	0					
ANR	3927897	ArgumentList	orig_name		3927855	1					
ANR	3927898	Argument	orig_name		3927855	0					
ANR	3927899	Identifier	orig_name		3927855	0					
ANR	3927900	Argument	name_ast -> attr		3927855	1					
ANR	3927901	PtrMemberAccess	name_ast -> attr		3927855	0					
ANR	3927902	Identifier	name_ast		3927855	0					
ANR	3927903	Identifier	attr		3927855	1					
ANR	3927904	Argument	& is_fully_qualified		3927855	2					
ANR	3927905	UnaryOperationExpression	& is_fully_qualified		3927855	0					
ANR	3927906	UnaryOperator	&		3927855	0					
ANR	3927907	Identifier	is_fully_qualified		3927855	1					
ANR	3927908	ReturnStatement	return ! is_fully_qualified && FC ( current_namespace ) ;	2837:1:81511:81562	3927855	4	True				
ANR	3927909	AndExpression	! is_fully_qualified && FC ( current_namespace )		3927855	0		&&			
ANR	3927910	UnaryOperationExpression	! is_fully_qualified		3927855	0					
ANR	3927911	UnaryOperator	!		3927855	0					
ANR	3927912	Identifier	is_fully_qualified		3927855	1					
ANR	3927913	CallExpression	FC ( current_namespace )		3927855	1					
ANR	3927914	Callee	FC		3927855	0					
ANR	3927915	Identifier	FC		3927855	0					
ANR	3927916	ArgumentList	current_namespace		3927855	1					
ANR	3927917	Argument	current_namespace		3927855	0					
ANR	3927918	Identifier	current_namespace		3927855	0					
ANR	3927919	ReturnType	zend_bool		3927855	1					
ANR	3927920	Identifier	zend_compile_function_name		3927855	2					
ANR	3927921	ParameterList	"znode * name_node , zend_ast * name_ast"		3927855	3					
ANR	3927922	Parameter	znode * name_node	2828:37:81227:81242	3927855	0	True				
ANR	3927923	ParameterType	znode *		3927855	0					
ANR	3927924	Identifier	name_node		3927855	1					
ANR	3927925	Parameter	zend_ast * name_ast	2828:55:81245:81262	3927855	1	True				
ANR	3927926	ParameterType	zend_ast *		3927855	0					
ANR	3927927	Identifier	name_ast		3927855	1					
ANR	3927928	CFGEntryNode	ENTRY		3927855		True				
ANR	3927929	CFGExitNode	EXIT		3927855		True				
ANR	3927930	Symbol	IS_CONST		3927855						
ANR	3927931	Symbol	& name_node -> u . constant		3927855						
ANR	3927932	Symbol	name_node -> u		3927855						
ANR	3927933	Symbol	is_fully_qualified		3927855						
ANR	3927934	Symbol	name_ast -> attr		3927855						
ANR	3927935	Symbol	* name_ast		3927855						
ANR	3927936	Symbol	zend_ast_get_str		3927855						
ANR	3927937	Symbol	current_namespace		3927855						
ANR	3927938	Symbol	zend_resolve_function_name		3927855						
ANR	3927939	Symbol	name_ast		3927855						
ANR	3927940	Symbol	orig_name		3927855						
ANR	3927941	Symbol	& name_node -> u		3927855						
ANR	3927942	Symbol	* name_node		3927855						
ANR	3927943	Symbol	name_node -> op_type		3927855						
ANR	3927944	Symbol	& is_fully_qualified		3927855						
ANR	3927945	Symbol	FC		3927855						
ANR	3927946	Symbol	name_node		3927855						
ANR	3927947	Function	zend_compile_ns_call	2841:0:81577:82030							
ANR	3927948	FunctionDef	"zend_compile_ns_call (znode * result , znode * name_node , zend_ast * args_ast)"		3927947	0					
ANR	3927949	CompoundStatement		2842:0:81666:82030	3927947	0					
ANR	3927950	IdentifierDeclStatement	zend_op * opline = get_next_op ( CG ( active_op_array ) ) ;	2843:1:81669:81719	3927947	0	True				
ANR	3927951	IdentifierDecl	* opline = get_next_op ( CG ( active_op_array ) )		3927947	0					
ANR	3927952	IdentifierDeclType	zend_op *		3927947	0					
ANR	3927953	Identifier	opline		3927947	1					
ANR	3927954	AssignmentExpression	* opline = get_next_op ( CG ( active_op_array ) )		3927947	2		=			
ANR	3927955	Identifier	opline		3927947	0					
ANR	3927956	CallExpression	get_next_op ( CG ( active_op_array ) )		3927947	1					
ANR	3927957	Callee	get_next_op		3927947	0					
ANR	3927958	Identifier	get_next_op		3927947	0					
ANR	3927959	ArgumentList	CG ( active_op_array )		3927947	1					
ANR	3927960	Argument	CG ( active_op_array )		3927947	0					
ANR	3927961	CallExpression	CG ( active_op_array )		3927947	0					
ANR	3927962	Callee	CG		3927947	0					
ANR	3927963	Identifier	CG		3927947	0					
ANR	3927964	ArgumentList	active_op_array		3927947	1					
ANR	3927965	Argument	active_op_array		3927947	0					
ANR	3927966	Identifier	active_op_array		3927947	0					
ANR	3927967	ExpressionStatement	opline -> opcode = ZEND_INIT_NS_FCALL_BY_NAME	2844:1:81722:81765	3927947	1	True				
ANR	3927968	AssignmentExpression	opline -> opcode = ZEND_INIT_NS_FCALL_BY_NAME		3927947	0		=			
ANR	3927969	PtrMemberAccess	opline -> opcode		3927947	0					
ANR	3927970	Identifier	opline		3927947	0					
ANR	3927971	Identifier	opcode		3927947	1					
ANR	3927972	Identifier	ZEND_INIT_NS_FCALL_BY_NAME		3927947	1					
ANR	3927973	ExpressionStatement	SET_UNUSED ( opline -> op1 )	2845:1:81768:81791	3927947	2	True				
ANR	3927974	CallExpression	SET_UNUSED ( opline -> op1 )		3927947	0					
ANR	3927975	Callee	SET_UNUSED		3927947	0					
ANR	3927976	Identifier	SET_UNUSED		3927947	0					
ANR	3927977	ArgumentList	opline -> op1		3927947	1					
ANR	3927978	Argument	opline -> op1		3927947	0					
ANR	3927979	PtrMemberAccess	opline -> op1		3927947	0					
ANR	3927980	Identifier	opline		3927947	0					
ANR	3927981	Identifier	op1		3927947	1					
ANR	3927982	ExpressionStatement	opline -> op2_type = IS_CONST	2846:1:81794:81821	3927947	3	True				
ANR	3927983	AssignmentExpression	opline -> op2_type = IS_CONST		3927947	0		=			
ANR	3927984	PtrMemberAccess	opline -> op2_type		3927947	0					
ANR	3927985	Identifier	opline		3927947	0					
ANR	3927986	Identifier	op2_type		3927947	1					
ANR	3927987	Identifier	IS_CONST		3927947	1					
ANR	3927988	ExpressionStatement	"opline -> op2 . constant = zend_add_ns_func_name_literal ( CG ( active_op_array ) , Z_STR ( name_node -> u . constant ) )"	2847:1:81824:81930	3927947	4	True				
ANR	3927989	AssignmentExpression	"opline -> op2 . constant = zend_add_ns_func_name_literal ( CG ( active_op_array ) , Z_STR ( name_node -> u . constant ) )"		3927947	0		=			
ANR	3927990	MemberAccess	opline -> op2 . constant		3927947	0					
ANR	3927991	PtrMemberAccess	opline -> op2		3927947	0					
ANR	3927992	Identifier	opline		3927947	0					
ANR	3927993	Identifier	op2		3927947	1					
ANR	3927994	Identifier	constant		3927947	1					
ANR	3927995	CallExpression	"zend_add_ns_func_name_literal ( CG ( active_op_array ) , Z_STR ( name_node -> u . constant ) )"		3927947	1					
ANR	3927996	Callee	zend_add_ns_func_name_literal		3927947	0					
ANR	3927997	Identifier	zend_add_ns_func_name_literal		3927947	0					
ANR	3927998	ArgumentList	CG ( active_op_array )		3927947	1					
ANR	3927999	Argument	CG ( active_op_array )		3927947	0					
ANR	3928000	CallExpression	CG ( active_op_array )		3927947	0					
ANR	3928001	Callee	CG		3927947	0					
ANR	3928002	Identifier	CG		3927947	0					
ANR	3928003	ArgumentList	active_op_array		3927947	1					
ANR	3928004	Argument	active_op_array		3927947	0					
ANR	3928005	Identifier	active_op_array		3927947	0					
ANR	3928006	Argument	Z_STR ( name_node -> u . constant )		3927947	1					
ANR	3928007	CallExpression	Z_STR ( name_node -> u . constant )		3927947	0					
ANR	3928008	Callee	Z_STR		3927947	0					
ANR	3928009	Identifier	Z_STR		3927947	0					
ANR	3928010	ArgumentList	name_node -> u . constant		3927947	1					
ANR	3928011	Argument	name_node -> u . constant		3927947	0					
ANR	3928012	MemberAccess	name_node -> u . constant		3927947	0					
ANR	3928013	PtrMemberAccess	name_node -> u		3927947	0					
ANR	3928014	Identifier	name_node		3927947	0					
ANR	3928015	Identifier	u		3927947	1					
ANR	3928016	Identifier	constant		3927947	1					
ANR	3928017	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	2849:1:81933:81976	3927947	5	True				
ANR	3928018	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3927947	0					
ANR	3928019	Callee	zend_alloc_cache_slot		3927947	0					
ANR	3928020	Identifier	zend_alloc_cache_slot		3927947	0					
ANR	3928021	ArgumentList	opline -> op2 . constant		3927947	1					
ANR	3928022	Argument	opline -> op2 . constant		3927947	0					
ANR	3928023	MemberAccess	opline -> op2 . constant		3927947	0					
ANR	3928024	PtrMemberAccess	opline -> op2		3927947	0					
ANR	3928025	Identifier	opline		3927947	0					
ANR	3928026	Identifier	op2		3927947	1					
ANR	3928027	Identifier	constant		3927947	1					
ANR	3928028	ExpressionStatement	"zend_compile_call_common ( result , args_ast , NULL )"	2851:1:81980:82028	3927947	6	True				
ANR	3928029	CallExpression	"zend_compile_call_common ( result , args_ast , NULL )"		3927947	0					
ANR	3928030	Callee	zend_compile_call_common		3927947	0					
ANR	3928031	Identifier	zend_compile_call_common		3927947	0					
ANR	3928032	ArgumentList	result		3927947	1					
ANR	3928033	Argument	result		3927947	0					
ANR	3928034	Identifier	result		3927947	0					
ANR	3928035	Argument	args_ast		3927947	1					
ANR	3928036	Identifier	args_ast		3927947	0					
ANR	3928037	Argument	NULL		3927947	2					
ANR	3928038	Identifier	NULL		3927947	0					
ANR	3928039	ReturnType	void		3927947	1					
ANR	3928040	Identifier	zend_compile_ns_call		3927947	2					
ANR	3928041	ParameterList	"znode * result , znode * name_node , zend_ast * args_ast"		3927947	3					
ANR	3928042	Parameter	znode * result	2841:26:81603:81615	3927947	0	True				
ANR	3928043	ParameterType	znode *		3927947	0					
ANR	3928044	Identifier	result		3927947	1					
ANR	3928045	Parameter	znode * name_node	2841:41:81618:81633	3927947	1	True				
ANR	3928046	ParameterType	znode *		3927947	0					
ANR	3928047	Identifier	name_node		3927947	1					
ANR	3928048	Parameter	zend_ast * args_ast	2841:59:81636:81653	3927947	2	True				
ANR	3928049	ParameterType	zend_ast *		3927947	0					
ANR	3928050	Identifier	args_ast		3927947	1					
ANR	3928051	CFGEntryNode	ENTRY		3927947		True				
ANR	3928052	CFGExitNode	EXIT		3927947		True				
ANR	3928053	Symbol	opline -> op1		3927947						
ANR	3928054	Symbol	opline -> op2		3927947						
ANR	3928055	Symbol	IS_CONST		3927947						
ANR	3928056	Symbol	get_next_op		3927947						
ANR	3928057	Symbol	NULL		3927947						
ANR	3928058	Symbol	CG		3927947						
ANR	3928059	Symbol	ZEND_INIT_NS_FCALL_BY_NAME		3927947						
ANR	3928060	Symbol	active_op_array		3927947						
ANR	3928061	Symbol	Z_STR		3927947						
ANR	3928062	Symbol	name_node -> u		3927947						
ANR	3928063	Symbol	zend_add_ns_func_name_literal		3927947						
ANR	3928064	Symbol	result		3927947						
ANR	3928065	Symbol	opline		3927947						
ANR	3928066	Symbol	* opline		3927947						
ANR	3928067	Symbol	opline -> opcode		3927947						
ANR	3928068	Symbol	opline -> op2 . constant		3927947						
ANR	3928069	Symbol	opline -> op2_type		3927947						
ANR	3928070	Symbol	args_ast		3927947						
ANR	3928071	Symbol	* name_node		3927947						
ANR	3928072	Symbol	name_node -> u . constant		3927947						
ANR	3928073	Symbol	name_node		3927947						
ANR	3928074	Function	zend_compile_dynamic_call	2855:0:82043:83450							
ANR	3928075	FunctionDef	"zend_compile_dynamic_call (znode * result , znode * name_node , zend_ast * args_ast)"		3928074	0					
ANR	3928076	CompoundStatement		2856:0:82137:83450	3928074	0					
ANR	3928077	IdentifierDeclStatement	zend_op * opline = get_next_op ( CG ( active_op_array ) ) ;	2857:1:82140:82190	3928074	0	True				
ANR	3928078	IdentifierDecl	* opline = get_next_op ( CG ( active_op_array ) )		3928074	0					
ANR	3928079	IdentifierDeclType	zend_op *		3928074	0					
ANR	3928080	Identifier	opline		3928074	1					
ANR	3928081	AssignmentExpression	* opline = get_next_op ( CG ( active_op_array ) )		3928074	2		=			
ANR	3928082	Identifier	opline		3928074	0					
ANR	3928083	CallExpression	get_next_op ( CG ( active_op_array ) )		3928074	1					
ANR	3928084	Callee	get_next_op		3928074	0					
ANR	3928085	Identifier	get_next_op		3928074	0					
ANR	3928086	ArgumentList	CG ( active_op_array )		3928074	1					
ANR	3928087	Argument	CG ( active_op_array )		3928074	0					
ANR	3928088	CallExpression	CG ( active_op_array )		3928074	0					
ANR	3928089	Callee	CG		3928074	0					
ANR	3928090	Identifier	CG		3928074	0					
ANR	3928091	ArgumentList	active_op_array		3928074	1					
ANR	3928092	Argument	active_op_array		3928074	0					
ANR	3928093	Identifier	active_op_array		3928074	0					
ANR	3928094	IfStatement	if ( name_node -> op_type == IS_CONST && Z_TYPE ( name_node -> u . constant ) == IS_STRING )		3928074	1					
ANR	3928095	Condition	name_node -> op_type == IS_CONST && Z_TYPE ( name_node -> u . constant ) == IS_STRING	2858:5:82197:82272	3928074	0	True				
ANR	3928096	AndExpression	name_node -> op_type == IS_CONST && Z_TYPE ( name_node -> u . constant ) == IS_STRING		3928074	0		&&			
ANR	3928097	EqualityExpression	name_node -> op_type == IS_CONST		3928074	0		==			
ANR	3928098	PtrMemberAccess	name_node -> op_type		3928074	0					
ANR	3928099	Identifier	name_node		3928074	0					
ANR	3928100	Identifier	op_type		3928074	1					
ANR	3928101	Identifier	IS_CONST		3928074	1					
ANR	3928102	EqualityExpression	Z_TYPE ( name_node -> u . constant ) == IS_STRING		3928074	1		==			
ANR	3928103	CallExpression	Z_TYPE ( name_node -> u . constant )		3928074	0					
ANR	3928104	Callee	Z_TYPE		3928074	0					
ANR	3928105	Identifier	Z_TYPE		3928074	0					
ANR	3928106	ArgumentList	name_node -> u . constant		3928074	1					
ANR	3928107	Argument	name_node -> u . constant		3928074	0					
ANR	3928108	MemberAccess	name_node -> u . constant		3928074	0					
ANR	3928109	PtrMemberAccess	name_node -> u		3928074	0					
ANR	3928110	Identifier	name_node		3928074	0					
ANR	3928111	Identifier	u		3928074	1					
ANR	3928112	Identifier	constant		3928074	1					
ANR	3928113	Identifier	IS_STRING		3928074	1					
ANR	3928114	CompoundStatement		5:2:162:209	3928074	1					
ANR	3928115	IdentifierDeclStatement	const char * colon ;	2859:2:82279:82296	3928074	0	True				
ANR	3928116	IdentifierDecl	* colon		3928074	0					
ANR	3928117	IdentifierDeclType	const char *		3928074	0					
ANR	3928118	Identifier	colon		3928074	1					
ANR	3928119	IdentifierDeclStatement	zend_string * str = Z_STR ( name_node -> u . constant ) ;	2860:2:82300:82347	3928074	1	True				
ANR	3928120	IdentifierDecl	* str = Z_STR ( name_node -> u . constant )		3928074	0					
ANR	3928121	IdentifierDeclType	zend_string *		3928074	0					
ANR	3928122	Identifier	str		3928074	1					
ANR	3928123	AssignmentExpression	* str = Z_STR ( name_node -> u . constant )		3928074	2		=			
ANR	3928124	Identifier	str		3928074	0					
ANR	3928125	CallExpression	Z_STR ( name_node -> u . constant )		3928074	1					
ANR	3928126	Callee	Z_STR		3928074	0					
ANR	3928127	Identifier	Z_STR		3928074	0					
ANR	3928128	ArgumentList	name_node -> u . constant		3928074	1					
ANR	3928129	Argument	name_node -> u . constant		3928074	0					
ANR	3928130	MemberAccess	name_node -> u . constant		3928074	0					
ANR	3928131	PtrMemberAccess	name_node -> u		3928074	0					
ANR	3928132	Identifier	name_node		3928074	0					
ANR	3928133	Identifier	u		3928074	1					
ANR	3928134	Identifier	constant		3928074	1					
ANR	3928135	IfStatement	"if ( ( colon = zend_memrchr ( ZSTR_VAL ( str ) , ':' , ZSTR_LEN ( str ) ) ) != NULL && colon > ZSTR_VAL ( str ) && * ( colon - 1 ) == ':' )"		3928074	2					
ANR	3928136	Condition	"( colon = zend_memrchr ( ZSTR_VAL ( str ) , ':' , ZSTR_LEN ( str ) ) ) != NULL && colon > ZSTR_VAL ( str ) && * ( colon - 1 ) == ':'"	2861:6:82355:82467	3928074	0	True				
ANR	3928137	AndExpression	"( colon = zend_memrchr ( ZSTR_VAL ( str ) , ':' , ZSTR_LEN ( str ) ) ) != NULL && colon > ZSTR_VAL ( str ) && * ( colon - 1 ) == ':'"		3928074	0		&&			
ANR	3928138	EqualityExpression	"( colon = zend_memrchr ( ZSTR_VAL ( str ) , ':' , ZSTR_LEN ( str ) ) ) != NULL"		3928074	0		!=			
ANR	3928139	AssignmentExpression	"colon = zend_memrchr ( ZSTR_VAL ( str ) , ':' , ZSTR_LEN ( str ) )"		3928074	0		=			
ANR	3928140	Identifier	colon		3928074	0					
ANR	3928141	CallExpression	"zend_memrchr ( ZSTR_VAL ( str ) , ':' , ZSTR_LEN ( str ) )"		3928074	1					
ANR	3928142	Callee	zend_memrchr		3928074	0					
ANR	3928143	Identifier	zend_memrchr		3928074	0					
ANR	3928144	ArgumentList	ZSTR_VAL ( str )		3928074	1					
ANR	3928145	Argument	ZSTR_VAL ( str )		3928074	0					
ANR	3928146	CallExpression	ZSTR_VAL ( str )		3928074	0					
ANR	3928147	Callee	ZSTR_VAL		3928074	0					
ANR	3928148	Identifier	ZSTR_VAL		3928074	0					
ANR	3928149	ArgumentList	str		3928074	1					
ANR	3928150	Argument	str		3928074	0					
ANR	3928151	Identifier	str		3928074	0					
ANR	3928152	Argument	':'		3928074	1					
ANR	3928153	PrimaryExpression	':'		3928074	0					
ANR	3928154	Argument	ZSTR_LEN ( str )		3928074	2					
ANR	3928155	CallExpression	ZSTR_LEN ( str )		3928074	0					
ANR	3928156	Callee	ZSTR_LEN		3928074	0					
ANR	3928157	Identifier	ZSTR_LEN		3928074	0					
ANR	3928158	ArgumentList	str		3928074	1					
ANR	3928159	Argument	str		3928074	0					
ANR	3928160	Identifier	str		3928074	0					
ANR	3928161	Identifier	NULL		3928074	1					
ANR	3928162	AndExpression	colon > ZSTR_VAL ( str ) && * ( colon - 1 ) == ':'		3928074	1		&&			
ANR	3928163	RelationalExpression	colon > ZSTR_VAL ( str )		3928074	0		>			
ANR	3928164	Identifier	colon		3928074	0					
ANR	3928165	CallExpression	ZSTR_VAL ( str )		3928074	1					
ANR	3928166	Callee	ZSTR_VAL		3928074	0					
ANR	3928167	Identifier	ZSTR_VAL		3928074	0					
ANR	3928168	ArgumentList	str		3928074	1					
ANR	3928169	Argument	str		3928074	0					
ANR	3928170	Identifier	str		3928074	0					
ANR	3928171	EqualityExpression	* ( colon - 1 ) == ':'		3928074	1		==			
ANR	3928172	UnaryOperationExpression	* ( colon - 1 )		3928074	0					
ANR	3928173	UnaryOperator	*		3928074	0					
ANR	3928174	AdditiveExpression	colon - 1		3928074	1		-			
ANR	3928175	Identifier	colon		3928074	0					
ANR	3928176	PrimaryExpression	1		3928074	1					
ANR	3928177	PrimaryExpression	':'		3928074	1					
ANR	3928178	CompoundStatement		8:3:424:521	3928074	1					
ANR	3928179	Statement	zend_string	2862:3:82475:82485	3928074	0	True				
ANR	3928180	Statement	*	2862:15:82487:82487	3928074	1	True				
ANR	3928181	Statement	class	2862:16:82488:82492	3928074	2	True				
ANR	3928182	Statement	=	2862:22:82494:82494	3928074	3	True				
ANR	3928183	ExpressionStatement	"zend_string_init ( ZSTR_VAL ( str ) , colon - ZSTR_VAL ( str ) - 1 , 0 )"	2862:24:82496:82557	3928074	4	True				
ANR	3928184	CallExpression	"zend_string_init ( ZSTR_VAL ( str ) , colon - ZSTR_VAL ( str ) - 1 , 0 )"		3928074	0					
ANR	3928185	Callee	zend_string_init		3928074	0					
ANR	3928186	Identifier	zend_string_init		3928074	0					
ANR	3928187	ArgumentList	ZSTR_VAL ( str )		3928074	1					
ANR	3928188	Argument	ZSTR_VAL ( str )		3928074	0					
ANR	3928189	CallExpression	ZSTR_VAL ( str )		3928074	0					
ANR	3928190	Callee	ZSTR_VAL		3928074	0					
ANR	3928191	Identifier	ZSTR_VAL		3928074	0					
ANR	3928192	ArgumentList	str		3928074	1					
ANR	3928193	Argument	str		3928074	0					
ANR	3928194	Identifier	str		3928074	0					
ANR	3928195	Argument	colon - ZSTR_VAL ( str ) - 1		3928074	1					
ANR	3928196	AdditiveExpression	colon - ZSTR_VAL ( str ) - 1		3928074	0		-			
ANR	3928197	Identifier	colon		3928074	0					
ANR	3928198	AdditiveExpression	ZSTR_VAL ( str ) - 1		3928074	1		-			
ANR	3928199	CallExpression	ZSTR_VAL ( str )		3928074	0					
ANR	3928200	Callee	ZSTR_VAL		3928074	0					
ANR	3928201	Identifier	ZSTR_VAL		3928074	0					
ANR	3928202	ArgumentList	str		3928074	1					
ANR	3928203	Argument	str		3928074	0					
ANR	3928204	Identifier	str		3928074	0					
ANR	3928205	PrimaryExpression	1		3928074	1					
ANR	3928206	Argument	0		3928074	2					
ANR	3928207	PrimaryExpression	0		3928074	0					
ANR	3928208	IdentifierDeclStatement	"zend_string * method = zend_string_init ( colon + 1 , ZSTR_LEN ( str ) - ( colon - ZSTR_VAL ( str ) ) - 1 , 0 ) ;"	2863:3:82562:82659	3928074	5	True				
ANR	3928209	IdentifierDecl	"* method = zend_string_init ( colon + 1 , ZSTR_LEN ( str ) - ( colon - ZSTR_VAL ( str ) ) - 1 , 0 )"		3928074	0					
ANR	3928210	IdentifierDeclType	zend_string *		3928074	0					
ANR	3928211	Identifier	method		3928074	1					
ANR	3928212	AssignmentExpression	"* method = zend_string_init ( colon + 1 , ZSTR_LEN ( str ) - ( colon - ZSTR_VAL ( str ) ) - 1 , 0 )"		3928074	2		=			
ANR	3928213	Identifier	method		3928074	0					
ANR	3928214	CallExpression	"zend_string_init ( colon + 1 , ZSTR_LEN ( str ) - ( colon - ZSTR_VAL ( str ) ) - 1 , 0 )"		3928074	1					
ANR	3928215	Callee	zend_string_init		3928074	0					
ANR	3928216	Identifier	zend_string_init		3928074	0					
ANR	3928217	ArgumentList	colon + 1		3928074	1					
ANR	3928218	Argument	colon + 1		3928074	0					
ANR	3928219	AdditiveExpression	colon + 1		3928074	0		+			
ANR	3928220	Identifier	colon		3928074	0					
ANR	3928221	PrimaryExpression	1		3928074	1					
ANR	3928222	Argument	ZSTR_LEN ( str ) - ( colon - ZSTR_VAL ( str ) ) - 1		3928074	1					
ANR	3928223	AdditiveExpression	ZSTR_LEN ( str ) - ( colon - ZSTR_VAL ( str ) ) - 1		3928074	0		-			
ANR	3928224	CallExpression	ZSTR_LEN ( str )		3928074	0					
ANR	3928225	Callee	ZSTR_LEN		3928074	0					
ANR	3928226	Identifier	ZSTR_LEN		3928074	0					
ANR	3928227	ArgumentList	str		3928074	1					
ANR	3928228	Argument	str		3928074	0					
ANR	3928229	Identifier	str		3928074	0					
ANR	3928230	AdditiveExpression	( colon - ZSTR_VAL ( str ) ) - 1		3928074	1		-			
ANR	3928231	AdditiveExpression	colon - ZSTR_VAL ( str )		3928074	0		-			
ANR	3928232	Identifier	colon		3928074	0					
ANR	3928233	CallExpression	ZSTR_VAL ( str )		3928074	1					
ANR	3928234	Callee	ZSTR_VAL		3928074	0					
ANR	3928235	Identifier	ZSTR_VAL		3928074	0					
ANR	3928236	ArgumentList	str		3928074	1					
ANR	3928237	Argument	str		3928074	0					
ANR	3928238	Identifier	str		3928074	0					
ANR	3928239	PrimaryExpression	1		3928074	1					
ANR	3928240	Argument	0		3928074	2					
ANR	3928241	PrimaryExpression	0		3928074	0					
ANR	3928242	ExpressionStatement	opline -> opcode = ZEND_INIT_STATIC_METHOD_CALL	2864:3:82664:82709	3928074	6	True				
ANR	3928243	AssignmentExpression	opline -> opcode = ZEND_INIT_STATIC_METHOD_CALL		3928074	0		=			
ANR	3928244	PtrMemberAccess	opline -> opcode		3928074	0					
ANR	3928245	Identifier	opline		3928074	0					
ANR	3928246	Identifier	opcode		3928074	1					
ANR	3928247	Identifier	ZEND_INIT_STATIC_METHOD_CALL		3928074	1					
ANR	3928248	ExpressionStatement	opline -> op1_type = IS_CONST	2865:3:82714:82741	3928074	7	True				
ANR	3928249	AssignmentExpression	opline -> op1_type = IS_CONST		3928074	0		=			
ANR	3928250	PtrMemberAccess	opline -> op1_type		3928074	0					
ANR	3928251	Identifier	opline		3928074	0					
ANR	3928252	Identifier	op1_type		3928074	1					
ANR	3928253	Identifier	IS_CONST		3928074	1					
ANR	3928254	Statement	opline	2866:3:82746:82751	3928074	8	True				
ANR	3928255	Statement	->	2866:9:82752:82753	3928074	9	True				
ANR	3928256	Statement	op1	2866:11:82754:82756	3928074	10	True				
ANR	3928257	Statement	.	2866:14:82757:82757	3928074	11	True				
ANR	3928258	Statement	constant	2866:15:82758:82765	3928074	12	True				
ANR	3928259	Statement	=	2866:24:82767:82767	3928074	13	True				
ANR	3928260	Statement	zend_add_class_name_literal	2866:26:82769:82795	3928074	14	True				
ANR	3928261	Statement	(	2866:53:82796:82796	3928074	15	True				
ANR	3928262	Statement	CG	2866:54:82797:82798	3928074	16	True				
ANR	3928263	Statement	(	2866:56:82799:82799	3928074	17	True				
ANR	3928264	Statement	active_op_array	2866:57:82800:82814	3928074	18	True				
ANR	3928265	Statement	)	2866:72:82815:82815	3928074	19	True				
ANR	3928266	Statement	","	2866:73:82816:82816	3928074	20	True				
ANR	3928267	Statement	class	2866:75:82818:82822	3928074	21	True				
ANR	3928268	Statement	)	2866:80:82823:82823	3928074	22	True				
ANR	3928269	ExpressionStatement		2866:81:82824:82824	3928074	23	True				
ANR	3928270	ExpressionStatement	opline -> op2_type = IS_CONST	2867:3:82829:82856	3928074	24	True				
ANR	3928271	AssignmentExpression	opline -> op2_type = IS_CONST		3928074	0		=			
ANR	3928272	PtrMemberAccess	opline -> op2_type		3928074	0					
ANR	3928273	Identifier	opline		3928074	0					
ANR	3928274	Identifier	op2_type		3928074	1					
ANR	3928275	Identifier	IS_CONST		3928074	1					
ANR	3928276	ExpressionStatement	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , method )"	2868:3:82861:82939	3928074	25	True				
ANR	3928277	AssignmentExpression	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , method )"		3928074	0		=			
ANR	3928278	MemberAccess	opline -> op2 . constant		3928074	0					
ANR	3928279	PtrMemberAccess	opline -> op2		3928074	0					
ANR	3928280	Identifier	opline		3928074	0					
ANR	3928281	Identifier	op2		3928074	1					
ANR	3928282	Identifier	constant		3928074	1					
ANR	3928283	CallExpression	"zend_add_func_name_literal ( CG ( active_op_array ) , method )"		3928074	1					
ANR	3928284	Callee	zend_add_func_name_literal		3928074	0					
ANR	3928285	Identifier	zend_add_func_name_literal		3928074	0					
ANR	3928286	ArgumentList	CG ( active_op_array )		3928074	1					
ANR	3928287	Argument	CG ( active_op_array )		3928074	0					
ANR	3928288	CallExpression	CG ( active_op_array )		3928074	0					
ANR	3928289	Callee	CG		3928074	0					
ANR	3928290	Identifier	CG		3928074	0					
ANR	3928291	ArgumentList	active_op_array		3928074	1					
ANR	3928292	Argument	active_op_array		3928074	0					
ANR	3928293	Identifier	active_op_array		3928074	0					
ANR	3928294	Argument	method		3928074	1					
ANR	3928295	Identifier	method		3928074	0					
ANR	3928296	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	2869:3:82944:82987	3928074	26	True				
ANR	3928297	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3928074	0					
ANR	3928298	Callee	zend_alloc_cache_slot		3928074	0					
ANR	3928299	Identifier	zend_alloc_cache_slot		3928074	0					
ANR	3928300	ArgumentList	opline -> op2 . constant		3928074	1					
ANR	3928301	Argument	opline -> op2 . constant		3928074	0					
ANR	3928302	MemberAccess	opline -> op2 . constant		3928074	0					
ANR	3928303	PtrMemberAccess	opline -> op2		3928074	0					
ANR	3928304	Identifier	opline		3928074	0					
ANR	3928305	Identifier	op2		3928074	1					
ANR	3928306	Identifier	constant		3928074	1					
ANR	3928307	ExpressionStatement	zval_ptr_dtor ( & name_node -> u . constant )	2870:3:82992:83029	3928074	27	True				
ANR	3928308	CallExpression	zval_ptr_dtor ( & name_node -> u . constant )		3928074	0					
ANR	3928309	Callee	zval_ptr_dtor		3928074	0					
ANR	3928310	Identifier	zval_ptr_dtor		3928074	0					
ANR	3928311	ArgumentList	& name_node -> u . constant		3928074	1					
ANR	3928312	Argument	& name_node -> u . constant		3928074	0					
ANR	3928313	UnaryOperationExpression	& name_node -> u . constant		3928074	0					
ANR	3928314	UnaryOperator	&		3928074	0					
ANR	3928315	MemberAccess	name_node -> u . constant		3928074	1					
ANR	3928316	PtrMemberAccess	name_node -> u		3928074	0					
ANR	3928317	Identifier	name_node		3928074	0					
ANR	3928318	Identifier	u		3928074	1					
ANR	3928319	Identifier	constant		3928074	1					
ANR	3928320	ElseStatement	else		3928074	0					
ANR	3928321	CompoundStatement		16:9:902:902	3928074	0					
ANR	3928322	ExpressionStatement	opline -> opcode = ZEND_INIT_FCALL_BY_NAME	2872:3:83045:83085	3928074	0	True				
ANR	3928323	AssignmentExpression	opline -> opcode = ZEND_INIT_FCALL_BY_NAME		3928074	0		=			
ANR	3928324	PtrMemberAccess	opline -> opcode		3928074	0					
ANR	3928325	Identifier	opline		3928074	0					
ANR	3928326	Identifier	opcode		3928074	1					
ANR	3928327	Identifier	ZEND_INIT_FCALL_BY_NAME		3928074	1					
ANR	3928328	ExpressionStatement	SET_UNUSED ( opline -> op1 )	2873:3:83090:83113	3928074	1	True				
ANR	3928329	CallExpression	SET_UNUSED ( opline -> op1 )		3928074	0					
ANR	3928330	Callee	SET_UNUSED		3928074	0					
ANR	3928331	Identifier	SET_UNUSED		3928074	0					
ANR	3928332	ArgumentList	opline -> op1		3928074	1					
ANR	3928333	Argument	opline -> op1		3928074	0					
ANR	3928334	PtrMemberAccess	opline -> op1		3928074	0					
ANR	3928335	Identifier	opline		3928074	0					
ANR	3928336	Identifier	op1		3928074	1					
ANR	3928337	ExpressionStatement	opline -> op2_type = IS_CONST	2874:3:83118:83145	3928074	2	True				
ANR	3928338	AssignmentExpression	opline -> op2_type = IS_CONST		3928074	0		=			
ANR	3928339	PtrMemberAccess	opline -> op2_type		3928074	0					
ANR	3928340	Identifier	opline		3928074	0					
ANR	3928341	Identifier	op2_type		3928074	1					
ANR	3928342	Identifier	IS_CONST		3928074	1					
ANR	3928343	ExpressionStatement	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , str )"	2875:3:83150:83225	3928074	3	True				
ANR	3928344	AssignmentExpression	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , str )"		3928074	0		=			
ANR	3928345	MemberAccess	opline -> op2 . constant		3928074	0					
ANR	3928346	PtrMemberAccess	opline -> op2		3928074	0					
ANR	3928347	Identifier	opline		3928074	0					
ANR	3928348	Identifier	op2		3928074	1					
ANR	3928349	Identifier	constant		3928074	1					
ANR	3928350	CallExpression	"zend_add_func_name_literal ( CG ( active_op_array ) , str )"		3928074	1					
ANR	3928351	Callee	zend_add_func_name_literal		3928074	0					
ANR	3928352	Identifier	zend_add_func_name_literal		3928074	0					
ANR	3928353	ArgumentList	CG ( active_op_array )		3928074	1					
ANR	3928354	Argument	CG ( active_op_array )		3928074	0					
ANR	3928355	CallExpression	CG ( active_op_array )		3928074	0					
ANR	3928356	Callee	CG		3928074	0					
ANR	3928357	Identifier	CG		3928074	0					
ANR	3928358	ArgumentList	active_op_array		3928074	1					
ANR	3928359	Argument	active_op_array		3928074	0					
ANR	3928360	Identifier	active_op_array		3928074	0					
ANR	3928361	Argument	str		3928074	1					
ANR	3928362	Identifier	str		3928074	0					
ANR	3928363	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	2876:3:83230:83273	3928074	4	True				
ANR	3928364	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3928074	0					
ANR	3928365	Callee	zend_alloc_cache_slot		3928074	0					
ANR	3928366	Identifier	zend_alloc_cache_slot		3928074	0					
ANR	3928367	ArgumentList	opline -> op2 . constant		3928074	1					
ANR	3928368	Argument	opline -> op2 . constant		3928074	0					
ANR	3928369	MemberAccess	opline -> op2 . constant		3928074	0					
ANR	3928370	PtrMemberAccess	opline -> op2		3928074	0					
ANR	3928371	Identifier	opline		3928074	0					
ANR	3928372	Identifier	op2		3928074	1					
ANR	3928373	Identifier	constant		3928074	1					
ANR	3928374	ElseStatement	else		3928074	0					
ANR	3928375	CompoundStatement		23:8:1149:1149	3928074	0					
ANR	3928376	ExpressionStatement	opline -> opcode = ZEND_INIT_DYNAMIC_CALL	2879:2:83291:83330	3928074	0	True				
ANR	3928377	AssignmentExpression	opline -> opcode = ZEND_INIT_DYNAMIC_CALL		3928074	0		=			
ANR	3928378	PtrMemberAccess	opline -> opcode		3928074	0					
ANR	3928379	Identifier	opline		3928074	0					
ANR	3928380	Identifier	opcode		3928074	1					
ANR	3928381	Identifier	ZEND_INIT_DYNAMIC_CALL		3928074	1					
ANR	3928382	ExpressionStatement	SET_UNUSED ( opline -> op1 )	2880:2:83334:83357	3928074	1	True				
ANR	3928383	CallExpression	SET_UNUSED ( opline -> op1 )		3928074	0					
ANR	3928384	Callee	SET_UNUSED		3928074	0					
ANR	3928385	Identifier	SET_UNUSED		3928074	0					
ANR	3928386	ArgumentList	opline -> op1		3928074	1					
ANR	3928387	Argument	opline -> op1		3928074	0					
ANR	3928388	PtrMemberAccess	opline -> op1		3928074	0					
ANR	3928389	Identifier	opline		3928074	0					
ANR	3928390	Identifier	op1		3928074	1					
ANR	3928391	ExpressionStatement	"SET_NODE ( opline -> op2 , name_node )"	2881:2:83361:83393	3928074	2	True				
ANR	3928392	CallExpression	"SET_NODE ( opline -> op2 , name_node )"		3928074	0					
ANR	3928393	Callee	SET_NODE		3928074	0					
ANR	3928394	Identifier	SET_NODE		3928074	0					
ANR	3928395	ArgumentList	opline -> op2		3928074	1					
ANR	3928396	Argument	opline -> op2		3928074	0					
ANR	3928397	PtrMemberAccess	opline -> op2		3928074	0					
ANR	3928398	Identifier	opline		3928074	0					
ANR	3928399	Identifier	op2		3928074	1					
ANR	3928400	Argument	name_node		3928074	1					
ANR	3928401	Identifier	name_node		3928074	0					
ANR	3928402	ExpressionStatement	"zend_compile_call_common ( result , args_ast , NULL )"	2884:1:83400:83448	3928074	2	True				
ANR	3928403	CallExpression	"zend_compile_call_common ( result , args_ast , NULL )"		3928074	0					
ANR	3928404	Callee	zend_compile_call_common		3928074	0					
ANR	3928405	Identifier	zend_compile_call_common		3928074	0					
ANR	3928406	ArgumentList	result		3928074	1					
ANR	3928407	Argument	result		3928074	0					
ANR	3928408	Identifier	result		3928074	0					
ANR	3928409	Argument	args_ast		3928074	1					
ANR	3928410	Identifier	args_ast		3928074	0					
ANR	3928411	Argument	NULL		3928074	2					
ANR	3928412	Identifier	NULL		3928074	0					
ANR	3928413	ReturnType	void		3928074	1					
ANR	3928414	Identifier	zend_compile_dynamic_call		3928074	2					
ANR	3928415	ParameterList	"znode * result , znode * name_node , zend_ast * args_ast"		3928074	3					
ANR	3928416	Parameter	znode * result	2855:31:82074:82086	3928074	0	True				
ANR	3928417	ParameterType	znode *		3928074	0					
ANR	3928418	Identifier	result		3928074	1					
ANR	3928419	Parameter	znode * name_node	2855:46:82089:82104	3928074	1	True				
ANR	3928420	ParameterType	znode *		3928074	0					
ANR	3928421	Identifier	name_node		3928074	1					
ANR	3928422	Parameter	zend_ast * args_ast	2855:64:82107:82124	3928074	2	True				
ANR	3928423	ParameterType	zend_ast *		3928074	0					
ANR	3928424	Identifier	args_ast		3928074	1					
ANR	3928425	CFGEntryNode	ENTRY		3928074		True				
ANR	3928426	CFGExitNode	EXIT		3928074		True				
ANR	3928427	Symbol	opline -> op1		3928074						
ANR	3928428	Symbol	opline -> op2		3928074						
ANR	3928429	Symbol	zend_add_func_name_literal		3928074						
ANR	3928430	Symbol	Z_TYPE		3928074						
ANR	3928431	Symbol	name_node -> u		3928074						
ANR	3928432	Symbol	Z_STR		3928074						
ANR	3928433	Symbol	result		3928074						
ANR	3928434	Symbol	zend_string_init		3928074						
ANR	3928435	Symbol	opline		3928074						
ANR	3928436	Symbol	* ( colon - 1 )		3928074						
ANR	3928437	Symbol	IS_STRING		3928074						
ANR	3928438	Symbol	zend_memrchr		3928074						
ANR	3928439	Symbol	IS_CONST		3928074						
ANR	3928440	Symbol	& name_node -> u . constant		3928074						
ANR	3928441	Symbol	ZEND_INIT_DYNAMIC_CALL		3928074						
ANR	3928442	Symbol	get_next_op		3928074						
ANR	3928443	Symbol	NULL		3928074						
ANR	3928444	Symbol	CG		3928074						
ANR	3928445	Symbol	method		3928074						
ANR	3928446	Symbol	active_op_array		3928074						
ANR	3928447	Symbol	* colon		3928074						
ANR	3928448	Symbol	opline -> op1_type		3928074						
ANR	3928449	Symbol	ZSTR_VAL		3928074						
ANR	3928450	Symbol	str		3928074						
ANR	3928451	Symbol	* opline		3928074						
ANR	3928452	Symbol	opline -> opcode		3928074						
ANR	3928453	Symbol	colon		3928074						
ANR	3928454	Symbol	ZSTR_LEN		3928074						
ANR	3928455	Symbol	opline -> op2 . constant		3928074						
ANR	3928456	Symbol	& name_node -> u		3928074						
ANR	3928457	Symbol	opline -> op2_type		3928074						
ANR	3928458	Symbol	args_ast		3928074						
ANR	3928459	Symbol	* name_node		3928074						
ANR	3928460	Symbol	name_node -> u . constant		3928074						
ANR	3928461	Symbol	name_node -> op_type		3928074						
ANR	3928462	Symbol	ZEND_INIT_STATIC_METHOD_CALL		3928074						
ANR	3928463	Symbol	name_node		3928074						
ANR	3928464	Symbol	ZEND_INIT_FCALL_BY_NAME		3928074						
ANR	3928465	Function	zend_args_contain_unpack	2888:0:83463:83671							
ANR	3928466	FunctionDef	zend_args_contain_unpack (zend_ast_list * args)		3928465	0					
ANR	3928467	CompoundStatement		2889:0:83536:83671	3928465	0					
ANR	3928468	IdentifierDeclStatement	uint32_t i ;	2890:1:83539:83549	3928465	0	True				
ANR	3928469	IdentifierDecl	i		3928465	0					
ANR	3928470	IdentifierDeclType	uint32_t		3928465	0					
ANR	3928471	Identifier	i		3928465	1					
ANR	3928472	ForStatement	for ( i = 0 ; i < args -> children ; ++ i )		3928465	1					
ANR	3928473	ForInit	i = 0 ;	2891:6:83557:83562	3928465	0	True				
ANR	3928474	AssignmentExpression	i = 0		3928465	0		=			
ANR	3928475	Identifier	i		3928465	0					
ANR	3928476	PrimaryExpression	0		3928465	1					
ANR	3928477	Condition	i < args -> children	2891:13:83564:83581	3928465	1	True				
ANR	3928478	RelationalExpression	i < args -> children		3928465	0		<			
ANR	3928479	Identifier	i		3928465	0					
ANR	3928480	PtrMemberAccess	args -> children		3928465	1					
ANR	3928481	Identifier	args		3928465	0					
ANR	3928482	Identifier	children		3928465	1					
ANR	3928483	UnaryExpression	++ i	2891:33:83584:83586	3928465	2	True				
ANR	3928484	IncDec	++		3928465	0					
ANR	3928485	Identifier	i		3928465	1					
ANR	3928486	CompoundStatement		3:38:52:52	3928465	3					
ANR	3928487	IfStatement	if ( args -> child [ i ] -> kind == ZEND_AST_UNPACK )		3928465	0					
ANR	3928488	Condition	args -> child [ i ] -> kind == ZEND_AST_UNPACK	2892:6:83597:83635	3928465	0	True				
ANR	3928489	EqualityExpression	args -> child [ i ] -> kind == ZEND_AST_UNPACK		3928465	0		==			
ANR	3928490	PtrMemberAccess	args -> child [ i ] -> kind		3928465	0					
ANR	3928491	ArrayIndexing	args -> child [ i ]		3928465	0					
ANR	3928492	PtrMemberAccess	args -> child		3928465	0					
ANR	3928493	Identifier	args		3928465	0					
ANR	3928494	Identifier	child		3928465	1					
ANR	3928495	Identifier	i		3928465	1					
ANR	3928496	Identifier	kind		3928465	1					
ANR	3928497	Identifier	ZEND_AST_UNPACK		3928465	1					
ANR	3928498	CompoundStatement		4:47:101:101	3928465	1					
ANR	3928499	ReturnStatement	return 1 ;	2893:3:83643:83651	3928465	0	True				
ANR	3928500	PrimaryExpression	1		3928465	0					
ANR	3928501	ReturnStatement	return 0 ;	2896:1:83661:83669	3928465	2	True				
ANR	3928502	PrimaryExpression	0		3928465	0					
ANR	3928503	ReturnType	static zend_bool		3928465	1					
ANR	3928504	Identifier	zend_args_contain_unpack		3928465	2					
ANR	3928505	ParameterList	zend_ast_list * args		3928465	3					
ANR	3928506	Parameter	zend_ast_list * args	2888:42:83505:83523	3928465	0	True				
ANR	3928507	ParameterType	zend_ast_list *		3928465	0					
ANR	3928508	Identifier	args		3928465	1					
ANR	3928509	CFGEntryNode	ENTRY		3928465		True				
ANR	3928510	CFGExitNode	EXIT		3928465		True				
ANR	3928511	Symbol	* * i		3928465						
ANR	3928512	Symbol	ZEND_AST_UNPACK		3928465						
ANR	3928513	Symbol	* args -> child		3928465						
ANR	3928514	Symbol	i		3928465						
ANR	3928515	Symbol	* args		3928465						
ANR	3928516	Symbol	args		3928465						
ANR	3928517	Symbol	* * * args		3928465						
ANR	3928518	Symbol	* i		3928465						
ANR	3928519	Symbol	args -> child [ i ] -> kind		3928465						
ANR	3928520	Symbol	args -> child		3928465						
ANR	3928521	Symbol	args -> children		3928465						
ANR	3928522	Symbol	* * args		3928465						
ANR	3928523	Symbol	* * args -> child		3928465						
ANR	3928524	Function	zend_compile_func_strlen	2900:0:83684:84281							
ANR	3928525	FunctionDef	"zend_compile_func_strlen (znode * result , zend_ast_list * args)"		3928524	0					
ANR	3928526	CompoundStatement		2901:0:83759:84281	3928524	0					
ANR	3928527	IdentifierDeclStatement	znode arg_node ;	2902:1:83762:83776	3928524	0	True				
ANR	3928528	IdentifierDecl	arg_node		3928524	0					
ANR	3928529	IdentifierDeclType	znode		3928524	0					
ANR	3928530	Identifier	arg_node		3928524	1					
ANR	3928531	IfStatement	if ( ( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) || args -> children != 1 || args -> child [ 0 ] -> kind == ZEND_AST_UNPACK )		3928524	1					
ANR	3928532	Condition	( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) || args -> children != 1 || args -> child [ 0 ] -> kind == ZEND_AST_UNPACK	2904:5:83784:83906	3928524	0	True				
ANR	3928533	OrExpression	( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) || args -> children != 1 || args -> child [ 0 ] -> kind == ZEND_AST_UNPACK		3928524	0		||			
ANR	3928534	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN		3928524	0		&			
ANR	3928535	CallExpression	CG ( compiler_options )		3928524	0					
ANR	3928536	Callee	CG		3928524	0					
ANR	3928537	Identifier	CG		3928524	0					
ANR	3928538	ArgumentList	compiler_options		3928524	1					
ANR	3928539	Argument	compiler_options		3928524	0					
ANR	3928540	Identifier	compiler_options		3928524	0					
ANR	3928541	Identifier	ZEND_COMPILE_NO_BUILTIN_STRLEN		3928524	1					
ANR	3928542	OrExpression	args -> children != 1 || args -> child [ 0 ] -> kind == ZEND_AST_UNPACK		3928524	1		||			
ANR	3928543	EqualityExpression	args -> children != 1		3928524	0		!=			
ANR	3928544	PtrMemberAccess	args -> children		3928524	0					
ANR	3928545	Identifier	args		3928524	0					
ANR	3928546	Identifier	children		3928524	1					
ANR	3928547	PrimaryExpression	1		3928524	1					
ANR	3928548	EqualityExpression	args -> child [ 0 ] -> kind == ZEND_AST_UNPACK		3928524	1		==			
ANR	3928549	PtrMemberAccess	args -> child [ 0 ] -> kind		3928524	0					
ANR	3928550	ArrayIndexing	args -> child [ 0 ]		3928524	0					
ANR	3928551	PtrMemberAccess	args -> child		3928524	0					
ANR	3928552	Identifier	args		3928524	0					
ANR	3928553	Identifier	child		3928524	1					
ANR	3928554	PrimaryExpression	0		3928524	1					
ANR	3928555	Identifier	kind		3928524	1					
ANR	3928556	Identifier	ZEND_AST_UNPACK		3928524	1					
ANR	3928557	CompoundStatement		6:3:151:151	3928524	1					
ANR	3928558	ReturnStatement	return FAILURE ;	2907:2:83915:83929	3928524	0	True				
ANR	3928559	Identifier	FAILURE		3928524	0					
ANR	3928560	ExpressionStatement	"zend_compile_expr ( & arg_node , args -> child [ 0 ] )"	2910:1:83936:83980	3928524	2	True				
ANR	3928561	CallExpression	"zend_compile_expr ( & arg_node , args -> child [ 0 ] )"		3928524	0					
ANR	3928562	Callee	zend_compile_expr		3928524	0					
ANR	3928563	Identifier	zend_compile_expr		3928524	0					
ANR	3928564	ArgumentList	& arg_node		3928524	1					
ANR	3928565	Argument	& arg_node		3928524	0					
ANR	3928566	UnaryOperationExpression	& arg_node		3928524	0					
ANR	3928567	UnaryOperator	&		3928524	0					
ANR	3928568	Identifier	arg_node		3928524	1					
ANR	3928569	Argument	args -> child [ 0 ]		3928524	1					
ANR	3928570	ArrayIndexing	args -> child [ 0 ]		3928524	0					
ANR	3928571	PtrMemberAccess	args -> child		3928524	0					
ANR	3928572	Identifier	args		3928524	0					
ANR	3928573	Identifier	child		3928524	1					
ANR	3928574	PrimaryExpression	0		3928524	1					
ANR	3928575	IfStatement	if ( arg_node . op_type == IS_CONST && Z_TYPE ( arg_node . u . constant ) == IS_STRING )		3928524	3					
ANR	3928576	Condition	arg_node . op_type == IS_CONST && Z_TYPE ( arg_node . u . constant ) == IS_STRING	2911:5:83987:84058	3928524	0	True				
ANR	3928577	AndExpression	arg_node . op_type == IS_CONST && Z_TYPE ( arg_node . u . constant ) == IS_STRING		3928524	0		&&			
ANR	3928578	EqualityExpression	arg_node . op_type == IS_CONST		3928524	0		==			
ANR	3928579	MemberAccess	arg_node . op_type		3928524	0					
ANR	3928580	Identifier	arg_node		3928524	0					
ANR	3928581	Identifier	op_type		3928524	1					
ANR	3928582	Identifier	IS_CONST		3928524	1					
ANR	3928583	EqualityExpression	Z_TYPE ( arg_node . u . constant ) == IS_STRING		3928524	1		==			
ANR	3928584	CallExpression	Z_TYPE ( arg_node . u . constant )		3928524	0					
ANR	3928585	Callee	Z_TYPE		3928524	0					
ANR	3928586	Identifier	Z_TYPE		3928524	0					
ANR	3928587	ArgumentList	arg_node . u . constant		3928524	1					
ANR	3928588	Argument	arg_node . u . constant		3928524	0					
ANR	3928589	MemberAccess	arg_node . u . constant		3928524	0					
ANR	3928590	MemberAccess	arg_node . u		3928524	0					
ANR	3928591	Identifier	arg_node		3928524	0					
ANR	3928592	Identifier	u		3928524	1					
ANR	3928593	Identifier	constant		3928524	1					
ANR	3928594	Identifier	IS_STRING		3928524	1					
ANR	3928595	CompoundStatement		11:79:301:301	3928524	1					
ANR	3928596	ExpressionStatement	result -> op_type = IS_CONST	2912:2:84065:84091	3928524	0	True				
ANR	3928597	AssignmentExpression	result -> op_type = IS_CONST		3928524	0		=			
ANR	3928598	PtrMemberAccess	result -> op_type		3928524	0					
ANR	3928599	Identifier	result		3928524	0					
ANR	3928600	Identifier	op_type		3928524	1					
ANR	3928601	Identifier	IS_CONST		3928524	1					
ANR	3928602	ExpressionStatement	"ZVAL_LONG ( & result -> u . constant , Z_STRLEN ( arg_node . u . constant ) )"	2913:2:84095:84156	3928524	1	True				
ANR	3928603	CallExpression	"ZVAL_LONG ( & result -> u . constant , Z_STRLEN ( arg_node . u . constant ) )"		3928524	0					
ANR	3928604	Callee	ZVAL_LONG		3928524	0					
ANR	3928605	Identifier	ZVAL_LONG		3928524	0					
ANR	3928606	ArgumentList	& result -> u . constant		3928524	1					
ANR	3928607	Argument	& result -> u . constant		3928524	0					
ANR	3928608	UnaryOperationExpression	& result -> u . constant		3928524	0					
ANR	3928609	UnaryOperator	&		3928524	0					
ANR	3928610	MemberAccess	result -> u . constant		3928524	1					
ANR	3928611	PtrMemberAccess	result -> u		3928524	0					
ANR	3928612	Identifier	result		3928524	0					
ANR	3928613	Identifier	u		3928524	1					
ANR	3928614	Identifier	constant		3928524	1					
ANR	3928615	Argument	Z_STRLEN ( arg_node . u . constant )		3928524	1					
ANR	3928616	CallExpression	Z_STRLEN ( arg_node . u . constant )		3928524	0					
ANR	3928617	Callee	Z_STRLEN		3928524	0					
ANR	3928618	Identifier	Z_STRLEN		3928524	0					
ANR	3928619	ArgumentList	arg_node . u . constant		3928524	1					
ANR	3928620	Argument	arg_node . u . constant		3928524	0					
ANR	3928621	MemberAccess	arg_node . u . constant		3928524	0					
ANR	3928622	MemberAccess	arg_node . u		3928524	0					
ANR	3928623	Identifier	arg_node		3928524	0					
ANR	3928624	Identifier	u		3928524	1					
ANR	3928625	Identifier	constant		3928524	1					
ANR	3928626	ExpressionStatement	zval_dtor ( & arg_node . u . constant )	2914:2:84160:84191	3928524	2	True				
ANR	3928627	CallExpression	zval_dtor ( & arg_node . u . constant )		3928524	0					
ANR	3928628	Callee	zval_dtor		3928524	0					
ANR	3928629	Identifier	zval_dtor		3928524	0					
ANR	3928630	ArgumentList	& arg_node . u . constant		3928524	1					
ANR	3928631	Argument	& arg_node . u . constant		3928524	0					
ANR	3928632	UnaryOperationExpression	& arg_node . u . constant		3928524	0					
ANR	3928633	UnaryOperator	&		3928524	0					
ANR	3928634	MemberAccess	arg_node . u . constant		3928524	1					
ANR	3928635	MemberAccess	arg_node . u		3928524	0					
ANR	3928636	Identifier	arg_node		3928524	0					
ANR	3928637	Identifier	u		3928524	1					
ANR	3928638	Identifier	constant		3928524	1					
ANR	3928639	ElseStatement	else		3928524	0					
ANR	3928640	CompoundStatement		15:8:441:441	3928524	0					
ANR	3928641	ExpressionStatement	"zend_emit_op_tmp ( result , ZEND_STRLEN , & arg_node , NULL )"	2916:2:84205:84259	3928524	0	True				
ANR	3928642	CallExpression	"zend_emit_op_tmp ( result , ZEND_STRLEN , & arg_node , NULL )"		3928524	0					
ANR	3928643	Callee	zend_emit_op_tmp		3928524	0					
ANR	3928644	Identifier	zend_emit_op_tmp		3928524	0					
ANR	3928645	ArgumentList	result		3928524	1					
ANR	3928646	Argument	result		3928524	0					
ANR	3928647	Identifier	result		3928524	0					
ANR	3928648	Argument	ZEND_STRLEN		3928524	1					
ANR	3928649	Identifier	ZEND_STRLEN		3928524	0					
ANR	3928650	Argument	& arg_node		3928524	2					
ANR	3928651	UnaryOperationExpression	& arg_node		3928524	0					
ANR	3928652	UnaryOperator	&		3928524	0					
ANR	3928653	Identifier	arg_node		3928524	1					
ANR	3928654	Argument	NULL		3928524	3					
ANR	3928655	Identifier	NULL		3928524	0					
ANR	3928656	ReturnStatement	return SUCCESS ;	2918:1:84265:84279	3928524	4	True				
ANR	3928657	Identifier	SUCCESS		3928524	0					
ANR	3928658	ReturnType	int		3928524	1					
ANR	3928659	Identifier	zend_compile_func_strlen		3928524	2					
ANR	3928660	ParameterList	"znode * result , zend_ast_list * args"		3928524	3					
ANR	3928661	Parameter	znode * result	2900:29:83713:83725	3928524	0	True				
ANR	3928662	ParameterType	znode *		3928524	0					
ANR	3928663	Identifier	result		3928524	1					
ANR	3928664	Parameter	zend_ast_list * args	2900:44:83728:83746	3928524	1	True				
ANR	3928665	ParameterType	zend_ast_list *		3928524	0					
ANR	3928666	Identifier	args		3928524	1					
ANR	3928667	CFGEntryNode	ENTRY		3928524		True				
ANR	3928668	CFGExitNode	EXIT		3928524		True				
ANR	3928669	Symbol	arg_node		3928524						
ANR	3928670	Symbol	ZEND_AST_UNPACK		3928524						
ANR	3928671	Symbol	* args -> child		3928524						
ANR	3928672	Symbol	Z_TYPE		3928524						
ANR	3928673	Symbol	& arg_node . u . constant		3928524						
ANR	3928674	Symbol	Z_STRLEN		3928524						
ANR	3928675	Symbol	result -> op_type		3928524						
ANR	3928676	Symbol	result -> u		3928524						
ANR	3928677	Symbol	* args		3928524						
ANR	3928678	Symbol	result		3928524						
ANR	3928679	Symbol	* * * args		3928524						
ANR	3928680	Symbol	compiler_options		3928524						
ANR	3928681	Symbol	ZEND_COMPILE_NO_BUILTIN_STRLEN		3928524						
ANR	3928682	Symbol	* result		3928524						
ANR	3928683	Symbol	& arg_node . u		3928524						
ANR	3928684	Symbol	arg_node . op_type		3928524						
ANR	3928685	Symbol	ZEND_STRLEN		3928524						
ANR	3928686	Symbol	& result -> u . constant		3928524						
ANR	3928687	Symbol	IS_STRING		3928524						
ANR	3928688	Symbol	* * args		3928524						
ANR	3928689	Symbol	* * args -> child		3928524						
ANR	3928690	Symbol	arg_node . u		3928524						
ANR	3928691	Symbol	args -> child [ 0 ] -> kind		3928524						
ANR	3928692	Symbol	IS_CONST		3928524						
ANR	3928693	Symbol	NULL		3928524						
ANR	3928694	Symbol	SUCCESS		3928524						
ANR	3928695	Symbol	CG		3928524						
ANR	3928696	Symbol	& result -> u		3928524						
ANR	3928697	Symbol	FAILURE		3928524						
ANR	3928698	Symbol	arg_node . u . constant		3928524						
ANR	3928699	Symbol	args		3928524						
ANR	3928700	Symbol	args -> child		3928524						
ANR	3928701	Symbol	args -> children		3928524						
ANR	3928702	Symbol	& arg_node		3928524						
ANR	3928703	Function	zend_compile_func_typecheck	2922:0:84294:84684							
ANR	3928704	FunctionDef	"zend_compile_func_typecheck (znode * result , zend_ast_list * args , uint32_t type)"		3928703	0					
ANR	3928705	CompoundStatement		2923:0:84387:84684	3928703	0					
ANR	3928706	IdentifierDeclStatement	znode arg_node ;	2924:1:84390:84404	3928703	0	True				
ANR	3928707	IdentifierDecl	arg_node		3928703	0					
ANR	3928708	IdentifierDeclType	znode		3928703	0					
ANR	3928709	Identifier	arg_node		3928703	1					
ANR	3928710	IdentifierDeclStatement	zend_op * opline ;	2925:1:84407:84422	3928703	1	True				
ANR	3928711	IdentifierDecl	* opline		3928703	0					
ANR	3928712	IdentifierDeclType	zend_op *		3928703	0					
ANR	3928713	Identifier	opline		3928703	1					
ANR	3928714	IfStatement	if ( args -> children != 1 || args -> child [ 0 ] -> kind == ZEND_AST_UNPACK )		3928703	2					
ANR	3928715	Condition	args -> children != 1 || args -> child [ 0 ] -> kind == ZEND_AST_UNPACK	2927:5:84430:84491	3928703	0	True				
ANR	3928716	OrExpression	args -> children != 1 || args -> child [ 0 ] -> kind == ZEND_AST_UNPACK		3928703	0		||			
ANR	3928717	EqualityExpression	args -> children != 1		3928703	0		!=			
ANR	3928718	PtrMemberAccess	args -> children		3928703	0					
ANR	3928719	Identifier	args		3928703	0					
ANR	3928720	Identifier	children		3928703	1					
ANR	3928721	PrimaryExpression	1		3928703	1					
ANR	3928722	EqualityExpression	args -> child [ 0 ] -> kind == ZEND_AST_UNPACK		3928703	1		==			
ANR	3928723	PtrMemberAccess	args -> child [ 0 ] -> kind		3928703	0					
ANR	3928724	ArrayIndexing	args -> child [ 0 ]		3928703	0					
ANR	3928725	PtrMemberAccess	args -> child		3928703	0					
ANR	3928726	Identifier	args		3928703	0					
ANR	3928727	Identifier	child		3928703	1					
ANR	3928728	PrimaryExpression	0		3928703	1					
ANR	3928729	Identifier	kind		3928703	1					
ANR	3928730	Identifier	ZEND_AST_UNPACK		3928703	1					
ANR	3928731	CompoundStatement		5:69:106:106	3928703	1					
ANR	3928732	ReturnStatement	return FAILURE ;	2928:2:84498:84512	3928703	0	True				
ANR	3928733	Identifier	FAILURE		3928703	0					
ANR	3928734	ExpressionStatement	"zend_compile_expr ( & arg_node , args -> child [ 0 ] )"	2931:1:84519:84563	3928703	3	True				
ANR	3928735	CallExpression	"zend_compile_expr ( & arg_node , args -> child [ 0 ] )"		3928703	0					
ANR	3928736	Callee	zend_compile_expr		3928703	0					
ANR	3928737	Identifier	zend_compile_expr		3928703	0					
ANR	3928738	ArgumentList	& arg_node		3928703	1					
ANR	3928739	Argument	& arg_node		3928703	0					
ANR	3928740	UnaryOperationExpression	& arg_node		3928703	0					
ANR	3928741	UnaryOperator	&		3928703	0					
ANR	3928742	Identifier	arg_node		3928703	1					
ANR	3928743	Argument	args -> child [ 0 ]		3928703	1					
ANR	3928744	ArrayIndexing	args -> child [ 0 ]		3928703	0					
ANR	3928745	PtrMemberAccess	args -> child		3928703	0					
ANR	3928746	Identifier	args		3928703	0					
ANR	3928747	Identifier	child		3928703	1					
ANR	3928748	PrimaryExpression	0		3928703	1					
ANR	3928749	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_TYPE_CHECK , & arg_node , NULL )"	2932:1:84566:84633	3928703	4	True				
ANR	3928750	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_TYPE_CHECK , & arg_node , NULL )"		3928703	0		=			
ANR	3928751	Identifier	opline		3928703	0					
ANR	3928752	CallExpression	"zend_emit_op_tmp ( result , ZEND_TYPE_CHECK , & arg_node , NULL )"		3928703	1					
ANR	3928753	Callee	zend_emit_op_tmp		3928703	0					
ANR	3928754	Identifier	zend_emit_op_tmp		3928703	0					
ANR	3928755	ArgumentList	result		3928703	1					
ANR	3928756	Argument	result		3928703	0					
ANR	3928757	Identifier	result		3928703	0					
ANR	3928758	Argument	ZEND_TYPE_CHECK		3928703	1					
ANR	3928759	Identifier	ZEND_TYPE_CHECK		3928703	0					
ANR	3928760	Argument	& arg_node		3928703	2					
ANR	3928761	UnaryOperationExpression	& arg_node		3928703	0					
ANR	3928762	UnaryOperator	&		3928703	0					
ANR	3928763	Identifier	arg_node		3928703	1					
ANR	3928764	Argument	NULL		3928703	3					
ANR	3928765	Identifier	NULL		3928703	0					
ANR	3928766	ExpressionStatement	opline -> extended_value = type	2933:1:84636:84665	3928703	5	True				
ANR	3928767	AssignmentExpression	opline -> extended_value = type		3928703	0		=			
ANR	3928768	PtrMemberAccess	opline -> extended_value		3928703	0					
ANR	3928769	Identifier	opline		3928703	0					
ANR	3928770	Identifier	extended_value		3928703	1					
ANR	3928771	Identifier	type		3928703	1					
ANR	3928772	ReturnStatement	return SUCCESS ;	2934:1:84668:84682	3928703	6	True				
ANR	3928773	Identifier	SUCCESS		3928703	0					
ANR	3928774	ReturnType	int		3928703	1					
ANR	3928775	Identifier	zend_compile_func_typecheck		3928703	2					
ANR	3928776	ParameterList	"znode * result , zend_ast_list * args , uint32_t type"		3928703	3					
ANR	3928777	Parameter	znode * result	2922:32:84326:84338	3928703	0	True				
ANR	3928778	ParameterType	znode *		3928703	0					
ANR	3928779	Identifier	result		3928703	1					
ANR	3928780	Parameter	zend_ast_list * args	2922:47:84341:84359	3928703	1	True				
ANR	3928781	ParameterType	zend_ast_list *		3928703	0					
ANR	3928782	Identifier	args		3928703	1					
ANR	3928783	Parameter	uint32_t type	2922:68:84362:84374	3928703	2	True				
ANR	3928784	ParameterType	uint32_t		3928703	0					
ANR	3928785	Identifier	type		3928703	1					
ANR	3928786	CFGEntryNode	ENTRY		3928703		True				
ANR	3928787	CFGExitNode	EXIT		3928703		True				
ANR	3928788	Symbol	args -> child [ 0 ] -> kind		3928703						
ANR	3928789	Symbol	zend_emit_op_tmp		3928703						
ANR	3928790	Symbol	arg_node		3928703						
ANR	3928791	Symbol	ZEND_TYPE_CHECK		3928703						
ANR	3928792	Symbol	NULL		3928703						
ANR	3928793	Symbol	SUCCESS		3928703						
ANR	3928794	Symbol	ZEND_AST_UNPACK		3928703						
ANR	3928795	Symbol	* args -> child		3928703						
ANR	3928796	Symbol	type		3928703						
ANR	3928797	Symbol	FAILURE		3928703						
ANR	3928798	Symbol	opline -> extended_value		3928703						
ANR	3928799	Symbol	* args		3928703						
ANR	3928800	Symbol	result		3928703						
ANR	3928801	Symbol	args		3928703						
ANR	3928802	Symbol	* * * args		3928703						
ANR	3928803	Symbol	opline		3928703						
ANR	3928804	Symbol	* opline		3928703						
ANR	3928805	Symbol	args -> child		3928703						
ANR	3928806	Symbol	args -> children		3928703						
ANR	3928807	Symbol	& arg_node		3928703						
ANR	3928808	Symbol	* * args		3928703						
ANR	3928809	Symbol	* * args -> child		3928703						
ANR	3928810	Function	zend_compile_func_defined	2938:0:84697:85510							
ANR	3928811	FunctionDef	"zend_compile_func_defined (znode * result , zend_ast_list * args)"		3928810	0					
ANR	3928812	CompoundStatement		2939:0:84773:85510	3928810	0					
ANR	3928813	IdentifierDeclStatement	zend_string * name ;	2940:1:84776:84793	3928810	0	True				
ANR	3928814	IdentifierDecl	* name		3928810	0					
ANR	3928815	IdentifierDeclType	zend_string *		3928810	0					
ANR	3928816	Identifier	name		3928810	1					
ANR	3928817	IdentifierDeclStatement	zend_op * opline ;	2941:1:84796:84811	3928810	1	True				
ANR	3928818	IdentifierDecl	* opline		3928810	0					
ANR	3928819	IdentifierDeclType	zend_op *		3928810	0					
ANR	3928820	Identifier	opline		3928810	1					
ANR	3928821	IfStatement	if ( args -> children != 1 || args -> child [ 0 ] -> kind != ZEND_AST_ZVAL )		3928810	2					
ANR	3928822	Condition	args -> children != 1 || args -> child [ 0 ] -> kind != ZEND_AST_ZVAL	2943:5:84819:84878	3928810	0	True				
ANR	3928823	OrExpression	args -> children != 1 || args -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3928810	0		||			
ANR	3928824	EqualityExpression	args -> children != 1		3928810	0		!=			
ANR	3928825	PtrMemberAccess	args -> children		3928810	0					
ANR	3928826	Identifier	args		3928810	0					
ANR	3928827	Identifier	children		3928810	1					
ANR	3928828	PrimaryExpression	1		3928810	1					
ANR	3928829	EqualityExpression	args -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3928810	1		!=			
ANR	3928830	PtrMemberAccess	args -> child [ 0 ] -> kind		3928810	0					
ANR	3928831	ArrayIndexing	args -> child [ 0 ]		3928810	0					
ANR	3928832	PtrMemberAccess	args -> child		3928810	0					
ANR	3928833	Identifier	args		3928810	0					
ANR	3928834	Identifier	child		3928810	1					
ANR	3928835	PrimaryExpression	0		3928810	1					
ANR	3928836	Identifier	kind		3928810	1					
ANR	3928837	Identifier	ZEND_AST_ZVAL		3928810	1					
ANR	3928838	CompoundStatement		5:67:107:107	3928810	1					
ANR	3928839	ReturnStatement	return FAILURE ;	2944:2:84885:84899	3928810	0	True				
ANR	3928840	Identifier	FAILURE		3928810	0					
ANR	3928841	ExpressionStatement	name = zval_get_string ( zend_ast_get_zval ( args -> child [ 0 ] ) )	2947:1:84906:84963	3928810	3	True				
ANR	3928842	AssignmentExpression	name = zval_get_string ( zend_ast_get_zval ( args -> child [ 0 ] ) )		3928810	0		=			
ANR	3928843	Identifier	name		3928810	0					
ANR	3928844	CallExpression	zval_get_string ( zend_ast_get_zval ( args -> child [ 0 ] ) )		3928810	1					
ANR	3928845	Callee	zval_get_string		3928810	0					
ANR	3928846	Identifier	zval_get_string		3928810	0					
ANR	3928847	ArgumentList	zend_ast_get_zval ( args -> child [ 0 ] )		3928810	1					
ANR	3928848	Argument	zend_ast_get_zval ( args -> child [ 0 ] )		3928810	0					
ANR	3928849	CallExpression	zend_ast_get_zval ( args -> child [ 0 ] )		3928810	0					
ANR	3928850	Callee	zend_ast_get_zval		3928810	0					
ANR	3928851	Identifier	zend_ast_get_zval		3928810	0					
ANR	3928852	ArgumentList	args -> child [ 0 ]		3928810	1					
ANR	3928853	Argument	args -> child [ 0 ]		3928810	0					
ANR	3928854	ArrayIndexing	args -> child [ 0 ]		3928810	0					
ANR	3928855	PtrMemberAccess	args -> child		3928810	0					
ANR	3928856	Identifier	args		3928810	0					
ANR	3928857	Identifier	child		3928810	1					
ANR	3928858	PrimaryExpression	0		3928810	1					
ANR	3928859	IfStatement	"if ( zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) ) || zend_memrchr ( ZSTR_VAL ( name ) , ':' , ZSTR_LEN ( name ) ) )"		3928810	4					
ANR	3928860	Condition	"zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) ) || zend_memrchr ( ZSTR_VAL ( name ) , ':' , ZSTR_LEN ( name ) )"	2948:5:84970:85072	3928810	0	True				
ANR	3928861	OrExpression	"zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) ) || zend_memrchr ( ZSTR_VAL ( name ) , ':' , ZSTR_LEN ( name ) )"		3928810	0		||			
ANR	3928862	CallExpression	"zend_memrchr ( ZSTR_VAL ( name ) , '\\\\' , ZSTR_LEN ( name ) )"		3928810	0					
ANR	3928863	Callee	zend_memrchr		3928810	0					
ANR	3928864	Identifier	zend_memrchr		3928810	0					
ANR	3928865	ArgumentList	ZSTR_VAL ( name )		3928810	1					
ANR	3928866	Argument	ZSTR_VAL ( name )		3928810	0					
ANR	3928867	CallExpression	ZSTR_VAL ( name )		3928810	0					
ANR	3928868	Callee	ZSTR_VAL		3928810	0					
ANR	3928869	Identifier	ZSTR_VAL		3928810	0					
ANR	3928870	ArgumentList	name		3928810	1					
ANR	3928871	Argument	name		3928810	0					
ANR	3928872	Identifier	name		3928810	0					
ANR	3928873	Argument	'\\\\'		3928810	1					
ANR	3928874	PrimaryExpression	'\\\\'		3928810	0					
ANR	3928875	Argument	ZSTR_LEN ( name )		3928810	2					
ANR	3928876	CallExpression	ZSTR_LEN ( name )		3928810	0					
ANR	3928877	Callee	ZSTR_LEN		3928810	0					
ANR	3928878	Identifier	ZSTR_LEN		3928810	0					
ANR	3928879	ArgumentList	name		3928810	1					
ANR	3928880	Argument	name		3928810	0					
ANR	3928881	Identifier	name		3928810	0					
ANR	3928882	CallExpression	"zend_memrchr ( ZSTR_VAL ( name ) , ':' , ZSTR_LEN ( name ) )"		3928810	1					
ANR	3928883	Callee	zend_memrchr		3928810	0					
ANR	3928884	Identifier	zend_memrchr		3928810	0					
ANR	3928885	ArgumentList	ZSTR_VAL ( name )		3928810	1					
ANR	3928886	Argument	ZSTR_VAL ( name )		3928810	0					
ANR	3928887	CallExpression	ZSTR_VAL ( name )		3928810	0					
ANR	3928888	Callee	ZSTR_VAL		3928810	0					
ANR	3928889	Identifier	ZSTR_VAL		3928810	0					
ANR	3928890	ArgumentList	name		3928810	1					
ANR	3928891	Argument	name		3928810	0					
ANR	3928892	Identifier	name		3928810	0					
ANR	3928893	Argument	':'		3928810	1					
ANR	3928894	PrimaryExpression	':'		3928810	0					
ANR	3928895	Argument	ZSTR_LEN ( name )		3928810	2					
ANR	3928896	CallExpression	ZSTR_LEN ( name )		3928810	0					
ANR	3928897	Callee	ZSTR_LEN		3928810	0					
ANR	3928898	Identifier	ZSTR_LEN		3928810	0					
ANR	3928899	ArgumentList	name		3928810	1					
ANR	3928900	Argument	name		3928810	0					
ANR	3928901	Identifier	name		3928810	0					
ANR	3928902	CompoundStatement		10:110:301:301	3928810	1					
ANR	3928903	ExpressionStatement	zend_string_release ( name )	2949:2:85079:85104	3928810	0	True				
ANR	3928904	CallExpression	zend_string_release ( name )		3928810	0					
ANR	3928905	Callee	zend_string_release		3928810	0					
ANR	3928906	Identifier	zend_string_release		3928810	0					
ANR	3928907	ArgumentList	name		3928810	1					
ANR	3928908	Argument	name		3928810	0					
ANR	3928909	Identifier	name		3928810	0					
ANR	3928910	ReturnStatement	return FAILURE ;	2950:2:85108:85122	3928810	1	True				
ANR	3928911	Identifier	FAILURE		3928810	0					
ANR	3928912	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_DEFINED , NULL , NULL )"	2953:1:85129:85188	3928810	5	True				
ANR	3928913	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_DEFINED , NULL , NULL )"		3928810	0		=			
ANR	3928914	Identifier	opline		3928810	0					
ANR	3928915	CallExpression	"zend_emit_op_tmp ( result , ZEND_DEFINED , NULL , NULL )"		3928810	1					
ANR	3928916	Callee	zend_emit_op_tmp		3928810	0					
ANR	3928917	Identifier	zend_emit_op_tmp		3928810	0					
ANR	3928918	ArgumentList	result		3928810	1					
ANR	3928919	Argument	result		3928810	0					
ANR	3928920	Identifier	result		3928810	0					
ANR	3928921	Argument	ZEND_DEFINED		3928810	1					
ANR	3928922	Identifier	ZEND_DEFINED		3928810	0					
ANR	3928923	Argument	NULL		3928810	2					
ANR	3928924	Identifier	NULL		3928810	0					
ANR	3928925	Argument	NULL		3928810	3					
ANR	3928926	Identifier	NULL		3928810	0					
ANR	3928927	ExpressionStatement	opline -> op1_type = IS_CONST	2954:1:85191:85218	3928810	6	True				
ANR	3928928	AssignmentExpression	opline -> op1_type = IS_CONST		3928810	0		=			
ANR	3928929	PtrMemberAccess	opline -> op1_type		3928810	0					
ANR	3928930	Identifier	opline		3928810	0					
ANR	3928931	Identifier	op1_type		3928810	1					
ANR	3928932	Identifier	IS_CONST		3928810	1					
ANR	3928933	ExpressionStatement	"LITERAL_STR ( opline -> op1 , name )"	2955:1:85221:85251	3928810	7	True				
ANR	3928934	CallExpression	"LITERAL_STR ( opline -> op1 , name )"		3928810	0					
ANR	3928935	Callee	LITERAL_STR		3928810	0					
ANR	3928936	Identifier	LITERAL_STR		3928810	0					
ANR	3928937	ArgumentList	opline -> op1		3928810	1					
ANR	3928938	Argument	opline -> op1		3928810	0					
ANR	3928939	PtrMemberAccess	opline -> op1		3928810	0					
ANR	3928940	Identifier	opline		3928810	0					
ANR	3928941	Identifier	op1		3928810	1					
ANR	3928942	Argument	name		3928810	1					
ANR	3928943	Identifier	name		3928810	0					
ANR	3928944	ExpressionStatement	zend_alloc_cache_slot ( opline -> op1 . constant )	2956:1:85254:85297	3928810	8	True				
ANR	3928945	CallExpression	zend_alloc_cache_slot ( opline -> op1 . constant )		3928810	0					
ANR	3928946	Callee	zend_alloc_cache_slot		3928810	0					
ANR	3928947	Identifier	zend_alloc_cache_slot		3928810	0					
ANR	3928948	ArgumentList	opline -> op1 . constant		3928810	1					
ANR	3928949	Argument	opline -> op1 . constant		3928810	0					
ANR	3928950	MemberAccess	opline -> op1 . constant		3928810	0					
ANR	3928951	PtrMemberAccess	opline -> op1		3928810	0					
ANR	3928952	Identifier	opline		3928810	0					
ANR	3928953	Identifier	op1		3928810	1					
ANR	3928954	Identifier	constant		3928810	1					
ANR	3928955	CompoundStatement		23:2:594:641	3928810	9					
ANR	3928956	IdentifierDeclStatement	zval c ;	2960:2:85358:85364	3928810	0	True				
ANR	3928957	IdentifierDecl	c		3928810	0					
ANR	3928958	IdentifierDeclType	zval		3928810	0					
ANR	3928959	Identifier	c		3928810	1					
ANR	3928960	IdentifierDeclStatement	zend_string * lcname = zend_string_tolower ( name ) ;	2961:2:85368:85415	3928810	1	True				
ANR	3928961	IdentifierDecl	* lcname = zend_string_tolower ( name )		3928810	0					
ANR	3928962	IdentifierDeclType	zend_string *		3928810	0					
ANR	3928963	Identifier	lcname		3928810	1					
ANR	3928964	AssignmentExpression	* lcname = zend_string_tolower ( name )		3928810	2		=			
ANR	3928965	Identifier	lcname		3928810	0					
ANR	3928966	CallExpression	zend_string_tolower ( name )		3928810	1					
ANR	3928967	Callee	zend_string_tolower		3928810	0					
ANR	3928968	Identifier	zend_string_tolower		3928810	0					
ANR	3928969	ArgumentList	name		3928810	1					
ANR	3928970	Argument	name		3928810	0					
ANR	3928971	Identifier	name		3928810	0					
ANR	3928972	ExpressionStatement	"ZVAL_NEW_STR ( & c , lcname )"	2962:2:85419:85443	3928810	2	True				
ANR	3928973	CallExpression	"ZVAL_NEW_STR ( & c , lcname )"		3928810	0					
ANR	3928974	Callee	ZVAL_NEW_STR		3928810	0					
ANR	3928975	Identifier	ZVAL_NEW_STR		3928810	0					
ANR	3928976	ArgumentList	& c		3928810	1					
ANR	3928977	Argument	& c		3928810	0					
ANR	3928978	UnaryOperationExpression	& c		3928810	0					
ANR	3928979	UnaryOperator	&		3928810	0					
ANR	3928980	Identifier	c		3928810	1					
ANR	3928981	Argument	lcname		3928810	1					
ANR	3928982	Identifier	lcname		3928810	0					
ANR	3928983	ExpressionStatement	"zend_add_literal ( CG ( active_op_array ) , & c )"	2963:2:85447:85488	3928810	3	True				
ANR	3928984	CallExpression	"zend_add_literal ( CG ( active_op_array ) , & c )"		3928810	0					
ANR	3928985	Callee	zend_add_literal		3928810	0					
ANR	3928986	Identifier	zend_add_literal		3928810	0					
ANR	3928987	ArgumentList	CG ( active_op_array )		3928810	1					
ANR	3928988	Argument	CG ( active_op_array )		3928810	0					
ANR	3928989	CallExpression	CG ( active_op_array )		3928810	0					
ANR	3928990	Callee	CG		3928810	0					
ANR	3928991	Identifier	CG		3928810	0					
ANR	3928992	ArgumentList	active_op_array		3928810	1					
ANR	3928993	Argument	active_op_array		3928810	0					
ANR	3928994	Identifier	active_op_array		3928810	0					
ANR	3928995	Argument	& c		3928810	1					
ANR	3928996	UnaryOperationExpression	& c		3928810	0					
ANR	3928997	UnaryOperator	&		3928810	0					
ANR	3928998	Identifier	c		3928810	1					
ANR	3928999	ReturnStatement	return SUCCESS ;	2965:1:85494:85508	3928810	10	True				
ANR	3929000	Identifier	SUCCESS		3928810	0					
ANR	3929001	ReturnType	int		3928810	1					
ANR	3929002	Identifier	zend_compile_func_defined		3928810	2					
ANR	3929003	ParameterList	"znode * result , zend_ast_list * args"		3928810	3					
ANR	3929004	Parameter	znode * result	2938:30:84727:84739	3928810	0	True				
ANR	3929005	ParameterType	znode *		3928810	0					
ANR	3929006	Identifier	result		3928810	1					
ANR	3929007	Parameter	zend_ast_list * args	2938:45:84742:84760	3928810	1	True				
ANR	3929008	ParameterType	zend_ast_list *		3928810	0					
ANR	3929009	Identifier	args		3928810	1					
ANR	3929010	CFGEntryNode	ENTRY		3928810		True				
ANR	3929011	CFGExitNode	EXIT		3928810		True				
ANR	3929012	Symbol	opline -> op1		3928810						
ANR	3929013	Symbol	zend_emit_op_tmp		3928810						
ANR	3929014	Symbol	* args -> child		3928810						
ANR	3929015	Symbol	zend_string_tolower		3928810						
ANR	3929016	Symbol	* args		3928810						
ANR	3929017	Symbol	result		3928810						
ANR	3929018	Symbol	* * * args		3928810						
ANR	3929019	Symbol	opline		3928810						
ANR	3929020	Symbol	ZEND_DEFINED		3928810						
ANR	3929021	Symbol	opline -> op1 . constant		3928810						
ANR	3929022	Symbol	ZEND_AST_ZVAL		3928810						
ANR	3929023	Symbol	* * args		3928810						
ANR	3929024	Symbol	* * args -> child		3928810						
ANR	3929025	Symbol	args -> child [ 0 ] -> kind		3928810						
ANR	3929026	Symbol	zend_memrchr		3928810						
ANR	3929027	Symbol	IS_CONST		3928810						
ANR	3929028	Symbol	NULL		3928810						
ANR	3929029	Symbol	c		3928810						
ANR	3929030	Symbol	SUCCESS		3928810						
ANR	3929031	Symbol	CG		3928810						
ANR	3929032	Symbol	active_op_array		3928810						
ANR	3929033	Symbol	zval_get_string		3928810						
ANR	3929034	Symbol	& c		3928810						
ANR	3929035	Symbol	FAILURE		3928810						
ANR	3929036	Symbol	opline -> op1_type		3928810						
ANR	3929037	Symbol	ZSTR_VAL		3928810						
ANR	3929038	Symbol	args		3928810						
ANR	3929039	Symbol	lcname		3928810						
ANR	3929040	Symbol	* opline		3928810						
ANR	3929041	Symbol	args -> child		3928810						
ANR	3929042	Symbol	args -> children		3928810						
ANR	3929043	Symbol	name		3928810						
ANR	3929044	Symbol	ZSTR_LEN		3928810						
ANR	3929045	Symbol	zend_ast_get_zval		3928810						
ANR	3929046	Function	zend_try_compile_ct_bound_init_user_func	2969:0:85523:86503							
ANR	3929047	FunctionDef	"zend_try_compile_ct_bound_init_user_func (zend_ast * name_ast , uint32_t num_args)"		3929046	0					
ANR	3929048	CompoundStatement		2970:0:85624:86503	3929046	0					
ANR	3929049	IdentifierDeclStatement	"zend_string * name , * lcname ;"	2971:1:85627:85653	3929046	0	True				
ANR	3929050	IdentifierDecl	* name		3929046	0					
ANR	3929051	IdentifierDeclType	zend_string *		3929046	0					
ANR	3929052	Identifier	name		3929046	1					
ANR	3929053	IdentifierDecl	* lcname		3929046	1					
ANR	3929054	IdentifierDeclType	zend_string *		3929046	0					
ANR	3929055	Identifier	lcname		3929046	1					
ANR	3929056	IdentifierDeclStatement	zend_function * fbc ;	2972:1:85656:85674	3929046	1	True				
ANR	3929057	IdentifierDecl	* fbc		3929046	0					
ANR	3929058	IdentifierDeclType	zend_function *		3929046	0					
ANR	3929059	Identifier	fbc		3929046	1					
ANR	3929060	IdentifierDeclStatement	zend_op * opline ;	2973:1:85677:85692	3929046	2	True				
ANR	3929061	IdentifierDecl	* opline		3929046	0					
ANR	3929062	IdentifierDeclType	zend_op *		3929046	0					
ANR	3929063	Identifier	opline		3929046	1					
ANR	3929064	IfStatement	if ( name_ast -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING )		3929046	3					
ANR	3929065	Condition	name_ast -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING	2975:5:85700:85784	3929046	0	True				
ANR	3929066	OrExpression	name_ast -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING		3929046	0		||			
ANR	3929067	EqualityExpression	name_ast -> kind != ZEND_AST_ZVAL		3929046	0		!=			
ANR	3929068	PtrMemberAccess	name_ast -> kind		3929046	0					
ANR	3929069	Identifier	name_ast		3929046	0					
ANR	3929070	Identifier	kind		3929046	1					
ANR	3929071	Identifier	ZEND_AST_ZVAL		3929046	1					
ANR	3929072	EqualityExpression	Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING		3929046	1		!=			
ANR	3929073	CallExpression	Z_TYPE_P ( zend_ast_get_zval ( name_ast ) )		3929046	0					
ANR	3929074	Callee	Z_TYPE_P		3929046	0					
ANR	3929075	Identifier	Z_TYPE_P		3929046	0					
ANR	3929076	ArgumentList	zend_ast_get_zval ( name_ast )		3929046	1					
ANR	3929077	Argument	zend_ast_get_zval ( name_ast )		3929046	0					
ANR	3929078	CallExpression	zend_ast_get_zval ( name_ast )		3929046	0					
ANR	3929079	Callee	zend_ast_get_zval		3929046	0					
ANR	3929080	Identifier	zend_ast_get_zval		3929046	0					
ANR	3929081	ArgumentList	name_ast		3929046	1					
ANR	3929082	Argument	name_ast		3929046	0					
ANR	3929083	Identifier	name_ast		3929046	0					
ANR	3929084	Identifier	IS_STRING		3929046	1					
ANR	3929085	CompoundStatement		6:92:162:162	3929046	1					
ANR	3929086	ReturnStatement	return FAILURE ;	2976:2:85791:85805	3929046	0	True				
ANR	3929087	Identifier	FAILURE		3929046	0					
ANR	3929088	ExpressionStatement	name = zend_ast_get_str ( name_ast )	2979:1:85812:85845	3929046	4	True				
ANR	3929089	AssignmentExpression	name = zend_ast_get_str ( name_ast )		3929046	0		=			
ANR	3929090	Identifier	name		3929046	0					
ANR	3929091	CallExpression	zend_ast_get_str ( name_ast )		3929046	1					
ANR	3929092	Callee	zend_ast_get_str		3929046	0					
ANR	3929093	Identifier	zend_ast_get_str		3929046	0					
ANR	3929094	ArgumentList	name_ast		3929046	1					
ANR	3929095	Argument	name_ast		3929046	0					
ANR	3929096	Identifier	name_ast		3929046	0					
ANR	3929097	ExpressionStatement	lcname = zend_string_tolower ( name )	2980:1:85848:85882	3929046	5	True				
ANR	3929098	AssignmentExpression	lcname = zend_string_tolower ( name )		3929046	0		=			
ANR	3929099	Identifier	lcname		3929046	0					
ANR	3929100	CallExpression	zend_string_tolower ( name )		3929046	1					
ANR	3929101	Callee	zend_string_tolower		3929046	0					
ANR	3929102	Identifier	zend_string_tolower		3929046	0					
ANR	3929103	ArgumentList	name		3929046	1					
ANR	3929104	Argument	name		3929046	0					
ANR	3929105	Identifier	name		3929046	0					
ANR	3929106	ExpressionStatement	"fbc = zend_hash_find_ptr ( CG ( function_table ) , lcname )"	2982:1:85886:85938	3929046	6	True				
ANR	3929107	AssignmentExpression	"fbc = zend_hash_find_ptr ( CG ( function_table ) , lcname )"		3929046	0		=			
ANR	3929108	Identifier	fbc		3929046	0					
ANR	3929109	CallExpression	"zend_hash_find_ptr ( CG ( function_table ) , lcname )"		3929046	1					
ANR	3929110	Callee	zend_hash_find_ptr		3929046	0					
ANR	3929111	Identifier	zend_hash_find_ptr		3929046	0					
ANR	3929112	ArgumentList	CG ( function_table )		3929046	1					
ANR	3929113	Argument	CG ( function_table )		3929046	0					
ANR	3929114	CallExpression	CG ( function_table )		3929046	0					
ANR	3929115	Callee	CG		3929046	0					
ANR	3929116	Identifier	CG		3929046	0					
ANR	3929117	ArgumentList	function_table		3929046	1					
ANR	3929118	Argument	function_table		3929046	0					
ANR	3929119	Identifier	function_table		3929046	0					
ANR	3929120	Argument	lcname		3929046	1					
ANR	3929121	Identifier	lcname		3929046	0					
ANR	3929122	IfStatement	if ( ! fbc || ( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) ) )		3929046	7					
ANR	3929123	Condition	! fbc || ( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) )	2983:5:85945:86160	3929046	0	True				
ANR	3929124	OrExpression	! fbc || ( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) )		3929046	0		||			
ANR	3929125	UnaryOperationExpression	! fbc		3929046	0					
ANR	3929126	UnaryOperator	!		3929046	0					
ANR	3929127	Identifier	fbc		3929046	1					
ANR	3929128	OrExpression	( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) )		3929046	1		||			
ANR	3929129	AndExpression	fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS )		3929046	0		&&			
ANR	3929130	EqualityExpression	fbc -> type == ZEND_INTERNAL_FUNCTION		3929046	0		==			
ANR	3929131	PtrMemberAccess	fbc -> type		3929046	0					
ANR	3929132	Identifier	fbc		3929046	0					
ANR	3929133	Identifier	type		3929046	1					
ANR	3929134	Identifier	ZEND_INTERNAL_FUNCTION		3929046	1					
ANR	3929135	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS		3929046	1		&			
ANR	3929136	CallExpression	CG ( compiler_options )		3929046	0					
ANR	3929137	Callee	CG		3929046	0					
ANR	3929138	Identifier	CG		3929046	0					
ANR	3929139	ArgumentList	compiler_options		3929046	1					
ANR	3929140	Argument	compiler_options		3929046	0					
ANR	3929141	Identifier	compiler_options		3929046	0					
ANR	3929142	Identifier	ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS		3929046	1					
ANR	3929143	AndExpression	fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS )		3929046	1		&&			
ANR	3929144	EqualityExpression	fbc -> type == ZEND_USER_FUNCTION		3929046	0		==			
ANR	3929145	PtrMemberAccess	fbc -> type		3929046	0					
ANR	3929146	Identifier	fbc		3929046	0					
ANR	3929147	Identifier	type		3929046	1					
ANR	3929148	Identifier	ZEND_USER_FUNCTION		3929046	1					
ANR	3929149	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS		3929046	1		&			
ANR	3929150	CallExpression	CG ( compiler_options )		3929046	0					
ANR	3929151	Callee	CG		3929046	0					
ANR	3929152	Identifier	CG		3929046	0					
ANR	3929153	ArgumentList	compiler_options		3929046	1					
ANR	3929154	Argument	compiler_options		3929046	0					
ANR	3929155	Identifier	compiler_options		3929046	0					
ANR	3929156	Identifier	ZEND_COMPILE_IGNORE_USER_FUNCTIONS		3929046	1					
ANR	3929157	CompoundStatement		17:3:540:540	3929046	1					
ANR	3929158	ExpressionStatement	zend_string_release ( lcname )	2987:2:86169:86196	3929046	0	True				
ANR	3929159	CallExpression	zend_string_release ( lcname )		3929046	0					
ANR	3929160	Callee	zend_string_release		3929046	0					
ANR	3929161	Identifier	zend_string_release		3929046	0					
ANR	3929162	ArgumentList	lcname		3929046	1					
ANR	3929163	Argument	lcname		3929046	0					
ANR	3929164	Identifier	lcname		3929046	0					
ANR	3929165	ReturnStatement	return FAILURE ;	2988:2:86200:86214	3929046	1	True				
ANR	3929166	Identifier	FAILURE		3929046	0					
ANR	3929167	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , NULL )"	2991:1:86221:86277	3929046	8	True				
ANR	3929168	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , NULL )"		3929046	0		=			
ANR	3929169	Identifier	opline		3929046	0					
ANR	3929170	CallExpression	"zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , NULL )"		3929046	1					
ANR	3929171	Callee	zend_emit_op		3929046	0					
ANR	3929172	Identifier	zend_emit_op		3929046	0					
ANR	3929173	ArgumentList	NULL		3929046	1					
ANR	3929174	Argument	NULL		3929046	0					
ANR	3929175	Identifier	NULL		3929046	0					
ANR	3929176	Argument	ZEND_INIT_FCALL		3929046	1					
ANR	3929177	Identifier	ZEND_INIT_FCALL		3929046	0					
ANR	3929178	Argument	NULL		3929046	2					
ANR	3929179	Identifier	NULL		3929046	0					
ANR	3929180	Argument	NULL		3929046	3					
ANR	3929181	Identifier	NULL		3929046	0					
ANR	3929182	ExpressionStatement	opline -> extended_value = num_args	2992:1:86280:86313	3929046	9	True				
ANR	3929183	AssignmentExpression	opline -> extended_value = num_args		3929046	0		=			
ANR	3929184	PtrMemberAccess	opline -> extended_value		3929046	0					
ANR	3929185	Identifier	opline		3929046	0					
ANR	3929186	Identifier	extended_value		3929046	1					
ANR	3929187	Identifier	num_args		3929046	1					
ANR	3929188	ExpressionStatement	"opline -> op1 . num = zend_vm_calc_used_stack ( num_args , fbc )"	2993:1:86316:86372	3929046	10	True				
ANR	3929189	AssignmentExpression	"opline -> op1 . num = zend_vm_calc_used_stack ( num_args , fbc )"		3929046	0		=			
ANR	3929190	MemberAccess	opline -> op1 . num		3929046	0					
ANR	3929191	PtrMemberAccess	opline -> op1		3929046	0					
ANR	3929192	Identifier	opline		3929046	0					
ANR	3929193	Identifier	op1		3929046	1					
ANR	3929194	Identifier	num		3929046	1					
ANR	3929195	CallExpression	"zend_vm_calc_used_stack ( num_args , fbc )"		3929046	1					
ANR	3929196	Callee	zend_vm_calc_used_stack		3929046	0					
ANR	3929197	Identifier	zend_vm_calc_used_stack		3929046	0					
ANR	3929198	ArgumentList	num_args		3929046	1					
ANR	3929199	Argument	num_args		3929046	0					
ANR	3929200	Identifier	num_args		3929046	0					
ANR	3929201	Argument	fbc		3929046	1					
ANR	3929202	Identifier	fbc		3929046	0					
ANR	3929203	ExpressionStatement	opline -> op2_type = IS_CONST	2994:1:86375:86402	3929046	11	True				
ANR	3929204	AssignmentExpression	opline -> op2_type = IS_CONST		3929046	0		=			
ANR	3929205	PtrMemberAccess	opline -> op2_type		3929046	0					
ANR	3929206	Identifier	opline		3929046	0					
ANR	3929207	Identifier	op2_type		3929046	1					
ANR	3929208	Identifier	IS_CONST		3929046	1					
ANR	3929209	ExpressionStatement	"LITERAL_STR ( opline -> op2 , lcname )"	2995:1:86405:86437	3929046	12	True				
ANR	3929210	CallExpression	"LITERAL_STR ( opline -> op2 , lcname )"		3929046	0					
ANR	3929211	Callee	LITERAL_STR		3929046	0					
ANR	3929212	Identifier	LITERAL_STR		3929046	0					
ANR	3929213	ArgumentList	opline -> op2		3929046	1					
ANR	3929214	Argument	opline -> op2		3929046	0					
ANR	3929215	PtrMemberAccess	opline -> op2		3929046	0					
ANR	3929216	Identifier	opline		3929046	0					
ANR	3929217	Identifier	op2		3929046	1					
ANR	3929218	Argument	lcname		3929046	1					
ANR	3929219	Identifier	lcname		3929046	0					
ANR	3929220	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	2996:1:86440:86483	3929046	13	True				
ANR	3929221	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3929046	0					
ANR	3929222	Callee	zend_alloc_cache_slot		3929046	0					
ANR	3929223	Identifier	zend_alloc_cache_slot		3929046	0					
ANR	3929224	ArgumentList	opline -> op2 . constant		3929046	1					
ANR	3929225	Argument	opline -> op2 . constant		3929046	0					
ANR	3929226	MemberAccess	opline -> op2 . constant		3929046	0					
ANR	3929227	PtrMemberAccess	opline -> op2		3929046	0					
ANR	3929228	Identifier	opline		3929046	0					
ANR	3929229	Identifier	op2		3929046	1					
ANR	3929230	Identifier	constant		3929046	1					
ANR	3929231	ReturnStatement	return SUCCESS ;	2998:1:86487:86501	3929046	14	True				
ANR	3929232	Identifier	SUCCESS		3929046	0					
ANR	3929233	ReturnType	static int		3929046	1					
ANR	3929234	Identifier	zend_try_compile_ct_bound_init_user_func		3929046	2					
ANR	3929235	ParameterList	"zend_ast * name_ast , uint32_t num_args"		3929046	3					
ANR	3929236	Parameter	zend_ast * name_ast	2969:52:85575:85592	3929046	0	True				
ANR	3929237	ParameterType	zend_ast *		3929046	0					
ANR	3929238	Identifier	name_ast		3929046	1					
ANR	3929239	Parameter	uint32_t num_args	2969:72:85595:85611	3929046	1	True				
ANR	3929240	ParameterType	uint32_t		3929046	0					
ANR	3929241	Identifier	num_args		3929046	1					
ANR	3929242	CFGEntryNode	ENTRY		3929046		True				
ANR	3929243	CFGExitNode	EXIT		3929046		True				
ANR	3929244	Symbol	opline -> op1		3929046						
ANR	3929245	Symbol	opline -> op2		3929046						
ANR	3929246	Symbol	fbc -> type		3929046						
ANR	3929247	Symbol	zend_string_tolower		3929046						
ANR	3929248	Symbol	opline -> extended_value		3929046						
ANR	3929249	Symbol	* name_ast		3929046						
ANR	3929250	Symbol	ZEND_INTERNAL_FUNCTION		3929046						
ANR	3929251	Symbol	compiler_options		3929046						
ANR	3929252	Symbol	opline		3929046						
ANR	3929253	Symbol	zend_ast_get_str		3929046						
ANR	3929254	Symbol	ZEND_INIT_FCALL		3929046						
ANR	3929255	Symbol	num_args		3929046						
ANR	3929256	Symbol	ZEND_USER_FUNCTION		3929046						
ANR	3929257	Symbol	ZEND_AST_ZVAL		3929046						
ANR	3929258	Symbol	IS_STRING		3929046						
ANR	3929259	Symbol	zend_hash_find_ptr		3929046						
ANR	3929260	Symbol	IS_CONST		3929046						
ANR	3929261	Symbol	NULL		3929046						
ANR	3929262	Symbol	SUCCESS		3929046						
ANR	3929263	Symbol	CG		3929046						
ANR	3929264	Symbol	fbc		3929046						
ANR	3929265	Symbol	ZEND_COMPILE_IGNORE_USER_FUNCTIONS		3929046						
ANR	3929266	Symbol	Z_TYPE_P		3929046						
ANR	3929267	Symbol	FAILURE		3929046						
ANR	3929268	Symbol	* fbc		3929046						
ANR	3929269	Symbol	lcname		3929046						
ANR	3929270	Symbol	ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS		3929046						
ANR	3929271	Symbol	* opline		3929046						
ANR	3929272	Symbol	name_ast -> kind		3929046						
ANR	3929273	Symbol	name_ast		3929046						
ANR	3929274	Symbol	name		3929046						
ANR	3929275	Symbol	opline -> op2 . constant		3929046						
ANR	3929276	Symbol	opline -> op1 . num		3929046						
ANR	3929277	Symbol	opline -> op2_type		3929046						
ANR	3929278	Symbol	zend_ast_get_zval		3929046						
ANR	3929279	Symbol	function_table		3929046						
ANR	3929280	Symbol	zend_vm_calc_used_stack		3929046						
ANR	3929281	Symbol	zend_emit_op		3929046						
ANR	3929282	Function	zend_compile_init_user_func	3002:0:86516:87006							
ANR	3929283	FunctionDef	"zend_compile_init_user_func (zend_ast * name_ast , uint32_t num_args , zend_string * orig_func_name)"		3929282	0					
ANR	3929284	CompoundStatement		3003:0:86634:87006	3929282	0					
ANR	3929285	IdentifierDeclStatement	zend_op * opline ;	3004:1:86637:86652	3929282	0	True				
ANR	3929286	IdentifierDecl	* opline		3929282	0					
ANR	3929287	IdentifierDeclType	zend_op *		3929282	0					
ANR	3929288	Identifier	opline		3929282	1					
ANR	3929289	IdentifierDeclStatement	znode name_node ;	3005:1:86655:86670	3929282	1	True				
ANR	3929290	IdentifierDecl	name_node		3929282	0					
ANR	3929291	IdentifierDeclType	znode		3929282	0					
ANR	3929292	Identifier	name_node		3929282	1					
ANR	3929293	IfStatement	"if ( zend_try_compile_ct_bound_init_user_func ( name_ast , num_args ) == SUCCESS )"		3929282	2					
ANR	3929294	Condition	"zend_try_compile_ct_bound_init_user_func ( name_ast , num_args ) == SUCCESS"	3007:5:86678:86748	3929282	0	True				
ANR	3929295	EqualityExpression	"zend_try_compile_ct_bound_init_user_func ( name_ast , num_args ) == SUCCESS"		3929282	0		==			
ANR	3929296	CallExpression	"zend_try_compile_ct_bound_init_user_func ( name_ast , num_args )"		3929282	0					
ANR	3929297	Callee	zend_try_compile_ct_bound_init_user_func		3929282	0					
ANR	3929298	Identifier	zend_try_compile_ct_bound_init_user_func		3929282	0					
ANR	3929299	ArgumentList	name_ast		3929282	1					
ANR	3929300	Argument	name_ast		3929282	0					
ANR	3929301	Identifier	name_ast		3929282	0					
ANR	3929302	Argument	num_args		3929282	1					
ANR	3929303	Identifier	num_args		3929282	0					
ANR	3929304	Identifier	SUCCESS		3929282	1					
ANR	3929305	CompoundStatement		5:78:116:116	3929282	1					
ANR	3929306	ReturnStatement	return ;	3008:2:86755:86761	3929282	0	True				
ANR	3929307	ExpressionStatement	"zend_compile_expr ( & name_node , name_ast )"	3011:1:86768:86807	3929282	3	True				
ANR	3929308	CallExpression	"zend_compile_expr ( & name_node , name_ast )"		3929282	0					
ANR	3929309	Callee	zend_compile_expr		3929282	0					
ANR	3929310	Identifier	zend_compile_expr		3929282	0					
ANR	3929311	ArgumentList	& name_node		3929282	1					
ANR	3929312	Argument	& name_node		3929282	0					
ANR	3929313	UnaryOperationExpression	& name_node		3929282	0					
ANR	3929314	UnaryOperator	&		3929282	0					
ANR	3929315	Identifier	name_node		3929282	1					
ANR	3929316	Argument	name_ast		3929282	1					
ANR	3929317	Identifier	name_ast		3929282	0					
ANR	3929318	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_INIT_USER_CALL , NULL , & name_node )"	3013:1:86811:86877	3929282	4	True				
ANR	3929319	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_INIT_USER_CALL , NULL , & name_node )"		3929282	0		=			
ANR	3929320	Identifier	opline		3929282	0					
ANR	3929321	CallExpression	"zend_emit_op ( NULL , ZEND_INIT_USER_CALL , NULL , & name_node )"		3929282	1					
ANR	3929322	Callee	zend_emit_op		3929282	0					
ANR	3929323	Identifier	zend_emit_op		3929282	0					
ANR	3929324	ArgumentList	NULL		3929282	1					
ANR	3929325	Argument	NULL		3929282	0					
ANR	3929326	Identifier	NULL		3929282	0					
ANR	3929327	Argument	ZEND_INIT_USER_CALL		3929282	1					
ANR	3929328	Identifier	ZEND_INIT_USER_CALL		3929282	0					
ANR	3929329	Argument	NULL		3929282	2					
ANR	3929330	Identifier	NULL		3929282	0					
ANR	3929331	Argument	& name_node		3929282	3					
ANR	3929332	UnaryOperationExpression	& name_node		3929282	0					
ANR	3929333	UnaryOperator	&		3929282	0					
ANR	3929334	Identifier	name_node		3929282	1					
ANR	3929335	ExpressionStatement	opline -> op1_type = IS_CONST	3014:1:86880:86907	3929282	5	True				
ANR	3929336	AssignmentExpression	opline -> op1_type = IS_CONST		3929282	0		=			
ANR	3929337	PtrMemberAccess	opline -> op1_type		3929282	0					
ANR	3929338	Identifier	opline		3929282	0					
ANR	3929339	Identifier	op1_type		3929282	1					
ANR	3929340	Identifier	IS_CONST		3929282	1					
ANR	3929341	ExpressionStatement	"LITERAL_STR ( opline -> op1 , zend_string_copy ( orig_func_name ) )"	3015:1:86910:86968	3929282	6	True				
ANR	3929342	CallExpression	"LITERAL_STR ( opline -> op1 , zend_string_copy ( orig_func_name ) )"		3929282	0					
ANR	3929343	Callee	LITERAL_STR		3929282	0					
ANR	3929344	Identifier	LITERAL_STR		3929282	0					
ANR	3929345	ArgumentList	opline -> op1		3929282	1					
ANR	3929346	Argument	opline -> op1		3929282	0					
ANR	3929347	PtrMemberAccess	opline -> op1		3929282	0					
ANR	3929348	Identifier	opline		3929282	0					
ANR	3929349	Identifier	op1		3929282	1					
ANR	3929350	Argument	zend_string_copy ( orig_func_name )		3929282	1					
ANR	3929351	CallExpression	zend_string_copy ( orig_func_name )		3929282	0					
ANR	3929352	Callee	zend_string_copy		3929282	0					
ANR	3929353	Identifier	zend_string_copy		3929282	0					
ANR	3929354	ArgumentList	orig_func_name		3929282	1					
ANR	3929355	Argument	orig_func_name		3929282	0					
ANR	3929356	Identifier	orig_func_name		3929282	0					
ANR	3929357	ExpressionStatement	opline -> extended_value = num_args	3016:1:86971:87004	3929282	7	True				
ANR	3929358	AssignmentExpression	opline -> extended_value = num_args		3929282	0		=			
ANR	3929359	PtrMemberAccess	opline -> extended_value		3929282	0					
ANR	3929360	Identifier	opline		3929282	0					
ANR	3929361	Identifier	extended_value		3929282	1					
ANR	3929362	Identifier	num_args		3929282	1					
ANR	3929363	ReturnType	static void		3929282	1					
ANR	3929364	Identifier	zend_compile_init_user_func		3929282	2					
ANR	3929365	ParameterList	"zend_ast * name_ast , uint32_t num_args , zend_string * orig_func_name"		3929282	3					
ANR	3929366	Parameter	zend_ast * name_ast	3002:40:86556:86573	3929282	0	True				
ANR	3929367	ParameterType	zend_ast *		3929282	0					
ANR	3929368	Identifier	name_ast		3929282	1					
ANR	3929369	Parameter	uint32_t num_args	3002:60:86576:86592	3929282	1	True				
ANR	3929370	ParameterType	uint32_t		3929282	0					
ANR	3929371	Identifier	num_args		3929282	1					
ANR	3929372	Parameter	zend_string * orig_func_name	3002:79:86595:86621	3929282	2	True				
ANR	3929373	ParameterType	zend_string *		3929282	0					
ANR	3929374	Identifier	orig_func_name		3929282	1					
ANR	3929375	CFGEntryNode	ENTRY		3929282		True				
ANR	3929376	CFGExitNode	EXIT		3929282		True				
ANR	3929377	Symbol	opline -> op1		3929282						
ANR	3929378	Symbol	IS_CONST		3929282						
ANR	3929379	Symbol	SUCCESS		3929282						
ANR	3929380	Symbol	NULL		3929282						
ANR	3929381	Symbol	zend_string_copy		3929282						
ANR	3929382	Symbol	opline -> op1_type		3929282						
ANR	3929383	Symbol	opline -> extended_value		3929282						
ANR	3929384	Symbol	zend_try_compile_ct_bound_init_user_func		3929282						
ANR	3929385	Symbol	ZEND_INIT_USER_CALL		3929282						
ANR	3929386	Symbol	opline		3929282						
ANR	3929387	Symbol	* opline		3929282						
ANR	3929388	Symbol	num_args		3929282						
ANR	3929389	Symbol	& name_node		3929282						
ANR	3929390	Symbol	orig_func_name		3929282						
ANR	3929391	Symbol	name_ast		3929282						
ANR	3929392	Symbol	name_node		3929282						
ANR	3929393	Symbol	zend_emit_op		3929282						
ANR	3929394	Function	zend_compile_func_cufa	3021:0:87053:87478							
ANR	3929395	FunctionDef	"zend_compile_func_cufa (znode * result , zend_ast_list * args , zend_string * lcname)"		3929394	0					
ANR	3929396	CompoundStatement		3022:0:87147:87478	3929394	0					
ANR	3929397	IdentifierDeclStatement	znode arg_node ;	3023:1:87150:87164	3929394	0	True				
ANR	3929398	IdentifierDecl	arg_node		3929394	0					
ANR	3929399	IdentifierDeclType	znode		3929394	0					
ANR	3929400	Identifier	arg_node		3929394	1					
ANR	3929401	IfStatement	if ( args -> children != 2 || zend_args_contain_unpack ( args ) )		3929394	1					
ANR	3929402	Condition	args -> children != 2 || zend_args_contain_unpack ( args )	3025:5:87172:87224	3929394	0	True				
ANR	3929403	OrExpression	args -> children != 2 || zend_args_contain_unpack ( args )		3929394	0		||			
ANR	3929404	EqualityExpression	args -> children != 2		3929394	0		!=			
ANR	3929405	PtrMemberAccess	args -> children		3929394	0					
ANR	3929406	Identifier	args		3929394	0					
ANR	3929407	Identifier	children		3929394	1					
ANR	3929408	PrimaryExpression	2		3929394	1					
ANR	3929409	CallExpression	zend_args_contain_unpack ( args )		3929394	1					
ANR	3929410	Callee	zend_args_contain_unpack		3929394	0					
ANR	3929411	Identifier	zend_args_contain_unpack		3929394	0					
ANR	3929412	ArgumentList	args		3929394	1					
ANR	3929413	Argument	args		3929394	0					
ANR	3929414	Identifier	args		3929394	0					
ANR	3929415	CompoundStatement		4:60:79:79	3929394	1					
ANR	3929416	ReturnStatement	return FAILURE ;	3026:2:87231:87245	3929394	0	True				
ANR	3929417	Identifier	FAILURE		3929394	0					
ANR	3929418	ExpressionStatement	"zend_compile_init_user_func ( args -> child [ 0 ] , 0 , lcname )"	3029:1:87252:87306	3929394	2	True				
ANR	3929419	CallExpression	"zend_compile_init_user_func ( args -> child [ 0 ] , 0 , lcname )"		3929394	0					
ANR	3929420	Callee	zend_compile_init_user_func		3929394	0					
ANR	3929421	Identifier	zend_compile_init_user_func		3929394	0					
ANR	3929422	ArgumentList	args -> child [ 0 ]		3929394	1					
ANR	3929423	Argument	args -> child [ 0 ]		3929394	0					
ANR	3929424	ArrayIndexing	args -> child [ 0 ]		3929394	0					
ANR	3929425	PtrMemberAccess	args -> child		3929394	0					
ANR	3929426	Identifier	args		3929394	0					
ANR	3929427	Identifier	child		3929394	1					
ANR	3929428	PrimaryExpression	0		3929394	1					
ANR	3929429	Argument	0		3929394	1					
ANR	3929430	PrimaryExpression	0		3929394	0					
ANR	3929431	Argument	lcname		3929394	2					
ANR	3929432	Identifier	lcname		3929394	0					
ANR	3929433	ExpressionStatement	"zend_compile_expr ( & arg_node , args -> child [ 1 ] )"	3030:1:87309:87353	3929394	3	True				
ANR	3929434	CallExpression	"zend_compile_expr ( & arg_node , args -> child [ 1 ] )"		3929394	0					
ANR	3929435	Callee	zend_compile_expr		3929394	0					
ANR	3929436	Identifier	zend_compile_expr		3929394	0					
ANR	3929437	ArgumentList	& arg_node		3929394	1					
ANR	3929438	Argument	& arg_node		3929394	0					
ANR	3929439	UnaryOperationExpression	& arg_node		3929394	0					
ANR	3929440	UnaryOperator	&		3929394	0					
ANR	3929441	Identifier	arg_node		3929394	1					
ANR	3929442	Argument	args -> child [ 1 ]		3929394	1					
ANR	3929443	ArrayIndexing	args -> child [ 1 ]		3929394	0					
ANR	3929444	PtrMemberAccess	args -> child		3929394	0					
ANR	3929445	Identifier	args		3929394	0					
ANR	3929446	Identifier	child		3929394	1					
ANR	3929447	PrimaryExpression	1		3929394	1					
ANR	3929448	ExpressionStatement	"zend_emit_op ( NULL , ZEND_SEND_ARRAY , & arg_node , NULL )"	3031:1:87356:87408	3929394	4	True				
ANR	3929449	CallExpression	"zend_emit_op ( NULL , ZEND_SEND_ARRAY , & arg_node , NULL )"		3929394	0					
ANR	3929450	Callee	zend_emit_op		3929394	0					
ANR	3929451	Identifier	zend_emit_op		3929394	0					
ANR	3929452	ArgumentList	NULL		3929394	1					
ANR	3929453	Argument	NULL		3929394	0					
ANR	3929454	Identifier	NULL		3929394	0					
ANR	3929455	Argument	ZEND_SEND_ARRAY		3929394	1					
ANR	3929456	Identifier	ZEND_SEND_ARRAY		3929394	0					
ANR	3929457	Argument	& arg_node		3929394	2					
ANR	3929458	UnaryOperationExpression	& arg_node		3929394	0					
ANR	3929459	UnaryOperator	&		3929394	0					
ANR	3929460	Identifier	arg_node		3929394	1					
ANR	3929461	Argument	NULL		3929394	3					
ANR	3929462	Identifier	NULL		3929394	0					
ANR	3929463	ExpressionStatement	"zend_emit_op ( result , ZEND_DO_FCALL , NULL , NULL )"	3032:1:87411:87458	3929394	5	True				
ANR	3929464	CallExpression	"zend_emit_op ( result , ZEND_DO_FCALL , NULL , NULL )"		3929394	0					
ANR	3929465	Callee	zend_emit_op		3929394	0					
ANR	3929466	Identifier	zend_emit_op		3929394	0					
ANR	3929467	ArgumentList	result		3929394	1					
ANR	3929468	Argument	result		3929394	0					
ANR	3929469	Identifier	result		3929394	0					
ANR	3929470	Argument	ZEND_DO_FCALL		3929394	1					
ANR	3929471	Identifier	ZEND_DO_FCALL		3929394	0					
ANR	3929472	Argument	NULL		3929394	2					
ANR	3929473	Identifier	NULL		3929394	0					
ANR	3929474	Argument	NULL		3929394	3					
ANR	3929475	Identifier	NULL		3929394	0					
ANR	3929476	ReturnStatement	return SUCCESS ;	3034:1:87462:87476	3929394	6	True				
ANR	3929477	Identifier	SUCCESS		3929394	0					
ANR	3929478	ReturnType	int		3929394	1					
ANR	3929479	Identifier	zend_compile_func_cufa		3929394	2					
ANR	3929480	ParameterList	"znode * result , zend_ast_list * args , zend_string * lcname"		3929394	3					
ANR	3929481	Parameter	znode * result	3021:27:87080:87092	3929394	0	True				
ANR	3929482	ParameterType	znode *		3929394	0					
ANR	3929483	Identifier	result		3929394	1					
ANR	3929484	Parameter	zend_ast_list * args	3021:42:87095:87113	3929394	1	True				
ANR	3929485	ParameterType	zend_ast_list *		3929394	0					
ANR	3929486	Identifier	args		3929394	1					
ANR	3929487	Parameter	zend_string * lcname	3021:63:87116:87134	3929394	2	True				
ANR	3929488	ParameterType	zend_string *		3929394	0					
ANR	3929489	Identifier	lcname		3929394	1					
ANR	3929490	CFGEntryNode	ENTRY		3929394		True				
ANR	3929491	CFGExitNode	EXIT		3929394		True				
ANR	3929492	Symbol	ZEND_SEND_ARRAY		3929394						
ANR	3929493	Symbol	arg_node		3929394						
ANR	3929494	Symbol	NULL		3929394						
ANR	3929495	Symbol	SUCCESS		3929394						
ANR	3929496	Symbol	* args -> child		3929394						
ANR	3929497	Symbol	FAILURE		3929394						
ANR	3929498	Symbol	* args		3929394						
ANR	3929499	Symbol	result		3929394						
ANR	3929500	Symbol	args		3929394						
ANR	3929501	Symbol	zend_args_contain_unpack		3929394						
ANR	3929502	Symbol	lcname		3929394						
ANR	3929503	Symbol	ZEND_DO_FCALL		3929394						
ANR	3929504	Symbol	args -> child		3929394						
ANR	3929505	Symbol	args -> children		3929394						
ANR	3929506	Symbol	& arg_node		3929394						
ANR	3929507	Symbol	* * args		3929394						
ANR	3929508	Function	zend_compile_func_cuf	3039:0:87518:88542							
ANR	3929509	FunctionDef	"zend_compile_func_cuf (znode * result , zend_ast_list * args , zend_string * lcname)"		3929508	0					
ANR	3929510	CompoundStatement		3040:0:87611:88542	3929508	0					
ANR	3929511	IdentifierDeclStatement	uint32_t i ;	3041:1:87614:87624	3929508	0	True				
ANR	3929512	IdentifierDecl	i		3929508	0					
ANR	3929513	IdentifierDeclType	uint32_t		3929508	0					
ANR	3929514	Identifier	i		3929508	1					
ANR	3929515	IfStatement	if ( args -> children < 1 || zend_args_contain_unpack ( args ) )		3929508	1					
ANR	3929516	Condition	args -> children < 1 || zend_args_contain_unpack ( args )	3043:5:87632:87683	3929508	0	True				
ANR	3929517	OrExpression	args -> children < 1 || zend_args_contain_unpack ( args )		3929508	0		||			
ANR	3929518	RelationalExpression	args -> children < 1		3929508	0		<			
ANR	3929519	PtrMemberAccess	args -> children		3929508	0					
ANR	3929520	Identifier	args		3929508	0					
ANR	3929521	Identifier	children		3929508	1					
ANR	3929522	PrimaryExpression	1		3929508	1					
ANR	3929523	CallExpression	zend_args_contain_unpack ( args )		3929508	1					
ANR	3929524	Callee	zend_args_contain_unpack		3929508	0					
ANR	3929525	Identifier	zend_args_contain_unpack		3929508	0					
ANR	3929526	ArgumentList	args		3929508	1					
ANR	3929527	Argument	args		3929508	0					
ANR	3929528	Identifier	args		3929508	0					
ANR	3929529	CompoundStatement		4:59:74:74	3929508	1					
ANR	3929530	ReturnStatement	return FAILURE ;	3044:2:87690:87704	3929508	0	True				
ANR	3929531	Identifier	FAILURE		3929508	0					
ANR	3929532	ExpressionStatement	"zend_compile_init_user_func ( args -> child [ 0 ] , args -> children - 1 , lcname )"	3047:1:87711:87782	3929508	2	True				
ANR	3929533	CallExpression	"zend_compile_init_user_func ( args -> child [ 0 ] , args -> children - 1 , lcname )"		3929508	0					
ANR	3929534	Callee	zend_compile_init_user_func		3929508	0					
ANR	3929535	Identifier	zend_compile_init_user_func		3929508	0					
ANR	3929536	ArgumentList	args -> child [ 0 ]		3929508	1					
ANR	3929537	Argument	args -> child [ 0 ]		3929508	0					
ANR	3929538	ArrayIndexing	args -> child [ 0 ]		3929508	0					
ANR	3929539	PtrMemberAccess	args -> child		3929508	0					
ANR	3929540	Identifier	args		3929508	0					
ANR	3929541	Identifier	child		3929508	1					
ANR	3929542	PrimaryExpression	0		3929508	1					
ANR	3929543	Argument	args -> children - 1		3929508	1					
ANR	3929544	AdditiveExpression	args -> children - 1		3929508	0		-			
ANR	3929545	PtrMemberAccess	args -> children		3929508	0					
ANR	3929546	Identifier	args		3929508	0					
ANR	3929547	Identifier	children		3929508	1					
ANR	3929548	PrimaryExpression	1		3929508	1					
ANR	3929549	Argument	lcname		3929508	2					
ANR	3929550	Identifier	lcname		3929508	0					
ANR	3929551	ForStatement	for ( i = 1 ; i < args -> children ; ++ i )		3929508	3					
ANR	3929552	ForInit	i = 1 ;	3048:6:87790:87795	3929508	0	True				
ANR	3929553	AssignmentExpression	i = 1		3929508	0		=			
ANR	3929554	Identifier	i		3929508	0					
ANR	3929555	PrimaryExpression	1		3929508	1					
ANR	3929556	Condition	i < args -> children	3048:13:87797:87814	3929508	1	True				
ANR	3929557	RelationalExpression	i < args -> children		3929508	0		<			
ANR	3929558	Identifier	i		3929508	0					
ANR	3929559	PtrMemberAccess	args -> children		3929508	1					
ANR	3929560	Identifier	args		3929508	0					
ANR	3929561	Identifier	children		3929508	1					
ANR	3929562	UnaryExpression	++ i	3048:33:87817:87819	3929508	2	True				
ANR	3929563	IncDec	++		3929508	0					
ANR	3929564	Identifier	i		3929508	1					
ANR	3929565	CompoundStatement		13:2:289:312	3929508	3					
ANR	3929566	IdentifierDeclStatement	zend_ast * arg_ast = args -> child [ i ] ;	3049:2:87826:87860	3929508	0	True				
ANR	3929567	IdentifierDecl	* arg_ast = args -> child [ i ]		3929508	0					
ANR	3929568	IdentifierDeclType	zend_ast *		3929508	0					
ANR	3929569	Identifier	arg_ast		3929508	1					
ANR	3929570	AssignmentExpression	* arg_ast = args -> child [ i ]		3929508	2		=			
ANR	3929571	Identifier	arg_ast		3929508	0					
ANR	3929572	ArrayIndexing	args -> child [ i ]		3929508	1					
ANR	3929573	PtrMemberAccess	args -> child		3929508	0					
ANR	3929574	Identifier	args		3929508	0					
ANR	3929575	Identifier	child		3929508	1					
ANR	3929576	Identifier	i		3929508	1					
ANR	3929577	IdentifierDeclStatement	znode arg_node ;	3050:2:87864:87878	3929508	1	True				
ANR	3929578	IdentifierDecl	arg_node		3929508	0					
ANR	3929579	IdentifierDeclType	znode		3929508	0					
ANR	3929580	Identifier	arg_node		3929508	1					
ANR	3929581	IdentifierDeclStatement	zend_op * opline ;	3051:2:87882:87897	3929508	2	True				
ANR	3929582	IdentifierDecl	* opline		3929508	0					
ANR	3929583	IdentifierDeclType	zend_op *		3929508	0					
ANR	3929584	Identifier	opline		3929508	1					
ANR	3929585	IdentifierDeclStatement	zend_bool send_user = 0 ;	3052:2:87901:87924	3929508	3	True				
ANR	3929586	IdentifierDecl	send_user = 0		3929508	0					
ANR	3929587	IdentifierDeclType	zend_bool		3929508	0					
ANR	3929588	Identifier	send_user		3929508	1					
ANR	3929589	AssignmentExpression	send_user = 0		3929508	2		=			
ANR	3929590	Identifier	send_user		3929508	0					
ANR	3929591	PrimaryExpression	0		3929508	1					
ANR	3929592	IfStatement	if ( zend_is_variable ( arg_ast ) && ! zend_is_call ( arg_ast ) )		3929508	4					
ANR	3929593	Condition	zend_is_variable ( arg_ast ) && ! zend_is_call ( arg_ast )	3054:6:87933:87983	3929508	0	True				
ANR	3929594	AndExpression	zend_is_variable ( arg_ast ) && ! zend_is_call ( arg_ast )		3929508	0		&&			
ANR	3929595	CallExpression	zend_is_variable ( arg_ast )		3929508	0					
ANR	3929596	Callee	zend_is_variable		3929508	0					
ANR	3929597	Identifier	zend_is_variable		3929508	0					
ANR	3929598	ArgumentList	arg_ast		3929508	1					
ANR	3929599	Argument	arg_ast		3929508	0					
ANR	3929600	Identifier	arg_ast		3929508	0					
ANR	3929601	UnaryOperationExpression	! zend_is_call ( arg_ast )		3929508	1					
ANR	3929602	UnaryOperator	!		3929508	0					
ANR	3929603	CallExpression	zend_is_call ( arg_ast )		3929508	1					
ANR	3929604	Callee	zend_is_call		3929508	0					
ANR	3929605	Identifier	zend_is_call		3929508	0					
ANR	3929606	ArgumentList	arg_ast		3929508	1					
ANR	3929607	Argument	arg_ast		3929508	0					
ANR	3929608	Identifier	arg_ast		3929508	0					
ANR	3929609	CompoundStatement		15:59:374:374	3929508	1					
ANR	3929610	ExpressionStatement	"zend_compile_var ( & arg_node , arg_ast , BP_VAR_FUNC_ARG | ( i << BP_VAR_SHIFT ) )"	3055:3:87991:88066	3929508	0	True				
ANR	3929611	CallExpression	"zend_compile_var ( & arg_node , arg_ast , BP_VAR_FUNC_ARG | ( i << BP_VAR_SHIFT ) )"		3929508	0					
ANR	3929612	Callee	zend_compile_var		3929508	0					
ANR	3929613	Identifier	zend_compile_var		3929508	0					
ANR	3929614	ArgumentList	& arg_node		3929508	1					
ANR	3929615	Argument	& arg_node		3929508	0					
ANR	3929616	UnaryOperationExpression	& arg_node		3929508	0					
ANR	3929617	UnaryOperator	&		3929508	0					
ANR	3929618	Identifier	arg_node		3929508	1					
ANR	3929619	Argument	arg_ast		3929508	1					
ANR	3929620	Identifier	arg_ast		3929508	0					
ANR	3929621	Argument	BP_VAR_FUNC_ARG | ( i << BP_VAR_SHIFT )		3929508	2					
ANR	3929622	InclusiveOrExpression	BP_VAR_FUNC_ARG | ( i << BP_VAR_SHIFT )		3929508	0		|			
ANR	3929623	Identifier	BP_VAR_FUNC_ARG		3929508	0					
ANR	3929624	ShiftExpression	i << BP_VAR_SHIFT		3929508	1		<<			
ANR	3929625	Identifier	i		3929508	0					
ANR	3929626	Identifier	BP_VAR_SHIFT		3929508	1					
ANR	3929627	ExpressionStatement	send_user = 1	3056:3:88071:88084	3929508	1	True				
ANR	3929628	AssignmentExpression	send_user = 1		3929508	0		=			
ANR	3929629	Identifier	send_user		3929508	0					
ANR	3929630	PrimaryExpression	1		3929508	1					
ANR	3929631	ElseStatement	else		3929508	0					
ANR	3929632	CompoundStatement		18:9:483:483	3929508	0					
ANR	3929633	ExpressionStatement	"zend_compile_expr ( & arg_node , arg_ast )"	3058:3:88100:88137	3929508	0	True				
ANR	3929634	CallExpression	"zend_compile_expr ( & arg_node , arg_ast )"		3929508	0					
ANR	3929635	Callee	zend_compile_expr		3929508	0					
ANR	3929636	Identifier	zend_compile_expr		3929508	0					
ANR	3929637	ArgumentList	& arg_node		3929508	1					
ANR	3929638	Argument	& arg_node		3929508	0					
ANR	3929639	UnaryOperationExpression	& arg_node		3929508	0					
ANR	3929640	UnaryOperator	&		3929508	0					
ANR	3929641	Identifier	arg_node		3929508	1					
ANR	3929642	Argument	arg_ast		3929508	1					
ANR	3929643	Identifier	arg_ast		3929508	0					
ANR	3929644	IfStatement	if ( arg_node . op_type & ( IS_VAR | IS_CV ) )		3929508	1					
ANR	3929645	Condition	arg_node . op_type & ( IS_VAR | IS_CV )	3059:7:88146:88178	3929508	0	True				
ANR	3929646	BitAndExpression	arg_node . op_type & ( IS_VAR | IS_CV )		3929508	0		&			
ANR	3929647	MemberAccess	arg_node . op_type		3929508	0					
ANR	3929648	Identifier	arg_node		3929508	0					
ANR	3929649	Identifier	op_type		3929508	1					
ANR	3929650	InclusiveOrExpression	IS_VAR | IS_CV		3929508	1		|			
ANR	3929651	Identifier	IS_VAR		3929508	0					
ANR	3929652	Identifier	IS_CV		3929508	1					
ANR	3929653	CompoundStatement		20:42:569:569	3929508	1					
ANR	3929654	ExpressionStatement	send_user = 1	3060:4:88187:88200	3929508	0	True				
ANR	3929655	AssignmentExpression	send_user = 1		3929508	0		=			
ANR	3929656	Identifier	send_user		3929508	0					
ANR	3929657	PrimaryExpression	1		3929508	1					
ANR	3929658	IfStatement	if ( send_user )		3929508	5					
ANR	3929659	Condition	send_user	3064:6:88218:88226	3929508	0	True				
ANR	3929660	Identifier	send_user		3929508	0					
ANR	3929661	CompoundStatement		25:17:617:617	3929508	1					
ANR	3929662	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_SEND_USER , & arg_node , NULL )"	3065:3:88234:88294	3929508	0	True				
ANR	3929663	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_SEND_USER , & arg_node , NULL )"		3929508	0		=			
ANR	3929664	Identifier	opline		3929508	0					
ANR	3929665	CallExpression	"zend_emit_op ( NULL , ZEND_SEND_USER , & arg_node , NULL )"		3929508	1					
ANR	3929666	Callee	zend_emit_op		3929508	0					
ANR	3929667	Identifier	zend_emit_op		3929508	0					
ANR	3929668	ArgumentList	NULL		3929508	1					
ANR	3929669	Argument	NULL		3929508	0					
ANR	3929670	Identifier	NULL		3929508	0					
ANR	3929671	Argument	ZEND_SEND_USER		3929508	1					
ANR	3929672	Identifier	ZEND_SEND_USER		3929508	0					
ANR	3929673	Argument	& arg_node		3929508	2					
ANR	3929674	UnaryOperationExpression	& arg_node		3929508	0					
ANR	3929675	UnaryOperator	&		3929508	0					
ANR	3929676	Identifier	arg_node		3929508	1					
ANR	3929677	Argument	NULL		3929508	3					
ANR	3929678	Identifier	NULL		3929508	0					
ANR	3929679	ElseStatement	else		3929508	0					
ANR	3929680	CompoundStatement		27:9:693:693	3929508	0					
ANR	3929681	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_SEND_VAL , & arg_node , NULL )"	3067:3:88310:88369	3929508	0	True				
ANR	3929682	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_SEND_VAL , & arg_node , NULL )"		3929508	0		=			
ANR	3929683	Identifier	opline		3929508	0					
ANR	3929684	CallExpression	"zend_emit_op ( NULL , ZEND_SEND_VAL , & arg_node , NULL )"		3929508	1					
ANR	3929685	Callee	zend_emit_op		3929508	0					
ANR	3929686	Identifier	zend_emit_op		3929508	0					
ANR	3929687	ArgumentList	NULL		3929508	1					
ANR	3929688	Argument	NULL		3929508	0					
ANR	3929689	Identifier	NULL		3929508	0					
ANR	3929690	Argument	ZEND_SEND_VAL		3929508	1					
ANR	3929691	Identifier	ZEND_SEND_VAL		3929508	0					
ANR	3929692	Argument	& arg_node		3929508	2					
ANR	3929693	UnaryOperationExpression	& arg_node		3929508	0					
ANR	3929694	UnaryOperator	&		3929508	0					
ANR	3929695	Identifier	arg_node		3929508	1					
ANR	3929696	Argument	NULL		3929508	3					
ANR	3929697	Identifier	NULL		3929508	0					
ANR	3929698	ExpressionStatement	opline -> op2 . num = i	3070:2:88378:88397	3929508	6	True				
ANR	3929699	AssignmentExpression	opline -> op2 . num = i		3929508	0		=			
ANR	3929700	MemberAccess	opline -> op2 . num		3929508	0					
ANR	3929701	PtrMemberAccess	opline -> op2		3929508	0					
ANR	3929702	Identifier	opline		3929508	0					
ANR	3929703	Identifier	op2		3929508	1					
ANR	3929704	Identifier	num		3929508	1					
ANR	3929705	Identifier	i		3929508	1					
ANR	3929706	ExpressionStatement	"opline -> result . var = ( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , i )"	3071:2:88401:88469	3929508	7	True				
ANR	3929707	AssignmentExpression	"opline -> result . var = ( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , i )"		3929508	0		=			
ANR	3929708	MemberAccess	opline -> result . var		3929508	0					
ANR	3929709	PtrMemberAccess	opline -> result		3929508	0					
ANR	3929710	Identifier	opline		3929508	0					
ANR	3929711	Identifier	result		3929508	1					
ANR	3929712	Identifier	var		3929508	1					
ANR	3929713	CastExpression	"( uint32_t ) ( zend_intptr_t ) ZEND_CALL_ARG ( NULL , i )"		3929508	1					
ANR	3929714	CastTarget	uint32_t		3929508	0					
ANR	3929715	CastExpression	"( zend_intptr_t ) ZEND_CALL_ARG ( NULL , i )"		3929508	1					
ANR	3929716	CastTarget	zend_intptr_t		3929508	0					
ANR	3929717	CallExpression	"ZEND_CALL_ARG ( NULL , i )"		3929508	1					
ANR	3929718	Callee	ZEND_CALL_ARG		3929508	0					
ANR	3929719	Identifier	ZEND_CALL_ARG		3929508	0					
ANR	3929720	ArgumentList	NULL		3929508	1					
ANR	3929721	Argument	NULL		3929508	0					
ANR	3929722	Identifier	NULL		3929508	0					
ANR	3929723	Argument	i		3929508	1					
ANR	3929724	Identifier	i		3929508	0					
ANR	3929725	ExpressionStatement	"zend_emit_op ( result , ZEND_DO_FCALL , NULL , NULL )"	3073:1:88475:88522	3929508	4	True				
ANR	3929726	CallExpression	"zend_emit_op ( result , ZEND_DO_FCALL , NULL , NULL )"		3929508	0					
ANR	3929727	Callee	zend_emit_op		3929508	0					
ANR	3929728	Identifier	zend_emit_op		3929508	0					
ANR	3929729	ArgumentList	result		3929508	1					
ANR	3929730	Argument	result		3929508	0					
ANR	3929731	Identifier	result		3929508	0					
ANR	3929732	Argument	ZEND_DO_FCALL		3929508	1					
ANR	3929733	Identifier	ZEND_DO_FCALL		3929508	0					
ANR	3929734	Argument	NULL		3929508	2					
ANR	3929735	Identifier	NULL		3929508	0					
ANR	3929736	Argument	NULL		3929508	3					
ANR	3929737	Identifier	NULL		3929508	0					
ANR	3929738	ReturnStatement	return SUCCESS ;	3075:1:88526:88540	3929508	5	True				
ANR	3929739	Identifier	SUCCESS		3929508	0					
ANR	3929740	ReturnType	int		3929508	1					
ANR	3929741	Identifier	zend_compile_func_cuf		3929508	2					
ANR	3929742	ParameterList	"znode * result , zend_ast_list * args , zend_string * lcname"		3929508	3					
ANR	3929743	Parameter	znode * result	3039:26:87544:87556	3929508	0	True				
ANR	3929744	ParameterType	znode *		3929508	0					
ANR	3929745	Identifier	result		3929508	1					
ANR	3929746	Parameter	zend_ast_list * args	3039:41:87559:87577	3929508	1	True				
ANR	3929747	ParameterType	zend_ast_list *		3929508	0					
ANR	3929748	Identifier	args		3929508	1					
ANR	3929749	Parameter	zend_string * lcname	3039:62:87580:87598	3929508	2	True				
ANR	3929750	ParameterType	zend_string *		3929508	0					
ANR	3929751	Identifier	lcname		3929508	1					
ANR	3929752	CFGEntryNode	ENTRY		3929508		True				
ANR	3929753	CFGExitNode	EXIT		3929508		True				
ANR	3929754	Symbol	opline -> op2		3929508						
ANR	3929755	Symbol	arg_node		3929508						
ANR	3929756	Symbol	IS_CV		3929508						
ANR	3929757	Symbol	arg_ast		3929508						
ANR	3929758	Symbol	BP_VAR_SHIFT		3929508						
ANR	3929759	Symbol	* args -> child		3929508						
ANR	3929760	Symbol	ZEND_CALL_ARG		3929508						
ANR	3929761	Symbol	opline -> result		3929508						
ANR	3929762	Symbol	* args		3929508						
ANR	3929763	Symbol	result		3929508						
ANR	3929764	Symbol	opline		3929508						
ANR	3929765	Symbol	arg_node . op_type		3929508						
ANR	3929766	Symbol	ZEND_SEND_USER		3929508						
ANR	3929767	Symbol	* * args		3929508						
ANR	3929768	Symbol	BP_VAR_FUNC_ARG		3929508						
ANR	3929769	Symbol	opline -> op2 . num		3929508						
ANR	3929770	Symbol	zend_is_variable		3929508						
ANR	3929771	Symbol	NULL		3929508						
ANR	3929772	Symbol	SUCCESS		3929508						
ANR	3929773	Symbol	zend_is_call		3929508						
ANR	3929774	Symbol	i		3929508						
ANR	3929775	Symbol	FAILURE		3929508						
ANR	3929776	Symbol	args		3929508						
ANR	3929777	Symbol	zend_args_contain_unpack		3929508						
ANR	3929778	Symbol	lcname		3929508						
ANR	3929779	Symbol	* i		3929508						
ANR	3929780	Symbol	ZEND_SEND_VAL		3929508						
ANR	3929781	Symbol	* opline		3929508						
ANR	3929782	Symbol	ZEND_DO_FCALL		3929508						
ANR	3929783	Symbol	args -> child		3929508						
ANR	3929784	Symbol	args -> children		3929508						
ANR	3929785	Symbol	send_user		3929508						
ANR	3929786	Symbol	& arg_node		3929508						
ANR	3929787	Symbol	IS_VAR		3929508						
ANR	3929788	Symbol	opline -> result . var		3929508						
ANR	3929789	Symbol	zend_emit_op		3929508						
ANR	3929790	Function	zend_compile_assert_side_effects	3079:0:88555:89074							
ANR	3929791	FunctionDef	zend_compile_assert_side_effects (zend_ast * ast)		3929790	0					
ANR	3929792	CompoundStatement		3080:0:88625:89074	3929790	0					
ANR	3929793	IdentifierDeclStatement	int i ;	3081:1:88628:88633	3929790	0	True				
ANR	3929794	IdentifierDecl	i		3929790	0					
ANR	3929795	IdentifierDeclType	int		3929790	0					
ANR	3929796	Identifier	i		3929790	1					
ANR	3929797	IdentifierDeclStatement	int children = zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> children : zend_ast_get_num_children ( ast ) ;	3082:1:88636:88740	3929790	1	True				
ANR	3929798	IdentifierDecl	children = zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> children : zend_ast_get_num_children ( ast )		3929790	0					
ANR	3929799	IdentifierDeclType	int		3929790	0					
ANR	3929800	Identifier	children		3929790	1					
ANR	3929801	AssignmentExpression	children = zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> children : zend_ast_get_num_children ( ast )		3929790	2		=			
ANR	3929802	Identifier	children		3929790	0					
ANR	3929803	ConditionalExpression	zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> children : zend_ast_get_num_children ( ast )		3929790	1					
ANR	3929804	Condition	zend_ast_is_list ( ast )		3929790	0					
ANR	3929805	CallExpression	zend_ast_is_list ( ast )		3929790	0					
ANR	3929806	Callee	zend_ast_is_list		3929790	0					
ANR	3929807	Identifier	zend_ast_is_list		3929790	0					
ANR	3929808	ArgumentList	ast		3929790	1					
ANR	3929809	Argument	ast		3929790	0					
ANR	3929810	Identifier	ast		3929790	0					
ANR	3929811	PtrMemberAccess	zend_ast_get_list ( ast ) -> children		3929790	1					
ANR	3929812	CallExpression	zend_ast_get_list ( ast )		3929790	0					
ANR	3929813	Callee	zend_ast_get_list		3929790	0					
ANR	3929814	Identifier	zend_ast_get_list		3929790	0					
ANR	3929815	ArgumentList	ast		3929790	1					
ANR	3929816	Argument	ast		3929790	0					
ANR	3929817	Identifier	ast		3929790	0					
ANR	3929818	Identifier	children		3929790	1					
ANR	3929819	CallExpression	zend_ast_get_num_children ( ast )		3929790	2					
ANR	3929820	Callee	zend_ast_get_num_children		3929790	0					
ANR	3929821	Identifier	zend_ast_get_num_children		3929790	0					
ANR	3929822	ArgumentList	ast		3929790	1					
ANR	3929823	Argument	ast		3929790	0					
ANR	3929824	Identifier	ast		3929790	0					
ANR	3929825	ForStatement	for ( i = 0 ; i < children ; i ++ )		3929790	2					
ANR	3929826	ForInit	i = 0 ;	3084:6:88749:88754	3929790	0	True				
ANR	3929827	AssignmentExpression	i = 0		3929790	0		=			
ANR	3929828	Identifier	i		3929790	0					
ANR	3929829	PrimaryExpression	0		3929790	1					
ANR	3929830	Condition	i < children	3084:13:88756:88767	3929790	1	True				
ANR	3929831	RelationalExpression	i < children		3929790	0		<			
ANR	3929832	Identifier	i		3929790	0					
ANR	3929833	Identifier	children		3929790	1					
ANR	3929834	PostIncDecOperationExpression	i ++	3084:27:88770:88772	3929790	2	True				
ANR	3929835	Identifier	i		3929790	0					
ANR	3929836	IncDec	++		3929790	1					
ANR	3929837	CompoundStatement		6:2:153:242	3929790	3					
ANR	3929838	IdentifierDeclStatement	zend_ast * child = ( zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> child : ast -> child ) [ i ] ;	3085:2:88779:88868	3929790	0	True				
ANR	3929839	IdentifierDecl	* child = ( zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> child : ast -> child ) [ i ]		3929790	0					
ANR	3929840	IdentifierDeclType	zend_ast *		3929790	0					
ANR	3929841	Identifier	child		3929790	1					
ANR	3929842	AssignmentExpression	* child = ( zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> child : ast -> child ) [ i ]		3929790	2		=			
ANR	3929843	Identifier	child		3929790	0					
ANR	3929844	ArrayIndexing	( zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> child : ast -> child ) [ i ]		3929790	1					
ANR	3929845	ConditionalExpression	zend_ast_is_list ( ast ) ? zend_ast_get_list ( ast ) -> child : ast -> child		3929790	0					
ANR	3929846	Condition	zend_ast_is_list ( ast )		3929790	0					
ANR	3929847	CallExpression	zend_ast_is_list ( ast )		3929790	0					
ANR	3929848	Callee	zend_ast_is_list		3929790	0					
ANR	3929849	Identifier	zend_ast_is_list		3929790	0					
ANR	3929850	ArgumentList	ast		3929790	1					
ANR	3929851	Argument	ast		3929790	0					
ANR	3929852	Identifier	ast		3929790	0					
ANR	3929853	PtrMemberAccess	zend_ast_get_list ( ast ) -> child		3929790	1					
ANR	3929854	CallExpression	zend_ast_get_list ( ast )		3929790	0					
ANR	3929855	Callee	zend_ast_get_list		3929790	0					
ANR	3929856	Identifier	zend_ast_get_list		3929790	0					
ANR	3929857	ArgumentList	ast		3929790	1					
ANR	3929858	Argument	ast		3929790	0					
ANR	3929859	Identifier	ast		3929790	0					
ANR	3929860	Identifier	child		3929790	1					
ANR	3929861	PtrMemberAccess	ast -> child		3929790	2					
ANR	3929862	Identifier	ast		3929790	0					
ANR	3929863	Identifier	child		3929790	1					
ANR	3929864	Identifier	i		3929790	1					
ANR	3929865	IfStatement	if ( child )		3929790	1					
ANR	3929866	Condition	child	3086:6:88876:88880	3929790	0	True				
ANR	3929867	Identifier	child		3929790	0					
ANR	3929868	CompoundStatement		7:13:257:257	3929790	1					
ANR	3929869	IfStatement	if ( child -> kind == ZEND_AST_YIELD )		3929790	0					
ANR	3929870	Condition	child -> kind == ZEND_AST_YIELD	3087:7:88892:88920	3929790	0	True				
ANR	3929871	EqualityExpression	child -> kind == ZEND_AST_YIELD		3929790	0		==			
ANR	3929872	PtrMemberAccess	child -> kind		3929790	0					
ANR	3929873	Identifier	child		3929790	0					
ANR	3929874	Identifier	kind		3929790	1					
ANR	3929875	Identifier	ZEND_AST_YIELD		3929790	1					
ANR	3929876	CompoundStatement		8:38:297:297	3929790	1					
ANR	3929877	ExpressionStatement	zend_mark_function_as_generator ( )	3088:4:88929:88962	3929790	0	True				
ANR	3929878	CallExpression	zend_mark_function_as_generator ( )		3929790	0					
ANR	3929879	Callee	zend_mark_function_as_generator		3929790	0					
ANR	3929880	Identifier	zend_mark_function_as_generator		3929790	0					
ANR	3929881	ArgumentList			3929790	1					
ANR	3929882	ElseStatement	else		3929790	0					
ANR	3929883	IfStatement	if ( ast -> kind >= ZEND_AST_IS_LIST_SHIFT )		3929790	0					
ANR	3929884	Condition	ast -> kind >= ZEND_AST_IS_LIST_SHIFT	3089:14:88978:89012	3929790	0	True				
ANR	3929885	RelationalExpression	ast -> kind >= ZEND_AST_IS_LIST_SHIFT		3929790	0		>=			
ANR	3929886	PtrMemberAccess	ast -> kind		3929790	0					
ANR	3929887	Identifier	ast		3929790	0					
ANR	3929888	Identifier	kind		3929790	1					
ANR	3929889	Identifier	ZEND_AST_IS_LIST_SHIFT		3929790	1					
ANR	3929890	CompoundStatement		10:51:389:389	3929790	1					
ANR	3929891	ExpressionStatement	zend_compile_assert_side_effects ( child )	3090:4:89021:89060	3929790	0	True				
ANR	3929892	CallExpression	zend_compile_assert_side_effects ( child )		3929790	0					
ANR	3929893	Callee	zend_compile_assert_side_effects		3929790	0					
ANR	3929894	Identifier	zend_compile_assert_side_effects		3929790	0					
ANR	3929895	ArgumentList	child		3929790	1					
ANR	3929896	Argument	child		3929790	0					
ANR	3929897	Identifier	child		3929790	0					
ANR	3929898	ReturnType	static void		3929790	1					
ANR	3929899	Identifier	zend_compile_assert_side_effects		3929790	2					
ANR	3929900	ParameterList	zend_ast * ast		3929790	3					
ANR	3929901	Parameter	zend_ast * ast	3079:45:88600:88612	3929790	0	True				
ANR	3929902	ParameterType	zend_ast *		3929790	0					
ANR	3929903	Identifier	ast		3929790	1					
ANR	3929904	CFGEntryNode	ENTRY		3929790		True				
ANR	3929905	CFGExitNode	EXIT		3929790		True				
ANR	3929906	Symbol	* child		3929790						
ANR	3929907	Symbol	ast -> kind		3929790						
ANR	3929908	Symbol	ast		3929790						
ANR	3929909	Symbol	zend_ast_get_list ( ast ) -> children		3929790						
ANR	3929910	Symbol	* * zend_ast_get_list		3929790						
ANR	3929911	Symbol	* zend_ast_get_list ( ast ) -> child		3929790						
ANR	3929912	Symbol	child -> kind		3929790						
ANR	3929913	Symbol	i		3929790						
ANR	3929914	Symbol	zend_ast_get_list ( ast ) -> child		3929790						
ANR	3929915	Symbol	* zend_ast_get_list		3929790						
ANR	3929916	Symbol	ZEND_AST_YIELD		3929790						
ANR	3929917	Symbol	zend_ast_get_list		3929790						
ANR	3929918	Symbol	* i		3929790						
ANR	3929919	Symbol	* ast		3929790						
ANR	3929920	Symbol	zend_ast_is_list		3929790						
ANR	3929921	Symbol	children		3929790						
ANR	3929922	Symbol	* * ast		3929790						
ANR	3929923	Symbol	ZEND_AST_IS_LIST_SHIFT		3929790						
ANR	3929924	Symbol	* zend_ast_is_list		3929790						
ANR	3929925	Symbol	* ast -> child		3929790						
ANR	3929926	Symbol	ast -> child		3929790						
ANR	3929927	Symbol	zend_ast_get_num_children		3929790						
ANR	3929928	Symbol	child		3929790						
ANR	3929929	Function	zend_compile_assert	3097:0:89087:90509							
ANR	3929930	FunctionDef	"zend_compile_assert (znode * result , zend_ast_list * args , zend_string * name , zend_function * fbc)"		3929929	0					
ANR	3929931	CompoundStatement		3098:0:89203:90509	3929929	0					
ANR	3929932	IfStatement	if ( EG ( assertions ) >= 0 )		3929929	0					
ANR	3929933	Condition	EG ( assertions ) >= 0	3099:5:89210:89228	3929929	0	True				
ANR	3929934	RelationalExpression	EG ( assertions ) >= 0		3929929	0		>=			
ANR	3929935	CallExpression	EG ( assertions )		3929929	0					
ANR	3929936	Callee	EG		3929929	0					
ANR	3929937	Identifier	EG		3929929	0					
ANR	3929938	ArgumentList	assertions		3929929	1					
ANR	3929939	Argument	assertions		3929929	0					
ANR	3929940	Identifier	assertions		3929929	0					
ANR	3929941	PrimaryExpression	0		3929929	1					
ANR	3929942	CompoundStatement		5:2:69:135	3929929	1					
ANR	3929943	IdentifierDeclStatement	znode name_node ;	3100:2:89235:89250	3929929	0	True				
ANR	3929944	IdentifierDecl	name_node		3929929	0					
ANR	3929945	IdentifierDeclType	znode		3929929	0					
ANR	3929946	Identifier	name_node		3929929	1					
ANR	3929947	IdentifierDeclStatement	zend_op * opline ;	3101:2:89254:89269	3929929	1	True				
ANR	3929948	IdentifierDecl	* opline		3929929	0					
ANR	3929949	IdentifierDeclType	zend_op *		3929929	0					
ANR	3929950	Identifier	opline		3929929	1					
ANR	3929951	IdentifierDeclStatement	uint32_t check_op_number = get_next_op_number ( CG ( active_op_array ) ) ;	3102:2:89273:89339	3929929	2	True				
ANR	3929952	IdentifierDecl	check_op_number = get_next_op_number ( CG ( active_op_array ) )		3929929	0					
ANR	3929953	IdentifierDeclType	uint32_t		3929929	0					
ANR	3929954	Identifier	check_op_number		3929929	1					
ANR	3929955	AssignmentExpression	check_op_number = get_next_op_number ( CG ( active_op_array ) )		3929929	2		=			
ANR	3929956	Identifier	check_op_number		3929929	0					
ANR	3929957	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3929929	1					
ANR	3929958	Callee	get_next_op_number		3929929	0					
ANR	3929959	Identifier	get_next_op_number		3929929	0					
ANR	3929960	ArgumentList	CG ( active_op_array )		3929929	1					
ANR	3929961	Argument	CG ( active_op_array )		3929929	0					
ANR	3929962	CallExpression	CG ( active_op_array )		3929929	0					
ANR	3929963	Callee	CG		3929929	0					
ANR	3929964	Identifier	CG		3929929	0					
ANR	3929965	ArgumentList	active_op_array		3929929	1					
ANR	3929966	Argument	active_op_array		3929929	0					
ANR	3929967	Identifier	active_op_array		3929929	0					
ANR	3929968	ExpressionStatement	"zend_emit_op ( NULL , ZEND_ASSERT_CHECK , NULL , NULL )"	3104:2:89344:89393	3929929	3	True				
ANR	3929969	CallExpression	"zend_emit_op ( NULL , ZEND_ASSERT_CHECK , NULL , NULL )"		3929929	0					
ANR	3929970	Callee	zend_emit_op		3929929	0					
ANR	3929971	Identifier	zend_emit_op		3929929	0					
ANR	3929972	ArgumentList	NULL		3929929	1					
ANR	3929973	Argument	NULL		3929929	0					
ANR	3929974	Identifier	NULL		3929929	0					
ANR	3929975	Argument	ZEND_ASSERT_CHECK		3929929	1					
ANR	3929976	Identifier	ZEND_ASSERT_CHECK		3929929	0					
ANR	3929977	Argument	NULL		3929929	2					
ANR	3929978	Identifier	NULL		3929929	0					
ANR	3929979	Argument	NULL		3929929	3					
ANR	3929980	Identifier	NULL		3929929	0					
ANR	3929981	IfStatement	if ( fbc )		3929929	4					
ANR	3929982	Condition	fbc	3106:6:89402:89404	3929929	0	True				
ANR	3929983	Identifier	fbc		3929929	0					
ANR	3929984	CompoundStatement		9:11:203:203	3929929	1					
ANR	3929985	ExpressionStatement	name_node . op_type = IS_CONST	3107:3:89412:89440	3929929	0	True				
ANR	3929986	AssignmentExpression	name_node . op_type = IS_CONST		3929929	0		=			
ANR	3929987	MemberAccess	name_node . op_type		3929929	0					
ANR	3929988	Identifier	name_node		3929929	0					
ANR	3929989	Identifier	op_type		3929929	1					
ANR	3929990	Identifier	IS_CONST		3929929	1					
ANR	3929991	ExpressionStatement	"ZVAL_STR_COPY ( & name_node . u . constant , name )"	3108:3:89445:89487	3929929	1	True				
ANR	3929992	CallExpression	"ZVAL_STR_COPY ( & name_node . u . constant , name )"		3929929	0					
ANR	3929993	Callee	ZVAL_STR_COPY		3929929	0					
ANR	3929994	Identifier	ZVAL_STR_COPY		3929929	0					
ANR	3929995	ArgumentList	& name_node . u . constant		3929929	1					
ANR	3929996	Argument	& name_node . u . constant		3929929	0					
ANR	3929997	UnaryOperationExpression	& name_node . u . constant		3929929	0					
ANR	3929998	UnaryOperator	&		3929929	0					
ANR	3929999	MemberAccess	name_node . u . constant		3929929	1					
ANR	3930000	MemberAccess	name_node . u		3929929	0					
ANR	3930001	Identifier	name_node		3929929	0					
ANR	3930002	Identifier	u		3929929	1					
ANR	3930003	Identifier	constant		3929929	1					
ANR	3930004	Argument	name		3929929	1					
ANR	3930005	Identifier	name		3929929	0					
ANR	3930006	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , & name_node )"	3110:3:89493:89555	3929929	2	True				
ANR	3930007	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , & name_node )"		3929929	0		=			
ANR	3930008	Identifier	opline		3929929	0					
ANR	3930009	CallExpression	"zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , & name_node )"		3929929	1					
ANR	3930010	Callee	zend_emit_op		3929929	0					
ANR	3930011	Identifier	zend_emit_op		3929929	0					
ANR	3930012	ArgumentList	NULL		3929929	1					
ANR	3930013	Argument	NULL		3929929	0					
ANR	3930014	Identifier	NULL		3929929	0					
ANR	3930015	Argument	ZEND_INIT_FCALL		3929929	1					
ANR	3930016	Identifier	ZEND_INIT_FCALL		3929929	0					
ANR	3930017	Argument	NULL		3929929	2					
ANR	3930018	Identifier	NULL		3929929	0					
ANR	3930019	Argument	& name_node		3929929	3					
ANR	3930020	UnaryOperationExpression	& name_node		3929929	0					
ANR	3930021	UnaryOperator	&		3929929	0					
ANR	3930022	Identifier	name_node		3929929	1					
ANR	3930023	ElseStatement	else		3929929	0					
ANR	3930024	CompoundStatement		14:9:362:362	3929929	0					
ANR	3930025	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_INIT_NS_FCALL_BY_NAME , NULL , NULL )"	3112:3:89571:89638	3929929	0	True				
ANR	3930026	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_INIT_NS_FCALL_BY_NAME , NULL , NULL )"		3929929	0		=			
ANR	3930027	Identifier	opline		3929929	0					
ANR	3930028	CallExpression	"zend_emit_op ( NULL , ZEND_INIT_NS_FCALL_BY_NAME , NULL , NULL )"		3929929	1					
ANR	3930029	Callee	zend_emit_op		3929929	0					
ANR	3930030	Identifier	zend_emit_op		3929929	0					
ANR	3930031	ArgumentList	NULL		3929929	1					
ANR	3930032	Argument	NULL		3929929	0					
ANR	3930033	Identifier	NULL		3929929	0					
ANR	3930034	Argument	ZEND_INIT_NS_FCALL_BY_NAME		3929929	1					
ANR	3930035	Identifier	ZEND_INIT_NS_FCALL_BY_NAME		3929929	0					
ANR	3930036	Argument	NULL		3929929	2					
ANR	3930037	Identifier	NULL		3929929	0					
ANR	3930038	Argument	NULL		3929929	3					
ANR	3930039	Identifier	NULL		3929929	0					
ANR	3930040	ExpressionStatement	opline -> op2_type = IS_CONST	3113:3:89643:89670	3929929	1	True				
ANR	3930041	AssignmentExpression	opline -> op2_type = IS_CONST		3929929	0		=			
ANR	3930042	PtrMemberAccess	opline -> op2_type		3929929	0					
ANR	3930043	Identifier	opline		3929929	0					
ANR	3930044	Identifier	op2_type		3929929	1					
ANR	3930045	Identifier	IS_CONST		3929929	1					
ANR	3930046	ExpressionStatement	"opline -> op2 . constant = zend_add_ns_func_name_literal ( CG ( active_op_array ) , name )"	3114:3:89675:89759	3929929	2	True				
ANR	3930047	AssignmentExpression	"opline -> op2 . constant = zend_add_ns_func_name_literal ( CG ( active_op_array ) , name )"		3929929	0		=			
ANR	3930048	MemberAccess	opline -> op2 . constant		3929929	0					
ANR	3930049	PtrMemberAccess	opline -> op2		3929929	0					
ANR	3930050	Identifier	opline		3929929	0					
ANR	3930051	Identifier	op2		3929929	1					
ANR	3930052	Identifier	constant		3929929	1					
ANR	3930053	CallExpression	"zend_add_ns_func_name_literal ( CG ( active_op_array ) , name )"		3929929	1					
ANR	3930054	Callee	zend_add_ns_func_name_literal		3929929	0					
ANR	3930055	Identifier	zend_add_ns_func_name_literal		3929929	0					
ANR	3930056	ArgumentList	CG ( active_op_array )		3929929	1					
ANR	3930057	Argument	CG ( active_op_array )		3929929	0					
ANR	3930058	CallExpression	CG ( active_op_array )		3929929	0					
ANR	3930059	Callee	CG		3929929	0					
ANR	3930060	Identifier	CG		3929929	0					
ANR	3930061	ArgumentList	active_op_array		3929929	1					
ANR	3930062	Argument	active_op_array		3929929	0					
ANR	3930063	Identifier	active_op_array		3929929	0					
ANR	3930064	Argument	name		3929929	1					
ANR	3930065	Identifier	name		3929929	0					
ANR	3930066	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	3117:2:89767:89810	3929929	5	True				
ANR	3930067	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3929929	0					
ANR	3930068	Callee	zend_alloc_cache_slot		3929929	0					
ANR	3930069	Identifier	zend_alloc_cache_slot		3929929	0					
ANR	3930070	ArgumentList	opline -> op2 . constant		3929929	1					
ANR	3930071	Argument	opline -> op2 . constant		3929929	0					
ANR	3930072	MemberAccess	opline -> op2 . constant		3929929	0					
ANR	3930073	PtrMemberAccess	opline -> op2		3929929	0					
ANR	3930074	Identifier	opline		3929929	0					
ANR	3930075	Identifier	op2		3929929	1					
ANR	3930076	Identifier	constant		3929929	1					
ANR	3930077	IfStatement	if ( args -> children == 1 && ( args -> child [ 0 ] -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( args -> child [ 0 ] ) ) != IS_STRING ) )		3929929	6					
ANR	3930078	Condition	args -> children == 1 && ( args -> child [ 0 ] -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( args -> child [ 0 ] ) ) != IS_STRING )	3119:6:89819:89953	3929929	0	True				
ANR	3930079	AndExpression	args -> children == 1 && ( args -> child [ 0 ] -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( args -> child [ 0 ] ) ) != IS_STRING )		3929929	0		&&			
ANR	3930080	EqualityExpression	args -> children == 1		3929929	0		==			
ANR	3930081	PtrMemberAccess	args -> children		3929929	0					
ANR	3930082	Identifier	args		3929929	0					
ANR	3930083	Identifier	children		3929929	1					
ANR	3930084	PrimaryExpression	1		3929929	1					
ANR	3930085	OrExpression	args -> child [ 0 ] -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( args -> child [ 0 ] ) ) != IS_STRING		3929929	1		||			
ANR	3930086	EqualityExpression	args -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3929929	0		!=			
ANR	3930087	PtrMemberAccess	args -> child [ 0 ] -> kind		3929929	0					
ANR	3930088	ArrayIndexing	args -> child [ 0 ]		3929929	0					
ANR	3930089	PtrMemberAccess	args -> child		3929929	0					
ANR	3930090	Identifier	args		3929929	0					
ANR	3930091	Identifier	child		3929929	1					
ANR	3930092	PrimaryExpression	0		3929929	1					
ANR	3930093	Identifier	kind		3929929	1					
ANR	3930094	Identifier	ZEND_AST_ZVAL		3929929	1					
ANR	3930095	EqualityExpression	Z_TYPE_P ( zend_ast_get_zval ( args -> child [ 0 ] ) ) != IS_STRING		3929929	1		!=			
ANR	3930096	CallExpression	Z_TYPE_P ( zend_ast_get_zval ( args -> child [ 0 ] ) )		3929929	0					
ANR	3930097	Callee	Z_TYPE_P		3929929	0					
ANR	3930098	Identifier	Z_TYPE_P		3929929	0					
ANR	3930099	ArgumentList	zend_ast_get_zval ( args -> child [ 0 ] )		3929929	1					
ANR	3930100	Argument	zend_ast_get_zval ( args -> child [ 0 ] )		3929929	0					
ANR	3930101	CallExpression	zend_ast_get_zval ( args -> child [ 0 ] )		3929929	0					
ANR	3930102	Callee	zend_ast_get_zval		3929929	0					
ANR	3930103	Identifier	zend_ast_get_zval		3929929	0					
ANR	3930104	ArgumentList	args -> child [ 0 ]		3929929	1					
ANR	3930105	Argument	args -> child [ 0 ]		3929929	0					
ANR	3930106	ArrayIndexing	args -> child [ 0 ]		3929929	0					
ANR	3930107	PtrMemberAccess	args -> child		3929929	0					
ANR	3930108	Identifier	args		3929929	0					
ANR	3930109	Identifier	child		3929929	1					
ANR	3930110	PrimaryExpression	0		3929929	1					
ANR	3930111	Identifier	IS_STRING		3929929	1					
ANR	3930112	CompoundStatement		24:66:752:752	3929929	1					
ANR	3930113	ExpressionStatement	"zend_ast_list_add ( ( zend_ast * ) args , zend_ast_create_zval_from_str ( zend_ast_export ( ""assert("" , args -> child [ 0 ] , "")"" ) ) )"	3123:3:90014:90138	3929929	0	True				
ANR	3930114	CallExpression	"zend_ast_list_add ( ( zend_ast * ) args , zend_ast_create_zval_from_str ( zend_ast_export ( ""assert("" , args -> child [ 0 ] , "")"" ) ) )"		3929929	0					
ANR	3930115	Callee	zend_ast_list_add		3929929	0					
ANR	3930116	Identifier	zend_ast_list_add		3929929	0					
ANR	3930117	ArgumentList	( zend_ast * ) args		3929929	1					
ANR	3930118	Argument	( zend_ast * ) args		3929929	0					
ANR	3930119	CastExpression	( zend_ast * ) args		3929929	0					
ANR	3930120	CastTarget	zend_ast *		3929929	0					
ANR	3930121	Identifier	args		3929929	1					
ANR	3930122	Argument	"zend_ast_create_zval_from_str ( zend_ast_export ( ""assert("" , args -> child [ 0 ] , "")"" ) )"		3929929	1					
ANR	3930123	CallExpression	"zend_ast_create_zval_from_str ( zend_ast_export ( ""assert("" , args -> child [ 0 ] , "")"" ) )"		3929929	0					
ANR	3930124	Callee	zend_ast_create_zval_from_str		3929929	0					
ANR	3930125	Identifier	zend_ast_create_zval_from_str		3929929	0					
ANR	3930126	ArgumentList	"zend_ast_export ( ""assert("" , args -> child [ 0 ] , "")"" )"		3929929	1					
ANR	3930127	Argument	"zend_ast_export ( ""assert("" , args -> child [ 0 ] , "")"" )"		3929929	0					
ANR	3930128	CallExpression	"zend_ast_export ( ""assert("" , args -> child [ 0 ] , "")"" )"		3929929	0					
ANR	3930129	Callee	zend_ast_export		3929929	0					
ANR	3930130	Identifier	zend_ast_export		3929929	0					
ANR	3930131	ArgumentList	"""assert("""		3929929	1					
ANR	3930132	Argument	"""assert("""		3929929	0					
ANR	3930133	PrimaryExpression	"""assert("""		3929929	0					
ANR	3930134	Argument	args -> child [ 0 ]		3929929	1					
ANR	3930135	ArrayIndexing	args -> child [ 0 ]		3929929	0					
ANR	3930136	PtrMemberAccess	args -> child		3929929	0					
ANR	3930137	Identifier	args		3929929	0					
ANR	3930138	Identifier	child		3929929	1					
ANR	3930139	PrimaryExpression	0		3929929	1					
ANR	3930140	Argument	""")"""		3929929	2					
ANR	3930141	PrimaryExpression	""")"""		3929929	0					
ANR	3930142	ExpressionStatement	"zend_compile_call_common ( result , ( zend_ast * ) args , fbc )"	3128:2:90147:90201	3929929	7	True				
ANR	3930143	CallExpression	"zend_compile_call_common ( result , ( zend_ast * ) args , fbc )"		3929929	0					
ANR	3930144	Callee	zend_compile_call_common		3929929	0					
ANR	3930145	Identifier	zend_compile_call_common		3929929	0					
ANR	3930146	ArgumentList	result		3929929	1					
ANR	3930147	Argument	result		3929929	0					
ANR	3930148	Identifier	result		3929929	0					
ANR	3930149	Argument	( zend_ast * ) args		3929929	1					
ANR	3930150	CastExpression	( zend_ast * ) args		3929929	0					
ANR	3930151	CastTarget	zend_ast *		3929929	0					
ANR	3930152	Identifier	args		3929929	1					
ANR	3930153	Argument	fbc		3929929	2					
ANR	3930154	Identifier	fbc		3929929	0					
ANR	3930155	ExpressionStatement	CG ( active_op_array ) -> opcodes [ check_op_number ] . op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )	3130:2:90206:90308	3929929	8	True				
ANR	3930156	AssignmentExpression	CG ( active_op_array ) -> opcodes [ check_op_number ] . op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )		3929929	0		=			
ANR	3930157	MemberAccess	CG ( active_op_array ) -> opcodes [ check_op_number ] . op2 . opline_num		3929929	0					
ANR	3930158	MemberAccess	CG ( active_op_array ) -> opcodes [ check_op_number ] . op2		3929929	0					
ANR	3930159	ArrayIndexing	CG ( active_op_array ) -> opcodes [ check_op_number ]		3929929	0					
ANR	3930160	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3929929	0					
ANR	3930161	CallExpression	CG ( active_op_array )		3929929	0					
ANR	3930162	Callee	CG		3929929	0					
ANR	3930163	Identifier	CG		3929929	0					
ANR	3930164	ArgumentList	active_op_array		3929929	1					
ANR	3930165	Argument	active_op_array		3929929	0					
ANR	3930166	Identifier	active_op_array		3929929	0					
ANR	3930167	Identifier	opcodes		3929929	1					
ANR	3930168	Identifier	check_op_number		3929929	1					
ANR	3930169	Identifier	op2		3929929	1					
ANR	3930170	Identifier	opline_num		3929929	1					
ANR	3930171	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3929929	1					
ANR	3930172	Callee	get_next_op_number		3929929	0					
ANR	3930173	Identifier	get_next_op_number		3929929	0					
ANR	3930174	ArgumentList	CG ( active_op_array )		3929929	1					
ANR	3930175	Argument	CG ( active_op_array )		3929929	0					
ANR	3930176	CallExpression	CG ( active_op_array )		3929929	0					
ANR	3930177	Callee	CG		3929929	0					
ANR	3930178	Identifier	CG		3929929	0					
ANR	3930179	ArgumentList	active_op_array		3929929	1					
ANR	3930180	Argument	active_op_array		3929929	0					
ANR	3930181	Identifier	active_op_array		3929929	0					
ANR	3930182	ElseStatement	else		3929929	0					
ANR	3930183	CompoundStatement		34:8:1114:1114	3929929	0					
ANR	3930184	IfStatement	if ( ! fbc )		3929929	0					
ANR	3930185	Condition	! fbc	3132:6:90326:90329	3929929	0	True				
ANR	3930186	UnaryOperationExpression	! fbc		3929929	0					
ANR	3930187	UnaryOperator	!		3929929	0					
ANR	3930188	Identifier	fbc		3929929	1					
ANR	3930189	CompoundStatement		35:12:1128:1128	3929929	1					
ANR	3930190	ExpressionStatement	zend_string_release ( name )	3133:3:90337:90362	3929929	0	True				
ANR	3930191	CallExpression	zend_string_release ( name )		3929929	0					
ANR	3930192	Callee	zend_string_release		3929929	0					
ANR	3930193	Identifier	zend_string_release		3929929	0					
ANR	3930194	ArgumentList	name		3929929	1					
ANR	3930195	Argument	name		3929929	0					
ANR	3930196	Identifier	name		3929929	0					
ANR	3930197	ExpressionStatement	result -> op_type = IS_CONST	3135:2:90370:90396	3929929	1	True				
ANR	3930198	AssignmentExpression	result -> op_type = IS_CONST		3929929	0		=			
ANR	3930199	PtrMemberAccess	result -> op_type		3929929	0					
ANR	3930200	Identifier	result		3929929	0					
ANR	3930201	Identifier	op_type		3929929	1					
ANR	3930202	Identifier	IS_CONST		3929929	1					
ANR	3930203	ExpressionStatement	ZVAL_TRUE ( & result -> u . constant )	3136:2:90400:90430	3929929	2	True				
ANR	3930204	CallExpression	ZVAL_TRUE ( & result -> u . constant )		3929929	0					
ANR	3930205	Callee	ZVAL_TRUE		3929929	0					
ANR	3930206	Identifier	ZVAL_TRUE		3929929	0					
ANR	3930207	ArgumentList	& result -> u . constant		3929929	1					
ANR	3930208	Argument	& result -> u . constant		3929929	0					
ANR	3930209	UnaryOperationExpression	& result -> u . constant		3929929	0					
ANR	3930210	UnaryOperator	&		3929929	0					
ANR	3930211	MemberAccess	result -> u . constant		3929929	1					
ANR	3930212	PtrMemberAccess	result -> u		3929929	0					
ANR	3930213	Identifier	result		3929929	0					
ANR	3930214	Identifier	u		3929929	1					
ANR	3930215	Identifier	constant		3929929	1					
ANR	3930216	ExpressionStatement	zend_compile_assert_side_effects ( ( zend_ast * ) args )	3138:2:90435:90486	3929929	3	True				
ANR	3930217	CallExpression	zend_compile_assert_side_effects ( ( zend_ast * ) args )		3929929	0					
ANR	3930218	Callee	zend_compile_assert_side_effects		3929929	0					
ANR	3930219	Identifier	zend_compile_assert_side_effects		3929929	0					
ANR	3930220	ArgumentList	( zend_ast * ) args		3929929	1					
ANR	3930221	Argument	( zend_ast * ) args		3929929	0					
ANR	3930222	CastExpression	( zend_ast * ) args		3929929	0					
ANR	3930223	CastTarget	zend_ast *		3929929	0					
ANR	3930224	Identifier	args		3929929	1					
ANR	3930225	ReturnStatement	return SUCCESS ;	3141:1:90493:90507	3929929	1	True				
ANR	3930226	Identifier	SUCCESS		3929929	0					
ANR	3930227	ReturnType	static int		3929929	1					
ANR	3930228	Identifier	zend_compile_assert		3929929	2					
ANR	3930229	ParameterList	"znode * result , zend_ast_list * args , zend_string * name , zend_function * fbc"		3929929	3					
ANR	3930230	Parameter	znode * result	3097:31:89118:89130	3929929	0	True				
ANR	3930231	ParameterType	znode *		3929929	0					
ANR	3930232	Identifier	result		3929929	1					
ANR	3930233	Parameter	zend_ast_list * args	3097:46:89133:89151	3929929	1	True				
ANR	3930234	ParameterType	zend_ast_list *		3929929	0					
ANR	3930235	Identifier	args		3929929	1					
ANR	3930236	Parameter	zend_string * name	3097:67:89154:89170	3929929	2	True				
ANR	3930237	ParameterType	zend_string *		3929929	0					
ANR	3930238	Identifier	name		3929929	1					
ANR	3930239	Parameter	zend_function * fbc	3097:86:89173:89190	3929929	3	True				
ANR	3930240	ParameterType	zend_function *		3929929	0					
ANR	3930241	Identifier	fbc		3929929	1					
ANR	3930242	CFGEntryNode	ENTRY		3929929		True				
ANR	3930243	CFGExitNode	EXIT		3929929		True				
ANR	3930244	Symbol	ZEND_ASSERT_CHECK		3929929						
ANR	3930245	Symbol	* CG		3929929						
ANR	3930246	Symbol	CG ( active_op_array ) -> opcodes		3929929						
ANR	3930247	Symbol	result -> u		3929929						
ANR	3930248	Symbol	* args		3929929						
ANR	3930249	Symbol	* * * args		3929929						
ANR	3930250	Symbol	opline		3929929						
ANR	3930251	Symbol	ZEND_INIT_FCALL		3929929						
ANR	3930252	Symbol	& name_node		3929929						
ANR	3930253	Symbol	ZEND_AST_ZVAL		3929929						
ANR	3930254	Symbol	zend_ast_create_zval_from_str		3929929						
ANR	3930255	Symbol	assertions		3929929						
ANR	3930256	Symbol	IS_STRING		3929929						
ANR	3930257	Symbol	* * args		3929929						
ANR	3930258	Symbol	* CG ( active_op_array ) -> opcodes		3929929						
ANR	3930259	Symbol	args -> child [ 0 ] -> kind		3929929						
ANR	3930260	Symbol	EG		3929929						
ANR	3930261	Symbol	IS_CONST		3929929						
ANR	3930262	Symbol	NULL		3929929						
ANR	3930263	Symbol	ZEND_INIT_NS_FCALL_BY_NAME		3929929						
ANR	3930264	Symbol	fbc		3929929						
ANR	3930265	Symbol	name_node . u		3929929						
ANR	3930266	Symbol	args -> child		3929929						
ANR	3930267	Symbol	name		3929929						
ANR	3930268	Symbol	& name_node . u . constant		3929929						
ANR	3930269	Symbol	* check_op_number		3929929						
ANR	3930270	Symbol	zend_ast_export		3929929						
ANR	3930271	Symbol	zend_ast_get_zval		3929929						
ANR	3930272	Symbol	name_node		3929929						
ANR	3930273	Symbol	zend_emit_op		3929929						
ANR	3930274	Symbol	opline -> op2		3929929						
ANR	3930275	Symbol	* args -> child		3929929						
ANR	3930276	Symbol	CG ( active_op_array ) -> opcodes [ check_op_number ] . op2		3929929						
ANR	3930277	Symbol	result -> op_type		3929929						
ANR	3930278	Symbol	zend_add_ns_func_name_literal		3929929						
ANR	3930279	Symbol	result		3929929						
ANR	3930280	Symbol	* * CG		3929929						
ANR	3930281	Symbol	* result		3929929						
ANR	3930282	Symbol	check_op_number		3929929						
ANR	3930283	Symbol	& result -> u . constant		3929929						
ANR	3930284	Symbol	* * args -> child		3929929						
ANR	3930285	Symbol	CG ( active_op_array ) -> opcodes [ check_op_number ] . op2 . opline_num		3929929						
ANR	3930286	Symbol	& name_node . u		3929929						
ANR	3930287	Symbol	SUCCESS		3929929						
ANR	3930288	Symbol	CG		3929929						
ANR	3930289	Symbol	& result -> u		3929929						
ANR	3930290	Symbol	active_op_array		3929929						
ANR	3930291	Symbol	Z_TYPE_P		3929929						
ANR	3930292	Symbol	args		3929929						
ANR	3930293	Symbol	name_node . op_type		3929929						
ANR	3930294	Symbol	* opline		3929929						
ANR	3930295	Symbol	args -> children		3929929						
ANR	3930296	Symbol	opline -> op2 . constant		3929929						
ANR	3930297	Symbol	opline -> op2_type		3929929						
ANR	3930298	Symbol	get_next_op_number		3929929						
ANR	3930299	Function	zend_try_compile_special_func	3145:0:90522:92566							
ANR	3930300	FunctionDef	"zend_try_compile_special_func (znode * result , zend_string * lcname , zend_ast_list * args , zend_function * fbc)"		3930299	0					
ANR	3930301	CompoundStatement		3146:0:90643:92566	3930299	0					
ANR	3930302	IfStatement	if ( fbc -> internal_function . handler == ZEND_FN ( display_disabled_function ) )		3930299	0					
ANR	3930303	Condition	fbc -> internal_function . handler == ZEND_FN ( display_disabled_function )	3147:5:90650:90717	3930299	0	True				
ANR	3930304	EqualityExpression	fbc -> internal_function . handler == ZEND_FN ( display_disabled_function )		3930299	0		==			
ANR	3930305	MemberAccess	fbc -> internal_function . handler		3930299	0					
ANR	3930306	PtrMemberAccess	fbc -> internal_function		3930299	0					
ANR	3930307	Identifier	fbc		3930299	0					
ANR	3930308	Identifier	internal_function		3930299	1					
ANR	3930309	Identifier	handler		3930299	1					
ANR	3930310	CallExpression	ZEND_FN ( display_disabled_function )		3930299	1					
ANR	3930311	Callee	ZEND_FN		3930299	0					
ANR	3930312	Identifier	ZEND_FN		3930299	0					
ANR	3930313	ArgumentList	display_disabled_function		3930299	1					
ANR	3930314	Argument	display_disabled_function		3930299	0					
ANR	3930315	Identifier	display_disabled_function		3930299	0					
ANR	3930316	CompoundStatement		2:75:76:76	3930299	1					
ANR	3930317	ReturnStatement	return FAILURE ;	3148:2:90724:90738	3930299	0	True				
ANR	3930318	Identifier	FAILURE		3930299	0					
ANR	3930319	IfStatement	"if ( zend_string_equals_literal ( lcname , ""strlen"" ) )"		3930299	1					
ANR	3930320	Condition	"zend_string_equals_literal ( lcname , ""strlen"" )"	3151:5:90749:90792	3930299	0	True				
ANR	3930321	CallExpression	"zend_string_equals_literal ( lcname , ""strlen"" )"		3930299	0					
ANR	3930322	Callee	zend_string_equals_literal		3930299	0					
ANR	3930323	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930324	ArgumentList	lcname		3930299	1					
ANR	3930325	Argument	lcname		3930299	0					
ANR	3930326	Identifier	lcname		3930299	0					
ANR	3930327	Argument	"""strlen"""		3930299	1					
ANR	3930328	PrimaryExpression	"""strlen"""		3930299	0					
ANR	3930329	CompoundStatement		6:51:151:151	3930299	1					
ANR	3930330	ReturnStatement	"return zend_compile_func_strlen ( result , args ) ;"	3152:2:90799:90844	3930299	0	True				
ANR	3930331	CallExpression	"zend_compile_func_strlen ( result , args )"		3930299	0					
ANR	3930332	Callee	zend_compile_func_strlen		3930299	0					
ANR	3930333	Identifier	zend_compile_func_strlen		3930299	0					
ANR	3930334	ArgumentList	result		3930299	1					
ANR	3930335	Argument	result		3930299	0					
ANR	3930336	Identifier	result		3930299	0					
ANR	3930337	Argument	args		3930299	1					
ANR	3930338	Identifier	args		3930299	0					
ANR	3930339	ElseStatement	else		3930299	0					
ANR	3930340	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_null"" ) )"		3930299	0					
ANR	3930341	Condition	"zend_string_equals_literal ( lcname , ""is_null"" )"	3153:12:90858:90902	3930299	0	True				
ANR	3930342	CallExpression	"zend_string_equals_literal ( lcname , ""is_null"" )"		3930299	0					
ANR	3930343	Callee	zend_string_equals_literal		3930299	0					
ANR	3930344	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930345	ArgumentList	lcname		3930299	1					
ANR	3930346	Argument	lcname		3930299	0					
ANR	3930347	Identifier	lcname		3930299	0					
ANR	3930348	Argument	"""is_null"""		3930299	1					
ANR	3930349	PrimaryExpression	"""is_null"""		3930299	0					
ANR	3930350	CompoundStatement		8:59:261:261	3930299	1					
ANR	3930351	ReturnStatement	"return zend_compile_func_typecheck ( result , args , IS_NULL ) ;"	3154:2:90909:90966	3930299	0	True				
ANR	3930352	CallExpression	"zend_compile_func_typecheck ( result , args , IS_NULL )"		3930299	0					
ANR	3930353	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930354	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930355	ArgumentList	result		3930299	1					
ANR	3930356	Argument	result		3930299	0					
ANR	3930357	Identifier	result		3930299	0					
ANR	3930358	Argument	args		3930299	1					
ANR	3930359	Identifier	args		3930299	0					
ANR	3930360	Argument	IS_NULL		3930299	2					
ANR	3930361	Identifier	IS_NULL		3930299	0					
ANR	3930362	ElseStatement	else		3930299	0					
ANR	3930363	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_bool"" ) )"		3930299	0					
ANR	3930364	Condition	"zend_string_equals_literal ( lcname , ""is_bool"" )"	3155:12:90980:91024	3930299	0	True				
ANR	3930365	CallExpression	"zend_string_equals_literal ( lcname , ""is_bool"" )"		3930299	0					
ANR	3930366	Callee	zend_string_equals_literal		3930299	0					
ANR	3930367	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930368	ArgumentList	lcname		3930299	1					
ANR	3930369	Argument	lcname		3930299	0					
ANR	3930370	Identifier	lcname		3930299	0					
ANR	3930371	Argument	"""is_bool"""		3930299	1					
ANR	3930372	PrimaryExpression	"""is_bool"""		3930299	0					
ANR	3930373	CompoundStatement		10:59:383:383	3930299	1					
ANR	3930374	ReturnStatement	"return zend_compile_func_typecheck ( result , args , _IS_BOOL ) ;"	3156:2:91031:91089	3930299	0	True				
ANR	3930375	CallExpression	"zend_compile_func_typecheck ( result , args , _IS_BOOL )"		3930299	0					
ANR	3930376	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930377	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930378	ArgumentList	result		3930299	1					
ANR	3930379	Argument	result		3930299	0					
ANR	3930380	Identifier	result		3930299	0					
ANR	3930381	Argument	args		3930299	1					
ANR	3930382	Identifier	args		3930299	0					
ANR	3930383	Argument	_IS_BOOL		3930299	2					
ANR	3930384	Identifier	_IS_BOOL		3930299	0					
ANR	3930385	ElseStatement	else		3930299	0					
ANR	3930386	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_long"" ) || zend_string_equals_literal ( lcname , ""is_int"" ) || zend_string_equals_literal ( lcname , ""is_integer"" ) )"		3930299	0					
ANR	3930387	Condition	"zend_string_equals_literal ( lcname , ""is_long"" ) || zend_string_equals_literal ( lcname , ""is_int"" ) || zend_string_equals_literal ( lcname , ""is_integer"" )"	3157:12:91103:91251	3930299	0	True				
ANR	3930388	OrExpression	"zend_string_equals_literal ( lcname , ""is_long"" ) || zend_string_equals_literal ( lcname , ""is_int"" ) || zend_string_equals_literal ( lcname , ""is_integer"" )"		3930299	0		||			
ANR	3930389	CallExpression	"zend_string_equals_literal ( lcname , ""is_long"" )"		3930299	0					
ANR	3930390	Callee	zend_string_equals_literal		3930299	0					
ANR	3930391	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930392	ArgumentList	lcname		3930299	1					
ANR	3930393	Argument	lcname		3930299	0					
ANR	3930394	Identifier	lcname		3930299	0					
ANR	3930395	Argument	"""is_long"""		3930299	1					
ANR	3930396	PrimaryExpression	"""is_long"""		3930299	0					
ANR	3930397	OrExpression	"zend_string_equals_literal ( lcname , ""is_int"" ) || zend_string_equals_literal ( lcname , ""is_integer"" )"		3930299	1		||			
ANR	3930398	CallExpression	"zend_string_equals_literal ( lcname , ""is_int"" )"		3930299	0					
ANR	3930399	Callee	zend_string_equals_literal		3930299	0					
ANR	3930400	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930401	ArgumentList	lcname		3930299	1					
ANR	3930402	Argument	lcname		3930299	0					
ANR	3930403	Identifier	lcname		3930299	0					
ANR	3930404	Argument	"""is_int"""		3930299	1					
ANR	3930405	PrimaryExpression	"""is_int"""		3930299	0					
ANR	3930406	CallExpression	"zend_string_equals_literal ( lcname , ""is_integer"" )"		3930299	1					
ANR	3930407	Callee	zend_string_equals_literal		3930299	0					
ANR	3930408	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930409	ArgumentList	lcname		3930299	1					
ANR	3930410	Argument	lcname		3930299	0					
ANR	3930411	Identifier	lcname		3930299	0					
ANR	3930412	Argument	"""is_integer"""		3930299	1					
ANR	3930413	PrimaryExpression	"""is_integer"""		3930299	0					
ANR	3930414	CompoundStatement		15:3:612:612	3930299	1					
ANR	3930415	ReturnStatement	"return zend_compile_func_typecheck ( result , args , IS_LONG ) ;"	3161:2:91260:91317	3930299	0	True				
ANR	3930416	CallExpression	"zend_compile_func_typecheck ( result , args , IS_LONG )"		3930299	0					
ANR	3930417	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930418	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930419	ArgumentList	result		3930299	1					
ANR	3930420	Argument	result		3930299	0					
ANR	3930421	Identifier	result		3930299	0					
ANR	3930422	Argument	args		3930299	1					
ANR	3930423	Identifier	args		3930299	0					
ANR	3930424	Argument	IS_LONG		3930299	2					
ANR	3930425	Identifier	IS_LONG		3930299	0					
ANR	3930426	ElseStatement	else		3930299	0					
ANR	3930427	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_float"" ) || zend_string_equals_literal ( lcname , ""is_double"" ) || zend_string_equals_literal ( lcname , ""is_real"" ) )"		3930299	0					
ANR	3930428	Condition	"zend_string_equals_literal ( lcname , ""is_float"" ) || zend_string_equals_literal ( lcname , ""is_double"" ) || zend_string_equals_literal ( lcname , ""is_real"" )"	3162:12:91331:91480	3930299	0	True				
ANR	3930429	OrExpression	"zend_string_equals_literal ( lcname , ""is_float"" ) || zend_string_equals_literal ( lcname , ""is_double"" ) || zend_string_equals_literal ( lcname , ""is_real"" )"		3930299	0		||			
ANR	3930430	CallExpression	"zend_string_equals_literal ( lcname , ""is_float"" )"		3930299	0					
ANR	3930431	Callee	zend_string_equals_literal		3930299	0					
ANR	3930432	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930433	ArgumentList	lcname		3930299	1					
ANR	3930434	Argument	lcname		3930299	0					
ANR	3930435	Identifier	lcname		3930299	0					
ANR	3930436	Argument	"""is_float"""		3930299	1					
ANR	3930437	PrimaryExpression	"""is_float"""		3930299	0					
ANR	3930438	OrExpression	"zend_string_equals_literal ( lcname , ""is_double"" ) || zend_string_equals_literal ( lcname , ""is_real"" )"		3930299	1		||			
ANR	3930439	CallExpression	"zend_string_equals_literal ( lcname , ""is_double"" )"		3930299	0					
ANR	3930440	Callee	zend_string_equals_literal		3930299	0					
ANR	3930441	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930442	ArgumentList	lcname		3930299	1					
ANR	3930443	Argument	lcname		3930299	0					
ANR	3930444	Identifier	lcname		3930299	0					
ANR	3930445	Argument	"""is_double"""		3930299	1					
ANR	3930446	PrimaryExpression	"""is_double"""		3930299	0					
ANR	3930447	CallExpression	"zend_string_equals_literal ( lcname , ""is_real"" )"		3930299	1					
ANR	3930448	Callee	zend_string_equals_literal		3930299	0					
ANR	3930449	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930450	ArgumentList	lcname		3930299	1					
ANR	3930451	Argument	lcname		3930299	0					
ANR	3930452	Identifier	lcname		3930299	0					
ANR	3930453	Argument	"""is_real"""		3930299	1					
ANR	3930454	PrimaryExpression	"""is_real"""		3930299	0					
ANR	3930455	CompoundStatement		20:3:841:841	3930299	1					
ANR	3930456	ReturnStatement	"return zend_compile_func_typecheck ( result , args , IS_DOUBLE ) ;"	3166:2:91489:91548	3930299	0	True				
ANR	3930457	CallExpression	"zend_compile_func_typecheck ( result , args , IS_DOUBLE )"		3930299	0					
ANR	3930458	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930459	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930460	ArgumentList	result		3930299	1					
ANR	3930461	Argument	result		3930299	0					
ANR	3930462	Identifier	result		3930299	0					
ANR	3930463	Argument	args		3930299	1					
ANR	3930464	Identifier	args		3930299	0					
ANR	3930465	Argument	IS_DOUBLE		3930299	2					
ANR	3930466	Identifier	IS_DOUBLE		3930299	0					
ANR	3930467	ElseStatement	else		3930299	0					
ANR	3930468	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_string"" ) )"		3930299	0					
ANR	3930469	Condition	"zend_string_equals_literal ( lcname , ""is_string"" )"	3167:12:91562:91608	3930299	0	True				
ANR	3930470	CallExpression	"zend_string_equals_literal ( lcname , ""is_string"" )"		3930299	0					
ANR	3930471	Callee	zend_string_equals_literal		3930299	0					
ANR	3930472	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930473	ArgumentList	lcname		3930299	1					
ANR	3930474	Argument	lcname		3930299	0					
ANR	3930475	Identifier	lcname		3930299	0					
ANR	3930476	Argument	"""is_string"""		3930299	1					
ANR	3930477	PrimaryExpression	"""is_string"""		3930299	0					
ANR	3930478	CompoundStatement		22:61:967:967	3930299	1					
ANR	3930479	ReturnStatement	"return zend_compile_func_typecheck ( result , args , IS_STRING ) ;"	3168:2:91615:91674	3930299	0	True				
ANR	3930480	CallExpression	"zend_compile_func_typecheck ( result , args , IS_STRING )"		3930299	0					
ANR	3930481	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930482	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930483	ArgumentList	result		3930299	1					
ANR	3930484	Argument	result		3930299	0					
ANR	3930485	Identifier	result		3930299	0					
ANR	3930486	Argument	args		3930299	1					
ANR	3930487	Identifier	args		3930299	0					
ANR	3930488	Argument	IS_STRING		3930299	2					
ANR	3930489	Identifier	IS_STRING		3930299	0					
ANR	3930490	ElseStatement	else		3930299	0					
ANR	3930491	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_array"" ) )"		3930299	0					
ANR	3930492	Condition	"zend_string_equals_literal ( lcname , ""is_array"" )"	3169:12:91688:91733	3930299	0	True				
ANR	3930493	CallExpression	"zend_string_equals_literal ( lcname , ""is_array"" )"		3930299	0					
ANR	3930494	Callee	zend_string_equals_literal		3930299	0					
ANR	3930495	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930496	ArgumentList	lcname		3930299	1					
ANR	3930497	Argument	lcname		3930299	0					
ANR	3930498	Identifier	lcname		3930299	0					
ANR	3930499	Argument	"""is_array"""		3930299	1					
ANR	3930500	PrimaryExpression	"""is_array"""		3930299	0					
ANR	3930501	CompoundStatement		24:60:1092:1092	3930299	1					
ANR	3930502	ReturnStatement	"return zend_compile_func_typecheck ( result , args , IS_ARRAY ) ;"	3170:2:91740:91798	3930299	0	True				
ANR	3930503	CallExpression	"zend_compile_func_typecheck ( result , args , IS_ARRAY )"		3930299	0					
ANR	3930504	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930505	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930506	ArgumentList	result		3930299	1					
ANR	3930507	Argument	result		3930299	0					
ANR	3930508	Identifier	result		3930299	0					
ANR	3930509	Argument	args		3930299	1					
ANR	3930510	Identifier	args		3930299	0					
ANR	3930511	Argument	IS_ARRAY		3930299	2					
ANR	3930512	Identifier	IS_ARRAY		3930299	0					
ANR	3930513	ElseStatement	else		3930299	0					
ANR	3930514	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_object"" ) )"		3930299	0					
ANR	3930515	Condition	"zend_string_equals_literal ( lcname , ""is_object"" )"	3171:12:91812:91858	3930299	0	True				
ANR	3930516	CallExpression	"zend_string_equals_literal ( lcname , ""is_object"" )"		3930299	0					
ANR	3930517	Callee	zend_string_equals_literal		3930299	0					
ANR	3930518	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930519	ArgumentList	lcname		3930299	1					
ANR	3930520	Argument	lcname		3930299	0					
ANR	3930521	Identifier	lcname		3930299	0					
ANR	3930522	Argument	"""is_object"""		3930299	1					
ANR	3930523	PrimaryExpression	"""is_object"""		3930299	0					
ANR	3930524	CompoundStatement		26:61:1217:1217	3930299	1					
ANR	3930525	ReturnStatement	"return zend_compile_func_typecheck ( result , args , IS_OBJECT ) ;"	3172:2:91865:91924	3930299	0	True				
ANR	3930526	CallExpression	"zend_compile_func_typecheck ( result , args , IS_OBJECT )"		3930299	0					
ANR	3930527	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930528	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930529	ArgumentList	result		3930299	1					
ANR	3930530	Argument	result		3930299	0					
ANR	3930531	Identifier	result		3930299	0					
ANR	3930532	Argument	args		3930299	1					
ANR	3930533	Identifier	args		3930299	0					
ANR	3930534	Argument	IS_OBJECT		3930299	2					
ANR	3930535	Identifier	IS_OBJECT		3930299	0					
ANR	3930536	ElseStatement	else		3930299	0					
ANR	3930537	IfStatement	"if ( zend_string_equals_literal ( lcname , ""is_resource"" ) )"		3930299	0					
ANR	3930538	Condition	"zend_string_equals_literal ( lcname , ""is_resource"" )"	3173:12:91938:91986	3930299	0	True				
ANR	3930539	CallExpression	"zend_string_equals_literal ( lcname , ""is_resource"" )"		3930299	0					
ANR	3930540	Callee	zend_string_equals_literal		3930299	0					
ANR	3930541	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930542	ArgumentList	lcname		3930299	1					
ANR	3930543	Argument	lcname		3930299	0					
ANR	3930544	Identifier	lcname		3930299	0					
ANR	3930545	Argument	"""is_resource"""		3930299	1					
ANR	3930546	PrimaryExpression	"""is_resource"""		3930299	0					
ANR	3930547	CompoundStatement		28:63:1345:1345	3930299	1					
ANR	3930548	ReturnStatement	"return zend_compile_func_typecheck ( result , args , IS_RESOURCE ) ;"	3174:2:91993:92054	3930299	0	True				
ANR	3930549	CallExpression	"zend_compile_func_typecheck ( result , args , IS_RESOURCE )"		3930299	0					
ANR	3930550	Callee	zend_compile_func_typecheck		3930299	0					
ANR	3930551	Identifier	zend_compile_func_typecheck		3930299	0					
ANR	3930552	ArgumentList	result		3930299	1					
ANR	3930553	Argument	result		3930299	0					
ANR	3930554	Identifier	result		3930299	0					
ANR	3930555	Argument	args		3930299	1					
ANR	3930556	Identifier	args		3930299	0					
ANR	3930557	Argument	IS_RESOURCE		3930299	2					
ANR	3930558	Identifier	IS_RESOURCE		3930299	0					
ANR	3930559	ElseStatement	else		3930299	0					
ANR	3930560	IfStatement	"if ( zend_string_equals_literal ( lcname , ""defined"" ) )"		3930299	0					
ANR	3930561	Condition	"zend_string_equals_literal ( lcname , ""defined"" )"	3175:12:92068:92112	3930299	0	True				
ANR	3930562	CallExpression	"zend_string_equals_literal ( lcname , ""defined"" )"		3930299	0					
ANR	3930563	Callee	zend_string_equals_literal		3930299	0					
ANR	3930564	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930565	ArgumentList	lcname		3930299	1					
ANR	3930566	Argument	lcname		3930299	0					
ANR	3930567	Identifier	lcname		3930299	0					
ANR	3930568	Argument	"""defined"""		3930299	1					
ANR	3930569	PrimaryExpression	"""defined"""		3930299	0					
ANR	3930570	CompoundStatement		30:59:1471:1471	3930299	1					
ANR	3930571	ReturnStatement	"return zend_compile_func_defined ( result , args ) ;"	3176:2:92119:92165	3930299	0	True				
ANR	3930572	CallExpression	"zend_compile_func_defined ( result , args )"		3930299	0					
ANR	3930573	Callee	zend_compile_func_defined		3930299	0					
ANR	3930574	Identifier	zend_compile_func_defined		3930299	0					
ANR	3930575	ArgumentList	result		3930299	1					
ANR	3930576	Argument	result		3930299	0					
ANR	3930577	Identifier	result		3930299	0					
ANR	3930578	Argument	args		3930299	1					
ANR	3930579	Identifier	args		3930299	0					
ANR	3930580	ElseStatement	else		3930299	0					
ANR	3930581	IfStatement	"if ( zend_string_equals_literal ( lcname , ""call_user_func_array"" ) )"		3930299	0					
ANR	3930582	Condition	"zend_string_equals_literal ( lcname , ""call_user_func_array"" )"	3177:12:92179:92236	3930299	0	True				
ANR	3930583	CallExpression	"zend_string_equals_literal ( lcname , ""call_user_func_array"" )"		3930299	0					
ANR	3930584	Callee	zend_string_equals_literal		3930299	0					
ANR	3930585	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930586	ArgumentList	lcname		3930299	1					
ANR	3930587	Argument	lcname		3930299	0					
ANR	3930588	Identifier	lcname		3930299	0					
ANR	3930589	Argument	"""call_user_func_array"""		3930299	1					
ANR	3930590	PrimaryExpression	"""call_user_func_array"""		3930299	0					
ANR	3930591	CompoundStatement		32:72:1595:1595	3930299	1					
ANR	3930592	ReturnStatement	"return zend_compile_func_cufa ( result , args , lcname ) ;"	3178:2:92243:92294	3930299	0	True				
ANR	3930593	CallExpression	"zend_compile_func_cufa ( result , args , lcname )"		3930299	0					
ANR	3930594	Callee	zend_compile_func_cufa		3930299	0					
ANR	3930595	Identifier	zend_compile_func_cufa		3930299	0					
ANR	3930596	ArgumentList	result		3930299	1					
ANR	3930597	Argument	result		3930299	0					
ANR	3930598	Identifier	result		3930299	0					
ANR	3930599	Argument	args		3930299	1					
ANR	3930600	Identifier	args		3930299	0					
ANR	3930601	Argument	lcname		3930299	2					
ANR	3930602	Identifier	lcname		3930299	0					
ANR	3930603	ElseStatement	else		3930299	0					
ANR	3930604	IfStatement	"if ( zend_string_equals_literal ( lcname , ""call_user_func"" ) )"		3930299	0					
ANR	3930605	Condition	"zend_string_equals_literal ( lcname , ""call_user_func"" )"	3179:12:92308:92359	3930299	0	True				
ANR	3930606	CallExpression	"zend_string_equals_literal ( lcname , ""call_user_func"" )"		3930299	0					
ANR	3930607	Callee	zend_string_equals_literal		3930299	0					
ANR	3930608	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930609	ArgumentList	lcname		3930299	1					
ANR	3930610	Argument	lcname		3930299	0					
ANR	3930611	Identifier	lcname		3930299	0					
ANR	3930612	Argument	"""call_user_func"""		3930299	1					
ANR	3930613	PrimaryExpression	"""call_user_func"""		3930299	0					
ANR	3930614	CompoundStatement		34:66:1718:1718	3930299	1					
ANR	3930615	ReturnStatement	"return zend_compile_func_cuf ( result , args , lcname ) ;"	3180:2:92366:92416	3930299	0	True				
ANR	3930616	CallExpression	"zend_compile_func_cuf ( result , args , lcname )"		3930299	0					
ANR	3930617	Callee	zend_compile_func_cuf		3930299	0					
ANR	3930618	Identifier	zend_compile_func_cuf		3930299	0					
ANR	3930619	ArgumentList	result		3930299	1					
ANR	3930620	Argument	result		3930299	0					
ANR	3930621	Identifier	result		3930299	0					
ANR	3930622	Argument	args		3930299	1					
ANR	3930623	Identifier	args		3930299	0					
ANR	3930624	Argument	lcname		3930299	2					
ANR	3930625	Identifier	lcname		3930299	0					
ANR	3930626	ElseStatement	else		3930299	0					
ANR	3930627	IfStatement	"if ( zend_string_equals_literal ( lcname , ""assert"" ) )"		3930299	0					
ANR	3930628	Condition	"zend_string_equals_literal ( lcname , ""assert"" )"	3181:12:92430:92473	3930299	0	True				
ANR	3930629	CallExpression	"zend_string_equals_literal ( lcname , ""assert"" )"		3930299	0					
ANR	3930630	Callee	zend_string_equals_literal		3930299	0					
ANR	3930631	Identifier	zend_string_equals_literal		3930299	0					
ANR	3930632	ArgumentList	lcname		3930299	1					
ANR	3930633	Argument	lcname		3930299	0					
ANR	3930634	Identifier	lcname		3930299	0					
ANR	3930635	Argument	"""assert"""		3930299	1					
ANR	3930636	PrimaryExpression	"""assert"""		3930299	0					
ANR	3930637	CompoundStatement		36:58:1832:1832	3930299	1					
ANR	3930638	ReturnStatement	"return zend_compile_assert ( result , args , lcname , fbc ) ;"	3182:2:92480:92533	3930299	0	True				
ANR	3930639	CallExpression	"zend_compile_assert ( result , args , lcname , fbc )"		3930299	0					
ANR	3930640	Callee	zend_compile_assert		3930299	0					
ANR	3930641	Identifier	zend_compile_assert		3930299	0					
ANR	3930642	ArgumentList	result		3930299	1					
ANR	3930643	Argument	result		3930299	0					
ANR	3930644	Identifier	result		3930299	0					
ANR	3930645	Argument	args		3930299	1					
ANR	3930646	Identifier	args		3930299	0					
ANR	3930647	Argument	lcname		3930299	2					
ANR	3930648	Identifier	lcname		3930299	0					
ANR	3930649	Argument	fbc		3930299	3					
ANR	3930650	Identifier	fbc		3930299	0					
ANR	3930651	ElseStatement	else		3930299	0					
ANR	3930652	CompoundStatement		38:8:1899:1899	3930299	0					
ANR	3930653	ReturnStatement	return FAILURE ;	3184:2:92547:92561	3930299	0	True				
ANR	3930654	Identifier	FAILURE		3930299	0					
ANR	3930655	ReturnType	int		3930299	1					
ANR	3930656	Identifier	zend_try_compile_special_func		3930299	2					
ANR	3930657	ParameterList	"znode * result , zend_string * lcname , zend_ast_list * args , zend_function * fbc"		3930299	3					
ANR	3930658	Parameter	znode * result	3145:34:90556:90568	3930299	0	True				
ANR	3930659	ParameterType	znode *		3930299	0					
ANR	3930660	Identifier	result		3930299	1					
ANR	3930661	Parameter	zend_string * lcname	3145:49:90571:90589	3930299	1	True				
ANR	3930662	ParameterType	zend_string *		3930299	0					
ANR	3930663	Identifier	lcname		3930299	1					
ANR	3930664	Parameter	zend_ast_list * args	3145:70:90592:90610	3930299	2	True				
ANR	3930665	ParameterType	zend_ast_list *		3930299	0					
ANR	3930666	Identifier	args		3930299	1					
ANR	3930667	Parameter	zend_function * fbc	3145:91:90613:90630	3930299	3	True				
ANR	3930668	ParameterType	zend_function *		3930299	0					
ANR	3930669	Identifier	fbc		3930299	1					
ANR	3930670	CFGEntryNode	ENTRY		3930299		True				
ANR	3930671	CFGExitNode	EXIT		3930299		True				
ANR	3930672	Symbol	zend_string_equals_literal		3930299						
ANR	3930673	Symbol	fbc -> internal_function . handler		3930299						
ANR	3930674	Symbol	zend_compile_func_strlen		3930299						
ANR	3930675	Symbol	zend_compile_func_cufa		3930299						
ANR	3930676	Symbol	result		3930299						
ANR	3930677	Symbol	_IS_BOOL		3930299						
ANR	3930678	Symbol	IS_NULL		3930299						
ANR	3930679	Symbol	IS_ARRAY		3930299						
ANR	3930680	Symbol	IS_LONG		3930299						
ANR	3930681	Symbol	IS_STRING		3930299						
ANR	3930682	Symbol	fbc		3930299						
ANR	3930683	Symbol	zend_compile_func_cuf		3930299						
ANR	3930684	Symbol	display_disabled_function		3930299						
ANR	3930685	Symbol	FAILURE		3930299						
ANR	3930686	Symbol	zend_compile_func_defined		3930299						
ANR	3930687	Symbol	* fbc		3930299						
ANR	3930688	Symbol	args		3930299						
ANR	3930689	Symbol	zend_compile_assert		3930299						
ANR	3930690	Symbol	lcname		3930299						
ANR	3930691	Symbol	fbc -> internal_function		3930299						
ANR	3930692	Symbol	zend_compile_func_typecheck		3930299						
ANR	3930693	Symbol	IS_DOUBLE		3930299						
ANR	3930694	Symbol	ZEND_FN		3930299						
ANR	3930695	Symbol	IS_OBJECT		3930299						
ANR	3930696	Symbol	IS_RESOURCE		3930299						
ANR	3930697	Function	zend_compile_call	3189:0:92579:94345							
ANR	3930698	FunctionDef	"zend_compile_call (znode * result , zend_ast * ast , uint32_t type)"		3930697	0					
ANR	3930699	CompoundStatement		3190:0:92657:94345	3930697	0					
ANR	3930700	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	3191:1:92660:92694	3930697	0	True				
ANR	3930701	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3930697	0					
ANR	3930702	IdentifierDeclType	zend_ast *		3930697	0					
ANR	3930703	Identifier	name_ast		3930697	1					
ANR	3930704	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3930697	2		=			
ANR	3930705	Identifier	name_ast		3930697	0					
ANR	3930706	ArrayIndexing	ast -> child [ 0 ]		3930697	1					
ANR	3930707	PtrMemberAccess	ast -> child		3930697	0					
ANR	3930708	Identifier	ast		3930697	0					
ANR	3930709	Identifier	child		3930697	1					
ANR	3930710	PrimaryExpression	0		3930697	1					
ANR	3930711	IdentifierDeclStatement	zend_ast * args_ast = ast -> child [ 1 ] ;	3192:1:92697:92731	3930697	1	True				
ANR	3930712	IdentifierDecl	* args_ast = ast -> child [ 1 ]		3930697	0					
ANR	3930713	IdentifierDeclType	zend_ast *		3930697	0					
ANR	3930714	Identifier	args_ast		3930697	1					
ANR	3930715	AssignmentExpression	* args_ast = ast -> child [ 1 ]		3930697	2		=			
ANR	3930716	Identifier	args_ast		3930697	0					
ANR	3930717	ArrayIndexing	ast -> child [ 1 ]		3930697	1					
ANR	3930718	PtrMemberAccess	ast -> child		3930697	0					
ANR	3930719	Identifier	ast		3930697	0					
ANR	3930720	Identifier	child		3930697	1					
ANR	3930721	PrimaryExpression	1		3930697	1					
ANR	3930722	IdentifierDeclStatement	znode name_node ;	3194:1:92735:92750	3930697	2	True				
ANR	3930723	IdentifierDecl	name_node		3930697	0					
ANR	3930724	IdentifierDeclType	znode		3930697	0					
ANR	3930725	Identifier	name_node		3930697	1					
ANR	3930726	IfStatement	if ( name_ast -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING )		3930697	3					
ANR	3930727	Condition	name_ast -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING	3196:5:92758:92842	3930697	0	True				
ANR	3930728	OrExpression	name_ast -> kind != ZEND_AST_ZVAL || Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING		3930697	0		||			
ANR	3930729	EqualityExpression	name_ast -> kind != ZEND_AST_ZVAL		3930697	0		!=			
ANR	3930730	PtrMemberAccess	name_ast -> kind		3930697	0					
ANR	3930731	Identifier	name_ast		3930697	0					
ANR	3930732	Identifier	kind		3930697	1					
ANR	3930733	Identifier	ZEND_AST_ZVAL		3930697	1					
ANR	3930734	EqualityExpression	Z_TYPE_P ( zend_ast_get_zval ( name_ast ) ) != IS_STRING		3930697	1		!=			
ANR	3930735	CallExpression	Z_TYPE_P ( zend_ast_get_zval ( name_ast ) )		3930697	0					
ANR	3930736	Callee	Z_TYPE_P		3930697	0					
ANR	3930737	Identifier	Z_TYPE_P		3930697	0					
ANR	3930738	ArgumentList	zend_ast_get_zval ( name_ast )		3930697	1					
ANR	3930739	Argument	zend_ast_get_zval ( name_ast )		3930697	0					
ANR	3930740	CallExpression	zend_ast_get_zval ( name_ast )		3930697	0					
ANR	3930741	Callee	zend_ast_get_zval		3930697	0					
ANR	3930742	Identifier	zend_ast_get_zval		3930697	0					
ANR	3930743	ArgumentList	name_ast		3930697	1					
ANR	3930744	Argument	name_ast		3930697	0					
ANR	3930745	Identifier	name_ast		3930697	0					
ANR	3930746	Identifier	IS_STRING		3930697	1					
ANR	3930747	CompoundStatement		7:92:187:187	3930697	1					
ANR	3930748	ExpressionStatement	"zend_compile_expr ( & name_node , name_ast )"	3197:2:92849:92888	3930697	0	True				
ANR	3930749	CallExpression	"zend_compile_expr ( & name_node , name_ast )"		3930697	0					
ANR	3930750	Callee	zend_compile_expr		3930697	0					
ANR	3930751	Identifier	zend_compile_expr		3930697	0					
ANR	3930752	ArgumentList	& name_node		3930697	1					
ANR	3930753	Argument	& name_node		3930697	0					
ANR	3930754	UnaryOperationExpression	& name_node		3930697	0					
ANR	3930755	UnaryOperator	&		3930697	0					
ANR	3930756	Identifier	name_node		3930697	1					
ANR	3930757	Argument	name_ast		3930697	1					
ANR	3930758	Identifier	name_ast		3930697	0					
ANR	3930759	ExpressionStatement	"zend_compile_dynamic_call ( result , & name_node , args_ast )"	3198:2:92892:92947	3930697	1	True				
ANR	3930760	CallExpression	"zend_compile_dynamic_call ( result , & name_node , args_ast )"		3930697	0					
ANR	3930761	Callee	zend_compile_dynamic_call		3930697	0					
ANR	3930762	Identifier	zend_compile_dynamic_call		3930697	0					
ANR	3930763	ArgumentList	result		3930697	1					
ANR	3930764	Argument	result		3930697	0					
ANR	3930765	Identifier	result		3930697	0					
ANR	3930766	Argument	& name_node		3930697	1					
ANR	3930767	UnaryOperationExpression	& name_node		3930697	0					
ANR	3930768	UnaryOperator	&		3930697	0					
ANR	3930769	Identifier	name_node		3930697	1					
ANR	3930770	Argument	args_ast		3930697	2					
ANR	3930771	Identifier	args_ast		3930697	0					
ANR	3930772	ReturnStatement	return ;	3199:2:92951:92957	3930697	2	True				
ANR	3930773	CompoundStatement		14:2:310:389	3930697	4					
ANR	3930774	IdentifierDeclStatement	"zend_bool runtime_resolution = zend_compile_function_name ( & name_node , name_ast ) ;"	3203:2:92968:93047	3930697	0	True				
ANR	3930775	IdentifierDecl	"runtime_resolution = zend_compile_function_name ( & name_node , name_ast )"		3930697	0					
ANR	3930776	IdentifierDeclType	zend_bool		3930697	0					
ANR	3930777	Identifier	runtime_resolution		3930697	1					
ANR	3930778	AssignmentExpression	"runtime_resolution = zend_compile_function_name ( & name_node , name_ast )"		3930697	2		=			
ANR	3930779	Identifier	runtime_resolution		3930697	0					
ANR	3930780	CallExpression	"zend_compile_function_name ( & name_node , name_ast )"		3930697	1					
ANR	3930781	Callee	zend_compile_function_name		3930697	0					
ANR	3930782	Identifier	zend_compile_function_name		3930697	0					
ANR	3930783	ArgumentList	& name_node		3930697	1					
ANR	3930784	Argument	& name_node		3930697	0					
ANR	3930785	UnaryOperationExpression	& name_node		3930697	0					
ANR	3930786	UnaryOperator	&		3930697	0					
ANR	3930787	Identifier	name_node		3930697	1					
ANR	3930788	Argument	name_ast		3930697	1					
ANR	3930789	Identifier	name_ast		3930697	0					
ANR	3930790	IfStatement	if ( runtime_resolution )		3930697	1					
ANR	3930791	Condition	runtime_resolution	3204:6:93055:93072	3930697	0	True				
ANR	3930792	Identifier	runtime_resolution		3930697	0					
ANR	3930793	CompoundStatement		15:26:417:417	3930697	1					
ANR	3930794	IfStatement	"if ( zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""assert"" ) )"		3930697	0					
ANR	3930795	Condition	"zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""assert"" )"	3205:7:93084:93150	3930697	0	True				
ANR	3930796	CallExpression	"zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""assert"" )"		3930697	0					
ANR	3930797	Callee	zend_string_equals_literal_ci		3930697	0					
ANR	3930798	Identifier	zend_string_equals_literal_ci		3930697	0					
ANR	3930799	ArgumentList	zend_ast_get_str ( name_ast )		3930697	1					
ANR	3930800	Argument	zend_ast_get_str ( name_ast )		3930697	0					
ANR	3930801	CallExpression	zend_ast_get_str ( name_ast )		3930697	0					
ANR	3930802	Callee	zend_ast_get_str		3930697	0					
ANR	3930803	Identifier	zend_ast_get_str		3930697	0					
ANR	3930804	ArgumentList	name_ast		3930697	1					
ANR	3930805	Argument	name_ast		3930697	0					
ANR	3930806	Identifier	name_ast		3930697	0					
ANR	3930807	Argument	"""assert"""		3930697	1					
ANR	3930808	PrimaryExpression	"""assert"""		3930697	0					
ANR	3930809	CompoundStatement		16:76:495:495	3930697	1					
ANR	3930810	ExpressionStatement	"zend_compile_assert ( result , zend_ast_get_list ( args_ast ) , Z_STR ( name_node . u . constant ) , NULL )"	3206:4:93159:93250	3930697	0	True				
ANR	3930811	CallExpression	"zend_compile_assert ( result , zend_ast_get_list ( args_ast ) , Z_STR ( name_node . u . constant ) , NULL )"		3930697	0					
ANR	3930812	Callee	zend_compile_assert		3930697	0					
ANR	3930813	Identifier	zend_compile_assert		3930697	0					
ANR	3930814	ArgumentList	result		3930697	1					
ANR	3930815	Argument	result		3930697	0					
ANR	3930816	Identifier	result		3930697	0					
ANR	3930817	Argument	zend_ast_get_list ( args_ast )		3930697	1					
ANR	3930818	CallExpression	zend_ast_get_list ( args_ast )		3930697	0					
ANR	3930819	Callee	zend_ast_get_list		3930697	0					
ANR	3930820	Identifier	zend_ast_get_list		3930697	0					
ANR	3930821	ArgumentList	args_ast		3930697	1					
ANR	3930822	Argument	args_ast		3930697	0					
ANR	3930823	Identifier	args_ast		3930697	0					
ANR	3930824	Argument	Z_STR ( name_node . u . constant )		3930697	2					
ANR	3930825	CallExpression	Z_STR ( name_node . u . constant )		3930697	0					
ANR	3930826	Callee	Z_STR		3930697	0					
ANR	3930827	Identifier	Z_STR		3930697	0					
ANR	3930828	ArgumentList	name_node . u . constant		3930697	1					
ANR	3930829	Argument	name_node . u . constant		3930697	0					
ANR	3930830	MemberAccess	name_node . u . constant		3930697	0					
ANR	3930831	MemberAccess	name_node . u		3930697	0					
ANR	3930832	Identifier	name_node		3930697	0					
ANR	3930833	Identifier	u		3930697	1					
ANR	3930834	Identifier	constant		3930697	1					
ANR	3930835	Argument	NULL		3930697	3					
ANR	3930836	Identifier	NULL		3930697	0					
ANR	3930837	ElseStatement	else		3930697	0					
ANR	3930838	CompoundStatement		18:10:604:604	3930697	0					
ANR	3930839	ExpressionStatement	"zend_compile_ns_call ( result , & name_node , args_ast )"	3208:4:93268:93318	3930697	0	True				
ANR	3930840	CallExpression	"zend_compile_ns_call ( result , & name_node , args_ast )"		3930697	0					
ANR	3930841	Callee	zend_compile_ns_call		3930697	0					
ANR	3930842	Identifier	zend_compile_ns_call		3930697	0					
ANR	3930843	ArgumentList	result		3930697	1					
ANR	3930844	Argument	result		3930697	0					
ANR	3930845	Identifier	result		3930697	0					
ANR	3930846	Argument	& name_node		3930697	1					
ANR	3930847	UnaryOperationExpression	& name_node		3930697	0					
ANR	3930848	UnaryOperator	&		3930697	0					
ANR	3930849	Identifier	name_node		3930697	1					
ANR	3930850	Argument	args_ast		3930697	2					
ANR	3930851	Identifier	args_ast		3930697	0					
ANR	3930852	ReturnStatement	return ;	3210:3:93328:93334	3930697	1	True				
ANR	3930853	CompoundStatement		29:2:774:789	3930697	5					
ANR	3930854	IdentifierDeclStatement	zval * name = & name_node . u . constant ;	3215:2:93349:93383	3930697	0	True				
ANR	3930855	IdentifierDecl	* name = & name_node . u . constant		3930697	0					
ANR	3930856	IdentifierDeclType	zval *		3930697	0					
ANR	3930857	Identifier	name		3930697	1					
ANR	3930858	AssignmentExpression	* name = & name_node . u . constant		3930697	2		=			
ANR	3930859	Identifier	name		3930697	0					
ANR	3930860	UnaryOperationExpression	& name_node . u . constant		3930697	1					
ANR	3930861	UnaryOperator	&		3930697	0					
ANR	3930862	MemberAccess	name_node . u . constant		3930697	1					
ANR	3930863	MemberAccess	name_node . u		3930697	0					
ANR	3930864	Identifier	name_node		3930697	0					
ANR	3930865	Identifier	u		3930697	1					
ANR	3930866	Identifier	constant		3930697	1					
ANR	3930867	IdentifierDeclStatement	zend_string * lcname ;	3216:2:93387:93406	3930697	1	True				
ANR	3930868	IdentifierDecl	* lcname		3930697	0					
ANR	3930869	IdentifierDeclType	zend_string *		3930697	0					
ANR	3930870	Identifier	lcname		3930697	1					
ANR	3930871	IdentifierDeclStatement	zend_function * fbc ;	3217:2:93410:93428	3930697	2	True				
ANR	3930872	IdentifierDecl	* fbc		3930697	0					
ANR	3930873	IdentifierDeclType	zend_function *		3930697	0					
ANR	3930874	Identifier	fbc		3930697	1					
ANR	3930875	IdentifierDeclStatement	zend_op * opline ;	3218:2:93432:93447	3930697	3	True				
ANR	3930876	IdentifierDecl	* opline		3930697	0					
ANR	3930877	IdentifierDeclType	zend_op *		3930697	0					
ANR	3930878	Identifier	opline		3930697	1					
ANR	3930879	ExpressionStatement	lcname = zend_string_tolower ( Z_STR_P ( name ) )	3220:2:93452:93495	3930697	4	True				
ANR	3930880	AssignmentExpression	lcname = zend_string_tolower ( Z_STR_P ( name ) )		3930697	0		=			
ANR	3930881	Identifier	lcname		3930697	0					
ANR	3930882	CallExpression	zend_string_tolower ( Z_STR_P ( name ) )		3930697	1					
ANR	3930883	Callee	zend_string_tolower		3930697	0					
ANR	3930884	Identifier	zend_string_tolower		3930697	0					
ANR	3930885	ArgumentList	Z_STR_P ( name )		3930697	1					
ANR	3930886	Argument	Z_STR_P ( name )		3930697	0					
ANR	3930887	CallExpression	Z_STR_P ( name )		3930697	0					
ANR	3930888	Callee	Z_STR_P		3930697	0					
ANR	3930889	Identifier	Z_STR_P		3930697	0					
ANR	3930890	ArgumentList	name		3930697	1					
ANR	3930891	Argument	name		3930697	0					
ANR	3930892	Identifier	name		3930697	0					
ANR	3930893	ExpressionStatement	"fbc = zend_hash_find_ptr ( CG ( function_table ) , lcname )"	3222:2:93500:93552	3930697	5	True				
ANR	3930894	AssignmentExpression	"fbc = zend_hash_find_ptr ( CG ( function_table ) , lcname )"		3930697	0		=			
ANR	3930895	Identifier	fbc		3930697	0					
ANR	3930896	CallExpression	"zend_hash_find_ptr ( CG ( function_table ) , lcname )"		3930697	1					
ANR	3930897	Callee	zend_hash_find_ptr		3930697	0					
ANR	3930898	Identifier	zend_hash_find_ptr		3930697	0					
ANR	3930899	ArgumentList	CG ( function_table )		3930697	1					
ANR	3930900	Argument	CG ( function_table )		3930697	0					
ANR	3930901	CallExpression	CG ( function_table )		3930697	0					
ANR	3930902	Callee	CG		3930697	0					
ANR	3930903	Identifier	CG		3930697	0					
ANR	3930904	ArgumentList	function_table		3930697	1					
ANR	3930905	Argument	function_table		3930697	0					
ANR	3930906	Identifier	function_table		3930697	0					
ANR	3930907	Argument	lcname		3930697	1					
ANR	3930908	Identifier	lcname		3930697	0					
ANR	3930909	IfStatement	if ( ! fbc || ( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) ) )		3930697	6					
ANR	3930910	Condition	! fbc || ( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) )	3223:6:93560:93777	3930697	0	True				
ANR	3930911	OrExpression	! fbc || ( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) )		3930697	0		||			
ANR	3930912	UnaryOperationExpression	! fbc		3930697	0					
ANR	3930913	UnaryOperator	!		3930697	0					
ANR	3930914	Identifier	fbc		3930697	1					
ANR	3930915	OrExpression	( fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS ) ) || ( fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS ) )		3930697	1		||			
ANR	3930916	AndExpression	fbc -> type == ZEND_INTERNAL_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS )		3930697	0		&&			
ANR	3930917	EqualityExpression	fbc -> type == ZEND_INTERNAL_FUNCTION		3930697	0		==			
ANR	3930918	PtrMemberAccess	fbc -> type		3930697	0					
ANR	3930919	Identifier	fbc		3930697	0					
ANR	3930920	Identifier	type		3930697	1					
ANR	3930921	Identifier	ZEND_INTERNAL_FUNCTION		3930697	1					
ANR	3930922	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS		3930697	1		&			
ANR	3930923	CallExpression	CG ( compiler_options )		3930697	0					
ANR	3930924	Callee	CG		3930697	0					
ANR	3930925	Identifier	CG		3930697	0					
ANR	3930926	ArgumentList	compiler_options		3930697	1					
ANR	3930927	Argument	compiler_options		3930697	0					
ANR	3930928	Identifier	compiler_options		3930697	0					
ANR	3930929	Identifier	ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS		3930697	1					
ANR	3930930	AndExpression	fbc -> type == ZEND_USER_FUNCTION && ( CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS )		3930697	1		&&			
ANR	3930931	EqualityExpression	fbc -> type == ZEND_USER_FUNCTION		3930697	0		==			
ANR	3930932	PtrMemberAccess	fbc -> type		3930697	0					
ANR	3930933	Identifier	fbc		3930697	0					
ANR	3930934	Identifier	type		3930697	1					
ANR	3930935	Identifier	ZEND_USER_FUNCTION		3930697	1					
ANR	3930936	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_IGNORE_USER_FUNCTIONS		3930697	1		&			
ANR	3930937	CallExpression	CG ( compiler_options )		3930697	0					
ANR	3930938	Callee	CG		3930697	0					
ANR	3930939	Identifier	CG		3930697	0					
ANR	3930940	ArgumentList	compiler_options		3930697	1					
ANR	3930941	Argument	compiler_options		3930697	0					
ANR	3930942	Identifier	compiler_options		3930697	0					
ANR	3930943	Identifier	ZEND_COMPILE_IGNORE_USER_FUNCTIONS		3930697	1					
ANR	3930944	CompoundStatement		37:4:1125:1125	3930697	1					
ANR	3930945	ExpressionStatement	zend_string_release ( lcname )	3227:3:93788:93815	3930697	0	True				
ANR	3930946	CallExpression	zend_string_release ( lcname )		3930697	0					
ANR	3930947	Callee	zend_string_release		3930697	0					
ANR	3930948	Identifier	zend_string_release		3930697	0					
ANR	3930949	ArgumentList	lcname		3930697	1					
ANR	3930950	Argument	lcname		3930697	0					
ANR	3930951	Identifier	lcname		3930697	0					
ANR	3930952	ExpressionStatement	"zend_compile_dynamic_call ( result , & name_node , args_ast )"	3228:3:93820:93875	3930697	1	True				
ANR	3930953	CallExpression	"zend_compile_dynamic_call ( result , & name_node , args_ast )"		3930697	0					
ANR	3930954	Callee	zend_compile_dynamic_call		3930697	0					
ANR	3930955	Identifier	zend_compile_dynamic_call		3930697	0					
ANR	3930956	ArgumentList	result		3930697	1					
ANR	3930957	Argument	result		3930697	0					
ANR	3930958	Identifier	result		3930697	0					
ANR	3930959	Argument	& name_node		3930697	1					
ANR	3930960	UnaryOperationExpression	& name_node		3930697	0					
ANR	3930961	UnaryOperator	&		3930697	0					
ANR	3930962	Identifier	name_node		3930697	1					
ANR	3930963	Argument	args_ast		3930697	2					
ANR	3930964	Identifier	args_ast		3930697	0					
ANR	3930965	ReturnStatement	return ;	3229:3:93880:93886	3930697	2	True				
ANR	3930966	IfStatement	"if ( zend_try_compile_special_func ( result , lcname , zend_ast_get_list ( args_ast ) , fbc ) == SUCCESS )"		3930697	7					
ANR	3930967	Condition	"zend_try_compile_special_func ( result , lcname , zend_ast_get_list ( args_ast ) , fbc ) == SUCCESS"	3232:6:93899:93992	3930697	0	True				
ANR	3930968	EqualityExpression	"zend_try_compile_special_func ( result , lcname , zend_ast_get_list ( args_ast ) , fbc ) == SUCCESS"		3930697	0		==			
ANR	3930969	CallExpression	"zend_try_compile_special_func ( result , lcname , zend_ast_get_list ( args_ast ) , fbc )"		3930697	0					
ANR	3930970	Callee	zend_try_compile_special_func		3930697	0					
ANR	3930971	Identifier	zend_try_compile_special_func		3930697	0					
ANR	3930972	ArgumentList	result		3930697	1					
ANR	3930973	Argument	result		3930697	0					
ANR	3930974	Identifier	result		3930697	0					
ANR	3930975	Argument	lcname		3930697	1					
ANR	3930976	Identifier	lcname		3930697	0					
ANR	3930977	Argument	zend_ast_get_list ( args_ast )		3930697	2					
ANR	3930978	CallExpression	zend_ast_get_list ( args_ast )		3930697	0					
ANR	3930979	Callee	zend_ast_get_list		3930697	0					
ANR	3930980	Identifier	zend_ast_get_list		3930697	0					
ANR	3930981	ArgumentList	args_ast		3930697	1					
ANR	3930982	Argument	args_ast		3930697	0					
ANR	3930983	Identifier	args_ast		3930697	0					
ANR	3930984	Argument	fbc		3930697	3					
ANR	3930985	Identifier	fbc		3930697	0					
ANR	3930986	Identifier	SUCCESS		3930697	1					
ANR	3930987	CompoundStatement		45:4:1340:1340	3930697	1					
ANR	3930988	ExpressionStatement	zend_string_release ( lcname )	3235:3:94003:94030	3930697	0	True				
ANR	3930989	CallExpression	zend_string_release ( lcname )		3930697	0					
ANR	3930990	Callee	zend_string_release		3930697	0					
ANR	3930991	Identifier	zend_string_release		3930697	0					
ANR	3930992	ArgumentList	lcname		3930697	1					
ANR	3930993	Argument	lcname		3930697	0					
ANR	3930994	Identifier	lcname		3930697	0					
ANR	3930995	ExpressionStatement	zval_ptr_dtor ( & name_node . u . constant )	3236:3:94035:94071	3930697	1	True				
ANR	3930996	CallExpression	zval_ptr_dtor ( & name_node . u . constant )		3930697	0					
ANR	3930997	Callee	zval_ptr_dtor		3930697	0					
ANR	3930998	Identifier	zval_ptr_dtor		3930697	0					
ANR	3930999	ArgumentList	& name_node . u . constant		3930697	1					
ANR	3931000	Argument	& name_node . u . constant		3930697	0					
ANR	3931001	UnaryOperationExpression	& name_node . u . constant		3930697	0					
ANR	3931002	UnaryOperator	&		3930697	0					
ANR	3931003	MemberAccess	name_node . u . constant		3930697	1					
ANR	3931004	MemberAccess	name_node . u		3930697	0					
ANR	3931005	Identifier	name_node		3930697	0					
ANR	3931006	Identifier	u		3930697	1					
ANR	3931007	Identifier	constant		3930697	1					
ANR	3931008	ReturnStatement	return ;	3237:3:94076:94082	3930697	2	True				
ANR	3931009	ExpressionStatement	zval_ptr_dtor ( & name_node . u . constant )	3240:2:94091:94127	3930697	8	True				
ANR	3931010	CallExpression	zval_ptr_dtor ( & name_node . u . constant )		3930697	0					
ANR	3931011	Callee	zval_ptr_dtor		3930697	0					
ANR	3931012	Identifier	zval_ptr_dtor		3930697	0					
ANR	3931013	ArgumentList	& name_node . u . constant		3930697	1					
ANR	3931014	Argument	& name_node . u . constant		3930697	0					
ANR	3931015	UnaryOperationExpression	& name_node . u . constant		3930697	0					
ANR	3931016	UnaryOperator	&		3930697	0					
ANR	3931017	MemberAccess	name_node . u . constant		3930697	1					
ANR	3931018	MemberAccess	name_node . u		3930697	0					
ANR	3931019	Identifier	name_node		3930697	0					
ANR	3931020	Identifier	u		3930697	1					
ANR	3931021	Identifier	constant		3930697	1					
ANR	3931022	ExpressionStatement	"ZVAL_NEW_STR ( & name_node . u . constant , lcname )"	3241:2:94131:94174	3930697	9	True				
ANR	3931023	CallExpression	"ZVAL_NEW_STR ( & name_node . u . constant , lcname )"		3930697	0					
ANR	3931024	Callee	ZVAL_NEW_STR		3930697	0					
ANR	3931025	Identifier	ZVAL_NEW_STR		3930697	0					
ANR	3931026	ArgumentList	& name_node . u . constant		3930697	1					
ANR	3931027	Argument	& name_node . u . constant		3930697	0					
ANR	3931028	UnaryOperationExpression	& name_node . u . constant		3930697	0					
ANR	3931029	UnaryOperator	&		3930697	0					
ANR	3931030	MemberAccess	name_node . u . constant		3930697	1					
ANR	3931031	MemberAccess	name_node . u		3930697	0					
ANR	3931032	Identifier	name_node		3930697	0					
ANR	3931033	Identifier	u		3930697	1					
ANR	3931034	Identifier	constant		3930697	1					
ANR	3931035	Argument	lcname		3930697	1					
ANR	3931036	Identifier	lcname		3930697	0					
ANR	3931037	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , & name_node )"	3243:2:94179:94241	3930697	10	True				
ANR	3931038	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , & name_node )"		3930697	0		=			
ANR	3931039	Identifier	opline		3930697	0					
ANR	3931040	CallExpression	"zend_emit_op ( NULL , ZEND_INIT_FCALL , NULL , & name_node )"		3930697	1					
ANR	3931041	Callee	zend_emit_op		3930697	0					
ANR	3931042	Identifier	zend_emit_op		3930697	0					
ANR	3931043	ArgumentList	NULL		3930697	1					
ANR	3931044	Argument	NULL		3930697	0					
ANR	3931045	Identifier	NULL		3930697	0					
ANR	3931046	Argument	ZEND_INIT_FCALL		3930697	1					
ANR	3931047	Identifier	ZEND_INIT_FCALL		3930697	0					
ANR	3931048	Argument	NULL		3930697	2					
ANR	3931049	Identifier	NULL		3930697	0					
ANR	3931050	Argument	& name_node		3930697	3					
ANR	3931051	UnaryOperationExpression	& name_node		3930697	0					
ANR	3931052	UnaryOperator	&		3930697	0					
ANR	3931053	Identifier	name_node		3930697	1					
ANR	3931054	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	3244:2:94245:94288	3930697	11	True				
ANR	3931055	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3930697	0					
ANR	3931056	Callee	zend_alloc_cache_slot		3930697	0					
ANR	3931057	Identifier	zend_alloc_cache_slot		3930697	0					
ANR	3931058	ArgumentList	opline -> op2 . constant		3930697	1					
ANR	3931059	Argument	opline -> op2 . constant		3930697	0					
ANR	3931060	MemberAccess	opline -> op2 . constant		3930697	0					
ANR	3931061	PtrMemberAccess	opline -> op2		3930697	0					
ANR	3931062	Identifier	opline		3930697	0					
ANR	3931063	Identifier	op2		3930697	1					
ANR	3931064	Identifier	constant		3930697	1					
ANR	3931065	ExpressionStatement	"zend_compile_call_common ( result , args_ast , fbc )"	3246:2:94293:94340	3930697	12	True				
ANR	3931066	CallExpression	"zend_compile_call_common ( result , args_ast , fbc )"		3930697	0					
ANR	3931067	Callee	zend_compile_call_common		3930697	0					
ANR	3931068	Identifier	zend_compile_call_common		3930697	0					
ANR	3931069	ArgumentList	result		3930697	1					
ANR	3931070	Argument	result		3930697	0					
ANR	3931071	Identifier	result		3930697	0					
ANR	3931072	Argument	args_ast		3930697	1					
ANR	3931073	Identifier	args_ast		3930697	0					
ANR	3931074	Argument	fbc		3930697	2					
ANR	3931075	Identifier	fbc		3930697	0					
ANR	3931076	ReturnType	void		3930697	1					
ANR	3931077	Identifier	zend_compile_call		3930697	2					
ANR	3931078	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3930697	3					
ANR	3931079	Parameter	znode * result	3189:23:92602:92614	3930697	0	True				
ANR	3931080	ParameterType	znode *		3930697	0					
ANR	3931081	Identifier	result		3930697	1					
ANR	3931082	Parameter	zend_ast * ast	3189:38:92617:92629	3930697	1	True				
ANR	3931083	ParameterType	zend_ast *		3930697	0					
ANR	3931084	Identifier	ast		3930697	1					
ANR	3931085	Parameter	uint32_t type	3189:53:92632:92644	3930697	2	True				
ANR	3931086	ParameterType	uint32_t		3930697	0					
ANR	3931087	Identifier	type		3930697	1					
ANR	3931088	CFGEntryNode	ENTRY		3930697		True				
ANR	3931089	CFGExitNode	EXIT		3930697		True				
ANR	3931090	Symbol	ast		3930697						
ANR	3931091	Symbol	type		3930697						
ANR	3931092	Symbol	Z_STR		3930697						
ANR	3931093	Symbol	zend_string_tolower		3930697						
ANR	3931094	Symbol	zend_try_compile_special_func		3930697						
ANR	3931095	Symbol	ZEND_INTERNAL_FUNCTION		3930697						
ANR	3931096	Symbol	opline		3930697						
ANR	3931097	Symbol	ZEND_INIT_FCALL		3930697						
ANR	3931098	Symbol	& name_node		3930697						
ANR	3931099	Symbol	ZEND_USER_FUNCTION		3930697						
ANR	3931100	Symbol	ZEND_AST_ZVAL		3930697						
ANR	3931101	Symbol	IS_STRING		3930697						
ANR	3931102	Symbol	zend_hash_find_ptr		3930697						
ANR	3931103	Symbol	zend_compile_function_name		3930697						
ANR	3931104	Symbol	NULL		3930697						
ANR	3931105	Symbol	fbc		3930697						
ANR	3931106	Symbol	name_node . u		3930697						
ANR	3931107	Symbol	zend_string_equals_literal_ci		3930697						
ANR	3931108	Symbol	name_ast -> kind		3930697						
ANR	3931109	Symbol	& name_node . u . constant		3930697						
ANR	3931110	Symbol	name		3930697						
ANR	3931111	Symbol	* ast -> child		3930697						
ANR	3931112	Symbol	Z_STR_P		3930697						
ANR	3931113	Symbol	ast -> child		3930697						
ANR	3931114	Symbol	args_ast		3930697						
ANR	3931115	Symbol	zend_ast_get_zval		3930697						
ANR	3931116	Symbol	function_table		3930697						
ANR	3931117	Symbol	name_node		3930697						
ANR	3931118	Symbol	name_node . u . constant		3930697						
ANR	3931119	Symbol	zend_emit_op		3930697						
ANR	3931120	Symbol	opline -> op2		3930697						
ANR	3931121	Symbol	fbc -> type		3930697						
ANR	3931122	Symbol	result		3930697						
ANR	3931123	Symbol	* name_ast		3930697						
ANR	3931124	Symbol	compiler_options		3930697						
ANR	3931125	Symbol	* ast		3930697						
ANR	3931126	Symbol	zend_ast_get_str		3930697						
ANR	3931127	Symbol	* * ast		3930697						
ANR	3931128	Symbol	& name_node . u		3930697						
ANR	3931129	Symbol	SUCCESS		3930697						
ANR	3931130	Symbol	CG		3930697						
ANR	3931131	Symbol	ZEND_COMPILE_IGNORE_USER_FUNCTIONS		3930697						
ANR	3931132	Symbol	Z_TYPE_P		3930697						
ANR	3931133	Symbol	* fbc		3930697						
ANR	3931134	Symbol	zend_ast_get_list		3930697						
ANR	3931135	Symbol	lcname		3930697						
ANR	3931136	Symbol	ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS		3930697						
ANR	3931137	Symbol	* opline		3930697						
ANR	3931138	Symbol	name_ast		3930697						
ANR	3931139	Symbol	opline -> op2 . constant		3930697						
ANR	3931140	Symbol	runtime_resolution		3930697						
ANR	3931141	Function	zend_compile_method_call	3251:0:94358:95315							
ANR	3931142	FunctionDef	"zend_compile_method_call (znode * result , zend_ast * ast , uint32_t type)"		3931141	0					
ANR	3931143	CompoundStatement		3252:0:94443:95315	3931141	0					
ANR	3931144	IdentifierDeclStatement	zend_ast * obj_ast = ast -> child [ 0 ] ;	3253:1:94446:94479	3931141	0	True				
ANR	3931145	IdentifierDecl	* obj_ast = ast -> child [ 0 ]		3931141	0					
ANR	3931146	IdentifierDeclType	zend_ast *		3931141	0					
ANR	3931147	Identifier	obj_ast		3931141	1					
ANR	3931148	AssignmentExpression	* obj_ast = ast -> child [ 0 ]		3931141	2		=			
ANR	3931149	Identifier	obj_ast		3931141	0					
ANR	3931150	ArrayIndexing	ast -> child [ 0 ]		3931141	1					
ANR	3931151	PtrMemberAccess	ast -> child		3931141	0					
ANR	3931152	Identifier	ast		3931141	0					
ANR	3931153	Identifier	child		3931141	1					
ANR	3931154	PrimaryExpression	0		3931141	1					
ANR	3931155	IdentifierDeclStatement	zend_ast * method_ast = ast -> child [ 1 ] ;	3254:1:94482:94518	3931141	1	True				
ANR	3931156	IdentifierDecl	* method_ast = ast -> child [ 1 ]		3931141	0					
ANR	3931157	IdentifierDeclType	zend_ast *		3931141	0					
ANR	3931158	Identifier	method_ast		3931141	1					
ANR	3931159	AssignmentExpression	* method_ast = ast -> child [ 1 ]		3931141	2		=			
ANR	3931160	Identifier	method_ast		3931141	0					
ANR	3931161	ArrayIndexing	ast -> child [ 1 ]		3931141	1					
ANR	3931162	PtrMemberAccess	ast -> child		3931141	0					
ANR	3931163	Identifier	ast		3931141	0					
ANR	3931164	Identifier	child		3931141	1					
ANR	3931165	PrimaryExpression	1		3931141	1					
ANR	3931166	IdentifierDeclStatement	zend_ast * args_ast = ast -> child [ 2 ] ;	3255:1:94521:94555	3931141	2	True				
ANR	3931167	IdentifierDecl	* args_ast = ast -> child [ 2 ]		3931141	0					
ANR	3931168	IdentifierDeclType	zend_ast *		3931141	0					
ANR	3931169	Identifier	args_ast		3931141	1					
ANR	3931170	AssignmentExpression	* args_ast = ast -> child [ 2 ]		3931141	2		=			
ANR	3931171	Identifier	args_ast		3931141	0					
ANR	3931172	ArrayIndexing	ast -> child [ 2 ]		3931141	1					
ANR	3931173	PtrMemberAccess	ast -> child		3931141	0					
ANR	3931174	Identifier	ast		3931141	0					
ANR	3931175	Identifier	child		3931141	1					
ANR	3931176	PrimaryExpression	2		3931141	1					
ANR	3931177	IdentifierDeclStatement	"znode obj_node , method_node ;"	3257:1:94559:94586	3931141	3	True				
ANR	3931178	IdentifierDecl	obj_node		3931141	0					
ANR	3931179	IdentifierDeclType	znode		3931141	0					
ANR	3931180	Identifier	obj_node		3931141	1					
ANR	3931181	IdentifierDecl	method_node		3931141	1					
ANR	3931182	IdentifierDeclType	znode		3931141	0					
ANR	3931183	Identifier	method_node		3931141	1					
ANR	3931184	IdentifierDeclStatement	zend_op * opline ;	3258:1:94589:94604	3931141	4	True				
ANR	3931185	IdentifierDecl	* opline		3931141	0					
ANR	3931186	IdentifierDeclType	zend_op *		3931141	0					
ANR	3931187	Identifier	opline		3931141	1					
ANR	3931188	IfStatement	if ( is_this_fetch ( obj_ast ) )		3931141	5					
ANR	3931189	Condition	is_this_fetch ( obj_ast )	3260:5:94612:94633	3931141	0	True				
ANR	3931190	CallExpression	is_this_fetch ( obj_ast )		3931141	0					
ANR	3931191	Callee	is_this_fetch		3931141	0					
ANR	3931192	Identifier	is_this_fetch		3931141	0					
ANR	3931193	ArgumentList	obj_ast		3931141	1					
ANR	3931194	Argument	obj_ast		3931141	0					
ANR	3931195	Identifier	obj_ast		3931141	0					
ANR	3931196	CompoundStatement		9:29:192:192	3931141	1					
ANR	3931197	ExpressionStatement	obj_node . op_type = IS_UNUSED	3261:2:94640:94668	3931141	0	True				
ANR	3931198	AssignmentExpression	obj_node . op_type = IS_UNUSED		3931141	0		=			
ANR	3931199	MemberAccess	obj_node . op_type		3931141	0					
ANR	3931200	Identifier	obj_node		3931141	0					
ANR	3931201	Identifier	op_type		3931141	1					
ANR	3931202	Identifier	IS_UNUSED		3931141	1					
ANR	3931203	ElseStatement	else		3931141	0					
ANR	3931204	CompoundStatement		11:8:234:234	3931141	0					
ANR	3931205	ExpressionStatement	"zend_compile_expr ( & obj_node , obj_ast )"	3263:2:94682:94719	3931141	0	True				
ANR	3931206	CallExpression	"zend_compile_expr ( & obj_node , obj_ast )"		3931141	0					
ANR	3931207	Callee	zend_compile_expr		3931141	0					
ANR	3931208	Identifier	zend_compile_expr		3931141	0					
ANR	3931209	ArgumentList	& obj_node		3931141	1					
ANR	3931210	Argument	& obj_node		3931141	0					
ANR	3931211	UnaryOperationExpression	& obj_node		3931141	0					
ANR	3931212	UnaryOperator	&		3931141	0					
ANR	3931213	Identifier	obj_node		3931141	1					
ANR	3931214	Argument	obj_ast		3931141	1					
ANR	3931215	Identifier	obj_ast		3931141	0					
ANR	3931216	ExpressionStatement	"zend_compile_expr ( & method_node , method_ast )"	3266:1:94726:94769	3931141	6	True				
ANR	3931217	CallExpression	"zend_compile_expr ( & method_node , method_ast )"		3931141	0					
ANR	3931218	Callee	zend_compile_expr		3931141	0					
ANR	3931219	Identifier	zend_compile_expr		3931141	0					
ANR	3931220	ArgumentList	& method_node		3931141	1					
ANR	3931221	Argument	& method_node		3931141	0					
ANR	3931222	UnaryOperationExpression	& method_node		3931141	0					
ANR	3931223	UnaryOperator	&		3931141	0					
ANR	3931224	Identifier	method_node		3931141	1					
ANR	3931225	Argument	method_ast		3931141	1					
ANR	3931226	Identifier	method_ast		3931141	0					
ANR	3931227	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_INIT_METHOD_CALL , & obj_node , NULL )"	3267:1:94772:94839	3931141	7	True				
ANR	3931228	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_INIT_METHOD_CALL , & obj_node , NULL )"		3931141	0		=			
ANR	3931229	Identifier	opline		3931141	0					
ANR	3931230	CallExpression	"zend_emit_op ( NULL , ZEND_INIT_METHOD_CALL , & obj_node , NULL )"		3931141	1					
ANR	3931231	Callee	zend_emit_op		3931141	0					
ANR	3931232	Identifier	zend_emit_op		3931141	0					
ANR	3931233	ArgumentList	NULL		3931141	1					
ANR	3931234	Argument	NULL		3931141	0					
ANR	3931235	Identifier	NULL		3931141	0					
ANR	3931236	Argument	ZEND_INIT_METHOD_CALL		3931141	1					
ANR	3931237	Identifier	ZEND_INIT_METHOD_CALL		3931141	0					
ANR	3931238	Argument	& obj_node		3931141	2					
ANR	3931239	UnaryOperationExpression	& obj_node		3931141	0					
ANR	3931240	UnaryOperator	&		3931141	0					
ANR	3931241	Identifier	obj_node		3931141	1					
ANR	3931242	Argument	NULL		3931141	3					
ANR	3931243	Identifier	NULL		3931141	0					
ANR	3931244	IfStatement	if ( method_node . op_type == IS_CONST )		3931141	8					
ANR	3931245	Condition	method_node . op_type == IS_CONST	3269:5:94847:94877	3931141	0	True				
ANR	3931246	EqualityExpression	method_node . op_type == IS_CONST		3931141	0		==			
ANR	3931247	MemberAccess	method_node . op_type		3931141	0					
ANR	3931248	Identifier	method_node		3931141	0					
ANR	3931249	Identifier	op_type		3931141	1					
ANR	3931250	Identifier	IS_CONST		3931141	1					
ANR	3931251	CompoundStatement		18:38:436:436	3931141	1					
ANR	3931252	IfStatement	if ( Z_TYPE ( method_node . u . constant ) != IS_STRING )		3931141	0					
ANR	3931253	Condition	Z_TYPE ( method_node . u . constant ) != IS_STRING	3270:6:94888:94930	3931141	0	True				
ANR	3931254	EqualityExpression	Z_TYPE ( method_node . u . constant ) != IS_STRING		3931141	0		!=			
ANR	3931255	CallExpression	Z_TYPE ( method_node . u . constant )		3931141	0					
ANR	3931256	Callee	Z_TYPE		3931141	0					
ANR	3931257	Identifier	Z_TYPE		3931141	0					
ANR	3931258	ArgumentList	method_node . u . constant		3931141	1					
ANR	3931259	Argument	method_node . u . constant		3931141	0					
ANR	3931260	MemberAccess	method_node . u . constant		3931141	0					
ANR	3931261	MemberAccess	method_node . u		3931141	0					
ANR	3931262	Identifier	method_node		3931141	0					
ANR	3931263	Identifier	u		3931141	1					
ANR	3931264	Identifier	constant		3931141	1					
ANR	3931265	Identifier	IS_STRING		3931141	1					
ANR	3931266	CompoundStatement		19:51:489:489	3931141	1					
ANR	3931267	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Method name must be a string"" )"	3271:3:94938:95006	3931141	0	True				
ANR	3931268	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Method name must be a string"" )"		3931141	0					
ANR	3931269	Callee	zend_error_noreturn		3931141	0					
ANR	3931270	Identifier	zend_error_noreturn		3931141	0					
ANR	3931271	ArgumentList	E_COMPILE_ERROR		3931141	1					
ANR	3931272	Argument	E_COMPILE_ERROR		3931141	0					
ANR	3931273	Identifier	E_COMPILE_ERROR		3931141	0					
ANR	3931274	Argument	"""Method name must be a string"""		3931141	1					
ANR	3931275	PrimaryExpression	"""Method name must be a string"""		3931141	0					
ANR	3931276	ExpressionStatement	opline -> op2_type = IS_CONST	3274:2:95015:95042	3931141	1	True				
ANR	3931277	AssignmentExpression	opline -> op2_type = IS_CONST		3931141	0		=			
ANR	3931278	PtrMemberAccess	opline -> op2_type		3931141	0					
ANR	3931279	Identifier	opline		3931141	0					
ANR	3931280	Identifier	op2_type		3931141	1					
ANR	3931281	Identifier	IS_CONST		3931141	1					
ANR	3931282	ExpressionStatement	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , Z_STR ( method_node . u . constant ) )"	3275:2:95046:95150	3931141	2	True				
ANR	3931283	AssignmentExpression	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , Z_STR ( method_node . u . constant ) )"		3931141	0		=			
ANR	3931284	MemberAccess	opline -> op2 . constant		3931141	0					
ANR	3931285	PtrMemberAccess	opline -> op2		3931141	0					
ANR	3931286	Identifier	opline		3931141	0					
ANR	3931287	Identifier	op2		3931141	1					
ANR	3931288	Identifier	constant		3931141	1					
ANR	3931289	CallExpression	"zend_add_func_name_literal ( CG ( active_op_array ) , Z_STR ( method_node . u . constant ) )"		3931141	1					
ANR	3931290	Callee	zend_add_func_name_literal		3931141	0					
ANR	3931291	Identifier	zend_add_func_name_literal		3931141	0					
ANR	3931292	ArgumentList	CG ( active_op_array )		3931141	1					
ANR	3931293	Argument	CG ( active_op_array )		3931141	0					
ANR	3931294	CallExpression	CG ( active_op_array )		3931141	0					
ANR	3931295	Callee	CG		3931141	0					
ANR	3931296	Identifier	CG		3931141	0					
ANR	3931297	ArgumentList	active_op_array		3931141	1					
ANR	3931298	Argument	active_op_array		3931141	0					
ANR	3931299	Identifier	active_op_array		3931141	0					
ANR	3931300	Argument	Z_STR ( method_node . u . constant )		3931141	1					
ANR	3931301	CallExpression	Z_STR ( method_node . u . constant )		3931141	0					
ANR	3931302	Callee	Z_STR		3931141	0					
ANR	3931303	Identifier	Z_STR		3931141	0					
ANR	3931304	ArgumentList	method_node . u . constant		3931141	1					
ANR	3931305	Argument	method_node . u . constant		3931141	0					
ANR	3931306	MemberAccess	method_node . u . constant		3931141	0					
ANR	3931307	MemberAccess	method_node . u		3931141	0					
ANR	3931308	Identifier	method_node		3931141	0					
ANR	3931309	Identifier	u		3931141	1					
ANR	3931310	Identifier	constant		3931141	1					
ANR	3931311	ExpressionStatement	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )	3277:2:95154:95209	3931141	3	True				
ANR	3931312	CallExpression	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )		3931141	0					
ANR	3931313	Callee	zend_alloc_polymorphic_cache_slot		3931141	0					
ANR	3931314	Identifier	zend_alloc_polymorphic_cache_slot		3931141	0					
ANR	3931315	ArgumentList	opline -> op2 . constant		3931141	1					
ANR	3931316	Argument	opline -> op2 . constant		3931141	0					
ANR	3931317	MemberAccess	opline -> op2 . constant		3931141	0					
ANR	3931318	PtrMemberAccess	opline -> op2		3931141	0					
ANR	3931319	Identifier	opline		3931141	0					
ANR	3931320	Identifier	op2		3931141	1					
ANR	3931321	Identifier	constant		3931141	1					
ANR	3931322	ElseStatement	else		3931141	0					
ANR	3931323	CompoundStatement		27:8:775:775	3931141	0					
ANR	3931324	ExpressionStatement	"SET_NODE ( opline -> op2 , & method_node )"	3279:2:95223:95258	3931141	0	True				
ANR	3931325	CallExpression	"SET_NODE ( opline -> op2 , & method_node )"		3931141	0					
ANR	3931326	Callee	SET_NODE		3931141	0					
ANR	3931327	Identifier	SET_NODE		3931141	0					
ANR	3931328	ArgumentList	opline -> op2		3931141	1					
ANR	3931329	Argument	opline -> op2		3931141	0					
ANR	3931330	PtrMemberAccess	opline -> op2		3931141	0					
ANR	3931331	Identifier	opline		3931141	0					
ANR	3931332	Identifier	op2		3931141	1					
ANR	3931333	Argument	& method_node		3931141	1					
ANR	3931334	UnaryOperationExpression	& method_node		3931141	0					
ANR	3931335	UnaryOperator	&		3931141	0					
ANR	3931336	Identifier	method_node		3931141	1					
ANR	3931337	ExpressionStatement	"zend_compile_call_common ( result , args_ast , NULL )"	3282:1:95265:95313	3931141	9	True				
ANR	3931338	CallExpression	"zend_compile_call_common ( result , args_ast , NULL )"		3931141	0					
ANR	3931339	Callee	zend_compile_call_common		3931141	0					
ANR	3931340	Identifier	zend_compile_call_common		3931141	0					
ANR	3931341	ArgumentList	result		3931141	1					
ANR	3931342	Argument	result		3931141	0					
ANR	3931343	Identifier	result		3931141	0					
ANR	3931344	Argument	args_ast		3931141	1					
ANR	3931345	Identifier	args_ast		3931141	0					
ANR	3931346	Argument	NULL		3931141	2					
ANR	3931347	Identifier	NULL		3931141	0					
ANR	3931348	ReturnType	void		3931141	1					
ANR	3931349	Identifier	zend_compile_method_call		3931141	2					
ANR	3931350	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3931141	3					
ANR	3931351	Parameter	znode * result	3251:30:94388:94400	3931141	0	True				
ANR	3931352	ParameterType	znode *		3931141	0					
ANR	3931353	Identifier	result		3931141	1					
ANR	3931354	Parameter	zend_ast * ast	3251:45:94403:94415	3931141	1	True				
ANR	3931355	ParameterType	zend_ast *		3931141	0					
ANR	3931356	Identifier	ast		3931141	1					
ANR	3931357	Parameter	uint32_t type	3251:60:94418:94430	3931141	2	True				
ANR	3931358	ParameterType	uint32_t		3931141	0					
ANR	3931359	Identifier	type		3931141	1					
ANR	3931360	CFGEntryNode	ENTRY		3931141		True				
ANR	3931361	CFGExitNode	EXIT		3931141		True				
ANR	3931362	Symbol	opline -> op2		3931141						
ANR	3931363	Symbol	& method_node		3931141						
ANR	3931364	Symbol	ast		3931141						
ANR	3931365	Symbol	zend_add_func_name_literal		3931141						
ANR	3931366	Symbol	E_COMPILE_ERROR		3931141						
ANR	3931367	Symbol	method_ast		3931141						
ANR	3931368	Symbol	obj_node . op_type		3931141						
ANR	3931369	Symbol	Z_TYPE		3931141						
ANR	3931370	Symbol	type		3931141						
ANR	3931371	Symbol	Z_STR		3931141						
ANR	3931372	Symbol	& obj_node		3931141						
ANR	3931373	Symbol	method_node . u		3931141						
ANR	3931374	Symbol	result		3931141						
ANR	3931375	Symbol	* ast		3931141						
ANR	3931376	Symbol	opline		3931141						
ANR	3931377	Symbol	* * ast		3931141						
ANR	3931378	Symbol	method_node . op_type		3931141						
ANR	3931379	Symbol	IS_STRING		3931141						
ANR	3931380	Symbol	method_node		3931141						
ANR	3931381	Symbol	obj_node		3931141						
ANR	3931382	Symbol	is_this_fetch		3931141						
ANR	3931383	Symbol	IS_CONST		3931141						
ANR	3931384	Symbol	method_node . u . constant		3931141						
ANR	3931385	Symbol	NULL		3931141						
ANR	3931386	Symbol	CG		3931141						
ANR	3931387	Symbol	active_op_array		3931141						
ANR	3931388	Symbol	ZEND_INIT_METHOD_CALL		3931141						
ANR	3931389	Symbol	obj_ast		3931141						
ANR	3931390	Symbol	* opline		3931141						
ANR	3931391	Symbol	opline -> op2 . constant		3931141						
ANR	3931392	Symbol	* ast -> child		3931141						
ANR	3931393	Symbol	opline -> op2_type		3931141						
ANR	3931394	Symbol	ast -> child		3931141						
ANR	3931395	Symbol	args_ast		3931141						
ANR	3931396	Symbol	IS_UNUSED		3931141						
ANR	3931397	Symbol	zend_emit_op		3931141						
ANR	3931398	Function	zend_is_constructor	3286:0:95328:95469							
ANR	3931399	FunctionDef	zend_is_constructor (zend_string * name)		3931398	0					
ANR	3931400	CompoundStatement		3287:0:95394:95469	3931398	0					
ANR	3931401	ReturnStatement	"return zend_string_equals_literal_ci ( name , ZEND_CONSTRUCTOR_FUNC_NAME ) ;"	3288:1:95397:95467	3931398	0	True				
ANR	3931402	CallExpression	"zend_string_equals_literal_ci ( name , ZEND_CONSTRUCTOR_FUNC_NAME )"		3931398	0					
ANR	3931403	Callee	zend_string_equals_literal_ci		3931398	0					
ANR	3931404	Identifier	zend_string_equals_literal_ci		3931398	0					
ANR	3931405	ArgumentList	name		3931398	1					
ANR	3931406	Argument	name		3931398	0					
ANR	3931407	Identifier	name		3931398	0					
ANR	3931408	Argument	ZEND_CONSTRUCTOR_FUNC_NAME		3931398	1					
ANR	3931409	Identifier	ZEND_CONSTRUCTOR_FUNC_NAME		3931398	0					
ANR	3931410	ReturnType	static zend_bool		3931398	1					
ANR	3931411	Identifier	zend_is_constructor		3931398	2					
ANR	3931412	ParameterList	zend_string * name		3931398	3					
ANR	3931413	Parameter	zend_string * name	3286:37:95365:95381	3931398	0	True				
ANR	3931414	ParameterType	zend_string *		3931398	0					
ANR	3931415	Identifier	name		3931398	1					
ANR	3931416	CFGEntryNode	ENTRY		3931398		True				
ANR	3931417	CFGExitNode	EXIT		3931398		True				
ANR	3931418	Symbol	ZEND_CONSTRUCTOR_FUNC_NAME		3931398						
ANR	3931419	Symbol	name		3931398						
ANR	3931420	Symbol	zend_string_equals_literal_ci		3931398						
ANR	3931421	Function	zend_compile_static_call	3292:0:95482:97025							
ANR	3931422	FunctionDef	"zend_compile_static_call (znode * result , zend_ast * ast , uint32_t type)"		3931421	0					
ANR	3931423	CompoundStatement		3293:0:95567:97025	3931421	0					
ANR	3931424	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 0 ] ;	3294:1:95570:95605	3931421	0	True				
ANR	3931425	IdentifierDecl	* class_ast = ast -> child [ 0 ]		3931421	0					
ANR	3931426	IdentifierDeclType	zend_ast *		3931421	0					
ANR	3931427	Identifier	class_ast		3931421	1					
ANR	3931428	AssignmentExpression	* class_ast = ast -> child [ 0 ]		3931421	2		=			
ANR	3931429	Identifier	class_ast		3931421	0					
ANR	3931430	ArrayIndexing	ast -> child [ 0 ]		3931421	1					
ANR	3931431	PtrMemberAccess	ast -> child		3931421	0					
ANR	3931432	Identifier	ast		3931421	0					
ANR	3931433	Identifier	child		3931421	1					
ANR	3931434	PrimaryExpression	0		3931421	1					
ANR	3931435	IdentifierDeclStatement	zend_ast * method_ast = ast -> child [ 1 ] ;	3295:1:95608:95644	3931421	1	True				
ANR	3931436	IdentifierDecl	* method_ast = ast -> child [ 1 ]		3931421	0					
ANR	3931437	IdentifierDeclType	zend_ast *		3931421	0					
ANR	3931438	Identifier	method_ast		3931421	1					
ANR	3931439	AssignmentExpression	* method_ast = ast -> child [ 1 ]		3931421	2		=			
ANR	3931440	Identifier	method_ast		3931421	0					
ANR	3931441	ArrayIndexing	ast -> child [ 1 ]		3931421	1					
ANR	3931442	PtrMemberAccess	ast -> child		3931421	0					
ANR	3931443	Identifier	ast		3931421	0					
ANR	3931444	Identifier	child		3931421	1					
ANR	3931445	PrimaryExpression	1		3931421	1					
ANR	3931446	IdentifierDeclStatement	zend_ast * args_ast = ast -> child [ 2 ] ;	3296:1:95647:95681	3931421	2	True				
ANR	3931447	IdentifierDecl	* args_ast = ast -> child [ 2 ]		3931421	0					
ANR	3931448	IdentifierDeclType	zend_ast *		3931421	0					
ANR	3931449	Identifier	args_ast		3931421	1					
ANR	3931450	AssignmentExpression	* args_ast = ast -> child [ 2 ]		3931421	2		=			
ANR	3931451	Identifier	args_ast		3931421	0					
ANR	3931452	ArrayIndexing	ast -> child [ 2 ]		3931421	1					
ANR	3931453	PtrMemberAccess	ast -> child		3931421	0					
ANR	3931454	Identifier	ast		3931421	0					
ANR	3931455	Identifier	child		3931421	1					
ANR	3931456	PrimaryExpression	2		3931421	1					
ANR	3931457	IdentifierDeclStatement	"znode class_node , method_node ;"	3298:1:95685:95714	3931421	3	True				
ANR	3931458	IdentifierDecl	class_node		3931421	0					
ANR	3931459	IdentifierDeclType	znode		3931421	0					
ANR	3931460	Identifier	class_node		3931421	1					
ANR	3931461	IdentifierDecl	method_node		3931421	1					
ANR	3931462	IdentifierDeclType	znode		3931421	0					
ANR	3931463	Identifier	method_node		3931421	1					
ANR	3931464	IdentifierDeclStatement	zend_op * opline ;	3299:1:95717:95732	3931421	4	True				
ANR	3931465	IdentifierDecl	* opline		3931421	0					
ANR	3931466	IdentifierDeclType	zend_op *		3931421	0					
ANR	3931467	Identifier	opline		3931421	1					
ANR	3931468	IdentifierDeclStatement	zend_ulong extended_value = 0 ;	3300:1:95735:95764	3931421	5	True				
ANR	3931469	IdentifierDecl	extended_value = 0		3931421	0					
ANR	3931470	IdentifierDeclType	zend_ulong		3931421	0					
ANR	3931471	Identifier	extended_value		3931421	1					
ANR	3931472	AssignmentExpression	extended_value = 0		3931421	2		=			
ANR	3931473	Identifier	extended_value		3931421	0					
ANR	3931474	PrimaryExpression	0		3931421	1					
ANR	3931475	IfStatement	if ( zend_is_const_default_class_ref ( class_ast ) )		3931421	6					
ANR	3931476	Condition	zend_is_const_default_class_ref ( class_ast )	3302:5:95772:95813	3931421	0	True				
ANR	3931477	CallExpression	zend_is_const_default_class_ref ( class_ast )		3931421	0					
ANR	3931478	Callee	zend_is_const_default_class_ref		3931421	0					
ANR	3931479	Identifier	zend_is_const_default_class_ref		3931421	0					
ANR	3931480	ArgumentList	class_ast		3931421	1					
ANR	3931481	Argument	class_ast		3931421	0					
ANR	3931482	Identifier	class_ast		3931421	0					
ANR	3931483	CompoundStatement		10:49:248:248	3931421	1					
ANR	3931484	ExpressionStatement	class_node . op_type = IS_CONST	3303:2:95820:95849	3931421	0	True				
ANR	3931485	AssignmentExpression	class_node . op_type = IS_CONST		3931421	0		=			
ANR	3931486	MemberAccess	class_node . op_type		3931421	0					
ANR	3931487	Identifier	class_node		3931421	0					
ANR	3931488	Identifier	op_type		3931421	1					
ANR	3931489	Identifier	IS_CONST		3931421	1					
ANR	3931490	ExpressionStatement	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"	3304:2:95853:95925	3931421	1	True				
ANR	3931491	CallExpression	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"		3931421	0					
ANR	3931492	Callee	ZVAL_STR		3931421	0					
ANR	3931493	Identifier	ZVAL_STR		3931421	0					
ANR	3931494	ArgumentList	& class_node . u . constant		3931421	1					
ANR	3931495	Argument	& class_node . u . constant		3931421	0					
ANR	3931496	UnaryOperationExpression	& class_node . u . constant		3931421	0					
ANR	3931497	UnaryOperator	&		3931421	0					
ANR	3931498	MemberAccess	class_node . u . constant		3931421	1					
ANR	3931499	MemberAccess	class_node . u		3931421	0					
ANR	3931500	Identifier	class_node		3931421	0					
ANR	3931501	Identifier	u		3931421	1					
ANR	3931502	Identifier	constant		3931421	1					
ANR	3931503	Argument	zend_resolve_class_name_ast ( class_ast )		3931421	1					
ANR	3931504	CallExpression	zend_resolve_class_name_ast ( class_ast )		3931421	0					
ANR	3931505	Callee	zend_resolve_class_name_ast		3931421	0					
ANR	3931506	Identifier	zend_resolve_class_name_ast		3931421	0					
ANR	3931507	ArgumentList	class_ast		3931421	1					
ANR	3931508	Argument	class_ast		3931421	0					
ANR	3931509	Identifier	class_ast		3931421	0					
ANR	3931510	ElseStatement	else		3931421	0					
ANR	3931511	CompoundStatement		13:8:367:367	3931421	0					
ANR	3931512	ExpressionStatement	"opline = zend_compile_class_ref ( & class_node , class_ast , 1 )"	3306:2:95939:95997	3931421	0	True				
ANR	3931513	AssignmentExpression	"opline = zend_compile_class_ref ( & class_node , class_ast , 1 )"		3931421	0		=			
ANR	3931514	Identifier	opline		3931421	0					
ANR	3931515	CallExpression	"zend_compile_class_ref ( & class_node , class_ast , 1 )"		3931421	1					
ANR	3931516	Callee	zend_compile_class_ref		3931421	0					
ANR	3931517	Identifier	zend_compile_class_ref		3931421	0					
ANR	3931518	ArgumentList	& class_node		3931421	1					
ANR	3931519	Argument	& class_node		3931421	0					
ANR	3931520	UnaryOperationExpression	& class_node		3931421	0					
ANR	3931521	UnaryOperator	&		3931421	0					
ANR	3931522	Identifier	class_node		3931421	1					
ANR	3931523	Argument	class_ast		3931421	1					
ANR	3931524	Identifier	class_ast		3931421	0					
ANR	3931525	Argument	1		3931421	2					
ANR	3931526	PrimaryExpression	1		3931421	0					
ANR	3931527	ExpressionStatement	extended_value = opline -> extended_value	3307:2:96001:96040	3931421	1	True				
ANR	3931528	AssignmentExpression	extended_value = opline -> extended_value		3931421	0		=			
ANR	3931529	Identifier	extended_value		3931421	0					
ANR	3931530	PtrMemberAccess	opline -> extended_value		3931421	1					
ANR	3931531	Identifier	opline		3931421	0					
ANR	3931532	Identifier	extended_value		3931421	1					
ANR	3931533	ExpressionStatement	"zend_compile_expr ( & method_node , method_ast )"	3310:1:96047:96090	3931421	7	True				
ANR	3931534	CallExpression	"zend_compile_expr ( & method_node , method_ast )"		3931421	0					
ANR	3931535	Callee	zend_compile_expr		3931421	0					
ANR	3931536	Identifier	zend_compile_expr		3931421	0					
ANR	3931537	ArgumentList	& method_node		3931421	1					
ANR	3931538	Argument	& method_node		3931421	0					
ANR	3931539	UnaryOperationExpression	& method_node		3931421	0					
ANR	3931540	UnaryOperator	&		3931421	0					
ANR	3931541	Identifier	method_node		3931421	1					
ANR	3931542	Argument	method_ast		3931421	1					
ANR	3931543	Identifier	method_ast		3931421	0					
ANR	3931544	IfStatement	if ( method_node . op_type == IS_CONST )		3931421	8					
ANR	3931545	Condition	method_node . op_type == IS_CONST	3311:5:96097:96127	3931421	0	True				
ANR	3931546	EqualityExpression	method_node . op_type == IS_CONST		3931421	0		==			
ANR	3931547	MemberAccess	method_node . op_type		3931421	0					
ANR	3931548	Identifier	method_node		3931421	0					
ANR	3931549	Identifier	op_type		3931421	1					
ANR	3931550	Identifier	IS_CONST		3931421	1					
ANR	3931551	CompoundStatement		20:2:566:602	3931421	1					
ANR	3931552	IdentifierDeclStatement	zval * name = & method_node . u . constant ;	3312:2:96134:96170	3931421	0	True				
ANR	3931553	IdentifierDecl	* name = & method_node . u . constant		3931421	0					
ANR	3931554	IdentifierDeclType	zval *		3931421	0					
ANR	3931555	Identifier	name		3931421	1					
ANR	3931556	AssignmentExpression	* name = & method_node . u . constant		3931421	2		=			
ANR	3931557	Identifier	name		3931421	0					
ANR	3931558	UnaryOperationExpression	& method_node . u . constant		3931421	1					
ANR	3931559	UnaryOperator	&		3931421	0					
ANR	3931560	MemberAccess	method_node . u . constant		3931421	1					
ANR	3931561	MemberAccess	method_node . u		3931421	0					
ANR	3931562	Identifier	method_node		3931421	0					
ANR	3931563	Identifier	u		3931421	1					
ANR	3931564	Identifier	constant		3931421	1					
ANR	3931565	IfStatement	if ( Z_TYPE_P ( name ) != IS_STRING )		3931421	1					
ANR	3931566	Condition	Z_TYPE_P ( name ) != IS_STRING	3313:6:96178:96204	3931421	0	True				
ANR	3931567	EqualityExpression	Z_TYPE_P ( name ) != IS_STRING		3931421	0		!=			
ANR	3931568	CallExpression	Z_TYPE_P ( name )		3931421	0					
ANR	3931569	Callee	Z_TYPE_P		3931421	0					
ANR	3931570	Identifier	Z_TYPE_P		3931421	0					
ANR	3931571	ArgumentList	name		3931421	1					
ANR	3931572	Argument	name		3931421	0					
ANR	3931573	Identifier	name		3931421	0					
ANR	3931574	Identifier	IS_STRING		3931421	1					
ANR	3931575	CompoundStatement		21:35:639:639	3931421	1					
ANR	3931576	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Method name must be a string"" )"	3314:3:96212:96280	3931421	0	True				
ANR	3931577	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Method name must be a string"" )"		3931421	0					
ANR	3931578	Callee	zend_error_noreturn		3931421	0					
ANR	3931579	Identifier	zend_error_noreturn		3931421	0					
ANR	3931580	ArgumentList	E_COMPILE_ERROR		3931421	1					
ANR	3931581	Argument	E_COMPILE_ERROR		3931421	0					
ANR	3931582	Identifier	E_COMPILE_ERROR		3931421	0					
ANR	3931583	Argument	"""Method name must be a string"""		3931421	1					
ANR	3931584	PrimaryExpression	"""Method name must be a string"""		3931421	0					
ANR	3931585	IfStatement	if ( zend_is_constructor ( Z_STR_P ( name ) ) )		3931421	2					
ANR	3931586	Condition	zend_is_constructor ( Z_STR_P ( name ) )	3316:6:96292:96325	3931421	0	True				
ANR	3931587	CallExpression	zend_is_constructor ( Z_STR_P ( name ) )		3931421	0					
ANR	3931588	Callee	zend_is_constructor		3931421	0					
ANR	3931589	Identifier	zend_is_constructor		3931421	0					
ANR	3931590	ArgumentList	Z_STR_P ( name )		3931421	1					
ANR	3931591	Argument	Z_STR_P ( name )		3931421	0					
ANR	3931592	CallExpression	Z_STR_P ( name )		3931421	0					
ANR	3931593	Callee	Z_STR_P		3931421	0					
ANR	3931594	Identifier	Z_STR_P		3931421	0					
ANR	3931595	ArgumentList	name		3931421	1					
ANR	3931596	Argument	name		3931421	0					
ANR	3931597	Identifier	name		3931421	0					
ANR	3931598	CompoundStatement		24:42:760:760	3931421	1					
ANR	3931599	ExpressionStatement	zval_ptr_dtor ( name )	3317:3:96333:96352	3931421	0	True				
ANR	3931600	CallExpression	zval_ptr_dtor ( name )		3931421	0					
ANR	3931601	Callee	zval_ptr_dtor		3931421	0					
ANR	3931602	Identifier	zval_ptr_dtor		3931421	0					
ANR	3931603	ArgumentList	name		3931421	1					
ANR	3931604	Argument	name		3931421	0					
ANR	3931605	Identifier	name		3931421	0					
ANR	3931606	ExpressionStatement	method_node . op_type = IS_UNUSED	3318:3:96357:96388	3931421	1	True				
ANR	3931607	AssignmentExpression	method_node . op_type = IS_UNUSED		3931421	0		=			
ANR	3931608	MemberAccess	method_node . op_type		3931421	0					
ANR	3931609	Identifier	method_node		3931421	0					
ANR	3931610	Identifier	op_type		3931421	1					
ANR	3931611	Identifier	IS_UNUSED		3931421	1					
ANR	3931612	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	3322:1:96399:96440	3931421	9	True				
ANR	3931613	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3931421	0		=			
ANR	3931614	Identifier	opline		3931421	0					
ANR	3931615	CallExpression	get_next_op ( CG ( active_op_array ) )		3931421	1					
ANR	3931616	Callee	get_next_op		3931421	0					
ANR	3931617	Identifier	get_next_op		3931421	0					
ANR	3931618	ArgumentList	CG ( active_op_array )		3931421	1					
ANR	3931619	Argument	CG ( active_op_array )		3931421	0					
ANR	3931620	CallExpression	CG ( active_op_array )		3931421	0					
ANR	3931621	Callee	CG		3931421	0					
ANR	3931622	Identifier	CG		3931421	0					
ANR	3931623	ArgumentList	active_op_array		3931421	1					
ANR	3931624	Argument	active_op_array		3931421	0					
ANR	3931625	Identifier	active_op_array		3931421	0					
ANR	3931626	ExpressionStatement	opline -> opcode = ZEND_INIT_STATIC_METHOD_CALL	3323:1:96443:96488	3931421	10	True				
ANR	3931627	AssignmentExpression	opline -> opcode = ZEND_INIT_STATIC_METHOD_CALL		3931421	0		=			
ANR	3931628	PtrMemberAccess	opline -> opcode		3931421	0					
ANR	3931629	Identifier	opline		3931421	0					
ANR	3931630	Identifier	opcode		3931421	1					
ANR	3931631	Identifier	ZEND_INIT_STATIC_METHOD_CALL		3931421	1					
ANR	3931632	ExpressionStatement	opline -> extended_value = extended_value	3324:1:96491:96530	3931421	11	True				
ANR	3931633	AssignmentExpression	opline -> extended_value = extended_value		3931421	0		=			
ANR	3931634	PtrMemberAccess	opline -> extended_value		3931421	0					
ANR	3931635	Identifier	opline		3931421	0					
ANR	3931636	Identifier	extended_value		3931421	1					
ANR	3931637	Identifier	extended_value		3931421	1					
ANR	3931638	ExpressionStatement	"zend_set_class_name_op1 ( opline , & class_node )"	3326:1:96534:96578	3931421	12	True				
ANR	3931639	CallExpression	"zend_set_class_name_op1 ( opline , & class_node )"		3931421	0					
ANR	3931640	Callee	zend_set_class_name_op1		3931421	0					
ANR	3931641	Identifier	zend_set_class_name_op1		3931421	0					
ANR	3931642	ArgumentList	opline		3931421	1					
ANR	3931643	Argument	opline		3931421	0					
ANR	3931644	Identifier	opline		3931421	0					
ANR	3931645	Argument	& class_node		3931421	1					
ANR	3931646	UnaryOperationExpression	& class_node		3931421	0					
ANR	3931647	UnaryOperator	&		3931421	0					
ANR	3931648	Identifier	class_node		3931421	1					
ANR	3931649	IfStatement	if ( method_node . op_type == IS_CONST )		3931421	13					
ANR	3931650	Condition	method_node . op_type == IS_CONST	3328:5:96586:96616	3931421	0	True				
ANR	3931651	EqualityExpression	method_node . op_type == IS_CONST		3931421	0		==			
ANR	3931652	MemberAccess	method_node . op_type		3931421	0					
ANR	3931653	Identifier	method_node		3931421	0					
ANR	3931654	Identifier	op_type		3931421	1					
ANR	3931655	Identifier	IS_CONST		3931421	1					
ANR	3931656	CompoundStatement		36:38:1051:1051	3931421	1					
ANR	3931657	ExpressionStatement	opline -> op2_type = IS_CONST	3329:2:96623:96650	3931421	0	True				
ANR	3931658	AssignmentExpression	opline -> op2_type = IS_CONST		3931421	0		=			
ANR	3931659	PtrMemberAccess	opline -> op2_type		3931421	0					
ANR	3931660	Identifier	opline		3931421	0					
ANR	3931661	Identifier	op2_type		3931421	1					
ANR	3931662	Identifier	IS_CONST		3931421	1					
ANR	3931663	ExpressionStatement	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , Z_STR ( method_node . u . constant ) )"	3330:2:96654:96758	3931421	1	True				
ANR	3931664	AssignmentExpression	"opline -> op2 . constant = zend_add_func_name_literal ( CG ( active_op_array ) , Z_STR ( method_node . u . constant ) )"		3931421	0		=			
ANR	3931665	MemberAccess	opline -> op2 . constant		3931421	0					
ANR	3931666	PtrMemberAccess	opline -> op2		3931421	0					
ANR	3931667	Identifier	opline		3931421	0					
ANR	3931668	Identifier	op2		3931421	1					
ANR	3931669	Identifier	constant		3931421	1					
ANR	3931670	CallExpression	"zend_add_func_name_literal ( CG ( active_op_array ) , Z_STR ( method_node . u . constant ) )"		3931421	1					
ANR	3931671	Callee	zend_add_func_name_literal		3931421	0					
ANR	3931672	Identifier	zend_add_func_name_literal		3931421	0					
ANR	3931673	ArgumentList	CG ( active_op_array )		3931421	1					
ANR	3931674	Argument	CG ( active_op_array )		3931421	0					
ANR	3931675	CallExpression	CG ( active_op_array )		3931421	0					
ANR	3931676	Callee	CG		3931421	0					
ANR	3931677	Identifier	CG		3931421	0					
ANR	3931678	ArgumentList	active_op_array		3931421	1					
ANR	3931679	Argument	active_op_array		3931421	0					
ANR	3931680	Identifier	active_op_array		3931421	0					
ANR	3931681	Argument	Z_STR ( method_node . u . constant )		3931421	1					
ANR	3931682	CallExpression	Z_STR ( method_node . u . constant )		3931421	0					
ANR	3931683	Callee	Z_STR		3931421	0					
ANR	3931684	Identifier	Z_STR		3931421	0					
ANR	3931685	ArgumentList	method_node . u . constant		3931421	1					
ANR	3931686	Argument	method_node . u . constant		3931421	0					
ANR	3931687	MemberAccess	method_node . u . constant		3931421	0					
ANR	3931688	MemberAccess	method_node . u		3931421	0					
ANR	3931689	Identifier	method_node		3931421	0					
ANR	3931690	Identifier	u		3931421	1					
ANR	3931691	Identifier	constant		3931421	1					
ANR	3931692	IfStatement	if ( opline -> op1_type == IS_CONST )		3931421	2					
ANR	3931693	Condition	opline -> op1_type == IS_CONST	3332:6:96766:96793	3931421	0	True				
ANR	3931694	EqualityExpression	opline -> op1_type == IS_CONST		3931421	0		==			
ANR	3931695	PtrMemberAccess	opline -> op1_type		3931421	0					
ANR	3931696	Identifier	opline		3931421	0					
ANR	3931697	Identifier	op1_type		3931421	1					
ANR	3931698	Identifier	IS_CONST		3931421	1					
ANR	3931699	CompoundStatement		40:36:1228:1228	3931421	1					
ANR	3931700	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	3333:3:96801:96844	3931421	0	True				
ANR	3931701	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3931421	0					
ANR	3931702	Callee	zend_alloc_cache_slot		3931421	0					
ANR	3931703	Identifier	zend_alloc_cache_slot		3931421	0					
ANR	3931704	ArgumentList	opline -> op2 . constant		3931421	1					
ANR	3931705	Argument	opline -> op2 . constant		3931421	0					
ANR	3931706	MemberAccess	opline -> op2 . constant		3931421	0					
ANR	3931707	PtrMemberAccess	opline -> op2		3931421	0					
ANR	3931708	Identifier	opline		3931421	0					
ANR	3931709	Identifier	op2		3931421	1					
ANR	3931710	Identifier	constant		3931421	1					
ANR	3931711	ElseStatement	else		3931421	0					
ANR	3931712	CompoundStatement		42:9:1287:1287	3931421	0					
ANR	3931713	ExpressionStatement	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )	3335:3:96860:96915	3931421	0	True				
ANR	3931714	CallExpression	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )		3931421	0					
ANR	3931715	Callee	zend_alloc_polymorphic_cache_slot		3931421	0					
ANR	3931716	Identifier	zend_alloc_polymorphic_cache_slot		3931421	0					
ANR	3931717	ArgumentList	opline -> op2 . constant		3931421	1					
ANR	3931718	Argument	opline -> op2 . constant		3931421	0					
ANR	3931719	MemberAccess	opline -> op2 . constant		3931421	0					
ANR	3931720	PtrMemberAccess	opline -> op2		3931421	0					
ANR	3931721	Identifier	opline		3931421	0					
ANR	3931722	Identifier	op2		3931421	1					
ANR	3931723	Identifier	constant		3931421	1					
ANR	3931724	ElseStatement	else		3931421	0					
ANR	3931725	CompoundStatement		45:8:1361:1361	3931421	0					
ANR	3931726	ExpressionStatement	"SET_NODE ( opline -> op2 , & method_node )"	3338:2:96933:96968	3931421	0	True				
ANR	3931727	CallExpression	"SET_NODE ( opline -> op2 , & method_node )"		3931421	0					
ANR	3931728	Callee	SET_NODE		3931421	0					
ANR	3931729	Identifier	SET_NODE		3931421	0					
ANR	3931730	ArgumentList	opline -> op2		3931421	1					
ANR	3931731	Argument	opline -> op2		3931421	0					
ANR	3931732	PtrMemberAccess	opline -> op2		3931421	0					
ANR	3931733	Identifier	opline		3931421	0					
ANR	3931734	Identifier	op2		3931421	1					
ANR	3931735	Argument	& method_node		3931421	1					
ANR	3931736	UnaryOperationExpression	& method_node		3931421	0					
ANR	3931737	UnaryOperator	&		3931421	0					
ANR	3931738	Identifier	method_node		3931421	1					
ANR	3931739	ExpressionStatement	"zend_compile_call_common ( result , args_ast , NULL )"	3341:1:96975:97023	3931421	14	True				
ANR	3931740	CallExpression	"zend_compile_call_common ( result , args_ast , NULL )"		3931421	0					
ANR	3931741	Callee	zend_compile_call_common		3931421	0					
ANR	3931742	Identifier	zend_compile_call_common		3931421	0					
ANR	3931743	ArgumentList	result		3931421	1					
ANR	3931744	Argument	result		3931421	0					
ANR	3931745	Identifier	result		3931421	0					
ANR	3931746	Argument	args_ast		3931421	1					
ANR	3931747	Identifier	args_ast		3931421	0					
ANR	3931748	Argument	NULL		3931421	2					
ANR	3931749	Identifier	NULL		3931421	0					
ANR	3931750	ReturnType	void		3931421	1					
ANR	3931751	Identifier	zend_compile_static_call		3931421	2					
ANR	3931752	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3931421	3					
ANR	3931753	Parameter	znode * result	3292:30:95512:95524	3931421	0	True				
ANR	3931754	ParameterType	znode *		3931421	0					
ANR	3931755	Identifier	result		3931421	1					
ANR	3931756	Parameter	zend_ast * ast	3292:45:95527:95539	3931421	1	True				
ANR	3931757	ParameterType	zend_ast *		3931421	0					
ANR	3931758	Identifier	ast		3931421	1					
ANR	3931759	Parameter	uint32_t type	3292:60:95542:95554	3931421	2	True				
ANR	3931760	ParameterType	uint32_t		3931421	0					
ANR	3931761	Identifier	type		3931421	1					
ANR	3931762	CFGEntryNode	ENTRY		3931421		True				
ANR	3931763	CFGExitNode	EXIT		3931421		True				
ANR	3931764	Symbol	ast		3931421						
ANR	3931765	Symbol	zend_add_func_name_literal		3931421						
ANR	3931766	Symbol	& class_node		3931421						
ANR	3931767	Symbol	E_COMPILE_ERROR		3931421						
ANR	3931768	Symbol	& method_node . u		3931421						
ANR	3931769	Symbol	type		3931421						
ANR	3931770	Symbol	Z_STR		3931421						
ANR	3931771	Symbol	opline -> extended_value		3931421						
ANR	3931772	Symbol	method_node . u		3931421						
ANR	3931773	Symbol	opline		3931421						
ANR	3931774	Symbol	extended_value		3931421						
ANR	3931775	Symbol	IS_STRING		3931421						
ANR	3931776	Symbol	method_node		3931421						
ANR	3931777	Symbol	class_node . u		3931421						
ANR	3931778	Symbol	IS_CONST		3931421						
ANR	3931779	Symbol	NULL		3931421						
ANR	3931780	Symbol	opline -> op1_type		3931421						
ANR	3931781	Symbol	name		3931421						
ANR	3931782	Symbol	* ast -> child		3931421						
ANR	3931783	Symbol	Z_STR_P		3931421						
ANR	3931784	Symbol	ast -> child		3931421						
ANR	3931785	Symbol	args_ast		3931421						
ANR	3931786	Symbol	ZEND_INIT_STATIC_METHOD_CALL		3931421						
ANR	3931787	Symbol	zend_is_const_default_class_ref		3931421						
ANR	3931788	Symbol	opline -> op2		3931421						
ANR	3931789	Symbol	& method_node		3931421						
ANR	3931790	Symbol	class_node		3931421						
ANR	3931791	Symbol	method_ast		3931421						
ANR	3931792	Symbol	class_ast		3931421						
ANR	3931793	Symbol	result		3931421						
ANR	3931794	Symbol	class_node . op_type		3931421						
ANR	3931795	Symbol	& class_node . u . constant		3931421						
ANR	3931796	Symbol	* ast		3931421						
ANR	3931797	Symbol	* * ast		3931421						
ANR	3931798	Symbol	& method_node . u . constant		3931421						
ANR	3931799	Symbol	method_node . op_type		3931421						
ANR	3931800	Symbol	& class_node . u		3931421						
ANR	3931801	Symbol	method_node . u . constant		3931421						
ANR	3931802	Symbol	get_next_op		3931421						
ANR	3931803	Symbol	CG		3931421						
ANR	3931804	Symbol	zend_resolve_class_name_ast		3931421						
ANR	3931805	Symbol	active_op_array		3931421						
ANR	3931806	Symbol	Z_TYPE_P		3931421						
ANR	3931807	Symbol	zend_compile_class_ref		3931421						
ANR	3931808	Symbol	* opline		3931421						
ANR	3931809	Symbol	opline -> opcode		3931421						
ANR	3931810	Symbol	opline -> op2 . constant		3931421						
ANR	3931811	Symbol	zend_is_constructor		3931421						
ANR	3931812	Symbol	opline -> op2_type		3931421						
ANR	3931813	Symbol	IS_UNUSED		3931421						
ANR	3931814	DeclStmt									
ANR	3931815	Decl							void	void ( zend_ast * ast )	zend_compile_class_decl
ANR	3931816	Function	zend_compile_new	3347:0:97084:98574							
ANR	3931817	FunctionDef	"zend_compile_new (znode * result , zend_ast * ast)"		3931816	0					
ANR	3931818	CompoundStatement		3348:0:97146:98574	3931816	0					
ANR	3931819	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 0 ] ;	3349:1:97149:97184	3931816	0	True				
ANR	3931820	IdentifierDecl	* class_ast = ast -> child [ 0 ]		3931816	0					
ANR	3931821	IdentifierDeclType	zend_ast *		3931816	0					
ANR	3931822	Identifier	class_ast		3931816	1					
ANR	3931823	AssignmentExpression	* class_ast = ast -> child [ 0 ]		3931816	2		=			
ANR	3931824	Identifier	class_ast		3931816	0					
ANR	3931825	ArrayIndexing	ast -> child [ 0 ]		3931816	1					
ANR	3931826	PtrMemberAccess	ast -> child		3931816	0					
ANR	3931827	Identifier	ast		3931816	0					
ANR	3931828	Identifier	child		3931816	1					
ANR	3931829	PrimaryExpression	0		3931816	1					
ANR	3931830	IdentifierDeclStatement	zend_ast * args_ast = ast -> child [ 1 ] ;	3350:1:97187:97221	3931816	1	True				
ANR	3931831	IdentifierDecl	* args_ast = ast -> child [ 1 ]		3931816	0					
ANR	3931832	IdentifierDeclType	zend_ast *		3931816	0					
ANR	3931833	Identifier	args_ast		3931816	1					
ANR	3931834	AssignmentExpression	* args_ast = ast -> child [ 1 ]		3931816	2		=			
ANR	3931835	Identifier	args_ast		3931816	0					
ANR	3931836	ArrayIndexing	ast -> child [ 1 ]		3931816	1					
ANR	3931837	PtrMemberAccess	ast -> child		3931816	0					
ANR	3931838	Identifier	ast		3931816	0					
ANR	3931839	Identifier	child		3931816	1					
ANR	3931840	PrimaryExpression	1		3931816	1					
ANR	3931841	IdentifierDeclStatement	"znode class_node , ctor_result ;"	3352:1:97225:97254	3931816	2	True				
ANR	3931842	IdentifierDecl	class_node		3931816	0					
ANR	3931843	IdentifierDeclType	znode		3931816	0					
ANR	3931844	Identifier	class_node		3931816	1					
ANR	3931845	IdentifierDecl	ctor_result		3931816	1					
ANR	3931846	IdentifierDeclType	znode		3931816	0					
ANR	3931847	Identifier	ctor_result		3931816	1					
ANR	3931848	IdentifierDeclStatement	zend_op * opline ;	3353:1:97257:97272	3931816	3	True				
ANR	3931849	IdentifierDecl	* opline		3931816	0					
ANR	3931850	IdentifierDeclType	zend_op *		3931816	0					
ANR	3931851	Identifier	opline		3931816	1					
ANR	3931852	IdentifierDeclStatement	uint32_t opnum ;	3354:1:97275:97289	3931816	4	True				
ANR	3931853	IdentifierDecl	opnum		3931816	0					
ANR	3931854	IdentifierDeclType	uint32_t		3931816	0					
ANR	3931855	Identifier	opnum		3931816	1					
ANR	3931856	IfStatement	if ( zend_is_const_default_class_ref ( class_ast ) )		3931816	5					
ANR	3931857	Condition	zend_is_const_default_class_ref ( class_ast )	3356:5:97297:97338	3931816	0	True				
ANR	3931858	CallExpression	zend_is_const_default_class_ref ( class_ast )		3931816	0					
ANR	3931859	Callee	zend_is_const_default_class_ref		3931816	0					
ANR	3931860	Identifier	zend_is_const_default_class_ref		3931816	0					
ANR	3931861	ArgumentList	class_ast		3931816	1					
ANR	3931862	Argument	class_ast		3931816	0					
ANR	3931863	Identifier	class_ast		3931816	0					
ANR	3931864	CompoundStatement		9:49:194:194	3931816	1					
ANR	3931865	ExpressionStatement	class_node . op_type = IS_CONST	3357:2:97345:97374	3931816	0	True				
ANR	3931866	AssignmentExpression	class_node . op_type = IS_CONST		3931816	0		=			
ANR	3931867	MemberAccess	class_node . op_type		3931816	0					
ANR	3931868	Identifier	class_node		3931816	0					
ANR	3931869	Identifier	op_type		3931816	1					
ANR	3931870	Identifier	IS_CONST		3931816	1					
ANR	3931871	ExpressionStatement	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"	3358:2:97378:97450	3931816	1	True				
ANR	3931872	CallExpression	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"		3931816	0					
ANR	3931873	Callee	ZVAL_STR		3931816	0					
ANR	3931874	Identifier	ZVAL_STR		3931816	0					
ANR	3931875	ArgumentList	& class_node . u . constant		3931816	1					
ANR	3931876	Argument	& class_node . u . constant		3931816	0					
ANR	3931877	UnaryOperationExpression	& class_node . u . constant		3931816	0					
ANR	3931878	UnaryOperator	&		3931816	0					
ANR	3931879	MemberAccess	class_node . u . constant		3931816	1					
ANR	3931880	MemberAccess	class_node . u		3931816	0					
ANR	3931881	Identifier	class_node		3931816	0					
ANR	3931882	Identifier	u		3931816	1					
ANR	3931883	Identifier	constant		3931816	1					
ANR	3931884	Argument	zend_resolve_class_name_ast ( class_ast )		3931816	1					
ANR	3931885	CallExpression	zend_resolve_class_name_ast ( class_ast )		3931816	0					
ANR	3931886	Callee	zend_resolve_class_name_ast		3931816	0					
ANR	3931887	Identifier	zend_resolve_class_name_ast		3931816	0					
ANR	3931888	ArgumentList	class_ast		3931816	1					
ANR	3931889	Argument	class_ast		3931816	0					
ANR	3931890	Identifier	class_ast		3931816	0					
ANR	3931891	ElseStatement	else		3931816	0					
ANR	3931892	IfStatement	if ( class_ast -> kind == ZEND_AST_CLASS )		3931816	0					
ANR	3931893	Condition	class_ast -> kind == ZEND_AST_CLASS	3359:12:97464:97496	3931816	0	True				
ANR	3931894	EqualityExpression	class_ast -> kind == ZEND_AST_CLASS		3931816	0		==			
ANR	3931895	PtrMemberAccess	class_ast -> kind		3931816	0					
ANR	3931896	Identifier	class_ast		3931816	0					
ANR	3931897	Identifier	kind		3931816	1					
ANR	3931898	Identifier	ZEND_AST_CLASS		3931816	1					
ANR	3931899	CompoundStatement		13:2:356:416	3931816	1					
ANR	3931900	IdentifierDeclStatement	uint32_t dcl_opnum = get_next_op_number ( CG ( active_op_array ) ) ;	3360:2:97503:97563	3931816	0	True				
ANR	3931901	IdentifierDecl	dcl_opnum = get_next_op_number ( CG ( active_op_array ) )		3931816	0					
ANR	3931902	IdentifierDeclType	uint32_t		3931816	0					
ANR	3931903	Identifier	dcl_opnum		3931816	1					
ANR	3931904	AssignmentExpression	dcl_opnum = get_next_op_number ( CG ( active_op_array ) )		3931816	2		=			
ANR	3931905	Identifier	dcl_opnum		3931816	0					
ANR	3931906	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3931816	1					
ANR	3931907	Callee	get_next_op_number		3931816	0					
ANR	3931908	Identifier	get_next_op_number		3931816	0					
ANR	3931909	ArgumentList	CG ( active_op_array )		3931816	1					
ANR	3931910	Argument	CG ( active_op_array )		3931816	0					
ANR	3931911	CallExpression	CG ( active_op_array )		3931816	0					
ANR	3931912	Callee	CG		3931816	0					
ANR	3931913	Identifier	CG		3931816	0					
ANR	3931914	ArgumentList	active_op_array		3931816	1					
ANR	3931915	Argument	active_op_array		3931816	0					
ANR	3931916	Identifier	active_op_array		3931816	0					
ANR	3931917	ExpressionStatement	zend_compile_class_decl ( class_ast )	3361:2:97567:97601	3931816	1	True				
ANR	3931918	CallExpression	zend_compile_class_decl ( class_ast )		3931816	0					
ANR	3931919	Callee	zend_compile_class_decl		3931816	0					
ANR	3931920	Identifier	zend_compile_class_decl		3931816	0					
ANR	3931921	ArgumentList	class_ast		3931816	1					
ANR	3931922	Argument	class_ast		3931816	0					
ANR	3931923	Identifier	class_ast		3931816	0					
ANR	3931924	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ dcl_opnum ]	3363:2:97646:97695	3931816	2	True				
ANR	3931925	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ dcl_opnum ]		3931816	0		=			
ANR	3931926	Identifier	opline		3931816	0					
ANR	3931927	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ dcl_opnum ]		3931816	1					
ANR	3931928	UnaryOperator	&		3931816	0					
ANR	3931929	ArrayIndexing	CG ( active_op_array ) -> opcodes [ dcl_opnum ]		3931816	1					
ANR	3931930	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3931816	0					
ANR	3931931	CallExpression	CG ( active_op_array )		3931816	0					
ANR	3931932	Callee	CG		3931816	0					
ANR	3931933	Identifier	CG		3931816	0					
ANR	3931934	ArgumentList	active_op_array		3931816	1					
ANR	3931935	Argument	active_op_array		3931816	0					
ANR	3931936	Identifier	active_op_array		3931816	0					
ANR	3931937	Identifier	opcodes		3931816	1					
ANR	3931938	Identifier	dcl_opnum		3931816	1					
ANR	3931939	IfStatement	if ( opline -> opcode == ZEND_FETCH_CLASS )		3931816	3					
ANR	3931940	Condition	opline -> opcode == ZEND_FETCH_CLASS	3364:6:97703:97736	3931816	0	True				
ANR	3931941	EqualityExpression	opline -> opcode == ZEND_FETCH_CLASS		3931816	0		==			
ANR	3931942	PtrMemberAccess	opline -> opcode		3931816	0					
ANR	3931943	Identifier	opline		3931816	0					
ANR	3931944	Identifier	opcode		3931816	1					
ANR	3931945	Identifier	ZEND_FETCH_CLASS		3931816	1					
ANR	3931946	CompoundStatement		17:42:592:592	3931816	1					
ANR	3931947	ExpressionStatement	opline ++	3365:3:97744:97752	3931816	0	True				
ANR	3931948	PostIncDecOperationExpression	opline ++		3931816	0					
ANR	3931949	Identifier	opline		3931816	0					
ANR	3931950	IncDec	++		3931816	1					
ANR	3931951	ExpressionStatement	class_node . op_type = opline -> result_type	3367:2:97760:97800	3931816	4	True				
ANR	3931952	AssignmentExpression	class_node . op_type = opline -> result_type		3931816	0		=			
ANR	3931953	MemberAccess	class_node . op_type		3931816	0					
ANR	3931954	Identifier	class_node		3931816	0					
ANR	3931955	Identifier	op_type		3931816	1					
ANR	3931956	PtrMemberAccess	opline -> result_type		3931816	1					
ANR	3931957	Identifier	opline		3931816	0					
ANR	3931958	Identifier	result_type		3931816	1					
ANR	3931959	ExpressionStatement	class_node . u . op . var = opline -> result . var	3368:2:97804:97844	3931816	5	True				
ANR	3931960	AssignmentExpression	class_node . u . op . var = opline -> result . var		3931816	0		=			
ANR	3931961	MemberAccess	class_node . u . op . var		3931816	0					
ANR	3931962	MemberAccess	class_node . u . op		3931816	0					
ANR	3931963	MemberAccess	class_node . u		3931816	0					
ANR	3931964	Identifier	class_node		3931816	0					
ANR	3931965	Identifier	u		3931816	1					
ANR	3931966	Identifier	op		3931816	1					
ANR	3931967	Identifier	var		3931816	1					
ANR	3931968	MemberAccess	opline -> result . var		3931816	1					
ANR	3931969	PtrMemberAccess	opline -> result		3931816	0					
ANR	3931970	Identifier	opline		3931816	0					
ANR	3931971	Identifier	result		3931816	1					
ANR	3931972	Identifier	var		3931816	1					
ANR	3931973	ExpressionStatement	opline -> op1 . opline_num = get_next_op_number ( CG ( active_op_array ) )	3369:2:97848:97912	3931816	6	True				
ANR	3931974	AssignmentExpression	opline -> op1 . opline_num = get_next_op_number ( CG ( active_op_array ) )		3931816	0		=			
ANR	3931975	MemberAccess	opline -> op1 . opline_num		3931816	0					
ANR	3931976	PtrMemberAccess	opline -> op1		3931816	0					
ANR	3931977	Identifier	opline		3931816	0					
ANR	3931978	Identifier	op1		3931816	1					
ANR	3931979	Identifier	opline_num		3931816	1					
ANR	3931980	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3931816	1					
ANR	3931981	Callee	get_next_op_number		3931816	0					
ANR	3931982	Identifier	get_next_op_number		3931816	0					
ANR	3931983	ArgumentList	CG ( active_op_array )		3931816	1					
ANR	3931984	Argument	CG ( active_op_array )		3931816	0					
ANR	3931985	CallExpression	CG ( active_op_array )		3931816	0					
ANR	3931986	Callee	CG		3931816	0					
ANR	3931987	Identifier	CG		3931816	0					
ANR	3931988	ArgumentList	active_op_array		3931816	1					
ANR	3931989	Argument	active_op_array		3931816	0					
ANR	3931990	Identifier	active_op_array		3931816	0					
ANR	3931991	ElseStatement	else		3931816	0					
ANR	3931992	CompoundStatement		23:8:775:775	3931816	0					
ANR	3931993	ExpressionStatement	"zend_compile_class_ref ( & class_node , class_ast , 1 )"	3371:2:97926:97975	3931816	0	True				
ANR	3931994	CallExpression	"zend_compile_class_ref ( & class_node , class_ast , 1 )"		3931816	0					
ANR	3931995	Callee	zend_compile_class_ref		3931816	0					
ANR	3931996	Identifier	zend_compile_class_ref		3931816	0					
ANR	3931997	ArgumentList	& class_node		3931816	1					
ANR	3931998	Argument	& class_node		3931816	0					
ANR	3931999	UnaryOperationExpression	& class_node		3931816	0					
ANR	3932000	UnaryOperator	&		3931816	0					
ANR	3932001	Identifier	class_node		3931816	1					
ANR	3932002	Argument	class_ast		3931816	1					
ANR	3932003	Identifier	class_ast		3931816	0					
ANR	3932004	Argument	1		3931816	2					
ANR	3932005	PrimaryExpression	1		3931816	0					
ANR	3932006	ExpressionStatement	opnum = get_next_op_number ( CG ( active_op_array ) )	3374:1:97982:98029	3931816	6	True				
ANR	3932007	AssignmentExpression	opnum = get_next_op_number ( CG ( active_op_array ) )		3931816	0		=			
ANR	3932008	Identifier	opnum		3931816	0					
ANR	3932009	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3931816	1					
ANR	3932010	Callee	get_next_op_number		3931816	0					
ANR	3932011	Identifier	get_next_op_number		3931816	0					
ANR	3932012	ArgumentList	CG ( active_op_array )		3931816	1					
ANR	3932013	Argument	CG ( active_op_array )		3931816	0					
ANR	3932014	CallExpression	CG ( active_op_array )		3931816	0					
ANR	3932015	Callee	CG		3931816	0					
ANR	3932016	Identifier	CG		3931816	0					
ANR	3932017	ArgumentList	active_op_array		3931816	1					
ANR	3932018	Argument	active_op_array		3931816	0					
ANR	3932019	Identifier	active_op_array		3931816	0					
ANR	3932020	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_NEW , NULL , NULL )"	3375:1:98032:98083	3931816	7	True				
ANR	3932021	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_NEW , NULL , NULL )"		3931816	0		=			
ANR	3932022	Identifier	opline		3931816	0					
ANR	3932023	CallExpression	"zend_emit_op ( result , ZEND_NEW , NULL , NULL )"		3931816	1					
ANR	3932024	Callee	zend_emit_op		3931816	0					
ANR	3932025	Identifier	zend_emit_op		3931816	0					
ANR	3932026	ArgumentList	result		3931816	1					
ANR	3932027	Argument	result		3931816	0					
ANR	3932028	Identifier	result		3931816	0					
ANR	3932029	Argument	ZEND_NEW		3931816	1					
ANR	3932030	Identifier	ZEND_NEW		3931816	0					
ANR	3932031	Argument	NULL		3931816	2					
ANR	3932032	Identifier	NULL		3931816	0					
ANR	3932033	Argument	NULL		3931816	3					
ANR	3932034	Identifier	NULL		3931816	0					
ANR	3932035	IfStatement	if ( class_node . op_type == IS_CONST )		3931816	8					
ANR	3932036	Condition	class_node . op_type == IS_CONST	3377:5:98091:98120	3931816	0	True				
ANR	3932037	EqualityExpression	class_node . op_type == IS_CONST		3931816	0		==			
ANR	3932038	MemberAccess	class_node . op_type		3931816	0					
ANR	3932039	Identifier	class_node		3931816	0					
ANR	3932040	Identifier	op_type		3931816	1					
ANR	3932041	Identifier	IS_CONST		3931816	1					
ANR	3932042	CompoundStatement		30:37:976:976	3931816	1					
ANR	3932043	ExpressionStatement	opline -> op1_type = IS_CONST	3378:2:98127:98154	3931816	0	True				
ANR	3932044	AssignmentExpression	opline -> op1_type = IS_CONST		3931816	0		=			
ANR	3932045	PtrMemberAccess	opline -> op1_type		3931816	0					
ANR	3932046	Identifier	opline		3931816	0					
ANR	3932047	Identifier	op1_type		3931816	1					
ANR	3932048	Identifier	IS_CONST		3931816	1					
ANR	3932049	ExpressionStatement	"opline -> op1 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"	3379:2:98158:98263	3931816	1	True				
ANR	3932050	AssignmentExpression	"opline -> op1 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"		3931816	0		=			
ANR	3932051	MemberAccess	opline -> op1 . constant		3931816	0					
ANR	3932052	PtrMemberAccess	opline -> op1		3931816	0					
ANR	3932053	Identifier	opline		3931816	0					
ANR	3932054	Identifier	op1		3931816	1					
ANR	3932055	Identifier	constant		3931816	1					
ANR	3932056	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"		3931816	1					
ANR	3932057	Callee	zend_add_class_name_literal		3931816	0					
ANR	3932058	Identifier	zend_add_class_name_literal		3931816	0					
ANR	3932059	ArgumentList	CG ( active_op_array )		3931816	1					
ANR	3932060	Argument	CG ( active_op_array )		3931816	0					
ANR	3932061	CallExpression	CG ( active_op_array )		3931816	0					
ANR	3932062	Callee	CG		3931816	0					
ANR	3932063	Identifier	CG		3931816	0					
ANR	3932064	ArgumentList	active_op_array		3931816	1					
ANR	3932065	Argument	active_op_array		3931816	0					
ANR	3932066	Identifier	active_op_array		3931816	0					
ANR	3932067	Argument	Z_STR ( class_node . u . constant )		3931816	1					
ANR	3932068	CallExpression	Z_STR ( class_node . u . constant )		3931816	0					
ANR	3932069	Callee	Z_STR		3931816	0					
ANR	3932070	Identifier	Z_STR		3931816	0					
ANR	3932071	ArgumentList	class_node . u . constant		3931816	1					
ANR	3932072	Argument	class_node . u . constant		3931816	0					
ANR	3932073	MemberAccess	class_node . u . constant		3931816	0					
ANR	3932074	MemberAccess	class_node . u		3931816	0					
ANR	3932075	Identifier	class_node		3931816	0					
ANR	3932076	Identifier	u		3931816	1					
ANR	3932077	Identifier	constant		3931816	1					
ANR	3932078	ElseStatement	else		3931816	0					
ANR	3932079	CompoundStatement		34:8:1126:1126	3931816	0					
ANR	3932080	ExpressionStatement	"SET_NODE ( opline -> op1 , & class_node )"	3382:2:98277:98311	3931816	0	True				
ANR	3932081	CallExpression	"SET_NODE ( opline -> op1 , & class_node )"		3931816	0					
ANR	3932082	Callee	SET_NODE		3931816	0					
ANR	3932083	Identifier	SET_NODE		3931816	0					
ANR	3932084	ArgumentList	opline -> op1		3931816	1					
ANR	3932085	Argument	opline -> op1		3931816	0					
ANR	3932086	PtrMemberAccess	opline -> op1		3931816	0					
ANR	3932087	Identifier	opline		3931816	0					
ANR	3932088	Identifier	op1		3931816	1					
ANR	3932089	Argument	& class_node		3931816	1					
ANR	3932090	UnaryOperationExpression	& class_node		3931816	0					
ANR	3932091	UnaryOperator	&		3931816	0					
ANR	3932092	Identifier	class_node		3931816	1					
ANR	3932093	ExpressionStatement	"zend_compile_call_common ( & ctor_result , args_ast , NULL )"	3385:1:98318:98372	3931816	9	True				
ANR	3932094	CallExpression	"zend_compile_call_common ( & ctor_result , args_ast , NULL )"		3931816	0					
ANR	3932095	Callee	zend_compile_call_common		3931816	0					
ANR	3932096	Identifier	zend_compile_call_common		3931816	0					
ANR	3932097	ArgumentList	& ctor_result		3931816	1					
ANR	3932098	Argument	& ctor_result		3931816	0					
ANR	3932099	UnaryOperationExpression	& ctor_result		3931816	0					
ANR	3932100	UnaryOperator	&		3931816	0					
ANR	3932101	Identifier	ctor_result		3931816	1					
ANR	3932102	Argument	args_ast		3931816	1					
ANR	3932103	Identifier	args_ast		3931816	0					
ANR	3932104	Argument	NULL		3931816	2					
ANR	3932105	Identifier	NULL		3931816	0					
ANR	3932106	ExpressionStatement	zend_do_free ( & ctor_result )	3386:1:98375:98401	3931816	10	True				
ANR	3932107	CallExpression	zend_do_free ( & ctor_result )		3931816	0					
ANR	3932108	Callee	zend_do_free		3931816	0					
ANR	3932109	Identifier	zend_do_free		3931816	0					
ANR	3932110	ArgumentList	& ctor_result		3931816	1					
ANR	3932111	Argument	& ctor_result		3931816	0					
ANR	3932112	UnaryOperationExpression	& ctor_result		3931816	0					
ANR	3932113	UnaryOperator	&		3931816	0					
ANR	3932114	Identifier	ctor_result		3931816	1					
ANR	3932115	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum ]	3389:1:98460:98505	3931816	11	True				
ANR	3932116	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum ]		3931816	0		=			
ANR	3932117	Identifier	opline		3931816	0					
ANR	3932118	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum ]		3931816	1					
ANR	3932119	UnaryOperator	&		3931816	0					
ANR	3932120	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum ]		3931816	1					
ANR	3932121	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3931816	0					
ANR	3932122	CallExpression	CG ( active_op_array )		3931816	0					
ANR	3932123	Callee	CG		3931816	0					
ANR	3932124	Identifier	CG		3931816	0					
ANR	3932125	ArgumentList	active_op_array		3931816	1					
ANR	3932126	Argument	active_op_array		3931816	0					
ANR	3932127	Identifier	active_op_array		3931816	0					
ANR	3932128	Identifier	opcodes		3931816	1					
ANR	3932129	Identifier	opnum		3931816	1					
ANR	3932130	ExpressionStatement	opline -> op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )	3390:1:98508:98572	3931816	12	True				
ANR	3932131	AssignmentExpression	opline -> op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )		3931816	0		=			
ANR	3932132	MemberAccess	opline -> op2 . opline_num		3931816	0					
ANR	3932133	PtrMemberAccess	opline -> op2		3931816	0					
ANR	3932134	Identifier	opline		3931816	0					
ANR	3932135	Identifier	op2		3931816	1					
ANR	3932136	Identifier	opline_num		3931816	1					
ANR	3932137	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3931816	1					
ANR	3932138	Callee	get_next_op_number		3931816	0					
ANR	3932139	Identifier	get_next_op_number		3931816	0					
ANR	3932140	ArgumentList	CG ( active_op_array )		3931816	1					
ANR	3932141	Argument	CG ( active_op_array )		3931816	0					
ANR	3932142	CallExpression	CG ( active_op_array )		3931816	0					
ANR	3932143	Callee	CG		3931816	0					
ANR	3932144	Identifier	CG		3931816	0					
ANR	3932145	ArgumentList	active_op_array		3931816	1					
ANR	3932146	Argument	active_op_array		3931816	0					
ANR	3932147	Identifier	active_op_array		3931816	0					
ANR	3932148	ReturnType	void		3931816	1					
ANR	3932149	Identifier	zend_compile_new		3931816	2					
ANR	3932150	ParameterList	"znode * result , zend_ast * ast"		3931816	3					
ANR	3932151	Parameter	znode * result	3347:22:97106:97118	3931816	0	True				
ANR	3932152	ParameterType	znode *		3931816	0					
ANR	3932153	Identifier	result		3931816	1					
ANR	3932154	Parameter	zend_ast * ast	3347:37:97121:97133	3931816	1	True				
ANR	3932155	ParameterType	zend_ast *		3931816	0					
ANR	3932156	Identifier	ast		3931816	1					
ANR	3932157	CFGEntryNode	ENTRY		3931816		True				
ANR	3932158	CFGExitNode	EXIT		3931816		True				
ANR	3932159	Symbol	ast		3931816						
ANR	3932160	Symbol	class_node . u . constant		3931816						
ANR	3932161	Symbol	& class_node		3931816						
ANR	3932162	Symbol	* CG		3931816						
ANR	3932163	Symbol	Z_STR		3931816						
ANR	3932164	Symbol	CG ( active_op_array ) -> opcodes		3931816						
ANR	3932165	Symbol	opline -> result		3931816						
ANR	3932166	Symbol	opline		3931816						
ANR	3932167	Symbol	class_node . u		3931816						
ANR	3932168	Symbol	& ctor_result		3931816						
ANR	3932169	Symbol	IS_CONST		3931816						
ANR	3932170	Symbol	NULL		3931816						
ANR	3932171	Symbol	class_node . u . op . var		3931816						
ANR	3932172	Symbol	opline -> op1_type		3931816						
ANR	3932173	Symbol	* ast -> child		3931816						
ANR	3932174	Symbol	ast -> child		3931816						
ANR	3932175	Symbol	args_ast		3931816						
ANR	3932176	Symbol	zend_emit_op		3931816						
ANR	3932177	Symbol	ctor_result		3931816						
ANR	3932178	Symbol	zend_is_const_default_class_ref		3931816						
ANR	3932179	Symbol	opline -> op1		3931816						
ANR	3932180	Symbol	zend_add_class_name_literal		3931816						
ANR	3932181	Symbol	opline -> op2		3931816						
ANR	3932182	Symbol	class_node		3931816						
ANR	3932183	Symbol	class_ast		3931816						
ANR	3932184	Symbol	dcl_opnum		3931816						
ANR	3932185	Symbol	result		3931816						
ANR	3932186	Symbol	class_node . op_type		3931816						
ANR	3932187	Symbol	& class_node . u . constant		3931816						
ANR	3932188	Symbol	* ast		3931816						
ANR	3932189	Symbol	opnum		3931816						
ANR	3932190	Symbol	opline -> op1 . constant		3931816						
ANR	3932191	Symbol	* * ast		3931816						
ANR	3932192	Symbol	ZEND_AST_CLASS		3931816						
ANR	3932193	Symbol	ZEND_NEW		3931816						
ANR	3932194	Symbol	opline -> result_type		3931816						
ANR	3932195	Symbol	& class_node . u		3931816						
ANR	3932196	Symbol	* class_ast		3931816						
ANR	3932197	Symbol	opline -> op2 . opline_num		3931816						
ANR	3932198	Symbol	CG		3931816						
ANR	3932199	Symbol	zend_resolve_class_name_ast		3931816						
ANR	3932200	Symbol	active_op_array		3931816						
ANR	3932201	Symbol	opline -> op1 . opline_num		3931816						
ANR	3932202	Symbol	class_ast -> kind		3931816						
ANR	3932203	Symbol	ZEND_FETCH_CLASS		3931816						
ANR	3932204	Symbol	* opline		3931816						
ANR	3932205	Symbol	opline -> opcode		3931816						
ANR	3932206	Symbol	class_node . u . op		3931816						
ANR	3932207	Symbol	get_next_op_number		3931816						
ANR	3932208	Symbol	opline -> result . var		3931816						
ANR	3932209	Function	zend_compile_clone	3394:0:98587:98800							
ANR	3932210	FunctionDef	"zend_compile_clone (znode * result , zend_ast * ast)"		3932209	0					
ANR	3932211	CompoundStatement		3395:0:98651:98800	3932209	0					
ANR	3932212	IdentifierDeclStatement	zend_ast * obj_ast = ast -> child [ 0 ] ;	3396:1:98654:98687	3932209	0	True				
ANR	3932213	IdentifierDecl	* obj_ast = ast -> child [ 0 ]		3932209	0					
ANR	3932214	IdentifierDeclType	zend_ast *		3932209	0					
ANR	3932215	Identifier	obj_ast		3932209	1					
ANR	3932216	AssignmentExpression	* obj_ast = ast -> child [ 0 ]		3932209	2		=			
ANR	3932217	Identifier	obj_ast		3932209	0					
ANR	3932218	ArrayIndexing	ast -> child [ 0 ]		3932209	1					
ANR	3932219	PtrMemberAccess	ast -> child		3932209	0					
ANR	3932220	Identifier	ast		3932209	0					
ANR	3932221	Identifier	child		3932209	1					
ANR	3932222	PrimaryExpression	0		3932209	1					
ANR	3932223	IdentifierDeclStatement	znode obj_node ;	3398:1:98691:98705	3932209	1	True				
ANR	3932224	IdentifierDecl	obj_node		3932209	0					
ANR	3932225	IdentifierDeclType	znode		3932209	0					
ANR	3932226	Identifier	obj_node		3932209	1					
ANR	3932227	ExpressionStatement	"zend_compile_expr ( & obj_node , obj_ast )"	3399:1:98708:98745	3932209	2	True				
ANR	3932228	CallExpression	"zend_compile_expr ( & obj_node , obj_ast )"		3932209	0					
ANR	3932229	Callee	zend_compile_expr		3932209	0					
ANR	3932230	Identifier	zend_compile_expr		3932209	0					
ANR	3932231	ArgumentList	& obj_node		3932209	1					
ANR	3932232	Argument	& obj_node		3932209	0					
ANR	3932233	UnaryOperationExpression	& obj_node		3932209	0					
ANR	3932234	UnaryOperator	&		3932209	0					
ANR	3932235	Identifier	obj_node		3932209	1					
ANR	3932236	Argument	obj_ast		3932209	1					
ANR	3932237	Identifier	obj_ast		3932209	0					
ANR	3932238	ExpressionStatement	"zend_emit_op ( result , ZEND_CLONE , & obj_node , NULL )"	3401:1:98749:98798	3932209	3	True				
ANR	3932239	CallExpression	"zend_emit_op ( result , ZEND_CLONE , & obj_node , NULL )"		3932209	0					
ANR	3932240	Callee	zend_emit_op		3932209	0					
ANR	3932241	Identifier	zend_emit_op		3932209	0					
ANR	3932242	ArgumentList	result		3932209	1					
ANR	3932243	Argument	result		3932209	0					
ANR	3932244	Identifier	result		3932209	0					
ANR	3932245	Argument	ZEND_CLONE		3932209	1					
ANR	3932246	Identifier	ZEND_CLONE		3932209	0					
ANR	3932247	Argument	& obj_node		3932209	2					
ANR	3932248	UnaryOperationExpression	& obj_node		3932209	0					
ANR	3932249	UnaryOperator	&		3932209	0					
ANR	3932250	Identifier	obj_node		3932209	1					
ANR	3932251	Argument	NULL		3932209	3					
ANR	3932252	Identifier	NULL		3932209	0					
ANR	3932253	ReturnType	void		3932209	1					
ANR	3932254	Identifier	zend_compile_clone		3932209	2					
ANR	3932255	ParameterList	"znode * result , zend_ast * ast"		3932209	3					
ANR	3932256	Parameter	znode * result	3394:24:98611:98623	3932209	0	True				
ANR	3932257	ParameterType	znode *		3932209	0					
ANR	3932258	Identifier	result		3932209	1					
ANR	3932259	Parameter	zend_ast * ast	3394:39:98626:98638	3932209	1	True				
ANR	3932260	ParameterType	zend_ast *		3932209	0					
ANR	3932261	Identifier	ast		3932209	1					
ANR	3932262	CFGEntryNode	ENTRY		3932209		True				
ANR	3932263	CFGExitNode	EXIT		3932209		True				
ANR	3932264	Symbol	result		3932209						
ANR	3932265	Symbol	ast		3932209						
ANR	3932266	Symbol	* ast		3932209						
ANR	3932267	Symbol	NULL		3932209						
ANR	3932268	Symbol	* * ast		3932209						
ANR	3932269	Symbol	ZEND_CLONE		3932209						
ANR	3932270	Symbol	* ast -> child		3932209						
ANR	3932271	Symbol	obj_ast		3932209						
ANR	3932272	Symbol	ast -> child		3932209						
ANR	3932273	Symbol	& obj_node		3932209						
ANR	3932274	Symbol	obj_node		3932209						
ANR	3932275	Function	zend_compile_global_var	3405:0:98813:99491							
ANR	3932276	FunctionDef	zend_compile_global_var (zend_ast * ast)		3932275	0					
ANR	3932277	CompoundStatement		3406:0:98867:99491	3932275	0					
ANR	3932278	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	3407:1:98870:98903	3932275	0	True				
ANR	3932279	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3932275	0					
ANR	3932280	IdentifierDeclType	zend_ast *		3932275	0					
ANR	3932281	Identifier	var_ast		3932275	1					
ANR	3932282	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3932275	2		=			
ANR	3932283	Identifier	var_ast		3932275	0					
ANR	3932284	ArrayIndexing	ast -> child [ 0 ]		3932275	1					
ANR	3932285	PtrMemberAccess	ast -> child		3932275	0					
ANR	3932286	Identifier	ast		3932275	0					
ANR	3932287	Identifier	child		3932275	1					
ANR	3932288	PrimaryExpression	0		3932275	1					
ANR	3932289	IdentifierDeclStatement	zend_ast * name_ast = var_ast -> child [ 0 ] ;	3408:1:98906:98944	3932275	1	True				
ANR	3932290	IdentifierDecl	* name_ast = var_ast -> child [ 0 ]		3932275	0					
ANR	3932291	IdentifierDeclType	zend_ast *		3932275	0					
ANR	3932292	Identifier	name_ast		3932275	1					
ANR	3932293	AssignmentExpression	* name_ast = var_ast -> child [ 0 ]		3932275	2		=			
ANR	3932294	Identifier	name_ast		3932275	0					
ANR	3932295	ArrayIndexing	var_ast -> child [ 0 ]		3932275	1					
ANR	3932296	PtrMemberAccess	var_ast -> child		3932275	0					
ANR	3932297	Identifier	var_ast		3932275	0					
ANR	3932298	Identifier	child		3932275	1					
ANR	3932299	PrimaryExpression	0		3932275	1					
ANR	3932300	IdentifierDeclStatement	"znode name_node , result ;"	3410:1:98948:98971	3932275	2	True				
ANR	3932301	IdentifierDecl	name_node		3932275	0					
ANR	3932302	IdentifierDeclType	znode		3932275	0					
ANR	3932303	Identifier	name_node		3932275	1					
ANR	3932304	IdentifierDecl	result		3932275	1					
ANR	3932305	IdentifierDeclType	znode		3932275	0					
ANR	3932306	Identifier	result		3932275	1					
ANR	3932307	ExpressionStatement	"zend_compile_expr ( & name_node , name_ast )"	3412:1:98975:99014	3932275	3	True				
ANR	3932308	CallExpression	"zend_compile_expr ( & name_node , name_ast )"		3932275	0					
ANR	3932309	Callee	zend_compile_expr		3932275	0					
ANR	3932310	Identifier	zend_compile_expr		3932275	0					
ANR	3932311	ArgumentList	& name_node		3932275	1					
ANR	3932312	Argument	& name_node		3932275	0					
ANR	3932313	UnaryOperationExpression	& name_node		3932275	0					
ANR	3932314	UnaryOperator	&		3932275	0					
ANR	3932315	Identifier	name_node		3932275	1					
ANR	3932316	Argument	name_ast		3932275	1					
ANR	3932317	Identifier	name_ast		3932275	0					
ANR	3932318	IfStatement	if ( name_node . op_type == IS_CONST )		3932275	4					
ANR	3932319	Condition	name_node . op_type == IS_CONST	3413:5:99021:99049	3932275	0	True				
ANR	3932320	EqualityExpression	name_node . op_type == IS_CONST		3932275	0		==			
ANR	3932321	MemberAccess	name_node . op_type		3932275	0					
ANR	3932322	Identifier	name_node		3932275	0					
ANR	3932323	Identifier	op_type		3932275	1					
ANR	3932324	Identifier	IS_CONST		3932275	1					
ANR	3932325	CompoundStatement		8:36:184:184	3932275	1					
ANR	3932326	ExpressionStatement	convert_to_string ( & name_node . u . constant )	3414:2:99056:99096	3932275	0	True				
ANR	3932327	CallExpression	convert_to_string ( & name_node . u . constant )		3932275	0					
ANR	3932328	Callee	convert_to_string		3932275	0					
ANR	3932329	Identifier	convert_to_string		3932275	0					
ANR	3932330	ArgumentList	& name_node . u . constant		3932275	1					
ANR	3932331	Argument	& name_node . u . constant		3932275	0					
ANR	3932332	UnaryOperationExpression	& name_node . u . constant		3932275	0					
ANR	3932333	UnaryOperator	&		3932275	0					
ANR	3932334	MemberAccess	name_node . u . constant		3932275	1					
ANR	3932335	MemberAccess	name_node . u		3932275	0					
ANR	3932336	Identifier	name_node		3932275	0					
ANR	3932337	Identifier	u		3932275	1					
ANR	3932338	Identifier	constant		3932275	1					
ANR	3932339	IfStatement	"if ( zend_try_compile_cv ( & result , var_ast ) == SUCCESS )"		3932275	5					
ANR	3932340	Condition	"zend_try_compile_cv ( & result , var_ast ) == SUCCESS"	3417:5:99107:99154	3932275	0	True				
ANR	3932341	EqualityExpression	"zend_try_compile_cv ( & result , var_ast ) == SUCCESS"		3932275	0		==			
ANR	3932342	CallExpression	"zend_try_compile_cv ( & result , var_ast )"		3932275	0					
ANR	3932343	Callee	zend_try_compile_cv		3932275	0					
ANR	3932344	Identifier	zend_try_compile_cv		3932275	0					
ANR	3932345	ArgumentList	& result		3932275	1					
ANR	3932346	Argument	& result		3932275	0					
ANR	3932347	UnaryOperationExpression	& result		3932275	0					
ANR	3932348	UnaryOperator	&		3932275	0					
ANR	3932349	Identifier	result		3932275	1					
ANR	3932350	Argument	var_ast		3932275	1					
ANR	3932351	Identifier	var_ast		3932275	0					
ANR	3932352	Identifier	SUCCESS		3932275	1					
ANR	3932353	CompoundStatement		13:2:293:368	3932275	1					
ANR	3932354	IdentifierDeclStatement	"zend_op * opline = zend_emit_op ( NULL , ZEND_BIND_GLOBAL , & result , & name_node ) ;"	3418:2:99161:99236	3932275	0	True				
ANR	3932355	IdentifierDecl	"* opline = zend_emit_op ( NULL , ZEND_BIND_GLOBAL , & result , & name_node )"		3932275	0					
ANR	3932356	IdentifierDeclType	zend_op *		3932275	0					
ANR	3932357	Identifier	opline		3932275	1					
ANR	3932358	AssignmentExpression	"* opline = zend_emit_op ( NULL , ZEND_BIND_GLOBAL , & result , & name_node )"		3932275	2		=			
ANR	3932359	Identifier	opline		3932275	0					
ANR	3932360	CallExpression	"zend_emit_op ( NULL , ZEND_BIND_GLOBAL , & result , & name_node )"		3932275	1					
ANR	3932361	Callee	zend_emit_op		3932275	0					
ANR	3932362	Identifier	zend_emit_op		3932275	0					
ANR	3932363	ArgumentList	NULL		3932275	1					
ANR	3932364	Argument	NULL		3932275	0					
ANR	3932365	Identifier	NULL		3932275	0					
ANR	3932366	Argument	ZEND_BIND_GLOBAL		3932275	1					
ANR	3932367	Identifier	ZEND_BIND_GLOBAL		3932275	0					
ANR	3932368	Argument	& result		3932275	2					
ANR	3932369	UnaryOperationExpression	& result		3932275	0					
ANR	3932370	UnaryOperator	&		3932275	0					
ANR	3932371	Identifier	result		3932275	1					
ANR	3932372	Argument	& name_node		3932275	3					
ANR	3932373	UnaryOperationExpression	& name_node		3932275	0					
ANR	3932374	UnaryOperator	&		3932275	0					
ANR	3932375	Identifier	name_node		3932275	1					
ANR	3932376	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	3419:2:99240:99283	3932275	1	True				
ANR	3932377	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3932275	0					
ANR	3932378	Callee	zend_alloc_cache_slot		3932275	0					
ANR	3932379	Identifier	zend_alloc_cache_slot		3932275	0					
ANR	3932380	ArgumentList	opline -> op2 . constant		3932275	1					
ANR	3932381	Argument	opline -> op2 . constant		3932275	0					
ANR	3932382	MemberAccess	opline -> op2 . constant		3932275	0					
ANR	3932383	PtrMemberAccess	opline -> op2		3932275	0					
ANR	3932384	Identifier	opline		3932275	0					
ANR	3932385	Identifier	op2		3932275	1					
ANR	3932386	Identifier	constant		3932275	1					
ANR	3932387	ElseStatement	else		3932275	0					
ANR	3932388	CompoundStatement		15:8:425:425	3932275	0					
ANR	3932389	ExpressionStatement	"zend_emit_op ( & result , ZEND_FETCH_W , & name_node , NULL )"	3421:2:99297:99350	3932275	0	True				
ANR	3932390	CallExpression	"zend_emit_op ( & result , ZEND_FETCH_W , & name_node , NULL )"		3932275	0					
ANR	3932391	Callee	zend_emit_op		3932275	0					
ANR	3932392	Identifier	zend_emit_op		3932275	0					
ANR	3932393	ArgumentList	& result		3932275	1					
ANR	3932394	Argument	& result		3932275	0					
ANR	3932395	UnaryOperationExpression	& result		3932275	0					
ANR	3932396	UnaryOperator	&		3932275	0					
ANR	3932397	Identifier	result		3932275	1					
ANR	3932398	Argument	ZEND_FETCH_W		3932275	1					
ANR	3932399	Identifier	ZEND_FETCH_W		3932275	0					
ANR	3932400	Argument	& name_node		3932275	2					
ANR	3932401	UnaryOperationExpression	& name_node		3932275	0					
ANR	3932402	UnaryOperator	&		3932275	0					
ANR	3932403	Identifier	name_node		3932275	1					
ANR	3932404	Argument	NULL		3932275	3					
ANR	3932405	Identifier	NULL		3932275	0					
ANR	3932406	ExpressionStatement	"zend_emit_assign_ref_znode ( var_ast , & result )"	3426:2:99442:99486	3932275	1	True				
ANR	3932407	CallExpression	"zend_emit_assign_ref_znode ( var_ast , & result )"		3932275	0					
ANR	3932408	Callee	zend_emit_assign_ref_znode		3932275	0					
ANR	3932409	Identifier	zend_emit_assign_ref_znode		3932275	0					
ANR	3932410	ArgumentList	var_ast		3932275	1					
ANR	3932411	Argument	var_ast		3932275	0					
ANR	3932412	Identifier	var_ast		3932275	0					
ANR	3932413	Argument	& result		3932275	1					
ANR	3932414	UnaryOperationExpression	& result		3932275	0					
ANR	3932415	UnaryOperator	&		3932275	0					
ANR	3932416	Identifier	result		3932275	1					
ANR	3932417	ReturnType	void		3932275	1					
ANR	3932418	Identifier	zend_compile_global_var		3932275	2					
ANR	3932419	ParameterList	zend_ast * ast		3932275	3					
ANR	3932420	Parameter	zend_ast * ast	3405:29:98842:98854	3932275	0	True				
ANR	3932421	ParameterType	zend_ast *		3932275	0					
ANR	3932422	Identifier	ast		3932275	1					
ANR	3932423	CFGEntryNode	ENTRY		3932275		True				
ANR	3932424	CFGExitNode	EXIT		3932275		True				
ANR	3932425	Symbol	opline -> op2		3932275						
ANR	3932426	Symbol	ast		3932275						
ANR	3932427	Symbol	* var_ast		3932275						
ANR	3932428	Symbol	result		3932275						
ANR	3932429	Symbol	* ast		3932275						
ANR	3932430	Symbol	opline		3932275						
ANR	3932431	Symbol	* * var_ast		3932275						
ANR	3932432	Symbol	& name_node		3932275						
ANR	3932433	Symbol	* * ast		3932275						
ANR	3932434	Symbol	& result		3932275						
ANR	3932435	Symbol	var_ast -> child		3932275						
ANR	3932436	Symbol	& name_node . u		3932275						
ANR	3932437	Symbol	IS_CONST		3932275						
ANR	3932438	Symbol	SUCCESS		3932275						
ANR	3932439	Symbol	NULL		3932275						
ANR	3932440	Symbol	name_node . u		3932275						
ANR	3932441	Symbol	zend_try_compile_cv		3932275						
ANR	3932442	Symbol	ZEND_BIND_GLOBAL		3932275						
ANR	3932443	Symbol	var_ast		3932275						
ANR	3932444	Symbol	ZEND_FETCH_W		3932275						
ANR	3932445	Symbol	name_node . op_type		3932275						
ANR	3932446	Symbol	* opline		3932275						
ANR	3932447	Symbol	name_ast		3932275						
ANR	3932448	Symbol	& name_node . u . constant		3932275						
ANR	3932449	Symbol	opline -> op2 . constant		3932275						
ANR	3932450	Symbol	* ast -> child		3932275						
ANR	3932451	Symbol	ast -> child		3932275						
ANR	3932452	Symbol	* var_ast -> child		3932275						
ANR	3932453	Symbol	name_node		3932275						
ANR	3932454	Symbol	zend_emit_op		3932275						
ANR	3932455	Function	zend_compile_static_var_common	3431:0:99504:100783							
ANR	3932456	FunctionDef	"zend_compile_static_var_common (zend_ast * var_ast , zval * value , zend_bool by_ref)"		3932455	0					
ANR	3932457	CompoundStatement		3432:0:99607:100783	3932455	0					
ANR	3932458	IdentifierDeclStatement	"znode var_node , result ;"	3433:1:99610:99632	3932455	0	True				
ANR	3932459	IdentifierDecl	var_node		3932455	0					
ANR	3932460	IdentifierDeclType	znode		3932455	0					
ANR	3932461	Identifier	var_node		3932455	1					
ANR	3932462	IdentifierDecl	result		3932455	1					
ANR	3932463	IdentifierDeclType	znode		3932455	0					
ANR	3932464	Identifier	result		3932455	1					
ANR	3932465	IdentifierDeclStatement	zend_op * opline ;	3434:1:99635:99650	3932455	1	True				
ANR	3932466	IdentifierDecl	* opline		3932455	0					
ANR	3932467	IdentifierDeclType	zend_op *		3932455	0					
ANR	3932468	Identifier	opline		3932455	1					
ANR	3932469	ExpressionStatement	"zend_compile_expr ( & var_node , var_ast )"	3436:1:99654:99691	3932455	2	True				
ANR	3932470	CallExpression	"zend_compile_expr ( & var_node , var_ast )"		3932455	0					
ANR	3932471	Callee	zend_compile_expr		3932455	0					
ANR	3932472	Identifier	zend_compile_expr		3932455	0					
ANR	3932473	ArgumentList	& var_node		3932455	1					
ANR	3932474	Argument	& var_node		3932455	0					
ANR	3932475	UnaryOperationExpression	& var_node		3932455	0					
ANR	3932476	UnaryOperator	&		3932455	0					
ANR	3932477	Identifier	var_node		3932455	1					
ANR	3932478	Argument	var_ast		3932455	1					
ANR	3932479	Identifier	var_ast		3932455	0					
ANR	3932480	IfStatement	if ( ! CG ( active_op_array ) -> static_variables )		3932455	3					
ANR	3932481	Condition	! CG ( active_op_array ) -> static_variables	3438:5:99699:99736	3932455	0	True				
ANR	3932482	UnaryOperationExpression	! CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932483	UnaryOperator	!		3932455	0					
ANR	3932484	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932485	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932486	Callee	CG		3932455	0					
ANR	3932487	Identifier	CG		3932455	0					
ANR	3932488	ArgumentList	active_op_array		3932455	1					
ANR	3932489	Argument	active_op_array		3932455	0					
ANR	3932490	Identifier	active_op_array		3932455	0					
ANR	3932491	Identifier	static_variables		3932455	1					
ANR	3932492	CompoundStatement		7:45:131:131	3932455	1					
ANR	3932493	IfStatement	if ( CG ( active_op_array ) -> scope )		3932455	0					
ANR	3932494	Condition	CG ( active_op_array ) -> scope	3439:6:99747:99772	3932455	0	True				
ANR	3932495	PtrMemberAccess	CG ( active_op_array ) -> scope		3932455	0					
ANR	3932496	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932497	Callee	CG		3932455	0					
ANR	3932498	Identifier	CG		3932455	0					
ANR	3932499	ArgumentList	active_op_array		3932455	1					
ANR	3932500	Argument	active_op_array		3932455	0					
ANR	3932501	Identifier	active_op_array		3932455	0					
ANR	3932502	Identifier	scope		3932455	1					
ANR	3932503	CompoundStatement		8:34:167:167	3932455	1					
ANR	3932504	ExpressionStatement	CG ( active_op_array ) -> scope -> ce_flags |= ZEND_HAS_STATIC_IN_METHODS	3440:3:99780:99846	3932455	0	True				
ANR	3932505	AssignmentExpression	CG ( active_op_array ) -> scope -> ce_flags |= ZEND_HAS_STATIC_IN_METHODS		3932455	0		|=			
ANR	3932506	PtrMemberAccess	CG ( active_op_array ) -> scope -> ce_flags		3932455	0					
ANR	3932507	PtrMemberAccess	CG ( active_op_array ) -> scope		3932455	0					
ANR	3932508	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932509	Callee	CG		3932455	0					
ANR	3932510	Identifier	CG		3932455	0					
ANR	3932511	ArgumentList	active_op_array		3932455	1					
ANR	3932512	Argument	active_op_array		3932455	0					
ANR	3932513	Identifier	active_op_array		3932455	0					
ANR	3932514	Identifier	scope		3932455	1					
ANR	3932515	Identifier	ce_flags		3932455	1					
ANR	3932516	Identifier	ZEND_HAS_STATIC_IN_METHODS		3932455	1					
ANR	3932517	ExpressionStatement	ALLOC_HASHTABLE ( CG ( active_op_array ) -> static_variables )	3442:2:99854:99908	3932455	1	True				
ANR	3932518	CallExpression	ALLOC_HASHTABLE ( CG ( active_op_array ) -> static_variables )		3932455	0					
ANR	3932519	Callee	ALLOC_HASHTABLE		3932455	0					
ANR	3932520	Identifier	ALLOC_HASHTABLE		3932455	0					
ANR	3932521	ArgumentList	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932522	Argument	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932523	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932524	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932525	Callee	CG		3932455	0					
ANR	3932526	Identifier	CG		3932455	0					
ANR	3932527	ArgumentList	active_op_array		3932455	1					
ANR	3932528	Argument	active_op_array		3932455	0					
ANR	3932529	Identifier	active_op_array		3932455	0					
ANR	3932530	Identifier	static_variables		3932455	1					
ANR	3932531	ExpressionStatement	"zend_hash_init ( CG ( active_op_array ) -> static_variables , 8 , NULL , ZVAL_PTR_DTOR , 0 )"	3443:2:99912:99992	3932455	2	True				
ANR	3932532	CallExpression	"zend_hash_init ( CG ( active_op_array ) -> static_variables , 8 , NULL , ZVAL_PTR_DTOR , 0 )"		3932455	0					
ANR	3932533	Callee	zend_hash_init		3932455	0					
ANR	3932534	Identifier	zend_hash_init		3932455	0					
ANR	3932535	ArgumentList	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932536	Argument	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932537	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932538	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932539	Callee	CG		3932455	0					
ANR	3932540	Identifier	CG		3932455	0					
ANR	3932541	ArgumentList	active_op_array		3932455	1					
ANR	3932542	Argument	active_op_array		3932455	0					
ANR	3932543	Identifier	active_op_array		3932455	0					
ANR	3932544	Identifier	static_variables		3932455	1					
ANR	3932545	Argument	8		3932455	1					
ANR	3932546	PrimaryExpression	8		3932455	0					
ANR	3932547	Argument	NULL		3932455	2					
ANR	3932548	Identifier	NULL		3932455	0					
ANR	3932549	Argument	ZVAL_PTR_DTOR		3932455	3					
ANR	3932550	Identifier	ZVAL_PTR_DTOR		3932455	0					
ANR	3932551	Argument	0		3932455	4					
ANR	3932552	PrimaryExpression	0		3932455	0					
ANR	3932553	IfStatement	if ( GC_REFCOUNT ( CG ( active_op_array ) -> static_variables ) > 1 )		3932455	4					
ANR	3932554	Condition	GC_REFCOUNT ( CG ( active_op_array ) -> static_variables ) > 1	3446:5:100003:100056	3932455	0	True				
ANR	3932555	RelationalExpression	GC_REFCOUNT ( CG ( active_op_array ) -> static_variables ) > 1		3932455	0		>			
ANR	3932556	CallExpression	GC_REFCOUNT ( CG ( active_op_array ) -> static_variables )		3932455	0					
ANR	3932557	Callee	GC_REFCOUNT		3932455	0					
ANR	3932558	Identifier	GC_REFCOUNT		3932455	0					
ANR	3932559	ArgumentList	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932560	Argument	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932561	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932562	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932563	Callee	CG		3932455	0					
ANR	3932564	Identifier	CG		3932455	0					
ANR	3932565	ArgumentList	active_op_array		3932455	1					
ANR	3932566	Argument	active_op_array		3932455	0					
ANR	3932567	Identifier	active_op_array		3932455	0					
ANR	3932568	Identifier	static_variables		3932455	1					
ANR	3932569	PrimaryExpression	1		3932455	1					
ANR	3932570	CompoundStatement		15:61:451:451	3932455	1					
ANR	3932571	IfStatement	if ( ! ( GC_FLAGS ( CG ( active_op_array ) -> static_variables ) & IS_ARRAY_IMMUTABLE ) )		3932455	0					
ANR	3932572	Condition	! ( GC_FLAGS ( CG ( active_op_array ) -> static_variables ) & IS_ARRAY_IMMUTABLE )	3447:6:100067:100137	3932455	0	True				
ANR	3932573	UnaryOperationExpression	! ( GC_FLAGS ( CG ( active_op_array ) -> static_variables ) & IS_ARRAY_IMMUTABLE )		3932455	0					
ANR	3932574	UnaryOperator	!		3932455	0					
ANR	3932575	BitAndExpression	GC_FLAGS ( CG ( active_op_array ) -> static_variables ) & IS_ARRAY_IMMUTABLE		3932455	1		&			
ANR	3932576	CallExpression	GC_FLAGS ( CG ( active_op_array ) -> static_variables )		3932455	0					
ANR	3932577	Callee	GC_FLAGS		3932455	0					
ANR	3932578	Identifier	GC_FLAGS		3932455	0					
ANR	3932579	ArgumentList	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932580	Argument	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932581	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932582	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932583	Callee	CG		3932455	0					
ANR	3932584	Identifier	CG		3932455	0					
ANR	3932585	ArgumentList	active_op_array		3932455	1					
ANR	3932586	Argument	active_op_array		3932455	0					
ANR	3932587	Identifier	active_op_array		3932455	0					
ANR	3932588	Identifier	static_variables		3932455	1					
ANR	3932589	Identifier	IS_ARRAY_IMMUTABLE		3932455	1					
ANR	3932590	CompoundStatement		16:79:532:532	3932455	1					
ANR	3932591	ExpressionStatement	GC_REFCOUNT ( CG ( active_op_array ) -> static_variables ) --	3448:3:100145:100197	3932455	0	True				
ANR	3932592	PostIncDecOperationExpression	GC_REFCOUNT ( CG ( active_op_array ) -> static_variables ) --		3932455	0					
ANR	3932593	CallExpression	GC_REFCOUNT ( CG ( active_op_array ) -> static_variables )		3932455	0					
ANR	3932594	Callee	GC_REFCOUNT		3932455	0					
ANR	3932595	Identifier	GC_REFCOUNT		3932455	0					
ANR	3932596	ArgumentList	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932597	Argument	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932598	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932599	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932600	Callee	CG		3932455	0					
ANR	3932601	Identifier	CG		3932455	0					
ANR	3932602	ArgumentList	active_op_array		3932455	1					
ANR	3932603	Argument	active_op_array		3932455	0					
ANR	3932604	Identifier	active_op_array		3932455	0					
ANR	3932605	Identifier	static_variables		3932455	1					
ANR	3932606	IncDec	--		3932455	1					
ANR	3932607	ExpressionStatement	CG ( active_op_array ) -> static_variables = zend_array_dup ( CG ( active_op_array ) -> static_variables )	3450:2:100205:100298	3932455	1	True				
ANR	3932608	AssignmentExpression	CG ( active_op_array ) -> static_variables = zend_array_dup ( CG ( active_op_array ) -> static_variables )		3932455	0		=			
ANR	3932609	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932610	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932611	Callee	CG		3932455	0					
ANR	3932612	Identifier	CG		3932455	0					
ANR	3932613	ArgumentList	active_op_array		3932455	1					
ANR	3932614	Argument	active_op_array		3932455	0					
ANR	3932615	Identifier	active_op_array		3932455	0					
ANR	3932616	Identifier	static_variables		3932455	1					
ANR	3932617	CallExpression	zend_array_dup ( CG ( active_op_array ) -> static_variables )		3932455	1					
ANR	3932618	Callee	zend_array_dup		3932455	0					
ANR	3932619	Identifier	zend_array_dup		3932455	0					
ANR	3932620	ArgumentList	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932621	Argument	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932622	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932623	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932624	Callee	CG		3932455	0					
ANR	3932625	Identifier	CG		3932455	0					
ANR	3932626	ArgumentList	active_op_array		3932455	1					
ANR	3932627	Argument	active_op_array		3932455	0					
ANR	3932628	Identifier	active_op_array		3932455	0					
ANR	3932629	Identifier	static_variables		3932455	1					
ANR	3932630	ExpressionStatement	"zend_hash_update ( CG ( active_op_array ) -> static_variables , Z_STR ( var_node . u . constant ) , value )"	3452:1:100304:100394	3932455	5	True				
ANR	3932631	CallExpression	"zend_hash_update ( CG ( active_op_array ) -> static_variables , Z_STR ( var_node . u . constant ) , value )"		3932455	0					
ANR	3932632	Callee	zend_hash_update		3932455	0					
ANR	3932633	Identifier	zend_hash_update		3932455	0					
ANR	3932634	ArgumentList	CG ( active_op_array ) -> static_variables		3932455	1					
ANR	3932635	Argument	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932636	PtrMemberAccess	CG ( active_op_array ) -> static_variables		3932455	0					
ANR	3932637	CallExpression	CG ( active_op_array )		3932455	0					
ANR	3932638	Callee	CG		3932455	0					
ANR	3932639	Identifier	CG		3932455	0					
ANR	3932640	ArgumentList	active_op_array		3932455	1					
ANR	3932641	Argument	active_op_array		3932455	0					
ANR	3932642	Identifier	active_op_array		3932455	0					
ANR	3932643	Identifier	static_variables		3932455	1					
ANR	3932644	Argument	Z_STR ( var_node . u . constant )		3932455	1					
ANR	3932645	CallExpression	Z_STR ( var_node . u . constant )		3932455	0					
ANR	3932646	Callee	Z_STR		3932455	0					
ANR	3932647	Identifier	Z_STR		3932455	0					
ANR	3932648	ArgumentList	var_node . u . constant		3932455	1					
ANR	3932649	Argument	var_node . u . constant		3932455	0					
ANR	3932650	MemberAccess	var_node . u . constant		3932455	0					
ANR	3932651	MemberAccess	var_node . u		3932455	0					
ANR	3932652	Identifier	var_node		3932455	0					
ANR	3932653	Identifier	u		3932455	1					
ANR	3932654	Identifier	constant		3932455	1					
ANR	3932655	Argument	value		3932455	2					
ANR	3932656	Identifier	value		3932455	0					
ANR	3932657	ExpressionStatement	"opline = zend_emit_op ( & result , by_ref ? ZEND_FETCH_W : ZEND_FETCH_R , & var_node , NULL )"	3454:1:100398:100483	3932455	6	True				
ANR	3932658	AssignmentExpression	"opline = zend_emit_op ( & result , by_ref ? ZEND_FETCH_W : ZEND_FETCH_R , & var_node , NULL )"		3932455	0		=			
ANR	3932659	Identifier	opline		3932455	0					
ANR	3932660	CallExpression	"zend_emit_op ( & result , by_ref ? ZEND_FETCH_W : ZEND_FETCH_R , & var_node , NULL )"		3932455	1					
ANR	3932661	Callee	zend_emit_op		3932455	0					
ANR	3932662	Identifier	zend_emit_op		3932455	0					
ANR	3932663	ArgumentList	& result		3932455	1					
ANR	3932664	Argument	& result		3932455	0					
ANR	3932665	UnaryOperationExpression	& result		3932455	0					
ANR	3932666	UnaryOperator	&		3932455	0					
ANR	3932667	Identifier	result		3932455	1					
ANR	3932668	Argument	by_ref ? ZEND_FETCH_W : ZEND_FETCH_R		3932455	1					
ANR	3932669	ConditionalExpression	by_ref ? ZEND_FETCH_W : ZEND_FETCH_R		3932455	0					
ANR	3932670	Condition	by_ref		3932455	0					
ANR	3932671	Identifier	by_ref		3932455	0					
ANR	3932672	Identifier	ZEND_FETCH_W		3932455	1					
ANR	3932673	Identifier	ZEND_FETCH_R		3932455	2					
ANR	3932674	Argument	& var_node		3932455	2					
ANR	3932675	UnaryOperationExpression	& var_node		3932455	0					
ANR	3932676	UnaryOperator	&		3932455	0					
ANR	3932677	Identifier	var_node		3932455	1					
ANR	3932678	Argument	NULL		3932455	3					
ANR	3932679	Identifier	NULL		3932455	0					
ANR	3932680	ExpressionStatement	opline -> extended_value = ZEND_FETCH_STATIC	3455:1:100486:100528	3932455	7	True				
ANR	3932681	AssignmentExpression	opline -> extended_value = ZEND_FETCH_STATIC		3932455	0		=			
ANR	3932682	PtrMemberAccess	opline -> extended_value		3932455	0					
ANR	3932683	Identifier	opline		3932455	0					
ANR	3932684	Identifier	extended_value		3932455	1					
ANR	3932685	Identifier	ZEND_FETCH_STATIC		3932455	1					
ANR	3932686	IfStatement	if ( by_ref )		3932455	8					
ANR	3932687	Condition	by_ref	3457:5:100536:100541	3932455	0	True				
ANR	3932688	Identifier	by_ref		3932455	0					
ANR	3932689	CompoundStatement		27:2:940:1000	3932455	1					
ANR	3932690	IdentifierDeclStatement	"zend_ast * fetch_ast = zend_ast_create ( ZEND_AST_VAR , var_ast ) ;"	3458:2:100548:100608	3932455	0	True				
ANR	3932691	IdentifierDecl	"* fetch_ast = zend_ast_create ( ZEND_AST_VAR , var_ast )"		3932455	0					
ANR	3932692	IdentifierDeclType	zend_ast *		3932455	0					
ANR	3932693	Identifier	fetch_ast		3932455	1					
ANR	3932694	AssignmentExpression	"* fetch_ast = zend_ast_create ( ZEND_AST_VAR , var_ast )"		3932455	2		=			
ANR	3932695	Identifier	fetch_ast		3932455	0					
ANR	3932696	CallExpression	"zend_ast_create ( ZEND_AST_VAR , var_ast )"		3932455	1					
ANR	3932697	Callee	zend_ast_create		3932455	0					
ANR	3932698	Identifier	zend_ast_create		3932455	0					
ANR	3932699	ArgumentList	ZEND_AST_VAR		3932455	1					
ANR	3932700	Argument	ZEND_AST_VAR		3932455	0					
ANR	3932701	Identifier	ZEND_AST_VAR		3932455	0					
ANR	3932702	Argument	var_ast		3932455	1					
ANR	3932703	Identifier	var_ast		3932455	0					
ANR	3932704	ExpressionStatement	"zend_emit_assign_ref_znode ( fetch_ast , & result )"	3459:2:100612:100658	3932455	1	True				
ANR	3932705	CallExpression	"zend_emit_assign_ref_znode ( fetch_ast , & result )"		3932455	0					
ANR	3932706	Callee	zend_emit_assign_ref_znode		3932455	0					
ANR	3932707	Identifier	zend_emit_assign_ref_znode		3932455	0					
ANR	3932708	ArgumentList	fetch_ast		3932455	1					
ANR	3932709	Argument	fetch_ast		3932455	0					
ANR	3932710	Identifier	fetch_ast		3932455	0					
ANR	3932711	Argument	& result		3932455	1					
ANR	3932712	UnaryOperationExpression	& result		3932455	0					
ANR	3932713	UnaryOperator	&		3932455	0					
ANR	3932714	Identifier	result		3932455	1					
ANR	3932715	ElseStatement	else		3932455	0					
ANR	3932716	CompoundStatement		30:2:1064:1124	3932455	0					
ANR	3932717	IdentifierDeclStatement	"zend_ast * fetch_ast = zend_ast_create ( ZEND_AST_VAR , var_ast ) ;"	3461:2:100672:100732	3932455	0	True				
ANR	3932718	IdentifierDecl	"* fetch_ast = zend_ast_create ( ZEND_AST_VAR , var_ast )"		3932455	0					
ANR	3932719	IdentifierDeclType	zend_ast *		3932455	0					
ANR	3932720	Identifier	fetch_ast		3932455	1					
ANR	3932721	AssignmentExpression	"* fetch_ast = zend_ast_create ( ZEND_AST_VAR , var_ast )"		3932455	2		=			
ANR	3932722	Identifier	fetch_ast		3932455	0					
ANR	3932723	CallExpression	"zend_ast_create ( ZEND_AST_VAR , var_ast )"		3932455	1					
ANR	3932724	Callee	zend_ast_create		3932455	0					
ANR	3932725	Identifier	zend_ast_create		3932455	0					
ANR	3932726	ArgumentList	ZEND_AST_VAR		3932455	1					
ANR	3932727	Argument	ZEND_AST_VAR		3932455	0					
ANR	3932728	Identifier	ZEND_AST_VAR		3932455	0					
ANR	3932729	Argument	var_ast		3932455	1					
ANR	3932730	Identifier	var_ast		3932455	0					
ANR	3932731	ExpressionStatement	"zend_emit_assign_znode ( fetch_ast , & result )"	3462:2:100736:100778	3932455	1	True				
ANR	3932732	CallExpression	"zend_emit_assign_znode ( fetch_ast , & result )"		3932455	0					
ANR	3932733	Callee	zend_emit_assign_znode		3932455	0					
ANR	3932734	Identifier	zend_emit_assign_znode		3932455	0					
ANR	3932735	ArgumentList	fetch_ast		3932455	1					
ANR	3932736	Argument	fetch_ast		3932455	0					
ANR	3932737	Identifier	fetch_ast		3932455	0					
ANR	3932738	Argument	& result		3932455	1					
ANR	3932739	UnaryOperationExpression	& result		3932455	0					
ANR	3932740	UnaryOperator	&		3932455	0					
ANR	3932741	Identifier	result		3932455	1					
ANR	3932742	ReturnType	static void		3932455	1					
ANR	3932743	Identifier	zend_compile_static_var_common		3932455	2					
ANR	3932744	ParameterList	"zend_ast * var_ast , zval * value , zend_bool by_ref"		3932455	3					
ANR	3932745	Parameter	zend_ast * var_ast	3431:43:99547:99563	3932455	0	True				
ANR	3932746	ParameterType	zend_ast *		3932455	0					
ANR	3932747	Identifier	var_ast		3932455	1					
ANR	3932748	Parameter	zval * value	3431:62:99566:99576	3932455	1	True				
ANR	3932749	ParameterType	zval *		3932455	0					
ANR	3932750	Identifier	value		3932455	1					
ANR	3932751	Parameter	zend_bool by_ref	3431:75:99579:99594	3932455	2	True				
ANR	3932752	ParameterType	zend_bool		3932455	0					
ANR	3932753	Identifier	by_ref		3932455	1					
ANR	3932754	CFGEntryNode	ENTRY		3932455		True				
ANR	3932755	CFGExitNode	EXIT		3932455		True				
ANR	3932756	Symbol	var_node . u		3932455						
ANR	3932757	Symbol	* CG		3932455						
ANR	3932758	Symbol	GC_FLAGS		3932455						
ANR	3932759	Symbol	Z_STR		3932455						
ANR	3932760	Symbol	opline -> extended_value		3932455						
ANR	3932761	Symbol	result		3932455						
ANR	3932762	Symbol	* CG ( active_op_array ) -> scope		3932455						
ANR	3932763	Symbol	CG ( active_op_array ) -> scope -> ce_flags		3932455						
ANR	3932764	Symbol	* * CG		3932455						
ANR	3932765	Symbol	opline		3932455						
ANR	3932766	Symbol	ZEND_AST_VAR		3932455						
ANR	3932767	Symbol	CG ( active_op_array ) -> scope		3932455						
ANR	3932768	Symbol	& result		3932455						
ANR	3932769	Symbol	CG ( active_op_array ) -> static_variables		3932455						
ANR	3932770	Symbol	ZEND_FETCH_STATIC		3932455						
ANR	3932771	Symbol	value		3932455						
ANR	3932772	Symbol	GC_REFCOUNT		3932455						
ANR	3932773	Symbol	zend_array_dup		3932455						
ANR	3932774	Symbol	NULL		3932455						
ANR	3932775	Symbol	var_node		3932455						
ANR	3932776	Symbol	CG		3932455						
ANR	3932777	Symbol	& var_node		3932455						
ANR	3932778	Symbol	active_op_array		3932455						
ANR	3932779	Symbol	zend_ast_create		3932455						
ANR	3932780	Symbol	ZEND_FETCH_R		3932455						
ANR	3932781	Symbol	ZEND_HAS_STATIC_IN_METHODS		3932455						
ANR	3932782	Symbol	IS_ARRAY_IMMUTABLE		3932455						
ANR	3932783	Symbol	ZVAL_PTR_DTOR		3932455						
ANR	3932784	Symbol	var_node . u . constant		3932455						
ANR	3932785	Symbol	var_ast		3932455						
ANR	3932786	Symbol	ZEND_FETCH_W		3932455						
ANR	3932787	Symbol	* opline		3932455						
ANR	3932788	Symbol	by_ref		3932455						
ANR	3932789	Symbol	fetch_ast		3932455						
ANR	3932790	Symbol	zend_emit_op		3932455						
ANR	3932791	Function	zend_compile_static_var	3467:0:100796:101104							
ANR	3932792	FunctionDef	zend_compile_static_var (zend_ast * ast)		3932791	0					
ANR	3932793	CompoundStatement		3468:0:100850:101104	3932791	0					
ANR	3932794	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	3469:1:100853:100886	3932791	0	True				
ANR	3932795	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3932791	0					
ANR	3932796	IdentifierDeclType	zend_ast *		3932791	0					
ANR	3932797	Identifier	var_ast		3932791	1					
ANR	3932798	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3932791	2		=			
ANR	3932799	Identifier	var_ast		3932791	0					
ANR	3932800	ArrayIndexing	ast -> child [ 0 ]		3932791	1					
ANR	3932801	PtrMemberAccess	ast -> child		3932791	0					
ANR	3932802	Identifier	ast		3932791	0					
ANR	3932803	Identifier	child		3932791	1					
ANR	3932804	PrimaryExpression	0		3932791	1					
ANR	3932805	IdentifierDeclStatement	zend_ast * value_ast = ast -> child [ 1 ] ;	3470:1:100889:100924	3932791	1	True				
ANR	3932806	IdentifierDecl	* value_ast = ast -> child [ 1 ]		3932791	0					
ANR	3932807	IdentifierDeclType	zend_ast *		3932791	0					
ANR	3932808	Identifier	value_ast		3932791	1					
ANR	3932809	AssignmentExpression	* value_ast = ast -> child [ 1 ]		3932791	2		=			
ANR	3932810	Identifier	value_ast		3932791	0					
ANR	3932811	ArrayIndexing	ast -> child [ 1 ]		3932791	1					
ANR	3932812	PtrMemberAccess	ast -> child		3932791	0					
ANR	3932813	Identifier	ast		3932791	0					
ANR	3932814	Identifier	child		3932791	1					
ANR	3932815	PrimaryExpression	1		3932791	1					
ANR	3932816	IdentifierDeclStatement	zval value_zv ;	3471:1:100927:100940	3932791	2	True				
ANR	3932817	IdentifierDecl	value_zv		3932791	0					
ANR	3932818	IdentifierDeclType	zval		3932791	0					
ANR	3932819	Identifier	value_zv		3932791	1					
ANR	3932820	IfStatement	if ( value_ast )		3932791	3					
ANR	3932821	Condition	value_ast	3473:5:100948:100956	3932791	0	True				
ANR	3932822	Identifier	value_ast		3932791	0					
ANR	3932823	CompoundStatement		6:16:108:108	3932791	1					
ANR	3932824	ExpressionStatement	"zend_const_expr_to_zval ( & value_zv , value_ast )"	3474:2:100963:101008	3932791	0	True				
ANR	3932825	CallExpression	"zend_const_expr_to_zval ( & value_zv , value_ast )"		3932791	0					
ANR	3932826	Callee	zend_const_expr_to_zval		3932791	0					
ANR	3932827	Identifier	zend_const_expr_to_zval		3932791	0					
ANR	3932828	ArgumentList	& value_zv		3932791	1					
ANR	3932829	Argument	& value_zv		3932791	0					
ANR	3932830	UnaryOperationExpression	& value_zv		3932791	0					
ANR	3932831	UnaryOperator	&		3932791	0					
ANR	3932832	Identifier	value_zv		3932791	1					
ANR	3932833	Argument	value_ast		3932791	1					
ANR	3932834	Identifier	value_ast		3932791	0					
ANR	3932835	ElseStatement	else		3932791	0					
ANR	3932836	CompoundStatement		8:8:167:167	3932791	0					
ANR	3932837	ExpressionStatement	ZVAL_NULL ( & value_zv )	3476:2:101022:101042	3932791	0	True				
ANR	3932838	CallExpression	ZVAL_NULL ( & value_zv )		3932791	0					
ANR	3932839	Callee	ZVAL_NULL		3932791	0					
ANR	3932840	Identifier	ZVAL_NULL		3932791	0					
ANR	3932841	ArgumentList	& value_zv		3932791	1					
ANR	3932842	Argument	& value_zv		3932791	0					
ANR	3932843	UnaryOperationExpression	& value_zv		3932791	0					
ANR	3932844	UnaryOperator	&		3932791	0					
ANR	3932845	Identifier	value_zv		3932791	1					
ANR	3932846	ExpressionStatement	"zend_compile_static_var_common ( var_ast , & value_zv , 1 )"	3479:1:101049:101102	3932791	4	True				
ANR	3932847	CallExpression	"zend_compile_static_var_common ( var_ast , & value_zv , 1 )"		3932791	0					
ANR	3932848	Callee	zend_compile_static_var_common		3932791	0					
ANR	3932849	Identifier	zend_compile_static_var_common		3932791	0					
ANR	3932850	ArgumentList	var_ast		3932791	1					
ANR	3932851	Argument	var_ast		3932791	0					
ANR	3932852	Identifier	var_ast		3932791	0					
ANR	3932853	Argument	& value_zv		3932791	1					
ANR	3932854	UnaryOperationExpression	& value_zv		3932791	0					
ANR	3932855	UnaryOperator	&		3932791	0					
ANR	3932856	Identifier	value_zv		3932791	1					
ANR	3932857	Argument	1		3932791	2					
ANR	3932858	PrimaryExpression	1		3932791	0					
ANR	3932859	ReturnType	void		3932791	1					
ANR	3932860	Identifier	zend_compile_static_var		3932791	2					
ANR	3932861	ParameterList	zend_ast * ast		3932791	3					
ANR	3932862	Parameter	zend_ast * ast	3467:29:100825:100837	3932791	0	True				
ANR	3932863	ParameterType	zend_ast *		3932791	0					
ANR	3932864	Identifier	ast		3932791	1					
ANR	3932865	CFGEntryNode	ENTRY		3932791		True				
ANR	3932866	CFGExitNode	EXIT		3932791		True				
ANR	3932867	Symbol	var_ast		3932791						
ANR	3932868	Symbol	ast		3932791						
ANR	3932869	Symbol	* ast		3932791						
ANR	3932870	Symbol	& value_zv		3932791						
ANR	3932871	Symbol	value_ast		3932791						
ANR	3932872	Symbol	* * ast		3932791						
ANR	3932873	Symbol	value_zv		3932791						
ANR	3932874	Symbol	* ast -> child		3932791						
ANR	3932875	Symbol	ast -> child		3932791						
ANR	3932876	Function	zend_compile_unset	3483:0:101117:102117							
ANR	3932877	FunctionDef	zend_compile_unset (zend_ast * ast)		3932876	0					
ANR	3932878	CompoundStatement		3484:0:101166:102117	3932876	0					
ANR	3932879	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	3485:1:101169:101202	3932876	0	True				
ANR	3932880	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3932876	0					
ANR	3932881	IdentifierDeclType	zend_ast *		3932876	0					
ANR	3932882	Identifier	var_ast		3932876	1					
ANR	3932883	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3932876	2		=			
ANR	3932884	Identifier	var_ast		3932876	0					
ANR	3932885	ArrayIndexing	ast -> child [ 0 ]		3932876	1					
ANR	3932886	PtrMemberAccess	ast -> child		3932876	0					
ANR	3932887	Identifier	ast		3932876	0					
ANR	3932888	Identifier	child		3932876	1					
ANR	3932889	PrimaryExpression	0		3932876	1					
ANR	3932890	IdentifierDeclStatement	znode var_node ;	3486:1:101205:101219	3932876	1	True				
ANR	3932891	IdentifierDecl	var_node		3932876	0					
ANR	3932892	IdentifierDeclType	znode		3932876	0					
ANR	3932893	Identifier	var_node		3932876	1					
ANR	3932894	IdentifierDeclStatement	zend_op * opline ;	3487:1:101222:101237	3932876	2	True				
ANR	3932895	IdentifierDecl	* opline		3932876	0					
ANR	3932896	IdentifierDeclType	zend_op *		3932876	0					
ANR	3932897	Identifier	opline		3932876	1					
ANR	3932898	ExpressionStatement	zend_ensure_writable_variable ( var_ast )	3489:1:101241:101279	3932876	3	True				
ANR	3932899	CallExpression	zend_ensure_writable_variable ( var_ast )		3932876	0					
ANR	3932900	Callee	zend_ensure_writable_variable		3932876	0					
ANR	3932901	Identifier	zend_ensure_writable_variable		3932876	0					
ANR	3932902	ArgumentList	var_ast		3932876	1					
ANR	3932903	Argument	var_ast		3932876	0					
ANR	3932904	Identifier	var_ast		3932876	0					
ANR	3932905	SwitchStatement	switch ( var_ast -> kind )		3932876	4					
ANR	3932906	Condition	var_ast -> kind	3491:9:101291:101303	3932876	0	True				
ANR	3932907	PtrMemberAccess	var_ast -> kind		3932876	0					
ANR	3932908	Identifier	var_ast		3932876	0					
ANR	3932909	Identifier	kind		3932876	1					
ANR	3932910	CompoundStatement		8:24:139:139	3932876	1					
ANR	3932911	Label	case ZEND_AST_VAR :	3492:2:101310:101327	3932876	0	True				
ANR	3932912	Identifier	ZEND_AST_VAR		3932876	0					
ANR	3932913	IfStatement	"if ( zend_try_compile_cv ( & var_node , var_ast ) == SUCCESS )"		3932876	1					
ANR	3932914	Condition	"zend_try_compile_cv ( & var_node , var_ast ) == SUCCESS"	3493:7:101336:101385	3932876	0	True				
ANR	3932915	EqualityExpression	"zend_try_compile_cv ( & var_node , var_ast ) == SUCCESS"		3932876	0		==			
ANR	3932916	CallExpression	"zend_try_compile_cv ( & var_node , var_ast )"		3932876	0					
ANR	3932917	Callee	zend_try_compile_cv		3932876	0					
ANR	3932918	Identifier	zend_try_compile_cv		3932876	0					
ANR	3932919	ArgumentList	& var_node		3932876	1					
ANR	3932920	Argument	& var_node		3932876	0					
ANR	3932921	UnaryOperationExpression	& var_node		3932876	0					
ANR	3932922	UnaryOperator	&		3932876	0					
ANR	3932923	Identifier	var_node		3932876	1					
ANR	3932924	Argument	var_ast		3932876	1					
ANR	3932925	Identifier	var_ast		3932876	0					
ANR	3932926	Identifier	SUCCESS		3932876	1					
ANR	3932927	CompoundStatement		10:59:221:221	3932876	1					
ANR	3932928	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_UNSET_VAR , & var_node , NULL )"	3494:4:101394:101454	3932876	0	True				
ANR	3932929	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_UNSET_VAR , & var_node , NULL )"		3932876	0		=			
ANR	3932930	Identifier	opline		3932876	0					
ANR	3932931	CallExpression	"zend_emit_op ( NULL , ZEND_UNSET_VAR , & var_node , NULL )"		3932876	1					
ANR	3932932	Callee	zend_emit_op		3932876	0					
ANR	3932933	Identifier	zend_emit_op		3932876	0					
ANR	3932934	ArgumentList	NULL		3932876	1					
ANR	3932935	Argument	NULL		3932876	0					
ANR	3932936	Identifier	NULL		3932876	0					
ANR	3932937	Argument	ZEND_UNSET_VAR		3932876	1					
ANR	3932938	Identifier	ZEND_UNSET_VAR		3932876	0					
ANR	3932939	Argument	& var_node		3932876	2					
ANR	3932940	UnaryOperationExpression	& var_node		3932876	0					
ANR	3932941	UnaryOperator	&		3932876	0					
ANR	3932942	Identifier	var_node		3932876	1					
ANR	3932943	Argument	NULL		3932876	3					
ANR	3932944	Identifier	NULL		3932876	0					
ANR	3932945	ExpressionStatement	opline -> extended_value = ZEND_FETCH_LOCAL | ZEND_QUICK_SET	3495:4:101460:101518	3932876	1	True				
ANR	3932946	AssignmentExpression	opline -> extended_value = ZEND_FETCH_LOCAL | ZEND_QUICK_SET		3932876	0		=			
ANR	3932947	PtrMemberAccess	opline -> extended_value		3932876	0					
ANR	3932948	Identifier	opline		3932876	0					
ANR	3932949	Identifier	extended_value		3932876	1					
ANR	3932950	InclusiveOrExpression	ZEND_FETCH_LOCAL | ZEND_QUICK_SET		3932876	1		|			
ANR	3932951	Identifier	ZEND_FETCH_LOCAL		3932876	0					
ANR	3932952	Identifier	ZEND_QUICK_SET		3932876	1					
ANR	3932953	ElseStatement	else		3932876	0					
ANR	3932954	CompoundStatement		13:10:363:363	3932876	0					
ANR	3932955	ExpressionStatement	"opline = zend_compile_simple_var_no_cv ( NULL , var_ast , BP_VAR_UNSET , 0 )"	3497:4:101536:101606	3932876	0	True				
ANR	3932956	AssignmentExpression	"opline = zend_compile_simple_var_no_cv ( NULL , var_ast , BP_VAR_UNSET , 0 )"		3932876	0		=			
ANR	3932957	Identifier	opline		3932876	0					
ANR	3932958	CallExpression	"zend_compile_simple_var_no_cv ( NULL , var_ast , BP_VAR_UNSET , 0 )"		3932876	1					
ANR	3932959	Callee	zend_compile_simple_var_no_cv		3932876	0					
ANR	3932960	Identifier	zend_compile_simple_var_no_cv		3932876	0					
ANR	3932961	ArgumentList	NULL		3932876	1					
ANR	3932962	Argument	NULL		3932876	0					
ANR	3932963	Identifier	NULL		3932876	0					
ANR	3932964	Argument	var_ast		3932876	1					
ANR	3932965	Identifier	var_ast		3932876	0					
ANR	3932966	Argument	BP_VAR_UNSET		3932876	2					
ANR	3932967	Identifier	BP_VAR_UNSET		3932876	0					
ANR	3932968	Argument	0		3932876	3					
ANR	3932969	PrimaryExpression	0		3932876	0					
ANR	3932970	ExpressionStatement	opline -> opcode = ZEND_UNSET_VAR	3498:4:101612:101643	3932876	1	True				
ANR	3932971	AssignmentExpression	opline -> opcode = ZEND_UNSET_VAR		3932876	0		=			
ANR	3932972	PtrMemberAccess	opline -> opcode		3932876	0					
ANR	3932973	Identifier	opline		3932876	0					
ANR	3932974	Identifier	opcode		3932876	1					
ANR	3932975	Identifier	ZEND_UNSET_VAR		3932876	1					
ANR	3932976	ReturnStatement	return ;	3500:3:101653:101659	3932876	2	True				
ANR	3932977	Label	case ZEND_AST_DIM :	3501:2:101663:101680	3932876	3	True				
ANR	3932978	Identifier	ZEND_AST_DIM		3932876	0					
ANR	3932979	ExpressionStatement	"opline = zend_compile_dim_common ( NULL , var_ast , BP_VAR_UNSET )"	3502:3:101685:101746	3932876	4	True				
ANR	3932980	AssignmentExpression	"opline = zend_compile_dim_common ( NULL , var_ast , BP_VAR_UNSET )"		3932876	0		=			
ANR	3932981	Identifier	opline		3932876	0					
ANR	3932982	CallExpression	"zend_compile_dim_common ( NULL , var_ast , BP_VAR_UNSET )"		3932876	1					
ANR	3932983	Callee	zend_compile_dim_common		3932876	0					
ANR	3932984	Identifier	zend_compile_dim_common		3932876	0					
ANR	3932985	ArgumentList	NULL		3932876	1					
ANR	3932986	Argument	NULL		3932876	0					
ANR	3932987	Identifier	NULL		3932876	0					
ANR	3932988	Argument	var_ast		3932876	1					
ANR	3932989	Identifier	var_ast		3932876	0					
ANR	3932990	Argument	BP_VAR_UNSET		3932876	2					
ANR	3932991	Identifier	BP_VAR_UNSET		3932876	0					
ANR	3932992	ExpressionStatement	opline -> opcode = ZEND_UNSET_DIM	3503:3:101751:101782	3932876	5	True				
ANR	3932993	AssignmentExpression	opline -> opcode = ZEND_UNSET_DIM		3932876	0		=			
ANR	3932994	PtrMemberAccess	opline -> opcode		3932876	0					
ANR	3932995	Identifier	opline		3932876	0					
ANR	3932996	Identifier	opcode		3932876	1					
ANR	3932997	Identifier	ZEND_UNSET_DIM		3932876	1					
ANR	3932998	ReturnStatement	return ;	3504:3:101787:101793	3932876	6	True				
ANR	3932999	Label	case ZEND_AST_PROP :	3505:2:101797:101815	3932876	7	True				
ANR	3933000	Identifier	ZEND_AST_PROP		3932876	0					
ANR	3933001	ExpressionStatement	"opline = zend_compile_prop_common ( NULL , var_ast , BP_VAR_UNSET )"	3506:3:101820:101882	3932876	8	True				
ANR	3933002	AssignmentExpression	"opline = zend_compile_prop_common ( NULL , var_ast , BP_VAR_UNSET )"		3932876	0		=			
ANR	3933003	Identifier	opline		3932876	0					
ANR	3933004	CallExpression	"zend_compile_prop_common ( NULL , var_ast , BP_VAR_UNSET )"		3932876	1					
ANR	3933005	Callee	zend_compile_prop_common		3932876	0					
ANR	3933006	Identifier	zend_compile_prop_common		3932876	0					
ANR	3933007	ArgumentList	NULL		3932876	1					
ANR	3933008	Argument	NULL		3932876	0					
ANR	3933009	Identifier	NULL		3932876	0					
ANR	3933010	Argument	var_ast		3932876	1					
ANR	3933011	Identifier	var_ast		3932876	0					
ANR	3933012	Argument	BP_VAR_UNSET		3932876	2					
ANR	3933013	Identifier	BP_VAR_UNSET		3932876	0					
ANR	3933014	ExpressionStatement	opline -> opcode = ZEND_UNSET_OBJ	3507:3:101887:101918	3932876	9	True				
ANR	3933015	AssignmentExpression	opline -> opcode = ZEND_UNSET_OBJ		3932876	0		=			
ANR	3933016	PtrMemberAccess	opline -> opcode		3932876	0					
ANR	3933017	Identifier	opline		3932876	0					
ANR	3933018	Identifier	opcode		3932876	1					
ANR	3933019	Identifier	ZEND_UNSET_OBJ		3932876	1					
ANR	3933020	ReturnStatement	return ;	3508:3:101923:101929	3932876	10	True				
ANR	3933021	Label	case ZEND_AST_STATIC_PROP :	3509:2:101933:101958	3932876	11	True				
ANR	3933022	Identifier	ZEND_AST_STATIC_PROP		3932876	0					
ANR	3933023	ExpressionStatement	"opline = zend_compile_static_prop_common ( NULL , var_ast , BP_VAR_UNSET , 0 )"	3510:3:101963:102035	3932876	12	True				
ANR	3933024	AssignmentExpression	"opline = zend_compile_static_prop_common ( NULL , var_ast , BP_VAR_UNSET , 0 )"		3932876	0		=			
ANR	3933025	Identifier	opline		3932876	0					
ANR	3933026	CallExpression	"zend_compile_static_prop_common ( NULL , var_ast , BP_VAR_UNSET , 0 )"		3932876	1					
ANR	3933027	Callee	zend_compile_static_prop_common		3932876	0					
ANR	3933028	Identifier	zend_compile_static_prop_common		3932876	0					
ANR	3933029	ArgumentList	NULL		3932876	1					
ANR	3933030	Argument	NULL		3932876	0					
ANR	3933031	Identifier	NULL		3932876	0					
ANR	3933032	Argument	var_ast		3932876	1					
ANR	3933033	Identifier	var_ast		3932876	0					
ANR	3933034	Argument	BP_VAR_UNSET		3932876	2					
ANR	3933035	Identifier	BP_VAR_UNSET		3932876	0					
ANR	3933036	Argument	0		3932876	3					
ANR	3933037	PrimaryExpression	0		3932876	0					
ANR	3933038	ExpressionStatement	opline -> opcode = ZEND_UNSET_VAR	3511:3:102040:102071	3932876	13	True				
ANR	3933039	AssignmentExpression	opline -> opcode = ZEND_UNSET_VAR		3932876	0		=			
ANR	3933040	PtrMemberAccess	opline -> opcode		3932876	0					
ANR	3933041	Identifier	opline		3932876	0					
ANR	3933042	Identifier	opcode		3932876	1					
ANR	3933043	Identifier	ZEND_UNSET_VAR		3932876	1					
ANR	3933044	ReturnStatement	return ;	3512:3:102076:102082	3932876	14	True				
ANR	3933045	Statement	EMPTY_SWITCH_DEFAULT_CASE	3513:2:102086:102110	3932876	15	True				
ANR	3933046	Statement	(	3513:27:102111:102111	3932876	16	True				
ANR	3933047	Statement	)	3513:28:102112:102112	3932876	17	True				
ANR	3933048	ReturnType	void		3932876	1					
ANR	3933049	Identifier	zend_compile_unset		3932876	2					
ANR	3933050	ParameterList	zend_ast * ast		3932876	3					
ANR	3933051	Parameter	zend_ast * ast	3483:24:101141:101153	3932876	0	True				
ANR	3933052	ParameterType	zend_ast *		3932876	0					
ANR	3933053	Identifier	ast		3932876	1					
ANR	3933054	CFGEntryNode	ENTRY		3932876		True				
ANR	3933055	CFGExitNode	EXIT		3932876		True				
ANR	3933056	Symbol	ast		3932876						
ANR	3933057	Symbol	* var_ast		3932876						
ANR	3933058	Symbol	opline -> extended_value		3932876						
ANR	3933059	Symbol	zend_compile_simple_var_no_cv		3932876						
ANR	3933060	Symbol	* ast		3932876						
ANR	3933061	Symbol	opline		3932876						
ANR	3933062	Symbol	var_ast -> kind		3932876						
ANR	3933063	Symbol	* * ast		3932876						
ANR	3933064	Symbol	ZEND_UNSET_VAR		3932876						
ANR	3933065	Symbol	SUCCESS		3932876						
ANR	3933066	Symbol	NULL		3932876						
ANR	3933067	Symbol	var_node		3932876						
ANR	3933068	Symbol	& var_node		3932876						
ANR	3933069	Symbol	ZEND_FETCH_LOCAL		3932876						
ANR	3933070	Symbol	ZEND_QUICK_SET		3932876						
ANR	3933071	Symbol	zend_compile_dim_common		3932876						
ANR	3933072	Symbol	ZEND_UNSET_OBJ		3932876						
ANR	3933073	Symbol	zend_try_compile_cv		3932876						
ANR	3933074	Symbol	zend_compile_prop_common		3932876						
ANR	3933075	Symbol	zend_compile_static_prop_common		3932876						
ANR	3933076	Symbol	var_ast		3932876						
ANR	3933077	Symbol	* opline		3932876						
ANR	3933078	Symbol	opline -> opcode		3932876						
ANR	3933079	Symbol	* ast -> child		3932876						
ANR	3933080	Symbol	ZEND_UNSET_DIM		3932876						
ANR	3933081	Symbol	ast -> child		3932876						
ANR	3933082	Symbol	BP_VAR_UNSET		3932876						
ANR	3933083	Symbol	zend_emit_op		3932876						
ANR	3933084	Function	zend_handle_loops_and_finally_ex	3518:0:102130:103408							
ANR	3933085	FunctionDef	zend_handle_loops_and_finally_ex (zend_long depth)		3933084	0					
ANR	3933086	CompoundStatement		3519:0:102201:103408	3933084	0					
ANR	3933087	IdentifierDeclStatement	zend_loop_var * base ;	3520:1:102204:102223	3933084	0	True				
ANR	3933088	IdentifierDecl	* base		3933084	0					
ANR	3933089	IdentifierDeclType	zend_loop_var *		3933084	0					
ANR	3933090	Identifier	base		3933084	1					
ANR	3933091	IdentifierDeclStatement	zend_loop_var * loop_var = zend_stack_top ( & CG ( loop_var_stack ) ) ;	3521:1:102226:102287	3933084	1	True				
ANR	3933092	IdentifierDecl	* loop_var = zend_stack_top ( & CG ( loop_var_stack ) )		3933084	0					
ANR	3933093	IdentifierDeclType	zend_loop_var *		3933084	0					
ANR	3933094	Identifier	loop_var		3933084	1					
ANR	3933095	AssignmentExpression	* loop_var = zend_stack_top ( & CG ( loop_var_stack ) )		3933084	2		=			
ANR	3933096	Identifier	loop_var		3933084	0					
ANR	3933097	CallExpression	zend_stack_top ( & CG ( loop_var_stack ) )		3933084	1					
ANR	3933098	Callee	zend_stack_top		3933084	0					
ANR	3933099	Identifier	zend_stack_top		3933084	0					
ANR	3933100	ArgumentList	& CG ( loop_var_stack )		3933084	1					
ANR	3933101	Argument	& CG ( loop_var_stack )		3933084	0					
ANR	3933102	UnaryOperationExpression	& CG ( loop_var_stack )		3933084	0					
ANR	3933103	UnaryOperator	&		3933084	0					
ANR	3933104	CallExpression	CG ( loop_var_stack )		3933084	1					
ANR	3933105	Callee	CG		3933084	0					
ANR	3933106	Identifier	CG		3933084	0					
ANR	3933107	ArgumentList	loop_var_stack		3933084	1					
ANR	3933108	Argument	loop_var_stack		3933084	0					
ANR	3933109	Identifier	loop_var_stack		3933084	0					
ANR	3933110	IfStatement	if ( ! loop_var )		3933084	2					
ANR	3933111	Condition	! loop_var	3523:5:102295:102303	3933084	0	True				
ANR	3933112	UnaryOperationExpression	! loop_var		3933084	0					
ANR	3933113	UnaryOperator	!		3933084	0					
ANR	3933114	Identifier	loop_var		3933084	1					
ANR	3933115	CompoundStatement		5:16:104:104	3933084	1					
ANR	3933116	ReturnStatement	return 1 ;	3524:2:102310:102318	3933084	0	True				
ANR	3933117	PrimaryExpression	1		3933084	0					
ANR	3933118	ExpressionStatement	base = zend_stack_base ( & CG ( loop_var_stack ) )	3526:1:102324:102367	3933084	3	True				
ANR	3933119	AssignmentExpression	base = zend_stack_base ( & CG ( loop_var_stack ) )		3933084	0		=			
ANR	3933120	Identifier	base		3933084	0					
ANR	3933121	CallExpression	zend_stack_base ( & CG ( loop_var_stack ) )		3933084	1					
ANR	3933122	Callee	zend_stack_base		3933084	0					
ANR	3933123	Identifier	zend_stack_base		3933084	0					
ANR	3933124	ArgumentList	& CG ( loop_var_stack )		3933084	1					
ANR	3933125	Argument	& CG ( loop_var_stack )		3933084	0					
ANR	3933126	UnaryOperationExpression	& CG ( loop_var_stack )		3933084	0					
ANR	3933127	UnaryOperator	&		3933084	0					
ANR	3933128	CallExpression	CG ( loop_var_stack )		3933084	1					
ANR	3933129	Callee	CG		3933084	0					
ANR	3933130	Identifier	CG		3933084	0					
ANR	3933131	ArgumentList	loop_var_stack		3933084	1					
ANR	3933132	Argument	loop_var_stack		3933084	0					
ANR	3933133	Identifier	loop_var_stack		3933084	0					
ANR	3933134	ForStatement	for ( ; loop_var >= base ; loop_var -- )		3933084	4					
ANR	3933135	Condition	loop_var >= base	3527:8:102377:102392	3933084	0	True				
ANR	3933136	RelationalExpression	loop_var >= base		3933084	0		>=			
ANR	3933137	Identifier	loop_var		3933084	0					
ANR	3933138	Identifier	base		3933084	1					
ANR	3933139	PostIncDecOperationExpression	loop_var --	3527:26:102395:102404	3933084	1	True				
ANR	3933140	Identifier	loop_var		3933084	0					
ANR	3933141	IncDec	--		3933084	1					
ANR	3933142	CompoundStatement		9:38:205:205	3933084	2					
ANR	3933143	IfStatement	if ( loop_var -> opcode == ZEND_FAST_CALL )		3933084	0					
ANR	3933144	Condition	loop_var -> opcode == ZEND_FAST_CALL	3528:6:102415:102448	3933084	0	True				
ANR	3933145	EqualityExpression	loop_var -> opcode == ZEND_FAST_CALL		3933084	0		==			
ANR	3933146	PtrMemberAccess	loop_var -> opcode		3933084	0					
ANR	3933147	Identifier	loop_var		3933084	0					
ANR	3933148	Identifier	opcode		3933084	1					
ANR	3933149	Identifier	ZEND_FAST_CALL		3933084	1					
ANR	3933150	CompoundStatement		11:3:254:304	3933084	1					
ANR	3933151	IdentifierDeclStatement	zend_op * opline = get_next_op ( CG ( active_op_array ) ) ;	3529:3:102456:102506	3933084	0	True				
ANR	3933152	IdentifierDecl	* opline = get_next_op ( CG ( active_op_array ) )		3933084	0					
ANR	3933153	IdentifierDeclType	zend_op *		3933084	0					
ANR	3933154	Identifier	opline		3933084	1					
ANR	3933155	AssignmentExpression	* opline = get_next_op ( CG ( active_op_array ) )		3933084	2		=			
ANR	3933156	Identifier	opline		3933084	0					
ANR	3933157	CallExpression	get_next_op ( CG ( active_op_array ) )		3933084	1					
ANR	3933158	Callee	get_next_op		3933084	0					
ANR	3933159	Identifier	get_next_op		3933084	0					
ANR	3933160	ArgumentList	CG ( active_op_array )		3933084	1					
ANR	3933161	Argument	CG ( active_op_array )		3933084	0					
ANR	3933162	CallExpression	CG ( active_op_array )		3933084	0					
ANR	3933163	Callee	CG		3933084	0					
ANR	3933164	Identifier	CG		3933084	0					
ANR	3933165	ArgumentList	active_op_array		3933084	1					
ANR	3933166	Argument	active_op_array		3933084	0					
ANR	3933167	Identifier	active_op_array		3933084	0					
ANR	3933168	ExpressionStatement	opline -> opcode = ZEND_FAST_CALL	3531:3:102512:102543	3933084	1	True				
ANR	3933169	AssignmentExpression	opline -> opcode = ZEND_FAST_CALL		3933084	0		=			
ANR	3933170	PtrMemberAccess	opline -> opcode		3933084	0					
ANR	3933171	Identifier	opline		3933084	0					
ANR	3933172	Identifier	opcode		3933084	1					
ANR	3933173	Identifier	ZEND_FAST_CALL		3933084	1					
ANR	3933174	ExpressionStatement	opline -> result_type = IS_TMP_VAR	3532:3:102548:102580	3933084	2	True				
ANR	3933175	AssignmentExpression	opline -> result_type = IS_TMP_VAR		3933084	0		=			
ANR	3933176	PtrMemberAccess	opline -> result_type		3933084	0					
ANR	3933177	Identifier	opline		3933084	0					
ANR	3933178	Identifier	result_type		3933084	1					
ANR	3933179	Identifier	IS_TMP_VAR		3933084	1					
ANR	3933180	ExpressionStatement	opline -> result . var = loop_var -> var_num	3533:3:102585:102623	3933084	3	True				
ANR	3933181	AssignmentExpression	opline -> result . var = loop_var -> var_num		3933084	0		=			
ANR	3933182	MemberAccess	opline -> result . var		3933084	0					
ANR	3933183	PtrMemberAccess	opline -> result		3933084	0					
ANR	3933184	Identifier	opline		3933084	0					
ANR	3933185	Identifier	result		3933084	1					
ANR	3933186	Identifier	var		3933084	1					
ANR	3933187	PtrMemberAccess	loop_var -> var_num		3933084	1					
ANR	3933188	Identifier	loop_var		3933084	0					
ANR	3933189	Identifier	var_num		3933084	1					
ANR	3933190	ExpressionStatement	SET_UNUSED ( opline -> op1 )	3534:3:102628:102651	3933084	4	True				
ANR	3933191	CallExpression	SET_UNUSED ( opline -> op1 )		3933084	0					
ANR	3933192	Callee	SET_UNUSED		3933084	0					
ANR	3933193	Identifier	SET_UNUSED		3933084	0					
ANR	3933194	ArgumentList	opline -> op1		3933084	1					
ANR	3933195	Argument	opline -> op1		3933084	0					
ANR	3933196	PtrMemberAccess	opline -> op1		3933084	0					
ANR	3933197	Identifier	opline		3933084	0					
ANR	3933198	Identifier	op1		3933084	1					
ANR	3933199	ExpressionStatement	SET_UNUSED ( opline -> op2 )	3535:3:102656:102679	3933084	5	True				
ANR	3933200	CallExpression	SET_UNUSED ( opline -> op2 )		3933084	0					
ANR	3933201	Callee	SET_UNUSED		3933084	0					
ANR	3933202	Identifier	SET_UNUSED		3933084	0					
ANR	3933203	ArgumentList	opline -> op2		3933084	1					
ANR	3933204	Argument	opline -> op2		3933084	0					
ANR	3933205	PtrMemberAccess	opline -> op2		3933084	0					
ANR	3933206	Identifier	opline		3933084	0					
ANR	3933207	Identifier	op2		3933084	1					
ANR	3933208	ExpressionStatement	opline -> op1 . num = loop_var -> u . try_catch_offset	3536:3:102684:102730	3933084	6	True				
ANR	3933209	AssignmentExpression	opline -> op1 . num = loop_var -> u . try_catch_offset		3933084	0		=			
ANR	3933210	MemberAccess	opline -> op1 . num		3933084	0					
ANR	3933211	PtrMemberAccess	opline -> op1		3933084	0					
ANR	3933212	Identifier	opline		3933084	0					
ANR	3933213	Identifier	op1		3933084	1					
ANR	3933214	Identifier	num		3933084	1					
ANR	3933215	MemberAccess	loop_var -> u . try_catch_offset		3933084	1					
ANR	3933216	PtrMemberAccess	loop_var -> u		3933084	0					
ANR	3933217	Identifier	loop_var		3933084	0					
ANR	3933218	Identifier	u		3933084	1					
ANR	3933219	Identifier	try_catch_offset		3933084	1					
ANR	3933220	ElseStatement	else		3933084	0					
ANR	3933221	IfStatement	if ( loop_var -> opcode == ZEND_RETURN )		3933084	0					
ANR	3933222	Condition	loop_var -> opcode == ZEND_RETURN	3537:13:102745:102775	3933084	0	True				
ANR	3933223	EqualityExpression	loop_var -> opcode == ZEND_RETURN		3933084	0		==			
ANR	3933224	PtrMemberAccess	loop_var -> opcode		3933084	0					
ANR	3933225	Identifier	loop_var		3933084	0					
ANR	3933226	Identifier	opcode		3933084	1					
ANR	3933227	Identifier	ZEND_RETURN		3933084	1					
ANR	3933228	CompoundStatement		19:46:576:576	3933084	1					
ANR	3933229	BreakStatement	break ;	3539:3:102808:102813	3933084	0	True				
ANR	3933230	ElseStatement	else		3933084	0					
ANR	3933231	IfStatement	if ( depth <= 1 )		3933084	0					
ANR	3933232	Condition	depth <= 1	3540:13:102828:102837	3933084	0	True				
ANR	3933233	RelationalExpression	depth <= 1		3933084	0		<=			
ANR	3933234	Identifier	depth		3933084	0					
ANR	3933235	PrimaryExpression	1		3933084	1					
ANR	3933236	CompoundStatement		22:25:638:638	3933084	1					
ANR	3933237	ReturnStatement	return 1 ;	3541:3:102845:102853	3933084	0	True				
ANR	3933238	PrimaryExpression	1		3933084	0					
ANR	3933239	ElseStatement	else		3933084	0					
ANR	3933240	IfStatement	if ( loop_var -> opcode == ZEND_NOP )		3933084	0					
ANR	3933241	Condition	loop_var -> opcode == ZEND_NOP	3542:13:102868:102895	3933084	0	True				
ANR	3933242	EqualityExpression	loop_var -> opcode == ZEND_NOP		3933084	0		==			
ANR	3933243	PtrMemberAccess	loop_var -> opcode		3933084	0					
ANR	3933244	Identifier	loop_var		3933084	0					
ANR	3933245	Identifier	opcode		3933084	1					
ANR	3933246	Identifier	ZEND_NOP		3933084	1					
ANR	3933247	CompoundStatement		24:43:696:696	3933084	1					
ANR	3933248	ExpressionStatement	depth --	3544:3:102948:102955	3933084	0	True				
ANR	3933249	PostIncDecOperationExpression	depth --		3933084	0					
ANR	3933250	Identifier	depth		3933084	0					
ANR	3933251	IncDec	--		3933084	1					
ANR	3933252	ElseStatement	else		3933084	0					
ANR	3933253	CompoundStatement		28:3:769:784	3933084	0					
ANR	3933254	IdentifierDeclStatement	zend_op * opline ;	3546:3:102971:102986	3933084	0	True				
ANR	3933255	IdentifierDecl	* opline		3933084	0					
ANR	3933256	IdentifierDeclType	zend_op *		3933084	0					
ANR	3933257	Identifier	opline		3933084	1					
ANR	3933258	ExpressionStatement	ZEND_ASSERT ( loop_var -> var_type == IS_VAR || loop_var -> var_type == IS_TMP_VAR )	3548:3:102992:103069	3933084	1	True				
ANR	3933259	CallExpression	ZEND_ASSERT ( loop_var -> var_type == IS_VAR || loop_var -> var_type == IS_TMP_VAR )		3933084	0					
ANR	3933260	Callee	ZEND_ASSERT		3933084	0					
ANR	3933261	Identifier	ZEND_ASSERT		3933084	0					
ANR	3933262	ArgumentList	loop_var -> var_type == IS_VAR || loop_var -> var_type == IS_TMP_VAR		3933084	1					
ANR	3933263	Argument	loop_var -> var_type == IS_VAR || loop_var -> var_type == IS_TMP_VAR		3933084	0					
ANR	3933264	OrExpression	loop_var -> var_type == IS_VAR || loop_var -> var_type == IS_TMP_VAR		3933084	0		||			
ANR	3933265	EqualityExpression	loop_var -> var_type == IS_VAR		3933084	0		==			
ANR	3933266	PtrMemberAccess	loop_var -> var_type		3933084	0					
ANR	3933267	Identifier	loop_var		3933084	0					
ANR	3933268	Identifier	var_type		3933084	1					
ANR	3933269	Identifier	IS_VAR		3933084	1					
ANR	3933270	EqualityExpression	loop_var -> var_type == IS_TMP_VAR		3933084	1		==			
ANR	3933271	PtrMemberAccess	loop_var -> var_type		3933084	0					
ANR	3933272	Identifier	loop_var		3933084	0					
ANR	3933273	Identifier	var_type		3933084	1					
ANR	3933274	Identifier	IS_TMP_VAR		3933084	1					
ANR	3933275	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	3549:3:103074:103115	3933084	2	True				
ANR	3933276	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3933084	0		=			
ANR	3933277	Identifier	opline		3933084	0					
ANR	3933278	CallExpression	get_next_op ( CG ( active_op_array ) )		3933084	1					
ANR	3933279	Callee	get_next_op		3933084	0					
ANR	3933280	Identifier	get_next_op		3933084	0					
ANR	3933281	ArgumentList	CG ( active_op_array )		3933084	1					
ANR	3933282	Argument	CG ( active_op_array )		3933084	0					
ANR	3933283	CallExpression	CG ( active_op_array )		3933084	0					
ANR	3933284	Callee	CG		3933084	0					
ANR	3933285	Identifier	CG		3933084	0					
ANR	3933286	ArgumentList	active_op_array		3933084	1					
ANR	3933287	Argument	active_op_array		3933084	0					
ANR	3933288	Identifier	active_op_array		3933084	0					
ANR	3933289	ExpressionStatement	opline -> opcode = loop_var -> opcode	3550:3:103120:103153	3933084	3	True				
ANR	3933290	AssignmentExpression	opline -> opcode = loop_var -> opcode		3933084	0		=			
ANR	3933291	PtrMemberAccess	opline -> opcode		3933084	0					
ANR	3933292	Identifier	opline		3933084	0					
ANR	3933293	Identifier	opcode		3933084	1					
ANR	3933294	PtrMemberAccess	loop_var -> opcode		3933084	1					
ANR	3933295	Identifier	loop_var		3933084	0					
ANR	3933296	Identifier	opcode		3933084	1					
ANR	3933297	ExpressionStatement	opline -> op1_type = loop_var -> var_type	3551:3:103158:103195	3933084	4	True				
ANR	3933298	AssignmentExpression	opline -> op1_type = loop_var -> var_type		3933084	0		=			
ANR	3933299	PtrMemberAccess	opline -> op1_type		3933084	0					
ANR	3933300	Identifier	opline		3933084	0					
ANR	3933301	Identifier	op1_type		3933084	1					
ANR	3933302	PtrMemberAccess	loop_var -> var_type		3933084	1					
ANR	3933303	Identifier	loop_var		3933084	0					
ANR	3933304	Identifier	var_type		3933084	1					
ANR	3933305	ExpressionStatement	opline -> op1 . var = loop_var -> var_num	3552:3:103200:103235	3933084	5	True				
ANR	3933306	AssignmentExpression	opline -> op1 . var = loop_var -> var_num		3933084	0		=			
ANR	3933307	MemberAccess	opline -> op1 . var		3933084	0					
ANR	3933308	PtrMemberAccess	opline -> op1		3933084	0					
ANR	3933309	Identifier	opline		3933084	0					
ANR	3933310	Identifier	op1		3933084	1					
ANR	3933311	Identifier	var		3933084	1					
ANR	3933312	PtrMemberAccess	loop_var -> var_num		3933084	1					
ANR	3933313	Identifier	loop_var		3933084	0					
ANR	3933314	Identifier	var_num		3933084	1					
ANR	3933315	ExpressionStatement	SET_UNUSED ( opline -> op2 )	3553:3:103240:103263	3933084	6	True				
ANR	3933316	CallExpression	SET_UNUSED ( opline -> op2 )		3933084	0					
ANR	3933317	Callee	SET_UNUSED		3933084	0					
ANR	3933318	Identifier	SET_UNUSED		3933084	0					
ANR	3933319	ArgumentList	opline -> op2		3933084	1					
ANR	3933320	Argument	opline -> op2		3933084	0					
ANR	3933321	PtrMemberAccess	opline -> op2		3933084	0					
ANR	3933322	Identifier	opline		3933084	0					
ANR	3933323	Identifier	op2		3933084	1					
ANR	3933324	ExpressionStatement	opline -> op2 . num = loop_var -> u . brk_cont_offset	3554:3:103268:103313	3933084	7	True				
ANR	3933325	AssignmentExpression	opline -> op2 . num = loop_var -> u . brk_cont_offset		3933084	0		=			
ANR	3933326	MemberAccess	opline -> op2 . num		3933084	0					
ANR	3933327	PtrMemberAccess	opline -> op2		3933084	0					
ANR	3933328	Identifier	opline		3933084	0					
ANR	3933329	Identifier	op2		3933084	1					
ANR	3933330	Identifier	num		3933084	1					
ANR	3933331	MemberAccess	loop_var -> u . brk_cont_offset		3933084	1					
ANR	3933332	PtrMemberAccess	loop_var -> u		3933084	0					
ANR	3933333	Identifier	loop_var		3933084	0					
ANR	3933334	Identifier	u		3933084	1					
ANR	3933335	Identifier	brk_cont_offset		3933084	1					
ANR	3933336	ExpressionStatement	opline -> extended_value = ZEND_FREE_ON_RETURN	3555:3:103318:103362	3933084	8	True				
ANR	3933337	AssignmentExpression	opline -> extended_value = ZEND_FREE_ON_RETURN		3933084	0		=			
ANR	3933338	PtrMemberAccess	opline -> extended_value		3933084	0					
ANR	3933339	Identifier	opline		3933084	0					
ANR	3933340	Identifier	extended_value		3933084	1					
ANR	3933341	Identifier	ZEND_FREE_ON_RETURN		3933084	1					
ANR	3933342	ExpressionStatement	depth --	3556:3:103367:103374	3933084	9	True				
ANR	3933343	PostIncDecOperationExpression	depth --		3933084	0					
ANR	3933344	Identifier	depth		3933084	0					
ANR	3933345	IncDec	--		3933084	1					
ANR	3933346	ReturnStatement	return ( depth == 0 ) ;	3559:1:103387:103406	3933084	5	True				
ANR	3933347	EqualityExpression	depth == 0		3933084	0		==			
ANR	3933348	Identifier	depth		3933084	0					
ANR	3933349	PrimaryExpression	0		3933084	1					
ANR	3933350	ReturnType	static int		3933084	1					
ANR	3933351	Identifier	zend_handle_loops_and_finally_ex		3933084	2					
ANR	3933352	ParameterList	zend_long depth		3933084	3					
ANR	3933353	Parameter	zend_long depth	3518:44:102174:102188	3933084	0	True				
ANR	3933354	ParameterType	zend_long		3933084	0					
ANR	3933355	Identifier	depth		3933084	1					
ANR	3933356	CFGEntryNode	ENTRY		3933084		True				
ANR	3933357	CFGExitNode	EXIT		3933084		True				
ANR	3933358	Symbol	loop_var -> var_num		3933084						
ANR	3933359	Symbol	opline -> op1		3933084						
ANR	3933360	Symbol	opline -> op2		3933084						
ANR	3933361	Symbol	opline -> result		3933084						
ANR	3933362	Symbol	opline -> extended_value		3933084						
ANR	3933363	Symbol	& CG		3933084						
ANR	3933364	Symbol	ZEND_FREE_ON_RETURN		3933084						
ANR	3933365	Symbol	loop_var -> u . try_catch_offset		3933084						
ANR	3933366	Symbol	zend_stack_top		3933084						
ANR	3933367	Symbol	loop_var -> var_type		3933084						
ANR	3933368	Symbol	opline		3933084						
ANR	3933369	Symbol	loop_var_stack		3933084						
ANR	3933370	Symbol	loop_var -> opcode		3933084						
ANR	3933371	Symbol	opline -> op1 . var		3933084						
ANR	3933372	Symbol	loop_var		3933084						
ANR	3933373	Symbol	IS_TMP_VAR		3933084						
ANR	3933374	Symbol	ZEND_FAST_CALL		3933084						
ANR	3933375	Symbol	opline -> result_type		3933084						
ANR	3933376	Symbol	opline -> op2 . num		3933084						
ANR	3933377	Symbol	get_next_op		3933084						
ANR	3933378	Symbol	ZEND_RETURN		3933084						
ANR	3933379	Symbol	CG		3933084						
ANR	3933380	Symbol	active_op_array		3933084						
ANR	3933381	Symbol	* loop_var		3933084						
ANR	3933382	Symbol	ZEND_NOP		3933084						
ANR	3933383	Symbol	opline -> op1_type		3933084						
ANR	3933384	Symbol	loop_var -> u . brk_cont_offset		3933084						
ANR	3933385	Symbol	depth		3933084						
ANR	3933386	Symbol	* opline		3933084						
ANR	3933387	Symbol	opline -> opcode		3933084						
ANR	3933388	Symbol	opline -> op1 . num		3933084						
ANR	3933389	Symbol	zend_stack_base		3933084						
ANR	3933390	Symbol	IS_VAR		3933084						
ANR	3933391	Symbol	opline -> result . var		3933084						
ANR	3933392	Symbol	base		3933084						
ANR	3933393	Symbol	loop_var -> u		3933084						
ANR	3933394	Function	zend_handle_loops_and_finally	3563:0:103421:103565							
ANR	3933395	FunctionDef	zend_handle_loops_and_finally ()		3933394	0					
ANR	3933396	CompoundStatement		3564:0:103478:103565	3933394	0					
ANR	3933397	ReturnStatement	return zend_handle_loops_and_finally_ex ( zend_stack_count ( & CG ( loop_var_stack ) ) + 1 ) ;	3565:1:103481:103563	3933394	0	True				
ANR	3933398	CallExpression	zend_handle_loops_and_finally_ex ( zend_stack_count ( & CG ( loop_var_stack ) ) + 1 )		3933394	0					
ANR	3933399	Callee	zend_handle_loops_and_finally_ex		3933394	0					
ANR	3933400	Identifier	zend_handle_loops_and_finally_ex		3933394	0					
ANR	3933401	ArgumentList	zend_stack_count ( & CG ( loop_var_stack ) ) + 1		3933394	1					
ANR	3933402	Argument	zend_stack_count ( & CG ( loop_var_stack ) ) + 1		3933394	0					
ANR	3933403	AdditiveExpression	zend_stack_count ( & CG ( loop_var_stack ) ) + 1		3933394	0		+			
ANR	3933404	CallExpression	zend_stack_count ( & CG ( loop_var_stack ) )		3933394	0					
ANR	3933405	Callee	zend_stack_count		3933394	0					
ANR	3933406	Identifier	zend_stack_count		3933394	0					
ANR	3933407	ArgumentList	& CG ( loop_var_stack )		3933394	1					
ANR	3933408	Argument	& CG ( loop_var_stack )		3933394	0					
ANR	3933409	UnaryOperationExpression	& CG ( loop_var_stack )		3933394	0					
ANR	3933410	UnaryOperator	&		3933394	0					
ANR	3933411	CallExpression	CG ( loop_var_stack )		3933394	1					
ANR	3933412	Callee	CG		3933394	0					
ANR	3933413	Identifier	CG		3933394	0					
ANR	3933414	ArgumentList	loop_var_stack		3933394	1					
ANR	3933415	Argument	loop_var_stack		3933394	0					
ANR	3933416	Identifier	loop_var_stack		3933394	0					
ANR	3933417	PrimaryExpression	1		3933394	1					
ANR	3933418	ReturnType	static int		3933394	1					
ANR	3933419	Identifier	zend_handle_loops_and_finally		3933394	2					
ANR	3933420	ParameterList			3933394	3					
ANR	3933421	CFGEntryNode	ENTRY		3933394		True				
ANR	3933422	CFGExitNode	EXIT		3933394		True				
ANR	3933423	Symbol	zend_handle_loops_and_finally_ex		3933394						
ANR	3933424	Symbol	loop_var_stack		3933394						
ANR	3933425	Symbol	zend_stack_count		3933394						
ANR	3933426	Symbol	& CG		3933394						
ANR	3933427	Function	zend_compile_return	3569:0:103578:104862							
ANR	3933428	FunctionDef	zend_compile_return (zend_ast * ast)		3933427	0					
ANR	3933429	CompoundStatement		3570:0:103628:104862	3933427	0					
ANR	3933430	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	3571:1:103631:103665	3933427	0	True				
ANR	3933431	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3933427	0					
ANR	3933432	IdentifierDeclType	zend_ast *		3933427	0					
ANR	3933433	Identifier	expr_ast		3933427	1					
ANR	3933434	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3933427	2		=			
ANR	3933435	Identifier	expr_ast		3933427	0					
ANR	3933436	ArrayIndexing	ast -> child [ 0 ]		3933427	1					
ANR	3933437	PtrMemberAccess	ast -> child		3933427	0					
ANR	3933438	Identifier	ast		3933427	0					
ANR	3933439	Identifier	child		3933427	1					
ANR	3933440	PrimaryExpression	0		3933427	1					
ANR	3933441	IdentifierDeclStatement	zend_bool by_ref = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0 ;	3572:1:103668:103751	3933427	1	True				
ANR	3933442	IdentifierDecl	by_ref = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3933427	0					
ANR	3933443	IdentifierDeclType	zend_bool		3933427	0					
ANR	3933444	Identifier	by_ref		3933427	1					
ANR	3933445	AssignmentExpression	by_ref = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3933427	2		=			
ANR	3933446	Identifier	by_ref		3933427	0					
ANR	3933447	EqualityExpression	( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3933427	1		!=			
ANR	3933448	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE		3933427	0		&			
ANR	3933449	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3933427	0					
ANR	3933450	CallExpression	CG ( active_op_array )		3933427	0					
ANR	3933451	Callee	CG		3933427	0					
ANR	3933452	Identifier	CG		3933427	0					
ANR	3933453	ArgumentList	active_op_array		3933427	1					
ANR	3933454	Argument	active_op_array		3933427	0					
ANR	3933455	Identifier	active_op_array		3933427	0					
ANR	3933456	Identifier	fn_flags		3933427	1					
ANR	3933457	Identifier	ZEND_ACC_RETURN_REFERENCE		3933427	1					
ANR	3933458	PrimaryExpression	0		3933427	1					
ANR	3933459	IdentifierDeclStatement	znode expr_node ;	3574:1:103755:103770	3933427	2	True				
ANR	3933460	IdentifierDecl	expr_node		3933427	0					
ANR	3933461	IdentifierDeclType	znode		3933427	0					
ANR	3933462	Identifier	expr_node		3933427	1					
ANR	3933463	IdentifierDeclStatement	zend_op * opline ;	3575:1:103773:103788	3933427	3	True				
ANR	3933464	IdentifierDecl	* opline		3933427	0					
ANR	3933465	IdentifierDeclType	zend_op *		3933427	0					
ANR	3933466	Identifier	opline		3933427	1					
ANR	3933467	IfStatement	if ( ! expr_ast )		3933427	4					
ANR	3933468	Condition	! expr_ast	3577:5:103796:103804	3933427	0	True				
ANR	3933469	UnaryOperationExpression	! expr_ast		3933427	0					
ANR	3933470	UnaryOperator	!		3933427	0					
ANR	3933471	Identifier	expr_ast		3933427	1					
ANR	3933472	CompoundStatement		8:16:178:178	3933427	1					
ANR	3933473	ExpressionStatement	expr_node . op_type = IS_CONST	3578:2:103811:103839	3933427	0	True				
ANR	3933474	AssignmentExpression	expr_node . op_type = IS_CONST		3933427	0		=			
ANR	3933475	MemberAccess	expr_node . op_type		3933427	0					
ANR	3933476	Identifier	expr_node		3933427	0					
ANR	3933477	Identifier	op_type		3933427	1					
ANR	3933478	Identifier	IS_CONST		3933427	1					
ANR	3933479	ExpressionStatement	ZVAL_NULL ( & expr_node . u . constant )	3579:2:103843:103875	3933427	1	True				
ANR	3933480	CallExpression	ZVAL_NULL ( & expr_node . u . constant )		3933427	0					
ANR	3933481	Callee	ZVAL_NULL		3933427	0					
ANR	3933482	Identifier	ZVAL_NULL		3933427	0					
ANR	3933483	ArgumentList	& expr_node . u . constant		3933427	1					
ANR	3933484	Argument	& expr_node . u . constant		3933427	0					
ANR	3933485	UnaryOperationExpression	& expr_node . u . constant		3933427	0					
ANR	3933486	UnaryOperator	&		3933427	0					
ANR	3933487	MemberAccess	expr_node . u . constant		3933427	1					
ANR	3933488	MemberAccess	expr_node . u		3933427	0					
ANR	3933489	Identifier	expr_node		3933427	0					
ANR	3933490	Identifier	u		3933427	1					
ANR	3933491	Identifier	constant		3933427	1					
ANR	3933492	ElseStatement	else		3933427	0					
ANR	3933493	IfStatement	if ( by_ref && zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast ) )		3933427	0					
ANR	3933494	Condition	by_ref && zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast )	3580:12:103889:103951	3933427	0	True				
ANR	3933495	AndExpression	by_ref && zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast )		3933427	0		&&			
ANR	3933496	Identifier	by_ref		3933427	0					
ANR	3933497	AndExpression	zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast )		3933427	1		&&			
ANR	3933498	CallExpression	zend_is_variable ( expr_ast )		3933427	0					
ANR	3933499	Callee	zend_is_variable		3933427	0					
ANR	3933500	Identifier	zend_is_variable		3933427	0					
ANR	3933501	ArgumentList	expr_ast		3933427	1					
ANR	3933502	Argument	expr_ast		3933427	0					
ANR	3933503	Identifier	expr_ast		3933427	0					
ANR	3933504	UnaryOperationExpression	! zend_is_call ( expr_ast )		3933427	1					
ANR	3933505	UnaryOperator	!		3933427	0					
ANR	3933506	CallExpression	zend_is_call ( expr_ast )		3933427	1					
ANR	3933507	Callee	zend_is_call		3933427	0					
ANR	3933508	Identifier	zend_is_call		3933427	0					
ANR	3933509	ArgumentList	expr_ast		3933427	1					
ANR	3933510	Argument	expr_ast		3933427	0					
ANR	3933511	Identifier	expr_ast		3933427	0					
ANR	3933512	CompoundStatement		11:77:325:325	3933427	1					
ANR	3933513	ExpressionStatement	"zend_compile_var ( & expr_node , expr_ast , BP_VAR_REF )"	3581:2:103958:104008	3933427	0	True				
ANR	3933514	CallExpression	"zend_compile_var ( & expr_node , expr_ast , BP_VAR_REF )"		3933427	0					
ANR	3933515	Callee	zend_compile_var		3933427	0					
ANR	3933516	Identifier	zend_compile_var		3933427	0					
ANR	3933517	ArgumentList	& expr_node		3933427	1					
ANR	3933518	Argument	& expr_node		3933427	0					
ANR	3933519	UnaryOperationExpression	& expr_node		3933427	0					
ANR	3933520	UnaryOperator	&		3933427	0					
ANR	3933521	Identifier	expr_node		3933427	1					
ANR	3933522	Argument	expr_ast		3933427	1					
ANR	3933523	Identifier	expr_ast		3933427	0					
ANR	3933524	Argument	BP_VAR_REF		3933427	2					
ANR	3933525	Identifier	BP_VAR_REF		3933427	0					
ANR	3933526	ElseStatement	else		3933427	0					
ANR	3933527	CompoundStatement		13:8:389:389	3933427	0					
ANR	3933528	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	3583:2:104022:104061	3933427	0	True				
ANR	3933529	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3933427	0					
ANR	3933530	Callee	zend_compile_expr		3933427	0					
ANR	3933531	Identifier	zend_compile_expr		3933427	0					
ANR	3933532	ArgumentList	& expr_node		3933427	1					
ANR	3933533	Argument	& expr_node		3933427	0					
ANR	3933534	UnaryOperationExpression	& expr_node		3933427	0					
ANR	3933535	UnaryOperator	&		3933427	0					
ANR	3933536	Identifier	expr_node		3933427	1					
ANR	3933537	Argument	expr_ast		3933427	1					
ANR	3933538	Identifier	expr_ast		3933427	0					
ANR	3933539	IfStatement	if ( CG ( context ) . in_finally )		3933427	5					
ANR	3933540	Condition	CG ( context ) . in_finally	3586:5:104072:104093	3933427	0	True				
ANR	3933541	MemberAccess	CG ( context ) . in_finally		3933427	0					
ANR	3933542	CallExpression	CG ( context )		3933427	0					
ANR	3933543	Callee	CG		3933427	0					
ANR	3933544	Identifier	CG		3933427	0					
ANR	3933545	ArgumentList	context		3933427	1					
ANR	3933546	Argument	context		3933427	0					
ANR	3933547	Identifier	context		3933427	0					
ANR	3933548	Identifier	in_finally		3933427	1					
ANR	3933549	CompoundStatement		17:29:467:467	3933427	1					
ANR	3933550	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_DISCARD_EXCEPTION , NULL , NULL )"	3587:2:104100:104163	3933427	0	True				
ANR	3933551	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_DISCARD_EXCEPTION , NULL , NULL )"		3933427	0		=			
ANR	3933552	Identifier	opline		3933427	0					
ANR	3933553	CallExpression	"zend_emit_op ( NULL , ZEND_DISCARD_EXCEPTION , NULL , NULL )"		3933427	1					
ANR	3933554	Callee	zend_emit_op		3933427	0					
ANR	3933555	Identifier	zend_emit_op		3933427	0					
ANR	3933556	ArgumentList	NULL		3933427	1					
ANR	3933557	Argument	NULL		3933427	0					
ANR	3933558	Identifier	NULL		3933427	0					
ANR	3933559	Argument	ZEND_DISCARD_EXCEPTION		3933427	1					
ANR	3933560	Identifier	ZEND_DISCARD_EXCEPTION		3933427	0					
ANR	3933561	Argument	NULL		3933427	2					
ANR	3933562	Identifier	NULL		3933427	0					
ANR	3933563	Argument	NULL		3933427	3					
ANR	3933564	Identifier	NULL		3933427	0					
ANR	3933565	ExpressionStatement	opline -> op1_type = IS_TMP_VAR	3588:2:104167:104196	3933427	1	True				
ANR	3933566	AssignmentExpression	opline -> op1_type = IS_TMP_VAR		3933427	0		=			
ANR	3933567	PtrMemberAccess	opline -> op1_type		3933427	0					
ANR	3933568	Identifier	opline		3933427	0					
ANR	3933569	Identifier	op1_type		3933427	1					
ANR	3933570	Identifier	IS_TMP_VAR		3933427	1					
ANR	3933571	ExpressionStatement	opline -> op1 . var = CG ( context ) . fast_call_var	3589:2:104200:104243	3933427	2	True				
ANR	3933572	AssignmentExpression	opline -> op1 . var = CG ( context ) . fast_call_var		3933427	0		=			
ANR	3933573	MemberAccess	opline -> op1 . var		3933427	0					
ANR	3933574	PtrMemberAccess	opline -> op1		3933427	0					
ANR	3933575	Identifier	opline		3933427	0					
ANR	3933576	Identifier	op1		3933427	1					
ANR	3933577	Identifier	var		3933427	1					
ANR	3933578	MemberAccess	CG ( context ) . fast_call_var		3933427	1					
ANR	3933579	CallExpression	CG ( context )		3933427	0					
ANR	3933580	Callee	CG		3933427	0					
ANR	3933581	Identifier	CG		3933427	0					
ANR	3933582	ArgumentList	context		3933427	1					
ANR	3933583	Argument	context		3933427	0					
ANR	3933584	Identifier	context		3933427	0					
ANR	3933585	Identifier	fast_call_var		3933427	1					
ANR	3933586	IfStatement	if ( ! ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_GENERATOR ) && CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		3933427	6					
ANR	3933587	Condition	! ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_GENERATOR ) && CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE	3593:5:104307:104419	3933427	0	True				
ANR	3933588	AndExpression	! ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_GENERATOR ) && CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3933427	0		&&			
ANR	3933589	UnaryOperationExpression	! ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_GENERATOR )		3933427	0					
ANR	3933590	UnaryOperator	!		3933427	0					
ANR	3933591	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_GENERATOR		3933427	1		&			
ANR	3933592	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3933427	0					
ANR	3933593	CallExpression	CG ( active_op_array )		3933427	0					
ANR	3933594	Callee	CG		3933427	0					
ANR	3933595	Identifier	CG		3933427	0					
ANR	3933596	ArgumentList	active_op_array		3933427	1					
ANR	3933597	Argument	active_op_array		3933427	0					
ANR	3933598	Identifier	active_op_array		3933427	0					
ANR	3933599	Identifier	fn_flags		3933427	1					
ANR	3933600	Identifier	ZEND_ACC_GENERATOR		3933427	1					
ANR	3933601	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3933427	1		&			
ANR	3933602	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3933427	0					
ANR	3933603	CallExpression	CG ( active_op_array )		3933427	0					
ANR	3933604	Callee	CG		3933427	0					
ANR	3933605	Identifier	CG		3933427	0					
ANR	3933606	ArgumentList	active_op_array		3933427	1					
ANR	3933607	Argument	active_op_array		3933427	0					
ANR	3933608	Identifier	active_op_array		3933427	0					
ANR	3933609	Identifier	fn_flags		3933427	1					
ANR	3933610	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3933427	1					
ANR	3933611	CompoundStatement		24:120:793:793	3933427	1					
ANR	3933612	ExpressionStatement	"zend_emit_return_type_check ( expr_ast ? & expr_node : NULL , CG ( active_op_array ) -> arg_info - 1 )"	3594:2:104426:104518	3933427	0	True				
ANR	3933613	CallExpression	"zend_emit_return_type_check ( expr_ast ? & expr_node : NULL , CG ( active_op_array ) -> arg_info - 1 )"		3933427	0					
ANR	3933614	Callee	zend_emit_return_type_check		3933427	0					
ANR	3933615	Identifier	zend_emit_return_type_check		3933427	0					
ANR	3933616	ArgumentList	expr_ast ? & expr_node : NULL		3933427	1					
ANR	3933617	Argument	expr_ast ? & expr_node : NULL		3933427	0					
ANR	3933618	ConditionalExpression	expr_ast ? & expr_node : NULL		3933427	0					
ANR	3933619	Condition	expr_ast		3933427	0					
ANR	3933620	Identifier	expr_ast		3933427	0					
ANR	3933621	UnaryOperationExpression	& expr_node		3933427	1					
ANR	3933622	UnaryOperator	&		3933427	0					
ANR	3933623	Identifier	expr_node		3933427	1					
ANR	3933624	Identifier	NULL		3933427	2					
ANR	3933625	Argument	CG ( active_op_array ) -> arg_info - 1		3933427	1					
ANR	3933626	AdditiveExpression	CG ( active_op_array ) -> arg_info - 1		3933427	0		-			
ANR	3933627	PtrMemberAccess	CG ( active_op_array ) -> arg_info		3933427	0					
ANR	3933628	CallExpression	CG ( active_op_array )		3933427	0					
ANR	3933629	Callee	CG		3933427	0					
ANR	3933630	Identifier	CG		3933427	0					
ANR	3933631	ArgumentList	active_op_array		3933427	1					
ANR	3933632	Argument	active_op_array		3933427	0					
ANR	3933633	Identifier	active_op_array		3933427	0					
ANR	3933634	Identifier	arg_info		3933427	1					
ANR	3933635	PrimaryExpression	1		3933427	1					
ANR	3933636	ExpressionStatement	zend_handle_loops_and_finally ( )	3597:1:104525:104556	3933427	7	True				
ANR	3933637	CallExpression	zend_handle_loops_and_finally ( )		3933427	0					
ANR	3933638	Callee	zend_handle_loops_and_finally		3933427	0					
ANR	3933639	Identifier	zend_handle_loops_and_finally		3933427	0					
ANR	3933640	ArgumentList			3933427	1					
ANR	3933641	ExpressionStatement	"opline = zend_emit_op ( NULL , by_ref ? ZEND_RETURN_BY_REF : ZEND_RETURN , & expr_node , NULL )"	3599:1:104560:104650	3933427	8	True				
ANR	3933642	AssignmentExpression	"opline = zend_emit_op ( NULL , by_ref ? ZEND_RETURN_BY_REF : ZEND_RETURN , & expr_node , NULL )"		3933427	0		=			
ANR	3933643	Identifier	opline		3933427	0					
ANR	3933644	CallExpression	"zend_emit_op ( NULL , by_ref ? ZEND_RETURN_BY_REF : ZEND_RETURN , & expr_node , NULL )"		3933427	1					
ANR	3933645	Callee	zend_emit_op		3933427	0					
ANR	3933646	Identifier	zend_emit_op		3933427	0					
ANR	3933647	ArgumentList	NULL		3933427	1					
ANR	3933648	Argument	NULL		3933427	0					
ANR	3933649	Identifier	NULL		3933427	0					
ANR	3933650	Argument	by_ref ? ZEND_RETURN_BY_REF : ZEND_RETURN		3933427	1					
ANR	3933651	ConditionalExpression	by_ref ? ZEND_RETURN_BY_REF : ZEND_RETURN		3933427	0					
ANR	3933652	Condition	by_ref		3933427	0					
ANR	3933653	Identifier	by_ref		3933427	0					
ANR	3933654	Identifier	ZEND_RETURN_BY_REF		3933427	1					
ANR	3933655	Identifier	ZEND_RETURN		3933427	2					
ANR	3933656	Argument	& expr_node		3933427	2					
ANR	3933657	UnaryOperationExpression	& expr_node		3933427	0					
ANR	3933658	UnaryOperator	&		3933427	0					
ANR	3933659	Identifier	expr_node		3933427	1					
ANR	3933660	Argument	NULL		3933427	3					
ANR	3933661	Identifier	NULL		3933427	0					
ANR	3933662	IfStatement	if ( expr_ast )		3933427	9					
ANR	3933663	Condition	expr_ast	3602:5:104658:104665	3933427	0	True				
ANR	3933664	Identifier	expr_ast		3933427	0					
ANR	3933665	CompoundStatement		33:15:1039:1039	3933427	1					
ANR	3933666	IfStatement	if ( zend_is_call ( expr_ast ) )		3933427	0					
ANR	3933667	Condition	zend_is_call ( expr_ast )	3603:6:104676:104697	3933427	0	True				
ANR	3933668	CallExpression	zend_is_call ( expr_ast )		3933427	0					
ANR	3933669	Callee	zend_is_call		3933427	0					
ANR	3933670	Identifier	zend_is_call		3933427	0					
ANR	3933671	ArgumentList	expr_ast		3933427	1					
ANR	3933672	Argument	expr_ast		3933427	0					
ANR	3933673	Identifier	expr_ast		3933427	0					
ANR	3933674	CompoundStatement		34:30:1071:1071	3933427	1					
ANR	3933675	ExpressionStatement	opline -> extended_value = ZEND_RETURNS_FUNCTION	3604:3:104705:104751	3933427	0	True				
ANR	3933676	AssignmentExpression	opline -> extended_value = ZEND_RETURNS_FUNCTION		3933427	0		=			
ANR	3933677	PtrMemberAccess	opline -> extended_value		3933427	0					
ANR	3933678	Identifier	opline		3933427	0					
ANR	3933679	Identifier	extended_value		3933427	1					
ANR	3933680	Identifier	ZEND_RETURNS_FUNCTION		3933427	1					
ANR	3933681	ElseStatement	else		3933427	0					
ANR	3933682	IfStatement	if ( by_ref && ! zend_is_variable ( expr_ast ) )		3933427	0					
ANR	3933683	Condition	by_ref && ! zend_is_variable ( expr_ast )	3605:13:104766:104802	3933427	0	True				
ANR	3933684	AndExpression	by_ref && ! zend_is_variable ( expr_ast )		3933427	0		&&			
ANR	3933685	Identifier	by_ref		3933427	0					
ANR	3933686	UnaryOperationExpression	! zend_is_variable ( expr_ast )		3933427	1					
ANR	3933687	UnaryOperator	!		3933427	0					
ANR	3933688	CallExpression	zend_is_variable ( expr_ast )		3933427	1					
ANR	3933689	Callee	zend_is_variable		3933427	0					
ANR	3933690	Identifier	zend_is_variable		3933427	0					
ANR	3933691	ArgumentList	expr_ast		3933427	1					
ANR	3933692	Argument	expr_ast		3933427	0					
ANR	3933693	Identifier	expr_ast		3933427	0					
ANR	3933694	CompoundStatement		36:52:1176:1176	3933427	1					
ANR	3933695	ExpressionStatement	opline -> extended_value = ZEND_RETURNS_VALUE	3606:3:104810:104853	3933427	0	True				
ANR	3933696	AssignmentExpression	opline -> extended_value = ZEND_RETURNS_VALUE		3933427	0		=			
ANR	3933697	PtrMemberAccess	opline -> extended_value		3933427	0					
ANR	3933698	Identifier	opline		3933427	0					
ANR	3933699	Identifier	extended_value		3933427	1					
ANR	3933700	Identifier	ZEND_RETURNS_VALUE		3933427	1					
ANR	3933701	ReturnType	void		3933427	1					
ANR	3933702	Identifier	zend_compile_return		3933427	2					
ANR	3933703	ParameterList	zend_ast * ast		3933427	3					
ANR	3933704	Parameter	zend_ast * ast	3569:25:103603:103615	3933427	0	True				
ANR	3933705	ParameterType	zend_ast *		3933427	0					
ANR	3933706	Identifier	ast		3933427	1					
ANR	3933707	CFGEntryNode	ENTRY		3933427		True				
ANR	3933708	CFGExitNode	EXIT		3933427		True				
ANR	3933709	Symbol	opline -> op1		3933427						
ANR	3933710	Symbol	ast		3933427						
ANR	3933711	Symbol	* CG		3933427						
ANR	3933712	Symbol	& expr_node		3933427						
ANR	3933713	Symbol	CG ( context ) . fast_call_var		3933427						
ANR	3933714	Symbol	opline -> extended_value		3933427						
ANR	3933715	Symbol	* ast		3933427						
ANR	3933716	Symbol	opline		3933427						
ANR	3933717	Symbol	ZEND_RETURNS_VALUE		3933427						
ANR	3933718	Symbol	* * ast		3933427						
ANR	3933719	Symbol	ZEND_RETURN_BY_REF		3933427						
ANR	3933720	Symbol	context		3933427						
ANR	3933721	Symbol	expr_node . op_type		3933427						
ANR	3933722	Symbol	expr_node . u		3933427						
ANR	3933723	Symbol	opline -> op1 . var		3933427						
ANR	3933724	Symbol	ZEND_ACC_GENERATOR		3933427						
ANR	3933725	Symbol	BP_VAR_REF		3933427						
ANR	3933726	Symbol	IS_TMP_VAR		3933427						
ANR	3933727	Symbol	CG ( context ) . in_finally		3933427						
ANR	3933728	Symbol	IS_CONST		3933427						
ANR	3933729	Symbol	zend_is_variable		3933427						
ANR	3933730	Symbol	NULL		3933427						
ANR	3933731	Symbol	ZEND_RETURN		3933427						
ANR	3933732	Symbol	CG		3933427						
ANR	3933733	Symbol	zend_is_call		3933427						
ANR	3933734	Symbol	active_op_array		3933427						
ANR	3933735	Symbol	ZEND_ACC_HAS_RETURN_TYPE		3933427						
ANR	3933736	Symbol	expr_ast		3933427						
ANR	3933737	Symbol	& expr_node . u . constant		3933427						
ANR	3933738	Symbol	CG ( active_op_array ) -> fn_flags		3933427						
ANR	3933739	Symbol	opline -> op1_type		3933427						
ANR	3933740	Symbol	ZEND_RETURNS_FUNCTION		3933427						
ANR	3933741	Symbol	expr_node		3933427						
ANR	3933742	Symbol	CG ( active_op_array ) -> arg_info		3933427						
ANR	3933743	Symbol	& expr_node . u		3933427						
ANR	3933744	Symbol	* opline		3933427						
ANR	3933745	Symbol	ZEND_ACC_RETURN_REFERENCE		3933427						
ANR	3933746	Symbol	* ast -> child		3933427						
ANR	3933747	Symbol	by_ref		3933427						
ANR	3933748	Symbol	ast -> child		3933427						
ANR	3933749	Symbol	ZEND_DISCARD_EXCEPTION		3933427						
ANR	3933750	Symbol	zend_emit_op		3933427						
ANR	3933751	Function	zend_compile_echo	3612:0:104875:105130							
ANR	3933752	FunctionDef	zend_compile_echo (zend_ast * ast)		3933751	0					
ANR	3933753	CompoundStatement		3613:0:104923:105130	3933751	0					
ANR	3933754	IdentifierDeclStatement	zend_op * opline ;	3614:1:104926:104941	3933751	0	True				
ANR	3933755	IdentifierDecl	* opline		3933751	0					
ANR	3933756	IdentifierDeclType	zend_op *		3933751	0					
ANR	3933757	Identifier	opline		3933751	1					
ANR	3933758	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	3615:1:104944:104978	3933751	1	True				
ANR	3933759	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3933751	0					
ANR	3933760	IdentifierDeclType	zend_ast *		3933751	0					
ANR	3933761	Identifier	expr_ast		3933751	1					
ANR	3933762	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3933751	2		=			
ANR	3933763	Identifier	expr_ast		3933751	0					
ANR	3933764	ArrayIndexing	ast -> child [ 0 ]		3933751	1					
ANR	3933765	PtrMemberAccess	ast -> child		3933751	0					
ANR	3933766	Identifier	ast		3933751	0					
ANR	3933767	Identifier	child		3933751	1					
ANR	3933768	PrimaryExpression	0		3933751	1					
ANR	3933769	IdentifierDeclStatement	znode expr_node ;	3617:1:104982:104997	3933751	2	True				
ANR	3933770	IdentifierDecl	expr_node		3933751	0					
ANR	3933771	IdentifierDeclType	znode		3933751	0					
ANR	3933772	Identifier	expr_node		3933751	1					
ANR	3933773	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	3618:1:105000:105039	3933751	3	True				
ANR	3933774	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3933751	0					
ANR	3933775	Callee	zend_compile_expr		3933751	0					
ANR	3933776	Identifier	zend_compile_expr		3933751	0					
ANR	3933777	ArgumentList	& expr_node		3933751	1					
ANR	3933778	Argument	& expr_node		3933751	0					
ANR	3933779	UnaryOperationExpression	& expr_node		3933751	0					
ANR	3933780	UnaryOperator	&		3933751	0					
ANR	3933781	Identifier	expr_node		3933751	1					
ANR	3933782	Argument	expr_ast		3933751	1					
ANR	3933783	Identifier	expr_ast		3933751	0					
ANR	3933784	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_ECHO , & expr_node , NULL )"	3620:1:105043:105099	3933751	4	True				
ANR	3933785	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_ECHO , & expr_node , NULL )"		3933751	0		=			
ANR	3933786	Identifier	opline		3933751	0					
ANR	3933787	CallExpression	"zend_emit_op ( NULL , ZEND_ECHO , & expr_node , NULL )"		3933751	1					
ANR	3933788	Callee	zend_emit_op		3933751	0					
ANR	3933789	Identifier	zend_emit_op		3933751	0					
ANR	3933790	ArgumentList	NULL		3933751	1					
ANR	3933791	Argument	NULL		3933751	0					
ANR	3933792	Identifier	NULL		3933751	0					
ANR	3933793	Argument	ZEND_ECHO		3933751	1					
ANR	3933794	Identifier	ZEND_ECHO		3933751	0					
ANR	3933795	Argument	& expr_node		3933751	2					
ANR	3933796	UnaryOperationExpression	& expr_node		3933751	0					
ANR	3933797	UnaryOperator	&		3933751	0					
ANR	3933798	Identifier	expr_node		3933751	1					
ANR	3933799	Argument	NULL		3933751	3					
ANR	3933800	Identifier	NULL		3933751	0					
ANR	3933801	ExpressionStatement	opline -> extended_value = 0	3621:1:105102:105128	3933751	5	True				
ANR	3933802	AssignmentExpression	opline -> extended_value = 0		3933751	0		=			
ANR	3933803	PtrMemberAccess	opline -> extended_value		3933751	0					
ANR	3933804	Identifier	opline		3933751	0					
ANR	3933805	Identifier	extended_value		3933751	1					
ANR	3933806	PrimaryExpression	0		3933751	1					
ANR	3933807	ReturnType	void		3933751	1					
ANR	3933808	Identifier	zend_compile_echo		3933751	2					
ANR	3933809	ParameterList	zend_ast * ast		3933751	3					
ANR	3933810	Parameter	zend_ast * ast	3612:23:104898:104910	3933751	0	True				
ANR	3933811	ParameterType	zend_ast *		3933751	0					
ANR	3933812	Identifier	ast		3933751	1					
ANR	3933813	CFGEntryNode	ENTRY		3933751		True				
ANR	3933814	CFGExitNode	EXIT		3933751		True				
ANR	3933815	Symbol	ast		3933751						
ANR	3933816	Symbol	NULL		3933751						
ANR	3933817	Symbol	ZEND_ECHO		3933751						
ANR	3933818	Symbol	expr_ast		3933751						
ANR	3933819	Symbol	& expr_node		3933751						
ANR	3933820	Symbol	opline -> extended_value		3933751						
ANR	3933821	Symbol	expr_node		3933751						
ANR	3933822	Symbol	opline		3933751						
ANR	3933823	Symbol	* ast		3933751						
ANR	3933824	Symbol	* opline		3933751						
ANR	3933825	Symbol	* * ast		3933751						
ANR	3933826	Symbol	* ast -> child		3933751						
ANR	3933827	Symbol	ast -> child		3933751						
ANR	3933828	Symbol	zend_emit_op		3933751						
ANR	3933829	Function	zend_compile_throw	3625:0:105143:105344							
ANR	3933830	FunctionDef	zend_compile_throw (zend_ast * ast)		3933829	0					
ANR	3933831	CompoundStatement		3626:0:105192:105344	3933829	0					
ANR	3933832	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	3627:1:105195:105229	3933829	0	True				
ANR	3933833	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3933829	0					
ANR	3933834	IdentifierDeclType	zend_ast *		3933829	0					
ANR	3933835	Identifier	expr_ast		3933829	1					
ANR	3933836	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3933829	2		=			
ANR	3933837	Identifier	expr_ast		3933829	0					
ANR	3933838	ArrayIndexing	ast -> child [ 0 ]		3933829	1					
ANR	3933839	PtrMemberAccess	ast -> child		3933829	0					
ANR	3933840	Identifier	ast		3933829	0					
ANR	3933841	Identifier	child		3933829	1					
ANR	3933842	PrimaryExpression	0		3933829	1					
ANR	3933843	IdentifierDeclStatement	znode expr_node ;	3629:1:105233:105248	3933829	1	True				
ANR	3933844	IdentifierDecl	expr_node		3933829	0					
ANR	3933845	IdentifierDeclType	znode		3933829	0					
ANR	3933846	Identifier	expr_node		3933829	1					
ANR	3933847	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	3630:1:105251:105290	3933829	2	True				
ANR	3933848	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3933829	0					
ANR	3933849	Callee	zend_compile_expr		3933829	0					
ANR	3933850	Identifier	zend_compile_expr		3933829	0					
ANR	3933851	ArgumentList	& expr_node		3933829	1					
ANR	3933852	Argument	& expr_node		3933829	0					
ANR	3933853	UnaryOperationExpression	& expr_node		3933829	0					
ANR	3933854	UnaryOperator	&		3933829	0					
ANR	3933855	Identifier	expr_node		3933829	1					
ANR	3933856	Argument	expr_ast		3933829	1					
ANR	3933857	Identifier	expr_ast		3933829	0					
ANR	3933858	ExpressionStatement	"zend_emit_op ( NULL , ZEND_THROW , & expr_node , NULL )"	3632:1:105294:105342	3933829	3	True				
ANR	3933859	CallExpression	"zend_emit_op ( NULL , ZEND_THROW , & expr_node , NULL )"		3933829	0					
ANR	3933860	Callee	zend_emit_op		3933829	0					
ANR	3933861	Identifier	zend_emit_op		3933829	0					
ANR	3933862	ArgumentList	NULL		3933829	1					
ANR	3933863	Argument	NULL		3933829	0					
ANR	3933864	Identifier	NULL		3933829	0					
ANR	3933865	Argument	ZEND_THROW		3933829	1					
ANR	3933866	Identifier	ZEND_THROW		3933829	0					
ANR	3933867	Argument	& expr_node		3933829	2					
ANR	3933868	UnaryOperationExpression	& expr_node		3933829	0					
ANR	3933869	UnaryOperator	&		3933829	0					
ANR	3933870	Identifier	expr_node		3933829	1					
ANR	3933871	Argument	NULL		3933829	3					
ANR	3933872	Identifier	NULL		3933829	0					
ANR	3933873	ReturnType	void		3933829	1					
ANR	3933874	Identifier	zend_compile_throw		3933829	2					
ANR	3933875	ParameterList	zend_ast * ast		3933829	3					
ANR	3933876	Parameter	zend_ast * ast	3625:24:105167:105179	3933829	0	True				
ANR	3933877	ParameterType	zend_ast *		3933829	0					
ANR	3933878	Identifier	ast		3933829	1					
ANR	3933879	CFGEntryNode	ENTRY		3933829		True				
ANR	3933880	CFGExitNode	EXIT		3933829		True				
ANR	3933881	Symbol	expr_node		3933829						
ANR	3933882	Symbol	ast		3933829						
ANR	3933883	Symbol	* ast		3933829						
ANR	3933884	Symbol	NULL		3933829						
ANR	3933885	Symbol	* * ast		3933829						
ANR	3933886	Symbol	* ast -> child		3933829						
ANR	3933887	Symbol	expr_ast		3933829						
ANR	3933888	Symbol	ast -> child		3933829						
ANR	3933889	Symbol	& expr_node		3933829						
ANR	3933890	Symbol	ZEND_THROW		3933829						
ANR	3933891	Function	zend_compile_break_continue	3636:0:105357:106705							
ANR	3933892	FunctionDef	zend_compile_break_continue (zend_ast * ast)		3933891	0					
ANR	3933893	CompoundStatement		3637:0:105415:106705	3933891	0					
ANR	3933894	IdentifierDeclStatement	zend_ast * depth_ast = ast -> child [ 0 ] ;	3638:1:105418:105453	3933891	0	True				
ANR	3933895	IdentifierDecl	* depth_ast = ast -> child [ 0 ]		3933891	0					
ANR	3933896	IdentifierDeclType	zend_ast *		3933891	0					
ANR	3933897	Identifier	depth_ast		3933891	1					
ANR	3933898	AssignmentExpression	* depth_ast = ast -> child [ 0 ]		3933891	2		=			
ANR	3933899	Identifier	depth_ast		3933891	0					
ANR	3933900	ArrayIndexing	ast -> child [ 0 ]		3933891	1					
ANR	3933901	PtrMemberAccess	ast -> child		3933891	0					
ANR	3933902	Identifier	ast		3933891	0					
ANR	3933903	Identifier	child		3933891	1					
ANR	3933904	PrimaryExpression	0		3933891	1					
ANR	3933905	IdentifierDeclStatement	zend_op * opline ;	3640:1:105457:105472	3933891	1	True				
ANR	3933906	IdentifierDecl	* opline		3933891	0					
ANR	3933907	IdentifierDeclType	zend_op *		3933891	0					
ANR	3933908	Identifier	opline		3933891	1					
ANR	3933909	IdentifierDeclStatement	int depth ;	3641:1:105475:105484	3933891	2	True				
ANR	3933910	IdentifierDecl	depth		3933891	0					
ANR	3933911	IdentifierDeclType	int		3933891	0					
ANR	3933912	Identifier	depth		3933891	1					
ANR	3933913	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_BREAK || ast -> kind == ZEND_AST_CONTINUE )	3643:1:105488:105562	3933891	3	True				
ANR	3933914	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_BREAK || ast -> kind == ZEND_AST_CONTINUE )		3933891	0					
ANR	3933915	Callee	ZEND_ASSERT		3933891	0					
ANR	3933916	Identifier	ZEND_ASSERT		3933891	0					
ANR	3933917	ArgumentList	ast -> kind == ZEND_AST_BREAK || ast -> kind == ZEND_AST_CONTINUE		3933891	1					
ANR	3933918	Argument	ast -> kind == ZEND_AST_BREAK || ast -> kind == ZEND_AST_CONTINUE		3933891	0					
ANR	3933919	OrExpression	ast -> kind == ZEND_AST_BREAK || ast -> kind == ZEND_AST_CONTINUE		3933891	0		||			
ANR	3933920	EqualityExpression	ast -> kind == ZEND_AST_BREAK		3933891	0		==			
ANR	3933921	PtrMemberAccess	ast -> kind		3933891	0					
ANR	3933922	Identifier	ast		3933891	0					
ANR	3933923	Identifier	kind		3933891	1					
ANR	3933924	Identifier	ZEND_AST_BREAK		3933891	1					
ANR	3933925	EqualityExpression	ast -> kind == ZEND_AST_CONTINUE		3933891	1		==			
ANR	3933926	PtrMemberAccess	ast -> kind		3933891	0					
ANR	3933927	Identifier	ast		3933891	0					
ANR	3933928	Identifier	kind		3933891	1					
ANR	3933929	Identifier	ZEND_AST_CONTINUE		3933891	1					
ANR	3933930	IfStatement	if ( depth_ast )		3933891	4					
ANR	3933931	Condition	depth_ast	3645:5:105570:105578	3933891	0	True				
ANR	3933932	Identifier	depth_ast		3933891	0					
ANR	3933933	CompoundStatement		10:2:169:183	3933891	1					
ANR	3933934	IdentifierDeclStatement	zval * depth_zv ;	3646:2:105585:105599	3933891	0	True				
ANR	3933935	IdentifierDecl	* depth_zv		3933891	0					
ANR	3933936	IdentifierDeclType	zval *		3933891	0					
ANR	3933937	Identifier	depth_zv		3933891	1					
ANR	3933938	IfStatement	if ( depth_ast -> kind != ZEND_AST_ZVAL )		3933891	1					
ANR	3933939	Condition	depth_ast -> kind != ZEND_AST_ZVAL	3647:6:105607:105638	3933891	0	True				
ANR	3933940	EqualityExpression	depth_ast -> kind != ZEND_AST_ZVAL		3933891	0		!=			
ANR	3933941	PtrMemberAccess	depth_ast -> kind		3933891	0					
ANR	3933942	Identifier	depth_ast		3933891	0					
ANR	3933943	Identifier	kind		3933891	1					
ANR	3933944	Identifier	ZEND_AST_ZVAL		3933891	1					
ANR	3933945	CompoundStatement		11:40:225:225	3933891	1					
ANR	3933946	Statement	zend_error_noreturn	3648:3:105646:105664	3933891	0	True				
ANR	3933947	Statement	(	3648:22:105665:105665	3933891	1	True				
ANR	3933948	Statement	E_COMPILE_ERROR	3648:23:105666:105680	3933891	2	True				
ANR	3933949	Statement	","	3648:38:105681:105681	3933891	3	True				
ANR	3933950	Statement	"""'%s' operator with non-constant operand """	3648:40:105683:105724	3933891	4	True				
ANR	3933951	Statement	"""is no longer supported"""	3649:4:105730:105753	3933891	5	True				
ANR	3933952	Statement	","	3649:28:105754:105754	3933891	6	True				
ANR	3933953	Statement	ast	3649:30:105756:105758	3933891	7	True				
ANR	3933954	Statement	->	3649:33:105759:105760	3933891	8	True				
ANR	3933955	Statement	kind	3649:35:105761:105764	3933891	9	True				
ANR	3933956	Statement	==	3649:40:105766:105767	3933891	10	True				
ANR	3933957	Statement	ZEND_AST_BREAK	3649:43:105769:105782	3933891	11	True				
ANR	3933958	Statement	?	3649:58:105784:105784	3933891	12	True				
ANR	3933959	Statement	"""break"""	3649:60:105786:105792	3933891	13	True				
ANR	3933960	Statement	:	3649:68:105794:105794	3933891	14	True				
ANR	3933961	Statement	"""continue"""	3649:70:105796:105805	3933891	15	True				
ANR	3933962	Statement	)	3649:80:105806:105806	3933891	16	True				
ANR	3933963	ExpressionStatement		3649:81:105807:105807	3933891	17	True				
ANR	3933964	ExpressionStatement	depth_zv = zend_ast_get_zval ( depth_ast )	3652:2:105816:105855	3933891	2	True				
ANR	3933965	AssignmentExpression	depth_zv = zend_ast_get_zval ( depth_ast )		3933891	0		=			
ANR	3933966	Identifier	depth_zv		3933891	0					
ANR	3933967	CallExpression	zend_ast_get_zval ( depth_ast )		3933891	1					
ANR	3933968	Callee	zend_ast_get_zval		3933891	0					
ANR	3933969	Identifier	zend_ast_get_zval		3933891	0					
ANR	3933970	ArgumentList	depth_ast		3933891	1					
ANR	3933971	Argument	depth_ast		3933891	0					
ANR	3933972	Identifier	depth_ast		3933891	0					
ANR	3933973	IfStatement	if ( Z_TYPE_P ( depth_zv ) != IS_LONG || Z_LVAL_P ( depth_zv ) < 1 )		3933891	3					
ANR	3933974	Condition	Z_TYPE_P ( depth_zv ) != IS_LONG || Z_LVAL_P ( depth_zv ) < 1	3653:6:105863:105917	3933891	0	True				
ANR	3933975	OrExpression	Z_TYPE_P ( depth_zv ) != IS_LONG || Z_LVAL_P ( depth_zv ) < 1		3933891	0		||			
ANR	3933976	EqualityExpression	Z_TYPE_P ( depth_zv ) != IS_LONG		3933891	0		!=			
ANR	3933977	CallExpression	Z_TYPE_P ( depth_zv )		3933891	0					
ANR	3933978	Callee	Z_TYPE_P		3933891	0					
ANR	3933979	Identifier	Z_TYPE_P		3933891	0					
ANR	3933980	ArgumentList	depth_zv		3933891	1					
ANR	3933981	Argument	depth_zv		3933891	0					
ANR	3933982	Identifier	depth_zv		3933891	0					
ANR	3933983	Identifier	IS_LONG		3933891	1					
ANR	3933984	RelationalExpression	Z_LVAL_P ( depth_zv ) < 1		3933891	1		<			
ANR	3933985	CallExpression	Z_LVAL_P ( depth_zv )		3933891	0					
ANR	3933986	Callee	Z_LVAL_P		3933891	0					
ANR	3933987	Identifier	Z_LVAL_P		3933891	0					
ANR	3933988	ArgumentList	depth_zv		3933891	1					
ANR	3933989	Argument	depth_zv		3933891	0					
ANR	3933990	Identifier	depth_zv		3933891	0					
ANR	3933991	PrimaryExpression	1		3933891	1					
ANR	3933992	CompoundStatement		17:63:504:504	3933891	1					
ANR	3933993	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""'%s' operator accepts only positive numbers"" , ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"" )"	3654:3:105925:106064	3933891	0	True				
ANR	3933994	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""'%s' operator accepts only positive numbers"" , ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"" )"		3933891	0					
ANR	3933995	Callee	zend_error_noreturn		3933891	0					
ANR	3933996	Identifier	zend_error_noreturn		3933891	0					
ANR	3933997	ArgumentList	E_COMPILE_ERROR		3933891	1					
ANR	3933998	Argument	E_COMPILE_ERROR		3933891	0					
ANR	3933999	Identifier	E_COMPILE_ERROR		3933891	0					
ANR	3934000	Argument	"""'%s' operator accepts only positive numbers"""		3933891	1					
ANR	3934001	PrimaryExpression	"""'%s' operator accepts only positive numbers"""		3933891	0					
ANR	3934002	Argument	"ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"""		3933891	2					
ANR	3934003	ConditionalExpression	"ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"""		3933891	0					
ANR	3934004	Condition	ast -> kind == ZEND_AST_BREAK		3933891	0					
ANR	3934005	EqualityExpression	ast -> kind == ZEND_AST_BREAK		3933891	0		==			
ANR	3934006	PtrMemberAccess	ast -> kind		3933891	0					
ANR	3934007	Identifier	ast		3933891	0					
ANR	3934008	Identifier	kind		3933891	1					
ANR	3934009	Identifier	ZEND_AST_BREAK		3933891	1					
ANR	3934010	PrimaryExpression	"""break"""		3933891	1					
ANR	3934011	PrimaryExpression	"""continue"""		3933891	2					
ANR	3934012	ExpressionStatement	depth = Z_LVAL_P ( depth_zv )	3658:2:106073:106099	3933891	4	True				
ANR	3934013	AssignmentExpression	depth = Z_LVAL_P ( depth_zv )		3933891	0		=			
ANR	3934014	Identifier	depth		3933891	0					
ANR	3934015	CallExpression	Z_LVAL_P ( depth_zv )		3933891	1					
ANR	3934016	Callee	Z_LVAL_P		3933891	0					
ANR	3934017	Identifier	Z_LVAL_P		3933891	0					
ANR	3934018	ArgumentList	depth_zv		3933891	1					
ANR	3934019	Argument	depth_zv		3933891	0					
ANR	3934020	Identifier	depth_zv		3933891	0					
ANR	3934021	ElseStatement	else		3933891	0					
ANR	3934022	CompoundStatement		23:8:693:693	3933891	0					
ANR	3934023	ExpressionStatement	depth = 1	3660:2:106113:106122	3933891	0	True				
ANR	3934024	AssignmentExpression	depth = 1		3933891	0		=			
ANR	3934025	Identifier	depth		3933891	0					
ANR	3934026	PrimaryExpression	1		3933891	1					
ANR	3934027	IfStatement	if ( CG ( context ) . current_brk_cont == - 1 )		3933891	5					
ANR	3934028	Condition	CG ( context ) . current_brk_cont == - 1	3663:5:106133:106166	3933891	0	True				
ANR	3934029	EqualityExpression	CG ( context ) . current_brk_cont == - 1		3933891	0		==			
ANR	3934030	MemberAccess	CG ( context ) . current_brk_cont		3933891	0					
ANR	3934031	CallExpression	CG ( context )		3933891	0					
ANR	3934032	Callee	CG		3933891	0					
ANR	3934033	Identifier	CG		3933891	0					
ANR	3934034	ArgumentList	context		3933891	1					
ANR	3934035	Argument	context		3933891	0					
ANR	3934036	Identifier	context		3933891	0					
ANR	3934037	Identifier	current_brk_cont		3933891	1					
ANR	3934038	UnaryOperationExpression	- 1		3933891	1					
ANR	3934039	UnaryOperator	-		3933891	0					
ANR	3934040	PrimaryExpression	1		3933891	1					
ANR	3934041	CompoundStatement		27:41:753:753	3933891	1					
ANR	3934042	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""'%s' not in the 'loop' or 'switch' context"" , ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"" )"	3664:2:106173:106310	3933891	0	True				
ANR	3934043	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""'%s' not in the 'loop' or 'switch' context"" , ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"" )"		3933891	0					
ANR	3934044	Callee	zend_error_noreturn		3933891	0					
ANR	3934045	Identifier	zend_error_noreturn		3933891	0					
ANR	3934046	ArgumentList	E_COMPILE_ERROR		3933891	1					
ANR	3934047	Argument	E_COMPILE_ERROR		3933891	0					
ANR	3934048	Identifier	E_COMPILE_ERROR		3933891	0					
ANR	3934049	Argument	"""'%s' not in the 'loop' or 'switch' context"""		3933891	1					
ANR	3934050	PrimaryExpression	"""'%s' not in the 'loop' or 'switch' context"""		3933891	0					
ANR	3934051	Argument	"ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"""		3933891	2					
ANR	3934052	ConditionalExpression	"ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"""		3933891	0					
ANR	3934053	Condition	ast -> kind == ZEND_AST_BREAK		3933891	0					
ANR	3934054	EqualityExpression	ast -> kind == ZEND_AST_BREAK		3933891	0		==			
ANR	3934055	PtrMemberAccess	ast -> kind		3933891	0					
ANR	3934056	Identifier	ast		3933891	0					
ANR	3934057	Identifier	kind		3933891	1					
ANR	3934058	Identifier	ZEND_AST_BREAK		3933891	1					
ANR	3934059	PrimaryExpression	"""break"""		3933891	1					
ANR	3934060	PrimaryExpression	"""continue"""		3933891	2					
ANR	3934061	ElseStatement	else		3933891	0					
ANR	3934062	CompoundStatement		30:8:904:904	3933891	0					
ANR	3934063	IfStatement	if ( ! zend_handle_loops_and_finally_ex ( depth ) )		3933891	0					
ANR	3934064	Condition	! zend_handle_loops_and_finally_ex ( depth )	3667:6:106328:106367	3933891	0	True				
ANR	3934065	UnaryOperationExpression	! zend_handle_loops_and_finally_ex ( depth )		3933891	0					
ANR	3934066	UnaryOperator	!		3933891	0					
ANR	3934067	CallExpression	zend_handle_loops_and_finally_ex ( depth )		3933891	1					
ANR	3934068	Callee	zend_handle_loops_and_finally_ex		3933891	0					
ANR	3934069	Identifier	zend_handle_loops_and_finally_ex		3933891	0					
ANR	3934070	ArgumentList	depth		3933891	1					
ANR	3934071	Argument	depth		3933891	0					
ANR	3934072	Identifier	depth		3933891	0					
ANR	3934073	CompoundStatement		31:48:954:954	3933891	1					
ANR	3934074	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot '%s' %d level%s"" , ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"" , depth , depth == 1 ? """" : ""s"" )"	3668:3:106375:106527	3933891	0	True				
ANR	3934075	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot '%s' %d level%s"" , ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"" , depth , depth == 1 ? """" : ""s"" )"		3933891	0					
ANR	3934076	Callee	zend_error_noreturn		3933891	0					
ANR	3934077	Identifier	zend_error_noreturn		3933891	0					
ANR	3934078	ArgumentList	E_COMPILE_ERROR		3933891	1					
ANR	3934079	Argument	E_COMPILE_ERROR		3933891	0					
ANR	3934080	Identifier	E_COMPILE_ERROR		3933891	0					
ANR	3934081	Argument	"""Cannot '%s' %d level%s"""		3933891	1					
ANR	3934082	PrimaryExpression	"""Cannot '%s' %d level%s"""		3933891	0					
ANR	3934083	Argument	"ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"""		3933891	2					
ANR	3934084	ConditionalExpression	"ast -> kind == ZEND_AST_BREAK ? ""break"" : ""continue"""		3933891	0					
ANR	3934085	Condition	ast -> kind == ZEND_AST_BREAK		3933891	0					
ANR	3934086	EqualityExpression	ast -> kind == ZEND_AST_BREAK		3933891	0		==			
ANR	3934087	PtrMemberAccess	ast -> kind		3933891	0					
ANR	3934088	Identifier	ast		3933891	0					
ANR	3934089	Identifier	kind		3933891	1					
ANR	3934090	Identifier	ZEND_AST_BREAK		3933891	1					
ANR	3934091	PrimaryExpression	"""break"""		3933891	1					
ANR	3934092	PrimaryExpression	"""continue"""		3933891	2					
ANR	3934093	Argument	depth		3933891	3					
ANR	3934094	Identifier	depth		3933891	0					
ANR	3934095	Argument	"depth == 1 ? """" : ""s"""		3933891	4					
ANR	3934096	ConditionalExpression	"depth == 1 ? """" : ""s"""		3933891	0					
ANR	3934097	Condition	depth == 1		3933891	0					
ANR	3934098	EqualityExpression	depth == 1		3933891	0		==			
ANR	3934099	Identifier	depth		3933891	0					
ANR	3934100	PrimaryExpression	1		3933891	1					
ANR	3934101	PrimaryExpression	""""""		3933891	1					
ANR	3934102	PrimaryExpression	"""s"""		3933891	2					
ANR	3934103	ExpressionStatement	"opline = zend_emit_op ( NULL , ast -> kind == ZEND_AST_BREAK ? ZEND_BRK : ZEND_CONT , NULL , NULL )"	3673:1:106537:106628	3933891	6	True				
ANR	3934104	AssignmentExpression	"opline = zend_emit_op ( NULL , ast -> kind == ZEND_AST_BREAK ? ZEND_BRK : ZEND_CONT , NULL , NULL )"		3933891	0		=			
ANR	3934105	Identifier	opline		3933891	0					
ANR	3934106	CallExpression	"zend_emit_op ( NULL , ast -> kind == ZEND_AST_BREAK ? ZEND_BRK : ZEND_CONT , NULL , NULL )"		3933891	1					
ANR	3934107	Callee	zend_emit_op		3933891	0					
ANR	3934108	Identifier	zend_emit_op		3933891	0					
ANR	3934109	ArgumentList	NULL		3933891	1					
ANR	3934110	Argument	NULL		3933891	0					
ANR	3934111	Identifier	NULL		3933891	0					
ANR	3934112	Argument	ast -> kind == ZEND_AST_BREAK ? ZEND_BRK : ZEND_CONT		3933891	1					
ANR	3934113	ConditionalExpression	ast -> kind == ZEND_AST_BREAK ? ZEND_BRK : ZEND_CONT		3933891	0					
ANR	3934114	Condition	ast -> kind == ZEND_AST_BREAK		3933891	0					
ANR	3934115	EqualityExpression	ast -> kind == ZEND_AST_BREAK		3933891	0		==			
ANR	3934116	PtrMemberAccess	ast -> kind		3933891	0					
ANR	3934117	Identifier	ast		3933891	0					
ANR	3934118	Identifier	kind		3933891	1					
ANR	3934119	Identifier	ZEND_AST_BREAK		3933891	1					
ANR	3934120	Identifier	ZEND_BRK		3933891	1					
ANR	3934121	Identifier	ZEND_CONT		3933891	2					
ANR	3934122	Argument	NULL		3933891	2					
ANR	3934123	Identifier	NULL		3933891	0					
ANR	3934124	Argument	NULL		3933891	3					
ANR	3934125	Identifier	NULL		3933891	0					
ANR	3934126	ExpressionStatement	opline -> op1 . num = CG ( context ) . current_brk_cont	3674:1:106631:106677	3933891	7	True				
ANR	3934127	AssignmentExpression	opline -> op1 . num = CG ( context ) . current_brk_cont		3933891	0		=			
ANR	3934128	MemberAccess	opline -> op1 . num		3933891	0					
ANR	3934129	PtrMemberAccess	opline -> op1		3933891	0					
ANR	3934130	Identifier	opline		3933891	0					
ANR	3934131	Identifier	op1		3933891	1					
ANR	3934132	Identifier	num		3933891	1					
ANR	3934133	MemberAccess	CG ( context ) . current_brk_cont		3933891	1					
ANR	3934134	CallExpression	CG ( context )		3933891	0					
ANR	3934135	Callee	CG		3933891	0					
ANR	3934136	Identifier	CG		3933891	0					
ANR	3934137	ArgumentList	context		3933891	1					
ANR	3934138	Argument	context		3933891	0					
ANR	3934139	Identifier	context		3933891	0					
ANR	3934140	Identifier	current_brk_cont		3933891	1					
ANR	3934141	ExpressionStatement	opline -> op2 . num = depth	3675:1:106680:106703	3933891	8	True				
ANR	3934142	AssignmentExpression	opline -> op2 . num = depth		3933891	0		=			
ANR	3934143	MemberAccess	opline -> op2 . num		3933891	0					
ANR	3934144	PtrMemberAccess	opline -> op2		3933891	0					
ANR	3934145	Identifier	opline		3933891	0					
ANR	3934146	Identifier	op2		3933891	1					
ANR	3934147	Identifier	num		3933891	1					
ANR	3934148	Identifier	depth		3933891	1					
ANR	3934149	ReturnType	void		3933891	1					
ANR	3934150	Identifier	zend_compile_break_continue		3933891	2					
ANR	3934151	ParameterList	zend_ast * ast		3933891	3					
ANR	3934152	Parameter	zend_ast * ast	3636:33:105390:105402	3933891	0	True				
ANR	3934153	ParameterType	zend_ast *		3933891	0					
ANR	3934154	Identifier	ast		3933891	1					
ANR	3934155	CFGEntryNode	ENTRY		3933891		True				
ANR	3934156	CFGExitNode	EXIT		3933891		True				
ANR	3934157	Symbol	ZEND_AST_CONTINUE		3933891						
ANR	3934158	Symbol	opline -> op1		3933891						
ANR	3934159	Symbol	opline -> op2		3933891						
ANR	3934160	Symbol	ast -> kind		3933891						
ANR	3934161	Symbol	ast		3933891						
ANR	3934162	Symbol	depth_zv		3933891						
ANR	3934163	Symbol	* depth_ast		3933891						
ANR	3934164	Symbol	E_COMPILE_ERROR		3933891						
ANR	3934165	Symbol	zend_handle_loops_and_finally_ex		3933891						
ANR	3934166	Symbol	* ast		3933891						
ANR	3934167	Symbol	opline		3933891						
ANR	3934168	Symbol	* * ast		3933891						
ANR	3934169	Symbol	IS_LONG		3933891						
ANR	3934170	Symbol	ZEND_AST_ZVAL		3933891						
ANR	3934171	Symbol	ZEND_AST_BREAK		3933891						
ANR	3934172	Symbol	context		3933891						
ANR	3934173	Symbol	depth_ast -> kind		3933891						
ANR	3934174	Symbol	ZEND_CONT		3933891						
ANR	3934175	Symbol	CG ( context ) . current_brk_cont		3933891						
ANR	3934176	Symbol	ZEND_BRK		3933891						
ANR	3934177	Symbol	opline -> op2 . num		3933891						
ANR	3934178	Symbol	depth_ast		3933891						
ANR	3934179	Symbol	NULL		3933891						
ANR	3934180	Symbol	CG		3933891						
ANR	3934181	Symbol	Z_TYPE_P		3933891						
ANR	3934182	Symbol	Z_LVAL_P		3933891						
ANR	3934183	Symbol	depth		3933891						
ANR	3934184	Symbol	* opline		3933891						
ANR	3934185	Symbol	* ast -> child		3933891						
ANR	3934186	Symbol	opline -> op1 . num		3933891						
ANR	3934187	Symbol	ast -> child		3933891						
ANR	3934188	Symbol	zend_ast_get_zval		3933891						
ANR	3934189	Symbol	zend_emit_op		3933891						
ANR	3934190	Function	zend_resolve_goto_label	3679:0:106718:108434							
ANR	3934191	FunctionDef	"zend_resolve_goto_label (zend_op_array * op_array , zend_op * opline)"		3934190	0					
ANR	3934192	CompoundStatement		3680:0:106799:108434	3934190	0					
ANR	3934193	IdentifierDeclStatement	zend_label * dest ;	3681:1:106802:106818	3934190	0	True				
ANR	3934194	IdentifierDecl	* dest		3934190	0					
ANR	3934195	IdentifierDeclType	zend_label *		3934190	0					
ANR	3934196	Identifier	dest		3934190	1					
ANR	3934197	IdentifierDeclStatement	"int current , remove_oplines = opline -> op1 . num ;"	3682:1:106821:106866	3934190	1	True				
ANR	3934198	IdentifierDecl	current		3934190	0					
ANR	3934199	IdentifierDeclType	int		3934190	0					
ANR	3934200	Identifier	current		3934190	1					
ANR	3934201	IdentifierDecl	remove_oplines = opline -> op1 . num		3934190	1					
ANR	3934202	IdentifierDeclType	int		3934190	0					
ANR	3934203	Identifier	remove_oplines		3934190	1					
ANR	3934204	AssignmentExpression	remove_oplines = opline -> op1 . num		3934190	2		=			
ANR	3934205	Identifier	remove_oplines		3934190	0					
ANR	3934206	MemberAccess	opline -> op1 . num		3934190	1					
ANR	3934207	PtrMemberAccess	opline -> op1		3934190	0					
ANR	3934208	Identifier	opline		3934190	0					
ANR	3934209	Identifier	op1		3934190	1					
ANR	3934210	Identifier	num		3934190	1					
ANR	3934211	IdentifierDeclStatement	zval * label ;	3683:1:106869:106880	3934190	2	True				
ANR	3934212	IdentifierDecl	* label		3934190	0					
ANR	3934213	IdentifierDeclType	zval *		3934190	0					
ANR	3934214	Identifier	label		3934190	1					
ANR	3934215	IdentifierDeclStatement	uint32_t opnum = opline - op_array -> opcodes ;	3684:1:106883:106926	3934190	3	True				
ANR	3934216	IdentifierDecl	opnum = opline - op_array -> opcodes		3934190	0					
ANR	3934217	IdentifierDeclType	uint32_t		3934190	0					
ANR	3934218	Identifier	opnum		3934190	1					
ANR	3934219	AssignmentExpression	opnum = opline - op_array -> opcodes		3934190	2		=			
ANR	3934220	Identifier	opnum		3934190	0					
ANR	3934221	AdditiveExpression	opline - op_array -> opcodes		3934190	1		-			
ANR	3934222	Identifier	opline		3934190	0					
ANR	3934223	PtrMemberAccess	op_array -> opcodes		3934190	1					
ANR	3934224	Identifier	op_array		3934190	0					
ANR	3934225	Identifier	opcodes		3934190	1					
ANR	3934226	ExpressionStatement	"label = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"	3686:1:106930:106984	3934190	4	True				
ANR	3934227	AssignmentExpression	"label = CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3934190	0		=			
ANR	3934228	Identifier	label		3934190	0					
ANR	3934229	CallExpression	"CT_CONSTANT_EX ( op_array , opline -> op2 . constant )"		3934190	1					
ANR	3934230	Callee	CT_CONSTANT_EX		3934190	0					
ANR	3934231	Identifier	CT_CONSTANT_EX		3934190	0					
ANR	3934232	ArgumentList	op_array		3934190	1					
ANR	3934233	Argument	op_array		3934190	0					
ANR	3934234	Identifier	op_array		3934190	0					
ANR	3934235	Argument	opline -> op2 . constant		3934190	1					
ANR	3934236	MemberAccess	opline -> op2 . constant		3934190	0					
ANR	3934237	PtrMemberAccess	opline -> op2		3934190	0					
ANR	3934238	Identifier	opline		3934190	0					
ANR	3934239	Identifier	op2		3934190	1					
ANR	3934240	Identifier	constant		3934190	1					
ANR	3934241	IfStatement	"if ( CG ( context ) . labels == NULL || ( dest = zend_hash_find_ptr ( CG ( context ) . labels , Z_STR_P ( label ) ) ) == NULL )"		3934190	5					
ANR	3934242	Condition	"CG ( context ) . labels == NULL || ( dest = zend_hash_find_ptr ( CG ( context ) . labels , Z_STR_P ( label ) ) ) == NULL"	3687:5:106991:107096	3934190	0	True				
ANR	3934243	OrExpression	"CG ( context ) . labels == NULL || ( dest = zend_hash_find_ptr ( CG ( context ) . labels , Z_STR_P ( label ) ) ) == NULL"		3934190	0		||			
ANR	3934244	EqualityExpression	CG ( context ) . labels == NULL		3934190	0		==			
ANR	3934245	MemberAccess	CG ( context ) . labels		3934190	0					
ANR	3934246	CallExpression	CG ( context )		3934190	0					
ANR	3934247	Callee	CG		3934190	0					
ANR	3934248	Identifier	CG		3934190	0					
ANR	3934249	ArgumentList	context		3934190	1					
ANR	3934250	Argument	context		3934190	0					
ANR	3934251	Identifier	context		3934190	0					
ANR	3934252	Identifier	labels		3934190	1					
ANR	3934253	Identifier	NULL		3934190	1					
ANR	3934254	EqualityExpression	"( dest = zend_hash_find_ptr ( CG ( context ) . labels , Z_STR_P ( label ) ) ) == NULL"		3934190	1		==			
ANR	3934255	AssignmentExpression	"dest = zend_hash_find_ptr ( CG ( context ) . labels , Z_STR_P ( label ) )"		3934190	0		=			
ANR	3934256	Identifier	dest		3934190	0					
ANR	3934257	CallExpression	"zend_hash_find_ptr ( CG ( context ) . labels , Z_STR_P ( label ) )"		3934190	1					
ANR	3934258	Callee	zend_hash_find_ptr		3934190	0					
ANR	3934259	Identifier	zend_hash_find_ptr		3934190	0					
ANR	3934260	ArgumentList	CG ( context ) . labels		3934190	1					
ANR	3934261	Argument	CG ( context ) . labels		3934190	0					
ANR	3934262	MemberAccess	CG ( context ) . labels		3934190	0					
ANR	3934263	CallExpression	CG ( context )		3934190	0					
ANR	3934264	Callee	CG		3934190	0					
ANR	3934265	Identifier	CG		3934190	0					
ANR	3934266	ArgumentList	context		3934190	1					
ANR	3934267	Argument	context		3934190	0					
ANR	3934268	Identifier	context		3934190	0					
ANR	3934269	Identifier	labels		3934190	1					
ANR	3934270	Argument	Z_STR_P ( label )		3934190	1					
ANR	3934271	CallExpression	Z_STR_P ( label )		3934190	0					
ANR	3934272	Callee	Z_STR_P		3934190	0					
ANR	3934273	Identifier	Z_STR_P		3934190	0					
ANR	3934274	ArgumentList	label		3934190	1					
ANR	3934275	Argument	label		3934190	0					
ANR	3934276	Identifier	label		3934190	0					
ANR	3934277	Identifier	NULL		3934190	1					
ANR	3934278	CompoundStatement		10:3:301:301	3934190	1					
ANR	3934279	ExpressionStatement	CG ( in_compilation ) = 1	3690:2:107105:107127	3934190	0	True				
ANR	3934280	AssignmentExpression	CG ( in_compilation ) = 1		3934190	0		=			
ANR	3934281	CallExpression	CG ( in_compilation )		3934190	0					
ANR	3934282	Callee	CG		3934190	0					
ANR	3934283	Identifier	CG		3934190	0					
ANR	3934284	ArgumentList	in_compilation		3934190	1					
ANR	3934285	Argument	in_compilation		3934190	0					
ANR	3934286	Identifier	in_compilation		3934190	0					
ANR	3934287	PrimaryExpression	1		3934190	1					
ANR	3934288	ExpressionStatement	CG ( active_op_array ) = op_array	3691:2:107131:107161	3934190	1	True				
ANR	3934289	AssignmentExpression	CG ( active_op_array ) = op_array		3934190	0		=			
ANR	3934290	CallExpression	CG ( active_op_array )		3934190	0					
ANR	3934291	Callee	CG		3934190	0					
ANR	3934292	Identifier	CG		3934190	0					
ANR	3934293	ArgumentList	active_op_array		3934190	1					
ANR	3934294	Argument	active_op_array		3934190	0					
ANR	3934295	Identifier	active_op_array		3934190	0					
ANR	3934296	Identifier	op_array		3934190	1					
ANR	3934297	ExpressionStatement	CG ( zend_lineno ) = opline -> lineno	3692:2:107165:107197	3934190	2	True				
ANR	3934298	AssignmentExpression	CG ( zend_lineno ) = opline -> lineno		3934190	0		=			
ANR	3934299	CallExpression	CG ( zend_lineno )		3934190	0					
ANR	3934300	Callee	CG		3934190	0					
ANR	3934301	Identifier	CG		3934190	0					
ANR	3934302	ArgumentList	zend_lineno		3934190	1					
ANR	3934303	Argument	zend_lineno		3934190	0					
ANR	3934304	Identifier	zend_lineno		3934190	0					
ANR	3934305	PtrMemberAccess	opline -> lineno		3934190	1					
ANR	3934306	Identifier	opline		3934190	0					
ANR	3934307	Identifier	lineno		3934190	1					
ANR	3934308	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""'goto' to undefined label '%s'"" , Z_STRVAL_P ( label ) )"	3693:2:107201:107290	3934190	3	True				
ANR	3934309	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""'goto' to undefined label '%s'"" , Z_STRVAL_P ( label ) )"		3934190	0					
ANR	3934310	Callee	zend_error_noreturn		3934190	0					
ANR	3934311	Identifier	zend_error_noreturn		3934190	0					
ANR	3934312	ArgumentList	E_COMPILE_ERROR		3934190	1					
ANR	3934313	Argument	E_COMPILE_ERROR		3934190	0					
ANR	3934314	Identifier	E_COMPILE_ERROR		3934190	0					
ANR	3934315	Argument	"""'goto' to undefined label '%s'"""		3934190	1					
ANR	3934316	PrimaryExpression	"""'goto' to undefined label '%s'"""		3934190	0					
ANR	3934317	Argument	Z_STRVAL_P ( label )		3934190	2					
ANR	3934318	CallExpression	Z_STRVAL_P ( label )		3934190	0					
ANR	3934319	Callee	Z_STRVAL_P		3934190	0					
ANR	3934320	Identifier	Z_STRVAL_P		3934190	0					
ANR	3934321	ArgumentList	label		3934190	1					
ANR	3934322	Argument	label		3934190	0					
ANR	3934323	Identifier	label		3934190	0					
ANR	3934324	ExpressionStatement	zval_dtor ( label )	3696:1:107297:107313	3934190	6	True				
ANR	3934325	CallExpression	zval_dtor ( label )		3934190	0					
ANR	3934326	Callee	zval_dtor		3934190	0					
ANR	3934327	Identifier	zval_dtor		3934190	0					
ANR	3934328	ArgumentList	label		3934190	1					
ANR	3934329	Argument	label		3934190	0					
ANR	3934330	Identifier	label		3934190	0					
ANR	3934331	ExpressionStatement	ZVAL_NULL ( label )	3697:1:107316:107332	3934190	7	True				
ANR	3934332	CallExpression	ZVAL_NULL ( label )		3934190	0					
ANR	3934333	Callee	ZVAL_NULL		3934190	0					
ANR	3934334	Identifier	ZVAL_NULL		3934190	0					
ANR	3934335	ArgumentList	label		3934190	1					
ANR	3934336	Argument	label		3934190	0					
ANR	3934337	Identifier	label		3934190	0					
ANR	3934338	ExpressionStatement	current = opline -> extended_value	3699:1:107336:107368	3934190	8	True				
ANR	3934339	AssignmentExpression	current = opline -> extended_value		3934190	0		=			
ANR	3934340	Identifier	current		3934190	0					
ANR	3934341	PtrMemberAccess	opline -> extended_value		3934190	1					
ANR	3934342	Identifier	opline		3934190	0					
ANR	3934343	Identifier	extended_value		3934190	1					
ANR	3934344	ForStatement	for ( ; current != dest -> brk_cont ; current = op_array -> brk_cont_array [ current ] . parent )		3934190	9					
ANR	3934345	Condition	current != dest -> brk_cont	3700:8:107378:107402	3934190	0	True				
ANR	3934346	EqualityExpression	current != dest -> brk_cont		3934190	0		!=			
ANR	3934347	Identifier	current		3934190	0					
ANR	3934348	PtrMemberAccess	dest -> brk_cont		3934190	1					
ANR	3934349	Identifier	dest		3934190	0					
ANR	3934350	Identifier	brk_cont		3934190	1					
ANR	3934351	AssignmentExpression	current = op_array -> brk_cont_array [ current ] . parent	3700:35:107405:107454	3934190	1	True	=			
ANR	3934352	Identifier	current		3934190	0					
ANR	3934353	MemberAccess	op_array -> brk_cont_array [ current ] . parent		3934190	1					
ANR	3934354	ArrayIndexing	op_array -> brk_cont_array [ current ]		3934190	0					
ANR	3934355	PtrMemberAccess	op_array -> brk_cont_array		3934190	0					
ANR	3934356	Identifier	op_array		3934190	0					
ANR	3934357	Identifier	brk_cont_array		3934190	1					
ANR	3934358	Identifier	current		3934190	1					
ANR	3934359	Identifier	parent		3934190	1					
ANR	3934360	CompoundStatement		21:87:657:657	3934190	2					
ANR	3934361	IfStatement	if ( current == - 1 )		3934190	0					
ANR	3934362	Condition	current == - 1	3701:6:107465:107477	3934190	0	True				
ANR	3934363	EqualityExpression	current == - 1		3934190	0		==			
ANR	3934364	Identifier	current		3934190	0					
ANR	3934365	UnaryOperationExpression	- 1		3934190	1					
ANR	3934366	UnaryOperator	-		3934190	0					
ANR	3934367	PrimaryExpression	1		3934190	1					
ANR	3934368	CompoundStatement		22:21:680:680	3934190	1					
ANR	3934369	ExpressionStatement	CG ( in_compilation ) = 1	3702:3:107485:107507	3934190	0	True				
ANR	3934370	AssignmentExpression	CG ( in_compilation ) = 1		3934190	0		=			
ANR	3934371	CallExpression	CG ( in_compilation )		3934190	0					
ANR	3934372	Callee	CG		3934190	0					
ANR	3934373	Identifier	CG		3934190	0					
ANR	3934374	ArgumentList	in_compilation		3934190	1					
ANR	3934375	Argument	in_compilation		3934190	0					
ANR	3934376	Identifier	in_compilation		3934190	0					
ANR	3934377	PrimaryExpression	1		3934190	1					
ANR	3934378	ExpressionStatement	CG ( active_op_array ) = op_array	3703:3:107512:107542	3934190	1	True				
ANR	3934379	AssignmentExpression	CG ( active_op_array ) = op_array		3934190	0		=			
ANR	3934380	CallExpression	CG ( active_op_array )		3934190	0					
ANR	3934381	Callee	CG		3934190	0					
ANR	3934382	Identifier	CG		3934190	0					
ANR	3934383	ArgumentList	active_op_array		3934190	1					
ANR	3934384	Argument	active_op_array		3934190	0					
ANR	3934385	Identifier	active_op_array		3934190	0					
ANR	3934386	Identifier	op_array		3934190	1					
ANR	3934387	ExpressionStatement	CG ( zend_lineno ) = opline -> lineno	3704:3:107547:107579	3934190	2	True				
ANR	3934388	AssignmentExpression	CG ( zend_lineno ) = opline -> lineno		3934190	0		=			
ANR	3934389	CallExpression	CG ( zend_lineno )		3934190	0					
ANR	3934390	Callee	CG		3934190	0					
ANR	3934391	Identifier	CG		3934190	0					
ANR	3934392	ArgumentList	zend_lineno		3934190	1					
ANR	3934393	Argument	zend_lineno		3934190	0					
ANR	3934394	Identifier	zend_lineno		3934190	0					
ANR	3934395	PtrMemberAccess	opline -> lineno		3934190	1					
ANR	3934396	Identifier	opline		3934190	0					
ANR	3934397	Identifier	lineno		3934190	1					
ANR	3934398	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""'goto' into loop or switch statement is disallowed"" )"	3705:3:107584:107674	3934190	3	True				
ANR	3934399	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""'goto' into loop or switch statement is disallowed"" )"		3934190	0					
ANR	3934400	Callee	zend_error_noreturn		3934190	0					
ANR	3934401	Identifier	zend_error_noreturn		3934190	0					
ANR	3934402	ArgumentList	E_COMPILE_ERROR		3934190	1					
ANR	3934403	Argument	E_COMPILE_ERROR		3934190	0					
ANR	3934404	Identifier	E_COMPILE_ERROR		3934190	0					
ANR	3934405	Argument	"""'goto' into loop or switch statement is disallowed"""		3934190	1					
ANR	3934406	PrimaryExpression	"""'goto' into loop or switch statement is disallowed"""		3934190	0					
ANR	3934407	IfStatement	if ( op_array -> brk_cont_array [ current ] . start >= 0 )		3934190	1					
ANR	3934408	Condition	op_array -> brk_cont_array [ current ] . start >= 0	3707:6:107686:107729	3934190	0	True				
ANR	3934409	RelationalExpression	op_array -> brk_cont_array [ current ] . start >= 0		3934190	0		>=			
ANR	3934410	MemberAccess	op_array -> brk_cont_array [ current ] . start		3934190	0					
ANR	3934411	ArrayIndexing	op_array -> brk_cont_array [ current ]		3934190	0					
ANR	3934412	PtrMemberAccess	op_array -> brk_cont_array		3934190	0					
ANR	3934413	Identifier	op_array		3934190	0					
ANR	3934414	Identifier	brk_cont_array		3934190	1					
ANR	3934415	Identifier	current		3934190	1					
ANR	3934416	Identifier	start		3934190	1					
ANR	3934417	PrimaryExpression	0		3934190	1					
ANR	3934418	CompoundStatement		28:52:932:932	3934190	1					
ANR	3934419	ExpressionStatement	remove_oplines --	3708:3:107737:107753	3934190	0	True				
ANR	3934420	PostIncDecOperationExpression	remove_oplines --		3934190	0					
ANR	3934421	Identifier	remove_oplines		3934190	0					
ANR	3934422	IncDec	--		3934190	1					
ANR	3934423	ForStatement	for ( current = 0 ; current < op_array -> last_try_catch ; ++ current )		3934190	10					
ANR	3934424	ForInit	current = 0 ;	3712:6:107769:107780	3934190	0	True				
ANR	3934425	AssignmentExpression	current = 0		3934190	0		=			
ANR	3934426	Identifier	current		3934190	0					
ANR	3934427	PrimaryExpression	0		3934190	1					
ANR	3934428	Condition	current < op_array -> last_try_catch	3712:19:107782:107815	3934190	1	True				
ANR	3934429	RelationalExpression	current < op_array -> last_try_catch		3934190	0		<			
ANR	3934430	Identifier	current		3934190	0					
ANR	3934431	PtrMemberAccess	op_array -> last_try_catch		3934190	1					
ANR	3934432	Identifier	op_array		3934190	0					
ANR	3934433	Identifier	last_try_catch		3934190	1					
ANR	3934434	UnaryExpression	++ current	3712:55:107818:107826	3934190	2	True				
ANR	3934435	IncDec	++		3934190	0					
ANR	3934436	Identifier	current		3934190	1					
ANR	3934437	CompoundStatement		34:2:1033:1099	3934190	3					
ANR	3934438	IdentifierDeclStatement	zend_try_catch_element * elem = & op_array -> try_catch_array [ current ] ;	3713:2:107833:107899	3934190	0	True				
ANR	3934439	IdentifierDecl	* elem = & op_array -> try_catch_array [ current ]		3934190	0					
ANR	3934440	IdentifierDeclType	zend_try_catch_element *		3934190	0					
ANR	3934441	Identifier	elem		3934190	1					
ANR	3934442	AssignmentExpression	* elem = & op_array -> try_catch_array [ current ]		3934190	2		=			
ANR	3934443	Identifier	elem		3934190	0					
ANR	3934444	UnaryOperationExpression	& op_array -> try_catch_array [ current ]		3934190	1					
ANR	3934445	UnaryOperator	&		3934190	0					
ANR	3934446	ArrayIndexing	op_array -> try_catch_array [ current ]		3934190	1					
ANR	3934447	PtrMemberAccess	op_array -> try_catch_array		3934190	0					
ANR	3934448	Identifier	op_array		3934190	0					
ANR	3934449	Identifier	try_catch_array		3934190	1					
ANR	3934450	Identifier	current		3934190	1					
ANR	3934451	IfStatement	if ( elem -> try_op > opnum )		3934190	1					
ANR	3934452	Condition	elem -> try_op > opnum	3714:6:107907:107926	3934190	0	True				
ANR	3934453	RelationalExpression	elem -> try_op > opnum		3934190	0		>			
ANR	3934454	PtrMemberAccess	elem -> try_op		3934190	0					
ANR	3934455	Identifier	elem		3934190	0					
ANR	3934456	Identifier	try_op		3934190	1					
ANR	3934457	Identifier	opnum		3934190	1					
ANR	3934458	CompoundStatement		35:28:1129:1129	3934190	1					
ANR	3934459	BreakStatement	break ;	3715:3:107934:107939	3934190	0	True				
ANR	3934460	IfStatement	if ( elem -> finally_op && opnum < elem -> finally_op - 1 && ( dest -> opline_num > elem -> finally_end || dest -> opline_num < elem -> try_op ) )		3934190	2					
ANR	3934461	Condition	elem -> finally_op && opnum < elem -> finally_op - 1 && ( dest -> opline_num > elem -> finally_end || dest -> opline_num < elem -> try_op )	3717:6:107951:108078	3934190	0	True				
ANR	3934462	AndExpression	elem -> finally_op && opnum < elem -> finally_op - 1 && ( dest -> opline_num > elem -> finally_end || dest -> opline_num < elem -> try_op )		3934190	0		&&			
ANR	3934463	PtrMemberAccess	elem -> finally_op		3934190	0					
ANR	3934464	Identifier	elem		3934190	0					
ANR	3934465	Identifier	finally_op		3934190	1					
ANR	3934466	AndExpression	opnum < elem -> finally_op - 1 && ( dest -> opline_num > elem -> finally_end || dest -> opline_num < elem -> try_op )		3934190	1		&&			
ANR	3934467	RelationalExpression	opnum < elem -> finally_op - 1		3934190	0		<			
ANR	3934468	Identifier	opnum		3934190	0					
ANR	3934469	AdditiveExpression	elem -> finally_op - 1		3934190	1		-			
ANR	3934470	PtrMemberAccess	elem -> finally_op		3934190	0					
ANR	3934471	Identifier	elem		3934190	0					
ANR	3934472	Identifier	finally_op		3934190	1					
ANR	3934473	PrimaryExpression	1		3934190	1					
ANR	3934474	OrExpression	dest -> opline_num > elem -> finally_end || dest -> opline_num < elem -> try_op		3934190	1		||			
ANR	3934475	RelationalExpression	dest -> opline_num > elem -> finally_end		3934190	0		>			
ANR	3934476	PtrMemberAccess	dest -> opline_num		3934190	0					
ANR	3934477	Identifier	dest		3934190	0					
ANR	3934478	Identifier	opline_num		3934190	1					
ANR	3934479	PtrMemberAccess	elem -> finally_end		3934190	1					
ANR	3934480	Identifier	elem		3934190	0					
ANR	3934481	Identifier	finally_end		3934190	1					
ANR	3934482	RelationalExpression	dest -> opline_num < elem -> try_op		3934190	1		<			
ANR	3934483	PtrMemberAccess	dest -> opline_num		3934190	0					
ANR	3934484	Identifier	dest		3934190	0					
ANR	3934485	Identifier	opline_num		3934190	1					
ANR	3934486	PtrMemberAccess	elem -> try_op		3934190	1					
ANR	3934487	Identifier	elem		3934190	0					
ANR	3934488	Identifier	try_op		3934190	1					
ANR	3934489	CompoundStatement		40:4:1284:1284	3934190	1					
ANR	3934490	ExpressionStatement	remove_oplines --	3720:3:108089:108105	3934190	0	True				
ANR	3934491	PostIncDecOperationExpression	remove_oplines --		3934190	0					
ANR	3934492	Identifier	remove_oplines		3934190	0					
ANR	3934493	IncDec	--		3934190	1					
ANR	3934494	ExpressionStatement	opline -> opcode = ZEND_JMP	3724:1:108116:108141	3934190	11	True				
ANR	3934495	AssignmentExpression	opline -> opcode = ZEND_JMP		3934190	0		=			
ANR	3934496	PtrMemberAccess	opline -> opcode		3934190	0					
ANR	3934497	Identifier	opline		3934190	0					
ANR	3934498	Identifier	opcode		3934190	1					
ANR	3934499	Identifier	ZEND_JMP		3934190	1					
ANR	3934500	ExpressionStatement	opline -> op1 . opline_num = dest -> opline_num	3725:1:108144:108185	3934190	12	True				
ANR	3934501	AssignmentExpression	opline -> op1 . opline_num = dest -> opline_num		3934190	0		=			
ANR	3934502	MemberAccess	opline -> op1 . opline_num		3934190	0					
ANR	3934503	PtrMemberAccess	opline -> op1		3934190	0					
ANR	3934504	Identifier	opline		3934190	0					
ANR	3934505	Identifier	op1		3934190	1					
ANR	3934506	Identifier	opline_num		3934190	1					
ANR	3934507	PtrMemberAccess	dest -> opline_num		3934190	1					
ANR	3934508	Identifier	dest		3934190	0					
ANR	3934509	Identifier	opline_num		3934190	1					
ANR	3934510	ExpressionStatement	opline -> extended_value = 0	3726:1:108188:108214	3934190	13	True				
ANR	3934511	AssignmentExpression	opline -> extended_value = 0		3934190	0		=			
ANR	3934512	PtrMemberAccess	opline -> extended_value		3934190	0					
ANR	3934513	Identifier	opline		3934190	0					
ANR	3934514	Identifier	extended_value		3934190	1					
ANR	3934515	PrimaryExpression	0		3934190	1					
ANR	3934516	ExpressionStatement	SET_UNUSED ( opline -> op1 )	3727:1:108217:108240	3934190	14	True				
ANR	3934517	CallExpression	SET_UNUSED ( opline -> op1 )		3934190	0					
ANR	3934518	Callee	SET_UNUSED		3934190	0					
ANR	3934519	Identifier	SET_UNUSED		3934190	0					
ANR	3934520	ArgumentList	opline -> op1		3934190	1					
ANR	3934521	Argument	opline -> op1		3934190	0					
ANR	3934522	PtrMemberAccess	opline -> op1		3934190	0					
ANR	3934523	Identifier	opline		3934190	0					
ANR	3934524	Identifier	op1		3934190	1					
ANR	3934525	ExpressionStatement	SET_UNUSED ( opline -> op2 )	3728:1:108243:108266	3934190	15	True				
ANR	3934526	CallExpression	SET_UNUSED ( opline -> op2 )		3934190	0					
ANR	3934527	Callee	SET_UNUSED		3934190	0					
ANR	3934528	Identifier	SET_UNUSED		3934190	0					
ANR	3934529	ArgumentList	opline -> op2		3934190	1					
ANR	3934530	Argument	opline -> op2		3934190	0					
ANR	3934531	PtrMemberAccess	opline -> op2		3934190	0					
ANR	3934532	Identifier	opline		3934190	0					
ANR	3934533	Identifier	op2		3934190	1					
ANR	3934534	ExpressionStatement	SET_UNUSED ( opline -> result )	3729:1:108269:108295	3934190	16	True				
ANR	3934535	CallExpression	SET_UNUSED ( opline -> result )		3934190	0					
ANR	3934536	Callee	SET_UNUSED		3934190	0					
ANR	3934537	Identifier	SET_UNUSED		3934190	0					
ANR	3934538	ArgumentList	opline -> result		3934190	1					
ANR	3934539	Argument	opline -> result		3934190	0					
ANR	3934540	PtrMemberAccess	opline -> result		3934190	0					
ANR	3934541	Identifier	opline		3934190	0					
ANR	3934542	Identifier	result		3934190	1					
ANR	3934543	ExpressionStatement	ZEND_ASSERT ( remove_oplines >= 0 )	3731:1:108299:108331	3934190	17	True				
ANR	3934544	CallExpression	ZEND_ASSERT ( remove_oplines >= 0 )		3934190	0					
ANR	3934545	Callee	ZEND_ASSERT		3934190	0					
ANR	3934546	Identifier	ZEND_ASSERT		3934190	0					
ANR	3934547	ArgumentList	remove_oplines >= 0		3934190	1					
ANR	3934548	Argument	remove_oplines >= 0		3934190	0					
ANR	3934549	RelationalExpression	remove_oplines >= 0		3934190	0		>=			
ANR	3934550	Identifier	remove_oplines		3934190	0					
ANR	3934551	PrimaryExpression	0		3934190	1					
ANR	3934552	WhileStatement	while ( remove_oplines -- )		3934190	18					
ANR	3934553	Condition	remove_oplines --	3732:8:108341:108356	3934190	0	True				
ANR	3934554	PostIncDecOperationExpression	remove_oplines --		3934190	0					
ANR	3934555	Identifier	remove_oplines		3934190	0					
ANR	3934556	IncDec	--		3934190	1					
ANR	3934557	CompoundStatement		53:26:1559:1559	3934190	1					
ANR	3934558	ExpressionStatement	opline --	3733:2:108363:108371	3934190	0	True				
ANR	3934559	PostIncDecOperationExpression	opline --		3934190	0					
ANR	3934560	Identifier	opline		3934190	0					
ANR	3934561	IncDec	--		3934190	1					
ANR	3934562	ExpressionStatement	MAKE_NOP ( opline )	3734:2:108375:108391	3934190	1	True				
ANR	3934563	CallExpression	MAKE_NOP ( opline )		3934190	0					
ANR	3934564	Callee	MAKE_NOP		3934190	0					
ANR	3934565	Identifier	MAKE_NOP		3934190	0					
ANR	3934566	ArgumentList	opline		3934190	1					
ANR	3934567	Argument	opline		3934190	0					
ANR	3934568	Identifier	opline		3934190	0					
ANR	3934569	ExpressionStatement	ZEND_VM_SET_OPCODE_HANDLER ( opline )	3735:2:108395:108429	3934190	2	True				
ANR	3934570	CallExpression	ZEND_VM_SET_OPCODE_HANDLER ( opline )		3934190	0					
ANR	3934571	Callee	ZEND_VM_SET_OPCODE_HANDLER		3934190	0					
ANR	3934572	Identifier	ZEND_VM_SET_OPCODE_HANDLER		3934190	0					
ANR	3934573	ArgumentList	opline		3934190	1					
ANR	3934574	Argument	opline		3934190	0					
ANR	3934575	Identifier	opline		3934190	0					
ANR	3934576	ReturnType	void		3934190	1					
ANR	3934577	Identifier	zend_resolve_goto_label		3934190	2					
ANR	3934578	ParameterList	"zend_op_array * op_array , zend_op * opline"		3934190	3					
ANR	3934579	Parameter	zend_op_array * op_array	3679:29:106747:106769	3934190	0	True				
ANR	3934580	ParameterType	zend_op_array *		3934190	0					
ANR	3934581	Identifier	op_array		3934190	1					
ANR	3934582	Parameter	zend_op * opline	3679:54:106772:106786	3934190	1	True				
ANR	3934583	ParameterType	zend_op *		3934190	0					
ANR	3934584	Identifier	opline		3934190	1					
ANR	3934585	CFGEntryNode	ENTRY		3934190		True				
ANR	3934586	CFGExitNode	EXIT		3934190		True				
ANR	3934587	Symbol	opline -> op1		3934190						
ANR	3934588	Symbol	op_array -> brk_cont_array [ current ] . parent		3934190						
ANR	3934589	Symbol	opline -> op2		3934190						
ANR	3934590	Symbol	remove_oplines		3934190						
ANR	3934591	Symbol	* dest		3934190						
ANR	3934592	Symbol	E_COMPILE_ERROR		3934190						
ANR	3934593	Symbol	* current		3934190						
ANR	3934594	Symbol	dest		3934190						
ANR	3934595	Symbol	elem -> finally_op		3934190						
ANR	3934596	Symbol	in_compilation		3934190						
ANR	3934597	Symbol	opline -> extended_value		3934190						
ANR	3934598	Symbol	opline -> result		3934190						
ANR	3934599	Symbol	opline -> lineno		3934190						
ANR	3934600	Symbol	current		3934190						
ANR	3934601	Symbol	op_array -> brk_cont_array		3934190						
ANR	3934602	Symbol	opline		3934190						
ANR	3934603	Symbol	op_array -> opcodes		3934190						
ANR	3934604	Symbol	opnum		3934190						
ANR	3934605	Symbol	dest -> opline_num		3934190						
ANR	3934606	Symbol	elem -> try_op		3934190						
ANR	3934607	Symbol	context		3934190						
ANR	3934608	Symbol	zend_lineno		3934190						
ANR	3934609	Symbol	elem -> finally_end		3934190						
ANR	3934610	Symbol	op_array -> try_catch_array		3934190						
ANR	3934611	Symbol	* elem		3934190						
ANR	3934612	Symbol	CG ( context ) . labels		3934190						
ANR	3934613	Symbol	zend_hash_find_ptr		3934190						
ANR	3934614	Symbol	CT_CONSTANT_EX		3934190						
ANR	3934615	Symbol	elem		3934190						
ANR	3934616	Symbol	NULL		3934190						
ANR	3934617	Symbol	dest -> brk_cont		3934190						
ANR	3934618	Symbol	CG		3934190						
ANR	3934619	Symbol	* op_array -> brk_cont_array		3934190						
ANR	3934620	Symbol	active_op_array		3934190						
ANR	3934621	Symbol	opline -> op1 . opline_num		3934190						
ANR	3934622	Symbol	label		3934190						
ANR	3934623	Symbol	Z_STRVAL_P		3934190						
ANR	3934624	Symbol	* op_array		3934190						
ANR	3934625	Symbol	op_array -> last_try_catch		3934190						
ANR	3934626	Symbol	op_array -> brk_cont_array [ current ] . start		3934190						
ANR	3934627	Symbol	ZEND_JMP		3934190						
ANR	3934628	Symbol	* opline		3934190						
ANR	3934629	Symbol	opline -> opcode		3934190						
ANR	3934630	Symbol	opline -> op2 . constant		3934190						
ANR	3934631	Symbol	opline -> op1 . num		3934190						
ANR	3934632	Symbol	Z_STR_P		3934190						
ANR	3934633	Symbol	* * op_array		3934190						
ANR	3934634	Symbol	op_array		3934190						
ANR	3934635	Function	zend_compile_goto	3740:0:108447:108981							
ANR	3934636	FunctionDef	zend_compile_goto (zend_ast * ast)		3934635	0					
ANR	3934637	CompoundStatement		3741:0:108495:108981	3934635	0					
ANR	3934638	IdentifierDeclStatement	zend_ast * label_ast = ast -> child [ 0 ] ;	3742:1:108498:108533	3934635	0	True				
ANR	3934639	IdentifierDecl	* label_ast = ast -> child [ 0 ]		3934635	0					
ANR	3934640	IdentifierDeclType	zend_ast *		3934635	0					
ANR	3934641	Identifier	label_ast		3934635	1					
ANR	3934642	AssignmentExpression	* label_ast = ast -> child [ 0 ]		3934635	2		=			
ANR	3934643	Identifier	label_ast		3934635	0					
ANR	3934644	ArrayIndexing	ast -> child [ 0 ]		3934635	1					
ANR	3934645	PtrMemberAccess	ast -> child		3934635	0					
ANR	3934646	Identifier	ast		3934635	0					
ANR	3934647	Identifier	child		3934635	1					
ANR	3934648	PrimaryExpression	0		3934635	1					
ANR	3934649	IdentifierDeclStatement	znode label_node ;	3743:1:108536:108552	3934635	1	True				
ANR	3934650	IdentifierDecl	label_node		3934635	0					
ANR	3934651	IdentifierDeclType	znode		3934635	0					
ANR	3934652	Identifier	label_node		3934635	1					
ANR	3934653	IdentifierDeclStatement	zend_op * opline ;	3744:1:108555:108570	3934635	2	True				
ANR	3934654	IdentifierDecl	* opline		3934635	0					
ANR	3934655	IdentifierDeclType	zend_op *		3934635	0					
ANR	3934656	Identifier	opline		3934635	1					
ANR	3934657	IdentifierDeclStatement	uint32_t opnum_start = get_next_op_number ( CG ( active_op_array ) ) ;	3745:1:108573:108635	3934635	3	True				
ANR	3934658	IdentifierDecl	opnum_start = get_next_op_number ( CG ( active_op_array ) )		3934635	0					
ANR	3934659	IdentifierDeclType	uint32_t		3934635	0					
ANR	3934660	Identifier	opnum_start		3934635	1					
ANR	3934661	AssignmentExpression	opnum_start = get_next_op_number ( CG ( active_op_array ) )		3934635	2		=			
ANR	3934662	Identifier	opnum_start		3934635	0					
ANR	3934663	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3934635	1					
ANR	3934664	Callee	get_next_op_number		3934635	0					
ANR	3934665	Identifier	get_next_op_number		3934635	0					
ANR	3934666	ArgumentList	CG ( active_op_array )		3934635	1					
ANR	3934667	Argument	CG ( active_op_array )		3934635	0					
ANR	3934668	CallExpression	CG ( active_op_array )		3934635	0					
ANR	3934669	Callee	CG		3934635	0					
ANR	3934670	Identifier	CG		3934635	0					
ANR	3934671	ArgumentList	active_op_array		3934635	1					
ANR	3934672	Argument	active_op_array		3934635	0					
ANR	3934673	Identifier	active_op_array		3934635	0					
ANR	3934674	ExpressionStatement	"zend_compile_expr ( & label_node , label_ast )"	3747:1:108639:108680	3934635	4	True				
ANR	3934675	CallExpression	"zend_compile_expr ( & label_node , label_ast )"		3934635	0					
ANR	3934676	Callee	zend_compile_expr		3934635	0					
ANR	3934677	Identifier	zend_compile_expr		3934635	0					
ANR	3934678	ArgumentList	& label_node		3934635	1					
ANR	3934679	Argument	& label_node		3934635	0					
ANR	3934680	UnaryOperationExpression	& label_node		3934635	0					
ANR	3934681	UnaryOperator	&		3934635	0					
ANR	3934682	Identifier	label_node		3934635	1					
ANR	3934683	Argument	label_ast		3934635	1					
ANR	3934684	Identifier	label_ast		3934635	0					
ANR	3934685	ExpressionStatement	zend_handle_loops_and_finally ( )	3750:1:108754:108785	3934635	5	True				
ANR	3934686	CallExpression	zend_handle_loops_and_finally ( )		3934635	0					
ANR	3934687	Callee	zend_handle_loops_and_finally		3934635	0					
ANR	3934688	Identifier	zend_handle_loops_and_finally		3934635	0					
ANR	3934689	ArgumentList			3934635	1					
ANR	3934690	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_GOTO , NULL , & label_node )"	3751:1:108788:108845	3934635	6	True				
ANR	3934691	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_GOTO , NULL , & label_node )"		3934635	0		=			
ANR	3934692	Identifier	opline		3934635	0					
ANR	3934693	CallExpression	"zend_emit_op ( NULL , ZEND_GOTO , NULL , & label_node )"		3934635	1					
ANR	3934694	Callee	zend_emit_op		3934635	0					
ANR	3934695	Identifier	zend_emit_op		3934635	0					
ANR	3934696	ArgumentList	NULL		3934635	1					
ANR	3934697	Argument	NULL		3934635	0					
ANR	3934698	Identifier	NULL		3934635	0					
ANR	3934699	Argument	ZEND_GOTO		3934635	1					
ANR	3934700	Identifier	ZEND_GOTO		3934635	0					
ANR	3934701	Argument	NULL		3934635	2					
ANR	3934702	Identifier	NULL		3934635	0					
ANR	3934703	Argument	& label_node		3934635	3					
ANR	3934704	UnaryOperationExpression	& label_node		3934635	0					
ANR	3934705	UnaryOperator	&		3934635	0					
ANR	3934706	Identifier	label_node		3934635	1					
ANR	3934707	ExpressionStatement	opline -> op1 . num = get_next_op_number ( CG ( active_op_array ) ) - opnum_start - 1	3752:1:108848:108923	3934635	7	True				
ANR	3934708	AssignmentExpression	opline -> op1 . num = get_next_op_number ( CG ( active_op_array ) ) - opnum_start - 1		3934635	0		=			
ANR	3934709	MemberAccess	opline -> op1 . num		3934635	0					
ANR	3934710	PtrMemberAccess	opline -> op1		3934635	0					
ANR	3934711	Identifier	opline		3934635	0					
ANR	3934712	Identifier	op1		3934635	1					
ANR	3934713	Identifier	num		3934635	1					
ANR	3934714	AdditiveExpression	get_next_op_number ( CG ( active_op_array ) ) - opnum_start - 1		3934635	1		-			
ANR	3934715	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3934635	0					
ANR	3934716	Callee	get_next_op_number		3934635	0					
ANR	3934717	Identifier	get_next_op_number		3934635	0					
ANR	3934718	ArgumentList	CG ( active_op_array )		3934635	1					
ANR	3934719	Argument	CG ( active_op_array )		3934635	0					
ANR	3934720	CallExpression	CG ( active_op_array )		3934635	0					
ANR	3934721	Callee	CG		3934635	0					
ANR	3934722	Identifier	CG		3934635	0					
ANR	3934723	ArgumentList	active_op_array		3934635	1					
ANR	3934724	Argument	active_op_array		3934635	0					
ANR	3934725	Identifier	active_op_array		3934635	0					
ANR	3934726	AdditiveExpression	opnum_start - 1		3934635	1		-			
ANR	3934727	Identifier	opnum_start		3934635	0					
ANR	3934728	PrimaryExpression	1		3934635	1					
ANR	3934729	ExpressionStatement	opline -> extended_value = CG ( context ) . current_brk_cont	3753:1:108926:108979	3934635	8	True				
ANR	3934730	AssignmentExpression	opline -> extended_value = CG ( context ) . current_brk_cont		3934635	0		=			
ANR	3934731	PtrMemberAccess	opline -> extended_value		3934635	0					
ANR	3934732	Identifier	opline		3934635	0					
ANR	3934733	Identifier	extended_value		3934635	1					
ANR	3934734	MemberAccess	CG ( context ) . current_brk_cont		3934635	1					
ANR	3934735	CallExpression	CG ( context )		3934635	0					
ANR	3934736	Callee	CG		3934635	0					
ANR	3934737	Identifier	CG		3934635	0					
ANR	3934738	ArgumentList	context		3934635	1					
ANR	3934739	Argument	context		3934635	0					
ANR	3934740	Identifier	context		3934635	0					
ANR	3934741	Identifier	current_brk_cont		3934635	1					
ANR	3934742	ReturnType	void		3934635	1					
ANR	3934743	Identifier	zend_compile_goto		3934635	2					
ANR	3934744	ParameterList	zend_ast * ast		3934635	3					
ANR	3934745	Parameter	zend_ast * ast	3740:23:108470:108482	3934635	0	True				
ANR	3934746	ParameterType	zend_ast *		3934635	0					
ANR	3934747	Identifier	ast		3934635	1					
ANR	3934748	CFGEntryNode	ENTRY		3934635		True				
ANR	3934749	CFGExitNode	EXIT		3934635		True				
ANR	3934750	Symbol	opline -> op1		3934635						
ANR	3934751	Symbol	label_node		3934635						
ANR	3934752	Symbol	opnum_start		3934635						
ANR	3934753	Symbol	ast		3934635						
ANR	3934754	Symbol	NULL		3934635						
ANR	3934755	Symbol	CG		3934635						
ANR	3934756	Symbol	active_op_array		3934635						
ANR	3934757	Symbol	& label_node		3934635						
ANR	3934758	Symbol	ZEND_GOTO		3934635						
ANR	3934759	Symbol	opline -> extended_value		3934635						
ANR	3934760	Symbol	* ast		3934635						
ANR	3934761	Symbol	opline		3934635						
ANR	3934762	Symbol	* opline		3934635						
ANR	3934763	Symbol	* * ast		3934635						
ANR	3934764	Symbol	context		3934635						
ANR	3934765	Symbol	* ast -> child		3934635						
ANR	3934766	Symbol	opline -> op1 . num		3934635						
ANR	3934767	Symbol	label_ast		3934635						
ANR	3934768	Symbol	ast -> child		3934635						
ANR	3934769	Symbol	get_next_op_number		3934635						
ANR	3934770	Symbol	zend_emit_op		3934635						
ANR	3934771	Symbol	CG ( context ) . current_brk_cont		3934635						
ANR	3934772	Function	zend_compile_label	3757:0:108994:109535							
ANR	3934773	FunctionDef	zend_compile_label (zend_ast * ast)		3934772	0					
ANR	3934774	CompoundStatement		3758:0:109043:109535	3934772	0					
ANR	3934775	IdentifierDeclStatement	zend_string * label = zend_ast_get_str ( ast -> child [ 0 ] ) ;	3759:1:109046:109098	3934772	0	True				
ANR	3934776	IdentifierDecl	* label = zend_ast_get_str ( ast -> child [ 0 ] )		3934772	0					
ANR	3934777	IdentifierDeclType	zend_string *		3934772	0					
ANR	3934778	Identifier	label		3934772	1					
ANR	3934779	AssignmentExpression	* label = zend_ast_get_str ( ast -> child [ 0 ] )		3934772	2		=			
ANR	3934780	Identifier	label		3934772	0					
ANR	3934781	CallExpression	zend_ast_get_str ( ast -> child [ 0 ] )		3934772	1					
ANR	3934782	Callee	zend_ast_get_str		3934772	0					
ANR	3934783	Identifier	zend_ast_get_str		3934772	0					
ANR	3934784	ArgumentList	ast -> child [ 0 ]		3934772	1					
ANR	3934785	Argument	ast -> child [ 0 ]		3934772	0					
ANR	3934786	ArrayIndexing	ast -> child [ 0 ]		3934772	0					
ANR	3934787	PtrMemberAccess	ast -> child		3934772	0					
ANR	3934788	Identifier	ast		3934772	0					
ANR	3934789	Identifier	child		3934772	1					
ANR	3934790	PrimaryExpression	0		3934772	1					
ANR	3934791	IdentifierDeclStatement	zend_label dest ;	3760:1:109101:109116	3934772	1	True				
ANR	3934792	IdentifierDecl	dest		3934772	0					
ANR	3934793	IdentifierDeclType	zend_label		3934772	0					
ANR	3934794	Identifier	dest		3934772	1					
ANR	3934795	IfStatement	if ( ! CG ( context ) . labels )		3934772	2					
ANR	3934796	Condition	! CG ( context ) . labels	3762:5:109124:109142	3934772	0	True				
ANR	3934797	UnaryOperationExpression	! CG ( context ) . labels		3934772	0					
ANR	3934798	UnaryOperator	!		3934772	0					
ANR	3934799	MemberAccess	CG ( context ) . labels		3934772	1					
ANR	3934800	CallExpression	CG ( context )		3934772	0					
ANR	3934801	Callee	CG		3934772	0					
ANR	3934802	Identifier	CG		3934772	0					
ANR	3934803	ArgumentList	context		3934772	1					
ANR	3934804	Argument	context		3934772	0					
ANR	3934805	Identifier	context		3934772	0					
ANR	3934806	Identifier	labels		3934772	1					
ANR	3934807	CompoundStatement		5:26:101:101	3934772	1					
ANR	3934808	ExpressionStatement	ALLOC_HASHTABLE ( CG ( context ) . labels )	3763:2:109149:109184	3934772	0	True				
ANR	3934809	CallExpression	ALLOC_HASHTABLE ( CG ( context ) . labels )		3934772	0					
ANR	3934810	Callee	ALLOC_HASHTABLE		3934772	0					
ANR	3934811	Identifier	ALLOC_HASHTABLE		3934772	0					
ANR	3934812	ArgumentList	CG ( context ) . labels		3934772	1					
ANR	3934813	Argument	CG ( context ) . labels		3934772	0					
ANR	3934814	MemberAccess	CG ( context ) . labels		3934772	0					
ANR	3934815	CallExpression	CG ( context )		3934772	0					
ANR	3934816	Callee	CG		3934772	0					
ANR	3934817	Identifier	CG		3934772	0					
ANR	3934818	ArgumentList	context		3934772	1					
ANR	3934819	Argument	context		3934772	0					
ANR	3934820	Identifier	context		3934772	0					
ANR	3934821	Identifier	labels		3934772	1					
ANR	3934822	ExpressionStatement	"zend_hash_init ( CG ( context ) . labels , 8 , NULL , label_ptr_dtor , 0 )"	3764:2:109188:109250	3934772	1	True				
ANR	3934823	CallExpression	"zend_hash_init ( CG ( context ) . labels , 8 , NULL , label_ptr_dtor , 0 )"		3934772	0					
ANR	3934824	Callee	zend_hash_init		3934772	0					
ANR	3934825	Identifier	zend_hash_init		3934772	0					
ANR	3934826	ArgumentList	CG ( context ) . labels		3934772	1					
ANR	3934827	Argument	CG ( context ) . labels		3934772	0					
ANR	3934828	MemberAccess	CG ( context ) . labels		3934772	0					
ANR	3934829	CallExpression	CG ( context )		3934772	0					
ANR	3934830	Callee	CG		3934772	0					
ANR	3934831	Identifier	CG		3934772	0					
ANR	3934832	ArgumentList	context		3934772	1					
ANR	3934833	Argument	context		3934772	0					
ANR	3934834	Identifier	context		3934772	0					
ANR	3934835	Identifier	labels		3934772	1					
ANR	3934836	Argument	8		3934772	1					
ANR	3934837	PrimaryExpression	8		3934772	0					
ANR	3934838	Argument	NULL		3934772	2					
ANR	3934839	Identifier	NULL		3934772	0					
ANR	3934840	Argument	label_ptr_dtor		3934772	3					
ANR	3934841	Identifier	label_ptr_dtor		3934772	0					
ANR	3934842	Argument	0		3934772	4					
ANR	3934843	PrimaryExpression	0		3934772	0					
ANR	3934844	ExpressionStatement	dest . brk_cont = CG ( context ) . current_brk_cont	3767:1:109257:109301	3934772	3	True				
ANR	3934845	AssignmentExpression	dest . brk_cont = CG ( context ) . current_brk_cont		3934772	0		=			
ANR	3934846	MemberAccess	dest . brk_cont		3934772	0					
ANR	3934847	Identifier	dest		3934772	0					
ANR	3934848	Identifier	brk_cont		3934772	1					
ANR	3934849	MemberAccess	CG ( context ) . current_brk_cont		3934772	1					
ANR	3934850	CallExpression	CG ( context )		3934772	0					
ANR	3934851	Callee	CG		3934772	0					
ANR	3934852	Identifier	CG		3934772	0					
ANR	3934853	ArgumentList	context		3934772	1					
ANR	3934854	Argument	context		3934772	0					
ANR	3934855	Identifier	context		3934772	0					
ANR	3934856	Identifier	current_brk_cont		3934772	1					
ANR	3934857	ExpressionStatement	dest . opline_num = get_next_op_number ( CG ( active_op_array ) )	3768:1:109304:109361	3934772	4	True				
ANR	3934858	AssignmentExpression	dest . opline_num = get_next_op_number ( CG ( active_op_array ) )		3934772	0		=			
ANR	3934859	MemberAccess	dest . opline_num		3934772	0					
ANR	3934860	Identifier	dest		3934772	0					
ANR	3934861	Identifier	opline_num		3934772	1					
ANR	3934862	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3934772	1					
ANR	3934863	Callee	get_next_op_number		3934772	0					
ANR	3934864	Identifier	get_next_op_number		3934772	0					
ANR	3934865	ArgumentList	CG ( active_op_array )		3934772	1					
ANR	3934866	Argument	CG ( active_op_array )		3934772	0					
ANR	3934867	CallExpression	CG ( active_op_array )		3934772	0					
ANR	3934868	Callee	CG		3934772	0					
ANR	3934869	Identifier	CG		3934772	0					
ANR	3934870	ArgumentList	active_op_array		3934772	1					
ANR	3934871	Argument	active_op_array		3934772	0					
ANR	3934872	Identifier	active_op_array		3934772	0					
ANR	3934873	IfStatement	"if ( ! zend_hash_add_mem ( CG ( context ) . labels , label , & dest , sizeof ( zend_label ) ) )"		3934772	5					
ANR	3934874	Condition	"! zend_hash_add_mem ( CG ( context ) . labels , label , & dest , sizeof ( zend_label ) )"	3770:5:109369:109440	3934772	0	True				
ANR	3934875	UnaryOperationExpression	"! zend_hash_add_mem ( CG ( context ) . labels , label , & dest , sizeof ( zend_label ) )"		3934772	0					
ANR	3934876	UnaryOperator	!		3934772	0					
ANR	3934877	CallExpression	"zend_hash_add_mem ( CG ( context ) . labels , label , & dest , sizeof ( zend_label ) )"		3934772	1					
ANR	3934878	Callee	zend_hash_add_mem		3934772	0					
ANR	3934879	Identifier	zend_hash_add_mem		3934772	0					
ANR	3934880	ArgumentList	CG ( context ) . labels		3934772	1					
ANR	3934881	Argument	CG ( context ) . labels		3934772	0					
ANR	3934882	MemberAccess	CG ( context ) . labels		3934772	0					
ANR	3934883	CallExpression	CG ( context )		3934772	0					
ANR	3934884	Callee	CG		3934772	0					
ANR	3934885	Identifier	CG		3934772	0					
ANR	3934886	ArgumentList	context		3934772	1					
ANR	3934887	Argument	context		3934772	0					
ANR	3934888	Identifier	context		3934772	0					
ANR	3934889	Identifier	labels		3934772	1					
ANR	3934890	Argument	label		3934772	1					
ANR	3934891	Identifier	label		3934772	0					
ANR	3934892	Argument	& dest		3934772	2					
ANR	3934893	UnaryOperationExpression	& dest		3934772	0					
ANR	3934894	UnaryOperator	&		3934772	0					
ANR	3934895	Identifier	dest		3934772	1					
ANR	3934896	Argument	sizeof ( zend_label )		3934772	3					
ANR	3934897	SizeofExpression	sizeof ( zend_label )		3934772	0					
ANR	3934898	Sizeof	sizeof		3934772	0					
ANR	3934899	SizeofOperand	zend_label		3934772	1					
ANR	3934900	CompoundStatement		13:79:399:399	3934772	1					
ANR	3934901	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Label '%s' already defined"" , ZSTR_VAL ( label ) )"	3771:2:109447:109530	3934772	0	True				
ANR	3934902	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Label '%s' already defined"" , ZSTR_VAL ( label ) )"		3934772	0					
ANR	3934903	Callee	zend_error_noreturn		3934772	0					
ANR	3934904	Identifier	zend_error_noreturn		3934772	0					
ANR	3934905	ArgumentList	E_COMPILE_ERROR		3934772	1					
ANR	3934906	Argument	E_COMPILE_ERROR		3934772	0					
ANR	3934907	Identifier	E_COMPILE_ERROR		3934772	0					
ANR	3934908	Argument	"""Label '%s' already defined"""		3934772	1					
ANR	3934909	PrimaryExpression	"""Label '%s' already defined"""		3934772	0					
ANR	3934910	Argument	ZSTR_VAL ( label )		3934772	2					
ANR	3934911	CallExpression	ZSTR_VAL ( label )		3934772	0					
ANR	3934912	Callee	ZSTR_VAL		3934772	0					
ANR	3934913	Identifier	ZSTR_VAL		3934772	0					
ANR	3934914	ArgumentList	label		3934772	1					
ANR	3934915	Argument	label		3934772	0					
ANR	3934916	Identifier	label		3934772	0					
ANR	3934917	ReturnType	void		3934772	1					
ANR	3934918	Identifier	zend_compile_label		3934772	2					
ANR	3934919	ParameterList	zend_ast * ast		3934772	3					
ANR	3934920	Parameter	zend_ast * ast	3757:24:109018:109030	3934772	0	True				
ANR	3934921	ParameterType	zend_ast *		3934772	0					
ANR	3934922	Identifier	ast		3934772	1					
ANR	3934923	CFGEntryNode	ENTRY		3934772		True				
ANR	3934924	CFGExitNode	EXIT		3934772		True				
ANR	3934925	Symbol	zend_hash_add_mem		3934772						
ANR	3934926	Symbol	ast		3934772						
ANR	3934927	Symbol	NULL		3934772						
ANR	3934928	Symbol	CG		3934772						
ANR	3934929	Symbol	dest . brk_cont		3934772						
ANR	3934930	Symbol	active_op_array		3934772						
ANR	3934931	Symbol	E_COMPILE_ERROR		3934772						
ANR	3934932	Symbol	label		3934772						
ANR	3934933	Symbol	dest		3934772						
ANR	3934934	Symbol	dest . opline_num		3934772						
ANR	3934935	Symbol	ZSTR_VAL		3934772						
ANR	3934936	Symbol	zend_ast_get_str		3934772						
ANR	3934937	Symbol	* ast		3934772						
ANR	3934938	Symbol	label_ptr_dtor		3934772						
ANR	3934939	Symbol	* * ast		3934772						
ANR	3934940	Symbol	& dest		3934772						
ANR	3934941	Symbol	context		3934772						
ANR	3934942	Symbol	* ast -> child		3934772						
ANR	3934943	Symbol	ast -> child		3934772						
ANR	3934944	Symbol	CG ( context ) . labels		3934772						
ANR	3934945	Symbol	get_next_op_number		3934772						
ANR	3934946	Symbol	CG ( context ) . current_brk_cont		3934772						
ANR	3934947	Function	zend_compile_while	3776:0:109548:110128							
ANR	3934948	FunctionDef	zend_compile_while (zend_ast * ast)		3934947	0					
ANR	3934949	CompoundStatement		3777:0:109597:110128	3934947	0					
ANR	3934950	IdentifierDeclStatement	zend_ast * cond_ast = ast -> child [ 0 ] ;	3778:1:109600:109634	3934947	0	True				
ANR	3934951	IdentifierDecl	* cond_ast = ast -> child [ 0 ]		3934947	0					
ANR	3934952	IdentifierDeclType	zend_ast *		3934947	0					
ANR	3934953	Identifier	cond_ast		3934947	1					
ANR	3934954	AssignmentExpression	* cond_ast = ast -> child [ 0 ]		3934947	2		=			
ANR	3934955	Identifier	cond_ast		3934947	0					
ANR	3934956	ArrayIndexing	ast -> child [ 0 ]		3934947	1					
ANR	3934957	PtrMemberAccess	ast -> child		3934947	0					
ANR	3934958	Identifier	ast		3934947	0					
ANR	3934959	Identifier	child		3934947	1					
ANR	3934960	PrimaryExpression	0		3934947	1					
ANR	3934961	IdentifierDeclStatement	zend_ast * stmt_ast = ast -> child [ 1 ] ;	3779:1:109637:109671	3934947	1	True				
ANR	3934962	IdentifierDecl	* stmt_ast = ast -> child [ 1 ]		3934947	0					
ANR	3934963	IdentifierDeclType	zend_ast *		3934947	0					
ANR	3934964	Identifier	stmt_ast		3934947	1					
ANR	3934965	AssignmentExpression	* stmt_ast = ast -> child [ 1 ]		3934947	2		=			
ANR	3934966	Identifier	stmt_ast		3934947	0					
ANR	3934967	ArrayIndexing	ast -> child [ 1 ]		3934947	1					
ANR	3934968	PtrMemberAccess	ast -> child		3934947	0					
ANR	3934969	Identifier	ast		3934947	0					
ANR	3934970	Identifier	child		3934947	1					
ANR	3934971	PrimaryExpression	1		3934947	1					
ANR	3934972	IdentifierDeclStatement	znode cond_node ;	3780:1:109674:109689	3934947	2	True				
ANR	3934973	IdentifierDecl	cond_node		3934947	0					
ANR	3934974	IdentifierDeclType	znode		3934947	0					
ANR	3934975	Identifier	cond_node		3934947	1					
ANR	3934976	IdentifierDeclStatement	"uint32_t opnum_start , opnum_jmp , opnum_cond ;"	3781:1:109692:109735	3934947	3	True				
ANR	3934977	IdentifierDecl	opnum_start		3934947	0					
ANR	3934978	IdentifierDeclType	uint32_t		3934947	0					
ANR	3934979	Identifier	opnum_start		3934947	1					
ANR	3934980	IdentifierDecl	opnum_jmp		3934947	1					
ANR	3934981	IdentifierDeclType	uint32_t		3934947	0					
ANR	3934982	Identifier	opnum_jmp		3934947	1					
ANR	3934983	IdentifierDecl	opnum_cond		3934947	2					
ANR	3934984	IdentifierDeclType	uint32_t		3934947	0					
ANR	3934985	Identifier	opnum_cond		3934947	1					
ANR	3934986	ExpressionStatement	opnum_jmp = zend_emit_jump ( 0 )	3783:1:109739:109768	3934947	4	True				
ANR	3934987	AssignmentExpression	opnum_jmp = zend_emit_jump ( 0 )		3934947	0		=			
ANR	3934988	Identifier	opnum_jmp		3934947	0					
ANR	3934989	CallExpression	zend_emit_jump ( 0 )		3934947	1					
ANR	3934990	Callee	zend_emit_jump		3934947	0					
ANR	3934991	Identifier	zend_emit_jump		3934947	0					
ANR	3934992	ArgumentList	0		3934947	1					
ANR	3934993	Argument	0		3934947	0					
ANR	3934994	PrimaryExpression	0		3934947	0					
ANR	3934995	ExpressionStatement	"zend_begin_loop ( ZEND_NOP , NULL )"	3785:1:109772:109803	3934947	5	True				
ANR	3934996	CallExpression	"zend_begin_loop ( ZEND_NOP , NULL )"		3934947	0					
ANR	3934997	Callee	zend_begin_loop		3934947	0					
ANR	3934998	Identifier	zend_begin_loop		3934947	0					
ANR	3934999	ArgumentList	ZEND_NOP		3934947	1					
ANR	3935000	Argument	ZEND_NOP		3934947	0					
ANR	3935001	Identifier	ZEND_NOP		3934947	0					
ANR	3935002	Argument	NULL		3934947	1					
ANR	3935003	Identifier	NULL		3934947	0					
ANR	3935004	ExpressionStatement	opnum_start = get_next_op_number ( CG ( active_op_array ) )	3787:1:109807:109860	3934947	6	True				
ANR	3935005	AssignmentExpression	opnum_start = get_next_op_number ( CG ( active_op_array ) )		3934947	0		=			
ANR	3935006	Identifier	opnum_start		3934947	0					
ANR	3935007	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3934947	1					
ANR	3935008	Callee	get_next_op_number		3934947	0					
ANR	3935009	Identifier	get_next_op_number		3934947	0					
ANR	3935010	ArgumentList	CG ( active_op_array )		3934947	1					
ANR	3935011	Argument	CG ( active_op_array )		3934947	0					
ANR	3935012	CallExpression	CG ( active_op_array )		3934947	0					
ANR	3935013	Callee	CG		3934947	0					
ANR	3935014	Identifier	CG		3934947	0					
ANR	3935015	ArgumentList	active_op_array		3934947	1					
ANR	3935016	Argument	active_op_array		3934947	0					
ANR	3935017	Identifier	active_op_array		3934947	0					
ANR	3935018	ExpressionStatement	zend_compile_stmt ( stmt_ast )	3788:1:109863:109890	3934947	7	True				
ANR	3935019	CallExpression	zend_compile_stmt ( stmt_ast )		3934947	0					
ANR	3935020	Callee	zend_compile_stmt		3934947	0					
ANR	3935021	Identifier	zend_compile_stmt		3934947	0					
ANR	3935022	ArgumentList	stmt_ast		3934947	1					
ANR	3935023	Argument	stmt_ast		3934947	0					
ANR	3935024	Identifier	stmt_ast		3934947	0					
ANR	3935025	ExpressionStatement	opnum_cond = get_next_op_number ( CG ( active_op_array ) )	3790:1:109894:109946	3934947	8	True				
ANR	3935026	AssignmentExpression	opnum_cond = get_next_op_number ( CG ( active_op_array ) )		3934947	0		=			
ANR	3935027	Identifier	opnum_cond		3934947	0					
ANR	3935028	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3934947	1					
ANR	3935029	Callee	get_next_op_number		3934947	0					
ANR	3935030	Identifier	get_next_op_number		3934947	0					
ANR	3935031	ArgumentList	CG ( active_op_array )		3934947	1					
ANR	3935032	Argument	CG ( active_op_array )		3934947	0					
ANR	3935033	CallExpression	CG ( active_op_array )		3934947	0					
ANR	3935034	Callee	CG		3934947	0					
ANR	3935035	Identifier	CG		3934947	0					
ANR	3935036	ArgumentList	active_op_array		3934947	1					
ANR	3935037	Argument	active_op_array		3934947	0					
ANR	3935038	Identifier	active_op_array		3934947	0					
ANR	3935039	ExpressionStatement	"zend_update_jump_target ( opnum_jmp , opnum_cond )"	3791:1:109949:109995	3934947	9	True				
ANR	3935040	CallExpression	"zend_update_jump_target ( opnum_jmp , opnum_cond )"		3934947	0					
ANR	3935041	Callee	zend_update_jump_target		3934947	0					
ANR	3935042	Identifier	zend_update_jump_target		3934947	0					
ANR	3935043	ArgumentList	opnum_jmp		3934947	1					
ANR	3935044	Argument	opnum_jmp		3934947	0					
ANR	3935045	Identifier	opnum_jmp		3934947	0					
ANR	3935046	Argument	opnum_cond		3934947	1					
ANR	3935047	Identifier	opnum_cond		3934947	0					
ANR	3935048	ExpressionStatement	"zend_compile_expr ( & cond_node , cond_ast )"	3792:1:109998:110037	3934947	10	True				
ANR	3935049	CallExpression	"zend_compile_expr ( & cond_node , cond_ast )"		3934947	0					
ANR	3935050	Callee	zend_compile_expr		3934947	0					
ANR	3935051	Identifier	zend_compile_expr		3934947	0					
ANR	3935052	ArgumentList	& cond_node		3934947	1					
ANR	3935053	Argument	& cond_node		3934947	0					
ANR	3935054	UnaryOperationExpression	& cond_node		3934947	0					
ANR	3935055	UnaryOperator	&		3934947	0					
ANR	3935056	Identifier	cond_node		3934947	1					
ANR	3935057	Argument	cond_ast		3934947	1					
ANR	3935058	Identifier	cond_ast		3934947	0					
ANR	3935059	ExpressionStatement	"zend_emit_cond_jump ( ZEND_JMPNZ , & cond_node , opnum_start )"	3794:1:110041:110097	3934947	11	True				
ANR	3935060	CallExpression	"zend_emit_cond_jump ( ZEND_JMPNZ , & cond_node , opnum_start )"		3934947	0					
ANR	3935061	Callee	zend_emit_cond_jump		3934947	0					
ANR	3935062	Identifier	zend_emit_cond_jump		3934947	0					
ANR	3935063	ArgumentList	ZEND_JMPNZ		3934947	1					
ANR	3935064	Argument	ZEND_JMPNZ		3934947	0					
ANR	3935065	Identifier	ZEND_JMPNZ		3934947	0					
ANR	3935066	Argument	& cond_node		3934947	1					
ANR	3935067	UnaryOperationExpression	& cond_node		3934947	0					
ANR	3935068	UnaryOperator	&		3934947	0					
ANR	3935069	Identifier	cond_node		3934947	1					
ANR	3935070	Argument	opnum_start		3934947	2					
ANR	3935071	Identifier	opnum_start		3934947	0					
ANR	3935072	ExpressionStatement	zend_end_loop ( opnum_cond )	3796:1:110101:110126	3934947	12	True				
ANR	3935073	CallExpression	zend_end_loop ( opnum_cond )		3934947	0					
ANR	3935074	Callee	zend_end_loop		3934947	0					
ANR	3935075	Identifier	zend_end_loop		3934947	0					
ANR	3935076	ArgumentList	opnum_cond		3934947	1					
ANR	3935077	Argument	opnum_cond		3934947	0					
ANR	3935078	Identifier	opnum_cond		3934947	0					
ANR	3935079	ReturnType	void		3934947	1					
ANR	3935080	Identifier	zend_compile_while		3934947	2					
ANR	3935081	ParameterList	zend_ast * ast		3934947	3					
ANR	3935082	Parameter	zend_ast * ast	3776:24:109572:109584	3934947	0	True				
ANR	3935083	ParameterType	zend_ast *		3934947	0					
ANR	3935084	Identifier	ast		3934947	1					
ANR	3935085	CFGEntryNode	ENTRY		3934947		True				
ANR	3935086	CFGExitNode	EXIT		3934947		True				
ANR	3935087	Symbol	zend_emit_jump		3934947						
ANR	3935088	Symbol	ZEND_JMPNZ		3934947						
ANR	3935089	Symbol	stmt_ast		3934947						
ANR	3935090	Symbol	opnum_jmp		3934947						
ANR	3935091	Symbol	opnum_start		3934947						
ANR	3935092	Symbol	ast		3934947						
ANR	3935093	Symbol	NULL		3934947						
ANR	3935094	Symbol	CG		3934947						
ANR	3935095	Symbol	cond_node		3934947						
ANR	3935096	Symbol	active_op_array		3934947						
ANR	3935097	Symbol	ZEND_NOP		3934947						
ANR	3935098	Symbol	cond_ast		3934947						
ANR	3935099	Symbol	opnum_cond		3934947						
ANR	3935100	Symbol	* ast		3934947						
ANR	3935101	Symbol	* * ast		3934947						
ANR	3935102	Symbol	* ast -> child		3934947						
ANR	3935103	Symbol	ast -> child		3934947						
ANR	3935104	Symbol	get_next_op_number		3934947						
ANR	3935105	Symbol	& cond_node		3934947						
ANR	3935106	Function	zend_compile_do_while	3800:0:110141:110632							
ANR	3935107	FunctionDef	zend_compile_do_while (zend_ast * ast)		3935106	0					
ANR	3935108	CompoundStatement		3801:0:110193:110632	3935106	0					
ANR	3935109	IdentifierDeclStatement	zend_ast * stmt_ast = ast -> child [ 0 ] ;	3802:1:110196:110230	3935106	0	True				
ANR	3935110	IdentifierDecl	* stmt_ast = ast -> child [ 0 ]		3935106	0					
ANR	3935111	IdentifierDeclType	zend_ast *		3935106	0					
ANR	3935112	Identifier	stmt_ast		3935106	1					
ANR	3935113	AssignmentExpression	* stmt_ast = ast -> child [ 0 ]		3935106	2		=			
ANR	3935114	Identifier	stmt_ast		3935106	0					
ANR	3935115	ArrayIndexing	ast -> child [ 0 ]		3935106	1					
ANR	3935116	PtrMemberAccess	ast -> child		3935106	0					
ANR	3935117	Identifier	ast		3935106	0					
ANR	3935118	Identifier	child		3935106	1					
ANR	3935119	PrimaryExpression	0		3935106	1					
ANR	3935120	IdentifierDeclStatement	zend_ast * cond_ast = ast -> child [ 1 ] ;	3803:1:110233:110267	3935106	1	True				
ANR	3935121	IdentifierDecl	* cond_ast = ast -> child [ 1 ]		3935106	0					
ANR	3935122	IdentifierDeclType	zend_ast *		3935106	0					
ANR	3935123	Identifier	cond_ast		3935106	1					
ANR	3935124	AssignmentExpression	* cond_ast = ast -> child [ 1 ]		3935106	2		=			
ANR	3935125	Identifier	cond_ast		3935106	0					
ANR	3935126	ArrayIndexing	ast -> child [ 1 ]		3935106	1					
ANR	3935127	PtrMemberAccess	ast -> child		3935106	0					
ANR	3935128	Identifier	ast		3935106	0					
ANR	3935129	Identifier	child		3935106	1					
ANR	3935130	PrimaryExpression	1		3935106	1					
ANR	3935131	IdentifierDeclStatement	znode cond_node ;	3805:1:110271:110286	3935106	2	True				
ANR	3935132	IdentifierDecl	cond_node		3935106	0					
ANR	3935133	IdentifierDeclType	znode		3935106	0					
ANR	3935134	Identifier	cond_node		3935106	1					
ANR	3935135	IdentifierDeclStatement	"uint32_t opnum_start , opnum_cond ;"	3806:1:110289:110321	3935106	3	True				
ANR	3935136	IdentifierDecl	opnum_start		3935106	0					
ANR	3935137	IdentifierDeclType	uint32_t		3935106	0					
ANR	3935138	Identifier	opnum_start		3935106	1					
ANR	3935139	IdentifierDecl	opnum_cond		3935106	1					
ANR	3935140	IdentifierDeclType	uint32_t		3935106	0					
ANR	3935141	Identifier	opnum_cond		3935106	1					
ANR	3935142	ExpressionStatement	"zend_begin_loop ( ZEND_NOP , NULL )"	3808:1:110325:110356	3935106	4	True				
ANR	3935143	CallExpression	"zend_begin_loop ( ZEND_NOP , NULL )"		3935106	0					
ANR	3935144	Callee	zend_begin_loop		3935106	0					
ANR	3935145	Identifier	zend_begin_loop		3935106	0					
ANR	3935146	ArgumentList	ZEND_NOP		3935106	1					
ANR	3935147	Argument	ZEND_NOP		3935106	0					
ANR	3935148	Identifier	ZEND_NOP		3935106	0					
ANR	3935149	Argument	NULL		3935106	1					
ANR	3935150	Identifier	NULL		3935106	0					
ANR	3935151	ExpressionStatement	opnum_start = get_next_op_number ( CG ( active_op_array ) )	3810:1:110360:110413	3935106	5	True				
ANR	3935152	AssignmentExpression	opnum_start = get_next_op_number ( CG ( active_op_array ) )		3935106	0		=			
ANR	3935153	Identifier	opnum_start		3935106	0					
ANR	3935154	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935106	1					
ANR	3935155	Callee	get_next_op_number		3935106	0					
ANR	3935156	Identifier	get_next_op_number		3935106	0					
ANR	3935157	ArgumentList	CG ( active_op_array )		3935106	1					
ANR	3935158	Argument	CG ( active_op_array )		3935106	0					
ANR	3935159	CallExpression	CG ( active_op_array )		3935106	0					
ANR	3935160	Callee	CG		3935106	0					
ANR	3935161	Identifier	CG		3935106	0					
ANR	3935162	ArgumentList	active_op_array		3935106	1					
ANR	3935163	Argument	active_op_array		3935106	0					
ANR	3935164	Identifier	active_op_array		3935106	0					
ANR	3935165	ExpressionStatement	zend_compile_stmt ( stmt_ast )	3811:1:110416:110443	3935106	6	True				
ANR	3935166	CallExpression	zend_compile_stmt ( stmt_ast )		3935106	0					
ANR	3935167	Callee	zend_compile_stmt		3935106	0					
ANR	3935168	Identifier	zend_compile_stmt		3935106	0					
ANR	3935169	ArgumentList	stmt_ast		3935106	1					
ANR	3935170	Argument	stmt_ast		3935106	0					
ANR	3935171	Identifier	stmt_ast		3935106	0					
ANR	3935172	ExpressionStatement	opnum_cond = get_next_op_number ( CG ( active_op_array ) )	3813:1:110447:110499	3935106	7	True				
ANR	3935173	AssignmentExpression	opnum_cond = get_next_op_number ( CG ( active_op_array ) )		3935106	0		=			
ANR	3935174	Identifier	opnum_cond		3935106	0					
ANR	3935175	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935106	1					
ANR	3935176	Callee	get_next_op_number		3935106	0					
ANR	3935177	Identifier	get_next_op_number		3935106	0					
ANR	3935178	ArgumentList	CG ( active_op_array )		3935106	1					
ANR	3935179	Argument	CG ( active_op_array )		3935106	0					
ANR	3935180	CallExpression	CG ( active_op_array )		3935106	0					
ANR	3935181	Callee	CG		3935106	0					
ANR	3935182	Identifier	CG		3935106	0					
ANR	3935183	ArgumentList	active_op_array		3935106	1					
ANR	3935184	Argument	active_op_array		3935106	0					
ANR	3935185	Identifier	active_op_array		3935106	0					
ANR	3935186	ExpressionStatement	"zend_compile_expr ( & cond_node , cond_ast )"	3814:1:110502:110541	3935106	8	True				
ANR	3935187	CallExpression	"zend_compile_expr ( & cond_node , cond_ast )"		3935106	0					
ANR	3935188	Callee	zend_compile_expr		3935106	0					
ANR	3935189	Identifier	zend_compile_expr		3935106	0					
ANR	3935190	ArgumentList	& cond_node		3935106	1					
ANR	3935191	Argument	& cond_node		3935106	0					
ANR	3935192	UnaryOperationExpression	& cond_node		3935106	0					
ANR	3935193	UnaryOperator	&		3935106	0					
ANR	3935194	Identifier	cond_node		3935106	1					
ANR	3935195	Argument	cond_ast		3935106	1					
ANR	3935196	Identifier	cond_ast		3935106	0					
ANR	3935197	ExpressionStatement	"zend_emit_cond_jump ( ZEND_JMPNZ , & cond_node , opnum_start )"	3816:1:110545:110601	3935106	9	True				
ANR	3935198	CallExpression	"zend_emit_cond_jump ( ZEND_JMPNZ , & cond_node , opnum_start )"		3935106	0					
ANR	3935199	Callee	zend_emit_cond_jump		3935106	0					
ANR	3935200	Identifier	zend_emit_cond_jump		3935106	0					
ANR	3935201	ArgumentList	ZEND_JMPNZ		3935106	1					
ANR	3935202	Argument	ZEND_JMPNZ		3935106	0					
ANR	3935203	Identifier	ZEND_JMPNZ		3935106	0					
ANR	3935204	Argument	& cond_node		3935106	1					
ANR	3935205	UnaryOperationExpression	& cond_node		3935106	0					
ANR	3935206	UnaryOperator	&		3935106	0					
ANR	3935207	Identifier	cond_node		3935106	1					
ANR	3935208	Argument	opnum_start		3935106	2					
ANR	3935209	Identifier	opnum_start		3935106	0					
ANR	3935210	ExpressionStatement	zend_end_loop ( opnum_cond )	3818:1:110605:110630	3935106	10	True				
ANR	3935211	CallExpression	zend_end_loop ( opnum_cond )		3935106	0					
ANR	3935212	Callee	zend_end_loop		3935106	0					
ANR	3935213	Identifier	zend_end_loop		3935106	0					
ANR	3935214	ArgumentList	opnum_cond		3935106	1					
ANR	3935215	Argument	opnum_cond		3935106	0					
ANR	3935216	Identifier	opnum_cond		3935106	0					
ANR	3935217	ReturnType	void		3935106	1					
ANR	3935218	Identifier	zend_compile_do_while		3935106	2					
ANR	3935219	ParameterList	zend_ast * ast		3935106	3					
ANR	3935220	Parameter	zend_ast * ast	3800:27:110168:110180	3935106	0	True				
ANR	3935221	ParameterType	zend_ast *		3935106	0					
ANR	3935222	Identifier	ast		3935106	1					
ANR	3935223	CFGEntryNode	ENTRY		3935106		True				
ANR	3935224	CFGExitNode	EXIT		3935106		True				
ANR	3935225	Symbol	ZEND_JMPNZ		3935106						
ANR	3935226	Symbol	stmt_ast		3935106						
ANR	3935227	Symbol	opnum_start		3935106						
ANR	3935228	Symbol	ast		3935106						
ANR	3935229	Symbol	NULL		3935106						
ANR	3935230	Symbol	CG		3935106						
ANR	3935231	Symbol	cond_node		3935106						
ANR	3935232	Symbol	active_op_array		3935106						
ANR	3935233	Symbol	ZEND_NOP		3935106						
ANR	3935234	Symbol	cond_ast		3935106						
ANR	3935235	Symbol	opnum_cond		3935106						
ANR	3935236	Symbol	* ast		3935106						
ANR	3935237	Symbol	* * ast		3935106						
ANR	3935238	Symbol	* ast -> child		3935106						
ANR	3935239	Symbol	ast -> child		3935106						
ANR	3935240	Symbol	get_next_op_number		3935106						
ANR	3935241	Symbol	& cond_node		3935106						
ANR	3935242	Function	zend_compile_expr_list	3822:0:110645:111019							
ANR	3935243	FunctionDef	"zend_compile_expr_list (znode * result , zend_ast * ast)"		3935242	0					
ANR	3935244	CompoundStatement		3823:0:110713:111019	3935242	0					
ANR	3935245	IdentifierDeclStatement	zend_ast_list * list ;	3824:1:110716:110735	3935242	0	True				
ANR	3935246	IdentifierDecl	* list		3935242	0					
ANR	3935247	IdentifierDeclType	zend_ast_list *		3935242	0					
ANR	3935248	Identifier	list		3935242	1					
ANR	3935249	IdentifierDeclStatement	uint32_t i ;	3825:1:110738:110748	3935242	1	True				
ANR	3935250	IdentifierDecl	i		3935242	0					
ANR	3935251	IdentifierDeclType	uint32_t		3935242	0					
ANR	3935252	Identifier	i		3935242	1					
ANR	3935253	ExpressionStatement	result -> op_type = IS_CONST	3827:1:110752:110778	3935242	2	True				
ANR	3935254	AssignmentExpression	result -> op_type = IS_CONST		3935242	0		=			
ANR	3935255	PtrMemberAccess	result -> op_type		3935242	0					
ANR	3935256	Identifier	result		3935242	0					
ANR	3935257	Identifier	op_type		3935242	1					
ANR	3935258	Identifier	IS_CONST		3935242	1					
ANR	3935259	ExpressionStatement	ZVAL_TRUE ( & result -> u . constant )	3828:1:110781:110811	3935242	3	True				
ANR	3935260	CallExpression	ZVAL_TRUE ( & result -> u . constant )		3935242	0					
ANR	3935261	Callee	ZVAL_TRUE		3935242	0					
ANR	3935262	Identifier	ZVAL_TRUE		3935242	0					
ANR	3935263	ArgumentList	& result -> u . constant		3935242	1					
ANR	3935264	Argument	& result -> u . constant		3935242	0					
ANR	3935265	UnaryOperationExpression	& result -> u . constant		3935242	0					
ANR	3935266	UnaryOperator	&		3935242	0					
ANR	3935267	MemberAccess	result -> u . constant		3935242	1					
ANR	3935268	PtrMemberAccess	result -> u		3935242	0					
ANR	3935269	Identifier	result		3935242	0					
ANR	3935270	Identifier	u		3935242	1					
ANR	3935271	Identifier	constant		3935242	1					
ANR	3935272	IfStatement	if ( ! ast )		3935242	4					
ANR	3935273	Condition	! ast	3830:5:110819:110822	3935242	0	True				
ANR	3935274	UnaryOperationExpression	! ast		3935242	0					
ANR	3935275	UnaryOperator	!		3935242	0					
ANR	3935276	Identifier	ast		3935242	1					
ANR	3935277	CompoundStatement		8:11:111:111	3935242	1					
ANR	3935278	ReturnStatement	return ;	3831:2:110829:110835	3935242	0	True				
ANR	3935279	ExpressionStatement	list = zend_ast_get_list ( ast )	3834:1:110842:110871	3935242	5	True				
ANR	3935280	AssignmentExpression	list = zend_ast_get_list ( ast )		3935242	0		=			
ANR	3935281	Identifier	list		3935242	0					
ANR	3935282	CallExpression	zend_ast_get_list ( ast )		3935242	1					
ANR	3935283	Callee	zend_ast_get_list		3935242	0					
ANR	3935284	Identifier	zend_ast_get_list		3935242	0					
ANR	3935285	ArgumentList	ast		3935242	1					
ANR	3935286	Argument	ast		3935242	0					
ANR	3935287	Identifier	ast		3935242	0					
ANR	3935288	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3935242	6					
ANR	3935289	ForInit	i = 0 ;	3835:6:110879:110884	3935242	0	True				
ANR	3935290	AssignmentExpression	i = 0		3935242	0		=			
ANR	3935291	Identifier	i		3935242	0					
ANR	3935292	PrimaryExpression	0		3935242	1					
ANR	3935293	Condition	i < list -> children	3835:13:110886:110903	3935242	1	True				
ANR	3935294	RelationalExpression	i < list -> children		3935242	0		<			
ANR	3935295	Identifier	i		3935242	0					
ANR	3935296	PtrMemberAccess	list -> children		3935242	1					
ANR	3935297	Identifier	list		3935242	0					
ANR	3935298	Identifier	children		3935242	1					
ANR	3935299	UnaryExpression	++ i	3835:33:110906:110908	3935242	2	True				
ANR	3935300	IncDec	++		3935242	0					
ANR	3935301	Identifier	i		3935242	1					
ANR	3935302	CompoundStatement		14:2:201:236	3935242	3					
ANR	3935303	IdentifierDeclStatement	zend_ast * expr_ast = list -> child [ i ] ;	3836:2:110915:110950	3935242	0	True				
ANR	3935304	IdentifierDecl	* expr_ast = list -> child [ i ]		3935242	0					
ANR	3935305	IdentifierDeclType	zend_ast *		3935242	0					
ANR	3935306	Identifier	expr_ast		3935242	1					
ANR	3935307	AssignmentExpression	* expr_ast = list -> child [ i ]		3935242	2		=			
ANR	3935308	Identifier	expr_ast		3935242	0					
ANR	3935309	ArrayIndexing	list -> child [ i ]		3935242	1					
ANR	3935310	PtrMemberAccess	list -> child		3935242	0					
ANR	3935311	Identifier	list		3935242	0					
ANR	3935312	Identifier	child		3935242	1					
ANR	3935313	Identifier	i		3935242	1					
ANR	3935314	ExpressionStatement	zend_do_free ( result )	3838:2:110955:110975	3935242	1	True				
ANR	3935315	CallExpression	zend_do_free ( result )		3935242	0					
ANR	3935316	Callee	zend_do_free		3935242	0					
ANR	3935317	Identifier	zend_do_free		3935242	0					
ANR	3935318	ArgumentList	result		3935242	1					
ANR	3935319	Argument	result		3935242	0					
ANR	3935320	Identifier	result		3935242	0					
ANR	3935321	ExpressionStatement	"zend_compile_expr ( result , expr_ast )"	3839:2:110979:111014	3935242	2	True				
ANR	3935322	CallExpression	"zend_compile_expr ( result , expr_ast )"		3935242	0					
ANR	3935323	Callee	zend_compile_expr		3935242	0					
ANR	3935324	Identifier	zend_compile_expr		3935242	0					
ANR	3935325	ArgumentList	result		3935242	1					
ANR	3935326	Argument	result		3935242	0					
ANR	3935327	Identifier	result		3935242	0					
ANR	3935328	Argument	expr_ast		3935242	1					
ANR	3935329	Identifier	expr_ast		3935242	0					
ANR	3935330	ReturnType	void		3935242	1					
ANR	3935331	Identifier	zend_compile_expr_list		3935242	2					
ANR	3935332	ParameterList	"znode * result , zend_ast * ast"		3935242	3					
ANR	3935333	Parameter	znode * result	3822:28:110673:110685	3935242	0	True				
ANR	3935334	ParameterType	znode *		3935242	0					
ANR	3935335	Identifier	result		3935242	1					
ANR	3935336	Parameter	zend_ast * ast	3822:43:110688:110700	3935242	1	True				
ANR	3935337	ParameterType	zend_ast *		3935242	0					
ANR	3935338	Identifier	ast		3935242	1					
ANR	3935339	CFGEntryNode	ENTRY		3935242		True				
ANR	3935340	CFGExitNode	EXIT		3935242		True				
ANR	3935341	Symbol	IS_CONST		3935242						
ANR	3935342	Symbol	ast		3935242						
ANR	3935343	Symbol	& result -> u		3935242						
ANR	3935344	Symbol	list -> child		3935242						
ANR	3935345	Symbol	i		3935242						
ANR	3935346	Symbol	list		3935242						
ANR	3935347	Symbol	result -> op_type		3935242						
ANR	3935348	Symbol	expr_ast		3935242						
ANR	3935349	Symbol	result -> u		3935242						
ANR	3935350	Symbol	result		3935242						
ANR	3935351	Symbol	zend_ast_get_list		3935242						
ANR	3935352	Symbol	* i		3935242						
ANR	3935353	Symbol	* * list		3935242						
ANR	3935354	Symbol	* result		3935242						
ANR	3935355	Symbol	* list		3935242						
ANR	3935356	Symbol	& result -> u . constant		3935242						
ANR	3935357	Symbol	* list -> child		3935242						
ANR	3935358	Symbol	list -> children		3935242						
ANR	3935359	Function	zend_compile_for	3844:0:111032:111841							
ANR	3935360	FunctionDef	zend_compile_for (zend_ast * ast)		3935359	0					
ANR	3935361	CompoundStatement		3845:0:111079:111841	3935359	0					
ANR	3935362	IdentifierDeclStatement	zend_ast * init_ast = ast -> child [ 0 ] ;	3846:1:111082:111116	3935359	0	True				
ANR	3935363	IdentifierDecl	* init_ast = ast -> child [ 0 ]		3935359	0					
ANR	3935364	IdentifierDeclType	zend_ast *		3935359	0					
ANR	3935365	Identifier	init_ast		3935359	1					
ANR	3935366	AssignmentExpression	* init_ast = ast -> child [ 0 ]		3935359	2		=			
ANR	3935367	Identifier	init_ast		3935359	0					
ANR	3935368	ArrayIndexing	ast -> child [ 0 ]		3935359	1					
ANR	3935369	PtrMemberAccess	ast -> child		3935359	0					
ANR	3935370	Identifier	ast		3935359	0					
ANR	3935371	Identifier	child		3935359	1					
ANR	3935372	PrimaryExpression	0		3935359	1					
ANR	3935373	IdentifierDeclStatement	zend_ast * cond_ast = ast -> child [ 1 ] ;	3847:1:111119:111153	3935359	1	True				
ANR	3935374	IdentifierDecl	* cond_ast = ast -> child [ 1 ]		3935359	0					
ANR	3935375	IdentifierDeclType	zend_ast *		3935359	0					
ANR	3935376	Identifier	cond_ast		3935359	1					
ANR	3935377	AssignmentExpression	* cond_ast = ast -> child [ 1 ]		3935359	2		=			
ANR	3935378	Identifier	cond_ast		3935359	0					
ANR	3935379	ArrayIndexing	ast -> child [ 1 ]		3935359	1					
ANR	3935380	PtrMemberAccess	ast -> child		3935359	0					
ANR	3935381	Identifier	ast		3935359	0					
ANR	3935382	Identifier	child		3935359	1					
ANR	3935383	PrimaryExpression	1		3935359	1					
ANR	3935384	IdentifierDeclStatement	zend_ast * loop_ast = ast -> child [ 2 ] ;	3848:1:111156:111190	3935359	2	True				
ANR	3935385	IdentifierDecl	* loop_ast = ast -> child [ 2 ]		3935359	0					
ANR	3935386	IdentifierDeclType	zend_ast *		3935359	0					
ANR	3935387	Identifier	loop_ast		3935359	1					
ANR	3935388	AssignmentExpression	* loop_ast = ast -> child [ 2 ]		3935359	2		=			
ANR	3935389	Identifier	loop_ast		3935359	0					
ANR	3935390	ArrayIndexing	ast -> child [ 2 ]		3935359	1					
ANR	3935391	PtrMemberAccess	ast -> child		3935359	0					
ANR	3935392	Identifier	ast		3935359	0					
ANR	3935393	Identifier	child		3935359	1					
ANR	3935394	PrimaryExpression	2		3935359	1					
ANR	3935395	IdentifierDeclStatement	zend_ast * stmt_ast = ast -> child [ 3 ] ;	3849:1:111193:111227	3935359	3	True				
ANR	3935396	IdentifierDecl	* stmt_ast = ast -> child [ 3 ]		3935359	0					
ANR	3935397	IdentifierDeclType	zend_ast *		3935359	0					
ANR	3935398	Identifier	stmt_ast		3935359	1					
ANR	3935399	AssignmentExpression	* stmt_ast = ast -> child [ 3 ]		3935359	2		=			
ANR	3935400	Identifier	stmt_ast		3935359	0					
ANR	3935401	ArrayIndexing	ast -> child [ 3 ]		3935359	1					
ANR	3935402	PtrMemberAccess	ast -> child		3935359	0					
ANR	3935403	Identifier	ast		3935359	0					
ANR	3935404	Identifier	child		3935359	1					
ANR	3935405	PrimaryExpression	3		3935359	1					
ANR	3935406	IdentifierDeclStatement	znode result ;	3851:1:111231:111243	3935359	4	True				
ANR	3935407	IdentifierDecl	result		3935359	0					
ANR	3935408	IdentifierDeclType	znode		3935359	0					
ANR	3935409	Identifier	result		3935359	1					
ANR	3935410	IdentifierDeclStatement	"uint32_t opnum_start , opnum_jmp , opnum_loop ;"	3852:1:111246:111289	3935359	5	True				
ANR	3935411	IdentifierDecl	opnum_start		3935359	0					
ANR	3935412	IdentifierDeclType	uint32_t		3935359	0					
ANR	3935413	Identifier	opnum_start		3935359	1					
ANR	3935414	IdentifierDecl	opnum_jmp		3935359	1					
ANR	3935415	IdentifierDeclType	uint32_t		3935359	0					
ANR	3935416	Identifier	opnum_jmp		3935359	1					
ANR	3935417	IdentifierDecl	opnum_loop		3935359	2					
ANR	3935418	IdentifierDeclType	uint32_t		3935359	0					
ANR	3935419	Identifier	opnum_loop		3935359	1					
ANR	3935420	ExpressionStatement	"zend_compile_expr_list ( & result , init_ast )"	3854:1:111293:111334	3935359	6	True				
ANR	3935421	CallExpression	"zend_compile_expr_list ( & result , init_ast )"		3935359	0					
ANR	3935422	Callee	zend_compile_expr_list		3935359	0					
ANR	3935423	Identifier	zend_compile_expr_list		3935359	0					
ANR	3935424	ArgumentList	& result		3935359	1					
ANR	3935425	Argument	& result		3935359	0					
ANR	3935426	UnaryOperationExpression	& result		3935359	0					
ANR	3935427	UnaryOperator	&		3935359	0					
ANR	3935428	Identifier	result		3935359	1					
ANR	3935429	Argument	init_ast		3935359	1					
ANR	3935430	Identifier	init_ast		3935359	0					
ANR	3935431	ExpressionStatement	zend_do_free ( & result )	3855:1:111337:111358	3935359	7	True				
ANR	3935432	CallExpression	zend_do_free ( & result )		3935359	0					
ANR	3935433	Callee	zend_do_free		3935359	0					
ANR	3935434	Identifier	zend_do_free		3935359	0					
ANR	3935435	ArgumentList	& result		3935359	1					
ANR	3935436	Argument	& result		3935359	0					
ANR	3935437	UnaryOperationExpression	& result		3935359	0					
ANR	3935438	UnaryOperator	&		3935359	0					
ANR	3935439	Identifier	result		3935359	1					
ANR	3935440	ExpressionStatement	opnum_jmp = zend_emit_jump ( 0 )	3857:1:111362:111391	3935359	8	True				
ANR	3935441	AssignmentExpression	opnum_jmp = zend_emit_jump ( 0 )		3935359	0		=			
ANR	3935442	Identifier	opnum_jmp		3935359	0					
ANR	3935443	CallExpression	zend_emit_jump ( 0 )		3935359	1					
ANR	3935444	Callee	zend_emit_jump		3935359	0					
ANR	3935445	Identifier	zend_emit_jump		3935359	0					
ANR	3935446	ArgumentList	0		3935359	1					
ANR	3935447	Argument	0		3935359	0					
ANR	3935448	PrimaryExpression	0		3935359	0					
ANR	3935449	ExpressionStatement	"zend_begin_loop ( ZEND_NOP , NULL )"	3859:1:111395:111426	3935359	9	True				
ANR	3935450	CallExpression	"zend_begin_loop ( ZEND_NOP , NULL )"		3935359	0					
ANR	3935451	Callee	zend_begin_loop		3935359	0					
ANR	3935452	Identifier	zend_begin_loop		3935359	0					
ANR	3935453	ArgumentList	ZEND_NOP		3935359	1					
ANR	3935454	Argument	ZEND_NOP		3935359	0					
ANR	3935455	Identifier	ZEND_NOP		3935359	0					
ANR	3935456	Argument	NULL		3935359	1					
ANR	3935457	Identifier	NULL		3935359	0					
ANR	3935458	ExpressionStatement	opnum_start = get_next_op_number ( CG ( active_op_array ) )	3861:1:111430:111483	3935359	10	True				
ANR	3935459	AssignmentExpression	opnum_start = get_next_op_number ( CG ( active_op_array ) )		3935359	0		=			
ANR	3935460	Identifier	opnum_start		3935359	0					
ANR	3935461	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935359	1					
ANR	3935462	Callee	get_next_op_number		3935359	0					
ANR	3935463	Identifier	get_next_op_number		3935359	0					
ANR	3935464	ArgumentList	CG ( active_op_array )		3935359	1					
ANR	3935465	Argument	CG ( active_op_array )		3935359	0					
ANR	3935466	CallExpression	CG ( active_op_array )		3935359	0					
ANR	3935467	Callee	CG		3935359	0					
ANR	3935468	Identifier	CG		3935359	0					
ANR	3935469	ArgumentList	active_op_array		3935359	1					
ANR	3935470	Argument	active_op_array		3935359	0					
ANR	3935471	Identifier	active_op_array		3935359	0					
ANR	3935472	ExpressionStatement	zend_compile_stmt ( stmt_ast )	3862:1:111486:111513	3935359	11	True				
ANR	3935473	CallExpression	zend_compile_stmt ( stmt_ast )		3935359	0					
ANR	3935474	Callee	zend_compile_stmt		3935359	0					
ANR	3935475	Identifier	zend_compile_stmt		3935359	0					
ANR	3935476	ArgumentList	stmt_ast		3935359	1					
ANR	3935477	Argument	stmt_ast		3935359	0					
ANR	3935478	Identifier	stmt_ast		3935359	0					
ANR	3935479	ExpressionStatement	opnum_loop = get_next_op_number ( CG ( active_op_array ) )	3864:1:111517:111569	3935359	12	True				
ANR	3935480	AssignmentExpression	opnum_loop = get_next_op_number ( CG ( active_op_array ) )		3935359	0		=			
ANR	3935481	Identifier	opnum_loop		3935359	0					
ANR	3935482	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935359	1					
ANR	3935483	Callee	get_next_op_number		3935359	0					
ANR	3935484	Identifier	get_next_op_number		3935359	0					
ANR	3935485	ArgumentList	CG ( active_op_array )		3935359	1					
ANR	3935486	Argument	CG ( active_op_array )		3935359	0					
ANR	3935487	CallExpression	CG ( active_op_array )		3935359	0					
ANR	3935488	Callee	CG		3935359	0					
ANR	3935489	Identifier	CG		3935359	0					
ANR	3935490	ArgumentList	active_op_array		3935359	1					
ANR	3935491	Argument	active_op_array		3935359	0					
ANR	3935492	Identifier	active_op_array		3935359	0					
ANR	3935493	ExpressionStatement	"zend_compile_expr_list ( & result , loop_ast )"	3865:1:111572:111613	3935359	13	True				
ANR	3935494	CallExpression	"zend_compile_expr_list ( & result , loop_ast )"		3935359	0					
ANR	3935495	Callee	zend_compile_expr_list		3935359	0					
ANR	3935496	Identifier	zend_compile_expr_list		3935359	0					
ANR	3935497	ArgumentList	& result		3935359	1					
ANR	3935498	Argument	& result		3935359	0					
ANR	3935499	UnaryOperationExpression	& result		3935359	0					
ANR	3935500	UnaryOperator	&		3935359	0					
ANR	3935501	Identifier	result		3935359	1					
ANR	3935502	Argument	loop_ast		3935359	1					
ANR	3935503	Identifier	loop_ast		3935359	0					
ANR	3935504	ExpressionStatement	zend_do_free ( & result )	3866:1:111616:111637	3935359	14	True				
ANR	3935505	CallExpression	zend_do_free ( & result )		3935359	0					
ANR	3935506	Callee	zend_do_free		3935359	0					
ANR	3935507	Identifier	zend_do_free		3935359	0					
ANR	3935508	ArgumentList	& result		3935359	1					
ANR	3935509	Argument	& result		3935359	0					
ANR	3935510	UnaryOperationExpression	& result		3935359	0					
ANR	3935511	UnaryOperator	&		3935359	0					
ANR	3935512	Identifier	result		3935359	1					
ANR	3935513	ExpressionStatement	zend_update_jump_target_to_next ( opnum_jmp )	3868:1:111641:111683	3935359	15	True				
ANR	3935514	CallExpression	zend_update_jump_target_to_next ( opnum_jmp )		3935359	0					
ANR	3935515	Callee	zend_update_jump_target_to_next		3935359	0					
ANR	3935516	Identifier	zend_update_jump_target_to_next		3935359	0					
ANR	3935517	ArgumentList	opnum_jmp		3935359	1					
ANR	3935518	Argument	opnum_jmp		3935359	0					
ANR	3935519	Identifier	opnum_jmp		3935359	0					
ANR	3935520	ExpressionStatement	"zend_compile_expr_list ( & result , cond_ast )"	3869:1:111686:111727	3935359	16	True				
ANR	3935521	CallExpression	"zend_compile_expr_list ( & result , cond_ast )"		3935359	0					
ANR	3935522	Callee	zend_compile_expr_list		3935359	0					
ANR	3935523	Identifier	zend_compile_expr_list		3935359	0					
ANR	3935524	ArgumentList	& result		3935359	1					
ANR	3935525	Argument	& result		3935359	0					
ANR	3935526	UnaryOperationExpression	& result		3935359	0					
ANR	3935527	UnaryOperator	&		3935359	0					
ANR	3935528	Identifier	result		3935359	1					
ANR	3935529	Argument	cond_ast		3935359	1					
ANR	3935530	Identifier	cond_ast		3935359	0					
ANR	3935531	ExpressionStatement	zend_do_extended_info ( )	3870:1:111730:111753	3935359	17	True				
ANR	3935532	CallExpression	zend_do_extended_info ( )		3935359	0					
ANR	3935533	Callee	zend_do_extended_info		3935359	0					
ANR	3935534	Identifier	zend_do_extended_info		3935359	0					
ANR	3935535	ArgumentList			3935359	1					
ANR	3935536	ExpressionStatement	"zend_emit_cond_jump ( ZEND_JMPNZ , & result , opnum_start )"	3872:1:111757:111810	3935359	18	True				
ANR	3935537	CallExpression	"zend_emit_cond_jump ( ZEND_JMPNZ , & result , opnum_start )"		3935359	0					
ANR	3935538	Callee	zend_emit_cond_jump		3935359	0					
ANR	3935539	Identifier	zend_emit_cond_jump		3935359	0					
ANR	3935540	ArgumentList	ZEND_JMPNZ		3935359	1					
ANR	3935541	Argument	ZEND_JMPNZ		3935359	0					
ANR	3935542	Identifier	ZEND_JMPNZ		3935359	0					
ANR	3935543	Argument	& result		3935359	1					
ANR	3935544	UnaryOperationExpression	& result		3935359	0					
ANR	3935545	UnaryOperator	&		3935359	0					
ANR	3935546	Identifier	result		3935359	1					
ANR	3935547	Argument	opnum_start		3935359	2					
ANR	3935548	Identifier	opnum_start		3935359	0					
ANR	3935549	ExpressionStatement	zend_end_loop ( opnum_loop )	3874:1:111814:111839	3935359	19	True				
ANR	3935550	CallExpression	zend_end_loop ( opnum_loop )		3935359	0					
ANR	3935551	Callee	zend_end_loop		3935359	0					
ANR	3935552	Identifier	zend_end_loop		3935359	0					
ANR	3935553	ArgumentList	opnum_loop		3935359	1					
ANR	3935554	Argument	opnum_loop		3935359	0					
ANR	3935555	Identifier	opnum_loop		3935359	0					
ANR	3935556	ReturnType	void		3935359	1					
ANR	3935557	Identifier	zend_compile_for		3935359	2					
ANR	3935558	ParameterList	zend_ast * ast		3935359	3					
ANR	3935559	Parameter	zend_ast * ast	3844:22:111054:111066	3935359	0	True				
ANR	3935560	ParameterType	zend_ast *		3935359	0					
ANR	3935561	Identifier	ast		3935359	1					
ANR	3935562	CFGEntryNode	ENTRY		3935359		True				
ANR	3935563	CFGExitNode	EXIT		3935359		True				
ANR	3935564	Symbol	zend_emit_jump		3935359						
ANR	3935565	Symbol	ZEND_JMPNZ		3935359						
ANR	3935566	Symbol	stmt_ast		3935359						
ANR	3935567	Symbol	opnum_jmp		3935359						
ANR	3935568	Symbol	opnum_start		3935359						
ANR	3935569	Symbol	ast		3935359						
ANR	3935570	Symbol	NULL		3935359						
ANR	3935571	Symbol	CG		3935359						
ANR	3935572	Symbol	active_op_array		3935359						
ANR	3935573	Symbol	ZEND_NOP		3935359						
ANR	3935574	Symbol	opnum_loop		3935359						
ANR	3935575	Symbol	cond_ast		3935359						
ANR	3935576	Symbol	result		3935359						
ANR	3935577	Symbol	* ast		3935359						
ANR	3935578	Symbol	loop_ast		3935359						
ANR	3935579	Symbol	init_ast		3935359						
ANR	3935580	Symbol	* * ast		3935359						
ANR	3935581	Symbol	& result		3935359						
ANR	3935582	Symbol	* ast -> child		3935359						
ANR	3935583	Symbol	ast -> child		3935359						
ANR	3935584	Symbol	get_next_op_number		3935359						
ANR	3935585	Function	zend_compile_foreach	3878:0:111854:114209							
ANR	3935586	FunctionDef	zend_compile_foreach (zend_ast * ast)		3935585	0					
ANR	3935587	CompoundStatement		3879:0:111905:114209	3935585	0					
ANR	3935588	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	3880:1:111908:111942	3935585	0	True				
ANR	3935589	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3935585	0					
ANR	3935590	IdentifierDeclType	zend_ast *		3935585	0					
ANR	3935591	Identifier	expr_ast		3935585	1					
ANR	3935592	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3935585	2		=			
ANR	3935593	Identifier	expr_ast		3935585	0					
ANR	3935594	ArrayIndexing	ast -> child [ 0 ]		3935585	1					
ANR	3935595	PtrMemberAccess	ast -> child		3935585	0					
ANR	3935596	Identifier	ast		3935585	0					
ANR	3935597	Identifier	child		3935585	1					
ANR	3935598	PrimaryExpression	0		3935585	1					
ANR	3935599	IdentifierDeclStatement	zend_ast * value_ast = ast -> child [ 1 ] ;	3881:1:111945:111980	3935585	1	True				
ANR	3935600	IdentifierDecl	* value_ast = ast -> child [ 1 ]		3935585	0					
ANR	3935601	IdentifierDeclType	zend_ast *		3935585	0					
ANR	3935602	Identifier	value_ast		3935585	1					
ANR	3935603	AssignmentExpression	* value_ast = ast -> child [ 1 ]		3935585	2		=			
ANR	3935604	Identifier	value_ast		3935585	0					
ANR	3935605	ArrayIndexing	ast -> child [ 1 ]		3935585	1					
ANR	3935606	PtrMemberAccess	ast -> child		3935585	0					
ANR	3935607	Identifier	ast		3935585	0					
ANR	3935608	Identifier	child		3935585	1					
ANR	3935609	PrimaryExpression	1		3935585	1					
ANR	3935610	IdentifierDeclStatement	zend_ast * key_ast = ast -> child [ 2 ] ;	3882:1:111983:112016	3935585	2	True				
ANR	3935611	IdentifierDecl	* key_ast = ast -> child [ 2 ]		3935585	0					
ANR	3935612	IdentifierDeclType	zend_ast *		3935585	0					
ANR	3935613	Identifier	key_ast		3935585	1					
ANR	3935614	AssignmentExpression	* key_ast = ast -> child [ 2 ]		3935585	2		=			
ANR	3935615	Identifier	key_ast		3935585	0					
ANR	3935616	ArrayIndexing	ast -> child [ 2 ]		3935585	1					
ANR	3935617	PtrMemberAccess	ast -> child		3935585	0					
ANR	3935618	Identifier	ast		3935585	0					
ANR	3935619	Identifier	child		3935585	1					
ANR	3935620	PrimaryExpression	2		3935585	1					
ANR	3935621	IdentifierDeclStatement	zend_ast * stmt_ast = ast -> child [ 3 ] ;	3883:1:112019:112053	3935585	3	True				
ANR	3935622	IdentifierDecl	* stmt_ast = ast -> child [ 3 ]		3935585	0					
ANR	3935623	IdentifierDeclType	zend_ast *		3935585	0					
ANR	3935624	Identifier	stmt_ast		3935585	1					
ANR	3935625	AssignmentExpression	* stmt_ast = ast -> child [ 3 ]		3935585	2		=			
ANR	3935626	Identifier	stmt_ast		3935585	0					
ANR	3935627	ArrayIndexing	ast -> child [ 3 ]		3935585	1					
ANR	3935628	PtrMemberAccess	ast -> child		3935585	0					
ANR	3935629	Identifier	ast		3935585	0					
ANR	3935630	Identifier	child		3935585	1					
ANR	3935631	PrimaryExpression	3		3935585	1					
ANR	3935632	IdentifierDeclStatement	zend_bool by_ref = value_ast -> kind == ZEND_AST_REF ;	3884:1:112056:112106	3935585	4	True				
ANR	3935633	IdentifierDecl	by_ref = value_ast -> kind == ZEND_AST_REF		3935585	0					
ANR	3935634	IdentifierDeclType	zend_bool		3935585	0					
ANR	3935635	Identifier	by_ref		3935585	1					
ANR	3935636	AssignmentExpression	by_ref = value_ast -> kind == ZEND_AST_REF		3935585	2		=			
ANR	3935637	Identifier	by_ref		3935585	0					
ANR	3935638	EqualityExpression	value_ast -> kind == ZEND_AST_REF		3935585	1		==			
ANR	3935639	PtrMemberAccess	value_ast -> kind		3935585	0					
ANR	3935640	Identifier	value_ast		3935585	0					
ANR	3935641	Identifier	kind		3935585	1					
ANR	3935642	Identifier	ZEND_AST_REF		3935585	1					
ANR	3935643	IdentifierDeclStatement	zend_bool is_variable = zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast ) && zend_can_write_to_variable ( expr_ast ) ;	3885:1:112109:112228	3935585	5	True				
ANR	3935644	IdentifierDecl	is_variable = zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast ) && zend_can_write_to_variable ( expr_ast )		3935585	0					
ANR	3935645	IdentifierDeclType	zend_bool		3935585	0					
ANR	3935646	Identifier	is_variable		3935585	1					
ANR	3935647	AssignmentExpression	is_variable = zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast ) && zend_can_write_to_variable ( expr_ast )		3935585	2		=			
ANR	3935648	Identifier	is_variable		3935585	0					
ANR	3935649	AndExpression	zend_is_variable ( expr_ast ) && ! zend_is_call ( expr_ast ) && zend_can_write_to_variable ( expr_ast )		3935585	1		&&			
ANR	3935650	CallExpression	zend_is_variable ( expr_ast )		3935585	0					
ANR	3935651	Callee	zend_is_variable		3935585	0					
ANR	3935652	Identifier	zend_is_variable		3935585	0					
ANR	3935653	ArgumentList	expr_ast		3935585	1					
ANR	3935654	Argument	expr_ast		3935585	0					
ANR	3935655	Identifier	expr_ast		3935585	0					
ANR	3935656	AndExpression	! zend_is_call ( expr_ast ) && zend_can_write_to_variable ( expr_ast )		3935585	1		&&			
ANR	3935657	UnaryOperationExpression	! zend_is_call ( expr_ast )		3935585	0					
ANR	3935658	UnaryOperator	!		3935585	0					
ANR	3935659	CallExpression	zend_is_call ( expr_ast )		3935585	1					
ANR	3935660	Callee	zend_is_call		3935585	0					
ANR	3935661	Identifier	zend_is_call		3935585	0					
ANR	3935662	ArgumentList	expr_ast		3935585	1					
ANR	3935663	Argument	expr_ast		3935585	0					
ANR	3935664	Identifier	expr_ast		3935585	0					
ANR	3935665	CallExpression	zend_can_write_to_variable ( expr_ast )		3935585	1					
ANR	3935666	Callee	zend_can_write_to_variable		3935585	0					
ANR	3935667	Identifier	zend_can_write_to_variable		3935585	0					
ANR	3935668	ArgumentList	expr_ast		3935585	1					
ANR	3935669	Argument	expr_ast		3935585	0					
ANR	3935670	Identifier	expr_ast		3935585	0					
ANR	3935671	IdentifierDeclStatement	"znode expr_node , reset_node , value_node , key_node ;"	3888:1:112232:112281	3935585	6	True				
ANR	3935672	IdentifierDecl	expr_node		3935585	0					
ANR	3935673	IdentifierDeclType	znode		3935585	0					
ANR	3935674	Identifier	expr_node		3935585	1					
ANR	3935675	IdentifierDecl	reset_node		3935585	1					
ANR	3935676	IdentifierDeclType	znode		3935585	0					
ANR	3935677	Identifier	reset_node		3935585	1					
ANR	3935678	IdentifierDecl	value_node		3935585	2					
ANR	3935679	IdentifierDeclType	znode		3935585	0					
ANR	3935680	Identifier	value_node		3935585	1					
ANR	3935681	IdentifierDecl	key_node		3935585	3					
ANR	3935682	IdentifierDeclType	znode		3935585	0					
ANR	3935683	Identifier	key_node		3935585	1					
ANR	3935684	IdentifierDeclStatement	zend_op * opline ;	3889:1:112284:112299	3935585	7	True				
ANR	3935685	IdentifierDecl	* opline		3935585	0					
ANR	3935686	IdentifierDeclType	zend_op *		3935585	0					
ANR	3935687	Identifier	opline		3935585	1					
ANR	3935688	IdentifierDeclStatement	"uint32_t opnum_reset , opnum_fetch ;"	3890:1:112302:112335	3935585	8	True				
ANR	3935689	IdentifierDecl	opnum_reset		3935585	0					
ANR	3935690	IdentifierDeclType	uint32_t		3935585	0					
ANR	3935691	Identifier	opnum_reset		3935585	1					
ANR	3935692	IdentifierDecl	opnum_fetch		3935585	1					
ANR	3935693	IdentifierDeclType	uint32_t		3935585	0					
ANR	3935694	Identifier	opnum_fetch		3935585	1					
ANR	3935695	IfStatement	if ( key_ast )		3935585	9					
ANR	3935696	Condition	key_ast	3892:5:112343:112349	3935585	0	True				
ANR	3935697	Identifier	key_ast		3935585	0					
ANR	3935698	CompoundStatement		14:14:446:446	3935585	1					
ANR	3935699	IfStatement	if ( key_ast -> kind == ZEND_AST_REF )		3935585	0					
ANR	3935700	Condition	key_ast -> kind == ZEND_AST_REF	3893:6:112360:112388	3935585	0	True				
ANR	3935701	EqualityExpression	key_ast -> kind == ZEND_AST_REF		3935585	0		==			
ANR	3935702	PtrMemberAccess	key_ast -> kind		3935585	0					
ANR	3935703	Identifier	key_ast		3935585	0					
ANR	3935704	Identifier	kind		3935585	1					
ANR	3935705	Identifier	ZEND_AST_REF		3935585	1					
ANR	3935706	CompoundStatement		15:37:485:485	3935585	1					
ANR	3935707	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Key element cannot be a reference"" )"	3894:3:112396:112469	3935585	0	True				
ANR	3935708	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Key element cannot be a reference"" )"		3935585	0					
ANR	3935709	Callee	zend_error_noreturn		3935585	0					
ANR	3935710	Identifier	zend_error_noreturn		3935585	0					
ANR	3935711	ArgumentList	E_COMPILE_ERROR		3935585	1					
ANR	3935712	Argument	E_COMPILE_ERROR		3935585	0					
ANR	3935713	Identifier	E_COMPILE_ERROR		3935585	0					
ANR	3935714	Argument	"""Key element cannot be a reference"""		3935585	1					
ANR	3935715	PrimaryExpression	"""Key element cannot be a reference"""		3935585	0					
ANR	3935716	IfStatement	if ( key_ast -> kind == ZEND_AST_LIST )		3935585	1					
ANR	3935717	Condition	key_ast -> kind == ZEND_AST_LIST	3896:6:112481:112510	3935585	0	True				
ANR	3935718	EqualityExpression	key_ast -> kind == ZEND_AST_LIST		3935585	0		==			
ANR	3935719	PtrMemberAccess	key_ast -> kind		3935585	0					
ANR	3935720	Identifier	key_ast		3935585	0					
ANR	3935721	Identifier	kind		3935585	1					
ANR	3935722	Identifier	ZEND_AST_LIST		3935585	1					
ANR	3935723	CompoundStatement		18:38:607:607	3935585	1					
ANR	3935724	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use list as key element"" )"	3897:3:112518:112588	3935585	0	True				
ANR	3935725	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use list as key element"" )"		3935585	0					
ANR	3935726	Callee	zend_error_noreturn		3935585	0					
ANR	3935727	Identifier	zend_error_noreturn		3935585	0					
ANR	3935728	ArgumentList	E_COMPILE_ERROR		3935585	1					
ANR	3935729	Argument	E_COMPILE_ERROR		3935585	0					
ANR	3935730	Identifier	E_COMPILE_ERROR		3935585	0					
ANR	3935731	Argument	"""Cannot use list as key element"""		3935585	1					
ANR	3935732	PrimaryExpression	"""Cannot use list as key element"""		3935585	0					
ANR	3935733	IfStatement	if ( by_ref )		3935585	10					
ANR	3935734	Condition	by_ref	3901:5:112603:112608	3935585	0	True				
ANR	3935735	Identifier	by_ref		3935585	0					
ANR	3935736	CompoundStatement		23:13:705:705	3935585	1					
ANR	3935737	ExpressionStatement	value_ast = value_ast -> child [ 0 ]	3902:2:112615:112646	3935585	0	True				
ANR	3935738	AssignmentExpression	value_ast = value_ast -> child [ 0 ]		3935585	0		=			
ANR	3935739	Identifier	value_ast		3935585	0					
ANR	3935740	ArrayIndexing	value_ast -> child [ 0 ]		3935585	1					
ANR	3935741	PtrMemberAccess	value_ast -> child		3935585	0					
ANR	3935742	Identifier	value_ast		3935585	0					
ANR	3935743	Identifier	child		3935585	1					
ANR	3935744	PrimaryExpression	0		3935585	1					
ANR	3935745	IfStatement	if ( by_ref && is_variable )		3935585	11					
ANR	3935746	Condition	by_ref && is_variable	3905:5:112657:112677	3935585	0	True				
ANR	3935747	AndExpression	by_ref && is_variable		3935585	0		&&			
ANR	3935748	Identifier	by_ref		3935585	0					
ANR	3935749	Identifier	is_variable		3935585	1					
ANR	3935750	CompoundStatement		27:28:774:774	3935585	1					
ANR	3935751	ExpressionStatement	"zend_compile_var ( & expr_node , expr_ast , BP_VAR_W )"	3906:2:112684:112732	3935585	0	True				
ANR	3935752	CallExpression	"zend_compile_var ( & expr_node , expr_ast , BP_VAR_W )"		3935585	0					
ANR	3935753	Callee	zend_compile_var		3935585	0					
ANR	3935754	Identifier	zend_compile_var		3935585	0					
ANR	3935755	ArgumentList	& expr_node		3935585	1					
ANR	3935756	Argument	& expr_node		3935585	0					
ANR	3935757	UnaryOperationExpression	& expr_node		3935585	0					
ANR	3935758	UnaryOperator	&		3935585	0					
ANR	3935759	Identifier	expr_node		3935585	1					
ANR	3935760	Argument	expr_ast		3935585	1					
ANR	3935761	Identifier	expr_ast		3935585	0					
ANR	3935762	Argument	BP_VAR_W		3935585	2					
ANR	3935763	Identifier	BP_VAR_W		3935585	0					
ANR	3935764	ElseStatement	else		3935585	0					
ANR	3935765	CompoundStatement		29:8:836:836	3935585	0					
ANR	3935766	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	3908:2:112746:112785	3935585	0	True				
ANR	3935767	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3935585	0					
ANR	3935768	Callee	zend_compile_expr		3935585	0					
ANR	3935769	Identifier	zend_compile_expr		3935585	0					
ANR	3935770	ArgumentList	& expr_node		3935585	1					
ANR	3935771	Argument	& expr_node		3935585	0					
ANR	3935772	UnaryOperationExpression	& expr_node		3935585	0					
ANR	3935773	UnaryOperator	&		3935585	0					
ANR	3935774	Identifier	expr_node		3935585	1					
ANR	3935775	Argument	expr_ast		3935585	1					
ANR	3935776	Identifier	expr_ast		3935585	0					
ANR	3935777	IfStatement	if ( by_ref )		3935585	12					
ANR	3935778	Condition	by_ref	3911:5:112796:112801	3935585	0	True				
ANR	3935779	Identifier	by_ref		3935585	0					
ANR	3935780	CompoundStatement		33:13:898:898	3935585	1					
ANR	3935781	ExpressionStatement	"zend_separate_if_call_and_write ( & expr_node , expr_ast , BP_VAR_W )"	3912:2:112808:112871	3935585	0	True				
ANR	3935782	CallExpression	"zend_separate_if_call_and_write ( & expr_node , expr_ast , BP_VAR_W )"		3935585	0					
ANR	3935783	Callee	zend_separate_if_call_and_write		3935585	0					
ANR	3935784	Identifier	zend_separate_if_call_and_write		3935585	0					
ANR	3935785	ArgumentList	& expr_node		3935585	1					
ANR	3935786	Argument	& expr_node		3935585	0					
ANR	3935787	UnaryOperationExpression	& expr_node		3935585	0					
ANR	3935788	UnaryOperator	&		3935585	0					
ANR	3935789	Identifier	expr_node		3935585	1					
ANR	3935790	Argument	expr_ast		3935585	1					
ANR	3935791	Identifier	expr_ast		3935585	0					
ANR	3935792	Argument	BP_VAR_W		3935585	2					
ANR	3935793	Identifier	BP_VAR_W		3935585	0					
ANR	3935794	ExpressionStatement	opnum_reset = get_next_op_number ( CG ( active_op_array ) )	3915:1:112878:112931	3935585	13	True				
ANR	3935795	AssignmentExpression	opnum_reset = get_next_op_number ( CG ( active_op_array ) )		3935585	0		=			
ANR	3935796	Identifier	opnum_reset		3935585	0					
ANR	3935797	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935585	1					
ANR	3935798	Callee	get_next_op_number		3935585	0					
ANR	3935799	Identifier	get_next_op_number		3935585	0					
ANR	3935800	ArgumentList	CG ( active_op_array )		3935585	1					
ANR	3935801	Argument	CG ( active_op_array )		3935585	0					
ANR	3935802	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3935803	Callee	CG		3935585	0					
ANR	3935804	Identifier	CG		3935585	0					
ANR	3935805	ArgumentList	active_op_array		3935585	1					
ANR	3935806	Argument	active_op_array		3935585	0					
ANR	3935807	Identifier	active_op_array		3935585	0					
ANR	3935808	ExpressionStatement	"opline = zend_emit_op ( & reset_node , by_ref ? ZEND_FE_RESET_RW : ZEND_FE_RESET_R , & expr_node , NULL )"	3916:1:112934:113031	3935585	14	True				
ANR	3935809	AssignmentExpression	"opline = zend_emit_op ( & reset_node , by_ref ? ZEND_FE_RESET_RW : ZEND_FE_RESET_R , & expr_node , NULL )"		3935585	0		=			
ANR	3935810	Identifier	opline		3935585	0					
ANR	3935811	CallExpression	"zend_emit_op ( & reset_node , by_ref ? ZEND_FE_RESET_RW : ZEND_FE_RESET_R , & expr_node , NULL )"		3935585	1					
ANR	3935812	Callee	zend_emit_op		3935585	0					
ANR	3935813	Identifier	zend_emit_op		3935585	0					
ANR	3935814	ArgumentList	& reset_node		3935585	1					
ANR	3935815	Argument	& reset_node		3935585	0					
ANR	3935816	UnaryOperationExpression	& reset_node		3935585	0					
ANR	3935817	UnaryOperator	&		3935585	0					
ANR	3935818	Identifier	reset_node		3935585	1					
ANR	3935819	Argument	by_ref ? ZEND_FE_RESET_RW : ZEND_FE_RESET_R		3935585	1					
ANR	3935820	ConditionalExpression	by_ref ? ZEND_FE_RESET_RW : ZEND_FE_RESET_R		3935585	0					
ANR	3935821	Condition	by_ref		3935585	0					
ANR	3935822	Identifier	by_ref		3935585	0					
ANR	3935823	Identifier	ZEND_FE_RESET_RW		3935585	1					
ANR	3935824	Identifier	ZEND_FE_RESET_R		3935585	2					
ANR	3935825	Argument	& expr_node		3935585	2					
ANR	3935826	UnaryOperationExpression	& expr_node		3935585	0					
ANR	3935827	UnaryOperator	&		3935585	0					
ANR	3935828	Identifier	expr_node		3935585	1					
ANR	3935829	Argument	NULL		3935585	3					
ANR	3935830	Identifier	NULL		3935585	0					
ANR	3935831	ExpressionStatement	opnum_fetch = get_next_op_number ( CG ( active_op_array ) )	3918:1:113035:113088	3935585	15	True				
ANR	3935832	AssignmentExpression	opnum_fetch = get_next_op_number ( CG ( active_op_array ) )		3935585	0		=			
ANR	3935833	Identifier	opnum_fetch		3935585	0					
ANR	3935834	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935585	1					
ANR	3935835	Callee	get_next_op_number		3935585	0					
ANR	3935836	Identifier	get_next_op_number		3935585	0					
ANR	3935837	ArgumentList	CG ( active_op_array )		3935585	1					
ANR	3935838	Argument	CG ( active_op_array )		3935585	0					
ANR	3935839	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3935840	Callee	CG		3935585	0					
ANR	3935841	Identifier	CG		3935585	0					
ANR	3935842	ArgumentList	active_op_array		3935585	1					
ANR	3935843	Argument	active_op_array		3935585	0					
ANR	3935844	Identifier	active_op_array		3935585	0					
ANR	3935845	ExpressionStatement	"opline = zend_emit_op ( NULL , by_ref ? ZEND_FE_FETCH_RW : ZEND_FE_FETCH_R , & reset_node , NULL )"	3919:1:113091:113182	3935585	16	True				
ANR	3935846	AssignmentExpression	"opline = zend_emit_op ( NULL , by_ref ? ZEND_FE_FETCH_RW : ZEND_FE_FETCH_R , & reset_node , NULL )"		3935585	0		=			
ANR	3935847	Identifier	opline		3935585	0					
ANR	3935848	CallExpression	"zend_emit_op ( NULL , by_ref ? ZEND_FE_FETCH_RW : ZEND_FE_FETCH_R , & reset_node , NULL )"		3935585	1					
ANR	3935849	Callee	zend_emit_op		3935585	0					
ANR	3935850	Identifier	zend_emit_op		3935585	0					
ANR	3935851	ArgumentList	NULL		3935585	1					
ANR	3935852	Argument	NULL		3935585	0					
ANR	3935853	Identifier	NULL		3935585	0					
ANR	3935854	Argument	by_ref ? ZEND_FE_FETCH_RW : ZEND_FE_FETCH_R		3935585	1					
ANR	3935855	ConditionalExpression	by_ref ? ZEND_FE_FETCH_RW : ZEND_FE_FETCH_R		3935585	0					
ANR	3935856	Condition	by_ref		3935585	0					
ANR	3935857	Identifier	by_ref		3935585	0					
ANR	3935858	Identifier	ZEND_FE_FETCH_RW		3935585	1					
ANR	3935859	Identifier	ZEND_FE_FETCH_R		3935585	2					
ANR	3935860	Argument	& reset_node		3935585	2					
ANR	3935861	UnaryOperationExpression	& reset_node		3935585	0					
ANR	3935862	UnaryOperator	&		3935585	0					
ANR	3935863	Identifier	reset_node		3935585	1					
ANR	3935864	Argument	NULL		3935585	3					
ANR	3935865	Identifier	NULL		3935585	0					
ANR	3935866	IfStatement	"if ( value_ast -> kind == ZEND_AST_VAR && zend_try_compile_cv ( & value_node , value_ast ) == SUCCESS )"		3935585	17					
ANR	3935867	Condition	"value_ast -> kind == ZEND_AST_VAR && zend_try_compile_cv ( & value_node , value_ast ) == SUCCESS"	3921:5:113190:113283	3935585	0	True				
ANR	3935868	AndExpression	"value_ast -> kind == ZEND_AST_VAR && zend_try_compile_cv ( & value_node , value_ast ) == SUCCESS"		3935585	0		&&			
ANR	3935869	EqualityExpression	value_ast -> kind == ZEND_AST_VAR		3935585	0		==			
ANR	3935870	PtrMemberAccess	value_ast -> kind		3935585	0					
ANR	3935871	Identifier	value_ast		3935585	0					
ANR	3935872	Identifier	kind		3935585	1					
ANR	3935873	Identifier	ZEND_AST_VAR		3935585	1					
ANR	3935874	EqualityExpression	"zend_try_compile_cv ( & value_node , value_ast ) == SUCCESS"		3935585	1		==			
ANR	3935875	CallExpression	"zend_try_compile_cv ( & value_node , value_ast )"		3935585	0					
ANR	3935876	Callee	zend_try_compile_cv		3935585	0					
ANR	3935877	Identifier	zend_try_compile_cv		3935585	0					
ANR	3935878	ArgumentList	& value_node		3935585	1					
ANR	3935879	Argument	& value_node		3935585	0					
ANR	3935880	UnaryOperationExpression	& value_node		3935585	0					
ANR	3935881	UnaryOperator	&		3935585	0					
ANR	3935882	Identifier	value_node		3935585	1					
ANR	3935883	Argument	value_ast		3935585	1					
ANR	3935884	Identifier	value_ast		3935585	0					
ANR	3935885	Identifier	SUCCESS		3935585	1					
ANR	3935886	CompoundStatement		44:61:1380:1380	3935585	1					
ANR	3935887	ExpressionStatement	"SET_NODE ( opline -> op2 , & value_node )"	3923:2:113290:113324	3935585	0	True				
ANR	3935888	CallExpression	"SET_NODE ( opline -> op2 , & value_node )"		3935585	0					
ANR	3935889	Callee	SET_NODE		3935585	0					
ANR	3935890	Identifier	SET_NODE		3935585	0					
ANR	3935891	ArgumentList	opline -> op2		3935585	1					
ANR	3935892	Argument	opline -> op2		3935585	0					
ANR	3935893	PtrMemberAccess	opline -> op2		3935585	0					
ANR	3935894	Identifier	opline		3935585	0					
ANR	3935895	Identifier	op2		3935585	1					
ANR	3935896	Argument	& value_node		3935585	1					
ANR	3935897	UnaryOperationExpression	& value_node		3935585	0					
ANR	3935898	UnaryOperator	&		3935585	0					
ANR	3935899	Identifier	value_node		3935585	1					
ANR	3935900	ElseStatement	else		3935585	0					
ANR	3935901	CompoundStatement		46:8:1428:1428	3935585	0					
ANR	3935902	ExpressionStatement	opline -> op2_type = IS_VAR	3925:2:113338:113363	3935585	0	True				
ANR	3935903	AssignmentExpression	opline -> op2_type = IS_VAR		3935585	0		=			
ANR	3935904	PtrMemberAccess	opline -> op2_type		3935585	0					
ANR	3935905	Identifier	opline		3935585	0					
ANR	3935906	Identifier	op2_type		3935585	1					
ANR	3935907	Identifier	IS_VAR		3935585	1					
ANR	3935908	ExpressionStatement	opline -> op2 . var = get_temporary_variable ( CG ( active_op_array ) )	3926:2:113367:113428	3935585	1	True				
ANR	3935909	AssignmentExpression	opline -> op2 . var = get_temporary_variable ( CG ( active_op_array ) )		3935585	0		=			
ANR	3935910	MemberAccess	opline -> op2 . var		3935585	0					
ANR	3935911	PtrMemberAccess	opline -> op2		3935585	0					
ANR	3935912	Identifier	opline		3935585	0					
ANR	3935913	Identifier	op2		3935585	1					
ANR	3935914	Identifier	var		3935585	1					
ANR	3935915	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3935585	1					
ANR	3935916	Callee	get_temporary_variable		3935585	0					
ANR	3935917	Identifier	get_temporary_variable		3935585	0					
ANR	3935918	ArgumentList	CG ( active_op_array )		3935585	1					
ANR	3935919	Argument	CG ( active_op_array )		3935585	0					
ANR	3935920	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3935921	Callee	CG		3935585	0					
ANR	3935922	Identifier	CG		3935585	0					
ANR	3935923	ArgumentList	active_op_array		3935585	1					
ANR	3935924	Argument	active_op_array		3935585	0					
ANR	3935925	Identifier	active_op_array		3935585	0					
ANR	3935926	ExpressionStatement	"GET_NODE ( & value_node , opline -> op2 )"	3927:2:113432:113466	3935585	2	True				
ANR	3935927	CallExpression	"GET_NODE ( & value_node , opline -> op2 )"		3935585	0					
ANR	3935928	Callee	GET_NODE		3935585	0					
ANR	3935929	Identifier	GET_NODE		3935585	0					
ANR	3935930	ArgumentList	& value_node		3935585	1					
ANR	3935931	Argument	& value_node		3935585	0					
ANR	3935932	UnaryOperationExpression	& value_node		3935585	0					
ANR	3935933	UnaryOperator	&		3935585	0					
ANR	3935934	Identifier	value_node		3935585	1					
ANR	3935935	Argument	opline -> op2		3935585	1					
ANR	3935936	PtrMemberAccess	opline -> op2		3935585	0					
ANR	3935937	Identifier	opline		3935585	0					
ANR	3935938	Identifier	op2		3935585	1					
ANR	3935939	IfStatement	if ( by_ref )		3935585	3					
ANR	3935940	Condition	by_ref	3928:6:113474:113479	3935585	0	True				
ANR	3935941	Identifier	by_ref		3935585	0					
ANR	3935942	CompoundStatement		50:14:1576:1576	3935585	1					
ANR	3935943	ExpressionStatement	"zend_emit_assign_ref_znode ( value_ast , & value_node )"	3929:3:113487:113537	3935585	0	True				
ANR	3935944	CallExpression	"zend_emit_assign_ref_znode ( value_ast , & value_node )"		3935585	0					
ANR	3935945	Callee	zend_emit_assign_ref_znode		3935585	0					
ANR	3935946	Identifier	zend_emit_assign_ref_znode		3935585	0					
ANR	3935947	ArgumentList	value_ast		3935585	1					
ANR	3935948	Argument	value_ast		3935585	0					
ANR	3935949	Identifier	value_ast		3935585	0					
ANR	3935950	Argument	& value_node		3935585	1					
ANR	3935951	UnaryOperationExpression	& value_node		3935585	0					
ANR	3935952	UnaryOperator	&		3935585	0					
ANR	3935953	Identifier	value_node		3935585	1					
ANR	3935954	ElseStatement	else		3935585	0					
ANR	3935955	CompoundStatement		52:9:1642:1642	3935585	0					
ANR	3935956	ExpressionStatement	"zend_emit_assign_znode ( value_ast , & value_node )"	3931:3:113553:113599	3935585	0	True				
ANR	3935957	CallExpression	"zend_emit_assign_znode ( value_ast , & value_node )"		3935585	0					
ANR	3935958	Callee	zend_emit_assign_znode		3935585	0					
ANR	3935959	Identifier	zend_emit_assign_znode		3935585	0					
ANR	3935960	ArgumentList	value_ast		3935585	1					
ANR	3935961	Argument	value_ast		3935585	0					
ANR	3935962	Identifier	value_ast		3935585	0					
ANR	3935963	Argument	& value_node		3935585	1					
ANR	3935964	UnaryOperationExpression	& value_node		3935585	0					
ANR	3935965	UnaryOperator	&		3935585	0					
ANR	3935966	Identifier	value_node		3935585	1					
ANR	3935967	IfStatement	if ( key_ast )		3935585	18					
ANR	3935968	Condition	key_ast	3935:5:113614:113620	3935585	0	True				
ANR	3935969	Identifier	key_ast		3935585	0					
ANR	3935970	CompoundStatement		57:14:1717:1717	3935585	1					
ANR	3935971	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum_fetch ]	3936:2:113627:113678	3935585	0	True				
ANR	3935972	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum_fetch ]		3935585	0		=			
ANR	3935973	Identifier	opline		3935585	0					
ANR	3935974	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum_fetch ]		3935585	1					
ANR	3935975	UnaryOperator	&		3935585	0					
ANR	3935976	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum_fetch ]		3935585	1					
ANR	3935977	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3935585	0					
ANR	3935978	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3935979	Callee	CG		3935585	0					
ANR	3935980	Identifier	CG		3935585	0					
ANR	3935981	ArgumentList	active_op_array		3935585	1					
ANR	3935982	Argument	active_op_array		3935585	0					
ANR	3935983	Identifier	active_op_array		3935585	0					
ANR	3935984	Identifier	opcodes		3935585	1					
ANR	3935985	Identifier	opnum_fetch		3935585	1					
ANR	3935986	ExpressionStatement	"zend_make_tmp_result ( & key_node , opline )"	3937:2:113682:113721	3935585	1	True				
ANR	3935987	CallExpression	"zend_make_tmp_result ( & key_node , opline )"		3935585	0					
ANR	3935988	Callee	zend_make_tmp_result		3935585	0					
ANR	3935989	Identifier	zend_make_tmp_result		3935585	0					
ANR	3935990	ArgumentList	& key_node		3935585	1					
ANR	3935991	Argument	& key_node		3935585	0					
ANR	3935992	UnaryOperationExpression	& key_node		3935585	0					
ANR	3935993	UnaryOperator	&		3935585	0					
ANR	3935994	Identifier	key_node		3935585	1					
ANR	3935995	Argument	opline		3935585	1					
ANR	3935996	Identifier	opline		3935585	0					
ANR	3935997	ExpressionStatement	"zend_emit_assign_znode ( key_ast , & key_node )"	3938:2:113725:113767	3935585	2	True				
ANR	3935998	CallExpression	"zend_emit_assign_znode ( key_ast , & key_node )"		3935585	0					
ANR	3935999	Callee	zend_emit_assign_znode		3935585	0					
ANR	3936000	Identifier	zend_emit_assign_znode		3935585	0					
ANR	3936001	ArgumentList	key_ast		3935585	1					
ANR	3936002	Argument	key_ast		3935585	0					
ANR	3936003	Identifier	key_ast		3935585	0					
ANR	3936004	Argument	& key_node		3935585	1					
ANR	3936005	UnaryOperationExpression	& key_node		3935585	0					
ANR	3936006	UnaryOperator	&		3935585	0					
ANR	3936007	Identifier	key_node		3935585	1					
ANR	3936008	ExpressionStatement	"zend_begin_loop ( ZEND_FE_FREE , & reset_node )"	3941:1:113774:113816	3935585	19	True				
ANR	3936009	CallExpression	"zend_begin_loop ( ZEND_FE_FREE , & reset_node )"		3935585	0					
ANR	3936010	Callee	zend_begin_loop		3935585	0					
ANR	3936011	Identifier	zend_begin_loop		3935585	0					
ANR	3936012	ArgumentList	ZEND_FE_FREE		3935585	1					
ANR	3936013	Argument	ZEND_FE_FREE		3935585	0					
ANR	3936014	Identifier	ZEND_FE_FREE		3935585	0					
ANR	3936015	Argument	& reset_node		3935585	1					
ANR	3936016	UnaryOperationExpression	& reset_node		3935585	0					
ANR	3936017	UnaryOperator	&		3935585	0					
ANR	3936018	Identifier	reset_node		3935585	1					
ANR	3936019	ExpressionStatement	zend_compile_stmt ( stmt_ast )	3943:1:113820:113847	3935585	20	True				
ANR	3936020	CallExpression	zend_compile_stmt ( stmt_ast )		3935585	0					
ANR	3936021	Callee	zend_compile_stmt		3935585	0					
ANR	3936022	Identifier	zend_compile_stmt		3935585	0					
ANR	3936023	ArgumentList	stmt_ast		3935585	1					
ANR	3936024	Argument	stmt_ast		3935585	0					
ANR	3936025	Identifier	stmt_ast		3935585	0					
ANR	3936026	ExpressionStatement	zend_emit_jump ( opnum_fetch )	3945:1:113851:113878	3935585	21	True				
ANR	3936027	CallExpression	zend_emit_jump ( opnum_fetch )		3935585	0					
ANR	3936028	Callee	zend_emit_jump		3935585	0					
ANR	3936029	Identifier	zend_emit_jump		3935585	0					
ANR	3936030	ArgumentList	opnum_fetch		3935585	1					
ANR	3936031	Argument	opnum_fetch		3935585	0					
ANR	3936032	Identifier	opnum_fetch		3935585	0					
ANR	3936033	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum_reset ]	3947:1:113882:113933	3935585	22	True				
ANR	3936034	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum_reset ]		3935585	0		=			
ANR	3936035	Identifier	opline		3935585	0					
ANR	3936036	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum_reset ]		3935585	1					
ANR	3936037	UnaryOperator	&		3935585	0					
ANR	3936038	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum_reset ]		3935585	1					
ANR	3936039	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3935585	0					
ANR	3936040	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3936041	Callee	CG		3935585	0					
ANR	3936042	Identifier	CG		3935585	0					
ANR	3936043	ArgumentList	active_op_array		3935585	1					
ANR	3936044	Argument	active_op_array		3935585	0					
ANR	3936045	Identifier	active_op_array		3935585	0					
ANR	3936046	Identifier	opcodes		3935585	1					
ANR	3936047	Identifier	opnum_reset		3935585	1					
ANR	3936048	ExpressionStatement	opline -> op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )	3948:1:113936:114000	3935585	23	True				
ANR	3936049	AssignmentExpression	opline -> op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )		3935585	0		=			
ANR	3936050	MemberAccess	opline -> op2 . opline_num		3935585	0					
ANR	3936051	PtrMemberAccess	opline -> op2		3935585	0					
ANR	3936052	Identifier	opline		3935585	0					
ANR	3936053	Identifier	op2		3935585	1					
ANR	3936054	Identifier	opline_num		3935585	1					
ANR	3936055	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935585	1					
ANR	3936056	Callee	get_next_op_number		3935585	0					
ANR	3936057	Identifier	get_next_op_number		3935585	0					
ANR	3936058	ArgumentList	CG ( active_op_array )		3935585	1					
ANR	3936059	Argument	CG ( active_op_array )		3935585	0					
ANR	3936060	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3936061	Callee	CG		3935585	0					
ANR	3936062	Identifier	CG		3935585	0					
ANR	3936063	ArgumentList	active_op_array		3935585	1					
ANR	3936064	Argument	active_op_array		3935585	0					
ANR	3936065	Identifier	active_op_array		3935585	0					
ANR	3936066	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum_fetch ]	3950:1:114004:114055	3935585	24	True				
ANR	3936067	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum_fetch ]		3935585	0		=			
ANR	3936068	Identifier	opline		3935585	0					
ANR	3936069	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum_fetch ]		3935585	1					
ANR	3936070	UnaryOperator	&		3935585	0					
ANR	3936071	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum_fetch ]		3935585	1					
ANR	3936072	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3935585	0					
ANR	3936073	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3936074	Callee	CG		3935585	0					
ANR	3936075	Identifier	CG		3935585	0					
ANR	3936076	ArgumentList	active_op_array		3935585	1					
ANR	3936077	Argument	active_op_array		3935585	0					
ANR	3936078	Identifier	active_op_array		3935585	0					
ANR	3936079	Identifier	opcodes		3935585	1					
ANR	3936080	Identifier	opnum_fetch		3935585	1					
ANR	3936081	ExpressionStatement	opline -> extended_value = get_next_op_number ( CG ( active_op_array ) )	3951:1:114058:114122	3935585	25	True				
ANR	3936082	AssignmentExpression	opline -> extended_value = get_next_op_number ( CG ( active_op_array ) )		3935585	0		=			
ANR	3936083	PtrMemberAccess	opline -> extended_value		3935585	0					
ANR	3936084	Identifier	opline		3935585	0					
ANR	3936085	Identifier	extended_value		3935585	1					
ANR	3936086	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3935585	1					
ANR	3936087	Callee	get_next_op_number		3935585	0					
ANR	3936088	Identifier	get_next_op_number		3935585	0					
ANR	3936089	ArgumentList	CG ( active_op_array )		3935585	1					
ANR	3936090	Argument	CG ( active_op_array )		3935585	0					
ANR	3936091	CallExpression	CG ( active_op_array )		3935585	0					
ANR	3936092	Callee	CG		3935585	0					
ANR	3936093	Identifier	CG		3935585	0					
ANR	3936094	ArgumentList	active_op_array		3935585	1					
ANR	3936095	Argument	active_op_array		3935585	0					
ANR	3936096	Identifier	active_op_array		3935585	0					
ANR	3936097	ExpressionStatement	zend_end_loop ( opnum_fetch )	3953:1:114126:114152	3935585	26	True				
ANR	3936098	CallExpression	zend_end_loop ( opnum_fetch )		3935585	0					
ANR	3936099	Callee	zend_end_loop		3935585	0					
ANR	3936100	Identifier	zend_end_loop		3935585	0					
ANR	3936101	ArgumentList	opnum_fetch		3935585	1					
ANR	3936102	Argument	opnum_fetch		3935585	0					
ANR	3936103	Identifier	opnum_fetch		3935585	0					
ANR	3936104	ExpressionStatement	"zend_emit_op ( NULL , ZEND_FE_FREE , & reset_node , NULL )"	3955:1:114156:114207	3935585	27	True				
ANR	3936105	CallExpression	"zend_emit_op ( NULL , ZEND_FE_FREE , & reset_node , NULL )"		3935585	0					
ANR	3936106	Callee	zend_emit_op		3935585	0					
ANR	3936107	Identifier	zend_emit_op		3935585	0					
ANR	3936108	ArgumentList	NULL		3935585	1					
ANR	3936109	Argument	NULL		3935585	0					
ANR	3936110	Identifier	NULL		3935585	0					
ANR	3936111	Argument	ZEND_FE_FREE		3935585	1					
ANR	3936112	Identifier	ZEND_FE_FREE		3935585	0					
ANR	3936113	Argument	& reset_node		3935585	2					
ANR	3936114	UnaryOperationExpression	& reset_node		3935585	0					
ANR	3936115	UnaryOperator	&		3935585	0					
ANR	3936116	Identifier	reset_node		3935585	1					
ANR	3936117	Argument	NULL		3935585	3					
ANR	3936118	Identifier	NULL		3935585	0					
ANR	3936119	ReturnType	void		3935585	1					
ANR	3936120	Identifier	zend_compile_foreach		3935585	2					
ANR	3936121	ParameterList	zend_ast * ast		3935585	3					
ANR	3936122	Parameter	zend_ast * ast	3878:26:111880:111892	3935585	0	True				
ANR	3936123	ParameterType	zend_ast *		3935585	0					
ANR	3936124	Identifier	ast		3935585	1					
ANR	3936125	CFGEntryNode	ENTRY		3935585		True				
ANR	3936126	CFGExitNode	EXIT		3935585		True				
ANR	3936127	Symbol	* * value_ast		3935585						
ANR	3936128	Symbol	ZEND_FE_RESET_RW		3935585						
ANR	3936129	Symbol	stmt_ast		3935585						
ANR	3936130	Symbol	opline -> op2 . var		3935585						
ANR	3936131	Symbol	ast		3935585						
ANR	3936132	Symbol	E_COMPILE_ERROR		3935585						
ANR	3936133	Symbol	get_temporary_variable		3935585						
ANR	3936134	Symbol	* CG		3935585						
ANR	3936135	Symbol	ZEND_FE_FREE		3935585						
ANR	3936136	Symbol	ZEND_FE_RESET_R		3935585						
ANR	3936137	Symbol	opnum_fetch		3935585						
ANR	3936138	Symbol	CG ( active_op_array ) -> opcodes		3935585						
ANR	3936139	Symbol	opline -> extended_value		3935585						
ANR	3936140	Symbol	value_ast -> kind		3935585						
ANR	3936141	Symbol	opline		3935585						
ANR	3936142	Symbol	zend_can_write_to_variable		3935585						
ANR	3936143	Symbol	ZEND_AST_VAR		3935585						
ANR	3936144	Symbol	BP_VAR_W		3935585						
ANR	3936145	Symbol	opnum_reset		3935585						
ANR	3936146	Symbol	NULL		3935585						
ANR	3936147	Symbol	ZEND_FE_FETCH_R		3935585						
ANR	3936148	Symbol	* value_ast		3935585						
ANR	3936149	Symbol	& reset_node		3935585						
ANR	3936150	Symbol	zend_try_compile_cv		3935585						
ANR	3936151	Symbol	expr_node		3935585						
ANR	3936152	Symbol	key_ast -> kind		3935585						
ANR	3936153	Symbol	ZEND_AST_LIST		3935585						
ANR	3936154	Symbol	key_node		3935585						
ANR	3936155	Symbol	* ast -> child		3935585						
ANR	3936156	Symbol	by_ref		3935585						
ANR	3936157	Symbol	ast -> child		3935585						
ANR	3936158	Symbol	IS_VAR		3935585						
ANR	3936159	Symbol	zend_emit_op		3935585						
ANR	3936160	Symbol	opline -> op2		3935585						
ANR	3936161	Symbol	is_variable		3935585						
ANR	3936162	Symbol	key_ast		3935585						
ANR	3936163	Symbol	& expr_node		3935585						
ANR	3936164	Symbol	& key_node		3935585						
ANR	3936165	Symbol	ZEND_FE_FETCH_RW		3935585						
ANR	3936166	Symbol	* value_ast -> child		3935585						
ANR	3936167	Symbol	* ast		3935585						
ANR	3936168	Symbol	value_ast		3935585						
ANR	3936169	Symbol	* * ast		3935585						
ANR	3936170	Symbol	value_node		3935585						
ANR	3936171	Symbol	value_ast -> child		3935585						
ANR	3936172	Symbol	ZEND_AST_REF		3935585						
ANR	3936173	Symbol	zend_is_variable		3935585						
ANR	3936174	Symbol	opline -> op2 . opline_num		3935585						
ANR	3936175	Symbol	reset_node		3935585						
ANR	3936176	Symbol	SUCCESS		3935585						
ANR	3936177	Symbol	zend_is_call		3935585						
ANR	3936178	Symbol	CG		3935585						
ANR	3936179	Symbol	* key_ast		3935585						
ANR	3936180	Symbol	active_op_array		3935585						
ANR	3936181	Symbol	expr_ast		3935585						
ANR	3936182	Symbol	* opline		3935585						
ANR	3936183	Symbol	& value_node		3935585						
ANR	3936184	Symbol	opline -> op2_type		3935585						
ANR	3936185	Symbol	get_next_op_number		3935585						
ANR	3936186	Function	zend_compile_if	3959:0:114222:115133							
ANR	3936187	FunctionDef	zend_compile_if (zend_ast * ast)		3936186	0					
ANR	3936188	CompoundStatement		3960:0:114268:115133	3936186	0					
ANR	3936189	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	3961:1:114271:114315	3936186	0	True				
ANR	3936190	IdentifierDecl	* list = zend_ast_get_list ( ast )		3936186	0					
ANR	3936191	IdentifierDeclType	zend_ast_list *		3936186	0					
ANR	3936192	Identifier	list		3936186	1					
ANR	3936193	AssignmentExpression	* list = zend_ast_get_list ( ast )		3936186	2		=			
ANR	3936194	Identifier	list		3936186	0					
ANR	3936195	CallExpression	zend_ast_get_list ( ast )		3936186	1					
ANR	3936196	Callee	zend_ast_get_list		3936186	0					
ANR	3936197	Identifier	zend_ast_get_list		3936186	0					
ANR	3936198	ArgumentList	ast		3936186	1					
ANR	3936199	Argument	ast		3936186	0					
ANR	3936200	Identifier	ast		3936186	0					
ANR	3936201	IdentifierDeclStatement	uint32_t i ;	3962:1:114318:114328	3936186	1	True				
ANR	3936202	IdentifierDecl	i		3936186	0					
ANR	3936203	IdentifierDeclType	uint32_t		3936186	0					
ANR	3936204	Identifier	i		3936186	1					
ANR	3936205	IdentifierDeclStatement	uint32_t * jmp_opnums = NULL ;	3963:1:114331:114358	3936186	2	True				
ANR	3936206	IdentifierDecl	* jmp_opnums = NULL		3936186	0					
ANR	3936207	IdentifierDeclType	uint32_t *		3936186	0					
ANR	3936208	Identifier	jmp_opnums		3936186	1					
ANR	3936209	AssignmentExpression	* jmp_opnums = NULL		3936186	2		=			
ANR	3936210	Identifier	NULL		3936186	0					
ANR	3936211	Identifier	NULL		3936186	1					
ANR	3936212	IfStatement	if ( list -> children > 1 )		3936186	3					
ANR	3936213	Condition	list -> children > 1	3965:5:114366:114383	3936186	0	True				
ANR	3936214	RelationalExpression	list -> children > 1		3936186	0		>			
ANR	3936215	PtrMemberAccess	list -> children		3936186	0					
ANR	3936216	Identifier	list		3936186	0					
ANR	3936217	Identifier	children		3936186	1					
ANR	3936218	PrimaryExpression	1		3936186	1					
ANR	3936219	CompoundStatement		6:25:117:117	3936186	1					
ANR	3936220	ExpressionStatement	"jmp_opnums = safe_emalloc ( sizeof ( uint32_t ) , list -> children - 1 , 0 )"	3966:2:114390:114456	3936186	0	True				
ANR	3936221	AssignmentExpression	"jmp_opnums = safe_emalloc ( sizeof ( uint32_t ) , list -> children - 1 , 0 )"		3936186	0		=			
ANR	3936222	Identifier	jmp_opnums		3936186	0					
ANR	3936223	CallExpression	"safe_emalloc ( sizeof ( uint32_t ) , list -> children - 1 , 0 )"		3936186	1					
ANR	3936224	Callee	safe_emalloc		3936186	0					
ANR	3936225	Identifier	safe_emalloc		3936186	0					
ANR	3936226	ArgumentList	sizeof ( uint32_t )		3936186	1					
ANR	3936227	Argument	sizeof ( uint32_t )		3936186	0					
ANR	3936228	SizeofExpression	sizeof ( uint32_t )		3936186	0					
ANR	3936229	Sizeof	sizeof		3936186	0					
ANR	3936230	SizeofOperand	uint32_t		3936186	1					
ANR	3936231	Argument	list -> children - 1		3936186	1					
ANR	3936232	AdditiveExpression	list -> children - 1		3936186	0		-			
ANR	3936233	PtrMemberAccess	list -> children		3936186	0					
ANR	3936234	Identifier	list		3936186	0					
ANR	3936235	Identifier	children		3936186	1					
ANR	3936236	PrimaryExpression	1		3936186	1					
ANR	3936237	Argument	0		3936186	2					
ANR	3936238	PrimaryExpression	0		3936186	0					
ANR	3936239	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3936186	4					
ANR	3936240	ForInit	i = 0 ;	3969:6:114468:114473	3936186	0	True				
ANR	3936241	AssignmentExpression	i = 0		3936186	0		=			
ANR	3936242	Identifier	i		3936186	0					
ANR	3936243	PrimaryExpression	0		3936186	1					
ANR	3936244	Condition	i < list -> children	3969:13:114475:114492	3936186	1	True				
ANR	3936245	RelationalExpression	i < list -> children		3936186	0		<			
ANR	3936246	Identifier	i		3936186	0					
ANR	3936247	PtrMemberAccess	list -> children		3936186	1					
ANR	3936248	Identifier	list		3936186	0					
ANR	3936249	Identifier	children		3936186	1					
ANR	3936250	UnaryExpression	++ i	3969:33:114495:114497	3936186	2	True				
ANR	3936251	IncDec	++		3936186	0					
ANR	3936252	Identifier	i		3936186	1					
ANR	3936253	CompoundStatement		16:2:380:399	3936186	3					
ANR	3936254	IdentifierDeclStatement	zend_ast * elem_ast = list -> child [ i ] ;	3970:2:114504:114539	3936186	0	True				
ANR	3936255	IdentifierDecl	* elem_ast = list -> child [ i ]		3936186	0					
ANR	3936256	IdentifierDeclType	zend_ast *		3936186	0					
ANR	3936257	Identifier	elem_ast		3936186	1					
ANR	3936258	AssignmentExpression	* elem_ast = list -> child [ i ]		3936186	2		=			
ANR	3936259	Identifier	elem_ast		3936186	0					
ANR	3936260	ArrayIndexing	list -> child [ i ]		3936186	1					
ANR	3936261	PtrMemberAccess	list -> child		3936186	0					
ANR	3936262	Identifier	list		3936186	0					
ANR	3936263	Identifier	child		3936186	1					
ANR	3936264	Identifier	i		3936186	1					
ANR	3936265	IdentifierDeclStatement	zend_ast * cond_ast = elem_ast -> child [ 0 ] ;	3971:2:114543:114582	3936186	1	True				
ANR	3936266	IdentifierDecl	* cond_ast = elem_ast -> child [ 0 ]		3936186	0					
ANR	3936267	IdentifierDeclType	zend_ast *		3936186	0					
ANR	3936268	Identifier	cond_ast		3936186	1					
ANR	3936269	AssignmentExpression	* cond_ast = elem_ast -> child [ 0 ]		3936186	2		=			
ANR	3936270	Identifier	cond_ast		3936186	0					
ANR	3936271	ArrayIndexing	elem_ast -> child [ 0 ]		3936186	1					
ANR	3936272	PtrMemberAccess	elem_ast -> child		3936186	0					
ANR	3936273	Identifier	elem_ast		3936186	0					
ANR	3936274	Identifier	child		3936186	1					
ANR	3936275	PrimaryExpression	0		3936186	1					
ANR	3936276	IdentifierDeclStatement	zend_ast * stmt_ast = elem_ast -> child [ 1 ] ;	3972:2:114586:114625	3936186	2	True				
ANR	3936277	IdentifierDecl	* stmt_ast = elem_ast -> child [ 1 ]		3936186	0					
ANR	3936278	IdentifierDeclType	zend_ast *		3936186	0					
ANR	3936279	Identifier	stmt_ast		3936186	1					
ANR	3936280	AssignmentExpression	* stmt_ast = elem_ast -> child [ 1 ]		3936186	2		=			
ANR	3936281	Identifier	stmt_ast		3936186	0					
ANR	3936282	ArrayIndexing	elem_ast -> child [ 1 ]		3936186	1					
ANR	3936283	PtrMemberAccess	elem_ast -> child		3936186	0					
ANR	3936284	Identifier	elem_ast		3936186	0					
ANR	3936285	Identifier	child		3936186	1					
ANR	3936286	PrimaryExpression	1		3936186	1					
ANR	3936287	IdentifierDeclStatement	znode cond_node ;	3974:2:114630:114645	3936186	3	True				
ANR	3936288	IdentifierDecl	cond_node		3936186	0					
ANR	3936289	IdentifierDeclType	znode		3936186	0					
ANR	3936290	Identifier	cond_node		3936186	1					
ANR	3936291	IdentifierDeclStatement	uint32_t opnum_jmpz ;	3975:2:114649:114668	3936186	4	True				
ANR	3936292	IdentifierDecl	opnum_jmpz		3936186	0					
ANR	3936293	IdentifierDeclType	uint32_t		3936186	0					
ANR	3936294	Identifier	opnum_jmpz		3936186	1					
ANR	3936295	IfStatement	if ( cond_ast )		3936186	5					
ANR	3936296	Condition	cond_ast	3976:6:114676:114683	3936186	0	True				
ANR	3936297	Identifier	cond_ast		3936186	0					
ANR	3936298	CompoundStatement		17:16:417:417	3936186	1					
ANR	3936299	ExpressionStatement	"zend_compile_expr ( & cond_node , cond_ast )"	3977:3:114691:114730	3936186	0	True				
ANR	3936300	CallExpression	"zend_compile_expr ( & cond_node , cond_ast )"		3936186	0					
ANR	3936301	Callee	zend_compile_expr		3936186	0					
ANR	3936302	Identifier	zend_compile_expr		3936186	0					
ANR	3936303	ArgumentList	& cond_node		3936186	1					
ANR	3936304	Argument	& cond_node		3936186	0					
ANR	3936305	UnaryOperationExpression	& cond_node		3936186	0					
ANR	3936306	UnaryOperator	&		3936186	0					
ANR	3936307	Identifier	cond_node		3936186	1					
ANR	3936308	Argument	cond_ast		3936186	1					
ANR	3936309	Identifier	cond_ast		3936186	0					
ANR	3936310	ExpressionStatement	"opnum_jmpz = zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"	3978:3:114735:114793	3936186	1	True				
ANR	3936311	AssignmentExpression	"opnum_jmpz = zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"		3936186	0		=			
ANR	3936312	Identifier	opnum_jmpz		3936186	0					
ANR	3936313	CallExpression	"zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"		3936186	1					
ANR	3936314	Callee	zend_emit_cond_jump		3936186	0					
ANR	3936315	Identifier	zend_emit_cond_jump		3936186	0					
ANR	3936316	ArgumentList	ZEND_JMPZ		3936186	1					
ANR	3936317	Argument	ZEND_JMPZ		3936186	0					
ANR	3936318	Identifier	ZEND_JMPZ		3936186	0					
ANR	3936319	Argument	& cond_node		3936186	1					
ANR	3936320	UnaryOperationExpression	& cond_node		3936186	0					
ANR	3936321	UnaryOperator	&		3936186	0					
ANR	3936322	Identifier	cond_node		3936186	1					
ANR	3936323	Argument	0		3936186	2					
ANR	3936324	PrimaryExpression	0		3936186	0					
ANR	3936325	ExpressionStatement	zend_compile_stmt ( stmt_ast )	3981:2:114802:114829	3936186	6	True				
ANR	3936326	CallExpression	zend_compile_stmt ( stmt_ast )		3936186	0					
ANR	3936327	Callee	zend_compile_stmt		3936186	0					
ANR	3936328	Identifier	zend_compile_stmt		3936186	0					
ANR	3936329	ArgumentList	stmt_ast		3936186	1					
ANR	3936330	Argument	stmt_ast		3936186	0					
ANR	3936331	Identifier	stmt_ast		3936186	0					
ANR	3936332	IfStatement	if ( i != list -> children - 1 )		3936186	7					
ANR	3936333	Condition	i != list -> children - 1	3983:6:114838:114860	3936186	0	True				
ANR	3936334	EqualityExpression	i != list -> children - 1		3936186	0		!=			
ANR	3936335	Identifier	i		3936186	0					
ANR	3936336	AdditiveExpression	list -> children - 1		3936186	1		-			
ANR	3936337	PtrMemberAccess	list -> children		3936186	0					
ANR	3936338	Identifier	list		3936186	0					
ANR	3936339	Identifier	children		3936186	1					
ANR	3936340	PrimaryExpression	1		3936186	1					
ANR	3936341	CompoundStatement		24:31:594:594	3936186	1					
ANR	3936342	ExpressionStatement	jmp_opnums [ i ] = zend_emit_jump ( 0 )	3984:3:114868:114901	3936186	0	True				
ANR	3936343	AssignmentExpression	jmp_opnums [ i ] = zend_emit_jump ( 0 )		3936186	0		=			
ANR	3936344	ArrayIndexing	jmp_opnums [ i ]		3936186	0					
ANR	3936345	Identifier	jmp_opnums		3936186	0					
ANR	3936346	Identifier	i		3936186	1					
ANR	3936347	CallExpression	zend_emit_jump ( 0 )		3936186	1					
ANR	3936348	Callee	zend_emit_jump		3936186	0					
ANR	3936349	Identifier	zend_emit_jump		3936186	0					
ANR	3936350	ArgumentList	0		3936186	1					
ANR	3936351	Argument	0		3936186	0					
ANR	3936352	PrimaryExpression	0		3936186	0					
ANR	3936353	IfStatement	if ( cond_ast )		3936186	8					
ANR	3936354	Condition	cond_ast	3987:6:114914:114921	3936186	0	True				
ANR	3936355	Identifier	cond_ast		3936186	0					
ANR	3936356	CompoundStatement		28:16:655:655	3936186	1					
ANR	3936357	ExpressionStatement	zend_update_jump_target_to_next ( opnum_jmpz )	3988:3:114929:114972	3936186	0	True				
ANR	3936358	CallExpression	zend_update_jump_target_to_next ( opnum_jmpz )		3936186	0					
ANR	3936359	Callee	zend_update_jump_target_to_next		3936186	0					
ANR	3936360	Identifier	zend_update_jump_target_to_next		3936186	0					
ANR	3936361	ArgumentList	opnum_jmpz		3936186	1					
ANR	3936362	Argument	opnum_jmpz		3936186	0					
ANR	3936363	Identifier	opnum_jmpz		3936186	0					
ANR	3936364	IfStatement	if ( list -> children > 1 )		3936186	5					
ANR	3936365	Condition	list -> children > 1	3992:5:114987:115004	3936186	0	True				
ANR	3936366	RelationalExpression	list -> children > 1		3936186	0		>			
ANR	3936367	PtrMemberAccess	list -> children		3936186	0					
ANR	3936368	Identifier	list		3936186	0					
ANR	3936369	Identifier	children		3936186	1					
ANR	3936370	PrimaryExpression	1		3936186	1					
ANR	3936371	CompoundStatement		33:25:738:738	3936186	1					
ANR	3936372	ForStatement	for ( i = 0 ; i < list -> children - 1 ; ++ i )		3936186	0					
ANR	3936373	ForInit	i = 0 ;	3993:7:115016:115021	3936186	0	True				
ANR	3936374	AssignmentExpression	i = 0		3936186	0		=			
ANR	3936375	Identifier	i		3936186	0					
ANR	3936376	PrimaryExpression	0		3936186	1					
ANR	3936377	Condition	i < list -> children - 1	3993:14:115023:115044	3936186	1	True				
ANR	3936378	RelationalExpression	i < list -> children - 1		3936186	0		<			
ANR	3936379	Identifier	i		3936186	0					
ANR	3936380	AdditiveExpression	list -> children - 1		3936186	1		-			
ANR	3936381	PtrMemberAccess	list -> children		3936186	0					
ANR	3936382	Identifier	list		3936186	0					
ANR	3936383	Identifier	children		3936186	1					
ANR	3936384	PrimaryExpression	1		3936186	1					
ANR	3936385	UnaryExpression	++ i	3993:38:115047:115049	3936186	2	True				
ANR	3936386	IncDec	++		3936186	0					
ANR	3936387	Identifier	i		3936186	1					
ANR	3936388	CompoundStatement		34:43:783:783	3936186	3					
ANR	3936389	ExpressionStatement	zend_update_jump_target_to_next ( jmp_opnums [ i ] )	3994:3:115057:115103	3936186	0	True				
ANR	3936390	CallExpression	zend_update_jump_target_to_next ( jmp_opnums [ i ] )		3936186	0					
ANR	3936391	Callee	zend_update_jump_target_to_next		3936186	0					
ANR	3936392	Identifier	zend_update_jump_target_to_next		3936186	0					
ANR	3936393	ArgumentList	jmp_opnums [ i ]		3936186	1					
ANR	3936394	Argument	jmp_opnums [ i ]		3936186	0					
ANR	3936395	ArrayIndexing	jmp_opnums [ i ]		3936186	0					
ANR	3936396	Identifier	jmp_opnums		3936186	0					
ANR	3936397	Identifier	i		3936186	1					
ANR	3936398	ExpressionStatement	efree ( jmp_opnums )	3996:2:115111:115128	3936186	1	True				
ANR	3936399	CallExpression	efree ( jmp_opnums )		3936186	0					
ANR	3936400	Callee	efree		3936186	0					
ANR	3936401	Identifier	efree		3936186	0					
ANR	3936402	ArgumentList	jmp_opnums		3936186	1					
ANR	3936403	Argument	jmp_opnums		3936186	0					
ANR	3936404	Identifier	jmp_opnums		3936186	0					
ANR	3936405	ReturnType	void		3936186	1					
ANR	3936406	Identifier	zend_compile_if		3936186	2					
ANR	3936407	ParameterList	zend_ast * ast		3936186	3					
ANR	3936408	Parameter	zend_ast * ast	3959:21:114243:114255	3936186	0	True				
ANR	3936409	ParameterType	zend_ast *		3936186	0					
ANR	3936410	Identifier	ast		3936186	1					
ANR	3936411	CFGEntryNode	ENTRY		3936186		True				
ANR	3936412	CFGExitNode	EXIT		3936186		True				
ANR	3936413	Symbol	zend_emit_jump		3936186						
ANR	3936414	Symbol	stmt_ast		3936186						
ANR	3936415	Symbol	ast		3936186						
ANR	3936416	Symbol	jmp_opnums		3936186						
ANR	3936417	Symbol	* elem_ast -> child		3936186						
ANR	3936418	Symbol	* elem_ast		3936186						
ANR	3936419	Symbol	* * list		3936186						
ANR	3936420	Symbol	zend_emit_cond_jump		3936186						
ANR	3936421	Symbol	elem_ast -> child		3936186						
ANR	3936422	Symbol	NULL		3936186						
ANR	3936423	Symbol	list -> child		3936186						
ANR	3936424	Symbol	cond_node		3936186						
ANR	3936425	Symbol	ZEND_JMPZ		3936186						
ANR	3936426	Symbol	opnum_jmpz		3936186						
ANR	3936427	Symbol	i		3936186						
ANR	3936428	Symbol	list		3936186						
ANR	3936429	Symbol	* * elem_ast		3936186						
ANR	3936430	Symbol	elem_ast		3936186						
ANR	3936431	Symbol	cond_ast		3936186						
ANR	3936432	Symbol	zend_ast_get_list		3936186						
ANR	3936433	Symbol	* i		3936186						
ANR	3936434	Symbol	* list		3936186						
ANR	3936435	Symbol	* jmp_opnums		3936186						
ANR	3936436	Symbol	* list -> child		3936186						
ANR	3936437	Symbol	safe_emalloc		3936186						
ANR	3936438	Symbol	list -> children		3936186						
ANR	3936439	Symbol	& cond_node		3936186						
ANR	3936440	Function	zend_compile_switch	4001:0:115146:117473							
ANR	3936441	FunctionDef	zend_compile_switch (zend_ast * ast)		3936440	0					
ANR	3936442	CompoundStatement		4002:0:115196:117473	3936440	0					
ANR	3936443	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	4003:1:115199:115233	3936440	0	True				
ANR	3936444	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3936440	0					
ANR	3936445	IdentifierDeclType	zend_ast *		3936440	0					
ANR	3936446	Identifier	expr_ast		3936440	1					
ANR	3936447	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3936440	2		=			
ANR	3936448	Identifier	expr_ast		3936440	0					
ANR	3936449	ArrayIndexing	ast -> child [ 0 ]		3936440	1					
ANR	3936450	PtrMemberAccess	ast -> child		3936440	0					
ANR	3936451	Identifier	ast		3936440	0					
ANR	3936452	Identifier	child		3936440	1					
ANR	3936453	PrimaryExpression	0		3936440	1					
ANR	3936454	IdentifierDeclStatement	zend_ast_list * cases = zend_ast_get_list ( ast -> child [ 1 ] ) ;	4004:1:115236:115291	3936440	1	True				
ANR	3936455	IdentifierDecl	* cases = zend_ast_get_list ( ast -> child [ 1 ] )		3936440	0					
ANR	3936456	IdentifierDeclType	zend_ast_list *		3936440	0					
ANR	3936457	Identifier	cases		3936440	1					
ANR	3936458	AssignmentExpression	* cases = zend_ast_get_list ( ast -> child [ 1 ] )		3936440	2		=			
ANR	3936459	Identifier	cases		3936440	0					
ANR	3936460	CallExpression	zend_ast_get_list ( ast -> child [ 1 ] )		3936440	1					
ANR	3936461	Callee	zend_ast_get_list		3936440	0					
ANR	3936462	Identifier	zend_ast_get_list		3936440	0					
ANR	3936463	ArgumentList	ast -> child [ 1 ]		3936440	1					
ANR	3936464	Argument	ast -> child [ 1 ]		3936440	0					
ANR	3936465	ArrayIndexing	ast -> child [ 1 ]		3936440	0					
ANR	3936466	PtrMemberAccess	ast -> child		3936440	0					
ANR	3936467	Identifier	ast		3936440	0					
ANR	3936468	Identifier	child		3936440	1					
ANR	3936469	PrimaryExpression	1		3936440	1					
ANR	3936470	IdentifierDeclStatement	uint32_t i ;	4006:1:115295:115305	3936440	2	True				
ANR	3936471	IdentifierDecl	i		3936440	0					
ANR	3936472	IdentifierDeclType	uint32_t		3936440	0					
ANR	3936473	Identifier	i		3936440	1					
ANR	3936474	IdentifierDeclStatement	zend_bool has_default_case = 0 ;	4007:1:115308:115338	3936440	3	True				
ANR	3936475	IdentifierDecl	has_default_case = 0		3936440	0					
ANR	3936476	IdentifierDeclType	zend_bool		3936440	0					
ANR	3936477	Identifier	has_default_case		3936440	1					
ANR	3936478	AssignmentExpression	has_default_case = 0		3936440	2		=			
ANR	3936479	Identifier	has_default_case		3936440	0					
ANR	3936480	PrimaryExpression	0		3936440	1					
ANR	3936481	IdentifierDeclStatement	"znode expr_node , case_node ;"	4009:1:115342:115368	3936440	4	True				
ANR	3936482	IdentifierDecl	expr_node		3936440	0					
ANR	3936483	IdentifierDeclType	znode		3936440	0					
ANR	3936484	Identifier	expr_node		3936440	1					
ANR	3936485	IdentifierDecl	case_node		3936440	1					
ANR	3936486	IdentifierDeclType	znode		3936440	0					
ANR	3936487	Identifier	case_node		3936440	1					
ANR	3936488	IdentifierDeclStatement	zend_op * opline ;	4010:1:115371:115386	3936440	5	True				
ANR	3936489	IdentifierDecl	* opline		3936440	0					
ANR	3936490	IdentifierDeclType	zend_op *		3936440	0					
ANR	3936491	Identifier	opline		3936440	1					
ANR	3936492	IdentifierDeclStatement	"uint32_t * jmpnz_opnums = safe_emalloc ( sizeof ( uint32_t ) , cases -> children , 0 ) ;"	4011:1:115389:115464	3936440	6	True				
ANR	3936493	IdentifierDecl	"* jmpnz_opnums = safe_emalloc ( sizeof ( uint32_t ) , cases -> children , 0 )"		3936440	0					
ANR	3936494	IdentifierDeclType	uint32_t *		3936440	0					
ANR	3936495	Identifier	jmpnz_opnums		3936440	1					
ANR	3936496	AssignmentExpression	"* jmpnz_opnums = safe_emalloc ( sizeof ( uint32_t ) , cases -> children , 0 )"		3936440	2		=			
ANR	3936497	Identifier	jmpnz_opnums		3936440	0					
ANR	3936498	CallExpression	"safe_emalloc ( sizeof ( uint32_t ) , cases -> children , 0 )"		3936440	1					
ANR	3936499	Callee	safe_emalloc		3936440	0					
ANR	3936500	Identifier	safe_emalloc		3936440	0					
ANR	3936501	ArgumentList	sizeof ( uint32_t )		3936440	1					
ANR	3936502	Argument	sizeof ( uint32_t )		3936440	0					
ANR	3936503	SizeofExpression	sizeof ( uint32_t )		3936440	0					
ANR	3936504	Sizeof	sizeof		3936440	0					
ANR	3936505	SizeofOperand	uint32_t		3936440	1					
ANR	3936506	Argument	cases -> children		3936440	1					
ANR	3936507	PtrMemberAccess	cases -> children		3936440	0					
ANR	3936508	Identifier	cases		3936440	0					
ANR	3936509	Identifier	children		3936440	1					
ANR	3936510	Argument	0		3936440	2					
ANR	3936511	PrimaryExpression	0		3936440	0					
ANR	3936512	IdentifierDeclStatement	uint32_t opnum_default_jmp ;	4012:1:115467:115493	3936440	7	True				
ANR	3936513	IdentifierDecl	opnum_default_jmp		3936440	0					
ANR	3936514	IdentifierDeclType	uint32_t		3936440	0					
ANR	3936515	Identifier	opnum_default_jmp		3936440	1					
ANR	3936516	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	4014:1:115497:115536	3936440	8	True				
ANR	3936517	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3936440	0					
ANR	3936518	Callee	zend_compile_expr		3936440	0					
ANR	3936519	Identifier	zend_compile_expr		3936440	0					
ANR	3936520	ArgumentList	& expr_node		3936440	1					
ANR	3936521	Argument	& expr_node		3936440	0					
ANR	3936522	UnaryOperationExpression	& expr_node		3936440	0					
ANR	3936523	UnaryOperator	&		3936440	0					
ANR	3936524	Identifier	expr_node		3936440	1					
ANR	3936525	Argument	expr_ast		3936440	1					
ANR	3936526	Identifier	expr_ast		3936440	0					
ANR	3936527	ExpressionStatement	"zend_begin_loop ( ZEND_FREE , & expr_node )"	4016:1:115540:115578	3936440	9	True				
ANR	3936528	CallExpression	"zend_begin_loop ( ZEND_FREE , & expr_node )"		3936440	0					
ANR	3936529	Callee	zend_begin_loop		3936440	0					
ANR	3936530	Identifier	zend_begin_loop		3936440	0					
ANR	3936531	ArgumentList	ZEND_FREE		3936440	1					
ANR	3936532	Argument	ZEND_FREE		3936440	0					
ANR	3936533	Identifier	ZEND_FREE		3936440	0					
ANR	3936534	Argument	& expr_node		3936440	1					
ANR	3936535	UnaryOperationExpression	& expr_node		3936440	0					
ANR	3936536	UnaryOperator	&		3936440	0					
ANR	3936537	Identifier	expr_node		3936440	1					
ANR	3936538	ExpressionStatement	case_node . op_type = IS_TMP_VAR	4018:1:115582:115612	3936440	10	True				
ANR	3936539	AssignmentExpression	case_node . op_type = IS_TMP_VAR		3936440	0		=			
ANR	3936540	MemberAccess	case_node . op_type		3936440	0					
ANR	3936541	Identifier	case_node		3936440	0					
ANR	3936542	Identifier	op_type		3936440	1					
ANR	3936543	Identifier	IS_TMP_VAR		3936440	1					
ANR	3936544	ExpressionStatement	case_node . u . op . var = get_temporary_variable ( CG ( active_op_array ) )	4019:1:115615:115679	3936440	11	True				
ANR	3936545	AssignmentExpression	case_node . u . op . var = get_temporary_variable ( CG ( active_op_array ) )		3936440	0		=			
ANR	3936546	MemberAccess	case_node . u . op . var		3936440	0					
ANR	3936547	MemberAccess	case_node . u . op		3936440	0					
ANR	3936548	MemberAccess	case_node . u		3936440	0					
ANR	3936549	Identifier	case_node		3936440	0					
ANR	3936550	Identifier	u		3936440	1					
ANR	3936551	Identifier	op		3936440	1					
ANR	3936552	Identifier	var		3936440	1					
ANR	3936553	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3936440	1					
ANR	3936554	Callee	get_temporary_variable		3936440	0					
ANR	3936555	Identifier	get_temporary_variable		3936440	0					
ANR	3936556	ArgumentList	CG ( active_op_array )		3936440	1					
ANR	3936557	Argument	CG ( active_op_array )		3936440	0					
ANR	3936558	CallExpression	CG ( active_op_array )		3936440	0					
ANR	3936559	Callee	CG		3936440	0					
ANR	3936560	Identifier	CG		3936440	0					
ANR	3936561	ArgumentList	active_op_array		3936440	1					
ANR	3936562	Argument	active_op_array		3936440	0					
ANR	3936563	Identifier	active_op_array		3936440	0					
ANR	3936564	ForStatement	for ( i = 0 ; i < cases -> children ; ++ i )		3936440	12					
ANR	3936565	ForInit	i = 0 ;	4021:6:115688:115693	3936440	0	True				
ANR	3936566	AssignmentExpression	i = 0		3936440	0		=			
ANR	3936567	Identifier	i		3936440	0					
ANR	3936568	PrimaryExpression	0		3936440	1					
ANR	3936569	Condition	i < cases -> children	4021:13:115695:115713	3936440	1	True				
ANR	3936570	RelationalExpression	i < cases -> children		3936440	0		<			
ANR	3936571	Identifier	i		3936440	0					
ANR	3936572	PtrMemberAccess	cases -> children		3936440	1					
ANR	3936573	Identifier	cases		3936440	0					
ANR	3936574	Identifier	children		3936440	1					
ANR	3936575	UnaryExpression	++ i	4021:34:115716:115718	3936440	2	True				
ANR	3936576	IncDec	++		3936440	0					
ANR	3936577	Identifier	i		3936440	1					
ANR	3936578	CompoundStatement		23:2:611:626	3936440	3					
ANR	3936579	IdentifierDeclStatement	zend_ast * case_ast = cases -> child [ i ] ;	4022:2:115725:115761	3936440	0	True				
ANR	3936580	IdentifierDecl	* case_ast = cases -> child [ i ]		3936440	0					
ANR	3936581	IdentifierDeclType	zend_ast *		3936440	0					
ANR	3936582	Identifier	case_ast		3936440	1					
ANR	3936583	AssignmentExpression	* case_ast = cases -> child [ i ]		3936440	2		=			
ANR	3936584	Identifier	case_ast		3936440	0					
ANR	3936585	ArrayIndexing	cases -> child [ i ]		3936440	1					
ANR	3936586	PtrMemberAccess	cases -> child		3936440	0					
ANR	3936587	Identifier	cases		3936440	0					
ANR	3936588	Identifier	child		3936440	1					
ANR	3936589	Identifier	i		3936440	1					
ANR	3936590	IdentifierDeclStatement	zend_ast * cond_ast = case_ast -> child [ 0 ] ;	4023:2:115765:115804	3936440	1	True				
ANR	3936591	IdentifierDecl	* cond_ast = case_ast -> child [ 0 ]		3936440	0					
ANR	3936592	IdentifierDeclType	zend_ast *		3936440	0					
ANR	3936593	Identifier	cond_ast		3936440	1					
ANR	3936594	AssignmentExpression	* cond_ast = case_ast -> child [ 0 ]		3936440	2		=			
ANR	3936595	Identifier	cond_ast		3936440	0					
ANR	3936596	ArrayIndexing	case_ast -> child [ 0 ]		3936440	1					
ANR	3936597	PtrMemberAccess	case_ast -> child		3936440	0					
ANR	3936598	Identifier	case_ast		3936440	0					
ANR	3936599	Identifier	child		3936440	1					
ANR	3936600	PrimaryExpression	0		3936440	1					
ANR	3936601	IdentifierDeclStatement	znode cond_node ;	4024:2:115808:115823	3936440	2	True				
ANR	3936602	IdentifierDecl	cond_node		3936440	0					
ANR	3936603	IdentifierDeclType	znode		3936440	0					
ANR	3936604	Identifier	cond_node		3936440	1					
ANR	3936605	IfStatement	if ( ! cond_ast )		3936440	3					
ANR	3936606	Condition	! cond_ast	4026:6:115832:115840	3936440	0	True				
ANR	3936607	UnaryOperationExpression	! cond_ast		3936440	0					
ANR	3936608	UnaryOperator	!		3936440	0					
ANR	3936609	Identifier	cond_ast		3936440	1					
ANR	3936610	CompoundStatement		25:17:646:646	3936440	1					
ANR	3936611	IfStatement	if ( has_default_case )		3936440	0					
ANR	3936612	Condition	has_default_case	4027:7:115852:115867	3936440	0	True				
ANR	3936613	Identifier	has_default_case		3936440	0					
ANR	3936614	CompoundStatement		26:25:673:673	3936440	1					
ANR	3936615	ExpressionStatement	CG ( zend_lineno ) = case_ast -> lineno	4028:4:115876:115910	3936440	0	True				
ANR	3936616	AssignmentExpression	CG ( zend_lineno ) = case_ast -> lineno		3936440	0		=			
ANR	3936617	CallExpression	CG ( zend_lineno )		3936440	0					
ANR	3936618	Callee	CG		3936440	0					
ANR	3936619	Identifier	CG		3936440	0					
ANR	3936620	ArgumentList	zend_lineno		3936440	1					
ANR	3936621	Argument	zend_lineno		3936440	0					
ANR	3936622	Identifier	zend_lineno		3936440	0					
ANR	3936623	PtrMemberAccess	case_ast -> lineno		3936440	1					
ANR	3936624	Identifier	case_ast		3936440	0					
ANR	3936625	Identifier	lineno		3936440	1					
ANR	3936626	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Switch statements may only contain one default clause"" )"	4029:4:115916:116014	3936440	1	True				
ANR	3936627	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Switch statements may only contain one default clause"" )"		3936440	0					
ANR	3936628	Callee	zend_error_noreturn		3936440	0					
ANR	3936629	Identifier	zend_error_noreturn		3936440	0					
ANR	3936630	ArgumentList	E_COMPILE_ERROR		3936440	1					
ANR	3936631	Argument	E_COMPILE_ERROR		3936440	0					
ANR	3936632	Identifier	E_COMPILE_ERROR		3936440	0					
ANR	3936633	Argument	"""Switch statements may only contain one default clause"""		3936440	1					
ANR	3936634	PrimaryExpression	"""Switch statements may only contain one default clause"""		3936440	0					
ANR	3936635	ExpressionStatement	has_default_case = 1	4032:3:116024:116044	3936440	1	True				
ANR	3936636	AssignmentExpression	has_default_case = 1		3936440	0		=			
ANR	3936637	Identifier	has_default_case		3936440	0					
ANR	3936638	PrimaryExpression	1		3936440	1					
ANR	3936639	ContinueStatement	continue ;	4033:3:116049:116057	3936440	2	True				
ANR	3936640	ExpressionStatement	"zend_compile_expr ( & cond_node , cond_ast )"	4036:2:116066:116105	3936440	4	True				
ANR	3936641	CallExpression	"zend_compile_expr ( & cond_node , cond_ast )"		3936440	0					
ANR	3936642	Callee	zend_compile_expr		3936440	0					
ANR	3936643	Identifier	zend_compile_expr		3936440	0					
ANR	3936644	ArgumentList	& cond_node		3936440	1					
ANR	3936645	Argument	& cond_node		3936440	0					
ANR	3936646	UnaryOperationExpression	& cond_node		3936440	0					
ANR	3936647	UnaryOperator	&		3936440	0					
ANR	3936648	Identifier	cond_node		3936440	1					
ANR	3936649	Argument	cond_ast		3936440	1					
ANR	3936650	Identifier	cond_ast		3936440	0					
ANR	3936651	IfStatement	if ( expr_node . op_type == IS_CONST && Z_TYPE ( expr_node . u . constant ) == IS_FALSE )		3936440	5					
ANR	3936652	Condition	expr_node . op_type == IS_CONST && Z_TYPE ( expr_node . u . constant ) == IS_FALSE	4038:6:116114:116189	3936440	0	True				
ANR	3936653	AndExpression	expr_node . op_type == IS_CONST && Z_TYPE ( expr_node . u . constant ) == IS_FALSE		3936440	0		&&			
ANR	3936654	EqualityExpression	expr_node . op_type == IS_CONST		3936440	0		==			
ANR	3936655	MemberAccess	expr_node . op_type		3936440	0					
ANR	3936656	Identifier	expr_node		3936440	0					
ANR	3936657	Identifier	op_type		3936440	1					
ANR	3936658	Identifier	IS_CONST		3936440	1					
ANR	3936659	EqualityExpression	Z_TYPE ( expr_node . u . constant ) == IS_FALSE		3936440	1		==			
ANR	3936660	CallExpression	Z_TYPE ( expr_node . u . constant )		3936440	0					
ANR	3936661	Callee	Z_TYPE		3936440	0					
ANR	3936662	Identifier	Z_TYPE		3936440	0					
ANR	3936663	ArgumentList	expr_node . u . constant		3936440	1					
ANR	3936664	Argument	expr_node . u . constant		3936440	0					
ANR	3936665	MemberAccess	expr_node . u . constant		3936440	0					
ANR	3936666	MemberAccess	expr_node . u		3936440	0					
ANR	3936667	Identifier	expr_node		3936440	0					
ANR	3936668	Identifier	u		3936440	1					
ANR	3936669	Identifier	constant		3936440	1					
ANR	3936670	Identifier	IS_FALSE		3936440	1					
ANR	3936671	CompoundStatement		38:48:995:995	3936440	1					
ANR	3936672	ExpressionStatement	"jmpnz_opnums [ i ] = zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"	4040:3:116197:116260	3936440	0	True				
ANR	3936673	AssignmentExpression	"jmpnz_opnums [ i ] = zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"		3936440	0		=			
ANR	3936674	ArrayIndexing	jmpnz_opnums [ i ]		3936440	0					
ANR	3936675	Identifier	jmpnz_opnums		3936440	0					
ANR	3936676	Identifier	i		3936440	1					
ANR	3936677	CallExpression	"zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"		3936440	1					
ANR	3936678	Callee	zend_emit_cond_jump		3936440	0					
ANR	3936679	Identifier	zend_emit_cond_jump		3936440	0					
ANR	3936680	ArgumentList	ZEND_JMPZ		3936440	1					
ANR	3936681	Argument	ZEND_JMPZ		3936440	0					
ANR	3936682	Identifier	ZEND_JMPZ		3936440	0					
ANR	3936683	Argument	& cond_node		3936440	1					
ANR	3936684	UnaryOperationExpression	& cond_node		3936440	0					
ANR	3936685	UnaryOperator	&		3936440	0					
ANR	3936686	Identifier	cond_node		3936440	1					
ANR	3936687	Argument	0		3936440	2					
ANR	3936688	PrimaryExpression	0		3936440	0					
ANR	3936689	ElseStatement	else		3936440	0					
ANR	3936690	IfStatement	if ( expr_node . op_type == IS_CONST && Z_TYPE ( expr_node . u . constant ) == IS_TRUE )		3936440	0					
ANR	3936691	Condition	expr_node . op_type == IS_CONST && Z_TYPE ( expr_node . u . constant ) == IS_TRUE	4041:13:116275:116349	3936440	0	True				
ANR	3936692	AndExpression	expr_node . op_type == IS_CONST && Z_TYPE ( expr_node . u . constant ) == IS_TRUE		3936440	0		&&			
ANR	3936693	EqualityExpression	expr_node . op_type == IS_CONST		3936440	0		==			
ANR	3936694	MemberAccess	expr_node . op_type		3936440	0					
ANR	3936695	Identifier	expr_node		3936440	0					
ANR	3936696	Identifier	op_type		3936440	1					
ANR	3936697	Identifier	IS_CONST		3936440	1					
ANR	3936698	EqualityExpression	Z_TYPE ( expr_node . u . constant ) == IS_TRUE		3936440	1		==			
ANR	3936699	CallExpression	Z_TYPE ( expr_node . u . constant )		3936440	0					
ANR	3936700	Callee	Z_TYPE		3936440	0					
ANR	3936701	Identifier	Z_TYPE		3936440	0					
ANR	3936702	ArgumentList	expr_node . u . constant		3936440	1					
ANR	3936703	Argument	expr_node . u . constant		3936440	0					
ANR	3936704	MemberAccess	expr_node . u . constant		3936440	0					
ANR	3936705	MemberAccess	expr_node . u		3936440	0					
ANR	3936706	Identifier	expr_node		3936440	0					
ANR	3936707	Identifier	u		3936440	1					
ANR	3936708	Identifier	constant		3936440	1					
ANR	3936709	Identifier	IS_TRUE		3936440	1					
ANR	3936710	CompoundStatement		41:47:1155:1155	3936440	1					
ANR	3936711	ExpressionStatement	"jmpnz_opnums [ i ] = zend_emit_cond_jump ( ZEND_JMPNZ , & cond_node , 0 )"	4043:3:116357:116421	3936440	0	True				
ANR	3936712	AssignmentExpression	"jmpnz_opnums [ i ] = zend_emit_cond_jump ( ZEND_JMPNZ , & cond_node , 0 )"		3936440	0		=			
ANR	3936713	ArrayIndexing	jmpnz_opnums [ i ]		3936440	0					
ANR	3936714	Identifier	jmpnz_opnums		3936440	0					
ANR	3936715	Identifier	i		3936440	1					
ANR	3936716	CallExpression	"zend_emit_cond_jump ( ZEND_JMPNZ , & cond_node , 0 )"		3936440	1					
ANR	3936717	Callee	zend_emit_cond_jump		3936440	0					
ANR	3936718	Identifier	zend_emit_cond_jump		3936440	0					
ANR	3936719	ArgumentList	ZEND_JMPNZ		3936440	1					
ANR	3936720	Argument	ZEND_JMPNZ		3936440	0					
ANR	3936721	Identifier	ZEND_JMPNZ		3936440	0					
ANR	3936722	Argument	& cond_node		3936440	1					
ANR	3936723	UnaryOperationExpression	& cond_node		3936440	0					
ANR	3936724	UnaryOperator	&		3936440	0					
ANR	3936725	Identifier	cond_node		3936440	1					
ANR	3936726	Argument	0		3936440	2					
ANR	3936727	PrimaryExpression	0		3936440	0					
ANR	3936728	ElseStatement	else		3936440	0					
ANR	3936729	CompoundStatement		43:9:1235:1235	3936440	0					
ANR	3936730	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_CASE , & expr_node , & cond_node )"	4045:3:116443:116505	3936440	0	True				
ANR	3936731	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_CASE , & expr_node , & cond_node )"		3936440	0		=			
ANR	3936732	Identifier	opline		3936440	0					
ANR	3936733	CallExpression	"zend_emit_op ( NULL , ZEND_CASE , & expr_node , & cond_node )"		3936440	1					
ANR	3936734	Callee	zend_emit_op		3936440	0					
ANR	3936735	Identifier	zend_emit_op		3936440	0					
ANR	3936736	ArgumentList	NULL		3936440	1					
ANR	3936737	Argument	NULL		3936440	0					
ANR	3936738	Identifier	NULL		3936440	0					
ANR	3936739	Argument	ZEND_CASE		3936440	1					
ANR	3936740	Identifier	ZEND_CASE		3936440	0					
ANR	3936741	Argument	& expr_node		3936440	2					
ANR	3936742	UnaryOperationExpression	& expr_node		3936440	0					
ANR	3936743	UnaryOperator	&		3936440	0					
ANR	3936744	Identifier	expr_node		3936440	1					
ANR	3936745	Argument	& cond_node		3936440	3					
ANR	3936746	UnaryOperationExpression	& cond_node		3936440	0					
ANR	3936747	UnaryOperator	&		3936440	0					
ANR	3936748	Identifier	cond_node		3936440	1					
ANR	3936749	ExpressionStatement	"SET_NODE ( opline -> result , & case_node )"	4046:3:116510:116546	3936440	1	True				
ANR	3936750	CallExpression	"SET_NODE ( opline -> result , & case_node )"		3936440	0					
ANR	3936751	Callee	SET_NODE		3936440	0					
ANR	3936752	Identifier	SET_NODE		3936440	0					
ANR	3936753	ArgumentList	opline -> result		3936440	1					
ANR	3936754	Argument	opline -> result		3936440	0					
ANR	3936755	PtrMemberAccess	opline -> result		3936440	0					
ANR	3936756	Identifier	opline		3936440	0					
ANR	3936757	Identifier	result		3936440	1					
ANR	3936758	Argument	& case_node		3936440	1					
ANR	3936759	UnaryOperationExpression	& case_node		3936440	0					
ANR	3936760	UnaryOperator	&		3936440	0					
ANR	3936761	Identifier	case_node		3936440	1					
ANR	3936762	IfStatement	if ( opline -> op1_type == IS_CONST )		3936440	2					
ANR	3936763	Condition	opline -> op1_type == IS_CONST	4047:7:116555:116582	3936440	0	True				
ANR	3936764	EqualityExpression	opline -> op1_type == IS_CONST		3936440	0		==			
ANR	3936765	PtrMemberAccess	opline -> op1_type		3936440	0					
ANR	3936766	Identifier	opline		3936440	0					
ANR	3936767	Identifier	op1_type		3936440	1					
ANR	3936768	Identifier	IS_CONST		3936440	1					
ANR	3936769	CompoundStatement		46:37:1388:1388	3936440	1					
ANR	3936770	ExpressionStatement	zval_copy_ctor ( CT_CONSTANT ( opline -> op1 ) )	4048:4:116591:116631	3936440	0	True				
ANR	3936771	CallExpression	zval_copy_ctor ( CT_CONSTANT ( opline -> op1 ) )		3936440	0					
ANR	3936772	Callee	zval_copy_ctor		3936440	0					
ANR	3936773	Identifier	zval_copy_ctor		3936440	0					
ANR	3936774	ArgumentList	CT_CONSTANT ( opline -> op1 )		3936440	1					
ANR	3936775	Argument	CT_CONSTANT ( opline -> op1 )		3936440	0					
ANR	3936776	CallExpression	CT_CONSTANT ( opline -> op1 )		3936440	0					
ANR	3936777	Callee	CT_CONSTANT		3936440	0					
ANR	3936778	Identifier	CT_CONSTANT		3936440	0					
ANR	3936779	ArgumentList	opline -> op1		3936440	1					
ANR	3936780	Argument	opline -> op1		3936440	0					
ANR	3936781	PtrMemberAccess	opline -> op1		3936440	0					
ANR	3936782	Identifier	opline		3936440	0					
ANR	3936783	Identifier	op1		3936440	1					
ANR	3936784	ExpressionStatement	"jmpnz_opnums [ i ] = zend_emit_cond_jump ( ZEND_JMPNZ , & case_node , 0 )"	4051:3:116642:116706	3936440	3	True				
ANR	3936785	AssignmentExpression	"jmpnz_opnums [ i ] = zend_emit_cond_jump ( ZEND_JMPNZ , & case_node , 0 )"		3936440	0		=			
ANR	3936786	ArrayIndexing	jmpnz_opnums [ i ]		3936440	0					
ANR	3936787	Identifier	jmpnz_opnums		3936440	0					
ANR	3936788	Identifier	i		3936440	1					
ANR	3936789	CallExpression	"zend_emit_cond_jump ( ZEND_JMPNZ , & case_node , 0 )"		3936440	1					
ANR	3936790	Callee	zend_emit_cond_jump		3936440	0					
ANR	3936791	Identifier	zend_emit_cond_jump		3936440	0					
ANR	3936792	ArgumentList	ZEND_JMPNZ		3936440	1					
ANR	3936793	Argument	ZEND_JMPNZ		3936440	0					
ANR	3936794	Identifier	ZEND_JMPNZ		3936440	0					
ANR	3936795	Argument	& case_node		3936440	1					
ANR	3936796	UnaryOperationExpression	& case_node		3936440	0					
ANR	3936797	UnaryOperator	&		3936440	0					
ANR	3936798	Identifier	case_node		3936440	1					
ANR	3936799	Argument	0		3936440	2					
ANR	3936800	PrimaryExpression	0		3936440	0					
ANR	3936801	ExpressionStatement	opnum_default_jmp = zend_emit_jump ( 0 )	4055:1:116717:116754	3936440	13	True				
ANR	3936802	AssignmentExpression	opnum_default_jmp = zend_emit_jump ( 0 )		3936440	0		=			
ANR	3936803	Identifier	opnum_default_jmp		3936440	0					
ANR	3936804	CallExpression	zend_emit_jump ( 0 )		3936440	1					
ANR	3936805	Callee	zend_emit_jump		3936440	0					
ANR	3936806	Identifier	zend_emit_jump		3936440	0					
ANR	3936807	ArgumentList	0		3936440	1					
ANR	3936808	Argument	0		3936440	0					
ANR	3936809	PrimaryExpression	0		3936440	0					
ANR	3936810	ForStatement	for ( i = 0 ; i < cases -> children ; ++ i )		3936440	14					
ANR	3936811	ForInit	i = 0 ;	4057:6:116763:116768	3936440	0	True				
ANR	3936812	AssignmentExpression	i = 0		3936440	0		=			
ANR	3936813	Identifier	i		3936440	0					
ANR	3936814	PrimaryExpression	0		3936440	1					
ANR	3936815	Condition	i < cases -> children	4057:13:116770:116788	3936440	1	True				
ANR	3936816	RelationalExpression	i < cases -> children		3936440	0		<			
ANR	3936817	Identifier	i		3936440	0					
ANR	3936818	PtrMemberAccess	cases -> children		3936440	1					
ANR	3936819	Identifier	cases		3936440	0					
ANR	3936820	Identifier	children		3936440	1					
ANR	3936821	UnaryExpression	++ i	4057:34:116791:116793	3936440	2	True				
ANR	3936822	IncDec	++		3936440	0					
ANR	3936823	Identifier	i		3936440	1					
ANR	3936824	CompoundStatement		59:2:1686:1725	3936440	3					
ANR	3936825	IdentifierDeclStatement	zend_ast * case_ast = cases -> child [ i ] ;	4058:2:116800:116836	3936440	0	True				
ANR	3936826	IdentifierDecl	* case_ast = cases -> child [ i ]		3936440	0					
ANR	3936827	IdentifierDeclType	zend_ast *		3936440	0					
ANR	3936828	Identifier	case_ast		3936440	1					
ANR	3936829	AssignmentExpression	* case_ast = cases -> child [ i ]		3936440	2		=			
ANR	3936830	Identifier	case_ast		3936440	0					
ANR	3936831	ArrayIndexing	cases -> child [ i ]		3936440	1					
ANR	3936832	PtrMemberAccess	cases -> child		3936440	0					
ANR	3936833	Identifier	cases		3936440	0					
ANR	3936834	Identifier	child		3936440	1					
ANR	3936835	Identifier	i		3936440	1					
ANR	3936836	IdentifierDeclStatement	zend_ast * cond_ast = case_ast -> child [ 0 ] ;	4059:2:116840:116879	3936440	1	True				
ANR	3936837	IdentifierDecl	* cond_ast = case_ast -> child [ 0 ]		3936440	0					
ANR	3936838	IdentifierDeclType	zend_ast *		3936440	0					
ANR	3936839	Identifier	cond_ast		3936440	1					
ANR	3936840	AssignmentExpression	* cond_ast = case_ast -> child [ 0 ]		3936440	2		=			
ANR	3936841	Identifier	cond_ast		3936440	0					
ANR	3936842	ArrayIndexing	case_ast -> child [ 0 ]		3936440	1					
ANR	3936843	PtrMemberAccess	case_ast -> child		3936440	0					
ANR	3936844	Identifier	case_ast		3936440	0					
ANR	3936845	Identifier	child		3936440	1					
ANR	3936846	PrimaryExpression	0		3936440	1					
ANR	3936847	IdentifierDeclStatement	zend_ast * stmt_ast = case_ast -> child [ 1 ] ;	4060:2:116883:116922	3936440	2	True				
ANR	3936848	IdentifierDecl	* stmt_ast = case_ast -> child [ 1 ]		3936440	0					
ANR	3936849	IdentifierDeclType	zend_ast *		3936440	0					
ANR	3936850	Identifier	stmt_ast		3936440	1					
ANR	3936851	AssignmentExpression	* stmt_ast = case_ast -> child [ 1 ]		3936440	2		=			
ANR	3936852	Identifier	stmt_ast		3936440	0					
ANR	3936853	ArrayIndexing	case_ast -> child [ 1 ]		3936440	1					
ANR	3936854	PtrMemberAccess	case_ast -> child		3936440	0					
ANR	3936855	Identifier	case_ast		3936440	0					
ANR	3936856	Identifier	child		3936440	1					
ANR	3936857	PrimaryExpression	1		3936440	1					
ANR	3936858	IfStatement	if ( cond_ast )		3936440	3					
ANR	3936859	Condition	cond_ast	4062:6:116931:116938	3936440	0	True				
ANR	3936860	Identifier	cond_ast		3936440	0					
ANR	3936861	CompoundStatement		61:16:1744:1744	3936440	1					
ANR	3936862	ExpressionStatement	zend_update_jump_target_to_next ( jmpnz_opnums [ i ] )	4063:3:116946:116994	3936440	0	True				
ANR	3936863	CallExpression	zend_update_jump_target_to_next ( jmpnz_opnums [ i ] )		3936440	0					
ANR	3936864	Callee	zend_update_jump_target_to_next		3936440	0					
ANR	3936865	Identifier	zend_update_jump_target_to_next		3936440	0					
ANR	3936866	ArgumentList	jmpnz_opnums [ i ]		3936440	1					
ANR	3936867	Argument	jmpnz_opnums [ i ]		3936440	0					
ANR	3936868	ArrayIndexing	jmpnz_opnums [ i ]		3936440	0					
ANR	3936869	Identifier	jmpnz_opnums		3936440	0					
ANR	3936870	Identifier	i		3936440	1					
ANR	3936871	ElseStatement	else		3936440	0					
ANR	3936872	CompoundStatement		63:9:1808:1808	3936440	0					
ANR	3936873	ExpressionStatement	zend_update_jump_target_to_next ( opnum_default_jmp )	4065:3:117010:117060	3936440	0	True				
ANR	3936874	CallExpression	zend_update_jump_target_to_next ( opnum_default_jmp )		3936440	0					
ANR	3936875	Callee	zend_update_jump_target_to_next		3936440	0					
ANR	3936876	Identifier	zend_update_jump_target_to_next		3936440	0					
ANR	3936877	ArgumentList	opnum_default_jmp		3936440	1					
ANR	3936878	Argument	opnum_default_jmp		3936440	0					
ANR	3936879	Identifier	opnum_default_jmp		3936440	0					
ANR	3936880	ExpressionStatement	zend_compile_stmt ( stmt_ast )	4068:2:117069:117096	3936440	4	True				
ANR	3936881	CallExpression	zend_compile_stmt ( stmt_ast )		3936440	0					
ANR	3936882	Callee	zend_compile_stmt		3936440	0					
ANR	3936883	Identifier	zend_compile_stmt		3936440	0					
ANR	3936884	ArgumentList	stmt_ast		3936440	1					
ANR	3936885	Argument	stmt_ast		3936440	0					
ANR	3936886	Identifier	stmt_ast		3936440	0					
ANR	3936887	IfStatement	if ( ! has_default_case )		3936440	15					
ANR	3936888	Condition	! has_default_case	4071:5:117107:117123	3936440	0	True				
ANR	3936889	UnaryOperationExpression	! has_default_case		3936440	0					
ANR	3936890	UnaryOperator	!		3936440	0					
ANR	3936891	Identifier	has_default_case		3936440	1					
ANR	3936892	CompoundStatement		70:24:1929:1929	3936440	1					
ANR	3936893	ExpressionStatement	zend_update_jump_target_to_next ( opnum_default_jmp )	4072:2:117130:117180	3936440	0	True				
ANR	3936894	CallExpression	zend_update_jump_target_to_next ( opnum_default_jmp )		3936440	0					
ANR	3936895	Callee	zend_update_jump_target_to_next		3936440	0					
ANR	3936896	Identifier	zend_update_jump_target_to_next		3936440	0					
ANR	3936897	ArgumentList	opnum_default_jmp		3936440	1					
ANR	3936898	Argument	opnum_default_jmp		3936440	0					
ANR	3936899	Identifier	opnum_default_jmp		3936440	0					
ANR	3936900	ExpressionStatement	zend_end_loop ( get_next_op_number ( CG ( active_op_array ) ) )	4075:1:117187:117241	3936440	16	True				
ANR	3936901	CallExpression	zend_end_loop ( get_next_op_number ( CG ( active_op_array ) ) )		3936440	0					
ANR	3936902	Callee	zend_end_loop		3936440	0					
ANR	3936903	Identifier	zend_end_loop		3936440	0					
ANR	3936904	ArgumentList	get_next_op_number ( CG ( active_op_array ) )		3936440	1					
ANR	3936905	Argument	get_next_op_number ( CG ( active_op_array ) )		3936440	0					
ANR	3936906	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3936440	0					
ANR	3936907	Callee	get_next_op_number		3936440	0					
ANR	3936908	Identifier	get_next_op_number		3936440	0					
ANR	3936909	ArgumentList	CG ( active_op_array )		3936440	1					
ANR	3936910	Argument	CG ( active_op_array )		3936440	0					
ANR	3936911	CallExpression	CG ( active_op_array )		3936440	0					
ANR	3936912	Callee	CG		3936440	0					
ANR	3936913	Identifier	CG		3936440	0					
ANR	3936914	ArgumentList	active_op_array		3936440	1					
ANR	3936915	Argument	active_op_array		3936440	0					
ANR	3936916	Identifier	active_op_array		3936440	0					
ANR	3936917	IfStatement	if ( expr_node . op_type == IS_VAR || expr_node . op_type == IS_TMP_VAR )		3936440	17					
ANR	3936918	Condition	expr_node . op_type == IS_VAR || expr_node . op_type == IS_TMP_VAR	4077:5:117249:117310	3936440	0	True				
ANR	3936919	OrExpression	expr_node . op_type == IS_VAR || expr_node . op_type == IS_TMP_VAR		3936440	0		||			
ANR	3936920	EqualityExpression	expr_node . op_type == IS_VAR		3936440	0		==			
ANR	3936921	MemberAccess	expr_node . op_type		3936440	0					
ANR	3936922	Identifier	expr_node		3936440	0					
ANR	3936923	Identifier	op_type		3936440	1					
ANR	3936924	Identifier	IS_VAR		3936440	1					
ANR	3936925	EqualityExpression	expr_node . op_type == IS_TMP_VAR		3936440	1		==			
ANR	3936926	MemberAccess	expr_node . op_type		3936440	0					
ANR	3936927	Identifier	expr_node		3936440	0					
ANR	3936928	Identifier	op_type		3936440	1					
ANR	3936929	Identifier	IS_TMP_VAR		3936440	1					
ANR	3936930	CompoundStatement		76:69:2116:2116	3936440	1					
ANR	3936931	ExpressionStatement	"zend_emit_op ( NULL , ZEND_FREE , & expr_node , NULL )"	4078:2:117317:117364	3936440	0	True				
ANR	3936932	CallExpression	"zend_emit_op ( NULL , ZEND_FREE , & expr_node , NULL )"		3936440	0					
ANR	3936933	Callee	zend_emit_op		3936440	0					
ANR	3936934	Identifier	zend_emit_op		3936440	0					
ANR	3936935	ArgumentList	NULL		3936440	1					
ANR	3936936	Argument	NULL		3936440	0					
ANR	3936937	Identifier	NULL		3936440	0					
ANR	3936938	Argument	ZEND_FREE		3936440	1					
ANR	3936939	Identifier	ZEND_FREE		3936440	0					
ANR	3936940	Argument	& expr_node		3936440	2					
ANR	3936941	UnaryOperationExpression	& expr_node		3936440	0					
ANR	3936942	UnaryOperator	&		3936440	0					
ANR	3936943	Identifier	expr_node		3936440	1					
ANR	3936944	Argument	NULL		3936440	3					
ANR	3936945	Identifier	NULL		3936440	0					
ANR	3936946	ElseStatement	else		3936440	0					
ANR	3936947	IfStatement	if ( expr_node . op_type == IS_CONST )		3936440	0					
ANR	3936948	Condition	expr_node . op_type == IS_CONST	4079:12:117378:117406	3936440	0	True				
ANR	3936949	EqualityExpression	expr_node . op_type == IS_CONST		3936440	0		==			
ANR	3936950	MemberAccess	expr_node . op_type		3936440	0					
ANR	3936951	Identifier	expr_node		3936440	0					
ANR	3936952	Identifier	op_type		3936440	1					
ANR	3936953	Identifier	IS_CONST		3936440	1					
ANR	3936954	CompoundStatement		78:43:2212:2212	3936440	1					
ANR	3936955	ExpressionStatement	zval_dtor ( & expr_node . u . constant )	4080:2:117413:117445	3936440	0	True				
ANR	3936956	CallExpression	zval_dtor ( & expr_node . u . constant )		3936440	0					
ANR	3936957	Callee	zval_dtor		3936440	0					
ANR	3936958	Identifier	zval_dtor		3936440	0					
ANR	3936959	ArgumentList	& expr_node . u . constant		3936440	1					
ANR	3936960	Argument	& expr_node . u . constant		3936440	0					
ANR	3936961	UnaryOperationExpression	& expr_node . u . constant		3936440	0					
ANR	3936962	UnaryOperator	&		3936440	0					
ANR	3936963	MemberAccess	expr_node . u . constant		3936440	1					
ANR	3936964	MemberAccess	expr_node . u		3936440	0					
ANR	3936965	Identifier	expr_node		3936440	0					
ANR	3936966	Identifier	u		3936440	1					
ANR	3936967	Identifier	constant		3936440	1					
ANR	3936968	ExpressionStatement	efree ( jmpnz_opnums )	4083:1:117452:117471	3936440	18	True				
ANR	3936969	CallExpression	efree ( jmpnz_opnums )		3936440	0					
ANR	3936970	Callee	efree		3936440	0					
ANR	3936971	Identifier	efree		3936440	0					
ANR	3936972	ArgumentList	jmpnz_opnums		3936440	1					
ANR	3936973	Argument	jmpnz_opnums		3936440	0					
ANR	3936974	Identifier	jmpnz_opnums		3936440	0					
ANR	3936975	ReturnType	void		3936440	1					
ANR	3936976	Identifier	zend_compile_switch		3936440	2					
ANR	3936977	ParameterList	zend_ast * ast		3936440	3					
ANR	3936978	Parameter	zend_ast * ast	4001:25:115171:115183	3936440	0	True				
ANR	3936979	ParameterType	zend_ast *		3936440	0					
ANR	3936980	Identifier	ast		3936440	1					
ANR	3936981	CFGEntryNode	ENTRY		3936440		True				
ANR	3936982	CFGExitNode	EXIT		3936440		True				
ANR	3936983	Symbol	zend_emit_jump		3936440						
ANR	3936984	Symbol	ZEND_FREE		3936440						
ANR	3936985	Symbol	ZEND_JMPNZ		3936440						
ANR	3936986	Symbol	stmt_ast		3936440						
ANR	3936987	Symbol	ast		3936440						
ANR	3936988	Symbol	case_node . u . op		3936440						
ANR	3936989	Symbol	case_node . op_type		3936440						
ANR	3936990	Symbol	E_COMPILE_ERROR		3936440						
ANR	3936991	Symbol	get_temporary_variable		3936440						
ANR	3936992	Symbol	case_node . u . op . var		3936440						
ANR	3936993	Symbol	Z_TYPE		3936440						
ANR	3936994	Symbol	jmpnz_opnums		3936440						
ANR	3936995	Symbol	opline -> result		3936440						
ANR	3936996	Symbol	* cases -> child		3936440						
ANR	3936997	Symbol	opline		3936440						
ANR	3936998	Symbol	CT_CONSTANT		3936440						
ANR	3936999	Symbol	opnum_default_jmp		3936440						
ANR	3937000	Symbol	zend_lineno		3936440						
ANR	3937001	Symbol	expr_node . u		3936440						
ANR	3937002	Symbol	case_ast -> lineno		3936440						
ANR	3937003	Symbol	IS_TMP_VAR		3936440						
ANR	3937004	Symbol	IS_CONST		3936440						
ANR	3937005	Symbol	NULL		3936440						
ANR	3937006	Symbol	ZEND_JMPZ		3936440						
ANR	3937007	Symbol	IS_TRUE		3936440						
ANR	3937008	Symbol	& case_node		3936440						
ANR	3937009	Symbol	opline -> op1_type		3936440						
ANR	3937010	Symbol	has_default_case		3936440						
ANR	3937011	Symbol	cond_ast		3936440						
ANR	3937012	Symbol	expr_node		3936440						
ANR	3937013	Symbol	& expr_node . u		3936440						
ANR	3937014	Symbol	* * cases		3936440						
ANR	3937015	Symbol	case_ast		3936440						
ANR	3937016	Symbol	* ast -> child		3936440						
ANR	3937017	Symbol	ast -> child		3936440						
ANR	3937018	Symbol	cases -> children		3936440						
ANR	3937019	Symbol	IS_VAR		3936440						
ANR	3937020	Symbol	cases -> child		3936440						
ANR	3937021	Symbol	& cond_node		3936440						
ANR	3937022	Symbol	zend_emit_op		3936440						
ANR	3937023	Symbol	* * case_ast		3936440						
ANR	3937024	Symbol	opline -> op1		3936440						
ANR	3937025	Symbol	ZEND_CASE		3936440						
ANR	3937026	Symbol	* case_ast -> child		3936440						
ANR	3937027	Symbol	case_node		3936440						
ANR	3937028	Symbol	* cases		3936440						
ANR	3937029	Symbol	& expr_node		3936440						
ANR	3937030	Symbol	* case_ast		3936440						
ANR	3937031	Symbol	* ast		3936440						
ANR	3937032	Symbol	* * ast		3936440						
ANR	3937033	Symbol	expr_node . op_type		3936440						
ANR	3937034	Symbol	zend_emit_cond_jump		3936440						
ANR	3937035	Symbol	IS_FALSE		3936440						
ANR	3937036	Symbol	cases		3936440						
ANR	3937037	Symbol	CG		3936440						
ANR	3937038	Symbol	active_op_array		3936440						
ANR	3937039	Symbol	cond_node		3936440						
ANR	3937040	Symbol	case_ast -> child		3936440						
ANR	3937041	Symbol	expr_node . u . constant		3936440						
ANR	3937042	Symbol	i		3936440						
ANR	3937043	Symbol	* jmpnz_opnums		3936440						
ANR	3937044	Symbol	expr_ast		3936440						
ANR	3937045	Symbol	& expr_node . u . constant		3936440						
ANR	3937046	Symbol	zend_ast_get_list		3936440						
ANR	3937047	Symbol	* i		3936440						
ANR	3937048	Symbol	* opline		3936440						
ANR	3937049	Symbol	case_node . u		3936440						
ANR	3937050	Symbol	safe_emalloc		3936440						
ANR	3937051	Symbol	get_next_op_number		3936440						
ANR	3937052	Function	zend_compile_try	4087:0:117486:121295							
ANR	3937053	FunctionDef	zend_compile_try (zend_ast * ast)		3937052	0					
ANR	3937054	CompoundStatement		4088:0:117533:121295	3937052	0					
ANR	3937055	IdentifierDeclStatement	zend_ast * try_ast = ast -> child [ 0 ] ;	4089:1:117536:117569	3937052	0	True				
ANR	3937056	IdentifierDecl	* try_ast = ast -> child [ 0 ]		3937052	0					
ANR	3937057	IdentifierDeclType	zend_ast *		3937052	0					
ANR	3937058	Identifier	try_ast		3937052	1					
ANR	3937059	AssignmentExpression	* try_ast = ast -> child [ 0 ]		3937052	2		=			
ANR	3937060	Identifier	try_ast		3937052	0					
ANR	3937061	ArrayIndexing	ast -> child [ 0 ]		3937052	1					
ANR	3937062	PtrMemberAccess	ast -> child		3937052	0					
ANR	3937063	Identifier	ast		3937052	0					
ANR	3937064	Identifier	child		3937052	1					
ANR	3937065	PrimaryExpression	0		3937052	1					
ANR	3937066	IdentifierDeclStatement	zend_ast_list * catches = zend_ast_get_list ( ast -> child [ 1 ] ) ;	4090:1:117572:117629	3937052	1	True				
ANR	3937067	IdentifierDecl	* catches = zend_ast_get_list ( ast -> child [ 1 ] )		3937052	0					
ANR	3937068	IdentifierDeclType	zend_ast_list *		3937052	0					
ANR	3937069	Identifier	catches		3937052	1					
ANR	3937070	AssignmentExpression	* catches = zend_ast_get_list ( ast -> child [ 1 ] )		3937052	2		=			
ANR	3937071	Identifier	catches		3937052	0					
ANR	3937072	CallExpression	zend_ast_get_list ( ast -> child [ 1 ] )		3937052	1					
ANR	3937073	Callee	zend_ast_get_list		3937052	0					
ANR	3937074	Identifier	zend_ast_get_list		3937052	0					
ANR	3937075	ArgumentList	ast -> child [ 1 ]		3937052	1					
ANR	3937076	Argument	ast -> child [ 1 ]		3937052	0					
ANR	3937077	ArrayIndexing	ast -> child [ 1 ]		3937052	0					
ANR	3937078	PtrMemberAccess	ast -> child		3937052	0					
ANR	3937079	Identifier	ast		3937052	0					
ANR	3937080	Identifier	child		3937052	1					
ANR	3937081	PrimaryExpression	1		3937052	1					
ANR	3937082	IdentifierDeclStatement	zend_ast * finally_ast = ast -> child [ 2 ] ;	4091:1:117632:117669	3937052	2	True				
ANR	3937083	IdentifierDecl	* finally_ast = ast -> child [ 2 ]		3937052	0					
ANR	3937084	IdentifierDeclType	zend_ast *		3937052	0					
ANR	3937085	Identifier	finally_ast		3937052	1					
ANR	3937086	AssignmentExpression	* finally_ast = ast -> child [ 2 ]		3937052	2		=			
ANR	3937087	Identifier	finally_ast		3937052	0					
ANR	3937088	ArrayIndexing	ast -> child [ 2 ]		3937052	1					
ANR	3937089	PtrMemberAccess	ast -> child		3937052	0					
ANR	3937090	Identifier	ast		3937052	0					
ANR	3937091	Identifier	child		3937052	1					
ANR	3937092	PrimaryExpression	2		3937052	1					
ANR	3937093	IdentifierDeclStatement	uint32_t i ;	4093:1:117673:117683	3937052	3	True				
ANR	3937094	IdentifierDecl	i		3937052	0					
ANR	3937095	IdentifierDeclType	uint32_t		3937052	0					
ANR	3937096	Identifier	i		3937052	1					
ANR	3937097	IdentifierDeclStatement	zend_op * opline ;	4094:1:117686:117701	3937052	4	True				
ANR	3937098	IdentifierDecl	* opline		3937052	0					
ANR	3937099	IdentifierDeclType	zend_op *		3937052	0					
ANR	3937100	Identifier	opline		3937052	1					
ANR	3937101	IdentifierDeclStatement	uint32_t try_catch_offset ;	4095:1:117704:117729	3937052	5	True				
ANR	3937102	IdentifierDecl	try_catch_offset		3937052	0					
ANR	3937103	IdentifierDeclType	uint32_t		3937052	0					
ANR	3937104	Identifier	try_catch_offset		3937052	1					
ANR	3937105	IdentifierDeclStatement	"uint32_t * jmp_opnums = safe_emalloc ( sizeof ( uint32_t ) , catches -> children , 0 ) ;"	4096:1:117732:117807	3937052	6	True				
ANR	3937106	IdentifierDecl	"* jmp_opnums = safe_emalloc ( sizeof ( uint32_t ) , catches -> children , 0 )"		3937052	0					
ANR	3937107	IdentifierDeclType	uint32_t *		3937052	0					
ANR	3937108	Identifier	jmp_opnums		3937052	1					
ANR	3937109	AssignmentExpression	"* jmp_opnums = safe_emalloc ( sizeof ( uint32_t ) , catches -> children , 0 )"		3937052	2		=			
ANR	3937110	Identifier	jmp_opnums		3937052	0					
ANR	3937111	CallExpression	"safe_emalloc ( sizeof ( uint32_t ) , catches -> children , 0 )"		3937052	1					
ANR	3937112	Callee	safe_emalloc		3937052	0					
ANR	3937113	Identifier	safe_emalloc		3937052	0					
ANR	3937114	ArgumentList	sizeof ( uint32_t )		3937052	1					
ANR	3937115	Argument	sizeof ( uint32_t )		3937052	0					
ANR	3937116	SizeofExpression	sizeof ( uint32_t )		3937052	0					
ANR	3937117	Sizeof	sizeof		3937052	0					
ANR	3937118	SizeofOperand	uint32_t		3937052	1					
ANR	3937119	Argument	catches -> children		3937052	1					
ANR	3937120	PtrMemberAccess	catches -> children		3937052	0					
ANR	3937121	Identifier	catches		3937052	0					
ANR	3937122	Identifier	children		3937052	1					
ANR	3937123	Argument	0		3937052	2					
ANR	3937124	PrimaryExpression	0		3937052	0					
ANR	3937125	IfStatement	if ( catches -> children == 0 && ! finally_ast )		3937052	7					
ANR	3937126	Condition	catches -> children == 0 && ! finally_ast	4098:5:117815:117852	3937052	0	True				
ANR	3937127	AndExpression	catches -> children == 0 && ! finally_ast		3937052	0		&&			
ANR	3937128	EqualityExpression	catches -> children == 0		3937052	0		==			
ANR	3937129	PtrMemberAccess	catches -> children		3937052	0					
ANR	3937130	Identifier	catches		3937052	0					
ANR	3937131	Identifier	children		3937052	1					
ANR	3937132	PrimaryExpression	0		3937052	1					
ANR	3937133	UnaryOperationExpression	! finally_ast		3937052	1					
ANR	3937134	UnaryOperator	!		3937052	0					
ANR	3937135	Identifier	finally_ast		3937052	1					
ANR	3937136	CompoundStatement		11:45:321:321	3937052	1					
ANR	3937137	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use try without catch or finally"" )"	4099:2:117859:117938	3937052	0	True				
ANR	3937138	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use try without catch or finally"" )"		3937052	0					
ANR	3937139	Callee	zend_error_noreturn		3937052	0					
ANR	3937140	Identifier	zend_error_noreturn		3937052	0					
ANR	3937141	ArgumentList	E_COMPILE_ERROR		3937052	1					
ANR	3937142	Argument	E_COMPILE_ERROR		3937052	0					
ANR	3937143	Identifier	E_COMPILE_ERROR		3937052	0					
ANR	3937144	Argument	"""Cannot use try without catch or finally"""		3937052	1					
ANR	3937145	PrimaryExpression	"""Cannot use try without catch or finally"""		3937052	0					
ANR	3937146	IfStatement	if ( CG ( context ) . labels )		3937052	8					
ANR	3937147	Condition	CG ( context ) . labels	4103:5:118007:118024	3937052	0	True				
ANR	3937148	MemberAccess	CG ( context ) . labels		3937052	0					
ANR	3937149	CallExpression	CG ( context )		3937052	0					
ANR	3937150	Callee	CG		3937052	0					
ANR	3937151	Identifier	CG		3937052	0					
ANR	3937152	ArgumentList	context		3937052	1					
ANR	3937153	Argument	context		3937052	0					
ANR	3937154	Identifier	context		3937052	0					
ANR	3937155	Identifier	labels		3937052	1					
ANR	3937156	CompoundStatement		17:2:497:514	3937052	1					
ANR	3937157	IdentifierDeclStatement	zend_label * label ;	4104:2:118031:118048	3937052	0	True				
ANR	3937158	IdentifierDecl	* label		3937052	0					
ANR	3937159	IdentifierDeclType	zend_label *		3937052	0					
ANR	3937160	Identifier	label		3937052	1					
ANR	3937161	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	4105:2:118052:118080	3937052	1	True				
ANR	3937162	Statement	(	4105:31:118081:118081	3937052	2	True				
ANR	3937163	Statement	CG	4105:32:118082:118083	3937052	3	True				
ANR	3937164	Statement	(	4105:34:118084:118084	3937052	4	True				
ANR	3937165	Statement	context	4105:35:118085:118091	3937052	5	True				
ANR	3937166	Statement	)	4105:42:118092:118092	3937052	6	True				
ANR	3937167	Statement	.	4105:43:118093:118093	3937052	7	True				
ANR	3937168	Statement	labels	4105:44:118094:118099	3937052	8	True				
ANR	3937169	Statement	","	4105:50:118100:118100	3937052	9	True				
ANR	3937170	Statement	label	4105:52:118102:118106	3937052	10	True				
ANR	3937171	Statement	)	4105:57:118107:118107	3937052	11	True				
ANR	3937172	CompoundStatement		18:59:575:575	3937052	12					
ANR	3937173	IfStatement	if ( label -> opline_num == get_next_op_number ( CG ( active_op_array ) ) )		3937052	0					
ANR	3937174	Condition	label -> opline_num == get_next_op_number ( CG ( active_op_array ) )	4106:7:118118:118177	3937052	0	True				
ANR	3937175	EqualityExpression	label -> opline_num == get_next_op_number ( CG ( active_op_array ) )		3937052	0		==			
ANR	3937176	PtrMemberAccess	label -> opline_num		3937052	0					
ANR	3937177	Identifier	label		3937052	0					
ANR	3937178	Identifier	opline_num		3937052	1					
ANR	3937179	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3937052	1					
ANR	3937180	Callee	get_next_op_number		3937052	0					
ANR	3937181	Identifier	get_next_op_number		3937052	0					
ANR	3937182	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937183	Argument	CG ( active_op_array )		3937052	0					
ANR	3937184	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937185	Callee	CG		3937052	0					
ANR	3937186	Identifier	CG		3937052	0					
ANR	3937187	ArgumentList	active_op_array		3937052	1					
ANR	3937188	Argument	active_op_array		3937052	0					
ANR	3937189	Identifier	active_op_array		3937052	0					
ANR	3937190	CompoundStatement		19:69:646:646	3937052	1					
ANR	3937191	ExpressionStatement	"zend_emit_op ( NULL , ZEND_NOP , NULL , NULL )"	4107:4:118186:118226	3937052	0	True				
ANR	3937192	CallExpression	"zend_emit_op ( NULL , ZEND_NOP , NULL , NULL )"		3937052	0					
ANR	3937193	Callee	zend_emit_op		3937052	0					
ANR	3937194	Identifier	zend_emit_op		3937052	0					
ANR	3937195	ArgumentList	NULL		3937052	1					
ANR	3937196	Argument	NULL		3937052	0					
ANR	3937197	Identifier	NULL		3937052	0					
ANR	3937198	Argument	ZEND_NOP		3937052	1					
ANR	3937199	Identifier	ZEND_NOP		3937052	0					
ANR	3937200	Argument	NULL		3937052	2					
ANR	3937201	Identifier	NULL		3937052	0					
ANR	3937202	Argument	NULL		3937052	3					
ANR	3937203	Identifier	NULL		3937052	0					
ANR	3937204	BreakStatement	break ;	4109:3:118236:118241	3937052	1	True				
ANR	3937205	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4110:4:118247:118270	3937052	13	True				
ANR	3937206	CallExpression	ZEND_HASH_FOREACH_END ( )		3937052	0					
ANR	3937207	Callee	ZEND_HASH_FOREACH_END		3937052	0					
ANR	3937208	Identifier	ZEND_HASH_FOREACH_END		3937052	0					
ANR	3937209	ArgumentList			3937052	1					
ANR	3937210	ExpressionStatement	try_catch_offset = zend_add_try_element ( get_next_op_number ( CG ( active_op_array ) ) )	4113:1:118277:118357	3937052	9	True				
ANR	3937211	AssignmentExpression	try_catch_offset = zend_add_try_element ( get_next_op_number ( CG ( active_op_array ) ) )		3937052	0		=			
ANR	3937212	Identifier	try_catch_offset		3937052	0					
ANR	3937213	CallExpression	zend_add_try_element ( get_next_op_number ( CG ( active_op_array ) ) )		3937052	1					
ANR	3937214	Callee	zend_add_try_element		3937052	0					
ANR	3937215	Identifier	zend_add_try_element		3937052	0					
ANR	3937216	ArgumentList	get_next_op_number ( CG ( active_op_array ) )		3937052	1					
ANR	3937217	Argument	get_next_op_number ( CG ( active_op_array ) )		3937052	0					
ANR	3937218	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3937052	0					
ANR	3937219	Callee	get_next_op_number		3937052	0					
ANR	3937220	Identifier	get_next_op_number		3937052	0					
ANR	3937221	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937222	Argument	CG ( active_op_array )		3937052	0					
ANR	3937223	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937224	Callee	CG		3937052	0					
ANR	3937225	Identifier	CG		3937052	0					
ANR	3937226	ArgumentList	active_op_array		3937052	1					
ANR	3937227	Argument	active_op_array		3937052	0					
ANR	3937228	Identifier	active_op_array		3937052	0					
ANR	3937229	IfStatement	if ( finally_ast )		3937052	10					
ANR	3937230	Condition	finally_ast	4115:5:118365:118375	3937052	0	True				
ANR	3937231	Identifier	finally_ast		3937052	0					
ANR	3937232	CompoundStatement		29:2:848:871	3937052	1					
ANR	3937233	IdentifierDeclStatement	zend_loop_var fast_call ;	4116:2:118382:118405	3937052	0	True				
ANR	3937234	IdentifierDecl	fast_call		3937052	0					
ANR	3937235	IdentifierDeclType	zend_loop_var		3937052	0					
ANR	3937236	Identifier	fast_call		3937052	1					
ANR	3937237	IfStatement	if ( ! ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) )		3937052	1					
ANR	3937238	Condition	! ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK )	4117:6:118413:118473	3937052	0	True				
ANR	3937239	UnaryOperationExpression	! ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK )		3937052	0					
ANR	3937240	UnaryOperator	!		3937052	0					
ANR	3937241	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK		3937052	1		&			
ANR	3937242	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3937052	0					
ANR	3937243	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937244	Callee	CG		3937052	0					
ANR	3937245	Identifier	CG		3937052	0					
ANR	3937246	ArgumentList	active_op_array		3937052	1					
ANR	3937247	Argument	active_op_array		3937052	0					
ANR	3937248	Identifier	active_op_array		3937052	0					
ANR	3937249	Identifier	fn_flags		3937052	1					
ANR	3937250	Identifier	ZEND_ACC_HAS_FINALLY_BLOCK		3937052	1					
ANR	3937251	CompoundStatement		30:69:942:942	3937052	1					
ANR	3937252	ExpressionStatement	CG ( active_op_array ) -> fn_flags |= ZEND_ACC_HAS_FINALLY_BLOCK	4118:3:118481:118540	3937052	0	True				
ANR	3937253	AssignmentExpression	CG ( active_op_array ) -> fn_flags |= ZEND_ACC_HAS_FINALLY_BLOCK		3937052	0		|=			
ANR	3937254	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3937052	0					
ANR	3937255	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937256	Callee	CG		3937052	0					
ANR	3937257	Identifier	CG		3937052	0					
ANR	3937258	ArgumentList	active_op_array		3937052	1					
ANR	3937259	Argument	active_op_array		3937052	0					
ANR	3937260	Identifier	active_op_array		3937052	0					
ANR	3937261	Identifier	fn_flags		3937052	1					
ANR	3937262	Identifier	ZEND_ACC_HAS_FINALLY_BLOCK		3937052	1					
ANR	3937263	ExpressionStatement	CG ( context ) . fast_call_var = get_temporary_variable ( CG ( active_op_array ) )	4119:3:118545:118616	3937052	1	True				
ANR	3937264	AssignmentExpression	CG ( context ) . fast_call_var = get_temporary_variable ( CG ( active_op_array ) )		3937052	0		=			
ANR	3937265	MemberAccess	CG ( context ) . fast_call_var		3937052	0					
ANR	3937266	CallExpression	CG ( context )		3937052	0					
ANR	3937267	Callee	CG		3937052	0					
ANR	3937268	Identifier	CG		3937052	0					
ANR	3937269	ArgumentList	context		3937052	1					
ANR	3937270	Argument	context		3937052	0					
ANR	3937271	Identifier	context		3937052	0					
ANR	3937272	Identifier	fast_call_var		3937052	1					
ANR	3937273	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3937052	1					
ANR	3937274	Callee	get_temporary_variable		3937052	0					
ANR	3937275	Identifier	get_temporary_variable		3937052	0					
ANR	3937276	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937277	Argument	CG ( active_op_array )		3937052	0					
ANR	3937278	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937279	Callee	CG		3937052	0					
ANR	3937280	Identifier	CG		3937052	0					
ANR	3937281	ArgumentList	active_op_array		3937052	1					
ANR	3937282	Argument	active_op_array		3937052	0					
ANR	3937283	Identifier	active_op_array		3937052	0					
ANR	3937284	ExpressionStatement	fast_call . opcode = ZEND_FAST_CALL	4123:2:118664:118697	3937052	2	True				
ANR	3937285	AssignmentExpression	fast_call . opcode = ZEND_FAST_CALL		3937052	0		=			
ANR	3937286	MemberAccess	fast_call . opcode		3937052	0					
ANR	3937287	Identifier	fast_call		3937052	0					
ANR	3937288	Identifier	opcode		3937052	1					
ANR	3937289	Identifier	ZEND_FAST_CALL		3937052	1					
ANR	3937290	ExpressionStatement	fast_call . var_type = IS_TMP_VAR	4124:2:118701:118732	3937052	3	True				
ANR	3937291	AssignmentExpression	fast_call . var_type = IS_TMP_VAR		3937052	0		=			
ANR	3937292	MemberAccess	fast_call . var_type		3937052	0					
ANR	3937293	Identifier	fast_call		3937052	0					
ANR	3937294	Identifier	var_type		3937052	1					
ANR	3937295	Identifier	IS_TMP_VAR		3937052	1					
ANR	3937296	ExpressionStatement	fast_call . var_num = CG ( context ) . fast_call_var	4125:2:118736:118781	3937052	4	True				
ANR	3937297	AssignmentExpression	fast_call . var_num = CG ( context ) . fast_call_var		3937052	0		=			
ANR	3937298	MemberAccess	fast_call . var_num		3937052	0					
ANR	3937299	Identifier	fast_call		3937052	0					
ANR	3937300	Identifier	var_num		3937052	1					
ANR	3937301	MemberAccess	CG ( context ) . fast_call_var		3937052	1					
ANR	3937302	CallExpression	CG ( context )		3937052	0					
ANR	3937303	Callee	CG		3937052	0					
ANR	3937304	Identifier	CG		3937052	0					
ANR	3937305	ArgumentList	context		3937052	1					
ANR	3937306	Argument	context		3937052	0					
ANR	3937307	Identifier	context		3937052	0					
ANR	3937308	Identifier	fast_call_var		3937052	1					
ANR	3937309	ExpressionStatement	fast_call . u . try_catch_offset = try_catch_offset	4126:2:118785:118832	3937052	5	True				
ANR	3937310	AssignmentExpression	fast_call . u . try_catch_offset = try_catch_offset		3937052	0		=			
ANR	3937311	MemberAccess	fast_call . u . try_catch_offset		3937052	0					
ANR	3937312	MemberAccess	fast_call . u		3937052	0					
ANR	3937313	Identifier	fast_call		3937052	0					
ANR	3937314	Identifier	u		3937052	1					
ANR	3937315	Identifier	try_catch_offset		3937052	1					
ANR	3937316	Identifier	try_catch_offset		3937052	1					
ANR	3937317	ExpressionStatement	"zend_stack_push ( & CG ( loop_var_stack ) , & fast_call )"	4127:2:118836:118884	3937052	6	True				
ANR	3937318	CallExpression	"zend_stack_push ( & CG ( loop_var_stack ) , & fast_call )"		3937052	0					
ANR	3937319	Callee	zend_stack_push		3937052	0					
ANR	3937320	Identifier	zend_stack_push		3937052	0					
ANR	3937321	ArgumentList	& CG ( loop_var_stack )		3937052	1					
ANR	3937322	Argument	& CG ( loop_var_stack )		3937052	0					
ANR	3937323	UnaryOperationExpression	& CG ( loop_var_stack )		3937052	0					
ANR	3937324	UnaryOperator	&		3937052	0					
ANR	3937325	CallExpression	CG ( loop_var_stack )		3937052	1					
ANR	3937326	Callee	CG		3937052	0					
ANR	3937327	Identifier	CG		3937052	0					
ANR	3937328	ArgumentList	loop_var_stack		3937052	1					
ANR	3937329	Argument	loop_var_stack		3937052	0					
ANR	3937330	Identifier	loop_var_stack		3937052	0					
ANR	3937331	Argument	& fast_call		3937052	1					
ANR	3937332	UnaryOperationExpression	& fast_call		3937052	0					
ANR	3937333	UnaryOperator	&		3937052	0					
ANR	3937334	Identifier	fast_call		3937052	1					
ANR	3937335	ExpressionStatement	zend_compile_stmt ( try_ast )	4130:1:118891:118917	3937052	11	True				
ANR	3937336	CallExpression	zend_compile_stmt ( try_ast )		3937052	0					
ANR	3937337	Callee	zend_compile_stmt		3937052	0					
ANR	3937338	Identifier	zend_compile_stmt		3937052	0					
ANR	3937339	ArgumentList	try_ast		3937052	1					
ANR	3937340	Argument	try_ast		3937052	0					
ANR	3937341	Identifier	try_ast		3937052	0					
ANR	3937342	IfStatement	if ( catches -> children != 0 )		3937052	12					
ANR	3937343	Condition	catches -> children != 0	4132:5:118925:118946	3937052	0	True				
ANR	3937344	EqualityExpression	catches -> children != 0		3937052	0		!=			
ANR	3937345	PtrMemberAccess	catches -> children		3937052	0					
ANR	3937346	Identifier	catches		3937052	0					
ANR	3937347	Identifier	children		3937052	1					
ANR	3937348	PrimaryExpression	0		3937052	1					
ANR	3937349	CompoundStatement		45:29:1415:1415	3937052	1					
ANR	3937350	ExpressionStatement	jmp_opnums [ 0 ] = zend_emit_jump ( 0 )	4133:2:118953:118986	3937052	0	True				
ANR	3937351	AssignmentExpression	jmp_opnums [ 0 ] = zend_emit_jump ( 0 )		3937052	0		=			
ANR	3937352	ArrayIndexing	jmp_opnums [ 0 ]		3937052	0					
ANR	3937353	Identifier	jmp_opnums		3937052	0					
ANR	3937354	PrimaryExpression	0		3937052	1					
ANR	3937355	CallExpression	zend_emit_jump ( 0 )		3937052	1					
ANR	3937356	Callee	zend_emit_jump		3937052	0					
ANR	3937357	Identifier	zend_emit_jump		3937052	0					
ANR	3937358	ArgumentList	0		3937052	1					
ANR	3937359	Argument	0		3937052	0					
ANR	3937360	PrimaryExpression	0		3937052	0					
ANR	3937361	ForStatement	for ( i = 0 ; i < catches -> children ; ++ i )		3937052	13					
ANR	3937362	ForInit	i = 0 ;	4136:6:118998:119003	3937052	0	True				
ANR	3937363	AssignmentExpression	i = 0		3937052	0		=			
ANR	3937364	Identifier	i		3937052	0					
ANR	3937365	PrimaryExpression	0		3937052	1					
ANR	3937366	Condition	i < catches -> children	4136:13:119005:119025	3937052	1	True				
ANR	3937367	RelationalExpression	i < catches -> children		3937052	0		<			
ANR	3937368	Identifier	i		3937052	0					
ANR	3937369	PtrMemberAccess	catches -> children		3937052	1					
ANR	3937370	Identifier	catches		3937052	0					
ANR	3937371	Identifier	children		3937052	1					
ANR	3937372	UnaryExpression	++ i	4136:36:119028:119030	3937052	2	True				
ANR	3937373	IncDec	++		3937052	0					
ANR	3937374	Identifier	i		3937052	1					
ANR	3937375	CompoundStatement		57:2:1784:1804	3937052	3					
ANR	3937376	IdentifierDeclStatement	zend_ast * catch_ast = catches -> child [ i ] ;	4137:2:119037:119076	3937052	0	True				
ANR	3937377	IdentifierDecl	* catch_ast = catches -> child [ i ]		3937052	0					
ANR	3937378	IdentifierDeclType	zend_ast *		3937052	0					
ANR	3937379	Identifier	catch_ast		3937052	1					
ANR	3937380	AssignmentExpression	* catch_ast = catches -> child [ i ]		3937052	2		=			
ANR	3937381	Identifier	catch_ast		3937052	0					
ANR	3937382	ArrayIndexing	catches -> child [ i ]		3937052	1					
ANR	3937383	PtrMemberAccess	catches -> child		3937052	0					
ANR	3937384	Identifier	catches		3937052	0					
ANR	3937385	Identifier	child		3937052	1					
ANR	3937386	Identifier	i		3937052	1					
ANR	3937387	IdentifierDeclStatement	zend_ast * class_ast = catch_ast -> child [ 0 ] ;	4138:2:119080:119121	3937052	1	True				
ANR	3937388	IdentifierDecl	* class_ast = catch_ast -> child [ 0 ]		3937052	0					
ANR	3937389	IdentifierDeclType	zend_ast *		3937052	0					
ANR	3937390	Identifier	class_ast		3937052	1					
ANR	3937391	AssignmentExpression	* class_ast = catch_ast -> child [ 0 ]		3937052	2		=			
ANR	3937392	Identifier	class_ast		3937052	0					
ANR	3937393	ArrayIndexing	catch_ast -> child [ 0 ]		3937052	1					
ANR	3937394	PtrMemberAccess	catch_ast -> child		3937052	0					
ANR	3937395	Identifier	catch_ast		3937052	0					
ANR	3937396	Identifier	child		3937052	1					
ANR	3937397	PrimaryExpression	0		3937052	1					
ANR	3937398	IdentifierDeclStatement	zend_ast * var_ast = catch_ast -> child [ 1 ] ;	4139:2:119125:119164	3937052	2	True				
ANR	3937399	IdentifierDecl	* var_ast = catch_ast -> child [ 1 ]		3937052	0					
ANR	3937400	IdentifierDeclType	zend_ast *		3937052	0					
ANR	3937401	Identifier	var_ast		3937052	1					
ANR	3937402	AssignmentExpression	* var_ast = catch_ast -> child [ 1 ]		3937052	2		=			
ANR	3937403	Identifier	var_ast		3937052	0					
ANR	3937404	ArrayIndexing	catch_ast -> child [ 1 ]		3937052	1					
ANR	3937405	PtrMemberAccess	catch_ast -> child		3937052	0					
ANR	3937406	Identifier	catch_ast		3937052	0					
ANR	3937407	Identifier	child		3937052	1					
ANR	3937408	PrimaryExpression	1		3937052	1					
ANR	3937409	IdentifierDeclStatement	zend_ast * stmt_ast = catch_ast -> child [ 2 ] ;	4140:2:119168:119208	3937052	3	True				
ANR	3937410	IdentifierDecl	* stmt_ast = catch_ast -> child [ 2 ]		3937052	0					
ANR	3937411	IdentifierDeclType	zend_ast *		3937052	0					
ANR	3937412	Identifier	stmt_ast		3937052	1					
ANR	3937413	AssignmentExpression	* stmt_ast = catch_ast -> child [ 2 ]		3937052	2		=			
ANR	3937414	Identifier	stmt_ast		3937052	0					
ANR	3937415	ArrayIndexing	catch_ast -> child [ 2 ]		3937052	1					
ANR	3937416	PtrMemberAccess	catch_ast -> child		3937052	0					
ANR	3937417	Identifier	catch_ast		3937052	0					
ANR	3937418	Identifier	child		3937052	1					
ANR	3937419	PrimaryExpression	2		3937052	1					
ANR	3937420	IdentifierDeclStatement	zval * var_name = zend_ast_get_zval ( var_ast ) ;	4141:2:119212:119255	3937052	4	True				
ANR	3937421	IdentifierDecl	* var_name = zend_ast_get_zval ( var_ast )		3937052	0					
ANR	3937422	IdentifierDeclType	zval *		3937052	0					
ANR	3937423	Identifier	var_name		3937052	1					
ANR	3937424	AssignmentExpression	* var_name = zend_ast_get_zval ( var_ast )		3937052	2		=			
ANR	3937425	Identifier	var_name		3937052	0					
ANR	3937426	CallExpression	zend_ast_get_zval ( var_ast )		3937052	1					
ANR	3937427	Callee	zend_ast_get_zval		3937052	0					
ANR	3937428	Identifier	zend_ast_get_zval		3937052	0					
ANR	3937429	ArgumentList	var_ast		3937052	1					
ANR	3937430	Argument	var_ast		3937052	0					
ANR	3937431	Identifier	var_ast		3937052	0					
ANR	3937432	IdentifierDeclStatement	zend_bool is_last_catch = ( i + 1 == catches -> children ) ;	4142:2:119259:119313	3937052	5	True				
ANR	3937433	IdentifierDecl	is_last_catch = ( i + 1 == catches -> children )		3937052	0					
ANR	3937434	IdentifierDeclType	zend_bool		3937052	0					
ANR	3937435	Identifier	is_last_catch		3937052	1					
ANR	3937436	AssignmentExpression	is_last_catch = ( i + 1 == catches -> children )		3937052	2		=			
ANR	3937437	Identifier	is_last_catch		3937052	0					
ANR	3937438	EqualityExpression	i + 1 == catches -> children		3937052	1		==			
ANR	3937439	AdditiveExpression	i + 1		3937052	0		+			
ANR	3937440	Identifier	i		3937052	0					
ANR	3937441	PrimaryExpression	1		3937052	1					
ANR	3937442	PtrMemberAccess	catches -> children		3937052	1					
ANR	3937443	Identifier	catches		3937052	0					
ANR	3937444	Identifier	children		3937052	1					
ANR	3937445	IdentifierDeclStatement	uint32_t opnum_catch ;	4144:2:119318:119338	3937052	6	True				
ANR	3937446	IdentifierDecl	opnum_catch		3937052	0					
ANR	3937447	IdentifierDeclType	uint32_t		3937052	0					
ANR	3937448	Identifier	opnum_catch		3937052	1					
ANR	3937449	IfStatement	if ( ! zend_is_const_default_class_ref ( class_ast ) )		3937052	7					
ANR	3937450	Condition	! zend_is_const_default_class_ref ( class_ast )	4146:6:119347:119389	3937052	0	True				
ANR	3937451	UnaryOperationExpression	! zend_is_const_default_class_ref ( class_ast )		3937052	0					
ANR	3937452	UnaryOperator	!		3937052	0					
ANR	3937453	CallExpression	zend_is_const_default_class_ref ( class_ast )		3937052	1					
ANR	3937454	Callee	zend_is_const_default_class_ref		3937052	0					
ANR	3937455	Identifier	zend_is_const_default_class_ref		3937052	0					
ANR	3937456	ArgumentList	class_ast		3937052	1					
ANR	3937457	Argument	class_ast		3937052	0					
ANR	3937458	Identifier	class_ast		3937052	0					
ANR	3937459	CompoundStatement		59:51:1858:1858	3937052	1					
ANR	3937460	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Bad class name in the catch statement"" )"	4147:3:119397:119474	3937052	0	True				
ANR	3937461	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Bad class name in the catch statement"" )"		3937052	0					
ANR	3937462	Callee	zend_error_noreturn		3937052	0					
ANR	3937463	Identifier	zend_error_noreturn		3937052	0					
ANR	3937464	ArgumentList	E_COMPILE_ERROR		3937052	1					
ANR	3937465	Argument	E_COMPILE_ERROR		3937052	0					
ANR	3937466	Identifier	E_COMPILE_ERROR		3937052	0					
ANR	3937467	Argument	"""Bad class name in the catch statement"""		3937052	1					
ANR	3937468	PrimaryExpression	"""Bad class name in the catch statement"""		3937052	0					
ANR	3937469	ExpressionStatement	opnum_catch = get_next_op_number ( CG ( active_op_array ) )	4150:2:119483:119536	3937052	8	True				
ANR	3937470	AssignmentExpression	opnum_catch = get_next_op_number ( CG ( active_op_array ) )		3937052	0		=			
ANR	3937471	Identifier	opnum_catch		3937052	0					
ANR	3937472	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3937052	1					
ANR	3937473	Callee	get_next_op_number		3937052	0					
ANR	3937474	Identifier	get_next_op_number		3937052	0					
ANR	3937475	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937476	Argument	CG ( active_op_array )		3937052	0					
ANR	3937477	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937478	Callee	CG		3937052	0					
ANR	3937479	Identifier	CG		3937052	0					
ANR	3937480	ArgumentList	active_op_array		3937052	1					
ANR	3937481	Argument	active_op_array		3937052	0					
ANR	3937482	Identifier	active_op_array		3937052	0					
ANR	3937483	IfStatement	if ( i == 0 )		3937052	9					
ANR	3937484	Condition	i == 0	4151:6:119544:119549	3937052	0	True				
ANR	3937485	EqualityExpression	i == 0		3937052	0		==			
ANR	3937486	Identifier	i		3937052	0					
ANR	3937487	PrimaryExpression	0		3937052	1					
ANR	3937488	CompoundStatement		64:14:2018:2018	3937052	1					
ANR	3937489	ExpressionStatement	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . catch_op = opnum_catch	4152:3:119557:119634	3937052	0	True				
ANR	3937490	AssignmentExpression	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . catch_op = opnum_catch		3937052	0		=			
ANR	3937491	MemberAccess	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . catch_op		3937052	0					
ANR	3937492	ArrayIndexing	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ]		3937052	0					
ANR	3937493	PtrMemberAccess	CG ( active_op_array ) -> try_catch_array		3937052	0					
ANR	3937494	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937495	Callee	CG		3937052	0					
ANR	3937496	Identifier	CG		3937052	0					
ANR	3937497	ArgumentList	active_op_array		3937052	1					
ANR	3937498	Argument	active_op_array		3937052	0					
ANR	3937499	Identifier	active_op_array		3937052	0					
ANR	3937500	Identifier	try_catch_array		3937052	1					
ANR	3937501	Identifier	try_catch_offset		3937052	1					
ANR	3937502	Identifier	catch_op		3937052	1					
ANR	3937503	Identifier	opnum_catch		3937052	1					
ANR	3937504	ExpressionStatement	CG ( zend_lineno ) = catch_ast -> lineno	4155:2:119643:119678	3937052	10	True				
ANR	3937505	AssignmentExpression	CG ( zend_lineno ) = catch_ast -> lineno		3937052	0		=			
ANR	3937506	CallExpression	CG ( zend_lineno )		3937052	0					
ANR	3937507	Callee	CG		3937052	0					
ANR	3937508	Identifier	CG		3937052	0					
ANR	3937509	ArgumentList	zend_lineno		3937052	1					
ANR	3937510	Argument	zend_lineno		3937052	0					
ANR	3937511	Identifier	zend_lineno		3937052	0					
ANR	3937512	PtrMemberAccess	catch_ast -> lineno		3937052	1					
ANR	3937513	Identifier	catch_ast		3937052	0					
ANR	3937514	Identifier	lineno		3937052	1					
ANR	3937515	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	4157:2:119683:119724	3937052	11	True				
ANR	3937516	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3937052	0		=			
ANR	3937517	Identifier	opline		3937052	0					
ANR	3937518	CallExpression	get_next_op ( CG ( active_op_array ) )		3937052	1					
ANR	3937519	Callee	get_next_op		3937052	0					
ANR	3937520	Identifier	get_next_op		3937052	0					
ANR	3937521	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937522	Argument	CG ( active_op_array )		3937052	0					
ANR	3937523	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937524	Callee	CG		3937052	0					
ANR	3937525	Identifier	CG		3937052	0					
ANR	3937526	ArgumentList	active_op_array		3937052	1					
ANR	3937527	Argument	active_op_array		3937052	0					
ANR	3937528	Identifier	active_op_array		3937052	0					
ANR	3937529	ExpressionStatement	opline -> opcode = ZEND_CATCH	4158:2:119728:119755	3937052	12	True				
ANR	3937530	AssignmentExpression	opline -> opcode = ZEND_CATCH		3937052	0		=			
ANR	3937531	PtrMemberAccess	opline -> opcode		3937052	0					
ANR	3937532	Identifier	opline		3937052	0					
ANR	3937533	Identifier	opcode		3937052	1					
ANR	3937534	Identifier	ZEND_CATCH		3937052	1					
ANR	3937535	ExpressionStatement	opline -> op1_type = IS_CONST	4159:2:119759:119786	3937052	13	True				
ANR	3937536	AssignmentExpression	opline -> op1_type = IS_CONST		3937052	0		=			
ANR	3937537	PtrMemberAccess	opline -> op1_type		3937052	0					
ANR	3937538	Identifier	opline		3937052	0					
ANR	3937539	Identifier	op1_type		3937052	1					
ANR	3937540	Identifier	IS_CONST		3937052	1					
ANR	3937541	ExpressionStatement	"opline -> op1 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( class_ast ) )"	4160:2:119790:119904	3937052	14	True				
ANR	3937542	AssignmentExpression	"opline -> op1 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( class_ast ) )"		3937052	0		=			
ANR	3937543	MemberAccess	opline -> op1 . constant		3937052	0					
ANR	3937544	PtrMemberAccess	opline -> op1		3937052	0					
ANR	3937545	Identifier	opline		3937052	0					
ANR	3937546	Identifier	op1		3937052	1					
ANR	3937547	Identifier	constant		3937052	1					
ANR	3937548	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( class_ast ) )"		3937052	1					
ANR	3937549	Callee	zend_add_class_name_literal		3937052	0					
ANR	3937550	Identifier	zend_add_class_name_literal		3937052	0					
ANR	3937551	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937552	Argument	CG ( active_op_array )		3937052	0					
ANR	3937553	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937554	Callee	CG		3937052	0					
ANR	3937555	Identifier	CG		3937052	0					
ANR	3937556	ArgumentList	active_op_array		3937052	1					
ANR	3937557	Argument	active_op_array		3937052	0					
ANR	3937558	Identifier	active_op_array		3937052	0					
ANR	3937559	Argument	zend_resolve_class_name_ast ( class_ast )		3937052	1					
ANR	3937560	CallExpression	zend_resolve_class_name_ast ( class_ast )		3937052	0					
ANR	3937561	Callee	zend_resolve_class_name_ast		3937052	0					
ANR	3937562	Identifier	zend_resolve_class_name_ast		3937052	0					
ANR	3937563	ArgumentList	class_ast		3937052	1					
ANR	3937564	Argument	class_ast		3937052	0					
ANR	3937565	Identifier	class_ast		3937052	0					
ANR	3937566	ExpressionStatement	opline -> op2_type = IS_CV	4163:2:119909:119933	3937052	15	True				
ANR	3937567	AssignmentExpression	opline -> op2_type = IS_CV		3937052	0		=			
ANR	3937568	PtrMemberAccess	opline -> op2_type		3937052	0					
ANR	3937569	Identifier	opline		3937052	0					
ANR	3937570	Identifier	op2_type		3937052	1					
ANR	3937571	Identifier	IS_CV		3937052	1					
ANR	3937572	ExpressionStatement	"opline -> op2 . var = lookup_cv ( CG ( active_op_array ) , zend_string_copy ( Z_STR_P ( var_name ) ) )"	4164:2:119937:120022	3937052	16	True				
ANR	3937573	AssignmentExpression	"opline -> op2 . var = lookup_cv ( CG ( active_op_array ) , zend_string_copy ( Z_STR_P ( var_name ) ) )"		3937052	0		=			
ANR	3937574	MemberAccess	opline -> op2 . var		3937052	0					
ANR	3937575	PtrMemberAccess	opline -> op2		3937052	0					
ANR	3937576	Identifier	opline		3937052	0					
ANR	3937577	Identifier	op2		3937052	1					
ANR	3937578	Identifier	var		3937052	1					
ANR	3937579	CallExpression	"lookup_cv ( CG ( active_op_array ) , zend_string_copy ( Z_STR_P ( var_name ) ) )"		3937052	1					
ANR	3937580	Callee	lookup_cv		3937052	0					
ANR	3937581	Identifier	lookup_cv		3937052	0					
ANR	3937582	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937583	Argument	CG ( active_op_array )		3937052	0					
ANR	3937584	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937585	Callee	CG		3937052	0					
ANR	3937586	Identifier	CG		3937052	0					
ANR	3937587	ArgumentList	active_op_array		3937052	1					
ANR	3937588	Argument	active_op_array		3937052	0					
ANR	3937589	Identifier	active_op_array		3937052	0					
ANR	3937590	Argument	zend_string_copy ( Z_STR_P ( var_name ) )		3937052	1					
ANR	3937591	CallExpression	zend_string_copy ( Z_STR_P ( var_name ) )		3937052	0					
ANR	3937592	Callee	zend_string_copy		3937052	0					
ANR	3937593	Identifier	zend_string_copy		3937052	0					
ANR	3937594	ArgumentList	Z_STR_P ( var_name )		3937052	1					
ANR	3937595	Argument	Z_STR_P ( var_name )		3937052	0					
ANR	3937596	CallExpression	Z_STR_P ( var_name )		3937052	0					
ANR	3937597	Callee	Z_STR_P		3937052	0					
ANR	3937598	Identifier	Z_STR_P		3937052	0					
ANR	3937599	ArgumentList	var_name		3937052	1					
ANR	3937600	Argument	var_name		3937052	0					
ANR	3937601	Identifier	var_name		3937052	0					
ANR	3937602	ExpressionStatement	opline -> result . num = is_last_catch	4165:2:120026:120060	3937052	17	True				
ANR	3937603	AssignmentExpression	opline -> result . num = is_last_catch		3937052	0		=			
ANR	3937604	MemberAccess	opline -> result . num		3937052	0					
ANR	3937605	PtrMemberAccess	opline -> result		3937052	0					
ANR	3937606	Identifier	opline		3937052	0					
ANR	3937607	Identifier	result		3937052	1					
ANR	3937608	Identifier	num		3937052	1					
ANR	3937609	Identifier	is_last_catch		3937052	1					
ANR	3937610	ExpressionStatement	zend_compile_stmt ( stmt_ast )	4167:2:120065:120092	3937052	18	True				
ANR	3937611	CallExpression	zend_compile_stmt ( stmt_ast )		3937052	0					
ANR	3937612	Callee	zend_compile_stmt		3937052	0					
ANR	3937613	Identifier	zend_compile_stmt		3937052	0					
ANR	3937614	ArgumentList	stmt_ast		3937052	1					
ANR	3937615	Argument	stmt_ast		3937052	0					
ANR	3937616	Identifier	stmt_ast		3937052	0					
ANR	3937617	IfStatement	if ( ! is_last_catch )		3937052	19					
ANR	3937618	Condition	! is_last_catch	4169:6:120101:120114	3937052	0	True				
ANR	3937619	UnaryOperationExpression	! is_last_catch		3937052	0					
ANR	3937620	UnaryOperator	!		3937052	0					
ANR	3937621	Identifier	is_last_catch		3937052	1					
ANR	3937622	CompoundStatement		82:22:2583:2583	3937052	1					
ANR	3937623	ExpressionStatement	jmp_opnums [ i + 1 ] = zend_emit_jump ( 0 )	4170:3:120122:120159	3937052	0	True				
ANR	3937624	AssignmentExpression	jmp_opnums [ i + 1 ] = zend_emit_jump ( 0 )		3937052	0		=			
ANR	3937625	ArrayIndexing	jmp_opnums [ i + 1 ]		3937052	0					
ANR	3937626	Identifier	jmp_opnums		3937052	0					
ANR	3937627	AdditiveExpression	i + 1		3937052	1		+			
ANR	3937628	Identifier	i		3937052	0					
ANR	3937629	PrimaryExpression	1		3937052	1					
ANR	3937630	CallExpression	zend_emit_jump ( 0 )		3937052	1					
ANR	3937631	Callee	zend_emit_jump		3937052	0					
ANR	3937632	Identifier	zend_emit_jump		3937052	0					
ANR	3937633	ArgumentList	0		3937052	1					
ANR	3937634	Argument	0		3937052	0					
ANR	3937635	PrimaryExpression	0		3937052	0					
ANR	3937636	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum_catch ]	4173:2:120168:120219	3937052	20	True				
ANR	3937637	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum_catch ]		3937052	0		=			
ANR	3937638	Identifier	opline		3937052	0					
ANR	3937639	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum_catch ]		3937052	1					
ANR	3937640	UnaryOperator	&		3937052	0					
ANR	3937641	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum_catch ]		3937052	1					
ANR	3937642	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3937052	0					
ANR	3937643	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937644	Callee	CG		3937052	0					
ANR	3937645	Identifier	CG		3937052	0					
ANR	3937646	ArgumentList	active_op_array		3937052	1					
ANR	3937647	Argument	active_op_array		3937052	0					
ANR	3937648	Identifier	active_op_array		3937052	0					
ANR	3937649	Identifier	opcodes		3937052	1					
ANR	3937650	Identifier	opnum_catch		3937052	1					
ANR	3937651	ExpressionStatement	opline -> extended_value = get_next_op_number ( CG ( active_op_array ) )	4174:2:120223:120287	3937052	21	True				
ANR	3937652	AssignmentExpression	opline -> extended_value = get_next_op_number ( CG ( active_op_array ) )		3937052	0		=			
ANR	3937653	PtrMemberAccess	opline -> extended_value		3937052	0					
ANR	3937654	Identifier	opline		3937052	0					
ANR	3937655	Identifier	extended_value		3937052	1					
ANR	3937656	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3937052	1					
ANR	3937657	Callee	get_next_op_number		3937052	0					
ANR	3937658	Identifier	get_next_op_number		3937052	0					
ANR	3937659	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937660	Argument	CG ( active_op_array )		3937052	0					
ANR	3937661	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937662	Callee	CG		3937052	0					
ANR	3937663	Identifier	CG		3937052	0					
ANR	3937664	ArgumentList	active_op_array		3937052	1					
ANR	3937665	Argument	active_op_array		3937052	0					
ANR	3937666	Identifier	active_op_array		3937052	0					
ANR	3937667	ForStatement	for ( i = 0 ; i < catches -> children ; ++ i )		3937052	14					
ANR	3937668	ForInit	i = 0 ;	4177:6:120299:120304	3937052	0	True				
ANR	3937669	AssignmentExpression	i = 0		3937052	0		=			
ANR	3937670	Identifier	i		3937052	0					
ANR	3937671	PrimaryExpression	0		3937052	1					
ANR	3937672	Condition	i < catches -> children	4177:13:120306:120326	3937052	1	True				
ANR	3937673	RelationalExpression	i < catches -> children		3937052	0		<			
ANR	3937674	Identifier	i		3937052	0					
ANR	3937675	PtrMemberAccess	catches -> children		3937052	1					
ANR	3937676	Identifier	catches		3937052	0					
ANR	3937677	Identifier	children		3937052	1					
ANR	3937678	UnaryExpression	++ i	4177:36:120329:120331	3937052	2	True				
ANR	3937679	IncDec	++		3937052	0					
ANR	3937680	Identifier	i		3937052	1					
ANR	3937681	CompoundStatement		90:41:2800:2800	3937052	3					
ANR	3937682	ExpressionStatement	zend_update_jump_target_to_next ( jmp_opnums [ i ] )	4178:2:120338:120384	3937052	0	True				
ANR	3937683	CallExpression	zend_update_jump_target_to_next ( jmp_opnums [ i ] )		3937052	0					
ANR	3937684	Callee	zend_update_jump_target_to_next		3937052	0					
ANR	3937685	Identifier	zend_update_jump_target_to_next		3937052	0					
ANR	3937686	ArgumentList	jmp_opnums [ i ]		3937052	1					
ANR	3937687	Argument	jmp_opnums [ i ]		3937052	0					
ANR	3937688	ArrayIndexing	jmp_opnums [ i ]		3937052	0					
ANR	3937689	Identifier	jmp_opnums		3937052	0					
ANR	3937690	Identifier	i		3937052	1					
ANR	3937691	IfStatement	if ( finally_ast )		3937052	15					
ANR	3937692	Condition	finally_ast	4181:5:120395:120405	3937052	0	True				
ANR	3937693	Identifier	finally_ast		3937052	0					
ANR	3937694	CompoundStatement		95:2:2878:2942	3937052	1					
ANR	3937695	IdentifierDeclStatement	uint32_t opnum_jmp = get_next_op_number ( CG ( active_op_array ) ) + 1 ;	4182:2:120412:120476	3937052	0	True				
ANR	3937696	IdentifierDecl	opnum_jmp = get_next_op_number ( CG ( active_op_array ) ) + 1		3937052	0					
ANR	3937697	IdentifierDeclType	uint32_t		3937052	0					
ANR	3937698	Identifier	opnum_jmp		3937052	1					
ANR	3937699	AssignmentExpression	opnum_jmp = get_next_op_number ( CG ( active_op_array ) ) + 1		3937052	2		=			
ANR	3937700	Identifier	opnum_jmp		3937052	0					
ANR	3937701	AdditiveExpression	get_next_op_number ( CG ( active_op_array ) ) + 1		3937052	1		+			
ANR	3937702	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3937052	0					
ANR	3937703	Callee	get_next_op_number		3937052	0					
ANR	3937704	Identifier	get_next_op_number		3937052	0					
ANR	3937705	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937706	Argument	CG ( active_op_array )		3937052	0					
ANR	3937707	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937708	Callee	CG		3937052	0					
ANR	3937709	Identifier	CG		3937052	0					
ANR	3937710	ArgumentList	active_op_array		3937052	1					
ANR	3937711	Argument	active_op_array		3937052	0					
ANR	3937712	Identifier	active_op_array		3937052	0					
ANR	3937713	PrimaryExpression	1		3937052	1					
ANR	3937714	ExpressionStatement	zend_stack_del_top ( & CG ( loop_var_stack ) )	4185:2:120523:120562	3937052	1	True				
ANR	3937715	CallExpression	zend_stack_del_top ( & CG ( loop_var_stack ) )		3937052	0					
ANR	3937716	Callee	zend_stack_del_top		3937052	0					
ANR	3937717	Identifier	zend_stack_del_top		3937052	0					
ANR	3937718	ArgumentList	& CG ( loop_var_stack )		3937052	1					
ANR	3937719	Argument	& CG ( loop_var_stack )		3937052	0					
ANR	3937720	UnaryOperationExpression	& CG ( loop_var_stack )		3937052	0					
ANR	3937721	UnaryOperator	&		3937052	0					
ANR	3937722	CallExpression	CG ( loop_var_stack )		3937052	1					
ANR	3937723	Callee	CG		3937052	0					
ANR	3937724	Identifier	CG		3937052	0					
ANR	3937725	ArgumentList	loop_var_stack		3937052	1					
ANR	3937726	Argument	loop_var_stack		3937052	0					
ANR	3937727	Identifier	loop_var_stack		3937052	0					
ANR	3937728	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_FAST_CALL , NULL , NULL )"	4187:2:120567:120622	3937052	2	True				
ANR	3937729	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_FAST_CALL , NULL , NULL )"		3937052	0		=			
ANR	3937730	Identifier	opline		3937052	0					
ANR	3937731	CallExpression	"zend_emit_op ( NULL , ZEND_FAST_CALL , NULL , NULL )"		3937052	1					
ANR	3937732	Callee	zend_emit_op		3937052	0					
ANR	3937733	Identifier	zend_emit_op		3937052	0					
ANR	3937734	ArgumentList	NULL		3937052	1					
ANR	3937735	Argument	NULL		3937052	0					
ANR	3937736	Identifier	NULL		3937052	0					
ANR	3937737	Argument	ZEND_FAST_CALL		3937052	1					
ANR	3937738	Identifier	ZEND_FAST_CALL		3937052	0					
ANR	3937739	Argument	NULL		3937052	2					
ANR	3937740	Identifier	NULL		3937052	0					
ANR	3937741	Argument	NULL		3937052	3					
ANR	3937742	Identifier	NULL		3937052	0					
ANR	3937743	ExpressionStatement	opline -> op1 . num = try_catch_offset	4188:2:120626:120660	3937052	3	True				
ANR	3937744	AssignmentExpression	opline -> op1 . num = try_catch_offset		3937052	0		=			
ANR	3937745	MemberAccess	opline -> op1 . num		3937052	0					
ANR	3937746	PtrMemberAccess	opline -> op1		3937052	0					
ANR	3937747	Identifier	opline		3937052	0					
ANR	3937748	Identifier	op1		3937052	1					
ANR	3937749	Identifier	num		3937052	1					
ANR	3937750	Identifier	try_catch_offset		3937052	1					
ANR	3937751	ExpressionStatement	opline -> result_type = IS_TMP_VAR	4189:2:120664:120696	3937052	4	True				
ANR	3937752	AssignmentExpression	opline -> result_type = IS_TMP_VAR		3937052	0		=			
ANR	3937753	PtrMemberAccess	opline -> result_type		3937052	0					
ANR	3937754	Identifier	opline		3937052	0					
ANR	3937755	Identifier	result_type		3937052	1					
ANR	3937756	Identifier	IS_TMP_VAR		3937052	1					
ANR	3937757	ExpressionStatement	opline -> result . var = CG ( context ) . fast_call_var	4190:2:120700:120746	3937052	5	True				
ANR	3937758	AssignmentExpression	opline -> result . var = CG ( context ) . fast_call_var		3937052	0		=			
ANR	3937759	MemberAccess	opline -> result . var		3937052	0					
ANR	3937760	PtrMemberAccess	opline -> result		3937052	0					
ANR	3937761	Identifier	opline		3937052	0					
ANR	3937762	Identifier	result		3937052	1					
ANR	3937763	Identifier	var		3937052	1					
ANR	3937764	MemberAccess	CG ( context ) . fast_call_var		3937052	1					
ANR	3937765	CallExpression	CG ( context )		3937052	0					
ANR	3937766	Callee	CG		3937052	0					
ANR	3937767	Identifier	CG		3937052	0					
ANR	3937768	ArgumentList	context		3937052	1					
ANR	3937769	Argument	context		3937052	0					
ANR	3937770	Identifier	context		3937052	0					
ANR	3937771	Identifier	fast_call_var		3937052	1					
ANR	3937772	ExpressionStatement	"zend_emit_op ( NULL , ZEND_JMP , NULL , NULL )"	4192:2:120751:120791	3937052	6	True				
ANR	3937773	CallExpression	"zend_emit_op ( NULL , ZEND_JMP , NULL , NULL )"		3937052	0					
ANR	3937774	Callee	zend_emit_op		3937052	0					
ANR	3937775	Identifier	zend_emit_op		3937052	0					
ANR	3937776	ArgumentList	NULL		3937052	1					
ANR	3937777	Argument	NULL		3937052	0					
ANR	3937778	Identifier	NULL		3937052	0					
ANR	3937779	Argument	ZEND_JMP		3937052	1					
ANR	3937780	Identifier	ZEND_JMP		3937052	0					
ANR	3937781	Argument	NULL		3937052	2					
ANR	3937782	Identifier	NULL		3937052	0					
ANR	3937783	Argument	NULL		3937052	3					
ANR	3937784	Identifier	NULL		3937052	0					
ANR	3937785	ExpressionStatement	CG ( context ) . in_finally ++	4194:2:120796:120820	3937052	7	True				
ANR	3937786	PostIncDecOperationExpression	CG ( context ) . in_finally ++		3937052	0					
ANR	3937787	MemberAccess	CG ( context ) . in_finally		3937052	0					
ANR	3937788	CallExpression	CG ( context )		3937052	0					
ANR	3937789	Callee	CG		3937052	0					
ANR	3937790	Identifier	CG		3937052	0					
ANR	3937791	ArgumentList	context		3937052	1					
ANR	3937792	Argument	context		3937052	0					
ANR	3937793	Identifier	context		3937052	0					
ANR	3937794	Identifier	in_finally		3937052	1					
ANR	3937795	IncDec	++		3937052	1					
ANR	3937796	ExpressionStatement	zend_compile_stmt ( finally_ast )	4195:2:120824:120854	3937052	8	True				
ANR	3937797	CallExpression	zend_compile_stmt ( finally_ast )		3937052	0					
ANR	3937798	Callee	zend_compile_stmt		3937052	0					
ANR	3937799	Identifier	zend_compile_stmt		3937052	0					
ANR	3937800	ArgumentList	finally_ast		3937052	1					
ANR	3937801	Argument	finally_ast		3937052	0					
ANR	3937802	Identifier	finally_ast		3937052	0					
ANR	3937803	ExpressionStatement	CG ( context ) . in_finally --	4196:2:120858:120882	3937052	9	True				
ANR	3937804	PostIncDecOperationExpression	CG ( context ) . in_finally --		3937052	0					
ANR	3937805	MemberAccess	CG ( context ) . in_finally		3937052	0					
ANR	3937806	CallExpression	CG ( context )		3937052	0					
ANR	3937807	Callee	CG		3937052	0					
ANR	3937808	Identifier	CG		3937052	0					
ANR	3937809	ArgumentList	context		3937052	1					
ANR	3937810	Argument	context		3937052	0					
ANR	3937811	Identifier	context		3937052	0					
ANR	3937812	Identifier	in_finally		3937052	1					
ANR	3937813	IncDec	--		3937052	1					
ANR	3937814	ExpressionStatement	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_op = opnum_jmp + 1	4198:2:120887:120968	3937052	10	True				
ANR	3937815	AssignmentExpression	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_op = opnum_jmp + 1		3937052	0		=			
ANR	3937816	MemberAccess	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_op		3937052	0					
ANR	3937817	ArrayIndexing	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ]		3937052	0					
ANR	3937818	PtrMemberAccess	CG ( active_op_array ) -> try_catch_array		3937052	0					
ANR	3937819	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937820	Callee	CG		3937052	0					
ANR	3937821	Identifier	CG		3937052	0					
ANR	3937822	ArgumentList	active_op_array		3937052	1					
ANR	3937823	Argument	active_op_array		3937052	0					
ANR	3937824	Identifier	active_op_array		3937052	0					
ANR	3937825	Identifier	try_catch_array		3937052	1					
ANR	3937826	Identifier	try_catch_offset		3937052	1					
ANR	3937827	Identifier	finally_op		3937052	1					
ANR	3937828	AdditiveExpression	opnum_jmp + 1		3937052	1		+			
ANR	3937829	Identifier	opnum_jmp		3937052	0					
ANR	3937830	PrimaryExpression	1		3937052	1					
ANR	3937831	ExpressionStatement	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_end = get_next_op_number ( CG ( active_op_array ) )	4199:2:120972:121083	3937052	11	True				
ANR	3937832	AssignmentExpression	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_end = get_next_op_number ( CG ( active_op_array ) )		3937052	0		=			
ANR	3937833	MemberAccess	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_end		3937052	0					
ANR	3937834	ArrayIndexing	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ]		3937052	0					
ANR	3937835	PtrMemberAccess	CG ( active_op_array ) -> try_catch_array		3937052	0					
ANR	3937836	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937837	Callee	CG		3937052	0					
ANR	3937838	Identifier	CG		3937052	0					
ANR	3937839	ArgumentList	active_op_array		3937052	1					
ANR	3937840	Argument	active_op_array		3937052	0					
ANR	3937841	Identifier	active_op_array		3937052	0					
ANR	3937842	Identifier	try_catch_array		3937052	1					
ANR	3937843	Identifier	try_catch_offset		3937052	1					
ANR	3937844	Identifier	finally_end		3937052	1					
ANR	3937845	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3937052	1					
ANR	3937846	Callee	get_next_op_number		3937052	0					
ANR	3937847	Identifier	get_next_op_number		3937052	0					
ANR	3937848	ArgumentList	CG ( active_op_array )		3937052	1					
ANR	3937849	Argument	CG ( active_op_array )		3937052	0					
ANR	3937850	CallExpression	CG ( active_op_array )		3937052	0					
ANR	3937851	Callee	CG		3937052	0					
ANR	3937852	Identifier	CG		3937052	0					
ANR	3937853	ArgumentList	active_op_array		3937052	1					
ANR	3937854	Argument	active_op_array		3937052	0					
ANR	3937855	Identifier	active_op_array		3937052	0					
ANR	3937856	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_FAST_RET , NULL , NULL )"	4202:2:121088:121142	3937052	12	True				
ANR	3937857	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_FAST_RET , NULL , NULL )"		3937052	0		=			
ANR	3937858	Identifier	opline		3937052	0					
ANR	3937859	CallExpression	"zend_emit_op ( NULL , ZEND_FAST_RET , NULL , NULL )"		3937052	1					
ANR	3937860	Callee	zend_emit_op		3937052	0					
ANR	3937861	Identifier	zend_emit_op		3937052	0					
ANR	3937862	ArgumentList	NULL		3937052	1					
ANR	3937863	Argument	NULL		3937052	0					
ANR	3937864	Identifier	NULL		3937052	0					
ANR	3937865	Argument	ZEND_FAST_RET		3937052	1					
ANR	3937866	Identifier	ZEND_FAST_RET		3937052	0					
ANR	3937867	Argument	NULL		3937052	2					
ANR	3937868	Identifier	NULL		3937052	0					
ANR	3937869	Argument	NULL		3937052	3					
ANR	3937870	Identifier	NULL		3937052	0					
ANR	3937871	ExpressionStatement	opline -> op1_type = IS_TMP_VAR	4203:2:121146:121175	3937052	13	True				
ANR	3937872	AssignmentExpression	opline -> op1_type = IS_TMP_VAR		3937052	0		=			
ANR	3937873	PtrMemberAccess	opline -> op1_type		3937052	0					
ANR	3937874	Identifier	opline		3937052	0					
ANR	3937875	Identifier	op1_type		3937052	1					
ANR	3937876	Identifier	IS_TMP_VAR		3937052	1					
ANR	3937877	ExpressionStatement	opline -> op1 . var = CG ( context ) . fast_call_var	4204:2:121179:121222	3937052	14	True				
ANR	3937878	AssignmentExpression	opline -> op1 . var = CG ( context ) . fast_call_var		3937052	0		=			
ANR	3937879	MemberAccess	opline -> op1 . var		3937052	0					
ANR	3937880	PtrMemberAccess	opline -> op1		3937052	0					
ANR	3937881	Identifier	opline		3937052	0					
ANR	3937882	Identifier	op1		3937052	1					
ANR	3937883	Identifier	var		3937052	1					
ANR	3937884	MemberAccess	CG ( context ) . fast_call_var		3937052	1					
ANR	3937885	CallExpression	CG ( context )		3937052	0					
ANR	3937886	Callee	CG		3937052	0					
ANR	3937887	Identifier	CG		3937052	0					
ANR	3937888	ArgumentList	context		3937052	1					
ANR	3937889	Argument	context		3937052	0					
ANR	3937890	Identifier	context		3937052	0					
ANR	3937891	Identifier	fast_call_var		3937052	1					
ANR	3937892	ExpressionStatement	zend_update_jump_target_to_next ( opnum_jmp )	4206:2:121227:121269	3937052	15	True				
ANR	3937893	CallExpression	zend_update_jump_target_to_next ( opnum_jmp )		3937052	0					
ANR	3937894	Callee	zend_update_jump_target_to_next		3937052	0					
ANR	3937895	Identifier	zend_update_jump_target_to_next		3937052	0					
ANR	3937896	ArgumentList	opnum_jmp		3937052	1					
ANR	3937897	Argument	opnum_jmp		3937052	0					
ANR	3937898	Identifier	opnum_jmp		3937052	0					
ANR	3937899	ExpressionStatement	efree ( jmp_opnums )	4209:1:121276:121293	3937052	16	True				
ANR	3937900	CallExpression	efree ( jmp_opnums )		3937052	0					
ANR	3937901	Callee	efree		3937052	0					
ANR	3937902	Identifier	efree		3937052	0					
ANR	3937903	ArgumentList	jmp_opnums		3937052	1					
ANR	3937904	Argument	jmp_opnums		3937052	0					
ANR	3937905	Identifier	jmp_opnums		3937052	0					
ANR	3937906	ReturnType	void		3937052	1					
ANR	3937907	Identifier	zend_compile_try		3937052	2					
ANR	3937908	ParameterList	zend_ast * ast		3937052	3					
ANR	3937909	Parameter	zend_ast * ast	4087:22:117508:117520	3937052	0	True				
ANR	3937910	ParameterType	zend_ast *		3937052	0					
ANR	3937911	Identifier	ast		3937052	1					
ANR	3937912	CFGEntryNode	ENTRY		3937052		True				
ANR	3937913	CFGExitNode	EXIT		3937052		True				
ANR	3937914	CFGErrorNode	ERROR		3937052		True				
ANR	3937915	Symbol	fast_call . var_type		3937052						
ANR	3937916	Symbol	* CG		3937052						
ANR	3937917	Symbol	get_temporary_variable		3937052						
ANR	3937918	Symbol	* * catches		3937052						
ANR	3937919	Symbol	catch_ast		3937052						
ANR	3937920	Symbol	ZEND_CATCH		3937052						
ANR	3937921	Symbol	* CG ( active_op_array ) -> try_catch_array		3937052						
ANR	3937922	Symbol	context		3937052						
ANR	3937923	Symbol	fast_call . u . try_catch_offset		3937052						
ANR	3937924	Symbol	catches -> children		3937052						
ANR	3937925	Symbol	IS_CONST		3937052						
ANR	3937926	Symbol	catch_ast -> child		3937052						
ANR	3937927	Symbol	* catch_ast		3937052						
ANR	3937928	Symbol	* catches		3937052						
ANR	3937929	Symbol	zend_add_try_element		3937052						
ANR	3937930	Symbol	* ast -> child		3937052						
ANR	3937931	Symbol	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_end		3937052						
ANR	3937932	Symbol	fast_call		3937052						
ANR	3937933	Symbol	zend_emit_op		3937052						
ANR	3937934	Symbol	zend_is_const_default_class_ref		3937052						
ANR	3937935	Symbol	zend_add_class_name_literal		3937052						
ANR	3937936	Symbol	* catch_ast -> child		3937052						
ANR	3937937	Symbol	jmp_opnums		3937052						
ANR	3937938	Symbol	class_ast		3937052						
ANR	3937939	Symbol	fast_call . u		3937052						
ANR	3937940	Symbol	try_ast		3937052						
ANR	3937941	Symbol	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . finally_op		3937052						
ANR	3937942	Symbol	loop_var_stack		3937052						
ANR	3937943	Symbol	opline -> op1 . constant		3937052						
ANR	3937944	Symbol	ZEND_ACC_HAS_FINALLY_BLOCK		3937052						
ANR	3937945	Symbol	CG ( active_op_array ) -> try_catch_array [ try_catch_offset ] . catch_op		3937052						
ANR	3937946	Symbol	opline -> op1 . var		3937052						
ANR	3937947	Symbol	var_name		3937052						
ANR	3937948	Symbol	ZEND_FAST_CALL		3937052						
ANR	3937949	Symbol	opnum_catch		3937052						
ANR	3937950	Symbol	get_next_op		3937052						
ANR	3937951	Symbol	CG		3937052						
ANR	3937952	Symbol	active_op_array		3937052						
ANR	3937953	Symbol	i		3937052						
ANR	3937954	Symbol	label -> opline_num		3937052						
ANR	3937955	Symbol	var_ast		3937052						
ANR	3937956	Symbol	ZEND_JMP		3937052						
ANR	3937957	Symbol	* opline		3937052						
ANR	3937958	Symbol	* try_catch_offset		3937052						
ANR	3937959	Symbol	opline -> op2_type		3937052						
ANR	3937960	Symbol	safe_emalloc		3937052						
ANR	3937961	Symbol	get_next_op_number		3937052						
ANR	3937962	Symbol	opline -> result . var		3937052						
ANR	3937963	Symbol	zend_emit_jump		3937052						
ANR	3937964	Symbol	ZEND_FAST_RET		3937052						
ANR	3937965	Symbol	stmt_ast		3937052						
ANR	3937966	Symbol	opline -> op2 . var		3937052						
ANR	3937967	Symbol	ast		3937052						
ANR	3937968	Symbol	IS_CV		3937052						
ANR	3937969	Symbol	E_COMPILE_ERROR		3937052						
ANR	3937970	Symbol	catches		3937052						
ANR	3937971	Symbol	CG ( context ) . fast_call_var		3937052						
ANR	3937972	Symbol	is_last_catch		3937052						
ANR	3937973	Symbol	CG ( active_op_array ) -> opcodes		3937052						
ANR	3937974	Symbol	opline -> result		3937052						
ANR	3937975	Symbol	opline -> extended_value		3937052						
ANR	3937976	Symbol	& CG		3937052						
ANR	3937977	Symbol	opline		3937052						
ANR	3937978	Symbol	& fast_call		3937052						
ANR	3937979	Symbol	zend_lineno		3937052						
ANR	3937980	Symbol	IS_TMP_VAR		3937052						
ANR	3937981	Symbol	opnum_jmp		3937052						
ANR	3937982	Symbol	NULL		3937052						
ANR	3937983	Symbol	zend_string_copy		3937052						
ANR	3937984	Symbol	ZEND_NOP		3937052						
ANR	3937985	Symbol	CG ( active_op_array ) -> fn_flags		3937052						
ANR	3937986	Symbol	opline -> op1_type		3937052						
ANR	3937987	Symbol	* jmp_opnums		3937052						
ANR	3937988	Symbol	catches -> child		3937052						
ANR	3937989	Symbol	opline -> op1 . num		3937052						
ANR	3937990	Symbol	Z_STR_P		3937052						
ANR	3937991	Symbol	ast -> child		3937052						
ANR	3937992	Symbol	zend_ast_get_zval		3937052						
ANR	3937993	Symbol	catch_ast -> lineno		3937052						
ANR	3937994	Symbol	opline -> op1		3937052						
ANR	3937995	Symbol	opline -> op2		3937052						
ANR	3937996	Symbol	lookup_cv		3937052						
ANR	3937997	Symbol	* * catch_ast		3937052						
ANR	3937998	Symbol	CG ( active_op_array ) -> try_catch_array		3937052						
ANR	3937999	Symbol	* * CG		3937052						
ANR	3938000	Symbol	* ast		3937052						
ANR	3938001	Symbol	* catches -> child		3937052						
ANR	3938002	Symbol	* * ast		3937052						
ANR	3938003	Symbol	CG ( context ) . labels		3937052						
ANR	3938004	Symbol	opline -> result . num		3937052						
ANR	3938005	Symbol	opline -> result_type		3937052						
ANR	3938006	Symbol	CG ( context ) . in_finally		3937052						
ANR	3938007	Symbol	fast_call . opcode		3937052						
ANR	3938008	Symbol	zend_resolve_class_name_ast		3937052						
ANR	3938009	Symbol	try_catch_offset		3937052						
ANR	3938010	Symbol	label		3937052						
ANR	3938011	Symbol	fast_call . var_num		3937052						
ANR	3938012	Symbol	zend_ast_get_list		3937052						
ANR	3938013	Symbol	* i		3937052						
ANR	3938014	Symbol	opline -> opcode		3937052						
ANR	3938015	Symbol	finally_ast		3937052						
ANR	3938016	Symbol	* label		3937052						
ANR	3938017	Function	zend_handle_encoding_declaration	4214:0:121375:122945							
ANR	3938018	FunctionDef	zend_handle_encoding_declaration (zend_ast * ast)		3938017	0					
ANR	3938019	CompoundStatement		4215:0:121438:122945	3938017	0					
ANR	3938020	IdentifierDeclStatement	zend_ast_list * declares = zend_ast_get_list ( ast ) ;	4216:1:121441:121489	3938017	0	True				
ANR	3938021	IdentifierDecl	* declares = zend_ast_get_list ( ast )		3938017	0					
ANR	3938022	IdentifierDeclType	zend_ast_list *		3938017	0					
ANR	3938023	Identifier	declares		3938017	1					
ANR	3938024	AssignmentExpression	* declares = zend_ast_get_list ( ast )		3938017	2		=			
ANR	3938025	Identifier	declares		3938017	0					
ANR	3938026	CallExpression	zend_ast_get_list ( ast )		3938017	1					
ANR	3938027	Callee	zend_ast_get_list		3938017	0					
ANR	3938028	Identifier	zend_ast_get_list		3938017	0					
ANR	3938029	ArgumentList	ast		3938017	1					
ANR	3938030	Argument	ast		3938017	0					
ANR	3938031	Identifier	ast		3938017	0					
ANR	3938032	IdentifierDeclStatement	uint32_t i ;	4217:1:121492:121502	3938017	1	True				
ANR	3938033	IdentifierDecl	i		3938017	0					
ANR	3938034	IdentifierDeclType	uint32_t		3938017	0					
ANR	3938035	Identifier	i		3938017	1					
ANR	3938036	ForStatement	for ( i = 0 ; i < declares -> children ; ++ i )		3938017	2					
ANR	3938037	ForInit	i = 0 ;	4218:6:121510:121515	3938017	0	True				
ANR	3938038	AssignmentExpression	i = 0		3938017	0		=			
ANR	3938039	Identifier	i		3938017	0					
ANR	3938040	PrimaryExpression	0		3938017	1					
ANR	3938041	Condition	i < declares -> children	4218:13:121517:121538	3938017	1	True				
ANR	3938042	RelationalExpression	i < declares -> children		3938017	0		<			
ANR	3938043	Identifier	i		3938017	0					
ANR	3938044	PtrMemberAccess	declares -> children		3938017	1					
ANR	3938045	Identifier	declares		3938017	0					
ANR	3938046	Identifier	children		3938017	1					
ANR	3938047	UnaryExpression	++ i	4218:37:121541:121543	3938017	2	True				
ANR	3938048	IncDec	++		3938017	0					
ANR	3938049	Identifier	i		3938017	1					
ANR	3938050	CompoundStatement		8:2:250:296	3938017	3					
ANR	3938051	IdentifierDeclStatement	zend_ast * declare_ast = declares -> child [ i ] ;	4219:2:121550:121592	3938017	0	True				
ANR	3938052	IdentifierDecl	* declare_ast = declares -> child [ i ]		3938017	0					
ANR	3938053	IdentifierDeclType	zend_ast *		3938017	0					
ANR	3938054	Identifier	declare_ast		3938017	1					
ANR	3938055	AssignmentExpression	* declare_ast = declares -> child [ i ]		3938017	2		=			
ANR	3938056	Identifier	declare_ast		3938017	0					
ANR	3938057	ArrayIndexing	declares -> child [ i ]		3938017	1					
ANR	3938058	PtrMemberAccess	declares -> child		3938017	0					
ANR	3938059	Identifier	declares		3938017	0					
ANR	3938060	Identifier	child		3938017	1					
ANR	3938061	Identifier	i		3938017	1					
ANR	3938062	IdentifierDeclStatement	zend_ast * name_ast = declare_ast -> child [ 0 ] ;	4220:2:121596:121638	3938017	1	True				
ANR	3938063	IdentifierDecl	* name_ast = declare_ast -> child [ 0 ]		3938017	0					
ANR	3938064	IdentifierDeclType	zend_ast *		3938017	0					
ANR	3938065	Identifier	name_ast		3938017	1					
ANR	3938066	AssignmentExpression	* name_ast = declare_ast -> child [ 0 ]		3938017	2		=			
ANR	3938067	Identifier	name_ast		3938017	0					
ANR	3938068	ArrayIndexing	declare_ast -> child [ 0 ]		3938017	1					
ANR	3938069	PtrMemberAccess	declare_ast -> child		3938017	0					
ANR	3938070	Identifier	declare_ast		3938017	0					
ANR	3938071	Identifier	child		3938017	1					
ANR	3938072	PrimaryExpression	0		3938017	1					
ANR	3938073	IdentifierDeclStatement	zend_ast * value_ast = declare_ast -> child [ 1 ] ;	4221:2:121642:121685	3938017	2	True				
ANR	3938074	IdentifierDecl	* value_ast = declare_ast -> child [ 1 ]		3938017	0					
ANR	3938075	IdentifierDeclType	zend_ast *		3938017	0					
ANR	3938076	Identifier	value_ast		3938017	1					
ANR	3938077	AssignmentExpression	* value_ast = declare_ast -> child [ 1 ]		3938017	2		=			
ANR	3938078	Identifier	value_ast		3938017	0					
ANR	3938079	ArrayIndexing	declare_ast -> child [ 1 ]		3938017	1					
ANR	3938080	PtrMemberAccess	declare_ast -> child		3938017	0					
ANR	3938081	Identifier	declare_ast		3938017	0					
ANR	3938082	Identifier	child		3938017	1					
ANR	3938083	PrimaryExpression	1		3938017	1					
ANR	3938084	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( name_ast ) ;	4222:2:121689:121735	3938017	3	True				
ANR	3938085	IdentifierDecl	* name = zend_ast_get_str ( name_ast )		3938017	0					
ANR	3938086	IdentifierDeclType	zend_string *		3938017	0					
ANR	3938087	Identifier	name		3938017	1					
ANR	3938088	AssignmentExpression	* name = zend_ast_get_str ( name_ast )		3938017	2		=			
ANR	3938089	Identifier	name		3938017	0					
ANR	3938090	CallExpression	zend_ast_get_str ( name_ast )		3938017	1					
ANR	3938091	Callee	zend_ast_get_str		3938017	0					
ANR	3938092	Identifier	zend_ast_get_str		3938017	0					
ANR	3938093	ArgumentList	name_ast		3938017	1					
ANR	3938094	Argument	name_ast		3938017	0					
ANR	3938095	Identifier	name_ast		3938017	0					
ANR	3938096	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""encoding"" ) )"		3938017	4					
ANR	3938097	Condition	"zend_string_equals_literal_ci ( name , ""encoding"" )"	4224:6:121744:121790	3938017	0	True				
ANR	3938098	CallExpression	"zend_string_equals_literal_ci ( name , ""encoding"" )"		3938017	0					
ANR	3938099	Callee	zend_string_equals_literal_ci		3938017	0					
ANR	3938100	Identifier	zend_string_equals_literal_ci		3938017	0					
ANR	3938101	ArgumentList	name		3938017	1					
ANR	3938102	Argument	name		3938017	0					
ANR	3938103	Identifier	name		3938017	0					
ANR	3938104	Argument	"""encoding"""		3938017	1					
ANR	3938105	PrimaryExpression	"""encoding"""		3938017	0					
ANR	3938106	CompoundStatement		10:55:354:354	3938017	1					
ANR	3938107	IfStatement	if ( value_ast -> kind != ZEND_AST_ZVAL )		3938017	0					
ANR	3938108	Condition	value_ast -> kind != ZEND_AST_ZVAL	4225:7:121802:121833	3938017	0	True				
ANR	3938109	EqualityExpression	value_ast -> kind != ZEND_AST_ZVAL		3938017	0		!=			
ANR	3938110	PtrMemberAccess	value_ast -> kind		3938017	0					
ANR	3938111	Identifier	value_ast		3938017	0					
ANR	3938112	Identifier	kind		3938017	1					
ANR	3938113	Identifier	ZEND_AST_ZVAL		3938017	1					
ANR	3938114	CompoundStatement		11:41:397:397	3938017	1					
ANR	3938115	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Encoding must be a literal"" )"	4226:4:121842:121908	3938017	0	True				
ANR	3938116	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Encoding must be a literal"" )"		3938017	0					
ANR	3938117	Callee	zend_error_noreturn		3938017	0					
ANR	3938118	Identifier	zend_error_noreturn		3938017	0					
ANR	3938119	ArgumentList	E_COMPILE_ERROR		3938017	1					
ANR	3938120	Argument	E_COMPILE_ERROR		3938017	0					
ANR	3938121	Identifier	E_COMPILE_ERROR		3938017	0					
ANR	3938122	Argument	"""Encoding must be a literal"""		3938017	1					
ANR	3938123	PrimaryExpression	"""Encoding must be a literal"""		3938017	0					
ANR	3938124	IfStatement	if ( CG ( multibyte ) )		3938017	1					
ANR	3938125	Condition	CG ( multibyte )	4229:7:121923:121935	3938017	0	True				
ANR	3938126	CallExpression	CG ( multibyte )		3938017	0					
ANR	3938127	Callee	CG		3938017	0					
ANR	3938128	Identifier	CG		3938017	0					
ANR	3938129	ArgumentList	multibyte		3938017	1					
ANR	3938130	Argument	multibyte		3938017	0					
ANR	3938131	Identifier	multibyte		3938017	0					
ANR	3938132	CompoundStatement		19:4:640:677	3938017	1					
ANR	3938133	IdentifierDeclStatement	zend_string * encoding_name = zval_get_string ( zend_ast_get_zval ( value_ast ) ) ;	4230:4:121944:122018	3938017	0	True				
ANR	3938134	IdentifierDecl	* encoding_name = zval_get_string ( zend_ast_get_zval ( value_ast ) )		3938017	0					
ANR	3938135	IdentifierDeclType	zend_string *		3938017	0					
ANR	3938136	Identifier	encoding_name		3938017	1					
ANR	3938137	AssignmentExpression	* encoding_name = zval_get_string ( zend_ast_get_zval ( value_ast ) )		3938017	2		=			
ANR	3938138	Identifier	encoding_name		3938017	0					
ANR	3938139	CallExpression	zval_get_string ( zend_ast_get_zval ( value_ast ) )		3938017	1					
ANR	3938140	Callee	zval_get_string		3938017	0					
ANR	3938141	Identifier	zval_get_string		3938017	0					
ANR	3938142	ArgumentList	zend_ast_get_zval ( value_ast )		3938017	1					
ANR	3938143	Argument	zend_ast_get_zval ( value_ast )		3938017	0					
ANR	3938144	CallExpression	zend_ast_get_zval ( value_ast )		3938017	0					
ANR	3938145	Callee	zend_ast_get_zval		3938017	0					
ANR	3938146	Identifier	zend_ast_get_zval		3938017	0					
ANR	3938147	ArgumentList	value_ast		3938017	1					
ANR	3938148	Argument	value_ast		3938017	0					
ANR	3938149	Identifier	value_ast		3938017	0					
ANR	3938150	IdentifierDeclStatement	"const zend_encoding * new_encoding , * old_encoding ;"	4232:4:122025:122073	3938017	1	True				
ANR	3938151	IdentifierDecl	* new_encoding		3938017	0					
ANR	3938152	IdentifierDeclType	const zend_encoding *		3938017	0					
ANR	3938153	Identifier	new_encoding		3938017	1					
ANR	3938154	IdentifierDecl	* old_encoding		3938017	1					
ANR	3938155	IdentifierDeclType	const zend_encoding *		3938017	0					
ANR	3938156	Identifier	old_encoding		3938017	1					
ANR	3938157	IdentifierDeclStatement	zend_encoding_filter old_input_filter ;	4233:4:122079:122116	3938017	2	True				
ANR	3938158	IdentifierDecl	old_input_filter		3938017	0					
ANR	3938159	IdentifierDeclType	zend_encoding_filter		3938017	0					
ANR	3938160	Identifier	old_input_filter		3938017	1					
ANR	3938161	ExpressionStatement	CG ( encoding_declared ) = 1	4235:4:122123:122148	3938017	3	True				
ANR	3938162	AssignmentExpression	CG ( encoding_declared ) = 1		3938017	0		=			
ANR	3938163	CallExpression	CG ( encoding_declared )		3938017	0					
ANR	3938164	Callee	CG		3938017	0					
ANR	3938165	Identifier	CG		3938017	0					
ANR	3938166	ArgumentList	encoding_declared		3938017	1					
ANR	3938167	Argument	encoding_declared		3938017	0					
ANR	3938168	Identifier	encoding_declared		3938017	0					
ANR	3938169	PrimaryExpression	1		3938017	1					
ANR	3938170	ExpressionStatement	new_encoding = zend_multibyte_fetch_encoding ( ZSTR_VAL ( encoding_name ) )	4237:4:122155:122224	3938017	4	True				
ANR	3938171	AssignmentExpression	new_encoding = zend_multibyte_fetch_encoding ( ZSTR_VAL ( encoding_name ) )		3938017	0		=			
ANR	3938172	Identifier	new_encoding		3938017	0					
ANR	3938173	CallExpression	zend_multibyte_fetch_encoding ( ZSTR_VAL ( encoding_name ) )		3938017	1					
ANR	3938174	Callee	zend_multibyte_fetch_encoding		3938017	0					
ANR	3938175	Identifier	zend_multibyte_fetch_encoding		3938017	0					
ANR	3938176	ArgumentList	ZSTR_VAL ( encoding_name )		3938017	1					
ANR	3938177	Argument	ZSTR_VAL ( encoding_name )		3938017	0					
ANR	3938178	CallExpression	ZSTR_VAL ( encoding_name )		3938017	0					
ANR	3938179	Callee	ZSTR_VAL		3938017	0					
ANR	3938180	Identifier	ZSTR_VAL		3938017	0					
ANR	3938181	ArgumentList	encoding_name		3938017	1					
ANR	3938182	Argument	encoding_name		3938017	0					
ANR	3938183	Identifier	encoding_name		3938017	0					
ANR	3938184	IfStatement	if ( ! new_encoding )		3938017	5					
ANR	3938185	Condition	! new_encoding	4238:8:122234:122246	3938017	0	True				
ANR	3938186	UnaryOperationExpression	! new_encoding		3938017	0					
ANR	3938187	UnaryOperator	!		3938017	0					
ANR	3938188	Identifier	new_encoding		3938017	1					
ANR	3938189	CompoundStatement		24:23:810:810	3938017	1					
ANR	3938190	ExpressionStatement	"zend_error ( E_COMPILE_WARNING , ""Unsupported encoding [%s]"" , ZSTR_VAL ( encoding_name ) )"	4239:5:122256:122339	3938017	0	True				
ANR	3938191	CallExpression	"zend_error ( E_COMPILE_WARNING , ""Unsupported encoding [%s]"" , ZSTR_VAL ( encoding_name ) )"		3938017	0					
ANR	3938192	Callee	zend_error		3938017	0					
ANR	3938193	Identifier	zend_error		3938017	0					
ANR	3938194	ArgumentList	E_COMPILE_WARNING		3938017	1					
ANR	3938195	Argument	E_COMPILE_WARNING		3938017	0					
ANR	3938196	Identifier	E_COMPILE_WARNING		3938017	0					
ANR	3938197	Argument	"""Unsupported encoding [%s]"""		3938017	1					
ANR	3938198	PrimaryExpression	"""Unsupported encoding [%s]"""		3938017	0					
ANR	3938199	Argument	ZSTR_VAL ( encoding_name )		3938017	2					
ANR	3938200	CallExpression	ZSTR_VAL ( encoding_name )		3938017	0					
ANR	3938201	Callee	ZSTR_VAL		3938017	0					
ANR	3938202	Identifier	ZSTR_VAL		3938017	0					
ANR	3938203	ArgumentList	encoding_name		3938017	1					
ANR	3938204	Argument	encoding_name		3938017	0					
ANR	3938205	Identifier	encoding_name		3938017	0					
ANR	3938206	ElseStatement	else		3938017	0					
ANR	3938207	CompoundStatement		26:11:913:913	3938017	0					
ANR	3938208	ExpressionStatement	old_input_filter = LANG_SCNG ( input_filter )	4241:5:122359:122401	3938017	0	True				
ANR	3938209	AssignmentExpression	old_input_filter = LANG_SCNG ( input_filter )		3938017	0		=			
ANR	3938210	Identifier	old_input_filter		3938017	0					
ANR	3938211	CallExpression	LANG_SCNG ( input_filter )		3938017	1					
ANR	3938212	Callee	LANG_SCNG		3938017	0					
ANR	3938213	Identifier	LANG_SCNG		3938017	0					
ANR	3938214	ArgumentList	input_filter		3938017	1					
ANR	3938215	Argument	input_filter		3938017	0					
ANR	3938216	Identifier	input_filter		3938017	0					
ANR	3938217	ExpressionStatement	old_encoding = LANG_SCNG ( script_encoding )	4242:5:122408:122449	3938017	1	True				
ANR	3938218	AssignmentExpression	old_encoding = LANG_SCNG ( script_encoding )		3938017	0		=			
ANR	3938219	Identifier	old_encoding		3938017	0					
ANR	3938220	CallExpression	LANG_SCNG ( script_encoding )		3938017	1					
ANR	3938221	Callee	LANG_SCNG		3938017	0					
ANR	3938222	Identifier	LANG_SCNG		3938017	0					
ANR	3938223	ArgumentList	script_encoding		3938017	1					
ANR	3938224	Argument	script_encoding		3938017	0					
ANR	3938225	Identifier	script_encoding		3938017	0					
ANR	3938226	ExpressionStatement	zend_multibyte_set_filter ( new_encoding )	4243:5:122456:122495	3938017	2	True				
ANR	3938227	CallExpression	zend_multibyte_set_filter ( new_encoding )		3938017	0					
ANR	3938228	Callee	zend_multibyte_set_filter		3938017	0					
ANR	3938229	Identifier	zend_multibyte_set_filter		3938017	0					
ANR	3938230	ArgumentList	new_encoding		3938017	1					
ANR	3938231	Argument	new_encoding		3938017	0					
ANR	3938232	Identifier	new_encoding		3938017	0					
ANR	3938233	IfStatement	if ( old_input_filter != LANG_SCNG ( input_filter ) || ( old_input_filter && new_encoding != old_encoding ) )		3938017	3					
ANR	3938234	Condition	old_input_filter != LANG_SCNG ( input_filter ) || ( old_input_filter && new_encoding != old_encoding )	4246:9:122558:122661	3938017	0	True				
ANR	3938235	OrExpression	old_input_filter != LANG_SCNG ( input_filter ) || ( old_input_filter && new_encoding != old_encoding )		3938017	0		||			
ANR	3938236	EqualityExpression	old_input_filter != LANG_SCNG ( input_filter )		3938017	0		!=			
ANR	3938237	Identifier	old_input_filter		3938017	0					
ANR	3938238	CallExpression	LANG_SCNG ( input_filter )		3938017	1					
ANR	3938239	Callee	LANG_SCNG		3938017	0					
ANR	3938240	Identifier	LANG_SCNG		3938017	0					
ANR	3938241	ArgumentList	input_filter		3938017	1					
ANR	3938242	Argument	input_filter		3938017	0					
ANR	3938243	Identifier	input_filter		3938017	0					
ANR	3938244	AndExpression	old_input_filter && new_encoding != old_encoding		3938017	1		&&			
ANR	3938245	Identifier	old_input_filter		3938017	0					
ANR	3938246	EqualityExpression	new_encoding != old_encoding		3938017	1		!=			
ANR	3938247	Identifier	new_encoding		3938017	0					
ANR	3938248	Identifier	old_encoding		3938017	1					
ANR	3938249	CompoundStatement		33:59:1225:1225	3938017	1					
ANR	3938250	ExpressionStatement	"zend_multibyte_yyinput_again ( old_input_filter , old_encoding )"	4248:6:122672:122732	3938017	0	True				
ANR	3938251	CallExpression	"zend_multibyte_yyinput_again ( old_input_filter , old_encoding )"		3938017	0					
ANR	3938252	Callee	zend_multibyte_yyinput_again		3938017	0					
ANR	3938253	Identifier	zend_multibyte_yyinput_again		3938017	0					
ANR	3938254	ArgumentList	old_input_filter		3938017	1					
ANR	3938255	Argument	old_input_filter		3938017	0					
ANR	3938256	Identifier	old_input_filter		3938017	0					
ANR	3938257	Argument	old_encoding		3938017	1					
ANR	3938258	Identifier	old_encoding		3938017	0					
ANR	3938259	ExpressionStatement	zend_string_release ( encoding_name )	4252:4:122752:122786	3938017	6	True				
ANR	3938260	CallExpression	zend_string_release ( encoding_name )		3938017	0					
ANR	3938261	Callee	zend_string_release		3938017	0					
ANR	3938262	Identifier	zend_string_release		3938017	0					
ANR	3938263	ArgumentList	encoding_name		3938017	1					
ANR	3938264	Argument	encoding_name		3938017	0					
ANR	3938265	Identifier	encoding_name		3938017	0					
ANR	3938266	ElseStatement	else		3938017	0					
ANR	3938267	CompoundStatement		39:10:1359:1359	3938017	0					
ANR	3938268	Statement	zend_error	4254:4:122804:122813	3938017	0	True				
ANR	3938269	Statement	(	4254:14:122814:122814	3938017	1	True				
ANR	3938270	Statement	E_COMPILE_WARNING	4254:15:122815:122831	3938017	2	True				
ANR	3938271	Statement	","	4254:32:122832:122832	3938017	3	True				
ANR	3938272	Statement	"""declare(encoding=...) ignored because """	4254:34:122834:122873	3938017	4	True				
ANR	3938273	Statement	"""Zend multibyte feature is turned off by settings"""	4255:5:122880:122929	3938017	5	True				
ANR	3938274	Statement	)	4255:55:122930:122930	3938017	6	True				
ANR	3938275	ExpressionStatement		4255:56:122931:122931	3938017	7	True				
ANR	3938276	ReturnType	void		3938017	1					
ANR	3938277	Identifier	zend_handle_encoding_declaration		3938017	2					
ANR	3938278	ParameterList	zend_ast * ast		3938017	3					
ANR	3938279	Parameter	zend_ast * ast	4214:38:121413:121425	3938017	0	True				
ANR	3938280	ParameterType	zend_ast *		3938017	0					
ANR	3938281	Identifier	ast		3938017	1					
ANR	3938282	CFGEntryNode	ENTRY		3938017		True				
ANR	3938283	CFGExitNode	EXIT		3938017		True				
ANR	3938284	Symbol	script_encoding		3938017						
ANR	3938285	Symbol	ast		3938017						
ANR	3938286	Symbol	* * declares		3938017						
ANR	3938287	Symbol	new_encoding		3938017						
ANR	3938288	Symbol	E_COMPILE_ERROR		3938017						
ANR	3938289	Symbol	input_filter		3938017						
ANR	3938290	Symbol	* declares		3938017						
ANR	3938291	Symbol	declares -> child		3938017						
ANR	3938292	Symbol	* declares -> child		3938017						
ANR	3938293	Symbol	* declare_ast		3938017						
ANR	3938294	Symbol	declares		3938017						
ANR	3938295	Symbol	* declare_ast -> child		3938017						
ANR	3938296	Symbol	zend_ast_get_str		3938017						
ANR	3938297	Symbol	value_ast -> kind		3938017						
ANR	3938298	Symbol	multibyte		3938017						
ANR	3938299	Symbol	value_ast		3938017						
ANR	3938300	Symbol	declare_ast -> child		3938017						
ANR	3938301	Symbol	LANG_SCNG		3938017						
ANR	3938302	Symbol	ZEND_AST_ZVAL		3938017						
ANR	3938303	Symbol	E_COMPILE_WARNING		3938017						
ANR	3938304	Symbol	CG		3938017						
ANR	3938305	Symbol	i		3938017						
ANR	3938306	Symbol	zval_get_string		3938017						
ANR	3938307	Symbol	* value_ast		3938017						
ANR	3938308	Symbol	declare_ast		3938017						
ANR	3938309	Symbol	zend_multibyte_fetch_encoding		3938017						
ANR	3938310	Symbol	zend_string_equals_literal_ci		3938017						
ANR	3938311	Symbol	ZSTR_VAL		3938017						
ANR	3938312	Symbol	zend_ast_get_list		3938017						
ANR	3938313	Symbol	encoding_name		3938017						
ANR	3938314	Symbol	declares -> children		3938017						
ANR	3938315	Symbol	* i		3938017						
ANR	3938316	Symbol	* * declare_ast		3938017						
ANR	3938317	Symbol	encoding_declared		3938017						
ANR	3938318	Symbol	name_ast		3938017						
ANR	3938319	Symbol	name		3938017						
ANR	3938320	Symbol	old_input_filter		3938017						
ANR	3938321	Symbol	zend_ast_get_zval		3938017						
ANR	3938322	Symbol	old_encoding		3938017						
ANR	3938323	Function	zend_declare_is_first_statement	4262:0:122958:123557							
ANR	3938324	FunctionDef	zend_declare_is_first_statement (zend_ast * ast)		3938323	0					
ANR	3938325	CompoundStatement		4263:0:123026:123557	3938323	0					
ANR	3938326	IdentifierDeclStatement	uint32_t i = 0 ;	4264:1:123029:123043	3938323	0	True				
ANR	3938327	IdentifierDecl	i = 0		3938323	0					
ANR	3938328	IdentifierDeclType	uint32_t		3938323	0					
ANR	3938329	Identifier	i		3938323	1					
ANR	3938330	AssignmentExpression	i = 0		3938323	2		=			
ANR	3938331	Identifier	i		3938323	0					
ANR	3938332	PrimaryExpression	0		3938323	1					
ANR	3938333	IdentifierDeclStatement	zend_ast_list * file_ast = zend_ast_get_list ( CG ( ast ) ) ;	4265:1:123046:123098	3938323	1	True				
ANR	3938334	IdentifierDecl	* file_ast = zend_ast_get_list ( CG ( ast ) )		3938323	0					
ANR	3938335	IdentifierDeclType	zend_ast_list *		3938323	0					
ANR	3938336	Identifier	file_ast		3938323	1					
ANR	3938337	AssignmentExpression	* file_ast = zend_ast_get_list ( CG ( ast ) )		3938323	2		=			
ANR	3938338	Identifier	file_ast		3938323	0					
ANR	3938339	CallExpression	zend_ast_get_list ( CG ( ast ) )		3938323	1					
ANR	3938340	Callee	zend_ast_get_list		3938323	0					
ANR	3938341	Identifier	zend_ast_get_list		3938323	0					
ANR	3938342	ArgumentList	CG ( ast )		3938323	1					
ANR	3938343	Argument	CG ( ast )		3938323	0					
ANR	3938344	CallExpression	CG ( ast )		3938323	0					
ANR	3938345	Callee	CG		3938323	0					
ANR	3938346	Identifier	CG		3938323	0					
ANR	3938347	ArgumentList	ast		3938323	1					
ANR	3938348	Argument	ast		3938323	0					
ANR	3938349	Identifier	ast		3938323	0					
ANR	3938350	WhileStatement	while ( i < file_ast -> children )		3938323	2					
ANR	3938351	Condition	i < file_ast -> children	4268:8:123185:123206	3938323	0	True				
ANR	3938352	RelationalExpression	i < file_ast -> children		3938323	0		<			
ANR	3938353	Identifier	i		3938323	0					
ANR	3938354	PtrMemberAccess	file_ast -> children		3938323	1					
ANR	3938355	Identifier	file_ast		3938323	0					
ANR	3938356	Identifier	children		3938323	1					
ANR	3938357	CompoundStatement		6:32:182:182	3938323	1					
ANR	3938358	IfStatement	if ( file_ast -> child [ i ] == ast )		3938323	0					
ANR	3938359	Condition	file_ast -> child [ i ] == ast	4269:6:123217:123241	3938323	0	True				
ANR	3938360	EqualityExpression	file_ast -> child [ i ] == ast		3938323	0		==			
ANR	3938361	ArrayIndexing	file_ast -> child [ i ]		3938323	0					
ANR	3938362	PtrMemberAccess	file_ast -> child		3938323	0					
ANR	3938363	Identifier	file_ast		3938323	0					
ANR	3938364	Identifier	child		3938323	1					
ANR	3938365	Identifier	i		3938323	1					
ANR	3938366	Identifier	ast		3938323	1					
ANR	3938367	CompoundStatement		7:33:217:217	3938323	1					
ANR	3938368	ReturnStatement	return SUCCESS ;	4270:3:123249:123263	3938323	0	True				
ANR	3938369	Identifier	SUCCESS		3938323	0					
ANR	3938370	ElseStatement	else		3938323	0					
ANR	3938371	IfStatement	if ( file_ast -> child [ i ] == NULL )		3938323	0					
ANR	3938372	Condition	file_ast -> child [ i ] == NULL	4271:13:123278:123303	3938323	0	True				
ANR	3938373	EqualityExpression	file_ast -> child [ i ] == NULL		3938323	0		==			
ANR	3938374	ArrayIndexing	file_ast -> child [ i ]		3938323	0					
ANR	3938375	PtrMemberAccess	file_ast -> child		3938323	0					
ANR	3938376	Identifier	file_ast		3938323	0					
ANR	3938377	Identifier	child		3938323	1					
ANR	3938378	Identifier	i		3938323	1					
ANR	3938379	Identifier	NULL		3938323	1					
ANR	3938380	CompoundStatement		9:41:279:279	3938323	1					
ANR	3938381	ReturnStatement	return FAILURE ;	4273:3:123372:123386	3938323	0	True				
ANR	3938382	Identifier	FAILURE		3938323	0					
ANR	3938383	ElseStatement	else		3938323	0					
ANR	3938384	IfStatement	if ( file_ast -> child [ i ] -> kind != ZEND_AST_DECLARE )		3938323	0					
ANR	3938385	Condition	file_ast -> child [ i ] -> kind != ZEND_AST_DECLARE	4274:13:123401:123444	3938323	0	True				
ANR	3938386	EqualityExpression	file_ast -> child [ i ] -> kind != ZEND_AST_DECLARE		3938323	0		!=			
ANR	3938387	PtrMemberAccess	file_ast -> child [ i ] -> kind		3938323	0					
ANR	3938388	ArrayIndexing	file_ast -> child [ i ]		3938323	0					
ANR	3938389	PtrMemberAccess	file_ast -> child		3938323	0					
ANR	3938390	Identifier	file_ast		3938323	0					
ANR	3938391	Identifier	child		3938323	1					
ANR	3938392	Identifier	i		3938323	1					
ANR	3938393	Identifier	kind		3938323	1					
ANR	3938394	Identifier	ZEND_AST_DECLARE		3938323	1					
ANR	3938395	CompoundStatement		12:59:420:420	3938323	1					
ANR	3938396	ReturnStatement	return FAILURE ;	4276:3:123510:123524	3938323	0	True				
ANR	3938397	Identifier	FAILURE		3938323	0					
ANR	3938398	ExpressionStatement	i ++	4278:2:123532:123535	3938323	1	True				
ANR	3938399	PostIncDecOperationExpression	i ++		3938323	0					
ANR	3938400	Identifier	i		3938323	0					
ANR	3938401	IncDec	++		3938323	1					
ANR	3938402	ReturnStatement	return FAILURE ;	4280:1:123541:123555	3938323	3	True				
ANR	3938403	Identifier	FAILURE		3938323	0					
ANR	3938404	ReturnType	static int		3938323	1					
ANR	3938405	Identifier	zend_declare_is_first_statement		3938323	2					
ANR	3938406	ParameterList	zend_ast * ast		3938323	3					
ANR	3938407	Parameter	zend_ast * ast	4262:43:123001:123013	3938323	0	True				
ANR	3938408	ParameterType	zend_ast *		3938323	0					
ANR	3938409	Identifier	ast		3938323	1					
ANR	3938410	CFGEntryNode	ENTRY		3938323		True				
ANR	3938411	CFGExitNode	EXIT		3938323		True				
ANR	3938412	Symbol	* file_ast -> child		3938323						
ANR	3938413	Symbol	* * i		3938323						
ANR	3938414	Symbol	ast		3938323						
ANR	3938415	Symbol	SUCCESS		3938323						
ANR	3938416	Symbol	NULL		3938323						
ANR	3938417	Symbol	CG		3938323						
ANR	3938418	Symbol	file_ast -> child		3938323						
ANR	3938419	Symbol	* * * file_ast		3938323						
ANR	3938420	Symbol	* * file_ast		3938323						
ANR	3938421	Symbol	file_ast -> child [ i ] -> kind		3938323						
ANR	3938422	Symbol	i		3938323						
ANR	3938423	Symbol	FAILURE		3938323						
ANR	3938424	Symbol	* * file_ast -> child		3938323						
ANR	3938425	Symbol	file_ast -> children		3938323						
ANR	3938426	Symbol	file_ast		3938323						
ANR	3938427	Symbol	zend_ast_get_list		3938323						
ANR	3938428	Symbol	* file_ast		3938323						
ANR	3938429	Symbol	* i		3938323						
ANR	3938430	Symbol	ZEND_AST_DECLARE		3938323						
ANR	3938431	Function	zend_compile_declare	4284:0:123570:125427							
ANR	3938432	FunctionDef	zend_compile_declare (zend_ast * ast)		3938431	0					
ANR	3938433	CompoundStatement		4285:0:123621:125427	3938431	0					
ANR	3938434	IdentifierDeclStatement	zend_ast_list * declares = zend_ast_get_list ( ast -> child [ 0 ] ) ;	4286:1:123624:123682	3938431	0	True				
ANR	3938435	IdentifierDecl	* declares = zend_ast_get_list ( ast -> child [ 0 ] )		3938431	0					
ANR	3938436	IdentifierDeclType	zend_ast_list *		3938431	0					
ANR	3938437	Identifier	declares		3938431	1					
ANR	3938438	AssignmentExpression	* declares = zend_ast_get_list ( ast -> child [ 0 ] )		3938431	2		=			
ANR	3938439	Identifier	declares		3938431	0					
ANR	3938440	CallExpression	zend_ast_get_list ( ast -> child [ 0 ] )		3938431	1					
ANR	3938441	Callee	zend_ast_get_list		3938431	0					
ANR	3938442	Identifier	zend_ast_get_list		3938431	0					
ANR	3938443	ArgumentList	ast -> child [ 0 ]		3938431	1					
ANR	3938444	Argument	ast -> child [ 0 ]		3938431	0					
ANR	3938445	ArrayIndexing	ast -> child [ 0 ]		3938431	0					
ANR	3938446	PtrMemberAccess	ast -> child		3938431	0					
ANR	3938447	Identifier	ast		3938431	0					
ANR	3938448	Identifier	child		3938431	1					
ANR	3938449	PrimaryExpression	0		3938431	1					
ANR	3938450	IdentifierDeclStatement	zend_ast * stmt_ast = ast -> child [ 1 ] ;	4287:1:123685:123719	3938431	1	True				
ANR	3938451	IdentifierDecl	* stmt_ast = ast -> child [ 1 ]		3938431	0					
ANR	3938452	IdentifierDeclType	zend_ast *		3938431	0					
ANR	3938453	Identifier	stmt_ast		3938431	1					
ANR	3938454	AssignmentExpression	* stmt_ast = ast -> child [ 1 ]		3938431	2		=			
ANR	3938455	Identifier	stmt_ast		3938431	0					
ANR	3938456	ArrayIndexing	ast -> child [ 1 ]		3938431	1					
ANR	3938457	PtrMemberAccess	ast -> child		3938431	0					
ANR	3938458	Identifier	ast		3938431	0					
ANR	3938459	Identifier	child		3938431	1					
ANR	3938460	PrimaryExpression	1		3938431	1					
ANR	3938461	IdentifierDeclStatement	zend_declarables orig_declarables = FC ( declarables ) ;	4288:1:123722:123773	3938431	2	True				
ANR	3938462	IdentifierDecl	orig_declarables = FC ( declarables )		3938431	0					
ANR	3938463	IdentifierDeclType	zend_declarables		3938431	0					
ANR	3938464	Identifier	orig_declarables		3938431	1					
ANR	3938465	AssignmentExpression	orig_declarables = FC ( declarables )		3938431	2		=			
ANR	3938466	Identifier	orig_declarables		3938431	0					
ANR	3938467	CallExpression	FC ( declarables )		3938431	1					
ANR	3938468	Callee	FC		3938431	0					
ANR	3938469	Identifier	FC		3938431	0					
ANR	3938470	ArgumentList	declarables		3938431	1					
ANR	3938471	Argument	declarables		3938431	0					
ANR	3938472	Identifier	declarables		3938431	0					
ANR	3938473	IdentifierDeclStatement	uint32_t i ;	4289:1:123776:123786	3938431	3	True				
ANR	3938474	IdentifierDecl	i		3938431	0					
ANR	3938475	IdentifierDeclType	uint32_t		3938431	0					
ANR	3938476	Identifier	i		3938431	1					
ANR	3938477	ForStatement	for ( i = 0 ; i < declares -> children ; ++ i )		3938431	4					
ANR	3938478	ForInit	i = 0 ;	4291:6:123795:123800	3938431	0	True				
ANR	3938479	AssignmentExpression	i = 0		3938431	0		=			
ANR	3938480	Identifier	i		3938431	0					
ANR	3938481	PrimaryExpression	0		3938431	1					
ANR	3938482	Condition	i < declares -> children	4291:13:123802:123823	3938431	1	True				
ANR	3938483	RelationalExpression	i < declares -> children		3938431	0		<			
ANR	3938484	Identifier	i		3938431	0					
ANR	3938485	PtrMemberAccess	declares -> children		3938431	1					
ANR	3938486	Identifier	declares		3938431	0					
ANR	3938487	Identifier	children		3938431	1					
ANR	3938488	UnaryExpression	++ i	4291:37:123826:123828	3938431	2	True				
ANR	3938489	IncDec	++		3938431	0					
ANR	3938490	Identifier	i		3938431	1					
ANR	3938491	CompoundStatement		12:2:353:399	3938431	3					
ANR	3938492	IdentifierDeclStatement	zend_ast * declare_ast = declares -> child [ i ] ;	4292:2:123835:123877	3938431	0	True				
ANR	3938493	IdentifierDecl	* declare_ast = declares -> child [ i ]		3938431	0					
ANR	3938494	IdentifierDeclType	zend_ast *		3938431	0					
ANR	3938495	Identifier	declare_ast		3938431	1					
ANR	3938496	AssignmentExpression	* declare_ast = declares -> child [ i ]		3938431	2		=			
ANR	3938497	Identifier	declare_ast		3938431	0					
ANR	3938498	ArrayIndexing	declares -> child [ i ]		3938431	1					
ANR	3938499	PtrMemberAccess	declares -> child		3938431	0					
ANR	3938500	Identifier	declares		3938431	0					
ANR	3938501	Identifier	child		3938431	1					
ANR	3938502	Identifier	i		3938431	1					
ANR	3938503	IdentifierDeclStatement	zend_ast * name_ast = declare_ast -> child [ 0 ] ;	4293:2:123881:123923	3938431	1	True				
ANR	3938504	IdentifierDecl	* name_ast = declare_ast -> child [ 0 ]		3938431	0					
ANR	3938505	IdentifierDeclType	zend_ast *		3938431	0					
ANR	3938506	Identifier	name_ast		3938431	1					
ANR	3938507	AssignmentExpression	* name_ast = declare_ast -> child [ 0 ]		3938431	2		=			
ANR	3938508	Identifier	name_ast		3938431	0					
ANR	3938509	ArrayIndexing	declare_ast -> child [ 0 ]		3938431	1					
ANR	3938510	PtrMemberAccess	declare_ast -> child		3938431	0					
ANR	3938511	Identifier	declare_ast		3938431	0					
ANR	3938512	Identifier	child		3938431	1					
ANR	3938513	PrimaryExpression	0		3938431	1					
ANR	3938514	IdentifierDeclStatement	zend_ast * value_ast = declare_ast -> child [ 1 ] ;	4294:2:123927:123970	3938431	2	True				
ANR	3938515	IdentifierDecl	* value_ast = declare_ast -> child [ 1 ]		3938431	0					
ANR	3938516	IdentifierDeclType	zend_ast *		3938431	0					
ANR	3938517	Identifier	value_ast		3938431	1					
ANR	3938518	AssignmentExpression	* value_ast = declare_ast -> child [ 1 ]		3938431	2		=			
ANR	3938519	Identifier	value_ast		3938431	0					
ANR	3938520	ArrayIndexing	declare_ast -> child [ 1 ]		3938431	1					
ANR	3938521	PtrMemberAccess	declare_ast -> child		3938431	0					
ANR	3938522	Identifier	declare_ast		3938431	0					
ANR	3938523	Identifier	child		3938431	1					
ANR	3938524	PrimaryExpression	1		3938431	1					
ANR	3938525	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( name_ast ) ;	4296:2:123975:124021	3938431	3	True				
ANR	3938526	IdentifierDecl	* name = zend_ast_get_str ( name_ast )		3938431	0					
ANR	3938527	IdentifierDeclType	zend_string *		3938431	0					
ANR	3938528	Identifier	name		3938431	1					
ANR	3938529	AssignmentExpression	* name = zend_ast_get_str ( name_ast )		3938431	2		=			
ANR	3938530	Identifier	name		3938431	0					
ANR	3938531	CallExpression	zend_ast_get_str ( name_ast )		3938431	1					
ANR	3938532	Callee	zend_ast_get_str		3938431	0					
ANR	3938533	Identifier	zend_ast_get_str		3938431	0					
ANR	3938534	ArgumentList	name_ast		3938431	1					
ANR	3938535	Argument	name_ast		3938431	0					
ANR	3938536	Identifier	name_ast		3938431	0					
ANR	3938537	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""ticks"" ) )"		3938431	4					
ANR	3938538	Condition	"zend_string_equals_literal_ci ( name , ""ticks"" )"	4297:6:124029:124072	3938431	0	True				
ANR	3938539	CallExpression	"zend_string_equals_literal_ci ( name , ""ticks"" )"		3938431	0					
ANR	3938540	Callee	zend_string_equals_literal_ci		3938431	0					
ANR	3938541	Identifier	zend_string_equals_literal_ci		3938431	0					
ANR	3938542	ArgumentList	name		3938431	1					
ANR	3938543	Argument	name		3938431	0					
ANR	3938544	Identifier	name		3938431	0					
ANR	3938545	Argument	"""ticks"""		3938431	1					
ANR	3938546	PrimaryExpression	"""ticks"""		3938431	0					
ANR	3938547	CompoundStatement		14:3:458:471	3938431	1					
ANR	3938548	IdentifierDeclStatement	zval value_zv ;	4298:3:124080:124093	3938431	0	True				
ANR	3938549	IdentifierDecl	value_zv		3938431	0					
ANR	3938550	IdentifierDeclType	zval		3938431	0					
ANR	3938551	Identifier	value_zv		3938431	1					
ANR	3938552	ExpressionStatement	"zend_const_expr_to_zval ( & value_zv , value_ast )"	4299:3:124098:124143	3938431	1	True				
ANR	3938553	CallExpression	"zend_const_expr_to_zval ( & value_zv , value_ast )"		3938431	0					
ANR	3938554	Callee	zend_const_expr_to_zval		3938431	0					
ANR	3938555	Identifier	zend_const_expr_to_zval		3938431	0					
ANR	3938556	ArgumentList	& value_zv		3938431	1					
ANR	3938557	Argument	& value_zv		3938431	0					
ANR	3938558	UnaryOperationExpression	& value_zv		3938431	0					
ANR	3938559	UnaryOperator	&		3938431	0					
ANR	3938560	Identifier	value_zv		3938431	1					
ANR	3938561	Argument	value_ast		3938431	1					
ANR	3938562	Identifier	value_ast		3938431	0					
ANR	3938563	ExpressionStatement	FC ( declarables ) . ticks = zval_get_long ( & value_zv )	4300:3:124148:124196	3938431	2	True				
ANR	3938564	AssignmentExpression	FC ( declarables ) . ticks = zval_get_long ( & value_zv )		3938431	0		=			
ANR	3938565	MemberAccess	FC ( declarables ) . ticks		3938431	0					
ANR	3938566	CallExpression	FC ( declarables )		3938431	0					
ANR	3938567	Callee	FC		3938431	0					
ANR	3938568	Identifier	FC		3938431	0					
ANR	3938569	ArgumentList	declarables		3938431	1					
ANR	3938570	Argument	declarables		3938431	0					
ANR	3938571	Identifier	declarables		3938431	0					
ANR	3938572	Identifier	ticks		3938431	1					
ANR	3938573	CallExpression	zval_get_long ( & value_zv )		3938431	1					
ANR	3938574	Callee	zval_get_long		3938431	0					
ANR	3938575	Identifier	zval_get_long		3938431	0					
ANR	3938576	ArgumentList	& value_zv		3938431	1					
ANR	3938577	Argument	& value_zv		3938431	0					
ANR	3938578	UnaryOperationExpression	& value_zv		3938431	0					
ANR	3938579	UnaryOperator	&		3938431	0					
ANR	3938580	Identifier	value_zv		3938431	1					
ANR	3938581	ExpressionStatement	zval_dtor ( & value_zv )	4301:3:124201:124221	3938431	3	True				
ANR	3938582	CallExpression	zval_dtor ( & value_zv )		3938431	0					
ANR	3938583	Callee	zval_dtor		3938431	0					
ANR	3938584	Identifier	zval_dtor		3938431	0					
ANR	3938585	ArgumentList	& value_zv		3938431	1					
ANR	3938586	Argument	& value_zv		3938431	0					
ANR	3938587	UnaryOperationExpression	& value_zv		3938431	0					
ANR	3938588	UnaryOperator	&		3938431	0					
ANR	3938589	Identifier	value_zv		3938431	1					
ANR	3938590	ElseStatement	else		3938431	0					
ANR	3938591	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""encoding"" ) )"		3938431	0					
ANR	3938592	Condition	"zend_string_equals_literal_ci ( name , ""encoding"" )"	4302:13:124236:124282	3938431	0	True				
ANR	3938593	CallExpression	"zend_string_equals_literal_ci ( name , ""encoding"" )"		3938431	0					
ANR	3938594	Callee	zend_string_equals_literal_ci		3938431	0					
ANR	3938595	Identifier	zend_string_equals_literal_ci		3938431	0					
ANR	3938596	ArgumentList	name		3938431	1					
ANR	3938597	Argument	name		3938431	0					
ANR	3938598	Identifier	name		3938431	0					
ANR	3938599	Argument	"""encoding"""		3938431	1					
ANR	3938600	PrimaryExpression	"""encoding"""		3938431	0					
ANR	3938601	CompoundStatement		18:62:663:663	3938431	1					
ANR	3938602	IfStatement	if ( FAILURE == zend_declare_is_first_statement ( ast ) )		3938431	0					
ANR	3938603	Condition	FAILURE == zend_declare_is_first_statement ( ast )	4304:7:124295:124341	3938431	0	True				
ANR	3938604	EqualityExpression	FAILURE == zend_declare_is_first_statement ( ast )		3938431	0		==			
ANR	3938605	Identifier	FAILURE		3938431	0					
ANR	3938606	CallExpression	zend_declare_is_first_statement ( ast )		3938431	1					
ANR	3938607	Callee	zend_declare_is_first_statement		3938431	0					
ANR	3938608	Identifier	zend_declare_is_first_statement		3938431	0					
ANR	3938609	ArgumentList	ast		3938431	1					
ANR	3938610	Argument	ast		3938431	0					
ANR	3938611	Identifier	ast		3938431	0					
ANR	3938612	CompoundStatement		20:56:722:722	3938431	1					
ANR	3938613	Statement	zend_error_noreturn	4305:4:124350:124368	3938431	0	True				
ANR	3938614	Statement	(	4305:23:124369:124369	3938431	1	True				
ANR	3938615	Statement	E_COMPILE_ERROR	4305:24:124370:124384	3938431	2	True				
ANR	3938616	Statement	","	4305:39:124385:124385	3938431	3	True				
ANR	3938617	Statement	"""Encoding declaration pragma must be """	4305:41:124387:124424	3938431	4	True				
ANR	3938618	Statement	"""the very first statement in the script"""	4306:5:124431:124470	3938431	5	True				
ANR	3938619	Statement	)	4306:45:124471:124471	3938431	6	True				
ANR	3938620	ExpressionStatement		4306:46:124472:124472	3938431	7	True				
ANR	3938621	ElseStatement	else		3938431	0					
ANR	3938622	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""strict_types"" ) )"		3938431	0					
ANR	3938623	Condition	"zend_string_equals_literal_ci ( name , ""strict_types"" )"	4308:13:124492:124542	3938431	0	True				
ANR	3938624	CallExpression	"zend_string_equals_literal_ci ( name , ""strict_types"" )"		3938431	0					
ANR	3938625	Callee	zend_string_equals_literal_ci		3938431	0					
ANR	3938626	Identifier	zend_string_equals_literal_ci		3938431	0					
ANR	3938627	ArgumentList	name		3938431	1					
ANR	3938628	Argument	name		3938431	0					
ANR	3938629	Identifier	name		3938431	0					
ANR	3938630	Argument	"""strict_types"""		3938431	1					
ANR	3938631	PrimaryExpression	"""strict_types"""		3938431	0					
ANR	3938632	CompoundStatement		25:3:928:941	3938431	1					
ANR	3938633	IdentifierDeclStatement	zval value_zv ;	4309:3:124550:124563	3938431	0	True				
ANR	3938634	IdentifierDecl	value_zv		3938431	0					
ANR	3938635	IdentifierDeclType	zval		3938431	0					
ANR	3938636	Identifier	value_zv		3938431	1					
ANR	3938637	IfStatement	if ( FAILURE == zend_declare_is_first_statement ( ast ) )		3938431	1					
ANR	3938638	Condition	FAILURE == zend_declare_is_first_statement ( ast )	4311:7:124573:124619	3938431	0	True				
ANR	3938639	EqualityExpression	FAILURE == zend_declare_is_first_statement ( ast )		3938431	0		==			
ANR	3938640	Identifier	FAILURE		3938431	0					
ANR	3938641	CallExpression	zend_declare_is_first_statement ( ast )		3938431	1					
ANR	3938642	Callee	zend_declare_is_first_statement		3938431	0					
ANR	3938643	Identifier	zend_declare_is_first_statement		3938431	0					
ANR	3938644	ArgumentList	ast		3938431	1					
ANR	3938645	Argument	ast		3938431	0					
ANR	3938646	Identifier	ast		3938431	0					
ANR	3938647	CompoundStatement		27:56:1000:1000	3938431	1					
ANR	3938648	Statement	zend_error_noreturn	4312:4:124628:124646	3938431	0	True				
ANR	3938649	Statement	(	4312:23:124647:124647	3938431	1	True				
ANR	3938650	Statement	E_COMPILE_ERROR	4312:24:124648:124662	3938431	2	True				
ANR	3938651	Statement	","	4312:39:124663:124663	3938431	3	True				
ANR	3938652	Statement	"""strict_types declaration must be """	4312:41:124665:124699	3938431	4	True				
ANR	3938653	Statement	"""the very first statement in the script"""	4313:5:124706:124745	3938431	5	True				
ANR	3938654	Statement	)	4313:45:124746:124746	3938431	6	True				
ANR	3938655	ExpressionStatement		4313:46:124747:124747	3938431	7	True				
ANR	3938656	IfStatement	if ( ast -> child [ 1 ] != NULL )		3938431	2					
ANR	3938657	Condition	ast -> child [ 1 ] != NULL	4316:7:124762:124782	3938431	0	True				
ANR	3938658	EqualityExpression	ast -> child [ 1 ] != NULL		3938431	0		!=			
ANR	3938659	ArrayIndexing	ast -> child [ 1 ]		3938431	0					
ANR	3938660	PtrMemberAccess	ast -> child		3938431	0					
ANR	3938661	Identifier	ast		3938431	0					
ANR	3938662	Identifier	child		3938431	1					
ANR	3938663	PrimaryExpression	1		3938431	1					
ANR	3938664	Identifier	NULL		3938431	1					
ANR	3938665	CompoundStatement		32:30:1163:1163	3938431	1					
ANR	3938666	Statement	zend_error_noreturn	4317:4:124791:124809	3938431	0	True				
ANR	3938667	Statement	(	4317:23:124810:124810	3938431	1	True				
ANR	3938668	Statement	E_COMPILE_ERROR	4317:24:124811:124825	3938431	2	True				
ANR	3938669	Statement	","	4317:39:124826:124826	3938431	3	True				
ANR	3938670	Statement	"""strict_types declaration must not """	4317:41:124828:124863	3938431	4	True				
ANR	3938671	Statement	"""use block mode"""	4318:5:124870:124885	3938431	5	True				
ANR	3938672	Statement	)	4318:21:124886:124886	3938431	6	True				
ANR	3938673	ExpressionStatement		4318:22:124887:124887	3938431	7	True				
ANR	3938674	ExpressionStatement	"zend_const_expr_to_zval ( & value_zv , value_ast )"	4321:3:124898:124943	3938431	3	True				
ANR	3938675	CallExpression	"zend_const_expr_to_zval ( & value_zv , value_ast )"		3938431	0					
ANR	3938676	Callee	zend_const_expr_to_zval		3938431	0					
ANR	3938677	Identifier	zend_const_expr_to_zval		3938431	0					
ANR	3938678	ArgumentList	& value_zv		3938431	1					
ANR	3938679	Argument	& value_zv		3938431	0					
ANR	3938680	UnaryOperationExpression	& value_zv		3938431	0					
ANR	3938681	UnaryOperator	&		3938431	0					
ANR	3938682	Identifier	value_zv		3938431	1					
ANR	3938683	Argument	value_ast		3938431	1					
ANR	3938684	Identifier	value_ast		3938431	0					
ANR	3938685	IfStatement	if ( Z_TYPE ( value_zv ) != IS_LONG || ( Z_LVAL ( value_zv ) != 0 && Z_LVAL ( value_zv ) != 1 ) )		3938431	4					
ANR	3938686	Condition	Z_TYPE ( value_zv ) != IS_LONG || ( Z_LVAL ( value_zv ) != 0 && Z_LVAL ( value_zv ) != 1 )	4323:7:124953:125031	3938431	0	True				
ANR	3938687	OrExpression	Z_TYPE ( value_zv ) != IS_LONG || ( Z_LVAL ( value_zv ) != 0 && Z_LVAL ( value_zv ) != 1 )		3938431	0		||			
ANR	3938688	EqualityExpression	Z_TYPE ( value_zv ) != IS_LONG		3938431	0		!=			
ANR	3938689	CallExpression	Z_TYPE ( value_zv )		3938431	0					
ANR	3938690	Callee	Z_TYPE		3938431	0					
ANR	3938691	Identifier	Z_TYPE		3938431	0					
ANR	3938692	ArgumentList	value_zv		3938431	1					
ANR	3938693	Argument	value_zv		3938431	0					
ANR	3938694	Identifier	value_zv		3938431	0					
ANR	3938695	Identifier	IS_LONG		3938431	1					
ANR	3938696	AndExpression	Z_LVAL ( value_zv ) != 0 && Z_LVAL ( value_zv ) != 1		3938431	1		&&			
ANR	3938697	EqualityExpression	Z_LVAL ( value_zv ) != 0		3938431	0		!=			
ANR	3938698	CallExpression	Z_LVAL ( value_zv )		3938431	0					
ANR	3938699	Callee	Z_LVAL		3938431	0					
ANR	3938700	Identifier	Z_LVAL		3938431	0					
ANR	3938701	ArgumentList	value_zv		3938431	1					
ANR	3938702	Argument	value_zv		3938431	0					
ANR	3938703	Identifier	value_zv		3938431	0					
ANR	3938704	PrimaryExpression	0		3938431	1					
ANR	3938705	EqualityExpression	Z_LVAL ( value_zv ) != 1		3938431	1		!=			
ANR	3938706	CallExpression	Z_LVAL ( value_zv )		3938431	0					
ANR	3938707	Callee	Z_LVAL		3938431	0					
ANR	3938708	Identifier	Z_LVAL		3938431	0					
ANR	3938709	ArgumentList	value_zv		3938431	1					
ANR	3938710	Argument	value_zv		3938431	0					
ANR	3938711	Identifier	value_zv		3938431	0					
ANR	3938712	PrimaryExpression	1		3938431	1					
ANR	3938713	CompoundStatement		39:88:1412:1412	3938431	1					
ANR	3938714	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""strict_types declaration must have 0 or 1 as its value"" )"	4324:4:125040:125134	3938431	0	True				
ANR	3938715	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""strict_types declaration must have 0 or 1 as its value"" )"		3938431	0					
ANR	3938716	Callee	zend_error_noreturn		3938431	0					
ANR	3938717	Identifier	zend_error_noreturn		3938431	0					
ANR	3938718	ArgumentList	E_COMPILE_ERROR		3938431	1					
ANR	3938719	Argument	E_COMPILE_ERROR		3938431	0					
ANR	3938720	Identifier	E_COMPILE_ERROR		3938431	0					
ANR	3938721	Argument	"""strict_types declaration must have 0 or 1 as its value"""		3938431	1					
ANR	3938722	PrimaryExpression	"""strict_types declaration must have 0 or 1 as its value"""		3938431	0					
ANR	3938723	IfStatement	if ( Z_LVAL ( value_zv ) == 1 )		3938431	5					
ANR	3938724	Condition	Z_LVAL ( value_zv ) == 1	4327:7:125149:125169	3938431	0	True				
ANR	3938725	EqualityExpression	Z_LVAL ( value_zv ) == 1		3938431	0		==			
ANR	3938726	CallExpression	Z_LVAL ( value_zv )		3938431	0					
ANR	3938727	Callee	Z_LVAL		3938431	0					
ANR	3938728	Identifier	Z_LVAL		3938431	0					
ANR	3938729	ArgumentList	value_zv		3938431	1					
ANR	3938730	Argument	value_zv		3938431	0					
ANR	3938731	Identifier	value_zv		3938431	0					
ANR	3938732	PrimaryExpression	1		3938431	1					
ANR	3938733	CompoundStatement		43:30:1550:1550	3938431	1					
ANR	3938734	ExpressionStatement	CG ( active_op_array ) -> fn_flags |= ZEND_ACC_STRICT_TYPES	4328:4:125178:125232	3938431	0	True				
ANR	3938735	AssignmentExpression	CG ( active_op_array ) -> fn_flags |= ZEND_ACC_STRICT_TYPES		3938431	0		|=			
ANR	3938736	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3938431	0					
ANR	3938737	CallExpression	CG ( active_op_array )		3938431	0					
ANR	3938738	Callee	CG		3938431	0					
ANR	3938739	Identifier	CG		3938431	0					
ANR	3938740	ArgumentList	active_op_array		3938431	1					
ANR	3938741	Argument	active_op_array		3938431	0					
ANR	3938742	Identifier	active_op_array		3938431	0					
ANR	3938743	Identifier	fn_flags		3938431	1					
ANR	3938744	Identifier	ZEND_ACC_STRICT_TYPES		3938431	1					
ANR	3938745	ElseStatement	else		3938431	0					
ANR	3938746	CompoundStatement		47:9:1627:1627	3938431	0					
ANR	3938747	ExpressionStatement	"zend_error ( E_COMPILE_WARNING , ""Unsupported declare '%s'"" , ZSTR_VAL ( name ) )"	4332:3:125254:125327	3938431	0	True				
ANR	3938748	CallExpression	"zend_error ( E_COMPILE_WARNING , ""Unsupported declare '%s'"" , ZSTR_VAL ( name ) )"		3938431	0					
ANR	3938749	Callee	zend_error		3938431	0					
ANR	3938750	Identifier	zend_error		3938431	0					
ANR	3938751	ArgumentList	E_COMPILE_WARNING		3938431	1					
ANR	3938752	Argument	E_COMPILE_WARNING		3938431	0					
ANR	3938753	Identifier	E_COMPILE_WARNING		3938431	0					
ANR	3938754	Argument	"""Unsupported declare '%s'"""		3938431	1					
ANR	3938755	PrimaryExpression	"""Unsupported declare '%s'"""		3938431	0					
ANR	3938756	Argument	ZSTR_VAL ( name )		3938431	2					
ANR	3938757	CallExpression	ZSTR_VAL ( name )		3938431	0					
ANR	3938758	Callee	ZSTR_VAL		3938431	0					
ANR	3938759	Identifier	ZSTR_VAL		3938431	0					
ANR	3938760	ArgumentList	name		3938431	1					
ANR	3938761	Argument	name		3938431	0					
ANR	3938762	Identifier	name		3938431	0					
ANR	3938763	IfStatement	if ( stmt_ast )		3938431	5					
ANR	3938764	Condition	stmt_ast	4336:5:125342:125349	3938431	0	True				
ANR	3938765	Identifier	stmt_ast		3938431	0					
ANR	3938766	CompoundStatement		52:15:1730:1730	3938431	1					
ANR	3938767	ExpressionStatement	zend_compile_stmt ( stmt_ast )	4337:2:125356:125383	3938431	0	True				
ANR	3938768	CallExpression	zend_compile_stmt ( stmt_ast )		3938431	0					
ANR	3938769	Callee	zend_compile_stmt		3938431	0					
ANR	3938770	Identifier	zend_compile_stmt		3938431	0					
ANR	3938771	ArgumentList	stmt_ast		3938431	1					
ANR	3938772	Argument	stmt_ast		3938431	0					
ANR	3938773	Identifier	stmt_ast		3938431	0					
ANR	3938774	ExpressionStatement	FC ( declarables ) = orig_declarables	4339:2:125388:125422	3938431	1	True				
ANR	3938775	AssignmentExpression	FC ( declarables ) = orig_declarables		3938431	0		=			
ANR	3938776	CallExpression	FC ( declarables )		3938431	0					
ANR	3938777	Callee	FC		3938431	0					
ANR	3938778	Identifier	FC		3938431	0					
ANR	3938779	ArgumentList	declarables		3938431	1					
ANR	3938780	Argument	declarables		3938431	0					
ANR	3938781	Identifier	declarables		3938431	0					
ANR	3938782	Identifier	orig_declarables		3938431	1					
ANR	3938783	ReturnType	void		3938431	1					
ANR	3938784	Identifier	zend_compile_declare		3938431	2					
ANR	3938785	ParameterList	zend_ast * ast		3938431	3					
ANR	3938786	Parameter	zend_ast * ast	4284:26:123596:123608	3938431	0	True				
ANR	3938787	ParameterType	zend_ast *		3938431	0					
ANR	3938788	Identifier	ast		3938431	1					
ANR	3938789	CFGEntryNode	ENTRY		3938431		True				
ANR	3938790	CFGExitNode	EXIT		3938431		True				
ANR	3938791	Symbol	zend_declare_is_first_statement		3938431						
ANR	3938792	Symbol	stmt_ast		3938431						
ANR	3938793	Symbol	ast		3938431						
ANR	3938794	Symbol	* * declares		3938431						
ANR	3938795	Symbol	E_COMPILE_ERROR		3938431						
ANR	3938796	Symbol	Z_LVAL		3938431						
ANR	3938797	Symbol	Z_TYPE		3938431						
ANR	3938798	Symbol	* CG		3938431						
ANR	3938799	Symbol	* declares		3938431						
ANR	3938800	Symbol	declares -> child		3938431						
ANR	3938801	Symbol	* declares -> child		3938431						
ANR	3938802	Symbol	* declare_ast		3938431						
ANR	3938803	Symbol	declarables		3938431						
ANR	3938804	Symbol	declares		3938431						
ANR	3938805	Symbol	* ast		3938431						
ANR	3938806	Symbol	* declare_ast -> child		3938431						
ANR	3938807	Symbol	zend_ast_get_str		3938431						
ANR	3938808	Symbol	value_ast		3938431						
ANR	3938809	Symbol	* * ast		3938431						
ANR	3938810	Symbol	declare_ast -> child		3938431						
ANR	3938811	Symbol	IS_LONG		3938431						
ANR	3938812	Symbol	ZEND_ACC_STRICT_TYPES		3938431						
ANR	3938813	Symbol	E_COMPILE_WARNING		3938431						
ANR	3938814	Symbol	& value_zv		3938431						
ANR	3938815	Symbol	NULL		3938431						
ANR	3938816	Symbol	CG		3938431						
ANR	3938817	Symbol	active_op_array		3938431						
ANR	3938818	Symbol	i		3938431						
ANR	3938819	Symbol	declare_ast		3938431						
ANR	3938820	Symbol	FAILURE		3938431						
ANR	3938821	Symbol	CG ( active_op_array ) -> fn_flags		3938431						
ANR	3938822	Symbol	zend_string_equals_literal_ci		3938431						
ANR	3938823	Symbol	ZSTR_VAL		3938431						
ANR	3938824	Symbol	zend_ast_get_list		3938431						
ANR	3938825	Symbol	declares -> children		3938431						
ANR	3938826	Symbol	* i		3938431						
ANR	3938827	Symbol	* * declare_ast		3938431						
ANR	3938828	Symbol	name_ast		3938431						
ANR	3938829	Symbol	zval_get_long		3938431						
ANR	3938830	Symbol	name		3938431						
ANR	3938831	Symbol	value_zv		3938431						
ANR	3938832	Symbol	* ast -> child		3938431						
ANR	3938833	Symbol	ast -> child		3938431						
ANR	3938834	Symbol	FC		3938431						
ANR	3938835	Symbol	orig_declarables		3938431						
ANR	3938836	Symbol	FC ( declarables ) . ticks		3938431						
ANR	3938837	Function	zend_compile_stmt_list	4344:0:125440:125635							
ANR	3938838	FunctionDef	zend_compile_stmt_list (zend_ast * ast)		3938837	0					
ANR	3938839	CompoundStatement		4345:0:125493:125635	3938837	0					
ANR	3938840	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	4346:1:125496:125540	3938837	0	True				
ANR	3938841	IdentifierDecl	* list = zend_ast_get_list ( ast )		3938837	0					
ANR	3938842	IdentifierDeclType	zend_ast_list *		3938837	0					
ANR	3938843	Identifier	list		3938837	1					
ANR	3938844	AssignmentExpression	* list = zend_ast_get_list ( ast )		3938837	2		=			
ANR	3938845	Identifier	list		3938837	0					
ANR	3938846	CallExpression	zend_ast_get_list ( ast )		3938837	1					
ANR	3938847	Callee	zend_ast_get_list		3938837	0					
ANR	3938848	Identifier	zend_ast_get_list		3938837	0					
ANR	3938849	ArgumentList	ast		3938837	1					
ANR	3938850	Argument	ast		3938837	0					
ANR	3938851	Identifier	ast		3938837	0					
ANR	3938852	IdentifierDeclStatement	uint32_t i ;	4347:1:125543:125553	3938837	1	True				
ANR	3938853	IdentifierDecl	i		3938837	0					
ANR	3938854	IdentifierDeclType	uint32_t		3938837	0					
ANR	3938855	Identifier	i		3938837	1					
ANR	3938856	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3938837	2					
ANR	3938857	ForInit	i = 0 ;	4348:6:125561:125566	3938837	0	True				
ANR	3938858	AssignmentExpression	i = 0		3938837	0		=			
ANR	3938859	Identifier	i		3938837	0					
ANR	3938860	PrimaryExpression	0		3938837	1					
ANR	3938861	Condition	i < list -> children	4348:13:125568:125585	3938837	1	True				
ANR	3938862	RelationalExpression	i < list -> children		3938837	0		<			
ANR	3938863	Identifier	i		3938837	0					
ANR	3938864	PtrMemberAccess	list -> children		3938837	1					
ANR	3938865	Identifier	list		3938837	0					
ANR	3938866	Identifier	children		3938837	1					
ANR	3938867	UnaryExpression	++ i	4348:33:125588:125590	3938837	2	True				
ANR	3938868	IncDec	++		3938837	0					
ANR	3938869	Identifier	i		3938837	1					
ANR	3938870	CompoundStatement		4:38:99:99	3938837	3					
ANR	3938871	ExpressionStatement	zend_compile_stmt ( list -> child [ i ] )	4349:2:125597:125630	3938837	0	True				
ANR	3938872	CallExpression	zend_compile_stmt ( list -> child [ i ] )		3938837	0					
ANR	3938873	Callee	zend_compile_stmt		3938837	0					
ANR	3938874	Identifier	zend_compile_stmt		3938837	0					
ANR	3938875	ArgumentList	list -> child [ i ]		3938837	1					
ANR	3938876	Argument	list -> child [ i ]		3938837	0					
ANR	3938877	ArrayIndexing	list -> child [ i ]		3938837	0					
ANR	3938878	PtrMemberAccess	list -> child		3938837	0					
ANR	3938879	Identifier	list		3938837	0					
ANR	3938880	Identifier	child		3938837	1					
ANR	3938881	Identifier	i		3938837	1					
ANR	3938882	ReturnType	void		3938837	1					
ANR	3938883	Identifier	zend_compile_stmt_list		3938837	2					
ANR	3938884	ParameterList	zend_ast * ast		3938837	3					
ANR	3938885	Parameter	zend_ast * ast	4344:28:125468:125480	3938837	0	True				
ANR	3938886	ParameterType	zend_ast *		3938837	0					
ANR	3938887	Identifier	ast		3938837	1					
ANR	3938888	CFGEntryNode	ENTRY		3938837		True				
ANR	3938889	CFGExitNode	EXIT		3938837		True				
ANR	3938890	Symbol	zend_ast_get_list		3938837						
ANR	3938891	Symbol	ast		3938837						
ANR	3938892	Symbol	* i		3938837						
ANR	3938893	Symbol	* * list		3938837						
ANR	3938894	Symbol	list -> child		3938837						
ANR	3938895	Symbol	* list		3938837						
ANR	3938896	Symbol	i		3938837						
ANR	3938897	Symbol	* list -> child		3938837						
ANR	3938898	Symbol	list		3938837						
ANR	3938899	Symbol	list -> children		3938837						
ANR	3938900	Function	zend_set_function_arg_flags	4354:0:125648:126331							
ANR	3938901	FunctionDef	zend_set_function_arg_flags (zend_function * func)		3938900	0					
ANR	3938902	CompoundStatement		4355:0:125721:126331	3938900	0					
ANR	3938903	IdentifierDeclStatement	"uint32_t i , n ;"	4356:1:125724:125737	3938900	0	True				
ANR	3938904	IdentifierDecl	i		3938900	0					
ANR	3938905	IdentifierDeclType	uint32_t		3938900	0					
ANR	3938906	Identifier	i		3938900	1					
ANR	3938907	IdentifierDecl	n		3938900	1					
ANR	3938908	IdentifierDeclType	uint32_t		3938900	0					
ANR	3938909	Identifier	n		3938900	1					
ANR	3938910	ExpressionStatement	func -> common . arg_flags [ 0 ] = 0	4358:1:125741:125770	3938900	1	True				
ANR	3938911	AssignmentExpression	func -> common . arg_flags [ 0 ] = 0		3938900	0		=			
ANR	3938912	ArrayIndexing	func -> common . arg_flags [ 0 ]		3938900	0					
ANR	3938913	MemberAccess	func -> common . arg_flags		3938900	0					
ANR	3938914	PtrMemberAccess	func -> common		3938900	0					
ANR	3938915	Identifier	func		3938900	0					
ANR	3938916	Identifier	common		3938900	1					
ANR	3938917	Identifier	arg_flags		3938900	1					
ANR	3938918	PrimaryExpression	0		3938900	1					
ANR	3938919	PrimaryExpression	0		3938900	1					
ANR	3938920	ExpressionStatement	func -> common . arg_flags [ 1 ] = 0	4359:1:125773:125802	3938900	2	True				
ANR	3938921	AssignmentExpression	func -> common . arg_flags [ 1 ] = 0		3938900	0		=			
ANR	3938922	ArrayIndexing	func -> common . arg_flags [ 1 ]		3938900	0					
ANR	3938923	MemberAccess	func -> common . arg_flags		3938900	0					
ANR	3938924	PtrMemberAccess	func -> common		3938900	0					
ANR	3938925	Identifier	func		3938900	0					
ANR	3938926	Identifier	common		3938900	1					
ANR	3938927	Identifier	arg_flags		3938900	1					
ANR	3938928	PrimaryExpression	1		3938900	1					
ANR	3938929	PrimaryExpression	0		3938900	1					
ANR	3938930	ExpressionStatement	func -> common . arg_flags [ 2 ] = 0	4360:1:125805:125834	3938900	3	True				
ANR	3938931	AssignmentExpression	func -> common . arg_flags [ 2 ] = 0		3938900	0		=			
ANR	3938932	ArrayIndexing	func -> common . arg_flags [ 2 ]		3938900	0					
ANR	3938933	MemberAccess	func -> common . arg_flags		3938900	0					
ANR	3938934	PtrMemberAccess	func -> common		3938900	0					
ANR	3938935	Identifier	func		3938900	0					
ANR	3938936	Identifier	common		3938900	1					
ANR	3938937	Identifier	arg_flags		3938900	1					
ANR	3938938	PrimaryExpression	2		3938900	1					
ANR	3938939	PrimaryExpression	0		3938900	1					
ANR	3938940	IfStatement	if ( func -> common . arg_info )		3938900	4					
ANR	3938941	Condition	func -> common . arg_info	4361:5:125841:125861	3938900	0	True				
ANR	3938942	MemberAccess	func -> common . arg_info		3938900	0					
ANR	3938943	PtrMemberAccess	func -> common		3938900	0					
ANR	3938944	Identifier	func		3938900	0					
ANR	3938945	Identifier	common		3938900	1					
ANR	3938946	Identifier	arg_info		3938900	1					
ANR	3938947	CompoundStatement		7:28:142:142	3938900	1					
ANR	3938948	ExpressionStatement	"n = MIN ( func -> common . num_args , MAX_ARG_FLAG_NUM )"	4362:2:125868:125916	3938900	0	True				
ANR	3938949	AssignmentExpression	"n = MIN ( func -> common . num_args , MAX_ARG_FLAG_NUM )"		3938900	0		=			
ANR	3938950	Identifier	n		3938900	0					
ANR	3938951	CallExpression	"MIN ( func -> common . num_args , MAX_ARG_FLAG_NUM )"		3938900	1					
ANR	3938952	Callee	MIN		3938900	0					
ANR	3938953	Identifier	MIN		3938900	0					
ANR	3938954	ArgumentList	func -> common . num_args		3938900	1					
ANR	3938955	Argument	func -> common . num_args		3938900	0					
ANR	3938956	MemberAccess	func -> common . num_args		3938900	0					
ANR	3938957	PtrMemberAccess	func -> common		3938900	0					
ANR	3938958	Identifier	func		3938900	0					
ANR	3938959	Identifier	common		3938900	1					
ANR	3938960	Identifier	num_args		3938900	1					
ANR	3938961	Argument	MAX_ARG_FLAG_NUM		3938900	1					
ANR	3938962	Identifier	MAX_ARG_FLAG_NUM		3938900	0					
ANR	3938963	ExpressionStatement	i = 0	4363:2:125920:125925	3938900	1	True				
ANR	3938964	AssignmentExpression	i = 0		3938900	0		=			
ANR	3938965	Identifier	i		3938900	0					
ANR	3938966	PrimaryExpression	0		3938900	1					
ANR	3938967	WhileStatement	while ( i < n )		3938900	2					
ANR	3938968	Condition	i < n	4364:9:125936:125940	3938900	0	True				
ANR	3938969	RelationalExpression	i < n		3938900	0		<			
ANR	3938970	Identifier	i		3938900	0					
ANR	3938971	Identifier	n		3938900	1					
ANR	3938972	CompoundStatement		10:16:221:221	3938900	1					
ANR	3938973	ExpressionStatement	"ZEND_SET_ARG_FLAG ( func , i + 1 , func -> common . arg_info [ i ] . pass_by_reference )"	4365:3:125948:126022	3938900	0	True				
ANR	3938974	CallExpression	"ZEND_SET_ARG_FLAG ( func , i + 1 , func -> common . arg_info [ i ] . pass_by_reference )"		3938900	0					
ANR	3938975	Callee	ZEND_SET_ARG_FLAG		3938900	0					
ANR	3938976	Identifier	ZEND_SET_ARG_FLAG		3938900	0					
ANR	3938977	ArgumentList	func		3938900	1					
ANR	3938978	Argument	func		3938900	0					
ANR	3938979	Identifier	func		3938900	0					
ANR	3938980	Argument	i + 1		3938900	1					
ANR	3938981	AdditiveExpression	i + 1		3938900	0		+			
ANR	3938982	Identifier	i		3938900	0					
ANR	3938983	PrimaryExpression	1		3938900	1					
ANR	3938984	Argument	func -> common . arg_info [ i ] . pass_by_reference		3938900	2					
ANR	3938985	MemberAccess	func -> common . arg_info [ i ] . pass_by_reference		3938900	0					
ANR	3938986	ArrayIndexing	func -> common . arg_info [ i ]		3938900	0					
ANR	3938987	MemberAccess	func -> common . arg_info		3938900	0					
ANR	3938988	PtrMemberAccess	func -> common		3938900	0					
ANR	3938989	Identifier	func		3938900	0					
ANR	3938990	Identifier	common		3938900	1					
ANR	3938991	Identifier	arg_info		3938900	1					
ANR	3938992	Identifier	i		3938900	1					
ANR	3938993	Identifier	pass_by_reference		3938900	1					
ANR	3938994	ExpressionStatement	i ++	4366:3:126027:126030	3938900	1	True				
ANR	3938995	PostIncDecOperationExpression	i ++		3938900	0					
ANR	3938996	Identifier	i		3938900	0					
ANR	3938997	IncDec	++		3938900	1					
ANR	3938998	IfStatement	if ( UNEXPECTED ( func -> common . fn_flags & ZEND_ACC_VARIADIC && func -> common . arg_info [ i ] . pass_by_reference ) )		3938900	3					
ANR	3938999	Condition	UNEXPECTED ( func -> common . fn_flags & ZEND_ACC_VARIADIC && func -> common . arg_info [ i ] . pass_by_reference )	4368:6:126042:126140	3938900	0	True				
ANR	3939000	CallExpression	UNEXPECTED ( func -> common . fn_flags & ZEND_ACC_VARIADIC && func -> common . arg_info [ i ] . pass_by_reference )		3938900	0					
ANR	3939001	Callee	UNEXPECTED		3938900	0					
ANR	3939002	Identifier	UNEXPECTED		3938900	0					
ANR	3939003	ArgumentList	func -> common . fn_flags & ZEND_ACC_VARIADIC && func -> common . arg_info [ i ] . pass_by_reference		3938900	1					
ANR	3939004	Argument	func -> common . fn_flags & ZEND_ACC_VARIADIC && func -> common . arg_info [ i ] . pass_by_reference		3938900	0					
ANR	3939005	AndExpression	func -> common . fn_flags & ZEND_ACC_VARIADIC && func -> common . arg_info [ i ] . pass_by_reference		3938900	0		&&			
ANR	3939006	BitAndExpression	func -> common . fn_flags & ZEND_ACC_VARIADIC		3938900	0		&			
ANR	3939007	MemberAccess	func -> common . fn_flags		3938900	0					
ANR	3939008	PtrMemberAccess	func -> common		3938900	0					
ANR	3939009	Identifier	func		3938900	0					
ANR	3939010	Identifier	common		3938900	1					
ANR	3939011	Identifier	fn_flags		3938900	1					
ANR	3939012	Identifier	ZEND_ACC_VARIADIC		3938900	1					
ANR	3939013	MemberAccess	func -> common . arg_info [ i ] . pass_by_reference		3938900	1					
ANR	3939014	ArrayIndexing	func -> common . arg_info [ i ]		3938900	0					
ANR	3939015	MemberAccess	func -> common . arg_info		3938900	0					
ANR	3939016	PtrMemberAccess	func -> common		3938900	0					
ANR	3939017	Identifier	func		3938900	0					
ANR	3939018	Identifier	common		3938900	1					
ANR	3939019	Identifier	arg_info		3938900	1					
ANR	3939020	Identifier	i		3938900	1					
ANR	3939021	Identifier	pass_by_reference		3938900	1					
ANR	3939022	CompoundStatement		15:3:426:497	3938900	1					
ANR	3939023	IdentifierDeclStatement	uint32_t pass_by_reference = func -> common . arg_info [ i ] . pass_by_reference ;	4369:3:126148:126219	3938900	0	True				
ANR	3939024	IdentifierDecl	pass_by_reference = func -> common . arg_info [ i ] . pass_by_reference		3938900	0					
ANR	3939025	IdentifierDeclType	uint32_t		3938900	0					
ANR	3939026	Identifier	pass_by_reference		3938900	1					
ANR	3939027	AssignmentExpression	pass_by_reference = func -> common . arg_info [ i ] . pass_by_reference		3938900	2		=			
ANR	3939028	Identifier	pass_by_reference		3938900	0					
ANR	3939029	MemberAccess	func -> common . arg_info [ i ] . pass_by_reference		3938900	1					
ANR	3939030	ArrayIndexing	func -> common . arg_info [ i ]		3938900	0					
ANR	3939031	MemberAccess	func -> common . arg_info		3938900	0					
ANR	3939032	PtrMemberAccess	func -> common		3938900	0					
ANR	3939033	Identifier	func		3938900	0					
ANR	3939034	Identifier	common		3938900	1					
ANR	3939035	Identifier	arg_info		3938900	1					
ANR	3939036	Identifier	i		3938900	1					
ANR	3939037	Identifier	pass_by_reference		3938900	1					
ANR	3939038	WhileStatement	while ( i < MAX_ARG_FLAG_NUM )		3938900	1					
ANR	3939039	Condition	i < MAX_ARG_FLAG_NUM	4370:10:126231:126250	3938900	0	True				
ANR	3939040	RelationalExpression	i < MAX_ARG_FLAG_NUM		3938900	0		<			
ANR	3939041	Identifier	i		3938900	0					
ANR	3939042	Identifier	MAX_ARG_FLAG_NUM		3938900	1					
ANR	3939043	CompoundStatement		16:32:531:531	3938900	1					
ANR	3939044	ExpressionStatement	"ZEND_SET_ARG_FLAG ( func , i + 1 , pass_by_reference )"	4371:4:126259:126308	3938900	0	True				
ANR	3939045	CallExpression	"ZEND_SET_ARG_FLAG ( func , i + 1 , pass_by_reference )"		3938900	0					
ANR	3939046	Callee	ZEND_SET_ARG_FLAG		3938900	0					
ANR	3939047	Identifier	ZEND_SET_ARG_FLAG		3938900	0					
ANR	3939048	ArgumentList	func		3938900	1					
ANR	3939049	Argument	func		3938900	0					
ANR	3939050	Identifier	func		3938900	0					
ANR	3939051	Argument	i + 1		3938900	1					
ANR	3939052	AdditiveExpression	i + 1		3938900	0		+			
ANR	3939053	Identifier	i		3938900	0					
ANR	3939054	PrimaryExpression	1		3938900	1					
ANR	3939055	Argument	pass_by_reference		3938900	2					
ANR	3939056	Identifier	pass_by_reference		3938900	0					
ANR	3939057	ExpressionStatement	i ++	4372:4:126314:126317	3938900	1	True				
ANR	3939058	PostIncDecOperationExpression	i ++		3938900	0					
ANR	3939059	Identifier	i		3938900	0					
ANR	3939060	IncDec	++		3938900	1					
ANR	3939061	ReturnType	ZEND_API void		3938900	1					
ANR	3939062	Identifier	zend_set_function_arg_flags		3938900	2					
ANR	3939063	ParameterList	zend_function * func		3938900	3					
ANR	3939064	Parameter	zend_function * func	4354:42:125690:125708	3938900	0	True				
ANR	3939065	ParameterType	zend_function *		3938900	0					
ANR	3939066	Identifier	func		3938900	1					
ANR	3939067	CFGEntryNode	ENTRY		3938900		True				
ANR	3939068	CFGExitNode	EXIT		3938900		True				
ANR	3939069	Symbol	func -> common . arg_flags		3938900						
ANR	3939070	Symbol	func -> common . arg_info [ i ] . pass_by_reference		3938900						
ANR	3939071	Symbol	func -> common . fn_flags		3938900						
ANR	3939072	Symbol	* func		3938900						
ANR	3939073	Symbol	* * func		3938900						
ANR	3939074	Symbol	* func -> common . arg_info		3938900						
ANR	3939075	Symbol	i		3938900						
ANR	3939076	Symbol	MAX_ARG_FLAG_NUM		3938900						
ANR	3939077	Symbol	pass_by_reference		3938900						
ANR	3939078	Symbol	n		3938900						
ANR	3939079	Symbol	func -> common . arg_info		3938900						
ANR	3939080	Symbol	UNEXPECTED		3938900						
ANR	3939081	Symbol	ZEND_ACC_VARIADIC		3938900						
ANR	3939082	Symbol	* func -> common		3938900						
ANR	3939083	Symbol	MIN		3938900						
ANR	3939084	Symbol	* i		3938900						
ANR	3939085	Symbol	func		3938900						
ANR	3939086	Symbol	func -> common		3938900						
ANR	3939087	Symbol	* func -> common . arg_flags		3938900						
ANR	3939088	Symbol	func -> common . num_args		3938900						
ANR	3939089	Function	zend_compile_typename	4379:0:126344:127275							
ANR	3939090	FunctionDef	"zend_compile_typename (zend_ast * ast , zend_arg_info * arg_info)"		3939089	0					
ANR	3939091	CompoundStatement		4380:0:126428:127275	3939089	0					
ANR	3939092	IfStatement	if ( ast -> kind == ZEND_AST_TYPE )		3939089	0					
ANR	3939093	Condition	ast -> kind == ZEND_AST_TYPE	4381:5:126435:126460	3939089	0	True				
ANR	3939094	EqualityExpression	ast -> kind == ZEND_AST_TYPE		3939089	0		==			
ANR	3939095	PtrMemberAccess	ast -> kind		3939089	0					
ANR	3939096	Identifier	ast		3939089	0					
ANR	3939097	Identifier	kind		3939089	1					
ANR	3939098	Identifier	ZEND_AST_TYPE		3939089	1					
ANR	3939099	CompoundStatement		2:33:34:34	3939089	1					
ANR	3939100	ExpressionStatement	arg_info -> type_hint = ast -> attr	4382:2:126467:126498	3939089	0	True				
ANR	3939101	AssignmentExpression	arg_info -> type_hint = ast -> attr		3939089	0		=			
ANR	3939102	PtrMemberAccess	arg_info -> type_hint		3939089	0					
ANR	3939103	Identifier	arg_info		3939089	0					
ANR	3939104	Identifier	type_hint		3939089	1					
ANR	3939105	PtrMemberAccess	ast -> attr		3939089	1					
ANR	3939106	Identifier	ast		3939089	0					
ANR	3939107	Identifier	attr		3939089	1					
ANR	3939108	ElseStatement	else		3939089	0					
ANR	3939109	CompoundStatement		6:2:134:196	3939089	0					
ANR	3939110	IdentifierDeclStatement	zend_string * class_name = zend_ast_get_str ( ast ) ;	4384:2:126512:126559	3939089	0	True				
ANR	3939111	IdentifierDecl	* class_name = zend_ast_get_str ( ast )		3939089	0					
ANR	3939112	IdentifierDeclType	zend_string *		3939089	0					
ANR	3939113	Identifier	class_name		3939089	1					
ANR	3939114	AssignmentExpression	* class_name = zend_ast_get_str ( ast )		3939089	2		=			
ANR	3939115	Identifier	class_name		3939089	0					
ANR	3939116	CallExpression	zend_ast_get_str ( ast )		3939089	1					
ANR	3939117	Callee	zend_ast_get_str		3939089	0					
ANR	3939118	Identifier	zend_ast_get_str		3939089	0					
ANR	3939119	ArgumentList	ast		3939089	1					
ANR	3939120	Argument	ast		3939089	0					
ANR	3939121	Identifier	ast		3939089	0					
ANR	3939122	IdentifierDeclStatement	zend_uchar type = zend_lookup_builtin_type_by_name ( class_name ) ;	4385:2:126563:126625	3939089	1	True				
ANR	3939123	IdentifierDecl	type = zend_lookup_builtin_type_by_name ( class_name )		3939089	0					
ANR	3939124	IdentifierDeclType	zend_uchar		3939089	0					
ANR	3939125	Identifier	type		3939089	1					
ANR	3939126	AssignmentExpression	type = zend_lookup_builtin_type_by_name ( class_name )		3939089	2		=			
ANR	3939127	Identifier	type		3939089	0					
ANR	3939128	CallExpression	zend_lookup_builtin_type_by_name ( class_name )		3939089	1					
ANR	3939129	Callee	zend_lookup_builtin_type_by_name		3939089	0					
ANR	3939130	Identifier	zend_lookup_builtin_type_by_name		3939089	0					
ANR	3939131	ArgumentList	class_name		3939089	1					
ANR	3939132	Argument	class_name		3939089	0					
ANR	3939133	Identifier	class_name		3939089	0					
ANR	3939134	IfStatement	if ( type != 0 )		3939089	2					
ANR	3939135	Condition	type != 0	4387:6:126634:126642	3939089	0	True				
ANR	3939136	EqualityExpression	type != 0		3939089	0		!=			
ANR	3939137	Identifier	type		3939089	0					
ANR	3939138	PrimaryExpression	0		3939089	1					
ANR	3939139	CompoundStatement		8:17:216:216	3939089	1					
ANR	3939140	IfStatement	if ( ast -> attr != ZEND_NAME_NOT_FQ )		3939089	0					
ANR	3939141	Condition	ast -> attr != ZEND_NAME_NOT_FQ	4388:7:126654:126682	3939089	0	True				
ANR	3939142	EqualityExpression	ast -> attr != ZEND_NAME_NOT_FQ		3939089	0		!=			
ANR	3939143	PtrMemberAccess	ast -> attr		3939089	0					
ANR	3939144	Identifier	ast		3939089	0					
ANR	3939145	Identifier	attr		3939089	1					
ANR	3939146	Identifier	ZEND_NAME_NOT_FQ		3939089	1					
ANR	3939147	CompoundStatement		9:38:256:256	3939089	1					
ANR	3939148	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Scalar type declaration '%s' must be unqualified"" , ZSTR_VAL ( zend_string_tolower ( class_name ) ) )"	4389:4:126691:126832	3939089	0	True				
ANR	3939149	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Scalar type declaration '%s' must be unqualified"" , ZSTR_VAL ( zend_string_tolower ( class_name ) ) )"		3939089	0					
ANR	3939150	Callee	zend_error_noreturn		3939089	0					
ANR	3939151	Identifier	zend_error_noreturn		3939089	0					
ANR	3939152	ArgumentList	E_COMPILE_ERROR		3939089	1					
ANR	3939153	Argument	E_COMPILE_ERROR		3939089	0					
ANR	3939154	Identifier	E_COMPILE_ERROR		3939089	0					
ANR	3939155	Argument	"""Scalar type declaration '%s' must be unqualified"""		3939089	1					
ANR	3939156	PrimaryExpression	"""Scalar type declaration '%s' must be unqualified"""		3939089	0					
ANR	3939157	Argument	ZSTR_VAL ( zend_string_tolower ( class_name ) )		3939089	2					
ANR	3939158	CallExpression	ZSTR_VAL ( zend_string_tolower ( class_name ) )		3939089	0					
ANR	3939159	Callee	ZSTR_VAL		3939089	0					
ANR	3939160	Identifier	ZSTR_VAL		3939089	0					
ANR	3939161	ArgumentList	zend_string_tolower ( class_name )		3939089	1					
ANR	3939162	Argument	zend_string_tolower ( class_name )		3939089	0					
ANR	3939163	CallExpression	zend_string_tolower ( class_name )		3939089	0					
ANR	3939164	Callee	zend_string_tolower		3939089	0					
ANR	3939165	Identifier	zend_string_tolower		3939089	0					
ANR	3939166	ArgumentList	class_name		3939089	1					
ANR	3939167	Argument	class_name		3939089	0					
ANR	3939168	Identifier	class_name		3939089	0					
ANR	3939169	ExpressionStatement	arg_info -> type_hint = type	4393:3:126842:126868	3939089	1	True				
ANR	3939170	AssignmentExpression	arg_info -> type_hint = type		3939089	0		=			
ANR	3939171	PtrMemberAccess	arg_info -> type_hint		3939089	0					
ANR	3939172	Identifier	arg_info		3939089	0					
ANR	3939173	Identifier	type_hint		3939089	1					
ANR	3939174	Identifier	type		3939089	1					
ANR	3939175	ElseStatement	else		3939089	0					
ANR	3939176	CompoundStatement		16:3:455:511	3939089	0					
ANR	3939177	IdentifierDeclStatement	uint32_t fetch_type = zend_get_class_fetch_type_ast ( ast ) ;	4395:3:126884:126940	3939089	0	True				
ANR	3939178	IdentifierDecl	fetch_type = zend_get_class_fetch_type_ast ( ast )		3939089	0					
ANR	3939179	IdentifierDeclType	uint32_t		3939089	0					
ANR	3939180	Identifier	fetch_type		3939089	1					
ANR	3939181	AssignmentExpression	fetch_type = zend_get_class_fetch_type_ast ( ast )		3939089	2		=			
ANR	3939182	Identifier	fetch_type		3939089	0					
ANR	3939183	CallExpression	zend_get_class_fetch_type_ast ( ast )		3939089	1					
ANR	3939184	Callee	zend_get_class_fetch_type_ast		3939089	0					
ANR	3939185	Identifier	zend_get_class_fetch_type_ast		3939089	0					
ANR	3939186	ArgumentList	ast		3939089	1					
ANR	3939187	Argument	ast		3939089	0					
ANR	3939188	Identifier	ast		3939089	0					
ANR	3939189	IfStatement	if ( fetch_type == ZEND_FETCH_CLASS_DEFAULT )		3939089	1					
ANR	3939190	Condition	fetch_type == ZEND_FETCH_CLASS_DEFAULT	4396:7:126949:126986	3939089	0	True				
ANR	3939191	EqualityExpression	fetch_type == ZEND_FETCH_CLASS_DEFAULT		3939089	0		==			
ANR	3939192	Identifier	fetch_type		3939089	0					
ANR	3939193	Identifier	ZEND_FETCH_CLASS_DEFAULT		3939089	1					
ANR	3939194	CompoundStatement		17:47:560:560	3939089	1					
ANR	3939195	ExpressionStatement	class_name = zend_resolve_class_name_ast ( ast )	4397:4:126995:127040	3939089	0	True				
ANR	3939196	AssignmentExpression	class_name = zend_resolve_class_name_ast ( ast )		3939089	0		=			
ANR	3939197	Identifier	class_name		3939089	0					
ANR	3939198	CallExpression	zend_resolve_class_name_ast ( ast )		3939089	1					
ANR	3939199	Callee	zend_resolve_class_name_ast		3939089	0					
ANR	3939200	Identifier	zend_resolve_class_name_ast		3939089	0					
ANR	3939201	ArgumentList	ast		3939089	1					
ANR	3939202	Argument	ast		3939089	0					
ANR	3939203	Identifier	ast		3939089	0					
ANR	3939204	ExpressionStatement	zend_assert_valid_class_name ( class_name )	4398:4:127046:127086	3939089	1	True				
ANR	3939205	CallExpression	zend_assert_valid_class_name ( class_name )		3939089	0					
ANR	3939206	Callee	zend_assert_valid_class_name		3939089	0					
ANR	3939207	Identifier	zend_assert_valid_class_name		3939089	0					
ANR	3939208	ArgumentList	class_name		3939089	1					
ANR	3939209	Argument	class_name		3939089	0					
ANR	3939210	Identifier	class_name		3939089	0					
ANR	3939211	ElseStatement	else		3939089	0					
ANR	3939212	CompoundStatement		20:10:669:669	3939089	0					
ANR	3939213	ExpressionStatement	zend_ensure_valid_class_fetch_type ( fetch_type )	4400:4:127104:127150	3939089	0	True				
ANR	3939214	CallExpression	zend_ensure_valid_class_fetch_type ( fetch_type )		3939089	0					
ANR	3939215	Callee	zend_ensure_valid_class_fetch_type		3939089	0					
ANR	3939216	Identifier	zend_ensure_valid_class_fetch_type		3939089	0					
ANR	3939217	ArgumentList	fetch_type		3939089	1					
ANR	3939218	Argument	fetch_type		3939089	0					
ANR	3939219	Identifier	fetch_type		3939089	0					
ANR	3939220	ExpressionStatement	zend_string_addref ( class_name )	4401:4:127156:127186	3939089	1	True				
ANR	3939221	CallExpression	zend_string_addref ( class_name )		3939089	0					
ANR	3939222	Callee	zend_string_addref		3939089	0					
ANR	3939223	Identifier	zend_string_addref		3939089	0					
ANR	3939224	ArgumentList	class_name		3939089	1					
ANR	3939225	Argument	class_name		3939089	0					
ANR	3939226	Identifier	class_name		3939089	0					
ANR	3939227	ExpressionStatement	arg_info -> type_hint = IS_OBJECT	4404:3:127197:127228	3939089	2	True				
ANR	3939228	AssignmentExpression	arg_info -> type_hint = IS_OBJECT		3939089	0		=			
ANR	3939229	PtrMemberAccess	arg_info -> type_hint		3939089	0					
ANR	3939230	Identifier	arg_info		3939089	0					
ANR	3939231	Identifier	type_hint		3939089	1					
ANR	3939232	Identifier	IS_OBJECT		3939089	1					
ANR	3939233	ExpressionStatement	arg_info -> class_name = class_name	4405:3:127233:127266	3939089	3	True				
ANR	3939234	AssignmentExpression	arg_info -> class_name = class_name		3939089	0		=			
ANR	3939235	PtrMemberAccess	arg_info -> class_name		3939089	0					
ANR	3939236	Identifier	arg_info		3939089	0					
ANR	3939237	Identifier	class_name		3939089	1					
ANR	3939238	Identifier	class_name		3939089	1					
ANR	3939239	ReturnType	static void		3939089	1					
ANR	3939240	Identifier	zend_compile_typename		3939089	2					
ANR	3939241	ParameterList	"zend_ast * ast , zend_arg_info * arg_info"		3939089	3					
ANR	3939242	Parameter	zend_ast * ast	4379:34:126378:126390	3939089	0	True				
ANR	3939243	ParameterType	zend_ast *		3939089	0					
ANR	3939244	Identifier	ast		3939089	1					
ANR	3939245	Parameter	zend_arg_info * arg_info	4379:49:126393:126415	3939089	1	True				
ANR	3939246	ParameterType	zend_arg_info *		3939089	0					
ANR	3939247	Identifier	arg_info		3939089	1					
ANR	3939248	CFGEntryNode	ENTRY		3939089		True				
ANR	3939249	CFGExitNode	EXIT		3939089		True				
ANR	3939250	Symbol	ZEND_FETCH_CLASS_DEFAULT		3939089						
ANR	3939251	Symbol	ast -> attr		3939089						
ANR	3939252	Symbol	ast -> kind		3939089						
ANR	3939253	Symbol	fetch_type		3939089						
ANR	3939254	Symbol	ast		3939089						
ANR	3939255	Symbol	arg_info -> type_hint		3939089						
ANR	3939256	Symbol	zend_resolve_class_name_ast		3939089						
ANR	3939257	Symbol	ZEND_AST_TYPE		3939089						
ANR	3939258	Symbol	E_COMPILE_ERROR		3939089						
ANR	3939259	Symbol	type		3939089						
ANR	3939260	Symbol	zend_string_tolower		3939089						
ANR	3939261	Symbol	* arg_info		3939089						
ANR	3939262	Symbol	ZSTR_VAL		3939089						
ANR	3939263	Symbol	arg_info		3939089						
ANR	3939264	Symbol	* ast		3939089						
ANR	3939265	Symbol	zend_ast_get_str		3939089						
ANR	3939266	Symbol	ZEND_NAME_NOT_FQ		3939089						
ANR	3939267	Symbol	arg_info -> class_name		3939089						
ANR	3939268	Symbol	zend_lookup_builtin_type_by_name		3939089						
ANR	3939269	Symbol	IS_OBJECT		3939089						
ANR	3939270	Symbol	class_name		3939089						
ANR	3939271	Symbol	zend_get_class_fetch_type_ast		3939089						
ANR	3939272	Function	zend_compile_params	4411:0:127288:133654							
ANR	3939273	FunctionDef	"zend_compile_params (zend_ast * ast , zend_ast * return_type_ast)"		3939272	0					
ANR	3939274	CompoundStatement		4412:0:127365:133654	3939272	0					
ANR	3939275	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	4413:1:127368:127412	3939272	0	True				
ANR	3939276	IdentifierDecl	* list = zend_ast_get_list ( ast )		3939272	0					
ANR	3939277	IdentifierDeclType	zend_ast_list *		3939272	0					
ANR	3939278	Identifier	list		3939272	1					
ANR	3939279	AssignmentExpression	* list = zend_ast_get_list ( ast )		3939272	2		=			
ANR	3939280	Identifier	list		3939272	0					
ANR	3939281	CallExpression	zend_ast_get_list ( ast )		3939272	1					
ANR	3939282	Callee	zend_ast_get_list		3939272	0					
ANR	3939283	Identifier	zend_ast_get_list		3939272	0					
ANR	3939284	ArgumentList	ast		3939272	1					
ANR	3939285	Argument	ast		3939272	0					
ANR	3939286	Identifier	ast		3939272	0					
ANR	3939287	IdentifierDeclStatement	uint32_t i ;	4414:1:127415:127425	3939272	1	True				
ANR	3939288	IdentifierDecl	i		3939272	0					
ANR	3939289	IdentifierDeclType	uint32_t		3939272	0					
ANR	3939290	Identifier	i		3939272	1					
ANR	3939291	IdentifierDeclStatement	zend_op_array * op_array = CG ( active_op_array ) ;	4415:1:127428:127473	3939272	2	True				
ANR	3939292	IdentifierDecl	* op_array = CG ( active_op_array )		3939272	0					
ANR	3939293	IdentifierDeclType	zend_op_array *		3939272	0					
ANR	3939294	Identifier	op_array		3939272	1					
ANR	3939295	AssignmentExpression	* op_array = CG ( active_op_array )		3939272	2		=			
ANR	3939296	Identifier	op_array		3939272	0					
ANR	3939297	CallExpression	CG ( active_op_array )		3939272	1					
ANR	3939298	Callee	CG		3939272	0					
ANR	3939299	Identifier	CG		3939272	0					
ANR	3939300	ArgumentList	active_op_array		3939272	1					
ANR	3939301	Argument	active_op_array		3939272	0					
ANR	3939302	Identifier	active_op_array		3939272	0					
ANR	3939303	IdentifierDeclStatement	zend_arg_info * arg_infos ;	4416:1:127476:127500	3939272	3	True				
ANR	3939304	IdentifierDecl	* arg_infos		3939272	0					
ANR	3939305	IdentifierDeclType	zend_arg_info *		3939272	0					
ANR	3939306	Identifier	arg_infos		3939272	1					
ANR	3939307	IfStatement	if ( return_type_ast )		3939272	4					
ANR	3939308	Condition	return_type_ast	4418:5:127509:127523	3939272	0	True				
ANR	3939309	Identifier	return_type_ast		3939272	0					
ANR	3939310	CompoundStatement		7:22:160:160	3939272	1					
ANR	3939311	ExpressionStatement	"arg_infos = safe_emalloc ( sizeof ( zend_arg_info ) , list -> children + 1 , 0 )"	4420:2:127589:127659	3939272	0	True				
ANR	3939312	AssignmentExpression	"arg_infos = safe_emalloc ( sizeof ( zend_arg_info ) , list -> children + 1 , 0 )"		3939272	0		=			
ANR	3939313	Identifier	arg_infos		3939272	0					
ANR	3939314	CallExpression	"safe_emalloc ( sizeof ( zend_arg_info ) , list -> children + 1 , 0 )"		3939272	1					
ANR	3939315	Callee	safe_emalloc		3939272	0					
ANR	3939316	Identifier	safe_emalloc		3939272	0					
ANR	3939317	ArgumentList	sizeof ( zend_arg_info )		3939272	1					
ANR	3939318	Argument	sizeof ( zend_arg_info )		3939272	0					
ANR	3939319	SizeofExpression	sizeof ( zend_arg_info )		3939272	0					
ANR	3939320	Sizeof	sizeof		3939272	0					
ANR	3939321	SizeofOperand	zend_arg_info		3939272	1					
ANR	3939322	Argument	list -> children + 1		3939272	1					
ANR	3939323	AdditiveExpression	list -> children + 1		3939272	0		+			
ANR	3939324	PtrMemberAccess	list -> children		3939272	0					
ANR	3939325	Identifier	list		3939272	0					
ANR	3939326	Identifier	children		3939272	1					
ANR	3939327	PrimaryExpression	1		3939272	1					
ANR	3939328	Argument	0		3939272	2					
ANR	3939329	PrimaryExpression	0		3939272	0					
ANR	3939330	ExpressionStatement	arg_infos -> name = NULL	4421:2:127663:127685	3939272	1	True				
ANR	3939331	AssignmentExpression	arg_infos -> name = NULL		3939272	0		=			
ANR	3939332	PtrMemberAccess	arg_infos -> name		3939272	0					
ANR	3939333	Identifier	arg_infos		3939272	0					
ANR	3939334	Identifier	name		3939272	1					
ANR	3939335	Identifier	NULL		3939272	1					
ANR	3939336	ExpressionStatement	arg_infos -> pass_by_reference = ( op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0	4422:2:127689:127773	3939272	2	True				
ANR	3939337	AssignmentExpression	arg_infos -> pass_by_reference = ( op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3939272	0		=			
ANR	3939338	PtrMemberAccess	arg_infos -> pass_by_reference		3939272	0					
ANR	3939339	Identifier	arg_infos		3939272	0					
ANR	3939340	Identifier	pass_by_reference		3939272	1					
ANR	3939341	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3939272	1		!=			
ANR	3939342	BitAndExpression	op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE		3939272	0		&			
ANR	3939343	PtrMemberAccess	op_array -> fn_flags		3939272	0					
ANR	3939344	Identifier	op_array		3939272	0					
ANR	3939345	Identifier	fn_flags		3939272	1					
ANR	3939346	Identifier	ZEND_ACC_RETURN_REFERENCE		3939272	1					
ANR	3939347	PrimaryExpression	0		3939272	1					
ANR	3939348	ExpressionStatement	arg_infos -> is_variadic = 0	4423:2:127777:127803	3939272	3	True				
ANR	3939349	AssignmentExpression	arg_infos -> is_variadic = 0		3939272	0		=			
ANR	3939350	PtrMemberAccess	arg_infos -> is_variadic		3939272	0					
ANR	3939351	Identifier	arg_infos		3939272	0					
ANR	3939352	Identifier	is_variadic		3939272	1					
ANR	3939353	PrimaryExpression	0		3939272	1					
ANR	3939354	ExpressionStatement	arg_infos -> type_hint = 0	4424:2:127807:127831	3939272	4	True				
ANR	3939355	AssignmentExpression	arg_infos -> type_hint = 0		3939272	0		=			
ANR	3939356	PtrMemberAccess	arg_infos -> type_hint		3939272	0					
ANR	3939357	Identifier	arg_infos		3939272	0					
ANR	3939358	Identifier	type_hint		3939272	1					
ANR	3939359	PrimaryExpression	0		3939272	1					
ANR	3939360	ExpressionStatement	arg_infos -> allow_null = 0	4425:2:127835:127860	3939272	5	True				
ANR	3939361	AssignmentExpression	arg_infos -> allow_null = 0		3939272	0		=			
ANR	3939362	PtrMemberAccess	arg_infos -> allow_null		3939272	0					
ANR	3939363	Identifier	arg_infos		3939272	0					
ANR	3939364	Identifier	allow_null		3939272	1					
ANR	3939365	PrimaryExpression	0		3939272	1					
ANR	3939366	ExpressionStatement	arg_infos -> class_name = NULL	4426:2:127864:127892	3939272	6	True				
ANR	3939367	AssignmentExpression	arg_infos -> class_name = NULL		3939272	0		=			
ANR	3939368	PtrMemberAccess	arg_infos -> class_name		3939272	0					
ANR	3939369	Identifier	arg_infos		3939272	0					
ANR	3939370	Identifier	class_name		3939272	1					
ANR	3939371	Identifier	NULL		3939272	1					
ANR	3939372	ExpressionStatement	"zend_compile_typename ( return_type_ast , arg_infos )"	4428:2:127897:127946	3939272	7	True				
ANR	3939373	CallExpression	"zend_compile_typename ( return_type_ast , arg_infos )"		3939272	0					
ANR	3939374	Callee	zend_compile_typename		3939272	0					
ANR	3939375	Identifier	zend_compile_typename		3939272	0					
ANR	3939376	ArgumentList	return_type_ast		3939272	1					
ANR	3939377	Argument	return_type_ast		3939272	0					
ANR	3939378	Identifier	return_type_ast		3939272	0					
ANR	3939379	Argument	arg_infos		3939272	1					
ANR	3939380	Identifier	arg_infos		3939272	0					
ANR	3939381	ExpressionStatement	arg_infos ++	4430:2:127951:127962	3939272	8	True				
ANR	3939382	PostIncDecOperationExpression	arg_infos ++		3939272	0					
ANR	3939383	Identifier	arg_infos		3939272	0					
ANR	3939384	IncDec	++		3939272	1					
ANR	3939385	ExpressionStatement	op_array -> fn_flags |= ZEND_ACC_HAS_RETURN_TYPE	4431:2:127966:128012	3939272	9	True				
ANR	3939386	AssignmentExpression	op_array -> fn_flags |= ZEND_ACC_HAS_RETURN_TYPE		3939272	0		|=			
ANR	3939387	PtrMemberAccess	op_array -> fn_flags		3939272	0					
ANR	3939388	Identifier	op_array		3939272	0					
ANR	3939389	Identifier	fn_flags		3939272	1					
ANR	3939390	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3939272	1					
ANR	3939391	ElseStatement	else		3939272	0					
ANR	3939392	CompoundStatement		21:8:656:656	3939272	0					
ANR	3939393	IfStatement	if ( list -> children == 0 )		3939272	0					
ANR	3939394	Condition	list -> children == 0	4433:6:128030:128048	3939272	0	True				
ANR	3939395	EqualityExpression	list -> children == 0		3939272	0		==			
ANR	3939396	PtrMemberAccess	list -> children		3939272	0					
ANR	3939397	Identifier	list		3939272	0					
ANR	3939398	Identifier	children		3939272	1					
ANR	3939399	PrimaryExpression	0		3939272	1					
ANR	3939400	CompoundStatement		22:27:685:685	3939272	1					
ANR	3939401	ReturnStatement	return ;	4434:3:128056:128062	3939272	0	True				
ANR	3939402	ExpressionStatement	"arg_infos = safe_emalloc ( sizeof ( zend_arg_info ) , list -> children , 0 )"	4436:2:128070:128136	3939272	1	True				
ANR	3939403	AssignmentExpression	"arg_infos = safe_emalloc ( sizeof ( zend_arg_info ) , list -> children , 0 )"		3939272	0		=			
ANR	3939404	Identifier	arg_infos		3939272	0					
ANR	3939405	CallExpression	"safe_emalloc ( sizeof ( zend_arg_info ) , list -> children , 0 )"		3939272	1					
ANR	3939406	Callee	safe_emalloc		3939272	0					
ANR	3939407	Identifier	safe_emalloc		3939272	0					
ANR	3939408	ArgumentList	sizeof ( zend_arg_info )		3939272	1					
ANR	3939409	Argument	sizeof ( zend_arg_info )		3939272	0					
ANR	3939410	SizeofExpression	sizeof ( zend_arg_info )		3939272	0					
ANR	3939411	Sizeof	sizeof		3939272	0					
ANR	3939412	SizeofOperand	zend_arg_info		3939272	1					
ANR	3939413	Argument	list -> children		3939272	1					
ANR	3939414	PtrMemberAccess	list -> children		3939272	0					
ANR	3939415	Identifier	list		3939272	0					
ANR	3939416	Identifier	children		3939272	1					
ANR	3939417	Argument	0		3939272	2					
ANR	3939418	PrimaryExpression	0		3939272	0					
ANR	3939419	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3939272	5					
ANR	3939420	ForInit	i = 0 ;	4439:6:128148:128153	3939272	0	True				
ANR	3939421	AssignmentExpression	i = 0		3939272	0		=			
ANR	3939422	Identifier	i		3939272	0					
ANR	3939423	PrimaryExpression	0		3939272	1					
ANR	3939424	Condition	i < list -> children	4439:13:128155:128172	3939272	1	True				
ANR	3939425	RelationalExpression	i < list -> children		3939272	0		<			
ANR	3939426	Identifier	i		3939272	0					
ANR	3939427	PtrMemberAccess	list -> children		3939272	1					
ANR	3939428	Identifier	list		3939272	0					
ANR	3939429	Identifier	children		3939272	1					
ANR	3939430	UnaryExpression	++ i	4439:33:128175:128177	3939272	2	True				
ANR	3939431	IncDec	++		3939272	0					
ANR	3939432	Identifier	i		3939272	1					
ANR	3939433	CompoundStatement		40:2:1248:1271	3939272	3					
ANR	3939434	IdentifierDeclStatement	zend_ast * param_ast = list -> child [ i ] ;	4440:2:128184:128220	3939272	0	True				
ANR	3939435	IdentifierDecl	* param_ast = list -> child [ i ]		3939272	0					
ANR	3939436	IdentifierDeclType	zend_ast *		3939272	0					
ANR	3939437	Identifier	param_ast		3939272	1					
ANR	3939438	AssignmentExpression	* param_ast = list -> child [ i ]		3939272	2		=			
ANR	3939439	Identifier	param_ast		3939272	0					
ANR	3939440	ArrayIndexing	list -> child [ i ]		3939272	1					
ANR	3939441	PtrMemberAccess	list -> child		3939272	0					
ANR	3939442	Identifier	list		3939272	0					
ANR	3939443	Identifier	child		3939272	1					
ANR	3939444	Identifier	i		3939272	1					
ANR	3939445	IdentifierDeclStatement	zend_ast * type_ast = param_ast -> child [ 0 ] ;	4441:2:128224:128264	3939272	1	True				
ANR	3939446	IdentifierDecl	* type_ast = param_ast -> child [ 0 ]		3939272	0					
ANR	3939447	IdentifierDeclType	zend_ast *		3939272	0					
ANR	3939448	Identifier	type_ast		3939272	1					
ANR	3939449	AssignmentExpression	* type_ast = param_ast -> child [ 0 ]		3939272	2		=			
ANR	3939450	Identifier	type_ast		3939272	0					
ANR	3939451	ArrayIndexing	param_ast -> child [ 0 ]		3939272	1					
ANR	3939452	PtrMemberAccess	param_ast -> child		3939272	0					
ANR	3939453	Identifier	param_ast		3939272	0					
ANR	3939454	Identifier	child		3939272	1					
ANR	3939455	PrimaryExpression	0		3939272	1					
ANR	3939456	IdentifierDeclStatement	zend_ast * var_ast = param_ast -> child [ 1 ] ;	4442:2:128268:128307	3939272	2	True				
ANR	3939457	IdentifierDecl	* var_ast = param_ast -> child [ 1 ]		3939272	0					
ANR	3939458	IdentifierDeclType	zend_ast *		3939272	0					
ANR	3939459	Identifier	var_ast		3939272	1					
ANR	3939460	AssignmentExpression	* var_ast = param_ast -> child [ 1 ]		3939272	2		=			
ANR	3939461	Identifier	var_ast		3939272	0					
ANR	3939462	ArrayIndexing	param_ast -> child [ 1 ]		3939272	1					
ANR	3939463	PtrMemberAccess	param_ast -> child		3939272	0					
ANR	3939464	Identifier	param_ast		3939272	0					
ANR	3939465	Identifier	child		3939272	1					
ANR	3939466	PrimaryExpression	1		3939272	1					
ANR	3939467	IdentifierDeclStatement	zend_ast * default_ast = param_ast -> child [ 2 ] ;	4443:2:128311:128354	3939272	3	True				
ANR	3939468	IdentifierDecl	* default_ast = param_ast -> child [ 2 ]		3939272	0					
ANR	3939469	IdentifierDeclType	zend_ast *		3939272	0					
ANR	3939470	Identifier	default_ast		3939272	1					
ANR	3939471	AssignmentExpression	* default_ast = param_ast -> child [ 2 ]		3939272	2		=			
ANR	3939472	Identifier	default_ast		3939272	0					
ANR	3939473	ArrayIndexing	param_ast -> child [ 2 ]		3939272	1					
ANR	3939474	PtrMemberAccess	param_ast -> child		3939272	0					
ANR	3939475	Identifier	param_ast		3939272	0					
ANR	3939476	Identifier	child		3939272	1					
ANR	3939477	PrimaryExpression	2		3939272	1					
ANR	3939478	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( var_ast ) ;	4444:2:128358:128403	3939272	4	True				
ANR	3939479	IdentifierDecl	* name = zend_ast_get_str ( var_ast )		3939272	0					
ANR	3939480	IdentifierDeclType	zend_string *		3939272	0					
ANR	3939481	Identifier	name		3939272	1					
ANR	3939482	AssignmentExpression	* name = zend_ast_get_str ( var_ast )		3939272	2		=			
ANR	3939483	Identifier	name		3939272	0					
ANR	3939484	CallExpression	zend_ast_get_str ( var_ast )		3939272	1					
ANR	3939485	Callee	zend_ast_get_str		3939272	0					
ANR	3939486	Identifier	zend_ast_get_str		3939272	0					
ANR	3939487	ArgumentList	var_ast		3939272	1					
ANR	3939488	Argument	var_ast		3939272	0					
ANR	3939489	Identifier	var_ast		3939272	0					
ANR	3939490	IdentifierDeclStatement	zend_bool is_ref = ( param_ast -> attr & ZEND_PARAM_REF ) != 0 ;	4445:2:128407:128465	3939272	5	True				
ANR	3939491	IdentifierDecl	is_ref = ( param_ast -> attr & ZEND_PARAM_REF ) != 0		3939272	0					
ANR	3939492	IdentifierDeclType	zend_bool		3939272	0					
ANR	3939493	Identifier	is_ref		3939272	1					
ANR	3939494	AssignmentExpression	is_ref = ( param_ast -> attr & ZEND_PARAM_REF ) != 0		3939272	2		=			
ANR	3939495	Identifier	is_ref		3939272	0					
ANR	3939496	EqualityExpression	( param_ast -> attr & ZEND_PARAM_REF ) != 0		3939272	1		!=			
ANR	3939497	BitAndExpression	param_ast -> attr & ZEND_PARAM_REF		3939272	0		&			
ANR	3939498	PtrMemberAccess	param_ast -> attr		3939272	0					
ANR	3939499	Identifier	param_ast		3939272	0					
ANR	3939500	Identifier	attr		3939272	1					
ANR	3939501	Identifier	ZEND_PARAM_REF		3939272	1					
ANR	3939502	PrimaryExpression	0		3939272	1					
ANR	3939503	IdentifierDeclStatement	zend_bool is_variadic = ( param_ast -> attr & ZEND_PARAM_VARIADIC ) != 0 ;	4446:2:128469:128537	3939272	6	True				
ANR	3939504	IdentifierDecl	is_variadic = ( param_ast -> attr & ZEND_PARAM_VARIADIC ) != 0		3939272	0					
ANR	3939505	IdentifierDeclType	zend_bool		3939272	0					
ANR	3939506	Identifier	is_variadic		3939272	1					
ANR	3939507	AssignmentExpression	is_variadic = ( param_ast -> attr & ZEND_PARAM_VARIADIC ) != 0		3939272	2		=			
ANR	3939508	Identifier	is_variadic		3939272	0					
ANR	3939509	EqualityExpression	( param_ast -> attr & ZEND_PARAM_VARIADIC ) != 0		3939272	1		!=			
ANR	3939510	BitAndExpression	param_ast -> attr & ZEND_PARAM_VARIADIC		3939272	0		&			
ANR	3939511	PtrMemberAccess	param_ast -> attr		3939272	0					
ANR	3939512	Identifier	param_ast		3939272	0					
ANR	3939513	Identifier	attr		3939272	1					
ANR	3939514	Identifier	ZEND_PARAM_VARIADIC		3939272	1					
ANR	3939515	PrimaryExpression	0		3939272	1					
ANR	3939516	IdentifierDeclStatement	"znode var_node , default_node ;"	4448:2:128542:128570	3939272	7	True				
ANR	3939517	IdentifierDecl	var_node		3939272	0					
ANR	3939518	IdentifierDeclType	znode		3939272	0					
ANR	3939519	Identifier	var_node		3939272	1					
ANR	3939520	IdentifierDecl	default_node		3939272	1					
ANR	3939521	IdentifierDeclType	znode		3939272	0					
ANR	3939522	Identifier	default_node		3939272	1					
ANR	3939523	IdentifierDeclStatement	zend_uchar opcode ;	4449:2:128574:128591	3939272	8	True				
ANR	3939524	IdentifierDecl	opcode		3939272	0					
ANR	3939525	IdentifierDeclType	zend_uchar		3939272	0					
ANR	3939526	Identifier	opcode		3939272	1					
ANR	3939527	IdentifierDeclStatement	zend_op * opline ;	4450:2:128595:128610	3939272	9	True				
ANR	3939528	IdentifierDecl	* opline		3939272	0					
ANR	3939529	IdentifierDeclType	zend_op *		3939272	0					
ANR	3939530	Identifier	opline		3939272	1					
ANR	3939531	IdentifierDeclStatement	zend_arg_info * arg_info ;	4451:2:128614:128637	3939272	10	True				
ANR	3939532	IdentifierDecl	* arg_info		3939272	0					
ANR	3939533	IdentifierDeclType	zend_arg_info *		3939272	0					
ANR	3939534	Identifier	arg_info		3939272	1					
ANR	3939535	IfStatement	if ( zend_is_auto_global ( name ) )		3939272	11					
ANR	3939536	Condition	zend_is_auto_global ( name )	4453:6:128646:128670	3939272	0	True				
ANR	3939537	CallExpression	zend_is_auto_global ( name )		3939272	0					
ANR	3939538	Callee	zend_is_auto_global		3939272	0					
ANR	3939539	Identifier	zend_is_auto_global		3939272	0					
ANR	3939540	ArgumentList	name		3939272	1					
ANR	3939541	Argument	name		3939272	0					
ANR	3939542	Identifier	name		3939272	0					
ANR	3939543	CompoundStatement		42:33:1307:1307	3939272	1					
ANR	3939544	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign auto-global variable %s"" , ZSTR_VAL ( name ) )"	4454:3:128678:128778	3939272	0	True				
ANR	3939545	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign auto-global variable %s"" , ZSTR_VAL ( name ) )"		3939272	0					
ANR	3939546	Callee	zend_error_noreturn		3939272	0					
ANR	3939547	Identifier	zend_error_noreturn		3939272	0					
ANR	3939548	ArgumentList	E_COMPILE_ERROR		3939272	1					
ANR	3939549	Argument	E_COMPILE_ERROR		3939272	0					
ANR	3939550	Identifier	E_COMPILE_ERROR		3939272	0					
ANR	3939551	Argument	"""Cannot re-assign auto-global variable %s"""		3939272	1					
ANR	3939552	PrimaryExpression	"""Cannot re-assign auto-global variable %s"""		3939272	0					
ANR	3939553	Argument	ZSTR_VAL ( name )		3939272	2					
ANR	3939554	CallExpression	ZSTR_VAL ( name )		3939272	0					
ANR	3939555	Callee	ZSTR_VAL		3939272	0					
ANR	3939556	Identifier	ZSTR_VAL		3939272	0					
ANR	3939557	ArgumentList	name		3939272	1					
ANR	3939558	Argument	name		3939272	0					
ANR	3939559	Identifier	name		3939272	0					
ANR	3939560	ExpressionStatement	var_node . op_type = IS_CV	4458:2:128787:128811	3939272	12	True				
ANR	3939561	AssignmentExpression	var_node . op_type = IS_CV		3939272	0		=			
ANR	3939562	MemberAccess	var_node . op_type		3939272	0					
ANR	3939563	Identifier	var_node		3939272	0					
ANR	3939564	Identifier	op_type		3939272	1					
ANR	3939565	Identifier	IS_CV		3939272	1					
ANR	3939566	ExpressionStatement	"var_node . u . op . var = lookup_cv ( CG ( active_op_array ) , zend_string_copy ( name ) )"	4459:2:128815:128889	3939272	13	True				
ANR	3939567	AssignmentExpression	"var_node . u . op . var = lookup_cv ( CG ( active_op_array ) , zend_string_copy ( name ) )"		3939272	0		=			
ANR	3939568	MemberAccess	var_node . u . op . var		3939272	0					
ANR	3939569	MemberAccess	var_node . u . op		3939272	0					
ANR	3939570	MemberAccess	var_node . u		3939272	0					
ANR	3939571	Identifier	var_node		3939272	0					
ANR	3939572	Identifier	u		3939272	1					
ANR	3939573	Identifier	op		3939272	1					
ANR	3939574	Identifier	var		3939272	1					
ANR	3939575	CallExpression	"lookup_cv ( CG ( active_op_array ) , zend_string_copy ( name ) )"		3939272	1					
ANR	3939576	Callee	lookup_cv		3939272	0					
ANR	3939577	Identifier	lookup_cv		3939272	0					
ANR	3939578	ArgumentList	CG ( active_op_array )		3939272	1					
ANR	3939579	Argument	CG ( active_op_array )		3939272	0					
ANR	3939580	CallExpression	CG ( active_op_array )		3939272	0					
ANR	3939581	Callee	CG		3939272	0					
ANR	3939582	Identifier	CG		3939272	0					
ANR	3939583	ArgumentList	active_op_array		3939272	1					
ANR	3939584	Argument	active_op_array		3939272	0					
ANR	3939585	Identifier	active_op_array		3939272	0					
ANR	3939586	Argument	zend_string_copy ( name )		3939272	1					
ANR	3939587	CallExpression	zend_string_copy ( name )		3939272	0					
ANR	3939588	Callee	zend_string_copy		3939272	0					
ANR	3939589	Identifier	zend_string_copy		3939272	0					
ANR	3939590	ArgumentList	name		3939272	1					
ANR	3939591	Argument	name		3939272	0					
ANR	3939592	Identifier	name		3939272	0					
ANR	3939593	IfStatement	if ( EX_VAR_TO_NUM ( var_node . u . op . var ) != i )		3939272	14					
ANR	3939594	Condition	EX_VAR_TO_NUM ( var_node . u . op . var ) != i	4461:6:128898:128934	3939272	0	True				
ANR	3939595	EqualityExpression	EX_VAR_TO_NUM ( var_node . u . op . var ) != i		3939272	0		!=			
ANR	3939596	CallExpression	EX_VAR_TO_NUM ( var_node . u . op . var )		3939272	0					
ANR	3939597	Callee	EX_VAR_TO_NUM		3939272	0					
ANR	3939598	Identifier	EX_VAR_TO_NUM		3939272	0					
ANR	3939599	ArgumentList	var_node . u . op . var		3939272	1					
ANR	3939600	Argument	var_node . u . op . var		3939272	0					
ANR	3939601	MemberAccess	var_node . u . op . var		3939272	0					
ANR	3939602	MemberAccess	var_node . u . op		3939272	0					
ANR	3939603	MemberAccess	var_node . u		3939272	0					
ANR	3939604	Identifier	var_node		3939272	0					
ANR	3939605	Identifier	u		3939272	1					
ANR	3939606	Identifier	op		3939272	1					
ANR	3939607	Identifier	var		3939272	1					
ANR	3939608	Identifier	i		3939272	1					
ANR	3939609	CompoundStatement		50:45:1571:1571	3939272	1					
ANR	3939610	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Redefinition of parameter $%s"" , ZSTR_VAL ( name ) )"	4462:3:128942:129031	3939272	0	True				
ANR	3939611	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Redefinition of parameter $%s"" , ZSTR_VAL ( name ) )"		3939272	0					
ANR	3939612	Callee	zend_error_noreturn		3939272	0					
ANR	3939613	Identifier	zend_error_noreturn		3939272	0					
ANR	3939614	ArgumentList	E_COMPILE_ERROR		3939272	1					
ANR	3939615	Argument	E_COMPILE_ERROR		3939272	0					
ANR	3939616	Identifier	E_COMPILE_ERROR		3939272	0					
ANR	3939617	Argument	"""Redefinition of parameter $%s"""		3939272	1					
ANR	3939618	PrimaryExpression	"""Redefinition of parameter $%s"""		3939272	0					
ANR	3939619	Argument	ZSTR_VAL ( name )		3939272	2					
ANR	3939620	CallExpression	ZSTR_VAL ( name )		3939272	0					
ANR	3939621	Callee	ZSTR_VAL		3939272	0					
ANR	3939622	Identifier	ZSTR_VAL		3939272	0					
ANR	3939623	ArgumentList	name		3939272	1					
ANR	3939624	Argument	name		3939272	0					
ANR	3939625	Identifier	name		3939272	0					
ANR	3939626	ElseStatement	else		3939272	0					
ANR	3939627	IfStatement	"if ( zend_string_equals_literal ( name , ""this"" ) )"		3939272	0					
ANR	3939628	Condition	"zend_string_equals_literal ( name , ""this"" )"	4464:13:129046:129085	3939272	0	True				
ANR	3939629	CallExpression	"zend_string_equals_literal ( name , ""this"" )"		3939272	0					
ANR	3939630	Callee	zend_string_equals_literal		3939272	0					
ANR	3939631	Identifier	zend_string_equals_literal		3939272	0					
ANR	3939632	ArgumentList	name		3939272	1					
ANR	3939633	Argument	name		3939272	0					
ANR	3939634	Identifier	name		3939272	0					
ANR	3939635	Argument	"""this"""		3939272	1					
ANR	3939636	PrimaryExpression	"""this"""		3939272	0					
ANR	3939637	CompoundStatement		53:55:1722:1722	3939272	1					
ANR	3939638	IfStatement	if ( op_array -> scope && ( op_array -> fn_flags & ZEND_ACC_STATIC ) == 0 )		3939272	0					
ANR	3939639	Condition	op_array -> scope && ( op_array -> fn_flags & ZEND_ACC_STATIC ) == 0	4465:7:129097:129158	3939272	0	True				
ANR	3939640	AndExpression	op_array -> scope && ( op_array -> fn_flags & ZEND_ACC_STATIC ) == 0		3939272	0		&&			
ANR	3939641	PtrMemberAccess	op_array -> scope		3939272	0					
ANR	3939642	Identifier	op_array		3939272	0					
ANR	3939643	Identifier	scope		3939272	1					
ANR	3939644	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_STATIC ) == 0		3939272	1		==			
ANR	3939645	BitAndExpression	op_array -> fn_flags & ZEND_ACC_STATIC		3939272	0		&			
ANR	3939646	PtrMemberAccess	op_array -> fn_flags		3939272	0					
ANR	3939647	Identifier	op_array		3939272	0					
ANR	3939648	Identifier	fn_flags		3939272	1					
ANR	3939649	Identifier	ZEND_ACC_STATIC		3939272	1					
ANR	3939650	PrimaryExpression	0		3939272	1					
ANR	3939651	CompoundStatement		54:71:1795:1795	3939272	1					
ANR	3939652	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign $this"" )"	4466:4:129167:129229	3939272	0	True				
ANR	3939653	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot re-assign $this"" )"		3939272	0					
ANR	3939654	Callee	zend_error_noreturn		3939272	0					
ANR	3939655	Identifier	zend_error_noreturn		3939272	0					
ANR	3939656	ArgumentList	E_COMPILE_ERROR		3939272	1					
ANR	3939657	Argument	E_COMPILE_ERROR		3939272	0					
ANR	3939658	Identifier	E_COMPILE_ERROR		3939272	0					
ANR	3939659	Argument	"""Cannot re-assign $this"""		3939272	1					
ANR	3939660	PrimaryExpression	"""Cannot re-assign $this"""		3939272	0					
ANR	3939661	ExpressionStatement	op_array -> this_var = var_node . u . op . var	4468:3:129239:129277	3939272	1	True				
ANR	3939662	AssignmentExpression	op_array -> this_var = var_node . u . op . var		3939272	0		=			
ANR	3939663	PtrMemberAccess	op_array -> this_var		3939272	0					
ANR	3939664	Identifier	op_array		3939272	0					
ANR	3939665	Identifier	this_var		3939272	1					
ANR	3939666	MemberAccess	var_node . u . op . var		3939272	1					
ANR	3939667	MemberAccess	var_node . u . op		3939272	0					
ANR	3939668	MemberAccess	var_node . u		3939272	0					
ANR	3939669	Identifier	var_node		3939272	0					
ANR	3939670	Identifier	u		3939272	1					
ANR	3939671	Identifier	op		3939272	1					
ANR	3939672	Identifier	var		3939272	1					
ANR	3939673	IfStatement	if ( op_array -> fn_flags & ZEND_ACC_VARIADIC )		3939272	15					
ANR	3939674	Condition	op_array -> fn_flags & ZEND_ACC_VARIADIC	4471:6:129290:129327	3939272	0	True				
ANR	3939675	BitAndExpression	op_array -> fn_flags & ZEND_ACC_VARIADIC		3939272	0		&			
ANR	3939676	PtrMemberAccess	op_array -> fn_flags		3939272	0					
ANR	3939677	Identifier	op_array		3939272	0					
ANR	3939678	Identifier	fn_flags		3939272	1					
ANR	3939679	Identifier	ZEND_ACC_VARIADIC		3939272	1					
ANR	3939680	CompoundStatement		60:46:1964:1964	3939272	1					
ANR	3939681	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Only the last parameter can be variadic"" )"	4472:3:129335:129414	3939272	0	True				
ANR	3939682	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Only the last parameter can be variadic"" )"		3939272	0					
ANR	3939683	Callee	zend_error_noreturn		3939272	0					
ANR	3939684	Identifier	zend_error_noreturn		3939272	0					
ANR	3939685	ArgumentList	E_COMPILE_ERROR		3939272	1					
ANR	3939686	Argument	E_COMPILE_ERROR		3939272	0					
ANR	3939687	Identifier	E_COMPILE_ERROR		3939272	0					
ANR	3939688	Argument	"""Only the last parameter can be variadic"""		3939272	1					
ANR	3939689	PrimaryExpression	"""Only the last parameter can be variadic"""		3939272	0					
ANR	3939690	IfStatement	if ( is_variadic )		3939272	16					
ANR	3939691	Condition	is_variadic	4475:6:129427:129437	3939272	0	True				
ANR	3939692	Identifier	is_variadic		3939272	0					
ANR	3939693	CompoundStatement		64:19:2074:2074	3939272	1					
ANR	3939694	ExpressionStatement	opcode = ZEND_RECV_VARIADIC	4476:3:129445:129472	3939272	0	True				
ANR	3939695	AssignmentExpression	opcode = ZEND_RECV_VARIADIC		3939272	0		=			
ANR	3939696	Identifier	opcode		3939272	0					
ANR	3939697	Identifier	ZEND_RECV_VARIADIC		3939272	1					
ANR	3939698	ExpressionStatement	default_node . op_type = IS_UNUSED	4477:3:129477:129509	3939272	1	True				
ANR	3939699	AssignmentExpression	default_node . op_type = IS_UNUSED		3939272	0		=			
ANR	3939700	MemberAccess	default_node . op_type		3939272	0					
ANR	3939701	Identifier	default_node		3939272	0					
ANR	3939702	Identifier	op_type		3939272	1					
ANR	3939703	Identifier	IS_UNUSED		3939272	1					
ANR	3939704	ExpressionStatement	op_array -> fn_flags |= ZEND_ACC_VARIADIC	4478:3:129514:129553	3939272	2	True				
ANR	3939705	AssignmentExpression	op_array -> fn_flags |= ZEND_ACC_VARIADIC		3939272	0		|=			
ANR	3939706	PtrMemberAccess	op_array -> fn_flags		3939272	0					
ANR	3939707	Identifier	op_array		3939272	0					
ANR	3939708	Identifier	fn_flags		3939272	1					
ANR	3939709	Identifier	ZEND_ACC_VARIADIC		3939272	1					
ANR	3939710	IfStatement	if ( default_ast )		3939272	3					
ANR	3939711	Condition	default_ast	4480:7:129563:129573	3939272	0	True				
ANR	3939712	Identifier	default_ast		3939272	0					
ANR	3939713	CompoundStatement		69:20:2210:2210	3939272	1					
ANR	3939714	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Variadic parameter cannot have a default value"" )"	4481:4:129582:129673	3939272	0	True				
ANR	3939715	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Variadic parameter cannot have a default value"" )"		3939272	0					
ANR	3939716	Callee	zend_error_noreturn		3939272	0					
ANR	3939717	Identifier	zend_error_noreturn		3939272	0					
ANR	3939718	ArgumentList	E_COMPILE_ERROR		3939272	1					
ANR	3939719	Argument	E_COMPILE_ERROR		3939272	0					
ANR	3939720	Identifier	E_COMPILE_ERROR		3939272	0					
ANR	3939721	Argument	"""Variadic parameter cannot have a default value"""		3939272	1					
ANR	3939722	PrimaryExpression	"""Variadic parameter cannot have a default value"""		3939272	0					
ANR	3939723	ElseStatement	else		3939272	0					
ANR	3939724	IfStatement	if ( default_ast )		3939272	0					
ANR	3939725	Condition	default_ast	4484:13:129693:129703	3939272	0	True				
ANR	3939726	Identifier	default_ast		3939272	0					
ANR	3939727	CompoundStatement		75:3:2508:2544	3939272	1					
ANR	3939728	IdentifierDeclStatement	uint32_t cops = CG ( compiler_options ) ;	4486:3:129874:129910	3939272	0	True				
ANR	3939729	IdentifierDecl	cops = CG ( compiler_options )		3939272	0					
ANR	3939730	IdentifierDeclType	uint32_t		3939272	0					
ANR	3939731	Identifier	cops		3939272	1					
ANR	3939732	AssignmentExpression	cops = CG ( compiler_options )		3939272	2		=			
ANR	3939733	Identifier	cops		3939272	0					
ANR	3939734	CallExpression	CG ( compiler_options )		3939272	1					
ANR	3939735	Callee	CG		3939272	0					
ANR	3939736	Identifier	CG		3939272	0					
ANR	3939737	ArgumentList	compiler_options		3939272	1					
ANR	3939738	Argument	compiler_options		3939272	0					
ANR	3939739	Identifier	compiler_options		3939272	0					
ANR	3939740	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION | ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION	4487:3:129915:130027	3939272	1	True				
ANR	3939741	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION | ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3939272	0		|=			
ANR	3939742	CallExpression	CG ( compiler_options )		3939272	0					
ANR	3939743	Callee	CG		3939272	0					
ANR	3939744	Identifier	CG		3939272	0					
ANR	3939745	ArgumentList	compiler_options		3939272	1					
ANR	3939746	Argument	compiler_options		3939272	0					
ANR	3939747	Identifier	compiler_options		3939272	0					
ANR	3939748	InclusiveOrExpression	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION | ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3939272	1		|			
ANR	3939749	Identifier	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3939272	0					
ANR	3939750	Identifier	ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3939272	1					
ANR	3939751	ExpressionStatement	opcode = ZEND_RECV_INIT	4488:3:130032:130055	3939272	2	True				
ANR	3939752	AssignmentExpression	opcode = ZEND_RECV_INIT		3939272	0		=			
ANR	3939753	Identifier	opcode		3939272	0					
ANR	3939754	Identifier	ZEND_RECV_INIT		3939272	1					
ANR	3939755	ExpressionStatement	default_node . op_type = IS_CONST	4489:3:130060:130091	3939272	3	True				
ANR	3939756	AssignmentExpression	default_node . op_type = IS_CONST		3939272	0		=			
ANR	3939757	MemberAccess	default_node . op_type		3939272	0					
ANR	3939758	Identifier	default_node		3939272	0					
ANR	3939759	Identifier	op_type		3939272	1					
ANR	3939760	Identifier	IS_CONST		3939272	1					
ANR	3939761	ExpressionStatement	"zend_const_expr_to_zval ( & default_node . u . constant , default_ast )"	4490:3:130096:130158	3939272	4	True				
ANR	3939762	CallExpression	"zend_const_expr_to_zval ( & default_node . u . constant , default_ast )"		3939272	0					
ANR	3939763	Callee	zend_const_expr_to_zval		3939272	0					
ANR	3939764	Identifier	zend_const_expr_to_zval		3939272	0					
ANR	3939765	ArgumentList	& default_node . u . constant		3939272	1					
ANR	3939766	Argument	& default_node . u . constant		3939272	0					
ANR	3939767	UnaryOperationExpression	& default_node . u . constant		3939272	0					
ANR	3939768	UnaryOperator	&		3939272	0					
ANR	3939769	MemberAccess	default_node . u . constant		3939272	1					
ANR	3939770	MemberAccess	default_node . u		3939272	0					
ANR	3939771	Identifier	default_node		3939272	0					
ANR	3939772	Identifier	u		3939272	1					
ANR	3939773	Identifier	constant		3939272	1					
ANR	3939774	Argument	default_ast		3939272	1					
ANR	3939775	Identifier	default_ast		3939272	0					
ANR	3939776	ExpressionStatement	CG ( compiler_options ) = cops	4491:3:130163:130190	3939272	5	True				
ANR	3939777	AssignmentExpression	CG ( compiler_options ) = cops		3939272	0		=			
ANR	3939778	CallExpression	CG ( compiler_options )		3939272	0					
ANR	3939779	Callee	CG		3939272	0					
ANR	3939780	Identifier	CG		3939272	0					
ANR	3939781	ArgumentList	compiler_options		3939272	1					
ANR	3939782	Argument	compiler_options		3939272	0					
ANR	3939783	Identifier	compiler_options		3939272	0					
ANR	3939784	Identifier	cops		3939272	1					
ANR	3939785	ElseStatement	else		3939272	0					
ANR	3939786	CompoundStatement		81:9:2835:2835	3939272	0					
ANR	3939787	ExpressionStatement	opcode = ZEND_RECV	4493:3:130206:130224	3939272	0	True				
ANR	3939788	AssignmentExpression	opcode = ZEND_RECV		3939272	0		=			
ANR	3939789	Identifier	opcode		3939272	0					
ANR	3939790	Identifier	ZEND_RECV		3939272	1					
ANR	3939791	ExpressionStatement	default_node . op_type = IS_UNUSED	4494:3:130229:130261	3939272	1	True				
ANR	3939792	AssignmentExpression	default_node . op_type = IS_UNUSED		3939272	0		=			
ANR	3939793	MemberAccess	default_node . op_type		3939272	0					
ANR	3939794	Identifier	default_node		3939272	0					
ANR	3939795	Identifier	op_type		3939272	1					
ANR	3939796	Identifier	IS_UNUSED		3939272	1					
ANR	3939797	ExpressionStatement	op_array -> required_num_args = i + 1	4495:3:130266:130301	3939272	2	True				
ANR	3939798	AssignmentExpression	op_array -> required_num_args = i + 1		3939272	0		=			
ANR	3939799	PtrMemberAccess	op_array -> required_num_args		3939272	0					
ANR	3939800	Identifier	op_array		3939272	0					
ANR	3939801	Identifier	required_num_args		3939272	1					
ANR	3939802	AdditiveExpression	i + 1		3939272	1		+			
ANR	3939803	Identifier	i		3939272	0					
ANR	3939804	PrimaryExpression	1		3939272	1					
ANR	3939805	ExpressionStatement	"opline = zend_emit_op ( NULL , opcode , NULL , & default_node )"	4498:2:130310:130366	3939272	17	True				
ANR	3939806	AssignmentExpression	"opline = zend_emit_op ( NULL , opcode , NULL , & default_node )"		3939272	0		=			
ANR	3939807	Identifier	opline		3939272	0					
ANR	3939808	CallExpression	"zend_emit_op ( NULL , opcode , NULL , & default_node )"		3939272	1					
ANR	3939809	Callee	zend_emit_op		3939272	0					
ANR	3939810	Identifier	zend_emit_op		3939272	0					
ANR	3939811	ArgumentList	NULL		3939272	1					
ANR	3939812	Argument	NULL		3939272	0					
ANR	3939813	Identifier	NULL		3939272	0					
ANR	3939814	Argument	opcode		3939272	1					
ANR	3939815	Identifier	opcode		3939272	0					
ANR	3939816	Argument	NULL		3939272	2					
ANR	3939817	Identifier	NULL		3939272	0					
ANR	3939818	Argument	& default_node		3939272	3					
ANR	3939819	UnaryOperationExpression	& default_node		3939272	0					
ANR	3939820	UnaryOperator	&		3939272	0					
ANR	3939821	Identifier	default_node		3939272	1					
ANR	3939822	ExpressionStatement	"SET_NODE ( opline -> result , & var_node )"	4499:2:130370:130405	3939272	18	True				
ANR	3939823	CallExpression	"SET_NODE ( opline -> result , & var_node )"		3939272	0					
ANR	3939824	Callee	SET_NODE		3939272	0					
ANR	3939825	Identifier	SET_NODE		3939272	0					
ANR	3939826	ArgumentList	opline -> result		3939272	1					
ANR	3939827	Argument	opline -> result		3939272	0					
ANR	3939828	PtrMemberAccess	opline -> result		3939272	0					
ANR	3939829	Identifier	opline		3939272	0					
ANR	3939830	Identifier	result		3939272	1					
ANR	3939831	Argument	& var_node		3939272	1					
ANR	3939832	UnaryOperationExpression	& var_node		3939272	0					
ANR	3939833	UnaryOperator	&		3939272	0					
ANR	3939834	Identifier	var_node		3939272	1					
ANR	3939835	ExpressionStatement	opline -> op1 . num = i + 1	4500:2:130409:130432	3939272	19	True				
ANR	3939836	AssignmentExpression	opline -> op1 . num = i + 1		3939272	0		=			
ANR	3939837	MemberAccess	opline -> op1 . num		3939272	0					
ANR	3939838	PtrMemberAccess	opline -> op1		3939272	0					
ANR	3939839	Identifier	opline		3939272	0					
ANR	3939840	Identifier	op1		3939272	1					
ANR	3939841	Identifier	num		3939272	1					
ANR	3939842	AdditiveExpression	i + 1		3939272	1		+			
ANR	3939843	Identifier	i		3939272	0					
ANR	3939844	PrimaryExpression	1		3939272	1					
ANR	3939845	ExpressionStatement	arg_info = & arg_infos [ i ]	4502:2:130437:130461	3939272	20	True				
ANR	3939846	AssignmentExpression	arg_info = & arg_infos [ i ]		3939272	0		=			
ANR	3939847	Identifier	arg_info		3939272	0					
ANR	3939848	UnaryOperationExpression	& arg_infos [ i ]		3939272	1					
ANR	3939849	UnaryOperator	&		3939272	0					
ANR	3939850	ArrayIndexing	arg_infos [ i ]		3939272	1					
ANR	3939851	Identifier	arg_infos		3939272	0					
ANR	3939852	Identifier	i		3939272	1					
ANR	3939853	ExpressionStatement	arg_info -> name = zend_string_copy ( name )	4503:2:130465:130504	3939272	21	True				
ANR	3939854	AssignmentExpression	arg_info -> name = zend_string_copy ( name )		3939272	0		=			
ANR	3939855	PtrMemberAccess	arg_info -> name		3939272	0					
ANR	3939856	Identifier	arg_info		3939272	0					
ANR	3939857	Identifier	name		3939272	1					
ANR	3939858	CallExpression	zend_string_copy ( name )		3939272	1					
ANR	3939859	Callee	zend_string_copy		3939272	0					
ANR	3939860	Identifier	zend_string_copy		3939272	0					
ANR	3939861	ArgumentList	name		3939272	1					
ANR	3939862	Argument	name		3939272	0					
ANR	3939863	Identifier	name		3939272	0					
ANR	3939864	ExpressionStatement	arg_info -> pass_by_reference = is_ref	4504:2:130508:130544	3939272	22	True				
ANR	3939865	AssignmentExpression	arg_info -> pass_by_reference = is_ref		3939272	0		=			
ANR	3939866	PtrMemberAccess	arg_info -> pass_by_reference		3939272	0					
ANR	3939867	Identifier	arg_info		3939272	0					
ANR	3939868	Identifier	pass_by_reference		3939272	1					
ANR	3939869	Identifier	is_ref		3939272	1					
ANR	3939870	ExpressionStatement	arg_info -> is_variadic = is_variadic	4505:2:130548:130583	3939272	23	True				
ANR	3939871	AssignmentExpression	arg_info -> is_variadic = is_variadic		3939272	0		=			
ANR	3939872	PtrMemberAccess	arg_info -> is_variadic		3939272	0					
ANR	3939873	Identifier	arg_info		3939272	0					
ANR	3939874	Identifier	is_variadic		3939272	1					
ANR	3939875	Identifier	is_variadic		3939272	1					
ANR	3939876	ExpressionStatement	arg_info -> type_hint = 0	4506:2:130587:130610	3939272	24	True				
ANR	3939877	AssignmentExpression	arg_info -> type_hint = 0		3939272	0		=			
ANR	3939878	PtrMemberAccess	arg_info -> type_hint		3939272	0					
ANR	3939879	Identifier	arg_info		3939272	0					
ANR	3939880	Identifier	type_hint		3939272	1					
ANR	3939881	PrimaryExpression	0		3939272	1					
ANR	3939882	ExpressionStatement	arg_info -> allow_null = 1	4507:2:130614:130638	3939272	25	True				
ANR	3939883	AssignmentExpression	arg_info -> allow_null = 1		3939272	0		=			
ANR	3939884	PtrMemberAccess	arg_info -> allow_null		3939272	0					
ANR	3939885	Identifier	arg_info		3939272	0					
ANR	3939886	Identifier	allow_null		3939272	1					
ANR	3939887	PrimaryExpression	1		3939272	1					
ANR	3939888	ExpressionStatement	arg_info -> class_name = NULL	4508:2:130642:130669	3939272	26	True				
ANR	3939889	AssignmentExpression	arg_info -> class_name = NULL		3939272	0		=			
ANR	3939890	PtrMemberAccess	arg_info -> class_name		3939272	0					
ANR	3939891	Identifier	arg_info		3939272	0					
ANR	3939892	Identifier	class_name		3939272	1					
ANR	3939893	Identifier	NULL		3939272	1					
ANR	3939894	IfStatement	if ( type_ast )		3939272	27					
ANR	3939895	Condition	type_ast	4510:6:130678:130685	3939272	0	True				
ANR	3939896	Identifier	type_ast		3939272	0					
ANR	3939897	CompoundStatement		100:3:3327:3544	3939272	1					
ANR	3939898	IdentifierDeclStatement	"zend_bool has_null_default = default_ast && ( Z_TYPE ( default_node . u . constant ) == IS_NULL || ( Z_TYPE ( default_node . u . constant ) == IS_CONSTANT && strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" ) == 0 ) ) ;"	4511:3:130693:130910	3939272	0	True				
ANR	3939899	IdentifierDecl	"has_null_default = default_ast && ( Z_TYPE ( default_node . u . constant ) == IS_NULL || ( Z_TYPE ( default_node . u . constant ) == IS_CONSTANT && strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" ) == 0 ) )"		3939272	0					
ANR	3939900	IdentifierDeclType	zend_bool		3939272	0					
ANR	3939901	Identifier	has_null_default		3939272	1					
ANR	3939902	AssignmentExpression	"has_null_default = default_ast && ( Z_TYPE ( default_node . u . constant ) == IS_NULL || ( Z_TYPE ( default_node . u . constant ) == IS_CONSTANT && strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" ) == 0 ) )"		3939272	2		=			
ANR	3939903	Identifier	has_null_default		3939272	0					
ANR	3939904	AndExpression	"default_ast && ( Z_TYPE ( default_node . u . constant ) == IS_NULL || ( Z_TYPE ( default_node . u . constant ) == IS_CONSTANT && strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" ) == 0 ) )"		3939272	1		&&			
ANR	3939905	Identifier	default_ast		3939272	0					
ANR	3939906	OrExpression	"Z_TYPE ( default_node . u . constant ) == IS_NULL || ( Z_TYPE ( default_node . u . constant ) == IS_CONSTANT && strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" ) == 0 )"		3939272	1		||			
ANR	3939907	EqualityExpression	Z_TYPE ( default_node . u . constant ) == IS_NULL		3939272	0		==			
ANR	3939908	CallExpression	Z_TYPE ( default_node . u . constant )		3939272	0					
ANR	3939909	Callee	Z_TYPE		3939272	0					
ANR	3939910	Identifier	Z_TYPE		3939272	0					
ANR	3939911	ArgumentList	default_node . u . constant		3939272	1					
ANR	3939912	Argument	default_node . u . constant		3939272	0					
ANR	3939913	MemberAccess	default_node . u . constant		3939272	0					
ANR	3939914	MemberAccess	default_node . u		3939272	0					
ANR	3939915	Identifier	default_node		3939272	0					
ANR	3939916	Identifier	u		3939272	1					
ANR	3939917	Identifier	constant		3939272	1					
ANR	3939918	Identifier	IS_NULL		3939272	1					
ANR	3939919	AndExpression	"Z_TYPE ( default_node . u . constant ) == IS_CONSTANT && strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" ) == 0"		3939272	1		&&			
ANR	3939920	EqualityExpression	Z_TYPE ( default_node . u . constant ) == IS_CONSTANT		3939272	0		==			
ANR	3939921	CallExpression	Z_TYPE ( default_node . u . constant )		3939272	0					
ANR	3939922	Callee	Z_TYPE		3939272	0					
ANR	3939923	Identifier	Z_TYPE		3939272	0					
ANR	3939924	ArgumentList	default_node . u . constant		3939272	1					
ANR	3939925	Argument	default_node . u . constant		3939272	0					
ANR	3939926	MemberAccess	default_node . u . constant		3939272	0					
ANR	3939927	MemberAccess	default_node . u		3939272	0					
ANR	3939928	Identifier	default_node		3939272	0					
ANR	3939929	Identifier	u		3939272	1					
ANR	3939930	Identifier	constant		3939272	1					
ANR	3939931	Identifier	IS_CONSTANT		3939272	1					
ANR	3939932	EqualityExpression	"strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" ) == 0"		3939272	1		==			
ANR	3939933	CallExpression	"strcasecmp ( Z_STRVAL ( default_node . u . constant ) , ""NULL"" )"		3939272	0					
ANR	3939934	Callee	strcasecmp		3939272	0					
ANR	3939935	Identifier	strcasecmp		3939272	0					
ANR	3939936	ArgumentList	Z_STRVAL ( default_node . u . constant )		3939272	1					
ANR	3939937	Argument	Z_STRVAL ( default_node . u . constant )		3939272	0					
ANR	3939938	CallExpression	Z_STRVAL ( default_node . u . constant )		3939272	0					
ANR	3939939	Callee	Z_STRVAL		3939272	0					
ANR	3939940	Identifier	Z_STRVAL		3939272	0					
ANR	3939941	ArgumentList	default_node . u . constant		3939272	1					
ANR	3939942	Argument	default_node . u . constant		3939272	0					
ANR	3939943	MemberAccess	default_node . u . constant		3939272	0					
ANR	3939944	MemberAccess	default_node . u		3939272	0					
ANR	3939945	Identifier	default_node		3939272	0					
ANR	3939946	Identifier	u		3939272	1					
ANR	3939947	Identifier	constant		3939272	1					
ANR	3939948	Argument	"""NULL"""		3939272	1					
ANR	3939949	PrimaryExpression	"""NULL"""		3939272	0					
ANR	3939950	PrimaryExpression	0		3939272	1					
ANR	3939951	ExpressionStatement	op_array -> fn_flags |= ZEND_ACC_HAS_TYPE_HINTS	4516:3:130916:130961	3939272	1	True				
ANR	3939952	AssignmentExpression	op_array -> fn_flags |= ZEND_ACC_HAS_TYPE_HINTS		3939272	0		|=			
ANR	3939953	PtrMemberAccess	op_array -> fn_flags		3939272	0					
ANR	3939954	Identifier	op_array		3939272	0					
ANR	3939955	Identifier	fn_flags		3939272	1					
ANR	3939956	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3939272	1					
ANR	3939957	ExpressionStatement	arg_info -> allow_null = has_null_default	4517:3:130966:131005	3939272	2	True				
ANR	3939958	AssignmentExpression	arg_info -> allow_null = has_null_default		3939272	0		=			
ANR	3939959	PtrMemberAccess	arg_info -> allow_null		3939272	0					
ANR	3939960	Identifier	arg_info		3939272	0					
ANR	3939961	Identifier	allow_null		3939272	1					
ANR	3939962	Identifier	has_null_default		3939272	1					
ANR	3939963	ExpressionStatement	"zend_compile_typename ( type_ast , arg_info )"	4519:3:131011:131052	3939272	3	True				
ANR	3939964	CallExpression	"zend_compile_typename ( type_ast , arg_info )"		3939272	0					
ANR	3939965	Callee	zend_compile_typename		3939272	0					
ANR	3939966	Identifier	zend_compile_typename		3939272	0					
ANR	3939967	ArgumentList	type_ast		3939272	1					
ANR	3939968	Argument	type_ast		3939272	0					
ANR	3939969	Identifier	type_ast		3939272	0					
ANR	3939970	Argument	arg_info		3939272	1					
ANR	3939971	Identifier	arg_info		3939272	0					
ANR	3939972	IfStatement	if ( type_ast -> kind == ZEND_AST_TYPE )		3939272	4					
ANR	3939973	Condition	type_ast -> kind == ZEND_AST_TYPE	4521:7:131062:131092	3939272	0	True				
ANR	3939974	EqualityExpression	type_ast -> kind == ZEND_AST_TYPE		3939272	0		==			
ANR	3939975	PtrMemberAccess	type_ast -> kind		3939272	0					
ANR	3939976	Identifier	type_ast		3939272	0					
ANR	3939977	Identifier	kind		3939272	1					
ANR	3939978	Identifier	ZEND_AST_TYPE		3939272	1					
ANR	3939979	CompoundStatement		110:40:3729:3729	3939272	1					
ANR	3939980	IfStatement	if ( arg_info -> type_hint == IS_ARRAY )		3939272	0					
ANR	3939981	Condition	arg_info -> type_hint == IS_ARRAY	4522:8:131105:131135	3939272	0	True				
ANR	3939982	EqualityExpression	arg_info -> type_hint == IS_ARRAY		3939272	0		==			
ANR	3939983	PtrMemberAccess	arg_info -> type_hint		3939272	0					
ANR	3939984	Identifier	arg_info		3939272	0					
ANR	3939985	Identifier	type_hint		3939272	1					
ANR	3939986	Identifier	IS_ARRAY		3939272	1					
ANR	3939987	CompoundStatement		111:41:3772:3772	3939272	1					
ANR	3939988	IfStatement	if ( default_ast && ! has_null_default && Z_TYPE ( default_node . u . constant ) != IS_ARRAY && ! Z_CONSTANT ( default_node . u . constant ) )		3939272	0					
ANR	3939989	Condition	default_ast && ! has_null_default && Z_TYPE ( default_node . u . constant ) != IS_ARRAY && ! Z_CONSTANT ( default_node . u . constant )	4523:9:131149:131279	3939272	0	True				
ANR	3939990	AndExpression	default_ast && ! has_null_default && Z_TYPE ( default_node . u . constant ) != IS_ARRAY && ! Z_CONSTANT ( default_node . u . constant )		3939272	0		&&			
ANR	3939991	Identifier	default_ast		3939272	0					
ANR	3939992	AndExpression	! has_null_default && Z_TYPE ( default_node . u . constant ) != IS_ARRAY && ! Z_CONSTANT ( default_node . u . constant )		3939272	1		&&			
ANR	3939993	UnaryOperationExpression	! has_null_default		3939272	0					
ANR	3939994	UnaryOperator	!		3939272	0					
ANR	3939995	Identifier	has_null_default		3939272	1					
ANR	3939996	AndExpression	Z_TYPE ( default_node . u . constant ) != IS_ARRAY && ! Z_CONSTANT ( default_node . u . constant )		3939272	1		&&			
ANR	3939997	EqualityExpression	Z_TYPE ( default_node . u . constant ) != IS_ARRAY		3939272	0		!=			
ANR	3939998	CallExpression	Z_TYPE ( default_node . u . constant )		3939272	0					
ANR	3939999	Callee	Z_TYPE		3939272	0					
ANR	3940000	Identifier	Z_TYPE		3939272	0					
ANR	3940001	ArgumentList	default_node . u . constant		3939272	1					
ANR	3940002	Argument	default_node . u . constant		3939272	0					
ANR	3940003	MemberAccess	default_node . u . constant		3939272	0					
ANR	3940004	MemberAccess	default_node . u		3939272	0					
ANR	3940005	Identifier	default_node		3939272	0					
ANR	3940006	Identifier	u		3939272	1					
ANR	3940007	Identifier	constant		3939272	1					
ANR	3940008	Identifier	IS_ARRAY		3939272	1					
ANR	3940009	UnaryOperationExpression	! Z_CONSTANT ( default_node . u . constant )		3939272	1					
ANR	3940010	UnaryOperator	!		3939272	0					
ANR	3940011	CallExpression	Z_CONSTANT ( default_node . u . constant )		3939272	1					
ANR	3940012	Callee	Z_CONSTANT		3939272	0					
ANR	3940013	Identifier	Z_CONSTANT		3939272	0					
ANR	3940014	ArgumentList	default_node . u . constant		3939272	1					
ANR	3940015	Argument	default_node . u . constant		3939272	0					
ANR	3940016	MemberAccess	default_node . u . constant		3939272	0					
ANR	3940017	MemberAccess	default_node . u		3939272	0					
ANR	3940018	Identifier	default_node		3939272	0					
ANR	3940019	Identifier	u		3939272	1					
ANR	3940020	Identifier	constant		3939272	1					
ANR	3940021	CompoundStatement		115:7:3922:3922	3939272	1					
ANR	3940022	Statement	zend_error_noreturn	4527:6:131296:131314	3939272	0	True				
ANR	3940023	Statement	(	4527:25:131315:131315	3939272	1	True				
ANR	3940024	Statement	E_COMPILE_ERROR	4527:26:131316:131330	3939272	2	True				
ANR	3940025	Statement	","	4527:41:131331:131331	3939272	3	True				
ANR	3940026	Statement	"""Default value for parameters """	4527:43:131333:131363	3939272	4	True				
ANR	3940027	Statement	"""with array type hint can only be an array or NULL"""	4528:7:131372:131422	3939272	5	True				
ANR	3940028	Statement	)	4528:58:131423:131423	3939272	6	True				
ANR	3940029	ExpressionStatement		4528:59:131424:131424	3939272	7	True				
ANR	3940030	ElseStatement	else		3939272	0					
ANR	3940031	IfStatement	if ( arg_info -> type_hint == IS_CALLABLE && default_ast )		3939272	0					
ANR	3940032	Condition	arg_info -> type_hint == IS_CALLABLE && default_ast	4530:15:131448:131496	3939272	0	True				
ANR	3940033	AndExpression	arg_info -> type_hint == IS_CALLABLE && default_ast		3939272	0		&&			
ANR	3940034	EqualityExpression	arg_info -> type_hint == IS_CALLABLE		3939272	0		==			
ANR	3940035	PtrMemberAccess	arg_info -> type_hint		3939272	0					
ANR	3940036	Identifier	arg_info		3939272	0					
ANR	3940037	Identifier	type_hint		3939272	1					
ANR	3940038	Identifier	IS_CALLABLE		3939272	1					
ANR	3940039	Identifier	default_ast		3939272	1					
ANR	3940040	CompoundStatement		119:66:4133:4133	3939272	1					
ANR	3940041	IfStatement	if ( ! has_null_default && ! Z_CONSTANT ( default_node . u . constant ) )		3939272	0					
ANR	3940042	Condition	! has_null_default && ! Z_CONSTANT ( default_node . u . constant )	4531:9:131510:131566	3939272	0	True				
ANR	3940043	AndExpression	! has_null_default && ! Z_CONSTANT ( default_node . u . constant )		3939272	0		&&			
ANR	3940044	UnaryOperationExpression	! has_null_default		3939272	0					
ANR	3940045	UnaryOperator	!		3939272	0					
ANR	3940046	Identifier	has_null_default		3939272	1					
ANR	3940047	UnaryOperationExpression	! Z_CONSTANT ( default_node . u . constant )		3939272	1					
ANR	3940048	UnaryOperator	!		3939272	0					
ANR	3940049	CallExpression	Z_CONSTANT ( default_node . u . constant )		3939272	1					
ANR	3940050	Callee	Z_CONSTANT		3939272	0					
ANR	3940051	Identifier	Z_CONSTANT		3939272	0					
ANR	3940052	ArgumentList	default_node . u . constant		3939272	1					
ANR	3940053	Argument	default_node . u . constant		3939272	0					
ANR	3940054	MemberAccess	default_node . u . constant		3939272	0					
ANR	3940055	MemberAccess	default_node . u		3939272	0					
ANR	3940056	Identifier	default_node		3939272	0					
ANR	3940057	Identifier	u		3939272	1					
ANR	3940058	Identifier	constant		3939272	1					
ANR	3940059	CompoundStatement		120:68:4203:4203	3939272	1					
ANR	3940060	Statement	zend_error_noreturn	4532:6:131577:131595	3939272	0	True				
ANR	3940061	Statement	(	4532:25:131596:131596	3939272	1	True				
ANR	3940062	Statement	E_COMPILE_ERROR	4532:26:131597:131611	3939272	2	True				
ANR	3940063	Statement	","	4532:41:131612:131612	3939272	3	True				
ANR	3940064	Statement	"""Default value for parameters """	4532:43:131614:131644	3939272	4	True				
ANR	3940065	Statement	"""with callable type hint can only be NULL"""	4533:7:131653:131694	3939272	5	True				
ANR	3940066	Statement	)	4533:49:131695:131695	3939272	6	True				
ANR	3940067	ExpressionStatement		4533:50:131696:131696	3939272	7	True				
ANR	3940068	ElseStatement	else		3939272	0					
ANR	3940069	CompoundStatement		125:10:4355:4355	3939272	0					
ANR	3940070	IfStatement	if ( default_ast && ! has_null_default && ! Z_CONSTANT ( default_node . u . constant ) )		3939272	0					
ANR	3940071	Condition	default_ast && ! has_null_default && ! Z_CONSTANT ( default_node . u . constant )	4537:8:131731:131802	3939272	0	True				
ANR	3940072	AndExpression	default_ast && ! has_null_default && ! Z_CONSTANT ( default_node . u . constant )		3939272	0		&&			
ANR	3940073	Identifier	default_ast		3939272	0					
ANR	3940074	AndExpression	! has_null_default && ! Z_CONSTANT ( default_node . u . constant )		3939272	1		&&			
ANR	3940075	UnaryOperationExpression	! has_null_default		3939272	0					
ANR	3940076	UnaryOperator	!		3939272	0					
ANR	3940077	Identifier	has_null_default		3939272	1					
ANR	3940078	UnaryOperationExpression	! Z_CONSTANT ( default_node . u . constant )		3939272	1					
ANR	3940079	UnaryOperator	!		3939272	0					
ANR	3940080	CallExpression	Z_CONSTANT ( default_node . u . constant )		3939272	1					
ANR	3940081	Callee	Z_CONSTANT		3939272	0					
ANR	3940082	Identifier	Z_CONSTANT		3939272	0					
ANR	3940083	ArgumentList	default_node . u . constant		3939272	1					
ANR	3940084	Argument	default_node . u . constant		3939272	0					
ANR	3940085	MemberAccess	default_node . u . constant		3939272	0					
ANR	3940086	MemberAccess	default_node . u		3939272	0					
ANR	3940087	Identifier	default_node		3939272	0					
ANR	3940088	Identifier	u		3939272	1					
ANR	3940089	Identifier	constant		3939272	1					
ANR	3940090	CompoundStatement		126:82:4439:4439	3939272	1					
ANR	3940091	IfStatement	if ( arg_info -> class_name )		3939272	0					
ANR	3940092	Condition	arg_info -> class_name	4538:9:131816:131835	3939272	0	True				
ANR	3940093	PtrMemberAccess	arg_info -> class_name		3939272	0					
ANR	3940094	Identifier	arg_info		3939272	0					
ANR	3940095	Identifier	class_name		3939272	1					
ANR	3940096	CompoundStatement		127:31:4472:4472	3939272	1					
ANR	3940097	Statement	zend_error_noreturn	4539:6:131846:131864	3939272	0	True				
ANR	3940098	Statement	(	4539:25:131865:131865	3939272	1	True				
ANR	3940099	Statement	E_COMPILE_ERROR	4539:26:131866:131880	3939272	2	True				
ANR	3940100	Statement	","	4539:41:131881:131881	3939272	3	True				
ANR	3940101	Statement	"""Default value for parameters """	4539:43:131883:131913	3939272	4	True				
ANR	3940102	Statement	"""with a class type hint can only be NULL"""	4540:7:131922:131962	3939272	5	True				
ANR	3940103	Statement	)	4540:48:131963:131963	3939272	6	True				
ANR	3940104	ExpressionStatement		4540:49:131964:131964	3939272	7	True				
ANR	3940105	ElseStatement	else		3939272	0					
ANR	3940106	SwitchStatement	switch ( arg_info -> type_hint )		3939272	0					
ANR	3940107	Condition	arg_info -> type_hint	4541:20:131986:132004	3939272	0	True				
ANR	3940108	PtrMemberAccess	arg_info -> type_hint		3939272	0					
ANR	3940109	Identifier	arg_info		3939272	0					
ANR	3940110	Identifier	type_hint		3939272	1					
ANR	3940111	CompoundStatement		130:41:4641:4641	3939272	1					
ANR	3940112	Label	case IS_DOUBLE :	4542:6:132015:132029	3939272	0	True				
ANR	3940113	Identifier	IS_DOUBLE		3939272	0					
ANR	3940114	IfStatement	if ( Z_TYPE ( default_node . u . constant ) != IS_DOUBLE && Z_TYPE ( default_node . u . constant ) != IS_LONG )		3939272	1					
ANR	3940115	Condition	Z_TYPE ( default_node . u . constant ) != IS_DOUBLE && Z_TYPE ( default_node . u . constant ) != IS_LONG	4543:11:132042:132131	3939272	0	True				
ANR	3940116	AndExpression	Z_TYPE ( default_node . u . constant ) != IS_DOUBLE && Z_TYPE ( default_node . u . constant ) != IS_LONG		3939272	0		&&			
ANR	3940117	EqualityExpression	Z_TYPE ( default_node . u . constant ) != IS_DOUBLE		3939272	0		!=			
ANR	3940118	CallExpression	Z_TYPE ( default_node . u . constant )		3939272	0					
ANR	3940119	Callee	Z_TYPE		3939272	0					
ANR	3940120	Identifier	Z_TYPE		3939272	0					
ANR	3940121	ArgumentList	default_node . u . constant		3939272	1					
ANR	3940122	Argument	default_node . u . constant		3939272	0					
ANR	3940123	MemberAccess	default_node . u . constant		3939272	0					
ANR	3940124	MemberAccess	default_node . u		3939272	0					
ANR	3940125	Identifier	default_node		3939272	0					
ANR	3940126	Identifier	u		3939272	1					
ANR	3940127	Identifier	constant		3939272	1					
ANR	3940128	Identifier	IS_DOUBLE		3939272	1					
ANR	3940129	EqualityExpression	Z_TYPE ( default_node . u . constant ) != IS_LONG		3939272	1		!=			
ANR	3940130	CallExpression	Z_TYPE ( default_node . u . constant )		3939272	0					
ANR	3940131	Callee	Z_TYPE		3939272	0					
ANR	3940132	Identifier	Z_TYPE		3939272	0					
ANR	3940133	ArgumentList	default_node . u . constant		3939272	1					
ANR	3940134	Argument	default_node . u . constant		3939272	0					
ANR	3940135	MemberAccess	default_node . u . constant		3939272	0					
ANR	3940136	MemberAccess	default_node . u		3939272	0					
ANR	3940137	Identifier	default_node		3939272	0					
ANR	3940138	Identifier	u		3939272	1					
ANR	3940139	Identifier	constant		3939272	1					
ANR	3940140	Identifier	IS_LONG		3939272	1					
ANR	3940141	CompoundStatement		132:103:4768:4768	3939272	1					
ANR	3940142	Statement	zend_error_noreturn	4544:8:132144:132162	3939272	0	True				
ANR	3940143	Statement	(	4544:27:132163:132163	3939272	1	True				
ANR	3940144	Statement	E_COMPILE_ERROR	4544:28:132164:132178	3939272	2	True				
ANR	3940145	Statement	","	4544:43:132179:132179	3939272	3	True				
ANR	3940146	Statement	"""Default value for parameters """	4544:45:132181:132211	3939272	4	True				
ANR	3940147	Statement	"""with a float type hint can only be float, integer, or NULL"""	4545:9:132222:132281	3939272	5	True				
ANR	3940148	Statement	)	4545:69:132282:132282	3939272	6	True				
ANR	3940149	ExpressionStatement		4545:70:132283:132283	3939272	7	True				
ANR	3940150	BreakStatement	break ;	4547:7:132301:132306	3939272	2	True				
ANR	3940151	Label	default :	4549:6:132322:132329	3939272	3	True				
ANR	3940152	Identifier	default		3939272	0					
ANR	3940153	IfStatement	"if ( ! ZEND_SAME_FAKE_TYPE ( arg_info -> type_hint , Z_TYPE ( default_node . u . constant ) ) )"		3939272	4					
ANR	3940154	Condition	"! ZEND_SAME_FAKE_TYPE ( arg_info -> type_hint , Z_TYPE ( default_node . u . constant ) )"	4550:11:132342:132415	3939272	0	True				
ANR	3940155	UnaryOperationExpression	"! ZEND_SAME_FAKE_TYPE ( arg_info -> type_hint , Z_TYPE ( default_node . u . constant ) )"		3939272	0					
ANR	3940156	UnaryOperator	!		3939272	0					
ANR	3940157	CallExpression	"ZEND_SAME_FAKE_TYPE ( arg_info -> type_hint , Z_TYPE ( default_node . u . constant ) )"		3939272	1					
ANR	3940158	Callee	ZEND_SAME_FAKE_TYPE		3939272	0					
ANR	3940159	Identifier	ZEND_SAME_FAKE_TYPE		3939272	0					
ANR	3940160	ArgumentList	arg_info -> type_hint		3939272	1					
ANR	3940161	Argument	arg_info -> type_hint		3939272	0					
ANR	3940162	PtrMemberAccess	arg_info -> type_hint		3939272	0					
ANR	3940163	Identifier	arg_info		3939272	0					
ANR	3940164	Identifier	type_hint		3939272	1					
ANR	3940165	Argument	Z_TYPE ( default_node . u . constant )		3939272	1					
ANR	3940166	CallExpression	Z_TYPE ( default_node . u . constant )		3939272	0					
ANR	3940167	Callee	Z_TYPE		3939272	0					
ANR	3940168	Identifier	Z_TYPE		3939272	0					
ANR	3940169	ArgumentList	default_node . u . constant		3939272	1					
ANR	3940170	Argument	default_node . u . constant		3939272	0					
ANR	3940171	MemberAccess	default_node . u . constant		3939272	0					
ANR	3940172	MemberAccess	default_node . u		3939272	0					
ANR	3940173	Identifier	default_node		3939272	0					
ANR	3940174	Identifier	u		3939272	1					
ANR	3940175	Identifier	constant		3939272	1					
ANR	3940176	CompoundStatement		139:87:5052:5052	3939272	1					
ANR	3940177	Statement	zend_error_noreturn	4551:8:132428:132446	3939272	0	True				
ANR	3940178	Statement	(	4551:27:132447:132447	3939272	1	True				
ANR	3940179	Statement	E_COMPILE_ERROR	4551:28:132448:132462	3939272	2	True				
ANR	3940180	Statement	","	4551:43:132463:132463	3939272	3	True				
ANR	3940181	Statement	"""Default value for parameters """	4551:45:132465:132495	3939272	4	True				
ANR	3940182	Statement	"""with a %s type hint can only be %s or NULL"""	4552:9:132506:132549	3939272	5	True				
ANR	3940183	Statement	","	4552:53:132550:132550	3939272	6	True				
ANR	3940184	Statement	zend_get_type_by_const	4553:9:132561:132582	3939272	7	True				
ANR	3940185	Statement	(	4553:31:132583:132583	3939272	8	True				
ANR	3940186	Statement	arg_info	4553:32:132584:132591	3939272	9	True				
ANR	3940187	Statement	->	4553:40:132592:132593	3939272	10	True				
ANR	3940188	Statement	type_hint	4553:42:132594:132602	3939272	11	True				
ANR	3940189	Statement	)	4553:51:132603:132603	3939272	12	True				
ANR	3940190	Statement	","	4553:52:132604:132604	3939272	13	True				
ANR	3940191	Statement	zend_get_type_by_const	4553:54:132606:132627	3939272	14	True				
ANR	3940192	Statement	(	4553:76:132628:132628	3939272	15	True				
ANR	3940193	Statement	arg_info	4553:77:132629:132636	3939272	16	True				
ANR	3940194	Statement	->	4553:85:132637:132638	3939272	17	True				
ANR	3940195	Statement	type_hint	4553:87:132639:132647	3939272	18	True				
ANR	3940196	Statement	)	4553:96:132648:132648	3939272	19	True				
ANR	3940197	Statement	)	4553:97:132649:132649	3939272	20	True				
ANR	3940198	ExpressionStatement		4553:98:132650:132650	3939272	21	True				
ANR	3940199	BreakStatement	break ;	4555:7:132668:132673	3939272	5	True				
ANR	3940200	IfStatement	if ( opline -> opcode == ZEND_RECV_INIT )		3939272	5					
ANR	3940201	Condition	opline -> opcode == ZEND_RECV_INIT	4561:7:132768:132799	3939272	0	True				
ANR	3940202	EqualityExpression	opline -> opcode == ZEND_RECV_INIT		3939272	0		==			
ANR	3940203	PtrMemberAccess	opline -> opcode		3939272	0					
ANR	3940204	Identifier	opline		3939272	0					
ANR	3940205	Identifier	opcode		3939272	1					
ANR	3940206	Identifier	ZEND_RECV_INIT		3939272	1					
ANR	3940207	CompoundStatement		150:41:5436:5436	3939272	1					
ANR	3940208	IfStatement	if ( arg_info -> class_name )		3939272	0					
ANR	3940209	Condition	arg_info -> class_name	4562:8:132812:132831	3939272	0	True				
ANR	3940210	PtrMemberAccess	arg_info -> class_name		3939272	0					
ANR	3940211	Identifier	arg_info		3939272	0					
ANR	3940212	Identifier	class_name		3939272	1					
ANR	3940213	CompoundStatement		151:30:5468:5468	3939272	1					
ANR	3940214	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	4563:5:132841:132884	3939272	0	True				
ANR	3940215	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3939272	0					
ANR	3940216	Callee	zend_alloc_cache_slot		3939272	0					
ANR	3940217	Identifier	zend_alloc_cache_slot		3939272	0					
ANR	3940218	ArgumentList	opline -> op2 . constant		3939272	1					
ANR	3940219	Argument	opline -> op2 . constant		3939272	0					
ANR	3940220	MemberAccess	opline -> op2 . constant		3939272	0					
ANR	3940221	PtrMemberAccess	opline -> op2		3939272	0					
ANR	3940222	Identifier	opline		3939272	0					
ANR	3940223	Identifier	op2		3939272	1					
ANR	3940224	Identifier	constant		3939272	1					
ANR	3940225	ElseStatement	else		3939272	0					
ANR	3940226	CompoundStatement		153:11:5531:5531	3939272	0					
ANR	3940227	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = - 1	4565:5:132904:132963	3939272	0	True				
ANR	3940228	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = - 1		3939272	0		=			
ANR	3940229	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] )		3939272	0					
ANR	3940230	Callee	Z_CACHE_SLOT		3939272	0					
ANR	3940231	Identifier	Z_CACHE_SLOT		3939272	0					
ANR	3940232	ArgumentList	op_array -> literals [ opline -> op2 . constant ]		3939272	1					
ANR	3940233	Argument	op_array -> literals [ opline -> op2 . constant ]		3939272	0					
ANR	3940234	ArrayIndexing	op_array -> literals [ opline -> op2 . constant ]		3939272	0					
ANR	3940235	PtrMemberAccess	op_array -> literals		3939272	0					
ANR	3940236	Identifier	op_array		3939272	0					
ANR	3940237	Identifier	literals		3939272	1					
ANR	3940238	MemberAccess	opline -> op2 . constant		3939272	1					
ANR	3940239	PtrMemberAccess	opline -> op2		3939272	0					
ANR	3940240	Identifier	opline		3939272	0					
ANR	3940241	Identifier	op2		3939272	1					
ANR	3940242	Identifier	constant		3939272	1					
ANR	3940243	UnaryOperationExpression	- 1		3939272	1					
ANR	3940244	UnaryOperator	-		3939272	0					
ANR	3940245	PrimaryExpression	1		3939272	1					
ANR	3940246	ElseStatement	else		3939272	0					
ANR	3940247	CompoundStatement		156:10:5615:5615	3939272	0					
ANR	3940248	IfStatement	if ( arg_info -> class_name )		3939272	0					
ANR	3940249	Condition	arg_info -> class_name	4568:8:132991:133010	3939272	0	True				
ANR	3940250	PtrMemberAccess	arg_info -> class_name		3939272	0					
ANR	3940251	Identifier	arg_info		3939272	0					
ANR	3940252	Identifier	class_name		3939272	1					
ANR	3940253	CompoundStatement		157:30:5647:5647	3939272	1					
ANR	3940254	ExpressionStatement	opline -> op2 . num = op_array -> cache_size	4569:5:133020:133058	3939272	0	True				
ANR	3940255	AssignmentExpression	opline -> op2 . num = op_array -> cache_size		3939272	0		=			
ANR	3940256	MemberAccess	opline -> op2 . num		3939272	0					
ANR	3940257	PtrMemberAccess	opline -> op2		3939272	0					
ANR	3940258	Identifier	opline		3939272	0					
ANR	3940259	Identifier	op2		3939272	1					
ANR	3940260	Identifier	num		3939272	1					
ANR	3940261	PtrMemberAccess	op_array -> cache_size		3939272	1					
ANR	3940262	Identifier	op_array		3939272	0					
ANR	3940263	Identifier	cache_size		3939272	1					
ANR	3940264	ExpressionStatement	op_array -> cache_size += sizeof ( void * )	4570:5:133065:133102	3939272	1	True				
ANR	3940265	AssignmentExpression	op_array -> cache_size += sizeof ( void * )		3939272	0		+=			
ANR	3940266	PtrMemberAccess	op_array -> cache_size		3939272	0					
ANR	3940267	Identifier	op_array		3939272	0					
ANR	3940268	Identifier	cache_size		3939272	1					
ANR	3940269	SizeofExpression	sizeof ( void * )		3939272	1					
ANR	3940270	Sizeof	sizeof		3939272	0					
ANR	3940271	SizeofOperand	void *		3939272	1					
ANR	3940272	ElseStatement	else		3939272	0					
ANR	3940273	CompoundStatement		160:11:5749:5749	3939272	0					
ANR	3940274	ExpressionStatement	opline -> op2 . num = - 1	4572:5:133122:133142	3939272	0	True				
ANR	3940275	AssignmentExpression	opline -> op2 . num = - 1		3939272	0		=			
ANR	3940276	MemberAccess	opline -> op2 . num		3939272	0					
ANR	3940277	PtrMemberAccess	opline -> op2		3939272	0					
ANR	3940278	Identifier	opline		3939272	0					
ANR	3940279	Identifier	op2		3939272	1					
ANR	3940280	Identifier	num		3939272	1					
ANR	3940281	UnaryOperationExpression	- 1		3939272	1					
ANR	3940282	UnaryOperator	-		3939272	0					
ANR	3940283	PrimaryExpression	1		3939272	1					
ANR	3940284	ElseStatement	else		3939272	0					
ANR	3940285	CompoundStatement		164:9:5798:5798	3939272	0					
ANR	3940286	IfStatement	if ( opline -> opcode == ZEND_RECV_INIT )		3939272	0					
ANR	3940287	Condition	opline -> opcode == ZEND_RECV_INIT	4576:7:133173:133204	3939272	0	True				
ANR	3940288	EqualityExpression	opline -> opcode == ZEND_RECV_INIT		3939272	0		==			
ANR	3940289	PtrMemberAccess	opline -> opcode		3939272	0					
ANR	3940290	Identifier	opline		3939272	0					
ANR	3940291	Identifier	opcode		3939272	1					
ANR	3940292	Identifier	ZEND_RECV_INIT		3939272	1					
ANR	3940293	CompoundStatement		165:41:5841:5841	3939272	1					
ANR	3940294	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = - 1	4577:4:133213:133272	3939272	0	True				
ANR	3940295	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = - 1		3939272	0		=			
ANR	3940296	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] )		3939272	0					
ANR	3940297	Callee	Z_CACHE_SLOT		3939272	0					
ANR	3940298	Identifier	Z_CACHE_SLOT		3939272	0					
ANR	3940299	ArgumentList	op_array -> literals [ opline -> op2 . constant ]		3939272	1					
ANR	3940300	Argument	op_array -> literals [ opline -> op2 . constant ]		3939272	0					
ANR	3940301	ArrayIndexing	op_array -> literals [ opline -> op2 . constant ]		3939272	0					
ANR	3940302	PtrMemberAccess	op_array -> literals		3939272	0					
ANR	3940303	Identifier	op_array		3939272	0					
ANR	3940304	Identifier	literals		3939272	1					
ANR	3940305	MemberAccess	opline -> op2 . constant		3939272	1					
ANR	3940306	PtrMemberAccess	opline -> op2		3939272	0					
ANR	3940307	Identifier	opline		3939272	0					
ANR	3940308	Identifier	op2		3939272	1					
ANR	3940309	Identifier	constant		3939272	1					
ANR	3940310	UnaryOperationExpression	- 1		3939272	1					
ANR	3940311	UnaryOperator	-		3939272	0					
ANR	3940312	PrimaryExpression	1		3939272	1					
ANR	3940313	ElseStatement	else		3939272	0					
ANR	3940314	CompoundStatement		167:10:5918:5918	3939272	0					
ANR	3940315	ExpressionStatement	opline -> op2 . num = - 1	4579:4:133290:133310	3939272	0	True				
ANR	3940316	AssignmentExpression	opline -> op2 . num = - 1		3939272	0		=			
ANR	3940317	MemberAccess	opline -> op2 . num		3939272	0					
ANR	3940318	PtrMemberAccess	opline -> op2		3939272	0					
ANR	3940319	Identifier	opline		3939272	0					
ANR	3940320	Identifier	op2		3939272	1					
ANR	3940321	Identifier	num		3939272	1					
ANR	3940322	UnaryOperationExpression	- 1		3939272	1					
ANR	3940323	UnaryOperator	-		3939272	0					
ANR	3940324	PrimaryExpression	1		3939272	1					
ANR	3940325	ExpressionStatement	op_array -> num_args = list -> children	4585:1:133412:133447	3939272	6	True				
ANR	3940326	AssignmentExpression	op_array -> num_args = list -> children		3939272	0		=			
ANR	3940327	PtrMemberAccess	op_array -> num_args		3939272	0					
ANR	3940328	Identifier	op_array		3939272	0					
ANR	3940329	Identifier	num_args		3939272	1					
ANR	3940330	PtrMemberAccess	list -> children		3939272	1					
ANR	3940331	Identifier	list		3939272	0					
ANR	3940332	Identifier	children		3939272	1					
ANR	3940333	ExpressionStatement	op_array -> arg_info = arg_infos	4586:1:133450:133480	3939272	7	True				
ANR	3940334	AssignmentExpression	op_array -> arg_info = arg_infos		3939272	0		=			
ANR	3940335	PtrMemberAccess	op_array -> arg_info		3939272	0					
ANR	3940336	Identifier	op_array		3939272	0					
ANR	3940337	Identifier	arg_info		3939272	1					
ANR	3940338	Identifier	arg_infos		3939272	1					
ANR	3940339	IfStatement	if ( op_array -> fn_flags & ZEND_ACC_VARIADIC )		3939272	8					
ANR	3940340	Condition	op_array -> fn_flags & ZEND_ACC_VARIADIC	4589:5:133529:133566	3939272	0	True				
ANR	3940341	BitAndExpression	op_array -> fn_flags & ZEND_ACC_VARIADIC		3939272	0		&			
ANR	3940342	PtrMemberAccess	op_array -> fn_flags		3939272	0					
ANR	3940343	Identifier	op_array		3939272	0					
ANR	3940344	Identifier	fn_flags		3939272	1					
ANR	3940345	Identifier	ZEND_ACC_VARIADIC		3939272	1					
ANR	3940346	CompoundStatement		178:45:6203:6203	3939272	1					
ANR	3940347	ExpressionStatement	op_array -> num_args --	4590:2:133573:133593	3939272	0	True				
ANR	3940348	PostIncDecOperationExpression	op_array -> num_args --		3939272	0					
ANR	3940349	PtrMemberAccess	op_array -> num_args		3939272	0					
ANR	3940350	Identifier	op_array		3939272	0					
ANR	3940351	Identifier	num_args		3939272	1					
ANR	3940352	IncDec	--		3939272	1					
ANR	3940353	ExpressionStatement	zend_set_function_arg_flags ( ( zend_function * ) op_array )	4592:1:133599:133652	3939272	9	True				
ANR	3940354	CallExpression	zend_set_function_arg_flags ( ( zend_function * ) op_array )		3939272	0					
ANR	3940355	Callee	zend_set_function_arg_flags		3939272	0					
ANR	3940356	Identifier	zend_set_function_arg_flags		3939272	0					
ANR	3940357	ArgumentList	( zend_function * ) op_array		3939272	1					
ANR	3940358	Argument	( zend_function * ) op_array		3939272	0					
ANR	3940359	CastExpression	( zend_function * ) op_array		3939272	0					
ANR	3940360	CastTarget	zend_function *		3939272	0					
ANR	3940361	Identifier	op_array		3939272	1					
ANR	3940362	ReturnType	void		3939272	1					
ANR	3940363	Identifier	zend_compile_params		3939272	2					
ANR	3940364	ParameterList	"zend_ast * ast , zend_ast * return_type_ast"		3939272	3					
ANR	3940365	Parameter	zend_ast * ast	4411:25:127313:127325	3939272	0	True				
ANR	3940366	ParameterType	zend_ast *		3939272	0					
ANR	3940367	Identifier	ast		3939272	1					
ANR	3940368	Parameter	zend_ast * return_type_ast	4411:40:127328:127352	3939272	1	True				
ANR	3940369	ParameterType	zend_ast *		3939272	0					
ANR	3940370	Identifier	return_type_ast		3939272	1					
ANR	3940371	CFGEntryNode	ENTRY		3939272		True				
ANR	3940372	CFGExitNode	EXIT		3939272		True				
ANR	3940373	Symbol	zend_string_equals_literal		3939272						
ANR	3940374	Symbol	ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION		3939272						
ANR	3940375	Symbol	Z_TYPE		3939272						
ANR	3940376	Symbol	ZEND_PARAM_REF		3939272						
ANR	3940377	Symbol	arg_info -> is_variadic		3939272						
ANR	3940378	Symbol	* opline -> op2		3939272						
ANR	3940379	Symbol	ZEND_RECV		3939272						
ANR	3940380	Symbol	default_node . u . constant		3939272						
ANR	3940381	Symbol	arg_info -> class_name		3939272						
ANR	3940382	Symbol	& default_node . u . constant		3939272						
ANR	3940383	Symbol	IS_CONSTANT		3939272						
ANR	3940384	Symbol	IS_CONST		3939272						
ANR	3940385	Symbol	arg_info -> pass_by_reference		3939272						
ANR	3940386	Symbol	* op_array		3939272						
ANR	3940387	Symbol	ZEND_RECV_VARIADIC		3939272						
ANR	3940388	Symbol	ZEND_ACC_VARIADIC		3939272						
ANR	3940389	Symbol	ZEND_SAME_FAKE_TYPE		3939272						
ANR	3940390	Symbol	arg_info -> name		3939272						
ANR	3940391	Symbol	var_node . u . op . var		3939272						
ANR	3940392	Symbol	default_node . op_type		3939272						
ANR	3940393	Symbol	* * op_array		3939272						
ANR	3940394	Symbol	list -> children		3939272						
ANR	3940395	Symbol	zend_emit_op		3939272						
ANR	3940396	Symbol	cops		3939272						
ANR	3940397	Symbol	* arg_infos		3939272						
ANR	3940398	Symbol	ZEND_AST_TYPE		3939272						
ANR	3940399	Symbol	type_ast		3939272						
ANR	3940400	Symbol	ZEND_RECV_INIT		3939272						
ANR	3940401	Symbol	is_ref		3939272						
ANR	3940402	Symbol	* param_ast -> child		3939272						
ANR	3940403	Symbol	IS_ARRAY		3939272						
ANR	3940404	Symbol	ZEND_PARAM_VARIADIC		3939272						
ANR	3940405	Symbol	arg_infos -> is_variadic		3939272						
ANR	3940406	Symbol	* * opline		3939272						
ANR	3940407	Symbol	* opline -> op2 . constant		3939272						
ANR	3940408	Symbol	EX_VAR_TO_NUM		3939272						
ANR	3940409	Symbol	CG		3939272						
ANR	3940410	Symbol	list -> child		3939272						
ANR	3940411	Symbol	active_op_array		3939272						
ANR	3940412	Symbol	zend_is_auto_global		3939272						
ANR	3940413	Symbol	return_type_ast		3939272						
ANR	3940414	Symbol	i		3939272						
ANR	3940415	Symbol	var_ast		3939272						
ANR	3940416	Symbol	& default_node		3939272						
ANR	3940417	Symbol	* opline		3939272						
ANR	3940418	Symbol	* list		3939272						
ANR	3940419	Symbol	* param_ast		3939272						
ANR	3940420	Symbol	opline -> op2 . constant		3939272						
ANR	3940421	Symbol	Z_CACHE_SLOT		3939272						
ANR	3940422	Symbol	default_node		3939272						
ANR	3940423	Symbol	* type_ast		3939272						
ANR	3940424	Symbol	safe_emalloc		3939272						
ANR	3940425	Symbol	default_ast		3939272						
ANR	3940426	Symbol	op_array		3939272						
ANR	3940427	Symbol	& default_node . u		3939272						
ANR	3940428	Symbol	ast		3939272						
ANR	3940429	Symbol	IS_CV		3939272						
ANR	3940430	Symbol	arg_info -> type_hint		3939272						
ANR	3940431	Symbol	* * param_ast		3939272						
ANR	3940432	Symbol	var_node . u		3939272						
ANR	3940433	Symbol	E_COMPILE_ERROR		3939272						
ANR	3940434	Symbol	opcode		3939272						
ANR	3940435	Symbol	opline -> result		3939272						
ANR	3940436	Symbol	* op_array -> literals		3939272						
ANR	3940437	Symbol	* arg_info		3939272						
ANR	3940438	Symbol	arg_infos -> pass_by_reference		3939272						
ANR	3940439	Symbol	op_array -> fn_flags		3939272						
ANR	3940440	Symbol	opline		3939272						
ANR	3940441	Symbol	op_array -> num_args		3939272						
ANR	3940442	Symbol	default_node . u		3939272						
ANR	3940443	Symbol	strcasecmp		3939272						
ANR	3940444	Symbol	is_variadic		3939272						
ANR	3940445	Symbol	NULL		3939272						
ANR	3940446	Symbol	op_array -> this_var		3939272						
ANR	3940447	Symbol	& var_node		3939272						
ANR	3940448	Symbol	arg_infos -> allow_null		3939272						
ANR	3940449	Symbol	param_ast		3939272						
ANR	3940450	Symbol	zend_string_copy		3939272						
ANR	3940451	Symbol	list		3939272						
ANR	3940452	Symbol	arg_infos		3939272						
ANR	3940453	Symbol	arg_info -> allow_null		3939272						
ANR	3940454	Symbol	op_array -> literals		3939272						
ANR	3940455	Symbol	name		3939272						
ANR	3940456	Symbol	* list -> child		3939272						
ANR	3940457	Symbol	opline -> op1 . num		3939272						
ANR	3940458	Symbol	op_array -> cache_size		3939272						
ANR	3940459	Symbol	param_ast -> attr		3939272						
ANR	3940460	Symbol	opline -> op1		3939272						
ANR	3940461	Symbol	opline -> op2		3939272						
ANR	3940462	Symbol	arg_infos -> name		3939272						
ANR	3940463	Symbol	lookup_cv		3939272						
ANR	3940464	Symbol	ZEND_ACC_HAS_TYPE_HINTS		3939272						
ANR	3940465	Symbol	compiler_options		3939272						
ANR	3940466	Symbol	* * list		3939272						
ANR	3940467	Symbol	zend_ast_get_str		3939272						
ANR	3940468	Symbol	op_array -> required_num_args		3939272						
ANR	3940469	Symbol	var_node . u . op		3939272						
ANR	3940470	Symbol	IS_NULL		3939272						
ANR	3940471	Symbol	IS_LONG		3939272						
ANR	3940472	Symbol	Z_STRVAL		3939272						
ANR	3940473	Symbol	ZEND_ACC_STATIC		3939272						
ANR	3940474	Symbol	var_node . op_type		3939272						
ANR	3940475	Symbol	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		3939272						
ANR	3940476	Symbol	IS_CALLABLE		3939272						
ANR	3940477	Symbol	opline -> op2 . num		3939272						
ANR	3940478	Symbol	var_node		3939272						
ANR	3940479	Symbol	ZEND_ACC_HAS_RETURN_TYPE		3939272						
ANR	3940480	Symbol	Z_CONSTANT		3939272						
ANR	3940481	Symbol	op_array -> scope		3939272						
ANR	3940482	Symbol	ZSTR_VAL		3939272						
ANR	3940483	Symbol	param_ast -> child		3939272						
ANR	3940484	Symbol	arg_info		3939272						
ANR	3940485	Symbol	has_null_default		3939272						
ANR	3940486	Symbol	zend_ast_get_list		3939272						
ANR	3940487	Symbol	arg_infos -> type_hint		3939272						
ANR	3940488	Symbol	arg_infos -> class_name		3939272						
ANR	3940489	Symbol	* i		3939272						
ANR	3940490	Symbol	opline -> opcode		3939272						
ANR	3940491	Symbol	ZEND_ACC_RETURN_REFERENCE		3939272						
ANR	3940492	Symbol	IS_DOUBLE		3939272						
ANR	3940493	Symbol	type_ast -> kind		3939272						
ANR	3940494	Symbol	op_array -> arg_info		3939272						
ANR	3940495	Symbol	IS_UNUSED		3939272						
ANR	3940496	Function	zend_compile_closure_uses	4596:0:133667:134239							
ANR	3940497	FunctionDef	zend_compile_closure_uses (zend_ast * ast)		3940496	0					
ANR	3940498	CompoundStatement		4597:0:133723:134239	3940496	0					
ANR	3940499	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	4598:1:133726:133770	3940496	0	True				
ANR	3940500	IdentifierDecl	* list = zend_ast_get_list ( ast )		3940496	0					
ANR	3940501	IdentifierDeclType	zend_ast_list *		3940496	0					
ANR	3940502	Identifier	list		3940496	1					
ANR	3940503	AssignmentExpression	* list = zend_ast_get_list ( ast )		3940496	2		=			
ANR	3940504	Identifier	list		3940496	0					
ANR	3940505	CallExpression	zend_ast_get_list ( ast )		3940496	1					
ANR	3940506	Callee	zend_ast_get_list		3940496	0					
ANR	3940507	Identifier	zend_ast_get_list		3940496	0					
ANR	3940508	ArgumentList	ast		3940496	1					
ANR	3940509	Argument	ast		3940496	0					
ANR	3940510	Identifier	ast		3940496	0					
ANR	3940511	IdentifierDeclStatement	uint32_t i ;	4599:1:133773:133783	3940496	1	True				
ANR	3940512	IdentifierDecl	i		3940496	0					
ANR	3940513	IdentifierDeclType	uint32_t		3940496	0					
ANR	3940514	Identifier	i		3940496	1					
ANR	3940515	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3940496	2					
ANR	3940516	ForInit	i = 0 ;	4601:6:133792:133797	3940496	0	True				
ANR	3940517	AssignmentExpression	i = 0		3940496	0		=			
ANR	3940518	Identifier	i		3940496	0					
ANR	3940519	PrimaryExpression	0		3940496	1					
ANR	3940520	Condition	i < list -> children	4601:13:133799:133816	3940496	1	True				
ANR	3940521	RelationalExpression	i < list -> children		3940496	0		<			
ANR	3940522	Identifier	i		3940496	0					
ANR	3940523	PtrMemberAccess	list -> children		3940496	1					
ANR	3940524	Identifier	list		3940496	0					
ANR	3940525	Identifier	children		3940496	1					
ANR	3940526	UnaryExpression	++ i	4601:33:133819:133821	3940496	2	True				
ANR	3940527	IncDec	++		3940496	0					
ANR	3940528	Identifier	i		3940496	1					
ANR	3940529	CompoundStatement		9:2:227:234	3940496	3					
ANR	3940530	IdentifierDeclStatement	zend_ast * var_ast = list -> child [ i ] ;	4602:2:133828:133862	3940496	0	True				
ANR	3940531	IdentifierDecl	* var_ast = list -> child [ i ]		3940496	0					
ANR	3940532	IdentifierDeclType	zend_ast *		3940496	0					
ANR	3940533	Identifier	var_ast		3940496	1					
ANR	3940534	AssignmentExpression	* var_ast = list -> child [ i ]		3940496	2		=			
ANR	3940535	Identifier	var_ast		3940496	0					
ANR	3940536	ArrayIndexing	list -> child [ i ]		3940496	1					
ANR	3940537	PtrMemberAccess	list -> child		3940496	0					
ANR	3940538	Identifier	list		3940496	0					
ANR	3940539	Identifier	child		3940496	1					
ANR	3940540	Identifier	i		3940496	1					
ANR	3940541	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( var_ast ) ;	4603:2:133866:133911	3940496	1	True				
ANR	3940542	IdentifierDecl	* name = zend_ast_get_str ( var_ast )		3940496	0					
ANR	3940543	IdentifierDeclType	zend_string *		3940496	0					
ANR	3940544	Identifier	name		3940496	1					
ANR	3940545	AssignmentExpression	* name = zend_ast_get_str ( var_ast )		3940496	2		=			
ANR	3940546	Identifier	name		3940496	0					
ANR	3940547	CallExpression	zend_ast_get_str ( var_ast )		3940496	1					
ANR	3940548	Callee	zend_ast_get_str		3940496	0					
ANR	3940549	Identifier	zend_ast_get_str		3940496	0					
ANR	3940550	ArgumentList	var_ast		3940496	1					
ANR	3940551	Argument	var_ast		3940496	0					
ANR	3940552	Identifier	var_ast		3940496	0					
ANR	3940553	IdentifierDeclStatement	zend_bool by_ref = var_ast -> attr ;	4604:2:133915:133947	3940496	2	True				
ANR	3940554	IdentifierDecl	by_ref = var_ast -> attr		3940496	0					
ANR	3940555	IdentifierDeclType	zend_bool		3940496	0					
ANR	3940556	Identifier	by_ref		3940496	1					
ANR	3940557	AssignmentExpression	by_ref = var_ast -> attr		3940496	2		=			
ANR	3940558	Identifier	by_ref		3940496	0					
ANR	3940559	PtrMemberAccess	var_ast -> attr		3940496	1					
ANR	3940560	Identifier	var_ast		3940496	0					
ANR	3940561	Identifier	attr		3940496	1					
ANR	3940562	IdentifierDeclStatement	zval zv ;	4605:2:133951:133958	3940496	3	True				
ANR	3940563	IdentifierDecl	zv		3940496	0					
ANR	3940564	IdentifierDeclType	zval		3940496	0					
ANR	3940565	Identifier	zv		3940496	1					
ANR	3940566	IfStatement	"if ( zend_string_equals_literal ( name , ""this"" ) )"		3940496	4					
ANR	3940567	Condition	"zend_string_equals_literal ( name , ""this"" )"	4607:6:133967:134006	3940496	0	True				
ANR	3940568	CallExpression	"zend_string_equals_literal ( name , ""this"" )"		3940496	0					
ANR	3940569	Callee	zend_string_equals_literal		3940496	0					
ANR	3940570	Identifier	zend_string_equals_literal		3940496	0					
ANR	3940571	ArgumentList	name		3940496	1					
ANR	3940572	Argument	name		3940496	0					
ANR	3940573	Identifier	name		3940496	0					
ANR	3940574	Argument	"""this"""		3940496	1					
ANR	3940575	PrimaryExpression	"""this"""		3940496	0					
ANR	3940576	CompoundStatement		11:48:285:285	3940496	1					
ANR	3940577	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use $this as lexical variable"" )"	4608:3:134014:134090	3940496	0	True				
ANR	3940578	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use $this as lexical variable"" )"		3940496	0					
ANR	3940579	Callee	zend_error_noreturn		3940496	0					
ANR	3940580	Identifier	zend_error_noreturn		3940496	0					
ANR	3940581	ArgumentList	E_COMPILE_ERROR		3940496	1					
ANR	3940582	Argument	E_COMPILE_ERROR		3940496	0					
ANR	3940583	Identifier	E_COMPILE_ERROR		3940496	0					
ANR	3940584	Argument	"""Cannot use $this as lexical variable"""		3940496	1					
ANR	3940585	PrimaryExpression	"""Cannot use $this as lexical variable"""		3940496	0					
ANR	3940586	ExpressionStatement	ZVAL_NULL ( & zv )	4611:2:134099:134113	3940496	5	True				
ANR	3940587	CallExpression	ZVAL_NULL ( & zv )		3940496	0					
ANR	3940588	Callee	ZVAL_NULL		3940496	0					
ANR	3940589	Identifier	ZVAL_NULL		3940496	0					
ANR	3940590	ArgumentList	& zv		3940496	1					
ANR	3940591	Argument	& zv		3940496	0					
ANR	3940592	UnaryOperationExpression	& zv		3940496	0					
ANR	3940593	UnaryOperator	&		3940496	0					
ANR	3940594	Identifier	zv		3940496	1					
ANR	3940595	ExpressionStatement	Z_CONST_FLAGS ( zv ) = by_ref ? IS_LEXICAL_REF : IS_LEXICAL_VAR	4612:2:134117:134177	3940496	6	True				
ANR	3940596	AssignmentExpression	Z_CONST_FLAGS ( zv ) = by_ref ? IS_LEXICAL_REF : IS_LEXICAL_VAR		3940496	0		=			
ANR	3940597	CallExpression	Z_CONST_FLAGS ( zv )		3940496	0					
ANR	3940598	Callee	Z_CONST_FLAGS		3940496	0					
ANR	3940599	Identifier	Z_CONST_FLAGS		3940496	0					
ANR	3940600	ArgumentList	zv		3940496	1					
ANR	3940601	Argument	zv		3940496	0					
ANR	3940602	Identifier	zv		3940496	0					
ANR	3940603	ConditionalExpression	by_ref ? IS_LEXICAL_REF : IS_LEXICAL_VAR		3940496	1					
ANR	3940604	Condition	by_ref		3940496	0					
ANR	3940605	Identifier	by_ref		3940496	0					
ANR	3940606	Identifier	IS_LEXICAL_REF		3940496	1					
ANR	3940607	Identifier	IS_LEXICAL_VAR		3940496	2					
ANR	3940608	ExpressionStatement	"zend_compile_static_var_common ( var_ast , & zv , by_ref )"	4614:2:134182:134234	3940496	7	True				
ANR	3940609	CallExpression	"zend_compile_static_var_common ( var_ast , & zv , by_ref )"		3940496	0					
ANR	3940610	Callee	zend_compile_static_var_common		3940496	0					
ANR	3940611	Identifier	zend_compile_static_var_common		3940496	0					
ANR	3940612	ArgumentList	var_ast		3940496	1					
ANR	3940613	Argument	var_ast		3940496	0					
ANR	3940614	Identifier	var_ast		3940496	0					
ANR	3940615	Argument	& zv		3940496	1					
ANR	3940616	UnaryOperationExpression	& zv		3940496	0					
ANR	3940617	UnaryOperator	&		3940496	0					
ANR	3940618	Identifier	zv		3940496	1					
ANR	3940619	Argument	by_ref		3940496	2					
ANR	3940620	Identifier	by_ref		3940496	0					
ANR	3940621	ReturnType	void		3940496	1					
ANR	3940622	Identifier	zend_compile_closure_uses		3940496	2					
ANR	3940623	ParameterList	zend_ast * ast		3940496	3					
ANR	3940624	Parameter	zend_ast * ast	4596:31:133698:133710	3940496	0	True				
ANR	3940625	ParameterType	zend_ast *		3940496	0					
ANR	3940626	Identifier	ast		3940496	1					
ANR	3940627	CFGEntryNode	ENTRY		3940496		True				
ANR	3940628	CFGExitNode	EXIT		3940496		True				
ANR	3940629	Symbol	zend_string_equals_literal		3940496						
ANR	3940630	Symbol	ast		3940496						
ANR	3940631	Symbol	list -> child		3940496						
ANR	3940632	Symbol	Z_CONST_FLAGS		3940496						
ANR	3940633	Symbol	E_COMPILE_ERROR		3940496						
ANR	3940634	Symbol	& zv		3940496						
ANR	3940635	Symbol	i		3940496						
ANR	3940636	Symbol	list		3940496						
ANR	3940637	Symbol	* var_ast		3940496						
ANR	3940638	Symbol	IS_LEXICAL_VAR		3940496						
ANR	3940639	Symbol	zend_ast_get_list		3940496						
ANR	3940640	Symbol	var_ast		3940496						
ANR	3940641	Symbol	* i		3940496						
ANR	3940642	Symbol	* * list		3940496						
ANR	3940643	Symbol	zend_ast_get_str		3940496						
ANR	3940644	Symbol	* list		3940496						
ANR	3940645	Symbol	name		3940496						
ANR	3940646	Symbol	IS_LEXICAL_REF		3940496						
ANR	3940647	Symbol	* list -> child		3940496						
ANR	3940648	Symbol	by_ref		3940496						
ANR	3940649	Symbol	zv		3940496						
ANR	3940650	Symbol	list -> children		3940496						
ANR	3940651	Symbol	var_ast -> attr		3940496						
ANR	3940652	Function	zend_begin_method_decl	4619:0:134252:141261							
ANR	3940653	FunctionDef	"zend_begin_method_decl (zend_op_array * op_array , zend_string * name , zend_bool has_body)"		3940652	0					
ANR	3940654	CompoundStatement		4620:0:134354:141261	3940652	0					
ANR	3940655	IdentifierDeclStatement	zend_class_entry * ce = CG ( active_class_entry ) ;	4621:1:134357:134402	3940652	0	True				
ANR	3940656	IdentifierDecl	* ce = CG ( active_class_entry )		3940652	0					
ANR	3940657	IdentifierDeclType	zend_class_entry *		3940652	0					
ANR	3940658	Identifier	ce		3940652	1					
ANR	3940659	AssignmentExpression	* ce = CG ( active_class_entry )		3940652	2		=			
ANR	3940660	Identifier	ce		3940652	0					
ANR	3940661	CallExpression	CG ( active_class_entry )		3940652	1					
ANR	3940662	Callee	CG		3940652	0					
ANR	3940663	Identifier	CG		3940652	0					
ANR	3940664	ArgumentList	active_class_entry		3940652	1					
ANR	3940665	Argument	active_class_entry		3940652	0					
ANR	3940666	Identifier	active_class_entry		3940652	0					
ANR	3940667	IdentifierDeclStatement	zend_bool in_interface = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) != 0 ;	4622:1:134405:134470	3940652	1	True				
ANR	3940668	IdentifierDecl	in_interface = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) != 0		3940652	0					
ANR	3940669	IdentifierDeclType	zend_bool		3940652	0					
ANR	3940670	Identifier	in_interface		3940652	1					
ANR	3940671	AssignmentExpression	in_interface = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) != 0		3940652	2		=			
ANR	3940672	Identifier	in_interface		3940652	0					
ANR	3940673	EqualityExpression	( ce -> ce_flags & ZEND_ACC_INTERFACE ) != 0		3940652	1		!=			
ANR	3940674	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3940652	0		&			
ANR	3940675	PtrMemberAccess	ce -> ce_flags		3940652	0					
ANR	3940676	Identifier	ce		3940652	0					
ANR	3940677	Identifier	ce_flags		3940652	1					
ANR	3940678	Identifier	ZEND_ACC_INTERFACE		3940652	1					
ANR	3940679	PrimaryExpression	0		3940652	1					
ANR	3940680	IdentifierDeclStatement	zend_bool in_trait = ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0 ;	4623:1:134473:134530	3940652	2	True				
ANR	3940681	IdentifierDecl	in_trait = ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0		3940652	0					
ANR	3940682	IdentifierDeclType	zend_bool		3940652	0					
ANR	3940683	Identifier	in_trait		3940652	1					
ANR	3940684	AssignmentExpression	in_trait = ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0		3940652	2		=			
ANR	3940685	Identifier	in_trait		3940652	0					
ANR	3940686	EqualityExpression	( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0		3940652	1		!=			
ANR	3940687	BitAndExpression	ce -> ce_flags & ZEND_ACC_TRAIT		3940652	0		&			
ANR	3940688	PtrMemberAccess	ce -> ce_flags		3940652	0					
ANR	3940689	Identifier	ce		3940652	0					
ANR	3940690	Identifier	ce_flags		3940652	1					
ANR	3940691	Identifier	ZEND_ACC_TRAIT		3940652	1					
ANR	3940692	PrimaryExpression	0		3940652	1					
ANR	3940693	IdentifierDeclStatement	zend_bool is_public = ( op_array -> fn_flags & ZEND_ACC_PUBLIC ) != 0 ;	4624:1:134533:134598	3940652	3	True				
ANR	3940694	IdentifierDecl	is_public = ( op_array -> fn_flags & ZEND_ACC_PUBLIC ) != 0		3940652	0					
ANR	3940695	IdentifierDeclType	zend_bool		3940652	0					
ANR	3940696	Identifier	is_public		3940652	1					
ANR	3940697	AssignmentExpression	is_public = ( op_array -> fn_flags & ZEND_ACC_PUBLIC ) != 0		3940652	2		=			
ANR	3940698	Identifier	is_public		3940652	0					
ANR	3940699	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_PUBLIC ) != 0		3940652	1		!=			
ANR	3940700	BitAndExpression	op_array -> fn_flags & ZEND_ACC_PUBLIC		3940652	0		&			
ANR	3940701	PtrMemberAccess	op_array -> fn_flags		3940652	0					
ANR	3940702	Identifier	op_array		3940652	0					
ANR	3940703	Identifier	fn_flags		3940652	1					
ANR	3940704	Identifier	ZEND_ACC_PUBLIC		3940652	1					
ANR	3940705	PrimaryExpression	0		3940652	1					
ANR	3940706	IdentifierDeclStatement	zend_bool is_static = ( op_array -> fn_flags & ZEND_ACC_STATIC ) != 0 ;	4625:1:134601:134666	3940652	4	True				
ANR	3940707	IdentifierDecl	is_static = ( op_array -> fn_flags & ZEND_ACC_STATIC ) != 0		3940652	0					
ANR	3940708	IdentifierDeclType	zend_bool		3940652	0					
ANR	3940709	Identifier	is_static		3940652	1					
ANR	3940710	AssignmentExpression	is_static = ( op_array -> fn_flags & ZEND_ACC_STATIC ) != 0		3940652	2		=			
ANR	3940711	Identifier	is_static		3940652	0					
ANR	3940712	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_STATIC ) != 0		3940652	1		!=			
ANR	3940713	BitAndExpression	op_array -> fn_flags & ZEND_ACC_STATIC		3940652	0		&			
ANR	3940714	PtrMemberAccess	op_array -> fn_flags		3940652	0					
ANR	3940715	Identifier	op_array		3940652	0					
ANR	3940716	Identifier	fn_flags		3940652	1					
ANR	3940717	Identifier	ZEND_ACC_STATIC		3940652	1					
ANR	3940718	PrimaryExpression	0		3940652	1					
ANR	3940719	IdentifierDeclStatement	zend_string * lcname ;	4627:1:134670:134689	3940652	5	True				
ANR	3940720	IdentifierDecl	* lcname		3940652	0					
ANR	3940721	IdentifierDeclType	zend_string *		3940652	0					
ANR	3940722	Identifier	lcname		3940652	1					
ANR	3940723	IfStatement	if ( in_interface )		3940652	6					
ANR	3940724	Condition	in_interface	4629:5:134697:134708	3940652	0	True				
ANR	3940725	Identifier	in_interface		3940652	0					
ANR	3940726	CompoundStatement		10:19:356:356	3940652	1					
ANR	3940727	IfStatement	if ( ( op_array -> fn_flags & ZEND_ACC_PPP_MASK ) != ZEND_ACC_PUBLIC )		3940652	0					
ANR	3940728	Condition	( op_array -> fn_flags & ZEND_ACC_PPP_MASK ) != ZEND_ACC_PUBLIC	4630:6:134719:134777	3940652	0	True				
ANR	3940729	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_PPP_MASK ) != ZEND_ACC_PUBLIC		3940652	0		!=			
ANR	3940730	BitAndExpression	op_array -> fn_flags & ZEND_ACC_PPP_MASK		3940652	0		&			
ANR	3940731	PtrMemberAccess	op_array -> fn_flags		3940652	0					
ANR	3940732	Identifier	op_array		3940652	0					
ANR	3940733	Identifier	fn_flags		3940652	1					
ANR	3940734	Identifier	ZEND_ACC_PPP_MASK		3940652	1					
ANR	3940735	Identifier	ZEND_ACC_PUBLIC		3940652	1					
ANR	3940736	CompoundStatement		11:67:425:425	3940652	1					
ANR	3940737	Statement	zend_error_noreturn	4631:3:134785:134803	3940652	0	True				
ANR	3940738	Statement	(	4631:22:134804:134804	3940652	1	True				
ANR	3940739	Statement	E_COMPILE_ERROR	4631:23:134805:134819	3940652	2	True				
ANR	3940740	Statement	","	4631:38:134820:134820	3940652	3	True				
ANR	3940741	Statement	"""Access type for interface method """	4631:40:134822:134856	3940652	4	True				
ANR	3940742	Statement	"""%s::%s() must be omitted"""	4632:4:134862:134887	3940652	5	True				
ANR	3940743	Statement	","	4632:30:134888:134888	3940652	6	True				
ANR	3940744	Statement	ZSTR_VAL	4632:32:134890:134897	3940652	7	True				
ANR	3940745	Statement	(	4632:40:134898:134898	3940652	8	True				
ANR	3940746	Statement	ce	4632:41:134899:134900	3940652	9	True				
ANR	3940747	Statement	->	4632:43:134901:134902	3940652	10	True				
ANR	3940748	Statement	name	4632:45:134903:134906	3940652	11	True				
ANR	3940749	Statement	)	4632:49:134907:134907	3940652	12	True				
ANR	3940750	Statement	","	4632:50:134908:134908	3940652	13	True				
ANR	3940751	Statement	ZSTR_VAL	4632:52:134910:134917	3940652	14	True				
ANR	3940752	Statement	(	4632:60:134918:134918	3940652	15	True				
ANR	3940753	Statement	name	4632:61:134919:134922	3940652	16	True				
ANR	3940754	Statement	)	4632:65:134923:134923	3940652	17	True				
ANR	3940755	Statement	)	4632:66:134924:134924	3940652	18	True				
ANR	3940756	ExpressionStatement		4632:67:134925:134925	3940652	19	True				
ANR	3940757	ExpressionStatement	op_array -> fn_flags |= ZEND_ACC_ABSTRACT	4634:2:134933:134972	3940652	1	True				
ANR	3940758	AssignmentExpression	op_array -> fn_flags |= ZEND_ACC_ABSTRACT		3940652	0		|=			
ANR	3940759	PtrMemberAccess	op_array -> fn_flags		3940652	0					
ANR	3940760	Identifier	op_array		3940652	0					
ANR	3940761	Identifier	fn_flags		3940652	1					
ANR	3940762	Identifier	ZEND_ACC_ABSTRACT		3940652	1					
ANR	3940763	IfStatement	if ( op_array -> fn_flags & ZEND_ACC_ABSTRACT )		3940652	7					
ANR	3940764	Condition	op_array -> fn_flags & ZEND_ACC_ABSTRACT	4637:5:134983:135020	3940652	0	True				
ANR	3940765	BitAndExpression	op_array -> fn_flags & ZEND_ACC_ABSTRACT		3940652	0		&			
ANR	3940766	PtrMemberAccess	op_array -> fn_flags		3940652	0					
ANR	3940767	Identifier	op_array		3940652	0					
ANR	3940768	Identifier	fn_flags		3940652	1					
ANR	3940769	Identifier	ZEND_ACC_ABSTRACT		3940652	1					
ANR	3940770	CompoundStatement		18:45:668:668	3940652	1					
ANR	3940771	IfStatement	if ( op_array -> fn_flags & ZEND_ACC_PRIVATE )		3940652	0					
ANR	3940772	Condition	op_array -> fn_flags & ZEND_ACC_PRIVATE	4638:6:135031:135067	3940652	0	True				
ANR	3940773	BitAndExpression	op_array -> fn_flags & ZEND_ACC_PRIVATE		3940652	0		&			
ANR	3940774	PtrMemberAccess	op_array -> fn_flags		3940652	0					
ANR	3940775	Identifier	op_array		3940652	0					
ANR	3940776	Identifier	fn_flags		3940652	1					
ANR	3940777	Identifier	ZEND_ACC_PRIVATE		3940652	1					
ANR	3940778	CompoundStatement		19:45:715:715	3940652	1					
ANR	3940779	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s function %s::%s() cannot be declared private"" , in_interface ? ""Interface"" : ""Abstract"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4639:3:135075:135243	3940652	0	True				
ANR	3940780	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s function %s::%s() cannot be declared private"" , in_interface ? ""Interface"" : ""Abstract"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		3940652	0					
ANR	3940781	Callee	zend_error_noreturn		3940652	0					
ANR	3940782	Identifier	zend_error_noreturn		3940652	0					
ANR	3940783	ArgumentList	E_COMPILE_ERROR		3940652	1					
ANR	3940784	Argument	E_COMPILE_ERROR		3940652	0					
ANR	3940785	Identifier	E_COMPILE_ERROR		3940652	0					
ANR	3940786	Argument	"""%s function %s::%s() cannot be declared private"""		3940652	1					
ANR	3940787	PrimaryExpression	"""%s function %s::%s() cannot be declared private"""		3940652	0					
ANR	3940788	Argument	"in_interface ? ""Interface"" : ""Abstract"""		3940652	2					
ANR	3940789	ConditionalExpression	"in_interface ? ""Interface"" : ""Abstract"""		3940652	0					
ANR	3940790	Condition	in_interface		3940652	0					
ANR	3940791	Identifier	in_interface		3940652	0					
ANR	3940792	PrimaryExpression	"""Interface"""		3940652	1					
ANR	3940793	PrimaryExpression	"""Abstract"""		3940652	2					
ANR	3940794	Argument	ZSTR_VAL ( ce -> name )		3940652	3					
ANR	3940795	CallExpression	ZSTR_VAL ( ce -> name )		3940652	0					
ANR	3940796	Callee	ZSTR_VAL		3940652	0					
ANR	3940797	Identifier	ZSTR_VAL		3940652	0					
ANR	3940798	ArgumentList	ce -> name		3940652	1					
ANR	3940799	Argument	ce -> name		3940652	0					
ANR	3940800	PtrMemberAccess	ce -> name		3940652	0					
ANR	3940801	Identifier	ce		3940652	0					
ANR	3940802	Identifier	name		3940652	1					
ANR	3940803	Argument	ZSTR_VAL ( name )		3940652	4					
ANR	3940804	CallExpression	ZSTR_VAL ( name )		3940652	0					
ANR	3940805	Callee	ZSTR_VAL		3940652	0					
ANR	3940806	Identifier	ZSTR_VAL		3940652	0					
ANR	3940807	ArgumentList	name		3940652	1					
ANR	3940808	Argument	name		3940652	0					
ANR	3940809	Identifier	name		3940652	0					
ANR	3940810	IfStatement	if ( has_body )		3940652	1					
ANR	3940811	Condition	has_body	4643:6:135256:135263	3940652	0	True				
ANR	3940812	Identifier	has_body		3940652	0					
ANR	3940813	CompoundStatement		24:16:911:911	3940652	1					
ANR	3940814	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s function %s::%s() cannot contain body"" , in_interface ? ""Interface"" : ""Abstract"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4644:3:135271:135432	3940652	0	True				
ANR	3940815	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s function %s::%s() cannot contain body"" , in_interface ? ""Interface"" : ""Abstract"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		3940652	0					
ANR	3940816	Callee	zend_error_noreturn		3940652	0					
ANR	3940817	Identifier	zend_error_noreturn		3940652	0					
ANR	3940818	ArgumentList	E_COMPILE_ERROR		3940652	1					
ANR	3940819	Argument	E_COMPILE_ERROR		3940652	0					
ANR	3940820	Identifier	E_COMPILE_ERROR		3940652	0					
ANR	3940821	Argument	"""%s function %s::%s() cannot contain body"""		3940652	1					
ANR	3940822	PrimaryExpression	"""%s function %s::%s() cannot contain body"""		3940652	0					
ANR	3940823	Argument	"in_interface ? ""Interface"" : ""Abstract"""		3940652	2					
ANR	3940824	ConditionalExpression	"in_interface ? ""Interface"" : ""Abstract"""		3940652	0					
ANR	3940825	Condition	in_interface		3940652	0					
ANR	3940826	Identifier	in_interface		3940652	0					
ANR	3940827	PrimaryExpression	"""Interface"""		3940652	1					
ANR	3940828	PrimaryExpression	"""Abstract"""		3940652	2					
ANR	3940829	Argument	ZSTR_VAL ( ce -> name )		3940652	3					
ANR	3940830	CallExpression	ZSTR_VAL ( ce -> name )		3940652	0					
ANR	3940831	Callee	ZSTR_VAL		3940652	0					
ANR	3940832	Identifier	ZSTR_VAL		3940652	0					
ANR	3940833	ArgumentList	ce -> name		3940652	1					
ANR	3940834	Argument	ce -> name		3940652	0					
ANR	3940835	PtrMemberAccess	ce -> name		3940652	0					
ANR	3940836	Identifier	ce		3940652	0					
ANR	3940837	Identifier	name		3940652	1					
ANR	3940838	Argument	ZSTR_VAL ( name )		3940652	4					
ANR	3940839	CallExpression	ZSTR_VAL ( name )		3940652	0					
ANR	3940840	Callee	ZSTR_VAL		3940652	0					
ANR	3940841	Identifier	ZSTR_VAL		3940652	0					
ANR	3940842	ArgumentList	name		3940652	1					
ANR	3940843	Argument	name		3940652	0					
ANR	3940844	Identifier	name		3940652	0					
ANR	3940845	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	4648:2:135441:135489	3940652	2	True				
ANR	3940846	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3940652	0		|=			
ANR	3940847	PtrMemberAccess	ce -> ce_flags		3940652	0					
ANR	3940848	Identifier	ce		3940652	0					
ANR	3940849	Identifier	ce_flags		3940652	1					
ANR	3940850	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3940652	1					
ANR	3940851	ElseStatement	else		3940652	0					
ANR	3940852	IfStatement	if ( ! has_body )		3940652	0					
ANR	3940853	Condition	! has_body	4649:12:135503:135511	3940652	0	True				
ANR	3940854	UnaryOperationExpression	! has_body		3940652	0					
ANR	3940855	UnaryOperator	!		3940652	0					
ANR	3940856	Identifier	has_body		3940652	1					
ANR	3940857	CompoundStatement		30:23:1159:1159	3940652	1					
ANR	3940858	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Non-abstract method %s::%s() must contain body"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4650:2:135518:135643	3940652	0	True				
ANR	3940859	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Non-abstract method %s::%s() must contain body"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		3940652	0					
ANR	3940860	Callee	zend_error_noreturn		3940652	0					
ANR	3940861	Identifier	zend_error_noreturn		3940652	0					
ANR	3940862	ArgumentList	E_COMPILE_ERROR		3940652	1					
ANR	3940863	Argument	E_COMPILE_ERROR		3940652	0					
ANR	3940864	Identifier	E_COMPILE_ERROR		3940652	0					
ANR	3940865	Argument	"""Non-abstract method %s::%s() must contain body"""		3940652	1					
ANR	3940866	PrimaryExpression	"""Non-abstract method %s::%s() must contain body"""		3940652	0					
ANR	3940867	Argument	ZSTR_VAL ( ce -> name )		3940652	2					
ANR	3940868	CallExpression	ZSTR_VAL ( ce -> name )		3940652	0					
ANR	3940869	Callee	ZSTR_VAL		3940652	0					
ANR	3940870	Identifier	ZSTR_VAL		3940652	0					
ANR	3940871	ArgumentList	ce -> name		3940652	1					
ANR	3940872	Argument	ce -> name		3940652	0					
ANR	3940873	PtrMemberAccess	ce -> name		3940652	0					
ANR	3940874	Identifier	ce		3940652	0					
ANR	3940875	Identifier	name		3940652	1					
ANR	3940876	Argument	ZSTR_VAL ( name )		3940652	3					
ANR	3940877	CallExpression	ZSTR_VAL ( name )		3940652	0					
ANR	3940878	Callee	ZSTR_VAL		3940652	0					
ANR	3940879	Identifier	ZSTR_VAL		3940652	0					
ANR	3940880	ArgumentList	name		3940652	1					
ANR	3940881	Argument	name		3940652	0					
ANR	3940882	Identifier	name		3940652	0					
ANR	3940883	ExpressionStatement	op_array -> scope = ce	4654:1:135650:135670	3940652	8	True				
ANR	3940884	AssignmentExpression	op_array -> scope = ce		3940652	0		=			
ANR	3940885	PtrMemberAccess	op_array -> scope		3940652	0					
ANR	3940886	Identifier	op_array		3940652	0					
ANR	3940887	Identifier	scope		3940652	1					
ANR	3940888	Identifier	ce		3940652	1					
ANR	3940889	ExpressionStatement	op_array -> function_name = zend_string_copy ( name )	4655:1:135673:135721	3940652	9	True				
ANR	3940890	AssignmentExpression	op_array -> function_name = zend_string_copy ( name )		3940652	0		=			
ANR	3940891	PtrMemberAccess	op_array -> function_name		3940652	0					
ANR	3940892	Identifier	op_array		3940652	0					
ANR	3940893	Identifier	function_name		3940652	1					
ANR	3940894	CallExpression	zend_string_copy ( name )		3940652	1					
ANR	3940895	Callee	zend_string_copy		3940652	0					
ANR	3940896	Identifier	zend_string_copy		3940652	0					
ANR	3940897	ArgumentList	name		3940652	1					
ANR	3940898	Argument	name		3940652	0					
ANR	3940899	Identifier	name		3940652	0					
ANR	3940900	ExpressionStatement	lcname = zend_string_tolower ( name )	4657:1:135725:135759	3940652	10	True				
ANR	3940901	AssignmentExpression	lcname = zend_string_tolower ( name )		3940652	0		=			
ANR	3940902	Identifier	lcname		3940652	0					
ANR	3940903	CallExpression	zend_string_tolower ( name )		3940652	1					
ANR	3940904	Callee	zend_string_tolower		3940652	0					
ANR	3940905	Identifier	zend_string_tolower		3940652	0					
ANR	3940906	ArgumentList	name		3940652	1					
ANR	3940907	Argument	name		3940652	0					
ANR	3940908	Identifier	name		3940652	0					
ANR	3940909	ExpressionStatement	lcname = zend_new_interned_string ( lcname )	4658:1:135762:135803	3940652	11	True				
ANR	3940910	AssignmentExpression	lcname = zend_new_interned_string ( lcname )		3940652	0		=			
ANR	3940911	Identifier	lcname		3940652	0					
ANR	3940912	CallExpression	zend_new_interned_string ( lcname )		3940652	1					
ANR	3940913	Callee	zend_new_interned_string		3940652	0					
ANR	3940914	Identifier	zend_new_interned_string		3940652	0					
ANR	3940915	ArgumentList	lcname		3940652	1					
ANR	3940916	Argument	lcname		3940652	0					
ANR	3940917	Identifier	lcname		3940652	0					
ANR	3940918	IfStatement	"if ( zend_hash_add_ptr ( & ce -> function_table , lcname , op_array ) == NULL )"		3940652	12					
ANR	3940919	Condition	"zend_hash_add_ptr ( & ce -> function_table , lcname , op_array ) == NULL"	4660:5:135811:135874	3940652	0	True				
ANR	3940920	EqualityExpression	"zend_hash_add_ptr ( & ce -> function_table , lcname , op_array ) == NULL"		3940652	0		==			
ANR	3940921	CallExpression	"zend_hash_add_ptr ( & ce -> function_table , lcname , op_array )"		3940652	0					
ANR	3940922	Callee	zend_hash_add_ptr		3940652	0					
ANR	3940923	Identifier	zend_hash_add_ptr		3940652	0					
ANR	3940924	ArgumentList	& ce -> function_table		3940652	1					
ANR	3940925	Argument	& ce -> function_table		3940652	0					
ANR	3940926	UnaryOperationExpression	& ce -> function_table		3940652	0					
ANR	3940927	UnaryOperator	&		3940652	0					
ANR	3940928	PtrMemberAccess	ce -> function_table		3940652	1					
ANR	3940929	Identifier	ce		3940652	0					
ANR	3940930	Identifier	function_table		3940652	1					
ANR	3940931	Argument	lcname		3940652	1					
ANR	3940932	Identifier	lcname		3940652	0					
ANR	3940933	Argument	op_array		3940652	2					
ANR	3940934	Identifier	op_array		3940652	0					
ANR	3940935	Identifier	NULL		3940652	1					
ANR	3940936	CompoundStatement		41:71:1522:1522	3940652	1					
ANR	3940937	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s::%s()"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4661:2:135881:135985	3940652	0	True				
ANR	3940938	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s::%s()"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		3940652	0					
ANR	3940939	Callee	zend_error_noreturn		3940652	0					
ANR	3940940	Identifier	zend_error_noreturn		3940652	0					
ANR	3940941	ArgumentList	E_COMPILE_ERROR		3940652	1					
ANR	3940942	Argument	E_COMPILE_ERROR		3940652	0					
ANR	3940943	Identifier	E_COMPILE_ERROR		3940652	0					
ANR	3940944	Argument	"""Cannot redeclare %s::%s()"""		3940652	1					
ANR	3940945	PrimaryExpression	"""Cannot redeclare %s::%s()"""		3940652	0					
ANR	3940946	Argument	ZSTR_VAL ( ce -> name )		3940652	2					
ANR	3940947	CallExpression	ZSTR_VAL ( ce -> name )		3940652	0					
ANR	3940948	Callee	ZSTR_VAL		3940652	0					
ANR	3940949	Identifier	ZSTR_VAL		3940652	0					
ANR	3940950	ArgumentList	ce -> name		3940652	1					
ANR	3940951	Argument	ce -> name		3940652	0					
ANR	3940952	PtrMemberAccess	ce -> name		3940652	0					
ANR	3940953	Identifier	ce		3940652	0					
ANR	3940954	Identifier	name		3940652	1					
ANR	3940955	Argument	ZSTR_VAL ( name )		3940652	3					
ANR	3940956	CallExpression	ZSTR_VAL ( name )		3940652	0					
ANR	3940957	Callee	ZSTR_VAL		3940652	0					
ANR	3940958	Identifier	ZSTR_VAL		3940652	0					
ANR	3940959	ArgumentList	name		3940652	1					
ANR	3940960	Argument	name		3940652	0					
ANR	3940961	Identifier	name		3940652	0					
ANR	3940962	IfStatement	if ( in_interface )		3940652	13					
ANR	3940963	Condition	in_interface	4665:5:135996:136007	3940652	0	True				
ANR	3940964	Identifier	in_interface		3940652	0					
ANR	3940965	CompoundStatement		46:19:1655:1655	3940652	1					
ANR	3940966	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_CALL_FUNC_NAME ) )"		3940652	0					
ANR	3940967	Condition	"zend_string_equals_literal ( lcname , ZEND_CALL_FUNC_NAME )"	4666:6:136018:136072	3940652	0	True				
ANR	3940968	CallExpression	"zend_string_equals_literal ( lcname , ZEND_CALL_FUNC_NAME )"		3940652	0					
ANR	3940969	Callee	zend_string_equals_literal		3940652	0					
ANR	3940970	Identifier	zend_string_equals_literal		3940652	0					
ANR	3940971	ArgumentList	lcname		3940652	1					
ANR	3940972	Argument	lcname		3940652	0					
ANR	3940973	Identifier	lcname		3940652	0					
ANR	3940974	Argument	ZEND_CALL_FUNC_NAME		3940652	1					
ANR	3940975	Identifier	ZEND_CALL_FUNC_NAME		3940652	0					
ANR	3940976	CompoundStatement		47:63:1720:1720	3940652	1					
ANR	3940977	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3940978	Condition	! is_public || is_static	4667:7:136084:136106	3940652	0	True				
ANR	3940979	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3940980	UnaryOperationExpression	! is_public		3940652	0					
ANR	3940981	UnaryOperator	!		3940652	0					
ANR	3940982	Identifier	is_public		3940652	1					
ANR	3940983	Identifier	is_static		3940652	1					
ANR	3940984	CompoundStatement		48:32:1754:1754	3940652	1					
ANR	3940985	Statement	zend_error	4668:4:136115:136124	3940652	0	True				
ANR	3940986	Statement	(	4668:14:136125:136125	3940652	1	True				
ANR	3940987	Statement	E_WARNING	4668:15:136126:136134	3940652	2	True				
ANR	3940988	Statement	","	4668:24:136135:136135	3940652	3	True				
ANR	3940989	Statement	"""The magic method __call() must have """	4668:26:136137:136174	3940652	4	True				
ANR	3940990	Statement	"""public visibility and cannot be static"""	4669:5:136181:136220	3940652	5	True				
ANR	3940991	Statement	)	4669:45:136221:136221	3940652	6	True				
ANR	3940992	ExpressionStatement		4669:46:136222:136222	3940652	7	True				
ANR	3940993	ElseStatement	else		3940652	0					
ANR	3940994	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_CALLSTATIC_FUNC_NAME ) )"		3940652	0					
ANR	3940995	Condition	"zend_string_equals_literal ( lcname , ZEND_CALLSTATIC_FUNC_NAME )"	4671:13:136242:136302	3940652	0	True				
ANR	3940996	CallExpression	"zend_string_equals_literal ( lcname , ZEND_CALLSTATIC_FUNC_NAME )"		3940652	0					
ANR	3940997	Callee	zend_string_equals_literal		3940652	0					
ANR	3940998	Identifier	zend_string_equals_literal		3940652	0					
ANR	3940999	ArgumentList	lcname		3940652	1					
ANR	3941000	Argument	lcname		3940652	0					
ANR	3941001	Identifier	lcname		3940652	0					
ANR	3941002	Argument	ZEND_CALLSTATIC_FUNC_NAME		3940652	1					
ANR	3941003	Identifier	ZEND_CALLSTATIC_FUNC_NAME		3940652	0					
ANR	3941004	CompoundStatement		52:76:1950:1950	3940652	1					
ANR	3941005	IfStatement	if ( ! is_public || ! is_static )		3940652	0					
ANR	3941006	Condition	! is_public || ! is_static	4672:7:136314:136337	3940652	0	True				
ANR	3941007	OrExpression	! is_public || ! is_static		3940652	0		||			
ANR	3941008	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941009	UnaryOperator	!		3940652	0					
ANR	3941010	Identifier	is_public		3940652	1					
ANR	3941011	UnaryOperationExpression	! is_static		3940652	1					
ANR	3941012	UnaryOperator	!		3940652	0					
ANR	3941013	Identifier	is_static		3940652	1					
ANR	3941014	CompoundStatement		53:33:1985:1985	3940652	1					
ANR	3941015	Statement	zend_error	4673:4:136346:136355	3940652	0	True				
ANR	3941016	Statement	(	4673:14:136356:136356	3940652	1	True				
ANR	3941017	Statement	E_WARNING	4673:15:136357:136365	3940652	2	True				
ANR	3941018	Statement	","	4673:24:136366:136366	3940652	3	True				
ANR	3941019	Statement	"""The magic method __callStatic() must have """	4673:26:136368:136411	3940652	4	True				
ANR	3941020	Statement	"""public visibility and be static"""	4674:5:136418:136450	3940652	5	True				
ANR	3941021	Statement	)	4674:38:136451:136451	3940652	6	True				
ANR	3941022	ExpressionStatement		4674:39:136452:136452	3940652	7	True				
ANR	3941023	ElseStatement	else		3940652	0					
ANR	3941024	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_GET_FUNC_NAME ) )"		3940652	0					
ANR	3941025	Condition	"zend_string_equals_literal ( lcname , ZEND_GET_FUNC_NAME )"	4676:13:136472:136525	3940652	0	True				
ANR	3941026	CallExpression	"zend_string_equals_literal ( lcname , ZEND_GET_FUNC_NAME )"		3940652	0					
ANR	3941027	Callee	zend_string_equals_literal		3940652	0					
ANR	3941028	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941029	ArgumentList	lcname		3940652	1					
ANR	3941030	Argument	lcname		3940652	0					
ANR	3941031	Identifier	lcname		3940652	0					
ANR	3941032	Argument	ZEND_GET_FUNC_NAME		3940652	1					
ANR	3941033	Identifier	ZEND_GET_FUNC_NAME		3940652	0					
ANR	3941034	CompoundStatement		57:69:2173:2173	3940652	1					
ANR	3941035	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941036	Condition	! is_public || is_static	4677:7:136537:136559	3940652	0	True				
ANR	3941037	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941038	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941039	UnaryOperator	!		3940652	0					
ANR	3941040	Identifier	is_public		3940652	1					
ANR	3941041	Identifier	is_static		3940652	1					
ANR	3941042	CompoundStatement		58:32:2207:2207	3940652	1					
ANR	3941043	Statement	zend_error	4678:4:136568:136577	3940652	0	True				
ANR	3941044	Statement	(	4678:14:136578:136578	3940652	1	True				
ANR	3941045	Statement	E_WARNING	4678:15:136579:136587	3940652	2	True				
ANR	3941046	Statement	","	4678:24:136588:136588	3940652	3	True				
ANR	3941047	Statement	"""The magic method __get() must have """	4678:26:136590:136626	3940652	4	True				
ANR	3941048	Statement	"""public visibility and cannot be static"""	4679:5:136633:136672	3940652	5	True				
ANR	3941049	Statement	)	4679:45:136673:136673	3940652	6	True				
ANR	3941050	ExpressionStatement		4679:46:136674:136674	3940652	7	True				
ANR	3941051	ElseStatement	else		3940652	0					
ANR	3941052	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_SET_FUNC_NAME ) )"		3940652	0					
ANR	3941053	Condition	"zend_string_equals_literal ( lcname , ZEND_SET_FUNC_NAME )"	4681:13:136694:136747	3940652	0	True				
ANR	3941054	CallExpression	"zend_string_equals_literal ( lcname , ZEND_SET_FUNC_NAME )"		3940652	0					
ANR	3941055	Callee	zend_string_equals_literal		3940652	0					
ANR	3941056	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941057	ArgumentList	lcname		3940652	1					
ANR	3941058	Argument	lcname		3940652	0					
ANR	3941059	Identifier	lcname		3940652	0					
ANR	3941060	Argument	ZEND_SET_FUNC_NAME		3940652	1					
ANR	3941061	Identifier	ZEND_SET_FUNC_NAME		3940652	0					
ANR	3941062	CompoundStatement		62:69:2395:2395	3940652	1					
ANR	3941063	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941064	Condition	! is_public || is_static	4682:7:136759:136781	3940652	0	True				
ANR	3941065	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941066	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941067	UnaryOperator	!		3940652	0					
ANR	3941068	Identifier	is_public		3940652	1					
ANR	3941069	Identifier	is_static		3940652	1					
ANR	3941070	CompoundStatement		63:32:2429:2429	3940652	1					
ANR	3941071	Statement	zend_error	4683:4:136790:136799	3940652	0	True				
ANR	3941072	Statement	(	4683:14:136800:136800	3940652	1	True				
ANR	3941073	Statement	E_WARNING	4683:15:136801:136809	3940652	2	True				
ANR	3941074	Statement	","	4683:24:136810:136810	3940652	3	True				
ANR	3941075	Statement	"""The magic method __set() must have """	4683:26:136812:136848	3940652	4	True				
ANR	3941076	Statement	"""public visibility and cannot be static"""	4684:5:136855:136894	3940652	5	True				
ANR	3941077	Statement	)	4684:45:136895:136895	3940652	6	True				
ANR	3941078	ExpressionStatement		4684:46:136896:136896	3940652	7	True				
ANR	3941079	ElseStatement	else		3940652	0					
ANR	3941080	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_UNSET_FUNC_NAME ) )"		3940652	0					
ANR	3941081	Condition	"zend_string_equals_literal ( lcname , ZEND_UNSET_FUNC_NAME )"	4686:13:136916:136971	3940652	0	True				
ANR	3941082	CallExpression	"zend_string_equals_literal ( lcname , ZEND_UNSET_FUNC_NAME )"		3940652	0					
ANR	3941083	Callee	zend_string_equals_literal		3940652	0					
ANR	3941084	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941085	ArgumentList	lcname		3940652	1					
ANR	3941086	Argument	lcname		3940652	0					
ANR	3941087	Identifier	lcname		3940652	0					
ANR	3941088	Argument	ZEND_UNSET_FUNC_NAME		3940652	1					
ANR	3941089	Identifier	ZEND_UNSET_FUNC_NAME		3940652	0					
ANR	3941090	CompoundStatement		67:71:2619:2619	3940652	1					
ANR	3941091	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941092	Condition	! is_public || is_static	4687:7:136983:137005	3940652	0	True				
ANR	3941093	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941094	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941095	UnaryOperator	!		3940652	0					
ANR	3941096	Identifier	is_public		3940652	1					
ANR	3941097	Identifier	is_static		3940652	1					
ANR	3941098	CompoundStatement		68:32:2653:2653	3940652	1					
ANR	3941099	Statement	zend_error	4688:4:137014:137023	3940652	0	True				
ANR	3941100	Statement	(	4688:14:137024:137024	3940652	1	True				
ANR	3941101	Statement	E_WARNING	4688:15:137025:137033	3940652	2	True				
ANR	3941102	Statement	","	4688:24:137034:137034	3940652	3	True				
ANR	3941103	Statement	"""The magic method __unset() must have """	4688:26:137036:137074	3940652	4	True				
ANR	3941104	Statement	"""public visibility and cannot be static"""	4689:5:137081:137120	3940652	5	True				
ANR	3941105	Statement	)	4689:45:137121:137121	3940652	6	True				
ANR	3941106	ExpressionStatement		4689:46:137122:137122	3940652	7	True				
ANR	3941107	ElseStatement	else		3940652	0					
ANR	3941108	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_ISSET_FUNC_NAME ) )"		3940652	0					
ANR	3941109	Condition	"zend_string_equals_literal ( lcname , ZEND_ISSET_FUNC_NAME )"	4691:13:137142:137197	3940652	0	True				
ANR	3941110	CallExpression	"zend_string_equals_literal ( lcname , ZEND_ISSET_FUNC_NAME )"		3940652	0					
ANR	3941111	Callee	zend_string_equals_literal		3940652	0					
ANR	3941112	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941113	ArgumentList	lcname		3940652	1					
ANR	3941114	Argument	lcname		3940652	0					
ANR	3941115	Identifier	lcname		3940652	0					
ANR	3941116	Argument	ZEND_ISSET_FUNC_NAME		3940652	1					
ANR	3941117	Identifier	ZEND_ISSET_FUNC_NAME		3940652	0					
ANR	3941118	CompoundStatement		72:71:2845:2845	3940652	1					
ANR	3941119	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941120	Condition	! is_public || is_static	4692:7:137209:137231	3940652	0	True				
ANR	3941121	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941122	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941123	UnaryOperator	!		3940652	0					
ANR	3941124	Identifier	is_public		3940652	1					
ANR	3941125	Identifier	is_static		3940652	1					
ANR	3941126	CompoundStatement		73:32:2879:2879	3940652	1					
ANR	3941127	Statement	zend_error	4693:4:137240:137249	3940652	0	True				
ANR	3941128	Statement	(	4693:14:137250:137250	3940652	1	True				
ANR	3941129	Statement	E_WARNING	4693:15:137251:137259	3940652	2	True				
ANR	3941130	Statement	","	4693:24:137260:137260	3940652	3	True				
ANR	3941131	Statement	"""The magic method __isset() must have """	4693:26:137262:137300	3940652	4	True				
ANR	3941132	Statement	"""public visibility and cannot be static"""	4694:5:137307:137346	3940652	5	True				
ANR	3941133	Statement	)	4694:45:137347:137347	3940652	6	True				
ANR	3941134	ExpressionStatement		4694:46:137348:137348	3940652	7	True				
ANR	3941135	ElseStatement	else		3940652	0					
ANR	3941136	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_TOSTRING_FUNC_NAME ) )"		3940652	0					
ANR	3941137	Condition	"zend_string_equals_literal ( lcname , ZEND_TOSTRING_FUNC_NAME )"	4696:13:137368:137426	3940652	0	True				
ANR	3941138	CallExpression	"zend_string_equals_literal ( lcname , ZEND_TOSTRING_FUNC_NAME )"		3940652	0					
ANR	3941139	Callee	zend_string_equals_literal		3940652	0					
ANR	3941140	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941141	ArgumentList	lcname		3940652	1					
ANR	3941142	Argument	lcname		3940652	0					
ANR	3941143	Identifier	lcname		3940652	0					
ANR	3941144	Argument	ZEND_TOSTRING_FUNC_NAME		3940652	1					
ANR	3941145	Identifier	ZEND_TOSTRING_FUNC_NAME		3940652	0					
ANR	3941146	CompoundStatement		77:74:3074:3074	3940652	1					
ANR	3941147	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941148	Condition	! is_public || is_static	4697:7:137438:137460	3940652	0	True				
ANR	3941149	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941150	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941151	UnaryOperator	!		3940652	0					
ANR	3941152	Identifier	is_public		3940652	1					
ANR	3941153	Identifier	is_static		3940652	1					
ANR	3941154	CompoundStatement		78:32:3108:3108	3940652	1					
ANR	3941155	Statement	zend_error	4698:4:137469:137478	3940652	0	True				
ANR	3941156	Statement	(	4698:14:137479:137479	3940652	1	True				
ANR	3941157	Statement	E_WARNING	4698:15:137480:137488	3940652	2	True				
ANR	3941158	Statement	","	4698:24:137489:137489	3940652	3	True				
ANR	3941159	Statement	"""The magic method __toString() must have """	4698:26:137491:137532	3940652	4	True				
ANR	3941160	Statement	"""public visibility and cannot be static"""	4699:5:137539:137578	3940652	5	True				
ANR	3941161	Statement	)	4699:45:137579:137579	3940652	6	True				
ANR	3941162	ExpressionStatement		4699:46:137580:137580	3940652	7	True				
ANR	3941163	ElseStatement	else		3940652	0					
ANR	3941164	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_INVOKE_FUNC_NAME ) )"		3940652	0					
ANR	3941165	Condition	"zend_string_equals_literal ( lcname , ZEND_INVOKE_FUNC_NAME )"	4701:13:137600:137656	3940652	0	True				
ANR	3941166	CallExpression	"zend_string_equals_literal ( lcname , ZEND_INVOKE_FUNC_NAME )"		3940652	0					
ANR	3941167	Callee	zend_string_equals_literal		3940652	0					
ANR	3941168	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941169	ArgumentList	lcname		3940652	1					
ANR	3941170	Argument	lcname		3940652	0					
ANR	3941171	Identifier	lcname		3940652	0					
ANR	3941172	Argument	ZEND_INVOKE_FUNC_NAME		3940652	1					
ANR	3941173	Identifier	ZEND_INVOKE_FUNC_NAME		3940652	0					
ANR	3941174	CompoundStatement		82:72:3304:3304	3940652	1					
ANR	3941175	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941176	Condition	! is_public || is_static	4702:7:137668:137690	3940652	0	True				
ANR	3941177	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941178	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941179	UnaryOperator	!		3940652	0					
ANR	3941180	Identifier	is_public		3940652	1					
ANR	3941181	Identifier	is_static		3940652	1					
ANR	3941182	CompoundStatement		83:32:3338:3338	3940652	1					
ANR	3941183	Statement	zend_error	4703:4:137699:137708	3940652	0	True				
ANR	3941184	Statement	(	4703:14:137709:137709	3940652	1	True				
ANR	3941185	Statement	E_WARNING	4703:15:137710:137718	3940652	2	True				
ANR	3941186	Statement	","	4703:24:137719:137719	3940652	3	True				
ANR	3941187	Statement	"""The magic method __invoke() must have """	4703:26:137721:137760	3940652	4	True				
ANR	3941188	Statement	"""public visibility and cannot be static"""	4704:5:137767:137806	3940652	5	True				
ANR	3941189	Statement	)	4704:45:137807:137807	3940652	6	True				
ANR	3941190	ExpressionStatement		4704:46:137808:137808	3940652	7	True				
ANR	3941191	ElseStatement	else		3940652	0					
ANR	3941192	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_DEBUGINFO_FUNC_NAME ) )"		3940652	0					
ANR	3941193	Condition	"zend_string_equals_literal ( lcname , ZEND_DEBUGINFO_FUNC_NAME )"	4706:13:137828:137887	3940652	0	True				
ANR	3941194	CallExpression	"zend_string_equals_literal ( lcname , ZEND_DEBUGINFO_FUNC_NAME )"		3940652	0					
ANR	3941195	Callee	zend_string_equals_literal		3940652	0					
ANR	3941196	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941197	ArgumentList	lcname		3940652	1					
ANR	3941198	Argument	lcname		3940652	0					
ANR	3941199	Identifier	lcname		3940652	0					
ANR	3941200	Argument	ZEND_DEBUGINFO_FUNC_NAME		3940652	1					
ANR	3941201	Identifier	ZEND_DEBUGINFO_FUNC_NAME		3940652	0					
ANR	3941202	CompoundStatement		87:75:3535:3535	3940652	1					
ANR	3941203	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941204	Condition	! is_public || is_static	4707:7:137899:137921	3940652	0	True				
ANR	3941205	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941206	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941207	UnaryOperator	!		3940652	0					
ANR	3941208	Identifier	is_public		3940652	1					
ANR	3941209	Identifier	is_static		3940652	1					
ANR	3941210	CompoundStatement		88:32:3569:3569	3940652	1					
ANR	3941211	Statement	zend_error	4708:4:137930:137939	3940652	0	True				
ANR	3941212	Statement	(	4708:14:137940:137940	3940652	1	True				
ANR	3941213	Statement	E_WARNING	4708:15:137941:137949	3940652	2	True				
ANR	3941214	Statement	","	4708:24:137950:137950	3940652	3	True				
ANR	3941215	Statement	"""The magic method __debugInfo() must have """	4708:26:137952:137994	3940652	4	True				
ANR	3941216	Statement	"""public visibility and cannot be static"""	4709:5:138001:138040	3940652	5	True				
ANR	3941217	Statement	)	4709:45:138041:138041	3940652	6	True				
ANR	3941218	ExpressionStatement		4709:46:138042:138042	3940652	7	True				
ANR	3941219	ElseStatement	else		3940652	0					
ANR	3941220	CompoundStatement		93:8:3706:3706	3940652	0					
ANR	3941221	IfStatement	"if ( ! in_trait && zend_string_equals_ci ( lcname , ce -> name ) )"		3940652	0					
ANR	3941222	Condition	"! in_trait && zend_string_equals_ci ( lcname , ce -> name )"	4713:6:138069:138120	3940652	0	True				
ANR	3941223	AndExpression	"! in_trait && zend_string_equals_ci ( lcname , ce -> name )"		3940652	0		&&			
ANR	3941224	UnaryOperationExpression	! in_trait		3940652	0					
ANR	3941225	UnaryOperator	!		3940652	0					
ANR	3941226	Identifier	in_trait		3940652	1					
ANR	3941227	CallExpression	"zend_string_equals_ci ( lcname , ce -> name )"		3940652	1					
ANR	3941228	Callee	zend_string_equals_ci		3940652	0					
ANR	3941229	Identifier	zend_string_equals_ci		3940652	0					
ANR	3941230	ArgumentList	lcname		3940652	1					
ANR	3941231	Argument	lcname		3940652	0					
ANR	3941232	Identifier	lcname		3940652	0					
ANR	3941233	Argument	ce -> name		3940652	1					
ANR	3941234	PtrMemberAccess	ce -> name		3940652	0					
ANR	3941235	Identifier	ce		3940652	0					
ANR	3941236	Identifier	name		3940652	1					
ANR	3941237	CompoundStatement		94:60:3768:3768	3940652	1					
ANR	3941238	IfStatement	if ( ! ce -> constructor )		3940652	0					
ANR	3941239	Condition	! ce -> constructor	4714:7:138132:138147	3940652	0	True				
ANR	3941240	UnaryOperationExpression	! ce -> constructor		3940652	0					
ANR	3941241	UnaryOperator	!		3940652	0					
ANR	3941242	PtrMemberAccess	ce -> constructor		3940652	1					
ANR	3941243	Identifier	ce		3940652	0					
ANR	3941244	Identifier	constructor		3940652	1					
ANR	3941245	CompoundStatement		95:25:3795:3795	3940652	1					
ANR	3941246	ExpressionStatement	ce -> constructor = ( zend_function * ) op_array	4715:4:138156:138200	3940652	0	True				
ANR	3941247	AssignmentExpression	ce -> constructor = ( zend_function * ) op_array		3940652	0		=			
ANR	3941248	PtrMemberAccess	ce -> constructor		3940652	0					
ANR	3941249	Identifier	ce		3940652	0					
ANR	3941250	Identifier	constructor		3940652	1					
ANR	3941251	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941252	CastTarget	zend_function *		3940652	0					
ANR	3941253	Identifier	op_array		3940652	1					
ANR	3941254	ElseStatement	else		3940652	0					
ANR	3941255	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_CONSTRUCTOR_FUNC_NAME ) )"		3940652	0					
ANR	3941256	Condition	"zend_string_equals_literal ( lcname , ZEND_CONSTRUCTOR_FUNC_NAME )"	4717:13:138220:138281	3940652	0	True				
ANR	3941257	CallExpression	"zend_string_equals_literal ( lcname , ZEND_CONSTRUCTOR_FUNC_NAME )"		3940652	0					
ANR	3941258	Callee	zend_string_equals_literal		3940652	0					
ANR	3941259	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941260	ArgumentList	lcname		3940652	1					
ANR	3941261	Argument	lcname		3940652	0					
ANR	3941262	Identifier	lcname		3940652	0					
ANR	3941263	Argument	ZEND_CONSTRUCTOR_FUNC_NAME		3940652	1					
ANR	3941264	Identifier	ZEND_CONSTRUCTOR_FUNC_NAME		3940652	0					
ANR	3941265	CompoundStatement		98:77:3929:3929	3940652	1					
ANR	3941266	ExpressionStatement	ce -> constructor = ( zend_function * ) op_array	4718:3:138289:138333	3940652	0	True				
ANR	3941267	AssignmentExpression	ce -> constructor = ( zend_function * ) op_array		3940652	0		=			
ANR	3941268	PtrMemberAccess	ce -> constructor		3940652	0					
ANR	3941269	Identifier	ce		3940652	0					
ANR	3941270	Identifier	constructor		3940652	1					
ANR	3941271	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941272	CastTarget	zend_function *		3940652	0					
ANR	3941273	Identifier	op_array		3940652	1					
ANR	3941274	ElseStatement	else		3940652	0					
ANR	3941275	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_DESTRUCTOR_FUNC_NAME ) )"		3940652	0					
ANR	3941276	Condition	"zend_string_equals_literal ( lcname , ZEND_DESTRUCTOR_FUNC_NAME )"	4719:13:138348:138408	3940652	0	True				
ANR	3941277	CallExpression	"zend_string_equals_literal ( lcname , ZEND_DESTRUCTOR_FUNC_NAME )"		3940652	0					
ANR	3941278	Callee	zend_string_equals_literal		3940652	0					
ANR	3941279	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941280	ArgumentList	lcname		3940652	1					
ANR	3941281	Argument	lcname		3940652	0					
ANR	3941282	Identifier	lcname		3940652	0					
ANR	3941283	Argument	ZEND_DESTRUCTOR_FUNC_NAME		3940652	1					
ANR	3941284	Identifier	ZEND_DESTRUCTOR_FUNC_NAME		3940652	0					
ANR	3941285	CompoundStatement		100:76:4056:4056	3940652	1					
ANR	3941286	ExpressionStatement	ce -> destructor = ( zend_function * ) op_array	4720:3:138416:138459	3940652	0	True				
ANR	3941287	AssignmentExpression	ce -> destructor = ( zend_function * ) op_array		3940652	0		=			
ANR	3941288	PtrMemberAccess	ce -> destructor		3940652	0					
ANR	3941289	Identifier	ce		3940652	0					
ANR	3941290	Identifier	destructor		3940652	1					
ANR	3941291	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941292	CastTarget	zend_function *		3940652	0					
ANR	3941293	Identifier	op_array		3940652	1					
ANR	3941294	ElseStatement	else		3940652	0					
ANR	3941295	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_CLONE_FUNC_NAME ) )"		3940652	0					
ANR	3941296	Condition	"zend_string_equals_literal ( lcname , ZEND_CLONE_FUNC_NAME )"	4721:13:138474:138529	3940652	0	True				
ANR	3941297	CallExpression	"zend_string_equals_literal ( lcname , ZEND_CLONE_FUNC_NAME )"		3940652	0					
ANR	3941298	Callee	zend_string_equals_literal		3940652	0					
ANR	3941299	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941300	ArgumentList	lcname		3940652	1					
ANR	3941301	Argument	lcname		3940652	0					
ANR	3941302	Identifier	lcname		3940652	0					
ANR	3941303	Argument	ZEND_CLONE_FUNC_NAME		3940652	1					
ANR	3941304	Identifier	ZEND_CLONE_FUNC_NAME		3940652	0					
ANR	3941305	CompoundStatement		102:71:4177:4177	3940652	1					
ANR	3941306	ExpressionStatement	ce -> clone = ( zend_function * ) op_array	4722:3:138537:138575	3940652	0	True				
ANR	3941307	AssignmentExpression	ce -> clone = ( zend_function * ) op_array		3940652	0		=			
ANR	3941308	PtrMemberAccess	ce -> clone		3940652	0					
ANR	3941309	Identifier	ce		3940652	0					
ANR	3941310	Identifier	clone		3940652	1					
ANR	3941311	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941312	CastTarget	zend_function *		3940652	0					
ANR	3941313	Identifier	op_array		3940652	1					
ANR	3941314	ElseStatement	else		3940652	0					
ANR	3941315	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_CALL_FUNC_NAME ) )"		3940652	0					
ANR	3941316	Condition	"zend_string_equals_literal ( lcname , ZEND_CALL_FUNC_NAME )"	4723:13:138590:138644	3940652	0	True				
ANR	3941317	CallExpression	"zend_string_equals_literal ( lcname , ZEND_CALL_FUNC_NAME )"		3940652	0					
ANR	3941318	Callee	zend_string_equals_literal		3940652	0					
ANR	3941319	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941320	ArgumentList	lcname		3940652	1					
ANR	3941321	Argument	lcname		3940652	0					
ANR	3941322	Identifier	lcname		3940652	0					
ANR	3941323	Argument	ZEND_CALL_FUNC_NAME		3940652	1					
ANR	3941324	Identifier	ZEND_CALL_FUNC_NAME		3940652	0					
ANR	3941325	CompoundStatement		104:70:4292:4292	3940652	1					
ANR	3941326	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941327	Condition	! is_public || is_static	4724:7:138656:138678	3940652	0	True				
ANR	3941328	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941329	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941330	UnaryOperator	!		3940652	0					
ANR	3941331	Identifier	is_public		3940652	1					
ANR	3941332	Identifier	is_static		3940652	1					
ANR	3941333	CompoundStatement		105:32:4326:4326	3940652	1					
ANR	3941334	Statement	zend_error	4725:4:138687:138696	3940652	0	True				
ANR	3941335	Statement	(	4725:14:138697:138697	3940652	1	True				
ANR	3941336	Statement	E_WARNING	4725:15:138698:138706	3940652	2	True				
ANR	3941337	Statement	","	4725:24:138707:138707	3940652	3	True				
ANR	3941338	Statement	"""The magic method __call() must have """	4725:26:138709:138746	3940652	4	True				
ANR	3941339	Statement	"""public visibility and cannot be static"""	4726:5:138753:138792	3940652	5	True				
ANR	3941340	Statement	)	4726:45:138793:138793	3940652	6	True				
ANR	3941341	ExpressionStatement		4726:46:138794:138794	3940652	7	True				
ANR	3941342	ExpressionStatement	ce -> __call = ( zend_function * ) op_array	4728:3:138804:138843	3940652	1	True				
ANR	3941343	AssignmentExpression	ce -> __call = ( zend_function * ) op_array		3940652	0		=			
ANR	3941344	PtrMemberAccess	ce -> __call		3940652	0					
ANR	3941345	Identifier	ce		3940652	0					
ANR	3941346	Identifier	__call		3940652	1					
ANR	3941347	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941348	CastTarget	zend_function *		3940652	0					
ANR	3941349	Identifier	op_array		3940652	1					
ANR	3941350	ElseStatement	else		3940652	0					
ANR	3941351	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_CALLSTATIC_FUNC_NAME ) )"		3940652	0					
ANR	3941352	Condition	"zend_string_equals_literal ( lcname , ZEND_CALLSTATIC_FUNC_NAME )"	4729:13:138858:138918	3940652	0	True				
ANR	3941353	CallExpression	"zend_string_equals_literal ( lcname , ZEND_CALLSTATIC_FUNC_NAME )"		3940652	0					
ANR	3941354	Callee	zend_string_equals_literal		3940652	0					
ANR	3941355	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941356	ArgumentList	lcname		3940652	1					
ANR	3941357	Argument	lcname		3940652	0					
ANR	3941358	Identifier	lcname		3940652	0					
ANR	3941359	Argument	ZEND_CALLSTATIC_FUNC_NAME		3940652	1					
ANR	3941360	Identifier	ZEND_CALLSTATIC_FUNC_NAME		3940652	0					
ANR	3941361	CompoundStatement		110:76:4566:4566	3940652	1					
ANR	3941362	IfStatement	if ( ! is_public || ! is_static )		3940652	0					
ANR	3941363	Condition	! is_public || ! is_static	4730:7:138930:138953	3940652	0	True				
ANR	3941364	OrExpression	! is_public || ! is_static		3940652	0		||			
ANR	3941365	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941366	UnaryOperator	!		3940652	0					
ANR	3941367	Identifier	is_public		3940652	1					
ANR	3941368	UnaryOperationExpression	! is_static		3940652	1					
ANR	3941369	UnaryOperator	!		3940652	0					
ANR	3941370	Identifier	is_static		3940652	1					
ANR	3941371	CompoundStatement		111:33:4601:4601	3940652	1					
ANR	3941372	Statement	zend_error	4731:4:138962:138971	3940652	0	True				
ANR	3941373	Statement	(	4731:14:138972:138972	3940652	1	True				
ANR	3941374	Statement	E_WARNING	4731:15:138973:138981	3940652	2	True				
ANR	3941375	Statement	","	4731:24:138982:138982	3940652	3	True				
ANR	3941376	Statement	"""The magic method __callStatic() must have """	4731:26:138984:139027	3940652	4	True				
ANR	3941377	Statement	"""public visibility and be static"""	4732:5:139034:139066	3940652	5	True				
ANR	3941378	Statement	)	4732:38:139067:139067	3940652	6	True				
ANR	3941379	ExpressionStatement		4732:39:139068:139068	3940652	7	True				
ANR	3941380	ExpressionStatement	ce -> __callstatic = ( zend_function * ) op_array	4734:3:139078:139123	3940652	1	True				
ANR	3941381	AssignmentExpression	ce -> __callstatic = ( zend_function * ) op_array		3940652	0		=			
ANR	3941382	PtrMemberAccess	ce -> __callstatic		3940652	0					
ANR	3941383	Identifier	ce		3940652	0					
ANR	3941384	Identifier	__callstatic		3940652	1					
ANR	3941385	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941386	CastTarget	zend_function *		3940652	0					
ANR	3941387	Identifier	op_array		3940652	1					
ANR	3941388	ElseStatement	else		3940652	0					
ANR	3941389	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_GET_FUNC_NAME ) )"		3940652	0					
ANR	3941390	Condition	"zend_string_equals_literal ( lcname , ZEND_GET_FUNC_NAME )"	4735:13:139138:139191	3940652	0	True				
ANR	3941391	CallExpression	"zend_string_equals_literal ( lcname , ZEND_GET_FUNC_NAME )"		3940652	0					
ANR	3941392	Callee	zend_string_equals_literal		3940652	0					
ANR	3941393	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941394	ArgumentList	lcname		3940652	1					
ANR	3941395	Argument	lcname		3940652	0					
ANR	3941396	Identifier	lcname		3940652	0					
ANR	3941397	Argument	ZEND_GET_FUNC_NAME		3940652	1					
ANR	3941398	Identifier	ZEND_GET_FUNC_NAME		3940652	0					
ANR	3941399	CompoundStatement		116:69:4839:4839	3940652	1					
ANR	3941400	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941401	Condition	! is_public || is_static	4736:7:139203:139225	3940652	0	True				
ANR	3941402	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941403	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941404	UnaryOperator	!		3940652	0					
ANR	3941405	Identifier	is_public		3940652	1					
ANR	3941406	Identifier	is_static		3940652	1					
ANR	3941407	CompoundStatement		117:32:4873:4873	3940652	1					
ANR	3941408	Statement	zend_error	4737:4:139234:139243	3940652	0	True				
ANR	3941409	Statement	(	4737:14:139244:139244	3940652	1	True				
ANR	3941410	Statement	E_WARNING	4737:15:139245:139253	3940652	2	True				
ANR	3941411	Statement	","	4737:24:139254:139254	3940652	3	True				
ANR	3941412	Statement	"""The magic method __get() must have """	4737:26:139256:139292	3940652	4	True				
ANR	3941413	Statement	"""public visibility and cannot be static"""	4738:5:139299:139338	3940652	5	True				
ANR	3941414	Statement	)	4738:45:139339:139339	3940652	6	True				
ANR	3941415	ExpressionStatement		4738:46:139340:139340	3940652	7	True				
ANR	3941416	ExpressionStatement	ce -> __get = ( zend_function * ) op_array	4740:3:139350:139388	3940652	1	True				
ANR	3941417	AssignmentExpression	ce -> __get = ( zend_function * ) op_array		3940652	0		=			
ANR	3941418	PtrMemberAccess	ce -> __get		3940652	0					
ANR	3941419	Identifier	ce		3940652	0					
ANR	3941420	Identifier	__get		3940652	1					
ANR	3941421	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941422	CastTarget	zend_function *		3940652	0					
ANR	3941423	Identifier	op_array		3940652	1					
ANR	3941424	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	4741:3:139393:139428	3940652	2	True				
ANR	3941425	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		3940652	0		|=			
ANR	3941426	PtrMemberAccess	ce -> ce_flags		3940652	0					
ANR	3941427	Identifier	ce		3940652	0					
ANR	3941428	Identifier	ce_flags		3940652	1					
ANR	3941429	Identifier	ZEND_ACC_USE_GUARDS		3940652	1					
ANR	3941430	ElseStatement	else		3940652	0					
ANR	3941431	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_SET_FUNC_NAME ) )"		3940652	0					
ANR	3941432	Condition	"zend_string_equals_literal ( lcname , ZEND_SET_FUNC_NAME )"	4742:13:139443:139496	3940652	0	True				
ANR	3941433	CallExpression	"zend_string_equals_literal ( lcname , ZEND_SET_FUNC_NAME )"		3940652	0					
ANR	3941434	Callee	zend_string_equals_literal		3940652	0					
ANR	3941435	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941436	ArgumentList	lcname		3940652	1					
ANR	3941437	Argument	lcname		3940652	0					
ANR	3941438	Identifier	lcname		3940652	0					
ANR	3941439	Argument	ZEND_SET_FUNC_NAME		3940652	1					
ANR	3941440	Identifier	ZEND_SET_FUNC_NAME		3940652	0					
ANR	3941441	CompoundStatement		123:69:5144:5144	3940652	1					
ANR	3941442	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941443	Condition	! is_public || is_static	4743:7:139508:139530	3940652	0	True				
ANR	3941444	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941445	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941446	UnaryOperator	!		3940652	0					
ANR	3941447	Identifier	is_public		3940652	1					
ANR	3941448	Identifier	is_static		3940652	1					
ANR	3941449	CompoundStatement		124:32:5178:5178	3940652	1					
ANR	3941450	Statement	zend_error	4744:4:139539:139548	3940652	0	True				
ANR	3941451	Statement	(	4744:14:139549:139549	3940652	1	True				
ANR	3941452	Statement	E_WARNING	4744:15:139550:139558	3940652	2	True				
ANR	3941453	Statement	","	4744:24:139559:139559	3940652	3	True				
ANR	3941454	Statement	"""The magic method __set() must have """	4744:26:139561:139597	3940652	4	True				
ANR	3941455	Statement	"""public visibility and cannot be static"""	4745:5:139604:139643	3940652	5	True				
ANR	3941456	Statement	)	4745:45:139644:139644	3940652	6	True				
ANR	3941457	ExpressionStatement		4745:46:139645:139645	3940652	7	True				
ANR	3941458	ExpressionStatement	ce -> __set = ( zend_function * ) op_array	4747:3:139655:139693	3940652	1	True				
ANR	3941459	AssignmentExpression	ce -> __set = ( zend_function * ) op_array		3940652	0		=			
ANR	3941460	PtrMemberAccess	ce -> __set		3940652	0					
ANR	3941461	Identifier	ce		3940652	0					
ANR	3941462	Identifier	__set		3940652	1					
ANR	3941463	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941464	CastTarget	zend_function *		3940652	0					
ANR	3941465	Identifier	op_array		3940652	1					
ANR	3941466	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	4748:3:139698:139733	3940652	2	True				
ANR	3941467	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		3940652	0		|=			
ANR	3941468	PtrMemberAccess	ce -> ce_flags		3940652	0					
ANR	3941469	Identifier	ce		3940652	0					
ANR	3941470	Identifier	ce_flags		3940652	1					
ANR	3941471	Identifier	ZEND_ACC_USE_GUARDS		3940652	1					
ANR	3941472	ElseStatement	else		3940652	0					
ANR	3941473	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_UNSET_FUNC_NAME ) )"		3940652	0					
ANR	3941474	Condition	"zend_string_equals_literal ( lcname , ZEND_UNSET_FUNC_NAME )"	4749:13:139748:139803	3940652	0	True				
ANR	3941475	CallExpression	"zend_string_equals_literal ( lcname , ZEND_UNSET_FUNC_NAME )"		3940652	0					
ANR	3941476	Callee	zend_string_equals_literal		3940652	0					
ANR	3941477	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941478	ArgumentList	lcname		3940652	1					
ANR	3941479	Argument	lcname		3940652	0					
ANR	3941480	Identifier	lcname		3940652	0					
ANR	3941481	Argument	ZEND_UNSET_FUNC_NAME		3940652	1					
ANR	3941482	Identifier	ZEND_UNSET_FUNC_NAME		3940652	0					
ANR	3941483	CompoundStatement		130:71:5451:5451	3940652	1					
ANR	3941484	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941485	Condition	! is_public || is_static	4750:7:139815:139837	3940652	0	True				
ANR	3941486	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941487	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941488	UnaryOperator	!		3940652	0					
ANR	3941489	Identifier	is_public		3940652	1					
ANR	3941490	Identifier	is_static		3940652	1					
ANR	3941491	CompoundStatement		131:32:5485:5485	3940652	1					
ANR	3941492	Statement	zend_error	4751:4:139846:139855	3940652	0	True				
ANR	3941493	Statement	(	4751:14:139856:139856	3940652	1	True				
ANR	3941494	Statement	E_WARNING	4751:15:139857:139865	3940652	2	True				
ANR	3941495	Statement	","	4751:24:139866:139866	3940652	3	True				
ANR	3941496	Statement	"""The magic method __unset() must have """	4751:26:139868:139906	3940652	4	True				
ANR	3941497	Statement	"""public visibility and cannot be static"""	4752:5:139913:139952	3940652	5	True				
ANR	3941498	Statement	)	4752:45:139953:139953	3940652	6	True				
ANR	3941499	ExpressionStatement		4752:46:139954:139954	3940652	7	True				
ANR	3941500	ExpressionStatement	ce -> __unset = ( zend_function * ) op_array	4754:3:139964:140004	3940652	1	True				
ANR	3941501	AssignmentExpression	ce -> __unset = ( zend_function * ) op_array		3940652	0		=			
ANR	3941502	PtrMemberAccess	ce -> __unset		3940652	0					
ANR	3941503	Identifier	ce		3940652	0					
ANR	3941504	Identifier	__unset		3940652	1					
ANR	3941505	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941506	CastTarget	zend_function *		3940652	0					
ANR	3941507	Identifier	op_array		3940652	1					
ANR	3941508	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	4755:3:140009:140044	3940652	2	True				
ANR	3941509	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		3940652	0		|=			
ANR	3941510	PtrMemberAccess	ce -> ce_flags		3940652	0					
ANR	3941511	Identifier	ce		3940652	0					
ANR	3941512	Identifier	ce_flags		3940652	1					
ANR	3941513	Identifier	ZEND_ACC_USE_GUARDS		3940652	1					
ANR	3941514	ElseStatement	else		3940652	0					
ANR	3941515	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_ISSET_FUNC_NAME ) )"		3940652	0					
ANR	3941516	Condition	"zend_string_equals_literal ( lcname , ZEND_ISSET_FUNC_NAME )"	4756:13:140059:140114	3940652	0	True				
ANR	3941517	CallExpression	"zend_string_equals_literal ( lcname , ZEND_ISSET_FUNC_NAME )"		3940652	0					
ANR	3941518	Callee	zend_string_equals_literal		3940652	0					
ANR	3941519	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941520	ArgumentList	lcname		3940652	1					
ANR	3941521	Argument	lcname		3940652	0					
ANR	3941522	Identifier	lcname		3940652	0					
ANR	3941523	Argument	ZEND_ISSET_FUNC_NAME		3940652	1					
ANR	3941524	Identifier	ZEND_ISSET_FUNC_NAME		3940652	0					
ANR	3941525	CompoundStatement		137:71:5762:5762	3940652	1					
ANR	3941526	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941527	Condition	! is_public || is_static	4757:7:140126:140148	3940652	0	True				
ANR	3941528	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941529	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941530	UnaryOperator	!		3940652	0					
ANR	3941531	Identifier	is_public		3940652	1					
ANR	3941532	Identifier	is_static		3940652	1					
ANR	3941533	CompoundStatement		138:32:5796:5796	3940652	1					
ANR	3941534	Statement	zend_error	4758:4:140157:140166	3940652	0	True				
ANR	3941535	Statement	(	4758:14:140167:140167	3940652	1	True				
ANR	3941536	Statement	E_WARNING	4758:15:140168:140176	3940652	2	True				
ANR	3941537	Statement	","	4758:24:140177:140177	3940652	3	True				
ANR	3941538	Statement	"""The magic method __isset() must have """	4758:26:140179:140217	3940652	4	True				
ANR	3941539	Statement	"""public visibility and cannot be static"""	4759:5:140224:140263	3940652	5	True				
ANR	3941540	Statement	)	4759:45:140264:140264	3940652	6	True				
ANR	3941541	ExpressionStatement		4759:46:140265:140265	3940652	7	True				
ANR	3941542	ExpressionStatement	ce -> __isset = ( zend_function * ) op_array	4761:3:140275:140315	3940652	1	True				
ANR	3941543	AssignmentExpression	ce -> __isset = ( zend_function * ) op_array		3940652	0		=			
ANR	3941544	PtrMemberAccess	ce -> __isset		3940652	0					
ANR	3941545	Identifier	ce		3940652	0					
ANR	3941546	Identifier	__isset		3940652	1					
ANR	3941547	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941548	CastTarget	zend_function *		3940652	0					
ANR	3941549	Identifier	op_array		3940652	1					
ANR	3941550	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	4762:3:140320:140355	3940652	2	True				
ANR	3941551	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		3940652	0		|=			
ANR	3941552	PtrMemberAccess	ce -> ce_flags		3940652	0					
ANR	3941553	Identifier	ce		3940652	0					
ANR	3941554	Identifier	ce_flags		3940652	1					
ANR	3941555	Identifier	ZEND_ACC_USE_GUARDS		3940652	1					
ANR	3941556	ElseStatement	else		3940652	0					
ANR	3941557	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_TOSTRING_FUNC_NAME ) )"		3940652	0					
ANR	3941558	Condition	"zend_string_equals_literal ( lcname , ZEND_TOSTRING_FUNC_NAME )"	4763:13:140370:140428	3940652	0	True				
ANR	3941559	CallExpression	"zend_string_equals_literal ( lcname , ZEND_TOSTRING_FUNC_NAME )"		3940652	0					
ANR	3941560	Callee	zend_string_equals_literal		3940652	0					
ANR	3941561	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941562	ArgumentList	lcname		3940652	1					
ANR	3941563	Argument	lcname		3940652	0					
ANR	3941564	Identifier	lcname		3940652	0					
ANR	3941565	Argument	ZEND_TOSTRING_FUNC_NAME		3940652	1					
ANR	3941566	Identifier	ZEND_TOSTRING_FUNC_NAME		3940652	0					
ANR	3941567	CompoundStatement		144:74:6076:6076	3940652	1					
ANR	3941568	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941569	Condition	! is_public || is_static	4764:7:140440:140462	3940652	0	True				
ANR	3941570	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941571	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941572	UnaryOperator	!		3940652	0					
ANR	3941573	Identifier	is_public		3940652	1					
ANR	3941574	Identifier	is_static		3940652	1					
ANR	3941575	CompoundStatement		145:32:6110:6110	3940652	1					
ANR	3941576	Statement	zend_error	4765:4:140471:140480	3940652	0	True				
ANR	3941577	Statement	(	4765:14:140481:140481	3940652	1	True				
ANR	3941578	Statement	E_WARNING	4765:15:140482:140490	3940652	2	True				
ANR	3941579	Statement	","	4765:24:140491:140491	3940652	3	True				
ANR	3941580	Statement	"""The magic method __toString() must have """	4765:26:140493:140534	3940652	4	True				
ANR	3941581	Statement	"""public visibility and cannot be static"""	4766:5:140541:140580	3940652	5	True				
ANR	3941582	Statement	)	4766:45:140581:140581	3940652	6	True				
ANR	3941583	ExpressionStatement		4766:46:140582:140582	3940652	7	True				
ANR	3941584	ExpressionStatement	ce -> __tostring = ( zend_function * ) op_array	4768:3:140592:140635	3940652	1	True				
ANR	3941585	AssignmentExpression	ce -> __tostring = ( zend_function * ) op_array		3940652	0		=			
ANR	3941586	PtrMemberAccess	ce -> __tostring		3940652	0					
ANR	3941587	Identifier	ce		3940652	0					
ANR	3941588	Identifier	__tostring		3940652	1					
ANR	3941589	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941590	CastTarget	zend_function *		3940652	0					
ANR	3941591	Identifier	op_array		3940652	1					
ANR	3941592	ElseStatement	else		3940652	0					
ANR	3941593	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_INVOKE_FUNC_NAME ) )"		3940652	0					
ANR	3941594	Condition	"zend_string_equals_literal ( lcname , ZEND_INVOKE_FUNC_NAME )"	4769:13:140650:140706	3940652	0	True				
ANR	3941595	CallExpression	"zend_string_equals_literal ( lcname , ZEND_INVOKE_FUNC_NAME )"		3940652	0					
ANR	3941596	Callee	zend_string_equals_literal		3940652	0					
ANR	3941597	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941598	ArgumentList	lcname		3940652	1					
ANR	3941599	Argument	lcname		3940652	0					
ANR	3941600	Identifier	lcname		3940652	0					
ANR	3941601	Argument	ZEND_INVOKE_FUNC_NAME		3940652	1					
ANR	3941602	Identifier	ZEND_INVOKE_FUNC_NAME		3940652	0					
ANR	3941603	CompoundStatement		150:72:6354:6354	3940652	1					
ANR	3941604	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941605	Condition	! is_public || is_static	4770:7:140718:140740	3940652	0	True				
ANR	3941606	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941607	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941608	UnaryOperator	!		3940652	0					
ANR	3941609	Identifier	is_public		3940652	1					
ANR	3941610	Identifier	is_static		3940652	1					
ANR	3941611	CompoundStatement		151:32:6388:6388	3940652	1					
ANR	3941612	Statement	zend_error	4771:4:140749:140758	3940652	0	True				
ANR	3941613	Statement	(	4771:14:140759:140759	3940652	1	True				
ANR	3941614	Statement	E_WARNING	4771:15:140760:140768	3940652	2	True				
ANR	3941615	Statement	","	4771:24:140769:140769	3940652	3	True				
ANR	3941616	Statement	"""The magic method __invoke() must have """	4771:26:140771:140810	3940652	4	True				
ANR	3941617	Statement	"""public visibility and cannot be static"""	4772:5:140817:140856	3940652	5	True				
ANR	3941618	Statement	)	4772:45:140857:140857	3940652	6	True				
ANR	3941619	ExpressionStatement		4772:46:140858:140858	3940652	7	True				
ANR	3941620	ElseStatement	else		3940652	0					
ANR	3941621	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_DEBUGINFO_FUNC_NAME ) )"		3940652	0					
ANR	3941622	Condition	"zend_string_equals_literal ( lcname , ZEND_DEBUGINFO_FUNC_NAME )"	4774:13:140878:140937	3940652	0	True				
ANR	3941623	CallExpression	"zend_string_equals_literal ( lcname , ZEND_DEBUGINFO_FUNC_NAME )"		3940652	0					
ANR	3941624	Callee	zend_string_equals_literal		3940652	0					
ANR	3941625	Identifier	zend_string_equals_literal		3940652	0					
ANR	3941626	ArgumentList	lcname		3940652	1					
ANR	3941627	Argument	lcname		3940652	0					
ANR	3941628	Identifier	lcname		3940652	0					
ANR	3941629	Argument	ZEND_DEBUGINFO_FUNC_NAME		3940652	1					
ANR	3941630	Identifier	ZEND_DEBUGINFO_FUNC_NAME		3940652	0					
ANR	3941631	CompoundStatement		155:75:6585:6585	3940652	1					
ANR	3941632	IfStatement	if ( ! is_public || is_static )		3940652	0					
ANR	3941633	Condition	! is_public || is_static	4775:7:140949:140971	3940652	0	True				
ANR	3941634	OrExpression	! is_public || is_static		3940652	0		||			
ANR	3941635	UnaryOperationExpression	! is_public		3940652	0					
ANR	3941636	UnaryOperator	!		3940652	0					
ANR	3941637	Identifier	is_public		3940652	1					
ANR	3941638	Identifier	is_static		3940652	1					
ANR	3941639	CompoundStatement		156:32:6619:6619	3940652	1					
ANR	3941640	Statement	zend_error	4776:4:140980:140989	3940652	0	True				
ANR	3941641	Statement	(	4776:14:140990:140990	3940652	1	True				
ANR	3941642	Statement	E_WARNING	4776:15:140991:140999	3940652	2	True				
ANR	3941643	Statement	","	4776:24:141000:141000	3940652	3	True				
ANR	3941644	Statement	"""The magic method __debugInfo() must have """	4776:26:141002:141044	3940652	4	True				
ANR	3941645	Statement	"""public visibility and cannot be static"""	4777:5:141051:141090	3940652	5	True				
ANR	3941646	Statement	)	4777:45:141091:141091	3940652	6	True				
ANR	3941647	ExpressionStatement		4777:46:141092:141092	3940652	7	True				
ANR	3941648	ExpressionStatement	ce -> __debugInfo = ( zend_function * ) op_array	4779:3:141102:141146	3940652	1	True				
ANR	3941649	AssignmentExpression	ce -> __debugInfo = ( zend_function * ) op_array		3940652	0		=			
ANR	3941650	PtrMemberAccess	ce -> __debugInfo		3940652	0					
ANR	3941651	Identifier	ce		3940652	0					
ANR	3941652	Identifier	__debugInfo		3940652	1					
ANR	3941653	CastExpression	( zend_function * ) op_array		3940652	1					
ANR	3941654	CastTarget	zend_function *		3940652	0					
ANR	3941655	Identifier	op_array		3940652	1					
ANR	3941656	ElseStatement	else		3940652	0					
ANR	3941657	IfStatement	if ( ! is_static )		3940652	0					
ANR	3941658	Condition	! is_static	4780:13:141161:141170	3940652	0	True				
ANR	3941659	UnaryOperationExpression	! is_static		3940652	0					
ANR	3941660	UnaryOperator	!		3940652	0					
ANR	3941661	Identifier	is_static		3940652	1					
ANR	3941662	CompoundStatement		161:25:6818:6818	3940652	1					
ANR	3941663	ExpressionStatement	op_array -> fn_flags |= ZEND_ACC_ALLOW_STATIC	4781:3:141178:141221	3940652	0	True				
ANR	3941664	AssignmentExpression	op_array -> fn_flags |= ZEND_ACC_ALLOW_STATIC		3940652	0		|=			
ANR	3941665	PtrMemberAccess	op_array -> fn_flags		3940652	0					
ANR	3941666	Identifier	op_array		3940652	0					
ANR	3941667	Identifier	fn_flags		3940652	1					
ANR	3941668	Identifier	ZEND_ACC_ALLOW_STATIC		3940652	1					
ANR	3941669	ExpressionStatement	zend_string_release ( lcname )	4785:1:141232:141259	3940652	14	True				
ANR	3941670	CallExpression	zend_string_release ( lcname )		3940652	0					
ANR	3941671	Callee	zend_string_release		3940652	0					
ANR	3941672	Identifier	zend_string_release		3940652	0					
ANR	3941673	ArgumentList	lcname		3940652	1					
ANR	3941674	Argument	lcname		3940652	0					
ANR	3941675	Identifier	lcname		3940652	0					
ANR	3941676	ReturnType	void		3940652	1					
ANR	3941677	Identifier	zend_begin_method_decl		3940652	2					
ANR	3941678	ParameterList	"zend_op_array * op_array , zend_string * name , zend_bool has_body"		3940652	3					
ANR	3941679	Parameter	zend_op_array * op_array	4619:28:134280:134302	3940652	0	True				
ANR	3941680	ParameterType	zend_op_array *		3940652	0					
ANR	3941681	Identifier	op_array		3940652	1					
ANR	3941682	Parameter	zend_string * name	4619:53:134305:134321	3940652	1	True				
ANR	3941683	ParameterType	zend_string *		3940652	0					
ANR	3941684	Identifier	name		3940652	1					
ANR	3941685	Parameter	zend_bool has_body	4619:72:134324:134341	3940652	2	True				
ANR	3941686	ParameterType	zend_bool		3940652	0					
ANR	3941687	Identifier	has_body		3940652	1					
ANR	3941688	CFGEntryNode	ENTRY		3940652		True				
ANR	3941689	CFGExitNode	EXIT		3940652		True				
ANR	3941690	Symbol	zend_string_equals_literal		3940652						
ANR	3941691	Symbol	ce -> __set		3940652						
ANR	3941692	Symbol	ZEND_CALLSTATIC_FUNC_NAME		3940652						
ANR	3941693	Symbol	active_class_entry		3940652						
ANR	3941694	Symbol	E_COMPILE_ERROR		3940652						
ANR	3941695	Symbol	ZEND_CONSTRUCTOR_FUNC_NAME		3940652						
ANR	3941696	Symbol	ZEND_ACC_USE_GUARDS		3940652						
ANR	3941697	Symbol	in_trait		3940652						
ANR	3941698	Symbol	* ce		3940652						
ANR	3941699	Symbol	zend_string_tolower		3940652						
ANR	3941700	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3940652						
ANR	3941701	Symbol	ce -> __tostring		3940652						
ANR	3941702	Symbol	op_array -> fn_flags		3940652						
ANR	3941703	Symbol	ZEND_CLONE_FUNC_NAME		3940652						
ANR	3941704	Symbol	ce -> __get		3940652						
ANR	3941705	Symbol	ZEND_ISSET_FUNC_NAME		3940652						
ANR	3941706	Symbol	ZEND_ACC_INTERFACE		3940652						
ANR	3941707	Symbol	ce -> name		3940652						
ANR	3941708	Symbol	ce -> __callstatic		3940652						
ANR	3941709	Symbol	NULL		3940652						
ANR	3941710	Symbol	ce -> destructor		3940652						
ANR	3941711	Symbol	ce -> __isset		3940652						
ANR	3941712	Symbol	zend_string_copy		3940652						
ANR	3941713	Symbol	* op_array		3940652						
ANR	3941714	Symbol	ZEND_ACC_TRAIT		3940652						
ANR	3941715	Symbol	ce -> ce_flags		3940652						
ANR	3941716	Symbol	ce -> __debugInfo		3940652						
ANR	3941717	Symbol	ce -> __call		3940652						
ANR	3941718	Symbol	name		3940652						
ANR	3941719	Symbol	ZEND_TOSTRING_FUNC_NAME		3940652						
ANR	3941720	Symbol	ZEND_DESTRUCTOR_FUNC_NAME		3940652						
ANR	3941721	Symbol	zend_hash_add_ptr		3940652						
ANR	3941722	Symbol	ce -> clone		3940652						
ANR	3941723	Symbol	ZEND_ACC_ALLOW_STATIC		3940652						
ANR	3941724	Symbol	ZEND_UNSET_FUNC_NAME		3940652						
ANR	3941725	Symbol	ZEND_INVOKE_FUNC_NAME		3940652						
ANR	3941726	Symbol	ZEND_ACC_PPP_MASK		3940652						
ANR	3941727	Symbol	zend_string_equals_ci		3940652						
ANR	3941728	Symbol	ZEND_ACC_PUBLIC		3940652						
ANR	3941729	Symbol	in_interface		3940652						
ANR	3941730	Symbol	& ce -> function_table		3940652						
ANR	3941731	Symbol	ZEND_GET_FUNC_NAME		3940652						
ANR	3941732	Symbol	ZEND_DEBUGINFO_FUNC_NAME		3940652						
ANR	3941733	Symbol	ZEND_CALL_FUNC_NAME		3940652						
ANR	3941734	Symbol	is_static		3940652						
ANR	3941735	Symbol	ZEND_ACC_STATIC		3940652						
ANR	3941736	Symbol	ZEND_SET_FUNC_NAME		3940652						
ANR	3941737	Symbol	ce		3940652						
ANR	3941738	Symbol	ce -> constructor		3940652						
ANR	3941739	Symbol	CG		3940652						
ANR	3941740	Symbol	op_array -> scope		3940652						
ANR	3941741	Symbol	ZEND_ACC_PRIVATE		3940652						
ANR	3941742	Symbol	ZSTR_VAL		3940652						
ANR	3941743	Symbol	op_array -> function_name		3940652						
ANR	3941744	Symbol	ZEND_ACC_ABSTRACT		3940652						
ANR	3941745	Symbol	ce -> __unset		3940652						
ANR	3941746	Symbol	lcname		3940652						
ANR	3941747	Symbol	zend_new_interned_string		3940652						
ANR	3941748	Symbol	is_public		3940652						
ANR	3941749	Symbol	has_body		3940652						
ANR	3941750	Symbol	op_array		3940652						
ANR	3941751	Function	zend_begin_func_decl	4789:0:141274:142675							
ANR	3941752	FunctionDef	"zend_begin_func_decl (znode * result , zend_op_array * op_array , zend_ast_decl * decl)"		3941751	0					
ANR	3941753	CompoundStatement		4790:0:141378:142675	3941751	0					
ANR	3941754	IdentifierDeclStatement	zend_ast * params_ast = decl -> child [ 0 ] ;	4791:1:141381:141418	3941751	0	True				
ANR	3941755	IdentifierDecl	* params_ast = decl -> child [ 0 ]		3941751	0					
ANR	3941756	IdentifierDeclType	zend_ast *		3941751	0					
ANR	3941757	Identifier	params_ast		3941751	1					
ANR	3941758	AssignmentExpression	* params_ast = decl -> child [ 0 ]		3941751	2		=			
ANR	3941759	Identifier	params_ast		3941751	0					
ANR	3941760	ArrayIndexing	decl -> child [ 0 ]		3941751	1					
ANR	3941761	PtrMemberAccess	decl -> child		3941751	0					
ANR	3941762	Identifier	decl		3941751	0					
ANR	3941763	Identifier	child		3941751	1					
ANR	3941764	PrimaryExpression	0		3941751	1					
ANR	3941765	IdentifierDeclStatement	"zend_string * name = decl -> name , * lcname ;"	4792:1:141421:141460	3941751	1	True				
ANR	3941766	IdentifierDecl	* name = decl -> name		3941751	0					
ANR	3941767	IdentifierDeclType	zend_string *		3941751	0					
ANR	3941768	Identifier	name		3941751	1					
ANR	3941769	AssignmentExpression	* name = decl -> name		3941751	2		=			
ANR	3941770	Identifier	name		3941751	0					
ANR	3941771	PtrMemberAccess	decl -> name		3941751	1					
ANR	3941772	Identifier	decl		3941751	0					
ANR	3941773	Identifier	name		3941751	1					
ANR	3941774	IdentifierDecl	* lcname		3941751	1					
ANR	3941775	IdentifierDeclType	zend_string *		3941751	0					
ANR	3941776	Identifier	lcname		3941751	1					
ANR	3941777	IdentifierDeclStatement	zend_op * opline ;	4793:1:141463:141478	3941751	2	True				
ANR	3941778	IdentifierDecl	* opline		3941751	0					
ANR	3941779	IdentifierDeclType	zend_op *		3941751	0					
ANR	3941780	Identifier	opline		3941751	1					
ANR	3941781	ExpressionStatement	op_array -> function_name = name = zend_prefix_with_ns ( name )	4795:1:141482:141540	3941751	3	True				
ANR	3941782	AssignmentExpression	op_array -> function_name = name = zend_prefix_with_ns ( name )		3941751	0		=			
ANR	3941783	PtrMemberAccess	op_array -> function_name		3941751	0					
ANR	3941784	Identifier	op_array		3941751	0					
ANR	3941785	Identifier	function_name		3941751	1					
ANR	3941786	AssignmentExpression	name = zend_prefix_with_ns ( name )		3941751	1		=			
ANR	3941787	Identifier	name		3941751	0					
ANR	3941788	CallExpression	zend_prefix_with_ns ( name )		3941751	1					
ANR	3941789	Callee	zend_prefix_with_ns		3941751	0					
ANR	3941790	Identifier	zend_prefix_with_ns		3941751	0					
ANR	3941791	ArgumentList	name		3941751	1					
ANR	3941792	Argument	name		3941751	0					
ANR	3941793	Identifier	name		3941751	0					
ANR	3941794	ExpressionStatement	lcname = zend_string_tolower ( name )	4797:1:141544:141578	3941751	4	True				
ANR	3941795	AssignmentExpression	lcname = zend_string_tolower ( name )		3941751	0		=			
ANR	3941796	Identifier	lcname		3941751	0					
ANR	3941797	CallExpression	zend_string_tolower ( name )		3941751	1					
ANR	3941798	Callee	zend_string_tolower		3941751	0					
ANR	3941799	Identifier	zend_string_tolower		3941751	0					
ANR	3941800	ArgumentList	name		3941751	1					
ANR	3941801	Argument	name		3941751	0					
ANR	3941802	Identifier	name		3941751	0					
ANR	3941803	IfStatement	if ( FC ( imports_function ) )		3941751	5					
ANR	3941804	Condition	FC ( imports_function )	4799:5:141586:141605	3941751	0	True				
ANR	3941805	CallExpression	FC ( imports_function )		3941751	0					
ANR	3941806	Callee	FC		3941751	0					
ANR	3941807	Identifier	FC		3941751	0					
ANR	3941808	ArgumentList	imports_function		3941751	1					
ANR	3941809	Argument	imports_function		3941751	0					
ANR	3941810	Identifier	imports_function		3941751	0					
ANR	3941811	CompoundStatement		11:2:233:308	3941751	1					
ANR	3941812	IdentifierDeclStatement	"zend_string * import_name = zend_hash_find_ptr ( FC ( imports_function ) , lcname ) ;"	4800:2:141612:141687	3941751	0	True				
ANR	3941813	IdentifierDecl	"* import_name = zend_hash_find_ptr ( FC ( imports_function ) , lcname )"		3941751	0					
ANR	3941814	IdentifierDeclType	zend_string *		3941751	0					
ANR	3941815	Identifier	import_name		3941751	1					
ANR	3941816	AssignmentExpression	"* import_name = zend_hash_find_ptr ( FC ( imports_function ) , lcname )"		3941751	2		=			
ANR	3941817	Identifier	import_name		3941751	0					
ANR	3941818	CallExpression	"zend_hash_find_ptr ( FC ( imports_function ) , lcname )"		3941751	1					
ANR	3941819	Callee	zend_hash_find_ptr		3941751	0					
ANR	3941820	Identifier	zend_hash_find_ptr		3941751	0					
ANR	3941821	ArgumentList	FC ( imports_function )		3941751	1					
ANR	3941822	Argument	FC ( imports_function )		3941751	0					
ANR	3941823	CallExpression	FC ( imports_function )		3941751	0					
ANR	3941824	Callee	FC		3941751	0					
ANR	3941825	Identifier	FC		3941751	0					
ANR	3941826	ArgumentList	imports_function		3941751	1					
ANR	3941827	Argument	imports_function		3941751	0					
ANR	3941828	Identifier	imports_function		3941751	0					
ANR	3941829	Argument	lcname		3941751	1					
ANR	3941830	Identifier	lcname		3941751	0					
ANR	3941831	IfStatement	"if ( import_name && ! zend_string_equals_ci ( lcname , import_name ) )"		3941751	1					
ANR	3941832	Condition	"import_name && ! zend_string_equals_ci ( lcname , import_name )"	4801:6:141695:141752	3941751	0	True				
ANR	3941833	AndExpression	"import_name && ! zend_string_equals_ci ( lcname , import_name )"		3941751	0		&&			
ANR	3941834	Identifier	import_name		3941751	0					
ANR	3941835	UnaryOperationExpression	"! zend_string_equals_ci ( lcname , import_name )"		3941751	1					
ANR	3941836	UnaryOperator	!		3941751	0					
ANR	3941837	CallExpression	"zend_string_equals_ci ( lcname , import_name )"		3941751	1					
ANR	3941838	Callee	zend_string_equals_ci		3941751	0					
ANR	3941839	Identifier	zend_string_equals_ci		3941751	0					
ANR	3941840	ArgumentList	lcname		3941751	1					
ANR	3941841	Argument	lcname		3941751	0					
ANR	3941842	Identifier	lcname		3941751	0					
ANR	3941843	Argument	import_name		3941751	1					
ANR	3941844	Identifier	import_name		3941751	0					
ANR	3941845	CompoundStatement		12:66:376:376	3941751	1					
ANR	3941846	Statement	zend_error_noreturn	4802:3:141760:141778	3941751	0	True				
ANR	3941847	Statement	(	4802:22:141779:141779	3941751	1	True				
ANR	3941848	Statement	E_COMPILE_ERROR	4802:23:141780:141794	3941751	2	True				
ANR	3941849	Statement	","	4802:38:141795:141795	3941751	3	True				
ANR	3941850	Statement	"""Cannot declare function %s """	4802:40:141797:141825	3941751	4	True				
ANR	3941851	Statement	"""because the name is already in use"""	4803:4:141831:141866	3941751	5	True				
ANR	3941852	Statement	","	4803:40:141867:141867	3941751	6	True				
ANR	3941853	Statement	ZSTR_VAL	4803:42:141869:141876	3941751	7	True				
ANR	3941854	Statement	(	4803:50:141877:141877	3941751	8	True				
ANR	3941855	Statement	name	4803:51:141878:141881	3941751	9	True				
ANR	3941856	Statement	)	4803:55:141882:141882	3941751	10	True				
ANR	3941857	Statement	)	4803:56:141883:141883	3941751	11	True				
ANR	3941858	ExpressionStatement		4803:57:141884:141884	3941751	12	True				
ANR	3941859	IfStatement	"if ( zend_string_equals_literal ( lcname , ZEND_AUTOLOAD_FUNC_NAME ) && zend_ast_get_list ( params_ast ) -> children != 1 )"		3941751	6					
ANR	3941860	Condition	"zend_string_equals_literal ( lcname , ZEND_AUTOLOAD_FUNC_NAME ) && zend_ast_get_list ( params_ast ) -> children != 1"	4807:5:141899:142007	3941751	0	True				
ANR	3941861	AndExpression	"zend_string_equals_literal ( lcname , ZEND_AUTOLOAD_FUNC_NAME ) && zend_ast_get_list ( params_ast ) -> children != 1"		3941751	0		&&			
ANR	3941862	CallExpression	"zend_string_equals_literal ( lcname , ZEND_AUTOLOAD_FUNC_NAME )"		3941751	0					
ANR	3941863	Callee	zend_string_equals_literal		3941751	0					
ANR	3941864	Identifier	zend_string_equals_literal		3941751	0					
ANR	3941865	ArgumentList	lcname		3941751	1					
ANR	3941866	Argument	lcname		3941751	0					
ANR	3941867	Identifier	lcname		3941751	0					
ANR	3941868	Argument	ZEND_AUTOLOAD_FUNC_NAME		3941751	1					
ANR	3941869	Identifier	ZEND_AUTOLOAD_FUNC_NAME		3941751	0					
ANR	3941870	EqualityExpression	zend_ast_get_list ( params_ast ) -> children != 1		3941751	1		!=			
ANR	3941871	PtrMemberAccess	zend_ast_get_list ( params_ast ) -> children		3941751	0					
ANR	3941872	CallExpression	zend_ast_get_list ( params_ast )		3941751	0					
ANR	3941873	Callee	zend_ast_get_list		3941751	0					
ANR	3941874	Identifier	zend_ast_get_list		3941751	0					
ANR	3941875	ArgumentList	params_ast		3941751	1					
ANR	3941876	Argument	params_ast		3941751	0					
ANR	3941877	Identifier	params_ast		3941751	0					
ANR	3941878	Identifier	children		3941751	1					
ANR	3941879	PrimaryExpression	1		3941751	1					
ANR	3941880	CompoundStatement		20:3:633:633	3941751	1					
ANR	3941881	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s() must take exactly 1 argument"" , ZEND_AUTOLOAD_FUNC_NAME )"	4810:2:142016:142117	3941751	0	True				
ANR	3941882	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s() must take exactly 1 argument"" , ZEND_AUTOLOAD_FUNC_NAME )"		3941751	0					
ANR	3941883	Callee	zend_error_noreturn		3941751	0					
ANR	3941884	Identifier	zend_error_noreturn		3941751	0					
ANR	3941885	ArgumentList	E_COMPILE_ERROR		3941751	1					
ANR	3941886	Argument	E_COMPILE_ERROR		3941751	0					
ANR	3941887	Identifier	E_COMPILE_ERROR		3941751	0					
ANR	3941888	Argument	"""%s() must take exactly 1 argument"""		3941751	1					
ANR	3941889	PrimaryExpression	"""%s() must take exactly 1 argument"""		3941751	0					
ANR	3941890	Argument	ZEND_AUTOLOAD_FUNC_NAME		3941751	2					
ANR	3941891	Identifier	ZEND_AUTOLOAD_FUNC_NAME		3941751	0					
ANR	3941892	IfStatement	if ( op_array -> fn_flags & ZEND_ACC_CLOSURE )		3941751	7					
ANR	3941893	Condition	op_array -> fn_flags & ZEND_ACC_CLOSURE	4814:5:142128:142164	3941751	0	True				
ANR	3941894	BitAndExpression	op_array -> fn_flags & ZEND_ACC_CLOSURE		3941751	0		&			
ANR	3941895	PtrMemberAccess	op_array -> fn_flags		3941751	0					
ANR	3941896	Identifier	op_array		3941751	0					
ANR	3941897	Identifier	fn_flags		3941751	1					
ANR	3941898	Identifier	ZEND_ACC_CLOSURE		3941751	1					
ANR	3941899	CompoundStatement		25:44:788:788	3941751	1					
ANR	3941900	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_DECLARE_LAMBDA_FUNCTION , NULL , NULL )"	4815:2:142171:142246	3941751	0	True				
ANR	3941901	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_DECLARE_LAMBDA_FUNCTION , NULL , NULL )"		3941751	0		=			
ANR	3941902	Identifier	opline		3941751	0					
ANR	3941903	CallExpression	"zend_emit_op_tmp ( result , ZEND_DECLARE_LAMBDA_FUNCTION , NULL , NULL )"		3941751	1					
ANR	3941904	Callee	zend_emit_op_tmp		3941751	0					
ANR	3941905	Identifier	zend_emit_op_tmp		3941751	0					
ANR	3941906	ArgumentList	result		3941751	1					
ANR	3941907	Argument	result		3941751	0					
ANR	3941908	Identifier	result		3941751	0					
ANR	3941909	Argument	ZEND_DECLARE_LAMBDA_FUNCTION		3941751	1					
ANR	3941910	Identifier	ZEND_DECLARE_LAMBDA_FUNCTION		3941751	0					
ANR	3941911	Argument	NULL		3941751	2					
ANR	3941912	Identifier	NULL		3941751	0					
ANR	3941913	Argument	NULL		3941751	3					
ANR	3941914	Identifier	NULL		3941751	0					
ANR	3941915	ElseStatement	else		3941751	0					
ANR	3941916	CompoundStatement		27:8:877:877	3941751	0					
ANR	3941917	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	4817:2:142260:142301	3941751	0	True				
ANR	3941918	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3941751	0		=			
ANR	3941919	Identifier	opline		3941751	0					
ANR	3941920	CallExpression	get_next_op ( CG ( active_op_array ) )		3941751	1					
ANR	3941921	Callee	get_next_op		3941751	0					
ANR	3941922	Identifier	get_next_op		3941751	0					
ANR	3941923	ArgumentList	CG ( active_op_array )		3941751	1					
ANR	3941924	Argument	CG ( active_op_array )		3941751	0					
ANR	3941925	CallExpression	CG ( active_op_array )		3941751	0					
ANR	3941926	Callee	CG		3941751	0					
ANR	3941927	Identifier	CG		3941751	0					
ANR	3941928	ArgumentList	active_op_array		3941751	1					
ANR	3941929	Argument	active_op_array		3941751	0					
ANR	3941930	Identifier	active_op_array		3941751	0					
ANR	3941931	ExpressionStatement	opline -> opcode = ZEND_DECLARE_FUNCTION	4818:2:142305:142343	3941751	1	True				
ANR	3941932	AssignmentExpression	opline -> opcode = ZEND_DECLARE_FUNCTION		3941751	0		=			
ANR	3941933	PtrMemberAccess	opline -> opcode		3941751	0					
ANR	3941934	Identifier	opline		3941751	0					
ANR	3941935	Identifier	opcode		3941751	1					
ANR	3941936	Identifier	ZEND_DECLARE_FUNCTION		3941751	1					
ANR	3941937	ExpressionStatement	opline -> op2_type = IS_CONST	4819:2:142347:142374	3941751	2	True				
ANR	3941938	AssignmentExpression	opline -> op2_type = IS_CONST		3941751	0		=			
ANR	3941939	PtrMemberAccess	opline -> op2_type		3941751	0					
ANR	3941940	Identifier	opline		3941751	0					
ANR	3941941	Identifier	op2_type		3941751	1					
ANR	3941942	Identifier	IS_CONST		3941751	1					
ANR	3941943	ExpressionStatement	"LITERAL_STR ( opline -> op2 , zend_string_copy ( lcname ) )"	4820:2:142378:142428	3941751	3	True				
ANR	3941944	CallExpression	"LITERAL_STR ( opline -> op2 , zend_string_copy ( lcname ) )"		3941751	0					
ANR	3941945	Callee	LITERAL_STR		3941751	0					
ANR	3941946	Identifier	LITERAL_STR		3941751	0					
ANR	3941947	ArgumentList	opline -> op2		3941751	1					
ANR	3941948	Argument	opline -> op2		3941751	0					
ANR	3941949	PtrMemberAccess	opline -> op2		3941751	0					
ANR	3941950	Identifier	opline		3941751	0					
ANR	3941951	Identifier	op2		3941751	1					
ANR	3941952	Argument	zend_string_copy ( lcname )		3941751	1					
ANR	3941953	CallExpression	zend_string_copy ( lcname )		3941751	0					
ANR	3941954	Callee	zend_string_copy		3941751	0					
ANR	3941955	Identifier	zend_string_copy		3941751	0					
ANR	3941956	ArgumentList	lcname		3941751	1					
ANR	3941957	Argument	lcname		3941751	0					
ANR	3941958	Identifier	lcname		3941751	0					
ANR	3941959	CompoundStatement		35:2:1060:1135	3941751	8					
ANR	3941960	IdentifierDeclStatement	"zend_string * key = zend_build_runtime_definition_key ( lcname , decl -> lex_pos ) ;"	4824:2:142439:142514	3941751	0	True				
ANR	3941961	IdentifierDecl	"* key = zend_build_runtime_definition_key ( lcname , decl -> lex_pos )"		3941751	0					
ANR	3941962	IdentifierDeclType	zend_string *		3941751	0					
ANR	3941963	Identifier	key		3941751	1					
ANR	3941964	AssignmentExpression	"* key = zend_build_runtime_definition_key ( lcname , decl -> lex_pos )"		3941751	2		=			
ANR	3941965	Identifier	key		3941751	0					
ANR	3941966	CallExpression	"zend_build_runtime_definition_key ( lcname , decl -> lex_pos )"		3941751	1					
ANR	3941967	Callee	zend_build_runtime_definition_key		3941751	0					
ANR	3941968	Identifier	zend_build_runtime_definition_key		3941751	0					
ANR	3941969	ArgumentList	lcname		3941751	1					
ANR	3941970	Argument	lcname		3941751	0					
ANR	3941971	Identifier	lcname		3941751	0					
ANR	3941972	Argument	decl -> lex_pos		3941751	1					
ANR	3941973	PtrMemberAccess	decl -> lex_pos		3941751	0					
ANR	3941974	Identifier	decl		3941751	0					
ANR	3941975	Identifier	lex_pos		3941751	1					
ANR	3941976	ExpressionStatement	opline -> op1_type = IS_CONST	4826:2:142519:142546	3941751	1	True				
ANR	3941977	AssignmentExpression	opline -> op1_type = IS_CONST		3941751	0		=			
ANR	3941978	PtrMemberAccess	opline -> op1_type		3941751	0					
ANR	3941979	Identifier	opline		3941751	0					
ANR	3941980	Identifier	op1_type		3941751	1					
ANR	3941981	Identifier	IS_CONST		3941751	1					
ANR	3941982	ExpressionStatement	"LITERAL_STR ( opline -> op1 , key )"	4827:2:142550:142579	3941751	2	True				
ANR	3941983	CallExpression	"LITERAL_STR ( opline -> op1 , key )"		3941751	0					
ANR	3941984	Callee	LITERAL_STR		3941751	0					
ANR	3941985	Identifier	LITERAL_STR		3941751	0					
ANR	3941986	ArgumentList	opline -> op1		3941751	1					
ANR	3941987	Argument	opline -> op1		3941751	0					
ANR	3941988	PtrMemberAccess	opline -> op1		3941751	0					
ANR	3941989	Identifier	opline		3941751	0					
ANR	3941990	Identifier	op1		3941751	1					
ANR	3941991	Argument	key		3941751	1					
ANR	3941992	Identifier	key		3941751	0					
ANR	3941993	ExpressionStatement	"zend_hash_update_ptr ( CG ( function_table ) , key , op_array )"	4829:2:142584:142639	3941751	3	True				
ANR	3941994	CallExpression	"zend_hash_update_ptr ( CG ( function_table ) , key , op_array )"		3941751	0					
ANR	3941995	Callee	zend_hash_update_ptr		3941751	0					
ANR	3941996	Identifier	zend_hash_update_ptr		3941751	0					
ANR	3941997	ArgumentList	CG ( function_table )		3941751	1					
ANR	3941998	Argument	CG ( function_table )		3941751	0					
ANR	3941999	CallExpression	CG ( function_table )		3941751	0					
ANR	3942000	Callee	CG		3941751	0					
ANR	3942001	Identifier	CG		3941751	0					
ANR	3942002	ArgumentList	function_table		3941751	1					
ANR	3942003	Argument	function_table		3941751	0					
ANR	3942004	Identifier	function_table		3941751	0					
ANR	3942005	Argument	key		3941751	1					
ANR	3942006	Identifier	key		3941751	0					
ANR	3942007	Argument	op_array		3941751	2					
ANR	3942008	Identifier	op_array		3941751	0					
ANR	3942009	ExpressionStatement	zend_string_release ( lcname )	4832:1:142646:142673	3941751	9	True				
ANR	3942010	CallExpression	zend_string_release ( lcname )		3941751	0					
ANR	3942011	Callee	zend_string_release		3941751	0					
ANR	3942012	Identifier	zend_string_release		3941751	0					
ANR	3942013	ArgumentList	lcname		3941751	1					
ANR	3942014	Argument	lcname		3941751	0					
ANR	3942015	Identifier	lcname		3941751	0					
ANR	3942016	ReturnType	static void		3941751	1					
ANR	3942017	Identifier	zend_begin_func_decl		3941751	2					
ANR	3942018	ParameterList	"znode * result , zend_op_array * op_array , zend_ast_decl * decl"		3941751	3					
ANR	3942019	Parameter	znode * result	4789:33:141307:141319	3941751	0	True				
ANR	3942020	ParameterType	znode *		3941751	0					
ANR	3942021	Identifier	result		3941751	1					
ANR	3942022	Parameter	zend_op_array * op_array	4789:48:141322:141344	3941751	1	True				
ANR	3942023	ParameterType	zend_op_array *		3941751	0					
ANR	3942024	Identifier	op_array		3941751	1					
ANR	3942025	Parameter	zend_ast_decl * decl	4789:73:141347:141365	3941751	2	True				
ANR	3942026	ParameterType	zend_ast_decl *		3941751	0					
ANR	3942027	Identifier	decl		3941751	1					
ANR	3942028	CFGEntryNode	ENTRY		3941751		True				
ANR	3942029	CFGExitNode	EXIT		3941751		True				
ANR	3942030	Symbol	* * decl		3941751						
ANR	3942031	Symbol	opline -> op1		3941751						
ANR	3942032	Symbol	zend_string_equals_literal		3941751						
ANR	3942033	Symbol	zend_emit_op_tmp		3941751						
ANR	3942034	Symbol	opline -> op2		3941751						
ANR	3942035	Symbol	zend_build_runtime_definition_key		3941751						
ANR	3942036	Symbol	decl		3941751						
ANR	3942037	Symbol	zend_string_equals_ci		3941751						
ANR	3942038	Symbol	E_COMPILE_ERROR		3941751						
ANR	3942039	Symbol	zend_prefix_with_ns		3941751						
ANR	3942040	Symbol	zend_string_tolower		3941751						
ANR	3942041	Symbol	imports_function		3941751						
ANR	3942042	Symbol	result		3941751						
ANR	3942043	Symbol	opline		3941751						
ANR	3942044	Symbol	op_array -> fn_flags		3941751						
ANR	3942045	Symbol	params_ast		3941751						
ANR	3942046	Symbol	zend_hash_find_ptr		3941751						
ANR	3942047	Symbol	ZEND_AUTOLOAD_FUNC_NAME		3941751						
ANR	3942048	Symbol	key		3941751						
ANR	3942049	Symbol	decl -> name		3941751						
ANR	3942050	Symbol	IS_CONST		3941751						
ANR	3942051	Symbol	* decl -> child		3941751						
ANR	3942052	Symbol	NULL		3941751						
ANR	3942053	Symbol	get_next_op		3941751						
ANR	3942054	Symbol	CG		3941751						
ANR	3942055	Symbol	ZEND_DECLARE_FUNCTION		3941751						
ANR	3942056	Symbol	active_op_array		3941751						
ANR	3942057	Symbol	import_name		3941751						
ANR	3942058	Symbol	zend_string_copy		3941751						
ANR	3942059	Symbol	* zend_ast_get_list		3941751						
ANR	3942060	Symbol	* op_array		3941751						
ANR	3942061	Symbol	opline -> op1_type		3941751						
ANR	3942062	Symbol	op_array -> function_name		3941751						
ANR	3942063	Symbol	ZEND_DECLARE_LAMBDA_FUNCTION		3941751						
ANR	3942064	Symbol	zend_ast_get_list		3941751						
ANR	3942065	Symbol	ZEND_ACC_CLOSURE		3941751						
ANR	3942066	Symbol	lcname		3941751						
ANR	3942067	Symbol	* opline		3941751						
ANR	3942068	Symbol	decl -> child		3941751						
ANR	3942069	Symbol	opline -> opcode		3941751						
ANR	3942070	Symbol	decl -> lex_pos		3941751						
ANR	3942071	Symbol	name		3941751						
ANR	3942072	Symbol	opline -> op2_type		3941751						
ANR	3942073	Symbol	function_table		3941751						
ANR	3942074	Symbol	* decl		3941751						
ANR	3942075	Symbol	FC		3941751						
ANR	3942076	Symbol	op_array		3941751						
ANR	3942077	Symbol	zend_ast_get_list ( params_ast ) -> children		3941751						
ANR	3942078	Function	zend_compile_func_decl	4836:0:142688:144900							
ANR	3942079	FunctionDef	"zend_compile_func_decl (znode * result , zend_ast * ast)"		3942078	0					
ANR	3942080	CompoundStatement		4837:0:142756:144900	3942078	0					
ANR	3942081	IdentifierDeclStatement	zend_ast_decl * decl = ( zend_ast_decl * ) ast ;	4838:1:142759:142802	3942078	0	True				
ANR	3942082	IdentifierDecl	* decl = ( zend_ast_decl * ) ast		3942078	0					
ANR	3942083	IdentifierDeclType	zend_ast_decl *		3942078	0					
ANR	3942084	Identifier	decl		3942078	1					
ANR	3942085	AssignmentExpression	* decl = ( zend_ast_decl * ) ast		3942078	2		=			
ANR	3942086	Identifier	decl		3942078	0					
ANR	3942087	CastExpression	( zend_ast_decl * ) ast		3942078	1					
ANR	3942088	CastTarget	zend_ast_decl *		3942078	0					
ANR	3942089	Identifier	ast		3942078	1					
ANR	3942090	IdentifierDeclStatement	zend_ast * params_ast = decl -> child [ 0 ] ;	4839:1:142805:142842	3942078	1	True				
ANR	3942091	IdentifierDecl	* params_ast = decl -> child [ 0 ]		3942078	0					
ANR	3942092	IdentifierDeclType	zend_ast *		3942078	0					
ANR	3942093	Identifier	params_ast		3942078	1					
ANR	3942094	AssignmentExpression	* params_ast = decl -> child [ 0 ]		3942078	2		=			
ANR	3942095	Identifier	params_ast		3942078	0					
ANR	3942096	ArrayIndexing	decl -> child [ 0 ]		3942078	1					
ANR	3942097	PtrMemberAccess	decl -> child		3942078	0					
ANR	3942098	Identifier	decl		3942078	0					
ANR	3942099	Identifier	child		3942078	1					
ANR	3942100	PrimaryExpression	0		3942078	1					
ANR	3942101	IdentifierDeclStatement	zend_ast * uses_ast = decl -> child [ 1 ] ;	4840:1:142845:142880	3942078	2	True				
ANR	3942102	IdentifierDecl	* uses_ast = decl -> child [ 1 ]		3942078	0					
ANR	3942103	IdentifierDeclType	zend_ast *		3942078	0					
ANR	3942104	Identifier	uses_ast		3942078	1					
ANR	3942105	AssignmentExpression	* uses_ast = decl -> child [ 1 ]		3942078	2		=			
ANR	3942106	Identifier	uses_ast		3942078	0					
ANR	3942107	ArrayIndexing	decl -> child [ 1 ]		3942078	1					
ANR	3942108	PtrMemberAccess	decl -> child		3942078	0					
ANR	3942109	Identifier	decl		3942078	0					
ANR	3942110	Identifier	child		3942078	1					
ANR	3942111	PrimaryExpression	1		3942078	1					
ANR	3942112	IdentifierDeclStatement	zend_ast * stmt_ast = decl -> child [ 2 ] ;	4841:1:142883:142918	3942078	3	True				
ANR	3942113	IdentifierDecl	* stmt_ast = decl -> child [ 2 ]		3942078	0					
ANR	3942114	IdentifierDeclType	zend_ast *		3942078	0					
ANR	3942115	Identifier	stmt_ast		3942078	1					
ANR	3942116	AssignmentExpression	* stmt_ast = decl -> child [ 2 ]		3942078	2		=			
ANR	3942117	Identifier	stmt_ast		3942078	0					
ANR	3942118	ArrayIndexing	decl -> child [ 2 ]		3942078	1					
ANR	3942119	PtrMemberAccess	decl -> child		3942078	0					
ANR	3942120	Identifier	decl		3942078	0					
ANR	3942121	Identifier	child		3942078	1					
ANR	3942122	PrimaryExpression	2		3942078	1					
ANR	3942123	IdentifierDeclStatement	zend_ast * return_type_ast = decl -> child [ 3 ] ;	4842:1:142921:142963	3942078	4	True				
ANR	3942124	IdentifierDecl	* return_type_ast = decl -> child [ 3 ]		3942078	0					
ANR	3942125	IdentifierDeclType	zend_ast *		3942078	0					
ANR	3942126	Identifier	return_type_ast		3942078	1					
ANR	3942127	AssignmentExpression	* return_type_ast = decl -> child [ 3 ]		3942078	2		=			
ANR	3942128	Identifier	return_type_ast		3942078	0					
ANR	3942129	ArrayIndexing	decl -> child [ 3 ]		3942078	1					
ANR	3942130	PtrMemberAccess	decl -> child		3942078	0					
ANR	3942131	Identifier	decl		3942078	0					
ANR	3942132	Identifier	child		3942078	1					
ANR	3942133	PrimaryExpression	3		3942078	1					
ANR	3942134	IdentifierDeclStatement	zend_bool is_method = decl -> kind == ZEND_AST_METHOD ;	4843:1:142966:143017	3942078	5	True				
ANR	3942135	IdentifierDecl	is_method = decl -> kind == ZEND_AST_METHOD		3942078	0					
ANR	3942136	IdentifierDeclType	zend_bool		3942078	0					
ANR	3942137	Identifier	is_method		3942078	1					
ANR	3942138	AssignmentExpression	is_method = decl -> kind == ZEND_AST_METHOD		3942078	2		=			
ANR	3942139	Identifier	is_method		3942078	0					
ANR	3942140	EqualityExpression	decl -> kind == ZEND_AST_METHOD		3942078	1		==			
ANR	3942141	PtrMemberAccess	decl -> kind		3942078	0					
ANR	3942142	Identifier	decl		3942078	0					
ANR	3942143	Identifier	kind		3942078	1					
ANR	3942144	Identifier	ZEND_AST_METHOD		3942078	1					
ANR	3942145	IdentifierDeclStatement	zend_op_array * orig_op_array = CG ( active_op_array ) ;	4845:1:143021:143071	3942078	6	True				
ANR	3942146	IdentifierDecl	* orig_op_array = CG ( active_op_array )		3942078	0					
ANR	3942147	IdentifierDeclType	zend_op_array *		3942078	0					
ANR	3942148	Identifier	orig_op_array		3942078	1					
ANR	3942149	AssignmentExpression	* orig_op_array = CG ( active_op_array )		3942078	2		=			
ANR	3942150	Identifier	orig_op_array		3942078	0					
ANR	3942151	CallExpression	CG ( active_op_array )		3942078	1					
ANR	3942152	Callee	CG		3942078	0					
ANR	3942153	Identifier	CG		3942078	0					
ANR	3942154	ArgumentList	active_op_array		3942078	1					
ANR	3942155	Argument	active_op_array		3942078	0					
ANR	3942156	Identifier	active_op_array		3942078	0					
ANR	3942157	IdentifierDeclStatement	"zend_op_array * op_array = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) ) ;"	4846:1:143074:143151	3942078	7	True				
ANR	3942158	IdentifierDecl	"* op_array = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		3942078	0					
ANR	3942159	IdentifierDeclType	zend_op_array *		3942078	0					
ANR	3942160	Identifier	op_array		3942078	1					
ANR	3942161	AssignmentExpression	"* op_array = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		3942078	2		=			
ANR	3942162	Identifier	op_array		3942078	0					
ANR	3942163	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		3942078	1					
ANR	3942164	Callee	zend_arena_alloc		3942078	0					
ANR	3942165	Identifier	zend_arena_alloc		3942078	0					
ANR	3942166	ArgumentList	& CG ( arena )		3942078	1					
ANR	3942167	Argument	& CG ( arena )		3942078	0					
ANR	3942168	UnaryOperationExpression	& CG ( arena )		3942078	0					
ANR	3942169	UnaryOperator	&		3942078	0					
ANR	3942170	CallExpression	CG ( arena )		3942078	1					
ANR	3942171	Callee	CG		3942078	0					
ANR	3942172	Identifier	CG		3942078	0					
ANR	3942173	ArgumentList	arena		3942078	1					
ANR	3942174	Argument	arena		3942078	0					
ANR	3942175	Identifier	arena		3942078	0					
ANR	3942176	Argument	sizeof ( zend_op_array )		3942078	1					
ANR	3942177	SizeofExpression	sizeof ( zend_op_array )		3942078	0					
ANR	3942178	Sizeof	sizeof		3942078	0					
ANR	3942179	SizeofOperand	zend_op_array		3942078	1					
ANR	3942180	IdentifierDeclStatement	zend_oparray_context orig_oparray_context ;	4847:1:143154:143195	3942078	8	True				
ANR	3942181	IdentifierDecl	orig_oparray_context		3942078	0					
ANR	3942182	IdentifierDeclType	zend_oparray_context		3942078	0					
ANR	3942183	Identifier	orig_oparray_context		3942078	1					
ANR	3942184	ExpressionStatement	"init_op_array ( op_array , ZEND_USER_FUNCTION , INITIAL_OP_ARRAY_SIZE )"	4849:1:143199:143265	3942078	9	True				
ANR	3942185	CallExpression	"init_op_array ( op_array , ZEND_USER_FUNCTION , INITIAL_OP_ARRAY_SIZE )"		3942078	0					
ANR	3942186	Callee	init_op_array		3942078	0					
ANR	3942187	Identifier	init_op_array		3942078	0					
ANR	3942188	ArgumentList	op_array		3942078	1					
ANR	3942189	Argument	op_array		3942078	0					
ANR	3942190	Identifier	op_array		3942078	0					
ANR	3942191	Argument	ZEND_USER_FUNCTION		3942078	1					
ANR	3942192	Identifier	ZEND_USER_FUNCTION		3942078	0					
ANR	3942193	Argument	INITIAL_OP_ARRAY_SIZE		3942078	2					
ANR	3942194	Identifier	INITIAL_OP_ARRAY_SIZE		3942078	0					
ANR	3942195	ExpressionStatement	op_array -> fn_flags |= ( orig_op_array -> fn_flags & ZEND_ACC_STRICT_TYPES )	4851:1:143269:143340	3942078	10	True				
ANR	3942196	AssignmentExpression	op_array -> fn_flags |= ( orig_op_array -> fn_flags & ZEND_ACC_STRICT_TYPES )		3942078	0		|=			
ANR	3942197	PtrMemberAccess	op_array -> fn_flags		3942078	0					
ANR	3942198	Identifier	op_array		3942078	0					
ANR	3942199	Identifier	fn_flags		3942078	1					
ANR	3942200	BitAndExpression	orig_op_array -> fn_flags & ZEND_ACC_STRICT_TYPES		3942078	1		&			
ANR	3942201	PtrMemberAccess	orig_op_array -> fn_flags		3942078	0					
ANR	3942202	Identifier	orig_op_array		3942078	0					
ANR	3942203	Identifier	fn_flags		3942078	1					
ANR	3942204	Identifier	ZEND_ACC_STRICT_TYPES		3942078	1					
ANR	3942205	ExpressionStatement	op_array -> fn_flags |= decl -> flags	4852:1:143343:143376	3942078	11	True				
ANR	3942206	AssignmentExpression	op_array -> fn_flags |= decl -> flags		3942078	0		|=			
ANR	3942207	PtrMemberAccess	op_array -> fn_flags		3942078	0					
ANR	3942208	Identifier	op_array		3942078	0					
ANR	3942209	Identifier	fn_flags		3942078	1					
ANR	3942210	PtrMemberAccess	decl -> flags		3942078	1					
ANR	3942211	Identifier	decl		3942078	0					
ANR	3942212	Identifier	flags		3942078	1					
ANR	3942213	ExpressionStatement	op_array -> line_start = decl -> start_lineno	4853:1:143379:143420	3942078	12	True				
ANR	3942214	AssignmentExpression	op_array -> line_start = decl -> start_lineno		3942078	0		=			
ANR	3942215	PtrMemberAccess	op_array -> line_start		3942078	0					
ANR	3942216	Identifier	op_array		3942078	0					
ANR	3942217	Identifier	line_start		3942078	1					
ANR	3942218	PtrMemberAccess	decl -> start_lineno		3942078	1					
ANR	3942219	Identifier	decl		3942078	0					
ANR	3942220	Identifier	start_lineno		3942078	1					
ANR	3942221	ExpressionStatement	op_array -> line_end = decl -> end_lineno	4854:1:143423:143460	3942078	13	True				
ANR	3942222	AssignmentExpression	op_array -> line_end = decl -> end_lineno		3942078	0		=			
ANR	3942223	PtrMemberAccess	op_array -> line_end		3942078	0					
ANR	3942224	Identifier	op_array		3942078	0					
ANR	3942225	Identifier	line_end		3942078	1					
ANR	3942226	PtrMemberAccess	decl -> end_lineno		3942078	1					
ANR	3942227	Identifier	decl		3942078	0					
ANR	3942228	Identifier	end_lineno		3942078	1					
ANR	3942229	IfStatement	if ( decl -> doc_comment )		3942078	14					
ANR	3942230	Condition	decl -> doc_comment	4855:5:143467:143483	3942078	0	True				
ANR	3942231	PtrMemberAccess	decl -> doc_comment		3942078	0					
ANR	3942232	Identifier	decl		3942078	0					
ANR	3942233	Identifier	doc_comment		3942078	1					
ANR	3942234	CompoundStatement		19:24:729:729	3942078	1					
ANR	3942235	ExpressionStatement	op_array -> doc_comment = zend_string_copy ( decl -> doc_comment )	4856:2:143490:143549	3942078	0	True				
ANR	3942236	AssignmentExpression	op_array -> doc_comment = zend_string_copy ( decl -> doc_comment )		3942078	0		=			
ANR	3942237	PtrMemberAccess	op_array -> doc_comment		3942078	0					
ANR	3942238	Identifier	op_array		3942078	0					
ANR	3942239	Identifier	doc_comment		3942078	1					
ANR	3942240	CallExpression	zend_string_copy ( decl -> doc_comment )		3942078	1					
ANR	3942241	Callee	zend_string_copy		3942078	0					
ANR	3942242	Identifier	zend_string_copy		3942078	0					
ANR	3942243	ArgumentList	decl -> doc_comment		3942078	1					
ANR	3942244	Argument	decl -> doc_comment		3942078	0					
ANR	3942245	PtrMemberAccess	decl -> doc_comment		3942078	0					
ANR	3942246	Identifier	decl		3942078	0					
ANR	3942247	Identifier	doc_comment		3942078	1					
ANR	3942248	IfStatement	if ( decl -> kind == ZEND_AST_CLOSURE )		3942078	15					
ANR	3942249	Condition	decl -> kind == ZEND_AST_CLOSURE	4858:5:143559:143588	3942078	0	True				
ANR	3942250	EqualityExpression	decl -> kind == ZEND_AST_CLOSURE		3942078	0		==			
ANR	3942251	PtrMemberAccess	decl -> kind		3942078	0					
ANR	3942252	Identifier	decl		3942078	0					
ANR	3942253	Identifier	kind		3942078	1					
ANR	3942254	Identifier	ZEND_AST_CLOSURE		3942078	1					
ANR	3942255	CompoundStatement		22:37:834:834	3942078	1					
ANR	3942256	ExpressionStatement	op_array -> fn_flags |= ZEND_ACC_CLOSURE	4859:2:143595:143633	3942078	0	True				
ANR	3942257	AssignmentExpression	op_array -> fn_flags |= ZEND_ACC_CLOSURE		3942078	0		|=			
ANR	3942258	PtrMemberAccess	op_array -> fn_flags		3942078	0					
ANR	3942259	Identifier	op_array		3942078	0					
ANR	3942260	Identifier	fn_flags		3942078	1					
ANR	3942261	Identifier	ZEND_ACC_CLOSURE		3942078	1					
ANR	3942262	IfStatement	if ( is_method )		3942078	16					
ANR	3942263	Condition	is_method	4862:5:143644:143652	3942078	0	True				
ANR	3942264	Identifier	is_method		3942078	0					
ANR	3942265	CompoundStatement		27:2:902:939	3942078	1					
ANR	3942266	IdentifierDeclStatement	zend_bool has_body = stmt_ast != NULL ;	4863:2:143659:143696	3942078	0	True				
ANR	3942267	IdentifierDecl	has_body = stmt_ast != NULL		3942078	0					
ANR	3942268	IdentifierDeclType	zend_bool		3942078	0					
ANR	3942269	Identifier	has_body		3942078	1					
ANR	3942270	AssignmentExpression	has_body = stmt_ast != NULL		3942078	2		=			
ANR	3942271	Identifier	has_body		3942078	0					
ANR	3942272	EqualityExpression	stmt_ast != NULL		3942078	1		!=			
ANR	3942273	Identifier	stmt_ast		3942078	0					
ANR	3942274	Identifier	NULL		3942078	1					
ANR	3942275	ExpressionStatement	"zend_begin_method_decl ( op_array , decl -> name , has_body )"	4864:2:143700:143754	3942078	1	True				
ANR	3942276	CallExpression	"zend_begin_method_decl ( op_array , decl -> name , has_body )"		3942078	0					
ANR	3942277	Callee	zend_begin_method_decl		3942078	0					
ANR	3942278	Identifier	zend_begin_method_decl		3942078	0					
ANR	3942279	ArgumentList	op_array		3942078	1					
ANR	3942280	Argument	op_array		3942078	0					
ANR	3942281	Identifier	op_array		3942078	0					
ANR	3942282	Argument	decl -> name		3942078	1					
ANR	3942283	PtrMemberAccess	decl -> name		3942078	0					
ANR	3942284	Identifier	decl		3942078	0					
ANR	3942285	Identifier	name		3942078	1					
ANR	3942286	Argument	has_body		3942078	2					
ANR	3942287	Identifier	has_body		3942078	0					
ANR	3942288	ElseStatement	else		3942078	0					
ANR	3942289	CompoundStatement		29:8:1007:1007	3942078	0					
ANR	3942290	ExpressionStatement	"zend_begin_func_decl ( result , op_array , decl )"	4866:2:143768:143812	3942078	0	True				
ANR	3942291	CallExpression	"zend_begin_func_decl ( result , op_array , decl )"		3942078	0					
ANR	3942292	Callee	zend_begin_func_decl		3942078	0					
ANR	3942293	Identifier	zend_begin_func_decl		3942078	0					
ANR	3942294	ArgumentList	result		3942078	1					
ANR	3942295	Argument	result		3942078	0					
ANR	3942296	Identifier	result		3942078	0					
ANR	3942297	Argument	op_array		3942078	1					
ANR	3942298	Identifier	op_array		3942078	0					
ANR	3942299	Argument	decl		3942078	2					
ANR	3942300	Identifier	decl		3942078	0					
ANR	3942301	ExpressionStatement	CG ( active_op_array ) = op_array	4869:1:143819:143849	3942078	17	True				
ANR	3942302	AssignmentExpression	CG ( active_op_array ) = op_array		3942078	0		=			
ANR	3942303	CallExpression	CG ( active_op_array )		3942078	0					
ANR	3942304	Callee	CG		3942078	0					
ANR	3942305	Identifier	CG		3942078	0					
ANR	3942306	ArgumentList	active_op_array		3942078	1					
ANR	3942307	Argument	active_op_array		3942078	0					
ANR	3942308	Identifier	active_op_array		3942078	0					
ANR	3942309	Identifier	op_array		3942078	1					
ANR	3942310	ExpressionStatement	zend_oparray_context_begin ( & orig_oparray_context )	4871:1:143853:143902	3942078	18	True				
ANR	3942311	CallExpression	zend_oparray_context_begin ( & orig_oparray_context )		3942078	0					
ANR	3942312	Callee	zend_oparray_context_begin		3942078	0					
ANR	3942313	Identifier	zend_oparray_context_begin		3942078	0					
ANR	3942314	ArgumentList	& orig_oparray_context		3942078	1					
ANR	3942315	Argument	& orig_oparray_context		3942078	0					
ANR	3942316	UnaryOperationExpression	& orig_oparray_context		3942078	0					
ANR	3942317	UnaryOperator	&		3942078	0					
ANR	3942318	Identifier	orig_oparray_context		3942078	1					
ANR	3942319	IfStatement	if ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO )		3942078	19					
ANR	3942320	Condition	CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO	4873:5:143910:143958	3942078	0	True				
ANR	3942321	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO		3942078	0		&			
ANR	3942322	CallExpression	CG ( compiler_options )		3942078	0					
ANR	3942323	Callee	CG		3942078	0					
ANR	3942324	Identifier	CG		3942078	0					
ANR	3942325	ArgumentList	compiler_options		3942078	1					
ANR	3942326	Argument	compiler_options		3942078	0					
ANR	3942327	Identifier	compiler_options		3942078	0					
ANR	3942328	Identifier	ZEND_COMPILE_EXTENDED_INFO		3942078	1					
ANR	3942329	CompoundStatement		38:2:1208:1274	3942078	1					
ANR	3942330	IdentifierDeclStatement	"zend_op * opline_ext = zend_emit_op ( NULL , ZEND_EXT_NOP , NULL , NULL ) ;"	4874:2:143965:144031	3942078	0	True				
ANR	3942331	IdentifierDecl	"* opline_ext = zend_emit_op ( NULL , ZEND_EXT_NOP , NULL , NULL )"		3942078	0					
ANR	3942332	IdentifierDeclType	zend_op *		3942078	0					
ANR	3942333	Identifier	opline_ext		3942078	1					
ANR	3942334	AssignmentExpression	"* opline_ext = zend_emit_op ( NULL , ZEND_EXT_NOP , NULL , NULL )"		3942078	2		=			
ANR	3942335	Identifier	opline_ext		3942078	0					
ANR	3942336	CallExpression	"zend_emit_op ( NULL , ZEND_EXT_NOP , NULL , NULL )"		3942078	1					
ANR	3942337	Callee	zend_emit_op		3942078	0					
ANR	3942338	Identifier	zend_emit_op		3942078	0					
ANR	3942339	ArgumentList	NULL		3942078	1					
ANR	3942340	Argument	NULL		3942078	0					
ANR	3942341	Identifier	NULL		3942078	0					
ANR	3942342	Argument	ZEND_EXT_NOP		3942078	1					
ANR	3942343	Identifier	ZEND_EXT_NOP		3942078	0					
ANR	3942344	Argument	NULL		3942078	2					
ANR	3942345	Identifier	NULL		3942078	0					
ANR	3942346	Argument	NULL		3942078	3					
ANR	3942347	Identifier	NULL		3942078	0					
ANR	3942348	ExpressionStatement	opline_ext -> lineno = decl -> start_lineno	4875:2:144035:144074	3942078	1	True				
ANR	3942349	AssignmentExpression	opline_ext -> lineno = decl -> start_lineno		3942078	0		=			
ANR	3942350	PtrMemberAccess	opline_ext -> lineno		3942078	0					
ANR	3942351	Identifier	opline_ext		3942078	0					
ANR	3942352	Identifier	lineno		3942078	1					
ANR	3942353	PtrMemberAccess	decl -> start_lineno		3942078	1					
ANR	3942354	Identifier	decl		3942078	0					
ANR	3942355	Identifier	start_lineno		3942078	1					
ANR	3942356	CompoundStatement		44:2:1380:1403	3942078	20					
ANR	3942357	IdentifierDeclStatement	zend_loop_var dummy_var ;	4880:2:144137:144160	3942078	0	True				
ANR	3942358	IdentifierDecl	dummy_var		3942078	0					
ANR	3942359	IdentifierDeclType	zend_loop_var		3942078	0					
ANR	3942360	Identifier	dummy_var		3942078	1					
ANR	3942361	ExpressionStatement	dummy_var . opcode = ZEND_RETURN	4881:2:144164:144194	3942078	1	True				
ANR	3942362	AssignmentExpression	dummy_var . opcode = ZEND_RETURN		3942078	0		=			
ANR	3942363	MemberAccess	dummy_var . opcode		3942078	0					
ANR	3942364	Identifier	dummy_var		3942078	0					
ANR	3942365	Identifier	opcode		3942078	1					
ANR	3942366	Identifier	ZEND_RETURN		3942078	1					
ANR	3942367	ExpressionStatement	"zend_stack_push ( & CG ( loop_var_stack ) , ( void * ) & dummy_var )"	4883:2:144199:144256	3942078	2	True				
ANR	3942368	CallExpression	"zend_stack_push ( & CG ( loop_var_stack ) , ( void * ) & dummy_var )"		3942078	0					
ANR	3942369	Callee	zend_stack_push		3942078	0					
ANR	3942370	Identifier	zend_stack_push		3942078	0					
ANR	3942371	ArgumentList	& CG ( loop_var_stack )		3942078	1					
ANR	3942372	Argument	& CG ( loop_var_stack )		3942078	0					
ANR	3942373	UnaryOperationExpression	& CG ( loop_var_stack )		3942078	0					
ANR	3942374	UnaryOperator	&		3942078	0					
ANR	3942375	CallExpression	CG ( loop_var_stack )		3942078	1					
ANR	3942376	Callee	CG		3942078	0					
ANR	3942377	Identifier	CG		3942078	0					
ANR	3942378	ArgumentList	loop_var_stack		3942078	1					
ANR	3942379	Argument	loop_var_stack		3942078	0					
ANR	3942380	Identifier	loop_var_stack		3942078	0					
ANR	3942381	Argument	( void * ) & dummy_var		3942078	1					
ANR	3942382	CastExpression	( void * ) & dummy_var		3942078	0					
ANR	3942383	CastTarget	void *		3942078	0					
ANR	3942384	UnaryOperationExpression	& dummy_var		3942078	1					
ANR	3942385	UnaryOperator	&		3942078	0					
ANR	3942386	Identifier	dummy_var		3942078	1					
ANR	3942387	ExpressionStatement	"zend_compile_params ( params_ast , return_type_ast )"	4886:1:144263:144311	3942078	21	True				
ANR	3942388	CallExpression	"zend_compile_params ( params_ast , return_type_ast )"		3942078	0					
ANR	3942389	Callee	zend_compile_params		3942078	0					
ANR	3942390	Identifier	zend_compile_params		3942078	0					
ANR	3942391	ArgumentList	params_ast		3942078	1					
ANR	3942392	Argument	params_ast		3942078	0					
ANR	3942393	Identifier	params_ast		3942078	0					
ANR	3942394	Argument	return_type_ast		3942078	1					
ANR	3942395	Identifier	return_type_ast		3942078	0					
ANR	3942396	IfStatement	if ( uses_ast )		3942078	22					
ANR	3942397	Condition	uses_ast	4887:5:144318:144325	3942078	0	True				
ANR	3942398	Identifier	uses_ast		3942078	0					
ANR	3942399	CompoundStatement		51:15:1571:1571	3942078	1					
ANR	3942400	ExpressionStatement	zend_compile_closure_uses ( uses_ast )	4888:2:144332:144367	3942078	0	True				
ANR	3942401	CallExpression	zend_compile_closure_uses ( uses_ast )		3942078	0					
ANR	3942402	Callee	zend_compile_closure_uses		3942078	0					
ANR	3942403	Identifier	zend_compile_closure_uses		3942078	0					
ANR	3942404	ArgumentList	uses_ast		3942078	1					
ANR	3942405	Argument	uses_ast		3942078	0					
ANR	3942406	Identifier	uses_ast		3942078	0					
ANR	3942407	ExpressionStatement	zend_compile_stmt ( stmt_ast )	4890:1:144373:144400	3942078	23	True				
ANR	3942408	CallExpression	zend_compile_stmt ( stmt_ast )		3942078	0					
ANR	3942409	Callee	zend_compile_stmt		3942078	0					
ANR	3942410	Identifier	zend_compile_stmt		3942078	0					
ANR	3942411	ArgumentList	stmt_ast		3942078	1					
ANR	3942412	Argument	stmt_ast		3942078	0					
ANR	3942413	Identifier	stmt_ast		3942078	0					
ANR	3942414	IfStatement	if ( is_method )		3942078	24					
ANR	3942415	Condition	is_method	4892:5:144408:144416	3942078	0	True				
ANR	3942416	Identifier	is_method		3942078	0					
ANR	3942417	CompoundStatement		56:16:1662:1662	3942078	1					
ANR	3942418	ExpressionStatement	"zend_check_magic_method_implementation ( CG ( active_class_entry ) , ( zend_function * ) op_array , E_COMPILE_ERROR )"	4893:2:144423:144534	3942078	0	True				
ANR	3942419	CallExpression	"zend_check_magic_method_implementation ( CG ( active_class_entry ) , ( zend_function * ) op_array , E_COMPILE_ERROR )"		3942078	0					
ANR	3942420	Callee	zend_check_magic_method_implementation		3942078	0					
ANR	3942421	Identifier	zend_check_magic_method_implementation		3942078	0					
ANR	3942422	ArgumentList	CG ( active_class_entry )		3942078	1					
ANR	3942423	Argument	CG ( active_class_entry )		3942078	0					
ANR	3942424	CallExpression	CG ( active_class_entry )		3942078	0					
ANR	3942425	Callee	CG		3942078	0					
ANR	3942426	Identifier	CG		3942078	0					
ANR	3942427	ArgumentList	active_class_entry		3942078	1					
ANR	3942428	Argument	active_class_entry		3942078	0					
ANR	3942429	Identifier	active_class_entry		3942078	0					
ANR	3942430	Argument	( zend_function * ) op_array		3942078	1					
ANR	3942431	CastExpression	( zend_function * ) op_array		3942078	0					
ANR	3942432	CastTarget	zend_function *		3942078	0					
ANR	3942433	Identifier	op_array		3942078	1					
ANR	3942434	Argument	E_COMPILE_ERROR		3942078	2					
ANR	3942435	Identifier	E_COMPILE_ERROR		3942078	0					
ANR	3942436	ExpressionStatement	CG ( zend_lineno ) = decl -> end_lineno	4898:1:144596:144630	3942078	25	True				
ANR	3942437	AssignmentExpression	CG ( zend_lineno ) = decl -> end_lineno		3942078	0		=			
ANR	3942438	CallExpression	CG ( zend_lineno )		3942078	0					
ANR	3942439	Callee	CG		3942078	0					
ANR	3942440	Identifier	CG		3942078	0					
ANR	3942441	ArgumentList	zend_lineno		3942078	1					
ANR	3942442	Argument	zend_lineno		3942078	0					
ANR	3942443	Identifier	zend_lineno		3942078	0					
ANR	3942444	PtrMemberAccess	decl -> end_lineno		3942078	1					
ANR	3942445	Identifier	decl		3942078	0					
ANR	3942446	Identifier	end_lineno		3942078	1					
ANR	3942447	ExpressionStatement	zend_do_extended_info ( )	4900:1:144634:144657	3942078	26	True				
ANR	3942448	CallExpression	zend_do_extended_info ( )		3942078	0					
ANR	3942449	Callee	zend_do_extended_info		3942078	0					
ANR	3942450	Identifier	zend_do_extended_info		3942078	0					
ANR	3942451	ArgumentList			3942078	1					
ANR	3942452	ExpressionStatement	zend_emit_final_return ( NULL )	4901:1:144660:144688	3942078	27	True				
ANR	3942453	CallExpression	zend_emit_final_return ( NULL )		3942078	0					
ANR	3942454	Callee	zend_emit_final_return		3942078	0					
ANR	3942455	Identifier	zend_emit_final_return		3942078	0					
ANR	3942456	ArgumentList	NULL		3942078	1					
ANR	3942457	Argument	NULL		3942078	0					
ANR	3942458	Identifier	NULL		3942078	0					
ANR	3942459	ExpressionStatement	pass_two ( CG ( active_op_array ) )	4903:1:144692:144721	3942078	28	True				
ANR	3942460	CallExpression	pass_two ( CG ( active_op_array ) )		3942078	0					
ANR	3942461	Callee	pass_two		3942078	0					
ANR	3942462	Identifier	pass_two		3942078	0					
ANR	3942463	ArgumentList	CG ( active_op_array )		3942078	1					
ANR	3942464	Argument	CG ( active_op_array )		3942078	0					
ANR	3942465	CallExpression	CG ( active_op_array )		3942078	0					
ANR	3942466	Callee	CG		3942078	0					
ANR	3942467	Identifier	CG		3942078	0					
ANR	3942468	ArgumentList	active_op_array		3942078	1					
ANR	3942469	Argument	active_op_array		3942078	0					
ANR	3942470	Identifier	active_op_array		3942078	0					
ANR	3942471	ExpressionStatement	zend_oparray_context_end ( & orig_oparray_context )	4904:1:144724:144771	3942078	29	True				
ANR	3942472	CallExpression	zend_oparray_context_end ( & orig_oparray_context )		3942078	0					
ANR	3942473	Callee	zend_oparray_context_end		3942078	0					
ANR	3942474	Identifier	zend_oparray_context_end		3942078	0					
ANR	3942475	ArgumentList	& orig_oparray_context		3942078	1					
ANR	3942476	Argument	& orig_oparray_context		3942078	0					
ANR	3942477	UnaryOperationExpression	& orig_oparray_context		3942078	0					
ANR	3942478	UnaryOperator	&		3942078	0					
ANR	3942479	Identifier	orig_oparray_context		3942078	1					
ANR	3942480	ExpressionStatement	zend_stack_del_top ( & CG ( loop_var_stack ) )	4907:1:144820:144859	3942078	30	True				
ANR	3942481	CallExpression	zend_stack_del_top ( & CG ( loop_var_stack ) )		3942078	0					
ANR	3942482	Callee	zend_stack_del_top		3942078	0					
ANR	3942483	Identifier	zend_stack_del_top		3942078	0					
ANR	3942484	ArgumentList	& CG ( loop_var_stack )		3942078	1					
ANR	3942485	Argument	& CG ( loop_var_stack )		3942078	0					
ANR	3942486	UnaryOperationExpression	& CG ( loop_var_stack )		3942078	0					
ANR	3942487	UnaryOperator	&		3942078	0					
ANR	3942488	CallExpression	CG ( loop_var_stack )		3942078	1					
ANR	3942489	Callee	CG		3942078	0					
ANR	3942490	Identifier	CG		3942078	0					
ANR	3942491	ArgumentList	loop_var_stack		3942078	1					
ANR	3942492	Argument	loop_var_stack		3942078	0					
ANR	3942493	Identifier	loop_var_stack		3942078	0					
ANR	3942494	ExpressionStatement	CG ( active_op_array ) = orig_op_array	4909:1:144863:144898	3942078	31	True				
ANR	3942495	AssignmentExpression	CG ( active_op_array ) = orig_op_array		3942078	0		=			
ANR	3942496	CallExpression	CG ( active_op_array )		3942078	0					
ANR	3942497	Callee	CG		3942078	0					
ANR	3942498	Identifier	CG		3942078	0					
ANR	3942499	ArgumentList	active_op_array		3942078	1					
ANR	3942500	Argument	active_op_array		3942078	0					
ANR	3942501	Identifier	active_op_array		3942078	0					
ANR	3942502	Identifier	orig_op_array		3942078	1					
ANR	3942503	ReturnType	void		3942078	1					
ANR	3942504	Identifier	zend_compile_func_decl		3942078	2					
ANR	3942505	ParameterList	"znode * result , zend_ast * ast"		3942078	3					
ANR	3942506	Parameter	znode * result	4836:28:142716:142728	3942078	0	True				
ANR	3942507	ParameterType	znode *		3942078	0					
ANR	3942508	Identifier	result		3942078	1					
ANR	3942509	Parameter	zend_ast * ast	4836:43:142731:142743	3942078	1	True				
ANR	3942510	ParameterType	zend_ast *		3942078	0					
ANR	3942511	Identifier	ast		3942078	1					
ANR	3942512	CFGEntryNode	ENTRY		3942078		True				
ANR	3942513	CFGExitNode	EXIT		3942078		True				
ANR	3942514	Symbol	stmt_ast		3942078						
ANR	3942515	Symbol	op_array -> line_start		3942078						
ANR	3942516	Symbol	ast		3942078						
ANR	3942517	Symbol	decl		3942078						
ANR	3942518	Symbol	opline_ext -> lineno		3942078						
ANR	3942519	Symbol	E_COMPILE_ERROR		3942078						
ANR	3942520	Symbol	active_class_entry		3942078						
ANR	3942521	Symbol	arena		3942078						
ANR	3942522	Symbol	op_array -> line_end		3942078						
ANR	3942523	Symbol	INITIAL_OP_ARRAY_SIZE		3942078						
ANR	3942524	Symbol	& CG		3942078						
ANR	3942525	Symbol	decl -> flags		3942078						
ANR	3942526	Symbol	* opline_ext		3942078						
ANR	3942527	Symbol	opline_ext		3942078						
ANR	3942528	Symbol	dummy_var		3942078						
ANR	3942529	Symbol	op_array -> fn_flags		3942078						
ANR	3942530	Symbol	decl -> doc_comment		3942078						
ANR	3942531	Symbol	orig_op_array		3942078						
ANR	3942532	Symbol	ZEND_USER_FUNCTION		3942078						
ANR	3942533	Symbol	decl -> end_lineno		3942078						
ANR	3942534	Symbol	orig_oparray_context		3942078						
ANR	3942535	Symbol	ZEND_ACC_STRICT_TYPES		3942078						
ANR	3942536	Symbol	zend_lineno		3942078						
ANR	3942537	Symbol	* decl -> child		3942078						
ANR	3942538	Symbol	NULL		3942078						
ANR	3942539	Symbol	ZEND_RETURN		3942078						
ANR	3942540	Symbol	zend_arena_alloc		3942078						
ANR	3942541	Symbol	decl -> start_lineno		3942078						
ANR	3942542	Symbol	* orig_op_array		3942078						
ANR	3942543	Symbol	zend_string_copy		3942078						
ANR	3942544	Symbol	ZEND_COMPILE_EXTENDED_INFO		3942078						
ANR	3942545	Symbol	* op_array		3942078						
ANR	3942546	Symbol	ZEND_AST_CLOSURE		3942078						
ANR	3942547	Symbol	& dummy_var		3942078						
ANR	3942548	Symbol	uses_ast		3942078						
ANR	3942549	Symbol	zend_emit_op		3942078						
ANR	3942550	Symbol	* * decl		3942078						
ANR	3942551	Symbol	orig_op_array -> fn_flags		3942078						
ANR	3942552	Symbol	& orig_oparray_context		3942078						
ANR	3942553	Symbol	result		3942078						
ANR	3942554	Symbol	compiler_options		3942078						
ANR	3942555	Symbol	loop_var_stack		3942078						
ANR	3942556	Symbol	params_ast		3942078						
ANR	3942557	Symbol	ZEND_AST_METHOD		3942078						
ANR	3942558	Symbol	op_array -> doc_comment		3942078						
ANR	3942559	Symbol	decl -> name		3942078						
ANR	3942560	Symbol	CG		3942078						
ANR	3942561	Symbol	active_op_array		3942078						
ANR	3942562	Symbol	return_type_ast		3942078						
ANR	3942563	Symbol	decl -> kind		3942078						
ANR	3942564	Symbol	ZEND_EXT_NOP		3942078						
ANR	3942565	Symbol	ZEND_ACC_CLOSURE		3942078						
ANR	3942566	Symbol	decl -> child		3942078						
ANR	3942567	Symbol	dummy_var . opcode		3942078						
ANR	3942568	Symbol	is_method		3942078						
ANR	3942569	Symbol	has_body		3942078						
ANR	3942570	Symbol	* decl		3942078						
ANR	3942571	Symbol	op_array		3942078						
ANR	3942572	Function	zend_compile_prop_decl	4913:0:144913:146502							
ANR	3942573	FunctionDef	zend_compile_prop_decl (zend_ast * ast)		3942572	0					
ANR	3942574	CompoundStatement		4914:0:144966:146502	3942572	0					
ANR	3942575	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	4915:1:144969:145013	3942572	0	True				
ANR	3942576	IdentifierDecl	* list = zend_ast_get_list ( ast )		3942572	0					
ANR	3942577	IdentifierDeclType	zend_ast_list *		3942572	0					
ANR	3942578	Identifier	list		3942572	1					
ANR	3942579	AssignmentExpression	* list = zend_ast_get_list ( ast )		3942572	2		=			
ANR	3942580	Identifier	list		3942572	0					
ANR	3942581	CallExpression	zend_ast_get_list ( ast )		3942572	1					
ANR	3942582	Callee	zend_ast_get_list		3942572	0					
ANR	3942583	Identifier	zend_ast_get_list		3942572	0					
ANR	3942584	ArgumentList	ast		3942572	1					
ANR	3942585	Argument	ast		3942572	0					
ANR	3942586	Identifier	ast		3942572	0					
ANR	3942587	IdentifierDeclStatement	uint32_t flags = list -> attr ;	4916:1:145016:145043	3942572	1	True				
ANR	3942588	IdentifierDecl	flags = list -> attr		3942572	0					
ANR	3942589	IdentifierDeclType	uint32_t		3942572	0					
ANR	3942590	Identifier	flags		3942572	1					
ANR	3942591	AssignmentExpression	flags = list -> attr		3942572	2		=			
ANR	3942592	Identifier	flags		3942572	0					
ANR	3942593	PtrMemberAccess	list -> attr		3942572	1					
ANR	3942594	Identifier	list		3942572	0					
ANR	3942595	Identifier	attr		3942572	1					
ANR	3942596	IdentifierDeclStatement	zend_class_entry * ce = CG ( active_class_entry ) ;	4917:1:145046:145091	3942572	2	True				
ANR	3942597	IdentifierDecl	* ce = CG ( active_class_entry )		3942572	0					
ANR	3942598	IdentifierDeclType	zend_class_entry *		3942572	0					
ANR	3942599	Identifier	ce		3942572	1					
ANR	3942600	AssignmentExpression	* ce = CG ( active_class_entry )		3942572	2		=			
ANR	3942601	Identifier	ce		3942572	0					
ANR	3942602	CallExpression	CG ( active_class_entry )		3942572	1					
ANR	3942603	Callee	CG		3942572	0					
ANR	3942604	Identifier	CG		3942572	0					
ANR	3942605	ArgumentList	active_class_entry		3942572	1					
ANR	3942606	Argument	active_class_entry		3942572	0					
ANR	3942607	Identifier	active_class_entry		3942572	0					
ANR	3942608	IdentifierDeclStatement	"uint32_t i , children = list -> children ;"	4918:1:145094:145131	3942572	3	True				
ANR	3942609	IdentifierDecl	i		3942572	0					
ANR	3942610	IdentifierDeclType	uint32_t		3942572	0					
ANR	3942611	Identifier	i		3942572	1					
ANR	3942612	IdentifierDecl	children = list -> children		3942572	1					
ANR	3942613	IdentifierDeclType	uint32_t		3942572	0					
ANR	3942614	Identifier	children		3942572	1					
ANR	3942615	AssignmentExpression	children = list -> children		3942572	2		=			
ANR	3942616	Identifier	children		3942572	0					
ANR	3942617	PtrMemberAccess	list -> children		3942572	1					
ANR	3942618	Identifier	list		3942572	0					
ANR	3942619	Identifier	children		3942572	1					
ANR	3942620	IfStatement	if ( ce -> ce_flags & ZEND_ACC_INTERFACE )		3942572	4					
ANR	3942621	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE	4920:5:145139:145171	3942572	0	True				
ANR	3942622	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3942572	0		&			
ANR	3942623	PtrMemberAccess	ce -> ce_flags		3942572	0					
ANR	3942624	Identifier	ce		3942572	0					
ANR	3942625	Identifier	ce_flags		3942572	1					
ANR	3942626	Identifier	ZEND_ACC_INTERFACE		3942572	1					
ANR	3942627	CompoundStatement		7:40:207:207	3942572	1					
ANR	3942628	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Interfaces may not include member variables"" )"	4921:2:145178:145261	3942572	0	True				
ANR	3942629	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Interfaces may not include member variables"" )"		3942572	0					
ANR	3942630	Callee	zend_error_noreturn		3942572	0					
ANR	3942631	Identifier	zend_error_noreturn		3942572	0					
ANR	3942632	ArgumentList	E_COMPILE_ERROR		3942572	1					
ANR	3942633	Argument	E_COMPILE_ERROR		3942572	0					
ANR	3942634	Identifier	E_COMPILE_ERROR		3942572	0					
ANR	3942635	Argument	"""Interfaces may not include member variables"""		3942572	1					
ANR	3942636	PrimaryExpression	"""Interfaces may not include member variables"""		3942572	0					
ANR	3942637	IfStatement	if ( flags & ZEND_ACC_ABSTRACT )		3942572	5					
ANR	3942638	Condition	flags & ZEND_ACC_ABSTRACT	4924:5:145272:145296	3942572	0	True				
ANR	3942639	BitAndExpression	flags & ZEND_ACC_ABSTRACT		3942572	0		&			
ANR	3942640	Identifier	flags		3942572	0					
ANR	3942641	Identifier	ZEND_ACC_ABSTRACT		3942572	1					
ANR	3942642	CompoundStatement		11:32:332:332	3942572	1					
ANR	3942643	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Properties cannot be declared abstract"" )"	4925:2:145303:145381	3942572	0	True				
ANR	3942644	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Properties cannot be declared abstract"" )"		3942572	0					
ANR	3942645	Callee	zend_error_noreturn		3942572	0					
ANR	3942646	Identifier	zend_error_noreturn		3942572	0					
ANR	3942647	ArgumentList	E_COMPILE_ERROR		3942572	1					
ANR	3942648	Argument	E_COMPILE_ERROR		3942572	0					
ANR	3942649	Identifier	E_COMPILE_ERROR		3942572	0					
ANR	3942650	Argument	"""Properties cannot be declared abstract"""		3942572	1					
ANR	3942651	PrimaryExpression	"""Properties cannot be declared abstract"""		3942572	0					
ANR	3942652	ForStatement	for ( i = 0 ; i < children ; ++ i )		3942572	6					
ANR	3942653	ForInit	i = 0 ;	4928:6:145393:145398	3942572	0	True				
ANR	3942654	AssignmentExpression	i = 0		3942572	0		=			
ANR	3942655	Identifier	i		3942572	0					
ANR	3942656	PrimaryExpression	0		3942572	1					
ANR	3942657	Condition	i < children	4928:13:145400:145411	3942572	1	True				
ANR	3942658	RelationalExpression	i < children		3942572	0		<			
ANR	3942659	Identifier	i		3942572	0					
ANR	3942660	Identifier	children		3942572	1					
ANR	3942661	UnaryExpression	++ i	4928:27:145414:145416	3942572	2	True				
ANR	3942662	IncDec	++		3942572	0					
ANR	3942663	Identifier	i		3942572	1					
ANR	3942664	CompoundStatement		22:2:717:730	3942572	3					
ANR	3942665	IdentifierDeclStatement	zend_ast * prop_ast = list -> child [ i ] ;	4929:2:145423:145458	3942572	0	True				
ANR	3942666	IdentifierDecl	* prop_ast = list -> child [ i ]		3942572	0					
ANR	3942667	IdentifierDeclType	zend_ast *		3942572	0					
ANR	3942668	Identifier	prop_ast		3942572	1					
ANR	3942669	AssignmentExpression	* prop_ast = list -> child [ i ]		3942572	2		=			
ANR	3942670	Identifier	prop_ast		3942572	0					
ANR	3942671	ArrayIndexing	list -> child [ i ]		3942572	1					
ANR	3942672	PtrMemberAccess	list -> child		3942572	0					
ANR	3942673	Identifier	list		3942572	0					
ANR	3942674	Identifier	child		3942572	1					
ANR	3942675	Identifier	i		3942572	1					
ANR	3942676	IdentifierDeclStatement	zend_ast * name_ast = prop_ast -> child [ 0 ] ;	4930:2:145462:145501	3942572	1	True				
ANR	3942677	IdentifierDecl	* name_ast = prop_ast -> child [ 0 ]		3942572	0					
ANR	3942678	IdentifierDeclType	zend_ast *		3942572	0					
ANR	3942679	Identifier	name_ast		3942572	1					
ANR	3942680	AssignmentExpression	* name_ast = prop_ast -> child [ 0 ]		3942572	2		=			
ANR	3942681	Identifier	name_ast		3942572	0					
ANR	3942682	ArrayIndexing	prop_ast -> child [ 0 ]		3942572	1					
ANR	3942683	PtrMemberAccess	prop_ast -> child		3942572	0					
ANR	3942684	Identifier	prop_ast		3942572	0					
ANR	3942685	Identifier	child		3942572	1					
ANR	3942686	PrimaryExpression	0		3942572	1					
ANR	3942687	IdentifierDeclStatement	zend_ast * value_ast = prop_ast -> child [ 1 ] ;	4931:2:145505:145545	3942572	2	True				
ANR	3942688	IdentifierDecl	* value_ast = prop_ast -> child [ 1 ]		3942572	0					
ANR	3942689	IdentifierDeclType	zend_ast *		3942572	0					
ANR	3942690	Identifier	value_ast		3942572	1					
ANR	3942691	AssignmentExpression	* value_ast = prop_ast -> child [ 1 ]		3942572	2		=			
ANR	3942692	Identifier	value_ast		3942572	0					
ANR	3942693	ArrayIndexing	prop_ast -> child [ 1 ]		3942572	1					
ANR	3942694	PtrMemberAccess	prop_ast -> child		3942572	0					
ANR	3942695	Identifier	prop_ast		3942572	0					
ANR	3942696	Identifier	child		3942572	1					
ANR	3942697	PrimaryExpression	1		3942572	1					
ANR	3942698	IdentifierDeclStatement	zend_ast * doc_comment_ast = prop_ast -> child [ 2 ] ;	4932:2:145549:145595	3942572	3	True				
ANR	3942699	IdentifierDecl	* doc_comment_ast = prop_ast -> child [ 2 ]		3942572	0					
ANR	3942700	IdentifierDeclType	zend_ast *		3942572	0					
ANR	3942701	Identifier	doc_comment_ast		3942572	1					
ANR	3942702	AssignmentExpression	* doc_comment_ast = prop_ast -> child [ 2 ]		3942572	2		=			
ANR	3942703	Identifier	doc_comment_ast		3942572	0					
ANR	3942704	ArrayIndexing	prop_ast -> child [ 2 ]		3942572	1					
ANR	3942705	PtrMemberAccess	prop_ast -> child		3942572	0					
ANR	3942706	Identifier	prop_ast		3942572	0					
ANR	3942707	Identifier	child		3942572	1					
ANR	3942708	PrimaryExpression	2		3942572	1					
ANR	3942709	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( name_ast ) ;	4933:2:145599:145645	3942572	4	True				
ANR	3942710	IdentifierDecl	* name = zend_ast_get_str ( name_ast )		3942572	0					
ANR	3942711	IdentifierDeclType	zend_string *		3942572	0					
ANR	3942712	Identifier	name		3942572	1					
ANR	3942713	AssignmentExpression	* name = zend_ast_get_str ( name_ast )		3942572	2		=			
ANR	3942714	Identifier	name		3942572	0					
ANR	3942715	CallExpression	zend_ast_get_str ( name_ast )		3942572	1					
ANR	3942716	Callee	zend_ast_get_str		3942572	0					
ANR	3942717	Identifier	zend_ast_get_str		3942572	0					
ANR	3942718	ArgumentList	name_ast		3942572	1					
ANR	3942719	Argument	name_ast		3942572	0					
ANR	3942720	Identifier	name_ast		3942572	0					
ANR	3942721	IdentifierDeclStatement	zend_string * doc_comment = NULL ;	4934:2:145649:145680	3942572	5	True				
ANR	3942722	IdentifierDecl	* doc_comment = NULL		3942572	0					
ANR	3942723	IdentifierDeclType	zend_string *		3942572	0					
ANR	3942724	Identifier	doc_comment		3942572	1					
ANR	3942725	AssignmentExpression	* doc_comment = NULL		3942572	2		=			
ANR	3942726	Identifier	NULL		3942572	0					
ANR	3942727	Identifier	NULL		3942572	1					
ANR	3942728	IdentifierDeclStatement	zval value_zv ;	4935:2:145684:145697	3942572	6	True				
ANR	3942729	IdentifierDecl	value_zv		3942572	0					
ANR	3942730	IdentifierDeclType	zval		3942572	0					
ANR	3942731	Identifier	value_zv		3942572	1					
ANR	3942732	IfStatement	if ( doc_comment_ast )		3942572	7					
ANR	3942733	Condition	doc_comment_ast	4938:6:145786:145800	3942572	0	True				
ANR	3942734	Identifier	doc_comment_ast		3942572	0					
ANR	3942735	CompoundStatement		25:23:836:836	3942572	1					
ANR	3942736	ExpressionStatement	doc_comment = zend_string_copy ( zend_ast_get_str ( doc_comment_ast ) )	4939:3:145808:145873	3942572	0	True				
ANR	3942737	AssignmentExpression	doc_comment = zend_string_copy ( zend_ast_get_str ( doc_comment_ast ) )		3942572	0		=			
ANR	3942738	Identifier	doc_comment		3942572	0					
ANR	3942739	CallExpression	zend_string_copy ( zend_ast_get_str ( doc_comment_ast ) )		3942572	1					
ANR	3942740	Callee	zend_string_copy		3942572	0					
ANR	3942741	Identifier	zend_string_copy		3942572	0					
ANR	3942742	ArgumentList	zend_ast_get_str ( doc_comment_ast )		3942572	1					
ANR	3942743	Argument	zend_ast_get_str ( doc_comment_ast )		3942572	0					
ANR	3942744	CallExpression	zend_ast_get_str ( doc_comment_ast )		3942572	0					
ANR	3942745	Callee	zend_ast_get_str		3942572	0					
ANR	3942746	Identifier	zend_ast_get_str		3942572	0					
ANR	3942747	ArgumentList	doc_comment_ast		3942572	1					
ANR	3942748	Argument	doc_comment_ast		3942572	0					
ANR	3942749	Identifier	doc_comment_ast		3942572	0					
ANR	3942750	IfStatement	if ( flags & ZEND_ACC_FINAL )		3942572	8					
ANR	3942751	Condition	flags & ZEND_ACC_FINAL	4942:6:145886:145907	3942572	0	True				
ANR	3942752	BitAndExpression	flags & ZEND_ACC_FINAL		3942572	0		&			
ANR	3942753	Identifier	flags		3942572	0					
ANR	3942754	Identifier	ZEND_ACC_FINAL		3942572	1					
ANR	3942755	CompoundStatement		29:30:943:943	3942572	1					
ANR	3942756	Statement	zend_error_noreturn	4943:3:145915:145933	3942572	0	True				
ANR	3942757	Statement	(	4943:22:145934:145934	3942572	1	True				
ANR	3942758	Statement	E_COMPILE_ERROR	4943:23:145935:145949	3942572	2	True				
ANR	3942759	Statement	","	4943:38:145950:145950	3942572	3	True				
ANR	3942760	Statement	"""Cannot declare property %s::$%s final, """	4943:40:145952:145992	3942572	4	True				
ANR	3942761	Statement	"""the final modifier is allowed only for methods and classes"""	4944:4:145998:146057	3942572	5	True				
ANR	3942762	Statement	","	4944:64:146058:146058	3942572	6	True				
ANR	3942763	Statement	ZSTR_VAL	4945:4:146064:146071	3942572	7	True				
ANR	3942764	Statement	(	4945:12:146072:146072	3942572	8	True				
ANR	3942765	Statement	ce	4945:13:146073:146074	3942572	9	True				
ANR	3942766	Statement	->	4945:15:146075:146076	3942572	10	True				
ANR	3942767	Statement	name	4945:17:146077:146080	3942572	11	True				
ANR	3942768	Statement	)	4945:21:146081:146081	3942572	12	True				
ANR	3942769	Statement	","	4945:22:146082:146082	3942572	13	True				
ANR	3942770	Statement	ZSTR_VAL	4945:24:146084:146091	3942572	14	True				
ANR	3942771	Statement	(	4945:32:146092:146092	3942572	15	True				
ANR	3942772	Statement	name	4945:33:146093:146096	3942572	16	True				
ANR	3942773	Statement	)	4945:37:146097:146097	3942572	17	True				
ANR	3942774	Statement	)	4945:38:146098:146098	3942572	18	True				
ANR	3942775	ExpressionStatement		4945:39:146099:146099	3942572	19	True				
ANR	3942776	IfStatement	"if ( zend_hash_exists ( & ce -> properties_info , name ) )"		3942572	9					
ANR	3942777	Condition	"zend_hash_exists ( & ce -> properties_info , name )"	4948:6:146112:146155	3942572	0	True				
ANR	3942778	CallExpression	"zend_hash_exists ( & ce -> properties_info , name )"		3942572	0					
ANR	3942779	Callee	zend_hash_exists		3942572	0					
ANR	3942780	Identifier	zend_hash_exists		3942572	0					
ANR	3942781	ArgumentList	& ce -> properties_info		3942572	1					
ANR	3942782	Argument	& ce -> properties_info		3942572	0					
ANR	3942783	UnaryOperationExpression	& ce -> properties_info		3942572	0					
ANR	3942784	UnaryOperator	&		3942572	0					
ANR	3942785	PtrMemberAccess	ce -> properties_info		3942572	1					
ANR	3942786	Identifier	ce		3942572	0					
ANR	3942787	Identifier	properties_info		3942572	1					
ANR	3942788	Argument	name		3942572	1					
ANR	3942789	Identifier	name		3942572	0					
ANR	3942790	CompoundStatement		35:52:1191:1191	3942572	1					
ANR	3942791	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4949:3:146163:146267	3942572	0	True				
ANR	3942792	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		3942572	0					
ANR	3942793	Callee	zend_error_noreturn		3942572	0					
ANR	3942794	Identifier	zend_error_noreturn		3942572	0					
ANR	3942795	ArgumentList	E_COMPILE_ERROR		3942572	1					
ANR	3942796	Argument	E_COMPILE_ERROR		3942572	0					
ANR	3942797	Identifier	E_COMPILE_ERROR		3942572	0					
ANR	3942798	Argument	"""Cannot redeclare %s::$%s"""		3942572	1					
ANR	3942799	PrimaryExpression	"""Cannot redeclare %s::$%s"""		3942572	0					
ANR	3942800	Argument	ZSTR_VAL ( ce -> name )		3942572	2					
ANR	3942801	CallExpression	ZSTR_VAL ( ce -> name )		3942572	0					
ANR	3942802	Callee	ZSTR_VAL		3942572	0					
ANR	3942803	Identifier	ZSTR_VAL		3942572	0					
ANR	3942804	ArgumentList	ce -> name		3942572	1					
ANR	3942805	Argument	ce -> name		3942572	0					
ANR	3942806	PtrMemberAccess	ce -> name		3942572	0					
ANR	3942807	Identifier	ce		3942572	0					
ANR	3942808	Identifier	name		3942572	1					
ANR	3942809	Argument	ZSTR_VAL ( name )		3942572	3					
ANR	3942810	CallExpression	ZSTR_VAL ( name )		3942572	0					
ANR	3942811	Callee	ZSTR_VAL		3942572	0					
ANR	3942812	Identifier	ZSTR_VAL		3942572	0					
ANR	3942813	ArgumentList	name		3942572	1					
ANR	3942814	Argument	name		3942572	0					
ANR	3942815	Identifier	name		3942572	0					
ANR	3942816	IfStatement	if ( value_ast )		3942572	10					
ANR	3942817	Condition	value_ast	4953:6:146280:146288	3942572	0	True				
ANR	3942818	Identifier	value_ast		3942572	0					
ANR	3942819	CompoundStatement		40:17:1324:1324	3942572	1					
ANR	3942820	ExpressionStatement	"zend_const_expr_to_zval ( & value_zv , value_ast )"	4954:3:146296:146341	3942572	0	True				
ANR	3942821	CallExpression	"zend_const_expr_to_zval ( & value_zv , value_ast )"		3942572	0					
ANR	3942822	Callee	zend_const_expr_to_zval		3942572	0					
ANR	3942823	Identifier	zend_const_expr_to_zval		3942572	0					
ANR	3942824	ArgumentList	& value_zv		3942572	1					
ANR	3942825	Argument	& value_zv		3942572	0					
ANR	3942826	UnaryOperationExpression	& value_zv		3942572	0					
ANR	3942827	UnaryOperator	&		3942572	0					
ANR	3942828	Identifier	value_zv		3942572	1					
ANR	3942829	Argument	value_ast		3942572	1					
ANR	3942830	Identifier	value_ast		3942572	0					
ANR	3942831	ElseStatement	else		3942572	0					
ANR	3942832	CompoundStatement		42:9:1385:1385	3942572	0					
ANR	3942833	ExpressionStatement	ZVAL_NULL ( & value_zv )	4956:3:146357:146377	3942572	0	True				
ANR	3942834	CallExpression	ZVAL_NULL ( & value_zv )		3942572	0					
ANR	3942835	Callee	ZVAL_NULL		3942572	0					
ANR	3942836	Identifier	ZVAL_NULL		3942572	0					
ANR	3942837	ArgumentList	& value_zv		3942572	1					
ANR	3942838	Argument	& value_zv		3942572	0					
ANR	3942839	UnaryOperationExpression	& value_zv		3942572	0					
ANR	3942840	UnaryOperator	&		3942572	0					
ANR	3942841	Identifier	value_zv		3942572	1					
ANR	3942842	ExpressionStatement	name = zend_new_interned_string_safe ( name )	4959:2:146386:146428	3942572	11	True				
ANR	3942843	AssignmentExpression	name = zend_new_interned_string_safe ( name )		3942572	0		=			
ANR	3942844	Identifier	name		3942572	0					
ANR	3942845	CallExpression	zend_new_interned_string_safe ( name )		3942572	1					
ANR	3942846	Callee	zend_new_interned_string_safe		3942572	0					
ANR	3942847	Identifier	zend_new_interned_string_safe		3942572	0					
ANR	3942848	ArgumentList	name		3942572	1					
ANR	3942849	Argument	name		3942572	0					
ANR	3942850	Identifier	name		3942572	0					
ANR	3942851	ExpressionStatement	"zend_declare_property_ex ( ce , name , & value_zv , flags , doc_comment )"	4960:2:146432:146497	3942572	12	True				
ANR	3942852	CallExpression	"zend_declare_property_ex ( ce , name , & value_zv , flags , doc_comment )"		3942572	0					
ANR	3942853	Callee	zend_declare_property_ex		3942572	0					
ANR	3942854	Identifier	zend_declare_property_ex		3942572	0					
ANR	3942855	ArgumentList	ce		3942572	1					
ANR	3942856	Argument	ce		3942572	0					
ANR	3942857	Identifier	ce		3942572	0					
ANR	3942858	Argument	name		3942572	1					
ANR	3942859	Identifier	name		3942572	0					
ANR	3942860	Argument	& value_zv		3942572	2					
ANR	3942861	UnaryOperationExpression	& value_zv		3942572	0					
ANR	3942862	UnaryOperator	&		3942572	0					
ANR	3942863	Identifier	value_zv		3942572	1					
ANR	3942864	Argument	flags		3942572	3					
ANR	3942865	Identifier	flags		3942572	0					
ANR	3942866	Argument	doc_comment		3942572	4					
ANR	3942867	Identifier	doc_comment		3942572	0					
ANR	3942868	ReturnType	void		3942572	1					
ANR	3942869	Identifier	zend_compile_prop_decl		3942572	2					
ANR	3942870	ParameterList	zend_ast * ast		3942572	3					
ANR	3942871	Parameter	zend_ast * ast	4913:28:144941:144953	3942572	0	True				
ANR	3942872	ParameterType	zend_ast *		3942572	0					
ANR	3942873	Identifier	ast		3942572	1					
ANR	3942874	CFGEntryNode	ENTRY		3942572		True				
ANR	3942875	CFGExitNode	EXIT		3942572		True				
ANR	3942876	Symbol	doc_comment		3942572						
ANR	3942877	Symbol	ast		3942572						
ANR	3942878	Symbol	doc_comment_ast		3942572						
ANR	3942879	Symbol	active_class_entry		3942572						
ANR	3942880	Symbol	E_COMPILE_ERROR		3942572						
ANR	3942881	Symbol	flags		3942572						
ANR	3942882	Symbol	* prop_ast -> child		3942572						
ANR	3942883	Symbol	zend_hash_exists		3942572						
ANR	3942884	Symbol	* ce		3942572						
ANR	3942885	Symbol	ZEND_ACC_FINAL		3942572						
ANR	3942886	Symbol	* * list		3942572						
ANR	3942887	Symbol	zend_ast_get_str		3942572						
ANR	3942888	Symbol	children		3942572						
ANR	3942889	Symbol	value_ast		3942572						
ANR	3942890	Symbol	ZEND_ACC_INTERFACE		3942572						
ANR	3942891	Symbol	ce -> name		3942572						
ANR	3942892	Symbol	prop_ast -> child		3942572						
ANR	3942893	Symbol	ce		3942572						
ANR	3942894	Symbol	NULL		3942572						
ANR	3942895	Symbol	& value_zv		3942572						
ANR	3942896	Symbol	list -> attr		3942572						
ANR	3942897	Symbol	CG		3942572						
ANR	3942898	Symbol	list -> child		3942572						
ANR	3942899	Symbol	zend_new_interned_string_safe		3942572						
ANR	3942900	Symbol	i		3942572						
ANR	3942901	Symbol	zend_string_copy		3942572						
ANR	3942902	Symbol	list		3942572						
ANR	3942903	Symbol	prop_ast		3942572						
ANR	3942904	Symbol	ZSTR_VAL		3942572						
ANR	3942905	Symbol	ce -> ce_flags		3942572						
ANR	3942906	Symbol	ZEND_ACC_ABSTRACT		3942572						
ANR	3942907	Symbol	zend_ast_get_list		3942572						
ANR	3942908	Symbol	* * prop_ast		3942572						
ANR	3942909	Symbol	* i		3942572						
ANR	3942910	Symbol	* list		3942572						
ANR	3942911	Symbol	& ce -> properties_info		3942572						
ANR	3942912	Symbol	name_ast		3942572						
ANR	3942913	Symbol	name		3942572						
ANR	3942914	Symbol	value_zv		3942572						
ANR	3942915	Symbol	* prop_ast		3942572						
ANR	3942916	Symbol	* list -> child		3942572						
ANR	3942917	Symbol	list -> children		3942572						
ANR	3942918	Function	zend_compile_class_const_decl	4965:0:146515:147614							
ANR	3942919	FunctionDef	zend_compile_class_const_decl (zend_ast * ast)		3942918	0					
ANR	3942920	CompoundStatement		4966:0:146575:147614	3942918	0					
ANR	3942921	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	4967:1:146578:146622	3942918	0	True				
ANR	3942922	IdentifierDecl	* list = zend_ast_get_list ( ast )		3942918	0					
ANR	3942923	IdentifierDeclType	zend_ast_list *		3942918	0					
ANR	3942924	Identifier	list		3942918	1					
ANR	3942925	AssignmentExpression	* list = zend_ast_get_list ( ast )		3942918	2		=			
ANR	3942926	Identifier	list		3942918	0					
ANR	3942927	CallExpression	zend_ast_get_list ( ast )		3942918	1					
ANR	3942928	Callee	zend_ast_get_list		3942918	0					
ANR	3942929	Identifier	zend_ast_get_list		3942918	0					
ANR	3942930	ArgumentList	ast		3942918	1					
ANR	3942931	Argument	ast		3942918	0					
ANR	3942932	Identifier	ast		3942918	0					
ANR	3942933	IdentifierDeclStatement	zend_class_entry * ce = CG ( active_class_entry ) ;	4968:1:146625:146670	3942918	1	True				
ANR	3942934	IdentifierDecl	* ce = CG ( active_class_entry )		3942918	0					
ANR	3942935	IdentifierDeclType	zend_class_entry *		3942918	0					
ANR	3942936	Identifier	ce		3942918	1					
ANR	3942937	AssignmentExpression	* ce = CG ( active_class_entry )		3942918	2		=			
ANR	3942938	Identifier	ce		3942918	0					
ANR	3942939	CallExpression	CG ( active_class_entry )		3942918	1					
ANR	3942940	Callee	CG		3942918	0					
ANR	3942941	Identifier	CG		3942918	0					
ANR	3942942	ArgumentList	active_class_entry		3942918	1					
ANR	3942943	Argument	active_class_entry		3942918	0					
ANR	3942944	Identifier	active_class_entry		3942918	0					
ANR	3942945	IdentifierDeclStatement	uint32_t i ;	4969:1:146673:146683	3942918	2	True				
ANR	3942946	IdentifierDecl	i		3942918	0					
ANR	3942947	IdentifierDeclType	uint32_t		3942918	0					
ANR	3942948	Identifier	i		3942918	1					
ANR	3942949	IfStatement	if ( ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0 )		3942918	3					
ANR	3942950	Condition	( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0	4971:5:146691:146726	3942918	0	True				
ANR	3942951	EqualityExpression	( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0		3942918	0		!=			
ANR	3942952	BitAndExpression	ce -> ce_flags & ZEND_ACC_TRAIT		3942918	0		&			
ANR	3942953	PtrMemberAccess	ce -> ce_flags		3942918	0					
ANR	3942954	Identifier	ce		3942918	0					
ANR	3942955	Identifier	ce_flags		3942918	1					
ANR	3942956	Identifier	ZEND_ACC_TRAIT		3942918	1					
ANR	3942957	PrimaryExpression	0		3942918	1					
ANR	3942958	CompoundStatement		6:43:153:153	3942918	1					
ANR	3942959	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Traits cannot have constants"" )"	4972:2:146733:146801	3942918	0	True				
ANR	3942960	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Traits cannot have constants"" )"		3942918	0					
ANR	3942961	Callee	zend_error_noreturn		3942918	0					
ANR	3942962	Identifier	zend_error_noreturn		3942918	0					
ANR	3942963	ArgumentList	E_COMPILE_ERROR		3942918	1					
ANR	3942964	Argument	E_COMPILE_ERROR		3942918	0					
ANR	3942965	Identifier	E_COMPILE_ERROR		3942918	0					
ANR	3942966	Argument	"""Traits cannot have constants"""		3942918	1					
ANR	3942967	PrimaryExpression	"""Traits cannot have constants"""		3942918	0					
ANR	3942968	ReturnStatement	return ;	4973:2:146805:146811	3942918	1	True				
ANR	3942969	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3942918	4					
ANR	3942970	ForInit	i = 0 ;	4976:6:146823:146828	3942918	0	True				
ANR	3942971	AssignmentExpression	i = 0		3942918	0		=			
ANR	3942972	Identifier	i		3942918	0					
ANR	3942973	PrimaryExpression	0		3942918	1					
ANR	3942974	Condition	i < list -> children	4976:13:146830:146847	3942918	1	True				
ANR	3942975	RelationalExpression	i < list -> children		3942918	0		<			
ANR	3942976	Identifier	i		3942918	0					
ANR	3942977	PtrMemberAccess	list -> children		3942918	1					
ANR	3942978	Identifier	list		3942918	0					
ANR	3942979	Identifier	children		3942918	1					
ANR	3942980	UnaryExpression	++ i	4976:33:146850:146852	3942918	2	True				
ANR	3942981	IncDec	++		3942918	0					
ANR	3942982	Identifier	i		3942918	1					
ANR	3942983	CompoundStatement		16:2:462:475	3942918	3					
ANR	3942984	IdentifierDeclStatement	zend_ast * const_ast = list -> child [ i ] ;	4977:2:146859:146895	3942918	0	True				
ANR	3942985	IdentifierDecl	* const_ast = list -> child [ i ]		3942918	0					
ANR	3942986	IdentifierDeclType	zend_ast *		3942918	0					
ANR	3942987	Identifier	const_ast		3942918	1					
ANR	3942988	AssignmentExpression	* const_ast = list -> child [ i ]		3942918	2		=			
ANR	3942989	Identifier	const_ast		3942918	0					
ANR	3942990	ArrayIndexing	list -> child [ i ]		3942918	1					
ANR	3942991	PtrMemberAccess	list -> child		3942918	0					
ANR	3942992	Identifier	list		3942918	0					
ANR	3942993	Identifier	child		3942918	1					
ANR	3942994	Identifier	i		3942918	1					
ANR	3942995	IdentifierDeclStatement	zend_ast * name_ast = const_ast -> child [ 0 ] ;	4978:2:146899:146939	3942918	1	True				
ANR	3942996	IdentifierDecl	* name_ast = const_ast -> child [ 0 ]		3942918	0					
ANR	3942997	IdentifierDeclType	zend_ast *		3942918	0					
ANR	3942998	Identifier	name_ast		3942918	1					
ANR	3942999	AssignmentExpression	* name_ast = const_ast -> child [ 0 ]		3942918	2		=			
ANR	3943000	Identifier	name_ast		3942918	0					
ANR	3943001	ArrayIndexing	const_ast -> child [ 0 ]		3942918	1					
ANR	3943002	PtrMemberAccess	const_ast -> child		3942918	0					
ANR	3943003	Identifier	const_ast		3942918	0					
ANR	3943004	Identifier	child		3942918	1					
ANR	3943005	PrimaryExpression	0		3942918	1					
ANR	3943006	IdentifierDeclStatement	zend_ast * value_ast = const_ast -> child [ 1 ] ;	4979:2:146943:146984	3942918	2	True				
ANR	3943007	IdentifierDecl	* value_ast = const_ast -> child [ 1 ]		3942918	0					
ANR	3943008	IdentifierDeclType	zend_ast *		3942918	0					
ANR	3943009	Identifier	value_ast		3942918	1					
ANR	3943010	AssignmentExpression	* value_ast = const_ast -> child [ 1 ]		3942918	2		=			
ANR	3943011	Identifier	value_ast		3942918	0					
ANR	3943012	ArrayIndexing	const_ast -> child [ 1 ]		3942918	1					
ANR	3943013	PtrMemberAccess	const_ast -> child		3942918	0					
ANR	3943014	Identifier	const_ast		3942918	0					
ANR	3943015	Identifier	child		3942918	1					
ANR	3943016	PrimaryExpression	1		3942918	1					
ANR	3943017	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( name_ast ) ;	4980:2:146988:147034	3942918	3	True				
ANR	3943018	IdentifierDecl	* name = zend_ast_get_str ( name_ast )		3942918	0					
ANR	3943019	IdentifierDeclType	zend_string *		3942918	0					
ANR	3943020	Identifier	name		3942918	1					
ANR	3943021	AssignmentExpression	* name = zend_ast_get_str ( name_ast )		3942918	2		=			
ANR	3943022	Identifier	name		3942918	0					
ANR	3943023	CallExpression	zend_ast_get_str ( name_ast )		3942918	1					
ANR	3943024	Callee	zend_ast_get_str		3942918	0					
ANR	3943025	Identifier	zend_ast_get_str		3942918	0					
ANR	3943026	ArgumentList	name_ast		3942918	1					
ANR	3943027	Argument	name_ast		3942918	0					
ANR	3943028	Identifier	name_ast		3942918	0					
ANR	3943029	IdentifierDeclStatement	zval value_zv ;	4981:2:147038:147051	3942918	4	True				
ANR	3943030	IdentifierDecl	value_zv		3942918	0					
ANR	3943031	IdentifierDeclType	zval		3942918	0					
ANR	3943032	Identifier	value_zv		3942918	1					
ANR	3943033	IfStatement	"if ( zend_string_equals_literal_ci ( name , ""class"" ) )"		3942918	5					
ANR	3943034	Condition	"zend_string_equals_literal_ci ( name , ""class"" )"	4983:6:147060:147103	3942918	0	True				
ANR	3943035	CallExpression	"zend_string_equals_literal_ci ( name , ""class"" )"		3942918	0					
ANR	3943036	Callee	zend_string_equals_literal_ci		3942918	0					
ANR	3943037	Identifier	zend_string_equals_literal_ci		3942918	0					
ANR	3943038	ArgumentList	name		3942918	1					
ANR	3943039	Argument	name		3942918	0					
ANR	3943040	Identifier	name		3942918	0					
ANR	3943041	Argument	"""class"""		3942918	1					
ANR	3943042	PrimaryExpression	"""class"""		3942918	0					
ANR	3943043	CompoundStatement		18:52:530:530	3942918	1					
ANR	3943044	ExpressionStatement	"zend_error ( E_COMPILE_ERROR , ""A class constant must not be called 'class'; it is reserved for class name fetching"" )"	4984:3:147111:147229	3942918	0	True				
ANR	3943045	CallExpression	"zend_error ( E_COMPILE_ERROR , ""A class constant must not be called 'class'; it is reserved for class name fetching"" )"		3942918	0					
ANR	3943046	Callee	zend_error		3942918	0					
ANR	3943047	Identifier	zend_error		3942918	0					
ANR	3943048	ArgumentList	E_COMPILE_ERROR		3942918	1					
ANR	3943049	Argument	E_COMPILE_ERROR		3942918	0					
ANR	3943050	Identifier	E_COMPILE_ERROR		3942918	0					
ANR	3943051	Argument	"""A class constant must not be called 'class'; it is reserved for class name fetching"""		3942918	1					
ANR	3943052	PrimaryExpression	"""A class constant must not be called 'class'; it is reserved for class name fetching"""		3942918	0					
ANR	3943053	ExpressionStatement	"zend_const_expr_to_zval ( & value_zv , value_ast )"	4988:2:147238:147283	3942918	6	True				
ANR	3943054	CallExpression	"zend_const_expr_to_zval ( & value_zv , value_ast )"		3942918	0					
ANR	3943055	Callee	zend_const_expr_to_zval		3942918	0					
ANR	3943056	Identifier	zend_const_expr_to_zval		3942918	0					
ANR	3943057	ArgumentList	& value_zv		3942918	1					
ANR	3943058	Argument	& value_zv		3942918	0					
ANR	3943059	UnaryOperationExpression	& value_zv		3942918	0					
ANR	3943060	UnaryOperator	&		3942918	0					
ANR	3943061	Identifier	value_zv		3942918	1					
ANR	3943062	Argument	value_ast		3942918	1					
ANR	3943063	Identifier	value_ast		3942918	0					
ANR	3943064	ExpressionStatement	name = zend_new_interned_string_safe ( name )	4990:2:147288:147330	3942918	7	True				
ANR	3943065	AssignmentExpression	name = zend_new_interned_string_safe ( name )		3942918	0		=			
ANR	3943066	Identifier	name		3942918	0					
ANR	3943067	CallExpression	zend_new_interned_string_safe ( name )		3942918	1					
ANR	3943068	Callee	zend_new_interned_string_safe		3942918	0					
ANR	3943069	Identifier	zend_new_interned_string_safe		3942918	0					
ANR	3943070	ArgumentList	name		3942918	1					
ANR	3943071	Argument	name		3942918	0					
ANR	3943072	Identifier	name		3942918	0					
ANR	3943073	IfStatement	"if ( zend_hash_add ( & ce -> constants_table , name , & value_zv ) == NULL )"		3942918	8					
ANR	3943074	Condition	"zend_hash_add ( & ce -> constants_table , name , & value_zv ) == NULL"	4991:6:147338:147397	3942918	0	True				
ANR	3943075	EqualityExpression	"zend_hash_add ( & ce -> constants_table , name , & value_zv ) == NULL"		3942918	0		==			
ANR	3943076	CallExpression	"zend_hash_add ( & ce -> constants_table , name , & value_zv )"		3942918	0					
ANR	3943077	Callee	zend_hash_add		3942918	0					
ANR	3943078	Identifier	zend_hash_add		3942918	0					
ANR	3943079	ArgumentList	& ce -> constants_table		3942918	1					
ANR	3943080	Argument	& ce -> constants_table		3942918	0					
ANR	3943081	UnaryOperationExpression	& ce -> constants_table		3942918	0					
ANR	3943082	UnaryOperator	&		3942918	0					
ANR	3943083	PtrMemberAccess	ce -> constants_table		3942918	1					
ANR	3943084	Identifier	ce		3942918	0					
ANR	3943085	Identifier	constants_table		3942918	1					
ANR	3943086	Argument	name		3942918	1					
ANR	3943087	Identifier	name		3942918	0					
ANR	3943088	Argument	& value_zv		3942918	2					
ANR	3943089	UnaryOperationExpression	& value_zv		3942918	0					
ANR	3943090	UnaryOperator	&		3942918	0					
ANR	3943091	Identifier	value_zv		3942918	1					
ANR	3943092	Identifier	NULL		3942918	1					
ANR	3943093	CompoundStatement		26:68:824:824	3942918	1					
ANR	3943094	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redefine class constant %s::%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4992:3:147405:147522	3942918	0	True				
ANR	3943095	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redefine class constant %s::%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		3942918	0					
ANR	3943096	Callee	zend_error_noreturn		3942918	0					
ANR	3943097	Identifier	zend_error_noreturn		3942918	0					
ANR	3943098	ArgumentList	E_COMPILE_ERROR		3942918	1					
ANR	3943099	Argument	E_COMPILE_ERROR		3942918	0					
ANR	3943100	Identifier	E_COMPILE_ERROR		3942918	0					
ANR	3943101	Argument	"""Cannot redefine class constant %s::%s"""		3942918	1					
ANR	3943102	PrimaryExpression	"""Cannot redefine class constant %s::%s"""		3942918	0					
ANR	3943103	Argument	ZSTR_VAL ( ce -> name )		3942918	2					
ANR	3943104	CallExpression	ZSTR_VAL ( ce -> name )		3942918	0					
ANR	3943105	Callee	ZSTR_VAL		3942918	0					
ANR	3943106	Identifier	ZSTR_VAL		3942918	0					
ANR	3943107	ArgumentList	ce -> name		3942918	1					
ANR	3943108	Argument	ce -> name		3942918	0					
ANR	3943109	PtrMemberAccess	ce -> name		3942918	0					
ANR	3943110	Identifier	ce		3942918	0					
ANR	3943111	Identifier	name		3942918	1					
ANR	3943112	Argument	ZSTR_VAL ( name )		3942918	3					
ANR	3943113	CallExpression	ZSTR_VAL ( name )		3942918	0					
ANR	3943114	Callee	ZSTR_VAL		3942918	0					
ANR	3943115	Identifier	ZSTR_VAL		3942918	0					
ANR	3943116	ArgumentList	name		3942918	1					
ANR	3943117	Argument	name		3942918	0					
ANR	3943118	Identifier	name		3942918	0					
ANR	3943119	IfStatement	if ( Z_CONSTANT ( value_zv ) )		3942918	9					
ANR	3943120	Condition	Z_CONSTANT ( value_zv )	4996:6:147535:147554	3942918	0	True				
ANR	3943121	CallExpression	Z_CONSTANT ( value_zv )		3942918	0					
ANR	3943122	Callee	Z_CONSTANT		3942918	0					
ANR	3943123	Identifier	Z_CONSTANT		3942918	0					
ANR	3943124	ArgumentList	value_zv		3942918	1					
ANR	3943125	Argument	value_zv		3942918	0					
ANR	3943126	Identifier	value_zv		3942918	0					
ANR	3943127	CompoundStatement		31:28:981:981	3942918	1					
ANR	3943128	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	4997:3:147562:147605	3942918	0	True				
ANR	3943129	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		3942918	0		&=			
ANR	3943130	PtrMemberAccess	ce -> ce_flags		3942918	0					
ANR	3943131	Identifier	ce		3942918	0					
ANR	3943132	Identifier	ce_flags		3942918	1					
ANR	3943133	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		3942918	1					
ANR	3943134	ReturnType	void		3942918	1					
ANR	3943135	Identifier	zend_compile_class_const_decl		3942918	2					
ANR	3943136	ParameterList	zend_ast * ast		3942918	3					
ANR	3943137	Parameter	zend_ast * ast	4965:35:146550:146562	3942918	0	True				
ANR	3943138	ParameterType	zend_ast *		3942918	0					
ANR	3943139	Identifier	ast		3942918	1					
ANR	3943140	CFGEntryNode	ENTRY		3942918		True				
ANR	3943141	CFGExitNode	EXIT		3942918		True				
ANR	3943142	Symbol	* * const_ast		3942918						
ANR	3943143	Symbol	const_ast -> child		3942918						
ANR	3943144	Symbol	ast		3942918						
ANR	3943145	Symbol	active_class_entry		3942918						
ANR	3943146	Symbol	E_COMPILE_ERROR		3942918						
ANR	3943147	Symbol	* ce		3942918						
ANR	3943148	Symbol	* * list		3942918						
ANR	3943149	Symbol	zend_ast_get_str		3942918						
ANR	3943150	Symbol	value_ast		3942918						
ANR	3943151	Symbol	ce -> name		3942918						
ANR	3943152	Symbol	ce		3942918						
ANR	3943153	Symbol	* const_ast -> child		3942918						
ANR	3943154	Symbol	& value_zv		3942918						
ANR	3943155	Symbol	NULL		3942918						
ANR	3943156	Symbol	CG		3942918						
ANR	3943157	Symbol	list -> child		3942918						
ANR	3943158	Symbol	zend_new_interned_string_safe		3942918						
ANR	3943159	Symbol	i		3942918						
ANR	3943160	Symbol	list		3942918						
ANR	3943161	Symbol	Z_CONSTANT		3942918						
ANR	3943162	Symbol	ZEND_ACC_TRAIT		3942918						
ANR	3943163	Symbol	zend_string_equals_literal_ci		3942918						
ANR	3943164	Symbol	ZSTR_VAL		3942918						
ANR	3943165	Symbol	ce -> ce_flags		3942918						
ANR	3943166	Symbol	zend_ast_get_list		3942918						
ANR	3943167	Symbol	& ce -> constants_table		3942918						
ANR	3943168	Symbol	* i		3942918						
ANR	3943169	Symbol	* list		3942918						
ANR	3943170	Symbol	const_ast		3942918						
ANR	3943171	Symbol	zend_hash_add		3942918						
ANR	3943172	Symbol	* const_ast		3942918						
ANR	3943173	Symbol	name_ast		3942918						
ANR	3943174	Symbol	name		3942918						
ANR	3943175	Symbol	value_zv		3942918						
ANR	3943176	Symbol	* list -> child		3942918						
ANR	3943177	Symbol	list -> children		3942918						
ANR	3943178	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		3942918						
ANR	3943179	Function	zend_compile_method_ref	5003:0:147627:148133							
ANR	3943180	FunctionDef	zend_compile_method_ref (zend_ast * ast)		3943179	0					
ANR	3943181	CompoundStatement		5004:0:147712:148133	3943179	0					
ANR	3943182	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 0 ] ;	5005:1:147715:147750	3943179	0	True				
ANR	3943183	IdentifierDecl	* class_ast = ast -> child [ 0 ]		3943179	0					
ANR	3943184	IdentifierDeclType	zend_ast *		3943179	0					
ANR	3943185	Identifier	class_ast		3943179	1					
ANR	3943186	AssignmentExpression	* class_ast = ast -> child [ 0 ]		3943179	2		=			
ANR	3943187	Identifier	class_ast		3943179	0					
ANR	3943188	ArrayIndexing	ast -> child [ 0 ]		3943179	1					
ANR	3943189	PtrMemberAccess	ast -> child		3943179	0					
ANR	3943190	Identifier	ast		3943179	0					
ANR	3943191	Identifier	child		3943179	1					
ANR	3943192	PrimaryExpression	0		3943179	1					
ANR	3943193	IdentifierDeclStatement	zend_ast * method_ast = ast -> child [ 1 ] ;	5006:1:147753:147789	3943179	1	True				
ANR	3943194	IdentifierDecl	* method_ast = ast -> child [ 1 ]		3943179	0					
ANR	3943195	IdentifierDeclType	zend_ast *		3943179	0					
ANR	3943196	Identifier	method_ast		3943179	1					
ANR	3943197	AssignmentExpression	* method_ast = ast -> child [ 1 ]		3943179	2		=			
ANR	3943198	Identifier	method_ast		3943179	0					
ANR	3943199	ArrayIndexing	ast -> child [ 1 ]		3943179	1					
ANR	3943200	PtrMemberAccess	ast -> child		3943179	0					
ANR	3943201	Identifier	ast		3943179	0					
ANR	3943202	Identifier	child		3943179	1					
ANR	3943203	PrimaryExpression	1		3943179	1					
ANR	3943204	IdentifierDeclStatement	zend_trait_method_reference * method_ref = emalloc ( sizeof ( zend_trait_method_reference ) ) ;	5008:1:147793:147879	3943179	2	True				
ANR	3943205	IdentifierDecl	* method_ref = emalloc ( sizeof ( zend_trait_method_reference ) )		3943179	0					
ANR	3943206	IdentifierDeclType	zend_trait_method_reference *		3943179	0					
ANR	3943207	Identifier	method_ref		3943179	1					
ANR	3943208	AssignmentExpression	* method_ref = emalloc ( sizeof ( zend_trait_method_reference ) )		3943179	2		=			
ANR	3943209	Identifier	method_ref		3943179	0					
ANR	3943210	CallExpression	emalloc ( sizeof ( zend_trait_method_reference ) )		3943179	1					
ANR	3943211	Callee	emalloc		3943179	0					
ANR	3943212	Identifier	emalloc		3943179	0					
ANR	3943213	ArgumentList	sizeof ( zend_trait_method_reference )		3943179	1					
ANR	3943214	Argument	sizeof ( zend_trait_method_reference )		3943179	0					
ANR	3943215	SizeofExpression	sizeof ( zend_trait_method_reference )		3943179	0					
ANR	3943216	Sizeof	sizeof		3943179	0					
ANR	3943217	SizeofOperand	zend_trait_method_reference		3943179	1					
ANR	3943218	ExpressionStatement	method_ref -> ce = NULL	5009:1:147882:147903	3943179	3	True				
ANR	3943219	AssignmentExpression	method_ref -> ce = NULL		3943179	0		=			
ANR	3943220	PtrMemberAccess	method_ref -> ce		3943179	0					
ANR	3943221	Identifier	method_ref		3943179	0					
ANR	3943222	Identifier	ce		3943179	1					
ANR	3943223	Identifier	NULL		3943179	1					
ANR	3943224	ExpressionStatement	method_ref -> method_name = zend_string_copy ( zend_ast_get_str ( method_ast ) )	5010:1:147906:147978	3943179	4	True				
ANR	3943225	AssignmentExpression	method_ref -> method_name = zend_string_copy ( zend_ast_get_str ( method_ast ) )		3943179	0		=			
ANR	3943226	PtrMemberAccess	method_ref -> method_name		3943179	0					
ANR	3943227	Identifier	method_ref		3943179	0					
ANR	3943228	Identifier	method_name		3943179	1					
ANR	3943229	CallExpression	zend_string_copy ( zend_ast_get_str ( method_ast ) )		3943179	1					
ANR	3943230	Callee	zend_string_copy		3943179	0					
ANR	3943231	Identifier	zend_string_copy		3943179	0					
ANR	3943232	ArgumentList	zend_ast_get_str ( method_ast )		3943179	1					
ANR	3943233	Argument	zend_ast_get_str ( method_ast )		3943179	0					
ANR	3943234	CallExpression	zend_ast_get_str ( method_ast )		3943179	0					
ANR	3943235	Callee	zend_ast_get_str		3943179	0					
ANR	3943236	Identifier	zend_ast_get_str		3943179	0					
ANR	3943237	ArgumentList	method_ast		3943179	1					
ANR	3943238	Argument	method_ast		3943179	0					
ANR	3943239	Identifier	method_ast		3943179	0					
ANR	3943240	IfStatement	if ( class_ast )		3943179	5					
ANR	3943241	Condition	class_ast	5012:5:147986:147994	3943179	0	True				
ANR	3943242	Identifier	class_ast		3943179	0					
ANR	3943243	CompoundStatement		9:16:284:284	3943179	1					
ANR	3943244	ExpressionStatement	method_ref -> class_name = zend_resolve_class_name_ast ( class_ast )	5013:2:148001:148064	3943179	0	True				
ANR	3943245	AssignmentExpression	method_ref -> class_name = zend_resolve_class_name_ast ( class_ast )		3943179	0		=			
ANR	3943246	PtrMemberAccess	method_ref -> class_name		3943179	0					
ANR	3943247	Identifier	method_ref		3943179	0					
ANR	3943248	Identifier	class_name		3943179	1					
ANR	3943249	CallExpression	zend_resolve_class_name_ast ( class_ast )		3943179	1					
ANR	3943250	Callee	zend_resolve_class_name_ast		3943179	0					
ANR	3943251	Identifier	zend_resolve_class_name_ast		3943179	0					
ANR	3943252	ArgumentList	class_ast		3943179	1					
ANR	3943253	Argument	class_ast		3943179	0					
ANR	3943254	Identifier	class_ast		3943179	0					
ANR	3943255	ElseStatement	else		3943179	0					
ANR	3943256	CompoundStatement		11:8:361:361	3943179	0					
ANR	3943257	ExpressionStatement	method_ref -> class_name = NULL	5015:2:148078:148107	3943179	0	True				
ANR	3943258	AssignmentExpression	method_ref -> class_name = NULL		3943179	0		=			
ANR	3943259	PtrMemberAccess	method_ref -> class_name		3943179	0					
ANR	3943260	Identifier	method_ref		3943179	0					
ANR	3943261	Identifier	class_name		3943179	1					
ANR	3943262	Identifier	NULL		3943179	1					
ANR	3943263	ReturnStatement	return method_ref ;	5018:1:148114:148131	3943179	6	True				
ANR	3943264	Identifier	method_ref		3943179	0					
ANR	3943265	ReturnType	static zend_trait_method_reference *		3943179	1					
ANR	3943266	Identifier	zend_compile_method_ref		3943179	2					
ANR	3943267	ParameterList	zend_ast * ast		3943179	3					
ANR	3943268	Parameter	zend_ast * ast	5003:60:147687:147699	3943179	0	True				
ANR	3943269	ParameterType	zend_ast *		3943179	0					
ANR	3943270	Identifier	ast		3943179	1					
ANR	3943271	CFGEntryNode	ENTRY		3943179		True				
ANR	3943272	CFGExitNode	EXIT		3943179		True				
ANR	3943273	Symbol	ast		3943179						
ANR	3943274	Symbol	* method_ref		3943179						
ANR	3943275	Symbol	NULL		3943179						
ANR	3943276	Symbol	zend_resolve_class_name_ast		3943179						
ANR	3943277	Symbol	method_ref -> ce		3943179						
ANR	3943278	Symbol	method_ast		3943179						
ANR	3943279	Symbol	method_ref -> class_name		3943179						
ANR	3943280	Symbol	class_ast		3943179						
ANR	3943281	Symbol	zend_string_copy		3943179						
ANR	3943282	Symbol	emalloc		3943179						
ANR	3943283	Symbol	* ast		3943179						
ANR	3943284	Symbol	zend_ast_get_str		3943179						
ANR	3943285	Symbol	method_ref -> method_name		3943179						
ANR	3943286	Symbol	* * ast		3943179						
ANR	3943287	Symbol	method_ref		3943179						
ANR	3943288	Symbol	* ast -> child		3943179						
ANR	3943289	Symbol	ast -> child		3943179						
ANR	3943290	Function	zend_compile_name_list	5022:0:148146:148543							
ANR	3943291	FunctionDef	zend_compile_name_list (zend_ast * ast)		3943290	0					
ANR	3943292	CompoundStatement		5023:0:148215:148543	3943290	0					
ANR	3943293	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	5024:1:148218:148262	3943290	0	True				
ANR	3943294	IdentifierDecl	* list = zend_ast_get_list ( ast )		3943290	0					
ANR	3943295	IdentifierDeclType	zend_ast_list *		3943290	0					
ANR	3943296	Identifier	list		3943290	1					
ANR	3943297	AssignmentExpression	* list = zend_ast_get_list ( ast )		3943290	2		=			
ANR	3943298	Identifier	list		3943290	0					
ANR	3943299	CallExpression	zend_ast_get_list ( ast )		3943290	1					
ANR	3943300	Callee	zend_ast_get_list		3943290	0					
ANR	3943301	Identifier	zend_ast_get_list		3943290	0					
ANR	3943302	ArgumentList	ast		3943290	1					
ANR	3943303	Argument	ast		3943290	0					
ANR	3943304	Identifier	ast		3943290	0					
ANR	3943305	IdentifierDeclStatement	"zend_string * * names = safe_emalloc ( sizeof ( zend_string * ) , list -> children + 1 , 0 ) ;"	5025:1:148265:148345	3943290	1	True				
ANR	3943306	IdentifierDecl	"* * names = safe_emalloc ( sizeof ( zend_string * ) , list -> children + 1 , 0 )"		3943290	0					
ANR	3943307	IdentifierDeclType	zend_string * *		3943290	0					
ANR	3943308	Identifier	names		3943290	1					
ANR	3943309	AssignmentExpression	"* * names = safe_emalloc ( sizeof ( zend_string * ) , list -> children + 1 , 0 )"		3943290	2		=			
ANR	3943310	Identifier	names		3943290	0					
ANR	3943311	CallExpression	"safe_emalloc ( sizeof ( zend_string * ) , list -> children + 1 , 0 )"		3943290	1					
ANR	3943312	Callee	safe_emalloc		3943290	0					
ANR	3943313	Identifier	safe_emalloc		3943290	0					
ANR	3943314	ArgumentList	sizeof ( zend_string * )		3943290	1					
ANR	3943315	Argument	sizeof ( zend_string * )		3943290	0					
ANR	3943316	SizeofExpression	sizeof ( zend_string * )		3943290	0					
ANR	3943317	Sizeof	sizeof		3943290	0					
ANR	3943318	SizeofOperand	zend_string *		3943290	1					
ANR	3943319	Argument	list -> children + 1		3943290	1					
ANR	3943320	AdditiveExpression	list -> children + 1		3943290	0		+			
ANR	3943321	PtrMemberAccess	list -> children		3943290	0					
ANR	3943322	Identifier	list		3943290	0					
ANR	3943323	Identifier	children		3943290	1					
ANR	3943324	PrimaryExpression	1		3943290	1					
ANR	3943325	Argument	0		3943290	2					
ANR	3943326	PrimaryExpression	0		3943290	0					
ANR	3943327	IdentifierDeclStatement	uint32_t i ;	5026:1:148348:148358	3943290	2	True				
ANR	3943328	IdentifierDecl	i		3943290	0					
ANR	3943329	IdentifierDeclType	uint32_t		3943290	0					
ANR	3943330	Identifier	i		3943290	1					
ANR	3943331	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3943290	3					
ANR	3943332	ForInit	i = 0 ;	5028:6:148367:148372	3943290	0	True				
ANR	3943333	AssignmentExpression	i = 0		3943290	0		=			
ANR	3943334	Identifier	i		3943290	0					
ANR	3943335	PrimaryExpression	0		3943290	1					
ANR	3943336	Condition	i < list -> children	5028:13:148374:148391	3943290	1	True				
ANR	3943337	RelationalExpression	i < list -> children		3943290	0		<			
ANR	3943338	Identifier	i		3943290	0					
ANR	3943339	PtrMemberAccess	list -> children		3943290	1					
ANR	3943340	Identifier	list		3943290	0					
ANR	3943341	Identifier	children		3943290	1					
ANR	3943342	UnaryExpression	++ i	5028:33:148394:148396	3943290	2	True				
ANR	3943343	IncDec	++		3943290	0					
ANR	3943344	Identifier	i		3943290	1					
ANR	3943345	CompoundStatement		7:2:187:222	3943290	3					
ANR	3943346	IdentifierDeclStatement	zend_ast * name_ast = list -> child [ i ] ;	5029:2:148403:148438	3943290	0	True				
ANR	3943347	IdentifierDecl	* name_ast = list -> child [ i ]		3943290	0					
ANR	3943348	IdentifierDeclType	zend_ast *		3943290	0					
ANR	3943349	Identifier	name_ast		3943290	1					
ANR	3943350	AssignmentExpression	* name_ast = list -> child [ i ]		3943290	2		=			
ANR	3943351	Identifier	name_ast		3943290	0					
ANR	3943352	ArrayIndexing	list -> child [ i ]		3943290	1					
ANR	3943353	PtrMemberAccess	list -> child		3943290	0					
ANR	3943354	Identifier	list		3943290	0					
ANR	3943355	Identifier	child		3943290	1					
ANR	3943356	Identifier	i		3943290	1					
ANR	3943357	ExpressionStatement	names [ i ] = zend_resolve_class_name_ast ( name_ast )	5030:2:148442:148490	3943290	1	True				
ANR	3943358	AssignmentExpression	names [ i ] = zend_resolve_class_name_ast ( name_ast )		3943290	0		=			
ANR	3943359	ArrayIndexing	names [ i ]		3943290	0					
ANR	3943360	Identifier	names		3943290	0					
ANR	3943361	Identifier	i		3943290	1					
ANR	3943362	CallExpression	zend_resolve_class_name_ast ( name_ast )		3943290	1					
ANR	3943363	Callee	zend_resolve_class_name_ast		3943290	0					
ANR	3943364	Identifier	zend_resolve_class_name_ast		3943290	0					
ANR	3943365	ArgumentList	name_ast		3943290	1					
ANR	3943366	Argument	name_ast		3943290	0					
ANR	3943367	Identifier	name_ast		3943290	0					
ANR	3943368	ExpressionStatement	names [ list -> children ] = NULL	5033:1:148497:148525	3943290	4	True				
ANR	3943369	AssignmentExpression	names [ list -> children ] = NULL		3943290	0		=			
ANR	3943370	ArrayIndexing	names [ list -> children ]		3943290	0					
ANR	3943371	Identifier	names		3943290	0					
ANR	3943372	PtrMemberAccess	list -> children		3943290	1					
ANR	3943373	Identifier	list		3943290	0					
ANR	3943374	Identifier	children		3943290	1					
ANR	3943375	Identifier	NULL		3943290	1					
ANR	3943376	ReturnStatement	return names ;	5035:1:148529:148541	3943290	5	True				
ANR	3943377	Identifier	names		3943290	0					
ANR	3943378	ReturnType	static zend_string * *		3943290	1					
ANR	3943379	Identifier	zend_compile_name_list		3943290	2					
ANR	3943380	ParameterList	zend_ast * ast		3943290	3					
ANR	3943381	Parameter	zend_ast * ast	5022:44:148190:148202	3943290	0	True				
ANR	3943382	ParameterType	zend_ast *		3943290	0					
ANR	3943383	Identifier	ast		3943290	1					
ANR	3943384	CFGEntryNode	ENTRY		3943290		True				
ANR	3943385	CFGExitNode	EXIT		3943290		True				
ANR	3943386	Symbol	ast		3943290						
ANR	3943387	Symbol	NULL		3943290						
ANR	3943388	Symbol	list -> child		3943290						
ANR	3943389	Symbol	zend_resolve_class_name_ast		3943290						
ANR	3943390	Symbol	i		3943290						
ANR	3943391	Symbol	list		3943290						
ANR	3943392	Symbol	* names		3943290						
ANR	3943393	Symbol	zend_ast_get_list		3943290						
ANR	3943394	Symbol	names		3943290						
ANR	3943395	Symbol	* * list		3943290						
ANR	3943396	Symbol	* i		3943290						
ANR	3943397	Symbol	* list		3943290						
ANR	3943398	Symbol	name_ast		3943290						
ANR	3943399	Symbol	* list -> child		3943290						
ANR	3943400	Symbol	safe_emalloc		3943290						
ANR	3943401	Symbol	list -> children		3943290						
ANR	3943402	Symbol	* list -> children		3943290						
ANR	3943403	Function	zend_compile_trait_precedence	5039:0:148556:149019							
ANR	3943404	FunctionDef	zend_compile_trait_precedence (zend_ast * ast)		3943403	0					
ANR	3943405	CompoundStatement		5040:0:148623:149019	3943403	0					
ANR	3943406	IdentifierDeclStatement	zend_ast * method_ref_ast = ast -> child [ 0 ] ;	5041:1:148626:148666	3943403	0	True				
ANR	3943407	IdentifierDecl	* method_ref_ast = ast -> child [ 0 ]		3943403	0					
ANR	3943408	IdentifierDeclType	zend_ast *		3943403	0					
ANR	3943409	Identifier	method_ref_ast		3943403	1					
ANR	3943410	AssignmentExpression	* method_ref_ast = ast -> child [ 0 ]		3943403	2		=			
ANR	3943411	Identifier	method_ref_ast		3943403	0					
ANR	3943412	ArrayIndexing	ast -> child [ 0 ]		3943403	1					
ANR	3943413	PtrMemberAccess	ast -> child		3943403	0					
ANR	3943414	Identifier	ast		3943403	0					
ANR	3943415	Identifier	child		3943403	1					
ANR	3943416	PrimaryExpression	0		3943403	1					
ANR	3943417	IdentifierDeclStatement	zend_ast * insteadof_ast = ast -> child [ 1 ] ;	5042:1:148669:148708	3943403	1	True				
ANR	3943418	IdentifierDecl	* insteadof_ast = ast -> child [ 1 ]		3943403	0					
ANR	3943419	IdentifierDeclType	zend_ast *		3943403	0					
ANR	3943420	Identifier	insteadof_ast		3943403	1					
ANR	3943421	AssignmentExpression	* insteadof_ast = ast -> child [ 1 ]		3943403	2		=			
ANR	3943422	Identifier	insteadof_ast		3943403	0					
ANR	3943423	ArrayIndexing	ast -> child [ 1 ]		3943403	1					
ANR	3943424	PtrMemberAccess	ast -> child		3943403	0					
ANR	3943425	Identifier	ast		3943403	0					
ANR	3943426	Identifier	child		3943403	1					
ANR	3943427	PrimaryExpression	1		3943403	1					
ANR	3943428	IdentifierDeclStatement	zend_trait_precedence * precedence = emalloc ( sizeof ( zend_trait_precedence ) ) ;	5044:1:148712:148786	3943403	2	True				
ANR	3943429	IdentifierDecl	* precedence = emalloc ( sizeof ( zend_trait_precedence ) )		3943403	0					
ANR	3943430	IdentifierDeclType	zend_trait_precedence *		3943403	0					
ANR	3943431	Identifier	precedence		3943403	1					
ANR	3943432	AssignmentExpression	* precedence = emalloc ( sizeof ( zend_trait_precedence ) )		3943403	2		=			
ANR	3943433	Identifier	precedence		3943403	0					
ANR	3943434	CallExpression	emalloc ( sizeof ( zend_trait_precedence ) )		3943403	1					
ANR	3943435	Callee	emalloc		3943403	0					
ANR	3943436	Identifier	emalloc		3943403	0					
ANR	3943437	ArgumentList	sizeof ( zend_trait_precedence )		3943403	1					
ANR	3943438	Argument	sizeof ( zend_trait_precedence )		3943403	0					
ANR	3943439	SizeofExpression	sizeof ( zend_trait_precedence )		3943403	0					
ANR	3943440	Sizeof	sizeof		3943403	0					
ANR	3943441	SizeofOperand	zend_trait_precedence		3943403	1					
ANR	3943442	ExpressionStatement	precedence -> trait_method = zend_compile_method_ref ( method_ref_ast )	5045:1:148789:148855	3943403	3	True				
ANR	3943443	AssignmentExpression	precedence -> trait_method = zend_compile_method_ref ( method_ref_ast )		3943403	0		=			
ANR	3943444	PtrMemberAccess	precedence -> trait_method		3943403	0					
ANR	3943445	Identifier	precedence		3943403	0					
ANR	3943446	Identifier	trait_method		3943403	1					
ANR	3943447	CallExpression	zend_compile_method_ref ( method_ref_ast )		3943403	1					
ANR	3943448	Callee	zend_compile_method_ref		3943403	0					
ANR	3943449	Identifier	zend_compile_method_ref		3943403	0					
ANR	3943450	ArgumentList	method_ref_ast		3943403	1					
ANR	3943451	Argument	method_ref_ast		3943403	0					
ANR	3943452	Identifier	method_ref_ast		3943403	0					
ANR	3943453	ExpressionStatement	precedence -> exclude_from_classes = ( void * ) zend_compile_name_list ( insteadof_ast )	5046:1:148858:148941	3943403	4	True				
ANR	3943454	AssignmentExpression	precedence -> exclude_from_classes = ( void * ) zend_compile_name_list ( insteadof_ast )		3943403	0		=			
ANR	3943455	PtrMemberAccess	precedence -> exclude_from_classes		3943403	0					
ANR	3943456	Identifier	precedence		3943403	0					
ANR	3943457	Identifier	exclude_from_classes		3943403	1					
ANR	3943458	CastExpression	( void * ) zend_compile_name_list ( insteadof_ast )		3943403	1					
ANR	3943459	CastTarget	void *		3943403	0					
ANR	3943460	CallExpression	zend_compile_name_list ( insteadof_ast )		3943403	1					
ANR	3943461	Callee	zend_compile_name_list		3943403	0					
ANR	3943462	Identifier	zend_compile_name_list		3943403	0					
ANR	3943463	ArgumentList	insteadof_ast		3943403	1					
ANR	3943464	Argument	insteadof_ast		3943403	0					
ANR	3943465	Identifier	insteadof_ast		3943403	0					
ANR	3943466	ExpressionStatement	"zend_add_to_list ( & CG ( active_class_entry ) -> trait_precedences , precedence )"	5049:1:148945:149017	3943403	5	True				
ANR	3943467	CallExpression	"zend_add_to_list ( & CG ( active_class_entry ) -> trait_precedences , precedence )"		3943403	0					
ANR	3943468	Callee	zend_add_to_list		3943403	0					
ANR	3943469	Identifier	zend_add_to_list		3943403	0					
ANR	3943470	ArgumentList	& CG ( active_class_entry ) -> trait_precedences		3943403	1					
ANR	3943471	Argument	& CG ( active_class_entry ) -> trait_precedences		3943403	0					
ANR	3943472	UnaryOperationExpression	& CG ( active_class_entry ) -> trait_precedences		3943403	0					
ANR	3943473	UnaryOperator	&		3943403	0					
ANR	3943474	PtrMemberAccess	CG ( active_class_entry ) -> trait_precedences		3943403	1					
ANR	3943475	CallExpression	CG ( active_class_entry )		3943403	0					
ANR	3943476	Callee	CG		3943403	0					
ANR	3943477	Identifier	CG		3943403	0					
ANR	3943478	ArgumentList	active_class_entry		3943403	1					
ANR	3943479	Argument	active_class_entry		3943403	0					
ANR	3943480	Identifier	active_class_entry		3943403	0					
ANR	3943481	Identifier	trait_precedences		3943403	1					
ANR	3943482	Argument	precedence		3943403	1					
ANR	3943483	Identifier	precedence		3943403	0					
ANR	3943484	ReturnType	static void		3943403	1					
ANR	3943485	Identifier	zend_compile_trait_precedence		3943403	2					
ANR	3943486	ParameterList	zend_ast * ast		3943403	3					
ANR	3943487	Parameter	zend_ast * ast	5039:42:148598:148610	3943403	0	True				
ANR	3943488	ParameterType	zend_ast *		3943403	0					
ANR	3943489	Identifier	ast		3943403	1					
ANR	3943490	CFGEntryNode	ENTRY		3943403		True				
ANR	3943491	CFGExitNode	EXIT		3943403		True				
ANR	3943492	Symbol	* precedence		3943403						
ANR	3943493	Symbol	zend_compile_method_ref		3943403						
ANR	3943494	Symbol	ast		3943403						
ANR	3943495	Symbol	CG		3943403						
ANR	3943496	Symbol	& CG ( active_class_entry ) -> trait_precedences		3943403						
ANR	3943497	Symbol	active_class_entry		3943403						
ANR	3943498	Symbol	precedence -> trait_method		3943403						
ANR	3943499	Symbol	precedence -> exclude_from_classes		3943403						
ANR	3943500	Symbol	method_ref_ast		3943403						
ANR	3943501	Symbol	precedence		3943403						
ANR	3943502	Symbol	zend_compile_name_list		3943403						
ANR	3943503	Symbol	emalloc		3943403						
ANR	3943504	Symbol	* ast		3943403						
ANR	3943505	Symbol	* * ast		3943403						
ANR	3943506	Symbol	insteadof_ast		3943403						
ANR	3943507	Symbol	* ast -> child		3943403						
ANR	3943508	Symbol	ast -> child		3943403						
ANR	3943509	Function	zend_compile_trait_alias	5053:0:149032:149940							
ANR	3943510	FunctionDef	zend_compile_trait_alias (zend_ast * ast)		3943509	0					
ANR	3943511	CompoundStatement		5054:0:149094:149940	3943509	0					
ANR	3943512	IdentifierDeclStatement	zend_ast * method_ref_ast = ast -> child [ 0 ] ;	5055:1:149097:149137	3943509	0	True				
ANR	3943513	IdentifierDecl	* method_ref_ast = ast -> child [ 0 ]		3943509	0					
ANR	3943514	IdentifierDeclType	zend_ast *		3943509	0					
ANR	3943515	Identifier	method_ref_ast		3943509	1					
ANR	3943516	AssignmentExpression	* method_ref_ast = ast -> child [ 0 ]		3943509	2		=			
ANR	3943517	Identifier	method_ref_ast		3943509	0					
ANR	3943518	ArrayIndexing	ast -> child [ 0 ]		3943509	1					
ANR	3943519	PtrMemberAccess	ast -> child		3943509	0					
ANR	3943520	Identifier	ast		3943509	0					
ANR	3943521	Identifier	child		3943509	1					
ANR	3943522	PrimaryExpression	0		3943509	1					
ANR	3943523	IdentifierDeclStatement	zend_ast * alias_ast = ast -> child [ 1 ] ;	5056:1:149140:149175	3943509	1	True				
ANR	3943524	IdentifierDecl	* alias_ast = ast -> child [ 1 ]		3943509	0					
ANR	3943525	IdentifierDeclType	zend_ast *		3943509	0					
ANR	3943526	Identifier	alias_ast		3943509	1					
ANR	3943527	AssignmentExpression	* alias_ast = ast -> child [ 1 ]		3943509	2		=			
ANR	3943528	Identifier	alias_ast		3943509	0					
ANR	3943529	ArrayIndexing	ast -> child [ 1 ]		3943509	1					
ANR	3943530	PtrMemberAccess	ast -> child		3943509	0					
ANR	3943531	Identifier	ast		3943509	0					
ANR	3943532	Identifier	child		3943509	1					
ANR	3943533	PrimaryExpression	1		3943509	1					
ANR	3943534	IdentifierDeclStatement	uint32_t modifiers = ast -> attr ;	5057:1:149178:149208	3943509	2	True				
ANR	3943535	IdentifierDecl	modifiers = ast -> attr		3943509	0					
ANR	3943536	IdentifierDeclType	uint32_t		3943509	0					
ANR	3943537	Identifier	modifiers		3943509	1					
ANR	3943538	AssignmentExpression	modifiers = ast -> attr		3943509	2		=			
ANR	3943539	Identifier	modifiers		3943509	0					
ANR	3943540	PtrMemberAccess	ast -> attr		3943509	1					
ANR	3943541	Identifier	ast		3943509	0					
ANR	3943542	Identifier	attr		3943509	1					
ANR	3943543	IdentifierDeclStatement	zend_trait_alias * alias ;	5059:1:149212:149235	3943509	3	True				
ANR	3943544	IdentifierDecl	* alias		3943509	0					
ANR	3943545	IdentifierDeclType	zend_trait_alias *		3943509	0					
ANR	3943546	Identifier	alias		3943509	1					
ANR	3943547	IfStatement	if ( modifiers == ZEND_ACC_STATIC )		3943509	4					
ANR	3943548	Condition	modifiers == ZEND_ACC_STATIC	5061:5:149243:149270	3943509	0	True				
ANR	3943549	EqualityExpression	modifiers == ZEND_ACC_STATIC		3943509	0		==			
ANR	3943550	Identifier	modifiers		3943509	0					
ANR	3943551	Identifier	ZEND_ACC_STATIC		3943509	1					
ANR	3943552	CompoundStatement		8:35:178:178	3943509	1					
ANR	3943553	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use 'static' as method modifier"" )"	5062:2:149277:149355	3943509	0	True				
ANR	3943554	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use 'static' as method modifier"" )"		3943509	0					
ANR	3943555	Callee	zend_error_noreturn		3943509	0					
ANR	3943556	Identifier	zend_error_noreturn		3943509	0					
ANR	3943557	ArgumentList	E_COMPILE_ERROR		3943509	1					
ANR	3943558	Argument	E_COMPILE_ERROR		3943509	0					
ANR	3943559	Identifier	E_COMPILE_ERROR		3943509	0					
ANR	3943560	Argument	"""Cannot use 'static' as method modifier"""		3943509	1					
ANR	3943561	PrimaryExpression	"""Cannot use 'static' as method modifier"""		3943509	0					
ANR	3943562	ElseStatement	else		3943509	0					
ANR	3943563	IfStatement	if ( modifiers == ZEND_ACC_ABSTRACT )		3943509	0					
ANR	3943564	Condition	modifiers == ZEND_ACC_ABSTRACT	5063:12:149369:149398	3943509	0	True				
ANR	3943565	EqualityExpression	modifiers == ZEND_ACC_ABSTRACT		3943509	0		==			
ANR	3943566	Identifier	modifiers		3943509	0					
ANR	3943567	Identifier	ZEND_ACC_ABSTRACT		3943509	1					
ANR	3943568	CompoundStatement		10:44:306:306	3943509	1					
ANR	3943569	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use 'abstract' as method modifier"" )"	5064:2:149405:149485	3943509	0	True				
ANR	3943570	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use 'abstract' as method modifier"" )"		3943509	0					
ANR	3943571	Callee	zend_error_noreturn		3943509	0					
ANR	3943572	Identifier	zend_error_noreturn		3943509	0					
ANR	3943573	ArgumentList	E_COMPILE_ERROR		3943509	1					
ANR	3943574	Argument	E_COMPILE_ERROR		3943509	0					
ANR	3943575	Identifier	E_COMPILE_ERROR		3943509	0					
ANR	3943576	Argument	"""Cannot use 'abstract' as method modifier"""		3943509	1					
ANR	3943577	PrimaryExpression	"""Cannot use 'abstract' as method modifier"""		3943509	0					
ANR	3943578	ElseStatement	else		3943509	0					
ANR	3943579	IfStatement	if ( modifiers == ZEND_ACC_FINAL )		3943509	0					
ANR	3943580	Condition	modifiers == ZEND_ACC_FINAL	5065:12:149499:149525	3943509	0	True				
ANR	3943581	EqualityExpression	modifiers == ZEND_ACC_FINAL		3943509	0		==			
ANR	3943582	Identifier	modifiers		3943509	0					
ANR	3943583	Identifier	ZEND_ACC_FINAL		3943509	1					
ANR	3943584	CompoundStatement		12:41:433:433	3943509	1					
ANR	3943585	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use 'final' as method modifier"" )"	5066:2:149532:149609	3943509	0	True				
ANR	3943586	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use 'final' as method modifier"" )"		3943509	0					
ANR	3943587	Callee	zend_error_noreturn		3943509	0					
ANR	3943588	Identifier	zend_error_noreturn		3943509	0					
ANR	3943589	ArgumentList	E_COMPILE_ERROR		3943509	1					
ANR	3943590	Argument	E_COMPILE_ERROR		3943509	0					
ANR	3943591	Identifier	E_COMPILE_ERROR		3943509	0					
ANR	3943592	Argument	"""Cannot use 'final' as method modifier"""		3943509	1					
ANR	3943593	PrimaryExpression	"""Cannot use 'final' as method modifier"""		3943509	0					
ANR	3943594	ExpressionStatement	alias = emalloc ( sizeof ( zend_trait_alias ) )	5069:1:149616:149657	3943509	5	True				
ANR	3943595	AssignmentExpression	alias = emalloc ( sizeof ( zend_trait_alias ) )		3943509	0		=			
ANR	3943596	Identifier	alias		3943509	0					
ANR	3943597	CallExpression	emalloc ( sizeof ( zend_trait_alias ) )		3943509	1					
ANR	3943598	Callee	emalloc		3943509	0					
ANR	3943599	Identifier	emalloc		3943509	0					
ANR	3943600	ArgumentList	sizeof ( zend_trait_alias )		3943509	1					
ANR	3943601	Argument	sizeof ( zend_trait_alias )		3943509	0					
ANR	3943602	SizeofExpression	sizeof ( zend_trait_alias )		3943509	0					
ANR	3943603	Sizeof	sizeof		3943509	0					
ANR	3943604	SizeofOperand	zend_trait_alias		3943509	1					
ANR	3943605	ExpressionStatement	alias -> trait_method = zend_compile_method_ref ( method_ref_ast )	5070:1:149660:149721	3943509	6	True				
ANR	3943606	AssignmentExpression	alias -> trait_method = zend_compile_method_ref ( method_ref_ast )		3943509	0		=			
ANR	3943607	PtrMemberAccess	alias -> trait_method		3943509	0					
ANR	3943608	Identifier	alias		3943509	0					
ANR	3943609	Identifier	trait_method		3943509	1					
ANR	3943610	CallExpression	zend_compile_method_ref ( method_ref_ast )		3943509	1					
ANR	3943611	Callee	zend_compile_method_ref		3943509	0					
ANR	3943612	Identifier	zend_compile_method_ref		3943509	0					
ANR	3943613	ArgumentList	method_ref_ast		3943509	1					
ANR	3943614	Argument	method_ref_ast		3943509	0					
ANR	3943615	Identifier	method_ref_ast		3943509	0					
ANR	3943616	ExpressionStatement	alias -> modifiers = modifiers	5071:1:149724:149752	3943509	7	True				
ANR	3943617	AssignmentExpression	alias -> modifiers = modifiers		3943509	0		=			
ANR	3943618	PtrMemberAccess	alias -> modifiers		3943509	0					
ANR	3943619	Identifier	alias		3943509	0					
ANR	3943620	Identifier	modifiers		3943509	1					
ANR	3943621	Identifier	modifiers		3943509	1					
ANR	3943622	IfStatement	if ( alias_ast )		3943509	8					
ANR	3943623	Condition	alias_ast	5073:5:149760:149768	3943509	0	True				
ANR	3943624	Identifier	alias_ast		3943509	0					
ANR	3943625	CompoundStatement		20:16:676:676	3943509	1					
ANR	3943626	ExpressionStatement	alias -> alias = zend_string_copy ( zend_ast_get_str ( alias_ast ) )	5074:2:149775:149835	3943509	0	True				
ANR	3943627	AssignmentExpression	alias -> alias = zend_string_copy ( zend_ast_get_str ( alias_ast ) )		3943509	0		=			
ANR	3943628	PtrMemberAccess	alias -> alias		3943509	0					
ANR	3943629	Identifier	alias		3943509	0					
ANR	3943630	Identifier	alias		3943509	1					
ANR	3943631	CallExpression	zend_string_copy ( zend_ast_get_str ( alias_ast ) )		3943509	1					
ANR	3943632	Callee	zend_string_copy		3943509	0					
ANR	3943633	Identifier	zend_string_copy		3943509	0					
ANR	3943634	ArgumentList	zend_ast_get_str ( alias_ast )		3943509	1					
ANR	3943635	Argument	zend_ast_get_str ( alias_ast )		3943509	0					
ANR	3943636	CallExpression	zend_ast_get_str ( alias_ast )		3943509	0					
ANR	3943637	Callee	zend_ast_get_str		3943509	0					
ANR	3943638	Identifier	zend_ast_get_str		3943509	0					
ANR	3943639	ArgumentList	alias_ast		3943509	1					
ANR	3943640	Argument	alias_ast		3943509	0					
ANR	3943641	Identifier	alias_ast		3943509	0					
ANR	3943642	ElseStatement	else		3943509	0					
ANR	3943643	CompoundStatement		22:8:750:750	3943509	0					
ANR	3943644	ExpressionStatement	alias -> alias = NULL	5076:2:149849:149868	3943509	0	True				
ANR	3943645	AssignmentExpression	alias -> alias = NULL		3943509	0		=			
ANR	3943646	PtrMemberAccess	alias -> alias		3943509	0					
ANR	3943647	Identifier	alias		3943509	0					
ANR	3943648	Identifier	alias		3943509	1					
ANR	3943649	Identifier	NULL		3943509	1					
ANR	3943650	ExpressionStatement	"zend_add_to_list ( & CG ( active_class_entry ) -> trait_aliases , alias )"	5079:1:149875:149938	3943509	9	True				
ANR	3943651	CallExpression	"zend_add_to_list ( & CG ( active_class_entry ) -> trait_aliases , alias )"		3943509	0					
ANR	3943652	Callee	zend_add_to_list		3943509	0					
ANR	3943653	Identifier	zend_add_to_list		3943509	0					
ANR	3943654	ArgumentList	& CG ( active_class_entry ) -> trait_aliases		3943509	1					
ANR	3943655	Argument	& CG ( active_class_entry ) -> trait_aliases		3943509	0					
ANR	3943656	UnaryOperationExpression	& CG ( active_class_entry ) -> trait_aliases		3943509	0					
ANR	3943657	UnaryOperator	&		3943509	0					
ANR	3943658	PtrMemberAccess	CG ( active_class_entry ) -> trait_aliases		3943509	1					
ANR	3943659	CallExpression	CG ( active_class_entry )		3943509	0					
ANR	3943660	Callee	CG		3943509	0					
ANR	3943661	Identifier	CG		3943509	0					
ANR	3943662	ArgumentList	active_class_entry		3943509	1					
ANR	3943663	Argument	active_class_entry		3943509	0					
ANR	3943664	Identifier	active_class_entry		3943509	0					
ANR	3943665	Identifier	trait_aliases		3943509	1					
ANR	3943666	Argument	alias		3943509	1					
ANR	3943667	Identifier	alias		3943509	0					
ANR	3943668	ReturnType	static void		3943509	1					
ANR	3943669	Identifier	zend_compile_trait_alias		3943509	2					
ANR	3943670	ParameterList	zend_ast * ast		3943509	3					
ANR	3943671	Parameter	zend_ast * ast	5053:37:149069:149081	3943509	0	True				
ANR	3943672	ParameterType	zend_ast *		3943509	0					
ANR	3943673	Identifier	ast		3943509	1					
ANR	3943674	CFGEntryNode	ENTRY		3943509		True				
ANR	3943675	CFGExitNode	EXIT		3943509		True				
ANR	3943676	Symbol	zend_compile_method_ref		3943509						
ANR	3943677	Symbol	ast		3943509						
ANR	3943678	Symbol	E_COMPILE_ERROR		3943509						
ANR	3943679	Symbol	active_class_entry		3943509						
ANR	3943680	Symbol	modifiers		3943509						
ANR	3943681	Symbol	ZEND_ACC_FINAL		3943509						
ANR	3943682	Symbol	emalloc		3943509						
ANR	3943683	Symbol	* ast		3943509						
ANR	3943684	Symbol	zend_ast_get_str		3943509						
ANR	3943685	Symbol	* * ast		3943509						
ANR	3943686	Symbol	alias		3943509						
ANR	3943687	Symbol	ZEND_ACC_STATIC		3943509						
ANR	3943688	Symbol	& CG ( active_class_entry ) -> trait_aliases		3943509						
ANR	3943689	Symbol	ast -> attr		3943509						
ANR	3943690	Symbol	alias -> trait_method		3943509						
ANR	3943691	Symbol	NULL		3943509						
ANR	3943692	Symbol	CG		3943509						
ANR	3943693	Symbol	zend_string_copy		3943509						
ANR	3943694	Symbol	method_ref_ast		3943509						
ANR	3943695	Symbol	alias -> alias		3943509						
ANR	3943696	Symbol	* alias		3943509						
ANR	3943697	Symbol	alias_ast		3943509						
ANR	3943698	Symbol	ZEND_ACC_ABSTRACT		3943509						
ANR	3943699	Symbol	alias -> modifiers		3943509						
ANR	3943700	Symbol	* ast -> child		3943509						
ANR	3943701	Symbol	ast -> child		3943509						
ANR	3943702	Function	zend_compile_use_trait	5083:0:149953:151531							
ANR	3943703	FunctionDef	zend_compile_use_trait (zend_ast * ast)		3943702	0					
ANR	3943704	CompoundStatement		5084:0:150006:151531	3943702	0					
ANR	3943705	IdentifierDeclStatement	zend_ast_list * traits = zend_ast_get_list ( ast -> child [ 0 ] ) ;	5085:1:150009:150065	3943702	0	True				
ANR	3943706	IdentifierDecl	* traits = zend_ast_get_list ( ast -> child [ 0 ] )		3943702	0					
ANR	3943707	IdentifierDeclType	zend_ast_list *		3943702	0					
ANR	3943708	Identifier	traits		3943702	1					
ANR	3943709	AssignmentExpression	* traits = zend_ast_get_list ( ast -> child [ 0 ] )		3943702	2		=			
ANR	3943710	Identifier	traits		3943702	0					
ANR	3943711	CallExpression	zend_ast_get_list ( ast -> child [ 0 ] )		3943702	1					
ANR	3943712	Callee	zend_ast_get_list		3943702	0					
ANR	3943713	Identifier	zend_ast_get_list		3943702	0					
ANR	3943714	ArgumentList	ast -> child [ 0 ]		3943702	1					
ANR	3943715	Argument	ast -> child [ 0 ]		3943702	0					
ANR	3943716	ArrayIndexing	ast -> child [ 0 ]		3943702	0					
ANR	3943717	PtrMemberAccess	ast -> child		3943702	0					
ANR	3943718	Identifier	ast		3943702	0					
ANR	3943719	Identifier	child		3943702	1					
ANR	3943720	PrimaryExpression	0		3943702	1					
ANR	3943721	IdentifierDeclStatement	zend_ast_list * adaptations = ast -> child [ 1 ] ? zend_ast_get_list ( ast -> child [ 1 ] ) : NULL ;	5086:1:150068:150152	3943702	1	True				
ANR	3943722	IdentifierDecl	* adaptations = ast -> child [ 1 ] ? zend_ast_get_list ( ast -> child [ 1 ] ) : NULL		3943702	0					
ANR	3943723	IdentifierDeclType	zend_ast_list *		3943702	0					
ANR	3943724	Identifier	adaptations		3943702	1					
ANR	3943725	AssignmentExpression	* adaptations = ast -> child [ 1 ] ? zend_ast_get_list ( ast -> child [ 1 ] ) : NULL		3943702	2		=			
ANR	3943726	Identifier	adaptations		3943702	0					
ANR	3943727	ConditionalExpression	ast -> child [ 1 ] ? zend_ast_get_list ( ast -> child [ 1 ] ) : NULL		3943702	1					
ANR	3943728	Condition	ast -> child [ 1 ]		3943702	0					
ANR	3943729	ArrayIndexing	ast -> child [ 1 ]		3943702	0					
ANR	3943730	PtrMemberAccess	ast -> child		3943702	0					
ANR	3943731	Identifier	ast		3943702	0					
ANR	3943732	Identifier	child		3943702	1					
ANR	3943733	PrimaryExpression	1		3943702	1					
ANR	3943734	CallExpression	zend_ast_get_list ( ast -> child [ 1 ] )		3943702	1					
ANR	3943735	Callee	zend_ast_get_list		3943702	0					
ANR	3943736	Identifier	zend_ast_get_list		3943702	0					
ANR	3943737	ArgumentList	ast -> child [ 1 ]		3943702	1					
ANR	3943738	Argument	ast -> child [ 1 ]		3943702	0					
ANR	3943739	ArrayIndexing	ast -> child [ 1 ]		3943702	0					
ANR	3943740	PtrMemberAccess	ast -> child		3943702	0					
ANR	3943741	Identifier	ast		3943702	0					
ANR	3943742	Identifier	child		3943702	1					
ANR	3943743	PrimaryExpression	1		3943702	1					
ANR	3943744	Identifier	NULL		3943702	2					
ANR	3943745	IdentifierDeclStatement	zend_class_entry * ce = CG ( active_class_entry ) ;	5087:1:150155:150200	3943702	2	True				
ANR	3943746	IdentifierDecl	* ce = CG ( active_class_entry )		3943702	0					
ANR	3943747	IdentifierDeclType	zend_class_entry *		3943702	0					
ANR	3943748	Identifier	ce		3943702	1					
ANR	3943749	AssignmentExpression	* ce = CG ( active_class_entry )		3943702	2		=			
ANR	3943750	Identifier	ce		3943702	0					
ANR	3943751	CallExpression	CG ( active_class_entry )		3943702	1					
ANR	3943752	Callee	CG		3943702	0					
ANR	3943753	Identifier	CG		3943702	0					
ANR	3943754	ArgumentList	active_class_entry		3943702	1					
ANR	3943755	Argument	active_class_entry		3943702	0					
ANR	3943756	Identifier	active_class_entry		3943702	0					
ANR	3943757	IdentifierDeclStatement	zend_op * opline ;	5088:1:150203:150218	3943702	3	True				
ANR	3943758	IdentifierDecl	* opline		3943702	0					
ANR	3943759	IdentifierDeclType	zend_op *		3943702	0					
ANR	3943760	Identifier	opline		3943702	1					
ANR	3943761	IdentifierDeclStatement	uint32_t i ;	5089:1:150221:150231	3943702	4	True				
ANR	3943762	IdentifierDecl	i		3943702	0					
ANR	3943763	IdentifierDeclType	uint32_t		3943702	0					
ANR	3943764	Identifier	i		3943702	1					
ANR	3943765	ForStatement	for ( i = 0 ; i < traits -> children ; ++ i )		3943702	5					
ANR	3943766	ForInit	i = 0 ;	5091:6:150240:150245	3943702	0	True				
ANR	3943767	AssignmentExpression	i = 0		3943702	0		=			
ANR	3943768	Identifier	i		3943702	0					
ANR	3943769	PrimaryExpression	0		3943702	1					
ANR	3943770	Condition	i < traits -> children	5091:13:150247:150266	3943702	1	True				
ANR	3943771	RelationalExpression	i < traits -> children		3943702	0		<			
ANR	3943772	Identifier	i		3943702	0					
ANR	3943773	PtrMemberAccess	traits -> children		3943702	1					
ANR	3943774	Identifier	traits		3943702	0					
ANR	3943775	Identifier	children		3943702	1					
ANR	3943776	UnaryExpression	++ i	5091:35:150269:150271	3943702	2	True				
ANR	3943777	IncDec	++		3943702	0					
ANR	3943778	Identifier	i		3943702	1					
ANR	3943779	CompoundStatement		10:2:313:360	3943702	3					
ANR	3943780	IdentifierDeclStatement	zend_ast * trait_ast = traits -> child [ i ] ;	5092:2:150278:150316	3943702	0	True				
ANR	3943781	IdentifierDecl	* trait_ast = traits -> child [ i ]		3943702	0					
ANR	3943782	IdentifierDeclType	zend_ast *		3943702	0					
ANR	3943783	Identifier	trait_ast		3943702	1					
ANR	3943784	AssignmentExpression	* trait_ast = traits -> child [ i ]		3943702	2		=			
ANR	3943785	Identifier	trait_ast		3943702	0					
ANR	3943786	ArrayIndexing	traits -> child [ i ]		3943702	1					
ANR	3943787	PtrMemberAccess	traits -> child		3943702	0					
ANR	3943788	Identifier	traits		3943702	0					
ANR	3943789	Identifier	child		3943702	1					
ANR	3943790	Identifier	i		3943702	1					
ANR	3943791	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( trait_ast ) ;	5093:2:150320:150367	3943702	1	True				
ANR	3943792	IdentifierDecl	* name = zend_ast_get_str ( trait_ast )		3943702	0					
ANR	3943793	IdentifierDeclType	zend_string *		3943702	0					
ANR	3943794	Identifier	name		3943702	1					
ANR	3943795	AssignmentExpression	* name = zend_ast_get_str ( trait_ast )		3943702	2		=			
ANR	3943796	Identifier	name		3943702	0					
ANR	3943797	CallExpression	zend_ast_get_str ( trait_ast )		3943702	1					
ANR	3943798	Callee	zend_ast_get_str		3943702	0					
ANR	3943799	Identifier	zend_ast_get_str		3943702	0					
ANR	3943800	ArgumentList	trait_ast		3943702	1					
ANR	3943801	Argument	trait_ast		3943702	0					
ANR	3943802	Identifier	trait_ast		3943702	0					
ANR	3943803	IfStatement	if ( ce -> ce_flags & ZEND_ACC_INTERFACE )		3943702	2					
ANR	3943804	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE	5095:6:150376:150408	3943702	0	True				
ANR	3943805	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3943702	0		&			
ANR	3943806	PtrMemberAccess	ce -> ce_flags		3943702	0					
ANR	3943807	Identifier	ce		3943702	0					
ANR	3943808	Identifier	ce_flags		3943702	1					
ANR	3943809	Identifier	ZEND_ACC_INTERFACE		3943702	1					
ANR	3943810	CompoundStatement		12:41:404:404	3943702	1					
ANR	3943811	Statement	zend_error_noreturn	5096:3:150416:150434	3943702	0	True				
ANR	3943812	Statement	(	5096:22:150435:150435	3943702	1	True				
ANR	3943813	Statement	E_COMPILE_ERROR	5096:23:150436:150450	3943702	2	True				
ANR	3943814	Statement	","	5096:38:150451:150451	3943702	3	True				
ANR	3943815	Statement	"""Cannot use traits inside of interfaces. """	5096:40:150453:150494	3943702	4	True				
ANR	3943816	Statement	"""%s is used in %s"""	5097:4:150500:150517	3943702	5	True				
ANR	3943817	Statement	","	5097:22:150518:150518	3943702	6	True				
ANR	3943818	Statement	ZSTR_VAL	5097:24:150520:150527	3943702	7	True				
ANR	3943819	Statement	(	5097:32:150528:150528	3943702	8	True				
ANR	3943820	Statement	name	5097:33:150529:150532	3943702	9	True				
ANR	3943821	Statement	)	5097:37:150533:150533	3943702	10	True				
ANR	3943822	Statement	","	5097:38:150534:150534	3943702	11	True				
ANR	3943823	Statement	ZSTR_VAL	5097:40:150536:150543	3943702	12	True				
ANR	3943824	Statement	(	5097:48:150544:150544	3943702	13	True				
ANR	3943825	Statement	ce	5097:49:150545:150546	3943702	14	True				
ANR	3943826	Statement	->	5097:51:150547:150548	3943702	15	True				
ANR	3943827	Statement	name	5097:53:150549:150552	3943702	16	True				
ANR	3943828	Statement	)	5097:57:150553:150553	3943702	17	True				
ANR	3943829	Statement	)	5097:58:150554:150554	3943702	18	True				
ANR	3943830	ExpressionStatement		5097:59:150555:150555	3943702	19	True				
ANR	3943831	SwitchStatement	switch ( zend_get_class_fetch_type ( name ) )		3943702	3					
ANR	3943832	Condition	zend_get_class_fetch_type ( name )	5100:10:150572:150602	3943702	0	True				
ANR	3943833	CallExpression	zend_get_class_fetch_type ( name )		3943702	0					
ANR	3943834	Callee	zend_get_class_fetch_type		3943702	0					
ANR	3943835	Identifier	zend_get_class_fetch_type		3943702	0					
ANR	3943836	ArgumentList	name		3943702	1					
ANR	3943837	Argument	name		3943702	0					
ANR	3943838	Identifier	name		3943702	0					
ANR	3943839	CompoundStatement		17:43:598:598	3943702	1					
ANR	3943840	Label	case ZEND_FETCH_CLASS_SELF :	5101:3:150610:150636	3943702	0	True				
ANR	3943841	Identifier	ZEND_FETCH_CLASS_SELF		3943702	0					
ANR	3943842	Label	case ZEND_FETCH_CLASS_PARENT :	5102:3:150641:150669	3943702	1	True				
ANR	3943843	Identifier	ZEND_FETCH_CLASS_PARENT		3943702	0					
ANR	3943844	Label	case ZEND_FETCH_CLASS_STATIC :	5103:3:150674:150702	3943702	2	True				
ANR	3943845	Identifier	ZEND_FETCH_CLASS_STATIC		3943702	0					
ANR	3943846	Statement	zend_error_noreturn	5104:4:150708:150726	3943702	3	True				
ANR	3943847	Statement	(	5104:23:150727:150727	3943702	4	True				
ANR	3943848	Statement	E_COMPILE_ERROR	5104:24:150728:150742	3943702	5	True				
ANR	3943849	Statement	","	5104:39:150743:150743	3943702	6	True				
ANR	3943850	Statement	"""Cannot use '%s' as trait name """	5104:41:150745:150776	3943702	7	True				
ANR	3943851	Statement	"""as it is reserved"""	5105:5:150783:150801	3943702	8	True				
ANR	3943852	Statement	","	5105:24:150802:150802	3943702	9	True				
ANR	3943853	Statement	ZSTR_VAL	5105:26:150804:150811	3943702	10	True				
ANR	3943854	Statement	(	5105:34:150812:150812	3943702	11	True				
ANR	3943855	Statement	name	5105:35:150813:150816	3943702	12	True				
ANR	3943856	Statement	)	5105:39:150817:150817	3943702	13	True				
ANR	3943857	Statement	)	5105:40:150818:150818	3943702	14	True				
ANR	3943858	ExpressionStatement		5105:41:150819:150819	3943702	15	True				
ANR	3943859	BreakStatement	break ;	5106:4:150825:150830	3943702	16	True				
ANR	3943860	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	5109:2:150839:150880	3943702	4	True				
ANR	3943861	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3943702	0		=			
ANR	3943862	Identifier	opline		3943702	0					
ANR	3943863	CallExpression	get_next_op ( CG ( active_op_array ) )		3943702	1					
ANR	3943864	Callee	get_next_op		3943702	0					
ANR	3943865	Identifier	get_next_op		3943702	0					
ANR	3943866	ArgumentList	CG ( active_op_array )		3943702	1					
ANR	3943867	Argument	CG ( active_op_array )		3943702	0					
ANR	3943868	CallExpression	CG ( active_op_array )		3943702	0					
ANR	3943869	Callee	CG		3943702	0					
ANR	3943870	Identifier	CG		3943702	0					
ANR	3943871	ArgumentList	active_op_array		3943702	1					
ANR	3943872	Argument	active_op_array		3943702	0					
ANR	3943873	Identifier	active_op_array		3943702	0					
ANR	3943874	ExpressionStatement	opline -> opcode = ZEND_ADD_TRAIT	5110:2:150884:150915	3943702	5	True				
ANR	3943875	AssignmentExpression	opline -> opcode = ZEND_ADD_TRAIT		3943702	0		=			
ANR	3943876	PtrMemberAccess	opline -> opcode		3943702	0					
ANR	3943877	Identifier	opline		3943702	0					
ANR	3943878	Identifier	opcode		3943702	1					
ANR	3943879	Identifier	ZEND_ADD_TRAIT		3943702	1					
ANR	3943880	ExpressionStatement	"SET_NODE ( opline -> op1 , & FC ( implementing_class ) )"	5111:2:150919:150965	3943702	6	True				
ANR	3943881	CallExpression	"SET_NODE ( opline -> op1 , & FC ( implementing_class ) )"		3943702	0					
ANR	3943882	Callee	SET_NODE		3943702	0					
ANR	3943883	Identifier	SET_NODE		3943702	0					
ANR	3943884	ArgumentList	opline -> op1		3943702	1					
ANR	3943885	Argument	opline -> op1		3943702	0					
ANR	3943886	PtrMemberAccess	opline -> op1		3943702	0					
ANR	3943887	Identifier	opline		3943702	0					
ANR	3943888	Identifier	op1		3943702	1					
ANR	3943889	Argument	& FC ( implementing_class )		3943702	1					
ANR	3943890	UnaryOperationExpression	& FC ( implementing_class )		3943702	0					
ANR	3943891	UnaryOperator	&		3943702	0					
ANR	3943892	CallExpression	FC ( implementing_class )		3943702	1					
ANR	3943893	Callee	FC		3943702	0					
ANR	3943894	Identifier	FC		3943702	0					
ANR	3943895	ArgumentList	implementing_class		3943702	1					
ANR	3943896	Argument	implementing_class		3943702	0					
ANR	3943897	Identifier	implementing_class		3943702	0					
ANR	3943898	ExpressionStatement	opline -> op2_type = IS_CONST	5112:2:150969:150996	3943702	7	True				
ANR	3943899	AssignmentExpression	opline -> op2_type = IS_CONST		3943702	0		=			
ANR	3943900	PtrMemberAccess	opline -> op2_type		3943702	0					
ANR	3943901	Identifier	opline		3943702	0					
ANR	3943902	Identifier	op2_type		3943702	1					
ANR	3943903	Identifier	IS_CONST		3943702	1					
ANR	3943904	ExpressionStatement	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( trait_ast ) )"	5113:2:151000:151114	3943702	8	True				
ANR	3943905	AssignmentExpression	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( trait_ast ) )"		3943702	0		=			
ANR	3943906	MemberAccess	opline -> op2 . constant		3943702	0					
ANR	3943907	PtrMemberAccess	opline -> op2		3943702	0					
ANR	3943908	Identifier	opline		3943702	0					
ANR	3943909	Identifier	op2		3943702	1					
ANR	3943910	Identifier	constant		3943702	1					
ANR	3943911	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( trait_ast ) )"		3943702	1					
ANR	3943912	Callee	zend_add_class_name_literal		3943702	0					
ANR	3943913	Identifier	zend_add_class_name_literal		3943702	0					
ANR	3943914	ArgumentList	CG ( active_op_array )		3943702	1					
ANR	3943915	Argument	CG ( active_op_array )		3943702	0					
ANR	3943916	CallExpression	CG ( active_op_array )		3943702	0					
ANR	3943917	Callee	CG		3943702	0					
ANR	3943918	Identifier	CG		3943702	0					
ANR	3943919	ArgumentList	active_op_array		3943702	1					
ANR	3943920	Argument	active_op_array		3943702	0					
ANR	3943921	Identifier	active_op_array		3943702	0					
ANR	3943922	Argument	zend_resolve_class_name_ast ( trait_ast )		3943702	1					
ANR	3943923	CallExpression	zend_resolve_class_name_ast ( trait_ast )		3943702	0					
ANR	3943924	Callee	zend_resolve_class_name_ast		3943702	0					
ANR	3943925	Identifier	zend_resolve_class_name_ast		3943702	0					
ANR	3943926	ArgumentList	trait_ast		3943702	1					
ANR	3943927	Argument	trait_ast		3943702	0					
ANR	3943928	Identifier	trait_ast		3943702	0					
ANR	3943929	ExpressionStatement	ce -> num_traits ++	5116:2:151119:151135	3943702	9	True				
ANR	3943930	PostIncDecOperationExpression	ce -> num_traits ++		3943702	0					
ANR	3943931	PtrMemberAccess	ce -> num_traits		3943702	0					
ANR	3943932	Identifier	ce		3943702	0					
ANR	3943933	Identifier	num_traits		3943702	1					
ANR	3943934	IncDec	++		3943702	1					
ANR	3943935	IfStatement	if ( ! adaptations )		3943702	6					
ANR	3943936	Condition	! adaptations	5119:5:151146:151157	3943702	0	True				
ANR	3943937	UnaryOperationExpression	! adaptations		3943702	0					
ANR	3943938	UnaryOperator	!		3943702	0					
ANR	3943939	Identifier	adaptations		3943702	1					
ANR	3943940	CompoundStatement		36:19:1153:1153	3943702	1					
ANR	3943941	ReturnStatement	return ;	5120:2:151164:151170	3943702	0	True				
ANR	3943942	ForStatement	for ( i = 0 ; i < adaptations -> children ; ++ i )		3943702	7					
ANR	3943943	ForInit	i = 0 ;	5123:6:151182:151187	3943702	0	True				
ANR	3943944	AssignmentExpression	i = 0		3943702	0		=			
ANR	3943945	Identifier	i		3943702	0					
ANR	3943946	PrimaryExpression	0		3943702	1					
ANR	3943947	Condition	i < adaptations -> children	5123:13:151189:151213	3943702	1	True				
ANR	3943948	RelationalExpression	i < adaptations -> children		3943702	0		<			
ANR	3943949	Identifier	i		3943702	0					
ANR	3943950	PtrMemberAccess	adaptations -> children		3943702	1					
ANR	3943951	Identifier	adaptations		3943702	0					
ANR	3943952	Identifier	children		3943702	1					
ANR	3943953	UnaryExpression	++ i	5123:40:151216:151218	3943702	2	True				
ANR	3943954	IncDec	++		3943702	0					
ANR	3943955	Identifier	i		3943702	1					
ANR	3943956	CompoundStatement		41:2:1218:1266	3943702	3					
ANR	3943957	IdentifierDeclStatement	zend_ast * adaptation_ast = adaptations -> child [ i ] ;	5124:2:151225:151273	3943702	0	True				
ANR	3943958	IdentifierDecl	* adaptation_ast = adaptations -> child [ i ]		3943702	0					
ANR	3943959	IdentifierDeclType	zend_ast *		3943702	0					
ANR	3943960	Identifier	adaptation_ast		3943702	1					
ANR	3943961	AssignmentExpression	* adaptation_ast = adaptations -> child [ i ]		3943702	2		=			
ANR	3943962	Identifier	adaptation_ast		3943702	0					
ANR	3943963	ArrayIndexing	adaptations -> child [ i ]		3943702	1					
ANR	3943964	PtrMemberAccess	adaptations -> child		3943702	0					
ANR	3943965	Identifier	adaptations		3943702	0					
ANR	3943966	Identifier	child		3943702	1					
ANR	3943967	Identifier	i		3943702	1					
ANR	3943968	SwitchStatement	switch ( adaptation_ast -> kind )		3943702	1					
ANR	3943969	Condition	adaptation_ast -> kind	5125:10:151285:151304	3943702	0	True				
ANR	3943970	PtrMemberAccess	adaptation_ast -> kind		3943702	0					
ANR	3943971	Identifier	adaptation_ast		3943702	0					
ANR	3943972	Identifier	kind		3943702	1					
ANR	3943973	CompoundStatement		42:32:1300:1300	3943702	1					
ANR	3943974	Label	case ZEND_AST_TRAIT_PRECEDENCE :	5126:3:151312:151342	3943702	0	True				
ANR	3943975	Identifier	ZEND_AST_TRAIT_PRECEDENCE		3943702	0					
ANR	3943976	ExpressionStatement	zend_compile_trait_precedence ( adaptation_ast )	5127:4:151348:151393	3943702	1	True				
ANR	3943977	CallExpression	zend_compile_trait_precedence ( adaptation_ast )		3943702	0					
ANR	3943978	Callee	zend_compile_trait_precedence		3943702	0					
ANR	3943979	Identifier	zend_compile_trait_precedence		3943702	0					
ANR	3943980	ArgumentList	adaptation_ast		3943702	1					
ANR	3943981	Argument	adaptation_ast		3943702	0					
ANR	3943982	Identifier	adaptation_ast		3943702	0					
ANR	3943983	BreakStatement	break ;	5128:4:151399:151404	3943702	2	True				
ANR	3943984	Label	case ZEND_AST_TRAIT_ALIAS :	5129:3:151409:151434	3943702	3	True				
ANR	3943985	Identifier	ZEND_AST_TRAIT_ALIAS		3943702	0					
ANR	3943986	ExpressionStatement	zend_compile_trait_alias ( adaptation_ast )	5130:4:151440:151480	3943702	4	True				
ANR	3943987	CallExpression	zend_compile_trait_alias ( adaptation_ast )		3943702	0					
ANR	3943988	Callee	zend_compile_trait_alias		3943702	0					
ANR	3943989	Identifier	zend_compile_trait_alias		3943702	0					
ANR	3943990	ArgumentList	adaptation_ast		3943702	1					
ANR	3943991	Argument	adaptation_ast		3943702	0					
ANR	3943992	Identifier	adaptation_ast		3943702	0					
ANR	3943993	BreakStatement	break ;	5131:4:151486:151491	3943702	5	True				
ANR	3943994	Statement	EMPTY_SWITCH_DEFAULT_CASE	5132:3:151496:151520	3943702	6	True				
ANR	3943995	Statement	(	5132:28:151521:151521	3943702	7	True				
ANR	3943996	Statement	)	5132:29:151522:151522	3943702	8	True				
ANR	3943997	ReturnType	void		3943702	1					
ANR	3943998	Identifier	zend_compile_use_trait		3943702	2					
ANR	3943999	ParameterList	zend_ast * ast		3943702	3					
ANR	3944000	Parameter	zend_ast * ast	5083:28:149981:149993	3943702	0	True				
ANR	3944001	ParameterType	zend_ast *		3943702	0					
ANR	3944002	Identifier	ast		3943702	1					
ANR	3944003	CFGEntryNode	ENTRY		3943702		True				
ANR	3944004	CFGExitNode	EXIT		3943702		True				
ANR	3944005	Symbol	ast		3943702						
ANR	3944006	Symbol	active_class_entry		3943702						
ANR	3944007	Symbol	* ce		3943702						
ANR	3944008	Symbol	trait_ast		3943702						
ANR	3944009	Symbol	opline		3943702						
ANR	3944010	Symbol	adaptations -> child		3943702						
ANR	3944011	Symbol	traits -> children		3943702						
ANR	3944012	Symbol	ZEND_ACC_INTERFACE		3943702						
ANR	3944013	Symbol	adaptation_ast -> kind		3943702						
ANR	3944014	Symbol	* traits -> child		3943702						
ANR	3944015	Symbol	* adaptations		3943702						
ANR	3944016	Symbol	IS_CONST		3943702						
ANR	3944017	Symbol	NULL		3943702						
ANR	3944018	Symbol	* * traits		3943702						
ANR	3944019	Symbol	adaptations -> children		3943702						
ANR	3944020	Symbol	ce -> ce_flags		3943702						
ANR	3944021	Symbol	adaptation_ast		3943702						
ANR	3944022	Symbol	ZEND_ADD_TRAIT		3943702						
ANR	3944023	Symbol	implementing_class		3943702						
ANR	3944024	Symbol	name		3943702						
ANR	3944025	Symbol	* ast -> child		3943702						
ANR	3944026	Symbol	ast -> child		3943702						
ANR	3944027	Symbol	opline -> op1		3943702						
ANR	3944028	Symbol	zend_add_class_name_literal		3943702						
ANR	3944029	Symbol	opline -> op2		3943702						
ANR	3944030	Symbol	traits		3943702						
ANR	3944031	Symbol	* traits		3943702						
ANR	3944032	Symbol	* adaptation_ast		3943702						
ANR	3944033	Symbol	* ast		3943702						
ANR	3944034	Symbol	zend_ast_get_str		3943702						
ANR	3944035	Symbol	* * ast		3943702						
ANR	3944036	Symbol	zend_get_class_fetch_type		3943702						
ANR	3944037	Symbol	ce		3943702						
ANR	3944038	Symbol	get_next_op		3943702						
ANR	3944039	Symbol	CG		3943702						
ANR	3944040	Symbol	zend_resolve_class_name_ast		3943702						
ANR	3944041	Symbol	active_op_array		3943702						
ANR	3944042	Symbol	& FC		3943702						
ANR	3944043	Symbol	i		3943702						
ANR	3944044	Symbol	ce -> num_traits		3943702						
ANR	3944045	Symbol	* adaptations -> child		3943702						
ANR	3944046	Symbol	zend_ast_get_list		3943702						
ANR	3944047	Symbol	* i		3943702						
ANR	3944048	Symbol	* opline		3943702						
ANR	3944049	Symbol	adaptations		3943702						
ANR	3944050	Symbol	opline -> opcode		3943702						
ANR	3944051	Symbol	* * adaptations		3943702						
ANR	3944052	Symbol	opline -> op2 . constant		3943702						
ANR	3944053	Symbol	opline -> op2_type		3943702						
ANR	3944054	Symbol	traits -> child		3943702						
ANR	3944055	Function	zend_compile_implements	5138:0:151544:152271							
ANR	3944056	FunctionDef	"zend_compile_implements (znode * class_node , zend_ast * ast)"		3944055	0					
ANR	3944057	CompoundStatement		5139:0:151617:152271	3944055	0					
ANR	3944058	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	5140:1:151620:151664	3944055	0	True				
ANR	3944059	IdentifierDecl	* list = zend_ast_get_list ( ast )		3944055	0					
ANR	3944060	IdentifierDeclType	zend_ast_list *		3944055	0					
ANR	3944061	Identifier	list		3944055	1					
ANR	3944062	AssignmentExpression	* list = zend_ast_get_list ( ast )		3944055	2		=			
ANR	3944063	Identifier	list		3944055	0					
ANR	3944064	CallExpression	zend_ast_get_list ( ast )		3944055	1					
ANR	3944065	Callee	zend_ast_get_list		3944055	0					
ANR	3944066	Identifier	zend_ast_get_list		3944055	0					
ANR	3944067	ArgumentList	ast		3944055	1					
ANR	3944068	Argument	ast		3944055	0					
ANR	3944069	Identifier	ast		3944055	0					
ANR	3944070	IdentifierDeclStatement	uint32_t i ;	5141:1:151667:151677	3944055	1	True				
ANR	3944071	IdentifierDecl	i		3944055	0					
ANR	3944072	IdentifierDeclType	uint32_t		3944055	0					
ANR	3944073	Identifier	i		3944055	1					
ANR	3944074	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3944055	2					
ANR	3944075	ForInit	i = 0 ;	5142:6:151685:151690	3944055	0	True				
ANR	3944076	AssignmentExpression	i = 0		3944055	0		=			
ANR	3944077	Identifier	i		3944055	0					
ANR	3944078	PrimaryExpression	0		3944055	1					
ANR	3944079	Condition	i < list -> children	5142:13:151692:151709	3944055	1	True				
ANR	3944080	RelationalExpression	i < list -> children		3944055	0		<			
ANR	3944081	Identifier	i		3944055	0					
ANR	3944082	PtrMemberAccess	list -> children		3944055	1					
ANR	3944083	Identifier	list		3944055	0					
ANR	3944084	Identifier	children		3944055	1					
ANR	3944085	UnaryExpression	++ i	5142:33:151712:151714	3944055	2	True				
ANR	3944086	IncDec	++		3944055	0					
ANR	3944087	Identifier	i		3944055	1					
ANR	3944088	CompoundStatement		8:2:195:210	3944055	3					
ANR	3944089	IdentifierDeclStatement	zend_ast * class_ast = list -> child [ i ] ;	5143:2:151721:151757	3944055	0	True				
ANR	3944090	IdentifierDecl	* class_ast = list -> child [ i ]		3944055	0					
ANR	3944091	IdentifierDeclType	zend_ast *		3944055	0					
ANR	3944092	Identifier	class_ast		3944055	1					
ANR	3944093	AssignmentExpression	* class_ast = list -> child [ i ]		3944055	2		=			
ANR	3944094	Identifier	class_ast		3944055	0					
ANR	3944095	ArrayIndexing	list -> child [ i ]		3944055	1					
ANR	3944096	PtrMemberAccess	list -> child		3944055	0					
ANR	3944097	Identifier	list		3944055	0					
ANR	3944098	Identifier	child		3944055	1					
ANR	3944099	Identifier	i		3944055	1					
ANR	3944100	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( class_ast ) ;	5144:2:151761:151808	3944055	1	True				
ANR	3944101	IdentifierDecl	* name = zend_ast_get_str ( class_ast )		3944055	0					
ANR	3944102	IdentifierDeclType	zend_string *		3944055	0					
ANR	3944103	Identifier	name		3944055	1					
ANR	3944104	AssignmentExpression	* name = zend_ast_get_str ( class_ast )		3944055	2		=			
ANR	3944105	Identifier	name		3944055	0					
ANR	3944106	CallExpression	zend_ast_get_str ( class_ast )		3944055	1					
ANR	3944107	Callee	zend_ast_get_str		3944055	0					
ANR	3944108	Identifier	zend_ast_get_str		3944055	0					
ANR	3944109	ArgumentList	class_ast		3944055	1					
ANR	3944110	Argument	class_ast		3944055	0					
ANR	3944111	Identifier	class_ast		3944055	0					
ANR	3944112	IdentifierDeclStatement	zend_op * opline ;	5146:2:151813:151828	3944055	2	True				
ANR	3944113	IdentifierDecl	* opline		3944055	0					
ANR	3944114	IdentifierDeclType	zend_op *		3944055	0					
ANR	3944115	Identifier	opline		3944055	1					
ANR	3944116	IfStatement	if ( ! zend_is_const_default_class_ref ( class_ast ) )		3944055	3					
ANR	3944117	Condition	! zend_is_const_default_class_ref ( class_ast )	5148:6:151837:151879	3944055	0	True				
ANR	3944118	UnaryOperationExpression	! zend_is_const_default_class_ref ( class_ast )		3944055	0					
ANR	3944119	UnaryOperator	!		3944055	0					
ANR	3944120	CallExpression	zend_is_const_default_class_ref ( class_ast )		3944055	1					
ANR	3944121	Callee	zend_is_const_default_class_ref		3944055	0					
ANR	3944122	Identifier	zend_is_const_default_class_ref		3944055	0					
ANR	3944123	ArgumentList	class_ast		3944055	1					
ANR	3944124	Argument	class_ast		3944055	0					
ANR	3944125	Identifier	class_ast		3944055	0					
ANR	3944126	CompoundStatement		10:51:264:264	3944055	1					
ANR	3944127	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as interface name as it is reserved"" , ZSTR_VAL ( name ) )"	5149:3:151887:151998	3944055	0	True				
ANR	3944128	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as interface name as it is reserved"" , ZSTR_VAL ( name ) )"		3944055	0					
ANR	3944129	Callee	zend_error_noreturn		3944055	0					
ANR	3944130	Identifier	zend_error_noreturn		3944055	0					
ANR	3944131	ArgumentList	E_COMPILE_ERROR		3944055	1					
ANR	3944132	Argument	E_COMPILE_ERROR		3944055	0					
ANR	3944133	Identifier	E_COMPILE_ERROR		3944055	0					
ANR	3944134	Argument	"""Cannot use '%s' as interface name as it is reserved"""		3944055	1					
ANR	3944135	PrimaryExpression	"""Cannot use '%s' as interface name as it is reserved"""		3944055	0					
ANR	3944136	Argument	ZSTR_VAL ( name )		3944055	2					
ANR	3944137	CallExpression	ZSTR_VAL ( name )		3944055	0					
ANR	3944138	Callee	ZSTR_VAL		3944055	0					
ANR	3944139	Identifier	ZSTR_VAL		3944055	0					
ANR	3944140	ArgumentList	name		3944055	1					
ANR	3944141	Argument	name		3944055	0					
ANR	3944142	Identifier	name		3944055	0					
ANR	3944143	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_ADD_INTERFACE , class_node , NULL )"	5153:2:152007:152072	3944055	4	True				
ANR	3944144	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_ADD_INTERFACE , class_node , NULL )"		3944055	0		=			
ANR	3944145	Identifier	opline		3944055	0					
ANR	3944146	CallExpression	"zend_emit_op ( NULL , ZEND_ADD_INTERFACE , class_node , NULL )"		3944055	1					
ANR	3944147	Callee	zend_emit_op		3944055	0					
ANR	3944148	Identifier	zend_emit_op		3944055	0					
ANR	3944149	ArgumentList	NULL		3944055	1					
ANR	3944150	Argument	NULL		3944055	0					
ANR	3944151	Identifier	NULL		3944055	0					
ANR	3944152	Argument	ZEND_ADD_INTERFACE		3944055	1					
ANR	3944153	Identifier	ZEND_ADD_INTERFACE		3944055	0					
ANR	3944154	Argument	class_node		3944055	2					
ANR	3944155	Identifier	class_node		3944055	0					
ANR	3944156	Argument	NULL		3944055	3					
ANR	3944157	Identifier	NULL		3944055	0					
ANR	3944158	ExpressionStatement	opline -> op2_type = IS_CONST	5154:2:152076:152103	3944055	5	True				
ANR	3944159	AssignmentExpression	opline -> op2_type = IS_CONST		3944055	0		=			
ANR	3944160	PtrMemberAccess	opline -> op2_type		3944055	0					
ANR	3944161	Identifier	opline		3944055	0					
ANR	3944162	Identifier	op2_type		3944055	1					
ANR	3944163	Identifier	IS_CONST		3944055	1					
ANR	3944164	ExpressionStatement	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( class_ast ) )"	5155:2:152107:152221	3944055	6	True				
ANR	3944165	AssignmentExpression	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( class_ast ) )"		3944055	0		=			
ANR	3944166	MemberAccess	opline -> op2 . constant		3944055	0					
ANR	3944167	PtrMemberAccess	opline -> op2		3944055	0					
ANR	3944168	Identifier	opline		3944055	0					
ANR	3944169	Identifier	op2		3944055	1					
ANR	3944170	Identifier	constant		3944055	1					
ANR	3944171	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , zend_resolve_class_name_ast ( class_ast ) )"		3944055	1					
ANR	3944172	Callee	zend_add_class_name_literal		3944055	0					
ANR	3944173	Identifier	zend_add_class_name_literal		3944055	0					
ANR	3944174	ArgumentList	CG ( active_op_array )		3944055	1					
ANR	3944175	Argument	CG ( active_op_array )		3944055	0					
ANR	3944176	CallExpression	CG ( active_op_array )		3944055	0					
ANR	3944177	Callee	CG		3944055	0					
ANR	3944178	Identifier	CG		3944055	0					
ANR	3944179	ArgumentList	active_op_array		3944055	1					
ANR	3944180	Argument	active_op_array		3944055	0					
ANR	3944181	Identifier	active_op_array		3944055	0					
ANR	3944182	Argument	zend_resolve_class_name_ast ( class_ast )		3944055	1					
ANR	3944183	CallExpression	zend_resolve_class_name_ast ( class_ast )		3944055	0					
ANR	3944184	Callee	zend_resolve_class_name_ast		3944055	0					
ANR	3944185	Identifier	zend_resolve_class_name_ast		3944055	0					
ANR	3944186	ArgumentList	class_ast		3944055	1					
ANR	3944187	Argument	class_ast		3944055	0					
ANR	3944188	Identifier	class_ast		3944055	0					
ANR	3944189	ExpressionStatement	CG ( active_class_entry ) -> num_interfaces ++	5158:2:152226:152266	3944055	7	True				
ANR	3944190	PostIncDecOperationExpression	CG ( active_class_entry ) -> num_interfaces ++		3944055	0					
ANR	3944191	PtrMemberAccess	CG ( active_class_entry ) -> num_interfaces		3944055	0					
ANR	3944192	CallExpression	CG ( active_class_entry )		3944055	0					
ANR	3944193	Callee	CG		3944055	0					
ANR	3944194	Identifier	CG		3944055	0					
ANR	3944195	ArgumentList	active_class_entry		3944055	1					
ANR	3944196	Argument	active_class_entry		3944055	0					
ANR	3944197	Identifier	active_class_entry		3944055	0					
ANR	3944198	Identifier	num_interfaces		3944055	1					
ANR	3944199	IncDec	++		3944055	1					
ANR	3944200	ReturnType	void		3944055	1					
ANR	3944201	Identifier	zend_compile_implements		3944055	2					
ANR	3944202	ParameterList	"znode * class_node , zend_ast * ast"		3944055	3					
ANR	3944203	Parameter	znode * class_node	5138:29:151573:151589	3944055	0	True				
ANR	3944204	ParameterType	znode *		3944055	0					
ANR	3944205	Identifier	class_node		3944055	1					
ANR	3944206	Parameter	zend_ast * ast	5138:48:151592:151604	3944055	1	True				
ANR	3944207	ParameterType	zend_ast *		3944055	0					
ANR	3944208	Identifier	ast		3944055	1					
ANR	3944209	CFGEntryNode	ENTRY		3944055		True				
ANR	3944210	CFGExitNode	EXIT		3944055		True				
ANR	3944211	Symbol	zend_is_const_default_class_ref		3944055						
ANR	3944212	Symbol	zend_add_class_name_literal		3944055						
ANR	3944213	Symbol	opline -> op2		3944055						
ANR	3944214	Symbol	ast		3944055						
ANR	3944215	Symbol	class_node		3944055						
ANR	3944216	Symbol	E_COMPILE_ERROR		3944055						
ANR	3944217	Symbol	active_class_entry		3944055						
ANR	3944218	Symbol	* CG		3944055						
ANR	3944219	Symbol	class_ast		3944055						
ANR	3944220	Symbol	CG ( active_class_entry ) -> num_interfaces		3944055						
ANR	3944221	Symbol	* * list		3944055						
ANR	3944222	Symbol	zend_ast_get_str		3944055						
ANR	3944223	Symbol	opline		3944055						
ANR	3944224	Symbol	ZEND_ADD_INTERFACE		3944055						
ANR	3944225	Symbol	IS_CONST		3944055						
ANR	3944226	Symbol	NULL		3944055						
ANR	3944227	Symbol	list -> child		3944055						
ANR	3944228	Symbol	CG		3944055						
ANR	3944229	Symbol	zend_resolve_class_name_ast		3944055						
ANR	3944230	Symbol	active_op_array		3944055						
ANR	3944231	Symbol	i		3944055						
ANR	3944232	Symbol	list		3944055						
ANR	3944233	Symbol	ZSTR_VAL		3944055						
ANR	3944234	Symbol	zend_ast_get_list		3944055						
ANR	3944235	Symbol	* i		3944055						
ANR	3944236	Symbol	* opline		3944055						
ANR	3944237	Symbol	* list		3944055						
ANR	3944238	Symbol	name		3944055						
ANR	3944239	Symbol	opline -> op2 . constant		3944055						
ANR	3944240	Symbol	* list -> child		3944055						
ANR	3944241	Symbol	opline -> op2_type		3944055						
ANR	3944242	Symbol	list -> children		3944055						
ANR	3944243	Symbol	zend_emit_op		3944055						
ANR	3944244	Function	zend_generate_anon_class_name	5163:0:152284:152848							
ANR	3944245	FunctionDef	zend_generate_anon_class_name (unsigned char * lex_pos)		3944244	0					
ANR	3944246	CompoundStatement		5164:0:152368:152848	3944244	0					
ANR	3944247	IdentifierDeclStatement	zend_string * result ;	5165:1:152371:152390	3944244	0	True				
ANR	3944248	IdentifierDecl	* result		3944244	0					
ANR	3944249	IdentifierDeclType	zend_string *		3944244	0					
ANR	3944250	Identifier	result		3944244	1					
ANR	3944251	IdentifierDeclStatement	char char_pos_buf [ 32 ] ;	5166:1:152393:152414	3944244	1	True				
ANR	3944252	IdentifierDecl	char_pos_buf [ 32 ]		3944244	0					
ANR	3944253	IdentifierDeclType	char [ 32 ]		3944244	0					
ANR	3944254	Identifier	char_pos_buf		3944244	1					
ANR	3944255	PrimaryExpression	32		3944244	2					
ANR	3944256	IdentifierDeclStatement	"size_t char_pos_len = zend_sprintf ( char_pos_buf , ""%p"" , lex_pos ) ;"	5167:1:152417:152480	3944244	2	True				
ANR	3944257	IdentifierDecl	"char_pos_len = zend_sprintf ( char_pos_buf , ""%p"" , lex_pos )"		3944244	0					
ANR	3944258	IdentifierDeclType	size_t		3944244	0					
ANR	3944259	Identifier	char_pos_len		3944244	1					
ANR	3944260	AssignmentExpression	"char_pos_len = zend_sprintf ( char_pos_buf , ""%p"" , lex_pos )"		3944244	2		=			
ANR	3944261	Identifier	char_pos_len		3944244	0					
ANR	3944262	CallExpression	"zend_sprintf ( char_pos_buf , ""%p"" , lex_pos )"		3944244	1					
ANR	3944263	Callee	zend_sprintf		3944244	0					
ANR	3944264	Identifier	zend_sprintf		3944244	0					
ANR	3944265	ArgumentList	char_pos_buf		3944244	1					
ANR	3944266	Argument	char_pos_buf		3944244	0					
ANR	3944267	Identifier	char_pos_buf		3944244	0					
ANR	3944268	Argument	"""%p"""		3944244	1					
ANR	3944269	PrimaryExpression	"""%p"""		3944244	0					
ANR	3944270	Argument	lex_pos		3944244	2					
ANR	3944271	Identifier	lex_pos		3944244	0					
ANR	3944272	IdentifierDeclStatement	zend_string * filename = CG ( active_op_array ) -> filename ;	5168:1:152483:152536	3944244	3	True				
ANR	3944273	IdentifierDecl	* filename = CG ( active_op_array ) -> filename		3944244	0					
ANR	3944274	IdentifierDeclType	zend_string *		3944244	0					
ANR	3944275	Identifier	filename		3944244	1					
ANR	3944276	AssignmentExpression	* filename = CG ( active_op_array ) -> filename		3944244	2		=			
ANR	3944277	Identifier	filename		3944244	0					
ANR	3944278	PtrMemberAccess	CG ( active_op_array ) -> filename		3944244	1					
ANR	3944279	CallExpression	CG ( active_op_array )		3944244	0					
ANR	3944280	Callee	CG		3944244	0					
ANR	3944281	Identifier	CG		3944244	0					
ANR	3944282	ArgumentList	active_op_array		3944244	1					
ANR	3944283	Argument	active_op_array		3944244	0					
ANR	3944284	Identifier	active_op_array		3944244	0					
ANR	3944285	Identifier	filename		3944244	1					
ANR	3944286	ExpressionStatement	"result = zend_string_alloc ( sizeof ( ""class@anonymous"" ) + ZSTR_LEN ( filename ) + char_pos_len , 0 )"	5171:1:152619:152711	3944244	4	True				
ANR	3944287	AssignmentExpression	"result = zend_string_alloc ( sizeof ( ""class@anonymous"" ) + ZSTR_LEN ( filename ) + char_pos_len , 0 )"		3944244	0		=			
ANR	3944288	Identifier	result		3944244	0					
ANR	3944289	CallExpression	"zend_string_alloc ( sizeof ( ""class@anonymous"" ) + ZSTR_LEN ( filename ) + char_pos_len , 0 )"		3944244	1					
ANR	3944290	Callee	zend_string_alloc		3944244	0					
ANR	3944291	Identifier	zend_string_alloc		3944244	0					
ANR	3944292	ArgumentList	"sizeof ( ""class@anonymous"" ) + ZSTR_LEN ( filename ) + char_pos_len"		3944244	1					
ANR	3944293	Argument	"sizeof ( ""class@anonymous"" ) + ZSTR_LEN ( filename ) + char_pos_len"		3944244	0					
ANR	3944294	AdditiveExpression	"sizeof ( ""class@anonymous"" ) + ZSTR_LEN ( filename ) + char_pos_len"		3944244	0		+			
ANR	3944295	SizeofExpression	"sizeof ( ""class@anonymous"" )"		3944244	0					
ANR	3944296	Sizeof	sizeof		3944244	0					
ANR	3944297	PrimaryExpression	"""class@anonymous"""		3944244	1					
ANR	3944298	AdditiveExpression	ZSTR_LEN ( filename ) + char_pos_len		3944244	1		+			
ANR	3944299	CallExpression	ZSTR_LEN ( filename )		3944244	0					
ANR	3944300	Callee	ZSTR_LEN		3944244	0					
ANR	3944301	Identifier	ZSTR_LEN		3944244	0					
ANR	3944302	ArgumentList	filename		3944244	1					
ANR	3944303	Argument	filename		3944244	0					
ANR	3944304	Identifier	filename		3944244	0					
ANR	3944305	Identifier	char_pos_len		3944244	1					
ANR	3944306	Argument	0		3944244	1					
ANR	3944307	PrimaryExpression	0		3944244	0					
ANR	3944308	ExpressionStatement	"sprintf ( ZSTR_VAL ( result ) , ""class@anonymous%c%s%s"" , '\\0' , ZSTR_VAL ( filename ) , char_pos_buf )"	5172:1:152714:152804	3944244	5	True				
ANR	3944309	CallExpression	"sprintf ( ZSTR_VAL ( result ) , ""class@anonymous%c%s%s"" , '\\0' , ZSTR_VAL ( filename ) , char_pos_buf )"		3944244	0					
ANR	3944310	Callee	sprintf		3944244	0					
ANR	3944311	Identifier	sprintf		3944244	0					
ANR	3944312	ArgumentList	ZSTR_VAL ( result )		3944244	1					
ANR	3944313	Argument	ZSTR_VAL ( result )		3944244	0					
ANR	3944314	CallExpression	ZSTR_VAL ( result )		3944244	0					
ANR	3944315	Callee	ZSTR_VAL		3944244	0					
ANR	3944316	Identifier	ZSTR_VAL		3944244	0					
ANR	3944317	ArgumentList	result		3944244	1					
ANR	3944318	Argument	result		3944244	0					
ANR	3944319	Identifier	result		3944244	0					
ANR	3944320	Argument	"""class@anonymous%c%s%s"""		3944244	1					
ANR	3944321	PrimaryExpression	"""class@anonymous%c%s%s"""		3944244	0					
ANR	3944322	Argument	'\\0'		3944244	2					
ANR	3944323	PrimaryExpression	'\\0'		3944244	0					
ANR	3944324	Argument	ZSTR_VAL ( filename )		3944244	3					
ANR	3944325	CallExpression	ZSTR_VAL ( filename )		3944244	0					
ANR	3944326	Callee	ZSTR_VAL		3944244	0					
ANR	3944327	Identifier	ZSTR_VAL		3944244	0					
ANR	3944328	ArgumentList	filename		3944244	1					
ANR	3944329	Argument	filename		3944244	0					
ANR	3944330	Identifier	filename		3944244	0					
ANR	3944331	Argument	char_pos_buf		3944244	4					
ANR	3944332	Identifier	char_pos_buf		3944244	0					
ANR	3944333	ReturnStatement	return zend_new_interned_string ( result ) ;	5173:1:152807:152846	3944244	6	True				
ANR	3944334	CallExpression	zend_new_interned_string ( result )		3944244	0					
ANR	3944335	Callee	zend_new_interned_string		3944244	0					
ANR	3944336	Identifier	zend_new_interned_string		3944244	0					
ANR	3944337	ArgumentList	result		3944244	1					
ANR	3944338	Argument	result		3944244	0					
ANR	3944339	Identifier	result		3944244	0					
ANR	3944340	ReturnType	static zend_string *		3944244	1					
ANR	3944341	Identifier	zend_generate_anon_class_name		3944244	2					
ANR	3944342	ParameterList	unsigned char * lex_pos		3944244	3					
ANR	3944343	Parameter	unsigned char * lex_pos	5163:50:152334:152355	3944244	0	True				
ANR	3944344	ParameterType	unsigned char *		3944244	0					
ANR	3944345	Identifier	lex_pos		3944244	1					
ANR	3944346	CFGEntryNode	ENTRY		3944244		True				
ANR	3944347	CFGExitNode	EXIT		3944244		True				
ANR	3944348	Symbol	char_pos_buf		3944244						
ANR	3944349	Symbol	zend_string_alloc		3944244						
ANR	3944350	Symbol	CG		3944244						
ANR	3944351	Symbol	active_op_array		3944244						
ANR	3944352	Symbol	* CG		3944244						
ANR	3944353	Symbol	zend_sprintf		3944244						
ANR	3944354	Symbol	ZSTR_VAL		3944244						
ANR	3944355	Symbol	result		3944244						
ANR	3944356	Symbol	filename		3944244						
ANR	3944357	Symbol	zend_new_interned_string		3944244						
ANR	3944358	Symbol	lex_pos		3944244						
ANR	3944359	Symbol	CG ( active_op_array ) -> filename		3944244						
ANR	3944360	Symbol	ZSTR_LEN		3944244						
ANR	3944361	Symbol	char_pos_len		3944244						
ANR	3944362	Function	zend_compile_class_decl	5177:0:152861:159241							
ANR	3944363	FunctionDef	zend_compile_class_decl (zend_ast * ast)		3944362	0					
ANR	3944364	CompoundStatement		5178:0:152915:159241	3944362	0					
ANR	3944365	IdentifierDeclStatement	zend_ast_decl * decl = ( zend_ast_decl * ) ast ;	5179:1:152918:152961	3944362	0	True				
ANR	3944366	IdentifierDecl	* decl = ( zend_ast_decl * ) ast		3944362	0					
ANR	3944367	IdentifierDeclType	zend_ast_decl *		3944362	0					
ANR	3944368	Identifier	decl		3944362	1					
ANR	3944369	AssignmentExpression	* decl = ( zend_ast_decl * ) ast		3944362	2		=			
ANR	3944370	Identifier	decl		3944362	0					
ANR	3944371	CastExpression	( zend_ast_decl * ) ast		3944362	1					
ANR	3944372	CastTarget	zend_ast_decl *		3944362	0					
ANR	3944373	Identifier	ast		3944362	1					
ANR	3944374	IdentifierDeclStatement	zend_ast * extends_ast = decl -> child [ 0 ] ;	5180:1:152964:153002	3944362	1	True				
ANR	3944375	IdentifierDecl	* extends_ast = decl -> child [ 0 ]		3944362	0					
ANR	3944376	IdentifierDeclType	zend_ast *		3944362	0					
ANR	3944377	Identifier	extends_ast		3944362	1					
ANR	3944378	AssignmentExpression	* extends_ast = decl -> child [ 0 ]		3944362	2		=			
ANR	3944379	Identifier	extends_ast		3944362	0					
ANR	3944380	ArrayIndexing	decl -> child [ 0 ]		3944362	1					
ANR	3944381	PtrMemberAccess	decl -> child		3944362	0					
ANR	3944382	Identifier	decl		3944362	0					
ANR	3944383	Identifier	child		3944362	1					
ANR	3944384	PrimaryExpression	0		3944362	1					
ANR	3944385	IdentifierDeclStatement	zend_ast * implements_ast = decl -> child [ 1 ] ;	5181:1:153005:153046	3944362	2	True				
ANR	3944386	IdentifierDecl	* implements_ast = decl -> child [ 1 ]		3944362	0					
ANR	3944387	IdentifierDeclType	zend_ast *		3944362	0					
ANR	3944388	Identifier	implements_ast		3944362	1					
ANR	3944389	AssignmentExpression	* implements_ast = decl -> child [ 1 ]		3944362	2		=			
ANR	3944390	Identifier	implements_ast		3944362	0					
ANR	3944391	ArrayIndexing	decl -> child [ 1 ]		3944362	1					
ANR	3944392	PtrMemberAccess	decl -> child		3944362	0					
ANR	3944393	Identifier	decl		3944362	0					
ANR	3944394	Identifier	child		3944362	1					
ANR	3944395	PrimaryExpression	1		3944362	1					
ANR	3944396	IdentifierDeclStatement	zend_ast * stmt_ast = decl -> child [ 2 ] ;	5182:1:153049:153084	3944362	3	True				
ANR	3944397	IdentifierDecl	* stmt_ast = decl -> child [ 2 ]		3944362	0					
ANR	3944398	IdentifierDeclType	zend_ast *		3944362	0					
ANR	3944399	Identifier	stmt_ast		3944362	1					
ANR	3944400	AssignmentExpression	* stmt_ast = decl -> child [ 2 ]		3944362	2		=			
ANR	3944401	Identifier	stmt_ast		3944362	0					
ANR	3944402	ArrayIndexing	decl -> child [ 2 ]		3944362	1					
ANR	3944403	PtrMemberAccess	decl -> child		3944362	0					
ANR	3944404	Identifier	decl		3944362	0					
ANR	3944405	Identifier	child		3944362	1					
ANR	3944406	PrimaryExpression	2		3944362	1					
ANR	3944407	IdentifierDeclStatement	"zend_string * name , * lcname , * import_name = NULL ;"	5183:1:153087:153134	3944362	4	True				
ANR	3944408	IdentifierDecl	* name		3944362	0					
ANR	3944409	IdentifierDeclType	zend_string *		3944362	0					
ANR	3944410	Identifier	name		3944362	1					
ANR	3944411	IdentifierDecl	* lcname		3944362	1					
ANR	3944412	IdentifierDeclType	zend_string *		3944362	0					
ANR	3944413	Identifier	lcname		3944362	1					
ANR	3944414	IdentifierDecl	* import_name = NULL		3944362	2					
ANR	3944415	IdentifierDeclType	zend_string *		3944362	0					
ANR	3944416	Identifier	import_name		3944362	1					
ANR	3944417	AssignmentExpression	* import_name = NULL		3944362	2		=			
ANR	3944418	Identifier	NULL		3944362	0					
ANR	3944419	Identifier	NULL		3944362	1					
ANR	3944420	IdentifierDeclStatement	"zend_class_entry * ce = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_class_entry ) ) ;"	5184:1:153137:153214	3944362	5	True				
ANR	3944421	IdentifierDecl	"* ce = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_class_entry ) )"		3944362	0					
ANR	3944422	IdentifierDeclType	zend_class_entry *		3944362	0					
ANR	3944423	Identifier	ce		3944362	1					
ANR	3944424	AssignmentExpression	"* ce = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_class_entry ) )"		3944362	2		=			
ANR	3944425	Identifier	ce		3944362	0					
ANR	3944426	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_class_entry ) )"		3944362	1					
ANR	3944427	Callee	zend_arena_alloc		3944362	0					
ANR	3944428	Identifier	zend_arena_alloc		3944362	0					
ANR	3944429	ArgumentList	& CG ( arena )		3944362	1					
ANR	3944430	Argument	& CG ( arena )		3944362	0					
ANR	3944431	UnaryOperationExpression	& CG ( arena )		3944362	0					
ANR	3944432	UnaryOperator	&		3944362	0					
ANR	3944433	CallExpression	CG ( arena )		3944362	1					
ANR	3944434	Callee	CG		3944362	0					
ANR	3944435	Identifier	CG		3944362	0					
ANR	3944436	ArgumentList	arena		3944362	1					
ANR	3944437	Argument	arena		3944362	0					
ANR	3944438	Identifier	arena		3944362	0					
ANR	3944439	Argument	sizeof ( zend_class_entry )		3944362	1					
ANR	3944440	SizeofExpression	sizeof ( zend_class_entry )		3944362	0					
ANR	3944441	Sizeof	sizeof		3944362	0					
ANR	3944442	SizeofOperand	zend_class_entry		3944362	1					
ANR	3944443	IdentifierDeclStatement	zend_op * opline ;	5185:1:153217:153232	3944362	6	True				
ANR	3944444	IdentifierDecl	* opline		3944362	0					
ANR	3944445	IdentifierDeclType	zend_op *		3944362	0					
ANR	3944446	Identifier	opline		3944362	1					
ANR	3944447	IdentifierDeclStatement	"znode declare_node , extends_node ;"	5186:1:153235:153267	3944362	7	True				
ANR	3944448	IdentifierDecl	declare_node		3944362	0					
ANR	3944449	IdentifierDeclType	znode		3944362	0					
ANR	3944450	Identifier	declare_node		3944362	1					
ANR	3944451	IdentifierDecl	extends_node		3944362	1					
ANR	3944452	IdentifierDeclType	znode		3944362	0					
ANR	3944453	Identifier	extends_node		3944362	1					
ANR	3944454	IdentifierDeclStatement	zend_class_entry * original_ce = CG ( active_class_entry ) ;	5188:1:153271:153325	3944362	8	True				
ANR	3944455	IdentifierDecl	* original_ce = CG ( active_class_entry )		3944362	0					
ANR	3944456	IdentifierDeclType	zend_class_entry *		3944362	0					
ANR	3944457	Identifier	original_ce		3944362	1					
ANR	3944458	AssignmentExpression	* original_ce = CG ( active_class_entry )		3944362	2		=			
ANR	3944459	Identifier	original_ce		3944362	0					
ANR	3944460	CallExpression	CG ( active_class_entry )		3944362	1					
ANR	3944461	Callee	CG		3944362	0					
ANR	3944462	Identifier	CG		3944362	0					
ANR	3944463	ArgumentList	active_class_entry		3944362	1					
ANR	3944464	Argument	active_class_entry		3944362	0					
ANR	3944465	Identifier	active_class_entry		3944362	0					
ANR	3944466	IdentifierDeclStatement	znode original_implementing_class = FC ( implementing_class ) ;	5189:1:153328:153386	3944362	9	True				
ANR	3944467	IdentifierDecl	original_implementing_class = FC ( implementing_class )		3944362	0					
ANR	3944468	IdentifierDeclType	znode		3944362	0					
ANR	3944469	Identifier	original_implementing_class		3944362	1					
ANR	3944470	AssignmentExpression	original_implementing_class = FC ( implementing_class )		3944362	2		=			
ANR	3944471	Identifier	original_implementing_class		3944362	0					
ANR	3944472	CallExpression	FC ( implementing_class )		3944362	1					
ANR	3944473	Callee	FC		3944362	0					
ANR	3944474	Identifier	FC		3944362	0					
ANR	3944475	ArgumentList	implementing_class		3944362	1					
ANR	3944476	Argument	implementing_class		3944362	0					
ANR	3944477	Identifier	implementing_class		3944362	0					
ANR	3944478	IfStatement	if ( EXPECTED ( ( decl -> flags & ZEND_ACC_ANON_CLASS ) == 0 ) )		3944362	10					
ANR	3944479	Condition	EXPECTED ( ( decl -> flags & ZEND_ACC_ANON_CLASS ) == 0 )	5191:5:153394:153443	3944362	0	True				
ANR	3944480	CallExpression	EXPECTED ( ( decl -> flags & ZEND_ACC_ANON_CLASS ) == 0 )		3944362	0					
ANR	3944481	Callee	EXPECTED		3944362	0					
ANR	3944482	Identifier	EXPECTED		3944362	0					
ANR	3944483	ArgumentList	( decl -> flags & ZEND_ACC_ANON_CLASS ) == 0		3944362	1					
ANR	3944484	Argument	( decl -> flags & ZEND_ACC_ANON_CLASS ) == 0		3944362	0					
ANR	3944485	EqualityExpression	( decl -> flags & ZEND_ACC_ANON_CLASS ) == 0		3944362	0		==			
ANR	3944486	BitAndExpression	decl -> flags & ZEND_ACC_ANON_CLASS		3944362	0		&			
ANR	3944487	PtrMemberAccess	decl -> flags		3944362	0					
ANR	3944488	Identifier	decl		3944362	0					
ANR	3944489	Identifier	flags		3944362	1					
ANR	3944490	Identifier	ZEND_ACC_ANON_CLASS		3944362	1					
ANR	3944491	PrimaryExpression	0		3944362	1					
ANR	3944492	CompoundStatement		14:57:530:530	3944362	1					
ANR	3944493	IfStatement	if ( CG ( active_class_entry ) )		3944362	0					
ANR	3944494	Condition	CG ( active_class_entry )	5192:6:153454:153475	3944362	0	True				
ANR	3944495	CallExpression	CG ( active_class_entry )		3944362	0					
ANR	3944496	Callee	CG		3944362	0					
ANR	3944497	Identifier	CG		3944362	0					
ANR	3944498	ArgumentList	active_class_entry		3944362	1					
ANR	3944499	Argument	active_class_entry		3944362	0					
ANR	3944500	Identifier	active_class_entry		3944362	0					
ANR	3944501	CompoundStatement		15:30:562:562	3944362	1					
ANR	3944502	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class declarations may not be nested"" )"	5193:3:153483:153559	3944362	0	True				
ANR	3944503	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class declarations may not be nested"" )"		3944362	0					
ANR	3944504	Callee	zend_error_noreturn		3944362	0					
ANR	3944505	Identifier	zend_error_noreturn		3944362	0					
ANR	3944506	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3944507	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3944508	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3944509	Argument	"""Class declarations may not be nested"""		3944362	1					
ANR	3944510	PrimaryExpression	"""Class declarations may not be nested"""		3944362	0					
ANR	3944511	ExpressionStatement	name = decl -> name	5195:2:153567:153584	3944362	1	True				
ANR	3944512	AssignmentExpression	name = decl -> name		3944362	0		=			
ANR	3944513	Identifier	name		3944362	0					
ANR	3944514	PtrMemberAccess	decl -> name		3944362	1					
ANR	3944515	Identifier	decl		3944362	0					
ANR	3944516	Identifier	name		3944362	1					
ANR	3944517	ExpressionStatement	zend_assert_valid_class_name ( name )	5196:2:153588:153622	3944362	2	True				
ANR	3944518	CallExpression	zend_assert_valid_class_name ( name )		3944362	0					
ANR	3944519	Callee	zend_assert_valid_class_name		3944362	0					
ANR	3944520	Identifier	zend_assert_valid_class_name		3944362	0					
ANR	3944521	ArgumentList	name		3944362	1					
ANR	3944522	Argument	name		3944362	0					
ANR	3944523	Identifier	name		3944362	0					
ANR	3944524	ExpressionStatement	lcname = zend_string_tolower ( name )	5197:2:153626:153660	3944362	3	True				
ANR	3944525	AssignmentExpression	lcname = zend_string_tolower ( name )		3944362	0		=			
ANR	3944526	Identifier	lcname		3944362	0					
ANR	3944527	CallExpression	zend_string_tolower ( name )		3944362	1					
ANR	3944528	Callee	zend_string_tolower		3944362	0					
ANR	3944529	Identifier	zend_string_tolower		3944362	0					
ANR	3944530	ArgumentList	name		3944362	1					
ANR	3944531	Argument	name		3944362	0					
ANR	3944532	Identifier	name		3944362	0					
ANR	3944533	IfStatement	if ( FC ( current_namespace ) )		3944362	4					
ANR	3944534	Condition	FC ( current_namespace )	5198:6:153668:153688	3944362	0	True				
ANR	3944535	CallExpression	FC ( current_namespace )		3944362	0					
ANR	3944536	Callee	FC		3944362	0					
ANR	3944537	Identifier	FC		3944362	0					
ANR	3944538	ArgumentList	current_namespace		3944362	1					
ANR	3944539	Argument	current_namespace		3944362	0					
ANR	3944540	Identifier	current_namespace		3944362	0					
ANR	3944541	CompoundStatement		21:29:775:775	3944362	1					
ANR	3944542	ExpressionStatement	name = zend_prefix_with_ns ( name )	5199:3:153696:153728	3944362	0	True				
ANR	3944543	AssignmentExpression	name = zend_prefix_with_ns ( name )		3944362	0		=			
ANR	3944544	Identifier	name		3944362	0					
ANR	3944545	CallExpression	zend_prefix_with_ns ( name )		3944362	1					
ANR	3944546	Callee	zend_prefix_with_ns		3944362	0					
ANR	3944547	Identifier	zend_prefix_with_ns		3944362	0					
ANR	3944548	ArgumentList	name		3944362	1					
ANR	3944549	Argument	name		3944362	0					
ANR	3944550	Identifier	name		3944362	0					
ANR	3944551	ExpressionStatement	zend_string_release ( lcname )	5201:3:153734:153761	3944362	1	True				
ANR	3944552	CallExpression	zend_string_release ( lcname )		3944362	0					
ANR	3944553	Callee	zend_string_release		3944362	0					
ANR	3944554	Identifier	zend_string_release		3944362	0					
ANR	3944555	ArgumentList	lcname		3944362	1					
ANR	3944556	Argument	lcname		3944362	0					
ANR	3944557	Identifier	lcname		3944362	0					
ANR	3944558	ExpressionStatement	lcname = zend_string_tolower ( name )	5202:3:153766:153800	3944362	2	True				
ANR	3944559	AssignmentExpression	lcname = zend_string_tolower ( name )		3944362	0		=			
ANR	3944560	Identifier	lcname		3944362	0					
ANR	3944561	CallExpression	zend_string_tolower ( name )		3944362	1					
ANR	3944562	Callee	zend_string_tolower		3944362	0					
ANR	3944563	Identifier	zend_string_tolower		3944362	0					
ANR	3944564	ArgumentList	name		3944362	1					
ANR	3944565	Argument	name		3944362	0					
ANR	3944566	Identifier	name		3944362	0					
ANR	3944567	ElseStatement	else		3944362	0					
ANR	3944568	CompoundStatement		26:9:895:895	3944362	0					
ANR	3944569	ExpressionStatement	zend_string_addref ( name )	5204:3:153816:153840	3944362	0	True				
ANR	3944570	CallExpression	zend_string_addref ( name )		3944362	0					
ANR	3944571	Callee	zend_string_addref		3944362	0					
ANR	3944572	Identifier	zend_string_addref		3944362	0					
ANR	3944573	ArgumentList	name		3944362	1					
ANR	3944574	Argument	name		3944362	0					
ANR	3944575	Identifier	name		3944362	0					
ANR	3944576	IfStatement	if ( FC ( imports ) )		3944362	5					
ANR	3944577	Condition	FC ( imports )	5207:6:153853:153863	3944362	0	True				
ANR	3944578	CallExpression	FC ( imports )		3944362	0					
ANR	3944579	Callee	FC		3944362	0					
ANR	3944580	Identifier	FC		3944362	0					
ANR	3944581	ArgumentList	imports		3944362	1					
ANR	3944582	Argument	imports		3944362	0					
ANR	3944583	Identifier	imports		3944362	0					
ANR	3944584	CompoundStatement		30:19:950:950	3944362	1					
ANR	3944585	ExpressionStatement	"import_name = zend_hash_find_ptr ( FC ( imports ) , lcname )"	5208:3:153871:153924	3944362	0	True				
ANR	3944586	AssignmentExpression	"import_name = zend_hash_find_ptr ( FC ( imports ) , lcname )"		3944362	0		=			
ANR	3944587	Identifier	import_name		3944362	0					
ANR	3944588	CallExpression	"zend_hash_find_ptr ( FC ( imports ) , lcname )"		3944362	1					
ANR	3944589	Callee	zend_hash_find_ptr		3944362	0					
ANR	3944590	Identifier	zend_hash_find_ptr		3944362	0					
ANR	3944591	ArgumentList	FC ( imports )		3944362	1					
ANR	3944592	Argument	FC ( imports )		3944362	0					
ANR	3944593	CallExpression	FC ( imports )		3944362	0					
ANR	3944594	Callee	FC		3944362	0					
ANR	3944595	Identifier	FC		3944362	0					
ANR	3944596	ArgumentList	imports		3944362	1					
ANR	3944597	Argument	imports		3944362	0					
ANR	3944598	Identifier	imports		3944362	0					
ANR	3944599	Argument	lcname		3944362	1					
ANR	3944600	Identifier	lcname		3944362	0					
ANR	3944601	IfStatement	"if ( import_name && ! zend_string_equals_ci ( lcname , import_name ) )"		3944362	6					
ANR	3944602	Condition	"import_name && ! zend_string_equals_ci ( lcname , import_name )"	5211:6:153937:153994	3944362	0	True				
ANR	3944603	AndExpression	"import_name && ! zend_string_equals_ci ( lcname , import_name )"		3944362	0		&&			
ANR	3944604	Identifier	import_name		3944362	0					
ANR	3944605	UnaryOperationExpression	"! zend_string_equals_ci ( lcname , import_name )"		3944362	1					
ANR	3944606	UnaryOperator	!		3944362	0					
ANR	3944607	CallExpression	"zend_string_equals_ci ( lcname , import_name )"		3944362	1					
ANR	3944608	Callee	zend_string_equals_ci		3944362	0					
ANR	3944609	Identifier	zend_string_equals_ci		3944362	0					
ANR	3944610	ArgumentList	lcname		3944362	1					
ANR	3944611	Argument	lcname		3944362	0					
ANR	3944612	Identifier	lcname		3944362	0					
ANR	3944613	Argument	import_name		3944362	1					
ANR	3944614	Identifier	import_name		3944362	0					
ANR	3944615	CompoundStatement		34:66:1081:1081	3944362	1					
ANR	3944616	Statement	zend_error_noreturn	5212:3:154002:154020	3944362	0	True				
ANR	3944617	Statement	(	5212:22:154021:154021	3944362	1	True				
ANR	3944618	Statement	E_COMPILE_ERROR	5212:23:154022:154036	3944362	2	True				
ANR	3944619	Statement	","	5212:38:154037:154037	3944362	3	True				
ANR	3944620	Statement	"""Cannot declare class %s """	5212:40:154039:154064	3944362	4	True				
ANR	3944621	Statement	"""because the name is already in use"""	5213:5:154071:154106	3944362	5	True				
ANR	3944622	Statement	","	5213:41:154107:154107	3944362	6	True				
ANR	3944623	Statement	ZSTR_VAL	5213:43:154109:154116	3944362	7	True				
ANR	3944624	Statement	(	5213:51:154117:154117	3944362	8	True				
ANR	3944625	Statement	name	5213:52:154118:154121	3944362	9	True				
ANR	3944626	Statement	)	5213:56:154122:154122	3944362	10	True				
ANR	3944627	Statement	)	5213:57:154123:154123	3944362	11	True				
ANR	3944628	ExpressionStatement		5213:58:154124:154124	3944362	12	True				
ANR	3944629	ExpressionStatement	name = zend_new_interned_string ( name )	5216:2:154133:154170	3944362	7	True				
ANR	3944630	AssignmentExpression	name = zend_new_interned_string ( name )		3944362	0		=			
ANR	3944631	Identifier	name		3944362	0					
ANR	3944632	CallExpression	zend_new_interned_string ( name )		3944362	1					
ANR	3944633	Callee	zend_new_interned_string		3944362	0					
ANR	3944634	Identifier	zend_new_interned_string		3944362	0					
ANR	3944635	ArgumentList	name		3944362	1					
ANR	3944636	Argument	name		3944362	0					
ANR	3944637	Identifier	name		3944362	0					
ANR	3944638	ElseStatement	else		3944362	0					
ANR	3944639	CompoundStatement		40:8:1264:1264	3944362	0					
ANR	3944640	ExpressionStatement	name = zend_generate_anon_class_name ( decl -> lex_pos )	5218:2:154184:154235	3944362	0	True				
ANR	3944641	AssignmentExpression	name = zend_generate_anon_class_name ( decl -> lex_pos )		3944362	0		=			
ANR	3944642	Identifier	name		3944362	0					
ANR	3944643	CallExpression	zend_generate_anon_class_name ( decl -> lex_pos )		3944362	1					
ANR	3944644	Callee	zend_generate_anon_class_name		3944362	0					
ANR	3944645	Identifier	zend_generate_anon_class_name		3944362	0					
ANR	3944646	ArgumentList	decl -> lex_pos		3944362	1					
ANR	3944647	Argument	decl -> lex_pos		3944362	0					
ANR	3944648	PtrMemberAccess	decl -> lex_pos		3944362	0					
ANR	3944649	Identifier	decl		3944362	0					
ANR	3944650	Identifier	lex_pos		3944362	1					
ANR	3944651	ExpressionStatement	lcname = zend_string_tolower ( name )	5219:2:154239:154273	3944362	1	True				
ANR	3944652	AssignmentExpression	lcname = zend_string_tolower ( name )		3944362	0		=			
ANR	3944653	Identifier	lcname		3944362	0					
ANR	3944654	CallExpression	zend_string_tolower ( name )		3944362	1					
ANR	3944655	Callee	zend_string_tolower		3944362	0					
ANR	3944656	Identifier	zend_string_tolower		3944362	0					
ANR	3944657	ArgumentList	name		3944362	1					
ANR	3944658	Argument	name		3944362	0					
ANR	3944659	Identifier	name		3944362	0					
ANR	3944660	ExpressionStatement	lcname = zend_new_interned_string ( lcname )	5221:1:154279:154320	3944362	11	True				
ANR	3944661	AssignmentExpression	lcname = zend_new_interned_string ( lcname )		3944362	0		=			
ANR	3944662	Identifier	lcname		3944362	0					
ANR	3944663	CallExpression	zend_new_interned_string ( lcname )		3944362	1					
ANR	3944664	Callee	zend_new_interned_string		3944362	0					
ANR	3944665	Identifier	zend_new_interned_string		3944362	0					
ANR	3944666	ArgumentList	lcname		3944362	1					
ANR	3944667	Argument	lcname		3944362	0					
ANR	3944668	Identifier	lcname		3944362	0					
ANR	3944669	ExpressionStatement	ce -> type = ZEND_USER_CLASS	5223:1:154324:154350	3944362	12	True				
ANR	3944670	AssignmentExpression	ce -> type = ZEND_USER_CLASS		3944362	0		=			
ANR	3944671	PtrMemberAccess	ce -> type		3944362	0					
ANR	3944672	Identifier	ce		3944362	0					
ANR	3944673	Identifier	type		3944362	1					
ANR	3944674	Identifier	ZEND_USER_CLASS		3944362	1					
ANR	3944675	ExpressionStatement	ce -> name = name	5224:1:154353:154368	3944362	13	True				
ANR	3944676	AssignmentExpression	ce -> name = name		3944362	0		=			
ANR	3944677	PtrMemberAccess	ce -> name		3944362	0					
ANR	3944678	Identifier	ce		3944362	0					
ANR	3944679	Identifier	name		3944362	1					
ANR	3944680	Identifier	name		3944362	1					
ANR	3944681	ExpressionStatement	"zend_initialize_class_data ( ce , 1 )"	5225:1:154371:154404	3944362	14	True				
ANR	3944682	CallExpression	"zend_initialize_class_data ( ce , 1 )"		3944362	0					
ANR	3944683	Callee	zend_initialize_class_data		3944362	0					
ANR	3944684	Identifier	zend_initialize_class_data		3944362	0					
ANR	3944685	ArgumentList	ce		3944362	1					
ANR	3944686	Argument	ce		3944362	0					
ANR	3944687	Identifier	ce		3944362	0					
ANR	3944688	Argument	1		3944362	1					
ANR	3944689	PrimaryExpression	1		3944362	0					
ANR	3944690	ExpressionStatement	ce -> ce_flags |= decl -> flags	5227:1:154408:154435	3944362	15	True				
ANR	3944691	AssignmentExpression	ce -> ce_flags |= decl -> flags		3944362	0		|=			
ANR	3944692	PtrMemberAccess	ce -> ce_flags		3944362	0					
ANR	3944693	Identifier	ce		3944362	0					
ANR	3944694	Identifier	ce_flags		3944362	1					
ANR	3944695	PtrMemberAccess	decl -> flags		3944362	1					
ANR	3944696	Identifier	decl		3944362	0					
ANR	3944697	Identifier	flags		3944362	1					
ANR	3944698	ExpressionStatement	ce -> info . user . filename = zend_get_compiled_filename ( )	5228:1:154438:154491	3944362	16	True				
ANR	3944699	AssignmentExpression	ce -> info . user . filename = zend_get_compiled_filename ( )		3944362	0		=			
ANR	3944700	MemberAccess	ce -> info . user . filename		3944362	0					
ANR	3944701	MemberAccess	ce -> info . user		3944362	0					
ANR	3944702	PtrMemberAccess	ce -> info		3944362	0					
ANR	3944703	Identifier	ce		3944362	0					
ANR	3944704	Identifier	info		3944362	1					
ANR	3944705	Identifier	user		3944362	1					
ANR	3944706	Identifier	filename		3944362	1					
ANR	3944707	CallExpression	zend_get_compiled_filename ( )		3944362	1					
ANR	3944708	Callee	zend_get_compiled_filename		3944362	0					
ANR	3944709	Identifier	zend_get_compiled_filename		3944362	0					
ANR	3944710	ArgumentList			3944362	1					
ANR	3944711	ExpressionStatement	ce -> info . user . line_start = decl -> start_lineno	5229:1:154494:154539	3944362	17	True				
ANR	3944712	AssignmentExpression	ce -> info . user . line_start = decl -> start_lineno		3944362	0		=			
ANR	3944713	MemberAccess	ce -> info . user . line_start		3944362	0					
ANR	3944714	MemberAccess	ce -> info . user		3944362	0					
ANR	3944715	PtrMemberAccess	ce -> info		3944362	0					
ANR	3944716	Identifier	ce		3944362	0					
ANR	3944717	Identifier	info		3944362	1					
ANR	3944718	Identifier	user		3944362	1					
ANR	3944719	Identifier	line_start		3944362	1					
ANR	3944720	PtrMemberAccess	decl -> start_lineno		3944362	1					
ANR	3944721	Identifier	decl		3944362	0					
ANR	3944722	Identifier	start_lineno		3944362	1					
ANR	3944723	ExpressionStatement	ce -> info . user . line_end = decl -> end_lineno	5230:1:154542:154583	3944362	18	True				
ANR	3944724	AssignmentExpression	ce -> info . user . line_end = decl -> end_lineno		3944362	0		=			
ANR	3944725	MemberAccess	ce -> info . user . line_end		3944362	0					
ANR	3944726	MemberAccess	ce -> info . user		3944362	0					
ANR	3944727	PtrMemberAccess	ce -> info		3944362	0					
ANR	3944728	Identifier	ce		3944362	0					
ANR	3944729	Identifier	info		3944362	1					
ANR	3944730	Identifier	user		3944362	1					
ANR	3944731	Identifier	line_end		3944362	1					
ANR	3944732	PtrMemberAccess	decl -> end_lineno		3944362	1					
ANR	3944733	Identifier	decl		3944362	0					
ANR	3944734	Identifier	end_lineno		3944362	1					
ANR	3944735	IfStatement	if ( decl -> doc_comment )		3944362	19					
ANR	3944736	Condition	decl -> doc_comment	5232:5:154591:154607	3944362	0	True				
ANR	3944737	PtrMemberAccess	decl -> doc_comment		3944362	0					
ANR	3944738	Identifier	decl		3944362	0					
ANR	3944739	Identifier	doc_comment		3944362	1					
ANR	3944740	CompoundStatement		55:24:1694:1694	3944362	1					
ANR	3944741	ExpressionStatement	ce -> info . user . doc_comment = zend_string_copy ( decl -> doc_comment )	5233:2:154614:154677	3944362	0	True				
ANR	3944742	AssignmentExpression	ce -> info . user . doc_comment = zend_string_copy ( decl -> doc_comment )		3944362	0		=			
ANR	3944743	MemberAccess	ce -> info . user . doc_comment		3944362	0					
ANR	3944744	MemberAccess	ce -> info . user		3944362	0					
ANR	3944745	PtrMemberAccess	ce -> info		3944362	0					
ANR	3944746	Identifier	ce		3944362	0					
ANR	3944747	Identifier	info		3944362	1					
ANR	3944748	Identifier	user		3944362	1					
ANR	3944749	Identifier	doc_comment		3944362	1					
ANR	3944750	CallExpression	zend_string_copy ( decl -> doc_comment )		3944362	1					
ANR	3944751	Callee	zend_string_copy		3944362	0					
ANR	3944752	Identifier	zend_string_copy		3944362	0					
ANR	3944753	ArgumentList	decl -> doc_comment		3944362	1					
ANR	3944754	Argument	decl -> doc_comment		3944362	0					
ANR	3944755	PtrMemberAccess	decl -> doc_comment		3944362	0					
ANR	3944756	Identifier	decl		3944362	0					
ANR	3944757	Identifier	doc_comment		3944362	1					
ANR	3944758	IfStatement	if ( UNEXPECTED ( ( decl -> flags & ZEND_ACC_ANON_CLASS ) ) )		3944362	20					
ANR	3944759	Condition	UNEXPECTED ( ( decl -> flags & ZEND_ACC_ANON_CLASS ) )	5236:5:154688:154734	3944362	0	True				
ANR	3944760	CallExpression	UNEXPECTED ( ( decl -> flags & ZEND_ACC_ANON_CLASS ) )		3944362	0					
ANR	3944761	Callee	UNEXPECTED		3944362	0					
ANR	3944762	Identifier	UNEXPECTED		3944362	0					
ANR	3944763	ArgumentList	decl -> flags & ZEND_ACC_ANON_CLASS		3944362	1					
ANR	3944764	Argument	decl -> flags & ZEND_ACC_ANON_CLASS		3944362	0					
ANR	3944765	BitAndExpression	decl -> flags & ZEND_ACC_ANON_CLASS		3944362	0		&			
ANR	3944766	PtrMemberAccess	decl -> flags		3944362	0					
ANR	3944767	Identifier	decl		3944362	0					
ANR	3944768	Identifier	flags		3944362	1					
ANR	3944769	Identifier	ZEND_ACC_ANON_CLASS		3944362	1					
ANR	3944770	CompoundStatement		59:54:1821:1821	3944362	1					
ANR	3944771	ExpressionStatement	ce -> serialize = zend_class_serialize_deny	5238:2:154802:154843	3944362	0	True				
ANR	3944772	AssignmentExpression	ce -> serialize = zend_class_serialize_deny		3944362	0		=			
ANR	3944773	PtrMemberAccess	ce -> serialize		3944362	0					
ANR	3944774	Identifier	ce		3944362	0					
ANR	3944775	Identifier	serialize		3944362	1					
ANR	3944776	Identifier	zend_class_serialize_deny		3944362	1					
ANR	3944777	ExpressionStatement	ce -> unserialize = zend_class_unserialize_deny	5239:2:154847:154892	3944362	1	True				
ANR	3944778	AssignmentExpression	ce -> unserialize = zend_class_unserialize_deny		3944362	0		=			
ANR	3944779	PtrMemberAccess	ce -> unserialize		3944362	0					
ANR	3944780	Identifier	ce		3944362	0					
ANR	3944781	Identifier	unserialize		3944362	1					
ANR	3944782	Identifier	zend_class_unserialize_deny		3944362	1					
ANR	3944783	IfStatement	if ( extends_ast )		3944362	21					
ANR	3944784	Condition	extends_ast	5242:5:154903:154913	3944362	0	True				
ANR	3944785	Identifier	extends_ast		3944362	0					
ANR	3944786	CompoundStatement		65:18:2000:2000	3944362	1					
ANR	3944787	IfStatement	if ( ! zend_is_const_default_class_ref ( extends_ast ) )		3944362	0					
ANR	3944788	Condition	! zend_is_const_default_class_ref ( extends_ast )	5243:6:154924:154968	3944362	0	True				
ANR	3944789	UnaryOperationExpression	! zend_is_const_default_class_ref ( extends_ast )		3944362	0					
ANR	3944790	UnaryOperator	!		3944362	0					
ANR	3944791	CallExpression	zend_is_const_default_class_ref ( extends_ast )		3944362	1					
ANR	3944792	Callee	zend_is_const_default_class_ref		3944362	0					
ANR	3944793	Identifier	zend_is_const_default_class_ref		3944362	0					
ANR	3944794	ArgumentList	extends_ast		3944362	1					
ANR	3944795	Argument	extends_ast		3944362	0					
ANR	3944796	Identifier	extends_ast		3944362	0					
ANR	3944797	CompoundStatement		67:3:2060:2117	3944362	1					
ANR	3944798	IdentifierDeclStatement	zend_string * extends_name = zend_ast_get_str ( extends_ast ) ;	5244:3:154976:155033	3944362	0	True				
ANR	3944799	IdentifierDecl	* extends_name = zend_ast_get_str ( extends_ast )		3944362	0					
ANR	3944800	IdentifierDeclType	zend_string *		3944362	0					
ANR	3944801	Identifier	extends_name		3944362	1					
ANR	3944802	AssignmentExpression	* extends_name = zend_ast_get_str ( extends_ast )		3944362	2		=			
ANR	3944803	Identifier	extends_name		3944362	0					
ANR	3944804	CallExpression	zend_ast_get_str ( extends_ast )		3944362	1					
ANR	3944805	Callee	zend_ast_get_str		3944362	0					
ANR	3944806	Identifier	zend_ast_get_str		3944362	0					
ANR	3944807	ArgumentList	extends_ast		3944362	1					
ANR	3944808	Argument	extends_ast		3944362	0					
ANR	3944809	Identifier	extends_ast		3944362	0					
ANR	3944810	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as class name as it is reserved"" , ZSTR_VAL ( extends_name ) )"	5245:3:155038:155153	3944362	1	True				
ANR	3944811	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as class name as it is reserved"" , ZSTR_VAL ( extends_name ) )"		3944362	0					
ANR	3944812	Callee	zend_error_noreturn		3944362	0					
ANR	3944813	Identifier	zend_error_noreturn		3944362	0					
ANR	3944814	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3944815	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3944816	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3944817	Argument	"""Cannot use '%s' as class name as it is reserved"""		3944362	1					
ANR	3944818	PrimaryExpression	"""Cannot use '%s' as class name as it is reserved"""		3944362	0					
ANR	3944819	Argument	ZSTR_VAL ( extends_name )		3944362	2					
ANR	3944820	CallExpression	ZSTR_VAL ( extends_name )		3944362	0					
ANR	3944821	Callee	ZSTR_VAL		3944362	0					
ANR	3944822	Identifier	ZSTR_VAL		3944362	0					
ANR	3944823	ArgumentList	extends_name		3944362	1					
ANR	3944824	Argument	extends_name		3944362	0					
ANR	3944825	Identifier	extends_name		3944362	0					
ANR	3944826	ExpressionStatement	"zend_compile_class_ref ( & extends_node , extends_ast , 0 )"	5249:2:155162:155215	3944362	1	True				
ANR	3944827	CallExpression	"zend_compile_class_ref ( & extends_node , extends_ast , 0 )"		3944362	0					
ANR	3944828	Callee	zend_compile_class_ref		3944362	0					
ANR	3944829	Identifier	zend_compile_class_ref		3944362	0					
ANR	3944830	ArgumentList	& extends_node		3944362	1					
ANR	3944831	Argument	& extends_node		3944362	0					
ANR	3944832	UnaryOperationExpression	& extends_node		3944362	0					
ANR	3944833	UnaryOperator	&		3944362	0					
ANR	3944834	Identifier	extends_node		3944362	1					
ANR	3944835	Argument	extends_ast		3944362	1					
ANR	3944836	Identifier	extends_ast		3944362	0					
ANR	3944837	Argument	0		3944362	2					
ANR	3944838	PrimaryExpression	0		3944362	0					
ANR	3944839	ExpressionStatement	opline = get_next_op ( CG ( active_op_array ) )	5252:1:155222:155263	3944362	22	True				
ANR	3944840	AssignmentExpression	opline = get_next_op ( CG ( active_op_array ) )		3944362	0		=			
ANR	3944841	Identifier	opline		3944362	0					
ANR	3944842	CallExpression	get_next_op ( CG ( active_op_array ) )		3944362	1					
ANR	3944843	Callee	get_next_op		3944362	0					
ANR	3944844	Identifier	get_next_op		3944362	0					
ANR	3944845	ArgumentList	CG ( active_op_array )		3944362	1					
ANR	3944846	Argument	CG ( active_op_array )		3944362	0					
ANR	3944847	CallExpression	CG ( active_op_array )		3944362	0					
ANR	3944848	Callee	CG		3944362	0					
ANR	3944849	Identifier	CG		3944362	0					
ANR	3944850	ArgumentList	active_op_array		3944362	1					
ANR	3944851	Argument	active_op_array		3944362	0					
ANR	3944852	Identifier	active_op_array		3944362	0					
ANR	3944853	ExpressionStatement	"zend_make_var_result ( & declare_node , opline )"	5253:1:155266:155309	3944362	23	True				
ANR	3944854	CallExpression	"zend_make_var_result ( & declare_node , opline )"		3944362	0					
ANR	3944855	Callee	zend_make_var_result		3944362	0					
ANR	3944856	Identifier	zend_make_var_result		3944362	0					
ANR	3944857	ArgumentList	& declare_node		3944362	1					
ANR	3944858	Argument	& declare_node		3944362	0					
ANR	3944859	UnaryOperationExpression	& declare_node		3944362	0					
ANR	3944860	UnaryOperator	&		3944362	0					
ANR	3944861	Identifier	declare_node		3944362	1					
ANR	3944862	Argument	opline		3944362	1					
ANR	3944863	Identifier	opline		3944362	0					
ANR	3944864	ExpressionStatement	"GET_NODE ( & FC ( implementing_class ) , opline -> result )"	5256:1:155336:155385	3944362	24	True				
ANR	3944865	CallExpression	"GET_NODE ( & FC ( implementing_class ) , opline -> result )"		3944362	0					
ANR	3944866	Callee	GET_NODE		3944362	0					
ANR	3944867	Identifier	GET_NODE		3944362	0					
ANR	3944868	ArgumentList	& FC ( implementing_class )		3944362	1					
ANR	3944869	Argument	& FC ( implementing_class )		3944362	0					
ANR	3944870	UnaryOperationExpression	& FC ( implementing_class )		3944362	0					
ANR	3944871	UnaryOperator	&		3944362	0					
ANR	3944872	CallExpression	FC ( implementing_class )		3944362	1					
ANR	3944873	Callee	FC		3944362	0					
ANR	3944874	Identifier	FC		3944362	0					
ANR	3944875	ArgumentList	implementing_class		3944362	1					
ANR	3944876	Argument	implementing_class		3944362	0					
ANR	3944877	Identifier	implementing_class		3944362	0					
ANR	3944878	Argument	opline -> result		3944362	1					
ANR	3944879	PtrMemberAccess	opline -> result		3944362	0					
ANR	3944880	Identifier	opline		3944362	0					
ANR	3944881	Identifier	result		3944362	1					
ANR	3944882	ExpressionStatement	opline -> op2_type = IS_CONST	5258:1:155389:155416	3944362	25	True				
ANR	3944883	AssignmentExpression	opline -> op2_type = IS_CONST		3944362	0		=			
ANR	3944884	PtrMemberAccess	opline -> op2_type		3944362	0					
ANR	3944885	Identifier	opline		3944362	0					
ANR	3944886	Identifier	op2_type		3944362	1					
ANR	3944887	Identifier	IS_CONST		3944362	1					
ANR	3944888	ExpressionStatement	"LITERAL_STR ( opline -> op2 , lcname )"	5259:1:155419:155451	3944362	26	True				
ANR	3944889	CallExpression	"LITERAL_STR ( opline -> op2 , lcname )"		3944362	0					
ANR	3944890	Callee	LITERAL_STR		3944362	0					
ANR	3944891	Identifier	LITERAL_STR		3944362	0					
ANR	3944892	ArgumentList	opline -> op2		3944362	1					
ANR	3944893	Argument	opline -> op2		3944362	0					
ANR	3944894	PtrMemberAccess	opline -> op2		3944362	0					
ANR	3944895	Identifier	opline		3944362	0					
ANR	3944896	Identifier	op2		3944362	1					
ANR	3944897	Argument	lcname		3944362	1					
ANR	3944898	Identifier	lcname		3944362	0					
ANR	3944899	IfStatement	if ( decl -> flags & ZEND_ACC_ANON_CLASS )		3944362	27					
ANR	3944900	Condition	decl -> flags & ZEND_ACC_ANON_CLASS	5261:5:155459:155491	3944362	0	True				
ANR	3944901	BitAndExpression	decl -> flags & ZEND_ACC_ANON_CLASS		3944362	0		&			
ANR	3944902	PtrMemberAccess	decl -> flags		3944362	0					
ANR	3944903	Identifier	decl		3944362	0					
ANR	3944904	Identifier	flags		3944362	1					
ANR	3944905	Identifier	ZEND_ACC_ANON_CLASS		3944362	1					
ANR	3944906	CompoundStatement		84:40:2578:2578	3944362	1					
ANR	3944907	IfStatement	if ( extends_ast )		3944362	0					
ANR	3944908	Condition	extends_ast	5262:6:155502:155512	3944362	0	True				
ANR	3944909	Identifier	extends_ast		3944362	0					
ANR	3944910	CompoundStatement		85:19:2599:2599	3944362	1					
ANR	3944911	ExpressionStatement	opline -> opcode = ZEND_DECLARE_ANON_INHERITED_CLASS	5263:3:155520:155570	3944362	0	True				
ANR	3944912	AssignmentExpression	opline -> opcode = ZEND_DECLARE_ANON_INHERITED_CLASS		3944362	0		=			
ANR	3944913	PtrMemberAccess	opline -> opcode		3944362	0					
ANR	3944914	Identifier	opline		3944362	0					
ANR	3944915	Identifier	opcode		3944362	1					
ANR	3944916	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS		3944362	1					
ANR	3944917	ExpressionStatement	opline -> extended_value = extends_node . u . op . var	5264:3:155575:155621	3944362	1	True				
ANR	3944918	AssignmentExpression	opline -> extended_value = extends_node . u . op . var		3944362	0		=			
ANR	3944919	PtrMemberAccess	opline -> extended_value		3944362	0					
ANR	3944920	Identifier	opline		3944362	0					
ANR	3944921	Identifier	extended_value		3944362	1					
ANR	3944922	MemberAccess	extends_node . u . op . var		3944362	1					
ANR	3944923	MemberAccess	extends_node . u . op		3944362	0					
ANR	3944924	MemberAccess	extends_node . u		3944362	0					
ANR	3944925	Identifier	extends_node		3944362	0					
ANR	3944926	Identifier	u		3944362	1					
ANR	3944927	Identifier	op		3944362	1					
ANR	3944928	Identifier	var		3944362	1					
ANR	3944929	ElseStatement	else		3944362	0					
ANR	3944930	CompoundStatement		88:9:2716:2716	3944362	0					
ANR	3944931	ExpressionStatement	opline -> opcode = ZEND_DECLARE_ANON_CLASS	5266:3:155637:155677	3944362	0	True				
ANR	3944932	AssignmentExpression	opline -> opcode = ZEND_DECLARE_ANON_CLASS		3944362	0		=			
ANR	3944933	PtrMemberAccess	opline -> opcode		3944362	0					
ANR	3944934	Identifier	opline		3944362	0					
ANR	3944935	Identifier	opcode		3944362	1					
ANR	3944936	Identifier	ZEND_DECLARE_ANON_CLASS		3944362	1					
ANR	3944937	ExpressionStatement	opline -> op1_type = IS_UNUSED	5269:2:155686:155714	3944362	1	True				
ANR	3944938	AssignmentExpression	opline -> op1_type = IS_UNUSED		3944362	0		=			
ANR	3944939	PtrMemberAccess	opline -> op1_type		3944362	0					
ANR	3944940	Identifier	opline		3944362	0					
ANR	3944941	Identifier	op1_type		3944362	1					
ANR	3944942	Identifier	IS_UNUSED		3944362	1					
ANR	3944943	ExpressionStatement	"zend_hash_update_ptr ( CG ( class_table ) , lcname , ce )"	5271:2:155719:155768	3944362	2	True				
ANR	3944944	CallExpression	"zend_hash_update_ptr ( CG ( class_table ) , lcname , ce )"		3944362	0					
ANR	3944945	Callee	zend_hash_update_ptr		3944362	0					
ANR	3944946	Identifier	zend_hash_update_ptr		3944362	0					
ANR	3944947	ArgumentList	CG ( class_table )		3944362	1					
ANR	3944948	Argument	CG ( class_table )		3944362	0					
ANR	3944949	CallExpression	CG ( class_table )		3944362	0					
ANR	3944950	Callee	CG		3944362	0					
ANR	3944951	Identifier	CG		3944362	0					
ANR	3944952	ArgumentList	class_table		3944362	1					
ANR	3944953	Argument	class_table		3944362	0					
ANR	3944954	Identifier	class_table		3944362	0					
ANR	3944955	Argument	lcname		3944362	1					
ANR	3944956	Identifier	lcname		3944362	0					
ANR	3944957	Argument	ce		3944362	2					
ANR	3944958	Identifier	ce		3944362	0					
ANR	3944959	ElseStatement	else		3944362	0					
ANR	3944960	CompoundStatement		96:2:2866:2882	3944362	0					
ANR	3944961	IdentifierDeclStatement	zend_string * key ;	5273:2:155782:155798	3944362	0	True				
ANR	3944962	IdentifierDecl	* key		3944362	0					
ANR	3944963	IdentifierDeclType	zend_string *		3944362	0					
ANR	3944964	Identifier	key		3944362	1					
ANR	3944965	IfStatement	if ( extends_ast )		3944362	1					
ANR	3944966	Condition	extends_ast	5275:6:155807:155817	3944362	0	True				
ANR	3944967	Identifier	extends_ast		3944362	0					
ANR	3944968	CompoundStatement		98:19:2904:2904	3944362	1					
ANR	3944969	ExpressionStatement	opline -> opcode = ZEND_DECLARE_INHERITED_CLASS	5276:3:155825:155870	3944362	0	True				
ANR	3944970	AssignmentExpression	opline -> opcode = ZEND_DECLARE_INHERITED_CLASS		3944362	0		=			
ANR	3944971	PtrMemberAccess	opline -> opcode		3944362	0					
ANR	3944972	Identifier	opline		3944362	0					
ANR	3944973	Identifier	opcode		3944362	1					
ANR	3944974	Identifier	ZEND_DECLARE_INHERITED_CLASS		3944362	1					
ANR	3944975	ExpressionStatement	opline -> extended_value = extends_node . u . op . var	5277:3:155875:155921	3944362	1	True				
ANR	3944976	AssignmentExpression	opline -> extended_value = extends_node . u . op . var		3944362	0		=			
ANR	3944977	PtrMemberAccess	opline -> extended_value		3944362	0					
ANR	3944978	Identifier	opline		3944362	0					
ANR	3944979	Identifier	extended_value		3944362	1					
ANR	3944980	MemberAccess	extends_node . u . op . var		3944362	1					
ANR	3944981	MemberAccess	extends_node . u . op		3944362	0					
ANR	3944982	MemberAccess	extends_node . u		3944362	0					
ANR	3944983	Identifier	extends_node		3944362	0					
ANR	3944984	Identifier	u		3944362	1					
ANR	3944985	Identifier	op		3944362	1					
ANR	3944986	Identifier	var		3944362	1					
ANR	3944987	ElseStatement	else		3944362	0					
ANR	3944988	CompoundStatement		101:9:3016:3016	3944362	0					
ANR	3944989	ExpressionStatement	opline -> opcode = ZEND_DECLARE_CLASS	5279:3:155937:155972	3944362	0	True				
ANR	3944990	AssignmentExpression	opline -> opcode = ZEND_DECLARE_CLASS		3944362	0		=			
ANR	3944991	PtrMemberAccess	opline -> opcode		3944362	0					
ANR	3944992	Identifier	opline		3944362	0					
ANR	3944993	Identifier	opcode		3944362	1					
ANR	3944994	Identifier	ZEND_DECLARE_CLASS		3944362	1					
ANR	3944995	ExpressionStatement	"key = zend_build_runtime_definition_key ( lcname , decl -> lex_pos )"	5282:2:155981:156043	3944362	2	True				
ANR	3944996	AssignmentExpression	"key = zend_build_runtime_definition_key ( lcname , decl -> lex_pos )"		3944362	0		=			
ANR	3944997	Identifier	key		3944362	0					
ANR	3944998	CallExpression	"zend_build_runtime_definition_key ( lcname , decl -> lex_pos )"		3944362	1					
ANR	3944999	Callee	zend_build_runtime_definition_key		3944362	0					
ANR	3945000	Identifier	zend_build_runtime_definition_key		3944362	0					
ANR	3945001	ArgumentList	lcname		3944362	1					
ANR	3945002	Argument	lcname		3944362	0					
ANR	3945003	Identifier	lcname		3944362	0					
ANR	3945004	Argument	decl -> lex_pos		3944362	1					
ANR	3945005	PtrMemberAccess	decl -> lex_pos		3944362	0					
ANR	3945006	Identifier	decl		3944362	0					
ANR	3945007	Identifier	lex_pos		3944362	1					
ANR	3945008	ExpressionStatement	opline -> op1_type = IS_CONST	5284:2:156048:156075	3944362	3	True				
ANR	3945009	AssignmentExpression	opline -> op1_type = IS_CONST		3944362	0		=			
ANR	3945010	PtrMemberAccess	opline -> op1_type		3944362	0					
ANR	3945011	Identifier	opline		3944362	0					
ANR	3945012	Identifier	op1_type		3944362	1					
ANR	3945013	Identifier	IS_CONST		3944362	1					
ANR	3945014	ExpressionStatement	"LITERAL_STR ( opline -> op1 , key )"	5285:2:156079:156108	3944362	4	True				
ANR	3945015	CallExpression	"LITERAL_STR ( opline -> op1 , key )"		3944362	0					
ANR	3945016	Callee	LITERAL_STR		3944362	0					
ANR	3945017	Identifier	LITERAL_STR		3944362	0					
ANR	3945018	ArgumentList	opline -> op1		3944362	1					
ANR	3945019	Argument	opline -> op1		3944362	0					
ANR	3945020	PtrMemberAccess	opline -> op1		3944362	0					
ANR	3945021	Identifier	opline		3944362	0					
ANR	3945022	Identifier	op1		3944362	1					
ANR	3945023	Argument	key		3944362	1					
ANR	3945024	Identifier	key		3944362	0					
ANR	3945025	ExpressionStatement	"zend_hash_update_ptr ( CG ( class_table ) , key , ce )"	5287:2:156113:156159	3944362	5	True				
ANR	3945026	CallExpression	"zend_hash_update_ptr ( CG ( class_table ) , key , ce )"		3944362	0					
ANR	3945027	Callee	zend_hash_update_ptr		3944362	0					
ANR	3945028	Identifier	zend_hash_update_ptr		3944362	0					
ANR	3945029	ArgumentList	CG ( class_table )		3944362	1					
ANR	3945030	Argument	CG ( class_table )		3944362	0					
ANR	3945031	CallExpression	CG ( class_table )		3944362	0					
ANR	3945032	Callee	CG		3944362	0					
ANR	3945033	Identifier	CG		3944362	0					
ANR	3945034	ArgumentList	class_table		3944362	1					
ANR	3945035	Argument	class_table		3944362	0					
ANR	3945036	Identifier	class_table		3944362	0					
ANR	3945037	Argument	key		3944362	1					
ANR	3945038	Identifier	key		3944362	0					
ANR	3945039	Argument	ce		3944362	2					
ANR	3945040	Identifier	ce		3944362	0					
ANR	3945041	ExpressionStatement	CG ( active_class_entry ) = ce	5290:1:156166:156193	3944362	28	True				
ANR	3945042	AssignmentExpression	CG ( active_class_entry ) = ce		3944362	0		=			
ANR	3945043	CallExpression	CG ( active_class_entry )		3944362	0					
ANR	3945044	Callee	CG		3944362	0					
ANR	3945045	Identifier	CG		3944362	0					
ANR	3945046	ArgumentList	active_class_entry		3944362	1					
ANR	3945047	Argument	active_class_entry		3944362	0					
ANR	3945048	Identifier	active_class_entry		3944362	0					
ANR	3945049	Identifier	ce		3944362	1					
ANR	3945050	IfStatement	if ( implements_ast )		3944362	29					
ANR	3945051	Condition	implements_ast	5292:5:156201:156214	3944362	0	True				
ANR	3945052	Identifier	implements_ast		3944362	0					
ANR	3945053	CompoundStatement		115:21:3301:3301	3944362	1					
ANR	3945054	ExpressionStatement	"zend_compile_implements ( & declare_node , implements_ast )"	5293:2:156221:156275	3944362	0	True				
ANR	3945055	CallExpression	"zend_compile_implements ( & declare_node , implements_ast )"		3944362	0					
ANR	3945056	Callee	zend_compile_implements		3944362	0					
ANR	3945057	Identifier	zend_compile_implements		3944362	0					
ANR	3945058	ArgumentList	& declare_node		3944362	1					
ANR	3945059	Argument	& declare_node		3944362	0					
ANR	3945060	UnaryOperationExpression	& declare_node		3944362	0					
ANR	3945061	UnaryOperator	&		3944362	0					
ANR	3945062	Identifier	declare_node		3944362	1					
ANR	3945063	Argument	implements_ast		3944362	1					
ANR	3945064	Identifier	implements_ast		3944362	0					
ANR	3945065	ExpressionStatement	zend_compile_stmt ( stmt_ast )	5296:1:156282:156309	3944362	30	True				
ANR	3945066	CallExpression	zend_compile_stmt ( stmt_ast )		3944362	0					
ANR	3945067	Callee	zend_compile_stmt		3944362	0					
ANR	3945068	Identifier	zend_compile_stmt		3944362	0					
ANR	3945069	ArgumentList	stmt_ast		3944362	1					
ANR	3945070	Argument	stmt_ast		3944362	0					
ANR	3945071	Identifier	stmt_ast		3944362	0					
ANR	3945072	ExpressionStatement	CG ( zend_lineno ) = ast -> lineno	5299:1:156362:156391	3944362	31	True				
ANR	3945073	AssignmentExpression	CG ( zend_lineno ) = ast -> lineno		3944362	0		=			
ANR	3945074	CallExpression	CG ( zend_lineno )		3944362	0					
ANR	3945075	Callee	CG		3944362	0					
ANR	3945076	Identifier	CG		3944362	0					
ANR	3945077	ArgumentList	zend_lineno		3944362	1					
ANR	3945078	Argument	zend_lineno		3944362	0					
ANR	3945079	Identifier	zend_lineno		3944362	0					
ANR	3945080	PtrMemberAccess	ast -> lineno		3944362	1					
ANR	3945081	Identifier	ast		3944362	0					
ANR	3945082	Identifier	lineno		3944362	1					
ANR	3945083	IfStatement	if ( ce -> num_traits == 0 )		3944362	32					
ANR	3945084	Condition	ce -> num_traits == 0	5301:5:156399:156417	3944362	0	True				
ANR	3945085	EqualityExpression	ce -> num_traits == 0		3944362	0		==			
ANR	3945086	PtrMemberAccess	ce -> num_traits		3944362	0					
ANR	3945087	Identifier	ce		3944362	0					
ANR	3945088	Identifier	num_traits		3944362	1					
ANR	3945089	PrimaryExpression	0		3944362	1					
ANR	3945090	CompoundStatement		124:26:3504:3504	3944362	1					
ANR	3945091	ExpressionStatement	zend_check_deprecated_constructor ( ce )	5303:2:156491:156528	3944362	0	True				
ANR	3945092	CallExpression	zend_check_deprecated_constructor ( ce )		3944362	0					
ANR	3945093	Callee	zend_check_deprecated_constructor		3944362	0					
ANR	3945094	Identifier	zend_check_deprecated_constructor		3944362	0					
ANR	3945095	ArgumentList	ce		3944362	1					
ANR	3945096	Argument	ce		3944362	0					
ANR	3945097	Identifier	ce		3944362	0					
ANR	3945098	IfStatement	if ( ce -> constructor )		3944362	33					
ANR	3945099	Condition	ce -> constructor	5306:5:156539:156553	3944362	0	True				
ANR	3945100	PtrMemberAccess	ce -> constructor		3944362	0					
ANR	3945101	Identifier	ce		3944362	0					
ANR	3945102	Identifier	constructor		3944362	1					
ANR	3945103	CompoundStatement		129:22:3640:3640	3944362	1					
ANR	3945104	ExpressionStatement	ce -> constructor -> common . fn_flags |= ZEND_ACC_CTOR	5307:2:156560:156609	3944362	0	True				
ANR	3945105	AssignmentExpression	ce -> constructor -> common . fn_flags |= ZEND_ACC_CTOR		3944362	0		|=			
ANR	3945106	MemberAccess	ce -> constructor -> common . fn_flags		3944362	0					
ANR	3945107	PtrMemberAccess	ce -> constructor -> common		3944362	0					
ANR	3945108	PtrMemberAccess	ce -> constructor		3944362	0					
ANR	3945109	Identifier	ce		3944362	0					
ANR	3945110	Identifier	constructor		3944362	1					
ANR	3945111	Identifier	common		3944362	1					
ANR	3945112	Identifier	fn_flags		3944362	1					
ANR	3945113	Identifier	ZEND_ACC_CTOR		3944362	1					
ANR	3945114	IfStatement	if ( ce -> constructor -> common . fn_flags & ZEND_ACC_STATIC )		3944362	1					
ANR	3945115	Condition	ce -> constructor -> common . fn_flags & ZEND_ACC_STATIC	5308:6:156617:156666	3944362	0	True				
ANR	3945116	BitAndExpression	ce -> constructor -> common . fn_flags & ZEND_ACC_STATIC		3944362	0		&			
ANR	3945117	MemberAccess	ce -> constructor -> common . fn_flags		3944362	0					
ANR	3945118	PtrMemberAccess	ce -> constructor -> common		3944362	0					
ANR	3945119	PtrMemberAccess	ce -> constructor		3944362	0					
ANR	3945120	Identifier	ce		3944362	0					
ANR	3945121	Identifier	constructor		3944362	1					
ANR	3945122	Identifier	common		3944362	1					
ANR	3945123	Identifier	fn_flags		3944362	1					
ANR	3945124	Identifier	ZEND_ACC_STATIC		3944362	1					
ANR	3945125	CompoundStatement		131:58:3753:3753	3944362	1					
ANR	3945126	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Constructor %s::%s() cannot be static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"	5309:3:156674:156824	3944362	0	True				
ANR	3945127	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Constructor %s::%s() cannot be static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"		3944362	0					
ANR	3945128	Callee	zend_error_noreturn		3944362	0					
ANR	3945129	Identifier	zend_error_noreturn		3944362	0					
ANR	3945130	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3945131	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3945132	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3945133	Argument	"""Constructor %s::%s() cannot be static"""		3944362	1					
ANR	3945134	PrimaryExpression	"""Constructor %s::%s() cannot be static"""		3944362	0					
ANR	3945135	Argument	ZSTR_VAL ( ce -> name )		3944362	2					
ANR	3945136	CallExpression	ZSTR_VAL ( ce -> name )		3944362	0					
ANR	3945137	Callee	ZSTR_VAL		3944362	0					
ANR	3945138	Identifier	ZSTR_VAL		3944362	0					
ANR	3945139	ArgumentList	ce -> name		3944362	1					
ANR	3945140	Argument	ce -> name		3944362	0					
ANR	3945141	PtrMemberAccess	ce -> name		3944362	0					
ANR	3945142	Identifier	ce		3944362	0					
ANR	3945143	Identifier	name		3944362	1					
ANR	3945144	Argument	ZSTR_VAL ( ce -> constructor -> common . function_name )		3944362	3					
ANR	3945145	CallExpression	ZSTR_VAL ( ce -> constructor -> common . function_name )		3944362	0					
ANR	3945146	Callee	ZSTR_VAL		3944362	0					
ANR	3945147	Identifier	ZSTR_VAL		3944362	0					
ANR	3945148	ArgumentList	ce -> constructor -> common . function_name		3944362	1					
ANR	3945149	Argument	ce -> constructor -> common . function_name		3944362	0					
ANR	3945150	MemberAccess	ce -> constructor -> common . function_name		3944362	0					
ANR	3945151	PtrMemberAccess	ce -> constructor -> common		3944362	0					
ANR	3945152	PtrMemberAccess	ce -> constructor		3944362	0					
ANR	3945153	Identifier	ce		3944362	0					
ANR	3945154	Identifier	constructor		3944362	1					
ANR	3945155	Identifier	common		3944362	1					
ANR	3945156	Identifier	function_name		3944362	1					
ANR	3945157	IfStatement	if ( ce -> constructor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		3944362	2					
ANR	3945158	Condition	ce -> constructor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE	5312:6:156836:156894	3944362	0	True				
ANR	3945159	BitAndExpression	ce -> constructor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3944362	0		&			
ANR	3945160	MemberAccess	ce -> constructor -> common . fn_flags		3944362	0					
ANR	3945161	PtrMemberAccess	ce -> constructor -> common		3944362	0					
ANR	3945162	PtrMemberAccess	ce -> constructor		3944362	0					
ANR	3945163	Identifier	ce		3944362	0					
ANR	3945164	Identifier	constructor		3944362	1					
ANR	3945165	Identifier	common		3944362	1					
ANR	3945166	Identifier	fn_flags		3944362	1					
ANR	3945167	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3944362	1					
ANR	3945168	CompoundStatement		135:67:3981:3981	3944362	1					
ANR	3945169	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Constructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"	5313:3:156902:157068	3944362	0	True				
ANR	3945170	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Constructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"		3944362	0					
ANR	3945171	Callee	zend_error_noreturn		3944362	0					
ANR	3945172	Identifier	zend_error_noreturn		3944362	0					
ANR	3945173	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3945174	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3945175	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3945176	Argument	"""Constructor %s::%s() cannot declare a return type"""		3944362	1					
ANR	3945177	PrimaryExpression	"""Constructor %s::%s() cannot declare a return type"""		3944362	0					
ANR	3945178	Argument	ZSTR_VAL ( ce -> name )		3944362	2					
ANR	3945179	CallExpression	ZSTR_VAL ( ce -> name )		3944362	0					
ANR	3945180	Callee	ZSTR_VAL		3944362	0					
ANR	3945181	Identifier	ZSTR_VAL		3944362	0					
ANR	3945182	ArgumentList	ce -> name		3944362	1					
ANR	3945183	Argument	ce -> name		3944362	0					
ANR	3945184	PtrMemberAccess	ce -> name		3944362	0					
ANR	3945185	Identifier	ce		3944362	0					
ANR	3945186	Identifier	name		3944362	1					
ANR	3945187	Argument	ZSTR_VAL ( ce -> constructor -> common . function_name )		3944362	3					
ANR	3945188	CallExpression	ZSTR_VAL ( ce -> constructor -> common . function_name )		3944362	0					
ANR	3945189	Callee	ZSTR_VAL		3944362	0					
ANR	3945190	Identifier	ZSTR_VAL		3944362	0					
ANR	3945191	ArgumentList	ce -> constructor -> common . function_name		3944362	1					
ANR	3945192	Argument	ce -> constructor -> common . function_name		3944362	0					
ANR	3945193	MemberAccess	ce -> constructor -> common . function_name		3944362	0					
ANR	3945194	PtrMemberAccess	ce -> constructor -> common		3944362	0					
ANR	3945195	PtrMemberAccess	ce -> constructor		3944362	0					
ANR	3945196	Identifier	ce		3944362	0					
ANR	3945197	Identifier	constructor		3944362	1					
ANR	3945198	Identifier	common		3944362	1					
ANR	3945199	Identifier	function_name		3944362	1					
ANR	3945200	IfStatement	if ( ce -> destructor )		3944362	34					
ANR	3945201	Condition	ce -> destructor	5318:5:157082:157095	3944362	0	True				
ANR	3945202	PtrMemberAccess	ce -> destructor		3944362	0					
ANR	3945203	Identifier	ce		3944362	0					
ANR	3945204	Identifier	destructor		3944362	1					
ANR	3945205	CompoundStatement		141:21:4182:4182	3944362	1					
ANR	3945206	ExpressionStatement	ce -> destructor -> common . fn_flags |= ZEND_ACC_DTOR	5319:2:157102:157150	3944362	0	True				
ANR	3945207	AssignmentExpression	ce -> destructor -> common . fn_flags |= ZEND_ACC_DTOR		3944362	0		|=			
ANR	3945208	MemberAccess	ce -> destructor -> common . fn_flags		3944362	0					
ANR	3945209	PtrMemberAccess	ce -> destructor -> common		3944362	0					
ANR	3945210	PtrMemberAccess	ce -> destructor		3944362	0					
ANR	3945211	Identifier	ce		3944362	0					
ANR	3945212	Identifier	destructor		3944362	1					
ANR	3945213	Identifier	common		3944362	1					
ANR	3945214	Identifier	fn_flags		3944362	1					
ANR	3945215	Identifier	ZEND_ACC_DTOR		3944362	1					
ANR	3945216	IfStatement	if ( ce -> destructor -> common . fn_flags & ZEND_ACC_STATIC )		3944362	1					
ANR	3945217	Condition	ce -> destructor -> common . fn_flags & ZEND_ACC_STATIC	5320:6:157158:157206	3944362	0	True				
ANR	3945218	BitAndExpression	ce -> destructor -> common . fn_flags & ZEND_ACC_STATIC		3944362	0		&			
ANR	3945219	MemberAccess	ce -> destructor -> common . fn_flags		3944362	0					
ANR	3945220	PtrMemberAccess	ce -> destructor -> common		3944362	0					
ANR	3945221	PtrMemberAccess	ce -> destructor		3944362	0					
ANR	3945222	Identifier	ce		3944362	0					
ANR	3945223	Identifier	destructor		3944362	1					
ANR	3945224	Identifier	common		3944362	1					
ANR	3945225	Identifier	fn_flags		3944362	1					
ANR	3945226	Identifier	ZEND_ACC_STATIC		3944362	1					
ANR	3945227	CompoundStatement		143:57:4293:4293	3944362	1					
ANR	3945228	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Destructor %s::%s() cannot be static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> destructor -> common . function_name ) )"	5321:3:157214:157362	3944362	0	True				
ANR	3945229	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Destructor %s::%s() cannot be static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> destructor -> common . function_name ) )"		3944362	0					
ANR	3945230	Callee	zend_error_noreturn		3944362	0					
ANR	3945231	Identifier	zend_error_noreturn		3944362	0					
ANR	3945232	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3945233	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3945234	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3945235	Argument	"""Destructor %s::%s() cannot be static"""		3944362	1					
ANR	3945236	PrimaryExpression	"""Destructor %s::%s() cannot be static"""		3944362	0					
ANR	3945237	Argument	ZSTR_VAL ( ce -> name )		3944362	2					
ANR	3945238	CallExpression	ZSTR_VAL ( ce -> name )		3944362	0					
ANR	3945239	Callee	ZSTR_VAL		3944362	0					
ANR	3945240	Identifier	ZSTR_VAL		3944362	0					
ANR	3945241	ArgumentList	ce -> name		3944362	1					
ANR	3945242	Argument	ce -> name		3944362	0					
ANR	3945243	PtrMemberAccess	ce -> name		3944362	0					
ANR	3945244	Identifier	ce		3944362	0					
ANR	3945245	Identifier	name		3944362	1					
ANR	3945246	Argument	ZSTR_VAL ( ce -> destructor -> common . function_name )		3944362	3					
ANR	3945247	CallExpression	ZSTR_VAL ( ce -> destructor -> common . function_name )		3944362	0					
ANR	3945248	Callee	ZSTR_VAL		3944362	0					
ANR	3945249	Identifier	ZSTR_VAL		3944362	0					
ANR	3945250	ArgumentList	ce -> destructor -> common . function_name		3944362	1					
ANR	3945251	Argument	ce -> destructor -> common . function_name		3944362	0					
ANR	3945252	MemberAccess	ce -> destructor -> common . function_name		3944362	0					
ANR	3945253	PtrMemberAccess	ce -> destructor -> common		3944362	0					
ANR	3945254	PtrMemberAccess	ce -> destructor		3944362	0					
ANR	3945255	Identifier	ce		3944362	0					
ANR	3945256	Identifier	destructor		3944362	1					
ANR	3945257	Identifier	common		3944362	1					
ANR	3945258	Identifier	function_name		3944362	1					
ANR	3945259	ElseStatement	else		3944362	0					
ANR	3945260	IfStatement	if ( ce -> destructor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		3944362	0					
ANR	3945261	Condition	ce -> destructor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE	5323:13:157377:157434	3944362	0	True				
ANR	3945262	BitAndExpression	ce -> destructor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3944362	0		&			
ANR	3945263	MemberAccess	ce -> destructor -> common . fn_flags		3944362	0					
ANR	3945264	PtrMemberAccess	ce -> destructor -> common		3944362	0					
ANR	3945265	PtrMemberAccess	ce -> destructor		3944362	0					
ANR	3945266	Identifier	ce		3944362	0					
ANR	3945267	Identifier	destructor		3944362	1					
ANR	3945268	Identifier	common		3944362	1					
ANR	3945269	Identifier	fn_flags		3944362	1					
ANR	3945270	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3944362	1					
ANR	3945271	CompoundStatement		146:73:4521:4521	3944362	1					
ANR	3945272	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Destructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> destructor -> common . function_name ) )"	5324:3:157442:157606	3944362	0	True				
ANR	3945273	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Destructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> destructor -> common . function_name ) )"		3944362	0					
ANR	3945274	Callee	zend_error_noreturn		3944362	0					
ANR	3945275	Identifier	zend_error_noreturn		3944362	0					
ANR	3945276	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3945277	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3945278	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3945279	Argument	"""Destructor %s::%s() cannot declare a return type"""		3944362	1					
ANR	3945280	PrimaryExpression	"""Destructor %s::%s() cannot declare a return type"""		3944362	0					
ANR	3945281	Argument	ZSTR_VAL ( ce -> name )		3944362	2					
ANR	3945282	CallExpression	ZSTR_VAL ( ce -> name )		3944362	0					
ANR	3945283	Callee	ZSTR_VAL		3944362	0					
ANR	3945284	Identifier	ZSTR_VAL		3944362	0					
ANR	3945285	ArgumentList	ce -> name		3944362	1					
ANR	3945286	Argument	ce -> name		3944362	0					
ANR	3945287	PtrMemberAccess	ce -> name		3944362	0					
ANR	3945288	Identifier	ce		3944362	0					
ANR	3945289	Identifier	name		3944362	1					
ANR	3945290	Argument	ZSTR_VAL ( ce -> destructor -> common . function_name )		3944362	3					
ANR	3945291	CallExpression	ZSTR_VAL ( ce -> destructor -> common . function_name )		3944362	0					
ANR	3945292	Callee	ZSTR_VAL		3944362	0					
ANR	3945293	Identifier	ZSTR_VAL		3944362	0					
ANR	3945294	ArgumentList	ce -> destructor -> common . function_name		3944362	1					
ANR	3945295	Argument	ce -> destructor -> common . function_name		3944362	0					
ANR	3945296	MemberAccess	ce -> destructor -> common . function_name		3944362	0					
ANR	3945297	PtrMemberAccess	ce -> destructor -> common		3944362	0					
ANR	3945298	PtrMemberAccess	ce -> destructor		3944362	0					
ANR	3945299	Identifier	ce		3944362	0					
ANR	3945300	Identifier	destructor		3944362	1					
ANR	3945301	Identifier	common		3944362	1					
ANR	3945302	Identifier	function_name		3944362	1					
ANR	3945303	IfStatement	if ( ce -> clone )		3944362	35					
ANR	3945304	Condition	ce -> clone	5329:5:157620:157628	3944362	0	True				
ANR	3945305	PtrMemberAccess	ce -> clone		3944362	0					
ANR	3945306	Identifier	ce		3944362	0					
ANR	3945307	Identifier	clone		3944362	1					
ANR	3945308	CompoundStatement		152:16:4715:4715	3944362	1					
ANR	3945309	ExpressionStatement	ce -> clone -> common . fn_flags |= ZEND_ACC_CLONE	5330:2:157635:157679	3944362	0	True				
ANR	3945310	AssignmentExpression	ce -> clone -> common . fn_flags |= ZEND_ACC_CLONE		3944362	0		|=			
ANR	3945311	MemberAccess	ce -> clone -> common . fn_flags		3944362	0					
ANR	3945312	PtrMemberAccess	ce -> clone -> common		3944362	0					
ANR	3945313	PtrMemberAccess	ce -> clone		3944362	0					
ANR	3945314	Identifier	ce		3944362	0					
ANR	3945315	Identifier	clone		3944362	1					
ANR	3945316	Identifier	common		3944362	1					
ANR	3945317	Identifier	fn_flags		3944362	1					
ANR	3945318	Identifier	ZEND_ACC_CLONE		3944362	1					
ANR	3945319	IfStatement	if ( ce -> clone -> common . fn_flags & ZEND_ACC_STATIC )		3944362	1					
ANR	3945320	Condition	ce -> clone -> common . fn_flags & ZEND_ACC_STATIC	5331:6:157687:157730	3944362	0	True				
ANR	3945321	BitAndExpression	ce -> clone -> common . fn_flags & ZEND_ACC_STATIC		3944362	0		&			
ANR	3945322	MemberAccess	ce -> clone -> common . fn_flags		3944362	0					
ANR	3945323	PtrMemberAccess	ce -> clone -> common		3944362	0					
ANR	3945324	PtrMemberAccess	ce -> clone		3944362	0					
ANR	3945325	Identifier	ce		3944362	0					
ANR	3945326	Identifier	clone		3944362	1					
ANR	3945327	Identifier	common		3944362	1					
ANR	3945328	Identifier	fn_flags		3944362	1					
ANR	3945329	Identifier	ZEND_ACC_STATIC		3944362	1					
ANR	3945330	CompoundStatement		154:52:4817:4817	3944362	1					
ANR	3945331	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Clone method %s::%s() cannot be static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> clone -> common . function_name ) )"	5332:3:157738:157883	3944362	0	True				
ANR	3945332	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Clone method %s::%s() cannot be static"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> clone -> common . function_name ) )"		3944362	0					
ANR	3945333	Callee	zend_error_noreturn		3944362	0					
ANR	3945334	Identifier	zend_error_noreturn		3944362	0					
ANR	3945335	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3945336	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3945337	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3945338	Argument	"""Clone method %s::%s() cannot be static"""		3944362	1					
ANR	3945339	PrimaryExpression	"""Clone method %s::%s() cannot be static"""		3944362	0					
ANR	3945340	Argument	ZSTR_VAL ( ce -> name )		3944362	2					
ANR	3945341	CallExpression	ZSTR_VAL ( ce -> name )		3944362	0					
ANR	3945342	Callee	ZSTR_VAL		3944362	0					
ANR	3945343	Identifier	ZSTR_VAL		3944362	0					
ANR	3945344	ArgumentList	ce -> name		3944362	1					
ANR	3945345	Argument	ce -> name		3944362	0					
ANR	3945346	PtrMemberAccess	ce -> name		3944362	0					
ANR	3945347	Identifier	ce		3944362	0					
ANR	3945348	Identifier	name		3944362	1					
ANR	3945349	Argument	ZSTR_VAL ( ce -> clone -> common . function_name )		3944362	3					
ANR	3945350	CallExpression	ZSTR_VAL ( ce -> clone -> common . function_name )		3944362	0					
ANR	3945351	Callee	ZSTR_VAL		3944362	0					
ANR	3945352	Identifier	ZSTR_VAL		3944362	0					
ANR	3945353	ArgumentList	ce -> clone -> common . function_name		3944362	1					
ANR	3945354	Argument	ce -> clone -> common . function_name		3944362	0					
ANR	3945355	MemberAccess	ce -> clone -> common . function_name		3944362	0					
ANR	3945356	PtrMemberAccess	ce -> clone -> common		3944362	0					
ANR	3945357	PtrMemberAccess	ce -> clone		3944362	0					
ANR	3945358	Identifier	ce		3944362	0					
ANR	3945359	Identifier	clone		3944362	1					
ANR	3945360	Identifier	common		3944362	1					
ANR	3945361	Identifier	function_name		3944362	1					
ANR	3945362	ElseStatement	else		3944362	0					
ANR	3945363	IfStatement	if ( ce -> clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		3944362	0					
ANR	3945364	Condition	ce -> clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE	5334:13:157898:157950	3944362	0	True				
ANR	3945365	BitAndExpression	ce -> clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3944362	0		&			
ANR	3945366	MemberAccess	ce -> clone -> common . fn_flags		3944362	0					
ANR	3945367	PtrMemberAccess	ce -> clone -> common		3944362	0					
ANR	3945368	PtrMemberAccess	ce -> clone		3944362	0					
ANR	3945369	Identifier	ce		3944362	0					
ANR	3945370	Identifier	clone		3944362	1					
ANR	3945371	Identifier	common		3944362	1					
ANR	3945372	Identifier	fn_flags		3944362	1					
ANR	3945373	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3944362	1					
ANR	3945374	CompoundStatement		157:68:5037:5037	3944362	1					
ANR	3945375	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s::%s() cannot declare a return type"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> clone -> common . function_name ) )"	5335:3:157958:158106	3944362	0	True				
ANR	3945376	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s::%s() cannot declare a return type"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> clone -> common . function_name ) )"		3944362	0					
ANR	3945377	Callee	zend_error_noreturn		3944362	0					
ANR	3945378	Identifier	zend_error_noreturn		3944362	0					
ANR	3945379	ArgumentList	E_COMPILE_ERROR		3944362	1					
ANR	3945380	Argument	E_COMPILE_ERROR		3944362	0					
ANR	3945381	Identifier	E_COMPILE_ERROR		3944362	0					
ANR	3945382	Argument	"""%s::%s() cannot declare a return type"""		3944362	1					
ANR	3945383	PrimaryExpression	"""%s::%s() cannot declare a return type"""		3944362	0					
ANR	3945384	Argument	ZSTR_VAL ( ce -> name )		3944362	2					
ANR	3945385	CallExpression	ZSTR_VAL ( ce -> name )		3944362	0					
ANR	3945386	Callee	ZSTR_VAL		3944362	0					
ANR	3945387	Identifier	ZSTR_VAL		3944362	0					
ANR	3945388	ArgumentList	ce -> name		3944362	1					
ANR	3945389	Argument	ce -> name		3944362	0					
ANR	3945390	PtrMemberAccess	ce -> name		3944362	0					
ANR	3945391	Identifier	ce		3944362	0					
ANR	3945392	Identifier	name		3944362	1					
ANR	3945393	Argument	ZSTR_VAL ( ce -> clone -> common . function_name )		3944362	3					
ANR	3945394	CallExpression	ZSTR_VAL ( ce -> clone -> common . function_name )		3944362	0					
ANR	3945395	Callee	ZSTR_VAL		3944362	0					
ANR	3945396	Identifier	ZSTR_VAL		3944362	0					
ANR	3945397	ArgumentList	ce -> clone -> common . function_name		3944362	1					
ANR	3945398	Argument	ce -> clone -> common . function_name		3944362	0					
ANR	3945399	MemberAccess	ce -> clone -> common . function_name		3944362	0					
ANR	3945400	PtrMemberAccess	ce -> clone -> common		3944362	0					
ANR	3945401	PtrMemberAccess	ce -> clone		3944362	0					
ANR	3945402	Identifier	ce		3944362	0					
ANR	3945403	Identifier	clone		3944362	1					
ANR	3945404	Identifier	common		3944362	1					
ANR	3945405	Identifier	function_name		3944362	1					
ANR	3945406	IfStatement	if ( ce -> num_traits > 0 )		3944362	36					
ANR	3945407	Condition	ce -> num_traits > 0	5344:5:158290:158307	3944362	0	True				
ANR	3945408	RelationalExpression	ce -> num_traits > 0		3944362	0		>			
ANR	3945409	PtrMemberAccess	ce -> num_traits		3944362	0					
ANR	3945410	Identifier	ce		3944362	0					
ANR	3945411	Identifier	num_traits		3944362	1					
ANR	3945412	PrimaryExpression	0		3944362	1					
ANR	3945413	CompoundStatement		167:25:5394:5394	3944362	1					
ANR	3945414	ExpressionStatement	ce -> traits = NULL	5345:2:158314:158331	3944362	0	True				
ANR	3945415	AssignmentExpression	ce -> traits = NULL		3944362	0		=			
ANR	3945416	PtrMemberAccess	ce -> traits		3944362	0					
ANR	3945417	Identifier	ce		3944362	0					
ANR	3945418	Identifier	traits		3944362	1					
ANR	3945419	Identifier	NULL		3944362	1					
ANR	3945420	ExpressionStatement	ce -> num_traits = 0	5346:2:158335:158353	3944362	1	True				
ANR	3945421	AssignmentExpression	ce -> num_traits = 0		3944362	0		=			
ANR	3945422	PtrMemberAccess	ce -> num_traits		3944362	0					
ANR	3945423	Identifier	ce		3944362	0					
ANR	3945424	Identifier	num_traits		3944362	1					
ANR	3945425	PrimaryExpression	0		3944362	1					
ANR	3945426	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_IMPLEMENT_TRAITS	5347:2:158357:158398	3944362	2	True				
ANR	3945427	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_IMPLEMENT_TRAITS		3944362	0		|=			
ANR	3945428	PtrMemberAccess	ce -> ce_flags		3944362	0					
ANR	3945429	Identifier	ce		3944362	0					
ANR	3945430	Identifier	ce_flags		3944362	1					
ANR	3945431	Identifier	ZEND_ACC_IMPLEMENT_TRAITS		3944362	1					
ANR	3945432	ExpressionStatement	"zend_emit_op ( NULL , ZEND_BIND_TRAITS , & declare_node , NULL )"	5349:2:158403:158460	3944362	3	True				
ANR	3945433	CallExpression	"zend_emit_op ( NULL , ZEND_BIND_TRAITS , & declare_node , NULL )"		3944362	0					
ANR	3945434	Callee	zend_emit_op		3944362	0					
ANR	3945435	Identifier	zend_emit_op		3944362	0					
ANR	3945436	ArgumentList	NULL		3944362	1					
ANR	3945437	Argument	NULL		3944362	0					
ANR	3945438	Identifier	NULL		3944362	0					
ANR	3945439	Argument	ZEND_BIND_TRAITS		3944362	1					
ANR	3945440	Identifier	ZEND_BIND_TRAITS		3944362	0					
ANR	3945441	Argument	& declare_node		3944362	2					
ANR	3945442	UnaryOperationExpression	& declare_node		3944362	0					
ANR	3945443	UnaryOperator	&		3944362	0					
ANR	3945444	Identifier	declare_node		3944362	1					
ANR	3945445	Argument	NULL		3944362	3					
ANR	3945446	Identifier	NULL		3944362	0					
ANR	3945447	IfStatement	if ( ! ( ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) ) && ( extends_ast || ce -> num_interfaces > 0 ) )		3944362	37					
ANR	3945448	Condition	! ( ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) ) && ( extends_ast || ce -> num_interfaces > 0 )	5352:5:158471:158586	3944362	0	True				
ANR	3945449	AndExpression	! ( ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) ) && ( extends_ast || ce -> num_interfaces > 0 )		3944362	0		&&			
ANR	3945450	UnaryOperationExpression	! ( ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )		3944362	0					
ANR	3945451	UnaryOperator	!		3944362	0					
ANR	3945452	BitAndExpression	ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS )		3944362	1		&			
ANR	3945453	PtrMemberAccess	ce -> ce_flags		3944362	0					
ANR	3945454	Identifier	ce		3944362	0					
ANR	3945455	Identifier	ce_flags		3944362	1					
ANR	3945456	InclusiveOrExpression	ZEND_ACC_INTERFACE | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3944362	1		|			
ANR	3945457	Identifier	ZEND_ACC_INTERFACE		3944362	0					
ANR	3945458	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3944362	1					
ANR	3945459	OrExpression	extends_ast || ce -> num_interfaces > 0		3944362	1		||			
ANR	3945460	Identifier	extends_ast		3944362	0					
ANR	3945461	RelationalExpression	ce -> num_interfaces > 0		3944362	1		>			
ANR	3945462	PtrMemberAccess	ce -> num_interfaces		3944362	0					
ANR	3945463	Identifier	ce		3944362	0					
ANR	3945464	Identifier	num_interfaces		3944362	1					
ANR	3945465	PrimaryExpression	0		3944362	1					
ANR	3945466	CompoundStatement		177:3:5675:5675	3944362	1					
ANR	3945467	ExpressionStatement	zend_verify_abstract_class ( ce )	5355:2:158595:158625	3944362	0	True				
ANR	3945468	CallExpression	zend_verify_abstract_class ( ce )		3944362	0					
ANR	3945469	Callee	zend_verify_abstract_class		3944362	0					
ANR	3945470	Identifier	zend_verify_abstract_class		3944362	0					
ANR	3945471	ArgumentList	ce		3944362	1					
ANR	3945472	Argument	ce		3944362	0					
ANR	3945473	Identifier	ce		3944362	0					
ANR	3945474	IfStatement	if ( ce -> num_interfaces && ! ( ce -> ce_flags & ZEND_ACC_IMPLEMENT_TRAITS ) )		3944362	1					
ANR	3945475	Condition	ce -> num_interfaces && ! ( ce -> ce_flags & ZEND_ACC_IMPLEMENT_TRAITS )	5356:6:158633:158697	3944362	0	True				
ANR	3945476	AndExpression	ce -> num_interfaces && ! ( ce -> ce_flags & ZEND_ACC_IMPLEMENT_TRAITS )		3944362	0		&&			
ANR	3945477	PtrMemberAccess	ce -> num_interfaces		3944362	0					
ANR	3945478	Identifier	ce		3944362	0					
ANR	3945479	Identifier	num_interfaces		3944362	1					
ANR	3945480	UnaryOperationExpression	! ( ce -> ce_flags & ZEND_ACC_IMPLEMENT_TRAITS )		3944362	1					
ANR	3945481	UnaryOperator	!		3944362	0					
ANR	3945482	BitAndExpression	ce -> ce_flags & ZEND_ACC_IMPLEMENT_TRAITS		3944362	1		&			
ANR	3945483	PtrMemberAccess	ce -> ce_flags		3944362	0					
ANR	3945484	Identifier	ce		3944362	0					
ANR	3945485	Identifier	ce_flags		3944362	1					
ANR	3945486	Identifier	ZEND_ACC_IMPLEMENT_TRAITS		3944362	1					
ANR	3945487	CompoundStatement		179:73:5784:5784	3944362	1					
ANR	3945488	ExpressionStatement	"zend_emit_op ( NULL , ZEND_VERIFY_ABSTRACT_CLASS , & declare_node , NULL )"	5357:3:158705:158772	3944362	0	True				
ANR	3945489	CallExpression	"zend_emit_op ( NULL , ZEND_VERIFY_ABSTRACT_CLASS , & declare_node , NULL )"		3944362	0					
ANR	3945490	Callee	zend_emit_op		3944362	0					
ANR	3945491	Identifier	zend_emit_op		3944362	0					
ANR	3945492	ArgumentList	NULL		3944362	1					
ANR	3945493	Argument	NULL		3944362	0					
ANR	3945494	Identifier	NULL		3944362	0					
ANR	3945495	Argument	ZEND_VERIFY_ABSTRACT_CLASS		3944362	1					
ANR	3945496	Identifier	ZEND_VERIFY_ABSTRACT_CLASS		3944362	0					
ANR	3945497	Argument	& declare_node		3944362	2					
ANR	3945498	UnaryOperationExpression	& declare_node		3944362	0					
ANR	3945499	UnaryOperator	&		3944362	0					
ANR	3945500	Identifier	declare_node		3944362	1					
ANR	3945501	Argument	NULL		3944362	3					
ANR	3945502	Identifier	NULL		3944362	0					
ANR	3945503	IfStatement	if ( ce -> num_interfaces > 0 )		3944362	38					
ANR	3945504	Condition	ce -> num_interfaces > 0	5365:5:159017:159038	3944362	0	True				
ANR	3945505	RelationalExpression	ce -> num_interfaces > 0		3944362	0		>			
ANR	3945506	PtrMemberAccess	ce -> num_interfaces		3944362	0					
ANR	3945507	Identifier	ce		3944362	0					
ANR	3945508	Identifier	num_interfaces		3944362	1					
ANR	3945509	PrimaryExpression	0		3944362	1					
ANR	3945510	CompoundStatement		188:29:6125:6125	3944362	1					
ANR	3945511	ExpressionStatement	ce -> interfaces = NULL	5366:2:159045:159066	3944362	0	True				
ANR	3945512	AssignmentExpression	ce -> interfaces = NULL		3944362	0		=			
ANR	3945513	PtrMemberAccess	ce -> interfaces		3944362	0					
ANR	3945514	Identifier	ce		3944362	0					
ANR	3945515	Identifier	interfaces		3944362	1					
ANR	3945516	Identifier	NULL		3944362	1					
ANR	3945517	ExpressionStatement	ce -> num_interfaces = 0	5367:2:159070:159092	3944362	1	True				
ANR	3945518	AssignmentExpression	ce -> num_interfaces = 0		3944362	0		=			
ANR	3945519	PtrMemberAccess	ce -> num_interfaces		3944362	0					
ANR	3945520	Identifier	ce		3944362	0					
ANR	3945521	Identifier	num_interfaces		3944362	1					
ANR	3945522	PrimaryExpression	0		3944362	1					
ANR	3945523	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_IMPLEMENT_INTERFACES	5368:2:159096:159141	3944362	2	True				
ANR	3945524	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_IMPLEMENT_INTERFACES		3944362	0		|=			
ANR	3945525	PtrMemberAccess	ce -> ce_flags		3944362	0					
ANR	3945526	Identifier	ce		3944362	0					
ANR	3945527	Identifier	ce_flags		3944362	1					
ANR	3945528	Identifier	ZEND_ACC_IMPLEMENT_INTERFACES		3944362	1					
ANR	3945529	ExpressionStatement	FC ( implementing_class ) = original_implementing_class	5371:1:159148:159200	3944362	39	True				
ANR	3945530	AssignmentExpression	FC ( implementing_class ) = original_implementing_class		3944362	0		=			
ANR	3945531	CallExpression	FC ( implementing_class )		3944362	0					
ANR	3945532	Callee	FC		3944362	0					
ANR	3945533	Identifier	FC		3944362	0					
ANR	3945534	ArgumentList	implementing_class		3944362	1					
ANR	3945535	Argument	implementing_class		3944362	0					
ANR	3945536	Identifier	implementing_class		3944362	0					
ANR	3945537	Identifier	original_implementing_class		3944362	1					
ANR	3945538	ExpressionStatement	CG ( active_class_entry ) = original_ce	5372:1:159203:159239	3944362	40	True				
ANR	3945539	AssignmentExpression	CG ( active_class_entry ) = original_ce		3944362	0		=			
ANR	3945540	CallExpression	CG ( active_class_entry )		3944362	0					
ANR	3945541	Callee	CG		3944362	0					
ANR	3945542	Identifier	CG		3944362	0					
ANR	3945543	ArgumentList	active_class_entry		3944362	1					
ANR	3945544	Argument	active_class_entry		3944362	0					
ANR	3945545	Identifier	active_class_entry		3944362	0					
ANR	3945546	Identifier	original_ce		3944362	1					
ANR	3945547	ReturnType	void		3944362	1					
ANR	3945548	Identifier	zend_compile_class_decl		3944362	2					
ANR	3945549	ParameterList	zend_ast * ast		3944362	3					
ANR	3945550	Parameter	zend_ast * ast	5177:29:152890:152902	3944362	0	True				
ANR	3945551	ParameterType	zend_ast *		3944362	0					
ANR	3945552	Identifier	ast		3944362	1					
ANR	3945553	CFGEntryNode	ENTRY		3944362		True				
ANR	3945554	CFGExitNode	EXIT		3944362		True				
ANR	3945555	Symbol	extends_node		3944362						
ANR	3945556	Symbol	ast -> lineno		3944362						
ANR	3945557	Symbol	original_implementing_class		3944362						
ANR	3945558	Symbol	* ce -> constructor		3944362						
ANR	3945559	Symbol	* ce		3944362						
ANR	3945560	Symbol	ce -> info . user . line_start		3944362						
ANR	3945561	Symbol	decl -> flags		3944362						
ANR	3945562	Symbol	decl -> doc_comment		3944362						
ANR	3945563	Symbol	* ce -> destructor		3944362						
ANR	3945564	Symbol	ZEND_USER_CLASS		3944362						
ANR	3945565	Symbol	decl -> end_lineno		3944362						
ANR	3945566	Symbol	ce -> name		3944362						
ANR	3945567	Symbol	ZEND_ACC_INTERFACE		3944362						
ANR	3945568	Symbol	zend_class_unserialize_deny		3944362						
ANR	3945569	Symbol	ce -> constructor -> common . fn_flags		3944362						
ANR	3945570	Symbol	IS_CONST		3944362						
ANR	3945571	Symbol	ce -> destructor		3944362						
ANR	3945572	Symbol	decl -> start_lineno		3944362						
ANR	3945573	Symbol	ce -> ce_flags		3944362						
ANR	3945574	Symbol	zend_get_compiled_filename		3944362						
ANR	3945575	Symbol	declare_node		3944362						
ANR	3945576	Symbol	ZEND_ACC_CTOR		3944362						
ANR	3945577	Symbol	implements_ast		3944362						
ANR	3945578	Symbol	ce -> info		3944362						
ANR	3945579	Symbol	zend_is_const_default_class_ref		3944362						
ANR	3945580	Symbol	ce -> type		3944362						
ANR	3945581	Symbol	ce -> destructor -> common . fn_flags		3944362						
ANR	3945582	Symbol	ZEND_ACC_IMPLEMENT_TRAITS		3944362						
ANR	3945583	Symbol	ZEND_ACC_DTOR		3944362						
ANR	3945584	Symbol	zend_prefix_with_ns		3944362						
ANR	3945585	Symbol	ce -> constructor -> common		3944362						
ANR	3945586	Symbol	extends_ast		3944362						
ANR	3945587	Symbol	ZEND_DECLARE_ANON_CLASS		3944362						
ANR	3945588	Symbol	key		3944362						
ANR	3945589	Symbol	ce -> destructor -> common		3944362						
ANR	3945590	Symbol	ce -> info . user . filename		3944362						
ANR	3945591	Symbol	decl -> name		3944362						
ANR	3945592	Symbol	ce		3944362						
ANR	3945593	Symbol	ZEND_VERIFY_ABSTRACT_CLASS		3944362						
ANR	3945594	Symbol	get_next_op		3944362						
ANR	3945595	Symbol	ZEND_DECLARE_ANON_INHERITED_CLASS		3944362						
ANR	3945596	Symbol	ce -> constructor		3944362						
ANR	3945597	Symbol	CG		3944362						
ANR	3945598	Symbol	active_op_array		3944362						
ANR	3945599	Symbol	import_name		3944362						
ANR	3945600	Symbol	ce -> num_traits		3944362						
ANR	3945601	Symbol	ce -> info . user . doc_comment		3944362						
ANR	3945602	Symbol	* ce -> clone		3944362						
ANR	3945603	Symbol	lcname		3944362						
ANR	3945604	Symbol	* opline		3944362						
ANR	3945605	Symbol	current_namespace		3944362						
ANR	3945606	Symbol	ZEND_DECLARE_CLASS		3944362						
ANR	3945607	Symbol	decl -> child		3944362						
ANR	3945608	Symbol	ce -> serialize		3944362						
ANR	3945609	Symbol	opline -> op2_type		3944362						
ANR	3945610	Symbol	* decl		3944362						
ANR	3945611	Symbol	ce -> info . user . line_end		3944362						
ANR	3945612	Symbol	stmt_ast		3944362						
ANR	3945613	Symbol	zend_build_runtime_definition_key		3944362						
ANR	3945614	Symbol	ce -> constructor -> common . function_name		3944362						
ANR	3945615	Symbol	ast		3944362						
ANR	3945616	Symbol	decl		3944362						
ANR	3945617	Symbol	active_class_entry		3944362						
ANR	3945618	Symbol	E_COMPILE_ERROR		3944362						
ANR	3945619	Symbol	arena		3944362						
ANR	3945620	Symbol	ce -> unserialize		3944362						
ANR	3945621	Symbol	ZEND_ACC_ANON_CLASS		3944362						
ANR	3945622	Symbol	zend_string_tolower		3944362						
ANR	3945623	Symbol	opline -> result		3944362						
ANR	3945624	Symbol	opline -> extended_value		3944362						
ANR	3945625	Symbol	& CG		3944362						
ANR	3945626	Symbol	opline		3944362						
ANR	3945627	Symbol	extends_node . u . op . var		3944362						
ANR	3945628	Symbol	zend_lineno		3944362						
ANR	3945629	Symbol	& extends_node		3944362						
ANR	3945630	Symbol	extends_name		3944362						
ANR	3945631	Symbol	ce -> clone -> common . function_name		3944362						
ANR	3945632	Symbol	zend_hash_find_ptr		3944362						
ANR	3945633	Symbol	& declare_node		3944362						
ANR	3945634	Symbol	* decl -> child		3944362						
ANR	3945635	Symbol	NULL		3944362						
ANR	3945636	Symbol	imports		3944362						
ANR	3945637	Symbol	zend_arena_alloc		3944362						
ANR	3945638	Symbol	ce -> info . user		3944362						
ANR	3945639	Symbol	original_ce		3944362						
ANR	3945640	Symbol	ce -> clone -> common		3944362						
ANR	3945641	Symbol	zend_class_serialize_deny		3944362						
ANR	3945642	Symbol	ZEND_ACC_CLONE		3944362						
ANR	3945643	Symbol	zend_string_copy		3944362						
ANR	3945644	Symbol	opline -> op1_type		3944362						
ANR	3945645	Symbol	ZEND_ACC_IMPLEMENT_INTERFACES		3944362						
ANR	3945646	Symbol	implementing_class		3944362						
ANR	3945647	Symbol	decl -> lex_pos		3944362						
ANR	3945648	Symbol	extends_node . u		3944362						
ANR	3945649	Symbol	name		3944362						
ANR	3945650	Symbol	ce -> clone		3944362						
ANR	3945651	Symbol	FC		3944362						
ANR	3945652	Symbol	* * decl		3944362						
ANR	3945653	Symbol	opline -> op1		3944362						
ANR	3945654	Symbol	opline -> op2		3944362						
ANR	3945655	Symbol	zend_string_equals_ci		3944362						
ANR	3945656	Symbol	* * ce		3944362						
ANR	3945657	Symbol	UNEXPECTED		3944362						
ANR	3945658	Symbol	zend_ast_get_str		3944362						
ANR	3945659	Symbol	* ast		3944362						
ANR	3945660	Symbol	ce -> num_interfaces		3944362						
ANR	3945661	Symbol	ZEND_ACC_STATIC		3944362						
ANR	3945662	Symbol	class_table		3944362						
ANR	3945663	Symbol	ce -> interfaces		3944362						
ANR	3945664	Symbol	& FC		3944362						
ANR	3945665	Symbol	ZEND_ACC_HAS_RETURN_TYPE		3944362						
ANR	3945666	Symbol	ce -> clone -> common . fn_flags		3944362						
ANR	3945667	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3944362						
ANR	3945668	Symbol	zend_generate_anon_class_name		3944362						
ANR	3945669	Symbol	ZSTR_VAL		3944362						
ANR	3945670	Symbol	ce -> destructor -> common . function_name		3944362						
ANR	3945671	Symbol	ce -> traits		3944362						
ANR	3945672	Symbol	zend_new_interned_string		3944362						
ANR	3945673	Symbol	extends_node . u . op		3944362						
ANR	3945674	Symbol	opline -> opcode		3944362						
ANR	3945675	Symbol	ZEND_DECLARE_INHERITED_CLASS		3944362						
ANR	3945676	Symbol	ZEND_BIND_TRAITS		3944362						
ANR	3945677	Symbol	EXPECTED		3944362						
ANR	3945678	Symbol	IS_UNUSED		3944362						
ANR	3945679	Function	zend_get_import_ht	5376:0:159254:159950							
ANR	3945680	FunctionDef	zend_get_import_ht (uint32_t type)		3945679	0					
ANR	3945681	CompoundStatement		5377:0:159316:159950	3945679	0					
ANR	3945682	SwitchStatement	switch ( type )		3945679	0					
ANR	3945683	Condition	type	5378:9:159327:159330	3945679	0	True				
ANR	3945684	Identifier	type		3945679	0					
ANR	3945685	CompoundStatement		2:15:16:16	3945679	1					
ANR	3945686	Label	case T_CLASS :	5379:2:159337:159349	3945679	0	True				
ANR	3945687	Identifier	T_CLASS		3945679	0					
ANR	3945688	IfStatement	if ( ! FC ( imports ) )		3945679	1					
ANR	3945689	Condition	! FC ( imports )	5380:7:159358:159369	3945679	0	True				
ANR	3945690	UnaryOperationExpression	! FC ( imports )		3945679	0					
ANR	3945691	UnaryOperator	!		3945679	0					
ANR	3945692	CallExpression	FC ( imports )		3945679	1					
ANR	3945693	Callee	FC		3945679	0					
ANR	3945694	Identifier	FC		3945679	0					
ANR	3945695	ArgumentList	imports		3945679	1					
ANR	3945696	Argument	imports		3945679	0					
ANR	3945697	Identifier	imports		3945679	0					
ANR	3945698	CompoundStatement		4:21:55:55	3945679	1					
ANR	3945699	ExpressionStatement	FC ( imports ) = emalloc ( sizeof ( HashTable ) )	5381:4:159378:159418	3945679	0	True				
ANR	3945700	AssignmentExpression	FC ( imports ) = emalloc ( sizeof ( HashTable ) )		3945679	0		=			
ANR	3945701	CallExpression	FC ( imports )		3945679	0					
ANR	3945702	Callee	FC		3945679	0					
ANR	3945703	Identifier	FC		3945679	0					
ANR	3945704	ArgumentList	imports		3945679	1					
ANR	3945705	Argument	imports		3945679	0					
ANR	3945706	Identifier	imports		3945679	0					
ANR	3945707	CallExpression	emalloc ( sizeof ( HashTable ) )		3945679	1					
ANR	3945708	Callee	emalloc		3945679	0					
ANR	3945709	Identifier	emalloc		3945679	0					
ANR	3945710	ArgumentList	sizeof ( HashTable )		3945679	1					
ANR	3945711	Argument	sizeof ( HashTable )		3945679	0					
ANR	3945712	SizeofExpression	sizeof ( HashTable )		3945679	0					
ANR	3945713	Sizeof	sizeof		3945679	0					
ANR	3945714	SizeofOperand	HashTable		3945679	1					
ANR	3945715	ExpressionStatement	"zend_hash_init ( FC ( imports ) , 8 , NULL , str_dtor , 0 )"	5382:4:159424:159473	3945679	1	True				
ANR	3945716	CallExpression	"zend_hash_init ( FC ( imports ) , 8 , NULL , str_dtor , 0 )"		3945679	0					
ANR	3945717	Callee	zend_hash_init		3945679	0					
ANR	3945718	Identifier	zend_hash_init		3945679	0					
ANR	3945719	ArgumentList	FC ( imports )		3945679	1					
ANR	3945720	Argument	FC ( imports )		3945679	0					
ANR	3945721	CallExpression	FC ( imports )		3945679	0					
ANR	3945722	Callee	FC		3945679	0					
ANR	3945723	Identifier	FC		3945679	0					
ANR	3945724	ArgumentList	imports		3945679	1					
ANR	3945725	Argument	imports		3945679	0					
ANR	3945726	Identifier	imports		3945679	0					
ANR	3945727	Argument	8		3945679	1					
ANR	3945728	PrimaryExpression	8		3945679	0					
ANR	3945729	Argument	NULL		3945679	2					
ANR	3945730	Identifier	NULL		3945679	0					
ANR	3945731	Argument	str_dtor		3945679	3					
ANR	3945732	Identifier	str_dtor		3945679	0					
ANR	3945733	Argument	0		3945679	4					
ANR	3945734	PrimaryExpression	0		3945679	0					
ANR	3945735	ReturnStatement	return FC ( imports ) ;	5384:3:159483:159501	3945679	2	True				
ANR	3945736	CallExpression	FC ( imports )		3945679	0					
ANR	3945737	Callee	FC		3945679	0					
ANR	3945738	Identifier	FC		3945679	0					
ANR	3945739	ArgumentList	imports		3945679	1					
ANR	3945740	Argument	imports		3945679	0					
ANR	3945741	Identifier	imports		3945679	0					
ANR	3945742	Label	case T_FUNCTION :	5385:2:159505:159520	3945679	3	True				
ANR	3945743	Identifier	T_FUNCTION		3945679	0					
ANR	3945744	IfStatement	if ( ! FC ( imports_function ) )		3945679	4					
ANR	3945745	Condition	! FC ( imports_function )	5386:7:159529:159549	3945679	0	True				
ANR	3945746	UnaryOperationExpression	! FC ( imports_function )		3945679	0					
ANR	3945747	UnaryOperator	!		3945679	0					
ANR	3945748	CallExpression	FC ( imports_function )		3945679	1					
ANR	3945749	Callee	FC		3945679	0					
ANR	3945750	Identifier	FC		3945679	0					
ANR	3945751	ArgumentList	imports_function		3945679	1					
ANR	3945752	Argument	imports_function		3945679	0					
ANR	3945753	Identifier	imports_function		3945679	0					
ANR	3945754	CompoundStatement		10:30:235:235	3945679	1					
ANR	3945755	ExpressionStatement	FC ( imports_function ) = emalloc ( sizeof ( HashTable ) )	5387:4:159558:159607	3945679	0	True				
ANR	3945756	AssignmentExpression	FC ( imports_function ) = emalloc ( sizeof ( HashTable ) )		3945679	0		=			
ANR	3945757	CallExpression	FC ( imports_function )		3945679	0					
ANR	3945758	Callee	FC		3945679	0					
ANR	3945759	Identifier	FC		3945679	0					
ANR	3945760	ArgumentList	imports_function		3945679	1					
ANR	3945761	Argument	imports_function		3945679	0					
ANR	3945762	Identifier	imports_function		3945679	0					
ANR	3945763	CallExpression	emalloc ( sizeof ( HashTable ) )		3945679	1					
ANR	3945764	Callee	emalloc		3945679	0					
ANR	3945765	Identifier	emalloc		3945679	0					
ANR	3945766	ArgumentList	sizeof ( HashTable )		3945679	1					
ANR	3945767	Argument	sizeof ( HashTable )		3945679	0					
ANR	3945768	SizeofExpression	sizeof ( HashTable )		3945679	0					
ANR	3945769	Sizeof	sizeof		3945679	0					
ANR	3945770	SizeofOperand	HashTable		3945679	1					
ANR	3945771	ExpressionStatement	"zend_hash_init ( FC ( imports_function ) , 8 , NULL , str_dtor , 0 )"	5388:4:159613:159671	3945679	1	True				
ANR	3945772	CallExpression	"zend_hash_init ( FC ( imports_function ) , 8 , NULL , str_dtor , 0 )"		3945679	0					
ANR	3945773	Callee	zend_hash_init		3945679	0					
ANR	3945774	Identifier	zend_hash_init		3945679	0					
ANR	3945775	ArgumentList	FC ( imports_function )		3945679	1					
ANR	3945776	Argument	FC ( imports_function )		3945679	0					
ANR	3945777	CallExpression	FC ( imports_function )		3945679	0					
ANR	3945778	Callee	FC		3945679	0					
ANR	3945779	Identifier	FC		3945679	0					
ANR	3945780	ArgumentList	imports_function		3945679	1					
ANR	3945781	Argument	imports_function		3945679	0					
ANR	3945782	Identifier	imports_function		3945679	0					
ANR	3945783	Argument	8		3945679	1					
ANR	3945784	PrimaryExpression	8		3945679	0					
ANR	3945785	Argument	NULL		3945679	2					
ANR	3945786	Identifier	NULL		3945679	0					
ANR	3945787	Argument	str_dtor		3945679	3					
ANR	3945788	Identifier	str_dtor		3945679	0					
ANR	3945789	Argument	0		3945679	4					
ANR	3945790	PrimaryExpression	0		3945679	0					
ANR	3945791	ReturnStatement	return FC ( imports_function ) ;	5390:3:159681:159708	3945679	5	True				
ANR	3945792	CallExpression	FC ( imports_function )		3945679	0					
ANR	3945793	Callee	FC		3945679	0					
ANR	3945794	Identifier	FC		3945679	0					
ANR	3945795	ArgumentList	imports_function		3945679	1					
ANR	3945796	Argument	imports_function		3945679	0					
ANR	3945797	Identifier	imports_function		3945679	0					
ANR	3945798	Label	case T_CONST :	5391:2:159712:159724	3945679	6	True				
ANR	3945799	Identifier	T_CONST		3945679	0					
ANR	3945800	IfStatement	if ( ! FC ( imports_const ) )		3945679	7					
ANR	3945801	Condition	! FC ( imports_const )	5392:7:159733:159750	3945679	0	True				
ANR	3945802	UnaryOperationExpression	! FC ( imports_const )		3945679	0					
ANR	3945803	UnaryOperator	!		3945679	0					
ANR	3945804	CallExpression	FC ( imports_const )		3945679	1					
ANR	3945805	Callee	FC		3945679	0					
ANR	3945806	Identifier	FC		3945679	0					
ANR	3945807	ArgumentList	imports_const		3945679	1					
ANR	3945808	Argument	imports_const		3945679	0					
ANR	3945809	Identifier	imports_const		3945679	0					
ANR	3945810	CompoundStatement		16:27:436:436	3945679	1					
ANR	3945811	ExpressionStatement	FC ( imports_const ) = emalloc ( sizeof ( HashTable ) )	5393:4:159759:159805	3945679	0	True				
ANR	3945812	AssignmentExpression	FC ( imports_const ) = emalloc ( sizeof ( HashTable ) )		3945679	0		=			
ANR	3945813	CallExpression	FC ( imports_const )		3945679	0					
ANR	3945814	Callee	FC		3945679	0					
ANR	3945815	Identifier	FC		3945679	0					
ANR	3945816	ArgumentList	imports_const		3945679	1					
ANR	3945817	Argument	imports_const		3945679	0					
ANR	3945818	Identifier	imports_const		3945679	0					
ANR	3945819	CallExpression	emalloc ( sizeof ( HashTable ) )		3945679	1					
ANR	3945820	Callee	emalloc		3945679	0					
ANR	3945821	Identifier	emalloc		3945679	0					
ANR	3945822	ArgumentList	sizeof ( HashTable )		3945679	1					
ANR	3945823	Argument	sizeof ( HashTable )		3945679	0					
ANR	3945824	SizeofExpression	sizeof ( HashTable )		3945679	0					
ANR	3945825	Sizeof	sizeof		3945679	0					
ANR	3945826	SizeofOperand	HashTable		3945679	1					
ANR	3945827	ExpressionStatement	"zend_hash_init ( FC ( imports_const ) , 8 , NULL , str_dtor , 0 )"	5394:4:159811:159866	3945679	1	True				
ANR	3945828	CallExpression	"zend_hash_init ( FC ( imports_const ) , 8 , NULL , str_dtor , 0 )"		3945679	0					
ANR	3945829	Callee	zend_hash_init		3945679	0					
ANR	3945830	Identifier	zend_hash_init		3945679	0					
ANR	3945831	ArgumentList	FC ( imports_const )		3945679	1					
ANR	3945832	Argument	FC ( imports_const )		3945679	0					
ANR	3945833	CallExpression	FC ( imports_const )		3945679	0					
ANR	3945834	Callee	FC		3945679	0					
ANR	3945835	Identifier	FC		3945679	0					
ANR	3945836	ArgumentList	imports_const		3945679	1					
ANR	3945837	Argument	imports_const		3945679	0					
ANR	3945838	Identifier	imports_const		3945679	0					
ANR	3945839	Argument	8		3945679	1					
ANR	3945840	PrimaryExpression	8		3945679	0					
ANR	3945841	Argument	NULL		3945679	2					
ANR	3945842	Identifier	NULL		3945679	0					
ANR	3945843	Argument	str_dtor		3945679	3					
ANR	3945844	Identifier	str_dtor		3945679	0					
ANR	3945845	Argument	0		3945679	4					
ANR	3945846	PrimaryExpression	0		3945679	0					
ANR	3945847	ReturnStatement	return FC ( imports_const ) ;	5396:3:159876:159900	3945679	8	True				
ANR	3945848	CallExpression	FC ( imports_const )		3945679	0					
ANR	3945849	Callee	FC		3945679	0					
ANR	3945850	Identifier	FC		3945679	0					
ANR	3945851	ArgumentList	imports_const		3945679	1					
ANR	3945852	Argument	imports_const		3945679	0					
ANR	3945853	Identifier	imports_const		3945679	0					
ANR	3945854	Statement	EMPTY_SWITCH_DEFAULT_CASE	5397:2:159904:159928	3945679	9	True				
ANR	3945855	Statement	(	5397:27:159929:159929	3945679	10	True				
ANR	3945856	Statement	)	5397:28:159930:159930	3945679	11	True				
ANR	3945857	ReturnStatement	return NULL ;	5400:1:159937:159948	3945679	1	True				
ANR	3945858	Identifier	NULL		3945679	0					
ANR	3945859	ReturnType	static HashTable *		3945679	1					
ANR	3945860	Identifier	zend_get_import_ht		3945679	2					
ANR	3945861	ParameterList	uint32_t type		3945679	3					
ANR	3945862	Parameter	uint32_t type	5376:37:159291:159303	3945679	0	True				
ANR	3945863	ParameterType	uint32_t		3945679	0					
ANR	3945864	Identifier	type		3945679	1					
ANR	3945865	CFGEntryNode	ENTRY		3945679		True				
ANR	3945866	CFGExitNode	EXIT		3945679		True				
ANR	3945867	Symbol	emalloc		3945679						
ANR	3945868	Symbol	imports		3945679						
ANR	3945869	Symbol	NULL		3945679						
ANR	3945870	Symbol	imports_const		3945679						
ANR	3945871	Symbol	type		3945679						
ANR	3945872	Symbol	FC		3945679						
ANR	3945873	Symbol	str_dtor		3945679						
ANR	3945874	Symbol	imports_function		3945679						
ANR	3945875	Function	zend_get_use_type_str	5404:0:159963:160204							
ANR	3945876	FunctionDef	zend_get_use_type_str (uint32_t type)		3945875	0					
ANR	3945877	CompoundStatement		5405:0:160023:160204	3945875	0					
ANR	3945878	SwitchStatement	switch ( type )		3945875	0					
ANR	3945879	Condition	type	5406:9:160034:160037	3945875	0	True				
ANR	3945880	Identifier	type		3945875	0					
ANR	3945881	CompoundStatement		2:15:16:16	3945875	1					
ANR	3945882	Label	case T_CLASS :	5407:2:160044:160056	3945875	0	True				
ANR	3945883	Identifier	T_CLASS		3945875	0					
ANR	3945884	ReturnStatement	"return """" ;"	5408:3:160061:160070	3945875	1	True				
ANR	3945885	PrimaryExpression	""""""		3945875	0					
ANR	3945886	Label	case T_FUNCTION :	5409:2:160074:160089	3945875	2	True				
ANR	3945887	Identifier	T_FUNCTION		3945875	0					
ANR	3945888	ReturnStatement	"return "" function"" ;"	5410:3:160094:160112	3945875	3	True				
ANR	3945889	PrimaryExpression	""" function"""		3945875	0					
ANR	3945890	Label	case T_CONST :	5411:2:160116:160128	3945875	4	True				
ANR	3945891	Identifier	T_CONST		3945875	0					
ANR	3945892	ReturnStatement	"return "" const"" ;"	5412:3:160133:160148	3945875	5	True				
ANR	3945893	PrimaryExpression	""" const"""		3945875	0					
ANR	3945894	Statement	EMPTY_SWITCH_DEFAULT_CASE	5413:2:160152:160176	3945875	6	True				
ANR	3945895	Statement	(	5413:27:160177:160177	3945875	7	True				
ANR	3945896	Statement	)	5413:28:160178:160178	3945875	8	True				
ANR	3945897	ReturnStatement	"return "" unknown"" ;"	5416:1:160185:160202	3945875	1	True				
ANR	3945898	PrimaryExpression	""" unknown"""		3945875	0					
ANR	3945899	ReturnType	static char *		3945875	1					
ANR	3945900	Identifier	zend_get_use_type_str		3945875	2					
ANR	3945901	ParameterList	uint32_t type		3945875	3					
ANR	3945902	Parameter	uint32_t type	5404:35:159998:160010	3945875	0	True				
ANR	3945903	ParameterType	uint32_t		3945875	0					
ANR	3945904	Identifier	type		3945875	1					
ANR	3945905	CFGEntryNode	ENTRY		3945875		True				
ANR	3945906	CFGExitNode	EXIT		3945875		True				
ANR	3945907	Symbol	type		3945875						
ANR	3945908	Function	zend_check_already_in_use	5420:0:160217:160592							
ANR	3945909	FunctionDef	"zend_check_already_in_use (uint32_t type , zend_string * old_name , zend_string * new_name , zend_string * check_name)"		3945908	0					
ANR	3945910	CompoundStatement		5421:0:160351:160592	3945908	0					
ANR	3945911	IfStatement	"if ( zend_string_equals_ci ( old_name , check_name ) )"		3945908	0					
ANR	3945912	Condition	"zend_string_equals_ci ( old_name , check_name )"	5422:5:160358:160400	3945908	0	True				
ANR	3945913	CallExpression	"zend_string_equals_ci ( old_name , check_name )"		3945908	0					
ANR	3945914	Callee	zend_string_equals_ci		3945908	0					
ANR	3945915	Identifier	zend_string_equals_ci		3945908	0					
ANR	3945916	ArgumentList	old_name		3945908	1					
ANR	3945917	Argument	old_name		3945908	0					
ANR	3945918	Identifier	old_name		3945908	0					
ANR	3945919	Argument	check_name		3945908	1					
ANR	3945920	Identifier	check_name		3945908	0					
ANR	3945921	CompoundStatement		2:50:51:51	3945908	1					
ANR	3945922	ReturnStatement	return ;	5423:2:160407:160413	3945908	0	True				
ANR	3945923	Statement	zend_error_noreturn	5426:1:160420:160438	3945908	1	True				
ANR	3945924	Statement	(	5426:20:160439:160439	3945908	2	True				
ANR	3945925	Statement	E_COMPILE_ERROR	5426:21:160440:160454	3945908	3	True				
ANR	3945926	Statement	","	5426:36:160455:160455	3945908	4	True				
ANR	3945927	Statement	"""Cannot use%s %s as %s because the name """	5426:38:160457:160497	3945908	5	True				
ANR	3945928	Statement	"""is already in use"""	5427:2:160501:160519	3945908	6	True				
ANR	3945929	Statement	","	5427:21:160520:160520	3945908	7	True				
ANR	3945930	Statement	zend_get_use_type_str	5427:23:160522:160542	3945908	8	True				
ANR	3945931	Statement	(	5427:44:160543:160543	3945908	9	True				
ANR	3945932	Statement	type	5427:45:160544:160547	3945908	10	True				
ANR	3945933	Statement	)	5427:49:160548:160548	3945908	11	True				
ANR	3945934	Statement	","	5427:50:160549:160549	3945908	12	True				
ANR	3945935	Statement	ZSTR_VAL	5427:52:160551:160558	3945908	13	True				
ANR	3945936	Statement	(	5427:60:160559:160559	3945908	14	True				
ANR	3945937	Statement	old_name	5427:61:160560:160567	3945908	15	True				
ANR	3945938	Statement	)	5427:69:160568:160568	3945908	16	True				
ANR	3945939	Statement	","	5427:70:160569:160569	3945908	17	True				
ANR	3945940	Statement	ZSTR_VAL	5427:72:160571:160578	3945908	18	True				
ANR	3945941	Statement	(	5427:80:160579:160579	3945908	19	True				
ANR	3945942	Statement	new_name	5427:81:160580:160587	3945908	20	True				
ANR	3945943	Statement	)	5427:89:160588:160588	3945908	21	True				
ANR	3945944	Statement	)	5427:90:160589:160589	3945908	22	True				
ANR	3945945	ExpressionStatement		5427:91:160590:160590	3945908	23	True				
ANR	3945946	ReturnType	static void		3945908	1					
ANR	3945947	Identifier	zend_check_already_in_use		3945908	2					
ANR	3945948	ParameterList	"uint32_t type , zend_string * old_name , zend_string * new_name , zend_string * check_name"		3945908	3					
ANR	3945949	Parameter	uint32_t type	5420:38:160255:160267	3945908	0	True				
ANR	3945950	ParameterType	uint32_t		3945908	0					
ANR	3945951	Identifier	type		3945908	1					
ANR	3945952	Parameter	zend_string * old_name	5420:53:160270:160290	3945908	1	True				
ANR	3945953	ParameterType	zend_string *		3945908	0					
ANR	3945954	Identifier	old_name		3945908	1					
ANR	3945955	Parameter	zend_string * new_name	5420:76:160293:160313	3945908	2	True				
ANR	3945956	ParameterType	zend_string *		3945908	0					
ANR	3945957	Identifier	new_name		3945908	1					
ANR	3945958	Parameter	zend_string * check_name	5420:99:160316:160338	3945908	3	True				
ANR	3945959	ParameterType	zend_string *		3945908	0					
ANR	3945960	Identifier	check_name		3945908	1					
ANR	3945961	CFGEntryNode	ENTRY		3945908		True				
ANR	3945962	CFGExitNode	EXIT		3945908		True				
ANR	3945963	Symbol	old_name		3945908						
ANR	3945964	Symbol	zend_string_equals_ci		3945908						
ANR	3945965	Symbol	check_name		3945908						
ANR	3945966	Symbol	type		3945908						
ANR	3945967	Symbol	new_name		3945908						
ANR	3945968	Function	zend_compile_use	5431:0:160605:164151							
ANR	3945969	FunctionDef	zend_compile_use (zend_ast * ast)		3945968	0					
ANR	3945970	CompoundStatement		5432:0:160652:164151	3945968	0					
ANR	3945971	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	5433:1:160655:160699	3945968	0	True				
ANR	3945972	IdentifierDecl	* list = zend_ast_get_list ( ast )		3945968	0					
ANR	3945973	IdentifierDeclType	zend_ast_list *		3945968	0					
ANR	3945974	Identifier	list		3945968	1					
ANR	3945975	AssignmentExpression	* list = zend_ast_get_list ( ast )		3945968	2		=			
ANR	3945976	Identifier	list		3945968	0					
ANR	3945977	CallExpression	zend_ast_get_list ( ast )		3945968	1					
ANR	3945978	Callee	zend_ast_get_list		3945968	0					
ANR	3945979	Identifier	zend_ast_get_list		3945968	0					
ANR	3945980	ArgumentList	ast		3945968	1					
ANR	3945981	Argument	ast		3945968	0					
ANR	3945982	Identifier	ast		3945968	0					
ANR	3945983	IdentifierDeclStatement	uint32_t i ;	5434:1:160702:160712	3945968	1	True				
ANR	3945984	IdentifierDecl	i		3945968	0					
ANR	3945985	IdentifierDeclType	uint32_t		3945968	0					
ANR	3945986	Identifier	i		3945968	1					
ANR	3945987	IdentifierDeclStatement	zend_string * current_ns = FC ( current_namespace ) ;	5435:1:160715:160762	3945968	2	True				
ANR	3945988	IdentifierDecl	* current_ns = FC ( current_namespace )		3945968	0					
ANR	3945989	IdentifierDeclType	zend_string *		3945968	0					
ANR	3945990	Identifier	current_ns		3945968	1					
ANR	3945991	AssignmentExpression	* current_ns = FC ( current_namespace )		3945968	2		=			
ANR	3945992	Identifier	current_ns		3945968	0					
ANR	3945993	CallExpression	FC ( current_namespace )		3945968	1					
ANR	3945994	Callee	FC		3945968	0					
ANR	3945995	Identifier	FC		3945968	0					
ANR	3945996	ArgumentList	current_namespace		3945968	1					
ANR	3945997	Argument	current_namespace		3945968	0					
ANR	3945998	Identifier	current_namespace		3945968	0					
ANR	3945999	IdentifierDeclStatement	uint32_t type = ast -> attr ;	5436:1:160765:160790	3945968	3	True				
ANR	3946000	IdentifierDecl	type = ast -> attr		3945968	0					
ANR	3946001	IdentifierDeclType	uint32_t		3945968	0					
ANR	3946002	Identifier	type		3945968	1					
ANR	3946003	AssignmentExpression	type = ast -> attr		3945968	2		=			
ANR	3946004	Identifier	type		3945968	0					
ANR	3946005	PtrMemberAccess	ast -> attr		3945968	1					
ANR	3946006	Identifier	ast		3945968	0					
ANR	3946007	Identifier	attr		3945968	1					
ANR	3946008	IdentifierDeclStatement	HashTable * current_import = zend_get_import_ht ( type ) ;	5437:1:160793:160845	3945968	4	True				
ANR	3946009	IdentifierDecl	* current_import = zend_get_import_ht ( type )		3945968	0					
ANR	3946010	IdentifierDeclType	HashTable *		3945968	0					
ANR	3946011	Identifier	current_import		3945968	1					
ANR	3946012	AssignmentExpression	* current_import = zend_get_import_ht ( type )		3945968	2		=			
ANR	3946013	Identifier	current_import		3945968	0					
ANR	3946014	CallExpression	zend_get_import_ht ( type )		3945968	1					
ANR	3946015	Callee	zend_get_import_ht		3945968	0					
ANR	3946016	Identifier	zend_get_import_ht		3945968	0					
ANR	3946017	ArgumentList	type		3945968	1					
ANR	3946018	Argument	type		3945968	0					
ANR	3946019	Identifier	type		3945968	0					
ANR	3946020	IdentifierDeclStatement	zend_bool case_sensitive = type == T_CONST ;	5438:1:160848:160890	3945968	5	True				
ANR	3946021	IdentifierDecl	case_sensitive = type == T_CONST		3945968	0					
ANR	3946022	IdentifierDeclType	zend_bool		3945968	0					
ANR	3946023	Identifier	case_sensitive		3945968	1					
ANR	3946024	AssignmentExpression	case_sensitive = type == T_CONST		3945968	2		=			
ANR	3946025	Identifier	case_sensitive		3945968	0					
ANR	3946026	EqualityExpression	type == T_CONST		3945968	1		==			
ANR	3946027	Identifier	type		3945968	0					
ANR	3946028	Identifier	T_CONST		3945968	1					
ANR	3946029	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3945968	6					
ANR	3946030	ForInit	i = 0 ;	5440:6:160899:160904	3945968	0	True				
ANR	3946031	AssignmentExpression	i = 0		3945968	0		=			
ANR	3946032	Identifier	i		3945968	0					
ANR	3946033	PrimaryExpression	0		3945968	1					
ANR	3946034	Condition	i < list -> children	5440:13:160906:160923	3945968	1	True				
ANR	3946035	RelationalExpression	i < list -> children		3945968	0		<			
ANR	3946036	Identifier	i		3945968	0					
ANR	3946037	PtrMemberAccess	list -> children		3945968	1					
ANR	3946038	Identifier	list		3945968	0					
ANR	3946039	Identifier	children		3945968	1					
ANR	3946040	UnaryExpression	++ i	5440:33:160926:160928	3945968	2	True				
ANR	3946041	IncDec	++		3945968	0					
ANR	3946042	Identifier	i		3945968	1					
ANR	3946043	CompoundStatement		14:2:470:505	3945968	3					
ANR	3946044	IdentifierDeclStatement	zend_ast * use_ast = list -> child [ i ] ;	5441:2:160935:160969	3945968	0	True				
ANR	3946045	IdentifierDecl	* use_ast = list -> child [ i ]		3945968	0					
ANR	3946046	IdentifierDeclType	zend_ast *		3945968	0					
ANR	3946047	Identifier	use_ast		3945968	1					
ANR	3946048	AssignmentExpression	* use_ast = list -> child [ i ]		3945968	2		=			
ANR	3946049	Identifier	use_ast		3945968	0					
ANR	3946050	ArrayIndexing	list -> child [ i ]		3945968	1					
ANR	3946051	PtrMemberAccess	list -> child		3945968	0					
ANR	3946052	Identifier	list		3945968	0					
ANR	3946053	Identifier	child		3945968	1					
ANR	3946054	Identifier	i		3945968	1					
ANR	3946055	IdentifierDeclStatement	zend_ast * old_name_ast = use_ast -> child [ 0 ] ;	5442:2:160973:161015	3945968	1	True				
ANR	3946056	IdentifierDecl	* old_name_ast = use_ast -> child [ 0 ]		3945968	0					
ANR	3946057	IdentifierDeclType	zend_ast *		3945968	0					
ANR	3946058	Identifier	old_name_ast		3945968	1					
ANR	3946059	AssignmentExpression	* old_name_ast = use_ast -> child [ 0 ]		3945968	2		=			
ANR	3946060	Identifier	old_name_ast		3945968	0					
ANR	3946061	ArrayIndexing	use_ast -> child [ 0 ]		3945968	1					
ANR	3946062	PtrMemberAccess	use_ast -> child		3945968	0					
ANR	3946063	Identifier	use_ast		3945968	0					
ANR	3946064	Identifier	child		3945968	1					
ANR	3946065	PrimaryExpression	0		3945968	1					
ANR	3946066	IdentifierDeclStatement	zend_ast * new_name_ast = use_ast -> child [ 1 ] ;	5443:2:161019:161061	3945968	2	True				
ANR	3946067	IdentifierDecl	* new_name_ast = use_ast -> child [ 1 ]		3945968	0					
ANR	3946068	IdentifierDeclType	zend_ast *		3945968	0					
ANR	3946069	Identifier	new_name_ast		3945968	1					
ANR	3946070	AssignmentExpression	* new_name_ast = use_ast -> child [ 1 ]		3945968	2		=			
ANR	3946071	Identifier	new_name_ast		3945968	0					
ANR	3946072	ArrayIndexing	use_ast -> child [ 1 ]		3945968	1					
ANR	3946073	PtrMemberAccess	use_ast -> child		3945968	0					
ANR	3946074	Identifier	use_ast		3945968	0					
ANR	3946075	Identifier	child		3945968	1					
ANR	3946076	PrimaryExpression	1		3945968	1					
ANR	3946077	IdentifierDeclStatement	zend_string * old_name = zend_ast_get_str ( old_name_ast ) ;	5444:2:161065:161119	3945968	3	True				
ANR	3946078	IdentifierDecl	* old_name = zend_ast_get_str ( old_name_ast )		3945968	0					
ANR	3946079	IdentifierDeclType	zend_string *		3945968	0					
ANR	3946080	Identifier	old_name		3945968	1					
ANR	3946081	AssignmentExpression	* old_name = zend_ast_get_str ( old_name_ast )		3945968	2		=			
ANR	3946082	Identifier	old_name		3945968	0					
ANR	3946083	CallExpression	zend_ast_get_str ( old_name_ast )		3945968	1					
ANR	3946084	Callee	zend_ast_get_str		3945968	0					
ANR	3946085	Identifier	zend_ast_get_str		3945968	0					
ANR	3946086	ArgumentList	old_name_ast		3945968	1					
ANR	3946087	Argument	old_name_ast		3945968	0					
ANR	3946088	Identifier	old_name_ast		3945968	0					
ANR	3946089	IdentifierDeclStatement	"zend_string * new_name , * lookup_name ;"	5445:2:161123:161158	3945968	4	True				
ANR	3946090	IdentifierDecl	* new_name		3945968	0					
ANR	3946091	IdentifierDeclType	zend_string *		3945968	0					
ANR	3946092	Identifier	new_name		3945968	1					
ANR	3946093	IdentifierDecl	* lookup_name		3945968	1					
ANR	3946094	IdentifierDeclType	zend_string *		3945968	0					
ANR	3946095	Identifier	lookup_name		3945968	1					
ANR	3946096	IfStatement	if ( new_name_ast )		3945968	5					
ANR	3946097	Condition	new_name_ast	5447:6:161167:161178	3945968	0	True				
ANR	3946098	Identifier	new_name_ast		3945968	0					
ANR	3946099	CompoundStatement		16:20:528:528	3945968	1					
ANR	3946100	ExpressionStatement	new_name = zend_string_copy ( zend_ast_get_str ( new_name_ast ) )	5448:3:161186:161245	3945968	0	True				
ANR	3946101	AssignmentExpression	new_name = zend_string_copy ( zend_ast_get_str ( new_name_ast ) )		3945968	0		=			
ANR	3946102	Identifier	new_name		3945968	0					
ANR	3946103	CallExpression	zend_string_copy ( zend_ast_get_str ( new_name_ast ) )		3945968	1					
ANR	3946104	Callee	zend_string_copy		3945968	0					
ANR	3946105	Identifier	zend_string_copy		3945968	0					
ANR	3946106	ArgumentList	zend_ast_get_str ( new_name_ast )		3945968	1					
ANR	3946107	Argument	zend_ast_get_str ( new_name_ast )		3945968	0					
ANR	3946108	CallExpression	zend_ast_get_str ( new_name_ast )		3945968	0					
ANR	3946109	Callee	zend_ast_get_str		3945968	0					
ANR	3946110	Identifier	zend_ast_get_str		3945968	0					
ANR	3946111	ArgumentList	new_name_ast		3945968	1					
ANR	3946112	Argument	new_name_ast		3945968	0					
ANR	3946113	Identifier	new_name_ast		3945968	0					
ANR	3946114	ElseStatement	else		3945968	0					
ANR	3946115	CompoundStatement		20:3:641:668	3945968	0					
ANR	3946116	IdentifierDeclStatement	const char * unqualified_name ;	5450:3:161261:161289	3945968	0	True				
ANR	3946117	IdentifierDecl	* unqualified_name		3945968	0					
ANR	3946118	IdentifierDeclType	const char *		3945968	0					
ANR	3946119	Identifier	unqualified_name		3945968	1					
ANR	3946120	IdentifierDeclStatement	size_t unqualified_name_len ;	5451:3:161294:161321	3945968	1	True				
ANR	3946121	IdentifierDecl	unqualified_name_len		3945968	0					
ANR	3946122	IdentifierDeclType	size_t		3945968	0					
ANR	3946123	Identifier	unqualified_name_len		3945968	1					
ANR	3946124	IfStatement	"if ( zend_get_unqualified_name ( old_name , & unqualified_name , & unqualified_name_len ) )"		3945968	2					
ANR	3946125	Condition	"zend_get_unqualified_name ( old_name , & unqualified_name , & unqualified_name_len )"	5452:7:161330:161406	3945968	0	True				
ANR	3946126	CallExpression	"zend_get_unqualified_name ( old_name , & unqualified_name , & unqualified_name_len )"		3945968	0					
ANR	3946127	Callee	zend_get_unqualified_name		3945968	0					
ANR	3946128	Identifier	zend_get_unqualified_name		3945968	0					
ANR	3946129	ArgumentList	old_name		3945968	1					
ANR	3946130	Argument	old_name		3945968	0					
ANR	3946131	Identifier	old_name		3945968	0					
ANR	3946132	Argument	& unqualified_name		3945968	1					
ANR	3946133	UnaryOperationExpression	& unqualified_name		3945968	0					
ANR	3946134	UnaryOperator	&		3945968	0					
ANR	3946135	Identifier	unqualified_name		3945968	1					
ANR	3946136	Argument	& unqualified_name_len		3945968	2					
ANR	3946137	UnaryOperationExpression	& unqualified_name_len		3945968	0					
ANR	3946138	UnaryOperator	&		3945968	0					
ANR	3946139	Identifier	unqualified_name_len		3945968	1					
ANR	3946140	CompoundStatement		21:86:756:756	3945968	1					
ANR	3946141	ExpressionStatement	"new_name = zend_string_init ( unqualified_name , unqualified_name_len , 0 )"	5454:4:161476:161546	3945968	0	True				
ANR	3946142	AssignmentExpression	"new_name = zend_string_init ( unqualified_name , unqualified_name_len , 0 )"		3945968	0		=			
ANR	3946143	Identifier	new_name		3945968	0					
ANR	3946144	CallExpression	"zend_string_init ( unqualified_name , unqualified_name_len , 0 )"		3945968	1					
ANR	3946145	Callee	zend_string_init		3945968	0					
ANR	3946146	Identifier	zend_string_init		3945968	0					
ANR	3946147	ArgumentList	unqualified_name		3945968	1					
ANR	3946148	Argument	unqualified_name		3945968	0					
ANR	3946149	Identifier	unqualified_name		3945968	0					
ANR	3946150	Argument	unqualified_name_len		3945968	1					
ANR	3946151	Identifier	unqualified_name_len		3945968	0					
ANR	3946152	Argument	0		3945968	2					
ANR	3946153	PrimaryExpression	0		3945968	0					
ANR	3946154	ElseStatement	else		3945968	0					
ANR	3946155	CompoundStatement		24:10:905:905	3945968	0					
ANR	3946156	ExpressionStatement	new_name = zend_string_copy ( old_name )	5456:4:161564:161601	3945968	0	True				
ANR	3946157	AssignmentExpression	new_name = zend_string_copy ( old_name )		3945968	0		=			
ANR	3946158	Identifier	new_name		3945968	0					
ANR	3946159	CallExpression	zend_string_copy ( old_name )		3945968	1					
ANR	3946160	Callee	zend_string_copy		3945968	0					
ANR	3946161	Identifier	zend_string_copy		3945968	0					
ANR	3946162	ArgumentList	old_name		3945968	1					
ANR	3946163	Argument	old_name		3945968	0					
ANR	3946164	Identifier	old_name		3945968	0					
ANR	3946165	IfStatement	if ( ! current_ns )		3945968	1					
ANR	3946166	Condition	! current_ns	5458:8:161612:161622	3945968	0	True				
ANR	3946167	UnaryOperationExpression	! current_ns		3945968	0					
ANR	3946168	UnaryOperator	!		3945968	0					
ANR	3946169	Identifier	current_ns		3945968	1					
ANR	3946170	CompoundStatement		27:21:972:972	3945968	1					
ANR	3946171	IfStatement	"if ( type == T_CLASS && zend_string_equals_literal ( new_name , ""strict"" ) )"		3945968	0					
ANR	3946172	Condition	"type == T_CLASS && zend_string_equals_literal ( new_name , ""strict"" )"	5459:9:161636:161700	3945968	0	True				
ANR	3946173	AndExpression	"type == T_CLASS && zend_string_equals_literal ( new_name , ""strict"" )"		3945968	0		&&			
ANR	3946174	EqualityExpression	type == T_CLASS		3945968	0		==			
ANR	3946175	Identifier	type		3945968	0					
ANR	3946176	Identifier	T_CLASS		3945968	1					
ANR	3946177	CallExpression	"zend_string_equals_literal ( new_name , ""strict"" )"		3945968	1					
ANR	3946178	Callee	zend_string_equals_literal		3945968	0					
ANR	3946179	Identifier	zend_string_equals_literal		3945968	0					
ANR	3946180	ArgumentList	new_name		3945968	1					
ANR	3946181	Argument	new_name		3945968	0					
ANR	3946182	Identifier	new_name		3945968	0					
ANR	3946183	Argument	"""strict"""		3945968	1					
ANR	3946184	PrimaryExpression	"""strict"""		3945968	0					
ANR	3946185	CompoundStatement		28:76:1050:1050	3945968	1					
ANR	3946186	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""You seem to be trying to use a different language..."" )"	5460:6:161711:161810	3945968	0	True				
ANR	3946187	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""You seem to be trying to use a different language..."" )"		3945968	0					
ANR	3946188	Callee	zend_error_noreturn		3945968	0					
ANR	3946189	Identifier	zend_error_noreturn		3945968	0					
ANR	3946190	ArgumentList	E_COMPILE_ERROR		3945968	1					
ANR	3946191	Argument	E_COMPILE_ERROR		3945968	0					
ANR	3946192	Identifier	E_COMPILE_ERROR		3945968	0					
ANR	3946193	Argument	"""You seem to be trying to use a different language..."""		3945968	1					
ANR	3946194	PrimaryExpression	"""You seem to be trying to use a different language..."""		3945968	0					
ANR	3946195	Statement	zend_error	5464:5:161825:161834	3945968	1	True				
ANR	3946196	Statement	(	5464:15:161835:161835	3945968	2	True				
ANR	3946197	Statement	E_WARNING	5464:16:161836:161844	3945968	3	True				
ANR	3946198	Statement	","	5464:25:161845:161845	3945968	4	True				
ANR	3946199	Statement	"""The use statement with non-compound name '%s' """	5464:27:161847:161894	3945968	5	True				
ANR	3946200	Statement	"""has no effect"""	5465:6:161902:161916	3945968	6	True				
ANR	3946201	Statement	","	5465:21:161917:161917	3945968	7	True				
ANR	3946202	Statement	ZSTR_VAL	5465:23:161919:161926	3945968	8	True				
ANR	3946203	Statement	(	5465:31:161927:161927	3945968	9	True				
ANR	3946204	Statement	new_name	5465:32:161928:161935	3945968	10	True				
ANR	3946205	Statement	)	5465:40:161936:161936	3945968	11	True				
ANR	3946206	Statement	)	5465:41:161937:161937	3945968	12	True				
ANR	3946207	ExpressionStatement		5465:42:161938:161938	3945968	13	True				
ANR	3946208	IfStatement	if ( case_sensitive )		3945968	6					
ANR	3946209	Condition	case_sensitive	5470:6:161962:161975	3945968	0	True				
ANR	3946210	Identifier	case_sensitive		3945968	0					
ANR	3946211	CompoundStatement		39:22:1325:1325	3945968	1					
ANR	3946212	ExpressionStatement	lookup_name = zend_string_copy ( new_name )	5471:3:161983:162023	3945968	0	True				
ANR	3946213	AssignmentExpression	lookup_name = zend_string_copy ( new_name )		3945968	0		=			
ANR	3946214	Identifier	lookup_name		3945968	0					
ANR	3946215	CallExpression	zend_string_copy ( new_name )		3945968	1					
ANR	3946216	Callee	zend_string_copy		3945968	0					
ANR	3946217	Identifier	zend_string_copy		3945968	0					
ANR	3946218	ArgumentList	new_name		3945968	1					
ANR	3946219	Argument	new_name		3945968	0					
ANR	3946220	Identifier	new_name		3945968	0					
ANR	3946221	ElseStatement	else		3945968	0					
ANR	3946222	CompoundStatement		41:9:1381:1381	3945968	0					
ANR	3946223	ExpressionStatement	lookup_name = zend_string_tolower ( new_name )	5473:3:162039:162082	3945968	0	True				
ANR	3946224	AssignmentExpression	lookup_name = zend_string_tolower ( new_name )		3945968	0		=			
ANR	3946225	Identifier	lookup_name		3945968	0					
ANR	3946226	CallExpression	zend_string_tolower ( new_name )		3945968	1					
ANR	3946227	Callee	zend_string_tolower		3945968	0					
ANR	3946228	Identifier	zend_string_tolower		3945968	0					
ANR	3946229	ArgumentList	new_name		3945968	1					
ANR	3946230	Argument	new_name		3945968	0					
ANR	3946231	Identifier	new_name		3945968	0					
ANR	3946232	IfStatement	if ( type == T_CLASS && zend_is_reserved_class_name ( new_name ) )		3945968	7					
ANR	3946233	Condition	type == T_CLASS && zend_is_reserved_class_name ( new_name )	5476:6:162095:162150	3945968	0	True				
ANR	3946234	AndExpression	type == T_CLASS && zend_is_reserved_class_name ( new_name )		3945968	0		&&			
ANR	3946235	EqualityExpression	type == T_CLASS		3945968	0		==			
ANR	3946236	Identifier	type		3945968	0					
ANR	3946237	Identifier	T_CLASS		3945968	1					
ANR	3946238	CallExpression	zend_is_reserved_class_name ( new_name )		3945968	1					
ANR	3946239	Callee	zend_is_reserved_class_name		3945968	0					
ANR	3946240	Identifier	zend_is_reserved_class_name		3945968	0					
ANR	3946241	ArgumentList	new_name		3945968	1					
ANR	3946242	Argument	new_name		3945968	0					
ANR	3946243	Identifier	new_name		3945968	0					
ANR	3946244	CompoundStatement		45:64:1500:1500	3945968	1					
ANR	3946245	Statement	zend_error_noreturn	5477:3:162158:162176	3945968	0	True				
ANR	3946246	Statement	(	5477:22:162177:162177	3945968	1	True				
ANR	3946247	Statement	E_COMPILE_ERROR	5477:23:162178:162192	3945968	2	True				
ANR	3946248	Statement	","	5477:38:162193:162193	3945968	3	True				
ANR	3946249	Statement	"""Cannot use %s as %s because '%s' """	5477:40:162195:162229	3945968	4	True				
ANR	3946250	Statement	"""is a special class name"""	5478:4:162235:162259	3945968	5	True				
ANR	3946251	Statement	","	5478:29:162260:162260	3945968	6	True				
ANR	3946252	Statement	ZSTR_VAL	5478:31:162262:162269	3945968	7	True				
ANR	3946253	Statement	(	5478:39:162270:162270	3945968	8	True				
ANR	3946254	Statement	old_name	5478:40:162271:162278	3945968	9	True				
ANR	3946255	Statement	)	5478:48:162279:162279	3945968	10	True				
ANR	3946256	Statement	","	5478:49:162280:162280	3945968	11	True				
ANR	3946257	Statement	ZSTR_VAL	5478:51:162282:162289	3945968	12	True				
ANR	3946258	Statement	(	5478:59:162290:162290	3945968	13	True				
ANR	3946259	Statement	new_name	5478:60:162291:162298	3945968	14	True				
ANR	3946260	Statement	)	5478:68:162299:162299	3945968	15	True				
ANR	3946261	Statement	","	5478:69:162300:162300	3945968	16	True				
ANR	3946262	Statement	ZSTR_VAL	5478:71:162302:162309	3945968	17	True				
ANR	3946263	Statement	(	5478:79:162310:162310	3945968	18	True				
ANR	3946264	Statement	new_name	5478:80:162311:162318	3945968	19	True				
ANR	3946265	Statement	)	5478:88:162319:162319	3945968	20	True				
ANR	3946266	Statement	)	5478:89:162320:162320	3945968	21	True				
ANR	3946267	ExpressionStatement		5478:90:162321:162321	3945968	22	True				
ANR	3946268	IfStatement	if ( current_ns )		3945968	8					
ANR	3946269	Condition	current_ns	5481:6:162334:162343	3945968	0	True				
ANR	3946270	Identifier	current_ns		3945968	0					
ANR	3946271	CompoundStatement		51:3:1698:1788	3945968	1					
ANR	3946272	IdentifierDeclStatement	"zend_string * ns_name = zend_string_alloc ( ZSTR_LEN ( current_ns ) + 1 + ZSTR_LEN ( new_name ) , 0 ) ;"	5482:3:162351:162441	3945968	0	True				
ANR	3946273	IdentifierDecl	"* ns_name = zend_string_alloc ( ZSTR_LEN ( current_ns ) + 1 + ZSTR_LEN ( new_name ) , 0 )"		3945968	0					
ANR	3946274	IdentifierDeclType	zend_string *		3945968	0					
ANR	3946275	Identifier	ns_name		3945968	1					
ANR	3946276	AssignmentExpression	"* ns_name = zend_string_alloc ( ZSTR_LEN ( current_ns ) + 1 + ZSTR_LEN ( new_name ) , 0 )"		3945968	2		=			
ANR	3946277	Identifier	ns_name		3945968	0					
ANR	3946278	CallExpression	"zend_string_alloc ( ZSTR_LEN ( current_ns ) + 1 + ZSTR_LEN ( new_name ) , 0 )"		3945968	1					
ANR	3946279	Callee	zend_string_alloc		3945968	0					
ANR	3946280	Identifier	zend_string_alloc		3945968	0					
ANR	3946281	ArgumentList	ZSTR_LEN ( current_ns ) + 1 + ZSTR_LEN ( new_name )		3945968	1					
ANR	3946282	Argument	ZSTR_LEN ( current_ns ) + 1 + ZSTR_LEN ( new_name )		3945968	0					
ANR	3946283	AdditiveExpression	ZSTR_LEN ( current_ns ) + 1 + ZSTR_LEN ( new_name )		3945968	0		+			
ANR	3946284	CallExpression	ZSTR_LEN ( current_ns )		3945968	0					
ANR	3946285	Callee	ZSTR_LEN		3945968	0					
ANR	3946286	Identifier	ZSTR_LEN		3945968	0					
ANR	3946287	ArgumentList	current_ns		3945968	1					
ANR	3946288	Argument	current_ns		3945968	0					
ANR	3946289	Identifier	current_ns		3945968	0					
ANR	3946290	AdditiveExpression	1 + ZSTR_LEN ( new_name )		3945968	1		+			
ANR	3946291	PrimaryExpression	1		3945968	0					
ANR	3946292	CallExpression	ZSTR_LEN ( new_name )		3945968	1					
ANR	3946293	Callee	ZSTR_LEN		3945968	0					
ANR	3946294	Identifier	ZSTR_LEN		3945968	0					
ANR	3946295	ArgumentList	new_name		3945968	1					
ANR	3946296	Argument	new_name		3945968	0					
ANR	3946297	Identifier	new_name		3945968	0					
ANR	3946298	Argument	0		3945968	1					
ANR	3946299	PrimaryExpression	0		3945968	0					
ANR	3946300	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( ns_name ) , ZSTR_VAL ( current_ns ) , ZSTR_LEN ( current_ns ) )"	5483:3:162446:162530	3945968	1	True				
ANR	3946301	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( ns_name ) , ZSTR_VAL ( current_ns ) , ZSTR_LEN ( current_ns ) )"		3945968	0					
ANR	3946302	Callee	zend_str_tolower_copy		3945968	0					
ANR	3946303	Identifier	zend_str_tolower_copy		3945968	0					
ANR	3946304	ArgumentList	ZSTR_VAL ( ns_name )		3945968	1					
ANR	3946305	Argument	ZSTR_VAL ( ns_name )		3945968	0					
ANR	3946306	CallExpression	ZSTR_VAL ( ns_name )		3945968	0					
ANR	3946307	Callee	ZSTR_VAL		3945968	0					
ANR	3946308	Identifier	ZSTR_VAL		3945968	0					
ANR	3946309	ArgumentList	ns_name		3945968	1					
ANR	3946310	Argument	ns_name		3945968	0					
ANR	3946311	Identifier	ns_name		3945968	0					
ANR	3946312	Argument	ZSTR_VAL ( current_ns )		3945968	1					
ANR	3946313	CallExpression	ZSTR_VAL ( current_ns )		3945968	0					
ANR	3946314	Callee	ZSTR_VAL		3945968	0					
ANR	3946315	Identifier	ZSTR_VAL		3945968	0					
ANR	3946316	ArgumentList	current_ns		3945968	1					
ANR	3946317	Argument	current_ns		3945968	0					
ANR	3946318	Identifier	current_ns		3945968	0					
ANR	3946319	Argument	ZSTR_LEN ( current_ns )		3945968	2					
ANR	3946320	CallExpression	ZSTR_LEN ( current_ns )		3945968	0					
ANR	3946321	Callee	ZSTR_LEN		3945968	0					
ANR	3946322	Identifier	ZSTR_LEN		3945968	0					
ANR	3946323	ArgumentList	current_ns		3945968	1					
ANR	3946324	Argument	current_ns		3945968	0					
ANR	3946325	Identifier	current_ns		3945968	0					
ANR	3946326	ExpressionStatement	ZSTR_VAL ( ns_name ) [ ZSTR_LEN ( current_ns ) ] = '\\\\'	5484:3:162535:162581	3945968	2	True				
ANR	3946327	AssignmentExpression	ZSTR_VAL ( ns_name ) [ ZSTR_LEN ( current_ns ) ] = '\\\\'		3945968	0		=			
ANR	3946328	ArrayIndexing	ZSTR_VAL ( ns_name ) [ ZSTR_LEN ( current_ns ) ]		3945968	0					
ANR	3946329	CallExpression	ZSTR_VAL ( ns_name )		3945968	0					
ANR	3946330	Callee	ZSTR_VAL		3945968	0					
ANR	3946331	Identifier	ZSTR_VAL		3945968	0					
ANR	3946332	ArgumentList	ns_name		3945968	1					
ANR	3946333	Argument	ns_name		3945968	0					
ANR	3946334	Identifier	ns_name		3945968	0					
ANR	3946335	CallExpression	ZSTR_LEN ( current_ns )		3945968	1					
ANR	3946336	Callee	ZSTR_LEN		3945968	0					
ANR	3946337	Identifier	ZSTR_LEN		3945968	0					
ANR	3946338	ArgumentList	current_ns		3945968	1					
ANR	3946339	Argument	current_ns		3945968	0					
ANR	3946340	Identifier	current_ns		3945968	0					
ANR	3946341	PrimaryExpression	'\\\\'		3945968	1					
ANR	3946342	ExpressionStatement	"memcpy ( ZSTR_VAL ( ns_name ) + ZSTR_LEN ( current_ns ) + 1 , ZSTR_VAL ( lookup_name ) , ZSTR_LEN ( lookup_name ) )"	5485:3:162586:162684	3945968	3	True				
ANR	3946343	CallExpression	"memcpy ( ZSTR_VAL ( ns_name ) + ZSTR_LEN ( current_ns ) + 1 , ZSTR_VAL ( lookup_name ) , ZSTR_LEN ( lookup_name ) )"		3945968	0					
ANR	3946344	Callee	memcpy		3945968	0					
ANR	3946345	Identifier	memcpy		3945968	0					
ANR	3946346	ArgumentList	ZSTR_VAL ( ns_name ) + ZSTR_LEN ( current_ns ) + 1		3945968	1					
ANR	3946347	Argument	ZSTR_VAL ( ns_name ) + ZSTR_LEN ( current_ns ) + 1		3945968	0					
ANR	3946348	AdditiveExpression	ZSTR_VAL ( ns_name ) + ZSTR_LEN ( current_ns ) + 1		3945968	0		+			
ANR	3946349	CallExpression	ZSTR_VAL ( ns_name )		3945968	0					
ANR	3946350	Callee	ZSTR_VAL		3945968	0					
ANR	3946351	Identifier	ZSTR_VAL		3945968	0					
ANR	3946352	ArgumentList	ns_name		3945968	1					
ANR	3946353	Argument	ns_name		3945968	0					
ANR	3946354	Identifier	ns_name		3945968	0					
ANR	3946355	AdditiveExpression	ZSTR_LEN ( current_ns ) + 1		3945968	1		+			
ANR	3946356	CallExpression	ZSTR_LEN ( current_ns )		3945968	0					
ANR	3946357	Callee	ZSTR_LEN		3945968	0					
ANR	3946358	Identifier	ZSTR_LEN		3945968	0					
ANR	3946359	ArgumentList	current_ns		3945968	1					
ANR	3946360	Argument	current_ns		3945968	0					
ANR	3946361	Identifier	current_ns		3945968	0					
ANR	3946362	PrimaryExpression	1		3945968	1					
ANR	3946363	Argument	ZSTR_VAL ( lookup_name )		3945968	1					
ANR	3946364	CallExpression	ZSTR_VAL ( lookup_name )		3945968	0					
ANR	3946365	Callee	ZSTR_VAL		3945968	0					
ANR	3946366	Identifier	ZSTR_VAL		3945968	0					
ANR	3946367	ArgumentList	lookup_name		3945968	1					
ANR	3946368	Argument	lookup_name		3945968	0					
ANR	3946369	Identifier	lookup_name		3945968	0					
ANR	3946370	Argument	ZSTR_LEN ( lookup_name )		3945968	2					
ANR	3946371	CallExpression	ZSTR_LEN ( lookup_name )		3945968	0					
ANR	3946372	Callee	ZSTR_LEN		3945968	0					
ANR	3946373	Identifier	ZSTR_LEN		3945968	0					
ANR	3946374	ArgumentList	lookup_name		3945968	1					
ANR	3946375	Argument	lookup_name		3945968	0					
ANR	3946376	Identifier	lookup_name		3945968	0					
ANR	3946377	IfStatement	"if ( zend_hash_exists ( CG ( class_table ) , ns_name ) )"		3945968	4					
ANR	3946378	Condition	"zend_hash_exists ( CG ( class_table ) , ns_name )"	5487:7:162694:162735	3945968	0	True				
ANR	3946379	CallExpression	"zend_hash_exists ( CG ( class_table ) , ns_name )"		3945968	0					
ANR	3946380	Callee	zend_hash_exists		3945968	0					
ANR	3946381	Identifier	zend_hash_exists		3945968	0					
ANR	3946382	ArgumentList	CG ( class_table )		3945968	1					
ANR	3946383	Argument	CG ( class_table )		3945968	0					
ANR	3946384	CallExpression	CG ( class_table )		3945968	0					
ANR	3946385	Callee	CG		3945968	0					
ANR	3946386	Identifier	CG		3945968	0					
ANR	3946387	ArgumentList	class_table		3945968	1					
ANR	3946388	Argument	class_table		3945968	0					
ANR	3946389	Identifier	class_table		3945968	0					
ANR	3946390	Argument	ns_name		3945968	1					
ANR	3946391	Identifier	ns_name		3945968	0					
ANR	3946392	CompoundStatement		56:51:2085:2085	3945968	1					
ANR	3946393	ExpressionStatement	"zend_check_already_in_use ( type , old_name , new_name , ns_name )"	5488:4:162744:162804	3945968	0	True				
ANR	3946394	CallExpression	"zend_check_already_in_use ( type , old_name , new_name , ns_name )"		3945968	0					
ANR	3946395	Callee	zend_check_already_in_use		3945968	0					
ANR	3946396	Identifier	zend_check_already_in_use		3945968	0					
ANR	3946397	ArgumentList	type		3945968	1					
ANR	3946398	Argument	type		3945968	0					
ANR	3946399	Identifier	type		3945968	0					
ANR	3946400	Argument	old_name		3945968	1					
ANR	3946401	Identifier	old_name		3945968	0					
ANR	3946402	Argument	new_name		3945968	2					
ANR	3946403	Identifier	new_name		3945968	0					
ANR	3946404	Argument	ns_name		3945968	3					
ANR	3946405	Identifier	ns_name		3945968	0					
ANR	3946406	ExpressionStatement	zend_string_free ( ns_name )	5491:3:162815:162840	3945968	5	True				
ANR	3946407	CallExpression	zend_string_free ( ns_name )		3945968	0					
ANR	3946408	Callee	zend_string_free		3945968	0					
ANR	3946409	Identifier	zend_string_free		3945968	0					
ANR	3946410	ArgumentList	ns_name		3945968	1					
ANR	3946411	Argument	ns_name		3945968	0					
ANR	3946412	Identifier	ns_name		3945968	0					
ANR	3946413	ElseStatement	else		3945968	0					
ANR	3946414	CompoundStatement		61:9:2198:2198	3945968	0					
ANR	3946415	SwitchStatement	switch ( type )		3945968	0					
ANR	3946416	Condition	type	5493:11:162864:162867	3945968	0	True				
ANR	3946417	Identifier	type		3945968	0					
ANR	3946418	CompoundStatement		62:17:2217:2217	3945968	1					
ANR	3946419	Label	case T_CLASS :	5494:4:162876:162888	3945968	0	True				
ANR	3946420	Identifier	T_CLASS		3945968	0					
ANR	3946421	CompoundStatement		65:5:2248:2319	3945968	1					
ANR	3946422	IdentifierDeclStatement	"zend_class_entry * ce = zend_hash_find_ptr ( CG ( class_table ) , lookup_name ) ;"	5496:5:162901:162972	3945968	0	True				
ANR	3946423	IdentifierDecl	"* ce = zend_hash_find_ptr ( CG ( class_table ) , lookup_name )"		3945968	0					
ANR	3946424	IdentifierDeclType	zend_class_entry *		3945968	0					
ANR	3946425	Identifier	ce		3945968	1					
ANR	3946426	AssignmentExpression	"* ce = zend_hash_find_ptr ( CG ( class_table ) , lookup_name )"		3945968	2		=			
ANR	3946427	Identifier	ce		3945968	0					
ANR	3946428	CallExpression	"zend_hash_find_ptr ( CG ( class_table ) , lookup_name )"		3945968	1					
ANR	3946429	Callee	zend_hash_find_ptr		3945968	0					
ANR	3946430	Identifier	zend_hash_find_ptr		3945968	0					
ANR	3946431	ArgumentList	CG ( class_table )		3945968	1					
ANR	3946432	Argument	CG ( class_table )		3945968	0					
ANR	3946433	CallExpression	CG ( class_table )		3945968	0					
ANR	3946434	Callee	CG		3945968	0					
ANR	3946435	Identifier	CG		3945968	0					
ANR	3946436	ArgumentList	class_table		3945968	1					
ANR	3946437	Argument	class_table		3945968	0					
ANR	3946438	Identifier	class_table		3945968	0					
ANR	3946439	Argument	lookup_name		3945968	1					
ANR	3946440	Identifier	lookup_name		3945968	0					
ANR	3946441	IfStatement	if ( ce && ce -> type == ZEND_USER_CLASS && ce -> info . user . filename == CG ( compiled_filename ) )		3945968	1					
ANR	3946442	Condition	ce && ce -> type == ZEND_USER_CLASS && ce -> info . user . filename == CG ( compiled_filename )	5497:9:162983:163072	3945968	0	True				
ANR	3946443	AndExpression	ce && ce -> type == ZEND_USER_CLASS && ce -> info . user . filename == CG ( compiled_filename )		3945968	0		&&			
ANR	3946444	Identifier	ce		3945968	0					
ANR	3946445	AndExpression	ce -> type == ZEND_USER_CLASS && ce -> info . user . filename == CG ( compiled_filename )		3945968	1		&&			
ANR	3946446	EqualityExpression	ce -> type == ZEND_USER_CLASS		3945968	0		==			
ANR	3946447	PtrMemberAccess	ce -> type		3945968	0					
ANR	3946448	Identifier	ce		3945968	0					
ANR	3946449	Identifier	type		3945968	1					
ANR	3946450	Identifier	ZEND_USER_CLASS		3945968	1					
ANR	3946451	EqualityExpression	ce -> info . user . filename == CG ( compiled_filename )		3945968	1		==			
ANR	3946452	MemberAccess	ce -> info . user . filename		3945968	0					
ANR	3946453	MemberAccess	ce -> info . user		3945968	0					
ANR	3946454	PtrMemberAccess	ce -> info		3945968	0					
ANR	3946455	Identifier	ce		3945968	0					
ANR	3946456	Identifier	info		3945968	1					
ANR	3946457	Identifier	user		3945968	1					
ANR	3946458	Identifier	filename		3945968	1					
ANR	3946459	CallExpression	CG ( compiled_filename )		3945968	1					
ANR	3946460	Callee	CG		3945968	0					
ANR	3946461	Identifier	CG		3945968	0					
ANR	3946462	ArgumentList	compiled_filename		3945968	1					
ANR	3946463	Argument	compiled_filename		3945968	0					
ANR	3946464	Identifier	compiled_filename		3945968	0					
ANR	3946465	CompoundStatement		68:7:2428:2428	3945968	1					
ANR	3946466	ExpressionStatement	"zend_check_already_in_use ( type , old_name , new_name , lookup_name )"	5500:6:163089:163153	3945968	0	True				
ANR	3946467	CallExpression	"zend_check_already_in_use ( type , old_name , new_name , lookup_name )"		3945968	0					
ANR	3946468	Callee	zend_check_already_in_use		3945968	0					
ANR	3946469	Identifier	zend_check_already_in_use		3945968	0					
ANR	3946470	ArgumentList	type		3945968	1					
ANR	3946471	Argument	type		3945968	0					
ANR	3946472	Identifier	type		3945968	0					
ANR	3946473	Argument	old_name		3945968	1					
ANR	3946474	Identifier	old_name		3945968	0					
ANR	3946475	Argument	new_name		3945968	2					
ANR	3946476	Identifier	new_name		3945968	0					
ANR	3946477	Argument	lookup_name		3945968	3					
ANR	3946478	Identifier	lookup_name		3945968	0					
ANR	3946479	BreakStatement	break ;	5502:5:163167:163172	3945968	2	True				
ANR	3946480	Label	case T_FUNCTION :	5504:4:163184:163199	3945968	2	True				
ANR	3946481	Identifier	T_FUNCTION		3945968	0					
ANR	3946482	CompoundStatement		75:5:2559:2630	3945968	3					
ANR	3946483	IdentifierDeclStatement	"zend_function * fn = zend_hash_find_ptr ( CG ( function_table ) , lookup_name ) ;"	5506:5:163212:163283	3945968	0	True				
ANR	3946484	IdentifierDecl	"* fn = zend_hash_find_ptr ( CG ( function_table ) , lookup_name )"		3945968	0					
ANR	3946485	IdentifierDeclType	zend_function *		3945968	0					
ANR	3946486	Identifier	fn		3945968	1					
ANR	3946487	AssignmentExpression	"* fn = zend_hash_find_ptr ( CG ( function_table ) , lookup_name )"		3945968	2		=			
ANR	3946488	Identifier	fn		3945968	0					
ANR	3946489	CallExpression	"zend_hash_find_ptr ( CG ( function_table ) , lookup_name )"		3945968	1					
ANR	3946490	Callee	zend_hash_find_ptr		3945968	0					
ANR	3946491	Identifier	zend_hash_find_ptr		3945968	0					
ANR	3946492	ArgumentList	CG ( function_table )		3945968	1					
ANR	3946493	Argument	CG ( function_table )		3945968	0					
ANR	3946494	CallExpression	CG ( function_table )		3945968	0					
ANR	3946495	Callee	CG		3945968	0					
ANR	3946496	Identifier	CG		3945968	0					
ANR	3946497	ArgumentList	function_table		3945968	1					
ANR	3946498	Argument	function_table		3945968	0					
ANR	3946499	Identifier	function_table		3945968	0					
ANR	3946500	Argument	lookup_name		3945968	1					
ANR	3946501	Identifier	lookup_name		3945968	0					
ANR	3946502	IfStatement	if ( fn && fn -> type == ZEND_USER_FUNCTION && fn -> op_array . filename == CG ( compiled_filename ) )		3945968	1					
ANR	3946503	Condition	fn && fn -> type == ZEND_USER_FUNCTION && fn -> op_array . filename == CG ( compiled_filename )	5507:9:163294:163385	3945968	0	True				
ANR	3946504	AndExpression	fn && fn -> type == ZEND_USER_FUNCTION && fn -> op_array . filename == CG ( compiled_filename )		3945968	0		&&			
ANR	3946505	Identifier	fn		3945968	0					
ANR	3946506	AndExpression	fn -> type == ZEND_USER_FUNCTION && fn -> op_array . filename == CG ( compiled_filename )		3945968	1		&&			
ANR	3946507	EqualityExpression	fn -> type == ZEND_USER_FUNCTION		3945968	0		==			
ANR	3946508	PtrMemberAccess	fn -> type		3945968	0					
ANR	3946509	Identifier	fn		3945968	0					
ANR	3946510	Identifier	type		3945968	1					
ANR	3946511	Identifier	ZEND_USER_FUNCTION		3945968	1					
ANR	3946512	EqualityExpression	fn -> op_array . filename == CG ( compiled_filename )		3945968	1		==			
ANR	3946513	MemberAccess	fn -> op_array . filename		3945968	0					
ANR	3946514	PtrMemberAccess	fn -> op_array		3945968	0					
ANR	3946515	Identifier	fn		3945968	0					
ANR	3946516	Identifier	op_array		3945968	1					
ANR	3946517	Identifier	filename		3945968	1					
ANR	3946518	CallExpression	CG ( compiled_filename )		3945968	1					
ANR	3946519	Callee	CG		3945968	0					
ANR	3946520	Identifier	CG		3945968	0					
ANR	3946521	ArgumentList	compiled_filename		3945968	1					
ANR	3946522	Argument	compiled_filename		3945968	0					
ANR	3946523	Identifier	compiled_filename		3945968	0					
ANR	3946524	CompoundStatement		78:7:2741:2741	3945968	1					
ANR	3946525	ExpressionStatement	"zend_check_already_in_use ( type , old_name , new_name , lookup_name )"	5510:6:163402:163466	3945968	0	True				
ANR	3946526	CallExpression	"zend_check_already_in_use ( type , old_name , new_name , lookup_name )"		3945968	0					
ANR	3946527	Callee	zend_check_already_in_use		3945968	0					
ANR	3946528	Identifier	zend_check_already_in_use		3945968	0					
ANR	3946529	ArgumentList	type		3945968	1					
ANR	3946530	Argument	type		3945968	0					
ANR	3946531	Identifier	type		3945968	0					
ANR	3946532	Argument	old_name		3945968	1					
ANR	3946533	Identifier	old_name		3945968	0					
ANR	3946534	Argument	new_name		3945968	2					
ANR	3946535	Identifier	new_name		3945968	0					
ANR	3946536	Argument	lookup_name		3945968	3					
ANR	3946537	Identifier	lookup_name		3945968	0					
ANR	3946538	BreakStatement	break ;	5512:5:163480:163485	3945968	2	True				
ANR	3946539	Label	case T_CONST :	5514:4:163497:163509	3945968	4	True				
ANR	3946540	Identifier	T_CONST		3945968	0					
ANR	3946541	CompoundStatement		85:5:2869:2946	3945968	5					
ANR	3946542	IdentifierDeclStatement	"zend_string * filename = zend_hash_find_ptr ( & CG ( const_filenames ) , lookup_name ) ;"	5516:5:163522:163599	3945968	0	True				
ANR	3946543	IdentifierDecl	"* filename = zend_hash_find_ptr ( & CG ( const_filenames ) , lookup_name )"		3945968	0					
ANR	3946544	IdentifierDeclType	zend_string *		3945968	0					
ANR	3946545	Identifier	filename		3945968	1					
ANR	3946546	AssignmentExpression	"* filename = zend_hash_find_ptr ( & CG ( const_filenames ) , lookup_name )"		3945968	2		=			
ANR	3946547	Identifier	filename		3945968	0					
ANR	3946548	CallExpression	"zend_hash_find_ptr ( & CG ( const_filenames ) , lookup_name )"		3945968	1					
ANR	3946549	Callee	zend_hash_find_ptr		3945968	0					
ANR	3946550	Identifier	zend_hash_find_ptr		3945968	0					
ANR	3946551	ArgumentList	& CG ( const_filenames )		3945968	1					
ANR	3946552	Argument	& CG ( const_filenames )		3945968	0					
ANR	3946553	UnaryOperationExpression	& CG ( const_filenames )		3945968	0					
ANR	3946554	UnaryOperator	&		3945968	0					
ANR	3946555	CallExpression	CG ( const_filenames )		3945968	1					
ANR	3946556	Callee	CG		3945968	0					
ANR	3946557	Identifier	CG		3945968	0					
ANR	3946558	ArgumentList	const_filenames		3945968	1					
ANR	3946559	Argument	const_filenames		3945968	0					
ANR	3946560	Identifier	const_filenames		3945968	0					
ANR	3946561	Argument	lookup_name		3945968	1					
ANR	3946562	Identifier	lookup_name		3945968	0					
ANR	3946563	IfStatement	if ( filename && filename == CG ( compiled_filename ) )		3945968	1					
ANR	3946564	Condition	filename && filename == CG ( compiled_filename )	5517:9:163610:163654	3945968	0	True				
ANR	3946565	AndExpression	filename && filename == CG ( compiled_filename )		3945968	0		&&			
ANR	3946566	Identifier	filename		3945968	0					
ANR	3946567	EqualityExpression	filename == CG ( compiled_filename )		3945968	1		==			
ANR	3946568	Identifier	filename		3945968	0					
ANR	3946569	CallExpression	CG ( compiled_filename )		3945968	1					
ANR	3946570	Callee	CG		3945968	0					
ANR	3946571	Identifier	CG		3945968	0					
ANR	3946572	ArgumentList	compiled_filename		3945968	1					
ANR	3946573	Argument	compiled_filename		3945968	0					
ANR	3946574	Identifier	compiled_filename		3945968	0					
ANR	3946575	CompoundStatement		86:56:3004:3004	3945968	1					
ANR	3946576	ExpressionStatement	"zend_check_already_in_use ( type , old_name , new_name , lookup_name )"	5518:6:163665:163729	3945968	0	True				
ANR	3946577	CallExpression	"zend_check_already_in_use ( type , old_name , new_name , lookup_name )"		3945968	0					
ANR	3946578	Callee	zend_check_already_in_use		3945968	0					
ANR	3946579	Identifier	zend_check_already_in_use		3945968	0					
ANR	3946580	ArgumentList	type		3945968	1					
ANR	3946581	Argument	type		3945968	0					
ANR	3946582	Identifier	type		3945968	0					
ANR	3946583	Argument	old_name		3945968	1					
ANR	3946584	Identifier	old_name		3945968	0					
ANR	3946585	Argument	new_name		3945968	2					
ANR	3946586	Identifier	new_name		3945968	0					
ANR	3946587	Argument	lookup_name		3945968	3					
ANR	3946588	Identifier	lookup_name		3945968	0					
ANR	3946589	BreakStatement	break ;	5520:5:163743:163748	3945968	2	True				
ANR	3946590	Statement	EMPTY_SWITCH_DEFAULT_CASE	5522:4:163760:163784	3945968	6	True				
ANR	3946591	Statement	(	5522:29:163785:163785	3945968	7	True				
ANR	3946592	Statement	)	5522:30:163786:163786	3945968	8	True				
ANR	3946593	ExpressionStatement	zend_string_addref ( old_name )	5526:2:163800:163828	3945968	9	True				
ANR	3946594	CallExpression	zend_string_addref ( old_name )		3945968	0					
ANR	3946595	Callee	zend_string_addref		3945968	0					
ANR	3946596	Identifier	zend_string_addref		3945968	0					
ANR	3946597	ArgumentList	old_name		3945968	1					
ANR	3946598	Argument	old_name		3945968	0					
ANR	3946599	Identifier	old_name		3945968	0					
ANR	3946600	IfStatement	"if ( ! zend_hash_add_ptr ( current_import , lookup_name , old_name ) )"		3945968	10					
ANR	3946601	Condition	"! zend_hash_add_ptr ( current_import , lookup_name , old_name )"	5527:6:163836:163892	3945968	0	True				
ANR	3946602	UnaryOperationExpression	"! zend_hash_add_ptr ( current_import , lookup_name , old_name )"		3945968	0					
ANR	3946603	UnaryOperator	!		3945968	0					
ANR	3946604	CallExpression	"zend_hash_add_ptr ( current_import , lookup_name , old_name )"		3945968	1					
ANR	3946605	Callee	zend_hash_add_ptr		3945968	0					
ANR	3946606	Identifier	zend_hash_add_ptr		3945968	0					
ANR	3946607	ArgumentList	current_import		3945968	1					
ANR	3946608	Argument	current_import		3945968	0					
ANR	3946609	Identifier	current_import		3945968	0					
ANR	3946610	Argument	lookup_name		3945968	1					
ANR	3946611	Identifier	lookup_name		3945968	0					
ANR	3946612	Argument	old_name		3945968	2					
ANR	3946613	Identifier	old_name		3945968	0					
ANR	3946614	CompoundStatement		96:65:3242:3242	3945968	1					
ANR	3946615	Statement	zend_error_noreturn	5528:3:163900:163918	3945968	0	True				
ANR	3946616	Statement	(	5528:22:163919:163919	3945968	1	True				
ANR	3946617	Statement	E_COMPILE_ERROR	5528:23:163920:163934	3945968	2	True				
ANR	3946618	Statement	","	5528:38:163935:163935	3945968	3	True				
ANR	3946619	Statement	"""Cannot use%s %s as %s because the name """	5528:40:163937:163977	3945968	4	True				
ANR	3946620	Statement	"""is already in use"""	5529:4:163983:164001	3945968	5	True				
ANR	3946621	Statement	","	5529:23:164002:164002	3945968	6	True				
ANR	3946622	Statement	zend_get_use_type_str	5529:25:164004:164024	3945968	7	True				
ANR	3946623	Statement	(	5529:46:164025:164025	3945968	8	True				
ANR	3946624	Statement	type	5529:47:164026:164029	3945968	9	True				
ANR	3946625	Statement	)	5529:51:164030:164030	3945968	10	True				
ANR	3946626	Statement	","	5529:52:164031:164031	3945968	11	True				
ANR	3946627	Statement	ZSTR_VAL	5529:54:164033:164040	3945968	12	True				
ANR	3946628	Statement	(	5529:62:164041:164041	3945968	13	True				
ANR	3946629	Statement	old_name	5529:63:164042:164049	3945968	14	True				
ANR	3946630	Statement	)	5529:71:164050:164050	3945968	15	True				
ANR	3946631	Statement	","	5529:72:164051:164051	3945968	16	True				
ANR	3946632	Statement	ZSTR_VAL	5529:74:164053:164060	3945968	17	True				
ANR	3946633	Statement	(	5529:82:164061:164061	3945968	18	True				
ANR	3946634	Statement	new_name	5529:83:164062:164069	3945968	19	True				
ANR	3946635	Statement	)	5529:91:164070:164070	3945968	20	True				
ANR	3946636	Statement	)	5529:92:164071:164071	3945968	21	True				
ANR	3946637	ExpressionStatement		5529:93:164072:164072	3945968	22	True				
ANR	3946638	ExpressionStatement	zend_string_release ( lookup_name )	5532:2:164081:164113	3945968	11	True				
ANR	3946639	CallExpression	zend_string_release ( lookup_name )		3945968	0					
ANR	3946640	Callee	zend_string_release		3945968	0					
ANR	3946641	Identifier	zend_string_release		3945968	0					
ANR	3946642	ArgumentList	lookup_name		3945968	1					
ANR	3946643	Argument	lookup_name		3945968	0					
ANR	3946644	Identifier	lookup_name		3945968	0					
ANR	3946645	ExpressionStatement	zend_string_release ( new_name )	5533:2:164117:164146	3945968	12	True				
ANR	3946646	CallExpression	zend_string_release ( new_name )		3945968	0					
ANR	3946647	Callee	zend_string_release		3945968	0					
ANR	3946648	Identifier	zend_string_release		3945968	0					
ANR	3946649	ArgumentList	new_name		3945968	1					
ANR	3946650	Argument	new_name		3945968	0					
ANR	3946651	Identifier	new_name		3945968	0					
ANR	3946652	ReturnType	void		3945968	1					
ANR	3946653	Identifier	zend_compile_use		3945968	2					
ANR	3946654	ParameterList	zend_ast * ast		3945968	3					
ANR	3946655	Parameter	zend_ast * ast	5431:22:160627:160639	3945968	0	True				
ANR	3946656	ParameterType	zend_ast *		3945968	0					
ANR	3946657	Identifier	ast		3945968	1					
ANR	3946658	CFGEntryNode	ENTRY		3945968		True				
ANR	3946659	CFGExitNode	EXIT		3945968		True				
ANR	3946660	Symbol	zend_string_equals_literal		3945968						
ANR	3946661	Symbol	ast		3945968						
ANR	3946662	Symbol	E_COMPILE_ERROR		3945968						
ANR	3946663	Symbol	zend_hash_exists		3945968						
ANR	3946664	Symbol	unqualified_name		3945968						
ANR	3946665	Symbol	* ce		3945968						
ANR	3946666	Symbol	type		3945968						
ANR	3946667	Symbol	zend_string_tolower		3945968						
ANR	3946668	Symbol	& CG		3945968						
ANR	3946669	Symbol	zend_string_init		3945968						
ANR	3946670	Symbol	zend_is_reserved_class_name		3945968						
ANR	3946671	Symbol	* ZSTR_LEN		3945968						
ANR	3946672	Symbol	ZEND_USER_CLASS		3945968						
ANR	3946673	Symbol	ZEND_USER_FUNCTION		3945968						
ANR	3946674	Symbol	* * use_ast		3945968						
ANR	3946675	Symbol	zend_hash_find_ptr		3945968						
ANR	3946676	Symbol	* ZSTR_VAL		3945968						
ANR	3946677	Symbol	& unqualified_name_len		3945968						
ANR	3946678	Symbol	zend_string_alloc		3945968						
ANR	3946679	Symbol	ce -> info . user		3945968						
ANR	3946680	Symbol	const_filenames		3945968						
ANR	3946681	Symbol	zend_string_copy		3945968						
ANR	3946682	Symbol	list		3945968						
ANR	3946683	Symbol	filename		3945968						
ANR	3946684	Symbol	case_sensitive		3945968						
ANR	3946685	Symbol	old_name_ast		3945968						
ANR	3946686	Symbol	* list -> child		3945968						
ANR	3946687	Symbol	ce -> info		3945968						
ANR	3946688	Symbol	zend_hash_add_ptr		3945968						
ANR	3946689	Symbol	function_table		3945968						
ANR	3946690	Symbol	FC		3945968						
ANR	3946691	Symbol	list -> children		3945968						
ANR	3946692	Symbol	ce -> type		3945968						
ANR	3946693	Symbol	* use_ast -> child		3945968						
ANR	3946694	Symbol	* use_ast		3945968						
ANR	3946695	Symbol	fn		3945968						
ANR	3946696	Symbol	use_ast -> child		3945968						
ANR	3946697	Symbol	* ast		3945968						
ANR	3946698	Symbol	* * list		3945968						
ANR	3946699	Symbol	zend_ast_get_str		3945968						
ANR	3946700	Symbol	lookup_name		3945968						
ANR	3946701	Symbol	T_CLASS		3945968						
ANR	3946702	Symbol	zend_get_unqualified_name		3945968						
ANR	3946703	Symbol	current_ns		3945968						
ANR	3946704	Symbol	class_table		3945968						
ANR	3946705	Symbol	ns_name		3945968						
ANR	3946706	Symbol	fn -> op_array		3945968						
ANR	3946707	Symbol	new_name_ast		3945968						
ANR	3946708	Symbol	new_name		3945968						
ANR	3946709	Symbol	unqualified_name_len		3945968						
ANR	3946710	Symbol	ce -> info . user . filename		3945968						
ANR	3946711	Symbol	fn -> op_array . filename		3945968						
ANR	3946712	Symbol	ast -> attr		3945968						
ANR	3946713	Symbol	ce		3945968						
ANR	3946714	Symbol	zend_get_import_ht		3945968						
ANR	3946715	Symbol	list -> child		3945968						
ANR	3946716	Symbol	CG		3945968						
ANR	3946717	Symbol	T_CONST		3945968						
ANR	3946718	Symbol	i		3945968						
ANR	3946719	Symbol	compiled_filename		3945968						
ANR	3946720	Symbol	* fn		3945968						
ANR	3946721	Symbol	& unqualified_name		3945968						
ANR	3946722	Symbol	ZSTR_VAL		3945968						
ANR	3946723	Symbol	zend_ast_get_list		3945968						
ANR	3946724	Symbol	* i		3945968						
ANR	3946725	Symbol	current_namespace		3945968						
ANR	3946726	Symbol	* list		3945968						
ANR	3946727	Symbol	old_name		3945968						
ANR	3946728	Symbol	use_ast		3945968						
ANR	3946729	Symbol	ZSTR_LEN		3945968						
ANR	3946730	Symbol	current_import		3945968						
ANR	3946731	Symbol	fn -> type		3945968						
ANR	3946732	Function	zend_compile_group_use	5538:0:164164:164848							
ANR	3946733	FunctionDef	zend_compile_group_use (zend_ast * ast)		3946732	0					
ANR	3946734	CompoundStatement		5539:0:164217:164848	3946732	0					
ANR	3946735	IdentifierDeclStatement	uint32_t i ;	5540:1:164220:164230	3946732	0	True				
ANR	3946736	IdentifierDecl	i		3946732	0					
ANR	3946737	IdentifierDeclType	uint32_t		3946732	0					
ANR	3946738	Identifier	i		3946732	1					
ANR	3946739	IdentifierDeclStatement	zend_string * ns = zend_ast_get_str ( ast -> child [ 0 ] ) ;	5541:1:164233:164282	3946732	1	True				
ANR	3946740	IdentifierDecl	* ns = zend_ast_get_str ( ast -> child [ 0 ] )		3946732	0					
ANR	3946741	IdentifierDeclType	zend_string *		3946732	0					
ANR	3946742	Identifier	ns		3946732	1					
ANR	3946743	AssignmentExpression	* ns = zend_ast_get_str ( ast -> child [ 0 ] )		3946732	2		=			
ANR	3946744	Identifier	ns		3946732	0					
ANR	3946745	CallExpression	zend_ast_get_str ( ast -> child [ 0 ] )		3946732	1					
ANR	3946746	Callee	zend_ast_get_str		3946732	0					
ANR	3946747	Identifier	zend_ast_get_str		3946732	0					
ANR	3946748	ArgumentList	ast -> child [ 0 ]		3946732	1					
ANR	3946749	Argument	ast -> child [ 0 ]		3946732	0					
ANR	3946750	ArrayIndexing	ast -> child [ 0 ]		3946732	0					
ANR	3946751	PtrMemberAccess	ast -> child		3946732	0					
ANR	3946752	Identifier	ast		3946732	0					
ANR	3946753	Identifier	child		3946732	1					
ANR	3946754	PrimaryExpression	0		3946732	1					
ANR	3946755	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast -> child [ 1 ] ) ;	5542:1:164285:164339	3946732	2	True				
ANR	3946756	IdentifierDecl	* list = zend_ast_get_list ( ast -> child [ 1 ] )		3946732	0					
ANR	3946757	IdentifierDeclType	zend_ast_list *		3946732	0					
ANR	3946758	Identifier	list		3946732	1					
ANR	3946759	AssignmentExpression	* list = zend_ast_get_list ( ast -> child [ 1 ] )		3946732	2		=			
ANR	3946760	Identifier	list		3946732	0					
ANR	3946761	CallExpression	zend_ast_get_list ( ast -> child [ 1 ] )		3946732	1					
ANR	3946762	Callee	zend_ast_get_list		3946732	0					
ANR	3946763	Identifier	zend_ast_get_list		3946732	0					
ANR	3946764	ArgumentList	ast -> child [ 1 ]		3946732	1					
ANR	3946765	Argument	ast -> child [ 1 ]		3946732	0					
ANR	3946766	ArrayIndexing	ast -> child [ 1 ]		3946732	0					
ANR	3946767	PtrMemberAccess	ast -> child		3946732	0					
ANR	3946768	Identifier	ast		3946732	0					
ANR	3946769	Identifier	child		3946732	1					
ANR	3946770	PrimaryExpression	1		3946732	1					
ANR	3946771	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		3946732	3					
ANR	3946772	ForInit	i = 0 ;	5544:6:164348:164353	3946732	0	True				
ANR	3946773	AssignmentExpression	i = 0		3946732	0		=			
ANR	3946774	Identifier	i		3946732	0					
ANR	3946775	PrimaryExpression	0		3946732	1					
ANR	3946776	Condition	i < list -> children	5544:13:164355:164372	3946732	1	True				
ANR	3946777	RelationalExpression	i < list -> children		3946732	0		<			
ANR	3946778	Identifier	i		3946732	0					
ANR	3946779	PtrMemberAccess	list -> children		3946732	1					
ANR	3946780	Identifier	list		3946732	0					
ANR	3946781	Identifier	children		3946732	1					
ANR	3946782	PostIncDecOperationExpression	i ++	5544:33:164375:164377	3946732	2	True				
ANR	3946783	Identifier	i		3946732	0					
ANR	3946784	IncDec	++		3946732	1					
ANR	3946785	CompoundStatement		10:2:309:413	3946732	3					
ANR	3946786	IdentifierDeclStatement	"zend_ast * inline_use , * use = list -> child [ i ] ;"	5545:2:164384:164427	3946732	0	True				
ANR	3946787	IdentifierDecl	* inline_use		3946732	0					
ANR	3946788	IdentifierDeclType	zend_ast *		3946732	0					
ANR	3946789	Identifier	inline_use		3946732	1					
ANR	3946790	IdentifierDecl	* use = list -> child [ i ]		3946732	1					
ANR	3946791	IdentifierDeclType	zend_ast *		3946732	0					
ANR	3946792	Identifier	use		3946732	1					
ANR	3946793	AssignmentExpression	* use = list -> child [ i ]		3946732	2		=			
ANR	3946794	Identifier	use		3946732	0					
ANR	3946795	ArrayIndexing	list -> child [ i ]		3946732	1					
ANR	3946796	PtrMemberAccess	list -> child		3946732	0					
ANR	3946797	Identifier	list		3946732	0					
ANR	3946798	Identifier	child		3946732	1					
ANR	3946799	Identifier	i		3946732	1					
ANR	3946800	IdentifierDeclStatement	zval * name_zval = zend_ast_get_zval ( use -> child [ 0 ] ) ;	5546:2:164431:164481	3946732	1	True				
ANR	3946801	IdentifierDecl	* name_zval = zend_ast_get_zval ( use -> child [ 0 ] )		3946732	0					
ANR	3946802	IdentifierDeclType	zval *		3946732	0					
ANR	3946803	Identifier	name_zval		3946732	1					
ANR	3946804	AssignmentExpression	* name_zval = zend_ast_get_zval ( use -> child [ 0 ] )		3946732	2		=			
ANR	3946805	Identifier	name_zval		3946732	0					
ANR	3946806	CallExpression	zend_ast_get_zval ( use -> child [ 0 ] )		3946732	1					
ANR	3946807	Callee	zend_ast_get_zval		3946732	0					
ANR	3946808	Identifier	zend_ast_get_zval		3946732	0					
ANR	3946809	ArgumentList	use -> child [ 0 ]		3946732	1					
ANR	3946810	Argument	use -> child [ 0 ]		3946732	0					
ANR	3946811	ArrayIndexing	use -> child [ 0 ]		3946732	0					
ANR	3946812	PtrMemberAccess	use -> child		3946732	0					
ANR	3946813	Identifier	use		3946732	0					
ANR	3946814	Identifier	child		3946732	1					
ANR	3946815	PrimaryExpression	0		3946732	1					
ANR	3946816	IdentifierDeclStatement	zend_string * name = Z_STR_P ( name_zval ) ;	5547:2:164485:164523	3946732	2	True				
ANR	3946817	IdentifierDecl	* name = Z_STR_P ( name_zval )		3946732	0					
ANR	3946818	IdentifierDeclType	zend_string *		3946732	0					
ANR	3946819	Identifier	name		3946732	1					
ANR	3946820	AssignmentExpression	* name = Z_STR_P ( name_zval )		3946732	2		=			
ANR	3946821	Identifier	name		3946732	0					
ANR	3946822	CallExpression	Z_STR_P ( name_zval )		3946732	1					
ANR	3946823	Callee	Z_STR_P		3946732	0					
ANR	3946824	Identifier	Z_STR_P		3946732	0					
ANR	3946825	ArgumentList	name_zval		3946732	1					
ANR	3946826	Argument	name_zval		3946732	0					
ANR	3946827	Identifier	name_zval		3946732	0					
ANR	3946828	IdentifierDeclStatement	"zend_string * compound_ns = zend_concat_names ( ZSTR_VAL ( ns ) , ZSTR_LEN ( ns ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) ;"	5548:2:164527:164631	3946732	3	True				
ANR	3946829	IdentifierDecl	"* compound_ns = zend_concat_names ( ZSTR_VAL ( ns ) , ZSTR_LEN ( ns ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3946732	0					
ANR	3946830	IdentifierDeclType	zend_string *		3946732	0					
ANR	3946831	Identifier	compound_ns		3946732	1					
ANR	3946832	AssignmentExpression	"* compound_ns = zend_concat_names ( ZSTR_VAL ( ns ) , ZSTR_LEN ( ns ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3946732	2		=			
ANR	3946833	Identifier	compound_ns		3946732	0					
ANR	3946834	CallExpression	"zend_concat_names ( ZSTR_VAL ( ns ) , ZSTR_LEN ( ns ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3946732	1					
ANR	3946835	Callee	zend_concat_names		3946732	0					
ANR	3946836	Identifier	zend_concat_names		3946732	0					
ANR	3946837	ArgumentList	ZSTR_VAL ( ns )		3946732	1					
ANR	3946838	Argument	ZSTR_VAL ( ns )		3946732	0					
ANR	3946839	CallExpression	ZSTR_VAL ( ns )		3946732	0					
ANR	3946840	Callee	ZSTR_VAL		3946732	0					
ANR	3946841	Identifier	ZSTR_VAL		3946732	0					
ANR	3946842	ArgumentList	ns		3946732	1					
ANR	3946843	Argument	ns		3946732	0					
ANR	3946844	Identifier	ns		3946732	0					
ANR	3946845	Argument	ZSTR_LEN ( ns )		3946732	1					
ANR	3946846	CallExpression	ZSTR_LEN ( ns )		3946732	0					
ANR	3946847	Callee	ZSTR_LEN		3946732	0					
ANR	3946848	Identifier	ZSTR_LEN		3946732	0					
ANR	3946849	ArgumentList	ns		3946732	1					
ANR	3946850	Argument	ns		3946732	0					
ANR	3946851	Identifier	ns		3946732	0					
ANR	3946852	Argument	ZSTR_VAL ( name )		3946732	2					
ANR	3946853	CallExpression	ZSTR_VAL ( name )		3946732	0					
ANR	3946854	Callee	ZSTR_VAL		3946732	0					
ANR	3946855	Identifier	ZSTR_VAL		3946732	0					
ANR	3946856	ArgumentList	name		3946732	1					
ANR	3946857	Argument	name		3946732	0					
ANR	3946858	Identifier	name		3946732	0					
ANR	3946859	Argument	ZSTR_LEN ( name )		3946732	3					
ANR	3946860	CallExpression	ZSTR_LEN ( name )		3946732	0					
ANR	3946861	Callee	ZSTR_LEN		3946732	0					
ANR	3946862	Identifier	ZSTR_LEN		3946732	0					
ANR	3946863	ArgumentList	name		3946732	1					
ANR	3946864	Argument	name		3946732	0					
ANR	3946865	Identifier	name		3946732	0					
ANR	3946866	ExpressionStatement	zend_string_release ( name )	5549:2:164635:164660	3946732	4	True				
ANR	3946867	CallExpression	zend_string_release ( name )		3946732	0					
ANR	3946868	Callee	zend_string_release		3946732	0					
ANR	3946869	Identifier	zend_string_release		3946732	0					
ANR	3946870	ArgumentList	name		3946732	1					
ANR	3946871	Argument	name		3946732	0					
ANR	3946872	Identifier	name		3946732	0					
ANR	3946873	ExpressionStatement	"ZVAL_STR ( name_zval , compound_ns )"	5550:2:164664:164696	3946732	5	True				
ANR	3946874	CallExpression	"ZVAL_STR ( name_zval , compound_ns )"		3946732	0					
ANR	3946875	Callee	ZVAL_STR		3946732	0					
ANR	3946876	Identifier	ZVAL_STR		3946732	0					
ANR	3946877	ArgumentList	name_zval		3946732	1					
ANR	3946878	Argument	name_zval		3946732	0					
ANR	3946879	Identifier	name_zval		3946732	0					
ANR	3946880	Argument	compound_ns		3946732	1					
ANR	3946881	Identifier	compound_ns		3946732	0					
ANR	3946882	ExpressionStatement	"inline_use = zend_ast_create_list ( 1 , ZEND_AST_USE , use )"	5551:2:164700:164755	3946732	6	True				
ANR	3946883	AssignmentExpression	"inline_use = zend_ast_create_list ( 1 , ZEND_AST_USE , use )"		3946732	0		=			
ANR	3946884	Identifier	inline_use		3946732	0					
ANR	3946885	CallExpression	"zend_ast_create_list ( 1 , ZEND_AST_USE , use )"		3946732	1					
ANR	3946886	Callee	zend_ast_create_list		3946732	0					
ANR	3946887	Identifier	zend_ast_create_list		3946732	0					
ANR	3946888	ArgumentList	1		3946732	1					
ANR	3946889	Argument	1		3946732	0					
ANR	3946890	PrimaryExpression	1		3946732	0					
ANR	3946891	Argument	ZEND_AST_USE		3946732	1					
ANR	3946892	Identifier	ZEND_AST_USE		3946732	0					
ANR	3946893	Argument	use		3946732	2					
ANR	3946894	Identifier	use		3946732	0					
ANR	3946895	ExpressionStatement	inline_use -> attr = ast -> attr ? ast -> attr : use -> attr	5552:2:164759:164811	3946732	7	True				
ANR	3946896	AssignmentExpression	inline_use -> attr = ast -> attr ? ast -> attr : use -> attr		3946732	0		=			
ANR	3946897	PtrMemberAccess	inline_use -> attr		3946732	0					
ANR	3946898	Identifier	inline_use		3946732	0					
ANR	3946899	Identifier	attr		3946732	1					
ANR	3946900	ConditionalExpression	ast -> attr ? ast -> attr : use -> attr		3946732	1					
ANR	3946901	Condition	ast -> attr		3946732	0					
ANR	3946902	PtrMemberAccess	ast -> attr		3946732	0					
ANR	3946903	Identifier	ast		3946732	0					
ANR	3946904	Identifier	attr		3946732	1					
ANR	3946905	PtrMemberAccess	ast -> attr		3946732	1					
ANR	3946906	Identifier	ast		3946732	0					
ANR	3946907	Identifier	attr		3946732	1					
ANR	3946908	PtrMemberAccess	use -> attr		3946732	2					
ANR	3946909	Identifier	use		3946732	0					
ANR	3946910	Identifier	attr		3946732	1					
ANR	3946911	ExpressionStatement	zend_compile_use ( inline_use )	5553:2:164815:164843	3946732	8	True				
ANR	3946912	CallExpression	zend_compile_use ( inline_use )		3946732	0					
ANR	3946913	Callee	zend_compile_use		3946732	0					
ANR	3946914	Identifier	zend_compile_use		3946732	0					
ANR	3946915	ArgumentList	inline_use		3946732	1					
ANR	3946916	Argument	inline_use		3946732	0					
ANR	3946917	Identifier	inline_use		3946732	0					
ANR	3946918	ReturnType	void		3946732	1					
ANR	3946919	Identifier	zend_compile_group_use		3946732	2					
ANR	3946920	ParameterList	zend_ast * ast		3946732	3					
ANR	3946921	Parameter	zend_ast * ast	5538:28:164192:164204	3946732	0	True				
ANR	3946922	ParameterType	zend_ast *		3946732	0					
ANR	3946923	Identifier	ast		3946732	1					
ANR	3946924	CFGEntryNode	ENTRY		3946732		True				
ANR	3946925	CFGExitNode	EXIT		3946732		True				
ANR	3946926	Symbol	ast		3946732						
ANR	3946927	Symbol	zend_ast_create_list		3946732						
ANR	3946928	Symbol	inline_use		3946732						
ANR	3946929	Symbol	ns		3946732						
ANR	3946930	Symbol	use		3946732						
ANR	3946931	Symbol	* use -> child		3946732						
ANR	3946932	Symbol	zend_concat_names		3946732						
ANR	3946933	Symbol	* ast		3946732						
ANR	3946934	Symbol	zend_ast_get_str		3946732						
ANR	3946935	Symbol	* * list		3946732						
ANR	3946936	Symbol	name_zval		3946732						
ANR	3946937	Symbol	* * ast		3946732						
ANR	3946938	Symbol	* * use		3946732						
ANR	3946939	Symbol	ast -> attr		3946732						
ANR	3946940	Symbol	list -> child		3946732						
ANR	3946941	Symbol	inline_use -> attr		3946732						
ANR	3946942	Symbol	i		3946732						
ANR	3946943	Symbol	list		3946732						
ANR	3946944	Symbol	use -> child		3946732						
ANR	3946945	Symbol	ZSTR_VAL		3946732						
ANR	3946946	Symbol	* use		3946732						
ANR	3946947	Symbol	zend_ast_get_list		3946732						
ANR	3946948	Symbol	* i		3946732						
ANR	3946949	Symbol	* list		3946732						
ANR	3946950	Symbol	ZEND_AST_USE		3946732						
ANR	3946951	Symbol	* inline_use		3946732						
ANR	3946952	Symbol	name		3946732						
ANR	3946953	Symbol	ZSTR_LEN		3946732						
ANR	3946954	Symbol	use -> attr		3946732						
ANR	3946955	Symbol	* ast -> child		3946732						
ANR	3946956	Symbol	* list -> child		3946732						
ANR	3946957	Symbol	Z_STR_P		3946732						
ANR	3946958	Symbol	ast -> child		3946732						
ANR	3946959	Symbol	zend_ast_get_zval		3946732						
ANR	3946960	Symbol	list -> children		3946732						
ANR	3946961	Symbol	compound_ns		3946732						
ANR	3946962	Function	zend_compile_const_decl	5559:0:164862:166125							
ANR	3946963	FunctionDef	zend_compile_const_decl (zend_ast * ast)		3946962	0					
ANR	3946964	CompoundStatement		5560:0:164916:166125	3946962	0					
ANR	3946965	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	5561:1:164919:164963	3946962	0	True				
ANR	3946966	IdentifierDecl	* list = zend_ast_get_list ( ast )		3946962	0					
ANR	3946967	IdentifierDeclType	zend_ast_list *		3946962	0					
ANR	3946968	Identifier	list		3946962	1					
ANR	3946969	AssignmentExpression	* list = zend_ast_get_list ( ast )		3946962	2		=			
ANR	3946970	Identifier	list		3946962	0					
ANR	3946971	CallExpression	zend_ast_get_list ( ast )		3946962	1					
ANR	3946972	Callee	zend_ast_get_list		3946962	0					
ANR	3946973	Identifier	zend_ast_get_list		3946962	0					
ANR	3946974	ArgumentList	ast		3946962	1					
ANR	3946975	Argument	ast		3946962	0					
ANR	3946976	Identifier	ast		3946962	0					
ANR	3946977	IdentifierDeclStatement	uint32_t i ;	5562:1:164966:164976	3946962	1	True				
ANR	3946978	IdentifierDecl	i		3946962	0					
ANR	3946979	IdentifierDeclType	uint32_t		3946962	0					
ANR	3946980	Identifier	i		3946962	1					
ANR	3946981	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3946962	2					
ANR	3946982	ForInit	i = 0 ;	5563:6:164984:164989	3946962	0	True				
ANR	3946983	AssignmentExpression	i = 0		3946962	0		=			
ANR	3946984	Identifier	i		3946962	0					
ANR	3946985	PrimaryExpression	0		3946962	1					
ANR	3946986	Condition	i < list -> children	5563:13:164991:165008	3946962	1	True				
ANR	3946987	RelationalExpression	i < list -> children		3946962	0		<			
ANR	3946988	Identifier	i		3946962	0					
ANR	3946989	PtrMemberAccess	list -> children		3946962	1					
ANR	3946990	Identifier	list		3946962	0					
ANR	3946991	Identifier	children		3946962	1					
ANR	3946992	UnaryExpression	++ i	5563:33:165011:165013	3946962	2	True				
ANR	3946993	IncDec	++		3946962	0					
ANR	3946994	Identifier	i		3946962	1					
ANR	3946995	CompoundStatement		12:2:342:381	3946962	3					
ANR	3946996	IdentifierDeclStatement	zend_ast * const_ast = list -> child [ i ] ;	5564:2:165020:165056	3946962	0	True				
ANR	3946997	IdentifierDecl	* const_ast = list -> child [ i ]		3946962	0					
ANR	3946998	IdentifierDeclType	zend_ast *		3946962	0					
ANR	3946999	Identifier	const_ast		3946962	1					
ANR	3947000	AssignmentExpression	* const_ast = list -> child [ i ]		3946962	2		=			
ANR	3947001	Identifier	const_ast		3946962	0					
ANR	3947002	ArrayIndexing	list -> child [ i ]		3946962	1					
ANR	3947003	PtrMemberAccess	list -> child		3946962	0					
ANR	3947004	Identifier	list		3946962	0					
ANR	3947005	Identifier	child		3946962	1					
ANR	3947006	Identifier	i		3946962	1					
ANR	3947007	IdentifierDeclStatement	zend_ast * name_ast = const_ast -> child [ 0 ] ;	5565:2:165060:165100	3946962	1	True				
ANR	3947008	IdentifierDecl	* name_ast = const_ast -> child [ 0 ]		3946962	0					
ANR	3947009	IdentifierDeclType	zend_ast *		3946962	0					
ANR	3947010	Identifier	name_ast		3946962	1					
ANR	3947011	AssignmentExpression	* name_ast = const_ast -> child [ 0 ]		3946962	2		=			
ANR	3947012	Identifier	name_ast		3946962	0					
ANR	3947013	ArrayIndexing	const_ast -> child [ 0 ]		3946962	1					
ANR	3947014	PtrMemberAccess	const_ast -> child		3946962	0					
ANR	3947015	Identifier	const_ast		3946962	0					
ANR	3947016	Identifier	child		3946962	1					
ANR	3947017	PrimaryExpression	0		3946962	1					
ANR	3947018	IdentifierDeclStatement	zend_ast * value_ast = const_ast -> child [ 1 ] ;	5566:2:165104:165145	3946962	2	True				
ANR	3947019	IdentifierDecl	* value_ast = const_ast -> child [ 1 ]		3946962	0					
ANR	3947020	IdentifierDeclType	zend_ast *		3946962	0					
ANR	3947021	Identifier	value_ast		3946962	1					
ANR	3947022	AssignmentExpression	* value_ast = const_ast -> child [ 1 ]		3946962	2		=			
ANR	3947023	Identifier	value_ast		3946962	0					
ANR	3947024	ArrayIndexing	const_ast -> child [ 1 ]		3946962	1					
ANR	3947025	PtrMemberAccess	const_ast -> child		3946962	0					
ANR	3947026	Identifier	const_ast		3946962	0					
ANR	3947027	Identifier	child		3946962	1					
ANR	3947028	PrimaryExpression	1		3946962	1					
ANR	3947029	IdentifierDeclStatement	zend_string * name = zend_ast_get_str ( name_ast ) ;	5567:2:165149:165195	3946962	3	True				
ANR	3947030	IdentifierDecl	* name = zend_ast_get_str ( name_ast )		3946962	0					
ANR	3947031	IdentifierDeclType	zend_string *		3946962	0					
ANR	3947032	Identifier	name		3946962	1					
ANR	3947033	AssignmentExpression	* name = zend_ast_get_str ( name_ast )		3946962	2		=			
ANR	3947034	Identifier	name		3946962	0					
ANR	3947035	CallExpression	zend_ast_get_str ( name_ast )		3946962	1					
ANR	3947036	Callee	zend_ast_get_str		3946962	0					
ANR	3947037	Identifier	zend_ast_get_str		3946962	0					
ANR	3947038	ArgumentList	name_ast		3946962	1					
ANR	3947039	Argument	name_ast		3946962	0					
ANR	3947040	Identifier	name_ast		3946962	0					
ANR	3947041	IdentifierDeclStatement	zend_string * import_name ;	5569:2:165200:165224	3946962	4	True				
ANR	3947042	IdentifierDecl	* import_name		3946962	0					
ANR	3947043	IdentifierDeclType	zend_string *		3946962	0					
ANR	3947044	Identifier	import_name		3946962	1					
ANR	3947045	IdentifierDeclStatement	"znode name_node , value_node ;"	5570:2:165228:165255	3946962	5	True				
ANR	3947046	IdentifierDecl	name_node		3946962	0					
ANR	3947047	IdentifierDeclType	znode		3946962	0					
ANR	3947048	Identifier	name_node		3946962	1					
ANR	3947049	IdentifierDecl	value_node		3946962	1					
ANR	3947050	IdentifierDeclType	znode		3946962	0					
ANR	3947051	Identifier	value_node		3946962	1					
ANR	3947052	IdentifierDeclStatement	zval * value_zv = & value_node . u . constant ;	5571:2:165259:165298	3946962	6	True				
ANR	3947053	IdentifierDecl	* value_zv = & value_node . u . constant		3946962	0					
ANR	3947054	IdentifierDeclType	zval *		3946962	0					
ANR	3947055	Identifier	value_zv		3946962	1					
ANR	3947056	AssignmentExpression	* value_zv = & value_node . u . constant		3946962	2		=			
ANR	3947057	Identifier	value_zv		3946962	0					
ANR	3947058	UnaryOperationExpression	& value_node . u . constant		3946962	1					
ANR	3947059	UnaryOperator	&		3946962	0					
ANR	3947060	MemberAccess	value_node . u . constant		3946962	1					
ANR	3947061	MemberAccess	value_node . u		3946962	0					
ANR	3947062	Identifier	value_node		3946962	0					
ANR	3947063	Identifier	u		3946962	1					
ANR	3947064	Identifier	constant		3946962	1					
ANR	3947065	ExpressionStatement	value_node . op_type = IS_CONST	5573:2:165303:165332	3946962	7	True				
ANR	3947066	AssignmentExpression	value_node . op_type = IS_CONST		3946962	0		=			
ANR	3947067	MemberAccess	value_node . op_type		3946962	0					
ANR	3947068	Identifier	value_node		3946962	0					
ANR	3947069	Identifier	op_type		3946962	1					
ANR	3947070	Identifier	IS_CONST		3946962	1					
ANR	3947071	ExpressionStatement	"zend_const_expr_to_zval ( value_zv , value_ast )"	5574:2:165336:165380	3946962	8	True				
ANR	3947072	CallExpression	"zend_const_expr_to_zval ( value_zv , value_ast )"		3946962	0					
ANR	3947073	Callee	zend_const_expr_to_zval		3946962	0					
ANR	3947074	Identifier	zend_const_expr_to_zval		3946962	0					
ANR	3947075	ArgumentList	value_zv		3946962	1					
ANR	3947076	Argument	value_zv		3946962	0					
ANR	3947077	Identifier	value_zv		3946962	0					
ANR	3947078	Argument	value_ast		3946962	1					
ANR	3947079	Identifier	value_ast		3946962	0					
ANR	3947080	IfStatement	"if ( zend_lookup_reserved_const ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) )"		3946962	9					
ANR	3947081	Condition	"zend_lookup_reserved_const ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"	5576:6:165389:165446	3946962	0	True				
ANR	3947082	CallExpression	"zend_lookup_reserved_const ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3946962	0					
ANR	3947083	Callee	zend_lookup_reserved_const		3946962	0					
ANR	3947084	Identifier	zend_lookup_reserved_const		3946962	0					
ANR	3947085	ArgumentList	ZSTR_VAL ( name )		3946962	1					
ANR	3947086	Argument	ZSTR_VAL ( name )		3946962	0					
ANR	3947087	CallExpression	ZSTR_VAL ( name )		3946962	0					
ANR	3947088	Callee	ZSTR_VAL		3946962	0					
ANR	3947089	Identifier	ZSTR_VAL		3946962	0					
ANR	3947090	ArgumentList	name		3946962	1					
ANR	3947091	Argument	name		3946962	0					
ANR	3947092	Identifier	name		3946962	0					
ANR	3947093	Argument	ZSTR_LEN ( name )		3946962	1					
ANR	3947094	CallExpression	ZSTR_LEN ( name )		3946962	0					
ANR	3947095	Callee	ZSTR_LEN		3946962	0					
ANR	3947096	Identifier	ZSTR_LEN		3946962	0					
ANR	3947097	ArgumentList	name		3946962	1					
ANR	3947098	Argument	name		3946962	0					
ANR	3947099	Identifier	name		3946962	0					
ANR	3947100	CompoundStatement		17:66:532:532	3946962	1					
ANR	3947101	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare constant '%s'"" , ZSTR_VAL ( name ) )"	5577:3:165454:165540	3946962	0	True				
ANR	3947102	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare constant '%s'"" , ZSTR_VAL ( name ) )"		3946962	0					
ANR	3947103	Callee	zend_error_noreturn		3946962	0					
ANR	3947104	Identifier	zend_error_noreturn		3946962	0					
ANR	3947105	ArgumentList	E_COMPILE_ERROR		3946962	1					
ANR	3947106	Argument	E_COMPILE_ERROR		3946962	0					
ANR	3947107	Identifier	E_COMPILE_ERROR		3946962	0					
ANR	3947108	Argument	"""Cannot redeclare constant '%s'"""		3946962	1					
ANR	3947109	PrimaryExpression	"""Cannot redeclare constant '%s'"""		3946962	0					
ANR	3947110	Argument	ZSTR_VAL ( name )		3946962	2					
ANR	3947111	CallExpression	ZSTR_VAL ( name )		3946962	0					
ANR	3947112	Callee	ZSTR_VAL		3946962	0					
ANR	3947113	Identifier	ZSTR_VAL		3946962	0					
ANR	3947114	ArgumentList	name		3946962	1					
ANR	3947115	Argument	name		3946962	0					
ANR	3947116	Identifier	name		3946962	0					
ANR	3947117	ExpressionStatement	name = zend_prefix_with_ns ( name )	5580:2:165549:165581	3946962	10	True				
ANR	3947118	AssignmentExpression	name = zend_prefix_with_ns ( name )		3946962	0		=			
ANR	3947119	Identifier	name		3946962	0					
ANR	3947120	CallExpression	zend_prefix_with_ns ( name )		3946962	1					
ANR	3947121	Callee	zend_prefix_with_ns		3946962	0					
ANR	3947122	Identifier	zend_prefix_with_ns		3946962	0					
ANR	3947123	ArgumentList	name		3946962	1					
ANR	3947124	Argument	name		3946962	0					
ANR	3947125	Identifier	name		3946962	0					
ANR	3947126	ExpressionStatement	name = zend_new_interned_string ( name )	5581:2:165585:165622	3946962	11	True				
ANR	3947127	AssignmentExpression	name = zend_new_interned_string ( name )		3946962	0		=			
ANR	3947128	Identifier	name		3946962	0					
ANR	3947129	CallExpression	zend_new_interned_string ( name )		3946962	1					
ANR	3947130	Callee	zend_new_interned_string		3946962	0					
ANR	3947131	Identifier	zend_new_interned_string		3946962	0					
ANR	3947132	ArgumentList	name		3946962	1					
ANR	3947133	Argument	name		3946962	0					
ANR	3947134	Identifier	name		3946962	0					
ANR	3947135	IfStatement	"if ( FC ( imports_const ) && ( import_name = zend_hash_find_ptr ( FC ( imports_const ) , name ) ) )"		3946962	12					
ANR	3947136	Condition	"FC ( imports_const ) && ( import_name = zend_hash_find_ptr ( FC ( imports_const ) , name ) )"	5583:6:165631:165713	3946962	0	True				
ANR	3947137	AndExpression	"FC ( imports_const ) && ( import_name = zend_hash_find_ptr ( FC ( imports_const ) , name ) )"		3946962	0		&&			
ANR	3947138	CallExpression	FC ( imports_const )		3946962	0					
ANR	3947139	Callee	FC		3946962	0					
ANR	3947140	Identifier	FC		3946962	0					
ANR	3947141	ArgumentList	imports_const		3946962	1					
ANR	3947142	Argument	imports_const		3946962	0					
ANR	3947143	Identifier	imports_const		3946962	0					
ANR	3947144	AssignmentExpression	"import_name = zend_hash_find_ptr ( FC ( imports_const ) , name )"		3946962	1		=			
ANR	3947145	Identifier	import_name		3946962	0					
ANR	3947146	CallExpression	"zend_hash_find_ptr ( FC ( imports_const ) , name )"		3946962	1					
ANR	3947147	Callee	zend_hash_find_ptr		3946962	0					
ANR	3947148	Identifier	zend_hash_find_ptr		3946962	0					
ANR	3947149	ArgumentList	FC ( imports_const )		3946962	1					
ANR	3947150	Argument	FC ( imports_const )		3946962	0					
ANR	3947151	CallExpression	FC ( imports_const )		3946962	0					
ANR	3947152	Callee	FC		3946962	0					
ANR	3947153	Identifier	FC		3946962	0					
ANR	3947154	ArgumentList	imports_const		3946962	1					
ANR	3947155	Argument	imports_const		3946962	0					
ANR	3947156	Identifier	imports_const		3946962	0					
ANR	3947157	Argument	name		3946962	1					
ANR	3947158	Identifier	name		3946962	0					
ANR	3947159	CompoundStatement		26:4:802:802	3946962	1					
ANR	3947160	IfStatement	"if ( ! zend_string_equals ( import_name , name ) )"		3946962	0					
ANR	3947161	Condition	"! zend_string_equals ( import_name , name )"	5586:7:165728:165765	3946962	0	True				
ANR	3947162	UnaryOperationExpression	"! zend_string_equals ( import_name , name )"		3946962	0					
ANR	3947163	UnaryOperator	!		3946962	0					
ANR	3947164	CallExpression	"zend_string_equals ( import_name , name )"		3946962	1					
ANR	3947165	Callee	zend_string_equals		3946962	0					
ANR	3947166	Identifier	zend_string_equals		3946962	0					
ANR	3947167	ArgumentList	import_name		3946962	1					
ANR	3947168	Argument	import_name		3946962	0					
ANR	3947169	Identifier	import_name		3946962	0					
ANR	3947170	Argument	name		3946962	1					
ANR	3947171	Identifier	name		3946962	0					
ANR	3947172	CompoundStatement		27:47:851:851	3946962	1					
ANR	3947173	Statement	zend_error_noreturn	5587:4:165774:165792	3946962	0	True				
ANR	3947174	Statement	(	5587:23:165793:165793	3946962	1	True				
ANR	3947175	Statement	E_COMPILE_ERROR	5587:24:165794:165808	3946962	2	True				
ANR	3947176	Statement	","	5587:39:165809:165809	3946962	3	True				
ANR	3947177	Statement	"""Cannot declare const %s because """	5587:41:165811:165844	3946962	4	True				
ANR	3947178	Statement	"""the name is already in use"""	5588:5:165851:165878	3946962	5	True				
ANR	3947179	Statement	","	5588:33:165879:165879	3946962	6	True				
ANR	3947180	Statement	ZSTR_VAL	5588:35:165881:165888	3946962	7	True				
ANR	3947181	Statement	(	5588:43:165889:165889	3946962	8	True				
ANR	3947182	Statement	name	5588:44:165890:165893	3946962	9	True				
ANR	3947183	Statement	)	5588:48:165894:165894	3946962	10	True				
ANR	3947184	Statement	)	5588:49:165895:165895	3946962	11	True				
ANR	3947185	ExpressionStatement		5588:50:165896:165896	3946962	12	True				
ANR	3947186	ExpressionStatement	name_node . op_type = IS_CONST	5592:2:165910:165938	3946962	13	True				
ANR	3947187	AssignmentExpression	name_node . op_type = IS_CONST		3946962	0		=			
ANR	3947188	MemberAccess	name_node . op_type		3946962	0					
ANR	3947189	Identifier	name_node		3946962	0					
ANR	3947190	Identifier	op_type		3946962	1					
ANR	3947191	Identifier	IS_CONST		3946962	1					
ANR	3947192	ExpressionStatement	"ZVAL_STR ( & name_node . u . constant , name )"	5593:2:165942:165979	3946962	14	True				
ANR	3947193	CallExpression	"ZVAL_STR ( & name_node . u . constant , name )"		3946962	0					
ANR	3947194	Callee	ZVAL_STR		3946962	0					
ANR	3947195	Identifier	ZVAL_STR		3946962	0					
ANR	3947196	ArgumentList	& name_node . u . constant		3946962	1					
ANR	3947197	Argument	& name_node . u . constant		3946962	0					
ANR	3947198	UnaryOperationExpression	& name_node . u . constant		3946962	0					
ANR	3947199	UnaryOperator	&		3946962	0					
ANR	3947200	MemberAccess	name_node . u . constant		3946962	1					
ANR	3947201	MemberAccess	name_node . u		3946962	0					
ANR	3947202	Identifier	name_node		3946962	0					
ANR	3947203	Identifier	u		3946962	1					
ANR	3947204	Identifier	constant		3946962	1					
ANR	3947205	Argument	name		3946962	1					
ANR	3947206	Identifier	name		3946962	0					
ANR	3947207	ExpressionStatement	"zend_emit_op ( NULL , ZEND_DECLARE_CONST , & name_node , & value_node )"	5595:2:165984:166047	3946962	15	True				
ANR	3947208	CallExpression	"zend_emit_op ( NULL , ZEND_DECLARE_CONST , & name_node , & value_node )"		3946962	0					
ANR	3947209	Callee	zend_emit_op		3946962	0					
ANR	3947210	Identifier	zend_emit_op		3946962	0					
ANR	3947211	ArgumentList	NULL		3946962	1					
ANR	3947212	Argument	NULL		3946962	0					
ANR	3947213	Identifier	NULL		3946962	0					
ANR	3947214	Argument	ZEND_DECLARE_CONST		3946962	1					
ANR	3947215	Identifier	ZEND_DECLARE_CONST		3946962	0					
ANR	3947216	Argument	& name_node		3946962	2					
ANR	3947217	UnaryOperationExpression	& name_node		3946962	0					
ANR	3947218	UnaryOperator	&		3946962	0					
ANR	3947219	Identifier	name_node		3946962	1					
ANR	3947220	Argument	& value_node		3946962	3					
ANR	3947221	UnaryOperationExpression	& value_node		3946962	0					
ANR	3947222	UnaryOperator	&		3946962	0					
ANR	3947223	Identifier	value_node		3946962	1					
ANR	3947224	ExpressionStatement	"zend_hash_add_ptr ( & CG ( const_filenames ) , name , CG ( compiled_filename ) )"	5597:2:166052:166120	3946962	16	True				
ANR	3947225	CallExpression	"zend_hash_add_ptr ( & CG ( const_filenames ) , name , CG ( compiled_filename ) )"		3946962	0					
ANR	3947226	Callee	zend_hash_add_ptr		3946962	0					
ANR	3947227	Identifier	zend_hash_add_ptr		3946962	0					
ANR	3947228	ArgumentList	& CG ( const_filenames )		3946962	1					
ANR	3947229	Argument	& CG ( const_filenames )		3946962	0					
ANR	3947230	UnaryOperationExpression	& CG ( const_filenames )		3946962	0					
ANR	3947231	UnaryOperator	&		3946962	0					
ANR	3947232	CallExpression	CG ( const_filenames )		3946962	1					
ANR	3947233	Callee	CG		3946962	0					
ANR	3947234	Identifier	CG		3946962	0					
ANR	3947235	ArgumentList	const_filenames		3946962	1					
ANR	3947236	Argument	const_filenames		3946962	0					
ANR	3947237	Identifier	const_filenames		3946962	0					
ANR	3947238	Argument	name		3946962	1					
ANR	3947239	Identifier	name		3946962	0					
ANR	3947240	Argument	CG ( compiled_filename )		3946962	2					
ANR	3947241	CallExpression	CG ( compiled_filename )		3946962	0					
ANR	3947242	Callee	CG		3946962	0					
ANR	3947243	Identifier	CG		3946962	0					
ANR	3947244	ArgumentList	compiled_filename		3946962	1					
ANR	3947245	Argument	compiled_filename		3946962	0					
ANR	3947246	Identifier	compiled_filename		3946962	0					
ANR	3947247	ReturnType	void		3946962	1					
ANR	3947248	Identifier	zend_compile_const_decl		3946962	2					
ANR	3947249	ParameterList	zend_ast * ast		3946962	3					
ANR	3947250	Parameter	zend_ast * ast	5559:29:164891:164903	3946962	0	True				
ANR	3947251	ParameterType	zend_ast *		3946962	0					
ANR	3947252	Identifier	ast		3946962	1					
ANR	3947253	CFGEntryNode	ENTRY		3946962		True				
ANR	3947254	CFGExitNode	EXIT		3946962		True				
ANR	3947255	Symbol	* * const_ast		3946962						
ANR	3947256	Symbol	ZEND_DECLARE_CONST		3946962						
ANR	3947257	Symbol	ast		3946962						
ANR	3947258	Symbol	E_COMPILE_ERROR		3946962						
ANR	3947259	Symbol	& value_node . u		3946962						
ANR	3947260	Symbol	& CG		3946962						
ANR	3947261	Symbol	& name_node		3946962						
ANR	3947262	Symbol	& value_node . u . constant		3946962						
ANR	3947263	Symbol	zend_hash_find_ptr		3946962						
ANR	3947264	Symbol	IS_CONST		3946962						
ANR	3947265	Symbol	NULL		3946962						
ANR	3947266	Symbol	const_filenames		3946962						
ANR	3947267	Symbol	name_node . u		3946962						
ANR	3947268	Symbol	imports_const		3946962						
ANR	3947269	Symbol	list		3946962						
ANR	3947270	Symbol	zend_lookup_reserved_const		3946962						
ANR	3947271	Symbol	* const_ast		3946962						
ANR	3947272	Symbol	name		3946962						
ANR	3947273	Symbol	value_zv		3946962						
ANR	3947274	Symbol	& name_node . u . constant		3946962						
ANR	3947275	Symbol	* list -> child		3946962						
ANR	3947276	Symbol	FC		3946962						
ANR	3947277	Symbol	list -> children		3946962						
ANR	3947278	Symbol	name_node		3946962						
ANR	3947279	Symbol	const_ast -> child		3946962						
ANR	3947280	Symbol	zend_string_equals		3946962						
ANR	3947281	Symbol	zend_prefix_with_ns		3946962						
ANR	3947282	Symbol	* * list		3946962						
ANR	3947283	Symbol	zend_ast_get_str		3946962						
ANR	3947284	Symbol	value_ast		3946962						
ANR	3947285	Symbol	value_node		3946962						
ANR	3947286	Symbol	value_node . op_type		3946962						
ANR	3947287	Symbol	& name_node . u		3946962						
ANR	3947288	Symbol	* const_ast -> child		3946962						
ANR	3947289	Symbol	list -> child		3946962						
ANR	3947290	Symbol	CG		3946962						
ANR	3947291	Symbol	i		3946962						
ANR	3947292	Symbol	import_name		3946962						
ANR	3947293	Symbol	compiled_filename		3946962						
ANR	3947294	Symbol	ZSTR_VAL		3946962						
ANR	3947295	Symbol	zend_ast_get_list		3946962						
ANR	3947296	Symbol	* i		3946962						
ANR	3947297	Symbol	zend_new_interned_string		3946962						
ANR	3947298	Symbol	name_node . op_type		3946962						
ANR	3947299	Symbol	* list		3946962						
ANR	3947300	Symbol	const_ast		3946962						
ANR	3947301	Symbol	& value_node		3946962						
ANR	3947302	Symbol	name_ast		3946962						
ANR	3947303	Symbol	ZSTR_LEN		3946962						
ANR	3947304	Symbol	value_node . u		3946962						
ANR	3947305	Function	zend_compile_namespace	5602:0:166137:168242							
ANR	3947306	FunctionDef	zend_compile_namespace (zend_ast * ast)		3947305	0					
ANR	3947307	CompoundStatement		5603:0:166190:168242	3947305	0					
ANR	3947308	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	5604:1:166193:166227	3947305	0	True				
ANR	3947309	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3947305	0					
ANR	3947310	IdentifierDeclType	zend_ast *		3947305	0					
ANR	3947311	Identifier	name_ast		3947305	1					
ANR	3947312	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3947305	2		=			
ANR	3947313	Identifier	name_ast		3947305	0					
ANR	3947314	ArrayIndexing	ast -> child [ 0 ]		3947305	1					
ANR	3947315	PtrMemberAccess	ast -> child		3947305	0					
ANR	3947316	Identifier	ast		3947305	0					
ANR	3947317	Identifier	child		3947305	1					
ANR	3947318	PrimaryExpression	0		3947305	1					
ANR	3947319	IdentifierDeclStatement	zend_ast * stmt_ast = ast -> child [ 1 ] ;	5605:1:166230:166264	3947305	1	True				
ANR	3947320	IdentifierDecl	* stmt_ast = ast -> child [ 1 ]		3947305	0					
ANR	3947321	IdentifierDeclType	zend_ast *		3947305	0					
ANR	3947322	Identifier	stmt_ast		3947305	1					
ANR	3947323	AssignmentExpression	* stmt_ast = ast -> child [ 1 ]		3947305	2		=			
ANR	3947324	Identifier	stmt_ast		3947305	0					
ANR	3947325	ArrayIndexing	ast -> child [ 1 ]		3947305	1					
ANR	3947326	PtrMemberAccess	ast -> child		3947305	0					
ANR	3947327	Identifier	ast		3947305	0					
ANR	3947328	Identifier	child		3947305	1					
ANR	3947329	PrimaryExpression	1		3947305	1					
ANR	3947330	IdentifierDeclStatement	zend_string * name ;	5606:1:166267:166284	3947305	2	True				
ANR	3947331	IdentifierDecl	* name		3947305	0					
ANR	3947332	IdentifierDeclType	zend_string *		3947305	0					
ANR	3947333	Identifier	name		3947305	1					
ANR	3947334	IdentifierDeclStatement	zend_bool with_bracket = stmt_ast != NULL ;	5607:1:166287:166328	3947305	3	True				
ANR	3947335	IdentifierDecl	with_bracket = stmt_ast != NULL		3947305	0					
ANR	3947336	IdentifierDeclType	zend_bool		3947305	0					
ANR	3947337	Identifier	with_bracket		3947305	1					
ANR	3947338	AssignmentExpression	with_bracket = stmt_ast != NULL		3947305	2		=			
ANR	3947339	Identifier	with_bracket		3947305	0					
ANR	3947340	EqualityExpression	stmt_ast != NULL		3947305	1		!=			
ANR	3947341	Identifier	stmt_ast		3947305	0					
ANR	3947342	Identifier	NULL		3947305	1					
ANR	3947343	IfStatement	if ( ! FC ( has_bracketed_namespaces ) )		3947305	4					
ANR	3947344	Condition	! FC ( has_bracketed_namespaces )	5610:5:166396:166424	3947305	0	True				
ANR	3947345	UnaryOperationExpression	! FC ( has_bracketed_namespaces )		3947305	0					
ANR	3947346	UnaryOperator	!		3947305	0					
ANR	3947347	CallExpression	FC ( has_bracketed_namespaces )		3947305	1					
ANR	3947348	Callee	FC		3947305	0					
ANR	3947349	Identifier	FC		3947305	0					
ANR	3947350	ArgumentList	has_bracketed_namespaces		3947305	1					
ANR	3947351	Argument	has_bracketed_namespaces		3947305	0					
ANR	3947352	Identifier	has_bracketed_namespaces		3947305	0					
ANR	3947353	CompoundStatement		8:36:236:236	3947305	1					
ANR	3947354	IfStatement	if ( FC ( current_namespace ) )		3947305	0					
ANR	3947355	Condition	FC ( current_namespace )	5611:6:166435:166455	3947305	0	True				
ANR	3947356	CallExpression	FC ( current_namespace )		3947305	0					
ANR	3947357	Callee	FC		3947305	0					
ANR	3947358	Identifier	FC		3947305	0					
ANR	3947359	ArgumentList	current_namespace		3947305	1					
ANR	3947360	Argument	current_namespace		3947305	0					
ANR	3947361	Identifier	current_namespace		3947305	0					
ANR	3947362	CompoundStatement		9:29:267:267	3947305	1					
ANR	3947363	IfStatement	if ( with_bracket )		3947305	0					
ANR	3947364	Condition	with_bracket	5613:7:166525:166536	3947305	0	True				
ANR	3947365	Identifier	with_bracket		3947305	0					
ANR	3947366	CompoundStatement		11:21:348:348	3947305	1					
ANR	3947367	Statement	zend_error_noreturn	5614:4:166545:166563	3947305	0	True				
ANR	3947368	Statement	(	5614:23:166564:166564	3947305	1	True				
ANR	3947369	Statement	E_COMPILE_ERROR	5614:24:166565:166579	3947305	2	True				
ANR	3947370	Statement	","	5614:39:166580:166580	3947305	3	True				
ANR	3947371	Statement	"""Cannot mix bracketed namespace declarations """	5614:41:166582:166627	3947305	4	True				
ANR	3947372	Statement	"""with unbracketed namespace declarations"""	5615:5:166634:166674	3947305	5	True				
ANR	3947373	Statement	)	5615:46:166675:166675	3947305	6	True				
ANR	3947374	ExpressionStatement		5615:47:166676:166676	3947305	7	True				
ANR	3947375	ElseStatement	else		3947305	0					
ANR	3947376	CompoundStatement		16:8:504:504	3947305	0					
ANR	3947377	IfStatement	if ( ! with_bracket )		3947305	0					
ANR	3947378	Condition	! with_bracket	5620:6:166758:166770	3947305	0	True				
ANR	3947379	UnaryOperationExpression	! with_bracket		3947305	0					
ANR	3947380	UnaryOperator	!		3947305	0					
ANR	3947381	Identifier	with_bracket		3947305	1					
ANR	3947382	CompoundStatement		18:21:582:582	3947305	1					
ANR	3947383	Statement	zend_error_noreturn	5621:3:166778:166796	3947305	0	True				
ANR	3947384	Statement	(	5621:22:166797:166797	3947305	1	True				
ANR	3947385	Statement	E_COMPILE_ERROR	5621:23:166798:166812	3947305	2	True				
ANR	3947386	Statement	","	5621:38:166813:166813	3947305	3	True				
ANR	3947387	Statement	"""Cannot mix bracketed namespace declarations """	5621:40:166815:166860	3947305	4	True				
ANR	3947388	Statement	"""with unbracketed namespace declarations"""	5622:4:166866:166906	3947305	5	True				
ANR	3947389	Statement	)	5622:45:166907:166907	3947305	6	True				
ANR	3947390	ExpressionStatement		5622:46:166908:166908	3947305	7	True				
ANR	3947391	ElseStatement	else		3947305	0					
ANR	3947392	IfStatement	if ( FC ( current_namespace ) || FC ( in_namespace ) )		3947305	0					
ANR	3947393	Condition	FC ( current_namespace ) || FC ( in_namespace )	5623:13:166923:166963	3947305	0	True				
ANR	3947394	OrExpression	FC ( current_namespace ) || FC ( in_namespace )		3947305	0		||			
ANR	3947395	CallExpression	FC ( current_namespace )		3947305	0					
ANR	3947396	Callee	FC		3947305	0					
ANR	3947397	Identifier	FC		3947305	0					
ANR	3947398	ArgumentList	current_namespace		3947305	1					
ANR	3947399	Argument	current_namespace		3947305	0					
ANR	3947400	Identifier	current_namespace		3947305	0					
ANR	3947401	CallExpression	FC ( in_namespace )		3947305	1					
ANR	3947402	Callee	FC		3947305	0					
ANR	3947403	Identifier	FC		3947305	0					
ANR	3947404	ArgumentList	in_namespace		3947305	1					
ANR	3947405	Argument	in_namespace		3947305	0					
ANR	3947406	Identifier	in_namespace		3947305	0					
ANR	3947407	CompoundStatement		21:56:775:775	3947305	1					
ANR	3947408	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Namespace declarations cannot be nested"" )"	5624:3:166971:167050	3947305	0	True				
ANR	3947409	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Namespace declarations cannot be nested"" )"		3947305	0					
ANR	3947410	Callee	zend_error_noreturn		3947305	0					
ANR	3947411	Identifier	zend_error_noreturn		3947305	0					
ANR	3947412	ArgumentList	E_COMPILE_ERROR		3947305	1					
ANR	3947413	Argument	E_COMPILE_ERROR		3947305	0					
ANR	3947414	Identifier	E_COMPILE_ERROR		3947305	0					
ANR	3947415	Argument	"""Namespace declarations cannot be nested"""		3947305	1					
ANR	3947416	PrimaryExpression	"""Namespace declarations cannot be nested"""		3947305	0					
ANR	3947417	IfStatement	if ( ( ( ! with_bracket && ! FC ( current_namespace ) ) || ( with_bracket && ! FC ( has_bracketed_namespaces ) ) ) && CG ( active_op_array ) -> last > 0 )		3947305	5					
ANR	3947418	Condition	( ( ! with_bracket && ! FC ( current_namespace ) ) || ( with_bracket && ! FC ( has_bracketed_namespaces ) ) ) && CG ( active_op_array ) -> last > 0	5628:5:167065:167194	3947305	0	True				
ANR	3947419	AndExpression	( ( ! with_bracket && ! FC ( current_namespace ) ) || ( with_bracket && ! FC ( has_bracketed_namespaces ) ) ) && CG ( active_op_array ) -> last > 0		3947305	0		&&			
ANR	3947420	OrExpression	( ! with_bracket && ! FC ( current_namespace ) ) || ( with_bracket && ! FC ( has_bracketed_namespaces ) )		3947305	0		||			
ANR	3947421	AndExpression	! with_bracket && ! FC ( current_namespace )		3947305	0		&&			
ANR	3947422	UnaryOperationExpression	! with_bracket		3947305	0					
ANR	3947423	UnaryOperator	!		3947305	0					
ANR	3947424	Identifier	with_bracket		3947305	1					
ANR	3947425	UnaryOperationExpression	! FC ( current_namespace )		3947305	1					
ANR	3947426	UnaryOperator	!		3947305	0					
ANR	3947427	CallExpression	FC ( current_namespace )		3947305	1					
ANR	3947428	Callee	FC		3947305	0					
ANR	3947429	Identifier	FC		3947305	0					
ANR	3947430	ArgumentList	current_namespace		3947305	1					
ANR	3947431	Argument	current_namespace		3947305	0					
ANR	3947432	Identifier	current_namespace		3947305	0					
ANR	3947433	AndExpression	with_bracket && ! FC ( has_bracketed_namespaces )		3947305	1		&&			
ANR	3947434	Identifier	with_bracket		3947305	0					
ANR	3947435	UnaryOperationExpression	! FC ( has_bracketed_namespaces )		3947305	1					
ANR	3947436	UnaryOperator	!		3947305	0					
ANR	3947437	CallExpression	FC ( has_bracketed_namespaces )		3947305	1					
ANR	3947438	Callee	FC		3947305	0					
ANR	3947439	Identifier	FC		3947305	0					
ANR	3947440	ArgumentList	has_bracketed_namespaces		3947305	1					
ANR	3947441	Argument	has_bracketed_namespaces		3947305	0					
ANR	3947442	Identifier	has_bracketed_namespaces		3947305	0					
ANR	3947443	RelationalExpression	CG ( active_op_array ) -> last > 0		3947305	1		>			
ANR	3947444	PtrMemberAccess	CG ( active_op_array ) -> last		3947305	0					
ANR	3947445	CallExpression	CG ( active_op_array )		3947305	0					
ANR	3947446	Callee	CG		3947305	0					
ANR	3947447	Identifier	CG		3947305	0					
ANR	3947448	ArgumentList	active_op_array		3947305	1					
ANR	3947449	Argument	active_op_array		3947305	0					
ANR	3947450	Identifier	active_op_array		3947305	0					
ANR	3947451	Identifier	last		3947305	1					
ANR	3947452	PrimaryExpression	0		3947305	1					
ANR	3947453	CompoundStatement		30:2:1056:1096	3947305	1					
ANR	3947454	IdentifierDeclStatement	uint32_t num = CG ( active_op_array ) -> last ;	5632:2:167247:167287	3947305	0	True				
ANR	3947455	IdentifierDecl	num = CG ( active_op_array ) -> last		3947305	0					
ANR	3947456	IdentifierDeclType	uint32_t		3947305	0					
ANR	3947457	Identifier	num		3947305	1					
ANR	3947458	AssignmentExpression	num = CG ( active_op_array ) -> last		3947305	2		=			
ANR	3947459	Identifier	num		3947305	0					
ANR	3947460	PtrMemberAccess	CG ( active_op_array ) -> last		3947305	1					
ANR	3947461	CallExpression	CG ( active_op_array )		3947305	0					
ANR	3947462	Callee	CG		3947305	0					
ANR	3947463	Identifier	CG		3947305	0					
ANR	3947464	ArgumentList	active_op_array		3947305	1					
ANR	3947465	Argument	active_op_array		3947305	0					
ANR	3947466	Identifier	active_op_array		3947305	0					
ANR	3947467	Identifier	last		3947305	1					
ANR	3947468	WhileStatement	while ( num > 0 && ( CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_EXT_STMT || CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_TICKS ) )		3947305	1					
ANR	3947469	Condition	num > 0 && ( CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_EXT_STMT || CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_TICKS )	5633:9:167298:167448	3947305	0	True				
ANR	3947470	AndExpression	num > 0 && ( CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_EXT_STMT || CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_TICKS )		3947305	0		&&			
ANR	3947471	RelationalExpression	num > 0		3947305	0		>			
ANR	3947472	Identifier	num		3947305	0					
ANR	3947473	PrimaryExpression	0		3947305	1					
ANR	3947474	OrExpression	CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_EXT_STMT || CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_TICKS		3947305	1		||			
ANR	3947475	EqualityExpression	CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_EXT_STMT		3947305	0		==			
ANR	3947476	MemberAccess	CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode		3947305	0					
ANR	3947477	ArrayIndexing	CG ( active_op_array ) -> opcodes [ num - 1 ]		3947305	0					
ANR	3947478	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3947305	0					
ANR	3947479	CallExpression	CG ( active_op_array )		3947305	0					
ANR	3947480	Callee	CG		3947305	0					
ANR	3947481	Identifier	CG		3947305	0					
ANR	3947482	ArgumentList	active_op_array		3947305	1					
ANR	3947483	Argument	active_op_array		3947305	0					
ANR	3947484	Identifier	active_op_array		3947305	0					
ANR	3947485	Identifier	opcodes		3947305	1					
ANR	3947486	AdditiveExpression	num - 1		3947305	1		-			
ANR	3947487	Identifier	num		3947305	0					
ANR	3947488	PrimaryExpression	1		3947305	1					
ANR	3947489	Identifier	opcode		3947305	1					
ANR	3947490	Identifier	ZEND_EXT_STMT		3947305	1					
ANR	3947491	EqualityExpression	CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode == ZEND_TICKS		3947305	1		==			
ANR	3947492	MemberAccess	CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode		3947305	0					
ANR	3947493	ArrayIndexing	CG ( active_op_array ) -> opcodes [ num - 1 ]		3947305	0					
ANR	3947494	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3947305	0					
ANR	3947495	CallExpression	CG ( active_op_array )		3947305	0					
ANR	3947496	Callee	CG		3947305	0					
ANR	3947497	Identifier	CG		3947305	0					
ANR	3947498	ArgumentList	active_op_array		3947305	1					
ANR	3947499	Argument	active_op_array		3947305	0					
ANR	3947500	Identifier	active_op_array		3947305	0					
ANR	3947501	Identifier	opcodes		3947305	1					
ANR	3947502	AdditiveExpression	num - 1		3947305	1		-			
ANR	3947503	Identifier	num		3947305	0					
ANR	3947504	PrimaryExpression	1		3947305	1					
ANR	3947505	Identifier	opcode		3947305	1					
ANR	3947506	Identifier	ZEND_TICKS		3947305	1					
ANR	3947507	CompoundStatement		33:69:1260:1260	3947305	1					
ANR	3947508	ExpressionStatement	-- num	5636:3:167456:167461	3947305	0	True				
ANR	3947509	UnaryExpression	-- num		3947305	0					
ANR	3947510	IncDec	--		3947305	0					
ANR	3947511	Identifier	num		3947305	1					
ANR	3947512	IfStatement	if ( num > 0 )		3947305	2					
ANR	3947513	Condition	num > 0	5638:6:167473:167479	3947305	0	True				
ANR	3947514	RelationalExpression	num > 0		3947305	0		>			
ANR	3947515	Identifier	num		3947305	0					
ANR	3947516	PrimaryExpression	0		3947305	1					
ANR	3947517	CompoundStatement		36:15:1291:1291	3947305	1					
ANR	3947518	Statement	zend_error_noreturn	5639:3:167487:167505	3947305	0	True				
ANR	3947519	Statement	(	5639:22:167506:167506	3947305	1	True				
ANR	3947520	Statement	E_COMPILE_ERROR	5639:23:167507:167521	3947305	2	True				
ANR	3947521	Statement	","	5639:38:167522:167522	3947305	3	True				
ANR	3947522	Statement	"""Namespace declaration statement has to be """	5639:40:167524:167567	3947305	4	True				
ANR	3947523	Statement	"""the very first statement or after any declare call in the script"""	5640:4:167573:167638	3947305	5	True				
ANR	3947524	Statement	)	5640:70:167639:167639	3947305	6	True				
ANR	3947525	ExpressionStatement		5640:71:167640:167640	3947305	7	True				
ANR	3947526	IfStatement	if ( FC ( current_namespace ) )		3947305	6					
ANR	3947527	Condition	FC ( current_namespace )	5644:5:167655:167675	3947305	0	True				
ANR	3947528	CallExpression	FC ( current_namespace )		3947305	0					
ANR	3947529	Callee	FC		3947305	0					
ANR	3947530	Identifier	FC		3947305	0					
ANR	3947531	ArgumentList	current_namespace		3947305	1					
ANR	3947532	Argument	current_namespace		3947305	0					
ANR	3947533	Identifier	current_namespace		3947305	0					
ANR	3947534	CompoundStatement		42:28:1487:1487	3947305	1					
ANR	3947535	ExpressionStatement	zend_string_release ( FC ( current_namespace ) )	5645:2:167682:167724	3947305	0	True				
ANR	3947536	CallExpression	zend_string_release ( FC ( current_namespace ) )		3947305	0					
ANR	3947537	Callee	zend_string_release		3947305	0					
ANR	3947538	Identifier	zend_string_release		3947305	0					
ANR	3947539	ArgumentList	FC ( current_namespace )		3947305	1					
ANR	3947540	Argument	FC ( current_namespace )		3947305	0					
ANR	3947541	CallExpression	FC ( current_namespace )		3947305	0					
ANR	3947542	Callee	FC		3947305	0					
ANR	3947543	Identifier	FC		3947305	0					
ANR	3947544	ArgumentList	current_namespace		3947305	1					
ANR	3947545	Argument	current_namespace		3947305	0					
ANR	3947546	Identifier	current_namespace		3947305	0					
ANR	3947547	IfStatement	if ( name_ast )		3947305	7					
ANR	3947548	Condition	name_ast	5648:5:167735:167742	3947305	0	True				
ANR	3947549	Identifier	name_ast		3947305	0					
ANR	3947550	CompoundStatement		46:15:1554:1554	3947305	1					
ANR	3947551	ExpressionStatement	name = zend_ast_get_str ( name_ast )	5649:2:167749:167782	3947305	0	True				
ANR	3947552	AssignmentExpression	name = zend_ast_get_str ( name_ast )		3947305	0		=			
ANR	3947553	Identifier	name		3947305	0					
ANR	3947554	CallExpression	zend_ast_get_str ( name_ast )		3947305	1					
ANR	3947555	Callee	zend_ast_get_str		3947305	0					
ANR	3947556	Identifier	zend_ast_get_str		3947305	0					
ANR	3947557	ArgumentList	name_ast		3947305	1					
ANR	3947558	Argument	name_ast		3947305	0					
ANR	3947559	Identifier	name_ast		3947305	0					
ANR	3947560	IfStatement	if ( ZEND_FETCH_CLASS_DEFAULT != zend_get_class_fetch_type ( name ) )		3947305	1					
ANR	3947561	Condition	ZEND_FETCH_CLASS_DEFAULT != zend_get_class_fetch_type ( name )	5651:6:167791:167849	3947305	0	True				
ANR	3947562	EqualityExpression	ZEND_FETCH_CLASS_DEFAULT != zend_get_class_fetch_type ( name )		3947305	0		!=			
ANR	3947563	Identifier	ZEND_FETCH_CLASS_DEFAULT		3947305	0					
ANR	3947564	CallExpression	zend_get_class_fetch_type ( name )		3947305	1					
ANR	3947565	Callee	zend_get_class_fetch_type		3947305	0					
ANR	3947566	Identifier	zend_get_class_fetch_type		3947305	0					
ANR	3947567	ArgumentList	name		3947305	1					
ANR	3947568	Argument	name		3947305	0					
ANR	3947569	Identifier	name		3947305	0					
ANR	3947570	CompoundStatement		49:67:1661:1661	3947305	1					
ANR	3947571	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as namespace name"" , ZSTR_VAL ( name ) )"	5652:3:167857:167946	3947305	0	True				
ANR	3947572	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use '%s' as namespace name"" , ZSTR_VAL ( name ) )"		3947305	0					
ANR	3947573	Callee	zend_error_noreturn		3947305	0					
ANR	3947574	Identifier	zend_error_noreturn		3947305	0					
ANR	3947575	ArgumentList	E_COMPILE_ERROR		3947305	1					
ANR	3947576	Argument	E_COMPILE_ERROR		3947305	0					
ANR	3947577	Identifier	E_COMPILE_ERROR		3947305	0					
ANR	3947578	Argument	"""Cannot use '%s' as namespace name"""		3947305	1					
ANR	3947579	PrimaryExpression	"""Cannot use '%s' as namespace name"""		3947305	0					
ANR	3947580	Argument	ZSTR_VAL ( name )		3947305	2					
ANR	3947581	CallExpression	ZSTR_VAL ( name )		3947305	0					
ANR	3947582	Callee	ZSTR_VAL		3947305	0					
ANR	3947583	Identifier	ZSTR_VAL		3947305	0					
ANR	3947584	ArgumentList	name		3947305	1					
ANR	3947585	Argument	name		3947305	0					
ANR	3947586	Identifier	name		3947305	0					
ANR	3947587	ExpressionStatement	FC ( current_namespace ) = zend_string_copy ( name )	5655:2:167955:168001	3947305	2	True				
ANR	3947588	AssignmentExpression	FC ( current_namespace ) = zend_string_copy ( name )		3947305	0		=			
ANR	3947589	CallExpression	FC ( current_namespace )		3947305	0					
ANR	3947590	Callee	FC		3947305	0					
ANR	3947591	Identifier	FC		3947305	0					
ANR	3947592	ArgumentList	current_namespace		3947305	1					
ANR	3947593	Argument	current_namespace		3947305	0					
ANR	3947594	Identifier	current_namespace		3947305	0					
ANR	3947595	CallExpression	zend_string_copy ( name )		3947305	1					
ANR	3947596	Callee	zend_string_copy		3947305	0					
ANR	3947597	Identifier	zend_string_copy		3947305	0					
ANR	3947598	ArgumentList	name		3947305	1					
ANR	3947599	Argument	name		3947305	0					
ANR	3947600	Identifier	name		3947305	0					
ANR	3947601	ElseStatement	else		3947305	0					
ANR	3947602	CompoundStatement		54:8:1820:1820	3947305	0					
ANR	3947603	ExpressionStatement	FC ( current_namespace ) = NULL	5657:2:168015:168043	3947305	0	True				
ANR	3947604	AssignmentExpression	FC ( current_namespace ) = NULL		3947305	0		=			
ANR	3947605	CallExpression	FC ( current_namespace )		3947305	0					
ANR	3947606	Callee	FC		3947305	0					
ANR	3947607	Identifier	FC		3947305	0					
ANR	3947608	ArgumentList	current_namespace		3947305	1					
ANR	3947609	Argument	current_namespace		3947305	0					
ANR	3947610	Identifier	current_namespace		3947305	0					
ANR	3947611	Identifier	NULL		3947305	1					
ANR	3947612	ExpressionStatement	zend_reset_import_tables ( )	5660:1:168050:168076	3947305	8	True				
ANR	3947613	CallExpression	zend_reset_import_tables ( )		3947305	0					
ANR	3947614	Callee	zend_reset_import_tables		3947305	0					
ANR	3947615	Identifier	zend_reset_import_tables		3947305	0					
ANR	3947616	ArgumentList			3947305	1					
ANR	3947617	ExpressionStatement	FC ( in_namespace ) = 1	5662:1:168080:168100	3947305	9	True				
ANR	3947618	AssignmentExpression	FC ( in_namespace ) = 1		3947305	0		=			
ANR	3947619	CallExpression	FC ( in_namespace )		3947305	0					
ANR	3947620	Callee	FC		3947305	0					
ANR	3947621	Identifier	FC		3947305	0					
ANR	3947622	ArgumentList	in_namespace		3947305	1					
ANR	3947623	Argument	in_namespace		3947305	0					
ANR	3947624	Identifier	in_namespace		3947305	0					
ANR	3947625	PrimaryExpression	1		3947305	1					
ANR	3947626	IfStatement	if ( with_bracket )		3947305	10					
ANR	3947627	Condition	with_bracket	5663:5:168107:168118	3947305	0	True				
ANR	3947628	Identifier	with_bracket		3947305	0					
ANR	3947629	CompoundStatement		61:19:1930:1930	3947305	1					
ANR	3947630	ExpressionStatement	FC ( has_bracketed_namespaces ) = 1	5664:2:168125:168157	3947305	0	True				
ANR	3947631	AssignmentExpression	FC ( has_bracketed_namespaces ) = 1		3947305	0		=			
ANR	3947632	CallExpression	FC ( has_bracketed_namespaces )		3947305	0					
ANR	3947633	Callee	FC		3947305	0					
ANR	3947634	Identifier	FC		3947305	0					
ANR	3947635	ArgumentList	has_bracketed_namespaces		3947305	1					
ANR	3947636	Argument	has_bracketed_namespaces		3947305	0					
ANR	3947637	Identifier	has_bracketed_namespaces		3947305	0					
ANR	3947638	PrimaryExpression	1		3947305	1					
ANR	3947639	IfStatement	if ( stmt_ast )		3947305	11					
ANR	3947640	Condition	stmt_ast	5667:5:168168:168175	3947305	0	True				
ANR	3947641	Identifier	stmt_ast		3947305	0					
ANR	3947642	CompoundStatement		65:15:1987:1987	3947305	1					
ANR	3947643	ExpressionStatement	zend_compile_top_stmt ( stmt_ast )	5668:2:168182:168213	3947305	0	True				
ANR	3947644	CallExpression	zend_compile_top_stmt ( stmt_ast )		3947305	0					
ANR	3947645	Callee	zend_compile_top_stmt		3947305	0					
ANR	3947646	Identifier	zend_compile_top_stmt		3947305	0					
ANR	3947647	ArgumentList	stmt_ast		3947305	1					
ANR	3947648	Argument	stmt_ast		3947305	0					
ANR	3947649	Identifier	stmt_ast		3947305	0					
ANR	3947650	ExpressionStatement	zend_end_namespace ( )	5669:2:168217:168237	3947305	1	True				
ANR	3947651	CallExpression	zend_end_namespace ( )		3947305	0					
ANR	3947652	Callee	zend_end_namespace		3947305	0					
ANR	3947653	Identifier	zend_end_namespace		3947305	0					
ANR	3947654	ArgumentList			3947305	1					
ANR	3947655	ReturnType	void		3947305	1					
ANR	3947656	Identifier	zend_compile_namespace		3947305	2					
ANR	3947657	ParameterList	zend_ast * ast		3947305	3					
ANR	3947658	Parameter	zend_ast * ast	5602:28:166165:166177	3947305	0	True				
ANR	3947659	ParameterType	zend_ast *		3947305	0					
ANR	3947660	Identifier	ast		3947305	1					
ANR	3947661	CFGEntryNode	ENTRY		3947305		True				
ANR	3947662	CFGExitNode	EXIT		3947305		True				
ANR	3947663	Symbol	ZEND_FETCH_CLASS_DEFAULT		3947305						
ANR	3947664	Symbol	stmt_ast		3947305						
ANR	3947665	Symbol	ast		3947305						
ANR	3947666	Symbol	in_namespace		3947305						
ANR	3947667	Symbol	E_COMPILE_ERROR		3947305						
ANR	3947668	Symbol	num		3947305						
ANR	3947669	Symbol	* CG		3947305						
ANR	3947670	Symbol	CG ( active_op_array ) -> opcodes [ num - 1 ] . opcode		3947305						
ANR	3947671	Symbol	CG ( active_op_array ) -> opcodes		3947305						
ANR	3947672	Symbol	CG ( active_op_array ) -> last		3947305						
ANR	3947673	Symbol	* * CG		3947305						
ANR	3947674	Symbol	* ast		3947305						
ANR	3947675	Symbol	zend_ast_get_str		3947305						
ANR	3947676	Symbol	* * ast		3947305						
ANR	3947677	Symbol	with_bracket		3947305						
ANR	3947678	Symbol	ZEND_TICKS		3947305						
ANR	3947679	Symbol	zend_get_class_fetch_type		3947305						
ANR	3947680	Symbol	* CG ( active_op_array ) -> opcodes		3947305						
ANR	3947681	Symbol	NULL		3947305						
ANR	3947682	Symbol	CG		3947305						
ANR	3947683	Symbol	active_op_array		3947305						
ANR	3947684	Symbol	has_bracketed_namespaces		3947305						
ANR	3947685	Symbol	zend_string_copy		3947305						
ANR	3947686	Symbol	ZSTR_VAL		3947305						
ANR	3947687	Symbol	* num		3947305						
ANR	3947688	Symbol	ZEND_EXT_STMT		3947305						
ANR	3947689	Symbol	current_namespace		3947305						
ANR	3947690	Symbol	name_ast		3947305						
ANR	3947691	Symbol	name		3947305						
ANR	3947692	Symbol	* ast -> child		3947305						
ANR	3947693	Symbol	ast -> child		3947305						
ANR	3947694	Symbol	FC		3947305						
ANR	3947695	Function	zend_compile_halt_compiler	5674:0:168255:168939							
ANR	3947696	FunctionDef	zend_compile_halt_compiler (zend_ast * ast)		3947695	0					
ANR	3947697	CompoundStatement		5675:0:168312:168939	3947695	0					
ANR	3947698	IdentifierDeclStatement	zend_ast * offset_ast = ast -> child [ 0 ] ;	5676:1:168315:168351	3947695	0	True				
ANR	3947699	IdentifierDecl	* offset_ast = ast -> child [ 0 ]		3947695	0					
ANR	3947700	IdentifierDeclType	zend_ast *		3947695	0					
ANR	3947701	Identifier	offset_ast		3947695	1					
ANR	3947702	AssignmentExpression	* offset_ast = ast -> child [ 0 ]		3947695	2		=			
ANR	3947703	Identifier	offset_ast		3947695	0					
ANR	3947704	ArrayIndexing	ast -> child [ 0 ]		3947695	1					
ANR	3947705	PtrMemberAccess	ast -> child		3947695	0					
ANR	3947706	Identifier	ast		3947695	0					
ANR	3947707	Identifier	child		3947695	1					
ANR	3947708	PrimaryExpression	0		3947695	1					
ANR	3947709	IdentifierDeclStatement	zend_long offset = Z_LVAL_P ( zend_ast_get_zval ( offset_ast ) ) ;	5677:1:168354:168412	3947695	1	True				
ANR	3947710	IdentifierDecl	offset = Z_LVAL_P ( zend_ast_get_zval ( offset_ast ) )		3947695	0					
ANR	3947711	IdentifierDeclType	zend_long		3947695	0					
ANR	3947712	Identifier	offset		3947695	1					
ANR	3947713	AssignmentExpression	offset = Z_LVAL_P ( zend_ast_get_zval ( offset_ast ) )		3947695	2		=			
ANR	3947714	Identifier	offset		3947695	0					
ANR	3947715	CallExpression	Z_LVAL_P ( zend_ast_get_zval ( offset_ast ) )		3947695	1					
ANR	3947716	Callee	Z_LVAL_P		3947695	0					
ANR	3947717	Identifier	Z_LVAL_P		3947695	0					
ANR	3947718	ArgumentList	zend_ast_get_zval ( offset_ast )		3947695	1					
ANR	3947719	Argument	zend_ast_get_zval ( offset_ast )		3947695	0					
ANR	3947720	CallExpression	zend_ast_get_zval ( offset_ast )		3947695	0					
ANR	3947721	Callee	zend_ast_get_zval		3947695	0					
ANR	3947722	Identifier	zend_ast_get_zval		3947695	0					
ANR	3947723	ArgumentList	offset_ast		3947695	1					
ANR	3947724	Argument	offset_ast		3947695	0					
ANR	3947725	Identifier	offset_ast		3947695	0					
ANR	3947726	IdentifierDeclStatement	"zend_string * filename , * name ;"	5679:1:168416:168444	3947695	2	True				
ANR	3947727	IdentifierDecl	* filename		3947695	0					
ANR	3947728	IdentifierDeclType	zend_string *		3947695	0					
ANR	3947729	Identifier	filename		3947695	1					
ANR	3947730	IdentifierDecl	* name		3947695	1					
ANR	3947731	IdentifierDeclType	zend_string *		3947695	0					
ANR	3947732	Identifier	name		3947695	1					
ANR	3947733	IdentifierDeclStatement	"const char const_name [ ] = ""__COMPILER_HALT_OFFSET__"" ;"	5680:1:168447:168499	3947695	3	True				
ANR	3947734	IdentifierDecl	"const_name [ ] = ""__COMPILER_HALT_OFFSET__"""		3947695	0					
ANR	3947735	IdentifierDeclType	const char [ ]		3947695	0					
ANR	3947736	Identifier	const_name		3947695	1					
ANR	3947737	AssignmentExpression	"const_name [ ] = ""__COMPILER_HALT_OFFSET__"""		3947695	2		=			
ANR	3947738	Identifier	const_name		3947695	0					
ANR	3947739	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3947695	1					
ANR	3947740	IfStatement	if ( FC ( has_bracketed_namespaces ) && FC ( in_namespace ) )		3947695	4					
ANR	3947741	Condition	FC ( has_bracketed_namespaces ) && FC ( in_namespace )	5682:5:168507:168554	3947695	0	True				
ANR	3947742	AndExpression	FC ( has_bracketed_namespaces ) && FC ( in_namespace )		3947695	0		&&			
ANR	3947743	CallExpression	FC ( has_bracketed_namespaces )		3947695	0					
ANR	3947744	Callee	FC		3947695	0					
ANR	3947745	Identifier	FC		3947695	0					
ANR	3947746	ArgumentList	has_bracketed_namespaces		3947695	1					
ANR	3947747	Argument	has_bracketed_namespaces		3947695	0					
ANR	3947748	Identifier	has_bracketed_namespaces		3947695	0					
ANR	3947749	CallExpression	FC ( in_namespace )		3947695	1					
ANR	3947750	Callee	FC		3947695	0					
ANR	3947751	Identifier	FC		3947695	0					
ANR	3947752	ArgumentList	in_namespace		3947695	1					
ANR	3947753	Argument	in_namespace		3947695	0					
ANR	3947754	Identifier	in_namespace		3947695	0					
ANR	3947755	CompoundStatement		8:55:244:244	3947695	1					
ANR	3947756	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""__HALT_COMPILER() can only be used from the outermost scope"" )"	5683:2:168561:168663	3947695	0	True				
ANR	3947757	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""__HALT_COMPILER() can only be used from the outermost scope"" )"		3947695	0					
ANR	3947758	Callee	zend_error_noreturn		3947695	0					
ANR	3947759	Identifier	zend_error_noreturn		3947695	0					
ANR	3947760	ArgumentList	E_COMPILE_ERROR		3947695	1					
ANR	3947761	Argument	E_COMPILE_ERROR		3947695	0					
ANR	3947762	Identifier	E_COMPILE_ERROR		3947695	0					
ANR	3947763	Argument	"""__HALT_COMPILER() can only be used from the outermost scope"""		3947695	1					
ANR	3947764	PrimaryExpression	"""__HALT_COMPILER() can only be used from the outermost scope"""		3947695	0					
ANR	3947765	ExpressionStatement	filename = zend_get_compiled_filename ( )	5687:1:168670:168709	3947695	5	True				
ANR	3947766	AssignmentExpression	filename = zend_get_compiled_filename ( )		3947695	0		=			
ANR	3947767	Identifier	filename		3947695	0					
ANR	3947768	CallExpression	zend_get_compiled_filename ( )		3947695	1					
ANR	3947769	Callee	zend_get_compiled_filename		3947695	0					
ANR	3947770	Identifier	zend_get_compiled_filename		3947695	0					
ANR	3947771	ArgumentList			3947695	1					
ANR	3947772	ExpressionStatement	"name = zend_mangle_property_name ( const_name , sizeof ( const_name ) - 1 , ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , 0 )"	5688:1:168712:168825	3947695	6	True				
ANR	3947773	AssignmentExpression	"name = zend_mangle_property_name ( const_name , sizeof ( const_name ) - 1 , ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , 0 )"		3947695	0		=			
ANR	3947774	Identifier	name		3947695	0					
ANR	3947775	CallExpression	"zend_mangle_property_name ( const_name , sizeof ( const_name ) - 1 , ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , 0 )"		3947695	1					
ANR	3947776	Callee	zend_mangle_property_name		3947695	0					
ANR	3947777	Identifier	zend_mangle_property_name		3947695	0					
ANR	3947778	ArgumentList	const_name		3947695	1					
ANR	3947779	Argument	const_name		3947695	0					
ANR	3947780	Identifier	const_name		3947695	0					
ANR	3947781	Argument	sizeof ( const_name ) - 1		3947695	1					
ANR	3947782	AdditiveExpression	sizeof ( const_name ) - 1		3947695	0		-			
ANR	3947783	SizeofExpression	sizeof ( const_name )		3947695	0					
ANR	3947784	Sizeof	sizeof		3947695	0					
ANR	3947785	SizeofOperand	const_name		3947695	1					
ANR	3947786	PrimaryExpression	1		3947695	1					
ANR	3947787	Argument	ZSTR_VAL ( filename )		3947695	2					
ANR	3947788	CallExpression	ZSTR_VAL ( filename )		3947695	0					
ANR	3947789	Callee	ZSTR_VAL		3947695	0					
ANR	3947790	Identifier	ZSTR_VAL		3947695	0					
ANR	3947791	ArgumentList	filename		3947695	1					
ANR	3947792	Argument	filename		3947695	0					
ANR	3947793	Identifier	filename		3947695	0					
ANR	3947794	Argument	ZSTR_LEN ( filename )		3947695	3					
ANR	3947795	CallExpression	ZSTR_LEN ( filename )		3947695	0					
ANR	3947796	Callee	ZSTR_LEN		3947695	0					
ANR	3947797	Identifier	ZSTR_LEN		3947695	0					
ANR	3947798	ArgumentList	filename		3947695	1					
ANR	3947799	Argument	filename		3947695	0					
ANR	3947800	Identifier	filename		3947695	0					
ANR	3947801	Argument	0		3947695	4					
ANR	3947802	PrimaryExpression	0		3947695	0					
ANR	3947803	ExpressionStatement	"zend_register_long_constant ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , offset , CONST_CS , 0 )"	5691:1:168829:168909	3947695	7	True				
ANR	3947804	CallExpression	"zend_register_long_constant ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , offset , CONST_CS , 0 )"		3947695	0					
ANR	3947805	Callee	zend_register_long_constant		3947695	0					
ANR	3947806	Identifier	zend_register_long_constant		3947695	0					
ANR	3947807	ArgumentList	ZSTR_VAL ( name )		3947695	1					
ANR	3947808	Argument	ZSTR_VAL ( name )		3947695	0					
ANR	3947809	CallExpression	ZSTR_VAL ( name )		3947695	0					
ANR	3947810	Callee	ZSTR_VAL		3947695	0					
ANR	3947811	Identifier	ZSTR_VAL		3947695	0					
ANR	3947812	ArgumentList	name		3947695	1					
ANR	3947813	Argument	name		3947695	0					
ANR	3947814	Identifier	name		3947695	0					
ANR	3947815	Argument	ZSTR_LEN ( name )		3947695	1					
ANR	3947816	CallExpression	ZSTR_LEN ( name )		3947695	0					
ANR	3947817	Callee	ZSTR_LEN		3947695	0					
ANR	3947818	Identifier	ZSTR_LEN		3947695	0					
ANR	3947819	ArgumentList	name		3947695	1					
ANR	3947820	Argument	name		3947695	0					
ANR	3947821	Identifier	name		3947695	0					
ANR	3947822	Argument	offset		3947695	2					
ANR	3947823	Identifier	offset		3947695	0					
ANR	3947824	Argument	CONST_CS		3947695	3					
ANR	3947825	Identifier	CONST_CS		3947695	0					
ANR	3947826	Argument	0		3947695	4					
ANR	3947827	PrimaryExpression	0		3947695	0					
ANR	3947828	ExpressionStatement	zend_string_release ( name )	5692:1:168912:168937	3947695	8	True				
ANR	3947829	CallExpression	zend_string_release ( name )		3947695	0					
ANR	3947830	Callee	zend_string_release		3947695	0					
ANR	3947831	Identifier	zend_string_release		3947695	0					
ANR	3947832	ArgumentList	name		3947695	1					
ANR	3947833	Argument	name		3947695	0					
ANR	3947834	Identifier	name		3947695	0					
ANR	3947835	ReturnType	void		3947695	1					
ANR	3947836	Identifier	zend_compile_halt_compiler		3947695	2					
ANR	3947837	ParameterList	zend_ast * ast		3947695	3					
ANR	3947838	Parameter	zend_ast * ast	5674:32:168287:168299	3947695	0	True				
ANR	3947839	ParameterType	zend_ast *		3947695	0					
ANR	3947840	Identifier	ast		3947695	1					
ANR	3947841	CFGEntryNode	ENTRY		3947695		True				
ANR	3947842	CFGExitNode	EXIT		3947695		True				
ANR	3947843	Symbol	CONST_CS		3947695						
ANR	3947844	Symbol	ast		3947695						
ANR	3947845	Symbol	offset		3947695						
ANR	3947846	Symbol	in_namespace		3947695						
ANR	3947847	Symbol	const_name		3947695						
ANR	3947848	Symbol	has_bracketed_namespaces		3947695						
ANR	3947849	Symbol	E_COMPILE_ERROR		3947695						
ANR	3947850	Symbol	zend_mangle_property_name		3947695						
ANR	3947851	Symbol	Z_LVAL_P		3947695						
ANR	3947852	Symbol	ZSTR_VAL		3947695						
ANR	3947853	Symbol	zend_get_compiled_filename		3947695						
ANR	3947854	Symbol	* ast		3947695						
ANR	3947855	Symbol	filename		3947695						
ANR	3947856	Symbol	* * ast		3947695						
ANR	3947857	Symbol	name		3947695						
ANR	3947858	Symbol	ZSTR_LEN		3947695						
ANR	3947859	Symbol	* ast -> child		3947695						
ANR	3947860	Symbol	ast -> child		3947695						
ANR	3947861	Symbol	zend_ast_get_zval		3947695						
ANR	3947862	Symbol	FC		3947695						
ANR	3947863	Symbol	offset_ast		3947695						
ANR	3947864	Function	zend_try_ct_eval_magic_const	5696:0:168952:171183							
ANR	3947865	FunctionDef	"zend_try_ct_eval_magic_const (zval * zv , zend_ast * ast)"		3947864	0					
ANR	3947866	CompoundStatement		5697:0:169033:171183	3947864	0					
ANR	3947867	IdentifierDeclStatement	zend_op_array * op_array = CG ( active_op_array ) ;	5698:1:169036:169081	3947864	0	True				
ANR	3947868	IdentifierDecl	* op_array = CG ( active_op_array )		3947864	0					
ANR	3947869	IdentifierDeclType	zend_op_array *		3947864	0					
ANR	3947870	Identifier	op_array		3947864	1					
ANR	3947871	AssignmentExpression	* op_array = CG ( active_op_array )		3947864	2		=			
ANR	3947872	Identifier	op_array		3947864	0					
ANR	3947873	CallExpression	CG ( active_op_array )		3947864	1					
ANR	3947874	Callee	CG		3947864	0					
ANR	3947875	Identifier	CG		3947864	0					
ANR	3947876	ArgumentList	active_op_array		3947864	1					
ANR	3947877	Argument	active_op_array		3947864	0					
ANR	3947878	Identifier	active_op_array		3947864	0					
ANR	3947879	IdentifierDeclStatement	zend_class_entry * ce = CG ( active_class_entry ) ;	5699:1:169084:169129	3947864	1	True				
ANR	3947880	IdentifierDecl	* ce = CG ( active_class_entry )		3947864	0					
ANR	3947881	IdentifierDeclType	zend_class_entry *		3947864	0					
ANR	3947882	Identifier	ce		3947864	1					
ANR	3947883	AssignmentExpression	* ce = CG ( active_class_entry )		3947864	2		=			
ANR	3947884	Identifier	ce		3947864	0					
ANR	3947885	CallExpression	CG ( active_class_entry )		3947864	1					
ANR	3947886	Callee	CG		3947864	0					
ANR	3947887	Identifier	CG		3947864	0					
ANR	3947888	ArgumentList	active_class_entry		3947864	1					
ANR	3947889	Argument	active_class_entry		3947864	0					
ANR	3947890	Identifier	active_class_entry		3947864	0					
ANR	3947891	SwitchStatement	switch ( ast -> attr )		3947864	2					
ANR	3947892	Condition	ast -> attr	5701:9:169141:169149	3947864	0	True				
ANR	3947893	PtrMemberAccess	ast -> attr		3947864	0					
ANR	3947894	Identifier	ast		3947864	0					
ANR	3947895	Identifier	attr		3947864	1					
ANR	3947896	CompoundStatement		5:20:118:118	3947864	1					
ANR	3947897	Label	case T_LINE :	5702:2:169156:169167	3947864	0	True				
ANR	3947898	Identifier	T_LINE		3947864	0					
ANR	3947899	ExpressionStatement	"ZVAL_LONG ( zv , ast -> lineno )"	5703:3:169172:169198	3947864	1	True				
ANR	3947900	CallExpression	"ZVAL_LONG ( zv , ast -> lineno )"		3947864	0					
ANR	3947901	Callee	ZVAL_LONG		3947864	0					
ANR	3947902	Identifier	ZVAL_LONG		3947864	0					
ANR	3947903	ArgumentList	zv		3947864	1					
ANR	3947904	Argument	zv		3947864	0					
ANR	3947905	Identifier	zv		3947864	0					
ANR	3947906	Argument	ast -> lineno		3947864	1					
ANR	3947907	PtrMemberAccess	ast -> lineno		3947864	0					
ANR	3947908	Identifier	ast		3947864	0					
ANR	3947909	Identifier	lineno		3947864	1					
ANR	3947910	BreakStatement	break ;	5704:3:169203:169208	3947864	2	True				
ANR	3947911	Label	case T_FILE :	5705:2:169212:169223	3947864	3	True				
ANR	3947912	Identifier	T_FILE		3947864	0					
ANR	3947913	ExpressionStatement	"ZVAL_STR_COPY ( zv , CG ( compiled_filename ) )"	5706:3:169228:169268	3947864	4	True				
ANR	3947914	CallExpression	"ZVAL_STR_COPY ( zv , CG ( compiled_filename ) )"		3947864	0					
ANR	3947915	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3947916	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3947917	ArgumentList	zv		3947864	1					
ANR	3947918	Argument	zv		3947864	0					
ANR	3947919	Identifier	zv		3947864	0					
ANR	3947920	Argument	CG ( compiled_filename )		3947864	1					
ANR	3947921	CallExpression	CG ( compiled_filename )		3947864	0					
ANR	3947922	Callee	CG		3947864	0					
ANR	3947923	Identifier	CG		3947864	0					
ANR	3947924	ArgumentList	compiled_filename		3947864	1					
ANR	3947925	Argument	compiled_filename		3947864	0					
ANR	3947926	Identifier	compiled_filename		3947864	0					
ANR	3947927	BreakStatement	break ;	5707:3:169273:169278	3947864	5	True				
ANR	3947928	Label	case T_DIR :	5708:2:169282:169292	3947864	6	True				
ANR	3947929	Identifier	T_DIR		3947864	0					
ANR	3947930	CompoundStatement		15:3:317:399	3947864	7					
ANR	3947931	IdentifierDeclStatement	zend_string * filename = CG ( compiled_filename ) ;	5710:3:169301:169346	3947864	0	True				
ANR	3947932	IdentifierDecl	* filename = CG ( compiled_filename )		3947864	0					
ANR	3947933	IdentifierDeclType	zend_string *		3947864	0					
ANR	3947934	Identifier	filename		3947864	1					
ANR	3947935	AssignmentExpression	* filename = CG ( compiled_filename )		3947864	2		=			
ANR	3947936	Identifier	filename		3947864	0					
ANR	3947937	CallExpression	CG ( compiled_filename )		3947864	1					
ANR	3947938	Callee	CG		3947864	0					
ANR	3947939	Identifier	CG		3947864	0					
ANR	3947940	ArgumentList	compiled_filename		3947864	1					
ANR	3947941	Argument	compiled_filename		3947864	0					
ANR	3947942	Identifier	compiled_filename		3947864	0					
ANR	3947943	IdentifierDeclStatement	"zend_string * dirname = zend_string_init ( ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , 0 ) ;"	5711:3:169351:169433	3947864	1	True				
ANR	3947944	IdentifierDecl	"* dirname = zend_string_init ( ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , 0 )"		3947864	0					
ANR	3947945	IdentifierDeclType	zend_string *		3947864	0					
ANR	3947946	Identifier	dirname		3947864	1					
ANR	3947947	AssignmentExpression	"* dirname = zend_string_init ( ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , 0 )"		3947864	2		=			
ANR	3947948	Identifier	dirname		3947864	0					
ANR	3947949	CallExpression	"zend_string_init ( ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , 0 )"		3947864	1					
ANR	3947950	Callee	zend_string_init		3947864	0					
ANR	3947951	Identifier	zend_string_init		3947864	0					
ANR	3947952	ArgumentList	ZSTR_VAL ( filename )		3947864	1					
ANR	3947953	Argument	ZSTR_VAL ( filename )		3947864	0					
ANR	3947954	CallExpression	ZSTR_VAL ( filename )		3947864	0					
ANR	3947955	Callee	ZSTR_VAL		3947864	0					
ANR	3947956	Identifier	ZSTR_VAL		3947864	0					
ANR	3947957	ArgumentList	filename		3947864	1					
ANR	3947958	Argument	filename		3947864	0					
ANR	3947959	Identifier	filename		3947864	0					
ANR	3947960	Argument	ZSTR_LEN ( filename )		3947864	1					
ANR	3947961	CallExpression	ZSTR_LEN ( filename )		3947864	0					
ANR	3947962	Callee	ZSTR_LEN		3947864	0					
ANR	3947963	Identifier	ZSTR_LEN		3947864	0					
ANR	3947964	ArgumentList	filename		3947864	1					
ANR	3947965	Argument	filename		3947864	0					
ANR	3947966	Identifier	filename		3947864	0					
ANR	3947967	Argument	0		3947864	2					
ANR	3947968	PrimaryExpression	0		3947864	0					
ANR	3947969	ExpressionStatement	"zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"	5712:3:169438:169488	3947864	2	True				
ANR	3947970	CallExpression	"zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"		3947864	0					
ANR	3947971	Callee	zend_dirname		3947864	0					
ANR	3947972	Identifier	zend_dirname		3947864	0					
ANR	3947973	ArgumentList	ZSTR_VAL ( dirname )		3947864	1					
ANR	3947974	Argument	ZSTR_VAL ( dirname )		3947864	0					
ANR	3947975	CallExpression	ZSTR_VAL ( dirname )		3947864	0					
ANR	3947976	Callee	ZSTR_VAL		3947864	0					
ANR	3947977	Identifier	ZSTR_VAL		3947864	0					
ANR	3947978	ArgumentList	dirname		3947864	1					
ANR	3947979	Argument	dirname		3947864	0					
ANR	3947980	Identifier	dirname		3947864	0					
ANR	3947981	Argument	ZSTR_LEN ( dirname )		3947864	1					
ANR	3947982	CallExpression	ZSTR_LEN ( dirname )		3947864	0					
ANR	3947983	Callee	ZSTR_LEN		3947864	0					
ANR	3947984	Identifier	ZSTR_LEN		3947864	0					
ANR	3947985	ArgumentList	dirname		3947864	1					
ANR	3947986	Argument	dirname		3947864	0					
ANR	3947987	Identifier	dirname		3947864	0					
ANR	3947988	IfStatement	"if ( strcmp ( ZSTR_VAL ( dirname ) , ""."" ) == 0 )"		3947864	3					
ANR	3947989	Condition	"strcmp ( ZSTR_VAL ( dirname ) , ""."" ) == 0"	5714:7:169498:169532	3947864	0	True				
ANR	3947990	EqualityExpression	"strcmp ( ZSTR_VAL ( dirname ) , ""."" ) == 0"		3947864	0		==			
ANR	3947991	CallExpression	"strcmp ( ZSTR_VAL ( dirname ) , ""."" )"		3947864	0					
ANR	3947992	Callee	strcmp		3947864	0					
ANR	3947993	Identifier	strcmp		3947864	0					
ANR	3947994	ArgumentList	ZSTR_VAL ( dirname )		3947864	1					
ANR	3947995	Argument	ZSTR_VAL ( dirname )		3947864	0					
ANR	3947996	CallExpression	ZSTR_VAL ( dirname )		3947864	0					
ANR	3947997	Callee	ZSTR_VAL		3947864	0					
ANR	3947998	Identifier	ZSTR_VAL		3947864	0					
ANR	3947999	ArgumentList	dirname		3947864	1					
ANR	3948000	Argument	dirname		3947864	0					
ANR	3948001	Identifier	dirname		3947864	0					
ANR	3948002	Argument	"""."""		3947864	1					
ANR	3948003	PrimaryExpression	"""."""		3947864	0					
ANR	3948004	PrimaryExpression	0		3947864	1					
ANR	3948005	CompoundStatement		18:44:501:501	3947864	1					
ANR	3948006	ExpressionStatement	"dirname = zend_string_extend ( dirname , MAXPATHLEN , 0 )"	5715:4:169541:169593	3947864	0	True				
ANR	3948007	AssignmentExpression	"dirname = zend_string_extend ( dirname , MAXPATHLEN , 0 )"		3947864	0		=			
ANR	3948008	Identifier	dirname		3947864	0					
ANR	3948009	CallExpression	"zend_string_extend ( dirname , MAXPATHLEN , 0 )"		3947864	1					
ANR	3948010	Callee	zend_string_extend		3947864	0					
ANR	3948011	Identifier	zend_string_extend		3947864	0					
ANR	3948012	ArgumentList	dirname		3947864	1					
ANR	3948013	Argument	dirname		3947864	0					
ANR	3948014	Identifier	dirname		3947864	0					
ANR	3948015	Argument	MAXPATHLEN		3947864	1					
ANR	3948016	Identifier	MAXPATHLEN		3947864	0					
ANR	3948017	Argument	0		3947864	2					
ANR	3948018	PrimaryExpression	0		3947864	0					
ANR	3948019	ExpressionStatement	"ZEND_IGNORE_VALUE ( VCWD_GETCWD ( ZSTR_VAL ( dirname ) , MAXPATHLEN ) )"	5717:4:169615:169676	3947864	1	True				
ANR	3948020	CallExpression	"ZEND_IGNORE_VALUE ( VCWD_GETCWD ( ZSTR_VAL ( dirname ) , MAXPATHLEN ) )"		3947864	0					
ANR	3948021	Callee	ZEND_IGNORE_VALUE		3947864	0					
ANR	3948022	Identifier	ZEND_IGNORE_VALUE		3947864	0					
ANR	3948023	ArgumentList	"VCWD_GETCWD ( ZSTR_VAL ( dirname ) , MAXPATHLEN )"		3947864	1					
ANR	3948024	Argument	"VCWD_GETCWD ( ZSTR_VAL ( dirname ) , MAXPATHLEN )"		3947864	0					
ANR	3948025	CallExpression	"VCWD_GETCWD ( ZSTR_VAL ( dirname ) , MAXPATHLEN )"		3947864	0					
ANR	3948026	Callee	VCWD_GETCWD		3947864	0					
ANR	3948027	Identifier	VCWD_GETCWD		3947864	0					
ANR	3948028	ArgumentList	ZSTR_VAL ( dirname )		3947864	1					
ANR	3948029	Argument	ZSTR_VAL ( dirname )		3947864	0					
ANR	3948030	CallExpression	ZSTR_VAL ( dirname )		3947864	0					
ANR	3948031	Callee	ZSTR_VAL		3947864	0					
ANR	3948032	Identifier	ZSTR_VAL		3947864	0					
ANR	3948033	ArgumentList	dirname		3947864	1					
ANR	3948034	Argument	dirname		3947864	0					
ANR	3948035	Identifier	dirname		3947864	0					
ANR	3948036	Argument	MAXPATHLEN		3947864	1					
ANR	3948037	Identifier	MAXPATHLEN		3947864	0					
ANR	3948038	ExpressionStatement	ZSTR_LEN ( dirname ) = strlen ( ZSTR_VAL ( dirname ) )	5723:3:169765:169810	3947864	4	True				
ANR	3948039	AssignmentExpression	ZSTR_LEN ( dirname ) = strlen ( ZSTR_VAL ( dirname ) )		3947864	0		=			
ANR	3948040	CallExpression	ZSTR_LEN ( dirname )		3947864	0					
ANR	3948041	Callee	ZSTR_LEN		3947864	0					
ANR	3948042	Identifier	ZSTR_LEN		3947864	0					
ANR	3948043	ArgumentList	dirname		3947864	1					
ANR	3948044	Argument	dirname		3947864	0					
ANR	3948045	Identifier	dirname		3947864	0					
ANR	3948046	CallExpression	strlen ( ZSTR_VAL ( dirname ) )		3947864	1					
ANR	3948047	Callee	strlen		3947864	0					
ANR	3948048	Identifier	strlen		3947864	0					
ANR	3948049	ArgumentList	ZSTR_VAL ( dirname )		3947864	1					
ANR	3948050	Argument	ZSTR_VAL ( dirname )		3947864	0					
ANR	3948051	CallExpression	ZSTR_VAL ( dirname )		3947864	0					
ANR	3948052	Callee	ZSTR_VAL		3947864	0					
ANR	3948053	Identifier	ZSTR_VAL		3947864	0					
ANR	3948054	ArgumentList	dirname		3947864	1					
ANR	3948055	Argument	dirname		3947864	0					
ANR	3948056	Identifier	dirname		3947864	0					
ANR	3948057	ExpressionStatement	"ZVAL_STR ( zv , dirname )"	5724:3:169815:169836	3947864	5	True				
ANR	3948058	CallExpression	"ZVAL_STR ( zv , dirname )"		3947864	0					
ANR	3948059	Callee	ZVAL_STR		3947864	0					
ANR	3948060	Identifier	ZVAL_STR		3947864	0					
ANR	3948061	ArgumentList	zv		3947864	1					
ANR	3948062	Argument	zv		3947864	0					
ANR	3948063	Identifier	zv		3947864	0					
ANR	3948064	Argument	dirname		3947864	1					
ANR	3948065	Identifier	dirname		3947864	0					
ANR	3948066	BreakStatement	break ;	5725:3:169841:169846	3947864	6	True				
ANR	3948067	Label	case T_FUNC_C :	5727:2:169854:169867	3947864	8	True				
ANR	3948068	Identifier	T_FUNC_C		3947864	0					
ANR	3948069	IfStatement	if ( op_array && op_array -> function_name )		3947864	9					
ANR	3948070	Condition	op_array && op_array -> function_name	5728:7:169876:169910	3947864	0	True				
ANR	3948071	AndExpression	op_array && op_array -> function_name		3947864	0		&&			
ANR	3948072	Identifier	op_array		3947864	0					
ANR	3948073	PtrMemberAccess	op_array -> function_name		3947864	1					
ANR	3948074	Identifier	op_array		3947864	0					
ANR	3948075	Identifier	function_name		3947864	1					
ANR	3948076	CompoundStatement		32:44:879:879	3947864	1					
ANR	3948077	ExpressionStatement	"ZVAL_STR_COPY ( zv , op_array -> function_name )"	5729:4:169919:169961	3947864	0	True				
ANR	3948078	CallExpression	"ZVAL_STR_COPY ( zv , op_array -> function_name )"		3947864	0					
ANR	3948079	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3948080	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3948081	ArgumentList	zv		3947864	1					
ANR	3948082	Argument	zv		3947864	0					
ANR	3948083	Identifier	zv		3947864	0					
ANR	3948084	Argument	op_array -> function_name		3947864	1					
ANR	3948085	PtrMemberAccess	op_array -> function_name		3947864	0					
ANR	3948086	Identifier	op_array		3947864	0					
ANR	3948087	Identifier	function_name		3947864	1					
ANR	3948088	ElseStatement	else		3947864	0					
ANR	3948089	CompoundStatement		34:10:939:939	3947864	0					
ANR	3948090	ExpressionStatement	ZVAL_EMPTY_STRING ( zv )	5731:4:169979:170000	3947864	0	True				
ANR	3948091	CallExpression	ZVAL_EMPTY_STRING ( zv )		3947864	0					
ANR	3948092	Callee	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948093	Identifier	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948094	ArgumentList	zv		3947864	1					
ANR	3948095	Argument	zv		3947864	0					
ANR	3948096	Identifier	zv		3947864	0					
ANR	3948097	BreakStatement	break ;	5733:3:170010:170015	3947864	10	True				
ANR	3948098	Label	case T_METHOD_C :	5734:2:170019:170034	3947864	11	True				
ANR	3948099	Identifier	T_METHOD_C		3947864	0					
ANR	3948100	IfStatement	if ( ( op_array && ! op_array -> scope && op_array -> function_name ) || ( op_array -> fn_flags & ZEND_ACC_CLOSURE ) )		3947864	12					
ANR	3948101	Condition	( op_array && ! op_array -> scope && op_array -> function_name ) || ( op_array -> fn_flags & ZEND_ACC_CLOSURE )	5735:7:170043:170142	3947864	0	True				
ANR	3948102	OrExpression	( op_array && ! op_array -> scope && op_array -> function_name ) || ( op_array -> fn_flags & ZEND_ACC_CLOSURE )		3947864	0		||			
ANR	3948103	AndExpression	op_array && ! op_array -> scope && op_array -> function_name		3947864	0		&&			
ANR	3948104	Identifier	op_array		3947864	0					
ANR	3948105	AndExpression	! op_array -> scope && op_array -> function_name		3947864	1		&&			
ANR	3948106	UnaryOperationExpression	! op_array -> scope		3947864	0					
ANR	3948107	UnaryOperator	!		3947864	0					
ANR	3948108	PtrMemberAccess	op_array -> scope		3947864	1					
ANR	3948109	Identifier	op_array		3947864	0					
ANR	3948110	Identifier	scope		3947864	1					
ANR	3948111	PtrMemberAccess	op_array -> function_name		3947864	1					
ANR	3948112	Identifier	op_array		3947864	0					
ANR	3948113	Identifier	function_name		3947864	1					
ANR	3948114	BitAndExpression	op_array -> fn_flags & ZEND_ACC_CLOSURE		3947864	1		&			
ANR	3948115	PtrMemberAccess	op_array -> fn_flags		3947864	0					
ANR	3948116	Identifier	op_array		3947864	0					
ANR	3948117	Identifier	fn_flags		3947864	1					
ANR	3948118	Identifier	ZEND_ACC_CLOSURE		3947864	1					
ANR	3948119	CompoundStatement		39:109:1111:1111	3947864	1					
ANR	3948120	ExpressionStatement	"ZVAL_STR_COPY ( zv , op_array -> function_name )"	5736:4:170151:170193	3947864	0	True				
ANR	3948121	CallExpression	"ZVAL_STR_COPY ( zv , op_array -> function_name )"		3947864	0					
ANR	3948122	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3948123	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3948124	ArgumentList	zv		3947864	1					
ANR	3948125	Argument	zv		3947864	0					
ANR	3948126	Identifier	zv		3947864	0					
ANR	3948127	Argument	op_array -> function_name		3947864	1					
ANR	3948128	PtrMemberAccess	op_array -> function_name		3947864	0					
ANR	3948129	Identifier	op_array		3947864	0					
ANR	3948130	Identifier	function_name		3947864	1					
ANR	3948131	ElseStatement	else		3947864	0					
ANR	3948132	IfStatement	if ( ce )		3947864	0					
ANR	3948133	Condition	ce	5737:14:170209:170210	3947864	0	True				
ANR	3948134	Identifier	ce		3947864	0					
ANR	3948135	CompoundStatement		41:18:1179:1179	3947864	1					
ANR	3948136	IfStatement	if ( op_array && op_array -> function_name )		3947864	0					
ANR	3948137	Condition	op_array && op_array -> function_name	5738:8:170223:170257	3947864	0	True				
ANR	3948138	AndExpression	op_array && op_array -> function_name		3947864	0		&&			
ANR	3948139	Identifier	op_array		3947864	0					
ANR	3948140	PtrMemberAccess	op_array -> function_name		3947864	1					
ANR	3948141	Identifier	op_array		3947864	0					
ANR	3948142	Identifier	function_name		3947864	1					
ANR	3948143	CompoundStatement		42:45:1226:1226	3947864	1					
ANR	3948144	ExpressionStatement	"ZVAL_NEW_STR ( zv , zend_concat3 ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ""::"" , 2 , ZSTR_VAL ( op_array -> function_name ) , ZSTR_LEN ( op_array -> function_name ) ) )"	5739:5:170267:170422	3947864	0	True				
ANR	3948145	CallExpression	"ZVAL_NEW_STR ( zv , zend_concat3 ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ""::"" , 2 , ZSTR_VAL ( op_array -> function_name ) , ZSTR_LEN ( op_array -> function_name ) ) )"		3947864	0					
ANR	3948146	Callee	ZVAL_NEW_STR		3947864	0					
ANR	3948147	Identifier	ZVAL_NEW_STR		3947864	0					
ANR	3948148	ArgumentList	zv		3947864	1					
ANR	3948149	Argument	zv		3947864	0					
ANR	3948150	Identifier	zv		3947864	0					
ANR	3948151	Argument	"zend_concat3 ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ""::"" , 2 , ZSTR_VAL ( op_array -> function_name ) , ZSTR_LEN ( op_array -> function_name ) )"		3947864	1					
ANR	3948152	CallExpression	"zend_concat3 ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ""::"" , 2 , ZSTR_VAL ( op_array -> function_name ) , ZSTR_LEN ( op_array -> function_name ) )"		3947864	0					
ANR	3948153	Callee	zend_concat3		3947864	0					
ANR	3948154	Identifier	zend_concat3		3947864	0					
ANR	3948155	ArgumentList	ZSTR_VAL ( ce -> name )		3947864	1					
ANR	3948156	Argument	ZSTR_VAL ( ce -> name )		3947864	0					
ANR	3948157	CallExpression	ZSTR_VAL ( ce -> name )		3947864	0					
ANR	3948158	Callee	ZSTR_VAL		3947864	0					
ANR	3948159	Identifier	ZSTR_VAL		3947864	0					
ANR	3948160	ArgumentList	ce -> name		3947864	1					
ANR	3948161	Argument	ce -> name		3947864	0					
ANR	3948162	PtrMemberAccess	ce -> name		3947864	0					
ANR	3948163	Identifier	ce		3947864	0					
ANR	3948164	Identifier	name		3947864	1					
ANR	3948165	Argument	ZSTR_LEN ( ce -> name )		3947864	1					
ANR	3948166	CallExpression	ZSTR_LEN ( ce -> name )		3947864	0					
ANR	3948167	Callee	ZSTR_LEN		3947864	0					
ANR	3948168	Identifier	ZSTR_LEN		3947864	0					
ANR	3948169	ArgumentList	ce -> name		3947864	1					
ANR	3948170	Argument	ce -> name		3947864	0					
ANR	3948171	PtrMemberAccess	ce -> name		3947864	0					
ANR	3948172	Identifier	ce		3947864	0					
ANR	3948173	Identifier	name		3947864	1					
ANR	3948174	Argument	"""::"""		3947864	2					
ANR	3948175	PrimaryExpression	"""::"""		3947864	0					
ANR	3948176	Argument	2		3947864	3					
ANR	3948177	PrimaryExpression	2		3947864	0					
ANR	3948178	Argument	ZSTR_VAL ( op_array -> function_name )		3947864	4					
ANR	3948179	CallExpression	ZSTR_VAL ( op_array -> function_name )		3947864	0					
ANR	3948180	Callee	ZSTR_VAL		3947864	0					
ANR	3948181	Identifier	ZSTR_VAL		3947864	0					
ANR	3948182	ArgumentList	op_array -> function_name		3947864	1					
ANR	3948183	Argument	op_array -> function_name		3947864	0					
ANR	3948184	PtrMemberAccess	op_array -> function_name		3947864	0					
ANR	3948185	Identifier	op_array		3947864	0					
ANR	3948186	Identifier	function_name		3947864	1					
ANR	3948187	Argument	ZSTR_LEN ( op_array -> function_name )		3947864	5					
ANR	3948188	CallExpression	ZSTR_LEN ( op_array -> function_name )		3947864	0					
ANR	3948189	Callee	ZSTR_LEN		3947864	0					
ANR	3948190	Identifier	ZSTR_LEN		3947864	0					
ANR	3948191	ArgumentList	op_array -> function_name		3947864	1					
ANR	3948192	Argument	op_array -> function_name		3947864	0					
ANR	3948193	PtrMemberAccess	op_array -> function_name		3947864	0					
ANR	3948194	Identifier	op_array		3947864	0					
ANR	3948195	Identifier	function_name		3947864	1					
ANR	3948196	ElseStatement	else		3947864	0					
ANR	3948197	CompoundStatement		45:11:1401:1401	3947864	0					
ANR	3948198	ExpressionStatement	"ZVAL_STR_COPY ( zv , ce -> name )"	5742:5:170442:170469	3947864	0	True				
ANR	3948199	CallExpression	"ZVAL_STR_COPY ( zv , ce -> name )"		3947864	0					
ANR	3948200	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3948201	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3948202	ArgumentList	zv		3947864	1					
ANR	3948203	Argument	zv		3947864	0					
ANR	3948204	Identifier	zv		3947864	0					
ANR	3948205	Argument	ce -> name		3947864	1					
ANR	3948206	PtrMemberAccess	ce -> name		3947864	0					
ANR	3948207	Identifier	ce		3947864	0					
ANR	3948208	Identifier	name		3947864	1					
ANR	3948209	ElseStatement	else		3947864	0					
ANR	3948210	IfStatement	if ( op_array && op_array -> function_name )		3947864	0					
ANR	3948211	Condition	op_array && op_array -> function_name	5744:14:170491:170525	3947864	0	True				
ANR	3948212	AndExpression	op_array && op_array -> function_name		3947864	0		&&			
ANR	3948213	Identifier	op_array		3947864	0					
ANR	3948214	PtrMemberAccess	op_array -> function_name		3947864	1					
ANR	3948215	Identifier	op_array		3947864	0					
ANR	3948216	Identifier	function_name		3947864	1					
ANR	3948217	CompoundStatement		48:51:1494:1494	3947864	1					
ANR	3948218	ExpressionStatement	"ZVAL_STR_COPY ( zv , op_array -> function_name )"	5745:4:170534:170576	3947864	0	True				
ANR	3948219	CallExpression	"ZVAL_STR_COPY ( zv , op_array -> function_name )"		3947864	0					
ANR	3948220	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3948221	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3948222	ArgumentList	zv		3947864	1					
ANR	3948223	Argument	zv		3947864	0					
ANR	3948224	Identifier	zv		3947864	0					
ANR	3948225	Argument	op_array -> function_name		3947864	1					
ANR	3948226	PtrMemberAccess	op_array -> function_name		3947864	0					
ANR	3948227	Identifier	op_array		3947864	0					
ANR	3948228	Identifier	function_name		3947864	1					
ANR	3948229	ElseStatement	else		3947864	0					
ANR	3948230	CompoundStatement		50:10:1554:1554	3947864	0					
ANR	3948231	ExpressionStatement	ZVAL_EMPTY_STRING ( zv )	5747:4:170594:170615	3947864	0	True				
ANR	3948232	CallExpression	ZVAL_EMPTY_STRING ( zv )		3947864	0					
ANR	3948233	Callee	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948234	Identifier	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948235	ArgumentList	zv		3947864	1					
ANR	3948236	Argument	zv		3947864	0					
ANR	3948237	Identifier	zv		3947864	0					
ANR	3948238	BreakStatement	break ;	5749:3:170625:170630	3947864	13	True				
ANR	3948239	Label	case T_CLASS_C :	5750:2:170634:170648	3947864	14	True				
ANR	3948240	Identifier	T_CLASS_C		3947864	0					
ANR	3948241	IfStatement	if ( ce )		3947864	15					
ANR	3948242	Condition	ce	5751:7:170657:170658	3947864	0	True				
ANR	3948243	Identifier	ce		3947864	0					
ANR	3948244	CompoundStatement		55:11:1627:1627	3947864	1					
ANR	3948245	IfStatement	if ( ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0 )		3947864	0					
ANR	3948246	Condition	( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0	5752:8:170671:170706	3947864	0	True				
ANR	3948247	EqualityExpression	( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0		3947864	0		!=			
ANR	3948248	BitAndExpression	ce -> ce_flags & ZEND_ACC_TRAIT		3947864	0		&			
ANR	3948249	PtrMemberAccess	ce -> ce_flags		3947864	0					
ANR	3948250	Identifier	ce		3947864	0					
ANR	3948251	Identifier	ce_flags		3947864	1					
ANR	3948252	Identifier	ZEND_ACC_TRAIT		3947864	1					
ANR	3948253	PrimaryExpression	0		3947864	1					
ANR	3948254	CompoundStatement		56:46:1675:1675	3947864	1					
ANR	3948255	ReturnStatement	return 0 ;	5753:5:170716:170724	3947864	0	True				
ANR	3948256	PrimaryExpression	0		3947864	0					
ANR	3948257	ElseStatement	else		3947864	0					
ANR	3948258	CompoundStatement		58:11:1703:1703	3947864	0					
ANR	3948259	ExpressionStatement	"ZVAL_STR_COPY ( zv , ce -> name )"	5755:5:170744:170771	3947864	0	True				
ANR	3948260	CallExpression	"ZVAL_STR_COPY ( zv , ce -> name )"		3947864	0					
ANR	3948261	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3948262	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3948263	ArgumentList	zv		3947864	1					
ANR	3948264	Argument	zv		3947864	0					
ANR	3948265	Identifier	zv		3947864	0					
ANR	3948266	Argument	ce -> name		3947864	1					
ANR	3948267	PtrMemberAccess	ce -> name		3947864	0					
ANR	3948268	Identifier	ce		3947864	0					
ANR	3948269	Identifier	name		3947864	1					
ANR	3948270	ElseStatement	else		3947864	0					
ANR	3948271	CompoundStatement		61:10:1755:1755	3947864	0					
ANR	3948272	ExpressionStatement	ZVAL_EMPTY_STRING ( zv )	5758:4:170795:170816	3947864	0	True				
ANR	3948273	CallExpression	ZVAL_EMPTY_STRING ( zv )		3947864	0					
ANR	3948274	Callee	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948275	Identifier	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948276	ArgumentList	zv		3947864	1					
ANR	3948277	Argument	zv		3947864	0					
ANR	3948278	Identifier	zv		3947864	0					
ANR	3948279	BreakStatement	break ;	5760:3:170826:170831	3947864	16	True				
ANR	3948280	Label	case T_TRAIT_C :	5761:2:170835:170849	3947864	17	True				
ANR	3948281	Identifier	T_TRAIT_C		3947864	0					
ANR	3948282	IfStatement	if ( ce && ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0 )		3947864	18					
ANR	3948283	Condition	ce && ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0	5762:7:170858:170899	3947864	0	True				
ANR	3948284	AndExpression	ce && ( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0		3947864	0		&&			
ANR	3948285	Identifier	ce		3947864	0					
ANR	3948286	EqualityExpression	( ce -> ce_flags & ZEND_ACC_TRAIT ) != 0		3947864	1		!=			
ANR	3948287	BitAndExpression	ce -> ce_flags & ZEND_ACC_TRAIT		3947864	0		&			
ANR	3948288	PtrMemberAccess	ce -> ce_flags		3947864	0					
ANR	3948289	Identifier	ce		3947864	0					
ANR	3948290	Identifier	ce_flags		3947864	1					
ANR	3948291	Identifier	ZEND_ACC_TRAIT		3947864	1					
ANR	3948292	PrimaryExpression	0		3947864	1					
ANR	3948293	CompoundStatement		66:51:1868:1868	3947864	1					
ANR	3948294	ExpressionStatement	"ZVAL_STR_COPY ( zv , ce -> name )"	5763:4:170908:170935	3947864	0	True				
ANR	3948295	CallExpression	"ZVAL_STR_COPY ( zv , ce -> name )"		3947864	0					
ANR	3948296	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3948297	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3948298	ArgumentList	zv		3947864	1					
ANR	3948299	Argument	zv		3947864	0					
ANR	3948300	Identifier	zv		3947864	0					
ANR	3948301	Argument	ce -> name		3947864	1					
ANR	3948302	PtrMemberAccess	ce -> name		3947864	0					
ANR	3948303	Identifier	ce		3947864	0					
ANR	3948304	Identifier	name		3947864	1					
ANR	3948305	ElseStatement	else		3947864	0					
ANR	3948306	CompoundStatement		68:10:1913:1913	3947864	0					
ANR	3948307	ExpressionStatement	ZVAL_EMPTY_STRING ( zv )	5765:4:170953:170974	3947864	0	True				
ANR	3948308	CallExpression	ZVAL_EMPTY_STRING ( zv )		3947864	0					
ANR	3948309	Callee	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948310	Identifier	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948311	ArgumentList	zv		3947864	1					
ANR	3948312	Argument	zv		3947864	0					
ANR	3948313	Identifier	zv		3947864	0					
ANR	3948314	BreakStatement	break ;	5767:3:170984:170989	3947864	19	True				
ANR	3948315	Label	case T_NS_C :	5768:2:170993:171004	3947864	20	True				
ANR	3948316	Identifier	T_NS_C		3947864	0					
ANR	3948317	IfStatement	if ( FC ( current_namespace ) )		3947864	21					
ANR	3948318	Condition	FC ( current_namespace )	5769:7:171013:171033	3947864	0	True				
ANR	3948319	CallExpression	FC ( current_namespace )		3947864	0					
ANR	3948320	Callee	FC		3947864	0					
ANR	3948321	Identifier	FC		3947864	0					
ANR	3948322	ArgumentList	current_namespace		3947864	1					
ANR	3948323	Argument	current_namespace		3947864	0					
ANR	3948324	Identifier	current_namespace		3947864	0					
ANR	3948325	CompoundStatement		73:30:2002:2002	3947864	1					
ANR	3948326	ExpressionStatement	"ZVAL_STR_COPY ( zv , FC ( current_namespace ) )"	5770:4:171042:171082	3947864	0	True				
ANR	3948327	CallExpression	"ZVAL_STR_COPY ( zv , FC ( current_namespace ) )"		3947864	0					
ANR	3948328	Callee	ZVAL_STR_COPY		3947864	0					
ANR	3948329	Identifier	ZVAL_STR_COPY		3947864	0					
ANR	3948330	ArgumentList	zv		3947864	1					
ANR	3948331	Argument	zv		3947864	0					
ANR	3948332	Identifier	zv		3947864	0					
ANR	3948333	Argument	FC ( current_namespace )		3947864	1					
ANR	3948334	CallExpression	FC ( current_namespace )		3947864	0					
ANR	3948335	Callee	FC		3947864	0					
ANR	3948336	Identifier	FC		3947864	0					
ANR	3948337	ArgumentList	current_namespace		3947864	1					
ANR	3948338	Argument	current_namespace		3947864	0					
ANR	3948339	Identifier	current_namespace		3947864	0					
ANR	3948340	ElseStatement	else		3947864	0					
ANR	3948341	CompoundStatement		75:10:2060:2060	3947864	0					
ANR	3948342	ExpressionStatement	ZVAL_EMPTY_STRING ( zv )	5772:4:171100:171121	3947864	0	True				
ANR	3948343	CallExpression	ZVAL_EMPTY_STRING ( zv )		3947864	0					
ANR	3948344	Callee	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948345	Identifier	ZVAL_EMPTY_STRING		3947864	0					
ANR	3948346	ArgumentList	zv		3947864	1					
ANR	3948347	Argument	zv		3947864	0					
ANR	3948348	Identifier	zv		3947864	0					
ANR	3948349	BreakStatement	break ;	5774:3:171131:171136	3947864	22	True				
ANR	3948350	Statement	EMPTY_SWITCH_DEFAULT_CASE	5775:2:171140:171164	3947864	23	True				
ANR	3948351	Statement	(	5775:27:171165:171165	3947864	24	True				
ANR	3948352	Statement	)	5775:28:171166:171166	3947864	25	True				
ANR	3948353	ReturnStatement	return 1 ;	5778:1:171173:171181	3947864	3	True				
ANR	3948354	PrimaryExpression	1		3947864	0					
ANR	3948355	ReturnType	static zend_bool		3947864	1					
ANR	3948356	Identifier	zend_try_ct_eval_magic_const		3947864	2					
ANR	3948357	ParameterList	"zval * zv , zend_ast * ast"		3947864	3					
ANR	3948358	Parameter	zval * zv	5696:46:168998:169005	3947864	0	True				
ANR	3948359	ParameterType	zval *		3947864	0					
ANR	3948360	Identifier	zv		3947864	1					
ANR	3948361	Parameter	zend_ast * ast	5696:56:169008:169020	3947864	1	True				
ANR	3948362	ParameterType	zend_ast *		3947864	0					
ANR	3948363	Identifier	ast		3947864	1					
ANR	3948364	CFGEntryNode	ENTRY		3947864		True				
ANR	3948365	CFGExitNode	EXIT		3947864		True				
ANR	3948366	Symbol	zend_string_extend		3947864						
ANR	3948367	Symbol	ast		3947864						
ANR	3948368	Symbol	ast -> lineno		3947864						
ANR	3948369	Symbol	active_class_entry		3947864						
ANR	3948370	Symbol	* ce		3947864						
ANR	3948371	Symbol	dirname		3947864						
ANR	3948372	Symbol	zend_string_init		3947864						
ANR	3948373	Symbol	MAXPATHLEN		3947864						
ANR	3948374	Symbol	strlen		3947864						
ANR	3948375	Symbol	* ast		3947864						
ANR	3948376	Symbol	op_array -> fn_flags		3947864						
ANR	3948377	Symbol	VCWD_GETCWD		3947864						
ANR	3948378	Symbol	ce -> name		3947864						
ANR	3948379	Symbol	strcmp		3947864						
ANR	3948380	Symbol	ast -> attr		3947864						
ANR	3948381	Symbol	ce		3947864						
ANR	3948382	Symbol	CG		3947864						
ANR	3948383	Symbol	active_op_array		3947864						
ANR	3948384	Symbol	compiled_filename		3947864						
ANR	3948385	Symbol	zend_concat3		3947864						
ANR	3948386	Symbol	* op_array		3947864						
ANR	3948387	Symbol	op_array -> scope		3947864						
ANR	3948388	Symbol	ZSTR_VAL		3947864						
ANR	3948389	Symbol	op_array -> function_name		3947864						
ANR	3948390	Symbol	ZEND_ACC_TRAIT		3947864						
ANR	3948391	Symbol	ce -> ce_flags		3947864						
ANR	3948392	Symbol	ZEND_ACC_CLOSURE		3947864						
ANR	3948393	Symbol	filename		3947864						
ANR	3948394	Symbol	current_namespace		3947864						
ANR	3948395	Symbol	ZSTR_LEN		3947864						
ANR	3948396	Symbol	zv		3947864						
ANR	3948397	Symbol	FC		3947864						
ANR	3948398	Symbol	op_array		3947864						
ANR	3948399	Function	zend_try_ct_eval_binary_op	5782:0:171196:171644							
ANR	3948400	FunctionDef	"zend_try_ct_eval_binary_op (zval * result , uint32_t opcode , zval * op1 , zval * op2)"		3948399	0					
ANR	3948401	CompoundStatement		5783:0:171310:171644	3948399	0					
ANR	3948402	IdentifierDeclStatement	binary_op_type fn = get_binary_op ( opcode ) ;	5784:1:171313:171354	3948399	0	True				
ANR	3948403	IdentifierDecl	fn = get_binary_op ( opcode )		3948399	0					
ANR	3948404	IdentifierDeclType	binary_op_type		3948399	0					
ANR	3948405	Identifier	fn		3948399	1					
ANR	3948406	AssignmentExpression	fn = get_binary_op ( opcode )		3948399	2		=			
ANR	3948407	Identifier	fn		3948399	0					
ANR	3948408	CallExpression	get_binary_op ( opcode )		3948399	1					
ANR	3948409	Callee	get_binary_op		3948399	0					
ANR	3948410	Identifier	get_binary_op		3948399	0					
ANR	3948411	ArgumentList	opcode		3948399	1					
ANR	3948412	Argument	opcode		3948399	0					
ANR	3948413	Identifier	opcode		3948399	0					
ANR	3948414	IfStatement	if ( ( opcode == ZEND_DIV || opcode == ZEND_MOD ) && zval_get_long ( op2 ) == 0 )		3948399	1					
ANR	3948415	Condition	( opcode == ZEND_DIV || opcode == ZEND_MOD ) && zval_get_long ( op2 ) == 0	5787:5:171417:171490	3948399	0	True				
ANR	3948416	AndExpression	( opcode == ZEND_DIV || opcode == ZEND_MOD ) && zval_get_long ( op2 ) == 0		3948399	0		&&			
ANR	3948417	OrExpression	opcode == ZEND_DIV || opcode == ZEND_MOD		3948399	0		||			
ANR	3948418	EqualityExpression	opcode == ZEND_DIV		3948399	0		==			
ANR	3948419	Identifier	opcode		3948399	0					
ANR	3948420	Identifier	ZEND_DIV		3948399	1					
ANR	3948421	EqualityExpression	opcode == ZEND_MOD		3948399	1		==			
ANR	3948422	Identifier	opcode		3948399	0					
ANR	3948423	Identifier	ZEND_MOD		3948399	1					
ANR	3948424	EqualityExpression	zval_get_long ( op2 ) == 0		3948399	1		==			
ANR	3948425	CallExpression	zval_get_long ( op2 )		3948399	0					
ANR	3948426	Callee	zval_get_long		3948399	0					
ANR	3948427	Identifier	zval_get_long		3948399	0					
ANR	3948428	ArgumentList	op2		3948399	1					
ANR	3948429	Argument	op2		3948399	0					
ANR	3948430	Identifier	op2		3948399	0					
ANR	3948431	PrimaryExpression	0		3948399	1					
ANR	3948432	CompoundStatement		6:30:182:182	3948399	1					
ANR	3948433	ReturnStatement	return 0 ;	5789:2:171497:171505	3948399	0	True				
ANR	3948434	PrimaryExpression	0		3948399	0					
ANR	3948435	ElseStatement	else		3948399	0					
ANR	3948436	IfStatement	if ( ( opcode == ZEND_SL || opcode == ZEND_SR ) && zval_get_long ( op2 ) < 0 )		3948399	0					
ANR	3948437	Condition	( opcode == ZEND_SL || opcode == ZEND_SR ) && zval_get_long ( op2 ) < 0	5790:12:171519:171589	3948399	0	True				
ANR	3948438	AndExpression	( opcode == ZEND_SL || opcode == ZEND_SR ) && zval_get_long ( op2 ) < 0		3948399	0		&&			
ANR	3948439	OrExpression	opcode == ZEND_SL || opcode == ZEND_SR		3948399	0		||			
ANR	3948440	EqualityExpression	opcode == ZEND_SL		3948399	0		==			
ANR	3948441	Identifier	opcode		3948399	0					
ANR	3948442	Identifier	ZEND_SL		3948399	1					
ANR	3948443	EqualityExpression	opcode == ZEND_SR		3948399	1		==			
ANR	3948444	Identifier	opcode		3948399	0					
ANR	3948445	Identifier	ZEND_SR		3948399	1					
ANR	3948446	RelationalExpression	zval_get_long ( op2 ) < 0		3948399	1		<			
ANR	3948447	CallExpression	zval_get_long ( op2 )		3948399	0					
ANR	3948448	Callee	zval_get_long		3948399	0					
ANR	3948449	Identifier	zval_get_long		3948399	0					
ANR	3948450	ArgumentList	op2		3948399	1					
ANR	3948451	Argument	op2		3948399	0					
ANR	3948452	Identifier	op2		3948399	0					
ANR	3948453	PrimaryExpression	0		3948399	1					
ANR	3948454	CompoundStatement		9:29:281:281	3948399	1					
ANR	3948455	ReturnStatement	return 0 ;	5792:2:171596:171604	3948399	0	True				
ANR	3948456	PrimaryExpression	0		3948399	0					
ANR	3948457	ExpressionStatement	"fn ( result , op1 , op2 )"	5795:1:171611:171631	3948399	2	True				
ANR	3948458	CallExpression	"fn ( result , op1 , op2 )"		3948399	0					
ANR	3948459	Callee	fn		3948399	0					
ANR	3948460	Identifier	fn		3948399	0					
ANR	3948461	ArgumentList	result		3948399	1					
ANR	3948462	Argument	result		3948399	0					
ANR	3948463	Identifier	result		3948399	0					
ANR	3948464	Argument	op1		3948399	1					
ANR	3948465	Identifier	op1		3948399	0					
ANR	3948466	Argument	op2		3948399	2					
ANR	3948467	Identifier	op2		3948399	0					
ANR	3948468	ReturnStatement	return 1 ;	5796:1:171634:171642	3948399	3	True				
ANR	3948469	PrimaryExpression	1		3948399	0					
ANR	3948470	ReturnType	static inline zend_bool		3948399	1					
ANR	3948471	Identifier	zend_try_ct_eval_binary_op		3948399	2					
ANR	3948472	ParameterList	"zval * result , uint32_t opcode , zval * op1 , zval * op2"		3948399	3					
ANR	3948473	Parameter	zval * result	5782:51:171247:171258	3948399	0	True				
ANR	3948474	ParameterType	zval *		3948399	0					
ANR	3948475	Identifier	result		3948399	1					
ANR	3948476	Parameter	uint32_t opcode	5782:65:171261:171275	3948399	1	True				
ANR	3948477	ParameterType	uint32_t		3948399	0					
ANR	3948478	Identifier	opcode		3948399	1					
ANR	3948479	Parameter	zval * op1	5782:82:171278:171286	3948399	2	True				
ANR	3948480	ParameterType	zval *		3948399	0					
ANR	3948481	Identifier	op1		3948399	1					
ANR	3948482	Parameter	zval * op2	5782:93:171289:171297	3948399	3	True				
ANR	3948483	ParameterType	zval *		3948399	0					
ANR	3948484	Identifier	op2		3948399	1					
ANR	3948485	CFGEntryNode	ENTRY		3948399		True				
ANR	3948486	CFGExitNode	EXIT		3948399		True				
ANR	3948487	Symbol	result		3948399						
ANR	3948488	Symbol	op2		3948399						
ANR	3948489	Symbol	op1		3948399						
ANR	3948490	Symbol	get_binary_op		3948399						
ANR	3948491	Symbol	zval_get_long		3948399						
ANR	3948492	Symbol	ZEND_SR		3948399						
ANR	3948493	Symbol	fn		3948399						
ANR	3948494	Symbol	ZEND_MOD		3948399						
ANR	3948495	Symbol	opcode		3948399						
ANR	3948496	Symbol	ZEND_SL		3948399						
ANR	3948497	Symbol	ZEND_DIV		3948399						
ANR	3948498	Function	zend_ct_eval_unary_op	5800:0:171657:171810							
ANR	3948499	FunctionDef	"zend_ct_eval_unary_op (zval * result , uint32_t opcode , zval * op)"		3948498	0					
ANR	3948500	CompoundStatement		5801:0:171749:171810	3948498	0					
ANR	3948501	IdentifierDeclStatement	unary_op_type fn = get_unary_op ( opcode ) ;	5802:1:171752:171791	3948498	0	True				
ANR	3948502	IdentifierDecl	fn = get_unary_op ( opcode )		3948498	0					
ANR	3948503	IdentifierDeclType	unary_op_type		3948498	0					
ANR	3948504	Identifier	fn		3948498	1					
ANR	3948505	AssignmentExpression	fn = get_unary_op ( opcode )		3948498	2		=			
ANR	3948506	Identifier	fn		3948498	0					
ANR	3948507	CallExpression	get_unary_op ( opcode )		3948498	1					
ANR	3948508	Callee	get_unary_op		3948498	0					
ANR	3948509	Identifier	get_unary_op		3948498	0					
ANR	3948510	ArgumentList	opcode		3948498	1					
ANR	3948511	Argument	opcode		3948498	0					
ANR	3948512	Identifier	opcode		3948498	0					
ANR	3948513	ExpressionStatement	"fn ( result , op )"	5803:1:171794:171808	3948498	1	True				
ANR	3948514	CallExpression	"fn ( result , op )"		3948498	0					
ANR	3948515	Callee	fn		3948498	0					
ANR	3948516	Identifier	fn		3948498	0					
ANR	3948517	ArgumentList	result		3948498	1					
ANR	3948518	Argument	result		3948498	0					
ANR	3948519	Identifier	result		3948498	0					
ANR	3948520	Argument	op		3948498	1					
ANR	3948521	Identifier	op		3948498	0					
ANR	3948522	ReturnType	static inline void		3948498	1					
ANR	3948523	Identifier	zend_ct_eval_unary_op		3948498	2					
ANR	3948524	ParameterList	"zval * result , uint32_t opcode , zval * op"		3948498	3					
ANR	3948525	Parameter	zval * result	5800:41:171698:171709	3948498	0	True				
ANR	3948526	ParameterType	zval *		3948498	0					
ANR	3948527	Identifier	result		3948498	1					
ANR	3948528	Parameter	uint32_t opcode	5800:55:171712:171726	3948498	1	True				
ANR	3948529	ParameterType	uint32_t		3948498	0					
ANR	3948530	Identifier	opcode		3948498	1					
ANR	3948531	Parameter	zval * op	5800:72:171729:171736	3948498	2	True				
ANR	3948532	ParameterType	zval *		3948498	0					
ANR	3948533	Identifier	op		3948498	1					
ANR	3948534	CFGEntryNode	ENTRY		3948498		True				
ANR	3948535	CFGExitNode	EXIT		3948498		True				
ANR	3948536	Symbol	result		3948498						
ANR	3948537	Symbol	op		3948498						
ANR	3948538	Symbol	get_unary_op		3948498						
ANR	3948539	Symbol	fn		3948498						
ANR	3948540	Symbol	opcode		3948498						
ANR	3948541	Function	zend_ct_eval_unary_pm	5807:0:171823:172061							
ANR	3948542	FunctionDef	"zend_ct_eval_unary_pm (zval * result , zend_ast_kind kind , zval * op)"		3948541	0					
ANR	3948543	CompoundStatement		5808:0:171918:172061	3948541	0					
ANR	3948544	IdentifierDeclStatement	binary_op_type fn = kind == ZEND_AST_UNARY_PLUS ? add_function : sub_function ;	5809:1:171921:172000	3948541	0	True				
ANR	3948545	IdentifierDecl	fn = kind == ZEND_AST_UNARY_PLUS ? add_function : sub_function		3948541	0					
ANR	3948546	IdentifierDeclType	binary_op_type		3948541	0					
ANR	3948547	Identifier	fn		3948541	1					
ANR	3948548	AssignmentExpression	fn = kind == ZEND_AST_UNARY_PLUS ? add_function : sub_function		3948541	2		=			
ANR	3948549	Identifier	fn		3948541	0					
ANR	3948550	ConditionalExpression	kind == ZEND_AST_UNARY_PLUS ? add_function : sub_function		3948541	1					
ANR	3948551	Condition	kind == ZEND_AST_UNARY_PLUS		3948541	0					
ANR	3948552	EqualityExpression	kind == ZEND_AST_UNARY_PLUS		3948541	0		==			
ANR	3948553	Identifier	kind		3948541	0					
ANR	3948554	Identifier	ZEND_AST_UNARY_PLUS		3948541	1					
ANR	3948555	Identifier	add_function		3948541	1					
ANR	3948556	Identifier	sub_function		3948541	2					
ANR	3948557	IdentifierDeclStatement	zval left ;	5812:1:172004:172013	3948541	1	True				
ANR	3948558	IdentifierDecl	left		3948541	0					
ANR	3948559	IdentifierDeclType	zval		3948541	0					
ANR	3948560	Identifier	left		3948541	1					
ANR	3948561	ExpressionStatement	"ZVAL_LONG ( & left , 0 )"	5813:1:172016:172035	3948541	2	True				
ANR	3948562	CallExpression	"ZVAL_LONG ( & left , 0 )"		3948541	0					
ANR	3948563	Callee	ZVAL_LONG		3948541	0					
ANR	3948564	Identifier	ZVAL_LONG		3948541	0					
ANR	3948565	ArgumentList	& left		3948541	1					
ANR	3948566	Argument	& left		3948541	0					
ANR	3948567	UnaryOperationExpression	& left		3948541	0					
ANR	3948568	UnaryOperator	&		3948541	0					
ANR	3948569	Identifier	left		3948541	1					
ANR	3948570	Argument	0		3948541	1					
ANR	3948571	PrimaryExpression	0		3948541	0					
ANR	3948572	ExpressionStatement	"fn ( result , & left , op )"	5814:1:172038:172059	3948541	3	True				
ANR	3948573	CallExpression	"fn ( result , & left , op )"		3948541	0					
ANR	3948574	Callee	fn		3948541	0					
ANR	3948575	Identifier	fn		3948541	0					
ANR	3948576	ArgumentList	result		3948541	1					
ANR	3948577	Argument	result		3948541	0					
ANR	3948578	Identifier	result		3948541	0					
ANR	3948579	Argument	& left		3948541	1					
ANR	3948580	UnaryOperationExpression	& left		3948541	0					
ANR	3948581	UnaryOperator	&		3948541	0					
ANR	3948582	Identifier	left		3948541	1					
ANR	3948583	Argument	op		3948541	2					
ANR	3948584	Identifier	op		3948541	0					
ANR	3948585	ReturnType	static inline void		3948541	1					
ANR	3948586	Identifier	zend_ct_eval_unary_pm		3948541	2					
ANR	3948587	ParameterList	"zval * result , zend_ast_kind kind , zval * op"		3948541	3					
ANR	3948588	Parameter	zval * result	5807:41:171864:171875	3948541	0	True				
ANR	3948589	ParameterType	zval *		3948541	0					
ANR	3948590	Identifier	result		3948541	1					
ANR	3948591	Parameter	zend_ast_kind kind	5807:55:171878:171895	3948541	1	True				
ANR	3948592	ParameterType	zend_ast_kind		3948541	0					
ANR	3948593	Identifier	kind		3948541	1					
ANR	3948594	Parameter	zval * op	5807:75:171898:171905	3948541	2	True				
ANR	3948595	ParameterType	zval *		3948541	0					
ANR	3948596	Identifier	op		3948541	1					
ANR	3948597	CFGEntryNode	ENTRY		3948541		True				
ANR	3948598	CFGExitNode	EXIT		3948541		True				
ANR	3948599	Symbol	result		3948541						
ANR	3948600	Symbol	op		3948541						
ANR	3948601	Symbol	sub_function		3948541						
ANR	3948602	Symbol	ZEND_AST_UNARY_PLUS		3948541						
ANR	3948603	Symbol	left		3948541						
ANR	3948604	Symbol	kind		3948541						
ANR	3948605	Symbol	fn		3948541						
ANR	3948606	Symbol	add_function		3948541						
ANR	3948607	Symbol	& left		3948541						
ANR	3948608	Function	zend_ct_eval_greater	5818:0:172074:172307							
ANR	3948609	FunctionDef	"zend_ct_eval_greater (zval * result , zend_ast_kind kind , zval * op1 , zval * op2)"		3948608	0					
ANR	3948610	CompoundStatement		5819:0:172180:172307	3948608	0					
ANR	3948611	IdentifierDeclStatement	binary_op_type fn = kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function ;	5820:1:172183:172282	3948608	0	True				
ANR	3948612	IdentifierDecl	fn = kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		3948608	0					
ANR	3948613	IdentifierDeclType	binary_op_type		3948608	0					
ANR	3948614	Identifier	fn		3948608	1					
ANR	3948615	AssignmentExpression	fn = kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		3948608	2		=			
ANR	3948616	Identifier	fn		3948608	0					
ANR	3948617	ConditionalExpression	kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		3948608	1					
ANR	3948618	Condition	kind == ZEND_AST_GREATER		3948608	0					
ANR	3948619	EqualityExpression	kind == ZEND_AST_GREATER		3948608	0		==			
ANR	3948620	Identifier	kind		3948608	0					
ANR	3948621	Identifier	ZEND_AST_GREATER		3948608	1					
ANR	3948622	Identifier	is_smaller_function		3948608	1					
ANR	3948623	Identifier	is_smaller_or_equal_function		3948608	2					
ANR	3948624	ExpressionStatement	"fn ( result , op2 , op1 )"	5822:1:172285:172305	3948608	1	True				
ANR	3948625	CallExpression	"fn ( result , op2 , op1 )"		3948608	0					
ANR	3948626	Callee	fn		3948608	0					
ANR	3948627	Identifier	fn		3948608	0					
ANR	3948628	ArgumentList	result		3948608	1					
ANR	3948629	Argument	result		3948608	0					
ANR	3948630	Identifier	result		3948608	0					
ANR	3948631	Argument	op2		3948608	1					
ANR	3948632	Identifier	op2		3948608	0					
ANR	3948633	Argument	op1		3948608	2					
ANR	3948634	Identifier	op1		3948608	0					
ANR	3948635	ReturnType	static inline void		3948608	1					
ANR	3948636	Identifier	zend_ct_eval_greater		3948608	2					
ANR	3948637	ParameterList	"zval * result , zend_ast_kind kind , zval * op1 , zval * op2"		3948608	3					
ANR	3948638	Parameter	zval * result	5818:40:172114:172125	3948608	0	True				
ANR	3948639	ParameterType	zval *		3948608	0					
ANR	3948640	Identifier	result		3948608	1					
ANR	3948641	Parameter	zend_ast_kind kind	5818:54:172128:172145	3948608	1	True				
ANR	3948642	ParameterType	zend_ast_kind		3948608	0					
ANR	3948643	Identifier	kind		3948608	1					
ANR	3948644	Parameter	zval * op1	5818:74:172148:172156	3948608	2	True				
ANR	3948645	ParameterType	zval *		3948608	0					
ANR	3948646	Identifier	op1		3948608	1					
ANR	3948647	Parameter	zval * op2	5818:85:172159:172167	3948608	3	True				
ANR	3948648	ParameterType	zval *		3948608	0					
ANR	3948649	Identifier	op2		3948608	1					
ANR	3948650	CFGEntryNode	ENTRY		3948608		True				
ANR	3948651	CFGExitNode	EXIT		3948608		True				
ANR	3948652	Symbol	result		3948608						
ANR	3948653	Symbol	op2		3948608						
ANR	3948654	Symbol	op1		3948608						
ANR	3948655	Symbol	is_smaller_function		3948608						
ANR	3948656	Symbol	kind		3948608						
ANR	3948657	Symbol	is_smaller_or_equal_function		3948608						
ANR	3948658	Symbol	fn		3948608						
ANR	3948659	Symbol	ZEND_AST_GREATER		3948608						
ANR	3948660	Function	zend_try_ct_eval_array	5826:0:172320:174149							
ANR	3948661	FunctionDef	"zend_try_ct_eval_array (zval * result , zend_ast * ast)"		3948660	0					
ANR	3948662	CompoundStatement		5827:0:172399:174149	3948660	0					
ANR	3948663	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	5828:1:172402:172446	3948660	0	True				
ANR	3948664	IdentifierDecl	* list = zend_ast_get_list ( ast )		3948660	0					
ANR	3948665	IdentifierDeclType	zend_ast_list *		3948660	0					
ANR	3948666	Identifier	list		3948660	1					
ANR	3948667	AssignmentExpression	* list = zend_ast_get_list ( ast )		3948660	2		=			
ANR	3948668	Identifier	list		3948660	0					
ANR	3948669	CallExpression	zend_ast_get_list ( ast )		3948660	1					
ANR	3948670	Callee	zend_ast_get_list		3948660	0					
ANR	3948671	Identifier	zend_ast_get_list		3948660	0					
ANR	3948672	ArgumentList	ast		3948660	1					
ANR	3948673	Argument	ast		3948660	0					
ANR	3948674	Identifier	ast		3948660	0					
ANR	3948675	IdentifierDeclStatement	uint32_t i ;	5829:1:172449:172459	3948660	1	True				
ANR	3948676	IdentifierDecl	i		3948660	0					
ANR	3948677	IdentifierDeclType	uint32_t		3948660	0					
ANR	3948678	Identifier	i		3948660	1					
ANR	3948679	IdentifierDeclStatement	zend_bool is_constant = 1 ;	5830:1:172462:172487	3948660	2	True				
ANR	3948680	IdentifierDecl	is_constant = 1		3948660	0					
ANR	3948681	IdentifierDeclType	zend_bool		3948660	0					
ANR	3948682	Identifier	is_constant		3948660	1					
ANR	3948683	AssignmentExpression	is_constant = 1		3948660	2		=			
ANR	3948684	Identifier	is_constant		3948660	0					
ANR	3948685	PrimaryExpression	1		3948660	1					
ANR	3948686	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3948660	3					
ANR	3948687	ForInit	i = 0 ;	5833:6:172563:172568	3948660	0	True				
ANR	3948688	AssignmentExpression	i = 0		3948660	0		=			
ANR	3948689	Identifier	i		3948660	0					
ANR	3948690	PrimaryExpression	0		3948660	1					
ANR	3948691	Condition	i < list -> children	5833:13:172570:172587	3948660	1	True				
ANR	3948692	RelationalExpression	i < list -> children		3948660	0		<			
ANR	3948693	Identifier	i		3948660	0					
ANR	3948694	PtrMemberAccess	list -> children		3948660	1					
ANR	3948695	Identifier	list		3948660	0					
ANR	3948696	Identifier	children		3948660	1					
ANR	3948697	UnaryExpression	++ i	5833:33:172590:172592	3948660	2	True				
ANR	3948698	IncDec	++		3948660	0					
ANR	3948699	Identifier	i		3948660	1					
ANR	3948700	CompoundStatement		9:2:238:271	3948660	3					
ANR	3948701	IdentifierDeclStatement	zend_ast * elem_ast = list -> child [ i ] ;	5834:2:172599:172634	3948660	0	True				
ANR	3948702	IdentifierDecl	* elem_ast = list -> child [ i ]		3948660	0					
ANR	3948703	IdentifierDeclType	zend_ast *		3948660	0					
ANR	3948704	Identifier	elem_ast		3948660	1					
ANR	3948705	AssignmentExpression	* elem_ast = list -> child [ i ]		3948660	2		=			
ANR	3948706	Identifier	elem_ast		3948660	0					
ANR	3948707	ArrayIndexing	list -> child [ i ]		3948660	1					
ANR	3948708	PtrMemberAccess	list -> child		3948660	0					
ANR	3948709	Identifier	list		3948660	0					
ANR	3948710	Identifier	child		3948660	1					
ANR	3948711	Identifier	i		3948660	1					
ANR	3948712	IdentifierDeclStatement	zend_bool by_ref = elem_ast -> attr ;	5835:2:172638:172671	3948660	1	True				
ANR	3948713	IdentifierDecl	by_ref = elem_ast -> attr		3948660	0					
ANR	3948714	IdentifierDeclType	zend_bool		3948660	0					
ANR	3948715	Identifier	by_ref		3948660	1					
ANR	3948716	AssignmentExpression	by_ref = elem_ast -> attr		3948660	2		=			
ANR	3948717	Identifier	by_ref		3948660	0					
ANR	3948718	PtrMemberAccess	elem_ast -> attr		3948660	1					
ANR	3948719	Identifier	elem_ast		3948660	0					
ANR	3948720	Identifier	attr		3948660	1					
ANR	3948721	ExpressionStatement	zend_eval_const_expr ( & elem_ast -> child [ 0 ] )	5836:2:172675:172716	3948660	2	True				
ANR	3948722	CallExpression	zend_eval_const_expr ( & elem_ast -> child [ 0 ] )		3948660	0					
ANR	3948723	Callee	zend_eval_const_expr		3948660	0					
ANR	3948724	Identifier	zend_eval_const_expr		3948660	0					
ANR	3948725	ArgumentList	& elem_ast -> child [ 0 ]		3948660	1					
ANR	3948726	Argument	& elem_ast -> child [ 0 ]		3948660	0					
ANR	3948727	UnaryOperationExpression	& elem_ast -> child [ 0 ]		3948660	0					
ANR	3948728	UnaryOperator	&		3948660	0					
ANR	3948729	ArrayIndexing	elem_ast -> child [ 0 ]		3948660	1					
ANR	3948730	PtrMemberAccess	elem_ast -> child		3948660	0					
ANR	3948731	Identifier	elem_ast		3948660	0					
ANR	3948732	Identifier	child		3948660	1					
ANR	3948733	PrimaryExpression	0		3948660	1					
ANR	3948734	ExpressionStatement	zend_eval_const_expr ( & elem_ast -> child [ 1 ] )	5837:2:172720:172761	3948660	3	True				
ANR	3948735	CallExpression	zend_eval_const_expr ( & elem_ast -> child [ 1 ] )		3948660	0					
ANR	3948736	Callee	zend_eval_const_expr		3948660	0					
ANR	3948737	Identifier	zend_eval_const_expr		3948660	0					
ANR	3948738	ArgumentList	& elem_ast -> child [ 1 ]		3948660	1					
ANR	3948739	Argument	& elem_ast -> child [ 1 ]		3948660	0					
ANR	3948740	UnaryOperationExpression	& elem_ast -> child [ 1 ]		3948660	0					
ANR	3948741	UnaryOperator	&		3948660	0					
ANR	3948742	ArrayIndexing	elem_ast -> child [ 1 ]		3948660	1					
ANR	3948743	PtrMemberAccess	elem_ast -> child		3948660	0					
ANR	3948744	Identifier	elem_ast		3948660	0					
ANR	3948745	Identifier	child		3948660	1					
ANR	3948746	PrimaryExpression	1		3948660	1					
ANR	3948747	IfStatement	if ( by_ref || elem_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ( elem_ast -> child [ 1 ] && elem_ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL ) )		3948660	4					
ANR	3948748	Condition	by_ref || elem_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ( elem_ast -> child [ 1 ] && elem_ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL )	5839:6:172770:172892	3948660	0	True				
ANR	3948749	OrExpression	by_ref || elem_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ( elem_ast -> child [ 1 ] && elem_ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL )		3948660	0		||			
ANR	3948750	Identifier	by_ref		3948660	0					
ANR	3948751	OrExpression	elem_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ( elem_ast -> child [ 1 ] && elem_ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL )		3948660	1		||			
ANR	3948752	EqualityExpression	elem_ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3948660	0		!=			
ANR	3948753	PtrMemberAccess	elem_ast -> child [ 0 ] -> kind		3948660	0					
ANR	3948754	ArrayIndexing	elem_ast -> child [ 0 ]		3948660	0					
ANR	3948755	PtrMemberAccess	elem_ast -> child		3948660	0					
ANR	3948756	Identifier	elem_ast		3948660	0					
ANR	3948757	Identifier	child		3948660	1					
ANR	3948758	PrimaryExpression	0		3948660	1					
ANR	3948759	Identifier	kind		3948660	1					
ANR	3948760	Identifier	ZEND_AST_ZVAL		3948660	1					
ANR	3948761	AndExpression	elem_ast -> child [ 1 ] && elem_ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3948660	1		&&			
ANR	3948762	ArrayIndexing	elem_ast -> child [ 1 ]		3948660	0					
ANR	3948763	PtrMemberAccess	elem_ast -> child		3948660	0					
ANR	3948764	Identifier	elem_ast		3948660	0					
ANR	3948765	Identifier	child		3948660	1					
ANR	3948766	PrimaryExpression	1		3948660	1					
ANR	3948767	EqualityExpression	elem_ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3948660	1		!=			
ANR	3948768	PtrMemberAccess	elem_ast -> child [ 1 ] -> kind		3948660	0					
ANR	3948769	ArrayIndexing	elem_ast -> child [ 1 ]		3948660	0					
ANR	3948770	PtrMemberAccess	elem_ast -> child		3948660	0					
ANR	3948771	Identifier	elem_ast		3948660	0					
ANR	3948772	Identifier	child		3948660	1					
ANR	3948773	PrimaryExpression	1		3948660	1					
ANR	3948774	Identifier	kind		3948660	1					
ANR	3948775	Identifier	ZEND_AST_ZVAL		3948660	1					
ANR	3948776	CompoundStatement		15:4:498:498	3948660	1					
ANR	3948777	ExpressionStatement	is_constant = 0	5842:3:172903:172918	3948660	0	True				
ANR	3948778	AssignmentExpression	is_constant = 0		3948660	0		=			
ANR	3948779	Identifier	is_constant		3948660	0					
ANR	3948780	PrimaryExpression	0		3948660	1					
ANR	3948781	IfStatement	if ( ! is_constant )		3948660	4					
ANR	3948782	Condition	! is_constant	5846:5:172933:172944	3948660	0	True				
ANR	3948783	UnaryOperationExpression	! is_constant		3948660	0					
ANR	3948784	UnaryOperator	!		3948660	0					
ANR	3948785	Identifier	is_constant		3948660	1					
ANR	3948786	CompoundStatement		20:19:547:547	3948660	1					
ANR	3948787	ReturnStatement	return 0 ;	5847:2:172951:172959	3948660	0	True				
ANR	3948788	PrimaryExpression	0		3948660	0					
ANR	3948789	ExpressionStatement	"array_init_size ( result , list -> children )"	5850:1:172966:173005	3948660	5	True				
ANR	3948790	CallExpression	"array_init_size ( result , list -> children )"		3948660	0					
ANR	3948791	Callee	array_init_size		3948660	0					
ANR	3948792	Identifier	array_init_size		3948660	0					
ANR	3948793	ArgumentList	result		3948660	1					
ANR	3948794	Argument	result		3948660	0					
ANR	3948795	Identifier	result		3948660	0					
ANR	3948796	Argument	list -> children		3948660	1					
ANR	3948797	PtrMemberAccess	list -> children		3948660	0					
ANR	3948798	Identifier	list		3948660	0					
ANR	3948799	Identifier	children		3948660	1					
ANR	3948800	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3948660	6					
ANR	3948801	ForInit	i = 0 ;	5851:6:173013:173018	3948660	0	True				
ANR	3948802	AssignmentExpression	i = 0		3948660	0		=			
ANR	3948803	Identifier	i		3948660	0					
ANR	3948804	PrimaryExpression	0		3948660	1					
ANR	3948805	Condition	i < list -> children	5851:13:173020:173037	3948660	1	True				
ANR	3948806	RelationalExpression	i < list -> children		3948660	0		<			
ANR	3948807	Identifier	i		3948660	0					
ANR	3948808	PtrMemberAccess	list -> children		3948660	1					
ANR	3948809	Identifier	list		3948660	0					
ANR	3948810	Identifier	children		3948660	1					
ANR	3948811	UnaryExpression	++ i	5851:33:173040:173042	3948660	2	True				
ANR	3948812	IncDec	++		3948660	0					
ANR	3948813	Identifier	i		3948660	1					
ANR	3948814	CompoundStatement		30:2:775:817	3948660	3					
ANR	3948815	IdentifierDeclStatement	zend_ast * elem_ast = list -> child [ i ] ;	5852:2:173049:173084	3948660	0	True				
ANR	3948816	IdentifierDecl	* elem_ast = list -> child [ i ]		3948660	0					
ANR	3948817	IdentifierDeclType	zend_ast *		3948660	0					
ANR	3948818	Identifier	elem_ast		3948660	1					
ANR	3948819	AssignmentExpression	* elem_ast = list -> child [ i ]		3948660	2		=			
ANR	3948820	Identifier	elem_ast		3948660	0					
ANR	3948821	ArrayIndexing	list -> child [ i ]		3948660	1					
ANR	3948822	PtrMemberAccess	list -> child		3948660	0					
ANR	3948823	Identifier	list		3948660	0					
ANR	3948824	Identifier	child		3948660	1					
ANR	3948825	Identifier	i		3948660	1					
ANR	3948826	IdentifierDeclStatement	zend_ast * value_ast = elem_ast -> child [ 0 ] ;	5853:2:173088:173128	3948660	1	True				
ANR	3948827	IdentifierDecl	* value_ast = elem_ast -> child [ 0 ]		3948660	0					
ANR	3948828	IdentifierDeclType	zend_ast *		3948660	0					
ANR	3948829	Identifier	value_ast		3948660	1					
ANR	3948830	AssignmentExpression	* value_ast = elem_ast -> child [ 0 ]		3948660	2		=			
ANR	3948831	Identifier	value_ast		3948660	0					
ANR	3948832	ArrayIndexing	elem_ast -> child [ 0 ]		3948660	1					
ANR	3948833	PtrMemberAccess	elem_ast -> child		3948660	0					
ANR	3948834	Identifier	elem_ast		3948660	0					
ANR	3948835	Identifier	child		3948660	1					
ANR	3948836	PrimaryExpression	0		3948660	1					
ANR	3948837	IdentifierDeclStatement	zend_ast * key_ast = elem_ast -> child [ 1 ] ;	5854:2:173132:173170	3948660	2	True				
ANR	3948838	IdentifierDecl	* key_ast = elem_ast -> child [ 1 ]		3948660	0					
ANR	3948839	IdentifierDeclType	zend_ast *		3948660	0					
ANR	3948840	Identifier	key_ast		3948660	1					
ANR	3948841	AssignmentExpression	* key_ast = elem_ast -> child [ 1 ]		3948660	2		=			
ANR	3948842	Identifier	key_ast		3948660	0					
ANR	3948843	ArrayIndexing	elem_ast -> child [ 1 ]		3948660	1					
ANR	3948844	PtrMemberAccess	elem_ast -> child		3948660	0					
ANR	3948845	Identifier	elem_ast		3948660	0					
ANR	3948846	Identifier	child		3948660	1					
ANR	3948847	PrimaryExpression	1		3948660	1					
ANR	3948848	IdentifierDeclStatement	zval * value = zend_ast_get_zval ( value_ast ) ;	5856:2:173175:173217	3948660	3	True				
ANR	3948849	IdentifierDecl	* value = zend_ast_get_zval ( value_ast )		3948660	0					
ANR	3948850	IdentifierDeclType	zval *		3948660	0					
ANR	3948851	Identifier	value		3948660	1					
ANR	3948852	AssignmentExpression	* value = zend_ast_get_zval ( value_ast )		3948660	2		=			
ANR	3948853	Identifier	value		3948660	0					
ANR	3948854	CallExpression	zend_ast_get_zval ( value_ast )		3948660	1					
ANR	3948855	Callee	zend_ast_get_zval		3948660	0					
ANR	3948856	Identifier	zend_ast_get_zval		3948660	0					
ANR	3948857	ArgumentList	value_ast		3948660	1					
ANR	3948858	Argument	value_ast		3948660	0					
ANR	3948859	Identifier	value_ast		3948660	0					
ANR	3948860	IfStatement	if ( Z_REFCOUNTED_P ( value ) )		3948660	4					
ANR	3948861	Condition	Z_REFCOUNTED_P ( value )	5857:6:173225:173245	3948660	0	True				
ANR	3948862	CallExpression	Z_REFCOUNTED_P ( value )		3948660	0					
ANR	3948863	Callee	Z_REFCOUNTED_P		3948660	0					
ANR	3948864	Identifier	Z_REFCOUNTED_P		3948660	0					
ANR	3948865	ArgumentList	value		3948660	1					
ANR	3948866	Argument	value		3948660	0					
ANR	3948867	Identifier	value		3948660	0					
ANR	3948868	ExpressionStatement	Z_ADDREF_P ( value )	5857:29:173248:173265	3948660	1	True				
ANR	3948869	CallExpression	Z_ADDREF_P ( value )		3948660	0					
ANR	3948870	Callee	Z_ADDREF_P		3948660	0					
ANR	3948871	Identifier	Z_ADDREF_P		3948660	0					
ANR	3948872	ArgumentList	value		3948660	1					
ANR	3948873	Argument	value		3948660	0					
ANR	3948874	Identifier	value		3948660	0					
ANR	3948875	IfStatement	if ( key_ast )		3948660	5					
ANR	3948876	Condition	key_ast	5859:6:173274:173280	3948660	0	True				
ANR	3948877	Identifier	key_ast		3948660	0					
ANR	3948878	CompoundStatement		34:3:888:926	3948660	1					
ANR	3948879	IdentifierDeclStatement	zval * key = zend_ast_get_zval ( key_ast ) ;	5860:3:173288:173326	3948660	0	True				
ANR	3948880	IdentifierDecl	* key = zend_ast_get_zval ( key_ast )		3948660	0					
ANR	3948881	IdentifierDeclType	zval *		3948660	0					
ANR	3948882	Identifier	key		3948660	1					
ANR	3948883	AssignmentExpression	* key = zend_ast_get_zval ( key_ast )		3948660	2		=			
ANR	3948884	Identifier	key		3948660	0					
ANR	3948885	CallExpression	zend_ast_get_zval ( key_ast )		3948660	1					
ANR	3948886	Callee	zend_ast_get_zval		3948660	0					
ANR	3948887	Identifier	zend_ast_get_zval		3948660	0					
ANR	3948888	ArgumentList	key_ast		3948660	1					
ANR	3948889	Argument	key_ast		3948660	0					
ANR	3948890	Identifier	key_ast		3948660	0					
ANR	3948891	SwitchStatement	switch ( Z_TYPE_P ( key ) )		3948660	1					
ANR	3948892	Condition	Z_TYPE_P ( key )	5861:11:173339:173351	3948660	0	True				
ANR	3948893	CallExpression	Z_TYPE_P ( key )		3948660	0					
ANR	3948894	Callee	Z_TYPE_P		3948660	0					
ANR	3948895	Identifier	Z_TYPE_P		3948660	0					
ANR	3948896	ArgumentList	key		3948660	1					
ANR	3948897	Argument	key		3948660	0					
ANR	3948898	Identifier	key		3948660	0					
ANR	3948899	CompoundStatement		35:26:954:954	3948660	1					
ANR	3948900	Label	case IS_LONG :	5862:4:173360:173372	3948660	0	True				
ANR	3948901	Identifier	IS_LONG		3948660	0					
ANR	3948902	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , Z_LVAL_P ( key ) , value )"	5863:5:173379:173443	3948660	1	True				
ANR	3948903	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , Z_LVAL_P ( key ) , value )"		3948660	0					
ANR	3948904	Callee	zend_hash_index_update		3948660	0					
ANR	3948905	Identifier	zend_hash_index_update		3948660	0					
ANR	3948906	ArgumentList	Z_ARRVAL_P ( result )		3948660	1					
ANR	3948907	Argument	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948908	CallExpression	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948909	Callee	Z_ARRVAL_P		3948660	0					
ANR	3948910	Identifier	Z_ARRVAL_P		3948660	0					
ANR	3948911	ArgumentList	result		3948660	1					
ANR	3948912	Argument	result		3948660	0					
ANR	3948913	Identifier	result		3948660	0					
ANR	3948914	Argument	Z_LVAL_P ( key )		3948660	1					
ANR	3948915	CallExpression	Z_LVAL_P ( key )		3948660	0					
ANR	3948916	Callee	Z_LVAL_P		3948660	0					
ANR	3948917	Identifier	Z_LVAL_P		3948660	0					
ANR	3948918	ArgumentList	key		3948660	1					
ANR	3948919	Argument	key		3948660	0					
ANR	3948920	Identifier	key		3948660	0					
ANR	3948921	Argument	value		3948660	2					
ANR	3948922	Identifier	value		3948660	0					
ANR	3948923	BreakStatement	break ;	5864:5:173450:173455	3948660	2	True				
ANR	3948924	Label	case IS_STRING :	5865:4:173461:173475	3948660	3	True				
ANR	3948925	Identifier	IS_STRING		3948660	0					
ANR	3948926	ExpressionStatement	"zend_symtable_update ( Z_ARRVAL_P ( result ) , Z_STR_P ( key ) , value )"	5866:5:173482:173543	3948660	4	True				
ANR	3948927	CallExpression	"zend_symtable_update ( Z_ARRVAL_P ( result ) , Z_STR_P ( key ) , value )"		3948660	0					
ANR	3948928	Callee	zend_symtable_update		3948660	0					
ANR	3948929	Identifier	zend_symtable_update		3948660	0					
ANR	3948930	ArgumentList	Z_ARRVAL_P ( result )		3948660	1					
ANR	3948931	Argument	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948932	CallExpression	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948933	Callee	Z_ARRVAL_P		3948660	0					
ANR	3948934	Identifier	Z_ARRVAL_P		3948660	0					
ANR	3948935	ArgumentList	result		3948660	1					
ANR	3948936	Argument	result		3948660	0					
ANR	3948937	Identifier	result		3948660	0					
ANR	3948938	Argument	Z_STR_P ( key )		3948660	1					
ANR	3948939	CallExpression	Z_STR_P ( key )		3948660	0					
ANR	3948940	Callee	Z_STR_P		3948660	0					
ANR	3948941	Identifier	Z_STR_P		3948660	0					
ANR	3948942	ArgumentList	key		3948660	1					
ANR	3948943	Argument	key		3948660	0					
ANR	3948944	Identifier	key		3948660	0					
ANR	3948945	Argument	value		3948660	2					
ANR	3948946	Identifier	value		3948660	0					
ANR	3948947	BreakStatement	break ;	5867:5:173550:173555	3948660	5	True				
ANR	3948948	Label	case IS_DOUBLE :	5868:4:173561:173575	3948660	6	True				
ANR	3948949	Identifier	IS_DOUBLE		3948660	0					
ANR	3948950	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , zend_dval_to_lval ( Z_DVAL_P ( key ) ) , value )"	5869:5:173582:173671	3948660	7	True				
ANR	3948951	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , zend_dval_to_lval ( Z_DVAL_P ( key ) ) , value )"		3948660	0					
ANR	3948952	Callee	zend_hash_index_update		3948660	0					
ANR	3948953	Identifier	zend_hash_index_update		3948660	0					
ANR	3948954	ArgumentList	Z_ARRVAL_P ( result )		3948660	1					
ANR	3948955	Argument	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948956	CallExpression	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948957	Callee	Z_ARRVAL_P		3948660	0					
ANR	3948958	Identifier	Z_ARRVAL_P		3948660	0					
ANR	3948959	ArgumentList	result		3948660	1					
ANR	3948960	Argument	result		3948660	0					
ANR	3948961	Identifier	result		3948660	0					
ANR	3948962	Argument	zend_dval_to_lval ( Z_DVAL_P ( key ) )		3948660	1					
ANR	3948963	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( key ) )		3948660	0					
ANR	3948964	Callee	zend_dval_to_lval		3948660	0					
ANR	3948965	Identifier	zend_dval_to_lval		3948660	0					
ANR	3948966	ArgumentList	Z_DVAL_P ( key )		3948660	1					
ANR	3948967	Argument	Z_DVAL_P ( key )		3948660	0					
ANR	3948968	CallExpression	Z_DVAL_P ( key )		3948660	0					
ANR	3948969	Callee	Z_DVAL_P		3948660	0					
ANR	3948970	Identifier	Z_DVAL_P		3948660	0					
ANR	3948971	ArgumentList	key		3948660	1					
ANR	3948972	Argument	key		3948660	0					
ANR	3948973	Identifier	key		3948660	0					
ANR	3948974	Argument	value		3948660	2					
ANR	3948975	Identifier	value		3948660	0					
ANR	3948976	BreakStatement	break ;	5871:5:173678:173683	3948660	8	True				
ANR	3948977	Label	case IS_FALSE :	5872:4:173689:173702	3948660	9	True				
ANR	3948978	Identifier	IS_FALSE		3948660	0					
ANR	3948979	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 0 , value )"	5873:5:173709:173761	3948660	10	True				
ANR	3948980	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 0 , value )"		3948660	0					
ANR	3948981	Callee	zend_hash_index_update		3948660	0					
ANR	3948982	Identifier	zend_hash_index_update		3948660	0					
ANR	3948983	ArgumentList	Z_ARRVAL_P ( result )		3948660	1					
ANR	3948984	Argument	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948985	CallExpression	Z_ARRVAL_P ( result )		3948660	0					
ANR	3948986	Callee	Z_ARRVAL_P		3948660	0					
ANR	3948987	Identifier	Z_ARRVAL_P		3948660	0					
ANR	3948988	ArgumentList	result		3948660	1					
ANR	3948989	Argument	result		3948660	0					
ANR	3948990	Identifier	result		3948660	0					
ANR	3948991	Argument	0		3948660	1					
ANR	3948992	PrimaryExpression	0		3948660	0					
ANR	3948993	Argument	value		3948660	2					
ANR	3948994	Identifier	value		3948660	0					
ANR	3948995	BreakStatement	break ;	5874:5:173768:173773	3948660	11	True				
ANR	3948996	Label	case IS_TRUE :	5875:4:173779:173791	3948660	12	True				
ANR	3948997	Identifier	IS_TRUE		3948660	0					
ANR	3948998	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 1 , value )"	5876:5:173798:173850	3948660	13	True				
ANR	3948999	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 1 , value )"		3948660	0					
ANR	3949000	Callee	zend_hash_index_update		3948660	0					
ANR	3949001	Identifier	zend_hash_index_update		3948660	0					
ANR	3949002	ArgumentList	Z_ARRVAL_P ( result )		3948660	1					
ANR	3949003	Argument	Z_ARRVAL_P ( result )		3948660	0					
ANR	3949004	CallExpression	Z_ARRVAL_P ( result )		3948660	0					
ANR	3949005	Callee	Z_ARRVAL_P		3948660	0					
ANR	3949006	Identifier	Z_ARRVAL_P		3948660	0					
ANR	3949007	ArgumentList	result		3948660	1					
ANR	3949008	Argument	result		3948660	0					
ANR	3949009	Identifier	result		3948660	0					
ANR	3949010	Argument	1		3948660	1					
ANR	3949011	PrimaryExpression	1		3948660	0					
ANR	3949012	Argument	value		3948660	2					
ANR	3949013	Identifier	value		3948660	0					
ANR	3949014	BreakStatement	break ;	5877:5:173857:173862	3948660	14	True				
ANR	3949015	Label	case IS_NULL :	5878:4:173868:173880	3948660	15	True				
ANR	3949016	Identifier	IS_NULL		3948660	0					
ANR	3949017	ExpressionStatement	"zend_hash_update ( Z_ARRVAL_P ( result ) , ZSTR_EMPTY_ALLOC ( ) , value )"	5879:5:173887:173950	3948660	16	True				
ANR	3949018	CallExpression	"zend_hash_update ( Z_ARRVAL_P ( result ) , ZSTR_EMPTY_ALLOC ( ) , value )"		3948660	0					
ANR	3949019	Callee	zend_hash_update		3948660	0					
ANR	3949020	Identifier	zend_hash_update		3948660	0					
ANR	3949021	ArgumentList	Z_ARRVAL_P ( result )		3948660	1					
ANR	3949022	Argument	Z_ARRVAL_P ( result )		3948660	0					
ANR	3949023	CallExpression	Z_ARRVAL_P ( result )		3948660	0					
ANR	3949024	Callee	Z_ARRVAL_P		3948660	0					
ANR	3949025	Identifier	Z_ARRVAL_P		3948660	0					
ANR	3949026	ArgumentList	result		3948660	1					
ANR	3949027	Argument	result		3948660	0					
ANR	3949028	Identifier	result		3948660	0					
ANR	3949029	Argument	ZSTR_EMPTY_ALLOC ( )		3948660	1					
ANR	3949030	CallExpression	ZSTR_EMPTY_ALLOC ( )		3948660	0					
ANR	3949031	Callee	ZSTR_EMPTY_ALLOC		3948660	0					
ANR	3949032	Identifier	ZSTR_EMPTY_ALLOC		3948660	0					
ANR	3949033	ArgumentList			3948660	1					
ANR	3949034	Argument	value		3948660	2					
ANR	3949035	Identifier	value		3948660	0					
ANR	3949036	BreakStatement	break ;	5880:5:173957:173962	3948660	17	True				
ANR	3949037	Label	default :	5881:4:173968:173975	3948660	18	True				
ANR	3949038	Identifier	default		3948660	0					
ANR	3949039	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Illegal offset type"" )"	5882:5:173982:174041	3948660	19	True				
ANR	3949040	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Illegal offset type"" )"		3948660	0					
ANR	3949041	Callee	zend_error_noreturn		3948660	0					
ANR	3949042	Identifier	zend_error_noreturn		3948660	0					
ANR	3949043	ArgumentList	E_COMPILE_ERROR		3948660	1					
ANR	3949044	Argument	E_COMPILE_ERROR		3948660	0					
ANR	3949045	Identifier	E_COMPILE_ERROR		3948660	0					
ANR	3949046	Argument	"""Illegal offset type"""		3948660	1					
ANR	3949047	PrimaryExpression	"""Illegal offset type"""		3948660	0					
ANR	3949048	BreakStatement	break ;	5883:5:174048:174053	3948660	20	True				
ANR	3949049	ElseStatement	else		3948660	0					
ANR	3949050	CompoundStatement		59:9:1669:1669	3948660	0					
ANR	3949051	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , value )"	5886:3:174074:174128	3948660	0	True				
ANR	3949052	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , value )"		3948660	0					
ANR	3949053	Callee	zend_hash_next_index_insert		3948660	0					
ANR	3949054	Identifier	zend_hash_next_index_insert		3948660	0					
ANR	3949055	ArgumentList	Z_ARRVAL_P ( result )		3948660	1					
ANR	3949056	Argument	Z_ARRVAL_P ( result )		3948660	0					
ANR	3949057	CallExpression	Z_ARRVAL_P ( result )		3948660	0					
ANR	3949058	Callee	Z_ARRVAL_P		3948660	0					
ANR	3949059	Identifier	Z_ARRVAL_P		3948660	0					
ANR	3949060	ArgumentList	result		3948660	1					
ANR	3949061	Argument	result		3948660	0					
ANR	3949062	Identifier	result		3948660	0					
ANR	3949063	Argument	value		3948660	1					
ANR	3949064	Identifier	value		3948660	0					
ANR	3949065	ReturnStatement	return 1 ;	5890:1:174139:174147	3948660	7	True				
ANR	3949066	PrimaryExpression	1		3948660	0					
ANR	3949067	ReturnType	static zend_bool		3948660	1					
ANR	3949068	Identifier	zend_try_ct_eval_array		3948660	2					
ANR	3949069	ParameterList	"zval * result , zend_ast * ast"		3948660	3					
ANR	3949070	Parameter	zval * result	5826:40:172360:172371	3948660	0	True				
ANR	3949071	ParameterType	zval *		3948660	0					
ANR	3949072	Identifier	result		3948660	1					
ANR	3949073	Parameter	zend_ast * ast	5826:54:172374:172386	3948660	1	True				
ANR	3949074	ParameterType	zend_ast *		3948660	0					
ANR	3949075	Identifier	ast		3948660	1					
ANR	3949076	CFGEntryNode	ENTRY		3948660		True				
ANR	3949077	CFGExitNode	EXIT		3948660		True				
ANR	3949078	Symbol	is_constant		3948660						
ANR	3949079	Symbol	ast		3948660						
ANR	3949080	Symbol	E_COMPILE_ERROR		3948660						
ANR	3949081	Symbol	key_ast		3948660						
ANR	3949082	Symbol	elem_ast -> child [ 1 ] -> kind		3948660						
ANR	3949083	Symbol	ZSTR_EMPTY_ALLOC		3948660						
ANR	3949084	Symbol	result		3948660						
ANR	3949085	Symbol	* elem_ast		3948660						
ANR	3949086	Symbol	* elem_ast -> child		3948660						
ANR	3949087	Symbol	zend_dval_to_lval		3948660						
ANR	3949088	Symbol	* * list		3948660						
ANR	3949089	Symbol	value_ast		3948660						
ANR	3949090	Symbol	ZEND_AST_ZVAL		3948660						
ANR	3949091	Symbol	Z_ARRVAL_P		3948660						
ANR	3949092	Symbol	value		3948660						
ANR	3949093	Symbol	key		3948660						
ANR	3949094	Symbol	elem_ast -> child		3948660						
ANR	3949095	Symbol	elem_ast -> child [ 0 ] -> kind		3948660						
ANR	3949096	Symbol	* * * elem_ast		3948660						
ANR	3949097	Symbol	list -> child		3948660						
ANR	3949098	Symbol	elem_ast -> attr		3948660						
ANR	3949099	Symbol	* * elem_ast -> child		3948660						
ANR	3949100	Symbol	i		3948660						
ANR	3949101	Symbol	list		3948660						
ANR	3949102	Symbol	Z_TYPE_P		3948660						
ANR	3949103	Symbol	* * elem_ast		3948660						
ANR	3949104	Symbol	Z_DVAL_P		3948660						
ANR	3949105	Symbol	elem_ast		3948660						
ANR	3949106	Symbol	Z_LVAL_P		3948660						
ANR	3949107	Symbol	zend_ast_get_list		3948660						
ANR	3949108	Symbol	* i		3948660						
ANR	3949109	Symbol	* list		3948660						
ANR	3949110	Symbol	* list -> child		3948660						
ANR	3949111	Symbol	by_ref		3948660						
ANR	3949112	Symbol	Z_REFCOUNTED_P		3948660						
ANR	3949113	Symbol	Z_STR_P		3948660						
ANR	3949114	Symbol	zend_ast_get_zval		3948660						
ANR	3949115	Symbol	list -> children		3948660						
ANR	3949116	Function	zend_compile_binary_op	5894:0:174162:176098							
ANR	3949117	FunctionDef	"zend_compile_binary_op (znode * result , zend_ast * ast)"		3949116	0					
ANR	3949118	CompoundStatement		5895:0:174230:176098	3949116	0					
ANR	3949119	IdentifierDeclStatement	zend_ast * left_ast = ast -> child [ 0 ] ;	5896:1:174233:174267	3949116	0	True				
ANR	3949120	IdentifierDecl	* left_ast = ast -> child [ 0 ]		3949116	0					
ANR	3949121	IdentifierDeclType	zend_ast *		3949116	0					
ANR	3949122	Identifier	left_ast		3949116	1					
ANR	3949123	AssignmentExpression	* left_ast = ast -> child [ 0 ]		3949116	2		=			
ANR	3949124	Identifier	left_ast		3949116	0					
ANR	3949125	ArrayIndexing	ast -> child [ 0 ]		3949116	1					
ANR	3949126	PtrMemberAccess	ast -> child		3949116	0					
ANR	3949127	Identifier	ast		3949116	0					
ANR	3949128	Identifier	child		3949116	1					
ANR	3949129	PrimaryExpression	0		3949116	1					
ANR	3949130	IdentifierDeclStatement	zend_ast * right_ast = ast -> child [ 1 ] ;	5897:1:174270:174305	3949116	1	True				
ANR	3949131	IdentifierDecl	* right_ast = ast -> child [ 1 ]		3949116	0					
ANR	3949132	IdentifierDeclType	zend_ast *		3949116	0					
ANR	3949133	Identifier	right_ast		3949116	1					
ANR	3949134	AssignmentExpression	* right_ast = ast -> child [ 1 ]		3949116	2		=			
ANR	3949135	Identifier	right_ast		3949116	0					
ANR	3949136	ArrayIndexing	ast -> child [ 1 ]		3949116	1					
ANR	3949137	PtrMemberAccess	ast -> child		3949116	0					
ANR	3949138	Identifier	ast		3949116	0					
ANR	3949139	Identifier	child		3949116	1					
ANR	3949140	PrimaryExpression	1		3949116	1					
ANR	3949141	IdentifierDeclStatement	uint32_t opcode = ast -> attr ;	5898:1:174308:174335	3949116	2	True				
ANR	3949142	IdentifierDecl	opcode = ast -> attr		3949116	0					
ANR	3949143	IdentifierDeclType	uint32_t		3949116	0					
ANR	3949144	Identifier	opcode		3949116	1					
ANR	3949145	AssignmentExpression	opcode = ast -> attr		3949116	2		=			
ANR	3949146	Identifier	opcode		3949116	0					
ANR	3949147	PtrMemberAccess	ast -> attr		3949116	1					
ANR	3949148	Identifier	ast		3949116	0					
ANR	3949149	Identifier	attr		3949116	1					
ANR	3949150	IdentifierDeclStatement	"znode left_node , right_node ;"	5900:1:174339:174366	3949116	3	True				
ANR	3949151	IdentifierDecl	left_node		3949116	0					
ANR	3949152	IdentifierDeclType	znode		3949116	0					
ANR	3949153	Identifier	left_node		3949116	1					
ANR	3949154	IdentifierDecl	right_node		3949116	1					
ANR	3949155	IdentifierDeclType	znode		3949116	0					
ANR	3949156	Identifier	right_node		3949116	1					
ANR	3949157	ExpressionStatement	"zend_compile_expr ( & left_node , left_ast )"	5901:1:174369:174408	3949116	4	True				
ANR	3949158	CallExpression	"zend_compile_expr ( & left_node , left_ast )"		3949116	0					
ANR	3949159	Callee	zend_compile_expr		3949116	0					
ANR	3949160	Identifier	zend_compile_expr		3949116	0					
ANR	3949161	ArgumentList	& left_node		3949116	1					
ANR	3949162	Argument	& left_node		3949116	0					
ANR	3949163	UnaryOperationExpression	& left_node		3949116	0					
ANR	3949164	UnaryOperator	&		3949116	0					
ANR	3949165	Identifier	left_node		3949116	1					
ANR	3949166	Argument	left_ast		3949116	1					
ANR	3949167	Identifier	left_ast		3949116	0					
ANR	3949168	ExpressionStatement	"zend_compile_expr ( & right_node , right_ast )"	5902:1:174411:174452	3949116	5	True				
ANR	3949169	CallExpression	"zend_compile_expr ( & right_node , right_ast )"		3949116	0					
ANR	3949170	Callee	zend_compile_expr		3949116	0					
ANR	3949171	Identifier	zend_compile_expr		3949116	0					
ANR	3949172	ArgumentList	& right_node		3949116	1					
ANR	3949173	Argument	& right_node		3949116	0					
ANR	3949174	UnaryOperationExpression	& right_node		3949116	0					
ANR	3949175	UnaryOperator	&		3949116	0					
ANR	3949176	Identifier	right_node		3949116	1					
ANR	3949177	Argument	right_ast		3949116	1					
ANR	3949178	Identifier	right_ast		3949116	0					
ANR	3949179	IfStatement	if ( left_node . op_type == IS_CONST && right_node . op_type == IS_CONST )		3949116	6					
ANR	3949180	Condition	left_node . op_type == IS_CONST && right_node . op_type == IS_CONST	5904:5:174460:174522	3949116	0	True				
ANR	3949181	AndExpression	left_node . op_type == IS_CONST && right_node . op_type == IS_CONST		3949116	0		&&			
ANR	3949182	EqualityExpression	left_node . op_type == IS_CONST		3949116	0		==			
ANR	3949183	MemberAccess	left_node . op_type		3949116	0					
ANR	3949184	Identifier	left_node		3949116	0					
ANR	3949185	Identifier	op_type		3949116	1					
ANR	3949186	Identifier	IS_CONST		3949116	1					
ANR	3949187	EqualityExpression	right_node . op_type == IS_CONST		3949116	1		==			
ANR	3949188	MemberAccess	right_node . op_type		3949116	0					
ANR	3949189	Identifier	right_node		3949116	0					
ANR	3949190	Identifier	op_type		3949116	1					
ANR	3949191	Identifier	IS_CONST		3949116	1					
ANR	3949192	CompoundStatement		10:70:294:294	3949116	1					
ANR	3949193	IfStatement	"if ( zend_try_ct_eval_binary_op ( & result -> u . constant , opcode , & left_node . u . constant , & right_node . u . constant ) )"		3949116	0					
ANR	3949194	Condition	"zend_try_ct_eval_binary_op ( & result -> u . constant , opcode , & left_node . u . constant , & right_node . u . constant )"	5905:6:174533:174638	3949116	0	True				
ANR	3949195	CallExpression	"zend_try_ct_eval_binary_op ( & result -> u . constant , opcode , & left_node . u . constant , & right_node . u . constant )"		3949116	0					
ANR	3949196	Callee	zend_try_ct_eval_binary_op		3949116	0					
ANR	3949197	Identifier	zend_try_ct_eval_binary_op		3949116	0					
ANR	3949198	ArgumentList	& result -> u . constant		3949116	1					
ANR	3949199	Argument	& result -> u . constant		3949116	0					
ANR	3949200	UnaryOperationExpression	& result -> u . constant		3949116	0					
ANR	3949201	UnaryOperator	&		3949116	0					
ANR	3949202	MemberAccess	result -> u . constant		3949116	1					
ANR	3949203	PtrMemberAccess	result -> u		3949116	0					
ANR	3949204	Identifier	result		3949116	0					
ANR	3949205	Identifier	u		3949116	1					
ANR	3949206	Identifier	constant		3949116	1					
ANR	3949207	Argument	opcode		3949116	1					
ANR	3949208	Identifier	opcode		3949116	0					
ANR	3949209	Argument	& left_node . u . constant		3949116	2					
ANR	3949210	UnaryOperationExpression	& left_node . u . constant		3949116	0					
ANR	3949211	UnaryOperator	&		3949116	0					
ANR	3949212	MemberAccess	left_node . u . constant		3949116	1					
ANR	3949213	MemberAccess	left_node . u		3949116	0					
ANR	3949214	Identifier	left_node		3949116	0					
ANR	3949215	Identifier	u		3949116	1					
ANR	3949216	Identifier	constant		3949116	1					
ANR	3949217	Argument	& right_node . u . constant		3949116	3					
ANR	3949218	UnaryOperationExpression	& right_node . u . constant		3949116	0					
ANR	3949219	UnaryOperator	&		3949116	0					
ANR	3949220	MemberAccess	right_node . u . constant		3949116	1					
ANR	3949221	MemberAccess	right_node . u		3949116	0					
ANR	3949222	Identifier	right_node		3949116	0					
ANR	3949223	Identifier	u		3949116	1					
ANR	3949224	Identifier	constant		3949116	1					
ANR	3949225	CompoundStatement		13:4:413:413	3949116	1					
ANR	3949226	ExpressionStatement	result -> op_type = IS_CONST	5908:3:174649:174675	3949116	0	True				
ANR	3949227	AssignmentExpression	result -> op_type = IS_CONST		3949116	0		=			
ANR	3949228	PtrMemberAccess	result -> op_type		3949116	0					
ANR	3949229	Identifier	result		3949116	0					
ANR	3949230	Identifier	op_type		3949116	1					
ANR	3949231	Identifier	IS_CONST		3949116	1					
ANR	3949232	ExpressionStatement	zval_ptr_dtor ( & left_node . u . constant )	5909:3:174680:174716	3949116	1	True				
ANR	3949233	CallExpression	zval_ptr_dtor ( & left_node . u . constant )		3949116	0					
ANR	3949234	Callee	zval_ptr_dtor		3949116	0					
ANR	3949235	Identifier	zval_ptr_dtor		3949116	0					
ANR	3949236	ArgumentList	& left_node . u . constant		3949116	1					
ANR	3949237	Argument	& left_node . u . constant		3949116	0					
ANR	3949238	UnaryOperationExpression	& left_node . u . constant		3949116	0					
ANR	3949239	UnaryOperator	&		3949116	0					
ANR	3949240	MemberAccess	left_node . u . constant		3949116	1					
ANR	3949241	MemberAccess	left_node . u		3949116	0					
ANR	3949242	Identifier	left_node		3949116	0					
ANR	3949243	Identifier	u		3949116	1					
ANR	3949244	Identifier	constant		3949116	1					
ANR	3949245	ExpressionStatement	zval_ptr_dtor ( & right_node . u . constant )	5910:3:174721:174758	3949116	2	True				
ANR	3949246	CallExpression	zval_ptr_dtor ( & right_node . u . constant )		3949116	0					
ANR	3949247	Callee	zval_ptr_dtor		3949116	0					
ANR	3949248	Identifier	zval_ptr_dtor		3949116	0					
ANR	3949249	ArgumentList	& right_node . u . constant		3949116	1					
ANR	3949250	Argument	& right_node . u . constant		3949116	0					
ANR	3949251	UnaryOperationExpression	& right_node . u . constant		3949116	0					
ANR	3949252	UnaryOperator	&		3949116	0					
ANR	3949253	MemberAccess	right_node . u . constant		3949116	1					
ANR	3949254	MemberAccess	right_node . u		3949116	0					
ANR	3949255	Identifier	right_node		3949116	0					
ANR	3949256	Identifier	u		3949116	1					
ANR	3949257	Identifier	constant		3949116	1					
ANR	3949258	ReturnStatement	return ;	5911:3:174763:174769	3949116	3	True				
ANR	3949259	DoStatement	do		3949116	7					
ANR	3949260	CompoundStatement		21:4:552:552	3949116	0					
ANR	3949261	IfStatement	if ( opcode == ZEND_IS_EQUAL || opcode == ZEND_IS_NOT_EQUAL )		3949116	0					
ANR	3949262	Condition	opcode == ZEND_IS_EQUAL || opcode == ZEND_IS_NOT_EQUAL	5916:6:174791:174844	3949116	0	True				
ANR	3949263	OrExpression	opcode == ZEND_IS_EQUAL || opcode == ZEND_IS_NOT_EQUAL		3949116	0		||			
ANR	3949264	EqualityExpression	opcode == ZEND_IS_EQUAL		3949116	0		==			
ANR	3949265	Identifier	opcode		3949116	0					
ANR	3949266	Identifier	ZEND_IS_EQUAL		3949116	1					
ANR	3949267	EqualityExpression	opcode == ZEND_IS_NOT_EQUAL		3949116	1		==			
ANR	3949268	Identifier	opcode		3949116	0					
ANR	3949269	Identifier	ZEND_IS_NOT_EQUAL		3949116	1					
ANR	3949270	CompoundStatement		22:62:616:616	3949116	1					
ANR	3949271	IfStatement	if ( left_node . op_type == IS_CONST )		3949116	0					
ANR	3949272	Condition	left_node . op_type == IS_CONST	5917:7:174856:174884	3949116	0	True				
ANR	3949273	EqualityExpression	left_node . op_type == IS_CONST		3949116	0		==			
ANR	3949274	MemberAccess	left_node . op_type		3949116	0					
ANR	3949275	Identifier	left_node		3949116	0					
ANR	3949276	Identifier	op_type		3949116	1					
ANR	3949277	Identifier	IS_CONST		3949116	1					
ANR	3949278	CompoundStatement		23:38:656:656	3949116	1					
ANR	3949279	IfStatement	if ( Z_TYPE ( left_node . u . constant ) == IS_FALSE )		3949116	0					
ANR	3949280	Condition	Z_TYPE ( left_node . u . constant ) == IS_FALSE	5918:8:174897:174936	3949116	0	True				
ANR	3949281	EqualityExpression	Z_TYPE ( left_node . u . constant ) == IS_FALSE		3949116	0		==			
ANR	3949282	CallExpression	Z_TYPE ( left_node . u . constant )		3949116	0					
ANR	3949283	Callee	Z_TYPE		3949116	0					
ANR	3949284	Identifier	Z_TYPE		3949116	0					
ANR	3949285	ArgumentList	left_node . u . constant		3949116	1					
ANR	3949286	Argument	left_node . u . constant		3949116	0					
ANR	3949287	MemberAccess	left_node . u . constant		3949116	0					
ANR	3949288	MemberAccess	left_node . u		3949116	0					
ANR	3949289	Identifier	left_node		3949116	0					
ANR	3949290	Identifier	u		3949116	1					
ANR	3949291	Identifier	constant		3949116	1					
ANR	3949292	Identifier	IS_FALSE		3949116	1					
ANR	3949293	CompoundStatement		24:50:708:708	3949116	1					
ANR	3949294	ExpressionStatement	opcode = ( opcode == ZEND_IS_NOT_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT	5919:5:174946:175012	3949116	0	True				
ANR	3949295	AssignmentExpression	opcode = ( opcode == ZEND_IS_NOT_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	0		=			
ANR	3949296	Identifier	opcode		3949116	0					
ANR	3949297	ConditionalExpression	( opcode == ZEND_IS_NOT_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	1					
ANR	3949298	Condition	opcode == ZEND_IS_NOT_EQUAL		3949116	0					
ANR	3949299	EqualityExpression	opcode == ZEND_IS_NOT_EQUAL		3949116	0		==			
ANR	3949300	Identifier	opcode		3949116	0					
ANR	3949301	Identifier	ZEND_IS_NOT_EQUAL		3949116	1					
ANR	3949302	Identifier	ZEND_BOOL		3949116	1					
ANR	3949303	Identifier	ZEND_BOOL_NOT		3949116	2					
ANR	3949304	ExpressionStatement	"zend_emit_op_tmp ( result , opcode , & right_node , NULL )"	5920:5:175019:175070	3949116	1	True				
ANR	3949305	CallExpression	"zend_emit_op_tmp ( result , opcode , & right_node , NULL )"		3949116	0					
ANR	3949306	Callee	zend_emit_op_tmp		3949116	0					
ANR	3949307	Identifier	zend_emit_op_tmp		3949116	0					
ANR	3949308	ArgumentList	result		3949116	1					
ANR	3949309	Argument	result		3949116	0					
ANR	3949310	Identifier	result		3949116	0					
ANR	3949311	Argument	opcode		3949116	1					
ANR	3949312	Identifier	opcode		3949116	0					
ANR	3949313	Argument	& right_node		3949116	2					
ANR	3949314	UnaryOperationExpression	& right_node		3949116	0					
ANR	3949315	UnaryOperator	&		3949116	0					
ANR	3949316	Identifier	right_node		3949116	1					
ANR	3949317	Argument	NULL		3949116	3					
ANR	3949318	Identifier	NULL		3949116	0					
ANR	3949319	BreakStatement	break ;	5921:5:175077:175082	3949116	2	True				
ANR	3949320	ElseStatement	else		3949116	0					
ANR	3949321	IfStatement	if ( Z_TYPE ( left_node . u . constant ) == IS_TRUE )		3949116	0					
ANR	3949322	Condition	Z_TYPE ( left_node . u . constant ) == IS_TRUE	5922:15:175099:175137	3949116	0	True				
ANR	3949323	EqualityExpression	Z_TYPE ( left_node . u . constant ) == IS_TRUE		3949116	0		==			
ANR	3949324	CallExpression	Z_TYPE ( left_node . u . constant )		3949116	0					
ANR	3949325	Callee	Z_TYPE		3949116	0					
ANR	3949326	Identifier	Z_TYPE		3949116	0					
ANR	3949327	ArgumentList	left_node . u . constant		3949116	1					
ANR	3949328	Argument	left_node . u . constant		3949116	0					
ANR	3949329	MemberAccess	left_node . u . constant		3949116	0					
ANR	3949330	MemberAccess	left_node . u		3949116	0					
ANR	3949331	Identifier	left_node		3949116	0					
ANR	3949332	Identifier	u		3949116	1					
ANR	3949333	Identifier	constant		3949116	1					
ANR	3949334	Identifier	IS_TRUE		3949116	1					
ANR	3949335	CompoundStatement		28:56:909:909	3949116	1					
ANR	3949336	ExpressionStatement	opcode = ( opcode == ZEND_IS_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT	5923:5:175147:175209	3949116	0	True				
ANR	3949337	AssignmentExpression	opcode = ( opcode == ZEND_IS_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	0		=			
ANR	3949338	Identifier	opcode		3949116	0					
ANR	3949339	ConditionalExpression	( opcode == ZEND_IS_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	1					
ANR	3949340	Condition	opcode == ZEND_IS_EQUAL		3949116	0					
ANR	3949341	EqualityExpression	opcode == ZEND_IS_EQUAL		3949116	0		==			
ANR	3949342	Identifier	opcode		3949116	0					
ANR	3949343	Identifier	ZEND_IS_EQUAL		3949116	1					
ANR	3949344	Identifier	ZEND_BOOL		3949116	1					
ANR	3949345	Identifier	ZEND_BOOL_NOT		3949116	2					
ANR	3949346	ExpressionStatement	"zend_emit_op_tmp ( result , opcode , & right_node , NULL )"	5924:5:175216:175267	3949116	1	True				
ANR	3949347	CallExpression	"zend_emit_op_tmp ( result , opcode , & right_node , NULL )"		3949116	0					
ANR	3949348	Callee	zend_emit_op_tmp		3949116	0					
ANR	3949349	Identifier	zend_emit_op_tmp		3949116	0					
ANR	3949350	ArgumentList	result		3949116	1					
ANR	3949351	Argument	result		3949116	0					
ANR	3949352	Identifier	result		3949116	0					
ANR	3949353	Argument	opcode		3949116	1					
ANR	3949354	Identifier	opcode		3949116	0					
ANR	3949355	Argument	& right_node		3949116	2					
ANR	3949356	UnaryOperationExpression	& right_node		3949116	0					
ANR	3949357	UnaryOperator	&		3949116	0					
ANR	3949358	Identifier	right_node		3949116	1					
ANR	3949359	Argument	NULL		3949116	3					
ANR	3949360	Identifier	NULL		3949116	0					
ANR	3949361	BreakStatement	break ;	5925:5:175274:175279	3949116	2	True				
ANR	3949362	ElseStatement	else		3949116	0					
ANR	3949363	IfStatement	if ( right_node . op_type == IS_CONST )		3949116	0					
ANR	3949364	Condition	right_node . op_type == IS_CONST	5927:14:175301:175330	3949116	0	True				
ANR	3949365	EqualityExpression	right_node . op_type == IS_CONST		3949116	0		==			
ANR	3949366	MemberAccess	right_node . op_type		3949116	0					
ANR	3949367	Identifier	right_node		3949116	0					
ANR	3949368	Identifier	op_type		3949116	1					
ANR	3949369	Identifier	IS_CONST		3949116	1					
ANR	3949370	CompoundStatement		33:46:1102:1102	3949116	1					
ANR	3949371	IfStatement	if ( Z_TYPE ( right_node . u . constant ) == IS_FALSE )		3949116	0					
ANR	3949372	Condition	Z_TYPE ( right_node . u . constant ) == IS_FALSE	5928:8:175343:175383	3949116	0	True				
ANR	3949373	EqualityExpression	Z_TYPE ( right_node . u . constant ) == IS_FALSE		3949116	0		==			
ANR	3949374	CallExpression	Z_TYPE ( right_node . u . constant )		3949116	0					
ANR	3949375	Callee	Z_TYPE		3949116	0					
ANR	3949376	Identifier	Z_TYPE		3949116	0					
ANR	3949377	ArgumentList	right_node . u . constant		3949116	1					
ANR	3949378	Argument	right_node . u . constant		3949116	0					
ANR	3949379	MemberAccess	right_node . u . constant		3949116	0					
ANR	3949380	MemberAccess	right_node . u		3949116	0					
ANR	3949381	Identifier	right_node		3949116	0					
ANR	3949382	Identifier	u		3949116	1					
ANR	3949383	Identifier	constant		3949116	1					
ANR	3949384	Identifier	IS_FALSE		3949116	1					
ANR	3949385	CompoundStatement		34:51:1155:1155	3949116	1					
ANR	3949386	ExpressionStatement	opcode = ( opcode == ZEND_IS_NOT_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT	5929:5:175393:175459	3949116	0	True				
ANR	3949387	AssignmentExpression	opcode = ( opcode == ZEND_IS_NOT_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	0		=			
ANR	3949388	Identifier	opcode		3949116	0					
ANR	3949389	ConditionalExpression	( opcode == ZEND_IS_NOT_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	1					
ANR	3949390	Condition	opcode == ZEND_IS_NOT_EQUAL		3949116	0					
ANR	3949391	EqualityExpression	opcode == ZEND_IS_NOT_EQUAL		3949116	0		==			
ANR	3949392	Identifier	opcode		3949116	0					
ANR	3949393	Identifier	ZEND_IS_NOT_EQUAL		3949116	1					
ANR	3949394	Identifier	ZEND_BOOL		3949116	1					
ANR	3949395	Identifier	ZEND_BOOL_NOT		3949116	2					
ANR	3949396	ExpressionStatement	"zend_emit_op_tmp ( result , opcode , & left_node , NULL )"	5930:5:175466:175516	3949116	1	True				
ANR	3949397	CallExpression	"zend_emit_op_tmp ( result , opcode , & left_node , NULL )"		3949116	0					
ANR	3949398	Callee	zend_emit_op_tmp		3949116	0					
ANR	3949399	Identifier	zend_emit_op_tmp		3949116	0					
ANR	3949400	ArgumentList	result		3949116	1					
ANR	3949401	Argument	result		3949116	0					
ANR	3949402	Identifier	result		3949116	0					
ANR	3949403	Argument	opcode		3949116	1					
ANR	3949404	Identifier	opcode		3949116	0					
ANR	3949405	Argument	& left_node		3949116	2					
ANR	3949406	UnaryOperationExpression	& left_node		3949116	0					
ANR	3949407	UnaryOperator	&		3949116	0					
ANR	3949408	Identifier	left_node		3949116	1					
ANR	3949409	Argument	NULL		3949116	3					
ANR	3949410	Identifier	NULL		3949116	0					
ANR	3949411	BreakStatement	break ;	5931:5:175523:175528	3949116	2	True				
ANR	3949412	ElseStatement	else		3949116	0					
ANR	3949413	IfStatement	if ( Z_TYPE ( right_node . u . constant ) == IS_TRUE )		3949116	0					
ANR	3949414	Condition	Z_TYPE ( right_node . u . constant ) == IS_TRUE	5932:15:175545:175584	3949116	0	True				
ANR	3949415	EqualityExpression	Z_TYPE ( right_node . u . constant ) == IS_TRUE		3949116	0		==			
ANR	3949416	CallExpression	Z_TYPE ( right_node . u . constant )		3949116	0					
ANR	3949417	Callee	Z_TYPE		3949116	0					
ANR	3949418	Identifier	Z_TYPE		3949116	0					
ANR	3949419	ArgumentList	right_node . u . constant		3949116	1					
ANR	3949420	Argument	right_node . u . constant		3949116	0					
ANR	3949421	MemberAccess	right_node . u . constant		3949116	0					
ANR	3949422	MemberAccess	right_node . u		3949116	0					
ANR	3949423	Identifier	right_node		3949116	0					
ANR	3949424	Identifier	u		3949116	1					
ANR	3949425	Identifier	constant		3949116	1					
ANR	3949426	Identifier	IS_TRUE		3949116	1					
ANR	3949427	CompoundStatement		38:57:1356:1356	3949116	1					
ANR	3949428	ExpressionStatement	opcode = ( opcode == ZEND_IS_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT	5933:5:175594:175656	3949116	0	True				
ANR	3949429	AssignmentExpression	opcode = ( opcode == ZEND_IS_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	0		=			
ANR	3949430	Identifier	opcode		3949116	0					
ANR	3949431	ConditionalExpression	( opcode == ZEND_IS_EQUAL ) ? ZEND_BOOL : ZEND_BOOL_NOT		3949116	1					
ANR	3949432	Condition	opcode == ZEND_IS_EQUAL		3949116	0					
ANR	3949433	EqualityExpression	opcode == ZEND_IS_EQUAL		3949116	0		==			
ANR	3949434	Identifier	opcode		3949116	0					
ANR	3949435	Identifier	ZEND_IS_EQUAL		3949116	1					
ANR	3949436	Identifier	ZEND_BOOL		3949116	1					
ANR	3949437	Identifier	ZEND_BOOL_NOT		3949116	2					
ANR	3949438	ExpressionStatement	"zend_emit_op_tmp ( result , opcode , & left_node , NULL )"	5934:5:175663:175713	3949116	1	True				
ANR	3949439	CallExpression	"zend_emit_op_tmp ( result , opcode , & left_node , NULL )"		3949116	0					
ANR	3949440	Callee	zend_emit_op_tmp		3949116	0					
ANR	3949441	Identifier	zend_emit_op_tmp		3949116	0					
ANR	3949442	ArgumentList	result		3949116	1					
ANR	3949443	Argument	result		3949116	0					
ANR	3949444	Identifier	result		3949116	0					
ANR	3949445	Argument	opcode		3949116	1					
ANR	3949446	Identifier	opcode		3949116	0					
ANR	3949447	Argument	& left_node		3949116	2					
ANR	3949448	UnaryOperationExpression	& left_node		3949116	0					
ANR	3949449	UnaryOperator	&		3949116	0					
ANR	3949450	Identifier	left_node		3949116	1					
ANR	3949451	Argument	NULL		3949116	3					
ANR	3949452	Identifier	NULL		3949116	0					
ANR	3949453	BreakStatement	break ;	5935:5:175720:175725	3949116	2	True				
ANR	3949454	IfStatement	if ( opcode == ZEND_CONCAT )		3949116	1					
ANR	3949455	Condition	opcode == ZEND_CONCAT	5939:6:175748:175768	3949116	0	True				
ANR	3949456	EqualityExpression	opcode == ZEND_CONCAT		3949116	0		==			
ANR	3949457	Identifier	opcode		3949116	0					
ANR	3949458	Identifier	ZEND_CONCAT		3949116	1					
ANR	3949459	CompoundStatement		45:29:1540:1540	3949116	1					
ANR	3949460	IfStatement	if ( left_node . op_type == IS_CONST )		3949116	0					
ANR	3949461	Condition	left_node . op_type == IS_CONST	5941:7:175842:175870	3949116	0	True				
ANR	3949462	EqualityExpression	left_node . op_type == IS_CONST		3949116	0		==			
ANR	3949463	MemberAccess	left_node . op_type		3949116	0					
ANR	3949464	Identifier	left_node		3949116	0					
ANR	3949465	Identifier	op_type		3949116	1					
ANR	3949466	Identifier	IS_CONST		3949116	1					
ANR	3949467	CompoundStatement		47:38:1642:1642	3949116	1					
ANR	3949468	ExpressionStatement	convert_to_string ( & left_node . u . constant )	5942:4:175879:175919	3949116	0	True				
ANR	3949469	CallExpression	convert_to_string ( & left_node . u . constant )		3949116	0					
ANR	3949470	Callee	convert_to_string		3949116	0					
ANR	3949471	Identifier	convert_to_string		3949116	0					
ANR	3949472	ArgumentList	& left_node . u . constant		3949116	1					
ANR	3949473	Argument	& left_node . u . constant		3949116	0					
ANR	3949474	UnaryOperationExpression	& left_node . u . constant		3949116	0					
ANR	3949475	UnaryOperator	&		3949116	0					
ANR	3949476	MemberAccess	left_node . u . constant		3949116	1					
ANR	3949477	MemberAccess	left_node . u		3949116	0					
ANR	3949478	Identifier	left_node		3949116	0					
ANR	3949479	Identifier	u		3949116	1					
ANR	3949480	Identifier	constant		3949116	1					
ANR	3949481	IfStatement	if ( right_node . op_type == IS_CONST )		3949116	1					
ANR	3949482	Condition	right_node . op_type == IS_CONST	5944:7:175933:175962	3949116	0	True				
ANR	3949483	EqualityExpression	right_node . op_type == IS_CONST		3949116	0		==			
ANR	3949484	MemberAccess	right_node . op_type		3949116	0					
ANR	3949485	Identifier	right_node		3949116	0					
ANR	3949486	Identifier	op_type		3949116	1					
ANR	3949487	Identifier	IS_CONST		3949116	1					
ANR	3949488	CompoundStatement		50:39:1734:1734	3949116	1					
ANR	3949489	ExpressionStatement	convert_to_string ( & right_node . u . constant )	5945:4:175971:176012	3949116	0	True				
ANR	3949490	CallExpression	convert_to_string ( & right_node . u . constant )		3949116	0					
ANR	3949491	Callee	convert_to_string		3949116	0					
ANR	3949492	Identifier	convert_to_string		3949116	0					
ANR	3949493	ArgumentList	& right_node . u . constant		3949116	1					
ANR	3949494	Argument	& right_node . u . constant		3949116	0					
ANR	3949495	UnaryOperationExpression	& right_node . u . constant		3949116	0					
ANR	3949496	UnaryOperator	&		3949116	0					
ANR	3949497	MemberAccess	right_node . u . constant		3949116	1					
ANR	3949498	MemberAccess	right_node . u		3949116	0					
ANR	3949499	Identifier	right_node		3949116	0					
ANR	3949500	Identifier	u		3949116	1					
ANR	3949501	Identifier	constant		3949116	1					
ANR	3949502	ExpressionStatement	"zend_emit_op_tmp ( result , opcode , & left_node , & right_node )"	5948:2:176025:176082	3949116	2	True				
ANR	3949503	CallExpression	"zend_emit_op_tmp ( result , opcode , & left_node , & right_node )"		3949116	0					
ANR	3949504	Callee	zend_emit_op_tmp		3949116	0					
ANR	3949505	Identifier	zend_emit_op_tmp		3949116	0					
ANR	3949506	ArgumentList	result		3949116	1					
ANR	3949507	Argument	result		3949116	0					
ANR	3949508	Identifier	result		3949116	0					
ANR	3949509	Argument	opcode		3949116	1					
ANR	3949510	Identifier	opcode		3949116	0					
ANR	3949511	Argument	& left_node		3949116	2					
ANR	3949512	UnaryOperationExpression	& left_node		3949116	0					
ANR	3949513	UnaryOperator	&		3949116	0					
ANR	3949514	Identifier	left_node		3949116	1					
ANR	3949515	Argument	& right_node		3949116	3					
ANR	3949516	UnaryOperationExpression	& right_node		3949116	0					
ANR	3949517	UnaryOperator	&		3949116	0					
ANR	3949518	Identifier	right_node		3949116	1					
ANR	3949519	Condition	0	5949:10:176094:176094	3949116	1	True				
ANR	3949520	PrimaryExpression	0		3949116	0					
ANR	3949521	ReturnType	void		3949116	1					
ANR	3949522	Identifier	zend_compile_binary_op		3949116	2					
ANR	3949523	ParameterList	"znode * result , zend_ast * ast"		3949116	3					
ANR	3949524	Parameter	znode * result	5894:28:174190:174202	3949116	0	True				
ANR	3949525	ParameterType	znode *		3949116	0					
ANR	3949526	Identifier	result		3949116	1					
ANR	3949527	Parameter	zend_ast * ast	5894:43:174205:174217	3949116	1	True				
ANR	3949528	ParameterType	zend_ast *		3949116	0					
ANR	3949529	Identifier	ast		3949116	1					
ANR	3949530	CFGEntryNode	ENTRY		3949116		True				
ANR	3949531	CFGExitNode	EXIT		3949116		True				
ANR	3949532	Symbol	right_node . u		3949116						
ANR	3949533	Symbol	ZEND_BOOL		3949116						
ANR	3949534	Symbol	right_node		3949116						
ANR	3949535	Symbol	ast		3949116						
ANR	3949536	Symbol	& right_node		3949116						
ANR	3949537	Symbol	Z_TYPE		3949116						
ANR	3949538	Symbol	opcode		3949116						
ANR	3949539	Symbol	result -> op_type		3949116						
ANR	3949540	Symbol	result -> u		3949116						
ANR	3949541	Symbol	right_node . u . constant		3949116						
ANR	3949542	Symbol	result		3949116						
ANR	3949543	Symbol	& left_node . u . constant		3949116						
ANR	3949544	Symbol	* ast		3949116						
ANR	3949545	Symbol	* result		3949116						
ANR	3949546	Symbol	* * ast		3949116						
ANR	3949547	Symbol	zend_try_ct_eval_binary_op		3949116						
ANR	3949548	Symbol	& result -> u . constant		3949116						
ANR	3949549	Symbol	left_node . u		3949116						
ANR	3949550	Symbol	& right_node . u		3949116						
ANR	3949551	Symbol	IS_FALSE		3949116						
ANR	3949552	Symbol	right_node . op_type		3949116						
ANR	3949553	Symbol	& right_node . u . constant		3949116						
ANR	3949554	Symbol	ast -> attr		3949116						
ANR	3949555	Symbol	left_node . op_type		3949116						
ANR	3949556	Symbol	right_ast		3949116						
ANR	3949557	Symbol	IS_CONST		3949116						
ANR	3949558	Symbol	NULL		3949116						
ANR	3949559	Symbol	& result -> u		3949116						
ANR	3949560	Symbol	& left_node . u		3949116						
ANR	3949561	Symbol	IS_TRUE		3949116						
ANR	3949562	Symbol	left_node		3949116						
ANR	3949563	Symbol	ZEND_IS_EQUAL		3949116						
ANR	3949564	Symbol	left_node . u . constant		3949116						
ANR	3949565	Symbol	ZEND_CONCAT		3949116						
ANR	3949566	Symbol	& left_node		3949116						
ANR	3949567	Symbol	ZEND_BOOL_NOT		3949116						
ANR	3949568	Symbol	* ast -> child		3949116						
ANR	3949569	Symbol	left_ast		3949116						
ANR	3949570	Symbol	ast -> child		3949116						
ANR	3949571	Symbol	ZEND_IS_NOT_EQUAL		3949116						
ANR	3949572	Function	zend_compile_greater	5955:0:176228:177009							
ANR	3949573	FunctionDef	"zend_compile_greater (znode * result , zend_ast * ast)"		3949572	0					
ANR	3949574	CompoundStatement		5956:0:176294:177009	3949572	0					
ANR	3949575	IdentifierDeclStatement	zend_ast * left_ast = ast -> child [ 0 ] ;	5957:1:176297:176331	3949572	0	True				
ANR	3949576	IdentifierDecl	* left_ast = ast -> child [ 0 ]		3949572	0					
ANR	3949577	IdentifierDeclType	zend_ast *		3949572	0					
ANR	3949578	Identifier	left_ast		3949572	1					
ANR	3949579	AssignmentExpression	* left_ast = ast -> child [ 0 ]		3949572	2		=			
ANR	3949580	Identifier	left_ast		3949572	0					
ANR	3949581	ArrayIndexing	ast -> child [ 0 ]		3949572	1					
ANR	3949582	PtrMemberAccess	ast -> child		3949572	0					
ANR	3949583	Identifier	ast		3949572	0					
ANR	3949584	Identifier	child		3949572	1					
ANR	3949585	PrimaryExpression	0		3949572	1					
ANR	3949586	IdentifierDeclStatement	zend_ast * right_ast = ast -> child [ 1 ] ;	5958:1:176334:176369	3949572	1	True				
ANR	3949587	IdentifierDecl	* right_ast = ast -> child [ 1 ]		3949572	0					
ANR	3949588	IdentifierDeclType	zend_ast *		3949572	0					
ANR	3949589	Identifier	right_ast		3949572	1					
ANR	3949590	AssignmentExpression	* right_ast = ast -> child [ 1 ]		3949572	2		=			
ANR	3949591	Identifier	right_ast		3949572	0					
ANR	3949592	ArrayIndexing	ast -> child [ 1 ]		3949572	1					
ANR	3949593	PtrMemberAccess	ast -> child		3949572	0					
ANR	3949594	Identifier	ast		3949572	0					
ANR	3949595	Identifier	child		3949572	1					
ANR	3949596	PrimaryExpression	1		3949572	1					
ANR	3949597	IdentifierDeclStatement	"znode left_node , right_node ;"	5959:1:176372:176399	3949572	2	True				
ANR	3949598	IdentifierDecl	left_node		3949572	0					
ANR	3949599	IdentifierDeclType	znode		3949572	0					
ANR	3949600	Identifier	left_node		3949572	1					
ANR	3949601	IdentifierDecl	right_node		3949572	1					
ANR	3949602	IdentifierDeclType	znode		3949572	0					
ANR	3949603	Identifier	right_node		3949572	1					
ANR	3949604	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_GREATER || ast -> kind == ZEND_AST_GREATER_EQUAL )	5961:1:176403:176484	3949572	3	True				
ANR	3949605	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_GREATER || ast -> kind == ZEND_AST_GREATER_EQUAL )		3949572	0					
ANR	3949606	Callee	ZEND_ASSERT		3949572	0					
ANR	3949607	Identifier	ZEND_ASSERT		3949572	0					
ANR	3949608	ArgumentList	ast -> kind == ZEND_AST_GREATER || ast -> kind == ZEND_AST_GREATER_EQUAL		3949572	1					
ANR	3949609	Argument	ast -> kind == ZEND_AST_GREATER || ast -> kind == ZEND_AST_GREATER_EQUAL		3949572	0					
ANR	3949610	OrExpression	ast -> kind == ZEND_AST_GREATER || ast -> kind == ZEND_AST_GREATER_EQUAL		3949572	0		||			
ANR	3949611	EqualityExpression	ast -> kind == ZEND_AST_GREATER		3949572	0		==			
ANR	3949612	PtrMemberAccess	ast -> kind		3949572	0					
ANR	3949613	Identifier	ast		3949572	0					
ANR	3949614	Identifier	kind		3949572	1					
ANR	3949615	Identifier	ZEND_AST_GREATER		3949572	1					
ANR	3949616	EqualityExpression	ast -> kind == ZEND_AST_GREATER_EQUAL		3949572	1		==			
ANR	3949617	PtrMemberAccess	ast -> kind		3949572	0					
ANR	3949618	Identifier	ast		3949572	0					
ANR	3949619	Identifier	kind		3949572	1					
ANR	3949620	Identifier	ZEND_AST_GREATER_EQUAL		3949572	1					
ANR	3949621	ExpressionStatement	"zend_compile_expr ( & left_node , left_ast )"	5963:1:176488:176527	3949572	4	True				
ANR	3949622	CallExpression	"zend_compile_expr ( & left_node , left_ast )"		3949572	0					
ANR	3949623	Callee	zend_compile_expr		3949572	0					
ANR	3949624	Identifier	zend_compile_expr		3949572	0					
ANR	3949625	ArgumentList	& left_node		3949572	1					
ANR	3949626	Argument	& left_node		3949572	0					
ANR	3949627	UnaryOperationExpression	& left_node		3949572	0					
ANR	3949628	UnaryOperator	&		3949572	0					
ANR	3949629	Identifier	left_node		3949572	1					
ANR	3949630	Argument	left_ast		3949572	1					
ANR	3949631	Identifier	left_ast		3949572	0					
ANR	3949632	ExpressionStatement	"zend_compile_expr ( & right_node , right_ast )"	5964:1:176530:176571	3949572	5	True				
ANR	3949633	CallExpression	"zend_compile_expr ( & right_node , right_ast )"		3949572	0					
ANR	3949634	Callee	zend_compile_expr		3949572	0					
ANR	3949635	Identifier	zend_compile_expr		3949572	0					
ANR	3949636	ArgumentList	& right_node		3949572	1					
ANR	3949637	Argument	& right_node		3949572	0					
ANR	3949638	UnaryOperationExpression	& right_node		3949572	0					
ANR	3949639	UnaryOperator	&		3949572	0					
ANR	3949640	Identifier	right_node		3949572	1					
ANR	3949641	Argument	right_ast		3949572	1					
ANR	3949642	Identifier	right_ast		3949572	0					
ANR	3949643	IfStatement	if ( left_node . op_type == IS_CONST && right_node . op_type == IS_CONST )		3949572	6					
ANR	3949644	Condition	left_node . op_type == IS_CONST && right_node . op_type == IS_CONST	5966:5:176579:176641	3949572	0	True				
ANR	3949645	AndExpression	left_node . op_type == IS_CONST && right_node . op_type == IS_CONST		3949572	0		&&			
ANR	3949646	EqualityExpression	left_node . op_type == IS_CONST		3949572	0		==			
ANR	3949647	MemberAccess	left_node . op_type		3949572	0					
ANR	3949648	Identifier	left_node		3949572	0					
ANR	3949649	Identifier	op_type		3949572	1					
ANR	3949650	Identifier	IS_CONST		3949572	1					
ANR	3949651	EqualityExpression	right_node . op_type == IS_CONST		3949572	1		==			
ANR	3949652	MemberAccess	right_node . op_type		3949572	0					
ANR	3949653	Identifier	right_node		3949572	0					
ANR	3949654	Identifier	op_type		3949572	1					
ANR	3949655	Identifier	IS_CONST		3949572	1					
ANR	3949656	CompoundStatement		11:70:349:349	3949572	1					
ANR	3949657	ExpressionStatement	result -> op_type = IS_CONST	5967:2:176648:176674	3949572	0	True				
ANR	3949658	AssignmentExpression	result -> op_type = IS_CONST		3949572	0		=			
ANR	3949659	PtrMemberAccess	result -> op_type		3949572	0					
ANR	3949660	Identifier	result		3949572	0					
ANR	3949661	Identifier	op_type		3949572	1					
ANR	3949662	Identifier	IS_CONST		3949572	1					
ANR	3949663	ExpressionStatement	"zend_ct_eval_greater ( & result -> u . constant , ast -> kind , & left_node . u . constant , & right_node . u . constant )"	5968:2:176678:176780	3949572	1	True				
ANR	3949664	CallExpression	"zend_ct_eval_greater ( & result -> u . constant , ast -> kind , & left_node . u . constant , & right_node . u . constant )"		3949572	0					
ANR	3949665	Callee	zend_ct_eval_greater		3949572	0					
ANR	3949666	Identifier	zend_ct_eval_greater		3949572	0					
ANR	3949667	ArgumentList	& result -> u . constant		3949572	1					
ANR	3949668	Argument	& result -> u . constant		3949572	0					
ANR	3949669	UnaryOperationExpression	& result -> u . constant		3949572	0					
ANR	3949670	UnaryOperator	&		3949572	0					
ANR	3949671	MemberAccess	result -> u . constant		3949572	1					
ANR	3949672	PtrMemberAccess	result -> u		3949572	0					
ANR	3949673	Identifier	result		3949572	0					
ANR	3949674	Identifier	u		3949572	1					
ANR	3949675	Identifier	constant		3949572	1					
ANR	3949676	Argument	ast -> kind		3949572	1					
ANR	3949677	PtrMemberAccess	ast -> kind		3949572	0					
ANR	3949678	Identifier	ast		3949572	0					
ANR	3949679	Identifier	kind		3949572	1					
ANR	3949680	Argument	& left_node . u . constant		3949572	2					
ANR	3949681	UnaryOperationExpression	& left_node . u . constant		3949572	0					
ANR	3949682	UnaryOperator	&		3949572	0					
ANR	3949683	MemberAccess	left_node . u . constant		3949572	1					
ANR	3949684	MemberAccess	left_node . u		3949572	0					
ANR	3949685	Identifier	left_node		3949572	0					
ANR	3949686	Identifier	u		3949572	1					
ANR	3949687	Identifier	constant		3949572	1					
ANR	3949688	Argument	& right_node . u . constant		3949572	3					
ANR	3949689	UnaryOperationExpression	& right_node . u . constant		3949572	0					
ANR	3949690	UnaryOperator	&		3949572	0					
ANR	3949691	MemberAccess	right_node . u . constant		3949572	1					
ANR	3949692	MemberAccess	right_node . u		3949572	0					
ANR	3949693	Identifier	right_node		3949572	0					
ANR	3949694	Identifier	u		3949572	1					
ANR	3949695	Identifier	constant		3949572	1					
ANR	3949696	ExpressionStatement	zval_ptr_dtor ( & left_node . u . constant )	5970:2:176784:176820	3949572	2	True				
ANR	3949697	CallExpression	zval_ptr_dtor ( & left_node . u . constant )		3949572	0					
ANR	3949698	Callee	zval_ptr_dtor		3949572	0					
ANR	3949699	Identifier	zval_ptr_dtor		3949572	0					
ANR	3949700	ArgumentList	& left_node . u . constant		3949572	1					
ANR	3949701	Argument	& left_node . u . constant		3949572	0					
ANR	3949702	UnaryOperationExpression	& left_node . u . constant		3949572	0					
ANR	3949703	UnaryOperator	&		3949572	0					
ANR	3949704	MemberAccess	left_node . u . constant		3949572	1					
ANR	3949705	MemberAccess	left_node . u		3949572	0					
ANR	3949706	Identifier	left_node		3949572	0					
ANR	3949707	Identifier	u		3949572	1					
ANR	3949708	Identifier	constant		3949572	1					
ANR	3949709	ExpressionStatement	zval_ptr_dtor ( & right_node . u . constant )	5971:2:176824:176861	3949572	3	True				
ANR	3949710	CallExpression	zval_ptr_dtor ( & right_node . u . constant )		3949572	0					
ANR	3949711	Callee	zval_ptr_dtor		3949572	0					
ANR	3949712	Identifier	zval_ptr_dtor		3949572	0					
ANR	3949713	ArgumentList	& right_node . u . constant		3949572	1					
ANR	3949714	Argument	& right_node . u . constant		3949572	0					
ANR	3949715	UnaryOperationExpression	& right_node . u . constant		3949572	0					
ANR	3949716	UnaryOperator	&		3949572	0					
ANR	3949717	MemberAccess	right_node . u . constant		3949572	1					
ANR	3949718	MemberAccess	right_node . u		3949572	0					
ANR	3949719	Identifier	right_node		3949572	0					
ANR	3949720	Identifier	u		3949572	1					
ANR	3949721	Identifier	constant		3949572	1					
ANR	3949722	ReturnStatement	return ;	5972:2:176865:176871	3949572	4	True				
ANR	3949723	ExpressionStatement	"zend_emit_op_tmp ( result , ast -> kind == ZEND_AST_GREATER ? ZEND_IS_SMALLER : ZEND_IS_SMALLER_OR_EQUAL , & right_node , & left_node )"	5975:1:176878:177007	3949572	7	True				
ANR	3949724	CallExpression	"zend_emit_op_tmp ( result , ast -> kind == ZEND_AST_GREATER ? ZEND_IS_SMALLER : ZEND_IS_SMALLER_OR_EQUAL , & right_node , & left_node )"		3949572	0					
ANR	3949725	Callee	zend_emit_op_tmp		3949572	0					
ANR	3949726	Identifier	zend_emit_op_tmp		3949572	0					
ANR	3949727	ArgumentList	result		3949572	1					
ANR	3949728	Argument	result		3949572	0					
ANR	3949729	Identifier	result		3949572	0					
ANR	3949730	Argument	ast -> kind == ZEND_AST_GREATER ? ZEND_IS_SMALLER : ZEND_IS_SMALLER_OR_EQUAL		3949572	1					
ANR	3949731	ConditionalExpression	ast -> kind == ZEND_AST_GREATER ? ZEND_IS_SMALLER : ZEND_IS_SMALLER_OR_EQUAL		3949572	0					
ANR	3949732	Condition	ast -> kind == ZEND_AST_GREATER		3949572	0					
ANR	3949733	EqualityExpression	ast -> kind == ZEND_AST_GREATER		3949572	0		==			
ANR	3949734	PtrMemberAccess	ast -> kind		3949572	0					
ANR	3949735	Identifier	ast		3949572	0					
ANR	3949736	Identifier	kind		3949572	1					
ANR	3949737	Identifier	ZEND_AST_GREATER		3949572	1					
ANR	3949738	Identifier	ZEND_IS_SMALLER		3949572	1					
ANR	3949739	Identifier	ZEND_IS_SMALLER_OR_EQUAL		3949572	2					
ANR	3949740	Argument	& right_node		3949572	2					
ANR	3949741	UnaryOperationExpression	& right_node		3949572	0					
ANR	3949742	UnaryOperator	&		3949572	0					
ANR	3949743	Identifier	right_node		3949572	1					
ANR	3949744	Argument	& left_node		3949572	3					
ANR	3949745	UnaryOperationExpression	& left_node		3949572	0					
ANR	3949746	UnaryOperator	&		3949572	0					
ANR	3949747	Identifier	left_node		3949572	1					
ANR	3949748	ReturnType	void		3949572	1					
ANR	3949749	Identifier	zend_compile_greater		3949572	2					
ANR	3949750	ParameterList	"znode * result , zend_ast * ast"		3949572	3					
ANR	3949751	Parameter	znode * result	5955:26:176254:176266	3949572	0	True				
ANR	3949752	ParameterType	znode *		3949572	0					
ANR	3949753	Identifier	result		3949572	1					
ANR	3949754	Parameter	zend_ast * ast	5955:41:176269:176281	3949572	1	True				
ANR	3949755	ParameterType	zend_ast *		3949572	0					
ANR	3949756	Identifier	ast		3949572	1					
ANR	3949757	CFGEntryNode	ENTRY		3949572		True				
ANR	3949758	CFGExitNode	EXIT		3949572		True				
ANR	3949759	Symbol	right_node . u		3949572						
ANR	3949760	Symbol	right_node		3949572						
ANR	3949761	Symbol	ast -> kind		3949572						
ANR	3949762	Symbol	ast		3949572						
ANR	3949763	Symbol	& right_node		3949572						
ANR	3949764	Symbol	ZEND_IS_SMALLER_OR_EQUAL		3949572						
ANR	3949765	Symbol	ZEND_IS_SMALLER		3949572						
ANR	3949766	Symbol	result -> op_type		3949572						
ANR	3949767	Symbol	result -> u		3949572						
ANR	3949768	Symbol	ZEND_AST_GREATER		3949572						
ANR	3949769	Symbol	result		3949572						
ANR	3949770	Symbol	ZEND_AST_GREATER_EQUAL		3949572						
ANR	3949771	Symbol	& left_node . u . constant		3949572						
ANR	3949772	Symbol	* ast		3949572						
ANR	3949773	Symbol	* result		3949572						
ANR	3949774	Symbol	* * ast		3949572						
ANR	3949775	Symbol	& result -> u . constant		3949572						
ANR	3949776	Symbol	left_node . u		3949572						
ANR	3949777	Symbol	& right_node . u		3949572						
ANR	3949778	Symbol	right_node . op_type		3949572						
ANR	3949779	Symbol	& right_node . u . constant		3949572						
ANR	3949780	Symbol	left_node . op_type		3949572						
ANR	3949781	Symbol	right_ast		3949572						
ANR	3949782	Symbol	IS_CONST		3949572						
ANR	3949783	Symbol	& result -> u		3949572						
ANR	3949784	Symbol	& left_node . u		3949572						
ANR	3949785	Symbol	left_node		3949572						
ANR	3949786	Symbol	& left_node		3949572						
ANR	3949787	Symbol	* ast -> child		3949572						
ANR	3949788	Symbol	left_ast		3949572						
ANR	3949789	Symbol	ast -> child		3949572						
ANR	3949790	Function	zend_compile_unary_op	5981:0:177022:177475							
ANR	3949791	FunctionDef	"zend_compile_unary_op (znode * result , zend_ast * ast)"		3949790	0					
ANR	3949792	CompoundStatement		5982:0:177089:177475	3949790	0					
ANR	3949793	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	5983:1:177092:177126	3949790	0	True				
ANR	3949794	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3949790	0					
ANR	3949795	IdentifierDeclType	zend_ast *		3949790	0					
ANR	3949796	Identifier	expr_ast		3949790	1					
ANR	3949797	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3949790	2		=			
ANR	3949798	Identifier	expr_ast		3949790	0					
ANR	3949799	ArrayIndexing	ast -> child [ 0 ]		3949790	1					
ANR	3949800	PtrMemberAccess	ast -> child		3949790	0					
ANR	3949801	Identifier	ast		3949790	0					
ANR	3949802	Identifier	child		3949790	1					
ANR	3949803	PrimaryExpression	0		3949790	1					
ANR	3949804	IdentifierDeclStatement	uint32_t opcode = ast -> attr ;	5984:1:177129:177156	3949790	1	True				
ANR	3949805	IdentifierDecl	opcode = ast -> attr		3949790	0					
ANR	3949806	IdentifierDeclType	uint32_t		3949790	0					
ANR	3949807	Identifier	opcode		3949790	1					
ANR	3949808	AssignmentExpression	opcode = ast -> attr		3949790	2		=			
ANR	3949809	Identifier	opcode		3949790	0					
ANR	3949810	PtrMemberAccess	ast -> attr		3949790	1					
ANR	3949811	Identifier	ast		3949790	0					
ANR	3949812	Identifier	attr		3949790	1					
ANR	3949813	IdentifierDeclStatement	znode expr_node ;	5986:1:177160:177175	3949790	2	True				
ANR	3949814	IdentifierDecl	expr_node		3949790	0					
ANR	3949815	IdentifierDeclType	znode		3949790	0					
ANR	3949816	Identifier	expr_node		3949790	1					
ANR	3949817	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	5987:1:177178:177217	3949790	3	True				
ANR	3949818	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3949790	0					
ANR	3949819	Callee	zend_compile_expr		3949790	0					
ANR	3949820	Identifier	zend_compile_expr		3949790	0					
ANR	3949821	ArgumentList	& expr_node		3949790	1					
ANR	3949822	Argument	& expr_node		3949790	0					
ANR	3949823	UnaryOperationExpression	& expr_node		3949790	0					
ANR	3949824	UnaryOperator	&		3949790	0					
ANR	3949825	Identifier	expr_node		3949790	1					
ANR	3949826	Argument	expr_ast		3949790	1					
ANR	3949827	Identifier	expr_ast		3949790	0					
ANR	3949828	IfStatement	if ( expr_node . op_type == IS_CONST )		3949790	4					
ANR	3949829	Condition	expr_node . op_type == IS_CONST	5989:5:177225:177253	3949790	0	True				
ANR	3949830	EqualityExpression	expr_node . op_type == IS_CONST		3949790	0		==			
ANR	3949831	MemberAccess	expr_node . op_type		3949790	0					
ANR	3949832	Identifier	expr_node		3949790	0					
ANR	3949833	Identifier	op_type		3949790	1					
ANR	3949834	Identifier	IS_CONST		3949790	1					
ANR	3949835	CompoundStatement		8:36:166:166	3949790	1					
ANR	3949836	ExpressionStatement	result -> op_type = IS_CONST	5990:2:177260:177286	3949790	0	True				
ANR	3949837	AssignmentExpression	result -> op_type = IS_CONST		3949790	0		=			
ANR	3949838	PtrMemberAccess	result -> op_type		3949790	0					
ANR	3949839	Identifier	result		3949790	0					
ANR	3949840	Identifier	op_type		3949790	1					
ANR	3949841	Identifier	IS_CONST		3949790	1					
ANR	3949842	ExpressionStatement	"zend_ct_eval_unary_op ( & result -> u . constant , opcode , & expr_node . u . constant )"	5991:2:177290:177366	3949790	1	True				
ANR	3949843	CallExpression	"zend_ct_eval_unary_op ( & result -> u . constant , opcode , & expr_node . u . constant )"		3949790	0					
ANR	3949844	Callee	zend_ct_eval_unary_op		3949790	0					
ANR	3949845	Identifier	zend_ct_eval_unary_op		3949790	0					
ANR	3949846	ArgumentList	& result -> u . constant		3949790	1					
ANR	3949847	Argument	& result -> u . constant		3949790	0					
ANR	3949848	UnaryOperationExpression	& result -> u . constant		3949790	0					
ANR	3949849	UnaryOperator	&		3949790	0					
ANR	3949850	MemberAccess	result -> u . constant		3949790	1					
ANR	3949851	PtrMemberAccess	result -> u		3949790	0					
ANR	3949852	Identifier	result		3949790	0					
ANR	3949853	Identifier	u		3949790	1					
ANR	3949854	Identifier	constant		3949790	1					
ANR	3949855	Argument	opcode		3949790	1					
ANR	3949856	Identifier	opcode		3949790	0					
ANR	3949857	Argument	& expr_node . u . constant		3949790	2					
ANR	3949858	UnaryOperationExpression	& expr_node . u . constant		3949790	0					
ANR	3949859	UnaryOperator	&		3949790	0					
ANR	3949860	MemberAccess	expr_node . u . constant		3949790	1					
ANR	3949861	MemberAccess	expr_node . u		3949790	0					
ANR	3949862	Identifier	expr_node		3949790	0					
ANR	3949863	Identifier	u		3949790	1					
ANR	3949864	Identifier	constant		3949790	1					
ANR	3949865	ExpressionStatement	zval_ptr_dtor ( & expr_node . u . constant )	5993:2:177370:177406	3949790	2	True				
ANR	3949866	CallExpression	zval_ptr_dtor ( & expr_node . u . constant )		3949790	0					
ANR	3949867	Callee	zval_ptr_dtor		3949790	0					
ANR	3949868	Identifier	zval_ptr_dtor		3949790	0					
ANR	3949869	ArgumentList	& expr_node . u . constant		3949790	1					
ANR	3949870	Argument	& expr_node . u . constant		3949790	0					
ANR	3949871	UnaryOperationExpression	& expr_node . u . constant		3949790	0					
ANR	3949872	UnaryOperator	&		3949790	0					
ANR	3949873	MemberAccess	expr_node . u . constant		3949790	1					
ANR	3949874	MemberAccess	expr_node . u		3949790	0					
ANR	3949875	Identifier	expr_node		3949790	0					
ANR	3949876	Identifier	u		3949790	1					
ANR	3949877	Identifier	constant		3949790	1					
ANR	3949878	ReturnStatement	return ;	5994:2:177410:177416	3949790	3	True				
ANR	3949879	ExpressionStatement	"zend_emit_op_tmp ( result , opcode , & expr_node , NULL )"	5997:1:177423:177473	3949790	5	True				
ANR	3949880	CallExpression	"zend_emit_op_tmp ( result , opcode , & expr_node , NULL )"		3949790	0					
ANR	3949881	Callee	zend_emit_op_tmp		3949790	0					
ANR	3949882	Identifier	zend_emit_op_tmp		3949790	0					
ANR	3949883	ArgumentList	result		3949790	1					
ANR	3949884	Argument	result		3949790	0					
ANR	3949885	Identifier	result		3949790	0					
ANR	3949886	Argument	opcode		3949790	1					
ANR	3949887	Identifier	opcode		3949790	0					
ANR	3949888	Argument	& expr_node		3949790	2					
ANR	3949889	UnaryOperationExpression	& expr_node		3949790	0					
ANR	3949890	UnaryOperator	&		3949790	0					
ANR	3949891	Identifier	expr_node		3949790	1					
ANR	3949892	Argument	NULL		3949790	3					
ANR	3949893	Identifier	NULL		3949790	0					
ANR	3949894	ReturnType	void		3949790	1					
ANR	3949895	Identifier	zend_compile_unary_op		3949790	2					
ANR	3949896	ParameterList	"znode * result , zend_ast * ast"		3949790	3					
ANR	3949897	Parameter	znode * result	5981:27:177049:177061	3949790	0	True				
ANR	3949898	ParameterType	znode *		3949790	0					
ANR	3949899	Identifier	result		3949790	1					
ANR	3949900	Parameter	zend_ast * ast	5981:42:177064:177076	3949790	1	True				
ANR	3949901	ParameterType	zend_ast *		3949790	0					
ANR	3949902	Identifier	ast		3949790	1					
ANR	3949903	CFGEntryNode	ENTRY		3949790		True				
ANR	3949904	CFGExitNode	EXIT		3949790		True				
ANR	3949905	Symbol	ast -> attr		3949790						
ANR	3949906	Symbol	IS_CONST		3949790						
ANR	3949907	Symbol	ast		3949790						
ANR	3949908	Symbol	NULL		3949790						
ANR	3949909	Symbol	& result -> u		3949790						
ANR	3949910	Symbol	expr_ast		3949790						
ANR	3949911	Symbol	opcode		3949790						
ANR	3949912	Symbol	& expr_node		3949790						
ANR	3949913	Symbol	result -> op_type		3949790						
ANR	3949914	Symbol	& expr_node . u . constant		3949790						
ANR	3949915	Symbol	result -> u		3949790						
ANR	3949916	Symbol	result		3949790						
ANR	3949917	Symbol	expr_node		3949790						
ANR	3949918	Symbol	* ast		3949790						
ANR	3949919	Symbol	& expr_node . u		3949790						
ANR	3949920	Symbol	* result		3949790						
ANR	3949921	Symbol	* * ast		3949790						
ANR	3949922	Symbol	expr_node . op_type		3949790						
ANR	3949923	Symbol	expr_node . u		3949790						
ANR	3949924	Symbol	& result -> u . constant		3949790						
ANR	3949925	Symbol	* ast -> child		3949790						
ANR	3949926	Symbol	ast -> child		3949790						
ANR	3949927	Function	zend_compile_unary_pm	6001:0:177488:178134							
ANR	3949928	FunctionDef	"zend_compile_unary_pm (znode * result , zend_ast * ast)"		3949927	0					
ANR	3949929	CompoundStatement		6002:0:177555:178134	3949927	0					
ANR	3949930	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6003:1:177558:177592	3949927	0	True				
ANR	3949931	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3949927	0					
ANR	3949932	IdentifierDeclType	zend_ast *		3949927	0					
ANR	3949933	Identifier	expr_ast		3949927	1					
ANR	3949934	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3949927	2		=			
ANR	3949935	Identifier	expr_ast		3949927	0					
ANR	3949936	ArrayIndexing	ast -> child [ 0 ]		3949927	1					
ANR	3949937	PtrMemberAccess	ast -> child		3949927	0					
ANR	3949938	Identifier	ast		3949927	0					
ANR	3949939	Identifier	child		3949927	1					
ANR	3949940	PrimaryExpression	0		3949927	1					
ANR	3949941	IdentifierDeclStatement	"znode zero_node , expr_node ;"	6004:1:177595:177621	3949927	1	True				
ANR	3949942	IdentifierDecl	zero_node		3949927	0					
ANR	3949943	IdentifierDeclType	znode		3949927	0					
ANR	3949944	Identifier	zero_node		3949927	1					
ANR	3949945	IdentifierDecl	expr_node		3949927	1					
ANR	3949946	IdentifierDeclType	znode		3949927	0					
ANR	3949947	Identifier	expr_node		3949927	1					
ANR	3949948	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_UNARY_PLUS || ast -> kind == ZEND_AST_UNARY_MINUS )	6006:1:177625:177707	3949927	2	True				
ANR	3949949	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_UNARY_PLUS || ast -> kind == ZEND_AST_UNARY_MINUS )		3949927	0					
ANR	3949950	Callee	ZEND_ASSERT		3949927	0					
ANR	3949951	Identifier	ZEND_ASSERT		3949927	0					
ANR	3949952	ArgumentList	ast -> kind == ZEND_AST_UNARY_PLUS || ast -> kind == ZEND_AST_UNARY_MINUS		3949927	1					
ANR	3949953	Argument	ast -> kind == ZEND_AST_UNARY_PLUS || ast -> kind == ZEND_AST_UNARY_MINUS		3949927	0					
ANR	3949954	OrExpression	ast -> kind == ZEND_AST_UNARY_PLUS || ast -> kind == ZEND_AST_UNARY_MINUS		3949927	0		||			
ANR	3949955	EqualityExpression	ast -> kind == ZEND_AST_UNARY_PLUS		3949927	0		==			
ANR	3949956	PtrMemberAccess	ast -> kind		3949927	0					
ANR	3949957	Identifier	ast		3949927	0					
ANR	3949958	Identifier	kind		3949927	1					
ANR	3949959	Identifier	ZEND_AST_UNARY_PLUS		3949927	1					
ANR	3949960	EqualityExpression	ast -> kind == ZEND_AST_UNARY_MINUS		3949927	1		==			
ANR	3949961	PtrMemberAccess	ast -> kind		3949927	0					
ANR	3949962	Identifier	ast		3949927	0					
ANR	3949963	Identifier	kind		3949927	1					
ANR	3949964	Identifier	ZEND_AST_UNARY_MINUS		3949927	1					
ANR	3949965	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	6008:1:177711:177750	3949927	3	True				
ANR	3949966	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3949927	0					
ANR	3949967	Callee	zend_compile_expr		3949927	0					
ANR	3949968	Identifier	zend_compile_expr		3949927	0					
ANR	3949969	ArgumentList	& expr_node		3949927	1					
ANR	3949970	Argument	& expr_node		3949927	0					
ANR	3949971	UnaryOperationExpression	& expr_node		3949927	0					
ANR	3949972	UnaryOperator	&		3949927	0					
ANR	3949973	Identifier	expr_node		3949927	1					
ANR	3949974	Argument	expr_ast		3949927	1					
ANR	3949975	Identifier	expr_ast		3949927	0					
ANR	3949976	IfStatement	if ( expr_node . op_type == IS_CONST )		3949927	4					
ANR	3949977	Condition	expr_node . op_type == IS_CONST	6010:5:177758:177786	3949927	0	True				
ANR	3949978	EqualityExpression	expr_node . op_type == IS_CONST		3949927	0		==			
ANR	3949979	MemberAccess	expr_node . op_type		3949927	0					
ANR	3949980	Identifier	expr_node		3949927	0					
ANR	3949981	Identifier	op_type		3949927	1					
ANR	3949982	Identifier	IS_CONST		3949927	1					
ANR	3949983	CompoundStatement		9:36:233:233	3949927	1					
ANR	3949984	ExpressionStatement	result -> op_type = IS_CONST	6011:2:177793:177819	3949927	0	True				
ANR	3949985	AssignmentExpression	result -> op_type = IS_CONST		3949927	0		=			
ANR	3949986	PtrMemberAccess	result -> op_type		3949927	0					
ANR	3949987	Identifier	result		3949927	0					
ANR	3949988	Identifier	op_type		3949927	1					
ANR	3949989	Identifier	IS_CONST		3949927	1					
ANR	3949990	ExpressionStatement	"zend_ct_eval_unary_pm ( & result -> u . constant , ast -> kind , & expr_node . u . constant )"	6012:2:177823:177899	3949927	1	True				
ANR	3949991	CallExpression	"zend_ct_eval_unary_pm ( & result -> u . constant , ast -> kind , & expr_node . u . constant )"		3949927	0					
ANR	3949992	Callee	zend_ct_eval_unary_pm		3949927	0					
ANR	3949993	Identifier	zend_ct_eval_unary_pm		3949927	0					
ANR	3949994	ArgumentList	& result -> u . constant		3949927	1					
ANR	3949995	Argument	& result -> u . constant		3949927	0					
ANR	3949996	UnaryOperationExpression	& result -> u . constant		3949927	0					
ANR	3949997	UnaryOperator	&		3949927	0					
ANR	3949998	MemberAccess	result -> u . constant		3949927	1					
ANR	3949999	PtrMemberAccess	result -> u		3949927	0					
ANR	3950000	Identifier	result		3949927	0					
ANR	3950001	Identifier	u		3949927	1					
ANR	3950002	Identifier	constant		3949927	1					
ANR	3950003	Argument	ast -> kind		3949927	1					
ANR	3950004	PtrMemberAccess	ast -> kind		3949927	0					
ANR	3950005	Identifier	ast		3949927	0					
ANR	3950006	Identifier	kind		3949927	1					
ANR	3950007	Argument	& expr_node . u . constant		3949927	2					
ANR	3950008	UnaryOperationExpression	& expr_node . u . constant		3949927	0					
ANR	3950009	UnaryOperator	&		3949927	0					
ANR	3950010	MemberAccess	expr_node . u . constant		3949927	1					
ANR	3950011	MemberAccess	expr_node . u		3949927	0					
ANR	3950012	Identifier	expr_node		3949927	0					
ANR	3950013	Identifier	u		3949927	1					
ANR	3950014	Identifier	constant		3949927	1					
ANR	3950015	ExpressionStatement	zval_ptr_dtor ( & expr_node . u . constant )	6013:2:177903:177939	3949927	2	True				
ANR	3950016	CallExpression	zval_ptr_dtor ( & expr_node . u . constant )		3949927	0					
ANR	3950017	Callee	zval_ptr_dtor		3949927	0					
ANR	3950018	Identifier	zval_ptr_dtor		3949927	0					
ANR	3950019	ArgumentList	& expr_node . u . constant		3949927	1					
ANR	3950020	Argument	& expr_node . u . constant		3949927	0					
ANR	3950021	UnaryOperationExpression	& expr_node . u . constant		3949927	0					
ANR	3950022	UnaryOperator	&		3949927	0					
ANR	3950023	MemberAccess	expr_node . u . constant		3949927	1					
ANR	3950024	MemberAccess	expr_node . u		3949927	0					
ANR	3950025	Identifier	expr_node		3949927	0					
ANR	3950026	Identifier	u		3949927	1					
ANR	3950027	Identifier	constant		3949927	1					
ANR	3950028	ReturnStatement	return ;	6014:2:177943:177949	3949927	3	True				
ANR	3950029	ExpressionStatement	zero_node . op_type = IS_CONST	6017:1:177956:177984	3949927	5	True				
ANR	3950030	AssignmentExpression	zero_node . op_type = IS_CONST		3949927	0		=			
ANR	3950031	MemberAccess	zero_node . op_type		3949927	0					
ANR	3950032	Identifier	zero_node		3949927	0					
ANR	3950033	Identifier	op_type		3949927	1					
ANR	3950034	Identifier	IS_CONST		3949927	1					
ANR	3950035	ExpressionStatement	"ZVAL_LONG ( & zero_node . u . constant , 0 )"	6018:1:177987:178022	3949927	6	True				
ANR	3950036	CallExpression	"ZVAL_LONG ( & zero_node . u . constant , 0 )"		3949927	0					
ANR	3950037	Callee	ZVAL_LONG		3949927	0					
ANR	3950038	Identifier	ZVAL_LONG		3949927	0					
ANR	3950039	ArgumentList	& zero_node . u . constant		3949927	1					
ANR	3950040	Argument	& zero_node . u . constant		3949927	0					
ANR	3950041	UnaryOperationExpression	& zero_node . u . constant		3949927	0					
ANR	3950042	UnaryOperator	&		3949927	0					
ANR	3950043	MemberAccess	zero_node . u . constant		3949927	1					
ANR	3950044	MemberAccess	zero_node . u		3949927	0					
ANR	3950045	Identifier	zero_node		3949927	0					
ANR	3950046	Identifier	u		3949927	1					
ANR	3950047	Identifier	constant		3949927	1					
ANR	3950048	Argument	0		3949927	1					
ANR	3950049	PrimaryExpression	0		3949927	0					
ANR	3950050	ExpressionStatement	"zend_emit_op_tmp ( result , ast -> kind == ZEND_AST_UNARY_PLUS ? ZEND_ADD : ZEND_SUB , & zero_node , & expr_node )"	6020:1:178026:178132	3949927	7	True				
ANR	3950051	CallExpression	"zend_emit_op_tmp ( result , ast -> kind == ZEND_AST_UNARY_PLUS ? ZEND_ADD : ZEND_SUB , & zero_node , & expr_node )"		3949927	0					
ANR	3950052	Callee	zend_emit_op_tmp		3949927	0					
ANR	3950053	Identifier	zend_emit_op_tmp		3949927	0					
ANR	3950054	ArgumentList	result		3949927	1					
ANR	3950055	Argument	result		3949927	0					
ANR	3950056	Identifier	result		3949927	0					
ANR	3950057	Argument	ast -> kind == ZEND_AST_UNARY_PLUS ? ZEND_ADD : ZEND_SUB		3949927	1					
ANR	3950058	ConditionalExpression	ast -> kind == ZEND_AST_UNARY_PLUS ? ZEND_ADD : ZEND_SUB		3949927	0					
ANR	3950059	Condition	ast -> kind == ZEND_AST_UNARY_PLUS		3949927	0					
ANR	3950060	EqualityExpression	ast -> kind == ZEND_AST_UNARY_PLUS		3949927	0		==			
ANR	3950061	PtrMemberAccess	ast -> kind		3949927	0					
ANR	3950062	Identifier	ast		3949927	0					
ANR	3950063	Identifier	kind		3949927	1					
ANR	3950064	Identifier	ZEND_AST_UNARY_PLUS		3949927	1					
ANR	3950065	Identifier	ZEND_ADD		3949927	1					
ANR	3950066	Identifier	ZEND_SUB		3949927	2					
ANR	3950067	Argument	& zero_node		3949927	2					
ANR	3950068	UnaryOperationExpression	& zero_node		3949927	0					
ANR	3950069	UnaryOperator	&		3949927	0					
ANR	3950070	Identifier	zero_node		3949927	1					
ANR	3950071	Argument	& expr_node		3949927	3					
ANR	3950072	UnaryOperationExpression	& expr_node		3949927	0					
ANR	3950073	UnaryOperator	&		3949927	0					
ANR	3950074	Identifier	expr_node		3949927	1					
ANR	3950075	ReturnType	void		3949927	1					
ANR	3950076	Identifier	zend_compile_unary_pm		3949927	2					
ANR	3950077	ParameterList	"znode * result , zend_ast * ast"		3949927	3					
ANR	3950078	Parameter	znode * result	6001:27:177515:177527	3949927	0	True				
ANR	3950079	ParameterType	znode *		3949927	0					
ANR	3950080	Identifier	result		3949927	1					
ANR	3950081	Parameter	zend_ast * ast	6001:42:177530:177542	3949927	1	True				
ANR	3950082	ParameterType	zend_ast *		3949927	0					
ANR	3950083	Identifier	ast		3949927	1					
ANR	3950084	CFGEntryNode	ENTRY		3949927		True				
ANR	3950085	CFGExitNode	EXIT		3949927		True				
ANR	3950086	Symbol	ZEND_AST_UNARY_MINUS		3949927						
ANR	3950087	Symbol	ast -> kind		3949927						
ANR	3950088	Symbol	ast		3949927						
ANR	3950089	Symbol	& expr_node		3949927						
ANR	3950090	Symbol	result -> op_type		3949927						
ANR	3950091	Symbol	result -> u		3949927						
ANR	3950092	Symbol	& zero_node		3949927						
ANR	3950093	Symbol	result		3949927						
ANR	3950094	Symbol	* ast		3949927						
ANR	3950095	Symbol	* result		3949927						
ANR	3950096	Symbol	* * ast		3949927						
ANR	3950097	Symbol	expr_node . op_type		3949927						
ANR	3950098	Symbol	& result -> u . constant		3949927						
ANR	3950099	Symbol	expr_node . u		3949927						
ANR	3950100	Symbol	& zero_node . u		3949927						
ANR	3950101	Symbol	ZEND_ADD		3949927						
ANR	3950102	Symbol	IS_CONST		3949927						
ANR	3950103	Symbol	& result -> u		3949927						
ANR	3950104	Symbol	ZEND_AST_UNARY_PLUS		3949927						
ANR	3950105	Symbol	zero_node . u		3949927						
ANR	3950106	Symbol	zero_node		3949927						
ANR	3950107	Symbol	& zero_node . u . constant		3949927						
ANR	3950108	Symbol	expr_ast		3949927						
ANR	3950109	Symbol	& expr_node . u . constant		3949927						
ANR	3950110	Symbol	zero_node . op_type		3949927						
ANR	3950111	Symbol	expr_node		3949927						
ANR	3950112	Symbol	& expr_node . u		3949927						
ANR	3950113	Symbol	* ast -> child		3949927						
ANR	3950114	Symbol	ast -> child		3949927						
ANR	3950115	Symbol	ZEND_SUB		3949927						
ANR	3950116	Function	zend_compile_short_circuiting	6025:0:178147:179793							
ANR	3950117	FunctionDef	"zend_compile_short_circuiting (znode * result , zend_ast * ast)"		3950116	0					
ANR	3950118	CompoundStatement		6026:0:178222:179793	3950116	0					
ANR	3950119	IdentifierDeclStatement	zend_ast * left_ast = ast -> child [ 0 ] ;	6027:1:178225:178259	3950116	0	True				
ANR	3950120	IdentifierDecl	* left_ast = ast -> child [ 0 ]		3950116	0					
ANR	3950121	IdentifierDeclType	zend_ast *		3950116	0					
ANR	3950122	Identifier	left_ast		3950116	1					
ANR	3950123	AssignmentExpression	* left_ast = ast -> child [ 0 ]		3950116	2		=			
ANR	3950124	Identifier	left_ast		3950116	0					
ANR	3950125	ArrayIndexing	ast -> child [ 0 ]		3950116	1					
ANR	3950126	PtrMemberAccess	ast -> child		3950116	0					
ANR	3950127	Identifier	ast		3950116	0					
ANR	3950128	Identifier	child		3950116	1					
ANR	3950129	PrimaryExpression	0		3950116	1					
ANR	3950130	IdentifierDeclStatement	zend_ast * right_ast = ast -> child [ 1 ] ;	6028:1:178262:178297	3950116	1	True				
ANR	3950131	IdentifierDecl	* right_ast = ast -> child [ 1 ]		3950116	0					
ANR	3950132	IdentifierDeclType	zend_ast *		3950116	0					
ANR	3950133	Identifier	right_ast		3950116	1					
ANR	3950134	AssignmentExpression	* right_ast = ast -> child [ 1 ]		3950116	2		=			
ANR	3950135	Identifier	right_ast		3950116	0					
ANR	3950136	ArrayIndexing	ast -> child [ 1 ]		3950116	1					
ANR	3950137	PtrMemberAccess	ast -> child		3950116	0					
ANR	3950138	Identifier	ast		3950116	0					
ANR	3950139	Identifier	child		3950116	1					
ANR	3950140	PrimaryExpression	1		3950116	1					
ANR	3950141	IdentifierDeclStatement	"znode left_node , right_node ;"	6030:1:178301:178328	3950116	2	True				
ANR	3950142	IdentifierDecl	left_node		3950116	0					
ANR	3950143	IdentifierDeclType	znode		3950116	0					
ANR	3950144	Identifier	left_node		3950116	1					
ANR	3950145	IdentifierDecl	right_node		3950116	1					
ANR	3950146	IdentifierDeclType	znode		3950116	0					
ANR	3950147	Identifier	right_node		3950116	1					
ANR	3950148	IdentifierDeclStatement	"zend_op * opline_jmpz , * opline_bool ;"	6031:1:178331:178365	3950116	3	True				
ANR	3950149	IdentifierDecl	* opline_jmpz		3950116	0					
ANR	3950150	IdentifierDeclType	zend_op *		3950116	0					
ANR	3950151	Identifier	opline_jmpz		3950116	1					
ANR	3950152	IdentifierDecl	* opline_bool		3950116	1					
ANR	3950153	IdentifierDeclType	zend_op *		3950116	0					
ANR	3950154	Identifier	opline_bool		3950116	1					
ANR	3950155	IdentifierDeclStatement	uint32_t opnum_jmpz ;	6032:1:178368:178387	3950116	4	True				
ANR	3950156	IdentifierDecl	opnum_jmpz		3950116	0					
ANR	3950157	IdentifierDeclType	uint32_t		3950116	0					
ANR	3950158	Identifier	opnum_jmpz		3950116	1					
ANR	3950159	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_AND || ast -> kind == ZEND_AST_OR )	6034:1:178391:178457	3950116	5	True				
ANR	3950160	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_AND || ast -> kind == ZEND_AST_OR )		3950116	0					
ANR	3950161	Callee	ZEND_ASSERT		3950116	0					
ANR	3950162	Identifier	ZEND_ASSERT		3950116	0					
ANR	3950163	ArgumentList	ast -> kind == ZEND_AST_AND || ast -> kind == ZEND_AST_OR		3950116	1					
ANR	3950164	Argument	ast -> kind == ZEND_AST_AND || ast -> kind == ZEND_AST_OR		3950116	0					
ANR	3950165	OrExpression	ast -> kind == ZEND_AST_AND || ast -> kind == ZEND_AST_OR		3950116	0		||			
ANR	3950166	EqualityExpression	ast -> kind == ZEND_AST_AND		3950116	0		==			
ANR	3950167	PtrMemberAccess	ast -> kind		3950116	0					
ANR	3950168	Identifier	ast		3950116	0					
ANR	3950169	Identifier	kind		3950116	1					
ANR	3950170	Identifier	ZEND_AST_AND		3950116	1					
ANR	3950171	EqualityExpression	ast -> kind == ZEND_AST_OR		3950116	1		==			
ANR	3950172	PtrMemberAccess	ast -> kind		3950116	0					
ANR	3950173	Identifier	ast		3950116	0					
ANR	3950174	Identifier	kind		3950116	1					
ANR	3950175	Identifier	ZEND_AST_OR		3950116	1					
ANR	3950176	ExpressionStatement	"zend_compile_expr ( & left_node , left_ast )"	6036:1:178461:178500	3950116	6	True				
ANR	3950177	CallExpression	"zend_compile_expr ( & left_node , left_ast )"		3950116	0					
ANR	3950178	Callee	zend_compile_expr		3950116	0					
ANR	3950179	Identifier	zend_compile_expr		3950116	0					
ANR	3950180	ArgumentList	& left_node		3950116	1					
ANR	3950181	Argument	& left_node		3950116	0					
ANR	3950182	UnaryOperationExpression	& left_node		3950116	0					
ANR	3950183	UnaryOperator	&		3950116	0					
ANR	3950184	Identifier	left_node		3950116	1					
ANR	3950185	Argument	left_ast		3950116	1					
ANR	3950186	Identifier	left_ast		3950116	0					
ANR	3950187	IfStatement	if ( left_node . op_type == IS_CONST )		3950116	7					
ANR	3950188	Condition	left_node . op_type == IS_CONST	6038:5:178508:178536	3950116	0	True				
ANR	3950189	EqualityExpression	left_node . op_type == IS_CONST		3950116	0		==			
ANR	3950190	MemberAccess	left_node . op_type		3950116	0					
ANR	3950191	Identifier	left_node		3950116	0					
ANR	3950192	Identifier	op_type		3950116	1					
ANR	3950193	Identifier	IS_CONST		3950116	1					
ANR	3950194	CompoundStatement		13:36:316:316	3950116	1					
ANR	3950195	IfStatement	if ( ( ast -> kind == ZEND_AST_AND && ! zend_is_true ( & left_node . u . constant ) ) || ( ast -> kind == ZEND_AST_OR && zend_is_true ( & left_node . u . constant ) ) )		3950116	0					
ANR	3950196	Condition	( ast -> kind == ZEND_AST_AND && ! zend_is_true ( & left_node . u . constant ) ) || ( ast -> kind == ZEND_AST_OR && zend_is_true ( & left_node . u . constant ) )	6039:6:178547:178685	3950116	0	True				
ANR	3950197	OrExpression	( ast -> kind == ZEND_AST_AND && ! zend_is_true ( & left_node . u . constant ) ) || ( ast -> kind == ZEND_AST_OR && zend_is_true ( & left_node . u . constant ) )		3950116	0		||			
ANR	3950198	AndExpression	ast -> kind == ZEND_AST_AND && ! zend_is_true ( & left_node . u . constant )		3950116	0		&&			
ANR	3950199	EqualityExpression	ast -> kind == ZEND_AST_AND		3950116	0		==			
ANR	3950200	PtrMemberAccess	ast -> kind		3950116	0					
ANR	3950201	Identifier	ast		3950116	0					
ANR	3950202	Identifier	kind		3950116	1					
ANR	3950203	Identifier	ZEND_AST_AND		3950116	1					
ANR	3950204	UnaryOperationExpression	! zend_is_true ( & left_node . u . constant )		3950116	1					
ANR	3950205	UnaryOperator	!		3950116	0					
ANR	3950206	CallExpression	zend_is_true ( & left_node . u . constant )		3950116	1					
ANR	3950207	Callee	zend_is_true		3950116	0					
ANR	3950208	Identifier	zend_is_true		3950116	0					
ANR	3950209	ArgumentList	& left_node . u . constant		3950116	1					
ANR	3950210	Argument	& left_node . u . constant		3950116	0					
ANR	3950211	UnaryOperationExpression	& left_node . u . constant		3950116	0					
ANR	3950212	UnaryOperator	&		3950116	0					
ANR	3950213	MemberAccess	left_node . u . constant		3950116	1					
ANR	3950214	MemberAccess	left_node . u		3950116	0					
ANR	3950215	Identifier	left_node		3950116	0					
ANR	3950216	Identifier	u		3950116	1					
ANR	3950217	Identifier	constant		3950116	1					
ANR	3950218	AndExpression	ast -> kind == ZEND_AST_OR && zend_is_true ( & left_node . u . constant )		3950116	1		&&			
ANR	3950219	EqualityExpression	ast -> kind == ZEND_AST_OR		3950116	0		==			
ANR	3950220	PtrMemberAccess	ast -> kind		3950116	0					
ANR	3950221	Identifier	ast		3950116	0					
ANR	3950222	Identifier	kind		3950116	1					
ANR	3950223	Identifier	ZEND_AST_OR		3950116	1					
ANR	3950224	CallExpression	zend_is_true ( & left_node . u . constant )		3950116	1					
ANR	3950225	Callee	zend_is_true		3950116	0					
ANR	3950226	Identifier	zend_is_true		3950116	0					
ANR	3950227	ArgumentList	& left_node . u . constant		3950116	1					
ANR	3950228	Argument	& left_node . u . constant		3950116	0					
ANR	3950229	UnaryOperationExpression	& left_node . u . constant		3950116	0					
ANR	3950230	UnaryOperator	&		3950116	0					
ANR	3950231	MemberAccess	left_node . u . constant		3950116	1					
ANR	3950232	MemberAccess	left_node . u		3950116	0					
ANR	3950233	Identifier	left_node		3950116	0					
ANR	3950234	Identifier	u		3950116	1					
ANR	3950235	Identifier	constant		3950116	1					
ANR	3950236	CompoundStatement		15:73:465:465	3950116	1					
ANR	3950237	ExpressionStatement	result -> op_type = IS_CONST	6041:3:178693:178719	3950116	0	True				
ANR	3950238	AssignmentExpression	result -> op_type = IS_CONST		3950116	0		=			
ANR	3950239	PtrMemberAccess	result -> op_type		3950116	0					
ANR	3950240	Identifier	result		3950116	0					
ANR	3950241	Identifier	op_type		3950116	1					
ANR	3950242	Identifier	IS_CONST		3950116	1					
ANR	3950243	ExpressionStatement	"ZVAL_BOOL ( & result -> u . constant , zend_is_true ( & left_node . u . constant ) )"	6042:3:178724:178791	3950116	1	True				
ANR	3950244	CallExpression	"ZVAL_BOOL ( & result -> u . constant , zend_is_true ( & left_node . u . constant ) )"		3950116	0					
ANR	3950245	Callee	ZVAL_BOOL		3950116	0					
ANR	3950246	Identifier	ZVAL_BOOL		3950116	0					
ANR	3950247	ArgumentList	& result -> u . constant		3950116	1					
ANR	3950248	Argument	& result -> u . constant		3950116	0					
ANR	3950249	UnaryOperationExpression	& result -> u . constant		3950116	0					
ANR	3950250	UnaryOperator	&		3950116	0					
ANR	3950251	MemberAccess	result -> u . constant		3950116	1					
ANR	3950252	PtrMemberAccess	result -> u		3950116	0					
ANR	3950253	Identifier	result		3950116	0					
ANR	3950254	Identifier	u		3950116	1					
ANR	3950255	Identifier	constant		3950116	1					
ANR	3950256	Argument	zend_is_true ( & left_node . u . constant )		3950116	1					
ANR	3950257	CallExpression	zend_is_true ( & left_node . u . constant )		3950116	0					
ANR	3950258	Callee	zend_is_true		3950116	0					
ANR	3950259	Identifier	zend_is_true		3950116	0					
ANR	3950260	ArgumentList	& left_node . u . constant		3950116	1					
ANR	3950261	Argument	& left_node . u . constant		3950116	0					
ANR	3950262	UnaryOperationExpression	& left_node . u . constant		3950116	0					
ANR	3950263	UnaryOperator	&		3950116	0					
ANR	3950264	MemberAccess	left_node . u . constant		3950116	1					
ANR	3950265	MemberAccess	left_node . u		3950116	0					
ANR	3950266	Identifier	left_node		3950116	0					
ANR	3950267	Identifier	u		3950116	1					
ANR	3950268	Identifier	constant		3950116	1					
ANR	3950269	ElseStatement	else		3950116	0					
ANR	3950270	CompoundStatement		18:9:579:579	3950116	0					
ANR	3950271	ExpressionStatement	"zend_compile_expr ( & right_node , right_ast )"	6044:3:178807:178848	3950116	0	True				
ANR	3950272	CallExpression	"zend_compile_expr ( & right_node , right_ast )"		3950116	0					
ANR	3950273	Callee	zend_compile_expr		3950116	0					
ANR	3950274	Identifier	zend_compile_expr		3950116	0					
ANR	3950275	ArgumentList	& right_node		3950116	1					
ANR	3950276	Argument	& right_node		3950116	0					
ANR	3950277	UnaryOperationExpression	& right_node		3950116	0					
ANR	3950278	UnaryOperator	&		3950116	0					
ANR	3950279	Identifier	right_node		3950116	1					
ANR	3950280	Argument	right_ast		3950116	1					
ANR	3950281	Identifier	right_ast		3950116	0					
ANR	3950282	IfStatement	if ( right_node . op_type == IS_CONST )		3950116	1					
ANR	3950283	Condition	right_node . op_type == IS_CONST	6046:7:178858:178887	3950116	0	True				
ANR	3950284	EqualityExpression	right_node . op_type == IS_CONST		3950116	0		==			
ANR	3950285	MemberAccess	right_node . op_type		3950116	0					
ANR	3950286	Identifier	right_node		3950116	0					
ANR	3950287	Identifier	op_type		3950116	1					
ANR	3950288	Identifier	IS_CONST		3950116	1					
ANR	3950289	CompoundStatement		21:39:667:667	3950116	1					
ANR	3950290	ExpressionStatement	result -> op_type = IS_CONST	6047:4:178896:178922	3950116	0	True				
ANR	3950291	AssignmentExpression	result -> op_type = IS_CONST		3950116	0		=			
ANR	3950292	PtrMemberAccess	result -> op_type		3950116	0					
ANR	3950293	Identifier	result		3950116	0					
ANR	3950294	Identifier	op_type		3950116	1					
ANR	3950295	Identifier	IS_CONST		3950116	1					
ANR	3950296	ExpressionStatement	"ZVAL_BOOL ( & result -> u . constant , zend_is_true ( & right_node . u . constant ) )"	6048:4:178928:178996	3950116	1	True				
ANR	3950297	CallExpression	"ZVAL_BOOL ( & result -> u . constant , zend_is_true ( & right_node . u . constant ) )"		3950116	0					
ANR	3950298	Callee	ZVAL_BOOL		3950116	0					
ANR	3950299	Identifier	ZVAL_BOOL		3950116	0					
ANR	3950300	ArgumentList	& result -> u . constant		3950116	1					
ANR	3950301	Argument	& result -> u . constant		3950116	0					
ANR	3950302	UnaryOperationExpression	& result -> u . constant		3950116	0					
ANR	3950303	UnaryOperator	&		3950116	0					
ANR	3950304	MemberAccess	result -> u . constant		3950116	1					
ANR	3950305	PtrMemberAccess	result -> u		3950116	0					
ANR	3950306	Identifier	result		3950116	0					
ANR	3950307	Identifier	u		3950116	1					
ANR	3950308	Identifier	constant		3950116	1					
ANR	3950309	Argument	zend_is_true ( & right_node . u . constant )		3950116	1					
ANR	3950310	CallExpression	zend_is_true ( & right_node . u . constant )		3950116	0					
ANR	3950311	Callee	zend_is_true		3950116	0					
ANR	3950312	Identifier	zend_is_true		3950116	0					
ANR	3950313	ArgumentList	& right_node . u . constant		3950116	1					
ANR	3950314	Argument	& right_node . u . constant		3950116	0					
ANR	3950315	UnaryOperationExpression	& right_node . u . constant		3950116	0					
ANR	3950316	UnaryOperator	&		3950116	0					
ANR	3950317	MemberAccess	right_node . u . constant		3950116	1					
ANR	3950318	MemberAccess	right_node . u		3950116	0					
ANR	3950319	Identifier	right_node		3950116	0					
ANR	3950320	Identifier	u		3950116	1					
ANR	3950321	Identifier	constant		3950116	1					
ANR	3950322	ExpressionStatement	zval_ptr_dtor ( & right_node . u . constant )	6050:4:179003:179040	3950116	2	True				
ANR	3950323	CallExpression	zval_ptr_dtor ( & right_node . u . constant )		3950116	0					
ANR	3950324	Callee	zval_ptr_dtor		3950116	0					
ANR	3950325	Identifier	zval_ptr_dtor		3950116	0					
ANR	3950326	ArgumentList	& right_node . u . constant		3950116	1					
ANR	3950327	Argument	& right_node . u . constant		3950116	0					
ANR	3950328	UnaryOperationExpression	& right_node . u . constant		3950116	0					
ANR	3950329	UnaryOperator	&		3950116	0					
ANR	3950330	MemberAccess	right_node . u . constant		3950116	1					
ANR	3950331	MemberAccess	right_node . u		3950116	0					
ANR	3950332	Identifier	right_node		3950116	0					
ANR	3950333	Identifier	u		3950116	1					
ANR	3950334	Identifier	constant		3950116	1					
ANR	3950335	ElseStatement	else		3950116	0					
ANR	3950336	CompoundStatement		26:10:829:829	3950116	0					
ANR	3950337	ExpressionStatement	"zend_emit_op ( result , ZEND_BOOL , & right_node , NULL )"	6052:4:179058:179108	3950116	0	True				
ANR	3950338	CallExpression	"zend_emit_op ( result , ZEND_BOOL , & right_node , NULL )"		3950116	0					
ANR	3950339	Callee	zend_emit_op		3950116	0					
ANR	3950340	Identifier	zend_emit_op		3950116	0					
ANR	3950341	ArgumentList	result		3950116	1					
ANR	3950342	Argument	result		3950116	0					
ANR	3950343	Identifier	result		3950116	0					
ANR	3950344	Argument	ZEND_BOOL		3950116	1					
ANR	3950345	Identifier	ZEND_BOOL		3950116	0					
ANR	3950346	Argument	& right_node		3950116	2					
ANR	3950347	UnaryOperationExpression	& right_node		3950116	0					
ANR	3950348	UnaryOperator	&		3950116	0					
ANR	3950349	Identifier	right_node		3950116	1					
ANR	3950350	Argument	NULL		3950116	3					
ANR	3950351	Identifier	NULL		3950116	0					
ANR	3950352	ExpressionStatement	zval_ptr_dtor ( & left_node . u . constant )	6056:2:179122:179158	3950116	1	True				
ANR	3950353	CallExpression	zval_ptr_dtor ( & left_node . u . constant )		3950116	0					
ANR	3950354	Callee	zval_ptr_dtor		3950116	0					
ANR	3950355	Identifier	zval_ptr_dtor		3950116	0					
ANR	3950356	ArgumentList	& left_node . u . constant		3950116	1					
ANR	3950357	Argument	& left_node . u . constant		3950116	0					
ANR	3950358	UnaryOperationExpression	& left_node . u . constant		3950116	0					
ANR	3950359	UnaryOperator	&		3950116	0					
ANR	3950360	MemberAccess	left_node . u . constant		3950116	1					
ANR	3950361	MemberAccess	left_node . u		3950116	0					
ANR	3950362	Identifier	left_node		3950116	0					
ANR	3950363	Identifier	u		3950116	1					
ANR	3950364	Identifier	constant		3950116	1					
ANR	3950365	ReturnStatement	return ;	6057:2:179162:179168	3950116	2	True				
ANR	3950366	ExpressionStatement	opnum_jmpz = get_next_op_number ( CG ( active_op_array ) )	6060:1:179175:179227	3950116	8	True				
ANR	3950367	AssignmentExpression	opnum_jmpz = get_next_op_number ( CG ( active_op_array ) )		3950116	0		=			
ANR	3950368	Identifier	opnum_jmpz		3950116	0					
ANR	3950369	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3950116	1					
ANR	3950370	Callee	get_next_op_number		3950116	0					
ANR	3950371	Identifier	get_next_op_number		3950116	0					
ANR	3950372	ArgumentList	CG ( active_op_array )		3950116	1					
ANR	3950373	Argument	CG ( active_op_array )		3950116	0					
ANR	3950374	CallExpression	CG ( active_op_array )		3950116	0					
ANR	3950375	Callee	CG		3950116	0					
ANR	3950376	Identifier	CG		3950116	0					
ANR	3950377	ArgumentList	active_op_array		3950116	1					
ANR	3950378	Argument	active_op_array		3950116	0					
ANR	3950379	Identifier	active_op_array		3950116	0					
ANR	3950380	ExpressionStatement	"opline_jmpz = zend_emit_op ( NULL , ast -> kind == ZEND_AST_AND ? ZEND_JMPZ_EX : ZEND_JMPNZ_EX , & left_node , NULL )"	6061:1:179230:179340	3950116	9	True				
ANR	3950381	AssignmentExpression	"opline_jmpz = zend_emit_op ( NULL , ast -> kind == ZEND_AST_AND ? ZEND_JMPZ_EX : ZEND_JMPNZ_EX , & left_node , NULL )"		3950116	0		=			
ANR	3950382	Identifier	opline_jmpz		3950116	0					
ANR	3950383	CallExpression	"zend_emit_op ( NULL , ast -> kind == ZEND_AST_AND ? ZEND_JMPZ_EX : ZEND_JMPNZ_EX , & left_node , NULL )"		3950116	1					
ANR	3950384	Callee	zend_emit_op		3950116	0					
ANR	3950385	Identifier	zend_emit_op		3950116	0					
ANR	3950386	ArgumentList	NULL		3950116	1					
ANR	3950387	Argument	NULL		3950116	0					
ANR	3950388	Identifier	NULL		3950116	0					
ANR	3950389	Argument	ast -> kind == ZEND_AST_AND ? ZEND_JMPZ_EX : ZEND_JMPNZ_EX		3950116	1					
ANR	3950390	ConditionalExpression	ast -> kind == ZEND_AST_AND ? ZEND_JMPZ_EX : ZEND_JMPNZ_EX		3950116	0					
ANR	3950391	Condition	ast -> kind == ZEND_AST_AND		3950116	0					
ANR	3950392	EqualityExpression	ast -> kind == ZEND_AST_AND		3950116	0		==			
ANR	3950393	PtrMemberAccess	ast -> kind		3950116	0					
ANR	3950394	Identifier	ast		3950116	0					
ANR	3950395	Identifier	kind		3950116	1					
ANR	3950396	Identifier	ZEND_AST_AND		3950116	1					
ANR	3950397	Identifier	ZEND_JMPZ_EX		3950116	1					
ANR	3950398	Identifier	ZEND_JMPNZ_EX		3950116	2					
ANR	3950399	Argument	& left_node		3950116	2					
ANR	3950400	UnaryOperationExpression	& left_node		3950116	0					
ANR	3950401	UnaryOperator	&		3950116	0					
ANR	3950402	Identifier	left_node		3950116	1					
ANR	3950403	Argument	NULL		3950116	3					
ANR	3950404	Identifier	NULL		3950116	0					
ANR	3950405	IfStatement	if ( left_node . op_type == IS_TMP_VAR )		3950116	10					
ANR	3950406	Condition	left_node . op_type == IS_TMP_VAR	6064:5:179348:179378	3950116	0	True				
ANR	3950407	EqualityExpression	left_node . op_type == IS_TMP_VAR		3950116	0		==			
ANR	3950408	MemberAccess	left_node . op_type		3950116	0					
ANR	3950409	Identifier	left_node		3950116	0					
ANR	3950410	Identifier	op_type		3950116	1					
ANR	3950411	Identifier	IS_TMP_VAR		3950116	1					
ANR	3950412	CompoundStatement		39:38:1158:1158	3950116	1					
ANR	3950413	ExpressionStatement	"SET_NODE ( opline_jmpz -> result , & left_node )"	6065:2:179385:179426	3950116	0	True				
ANR	3950414	CallExpression	"SET_NODE ( opline_jmpz -> result , & left_node )"		3950116	0					
ANR	3950415	Callee	SET_NODE		3950116	0					
ANR	3950416	Identifier	SET_NODE		3950116	0					
ANR	3950417	ArgumentList	opline_jmpz -> result		3950116	1					
ANR	3950418	Argument	opline_jmpz -> result		3950116	0					
ANR	3950419	PtrMemberAccess	opline_jmpz -> result		3950116	0					
ANR	3950420	Identifier	opline_jmpz		3950116	0					
ANR	3950421	Identifier	result		3950116	1					
ANR	3950422	Argument	& left_node		3950116	1					
ANR	3950423	UnaryOperationExpression	& left_node		3950116	0					
ANR	3950424	UnaryOperator	&		3950116	0					
ANR	3950425	Identifier	left_node		3950116	1					
ANR	3950426	ElseStatement	else		3950116	0					
ANR	3950427	CompoundStatement		41:8:1213:1213	3950116	0					
ANR	3950428	ExpressionStatement	opline_jmpz -> result . var = get_temporary_variable ( CG ( active_op_array ) )	6067:2:179440:179509	3950116	0	True				
ANR	3950429	AssignmentExpression	opline_jmpz -> result . var = get_temporary_variable ( CG ( active_op_array ) )		3950116	0		=			
ANR	3950430	MemberAccess	opline_jmpz -> result . var		3950116	0					
ANR	3950431	PtrMemberAccess	opline_jmpz -> result		3950116	0					
ANR	3950432	Identifier	opline_jmpz		3950116	0					
ANR	3950433	Identifier	result		3950116	1					
ANR	3950434	Identifier	var		3950116	1					
ANR	3950435	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3950116	1					
ANR	3950436	Callee	get_temporary_variable		3950116	0					
ANR	3950437	Identifier	get_temporary_variable		3950116	0					
ANR	3950438	ArgumentList	CG ( active_op_array )		3950116	1					
ANR	3950439	Argument	CG ( active_op_array )		3950116	0					
ANR	3950440	CallExpression	CG ( active_op_array )		3950116	0					
ANR	3950441	Callee	CG		3950116	0					
ANR	3950442	Identifier	CG		3950116	0					
ANR	3950443	ArgumentList	active_op_array		3950116	1					
ANR	3950444	Argument	active_op_array		3950116	0					
ANR	3950445	Identifier	active_op_array		3950116	0					
ANR	3950446	ExpressionStatement	opline_jmpz -> result_type = IS_TMP_VAR	6068:2:179513:179550	3950116	1	True				
ANR	3950447	AssignmentExpression	opline_jmpz -> result_type = IS_TMP_VAR		3950116	0		=			
ANR	3950448	PtrMemberAccess	opline_jmpz -> result_type		3950116	0					
ANR	3950449	Identifier	opline_jmpz		3950116	0					
ANR	3950450	Identifier	result_type		3950116	1					
ANR	3950451	Identifier	IS_TMP_VAR		3950116	1					
ANR	3950452	ExpressionStatement	"GET_NODE ( result , opline_jmpz -> result )"	6071:1:179557:179594	3950116	11	True				
ANR	3950453	CallExpression	"GET_NODE ( result , opline_jmpz -> result )"		3950116	0					
ANR	3950454	Callee	GET_NODE		3950116	0					
ANR	3950455	Identifier	GET_NODE		3950116	0					
ANR	3950456	ArgumentList	result		3950116	1					
ANR	3950457	Argument	result		3950116	0					
ANR	3950458	Identifier	result		3950116	0					
ANR	3950459	Argument	opline_jmpz -> result		3950116	1					
ANR	3950460	PtrMemberAccess	opline_jmpz -> result		3950116	0					
ANR	3950461	Identifier	opline_jmpz		3950116	0					
ANR	3950462	Identifier	result		3950116	1					
ANR	3950463	ExpressionStatement	"zend_compile_expr ( & right_node , right_ast )"	6072:1:179597:179638	3950116	12	True				
ANR	3950464	CallExpression	"zend_compile_expr ( & right_node , right_ast )"		3950116	0					
ANR	3950465	Callee	zend_compile_expr		3950116	0					
ANR	3950466	Identifier	zend_compile_expr		3950116	0					
ANR	3950467	ArgumentList	& right_node		3950116	1					
ANR	3950468	Argument	& right_node		3950116	0					
ANR	3950469	UnaryOperationExpression	& right_node		3950116	0					
ANR	3950470	UnaryOperator	&		3950116	0					
ANR	3950471	Identifier	right_node		3950116	1					
ANR	3950472	Argument	right_ast		3950116	1					
ANR	3950473	Identifier	right_ast		3950116	0					
ANR	3950474	ExpressionStatement	"opline_bool = zend_emit_op ( NULL , ZEND_BOOL , & right_node , NULL )"	6074:1:179642:179704	3950116	13	True				
ANR	3950475	AssignmentExpression	"opline_bool = zend_emit_op ( NULL , ZEND_BOOL , & right_node , NULL )"		3950116	0		=			
ANR	3950476	Identifier	opline_bool		3950116	0					
ANR	3950477	CallExpression	"zend_emit_op ( NULL , ZEND_BOOL , & right_node , NULL )"		3950116	1					
ANR	3950478	Callee	zend_emit_op		3950116	0					
ANR	3950479	Identifier	zend_emit_op		3950116	0					
ANR	3950480	ArgumentList	NULL		3950116	1					
ANR	3950481	Argument	NULL		3950116	0					
ANR	3950482	Identifier	NULL		3950116	0					
ANR	3950483	Argument	ZEND_BOOL		3950116	1					
ANR	3950484	Identifier	ZEND_BOOL		3950116	0					
ANR	3950485	Argument	& right_node		3950116	2					
ANR	3950486	UnaryOperationExpression	& right_node		3950116	0					
ANR	3950487	UnaryOperator	&		3950116	0					
ANR	3950488	Identifier	right_node		3950116	1					
ANR	3950489	Argument	NULL		3950116	3					
ANR	3950490	Identifier	NULL		3950116	0					
ANR	3950491	ExpressionStatement	"SET_NODE ( opline_bool -> result , result )"	6075:1:179707:179744	3950116	14	True				
ANR	3950492	CallExpression	"SET_NODE ( opline_bool -> result , result )"		3950116	0					
ANR	3950493	Callee	SET_NODE		3950116	0					
ANR	3950494	Identifier	SET_NODE		3950116	0					
ANR	3950495	ArgumentList	opline_bool -> result		3950116	1					
ANR	3950496	Argument	opline_bool -> result		3950116	0					
ANR	3950497	PtrMemberAccess	opline_bool -> result		3950116	0					
ANR	3950498	Identifier	opline_bool		3950116	0					
ANR	3950499	Identifier	result		3950116	1					
ANR	3950500	Argument	result		3950116	1					
ANR	3950501	Identifier	result		3950116	0					
ANR	3950502	ExpressionStatement	zend_update_jump_target_to_next ( opnum_jmpz )	6077:1:179748:179791	3950116	15	True				
ANR	3950503	CallExpression	zend_update_jump_target_to_next ( opnum_jmpz )		3950116	0					
ANR	3950504	Callee	zend_update_jump_target_to_next		3950116	0					
ANR	3950505	Identifier	zend_update_jump_target_to_next		3950116	0					
ANR	3950506	ArgumentList	opnum_jmpz		3950116	1					
ANR	3950507	Argument	opnum_jmpz		3950116	0					
ANR	3950508	Identifier	opnum_jmpz		3950116	0					
ANR	3950509	ReturnType	void		3950116	1					
ANR	3950510	Identifier	zend_compile_short_circuiting		3950116	2					
ANR	3950511	ParameterList	"znode * result , zend_ast * ast"		3950116	3					
ANR	3950512	Parameter	znode * result	6025:35:178182:178194	3950116	0	True				
ANR	3950513	ParameterType	znode *		3950116	0					
ANR	3950514	Identifier	result		3950116	1					
ANR	3950515	Parameter	zend_ast * ast	6025:50:178197:178209	3950116	1	True				
ANR	3950516	ParameterType	zend_ast *		3950116	0					
ANR	3950517	Identifier	ast		3950116	1					
ANR	3950518	CFGEntryNode	ENTRY		3950116		True				
ANR	3950519	CFGExitNode	EXIT		3950116		True				
ANR	3950520	Symbol	ZEND_BOOL		3950116						
ANR	3950521	Symbol	right_node		3950116						
ANR	3950522	Symbol	ast -> kind		3950116						
ANR	3950523	Symbol	ast		3950116						
ANR	3950524	Symbol	get_temporary_variable		3950116						
ANR	3950525	Symbol	result -> u		3950116						
ANR	3950526	Symbol	opline_jmpz		3950116						
ANR	3950527	Symbol	& left_node . u . constant		3950116						
ANR	3950528	Symbol	left_node . u		3950116						
ANR	3950529	Symbol	& right_node . u		3950116						
ANR	3950530	Symbol	IS_TMP_VAR		3950116						
ANR	3950531	Symbol	right_node . op_type		3950116						
ANR	3950532	Symbol	opline_bool		3950116						
ANR	3950533	Symbol	right_ast		3950116						
ANR	3950534	Symbol	IS_CONST		3950116						
ANR	3950535	Symbol	NULL		3950116						
ANR	3950536	Symbol	ZEND_AST_AND		3950116						
ANR	3950537	Symbol	opline_jmpz -> result_type		3950116						
ANR	3950538	Symbol	opnum_jmpz		3950116						
ANR	3950539	Symbol	* opline_jmpz		3950116						
ANR	3950540	Symbol	& left_node		3950116						
ANR	3950541	Symbol	opline_jmpz -> result		3950116						
ANR	3950542	Symbol	* ast -> child		3950116						
ANR	3950543	Symbol	opline_bool -> result		3950116						
ANR	3950544	Symbol	left_ast		3950116						
ANR	3950545	Symbol	ast -> child		3950116						
ANR	3950546	Symbol	zend_is_true		3950116						
ANR	3950547	Symbol	ZEND_JMPZ_EX		3950116						
ANR	3950548	Symbol	zend_emit_op		3950116						
ANR	3950549	Symbol	right_node . u		3950116						
ANR	3950550	Symbol	ZEND_JMPNZ_EX		3950116						
ANR	3950551	Symbol	& right_node		3950116						
ANR	3950552	Symbol	result -> op_type		3950116						
ANR	3950553	Symbol	ZEND_AST_OR		3950116						
ANR	3950554	Symbol	result		3950116						
ANR	3950555	Symbol	* ast		3950116						
ANR	3950556	Symbol	* result		3950116						
ANR	3950557	Symbol	* * ast		3950116						
ANR	3950558	Symbol	& result -> u . constant		3950116						
ANR	3950559	Symbol	& right_node . u . constant		3950116						
ANR	3950560	Symbol	left_node . op_type		3950116						
ANR	3950561	Symbol	& result -> u		3950116						
ANR	3950562	Symbol	CG		3950116						
ANR	3950563	Symbol	active_op_array		3950116						
ANR	3950564	Symbol	& left_node . u		3950116						
ANR	3950565	Symbol	left_node		3950116						
ANR	3950566	Symbol	opline_jmpz -> result . var		3950116						
ANR	3950567	Symbol	* opline_bool		3950116						
ANR	3950568	Symbol	get_next_op_number		3950116						
ANR	3950569	Function	zend_compile_post_incdec	6081:0:179806:180473							
ANR	3950570	FunctionDef	"zend_compile_post_incdec (znode * result , zend_ast * ast)"		3950569	0					
ANR	3950571	CompoundStatement		6082:0:179876:180473	3950569	0					
ANR	3950572	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	6083:1:179879:179912	3950569	0	True				
ANR	3950573	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3950569	0					
ANR	3950574	IdentifierDeclType	zend_ast *		3950569	0					
ANR	3950575	Identifier	var_ast		3950569	1					
ANR	3950576	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3950569	2		=			
ANR	3950577	Identifier	var_ast		3950569	0					
ANR	3950578	ArrayIndexing	ast -> child [ 0 ]		3950569	1					
ANR	3950579	PtrMemberAccess	ast -> child		3950569	0					
ANR	3950580	Identifier	ast		3950569	0					
ANR	3950581	Identifier	child		3950569	1					
ANR	3950582	PrimaryExpression	0		3950569	1					
ANR	3950583	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_POST_INC || ast -> kind == ZEND_AST_POST_DEC )	6084:1:179915:179992	3950569	1	True				
ANR	3950584	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_POST_INC || ast -> kind == ZEND_AST_POST_DEC )		3950569	0					
ANR	3950585	Callee	ZEND_ASSERT		3950569	0					
ANR	3950586	Identifier	ZEND_ASSERT		3950569	0					
ANR	3950587	ArgumentList	ast -> kind == ZEND_AST_POST_INC || ast -> kind == ZEND_AST_POST_DEC		3950569	1					
ANR	3950588	Argument	ast -> kind == ZEND_AST_POST_INC || ast -> kind == ZEND_AST_POST_DEC		3950569	0					
ANR	3950589	OrExpression	ast -> kind == ZEND_AST_POST_INC || ast -> kind == ZEND_AST_POST_DEC		3950569	0		||			
ANR	3950590	EqualityExpression	ast -> kind == ZEND_AST_POST_INC		3950569	0		==			
ANR	3950591	PtrMemberAccess	ast -> kind		3950569	0					
ANR	3950592	Identifier	ast		3950569	0					
ANR	3950593	Identifier	kind		3950569	1					
ANR	3950594	Identifier	ZEND_AST_POST_INC		3950569	1					
ANR	3950595	EqualityExpression	ast -> kind == ZEND_AST_POST_DEC		3950569	1		==			
ANR	3950596	PtrMemberAccess	ast -> kind		3950569	0					
ANR	3950597	Identifier	ast		3950569	0					
ANR	3950598	Identifier	kind		3950569	1					
ANR	3950599	Identifier	ZEND_AST_POST_DEC		3950569	1					
ANR	3950600	ExpressionStatement	zend_ensure_writable_variable ( var_ast )	6086:1:179996:180034	3950569	2	True				
ANR	3950601	CallExpression	zend_ensure_writable_variable ( var_ast )		3950569	0					
ANR	3950602	Callee	zend_ensure_writable_variable		3950569	0					
ANR	3950603	Identifier	zend_ensure_writable_variable		3950569	0					
ANR	3950604	ArgumentList	var_ast		3950569	1					
ANR	3950605	Argument	var_ast		3950569	0					
ANR	3950606	Identifier	var_ast		3950569	0					
ANR	3950607	IfStatement	if ( var_ast -> kind == ZEND_AST_PROP )		3950569	3					
ANR	3950608	Condition	var_ast -> kind == ZEND_AST_PROP	6088:5:180042:180071	3950569	0	True				
ANR	3950609	EqualityExpression	var_ast -> kind == ZEND_AST_PROP		3950569	0		==			
ANR	3950610	PtrMemberAccess	var_ast -> kind		3950569	0					
ANR	3950611	Identifier	var_ast		3950569	0					
ANR	3950612	Identifier	kind		3950569	1					
ANR	3950613	Identifier	ZEND_AST_PROP		3950569	1					
ANR	3950614	CompoundStatement		8:2:201:269	3950569	1					
ANR	3950615	IdentifierDeclStatement	"zend_op * opline = zend_compile_prop_common ( NULL , var_ast , BP_VAR_RW ) ;"	6089:2:180078:180146	3950569	0	True				
ANR	3950616	IdentifierDecl	"* opline = zend_compile_prop_common ( NULL , var_ast , BP_VAR_RW )"		3950569	0					
ANR	3950617	IdentifierDeclType	zend_op *		3950569	0					
ANR	3950618	Identifier	opline		3950569	1					
ANR	3950619	AssignmentExpression	"* opline = zend_compile_prop_common ( NULL , var_ast , BP_VAR_RW )"		3950569	2		=			
ANR	3950620	Identifier	opline		3950569	0					
ANR	3950621	CallExpression	"zend_compile_prop_common ( NULL , var_ast , BP_VAR_RW )"		3950569	1					
ANR	3950622	Callee	zend_compile_prop_common		3950569	0					
ANR	3950623	Identifier	zend_compile_prop_common		3950569	0					
ANR	3950624	ArgumentList	NULL		3950569	1					
ANR	3950625	Argument	NULL		3950569	0					
ANR	3950626	Identifier	NULL		3950569	0					
ANR	3950627	Argument	var_ast		3950569	1					
ANR	3950628	Identifier	var_ast		3950569	0					
ANR	3950629	Argument	BP_VAR_RW		3950569	2					
ANR	3950630	Identifier	BP_VAR_RW		3950569	0					
ANR	3950631	ExpressionStatement	opline -> opcode = ast -> kind == ZEND_AST_POST_INC ? ZEND_POST_INC_OBJ : ZEND_POST_DEC_OBJ	6090:2:180150:180237	3950569	1	True				
ANR	3950632	AssignmentExpression	opline -> opcode = ast -> kind == ZEND_AST_POST_INC ? ZEND_POST_INC_OBJ : ZEND_POST_DEC_OBJ		3950569	0		=			
ANR	3950633	PtrMemberAccess	opline -> opcode		3950569	0					
ANR	3950634	Identifier	opline		3950569	0					
ANR	3950635	Identifier	opcode		3950569	1					
ANR	3950636	ConditionalExpression	ast -> kind == ZEND_AST_POST_INC ? ZEND_POST_INC_OBJ : ZEND_POST_DEC_OBJ		3950569	1					
ANR	3950637	Condition	ast -> kind == ZEND_AST_POST_INC		3950569	0					
ANR	3950638	EqualityExpression	ast -> kind == ZEND_AST_POST_INC		3950569	0		==			
ANR	3950639	PtrMemberAccess	ast -> kind		3950569	0					
ANR	3950640	Identifier	ast		3950569	0					
ANR	3950641	Identifier	kind		3950569	1					
ANR	3950642	Identifier	ZEND_AST_POST_INC		3950569	1					
ANR	3950643	Identifier	ZEND_POST_INC_OBJ		3950569	1					
ANR	3950644	Identifier	ZEND_POST_DEC_OBJ		3950569	2					
ANR	3950645	ExpressionStatement	"zend_make_tmp_result ( result , opline )"	6091:2:180241:180277	3950569	2	True				
ANR	3950646	CallExpression	"zend_make_tmp_result ( result , opline )"		3950569	0					
ANR	3950647	Callee	zend_make_tmp_result		3950569	0					
ANR	3950648	Identifier	zend_make_tmp_result		3950569	0					
ANR	3950649	ArgumentList	result		3950569	1					
ANR	3950650	Argument	result		3950569	0					
ANR	3950651	Identifier	result		3950569	0					
ANR	3950652	Argument	opline		3950569	1					
ANR	3950653	Identifier	opline		3950569	0					
ANR	3950654	ElseStatement	else		3950569	0					
ANR	3950655	CompoundStatement		12:2:414:428	3950569	0					
ANR	3950656	IdentifierDeclStatement	znode var_node ;	6093:2:180291:180305	3950569	0	True				
ANR	3950657	IdentifierDecl	var_node		3950569	0					
ANR	3950658	IdentifierDeclType	znode		3950569	0					
ANR	3950659	Identifier	var_node		3950569	1					
ANR	3950660	ExpressionStatement	"zend_compile_var ( & var_node , var_ast , BP_VAR_RW )"	6094:2:180309:180356	3950569	1	True				
ANR	3950661	CallExpression	"zend_compile_var ( & var_node , var_ast , BP_VAR_RW )"		3950569	0					
ANR	3950662	Callee	zend_compile_var		3950569	0					
ANR	3950663	Identifier	zend_compile_var		3950569	0					
ANR	3950664	ArgumentList	& var_node		3950569	1					
ANR	3950665	Argument	& var_node		3950569	0					
ANR	3950666	UnaryOperationExpression	& var_node		3950569	0					
ANR	3950667	UnaryOperator	&		3950569	0					
ANR	3950668	Identifier	var_node		3950569	1					
ANR	3950669	Argument	var_ast		3950569	1					
ANR	3950670	Identifier	var_ast		3950569	0					
ANR	3950671	Argument	BP_VAR_RW		3950569	2					
ANR	3950672	Identifier	BP_VAR_RW		3950569	0					
ANR	3950673	ExpressionStatement	"zend_emit_op_tmp ( result , ast -> kind == ZEND_AST_POST_INC ? ZEND_POST_INC : ZEND_POST_DEC , & var_node , NULL )"	6095:2:180360:180468	3950569	2	True				
ANR	3950674	CallExpression	"zend_emit_op_tmp ( result , ast -> kind == ZEND_AST_POST_INC ? ZEND_POST_INC : ZEND_POST_DEC , & var_node , NULL )"		3950569	0					
ANR	3950675	Callee	zend_emit_op_tmp		3950569	0					
ANR	3950676	Identifier	zend_emit_op_tmp		3950569	0					
ANR	3950677	ArgumentList	result		3950569	1					
ANR	3950678	Argument	result		3950569	0					
ANR	3950679	Identifier	result		3950569	0					
ANR	3950680	Argument	ast -> kind == ZEND_AST_POST_INC ? ZEND_POST_INC : ZEND_POST_DEC		3950569	1					
ANR	3950681	ConditionalExpression	ast -> kind == ZEND_AST_POST_INC ? ZEND_POST_INC : ZEND_POST_DEC		3950569	0					
ANR	3950682	Condition	ast -> kind == ZEND_AST_POST_INC		3950569	0					
ANR	3950683	EqualityExpression	ast -> kind == ZEND_AST_POST_INC		3950569	0		==			
ANR	3950684	PtrMemberAccess	ast -> kind		3950569	0					
ANR	3950685	Identifier	ast		3950569	0					
ANR	3950686	Identifier	kind		3950569	1					
ANR	3950687	Identifier	ZEND_AST_POST_INC		3950569	1					
ANR	3950688	Identifier	ZEND_POST_INC		3950569	1					
ANR	3950689	Identifier	ZEND_POST_DEC		3950569	2					
ANR	3950690	Argument	& var_node		3950569	2					
ANR	3950691	UnaryOperationExpression	& var_node		3950569	0					
ANR	3950692	UnaryOperator	&		3950569	0					
ANR	3950693	Identifier	var_node		3950569	1					
ANR	3950694	Argument	NULL		3950569	3					
ANR	3950695	Identifier	NULL		3950569	0					
ANR	3950696	ReturnType	void		3950569	1					
ANR	3950697	Identifier	zend_compile_post_incdec		3950569	2					
ANR	3950698	ParameterList	"znode * result , zend_ast * ast"		3950569	3					
ANR	3950699	Parameter	znode * result	6081:30:179836:179848	3950569	0	True				
ANR	3950700	ParameterType	znode *		3950569	0					
ANR	3950701	Identifier	result		3950569	1					
ANR	3950702	Parameter	zend_ast * ast	6081:45:179851:179863	3950569	1	True				
ANR	3950703	ParameterType	zend_ast *		3950569	0					
ANR	3950704	Identifier	ast		3950569	1					
ANR	3950705	CFGEntryNode	ENTRY		3950569		True				
ANR	3950706	CFGExitNode	EXIT		3950569		True				
ANR	3950707	Symbol	ZEND_POST_DEC		3950569						
ANR	3950708	Symbol	ast -> kind		3950569						
ANR	3950709	Symbol	ast		3950569						
ANR	3950710	Symbol	* var_ast		3950569						
ANR	3950711	Symbol	result		3950569						
ANR	3950712	Symbol	* ast		3950569						
ANR	3950713	Symbol	opline		3950569						
ANR	3950714	Symbol	var_ast -> kind		3950569						
ANR	3950715	Symbol	* * ast		3950569						
ANR	3950716	Symbol	ZEND_AST_POST_DEC		3950569						
ANR	3950717	Symbol	ZEND_POST_INC		3950569						
ANR	3950718	Symbol	BP_VAR_RW		3950569						
ANR	3950719	Symbol	ZEND_POST_DEC_OBJ		3950569						
ANR	3950720	Symbol	ZEND_POST_INC_OBJ		3950569						
ANR	3950721	Symbol	NULL		3950569						
ANR	3950722	Symbol	var_node		3950569						
ANR	3950723	Symbol	& var_node		3950569						
ANR	3950724	Symbol	ZEND_AST_PROP		3950569						
ANR	3950725	Symbol	zend_compile_prop_common		3950569						
ANR	3950726	Symbol	var_ast		3950569						
ANR	3950727	Symbol	* opline		3950569						
ANR	3950728	Symbol	opline -> opcode		3950569						
ANR	3950729	Symbol	ZEND_AST_POST_INC		3950569						
ANR	3950730	Symbol	* ast -> child		3950569						
ANR	3950731	Symbol	ast -> child		3950569						
ANR	3950732	Function	zend_compile_pre_incdec	6101:0:180486:181102							
ANR	3950733	FunctionDef	"zend_compile_pre_incdec (znode * result , zend_ast * ast)"		3950732	0					
ANR	3950734	CompoundStatement		6102:0:180555:181102	3950732	0					
ANR	3950735	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	6103:1:180558:180591	3950732	0	True				
ANR	3950736	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3950732	0					
ANR	3950737	IdentifierDeclType	zend_ast *		3950732	0					
ANR	3950738	Identifier	var_ast		3950732	1					
ANR	3950739	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3950732	2		=			
ANR	3950740	Identifier	var_ast		3950732	0					
ANR	3950741	ArrayIndexing	ast -> child [ 0 ]		3950732	1					
ANR	3950742	PtrMemberAccess	ast -> child		3950732	0					
ANR	3950743	Identifier	ast		3950732	0					
ANR	3950744	Identifier	child		3950732	1					
ANR	3950745	PrimaryExpression	0		3950732	1					
ANR	3950746	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_PRE_INC || ast -> kind == ZEND_AST_PRE_DEC )	6104:1:180594:180669	3950732	1	True				
ANR	3950747	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_PRE_INC || ast -> kind == ZEND_AST_PRE_DEC )		3950732	0					
ANR	3950748	Callee	ZEND_ASSERT		3950732	0					
ANR	3950749	Identifier	ZEND_ASSERT		3950732	0					
ANR	3950750	ArgumentList	ast -> kind == ZEND_AST_PRE_INC || ast -> kind == ZEND_AST_PRE_DEC		3950732	1					
ANR	3950751	Argument	ast -> kind == ZEND_AST_PRE_INC || ast -> kind == ZEND_AST_PRE_DEC		3950732	0					
ANR	3950752	OrExpression	ast -> kind == ZEND_AST_PRE_INC || ast -> kind == ZEND_AST_PRE_DEC		3950732	0		||			
ANR	3950753	EqualityExpression	ast -> kind == ZEND_AST_PRE_INC		3950732	0		==			
ANR	3950754	PtrMemberAccess	ast -> kind		3950732	0					
ANR	3950755	Identifier	ast		3950732	0					
ANR	3950756	Identifier	kind		3950732	1					
ANR	3950757	Identifier	ZEND_AST_PRE_INC		3950732	1					
ANR	3950758	EqualityExpression	ast -> kind == ZEND_AST_PRE_DEC		3950732	1		==			
ANR	3950759	PtrMemberAccess	ast -> kind		3950732	0					
ANR	3950760	Identifier	ast		3950732	0					
ANR	3950761	Identifier	kind		3950732	1					
ANR	3950762	Identifier	ZEND_AST_PRE_DEC		3950732	1					
ANR	3950763	ExpressionStatement	zend_ensure_writable_variable ( var_ast )	6106:1:180673:180711	3950732	2	True				
ANR	3950764	CallExpression	zend_ensure_writable_variable ( var_ast )		3950732	0					
ANR	3950765	Callee	zend_ensure_writable_variable		3950732	0					
ANR	3950766	Identifier	zend_ensure_writable_variable		3950732	0					
ANR	3950767	ArgumentList	var_ast		3950732	1					
ANR	3950768	Argument	var_ast		3950732	0					
ANR	3950769	Identifier	var_ast		3950732	0					
ANR	3950770	IfStatement	if ( var_ast -> kind == ZEND_AST_PROP )		3950732	3					
ANR	3950771	Condition	var_ast -> kind == ZEND_AST_PROP	6108:5:180719:180748	3950732	0	True				
ANR	3950772	EqualityExpression	var_ast -> kind == ZEND_AST_PROP		3950732	0		==			
ANR	3950773	PtrMemberAccess	var_ast -> kind		3950732	0					
ANR	3950774	Identifier	var_ast		3950732	0					
ANR	3950775	Identifier	kind		3950732	1					
ANR	3950776	Identifier	ZEND_AST_PROP		3950732	1					
ANR	3950777	CompoundStatement		8:2:199:269	3950732	1					
ANR	3950778	IdentifierDeclStatement	"zend_op * opline = zend_compile_prop_common ( result , var_ast , BP_VAR_RW ) ;"	6109:2:180755:180825	3950732	0	True				
ANR	3950779	IdentifierDecl	"* opline = zend_compile_prop_common ( result , var_ast , BP_VAR_RW )"		3950732	0					
ANR	3950780	IdentifierDeclType	zend_op *		3950732	0					
ANR	3950781	Identifier	opline		3950732	1					
ANR	3950782	AssignmentExpression	"* opline = zend_compile_prop_common ( result , var_ast , BP_VAR_RW )"		3950732	2		=			
ANR	3950783	Identifier	opline		3950732	0					
ANR	3950784	CallExpression	"zend_compile_prop_common ( result , var_ast , BP_VAR_RW )"		3950732	1					
ANR	3950785	Callee	zend_compile_prop_common		3950732	0					
ANR	3950786	Identifier	zend_compile_prop_common		3950732	0					
ANR	3950787	ArgumentList	result		3950732	1					
ANR	3950788	Argument	result		3950732	0					
ANR	3950789	Identifier	result		3950732	0					
ANR	3950790	Argument	var_ast		3950732	1					
ANR	3950791	Identifier	var_ast		3950732	0					
ANR	3950792	Argument	BP_VAR_RW		3950732	2					
ANR	3950793	Identifier	BP_VAR_RW		3950732	0					
ANR	3950794	ExpressionStatement	opline -> opcode = ast -> kind == ZEND_AST_PRE_INC ? ZEND_PRE_INC_OBJ : ZEND_PRE_DEC_OBJ	6110:2:180829:180913	3950732	1	True				
ANR	3950795	AssignmentExpression	opline -> opcode = ast -> kind == ZEND_AST_PRE_INC ? ZEND_PRE_INC_OBJ : ZEND_PRE_DEC_OBJ		3950732	0		=			
ANR	3950796	PtrMemberAccess	opline -> opcode		3950732	0					
ANR	3950797	Identifier	opline		3950732	0					
ANR	3950798	Identifier	opcode		3950732	1					
ANR	3950799	ConditionalExpression	ast -> kind == ZEND_AST_PRE_INC ? ZEND_PRE_INC_OBJ : ZEND_PRE_DEC_OBJ		3950732	1					
ANR	3950800	Condition	ast -> kind == ZEND_AST_PRE_INC		3950732	0					
ANR	3950801	EqualityExpression	ast -> kind == ZEND_AST_PRE_INC		3950732	0		==			
ANR	3950802	PtrMemberAccess	ast -> kind		3950732	0					
ANR	3950803	Identifier	ast		3950732	0					
ANR	3950804	Identifier	kind		3950732	1					
ANR	3950805	Identifier	ZEND_AST_PRE_INC		3950732	1					
ANR	3950806	Identifier	ZEND_PRE_INC_OBJ		3950732	1					
ANR	3950807	Identifier	ZEND_PRE_DEC_OBJ		3950732	2					
ANR	3950808	ElseStatement	else		3950732	0					
ANR	3950809	CompoundStatement		11:2:371:385	3950732	0					
ANR	3950810	IdentifierDeclStatement	znode var_node ;	6112:2:180927:180941	3950732	0	True				
ANR	3950811	IdentifierDecl	var_node		3950732	0					
ANR	3950812	IdentifierDeclType	znode		3950732	0					
ANR	3950813	Identifier	var_node		3950732	1					
ANR	3950814	ExpressionStatement	"zend_compile_var ( & var_node , var_ast , BP_VAR_RW )"	6113:2:180945:180992	3950732	1	True				
ANR	3950815	CallExpression	"zend_compile_var ( & var_node , var_ast , BP_VAR_RW )"		3950732	0					
ANR	3950816	Callee	zend_compile_var		3950732	0					
ANR	3950817	Identifier	zend_compile_var		3950732	0					
ANR	3950818	ArgumentList	& var_node		3950732	1					
ANR	3950819	Argument	& var_node		3950732	0					
ANR	3950820	UnaryOperationExpression	& var_node		3950732	0					
ANR	3950821	UnaryOperator	&		3950732	0					
ANR	3950822	Identifier	var_node		3950732	1					
ANR	3950823	Argument	var_ast		3950732	1					
ANR	3950824	Identifier	var_ast		3950732	0					
ANR	3950825	Argument	BP_VAR_RW		3950732	2					
ANR	3950826	Identifier	BP_VAR_RW		3950732	0					
ANR	3950827	ExpressionStatement	"zend_emit_op ( result , ast -> kind == ZEND_AST_PRE_INC ? ZEND_PRE_INC : ZEND_PRE_DEC , & var_node , NULL )"	6114:2:180996:181097	3950732	2	True				
ANR	3950828	CallExpression	"zend_emit_op ( result , ast -> kind == ZEND_AST_PRE_INC ? ZEND_PRE_INC : ZEND_PRE_DEC , & var_node , NULL )"		3950732	0					
ANR	3950829	Callee	zend_emit_op		3950732	0					
ANR	3950830	Identifier	zend_emit_op		3950732	0					
ANR	3950831	ArgumentList	result		3950732	1					
ANR	3950832	Argument	result		3950732	0					
ANR	3950833	Identifier	result		3950732	0					
ANR	3950834	Argument	ast -> kind == ZEND_AST_PRE_INC ? ZEND_PRE_INC : ZEND_PRE_DEC		3950732	1					
ANR	3950835	ConditionalExpression	ast -> kind == ZEND_AST_PRE_INC ? ZEND_PRE_INC : ZEND_PRE_DEC		3950732	0					
ANR	3950836	Condition	ast -> kind == ZEND_AST_PRE_INC		3950732	0					
ANR	3950837	EqualityExpression	ast -> kind == ZEND_AST_PRE_INC		3950732	0		==			
ANR	3950838	PtrMemberAccess	ast -> kind		3950732	0					
ANR	3950839	Identifier	ast		3950732	0					
ANR	3950840	Identifier	kind		3950732	1					
ANR	3950841	Identifier	ZEND_AST_PRE_INC		3950732	1					
ANR	3950842	Identifier	ZEND_PRE_INC		3950732	1					
ANR	3950843	Identifier	ZEND_PRE_DEC		3950732	2					
ANR	3950844	Argument	& var_node		3950732	2					
ANR	3950845	UnaryOperationExpression	& var_node		3950732	0					
ANR	3950846	UnaryOperator	&		3950732	0					
ANR	3950847	Identifier	var_node		3950732	1					
ANR	3950848	Argument	NULL		3950732	3					
ANR	3950849	Identifier	NULL		3950732	0					
ANR	3950850	ReturnType	void		3950732	1					
ANR	3950851	Identifier	zend_compile_pre_incdec		3950732	2					
ANR	3950852	ParameterList	"znode * result , zend_ast * ast"		3950732	3					
ANR	3950853	Parameter	znode * result	6101:29:180515:180527	3950732	0	True				
ANR	3950854	ParameterType	znode *		3950732	0					
ANR	3950855	Identifier	result		3950732	1					
ANR	3950856	Parameter	zend_ast * ast	6101:44:180530:180542	3950732	1	True				
ANR	3950857	ParameterType	zend_ast *		3950732	0					
ANR	3950858	Identifier	ast		3950732	1					
ANR	3950859	CFGEntryNode	ENTRY		3950732		True				
ANR	3950860	CFGExitNode	EXIT		3950732		True				
ANR	3950861	Symbol	ast -> kind		3950732						
ANR	3950862	Symbol	ast		3950732						
ANR	3950863	Symbol	ZEND_PRE_DEC		3950732						
ANR	3950864	Symbol	* var_ast		3950732						
ANR	3950865	Symbol	result		3950732						
ANR	3950866	Symbol	* ast		3950732						
ANR	3950867	Symbol	opline		3950732						
ANR	3950868	Symbol	var_ast -> kind		3950732						
ANR	3950869	Symbol	* * ast		3950732						
ANR	3950870	Symbol	ZEND_PRE_DEC_OBJ		3950732						
ANR	3950871	Symbol	ZEND_AST_PRE_DEC		3950732						
ANR	3950872	Symbol	BP_VAR_RW		3950732						
ANR	3950873	Symbol	NULL		3950732						
ANR	3950874	Symbol	var_node		3950732						
ANR	3950875	Symbol	& var_node		3950732						
ANR	3950876	Symbol	ZEND_PRE_INC_OBJ		3950732						
ANR	3950877	Symbol	ZEND_PRE_INC		3950732						
ANR	3950878	Symbol	ZEND_AST_PROP		3950732						
ANR	3950879	Symbol	ZEND_AST_PRE_INC		3950732						
ANR	3950880	Symbol	zend_compile_prop_common		3950732						
ANR	3950881	Symbol	var_ast		3950732						
ANR	3950882	Symbol	* opline		3950732						
ANR	3950883	Symbol	opline -> opcode		3950732						
ANR	3950884	Symbol	* ast -> child		3950732						
ANR	3950885	Symbol	ast -> child		3950732						
ANR	3950886	Function	zend_compile_cast	6120:0:181115:181399							
ANR	3950887	FunctionDef	"zend_compile_cast (znode * result , zend_ast * ast)"		3950886	0					
ANR	3950888	CompoundStatement		6121:0:181178:181399	3950886	0					
ANR	3950889	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6122:1:181181:181215	3950886	0	True				
ANR	3950890	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3950886	0					
ANR	3950891	IdentifierDeclType	zend_ast *		3950886	0					
ANR	3950892	Identifier	expr_ast		3950886	1					
ANR	3950893	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3950886	2		=			
ANR	3950894	Identifier	expr_ast		3950886	0					
ANR	3950895	ArrayIndexing	ast -> child [ 0 ]		3950886	1					
ANR	3950896	PtrMemberAccess	ast -> child		3950886	0					
ANR	3950897	Identifier	ast		3950886	0					
ANR	3950898	Identifier	child		3950886	1					
ANR	3950899	PrimaryExpression	0		3950886	1					
ANR	3950900	IdentifierDeclStatement	znode expr_node ;	6123:1:181218:181233	3950886	1	True				
ANR	3950901	IdentifierDecl	expr_node		3950886	0					
ANR	3950902	IdentifierDeclType	znode		3950886	0					
ANR	3950903	Identifier	expr_node		3950886	1					
ANR	3950904	IdentifierDeclStatement	zend_op * opline ;	6124:1:181236:181251	3950886	2	True				
ANR	3950905	IdentifierDecl	* opline		3950886	0					
ANR	3950906	IdentifierDeclType	zend_op *		3950886	0					
ANR	3950907	Identifier	opline		3950886	1					
ANR	3950908	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	6126:1:181255:181294	3950886	3	True				
ANR	3950909	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3950886	0					
ANR	3950910	Callee	zend_compile_expr		3950886	0					
ANR	3950911	Identifier	zend_compile_expr		3950886	0					
ANR	3950912	ArgumentList	& expr_node		3950886	1					
ANR	3950913	Argument	& expr_node		3950886	0					
ANR	3950914	UnaryOperationExpression	& expr_node		3950886	0					
ANR	3950915	UnaryOperator	&		3950886	0					
ANR	3950916	Identifier	expr_node		3950886	1					
ANR	3950917	Argument	expr_ast		3950886	1					
ANR	3950918	Identifier	expr_ast		3950886	0					
ANR	3950919	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_CAST , & expr_node , NULL )"	6128:1:181298:181360	3950886	4	True				
ANR	3950920	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_CAST , & expr_node , NULL )"		3950886	0		=			
ANR	3950921	Identifier	opline		3950886	0					
ANR	3950922	CallExpression	"zend_emit_op_tmp ( result , ZEND_CAST , & expr_node , NULL )"		3950886	1					
ANR	3950923	Callee	zend_emit_op_tmp		3950886	0					
ANR	3950924	Identifier	zend_emit_op_tmp		3950886	0					
ANR	3950925	ArgumentList	result		3950886	1					
ANR	3950926	Argument	result		3950886	0					
ANR	3950927	Identifier	result		3950886	0					
ANR	3950928	Argument	ZEND_CAST		3950886	1					
ANR	3950929	Identifier	ZEND_CAST		3950886	0					
ANR	3950930	Argument	& expr_node		3950886	2					
ANR	3950931	UnaryOperationExpression	& expr_node		3950886	0					
ANR	3950932	UnaryOperator	&		3950886	0					
ANR	3950933	Identifier	expr_node		3950886	1					
ANR	3950934	Argument	NULL		3950886	3					
ANR	3950935	Identifier	NULL		3950886	0					
ANR	3950936	ExpressionStatement	opline -> extended_value = ast -> attr	6129:1:181363:181397	3950886	5	True				
ANR	3950937	AssignmentExpression	opline -> extended_value = ast -> attr		3950886	0		=			
ANR	3950938	PtrMemberAccess	opline -> extended_value		3950886	0					
ANR	3950939	Identifier	opline		3950886	0					
ANR	3950940	Identifier	extended_value		3950886	1					
ANR	3950941	PtrMemberAccess	ast -> attr		3950886	1					
ANR	3950942	Identifier	ast		3950886	0					
ANR	3950943	Identifier	attr		3950886	1					
ANR	3950944	ReturnType	void		3950886	1					
ANR	3950945	Identifier	zend_compile_cast		3950886	2					
ANR	3950946	ParameterList	"znode * result , zend_ast * ast"		3950886	3					
ANR	3950947	Parameter	znode * result	6120:23:181138:181150	3950886	0	True				
ANR	3950948	ParameterType	znode *		3950886	0					
ANR	3950949	Identifier	result		3950886	1					
ANR	3950950	Parameter	zend_ast * ast	6120:38:181153:181165	3950886	1	True				
ANR	3950951	ParameterType	zend_ast *		3950886	0					
ANR	3950952	Identifier	ast		3950886	1					
ANR	3950953	CFGEntryNode	ENTRY		3950886		True				
ANR	3950954	CFGExitNode	EXIT		3950886		True				
ANR	3950955	Symbol	zend_emit_op_tmp		3950886						
ANR	3950956	Symbol	ast -> attr		3950886						
ANR	3950957	Symbol	ast		3950886						
ANR	3950958	Symbol	NULL		3950886						
ANR	3950959	Symbol	expr_ast		3950886						
ANR	3950960	Symbol	& expr_node		3950886						
ANR	3950961	Symbol	opline -> extended_value		3950886						
ANR	3950962	Symbol	result		3950886						
ANR	3950963	Symbol	expr_node		3950886						
ANR	3950964	Symbol	* ast		3950886						
ANR	3950965	Symbol	opline		3950886						
ANR	3950966	Symbol	ZEND_CAST		3950886						
ANR	3950967	Symbol	* opline		3950886						
ANR	3950968	Symbol	* * ast		3950886						
ANR	3950969	Symbol	* ast -> child		3950886						
ANR	3950970	Symbol	ast -> child		3950886						
ANR	3950971	Function	zend_compile_shorthand_conditional	6133:0:181412:182079							
ANR	3950972	FunctionDef	"zend_compile_shorthand_conditional (znode * result , zend_ast * ast)"		3950971	0					
ANR	3950973	CompoundStatement		6134:0:181499:182079	3950971	0					
ANR	3950974	IdentifierDeclStatement	zend_ast * cond_ast = ast -> child [ 0 ] ;	6135:1:181502:181536	3950971	0	True				
ANR	3950975	IdentifierDecl	* cond_ast = ast -> child [ 0 ]		3950971	0					
ANR	3950976	IdentifierDeclType	zend_ast *		3950971	0					
ANR	3950977	Identifier	cond_ast		3950971	1					
ANR	3950978	AssignmentExpression	* cond_ast = ast -> child [ 0 ]		3950971	2		=			
ANR	3950979	Identifier	cond_ast		3950971	0					
ANR	3950980	ArrayIndexing	ast -> child [ 0 ]		3950971	1					
ANR	3950981	PtrMemberAccess	ast -> child		3950971	0					
ANR	3950982	Identifier	ast		3950971	0					
ANR	3950983	Identifier	child		3950971	1					
ANR	3950984	PrimaryExpression	0		3950971	1					
ANR	3950985	IdentifierDeclStatement	zend_ast * false_ast = ast -> child [ 2 ] ;	6136:1:181539:181574	3950971	1	True				
ANR	3950986	IdentifierDecl	* false_ast = ast -> child [ 2 ]		3950971	0					
ANR	3950987	IdentifierDeclType	zend_ast *		3950971	0					
ANR	3950988	Identifier	false_ast		3950971	1					
ANR	3950989	AssignmentExpression	* false_ast = ast -> child [ 2 ]		3950971	2		=			
ANR	3950990	Identifier	false_ast		3950971	0					
ANR	3950991	ArrayIndexing	ast -> child [ 2 ]		3950971	1					
ANR	3950992	PtrMemberAccess	ast -> child		3950971	0					
ANR	3950993	Identifier	ast		3950971	0					
ANR	3950994	Identifier	child		3950971	1					
ANR	3950995	PrimaryExpression	2		3950971	1					
ANR	3950996	IdentifierDeclStatement	"znode cond_node , false_node ;"	6138:1:181578:181605	3950971	2	True				
ANR	3950997	IdentifierDecl	cond_node		3950971	0					
ANR	3950998	IdentifierDeclType	znode		3950971	0					
ANR	3950999	Identifier	cond_node		3950971	1					
ANR	3951000	IdentifierDecl	false_node		3950971	1					
ANR	3951001	IdentifierDeclType	znode		3950971	0					
ANR	3951002	Identifier	false_node		3950971	1					
ANR	3951003	IdentifierDeclStatement	zend_op * opline_qm_assign ;	6139:1:181608:181633	3950971	3	True				
ANR	3951004	IdentifierDecl	* opline_qm_assign		3950971	0					
ANR	3951005	IdentifierDeclType	zend_op *		3950971	0					
ANR	3951006	Identifier	opline_qm_assign		3950971	1					
ANR	3951007	IdentifierDeclStatement	uint32_t opnum_jmp_set ;	6140:1:181636:181658	3950971	4	True				
ANR	3951008	IdentifierDecl	opnum_jmp_set		3950971	0					
ANR	3951009	IdentifierDeclType	uint32_t		3950971	0					
ANR	3951010	Identifier	opnum_jmp_set		3950971	1					
ANR	3951011	ExpressionStatement	ZEND_ASSERT ( ast -> child [ 1 ] == NULL )	6142:1:181662:181696	3950971	5	True				
ANR	3951012	CallExpression	ZEND_ASSERT ( ast -> child [ 1 ] == NULL )		3950971	0					
ANR	3951013	Callee	ZEND_ASSERT		3950971	0					
ANR	3951014	Identifier	ZEND_ASSERT		3950971	0					
ANR	3951015	ArgumentList	ast -> child [ 1 ] == NULL		3950971	1					
ANR	3951016	Argument	ast -> child [ 1 ] == NULL		3950971	0					
ANR	3951017	EqualityExpression	ast -> child [ 1 ] == NULL		3950971	0		==			
ANR	3951018	ArrayIndexing	ast -> child [ 1 ]		3950971	0					
ANR	3951019	PtrMemberAccess	ast -> child		3950971	0					
ANR	3951020	Identifier	ast		3950971	0					
ANR	3951021	Identifier	child		3950971	1					
ANR	3951022	PrimaryExpression	1		3950971	1					
ANR	3951023	Identifier	NULL		3950971	1					
ANR	3951024	ExpressionStatement	"zend_compile_expr ( & cond_node , cond_ast )"	6144:1:181700:181739	3950971	6	True				
ANR	3951025	CallExpression	"zend_compile_expr ( & cond_node , cond_ast )"		3950971	0					
ANR	3951026	Callee	zend_compile_expr		3950971	0					
ANR	3951027	Identifier	zend_compile_expr		3950971	0					
ANR	3951028	ArgumentList	& cond_node		3950971	1					
ANR	3951029	Argument	& cond_node		3950971	0					
ANR	3951030	UnaryOperationExpression	& cond_node		3950971	0					
ANR	3951031	UnaryOperator	&		3950971	0					
ANR	3951032	Identifier	cond_node		3950971	1					
ANR	3951033	Argument	cond_ast		3950971	1					
ANR	3951034	Identifier	cond_ast		3950971	0					
ANR	3951035	ExpressionStatement	opnum_jmp_set = get_next_op_number ( CG ( active_op_array ) )	6146:1:181743:181798	3950971	7	True				
ANR	3951036	AssignmentExpression	opnum_jmp_set = get_next_op_number ( CG ( active_op_array ) )		3950971	0		=			
ANR	3951037	Identifier	opnum_jmp_set		3950971	0					
ANR	3951038	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3950971	1					
ANR	3951039	Callee	get_next_op_number		3950971	0					
ANR	3951040	Identifier	get_next_op_number		3950971	0					
ANR	3951041	ArgumentList	CG ( active_op_array )		3950971	1					
ANR	3951042	Argument	CG ( active_op_array )		3950971	0					
ANR	3951043	CallExpression	CG ( active_op_array )		3950971	0					
ANR	3951044	Callee	CG		3950971	0					
ANR	3951045	Identifier	CG		3950971	0					
ANR	3951046	ArgumentList	active_op_array		3950971	1					
ANR	3951047	Argument	active_op_array		3950971	0					
ANR	3951048	Identifier	active_op_array		3950971	0					
ANR	3951049	ExpressionStatement	"zend_emit_op_tmp ( result , ZEND_JMP_SET , & cond_node , NULL )"	6147:1:181801:181857	3950971	8	True				
ANR	3951050	CallExpression	"zend_emit_op_tmp ( result , ZEND_JMP_SET , & cond_node , NULL )"		3950971	0					
ANR	3951051	Callee	zend_emit_op_tmp		3950971	0					
ANR	3951052	Identifier	zend_emit_op_tmp		3950971	0					
ANR	3951053	ArgumentList	result		3950971	1					
ANR	3951054	Argument	result		3950971	0					
ANR	3951055	Identifier	result		3950971	0					
ANR	3951056	Argument	ZEND_JMP_SET		3950971	1					
ANR	3951057	Identifier	ZEND_JMP_SET		3950971	0					
ANR	3951058	Argument	& cond_node		3950971	2					
ANR	3951059	UnaryOperationExpression	& cond_node		3950971	0					
ANR	3951060	UnaryOperator	&		3950971	0					
ANR	3951061	Identifier	cond_node		3950971	1					
ANR	3951062	Argument	NULL		3950971	3					
ANR	3951063	Identifier	NULL		3950971	0					
ANR	3951064	ExpressionStatement	"zend_compile_expr ( & false_node , false_ast )"	6149:1:181861:181902	3950971	9	True				
ANR	3951065	CallExpression	"zend_compile_expr ( & false_node , false_ast )"		3950971	0					
ANR	3951066	Callee	zend_compile_expr		3950971	0					
ANR	3951067	Identifier	zend_compile_expr		3950971	0					
ANR	3951068	ArgumentList	& false_node		3950971	1					
ANR	3951069	Argument	& false_node		3950971	0					
ANR	3951070	UnaryOperationExpression	& false_node		3950971	0					
ANR	3951071	UnaryOperator	&		3950971	0					
ANR	3951072	Identifier	false_node		3950971	1					
ANR	3951073	Argument	false_ast		3950971	1					
ANR	3951074	Identifier	false_ast		3950971	0					
ANR	3951075	ExpressionStatement	"opline_qm_assign = zend_emit_op_tmp ( NULL , ZEND_QM_ASSIGN , & false_node , NULL )"	6151:1:181906:181982	3950971	10	True				
ANR	3951076	AssignmentExpression	"opline_qm_assign = zend_emit_op_tmp ( NULL , ZEND_QM_ASSIGN , & false_node , NULL )"		3950971	0		=			
ANR	3951077	Identifier	opline_qm_assign		3950971	0					
ANR	3951078	CallExpression	"zend_emit_op_tmp ( NULL , ZEND_QM_ASSIGN , & false_node , NULL )"		3950971	1					
ANR	3951079	Callee	zend_emit_op_tmp		3950971	0					
ANR	3951080	Identifier	zend_emit_op_tmp		3950971	0					
ANR	3951081	ArgumentList	NULL		3950971	1					
ANR	3951082	Argument	NULL		3950971	0					
ANR	3951083	Identifier	NULL		3950971	0					
ANR	3951084	Argument	ZEND_QM_ASSIGN		3950971	1					
ANR	3951085	Identifier	ZEND_QM_ASSIGN		3950971	0					
ANR	3951086	Argument	& false_node		3950971	2					
ANR	3951087	UnaryOperationExpression	& false_node		3950971	0					
ANR	3951088	UnaryOperator	&		3950971	0					
ANR	3951089	Identifier	false_node		3950971	1					
ANR	3951090	Argument	NULL		3950971	3					
ANR	3951091	Identifier	NULL		3950971	0					
ANR	3951092	ExpressionStatement	"SET_NODE ( opline_qm_assign -> result , result )"	6152:1:181985:182027	3950971	11	True				
ANR	3951093	CallExpression	"SET_NODE ( opline_qm_assign -> result , result )"		3950971	0					
ANR	3951094	Callee	SET_NODE		3950971	0					
ANR	3951095	Identifier	SET_NODE		3950971	0					
ANR	3951096	ArgumentList	opline_qm_assign -> result		3950971	1					
ANR	3951097	Argument	opline_qm_assign -> result		3950971	0					
ANR	3951098	PtrMemberAccess	opline_qm_assign -> result		3950971	0					
ANR	3951099	Identifier	opline_qm_assign		3950971	0					
ANR	3951100	Identifier	result		3950971	1					
ANR	3951101	Argument	result		3950971	1					
ANR	3951102	Identifier	result		3950971	0					
ANR	3951103	ExpressionStatement	zend_update_jump_target_to_next ( opnum_jmp_set )	6154:1:182031:182077	3950971	12	True				
ANR	3951104	CallExpression	zend_update_jump_target_to_next ( opnum_jmp_set )		3950971	0					
ANR	3951105	Callee	zend_update_jump_target_to_next		3950971	0					
ANR	3951106	Identifier	zend_update_jump_target_to_next		3950971	0					
ANR	3951107	ArgumentList	opnum_jmp_set		3950971	1					
ANR	3951108	Argument	opnum_jmp_set		3950971	0					
ANR	3951109	Identifier	opnum_jmp_set		3950971	0					
ANR	3951110	ReturnType	static void		3950971	1					
ANR	3951111	Identifier	zend_compile_shorthand_conditional		3950971	2					
ANR	3951112	ParameterList	"znode * result , zend_ast * ast"		3950971	3					
ANR	3951113	Parameter	znode * result	6133:47:181459:181471	3950971	0	True				
ANR	3951114	ParameterType	znode *		3950971	0					
ANR	3951115	Identifier	result		3950971	1					
ANR	3951116	Parameter	zend_ast * ast	6133:62:181474:181486	3950971	1	True				
ANR	3951117	ParameterType	zend_ast *		3950971	0					
ANR	3951118	Identifier	ast		3950971	1					
ANR	3951119	CFGEntryNode	ENTRY		3950971		True				
ANR	3951120	CFGExitNode	EXIT		3950971		True				
ANR	3951121	Symbol	& false_node		3950971						
ANR	3951122	Symbol	zend_emit_op_tmp		3950971						
ANR	3951123	Symbol	ast		3950971						
ANR	3951124	Symbol	NULL		3950971						
ANR	3951125	Symbol	* opline_qm_assign		3950971						
ANR	3951126	Symbol	CG		3950971						
ANR	3951127	Symbol	cond_node		3950971						
ANR	3951128	Symbol	active_op_array		3950971						
ANR	3951129	Symbol	ZEND_JMP_SET		3950971						
ANR	3951130	Symbol	opline_qm_assign -> result		3950971						
ANR	3951131	Symbol	opnum_jmp_set		3950971						
ANR	3951132	Symbol	ZEND_QM_ASSIGN		3950971						
ANR	3951133	Symbol	cond_ast		3950971						
ANR	3951134	Symbol	result		3950971						
ANR	3951135	Symbol	* ast		3950971						
ANR	3951136	Symbol	* * ast		3950971						
ANR	3951137	Symbol	false_ast		3950971						
ANR	3951138	Symbol	* ast -> child		3950971						
ANR	3951139	Symbol	false_node		3950971						
ANR	3951140	Symbol	opline_qm_assign		3950971						
ANR	3951141	Symbol	ast -> child		3950971						
ANR	3951142	Symbol	get_next_op_number		3950971						
ANR	3951143	Symbol	& cond_node		3950971						
ANR	3951144	Function	zend_compile_conditional	6158:0:182092:182967							
ANR	3951145	FunctionDef	"zend_compile_conditional (znode * result , zend_ast * ast)"		3951144	0					
ANR	3951146	CompoundStatement		6159:0:182162:182967	3951144	0					
ANR	3951147	IdentifierDeclStatement	zend_ast * cond_ast = ast -> child [ 0 ] ;	6160:1:182165:182199	3951144	0	True				
ANR	3951148	IdentifierDecl	* cond_ast = ast -> child [ 0 ]		3951144	0					
ANR	3951149	IdentifierDeclType	zend_ast *		3951144	0					
ANR	3951150	Identifier	cond_ast		3951144	1					
ANR	3951151	AssignmentExpression	* cond_ast = ast -> child [ 0 ]		3951144	2		=			
ANR	3951152	Identifier	cond_ast		3951144	0					
ANR	3951153	ArrayIndexing	ast -> child [ 0 ]		3951144	1					
ANR	3951154	PtrMemberAccess	ast -> child		3951144	0					
ANR	3951155	Identifier	ast		3951144	0					
ANR	3951156	Identifier	child		3951144	1					
ANR	3951157	PrimaryExpression	0		3951144	1					
ANR	3951158	IdentifierDeclStatement	zend_ast * true_ast = ast -> child [ 1 ] ;	6161:1:182202:182236	3951144	1	True				
ANR	3951159	IdentifierDecl	* true_ast = ast -> child [ 1 ]		3951144	0					
ANR	3951160	IdentifierDeclType	zend_ast *		3951144	0					
ANR	3951161	Identifier	true_ast		3951144	1					
ANR	3951162	AssignmentExpression	* true_ast = ast -> child [ 1 ]		3951144	2		=			
ANR	3951163	Identifier	true_ast		3951144	0					
ANR	3951164	ArrayIndexing	ast -> child [ 1 ]		3951144	1					
ANR	3951165	PtrMemberAccess	ast -> child		3951144	0					
ANR	3951166	Identifier	ast		3951144	0					
ANR	3951167	Identifier	child		3951144	1					
ANR	3951168	PrimaryExpression	1		3951144	1					
ANR	3951169	IdentifierDeclStatement	zend_ast * false_ast = ast -> child [ 2 ] ;	6162:1:182239:182274	3951144	2	True				
ANR	3951170	IdentifierDecl	* false_ast = ast -> child [ 2 ]		3951144	0					
ANR	3951171	IdentifierDeclType	zend_ast *		3951144	0					
ANR	3951172	Identifier	false_ast		3951144	1					
ANR	3951173	AssignmentExpression	* false_ast = ast -> child [ 2 ]		3951144	2		=			
ANR	3951174	Identifier	false_ast		3951144	0					
ANR	3951175	ArrayIndexing	ast -> child [ 2 ]		3951144	1					
ANR	3951176	PtrMemberAccess	ast -> child		3951144	0					
ANR	3951177	Identifier	ast		3951144	0					
ANR	3951178	Identifier	child		3951144	1					
ANR	3951179	PrimaryExpression	2		3951144	1					
ANR	3951180	IdentifierDeclStatement	"znode cond_node , true_node , false_node ;"	6164:1:182278:182316	3951144	3	True				
ANR	3951181	IdentifierDecl	cond_node		3951144	0					
ANR	3951182	IdentifierDeclType	znode		3951144	0					
ANR	3951183	Identifier	cond_node		3951144	1					
ANR	3951184	IdentifierDecl	true_node		3951144	1					
ANR	3951185	IdentifierDeclType	znode		3951144	0					
ANR	3951186	Identifier	true_node		3951144	1					
ANR	3951187	IdentifierDecl	false_node		3951144	2					
ANR	3951188	IdentifierDeclType	znode		3951144	0					
ANR	3951189	Identifier	false_node		3951144	1					
ANR	3951190	IdentifierDeclStatement	zend_op * opline_qm_assign2 ;	6165:1:182319:182345	3951144	4	True				
ANR	3951191	IdentifierDecl	* opline_qm_assign2		3951144	0					
ANR	3951192	IdentifierDeclType	zend_op *		3951144	0					
ANR	3951193	Identifier	opline_qm_assign2		3951144	1					
ANR	3951194	IdentifierDeclStatement	"uint32_t opnum_jmpz , opnum_jmp ;"	6166:1:182348:182378	3951144	5	True				
ANR	3951195	IdentifierDecl	opnum_jmpz		3951144	0					
ANR	3951196	IdentifierDeclType	uint32_t		3951144	0					
ANR	3951197	Identifier	opnum_jmpz		3951144	1					
ANR	3951198	IdentifierDecl	opnum_jmp		3951144	1					
ANR	3951199	IdentifierDeclType	uint32_t		3951144	0					
ANR	3951200	Identifier	opnum_jmp		3951144	1					
ANR	3951201	IfStatement	if ( ! true_ast )		3951144	6					
ANR	3951202	Condition	! true_ast	6168:5:182386:182394	3951144	0	True				
ANR	3951203	UnaryOperationExpression	! true_ast		3951144	0					
ANR	3951204	UnaryOperator	!		3951144	0					
ANR	3951205	Identifier	true_ast		3951144	1					
ANR	3951206	CompoundStatement		10:16:234:234	3951144	1					
ANR	3951207	ExpressionStatement	"zend_compile_shorthand_conditional ( result , ast )"	6169:2:182401:182448	3951144	0	True				
ANR	3951208	CallExpression	"zend_compile_shorthand_conditional ( result , ast )"		3951144	0					
ANR	3951209	Callee	zend_compile_shorthand_conditional		3951144	0					
ANR	3951210	Identifier	zend_compile_shorthand_conditional		3951144	0					
ANR	3951211	ArgumentList	result		3951144	1					
ANR	3951212	Argument	result		3951144	0					
ANR	3951213	Identifier	result		3951144	0					
ANR	3951214	Argument	ast		3951144	1					
ANR	3951215	Identifier	ast		3951144	0					
ANR	3951216	ReturnStatement	return ;	6170:2:182452:182458	3951144	1	True				
ANR	3951217	ExpressionStatement	"zend_compile_expr ( & cond_node , cond_ast )"	6173:1:182465:182504	3951144	7	True				
ANR	3951218	CallExpression	"zend_compile_expr ( & cond_node , cond_ast )"		3951144	0					
ANR	3951219	Callee	zend_compile_expr		3951144	0					
ANR	3951220	Identifier	zend_compile_expr		3951144	0					
ANR	3951221	ArgumentList	& cond_node		3951144	1					
ANR	3951222	Argument	& cond_node		3951144	0					
ANR	3951223	UnaryOperationExpression	& cond_node		3951144	0					
ANR	3951224	UnaryOperator	&		3951144	0					
ANR	3951225	Identifier	cond_node		3951144	1					
ANR	3951226	Argument	cond_ast		3951144	1					
ANR	3951227	Identifier	cond_ast		3951144	0					
ANR	3951228	ExpressionStatement	"opnum_jmpz = zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"	6175:1:182508:182566	3951144	8	True				
ANR	3951229	AssignmentExpression	"opnum_jmpz = zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"		3951144	0		=			
ANR	3951230	Identifier	opnum_jmpz		3951144	0					
ANR	3951231	CallExpression	"zend_emit_cond_jump ( ZEND_JMPZ , & cond_node , 0 )"		3951144	1					
ANR	3951232	Callee	zend_emit_cond_jump		3951144	0					
ANR	3951233	Identifier	zend_emit_cond_jump		3951144	0					
ANR	3951234	ArgumentList	ZEND_JMPZ		3951144	1					
ANR	3951235	Argument	ZEND_JMPZ		3951144	0					
ANR	3951236	Identifier	ZEND_JMPZ		3951144	0					
ANR	3951237	Argument	& cond_node		3951144	1					
ANR	3951238	UnaryOperationExpression	& cond_node		3951144	0					
ANR	3951239	UnaryOperator	&		3951144	0					
ANR	3951240	Identifier	cond_node		3951144	1					
ANR	3951241	Argument	0		3951144	2					
ANR	3951242	PrimaryExpression	0		3951144	0					
ANR	3951243	ExpressionStatement	"zend_compile_expr ( & true_node , true_ast )"	6177:1:182570:182609	3951144	9	True				
ANR	3951244	CallExpression	"zend_compile_expr ( & true_node , true_ast )"		3951144	0					
ANR	3951245	Callee	zend_compile_expr		3951144	0					
ANR	3951246	Identifier	zend_compile_expr		3951144	0					
ANR	3951247	ArgumentList	& true_node		3951144	1					
ANR	3951248	Argument	& true_node		3951144	0					
ANR	3951249	UnaryOperationExpression	& true_node		3951144	0					
ANR	3951250	UnaryOperator	&		3951144	0					
ANR	3951251	Identifier	true_node		3951144	1					
ANR	3951252	Argument	true_ast		3951144	1					
ANR	3951253	Identifier	true_ast		3951144	0					
ANR	3951254	ExpressionStatement	"zend_emit_op_tmp ( result , ZEND_QM_ASSIGN , & true_node , NULL )"	6179:1:182613:182671	3951144	10	True				
ANR	3951255	CallExpression	"zend_emit_op_tmp ( result , ZEND_QM_ASSIGN , & true_node , NULL )"		3951144	0					
ANR	3951256	Callee	zend_emit_op_tmp		3951144	0					
ANR	3951257	Identifier	zend_emit_op_tmp		3951144	0					
ANR	3951258	ArgumentList	result		3951144	1					
ANR	3951259	Argument	result		3951144	0					
ANR	3951260	Identifier	result		3951144	0					
ANR	3951261	Argument	ZEND_QM_ASSIGN		3951144	1					
ANR	3951262	Identifier	ZEND_QM_ASSIGN		3951144	0					
ANR	3951263	Argument	& true_node		3951144	2					
ANR	3951264	UnaryOperationExpression	& true_node		3951144	0					
ANR	3951265	UnaryOperator	&		3951144	0					
ANR	3951266	Identifier	true_node		3951144	1					
ANR	3951267	Argument	NULL		3951144	3					
ANR	3951268	Identifier	NULL		3951144	0					
ANR	3951269	ExpressionStatement	opnum_jmp = zend_emit_jump ( 0 )	6181:1:182675:182704	3951144	11	True				
ANR	3951270	AssignmentExpression	opnum_jmp = zend_emit_jump ( 0 )		3951144	0		=			
ANR	3951271	Identifier	opnum_jmp		3951144	0					
ANR	3951272	CallExpression	zend_emit_jump ( 0 )		3951144	1					
ANR	3951273	Callee	zend_emit_jump		3951144	0					
ANR	3951274	Identifier	zend_emit_jump		3951144	0					
ANR	3951275	ArgumentList	0		3951144	1					
ANR	3951276	Argument	0		3951144	0					
ANR	3951277	PrimaryExpression	0		3951144	0					
ANR	3951278	ExpressionStatement	zend_update_jump_target_to_next ( opnum_jmpz )	6183:1:182708:182751	3951144	12	True				
ANR	3951279	CallExpression	zend_update_jump_target_to_next ( opnum_jmpz )		3951144	0					
ANR	3951280	Callee	zend_update_jump_target_to_next		3951144	0					
ANR	3951281	Identifier	zend_update_jump_target_to_next		3951144	0					
ANR	3951282	ArgumentList	opnum_jmpz		3951144	1					
ANR	3951283	Argument	opnum_jmpz		3951144	0					
ANR	3951284	Identifier	opnum_jmpz		3951144	0					
ANR	3951285	ExpressionStatement	"zend_compile_expr ( & false_node , false_ast )"	6185:1:182755:182796	3951144	13	True				
ANR	3951286	CallExpression	"zend_compile_expr ( & false_node , false_ast )"		3951144	0					
ANR	3951287	Callee	zend_compile_expr		3951144	0					
ANR	3951288	Identifier	zend_compile_expr		3951144	0					
ANR	3951289	ArgumentList	& false_node		3951144	1					
ANR	3951290	Argument	& false_node		3951144	0					
ANR	3951291	UnaryOperationExpression	& false_node		3951144	0					
ANR	3951292	UnaryOperator	&		3951144	0					
ANR	3951293	Identifier	false_node		3951144	1					
ANR	3951294	Argument	false_ast		3951144	1					
ANR	3951295	Identifier	false_ast		3951144	0					
ANR	3951296	ExpressionStatement	"opline_qm_assign2 = zend_emit_op ( NULL , ZEND_QM_ASSIGN , & false_node , NULL )"	6187:1:182800:182873	3951144	14	True				
ANR	3951297	AssignmentExpression	"opline_qm_assign2 = zend_emit_op ( NULL , ZEND_QM_ASSIGN , & false_node , NULL )"		3951144	0		=			
ANR	3951298	Identifier	opline_qm_assign2		3951144	0					
ANR	3951299	CallExpression	"zend_emit_op ( NULL , ZEND_QM_ASSIGN , & false_node , NULL )"		3951144	1					
ANR	3951300	Callee	zend_emit_op		3951144	0					
ANR	3951301	Identifier	zend_emit_op		3951144	0					
ANR	3951302	ArgumentList	NULL		3951144	1					
ANR	3951303	Argument	NULL		3951144	0					
ANR	3951304	Identifier	NULL		3951144	0					
ANR	3951305	Argument	ZEND_QM_ASSIGN		3951144	1					
ANR	3951306	Identifier	ZEND_QM_ASSIGN		3951144	0					
ANR	3951307	Argument	& false_node		3951144	2					
ANR	3951308	UnaryOperationExpression	& false_node		3951144	0					
ANR	3951309	UnaryOperator	&		3951144	0					
ANR	3951310	Identifier	false_node		3951144	1					
ANR	3951311	Argument	NULL		3951144	3					
ANR	3951312	Identifier	NULL		3951144	0					
ANR	3951313	ExpressionStatement	"SET_NODE ( opline_qm_assign2 -> result , result )"	6188:1:182876:182919	3951144	15	True				
ANR	3951314	CallExpression	"SET_NODE ( opline_qm_assign2 -> result , result )"		3951144	0					
ANR	3951315	Callee	SET_NODE		3951144	0					
ANR	3951316	Identifier	SET_NODE		3951144	0					
ANR	3951317	ArgumentList	opline_qm_assign2 -> result		3951144	1					
ANR	3951318	Argument	opline_qm_assign2 -> result		3951144	0					
ANR	3951319	PtrMemberAccess	opline_qm_assign2 -> result		3951144	0					
ANR	3951320	Identifier	opline_qm_assign2		3951144	0					
ANR	3951321	Identifier	result		3951144	1					
ANR	3951322	Argument	result		3951144	1					
ANR	3951323	Identifier	result		3951144	0					
ANR	3951324	ExpressionStatement	zend_update_jump_target_to_next ( opnum_jmp )	6190:1:182923:182965	3951144	16	True				
ANR	3951325	CallExpression	zend_update_jump_target_to_next ( opnum_jmp )		3951144	0					
ANR	3951326	Callee	zend_update_jump_target_to_next		3951144	0					
ANR	3951327	Identifier	zend_update_jump_target_to_next		3951144	0					
ANR	3951328	ArgumentList	opnum_jmp		3951144	1					
ANR	3951329	Argument	opnum_jmp		3951144	0					
ANR	3951330	Identifier	opnum_jmp		3951144	0					
ANR	3951331	ReturnType	void		3951144	1					
ANR	3951332	Identifier	zend_compile_conditional		3951144	2					
ANR	3951333	ParameterList	"znode * result , zend_ast * ast"		3951144	3					
ANR	3951334	Parameter	znode * result	6158:30:182122:182134	3951144	0	True				
ANR	3951335	ParameterType	znode *		3951144	0					
ANR	3951336	Identifier	result		3951144	1					
ANR	3951337	Parameter	zend_ast * ast	6158:45:182137:182149	3951144	1	True				
ANR	3951338	ParameterType	zend_ast *		3951144	0					
ANR	3951339	Identifier	ast		3951144	1					
ANR	3951340	CFGEntryNode	ENTRY		3951144		True				
ANR	3951341	CFGExitNode	EXIT		3951144		True				
ANR	3951342	Symbol	zend_emit_jump		3951144						
ANR	3951343	Symbol	& false_node		3951144						
ANR	3951344	Symbol	ast		3951144						
ANR	3951345	Symbol	ZEND_QM_ASSIGN		3951144						
ANR	3951346	Symbol	result		3951144						
ANR	3951347	Symbol	* ast		3951144						
ANR	3951348	Symbol	* * ast		3951144						
ANR	3951349	Symbol	false_ast		3951144						
ANR	3951350	Symbol	true_node		3951144						
ANR	3951351	Symbol	zend_emit_cond_jump		3951144						
ANR	3951352	Symbol	opline_qm_assign2 -> result		3951144						
ANR	3951353	Symbol	true_ast		3951144						
ANR	3951354	Symbol	opnum_jmp		3951144						
ANR	3951355	Symbol	NULL		3951144						
ANR	3951356	Symbol	cond_node		3951144						
ANR	3951357	Symbol	ZEND_JMPZ		3951144						
ANR	3951358	Symbol	opnum_jmpz		3951144						
ANR	3951359	Symbol	cond_ast		3951144						
ANR	3951360	Symbol	& true_node		3951144						
ANR	3951361	Symbol	opline_qm_assign2		3951144						
ANR	3951362	Symbol	* ast -> child		3951144						
ANR	3951363	Symbol	false_node		3951144						
ANR	3951364	Symbol	* opline_qm_assign2		3951144						
ANR	3951365	Symbol	ast -> child		3951144						
ANR	3951366	Symbol	& cond_node		3951144						
ANR	3951367	Symbol	zend_emit_op		3951144						
ANR	3951368	Function	zend_compile_coalesce	6194:0:182980:183630							
ANR	3951369	FunctionDef	"zend_compile_coalesce (znode * result , zend_ast * ast)"		3951368	0					
ANR	3951370	CompoundStatement		6195:0:183047:183630	3951368	0					
ANR	3951371	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6196:1:183050:183084	3951368	0	True				
ANR	3951372	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3951368	0					
ANR	3951373	IdentifierDeclType	zend_ast *		3951368	0					
ANR	3951374	Identifier	expr_ast		3951368	1					
ANR	3951375	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3951368	2		=			
ANR	3951376	Identifier	expr_ast		3951368	0					
ANR	3951377	ArrayIndexing	ast -> child [ 0 ]		3951368	1					
ANR	3951378	PtrMemberAccess	ast -> child		3951368	0					
ANR	3951379	Identifier	ast		3951368	0					
ANR	3951380	Identifier	child		3951368	1					
ANR	3951381	PrimaryExpression	0		3951368	1					
ANR	3951382	IdentifierDeclStatement	zend_ast * default_ast = ast -> child [ 1 ] ;	6197:1:183087:183124	3951368	1	True				
ANR	3951383	IdentifierDecl	* default_ast = ast -> child [ 1 ]		3951368	0					
ANR	3951384	IdentifierDeclType	zend_ast *		3951368	0					
ANR	3951385	Identifier	default_ast		3951368	1					
ANR	3951386	AssignmentExpression	* default_ast = ast -> child [ 1 ]		3951368	2		=			
ANR	3951387	Identifier	default_ast		3951368	0					
ANR	3951388	ArrayIndexing	ast -> child [ 1 ]		3951368	1					
ANR	3951389	PtrMemberAccess	ast -> child		3951368	0					
ANR	3951390	Identifier	ast		3951368	0					
ANR	3951391	Identifier	child		3951368	1					
ANR	3951392	PrimaryExpression	1		3951368	1					
ANR	3951393	IdentifierDeclStatement	"znode expr_node , default_node ;"	6199:1:183128:183157	3951368	2	True				
ANR	3951394	IdentifierDecl	expr_node		3951368	0					
ANR	3951395	IdentifierDeclType	znode		3951368	0					
ANR	3951396	Identifier	expr_node		3951368	1					
ANR	3951397	IdentifierDecl	default_node		3951368	1					
ANR	3951398	IdentifierDeclType	znode		3951368	0					
ANR	3951399	Identifier	default_node		3951368	1					
ANR	3951400	IdentifierDeclStatement	zend_op * opline ;	6200:1:183160:183175	3951368	3	True				
ANR	3951401	IdentifierDecl	* opline		3951368	0					
ANR	3951402	IdentifierDeclType	zend_op *		3951368	0					
ANR	3951403	Identifier	opline		3951368	1					
ANR	3951404	IdentifierDeclStatement	uint32_t opnum ;	6201:1:183178:183192	3951368	4	True				
ANR	3951405	IdentifierDecl	opnum		3951368	0					
ANR	3951406	IdentifierDeclType	uint32_t		3951368	0					
ANR	3951407	Identifier	opnum		3951368	1					
ANR	3951408	ExpressionStatement	"zend_compile_var ( & expr_node , expr_ast , BP_VAR_IS )"	6203:1:183196:183245	3951368	5	True				
ANR	3951409	CallExpression	"zend_compile_var ( & expr_node , expr_ast , BP_VAR_IS )"		3951368	0					
ANR	3951410	Callee	zend_compile_var		3951368	0					
ANR	3951411	Identifier	zend_compile_var		3951368	0					
ANR	3951412	ArgumentList	& expr_node		3951368	1					
ANR	3951413	Argument	& expr_node		3951368	0					
ANR	3951414	UnaryOperationExpression	& expr_node		3951368	0					
ANR	3951415	UnaryOperator	&		3951368	0					
ANR	3951416	Identifier	expr_node		3951368	1					
ANR	3951417	Argument	expr_ast		3951368	1					
ANR	3951418	Identifier	expr_ast		3951368	0					
ANR	3951419	Argument	BP_VAR_IS		3951368	2					
ANR	3951420	Identifier	BP_VAR_IS		3951368	0					
ANR	3951421	ExpressionStatement	opnum = get_next_op_number ( CG ( active_op_array ) )	6205:1:183249:183296	3951368	6	True				
ANR	3951422	AssignmentExpression	opnum = get_next_op_number ( CG ( active_op_array ) )		3951368	0		=			
ANR	3951423	Identifier	opnum		3951368	0					
ANR	3951424	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3951368	1					
ANR	3951425	Callee	get_next_op_number		3951368	0					
ANR	3951426	Identifier	get_next_op_number		3951368	0					
ANR	3951427	ArgumentList	CG ( active_op_array )		3951368	1					
ANR	3951428	Argument	CG ( active_op_array )		3951368	0					
ANR	3951429	CallExpression	CG ( active_op_array )		3951368	0					
ANR	3951430	Callee	CG		3951368	0					
ANR	3951431	Identifier	CG		3951368	0					
ANR	3951432	ArgumentList	active_op_array		3951368	1					
ANR	3951433	Argument	active_op_array		3951368	0					
ANR	3951434	Identifier	active_op_array		3951368	0					
ANR	3951435	ExpressionStatement	"zend_emit_op_tmp ( result , ZEND_COALESCE , & expr_node , NULL )"	6206:1:183299:183356	3951368	7	True				
ANR	3951436	CallExpression	"zend_emit_op_tmp ( result , ZEND_COALESCE , & expr_node , NULL )"		3951368	0					
ANR	3951437	Callee	zend_emit_op_tmp		3951368	0					
ANR	3951438	Identifier	zend_emit_op_tmp		3951368	0					
ANR	3951439	ArgumentList	result		3951368	1					
ANR	3951440	Argument	result		3951368	0					
ANR	3951441	Identifier	result		3951368	0					
ANR	3951442	Argument	ZEND_COALESCE		3951368	1					
ANR	3951443	Identifier	ZEND_COALESCE		3951368	0					
ANR	3951444	Argument	& expr_node		3951368	2					
ANR	3951445	UnaryOperationExpression	& expr_node		3951368	0					
ANR	3951446	UnaryOperator	&		3951368	0					
ANR	3951447	Identifier	expr_node		3951368	1					
ANR	3951448	Argument	NULL		3951368	3					
ANR	3951449	Identifier	NULL		3951368	0					
ANR	3951450	ExpressionStatement	"zend_compile_expr ( & default_node , default_ast )"	6208:1:183360:183405	3951368	8	True				
ANR	3951451	CallExpression	"zend_compile_expr ( & default_node , default_ast )"		3951368	0					
ANR	3951452	Callee	zend_compile_expr		3951368	0					
ANR	3951453	Identifier	zend_compile_expr		3951368	0					
ANR	3951454	ArgumentList	& default_node		3951368	1					
ANR	3951455	Argument	& default_node		3951368	0					
ANR	3951456	UnaryOperationExpression	& default_node		3951368	0					
ANR	3951457	UnaryOperator	&		3951368	0					
ANR	3951458	Identifier	default_node		3951368	1					
ANR	3951459	Argument	default_ast		3951368	1					
ANR	3951460	Identifier	default_ast		3951368	0					
ANR	3951461	ExpressionStatement	"opline = zend_emit_op_tmp ( NULL , ZEND_QM_ASSIGN , & default_node , NULL )"	6210:1:183409:183477	3951368	9	True				
ANR	3951462	AssignmentExpression	"opline = zend_emit_op_tmp ( NULL , ZEND_QM_ASSIGN , & default_node , NULL )"		3951368	0		=			
ANR	3951463	Identifier	opline		3951368	0					
ANR	3951464	CallExpression	"zend_emit_op_tmp ( NULL , ZEND_QM_ASSIGN , & default_node , NULL )"		3951368	1					
ANR	3951465	Callee	zend_emit_op_tmp		3951368	0					
ANR	3951466	Identifier	zend_emit_op_tmp		3951368	0					
ANR	3951467	ArgumentList	NULL		3951368	1					
ANR	3951468	Argument	NULL		3951368	0					
ANR	3951469	Identifier	NULL		3951368	0					
ANR	3951470	Argument	ZEND_QM_ASSIGN		3951368	1					
ANR	3951471	Identifier	ZEND_QM_ASSIGN		3951368	0					
ANR	3951472	Argument	& default_node		3951368	2					
ANR	3951473	UnaryOperationExpression	& default_node		3951368	0					
ANR	3951474	UnaryOperator	&		3951368	0					
ANR	3951475	Identifier	default_node		3951368	1					
ANR	3951476	Argument	NULL		3951368	3					
ANR	3951477	Identifier	NULL		3951368	0					
ANR	3951478	ExpressionStatement	"SET_NODE ( opline -> result , result )"	6211:1:183480:183512	3951368	10	True				
ANR	3951479	CallExpression	"SET_NODE ( opline -> result , result )"		3951368	0					
ANR	3951480	Callee	SET_NODE		3951368	0					
ANR	3951481	Identifier	SET_NODE		3951368	0					
ANR	3951482	ArgumentList	opline -> result		3951368	1					
ANR	3951483	Argument	opline -> result		3951368	0					
ANR	3951484	PtrMemberAccess	opline -> result		3951368	0					
ANR	3951485	Identifier	opline		3951368	0					
ANR	3951486	Identifier	result		3951368	1					
ANR	3951487	Argument	result		3951368	1					
ANR	3951488	Identifier	result		3951368	0					
ANR	3951489	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum ]	6213:1:183516:183561	3951368	11	True				
ANR	3951490	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum ]		3951368	0		=			
ANR	3951491	Identifier	opline		3951368	0					
ANR	3951492	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum ]		3951368	1					
ANR	3951493	UnaryOperator	&		3951368	0					
ANR	3951494	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum ]		3951368	1					
ANR	3951495	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3951368	0					
ANR	3951496	CallExpression	CG ( active_op_array )		3951368	0					
ANR	3951497	Callee	CG		3951368	0					
ANR	3951498	Identifier	CG		3951368	0					
ANR	3951499	ArgumentList	active_op_array		3951368	1					
ANR	3951500	Argument	active_op_array		3951368	0					
ANR	3951501	Identifier	active_op_array		3951368	0					
ANR	3951502	Identifier	opcodes		3951368	1					
ANR	3951503	Identifier	opnum		3951368	1					
ANR	3951504	ExpressionStatement	opline -> op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )	6214:1:183564:183628	3951368	12	True				
ANR	3951505	AssignmentExpression	opline -> op2 . opline_num = get_next_op_number ( CG ( active_op_array ) )		3951368	0		=			
ANR	3951506	MemberAccess	opline -> op2 . opline_num		3951368	0					
ANR	3951507	PtrMemberAccess	opline -> op2		3951368	0					
ANR	3951508	Identifier	opline		3951368	0					
ANR	3951509	Identifier	op2		3951368	1					
ANR	3951510	Identifier	opline_num		3951368	1					
ANR	3951511	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3951368	1					
ANR	3951512	Callee	get_next_op_number		3951368	0					
ANR	3951513	Identifier	get_next_op_number		3951368	0					
ANR	3951514	ArgumentList	CG ( active_op_array )		3951368	1					
ANR	3951515	Argument	CG ( active_op_array )		3951368	0					
ANR	3951516	CallExpression	CG ( active_op_array )		3951368	0					
ANR	3951517	Callee	CG		3951368	0					
ANR	3951518	Identifier	CG		3951368	0					
ANR	3951519	ArgumentList	active_op_array		3951368	1					
ANR	3951520	Argument	active_op_array		3951368	0					
ANR	3951521	Identifier	active_op_array		3951368	0					
ANR	3951522	ReturnType	void		3951368	1					
ANR	3951523	Identifier	zend_compile_coalesce		3951368	2					
ANR	3951524	ParameterList	"znode * result , zend_ast * ast"		3951368	3					
ANR	3951525	Parameter	znode * result	6194:27:183007:183019	3951368	0	True				
ANR	3951526	ParameterType	znode *		3951368	0					
ANR	3951527	Identifier	result		3951368	1					
ANR	3951528	Parameter	zend_ast * ast	6194:42:183022:183034	3951368	1	True				
ANR	3951529	ParameterType	zend_ast *		3951368	0					
ANR	3951530	Identifier	ast		3951368	1					
ANR	3951531	CFGEntryNode	ENTRY		3951368		True				
ANR	3951532	CFGExitNode	EXIT		3951368		True				
ANR	3951533	Symbol	zend_emit_op_tmp		3951368						
ANR	3951534	Symbol	opline -> op2		3951368						
ANR	3951535	Symbol	ast		3951368						
ANR	3951536	Symbol	* CG		3951368						
ANR	3951537	Symbol	ZEND_QM_ASSIGN		3951368						
ANR	3951538	Symbol	& expr_node		3951368						
ANR	3951539	Symbol	CG ( active_op_array ) -> opcodes		3951368						
ANR	3951540	Symbol	opline -> result		3951368						
ANR	3951541	Symbol	result		3951368						
ANR	3951542	Symbol	* ast		3951368						
ANR	3951543	Symbol	opline		3951368						
ANR	3951544	Symbol	opnum		3951368						
ANR	3951545	Symbol	* * ast		3951368						
ANR	3951546	Symbol	BP_VAR_IS		3951368						
ANR	3951547	Symbol	opline -> op2 . opline_num		3951368						
ANR	3951548	Symbol	NULL		3951368						
ANR	3951549	Symbol	CG		3951368						
ANR	3951550	Symbol	active_op_array		3951368						
ANR	3951551	Symbol	expr_ast		3951368						
ANR	3951552	Symbol	expr_node		3951368						
ANR	3951553	Symbol	& default_node		3951368						
ANR	3951554	Symbol	* opline		3951368						
ANR	3951555	Symbol	ZEND_COALESCE		3951368						
ANR	3951556	Symbol	* ast -> child		3951368						
ANR	3951557	Symbol	default_node		3951368						
ANR	3951558	Symbol	ast -> child		3951368						
ANR	3951559	Symbol	default_ast		3951368						
ANR	3951560	Symbol	get_next_op_number		3951368						
ANR	3951561	Function	zend_compile_print	6218:0:183643:183980							
ANR	3951562	FunctionDef	"zend_compile_print (znode * result , zend_ast * ast)"		3951561	0					
ANR	3951563	CompoundStatement		6219:0:183707:183980	3951561	0					
ANR	3951564	IdentifierDeclStatement	zend_op * opline ;	6220:1:183710:183725	3951561	0	True				
ANR	3951565	IdentifierDecl	* opline		3951561	0					
ANR	3951566	IdentifierDeclType	zend_op *		3951561	0					
ANR	3951567	Identifier	opline		3951561	1					
ANR	3951568	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6221:1:183728:183762	3951561	1	True				
ANR	3951569	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3951561	0					
ANR	3951570	IdentifierDeclType	zend_ast *		3951561	0					
ANR	3951571	Identifier	expr_ast		3951561	1					
ANR	3951572	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3951561	2		=			
ANR	3951573	Identifier	expr_ast		3951561	0					
ANR	3951574	ArrayIndexing	ast -> child [ 0 ]		3951561	1					
ANR	3951575	PtrMemberAccess	ast -> child		3951561	0					
ANR	3951576	Identifier	ast		3951561	0					
ANR	3951577	Identifier	child		3951561	1					
ANR	3951578	PrimaryExpression	0		3951561	1					
ANR	3951579	IdentifierDeclStatement	znode expr_node ;	6223:1:183766:183781	3951561	2	True				
ANR	3951580	IdentifierDecl	expr_node		3951561	0					
ANR	3951581	IdentifierDeclType	znode		3951561	0					
ANR	3951582	Identifier	expr_node		3951561	1					
ANR	3951583	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	6224:1:183784:183823	3951561	3	True				
ANR	3951584	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3951561	0					
ANR	3951585	Callee	zend_compile_expr		3951561	0					
ANR	3951586	Identifier	zend_compile_expr		3951561	0					
ANR	3951587	ArgumentList	& expr_node		3951561	1					
ANR	3951588	Argument	& expr_node		3951561	0					
ANR	3951589	UnaryOperationExpression	& expr_node		3951561	0					
ANR	3951590	UnaryOperator	&		3951561	0					
ANR	3951591	Identifier	expr_node		3951561	1					
ANR	3951592	Argument	expr_ast		3951561	1					
ANR	3951593	Identifier	expr_ast		3951561	0					
ANR	3951594	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_ECHO , & expr_node , NULL )"	6226:1:183827:183883	3951561	4	True				
ANR	3951595	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_ECHO , & expr_node , NULL )"		3951561	0		=			
ANR	3951596	Identifier	opline		3951561	0					
ANR	3951597	CallExpression	"zend_emit_op ( NULL , ZEND_ECHO , & expr_node , NULL )"		3951561	1					
ANR	3951598	Callee	zend_emit_op		3951561	0					
ANR	3951599	Identifier	zend_emit_op		3951561	0					
ANR	3951600	ArgumentList	NULL		3951561	1					
ANR	3951601	Argument	NULL		3951561	0					
ANR	3951602	Identifier	NULL		3951561	0					
ANR	3951603	Argument	ZEND_ECHO		3951561	1					
ANR	3951604	Identifier	ZEND_ECHO		3951561	0					
ANR	3951605	Argument	& expr_node		3951561	2					
ANR	3951606	UnaryOperationExpression	& expr_node		3951561	0					
ANR	3951607	UnaryOperator	&		3951561	0					
ANR	3951608	Identifier	expr_node		3951561	1					
ANR	3951609	Argument	NULL		3951561	3					
ANR	3951610	Identifier	NULL		3951561	0					
ANR	3951611	ExpressionStatement	opline -> extended_value = 1	6227:1:183886:183912	3951561	5	True				
ANR	3951612	AssignmentExpression	opline -> extended_value = 1		3951561	0		=			
ANR	3951613	PtrMemberAccess	opline -> extended_value		3951561	0					
ANR	3951614	Identifier	opline		3951561	0					
ANR	3951615	Identifier	extended_value		3951561	1					
ANR	3951616	PrimaryExpression	1		3951561	1					
ANR	3951617	ExpressionStatement	result -> op_type = IS_CONST	6229:1:183916:183942	3951561	6	True				
ANR	3951618	AssignmentExpression	result -> op_type = IS_CONST		3951561	0		=			
ANR	3951619	PtrMemberAccess	result -> op_type		3951561	0					
ANR	3951620	Identifier	result		3951561	0					
ANR	3951621	Identifier	op_type		3951561	1					
ANR	3951622	Identifier	IS_CONST		3951561	1					
ANR	3951623	ExpressionStatement	"ZVAL_LONG ( & result -> u . constant , 1 )"	6230:1:183945:183978	3951561	7	True				
ANR	3951624	CallExpression	"ZVAL_LONG ( & result -> u . constant , 1 )"		3951561	0					
ANR	3951625	Callee	ZVAL_LONG		3951561	0					
ANR	3951626	Identifier	ZVAL_LONG		3951561	0					
ANR	3951627	ArgumentList	& result -> u . constant		3951561	1					
ANR	3951628	Argument	& result -> u . constant		3951561	0					
ANR	3951629	UnaryOperationExpression	& result -> u . constant		3951561	0					
ANR	3951630	UnaryOperator	&		3951561	0					
ANR	3951631	MemberAccess	result -> u . constant		3951561	1					
ANR	3951632	PtrMemberAccess	result -> u		3951561	0					
ANR	3951633	Identifier	result		3951561	0					
ANR	3951634	Identifier	u		3951561	1					
ANR	3951635	Identifier	constant		3951561	1					
ANR	3951636	Argument	1		3951561	1					
ANR	3951637	PrimaryExpression	1		3951561	0					
ANR	3951638	ReturnType	void		3951561	1					
ANR	3951639	Identifier	zend_compile_print		3951561	2					
ANR	3951640	ParameterList	"znode * result , zend_ast * ast"		3951561	3					
ANR	3951641	Parameter	znode * result	6218:24:183667:183679	3951561	0	True				
ANR	3951642	ParameterType	znode *		3951561	0					
ANR	3951643	Identifier	result		3951561	1					
ANR	3951644	Parameter	zend_ast * ast	6218:39:183682:183694	3951561	1	True				
ANR	3951645	ParameterType	zend_ast *		3951561	0					
ANR	3951646	Identifier	ast		3951561	1					
ANR	3951647	CFGEntryNode	ENTRY		3951561		True				
ANR	3951648	CFGExitNode	EXIT		3951561		True				
ANR	3951649	Symbol	IS_CONST		3951561						
ANR	3951650	Symbol	ast		3951561						
ANR	3951651	Symbol	NULL		3951561						
ANR	3951652	Symbol	& result -> u		3951561						
ANR	3951653	Symbol	ZEND_ECHO		3951561						
ANR	3951654	Symbol	expr_ast		3951561						
ANR	3951655	Symbol	& expr_node		3951561						
ANR	3951656	Symbol	result -> op_type		3951561						
ANR	3951657	Symbol	result -> u		3951561						
ANR	3951658	Symbol	opline -> extended_value		3951561						
ANR	3951659	Symbol	result		3951561						
ANR	3951660	Symbol	expr_node		3951561						
ANR	3951661	Symbol	opline		3951561						
ANR	3951662	Symbol	* ast		3951561						
ANR	3951663	Symbol	* opline		3951561						
ANR	3951664	Symbol	* result		3951561						
ANR	3951665	Symbol	* * ast		3951561						
ANR	3951666	Symbol	& result -> u . constant		3951561						
ANR	3951667	Symbol	* ast -> child		3951561						
ANR	3951668	Symbol	ast -> child		3951561						
ANR	3951669	Symbol	zend_emit_op		3951561						
ANR	3951670	Function	zend_compile_exit	6234:0:183993:184350							
ANR	3951671	FunctionDef	"zend_compile_exit (znode * result , zend_ast * ast)"		3951670	0					
ANR	3951672	CompoundStatement		6235:0:184056:184350	3951670	0					
ANR	3951673	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6236:1:184059:184093	3951670	0	True				
ANR	3951674	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3951670	0					
ANR	3951675	IdentifierDeclType	zend_ast *		3951670	0					
ANR	3951676	Identifier	expr_ast		3951670	1					
ANR	3951677	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3951670	2		=			
ANR	3951678	Identifier	expr_ast		3951670	0					
ANR	3951679	ArrayIndexing	ast -> child [ 0 ]		3951670	1					
ANR	3951680	PtrMemberAccess	ast -> child		3951670	0					
ANR	3951681	Identifier	ast		3951670	0					
ANR	3951682	Identifier	child		3951670	1					
ANR	3951683	PrimaryExpression	0		3951670	1					
ANR	3951684	IfStatement	if ( expr_ast )		3951670	1					
ANR	3951685	Condition	expr_ast	6238:5:184101:184108	3951670	0	True				
ANR	3951686	Identifier	expr_ast		3951670	0					
ANR	3951687	CompoundStatement		5:2:58:73	3951670	1					
ANR	3951688	IdentifierDeclStatement	znode expr_node ;	6239:2:184115:184130	3951670	0	True				
ANR	3951689	IdentifierDecl	expr_node		3951670	0					
ANR	3951690	IdentifierDeclType	znode		3951670	0					
ANR	3951691	Identifier	expr_node		3951670	1					
ANR	3951692	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	6240:2:184134:184173	3951670	1	True				
ANR	3951693	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3951670	0					
ANR	3951694	Callee	zend_compile_expr		3951670	0					
ANR	3951695	Identifier	zend_compile_expr		3951670	0					
ANR	3951696	ArgumentList	& expr_node		3951670	1					
ANR	3951697	Argument	& expr_node		3951670	0					
ANR	3951698	UnaryOperationExpression	& expr_node		3951670	0					
ANR	3951699	UnaryOperator	&		3951670	0					
ANR	3951700	Identifier	expr_node		3951670	1					
ANR	3951701	Argument	expr_ast		3951670	1					
ANR	3951702	Identifier	expr_ast		3951670	0					
ANR	3951703	ExpressionStatement	"zend_emit_op ( NULL , ZEND_EXIT , & expr_node , NULL )"	6241:2:184177:184224	3951670	2	True				
ANR	3951704	CallExpression	"zend_emit_op ( NULL , ZEND_EXIT , & expr_node , NULL )"		3951670	0					
ANR	3951705	Callee	zend_emit_op		3951670	0					
ANR	3951706	Identifier	zend_emit_op		3951670	0					
ANR	3951707	ArgumentList	NULL		3951670	1					
ANR	3951708	Argument	NULL		3951670	0					
ANR	3951709	Identifier	NULL		3951670	0					
ANR	3951710	Argument	ZEND_EXIT		3951670	1					
ANR	3951711	Identifier	ZEND_EXIT		3951670	0					
ANR	3951712	Argument	& expr_node		3951670	2					
ANR	3951713	UnaryOperationExpression	& expr_node		3951670	0					
ANR	3951714	UnaryOperator	&		3951670	0					
ANR	3951715	Identifier	expr_node		3951670	1					
ANR	3951716	Argument	NULL		3951670	3					
ANR	3951717	Identifier	NULL		3951670	0					
ANR	3951718	ElseStatement	else		3951670	0					
ANR	3951719	CompoundStatement		8:8:177:177	3951670	0					
ANR	3951720	ExpressionStatement	"zend_emit_op ( NULL , ZEND_EXIT , NULL , NULL )"	6243:2:184238:184279	3951670	0	True				
ANR	3951721	CallExpression	"zend_emit_op ( NULL , ZEND_EXIT , NULL , NULL )"		3951670	0					
ANR	3951722	Callee	zend_emit_op		3951670	0					
ANR	3951723	Identifier	zend_emit_op		3951670	0					
ANR	3951724	ArgumentList	NULL		3951670	1					
ANR	3951725	Argument	NULL		3951670	0					
ANR	3951726	Identifier	NULL		3951670	0					
ANR	3951727	Argument	ZEND_EXIT		3951670	1					
ANR	3951728	Identifier	ZEND_EXIT		3951670	0					
ANR	3951729	Argument	NULL		3951670	2					
ANR	3951730	Identifier	NULL		3951670	0					
ANR	3951731	Argument	NULL		3951670	3					
ANR	3951732	Identifier	NULL		3951670	0					
ANR	3951733	ExpressionStatement	result -> op_type = IS_CONST	6246:1:184286:184312	3951670	2	True				
ANR	3951734	AssignmentExpression	result -> op_type = IS_CONST		3951670	0		=			
ANR	3951735	PtrMemberAccess	result -> op_type		3951670	0					
ANR	3951736	Identifier	result		3951670	0					
ANR	3951737	Identifier	op_type		3951670	1					
ANR	3951738	Identifier	IS_CONST		3951670	1					
ANR	3951739	ExpressionStatement	"ZVAL_BOOL ( & result -> u . constant , 1 )"	6247:1:184315:184348	3951670	3	True				
ANR	3951740	CallExpression	"ZVAL_BOOL ( & result -> u . constant , 1 )"		3951670	0					
ANR	3951741	Callee	ZVAL_BOOL		3951670	0					
ANR	3951742	Identifier	ZVAL_BOOL		3951670	0					
ANR	3951743	ArgumentList	& result -> u . constant		3951670	1					
ANR	3951744	Argument	& result -> u . constant		3951670	0					
ANR	3951745	UnaryOperationExpression	& result -> u . constant		3951670	0					
ANR	3951746	UnaryOperator	&		3951670	0					
ANR	3951747	MemberAccess	result -> u . constant		3951670	1					
ANR	3951748	PtrMemberAccess	result -> u		3951670	0					
ANR	3951749	Identifier	result		3951670	0					
ANR	3951750	Identifier	u		3951670	1					
ANR	3951751	Identifier	constant		3951670	1					
ANR	3951752	Argument	1		3951670	1					
ANR	3951753	PrimaryExpression	1		3951670	0					
ANR	3951754	ReturnType	void		3951670	1					
ANR	3951755	Identifier	zend_compile_exit		3951670	2					
ANR	3951756	ParameterList	"znode * result , zend_ast * ast"		3951670	3					
ANR	3951757	Parameter	znode * result	6234:23:184016:184028	3951670	0	True				
ANR	3951758	ParameterType	znode *		3951670	0					
ANR	3951759	Identifier	result		3951670	1					
ANR	3951760	Parameter	zend_ast * ast	6234:38:184031:184043	3951670	1	True				
ANR	3951761	ParameterType	zend_ast *		3951670	0					
ANR	3951762	Identifier	ast		3951670	1					
ANR	3951763	CFGEntryNode	ENTRY		3951670		True				
ANR	3951764	CFGExitNode	EXIT		3951670		True				
ANR	3951765	Symbol	IS_CONST		3951670						
ANR	3951766	Symbol	ast		3951670						
ANR	3951767	Symbol	NULL		3951670						
ANR	3951768	Symbol	& result -> u		3951670						
ANR	3951769	Symbol	expr_ast		3951670						
ANR	3951770	Symbol	& expr_node		3951670						
ANR	3951771	Symbol	result -> op_type		3951670						
ANR	3951772	Symbol	result -> u		3951670						
ANR	3951773	Symbol	result		3951670						
ANR	3951774	Symbol	expr_node		3951670						
ANR	3951775	Symbol	* ast		3951670						
ANR	3951776	Symbol	* result		3951670						
ANR	3951777	Symbol	* * ast		3951670						
ANR	3951778	Symbol	ZEND_EXIT		3951670						
ANR	3951779	Symbol	& result -> u . constant		3951670						
ANR	3951780	Symbol	* ast -> child		3951670						
ANR	3951781	Symbol	ast -> child		3951670						
ANR	3951782	Function	zend_compile_yield	6251:0:184363:185271							
ANR	3951783	FunctionDef	"zend_compile_yield (znode * result , zend_ast * ast)"		3951782	0					
ANR	3951784	CompoundStatement		6252:0:184427:185271	3951782	0					
ANR	3951785	IdentifierDeclStatement	zend_ast * value_ast = ast -> child [ 0 ] ;	6253:1:184430:184465	3951782	0	True				
ANR	3951786	IdentifierDecl	* value_ast = ast -> child [ 0 ]		3951782	0					
ANR	3951787	IdentifierDeclType	zend_ast *		3951782	0					
ANR	3951788	Identifier	value_ast		3951782	1					
ANR	3951789	AssignmentExpression	* value_ast = ast -> child [ 0 ]		3951782	2		=			
ANR	3951790	Identifier	value_ast		3951782	0					
ANR	3951791	ArrayIndexing	ast -> child [ 0 ]		3951782	1					
ANR	3951792	PtrMemberAccess	ast -> child		3951782	0					
ANR	3951793	Identifier	ast		3951782	0					
ANR	3951794	Identifier	child		3951782	1					
ANR	3951795	PrimaryExpression	0		3951782	1					
ANR	3951796	IdentifierDeclStatement	zend_ast * key_ast = ast -> child [ 1 ] ;	6254:1:184468:184501	3951782	1	True				
ANR	3951797	IdentifierDecl	* key_ast = ast -> child [ 1 ]		3951782	0					
ANR	3951798	IdentifierDeclType	zend_ast *		3951782	0					
ANR	3951799	Identifier	key_ast		3951782	1					
ANR	3951800	AssignmentExpression	* key_ast = ast -> child [ 1 ]		3951782	2		=			
ANR	3951801	Identifier	key_ast		3951782	0					
ANR	3951802	ArrayIndexing	ast -> child [ 1 ]		3951782	1					
ANR	3951803	PtrMemberAccess	ast -> child		3951782	0					
ANR	3951804	Identifier	ast		3951782	0					
ANR	3951805	Identifier	child		3951782	1					
ANR	3951806	PrimaryExpression	1		3951782	1					
ANR	3951807	IdentifierDeclStatement	"znode value_node , key_node ;"	6256:1:184505:184531	3951782	2	True				
ANR	3951808	IdentifierDecl	value_node		3951782	0					
ANR	3951809	IdentifierDeclType	znode		3951782	0					
ANR	3951810	Identifier	value_node		3951782	1					
ANR	3951811	IdentifierDecl	key_node		3951782	1					
ANR	3951812	IdentifierDeclType	znode		3951782	0					
ANR	3951813	Identifier	key_node		3951782	1					
ANR	3951814	IdentifierDeclStatement	"znode * value_node_ptr = NULL , * key_node_ptr = NULL ;"	6257:1:184534:184584	3951782	3	True				
ANR	3951815	IdentifierDecl	* value_node_ptr = NULL		3951782	0					
ANR	3951816	IdentifierDeclType	znode *		3951782	0					
ANR	3951817	Identifier	value_node_ptr		3951782	1					
ANR	3951818	AssignmentExpression	* value_node_ptr = NULL		3951782	2		=			
ANR	3951819	Identifier	NULL		3951782	0					
ANR	3951820	Identifier	NULL		3951782	1					
ANR	3951821	IdentifierDecl	* key_node_ptr = NULL		3951782	1					
ANR	3951822	IdentifierDeclType	znode *		3951782	0					
ANR	3951823	Identifier	key_node_ptr		3951782	1					
ANR	3951824	AssignmentExpression	* key_node_ptr = NULL		3951782	2		=			
ANR	3951825	Identifier	NULL		3951782	0					
ANR	3951826	Identifier	NULL		3951782	1					
ANR	3951827	IdentifierDeclStatement	zend_op * opline ;	6258:1:184587:184602	3951782	4	True				
ANR	3951828	IdentifierDecl	* opline		3951782	0					
ANR	3951829	IdentifierDeclType	zend_op *		3951782	0					
ANR	3951830	Identifier	opline		3951782	1					
ANR	3951831	IdentifierDeclStatement	zend_bool returns_by_ref = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0 ;	6259:1:184605:184696	3951782	5	True				
ANR	3951832	IdentifierDecl	returns_by_ref = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3951782	0					
ANR	3951833	IdentifierDeclType	zend_bool		3951782	0					
ANR	3951834	Identifier	returns_by_ref		3951782	1					
ANR	3951835	AssignmentExpression	returns_by_ref = ( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3951782	2		=			
ANR	3951836	Identifier	returns_by_ref		3951782	0					
ANR	3951837	EqualityExpression	( CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) != 0		3951782	1		!=			
ANR	3951838	BitAndExpression	CG ( active_op_array ) -> fn_flags & ZEND_ACC_RETURN_REFERENCE		3951782	0		&			
ANR	3951839	PtrMemberAccess	CG ( active_op_array ) -> fn_flags		3951782	0					
ANR	3951840	CallExpression	CG ( active_op_array )		3951782	0					
ANR	3951841	Callee	CG		3951782	0					
ANR	3951842	Identifier	CG		3951782	0					
ANR	3951843	ArgumentList	active_op_array		3951782	1					
ANR	3951844	Argument	active_op_array		3951782	0					
ANR	3951845	Identifier	active_op_array		3951782	0					
ANR	3951846	Identifier	fn_flags		3951782	1					
ANR	3951847	Identifier	ZEND_ACC_RETURN_REFERENCE		3951782	1					
ANR	3951848	PrimaryExpression	0		3951782	1					
ANR	3951849	ExpressionStatement	zend_mark_function_as_generator ( )	6261:1:184700:184733	3951782	6	True				
ANR	3951850	CallExpression	zend_mark_function_as_generator ( )		3951782	0					
ANR	3951851	Callee	zend_mark_function_as_generator		3951782	0					
ANR	3951852	Identifier	zend_mark_function_as_generator		3951782	0					
ANR	3951853	ArgumentList			3951782	1					
ANR	3951854	IfStatement	if ( key_ast )		3951782	7					
ANR	3951855	Condition	key_ast	6263:5:184741:184747	3951782	0	True				
ANR	3951856	Identifier	key_ast		3951782	0					
ANR	3951857	CompoundStatement		12:14:322:322	3951782	1					
ANR	3951858	ExpressionStatement	"zend_compile_expr ( & key_node , key_ast )"	6264:2:184754:184791	3951782	0	True				
ANR	3951859	CallExpression	"zend_compile_expr ( & key_node , key_ast )"		3951782	0					
ANR	3951860	Callee	zend_compile_expr		3951782	0					
ANR	3951861	Identifier	zend_compile_expr		3951782	0					
ANR	3951862	ArgumentList	& key_node		3951782	1					
ANR	3951863	Argument	& key_node		3951782	0					
ANR	3951864	UnaryOperationExpression	& key_node		3951782	0					
ANR	3951865	UnaryOperator	&		3951782	0					
ANR	3951866	Identifier	key_node		3951782	1					
ANR	3951867	Argument	key_ast		3951782	1					
ANR	3951868	Identifier	key_ast		3951782	0					
ANR	3951869	ExpressionStatement	key_node_ptr = & key_node	6265:2:184795:184819	3951782	1	True				
ANR	3951870	AssignmentExpression	key_node_ptr = & key_node		3951782	0		=			
ANR	3951871	Identifier	key_node_ptr		3951782	0					
ANR	3951872	UnaryOperationExpression	& key_node		3951782	1					
ANR	3951873	UnaryOperator	&		3951782	0					
ANR	3951874	Identifier	key_node		3951782	1					
ANR	3951875	IfStatement	if ( value_ast )		3951782	8					
ANR	3951876	Condition	value_ast	6268:5:184830:184838	3951782	0	True				
ANR	3951877	Identifier	value_ast		3951782	0					
ANR	3951878	CompoundStatement		17:16:413:413	3951782	1					
ANR	3951879	IfStatement	if ( returns_by_ref && zend_is_variable ( value_ast ) && ! zend_is_call ( value_ast ) )		3951782	0					
ANR	3951880	Condition	returns_by_ref && zend_is_variable ( value_ast ) && ! zend_is_call ( value_ast )	6269:6:184849:184921	3951782	0	True				
ANR	3951881	AndExpression	returns_by_ref && zend_is_variable ( value_ast ) && ! zend_is_call ( value_ast )		3951782	0		&&			
ANR	3951882	Identifier	returns_by_ref		3951782	0					
ANR	3951883	AndExpression	zend_is_variable ( value_ast ) && ! zend_is_call ( value_ast )		3951782	1		&&			
ANR	3951884	CallExpression	zend_is_variable ( value_ast )		3951782	0					
ANR	3951885	Callee	zend_is_variable		3951782	0					
ANR	3951886	Identifier	zend_is_variable		3951782	0					
ANR	3951887	ArgumentList	value_ast		3951782	1					
ANR	3951888	Argument	value_ast		3951782	0					
ANR	3951889	Identifier	value_ast		3951782	0					
ANR	3951890	UnaryOperationExpression	! zend_is_call ( value_ast )		3951782	1					
ANR	3951891	UnaryOperator	!		3951782	0					
ANR	3951892	CallExpression	zend_is_call ( value_ast )		3951782	1					
ANR	3951893	Callee	zend_is_call		3951782	0					
ANR	3951894	Identifier	zend_is_call		3951782	0					
ANR	3951895	ArgumentList	value_ast		3951782	1					
ANR	3951896	Argument	value_ast		3951782	0					
ANR	3951897	Identifier	value_ast		3951782	0					
ANR	3951898	CompoundStatement		18:81:496:496	3951782	1					
ANR	3951899	ExpressionStatement	"zend_compile_var ( & value_node , value_ast , BP_VAR_REF )"	6270:3:184929:184981	3951782	0	True				
ANR	3951900	CallExpression	"zend_compile_var ( & value_node , value_ast , BP_VAR_REF )"		3951782	0					
ANR	3951901	Callee	zend_compile_var		3951782	0					
ANR	3951902	Identifier	zend_compile_var		3951782	0					
ANR	3951903	ArgumentList	& value_node		3951782	1					
ANR	3951904	Argument	& value_node		3951782	0					
ANR	3951905	UnaryOperationExpression	& value_node		3951782	0					
ANR	3951906	UnaryOperator	&		3951782	0					
ANR	3951907	Identifier	value_node		3951782	1					
ANR	3951908	Argument	value_ast		3951782	1					
ANR	3951909	Identifier	value_ast		3951782	0					
ANR	3951910	Argument	BP_VAR_REF		3951782	2					
ANR	3951911	Identifier	BP_VAR_REF		3951782	0					
ANR	3951912	ElseStatement	else		3951782	0					
ANR	3951913	CompoundStatement		20:9:564:564	3951782	0					
ANR	3951914	ExpressionStatement	"zend_compile_expr ( & value_node , value_ast )"	6272:3:184997:185038	3951782	0	True				
ANR	3951915	CallExpression	"zend_compile_expr ( & value_node , value_ast )"		3951782	0					
ANR	3951916	Callee	zend_compile_expr		3951782	0					
ANR	3951917	Identifier	zend_compile_expr		3951782	0					
ANR	3951918	ArgumentList	& value_node		3951782	1					
ANR	3951919	Argument	& value_node		3951782	0					
ANR	3951920	UnaryOperationExpression	& value_node		3951782	0					
ANR	3951921	UnaryOperator	&		3951782	0					
ANR	3951922	Identifier	value_node		3951782	1					
ANR	3951923	Argument	value_ast		3951782	1					
ANR	3951924	Identifier	value_ast		3951782	0					
ANR	3951925	ExpressionStatement	value_node_ptr = & value_node	6274:2:185046:185074	3951782	1	True				
ANR	3951926	AssignmentExpression	value_node_ptr = & value_node		3951782	0		=			
ANR	3951927	Identifier	value_node_ptr		3951782	0					
ANR	3951928	UnaryOperationExpression	& value_node		3951782	1					
ANR	3951929	UnaryOperator	&		3951782	0					
ANR	3951930	Identifier	value_node		3951782	1					
ANR	3951931	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_YIELD , value_node_ptr , key_node_ptr )"	6277:1:185081:185152	3951782	9	True				
ANR	3951932	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_YIELD , value_node_ptr , key_node_ptr )"		3951782	0		=			
ANR	3951933	Identifier	opline		3951782	0					
ANR	3951934	CallExpression	"zend_emit_op ( result , ZEND_YIELD , value_node_ptr , key_node_ptr )"		3951782	1					
ANR	3951935	Callee	zend_emit_op		3951782	0					
ANR	3951936	Identifier	zend_emit_op		3951782	0					
ANR	3951937	ArgumentList	result		3951782	1					
ANR	3951938	Argument	result		3951782	0					
ANR	3951939	Identifier	result		3951782	0					
ANR	3951940	Argument	ZEND_YIELD		3951782	1					
ANR	3951941	Identifier	ZEND_YIELD		3951782	0					
ANR	3951942	Argument	value_node_ptr		3951782	2					
ANR	3951943	Identifier	value_node_ptr		3951782	0					
ANR	3951944	Argument	key_node_ptr		3951782	3					
ANR	3951945	Identifier	key_node_ptr		3951782	0					
ANR	3951946	IfStatement	if ( value_ast && returns_by_ref && zend_is_call ( value_ast ) )		3951782	10					
ANR	3951947	Condition	value_ast && returns_by_ref && zend_is_call ( value_ast )	6279:5:185160:185213	3951782	0	True				
ANR	3951948	AndExpression	value_ast && returns_by_ref && zend_is_call ( value_ast )		3951782	0		&&			
ANR	3951949	Identifier	value_ast		3951782	0					
ANR	3951950	AndExpression	returns_by_ref && zend_is_call ( value_ast )		3951782	1		&&			
ANR	3951951	Identifier	returns_by_ref		3951782	0					
ANR	3951952	CallExpression	zend_is_call ( value_ast )		3951782	1					
ANR	3951953	Callee	zend_is_call		3951782	0					
ANR	3951954	Identifier	zend_is_call		3951782	0					
ANR	3951955	ArgumentList	value_ast		3951782	1					
ANR	3951956	Argument	value_ast		3951782	0					
ANR	3951957	Identifier	value_ast		3951782	0					
ANR	3951958	CompoundStatement		28:61:788:788	3951782	1					
ANR	3951959	ExpressionStatement	opline -> extended_value = ZEND_RETURNS_FUNCTION	6280:2:185220:185266	3951782	0	True				
ANR	3951960	AssignmentExpression	opline -> extended_value = ZEND_RETURNS_FUNCTION		3951782	0		=			
ANR	3951961	PtrMemberAccess	opline -> extended_value		3951782	0					
ANR	3951962	Identifier	opline		3951782	0					
ANR	3951963	Identifier	extended_value		3951782	1					
ANR	3951964	Identifier	ZEND_RETURNS_FUNCTION		3951782	1					
ANR	3951965	ReturnType	void		3951782	1					
ANR	3951966	Identifier	zend_compile_yield		3951782	2					
ANR	3951967	ParameterList	"znode * result , zend_ast * ast"		3951782	3					
ANR	3951968	Parameter	znode * result	6251:24:184387:184399	3951782	0	True				
ANR	3951969	ParameterType	znode *		3951782	0					
ANR	3951970	Identifier	result		3951782	1					
ANR	3951971	Parameter	zend_ast * ast	6251:39:184402:184414	3951782	1	True				
ANR	3951972	ParameterType	zend_ast *		3951782	0					
ANR	3951973	Identifier	ast		3951782	1					
ANR	3951974	CFGEntryNode	ENTRY		3951782		True				
ANR	3951975	CFGExitNode	EXIT		3951782		True				
ANR	3951976	Symbol	ast		3951782						
ANR	3951977	Symbol	key_ast		3951782						
ANR	3951978	Symbol	* CG		3951782						
ANR	3951979	Symbol	& key_node		3951782						
ANR	3951980	Symbol	opline -> extended_value		3951782						
ANR	3951981	Symbol	result		3951782						
ANR	3951982	Symbol	* ast		3951782						
ANR	3951983	Symbol	value_node_ptr		3951782						
ANR	3951984	Symbol	opline		3951782						
ANR	3951985	Symbol	value_ast		3951782						
ANR	3951986	Symbol	* * ast		3951782						
ANR	3951987	Symbol	value_node		3951782						
ANR	3951988	Symbol	returns_by_ref		3951782						
ANR	3951989	Symbol	key_node_ptr		3951782						
ANR	3951990	Symbol	BP_VAR_REF		3951782						
ANR	3951991	Symbol	zend_is_variable		3951782						
ANR	3951992	Symbol	NULL		3951782						
ANR	3951993	Symbol	CG		3951782						
ANR	3951994	Symbol	zend_is_call		3951782						
ANR	3951995	Symbol	ZEND_YIELD		3951782						
ANR	3951996	Symbol	active_op_array		3951782						
ANR	3951997	Symbol	CG ( active_op_array ) -> fn_flags		3951782						
ANR	3951998	Symbol	ZEND_RETURNS_FUNCTION		3951782						
ANR	3951999	Symbol	* opline		3951782						
ANR	3952000	Symbol	& value_node		3951782						
ANR	3952001	Symbol	ZEND_ACC_RETURN_REFERENCE		3951782						
ANR	3952002	Symbol	key_node		3951782						
ANR	3952003	Symbol	* ast -> child		3951782						
ANR	3952004	Symbol	ast -> child		3951782						
ANR	3952005	Symbol	zend_emit_op		3951782						
ANR	3952006	Function	zend_compile_yield_from	6285:0:185284:185552							
ANR	3952007	FunctionDef	"zend_compile_yield_from (znode * result , zend_ast * ast)"		3952006	0					
ANR	3952008	CompoundStatement		6286:0:185353:185552	3952006	0					
ANR	3952009	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6287:1:185356:185390	3952006	0	True				
ANR	3952010	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3952006	0					
ANR	3952011	IdentifierDeclType	zend_ast *		3952006	0					
ANR	3952012	Identifier	expr_ast		3952006	1					
ANR	3952013	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3952006	2		=			
ANR	3952014	Identifier	expr_ast		3952006	0					
ANR	3952015	ArrayIndexing	ast -> child [ 0 ]		3952006	1					
ANR	3952016	PtrMemberAccess	ast -> child		3952006	0					
ANR	3952017	Identifier	ast		3952006	0					
ANR	3952018	Identifier	child		3952006	1					
ANR	3952019	PrimaryExpression	0		3952006	1					
ANR	3952020	IdentifierDeclStatement	znode expr_node ;	6288:1:185393:185408	3952006	1	True				
ANR	3952021	IdentifierDecl	expr_node		3952006	0					
ANR	3952022	IdentifierDeclType	znode		3952006	0					
ANR	3952023	Identifier	expr_node		3952006	1					
ANR	3952024	ExpressionStatement	zend_mark_function_as_generator ( )	6290:1:185412:185445	3952006	2	True				
ANR	3952025	CallExpression	zend_mark_function_as_generator ( )		3952006	0					
ANR	3952026	Callee	zend_mark_function_as_generator		3952006	0					
ANR	3952027	Identifier	zend_mark_function_as_generator		3952006	0					
ANR	3952028	ArgumentList			3952006	1					
ANR	3952029	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	6292:1:185449:185488	3952006	3	True				
ANR	3952030	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3952006	0					
ANR	3952031	Callee	zend_compile_expr		3952006	0					
ANR	3952032	Identifier	zend_compile_expr		3952006	0					
ANR	3952033	ArgumentList	& expr_node		3952006	1					
ANR	3952034	Argument	& expr_node		3952006	0					
ANR	3952035	UnaryOperationExpression	& expr_node		3952006	0					
ANR	3952036	UnaryOperator	&		3952006	0					
ANR	3952037	Identifier	expr_node		3952006	1					
ANR	3952038	Argument	expr_ast		3952006	1					
ANR	3952039	Identifier	expr_ast		3952006	0					
ANR	3952040	ExpressionStatement	"zend_emit_op_tmp ( result , ZEND_YIELD_FROM , & expr_node , NULL )"	6293:1:185491:185550	3952006	4	True				
ANR	3952041	CallExpression	"zend_emit_op_tmp ( result , ZEND_YIELD_FROM , & expr_node , NULL )"		3952006	0					
ANR	3952042	Callee	zend_emit_op_tmp		3952006	0					
ANR	3952043	Identifier	zend_emit_op_tmp		3952006	0					
ANR	3952044	ArgumentList	result		3952006	1					
ANR	3952045	Argument	result		3952006	0					
ANR	3952046	Identifier	result		3952006	0					
ANR	3952047	Argument	ZEND_YIELD_FROM		3952006	1					
ANR	3952048	Identifier	ZEND_YIELD_FROM		3952006	0					
ANR	3952049	Argument	& expr_node		3952006	2					
ANR	3952050	UnaryOperationExpression	& expr_node		3952006	0					
ANR	3952051	UnaryOperator	&		3952006	0					
ANR	3952052	Identifier	expr_node		3952006	1					
ANR	3952053	Argument	NULL		3952006	3					
ANR	3952054	Identifier	NULL		3952006	0					
ANR	3952055	ReturnType	void		3952006	1					
ANR	3952056	Identifier	zend_compile_yield_from		3952006	2					
ANR	3952057	ParameterList	"znode * result , zend_ast * ast"		3952006	3					
ANR	3952058	Parameter	znode * result	6285:29:185313:185325	3952006	0	True				
ANR	3952059	ParameterType	znode *		3952006	0					
ANR	3952060	Identifier	result		3952006	1					
ANR	3952061	Parameter	zend_ast * ast	6285:44:185328:185340	3952006	1	True				
ANR	3952062	ParameterType	zend_ast *		3952006	0					
ANR	3952063	Identifier	ast		3952006	1					
ANR	3952064	CFGEntryNode	ENTRY		3952006		True				
ANR	3952065	CFGExitNode	EXIT		3952006		True				
ANR	3952066	Symbol	result		3952006						
ANR	3952067	Symbol	expr_node		3952006						
ANR	3952068	Symbol	ast		3952006						
ANR	3952069	Symbol	* ast		3952006						
ANR	3952070	Symbol	NULL		3952006						
ANR	3952071	Symbol	* * ast		3952006						
ANR	3952072	Symbol	* ast -> child		3952006						
ANR	3952073	Symbol	ZEND_YIELD_FROM		3952006						
ANR	3952074	Symbol	expr_ast		3952006						
ANR	3952075	Symbol	ast -> child		3952006						
ANR	3952076	Symbol	& expr_node		3952006						
ANR	3952077	Function	zend_compile_instanceof	6297:0:185565:186535							
ANR	3952078	FunctionDef	"zend_compile_instanceof (znode * result , zend_ast * ast)"		3952077	0					
ANR	3952079	CompoundStatement		6298:0:185634:186535	3952077	0					
ANR	3952080	IdentifierDeclStatement	zend_ast * obj_ast = ast -> child [ 0 ] ;	6299:1:185637:185670	3952077	0	True				
ANR	3952081	IdentifierDecl	* obj_ast = ast -> child [ 0 ]		3952077	0					
ANR	3952082	IdentifierDeclType	zend_ast *		3952077	0					
ANR	3952083	Identifier	obj_ast		3952077	1					
ANR	3952084	AssignmentExpression	* obj_ast = ast -> child [ 0 ]		3952077	2		=			
ANR	3952085	Identifier	obj_ast		3952077	0					
ANR	3952086	ArrayIndexing	ast -> child [ 0 ]		3952077	1					
ANR	3952087	PtrMemberAccess	ast -> child		3952077	0					
ANR	3952088	Identifier	ast		3952077	0					
ANR	3952089	Identifier	child		3952077	1					
ANR	3952090	PrimaryExpression	0		3952077	1					
ANR	3952091	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 1 ] ;	6300:1:185673:185708	3952077	1	True				
ANR	3952092	IdentifierDecl	* class_ast = ast -> child [ 1 ]		3952077	0					
ANR	3952093	IdentifierDeclType	zend_ast *		3952077	0					
ANR	3952094	Identifier	class_ast		3952077	1					
ANR	3952095	AssignmentExpression	* class_ast = ast -> child [ 1 ]		3952077	2		=			
ANR	3952096	Identifier	class_ast		3952077	0					
ANR	3952097	ArrayIndexing	ast -> child [ 1 ]		3952077	1					
ANR	3952098	PtrMemberAccess	ast -> child		3952077	0					
ANR	3952099	Identifier	ast		3952077	0					
ANR	3952100	Identifier	child		3952077	1					
ANR	3952101	PrimaryExpression	1		3952077	1					
ANR	3952102	IdentifierDeclStatement	"znode obj_node , class_node ;"	6302:1:185712:185738	3952077	2	True				
ANR	3952103	IdentifierDecl	obj_node		3952077	0					
ANR	3952104	IdentifierDeclType	znode		3952077	0					
ANR	3952105	Identifier	obj_node		3952077	1					
ANR	3952106	IdentifierDecl	class_node		3952077	1					
ANR	3952107	IdentifierDeclType	znode		3952077	0					
ANR	3952108	Identifier	class_node		3952077	1					
ANR	3952109	IdentifierDeclStatement	zend_op * opline ;	6303:1:185741:185756	3952077	3	True				
ANR	3952110	IdentifierDecl	* opline		3952077	0					
ANR	3952111	IdentifierDeclType	zend_op *		3952077	0					
ANR	3952112	Identifier	opline		3952077	1					
ANR	3952113	ExpressionStatement	"zend_compile_expr ( & obj_node , obj_ast )"	6305:1:185760:185797	3952077	4	True				
ANR	3952114	CallExpression	"zend_compile_expr ( & obj_node , obj_ast )"		3952077	0					
ANR	3952115	Callee	zend_compile_expr		3952077	0					
ANR	3952116	Identifier	zend_compile_expr		3952077	0					
ANR	3952117	ArgumentList	& obj_node		3952077	1					
ANR	3952118	Argument	& obj_node		3952077	0					
ANR	3952119	UnaryOperationExpression	& obj_node		3952077	0					
ANR	3952120	UnaryOperator	&		3952077	0					
ANR	3952121	Identifier	obj_node		3952077	1					
ANR	3952122	Argument	obj_ast		3952077	1					
ANR	3952123	Identifier	obj_ast		3952077	0					
ANR	3952124	IfStatement	if ( obj_node . op_type == IS_CONST )		3952077	5					
ANR	3952125	Condition	obj_node . op_type == IS_CONST	6306:5:185804:185831	3952077	0	True				
ANR	3952126	EqualityExpression	obj_node . op_type == IS_CONST		3952077	0		==			
ANR	3952127	MemberAccess	obj_node . op_type		3952077	0					
ANR	3952128	Identifier	obj_node		3952077	0					
ANR	3952129	Identifier	op_type		3952077	1					
ANR	3952130	Identifier	IS_CONST		3952077	1					
ANR	3952131	CompoundStatement		9:35:199:199	3952077	1					
ANR	3952132	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""instanceof expects an object instance, constant given"" )"	6307:2:185838:185934	3952077	0	True				
ANR	3952133	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""instanceof expects an object instance, constant given"" )"		3952077	0					
ANR	3952134	Callee	zend_error_noreturn		3952077	0					
ANR	3952135	Identifier	zend_error_noreturn		3952077	0					
ANR	3952136	ArgumentList	E_COMPILE_ERROR		3952077	1					
ANR	3952137	Argument	E_COMPILE_ERROR		3952077	0					
ANR	3952138	Identifier	E_COMPILE_ERROR		3952077	0					
ANR	3952139	Argument	"""instanceof expects an object instance, constant given"""		3952077	1					
ANR	3952140	PrimaryExpression	"""instanceof expects an object instance, constant given"""		3952077	0					
ANR	3952141	IfStatement	if ( zend_is_const_default_class_ref ( class_ast ) )		3952077	6					
ANR	3952142	Condition	zend_is_const_default_class_ref ( class_ast )	6311:5:185945:185986	3952077	0	True				
ANR	3952143	CallExpression	zend_is_const_default_class_ref ( class_ast )		3952077	0					
ANR	3952144	Callee	zend_is_const_default_class_ref		3952077	0					
ANR	3952145	Identifier	zend_is_const_default_class_ref		3952077	0					
ANR	3952146	ArgumentList	class_ast		3952077	1					
ANR	3952147	Argument	class_ast		3952077	0					
ANR	3952148	Identifier	class_ast		3952077	0					
ANR	3952149	CompoundStatement		14:49:354:354	3952077	1					
ANR	3952150	ExpressionStatement	class_node . op_type = IS_CONST	6312:2:185993:186022	3952077	0	True				
ANR	3952151	AssignmentExpression	class_node . op_type = IS_CONST		3952077	0		=			
ANR	3952152	MemberAccess	class_node . op_type		3952077	0					
ANR	3952153	Identifier	class_node		3952077	0					
ANR	3952154	Identifier	op_type		3952077	1					
ANR	3952155	Identifier	IS_CONST		3952077	1					
ANR	3952156	ExpressionStatement	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"	6313:2:186026:186098	3952077	1	True				
ANR	3952157	CallExpression	"ZVAL_STR ( & class_node . u . constant , zend_resolve_class_name_ast ( class_ast ) )"		3952077	0					
ANR	3952158	Callee	ZVAL_STR		3952077	0					
ANR	3952159	Identifier	ZVAL_STR		3952077	0					
ANR	3952160	ArgumentList	& class_node . u . constant		3952077	1					
ANR	3952161	Argument	& class_node . u . constant		3952077	0					
ANR	3952162	UnaryOperationExpression	& class_node . u . constant		3952077	0					
ANR	3952163	UnaryOperator	&		3952077	0					
ANR	3952164	MemberAccess	class_node . u . constant		3952077	1					
ANR	3952165	MemberAccess	class_node . u		3952077	0					
ANR	3952166	Identifier	class_node		3952077	0					
ANR	3952167	Identifier	u		3952077	1					
ANR	3952168	Identifier	constant		3952077	1					
ANR	3952169	Argument	zend_resolve_class_name_ast ( class_ast )		3952077	1					
ANR	3952170	CallExpression	zend_resolve_class_name_ast ( class_ast )		3952077	0					
ANR	3952171	Callee	zend_resolve_class_name_ast		3952077	0					
ANR	3952172	Identifier	zend_resolve_class_name_ast		3952077	0					
ANR	3952173	ArgumentList	class_ast		3952077	1					
ANR	3952174	Argument	class_ast		3952077	0					
ANR	3952175	Identifier	class_ast		3952077	0					
ANR	3952176	ElseStatement	else		3952077	0					
ANR	3952177	CompoundStatement		17:8:473:473	3952077	0					
ANR	3952178	ExpressionStatement	"opline = zend_compile_class_ref ( & class_node , class_ast , 0 )"	6315:2:186112:186170	3952077	0	True				
ANR	3952179	AssignmentExpression	"opline = zend_compile_class_ref ( & class_node , class_ast , 0 )"		3952077	0		=			
ANR	3952180	Identifier	opline		3952077	0					
ANR	3952181	CallExpression	"zend_compile_class_ref ( & class_node , class_ast , 0 )"		3952077	1					
ANR	3952182	Callee	zend_compile_class_ref		3952077	0					
ANR	3952183	Identifier	zend_compile_class_ref		3952077	0					
ANR	3952184	ArgumentList	& class_node		3952077	1					
ANR	3952185	Argument	& class_node		3952077	0					
ANR	3952186	UnaryOperationExpression	& class_node		3952077	0					
ANR	3952187	UnaryOperator	&		3952077	0					
ANR	3952188	Identifier	class_node		3952077	1					
ANR	3952189	Argument	class_ast		3952077	1					
ANR	3952190	Identifier	class_ast		3952077	0					
ANR	3952191	Argument	0		3952077	2					
ANR	3952192	PrimaryExpression	0		3952077	0					
ANR	3952193	ExpressionStatement	opline -> extended_value |= ZEND_FETCH_CLASS_NO_AUTOLOAD	6316:2:186174:186228	3952077	1	True				
ANR	3952194	AssignmentExpression	opline -> extended_value |= ZEND_FETCH_CLASS_NO_AUTOLOAD		3952077	0		|=			
ANR	3952195	PtrMemberAccess	opline -> extended_value		3952077	0					
ANR	3952196	Identifier	opline		3952077	0					
ANR	3952197	Identifier	extended_value		3952077	1					
ANR	3952198	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		3952077	1					
ANR	3952199	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_INSTANCEOF , & obj_node , NULL )"	6319:1:186235:186302	3952077	7	True				
ANR	3952200	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_INSTANCEOF , & obj_node , NULL )"		3952077	0		=			
ANR	3952201	Identifier	opline		3952077	0					
ANR	3952202	CallExpression	"zend_emit_op_tmp ( result , ZEND_INSTANCEOF , & obj_node , NULL )"		3952077	1					
ANR	3952203	Callee	zend_emit_op_tmp		3952077	0					
ANR	3952204	Identifier	zend_emit_op_tmp		3952077	0					
ANR	3952205	ArgumentList	result		3952077	1					
ANR	3952206	Argument	result		3952077	0					
ANR	3952207	Identifier	result		3952077	0					
ANR	3952208	Argument	ZEND_INSTANCEOF		3952077	1					
ANR	3952209	Identifier	ZEND_INSTANCEOF		3952077	0					
ANR	3952210	Argument	& obj_node		3952077	2					
ANR	3952211	UnaryOperationExpression	& obj_node		3952077	0					
ANR	3952212	UnaryOperator	&		3952077	0					
ANR	3952213	Identifier	obj_node		3952077	1					
ANR	3952214	Argument	NULL		3952077	3					
ANR	3952215	Identifier	NULL		3952077	0					
ANR	3952216	IfStatement	if ( class_node . op_type == IS_CONST )		3952077	8					
ANR	3952217	Condition	class_node . op_type == IS_CONST	6321:5:186310:186339	3952077	0	True				
ANR	3952218	EqualityExpression	class_node . op_type == IS_CONST		3952077	0		==			
ANR	3952219	MemberAccess	class_node . op_type		3952077	0					
ANR	3952220	Identifier	class_node		3952077	0					
ANR	3952221	Identifier	op_type		3952077	1					
ANR	3952222	Identifier	IS_CONST		3952077	1					
ANR	3952223	CompoundStatement		24:37:707:707	3952077	1					
ANR	3952224	ExpressionStatement	opline -> op2_type = IS_CONST	6322:2:186346:186373	3952077	0	True				
ANR	3952225	AssignmentExpression	opline -> op2_type = IS_CONST		3952077	0		=			
ANR	3952226	PtrMemberAccess	opline -> op2_type		3952077	0					
ANR	3952227	Identifier	opline		3952077	0					
ANR	3952228	Identifier	op2_type		3952077	1					
ANR	3952229	Identifier	IS_CONST		3952077	1					
ANR	3952230	ExpressionStatement	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"	6323:2:186377:186482	3952077	1	True				
ANR	3952231	AssignmentExpression	"opline -> op2 . constant = zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"		3952077	0		=			
ANR	3952232	MemberAccess	opline -> op2 . constant		3952077	0					
ANR	3952233	PtrMemberAccess	opline -> op2		3952077	0					
ANR	3952234	Identifier	opline		3952077	0					
ANR	3952235	Identifier	op2		3952077	1					
ANR	3952236	Identifier	constant		3952077	1					
ANR	3952237	CallExpression	"zend_add_class_name_literal ( CG ( active_op_array ) , Z_STR ( class_node . u . constant ) )"		3952077	1					
ANR	3952238	Callee	zend_add_class_name_literal		3952077	0					
ANR	3952239	Identifier	zend_add_class_name_literal		3952077	0					
ANR	3952240	ArgumentList	CG ( active_op_array )		3952077	1					
ANR	3952241	Argument	CG ( active_op_array )		3952077	0					
ANR	3952242	CallExpression	CG ( active_op_array )		3952077	0					
ANR	3952243	Callee	CG		3952077	0					
ANR	3952244	Identifier	CG		3952077	0					
ANR	3952245	ArgumentList	active_op_array		3952077	1					
ANR	3952246	Argument	active_op_array		3952077	0					
ANR	3952247	Identifier	active_op_array		3952077	0					
ANR	3952248	Argument	Z_STR ( class_node . u . constant )		3952077	1					
ANR	3952249	CallExpression	Z_STR ( class_node . u . constant )		3952077	0					
ANR	3952250	Callee	Z_STR		3952077	0					
ANR	3952251	Identifier	Z_STR		3952077	0					
ANR	3952252	ArgumentList	class_node . u . constant		3952077	1					
ANR	3952253	Argument	class_node . u . constant		3952077	0					
ANR	3952254	MemberAccess	class_node . u . constant		3952077	0					
ANR	3952255	MemberAccess	class_node . u		3952077	0					
ANR	3952256	Identifier	class_node		3952077	0					
ANR	3952257	Identifier	u		3952077	1					
ANR	3952258	Identifier	constant		3952077	1					
ANR	3952259	ElseStatement	else		3952077	0					
ANR	3952260	CompoundStatement		28:8:857:857	3952077	0					
ANR	3952261	ExpressionStatement	"SET_NODE ( opline -> op2 , & class_node )"	6326:2:186496:186530	3952077	0	True				
ANR	3952262	CallExpression	"SET_NODE ( opline -> op2 , & class_node )"		3952077	0					
ANR	3952263	Callee	SET_NODE		3952077	0					
ANR	3952264	Identifier	SET_NODE		3952077	0					
ANR	3952265	ArgumentList	opline -> op2		3952077	1					
ANR	3952266	Argument	opline -> op2		3952077	0					
ANR	3952267	PtrMemberAccess	opline -> op2		3952077	0					
ANR	3952268	Identifier	opline		3952077	0					
ANR	3952269	Identifier	op2		3952077	1					
ANR	3952270	Argument	& class_node		3952077	1					
ANR	3952271	UnaryOperationExpression	& class_node		3952077	0					
ANR	3952272	UnaryOperator	&		3952077	0					
ANR	3952273	Identifier	class_node		3952077	1					
ANR	3952274	ReturnType	void		3952077	1					
ANR	3952275	Identifier	zend_compile_instanceof		3952077	2					
ANR	3952276	ParameterList	"znode * result , zend_ast * ast"		3952077	3					
ANR	3952277	Parameter	znode * result	6297:29:185594:185606	3952077	0	True				
ANR	3952278	ParameterType	znode *		3952077	0					
ANR	3952279	Identifier	result		3952077	1					
ANR	3952280	Parameter	zend_ast * ast	6297:44:185609:185621	3952077	1	True				
ANR	3952281	ParameterType	zend_ast *		3952077	0					
ANR	3952282	Identifier	ast		3952077	1					
ANR	3952283	CFGEntryNode	ENTRY		3952077		True				
ANR	3952284	CFGExitNode	EXIT		3952077		True				
ANR	3952285	Symbol	zend_is_const_default_class_ref		3952077						
ANR	3952286	Symbol	zend_add_class_name_literal		3952077						
ANR	3952287	Symbol	zend_emit_op_tmp		3952077						
ANR	3952288	Symbol	opline -> op2		3952077						
ANR	3952289	Symbol	ast		3952077						
ANR	3952290	Symbol	class_node . u . constant		3952077						
ANR	3952291	Symbol	class_node		3952077						
ANR	3952292	Symbol	E_COMPILE_ERROR		3952077						
ANR	3952293	Symbol	& class_node		3952077						
ANR	3952294	Symbol	obj_node . op_type		3952077						
ANR	3952295	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		3952077						
ANR	3952296	Symbol	class_ast		3952077						
ANR	3952297	Symbol	Z_STR		3952077						
ANR	3952298	Symbol	& obj_node		3952077						
ANR	3952299	Symbol	opline -> extended_value		3952077						
ANR	3952300	Symbol	result		3952077						
ANR	3952301	Symbol	class_node . op_type		3952077						
ANR	3952302	Symbol	& class_node . u . constant		3952077						
ANR	3952303	Symbol	* ast		3952077						
ANR	3952304	Symbol	opline		3952077						
ANR	3952305	Symbol	* * ast		3952077						
ANR	3952306	Symbol	ZEND_INSTANCEOF		3952077						
ANR	3952307	Symbol	class_node . u		3952077						
ANR	3952308	Symbol	obj_node		3952077						
ANR	3952309	Symbol	& class_node . u		3952077						
ANR	3952310	Symbol	IS_CONST		3952077						
ANR	3952311	Symbol	NULL		3952077						
ANR	3952312	Symbol	CG		3952077						
ANR	3952313	Symbol	zend_resolve_class_name_ast		3952077						
ANR	3952314	Symbol	active_op_array		3952077						
ANR	3952315	Symbol	obj_ast		3952077						
ANR	3952316	Symbol	zend_compile_class_ref		3952077						
ANR	3952317	Symbol	* opline		3952077						
ANR	3952318	Symbol	opline -> op2 . constant		3952077						
ANR	3952319	Symbol	* ast -> child		3952077						
ANR	3952320	Symbol	opline -> op2_type		3952077						
ANR	3952321	Symbol	ast -> child		3952077						
ANR	3952322	Function	zend_compile_include_or_eval	6331:0:186548:186915							
ANR	3952323	FunctionDef	"zend_compile_include_or_eval (znode * result , zend_ast * ast)"		3952322	0					
ANR	3952324	CompoundStatement		6332:0:186622:186915	3952322	0					
ANR	3952325	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6333:1:186625:186659	3952322	0	True				
ANR	3952326	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3952322	0					
ANR	3952327	IdentifierDeclType	zend_ast *		3952322	0					
ANR	3952328	Identifier	expr_ast		3952322	1					
ANR	3952329	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3952322	2		=			
ANR	3952330	Identifier	expr_ast		3952322	0					
ANR	3952331	ArrayIndexing	ast -> child [ 0 ]		3952322	1					
ANR	3952332	PtrMemberAccess	ast -> child		3952322	0					
ANR	3952333	Identifier	ast		3952322	0					
ANR	3952334	Identifier	child		3952322	1					
ANR	3952335	PrimaryExpression	0		3952322	1					
ANR	3952336	IdentifierDeclStatement	znode expr_node ;	6334:1:186662:186677	3952322	1	True				
ANR	3952337	IdentifierDecl	expr_node		3952322	0					
ANR	3952338	IdentifierDeclType	znode		3952322	0					
ANR	3952339	Identifier	expr_node		3952322	1					
ANR	3952340	IdentifierDeclStatement	zend_op * opline ;	6335:1:186680:186695	3952322	2	True				
ANR	3952341	IdentifierDecl	* opline		3952322	0					
ANR	3952342	IdentifierDeclType	zend_op *		3952322	0					
ANR	3952343	Identifier	opline		3952322	1					
ANR	3952344	ExpressionStatement	zend_do_extended_fcall_begin ( )	6337:1:186699:186729	3952322	3	True				
ANR	3952345	CallExpression	zend_do_extended_fcall_begin ( )		3952322	0					
ANR	3952346	Callee	zend_do_extended_fcall_begin		3952322	0					
ANR	3952347	Identifier	zend_do_extended_fcall_begin		3952322	0					
ANR	3952348	ArgumentList			3952322	1					
ANR	3952349	ExpressionStatement	"zend_compile_expr ( & expr_node , expr_ast )"	6338:1:186732:186771	3952322	4	True				
ANR	3952350	CallExpression	"zend_compile_expr ( & expr_node , expr_ast )"		3952322	0					
ANR	3952351	Callee	zend_compile_expr		3952322	0					
ANR	3952352	Identifier	zend_compile_expr		3952322	0					
ANR	3952353	ArgumentList	& expr_node		3952322	1					
ANR	3952354	Argument	& expr_node		3952322	0					
ANR	3952355	UnaryOperationExpression	& expr_node		3952322	0					
ANR	3952356	UnaryOperator	&		3952322	0					
ANR	3952357	Identifier	expr_node		3952322	1					
ANR	3952358	Argument	expr_ast		3952322	1					
ANR	3952359	Identifier	expr_ast		3952322	0					
ANR	3952360	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_INCLUDE_OR_EVAL , & expr_node , NULL )"	6340:1:186775:186844	3952322	5	True				
ANR	3952361	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_INCLUDE_OR_EVAL , & expr_node , NULL )"		3952322	0		=			
ANR	3952362	Identifier	opline		3952322	0					
ANR	3952363	CallExpression	"zend_emit_op ( result , ZEND_INCLUDE_OR_EVAL , & expr_node , NULL )"		3952322	1					
ANR	3952364	Callee	zend_emit_op		3952322	0					
ANR	3952365	Identifier	zend_emit_op		3952322	0					
ANR	3952366	ArgumentList	result		3952322	1					
ANR	3952367	Argument	result		3952322	0					
ANR	3952368	Identifier	result		3952322	0					
ANR	3952369	Argument	ZEND_INCLUDE_OR_EVAL		3952322	1					
ANR	3952370	Identifier	ZEND_INCLUDE_OR_EVAL		3952322	0					
ANR	3952371	Argument	& expr_node		3952322	2					
ANR	3952372	UnaryOperationExpression	& expr_node		3952322	0					
ANR	3952373	UnaryOperator	&		3952322	0					
ANR	3952374	Identifier	expr_node		3952322	1					
ANR	3952375	Argument	NULL		3952322	3					
ANR	3952376	Identifier	NULL		3952322	0					
ANR	3952377	ExpressionStatement	opline -> extended_value = ast -> attr	6341:1:186847:186881	3952322	6	True				
ANR	3952378	AssignmentExpression	opline -> extended_value = ast -> attr		3952322	0		=			
ANR	3952379	PtrMemberAccess	opline -> extended_value		3952322	0					
ANR	3952380	Identifier	opline		3952322	0					
ANR	3952381	Identifier	extended_value		3952322	1					
ANR	3952382	PtrMemberAccess	ast -> attr		3952322	1					
ANR	3952383	Identifier	ast		3952322	0					
ANR	3952384	Identifier	attr		3952322	1					
ANR	3952385	ExpressionStatement	zend_do_extended_fcall_end ( )	6343:1:186885:186913	3952322	7	True				
ANR	3952386	CallExpression	zend_do_extended_fcall_end ( )		3952322	0					
ANR	3952387	Callee	zend_do_extended_fcall_end		3952322	0					
ANR	3952388	Identifier	zend_do_extended_fcall_end		3952322	0					
ANR	3952389	ArgumentList			3952322	1					
ANR	3952390	ReturnType	void		3952322	1					
ANR	3952391	Identifier	zend_compile_include_or_eval		3952322	2					
ANR	3952392	ParameterList	"znode * result , zend_ast * ast"		3952322	3					
ANR	3952393	Parameter	znode * result	6331:34:186582:186594	3952322	0	True				
ANR	3952394	ParameterType	znode *		3952322	0					
ANR	3952395	Identifier	result		3952322	1					
ANR	3952396	Parameter	zend_ast * ast	6331:49:186597:186609	3952322	1	True				
ANR	3952397	ParameterType	zend_ast *		3952322	0					
ANR	3952398	Identifier	ast		3952322	1					
ANR	3952399	CFGEntryNode	ENTRY		3952322		True				
ANR	3952400	CFGExitNode	EXIT		3952322		True				
ANR	3952401	Symbol	ast -> attr		3952322						
ANR	3952402	Symbol	ast		3952322						
ANR	3952403	Symbol	NULL		3952322						
ANR	3952404	Symbol	expr_ast		3952322						
ANR	3952405	Symbol	& expr_node		3952322						
ANR	3952406	Symbol	opline -> extended_value		3952322						
ANR	3952407	Symbol	result		3952322						
ANR	3952408	Symbol	expr_node		3952322						
ANR	3952409	Symbol	* ast		3952322						
ANR	3952410	Symbol	opline		3952322						
ANR	3952411	Symbol	* opline		3952322						
ANR	3952412	Symbol	* * ast		3952322						
ANR	3952413	Symbol	* ast -> child		3952322						
ANR	3952414	Symbol	ZEND_INCLUDE_OR_EVAL		3952322						
ANR	3952415	Symbol	ast -> child		3952322						
ANR	3952416	Symbol	zend_emit_op		3952322						
ANR	3952417	Function	zend_compile_isset_or_empty	6347:0:186928:188626							
ANR	3952418	FunctionDef	"zend_compile_isset_or_empty (znode * result , zend_ast * ast)"		3952417	0					
ANR	3952419	CompoundStatement		6348:0:187001:188626	3952417	0					
ANR	3952420	IdentifierDeclStatement	zend_ast * var_ast = ast -> child [ 0 ] ;	6349:1:187004:187037	3952417	0	True				
ANR	3952421	IdentifierDecl	* var_ast = ast -> child [ 0 ]		3952417	0					
ANR	3952422	IdentifierDeclType	zend_ast *		3952417	0					
ANR	3952423	Identifier	var_ast		3952417	1					
ANR	3952424	AssignmentExpression	* var_ast = ast -> child [ 0 ]		3952417	2		=			
ANR	3952425	Identifier	var_ast		3952417	0					
ANR	3952426	ArrayIndexing	ast -> child [ 0 ]		3952417	1					
ANR	3952427	PtrMemberAccess	ast -> child		3952417	0					
ANR	3952428	Identifier	ast		3952417	0					
ANR	3952429	Identifier	child		3952417	1					
ANR	3952430	PrimaryExpression	0		3952417	1					
ANR	3952431	IdentifierDeclStatement	znode var_node ;	6351:1:187041:187055	3952417	1	True				
ANR	3952432	IdentifierDecl	var_node		3952417	0					
ANR	3952433	IdentifierDeclType	znode		3952417	0					
ANR	3952434	Identifier	var_node		3952417	1					
ANR	3952435	IdentifierDeclStatement	zend_op * opline = NULL ;	6352:1:187058:187080	3952417	2	True				
ANR	3952436	IdentifierDecl	* opline = NULL		3952417	0					
ANR	3952437	IdentifierDeclType	zend_op *		3952417	0					
ANR	3952438	Identifier	opline		3952417	1					
ANR	3952439	AssignmentExpression	* opline = NULL		3952417	2		=			
ANR	3952440	Identifier	NULL		3952417	0					
ANR	3952441	Identifier	NULL		3952417	1					
ANR	3952442	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_ISSET || ast -> kind == ZEND_AST_EMPTY )	6354:1:187084:187155	3952417	3	True				
ANR	3952443	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_ISSET || ast -> kind == ZEND_AST_EMPTY )		3952417	0					
ANR	3952444	Callee	ZEND_ASSERT		3952417	0					
ANR	3952445	Identifier	ZEND_ASSERT		3952417	0					
ANR	3952446	ArgumentList	ast -> kind == ZEND_AST_ISSET || ast -> kind == ZEND_AST_EMPTY		3952417	1					
ANR	3952447	Argument	ast -> kind == ZEND_AST_ISSET || ast -> kind == ZEND_AST_EMPTY		3952417	0					
ANR	3952448	OrExpression	ast -> kind == ZEND_AST_ISSET || ast -> kind == ZEND_AST_EMPTY		3952417	0		||			
ANR	3952449	EqualityExpression	ast -> kind == ZEND_AST_ISSET		3952417	0		==			
ANR	3952450	PtrMemberAccess	ast -> kind		3952417	0					
ANR	3952451	Identifier	ast		3952417	0					
ANR	3952452	Identifier	kind		3952417	1					
ANR	3952453	Identifier	ZEND_AST_ISSET		3952417	1					
ANR	3952454	EqualityExpression	ast -> kind == ZEND_AST_EMPTY		3952417	1		==			
ANR	3952455	PtrMemberAccess	ast -> kind		3952417	0					
ANR	3952456	Identifier	ast		3952417	0					
ANR	3952457	Identifier	kind		3952417	1					
ANR	3952458	Identifier	ZEND_AST_EMPTY		3952417	1					
ANR	3952459	IfStatement	if ( ! zend_is_variable ( var_ast ) || zend_is_call ( var_ast ) )		3952417	4					
ANR	3952460	Condition	! zend_is_variable ( var_ast ) || zend_is_call ( var_ast )	6356:5:187163:187213	3952417	0	True				
ANR	3952461	OrExpression	! zend_is_variable ( var_ast ) || zend_is_call ( var_ast )		3952417	0		||			
ANR	3952462	UnaryOperationExpression	! zend_is_variable ( var_ast )		3952417	0					
ANR	3952463	UnaryOperator	!		3952417	0					
ANR	3952464	CallExpression	zend_is_variable ( var_ast )		3952417	1					
ANR	3952465	Callee	zend_is_variable		3952417	0					
ANR	3952466	Identifier	zend_is_variable		3952417	0					
ANR	3952467	ArgumentList	var_ast		3952417	1					
ANR	3952468	Argument	var_ast		3952417	0					
ANR	3952469	Identifier	var_ast		3952417	0					
ANR	3952470	CallExpression	zend_is_call ( var_ast )		3952417	1					
ANR	3952471	Callee	zend_is_call		3952417	0					
ANR	3952472	Identifier	zend_is_call		3952417	0					
ANR	3952473	ArgumentList	var_ast		3952417	1					
ANR	3952474	Argument	var_ast		3952417	0					
ANR	3952475	Identifier	var_ast		3952417	0					
ANR	3952476	CompoundStatement		9:58:214:214	3952417	1					
ANR	3952477	IfStatement	if ( ast -> kind == ZEND_AST_EMPTY )		3952417	0					
ANR	3952478	Condition	ast -> kind == ZEND_AST_EMPTY	6357:6:187224:187250	3952417	0	True				
ANR	3952479	EqualityExpression	ast -> kind == ZEND_AST_EMPTY		3952417	0		==			
ANR	3952480	PtrMemberAccess	ast -> kind		3952417	0					
ANR	3952481	Identifier	ast		3952417	0					
ANR	3952482	Identifier	kind		3952417	1					
ANR	3952483	Identifier	ZEND_AST_EMPTY		3952417	1					
ANR	3952484	CompoundStatement		12:3:305:386	3952417	1					
ANR	3952485	IdentifierDeclStatement	"zend_ast * not_ast = zend_ast_create_ex ( ZEND_AST_UNARY_OP , ZEND_BOOL_NOT , var_ast ) ;"	6359:3:187307:187388	3952417	0	True				
ANR	3952486	IdentifierDecl	"* not_ast = zend_ast_create_ex ( ZEND_AST_UNARY_OP , ZEND_BOOL_NOT , var_ast )"		3952417	0					
ANR	3952487	IdentifierDeclType	zend_ast *		3952417	0					
ANR	3952488	Identifier	not_ast		3952417	1					
ANR	3952489	AssignmentExpression	"* not_ast = zend_ast_create_ex ( ZEND_AST_UNARY_OP , ZEND_BOOL_NOT , var_ast )"		3952417	2		=			
ANR	3952490	Identifier	not_ast		3952417	0					
ANR	3952491	CallExpression	"zend_ast_create_ex ( ZEND_AST_UNARY_OP , ZEND_BOOL_NOT , var_ast )"		3952417	1					
ANR	3952492	Callee	zend_ast_create_ex		3952417	0					
ANR	3952493	Identifier	zend_ast_create_ex		3952417	0					
ANR	3952494	ArgumentList	ZEND_AST_UNARY_OP		3952417	1					
ANR	3952495	Argument	ZEND_AST_UNARY_OP		3952417	0					
ANR	3952496	Identifier	ZEND_AST_UNARY_OP		3952417	0					
ANR	3952497	Argument	ZEND_BOOL_NOT		3952417	1					
ANR	3952498	Identifier	ZEND_BOOL_NOT		3952417	0					
ANR	3952499	Argument	var_ast		3952417	2					
ANR	3952500	Identifier	var_ast		3952417	0					
ANR	3952501	ExpressionStatement	"zend_compile_expr ( result , not_ast )"	6360:3:187393:187427	3952417	1	True				
ANR	3952502	CallExpression	"zend_compile_expr ( result , not_ast )"		3952417	0					
ANR	3952503	Callee	zend_compile_expr		3952417	0					
ANR	3952504	Identifier	zend_compile_expr		3952417	0					
ANR	3952505	ArgumentList	result		3952417	1					
ANR	3952506	Argument	result		3952417	0					
ANR	3952507	Identifier	result		3952417	0					
ANR	3952508	Argument	not_ast		3952417	1					
ANR	3952509	Identifier	not_ast		3952417	0					
ANR	3952510	ReturnStatement	return ;	6361:3:187432:187438	3952417	2	True				
ANR	3952511	ElseStatement	else		3952417	0					
ANR	3952512	CompoundStatement		15:9:447:447	3952417	0					
ANR	3952513	Statement	zend_error_noreturn	6363:3:187454:187472	3952417	0	True				
ANR	3952514	Statement	(	6363:22:187473:187473	3952417	1	True				
ANR	3952515	Statement	E_COMPILE_ERROR	6363:23:187474:187488	3952417	2	True				
ANR	3952516	Statement	","	6363:38:187489:187489	3952417	3	True				
ANR	3952517	Statement	"""Cannot use isset() on the result of an expression """	6364:4:187495:187546	3952417	4	True				
ANR	3952518	Statement	"""(you can use \\""null !== expression\\"" instead)"""	6365:4:187552:187598	3952417	5	True				
ANR	3952519	Statement	)	6365:51:187599:187599	3952417	6	True				
ANR	3952520	ExpressionStatement		6365:52:187600:187600	3952417	7	True				
ANR	3952521	SwitchStatement	switch ( var_ast -> kind )		3952417	5					
ANR	3952522	Condition	var_ast -> kind	6369:9:187619:187631	3952417	0	True				
ANR	3952523	PtrMemberAccess	var_ast -> kind		3952417	0					
ANR	3952524	Identifier	var_ast		3952417	0					
ANR	3952525	Identifier	kind		3952417	1					
ANR	3952526	CompoundStatement		22:24:632:632	3952417	1					
ANR	3952527	Label	case ZEND_AST_VAR :	6370:2:187638:187655	3952417	0	True				
ANR	3952528	Identifier	ZEND_AST_VAR		3952417	0					
ANR	3952529	IfStatement	"if ( zend_try_compile_cv ( & var_node , var_ast ) == SUCCESS )"		3952417	1					
ANR	3952530	Condition	"zend_try_compile_cv ( & var_node , var_ast ) == SUCCESS"	6371:7:187664:187713	3952417	0	True				
ANR	3952531	EqualityExpression	"zend_try_compile_cv ( & var_node , var_ast ) == SUCCESS"		3952417	0		==			
ANR	3952532	CallExpression	"zend_try_compile_cv ( & var_node , var_ast )"		3952417	0					
ANR	3952533	Callee	zend_try_compile_cv		3952417	0					
ANR	3952534	Identifier	zend_try_compile_cv		3952417	0					
ANR	3952535	ArgumentList	& var_node		3952417	1					
ANR	3952536	Argument	& var_node		3952417	0					
ANR	3952537	UnaryOperationExpression	& var_node		3952417	0					
ANR	3952538	UnaryOperator	&		3952417	0					
ANR	3952539	Identifier	var_node		3952417	1					
ANR	3952540	Argument	var_ast		3952417	1					
ANR	3952541	Identifier	var_ast		3952417	0					
ANR	3952542	Identifier	SUCCESS		3952417	1					
ANR	3952543	CompoundStatement		24:59:714:714	3952417	1					
ANR	3952544	ExpressionStatement	"opline = zend_emit_op ( result , ZEND_ISSET_ISEMPTY_VAR , & var_node , NULL )"	6372:4:187722:187792	3952417	0	True				
ANR	3952545	AssignmentExpression	"opline = zend_emit_op ( result , ZEND_ISSET_ISEMPTY_VAR , & var_node , NULL )"		3952417	0		=			
ANR	3952546	Identifier	opline		3952417	0					
ANR	3952547	CallExpression	"zend_emit_op ( result , ZEND_ISSET_ISEMPTY_VAR , & var_node , NULL )"		3952417	1					
ANR	3952548	Callee	zend_emit_op		3952417	0					
ANR	3952549	Identifier	zend_emit_op		3952417	0					
ANR	3952550	ArgumentList	result		3952417	1					
ANR	3952551	Argument	result		3952417	0					
ANR	3952552	Identifier	result		3952417	0					
ANR	3952553	Argument	ZEND_ISSET_ISEMPTY_VAR		3952417	1					
ANR	3952554	Identifier	ZEND_ISSET_ISEMPTY_VAR		3952417	0					
ANR	3952555	Argument	& var_node		3952417	2					
ANR	3952556	UnaryOperationExpression	& var_node		3952417	0					
ANR	3952557	UnaryOperator	&		3952417	0					
ANR	3952558	Identifier	var_node		3952417	1					
ANR	3952559	Argument	NULL		3952417	3					
ANR	3952560	Identifier	NULL		3952417	0					
ANR	3952561	ExpressionStatement	opline -> extended_value = ZEND_FETCH_LOCAL | ZEND_QUICK_SET	6373:4:187798:187856	3952417	1	True				
ANR	3952562	AssignmentExpression	opline -> extended_value = ZEND_FETCH_LOCAL | ZEND_QUICK_SET		3952417	0		=			
ANR	3952563	PtrMemberAccess	opline -> extended_value		3952417	0					
ANR	3952564	Identifier	opline		3952417	0					
ANR	3952565	Identifier	extended_value		3952417	1					
ANR	3952566	InclusiveOrExpression	ZEND_FETCH_LOCAL | ZEND_QUICK_SET		3952417	1		|			
ANR	3952567	Identifier	ZEND_FETCH_LOCAL		3952417	0					
ANR	3952568	Identifier	ZEND_QUICK_SET		3952417	1					
ANR	3952569	ElseStatement	else		3952417	0					
ANR	3952570	CompoundStatement		27:10:866:866	3952417	0					
ANR	3952571	ExpressionStatement	"opline = zend_compile_simple_var_no_cv ( result , var_ast , BP_VAR_IS , 0 )"	6375:4:187874:187943	3952417	0	True				
ANR	3952572	AssignmentExpression	"opline = zend_compile_simple_var_no_cv ( result , var_ast , BP_VAR_IS , 0 )"		3952417	0		=			
ANR	3952573	Identifier	opline		3952417	0					
ANR	3952574	CallExpression	"zend_compile_simple_var_no_cv ( result , var_ast , BP_VAR_IS , 0 )"		3952417	1					
ANR	3952575	Callee	zend_compile_simple_var_no_cv		3952417	0					
ANR	3952576	Identifier	zend_compile_simple_var_no_cv		3952417	0					
ANR	3952577	ArgumentList	result		3952417	1					
ANR	3952578	Argument	result		3952417	0					
ANR	3952579	Identifier	result		3952417	0					
ANR	3952580	Argument	var_ast		3952417	1					
ANR	3952581	Identifier	var_ast		3952417	0					
ANR	3952582	Argument	BP_VAR_IS		3952417	2					
ANR	3952583	Identifier	BP_VAR_IS		3952417	0					
ANR	3952584	Argument	0		3952417	3					
ANR	3952585	PrimaryExpression	0		3952417	0					
ANR	3952586	ExpressionStatement	opline -> opcode = ZEND_ISSET_ISEMPTY_VAR	6376:4:187949:187988	3952417	1	True				
ANR	3952587	AssignmentExpression	opline -> opcode = ZEND_ISSET_ISEMPTY_VAR		3952417	0		=			
ANR	3952588	PtrMemberAccess	opline -> opcode		3952417	0					
ANR	3952589	Identifier	opline		3952417	0					
ANR	3952590	Identifier	opcode		3952417	1					
ANR	3952591	Identifier	ZEND_ISSET_ISEMPTY_VAR		3952417	1					
ANR	3952592	BreakStatement	break ;	6378:3:187998:188003	3952417	2	True				
ANR	3952593	Label	case ZEND_AST_DIM :	6379:2:188007:188024	3952417	3	True				
ANR	3952594	Identifier	ZEND_AST_DIM		3952417	0					
ANR	3952595	ExpressionStatement	"opline = zend_compile_dim_common ( result , var_ast , BP_VAR_IS )"	6380:3:188029:188089	3952417	4	True				
ANR	3952596	AssignmentExpression	"opline = zend_compile_dim_common ( result , var_ast , BP_VAR_IS )"		3952417	0		=			
ANR	3952597	Identifier	opline		3952417	0					
ANR	3952598	CallExpression	"zend_compile_dim_common ( result , var_ast , BP_VAR_IS )"		3952417	1					
ANR	3952599	Callee	zend_compile_dim_common		3952417	0					
ANR	3952600	Identifier	zend_compile_dim_common		3952417	0					
ANR	3952601	ArgumentList	result		3952417	1					
ANR	3952602	Argument	result		3952417	0					
ANR	3952603	Identifier	result		3952417	0					
ANR	3952604	Argument	var_ast		3952417	1					
ANR	3952605	Identifier	var_ast		3952417	0					
ANR	3952606	Argument	BP_VAR_IS		3952417	2					
ANR	3952607	Identifier	BP_VAR_IS		3952417	0					
ANR	3952608	ExpressionStatement	opline -> opcode = ZEND_ISSET_ISEMPTY_DIM_OBJ	6381:3:188094:188137	3952417	5	True				
ANR	3952609	AssignmentExpression	opline -> opcode = ZEND_ISSET_ISEMPTY_DIM_OBJ		3952417	0		=			
ANR	3952610	PtrMemberAccess	opline -> opcode		3952417	0					
ANR	3952611	Identifier	opline		3952417	0					
ANR	3952612	Identifier	opcode		3952417	1					
ANR	3952613	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ		3952417	1					
ANR	3952614	BreakStatement	break ;	6382:3:188142:188147	3952417	6	True				
ANR	3952615	Label	case ZEND_AST_PROP :	6383:2:188151:188169	3952417	7	True				
ANR	3952616	Identifier	ZEND_AST_PROP		3952417	0					
ANR	3952617	ExpressionStatement	"opline = zend_compile_prop_common ( result , var_ast , BP_VAR_IS )"	6384:3:188174:188235	3952417	8	True				
ANR	3952618	AssignmentExpression	"opline = zend_compile_prop_common ( result , var_ast , BP_VAR_IS )"		3952417	0		=			
ANR	3952619	Identifier	opline		3952417	0					
ANR	3952620	CallExpression	"zend_compile_prop_common ( result , var_ast , BP_VAR_IS )"		3952417	1					
ANR	3952621	Callee	zend_compile_prop_common		3952417	0					
ANR	3952622	Identifier	zend_compile_prop_common		3952417	0					
ANR	3952623	ArgumentList	result		3952417	1					
ANR	3952624	Argument	result		3952417	0					
ANR	3952625	Identifier	result		3952417	0					
ANR	3952626	Argument	var_ast		3952417	1					
ANR	3952627	Identifier	var_ast		3952417	0					
ANR	3952628	Argument	BP_VAR_IS		3952417	2					
ANR	3952629	Identifier	BP_VAR_IS		3952417	0					
ANR	3952630	ExpressionStatement	opline -> opcode = ZEND_ISSET_ISEMPTY_PROP_OBJ	6385:3:188240:188284	3952417	9	True				
ANR	3952631	AssignmentExpression	opline -> opcode = ZEND_ISSET_ISEMPTY_PROP_OBJ		3952417	0		=			
ANR	3952632	PtrMemberAccess	opline -> opcode		3952417	0					
ANR	3952633	Identifier	opline		3952417	0					
ANR	3952634	Identifier	opcode		3952417	1					
ANR	3952635	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ		3952417	1					
ANR	3952636	BreakStatement	break ;	6386:3:188289:188294	3952417	10	True				
ANR	3952637	Label	case ZEND_AST_STATIC_PROP :	6387:2:188298:188323	3952417	11	True				
ANR	3952638	Identifier	ZEND_AST_STATIC_PROP		3952417	0					
ANR	3952639	ExpressionStatement	"opline = zend_compile_static_prop_common ( result , var_ast , BP_VAR_IS , 0 )"	6388:3:188328:188399	3952417	12	True				
ANR	3952640	AssignmentExpression	"opline = zend_compile_static_prop_common ( result , var_ast , BP_VAR_IS , 0 )"		3952417	0		=			
ANR	3952641	Identifier	opline		3952417	0					
ANR	3952642	CallExpression	"zend_compile_static_prop_common ( result , var_ast , BP_VAR_IS , 0 )"		3952417	1					
ANR	3952643	Callee	zend_compile_static_prop_common		3952417	0					
ANR	3952644	Identifier	zend_compile_static_prop_common		3952417	0					
ANR	3952645	ArgumentList	result		3952417	1					
ANR	3952646	Argument	result		3952417	0					
ANR	3952647	Identifier	result		3952417	0					
ANR	3952648	Argument	var_ast		3952417	1					
ANR	3952649	Identifier	var_ast		3952417	0					
ANR	3952650	Argument	BP_VAR_IS		3952417	2					
ANR	3952651	Identifier	BP_VAR_IS		3952417	0					
ANR	3952652	Argument	0		3952417	3					
ANR	3952653	PrimaryExpression	0		3952417	0					
ANR	3952654	ExpressionStatement	opline -> opcode = ZEND_ISSET_ISEMPTY_VAR	6389:3:188404:188443	3952417	13	True				
ANR	3952655	AssignmentExpression	opline -> opcode = ZEND_ISSET_ISEMPTY_VAR		3952417	0		=			
ANR	3952656	PtrMemberAccess	opline -> opcode		3952417	0					
ANR	3952657	Identifier	opline		3952417	0					
ANR	3952658	Identifier	opcode		3952417	1					
ANR	3952659	Identifier	ZEND_ISSET_ISEMPTY_VAR		3952417	1					
ANR	3952660	BreakStatement	break ;	6390:3:188448:188453	3952417	14	True				
ANR	3952661	Statement	EMPTY_SWITCH_DEFAULT_CASE	6391:2:188457:188481	3952417	15	True				
ANR	3952662	Statement	(	6391:27:188482:188482	3952417	16	True				
ANR	3952663	Statement	)	6391:28:188483:188483	3952417	17	True				
ANR	3952664	ExpressionStatement	result -> op_type = opline -> result_type = IS_TMP_VAR	6394:1:188490:188540	3952417	6	True				
ANR	3952665	AssignmentExpression	result -> op_type = opline -> result_type = IS_TMP_VAR		3952417	0		=			
ANR	3952666	PtrMemberAccess	result -> op_type		3952417	0					
ANR	3952667	Identifier	result		3952417	0					
ANR	3952668	Identifier	op_type		3952417	1					
ANR	3952669	AssignmentExpression	opline -> result_type = IS_TMP_VAR		3952417	1		=			
ANR	3952670	PtrMemberAccess	opline -> result_type		3952417	0					
ANR	3952671	Identifier	opline		3952417	0					
ANR	3952672	Identifier	result_type		3952417	1					
ANR	3952673	Identifier	IS_TMP_VAR		3952417	1					
ANR	3952674	ExpressionStatement	opline -> extended_value |= ast -> kind == ZEND_AST_ISSET ? ZEND_ISSET : ZEND_ISEMPTY	6395:1:188543:188624	3952417	7	True				
ANR	3952675	AssignmentExpression	opline -> extended_value |= ast -> kind == ZEND_AST_ISSET ? ZEND_ISSET : ZEND_ISEMPTY		3952417	0		|=			
ANR	3952676	PtrMemberAccess	opline -> extended_value		3952417	0					
ANR	3952677	Identifier	opline		3952417	0					
ANR	3952678	Identifier	extended_value		3952417	1					
ANR	3952679	ConditionalExpression	ast -> kind == ZEND_AST_ISSET ? ZEND_ISSET : ZEND_ISEMPTY		3952417	1					
ANR	3952680	Condition	ast -> kind == ZEND_AST_ISSET		3952417	0					
ANR	3952681	EqualityExpression	ast -> kind == ZEND_AST_ISSET		3952417	0		==			
ANR	3952682	PtrMemberAccess	ast -> kind		3952417	0					
ANR	3952683	Identifier	ast		3952417	0					
ANR	3952684	Identifier	kind		3952417	1					
ANR	3952685	Identifier	ZEND_AST_ISSET		3952417	1					
ANR	3952686	Identifier	ZEND_ISSET		3952417	1					
ANR	3952687	Identifier	ZEND_ISEMPTY		3952417	2					
ANR	3952688	ReturnType	void		3952417	1					
ANR	3952689	Identifier	zend_compile_isset_or_empty		3952417	2					
ANR	3952690	ParameterList	"znode * result , zend_ast * ast"		3952417	3					
ANR	3952691	Parameter	znode * result	6347:33:186961:186973	3952417	0	True				
ANR	3952692	ParameterType	znode *		3952417	0					
ANR	3952693	Identifier	result		3952417	1					
ANR	3952694	Parameter	zend_ast * ast	6347:48:186976:186988	3952417	1	True				
ANR	3952695	ParameterType	zend_ast *		3952417	0					
ANR	3952696	Identifier	ast		3952417	1					
ANR	3952697	CFGEntryNode	ENTRY		3952417		True				
ANR	3952698	CFGExitNode	EXIT		3952417		True				
ANR	3952699	Symbol	zend_ast_create_ex		3952417						
ANR	3952700	Symbol	ZEND_AST_UNARY_OP		3952417						
ANR	3952701	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ		3952417						
ANR	3952702	Symbol	ZEND_AST_ISSET		3952417						
ANR	3952703	Symbol	ast -> kind		3952417						
ANR	3952704	Symbol	ast		3952417						
ANR	3952705	Symbol	ZEND_ISEMPTY		3952417						
ANR	3952706	Symbol	* var_ast		3952417						
ANR	3952707	Symbol	result -> op_type		3952417						
ANR	3952708	Symbol	opline -> extended_value		3952417						
ANR	3952709	Symbol	zend_compile_simple_var_no_cv		3952417						
ANR	3952710	Symbol	result		3952417						
ANR	3952711	Symbol	* ast		3952417						
ANR	3952712	Symbol	opline		3952417						
ANR	3952713	Symbol	var_ast -> kind		3952417						
ANR	3952714	Symbol	* result		3952417						
ANR	3952715	Symbol	* * ast		3952417						
ANR	3952716	Symbol	ZEND_AST_EMPTY		3952417						
ANR	3952717	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ		3952417						
ANR	3952718	Symbol	ZEND_ISSET_ISEMPTY_VAR		3952417						
ANR	3952719	Symbol	BP_VAR_IS		3952417						
ANR	3952720	Symbol	IS_TMP_VAR		3952417						
ANR	3952721	Symbol	opline -> result_type		3952417						
ANR	3952722	Symbol	zend_is_variable		3952417						
ANR	3952723	Symbol	NULL		3952417						
ANR	3952724	Symbol	SUCCESS		3952417						
ANR	3952725	Symbol	var_node		3952417						
ANR	3952726	Symbol	zend_is_call		3952417						
ANR	3952727	Symbol	& var_node		3952417						
ANR	3952728	Symbol	ZEND_FETCH_LOCAL		3952417						
ANR	3952729	Symbol	ZEND_QUICK_SET		3952417						
ANR	3952730	Symbol	zend_compile_dim_common		3952417						
ANR	3952731	Symbol	zend_try_compile_cv		3952417						
ANR	3952732	Symbol	not_ast		3952417						
ANR	3952733	Symbol	zend_compile_prop_common		3952417						
ANR	3952734	Symbol	zend_compile_static_prop_common		3952417						
ANR	3952735	Symbol	var_ast		3952417						
ANR	3952736	Symbol	* opline		3952417						
ANR	3952737	Symbol	ZEND_ISSET		3952417						
ANR	3952738	Symbol	opline -> opcode		3952417						
ANR	3952739	Symbol	ZEND_BOOL_NOT		3952417						
ANR	3952740	Symbol	* ast -> child		3952417						
ANR	3952741	Symbol	ast -> child		3952417						
ANR	3952742	Symbol	zend_emit_op		3952417						
ANR	3952743	Function	zend_compile_silence	6399:0:188639:189702							
ANR	3952744	FunctionDef	"zend_compile_silence (znode * result , zend_ast * ast)"		3952743	0					
ANR	3952745	CompoundStatement		6400:0:188705:189702	3952743	0					
ANR	3952746	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6401:1:188708:188742	3952743	0	True				
ANR	3952747	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3952743	0					
ANR	3952748	IdentifierDeclType	zend_ast *		3952743	0					
ANR	3952749	Identifier	expr_ast		3952743	1					
ANR	3952750	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3952743	2		=			
ANR	3952751	Identifier	expr_ast		3952743	0					
ANR	3952752	ArrayIndexing	ast -> child [ 0 ]		3952743	1					
ANR	3952753	PtrMemberAccess	ast -> child		3952743	0					
ANR	3952754	Identifier	ast		3952743	0					
ANR	3952755	Identifier	child		3952743	1					
ANR	3952756	PrimaryExpression	0		3952743	1					
ANR	3952757	IdentifierDeclStatement	znode silence_node ;	6402:1:188745:188763	3952743	1	True				
ANR	3952758	IdentifierDecl	silence_node		3952743	0					
ANR	3952759	IdentifierDeclType	znode		3952743	0					
ANR	3952760	Identifier	silence_node		3952743	1					
ANR	3952761	IdentifierDeclStatement	"uint32_t begin_opline_num , end_opline_num ;"	6403:1:188766:188807	3952743	2	True				
ANR	3952762	IdentifierDecl	begin_opline_num		3952743	0					
ANR	3952763	IdentifierDeclType	uint32_t		3952743	0					
ANR	3952764	Identifier	begin_opline_num		3952743	1					
ANR	3952765	IdentifierDecl	end_opline_num		3952743	1					
ANR	3952766	IdentifierDeclType	uint32_t		3952743	0					
ANR	3952767	Identifier	end_opline_num		3952743	1					
ANR	3952768	IdentifierDeclStatement	zend_brk_cont_element * brk_cont_element ;	6404:1:188810:188849	3952743	3	True				
ANR	3952769	IdentifierDecl	* brk_cont_element		3952743	0					
ANR	3952770	IdentifierDeclType	zend_brk_cont_element *		3952743	0					
ANR	3952771	Identifier	brk_cont_element		3952743	1					
ANR	3952772	ExpressionStatement	begin_opline_num = get_next_op_number ( CG ( active_op_array ) )	6406:1:188853:188911	3952743	4	True				
ANR	3952773	AssignmentExpression	begin_opline_num = get_next_op_number ( CG ( active_op_array ) )		3952743	0		=			
ANR	3952774	Identifier	begin_opline_num		3952743	0					
ANR	3952775	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3952743	1					
ANR	3952776	Callee	get_next_op_number		3952743	0					
ANR	3952777	Identifier	get_next_op_number		3952743	0					
ANR	3952778	ArgumentList	CG ( active_op_array )		3952743	1					
ANR	3952779	Argument	CG ( active_op_array )		3952743	0					
ANR	3952780	CallExpression	CG ( active_op_array )		3952743	0					
ANR	3952781	Callee	CG		3952743	0					
ANR	3952782	Identifier	CG		3952743	0					
ANR	3952783	ArgumentList	active_op_array		3952743	1					
ANR	3952784	Argument	active_op_array		3952743	0					
ANR	3952785	Identifier	active_op_array		3952743	0					
ANR	3952786	ExpressionStatement	"zend_emit_op_tmp ( & silence_node , ZEND_BEGIN_SILENCE , NULL , NULL )"	6407:1:188914:188977	3952743	5	True				
ANR	3952787	CallExpression	"zend_emit_op_tmp ( & silence_node , ZEND_BEGIN_SILENCE , NULL , NULL )"		3952743	0					
ANR	3952788	Callee	zend_emit_op_tmp		3952743	0					
ANR	3952789	Identifier	zend_emit_op_tmp		3952743	0					
ANR	3952790	ArgumentList	& silence_node		3952743	1					
ANR	3952791	Argument	& silence_node		3952743	0					
ANR	3952792	UnaryOperationExpression	& silence_node		3952743	0					
ANR	3952793	UnaryOperator	&		3952743	0					
ANR	3952794	Identifier	silence_node		3952743	1					
ANR	3952795	Argument	ZEND_BEGIN_SILENCE		3952743	1					
ANR	3952796	Identifier	ZEND_BEGIN_SILENCE		3952743	0					
ANR	3952797	Argument	NULL		3952743	2					
ANR	3952798	Identifier	NULL		3952743	0					
ANR	3952799	Argument	NULL		3952743	3					
ANR	3952800	Identifier	NULL		3952743	0					
ANR	3952801	IfStatement	if ( expr_ast -> kind == ZEND_AST_VAR )		3952743	6					
ANR	3952802	Condition	expr_ast -> kind == ZEND_AST_VAR	6409:5:188985:189014	3952743	0	True				
ANR	3952803	EqualityExpression	expr_ast -> kind == ZEND_AST_VAR		3952743	0		==			
ANR	3952804	PtrMemberAccess	expr_ast -> kind		3952743	0					
ANR	3952805	Identifier	expr_ast		3952743	0					
ANR	3952806	Identifier	kind		3952743	1					
ANR	3952807	Identifier	ZEND_AST_VAR		3952743	1					
ANR	3952808	CompoundStatement		10:37:311:311	3952743	1					
ANR	3952809	ExpressionStatement	"zend_compile_simple_var_no_cv ( result , expr_ast , BP_VAR_R , 0 )"	6412:2:189148:189209	3952743	0	True				
ANR	3952810	CallExpression	"zend_compile_simple_var_no_cv ( result , expr_ast , BP_VAR_R , 0 )"		3952743	0					
ANR	3952811	Callee	zend_compile_simple_var_no_cv		3952743	0					
ANR	3952812	Identifier	zend_compile_simple_var_no_cv		3952743	0					
ANR	3952813	ArgumentList	result		3952743	1					
ANR	3952814	Argument	result		3952743	0					
ANR	3952815	Identifier	result		3952743	0					
ANR	3952816	Argument	expr_ast		3952743	1					
ANR	3952817	Identifier	expr_ast		3952743	0					
ANR	3952818	Argument	BP_VAR_R		3952743	2					
ANR	3952819	Identifier	BP_VAR_R		3952743	0					
ANR	3952820	Argument	0		3952743	3					
ANR	3952821	PrimaryExpression	0		3952743	0					
ANR	3952822	ElseStatement	else		3952743	0					
ANR	3952823	CompoundStatement		14:8:513:513	3952743	0					
ANR	3952824	ExpressionStatement	"zend_compile_expr ( result , expr_ast )"	6414:2:189223:189258	3952743	0	True				
ANR	3952825	CallExpression	"zend_compile_expr ( result , expr_ast )"		3952743	0					
ANR	3952826	Callee	zend_compile_expr		3952743	0					
ANR	3952827	Identifier	zend_compile_expr		3952743	0					
ANR	3952828	ArgumentList	result		3952743	1					
ANR	3952829	Argument	result		3952743	0					
ANR	3952830	Identifier	result		3952743	0					
ANR	3952831	Argument	expr_ast		3952743	1					
ANR	3952832	Identifier	expr_ast		3952743	0					
ANR	3952833	ExpressionStatement	end_opline_num = get_next_op_number ( CG ( active_op_array ) )	6417:1:189265:189321	3952743	7	True				
ANR	3952834	AssignmentExpression	end_opline_num = get_next_op_number ( CG ( active_op_array ) )		3952743	0		=			
ANR	3952835	Identifier	end_opline_num		3952743	0					
ANR	3952836	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3952743	1					
ANR	3952837	Callee	get_next_op_number		3952743	0					
ANR	3952838	Identifier	get_next_op_number		3952743	0					
ANR	3952839	ArgumentList	CG ( active_op_array )		3952743	1					
ANR	3952840	Argument	CG ( active_op_array )		3952743	0					
ANR	3952841	CallExpression	CG ( active_op_array )		3952743	0					
ANR	3952842	Callee	CG		3952743	0					
ANR	3952843	Identifier	CG		3952743	0					
ANR	3952844	ArgumentList	active_op_array		3952743	1					
ANR	3952845	Argument	active_op_array		3952743	0					
ANR	3952846	Identifier	active_op_array		3952743	0					
ANR	3952847	ExpressionStatement	"zend_emit_op ( NULL , ZEND_END_SILENCE , & silence_node , NULL )"	6418:1:189324:189381	3952743	8	True				
ANR	3952848	CallExpression	"zend_emit_op ( NULL , ZEND_END_SILENCE , & silence_node , NULL )"		3952743	0					
ANR	3952849	Callee	zend_emit_op		3952743	0					
ANR	3952850	Identifier	zend_emit_op		3952743	0					
ANR	3952851	ArgumentList	NULL		3952743	1					
ANR	3952852	Argument	NULL		3952743	0					
ANR	3952853	Identifier	NULL		3952743	0					
ANR	3952854	Argument	ZEND_END_SILENCE		3952743	1					
ANR	3952855	Identifier	ZEND_END_SILENCE		3952743	0					
ANR	3952856	Argument	& silence_node		3952743	2					
ANR	3952857	UnaryOperationExpression	& silence_node		3952743	0					
ANR	3952858	UnaryOperator	&		3952743	0					
ANR	3952859	Identifier	silence_node		3952743	1					
ANR	3952860	Argument	NULL		3952743	3					
ANR	3952861	Identifier	NULL		3952743	0					
ANR	3952862	ExpressionStatement	brk_cont_element = get_next_brk_cont_element ( CG ( active_op_array ) )	6422:1:189492:189557	3952743	9	True				
ANR	3952863	AssignmentExpression	brk_cont_element = get_next_brk_cont_element ( CG ( active_op_array ) )		3952743	0		=			
ANR	3952864	Identifier	brk_cont_element		3952743	0					
ANR	3952865	CallExpression	get_next_brk_cont_element ( CG ( active_op_array ) )		3952743	1					
ANR	3952866	Callee	get_next_brk_cont_element		3952743	0					
ANR	3952867	Identifier	get_next_brk_cont_element		3952743	0					
ANR	3952868	ArgumentList	CG ( active_op_array )		3952743	1					
ANR	3952869	Argument	CG ( active_op_array )		3952743	0					
ANR	3952870	CallExpression	CG ( active_op_array )		3952743	0					
ANR	3952871	Callee	CG		3952743	0					
ANR	3952872	Identifier	CG		3952743	0					
ANR	3952873	ArgumentList	active_op_array		3952743	1					
ANR	3952874	Argument	active_op_array		3952743	0					
ANR	3952875	Identifier	active_op_array		3952743	0					
ANR	3952876	ExpressionStatement	brk_cont_element -> start = begin_opline_num	6423:1:189560:189602	3952743	10	True				
ANR	3952877	AssignmentExpression	brk_cont_element -> start = begin_opline_num		3952743	0		=			
ANR	3952878	PtrMemberAccess	brk_cont_element -> start		3952743	0					
ANR	3952879	Identifier	brk_cont_element		3952743	0					
ANR	3952880	Identifier	start		3952743	1					
ANR	3952881	Identifier	begin_opline_num		3952743	1					
ANR	3952882	ExpressionStatement	brk_cont_element -> cont = brk_cont_element -> brk = end_opline_num	6424:1:189605:189668	3952743	11	True				
ANR	3952883	AssignmentExpression	brk_cont_element -> cont = brk_cont_element -> brk = end_opline_num		3952743	0		=			
ANR	3952884	PtrMemberAccess	brk_cont_element -> cont		3952743	0					
ANR	3952885	Identifier	brk_cont_element		3952743	0					
ANR	3952886	Identifier	cont		3952743	1					
ANR	3952887	AssignmentExpression	brk_cont_element -> brk = end_opline_num		3952743	1		=			
ANR	3952888	PtrMemberAccess	brk_cont_element -> brk		3952743	0					
ANR	3952889	Identifier	brk_cont_element		3952743	0					
ANR	3952890	Identifier	brk		3952743	1					
ANR	3952891	Identifier	end_opline_num		3952743	1					
ANR	3952892	ExpressionStatement	brk_cont_element -> parent = - 1	6425:1:189671:189700	3952743	12	True				
ANR	3952893	AssignmentExpression	brk_cont_element -> parent = - 1		3952743	0		=			
ANR	3952894	PtrMemberAccess	brk_cont_element -> parent		3952743	0					
ANR	3952895	Identifier	brk_cont_element		3952743	0					
ANR	3952896	Identifier	parent		3952743	1					
ANR	3952897	UnaryOperationExpression	- 1		3952743	1					
ANR	3952898	UnaryOperator	-		3952743	0					
ANR	3952899	PrimaryExpression	1		3952743	1					
ANR	3952900	ReturnType	void		3952743	1					
ANR	3952901	Identifier	zend_compile_silence		3952743	2					
ANR	3952902	ParameterList	"znode * result , zend_ast * ast"		3952743	3					
ANR	3952903	Parameter	znode * result	6399:26:188665:188677	3952743	0	True				
ANR	3952904	ParameterType	znode *		3952743	0					
ANR	3952905	Identifier	result		3952743	1					
ANR	3952906	Parameter	zend_ast * ast	6399:41:188680:188692	3952743	1	True				
ANR	3952907	ParameterType	zend_ast *		3952743	0					
ANR	3952908	Identifier	ast		3952743	1					
ANR	3952909	CFGEntryNode	ENTRY		3952743		True				
ANR	3952910	CFGExitNode	EXIT		3952743		True				
ANR	3952911	Symbol	* expr_ast		3952743						
ANR	3952912	Symbol	expr_ast -> kind		3952743						
ANR	3952913	Symbol	brk_cont_element -> cont		3952743						
ANR	3952914	Symbol	ast		3952743						
ANR	3952915	Symbol	silence_node		3952743						
ANR	3952916	Symbol	begin_opline_num		3952743						
ANR	3952917	Symbol	get_next_brk_cont_element		3952743						
ANR	3952918	Symbol	result		3952743						
ANR	3952919	Symbol	* ast		3952743						
ANR	3952920	Symbol	ZEND_AST_VAR		3952743						
ANR	3952921	Symbol	* * ast		3952743						
ANR	3952922	Symbol	BP_VAR_R		3952743						
ANR	3952923	Symbol	ZEND_END_SILENCE		3952743						
ANR	3952924	Symbol	* brk_cont_element		3952743						
ANR	3952925	Symbol	NULL		3952743						
ANR	3952926	Symbol	CG		3952743						
ANR	3952927	Symbol	active_op_array		3952743						
ANR	3952928	Symbol	expr_ast		3952743						
ANR	3952929	Symbol	brk_cont_element		3952743						
ANR	3952930	Symbol	brk_cont_element -> start		3952743						
ANR	3952931	Symbol	& silence_node		3952743						
ANR	3952932	Symbol	end_opline_num		3952743						
ANR	3952933	Symbol	brk_cont_element -> parent		3952743						
ANR	3952934	Symbol	brk_cont_element -> brk		3952743						
ANR	3952935	Symbol	* ast -> child		3952743						
ANR	3952936	Symbol	ast -> child		3952743						
ANR	3952937	Symbol	get_next_op_number		3952743						
ANR	3952938	Symbol	ZEND_BEGIN_SILENCE		3952743						
ANR	3952939	Function	zend_compile_shell_exec	6429:0:189715:190161							
ANR	3952940	FunctionDef	"zend_compile_shell_exec (znode * result , zend_ast * ast)"		3952939	0					
ANR	3952941	CompoundStatement		6430:0:189784:190161	3952939	0					
ANR	3952942	IdentifierDeclStatement	zend_ast * expr_ast = ast -> child [ 0 ] ;	6431:1:189787:189821	3952939	0	True				
ANR	3952943	IdentifierDecl	* expr_ast = ast -> child [ 0 ]		3952939	0					
ANR	3952944	IdentifierDeclType	zend_ast *		3952939	0					
ANR	3952945	Identifier	expr_ast		3952939	1					
ANR	3952946	AssignmentExpression	* expr_ast = ast -> child [ 0 ]		3952939	2		=			
ANR	3952947	Identifier	expr_ast		3952939	0					
ANR	3952948	ArrayIndexing	ast -> child [ 0 ]		3952939	1					
ANR	3952949	PtrMemberAccess	ast -> child		3952939	0					
ANR	3952950	Identifier	ast		3952939	0					
ANR	3952951	Identifier	child		3952939	1					
ANR	3952952	PrimaryExpression	0		3952939	1					
ANR	3952953	IdentifierDeclStatement	zval fn_name ;	6433:1:189825:189837	3952939	1	True				
ANR	3952954	IdentifierDecl	fn_name		3952939	0					
ANR	3952955	IdentifierDeclType	zval		3952939	0					
ANR	3952956	Identifier	fn_name		3952939	1					
ANR	3952957	IdentifierDeclStatement	"zend_ast * name_ast , * args_ast , * call_ast ;"	6434:1:189840:189880	3952939	2	True				
ANR	3952958	IdentifierDecl	* name_ast		3952939	0					
ANR	3952959	IdentifierDeclType	zend_ast *		3952939	0					
ANR	3952960	Identifier	name_ast		3952939	1					
ANR	3952961	IdentifierDecl	* args_ast		3952939	1					
ANR	3952962	IdentifierDeclType	zend_ast *		3952939	0					
ANR	3952963	Identifier	args_ast		3952939	1					
ANR	3952964	IdentifierDecl	* call_ast		3952939	2					
ANR	3952965	IdentifierDeclType	zend_ast *		3952939	0					
ANR	3952966	Identifier	call_ast		3952939	1					
ANR	3952967	ExpressionStatement	"ZVAL_STRING ( & fn_name , ""shell_exec"" )"	6436:1:189884:189919	3952939	3	True				
ANR	3952968	CallExpression	"ZVAL_STRING ( & fn_name , ""shell_exec"" )"		3952939	0					
ANR	3952969	Callee	ZVAL_STRING		3952939	0					
ANR	3952970	Identifier	ZVAL_STRING		3952939	0					
ANR	3952971	ArgumentList	& fn_name		3952939	1					
ANR	3952972	Argument	& fn_name		3952939	0					
ANR	3952973	UnaryOperationExpression	& fn_name		3952939	0					
ANR	3952974	UnaryOperator	&		3952939	0					
ANR	3952975	Identifier	fn_name		3952939	1					
ANR	3952976	Argument	"""shell_exec"""		3952939	1					
ANR	3952977	PrimaryExpression	"""shell_exec"""		3952939	0					
ANR	3952978	ExpressionStatement	name_ast = zend_ast_create_zval ( & fn_name )	6437:1:189922:189963	3952939	4	True				
ANR	3952979	AssignmentExpression	name_ast = zend_ast_create_zval ( & fn_name )		3952939	0		=			
ANR	3952980	Identifier	name_ast		3952939	0					
ANR	3952981	CallExpression	zend_ast_create_zval ( & fn_name )		3952939	1					
ANR	3952982	Callee	zend_ast_create_zval		3952939	0					
ANR	3952983	Identifier	zend_ast_create_zval		3952939	0					
ANR	3952984	ArgumentList	& fn_name		3952939	1					
ANR	3952985	Argument	& fn_name		3952939	0					
ANR	3952986	UnaryOperationExpression	& fn_name		3952939	0					
ANR	3952987	UnaryOperator	&		3952939	0					
ANR	3952988	Identifier	fn_name		3952939	1					
ANR	3952989	ExpressionStatement	"args_ast = zend_ast_create_list ( 1 , ZEND_AST_ARG_LIST , expr_ast )"	6438:1:189966:190029	3952939	5	True				
ANR	3952990	AssignmentExpression	"args_ast = zend_ast_create_list ( 1 , ZEND_AST_ARG_LIST , expr_ast )"		3952939	0		=			
ANR	3952991	Identifier	args_ast		3952939	0					
ANR	3952992	CallExpression	"zend_ast_create_list ( 1 , ZEND_AST_ARG_LIST , expr_ast )"		3952939	1					
ANR	3952993	Callee	zend_ast_create_list		3952939	0					
ANR	3952994	Identifier	zend_ast_create_list		3952939	0					
ANR	3952995	ArgumentList	1		3952939	1					
ANR	3952996	Argument	1		3952939	0					
ANR	3952997	PrimaryExpression	1		3952939	0					
ANR	3952998	Argument	ZEND_AST_ARG_LIST		3952939	1					
ANR	3952999	Identifier	ZEND_AST_ARG_LIST		3952939	0					
ANR	3953000	Argument	expr_ast		3952939	2					
ANR	3953001	Identifier	expr_ast		3952939	0					
ANR	3953002	ExpressionStatement	"call_ast = zend_ast_create ( ZEND_AST_CALL , name_ast , args_ast )"	6439:1:190032:190093	3952939	6	True				
ANR	3953003	AssignmentExpression	"call_ast = zend_ast_create ( ZEND_AST_CALL , name_ast , args_ast )"		3952939	0		=			
ANR	3953004	Identifier	call_ast		3952939	0					
ANR	3953005	CallExpression	"zend_ast_create ( ZEND_AST_CALL , name_ast , args_ast )"		3952939	1					
ANR	3953006	Callee	zend_ast_create		3952939	0					
ANR	3953007	Identifier	zend_ast_create		3952939	0					
ANR	3953008	ArgumentList	ZEND_AST_CALL		3952939	1					
ANR	3953009	Argument	ZEND_AST_CALL		3952939	0					
ANR	3953010	Identifier	ZEND_AST_CALL		3952939	0					
ANR	3953011	Argument	name_ast		3952939	1					
ANR	3953012	Identifier	name_ast		3952939	0					
ANR	3953013	Argument	args_ast		3952939	2					
ANR	3953014	Identifier	args_ast		3952939	0					
ANR	3953015	ExpressionStatement	"zend_compile_expr ( result , call_ast )"	6441:1:190097:190132	3952939	7	True				
ANR	3953016	CallExpression	"zend_compile_expr ( result , call_ast )"		3952939	0					
ANR	3953017	Callee	zend_compile_expr		3952939	0					
ANR	3953018	Identifier	zend_compile_expr		3952939	0					
ANR	3953019	ArgumentList	result		3952939	1					
ANR	3953020	Argument	result		3952939	0					
ANR	3953021	Identifier	result		3952939	0					
ANR	3953022	Argument	call_ast		3952939	1					
ANR	3953023	Identifier	call_ast		3952939	0					
ANR	3953024	ExpressionStatement	zval_ptr_dtor ( & fn_name )	6443:1:190136:190159	3952939	8	True				
ANR	3953025	CallExpression	zval_ptr_dtor ( & fn_name )		3952939	0					
ANR	3953026	Callee	zval_ptr_dtor		3952939	0					
ANR	3953027	Identifier	zval_ptr_dtor		3952939	0					
ANR	3953028	ArgumentList	& fn_name		3952939	1					
ANR	3953029	Argument	& fn_name		3952939	0					
ANR	3953030	UnaryOperationExpression	& fn_name		3952939	0					
ANR	3953031	UnaryOperator	&		3952939	0					
ANR	3953032	Identifier	fn_name		3952939	1					
ANR	3953033	ReturnType	void		3952939	1					
ANR	3953034	Identifier	zend_compile_shell_exec		3952939	2					
ANR	3953035	ParameterList	"znode * result , zend_ast * ast"		3952939	3					
ANR	3953036	Parameter	znode * result	6429:29:189744:189756	3952939	0	True				
ANR	3953037	ParameterType	znode *		3952939	0					
ANR	3953038	Identifier	result		3952939	1					
ANR	3953039	Parameter	zend_ast * ast	6429:44:189759:189771	3952939	1	True				
ANR	3953040	ParameterType	zend_ast *		3952939	0					
ANR	3953041	Identifier	ast		3952939	1					
ANR	3953042	CFGEntryNode	ENTRY		3952939		True				
ANR	3953043	CFGExitNode	EXIT		3952939		True				
ANR	3953044	Symbol	ast		3952939						
ANR	3953045	Symbol	zend_ast_create_list		3952939						
ANR	3953046	Symbol	& fn_name		3952939						
ANR	3953047	Symbol	zend_ast_create_zval		3952939						
ANR	3953048	Symbol	zend_ast_create		3952939						
ANR	3953049	Symbol	expr_ast		3952939						
ANR	3953050	Symbol	result		3952939						
ANR	3953051	Symbol	* ast		3952939						
ANR	3953052	Symbol	ZEND_AST_CALL		3952939						
ANR	3953053	Symbol	* * ast		3952939						
ANR	3953054	Symbol	name_ast		3952939						
ANR	3953055	Symbol	* ast -> child		3952939						
ANR	3953056	Symbol	call_ast		3952939						
ANR	3953057	Symbol	ast -> child		3952939						
ANR	3953058	Symbol	fn_name		3952939						
ANR	3953059	Symbol	args_ast		3952939						
ANR	3953060	Symbol	ZEND_AST_ARG_LIST		3952939						
ANR	3953061	Function	zend_compile_array	6447:0:190174:191880							
ANR	3953062	FunctionDef	"zend_compile_array (znode * result , zend_ast * ast)"		3953061	0					
ANR	3953063	CompoundStatement		6448:0:190238:191880	3953061	0					
ANR	3953064	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	6449:1:190241:190285	3953061	0	True				
ANR	3953065	IdentifierDecl	* list = zend_ast_get_list ( ast )		3953061	0					
ANR	3953066	IdentifierDeclType	zend_ast_list *		3953061	0					
ANR	3953067	Identifier	list		3953061	1					
ANR	3953068	AssignmentExpression	* list = zend_ast_get_list ( ast )		3953061	2		=			
ANR	3953069	Identifier	list		3953061	0					
ANR	3953070	CallExpression	zend_ast_get_list ( ast )		3953061	1					
ANR	3953071	Callee	zend_ast_get_list		3953061	0					
ANR	3953072	Identifier	zend_ast_get_list		3953061	0					
ANR	3953073	ArgumentList	ast		3953061	1					
ANR	3953074	Argument	ast		3953061	0					
ANR	3953075	Identifier	ast		3953061	0					
ANR	3953076	IdentifierDeclStatement	zend_op * opline ;	6450:1:190288:190303	3953061	1	True				
ANR	3953077	IdentifierDecl	* opline		3953061	0					
ANR	3953078	IdentifierDeclType	zend_op *		3953061	0					
ANR	3953079	Identifier	opline		3953061	1					
ANR	3953080	IdentifierDeclStatement	"uint32_t i , opnum_init = - 1 ;"	6451:1:190306:190333	3953061	2	True				
ANR	3953081	IdentifierDecl	i		3953061	0					
ANR	3953082	IdentifierDeclType	uint32_t		3953061	0					
ANR	3953083	Identifier	i		3953061	1					
ANR	3953084	IdentifierDecl	opnum_init = - 1		3953061	1					
ANR	3953085	IdentifierDeclType	uint32_t		3953061	0					
ANR	3953086	Identifier	opnum_init		3953061	1					
ANR	3953087	AssignmentExpression	opnum_init = - 1		3953061	2		=			
ANR	3953088	Identifier	opnum_init		3953061	0					
ANR	3953089	UnaryOperationExpression	- 1		3953061	1					
ANR	3953090	UnaryOperator	-		3953061	0					
ANR	3953091	PrimaryExpression	1		3953061	1					
ANR	3953092	IdentifierDeclStatement	zend_bool packed = 1 ;	6452:1:190336:190356	3953061	3	True				
ANR	3953093	IdentifierDecl	packed = 1		3953061	0					
ANR	3953094	IdentifierDeclType	zend_bool		3953061	0					
ANR	3953095	Identifier	packed		3953061	1					
ANR	3953096	AssignmentExpression	packed = 1		3953061	2		=			
ANR	3953097	Identifier	packed		3953061	0					
ANR	3953098	PrimaryExpression	1		3953061	1					
ANR	3953099	IfStatement	"if ( zend_try_ct_eval_array ( & result -> u . constant , ast ) )"		3953061	4					
ANR	3953100	Condition	"zend_try_ct_eval_array ( & result -> u . constant , ast )"	6454:5:190364:190411	3953061	0	True				
ANR	3953101	CallExpression	"zend_try_ct_eval_array ( & result -> u . constant , ast )"		3953061	0					
ANR	3953102	Callee	zend_try_ct_eval_array		3953061	0					
ANR	3953103	Identifier	zend_try_ct_eval_array		3953061	0					
ANR	3953104	ArgumentList	& result -> u . constant		3953061	1					
ANR	3953105	Argument	& result -> u . constant		3953061	0					
ANR	3953106	UnaryOperationExpression	& result -> u . constant		3953061	0					
ANR	3953107	UnaryOperator	&		3953061	0					
ANR	3953108	MemberAccess	result -> u . constant		3953061	1					
ANR	3953109	PtrMemberAccess	result -> u		3953061	0					
ANR	3953110	Identifier	result		3953061	0					
ANR	3953111	Identifier	u		3953061	1					
ANR	3953112	Identifier	constant		3953061	1					
ANR	3953113	Argument	ast		3953061	1					
ANR	3953114	Identifier	ast		3953061	0					
ANR	3953115	CompoundStatement		7:55:175:175	3953061	1					
ANR	3953116	ExpressionStatement	result -> op_type = IS_CONST	6455:2:190418:190444	3953061	0	True				
ANR	3953117	AssignmentExpression	result -> op_type = IS_CONST		3953061	0		=			
ANR	3953118	PtrMemberAccess	result -> op_type		3953061	0					
ANR	3953119	Identifier	result		3953061	0					
ANR	3953120	Identifier	op_type		3953061	1					
ANR	3953121	Identifier	IS_CONST		3953061	1					
ANR	3953122	ReturnStatement	return ;	6456:2:190448:190454	3953061	1	True				
ANR	3953123	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3953061	5					
ANR	3953124	ForInit	i = 0 ;	6459:6:190466:190471	3953061	0	True				
ANR	3953125	AssignmentExpression	i = 0		3953061	0		=			
ANR	3953126	Identifier	i		3953061	0					
ANR	3953127	PrimaryExpression	0		3953061	1					
ANR	3953128	Condition	i < list -> children	6459:13:190473:190490	3953061	1	True				
ANR	3953129	RelationalExpression	i < list -> children		3953061	0		<			
ANR	3953130	Identifier	i		3953061	0					
ANR	3953131	PtrMemberAccess	list -> children		3953061	1					
ANR	3953132	Identifier	list		3953061	0					
ANR	3953133	Identifier	children		3953061	1					
ANR	3953134	UnaryExpression	++ i	6459:33:190493:190495	3953061	2	True				
ANR	3953135	IncDec	++		3953061	0					
ANR	3953136	Identifier	i		3953061	1					
ANR	3953137	CompoundStatement		18:2:426:474	3953061	3					
ANR	3953138	IdentifierDeclStatement	zend_ast * elem_ast = list -> child [ i ] ;	6460:2:190502:190537	3953061	0	True				
ANR	3953139	IdentifierDecl	* elem_ast = list -> child [ i ]		3953061	0					
ANR	3953140	IdentifierDeclType	zend_ast *		3953061	0					
ANR	3953141	Identifier	elem_ast		3953061	1					
ANR	3953142	AssignmentExpression	* elem_ast = list -> child [ i ]		3953061	2		=			
ANR	3953143	Identifier	elem_ast		3953061	0					
ANR	3953144	ArrayIndexing	list -> child [ i ]		3953061	1					
ANR	3953145	PtrMemberAccess	list -> child		3953061	0					
ANR	3953146	Identifier	list		3953061	0					
ANR	3953147	Identifier	child		3953061	1					
ANR	3953148	Identifier	i		3953061	1					
ANR	3953149	IdentifierDeclStatement	zend_ast * value_ast = elem_ast -> child [ 0 ] ;	6461:2:190541:190581	3953061	1	True				
ANR	3953150	IdentifierDecl	* value_ast = elem_ast -> child [ 0 ]		3953061	0					
ANR	3953151	IdentifierDeclType	zend_ast *		3953061	0					
ANR	3953152	Identifier	value_ast		3953061	1					
ANR	3953153	AssignmentExpression	* value_ast = elem_ast -> child [ 0 ]		3953061	2		=			
ANR	3953154	Identifier	value_ast		3953061	0					
ANR	3953155	ArrayIndexing	elem_ast -> child [ 0 ]		3953061	1					
ANR	3953156	PtrMemberAccess	elem_ast -> child		3953061	0					
ANR	3953157	Identifier	elem_ast		3953061	0					
ANR	3953158	Identifier	child		3953061	1					
ANR	3953159	PrimaryExpression	0		3953061	1					
ANR	3953160	IdentifierDeclStatement	zend_ast * key_ast = elem_ast -> child [ 1 ] ;	6462:2:190585:190623	3953061	2	True				
ANR	3953161	IdentifierDecl	* key_ast = elem_ast -> child [ 1 ]		3953061	0					
ANR	3953162	IdentifierDeclType	zend_ast *		3953061	0					
ANR	3953163	Identifier	key_ast		3953061	1					
ANR	3953164	AssignmentExpression	* key_ast = elem_ast -> child [ 1 ]		3953061	2		=			
ANR	3953165	Identifier	key_ast		3953061	0					
ANR	3953166	ArrayIndexing	elem_ast -> child [ 1 ]		3953061	1					
ANR	3953167	PtrMemberAccess	elem_ast -> child		3953061	0					
ANR	3953168	Identifier	elem_ast		3953061	0					
ANR	3953169	Identifier	child		3953061	1					
ANR	3953170	PrimaryExpression	1		3953061	1					
ANR	3953171	IdentifierDeclStatement	zend_bool by_ref = elem_ast -> attr ;	6463:2:190627:190660	3953061	3	True				
ANR	3953172	IdentifierDecl	by_ref = elem_ast -> attr		3953061	0					
ANR	3953173	IdentifierDeclType	zend_bool		3953061	0					
ANR	3953174	Identifier	by_ref		3953061	1					
ANR	3953175	AssignmentExpression	by_ref = elem_ast -> attr		3953061	2		=			
ANR	3953176	Identifier	by_ref		3953061	0					
ANR	3953177	PtrMemberAccess	elem_ast -> attr		3953061	1					
ANR	3953178	Identifier	elem_ast		3953061	0					
ANR	3953179	Identifier	attr		3953061	1					
ANR	3953180	IdentifierDeclStatement	"znode value_node , key_node , * key_node_ptr = NULL ;"	6465:2:190665:190713	3953061	4	True				
ANR	3953181	IdentifierDecl	value_node		3953061	0					
ANR	3953182	IdentifierDeclType	znode		3953061	0					
ANR	3953183	Identifier	value_node		3953061	1					
ANR	3953184	IdentifierDecl	key_node		3953061	1					
ANR	3953185	IdentifierDeclType	znode		3953061	0					
ANR	3953186	Identifier	key_node		3953061	1					
ANR	3953187	IdentifierDecl	* key_node_ptr = NULL		3953061	2					
ANR	3953188	IdentifierDeclType	znode *		3953061	0					
ANR	3953189	Identifier	key_node_ptr		3953061	1					
ANR	3953190	AssignmentExpression	* key_node_ptr = NULL		3953061	2		=			
ANR	3953191	Identifier	NULL		3953061	0					
ANR	3953192	Identifier	NULL		3953061	1					
ANR	3953193	IfStatement	if ( key_ast )		3953061	5					
ANR	3953194	Condition	key_ast	6467:6:190722:190728	3953061	0	True				
ANR	3953195	Identifier	key_ast		3953061	0					
ANR	3953196	CompoundStatement		20:15:492:492	3953061	1					
ANR	3953197	ExpressionStatement	"zend_compile_expr ( & key_node , key_ast )"	6468:3:190736:190773	3953061	0	True				
ANR	3953198	CallExpression	"zend_compile_expr ( & key_node , key_ast )"		3953061	0					
ANR	3953199	Callee	zend_compile_expr		3953061	0					
ANR	3953200	Identifier	zend_compile_expr		3953061	0					
ANR	3953201	ArgumentList	& key_node		3953061	1					
ANR	3953202	Argument	& key_node		3953061	0					
ANR	3953203	UnaryOperationExpression	& key_node		3953061	0					
ANR	3953204	UnaryOperator	&		3953061	0					
ANR	3953205	Identifier	key_node		3953061	1					
ANR	3953206	Argument	key_ast		3953061	1					
ANR	3953207	Identifier	key_ast		3953061	0					
ANR	3953208	ExpressionStatement	zend_handle_numeric_op ( & key_node )	6469:3:190778:190811	3953061	1	True				
ANR	3953209	CallExpression	zend_handle_numeric_op ( & key_node )		3953061	0					
ANR	3953210	Callee	zend_handle_numeric_op		3953061	0					
ANR	3953211	Identifier	zend_handle_numeric_op		3953061	0					
ANR	3953212	ArgumentList	& key_node		3953061	1					
ANR	3953213	Argument	& key_node		3953061	0					
ANR	3953214	UnaryOperationExpression	& key_node		3953061	0					
ANR	3953215	UnaryOperator	&		3953061	0					
ANR	3953216	Identifier	key_node		3953061	1					
ANR	3953217	ExpressionStatement	key_node_ptr = & key_node	6470:3:190816:190840	3953061	2	True				
ANR	3953218	AssignmentExpression	key_node_ptr = & key_node		3953061	0		=			
ANR	3953219	Identifier	key_node_ptr		3953061	0					
ANR	3953220	UnaryOperationExpression	& key_node		3953061	1					
ANR	3953221	UnaryOperator	&		3953061	0					
ANR	3953222	Identifier	key_node		3953061	1					
ANR	3953223	IfStatement	if ( by_ref )		3953061	6					
ANR	3953224	Condition	by_ref	6473:6:190853:190858	3953061	0	True				
ANR	3953225	Identifier	by_ref		3953061	0					
ANR	3953226	CompoundStatement		26:14:622:622	3953061	1					
ANR	3953227	ExpressionStatement	zend_ensure_writable_variable ( value_ast )	6474:3:190866:190906	3953061	0	True				
ANR	3953228	CallExpression	zend_ensure_writable_variable ( value_ast )		3953061	0					
ANR	3953229	Callee	zend_ensure_writable_variable		3953061	0					
ANR	3953230	Identifier	zend_ensure_writable_variable		3953061	0					
ANR	3953231	ArgumentList	value_ast		3953061	1					
ANR	3953232	Argument	value_ast		3953061	0					
ANR	3953233	Identifier	value_ast		3953061	0					
ANR	3953234	ExpressionStatement	"zend_compile_var ( & value_node , value_ast , BP_VAR_W )"	6475:3:190911:190961	3953061	1	True				
ANR	3953235	CallExpression	"zend_compile_var ( & value_node , value_ast , BP_VAR_W )"		3953061	0					
ANR	3953236	Callee	zend_compile_var		3953061	0					
ANR	3953237	Identifier	zend_compile_var		3953061	0					
ANR	3953238	ArgumentList	& value_node		3953061	1					
ANR	3953239	Argument	& value_node		3953061	0					
ANR	3953240	UnaryOperationExpression	& value_node		3953061	0					
ANR	3953241	UnaryOperator	&		3953061	0					
ANR	3953242	Identifier	value_node		3953061	1					
ANR	3953243	Argument	value_ast		3953061	1					
ANR	3953244	Identifier	value_ast		3953061	0					
ANR	3953245	Argument	BP_VAR_W		3953061	2					
ANR	3953246	Identifier	BP_VAR_W		3953061	0					
ANR	3953247	ElseStatement	else		3953061	0					
ANR	3953248	CompoundStatement		29:9:733:733	3953061	0					
ANR	3953249	ExpressionStatement	"zend_compile_expr ( & value_node , value_ast )"	6477:3:190977:191018	3953061	0	True				
ANR	3953250	CallExpression	"zend_compile_expr ( & value_node , value_ast )"		3953061	0					
ANR	3953251	Callee	zend_compile_expr		3953061	0					
ANR	3953252	Identifier	zend_compile_expr		3953061	0					
ANR	3953253	ArgumentList	& value_node		3953061	1					
ANR	3953254	Argument	& value_node		3953061	0					
ANR	3953255	UnaryOperationExpression	& value_node		3953061	0					
ANR	3953256	UnaryOperator	&		3953061	0					
ANR	3953257	Identifier	value_node		3953061	1					
ANR	3953258	Argument	value_ast		3953061	1					
ANR	3953259	Identifier	value_ast		3953061	0					
ANR	3953260	IfStatement	if ( i == 0 )		3953061	7					
ANR	3953261	Condition	i == 0	6480:6:191031:191036	3953061	0	True				
ANR	3953262	EqualityExpression	i == 0		3953061	0		==			
ANR	3953263	Identifier	i		3953061	0					
ANR	3953264	PrimaryExpression	0		3953061	1					
ANR	3953265	CompoundStatement		33:14:800:800	3953061	1					
ANR	3953266	ExpressionStatement	opnum_init = get_next_op_number ( CG ( active_op_array ) )	6481:3:191044:191096	3953061	0	True				
ANR	3953267	AssignmentExpression	opnum_init = get_next_op_number ( CG ( active_op_array ) )		3953061	0		=			
ANR	3953268	Identifier	opnum_init		3953061	0					
ANR	3953269	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3953061	1					
ANR	3953270	Callee	get_next_op_number		3953061	0					
ANR	3953271	Identifier	get_next_op_number		3953061	0					
ANR	3953272	ArgumentList	CG ( active_op_array )		3953061	1					
ANR	3953273	Argument	CG ( active_op_array )		3953061	0					
ANR	3953274	CallExpression	CG ( active_op_array )		3953061	0					
ANR	3953275	Callee	CG		3953061	0					
ANR	3953276	Identifier	CG		3953061	0					
ANR	3953277	ArgumentList	active_op_array		3953061	1					
ANR	3953278	Argument	active_op_array		3953061	0					
ANR	3953279	Identifier	active_op_array		3953061	0					
ANR	3953280	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_INIT_ARRAY , & value_node , key_node_ptr )"	6482:3:191101:191178	3953061	1	True				
ANR	3953281	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_INIT_ARRAY , & value_node , key_node_ptr )"		3953061	0		=			
ANR	3953282	Identifier	opline		3953061	0					
ANR	3953283	CallExpression	"zend_emit_op_tmp ( result , ZEND_INIT_ARRAY , & value_node , key_node_ptr )"		3953061	1					
ANR	3953284	Callee	zend_emit_op_tmp		3953061	0					
ANR	3953285	Identifier	zend_emit_op_tmp		3953061	0					
ANR	3953286	ArgumentList	result		3953061	1					
ANR	3953287	Argument	result		3953061	0					
ANR	3953288	Identifier	result		3953061	0					
ANR	3953289	Argument	ZEND_INIT_ARRAY		3953061	1					
ANR	3953290	Identifier	ZEND_INIT_ARRAY		3953061	0					
ANR	3953291	Argument	& value_node		3953061	2					
ANR	3953292	UnaryOperationExpression	& value_node		3953061	0					
ANR	3953293	UnaryOperator	&		3953061	0					
ANR	3953294	Identifier	value_node		3953061	1					
ANR	3953295	Argument	key_node_ptr		3953061	3					
ANR	3953296	Identifier	key_node_ptr		3953061	0					
ANR	3953297	ExpressionStatement	opline -> extended_value = list -> children << ZEND_ARRAY_SIZE_SHIFT	6483:3:191183:191247	3953061	2	True				
ANR	3953298	AssignmentExpression	opline -> extended_value = list -> children << ZEND_ARRAY_SIZE_SHIFT		3953061	0		=			
ANR	3953299	PtrMemberAccess	opline -> extended_value		3953061	0					
ANR	3953300	Identifier	opline		3953061	0					
ANR	3953301	Identifier	extended_value		3953061	1					
ANR	3953302	ShiftExpression	list -> children << ZEND_ARRAY_SIZE_SHIFT		3953061	1		<<			
ANR	3953303	PtrMemberAccess	list -> children		3953061	0					
ANR	3953304	Identifier	list		3953061	0					
ANR	3953305	Identifier	children		3953061	1					
ANR	3953306	Identifier	ZEND_ARRAY_SIZE_SHIFT		3953061	1					
ANR	3953307	ElseStatement	else		3953061	0					
ANR	3953308	CompoundStatement		37:9:1019:1019	3953061	0					
ANR	3953309	ExpressionStatement	"opline = zend_emit_op ( NULL , ZEND_ADD_ARRAY_ELEMENT , & value_node , key_node_ptr )"	6485:3:191263:191345	3953061	0	True				
ANR	3953310	AssignmentExpression	"opline = zend_emit_op ( NULL , ZEND_ADD_ARRAY_ELEMENT , & value_node , key_node_ptr )"		3953061	0		=			
ANR	3953311	Identifier	opline		3953061	0					
ANR	3953312	CallExpression	"zend_emit_op ( NULL , ZEND_ADD_ARRAY_ELEMENT , & value_node , key_node_ptr )"		3953061	1					
ANR	3953313	Callee	zend_emit_op		3953061	0					
ANR	3953314	Identifier	zend_emit_op		3953061	0					
ANR	3953315	ArgumentList	NULL		3953061	1					
ANR	3953316	Argument	NULL		3953061	0					
ANR	3953317	Identifier	NULL		3953061	0					
ANR	3953318	Argument	ZEND_ADD_ARRAY_ELEMENT		3953061	1					
ANR	3953319	Identifier	ZEND_ADD_ARRAY_ELEMENT		3953061	0					
ANR	3953320	Argument	& value_node		3953061	2					
ANR	3953321	UnaryOperationExpression	& value_node		3953061	0					
ANR	3953322	UnaryOperator	&		3953061	0					
ANR	3953323	Identifier	value_node		3953061	1					
ANR	3953324	Argument	key_node_ptr		3953061	3					
ANR	3953325	Identifier	key_node_ptr		3953061	0					
ANR	3953326	ExpressionStatement	"SET_NODE ( opline -> result , result )"	6487:3:191350:191382	3953061	1	True				
ANR	3953327	CallExpression	"SET_NODE ( opline -> result , result )"		3953061	0					
ANR	3953328	Callee	SET_NODE		3953061	0					
ANR	3953329	Identifier	SET_NODE		3953061	0					
ANR	3953330	ArgumentList	opline -> result		3953061	1					
ANR	3953331	Argument	opline -> result		3953061	0					
ANR	3953332	PtrMemberAccess	opline -> result		3953061	0					
ANR	3953333	Identifier	opline		3953061	0					
ANR	3953334	Identifier	result		3953061	1					
ANR	3953335	Argument	result		3953061	1					
ANR	3953336	Identifier	result		3953061	0					
ANR	3953337	ExpressionStatement	opline -> extended_value |= by_ref	6489:2:191390:191422	3953061	8	True				
ANR	3953338	AssignmentExpression	opline -> extended_value |= by_ref		3953061	0		|=			
ANR	3953339	PtrMemberAccess	opline -> extended_value		3953061	0					
ANR	3953340	Identifier	opline		3953061	0					
ANR	3953341	Identifier	extended_value		3953061	1					
ANR	3953342	Identifier	by_ref		3953061	1					
ANR	3953343	IfStatement	if ( key_ast && key_node . op_type == IS_CONST && Z_TYPE ( key_node . u . constant ) == IS_STRING )		3953061	9					
ANR	3953344	Condition	key_ast && key_node . op_type == IS_CONST && Z_TYPE ( key_node . u . constant ) == IS_STRING	6491:6:191431:191513	3953061	0	True				
ANR	3953345	AndExpression	key_ast && key_node . op_type == IS_CONST && Z_TYPE ( key_node . u . constant ) == IS_STRING		3953061	0		&&			
ANR	3953346	Identifier	key_ast		3953061	0					
ANR	3953347	AndExpression	key_node . op_type == IS_CONST && Z_TYPE ( key_node . u . constant ) == IS_STRING		3953061	1		&&			
ANR	3953348	EqualityExpression	key_node . op_type == IS_CONST		3953061	0		==			
ANR	3953349	MemberAccess	key_node . op_type		3953061	0					
ANR	3953350	Identifier	key_node		3953061	0					
ANR	3953351	Identifier	op_type		3953061	1					
ANR	3953352	Identifier	IS_CONST		3953061	1					
ANR	3953353	EqualityExpression	Z_TYPE ( key_node . u . constant ) == IS_STRING		3953061	1		==			
ANR	3953354	CallExpression	Z_TYPE ( key_node . u . constant )		3953061	0					
ANR	3953355	Callee	Z_TYPE		3953061	0					
ANR	3953356	Identifier	Z_TYPE		3953061	0					
ANR	3953357	ArgumentList	key_node . u . constant		3953061	1					
ANR	3953358	Argument	key_node . u . constant		3953061	0					
ANR	3953359	MemberAccess	key_node . u . constant		3953061	0					
ANR	3953360	MemberAccess	key_node . u		3953061	0					
ANR	3953361	Identifier	key_node		3953061	0					
ANR	3953362	Identifier	u		3953061	1					
ANR	3953363	Identifier	constant		3953061	1					
ANR	3953364	Identifier	IS_STRING		3953061	1					
ANR	3953365	CompoundStatement		44:91:1277:1277	3953061	1					
ANR	3953366	ExpressionStatement	packed = 0	6492:3:191521:191531	3953061	0	True				
ANR	3953367	AssignmentExpression	packed = 0		3953061	0		=			
ANR	3953368	Identifier	packed		3953061	0					
ANR	3953369	PrimaryExpression	0		3953061	1					
ANR	3953370	IfStatement	if ( ! list -> children )		3953061	6					
ANR	3953371	Condition	! list -> children	6497:5:191572:191586	3953061	0	True				
ANR	3953372	UnaryOperationExpression	! list -> children		3953061	0					
ANR	3953373	UnaryOperator	!		3953061	0					
ANR	3953374	PtrMemberAccess	list -> children		3953061	1					
ANR	3953375	Identifier	list		3953061	0					
ANR	3953376	Identifier	children		3953061	1					
ANR	3953377	CompoundStatement		50:22:1350:1350	3953061	1					
ANR	3953378	ExpressionStatement	"zend_emit_op_tmp ( result , ZEND_INIT_ARRAY , NULL , NULL )"	6498:2:191593:191646	3953061	0	True				
ANR	3953379	CallExpression	"zend_emit_op_tmp ( result , ZEND_INIT_ARRAY , NULL , NULL )"		3953061	0					
ANR	3953380	Callee	zend_emit_op_tmp		3953061	0					
ANR	3953381	Identifier	zend_emit_op_tmp		3953061	0					
ANR	3953382	ArgumentList	result		3953061	1					
ANR	3953383	Argument	result		3953061	0					
ANR	3953384	Identifier	result		3953061	0					
ANR	3953385	Argument	ZEND_INIT_ARRAY		3953061	1					
ANR	3953386	Identifier	ZEND_INIT_ARRAY		3953061	0					
ANR	3953387	Argument	NULL		3953061	2					
ANR	3953388	Identifier	NULL		3953061	0					
ANR	3953389	Argument	NULL		3953061	3					
ANR	3953390	Identifier	NULL		3953061	0					
ANR	3953391	IfStatement	if ( ! packed )		3953061	7					
ANR	3953392	Condition	! packed	6502:5:191728:191734	3953061	0	True				
ANR	3953393	UnaryOperationExpression	! packed		3953061	0					
ANR	3953394	UnaryOperator	!		3953061	0					
ANR	3953395	Identifier	packed		3953061	1					
ANR	3953396	CompoundStatement		55:14:1498:1498	3953061	1					
ANR	3953397	ExpressionStatement	ZEND_ASSERT ( opnum_init != - 1 )	6503:2:191741:191770	3953061	0	True				
ANR	3953398	CallExpression	ZEND_ASSERT ( opnum_init != - 1 )		3953061	0					
ANR	3953399	Callee	ZEND_ASSERT		3953061	0					
ANR	3953400	Identifier	ZEND_ASSERT		3953061	0					
ANR	3953401	ArgumentList	opnum_init != - 1		3953061	1					
ANR	3953402	Argument	opnum_init != - 1		3953061	0					
ANR	3953403	EqualityExpression	opnum_init != - 1		3953061	0		!=			
ANR	3953404	Identifier	opnum_init		3953061	0					
ANR	3953405	UnaryOperationExpression	- 1		3953061	1					
ANR	3953406	UnaryOperator	-		3953061	0					
ANR	3953407	PrimaryExpression	1		3953061	1					
ANR	3953408	ExpressionStatement	opline = & CG ( active_op_array ) -> opcodes [ opnum_init ]	6504:2:191774:191824	3953061	1	True				
ANR	3953409	AssignmentExpression	opline = & CG ( active_op_array ) -> opcodes [ opnum_init ]		3953061	0		=			
ANR	3953410	Identifier	opline		3953061	0					
ANR	3953411	UnaryOperationExpression	& CG ( active_op_array ) -> opcodes [ opnum_init ]		3953061	1					
ANR	3953412	UnaryOperator	&		3953061	0					
ANR	3953413	ArrayIndexing	CG ( active_op_array ) -> opcodes [ opnum_init ]		3953061	1					
ANR	3953414	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3953061	0					
ANR	3953415	CallExpression	CG ( active_op_array )		3953061	0					
ANR	3953416	Callee	CG		3953061	0					
ANR	3953417	Identifier	CG		3953061	0					
ANR	3953418	ArgumentList	active_op_array		3953061	1					
ANR	3953419	Argument	active_op_array		3953061	0					
ANR	3953420	Identifier	active_op_array		3953061	0					
ANR	3953421	Identifier	opcodes		3953061	1					
ANR	3953422	Identifier	opnum_init		3953061	1					
ANR	3953423	ExpressionStatement	opline -> extended_value |= ZEND_ARRAY_NOT_PACKED	6505:2:191828:191875	3953061	2	True				
ANR	3953424	AssignmentExpression	opline -> extended_value |= ZEND_ARRAY_NOT_PACKED		3953061	0		|=			
ANR	3953425	PtrMemberAccess	opline -> extended_value		3953061	0					
ANR	3953426	Identifier	opline		3953061	0					
ANR	3953427	Identifier	extended_value		3953061	1					
ANR	3953428	Identifier	ZEND_ARRAY_NOT_PACKED		3953061	1					
ANR	3953429	ReturnType	void		3953061	1					
ANR	3953430	Identifier	zend_compile_array		3953061	2					
ANR	3953431	ParameterList	"znode * result , zend_ast * ast"		3953061	3					
ANR	3953432	Parameter	znode * result	6447:24:190198:190210	3953061	0	True				
ANR	3953433	ParameterType	znode *		3953061	0					
ANR	3953434	Identifier	result		3953061	1					
ANR	3953435	Parameter	zend_ast * ast	6447:39:190213:190225	3953061	1	True				
ANR	3953436	ParameterType	zend_ast *		3953061	0					
ANR	3953437	Identifier	ast		3953061	1					
ANR	3953438	CFGEntryNode	ENTRY		3953061		True				
ANR	3953439	CFGExitNode	EXIT		3953061		True				
ANR	3953440	Symbol	ast		3953061						
ANR	3953441	Symbol	Z_TYPE		3953061						
ANR	3953442	Symbol	* CG		3953061						
ANR	3953443	Symbol	zend_try_ct_eval_array		3953061						
ANR	3953444	Symbol	result -> u		3953061						
ANR	3953445	Symbol	CG ( active_op_array ) -> opcodes		3953061						
ANR	3953446	Symbol	opline -> extended_value		3953061						
ANR	3953447	Symbol	opline -> result		3953061						
ANR	3953448	Symbol	* elem_ast		3953061						
ANR	3953449	Symbol	opline		3953061						
ANR	3953450	Symbol	BP_VAR_W		3953061						
ANR	3953451	Symbol	IS_STRING		3953061						
ANR	3953452	Symbol	key_node . u . constant		3953061						
ANR	3953453	Symbol	key_node_ptr		3953061						
ANR	3953454	Symbol	IS_CONST		3953061						
ANR	3953455	Symbol	NULL		3953061						
ANR	3953456	Symbol	opnum_init		3953061						
ANR	3953457	Symbol	key_node . u		3953061						
ANR	3953458	Symbol	list		3953061						
ANR	3953459	Symbol	elem_ast		3953061						
ANR	3953460	Symbol	key_node . op_type		3953061						
ANR	3953461	Symbol	key_node		3953061						
ANR	3953462	Symbol	* list -> child		3953061						
ANR	3953463	Symbol	by_ref		3953061						
ANR	3953464	Symbol	list -> children		3953061						
ANR	3953465	Symbol	zend_emit_op		3953061						
ANR	3953466	Symbol	zend_emit_op_tmp		3953061						
ANR	3953467	Symbol	key_ast		3953061						
ANR	3953468	Symbol	ZEND_ARRAY_NOT_PACKED		3953061						
ANR	3953469	Symbol	result -> op_type		3953061						
ANR	3953470	Symbol	& key_node		3953061						
ANR	3953471	Symbol	result		3953061						
ANR	3953472	Symbol	* elem_ast -> child		3953061						
ANR	3953473	Symbol	* * list		3953061						
ANR	3953474	Symbol	* result		3953061						
ANR	3953475	Symbol	value_ast		3953061						
ANR	3953476	Symbol	value_node		3953061						
ANR	3953477	Symbol	& result -> u . constant		3953061						
ANR	3953478	Symbol	packed		3953061						
ANR	3953479	Symbol	elem_ast -> child		3953061						
ANR	3953480	Symbol	ZEND_INIT_ARRAY		3953061						
ANR	3953481	Symbol	& result -> u		3953061						
ANR	3953482	Symbol	list -> child		3953061						
ANR	3953483	Symbol	CG		3953061						
ANR	3953484	Symbol	elem_ast -> attr		3953061						
ANR	3953485	Symbol	active_op_array		3953061						
ANR	3953486	Symbol	i		3953061						
ANR	3953487	Symbol	* * elem_ast		3953061						
ANR	3953488	Symbol	zend_ast_get_list		3953061						
ANR	3953489	Symbol	* i		3953061						
ANR	3953490	Symbol	* opline		3953061						
ANR	3953491	Symbol	* list		3953061						
ANR	3953492	Symbol	& value_node		3953061						
ANR	3953493	Symbol	ZEND_ADD_ARRAY_ELEMENT		3953061						
ANR	3953494	Symbol	ZEND_ARRAY_SIZE_SHIFT		3953061						
ANR	3953495	Symbol	get_next_op_number		3953061						
ANR	3953496	Function	zend_compile_const	6510:0:191893:193581							
ANR	3953497	FunctionDef	"zend_compile_const (znode * result , zend_ast * ast)"		3953496	0					
ANR	3953498	CompoundStatement		6511:0:191957:193581	3953496	0					
ANR	3953499	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	6512:1:191960:191994	3953496	0	True				
ANR	3953500	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3953496	0					
ANR	3953501	IdentifierDeclType	zend_ast *		3953496	0					
ANR	3953502	Identifier	name_ast		3953496	1					
ANR	3953503	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3953496	2		=			
ANR	3953504	Identifier	name_ast		3953496	0					
ANR	3953505	ArrayIndexing	ast -> child [ 0 ]		3953496	1					
ANR	3953506	PtrMemberAccess	ast -> child		3953496	0					
ANR	3953507	Identifier	ast		3953496	0					
ANR	3953508	Identifier	child		3953496	1					
ANR	3953509	PrimaryExpression	0		3953496	1					
ANR	3953510	IdentifierDeclStatement	zend_op * opline ;	6514:1:191998:192013	3953496	1	True				
ANR	3953511	IdentifierDecl	* opline		3953496	0					
ANR	3953512	IdentifierDeclType	zend_op *		3953496	0					
ANR	3953513	Identifier	opline		3953496	1					
ANR	3953514	IdentifierDeclStatement	zend_bool is_fully_qualified ;	6516:1:192017:192045	3953496	2	True				
ANR	3953515	IdentifierDecl	is_fully_qualified		3953496	0					
ANR	3953516	IdentifierDeclType	zend_bool		3953496	0					
ANR	3953517	Identifier	is_fully_qualified		3953496	1					
ANR	3953518	IdentifierDeclStatement	zend_string * orig_name = zend_ast_get_str ( name_ast ) ;	6517:1:192048:192099	3953496	3	True				
ANR	3953519	IdentifierDecl	* orig_name = zend_ast_get_str ( name_ast )		3953496	0					
ANR	3953520	IdentifierDeclType	zend_string *		3953496	0					
ANR	3953521	Identifier	orig_name		3953496	1					
ANR	3953522	AssignmentExpression	* orig_name = zend_ast_get_str ( name_ast )		3953496	2		=			
ANR	3953523	Identifier	orig_name		3953496	0					
ANR	3953524	CallExpression	zend_ast_get_str ( name_ast )		3953496	1					
ANR	3953525	Callee	zend_ast_get_str		3953496	0					
ANR	3953526	Identifier	zend_ast_get_str		3953496	0					
ANR	3953527	ArgumentList	name_ast		3953496	1					
ANR	3953528	Argument	name_ast		3953496	0					
ANR	3953529	Identifier	name_ast		3953496	0					
ANR	3953530	IdentifierDeclStatement	"zend_string * resolved_name = zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified ) ;"	6518:1:192102:192202	3953496	4	True				
ANR	3953531	IdentifierDecl	"* resolved_name = zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified )"		3953496	0					
ANR	3953532	IdentifierDeclType	zend_string *		3953496	0					
ANR	3953533	Identifier	resolved_name		3953496	1					
ANR	3953534	AssignmentExpression	"* resolved_name = zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified )"		3953496	2		=			
ANR	3953535	Identifier	resolved_name		3953496	0					
ANR	3953536	CallExpression	"zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified )"		3953496	1					
ANR	3953537	Callee	zend_resolve_const_name		3953496	0					
ANR	3953538	Identifier	zend_resolve_const_name		3953496	0					
ANR	3953539	ArgumentList	orig_name		3953496	1					
ANR	3953540	Argument	orig_name		3953496	0					
ANR	3953541	Identifier	orig_name		3953496	0					
ANR	3953542	Argument	name_ast -> attr		3953496	1					
ANR	3953543	PtrMemberAccess	name_ast -> attr		3953496	0					
ANR	3953544	Identifier	name_ast		3953496	0					
ANR	3953545	Identifier	attr		3953496	1					
ANR	3953546	Argument	& is_fully_qualified		3953496	2					
ANR	3953547	UnaryOperationExpression	& is_fully_qualified		3953496	0					
ANR	3953548	UnaryOperator	&		3953496	0					
ANR	3953549	Identifier	is_fully_qualified		3953496	1					
ANR	3953550	IfStatement	"if ( zend_string_equals_literal ( resolved_name , ""__COMPILER_HALT_OFFSET__"" ) || ( name_ast -> attr != ZEND_NAME_RELATIVE && zend_string_equals_literal ( orig_name , ""__COMPILER_HALT_OFFSET__"" ) ) )"		3953496	5					
ANR	3953551	Condition	"zend_string_equals_literal ( resolved_name , ""__COMPILER_HALT_OFFSET__"" ) || ( name_ast -> attr != ZEND_NAME_RELATIVE && zend_string_equals_literal ( orig_name , ""__COMPILER_HALT_OFFSET__"" ) )"	6520:5:192210:192389	3953496	0	True				
ANR	3953552	OrExpression	"zend_string_equals_literal ( resolved_name , ""__COMPILER_HALT_OFFSET__"" ) || ( name_ast -> attr != ZEND_NAME_RELATIVE && zend_string_equals_literal ( orig_name , ""__COMPILER_HALT_OFFSET__"" ) )"		3953496	0		||			
ANR	3953553	CallExpression	"zend_string_equals_literal ( resolved_name , ""__COMPILER_HALT_OFFSET__"" )"		3953496	0					
ANR	3953554	Callee	zend_string_equals_literal		3953496	0					
ANR	3953555	Identifier	zend_string_equals_literal		3953496	0					
ANR	3953556	ArgumentList	resolved_name		3953496	1					
ANR	3953557	Argument	resolved_name		3953496	0					
ANR	3953558	Identifier	resolved_name		3953496	0					
ANR	3953559	Argument	"""__COMPILER_HALT_OFFSET__"""		3953496	1					
ANR	3953560	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3953496	0					
ANR	3953561	AndExpression	"name_ast -> attr != ZEND_NAME_RELATIVE && zend_string_equals_literal ( orig_name , ""__COMPILER_HALT_OFFSET__"" )"		3953496	1		&&			
ANR	3953562	EqualityExpression	name_ast -> attr != ZEND_NAME_RELATIVE		3953496	0		!=			
ANR	3953563	PtrMemberAccess	name_ast -> attr		3953496	0					
ANR	3953564	Identifier	name_ast		3953496	0					
ANR	3953565	Identifier	attr		3953496	1					
ANR	3953566	Identifier	ZEND_NAME_RELATIVE		3953496	1					
ANR	3953567	CallExpression	"zend_string_equals_literal ( orig_name , ""__COMPILER_HALT_OFFSET__"" )"		3953496	1					
ANR	3953568	Callee	zend_string_equals_literal		3953496	0					
ANR	3953569	Identifier	zend_string_equals_literal		3953496	0					
ANR	3953570	ArgumentList	orig_name		3953496	1					
ANR	3953571	Argument	orig_name		3953496	0					
ANR	3953572	Identifier	orig_name		3953496	0					
ANR	3953573	Argument	"""__COMPILER_HALT_OFFSET__"""		3953496	1					
ANR	3953574	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3953496	0					
ANR	3953575	CompoundStatement		11:2:438:462	3953496	1					
ANR	3953576	IdentifierDeclStatement	zend_ast * last = CG ( ast ) ;	6521:2:192396:192420	3953496	0	True				
ANR	3953577	IdentifierDecl	* last = CG ( ast )		3953496	0					
ANR	3953578	IdentifierDeclType	zend_ast *		3953496	0					
ANR	3953579	Identifier	last		3953496	1					
ANR	3953580	AssignmentExpression	* last = CG ( ast )		3953496	2		=			
ANR	3953581	Identifier	last		3953496	0					
ANR	3953582	CallExpression	CG ( ast )		3953496	1					
ANR	3953583	Callee	CG		3953496	0					
ANR	3953584	Identifier	CG		3953496	0					
ANR	3953585	ArgumentList	ast		3953496	1					
ANR	3953586	Argument	ast		3953496	0					
ANR	3953587	Identifier	ast		3953496	0					
ANR	3953588	WhileStatement	while ( last -> kind == ZEND_AST_STMT_LIST )		3953496	1					
ANR	3953589	Condition	last -> kind == ZEND_AST_STMT_LIST	6523:9:192432:192463	3953496	0	True				
ANR	3953590	EqualityExpression	last -> kind == ZEND_AST_STMT_LIST		3953496	0		==			
ANR	3953591	PtrMemberAccess	last -> kind		3953496	0					
ANR	3953592	Identifier	last		3953496	0					
ANR	3953593	Identifier	kind		3953496	1					
ANR	3953594	Identifier	ZEND_AST_STMT_LIST		3953496	1					
ANR	3953595	CompoundStatement		14:3:513:558	3953496	1					
ANR	3953596	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( last ) ;	6524:3:192471:192516	3953496	0	True				
ANR	3953597	IdentifierDecl	* list = zend_ast_get_list ( last )		3953496	0					
ANR	3953598	IdentifierDeclType	zend_ast_list *		3953496	0					
ANR	3953599	Identifier	list		3953496	1					
ANR	3953600	AssignmentExpression	* list = zend_ast_get_list ( last )		3953496	2		=			
ANR	3953601	Identifier	list		3953496	0					
ANR	3953602	CallExpression	zend_ast_get_list ( last )		3953496	1					
ANR	3953603	Callee	zend_ast_get_list		3953496	0					
ANR	3953604	Identifier	zend_ast_get_list		3953496	0					
ANR	3953605	ArgumentList	last		3953496	1					
ANR	3953606	Argument	last		3953496	0					
ANR	3953607	Identifier	last		3953496	0					
ANR	3953608	ExpressionStatement	last = list -> child [ list -> children - 1 ]	6525:3:192521:192557	3953496	1	True				
ANR	3953609	AssignmentExpression	last = list -> child [ list -> children - 1 ]		3953496	0		=			
ANR	3953610	Identifier	last		3953496	0					
ANR	3953611	ArrayIndexing	list -> child [ list -> children - 1 ]		3953496	1					
ANR	3953612	PtrMemberAccess	list -> child		3953496	0					
ANR	3953613	Identifier	list		3953496	0					
ANR	3953614	Identifier	child		3953496	1					
ANR	3953615	AdditiveExpression	list -> children - 1		3953496	1		-			
ANR	3953616	PtrMemberAccess	list -> children		3953496	0					
ANR	3953617	Identifier	list		3953496	0					
ANR	3953618	Identifier	children		3953496	1					
ANR	3953619	PrimaryExpression	1		3953496	1					
ANR	3953620	IfStatement	if ( last -> kind == ZEND_AST_HALT_COMPILER )		3953496	2					
ANR	3953621	Condition	last -> kind == ZEND_AST_HALT_COMPILER	6527:6:192569:192604	3953496	0	True				
ANR	3953622	EqualityExpression	last -> kind == ZEND_AST_HALT_COMPILER		3953496	0		==			
ANR	3953623	PtrMemberAccess	last -> kind		3953496	0					
ANR	3953624	Identifier	last		3953496	0					
ANR	3953625	Identifier	kind		3953496	1					
ANR	3953626	Identifier	ZEND_AST_HALT_COMPILER		3953496	1					
ANR	3953627	CompoundStatement		17:44:649:649	3953496	1					
ANR	3953628	ExpressionStatement	result -> op_type = IS_CONST	6528:3:192612:192638	3953496	0	True				
ANR	3953629	AssignmentExpression	result -> op_type = IS_CONST		3953496	0		=			
ANR	3953630	PtrMemberAccess	result -> op_type		3953496	0					
ANR	3953631	Identifier	result		3953496	0					
ANR	3953632	Identifier	op_type		3953496	1					
ANR	3953633	Identifier	IS_CONST		3953496	1					
ANR	3953634	ExpressionStatement	"ZVAL_LONG ( & result -> u . constant , Z_LVAL_P ( zend_ast_get_zval ( last -> child [ 0 ] ) ) )"	6529:3:192643:192718	3953496	1	True				
ANR	3953635	CallExpression	"ZVAL_LONG ( & result -> u . constant , Z_LVAL_P ( zend_ast_get_zval ( last -> child [ 0 ] ) ) )"		3953496	0					
ANR	3953636	Callee	ZVAL_LONG		3953496	0					
ANR	3953637	Identifier	ZVAL_LONG		3953496	0					
ANR	3953638	ArgumentList	& result -> u . constant		3953496	1					
ANR	3953639	Argument	& result -> u . constant		3953496	0					
ANR	3953640	UnaryOperationExpression	& result -> u . constant		3953496	0					
ANR	3953641	UnaryOperator	&		3953496	0					
ANR	3953642	MemberAccess	result -> u . constant		3953496	1					
ANR	3953643	PtrMemberAccess	result -> u		3953496	0					
ANR	3953644	Identifier	result		3953496	0					
ANR	3953645	Identifier	u		3953496	1					
ANR	3953646	Identifier	constant		3953496	1					
ANR	3953647	Argument	Z_LVAL_P ( zend_ast_get_zval ( last -> child [ 0 ] ) )		3953496	1					
ANR	3953648	CallExpression	Z_LVAL_P ( zend_ast_get_zval ( last -> child [ 0 ] ) )		3953496	0					
ANR	3953649	Callee	Z_LVAL_P		3953496	0					
ANR	3953650	Identifier	Z_LVAL_P		3953496	0					
ANR	3953651	ArgumentList	zend_ast_get_zval ( last -> child [ 0 ] )		3953496	1					
ANR	3953652	Argument	zend_ast_get_zval ( last -> child [ 0 ] )		3953496	0					
ANR	3953653	CallExpression	zend_ast_get_zval ( last -> child [ 0 ] )		3953496	0					
ANR	3953654	Callee	zend_ast_get_zval		3953496	0					
ANR	3953655	Identifier	zend_ast_get_zval		3953496	0					
ANR	3953656	ArgumentList	last -> child [ 0 ]		3953496	1					
ANR	3953657	Argument	last -> child [ 0 ]		3953496	0					
ANR	3953658	ArrayIndexing	last -> child [ 0 ]		3953496	0					
ANR	3953659	PtrMemberAccess	last -> child		3953496	0					
ANR	3953660	Identifier	last		3953496	0					
ANR	3953661	Identifier	child		3953496	1					
ANR	3953662	PrimaryExpression	0		3953496	1					
ANR	3953663	ExpressionStatement	zend_string_release ( resolved_name )	6530:3:192723:192757	3953496	2	True				
ANR	3953664	CallExpression	zend_string_release ( resolved_name )		3953496	0					
ANR	3953665	Callee	zend_string_release		3953496	0					
ANR	3953666	Identifier	zend_string_release		3953496	0					
ANR	3953667	ArgumentList	resolved_name		3953496	1					
ANR	3953668	Argument	resolved_name		3953496	0					
ANR	3953669	Identifier	resolved_name		3953496	0					
ANR	3953670	ReturnStatement	return ;	6531:3:192762:192768	3953496	3	True				
ANR	3953671	IfStatement	"if ( zend_try_ct_eval_const ( & result -> u . constant , resolved_name , is_fully_qualified ) )"		3953496	6					
ANR	3953672	Condition	"zend_try_ct_eval_const ( & result -> u . constant , resolved_name , is_fully_qualified )"	6535:5:192783:192860	3953496	0	True				
ANR	3953673	CallExpression	"zend_try_ct_eval_const ( & result -> u . constant , resolved_name , is_fully_qualified )"		3953496	0					
ANR	3953674	Callee	zend_try_ct_eval_const		3953496	0					
ANR	3953675	Identifier	zend_try_ct_eval_const		3953496	0					
ANR	3953676	ArgumentList	& result -> u . constant		3953496	1					
ANR	3953677	Argument	& result -> u . constant		3953496	0					
ANR	3953678	UnaryOperationExpression	& result -> u . constant		3953496	0					
ANR	3953679	UnaryOperator	&		3953496	0					
ANR	3953680	MemberAccess	result -> u . constant		3953496	1					
ANR	3953681	PtrMemberAccess	result -> u		3953496	0					
ANR	3953682	Identifier	result		3953496	0					
ANR	3953683	Identifier	u		3953496	1					
ANR	3953684	Identifier	constant		3953496	1					
ANR	3953685	Argument	resolved_name		3953496	1					
ANR	3953686	Identifier	resolved_name		3953496	0					
ANR	3953687	Argument	is_fully_qualified		3953496	2					
ANR	3953688	Identifier	is_fully_qualified		3953496	0					
ANR	3953689	CompoundStatement		25:85:905:905	3953496	1					
ANR	3953690	ExpressionStatement	result -> op_type = IS_CONST	6536:2:192867:192893	3953496	0	True				
ANR	3953691	AssignmentExpression	result -> op_type = IS_CONST		3953496	0		=			
ANR	3953692	PtrMemberAccess	result -> op_type		3953496	0					
ANR	3953693	Identifier	result		3953496	0					
ANR	3953694	Identifier	op_type		3953496	1					
ANR	3953695	Identifier	IS_CONST		3953496	1					
ANR	3953696	ExpressionStatement	zend_string_release ( resolved_name )	6537:2:192897:192931	3953496	1	True				
ANR	3953697	CallExpression	zend_string_release ( resolved_name )		3953496	0					
ANR	3953698	Callee	zend_string_release		3953496	0					
ANR	3953699	Identifier	zend_string_release		3953496	0					
ANR	3953700	ArgumentList	resolved_name		3953496	1					
ANR	3953701	Argument	resolved_name		3953496	0					
ANR	3953702	Identifier	resolved_name		3953496	0					
ANR	3953703	ReturnStatement	return ;	6538:2:192935:192941	3953496	2	True				
ANR	3953704	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_FETCH_CONSTANT , NULL , NULL )"	6541:1:192948:193014	3953496	7	True				
ANR	3953705	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_FETCH_CONSTANT , NULL , NULL )"		3953496	0		=			
ANR	3953706	Identifier	opline		3953496	0					
ANR	3953707	CallExpression	"zend_emit_op_tmp ( result , ZEND_FETCH_CONSTANT , NULL , NULL )"		3953496	1					
ANR	3953708	Callee	zend_emit_op_tmp		3953496	0					
ANR	3953709	Identifier	zend_emit_op_tmp		3953496	0					
ANR	3953710	ArgumentList	result		3953496	1					
ANR	3953711	Argument	result		3953496	0					
ANR	3953712	Identifier	result		3953496	0					
ANR	3953713	Argument	ZEND_FETCH_CONSTANT		3953496	1					
ANR	3953714	Identifier	ZEND_FETCH_CONSTANT		3953496	0					
ANR	3953715	Argument	NULL		3953496	2					
ANR	3953716	Identifier	NULL		3953496	0					
ANR	3953717	Argument	NULL		3953496	3					
ANR	3953718	Identifier	NULL		3953496	0					
ANR	3953719	ExpressionStatement	opline -> op2_type = IS_CONST	6542:1:193017:193044	3953496	8	True				
ANR	3953720	AssignmentExpression	opline -> op2_type = IS_CONST		3953496	0		=			
ANR	3953721	PtrMemberAccess	opline -> op2_type		3953496	0					
ANR	3953722	Identifier	opline		3953496	0					
ANR	3953723	Identifier	op2_type		3953496	1					
ANR	3953724	Identifier	IS_CONST		3953496	1					
ANR	3953725	IfStatement	if ( is_fully_qualified )		3953496	9					
ANR	3953726	Condition	is_fully_qualified	6544:5:193052:193069	3953496	0	True				
ANR	3953727	Identifier	is_fully_qualified		3953496	0					
ANR	3953728	CompoundStatement		34:25:1114:1114	3953496	1					
ANR	3953729	ExpressionStatement	"opline -> op2 . constant = zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 0 )"	6545:2:193076:193169	3953496	0	True				
ANR	3953730	AssignmentExpression	"opline -> op2 . constant = zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 0 )"		3953496	0		=			
ANR	3953731	MemberAccess	opline -> op2 . constant		3953496	0					
ANR	3953732	PtrMemberAccess	opline -> op2		3953496	0					
ANR	3953733	Identifier	opline		3953496	0					
ANR	3953734	Identifier	op2		3953496	1					
ANR	3953735	Identifier	constant		3953496	1					
ANR	3953736	CallExpression	"zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 0 )"		3953496	1					
ANR	3953737	Callee	zend_add_const_name_literal		3953496	0					
ANR	3953738	Identifier	zend_add_const_name_literal		3953496	0					
ANR	3953739	ArgumentList	CG ( active_op_array )		3953496	1					
ANR	3953740	Argument	CG ( active_op_array )		3953496	0					
ANR	3953741	CallExpression	CG ( active_op_array )		3953496	0					
ANR	3953742	Callee	CG		3953496	0					
ANR	3953743	Identifier	CG		3953496	0					
ANR	3953744	ArgumentList	active_op_array		3953496	1					
ANR	3953745	Argument	active_op_array		3953496	0					
ANR	3953746	Identifier	active_op_array		3953496	0					
ANR	3953747	Argument	resolved_name		3953496	1					
ANR	3953748	Identifier	resolved_name		3953496	0					
ANR	3953749	Argument	0		3953496	2					
ANR	3953750	PrimaryExpression	0		3953496	0					
ANR	3953751	ElseStatement	else		3953496	0					
ANR	3953752	CompoundStatement		37:8:1221:1221	3953496	0					
ANR	3953753	ExpressionStatement	opline -> extended_value = IS_CONSTANT_UNQUALIFIED	6548:2:193183:193231	3953496	0	True				
ANR	3953754	AssignmentExpression	opline -> extended_value = IS_CONSTANT_UNQUALIFIED		3953496	0		=			
ANR	3953755	PtrMemberAccess	opline -> extended_value		3953496	0					
ANR	3953756	Identifier	opline		3953496	0					
ANR	3953757	Identifier	extended_value		3953496	1					
ANR	3953758	Identifier	IS_CONSTANT_UNQUALIFIED		3953496	1					
ANR	3953759	IfStatement	if ( FC ( current_namespace ) )		3953496	1					
ANR	3953760	Condition	FC ( current_namespace )	6549:6:193239:193259	3953496	0	True				
ANR	3953761	CallExpression	FC ( current_namespace )		3953496	0					
ANR	3953762	Callee	FC		3953496	0					
ANR	3953763	Identifier	FC		3953496	0					
ANR	3953764	ArgumentList	current_namespace		3953496	1					
ANR	3953765	Argument	current_namespace		3953496	0					
ANR	3953766	Identifier	current_namespace		3953496	0					
ANR	3953767	CompoundStatement		39:29:1304:1304	3953496	1					
ANR	3953768	ExpressionStatement	opline -> extended_value |= IS_CONSTANT_IN_NAMESPACE	6550:3:193267:193317	3953496	0	True				
ANR	3953769	AssignmentExpression	opline -> extended_value |= IS_CONSTANT_IN_NAMESPACE		3953496	0		|=			
ANR	3953770	PtrMemberAccess	opline -> extended_value		3953496	0					
ANR	3953771	Identifier	opline		3953496	0					
ANR	3953772	Identifier	extended_value		3953496	1					
ANR	3953773	Identifier	IS_CONSTANT_IN_NAMESPACE		3953496	1					
ANR	3953774	ExpressionStatement	"opline -> op2 . constant = zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 1 )"	6551:3:193322:193416	3953496	1	True				
ANR	3953775	AssignmentExpression	"opline -> op2 . constant = zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 1 )"		3953496	0		=			
ANR	3953776	MemberAccess	opline -> op2 . constant		3953496	0					
ANR	3953777	PtrMemberAccess	opline -> op2		3953496	0					
ANR	3953778	Identifier	opline		3953496	0					
ANR	3953779	Identifier	op2		3953496	1					
ANR	3953780	Identifier	constant		3953496	1					
ANR	3953781	CallExpression	"zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 1 )"		3953496	1					
ANR	3953782	Callee	zend_add_const_name_literal		3953496	0					
ANR	3953783	Identifier	zend_add_const_name_literal		3953496	0					
ANR	3953784	ArgumentList	CG ( active_op_array )		3953496	1					
ANR	3953785	Argument	CG ( active_op_array )		3953496	0					
ANR	3953786	CallExpression	CG ( active_op_array )		3953496	0					
ANR	3953787	Callee	CG		3953496	0					
ANR	3953788	Identifier	CG		3953496	0					
ANR	3953789	ArgumentList	active_op_array		3953496	1					
ANR	3953790	Argument	active_op_array		3953496	0					
ANR	3953791	Identifier	active_op_array		3953496	0					
ANR	3953792	Argument	resolved_name		3953496	1					
ANR	3953793	Identifier	resolved_name		3953496	0					
ANR	3953794	Argument	1		3953496	2					
ANR	3953795	PrimaryExpression	1		3953496	0					
ANR	3953796	ElseStatement	else		3953496	0					
ANR	3953797	CompoundStatement		43:9:1469:1469	3953496	0					
ANR	3953798	ExpressionStatement	"opline -> op2 . constant = zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 0 )"	6554:3:193432:193526	3953496	0	True				
ANR	3953799	AssignmentExpression	"opline -> op2 . constant = zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 0 )"		3953496	0		=			
ANR	3953800	MemberAccess	opline -> op2 . constant		3953496	0					
ANR	3953801	PtrMemberAccess	opline -> op2		3953496	0					
ANR	3953802	Identifier	opline		3953496	0					
ANR	3953803	Identifier	op2		3953496	1					
ANR	3953804	Identifier	constant		3953496	1					
ANR	3953805	CallExpression	"zend_add_const_name_literal ( CG ( active_op_array ) , resolved_name , 0 )"		3953496	1					
ANR	3953806	Callee	zend_add_const_name_literal		3953496	0					
ANR	3953807	Identifier	zend_add_const_name_literal		3953496	0					
ANR	3953808	ArgumentList	CG ( active_op_array )		3953496	1					
ANR	3953809	Argument	CG ( active_op_array )		3953496	0					
ANR	3953810	CallExpression	CG ( active_op_array )		3953496	0					
ANR	3953811	Callee	CG		3953496	0					
ANR	3953812	Identifier	CG		3953496	0					
ANR	3953813	ArgumentList	active_op_array		3953496	1					
ANR	3953814	Argument	active_op_array		3953496	0					
ANR	3953815	Identifier	active_op_array		3953496	0					
ANR	3953816	Argument	resolved_name		3953496	1					
ANR	3953817	Identifier	resolved_name		3953496	0					
ANR	3953818	Argument	0		3953496	2					
ANR	3953819	PrimaryExpression	0		3953496	0					
ANR	3953820	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	6558:1:193536:193579	3953496	10	True				
ANR	3953821	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3953496	0					
ANR	3953822	Callee	zend_alloc_cache_slot		3953496	0					
ANR	3953823	Identifier	zend_alloc_cache_slot		3953496	0					
ANR	3953824	ArgumentList	opline -> op2 . constant		3953496	1					
ANR	3953825	Argument	opline -> op2 . constant		3953496	0					
ANR	3953826	MemberAccess	opline -> op2 . constant		3953496	0					
ANR	3953827	PtrMemberAccess	opline -> op2		3953496	0					
ANR	3953828	Identifier	opline		3953496	0					
ANR	3953829	Identifier	op2		3953496	1					
ANR	3953830	Identifier	constant		3953496	1					
ANR	3953831	ReturnType	void		3953496	1					
ANR	3953832	Identifier	zend_compile_const		3953496	2					
ANR	3953833	ParameterList	"znode * result , zend_ast * ast"		3953496	3					
ANR	3953834	Parameter	znode * result	6510:24:191917:191929	3953496	0	True				
ANR	3953835	ParameterType	znode *		3953496	0					
ANR	3953836	Identifier	result		3953496	1					
ANR	3953837	Parameter	zend_ast * ast	6510:39:191932:191944	3953496	1	True				
ANR	3953838	ParameterType	zend_ast *		3953496	0					
ANR	3953839	Identifier	ast		3953496	1					
ANR	3953840	CFGEntryNode	ENTRY		3953496		True				
ANR	3953841	CFGExitNode	EXIT		3953496		True				
ANR	3953842	Symbol	zend_string_equals_literal		3953496						
ANR	3953843	Symbol	ast		3953496						
ANR	3953844	Symbol	last -> child		3953496						
ANR	3953845	Symbol	result -> u		3953496						
ANR	3953846	Symbol	opline -> extended_value		3953496						
ANR	3953847	Symbol	opline		3953496						
ANR	3953848	Symbol	IS_CONSTANT_UNQUALIFIED		3953496						
ANR	3953849	Symbol	ZEND_FETCH_CONSTANT		3953496						
ANR	3953850	Symbol	& is_fully_qualified		3953496						
ANR	3953851	Symbol	* list -> children		3953496						
ANR	3953852	Symbol	IS_CONST		3953496						
ANR	3953853	Symbol	NULL		3953496						
ANR	3953854	Symbol	last		3953496						
ANR	3953855	Symbol	IS_CONSTANT_IN_NAMESPACE		3953496						
ANR	3953856	Symbol	list		3953496						
ANR	3953857	Symbol	ZEND_AST_STMT_LIST		3953496						
ANR	3953858	Symbol	zend_add_const_name_literal		3953496						
ANR	3953859	Symbol	* last -> child		3953496						
ANR	3953860	Symbol	zend_resolve_const_name		3953496						
ANR	3953861	Symbol	* ast -> child		3953496						
ANR	3953862	Symbol	* list -> child		3953496						
ANR	3953863	Symbol	ast -> child		3953496						
ANR	3953864	Symbol	zend_ast_get_zval		3953496						
ANR	3953865	Symbol	FC		3953496						
ANR	3953866	Symbol	list -> children		3953496						
ANR	3953867	Symbol	zend_emit_op_tmp		3953496						
ANR	3953868	Symbol	opline -> op2		3953496						
ANR	3953869	Symbol	result -> op_type		3953496						
ANR	3953870	Symbol	name_ast -> attr		3953496						
ANR	3953871	Symbol	ZEND_AST_HALT_COMPILER		3953496						
ANR	3953872	Symbol	result		3953496						
ANR	3953873	Symbol	* name_ast		3953496						
ANR	3953874	Symbol	* ast		3953496						
ANR	3953875	Symbol	zend_ast_get_str		3953496						
ANR	3953876	Symbol	* * list		3953496						
ANR	3953877	Symbol	* result		3953496						
ANR	3953878	Symbol	* * ast		3953496						
ANR	3953879	Symbol	ZEND_NAME_RELATIVE		3953496						
ANR	3953880	Symbol	orig_name		3953496						
ANR	3953881	Symbol	& result -> u . constant		3953496						
ANR	3953882	Symbol	* * last		3953496						
ANR	3953883	Symbol	last -> kind		3953496						
ANR	3953884	Symbol	CG		3953496						
ANR	3953885	Symbol	list -> child		3953496						
ANR	3953886	Symbol	& result -> u		3953496						
ANR	3953887	Symbol	active_op_array		3953496						
ANR	3953888	Symbol	resolved_name		3953496						
ANR	3953889	Symbol	is_fully_qualified		3953496						
ANR	3953890	Symbol	* last		3953496						
ANR	3953891	Symbol	Z_LVAL_P		3953496						
ANR	3953892	Symbol	zend_try_ct_eval_const		3953496						
ANR	3953893	Symbol	zend_ast_get_list		3953496						
ANR	3953894	Symbol	* opline		3953496						
ANR	3953895	Symbol	* list		3953496						
ANR	3953896	Symbol	current_namespace		3953496						
ANR	3953897	Symbol	name_ast		3953496						
ANR	3953898	Symbol	opline -> op2 . constant		3953496						
ANR	3953899	Symbol	opline -> op2_type		3953496						
ANR	3953900	Function	zend_compile_class_const	6562:0:193594:195434							
ANR	3953901	FunctionDef	"zend_compile_class_const (znode * result , zend_ast * ast)"		3953900	0					
ANR	3953902	CompoundStatement		6563:0:193664:195434	3953900	0					
ANR	3953903	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 0 ] ;	6564:1:193667:193702	3953900	0	True				
ANR	3953904	IdentifierDecl	* class_ast = ast -> child [ 0 ]		3953900	0					
ANR	3953905	IdentifierDeclType	zend_ast *		3953900	0					
ANR	3953906	Identifier	class_ast		3953900	1					
ANR	3953907	AssignmentExpression	* class_ast = ast -> child [ 0 ]		3953900	2		=			
ANR	3953908	Identifier	class_ast		3953900	0					
ANR	3953909	ArrayIndexing	ast -> child [ 0 ]		3953900	1					
ANR	3953910	PtrMemberAccess	ast -> child		3953900	0					
ANR	3953911	Identifier	ast		3953900	0					
ANR	3953912	Identifier	child		3953900	1					
ANR	3953913	PrimaryExpression	0		3953900	1					
ANR	3953914	IdentifierDeclStatement	zend_ast * const_ast = ast -> child [ 1 ] ;	6565:1:193705:193740	3953900	1	True				
ANR	3953915	IdentifierDecl	* const_ast = ast -> child [ 1 ]		3953900	0					
ANR	3953916	IdentifierDeclType	zend_ast *		3953900	0					
ANR	3953917	Identifier	const_ast		3953900	1					
ANR	3953918	AssignmentExpression	* const_ast = ast -> child [ 1 ]		3953900	2		=			
ANR	3953919	Identifier	const_ast		3953900	0					
ANR	3953920	ArrayIndexing	ast -> child [ 1 ]		3953900	1					
ANR	3953921	PtrMemberAccess	ast -> child		3953900	0					
ANR	3953922	Identifier	ast		3953900	0					
ANR	3953923	Identifier	child		3953900	1					
ANR	3953924	PrimaryExpression	1		3953900	1					
ANR	3953925	IdentifierDeclStatement	"znode class_node , const_node ;"	6567:1:193744:193772	3953900	2	True				
ANR	3953926	IdentifierDecl	class_node		3953900	0					
ANR	3953927	IdentifierDeclType	znode		3953900	0					
ANR	3953928	Identifier	class_node		3953900	1					
ANR	3953929	IdentifierDecl	const_node		3953900	1					
ANR	3953930	IdentifierDeclType	znode		3953900	0					
ANR	3953931	Identifier	const_node		3953900	1					
ANR	3953932	IdentifierDeclStatement	zend_op * opline ;	6568:1:193775:193790	3953900	3	True				
ANR	3953933	IdentifierDecl	* opline		3953900	0					
ANR	3953934	IdentifierDeclType	zend_op *		3953900	0					
ANR	3953935	Identifier	opline		3953900	1					
ANR	3953936	IdentifierDeclStatement	zend_string * resolved_name ;	6569:1:193793:193819	3953900	4	True				
ANR	3953937	IdentifierDecl	* resolved_name		3953900	0					
ANR	3953938	IdentifierDeclType	zend_string *		3953900	0					
ANR	3953939	Identifier	resolved_name		3953900	1					
ANR	3953940	IfStatement	"if ( zend_try_compile_const_expr_resolve_class_name ( & result -> u . constant , class_ast , const_ast , 0 ) )"		3953900	5					
ANR	3953941	Condition	"zend_try_compile_const_expr_resolve_class_name ( & result -> u . constant , class_ast , const_ast , 0 )"	6571:5:193827:193918	3953900	0	True				
ANR	3953942	CallExpression	"zend_try_compile_const_expr_resolve_class_name ( & result -> u . constant , class_ast , const_ast , 0 )"		3953900	0					
ANR	3953943	Callee	zend_try_compile_const_expr_resolve_class_name		3953900	0					
ANR	3953944	Identifier	zend_try_compile_const_expr_resolve_class_name		3953900	0					
ANR	3953945	ArgumentList	& result -> u . constant		3953900	1					
ANR	3953946	Argument	& result -> u . constant		3953900	0					
ANR	3953947	UnaryOperationExpression	& result -> u . constant		3953900	0					
ANR	3953948	UnaryOperator	&		3953900	0					
ANR	3953949	MemberAccess	result -> u . constant		3953900	1					
ANR	3953950	PtrMemberAccess	result -> u		3953900	0					
ANR	3953951	Identifier	result		3953900	0					
ANR	3953952	Identifier	u		3953900	1					
ANR	3953953	Identifier	constant		3953900	1					
ANR	3953954	Argument	class_ast		3953900	1					
ANR	3953955	Identifier	class_ast		3953900	0					
ANR	3953956	Argument	const_ast		3953900	2					
ANR	3953957	Identifier	const_ast		3953900	0					
ANR	3953958	Argument	0		3953900	3					
ANR	3953959	PrimaryExpression	0		3953900	0					
ANR	3953960	CompoundStatement		9:99:256:256	3953900	1					
ANR	3953961	IfStatement	if ( Z_TYPE ( result -> u . constant ) == IS_NULL )		3953900	0					
ANR	3953962	Condition	Z_TYPE ( result -> u . constant ) == IS_NULL	6572:6:193929:193965	3953900	0	True				
ANR	3953963	EqualityExpression	Z_TYPE ( result -> u . constant ) == IS_NULL		3953900	0		==			
ANR	3953964	CallExpression	Z_TYPE ( result -> u . constant )		3953900	0					
ANR	3953965	Callee	Z_TYPE		3953900	0					
ANR	3953966	Identifier	Z_TYPE		3953900	0					
ANR	3953967	ArgumentList	result -> u . constant		3953900	1					
ANR	3953968	Argument	result -> u . constant		3953900	0					
ANR	3953969	MemberAccess	result -> u . constant		3953900	0					
ANR	3953970	PtrMemberAccess	result -> u		3953900	0					
ANR	3953971	Identifier	result		3953900	0					
ANR	3953972	Identifier	u		3953900	1					
ANR	3953973	Identifier	constant		3953900	1					
ANR	3953974	Identifier	IS_NULL		3953900	1					
ANR	3953975	CompoundStatement		11:3:308:385	3953900	1					
ANR	3953976	IdentifierDeclStatement	"zend_op * opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL ) ;"	6573:3:193973:194050	3953900	0	True				
ANR	3953977	IdentifierDecl	"* opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3953900	0					
ANR	3953978	IdentifierDeclType	zend_op *		3953900	0					
ANR	3953979	Identifier	opline		3953900	1					
ANR	3953980	AssignmentExpression	"* opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3953900	2		=			
ANR	3953981	Identifier	opline		3953900	0					
ANR	3953982	CallExpression	"zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3953900	1					
ANR	3953983	Callee	zend_emit_op_tmp		3953900	0					
ANR	3953984	Identifier	zend_emit_op_tmp		3953900	0					
ANR	3953985	ArgumentList	result		3953900	1					
ANR	3953986	Argument	result		3953900	0					
ANR	3953987	Identifier	result		3953900	0					
ANR	3953988	Argument	ZEND_FETCH_CLASS_NAME		3953900	1					
ANR	3953989	Identifier	ZEND_FETCH_CLASS_NAME		3953900	0					
ANR	3953990	Argument	NULL		3953900	2					
ANR	3953991	Identifier	NULL		3953900	0					
ANR	3953992	Argument	NULL		3953900	3					
ANR	3953993	Identifier	NULL		3953900	0					
ANR	3953994	ExpressionStatement	opline -> extended_value = zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) )	6574:3:194055:194134	3953900	1	True				
ANR	3953995	AssignmentExpression	opline -> extended_value = zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) )		3953900	0		=			
ANR	3953996	PtrMemberAccess	opline -> extended_value		3953900	0					
ANR	3953997	Identifier	opline		3953900	0					
ANR	3953998	Identifier	extended_value		3953900	1					
ANR	3953999	CallExpression	zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) )		3953900	1					
ANR	3954000	Callee	zend_get_class_fetch_type		3953900	0					
ANR	3954001	Identifier	zend_get_class_fetch_type		3953900	0					
ANR	3954002	ArgumentList	zend_ast_get_str ( class_ast )		3953900	1					
ANR	3954003	Argument	zend_ast_get_str ( class_ast )		3953900	0					
ANR	3954004	CallExpression	zend_ast_get_str ( class_ast )		3953900	0					
ANR	3954005	Callee	zend_ast_get_str		3953900	0					
ANR	3954006	Identifier	zend_ast_get_str		3953900	0					
ANR	3954007	ArgumentList	class_ast		3953900	1					
ANR	3954008	Argument	class_ast		3953900	0					
ANR	3954009	Identifier	class_ast		3953900	0					
ANR	3954010	ElseStatement	else		3953900	0					
ANR	3954011	CompoundStatement		13:9:480:480	3953900	0					
ANR	3954012	ExpressionStatement	result -> op_type = IS_CONST	6576:3:194150:194176	3953900	0	True				
ANR	3954013	AssignmentExpression	result -> op_type = IS_CONST		3953900	0		=			
ANR	3954014	PtrMemberAccess	result -> op_type		3953900	0					
ANR	3954015	Identifier	result		3953900	0					
ANR	3954016	Identifier	op_type		3953900	1					
ANR	3954017	Identifier	IS_CONST		3953900	1					
ANR	3954018	ReturnStatement	return ;	6578:2:194184:194190	3953900	1	True				
ANR	3954019	ExpressionStatement	zend_eval_const_expr ( & class_ast )	6581:1:194197:194229	3953900	6	True				
ANR	3954020	CallExpression	zend_eval_const_expr ( & class_ast )		3953900	0					
ANR	3954021	Callee	zend_eval_const_expr		3953900	0					
ANR	3954022	Identifier	zend_eval_const_expr		3953900	0					
ANR	3954023	ArgumentList	& class_ast		3953900	1					
ANR	3954024	Argument	& class_ast		3953900	0					
ANR	3954025	UnaryOperationExpression	& class_ast		3953900	0					
ANR	3954026	UnaryOperator	&		3953900	0					
ANR	3954027	Identifier	class_ast		3953900	1					
ANR	3954028	ExpressionStatement	zend_eval_const_expr ( & const_ast )	6582:1:194232:194264	3953900	7	True				
ANR	3954029	CallExpression	zend_eval_const_expr ( & const_ast )		3953900	0					
ANR	3954030	Callee	zend_eval_const_expr		3953900	0					
ANR	3954031	Identifier	zend_eval_const_expr		3953900	0					
ANR	3954032	ArgumentList	& const_ast		3953900	1					
ANR	3954033	Argument	& const_ast		3953900	0					
ANR	3954034	UnaryOperationExpression	& const_ast		3953900	0					
ANR	3954035	UnaryOperator	&		3953900	0					
ANR	3954036	Identifier	const_ast		3953900	1					
ANR	3954037	IfStatement	if ( class_ast -> kind == ZEND_AST_ZVAL )		3953900	8					
ANR	3954038	Condition	class_ast -> kind == ZEND_AST_ZVAL	6584:5:194272:194303	3953900	0	True				
ANR	3954039	EqualityExpression	class_ast -> kind == ZEND_AST_ZVAL		3953900	0		==			
ANR	3954040	PtrMemberAccess	class_ast -> kind		3953900	0					
ANR	3954041	Identifier	class_ast		3953900	0					
ANR	3954042	Identifier	kind		3953900	1					
ANR	3954043	Identifier	ZEND_AST_ZVAL		3953900	1					
ANR	3954044	CompoundStatement		22:39:641:641	3953900	1					
ANR	3954045	ExpressionStatement	resolved_name = zend_resolve_class_name_ast ( class_ast )	6585:2:194310:194364	3953900	0	True				
ANR	3954046	AssignmentExpression	resolved_name = zend_resolve_class_name_ast ( class_ast )		3953900	0		=			
ANR	3954047	Identifier	resolved_name		3953900	0					
ANR	3954048	CallExpression	zend_resolve_class_name_ast ( class_ast )		3953900	1					
ANR	3954049	Callee	zend_resolve_class_name_ast		3953900	0					
ANR	3954050	Identifier	zend_resolve_class_name_ast		3953900	0					
ANR	3954051	ArgumentList	class_ast		3953900	1					
ANR	3954052	Argument	class_ast		3953900	0					
ANR	3954053	Identifier	class_ast		3953900	0					
ANR	3954054	IfStatement	"if ( const_ast -> kind == ZEND_AST_ZVAL && zend_try_ct_eval_class_const ( & result -> u . constant , resolved_name , zend_ast_get_str ( const_ast ) ) )"		3953900	1					
ANR	3954055	Condition	"const_ast -> kind == ZEND_AST_ZVAL && zend_try_ct_eval_class_const ( & result -> u . constant , resolved_name , zend_ast_get_str ( const_ast ) )"	6586:6:194372:194500	3953900	0	True				
ANR	3954056	AndExpression	"const_ast -> kind == ZEND_AST_ZVAL && zend_try_ct_eval_class_const ( & result -> u . constant , resolved_name , zend_ast_get_str ( const_ast ) )"		3953900	0		&&			
ANR	3954057	EqualityExpression	const_ast -> kind == ZEND_AST_ZVAL		3953900	0		==			
ANR	3954058	PtrMemberAccess	const_ast -> kind		3953900	0					
ANR	3954059	Identifier	const_ast		3953900	0					
ANR	3954060	Identifier	kind		3953900	1					
ANR	3954061	Identifier	ZEND_AST_ZVAL		3953900	1					
ANR	3954062	CallExpression	"zend_try_ct_eval_class_const ( & result -> u . constant , resolved_name , zend_ast_get_str ( const_ast ) )"		3953900	1					
ANR	3954063	Callee	zend_try_ct_eval_class_const		3953900	0					
ANR	3954064	Identifier	zend_try_ct_eval_class_const		3953900	0					
ANR	3954065	ArgumentList	& result -> u . constant		3953900	1					
ANR	3954066	Argument	& result -> u . constant		3953900	0					
ANR	3954067	UnaryOperationExpression	& result -> u . constant		3953900	0					
ANR	3954068	UnaryOperator	&		3953900	0					
ANR	3954069	MemberAccess	result -> u . constant		3953900	1					
ANR	3954070	PtrMemberAccess	result -> u		3953900	0					
ANR	3954071	Identifier	result		3953900	0					
ANR	3954072	Identifier	u		3953900	1					
ANR	3954073	Identifier	constant		3953900	1					
ANR	3954074	Argument	resolved_name		3953900	1					
ANR	3954075	Identifier	resolved_name		3953900	0					
ANR	3954076	Argument	zend_ast_get_str ( const_ast )		3953900	2					
ANR	3954077	CallExpression	zend_ast_get_str ( const_ast )		3953900	0					
ANR	3954078	Callee	zend_ast_get_str		3953900	0					
ANR	3954079	Identifier	zend_ast_get_str		3953900	0					
ANR	3954080	ArgumentList	const_ast		3953900	1					
ANR	3954081	Argument	const_ast		3953900	0					
ANR	3954082	Identifier	const_ast		3953900	0					
ANR	3954083	CompoundStatement		24:137:838:838	3953900	1					
ANR	3954084	ExpressionStatement	result -> op_type = IS_CONST	6587:3:194508:194534	3953900	0	True				
ANR	3954085	AssignmentExpression	result -> op_type = IS_CONST		3953900	0		=			
ANR	3954086	PtrMemberAccess	result -> op_type		3953900	0					
ANR	3954087	Identifier	result		3953900	0					
ANR	3954088	Identifier	op_type		3953900	1					
ANR	3954089	Identifier	IS_CONST		3953900	1					
ANR	3954090	ExpressionStatement	zend_string_release ( resolved_name )	6588:3:194539:194573	3953900	1	True				
ANR	3954091	CallExpression	zend_string_release ( resolved_name )		3953900	0					
ANR	3954092	Callee	zend_string_release		3953900	0					
ANR	3954093	Identifier	zend_string_release		3953900	0					
ANR	3954094	ArgumentList	resolved_name		3953900	1					
ANR	3954095	Argument	resolved_name		3953900	0					
ANR	3954096	Identifier	resolved_name		3953900	0					
ANR	3954097	ReturnStatement	return ;	6589:3:194578:194584	3953900	2	True				
ANR	3954098	IfStatement	"if ( const_ast -> kind == ZEND_AST_ZVAL && zend_string_equals_literal_ci ( zend_ast_get_str ( const_ast ) , ""class"" ) )"		3953900	9					
ANR	3954099	Condition	"const_ast -> kind == ZEND_AST_ZVAL && zend_string_equals_literal_ci ( zend_ast_get_str ( const_ast ) , ""class"" )"	6592:5:194598:194700	3953900	0	True				
ANR	3954100	AndExpression	"const_ast -> kind == ZEND_AST_ZVAL && zend_string_equals_literal_ci ( zend_ast_get_str ( const_ast ) , ""class"" )"		3953900	0		&&			
ANR	3954101	EqualityExpression	const_ast -> kind == ZEND_AST_ZVAL		3953900	0		==			
ANR	3954102	PtrMemberAccess	const_ast -> kind		3953900	0					
ANR	3954103	Identifier	const_ast		3953900	0					
ANR	3954104	Identifier	kind		3953900	1					
ANR	3954105	Identifier	ZEND_AST_ZVAL		3953900	1					
ANR	3954106	CallExpression	"zend_string_equals_literal_ci ( zend_ast_get_str ( const_ast ) , ""class"" )"		3953900	1					
ANR	3954107	Callee	zend_string_equals_literal_ci		3953900	0					
ANR	3954108	Identifier	zend_string_equals_literal_ci		3953900	0					
ANR	3954109	ArgumentList	zend_ast_get_str ( const_ast )		3953900	1					
ANR	3954110	Argument	zend_ast_get_str ( const_ast )		3953900	0					
ANR	3954111	CallExpression	zend_ast_get_str ( const_ast )		3953900	0					
ANR	3954112	Callee	zend_ast_get_str		3953900	0					
ANR	3954113	Identifier	zend_ast_get_str		3953900	0					
ANR	3954114	ArgumentList	const_ast		3953900	1					
ANR	3954115	Argument	const_ast		3953900	0					
ANR	3954116	Identifier	const_ast		3953900	0					
ANR	3954117	Argument	"""class"""		3953900	1					
ANR	3954118	PrimaryExpression	"""class"""		3953900	0					
ANR	3954119	CompoundStatement		30:110:1038:1038	3953900	1					
ANR	3954120	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time ::class fetch"" )"	6593:2:194707:194815	3953900	0	True				
ANR	3954121	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time ::class fetch"" )"		3953900	0					
ANR	3954122	Callee	zend_error_noreturn		3953900	0					
ANR	3954123	Identifier	zend_error_noreturn		3953900	0					
ANR	3954124	ArgumentList	E_COMPILE_ERROR		3953900	1					
ANR	3954125	Argument	E_COMPILE_ERROR		3953900	0					
ANR	3954126	Identifier	E_COMPILE_ERROR		3953900	0					
ANR	3954127	Argument	"""Dynamic class names are not allowed in compile-time ::class fetch"""		3953900	1					
ANR	3954128	PrimaryExpression	"""Dynamic class names are not allowed in compile-time ::class fetch"""		3953900	0					
ANR	3954129	IfStatement	if ( zend_is_const_default_class_ref ( class_ast ) )		3953900	10					
ANR	3954130	Condition	zend_is_const_default_class_ref ( class_ast )	6597:5:194826:194867	3953900	0	True				
ANR	3954131	CallExpression	zend_is_const_default_class_ref ( class_ast )		3953900	0					
ANR	3954132	Callee	zend_is_const_default_class_ref		3953900	0					
ANR	3954133	Identifier	zend_is_const_default_class_ref		3953900	0					
ANR	3954134	ArgumentList	class_ast		3953900	1					
ANR	3954135	Argument	class_ast		3953900	0					
ANR	3954136	Identifier	class_ast		3953900	0					
ANR	3954137	CompoundStatement		35:49:1205:1205	3953900	1					
ANR	3954138	ExpressionStatement	class_node . op_type = IS_CONST	6598:2:194874:194903	3953900	0	True				
ANR	3954139	AssignmentExpression	class_node . op_type = IS_CONST		3953900	0		=			
ANR	3954140	MemberAccess	class_node . op_type		3953900	0					
ANR	3954141	Identifier	class_node		3953900	0					
ANR	3954142	Identifier	op_type		3953900	1					
ANR	3954143	Identifier	IS_CONST		3953900	1					
ANR	3954144	ExpressionStatement	"ZVAL_STR ( & class_node . u . constant , resolved_name )"	6599:2:194907:194954	3953900	1	True				
ANR	3954145	CallExpression	"ZVAL_STR ( & class_node . u . constant , resolved_name )"		3953900	0					
ANR	3954146	Callee	ZVAL_STR		3953900	0					
ANR	3954147	Identifier	ZVAL_STR		3953900	0					
ANR	3954148	ArgumentList	& class_node . u . constant		3953900	1					
ANR	3954149	Argument	& class_node . u . constant		3953900	0					
ANR	3954150	UnaryOperationExpression	& class_node . u . constant		3953900	0					
ANR	3954151	UnaryOperator	&		3953900	0					
ANR	3954152	MemberAccess	class_node . u . constant		3953900	1					
ANR	3954153	MemberAccess	class_node . u		3953900	0					
ANR	3954154	Identifier	class_node		3953900	0					
ANR	3954155	Identifier	u		3953900	1					
ANR	3954156	Identifier	constant		3953900	1					
ANR	3954157	Argument	resolved_name		3953900	1					
ANR	3954158	Identifier	resolved_name		3953900	0					
ANR	3954159	ElseStatement	else		3953900	0					
ANR	3954160	CompoundStatement		38:8:1299:1299	3953900	0					
ANR	3954161	IfStatement	if ( class_ast -> kind == ZEND_AST_ZVAL )		3953900	0					
ANR	3954162	Condition	class_ast -> kind == ZEND_AST_ZVAL	6601:6:194972:195003	3953900	0	True				
ANR	3954163	EqualityExpression	class_ast -> kind == ZEND_AST_ZVAL		3953900	0		==			
ANR	3954164	PtrMemberAccess	class_ast -> kind		3953900	0					
ANR	3954165	Identifier	class_ast		3953900	0					
ANR	3954166	Identifier	kind		3953900	1					
ANR	3954167	Identifier	ZEND_AST_ZVAL		3953900	1					
ANR	3954168	CompoundStatement		39:40:1341:1341	3953900	1					
ANR	3954169	ExpressionStatement	zend_string_release ( resolved_name )	6602:3:195011:195045	3953900	0	True				
ANR	3954170	CallExpression	zend_string_release ( resolved_name )		3953900	0					
ANR	3954171	Callee	zend_string_release		3953900	0					
ANR	3954172	Identifier	zend_string_release		3953900	0					
ANR	3954173	ArgumentList	resolved_name		3953900	1					
ANR	3954174	Argument	resolved_name		3953900	0					
ANR	3954175	Identifier	resolved_name		3953900	0					
ANR	3954176	ExpressionStatement	"zend_compile_class_ref ( & class_node , class_ast , 1 )"	6604:2:195053:195102	3953900	1	True				
ANR	3954177	CallExpression	"zend_compile_class_ref ( & class_node , class_ast , 1 )"		3953900	0					
ANR	3954178	Callee	zend_compile_class_ref		3953900	0					
ANR	3954179	Identifier	zend_compile_class_ref		3953900	0					
ANR	3954180	ArgumentList	& class_node		3953900	1					
ANR	3954181	Argument	& class_node		3953900	0					
ANR	3954182	UnaryOperationExpression	& class_node		3953900	0					
ANR	3954183	UnaryOperator	&		3953900	0					
ANR	3954184	Identifier	class_node		3953900	1					
ANR	3954185	Argument	class_ast		3953900	1					
ANR	3954186	Identifier	class_ast		3953900	0					
ANR	3954187	Argument	1		3953900	2					
ANR	3954188	PrimaryExpression	1		3953900	0					
ANR	3954189	ExpressionStatement	"zend_compile_expr ( & const_node , const_ast )"	6607:1:195109:195150	3953900	11	True				
ANR	3954190	CallExpression	"zend_compile_expr ( & const_node , const_ast )"		3953900	0					
ANR	3954191	Callee	zend_compile_expr		3953900	0					
ANR	3954192	Identifier	zend_compile_expr		3953900	0					
ANR	3954193	ArgumentList	& const_node		3953900	1					
ANR	3954194	Argument	& const_node		3953900	0					
ANR	3954195	UnaryOperationExpression	& const_node		3953900	0					
ANR	3954196	UnaryOperator	&		3953900	0					
ANR	3954197	Identifier	const_node		3953900	1					
ANR	3954198	Argument	const_ast		3953900	1					
ANR	3954199	Identifier	const_ast		3953900	0					
ANR	3954200	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_FETCH_CONSTANT , NULL , & const_node )"	6609:1:195154:195227	3953900	12	True				
ANR	3954201	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_FETCH_CONSTANT , NULL , & const_node )"		3953900	0		=			
ANR	3954202	Identifier	opline		3953900	0					
ANR	3954203	CallExpression	"zend_emit_op_tmp ( result , ZEND_FETCH_CONSTANT , NULL , & const_node )"		3953900	1					
ANR	3954204	Callee	zend_emit_op_tmp		3953900	0					
ANR	3954205	Identifier	zend_emit_op_tmp		3953900	0					
ANR	3954206	ArgumentList	result		3953900	1					
ANR	3954207	Argument	result		3953900	0					
ANR	3954208	Identifier	result		3953900	0					
ANR	3954209	Argument	ZEND_FETCH_CONSTANT		3953900	1					
ANR	3954210	Identifier	ZEND_FETCH_CONSTANT		3953900	0					
ANR	3954211	Argument	NULL		3953900	2					
ANR	3954212	Identifier	NULL		3953900	0					
ANR	3954213	Argument	& const_node		3953900	3					
ANR	3954214	UnaryOperationExpression	& const_node		3953900	0					
ANR	3954215	UnaryOperator	&		3953900	0					
ANR	3954216	Identifier	const_node		3953900	1					
ANR	3954217	ExpressionStatement	"zend_set_class_name_op1 ( opline , & class_node )"	6611:1:195231:195275	3953900	13	True				
ANR	3954218	CallExpression	"zend_set_class_name_op1 ( opline , & class_node )"		3953900	0					
ANR	3954219	Callee	zend_set_class_name_op1		3953900	0					
ANR	3954220	Identifier	zend_set_class_name_op1		3953900	0					
ANR	3954221	ArgumentList	opline		3953900	1					
ANR	3954222	Argument	opline		3953900	0					
ANR	3954223	Identifier	opline		3953900	0					
ANR	3954224	Argument	& class_node		3953900	1					
ANR	3954225	UnaryOperationExpression	& class_node		3953900	0					
ANR	3954226	UnaryOperator	&		3953900	0					
ANR	3954227	Identifier	class_node		3953900	1					
ANR	3954228	IfStatement	if ( opline -> op1_type == IS_CONST )		3953900	14					
ANR	3954229	Condition	opline -> op1_type == IS_CONST	6613:5:195283:195310	3953900	0	True				
ANR	3954230	EqualityExpression	opline -> op1_type == IS_CONST		3953900	0		==			
ANR	3954231	PtrMemberAccess	opline -> op1_type		3953900	0					
ANR	3954232	Identifier	opline		3953900	0					
ANR	3954233	Identifier	op1_type		3953900	1					
ANR	3954234	Identifier	IS_CONST		3953900	1					
ANR	3954235	CompoundStatement		51:35:1648:1648	3953900	1					
ANR	3954236	ExpressionStatement	zend_alloc_cache_slot ( opline -> op2 . constant )	6614:2:195317:195360	3953900	0	True				
ANR	3954237	CallExpression	zend_alloc_cache_slot ( opline -> op2 . constant )		3953900	0					
ANR	3954238	Callee	zend_alloc_cache_slot		3953900	0					
ANR	3954239	Identifier	zend_alloc_cache_slot		3953900	0					
ANR	3954240	ArgumentList	opline -> op2 . constant		3953900	1					
ANR	3954241	Argument	opline -> op2 . constant		3953900	0					
ANR	3954242	MemberAccess	opline -> op2 . constant		3953900	0					
ANR	3954243	PtrMemberAccess	opline -> op2		3953900	0					
ANR	3954244	Identifier	opline		3953900	0					
ANR	3954245	Identifier	op2		3953900	1					
ANR	3954246	Identifier	constant		3953900	1					
ANR	3954247	ElseStatement	else		3953900	0					
ANR	3954248	CompoundStatement		53:8:1705:1705	3953900	0					
ANR	3954249	ExpressionStatement	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )	6616:2:195374:195429	3953900	0	True				
ANR	3954250	CallExpression	zend_alloc_polymorphic_cache_slot ( opline -> op2 . constant )		3953900	0					
ANR	3954251	Callee	zend_alloc_polymorphic_cache_slot		3953900	0					
ANR	3954252	Identifier	zend_alloc_polymorphic_cache_slot		3953900	0					
ANR	3954253	ArgumentList	opline -> op2 . constant		3953900	1					
ANR	3954254	Argument	opline -> op2 . constant		3953900	0					
ANR	3954255	MemberAccess	opline -> op2 . constant		3953900	0					
ANR	3954256	PtrMemberAccess	opline -> op2		3953900	0					
ANR	3954257	Identifier	opline		3953900	0					
ANR	3954258	Identifier	op2		3953900	1					
ANR	3954259	Identifier	constant		3953900	1					
ANR	3954260	ReturnType	void		3953900	1					
ANR	3954261	Identifier	zend_compile_class_const		3953900	2					
ANR	3954262	ParameterList	"znode * result , zend_ast * ast"		3953900	3					
ANR	3954263	Parameter	znode * result	6562:30:193624:193636	3953900	0	True				
ANR	3954264	ParameterType	znode *		3953900	0					
ANR	3954265	Identifier	result		3953900	1					
ANR	3954266	Parameter	zend_ast * ast	6562:45:193639:193651	3953900	1	True				
ANR	3954267	ParameterType	zend_ast *		3953900	0					
ANR	3954268	Identifier	ast		3953900	1					
ANR	3954269	CFGEntryNode	ENTRY		3953900		True				
ANR	3954270	CFGExitNode	EXIT		3953900		True				
ANR	3954271	Symbol	ast		3953900						
ANR	3954272	Symbol	const_ast -> kind		3953900						
ANR	3954273	Symbol	E_COMPILE_ERROR		3953900						
ANR	3954274	Symbol	& class_node		3953900						
ANR	3954275	Symbol	Z_TYPE		3953900						
ANR	3954276	Symbol	result -> u		3953900						
ANR	3954277	Symbol	opline -> extended_value		3953900						
ANR	3954278	Symbol	& const_node		3953900						
ANR	3954279	Symbol	opline		3953900						
ANR	3954280	Symbol	ZEND_AST_ZVAL		3953900						
ANR	3954281	Symbol	ZEND_FETCH_CONSTANT		3953900						
ANR	3954282	Symbol	class_node . u		3953900						
ANR	3954283	Symbol	IS_CONST		3953900						
ANR	3954284	Symbol	NULL		3953900						
ANR	3954285	Symbol	zend_try_compile_const_expr_resolve_class_name		3953900						
ANR	3954286	Symbol	opline -> op1_type		3953900						
ANR	3954287	Symbol	zend_string_equals_literal_ci		3953900						
ANR	3954288	Symbol	* const_ast		3953900						
ANR	3954289	Symbol	* ast -> child		3953900						
ANR	3954290	Symbol	ast -> child		3953900						
ANR	3954291	Symbol	zend_is_const_default_class_ref		3953900						
ANR	3954292	Symbol	zend_emit_op_tmp		3953900						
ANR	3954293	Symbol	opline -> op2		3953900						
ANR	3954294	Symbol	class_node		3953900						
ANR	3954295	Symbol	class_ast		3953900						
ANR	3954296	Symbol	result -> op_type		3953900						
ANR	3954297	Symbol	result		3953900						
ANR	3954298	Symbol	& class_ast		3953900						
ANR	3954299	Symbol	zend_try_ct_eval_class_const		3953900						
ANR	3954300	Symbol	class_node . op_type		3953900						
ANR	3954301	Symbol	& class_node . u . constant		3953900						
ANR	3954302	Symbol	* ast		3953900						
ANR	3954303	Symbol	zend_ast_get_str		3953900						
ANR	3954304	Symbol	IS_NULL		3953900						
ANR	3954305	Symbol	* result		3953900						
ANR	3954306	Symbol	ZEND_FETCH_CLASS_NAME		3953900						
ANR	3954307	Symbol	* * ast		3953900						
ANR	3954308	Symbol	& const_ast		3953900						
ANR	3954309	Symbol	& result -> u . constant		3953900						
ANR	3954310	Symbol	zend_get_class_fetch_type		3953900						
ANR	3954311	Symbol	* class_ast		3953900						
ANR	3954312	Symbol	& class_node . u		3953900						
ANR	3954313	Symbol	result -> u . constant		3953900						
ANR	3954314	Symbol	& result -> u		3953900						
ANR	3954315	Symbol	zend_resolve_class_name_ast		3953900						
ANR	3954316	Symbol	resolved_name		3953900						
ANR	3954317	Symbol	class_ast -> kind		3953900						
ANR	3954318	Symbol	* opline		3953900						
ANR	3954319	Symbol	const_ast		3953900						
ANR	3954320	Symbol	opline -> op2 . constant		3953900						
ANR	3954321	Symbol	const_node		3953900						
ANR	3954322	Function	zend_compile_resolve_class_name	6621:0:195447:196443							
ANR	3954323	FunctionDef	"zend_compile_resolve_class_name (znode * result , zend_ast * ast)"		3954322	0					
ANR	3954324	CompoundStatement		6622:0:195524:196443	3954322	0					
ANR	3954325	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	6623:1:195527:195561	3954322	0	True				
ANR	3954326	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3954322	0					
ANR	3954327	IdentifierDeclType	zend_ast *		3954322	0					
ANR	3954328	Identifier	name_ast		3954322	1					
ANR	3954329	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3954322	2		=			
ANR	3954330	Identifier	name_ast		3954322	0					
ANR	3954331	ArrayIndexing	ast -> child [ 0 ]		3954322	1					
ANR	3954332	PtrMemberAccess	ast -> child		3954322	0					
ANR	3954333	Identifier	ast		3954322	0					
ANR	3954334	Identifier	child		3954322	1					
ANR	3954335	PrimaryExpression	0		3954322	1					
ANR	3954336	IdentifierDeclStatement	uint32_t fetch_type = zend_get_class_fetch_type ( zend_ast_get_str ( name_ast ) ) ;	6624:1:195564:195639	3954322	1	True				
ANR	3954337	IdentifierDecl	fetch_type = zend_get_class_fetch_type ( zend_ast_get_str ( name_ast ) )		3954322	0					
ANR	3954338	IdentifierDeclType	uint32_t		3954322	0					
ANR	3954339	Identifier	fetch_type		3954322	1					
ANR	3954340	AssignmentExpression	fetch_type = zend_get_class_fetch_type ( zend_ast_get_str ( name_ast ) )		3954322	2		=			
ANR	3954341	Identifier	fetch_type		3954322	0					
ANR	3954342	CallExpression	zend_get_class_fetch_type ( zend_ast_get_str ( name_ast ) )		3954322	1					
ANR	3954343	Callee	zend_get_class_fetch_type		3954322	0					
ANR	3954344	Identifier	zend_get_class_fetch_type		3954322	0					
ANR	3954345	ArgumentList	zend_ast_get_str ( name_ast )		3954322	1					
ANR	3954346	Argument	zend_ast_get_str ( name_ast )		3954322	0					
ANR	3954347	CallExpression	zend_ast_get_str ( name_ast )		3954322	0					
ANR	3954348	Callee	zend_ast_get_str		3954322	0					
ANR	3954349	Identifier	zend_ast_get_str		3954322	0					
ANR	3954350	ArgumentList	name_ast		3954322	1					
ANR	3954351	Argument	name_ast		3954322	0					
ANR	3954352	Identifier	name_ast		3954322	0					
ANR	3954353	ExpressionStatement	zend_ensure_valid_class_fetch_type ( fetch_type )	6625:1:195642:195688	3954322	2	True				
ANR	3954354	CallExpression	zend_ensure_valid_class_fetch_type ( fetch_type )		3954322	0					
ANR	3954355	Callee	zend_ensure_valid_class_fetch_type		3954322	0					
ANR	3954356	Identifier	zend_ensure_valid_class_fetch_type		3954322	0					
ANR	3954357	ArgumentList	fetch_type		3954322	1					
ANR	3954358	Argument	fetch_type		3954322	0					
ANR	3954359	Identifier	fetch_type		3954322	0					
ANR	3954360	SwitchStatement	switch ( fetch_type )		3954322	3					
ANR	3954361	Condition	fetch_type	6627:9:195700:195709	3954322	0	True				
ANR	3954362	Identifier	fetch_type		3954322	0					
ANR	3954363	CompoundStatement		6:21:187:187	3954322	1					
ANR	3954364	Label	case ZEND_FETCH_CLASS_SELF :	6628:2:195716:195742	3954322	0	True				
ANR	3954365	Identifier	ZEND_FETCH_CLASS_SELF		3954322	0					
ANR	3954366	IfStatement	if ( CG ( active_class_entry ) && zend_is_scope_known ( ) )		3954322	1					
ANR	3954367	Condition	CG ( active_class_entry ) && zend_is_scope_known ( )	6629:7:195751:195797	3954322	0	True				
ANR	3954368	AndExpression	CG ( active_class_entry ) && zend_is_scope_known ( )		3954322	0		&&			
ANR	3954369	CallExpression	CG ( active_class_entry )		3954322	0					
ANR	3954370	Callee	CG		3954322	0					
ANR	3954371	Identifier	CG		3954322	0					
ANR	3954372	ArgumentList	active_class_entry		3954322	1					
ANR	3954373	Argument	active_class_entry		3954322	0					
ANR	3954374	Identifier	active_class_entry		3954322	0					
ANR	3954375	CallExpression	zend_is_scope_known ( )		3954322	1					
ANR	3954376	Callee	zend_is_scope_known		3954322	0					
ANR	3954377	Identifier	zend_is_scope_known		3954322	0					
ANR	3954378	ArgumentList			3954322	1					
ANR	3954379	CompoundStatement		8:56:275:275	3954322	1					
ANR	3954380	ExpressionStatement	result -> op_type = IS_CONST	6630:4:195806:195832	3954322	0	True				
ANR	3954381	AssignmentExpression	result -> op_type = IS_CONST		3954322	0		=			
ANR	3954382	PtrMemberAccess	result -> op_type		3954322	0					
ANR	3954383	Identifier	result		3954322	0					
ANR	3954384	Identifier	op_type		3954322	1					
ANR	3954385	Identifier	IS_CONST		3954322	1					
ANR	3954386	ExpressionStatement	"ZVAL_STR_COPY ( & result -> u . constant , CG ( active_class_entry ) -> name )"	6631:4:195838:195902	3954322	1	True				
ANR	3954387	CallExpression	"ZVAL_STR_COPY ( & result -> u . constant , CG ( active_class_entry ) -> name )"		3954322	0					
ANR	3954388	Callee	ZVAL_STR_COPY		3954322	0					
ANR	3954389	Identifier	ZVAL_STR_COPY		3954322	0					
ANR	3954390	ArgumentList	& result -> u . constant		3954322	1					
ANR	3954391	Argument	& result -> u . constant		3954322	0					
ANR	3954392	UnaryOperationExpression	& result -> u . constant		3954322	0					
ANR	3954393	UnaryOperator	&		3954322	0					
ANR	3954394	MemberAccess	result -> u . constant		3954322	1					
ANR	3954395	PtrMemberAccess	result -> u		3954322	0					
ANR	3954396	Identifier	result		3954322	0					
ANR	3954397	Identifier	u		3954322	1					
ANR	3954398	Identifier	constant		3954322	1					
ANR	3954399	Argument	CG ( active_class_entry ) -> name		3954322	1					
ANR	3954400	PtrMemberAccess	CG ( active_class_entry ) -> name		3954322	0					
ANR	3954401	CallExpression	CG ( active_class_entry )		3954322	0					
ANR	3954402	Callee	CG		3954322	0					
ANR	3954403	Identifier	CG		3954322	0					
ANR	3954404	ArgumentList	active_class_entry		3954322	1					
ANR	3954405	Argument	active_class_entry		3954322	0					
ANR	3954406	Identifier	active_class_entry		3954322	0					
ANR	3954407	Identifier	name		3954322	1					
ANR	3954408	ElseStatement	else		3954322	0					
ANR	3954409	CompoundStatement		12:4:395:472	3954322	0					
ANR	3954410	IdentifierDeclStatement	"zend_op * opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL ) ;"	6633:4:195920:195997	3954322	0	True				
ANR	3954411	IdentifierDecl	"* opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3954322	0					
ANR	3954412	IdentifierDeclType	zend_op *		3954322	0					
ANR	3954413	Identifier	opline		3954322	1					
ANR	3954414	AssignmentExpression	"* opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3954322	2		=			
ANR	3954415	Identifier	opline		3954322	0					
ANR	3954416	CallExpression	"zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3954322	1					
ANR	3954417	Callee	zend_emit_op_tmp		3954322	0					
ANR	3954418	Identifier	zend_emit_op_tmp		3954322	0					
ANR	3954419	ArgumentList	result		3954322	1					
ANR	3954420	Argument	result		3954322	0					
ANR	3954421	Identifier	result		3954322	0					
ANR	3954422	Argument	ZEND_FETCH_CLASS_NAME		3954322	1					
ANR	3954423	Identifier	ZEND_FETCH_CLASS_NAME		3954322	0					
ANR	3954424	Argument	NULL		3954322	2					
ANR	3954425	Identifier	NULL		3954322	0					
ANR	3954426	Argument	NULL		3954322	3					
ANR	3954427	Identifier	NULL		3954322	0					
ANR	3954428	ExpressionStatement	opline -> extended_value = fetch_type	6634:4:196003:196038	3954322	1	True				
ANR	3954429	AssignmentExpression	opline -> extended_value = fetch_type		3954322	0		=			
ANR	3954430	PtrMemberAccess	opline -> extended_value		3954322	0					
ANR	3954431	Identifier	opline		3954322	0					
ANR	3954432	Identifier	extended_value		3954322	1					
ANR	3954433	Identifier	fetch_type		3954322	1					
ANR	3954434	BreakStatement	break ;	6636:3:196048:196053	3954322	2	True				
ANR	3954435	Label	case ZEND_FETCH_CLASS_STATIC :	6637:2:196057:196085	3954322	3	True				
ANR	3954436	Identifier	ZEND_FETCH_CLASS_STATIC		3954322	0					
ANR	3954437	Label	case ZEND_FETCH_CLASS_PARENT :	6638:2:196089:196117	3954322	4	True				
ANR	3954438	Identifier	ZEND_FETCH_CLASS_PARENT		3954322	0					
ANR	3954439	CompoundStatement		19:4:603:680	3954322	5					
ANR	3954440	IdentifierDeclStatement	"zend_op * opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL ) ;"	6640:4:196128:196205	3954322	0	True				
ANR	3954441	IdentifierDecl	"* opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3954322	0					
ANR	3954442	IdentifierDeclType	zend_op *		3954322	0					
ANR	3954443	Identifier	opline		3954322	1					
ANR	3954444	AssignmentExpression	"* opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3954322	2		=			
ANR	3954445	Identifier	opline		3954322	0					
ANR	3954446	CallExpression	"zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3954322	1					
ANR	3954447	Callee	zend_emit_op_tmp		3954322	0					
ANR	3954448	Identifier	zend_emit_op_tmp		3954322	0					
ANR	3954449	ArgumentList	result		3954322	1					
ANR	3954450	Argument	result		3954322	0					
ANR	3954451	Identifier	result		3954322	0					
ANR	3954452	Argument	ZEND_FETCH_CLASS_NAME		3954322	1					
ANR	3954453	Identifier	ZEND_FETCH_CLASS_NAME		3954322	0					
ANR	3954454	Argument	NULL		3954322	2					
ANR	3954455	Identifier	NULL		3954322	0					
ANR	3954456	Argument	NULL		3954322	3					
ANR	3954457	Identifier	NULL		3954322	0					
ANR	3954458	ExpressionStatement	opline -> extended_value = fetch_type	6641:4:196211:196246	3954322	1	True				
ANR	3954459	AssignmentExpression	opline -> extended_value = fetch_type		3954322	0		=			
ANR	3954460	PtrMemberAccess	opline -> extended_value		3954322	0					
ANR	3954461	Identifier	opline		3954322	0					
ANR	3954462	Identifier	extended_value		3954322	1					
ANR	3954463	Identifier	fetch_type		3954322	1					
ANR	3954464	BreakStatement	break ;	6643:3:196256:196261	3954322	6	True				
ANR	3954465	Label	case ZEND_FETCH_CLASS_DEFAULT :	6644:2:196265:196294	3954322	7	True				
ANR	3954466	Identifier	ZEND_FETCH_CLASS_DEFAULT		3954322	0					
ANR	3954467	ExpressionStatement	result -> op_type = IS_CONST	6645:3:196299:196325	3954322	8	True				
ANR	3954468	AssignmentExpression	result -> op_type = IS_CONST		3954322	0		=			
ANR	3954469	PtrMemberAccess	result -> op_type		3954322	0					
ANR	3954470	Identifier	result		3954322	0					
ANR	3954471	Identifier	op_type		3954322	1					
ANR	3954472	Identifier	IS_CONST		3954322	1					
ANR	3954473	ExpressionStatement	"ZVAL_STR ( & result -> u . constant , zend_resolve_class_name_ast ( name_ast ) )"	6646:3:196330:196398	3954322	9	True				
ANR	3954474	CallExpression	"ZVAL_STR ( & result -> u . constant , zend_resolve_class_name_ast ( name_ast ) )"		3954322	0					
ANR	3954475	Callee	ZVAL_STR		3954322	0					
ANR	3954476	Identifier	ZVAL_STR		3954322	0					
ANR	3954477	ArgumentList	& result -> u . constant		3954322	1					
ANR	3954478	Argument	& result -> u . constant		3954322	0					
ANR	3954479	UnaryOperationExpression	& result -> u . constant		3954322	0					
ANR	3954480	UnaryOperator	&		3954322	0					
ANR	3954481	MemberAccess	result -> u . constant		3954322	1					
ANR	3954482	PtrMemberAccess	result -> u		3954322	0					
ANR	3954483	Identifier	result		3954322	0					
ANR	3954484	Identifier	u		3954322	1					
ANR	3954485	Identifier	constant		3954322	1					
ANR	3954486	Argument	zend_resolve_class_name_ast ( name_ast )		3954322	1					
ANR	3954487	CallExpression	zend_resolve_class_name_ast ( name_ast )		3954322	0					
ANR	3954488	Callee	zend_resolve_class_name_ast		3954322	0					
ANR	3954489	Identifier	zend_resolve_class_name_ast		3954322	0					
ANR	3954490	ArgumentList	name_ast		3954322	1					
ANR	3954491	Argument	name_ast		3954322	0					
ANR	3954492	Identifier	name_ast		3954322	0					
ANR	3954493	BreakStatement	break ;	6647:3:196403:196408	3954322	10	True				
ANR	3954494	Statement	EMPTY_SWITCH_DEFAULT_CASE	6648:2:196412:196436	3954322	11	True				
ANR	3954495	Statement	(	6648:27:196437:196437	3954322	12	True				
ANR	3954496	Statement	)	6648:28:196438:196438	3954322	13	True				
ANR	3954497	ReturnType	void		3954322	1					
ANR	3954498	Identifier	zend_compile_resolve_class_name		3954322	2					
ANR	3954499	ParameterList	"znode * result , zend_ast * ast"		3954322	3					
ANR	3954500	Parameter	znode * result	6621:37:195484:195496	3954322	0	True				
ANR	3954501	ParameterType	znode *		3954322	0					
ANR	3954502	Identifier	result		3954322	1					
ANR	3954503	Parameter	zend_ast * ast	6621:52:195499:195511	3954322	1	True				
ANR	3954504	ParameterType	zend_ast *		3954322	0					
ANR	3954505	Identifier	ast		3954322	1					
ANR	3954506	CFGEntryNode	ENTRY		3954322		True				
ANR	3954507	CFGExitNode	EXIT		3954322		True				
ANR	3954508	Symbol	zend_emit_op_tmp		3954322						
ANR	3954509	Symbol	ast		3954322						
ANR	3954510	Symbol	active_class_entry		3954322						
ANR	3954511	Symbol	* CG		3954322						
ANR	3954512	Symbol	result -> op_type		3954322						
ANR	3954513	Symbol	result -> u		3954322						
ANR	3954514	Symbol	opline -> extended_value		3954322						
ANR	3954515	Symbol	result		3954322						
ANR	3954516	Symbol	* ast		3954322						
ANR	3954517	Symbol	zend_ast_get_str		3954322						
ANR	3954518	Symbol	opline		3954322						
ANR	3954519	Symbol	* result		3954322						
ANR	3954520	Symbol	ZEND_FETCH_CLASS_NAME		3954322						
ANR	3954521	Symbol	* * ast		3954322						
ANR	3954522	Symbol	& result -> u . constant		3954322						
ANR	3954523	Symbol	zend_get_class_fetch_type		3954322						
ANR	3954524	Symbol	zend_is_scope_known		3954322						
ANR	3954525	Symbol	fetch_type		3954322						
ANR	3954526	Symbol	IS_CONST		3954322						
ANR	3954527	Symbol	NULL		3954322						
ANR	3954528	Symbol	CG		3954322						
ANR	3954529	Symbol	& result -> u		3954322						
ANR	3954530	Symbol	zend_resolve_class_name_ast		3954322						
ANR	3954531	Symbol	* opline		3954322						
ANR	3954532	Symbol	name_ast		3954322						
ANR	3954533	Symbol	* ast -> child		3954322						
ANR	3954534	Symbol	CG ( active_class_entry ) -> name		3954322						
ANR	3954535	Symbol	ast -> child		3954322						
ANR	3954536	Function	zend_compile_rope_add	6653:0:196456:196940							
ANR	3954537	FunctionDef	"zend_compile_rope_add (znode * result , uint32_t num , znode * elem_node)"		3954536	0					
ANR	3954538	CompoundStatement		6654:0:196551:196940	3954536	0					
ANR	3954539	IdentifierDeclStatement	zend_op * opline = get_next_op ( CG ( active_op_array ) ) ;	6655:1:196554:196604	3954536	0	True				
ANR	3954540	IdentifierDecl	* opline = get_next_op ( CG ( active_op_array ) )		3954536	0					
ANR	3954541	IdentifierDeclType	zend_op *		3954536	0					
ANR	3954542	Identifier	opline		3954536	1					
ANR	3954543	AssignmentExpression	* opline = get_next_op ( CG ( active_op_array ) )		3954536	2		=			
ANR	3954544	Identifier	opline		3954536	0					
ANR	3954545	CallExpression	get_next_op ( CG ( active_op_array ) )		3954536	1					
ANR	3954546	Callee	get_next_op		3954536	0					
ANR	3954547	Identifier	get_next_op		3954536	0					
ANR	3954548	ArgumentList	CG ( active_op_array )		3954536	1					
ANR	3954549	Argument	CG ( active_op_array )		3954536	0					
ANR	3954550	CallExpression	CG ( active_op_array )		3954536	0					
ANR	3954551	Callee	CG		3954536	0					
ANR	3954552	Identifier	CG		3954536	0					
ANR	3954553	ArgumentList	active_op_array		3954536	1					
ANR	3954554	Argument	active_op_array		3954536	0					
ANR	3954555	Identifier	active_op_array		3954536	0					
ANR	3954556	IfStatement	if ( num == 0 )		3954536	1					
ANR	3954557	Condition	num == 0	6657:5:196612:196619	3954536	0	True				
ANR	3954558	EqualityExpression	num == 0		3954536	0		==			
ANR	3954559	Identifier	num		3954536	0					
ANR	3954560	PrimaryExpression	0		3954536	1					
ANR	3954561	CompoundStatement		4:15:70:70	3954536	1					
ANR	3954562	ExpressionStatement	result -> op_type = IS_TMP_VAR	6658:2:196626:196654	3954536	0	True				
ANR	3954563	AssignmentExpression	result -> op_type = IS_TMP_VAR		3954536	0		=			
ANR	3954564	PtrMemberAccess	result -> op_type		3954536	0					
ANR	3954565	Identifier	result		3954536	0					
ANR	3954566	Identifier	op_type		3954536	1					
ANR	3954567	Identifier	IS_TMP_VAR		3954536	1					
ANR	3954568	ExpressionStatement	result -> u . op . var = - 1	6659:2:196658:196679	3954536	1	True				
ANR	3954569	AssignmentExpression	result -> u . op . var = - 1		3954536	0		=			
ANR	3954570	MemberAccess	result -> u . op . var		3954536	0					
ANR	3954571	MemberAccess	result -> u . op		3954536	0					
ANR	3954572	PtrMemberAccess	result -> u		3954536	0					
ANR	3954573	Identifier	result		3954536	0					
ANR	3954574	Identifier	u		3954536	1					
ANR	3954575	Identifier	op		3954536	1					
ANR	3954576	Identifier	var		3954536	1					
ANR	3954577	UnaryOperationExpression	- 1		3954536	1					
ANR	3954578	UnaryOperator	-		3954536	0					
ANR	3954579	PrimaryExpression	1		3954536	1					
ANR	3954580	ExpressionStatement	opline -> opcode = ZEND_ROPE_INIT	6660:2:196683:196714	3954536	2	True				
ANR	3954581	AssignmentExpression	opline -> opcode = ZEND_ROPE_INIT		3954536	0		=			
ANR	3954582	PtrMemberAccess	opline -> opcode		3954536	0					
ANR	3954583	Identifier	opline		3954536	0					
ANR	3954584	Identifier	opcode		3954536	1					
ANR	3954585	Identifier	ZEND_ROPE_INIT		3954536	1					
ANR	3954586	ExpressionStatement	SET_UNUSED ( opline -> op1 )	6661:2:196718:196741	3954536	3	True				
ANR	3954587	CallExpression	SET_UNUSED ( opline -> op1 )		3954536	0					
ANR	3954588	Callee	SET_UNUSED		3954536	0					
ANR	3954589	Identifier	SET_UNUSED		3954536	0					
ANR	3954590	ArgumentList	opline -> op1		3954536	1					
ANR	3954591	Argument	opline -> op1		3954536	0					
ANR	3954592	PtrMemberAccess	opline -> op1		3954536	0					
ANR	3954593	Identifier	opline		3954536	0					
ANR	3954594	Identifier	op1		3954536	1					
ANR	3954595	ElseStatement	else		3954536	0					
ANR	3954596	CompoundStatement		9:8:199:199	3954536	0					
ANR	3954597	ExpressionStatement	opline -> opcode = ZEND_ROPE_ADD	6663:2:196755:196785	3954536	0	True				
ANR	3954598	AssignmentExpression	opline -> opcode = ZEND_ROPE_ADD		3954536	0		=			
ANR	3954599	PtrMemberAccess	opline -> opcode		3954536	0					
ANR	3954600	Identifier	opline		3954536	0					
ANR	3954601	Identifier	opcode		3954536	1					
ANR	3954602	Identifier	ZEND_ROPE_ADD		3954536	1					
ANR	3954603	ExpressionStatement	"SET_NODE ( opline -> op1 , result )"	6664:2:196789:196818	3954536	1	True				
ANR	3954604	CallExpression	"SET_NODE ( opline -> op1 , result )"		3954536	0					
ANR	3954605	Callee	SET_NODE		3954536	0					
ANR	3954606	Identifier	SET_NODE		3954536	0					
ANR	3954607	ArgumentList	opline -> op1		3954536	1					
ANR	3954608	Argument	opline -> op1		3954536	0					
ANR	3954609	PtrMemberAccess	opline -> op1		3954536	0					
ANR	3954610	Identifier	opline		3954536	0					
ANR	3954611	Identifier	op1		3954536	1					
ANR	3954612	Argument	result		3954536	1					
ANR	3954613	Identifier	result		3954536	0					
ANR	3954614	ExpressionStatement	"SET_NODE ( opline -> op2 , elem_node )"	6666:1:196824:196856	3954536	2	True				
ANR	3954615	CallExpression	"SET_NODE ( opline -> op2 , elem_node )"		3954536	0					
ANR	3954616	Callee	SET_NODE		3954536	0					
ANR	3954617	Identifier	SET_NODE		3954536	0					
ANR	3954618	ArgumentList	opline -> op2		3954536	1					
ANR	3954619	Argument	opline -> op2		3954536	0					
ANR	3954620	PtrMemberAccess	opline -> op2		3954536	0					
ANR	3954621	Identifier	opline		3954536	0					
ANR	3954622	Identifier	op2		3954536	1					
ANR	3954623	Argument	elem_node		3954536	1					
ANR	3954624	Identifier	elem_node		3954536	0					
ANR	3954625	ExpressionStatement	"SET_NODE ( opline -> result , result )"	6667:1:196859:196891	3954536	3	True				
ANR	3954626	CallExpression	"SET_NODE ( opline -> result , result )"		3954536	0					
ANR	3954627	Callee	SET_NODE		3954536	0					
ANR	3954628	Identifier	SET_NODE		3954536	0					
ANR	3954629	ArgumentList	opline -> result		3954536	1					
ANR	3954630	Argument	opline -> result		3954536	0					
ANR	3954631	PtrMemberAccess	opline -> result		3954536	0					
ANR	3954632	Identifier	opline		3954536	0					
ANR	3954633	Identifier	result		3954536	1					
ANR	3954634	Argument	result		3954536	1					
ANR	3954635	Identifier	result		3954536	0					
ANR	3954636	ExpressionStatement	opline -> extended_value = num	6668:1:196894:196922	3954536	4	True				
ANR	3954637	AssignmentExpression	opline -> extended_value = num		3954536	0		=			
ANR	3954638	PtrMemberAccess	opline -> extended_value		3954536	0					
ANR	3954639	Identifier	opline		3954536	0					
ANR	3954640	Identifier	extended_value		3954536	1					
ANR	3954641	Identifier	num		3954536	1					
ANR	3954642	ReturnStatement	return opline ;	6669:1:196925:196938	3954536	5	True				
ANR	3954643	Identifier	opline		3954536	0					
ANR	3954644	ReturnType	static zend_op *		3954536	1					
ANR	3954645	Identifier	zend_compile_rope_add		3954536	2					
ANR	3954646	ParameterList	"znode * result , uint32_t num , znode * elem_node"		3954536	3					
ANR	3954647	Parameter	znode * result	6653:38:196494:196506	3954536	0	True				
ANR	3954648	ParameterType	znode *		3954536	0					
ANR	3954649	Identifier	result		3954536	1					
ANR	3954650	Parameter	uint32_t num	6653:53:196509:196520	3954536	1	True				
ANR	3954651	ParameterType	uint32_t		3954536	0					
ANR	3954652	Identifier	num		3954536	1					
ANR	3954653	Parameter	znode * elem_node	6653:67:196523:196538	3954536	2	True				
ANR	3954654	ParameterType	znode *		3954536	0					
ANR	3954655	Identifier	elem_node		3954536	1					
ANR	3954656	CFGEntryNode	ENTRY		3954536		True				
ANR	3954657	CFGExitNode	EXIT		3954536		True				
ANR	3954658	Symbol	opline -> op1		3954536						
ANR	3954659	Symbol	opline -> op2		3954536						
ANR	3954660	Symbol	ZEND_ROPE_ADD		3954536						
ANR	3954661	Symbol	get_next_op		3954536						
ANR	3954662	Symbol	CG		3954536						
ANR	3954663	Symbol	active_op_array		3954536						
ANR	3954664	Symbol	num		3954536						
ANR	3954665	Symbol	result -> u . op . var		3954536						
ANR	3954666	Symbol	result -> u . op		3954536						
ANR	3954667	Symbol	result -> op_type		3954536						
ANR	3954668	Symbol	result -> u		3954536						
ANR	3954669	Symbol	opline -> result		3954536						
ANR	3954670	Symbol	opline -> extended_value		3954536						
ANR	3954671	Symbol	result		3954536						
ANR	3954672	Symbol	elem_node		3954536						
ANR	3954673	Symbol	opline		3954536						
ANR	3954674	Symbol	* opline		3954536						
ANR	3954675	Symbol	* result		3954536						
ANR	3954676	Symbol	opline -> opcode		3954536						
ANR	3954677	Symbol	IS_TMP_VAR		3954536						
ANR	3954678	Symbol	ZEND_ROPE_INIT		3954536						
ANR	3954679	Function	zend_compile_encaps_list	6673:0:196953:200503							
ANR	3954680	FunctionDef	"zend_compile_encaps_list (znode * result , zend_ast * ast)"		3954679	0					
ANR	3954681	CompoundStatement		6674:0:197030:200503	3954679	0					
ANR	3954682	IdentifierDeclStatement	"uint32_t i , j ;"	6675:1:197033:197046	3954679	0	True				
ANR	3954683	IdentifierDecl	i		3954679	0					
ANR	3954684	IdentifierDeclType	uint32_t		3954679	0					
ANR	3954685	Identifier	i		3954679	1					
ANR	3954686	IdentifierDecl	j		3954679	1					
ANR	3954687	IdentifierDeclType	uint32_t		3954679	0					
ANR	3954688	Identifier	j		3954679	1					
ANR	3954689	IdentifierDeclStatement	uint32_t rope_init_lineno = - 1 ;	6676:1:197049:197079	3954679	1	True				
ANR	3954690	IdentifierDecl	rope_init_lineno = - 1		3954679	0					
ANR	3954691	IdentifierDeclType	uint32_t		3954679	0					
ANR	3954692	Identifier	rope_init_lineno		3954679	1					
ANR	3954693	AssignmentExpression	rope_init_lineno = - 1		3954679	2		=			
ANR	3954694	Identifier	rope_init_lineno		3954679	0					
ANR	3954695	UnaryOperationExpression	- 1		3954679	1					
ANR	3954696	UnaryOperator	-		3954679	0					
ANR	3954697	PrimaryExpression	1		3954679	1					
ANR	3954698	IdentifierDeclStatement	"zend_op * opline = NULL , * init_opline ;"	6677:1:197082:197118	3954679	2	True				
ANR	3954699	IdentifierDecl	* opline = NULL		3954679	0					
ANR	3954700	IdentifierDeclType	zend_op *		3954679	0					
ANR	3954701	Identifier	opline		3954679	1					
ANR	3954702	AssignmentExpression	* opline = NULL		3954679	2		=			
ANR	3954703	Identifier	NULL		3954679	0					
ANR	3954704	Identifier	NULL		3954679	1					
ANR	3954705	IdentifierDecl	* init_opline		3954679	1					
ANR	3954706	IdentifierDeclType	zend_op *		3954679	0					
ANR	3954707	Identifier	init_opline		3954679	1					
ANR	3954708	IdentifierDeclStatement	"znode elem_node , last_const_node ;"	6678:1:197121:197153	3954679	3	True				
ANR	3954709	IdentifierDecl	elem_node		3954679	0					
ANR	3954710	IdentifierDeclType	znode		3954679	0					
ANR	3954711	Identifier	elem_node		3954679	1					
ANR	3954712	IdentifierDecl	last_const_node		3954679	1					
ANR	3954713	IdentifierDeclType	znode		3954679	0					
ANR	3954714	Identifier	last_const_node		3954679	1					
ANR	3954715	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	6679:1:197156:197200	3954679	4	True				
ANR	3954716	IdentifierDecl	* list = zend_ast_get_list ( ast )		3954679	0					
ANR	3954717	IdentifierDeclType	zend_ast_list *		3954679	0					
ANR	3954718	Identifier	list		3954679	1					
ANR	3954719	AssignmentExpression	* list = zend_ast_get_list ( ast )		3954679	2		=			
ANR	3954720	Identifier	list		3954679	0					
ANR	3954721	CallExpression	zend_ast_get_list ( ast )		3954679	1					
ANR	3954722	Callee	zend_ast_get_list		3954679	0					
ANR	3954723	Identifier	zend_ast_get_list		3954679	0					
ANR	3954724	ArgumentList	ast		3954679	1					
ANR	3954725	Argument	ast		3954679	0					
ANR	3954726	Identifier	ast		3954679	0					
ANR	3954727	ExpressionStatement	ZEND_ASSERT ( list -> children > 0 )	6681:1:197204:197235	3954679	5	True				
ANR	3954728	CallExpression	ZEND_ASSERT ( list -> children > 0 )		3954679	0					
ANR	3954729	Callee	ZEND_ASSERT		3954679	0					
ANR	3954730	Identifier	ZEND_ASSERT		3954679	0					
ANR	3954731	ArgumentList	list -> children > 0		3954679	1					
ANR	3954732	Argument	list -> children > 0		3954679	0					
ANR	3954733	RelationalExpression	list -> children > 0		3954679	0		>			
ANR	3954734	PtrMemberAccess	list -> children		3954679	0					
ANR	3954735	Identifier	list		3954679	0					
ANR	3954736	Identifier	children		3954679	1					
ANR	3954737	PrimaryExpression	0		3954679	1					
ANR	3954738	ExpressionStatement	j = 0	6683:1:197239:197244	3954679	6	True				
ANR	3954739	AssignmentExpression	j = 0		3954679	0		=			
ANR	3954740	Identifier	j		3954679	0					
ANR	3954741	PrimaryExpression	0		3954679	1					
ANR	3954742	ExpressionStatement	last_const_node . op_type = IS_UNUSED	6684:1:197247:197282	3954679	7	True				
ANR	3954743	AssignmentExpression	last_const_node . op_type = IS_UNUSED		3954679	0		=			
ANR	3954744	MemberAccess	last_const_node . op_type		3954679	0					
ANR	3954745	Identifier	last_const_node		3954679	0					
ANR	3954746	Identifier	op_type		3954679	1					
ANR	3954747	Identifier	IS_UNUSED		3954679	1					
ANR	3954748	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		3954679	8					
ANR	3954749	ForInit	i = 0 ;	6685:6:197290:197295	3954679	0	True				
ANR	3954750	AssignmentExpression	i = 0		3954679	0		=			
ANR	3954751	Identifier	i		3954679	0					
ANR	3954752	PrimaryExpression	0		3954679	1					
ANR	3954753	Condition	i < list -> children	6685:13:197297:197314	3954679	1	True				
ANR	3954754	RelationalExpression	i < list -> children		3954679	0		<			
ANR	3954755	Identifier	i		3954679	0					
ANR	3954756	PtrMemberAccess	list -> children		3954679	1					
ANR	3954757	Identifier	list		3954679	0					
ANR	3954758	Identifier	children		3954679	1					
ANR	3954759	PostIncDecOperationExpression	i ++	6685:33:197317:197319	3954679	2	True				
ANR	3954760	Identifier	i		3954679	0					
ANR	3954761	IncDec	++		3954679	1					
ANR	3954762	CompoundStatement		12:38:291:291	3954679	3					
ANR	3954763	ExpressionStatement	"zend_compile_expr ( & elem_node , list -> child [ i ] )"	6686:2:197326:197371	3954679	0	True				
ANR	3954764	CallExpression	"zend_compile_expr ( & elem_node , list -> child [ i ] )"		3954679	0					
ANR	3954765	Callee	zend_compile_expr		3954679	0					
ANR	3954766	Identifier	zend_compile_expr		3954679	0					
ANR	3954767	ArgumentList	& elem_node		3954679	1					
ANR	3954768	Argument	& elem_node		3954679	0					
ANR	3954769	UnaryOperationExpression	& elem_node		3954679	0					
ANR	3954770	UnaryOperator	&		3954679	0					
ANR	3954771	Identifier	elem_node		3954679	1					
ANR	3954772	Argument	list -> child [ i ]		3954679	1					
ANR	3954773	ArrayIndexing	list -> child [ i ]		3954679	0					
ANR	3954774	PtrMemberAccess	list -> child		3954679	0					
ANR	3954775	Identifier	list		3954679	0					
ANR	3954776	Identifier	child		3954679	1					
ANR	3954777	Identifier	i		3954679	1					
ANR	3954778	IfStatement	if ( elem_node . op_type == IS_CONST )		3954679	1					
ANR	3954779	Condition	elem_node . op_type == IS_CONST	6688:6:197380:197408	3954679	0	True				
ANR	3954780	EqualityExpression	elem_node . op_type == IS_CONST		3954679	0		==			
ANR	3954781	MemberAccess	elem_node . op_type		3954679	0					
ANR	3954782	Identifier	elem_node		3954679	0					
ANR	3954783	Identifier	op_type		3954679	1					
ANR	3954784	Identifier	IS_CONST		3954679	1					
ANR	3954785	CompoundStatement		15:37:380:380	3954679	1					
ANR	3954786	ExpressionStatement	convert_to_string ( & elem_node . u . constant )	6689:3:197416:197456	3954679	0	True				
ANR	3954787	CallExpression	convert_to_string ( & elem_node . u . constant )		3954679	0					
ANR	3954788	Callee	convert_to_string		3954679	0					
ANR	3954789	Identifier	convert_to_string		3954679	0					
ANR	3954790	ArgumentList	& elem_node . u . constant		3954679	1					
ANR	3954791	Argument	& elem_node . u . constant		3954679	0					
ANR	3954792	UnaryOperationExpression	& elem_node . u . constant		3954679	0					
ANR	3954793	UnaryOperator	&		3954679	0					
ANR	3954794	MemberAccess	elem_node . u . constant		3954679	1					
ANR	3954795	MemberAccess	elem_node . u		3954679	0					
ANR	3954796	Identifier	elem_node		3954679	0					
ANR	3954797	Identifier	u		3954679	1					
ANR	3954798	Identifier	constant		3954679	1					
ANR	3954799	IfStatement	if ( Z_STRLEN ( elem_node . u . constant ) == 0 )		3954679	1					
ANR	3954800	Condition	Z_STRLEN ( elem_node . u . constant ) == 0	6691:7:197466:197500	3954679	0	True				
ANR	3954801	EqualityExpression	Z_STRLEN ( elem_node . u . constant ) == 0		3954679	0		==			
ANR	3954802	CallExpression	Z_STRLEN ( elem_node . u . constant )		3954679	0					
ANR	3954803	Callee	Z_STRLEN		3954679	0					
ANR	3954804	Identifier	Z_STRLEN		3954679	0					
ANR	3954805	ArgumentList	elem_node . u . constant		3954679	1					
ANR	3954806	Argument	elem_node . u . constant		3954679	0					
ANR	3954807	MemberAccess	elem_node . u . constant		3954679	0					
ANR	3954808	MemberAccess	elem_node . u		3954679	0					
ANR	3954809	Identifier	elem_node		3954679	0					
ANR	3954810	Identifier	u		3954679	1					
ANR	3954811	Identifier	constant		3954679	1					
ANR	3954812	PrimaryExpression	0		3954679	1					
ANR	3954813	CompoundStatement		18:44:472:472	3954679	1					
ANR	3954814	ExpressionStatement	zval_ptr_dtor ( & elem_node . u . constant )	6692:4:197509:197545	3954679	0	True				
ANR	3954815	CallExpression	zval_ptr_dtor ( & elem_node . u . constant )		3954679	0					
ANR	3954816	Callee	zval_ptr_dtor		3954679	0					
ANR	3954817	Identifier	zval_ptr_dtor		3954679	0					
ANR	3954818	ArgumentList	& elem_node . u . constant		3954679	1					
ANR	3954819	Argument	& elem_node . u . constant		3954679	0					
ANR	3954820	UnaryOperationExpression	& elem_node . u . constant		3954679	0					
ANR	3954821	UnaryOperator	&		3954679	0					
ANR	3954822	MemberAccess	elem_node . u . constant		3954679	1					
ANR	3954823	MemberAccess	elem_node . u		3954679	0					
ANR	3954824	Identifier	elem_node		3954679	0					
ANR	3954825	Identifier	u		3954679	1					
ANR	3954826	Identifier	constant		3954679	1					
ANR	3954827	ElseStatement	else		3954679	0					
ANR	3954828	IfStatement	if ( last_const_node . op_type == IS_CONST )		3954679	0					
ANR	3954829	Condition	last_const_node . op_type == IS_CONST	6693:14:197561:197595	3954679	0	True				
ANR	3954830	EqualityExpression	last_const_node . op_type == IS_CONST		3954679	0		==			
ANR	3954831	MemberAccess	last_const_node . op_type		3954679	0					
ANR	3954832	Identifier	last_const_node		3954679	0					
ANR	3954833	Identifier	op_type		3954679	1					
ANR	3954834	Identifier	IS_CONST		3954679	1					
ANR	3954835	CompoundStatement		20:51:567:567	3954679	1					
ANR	3954836	ExpressionStatement	"concat_function ( & last_const_node . u . constant , & last_const_node . u . constant , & elem_node . u . constant )"	6694:4:197604:197700	3954679	0	True				
ANR	3954837	CallExpression	"concat_function ( & last_const_node . u . constant , & last_const_node . u . constant , & elem_node . u . constant )"		3954679	0					
ANR	3954838	Callee	concat_function		3954679	0					
ANR	3954839	Identifier	concat_function		3954679	0					
ANR	3954840	ArgumentList	& last_const_node . u . constant		3954679	1					
ANR	3954841	Argument	& last_const_node . u . constant		3954679	0					
ANR	3954842	UnaryOperationExpression	& last_const_node . u . constant		3954679	0					
ANR	3954843	UnaryOperator	&		3954679	0					
ANR	3954844	MemberAccess	last_const_node . u . constant		3954679	1					
ANR	3954845	MemberAccess	last_const_node . u		3954679	0					
ANR	3954846	Identifier	last_const_node		3954679	0					
ANR	3954847	Identifier	u		3954679	1					
ANR	3954848	Identifier	constant		3954679	1					
ANR	3954849	Argument	& last_const_node . u . constant		3954679	1					
ANR	3954850	UnaryOperationExpression	& last_const_node . u . constant		3954679	0					
ANR	3954851	UnaryOperator	&		3954679	0					
ANR	3954852	MemberAccess	last_const_node . u . constant		3954679	1					
ANR	3954853	MemberAccess	last_const_node . u		3954679	0					
ANR	3954854	Identifier	last_const_node		3954679	0					
ANR	3954855	Identifier	u		3954679	1					
ANR	3954856	Identifier	constant		3954679	1					
ANR	3954857	Argument	& elem_node . u . constant		3954679	2					
ANR	3954858	UnaryOperationExpression	& elem_node . u . constant		3954679	0					
ANR	3954859	UnaryOperator	&		3954679	0					
ANR	3954860	MemberAccess	elem_node . u . constant		3954679	1					
ANR	3954861	MemberAccess	elem_node . u		3954679	0					
ANR	3954862	Identifier	elem_node		3954679	0					
ANR	3954863	Identifier	u		3954679	1					
ANR	3954864	Identifier	constant		3954679	1					
ANR	3954865	ExpressionStatement	zval_ptr_dtor ( & elem_node . u . constant )	6695:4:197706:197742	3954679	1	True				
ANR	3954866	CallExpression	zval_ptr_dtor ( & elem_node . u . constant )		3954679	0					
ANR	3954867	Callee	zval_ptr_dtor		3954679	0					
ANR	3954868	Identifier	zval_ptr_dtor		3954679	0					
ANR	3954869	ArgumentList	& elem_node . u . constant		3954679	1					
ANR	3954870	Argument	& elem_node . u . constant		3954679	0					
ANR	3954871	UnaryOperationExpression	& elem_node . u . constant		3954679	0					
ANR	3954872	UnaryOperator	&		3954679	0					
ANR	3954873	MemberAccess	elem_node . u . constant		3954679	1					
ANR	3954874	MemberAccess	elem_node . u		3954679	0					
ANR	3954875	Identifier	elem_node		3954679	0					
ANR	3954876	Identifier	u		3954679	1					
ANR	3954877	Identifier	constant		3954679	1					
ANR	3954878	ElseStatement	else		3954679	0					
ANR	3954879	CompoundStatement		23:10:723:723	3954679	0					
ANR	3954880	ExpressionStatement	last_const_node . op_type = IS_CONST	6697:4:197760:197794	3954679	0	True				
ANR	3954881	AssignmentExpression	last_const_node . op_type = IS_CONST		3954679	0		=			
ANR	3954882	MemberAccess	last_const_node . op_type		3954679	0					
ANR	3954883	Identifier	last_const_node		3954679	0					
ANR	3954884	Identifier	op_type		3954679	1					
ANR	3954885	Identifier	IS_CONST		3954679	1					
ANR	3954886	ExpressionStatement	"ZVAL_COPY_VALUE ( & last_const_node . u . constant , & elem_node . u . constant )"	6698:4:197800:197867	3954679	1	True				
ANR	3954887	CallExpression	"ZVAL_COPY_VALUE ( & last_const_node . u . constant , & elem_node . u . constant )"		3954679	0					
ANR	3954888	Callee	ZVAL_COPY_VALUE		3954679	0					
ANR	3954889	Identifier	ZVAL_COPY_VALUE		3954679	0					
ANR	3954890	ArgumentList	& last_const_node . u . constant		3954679	1					
ANR	3954891	Argument	& last_const_node . u . constant		3954679	0					
ANR	3954892	UnaryOperationExpression	& last_const_node . u . constant		3954679	0					
ANR	3954893	UnaryOperator	&		3954679	0					
ANR	3954894	MemberAccess	last_const_node . u . constant		3954679	1					
ANR	3954895	MemberAccess	last_const_node . u		3954679	0					
ANR	3954896	Identifier	last_const_node		3954679	0					
ANR	3954897	Identifier	u		3954679	1					
ANR	3954898	Identifier	constant		3954679	1					
ANR	3954899	Argument	& elem_node . u . constant		3954679	1					
ANR	3954900	UnaryOperationExpression	& elem_node . u . constant		3954679	0					
ANR	3954901	UnaryOperator	&		3954679	0					
ANR	3954902	MemberAccess	elem_node . u . constant		3954679	1					
ANR	3954903	MemberAccess	elem_node . u		3954679	0					
ANR	3954904	Identifier	elem_node		3954679	0					
ANR	3954905	Identifier	u		3954679	1					
ANR	3954906	Identifier	constant		3954679	1					
ANR	3954907	ContinueStatement	continue ;	6700:3:197877:197885	3954679	2	True				
ANR	3954908	ElseStatement	else		3954679	0					
ANR	3954909	CompoundStatement		28:9:865:865	3954679	0					
ANR	3954910	IfStatement	if ( j == 0 )		3954679	0					
ANR	3954911	Condition	j == 0	6702:7:197905:197910	3954679	0	True				
ANR	3954912	EqualityExpression	j == 0		3954679	0		==			
ANR	3954913	Identifier	j		3954679	0					
ANR	3954914	PrimaryExpression	0		3954679	1					
ANR	3954915	CompoundStatement		29:15:882:882	3954679	1					
ANR	3954916	ExpressionStatement	rope_init_lineno = get_next_op_number ( CG ( active_op_array ) )	6703:4:197919:197977	3954679	0	True				
ANR	3954917	AssignmentExpression	rope_init_lineno = get_next_op_number ( CG ( active_op_array ) )		3954679	0		=			
ANR	3954918	Identifier	rope_init_lineno		3954679	0					
ANR	3954919	CallExpression	get_next_op_number ( CG ( active_op_array ) )		3954679	1					
ANR	3954920	Callee	get_next_op_number		3954679	0					
ANR	3954921	Identifier	get_next_op_number		3954679	0					
ANR	3954922	ArgumentList	CG ( active_op_array )		3954679	1					
ANR	3954923	Argument	CG ( active_op_array )		3954679	0					
ANR	3954924	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3954925	Callee	CG		3954679	0					
ANR	3954926	Identifier	CG		3954679	0					
ANR	3954927	ArgumentList	active_op_array		3954679	1					
ANR	3954928	Argument	active_op_array		3954679	0					
ANR	3954929	Identifier	active_op_array		3954679	0					
ANR	3954930	IfStatement	if ( last_const_node . op_type == IS_CONST )		3954679	1					
ANR	3954931	Condition	last_const_node . op_type == IS_CONST	6705:7:197991:198025	3954679	0	True				
ANR	3954932	EqualityExpression	last_const_node . op_type == IS_CONST		3954679	0		==			
ANR	3954933	MemberAccess	last_const_node . op_type		3954679	0					
ANR	3954934	Identifier	last_const_node		3954679	0					
ANR	3954935	Identifier	op_type		3954679	1					
ANR	3954936	Identifier	IS_CONST		3954679	1					
ANR	3954937	CompoundStatement		32:44:997:997	3954679	1					
ANR	3954938	ExpressionStatement	"zend_compile_rope_add ( result , j ++ , & last_const_node )"	6706:4:198034:198086	3954679	0	True				
ANR	3954939	CallExpression	"zend_compile_rope_add ( result , j ++ , & last_const_node )"		3954679	0					
ANR	3954940	Callee	zend_compile_rope_add		3954679	0					
ANR	3954941	Identifier	zend_compile_rope_add		3954679	0					
ANR	3954942	ArgumentList	result		3954679	1					
ANR	3954943	Argument	result		3954679	0					
ANR	3954944	Identifier	result		3954679	0					
ANR	3954945	Argument	j ++		3954679	1					
ANR	3954946	PostIncDecOperationExpression	j ++		3954679	0					
ANR	3954947	Identifier	j		3954679	0					
ANR	3954948	IncDec	++		3954679	1					
ANR	3954949	Argument	& last_const_node		3954679	2					
ANR	3954950	UnaryOperationExpression	& last_const_node		3954679	0					
ANR	3954951	UnaryOperator	&		3954679	0					
ANR	3954952	Identifier	last_const_node		3954679	1					
ANR	3954953	ExpressionStatement	last_const_node . op_type = IS_UNUSED	6707:4:198092:198127	3954679	1	True				
ANR	3954954	AssignmentExpression	last_const_node . op_type = IS_UNUSED		3954679	0		=			
ANR	3954955	MemberAccess	last_const_node . op_type		3954679	0					
ANR	3954956	Identifier	last_const_node		3954679	0					
ANR	3954957	Identifier	op_type		3954679	1					
ANR	3954958	Identifier	IS_UNUSED		3954679	1					
ANR	3954959	ExpressionStatement	"opline = zend_compile_rope_add ( result , j ++ , & elem_node )"	6709:3:198137:198192	3954679	2	True				
ANR	3954960	AssignmentExpression	"opline = zend_compile_rope_add ( result , j ++ , & elem_node )"		3954679	0		=			
ANR	3954961	Identifier	opline		3954679	0					
ANR	3954962	CallExpression	"zend_compile_rope_add ( result , j ++ , & elem_node )"		3954679	1					
ANR	3954963	Callee	zend_compile_rope_add		3954679	0					
ANR	3954964	Identifier	zend_compile_rope_add		3954679	0					
ANR	3954965	ArgumentList	result		3954679	1					
ANR	3954966	Argument	result		3954679	0					
ANR	3954967	Identifier	result		3954679	0					
ANR	3954968	Argument	j ++		3954679	1					
ANR	3954969	PostIncDecOperationExpression	j ++		3954679	0					
ANR	3954970	Identifier	j		3954679	0					
ANR	3954971	IncDec	++		3954679	1					
ANR	3954972	Argument	& elem_node		3954679	2					
ANR	3954973	UnaryOperationExpression	& elem_node		3954679	0					
ANR	3954974	UnaryOperator	&		3954679	0					
ANR	3954975	Identifier	elem_node		3954679	1					
ANR	3954976	IfStatement	if ( j == 0 )		3954679	9					
ANR	3954977	Condition	j == 0	6713:5:198207:198212	3954679	0	True				
ANR	3954978	EqualityExpression	j == 0		3954679	0		==			
ANR	3954979	Identifier	j		3954679	0					
ANR	3954980	PrimaryExpression	0		3954679	1					
ANR	3954981	CompoundStatement		40:13:1184:1184	3954679	1					
ANR	3954982	ExpressionStatement	result -> op_type = IS_CONST	6714:2:198219:198245	3954679	0	True				
ANR	3954983	AssignmentExpression	result -> op_type = IS_CONST		3954679	0		=			
ANR	3954984	PtrMemberAccess	result -> op_type		3954679	0					
ANR	3954985	Identifier	result		3954679	0					
ANR	3954986	Identifier	op_type		3954679	1					
ANR	3954987	Identifier	IS_CONST		3954679	1					
ANR	3954988	IfStatement	if ( last_const_node . op_type == IS_CONST )		3954679	1					
ANR	3954989	Condition	last_const_node . op_type == IS_CONST	6715:6:198253:198287	3954679	0	True				
ANR	3954990	EqualityExpression	last_const_node . op_type == IS_CONST		3954679	0		==			
ANR	3954991	MemberAccess	last_const_node . op_type		3954679	0					
ANR	3954992	Identifier	last_const_node		3954679	0					
ANR	3954993	Identifier	op_type		3954679	1					
ANR	3954994	Identifier	IS_CONST		3954679	1					
ANR	3954995	CompoundStatement		42:43:1259:1259	3954679	1					
ANR	3954996	ExpressionStatement	"ZVAL_COPY_VALUE ( & result -> u . constant , & last_const_node . u . constant )"	6716:3:198295:198360	3954679	0	True				
ANR	3954997	CallExpression	"ZVAL_COPY_VALUE ( & result -> u . constant , & last_const_node . u . constant )"		3954679	0					
ANR	3954998	Callee	ZVAL_COPY_VALUE		3954679	0					
ANR	3954999	Identifier	ZVAL_COPY_VALUE		3954679	0					
ANR	3955000	ArgumentList	& result -> u . constant		3954679	1					
ANR	3955001	Argument	& result -> u . constant		3954679	0					
ANR	3955002	UnaryOperationExpression	& result -> u . constant		3954679	0					
ANR	3955003	UnaryOperator	&		3954679	0					
ANR	3955004	MemberAccess	result -> u . constant		3954679	1					
ANR	3955005	PtrMemberAccess	result -> u		3954679	0					
ANR	3955006	Identifier	result		3954679	0					
ANR	3955007	Identifier	u		3954679	1					
ANR	3955008	Identifier	constant		3954679	1					
ANR	3955009	Argument	& last_const_node . u . constant		3954679	1					
ANR	3955010	UnaryOperationExpression	& last_const_node . u . constant		3954679	0					
ANR	3955011	UnaryOperator	&		3954679	0					
ANR	3955012	MemberAccess	last_const_node . u . constant		3954679	1					
ANR	3955013	MemberAccess	last_const_node . u		3954679	0					
ANR	3955014	Identifier	last_const_node		3954679	0					
ANR	3955015	Identifier	u		3954679	1					
ANR	3955016	Identifier	constant		3954679	1					
ANR	3955017	ElseStatement	else		3954679	0					
ANR	3955018	CompoundStatement		44:9:1340:1340	3954679	0					
ANR	3955019	ExpressionStatement	ZVAL_EMPTY_STRING ( & result -> u . constant )	6718:3:198376:198414	3954679	0	True				
ANR	3955020	CallExpression	ZVAL_EMPTY_STRING ( & result -> u . constant )		3954679	0					
ANR	3955021	Callee	ZVAL_EMPTY_STRING		3954679	0					
ANR	3955022	Identifier	ZVAL_EMPTY_STRING		3954679	0					
ANR	3955023	ArgumentList	& result -> u . constant		3954679	1					
ANR	3955024	Argument	& result -> u . constant		3954679	0					
ANR	3955025	UnaryOperationExpression	& result -> u . constant		3954679	0					
ANR	3955026	UnaryOperator	&		3954679	0					
ANR	3955027	MemberAccess	result -> u . constant		3954679	1					
ANR	3955028	PtrMemberAccess	result -> u		3954679	0					
ANR	3955029	Identifier	result		3954679	0					
ANR	3955030	Identifier	u		3954679	1					
ANR	3955031	Identifier	constant		3954679	1					
ANR	3955032	ReturnStatement	return ;	6721:2:198444:198450	3954679	2	True				
ANR	3955033	ElseStatement	else		3954679	0					
ANR	3955034	IfStatement	if ( last_const_node . op_type == IS_CONST )		3954679	0					
ANR	3955035	Condition	last_const_node . op_type == IS_CONST	6722:12:198464:198498	3954679	0	True				
ANR	3955036	EqualityExpression	last_const_node . op_type == IS_CONST		3954679	0		==			
ANR	3955037	MemberAccess	last_const_node . op_type		3954679	0					
ANR	3955038	Identifier	last_const_node		3954679	0					
ANR	3955039	Identifier	op_type		3954679	1					
ANR	3955040	Identifier	IS_CONST		3954679	1					
ANR	3955041	CompoundStatement		49:49:1470:1470	3954679	1					
ANR	3955042	ExpressionStatement	"opline = zend_compile_rope_add ( result , j ++ , & last_const_node )"	6723:2:198505:198566	3954679	0	True				
ANR	3955043	AssignmentExpression	"opline = zend_compile_rope_add ( result , j ++ , & last_const_node )"		3954679	0		=			
ANR	3955044	Identifier	opline		3954679	0					
ANR	3955045	CallExpression	"zend_compile_rope_add ( result , j ++ , & last_const_node )"		3954679	1					
ANR	3955046	Callee	zend_compile_rope_add		3954679	0					
ANR	3955047	Identifier	zend_compile_rope_add		3954679	0					
ANR	3955048	ArgumentList	result		3954679	1					
ANR	3955049	Argument	result		3954679	0					
ANR	3955050	Identifier	result		3954679	0					
ANR	3955051	Argument	j ++		3954679	1					
ANR	3955052	PostIncDecOperationExpression	j ++		3954679	0					
ANR	3955053	Identifier	j		3954679	0					
ANR	3955054	IncDec	++		3954679	1					
ANR	3955055	Argument	& last_const_node		3954679	2					
ANR	3955056	UnaryOperationExpression	& last_const_node		3954679	0					
ANR	3955057	UnaryOperator	&		3954679	0					
ANR	3955058	Identifier	last_const_node		3954679	1					
ANR	3955059	ExpressionStatement	init_opline = CG ( active_op_array ) -> opcodes + rope_init_lineno	6725:1:198572:198633	3954679	10	True				
ANR	3955060	AssignmentExpression	init_opline = CG ( active_op_array ) -> opcodes + rope_init_lineno		3954679	0		=			
ANR	3955061	Identifier	init_opline		3954679	0					
ANR	3955062	AdditiveExpression	CG ( active_op_array ) -> opcodes + rope_init_lineno		3954679	1		+			
ANR	3955063	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3954679	0					
ANR	3955064	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955065	Callee	CG		3954679	0					
ANR	3955066	Identifier	CG		3954679	0					
ANR	3955067	ArgumentList	active_op_array		3954679	1					
ANR	3955068	Argument	active_op_array		3954679	0					
ANR	3955069	Identifier	active_op_array		3954679	0					
ANR	3955070	Identifier	opcodes		3954679	1					
ANR	3955071	Identifier	rope_init_lineno		3954679	1					
ANR	3955072	IfStatement	if ( j == 1 )		3954679	11					
ANR	3955073	Condition	j == 1	6726:5:198640:198645	3954679	0	True				
ANR	3955074	EqualityExpression	j == 1		3954679	0		==			
ANR	3955075	Identifier	j		3954679	0					
ANR	3955076	PrimaryExpression	1		3954679	1					
ANR	3955077	CompoundStatement		53:13:1617:1617	3954679	1					
ANR	3955078	IfStatement	if ( opline -> op2_type == IS_CONST )		3954679	0					
ANR	3955079	Condition	opline -> op2_type == IS_CONST	6727:6:198656:198683	3954679	0	True				
ANR	3955080	EqualityExpression	opline -> op2_type == IS_CONST		3954679	0		==			
ANR	3955081	PtrMemberAccess	opline -> op2_type		3954679	0					
ANR	3955082	Identifier	opline		3954679	0					
ANR	3955083	Identifier	op2_type		3954679	1					
ANR	3955084	Identifier	IS_CONST		3954679	1					
ANR	3955085	CompoundStatement		54:36:1655:1655	3954679	1					
ANR	3955086	ExpressionStatement	"GET_NODE ( result , opline -> op2 )"	6728:3:198691:198720	3954679	0	True				
ANR	3955087	CallExpression	"GET_NODE ( result , opline -> op2 )"		3954679	0					
ANR	3955088	Callee	GET_NODE		3954679	0					
ANR	3955089	Identifier	GET_NODE		3954679	0					
ANR	3955090	ArgumentList	result		3954679	1					
ANR	3955091	Argument	result		3954679	0					
ANR	3955092	Identifier	result		3954679	0					
ANR	3955093	Argument	opline -> op2		3954679	1					
ANR	3955094	PtrMemberAccess	opline -> op2		3954679	0					
ANR	3955095	Identifier	opline		3954679	0					
ANR	3955096	Identifier	op2		3954679	1					
ANR	3955097	ExpressionStatement	MAKE_NOP ( opline )	6729:3:198725:198741	3954679	1	True				
ANR	3955098	CallExpression	MAKE_NOP ( opline )		3954679	0					
ANR	3955099	Callee	MAKE_NOP		3954679	0					
ANR	3955100	Identifier	MAKE_NOP		3954679	0					
ANR	3955101	ArgumentList	opline		3954679	1					
ANR	3955102	Argument	opline		3954679	0					
ANR	3955103	Identifier	opline		3954679	0					
ANR	3955104	ElseStatement	else		3954679	0					
ANR	3955105	CompoundStatement		57:9:1721:1721	3954679	0					
ANR	3955106	ExpressionStatement	opline -> opcode = ZEND_CAST	6731:3:198757:198783	3954679	0	True				
ANR	3955107	AssignmentExpression	opline -> opcode = ZEND_CAST		3954679	0		=			
ANR	3955108	PtrMemberAccess	opline -> opcode		3954679	0					
ANR	3955109	Identifier	opline		3954679	0					
ANR	3955110	Identifier	opcode		3954679	1					
ANR	3955111	Identifier	ZEND_CAST		3954679	1					
ANR	3955112	ExpressionStatement	opline -> extended_value = IS_STRING	6732:3:198788:198822	3954679	1	True				
ANR	3955113	AssignmentExpression	opline -> extended_value = IS_STRING		3954679	0		=			
ANR	3955114	PtrMemberAccess	opline -> extended_value		3954679	0					
ANR	3955115	Identifier	opline		3954679	0					
ANR	3955116	Identifier	extended_value		3954679	1					
ANR	3955117	Identifier	IS_STRING		3954679	1					
ANR	3955118	ExpressionStatement	opline -> op1_type = opline -> op2_type	6733:3:198827:198862	3954679	2	True				
ANR	3955119	AssignmentExpression	opline -> op1_type = opline -> op2_type		3954679	0		=			
ANR	3955120	PtrMemberAccess	opline -> op1_type		3954679	0					
ANR	3955121	Identifier	opline		3954679	0					
ANR	3955122	Identifier	op1_type		3954679	1					
ANR	3955123	PtrMemberAccess	opline -> op2_type		3954679	1					
ANR	3955124	Identifier	opline		3954679	0					
ANR	3955125	Identifier	op2_type		3954679	1					
ANR	3955126	ExpressionStatement	opline -> op1 = opline -> op2	6734:3:198867:198892	3954679	3	True				
ANR	3955127	AssignmentExpression	opline -> op1 = opline -> op2		3954679	0		=			
ANR	3955128	PtrMemberAccess	opline -> op1		3954679	0					
ANR	3955129	Identifier	opline		3954679	0					
ANR	3955130	Identifier	op1		3954679	1					
ANR	3955131	PtrMemberAccess	opline -> op2		3954679	1					
ANR	3955132	Identifier	opline		3954679	0					
ANR	3955133	Identifier	op2		3954679	1					
ANR	3955134	ExpressionStatement	opline -> result_type = IS_TMP_VAR	6735:3:198897:198929	3954679	4	True				
ANR	3955135	AssignmentExpression	opline -> result_type = IS_TMP_VAR		3954679	0		=			
ANR	3955136	PtrMemberAccess	opline -> result_type		3954679	0					
ANR	3955137	Identifier	opline		3954679	0					
ANR	3955138	Identifier	result_type		3954679	1					
ANR	3955139	Identifier	IS_TMP_VAR		3954679	1					
ANR	3955140	ExpressionStatement	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )	6736:3:198934:198998	3954679	5	True				
ANR	3955141	AssignmentExpression	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )		3954679	0		=			
ANR	3955142	MemberAccess	opline -> result . var		3954679	0					
ANR	3955143	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955144	Identifier	opline		3954679	0					
ANR	3955145	Identifier	result		3954679	1					
ANR	3955146	Identifier	var		3954679	1					
ANR	3955147	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3954679	1					
ANR	3955148	Callee	get_temporary_variable		3954679	0					
ANR	3955149	Identifier	get_temporary_variable		3954679	0					
ANR	3955150	ArgumentList	CG ( active_op_array )		3954679	1					
ANR	3955151	Argument	CG ( active_op_array )		3954679	0					
ANR	3955152	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955153	Callee	CG		3954679	0					
ANR	3955154	Identifier	CG		3954679	0					
ANR	3955155	ArgumentList	active_op_array		3954679	1					
ANR	3955156	Argument	active_op_array		3954679	0					
ANR	3955157	Identifier	active_op_array		3954679	0					
ANR	3955158	ExpressionStatement	SET_UNUSED ( opline -> op2 )	6737:3:199003:199026	3954679	6	True				
ANR	3955159	CallExpression	SET_UNUSED ( opline -> op2 )		3954679	0					
ANR	3955160	Callee	SET_UNUSED		3954679	0					
ANR	3955161	Identifier	SET_UNUSED		3954679	0					
ANR	3955162	ArgumentList	opline -> op2		3954679	1					
ANR	3955163	Argument	opline -> op2		3954679	0					
ANR	3955164	PtrMemberAccess	opline -> op2		3954679	0					
ANR	3955165	Identifier	opline		3954679	0					
ANR	3955166	Identifier	op2		3954679	1					
ANR	3955167	ExpressionStatement	"GET_NODE ( result , opline -> result )"	6738:3:199031:199063	3954679	7	True				
ANR	3955168	CallExpression	"GET_NODE ( result , opline -> result )"		3954679	0					
ANR	3955169	Callee	GET_NODE		3954679	0					
ANR	3955170	Identifier	GET_NODE		3954679	0					
ANR	3955171	ArgumentList	result		3954679	1					
ANR	3955172	Argument	result		3954679	0					
ANR	3955173	Identifier	result		3954679	0					
ANR	3955174	Argument	opline -> result		3954679	1					
ANR	3955175	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955176	Identifier	opline		3954679	0					
ANR	3955177	Identifier	result		3954679	1					
ANR	3955178	ElseStatement	else		3954679	0					
ANR	3955179	IfStatement	if ( j == 2 )		3954679	0					
ANR	3955180	Condition	j == 2	6740:12:199081:199086	3954679	0	True				
ANR	3955181	EqualityExpression	j == 2		3954679	0		==			
ANR	3955182	Identifier	j		3954679	0					
ANR	3955183	PrimaryExpression	2		3954679	1					
ANR	3955184	CompoundStatement		67:20:2058:2058	3954679	1					
ANR	3955185	ExpressionStatement	opline -> opcode = ZEND_FAST_CONCAT	6741:2:199093:199126	3954679	0	True				
ANR	3955186	AssignmentExpression	opline -> opcode = ZEND_FAST_CONCAT		3954679	0		=			
ANR	3955187	PtrMemberAccess	opline -> opcode		3954679	0					
ANR	3955188	Identifier	opline		3954679	0					
ANR	3955189	Identifier	opcode		3954679	1					
ANR	3955190	Identifier	ZEND_FAST_CONCAT		3954679	1					
ANR	3955191	ExpressionStatement	opline -> extended_value = 0	6742:2:199130:199156	3954679	1	True				
ANR	3955192	AssignmentExpression	opline -> extended_value = 0		3954679	0		=			
ANR	3955193	PtrMemberAccess	opline -> extended_value		3954679	0					
ANR	3955194	Identifier	opline		3954679	0					
ANR	3955195	Identifier	extended_value		3954679	1					
ANR	3955196	PrimaryExpression	0		3954679	1					
ANR	3955197	ExpressionStatement	opline -> op1_type = init_opline -> op2_type	6743:2:199160:199200	3954679	2	True				
ANR	3955198	AssignmentExpression	opline -> op1_type = init_opline -> op2_type		3954679	0		=			
ANR	3955199	PtrMemberAccess	opline -> op1_type		3954679	0					
ANR	3955200	Identifier	opline		3954679	0					
ANR	3955201	Identifier	op1_type		3954679	1					
ANR	3955202	PtrMemberAccess	init_opline -> op2_type		3954679	1					
ANR	3955203	Identifier	init_opline		3954679	0					
ANR	3955204	Identifier	op2_type		3954679	1					
ANR	3955205	ExpressionStatement	opline -> op1 = init_opline -> op2	6744:2:199204:199234	3954679	3	True				
ANR	3955206	AssignmentExpression	opline -> op1 = init_opline -> op2		3954679	0		=			
ANR	3955207	PtrMemberAccess	opline -> op1		3954679	0					
ANR	3955208	Identifier	opline		3954679	0					
ANR	3955209	Identifier	op1		3954679	1					
ANR	3955210	PtrMemberAccess	init_opline -> op2		3954679	1					
ANR	3955211	Identifier	init_opline		3954679	0					
ANR	3955212	Identifier	op2		3954679	1					
ANR	3955213	ExpressionStatement	opline -> result_type = IS_TMP_VAR	6745:2:199238:199270	3954679	4	True				
ANR	3955214	AssignmentExpression	opline -> result_type = IS_TMP_VAR		3954679	0		=			
ANR	3955215	PtrMemberAccess	opline -> result_type		3954679	0					
ANR	3955216	Identifier	opline		3954679	0					
ANR	3955217	Identifier	result_type		3954679	1					
ANR	3955218	Identifier	IS_TMP_VAR		3954679	1					
ANR	3955219	ExpressionStatement	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )	6746:2:199274:199338	3954679	5	True				
ANR	3955220	AssignmentExpression	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )		3954679	0		=			
ANR	3955221	MemberAccess	opline -> result . var		3954679	0					
ANR	3955222	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955223	Identifier	opline		3954679	0					
ANR	3955224	Identifier	result		3954679	1					
ANR	3955225	Identifier	var		3954679	1					
ANR	3955226	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3954679	1					
ANR	3955227	Callee	get_temporary_variable		3954679	0					
ANR	3955228	Identifier	get_temporary_variable		3954679	0					
ANR	3955229	ArgumentList	CG ( active_op_array )		3954679	1					
ANR	3955230	Argument	CG ( active_op_array )		3954679	0					
ANR	3955231	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955232	Callee	CG		3954679	0					
ANR	3955233	Identifier	CG		3954679	0					
ANR	3955234	ArgumentList	active_op_array		3954679	1					
ANR	3955235	Argument	active_op_array		3954679	0					
ANR	3955236	Identifier	active_op_array		3954679	0					
ANR	3955237	ExpressionStatement	MAKE_NOP ( init_opline )	6747:2:199342:199363	3954679	6	True				
ANR	3955238	CallExpression	MAKE_NOP ( init_opline )		3954679	0					
ANR	3955239	Callee	MAKE_NOP		3954679	0					
ANR	3955240	Identifier	MAKE_NOP		3954679	0					
ANR	3955241	ArgumentList	init_opline		3954679	1					
ANR	3955242	Argument	init_opline		3954679	0					
ANR	3955243	Identifier	init_opline		3954679	0					
ANR	3955244	ExpressionStatement	"GET_NODE ( result , opline -> result )"	6748:2:199367:199399	3954679	7	True				
ANR	3955245	CallExpression	"GET_NODE ( result , opline -> result )"		3954679	0					
ANR	3955246	Callee	GET_NODE		3954679	0					
ANR	3955247	Identifier	GET_NODE		3954679	0					
ANR	3955248	ArgumentList	result		3954679	1					
ANR	3955249	Argument	result		3954679	0					
ANR	3955250	Identifier	result		3954679	0					
ANR	3955251	Argument	opline -> result		3954679	1					
ANR	3955252	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955253	Identifier	opline		3954679	0					
ANR	3955254	Identifier	result		3954679	1					
ANR	3955255	ElseStatement	else		3954679	0					
ANR	3955256	CompoundStatement		78:2:2398:2474	3954679	0					
ANR	3955257	IdentifierDeclStatement	uint32_t var ;	6750:2:199413:199425	3954679	0	True				
ANR	3955258	IdentifierDecl	var		3954679	0					
ANR	3955259	IdentifierDeclType	uint32_t		3954679	0					
ANR	3955260	Identifier	var		3954679	1					
ANR	3955261	IdentifierDeclStatement	zend_brk_cont_element * info = get_next_brk_cont_element ( CG ( active_op_array ) ) ;	6751:2:199429:199505	3954679	1	True				
ANR	3955262	IdentifierDecl	* info = get_next_brk_cont_element ( CG ( active_op_array ) )		3954679	0					
ANR	3955263	IdentifierDeclType	zend_brk_cont_element *		3954679	0					
ANR	3955264	Identifier	info		3954679	1					
ANR	3955265	AssignmentExpression	* info = get_next_brk_cont_element ( CG ( active_op_array ) )		3954679	2		=			
ANR	3955266	Identifier	info		3954679	0					
ANR	3955267	CallExpression	get_next_brk_cont_element ( CG ( active_op_array ) )		3954679	1					
ANR	3955268	Callee	get_next_brk_cont_element		3954679	0					
ANR	3955269	Identifier	get_next_brk_cont_element		3954679	0					
ANR	3955270	ArgumentList	CG ( active_op_array )		3954679	1					
ANR	3955271	Argument	CG ( active_op_array )		3954679	0					
ANR	3955272	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955273	Callee	CG		3954679	0					
ANR	3955274	Identifier	CG		3954679	0					
ANR	3955275	ArgumentList	active_op_array		3954679	1					
ANR	3955276	Argument	active_op_array		3954679	0					
ANR	3955277	Identifier	active_op_array		3954679	0					
ANR	3955278	ExpressionStatement	info -> start = rope_init_lineno	6752:2:199509:199539	3954679	2	True				
ANR	3955279	AssignmentExpression	info -> start = rope_init_lineno		3954679	0		=			
ANR	3955280	PtrMemberAccess	info -> start		3954679	0					
ANR	3955281	Identifier	info		3954679	0					
ANR	3955282	Identifier	start		3954679	1					
ANR	3955283	Identifier	rope_init_lineno		3954679	1					
ANR	3955284	ExpressionStatement	info -> parent = CG ( context ) . current_brk_cont	6753:2:199543:199586	3954679	3	True				
ANR	3955285	AssignmentExpression	info -> parent = CG ( context ) . current_brk_cont		3954679	0		=			
ANR	3955286	PtrMemberAccess	info -> parent		3954679	0					
ANR	3955287	Identifier	info		3954679	0					
ANR	3955288	Identifier	parent		3954679	1					
ANR	3955289	MemberAccess	CG ( context ) . current_brk_cont		3954679	1					
ANR	3955290	CallExpression	CG ( context )		3954679	0					
ANR	3955291	Callee	CG		3954679	0					
ANR	3955292	Identifier	CG		3954679	0					
ANR	3955293	ArgumentList	context		3954679	1					
ANR	3955294	Argument	context		3954679	0					
ANR	3955295	Identifier	context		3954679	0					
ANR	3955296	Identifier	current_brk_cont		3954679	1					
ANR	3955297	ExpressionStatement	info -> cont = info -> brk = opline - CG ( active_op_array ) -> opcodes	6754:2:199590:199652	3954679	4	True				
ANR	3955298	AssignmentExpression	info -> cont = info -> brk = opline - CG ( active_op_array ) -> opcodes		3954679	0		=			
ANR	3955299	PtrMemberAccess	info -> cont		3954679	0					
ANR	3955300	Identifier	info		3954679	0					
ANR	3955301	Identifier	cont		3954679	1					
ANR	3955302	AssignmentExpression	info -> brk = opline - CG ( active_op_array ) -> opcodes		3954679	1		=			
ANR	3955303	PtrMemberAccess	info -> brk		3954679	0					
ANR	3955304	Identifier	info		3954679	0					
ANR	3955305	Identifier	brk		3954679	1					
ANR	3955306	AdditiveExpression	opline - CG ( active_op_array ) -> opcodes		3954679	1		-			
ANR	3955307	Identifier	opline		3954679	0					
ANR	3955308	PtrMemberAccess	CG ( active_op_array ) -> opcodes		3954679	1					
ANR	3955309	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955310	Callee	CG		3954679	0					
ANR	3955311	Identifier	CG		3954679	0					
ANR	3955312	ArgumentList	active_op_array		3954679	1					
ANR	3955313	Argument	active_op_array		3954679	0					
ANR	3955314	Identifier	active_op_array		3954679	0					
ANR	3955315	Identifier	opcodes		3954679	1					
ANR	3955316	ExpressionStatement	init_opline -> extended_value = j	6756:2:199657:199688	3954679	5	True				
ANR	3955317	AssignmentExpression	init_opline -> extended_value = j		3954679	0		=			
ANR	3955318	PtrMemberAccess	init_opline -> extended_value		3954679	0					
ANR	3955319	Identifier	init_opline		3954679	0					
ANR	3955320	Identifier	extended_value		3954679	1					
ANR	3955321	Identifier	j		3954679	1					
ANR	3955322	ExpressionStatement	opline -> opcode = ZEND_ROPE_END	6757:2:199692:199722	3954679	6	True				
ANR	3955323	AssignmentExpression	opline -> opcode = ZEND_ROPE_END		3954679	0		=			
ANR	3955324	PtrMemberAccess	opline -> opcode		3954679	0					
ANR	3955325	Identifier	opline		3954679	0					
ANR	3955326	Identifier	opcode		3954679	1					
ANR	3955327	Identifier	ZEND_ROPE_END		3954679	1					
ANR	3955328	ExpressionStatement	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )	6758:2:199726:199790	3954679	7	True				
ANR	3955329	AssignmentExpression	opline -> result . var = get_temporary_variable ( CG ( active_op_array ) )		3954679	0		=			
ANR	3955330	MemberAccess	opline -> result . var		3954679	0					
ANR	3955331	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955332	Identifier	opline		3954679	0					
ANR	3955333	Identifier	result		3954679	1					
ANR	3955334	Identifier	var		3954679	1					
ANR	3955335	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3954679	1					
ANR	3955336	Callee	get_temporary_variable		3954679	0					
ANR	3955337	Identifier	get_temporary_variable		3954679	0					
ANR	3955338	ArgumentList	CG ( active_op_array )		3954679	1					
ANR	3955339	Argument	CG ( active_op_array )		3954679	0					
ANR	3955340	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955341	Callee	CG		3954679	0					
ANR	3955342	Identifier	CG		3954679	0					
ANR	3955343	ArgumentList	active_op_array		3954679	1					
ANR	3955344	Argument	active_op_array		3954679	0					
ANR	3955345	Identifier	active_op_array		3954679	0					
ANR	3955346	ExpressionStatement	var = opline -> op1 . var = get_temporary_variable ( CG ( active_op_array ) )	6759:2:199794:199861	3954679	8	True				
ANR	3955347	AssignmentExpression	var = opline -> op1 . var = get_temporary_variable ( CG ( active_op_array ) )		3954679	0		=			
ANR	3955348	Identifier	var		3954679	0					
ANR	3955349	AssignmentExpression	opline -> op1 . var = get_temporary_variable ( CG ( active_op_array ) )		3954679	1		=			
ANR	3955350	MemberAccess	opline -> op1 . var		3954679	0					
ANR	3955351	PtrMemberAccess	opline -> op1		3954679	0					
ANR	3955352	Identifier	opline		3954679	0					
ANR	3955353	Identifier	op1		3954679	1					
ANR	3955354	Identifier	var		3954679	1					
ANR	3955355	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3954679	1					
ANR	3955356	Callee	get_temporary_variable		3954679	0					
ANR	3955357	Identifier	get_temporary_variable		3954679	0					
ANR	3955358	ArgumentList	CG ( active_op_array )		3954679	1					
ANR	3955359	Argument	CG ( active_op_array )		3954679	0					
ANR	3955360	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955361	Callee	CG		3954679	0					
ANR	3955362	Identifier	CG		3954679	0					
ANR	3955363	ArgumentList	active_op_array		3954679	1					
ANR	3955364	Argument	active_op_array		3954679	0					
ANR	3955365	Identifier	active_op_array		3954679	0					
ANR	3955366	ExpressionStatement	"GET_NODE ( result , opline -> result )"	6760:2:199865:199897	3954679	9	True				
ANR	3955367	CallExpression	"GET_NODE ( result , opline -> result )"		3954679	0					
ANR	3955368	Callee	GET_NODE		3954679	0					
ANR	3955369	Identifier	GET_NODE		3954679	0					
ANR	3955370	ArgumentList	result		3954679	1					
ANR	3955371	Argument	result		3954679	0					
ANR	3955372	Identifier	result		3954679	0					
ANR	3955373	Argument	opline -> result		3954679	1					
ANR	3955374	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955375	Identifier	opline		3954679	0					
ANR	3955376	Identifier	result		3954679	1					
ANR	3955377	ExpressionStatement	i = ( ( j * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )	6763:2:199972:200040	3954679	10	True				
ANR	3955378	AssignmentExpression	i = ( ( j * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3954679	0		=			
ANR	3955379	Identifier	i		3954679	0					
ANR	3955380	MultiplicativeExpression	( ( j * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3954679	1		/			
ANR	3955381	AdditiveExpression	( j * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 )		3954679	0		+			
ANR	3955382	MultiplicativeExpression	j * sizeof ( zend_string * )		3954679	0		*			
ANR	3955383	Identifier	j		3954679	0					
ANR	3955384	SizeofExpression	sizeof ( zend_string * )		3954679	1					
ANR	3955385	Sizeof	sizeof		3954679	0					
ANR	3955386	SizeofOperand	zend_string *		3954679	1					
ANR	3955387	AdditiveExpression	sizeof ( zval ) - 1		3954679	1		-			
ANR	3955388	SizeofExpression	sizeof ( zval )		3954679	0					
ANR	3955389	Sizeof	sizeof		3954679	0					
ANR	3955390	SizeofOperand	zval		3954679	1					
ANR	3955391	PrimaryExpression	1		3954679	1					
ANR	3955392	SizeofExpression	sizeof ( zval )		3954679	1					
ANR	3955393	Sizeof	sizeof		3954679	0					
ANR	3955394	SizeofOperand	zval		3954679	1					
ANR	3955395	WhileStatement	while ( i > 1 )		3954679	11					
ANR	3955396	Condition	i > 1	6764:9:200051:200055	3954679	0	True				
ANR	3955397	RelationalExpression	i > 1		3954679	0		>			
ANR	3955398	Identifier	i		3954679	0					
ANR	3955399	PrimaryExpression	1		3954679	1					
ANR	3955400	CompoundStatement		91:16:3027:3027	3954679	1					
ANR	3955401	ExpressionStatement	get_temporary_variable ( CG ( active_op_array ) )	6765:3:200063:200106	3954679	0	True				
ANR	3955402	CallExpression	get_temporary_variable ( CG ( active_op_array ) )		3954679	0					
ANR	3955403	Callee	get_temporary_variable		3954679	0					
ANR	3955404	Identifier	get_temporary_variable		3954679	0					
ANR	3955405	ArgumentList	CG ( active_op_array )		3954679	1					
ANR	3955406	Argument	CG ( active_op_array )		3954679	0					
ANR	3955407	CallExpression	CG ( active_op_array )		3954679	0					
ANR	3955408	Callee	CG		3954679	0					
ANR	3955409	Identifier	CG		3954679	0					
ANR	3955410	ArgumentList	active_op_array		3954679	1					
ANR	3955411	Argument	active_op_array		3954679	0					
ANR	3955412	Identifier	active_op_array		3954679	0					
ANR	3955413	ExpressionStatement	i --	6766:3:200111:200114	3954679	1	True				
ANR	3955414	PostIncDecOperationExpression	i --		3954679	0					
ANR	3955415	Identifier	i		3954679	0					
ANR	3955416	IncDec	--		3954679	1					
ANR	3955417	WhileStatement	while ( opline != init_opline )		3954679	12					
ANR	3955418	Condition	opline != init_opline	6769:9:200197:200217	3954679	0	True				
ANR	3955419	EqualityExpression	opline != init_opline		3954679	0		!=			
ANR	3955420	Identifier	opline		3954679	0					
ANR	3955421	Identifier	init_opline		3954679	1					
ANR	3955422	CompoundStatement		96:32:3189:3189	3954679	1					
ANR	3955423	ExpressionStatement	opline --	6770:3:200225:200233	3954679	0	True				
ANR	3955424	PostIncDecOperationExpression	opline --		3954679	0					
ANR	3955425	Identifier	opline		3954679	0					
ANR	3955426	IncDec	--		3954679	1					
ANR	3955427	IfStatement	if ( opline -> opcode == ZEND_ROPE_ADD && opline -> result . var == - 1 )		3954679	1					
ANR	3955428	Condition	opline -> opcode == ZEND_ROPE_ADD && opline -> result . var == - 1	6771:7:200242:200307	3954679	0	True				
ANR	3955429	AndExpression	opline -> opcode == ZEND_ROPE_ADD && opline -> result . var == - 1		3954679	0		&&			
ANR	3955430	EqualityExpression	opline -> opcode == ZEND_ROPE_ADD		3954679	0		==			
ANR	3955431	PtrMemberAccess	opline -> opcode		3954679	0					
ANR	3955432	Identifier	opline		3954679	0					
ANR	3955433	Identifier	opcode		3954679	1					
ANR	3955434	Identifier	ZEND_ROPE_ADD		3954679	1					
ANR	3955435	EqualityExpression	opline -> result . var == - 1		3954679	1		==			
ANR	3955436	MemberAccess	opline -> result . var		3954679	0					
ANR	3955437	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955438	Identifier	opline		3954679	0					
ANR	3955439	Identifier	result		3954679	1					
ANR	3955440	Identifier	var		3954679	1					
ANR	3955441	UnaryOperationExpression	- 1		3954679	1					
ANR	3955442	UnaryOperator	-		3954679	0					
ANR	3955443	PrimaryExpression	1		3954679	1					
ANR	3955444	CompoundStatement		99:33:3279:3279	3954679	1					
ANR	3955445	ExpressionStatement	opline -> op1 . var = var	6773:4:200316:200337	3954679	0	True				
ANR	3955446	AssignmentExpression	opline -> op1 . var = var		3954679	0		=			
ANR	3955447	MemberAccess	opline -> op1 . var		3954679	0					
ANR	3955448	PtrMemberAccess	opline -> op1		3954679	0					
ANR	3955449	Identifier	opline		3954679	0					
ANR	3955450	Identifier	op1		3954679	1					
ANR	3955451	Identifier	var		3954679	1					
ANR	3955452	Identifier	var		3954679	1					
ANR	3955453	ExpressionStatement	opline -> result . var = var	6774:4:200343:200367	3954679	1	True				
ANR	3955454	AssignmentExpression	opline -> result . var = var		3954679	0		=			
ANR	3955455	MemberAccess	opline -> result . var		3954679	0					
ANR	3955456	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955457	Identifier	opline		3954679	0					
ANR	3955458	Identifier	result		3954679	1					
ANR	3955459	Identifier	var		3954679	1					
ANR	3955460	Identifier	var		3954679	1					
ANR	3955461	ElseStatement	else		3954679	0					
ANR	3955462	IfStatement	if ( opline -> opcode == ZEND_ROPE_INIT && opline -> result . var == - 1 )		3954679	0					
ANR	3955463	Condition	opline -> opcode == ZEND_ROPE_INIT && opline -> result . var == - 1	6775:14:200383:200456	3954679	0	True				
ANR	3955464	AndExpression	opline -> opcode == ZEND_ROPE_INIT && opline -> result . var == - 1		3954679	0		&&			
ANR	3955465	EqualityExpression	opline -> opcode == ZEND_ROPE_INIT		3954679	0		==			
ANR	3955466	PtrMemberAccess	opline -> opcode		3954679	0					
ANR	3955467	Identifier	opline		3954679	0					
ANR	3955468	Identifier	opcode		3954679	1					
ANR	3955469	Identifier	ZEND_ROPE_INIT		3954679	1					
ANR	3955470	EqualityExpression	opline -> result . var == - 1		3954679	1		==			
ANR	3955471	MemberAccess	opline -> result . var		3954679	0					
ANR	3955472	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955473	Identifier	opline		3954679	0					
ANR	3955474	Identifier	result		3954679	1					
ANR	3955475	Identifier	var		3954679	1					
ANR	3955476	UnaryOperationExpression	- 1		3954679	1					
ANR	3955477	UnaryOperator	-		3954679	0					
ANR	3955478	PrimaryExpression	1		3954679	1					
ANR	3955479	CompoundStatement		103:40:3428:3428	3954679	1					
ANR	3955480	ExpressionStatement	opline -> result . var = var	6777:4:200465:200489	3954679	0	True				
ANR	3955481	AssignmentExpression	opline -> result . var = var		3954679	0		=			
ANR	3955482	MemberAccess	opline -> result . var		3954679	0					
ANR	3955483	PtrMemberAccess	opline -> result		3954679	0					
ANR	3955484	Identifier	opline		3954679	0					
ANR	3955485	Identifier	result		3954679	1					
ANR	3955486	Identifier	var		3954679	1					
ANR	3955487	Identifier	var		3954679	1					
ANR	3955488	ReturnType	static void		3954679	1					
ANR	3955489	Identifier	zend_compile_encaps_list		3954679	2					
ANR	3955490	ParameterList	"znode * result , zend_ast * ast"		3954679	3					
ANR	3955491	Parameter	znode * result	6673:37:196990:197002	3954679	0	True				
ANR	3955492	ParameterType	znode *		3954679	0					
ANR	3955493	Identifier	result		3954679	1					
ANR	3955494	Parameter	zend_ast * ast	6673:52:197005:197017	3954679	1	True				
ANR	3955495	ParameterType	zend_ast *		3954679	0					
ANR	3955496	Identifier	ast		3954679	1					
ANR	3955497	CFGEntryNode	ENTRY		3954679		True				
ANR	3955498	CFGExitNode	EXIT		3954679		True				
ANR	3955499	Symbol	ast		3954679						
ANR	3955500	Symbol	& last_const_node . u		3954679						
ANR	3955501	Symbol	ZEND_FAST_CONCAT		3954679						
ANR	3955502	Symbol	& elem_node . u . constant		3954679						
ANR	3955503	Symbol	* CG		3954679						
ANR	3955504	Symbol	get_temporary_variable		3954679						
ANR	3955505	Symbol	init_opline -> op2_type		3954679						
ANR	3955506	Symbol	result -> u		3954679						
ANR	3955507	Symbol	CG ( active_op_array ) -> opcodes		3954679						
ANR	3955508	Symbol	opline -> extended_value		3954679						
ANR	3955509	Symbol	opline -> result		3954679						
ANR	3955510	Symbol	* init_opline		3954679						
ANR	3955511	Symbol	opline		3954679						
ANR	3955512	Symbol	info -> brk		3954679						
ANR	3955513	Symbol	context		3954679						
ANR	3955514	Symbol	IS_STRING		3954679						
ANR	3955515	Symbol	rope_init_lineno		3954679						
ANR	3955516	Symbol	& last_const_node . u . constant		3954679						
ANR	3955517	Symbol	IS_TMP_VAR		3954679						
ANR	3955518	Symbol	info		3954679						
ANR	3955519	Symbol	CG ( context ) . current_brk_cont		3954679						
ANR	3955520	Symbol	IS_CONST		3954679						
ANR	3955521	Symbol	ZEND_ROPE_ADD		3954679						
ANR	3955522	Symbol	NULL		3954679						
ANR	3955523	Symbol	info -> cont		3954679						
ANR	3955524	Symbol	init_opline -> extended_value		3954679						
ANR	3955525	Symbol	var		3954679						
ANR	3955526	Symbol	list		3954679						
ANR	3955527	Symbol	last_const_node . u		3954679						
ANR	3955528	Symbol	opline -> op1_type		3954679						
ANR	3955529	Symbol	& elem_node . u		3954679						
ANR	3955530	Symbol	* list -> child		3954679						
ANR	3955531	Symbol	list -> children		3954679						
ANR	3955532	Symbol	opline -> op1		3954679						
ANR	3955533	Symbol	opline -> op2		3954679						
ANR	3955534	Symbol	init_opline		3954679						
ANR	3955535	Symbol	& last_const_node		3954679						
ANR	3955536	Symbol	Z_STRLEN		3954679						
ANR	3955537	Symbol	result -> op_type		3954679						
ANR	3955538	Symbol	zend_compile_rope_add		3954679						
ANR	3955539	Symbol	get_next_brk_cont_element		3954679						
ANR	3955540	Symbol	result		3954679						
ANR	3955541	Symbol	last_const_node		3954679						
ANR	3955542	Symbol	* * list		3954679						
ANR	3955543	Symbol	ZEND_CAST		3954679						
ANR	3955544	Symbol	* result		3954679						
ANR	3955545	Symbol	& result -> u . constant		3954679						
ANR	3955546	Symbol	& elem_node		3954679						
ANR	3955547	Symbol	opline -> op1 . var		3954679						
ANR	3955548	Symbol	opline -> result_type		3954679						
ANR	3955549	Symbol	info -> parent		3954679						
ANR	3955550	Symbol	list -> child		3954679						
ANR	3955551	Symbol	CG		3954679						
ANR	3955552	Symbol	& result -> u		3954679						
ANR	3955553	Symbol	active_op_array		3954679						
ANR	3955554	Symbol	i		3954679						
ANR	3955555	Symbol	j		3954679						
ANR	3955556	Symbol	elem_node		3954679						
ANR	3955557	Symbol	elem_node . u . constant		3954679						
ANR	3955558	Symbol	info -> start		3954679						
ANR	3955559	Symbol	zend_ast_get_list		3954679						
ANR	3955560	Symbol	* i		3954679						
ANR	3955561	Symbol	init_opline -> op2		3954679						
ANR	3955562	Symbol	* opline		3954679						
ANR	3955563	Symbol	* list		3954679						
ANR	3955564	Symbol	elem_node . u		3954679						
ANR	3955565	Symbol	opline -> opcode		3954679						
ANR	3955566	Symbol	elem_node . op_type		3954679						
ANR	3955567	Symbol	opline -> op2_type		3954679						
ANR	3955568	Symbol	* info		3954679						
ANR	3955569	Symbol	ZEND_ROPE_END		3954679						
ANR	3955570	Symbol	get_next_op_number		3954679						
ANR	3955571	Symbol	last_const_node . op_type		3954679						
ANR	3955572	Symbol	opline -> result . var		3954679						
ANR	3955573	Symbol	IS_UNUSED		3954679						
ANR	3955574	Symbol	ZEND_ROPE_INIT		3954679						
ANR	3955575	Function	zend_compile_magic_const	6784:0:200516:200985							
ANR	3955576	FunctionDef	"zend_compile_magic_const (znode * result , zend_ast * ast)"		3955575	0					
ANR	3955577	CompoundStatement		6785:0:200586:200985	3955575	0					
ANR	3955578	IdentifierDeclStatement	zend_op * opline ;	6786:1:200589:200604	3955575	0	True				
ANR	3955579	IdentifierDecl	* opline		3955575	0					
ANR	3955580	IdentifierDeclType	zend_op *		3955575	0					
ANR	3955581	Identifier	opline		3955575	1					
ANR	3955582	IfStatement	"if ( zend_try_ct_eval_magic_const ( & result -> u . constant , ast ) )"		3955575	1					
ANR	3955583	Condition	"zend_try_ct_eval_magic_const ( & result -> u . constant , ast )"	6788:5:200612:200665	3955575	0	True				
ANR	3955584	CallExpression	"zend_try_ct_eval_magic_const ( & result -> u . constant , ast )"		3955575	0					
ANR	3955585	Callee	zend_try_ct_eval_magic_const		3955575	0					
ANR	3955586	Identifier	zend_try_ct_eval_magic_const		3955575	0					
ANR	3955587	ArgumentList	& result -> u . constant		3955575	1					
ANR	3955588	Argument	& result -> u . constant		3955575	0					
ANR	3955589	UnaryOperationExpression	& result -> u . constant		3955575	0					
ANR	3955590	UnaryOperator	&		3955575	0					
ANR	3955591	MemberAccess	result -> u . constant		3955575	1					
ANR	3955592	PtrMemberAccess	result -> u		3955575	0					
ANR	3955593	Identifier	result		3955575	0					
ANR	3955594	Identifier	u		3955575	1					
ANR	3955595	Identifier	constant		3955575	1					
ANR	3955596	Argument	ast		3955575	1					
ANR	3955597	Identifier	ast		3955575	0					
ANR	3955598	CompoundStatement		4:61:81:81	3955575	1					
ANR	3955599	ExpressionStatement	result -> op_type = IS_CONST	6789:2:200672:200698	3955575	0	True				
ANR	3955600	AssignmentExpression	result -> op_type = IS_CONST		3955575	0		=			
ANR	3955601	PtrMemberAccess	result -> op_type		3955575	0					
ANR	3955602	Identifier	result		3955575	0					
ANR	3955603	Identifier	op_type		3955575	1					
ANR	3955604	Identifier	IS_CONST		3955575	1					
ANR	3955605	ReturnStatement	return ;	6790:2:200702:200708	3955575	1	True				
ANR	3955606	ExpressionStatement	ZEND_ASSERT ( ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0 )	6793:1:200715:200862	3955575	2	True				
ANR	3955607	CallExpression	ZEND_ASSERT ( ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0 )		3955575	0					
ANR	3955608	Callee	ZEND_ASSERT		3955575	0					
ANR	3955609	Identifier	ZEND_ASSERT		3955575	0					
ANR	3955610	ArgumentList	ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3955575	1					
ANR	3955611	Argument	ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3955575	0					
ANR	3955612	AndExpression	ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3955575	0		&&			
ANR	3955613	EqualityExpression	ast -> attr == T_CLASS_C		3955575	0		==			
ANR	3955614	PtrMemberAccess	ast -> attr		3955575	0					
ANR	3955615	Identifier	ast		3955575	0					
ANR	3955616	Identifier	attr		3955575	1					
ANR	3955617	Identifier	T_CLASS_C		3955575	1					
ANR	3955618	AndExpression	CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3955575	1		&&			
ANR	3955619	CallExpression	CG ( active_class_entry )		3955575	0					
ANR	3955620	Callee	CG		3955575	0					
ANR	3955621	Identifier	CG		3955575	0					
ANR	3955622	ArgumentList	active_class_entry		3955575	1					
ANR	3955623	Argument	active_class_entry		3955575	0					
ANR	3955624	Identifier	active_class_entry		3955575	0					
ANR	3955625	EqualityExpression	( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3955575	1		!=			
ANR	3955626	BitAndExpression	CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT		3955575	0		&			
ANR	3955627	PtrMemberAccess	CG ( active_class_entry ) -> ce_flags		3955575	0					
ANR	3955628	CallExpression	CG ( active_class_entry )		3955575	0					
ANR	3955629	Callee	CG		3955575	0					
ANR	3955630	Identifier	CG		3955575	0					
ANR	3955631	ArgumentList	active_class_entry		3955575	1					
ANR	3955632	Argument	active_class_entry		3955575	0					
ANR	3955633	Identifier	active_class_entry		3955575	0					
ANR	3955634	Identifier	ce_flags		3955575	1					
ANR	3955635	Identifier	ZEND_ACC_TRAIT		3955575	1					
ANR	3955636	PrimaryExpression	0		3955575	1					
ANR	3955637	ExpressionStatement	"opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"	6797:1:200866:200934	3955575	3	True				
ANR	3955638	AssignmentExpression	"opline = zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3955575	0		=			
ANR	3955639	Identifier	opline		3955575	0					
ANR	3955640	CallExpression	"zend_emit_op_tmp ( result , ZEND_FETCH_CLASS_NAME , NULL , NULL )"		3955575	1					
ANR	3955641	Callee	zend_emit_op_tmp		3955575	0					
ANR	3955642	Identifier	zend_emit_op_tmp		3955575	0					
ANR	3955643	ArgumentList	result		3955575	1					
ANR	3955644	Argument	result		3955575	0					
ANR	3955645	Identifier	result		3955575	0					
ANR	3955646	Argument	ZEND_FETCH_CLASS_NAME		3955575	1					
ANR	3955647	Identifier	ZEND_FETCH_CLASS_NAME		3955575	0					
ANR	3955648	Argument	NULL		3955575	2					
ANR	3955649	Identifier	NULL		3955575	0					
ANR	3955650	Argument	NULL		3955575	3					
ANR	3955651	Identifier	NULL		3955575	0					
ANR	3955652	ExpressionStatement	opline -> extended_value = ZEND_FETCH_CLASS_SELF	6798:1:200937:200983	3955575	4	True				
ANR	3955653	AssignmentExpression	opline -> extended_value = ZEND_FETCH_CLASS_SELF		3955575	0		=			
ANR	3955654	PtrMemberAccess	opline -> extended_value		3955575	0					
ANR	3955655	Identifier	opline		3955575	0					
ANR	3955656	Identifier	extended_value		3955575	1					
ANR	3955657	Identifier	ZEND_FETCH_CLASS_SELF		3955575	1					
ANR	3955658	ReturnType	void		3955575	1					
ANR	3955659	Identifier	zend_compile_magic_const		3955575	2					
ANR	3955660	ParameterList	"znode * result , zend_ast * ast"		3955575	3					
ANR	3955661	Parameter	znode * result	6784:30:200546:200558	3955575	0	True				
ANR	3955662	ParameterType	znode *		3955575	0					
ANR	3955663	Identifier	result		3955575	1					
ANR	3955664	Parameter	zend_ast * ast	6784:45:200561:200573	3955575	1	True				
ANR	3955665	ParameterType	zend_ast *		3955575	0					
ANR	3955666	Identifier	ast		3955575	1					
ANR	3955667	CFGEntryNode	ENTRY		3955575		True				
ANR	3955668	CFGExitNode	EXIT		3955575		True				
ANR	3955669	Symbol	T_CLASS_C		3955575						
ANR	3955670	Symbol	ast -> attr		3955575						
ANR	3955671	Symbol	zend_emit_op_tmp		3955575						
ANR	3955672	Symbol	IS_CONST		3955575						
ANR	3955673	Symbol	ast		3955575						
ANR	3955674	Symbol	NULL		3955575						
ANR	3955675	Symbol	& result -> u		3955575						
ANR	3955676	Symbol	CG		3955575						
ANR	3955677	Symbol	active_class_entry		3955575						
ANR	3955678	Symbol	* CG		3955575						
ANR	3955679	Symbol	result -> op_type		3955575						
ANR	3955680	Symbol	result -> u		3955575						
ANR	3955681	Symbol	opline -> extended_value		3955575						
ANR	3955682	Symbol	ZEND_ACC_TRAIT		3955575						
ANR	3955683	Symbol	result		3955575						
ANR	3955684	Symbol	opline		3955575						
ANR	3955685	Symbol	* ast		3955575						
ANR	3955686	Symbol	* opline		3955575						
ANR	3955687	Symbol	* result		3955575						
ANR	3955688	Symbol	ZEND_FETCH_CLASS_NAME		3955575						
ANR	3955689	Symbol	ZEND_FETCH_CLASS_SELF		3955575						
ANR	3955690	Symbol	& result -> u . constant		3955575						
ANR	3955691	Symbol	CG ( active_class_entry ) -> ce_flags		3955575						
ANR	3955692	Symbol	zend_try_ct_eval_magic_const		3955575						
ANR	3955693	Function	zend_is_allowed_in_const_expr	6802:0:200998:201551							
ANR	3955694	FunctionDef	zend_is_allowed_in_const_expr (zend_ast_kind kind)		3955693	0					
ANR	3955695	CompoundStatement		6803:0:201068:201551	3955693	0					
ANR	3955696	ReturnStatement	return kind == ZEND_AST_ZVAL || kind == ZEND_AST_BINARY_OP || kind == ZEND_AST_GREATER || kind == ZEND_AST_GREATER_EQUAL || kind == ZEND_AST_AND || kind == ZEND_AST_OR || kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST ;	6804:1:201071:201549	3955693	0	True				
ANR	3955697	OrExpression	kind == ZEND_AST_ZVAL || kind == ZEND_AST_BINARY_OP || kind == ZEND_AST_GREATER || kind == ZEND_AST_GREATER_EQUAL || kind == ZEND_AST_AND || kind == ZEND_AST_OR || kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	0		||			
ANR	3955698	EqualityExpression	kind == ZEND_AST_ZVAL		3955693	0		==			
ANR	3955699	Identifier	kind		3955693	0					
ANR	3955700	Identifier	ZEND_AST_ZVAL		3955693	1					
ANR	3955701	OrExpression	kind == ZEND_AST_BINARY_OP || kind == ZEND_AST_GREATER || kind == ZEND_AST_GREATER_EQUAL || kind == ZEND_AST_AND || kind == ZEND_AST_OR || kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955702	EqualityExpression	kind == ZEND_AST_BINARY_OP		3955693	0		==			
ANR	3955703	Identifier	kind		3955693	0					
ANR	3955704	Identifier	ZEND_AST_BINARY_OP		3955693	1					
ANR	3955705	OrExpression	kind == ZEND_AST_GREATER || kind == ZEND_AST_GREATER_EQUAL || kind == ZEND_AST_AND || kind == ZEND_AST_OR || kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955706	EqualityExpression	kind == ZEND_AST_GREATER		3955693	0		==			
ANR	3955707	Identifier	kind		3955693	0					
ANR	3955708	Identifier	ZEND_AST_GREATER		3955693	1					
ANR	3955709	OrExpression	kind == ZEND_AST_GREATER_EQUAL || kind == ZEND_AST_AND || kind == ZEND_AST_OR || kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955710	EqualityExpression	kind == ZEND_AST_GREATER_EQUAL		3955693	0		==			
ANR	3955711	Identifier	kind		3955693	0					
ANR	3955712	Identifier	ZEND_AST_GREATER_EQUAL		3955693	1					
ANR	3955713	OrExpression	kind == ZEND_AST_AND || kind == ZEND_AST_OR || kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955714	EqualityExpression	kind == ZEND_AST_AND		3955693	0		==			
ANR	3955715	Identifier	kind		3955693	0					
ANR	3955716	Identifier	ZEND_AST_AND		3955693	1					
ANR	3955717	OrExpression	kind == ZEND_AST_OR || kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955718	EqualityExpression	kind == ZEND_AST_OR		3955693	0		==			
ANR	3955719	Identifier	kind		3955693	0					
ANR	3955720	Identifier	ZEND_AST_OR		3955693	1					
ANR	3955721	OrExpression	kind == ZEND_AST_UNARY_OP || kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955722	EqualityExpression	kind == ZEND_AST_UNARY_OP		3955693	0		==			
ANR	3955723	Identifier	kind		3955693	0					
ANR	3955724	Identifier	ZEND_AST_UNARY_OP		3955693	1					
ANR	3955725	OrExpression	kind == ZEND_AST_UNARY_PLUS || kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955726	EqualityExpression	kind == ZEND_AST_UNARY_PLUS		3955693	0		==			
ANR	3955727	Identifier	kind		3955693	0					
ANR	3955728	Identifier	ZEND_AST_UNARY_PLUS		3955693	1					
ANR	3955729	OrExpression	kind == ZEND_AST_UNARY_MINUS || kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955730	EqualityExpression	kind == ZEND_AST_UNARY_MINUS		3955693	0		==			
ANR	3955731	Identifier	kind		3955693	0					
ANR	3955732	Identifier	ZEND_AST_UNARY_MINUS		3955693	1					
ANR	3955733	OrExpression	kind == ZEND_AST_CONDITIONAL || kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955734	EqualityExpression	kind == ZEND_AST_CONDITIONAL		3955693	0		==			
ANR	3955735	Identifier	kind		3955693	0					
ANR	3955736	Identifier	ZEND_AST_CONDITIONAL		3955693	1					
ANR	3955737	OrExpression	kind == ZEND_AST_DIM || kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955738	EqualityExpression	kind == ZEND_AST_DIM		3955693	0		==			
ANR	3955739	Identifier	kind		3955693	0					
ANR	3955740	Identifier	ZEND_AST_DIM		3955693	1					
ANR	3955741	OrExpression	kind == ZEND_AST_ARRAY || kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955742	EqualityExpression	kind == ZEND_AST_ARRAY		3955693	0		==			
ANR	3955743	Identifier	kind		3955693	0					
ANR	3955744	Identifier	ZEND_AST_ARRAY		3955693	1					
ANR	3955745	OrExpression	kind == ZEND_AST_ARRAY_ELEM || kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955746	EqualityExpression	kind == ZEND_AST_ARRAY_ELEM		3955693	0		==			
ANR	3955747	Identifier	kind		3955693	0					
ANR	3955748	Identifier	ZEND_AST_ARRAY_ELEM		3955693	1					
ANR	3955749	OrExpression	kind == ZEND_AST_CONST || kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955750	EqualityExpression	kind == ZEND_AST_CONST		3955693	0		==			
ANR	3955751	Identifier	kind		3955693	0					
ANR	3955752	Identifier	ZEND_AST_CONST		3955693	1					
ANR	3955753	OrExpression	kind == ZEND_AST_CLASS_CONST || kind == ZEND_AST_MAGIC_CONST		3955693	1		||			
ANR	3955754	EqualityExpression	kind == ZEND_AST_CLASS_CONST		3955693	0		==			
ANR	3955755	Identifier	kind		3955693	0					
ANR	3955756	Identifier	ZEND_AST_CLASS_CONST		3955693	1					
ANR	3955757	EqualityExpression	kind == ZEND_AST_MAGIC_CONST		3955693	1		==			
ANR	3955758	Identifier	kind		3955693	0					
ANR	3955759	Identifier	ZEND_AST_MAGIC_CONST		3955693	1					
ANR	3955760	ReturnType	zend_bool		3955693	1					
ANR	3955761	Identifier	zend_is_allowed_in_const_expr		3955693	2					
ANR	3955762	ParameterList	zend_ast_kind kind		3955693	3					
ANR	3955763	Parameter	zend_ast_kind kind	6802:40:201038:201055	3955693	0	True				
ANR	3955764	ParameterType	zend_ast_kind		3955693	0					
ANR	3955765	Identifier	kind		3955693	1					
ANR	3955766	CFGEntryNode	ENTRY		3955693		True				
ANR	3955767	CFGExitNode	EXIT		3955693		True				
ANR	3955768	Symbol	ZEND_AST_UNARY_OP		3955693						
ANR	3955769	Symbol	ZEND_AST_CONST		3955693						
ANR	3955770	Symbol	ZEND_AST_UNARY_MINUS		3955693						
ANR	3955771	Symbol	ZEND_AST_UNARY_PLUS		3955693						
ANR	3955772	Symbol	ZEND_AST_AND		3955693						
ANR	3955773	Symbol	kind		3955693						
ANR	3955774	Symbol	ZEND_AST_CONDITIONAL		3955693						
ANR	3955775	Symbol	ZEND_AST_ARRAY_ELEM		3955693						
ANR	3955776	Symbol	ZEND_AST_OR		3955693						
ANR	3955777	Symbol	ZEND_AST_GREATER		3955693						
ANR	3955778	Symbol	ZEND_AST_CLASS_CONST		3955693						
ANR	3955779	Symbol	ZEND_AST_ARRAY		3955693						
ANR	3955780	Symbol	ZEND_AST_GREATER_EQUAL		3955693						
ANR	3955781	Symbol	ZEND_AST_DIM		3955693						
ANR	3955782	Symbol	ZEND_AST_MAGIC_CONST		3955693						
ANR	3955783	Symbol	ZEND_AST_ZVAL		3955693						
ANR	3955784	Symbol	ZEND_AST_BINARY_OP		3955693						
ANR	3955785	Function	zend_compile_const_expr_class_const	6816:0:201564:202878							
ANR	3955786	FunctionDef	zend_compile_const_expr_class_const (zend_ast * * ast_ptr)		3955785	0					
ANR	3955787	CompoundStatement		6817:0:201635:202878	3955785	0					
ANR	3955788	IdentifierDeclStatement	zend_ast * ast = * ast_ptr ;	6818:1:201638:201662	3955785	0	True				
ANR	3955789	IdentifierDecl	* ast = * ast_ptr		3955785	0					
ANR	3955790	IdentifierDeclType	zend_ast *		3955785	0					
ANR	3955791	Identifier	ast		3955785	1					
ANR	3955792	AssignmentExpression	* ast = * ast_ptr		3955785	2		=			
ANR	3955793	Identifier	ast		3955785	0					
ANR	3955794	UnaryOperationExpression	* ast_ptr		3955785	1					
ANR	3955795	UnaryOperator	*		3955785	0					
ANR	3955796	Identifier	ast_ptr		3955785	1					
ANR	3955797	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 0 ] ;	6819:1:201665:201700	3955785	1	True				
ANR	3955798	IdentifierDecl	* class_ast = ast -> child [ 0 ]		3955785	0					
ANR	3955799	IdentifierDeclType	zend_ast *		3955785	0					
ANR	3955800	Identifier	class_ast		3955785	1					
ANR	3955801	AssignmentExpression	* class_ast = ast -> child [ 0 ]		3955785	2		=			
ANR	3955802	Identifier	class_ast		3955785	0					
ANR	3955803	ArrayIndexing	ast -> child [ 0 ]		3955785	1					
ANR	3955804	PtrMemberAccess	ast -> child		3955785	0					
ANR	3955805	Identifier	ast		3955785	0					
ANR	3955806	Identifier	child		3955785	1					
ANR	3955807	PrimaryExpression	0		3955785	1					
ANR	3955808	IdentifierDeclStatement	zend_ast * const_ast = ast -> child [ 1 ] ;	6820:1:201703:201738	3955785	2	True				
ANR	3955809	IdentifierDecl	* const_ast = ast -> child [ 1 ]		3955785	0					
ANR	3955810	IdentifierDeclType	zend_ast *		3955785	0					
ANR	3955811	Identifier	const_ast		3955785	1					
ANR	3955812	AssignmentExpression	* const_ast = ast -> child [ 1 ]		3955785	2		=			
ANR	3955813	Identifier	const_ast		3955785	0					
ANR	3955814	ArrayIndexing	ast -> child [ 1 ]		3955785	1					
ANR	3955815	PtrMemberAccess	ast -> child		3955785	0					
ANR	3955816	Identifier	ast		3955785	0					
ANR	3955817	Identifier	child		3955785	1					
ANR	3955818	PrimaryExpression	1		3955785	1					
ANR	3955819	IdentifierDeclStatement	zend_string * class_name ;	6821:1:201741:201764	3955785	3	True				
ANR	3955820	IdentifierDecl	* class_name		3955785	0					
ANR	3955821	IdentifierDeclType	zend_string *		3955785	0					
ANR	3955822	Identifier	class_name		3955785	1					
ANR	3955823	IdentifierDeclStatement	zend_string * const_name = zend_ast_get_str ( const_ast ) ;	6822:1:201767:201820	3955785	4	True				
ANR	3955824	IdentifierDecl	* const_name = zend_ast_get_str ( const_ast )		3955785	0					
ANR	3955825	IdentifierDeclType	zend_string *		3955785	0					
ANR	3955826	Identifier	const_name		3955785	1					
ANR	3955827	AssignmentExpression	* const_name = zend_ast_get_str ( const_ast )		3955785	2		=			
ANR	3955828	Identifier	const_name		3955785	0					
ANR	3955829	CallExpression	zend_ast_get_str ( const_ast )		3955785	1					
ANR	3955830	Callee	zend_ast_get_str		3955785	0					
ANR	3955831	Identifier	zend_ast_get_str		3955785	0					
ANR	3955832	ArgumentList	const_ast		3955785	1					
ANR	3955833	Argument	const_ast		3955785	0					
ANR	3955834	Identifier	const_ast		3955785	0					
ANR	3955835	IdentifierDeclStatement	zval result ;	6823:1:201823:201834	3955785	5	True				
ANR	3955836	IdentifierDecl	result		3955785	0					
ANR	3955837	IdentifierDeclType	zval		3955785	0					
ANR	3955838	Identifier	result		3955785	1					
ANR	3955839	IdentifierDeclStatement	int fetch_type ;	6824:1:201837:201851	3955785	6	True				
ANR	3955840	IdentifierDecl	fetch_type		3955785	0					
ANR	3955841	IdentifierDeclType	int		3955785	0					
ANR	3955842	Identifier	fetch_type		3955785	1					
ANR	3955843	IfStatement	if ( class_ast -> kind != ZEND_AST_ZVAL )		3955785	7					
ANR	3955844	Condition	class_ast -> kind != ZEND_AST_ZVAL	6826:5:201859:201890	3955785	0	True				
ANR	3955845	EqualityExpression	class_ast -> kind != ZEND_AST_ZVAL		3955785	0		!=			
ANR	3955846	PtrMemberAccess	class_ast -> kind		3955785	0					
ANR	3955847	Identifier	class_ast		3955785	0					
ANR	3955848	Identifier	kind		3955785	1					
ANR	3955849	Identifier	ZEND_AST_ZVAL		3955785	1					
ANR	3955850	CompoundStatement		10:39:257:257	3955785	1					
ANR	3955851	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time class constant references"" )"	6827:2:201897:202017	3955785	0	True				
ANR	3955852	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time class constant references"" )"		3955785	0					
ANR	3955853	Callee	zend_error_noreturn		3955785	0					
ANR	3955854	Identifier	zend_error_noreturn		3955785	0					
ANR	3955855	ArgumentList	E_COMPILE_ERROR		3955785	1					
ANR	3955856	Argument	E_COMPILE_ERROR		3955785	0					
ANR	3955857	Identifier	E_COMPILE_ERROR		3955785	0					
ANR	3955858	Argument	"""Dynamic class names are not allowed in compile-time class constant references"""		3955785	1					
ANR	3955859	PrimaryExpression	"""Dynamic class names are not allowed in compile-time class constant references"""		3955785	0					
ANR	3955860	IfStatement	"if ( zend_try_compile_const_expr_resolve_class_name ( & result , class_ast , const_ast , 1 ) )"		3955785	8					
ANR	3955861	Condition	"zend_try_compile_const_expr_resolve_class_name ( & result , class_ast , const_ast , 1 )"	6831:5:202028:202107	3955785	0	True				
ANR	3955862	CallExpression	"zend_try_compile_const_expr_resolve_class_name ( & result , class_ast , const_ast , 1 )"		3955785	0					
ANR	3955863	Callee	zend_try_compile_const_expr_resolve_class_name		3955785	0					
ANR	3955864	Identifier	zend_try_compile_const_expr_resolve_class_name		3955785	0					
ANR	3955865	ArgumentList	& result		3955785	1					
ANR	3955866	Argument	& result		3955785	0					
ANR	3955867	UnaryOperationExpression	& result		3955785	0					
ANR	3955868	UnaryOperator	&		3955785	0					
ANR	3955869	Identifier	result		3955785	1					
ANR	3955870	Argument	class_ast		3955785	1					
ANR	3955871	Identifier	class_ast		3955785	0					
ANR	3955872	Argument	const_ast		3955785	2					
ANR	3955873	Identifier	const_ast		3955785	0					
ANR	3955874	Argument	1		3955785	3					
ANR	3955875	PrimaryExpression	1		3955785	0					
ANR	3955876	CompoundStatement		15:87:474:474	3955785	1					
ANR	3955877	ExpressionStatement	* ast_ptr = zend_ast_create_zval ( & result )	6832:2:202114:202154	3955785	0	True				
ANR	3955878	AssignmentExpression	* ast_ptr = zend_ast_create_zval ( & result )		3955785	0		=			
ANR	3955879	UnaryOperationExpression	* ast_ptr		3955785	0					
ANR	3955880	UnaryOperator	*		3955785	0					
ANR	3955881	Identifier	ast_ptr		3955785	1					
ANR	3955882	CallExpression	zend_ast_create_zval ( & result )		3955785	1					
ANR	3955883	Callee	zend_ast_create_zval		3955785	0					
ANR	3955884	Identifier	zend_ast_create_zval		3955785	0					
ANR	3955885	ArgumentList	& result		3955785	1					
ANR	3955886	Argument	& result		3955785	0					
ANR	3955887	UnaryOperationExpression	& result		3955785	0					
ANR	3955888	UnaryOperator	&		3955785	0					
ANR	3955889	Identifier	result		3955785	1					
ANR	3955890	ReturnStatement	return ;	6833:2:202158:202164	3955785	1	True				
ANR	3955891	ExpressionStatement	class_name = zend_ast_get_str ( class_ast )	6836:1:202171:202211	3955785	9	True				
ANR	3955892	AssignmentExpression	class_name = zend_ast_get_str ( class_ast )		3955785	0		=			
ANR	3955893	Identifier	class_name		3955785	0					
ANR	3955894	CallExpression	zend_ast_get_str ( class_ast )		3955785	1					
ANR	3955895	Callee	zend_ast_get_str		3955785	0					
ANR	3955896	Identifier	zend_ast_get_str		3955785	0					
ANR	3955897	ArgumentList	class_ast		3955785	1					
ANR	3955898	Argument	class_ast		3955785	0					
ANR	3955899	Identifier	class_ast		3955785	0					
ANR	3955900	ExpressionStatement	fetch_type = zend_get_class_fetch_type ( class_name )	6837:1:202214:202264	3955785	10	True				
ANR	3955901	AssignmentExpression	fetch_type = zend_get_class_fetch_type ( class_name )		3955785	0		=			
ANR	3955902	Identifier	fetch_type		3955785	0					
ANR	3955903	CallExpression	zend_get_class_fetch_type ( class_name )		3955785	1					
ANR	3955904	Callee	zend_get_class_fetch_type		3955785	0					
ANR	3955905	Identifier	zend_get_class_fetch_type		3955785	0					
ANR	3955906	ArgumentList	class_name		3955785	1					
ANR	3955907	Argument	class_name		3955785	0					
ANR	3955908	Identifier	class_name		3955785	0					
ANR	3955909	IfStatement	if ( ZEND_FETCH_CLASS_STATIC == fetch_type )		3955785	11					
ANR	3955910	Condition	ZEND_FETCH_CLASS_STATIC == fetch_type	6839:5:202272:202308	3955785	0	True				
ANR	3955911	EqualityExpression	ZEND_FETCH_CLASS_STATIC == fetch_type		3955785	0		==			
ANR	3955912	Identifier	ZEND_FETCH_CLASS_STATIC		3955785	0					
ANR	3955913	Identifier	fetch_type		3955785	1					
ANR	3955914	CompoundStatement		23:44:675:675	3955785	1					
ANR	3955915	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""\\""static::\\"" is not allowed in compile-time constants"" )"	6840:2:202315:202411	3955785	0	True				
ANR	3955916	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""\\""static::\\"" is not allowed in compile-time constants"" )"		3955785	0					
ANR	3955917	Callee	zend_error_noreturn		3955785	0					
ANR	3955918	Identifier	zend_error_noreturn		3955785	0					
ANR	3955919	ArgumentList	E_COMPILE_ERROR		3955785	1					
ANR	3955920	Argument	E_COMPILE_ERROR		3955785	0					
ANR	3955921	Identifier	E_COMPILE_ERROR		3955785	0					
ANR	3955922	Argument	"""\\""static::\\"" is not allowed in compile-time constants"""		3955785	1					
ANR	3955923	PrimaryExpression	"""\\""static::\\"" is not allowed in compile-time constants"""		3955785	0					
ANR	3955924	IfStatement	if ( ZEND_FETCH_CLASS_DEFAULT == fetch_type )		3955785	12					
ANR	3955925	Condition	ZEND_FETCH_CLASS_DEFAULT == fetch_type	6844:5:202422:202459	3955785	0	True				
ANR	3955926	EqualityExpression	ZEND_FETCH_CLASS_DEFAULT == fetch_type		3955785	0		==			
ANR	3955927	Identifier	ZEND_FETCH_CLASS_DEFAULT		3955785	0					
ANR	3955928	Identifier	fetch_type		3955785	1					
ANR	3955929	CompoundStatement		28:45:826:826	3955785	1					
ANR	3955930	ExpressionStatement	class_name = zend_resolve_class_name_ast ( class_ast )	6845:2:202466:202517	3955785	0	True				
ANR	3955931	AssignmentExpression	class_name = zend_resolve_class_name_ast ( class_ast )		3955785	0		=			
ANR	3955932	Identifier	class_name		3955785	0					
ANR	3955933	CallExpression	zend_resolve_class_name_ast ( class_ast )		3955785	1					
ANR	3955934	Callee	zend_resolve_class_name_ast		3955785	0					
ANR	3955935	Identifier	zend_resolve_class_name_ast		3955785	0					
ANR	3955936	ArgumentList	class_ast		3955785	1					
ANR	3955937	Argument	class_ast		3955785	0					
ANR	3955938	Identifier	class_ast		3955785	0					
ANR	3955939	ElseStatement	else		3955785	0					
ANR	3955940	CompoundStatement		30:8:891:891	3955785	0					
ANR	3955941	ExpressionStatement	zend_string_addref ( class_name )	6847:2:202531:202561	3955785	0	True				
ANR	3955942	CallExpression	zend_string_addref ( class_name )		3955785	0					
ANR	3955943	Callee	zend_string_addref		3955785	0					
ANR	3955944	Identifier	zend_string_addref		3955785	0					
ANR	3955945	ArgumentList	class_name		3955785	1					
ANR	3955946	Argument	class_name		3955785	0					
ANR	3955947	Identifier	class_name		3955785	0					
ANR	3955948	ExpressionStatement	"Z_STR ( result ) = zend_concat3 ( ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) , ""::"" , 2 , ZSTR_VAL ( const_name ) , ZSTR_LEN ( const_name ) )"	6850:1:202568:202696	3955785	13	True				
ANR	3955949	AssignmentExpression	"Z_STR ( result ) = zend_concat3 ( ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) , ""::"" , 2 , ZSTR_VAL ( const_name ) , ZSTR_LEN ( const_name ) )"		3955785	0		=			
ANR	3955950	CallExpression	Z_STR ( result )		3955785	0					
ANR	3955951	Callee	Z_STR		3955785	0					
ANR	3955952	Identifier	Z_STR		3955785	0					
ANR	3955953	ArgumentList	result		3955785	1					
ANR	3955954	Argument	result		3955785	0					
ANR	3955955	Identifier	result		3955785	0					
ANR	3955956	CallExpression	"zend_concat3 ( ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) , ""::"" , 2 , ZSTR_VAL ( const_name ) , ZSTR_LEN ( const_name ) )"		3955785	1					
ANR	3955957	Callee	zend_concat3		3955785	0					
ANR	3955958	Identifier	zend_concat3		3955785	0					
ANR	3955959	ArgumentList	ZSTR_VAL ( class_name )		3955785	1					
ANR	3955960	Argument	ZSTR_VAL ( class_name )		3955785	0					
ANR	3955961	CallExpression	ZSTR_VAL ( class_name )		3955785	0					
ANR	3955962	Callee	ZSTR_VAL		3955785	0					
ANR	3955963	Identifier	ZSTR_VAL		3955785	0					
ANR	3955964	ArgumentList	class_name		3955785	1					
ANR	3955965	Argument	class_name		3955785	0					
ANR	3955966	Identifier	class_name		3955785	0					
ANR	3955967	Argument	ZSTR_LEN ( class_name )		3955785	1					
ANR	3955968	CallExpression	ZSTR_LEN ( class_name )		3955785	0					
ANR	3955969	Callee	ZSTR_LEN		3955785	0					
ANR	3955970	Identifier	ZSTR_LEN		3955785	0					
ANR	3955971	ArgumentList	class_name		3955785	1					
ANR	3955972	Argument	class_name		3955785	0					
ANR	3955973	Identifier	class_name		3955785	0					
ANR	3955974	Argument	"""::"""		3955785	2					
ANR	3955975	PrimaryExpression	"""::"""		3955785	0					
ANR	3955976	Argument	2		3955785	3					
ANR	3955977	PrimaryExpression	2		3955785	0					
ANR	3955978	Argument	ZSTR_VAL ( const_name )		3955785	4					
ANR	3955979	CallExpression	ZSTR_VAL ( const_name )		3955785	0					
ANR	3955980	Callee	ZSTR_VAL		3955785	0					
ANR	3955981	Identifier	ZSTR_VAL		3955785	0					
ANR	3955982	ArgumentList	const_name		3955785	1					
ANR	3955983	Argument	const_name		3955785	0					
ANR	3955984	Identifier	const_name		3955785	0					
ANR	3955985	Argument	ZSTR_LEN ( const_name )		3955785	5					
ANR	3955986	CallExpression	ZSTR_LEN ( const_name )		3955785	0					
ANR	3955987	Callee	ZSTR_LEN		3955785	0					
ANR	3955988	Identifier	ZSTR_LEN		3955785	0					
ANR	3955989	ArgumentList	const_name		3955785	1					
ANR	3955990	Argument	const_name		3955785	0					
ANR	3955991	Identifier	const_name		3955785	0					
ANR	3955992	ExpressionStatement	Z_TYPE_INFO ( result ) = IS_CONSTANT_EX	6853:1:202700:202736	3955785	14	True				
ANR	3955993	AssignmentExpression	Z_TYPE_INFO ( result ) = IS_CONSTANT_EX		3955785	0		=			
ANR	3955994	CallExpression	Z_TYPE_INFO ( result )		3955785	0					
ANR	3955995	Callee	Z_TYPE_INFO		3955785	0					
ANR	3955996	Identifier	Z_TYPE_INFO		3955785	0					
ANR	3955997	ArgumentList	result		3955785	1					
ANR	3955998	Argument	result		3955785	0					
ANR	3955999	Identifier	result		3955785	0					
ANR	3956000	Identifier	IS_CONSTANT_EX		3955785	1					
ANR	3956001	ExpressionStatement	Z_CONST_FLAGS ( result ) = fetch_type	6854:1:202739:202773	3955785	15	True				
ANR	3956002	AssignmentExpression	Z_CONST_FLAGS ( result ) = fetch_type		3955785	0		=			
ANR	3956003	CallExpression	Z_CONST_FLAGS ( result )		3955785	0					
ANR	3956004	Callee	Z_CONST_FLAGS		3955785	0					
ANR	3956005	Identifier	Z_CONST_FLAGS		3955785	0					
ANR	3956006	ArgumentList	result		3955785	1					
ANR	3956007	Argument	result		3955785	0					
ANR	3956008	Identifier	result		3955785	0					
ANR	3956009	Identifier	fetch_type		3955785	1					
ANR	3956010	ExpressionStatement	zend_ast_destroy ( ast )	6856:1:202777:202798	3955785	16	True				
ANR	3956011	CallExpression	zend_ast_destroy ( ast )		3955785	0					
ANR	3956012	Callee	zend_ast_destroy		3955785	0					
ANR	3956013	Identifier	zend_ast_destroy		3955785	0					
ANR	3956014	ArgumentList	ast		3955785	1					
ANR	3956015	Argument	ast		3955785	0					
ANR	3956016	Identifier	ast		3955785	0					
ANR	3956017	ExpressionStatement	zend_string_release ( class_name )	6857:1:202801:202832	3955785	17	True				
ANR	3956018	CallExpression	zend_string_release ( class_name )		3955785	0					
ANR	3956019	Callee	zend_string_release		3955785	0					
ANR	3956020	Identifier	zend_string_release		3955785	0					
ANR	3956021	ArgumentList	class_name		3955785	1					
ANR	3956022	Argument	class_name		3955785	0					
ANR	3956023	Identifier	class_name		3955785	0					
ANR	3956024	ExpressionStatement	* ast_ptr = zend_ast_create_zval ( & result )	6859:1:202836:202876	3955785	18	True				
ANR	3956025	AssignmentExpression	* ast_ptr = zend_ast_create_zval ( & result )		3955785	0		=			
ANR	3956026	UnaryOperationExpression	* ast_ptr		3955785	0					
ANR	3956027	UnaryOperator	*		3955785	0					
ANR	3956028	Identifier	ast_ptr		3955785	1					
ANR	3956029	CallExpression	zend_ast_create_zval ( & result )		3955785	1					
ANR	3956030	Callee	zend_ast_create_zval		3955785	0					
ANR	3956031	Identifier	zend_ast_create_zval		3955785	0					
ANR	3956032	ArgumentList	& result		3955785	1					
ANR	3956033	Argument	& result		3955785	0					
ANR	3956034	UnaryOperationExpression	& result		3955785	0					
ANR	3956035	UnaryOperator	&		3955785	0					
ANR	3956036	Identifier	result		3955785	1					
ANR	3956037	ReturnType	void		3955785	1					
ANR	3956038	Identifier	zend_compile_const_expr_class_const		3955785	2					
ANR	3956039	ParameterList	zend_ast * * ast_ptr		3955785	3					
ANR	3956040	Parameter	zend_ast * * ast_ptr	6816:41:201605:201622	3955785	0	True				
ANR	3956041	ParameterType	zend_ast * *		3955785	0					
ANR	3956042	Identifier	ast_ptr		3955785	1					
ANR	3956043	CFGEntryNode	ENTRY		3955785		True				
ANR	3956044	CFGExitNode	EXIT		3955785		True				
ANR	3956045	Symbol	ZEND_FETCH_CLASS_DEFAULT		3955785						
ANR	3956046	Symbol	ast		3955785						
ANR	3956047	Symbol	zend_ast_create_zval		3955785						
ANR	3956048	Symbol	Z_CONST_FLAGS		3955785						
ANR	3956049	Symbol	const_name		3955785						
ANR	3956050	Symbol	E_COMPILE_ERROR		3955785						
ANR	3956051	Symbol	class_ast		3955785						
ANR	3956052	Symbol	Z_STR		3955785						
ANR	3956053	Symbol	result		3955785						
ANR	3956054	Symbol	* ast_ptr		3955785						
ANR	3956055	Symbol	* ast		3955785						
ANR	3956056	Symbol	zend_ast_get_str		3955785						
ANR	3956057	Symbol	* * ast		3955785						
ANR	3956058	Symbol	& result		3955785						
ANR	3956059	Symbol	ZEND_FETCH_CLASS_STATIC		3955785						
ANR	3956060	Symbol	ZEND_AST_ZVAL		3955785						
ANR	3956061	Symbol	Z_TYPE_INFO		3955785						
ANR	3956062	Symbol	class_name		3955785						
ANR	3956063	Symbol	zend_get_class_fetch_type		3955785						
ANR	3956064	Symbol	* class_ast		3955785						
ANR	3956065	Symbol	fetch_type		3955785						
ANR	3956066	Symbol	zend_resolve_class_name_ast		3955785						
ANR	3956067	Symbol	zend_try_compile_const_expr_resolve_class_name		3955785						
ANR	3956068	Symbol	zend_concat3		3955785						
ANR	3956069	Symbol	ZSTR_VAL		3955785						
ANR	3956070	Symbol	class_ast -> kind		3955785						
ANR	3956071	Symbol	const_ast		3955785						
ANR	3956072	Symbol	IS_CONSTANT_EX		3955785						
ANR	3956073	Symbol	ast_ptr		3955785						
ANR	3956074	Symbol	ZSTR_LEN		3955785						
ANR	3956075	Symbol	* ast -> child		3955785						
ANR	3956076	Symbol	ast -> child		3955785						
ANR	3956077	Function	zend_compile_const_expr_const	6863:0:202891:203661							
ANR	3956078	FunctionDef	zend_compile_const_expr_const (zend_ast * * ast_ptr)		3956077	0					
ANR	3956079	CompoundStatement		6864:0:202956:203661	3956077	0					
ANR	3956080	IdentifierDeclStatement	zend_ast * ast = * ast_ptr ;	6865:1:202959:202983	3956077	0	True				
ANR	3956081	IdentifierDecl	* ast = * ast_ptr		3956077	0					
ANR	3956082	IdentifierDeclType	zend_ast *		3956077	0					
ANR	3956083	Identifier	ast		3956077	1					
ANR	3956084	AssignmentExpression	* ast = * ast_ptr		3956077	2		=			
ANR	3956085	Identifier	ast		3956077	0					
ANR	3956086	UnaryOperationExpression	* ast_ptr		3956077	1					
ANR	3956087	UnaryOperator	*		3956077	0					
ANR	3956088	Identifier	ast_ptr		3956077	1					
ANR	3956089	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	6866:1:202986:203020	3956077	1	True				
ANR	3956090	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3956077	0					
ANR	3956091	IdentifierDeclType	zend_ast *		3956077	0					
ANR	3956092	Identifier	name_ast		3956077	1					
ANR	3956093	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3956077	2		=			
ANR	3956094	Identifier	name_ast		3956077	0					
ANR	3956095	ArrayIndexing	ast -> child [ 0 ]		3956077	1					
ANR	3956096	PtrMemberAccess	ast -> child		3956077	0					
ANR	3956097	Identifier	ast		3956077	0					
ANR	3956098	Identifier	child		3956077	1					
ANR	3956099	PrimaryExpression	0		3956077	1					
ANR	3956100	IdentifierDeclStatement	zend_string * orig_name = zend_ast_get_str ( name_ast ) ;	6867:1:203023:203074	3956077	2	True				
ANR	3956101	IdentifierDecl	* orig_name = zend_ast_get_str ( name_ast )		3956077	0					
ANR	3956102	IdentifierDeclType	zend_string *		3956077	0					
ANR	3956103	Identifier	orig_name		3956077	1					
ANR	3956104	AssignmentExpression	* orig_name = zend_ast_get_str ( name_ast )		3956077	2		=			
ANR	3956105	Identifier	orig_name		3956077	0					
ANR	3956106	CallExpression	zend_ast_get_str ( name_ast )		3956077	1					
ANR	3956107	Callee	zend_ast_get_str		3956077	0					
ANR	3956108	Identifier	zend_ast_get_str		3956077	0					
ANR	3956109	ArgumentList	name_ast		3956077	1					
ANR	3956110	Argument	name_ast		3956077	0					
ANR	3956111	Identifier	name_ast		3956077	0					
ANR	3956112	IdentifierDeclStatement	zend_bool is_fully_qualified ;	6868:1:203077:203105	3956077	3	True				
ANR	3956113	IdentifierDecl	is_fully_qualified		3956077	0					
ANR	3956114	IdentifierDeclType	zend_bool		3956077	0					
ANR	3956115	Identifier	is_fully_qualified		3956077	1					
ANR	3956116	IdentifierDeclStatement	"zval result , resolved_name ;"	6870:1:203109:203135	3956077	4	True				
ANR	3956117	IdentifierDecl	result		3956077	0					
ANR	3956118	IdentifierDeclType	zval		3956077	0					
ANR	3956119	Identifier	result		3956077	1					
ANR	3956120	IdentifierDecl	resolved_name		3956077	1					
ANR	3956121	IdentifierDeclType	zval		3956077	0					
ANR	3956122	Identifier	resolved_name		3956077	1					
ANR	3956123	ExpressionStatement	"ZVAL_STR ( & resolved_name , zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified ) )"	6871:1:203138:203238	3956077	5	True				
ANR	3956124	CallExpression	"ZVAL_STR ( & resolved_name , zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified ) )"		3956077	0					
ANR	3956125	Callee	ZVAL_STR		3956077	0					
ANR	3956126	Identifier	ZVAL_STR		3956077	0					
ANR	3956127	ArgumentList	& resolved_name		3956077	1					
ANR	3956128	Argument	& resolved_name		3956077	0					
ANR	3956129	UnaryOperationExpression	& resolved_name		3956077	0					
ANR	3956130	UnaryOperator	&		3956077	0					
ANR	3956131	Identifier	resolved_name		3956077	1					
ANR	3956132	Argument	"zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified )"		3956077	1					
ANR	3956133	CallExpression	"zend_resolve_const_name ( orig_name , name_ast -> attr , & is_fully_qualified )"		3956077	0					
ANR	3956134	Callee	zend_resolve_const_name		3956077	0					
ANR	3956135	Identifier	zend_resolve_const_name		3956077	0					
ANR	3956136	ArgumentList	orig_name		3956077	1					
ANR	3956137	Argument	orig_name		3956077	0					
ANR	3956138	Identifier	orig_name		3956077	0					
ANR	3956139	Argument	name_ast -> attr		3956077	1					
ANR	3956140	PtrMemberAccess	name_ast -> attr		3956077	0					
ANR	3956141	Identifier	name_ast		3956077	0					
ANR	3956142	Identifier	attr		3956077	1					
ANR	3956143	Argument	& is_fully_qualified		3956077	2					
ANR	3956144	UnaryOperationExpression	& is_fully_qualified		3956077	0					
ANR	3956145	UnaryOperator	&		3956077	0					
ANR	3956146	Identifier	is_fully_qualified		3956077	1					
ANR	3956147	IfStatement	"if ( zend_try_ct_eval_const ( & result , Z_STR ( resolved_name ) , is_fully_qualified ) )"		3956077	6					
ANR	3956148	Condition	"zend_try_ct_eval_const ( & result , Z_STR ( resolved_name ) , is_fully_qualified )"	6874:5:203246:203318	3956077	0	True				
ANR	3956149	CallExpression	"zend_try_ct_eval_const ( & result , Z_STR ( resolved_name ) , is_fully_qualified )"		3956077	0					
ANR	3956150	Callee	zend_try_ct_eval_const		3956077	0					
ANR	3956151	Identifier	zend_try_ct_eval_const		3956077	0					
ANR	3956152	ArgumentList	& result		3956077	1					
ANR	3956153	Argument	& result		3956077	0					
ANR	3956154	UnaryOperationExpression	& result		3956077	0					
ANR	3956155	UnaryOperator	&		3956077	0					
ANR	3956156	Identifier	result		3956077	1					
ANR	3956157	Argument	Z_STR ( resolved_name )		3956077	1					
ANR	3956158	CallExpression	Z_STR ( resolved_name )		3956077	0					
ANR	3956159	Callee	Z_STR		3956077	0					
ANR	3956160	Identifier	Z_STR		3956077	0					
ANR	3956161	ArgumentList	resolved_name		3956077	1					
ANR	3956162	Argument	resolved_name		3956077	0					
ANR	3956163	Identifier	resolved_name		3956077	0					
ANR	3956164	Argument	is_fully_qualified		3956077	2					
ANR	3956165	Identifier	is_fully_qualified		3956077	0					
ANR	3956166	CompoundStatement		11:80:364:364	3956077	1					
ANR	3956167	ExpressionStatement	zend_string_release ( Z_STR ( resolved_name ) )	6875:2:203325:203366	3956077	0	True				
ANR	3956168	CallExpression	zend_string_release ( Z_STR ( resolved_name ) )		3956077	0					
ANR	3956169	Callee	zend_string_release		3956077	0					
ANR	3956170	Identifier	zend_string_release		3956077	0					
ANR	3956171	ArgumentList	Z_STR ( resolved_name )		3956077	1					
ANR	3956172	Argument	Z_STR ( resolved_name )		3956077	0					
ANR	3956173	CallExpression	Z_STR ( resolved_name )		3956077	0					
ANR	3956174	Callee	Z_STR		3956077	0					
ANR	3956175	Identifier	Z_STR		3956077	0					
ANR	3956176	ArgumentList	resolved_name		3956077	1					
ANR	3956177	Argument	resolved_name		3956077	0					
ANR	3956178	Identifier	resolved_name		3956077	0					
ANR	3956179	ExpressionStatement	zend_ast_destroy ( ast )	6876:2:203370:203391	3956077	1	True				
ANR	3956180	CallExpression	zend_ast_destroy ( ast )		3956077	0					
ANR	3956181	Callee	zend_ast_destroy		3956077	0					
ANR	3956182	Identifier	zend_ast_destroy		3956077	0					
ANR	3956183	ArgumentList	ast		3956077	1					
ANR	3956184	Argument	ast		3956077	0					
ANR	3956185	Identifier	ast		3956077	0					
ANR	3956186	ExpressionStatement	* ast_ptr = zend_ast_create_zval ( & result )	6877:2:203395:203435	3956077	2	True				
ANR	3956187	AssignmentExpression	* ast_ptr = zend_ast_create_zval ( & result )		3956077	0		=			
ANR	3956188	UnaryOperationExpression	* ast_ptr		3956077	0					
ANR	3956189	UnaryOperator	*		3956077	0					
ANR	3956190	Identifier	ast_ptr		3956077	1					
ANR	3956191	CallExpression	zend_ast_create_zval ( & result )		3956077	1					
ANR	3956192	Callee	zend_ast_create_zval		3956077	0					
ANR	3956193	Identifier	zend_ast_create_zval		3956077	0					
ANR	3956194	ArgumentList	& result		3956077	1					
ANR	3956195	Argument	& result		3956077	0					
ANR	3956196	UnaryOperationExpression	& result		3956077	0					
ANR	3956197	UnaryOperator	&		3956077	0					
ANR	3956198	Identifier	result		3956077	1					
ANR	3956199	ReturnStatement	return ;	6878:2:203439:203445	3956077	3	True				
ANR	3956200	ExpressionStatement	Z_TYPE_INFO ( resolved_name ) = IS_CONSTANT_EX	6881:1:203452:203495	3956077	7	True				
ANR	3956201	AssignmentExpression	Z_TYPE_INFO ( resolved_name ) = IS_CONSTANT_EX		3956077	0		=			
ANR	3956202	CallExpression	Z_TYPE_INFO ( resolved_name )		3956077	0					
ANR	3956203	Callee	Z_TYPE_INFO		3956077	0					
ANR	3956204	Identifier	Z_TYPE_INFO		3956077	0					
ANR	3956205	ArgumentList	resolved_name		3956077	1					
ANR	3956206	Argument	resolved_name		3956077	0					
ANR	3956207	Identifier	resolved_name		3956077	0					
ANR	3956208	Identifier	IS_CONSTANT_EX		3956077	1					
ANR	3956209	IfStatement	if ( ! is_fully_qualified )		3956077	8					
ANR	3956210	Condition	! is_fully_qualified	6882:5:203502:203520	3956077	0	True				
ANR	3956211	UnaryOperationExpression	! is_fully_qualified		3956077	0					
ANR	3956212	UnaryOperator	!		3956077	0					
ANR	3956213	Identifier	is_fully_qualified		3956077	1					
ANR	3956214	CompoundStatement		19:26:566:566	3956077	1					
ANR	3956215	ExpressionStatement	Z_CONST_FLAGS ( resolved_name ) = IS_CONSTANT_UNQUALIFIED	6883:2:203527:203581	3956077	0	True				
ANR	3956216	AssignmentExpression	Z_CONST_FLAGS ( resolved_name ) = IS_CONSTANT_UNQUALIFIED		3956077	0		=			
ANR	3956217	CallExpression	Z_CONST_FLAGS ( resolved_name )		3956077	0					
ANR	3956218	Callee	Z_CONST_FLAGS		3956077	0					
ANR	3956219	Identifier	Z_CONST_FLAGS		3956077	0					
ANR	3956220	ArgumentList	resolved_name		3956077	1					
ANR	3956221	Argument	resolved_name		3956077	0					
ANR	3956222	Identifier	resolved_name		3956077	0					
ANR	3956223	Identifier	IS_CONSTANT_UNQUALIFIED		3956077	1					
ANR	3956224	ExpressionStatement	zend_ast_destroy ( ast )	6886:1:203588:203609	3956077	9	True				
ANR	3956225	CallExpression	zend_ast_destroy ( ast )		3956077	0					
ANR	3956226	Callee	zend_ast_destroy		3956077	0					
ANR	3956227	Identifier	zend_ast_destroy		3956077	0					
ANR	3956228	ArgumentList	ast		3956077	1					
ANR	3956229	Argument	ast		3956077	0					
ANR	3956230	Identifier	ast		3956077	0					
ANR	3956231	ExpressionStatement	* ast_ptr = zend_ast_create_zval ( & resolved_name )	6887:1:203612:203659	3956077	10	True				
ANR	3956232	AssignmentExpression	* ast_ptr = zend_ast_create_zval ( & resolved_name )		3956077	0		=			
ANR	3956233	UnaryOperationExpression	* ast_ptr		3956077	0					
ANR	3956234	UnaryOperator	*		3956077	0					
ANR	3956235	Identifier	ast_ptr		3956077	1					
ANR	3956236	CallExpression	zend_ast_create_zval ( & resolved_name )		3956077	1					
ANR	3956237	Callee	zend_ast_create_zval		3956077	0					
ANR	3956238	Identifier	zend_ast_create_zval		3956077	0					
ANR	3956239	ArgumentList	& resolved_name		3956077	1					
ANR	3956240	Argument	& resolved_name		3956077	0					
ANR	3956241	UnaryOperationExpression	& resolved_name		3956077	0					
ANR	3956242	UnaryOperator	&		3956077	0					
ANR	3956243	Identifier	resolved_name		3956077	1					
ANR	3956244	ReturnType	void		3956077	1					
ANR	3956245	Identifier	zend_compile_const_expr_const		3956077	2					
ANR	3956246	ParameterList	zend_ast * * ast_ptr		3956077	3					
ANR	3956247	Parameter	zend_ast * * ast_ptr	6863:35:202926:202943	3956077	0	True				
ANR	3956248	ParameterType	zend_ast * *		3956077	0					
ANR	3956249	Identifier	ast_ptr		3956077	1					
ANR	3956250	CFGEntryNode	ENTRY		3956077		True				
ANR	3956251	CFGExitNode	EXIT		3956077		True				
ANR	3956252	Symbol	ast		3956077						
ANR	3956253	Symbol	zend_ast_create_zval		3956077						
ANR	3956254	Symbol	Z_CONST_FLAGS		3956077						
ANR	3956255	Symbol	Z_STR		3956077						
ANR	3956256	Symbol	name_ast -> attr		3956077						
ANR	3956257	Symbol	result		3956077						
ANR	3956258	Symbol	* name_ast		3956077						
ANR	3956259	Symbol	* ast_ptr		3956077						
ANR	3956260	Symbol	* ast		3956077						
ANR	3956261	Symbol	zend_ast_get_str		3956077						
ANR	3956262	Symbol	IS_CONSTANT_UNQUALIFIED		3956077						
ANR	3956263	Symbol	* * ast		3956077						
ANR	3956264	Symbol	& result		3956077						
ANR	3956265	Symbol	orig_name		3956077						
ANR	3956266	Symbol	& resolved_name		3956077						
ANR	3956267	Symbol	Z_TYPE_INFO		3956077						
ANR	3956268	Symbol	& is_fully_qualified		3956077						
ANR	3956269	Symbol	resolved_name		3956077						
ANR	3956270	Symbol	is_fully_qualified		3956077						
ANR	3956271	Symbol	zend_try_ct_eval_const		3956077						
ANR	3956272	Symbol	IS_CONSTANT_EX		3956077						
ANR	3956273	Symbol	name_ast		3956077						
ANR	3956274	Symbol	ast_ptr		3956077						
ANR	3956275	Symbol	zend_resolve_const_name		3956077						
ANR	3956276	Symbol	* ast -> child		3956077						
ANR	3956277	Symbol	ast -> child		3956077						
ANR	3956278	Function	zend_compile_const_expr_magic_const	6891:0:203674:204241							
ANR	3956279	FunctionDef	zend_compile_const_expr_magic_const (zend_ast * * ast_ptr)		3956278	0					
ANR	3956280	CompoundStatement		6892:0:203745:204241	3956278	0					
ANR	3956281	IdentifierDeclStatement	zend_ast * ast = * ast_ptr ;	6893:1:203748:203772	3956278	0	True				
ANR	3956282	IdentifierDecl	* ast = * ast_ptr		3956278	0					
ANR	3956283	IdentifierDeclType	zend_ast *		3956278	0					
ANR	3956284	Identifier	ast		3956278	1					
ANR	3956285	AssignmentExpression	* ast = * ast_ptr		3956278	2		=			
ANR	3956286	Identifier	ast		3956278	0					
ANR	3956287	UnaryOperationExpression	* ast_ptr		3956278	1					
ANR	3956288	UnaryOperator	*		3956278	0					
ANR	3956289	Identifier	ast_ptr		3956278	1					
ANR	3956290	ExpressionStatement	ZEND_ASSERT ( ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0 )	6896:1:203832:203979	3956278	1	True				
ANR	3956291	CallExpression	ZEND_ASSERT ( ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0 )		3956278	0					
ANR	3956292	Callee	ZEND_ASSERT		3956278	0					
ANR	3956293	Identifier	ZEND_ASSERT		3956278	0					
ANR	3956294	ArgumentList	ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3956278	1					
ANR	3956295	Argument	ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3956278	0					
ANR	3956296	AndExpression	ast -> attr == T_CLASS_C && CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3956278	0		&&			
ANR	3956297	EqualityExpression	ast -> attr == T_CLASS_C		3956278	0		==			
ANR	3956298	PtrMemberAccess	ast -> attr		3956278	0					
ANR	3956299	Identifier	ast		3956278	0					
ANR	3956300	Identifier	attr		3956278	1					
ANR	3956301	Identifier	T_CLASS_C		3956278	1					
ANR	3956302	AndExpression	CG ( active_class_entry ) && ( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3956278	1		&&			
ANR	3956303	CallExpression	CG ( active_class_entry )		3956278	0					
ANR	3956304	Callee	CG		3956278	0					
ANR	3956305	Identifier	CG		3956278	0					
ANR	3956306	ArgumentList	active_class_entry		3956278	1					
ANR	3956307	Argument	active_class_entry		3956278	0					
ANR	3956308	Identifier	active_class_entry		3956278	0					
ANR	3956309	EqualityExpression	( CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT ) != 0		3956278	1		!=			
ANR	3956310	BitAndExpression	CG ( active_class_entry ) -> ce_flags & ZEND_ACC_TRAIT		3956278	0		&			
ANR	3956311	PtrMemberAccess	CG ( active_class_entry ) -> ce_flags		3956278	0					
ANR	3956312	CallExpression	CG ( active_class_entry )		3956278	0					
ANR	3956313	Callee	CG		3956278	0					
ANR	3956314	Identifier	CG		3956278	0					
ANR	3956315	ArgumentList	active_class_entry		3956278	1					
ANR	3956316	Argument	active_class_entry		3956278	0					
ANR	3956317	Identifier	active_class_entry		3956278	0					
ANR	3956318	Identifier	ce_flags		3956278	1					
ANR	3956319	Identifier	ZEND_ACC_TRAIT		3956278	1					
ANR	3956320	PrimaryExpression	0		3956278	1					
ANR	3956321	CompoundStatement		10:2:241:254	3956278	2					
ANR	3956322	IdentifierDeclStatement	zval const_zv ;	6901:2:203987:204000	3956278	0	True				
ANR	3956323	IdentifierDecl	const_zv		3956278	0					
ANR	3956324	IdentifierDeclType	zval		3956278	0					
ANR	3956325	Identifier	const_zv		3956278	1					
ANR	3956326	ExpressionStatement	"Z_STR ( const_zv ) = zend_string_init ( ""__CLASS__"" , sizeof ( ""__CLASS__"" ) - 1 , 0 )"	6902:2:204004:204077	3956278	1	True				
ANR	3956327	AssignmentExpression	"Z_STR ( const_zv ) = zend_string_init ( ""__CLASS__"" , sizeof ( ""__CLASS__"" ) - 1 , 0 )"		3956278	0		=			
ANR	3956328	CallExpression	Z_STR ( const_zv )		3956278	0					
ANR	3956329	Callee	Z_STR		3956278	0					
ANR	3956330	Identifier	Z_STR		3956278	0					
ANR	3956331	ArgumentList	const_zv		3956278	1					
ANR	3956332	Argument	const_zv		3956278	0					
ANR	3956333	Identifier	const_zv		3956278	0					
ANR	3956334	CallExpression	"zend_string_init ( ""__CLASS__"" , sizeof ( ""__CLASS__"" ) - 1 , 0 )"		3956278	1					
ANR	3956335	Callee	zend_string_init		3956278	0					
ANR	3956336	Identifier	zend_string_init		3956278	0					
ANR	3956337	ArgumentList	"""__CLASS__"""		3956278	1					
ANR	3956338	Argument	"""__CLASS__"""		3956278	0					
ANR	3956339	PrimaryExpression	"""__CLASS__"""		3956278	0					
ANR	3956340	Argument	"sizeof ( ""__CLASS__"" ) - 1"		3956278	1					
ANR	3956341	AdditiveExpression	"sizeof ( ""__CLASS__"" ) - 1"		3956278	0		-			
ANR	3956342	SizeofExpression	"sizeof ( ""__CLASS__"" )"		3956278	0					
ANR	3956343	Sizeof	sizeof		3956278	0					
ANR	3956344	PrimaryExpression	"""__CLASS__"""		3956278	1					
ANR	3956345	PrimaryExpression	1		3956278	1					
ANR	3956346	Argument	0		3956278	2					
ANR	3956347	PrimaryExpression	0		3956278	0					
ANR	3956348	ExpressionStatement	Z_TYPE_INFO ( const_zv ) = IS_CONSTANT_EX | ( IS_CONSTANT_CLASS << Z_CONST_FLAGS_SHIFT )	6903:2:204081:204164	3956278	2	True				
ANR	3956349	AssignmentExpression	Z_TYPE_INFO ( const_zv ) = IS_CONSTANT_EX | ( IS_CONSTANT_CLASS << Z_CONST_FLAGS_SHIFT )		3956278	0		=			
ANR	3956350	CallExpression	Z_TYPE_INFO ( const_zv )		3956278	0					
ANR	3956351	Callee	Z_TYPE_INFO		3956278	0					
ANR	3956352	Identifier	Z_TYPE_INFO		3956278	0					
ANR	3956353	ArgumentList	const_zv		3956278	1					
ANR	3956354	Argument	const_zv		3956278	0					
ANR	3956355	Identifier	const_zv		3956278	0					
ANR	3956356	InclusiveOrExpression	IS_CONSTANT_EX | ( IS_CONSTANT_CLASS << Z_CONST_FLAGS_SHIFT )		3956278	1		|			
ANR	3956357	Identifier	IS_CONSTANT_EX		3956278	0					
ANR	3956358	ShiftExpression	IS_CONSTANT_CLASS << Z_CONST_FLAGS_SHIFT		3956278	1		<<			
ANR	3956359	Identifier	IS_CONSTANT_CLASS		3956278	0					
ANR	3956360	Identifier	Z_CONST_FLAGS_SHIFT		3956278	1					
ANR	3956361	ExpressionStatement	zend_ast_destroy ( ast )	6905:2:204169:204190	3956278	3	True				
ANR	3956362	CallExpression	zend_ast_destroy ( ast )		3956278	0					
ANR	3956363	Callee	zend_ast_destroy		3956278	0					
ANR	3956364	Identifier	zend_ast_destroy		3956278	0					
ANR	3956365	ArgumentList	ast		3956278	1					
ANR	3956366	Argument	ast		3956278	0					
ANR	3956367	Identifier	ast		3956278	0					
ANR	3956368	ExpressionStatement	* ast_ptr = zend_ast_create_zval ( & const_zv )	6906:2:204194:204236	3956278	4	True				
ANR	3956369	AssignmentExpression	* ast_ptr = zend_ast_create_zval ( & const_zv )		3956278	0		=			
ANR	3956370	UnaryOperationExpression	* ast_ptr		3956278	0					
ANR	3956371	UnaryOperator	*		3956278	0					
ANR	3956372	Identifier	ast_ptr		3956278	1					
ANR	3956373	CallExpression	zend_ast_create_zval ( & const_zv )		3956278	1					
ANR	3956374	Callee	zend_ast_create_zval		3956278	0					
ANR	3956375	Identifier	zend_ast_create_zval		3956278	0					
ANR	3956376	ArgumentList	& const_zv		3956278	1					
ANR	3956377	Argument	& const_zv		3956278	0					
ANR	3956378	UnaryOperationExpression	& const_zv		3956278	0					
ANR	3956379	UnaryOperator	&		3956278	0					
ANR	3956380	Identifier	const_zv		3956278	1					
ANR	3956381	ReturnType	void		3956278	1					
ANR	3956382	Identifier	zend_compile_const_expr_magic_const		3956278	2					
ANR	3956383	ParameterList	zend_ast * * ast_ptr		3956278	3					
ANR	3956384	Parameter	zend_ast * * ast_ptr	6891:41:203715:203732	3956278	0	True				
ANR	3956385	ParameterType	zend_ast * *		3956278	0					
ANR	3956386	Identifier	ast_ptr		3956278	1					
ANR	3956387	CFGEntryNode	ENTRY		3956278		True				
ANR	3956388	CFGExitNode	EXIT		3956278		True				
ANR	3956389	Symbol	T_CLASS_C		3956278						
ANR	3956390	Symbol	ast -> attr		3956278						
ANR	3956391	Symbol	ast		3956278						
ANR	3956392	Symbol	CG		3956278						
ANR	3956393	Symbol	zend_ast_create_zval		3956278						
ANR	3956394	Symbol	active_class_entry		3956278						
ANR	3956395	Symbol	Z_CONST_FLAGS_SHIFT		3956278						
ANR	3956396	Symbol	* CG		3956278						
ANR	3956397	Symbol	IS_CONSTANT_CLASS		3956278						
ANR	3956398	Symbol	Z_STR		3956278						
ANR	3956399	Symbol	& const_zv		3956278						
ANR	3956400	Symbol	ZEND_ACC_TRAIT		3956278						
ANR	3956401	Symbol	zend_string_init		3956278						
ANR	3956402	Symbol	* ast_ptr		3956278						
ANR	3956403	Symbol	* ast		3956278						
ANR	3956404	Symbol	IS_CONSTANT_EX		3956278						
ANR	3956405	Symbol	ast_ptr		3956278						
ANR	3956406	Symbol	CG ( active_class_entry ) -> ce_flags		3956278						
ANR	3956407	Symbol	Z_TYPE_INFO		3956278						
ANR	3956408	Symbol	const_zv		3956278						
ANR	3956409	Function	zend_compile_const_expr	6911:0:204254:204898							
ANR	3956410	FunctionDef	zend_compile_const_expr (zend_ast * * ast_ptr)		3956409	0					
ANR	3956411	CompoundStatement		6912:0:204313:204898	3956409	0					
ANR	3956412	IdentifierDeclStatement	zend_ast * ast = * ast_ptr ;	6913:1:204316:204340	3956409	0	True				
ANR	3956413	IdentifierDecl	* ast = * ast_ptr		3956409	0					
ANR	3956414	IdentifierDeclType	zend_ast *		3956409	0					
ANR	3956415	Identifier	ast		3956409	1					
ANR	3956416	AssignmentExpression	* ast = * ast_ptr		3956409	2		=			
ANR	3956417	Identifier	ast		3956409	0					
ANR	3956418	UnaryOperationExpression	* ast_ptr		3956409	1					
ANR	3956419	UnaryOperator	*		3956409	0					
ANR	3956420	Identifier	ast_ptr		3956409	1					
ANR	3956421	IfStatement	if ( ast == NULL || ast -> kind == ZEND_AST_ZVAL )		3956409	1					
ANR	3956422	Condition	ast == NULL || ast -> kind == ZEND_AST_ZVAL	6914:5:204347:204387	3956409	0	True				
ANR	3956423	OrExpression	ast == NULL || ast -> kind == ZEND_AST_ZVAL		3956409	0		||			
ANR	3956424	EqualityExpression	ast == NULL		3956409	0		==			
ANR	3956425	Identifier	ast		3956409	0					
ANR	3956426	Identifier	NULL		3956409	1					
ANR	3956427	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3956409	1		==			
ANR	3956428	PtrMemberAccess	ast -> kind		3956409	0					
ANR	3956429	Identifier	ast		3956409	0					
ANR	3956430	Identifier	kind		3956409	1					
ANR	3956431	Identifier	ZEND_AST_ZVAL		3956409	1					
ANR	3956432	CompoundStatement		3:48:76:76	3956409	1					
ANR	3956433	ReturnStatement	return ;	6915:2:204394:204400	3956409	0	True				
ANR	3956434	IfStatement	if ( ! zend_is_allowed_in_const_expr ( ast -> kind ) )		3956409	2					
ANR	3956435	Condition	! zend_is_allowed_in_const_expr ( ast -> kind )	6918:5:204411:204451	3956409	0	True				
ANR	3956436	UnaryOperationExpression	! zend_is_allowed_in_const_expr ( ast -> kind )		3956409	0					
ANR	3956437	UnaryOperator	!		3956409	0					
ANR	3956438	CallExpression	zend_is_allowed_in_const_expr ( ast -> kind )		3956409	1					
ANR	3956439	Callee	zend_is_allowed_in_const_expr		3956409	0					
ANR	3956440	Identifier	zend_is_allowed_in_const_expr		3956409	0					
ANR	3956441	ArgumentList	ast -> kind		3956409	1					
ANR	3956442	Argument	ast -> kind		3956409	0					
ANR	3956443	PtrMemberAccess	ast -> kind		3956409	0					
ANR	3956444	Identifier	ast		3956409	0					
ANR	3956445	Identifier	kind		3956409	1					
ANR	3956446	CompoundStatement		7:48:140:140	3956409	1					
ANR	3956447	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Constant expression contains invalid operations"" )"	6919:2:204458:204545	3956409	0	True				
ANR	3956448	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Constant expression contains invalid operations"" )"		3956409	0					
ANR	3956449	Callee	zend_error_noreturn		3956409	0					
ANR	3956450	Identifier	zend_error_noreturn		3956409	0					
ANR	3956451	ArgumentList	E_COMPILE_ERROR		3956409	1					
ANR	3956452	Argument	E_COMPILE_ERROR		3956409	0					
ANR	3956453	Identifier	E_COMPILE_ERROR		3956409	0					
ANR	3956454	Argument	"""Constant expression contains invalid operations"""		3956409	1					
ANR	3956455	PrimaryExpression	"""Constant expression contains invalid operations"""		3956409	0					
ANR	3956456	SwitchStatement	switch ( ast -> kind )		3956409	3					
ANR	3956457	Condition	ast -> kind	6922:9:204560:204568	3956409	0	True				
ANR	3956458	PtrMemberAccess	ast -> kind		3956409	0					
ANR	3956459	Identifier	ast		3956409	0					
ANR	3956460	Identifier	kind		3956409	1					
ANR	3956461	CompoundStatement		11:20:257:257	3956409	1					
ANR	3956462	Label	case ZEND_AST_CLASS_CONST :	6923:2:204575:204600	3956409	0	True				
ANR	3956463	Identifier	ZEND_AST_CLASS_CONST		3956409	0					
ANR	3956464	ExpressionStatement	zend_compile_const_expr_class_const ( ast_ptr )	6924:3:204605:204649	3956409	1	True				
ANR	3956465	CallExpression	zend_compile_const_expr_class_const ( ast_ptr )		3956409	0					
ANR	3956466	Callee	zend_compile_const_expr_class_const		3956409	0					
ANR	3956467	Identifier	zend_compile_const_expr_class_const		3956409	0					
ANR	3956468	ArgumentList	ast_ptr		3956409	1					
ANR	3956469	Argument	ast_ptr		3956409	0					
ANR	3956470	Identifier	ast_ptr		3956409	0					
ANR	3956471	BreakStatement	break ;	6925:3:204654:204659	3956409	2	True				
ANR	3956472	Label	case ZEND_AST_CONST :	6926:2:204663:204682	3956409	3	True				
ANR	3956473	Identifier	ZEND_AST_CONST		3956409	0					
ANR	3956474	ExpressionStatement	zend_compile_const_expr_const ( ast_ptr )	6927:3:204687:204725	3956409	4	True				
ANR	3956475	CallExpression	zend_compile_const_expr_const ( ast_ptr )		3956409	0					
ANR	3956476	Callee	zend_compile_const_expr_const		3956409	0					
ANR	3956477	Identifier	zend_compile_const_expr_const		3956409	0					
ANR	3956478	ArgumentList	ast_ptr		3956409	1					
ANR	3956479	Argument	ast_ptr		3956409	0					
ANR	3956480	Identifier	ast_ptr		3956409	0					
ANR	3956481	BreakStatement	break ;	6928:3:204730:204735	3956409	5	True				
ANR	3956482	Label	case ZEND_AST_MAGIC_CONST :	6929:2:204739:204764	3956409	6	True				
ANR	3956483	Identifier	ZEND_AST_MAGIC_CONST		3956409	0					
ANR	3956484	ExpressionStatement	zend_compile_const_expr_magic_const ( ast_ptr )	6930:3:204769:204813	3956409	7	True				
ANR	3956485	CallExpression	zend_compile_const_expr_magic_const ( ast_ptr )		3956409	0					
ANR	3956486	Callee	zend_compile_const_expr_magic_const		3956409	0					
ANR	3956487	Identifier	zend_compile_const_expr_magic_const		3956409	0					
ANR	3956488	ArgumentList	ast_ptr		3956409	1					
ANR	3956489	Argument	ast_ptr		3956409	0					
ANR	3956490	Identifier	ast_ptr		3956409	0					
ANR	3956491	BreakStatement	break ;	6931:3:204818:204823	3956409	8	True				
ANR	3956492	Label	default :	6932:2:204827:204834	3956409	9	True				
ANR	3956493	Identifier	default		3956409	0					
ANR	3956494	ExpressionStatement	"zend_ast_apply ( ast , zend_compile_const_expr )"	6933:3:204839:204883	3956409	10	True				
ANR	3956495	CallExpression	"zend_ast_apply ( ast , zend_compile_const_expr )"		3956409	0					
ANR	3956496	Callee	zend_ast_apply		3956409	0					
ANR	3956497	Identifier	zend_ast_apply		3956409	0					
ANR	3956498	ArgumentList	ast		3956409	1					
ANR	3956499	Argument	ast		3956409	0					
ANR	3956500	Identifier	ast		3956409	0					
ANR	3956501	Argument	zend_compile_const_expr		3956409	1					
ANR	3956502	Identifier	zend_compile_const_expr		3956409	0					
ANR	3956503	BreakStatement	break ;	6934:3:204888:204893	3956409	11	True				
ANR	3956504	ReturnType	void		3956409	1					
ANR	3956505	Identifier	zend_compile_const_expr		3956409	2					
ANR	3956506	ParameterList	zend_ast * * ast_ptr		3956409	3					
ANR	3956507	Parameter	zend_ast * * ast_ptr	6911:29:204283:204300	3956409	0	True				
ANR	3956508	ParameterType	zend_ast * *		3956409	0					
ANR	3956509	Identifier	ast_ptr		3956409	1					
ANR	3956510	CFGEntryNode	ENTRY		3956409		True				
ANR	3956511	CFGExitNode	EXIT		3956409		True				
ANR	3956512	Symbol	* ast_ptr		3956409						
ANR	3956513	Symbol	ast -> kind		3956409						
ANR	3956514	Symbol	ast		3956409						
ANR	3956515	Symbol	NULL		3956409						
ANR	3956516	Symbol	* ast		3956409						
ANR	3956517	Symbol	zend_is_allowed_in_const_expr		3956409						
ANR	3956518	Symbol	zend_compile_const_expr		3956409						
ANR	3956519	Symbol	ZEND_AST_ZVAL		3956409						
ANR	3956520	Symbol	E_COMPILE_ERROR		3956409						
ANR	3956521	Symbol	ast_ptr		3956409						
ANR	3956522	Function	zend_const_expr_to_zval	6939:0:204911:205394							
ANR	3956523	FunctionDef	"zend_const_expr_to_zval (zval * result , zend_ast * ast)"		3956522	0					
ANR	3956524	CompoundStatement		6940:0:204979:205394	3956522	0					
ANR	3956525	IdentifierDeclStatement	zend_ast * orig_ast = ast ;	6941:1:204982:205006	3956522	0	True				
ANR	3956526	IdentifierDecl	* orig_ast = ast		3956522	0					
ANR	3956527	IdentifierDeclType	zend_ast *		3956522	0					
ANR	3956528	Identifier	orig_ast		3956522	1					
ANR	3956529	AssignmentExpression	* orig_ast = ast		3956522	2		=			
ANR	3956530	Identifier	ast		3956522	0					
ANR	3956531	Identifier	ast		3956522	1					
ANR	3956532	ExpressionStatement	zend_eval_const_expr ( & ast )	6942:1:205009:205035	3956522	1	True				
ANR	3956533	CallExpression	zend_eval_const_expr ( & ast )		3956522	0					
ANR	3956534	Callee	zend_eval_const_expr		3956522	0					
ANR	3956535	Identifier	zend_eval_const_expr		3956522	0					
ANR	3956536	ArgumentList	& ast		3956522	1					
ANR	3956537	Argument	& ast		3956522	0					
ANR	3956538	UnaryOperationExpression	& ast		3956522	0					
ANR	3956539	UnaryOperator	&		3956522	0					
ANR	3956540	Identifier	ast		3956522	1					
ANR	3956541	ExpressionStatement	zend_compile_const_expr ( & ast )	6943:1:205038:205067	3956522	2	True				
ANR	3956542	CallExpression	zend_compile_const_expr ( & ast )		3956522	0					
ANR	3956543	Callee	zend_compile_const_expr		3956522	0					
ANR	3956544	Identifier	zend_compile_const_expr		3956522	0					
ANR	3956545	ArgumentList	& ast		3956522	1					
ANR	3956546	Argument	& ast		3956522	0					
ANR	3956547	UnaryOperationExpression	& ast		3956522	0					
ANR	3956548	UnaryOperator	&		3956522	0					
ANR	3956549	Identifier	ast		3956522	1					
ANR	3956550	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		3956522	3					
ANR	3956551	Condition	ast -> kind == ZEND_AST_ZVAL	6944:5:205074:205099	3956522	0	True				
ANR	3956552	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3956522	0		==			
ANR	3956553	PtrMemberAccess	ast -> kind		3956522	0					
ANR	3956554	Identifier	ast		3956522	0					
ANR	3956555	Identifier	kind		3956522	1					
ANR	3956556	Identifier	ZEND_AST_ZVAL		3956522	1					
ANR	3956557	CompoundStatement		5:33:122:122	3956522	1					
ANR	3956558	ExpressionStatement	"ZVAL_COPY_VALUE ( result , zend_ast_get_zval ( ast ) )"	6945:2:205106:205153	3956522	0	True				
ANR	3956559	CallExpression	"ZVAL_COPY_VALUE ( result , zend_ast_get_zval ( ast ) )"		3956522	0					
ANR	3956560	Callee	ZVAL_COPY_VALUE		3956522	0					
ANR	3956561	Identifier	ZVAL_COPY_VALUE		3956522	0					
ANR	3956562	ArgumentList	result		3956522	1					
ANR	3956563	Argument	result		3956522	0					
ANR	3956564	Identifier	result		3956522	0					
ANR	3956565	Argument	zend_ast_get_zval ( ast )		3956522	1					
ANR	3956566	CallExpression	zend_ast_get_zval ( ast )		3956522	0					
ANR	3956567	Callee	zend_ast_get_zval		3956522	0					
ANR	3956568	Identifier	zend_ast_get_zval		3956522	0					
ANR	3956569	ArgumentList	ast		3956522	1					
ANR	3956570	Argument	ast		3956522	0					
ANR	3956571	Identifier	ast		3956522	0					
ANR	3956572	ExpressionStatement	orig_ast -> kind = 0	6950:2:205317:205335	3956522	1	True				
ANR	3956573	AssignmentExpression	orig_ast -> kind = 0		3956522	0		=			
ANR	3956574	PtrMemberAccess	orig_ast -> kind		3956522	0					
ANR	3956575	Identifier	orig_ast		3956522	0					
ANR	3956576	Identifier	kind		3956522	1					
ANR	3956577	PrimaryExpression	0		3956522	1					
ANR	3956578	ElseStatement	else		3956522	0					
ANR	3956579	CompoundStatement		12:8:365:365	3956522	0					
ANR	3956580	ExpressionStatement	"ZVAL_NEW_AST ( result , zend_ast_copy ( ast ) )"	6952:2:205349:205389	3956522	0	True				
ANR	3956581	CallExpression	"ZVAL_NEW_AST ( result , zend_ast_copy ( ast ) )"		3956522	0					
ANR	3956582	Callee	ZVAL_NEW_AST		3956522	0					
ANR	3956583	Identifier	ZVAL_NEW_AST		3956522	0					
ANR	3956584	ArgumentList	result		3956522	1					
ANR	3956585	Argument	result		3956522	0					
ANR	3956586	Identifier	result		3956522	0					
ANR	3956587	Argument	zend_ast_copy ( ast )		3956522	1					
ANR	3956588	CallExpression	zend_ast_copy ( ast )		3956522	0					
ANR	3956589	Callee	zend_ast_copy		3956522	0					
ANR	3956590	Identifier	zend_ast_copy		3956522	0					
ANR	3956591	ArgumentList	ast		3956522	1					
ANR	3956592	Argument	ast		3956522	0					
ANR	3956593	Identifier	ast		3956522	0					
ANR	3956594	ReturnType	void		3956522	1					
ANR	3956595	Identifier	zend_const_expr_to_zval		3956522	2					
ANR	3956596	ParameterList	"zval * result , zend_ast * ast"		3956522	3					
ANR	3956597	Parameter	zval * result	6939:29:204940:204951	3956522	0	True				
ANR	3956598	ParameterType	zval *		3956522	0					
ANR	3956599	Identifier	result		3956522	1					
ANR	3956600	Parameter	zend_ast * ast	6939:43:204954:204966	3956522	1	True				
ANR	3956601	ParameterType	zend_ast *		3956522	0					
ANR	3956602	Identifier	ast		3956522	1					
ANR	3956603	CFGEntryNode	ENTRY		3956522		True				
ANR	3956604	CFGExitNode	EXIT		3956522		True				
ANR	3956605	Symbol	result		3956522						
ANR	3956606	Symbol	orig_ast -> kind		3956522						
ANR	3956607	Symbol	ast -> kind		3956522						
ANR	3956608	Symbol	* orig_ast		3956522						
ANR	3956609	Symbol	ast		3956522						
ANR	3956610	Symbol	* ast		3956522						
ANR	3956611	Symbol	ZEND_AST_ZVAL		3956522						
ANR	3956612	Symbol	orig_ast		3956522						
ANR	3956613	Symbol	zend_ast_copy		3956522						
ANR	3956614	Symbol	zend_ast_get_zval		3956522						
ANR	3956615	Symbol	& ast		3956522						
ANR	3956616	Function	zend_compile_top_stmt	6958:0:205458:206035							
ANR	3956617	FunctionDef	zend_compile_top_stmt (zend_ast * ast)		3956616	0					
ANR	3956618	CompoundStatement		6959:0:205510:206035	3956616	0					
ANR	3956619	IfStatement	if ( ! ast )		3956616	0					
ANR	3956620	Condition	! ast	6960:5:205517:205520	3956616	0	True				
ANR	3956621	UnaryOperationExpression	! ast		3956616	0					
ANR	3956622	UnaryOperator	!		3956616	0					
ANR	3956623	Identifier	ast		3956616	1					
ANR	3956624	CompoundStatement		2:11:12:12	3956616	1					
ANR	3956625	ReturnStatement	return ;	6961:2:205527:205533	3956616	0	True				
ANR	3956626	IfStatement	if ( ast -> kind == ZEND_AST_STMT_LIST )		3956616	1					
ANR	3956627	Condition	ast -> kind == ZEND_AST_STMT_LIST	6964:5:205544:205574	3956616	0	True				
ANR	3956628	EqualityExpression	ast -> kind == ZEND_AST_STMT_LIST		3956616	0		==			
ANR	3956629	PtrMemberAccess	ast -> kind		3956616	0					
ANR	3956630	Identifier	ast		3956616	0					
ANR	3956631	Identifier	kind		3956616	1					
ANR	3956632	Identifier	ZEND_AST_STMT_LIST		3956616	1					
ANR	3956633	CompoundStatement		8:2:118:128	3956616	1					
ANR	3956634	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	6965:2:205581:205625	3956616	0	True				
ANR	3956635	IdentifierDecl	* list = zend_ast_get_list ( ast )		3956616	0					
ANR	3956636	IdentifierDeclType	zend_ast_list *		3956616	0					
ANR	3956637	Identifier	list		3956616	1					
ANR	3956638	AssignmentExpression	* list = zend_ast_get_list ( ast )		3956616	2		=			
ANR	3956639	Identifier	list		3956616	0					
ANR	3956640	CallExpression	zend_ast_get_list ( ast )		3956616	1					
ANR	3956641	Callee	zend_ast_get_list		3956616	0					
ANR	3956642	Identifier	zend_ast_get_list		3956616	0					
ANR	3956643	ArgumentList	ast		3956616	1					
ANR	3956644	Argument	ast		3956616	0					
ANR	3956645	Identifier	ast		3956616	0					
ANR	3956646	IdentifierDeclStatement	uint32_t i ;	6966:2:205629:205639	3956616	1	True				
ANR	3956647	IdentifierDecl	i		3956616	0					
ANR	3956648	IdentifierDeclType	uint32_t		3956616	0					
ANR	3956649	Identifier	i		3956616	1					
ANR	3956650	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3956616	2					
ANR	3956651	ForInit	i = 0 ;	6967:7:205648:205653	3956616	0	True				
ANR	3956652	AssignmentExpression	i = 0		3956616	0		=			
ANR	3956653	Identifier	i		3956616	0					
ANR	3956654	PrimaryExpression	0		3956616	1					
ANR	3956655	Condition	i < list -> children	6967:14:205655:205672	3956616	1	True				
ANR	3956656	RelationalExpression	i < list -> children		3956616	0		<			
ANR	3956657	Identifier	i		3956616	0					
ANR	3956658	PtrMemberAccess	list -> children		3956616	1					
ANR	3956659	Identifier	list		3956616	0					
ANR	3956660	Identifier	children		3956616	1					
ANR	3956661	UnaryExpression	++ i	6967:34:205675:205677	3956616	2	True				
ANR	3956662	IncDec	++		3956616	0					
ANR	3956663	Identifier	i		3956616	1					
ANR	3956664	CompoundStatement		9:39:169:169	3956616	3					
ANR	3956665	ExpressionStatement	zend_compile_top_stmt ( list -> child [ i ] )	6968:3:205685:205722	3956616	0	True				
ANR	3956666	CallExpression	zend_compile_top_stmt ( list -> child [ i ] )		3956616	0					
ANR	3956667	Callee	zend_compile_top_stmt		3956616	0					
ANR	3956668	Identifier	zend_compile_top_stmt		3956616	0					
ANR	3956669	ArgumentList	list -> child [ i ]		3956616	1					
ANR	3956670	Argument	list -> child [ i ]		3956616	0					
ANR	3956671	ArrayIndexing	list -> child [ i ]		3956616	0					
ANR	3956672	PtrMemberAccess	list -> child		3956616	0					
ANR	3956673	Identifier	list		3956616	0					
ANR	3956674	Identifier	child		3956616	1					
ANR	3956675	Identifier	i		3956616	1					
ANR	3956676	ReturnStatement	return ;	6970:2:205730:205736	3956616	3	True				
ANR	3956677	ExpressionStatement	zend_compile_stmt ( ast )	6973:1:205743:205765	3956616	2	True				
ANR	3956678	CallExpression	zend_compile_stmt ( ast )		3956616	0					
ANR	3956679	Callee	zend_compile_stmt		3956616	0					
ANR	3956680	Identifier	zend_compile_stmt		3956616	0					
ANR	3956681	ArgumentList	ast		3956616	1					
ANR	3956682	Argument	ast		3956616	0					
ANR	3956683	Identifier	ast		3956616	0					
ANR	3956684	IfStatement	if ( ast -> kind != ZEND_AST_NAMESPACE && ast -> kind != ZEND_AST_HALT_COMPILER )		3956616	3					
ANR	3956685	Condition	ast -> kind != ZEND_AST_NAMESPACE && ast -> kind != ZEND_AST_HALT_COMPILER	6975:5:205773:205842	3956616	0	True				
ANR	3956686	AndExpression	ast -> kind != ZEND_AST_NAMESPACE && ast -> kind != ZEND_AST_HALT_COMPILER		3956616	0		&&			
ANR	3956687	EqualityExpression	ast -> kind != ZEND_AST_NAMESPACE		3956616	0		!=			
ANR	3956688	PtrMemberAccess	ast -> kind		3956616	0					
ANR	3956689	Identifier	ast		3956616	0					
ANR	3956690	Identifier	kind		3956616	1					
ANR	3956691	Identifier	ZEND_AST_NAMESPACE		3956616	1					
ANR	3956692	EqualityExpression	ast -> kind != ZEND_AST_HALT_COMPILER		3956616	1		!=			
ANR	3956693	PtrMemberAccess	ast -> kind		3956616	0					
ANR	3956694	Identifier	ast		3956616	0					
ANR	3956695	Identifier	kind		3956616	1					
ANR	3956696	Identifier	ZEND_AST_HALT_COMPILER		3956616	1					
ANR	3956697	CompoundStatement		17:77:334:334	3956616	1					
ANR	3956698	ExpressionStatement	zend_verify_namespace ( )	6976:2:205849:205872	3956616	0	True				
ANR	3956699	CallExpression	zend_verify_namespace ( )		3956616	0					
ANR	3956700	Callee	zend_verify_namespace		3956616	0					
ANR	3956701	Identifier	zend_verify_namespace		3956616	0					
ANR	3956702	ArgumentList			3956616	1					
ANR	3956703	IfStatement	if ( ast -> kind == ZEND_AST_FUNC_DECL || ast -> kind == ZEND_AST_CLASS )		3956616	4					
ANR	3956704	Condition	ast -> kind == ZEND_AST_FUNC_DECL || ast -> kind == ZEND_AST_CLASS	6978:5:205882:205943	3956616	0	True				
ANR	3956705	OrExpression	ast -> kind == ZEND_AST_FUNC_DECL || ast -> kind == ZEND_AST_CLASS		3956616	0		||			
ANR	3956706	EqualityExpression	ast -> kind == ZEND_AST_FUNC_DECL		3956616	0		==			
ANR	3956707	PtrMemberAccess	ast -> kind		3956616	0					
ANR	3956708	Identifier	ast		3956616	0					
ANR	3956709	Identifier	kind		3956616	1					
ANR	3956710	Identifier	ZEND_AST_FUNC_DECL		3956616	1					
ANR	3956711	EqualityExpression	ast -> kind == ZEND_AST_CLASS		3956616	1		==			
ANR	3956712	PtrMemberAccess	ast -> kind		3956616	0					
ANR	3956713	Identifier	ast		3956616	0					
ANR	3956714	Identifier	kind		3956616	1					
ANR	3956715	Identifier	ZEND_AST_CLASS		3956616	1					
ANR	3956716	CompoundStatement		20:69:435:435	3956616	1					
ANR	3956717	ExpressionStatement	CG ( zend_lineno ) = ( ( zend_ast_decl * ) ast ) -> end_lineno	6979:2:205950:206003	3956616	0	True				
ANR	3956718	AssignmentExpression	CG ( zend_lineno ) = ( ( zend_ast_decl * ) ast ) -> end_lineno		3956616	0		=			
ANR	3956719	CallExpression	CG ( zend_lineno )		3956616	0					
ANR	3956720	Callee	CG		3956616	0					
ANR	3956721	Identifier	CG		3956616	0					
ANR	3956722	ArgumentList	zend_lineno		3956616	1					
ANR	3956723	Argument	zend_lineno		3956616	0					
ANR	3956724	Identifier	zend_lineno		3956616	0					
ANR	3956725	PtrMemberAccess	( ( zend_ast_decl * ) ast ) -> end_lineno		3956616	1					
ANR	3956726	CastExpression	( zend_ast_decl * ) ast		3956616	0					
ANR	3956727	CastTarget	zend_ast_decl *		3956616	0					
ANR	3956728	Identifier	ast		3956616	1					
ANR	3956729	Identifier	end_lineno		3956616	1					
ANR	3956730	ExpressionStatement	zend_do_early_binding ( )	6980:2:206007:206030	3956616	1	True				
ANR	3956731	CallExpression	zend_do_early_binding ( )		3956616	0					
ANR	3956732	Callee	zend_do_early_binding		3956616	0					
ANR	3956733	Identifier	zend_do_early_binding		3956616	0					
ANR	3956734	ArgumentList			3956616	1					
ANR	3956735	ReturnType	void		3956616	1					
ANR	3956736	Identifier	zend_compile_top_stmt		3956616	2					
ANR	3956737	ParameterList	zend_ast * ast		3956616	3					
ANR	3956738	Parameter	zend_ast * ast	6958:27:205485:205497	3956616	0	True				
ANR	3956739	ParameterType	zend_ast *		3956616	0					
ANR	3956740	Identifier	ast		3956616	1					
ANR	3956741	CFGEntryNode	ENTRY		3956616		True				
ANR	3956742	CFGExitNode	EXIT		3956616		True				
ANR	3956743	Symbol	ast -> kind		3956616						
ANR	3956744	Symbol	ast		3956616						
ANR	3956745	Symbol	list -> child		3956616						
ANR	3956746	Symbol	CG		3956616						
ANR	3956747	Symbol	i		3956616						
ANR	3956748	Symbol	( ( zend_ast_decl * ) ast ) -> end_lineno		3956616						
ANR	3956749	Symbol	list		3956616						
ANR	3956750	Symbol	ZEND_AST_HALT_COMPILER		3956616						
ANR	3956751	Symbol	ZEND_AST_STMT_LIST		3956616						
ANR	3956752	Symbol	zend_ast_get_list		3956616						
ANR	3956753	Symbol	* ast		3956616						
ANR	3956754	Symbol	* i		3956616						
ANR	3956755	Symbol	* * list		3956616						
ANR	3956756	Symbol	* list		3956616						
ANR	3956757	Symbol	ZEND_AST_FUNC_DECL		3956616						
ANR	3956758	Symbol	zend_lineno		3956616						
ANR	3956759	Symbol	* list -> child		3956616						
ANR	3956760	Symbol	ZEND_AST_CLASS		3956616						
ANR	3956761	Symbol	list -> children		3956616						
ANR	3956762	Symbol	ZEND_AST_NAMESPACE		3956616						
ANR	3956763	Function	zend_compile_stmt	6985:0:206048:208370							
ANR	3956764	FunctionDef	zend_compile_stmt (zend_ast * ast)		3956763	0					
ANR	3956765	CompoundStatement		6986:0:206096:208370	3956763	0					
ANR	3956766	IfStatement	if ( ! ast )		3956763	0					
ANR	3956767	Condition	! ast	6987:5:206103:206106	3956763	0	True				
ANR	3956768	UnaryOperationExpression	! ast		3956763	0					
ANR	3956769	UnaryOperator	!		3956763	0					
ANR	3956770	Identifier	ast		3956763	1					
ANR	3956771	CompoundStatement		2:11:12:12	3956763	1					
ANR	3956772	ReturnStatement	return ;	6988:2:206113:206119	3956763	0	True				
ANR	3956773	ExpressionStatement	CG ( zend_lineno ) = ast -> lineno	6991:1:206126:206155	3956763	1	True				
ANR	3956774	AssignmentExpression	CG ( zend_lineno ) = ast -> lineno		3956763	0		=			
ANR	3956775	CallExpression	CG ( zend_lineno )		3956763	0					
ANR	3956776	Callee	CG		3956763	0					
ANR	3956777	Identifier	CG		3956763	0					
ANR	3956778	ArgumentList	zend_lineno		3956763	1					
ANR	3956779	Argument	zend_lineno		3956763	0					
ANR	3956780	Identifier	zend_lineno		3956763	0					
ANR	3956781	PtrMemberAccess	ast -> lineno		3956763	1					
ANR	3956782	Identifier	ast		3956763	0					
ANR	3956783	Identifier	lineno		3956763	1					
ANR	3956784	IfStatement	if ( ( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO ) && ! zend_is_unticked_stmt ( ast ) )		3956763	2					
ANR	3956785	Condition	( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO ) && ! zend_is_unticked_stmt ( ast )	6993:5:206163:206244	3956763	0	True				
ANR	3956786	AndExpression	( CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO ) && ! zend_is_unticked_stmt ( ast )		3956763	0		&&			
ANR	3956787	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_EXTENDED_INFO		3956763	0		&			
ANR	3956788	CallExpression	CG ( compiler_options )		3956763	0					
ANR	3956789	Callee	CG		3956763	0					
ANR	3956790	Identifier	CG		3956763	0					
ANR	3956791	ArgumentList	compiler_options		3956763	1					
ANR	3956792	Argument	compiler_options		3956763	0					
ANR	3956793	Identifier	compiler_options		3956763	0					
ANR	3956794	Identifier	ZEND_COMPILE_EXTENDED_INFO		3956763	1					
ANR	3956795	UnaryOperationExpression	! zend_is_unticked_stmt ( ast )		3956763	1					
ANR	3956796	UnaryOperator	!		3956763	0					
ANR	3956797	CallExpression	zend_is_unticked_stmt ( ast )		3956763	1					
ANR	3956798	Callee	zend_is_unticked_stmt		3956763	0					
ANR	3956799	Identifier	zend_is_unticked_stmt		3956763	0					
ANR	3956800	ArgumentList	ast		3956763	1					
ANR	3956801	Argument	ast		3956763	0					
ANR	3956802	Identifier	ast		3956763	0					
ANR	3956803	CompoundStatement		8:89:150:150	3956763	1					
ANR	3956804	ExpressionStatement	zend_do_extended_info ( )	6994:2:206251:206274	3956763	0	True				
ANR	3956805	CallExpression	zend_do_extended_info ( )		3956763	0					
ANR	3956806	Callee	zend_do_extended_info		3956763	0					
ANR	3956807	Identifier	zend_do_extended_info		3956763	0					
ANR	3956808	ArgumentList			3956763	1					
ANR	3956809	SwitchStatement	switch ( ast -> kind )		3956763	3					
ANR	3956810	Condition	ast -> kind	6997:9:206289:206297	3956763	0	True				
ANR	3956811	PtrMemberAccess	ast -> kind		3956763	0					
ANR	3956812	Identifier	ast		3956763	0					
ANR	3956813	Identifier	kind		3956763	1					
ANR	3956814	CompoundStatement		12:20:203:203	3956763	1					
ANR	3956815	Label	case ZEND_AST_STMT_LIST :	6998:2:206304:206327	3956763	0	True				
ANR	3956816	Identifier	ZEND_AST_STMT_LIST		3956763	0					
ANR	3956817	ExpressionStatement	zend_compile_stmt_list ( ast )	6999:3:206332:206359	3956763	1	True				
ANR	3956818	CallExpression	zend_compile_stmt_list ( ast )		3956763	0					
ANR	3956819	Callee	zend_compile_stmt_list		3956763	0					
ANR	3956820	Identifier	zend_compile_stmt_list		3956763	0					
ANR	3956821	ArgumentList	ast		3956763	1					
ANR	3956822	Argument	ast		3956763	0					
ANR	3956823	Identifier	ast		3956763	0					
ANR	3956824	BreakStatement	break ;	7000:3:206364:206369	3956763	2	True				
ANR	3956825	Label	case ZEND_AST_GLOBAL :	7001:2:206373:206393	3956763	3	True				
ANR	3956826	Identifier	ZEND_AST_GLOBAL		3956763	0					
ANR	3956827	ExpressionStatement	zend_compile_global_var ( ast )	7002:3:206398:206426	3956763	4	True				
ANR	3956828	CallExpression	zend_compile_global_var ( ast )		3956763	0					
ANR	3956829	Callee	zend_compile_global_var		3956763	0					
ANR	3956830	Identifier	zend_compile_global_var		3956763	0					
ANR	3956831	ArgumentList	ast		3956763	1					
ANR	3956832	Argument	ast		3956763	0					
ANR	3956833	Identifier	ast		3956763	0					
ANR	3956834	BreakStatement	break ;	7003:3:206431:206436	3956763	5	True				
ANR	3956835	Label	case ZEND_AST_STATIC :	7004:2:206440:206460	3956763	6	True				
ANR	3956836	Identifier	ZEND_AST_STATIC		3956763	0					
ANR	3956837	ExpressionStatement	zend_compile_static_var ( ast )	7005:3:206465:206493	3956763	7	True				
ANR	3956838	CallExpression	zend_compile_static_var ( ast )		3956763	0					
ANR	3956839	Callee	zend_compile_static_var		3956763	0					
ANR	3956840	Identifier	zend_compile_static_var		3956763	0					
ANR	3956841	ArgumentList	ast		3956763	1					
ANR	3956842	Argument	ast		3956763	0					
ANR	3956843	Identifier	ast		3956763	0					
ANR	3956844	BreakStatement	break ;	7006:3:206498:206503	3956763	8	True				
ANR	3956845	Label	case ZEND_AST_UNSET :	7007:2:206507:206526	3956763	9	True				
ANR	3956846	Identifier	ZEND_AST_UNSET		3956763	0					
ANR	3956847	ExpressionStatement	zend_compile_unset ( ast )	7008:3:206531:206554	3956763	10	True				
ANR	3956848	CallExpression	zend_compile_unset ( ast )		3956763	0					
ANR	3956849	Callee	zend_compile_unset		3956763	0					
ANR	3956850	Identifier	zend_compile_unset		3956763	0					
ANR	3956851	ArgumentList	ast		3956763	1					
ANR	3956852	Argument	ast		3956763	0					
ANR	3956853	Identifier	ast		3956763	0					
ANR	3956854	BreakStatement	break ;	7009:3:206559:206564	3956763	11	True				
ANR	3956855	Label	case ZEND_AST_RETURN :	7010:2:206568:206588	3956763	12	True				
ANR	3956856	Identifier	ZEND_AST_RETURN		3956763	0					
ANR	3956857	ExpressionStatement	zend_compile_return ( ast )	7011:3:206593:206617	3956763	13	True				
ANR	3956858	CallExpression	zend_compile_return ( ast )		3956763	0					
ANR	3956859	Callee	zend_compile_return		3956763	0					
ANR	3956860	Identifier	zend_compile_return		3956763	0					
ANR	3956861	ArgumentList	ast		3956763	1					
ANR	3956862	Argument	ast		3956763	0					
ANR	3956863	Identifier	ast		3956763	0					
ANR	3956864	BreakStatement	break ;	7012:3:206622:206627	3956763	14	True				
ANR	3956865	Label	case ZEND_AST_ECHO :	7013:2:206631:206649	3956763	15	True				
ANR	3956866	Identifier	ZEND_AST_ECHO		3956763	0					
ANR	3956867	ExpressionStatement	zend_compile_echo ( ast )	7014:3:206654:206676	3956763	16	True				
ANR	3956868	CallExpression	zend_compile_echo ( ast )		3956763	0					
ANR	3956869	Callee	zend_compile_echo		3956763	0					
ANR	3956870	Identifier	zend_compile_echo		3956763	0					
ANR	3956871	ArgumentList	ast		3956763	1					
ANR	3956872	Argument	ast		3956763	0					
ANR	3956873	Identifier	ast		3956763	0					
ANR	3956874	BreakStatement	break ;	7015:3:206681:206686	3956763	17	True				
ANR	3956875	Label	case ZEND_AST_THROW :	7016:2:206690:206709	3956763	18	True				
ANR	3956876	Identifier	ZEND_AST_THROW		3956763	0					
ANR	3956877	ExpressionStatement	zend_compile_throw ( ast )	7017:3:206714:206737	3956763	19	True				
ANR	3956878	CallExpression	zend_compile_throw ( ast )		3956763	0					
ANR	3956879	Callee	zend_compile_throw		3956763	0					
ANR	3956880	Identifier	zend_compile_throw		3956763	0					
ANR	3956881	ArgumentList	ast		3956763	1					
ANR	3956882	Argument	ast		3956763	0					
ANR	3956883	Identifier	ast		3956763	0					
ANR	3956884	BreakStatement	break ;	7018:3:206742:206747	3956763	20	True				
ANR	3956885	Label	case ZEND_AST_BREAK :	7019:2:206751:206770	3956763	21	True				
ANR	3956886	Identifier	ZEND_AST_BREAK		3956763	0					
ANR	3956887	Label	case ZEND_AST_CONTINUE :	7020:2:206774:206796	3956763	22	True				
ANR	3956888	Identifier	ZEND_AST_CONTINUE		3956763	0					
ANR	3956889	ExpressionStatement	zend_compile_break_continue ( ast )	7021:3:206801:206833	3956763	23	True				
ANR	3956890	CallExpression	zend_compile_break_continue ( ast )		3956763	0					
ANR	3956891	Callee	zend_compile_break_continue		3956763	0					
ANR	3956892	Identifier	zend_compile_break_continue		3956763	0					
ANR	3956893	ArgumentList	ast		3956763	1					
ANR	3956894	Argument	ast		3956763	0					
ANR	3956895	Identifier	ast		3956763	0					
ANR	3956896	BreakStatement	break ;	7022:3:206838:206843	3956763	24	True				
ANR	3956897	Label	case ZEND_AST_GOTO :	7023:2:206847:206865	3956763	25	True				
ANR	3956898	Identifier	ZEND_AST_GOTO		3956763	0					
ANR	3956899	ExpressionStatement	zend_compile_goto ( ast )	7024:3:206870:206892	3956763	26	True				
ANR	3956900	CallExpression	zend_compile_goto ( ast )		3956763	0					
ANR	3956901	Callee	zend_compile_goto		3956763	0					
ANR	3956902	Identifier	zend_compile_goto		3956763	0					
ANR	3956903	ArgumentList	ast		3956763	1					
ANR	3956904	Argument	ast		3956763	0					
ANR	3956905	Identifier	ast		3956763	0					
ANR	3956906	BreakStatement	break ;	7025:3:206897:206902	3956763	27	True				
ANR	3956907	Label	case ZEND_AST_LABEL :	7026:2:206906:206925	3956763	28	True				
ANR	3956908	Identifier	ZEND_AST_LABEL		3956763	0					
ANR	3956909	ExpressionStatement	zend_compile_label ( ast )	7027:3:206930:206953	3956763	29	True				
ANR	3956910	CallExpression	zend_compile_label ( ast )		3956763	0					
ANR	3956911	Callee	zend_compile_label		3956763	0					
ANR	3956912	Identifier	zend_compile_label		3956763	0					
ANR	3956913	ArgumentList	ast		3956763	1					
ANR	3956914	Argument	ast		3956763	0					
ANR	3956915	Identifier	ast		3956763	0					
ANR	3956916	BreakStatement	break ;	7028:3:206958:206963	3956763	30	True				
ANR	3956917	Label	case ZEND_AST_WHILE :	7029:2:206967:206986	3956763	31	True				
ANR	3956918	Identifier	ZEND_AST_WHILE		3956763	0					
ANR	3956919	ExpressionStatement	zend_compile_while ( ast )	7030:3:206991:207014	3956763	32	True				
ANR	3956920	CallExpression	zend_compile_while ( ast )		3956763	0					
ANR	3956921	Callee	zend_compile_while		3956763	0					
ANR	3956922	Identifier	zend_compile_while		3956763	0					
ANR	3956923	ArgumentList	ast		3956763	1					
ANR	3956924	Argument	ast		3956763	0					
ANR	3956925	Identifier	ast		3956763	0					
ANR	3956926	BreakStatement	break ;	7031:3:207019:207024	3956763	33	True				
ANR	3956927	Label	case ZEND_AST_DO_WHILE :	7032:2:207028:207050	3956763	34	True				
ANR	3956928	Identifier	ZEND_AST_DO_WHILE		3956763	0					
ANR	3956929	ExpressionStatement	zend_compile_do_while ( ast )	7033:3:207055:207081	3956763	35	True				
ANR	3956930	CallExpression	zend_compile_do_while ( ast )		3956763	0					
ANR	3956931	Callee	zend_compile_do_while		3956763	0					
ANR	3956932	Identifier	zend_compile_do_while		3956763	0					
ANR	3956933	ArgumentList	ast		3956763	1					
ANR	3956934	Argument	ast		3956763	0					
ANR	3956935	Identifier	ast		3956763	0					
ANR	3956936	BreakStatement	break ;	7034:3:207086:207091	3956763	36	True				
ANR	3956937	Label	case ZEND_AST_FOR :	7035:2:207095:207112	3956763	37	True				
ANR	3956938	Identifier	ZEND_AST_FOR		3956763	0					
ANR	3956939	ExpressionStatement	zend_compile_for ( ast )	7036:3:207117:207138	3956763	38	True				
ANR	3956940	CallExpression	zend_compile_for ( ast )		3956763	0					
ANR	3956941	Callee	zend_compile_for		3956763	0					
ANR	3956942	Identifier	zend_compile_for		3956763	0					
ANR	3956943	ArgumentList	ast		3956763	1					
ANR	3956944	Argument	ast		3956763	0					
ANR	3956945	Identifier	ast		3956763	0					
ANR	3956946	BreakStatement	break ;	7037:3:207143:207148	3956763	39	True				
ANR	3956947	Label	case ZEND_AST_FOREACH :	7038:2:207152:207173	3956763	40	True				
ANR	3956948	Identifier	ZEND_AST_FOREACH		3956763	0					
ANR	3956949	ExpressionStatement	zend_compile_foreach ( ast )	7039:3:207178:207203	3956763	41	True				
ANR	3956950	CallExpression	zend_compile_foreach ( ast )		3956763	0					
ANR	3956951	Callee	zend_compile_foreach		3956763	0					
ANR	3956952	Identifier	zend_compile_foreach		3956763	0					
ANR	3956953	ArgumentList	ast		3956763	1					
ANR	3956954	Argument	ast		3956763	0					
ANR	3956955	Identifier	ast		3956763	0					
ANR	3956956	BreakStatement	break ;	7040:3:207208:207213	3956763	42	True				
ANR	3956957	Label	case ZEND_AST_IF :	7041:2:207217:207233	3956763	43	True				
ANR	3956958	Identifier	ZEND_AST_IF		3956763	0					
ANR	3956959	ExpressionStatement	zend_compile_if ( ast )	7042:3:207238:207258	3956763	44	True				
ANR	3956960	CallExpression	zend_compile_if ( ast )		3956763	0					
ANR	3956961	Callee	zend_compile_if		3956763	0					
ANR	3956962	Identifier	zend_compile_if		3956763	0					
ANR	3956963	ArgumentList	ast		3956763	1					
ANR	3956964	Argument	ast		3956763	0					
ANR	3956965	Identifier	ast		3956763	0					
ANR	3956966	BreakStatement	break ;	7043:3:207263:207268	3956763	45	True				
ANR	3956967	Label	case ZEND_AST_SWITCH :	7044:2:207272:207292	3956763	46	True				
ANR	3956968	Identifier	ZEND_AST_SWITCH		3956763	0					
ANR	3956969	ExpressionStatement	zend_compile_switch ( ast )	7045:3:207297:207321	3956763	47	True				
ANR	3956970	CallExpression	zend_compile_switch ( ast )		3956763	0					
ANR	3956971	Callee	zend_compile_switch		3956763	0					
ANR	3956972	Identifier	zend_compile_switch		3956763	0					
ANR	3956973	ArgumentList	ast		3956763	1					
ANR	3956974	Argument	ast		3956763	0					
ANR	3956975	Identifier	ast		3956763	0					
ANR	3956976	BreakStatement	break ;	7046:3:207326:207331	3956763	48	True				
ANR	3956977	Label	case ZEND_AST_TRY :	7047:2:207335:207352	3956763	49	True				
ANR	3956978	Identifier	ZEND_AST_TRY		3956763	0					
ANR	3956979	ExpressionStatement	zend_compile_try ( ast )	7048:3:207357:207378	3956763	50	True				
ANR	3956980	CallExpression	zend_compile_try ( ast )		3956763	0					
ANR	3956981	Callee	zend_compile_try		3956763	0					
ANR	3956982	Identifier	zend_compile_try		3956763	0					
ANR	3956983	ArgumentList	ast		3956763	1					
ANR	3956984	Argument	ast		3956763	0					
ANR	3956985	Identifier	ast		3956763	0					
ANR	3956986	BreakStatement	break ;	7049:3:207383:207388	3956763	51	True				
ANR	3956987	Label	case ZEND_AST_DECLARE :	7050:2:207392:207413	3956763	52	True				
ANR	3956988	Identifier	ZEND_AST_DECLARE		3956763	0					
ANR	3956989	ExpressionStatement	zend_compile_declare ( ast )	7051:3:207418:207443	3956763	53	True				
ANR	3956990	CallExpression	zend_compile_declare ( ast )		3956763	0					
ANR	3956991	Callee	zend_compile_declare		3956763	0					
ANR	3956992	Identifier	zend_compile_declare		3956763	0					
ANR	3956993	ArgumentList	ast		3956763	1					
ANR	3956994	Argument	ast		3956763	0					
ANR	3956995	Identifier	ast		3956763	0					
ANR	3956996	BreakStatement	break ;	7052:3:207448:207453	3956763	54	True				
ANR	3956997	Label	case ZEND_AST_FUNC_DECL :	7053:2:207457:207480	3956763	55	True				
ANR	3956998	Identifier	ZEND_AST_FUNC_DECL		3956763	0					
ANR	3956999	Label	case ZEND_AST_METHOD :	7054:2:207484:207504	3956763	56	True				
ANR	3957000	Identifier	ZEND_AST_METHOD		3956763	0					
ANR	3957001	ExpressionStatement	"zend_compile_func_decl ( NULL , ast )"	7055:3:207509:207542	3956763	57	True				
ANR	3957002	CallExpression	"zend_compile_func_decl ( NULL , ast )"		3956763	0					
ANR	3957003	Callee	zend_compile_func_decl		3956763	0					
ANR	3957004	Identifier	zend_compile_func_decl		3956763	0					
ANR	3957005	ArgumentList	NULL		3956763	1					
ANR	3957006	Argument	NULL		3956763	0					
ANR	3957007	Identifier	NULL		3956763	0					
ANR	3957008	Argument	ast		3956763	1					
ANR	3957009	Identifier	ast		3956763	0					
ANR	3957010	BreakStatement	break ;	7056:3:207547:207552	3956763	58	True				
ANR	3957011	Label	case ZEND_AST_PROP_DECL :	7057:2:207556:207579	3956763	59	True				
ANR	3957012	Identifier	ZEND_AST_PROP_DECL		3956763	0					
ANR	3957013	ExpressionStatement	zend_compile_prop_decl ( ast )	7058:3:207584:207611	3956763	60	True				
ANR	3957014	CallExpression	zend_compile_prop_decl ( ast )		3956763	0					
ANR	3957015	Callee	zend_compile_prop_decl		3956763	0					
ANR	3957016	Identifier	zend_compile_prop_decl		3956763	0					
ANR	3957017	ArgumentList	ast		3956763	1					
ANR	3957018	Argument	ast		3956763	0					
ANR	3957019	Identifier	ast		3956763	0					
ANR	3957020	BreakStatement	break ;	7059:3:207616:207621	3956763	61	True				
ANR	3957021	Label	case ZEND_AST_CLASS_CONST_DECL :	7060:2:207625:207655	3956763	62	True				
ANR	3957022	Identifier	ZEND_AST_CLASS_CONST_DECL		3956763	0					
ANR	3957023	ExpressionStatement	zend_compile_class_const_decl ( ast )	7061:3:207660:207694	3956763	63	True				
ANR	3957024	CallExpression	zend_compile_class_const_decl ( ast )		3956763	0					
ANR	3957025	Callee	zend_compile_class_const_decl		3956763	0					
ANR	3957026	Identifier	zend_compile_class_const_decl		3956763	0					
ANR	3957027	ArgumentList	ast		3956763	1					
ANR	3957028	Argument	ast		3956763	0					
ANR	3957029	Identifier	ast		3956763	0					
ANR	3957030	BreakStatement	break ;	7062:3:207699:207704	3956763	64	True				
ANR	3957031	Label	case ZEND_AST_USE_TRAIT :	7063:2:207708:207731	3956763	65	True				
ANR	3957032	Identifier	ZEND_AST_USE_TRAIT		3956763	0					
ANR	3957033	ExpressionStatement	zend_compile_use_trait ( ast )	7064:3:207736:207763	3956763	66	True				
ANR	3957034	CallExpression	zend_compile_use_trait ( ast )		3956763	0					
ANR	3957035	Callee	zend_compile_use_trait		3956763	0					
ANR	3957036	Identifier	zend_compile_use_trait		3956763	0					
ANR	3957037	ArgumentList	ast		3956763	1					
ANR	3957038	Argument	ast		3956763	0					
ANR	3957039	Identifier	ast		3956763	0					
ANR	3957040	BreakStatement	break ;	7065:3:207768:207773	3956763	67	True				
ANR	3957041	Label	case ZEND_AST_CLASS :	7066:2:207777:207796	3956763	68	True				
ANR	3957042	Identifier	ZEND_AST_CLASS		3956763	0					
ANR	3957043	ExpressionStatement	zend_compile_class_decl ( ast )	7067:3:207801:207829	3956763	69	True				
ANR	3957044	CallExpression	zend_compile_class_decl ( ast )		3956763	0					
ANR	3957045	Callee	zend_compile_class_decl		3956763	0					
ANR	3957046	Identifier	zend_compile_class_decl		3956763	0					
ANR	3957047	ArgumentList	ast		3956763	1					
ANR	3957048	Argument	ast		3956763	0					
ANR	3957049	Identifier	ast		3956763	0					
ANR	3957050	BreakStatement	break ;	7068:3:207834:207839	3956763	70	True				
ANR	3957051	Label	case ZEND_AST_GROUP_USE :	7069:2:207843:207866	3956763	71	True				
ANR	3957052	Identifier	ZEND_AST_GROUP_USE		3956763	0					
ANR	3957053	ExpressionStatement	zend_compile_group_use ( ast )	7070:3:207871:207898	3956763	72	True				
ANR	3957054	CallExpression	zend_compile_group_use ( ast )		3956763	0					
ANR	3957055	Callee	zend_compile_group_use		3956763	0					
ANR	3957056	Identifier	zend_compile_group_use		3956763	0					
ANR	3957057	ArgumentList	ast		3956763	1					
ANR	3957058	Argument	ast		3956763	0					
ANR	3957059	Identifier	ast		3956763	0					
ANR	3957060	BreakStatement	break ;	7071:3:207903:207908	3956763	73	True				
ANR	3957061	Label	case ZEND_AST_USE :	7072:2:207912:207929	3956763	74	True				
ANR	3957062	Identifier	ZEND_AST_USE		3956763	0					
ANR	3957063	ExpressionStatement	zend_compile_use ( ast )	7073:3:207934:207955	3956763	75	True				
ANR	3957064	CallExpression	zend_compile_use ( ast )		3956763	0					
ANR	3957065	Callee	zend_compile_use		3956763	0					
ANR	3957066	Identifier	zend_compile_use		3956763	0					
ANR	3957067	ArgumentList	ast		3956763	1					
ANR	3957068	Argument	ast		3956763	0					
ANR	3957069	Identifier	ast		3956763	0					
ANR	3957070	BreakStatement	break ;	7074:3:207960:207965	3956763	76	True				
ANR	3957071	Label	case ZEND_AST_CONST_DECL :	7075:2:207969:207993	3956763	77	True				
ANR	3957072	Identifier	ZEND_AST_CONST_DECL		3956763	0					
ANR	3957073	ExpressionStatement	zend_compile_const_decl ( ast )	7076:3:207998:208026	3956763	78	True				
ANR	3957074	CallExpression	zend_compile_const_decl ( ast )		3956763	0					
ANR	3957075	Callee	zend_compile_const_decl		3956763	0					
ANR	3957076	Identifier	zend_compile_const_decl		3956763	0					
ANR	3957077	ArgumentList	ast		3956763	1					
ANR	3957078	Argument	ast		3956763	0					
ANR	3957079	Identifier	ast		3956763	0					
ANR	3957080	BreakStatement	break ;	7077:3:208031:208036	3956763	79	True				
ANR	3957081	Label	case ZEND_AST_NAMESPACE :	7078:2:208040:208063	3956763	80	True				
ANR	3957082	Identifier	ZEND_AST_NAMESPACE		3956763	0					
ANR	3957083	ExpressionStatement	zend_compile_namespace ( ast )	7079:3:208068:208095	3956763	81	True				
ANR	3957084	CallExpression	zend_compile_namespace ( ast )		3956763	0					
ANR	3957085	Callee	zend_compile_namespace		3956763	0					
ANR	3957086	Identifier	zend_compile_namespace		3956763	0					
ANR	3957087	ArgumentList	ast		3956763	1					
ANR	3957088	Argument	ast		3956763	0					
ANR	3957089	Identifier	ast		3956763	0					
ANR	3957090	BreakStatement	break ;	7080:3:208100:208105	3956763	82	True				
ANR	3957091	Label	case ZEND_AST_HALT_COMPILER :	7081:2:208109:208136	3956763	83	True				
ANR	3957092	Identifier	ZEND_AST_HALT_COMPILER		3956763	0					
ANR	3957093	ExpressionStatement	zend_compile_halt_compiler ( ast )	7082:3:208141:208172	3956763	84	True				
ANR	3957094	CallExpression	zend_compile_halt_compiler ( ast )		3956763	0					
ANR	3957095	Callee	zend_compile_halt_compiler		3956763	0					
ANR	3957096	Identifier	zend_compile_halt_compiler		3956763	0					
ANR	3957097	ArgumentList	ast		3956763	1					
ANR	3957098	Argument	ast		3956763	0					
ANR	3957099	Identifier	ast		3956763	0					
ANR	3957100	BreakStatement	break ;	7083:3:208177:208182	3956763	85	True				
ANR	3957101	Label	default :	7084:2:208186:208193	3956763	86	True				
ANR	3957102	Identifier	default		3956763	0					
ANR	3957103	CompoundStatement		101:3:2105:2117	3956763	87					
ANR	3957104	IdentifierDeclStatement	znode result ;	7086:3:208202:208214	3956763	0	True				
ANR	3957105	IdentifierDecl	result		3956763	0					
ANR	3957106	IdentifierDeclType	znode		3956763	0					
ANR	3957107	Identifier	result		3956763	1					
ANR	3957108	ExpressionStatement	"zend_compile_expr ( & result , ast )"	7087:3:208219:208250	3956763	1	True				
ANR	3957109	CallExpression	"zend_compile_expr ( & result , ast )"		3956763	0					
ANR	3957110	Callee	zend_compile_expr		3956763	0					
ANR	3957111	Identifier	zend_compile_expr		3956763	0					
ANR	3957112	ArgumentList	& result		3956763	1					
ANR	3957113	Argument	& result		3956763	0					
ANR	3957114	UnaryOperationExpression	& result		3956763	0					
ANR	3957115	UnaryOperator	&		3956763	0					
ANR	3957116	Identifier	result		3956763	1					
ANR	3957117	Argument	ast		3956763	1					
ANR	3957118	Identifier	ast		3956763	0					
ANR	3957119	ExpressionStatement	zend_do_free ( & result )	7088:3:208255:208276	3956763	2	True				
ANR	3957120	CallExpression	zend_do_free ( & result )		3956763	0					
ANR	3957121	Callee	zend_do_free		3956763	0					
ANR	3957122	Identifier	zend_do_free		3956763	0					
ANR	3957123	ArgumentList	& result		3956763	1					
ANR	3957124	Argument	& result		3956763	0					
ANR	3957125	UnaryOperationExpression	& result		3956763	0					
ANR	3957126	UnaryOperator	&		3956763	0					
ANR	3957127	Identifier	result		3956763	1					
ANR	3957128	IfStatement	if ( FC ( declarables ) . ticks && ! zend_is_unticked_stmt ( ast ) )		3956763	4					
ANR	3957129	Condition	FC ( declarables ) . ticks && ! zend_is_unticked_stmt ( ast )	7092:5:208291:208342	3956763	0	True				
ANR	3957130	AndExpression	FC ( declarables ) . ticks && ! zend_is_unticked_stmt ( ast )		3956763	0		&&			
ANR	3957131	MemberAccess	FC ( declarables ) . ticks		3956763	0					
ANR	3957132	CallExpression	FC ( declarables )		3956763	0					
ANR	3957133	Callee	FC		3956763	0					
ANR	3957134	Identifier	FC		3956763	0					
ANR	3957135	ArgumentList	declarables		3956763	1					
ANR	3957136	Argument	declarables		3956763	0					
ANR	3957137	Identifier	declarables		3956763	0					
ANR	3957138	Identifier	ticks		3956763	1					
ANR	3957139	UnaryOperationExpression	! zend_is_unticked_stmt ( ast )		3956763	1					
ANR	3957140	UnaryOperator	!		3956763	0					
ANR	3957141	CallExpression	zend_is_unticked_stmt ( ast )		3956763	1					
ANR	3957142	Callee	zend_is_unticked_stmt		3956763	0					
ANR	3957143	Identifier	zend_is_unticked_stmt		3956763	0					
ANR	3957144	ArgumentList	ast		3956763	1					
ANR	3957145	Argument	ast		3956763	0					
ANR	3957146	Identifier	ast		3956763	0					
ANR	3957147	CompoundStatement		107:59:2248:2248	3956763	1					
ANR	3957148	ExpressionStatement	zend_emit_tick ( )	7093:2:208349:208365	3956763	0	True				
ANR	3957149	CallExpression	zend_emit_tick ( )		3956763	0					
ANR	3957150	Callee	zend_emit_tick		3956763	0					
ANR	3957151	Identifier	zend_emit_tick		3956763	0					
ANR	3957152	ArgumentList			3956763	1					
ANR	3957153	ReturnType	void		3956763	1					
ANR	3957154	Identifier	zend_compile_stmt		3956763	2					
ANR	3957155	ParameterList	zend_ast * ast		3956763	3					
ANR	3957156	Parameter	zend_ast * ast	6985:23:206071:206083	3956763	0	True				
ANR	3957157	ParameterType	zend_ast *		3956763	0					
ANR	3957158	Identifier	ast		3956763	1					
ANR	3957159	CFGEntryNode	ENTRY		3956763		True				
ANR	3957160	CFGExitNode	EXIT		3956763		True				
ANR	3957161	Symbol	ast -> kind		3956763						
ANR	3957162	Symbol	ast		3956763						
ANR	3957163	Symbol	NULL		3956763						
ANR	3957164	Symbol	CG		3956763						
ANR	3957165	Symbol	ast -> lineno		3956763						
ANR	3957166	Symbol	ZEND_COMPILE_EXTENDED_INFO		3956763						
ANR	3957167	Symbol	result		3956763						
ANR	3957168	Symbol	compiler_options		3956763						
ANR	3957169	Symbol	declarables		3956763						
ANR	3957170	Symbol	* ast		3956763						
ANR	3957171	Symbol	& result		3956763						
ANR	3957172	Symbol	zend_is_unticked_stmt		3956763						
ANR	3957173	Symbol	zend_lineno		3956763						
ANR	3957174	Symbol	FC		3956763						
ANR	3957175	Symbol	FC ( declarables ) . ticks		3956763						
ANR	3957176	Function	zend_compile_expr	7098:0:208383:211477							
ANR	3957177	FunctionDef	"zend_compile_expr (znode * result , zend_ast * ast)"		3957176	0					
ANR	3957178	CompoundStatement		7099:0:208446:211477	3957176	0					
ANR	3957179	ExpressionStatement	CG ( zend_lineno ) = zend_ast_get_lineno ( ast )	7101:1:208487:208529	3957176	0	True				
ANR	3957180	AssignmentExpression	CG ( zend_lineno ) = zend_ast_get_lineno ( ast )		3957176	0		=			
ANR	3957181	CallExpression	CG ( zend_lineno )		3957176	0					
ANR	3957182	Callee	CG		3957176	0					
ANR	3957183	Identifier	CG		3957176	0					
ANR	3957184	ArgumentList	zend_lineno		3957176	1					
ANR	3957185	Argument	zend_lineno		3957176	0					
ANR	3957186	Identifier	zend_lineno		3957176	0					
ANR	3957187	CallExpression	zend_ast_get_lineno ( ast )		3957176	1					
ANR	3957188	Callee	zend_ast_get_lineno		3957176	0					
ANR	3957189	Identifier	zend_ast_get_lineno		3957176	0					
ANR	3957190	ArgumentList	ast		3957176	1					
ANR	3957191	Argument	ast		3957176	0					
ANR	3957192	Identifier	ast		3957176	0					
ANR	3957193	SwitchStatement	switch ( ast -> kind )		3957176	1					
ANR	3957194	Condition	ast -> kind	7103:9:208541:208549	3957176	0	True				
ANR	3957195	PtrMemberAccess	ast -> kind		3957176	0					
ANR	3957196	Identifier	ast		3957176	0					
ANR	3957197	Identifier	kind		3957176	1					
ANR	3957198	CompoundStatement		5:20:105:105	3957176	1					
ANR	3957199	Label	case ZEND_AST_ZVAL :	7104:2:208556:208574	3957176	0	True				
ANR	3957200	Identifier	ZEND_AST_ZVAL		3957176	0					
ANR	3957201	ExpressionStatement	"ZVAL_COPY ( & result -> u . constant , zend_ast_get_zval ( ast ) )"	7105:3:208579:208633	3957176	1	True				
ANR	3957202	CallExpression	"ZVAL_COPY ( & result -> u . constant , zend_ast_get_zval ( ast ) )"		3957176	0					
ANR	3957203	Callee	ZVAL_COPY		3957176	0					
ANR	3957204	Identifier	ZVAL_COPY		3957176	0					
ANR	3957205	ArgumentList	& result -> u . constant		3957176	1					
ANR	3957206	Argument	& result -> u . constant		3957176	0					
ANR	3957207	UnaryOperationExpression	& result -> u . constant		3957176	0					
ANR	3957208	UnaryOperator	&		3957176	0					
ANR	3957209	MemberAccess	result -> u . constant		3957176	1					
ANR	3957210	PtrMemberAccess	result -> u		3957176	0					
ANR	3957211	Identifier	result		3957176	0					
ANR	3957212	Identifier	u		3957176	1					
ANR	3957213	Identifier	constant		3957176	1					
ANR	3957214	Argument	zend_ast_get_zval ( ast )		3957176	1					
ANR	3957215	CallExpression	zend_ast_get_zval ( ast )		3957176	0					
ANR	3957216	Callee	zend_ast_get_zval		3957176	0					
ANR	3957217	Identifier	zend_ast_get_zval		3957176	0					
ANR	3957218	ArgumentList	ast		3957176	1					
ANR	3957219	Argument	ast		3957176	0					
ANR	3957220	Identifier	ast		3957176	0					
ANR	3957221	ExpressionStatement	result -> op_type = IS_CONST	7106:3:208638:208664	3957176	2	True				
ANR	3957222	AssignmentExpression	result -> op_type = IS_CONST		3957176	0		=			
ANR	3957223	PtrMemberAccess	result -> op_type		3957176	0					
ANR	3957224	Identifier	result		3957176	0					
ANR	3957225	Identifier	op_type		3957176	1					
ANR	3957226	Identifier	IS_CONST		3957176	1					
ANR	3957227	ReturnStatement	return ;	7107:3:208669:208675	3957176	3	True				
ANR	3957228	Label	case ZEND_AST_ZNODE :	7108:2:208679:208698	3957176	4	True				
ANR	3957229	Identifier	ZEND_AST_ZNODE		3957176	0					
ANR	3957230	ExpressionStatement	* result = * zend_ast_get_znode ( ast )	7109:3:208703:208737	3957176	5	True				
ANR	3957231	AssignmentExpression	* result = * zend_ast_get_znode ( ast )		3957176	0		=			
ANR	3957232	UnaryOperationExpression	* result		3957176	0					
ANR	3957233	UnaryOperator	*		3957176	0					
ANR	3957234	Identifier	result		3957176	1					
ANR	3957235	UnaryOperationExpression	* zend_ast_get_znode ( ast )		3957176	1					
ANR	3957236	UnaryOperator	*		3957176	0					
ANR	3957237	CallExpression	zend_ast_get_znode ( ast )		3957176	1					
ANR	3957238	Callee	zend_ast_get_znode		3957176	0					
ANR	3957239	Identifier	zend_ast_get_znode		3957176	0					
ANR	3957240	ArgumentList	ast		3957176	1					
ANR	3957241	Argument	ast		3957176	0					
ANR	3957242	Identifier	ast		3957176	0					
ANR	3957243	ReturnStatement	return ;	7110:3:208742:208748	3957176	6	True				
ANR	3957244	Label	case ZEND_AST_VAR :	7111:2:208752:208769	3957176	7	True				
ANR	3957245	Identifier	ZEND_AST_VAR		3957176	0					
ANR	3957246	Label	case ZEND_AST_DIM :	7112:2:208773:208790	3957176	8	True				
ANR	3957247	Identifier	ZEND_AST_DIM		3957176	0					
ANR	3957248	Label	case ZEND_AST_PROP :	7113:2:208794:208812	3957176	9	True				
ANR	3957249	Identifier	ZEND_AST_PROP		3957176	0					
ANR	3957250	Label	case ZEND_AST_STATIC_PROP :	7114:2:208816:208841	3957176	10	True				
ANR	3957251	Identifier	ZEND_AST_STATIC_PROP		3957176	0					
ANR	3957252	Label	case ZEND_AST_CALL :	7115:2:208845:208863	3957176	11	True				
ANR	3957253	Identifier	ZEND_AST_CALL		3957176	0					
ANR	3957254	Label	case ZEND_AST_METHOD_CALL :	7116:2:208867:208892	3957176	12	True				
ANR	3957255	Identifier	ZEND_AST_METHOD_CALL		3957176	0					
ANR	3957256	Label	case ZEND_AST_STATIC_CALL :	7117:2:208896:208921	3957176	13	True				
ANR	3957257	Identifier	ZEND_AST_STATIC_CALL		3957176	0					
ANR	3957258	ExpressionStatement	"zend_compile_var ( result , ast , BP_VAR_R )"	7118:3:208926:208965	3957176	14	True				
ANR	3957259	CallExpression	"zend_compile_var ( result , ast , BP_VAR_R )"		3957176	0					
ANR	3957260	Callee	zend_compile_var		3957176	0					
ANR	3957261	Identifier	zend_compile_var		3957176	0					
ANR	3957262	ArgumentList	result		3957176	1					
ANR	3957263	Argument	result		3957176	0					
ANR	3957264	Identifier	result		3957176	0					
ANR	3957265	Argument	ast		3957176	1					
ANR	3957266	Identifier	ast		3957176	0					
ANR	3957267	Argument	BP_VAR_R		3957176	2					
ANR	3957268	Identifier	BP_VAR_R		3957176	0					
ANR	3957269	ReturnStatement	return ;	7119:3:208970:208976	3957176	15	True				
ANR	3957270	Label	case ZEND_AST_ASSIGN :	7120:2:208980:209000	3957176	16	True				
ANR	3957271	Identifier	ZEND_AST_ASSIGN		3957176	0					
ANR	3957272	ExpressionStatement	"zend_compile_assign ( result , ast )"	7121:3:209005:209037	3957176	17	True				
ANR	3957273	CallExpression	"zend_compile_assign ( result , ast )"		3957176	0					
ANR	3957274	Callee	zend_compile_assign		3957176	0					
ANR	3957275	Identifier	zend_compile_assign		3957176	0					
ANR	3957276	ArgumentList	result		3957176	1					
ANR	3957277	Argument	result		3957176	0					
ANR	3957278	Identifier	result		3957176	0					
ANR	3957279	Argument	ast		3957176	1					
ANR	3957280	Identifier	ast		3957176	0					
ANR	3957281	ReturnStatement	return ;	7122:3:209042:209048	3957176	18	True				
ANR	3957282	Label	case ZEND_AST_ASSIGN_REF :	7123:2:209052:209076	3957176	19	True				
ANR	3957283	Identifier	ZEND_AST_ASSIGN_REF		3957176	0					
ANR	3957284	ExpressionStatement	"zend_compile_assign_ref ( result , ast )"	7124:3:209081:209117	3957176	20	True				
ANR	3957285	CallExpression	"zend_compile_assign_ref ( result , ast )"		3957176	0					
ANR	3957286	Callee	zend_compile_assign_ref		3957176	0					
ANR	3957287	Identifier	zend_compile_assign_ref		3957176	0					
ANR	3957288	ArgumentList	result		3957176	1					
ANR	3957289	Argument	result		3957176	0					
ANR	3957290	Identifier	result		3957176	0					
ANR	3957291	Argument	ast		3957176	1					
ANR	3957292	Identifier	ast		3957176	0					
ANR	3957293	ReturnStatement	return ;	7125:3:209122:209128	3957176	21	True				
ANR	3957294	Label	case ZEND_AST_NEW :	7126:2:209132:209149	3957176	22	True				
ANR	3957295	Identifier	ZEND_AST_NEW		3957176	0					
ANR	3957296	ExpressionStatement	"zend_compile_new ( result , ast )"	7127:3:209154:209183	3957176	23	True				
ANR	3957297	CallExpression	"zend_compile_new ( result , ast )"		3957176	0					
ANR	3957298	Callee	zend_compile_new		3957176	0					
ANR	3957299	Identifier	zend_compile_new		3957176	0					
ANR	3957300	ArgumentList	result		3957176	1					
ANR	3957301	Argument	result		3957176	0					
ANR	3957302	Identifier	result		3957176	0					
ANR	3957303	Argument	ast		3957176	1					
ANR	3957304	Identifier	ast		3957176	0					
ANR	3957305	ReturnStatement	return ;	7128:3:209188:209194	3957176	24	True				
ANR	3957306	Label	case ZEND_AST_CLONE :	7129:2:209198:209217	3957176	25	True				
ANR	3957307	Identifier	ZEND_AST_CLONE		3957176	0					
ANR	3957308	ExpressionStatement	"zend_compile_clone ( result , ast )"	7130:3:209222:209253	3957176	26	True				
ANR	3957309	CallExpression	"zend_compile_clone ( result , ast )"		3957176	0					
ANR	3957310	Callee	zend_compile_clone		3957176	0					
ANR	3957311	Identifier	zend_compile_clone		3957176	0					
ANR	3957312	ArgumentList	result		3957176	1					
ANR	3957313	Argument	result		3957176	0					
ANR	3957314	Identifier	result		3957176	0					
ANR	3957315	Argument	ast		3957176	1					
ANR	3957316	Identifier	ast		3957176	0					
ANR	3957317	ReturnStatement	return ;	7131:3:209258:209264	3957176	27	True				
ANR	3957318	Label	case ZEND_AST_ASSIGN_OP :	7132:2:209268:209291	3957176	28	True				
ANR	3957319	Identifier	ZEND_AST_ASSIGN_OP		3957176	0					
ANR	3957320	ExpressionStatement	"zend_compile_compound_assign ( result , ast )"	7133:3:209296:209337	3957176	29	True				
ANR	3957321	CallExpression	"zend_compile_compound_assign ( result , ast )"		3957176	0					
ANR	3957322	Callee	zend_compile_compound_assign		3957176	0					
ANR	3957323	Identifier	zend_compile_compound_assign		3957176	0					
ANR	3957324	ArgumentList	result		3957176	1					
ANR	3957325	Argument	result		3957176	0					
ANR	3957326	Identifier	result		3957176	0					
ANR	3957327	Argument	ast		3957176	1					
ANR	3957328	Identifier	ast		3957176	0					
ANR	3957329	ReturnStatement	return ;	7134:3:209342:209348	3957176	30	True				
ANR	3957330	Label	case ZEND_AST_BINARY_OP :	7135:2:209352:209375	3957176	31	True				
ANR	3957331	Identifier	ZEND_AST_BINARY_OP		3957176	0					
ANR	3957332	ExpressionStatement	"zend_compile_binary_op ( result , ast )"	7136:3:209380:209415	3957176	32	True				
ANR	3957333	CallExpression	"zend_compile_binary_op ( result , ast )"		3957176	0					
ANR	3957334	Callee	zend_compile_binary_op		3957176	0					
ANR	3957335	Identifier	zend_compile_binary_op		3957176	0					
ANR	3957336	ArgumentList	result		3957176	1					
ANR	3957337	Argument	result		3957176	0					
ANR	3957338	Identifier	result		3957176	0					
ANR	3957339	Argument	ast		3957176	1					
ANR	3957340	Identifier	ast		3957176	0					
ANR	3957341	ReturnStatement	return ;	7137:3:209420:209426	3957176	33	True				
ANR	3957342	Label	case ZEND_AST_GREATER :	7138:2:209430:209451	3957176	34	True				
ANR	3957343	Identifier	ZEND_AST_GREATER		3957176	0					
ANR	3957344	Label	case ZEND_AST_GREATER_EQUAL :	7139:2:209455:209482	3957176	35	True				
ANR	3957345	Identifier	ZEND_AST_GREATER_EQUAL		3957176	0					
ANR	3957346	ExpressionStatement	"zend_compile_greater ( result , ast )"	7140:3:209487:209520	3957176	36	True				
ANR	3957347	CallExpression	"zend_compile_greater ( result , ast )"		3957176	0					
ANR	3957348	Callee	zend_compile_greater		3957176	0					
ANR	3957349	Identifier	zend_compile_greater		3957176	0					
ANR	3957350	ArgumentList	result		3957176	1					
ANR	3957351	Argument	result		3957176	0					
ANR	3957352	Identifier	result		3957176	0					
ANR	3957353	Argument	ast		3957176	1					
ANR	3957354	Identifier	ast		3957176	0					
ANR	3957355	ReturnStatement	return ;	7141:3:209525:209531	3957176	37	True				
ANR	3957356	Label	case ZEND_AST_UNARY_OP :	7142:2:209535:209557	3957176	38	True				
ANR	3957357	Identifier	ZEND_AST_UNARY_OP		3957176	0					
ANR	3957358	ExpressionStatement	"zend_compile_unary_op ( result , ast )"	7143:3:209562:209596	3957176	39	True				
ANR	3957359	CallExpression	"zend_compile_unary_op ( result , ast )"		3957176	0					
ANR	3957360	Callee	zend_compile_unary_op		3957176	0					
ANR	3957361	Identifier	zend_compile_unary_op		3957176	0					
ANR	3957362	ArgumentList	result		3957176	1					
ANR	3957363	Argument	result		3957176	0					
ANR	3957364	Identifier	result		3957176	0					
ANR	3957365	Argument	ast		3957176	1					
ANR	3957366	Identifier	ast		3957176	0					
ANR	3957367	ReturnStatement	return ;	7144:3:209601:209607	3957176	40	True				
ANR	3957368	Label	case ZEND_AST_UNARY_PLUS :	7145:2:209611:209635	3957176	41	True				
ANR	3957369	Identifier	ZEND_AST_UNARY_PLUS		3957176	0					
ANR	3957370	Label	case ZEND_AST_UNARY_MINUS :	7146:2:209639:209664	3957176	42	True				
ANR	3957371	Identifier	ZEND_AST_UNARY_MINUS		3957176	0					
ANR	3957372	ExpressionStatement	"zend_compile_unary_pm ( result , ast )"	7147:3:209669:209703	3957176	43	True				
ANR	3957373	CallExpression	"zend_compile_unary_pm ( result , ast )"		3957176	0					
ANR	3957374	Callee	zend_compile_unary_pm		3957176	0					
ANR	3957375	Identifier	zend_compile_unary_pm		3957176	0					
ANR	3957376	ArgumentList	result		3957176	1					
ANR	3957377	Argument	result		3957176	0					
ANR	3957378	Identifier	result		3957176	0					
ANR	3957379	Argument	ast		3957176	1					
ANR	3957380	Identifier	ast		3957176	0					
ANR	3957381	ReturnStatement	return ;	7148:3:209708:209714	3957176	44	True				
ANR	3957382	Label	case ZEND_AST_AND :	7149:2:209718:209735	3957176	45	True				
ANR	3957383	Identifier	ZEND_AST_AND		3957176	0					
ANR	3957384	Label	case ZEND_AST_OR :	7150:2:209739:209755	3957176	46	True				
ANR	3957385	Identifier	ZEND_AST_OR		3957176	0					
ANR	3957386	ExpressionStatement	"zend_compile_short_circuiting ( result , ast )"	7151:3:209760:209802	3957176	47	True				
ANR	3957387	CallExpression	"zend_compile_short_circuiting ( result , ast )"		3957176	0					
ANR	3957388	Callee	zend_compile_short_circuiting		3957176	0					
ANR	3957389	Identifier	zend_compile_short_circuiting		3957176	0					
ANR	3957390	ArgumentList	result		3957176	1					
ANR	3957391	Argument	result		3957176	0					
ANR	3957392	Identifier	result		3957176	0					
ANR	3957393	Argument	ast		3957176	1					
ANR	3957394	Identifier	ast		3957176	0					
ANR	3957395	ReturnStatement	return ;	7152:3:209807:209813	3957176	48	True				
ANR	3957396	Label	case ZEND_AST_POST_INC :	7153:2:209817:209839	3957176	49	True				
ANR	3957397	Identifier	ZEND_AST_POST_INC		3957176	0					
ANR	3957398	Label	case ZEND_AST_POST_DEC :	7154:2:209843:209865	3957176	50	True				
ANR	3957399	Identifier	ZEND_AST_POST_DEC		3957176	0					
ANR	3957400	ExpressionStatement	"zend_compile_post_incdec ( result , ast )"	7155:3:209870:209907	3957176	51	True				
ANR	3957401	CallExpression	"zend_compile_post_incdec ( result , ast )"		3957176	0					
ANR	3957402	Callee	zend_compile_post_incdec		3957176	0					
ANR	3957403	Identifier	zend_compile_post_incdec		3957176	0					
ANR	3957404	ArgumentList	result		3957176	1					
ANR	3957405	Argument	result		3957176	0					
ANR	3957406	Identifier	result		3957176	0					
ANR	3957407	Argument	ast		3957176	1					
ANR	3957408	Identifier	ast		3957176	0					
ANR	3957409	ReturnStatement	return ;	7156:3:209912:209918	3957176	52	True				
ANR	3957410	Label	case ZEND_AST_PRE_INC :	7157:2:209922:209943	3957176	53	True				
ANR	3957411	Identifier	ZEND_AST_PRE_INC		3957176	0					
ANR	3957412	Label	case ZEND_AST_PRE_DEC :	7158:2:209947:209968	3957176	54	True				
ANR	3957413	Identifier	ZEND_AST_PRE_DEC		3957176	0					
ANR	3957414	ExpressionStatement	"zend_compile_pre_incdec ( result , ast )"	7159:3:209973:210009	3957176	55	True				
ANR	3957415	CallExpression	"zend_compile_pre_incdec ( result , ast )"		3957176	0					
ANR	3957416	Callee	zend_compile_pre_incdec		3957176	0					
ANR	3957417	Identifier	zend_compile_pre_incdec		3957176	0					
ANR	3957418	ArgumentList	result		3957176	1					
ANR	3957419	Argument	result		3957176	0					
ANR	3957420	Identifier	result		3957176	0					
ANR	3957421	Argument	ast		3957176	1					
ANR	3957422	Identifier	ast		3957176	0					
ANR	3957423	ReturnStatement	return ;	7160:3:210014:210020	3957176	56	True				
ANR	3957424	Label	case ZEND_AST_CAST :	7161:2:210024:210042	3957176	57	True				
ANR	3957425	Identifier	ZEND_AST_CAST		3957176	0					
ANR	3957426	ExpressionStatement	"zend_compile_cast ( result , ast )"	7162:3:210047:210077	3957176	58	True				
ANR	3957427	CallExpression	"zend_compile_cast ( result , ast )"		3957176	0					
ANR	3957428	Callee	zend_compile_cast		3957176	0					
ANR	3957429	Identifier	zend_compile_cast		3957176	0					
ANR	3957430	ArgumentList	result		3957176	1					
ANR	3957431	Argument	result		3957176	0					
ANR	3957432	Identifier	result		3957176	0					
ANR	3957433	Argument	ast		3957176	1					
ANR	3957434	Identifier	ast		3957176	0					
ANR	3957435	ReturnStatement	return ;	7163:3:210082:210088	3957176	59	True				
ANR	3957436	Label	case ZEND_AST_CONDITIONAL :	7164:2:210092:210117	3957176	60	True				
ANR	3957437	Identifier	ZEND_AST_CONDITIONAL		3957176	0					
ANR	3957438	ExpressionStatement	"zend_compile_conditional ( result , ast )"	7165:3:210122:210159	3957176	61	True				
ANR	3957439	CallExpression	"zend_compile_conditional ( result , ast )"		3957176	0					
ANR	3957440	Callee	zend_compile_conditional		3957176	0					
ANR	3957441	Identifier	zend_compile_conditional		3957176	0					
ANR	3957442	ArgumentList	result		3957176	1					
ANR	3957443	Argument	result		3957176	0					
ANR	3957444	Identifier	result		3957176	0					
ANR	3957445	Argument	ast		3957176	1					
ANR	3957446	Identifier	ast		3957176	0					
ANR	3957447	ReturnStatement	return ;	7166:3:210164:210170	3957176	62	True				
ANR	3957448	Label	case ZEND_AST_COALESCE :	7167:2:210174:210196	3957176	63	True				
ANR	3957449	Identifier	ZEND_AST_COALESCE		3957176	0					
ANR	3957450	ExpressionStatement	"zend_compile_coalesce ( result , ast )"	7168:3:210201:210235	3957176	64	True				
ANR	3957451	CallExpression	"zend_compile_coalesce ( result , ast )"		3957176	0					
ANR	3957452	Callee	zend_compile_coalesce		3957176	0					
ANR	3957453	Identifier	zend_compile_coalesce		3957176	0					
ANR	3957454	ArgumentList	result		3957176	1					
ANR	3957455	Argument	result		3957176	0					
ANR	3957456	Identifier	result		3957176	0					
ANR	3957457	Argument	ast		3957176	1					
ANR	3957458	Identifier	ast		3957176	0					
ANR	3957459	ReturnStatement	return ;	7169:3:210240:210246	3957176	65	True				
ANR	3957460	Label	case ZEND_AST_PRINT :	7170:2:210250:210269	3957176	66	True				
ANR	3957461	Identifier	ZEND_AST_PRINT		3957176	0					
ANR	3957462	ExpressionStatement	"zend_compile_print ( result , ast )"	7171:3:210274:210305	3957176	67	True				
ANR	3957463	CallExpression	"zend_compile_print ( result , ast )"		3957176	0					
ANR	3957464	Callee	zend_compile_print		3957176	0					
ANR	3957465	Identifier	zend_compile_print		3957176	0					
ANR	3957466	ArgumentList	result		3957176	1					
ANR	3957467	Argument	result		3957176	0					
ANR	3957468	Identifier	result		3957176	0					
ANR	3957469	Argument	ast		3957176	1					
ANR	3957470	Identifier	ast		3957176	0					
ANR	3957471	ReturnStatement	return ;	7172:3:210310:210316	3957176	68	True				
ANR	3957472	Label	case ZEND_AST_EXIT :	7173:2:210320:210338	3957176	69	True				
ANR	3957473	Identifier	ZEND_AST_EXIT		3957176	0					
ANR	3957474	ExpressionStatement	"zend_compile_exit ( result , ast )"	7174:3:210343:210373	3957176	70	True				
ANR	3957475	CallExpression	"zend_compile_exit ( result , ast )"		3957176	0					
ANR	3957476	Callee	zend_compile_exit		3957176	0					
ANR	3957477	Identifier	zend_compile_exit		3957176	0					
ANR	3957478	ArgumentList	result		3957176	1					
ANR	3957479	Argument	result		3957176	0					
ANR	3957480	Identifier	result		3957176	0					
ANR	3957481	Argument	ast		3957176	1					
ANR	3957482	Identifier	ast		3957176	0					
ANR	3957483	ReturnStatement	return ;	7175:3:210378:210384	3957176	71	True				
ANR	3957484	Label	case ZEND_AST_YIELD :	7176:2:210388:210407	3957176	72	True				
ANR	3957485	Identifier	ZEND_AST_YIELD		3957176	0					
ANR	3957486	ExpressionStatement	"zend_compile_yield ( result , ast )"	7177:3:210412:210443	3957176	73	True				
ANR	3957487	CallExpression	"zend_compile_yield ( result , ast )"		3957176	0					
ANR	3957488	Callee	zend_compile_yield		3957176	0					
ANR	3957489	Identifier	zend_compile_yield		3957176	0					
ANR	3957490	ArgumentList	result		3957176	1					
ANR	3957491	Argument	result		3957176	0					
ANR	3957492	Identifier	result		3957176	0					
ANR	3957493	Argument	ast		3957176	1					
ANR	3957494	Identifier	ast		3957176	0					
ANR	3957495	ReturnStatement	return ;	7178:3:210448:210454	3957176	74	True				
ANR	3957496	Label	case ZEND_AST_YIELD_FROM :	7179:2:210458:210482	3957176	75	True				
ANR	3957497	Identifier	ZEND_AST_YIELD_FROM		3957176	0					
ANR	3957498	ExpressionStatement	"zend_compile_yield_from ( result , ast )"	7180:3:210487:210523	3957176	76	True				
ANR	3957499	CallExpression	"zend_compile_yield_from ( result , ast )"		3957176	0					
ANR	3957500	Callee	zend_compile_yield_from		3957176	0					
ANR	3957501	Identifier	zend_compile_yield_from		3957176	0					
ANR	3957502	ArgumentList	result		3957176	1					
ANR	3957503	Argument	result		3957176	0					
ANR	3957504	Identifier	result		3957176	0					
ANR	3957505	Argument	ast		3957176	1					
ANR	3957506	Identifier	ast		3957176	0					
ANR	3957507	ReturnStatement	return ;	7181:3:210528:210534	3957176	77	True				
ANR	3957508	Label	case ZEND_AST_INSTANCEOF :	7182:2:210538:210562	3957176	78	True				
ANR	3957509	Identifier	ZEND_AST_INSTANCEOF		3957176	0					
ANR	3957510	ExpressionStatement	"zend_compile_instanceof ( result , ast )"	7183:3:210567:210603	3957176	79	True				
ANR	3957511	CallExpression	"zend_compile_instanceof ( result , ast )"		3957176	0					
ANR	3957512	Callee	zend_compile_instanceof		3957176	0					
ANR	3957513	Identifier	zend_compile_instanceof		3957176	0					
ANR	3957514	ArgumentList	result		3957176	1					
ANR	3957515	Argument	result		3957176	0					
ANR	3957516	Identifier	result		3957176	0					
ANR	3957517	Argument	ast		3957176	1					
ANR	3957518	Identifier	ast		3957176	0					
ANR	3957519	ReturnStatement	return ;	7184:3:210608:210614	3957176	80	True				
ANR	3957520	Label	case ZEND_AST_INCLUDE_OR_EVAL :	7185:2:210618:210647	3957176	81	True				
ANR	3957521	Identifier	ZEND_AST_INCLUDE_OR_EVAL		3957176	0					
ANR	3957522	ExpressionStatement	"zend_compile_include_or_eval ( result , ast )"	7186:3:210652:210693	3957176	82	True				
ANR	3957523	CallExpression	"zend_compile_include_or_eval ( result , ast )"		3957176	0					
ANR	3957524	Callee	zend_compile_include_or_eval		3957176	0					
ANR	3957525	Identifier	zend_compile_include_or_eval		3957176	0					
ANR	3957526	ArgumentList	result		3957176	1					
ANR	3957527	Argument	result		3957176	0					
ANR	3957528	Identifier	result		3957176	0					
ANR	3957529	Argument	ast		3957176	1					
ANR	3957530	Identifier	ast		3957176	0					
ANR	3957531	ReturnStatement	return ;	7187:3:210698:210704	3957176	83	True				
ANR	3957532	Label	case ZEND_AST_ISSET :	7188:2:210708:210727	3957176	84	True				
ANR	3957533	Identifier	ZEND_AST_ISSET		3957176	0					
ANR	3957534	Label	case ZEND_AST_EMPTY :	7189:2:210731:210750	3957176	85	True				
ANR	3957535	Identifier	ZEND_AST_EMPTY		3957176	0					
ANR	3957536	ExpressionStatement	"zend_compile_isset_or_empty ( result , ast )"	7190:3:210755:210795	3957176	86	True				
ANR	3957537	CallExpression	"zend_compile_isset_or_empty ( result , ast )"		3957176	0					
ANR	3957538	Callee	zend_compile_isset_or_empty		3957176	0					
ANR	3957539	Identifier	zend_compile_isset_or_empty		3957176	0					
ANR	3957540	ArgumentList	result		3957176	1					
ANR	3957541	Argument	result		3957176	0					
ANR	3957542	Identifier	result		3957176	0					
ANR	3957543	Argument	ast		3957176	1					
ANR	3957544	Identifier	ast		3957176	0					
ANR	3957545	ReturnStatement	return ;	7191:3:210800:210806	3957176	87	True				
ANR	3957546	Label	case ZEND_AST_SILENCE :	7192:2:210810:210831	3957176	88	True				
ANR	3957547	Identifier	ZEND_AST_SILENCE		3957176	0					
ANR	3957548	ExpressionStatement	"zend_compile_silence ( result , ast )"	7193:3:210836:210869	3957176	89	True				
ANR	3957549	CallExpression	"zend_compile_silence ( result , ast )"		3957176	0					
ANR	3957550	Callee	zend_compile_silence		3957176	0					
ANR	3957551	Identifier	zend_compile_silence		3957176	0					
ANR	3957552	ArgumentList	result		3957176	1					
ANR	3957553	Argument	result		3957176	0					
ANR	3957554	Identifier	result		3957176	0					
ANR	3957555	Argument	ast		3957176	1					
ANR	3957556	Identifier	ast		3957176	0					
ANR	3957557	ReturnStatement	return ;	7194:3:210874:210880	3957176	90	True				
ANR	3957558	Label	case ZEND_AST_SHELL_EXEC :	7195:2:210884:210908	3957176	91	True				
ANR	3957559	Identifier	ZEND_AST_SHELL_EXEC		3957176	0					
ANR	3957560	ExpressionStatement	"zend_compile_shell_exec ( result , ast )"	7196:3:210913:210949	3957176	92	True				
ANR	3957561	CallExpression	"zend_compile_shell_exec ( result , ast )"		3957176	0					
ANR	3957562	Callee	zend_compile_shell_exec		3957176	0					
ANR	3957563	Identifier	zend_compile_shell_exec		3957176	0					
ANR	3957564	ArgumentList	result		3957176	1					
ANR	3957565	Argument	result		3957176	0					
ANR	3957566	Identifier	result		3957176	0					
ANR	3957567	Argument	ast		3957176	1					
ANR	3957568	Identifier	ast		3957176	0					
ANR	3957569	ReturnStatement	return ;	7197:3:210954:210960	3957176	93	True				
ANR	3957570	Label	case ZEND_AST_ARRAY :	7198:2:210964:210983	3957176	94	True				
ANR	3957571	Identifier	ZEND_AST_ARRAY		3957176	0					
ANR	3957572	ExpressionStatement	"zend_compile_array ( result , ast )"	7199:3:210988:211019	3957176	95	True				
ANR	3957573	CallExpression	"zend_compile_array ( result , ast )"		3957176	0					
ANR	3957574	Callee	zend_compile_array		3957176	0					
ANR	3957575	Identifier	zend_compile_array		3957176	0					
ANR	3957576	ArgumentList	result		3957176	1					
ANR	3957577	Argument	result		3957176	0					
ANR	3957578	Identifier	result		3957176	0					
ANR	3957579	Argument	ast		3957176	1					
ANR	3957580	Identifier	ast		3957176	0					
ANR	3957581	ReturnStatement	return ;	7200:3:211024:211030	3957176	96	True				
ANR	3957582	Label	case ZEND_AST_CONST :	7201:2:211034:211053	3957176	97	True				
ANR	3957583	Identifier	ZEND_AST_CONST		3957176	0					
ANR	3957584	ExpressionStatement	"zend_compile_const ( result , ast )"	7202:3:211058:211089	3957176	98	True				
ANR	3957585	CallExpression	"zend_compile_const ( result , ast )"		3957176	0					
ANR	3957586	Callee	zend_compile_const		3957176	0					
ANR	3957587	Identifier	zend_compile_const		3957176	0					
ANR	3957588	ArgumentList	result		3957176	1					
ANR	3957589	Argument	result		3957176	0					
ANR	3957590	Identifier	result		3957176	0					
ANR	3957591	Argument	ast		3957176	1					
ANR	3957592	Identifier	ast		3957176	0					
ANR	3957593	ReturnStatement	return ;	7203:3:211094:211100	3957176	99	True				
ANR	3957594	Label	case ZEND_AST_CLASS_CONST :	7204:2:211104:211129	3957176	100	True				
ANR	3957595	Identifier	ZEND_AST_CLASS_CONST		3957176	0					
ANR	3957596	ExpressionStatement	"zend_compile_class_const ( result , ast )"	7205:3:211134:211171	3957176	101	True				
ANR	3957597	CallExpression	"zend_compile_class_const ( result , ast )"		3957176	0					
ANR	3957598	Callee	zend_compile_class_const		3957176	0					
ANR	3957599	Identifier	zend_compile_class_const		3957176	0					
ANR	3957600	ArgumentList	result		3957176	1					
ANR	3957601	Argument	result		3957176	0					
ANR	3957602	Identifier	result		3957176	0					
ANR	3957603	Argument	ast		3957176	1					
ANR	3957604	Identifier	ast		3957176	0					
ANR	3957605	ReturnStatement	return ;	7206:3:211176:211182	3957176	102	True				
ANR	3957606	Label	case ZEND_AST_ENCAPS_LIST :	7207:2:211186:211211	3957176	103	True				
ANR	3957607	Identifier	ZEND_AST_ENCAPS_LIST		3957176	0					
ANR	3957608	ExpressionStatement	"zend_compile_encaps_list ( result , ast )"	7208:3:211216:211253	3957176	104	True				
ANR	3957609	CallExpression	"zend_compile_encaps_list ( result , ast )"		3957176	0					
ANR	3957610	Callee	zend_compile_encaps_list		3957176	0					
ANR	3957611	Identifier	zend_compile_encaps_list		3957176	0					
ANR	3957612	ArgumentList	result		3957176	1					
ANR	3957613	Argument	result		3957176	0					
ANR	3957614	Identifier	result		3957176	0					
ANR	3957615	Argument	ast		3957176	1					
ANR	3957616	Identifier	ast		3957176	0					
ANR	3957617	ReturnStatement	return ;	7209:3:211258:211264	3957176	105	True				
ANR	3957618	Label	case ZEND_AST_MAGIC_CONST :	7210:2:211268:211293	3957176	106	True				
ANR	3957619	Identifier	ZEND_AST_MAGIC_CONST		3957176	0					
ANR	3957620	ExpressionStatement	"zend_compile_magic_const ( result , ast )"	7211:3:211298:211335	3957176	107	True				
ANR	3957621	CallExpression	"zend_compile_magic_const ( result , ast )"		3957176	0					
ANR	3957622	Callee	zend_compile_magic_const		3957176	0					
ANR	3957623	Identifier	zend_compile_magic_const		3957176	0					
ANR	3957624	ArgumentList	result		3957176	1					
ANR	3957625	Argument	result		3957176	0					
ANR	3957626	Identifier	result		3957176	0					
ANR	3957627	Argument	ast		3957176	1					
ANR	3957628	Identifier	ast		3957176	0					
ANR	3957629	ReturnStatement	return ;	7212:3:211340:211346	3957176	108	True				
ANR	3957630	Label	case ZEND_AST_CLOSURE :	7213:2:211350:211371	3957176	109	True				
ANR	3957631	Identifier	ZEND_AST_CLOSURE		3957176	0					
ANR	3957632	ExpressionStatement	"zend_compile_func_decl ( result , ast )"	7214:3:211376:211411	3957176	110	True				
ANR	3957633	CallExpression	"zend_compile_func_decl ( result , ast )"		3957176	0					
ANR	3957634	Callee	zend_compile_func_decl		3957176	0					
ANR	3957635	Identifier	zend_compile_func_decl		3957176	0					
ANR	3957636	ArgumentList	result		3957176	1					
ANR	3957637	Argument	result		3957176	0					
ANR	3957638	Identifier	result		3957176	0					
ANR	3957639	Argument	ast		3957176	1					
ANR	3957640	Identifier	ast		3957176	0					
ANR	3957641	ReturnStatement	return ;	7215:3:211416:211422	3957176	111	True				
ANR	3957642	Label	default :	7216:2:211426:211433	3957176	112	True				
ANR	3957643	Identifier	default		3957176	0					
ANR	3957644	ExpressionStatement	ZEND_ASSERT ( 0 )	7217:3:211438:211472	3957176	113	True				
ANR	3957645	CallExpression	ZEND_ASSERT ( 0 )		3957176	0					
ANR	3957646	Callee	ZEND_ASSERT		3957176	0					
ANR	3957647	Identifier	ZEND_ASSERT		3957176	0					
ANR	3957648	ArgumentList	0		3957176	1					
ANR	3957649	Argument	0		3957176	0					
ANR	3957650	PrimaryExpression	0		3957176	0					
ANR	3957651	ReturnType	void		3957176	1					
ANR	3957652	Identifier	zend_compile_expr		3957176	2					
ANR	3957653	ParameterList	"znode * result , zend_ast * ast"		3957176	3					
ANR	3957654	Parameter	znode * result	7098:23:208406:208418	3957176	0	True				
ANR	3957655	ParameterType	znode *		3957176	0					
ANR	3957656	Identifier	result		3957176	1					
ANR	3957657	Parameter	zend_ast * ast	7098:38:208421:208433	3957176	1	True				
ANR	3957658	ParameterType	zend_ast *		3957176	0					
ANR	3957659	Identifier	ast		3957176	1					
ANR	3957660	CFGEntryNode	ENTRY		3957176		True				
ANR	3957661	CFGExitNode	EXIT		3957176		True				
ANR	3957662	Symbol	ast -> kind		3957176						
ANR	3957663	Symbol	IS_CONST		3957176						
ANR	3957664	Symbol	ast		3957176						
ANR	3957665	Symbol	CG		3957176						
ANR	3957666	Symbol	& result -> u		3957176						
ANR	3957667	Symbol	zend_ast_get_lineno		3957176						
ANR	3957668	Symbol	result -> op_type		3957176						
ANR	3957669	Symbol	* zend_ast_get_znode		3957176						
ANR	3957670	Symbol	result -> u		3957176						
ANR	3957671	Symbol	result		3957176						
ANR	3957672	Symbol	zend_ast_get_znode		3957176						
ANR	3957673	Symbol	* ast		3957176						
ANR	3957674	Symbol	* result		3957176						
ANR	3957675	Symbol	zend_lineno		3957176						
ANR	3957676	Symbol	& result -> u . constant		3957176						
ANR	3957677	Symbol	zend_ast_get_zval		3957176						
ANR	3957678	Symbol	* zend_ast_get_znode ( ast )		3957176						
ANR	3957679	Symbol	BP_VAR_R		3957176						
ANR	3957680	Function	zend_compile_var	7222:0:211490:212500							
ANR	3957681	FunctionDef	"zend_compile_var (znode * result , zend_ast * ast , uint32_t type)"		3957680	0					
ANR	3957682	CompoundStatement		7223:0:211567:212500	3957680	0					
ANR	3957683	SwitchStatement	switch ( ast -> kind )		3957680	0					
ANR	3957684	Condition	ast -> kind	7224:9:211578:211586	3957680	0	True				
ANR	3957685	PtrMemberAccess	ast -> kind		3957680	0					
ANR	3957686	Identifier	ast		3957680	0					
ANR	3957687	Identifier	kind		3957680	1					
ANR	3957688	CompoundStatement		2:20:21:21	3957680	1					
ANR	3957689	Label	case ZEND_AST_VAR :	7225:2:211593:211610	3957680	0	True				
ANR	3957690	Identifier	ZEND_AST_VAR		3957680	0					
ANR	3957691	ExpressionStatement	"zend_compile_simple_var ( result , ast , type , 0 )"	7226:3:211615:211660	3957680	1	True				
ANR	3957692	CallExpression	"zend_compile_simple_var ( result , ast , type , 0 )"		3957680	0					
ANR	3957693	Callee	zend_compile_simple_var		3957680	0					
ANR	3957694	Identifier	zend_compile_simple_var		3957680	0					
ANR	3957695	ArgumentList	result		3957680	1					
ANR	3957696	Argument	result		3957680	0					
ANR	3957697	Identifier	result		3957680	0					
ANR	3957698	Argument	ast		3957680	1					
ANR	3957699	Identifier	ast		3957680	0					
ANR	3957700	Argument	type		3957680	2					
ANR	3957701	Identifier	type		3957680	0					
ANR	3957702	Argument	0		3957680	3					
ANR	3957703	PrimaryExpression	0		3957680	0					
ANR	3957704	ReturnStatement	return ;	7227:3:211665:211671	3957680	2	True				
ANR	3957705	Label	case ZEND_AST_DIM :	7228:2:211675:211692	3957680	3	True				
ANR	3957706	Identifier	ZEND_AST_DIM		3957680	0					
ANR	3957707	ExpressionStatement	"zend_compile_dim ( result , ast , type )"	7229:3:211697:211732	3957680	4	True				
ANR	3957708	CallExpression	"zend_compile_dim ( result , ast , type )"		3957680	0					
ANR	3957709	Callee	zend_compile_dim		3957680	0					
ANR	3957710	Identifier	zend_compile_dim		3957680	0					
ANR	3957711	ArgumentList	result		3957680	1					
ANR	3957712	Argument	result		3957680	0					
ANR	3957713	Identifier	result		3957680	0					
ANR	3957714	Argument	ast		3957680	1					
ANR	3957715	Identifier	ast		3957680	0					
ANR	3957716	Argument	type		3957680	2					
ANR	3957717	Identifier	type		3957680	0					
ANR	3957718	ReturnStatement	return ;	7230:3:211737:211743	3957680	5	True				
ANR	3957719	Label	case ZEND_AST_PROP :	7231:2:211747:211765	3957680	6	True				
ANR	3957720	Identifier	ZEND_AST_PROP		3957680	0					
ANR	3957721	ExpressionStatement	"zend_compile_prop ( result , ast , type )"	7232:3:211770:211806	3957680	7	True				
ANR	3957722	CallExpression	"zend_compile_prop ( result , ast , type )"		3957680	0					
ANR	3957723	Callee	zend_compile_prop		3957680	0					
ANR	3957724	Identifier	zend_compile_prop		3957680	0					
ANR	3957725	ArgumentList	result		3957680	1					
ANR	3957726	Argument	result		3957680	0					
ANR	3957727	Identifier	result		3957680	0					
ANR	3957728	Argument	ast		3957680	1					
ANR	3957729	Identifier	ast		3957680	0					
ANR	3957730	Argument	type		3957680	2					
ANR	3957731	Identifier	type		3957680	0					
ANR	3957732	ReturnStatement	return ;	7233:3:211811:211817	3957680	8	True				
ANR	3957733	Label	case ZEND_AST_STATIC_PROP :	7234:2:211821:211846	3957680	9	True				
ANR	3957734	Identifier	ZEND_AST_STATIC_PROP		3957680	0					
ANR	3957735	ExpressionStatement	"zend_compile_static_prop ( result , ast , type , 0 )"	7235:3:211851:211897	3957680	10	True				
ANR	3957736	CallExpression	"zend_compile_static_prop ( result , ast , type , 0 )"		3957680	0					
ANR	3957737	Callee	zend_compile_static_prop		3957680	0					
ANR	3957738	Identifier	zend_compile_static_prop		3957680	0					
ANR	3957739	ArgumentList	result		3957680	1					
ANR	3957740	Argument	result		3957680	0					
ANR	3957741	Identifier	result		3957680	0					
ANR	3957742	Argument	ast		3957680	1					
ANR	3957743	Identifier	ast		3957680	0					
ANR	3957744	Argument	type		3957680	2					
ANR	3957745	Identifier	type		3957680	0					
ANR	3957746	Argument	0		3957680	3					
ANR	3957747	PrimaryExpression	0		3957680	0					
ANR	3957748	ReturnStatement	return ;	7236:3:211902:211908	3957680	11	True				
ANR	3957749	Label	case ZEND_AST_CALL :	7237:2:211912:211930	3957680	12	True				
ANR	3957750	Identifier	ZEND_AST_CALL		3957680	0					
ANR	3957751	ExpressionStatement	"zend_compile_call ( result , ast , type )"	7238:3:211935:211971	3957680	13	True				
ANR	3957752	CallExpression	"zend_compile_call ( result , ast , type )"		3957680	0					
ANR	3957753	Callee	zend_compile_call		3957680	0					
ANR	3957754	Identifier	zend_compile_call		3957680	0					
ANR	3957755	ArgumentList	result		3957680	1					
ANR	3957756	Argument	result		3957680	0					
ANR	3957757	Identifier	result		3957680	0					
ANR	3957758	Argument	ast		3957680	1					
ANR	3957759	Identifier	ast		3957680	0					
ANR	3957760	Argument	type		3957680	2					
ANR	3957761	Identifier	type		3957680	0					
ANR	3957762	ReturnStatement	return ;	7239:3:211976:211982	3957680	14	True				
ANR	3957763	Label	case ZEND_AST_METHOD_CALL :	7240:2:211986:212011	3957680	15	True				
ANR	3957764	Identifier	ZEND_AST_METHOD_CALL		3957680	0					
ANR	3957765	ExpressionStatement	"zend_compile_method_call ( result , ast , type )"	7241:3:212016:212059	3957680	16	True				
ANR	3957766	CallExpression	"zend_compile_method_call ( result , ast , type )"		3957680	0					
ANR	3957767	Callee	zend_compile_method_call		3957680	0					
ANR	3957768	Identifier	zend_compile_method_call		3957680	0					
ANR	3957769	ArgumentList	result		3957680	1					
ANR	3957770	Argument	result		3957680	0					
ANR	3957771	Identifier	result		3957680	0					
ANR	3957772	Argument	ast		3957680	1					
ANR	3957773	Identifier	ast		3957680	0					
ANR	3957774	Argument	type		3957680	2					
ANR	3957775	Identifier	type		3957680	0					
ANR	3957776	ReturnStatement	return ;	7242:3:212064:212070	3957680	17	True				
ANR	3957777	Label	case ZEND_AST_STATIC_CALL :	7243:2:212074:212099	3957680	18	True				
ANR	3957778	Identifier	ZEND_AST_STATIC_CALL		3957680	0					
ANR	3957779	ExpressionStatement	"zend_compile_static_call ( result , ast , type )"	7244:3:212104:212147	3957680	19	True				
ANR	3957780	CallExpression	"zend_compile_static_call ( result , ast , type )"		3957680	0					
ANR	3957781	Callee	zend_compile_static_call		3957680	0					
ANR	3957782	Identifier	zend_compile_static_call		3957680	0					
ANR	3957783	ArgumentList	result		3957680	1					
ANR	3957784	Argument	result		3957680	0					
ANR	3957785	Identifier	result		3957680	0					
ANR	3957786	Argument	ast		3957680	1					
ANR	3957787	Identifier	ast		3957680	0					
ANR	3957788	Argument	type		3957680	2					
ANR	3957789	Identifier	type		3957680	0					
ANR	3957790	ReturnStatement	return ;	7245:3:212152:212158	3957680	20	True				
ANR	3957791	Label	case ZEND_AST_ZNODE :	7246:2:212162:212181	3957680	21	True				
ANR	3957792	Identifier	ZEND_AST_ZNODE		3957680	0					
ANR	3957793	ExpressionStatement	* result = * zend_ast_get_znode ( ast )	7247:3:212186:212220	3957680	22	True				
ANR	3957794	AssignmentExpression	* result = * zend_ast_get_znode ( ast )		3957680	0		=			
ANR	3957795	UnaryOperationExpression	* result		3957680	0					
ANR	3957796	UnaryOperator	*		3957680	0					
ANR	3957797	Identifier	result		3957680	1					
ANR	3957798	UnaryOperationExpression	* zend_ast_get_znode ( ast )		3957680	1					
ANR	3957799	UnaryOperator	*		3957680	0					
ANR	3957800	CallExpression	zend_ast_get_znode ( ast )		3957680	1					
ANR	3957801	Callee	zend_ast_get_znode		3957680	0					
ANR	3957802	Identifier	zend_ast_get_znode		3957680	0					
ANR	3957803	ArgumentList	ast		3957680	1					
ANR	3957804	Argument	ast		3957680	0					
ANR	3957805	Identifier	ast		3957680	0					
ANR	3957806	ReturnStatement	return ;	7248:3:212225:212231	3957680	23	True				
ANR	3957807	Label	default :	7249:2:212235:212242	3957680	24	True				
ANR	3957808	Identifier	default		3957680	0					
ANR	3957809	IfStatement	if ( type == BP_VAR_W || type == BP_VAR_REF || type == BP_VAR_RW || type == BP_VAR_UNSET )		3957680	25					
ANR	3957810	Condition	type == BP_VAR_W || type == BP_VAR_REF || type == BP_VAR_RW || type == BP_VAR_UNSET	7250:7:212251:212337	3957680	0	True				
ANR	3957811	OrExpression	type == BP_VAR_W || type == BP_VAR_REF || type == BP_VAR_RW || type == BP_VAR_UNSET		3957680	0		||			
ANR	3957812	EqualityExpression	type == BP_VAR_W		3957680	0		==			
ANR	3957813	Identifier	type		3957680	0					
ANR	3957814	Identifier	BP_VAR_W		3957680	1					
ANR	3957815	OrExpression	type == BP_VAR_REF || type == BP_VAR_RW || type == BP_VAR_UNSET		3957680	1		||			
ANR	3957816	EqualityExpression	type == BP_VAR_REF		3957680	0		==			
ANR	3957817	Identifier	type		3957680	0					
ANR	3957818	Identifier	BP_VAR_REF		3957680	1					
ANR	3957819	OrExpression	type == BP_VAR_RW || type == BP_VAR_UNSET		3957680	1		||			
ANR	3957820	EqualityExpression	type == BP_VAR_RW		3957680	0		==			
ANR	3957821	Identifier	type		3957680	0					
ANR	3957822	Identifier	BP_VAR_RW		3957680	1					
ANR	3957823	EqualityExpression	type == BP_VAR_UNSET		3957680	1		==			
ANR	3957824	Identifier	type		3957680	0					
ANR	3957825	Identifier	BP_VAR_UNSET		3957680	1					
ANR	3957826	CompoundStatement		30:5:776:776	3957680	1					
ANR	3957827	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use temporary expression in write context"" )"	7253:4:212350:212443	3957680	0	True				
ANR	3957828	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use temporary expression in write context"" )"		3957680	0					
ANR	3957829	Callee	zend_error_noreturn		3957680	0					
ANR	3957830	Identifier	zend_error_noreturn		3957680	0					
ANR	3957831	ArgumentList	E_COMPILE_ERROR		3957680	1					
ANR	3957832	Argument	E_COMPILE_ERROR		3957680	0					
ANR	3957833	Identifier	E_COMPILE_ERROR		3957680	0					
ANR	3957834	Argument	"""Cannot use temporary expression in write context"""		3957680	1					
ANR	3957835	PrimaryExpression	"""Cannot use temporary expression in write context"""		3957680	0					
ANR	3957836	ExpressionStatement	"zend_compile_expr ( result , ast )"	7257:3:212454:212484	3957680	26	True				
ANR	3957837	CallExpression	"zend_compile_expr ( result , ast )"		3957680	0					
ANR	3957838	Callee	zend_compile_expr		3957680	0					
ANR	3957839	Identifier	zend_compile_expr		3957680	0					
ANR	3957840	ArgumentList	result		3957680	1					
ANR	3957841	Argument	result		3957680	0					
ANR	3957842	Identifier	result		3957680	0					
ANR	3957843	Argument	ast		3957680	1					
ANR	3957844	Identifier	ast		3957680	0					
ANR	3957845	ReturnStatement	return ;	7258:3:212489:212495	3957680	27	True				
ANR	3957846	ReturnType	void		3957680	1					
ANR	3957847	Identifier	zend_compile_var		3957680	2					
ANR	3957848	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3957680	3					
ANR	3957849	Parameter	znode * result	7222:22:211512:211524	3957680	0	True				
ANR	3957850	ParameterType	znode *		3957680	0					
ANR	3957851	Identifier	result		3957680	1					
ANR	3957852	Parameter	zend_ast * ast	7222:37:211527:211539	3957680	1	True				
ANR	3957853	ParameterType	zend_ast *		3957680	0					
ANR	3957854	Identifier	ast		3957680	1					
ANR	3957855	Parameter	uint32_t type	7222:52:211542:211554	3957680	2	True				
ANR	3957856	ParameterType	uint32_t		3957680	0					
ANR	3957857	Identifier	type		3957680	1					
ANR	3957858	CFGEntryNode	ENTRY		3957680		True				
ANR	3957859	CFGExitNode	EXIT		3957680		True				
ANR	3957860	Symbol	BP_VAR_RW		3957680						
ANR	3957861	Symbol	ast -> kind		3957680						
ANR	3957862	Symbol	ast		3957680						
ANR	3957863	Symbol	E_COMPILE_ERROR		3957680						
ANR	3957864	Symbol	type		3957680						
ANR	3957865	Symbol	* zend_ast_get_znode		3957680						
ANR	3957866	Symbol	result		3957680						
ANR	3957867	Symbol	zend_ast_get_znode		3957680						
ANR	3957868	Symbol	* ast		3957680						
ANR	3957869	Symbol	* result		3957680						
ANR	3957870	Symbol	BP_VAR_W		3957680						
ANR	3957871	Symbol	* zend_ast_get_znode ( ast )		3957680						
ANR	3957872	Symbol	BP_VAR_UNSET		3957680						
ANR	3957873	Symbol	BP_VAR_REF		3957680						
ANR	3957874	Function	zend_delayed_compile_var	7263:0:212513:213148							
ANR	3957875	FunctionDef	"zend_delayed_compile_var (znode * result , zend_ast * ast , uint32_t type)"		3957874	0					
ANR	3957876	CompoundStatement		7264:0:212598:213148	3957874	0					
ANR	3957877	IdentifierDeclStatement	zend_op * opline ;	7265:1:212601:212616	3957874	0	True				
ANR	3957878	IdentifierDecl	* opline		3957874	0					
ANR	3957879	IdentifierDeclType	zend_op *		3957874	0					
ANR	3957880	Identifier	opline		3957874	1					
ANR	3957881	SwitchStatement	switch ( ast -> kind )		3957874	1					
ANR	3957882	Condition	ast -> kind	7266:9:212627:212635	3957874	0	True				
ANR	3957883	PtrMemberAccess	ast -> kind		3957874	0					
ANR	3957884	Identifier	ast		3957874	0					
ANR	3957885	Identifier	kind		3957874	1					
ANR	3957886	CompoundStatement		3:20:39:39	3957874	1					
ANR	3957887	Label	case ZEND_AST_VAR :	7267:2:212642:212659	3957874	0	True				
ANR	3957888	Identifier	ZEND_AST_VAR		3957874	0					
ANR	3957889	ExpressionStatement	"zend_compile_simple_var ( result , ast , type , 1 )"	7268:3:212664:212709	3957874	1	True				
ANR	3957890	CallExpression	"zend_compile_simple_var ( result , ast , type , 1 )"		3957874	0					
ANR	3957891	Callee	zend_compile_simple_var		3957874	0					
ANR	3957892	Identifier	zend_compile_simple_var		3957874	0					
ANR	3957893	ArgumentList	result		3957874	1					
ANR	3957894	Argument	result		3957874	0					
ANR	3957895	Identifier	result		3957874	0					
ANR	3957896	Argument	ast		3957874	1					
ANR	3957897	Identifier	ast		3957874	0					
ANR	3957898	Argument	type		3957874	2					
ANR	3957899	Identifier	type		3957874	0					
ANR	3957900	Argument	1		3957874	3					
ANR	3957901	PrimaryExpression	1		3957874	0					
ANR	3957902	ReturnStatement	return ;	7269:3:212714:212720	3957874	2	True				
ANR	3957903	Label	case ZEND_AST_DIM :	7270:2:212724:212741	3957874	3	True				
ANR	3957904	Identifier	ZEND_AST_DIM		3957874	0					
ANR	3957905	ExpressionStatement	"opline = zend_delayed_compile_dim ( result , ast , type )"	7271:3:212746:212798	3957874	4	True				
ANR	3957906	AssignmentExpression	"opline = zend_delayed_compile_dim ( result , ast , type )"		3957874	0		=			
ANR	3957907	Identifier	opline		3957874	0					
ANR	3957908	CallExpression	"zend_delayed_compile_dim ( result , ast , type )"		3957874	1					
ANR	3957909	Callee	zend_delayed_compile_dim		3957874	0					
ANR	3957910	Identifier	zend_delayed_compile_dim		3957874	0					
ANR	3957911	ArgumentList	result		3957874	1					
ANR	3957912	Argument	result		3957874	0					
ANR	3957913	Identifier	result		3957874	0					
ANR	3957914	Argument	ast		3957874	1					
ANR	3957915	Identifier	ast		3957874	0					
ANR	3957916	Argument	type		3957874	2					
ANR	3957917	Identifier	type		3957874	0					
ANR	3957918	ExpressionStatement	"zend_adjust_for_fetch_type ( opline , type )"	7272:3:212803:212843	3957874	5	True				
ANR	3957919	CallExpression	"zend_adjust_for_fetch_type ( opline , type )"		3957874	0					
ANR	3957920	Callee	zend_adjust_for_fetch_type		3957874	0					
ANR	3957921	Identifier	zend_adjust_for_fetch_type		3957874	0					
ANR	3957922	ArgumentList	opline		3957874	1					
ANR	3957923	Argument	opline		3957874	0					
ANR	3957924	Identifier	opline		3957874	0					
ANR	3957925	Argument	type		3957874	1					
ANR	3957926	Identifier	type		3957874	0					
ANR	3957927	ReturnStatement	return ;	7273:3:212848:212854	3957874	6	True				
ANR	3957928	Label	case ZEND_AST_PROP :	7274:2:212858:212876	3957874	7	True				
ANR	3957929	Identifier	ZEND_AST_PROP		3957874	0					
ANR	3957930	ExpressionStatement	"opline = zend_delayed_compile_prop ( result , ast , type )"	7275:3:212881:212934	3957874	8	True				
ANR	3957931	AssignmentExpression	"opline = zend_delayed_compile_prop ( result , ast , type )"		3957874	0		=			
ANR	3957932	Identifier	opline		3957874	0					
ANR	3957933	CallExpression	"zend_delayed_compile_prop ( result , ast , type )"		3957874	1					
ANR	3957934	Callee	zend_delayed_compile_prop		3957874	0					
ANR	3957935	Identifier	zend_delayed_compile_prop		3957874	0					
ANR	3957936	ArgumentList	result		3957874	1					
ANR	3957937	Argument	result		3957874	0					
ANR	3957938	Identifier	result		3957874	0					
ANR	3957939	Argument	ast		3957874	1					
ANR	3957940	Identifier	ast		3957874	0					
ANR	3957941	Argument	type		3957874	2					
ANR	3957942	Identifier	type		3957874	0					
ANR	3957943	ExpressionStatement	"zend_adjust_for_fetch_type ( opline , type )"	7276:3:212939:212979	3957874	9	True				
ANR	3957944	CallExpression	"zend_adjust_for_fetch_type ( opline , type )"		3957874	0					
ANR	3957945	Callee	zend_adjust_for_fetch_type		3957874	0					
ANR	3957946	Identifier	zend_adjust_for_fetch_type		3957874	0					
ANR	3957947	ArgumentList	opline		3957874	1					
ANR	3957948	Argument	opline		3957874	0					
ANR	3957949	Identifier	opline		3957874	0					
ANR	3957950	Argument	type		3957874	1					
ANR	3957951	Identifier	type		3957874	0					
ANR	3957952	ReturnStatement	return ;	7277:3:212984:212990	3957874	10	True				
ANR	3957953	Label	case ZEND_AST_STATIC_PROP :	7278:2:212994:213019	3957874	11	True				
ANR	3957954	Identifier	ZEND_AST_STATIC_PROP		3957874	0					
ANR	3957955	ExpressionStatement	"zend_compile_static_prop ( result , ast , type , 1 )"	7279:3:213024:213070	3957874	12	True				
ANR	3957956	CallExpression	"zend_compile_static_prop ( result , ast , type , 1 )"		3957874	0					
ANR	3957957	Callee	zend_compile_static_prop		3957874	0					
ANR	3957958	Identifier	zend_compile_static_prop		3957874	0					
ANR	3957959	ArgumentList	result		3957874	1					
ANR	3957960	Argument	result		3957874	0					
ANR	3957961	Identifier	result		3957874	0					
ANR	3957962	Argument	ast		3957874	1					
ANR	3957963	Identifier	ast		3957874	0					
ANR	3957964	Argument	type		3957874	2					
ANR	3957965	Identifier	type		3957874	0					
ANR	3957966	Argument	1		3957874	3					
ANR	3957967	PrimaryExpression	1		3957874	0					
ANR	3957968	ReturnStatement	return ;	7280:3:213075:213081	3957874	13	True				
ANR	3957969	Label	default :	7281:2:213085:213092	3957874	14	True				
ANR	3957970	Identifier	default		3957874	0					
ANR	3957971	ExpressionStatement	"zend_compile_var ( result , ast , type )"	7282:3:213097:213132	3957874	15	True				
ANR	3957972	CallExpression	"zend_compile_var ( result , ast , type )"		3957874	0					
ANR	3957973	Callee	zend_compile_var		3957874	0					
ANR	3957974	Identifier	zend_compile_var		3957874	0					
ANR	3957975	ArgumentList	result		3957874	1					
ANR	3957976	Argument	result		3957874	0					
ANR	3957977	Identifier	result		3957874	0					
ANR	3957978	Argument	ast		3957874	1					
ANR	3957979	Identifier	ast		3957874	0					
ANR	3957980	Argument	type		3957874	2					
ANR	3957981	Identifier	type		3957874	0					
ANR	3957982	ReturnStatement	return ;	7283:3:213137:213143	3957874	16	True				
ANR	3957983	ReturnType	void		3957874	1					
ANR	3957984	Identifier	zend_delayed_compile_var		3957874	2					
ANR	3957985	ParameterList	"znode * result , zend_ast * ast , uint32_t type"		3957874	3					
ANR	3957986	Parameter	znode * result	7263:30:212543:212555	3957874	0	True				
ANR	3957987	ParameterType	znode *		3957874	0					
ANR	3957988	Identifier	result		3957874	1					
ANR	3957989	Parameter	zend_ast * ast	7263:45:212558:212570	3957874	1	True				
ANR	3957990	ParameterType	zend_ast *		3957874	0					
ANR	3957991	Identifier	ast		3957874	1					
ANR	3957992	Parameter	uint32_t type	7263:60:212573:212585	3957874	2	True				
ANR	3957993	ParameterType	uint32_t		3957874	0					
ANR	3957994	Identifier	type		3957874	1					
ANR	3957995	CFGEntryNode	ENTRY		3957874		True				
ANR	3957996	CFGExitNode	EXIT		3957874		True				
ANR	3957997	Symbol	result		3957874						
ANR	3957998	Symbol	ast -> kind		3957874						
ANR	3957999	Symbol	ast		3957874						
ANR	3958000	Symbol	opline		3957874						
ANR	3958001	Symbol	* ast		3957874						
ANR	3958002	Symbol	zend_delayed_compile_dim		3957874						
ANR	3958003	Symbol	type		3957874						
ANR	3958004	Symbol	zend_delayed_compile_prop		3957874						
ANR	3958005	Function	zend_eval_const_expr	7288:0:213161:219531							
ANR	3958006	FunctionDef	zend_eval_const_expr (zend_ast * * ast_ptr)		3958005	0					
ANR	3958007	CompoundStatement		7289:0:213217:219531	3958005	0					
ANR	3958008	IdentifierDeclStatement	zend_ast * ast = * ast_ptr ;	7290:1:213220:213244	3958005	0	True				
ANR	3958009	IdentifierDecl	* ast = * ast_ptr		3958005	0					
ANR	3958010	IdentifierDeclType	zend_ast *		3958005	0					
ANR	3958011	Identifier	ast		3958005	1					
ANR	3958012	AssignmentExpression	* ast = * ast_ptr		3958005	2		=			
ANR	3958013	Identifier	ast		3958005	0					
ANR	3958014	UnaryOperationExpression	* ast_ptr		3958005	1					
ANR	3958015	UnaryOperator	*		3958005	0					
ANR	3958016	Identifier	ast_ptr		3958005	1					
ANR	3958017	IdentifierDeclStatement	zval result ;	7291:1:213247:213258	3958005	1	True				
ANR	3958018	IdentifierDecl	result		3958005	0					
ANR	3958019	IdentifierDeclType	zval		3958005	0					
ANR	3958020	Identifier	result		3958005	1					
ANR	3958021	IfStatement	if ( ! ast )		3958005	2					
ANR	3958022	Condition	! ast	7293:5:213266:213269	3958005	0	True				
ANR	3958023	UnaryOperationExpression	! ast		3958005	0					
ANR	3958024	UnaryOperator	!		3958005	0					
ANR	3958025	Identifier	ast		3958005	1					
ANR	3958026	CompoundStatement		5:11:54:54	3958005	1					
ANR	3958027	ReturnStatement	return ;	7294:2:213276:213282	3958005	0	True				
ANR	3958028	SwitchStatement	switch ( ast -> kind )		3958005	3					
ANR	3958029	Condition	ast -> kind	7297:9:213297:213305	3958005	0	True				
ANR	3958030	PtrMemberAccess	ast -> kind		3958005	0					
ANR	3958031	Identifier	ast		3958005	0					
ANR	3958032	Identifier	kind		3958005	1					
ANR	3958033	CompoundStatement		9:20:90:90	3958005	1					
ANR	3958034	Label	case ZEND_AST_BINARY_OP :	7298:2:213312:213335	3958005	0	True				
ANR	3958035	Identifier	ZEND_AST_BINARY_OP		3958005	0					
ANR	3958036	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 0 ] )	7299:3:213340:213376	3958005	1	True				
ANR	3958037	CallExpression	zend_eval_const_expr ( & ast -> child [ 0 ] )		3958005	0					
ANR	3958038	Callee	zend_eval_const_expr		3958005	0					
ANR	3958039	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958040	ArgumentList	& ast -> child [ 0 ]		3958005	1					
ANR	3958041	Argument	& ast -> child [ 0 ]		3958005	0					
ANR	3958042	UnaryOperationExpression	& ast -> child [ 0 ]		3958005	0					
ANR	3958043	UnaryOperator	&		3958005	0					
ANR	3958044	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3958045	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958046	Identifier	ast		3958005	0					
ANR	3958047	Identifier	child		3958005	1					
ANR	3958048	PrimaryExpression	0		3958005	1					
ANR	3958049	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 1 ] )	7300:3:213381:213417	3958005	2	True				
ANR	3958050	CallExpression	zend_eval_const_expr ( & ast -> child [ 1 ] )		3958005	0					
ANR	3958051	Callee	zend_eval_const_expr		3958005	0					
ANR	3958052	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958053	ArgumentList	& ast -> child [ 1 ]		3958005	1					
ANR	3958054	Argument	& ast -> child [ 1 ]		3958005	0					
ANR	3958055	UnaryOperationExpression	& ast -> child [ 1 ]		3958005	0					
ANR	3958056	UnaryOperator	&		3958005	0					
ANR	3958057	ArrayIndexing	ast -> child [ 1 ]		3958005	1					
ANR	3958058	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958059	Identifier	ast		3958005	0					
ANR	3958060	Identifier	child		3958005	1					
ANR	3958061	PrimaryExpression	1		3958005	1					
ANR	3958062	IfStatement	if ( ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL )		3958005	3					
ANR	3958063	Condition	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL	7301:7:213426:213501	3958005	0	True				
ANR	3958064	OrExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	0		||			
ANR	3958065	EqualityExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3958066	PtrMemberAccess	ast -> child [ 0 ] -> kind		3958005	0					
ANR	3958067	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958068	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958069	Identifier	ast		3958005	0					
ANR	3958070	Identifier	child		3958005	1					
ANR	3958071	PrimaryExpression	0		3958005	1					
ANR	3958072	Identifier	kind		3958005	1					
ANR	3958073	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958074	EqualityExpression	ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	1		!=			
ANR	3958075	PtrMemberAccess	ast -> child [ 1 ] -> kind		3958005	0					
ANR	3958076	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958077	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958078	Identifier	ast		3958005	0					
ANR	3958079	Identifier	child		3958005	1					
ANR	3958080	PrimaryExpression	1		3958005	1					
ANR	3958081	Identifier	kind		3958005	1					
ANR	3958082	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958083	CompoundStatement		13:85:286:286	3958005	1					
ANR	3958084	ReturnStatement	return ;	7302:4:213510:213516	3958005	0	True				
ANR	3958085	IfStatement	"if ( ! zend_try_ct_eval_binary_op ( & result , ast -> attr , zend_ast_get_zval ( ast -> child [ 0 ] ) , zend_ast_get_zval ( ast -> child [ 1 ] ) ) )"		3958005	4					
ANR	3958086	Condition	"! zend_try_ct_eval_binary_op ( & result , ast -> attr , zend_ast_get_zval ( ast -> child [ 0 ] ) , zend_ast_get_zval ( ast -> child [ 1 ] ) )"	7305:7:213531:213650	3958005	0	True				
ANR	3958087	UnaryOperationExpression	"! zend_try_ct_eval_binary_op ( & result , ast -> attr , zend_ast_get_zval ( ast -> child [ 0 ] ) , zend_ast_get_zval ( ast -> child [ 1 ] ) )"		3958005	0					
ANR	3958088	UnaryOperator	!		3958005	0					
ANR	3958089	CallExpression	"zend_try_ct_eval_binary_op ( & result , ast -> attr , zend_ast_get_zval ( ast -> child [ 0 ] ) , zend_ast_get_zval ( ast -> child [ 1 ] ) )"		3958005	1					
ANR	3958090	Callee	zend_try_ct_eval_binary_op		3958005	0					
ANR	3958091	Identifier	zend_try_ct_eval_binary_op		3958005	0					
ANR	3958092	ArgumentList	& result		3958005	1					
ANR	3958093	Argument	& result		3958005	0					
ANR	3958094	UnaryOperationExpression	& result		3958005	0					
ANR	3958095	UnaryOperator	&		3958005	0					
ANR	3958096	Identifier	result		3958005	1					
ANR	3958097	Argument	ast -> attr		3958005	1					
ANR	3958098	PtrMemberAccess	ast -> attr		3958005	0					
ANR	3958099	Identifier	ast		3958005	0					
ANR	3958100	Identifier	attr		3958005	1					
ANR	3958101	Argument	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	2					
ANR	3958102	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958103	Callee	zend_ast_get_zval		3958005	0					
ANR	3958104	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958105	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958106	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958107	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958108	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958109	Identifier	ast		3958005	0					
ANR	3958110	Identifier	child		3958005	1					
ANR	3958111	PrimaryExpression	0		3958005	1					
ANR	3958112	Argument	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	3					
ANR	3958113	CallExpression	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	0					
ANR	3958114	Callee	zend_ast_get_zval		3958005	0					
ANR	3958115	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958116	ArgumentList	ast -> child [ 1 ]		3958005	1					
ANR	3958117	Argument	ast -> child [ 1 ]		3958005	0					
ANR	3958118	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958119	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958120	Identifier	ast		3958005	0					
ANR	3958121	Identifier	child		3958005	1					
ANR	3958122	PrimaryExpression	1		3958005	1					
ANR	3958123	CompoundStatement		19:5:439:439	3958005	1					
ANR	3958124	ReturnStatement	return ;	7308:4:213663:213669	3958005	0	True				
ANR	3958125	BreakStatement	break ;	7310:3:213679:213684	3958005	5	True				
ANR	3958126	Label	case ZEND_AST_GREATER :	7311:2:213688:213709	3958005	6	True				
ANR	3958127	Identifier	ZEND_AST_GREATER		3958005	0					
ANR	3958128	Label	case ZEND_AST_GREATER_EQUAL :	7312:2:213713:213740	3958005	7	True				
ANR	3958129	Identifier	ZEND_AST_GREATER_EQUAL		3958005	0					
ANR	3958130	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 0 ] )	7313:3:213745:213781	3958005	8	True				
ANR	3958131	CallExpression	zend_eval_const_expr ( & ast -> child [ 0 ] )		3958005	0					
ANR	3958132	Callee	zend_eval_const_expr		3958005	0					
ANR	3958133	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958134	ArgumentList	& ast -> child [ 0 ]		3958005	1					
ANR	3958135	Argument	& ast -> child [ 0 ]		3958005	0					
ANR	3958136	UnaryOperationExpression	& ast -> child [ 0 ]		3958005	0					
ANR	3958137	UnaryOperator	&		3958005	0					
ANR	3958138	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3958139	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958140	Identifier	ast		3958005	0					
ANR	3958141	Identifier	child		3958005	1					
ANR	3958142	PrimaryExpression	0		3958005	1					
ANR	3958143	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 1 ] )	7314:3:213786:213822	3958005	9	True				
ANR	3958144	CallExpression	zend_eval_const_expr ( & ast -> child [ 1 ] )		3958005	0					
ANR	3958145	Callee	zend_eval_const_expr		3958005	0					
ANR	3958146	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958147	ArgumentList	& ast -> child [ 1 ]		3958005	1					
ANR	3958148	Argument	& ast -> child [ 1 ]		3958005	0					
ANR	3958149	UnaryOperationExpression	& ast -> child [ 1 ]		3958005	0					
ANR	3958150	UnaryOperator	&		3958005	0					
ANR	3958151	ArrayIndexing	ast -> child [ 1 ]		3958005	1					
ANR	3958152	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958153	Identifier	ast		3958005	0					
ANR	3958154	Identifier	child		3958005	1					
ANR	3958155	PrimaryExpression	1		3958005	1					
ANR	3958156	IfStatement	if ( ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL )		3958005	10					
ANR	3958157	Condition	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL	7315:7:213831:213906	3958005	0	True				
ANR	3958158	OrExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	0		||			
ANR	3958159	EqualityExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3958160	PtrMemberAccess	ast -> child [ 0 ] -> kind		3958005	0					
ANR	3958161	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958162	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958163	Identifier	ast		3958005	0					
ANR	3958164	Identifier	child		3958005	1					
ANR	3958165	PrimaryExpression	0		3958005	1					
ANR	3958166	Identifier	kind		3958005	1					
ANR	3958167	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958168	EqualityExpression	ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	1		!=			
ANR	3958169	PtrMemberAccess	ast -> child [ 1 ] -> kind		3958005	0					
ANR	3958170	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958171	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958172	Identifier	ast		3958005	0					
ANR	3958173	Identifier	child		3958005	1					
ANR	3958174	PrimaryExpression	1		3958005	1					
ANR	3958175	Identifier	kind		3958005	1					
ANR	3958176	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958177	CompoundStatement		27:85:691:691	3958005	1					
ANR	3958178	ReturnStatement	return ;	7316:4:213915:213921	3958005	0	True				
ANR	3958179	ExpressionStatement	"zend_ct_eval_greater ( & result , ast -> kind , zend_ast_get_zval ( ast -> child [ 0 ] ) , zend_ast_get_zval ( ast -> child [ 1 ] ) )"	7319:3:213932:214044	3958005	11	True				
ANR	3958180	CallExpression	"zend_ct_eval_greater ( & result , ast -> kind , zend_ast_get_zval ( ast -> child [ 0 ] ) , zend_ast_get_zval ( ast -> child [ 1 ] ) )"		3958005	0					
ANR	3958181	Callee	zend_ct_eval_greater		3958005	0					
ANR	3958182	Identifier	zend_ct_eval_greater		3958005	0					
ANR	3958183	ArgumentList	& result		3958005	1					
ANR	3958184	Argument	& result		3958005	0					
ANR	3958185	UnaryOperationExpression	& result		3958005	0					
ANR	3958186	UnaryOperator	&		3958005	0					
ANR	3958187	Identifier	result		3958005	1					
ANR	3958188	Argument	ast -> kind		3958005	1					
ANR	3958189	PtrMemberAccess	ast -> kind		3958005	0					
ANR	3958190	Identifier	ast		3958005	0					
ANR	3958191	Identifier	kind		3958005	1					
ANR	3958192	Argument	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	2					
ANR	3958193	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958194	Callee	zend_ast_get_zval		3958005	0					
ANR	3958195	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958196	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958197	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958198	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958199	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958200	Identifier	ast		3958005	0					
ANR	3958201	Identifier	child		3958005	1					
ANR	3958202	PrimaryExpression	0		3958005	1					
ANR	3958203	Argument	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	3					
ANR	3958204	CallExpression	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	0					
ANR	3958205	Callee	zend_ast_get_zval		3958005	0					
ANR	3958206	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958207	ArgumentList	ast -> child [ 1 ]		3958005	1					
ANR	3958208	Argument	ast -> child [ 1 ]		3958005	0					
ANR	3958209	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958210	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958211	Identifier	ast		3958005	0					
ANR	3958212	Identifier	child		3958005	1					
ANR	3958213	PrimaryExpression	1		3958005	1					
ANR	3958214	BreakStatement	break ;	7321:3:214049:214054	3958005	12	True				
ANR	3958215	Label	case ZEND_AST_AND :	7322:2:214058:214075	3958005	13	True				
ANR	3958216	Identifier	ZEND_AST_AND		3958005	0					
ANR	3958217	Label	case ZEND_AST_OR :	7323:2:214079:214095	3958005	14	True				
ANR	3958218	Identifier	ZEND_AST_OR		3958005	0					
ANR	3958219	CompoundStatement		37:3:886:891	3958005	15					
ANR	3958220	IdentifierDeclStatement	int i ;	7325:3:214104:214109	3958005	0	True				
ANR	3958221	IdentifierDecl	i		3958005	0					
ANR	3958222	IdentifierDeclType	int		3958005	0					
ANR	3958223	Identifier	i		3958005	1					
ANR	3958224	ForStatement	for ( i = 0 ; i <= 1 ; i ++ )		3958005	1					
ANR	3958225	ForInit	i = 0 ;	7326:8:214119:214124	3958005	0	True				
ANR	3958226	AssignmentExpression	i = 0		3958005	0		=			
ANR	3958227	Identifier	i		3958005	0					
ANR	3958228	PrimaryExpression	0		3958005	1					
ANR	3958229	Condition	i <= 1	7326:15:214126:214131	3958005	1	True				
ANR	3958230	RelationalExpression	i <= 1		3958005	0		<=			
ANR	3958231	Identifier	i		3958005	0					
ANR	3958232	PrimaryExpression	1		3958005	1					
ANR	3958233	PostIncDecOperationExpression	i ++	7326:23:214134:214136	3958005	2	True				
ANR	3958234	Identifier	i		3958005	0					
ANR	3958235	IncDec	++		3958005	1					
ANR	3958236	CompoundStatement		38:28:921:921	3958005	3					
ANR	3958237	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ i ] )	7327:4:214145:214181	3958005	0	True				
ANR	3958238	CallExpression	zend_eval_const_expr ( & ast -> child [ i ] )		3958005	0					
ANR	3958239	Callee	zend_eval_const_expr		3958005	0					
ANR	3958240	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958241	ArgumentList	& ast -> child [ i ]		3958005	1					
ANR	3958242	Argument	& ast -> child [ i ]		3958005	0					
ANR	3958243	UnaryOperationExpression	& ast -> child [ i ]		3958005	0					
ANR	3958244	UnaryOperator	&		3958005	0					
ANR	3958245	ArrayIndexing	ast -> child [ i ]		3958005	1					
ANR	3958246	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958247	Identifier	ast		3958005	0					
ANR	3958248	Identifier	child		3958005	1					
ANR	3958249	Identifier	i		3958005	1					
ANR	3958250	IfStatement	if ( ast -> child [ i ] -> kind == ZEND_AST_ZVAL )		3958005	1					
ANR	3958251	Condition	ast -> child [ i ] -> kind == ZEND_AST_ZVAL	7328:8:214191:214226	3958005	0	True				
ANR	3958252	EqualityExpression	ast -> child [ i ] -> kind == ZEND_AST_ZVAL		3958005	0		==			
ANR	3958253	PtrMemberAccess	ast -> child [ i ] -> kind		3958005	0					
ANR	3958254	ArrayIndexing	ast -> child [ i ]		3958005	0					
ANR	3958255	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958256	Identifier	ast		3958005	0					
ANR	3958257	Identifier	child		3958005	1					
ANR	3958258	Identifier	i		3958005	1					
ANR	3958259	Identifier	kind		3958005	1					
ANR	3958260	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958261	CompoundStatement		40:46:1011:1011	3958005	1					
ANR	3958262	IfStatement	if ( zend_is_true ( zend_ast_get_zval ( ast -> child [ i ] ) ) == ( ast -> kind == ZEND_AST_OR ) )		3958005	0					
ANR	3958263	Condition	zend_is_true ( zend_ast_get_zval ( ast -> child [ i ] ) ) == ( ast -> kind == ZEND_AST_OR )	7329:9:214240:214315	3958005	0	True				
ANR	3958264	EqualityExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ i ] ) ) == ( ast -> kind == ZEND_AST_OR )		3958005	0		==			
ANR	3958265	CallExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ i ] ) )		3958005	0					
ANR	3958266	Callee	zend_is_true		3958005	0					
ANR	3958267	Identifier	zend_is_true		3958005	0					
ANR	3958268	ArgumentList	zend_ast_get_zval ( ast -> child [ i ] )		3958005	1					
ANR	3958269	Argument	zend_ast_get_zval ( ast -> child [ i ] )		3958005	0					
ANR	3958270	CallExpression	zend_ast_get_zval ( ast -> child [ i ] )		3958005	0					
ANR	3958271	Callee	zend_ast_get_zval		3958005	0					
ANR	3958272	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958273	ArgumentList	ast -> child [ i ]		3958005	1					
ANR	3958274	Argument	ast -> child [ i ]		3958005	0					
ANR	3958275	ArrayIndexing	ast -> child [ i ]		3958005	0					
ANR	3958276	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958277	Identifier	ast		3958005	0					
ANR	3958278	Identifier	child		3958005	1					
ANR	3958279	Identifier	i		3958005	1					
ANR	3958280	EqualityExpression	ast -> kind == ZEND_AST_OR		3958005	1		==			
ANR	3958281	PtrMemberAccess	ast -> kind		3958005	0					
ANR	3958282	Identifier	ast		3958005	0					
ANR	3958283	Identifier	kind		3958005	1					
ANR	3958284	Identifier	ZEND_AST_OR		3958005	1					
ANR	3958285	CompoundStatement		41:87:1100:1100	3958005	1					
ANR	3958286	ExpressionStatement	"ZVAL_BOOL ( & result , ast -> kind == ZEND_AST_OR )"	7330:6:214326:214370	3958005	0	True				
ANR	3958287	CallExpression	"ZVAL_BOOL ( & result , ast -> kind == ZEND_AST_OR )"		3958005	0					
ANR	3958288	Callee	ZVAL_BOOL		3958005	0					
ANR	3958289	Identifier	ZVAL_BOOL		3958005	0					
ANR	3958290	ArgumentList	& result		3958005	1					
ANR	3958291	Argument	& result		3958005	0					
ANR	3958292	UnaryOperationExpression	& result		3958005	0					
ANR	3958293	UnaryOperator	&		3958005	0					
ANR	3958294	Identifier	result		3958005	1					
ANR	3958295	Argument	ast -> kind == ZEND_AST_OR		3958005	1					
ANR	3958296	EqualityExpression	ast -> kind == ZEND_AST_OR		3958005	0		==			
ANR	3958297	PtrMemberAccess	ast -> kind		3958005	0					
ANR	3958298	Identifier	ast		3958005	0					
ANR	3958299	Identifier	kind		3958005	1					
ANR	3958300	Identifier	ZEND_AST_OR		3958005	1					
ANR	3958301	ReturnStatement	return ;	7331:6:214378:214384	3958005	1	True				
ANR	3958302	IfStatement	if ( ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL )		3958005	2					
ANR	3958303	Condition	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL	7336:7:214412:214487	3958005	0	True				
ANR	3958304	OrExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	0		||			
ANR	3958305	EqualityExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3958306	PtrMemberAccess	ast -> child [ 0 ] -> kind		3958005	0					
ANR	3958307	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958308	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958309	Identifier	ast		3958005	0					
ANR	3958310	Identifier	child		3958005	1					
ANR	3958311	PrimaryExpression	0		3958005	1					
ANR	3958312	Identifier	kind		3958005	1					
ANR	3958313	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958314	EqualityExpression	ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	1		!=			
ANR	3958315	PtrMemberAccess	ast -> child [ 1 ] -> kind		3958005	0					
ANR	3958316	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958317	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958318	Identifier	ast		3958005	0					
ANR	3958319	Identifier	child		3958005	1					
ANR	3958320	PrimaryExpression	1		3958005	1					
ANR	3958321	Identifier	kind		3958005	1					
ANR	3958322	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958323	CompoundStatement		48:85:1272:1272	3958005	1					
ANR	3958324	ReturnStatement	return ;	7337:4:214496:214502	3958005	0	True				
ANR	3958325	IfStatement	if ( ast -> kind == ZEND_AST_OR )		3958005	3					
ANR	3958326	Condition	ast -> kind == ZEND_AST_OR	7340:7:214517:214540	3958005	0	True				
ANR	3958327	EqualityExpression	ast -> kind == ZEND_AST_OR		3958005	0		==			
ANR	3958328	PtrMemberAccess	ast -> kind		3958005	0					
ANR	3958329	Identifier	ast		3958005	0					
ANR	3958330	Identifier	kind		3958005	1					
ANR	3958331	Identifier	ZEND_AST_OR		3958005	1					
ANR	3958332	CompoundStatement		52:33:1325:1325	3958005	1					
ANR	3958333	ExpressionStatement	"ZVAL_BOOL ( & result , zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) || zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) ) )"	7341:4:214549:214665	3958005	0	True				
ANR	3958334	CallExpression	"ZVAL_BOOL ( & result , zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) || zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) ) )"		3958005	0					
ANR	3958335	Callee	ZVAL_BOOL		3958005	0					
ANR	3958336	Identifier	ZVAL_BOOL		3958005	0					
ANR	3958337	ArgumentList	& result		3958005	1					
ANR	3958338	Argument	& result		3958005	0					
ANR	3958339	UnaryOperationExpression	& result		3958005	0					
ANR	3958340	UnaryOperator	&		3958005	0					
ANR	3958341	Identifier	result		3958005	1					
ANR	3958342	Argument	zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) || zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) )		3958005	1					
ANR	3958343	OrExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) || zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) )		3958005	0		||			
ANR	3958344	CallExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) )		3958005	0					
ANR	3958345	Callee	zend_is_true		3958005	0					
ANR	3958346	Identifier	zend_is_true		3958005	0					
ANR	3958347	ArgumentList	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	1					
ANR	3958348	Argument	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958349	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958350	Callee	zend_ast_get_zval		3958005	0					
ANR	3958351	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958352	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958353	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958354	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958355	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958356	Identifier	ast		3958005	0					
ANR	3958357	Identifier	child		3958005	1					
ANR	3958358	PrimaryExpression	0		3958005	1					
ANR	3958359	CallExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) )		3958005	1					
ANR	3958360	Callee	zend_is_true		3958005	0					
ANR	3958361	Identifier	zend_is_true		3958005	0					
ANR	3958362	ArgumentList	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	1					
ANR	3958363	Argument	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	0					
ANR	3958364	CallExpression	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	0					
ANR	3958365	Callee	zend_ast_get_zval		3958005	0					
ANR	3958366	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958367	ArgumentList	ast -> child [ 1 ]		3958005	1					
ANR	3958368	Argument	ast -> child [ 1 ]		3958005	0					
ANR	3958369	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958370	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958371	Identifier	ast		3958005	0					
ANR	3958372	Identifier	child		3958005	1					
ANR	3958373	PrimaryExpression	1		3958005	1					
ANR	3958374	ElseStatement	else		3958005	0					
ANR	3958375	CompoundStatement		54:10:1459:1459	3958005	0					
ANR	3958376	ExpressionStatement	"ZVAL_BOOL ( & result , zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) && zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) ) )"	7343:4:214683:214799	3958005	0	True				
ANR	3958377	CallExpression	"ZVAL_BOOL ( & result , zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) && zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) ) )"		3958005	0					
ANR	3958378	Callee	ZVAL_BOOL		3958005	0					
ANR	3958379	Identifier	ZVAL_BOOL		3958005	0					
ANR	3958380	ArgumentList	& result		3958005	1					
ANR	3958381	Argument	& result		3958005	0					
ANR	3958382	UnaryOperationExpression	& result		3958005	0					
ANR	3958383	UnaryOperator	&		3958005	0					
ANR	3958384	Identifier	result		3958005	1					
ANR	3958385	Argument	zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) && zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) )		3958005	1					
ANR	3958386	AndExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) && zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) )		3958005	0		&&			
ANR	3958387	CallExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) )		3958005	0					
ANR	3958388	Callee	zend_is_true		3958005	0					
ANR	3958389	Identifier	zend_is_true		3958005	0					
ANR	3958390	ArgumentList	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	1					
ANR	3958391	Argument	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958392	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958393	Callee	zend_ast_get_zval		3958005	0					
ANR	3958394	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958395	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958396	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958397	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958398	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958399	Identifier	ast		3958005	0					
ANR	3958400	Identifier	child		3958005	1					
ANR	3958401	PrimaryExpression	0		3958005	1					
ANR	3958402	CallExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ 1 ] ) )		3958005	1					
ANR	3958403	Callee	zend_is_true		3958005	0					
ANR	3958404	Identifier	zend_is_true		3958005	0					
ANR	3958405	ArgumentList	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	1					
ANR	3958406	Argument	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	0					
ANR	3958407	CallExpression	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	0					
ANR	3958408	Callee	zend_ast_get_zval		3958005	0					
ANR	3958409	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958410	ArgumentList	ast -> child [ 1 ]		3958005	1					
ANR	3958411	Argument	ast -> child [ 1 ]		3958005	0					
ANR	3958412	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958413	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958414	Identifier	ast		3958005	0					
ANR	3958415	Identifier	child		3958005	1					
ANR	3958416	PrimaryExpression	1		3958005	1					
ANR	3958417	BreakStatement	break ;	7345:3:214809:214814	3958005	4	True				
ANR	3958418	Label	case ZEND_AST_UNARY_OP :	7347:2:214822:214844	3958005	16	True				
ANR	3958419	Identifier	ZEND_AST_UNARY_OP		3958005	0					
ANR	3958420	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 0 ] )	7348:3:214849:214885	3958005	17	True				
ANR	3958421	CallExpression	zend_eval_const_expr ( & ast -> child [ 0 ] )		3958005	0					
ANR	3958422	Callee	zend_eval_const_expr		3958005	0					
ANR	3958423	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958424	ArgumentList	& ast -> child [ 0 ]		3958005	1					
ANR	3958425	Argument	& ast -> child [ 0 ]		3958005	0					
ANR	3958426	UnaryOperationExpression	& ast -> child [ 0 ]		3958005	0					
ANR	3958427	UnaryOperator	&		3958005	0					
ANR	3958428	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3958429	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958430	Identifier	ast		3958005	0					
ANR	3958431	Identifier	child		3958005	1					
ANR	3958432	PrimaryExpression	0		3958005	1					
ANR	3958433	IfStatement	if ( ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL )		3958005	18					
ANR	3958434	Condition	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL	7349:7:214894:214929	3958005	0	True				
ANR	3958435	EqualityExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3958436	PtrMemberAccess	ast -> child [ 0 ] -> kind		3958005	0					
ANR	3958437	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958438	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958439	Identifier	ast		3958005	0					
ANR	3958440	Identifier	child		3958005	1					
ANR	3958441	PrimaryExpression	0		3958005	1					
ANR	3958442	Identifier	kind		3958005	1					
ANR	3958443	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958444	CompoundStatement		61:45:1714:1714	3958005	1					
ANR	3958445	ReturnStatement	return ;	7350:4:214938:214944	3958005	0	True				
ANR	3958446	ExpressionStatement	"zend_ct_eval_unary_op ( & result , ast -> attr , zend_ast_get_zval ( ast -> child [ 0 ] ) )"	7353:3:214955:215030	3958005	19	True				
ANR	3958447	CallExpression	"zend_ct_eval_unary_op ( & result , ast -> attr , zend_ast_get_zval ( ast -> child [ 0 ] ) )"		3958005	0					
ANR	3958448	Callee	zend_ct_eval_unary_op		3958005	0					
ANR	3958449	Identifier	zend_ct_eval_unary_op		3958005	0					
ANR	3958450	ArgumentList	& result		3958005	1					
ANR	3958451	Argument	& result		3958005	0					
ANR	3958452	UnaryOperationExpression	& result		3958005	0					
ANR	3958453	UnaryOperator	&		3958005	0					
ANR	3958454	Identifier	result		3958005	1					
ANR	3958455	Argument	ast -> attr		3958005	1					
ANR	3958456	PtrMemberAccess	ast -> attr		3958005	0					
ANR	3958457	Identifier	ast		3958005	0					
ANR	3958458	Identifier	attr		3958005	1					
ANR	3958459	Argument	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	2					
ANR	3958460	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958461	Callee	zend_ast_get_zval		3958005	0					
ANR	3958462	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958463	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958464	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958465	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958466	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958467	Identifier	ast		3958005	0					
ANR	3958468	Identifier	child		3958005	1					
ANR	3958469	PrimaryExpression	0		3958005	1					
ANR	3958470	BreakStatement	break ;	7354:3:215035:215040	3958005	20	True				
ANR	3958471	Label	case ZEND_AST_UNARY_PLUS :	7355:2:215044:215068	3958005	21	True				
ANR	3958472	Identifier	ZEND_AST_UNARY_PLUS		3958005	0					
ANR	3958473	Label	case ZEND_AST_UNARY_MINUS :	7356:2:215072:215097	3958005	22	True				
ANR	3958474	Identifier	ZEND_AST_UNARY_MINUS		3958005	0					
ANR	3958475	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 0 ] )	7357:3:215102:215138	3958005	23	True				
ANR	3958476	CallExpression	zend_eval_const_expr ( & ast -> child [ 0 ] )		3958005	0					
ANR	3958477	Callee	zend_eval_const_expr		3958005	0					
ANR	3958478	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958479	ArgumentList	& ast -> child [ 0 ]		3958005	1					
ANR	3958480	Argument	& ast -> child [ 0 ]		3958005	0					
ANR	3958481	UnaryOperationExpression	& ast -> child [ 0 ]		3958005	0					
ANR	3958482	UnaryOperator	&		3958005	0					
ANR	3958483	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3958484	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958485	Identifier	ast		3958005	0					
ANR	3958486	Identifier	child		3958005	1					
ANR	3958487	PrimaryExpression	0		3958005	1					
ANR	3958488	IfStatement	if ( ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL )		3958005	24					
ANR	3958489	Condition	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL	7358:7:215147:215182	3958005	0	True				
ANR	3958490	EqualityExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3958491	PtrMemberAccess	ast -> child [ 0 ] -> kind		3958005	0					
ANR	3958492	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958493	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958494	Identifier	ast		3958005	0					
ANR	3958495	Identifier	child		3958005	1					
ANR	3958496	PrimaryExpression	0		3958005	1					
ANR	3958497	Identifier	kind		3958005	1					
ANR	3958498	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958499	CompoundStatement		70:45:1967:1967	3958005	1					
ANR	3958500	ReturnStatement	return ;	7359:4:215191:215197	3958005	0	True				
ANR	3958501	ExpressionStatement	"zend_ct_eval_unary_pm ( & result , ast -> kind , zend_ast_get_zval ( ast -> child [ 0 ] ) )"	7362:3:215208:215283	3958005	25	True				
ANR	3958502	CallExpression	"zend_ct_eval_unary_pm ( & result , ast -> kind , zend_ast_get_zval ( ast -> child [ 0 ] ) )"		3958005	0					
ANR	3958503	Callee	zend_ct_eval_unary_pm		3958005	0					
ANR	3958504	Identifier	zend_ct_eval_unary_pm		3958005	0					
ANR	3958505	ArgumentList	& result		3958005	1					
ANR	3958506	Argument	& result		3958005	0					
ANR	3958507	UnaryOperationExpression	& result		3958005	0					
ANR	3958508	UnaryOperator	&		3958005	0					
ANR	3958509	Identifier	result		3958005	1					
ANR	3958510	Argument	ast -> kind		3958005	1					
ANR	3958511	PtrMemberAccess	ast -> kind		3958005	0					
ANR	3958512	Identifier	ast		3958005	0					
ANR	3958513	Identifier	kind		3958005	1					
ANR	3958514	Argument	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	2					
ANR	3958515	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958516	Callee	zend_ast_get_zval		3958005	0					
ANR	3958517	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958518	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958519	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958520	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958521	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958522	Identifier	ast		3958005	0					
ANR	3958523	Identifier	child		3958005	1					
ANR	3958524	PrimaryExpression	0		3958005	1					
ANR	3958525	BreakStatement	break ;	7363:3:215288:215293	3958005	26	True				
ANR	3958526	Label	case ZEND_AST_CONDITIONAL :	7364:2:215297:215322	3958005	27	True				
ANR	3958527	Identifier	ZEND_AST_CONDITIONAL		3958005	0					
ANR	3958528	CompoundStatement		78:3:2113:2141	3958005	28					
ANR	3958529	IdentifierDeclStatement	"zend_ast * * child , * child_ast ;"	7366:3:215331:215359	3958005	0	True				
ANR	3958530	IdentifierDecl	* * child		3958005	0					
ANR	3958531	IdentifierDeclType	zend_ast * *		3958005	0					
ANR	3958532	Identifier	child		3958005	1					
ANR	3958533	IdentifierDecl	* child_ast		3958005	1					
ANR	3958534	IdentifierDeclType	zend_ast *		3958005	0					
ANR	3958535	Identifier	child_ast		3958005	1					
ANR	3958536	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 0 ] )	7367:3:215364:215400	3958005	1	True				
ANR	3958537	CallExpression	zend_eval_const_expr ( & ast -> child [ 0 ] )		3958005	0					
ANR	3958538	Callee	zend_eval_const_expr		3958005	0					
ANR	3958539	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958540	ArgumentList	& ast -> child [ 0 ]		3958005	1					
ANR	3958541	Argument	& ast -> child [ 0 ]		3958005	0					
ANR	3958542	UnaryOperationExpression	& ast -> child [ 0 ]		3958005	0					
ANR	3958543	UnaryOperator	&		3958005	0					
ANR	3958544	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3958545	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958546	Identifier	ast		3958005	0					
ANR	3958547	Identifier	child		3958005	1					
ANR	3958548	PrimaryExpression	0		3958005	1					
ANR	3958549	IfStatement	if ( ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL )		3958005	2					
ANR	3958550	Condition	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL	7368:7:215409:215444	3958005	0	True				
ANR	3958551	EqualityExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3958552	PtrMemberAccess	ast -> child [ 0 ] -> kind		3958005	0					
ANR	3958553	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958554	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958555	Identifier	ast		3958005	0					
ANR	3958556	Identifier	child		3958005	1					
ANR	3958557	PrimaryExpression	0		3958005	1					
ANR	3958558	Identifier	kind		3958005	1					
ANR	3958559	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958560	CompoundStatement		80:45:2229:2229	3958005	1					
ANR	3958561	IfStatement	if ( ast -> child [ 1 ] )		3958005	0					
ANR	3958562	Condition	ast -> child [ 1 ]	7370:8:215526:215538	3958005	0	True				
ANR	3958563	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958564	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958565	Identifier	ast		3958005	0					
ANR	3958566	Identifier	child		3958005	1					
ANR	3958567	PrimaryExpression	1		3958005	1					
ANR	3958568	CompoundStatement		82:23:2323:2323	3958005	1					
ANR	3958569	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 1 ] )	7371:5:215548:215584	3958005	0	True				
ANR	3958570	CallExpression	zend_eval_const_expr ( & ast -> child [ 1 ] )		3958005	0					
ANR	3958571	Callee	zend_eval_const_expr		3958005	0					
ANR	3958572	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958573	ArgumentList	& ast -> child [ 1 ]		3958005	1					
ANR	3958574	Argument	& ast -> child [ 1 ]		3958005	0					
ANR	3958575	UnaryOperationExpression	& ast -> child [ 1 ]		3958005	0					
ANR	3958576	UnaryOperator	&		3958005	0					
ANR	3958577	ArrayIndexing	ast -> child [ 1 ]		3958005	1					
ANR	3958578	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958579	Identifier	ast		3958005	0					
ANR	3958580	Identifier	child		3958005	1					
ANR	3958581	PrimaryExpression	1		3958005	1					
ANR	3958582	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 2 ] )	7373:4:215596:215632	3958005	1	True				
ANR	3958583	CallExpression	zend_eval_const_expr ( & ast -> child [ 2 ] )		3958005	0					
ANR	3958584	Callee	zend_eval_const_expr		3958005	0					
ANR	3958585	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958586	ArgumentList	& ast -> child [ 2 ]		3958005	1					
ANR	3958587	Argument	& ast -> child [ 2 ]		3958005	0					
ANR	3958588	UnaryOperationExpression	& ast -> child [ 2 ]		3958005	0					
ANR	3958589	UnaryOperator	&		3958005	0					
ANR	3958590	ArrayIndexing	ast -> child [ 2 ]		3958005	1					
ANR	3958591	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958592	Identifier	ast		3958005	0					
ANR	3958593	Identifier	child		3958005	1					
ANR	3958594	PrimaryExpression	2		3958005	1					
ANR	3958595	ReturnStatement	return ;	7374:4:215638:215644	3958005	2	True				
ANR	3958596	ExpressionStatement	child = & ast -> child [ 2 - zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) ]	7377:3:215655:215726	3958005	3	True				
ANR	3958597	AssignmentExpression	child = & ast -> child [ 2 - zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) ]		3958005	0		=			
ANR	3958598	Identifier	child		3958005	0					
ANR	3958599	UnaryOperationExpression	& ast -> child [ 2 - zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) ]		3958005	1					
ANR	3958600	UnaryOperator	&		3958005	0					
ANR	3958601	ArrayIndexing	ast -> child [ 2 - zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) ) ]		3958005	1					
ANR	3958602	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958603	Identifier	ast		3958005	0					
ANR	3958604	Identifier	child		3958005	1					
ANR	3958605	AdditiveExpression	2 - zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) )		3958005	1		-			
ANR	3958606	PrimaryExpression	2		3958005	0					
ANR	3958607	CallExpression	zend_is_true ( zend_ast_get_zval ( ast -> child [ 0 ] ) )		3958005	1					
ANR	3958608	Callee	zend_is_true		3958005	0					
ANR	3958609	Identifier	zend_is_true		3958005	0					
ANR	3958610	ArgumentList	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	1					
ANR	3958611	Argument	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958612	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0					
ANR	3958613	Callee	zend_ast_get_zval		3958005	0					
ANR	3958614	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958615	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958616	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958617	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958618	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958619	Identifier	ast		3958005	0					
ANR	3958620	Identifier	child		3958005	1					
ANR	3958621	PrimaryExpression	0		3958005	1					
ANR	3958622	IfStatement	if ( * child == NULL )		3958005	4					
ANR	3958623	Condition	* child == NULL	7378:7:215735:215748	3958005	0	True				
ANR	3958624	EqualityExpression	* child == NULL		3958005	0		==			
ANR	3958625	UnaryOperationExpression	* child		3958005	0					
ANR	3958626	UnaryOperator	*		3958005	0					
ANR	3958627	Identifier	child		3958005	1					
ANR	3958628	Identifier	NULL		3958005	1					
ANR	3958629	CompoundStatement		90:23:2533:2533	3958005	1					
ANR	3958630	ExpressionStatement	child --	7379:4:215757:215764	3958005	0	True				
ANR	3958631	PostIncDecOperationExpression	child --		3958005	0					
ANR	3958632	Identifier	child		3958005	0					
ANR	3958633	IncDec	--		3958005	1					
ANR	3958634	ExpressionStatement	child_ast = * child	7381:3:215774:215792	3958005	5	True				
ANR	3958635	AssignmentExpression	child_ast = * child		3958005	0		=			
ANR	3958636	Identifier	child_ast		3958005	0					
ANR	3958637	UnaryOperationExpression	* child		3958005	1					
ANR	3958638	UnaryOperator	*		3958005	0					
ANR	3958639	Identifier	child		3958005	1					
ANR	3958640	ExpressionStatement	* child = NULL	7382:3:215797:215810	3958005	6	True				
ANR	3958641	AssignmentExpression	* child = NULL		3958005	0		=			
ANR	3958642	UnaryOperationExpression	* child		3958005	0					
ANR	3958643	UnaryOperator	*		3958005	0					
ANR	3958644	Identifier	child		3958005	1					
ANR	3958645	Identifier	NULL		3958005	1					
ANR	3958646	ExpressionStatement	zend_ast_destroy ( ast )	7383:3:215815:215836	3958005	7	True				
ANR	3958647	CallExpression	zend_ast_destroy ( ast )		3958005	0					
ANR	3958648	Callee	zend_ast_destroy		3958005	0					
ANR	3958649	Identifier	zend_ast_destroy		3958005	0					
ANR	3958650	ArgumentList	ast		3958005	1					
ANR	3958651	Argument	ast		3958005	0					
ANR	3958652	Identifier	ast		3958005	0					
ANR	3958653	ExpressionStatement	* ast_ptr = child_ast	7384:3:215841:215861	3958005	8	True				
ANR	3958654	AssignmentExpression	* ast_ptr = child_ast		3958005	0		=			
ANR	3958655	UnaryOperationExpression	* ast_ptr		3958005	0					
ANR	3958656	UnaryOperator	*		3958005	0					
ANR	3958657	Identifier	ast_ptr		3958005	1					
ANR	3958658	Identifier	child_ast		3958005	1					
ANR	3958659	ExpressionStatement	zend_eval_const_expr ( ast_ptr )	7385:3:215866:215895	3958005	9	True				
ANR	3958660	CallExpression	zend_eval_const_expr ( ast_ptr )		3958005	0					
ANR	3958661	Callee	zend_eval_const_expr		3958005	0					
ANR	3958662	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958663	ArgumentList	ast_ptr		3958005	1					
ANR	3958664	Argument	ast_ptr		3958005	0					
ANR	3958665	Identifier	ast_ptr		3958005	0					
ANR	3958666	ReturnStatement	return ;	7386:3:215900:215906	3958005	10	True				
ANR	3958667	Label	case ZEND_AST_DIM :	7388:2:215914:215931	3958005	29	True				
ANR	3958668	Identifier	ZEND_AST_DIM		3958005	0					
ANR	3958669	CompoundStatement		103:3:2785:2806	3958005	30					
ANR	3958670	IdentifierDeclStatement	"zval * container , * dim ;"	7391:3:216003:216024	3958005	0	True				
ANR	3958671	IdentifierDecl	* container		3958005	0					
ANR	3958672	IdentifierDeclType	zval *		3958005	0					
ANR	3958673	Identifier	container		3958005	1					
ANR	3958674	IdentifierDecl	* dim		3958005	1					
ANR	3958675	IdentifierDeclType	zval *		3958005	0					
ANR	3958676	Identifier	dim		3958005	1					
ANR	3958677	IfStatement	if ( ast -> child [ 1 ] == NULL )		3958005	1					
ANR	3958678	Condition	ast -> child [ 1 ] == NULL	7393:7:216034:216054	3958005	0	True				
ANR	3958679	EqualityExpression	ast -> child [ 1 ] == NULL		3958005	0		==			
ANR	3958680	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958681	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958682	Identifier	ast		3958005	0					
ANR	3958683	Identifier	child		3958005	1					
ANR	3958684	PrimaryExpression	1		3958005	1					
ANR	3958685	Identifier	NULL		3958005	1					
ANR	3958686	CompoundStatement		105:30:2839:2839	3958005	1					
ANR	3958687	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use [] for reading"" )"	7394:4:216063:216128	3958005	0	True				
ANR	3958688	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot use [] for reading"" )"		3958005	0					
ANR	3958689	Callee	zend_error_noreturn		3958005	0					
ANR	3958690	Identifier	zend_error_noreturn		3958005	0					
ANR	3958691	ArgumentList	E_COMPILE_ERROR		3958005	1					
ANR	3958692	Argument	E_COMPILE_ERROR		3958005	0					
ANR	3958693	Identifier	E_COMPILE_ERROR		3958005	0					
ANR	3958694	Argument	"""Cannot use [] for reading"""		3958005	1					
ANR	3958695	PrimaryExpression	"""Cannot use [] for reading"""		3958005	0					
ANR	3958696	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 0 ] )	7397:3:216139:216175	3958005	2	True				
ANR	3958697	CallExpression	zend_eval_const_expr ( & ast -> child [ 0 ] )		3958005	0					
ANR	3958698	Callee	zend_eval_const_expr		3958005	0					
ANR	3958699	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958700	ArgumentList	& ast -> child [ 0 ]		3958005	1					
ANR	3958701	Argument	& ast -> child [ 0 ]		3958005	0					
ANR	3958702	UnaryOperationExpression	& ast -> child [ 0 ]		3958005	0					
ANR	3958703	UnaryOperator	&		3958005	0					
ANR	3958704	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3958705	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958706	Identifier	ast		3958005	0					
ANR	3958707	Identifier	child		3958005	1					
ANR	3958708	PrimaryExpression	0		3958005	1					
ANR	3958709	ExpressionStatement	zend_eval_const_expr ( & ast -> child [ 1 ] )	7398:3:216180:216216	3958005	3	True				
ANR	3958710	CallExpression	zend_eval_const_expr ( & ast -> child [ 1 ] )		3958005	0					
ANR	3958711	Callee	zend_eval_const_expr		3958005	0					
ANR	3958712	Identifier	zend_eval_const_expr		3958005	0					
ANR	3958713	ArgumentList	& ast -> child [ 1 ]		3958005	1					
ANR	3958714	Argument	& ast -> child [ 1 ]		3958005	0					
ANR	3958715	UnaryOperationExpression	& ast -> child [ 1 ]		3958005	0					
ANR	3958716	UnaryOperator	&		3958005	0					
ANR	3958717	ArrayIndexing	ast -> child [ 1 ]		3958005	1					
ANR	3958718	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958719	Identifier	ast		3958005	0					
ANR	3958720	Identifier	child		3958005	1					
ANR	3958721	PrimaryExpression	1		3958005	1					
ANR	3958722	IfStatement	if ( ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL )		3958005	4					
ANR	3958723	Condition	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL	7399:7:216225:216300	3958005	0	True				
ANR	3958724	OrExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL || ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	0		||			
ANR	3958725	EqualityExpression	ast -> child [ 0 ] -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3958726	PtrMemberAccess	ast -> child [ 0 ] -> kind		3958005	0					
ANR	3958727	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958728	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958729	Identifier	ast		3958005	0					
ANR	3958730	Identifier	child		3958005	1					
ANR	3958731	PrimaryExpression	0		3958005	1					
ANR	3958732	Identifier	kind		3958005	1					
ANR	3958733	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958734	EqualityExpression	ast -> child [ 1 ] -> kind != ZEND_AST_ZVAL		3958005	1		!=			
ANR	3958735	PtrMemberAccess	ast -> child [ 1 ] -> kind		3958005	0					
ANR	3958736	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958737	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958738	Identifier	ast		3958005	0					
ANR	3958739	Identifier	child		3958005	1					
ANR	3958740	PrimaryExpression	1		3958005	1					
ANR	3958741	Identifier	kind		3958005	1					
ANR	3958742	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3958743	CompoundStatement		111:85:3085:3085	3958005	1					
ANR	3958744	ReturnStatement	return ;	7400:4:216309:216315	3958005	0	True				
ANR	3958745	ExpressionStatement	container = zend_ast_get_zval ( ast -> child [ 0 ] )	7403:3:216326:216370	3958005	5	True				
ANR	3958746	AssignmentExpression	container = zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	0		=			
ANR	3958747	Identifier	container		3958005	0					
ANR	3958748	CallExpression	zend_ast_get_zval ( ast -> child [ 0 ] )		3958005	1					
ANR	3958749	Callee	zend_ast_get_zval		3958005	0					
ANR	3958750	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958751	ArgumentList	ast -> child [ 0 ]		3958005	1					
ANR	3958752	Argument	ast -> child [ 0 ]		3958005	0					
ANR	3958753	ArrayIndexing	ast -> child [ 0 ]		3958005	0					
ANR	3958754	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958755	Identifier	ast		3958005	0					
ANR	3958756	Identifier	child		3958005	1					
ANR	3958757	PrimaryExpression	0		3958005	1					
ANR	3958758	ExpressionStatement	dim = zend_ast_get_zval ( ast -> child [ 1 ] )	7404:3:216375:216413	3958005	6	True				
ANR	3958759	AssignmentExpression	dim = zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	0		=			
ANR	3958760	Identifier	dim		3958005	0					
ANR	3958761	CallExpression	zend_ast_get_zval ( ast -> child [ 1 ] )		3958005	1					
ANR	3958762	Callee	zend_ast_get_zval		3958005	0					
ANR	3958763	Identifier	zend_ast_get_zval		3958005	0					
ANR	3958764	ArgumentList	ast -> child [ 1 ]		3958005	1					
ANR	3958765	Argument	ast -> child [ 1 ]		3958005	0					
ANR	3958766	ArrayIndexing	ast -> child [ 1 ]		3958005	0					
ANR	3958767	PtrMemberAccess	ast -> child		3958005	0					
ANR	3958768	Identifier	ast		3958005	0					
ANR	3958769	Identifier	child		3958005	1					
ANR	3958770	PrimaryExpression	1		3958005	1					
ANR	3958771	IfStatement	if ( Z_TYPE_P ( container ) == IS_ARRAY )		3958005	7					
ANR	3958772	Condition	Z_TYPE_P ( container ) == IS_ARRAY	7406:7:216423:216453	3958005	0	True				
ANR	3958773	EqualityExpression	Z_TYPE_P ( container ) == IS_ARRAY		3958005	0		==			
ANR	3958774	CallExpression	Z_TYPE_P ( container )		3958005	0					
ANR	3958775	Callee	Z_TYPE_P		3958005	0					
ANR	3958776	Identifier	Z_TYPE_P		3958005	0					
ANR	3958777	ArgumentList	container		3958005	1					
ANR	3958778	Argument	container		3958005	0					
ANR	3958779	Identifier	container		3958005	0					
ANR	3958780	Identifier	IS_ARRAY		3958005	1					
ANR	3958781	CompoundStatement		119:4:3244:3252	3958005	1					
ANR	3958782	IdentifierDeclStatement	zval * el ;	7407:4:216462:216470	3958005	0	True				
ANR	3958783	IdentifierDecl	* el		3958005	0					
ANR	3958784	IdentifierDeclType	zval *		3958005	0					
ANR	3958785	Identifier	el		3958005	1					
ANR	3958786	IfStatement	if ( Z_TYPE_P ( dim ) == IS_LONG )		3958005	1					
ANR	3958787	Condition	Z_TYPE_P ( dim ) == IS_LONG	7408:8:216480:216503	3958005	0	True				
ANR	3958788	EqualityExpression	Z_TYPE_P ( dim ) == IS_LONG		3958005	0		==			
ANR	3958789	CallExpression	Z_TYPE_P ( dim )		3958005	0					
ANR	3958790	Callee	Z_TYPE_P		3958005	0					
ANR	3958791	Identifier	Z_TYPE_P		3958005	0					
ANR	3958792	ArgumentList	dim		3958005	1					
ANR	3958793	Argument	dim		3958005	0					
ANR	3958794	Identifier	dim		3958005	0					
ANR	3958795	Identifier	IS_LONG		3958005	1					
ANR	3958796	CompoundStatement		120:34:3288:3288	3958005	1					
ANR	3958797	ExpressionStatement	"el = zend_hash_index_find ( Z_ARR_P ( container ) , Z_LVAL_P ( dim ) )"	7409:5:216513:216573	3958005	0	True				
ANR	3958798	AssignmentExpression	"el = zend_hash_index_find ( Z_ARR_P ( container ) , Z_LVAL_P ( dim ) )"		3958005	0		=			
ANR	3958799	Identifier	el		3958005	0					
ANR	3958800	CallExpression	"zend_hash_index_find ( Z_ARR_P ( container ) , Z_LVAL_P ( dim ) )"		3958005	1					
ANR	3958801	Callee	zend_hash_index_find		3958005	0					
ANR	3958802	Identifier	zend_hash_index_find		3958005	0					
ANR	3958803	ArgumentList	Z_ARR_P ( container )		3958005	1					
ANR	3958804	Argument	Z_ARR_P ( container )		3958005	0					
ANR	3958805	CallExpression	Z_ARR_P ( container )		3958005	0					
ANR	3958806	Callee	Z_ARR_P		3958005	0					
ANR	3958807	Identifier	Z_ARR_P		3958005	0					
ANR	3958808	ArgumentList	container		3958005	1					
ANR	3958809	Argument	container		3958005	0					
ANR	3958810	Identifier	container		3958005	0					
ANR	3958811	Argument	Z_LVAL_P ( dim )		3958005	1					
ANR	3958812	CallExpression	Z_LVAL_P ( dim )		3958005	0					
ANR	3958813	Callee	Z_LVAL_P		3958005	0					
ANR	3958814	Identifier	Z_LVAL_P		3958005	0					
ANR	3958815	ArgumentList	dim		3958005	1					
ANR	3958816	Argument	dim		3958005	0					
ANR	3958817	Identifier	dim		3958005	0					
ANR	3958818	IfStatement	if ( el )		3958005	1					
ANR	3958819	Condition	el	7410:9:216584:216585	3958005	0	True				
ANR	3958820	Identifier	el		3958005	0					
ANR	3958821	CompoundStatement		122:13:3370:3370	3958005	1					
ANR	3958822	ExpressionStatement	"ZVAL_COPY ( & result , el )"	7411:6:216596:216618	3958005	0	True				
ANR	3958823	CallExpression	"ZVAL_COPY ( & result , el )"		3958005	0					
ANR	3958824	Callee	ZVAL_COPY		3958005	0					
ANR	3958825	Identifier	ZVAL_COPY		3958005	0					
ANR	3958826	ArgumentList	& result		3958005	1					
ANR	3958827	Argument	& result		3958005	0					
ANR	3958828	UnaryOperationExpression	& result		3958005	0					
ANR	3958829	UnaryOperator	&		3958005	0					
ANR	3958830	Identifier	result		3958005	1					
ANR	3958831	Argument	el		3958005	1					
ANR	3958832	Identifier	el		3958005	0					
ANR	3958833	ElseStatement	else		3958005	0					
ANR	3958834	CompoundStatement		124:12:3414:3414	3958005	0					
ANR	3958835	ReturnStatement	return ;	7413:6:216640:216646	3958005	0	True				
ANR	3958836	ElseStatement	else		3958005	0					
ANR	3958837	IfStatement	if ( Z_TYPE_P ( dim ) == IS_STRING )		3958005	0					
ANR	3958838	Condition	Z_TYPE_P ( dim ) == IS_STRING	7415:15:216670:216695	3958005	0	True				
ANR	3958839	EqualityExpression	Z_TYPE_P ( dim ) == IS_STRING		3958005	0		==			
ANR	3958840	CallExpression	Z_TYPE_P ( dim )		3958005	0					
ANR	3958841	Callee	Z_TYPE_P		3958005	0					
ANR	3958842	Identifier	Z_TYPE_P		3958005	0					
ANR	3958843	ArgumentList	dim		3958005	1					
ANR	3958844	Argument	dim		3958005	0					
ANR	3958845	Identifier	dim		3958005	0					
ANR	3958846	Identifier	IS_STRING		3958005	1					
ANR	3958847	CompoundStatement		127:43:3480:3480	3958005	1					
ANR	3958848	ExpressionStatement	"el = zend_symtable_find ( Z_ARR_P ( container ) , Z_STR_P ( dim ) )"	7416:5:216705:216762	3958005	0	True				
ANR	3958849	AssignmentExpression	"el = zend_symtable_find ( Z_ARR_P ( container ) , Z_STR_P ( dim ) )"		3958005	0		=			
ANR	3958850	Identifier	el		3958005	0					
ANR	3958851	CallExpression	"zend_symtable_find ( Z_ARR_P ( container ) , Z_STR_P ( dim ) )"		3958005	1					
ANR	3958852	Callee	zend_symtable_find		3958005	0					
ANR	3958853	Identifier	zend_symtable_find		3958005	0					
ANR	3958854	ArgumentList	Z_ARR_P ( container )		3958005	1					
ANR	3958855	Argument	Z_ARR_P ( container )		3958005	0					
ANR	3958856	CallExpression	Z_ARR_P ( container )		3958005	0					
ANR	3958857	Callee	Z_ARR_P		3958005	0					
ANR	3958858	Identifier	Z_ARR_P		3958005	0					
ANR	3958859	ArgumentList	container		3958005	1					
ANR	3958860	Argument	container		3958005	0					
ANR	3958861	Identifier	container		3958005	0					
ANR	3958862	Argument	Z_STR_P ( dim )		3958005	1					
ANR	3958863	CallExpression	Z_STR_P ( dim )		3958005	0					
ANR	3958864	Callee	Z_STR_P		3958005	0					
ANR	3958865	Identifier	Z_STR_P		3958005	0					
ANR	3958866	ArgumentList	dim		3958005	1					
ANR	3958867	Argument	dim		3958005	0					
ANR	3958868	Identifier	dim		3958005	0					
ANR	3958869	IfStatement	if ( el )		3958005	1					
ANR	3958870	Condition	el	7417:9:216773:216774	3958005	0	True				
ANR	3958871	Identifier	el		3958005	0					
ANR	3958872	CompoundStatement		129:13:3559:3559	3958005	1					
ANR	3958873	ExpressionStatement	"ZVAL_COPY ( & result , el )"	7418:6:216785:216807	3958005	0	True				
ANR	3958874	CallExpression	"ZVAL_COPY ( & result , el )"		3958005	0					
ANR	3958875	Callee	ZVAL_COPY		3958005	0					
ANR	3958876	Identifier	ZVAL_COPY		3958005	0					
ANR	3958877	ArgumentList	& result		3958005	1					
ANR	3958878	Argument	& result		3958005	0					
ANR	3958879	UnaryOperationExpression	& result		3958005	0					
ANR	3958880	UnaryOperator	&		3958005	0					
ANR	3958881	Identifier	result		3958005	1					
ANR	3958882	Argument	el		3958005	1					
ANR	3958883	Identifier	el		3958005	0					
ANR	3958884	ElseStatement	else		3958005	0					
ANR	3958885	CompoundStatement		131:12:3603:3603	3958005	0					
ANR	3958886	ReturnStatement	return ;	7420:6:216829:216835	3958005	0	True				
ANR	3958887	ElseStatement	else		3958005	0					
ANR	3958888	CompoundStatement		134:11:3637:3637	3958005	0					
ANR	3958889	ReturnStatement	return ;	7423:5:216862:216868	3958005	0	True				
ANR	3958890	ElseStatement	else		3958005	0					
ANR	3958891	IfStatement	if ( Z_TYPE_P ( container ) == IS_STRING )		3958005	0					
ANR	3958892	Condition	Z_TYPE_P ( container ) == IS_STRING	7425:14:216925:216956	3958005	0	True				
ANR	3958893	EqualityExpression	Z_TYPE_P ( container ) == IS_STRING		3958005	0		==			
ANR	3958894	CallExpression	Z_TYPE_P ( container )		3958005	0					
ANR	3958895	Callee	Z_TYPE_P		3958005	0					
ANR	3958896	Identifier	Z_TYPE_P		3958005	0					
ANR	3958897	ArgumentList	container		3958005	1					
ANR	3958898	Argument	container		3958005	0					
ANR	3958899	Identifier	container		3958005	0					
ANR	3958900	Identifier	IS_STRING		3958005	1					
ANR	3958901	CompoundStatement		139:4:3769:3781	3958005	1					
ANR	3958902	IdentifierDeclStatement	zend_long offset ;	7426:4:216965:216981	3958005	0	True				
ANR	3958903	IdentifierDecl	offset		3958005	0					
ANR	3958904	IdentifierDeclType	zend_long		3958005	0					
ANR	3958905	Identifier	offset		3958005	1					
ANR	3958906	IdentifierDeclStatement	zend_uchar c ;	7427:4:216987:216999	3958005	1	True				
ANR	3958907	IdentifierDecl	c		3958005	0					
ANR	3958908	IdentifierDeclType	zend_uchar		3958005	0					
ANR	3958909	Identifier	c		3958005	1					
ANR	3958910	IfStatement	if ( Z_TYPE_P ( dim ) == IS_LONG )		3958005	2					
ANR	3958911	Condition	Z_TYPE_P ( dim ) == IS_LONG	7428:8:217009:217032	3958005	0	True				
ANR	3958912	EqualityExpression	Z_TYPE_P ( dim ) == IS_LONG		3958005	0		==			
ANR	3958913	CallExpression	Z_TYPE_P ( dim )		3958005	0					
ANR	3958914	Callee	Z_TYPE_P		3958005	0					
ANR	3958915	Identifier	Z_TYPE_P		3958005	0					
ANR	3958916	ArgumentList	dim		3958005	1					
ANR	3958917	Argument	dim		3958005	0					
ANR	3958918	Identifier	dim		3958005	0					
ANR	3958919	Identifier	IS_LONG		3958005	1					
ANR	3958920	CompoundStatement		140:34:3817:3817	3958005	1					
ANR	3958921	ExpressionStatement	offset = Z_LVAL_P ( dim )	7429:5:217042:217064	3958005	0	True				
ANR	3958922	AssignmentExpression	offset = Z_LVAL_P ( dim )		3958005	0		=			
ANR	3958923	Identifier	offset		3958005	0					
ANR	3958924	CallExpression	Z_LVAL_P ( dim )		3958005	1					
ANR	3958925	Callee	Z_LVAL_P		3958005	0					
ANR	3958926	Identifier	Z_LVAL_P		3958005	0					
ANR	3958927	ArgumentList	dim		3958005	1					
ANR	3958928	Argument	dim		3958005	0					
ANR	3958929	Identifier	dim		3958005	0					
ANR	3958930	ElseStatement	else		3958005	0					
ANR	3958931	IfStatement	"if ( Z_TYPE_P ( dim ) != IS_STRING || is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , & offset , NULL , 1 ) != IS_LONG )"		3958005	0					
ANR	3958932	Condition	"Z_TYPE_P ( dim ) != IS_STRING || is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , & offset , NULL , 1 ) != IS_LONG"	7430:15:217081:217190	3958005	0	True				
ANR	3958933	OrExpression	"Z_TYPE_P ( dim ) != IS_STRING || is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , & offset , NULL , 1 ) != IS_LONG"		3958005	0		||			
ANR	3958934	EqualityExpression	Z_TYPE_P ( dim ) != IS_STRING		3958005	0		!=			
ANR	3958935	CallExpression	Z_TYPE_P ( dim )		3958005	0					
ANR	3958936	Callee	Z_TYPE_P		3958005	0					
ANR	3958937	Identifier	Z_TYPE_P		3958005	0					
ANR	3958938	ArgumentList	dim		3958005	1					
ANR	3958939	Argument	dim		3958005	0					
ANR	3958940	Identifier	dim		3958005	0					
ANR	3958941	Identifier	IS_STRING		3958005	1					
ANR	3958942	EqualityExpression	"is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , & offset , NULL , 1 ) != IS_LONG"		3958005	1		!=			
ANR	3958943	CallExpression	"is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , & offset , NULL , 1 )"		3958005	0					
ANR	3958944	Callee	is_numeric_string		3958005	0					
ANR	3958945	Identifier	is_numeric_string		3958005	0					
ANR	3958946	ArgumentList	Z_STRVAL_P ( dim )		3958005	1					
ANR	3958947	Argument	Z_STRVAL_P ( dim )		3958005	0					
ANR	3958948	CallExpression	Z_STRVAL_P ( dim )		3958005	0					
ANR	3958949	Callee	Z_STRVAL_P		3958005	0					
ANR	3958950	Identifier	Z_STRVAL_P		3958005	0					
ANR	3958951	ArgumentList	dim		3958005	1					
ANR	3958952	Argument	dim		3958005	0					
ANR	3958953	Identifier	dim		3958005	0					
ANR	3958954	Argument	Z_STRLEN_P ( dim )		3958005	1					
ANR	3958955	CallExpression	Z_STRLEN_P ( dim )		3958005	0					
ANR	3958956	Callee	Z_STRLEN_P		3958005	0					
ANR	3958957	Identifier	Z_STRLEN_P		3958005	0					
ANR	3958958	ArgumentList	dim		3958005	1					
ANR	3958959	Argument	dim		3958005	0					
ANR	3958960	Identifier	dim		3958005	0					
ANR	3958961	Argument	& offset		3958005	2					
ANR	3958962	UnaryOperationExpression	& offset		3958005	0					
ANR	3958963	UnaryOperator	&		3958005	0					
ANR	3958964	Identifier	offset		3958005	1					
ANR	3958965	Argument	NULL		3958005	3					
ANR	3958966	Identifier	NULL		3958005	0					
ANR	3958967	Argument	1		3958005	4					
ANR	3958968	PrimaryExpression	1		3958005	0					
ANR	3958969	Identifier	IS_LONG		3958005	1					
ANR	3958970	CompoundStatement		142:127:3975:3975	3958005	1					
ANR	3958971	ReturnStatement	return ;	7431:5:217200:217206	3958005	0	True				
ANR	3958972	IfStatement	if ( offset < 0 || ( size_t ) offset >= Z_STRLEN_P ( container ) )		3958005	3					
ANR	3958973	Condition	offset < 0 || ( size_t ) offset >= Z_STRLEN_P ( container )	7433:8:217222:217274	3958005	0	True				
ANR	3958974	OrExpression	offset < 0 || ( size_t ) offset >= Z_STRLEN_P ( container )		3958005	0		||			
ANR	3958975	RelationalExpression	offset < 0		3958005	0		<			
ANR	3958976	Identifier	offset		3958005	0					
ANR	3958977	PrimaryExpression	0		3958005	1					
ANR	3958978	RelationalExpression	( size_t ) offset >= Z_STRLEN_P ( container )		3958005	1		>=			
ANR	3958979	CastExpression	( size_t ) offset		3958005	0					
ANR	3958980	CastTarget	size_t		3958005	0					
ANR	3958981	Identifier	offset		3958005	1					
ANR	3958982	CallExpression	Z_STRLEN_P ( container )		3958005	1					
ANR	3958983	Callee	Z_STRLEN_P		3958005	0					
ANR	3958984	Identifier	Z_STRLEN_P		3958005	0					
ANR	3958985	ArgumentList	container		3958005	1					
ANR	3958986	Argument	container		3958005	0					
ANR	3958987	Identifier	container		3958005	0					
ANR	3958988	CompoundStatement		145:63:4059:4059	3958005	1					
ANR	3958989	ReturnStatement	return ;	7434:5:217284:217290	3958005	0	True				
ANR	3958990	ExpressionStatement	c = ( zend_uchar ) Z_STRVAL_P ( container ) [ offset ]	7436:4:217302:217348	3958005	4	True				
ANR	3958991	AssignmentExpression	c = ( zend_uchar ) Z_STRVAL_P ( container ) [ offset ]		3958005	0		=			
ANR	3958992	Identifier	c		3958005	0					
ANR	3958993	CastExpression	( zend_uchar ) Z_STRVAL_P ( container ) [ offset ]		3958005	1					
ANR	3958994	CastTarget	zend_uchar		3958005	0					
ANR	3958995	ArrayIndexing	Z_STRVAL_P ( container ) [ offset ]		3958005	1					
ANR	3958996	CallExpression	Z_STRVAL_P ( container )		3958005	0					
ANR	3958997	Callee	Z_STRVAL_P		3958005	0					
ANR	3958998	Identifier	Z_STRVAL_P		3958005	0					
ANR	3958999	ArgumentList	container		3958005	1					
ANR	3959000	Argument	container		3958005	0					
ANR	3959001	Identifier	container		3958005	0					
ANR	3959002	Identifier	offset		3958005	1					
ANR	3959003	IfStatement	if ( CG ( one_char_string ) [ c ] )		3958005	5					
ANR	3959004	Condition	CG ( one_char_string ) [ c ]	7437:8:217358:217379	3958005	0	True				
ANR	3959005	ArrayIndexing	CG ( one_char_string ) [ c ]		3958005	0					
ANR	3959006	CallExpression	CG ( one_char_string )		3958005	0					
ANR	3959007	Callee	CG		3958005	0					
ANR	3959008	Identifier	CG		3958005	0					
ANR	3959009	ArgumentList	one_char_string		3958005	1					
ANR	3959010	Argument	one_char_string		3958005	0					
ANR	3959011	Identifier	one_char_string		3958005	0					
ANR	3959012	Identifier	c		3958005	1					
ANR	3959013	CompoundStatement		149:32:4164:4164	3958005	1					
ANR	3959014	ExpressionStatement	"ZVAL_INTERNED_STR ( & result , CG ( one_char_string ) [ c ] )"	7438:5:217389:217439	3958005	0	True				
ANR	3959015	CallExpression	"ZVAL_INTERNED_STR ( & result , CG ( one_char_string ) [ c ] )"		3958005	0					
ANR	3959016	Callee	ZVAL_INTERNED_STR		3958005	0					
ANR	3959017	Identifier	ZVAL_INTERNED_STR		3958005	0					
ANR	3959018	ArgumentList	& result		3958005	1					
ANR	3959019	Argument	& result		3958005	0					
ANR	3959020	UnaryOperationExpression	& result		3958005	0					
ANR	3959021	UnaryOperator	&		3958005	0					
ANR	3959022	Identifier	result		3958005	1					
ANR	3959023	Argument	CG ( one_char_string ) [ c ]		3958005	1					
ANR	3959024	ArrayIndexing	CG ( one_char_string ) [ c ]		3958005	0					
ANR	3959025	CallExpression	CG ( one_char_string )		3958005	0					
ANR	3959026	Callee	CG		3958005	0					
ANR	3959027	Identifier	CG		3958005	0					
ANR	3959028	ArgumentList	one_char_string		3958005	1					
ANR	3959029	Argument	one_char_string		3958005	0					
ANR	3959030	Identifier	one_char_string		3958005	0					
ANR	3959031	Identifier	c		3958005	1					
ANR	3959032	ElseStatement	else		3958005	0					
ANR	3959033	CompoundStatement		151:11:4234:4234	3958005	0					
ANR	3959034	ExpressionStatement	"ZVAL_NEW_STR ( & result , zend_string_init ( ( char * ) & c , 1 , 0 ) )"	7440:5:217459:217517	3958005	0	True				
ANR	3959035	CallExpression	"ZVAL_NEW_STR ( & result , zend_string_init ( ( char * ) & c , 1 , 0 ) )"		3958005	0					
ANR	3959036	Callee	ZVAL_NEW_STR		3958005	0					
ANR	3959037	Identifier	ZVAL_NEW_STR		3958005	0					
ANR	3959038	ArgumentList	& result		3958005	1					
ANR	3959039	Argument	& result		3958005	0					
ANR	3959040	UnaryOperationExpression	& result		3958005	0					
ANR	3959041	UnaryOperator	&		3958005	0					
ANR	3959042	Identifier	result		3958005	1					
ANR	3959043	Argument	"zend_string_init ( ( char * ) & c , 1 , 0 )"		3958005	1					
ANR	3959044	CallExpression	"zend_string_init ( ( char * ) & c , 1 , 0 )"		3958005	0					
ANR	3959045	Callee	zend_string_init		3958005	0					
ANR	3959046	Identifier	zend_string_init		3958005	0					
ANR	3959047	ArgumentList	( char * ) & c		3958005	1					
ANR	3959048	Argument	( char * ) & c		3958005	0					
ANR	3959049	CastExpression	( char * ) & c		3958005	0					
ANR	3959050	CastTarget	char *		3958005	0					
ANR	3959051	UnaryOperationExpression	& c		3958005	1					
ANR	3959052	UnaryOperator	&		3958005	0					
ANR	3959053	Identifier	c		3958005	1					
ANR	3959054	Argument	1		3958005	1					
ANR	3959055	PrimaryExpression	1		3958005	0					
ANR	3959056	Argument	0		3958005	2					
ANR	3959057	PrimaryExpression	0		3958005	0					
ANR	3959058	ElseStatement	else		3958005	0					
ANR	3959059	IfStatement	if ( Z_TYPE_P ( container ) <= IS_FALSE )		3958005	0					
ANR	3959060	Condition	Z_TYPE_P ( container ) <= IS_FALSE	7442:14:217539:217569	3958005	0	True				
ANR	3959061	RelationalExpression	Z_TYPE_P ( container ) <= IS_FALSE		3958005	0		<=			
ANR	3959062	CallExpression	Z_TYPE_P ( container )		3958005	0					
ANR	3959063	Callee	Z_TYPE_P		3958005	0					
ANR	3959064	Identifier	Z_TYPE_P		3958005	0					
ANR	3959065	ArgumentList	container		3958005	1					
ANR	3959066	Argument	container		3958005	0					
ANR	3959067	Identifier	container		3958005	0					
ANR	3959068	Identifier	IS_FALSE		3958005	1					
ANR	3959069	CompoundStatement		154:47:4354:4354	3958005	1					
ANR	3959070	ExpressionStatement	ZVAL_NULL ( & result )	7443:4:217578:217596	3958005	0	True				
ANR	3959071	CallExpression	ZVAL_NULL ( & result )		3958005	0					
ANR	3959072	Callee	ZVAL_NULL		3958005	0					
ANR	3959073	Identifier	ZVAL_NULL		3958005	0					
ANR	3959074	ArgumentList	& result		3958005	1					
ANR	3959075	Argument	& result		3958005	0					
ANR	3959076	UnaryOperationExpression	& result		3958005	0					
ANR	3959077	UnaryOperator	&		3958005	0					
ANR	3959078	Identifier	result		3958005	1					
ANR	3959079	ElseStatement	else		3958005	0					
ANR	3959080	CompoundStatement		156:10:4390:4390	3958005	0					
ANR	3959081	ReturnStatement	return ;	7445:4:217614:217620	3958005	0	True				
ANR	3959082	BreakStatement	break ;	7447:3:217630:217635	3958005	8	True				
ANR	3959083	Label	case ZEND_AST_ARRAY :	7449:2:217643:217662	3958005	31	True				
ANR	3959084	Identifier	ZEND_AST_ARRAY		3958005	0					
ANR	3959085	IfStatement	"if ( ! zend_try_ct_eval_array ( & result , ast ) )"		3958005	32					
ANR	3959086	Condition	"! zend_try_ct_eval_array ( & result , ast )"	7450:7:217671:217707	3958005	0	True				
ANR	3959087	UnaryOperationExpression	"! zend_try_ct_eval_array ( & result , ast )"		3958005	0					
ANR	3959088	UnaryOperator	!		3958005	0					
ANR	3959089	CallExpression	"zend_try_ct_eval_array ( & result , ast )"		3958005	1					
ANR	3959090	Callee	zend_try_ct_eval_array		3958005	0					
ANR	3959091	Identifier	zend_try_ct_eval_array		3958005	0					
ANR	3959092	ArgumentList	& result		3958005	1					
ANR	3959093	Argument	& result		3958005	0					
ANR	3959094	UnaryOperationExpression	& result		3958005	0					
ANR	3959095	UnaryOperator	&		3958005	0					
ANR	3959096	Identifier	result		3958005	1					
ANR	3959097	Argument	ast		3958005	1					
ANR	3959098	Identifier	ast		3958005	0					
ANR	3959099	CompoundStatement		162:46:4492:4492	3958005	1					
ANR	3959100	ReturnStatement	return ;	7451:4:217716:217722	3958005	0	True				
ANR	3959101	BreakStatement	break ;	7453:3:217732:217737	3958005	33	True				
ANR	3959102	Label	case ZEND_AST_MAGIC_CONST :	7454:2:217741:217766	3958005	34	True				
ANR	3959103	Identifier	ZEND_AST_MAGIC_CONST		3958005	0					
ANR	3959104	IfStatement	"if ( ! zend_try_ct_eval_magic_const ( & result , ast ) )"		3958005	35					
ANR	3959105	Condition	"! zend_try_ct_eval_magic_const ( & result , ast )"	7455:7:217775:217817	3958005	0	True				
ANR	3959106	UnaryOperationExpression	"! zend_try_ct_eval_magic_const ( & result , ast )"		3958005	0					
ANR	3959107	UnaryOperator	!		3958005	0					
ANR	3959108	CallExpression	"zend_try_ct_eval_magic_const ( & result , ast )"		3958005	1					
ANR	3959109	Callee	zend_try_ct_eval_magic_const		3958005	0					
ANR	3959110	Identifier	zend_try_ct_eval_magic_const		3958005	0					
ANR	3959111	ArgumentList	& result		3958005	1					
ANR	3959112	Argument	& result		3958005	0					
ANR	3959113	UnaryOperationExpression	& result		3958005	0					
ANR	3959114	UnaryOperator	&		3958005	0					
ANR	3959115	Identifier	result		3958005	1					
ANR	3959116	Argument	ast		3958005	1					
ANR	3959117	Identifier	ast		3958005	0					
ANR	3959118	CompoundStatement		167:52:4602:4602	3958005	1					
ANR	3959119	ReturnStatement	return ;	7456:4:217826:217832	3958005	0	True				
ANR	3959120	BreakStatement	break ;	7458:3:217842:217847	3958005	36	True				
ANR	3959121	Label	case ZEND_AST_CONST :	7459:2:217851:217870	3958005	37	True				
ANR	3959122	Identifier	ZEND_AST_CONST		3958005	0					
ANR	3959123	CompoundStatement		175:3:4733:4855	3958005	38					
ANR	3959124	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 0 ] ;	7461:3:217879:217913	3958005	0	True				
ANR	3959125	IdentifierDecl	* name_ast = ast -> child [ 0 ]		3958005	0					
ANR	3959126	IdentifierDeclType	zend_ast *		3958005	0					
ANR	3959127	Identifier	name_ast		3958005	1					
ANR	3959128	AssignmentExpression	* name_ast = ast -> child [ 0 ]		3958005	2		=			
ANR	3959129	Identifier	name_ast		3958005	0					
ANR	3959130	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3959131	PtrMemberAccess	ast -> child		3958005	0					
ANR	3959132	Identifier	ast		3958005	0					
ANR	3959133	Identifier	child		3958005	1					
ANR	3959134	PrimaryExpression	0		3958005	1					
ANR	3959135	IdentifierDeclStatement	zend_bool is_fully_qualified ;	7462:3:217918:217946	3958005	1	True				
ANR	3959136	IdentifierDecl	is_fully_qualified		3958005	0					
ANR	3959137	IdentifierDeclType	zend_bool		3958005	0					
ANR	3959138	Identifier	is_fully_qualified		3958005	1					
ANR	3959139	IdentifierDeclStatement	"zend_string * resolved_name = zend_resolve_const_name ( zend_ast_get_str ( name_ast ) , name_ast -> attr , & is_fully_qualified ) ;"	7463:3:217951:218073	3958005	2	True				
ANR	3959140	IdentifierDecl	"* resolved_name = zend_resolve_const_name ( zend_ast_get_str ( name_ast ) , name_ast -> attr , & is_fully_qualified )"		3958005	0					
ANR	3959141	IdentifierDeclType	zend_string *		3958005	0					
ANR	3959142	Identifier	resolved_name		3958005	1					
ANR	3959143	AssignmentExpression	"* resolved_name = zend_resolve_const_name ( zend_ast_get_str ( name_ast ) , name_ast -> attr , & is_fully_qualified )"		3958005	2		=			
ANR	3959144	Identifier	resolved_name		3958005	0					
ANR	3959145	CallExpression	"zend_resolve_const_name ( zend_ast_get_str ( name_ast ) , name_ast -> attr , & is_fully_qualified )"		3958005	1					
ANR	3959146	Callee	zend_resolve_const_name		3958005	0					
ANR	3959147	Identifier	zend_resolve_const_name		3958005	0					
ANR	3959148	ArgumentList	zend_ast_get_str ( name_ast )		3958005	1					
ANR	3959149	Argument	zend_ast_get_str ( name_ast )		3958005	0					
ANR	3959150	CallExpression	zend_ast_get_str ( name_ast )		3958005	0					
ANR	3959151	Callee	zend_ast_get_str		3958005	0					
ANR	3959152	Identifier	zend_ast_get_str		3958005	0					
ANR	3959153	ArgumentList	name_ast		3958005	1					
ANR	3959154	Argument	name_ast		3958005	0					
ANR	3959155	Identifier	name_ast		3958005	0					
ANR	3959156	Argument	name_ast -> attr		3958005	1					
ANR	3959157	PtrMemberAccess	name_ast -> attr		3958005	0					
ANR	3959158	Identifier	name_ast		3958005	0					
ANR	3959159	Identifier	attr		3958005	1					
ANR	3959160	Argument	& is_fully_qualified		3958005	2					
ANR	3959161	UnaryOperationExpression	& is_fully_qualified		3958005	0					
ANR	3959162	UnaryOperator	&		3958005	0					
ANR	3959163	Identifier	is_fully_qualified		3958005	1					
ANR	3959164	IfStatement	"if ( ! zend_try_ct_eval_const ( & result , resolved_name , is_fully_qualified ) )"		3958005	3					
ANR	3959165	Condition	"! zend_try_ct_eval_const ( & result , resolved_name , is_fully_qualified )"	7466:7:218083:218149	3958005	0	True				
ANR	3959166	UnaryOperationExpression	"! zend_try_ct_eval_const ( & result , resolved_name , is_fully_qualified )"		3958005	0					
ANR	3959167	UnaryOperator	!		3958005	0					
ANR	3959168	CallExpression	"zend_try_ct_eval_const ( & result , resolved_name , is_fully_qualified )"		3958005	1					
ANR	3959169	Callee	zend_try_ct_eval_const		3958005	0					
ANR	3959170	Identifier	zend_try_ct_eval_const		3958005	0					
ANR	3959171	ArgumentList	& result		3958005	1					
ANR	3959172	Argument	& result		3958005	0					
ANR	3959173	UnaryOperationExpression	& result		3958005	0					
ANR	3959174	UnaryOperator	&		3958005	0					
ANR	3959175	Identifier	result		3958005	1					
ANR	3959176	Argument	resolved_name		3958005	1					
ANR	3959177	Identifier	resolved_name		3958005	0					
ANR	3959178	Argument	is_fully_qualified		3958005	2					
ANR	3959179	Identifier	is_fully_qualified		3958005	0					
ANR	3959180	CompoundStatement		178:76:4934:4934	3958005	1					
ANR	3959181	ExpressionStatement	zend_string_release ( resolved_name )	7467:4:218158:218192	3958005	0	True				
ANR	3959182	CallExpression	zend_string_release ( resolved_name )		3958005	0					
ANR	3959183	Callee	zend_string_release		3958005	0					
ANR	3959184	Identifier	zend_string_release		3958005	0					
ANR	3959185	ArgumentList	resolved_name		3958005	1					
ANR	3959186	Argument	resolved_name		3958005	0					
ANR	3959187	Identifier	resolved_name		3958005	0					
ANR	3959188	ReturnStatement	return ;	7468:4:218198:218204	3958005	1	True				
ANR	3959189	ExpressionStatement	zend_string_release ( resolved_name )	7471:3:218215:218249	3958005	4	True				
ANR	3959190	CallExpression	zend_string_release ( resolved_name )		3958005	0					
ANR	3959191	Callee	zend_string_release		3958005	0					
ANR	3959192	Identifier	zend_string_release		3958005	0					
ANR	3959193	ArgumentList	resolved_name		3958005	1					
ANR	3959194	Argument	resolved_name		3958005	0					
ANR	3959195	Identifier	resolved_name		3958005	0					
ANR	3959196	BreakStatement	break ;	7472:3:218254:218259	3958005	5	True				
ANR	3959197	Label	case ZEND_AST_CLASS_CONST :	7474:2:218267:218292	3958005	39	True				
ANR	3959198	Identifier	ZEND_AST_CLASS_CONST		3958005	0					
ANR	3959199	CompoundStatement		190:3:5162:5188	3958005	40					
ANR	3959200	IdentifierDeclStatement	zend_ast * class_ast = ast -> child [ 0 ] ;	7476:3:218301:218336	3958005	0	True				
ANR	3959201	IdentifierDecl	* class_ast = ast -> child [ 0 ]		3958005	0					
ANR	3959202	IdentifierDeclType	zend_ast *		3958005	0					
ANR	3959203	Identifier	class_ast		3958005	1					
ANR	3959204	AssignmentExpression	* class_ast = ast -> child [ 0 ]		3958005	2		=			
ANR	3959205	Identifier	class_ast		3958005	0					
ANR	3959206	ArrayIndexing	ast -> child [ 0 ]		3958005	1					
ANR	3959207	PtrMemberAccess	ast -> child		3958005	0					
ANR	3959208	Identifier	ast		3958005	0					
ANR	3959209	Identifier	child		3958005	1					
ANR	3959210	PrimaryExpression	0		3958005	1					
ANR	3959211	IdentifierDeclStatement	zend_ast * name_ast = ast -> child [ 1 ] ;	7477:3:218341:218375	3958005	1	True				
ANR	3959212	IdentifierDecl	* name_ast = ast -> child [ 1 ]		3958005	0					
ANR	3959213	IdentifierDeclType	zend_ast *		3958005	0					
ANR	3959214	Identifier	name_ast		3958005	1					
ANR	3959215	AssignmentExpression	* name_ast = ast -> child [ 1 ]		3958005	2		=			
ANR	3959216	Identifier	name_ast		3958005	0					
ANR	3959217	ArrayIndexing	ast -> child [ 1 ]		3958005	1					
ANR	3959218	PtrMemberAccess	ast -> child		3958005	0					
ANR	3959219	Identifier	ast		3958005	0					
ANR	3959220	Identifier	child		3958005	1					
ANR	3959221	PrimaryExpression	1		3958005	1					
ANR	3959222	IdentifierDeclStatement	zend_string * resolved_name ;	7478:3:218380:218406	3958005	2	True				
ANR	3959223	IdentifierDecl	* resolved_name		3958005	0					
ANR	3959224	IdentifierDeclType	zend_string *		3958005	0					
ANR	3959225	Identifier	resolved_name		3958005	1					
ANR	3959226	IfStatement	"if ( zend_try_compile_const_expr_resolve_class_name ( & result , class_ast , name_ast , 0 ) )"		3958005	3					
ANR	3959227	Condition	"zend_try_compile_const_expr_resolve_class_name ( & result , class_ast , name_ast , 0 )"	7480:7:218416:218494	3958005	0	True				
ANR	3959228	CallExpression	"zend_try_compile_const_expr_resolve_class_name ( & result , class_ast , name_ast , 0 )"		3958005	0					
ANR	3959229	Callee	zend_try_compile_const_expr_resolve_class_name		3958005	0					
ANR	3959230	Identifier	zend_try_compile_const_expr_resolve_class_name		3958005	0					
ANR	3959231	ArgumentList	& result		3958005	1					
ANR	3959232	Argument	& result		3958005	0					
ANR	3959233	UnaryOperationExpression	& result		3958005	0					
ANR	3959234	UnaryOperator	&		3958005	0					
ANR	3959235	Identifier	result		3958005	1					
ANR	3959236	Argument	class_ast		3958005	1					
ANR	3959237	Identifier	class_ast		3958005	0					
ANR	3959238	Argument	name_ast		3958005	2					
ANR	3959239	Identifier	name_ast		3958005	0					
ANR	3959240	Argument	0		3958005	3					
ANR	3959241	PrimaryExpression	0		3958005	0					
ANR	3959242	CompoundStatement		192:88:5279:5279	3958005	1					
ANR	3959243	IfStatement	if ( Z_TYPE ( result ) == IS_NULL )		3958005	0					
ANR	3959244	Condition	Z_TYPE ( result ) == IS_NULL	7481:8:218507:218531	3958005	0	True				
ANR	3959245	EqualityExpression	Z_TYPE ( result ) == IS_NULL		3958005	0		==			
ANR	3959246	CallExpression	Z_TYPE ( result )		3958005	0					
ANR	3959247	Callee	Z_TYPE		3958005	0					
ANR	3959248	Identifier	Z_TYPE		3958005	0					
ANR	3959249	ArgumentList	result		3958005	1					
ANR	3959250	Argument	result		3958005	0					
ANR	3959251	Identifier	result		3958005	0					
ANR	3959252	Identifier	IS_NULL		3958005	1					
ANR	3959253	CompoundStatement		193:35:5316:5316	3958005	1					
ANR	3959254	IfStatement	if ( zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) ) == ZEND_FETCH_CLASS_SELF )		3958005	0					
ANR	3959255	Condition	zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) ) == ZEND_FETCH_CLASS_SELF	7482:9:218545:218623	3958005	0	True				
ANR	3959256	EqualityExpression	zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) ) == ZEND_FETCH_CLASS_SELF		3958005	0		==			
ANR	3959257	CallExpression	zend_get_class_fetch_type ( zend_ast_get_str ( class_ast ) )		3958005	0					
ANR	3959258	Callee	zend_get_class_fetch_type		3958005	0					
ANR	3959259	Identifier	zend_get_class_fetch_type		3958005	0					
ANR	3959260	ArgumentList	zend_ast_get_str ( class_ast )		3958005	1					
ANR	3959261	Argument	zend_ast_get_str ( class_ast )		3958005	0					
ANR	3959262	CallExpression	zend_ast_get_str ( class_ast )		3958005	0					
ANR	3959263	Callee	zend_ast_get_str		3958005	0					
ANR	3959264	Identifier	zend_ast_get_str		3958005	0					
ANR	3959265	ArgumentList	class_ast		3958005	1					
ANR	3959266	Argument	class_ast		3958005	0					
ANR	3959267	Identifier	class_ast		3958005	0					
ANR	3959268	Identifier	ZEND_FETCH_CLASS_SELF		3958005	1					
ANR	3959269	CompoundStatement		194:90:5408:5408	3958005	1					
ANR	3959270	ExpressionStatement	zend_ast_destroy ( ast )	7483:6:218634:218655	3958005	0	True				
ANR	3959271	CallExpression	zend_ast_destroy ( ast )		3958005	0					
ANR	3959272	Callee	zend_ast_destroy		3958005	0					
ANR	3959273	Identifier	zend_ast_destroy		3958005	0					
ANR	3959274	ArgumentList	ast		3958005	1					
ANR	3959275	Argument	ast		3958005	0					
ANR	3959276	Identifier	ast		3958005	0					
ANR	3959277	ExpressionStatement	"* ast_ptr = zend_ast_create_ex ( ZEND_AST_MAGIC_CONST , T_CLASS_C )"	7484:6:218663:218725	3958005	1	True				
ANR	3959278	AssignmentExpression	"* ast_ptr = zend_ast_create_ex ( ZEND_AST_MAGIC_CONST , T_CLASS_C )"		3958005	0		=			
ANR	3959279	UnaryOperationExpression	* ast_ptr		3958005	0					
ANR	3959280	UnaryOperator	*		3958005	0					
ANR	3959281	Identifier	ast_ptr		3958005	1					
ANR	3959282	CallExpression	"zend_ast_create_ex ( ZEND_AST_MAGIC_CONST , T_CLASS_C )"		3958005	1					
ANR	3959283	Callee	zend_ast_create_ex		3958005	0					
ANR	3959284	Identifier	zend_ast_create_ex		3958005	0					
ANR	3959285	ArgumentList	ZEND_AST_MAGIC_CONST		3958005	1					
ANR	3959286	Argument	ZEND_AST_MAGIC_CONST		3958005	0					
ANR	3959287	Identifier	ZEND_AST_MAGIC_CONST		3958005	0					
ANR	3959288	Argument	T_CLASS_C		3958005	1					
ANR	3959289	Identifier	T_CLASS_C		3958005	0					
ANR	3959290	ReturnStatement	return ;	7486:5:218739:218745	3958005	1	True				
ANR	3959291	BreakStatement	break ;	7488:4:218757:218762	3958005	1	True				
ANR	3959292	ExpressionStatement	zend_eval_const_expr ( & class_ast )	7491:3:218773:218805	3958005	4	True				
ANR	3959293	CallExpression	zend_eval_const_expr ( & class_ast )		3958005	0					
ANR	3959294	Callee	zend_eval_const_expr		3958005	0					
ANR	3959295	Identifier	zend_eval_const_expr		3958005	0					
ANR	3959296	ArgumentList	& class_ast		3958005	1					
ANR	3959297	Argument	& class_ast		3958005	0					
ANR	3959298	UnaryOperationExpression	& class_ast		3958005	0					
ANR	3959299	UnaryOperator	&		3958005	0					
ANR	3959300	Identifier	class_ast		3958005	1					
ANR	3959301	ExpressionStatement	zend_eval_const_expr ( & name_ast )	7492:3:218810:218841	3958005	5	True				
ANR	3959302	CallExpression	zend_eval_const_expr ( & name_ast )		3958005	0					
ANR	3959303	Callee	zend_eval_const_expr		3958005	0					
ANR	3959304	Identifier	zend_eval_const_expr		3958005	0					
ANR	3959305	ArgumentList	& name_ast		3958005	1					
ANR	3959306	Argument	& name_ast		3958005	0					
ANR	3959307	UnaryOperationExpression	& name_ast		3958005	0					
ANR	3959308	UnaryOperator	&		3958005	0					
ANR	3959309	Identifier	name_ast		3958005	1					
ANR	3959310	IfStatement	"if ( name_ast -> kind == ZEND_AST_ZVAL && zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" ) )"		3958005	6					
ANR	3959311	Condition	"name_ast -> kind == ZEND_AST_ZVAL && zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" )"	7494:7:218851:218951	3958005	0	True				
ANR	3959312	AndExpression	"name_ast -> kind == ZEND_AST_ZVAL && zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" )"		3958005	0		&&			
ANR	3959313	EqualityExpression	name_ast -> kind == ZEND_AST_ZVAL		3958005	0		==			
ANR	3959314	PtrMemberAccess	name_ast -> kind		3958005	0					
ANR	3959315	Identifier	name_ast		3958005	0					
ANR	3959316	Identifier	kind		3958005	1					
ANR	3959317	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3959318	CallExpression	"zend_string_equals_literal_ci ( zend_ast_get_str ( name_ast ) , ""class"" )"		3958005	1					
ANR	3959319	Callee	zend_string_equals_literal_ci		3958005	0					
ANR	3959320	Identifier	zend_string_equals_literal_ci		3958005	0					
ANR	3959321	ArgumentList	zend_ast_get_str ( name_ast )		3958005	1					
ANR	3959322	Argument	zend_ast_get_str ( name_ast )		3958005	0					
ANR	3959323	CallExpression	zend_ast_get_str ( name_ast )		3958005	0					
ANR	3959324	Callee	zend_ast_get_str		3958005	0					
ANR	3959325	Identifier	zend_ast_get_str		3958005	0					
ANR	3959326	ArgumentList	name_ast		3958005	1					
ANR	3959327	Argument	name_ast		3958005	0					
ANR	3959328	Identifier	name_ast		3958005	0					
ANR	3959329	Argument	"""class"""		3958005	1					
ANR	3959330	PrimaryExpression	"""class"""		3958005	0					
ANR	3959331	CompoundStatement		206:110:5736:5736	3958005	1					
ANR	3959332	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time ::class fetch"" )"	7495:4:218960:219070	3958005	0	True				
ANR	3959333	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Dynamic class names are not allowed in compile-time ::class fetch"" )"		3958005	0					
ANR	3959334	Callee	zend_error_noreturn		3958005	0					
ANR	3959335	Identifier	zend_error_noreturn		3958005	0					
ANR	3959336	ArgumentList	E_COMPILE_ERROR		3958005	1					
ANR	3959337	Argument	E_COMPILE_ERROR		3958005	0					
ANR	3959338	Identifier	E_COMPILE_ERROR		3958005	0					
ANR	3959339	Argument	"""Dynamic class names are not allowed in compile-time ::class fetch"""		3958005	1					
ANR	3959340	PrimaryExpression	"""Dynamic class names are not allowed in compile-time ::class fetch"""		3958005	0					
ANR	3959341	IfStatement	if ( class_ast -> kind != ZEND_AST_ZVAL || name_ast -> kind != ZEND_AST_ZVAL )		3958005	7					
ANR	3959342	Condition	class_ast -> kind != ZEND_AST_ZVAL || name_ast -> kind != ZEND_AST_ZVAL	7499:7:219085:219151	3958005	0	True				
ANR	3959343	OrExpression	class_ast -> kind != ZEND_AST_ZVAL || name_ast -> kind != ZEND_AST_ZVAL		3958005	0		||			
ANR	3959344	EqualityExpression	class_ast -> kind != ZEND_AST_ZVAL		3958005	0		!=			
ANR	3959345	PtrMemberAccess	class_ast -> kind		3958005	0					
ANR	3959346	Identifier	class_ast		3958005	0					
ANR	3959347	Identifier	kind		3958005	1					
ANR	3959348	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3959349	EqualityExpression	name_ast -> kind != ZEND_AST_ZVAL		3958005	1		!=			
ANR	3959350	PtrMemberAccess	name_ast -> kind		3958005	0					
ANR	3959351	Identifier	name_ast		3958005	0					
ANR	3959352	Identifier	kind		3958005	1					
ANR	3959353	Identifier	ZEND_AST_ZVAL		3958005	1					
ANR	3959354	CompoundStatement		211:76:5936:5936	3958005	1					
ANR	3959355	ReturnStatement	return ;	7500:4:219160:219166	3958005	0	True				
ANR	3959356	ExpressionStatement	resolved_name = zend_resolve_class_name_ast ( class_ast )	7503:3:219177:219231	3958005	8	True				
ANR	3959357	AssignmentExpression	resolved_name = zend_resolve_class_name_ast ( class_ast )		3958005	0		=			
ANR	3959358	Identifier	resolved_name		3958005	0					
ANR	3959359	CallExpression	zend_resolve_class_name_ast ( class_ast )		3958005	1					
ANR	3959360	Callee	zend_resolve_class_name_ast		3958005	0					
ANR	3959361	Identifier	zend_resolve_class_name_ast		3958005	0					
ANR	3959362	ArgumentList	class_ast		3958005	1					
ANR	3959363	Argument	class_ast		3958005	0					
ANR	3959364	Identifier	class_ast		3958005	0					
ANR	3959365	IfStatement	"if ( ! zend_try_ct_eval_class_const ( & result , resolved_name , zend_ast_get_str ( name_ast ) ) )"		3958005	9					
ANR	3959366	Condition	"! zend_try_ct_eval_class_const ( & result , resolved_name , zend_ast_get_str ( name_ast ) )"	7505:7:219241:219321	3958005	0	True				
ANR	3959367	UnaryOperationExpression	"! zend_try_ct_eval_class_const ( & result , resolved_name , zend_ast_get_str ( name_ast ) )"		3958005	0					
ANR	3959368	UnaryOperator	!		3958005	0					
ANR	3959369	CallExpression	"zend_try_ct_eval_class_const ( & result , resolved_name , zend_ast_get_str ( name_ast ) )"		3958005	1					
ANR	3959370	Callee	zend_try_ct_eval_class_const		3958005	0					
ANR	3959371	Identifier	zend_try_ct_eval_class_const		3958005	0					
ANR	3959372	ArgumentList	& result		3958005	1					
ANR	3959373	Argument	& result		3958005	0					
ANR	3959374	UnaryOperationExpression	& result		3958005	0					
ANR	3959375	UnaryOperator	&		3958005	0					
ANR	3959376	Identifier	result		3958005	1					
ANR	3959377	Argument	resolved_name		3958005	1					
ANR	3959378	Identifier	resolved_name		3958005	0					
ANR	3959379	Argument	zend_ast_get_str ( name_ast )		3958005	2					
ANR	3959380	CallExpression	zend_ast_get_str ( name_ast )		3958005	0					
ANR	3959381	Callee	zend_ast_get_str		3958005	0					
ANR	3959382	Identifier	zend_ast_get_str		3958005	0					
ANR	3959383	ArgumentList	name_ast		3958005	1					
ANR	3959384	Argument	name_ast		3958005	0					
ANR	3959385	Identifier	name_ast		3958005	0					
ANR	3959386	CompoundStatement		217:90:6106:6106	3958005	1					
ANR	3959387	ExpressionStatement	zend_string_release ( resolved_name )	7506:4:219330:219364	3958005	0	True				
ANR	3959388	CallExpression	zend_string_release ( resolved_name )		3958005	0					
ANR	3959389	Callee	zend_string_release		3958005	0					
ANR	3959390	Identifier	zend_string_release		3958005	0					
ANR	3959391	ArgumentList	resolved_name		3958005	1					
ANR	3959392	Argument	resolved_name		3958005	0					
ANR	3959393	Identifier	resolved_name		3958005	0					
ANR	3959394	ReturnStatement	return ;	7507:4:219370:219376	3958005	1	True				
ANR	3959395	ExpressionStatement	zend_string_release ( resolved_name )	7510:3:219387:219421	3958005	10	True				
ANR	3959396	CallExpression	zend_string_release ( resolved_name )		3958005	0					
ANR	3959397	Callee	zend_string_release		3958005	0					
ANR	3959398	Identifier	zend_string_release		3958005	0					
ANR	3959399	ArgumentList	resolved_name		3958005	1					
ANR	3959400	Argument	resolved_name		3958005	0					
ANR	3959401	Identifier	resolved_name		3958005	0					
ANR	3959402	BreakStatement	break ;	7511:3:219426:219431	3958005	11	True				
ANR	3959403	Label	default :	7514:2:219440:219447	3958005	41	True				
ANR	3959404	Identifier	default		3958005	0					
ANR	3959405	ReturnStatement	return ;	7515:3:219452:219458	3958005	42	True				
ANR	3959406	ExpressionStatement	zend_ast_destroy ( ast )	7518:1:219465:219486	3958005	4	True				
ANR	3959407	CallExpression	zend_ast_destroy ( ast )		3958005	0					
ANR	3959408	Callee	zend_ast_destroy		3958005	0					
ANR	3959409	Identifier	zend_ast_destroy		3958005	0					
ANR	3959410	ArgumentList	ast		3958005	1					
ANR	3959411	Argument	ast		3958005	0					
ANR	3959412	Identifier	ast		3958005	0					
ANR	3959413	ExpressionStatement	* ast_ptr = zend_ast_create_zval ( & result )	7519:1:219489:219529	3958005	5	True				
ANR	3959414	AssignmentExpression	* ast_ptr = zend_ast_create_zval ( & result )		3958005	0		=			
ANR	3959415	UnaryOperationExpression	* ast_ptr		3958005	0					
ANR	3959416	UnaryOperator	*		3958005	0					
ANR	3959417	Identifier	ast_ptr		3958005	1					
ANR	3959418	CallExpression	zend_ast_create_zval ( & result )		3958005	1					
ANR	3959419	Callee	zend_ast_create_zval		3958005	0					
ANR	3959420	Identifier	zend_ast_create_zval		3958005	0					
ANR	3959421	ArgumentList	& result		3958005	1					
ANR	3959422	Argument	& result		3958005	0					
ANR	3959423	UnaryOperationExpression	& result		3958005	0					
ANR	3959424	UnaryOperator	&		3958005	0					
ANR	3959425	Identifier	result		3958005	1					
ANR	3959426	ReturnType	void		3958005	1					
ANR	3959427	Identifier	zend_eval_const_expr		3958005	2					
ANR	3959428	ParameterList	zend_ast * * ast_ptr		3958005	3					
ANR	3959429	Parameter	zend_ast * * ast_ptr	7288:26:213187:213204	3958005	0	True				
ANR	3959430	ParameterType	zend_ast * *		3958005	0					
ANR	3959431	Identifier	ast_ptr		3958005	1					
ANR	3959432	CFGEntryNode	ENTRY		3958005		True				
ANR	3959433	CFGExitNode	EXIT		3958005		True				
ANR	3959434	Symbol	* * * ast		3958005						
ANR	3959435	Symbol	container		3958005						
ANR	3959436	Symbol	T_CLASS_C		3958005						
ANR	3959437	Symbol	zend_ast_create_ex		3958005						
ANR	3959438	Symbol	ast -> kind		3958005						
ANR	3959439	Symbol	ast		3958005						
ANR	3959440	Symbol	child_ast		3958005						
ANR	3959441	Symbol	E_COMPILE_ERROR		3958005						
ANR	3959442	Symbol	ast -> child [ i ] -> kind		3958005						
ANR	3959443	Symbol	dim		3958005						
ANR	3959444	Symbol	* CG		3958005						
ANR	3959445	Symbol	Z_TYPE		3958005						
ANR	3959446	Symbol	zend_try_ct_eval_array		3958005						
ANR	3959447	Symbol	ast -> child [ 0 ] -> kind		3958005						
ANR	3959448	Symbol	one_char_string		3958005						
ANR	3959449	Symbol	zend_string_init		3958005						
ANR	3959450	Symbol	ZEND_FETCH_CLASS_SELF		3958005						
ANR	3959451	Symbol	ZEND_AST_ZVAL		3958005						
ANR	3959452	Symbol	zend_try_ct_eval_binary_op		3958005						
ANR	3959453	Symbol	IS_STRING		3958005						
ANR	3959454	Symbol	& is_fully_qualified		3958005						
ANR	3959455	Symbol	* * ast -> child		3958005						
ANR	3959456	Symbol	zend_hash_index_find		3958005						
ANR	3959457	Symbol	* * i		3958005						
ANR	3959458	Symbol	* child		3958005						
ANR	3959459	Symbol	NULL		3958005						
ANR	3959460	Symbol	offset		3958005						
ANR	3959461	Symbol	& offset		3958005						
ANR	3959462	Symbol	& name_ast		3958005						
ANR	3959463	Symbol	el		3958005						
ANR	3959464	Symbol	ast -> child [ 1 ] -> kind		3958005						
ANR	3959465	Symbol	zend_try_compile_const_expr_resolve_class_name		3958005						
ANR	3959466	Symbol	zend_string_equals_literal_ci		3958005						
ANR	3959467	Symbol	name_ast -> kind		3958005						
ANR	3959468	Symbol	ast_ptr		3958005						
ANR	3959469	Symbol	* offset		3958005						
ANR	3959470	Symbol	zend_resolve_const_name		3958005						
ANR	3959471	Symbol	* ast -> child		3958005						
ANR	3959472	Symbol	Z_STR_P		3958005						
ANR	3959473	Symbol	ast -> child		3958005						
ANR	3959474	Symbol	zend_ast_get_zval		3958005						
ANR	3959475	Symbol	zend_is_true		3958005						
ANR	3959476	Symbol	zend_try_ct_eval_magic_const		3958005						
ANR	3959477	Symbol	child		3958005						
ANR	3959478	Symbol	zend_ast_create_zval		3958005						
ANR	3959479	Symbol	zend_symtable_find		3958005						
ANR	3959480	Symbol	class_ast		3958005						
ANR	3959481	Symbol	ZEND_AST_OR		3958005						
ANR	3959482	Symbol	name_ast -> attr		3958005						
ANR	3959483	Symbol	result		3958005						
ANR	3959484	Symbol	* name_ast		3958005						
ANR	3959485	Symbol	& class_ast		3958005						
ANR	3959486	Symbol	zend_try_ct_eval_class_const		3958005						
ANR	3959487	Symbol	* ast_ptr		3958005						
ANR	3959488	Symbol	* ast		3958005						
ANR	3959489	Symbol	zend_ast_get_str		3958005						
ANR	3959490	Symbol	IS_NULL		3958005						
ANR	3959491	Symbol	IS_ARRAY		3958005						
ANR	3959492	Symbol	* * ast		3958005						
ANR	3959493	Symbol	& result		3958005						
ANR	3959494	Symbol	IS_LONG		3958005						
ANR	3959495	Symbol	Z_STRLEN_P		3958005						
ANR	3959496	Symbol	* Z_STRVAL_P		3958005						
ANR	3959497	Symbol	IS_FALSE		3958005						
ANR	3959498	Symbol	zend_get_class_fetch_type		3958005						
ANR	3959499	Symbol	ast -> attr		3958005						
ANR	3959500	Symbol	* class_ast		3958005						
ANR	3959501	Symbol	c		3958005						
ANR	3959502	Symbol	CG		3958005						
ANR	3959503	Symbol	zend_resolve_class_name_ast		3958005						
ANR	3959504	Symbol	resolved_name		3958005						
ANR	3959505	Symbol	i		3958005						
ANR	3959506	Symbol	& c		3958005						
ANR	3959507	Symbol	Z_ARR_P		3958005						
ANR	3959508	Symbol	Z_TYPE_P		3958005						
ANR	3959509	Symbol	Z_STRVAL_P		3958005						
ANR	3959510	Symbol	* c		3958005						
ANR	3959511	Symbol	is_fully_qualified		3958005						
ANR	3959512	Symbol	Z_LVAL_P		3958005						
ANR	3959513	Symbol	zend_try_ct_eval_const		3958005						
ANR	3959514	Symbol	class_ast -> kind		3958005						
ANR	3959515	Symbol	* i		3958005						
ANR	3959516	Symbol	is_numeric_string		3958005						
ANR	3959517	Symbol	ZEND_AST_MAGIC_CONST		3958005						
ANR	3959518	Symbol	name_ast		3958005						
