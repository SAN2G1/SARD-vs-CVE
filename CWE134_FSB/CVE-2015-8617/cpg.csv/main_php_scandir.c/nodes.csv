command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3020671	File	data/converged/CVE-2015-8617_php-src/main_php_scandir.c								
ANR	3020672	Function	php_alphasort	53:0:1646:1767							
ANR	3020673	FunctionDef	"php_alphasort (const struct dirent * * a , const struct dirent * * b)"		3020672	0					
ANR	3020674	CompoundStatement		54:0:1721:1767	3020672	0					
ANR	3020675	ReturnStatement	"return strcoll ( ( * a ) -> d_name , ( * b ) -> d_name ) ;"	55:1:1724:1765	3020672	0	True				
ANR	3020676	CallExpression	"strcoll ( ( * a ) -> d_name , ( * b ) -> d_name )"		3020672	0					
ANR	3020677	Callee	strcoll		3020672	0					
ANR	3020678	Identifier	strcoll		3020672	0					
ANR	3020679	ArgumentList	( * a ) -> d_name		3020672	1					
ANR	3020680	Argument	( * a ) -> d_name		3020672	0					
ANR	3020681	PtrMemberAccess	( * a ) -> d_name		3020672	0					
ANR	3020682	UnaryOperationExpression	* a		3020672	0					
ANR	3020683	UnaryOperator	*		3020672	0					
ANR	3020684	Identifier	a		3020672	1					
ANR	3020685	Identifier	d_name		3020672	1					
ANR	3020686	Argument	( * b ) -> d_name		3020672	1					
ANR	3020687	PtrMemberAccess	( * b ) -> d_name		3020672	0					
ANR	3020688	UnaryOperationExpression	* b		3020672	0					
ANR	3020689	UnaryOperator	*		3020672	0					
ANR	3020690	Identifier	b		3020672	1					
ANR	3020691	Identifier	d_name		3020672	1					
ANR	3020692	ReturnType	PHPAPI int		3020672	1					
ANR	3020693	Identifier	php_alphasort		3020672	2					
ANR	3020694	ParameterList	"const struct dirent * * a , const struct dirent * * b"		3020672	3					
ANR	3020695	Parameter	const struct dirent * * a	53:25:1671:1693	3020672	0	True				
ANR	3020696	ParameterType	const struct dirent * *		3020672	0					
ANR	3020697	Identifier	a		3020672	1					
ANR	3020698	Parameter	const struct dirent * * b	53:50:1696:1718	3020672	1	True				
ANR	3020699	ParameterType	const struct dirent * *		3020672	0					
ANR	3020700	Identifier	b		3020672	1					
ANR	3020701	CFGEntryNode	ENTRY		3020672		True				
ANR	3020702	CFGExitNode	EXIT		3020672		True				
ANR	3020703	Symbol	a		3020672						
ANR	3020704	Symbol	b		3020672						
ANR	3020705	Symbol	( * a ) -> d_name		3020672						
ANR	3020706	Symbol	( * b ) -> d_name		3020672						
ANR	3020707	Symbol	* * b		3020672						
ANR	3020708	Symbol	* * a		3020672						
ANR	3020709	Symbol	* a		3020672						
ANR	3020710	Symbol	* b		3020672						
ANR	3020711	Symbol	strcoll		3020672						
ANR	3020712	Function	php_scandir	60:0:1819:3252							
ANR	3020713	FunctionDef	"php_scandir (const char * dirname , struct dirent * * namelist [ ] , int ( * selector ) ( const struct dirent * entry ) , int ( * compare ) ( const struct dirent * * a , const struct dirent * * b ))"		3020712	0					
ANR	3020714	CompoundStatement		61:0:2004:3252	3020712	0					
ANR	3020715	IdentifierDeclStatement	DIR * dirp = NULL ;	62:1:2007:2023	3020712	0	True				
ANR	3020716	IdentifierDecl	* dirp = NULL		3020712	0					
ANR	3020717	IdentifierDeclType	DIR *		3020712	0					
ANR	3020718	Identifier	dirp		3020712	1					
ANR	3020719	AssignmentExpression	* dirp = NULL		3020712	2		=			
ANR	3020720	Identifier	NULL		3020712	0					
ANR	3020721	Identifier	NULL		3020712	1					
ANR	3020722	IdentifierDeclStatement	struct dirent * * vector = NULL ;	63:1:2026:2055	3020712	1	True				
ANR	3020723	IdentifierDecl	* * vector = NULL		3020712	0					
ANR	3020724	IdentifierDeclType	struct dirent * *		3020712	0					
ANR	3020725	Identifier	vector		3020712	1					
ANR	3020726	AssignmentExpression	* * vector = NULL		3020712	2		=			
ANR	3020727	Identifier	NULL		3020712	0					
ANR	3020728	Identifier	NULL		3020712	1					
ANR	3020729	IdentifierDeclStatement	int vector_size = 0 ;	64:1:2058:2077	3020712	2	True				
ANR	3020730	IdentifierDecl	vector_size = 0		3020712	0					
ANR	3020731	IdentifierDeclType	int		3020712	0					
ANR	3020732	Identifier	vector_size		3020712	1					
ANR	3020733	AssignmentExpression	vector_size = 0		3020712	2		=			
ANR	3020734	Identifier	vector_size		3020712	0					
ANR	3020735	PrimaryExpression	0		3020712	1					
ANR	3020736	IdentifierDeclStatement	int nfiles = 0 ;	65:1:2080:2094	3020712	3	True				
ANR	3020737	IdentifierDecl	nfiles = 0		3020712	0					
ANR	3020738	IdentifierDeclType	int		3020712	0					
ANR	3020739	Identifier	nfiles		3020712	1					
ANR	3020740	AssignmentExpression	nfiles = 0		3020712	2		=			
ANR	3020741	Identifier	nfiles		3020712	0					
ANR	3020742	PrimaryExpression	0		3020712	1					
ANR	3020743	IdentifierDeclStatement	char entry [ sizeof ( struct dirent ) + MAXPATHLEN ] ;	66:1:2097:2141	3020712	4	True				
ANR	3020744	IdentifierDecl	entry [ sizeof ( struct dirent ) + MAXPATHLEN ]		3020712	0					
ANR	3020745	IdentifierDeclType	char [ sizeof ( struct dirent ) + MAXPATHLEN ]		3020712	0					
ANR	3020746	Identifier	entry		3020712	1					
ANR	3020747	AdditiveExpression	sizeof ( struct dirent ) + MAXPATHLEN		3020712	2		+			
ANR	3020748	SizeofExpression	sizeof ( struct dirent )		3020712	0					
ANR	3020749	Sizeof	sizeof		3020712	0					
ANR	3020750	SizeofOperand	struct dirent		3020712	1					
ANR	3020751	Identifier	MAXPATHLEN		3020712	1					
ANR	3020752	IdentifierDeclStatement	struct dirent * dp = ( struct dirent * ) & entry ;	67:1:2144:2187	3020712	5	True				
ANR	3020753	IdentifierDecl	* dp = ( struct dirent * ) & entry		3020712	0					
ANR	3020754	IdentifierDeclType	struct dirent *		3020712	0					
ANR	3020755	Identifier	dp		3020712	1					
ANR	3020756	AssignmentExpression	* dp = ( struct dirent * ) & entry		3020712	2		=			
ANR	3020757	Identifier	dp		3020712	0					
ANR	3020758	CastExpression	( struct dirent * ) & entry		3020712	1					
ANR	3020759	CastTarget	struct dirent *		3020712	0					
ANR	3020760	UnaryOperationExpression	& entry		3020712	1					
ANR	3020761	UnaryOperator	&		3020712	0					
ANR	3020762	Identifier	entry		3020712	1					
ANR	3020763	IfStatement	if ( namelist == NULL )		3020712	6					
ANR	3020764	Condition	namelist == NULL	69:5:2195:2210	3020712	0	True				
ANR	3020765	EqualityExpression	namelist == NULL		3020712	0		==			
ANR	3020766	Identifier	namelist		3020712	0					
ANR	3020767	Identifier	NULL		3020712	1					
ANR	3020768	CompoundStatement		9:23:208:208	3020712	1					
ANR	3020769	ReturnStatement	return - 1 ;	70:2:2217:2226	3020712	0	True				
ANR	3020770	UnaryOperationExpression	- 1		3020712	0					
ANR	3020771	UnaryOperator	-		3020712	0					
ANR	3020772	PrimaryExpression	1		3020712	1					
ANR	3020773	IfStatement	if ( ! ( dirp = opendir ( dirname ) ) )		3020712	7					
ANR	3020774	Condition	! ( dirp = opendir ( dirname ) )	73:5:2237:2262	3020712	0	True				
ANR	3020775	UnaryOperationExpression	! ( dirp = opendir ( dirname ) )		3020712	0					
ANR	3020776	UnaryOperator	!		3020712	0					
ANR	3020777	AssignmentExpression	dirp = opendir ( dirname )		3020712	1		=			
ANR	3020778	Identifier	dirp		3020712	0					
ANR	3020779	CallExpression	opendir ( dirname )		3020712	1					
ANR	3020780	Callee	opendir		3020712	0					
ANR	3020781	Identifier	opendir		3020712	0					
ANR	3020782	ArgumentList	dirname		3020712	1					
ANR	3020783	Argument	dirname		3020712	0					
ANR	3020784	Identifier	dirname		3020712	0					
ANR	3020785	CompoundStatement		13:33:260:260	3020712	1					
ANR	3020786	ReturnStatement	return - 1 ;	74:2:2269:2278	3020712	0	True				
ANR	3020787	UnaryOperationExpression	- 1		3020712	0					
ANR	3020788	UnaryOperator	-		3020712	0					
ANR	3020789	PrimaryExpression	1		3020712	1					
ANR	3020790	WhileStatement	"while ( ! php_readdir_r ( dirp , ( struct dirent * ) entry , & dp ) && dp )"		3020712	8					
ANR	3020791	Condition	"! php_readdir_r ( dirp , ( struct dirent * ) entry , & dp ) && dp"	77:8:2292:2346	3020712	0	True				
ANR	3020792	AndExpression	"! php_readdir_r ( dirp , ( struct dirent * ) entry , & dp ) && dp"		3020712	0		&&			
ANR	3020793	UnaryOperationExpression	"! php_readdir_r ( dirp , ( struct dirent * ) entry , & dp )"		3020712	0					
ANR	3020794	UnaryOperator	!		3020712	0					
ANR	3020795	CallExpression	"php_readdir_r ( dirp , ( struct dirent * ) entry , & dp )"		3020712	1					
ANR	3020796	Callee	php_readdir_r		3020712	0					
ANR	3020797	Identifier	php_readdir_r		3020712	0					
ANR	3020798	ArgumentList	dirp		3020712	1					
ANR	3020799	Argument	dirp		3020712	0					
ANR	3020800	Identifier	dirp		3020712	0					
ANR	3020801	Argument	( struct dirent * ) entry		3020712	1					
ANR	3020802	CastExpression	( struct dirent * ) entry		3020712	0					
ANR	3020803	CastTarget	struct dirent *		3020712	0					
ANR	3020804	Identifier	entry		3020712	1					
ANR	3020805	Argument	& dp		3020712	2					
ANR	3020806	UnaryOperationExpression	& dp		3020712	0					
ANR	3020807	UnaryOperator	&		3020712	0					
ANR	3020808	Identifier	dp		3020712	1					
ANR	3020809	Identifier	dp		3020712	1					
ANR	3020810	CompoundStatement		19:2:365:392	3020712	1					
ANR	3020811	IdentifierDeclStatement	int dsize = 0 ;	78:2:2353:2366	3020712	0	True				
ANR	3020812	IdentifierDecl	dsize = 0		3020712	0					
ANR	3020813	IdentifierDeclType	int		3020712	0					
ANR	3020814	Identifier	dsize		3020712	1					
ANR	3020815	AssignmentExpression	dsize = 0		3020712	2		=			
ANR	3020816	Identifier	dsize		3020712	0					
ANR	3020817	PrimaryExpression	0		3020712	1					
ANR	3020818	IdentifierDeclStatement	struct dirent * newdp = NULL ;	79:2:2370:2397	3020712	1	True				
ANR	3020819	IdentifierDecl	* newdp = NULL		3020712	0					
ANR	3020820	IdentifierDeclType	struct dirent *		3020712	0					
ANR	3020821	Identifier	newdp		3020712	1					
ANR	3020822	AssignmentExpression	* newdp = NULL		3020712	2		=			
ANR	3020823	Identifier	NULL		3020712	0					
ANR	3020824	Identifier	NULL		3020712	1					
ANR	3020825	IfStatement	if ( selector && ( * selector ) ( dp ) == 0 )		3020712	2					
ANR	3020826	Condition	selector && ( * selector ) ( dp ) == 0	81:6:2406:2437	3020712	0	True				
ANR	3020827	AndExpression	selector && ( * selector ) ( dp ) == 0		3020712	0		&&			
ANR	3020828	Identifier	selector		3020712	0					
ANR	3020829	EqualityExpression	( * selector ) ( dp ) == 0		3020712	1		==			
ANR	3020830	CallExpression	( * selector ) ( dp )		3020712	0					
ANR	3020831	Callee	* selector		3020712	0					
ANR	3020832	UnaryOperationExpression	* selector		3020712	0					
ANR	3020833	UnaryOperator	*		3020712	0					
ANR	3020834	Identifier	selector		3020712	1					
ANR	3020835	ArgumentList	dp		3020712	1					
ANR	3020836	Argument	dp		3020712	0					
ANR	3020837	Identifier	dp		3020712	0					
ANR	3020838	PrimaryExpression	0		3020712	1					
ANR	3020839	CompoundStatement		21:40:435:435	3020712	1					
ANR	3020840	ContinueStatement	continue ;	82:3:2445:2453	3020712	0	True				
ANR	3020841	IfStatement	if ( nfiles == vector_size )		3020712	3					
ANR	3020842	Condition	nfiles == vector_size	85:6:2466:2486	3020712	0	True				
ANR	3020843	EqualityExpression	nfiles == vector_size		3020712	0		==			
ANR	3020844	Identifier	nfiles		3020712	0					
ANR	3020845	Identifier	vector_size		3020712	1					
ANR	3020846	CompoundStatement		26:3:489:509	3020712	1					
ANR	3020847	IdentifierDeclStatement	struct dirent * * newv ;	86:3:2494:2514	3020712	0	True				
ANR	3020848	IdentifierDecl	* * newv		3020712	0					
ANR	3020849	IdentifierDeclType	struct dirent * *		3020712	0					
ANR	3020850	Identifier	newv		3020712	1					
ANR	3020851	IfStatement	if ( vector_size == 0 )		3020712	1					
ANR	3020852	Condition	vector_size == 0	87:7:2523:2538	3020712	0	True				
ANR	3020853	EqualityExpression	vector_size == 0		3020712	0		==			
ANR	3020854	Identifier	vector_size		3020712	0					
ANR	3020855	PrimaryExpression	0		3020712	1					
ANR	3020856	CompoundStatement		27:25:536:536	3020712	1					
ANR	3020857	ExpressionStatement	vector_size = 10	88:4:2547:2563	3020712	0	True				
ANR	3020858	AssignmentExpression	vector_size = 10		3020712	0		=			
ANR	3020859	Identifier	vector_size		3020712	0					
ANR	3020860	PrimaryExpression	10		3020712	1					
ANR	3020861	ElseStatement	else		3020712	0					
ANR	3020862	CompoundStatement		29:10:570:570	3020712	0					
ANR	3020863	ExpressionStatement	vector_size *= 2	90:4:2581:2597	3020712	0	True				
ANR	3020864	AssignmentExpression	vector_size *= 2		3020712	0		*=			
ANR	3020865	Identifier	vector_size		3020712	0					
ANR	3020866	PrimaryExpression	2		3020712	1					
ANR	3020867	ExpressionStatement	"newv = ( struct dirent * * ) realloc ( vector , vector_size * sizeof ( struct dirent * ) )"	93:3:2608:2690	3020712	2	True				
ANR	3020868	AssignmentExpression	"newv = ( struct dirent * * ) realloc ( vector , vector_size * sizeof ( struct dirent * ) )"		3020712	0		=			
ANR	3020869	Identifier	newv		3020712	0					
ANR	3020870	CastExpression	"( struct dirent * * ) realloc ( vector , vector_size * sizeof ( struct dirent * ) )"		3020712	1					
ANR	3020871	CastTarget	struct dirent * *		3020712	0					
ANR	3020872	CallExpression	"realloc ( vector , vector_size * sizeof ( struct dirent * ) )"		3020712	1					
ANR	3020873	Callee	realloc		3020712	0					
ANR	3020874	Identifier	realloc		3020712	0					
ANR	3020875	ArgumentList	vector		3020712	1					
ANR	3020876	Argument	vector		3020712	0					
ANR	3020877	Identifier	vector		3020712	0					
ANR	3020878	Argument	vector_size * sizeof ( struct dirent * )		3020712	1					
ANR	3020879	MultiplicativeExpression	vector_size * sizeof ( struct dirent * )		3020712	0		*			
ANR	3020880	Identifier	vector_size		3020712	0					
ANR	3020881	SizeofExpression	sizeof ( struct dirent * )		3020712	1					
ANR	3020882	Sizeof	sizeof		3020712	0					
ANR	3020883	SizeofOperand	struct dirent *		3020712	1					
ANR	3020884	IfStatement	if ( ! newv )		3020712	3					
ANR	3020885	Condition	! newv	94:7:2699:2703	3020712	0	True				
ANR	3020886	UnaryOperationExpression	! newv		3020712	0					
ANR	3020887	UnaryOperator	!		3020712	0					
ANR	3020888	Identifier	newv		3020712	1					
ANR	3020889	CompoundStatement		34:14:701:701	3020712	1					
ANR	3020890	ReturnStatement	return - 1 ;	95:4:2712:2721	3020712	0	True				
ANR	3020891	UnaryOperationExpression	- 1		3020712	0					
ANR	3020892	UnaryOperator	-		3020712	0					
ANR	3020893	PrimaryExpression	1		3020712	1					
ANR	3020894	ExpressionStatement	vector = newv	97:3:2731:2744	3020712	4	True				
ANR	3020895	AssignmentExpression	vector = newv		3020712	0		=			
ANR	3020896	Identifier	vector		3020712	0					
ANR	3020897	Identifier	newv		3020712	1					
ANR	3020898	ExpressionStatement	dsize = sizeof ( struct dirent ) + ( ( ( int ) strlen ( dp -> d_name ) + 1 ) * sizeof ( char ) )	100:2:2753:2832	3020712	4	True				
ANR	3020899	AssignmentExpression	dsize = sizeof ( struct dirent ) + ( ( ( int ) strlen ( dp -> d_name ) + 1 ) * sizeof ( char ) )		3020712	0		=			
ANR	3020900	Identifier	dsize		3020712	0					
ANR	3020901	AdditiveExpression	sizeof ( struct dirent ) + ( ( ( int ) strlen ( dp -> d_name ) + 1 ) * sizeof ( char ) )		3020712	1		+			
ANR	3020902	SizeofExpression	sizeof ( struct dirent )		3020712	0					
ANR	3020903	Sizeof	sizeof		3020712	0					
ANR	3020904	SizeofOperand	struct dirent		3020712	1					
ANR	3020905	MultiplicativeExpression	( ( int ) strlen ( dp -> d_name ) + 1 ) * sizeof ( char )		3020712	1		*			
ANR	3020906	AdditiveExpression	( int ) strlen ( dp -> d_name ) + 1		3020712	0		+			
ANR	3020907	CastExpression	( int ) strlen ( dp -> d_name )		3020712	0					
ANR	3020908	CastTarget	int		3020712	0					
ANR	3020909	CallExpression	strlen ( dp -> d_name )		3020712	1					
ANR	3020910	Callee	strlen		3020712	0					
ANR	3020911	Identifier	strlen		3020712	0					
ANR	3020912	ArgumentList	dp -> d_name		3020712	1					
ANR	3020913	Argument	dp -> d_name		3020712	0					
ANR	3020914	PtrMemberAccess	dp -> d_name		3020712	0					
ANR	3020915	Identifier	dp		3020712	0					
ANR	3020916	Identifier	d_name		3020712	1					
ANR	3020917	PrimaryExpression	1		3020712	1					
ANR	3020918	SizeofExpression	sizeof ( char )		3020712	1					
ANR	3020919	Sizeof	sizeof		3020712	0					
ANR	3020920	SizeofOperand	char		3020712	1					
ANR	3020921	ExpressionStatement	newdp = ( struct dirent * ) malloc ( dsize )	101:2:2836:2875	3020712	5	True				
ANR	3020922	AssignmentExpression	newdp = ( struct dirent * ) malloc ( dsize )		3020712	0		=			
ANR	3020923	Identifier	newdp		3020712	0					
ANR	3020924	CastExpression	( struct dirent * ) malloc ( dsize )		3020712	1					
ANR	3020925	CastTarget	struct dirent *		3020712	0					
ANR	3020926	CallExpression	malloc ( dsize )		3020712	1					
ANR	3020927	Callee	malloc		3020712	0					
ANR	3020928	Identifier	malloc		3020712	0					
ANR	3020929	ArgumentList	dsize		3020712	1					
ANR	3020930	Argument	dsize		3020712	0					
ANR	3020931	Identifier	dsize		3020712	0					
ANR	3020932	IfStatement	if ( newdp == NULL )		3020712	6					
ANR	3020933	Condition	newdp == NULL	103:6:2884:2896	3020712	0	True				
ANR	3020934	EqualityExpression	newdp == NULL		3020712	0		==			
ANR	3020935	Identifier	newdp		3020712	0					
ANR	3020936	Identifier	NULL		3020712	1					
ANR	3020937	CompoundStatement		43:21:894:894	3020712	1					
ANR	3020938	GotoStatement	goto fail ;	104:3:2904:2913	3020712	0	True				
ANR	3020939	Identifier	fail		3020712	0					
ANR	3020940	ExpressionStatement	"vector [ nfiles ++ ] = ( struct dirent * ) memcpy ( newdp , dp , dsize )"	107:2:2922:2983	3020712	7	True				
ANR	3020941	AssignmentExpression	"vector [ nfiles ++ ] = ( struct dirent * ) memcpy ( newdp , dp , dsize )"		3020712	0		=			
ANR	3020942	ArrayIndexing	vector [ nfiles ++ ]		3020712	0					
ANR	3020943	Identifier	vector		3020712	0					
ANR	3020944	PostIncDecOperationExpression	nfiles ++		3020712	1					
ANR	3020945	Identifier	nfiles		3020712	0					
ANR	3020946	IncDec	++		3020712	1					
ANR	3020947	CastExpression	"( struct dirent * ) memcpy ( newdp , dp , dsize )"		3020712	1					
ANR	3020948	CastTarget	struct dirent *		3020712	0					
ANR	3020949	CallExpression	"memcpy ( newdp , dp , dsize )"		3020712	1					
ANR	3020950	Callee	memcpy		3020712	0					
ANR	3020951	Identifier	memcpy		3020712	0					
ANR	3020952	ArgumentList	newdp		3020712	1					
ANR	3020953	Argument	newdp		3020712	0					
ANR	3020954	Identifier	newdp		3020712	0					
ANR	3020955	Argument	dp		3020712	1					
ANR	3020956	Identifier	dp		3020712	0					
ANR	3020957	Argument	dsize		3020712	2					
ANR	3020958	Identifier	dsize		3020712	0					
ANR	3020959	ExpressionStatement	closedir ( dirp )	110:1:2990:3004	3020712	9	True				
ANR	3020960	CallExpression	closedir ( dirp )		3020712	0					
ANR	3020961	Callee	closedir		3020712	0					
ANR	3020962	Identifier	closedir		3020712	0					
ANR	3020963	ArgumentList	dirp		3020712	1					
ANR	3020964	Argument	dirp		3020712	0					
ANR	3020965	Identifier	dirp		3020712	0					
ANR	3020966	ExpressionStatement	* namelist = vector	112:1:3008:3026	3020712	10	True				
ANR	3020967	AssignmentExpression	* namelist = vector		3020712	0		=			
ANR	3020968	UnaryOperationExpression	* namelist		3020712	0					
ANR	3020969	UnaryOperator	*		3020712	0					
ANR	3020970	Identifier	namelist		3020712	1					
ANR	3020971	Identifier	vector		3020712	1					
ANR	3020972	IfStatement	if ( compare )		3020712	11					
ANR	3020973	Condition	compare	114:5:3034:3040	3020712	0	True				
ANR	3020974	Identifier	compare		3020712	0					
ANR	3020975	CompoundStatement		54:14:1038:1038	3020712	1					
ANR	3020976	Statement	qsort	115:2:3047:3051	3020712	0	True				
ANR	3020977	Statement	(	115:8:3053:3053	3020712	1	True				
ANR	3020978	Statement	*	115:9:3054:3054	3020712	2	True				
ANR	3020979	Statement	namelist	115:10:3055:3062	3020712	3	True				
ANR	3020980	Statement	","	115:18:3063:3063	3020712	4	True				
ANR	3020981	Statement	nfiles	115:20:3065:3070	3020712	5	True				
ANR	3020982	Statement	","	115:26:3071:3071	3020712	6	True				
ANR	3020983	Statement	sizeof	115:28:3073:3078	3020712	7	True				
ANR	3020984	Statement	(	115:34:3079:3079	3020712	8	True				
ANR	3020985	Statement	struct	115:35:3080:3085	3020712	9	True				
ANR	3020986	Statement	dirent	115:42:3087:3092	3020712	10	True				
ANR	3020987	Statement	*	115:49:3094:3094	3020712	11	True				
ANR	3020988	Statement	)	115:50:3095:3095	3020712	12	True				
ANR	3020989	Statement	","	115:51:3096:3096	3020712	13	True				
ANR	3020990	Statement	(	115:53:3098:3098	3020712	14	True				
ANR	3020991	Statement	int	115:54:3099:3101	3020712	15	True				
ANR	3020992	Statement	(	115:58:3103:3103	3020712	16	True				
ANR	3020993	Statement	*	115:59:3104:3104	3020712	17	True				
ANR	3020994	Statement	)	115:60:3105:3105	3020712	18	True				
ANR	3020995	Statement	(	115:62:3107:3107	3020712	19	True				
ANR	3020996	Statement	const	115:63:3108:3112	3020712	20	True				
ANR	3020997	Statement	void	115:69:3114:3117	3020712	21	True				
ANR	3020998	Statement	*	115:74:3119:3119	3020712	22	True				
ANR	3020999	Statement	","	115:75:3120:3120	3020712	23	True				
ANR	3021000	Statement	const	115:77:3122:3126	3020712	24	True				
ANR	3021001	Statement	void	115:83:3128:3131	3020712	25	True				
ANR	3021002	Statement	*	115:88:3133:3133	3020712	26	True				
ANR	3021003	Statement	)	115:89:3134:3134	3020712	27	True				
ANR	3021004	Statement	)	115:90:3135:3135	3020712	28	True				
ANR	3021005	Statement	compare	115:92:3137:3143	3020712	29	True				
ANR	3021006	Statement	)	115:99:3144:3144	3020712	30	True				
ANR	3021007	ExpressionStatement		115:100:3145:3145	3020712	31	True				
ANR	3021008	ReturnStatement	return nfiles ;	118:1:3152:3165	3020712	12	True				
ANR	3021009	Identifier	nfiles		3020712	0					
ANR	3021010	Label	fail :	120:0:3168:3172	3020712	13	True				
ANR	3021011	Identifier	fail		3020712	0					
ANR	3021012	WhileStatement	while ( nfiles -- > 0 )		3020712	14					
ANR	3021013	Condition	nfiles -- > 0	121:8:3182:3193	3020712	0	True				
ANR	3021014	RelationalExpression	nfiles -- > 0		3020712	0		>			
ANR	3021015	PostIncDecOperationExpression	nfiles --		3020712	0					
ANR	3021016	Identifier	nfiles		3020712	0					
ANR	3021017	IncDec	--		3020712	1					
ANR	3021018	PrimaryExpression	0		3020712	1					
ANR	3021019	CompoundStatement		61:22:1191:1191	3020712	1					
ANR	3021020	ExpressionStatement	free ( vector [ nfiles ] )	122:2:3200:3220	3020712	0	True				
ANR	3021021	CallExpression	free ( vector [ nfiles ] )		3020712	0					
ANR	3021022	Callee	free		3020712	0					
ANR	3021023	Identifier	free		3020712	0					
ANR	3021024	ArgumentList	vector [ nfiles ]		3020712	1					
ANR	3021025	Argument	vector [ nfiles ]		3020712	0					
ANR	3021026	ArrayIndexing	vector [ nfiles ]		3020712	0					
ANR	3021027	Identifier	vector		3020712	0					
ANR	3021028	Identifier	nfiles		3020712	1					
ANR	3021029	ExpressionStatement	free ( vector )	124:1:3226:3238	3020712	15	True				
ANR	3021030	CallExpression	free ( vector )		3020712	0					
ANR	3021031	Callee	free		3020712	0					
ANR	3021032	Identifier	free		3020712	0					
ANR	3021033	ArgumentList	vector		3020712	1					
ANR	3021034	Argument	vector		3020712	0					
ANR	3021035	Identifier	vector		3020712	0					
ANR	3021036	ReturnStatement	return - 1 ;	125:1:3241:3250	3020712	16	True				
ANR	3021037	UnaryOperationExpression	- 1		3020712	0					
ANR	3021038	UnaryOperator	-		3020712	0					
ANR	3021039	PrimaryExpression	1		3020712	1					
ANR	3021040	ReturnType	PHPAPI int		3020712	1					
ANR	3021041	Identifier	php_scandir		3020712	2					
ANR	3021042	ParameterList	"const char * dirname , struct dirent * * namelist [ ] , int ( * selector ) ( const struct dirent * entry ) , int ( * compare ) ( const struct dirent * * a , const struct dirent * * b )"		3020712	3					
ANR	3021043	Parameter	const char * dirname	60:23:1842:1860	3020712	0	True				
ANR	3021044	ParameterType	const char *		3020712	0					
ANR	3021045	Identifier	dirname		3020712	1					
ANR	3021046	Parameter	struct dirent * * namelist [ ]	60:44:1863:1888	3020712	1	True				
ANR	3021047	ParameterType	struct dirent * * [ ]		3020712	0					
ANR	3021048	Identifier	namelist		3020712	1					
ANR	3021049	Parameter	int ( * selector ) ( const struct dirent * entry )	60:72:1891:1934	3020712	2	True				
ANR	3021050	ParameterType	(( const struct dirent * entry ) int) *		3020712	0					
ANR	3021051	Identifier	selector		3020712	1					
ANR	3021052	Parameter	"int ( * compare ) ( const struct dirent * * a , const struct dirent * * b )"	60:118:1937:2001	3020712	3	True				
ANR	3021053	ParameterType	"(( const struct dirent * * a , const struct dirent * * b ) int) *"		3020712	0					
ANR	3021054	Identifier	compare		3020712	1					
ANR	3021055	CFGEntryNode	ENTRY		3020712		True				
ANR	3021056	CFGExitNode	EXIT		3020712		True				
ANR	3021057	Symbol	compare		3020712						
ANR	3021058	Symbol	* nfiles		3020712						
ANR	3021059	Symbol	* namelist		3020712						
ANR	3021060	Symbol	nfiles		3020712						
ANR	3021061	Symbol	dp -> d_name		3020712						
ANR	3021062	Symbol	realloc		3020712						
ANR	3021063	Symbol	dp		3020712						
ANR	3021064	Symbol	dirname		3020712						
ANR	3021065	Symbol	vector_size		3020712						
ANR	3021066	Symbol	newdp		3020712						
ANR	3021067	Symbol	* dp		3020712						
ANR	3021068	Symbol	strlen		3020712						
ANR	3021069	Symbol	php_readdir_r		3020712						
ANR	3021070	Symbol	dsize		3020712						
ANR	3021071	Symbol	namelist		3020712						
ANR	3021072	Symbol	& dp		3020712						
ANR	3021073	Symbol	selector		3020712						
ANR	3021074	Symbol	vector		3020712						
ANR	3021075	Symbol	malloc		3020712						
ANR	3021076	Symbol	NULL		3020712						
ANR	3021077	Symbol	newv		3020712						
ANR	3021078	Symbol	* vector		3020712						
ANR	3021079	Symbol	dirp		3020712						
ANR	3021080	Symbol	entry		3020712						
ANR	3021081	Symbol	& entry		3020712						
ANR	3021082	Symbol	* selector		3020712						
ANR	3021083	Symbol	memcpy		3020712						
ANR	3021084	Symbol	opendir		3020712						
