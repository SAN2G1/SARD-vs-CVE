command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	70558	File	data/converged/CVE-2015-8617_php-src/Zend_zend_ast.c								
ANR	70559	DeclStmt									
ANR	70560	Decl							ZEND_API zend_ast_process_t	ZEND_API zend_ast_process_t	zend_ast_process
ANR	70561	Function	zend_ast_alloc	31:0:1453:1551							
ANR	70562	FunctionDef	zend_ast_alloc (size_t size)		70561	0					
ANR	70563	CompoundStatement		31:48:1501:1551	70561	0					
ANR	70564	ReturnStatement	"return zend_arena_alloc ( & CG ( ast_arena ) , size ) ;"	32:1:1504:1549	70561	0	True				
ANR	70565	CallExpression	"zend_arena_alloc ( & CG ( ast_arena ) , size )"		70561	0					
ANR	70566	Callee	zend_arena_alloc		70561	0					
ANR	70567	Identifier	zend_arena_alloc		70561	0					
ANR	70568	ArgumentList	& CG ( ast_arena )		70561	1					
ANR	70569	Argument	& CG ( ast_arena )		70561	0					
ANR	70570	UnaryOperationExpression	& CG ( ast_arena )		70561	0					
ANR	70571	UnaryOperator	&		70561	0					
ANR	70572	CallExpression	CG ( ast_arena )		70561	1					
ANR	70573	Callee	CG		70561	0					
ANR	70574	Identifier	CG		70561	0					
ANR	70575	ArgumentList	ast_arena		70561	1					
ANR	70576	Argument	ast_arena		70561	0					
ANR	70577	Identifier	ast_arena		70561	0					
ANR	70578	Argument	size		70561	1					
ANR	70579	Identifier	size		70561	0					
ANR	70580	ReturnType	static inline void *		70561	1					
ANR	70581	Identifier	zend_ast_alloc		70561	2					
ANR	70582	ParameterList	size_t size		70561	3					
ANR	70583	Parameter	size_t size	31:35:1488:1498	70561	0	True				
ANR	70584	ParameterType	size_t		70561	0					
ANR	70585	Identifier	size		70561	1					
ANR	70586	CFGEntryNode	ENTRY		70561		True				
ANR	70587	CFGExitNode	EXIT		70561		True				
ANR	70588	Symbol	size		70561						
ANR	70589	Symbol	zend_arena_alloc		70561						
ANR	70590	Symbol	ast_arena		70561						
ANR	70591	Symbol	& CG		70561						
ANR	70592	Function	zend_ast_realloc	35:0:1554:1719							
ANR	70593	FunctionDef	"zend_ast_realloc (void * old , size_t old_size , size_t new_size)"		70592	0					
ANR	70594	CompoundStatement		35:82:1636:1719	70592	0					
ANR	70595	Statement	void	36:1:1639:1642	70592	0	True				
ANR	70596	Statement	*	36:6:1644:1644	70592	1	True				
ANR	70597	Statement	new	36:7:1645:1647	70592	2	True				
ANR	70598	Statement	=	36:11:1649:1649	70592	3	True				
ANR	70599	ExpressionStatement	zend_ast_alloc ( new_size )	36:13:1651:1675	70592	4	True				
ANR	70600	CallExpression	zend_ast_alloc ( new_size )		70592	0					
ANR	70601	Callee	zend_ast_alloc		70592	0					
ANR	70602	Identifier	zend_ast_alloc		70592	0					
ANR	70603	ArgumentList	new_size		70592	1					
ANR	70604	Argument	new_size		70592	0					
ANR	70605	Identifier	new_size		70592	0					
ANR	70606	Statement	memcpy	37:1:1678:1683	70592	5	True				
ANR	70607	Statement	(	37:7:1684:1684	70592	6	True				
ANR	70608	Statement	new	37:8:1685:1687	70592	7	True				
ANR	70609	Statement	","	37:11:1688:1688	70592	8	True				
ANR	70610	Statement	old	37:13:1690:1692	70592	9	True				
ANR	70611	Statement	","	37:16:1693:1693	70592	10	True				
ANR	70612	Statement	old_size	37:18:1695:1702	70592	11	True				
ANR	70613	Statement	)	37:26:1703:1703	70592	12	True				
ANR	70614	ExpressionStatement		37:27:1704:1704	70592	13	True				
ANR	70615	Statement	return	38:1:1707:1712	70592	14	True				
ANR	70616	Statement	new	38:8:1714:1716	70592	15	True				
ANR	70617	ExpressionStatement		38:11:1717:1717	70592	16	True				
ANR	70618	ReturnType	static inline void *		70592	1					
ANR	70619	Identifier	zend_ast_realloc		70592	2					
ANR	70620	ParameterList	"void * old , size_t old_size , size_t new_size"		70592	3					
ANR	70621	Parameter	void * old	35:37:1591:1599	70592	0	True				
ANR	70622	ParameterType	void *		70592	0					
ANR	70623	Identifier	old		70592	1					
ANR	70624	Parameter	size_t old_size	35:48:1602:1616	70592	1	True				
ANR	70625	ParameterType	size_t		70592	0					
ANR	70626	Identifier	old_size		70592	1					
ANR	70627	Parameter	size_t new_size	35:65:1619:1633	70592	2	True				
ANR	70628	ParameterType	size_t		70592	0					
ANR	70629	Identifier	new_size		70592	1					
ANR	70630	CFGEntryNode	ENTRY		70592		True				
ANR	70631	CFGExitNode	EXIT		70592		True				
ANR	70632	Symbol	old_size		70592						
ANR	70633	Symbol	old		70592						
ANR	70634	Symbol	new_size		70592						
ANR	70635	Function	zend_ast_size	41:0:1722:1857							
ANR	70636	FunctionDef	zend_ast_size (uint32_t children)		70635	0					
ANR	70637	CompoundStatement		41:54:1776:1857	70635	0					
ANR	70638	ReturnStatement	return sizeof ( zend_ast ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children ;	42:1:1779:1855	70635	0	True				
ANR	70639	AdditiveExpression	sizeof ( zend_ast ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		70635	0		-			
ANR	70640	SizeofExpression	sizeof ( zend_ast )		70635	0					
ANR	70641	Sizeof	sizeof		70635	0					
ANR	70642	SizeofOperand	zend_ast		70635	1					
ANR	70643	AdditiveExpression	sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		70635	1		+			
ANR	70644	SizeofExpression	sizeof ( zend_ast * )		70635	0					
ANR	70645	Sizeof	sizeof		70635	0					
ANR	70646	SizeofOperand	zend_ast *		70635	1					
ANR	70647	MultiplicativeExpression	sizeof ( zend_ast * ) * children		70635	1		*			
ANR	70648	SizeofExpression	sizeof ( zend_ast * )		70635	0					
ANR	70649	Sizeof	sizeof		70635	0					
ANR	70650	SizeofOperand	zend_ast *		70635	1					
ANR	70651	Identifier	children		70635	1					
ANR	70652	ReturnType	static inline size_t		70635	1					
ANR	70653	Identifier	zend_ast_size		70635	2					
ANR	70654	ParameterList	uint32_t children		70635	3					
ANR	70655	Parameter	uint32_t children	41:35:1757:1773	70635	0	True				
ANR	70656	ParameterType	uint32_t		70635	0					
ANR	70657	Identifier	children		70635	1					
ANR	70658	CFGEntryNode	ENTRY		70635		True				
ANR	70659	CFGExitNode	EXIT		70635		True				
ANR	70660	Symbol	children		70635						
ANR	70661	Function	zend_ast_list_size	45:0:1860:2005							
ANR	70662	FunctionDef	zend_ast_list_size (uint32_t children)		70661	0					
ANR	70663	CompoundStatement		45:59:1919:2005	70661	0					
ANR	70664	ReturnStatement	return sizeof ( zend_ast_list ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children ;	46:1:1922:2003	70661	0	True				
ANR	70665	AdditiveExpression	sizeof ( zend_ast_list ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		70661	0		-			
ANR	70666	SizeofExpression	sizeof ( zend_ast_list )		70661	0					
ANR	70667	Sizeof	sizeof		70661	0					
ANR	70668	SizeofOperand	zend_ast_list		70661	1					
ANR	70669	AdditiveExpression	sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		70661	1		+			
ANR	70670	SizeofExpression	sizeof ( zend_ast * )		70661	0					
ANR	70671	Sizeof	sizeof		70661	0					
ANR	70672	SizeofOperand	zend_ast *		70661	1					
ANR	70673	MultiplicativeExpression	sizeof ( zend_ast * ) * children		70661	1		*			
ANR	70674	SizeofExpression	sizeof ( zend_ast * )		70661	0					
ANR	70675	Sizeof	sizeof		70661	0					
ANR	70676	SizeofOperand	zend_ast *		70661	1					
ANR	70677	Identifier	children		70661	1					
ANR	70678	ReturnType	static inline size_t		70661	1					
ANR	70679	Identifier	zend_ast_list_size		70661	2					
ANR	70680	ParameterList	uint32_t children		70661	3					
ANR	70681	Parameter	uint32_t children	45:40:1900:1916	70661	0	True				
ANR	70682	ParameterType	uint32_t		70661	0					
ANR	70683	Identifier	children		70661	1					
ANR	70684	CFGEntryNode	ENTRY		70661		True				
ANR	70685	CFGExitNode	EXIT		70661		True				
ANR	70686	Symbol	children		70661						
ANR	70687	Function	zend_ast_create_znode	49:0:2008:2257							
ANR	70688	FunctionDef	zend_ast_create_znode (znode * node)		70687	0					
ANR	70689	CompoundStatement		49:54:2062:2257	70687	0					
ANR	70690	IdentifierDeclStatement	zend_ast_znode * ast ;	50:1:2065:2084	70687	0	True				
ANR	70691	IdentifierDecl	* ast		70687	0					
ANR	70692	IdentifierDeclType	zend_ast_znode *		70687	0					
ANR	70693	Identifier	ast		70687	1					
ANR	70694	ExpressionStatement	ast = zend_ast_alloc ( sizeof ( zend_ast_znode ) )	52:1:2088:2132	70687	1	True				
ANR	70695	AssignmentExpression	ast = zend_ast_alloc ( sizeof ( zend_ast_znode ) )		70687	0		=			
ANR	70696	Identifier	ast		70687	0					
ANR	70697	CallExpression	zend_ast_alloc ( sizeof ( zend_ast_znode ) )		70687	1					
ANR	70698	Callee	zend_ast_alloc		70687	0					
ANR	70699	Identifier	zend_ast_alloc		70687	0					
ANR	70700	ArgumentList	sizeof ( zend_ast_znode )		70687	1					
ANR	70701	Argument	sizeof ( zend_ast_znode )		70687	0					
ANR	70702	SizeofExpression	sizeof ( zend_ast_znode )		70687	0					
ANR	70703	Sizeof	sizeof		70687	0					
ANR	70704	SizeofOperand	zend_ast_znode		70687	1					
ANR	70705	ExpressionStatement	ast -> kind = ZEND_AST_ZNODE	53:1:2135:2161	70687	2	True				
ANR	70706	AssignmentExpression	ast -> kind = ZEND_AST_ZNODE		70687	0		=			
ANR	70707	PtrMemberAccess	ast -> kind		70687	0					
ANR	70708	Identifier	ast		70687	0					
ANR	70709	Identifier	kind		70687	1					
ANR	70710	Identifier	ZEND_AST_ZNODE		70687	1					
ANR	70711	ExpressionStatement	ast -> attr = 0	54:1:2164:2177	70687	3	True				
ANR	70712	AssignmentExpression	ast -> attr = 0		70687	0		=			
ANR	70713	PtrMemberAccess	ast -> attr		70687	0					
ANR	70714	Identifier	ast		70687	0					
ANR	70715	Identifier	attr		70687	1					
ANR	70716	PrimaryExpression	0		70687	1					
ANR	70717	ExpressionStatement	ast -> lineno = CG ( zend_lineno )	55:1:2180:2209	70687	4	True				
ANR	70718	AssignmentExpression	ast -> lineno = CG ( zend_lineno )		70687	0		=			
ANR	70719	PtrMemberAccess	ast -> lineno		70687	0					
ANR	70720	Identifier	ast		70687	0					
ANR	70721	Identifier	lineno		70687	1					
ANR	70722	CallExpression	CG ( zend_lineno )		70687	1					
ANR	70723	Callee	CG		70687	0					
ANR	70724	Identifier	CG		70687	0					
ANR	70725	ArgumentList	zend_lineno		70687	1					
ANR	70726	Argument	zend_lineno		70687	0					
ANR	70727	Identifier	zend_lineno		70687	0					
ANR	70728	ExpressionStatement	ast -> node = * node	56:1:2212:2229	70687	5	True				
ANR	70729	AssignmentExpression	ast -> node = * node		70687	0		=			
ANR	70730	PtrMemberAccess	ast -> node		70687	0					
ANR	70731	Identifier	ast		70687	0					
ANR	70732	Identifier	node		70687	1					
ANR	70733	UnaryOperationExpression	* node		70687	1					
ANR	70734	UnaryOperator	*		70687	0					
ANR	70735	Identifier	node		70687	1					
ANR	70736	ReturnStatement	return ( zend_ast * ) ast ;	57:1:2232:2255	70687	6	True				
ANR	70737	CastExpression	( zend_ast * ) ast		70687	0					
ANR	70738	CastTarget	zend_ast *		70687	0					
ANR	70739	Identifier	ast		70687	1					
ANR	70740	ReturnType	ZEND_API zend_ast *		70687	1					
ANR	70741	Identifier	zend_ast_create_znode		70687	2					
ANR	70742	ParameterList	znode * node		70687	3					
ANR	70743	Parameter	znode * node	49:41:2049:2059	70687	0	True				
ANR	70744	ParameterType	znode *		70687	0					
ANR	70745	Identifier	node		70687	1					
ANR	70746	CFGEntryNode	ENTRY		70687		True				
ANR	70747	CFGExitNode	EXIT		70687		True				
ANR	70748	Symbol	node		70687						
ANR	70749	Symbol	ast -> attr		70687						
ANR	70750	Symbol	ast -> kind		70687						
ANR	70751	Symbol	ast		70687						
ANR	70752	Symbol	* ast		70687						
ANR	70753	Symbol	CG		70687						
ANR	70754	Symbol	ast -> lineno		70687						
ANR	70755	Symbol	zend_ast_alloc		70687						
ANR	70756	Symbol	zend_lineno		70687						
ANR	70757	Symbol	* node		70687						
ANR	70758	Symbol	ast -> node		70687						
ANR	70759	Symbol	ZEND_AST_ZNODE		70687						
ANR	70760	Function	zend_ast_create_zval_ex	60:0:2260:2548							
ANR	70761	FunctionDef	"zend_ast_create_zval_ex (zval * zv , zend_ast_attr attr)"		70760	0					
ANR	70762	CompoundStatement		60:73:2333:2548	70760	0					
ANR	70763	IdentifierDeclStatement	zend_ast_zval * ast ;	61:1:2336:2354	70760	0	True				
ANR	70764	IdentifierDecl	* ast		70760	0					
ANR	70765	IdentifierDeclType	zend_ast_zval *		70760	0					
ANR	70766	Identifier	ast		70760	1					
ANR	70767	ExpressionStatement	ast = zend_ast_alloc ( sizeof ( zend_ast_zval ) )	63:1:2358:2401	70760	1	True				
ANR	70768	AssignmentExpression	ast = zend_ast_alloc ( sizeof ( zend_ast_zval ) )		70760	0		=			
ANR	70769	Identifier	ast		70760	0					
ANR	70770	CallExpression	zend_ast_alloc ( sizeof ( zend_ast_zval ) )		70760	1					
ANR	70771	Callee	zend_ast_alloc		70760	0					
ANR	70772	Identifier	zend_ast_alloc		70760	0					
ANR	70773	ArgumentList	sizeof ( zend_ast_zval )		70760	1					
ANR	70774	Argument	sizeof ( zend_ast_zval )		70760	0					
ANR	70775	SizeofExpression	sizeof ( zend_ast_zval )		70760	0					
ANR	70776	Sizeof	sizeof		70760	0					
ANR	70777	SizeofOperand	zend_ast_zval		70760	1					
ANR	70778	ExpressionStatement	ast -> kind = ZEND_AST_ZVAL	64:1:2404:2429	70760	2	True				
ANR	70779	AssignmentExpression	ast -> kind = ZEND_AST_ZVAL		70760	0		=			
ANR	70780	PtrMemberAccess	ast -> kind		70760	0					
ANR	70781	Identifier	ast		70760	0					
ANR	70782	Identifier	kind		70760	1					
ANR	70783	Identifier	ZEND_AST_ZVAL		70760	1					
ANR	70784	ExpressionStatement	ast -> attr = attr	65:1:2432:2448	70760	3	True				
ANR	70785	AssignmentExpression	ast -> attr = attr		70760	0		=			
ANR	70786	PtrMemberAccess	ast -> attr		70760	0					
ANR	70787	Identifier	ast		70760	0					
ANR	70788	Identifier	attr		70760	1					
ANR	70789	Identifier	attr		70760	1					
ANR	70790	ExpressionStatement	"ZVAL_COPY_VALUE ( & ast -> val , zv )"	66:1:2451:2481	70760	4	True				
ANR	70791	CallExpression	"ZVAL_COPY_VALUE ( & ast -> val , zv )"		70760	0					
ANR	70792	Callee	ZVAL_COPY_VALUE		70760	0					
ANR	70793	Identifier	ZVAL_COPY_VALUE		70760	0					
ANR	70794	ArgumentList	& ast -> val		70760	1					
ANR	70795	Argument	& ast -> val		70760	0					
ANR	70796	UnaryOperationExpression	& ast -> val		70760	0					
ANR	70797	UnaryOperator	&		70760	0					
ANR	70798	PtrMemberAccess	ast -> val		70760	1					
ANR	70799	Identifier	ast		70760	0					
ANR	70800	Identifier	val		70760	1					
ANR	70801	Argument	zv		70760	1					
ANR	70802	Identifier	zv		70760	0					
ANR	70803	ExpressionStatement	ast -> val . u2 . lineno = CG ( zend_lineno )	67:1:2484:2520	70760	5	True				
ANR	70804	AssignmentExpression	ast -> val . u2 . lineno = CG ( zend_lineno )		70760	0		=			
ANR	70805	MemberAccess	ast -> val . u2 . lineno		70760	0					
ANR	70806	MemberAccess	ast -> val . u2		70760	0					
ANR	70807	PtrMemberAccess	ast -> val		70760	0					
ANR	70808	Identifier	ast		70760	0					
ANR	70809	Identifier	val		70760	1					
ANR	70810	Identifier	u2		70760	1					
ANR	70811	Identifier	lineno		70760	1					
ANR	70812	CallExpression	CG ( zend_lineno )		70760	1					
ANR	70813	Callee	CG		70760	0					
ANR	70814	Identifier	CG		70760	0					
ANR	70815	ArgumentList	zend_lineno		70760	1					
ANR	70816	Argument	zend_lineno		70760	0					
ANR	70817	Identifier	zend_lineno		70760	0					
ANR	70818	ReturnStatement	return ( zend_ast * ) ast ;	68:1:2523:2546	70760	6	True				
ANR	70819	CastExpression	( zend_ast * ) ast		70760	0					
ANR	70820	CastTarget	zend_ast *		70760	0					
ANR	70821	Identifier	ast		70760	1					
ANR	70822	ReturnType	ZEND_API zend_ast *		70760	1					
ANR	70823	Identifier	zend_ast_create_zval_ex		70760	2					
ANR	70824	ParameterList	"zval * zv , zend_ast_attr attr"		70760	3					
ANR	70825	Parameter	zval * zv	60:43:2303:2310	70760	0	True				
ANR	70826	ParameterType	zval *		70760	0					
ANR	70827	Identifier	zv		70760	1					
ANR	70828	Parameter	zend_ast_attr attr	60:53:2313:2330	70760	1	True				
ANR	70829	ParameterType	zend_ast_attr		70760	0					
ANR	70830	Identifier	attr		70760	1					
ANR	70831	CFGEntryNode	ENTRY		70760		True				
ANR	70832	CFGExitNode	EXIT		70760		True				
ANR	70833	Symbol	ast -> attr		70760						
ANR	70834	Symbol	ast -> kind		70760						
ANR	70835	Symbol	ast		70760						
ANR	70836	Symbol	CG		70760						
ANR	70837	Symbol	zend_ast_alloc		70760						
ANR	70838	Symbol	& ast -> val		70760						
ANR	70839	Symbol	ast -> val . u2		70760						
ANR	70840	Symbol	* ast		70760						
ANR	70841	Symbol	ast -> val		70760						
ANR	70842	Symbol	ZEND_AST_ZVAL		70760						
ANR	70843	Symbol	zend_lineno		70760						
ANR	70844	Symbol	ast -> val . u2 . lineno		70760						
ANR	70845	Symbol	zv		70760						
ANR	70846	Symbol	attr		70760						
ANR	70847	Function	zend_ast_create_decl	71:0:2551:3183							
ANR	70848	FunctionDef	"zend_ast_create_decl (zend_ast_kind kind , uint32_t flags , uint32_t start_lineno , zend_string * doc_comment , zend_string * name , zend_ast * child0 , zend_ast * child1 , zend_ast * child2 , zend_ast * child3)"		70847	0					
ANR	70849	CompoundStatement		74:2:2771:3183	70847	0					
ANR	70850	IdentifierDeclStatement	zend_ast_decl * ast ;	75:1:2774:2792	70847	0	True				
ANR	70851	IdentifierDecl	* ast		70847	0					
ANR	70852	IdentifierDeclType	zend_ast_decl *		70847	0					
ANR	70853	Identifier	ast		70847	1					
ANR	70854	ExpressionStatement	ast = zend_ast_alloc ( sizeof ( zend_ast_decl ) )	77:1:2796:2839	70847	1	True				
ANR	70855	AssignmentExpression	ast = zend_ast_alloc ( sizeof ( zend_ast_decl ) )		70847	0		=			
ANR	70856	Identifier	ast		70847	0					
ANR	70857	CallExpression	zend_ast_alloc ( sizeof ( zend_ast_decl ) )		70847	1					
ANR	70858	Callee	zend_ast_alloc		70847	0					
ANR	70859	Identifier	zend_ast_alloc		70847	0					
ANR	70860	ArgumentList	sizeof ( zend_ast_decl )		70847	1					
ANR	70861	Argument	sizeof ( zend_ast_decl )		70847	0					
ANR	70862	SizeofExpression	sizeof ( zend_ast_decl )		70847	0					
ANR	70863	Sizeof	sizeof		70847	0					
ANR	70864	SizeofOperand	zend_ast_decl		70847	1					
ANR	70865	ExpressionStatement	ast -> kind = kind	78:1:2842:2858	70847	2	True				
ANR	70866	AssignmentExpression	ast -> kind = kind		70847	0		=			
ANR	70867	PtrMemberAccess	ast -> kind		70847	0					
ANR	70868	Identifier	ast		70847	0					
ANR	70869	Identifier	kind		70847	1					
ANR	70870	Identifier	kind		70847	1					
ANR	70871	ExpressionStatement	ast -> attr = 0	79:1:2861:2874	70847	3	True				
ANR	70872	AssignmentExpression	ast -> attr = 0		70847	0		=			
ANR	70873	PtrMemberAccess	ast -> attr		70847	0					
ANR	70874	Identifier	ast		70847	0					
ANR	70875	Identifier	attr		70847	1					
ANR	70876	PrimaryExpression	0		70847	1					
ANR	70877	ExpressionStatement	ast -> start_lineno = start_lineno	80:1:2877:2909	70847	4	True				
ANR	70878	AssignmentExpression	ast -> start_lineno = start_lineno		70847	0		=			
ANR	70879	PtrMemberAccess	ast -> start_lineno		70847	0					
ANR	70880	Identifier	ast		70847	0					
ANR	70881	Identifier	start_lineno		70847	1					
ANR	70882	Identifier	start_lineno		70847	1					
ANR	70883	ExpressionStatement	ast -> end_lineno = CG ( zend_lineno )	81:1:2912:2945	70847	5	True				
ANR	70884	AssignmentExpression	ast -> end_lineno = CG ( zend_lineno )		70847	0		=			
ANR	70885	PtrMemberAccess	ast -> end_lineno		70847	0					
ANR	70886	Identifier	ast		70847	0					
ANR	70887	Identifier	end_lineno		70847	1					
ANR	70888	CallExpression	CG ( zend_lineno )		70847	1					
ANR	70889	Callee	CG		70847	0					
ANR	70890	Identifier	CG		70847	0					
ANR	70891	ArgumentList	zend_lineno		70847	1					
ANR	70892	Argument	zend_lineno		70847	0					
ANR	70893	Identifier	zend_lineno		70847	0					
ANR	70894	ExpressionStatement	ast -> flags = flags	82:1:2948:2966	70847	6	True				
ANR	70895	AssignmentExpression	ast -> flags = flags		70847	0		=			
ANR	70896	PtrMemberAccess	ast -> flags		70847	0					
ANR	70897	Identifier	ast		70847	0					
ANR	70898	Identifier	flags		70847	1					
ANR	70899	Identifier	flags		70847	1					
ANR	70900	ExpressionStatement	ast -> lex_pos = LANG_SCNG ( yy_text )	83:1:2969:3002	70847	7	True				
ANR	70901	AssignmentExpression	ast -> lex_pos = LANG_SCNG ( yy_text )		70847	0		=			
ANR	70902	PtrMemberAccess	ast -> lex_pos		70847	0					
ANR	70903	Identifier	ast		70847	0					
ANR	70904	Identifier	lex_pos		70847	1					
ANR	70905	CallExpression	LANG_SCNG ( yy_text )		70847	1					
ANR	70906	Callee	LANG_SCNG		70847	0					
ANR	70907	Identifier	LANG_SCNG		70847	0					
ANR	70908	ArgumentList	yy_text		70847	1					
ANR	70909	Argument	yy_text		70847	0					
ANR	70910	Identifier	yy_text		70847	0					
ANR	70911	ExpressionStatement	ast -> doc_comment = doc_comment	84:1:3005:3035	70847	8	True				
ANR	70912	AssignmentExpression	ast -> doc_comment = doc_comment		70847	0		=			
ANR	70913	PtrMemberAccess	ast -> doc_comment		70847	0					
ANR	70914	Identifier	ast		70847	0					
ANR	70915	Identifier	doc_comment		70847	1					
ANR	70916	Identifier	doc_comment		70847	1					
ANR	70917	ExpressionStatement	ast -> name = name	85:1:3038:3054	70847	9	True				
ANR	70918	AssignmentExpression	ast -> name = name		70847	0		=			
ANR	70919	PtrMemberAccess	ast -> name		70847	0					
ANR	70920	Identifier	ast		70847	0					
ANR	70921	Identifier	name		70847	1					
ANR	70922	Identifier	name		70847	1					
ANR	70923	ExpressionStatement	ast -> child [ 0 ] = child0	86:1:3057:3079	70847	10	True				
ANR	70924	AssignmentExpression	ast -> child [ 0 ] = child0		70847	0		=			
ANR	70925	ArrayIndexing	ast -> child [ 0 ]		70847	0					
ANR	70926	PtrMemberAccess	ast -> child		70847	0					
ANR	70927	Identifier	ast		70847	0					
ANR	70928	Identifier	child		70847	1					
ANR	70929	PrimaryExpression	0		70847	1					
ANR	70930	Identifier	child0		70847	1					
ANR	70931	ExpressionStatement	ast -> child [ 1 ] = child1	87:1:3082:3104	70847	11	True				
ANR	70932	AssignmentExpression	ast -> child [ 1 ] = child1		70847	0		=			
ANR	70933	ArrayIndexing	ast -> child [ 1 ]		70847	0					
ANR	70934	PtrMemberAccess	ast -> child		70847	0					
ANR	70935	Identifier	ast		70847	0					
ANR	70936	Identifier	child		70847	1					
ANR	70937	PrimaryExpression	1		70847	1					
ANR	70938	Identifier	child1		70847	1					
ANR	70939	ExpressionStatement	ast -> child [ 2 ] = child2	88:1:3107:3129	70847	12	True				
ANR	70940	AssignmentExpression	ast -> child [ 2 ] = child2		70847	0		=			
ANR	70941	ArrayIndexing	ast -> child [ 2 ]		70847	0					
ANR	70942	PtrMemberAccess	ast -> child		70847	0					
ANR	70943	Identifier	ast		70847	0					
ANR	70944	Identifier	child		70847	1					
ANR	70945	PrimaryExpression	2		70847	1					
ANR	70946	Identifier	child2		70847	1					
ANR	70947	ExpressionStatement	ast -> child [ 3 ] = child3	89:1:3132:3154	70847	13	True				
ANR	70948	AssignmentExpression	ast -> child [ 3 ] = child3		70847	0		=			
ANR	70949	ArrayIndexing	ast -> child [ 3 ]		70847	0					
ANR	70950	PtrMemberAccess	ast -> child		70847	0					
ANR	70951	Identifier	ast		70847	0					
ANR	70952	Identifier	child		70847	1					
ANR	70953	PrimaryExpression	3		70847	1					
ANR	70954	Identifier	child3		70847	1					
ANR	70955	ReturnStatement	return ( zend_ast * ) ast ;	91:1:3158:3181	70847	14	True				
ANR	70956	CastExpression	( zend_ast * ) ast		70847	0					
ANR	70957	CastTarget	zend_ast *		70847	0					
ANR	70958	Identifier	ast		70847	1					
ANR	70959	ReturnType	ZEND_API zend_ast *		70847	1					
ANR	70960	Identifier	zend_ast_create_decl		70847	2					
ANR	70961	ParameterList	"zend_ast_kind kind , uint32_t flags , uint32_t start_lineno , zend_string * doc_comment , zend_string * name , zend_ast * child0 , zend_ast * child1 , zend_ast * child2 , zend_ast * child3"		70847	3					
ANR	70962	Parameter	zend_ast_kind kind	72:1:2593:2610	70847	0	True				
ANR	70963	ParameterType	zend_ast_kind		70847	0					
ANR	70964	Identifier	kind		70847	1					
ANR	70965	Parameter	uint32_t flags	72:21:2613:2626	70847	1	True				
ANR	70966	ParameterType	uint32_t		70847	0					
ANR	70967	Identifier	flags		70847	1					
ANR	70968	Parameter	uint32_t start_lineno	72:37:2629:2649	70847	2	True				
ANR	70969	ParameterType	uint32_t		70847	0					
ANR	70970	Identifier	start_lineno		70847	1					
ANR	70971	Parameter	zend_string * doc_comment	72:60:2652:2675	70847	3	True				
ANR	70972	ParameterType	zend_string *		70847	0					
ANR	70973	Identifier	doc_comment		70847	1					
ANR	70974	Parameter	zend_string * name	73:1:2679:2695	70847	4	True				
ANR	70975	ParameterType	zend_string *		70847	0					
ANR	70976	Identifier	name		70847	1					
ANR	70977	Parameter	zend_ast * child0	73:20:2698:2713	70847	5	True				
ANR	70978	ParameterType	zend_ast *		70847	0					
ANR	70979	Identifier	child0		70847	1					
ANR	70980	Parameter	zend_ast * child1	73:38:2716:2731	70847	6	True				
ANR	70981	ParameterType	zend_ast *		70847	0					
ANR	70982	Identifier	child1		70847	1					
ANR	70983	Parameter	zend_ast * child2	73:56:2734:2749	70847	7	True				
ANR	70984	ParameterType	zend_ast *		70847	0					
ANR	70985	Identifier	child2		70847	1					
ANR	70986	Parameter	zend_ast * child3	73:74:2752:2767	70847	8	True				
ANR	70987	ParameterType	zend_ast *		70847	0					
ANR	70988	Identifier	child3		70847	1					
ANR	70989	CFGEntryNode	ENTRY		70847		True				
ANR	70990	CFGExitNode	EXIT		70847		True				
ANR	70991	Symbol	doc_comment		70847						
ANR	70992	Symbol	ast -> kind		70847						
ANR	70993	Symbol	ast		70847						
ANR	70994	Symbol	zend_ast_alloc		70847						
ANR	70995	Symbol	flags		70847						
ANR	70996	Symbol	start_lineno		70847						
ANR	70997	Symbol	child2		70847						
ANR	70998	Symbol	ast -> start_lineno		70847						
ANR	70999	Symbol	child3		70847						
ANR	71000	Symbol	child0		70847						
ANR	71001	Symbol	child1		70847						
ANR	71002	Symbol	yy_text		70847						
ANR	71003	Symbol	* ast		70847						
ANR	71004	Symbol	ast -> flags		70847						
ANR	71005	Symbol	LANG_SCNG		70847						
ANR	71006	Symbol	* * ast		70847						
ANR	71007	Symbol	zend_lineno		70847						
ANR	71008	Symbol	ast -> attr		70847						
ANR	71009	Symbol	CG		70847						
ANR	71010	Symbol	ast -> doc_comment		70847						
ANR	71011	Symbol	kind		70847						
ANR	71012	Symbol	ast -> end_lineno		70847						
ANR	71013	Symbol	ast -> name		70847						
ANR	71014	Symbol	name		70847						
ANR	71015	Symbol	* ast -> child		70847						
ANR	71016	Symbol	ast -> child		70847						
ANR	71017	Symbol	ast -> lex_pos		70847						
ANR	71018	Function	zend_ast_create_from_va_list	94:0:3186:3797							
ANR	71019	FunctionDef	"zend_ast_create_from_va_list (zend_ast_kind kind , zend_ast_attr attr , va_list va)"		71018	0					
ANR	71020	CompoundStatement		94:98:3284:3797	71018	0					
ANR	71021	IdentifierDeclStatement	"uint32_t i , children = kind >> ZEND_AST_NUM_CHILDREN_SHIFT ;"	95:1:3287:3345	71018	0	True				
ANR	71022	IdentifierDecl	i		71018	0					
ANR	71023	IdentifierDeclType	uint32_t		71018	0					
ANR	71024	Identifier	i		71018	1					
ANR	71025	IdentifierDecl	children = kind >> ZEND_AST_NUM_CHILDREN_SHIFT		71018	1					
ANR	71026	IdentifierDeclType	uint32_t		71018	0					
ANR	71027	Identifier	children		71018	1					
ANR	71028	AssignmentExpression	children = kind >> ZEND_AST_NUM_CHILDREN_SHIFT		71018	2		=			
ANR	71029	Identifier	children		71018	0					
ANR	71030	ShiftExpression	kind >> ZEND_AST_NUM_CHILDREN_SHIFT		71018	1		>>			
ANR	71031	Identifier	kind		71018	0					
ANR	71032	Identifier	ZEND_AST_NUM_CHILDREN_SHIFT		71018	1					
ANR	71033	IdentifierDeclStatement	zend_ast * ast ;	96:1:3348:3361	71018	1	True				
ANR	71034	IdentifierDecl	* ast		71018	0					
ANR	71035	IdentifierDeclType	zend_ast *		71018	0					
ANR	71036	Identifier	ast		71018	1					
ANR	71037	ExpressionStatement	ast = zend_ast_alloc ( zend_ast_size ( children ) )	98:1:3365:3410	71018	2	True				
ANR	71038	AssignmentExpression	ast = zend_ast_alloc ( zend_ast_size ( children ) )		71018	0		=			
ANR	71039	Identifier	ast		71018	0					
ANR	71040	CallExpression	zend_ast_alloc ( zend_ast_size ( children ) )		71018	1					
ANR	71041	Callee	zend_ast_alloc		71018	0					
ANR	71042	Identifier	zend_ast_alloc		71018	0					
ANR	71043	ArgumentList	zend_ast_size ( children )		71018	1					
ANR	71044	Argument	zend_ast_size ( children )		71018	0					
ANR	71045	CallExpression	zend_ast_size ( children )		71018	0					
ANR	71046	Callee	zend_ast_size		71018	0					
ANR	71047	Identifier	zend_ast_size		71018	0					
ANR	71048	ArgumentList	children		71018	1					
ANR	71049	Argument	children		71018	0					
ANR	71050	Identifier	children		71018	0					
ANR	71051	ExpressionStatement	ast -> kind = kind	99:1:3413:3429	71018	3	True				
ANR	71052	AssignmentExpression	ast -> kind = kind		71018	0		=			
ANR	71053	PtrMemberAccess	ast -> kind		71018	0					
ANR	71054	Identifier	ast		71018	0					
ANR	71055	Identifier	kind		71018	1					
ANR	71056	Identifier	kind		71018	1					
ANR	71057	ExpressionStatement	ast -> attr = attr	100:1:3432:3448	71018	4	True				
ANR	71058	AssignmentExpression	ast -> attr = attr		71018	0		=			
ANR	71059	PtrMemberAccess	ast -> attr		71018	0					
ANR	71060	Identifier	ast		71018	0					
ANR	71061	Identifier	attr		71018	1					
ANR	71062	Identifier	attr		71018	1					
ANR	71063	ExpressionStatement	ast -> lineno = ( uint32_t ) - 1	101:1:3451:3478	71018	5	True				
ANR	71064	AssignmentExpression	ast -> lineno = ( uint32_t ) - 1		71018	0		=			
ANR	71065	PtrMemberAccess	ast -> lineno		71018	0					
ANR	71066	Identifier	ast		71018	0					
ANR	71067	Identifier	lineno		71018	1					
ANR	71068	CastExpression	( uint32_t ) - 1		71018	1					
ANR	71069	CastTarget	uint32_t		71018	0					
ANR	71070	UnaryOperationExpression	- 1		71018	1					
ANR	71071	UnaryOperator	-		71018	0					
ANR	71072	PrimaryExpression	1		71018	1					
ANR	71073	ForStatement	for ( i = 0 ; i < children ; ++ i )		71018	6					
ANR	71074	ForInit	i = 0 ;	103:6:3487:3492	71018	0	True				
ANR	71075	AssignmentExpression	i = 0		71018	0		=			
ANR	71076	Identifier	i		71018	0					
ANR	71077	PrimaryExpression	0		71018	1					
ANR	71078	Condition	i < children	103:13:3494:3505	71018	1	True				
ANR	71079	RelationalExpression	i < children		71018	0		<			
ANR	71080	Identifier	i		71018	0					
ANR	71081	Identifier	children		71018	1					
ANR	71082	UnaryExpression	++ i	103:27:3508:3510	71018	2	True				
ANR	71083	IncDec	++		71018	0					
ANR	71084	Identifier	i		71018	1					
ANR	71085	CompoundStatement		10:32:228:228	71018	3					
ANR	71086	Statement	ast	104:2:3517:3519	71018	0	True				
ANR	71087	Statement	->	104:5:3520:3521	71018	1	True				
ANR	71088	Statement	child	104:7:3522:3526	71018	2	True				
ANR	71089	Statement	[	104:12:3527:3527	71018	3	True				
ANR	71090	Statement	i	104:13:3528:3528	71018	4	True				
ANR	71091	Statement	]	104:14:3529:3529	71018	5	True				
ANR	71092	Statement	=	104:16:3531:3531	71018	6	True				
ANR	71093	Statement	va_arg	104:18:3533:3538	71018	7	True				
ANR	71094	Statement	(	104:24:3539:3539	71018	8	True				
ANR	71095	Statement	va	104:25:3540:3541	71018	9	True				
ANR	71096	Statement	","	104:27:3542:3542	71018	10	True				
ANR	71097	Statement	zend_ast	104:29:3544:3551	71018	11	True				
ANR	71098	Statement	*	104:38:3553:3553	71018	12	True				
ANR	71099	Statement	)	104:39:3554:3554	71018	13	True				
ANR	71100	ExpressionStatement		104:40:3555:3555	71018	14	True				
ANR	71101	IfStatement	if ( ast -> child [ i ] != NULL )		71018	15					
ANR	71102	Condition	ast -> child [ i ] != NULL	105:6:3563:3583	71018	0	True				
ANR	71103	EqualityExpression	ast -> child [ i ] != NULL		71018	0		!=			
ANR	71104	ArrayIndexing	ast -> child [ i ]		71018	0					
ANR	71105	PtrMemberAccess	ast -> child		71018	0					
ANR	71106	Identifier	ast		71018	0					
ANR	71107	Identifier	child		71018	1					
ANR	71108	Identifier	i		71018	1					
ANR	71109	Identifier	NULL		71018	1					
ANR	71110	CompoundStatement		13:3:306:358	71018	1					
ANR	71111	IdentifierDeclStatement	uint32_t lineno = zend_ast_get_lineno ( ast -> child [ i ] ) ;	106:3:3591:3643	71018	0	True				
ANR	71112	IdentifierDecl	lineno = zend_ast_get_lineno ( ast -> child [ i ] )		71018	0					
ANR	71113	IdentifierDeclType	uint32_t		71018	0					
ANR	71114	Identifier	lineno		71018	1					
ANR	71115	AssignmentExpression	lineno = zend_ast_get_lineno ( ast -> child [ i ] )		71018	2		=			
ANR	71116	Identifier	lineno		71018	0					
ANR	71117	CallExpression	zend_ast_get_lineno ( ast -> child [ i ] )		71018	1					
ANR	71118	Callee	zend_ast_get_lineno		71018	0					
ANR	71119	Identifier	zend_ast_get_lineno		71018	0					
ANR	71120	ArgumentList	ast -> child [ i ]		71018	1					
ANR	71121	Argument	ast -> child [ i ]		71018	0					
ANR	71122	ArrayIndexing	ast -> child [ i ]		71018	0					
ANR	71123	PtrMemberAccess	ast -> child		71018	0					
ANR	71124	Identifier	ast		71018	0					
ANR	71125	Identifier	child		71018	1					
ANR	71126	Identifier	i		71018	1					
ANR	71127	IfStatement	if ( lineno < ast -> lineno )		71018	1					
ANR	71128	Condition	lineno < ast -> lineno	107:7:3652:3671	71018	0	True				
ANR	71129	RelationalExpression	lineno < ast -> lineno		71018	0		<			
ANR	71130	Identifier	lineno		71018	0					
ANR	71131	PtrMemberAccess	ast -> lineno		71018	1					
ANR	71132	Identifier	ast		71018	0					
ANR	71133	Identifier	lineno		71018	1					
ANR	71134	CompoundStatement		14:29:389:389	71018	1					
ANR	71135	ExpressionStatement	ast -> lineno = lineno	108:4:3680:3700	71018	0	True				
ANR	71136	AssignmentExpression	ast -> lineno = lineno		71018	0		=			
ANR	71137	PtrMemberAccess	ast -> lineno		71018	0					
ANR	71138	Identifier	ast		71018	0					
ANR	71139	Identifier	lineno		71018	1					
ANR	71140	Identifier	lineno		71018	1					
ANR	71141	IfStatement	if ( ast -> lineno == UINT_MAX )		71018	7					
ANR	71142	Condition	ast -> lineno == UINT_MAX	113:5:3720:3742	71018	0	True				
ANR	71143	EqualityExpression	ast -> lineno == UINT_MAX		71018	0		==			
ANR	71144	PtrMemberAccess	ast -> lineno		71018	0					
ANR	71145	Identifier	ast		71018	0					
ANR	71146	Identifier	lineno		71018	1					
ANR	71147	Identifier	UINT_MAX		71018	1					
ANR	71148	CompoundStatement		20:30:460:460	71018	1					
ANR	71149	ExpressionStatement	ast -> lineno = CG ( zend_lineno )	114:2:3749:3778	71018	0	True				
ANR	71150	AssignmentExpression	ast -> lineno = CG ( zend_lineno )		71018	0		=			
ANR	71151	PtrMemberAccess	ast -> lineno		71018	0					
ANR	71152	Identifier	ast		71018	0					
ANR	71153	Identifier	lineno		71018	1					
ANR	71154	CallExpression	CG ( zend_lineno )		71018	1					
ANR	71155	Callee	CG		71018	0					
ANR	71156	Identifier	CG		71018	0					
ANR	71157	ArgumentList	zend_lineno		71018	1					
ANR	71158	Argument	zend_lineno		71018	0					
ANR	71159	Identifier	zend_lineno		71018	0					
ANR	71160	ReturnStatement	return ast ;	117:1:3785:3795	71018	8	True				
ANR	71161	Identifier	ast		71018	0					
ANR	71162	ReturnType	static zend_ast *		71018	1					
ANR	71163	Identifier	zend_ast_create_from_va_list		71018	2					
ANR	71164	ParameterList	"zend_ast_kind kind , zend_ast_attr attr , va_list va"		71018	3					
ANR	71165	Parameter	zend_ast_kind kind	94:46:3232:3249	71018	0	True				
ANR	71166	ParameterType	zend_ast_kind		71018	0					
ANR	71167	Identifier	kind		71018	1					
ANR	71168	Parameter	zend_ast_attr attr	94:66:3252:3269	71018	1	True				
ANR	71169	ParameterType	zend_ast_attr		71018	0					
ANR	71170	Identifier	attr		71018	1					
ANR	71171	Parameter	va_list va	94:86:3272:3281	71018	2	True				
ANR	71172	ParameterType	va_list		71018	0					
ANR	71173	Identifier	va		71018	1					
ANR	71174	CFGEntryNode	ENTRY		71018		True				
ANR	71175	CFGExitNode	EXIT		71018		True				
ANR	71176	Symbol	ast -> attr		71018						
ANR	71177	Symbol	ast -> kind		71018						
ANR	71178	Symbol	ast		71018						
ANR	71179	Symbol	NULL		71018						
ANR	71180	Symbol	CG		71018						
ANR	71181	Symbol	kind		71018						
ANR	71182	Symbol	ast -> lineno		71018						
ANR	71183	Symbol	zend_ast_alloc		71018						
ANR	71184	Symbol	i		71018						
ANR	71185	Symbol	zend_ast_get_lineno		71018						
ANR	71186	Symbol	va		71018						
ANR	71187	Symbol	UINT_MAX		71018						
ANR	71188	Symbol	* ast		71018						
ANR	71189	Symbol	* i		71018						
ANR	71190	Symbol	lineno		71018						
ANR	71191	Symbol	children		71018						
ANR	71192	Symbol	* * ast		71018						
ANR	71193	Symbol	zend_lineno		71018						
ANR	71194	Symbol	* ast -> child		71018						
ANR	71195	Symbol	attr		71018						
ANR	71196	Symbol	ZEND_AST_NUM_CHILDREN_SHIFT		71018						
ANR	71197	Symbol	ast -> child		71018						
ANR	71198	Symbol	zend_ast_size		71018						
ANR	71199	Function	zend_ast_create_ex	120:0:3800:4016							
ANR	71200	FunctionDef	"zend_ast_create_ex (zend_ast_kind kind , zend_ast_attr attr)"		71199	0					
ANR	71201	CompoundStatement		120:83:3883:4016	71199	0					
ANR	71202	IdentifierDeclStatement	va_list va ;	121:1:3886:3896	71199	0	True				
ANR	71203	IdentifierDecl	va		71199	0					
ANR	71204	IdentifierDeclType	va_list		71199	0					
ANR	71205	Identifier	va		71199	1					
ANR	71206	IdentifierDeclStatement	zend_ast * ast ;	122:1:3899:3912	71199	1	True				
ANR	71207	IdentifierDecl	* ast		71199	0					
ANR	71208	IdentifierDeclType	zend_ast *		71199	0					
ANR	71209	Identifier	ast		71199	1					
ANR	71210	ExpressionStatement	"va_start ( va , attr )"	124:1:3916:3934	71199	2	True				
ANR	71211	CallExpression	"va_start ( va , attr )"		71199	0					
ANR	71212	Callee	va_start		71199	0					
ANR	71213	Identifier	va_start		71199	0					
ANR	71214	ArgumentList	va		71199	1					
ANR	71215	Argument	va		71199	0					
ANR	71216	Identifier	va		71199	0					
ANR	71217	Argument	attr		71199	1					
ANR	71218	Identifier	attr		71199	0					
ANR	71219	ExpressionStatement	"ast = zend_ast_create_from_va_list ( kind , attr , va )"	125:1:3937:3987	71199	3	True				
ANR	71220	AssignmentExpression	"ast = zend_ast_create_from_va_list ( kind , attr , va )"		71199	0		=			
ANR	71221	Identifier	ast		71199	0					
ANR	71222	CallExpression	"zend_ast_create_from_va_list ( kind , attr , va )"		71199	1					
ANR	71223	Callee	zend_ast_create_from_va_list		71199	0					
ANR	71224	Identifier	zend_ast_create_from_va_list		71199	0					
ANR	71225	ArgumentList	kind		71199	1					
ANR	71226	Argument	kind		71199	0					
ANR	71227	Identifier	kind		71199	0					
ANR	71228	Argument	attr		71199	1					
ANR	71229	Identifier	attr		71199	0					
ANR	71230	Argument	va		71199	2					
ANR	71231	Identifier	va		71199	0					
ANR	71232	ExpressionStatement	va_end ( va )	126:1:3990:4000	71199	4	True				
ANR	71233	CallExpression	va_end ( va )		71199	0					
ANR	71234	Callee	va_end		71199	0					
ANR	71235	Identifier	va_end		71199	0					
ANR	71236	ArgumentList	va		71199	1					
ANR	71237	Argument	va		71199	0					
ANR	71238	Identifier	va		71199	0					
ANR	71239	ReturnStatement	return ast ;	128:1:4004:4014	71199	5	True				
ANR	71240	Identifier	ast		71199	0					
ANR	71241	ReturnType	ZEND_API zend_ast *		71199	1					
ANR	71242	Identifier	zend_ast_create_ex		71199	2					
ANR	71243	ParameterList	"zend_ast_kind kind , zend_ast_attr attr"		71199	3					
ANR	71244	Parameter	zend_ast_kind kind	120:38:3838:3855	71199	0	True				
ANR	71245	ParameterType	zend_ast_kind		71199	0					
ANR	71246	Identifier	kind		71199	1					
ANR	71247	Parameter	zend_ast_attr attr	120:58:3858:3875	71199	1	True				
ANR	71248	ParameterType	zend_ast_attr		71199	0					
ANR	71249	Identifier	attr		71199	1					
ANR	71250	CFGEntryNode	ENTRY		71199		True				
ANR	71251	CFGExitNode	EXIT		71199		True				
ANR	71252	Symbol	ast		71199						
ANR	71253	Symbol	zend_ast_create_from_va_list		71199						
ANR	71254	Symbol	kind		71199						
ANR	71255	Symbol	va		71199						
ANR	71256	Symbol	attr		71199						
ANR	71257	Function	zend_ast_create	131:0:4019:4209							
ANR	71258	FunctionDef	zend_ast_create (zend_ast_kind kind)		71257	0					
ANR	71259	CompoundStatement		131:60:4079:4209	71257	0					
ANR	71260	IdentifierDeclStatement	va_list va ;	132:1:4082:4092	71257	0	True				
ANR	71261	IdentifierDecl	va		71257	0					
ANR	71262	IdentifierDeclType	va_list		71257	0					
ANR	71263	Identifier	va		71257	1					
ANR	71264	IdentifierDeclStatement	zend_ast * ast ;	133:1:4095:4108	71257	1	True				
ANR	71265	IdentifierDecl	* ast		71257	0					
ANR	71266	IdentifierDeclType	zend_ast *		71257	0					
ANR	71267	Identifier	ast		71257	1					
ANR	71268	ExpressionStatement	"va_start ( va , kind )"	135:1:4112:4130	71257	2	True				
ANR	71269	CallExpression	"va_start ( va , kind )"		71257	0					
ANR	71270	Callee	va_start		71257	0					
ANR	71271	Identifier	va_start		71257	0					
ANR	71272	ArgumentList	va		71257	1					
ANR	71273	Argument	va		71257	0					
ANR	71274	Identifier	va		71257	0					
ANR	71275	Argument	kind		71257	1					
ANR	71276	Identifier	kind		71257	0					
ANR	71277	ExpressionStatement	"ast = zend_ast_create_from_va_list ( kind , 0 , va )"	136:1:4133:4180	71257	3	True				
ANR	71278	AssignmentExpression	"ast = zend_ast_create_from_va_list ( kind , 0 , va )"		71257	0		=			
ANR	71279	Identifier	ast		71257	0					
ANR	71280	CallExpression	"zend_ast_create_from_va_list ( kind , 0 , va )"		71257	1					
ANR	71281	Callee	zend_ast_create_from_va_list		71257	0					
ANR	71282	Identifier	zend_ast_create_from_va_list		71257	0					
ANR	71283	ArgumentList	kind		71257	1					
ANR	71284	Argument	kind		71257	0					
ANR	71285	Identifier	kind		71257	0					
ANR	71286	Argument	0		71257	1					
ANR	71287	PrimaryExpression	0		71257	0					
ANR	71288	Argument	va		71257	2					
ANR	71289	Identifier	va		71257	0					
ANR	71290	ExpressionStatement	va_end ( va )	137:1:4183:4193	71257	4	True				
ANR	71291	CallExpression	va_end ( va )		71257	0					
ANR	71292	Callee	va_end		71257	0					
ANR	71293	Identifier	va_end		71257	0					
ANR	71294	ArgumentList	va		71257	1					
ANR	71295	Argument	va		71257	0					
ANR	71296	Identifier	va		71257	0					
ANR	71297	ReturnStatement	return ast ;	139:1:4197:4207	71257	5	True				
ANR	71298	Identifier	ast		71257	0					
ANR	71299	ReturnType	ZEND_API zend_ast *		71257	1					
ANR	71300	Identifier	zend_ast_create		71257	2					
ANR	71301	ParameterList	zend_ast_kind kind		71257	3					
ANR	71302	Parameter	zend_ast_kind kind	131:35:4054:4071	71257	0	True				
ANR	71303	ParameterType	zend_ast_kind		71257	0					
ANR	71304	Identifier	kind		71257	1					
ANR	71305	CFGEntryNode	ENTRY		71257		True				
ANR	71306	CFGExitNode	EXIT		71257		True				
ANR	71307	Symbol	ast		71257						
ANR	71308	Symbol	zend_ast_create_from_va_list		71257						
ANR	71309	Symbol	kind		71257						
ANR	71310	Symbol	va		71257						
ANR	71311	Function	zend_ast_create_list	142:0:4212:4696							
ANR	71312	FunctionDef	"zend_ast_create_list (uint32_t init_children , zend_ast_kind kind)"		71311	0					
ANR	71313	CompoundStatement		142:89:4301:4696	71311	0					
ANR	71314	IdentifierDeclStatement	zend_ast * ast ;	143:1:4304:4317	71311	0	True				
ANR	71315	IdentifierDecl	* ast		71311	0					
ANR	71316	IdentifierDeclType	zend_ast *		71311	0					
ANR	71317	Identifier	ast		71311	1					
ANR	71318	IdentifierDeclStatement	zend_ast_list * list ;	144:1:4320:4339	71311	1	True				
ANR	71319	IdentifierDecl	* list		71311	0					
ANR	71320	IdentifierDeclType	zend_ast_list *		71311	0					
ANR	71321	Identifier	list		71311	1					
ANR	71322	ExpressionStatement	ast = zend_ast_alloc ( zend_ast_list_size ( 4 ) )	146:1:4343:4386	71311	2	True				
ANR	71323	AssignmentExpression	ast = zend_ast_alloc ( zend_ast_list_size ( 4 ) )		71311	0		=			
ANR	71324	Identifier	ast		71311	0					
ANR	71325	CallExpression	zend_ast_alloc ( zend_ast_list_size ( 4 ) )		71311	1					
ANR	71326	Callee	zend_ast_alloc		71311	0					
ANR	71327	Identifier	zend_ast_alloc		71311	0					
ANR	71328	ArgumentList	zend_ast_list_size ( 4 )		71311	1					
ANR	71329	Argument	zend_ast_list_size ( 4 )		71311	0					
ANR	71330	CallExpression	zend_ast_list_size ( 4 )		71311	0					
ANR	71331	Callee	zend_ast_list_size		71311	0					
ANR	71332	Identifier	zend_ast_list_size		71311	0					
ANR	71333	ArgumentList	4		71311	1					
ANR	71334	Argument	4		71311	0					
ANR	71335	PrimaryExpression	4		71311	0					
ANR	71336	ExpressionStatement	list = ( zend_ast_list * ) ast	147:1:4389:4417	71311	3	True				
ANR	71337	AssignmentExpression	list = ( zend_ast_list * ) ast		71311	0		=			
ANR	71338	Identifier	list		71311	0					
ANR	71339	CastExpression	( zend_ast_list * ) ast		71311	1					
ANR	71340	CastTarget	zend_ast_list *		71311	0					
ANR	71341	Identifier	ast		71311	1					
ANR	71342	ExpressionStatement	list -> kind = kind	148:1:4420:4437	71311	4	True				
ANR	71343	AssignmentExpression	list -> kind = kind		71311	0		=			
ANR	71344	PtrMemberAccess	list -> kind		71311	0					
ANR	71345	Identifier	list		71311	0					
ANR	71346	Identifier	kind		71311	1					
ANR	71347	Identifier	kind		71311	1					
ANR	71348	ExpressionStatement	list -> attr = 0	149:1:4440:4454	71311	5	True				
ANR	71349	AssignmentExpression	list -> attr = 0		71311	0		=			
ANR	71350	PtrMemberAccess	list -> attr		71311	0					
ANR	71351	Identifier	list		71311	0					
ANR	71352	Identifier	attr		71311	1					
ANR	71353	PrimaryExpression	0		71311	1					
ANR	71354	ExpressionStatement	list -> lineno = CG ( zend_lineno )	150:1:4457:4487	71311	6	True				
ANR	71355	AssignmentExpression	list -> lineno = CG ( zend_lineno )		71311	0		=			
ANR	71356	PtrMemberAccess	list -> lineno		71311	0					
ANR	71357	Identifier	list		71311	0					
ANR	71358	Identifier	lineno		71311	1					
ANR	71359	CallExpression	CG ( zend_lineno )		71311	1					
ANR	71360	Callee	CG		71311	0					
ANR	71361	Identifier	CG		71311	0					
ANR	71362	ArgumentList	zend_lineno		71311	1					
ANR	71363	Argument	zend_lineno		71311	0					
ANR	71364	Identifier	zend_lineno		71311	0					
ANR	71365	ExpressionStatement	list -> children = 0	151:1:4490:4508	71311	7	True				
ANR	71366	AssignmentExpression	list -> children = 0		71311	0		=			
ANR	71367	PtrMemberAccess	list -> children		71311	0					
ANR	71368	Identifier	list		71311	0					
ANR	71369	Identifier	children		71311	1					
ANR	71370	PrimaryExpression	0		71311	1					
ANR	71371	CompoundStatement		14:2:228:238	71311	8					
ANR	71372	IdentifierDeclStatement	va_list va ;	154:2:4516:4526	71311	0	True				
ANR	71373	IdentifierDecl	va		71311	0					
ANR	71374	IdentifierDeclType	va_list		71311	0					
ANR	71375	Identifier	va		71311	1					
ANR	71376	IdentifierDeclStatement	uint32_t i ;	155:2:4530:4540	71311	1	True				
ANR	71377	IdentifierDecl	i		71311	0					
ANR	71378	IdentifierDeclType	uint32_t		71311	0					
ANR	71379	Identifier	i		71311	1					
ANR	71380	ExpressionStatement	"va_start ( va , kind )"	156:2:4544:4562	71311	2	True				
ANR	71381	CallExpression	"va_start ( va , kind )"		71311	0					
ANR	71382	Callee	va_start		71311	0					
ANR	71383	Identifier	va_start		71311	0					
ANR	71384	ArgumentList	va		71311	1					
ANR	71385	Argument	va		71311	0					
ANR	71386	Identifier	va		71311	0					
ANR	71387	Argument	kind		71311	1					
ANR	71388	Identifier	kind		71311	0					
ANR	71389	ForStatement	for ( i = 0 ; i < init_children ; ++ i )		71311	3					
ANR	71390	ForInit	i = 0 ;	157:7:4571:4576	71311	0	True				
ANR	71391	AssignmentExpression	i = 0		71311	0		=			
ANR	71392	Identifier	i		71311	0					
ANR	71393	PrimaryExpression	0		71311	1					
ANR	71394	Condition	i < init_children	157:14:4578:4594	71311	1	True				
ANR	71395	RelationalExpression	i < init_children		71311	0		<			
ANR	71396	Identifier	i		71311	0					
ANR	71397	Identifier	init_children		71311	1					
ANR	71398	UnaryExpression	++ i	157:33:4597:4599	71311	2	True				
ANR	71399	IncDec	++		71311	0					
ANR	71400	Identifier	i		71311	1					
ANR	71401	CompoundStatement		16:38:300:300	71311	3					
ANR	71402	Statement	ast	158:3:4607:4609	71311	0	True				
ANR	71403	Statement	=	158:7:4611:4611	71311	1	True				
ANR	71404	Statement	zend_ast_list_add	158:9:4613:4629	71311	2	True				
ANR	71405	Statement	(	158:26:4630:4630	71311	3	True				
ANR	71406	Statement	ast	158:27:4631:4633	71311	4	True				
ANR	71407	Statement	","	158:30:4634:4634	71311	5	True				
ANR	71408	Statement	va_arg	158:32:4636:4641	71311	6	True				
ANR	71409	Statement	(	158:38:4642:4642	71311	7	True				
ANR	71410	Statement	va	158:39:4643:4644	71311	8	True				
ANR	71411	Statement	","	158:41:4645:4645	71311	9	True				
ANR	71412	Statement	zend_ast	158:43:4647:4654	71311	10	True				
ANR	71413	Statement	*	158:52:4656:4656	71311	11	True				
ANR	71414	Statement	)	158:53:4657:4657	71311	12	True				
ANR	71415	Statement	)	158:54:4658:4658	71311	13	True				
ANR	71416	ExpressionStatement		158:55:4659:4659	71311	14	True				
ANR	71417	ExpressionStatement	va_end ( va )	160:2:4667:4677	71311	4	True				
ANR	71418	CallExpression	va_end ( va )		71311	0					
ANR	71419	Callee	va_end		71311	0					
ANR	71420	Identifier	va_end		71311	0					
ANR	71421	ArgumentList	va		71311	1					
ANR	71422	Argument	va		71311	0					
ANR	71423	Identifier	va		71311	0					
ANR	71424	ReturnStatement	return ast ;	163:1:4684:4694	71311	9	True				
ANR	71425	Identifier	ast		71311	0					
ANR	71426	ReturnType	ZEND_API zend_ast *		71311	1					
ANR	71427	Identifier	zend_ast_create_list		71311	2					
ANR	71428	ParameterList	"uint32_t init_children , zend_ast_kind kind"		71311	3					
ANR	71429	Parameter	uint32_t init_children	142:40:4252:4273	71311	0	True				
ANR	71430	ParameterType	uint32_t		71311	0					
ANR	71431	Identifier	init_children		71311	1					
ANR	71432	Parameter	zend_ast_kind kind	142:64:4276:4293	71311	1	True				
ANR	71433	ParameterType	zend_ast_kind		71311	0					
ANR	71434	Identifier	kind		71311	1					
ANR	71435	CFGEntryNode	ENTRY		71311		True				
ANR	71436	CFGExitNode	EXIT		71311		True				
ANR	71437	Symbol	ast		71311						
ANR	71438	Symbol	list -> attr		71311						
ANR	71439	Symbol	CG		71311						
ANR	71440	Symbol	kind		71311						
ANR	71441	Symbol	zend_ast_alloc		71311						
ANR	71442	Symbol	i		71311						
ANR	71443	Symbol	list -> lineno		71311						
ANR	71444	Symbol	va		71311						
ANR	71445	Symbol	list		71311						
ANR	71446	Symbol	* list		71311						
ANR	71447	Symbol	init_children		71311						
ANR	71448	Symbol	zend_lineno		71311						
ANR	71449	Symbol	zend_ast_list_size		71311						
ANR	71450	Symbol	list -> children		71311						
ANR	71451	Symbol	list -> kind		71311						
ANR	71452	Function	is_power_of_two	166:0:4699:4798							
ANR	71453	FunctionDef	is_power_of_two (uint32_t n)		71452	0					
ANR	71454	CompoundStatement		166:52:4751:4798	71452	0					
ANR	71455	ReturnStatement	return ( ( n != 0 ) && ( n == ( n & ( ~n + 1 ) ) ) ) ;	167:1:4754:4796	71452	0	True				
ANR	71456	AndExpression	( n != 0 ) && ( n == ( n & ( ~n + 1 ) ) )		71452	0		&&			
ANR	71457	EqualityExpression	n != 0		71452	0		!=			
ANR	71458	Identifier	n		71452	0					
ANR	71459	PrimaryExpression	0		71452	1					
ANR	71460	EqualityExpression	n == ( n & ( ~n + 1 ) )		71452	1		==			
ANR	71461	Identifier	n		71452	0					
ANR	71462	BitAndExpression	n & ( ~n + 1 )		71452	1		&			
ANR	71463	Identifier	n		71452	0					
ANR	71464	AdditiveExpression	~n + 1		71452	1		+			
ANR	71465	Identifier	~n		71452	0					
ANR	71466	PrimaryExpression	1		71452	1					
ANR	71467	ReturnType	static inline zend_bool		71452	1					
ANR	71468	Identifier	is_power_of_two		71452	2					
ANR	71469	ParameterList	uint32_t n		71452	3					
ANR	71470	Parameter	uint32_t n	166:40:4739:4748	71452	0	True				
ANR	71471	ParameterType	uint32_t		71452	0					
ANR	71472	Identifier	n		71452	1					
ANR	71473	CFGEntryNode	ENTRY		71452		True				
ANR	71474	CFGExitNode	EXIT		71452		True				
ANR	71475	Symbol	~n		71452						
ANR	71476	Symbol	n		71452						
ANR	71477	Function	zend_ast_list_add	170:0:4801:5159							
ANR	71478	FunctionDef	"zend_ast_list_add (zend_ast * ast , zend_ast * op)"		71477	0					
ANR	71479	CompoundStatement		170:66:4867:5159	71477	0					
ANR	71480	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	171:1:4870:4914	71477	0	True				
ANR	71481	IdentifierDecl	* list = zend_ast_get_list ( ast )		71477	0					
ANR	71482	IdentifierDeclType	zend_ast_list *		71477	0					
ANR	71483	Identifier	list		71477	1					
ANR	71484	AssignmentExpression	* list = zend_ast_get_list ( ast )		71477	2		=			
ANR	71485	Identifier	list		71477	0					
ANR	71486	CallExpression	zend_ast_get_list ( ast )		71477	1					
ANR	71487	Callee	zend_ast_get_list		71477	0					
ANR	71488	Identifier	zend_ast_get_list		71477	0					
ANR	71489	ArgumentList	ast		71477	1					
ANR	71490	Argument	ast		71477	0					
ANR	71491	Identifier	ast		71477	0					
ANR	71492	IfStatement	if ( list -> children >= 4 && is_power_of_two ( list -> children ) )		71477	1					
ANR	71493	Condition	list -> children >= 4 && is_power_of_two ( list -> children )	172:5:4921:4974	71477	0	True				
ANR	71494	AndExpression	list -> children >= 4 && is_power_of_two ( list -> children )		71477	0		&&			
ANR	71495	RelationalExpression	list -> children >= 4		71477	0		>=			
ANR	71496	PtrMemberAccess	list -> children		71477	0					
ANR	71497	Identifier	list		71477	0					
ANR	71498	Identifier	children		71477	1					
ANR	71499	PrimaryExpression	4		71477	1					
ANR	71500	CallExpression	is_power_of_two ( list -> children )		71477	1					
ANR	71501	Callee	is_power_of_two		71477	0					
ANR	71502	Identifier	is_power_of_two		71477	0					
ANR	71503	ArgumentList	list -> children		71477	1					
ANR	71504	Argument	list -> children		71477	0					
ANR	71505	PtrMemberAccess	list -> children		71477	0					
ANR	71506	Identifier	list		71477	0					
ANR	71507	Identifier	children		71477	1					
ANR	71508	CompoundStatement		3:61:109:109	71477	1					
ANR	71509	ExpressionStatement	"list = zend_ast_realloc ( list , zend_ast_list_size ( list -> children ) , zend_ast_list_size ( list -> children * 2 ) )"	173:3:4982:5090	71477	0	True				
ANR	71510	AssignmentExpression	"list = zend_ast_realloc ( list , zend_ast_list_size ( list -> children ) , zend_ast_list_size ( list -> children * 2 ) )"		71477	0		=			
ANR	71511	Identifier	list		71477	0					
ANR	71512	CallExpression	"zend_ast_realloc ( list , zend_ast_list_size ( list -> children ) , zend_ast_list_size ( list -> children * 2 ) )"		71477	1					
ANR	71513	Callee	zend_ast_realloc		71477	0					
ANR	71514	Identifier	zend_ast_realloc		71477	0					
ANR	71515	ArgumentList	list		71477	1					
ANR	71516	Argument	list		71477	0					
ANR	71517	Identifier	list		71477	0					
ANR	71518	Argument	zend_ast_list_size ( list -> children )		71477	1					
ANR	71519	CallExpression	zend_ast_list_size ( list -> children )		71477	0					
ANR	71520	Callee	zend_ast_list_size		71477	0					
ANR	71521	Identifier	zend_ast_list_size		71477	0					
ANR	71522	ArgumentList	list -> children		71477	1					
ANR	71523	Argument	list -> children		71477	0					
ANR	71524	PtrMemberAccess	list -> children		71477	0					
ANR	71525	Identifier	list		71477	0					
ANR	71526	Identifier	children		71477	1					
ANR	71527	Argument	zend_ast_list_size ( list -> children * 2 )		71477	2					
ANR	71528	CallExpression	zend_ast_list_size ( list -> children * 2 )		71477	0					
ANR	71529	Callee	zend_ast_list_size		71477	0					
ANR	71530	Identifier	zend_ast_list_size		71477	0					
ANR	71531	ArgumentList	list -> children * 2		71477	1					
ANR	71532	Argument	list -> children * 2		71477	0					
ANR	71533	MultiplicativeExpression	list -> children * 2		71477	0		*			
ANR	71534	PtrMemberAccess	list -> children		71477	0					
ANR	71535	Identifier	list		71477	0					
ANR	71536	Identifier	children		71477	1					
ANR	71537	PrimaryExpression	2		71477	1					
ANR	71538	ExpressionStatement	list -> child [ list -> children ++ ] = op	176:1:5096:5130	71477	2	True				
ANR	71539	AssignmentExpression	list -> child [ list -> children ++ ] = op		71477	0		=			
ANR	71540	ArrayIndexing	list -> child [ list -> children ++ ]		71477	0					
ANR	71541	PtrMemberAccess	list -> child		71477	0					
ANR	71542	Identifier	list		71477	0					
ANR	71543	Identifier	child		71477	1					
ANR	71544	PostIncDecOperationExpression	list -> children ++		71477	1					
ANR	71545	PtrMemberAccess	list -> children		71477	0					
ANR	71546	Identifier	list		71477	0					
ANR	71547	Identifier	children		71477	1					
ANR	71548	IncDec	++		71477	1					
ANR	71549	Identifier	op		71477	1					
ANR	71550	ReturnStatement	return ( zend_ast * ) list ;	177:1:5133:5157	71477	3	True				
ANR	71551	CastExpression	( zend_ast * ) list		71477	0					
ANR	71552	CastTarget	zend_ast *		71477	0					
ANR	71553	Identifier	list		71477	1					
ANR	71554	ReturnType	ZEND_API zend_ast *		71477	1					
ANR	71555	Identifier	zend_ast_list_add		71477	2					
ANR	71556	ParameterList	"zend_ast * ast , zend_ast * op"		71477	3					
ANR	71557	Parameter	zend_ast * ast	170:37:4838:4850	71477	0	True				
ANR	71558	ParameterType	zend_ast *		71477	0					
ANR	71559	Identifier	ast		71477	1					
ANR	71560	Parameter	zend_ast * op	170:52:4853:4864	71477	1	True				
ANR	71561	ParameterType	zend_ast *		71477	0					
ANR	71562	Identifier	op		71477	1					
ANR	71563	CFGEntryNode	ENTRY		71477		True				
ANR	71564	CFGExitNode	EXIT		71477		True				
ANR	71565	Symbol	op		71477						
ANR	71566	Symbol	zend_ast_get_list		71477						
ANR	71567	Symbol	ast		71477						
ANR	71568	Symbol	* * list		71477						
ANR	71569	Symbol	list -> child		71477						
ANR	71570	Symbol	* list		71477						
ANR	71571	Symbol	zend_ast_realloc		71477						
ANR	71572	Symbol	* list -> child		71477						
ANR	71573	Symbol	list		71477						
ANR	71574	Symbol	is_power_of_two		71477						
ANR	71575	Symbol	list -> children		71477						
ANR	71576	Symbol	zend_ast_list_size		71477						
ANR	71577	Function	zend_ast_add_array_element	180:0:5162:6052							
ANR	71578	FunctionDef	"zend_ast_add_array_element (zval * result , zval * offset , zval * expr)"		71577	0					
ANR	71579	CompoundStatement		181:0:5240:6052	71577	0					
ANR	71580	SwitchStatement	switch ( Z_TYPE_P ( offset ) )		71577	0					
ANR	71581	Condition	Z_TYPE_P ( offset )	182:9:5251:5266	71577	0	True				
ANR	71582	CallExpression	Z_TYPE_P ( offset )		71577	0					
ANR	71583	Callee	Z_TYPE_P		71577	0					
ANR	71584	Identifier	Z_TYPE_P		71577	0					
ANR	71585	ArgumentList	offset		71577	1					
ANR	71586	Argument	offset		71577	0					
ANR	71587	Identifier	offset		71577	0					
ANR	71588	CompoundStatement		2:27:28:28	71577	1					
ANR	71589	Label	case IS_UNDEF :	183:2:5273:5286	71577	0	True				
ANR	71590	Identifier	IS_UNDEF		71577	0					
ANR	71591	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , expr )"	184:3:5291:5344	71577	1	True				
ANR	71592	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , expr )"		71577	0					
ANR	71593	Callee	zend_hash_next_index_insert		71577	0					
ANR	71594	Identifier	zend_hash_next_index_insert		71577	0					
ANR	71595	ArgumentList	Z_ARRVAL_P ( result )		71577	1					
ANR	71596	Argument	Z_ARRVAL_P ( result )		71577	0					
ANR	71597	CallExpression	Z_ARRVAL_P ( result )		71577	0					
ANR	71598	Callee	Z_ARRVAL_P		71577	0					
ANR	71599	Identifier	Z_ARRVAL_P		71577	0					
ANR	71600	ArgumentList	result		71577	1					
ANR	71601	Argument	result		71577	0					
ANR	71602	Identifier	result		71577	0					
ANR	71603	Argument	expr		71577	1					
ANR	71604	Identifier	expr		71577	0					
ANR	71605	BreakStatement	break ;	185:3:5349:5354	71577	2	True				
ANR	71606	Label	case IS_STRING :	186:2:5358:5372	71577	3	True				
ANR	71607	Identifier	IS_STRING		71577	0					
ANR	71608	ExpressionStatement	"zend_symtable_update ( Z_ARRVAL_P ( result ) , Z_STR_P ( offset ) , expr )"	187:3:5377:5440	71577	4	True				
ANR	71609	CallExpression	"zend_symtable_update ( Z_ARRVAL_P ( result ) , Z_STR_P ( offset ) , expr )"		71577	0					
ANR	71610	Callee	zend_symtable_update		71577	0					
ANR	71611	Identifier	zend_symtable_update		71577	0					
ANR	71612	ArgumentList	Z_ARRVAL_P ( result )		71577	1					
ANR	71613	Argument	Z_ARRVAL_P ( result )		71577	0					
ANR	71614	CallExpression	Z_ARRVAL_P ( result )		71577	0					
ANR	71615	Callee	Z_ARRVAL_P		71577	0					
ANR	71616	Identifier	Z_ARRVAL_P		71577	0					
ANR	71617	ArgumentList	result		71577	1					
ANR	71618	Argument	result		71577	0					
ANR	71619	Identifier	result		71577	0					
ANR	71620	Argument	Z_STR_P ( offset )		71577	1					
ANR	71621	CallExpression	Z_STR_P ( offset )		71577	0					
ANR	71622	Callee	Z_STR_P		71577	0					
ANR	71623	Identifier	Z_STR_P		71577	0					
ANR	71624	ArgumentList	offset		71577	1					
ANR	71625	Argument	offset		71577	0					
ANR	71626	Identifier	offset		71577	0					
ANR	71627	Argument	expr		71577	2					
ANR	71628	Identifier	expr		71577	0					
ANR	71629	ExpressionStatement	zval_dtor ( offset )	188:3:5445:5462	71577	5	True				
ANR	71630	CallExpression	zval_dtor ( offset )		71577	0					
ANR	71631	Callee	zval_dtor		71577	0					
ANR	71632	Identifier	zval_dtor		71577	0					
ANR	71633	ArgumentList	offset		71577	1					
ANR	71634	Argument	offset		71577	0					
ANR	71635	Identifier	offset		71577	0					
ANR	71636	BreakStatement	break ;	189:3:5467:5472	71577	6	True				
ANR	71637	Label	case IS_NULL :	190:2:5476:5488	71577	7	True				
ANR	71638	Identifier	IS_NULL		71577	0					
ANR	71639	ExpressionStatement	"zend_symtable_update ( Z_ARRVAL_P ( result ) , ZSTR_EMPTY_ALLOC ( ) , expr )"	191:3:5493:5559	71577	8	True				
ANR	71640	CallExpression	"zend_symtable_update ( Z_ARRVAL_P ( result ) , ZSTR_EMPTY_ALLOC ( ) , expr )"		71577	0					
ANR	71641	Callee	zend_symtable_update		71577	0					
ANR	71642	Identifier	zend_symtable_update		71577	0					
ANR	71643	ArgumentList	Z_ARRVAL_P ( result )		71577	1					
ANR	71644	Argument	Z_ARRVAL_P ( result )		71577	0					
ANR	71645	CallExpression	Z_ARRVAL_P ( result )		71577	0					
ANR	71646	Callee	Z_ARRVAL_P		71577	0					
ANR	71647	Identifier	Z_ARRVAL_P		71577	0					
ANR	71648	ArgumentList	result		71577	1					
ANR	71649	Argument	result		71577	0					
ANR	71650	Identifier	result		71577	0					
ANR	71651	Argument	ZSTR_EMPTY_ALLOC ( )		71577	1					
ANR	71652	CallExpression	ZSTR_EMPTY_ALLOC ( )		71577	0					
ANR	71653	Callee	ZSTR_EMPTY_ALLOC		71577	0					
ANR	71654	Identifier	ZSTR_EMPTY_ALLOC		71577	0					
ANR	71655	ArgumentList			71577	1					
ANR	71656	Argument	expr		71577	2					
ANR	71657	Identifier	expr		71577	0					
ANR	71658	BreakStatement	break ;	192:3:5564:5569	71577	9	True				
ANR	71659	Label	case IS_LONG :	193:2:5573:5585	71577	10	True				
ANR	71660	Identifier	IS_LONG		71577	0					
ANR	71661	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , Z_LVAL_P ( offset ) , expr )"	194:3:5590:5656	71577	11	True				
ANR	71662	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , Z_LVAL_P ( offset ) , expr )"		71577	0					
ANR	71663	Callee	zend_hash_index_update		71577	0					
ANR	71664	Identifier	zend_hash_index_update		71577	0					
ANR	71665	ArgumentList	Z_ARRVAL_P ( result )		71577	1					
ANR	71666	Argument	Z_ARRVAL_P ( result )		71577	0					
ANR	71667	CallExpression	Z_ARRVAL_P ( result )		71577	0					
ANR	71668	Callee	Z_ARRVAL_P		71577	0					
ANR	71669	Identifier	Z_ARRVAL_P		71577	0					
ANR	71670	ArgumentList	result		71577	1					
ANR	71671	Argument	result		71577	0					
ANR	71672	Identifier	result		71577	0					
ANR	71673	Argument	Z_LVAL_P ( offset )		71577	1					
ANR	71674	CallExpression	Z_LVAL_P ( offset )		71577	0					
ANR	71675	Callee	Z_LVAL_P		71577	0					
ANR	71676	Identifier	Z_LVAL_P		71577	0					
ANR	71677	ArgumentList	offset		71577	1					
ANR	71678	Argument	offset		71577	0					
ANR	71679	Identifier	offset		71577	0					
ANR	71680	Argument	expr		71577	2					
ANR	71681	Identifier	expr		71577	0					
ANR	71682	BreakStatement	break ;	195:3:5661:5666	71577	12	True				
ANR	71683	Label	case IS_FALSE :	196:2:5670:5683	71577	13	True				
ANR	71684	Identifier	IS_FALSE		71577	0					
ANR	71685	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 0 , expr )"	197:3:5688:5739	71577	14	True				
ANR	71686	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 0 , expr )"		71577	0					
ANR	71687	Callee	zend_hash_index_update		71577	0					
ANR	71688	Identifier	zend_hash_index_update		71577	0					
ANR	71689	ArgumentList	Z_ARRVAL_P ( result )		71577	1					
ANR	71690	Argument	Z_ARRVAL_P ( result )		71577	0					
ANR	71691	CallExpression	Z_ARRVAL_P ( result )		71577	0					
ANR	71692	Callee	Z_ARRVAL_P		71577	0					
ANR	71693	Identifier	Z_ARRVAL_P		71577	0					
ANR	71694	ArgumentList	result		71577	1					
ANR	71695	Argument	result		71577	0					
ANR	71696	Identifier	result		71577	0					
ANR	71697	Argument	0		71577	1					
ANR	71698	PrimaryExpression	0		71577	0					
ANR	71699	Argument	expr		71577	2					
ANR	71700	Identifier	expr		71577	0					
ANR	71701	BreakStatement	break ;	198:3:5744:5749	71577	15	True				
ANR	71702	Label	case IS_TRUE :	199:2:5753:5765	71577	16	True				
ANR	71703	Identifier	IS_TRUE		71577	0					
ANR	71704	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 1 , expr )"	200:3:5770:5821	71577	17	True				
ANR	71705	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 1 , expr )"		71577	0					
ANR	71706	Callee	zend_hash_index_update		71577	0					
ANR	71707	Identifier	zend_hash_index_update		71577	0					
ANR	71708	ArgumentList	Z_ARRVAL_P ( result )		71577	1					
ANR	71709	Argument	Z_ARRVAL_P ( result )		71577	0					
ANR	71710	CallExpression	Z_ARRVAL_P ( result )		71577	0					
ANR	71711	Callee	Z_ARRVAL_P		71577	0					
ANR	71712	Identifier	Z_ARRVAL_P		71577	0					
ANR	71713	ArgumentList	result		71577	1					
ANR	71714	Argument	result		71577	0					
ANR	71715	Identifier	result		71577	0					
ANR	71716	Argument	1		71577	1					
ANR	71717	PrimaryExpression	1		71577	0					
ANR	71718	Argument	expr		71577	2					
ANR	71719	Identifier	expr		71577	0					
ANR	71720	BreakStatement	break ;	201:3:5826:5831	71577	18	True				
ANR	71721	Label	case IS_DOUBLE :	202:2:5835:5849	71577	19	True				
ANR	71722	Identifier	IS_DOUBLE		71577	0					
ANR	71723	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , zend_dval_to_lval ( Z_DVAL_P ( offset ) ) , expr )"	203:3:5854:5939	71577	20	True				
ANR	71724	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , zend_dval_to_lval ( Z_DVAL_P ( offset ) ) , expr )"		71577	0					
ANR	71725	Callee	zend_hash_index_update		71577	0					
ANR	71726	Identifier	zend_hash_index_update		71577	0					
ANR	71727	ArgumentList	Z_ARRVAL_P ( result )		71577	1					
ANR	71728	Argument	Z_ARRVAL_P ( result )		71577	0					
ANR	71729	CallExpression	Z_ARRVAL_P ( result )		71577	0					
ANR	71730	Callee	Z_ARRVAL_P		71577	0					
ANR	71731	Identifier	Z_ARRVAL_P		71577	0					
ANR	71732	ArgumentList	result		71577	1					
ANR	71733	Argument	result		71577	0					
ANR	71734	Identifier	result		71577	0					
ANR	71735	Argument	zend_dval_to_lval ( Z_DVAL_P ( offset ) )		71577	1					
ANR	71736	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( offset ) )		71577	0					
ANR	71737	Callee	zend_dval_to_lval		71577	0					
ANR	71738	Identifier	zend_dval_to_lval		71577	0					
ANR	71739	ArgumentList	Z_DVAL_P ( offset )		71577	1					
ANR	71740	Argument	Z_DVAL_P ( offset )		71577	0					
ANR	71741	CallExpression	Z_DVAL_P ( offset )		71577	0					
ANR	71742	Callee	Z_DVAL_P		71577	0					
ANR	71743	Identifier	Z_DVAL_P		71577	0					
ANR	71744	ArgumentList	offset		71577	1					
ANR	71745	Argument	offset		71577	0					
ANR	71746	Identifier	offset		71577	0					
ANR	71747	Argument	expr		71577	2					
ANR	71748	Identifier	expr		71577	0					
ANR	71749	BreakStatement	break ;	204:3:5944:5949	71577	21	True				
ANR	71750	Label	default :	205:2:5953:5960	71577	22	True				
ANR	71751	Identifier	default		71577	0					
ANR	71752	ExpressionStatement	"zend_throw_error ( NULL , ""Illegal offset type"" )"	206:3:5965:6010	71577	23	True				
ANR	71753	CallExpression	"zend_throw_error ( NULL , ""Illegal offset type"" )"		71577	0					
ANR	71754	Callee	zend_throw_error		71577	0					
ANR	71755	Identifier	zend_throw_error		71577	0					
ANR	71756	ArgumentList	NULL		71577	1					
ANR	71757	Argument	NULL		71577	0					
ANR	71758	Identifier	NULL		71577	0					
ANR	71759	Argument	"""Illegal offset type"""		71577	1					
ANR	71760	PrimaryExpression	"""Illegal offset type"""		71577	0					
ANR	71761	ReturnStatement	return FAILURE ;	207:3:6015:6029	71577	24	True				
ANR	71762	Identifier	FAILURE		71577	0					
ANR	71763	ReturnStatement	return SUCCESS ;	209:1:6036:6050	71577	1	True				
ANR	71764	Identifier	SUCCESS		71577	0					
ANR	71765	ReturnType	static int		71577	1					
ANR	71766	Identifier	zend_ast_add_array_element		71577	2					
ANR	71767	ParameterList	"zval * result , zval * offset , zval * expr"		71577	3					
ANR	71768	Parameter	zval * result	180:38:5200:5211	71577	0	True				
ANR	71769	ParameterType	zval *		71577	0					
ANR	71770	Identifier	result		71577	1					
ANR	71771	Parameter	zval * offset	180:52:5214:5225	71577	1	True				
ANR	71772	ParameterType	zval *		71577	0					
ANR	71773	Identifier	offset		71577	1					
ANR	71774	Parameter	zval * expr	180:66:5228:5237	71577	2	True				
ANR	71775	ParameterType	zval *		71577	0					
ANR	71776	Identifier	expr		71577	1					
ANR	71777	CFGEntryNode	ENTRY		71577		True				
ANR	71778	CFGExitNode	EXIT		71577		True				
ANR	71779	Symbol	NULL		71577						
ANR	71780	Symbol	SUCCESS		71577						
ANR	71781	Symbol	offset		71577						
ANR	71782	Symbol	Z_TYPE_P		71577						
ANR	71783	Symbol	FAILURE		71577						
ANR	71784	Symbol	ZSTR_EMPTY_ALLOC		71577						
ANR	71785	Symbol	Z_DVAL_P		71577						
ANR	71786	Symbol	Z_LVAL_P		71577						
ANR	71787	Symbol	result		71577						
ANR	71788	Symbol	zend_dval_to_lval		71577						
ANR	71789	Symbol	expr		71577						
ANR	71790	Symbol	Z_STR_P		71577						
ANR	71791	Symbol	Z_ARRVAL_P		71577						
ANR	71792	Function	zend_ast_evaluate	212:0:6055:11283							
ANR	71793	FunctionDef	"zend_ast_evaluate (zval * result , zend_ast * ast , zend_class_entry * scope)"		71792	0					
ANR	71794	CompoundStatement		213:0:6140:11283	71792	0					
ANR	71795	IdentifierDeclStatement	"zval op1 , op2 ;"	214:1:6143:6156	71792	0	True				
ANR	71796	IdentifierDecl	op1		71792	0					
ANR	71797	IdentifierDeclType	zval		71792	0					
ANR	71798	Identifier	op1		71792	1					
ANR	71799	IdentifierDecl	op2		71792	1					
ANR	71800	IdentifierDeclType	zval		71792	0					
ANR	71801	Identifier	op2		71792	1					
ANR	71802	IdentifierDeclStatement	int ret = SUCCESS ;	215:1:6159:6176	71792	1	True				
ANR	71803	IdentifierDecl	ret = SUCCESS		71792	0					
ANR	71804	IdentifierDeclType	int		71792	0					
ANR	71805	Identifier	ret		71792	1					
ANR	71806	AssignmentExpression	ret = SUCCESS		71792	2		=			
ANR	71807	Identifier	SUCCESS		71792	0					
ANR	71808	Identifier	SUCCESS		71792	1					
ANR	71809	SwitchStatement	switch ( ast -> kind )		71792	2					
ANR	71810	Condition	ast -> kind	217:9:6188:6196	71792	0	True				
ANR	71811	PtrMemberAccess	ast -> kind		71792	0					
ANR	71812	Identifier	ast		71792	0					
ANR	71813	Identifier	kind		71792	1					
ANR	71814	CompoundStatement		5:20:58:58	71792	1					
ANR	71815	Label	case ZEND_AST_BINARY_OP :	218:2:6203:6226	71792	0	True				
ANR	71816	Identifier	ZEND_AST_BINARY_OP		71792	0					
ANR	71817	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	1					
ANR	71818	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	219:7:6235:6302	71792	0	True				
ANR	71819	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	71820	Callee	UNEXPECTED		71792	0					
ANR	71821	Identifier	UNEXPECTED		71792	0					
ANR	71822	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	71823	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	71824	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	71825	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	71826	Callee	zend_ast_evaluate		71792	0					
ANR	71827	Identifier	zend_ast_evaluate		71792	0					
ANR	71828	ArgumentList	& op1		71792	1					
ANR	71829	Argument	& op1		71792	0					
ANR	71830	UnaryOperationExpression	& op1		71792	0					
ANR	71831	UnaryOperator	&		71792	0					
ANR	71832	Identifier	op1		71792	1					
ANR	71833	Argument	ast -> child [ 0 ]		71792	1					
ANR	71834	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	71835	PtrMemberAccess	ast -> child		71792	0					
ANR	71836	Identifier	ast		71792	0					
ANR	71837	Identifier	child		71792	1					
ANR	71838	PrimaryExpression	0		71792	1					
ANR	71839	Argument	scope		71792	2					
ANR	71840	Identifier	scope		71792	0					
ANR	71841	Identifier	SUCCESS		71792	1					
ANR	71842	CompoundStatement		7:77:164:164	71792	1					
ANR	71843	ExpressionStatement	ret = FAILURE	220:4:6311:6324	71792	0	True				
ANR	71844	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	71845	Identifier	ret		71792	0					
ANR	71846	Identifier	FAILURE		71792	1					
ANR	71847	ElseStatement	else		71792	0					
ANR	71848	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	71849	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	221:14:6340:6407	71792	0	True				
ANR	71850	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		71792	0					
ANR	71851	Callee	UNEXPECTED		71792	0					
ANR	71852	Identifier	UNEXPECTED		71792	0					
ANR	71853	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	1					
ANR	71854	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0					
ANR	71855	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	71856	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		71792	0					
ANR	71857	Callee	zend_ast_evaluate		71792	0					
ANR	71858	Identifier	zend_ast_evaluate		71792	0					
ANR	71859	ArgumentList	& op2		71792	1					
ANR	71860	Argument	& op2		71792	0					
ANR	71861	UnaryOperationExpression	& op2		71792	0					
ANR	71862	UnaryOperator	&		71792	0					
ANR	71863	Identifier	op2		71792	1					
ANR	71864	Argument	ast -> child [ 1 ]		71792	1					
ANR	71865	ArrayIndexing	ast -> child [ 1 ]		71792	0					
ANR	71866	PtrMemberAccess	ast -> child		71792	0					
ANR	71867	Identifier	ast		71792	0					
ANR	71868	Identifier	child		71792	1					
ANR	71869	PrimaryExpression	1		71792	1					
ANR	71870	Argument	scope		71792	2					
ANR	71871	Identifier	scope		71792	0					
ANR	71872	Identifier	SUCCESS		71792	1					
ANR	71873	CompoundStatement		9:84:269:269	71792	1					
ANR	71874	ExpressionStatement	zval_dtor ( & op1 )	222:4:6416:6431	71792	0	True				
ANR	71875	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	71876	Callee	zval_dtor		71792	0					
ANR	71877	Identifier	zval_dtor		71792	0					
ANR	71878	ArgumentList	& op1		71792	1					
ANR	71879	Argument	& op1		71792	0					
ANR	71880	UnaryOperationExpression	& op1		71792	0					
ANR	71881	UnaryOperator	&		71792	0					
ANR	71882	Identifier	op1		71792	1					
ANR	71883	ExpressionStatement	ret = FAILURE	223:4:6437:6450	71792	1	True				
ANR	71884	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	71885	Identifier	ret		71792	0					
ANR	71886	Identifier	FAILURE		71792	1					
ANR	71887	ElseStatement	else		71792	0					
ANR	71888	CompoundStatement		13:4:327:371	71792	0					
ANR	71889	IdentifierDeclStatement	binary_op_type op = get_binary_op ( ast -> attr ) ;	225:4:6468:6512	71792	0	True				
ANR	71890	IdentifierDecl	op = get_binary_op ( ast -> attr )		71792	0					
ANR	71891	IdentifierDeclType	binary_op_type		71792	0					
ANR	71892	Identifier	op		71792	1					
ANR	71893	AssignmentExpression	op = get_binary_op ( ast -> attr )		71792	2		=			
ANR	71894	Identifier	op		71792	0					
ANR	71895	CallExpression	get_binary_op ( ast -> attr )		71792	1					
ANR	71896	Callee	get_binary_op		71792	0					
ANR	71897	Identifier	get_binary_op		71792	0					
ANR	71898	ArgumentList	ast -> attr		71792	1					
ANR	71899	Argument	ast -> attr		71792	0					
ANR	71900	PtrMemberAccess	ast -> attr		71792	0					
ANR	71901	Identifier	ast		71792	0					
ANR	71902	Identifier	attr		71792	1					
ANR	71903	ExpressionStatement	"ret = op ( result , & op1 , & op2 )"	226:4:6518:6546	71792	1	True				
ANR	71904	AssignmentExpression	"ret = op ( result , & op1 , & op2 )"		71792	0		=			
ANR	71905	Identifier	ret		71792	0					
ANR	71906	CallExpression	"op ( result , & op1 , & op2 )"		71792	1					
ANR	71907	Callee	op		71792	0					
ANR	71908	Identifier	op		71792	0					
ANR	71909	ArgumentList	result		71792	1					
ANR	71910	Argument	result		71792	0					
ANR	71911	Identifier	result		71792	0					
ANR	71912	Argument	& op1		71792	1					
ANR	71913	UnaryOperationExpression	& op1		71792	0					
ANR	71914	UnaryOperator	&		71792	0					
ANR	71915	Identifier	op1		71792	1					
ANR	71916	Argument	& op2		71792	2					
ANR	71917	UnaryOperationExpression	& op2		71792	0					
ANR	71918	UnaryOperator	&		71792	0					
ANR	71919	Identifier	op2		71792	1					
ANR	71920	ExpressionStatement	zval_dtor ( & op1 )	227:4:6552:6567	71792	2	True				
ANR	71921	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	71922	Callee	zval_dtor		71792	0					
ANR	71923	Identifier	zval_dtor		71792	0					
ANR	71924	ArgumentList	& op1		71792	1					
ANR	71925	Argument	& op1		71792	0					
ANR	71926	UnaryOperationExpression	& op1		71792	0					
ANR	71927	UnaryOperator	&		71792	0					
ANR	71928	Identifier	op1		71792	1					
ANR	71929	ExpressionStatement	zval_dtor ( & op2 )	228:4:6573:6588	71792	3	True				
ANR	71930	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	71931	Callee	zval_dtor		71792	0					
ANR	71932	Identifier	zval_dtor		71792	0					
ANR	71933	ArgumentList	& op2		71792	1					
ANR	71934	Argument	& op2		71792	0					
ANR	71935	UnaryOperationExpression	& op2		71792	0					
ANR	71936	UnaryOperator	&		71792	0					
ANR	71937	Identifier	op2		71792	1					
ANR	71938	BreakStatement	break ;	230:3:6598:6603	71792	2	True				
ANR	71939	Label	case ZEND_AST_GREATER :	231:2:6607:6628	71792	3	True				
ANR	71940	Identifier	ZEND_AST_GREATER		71792	0					
ANR	71941	Label	case ZEND_AST_GREATER_EQUAL :	232:2:6632:6659	71792	4	True				
ANR	71942	Identifier	ZEND_AST_GREATER_EQUAL		71792	0					
ANR	71943	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	5					
ANR	71944	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	233:7:6668:6735	71792	0	True				
ANR	71945	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	71946	Callee	UNEXPECTED		71792	0					
ANR	71947	Identifier	UNEXPECTED		71792	0					
ANR	71948	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	71949	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	71950	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	71951	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	71952	Callee	zend_ast_evaluate		71792	0					
ANR	71953	Identifier	zend_ast_evaluate		71792	0					
ANR	71954	ArgumentList	& op1		71792	1					
ANR	71955	Argument	& op1		71792	0					
ANR	71956	UnaryOperationExpression	& op1		71792	0					
ANR	71957	UnaryOperator	&		71792	0					
ANR	71958	Identifier	op1		71792	1					
ANR	71959	Argument	ast -> child [ 0 ]		71792	1					
ANR	71960	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	71961	PtrMemberAccess	ast -> child		71792	0					
ANR	71962	Identifier	ast		71792	0					
ANR	71963	Identifier	child		71792	1					
ANR	71964	PrimaryExpression	0		71792	1					
ANR	71965	Argument	scope		71792	2					
ANR	71966	Identifier	scope		71792	0					
ANR	71967	Identifier	SUCCESS		71792	1					
ANR	71968	CompoundStatement		21:77:597:597	71792	1					
ANR	71969	ExpressionStatement	ret = FAILURE	234:4:6744:6757	71792	0	True				
ANR	71970	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	71971	Identifier	ret		71792	0					
ANR	71972	Identifier	FAILURE		71792	1					
ANR	71973	ElseStatement	else		71792	0					
ANR	71974	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	71975	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	235:14:6773:6840	71792	0	True				
ANR	71976	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		71792	0					
ANR	71977	Callee	UNEXPECTED		71792	0					
ANR	71978	Identifier	UNEXPECTED		71792	0					
ANR	71979	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	1					
ANR	71980	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0					
ANR	71981	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	71982	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		71792	0					
ANR	71983	Callee	zend_ast_evaluate		71792	0					
ANR	71984	Identifier	zend_ast_evaluate		71792	0					
ANR	71985	ArgumentList	& op2		71792	1					
ANR	71986	Argument	& op2		71792	0					
ANR	71987	UnaryOperationExpression	& op2		71792	0					
ANR	71988	UnaryOperator	&		71792	0					
ANR	71989	Identifier	op2		71792	1					
ANR	71990	Argument	ast -> child [ 1 ]		71792	1					
ANR	71991	ArrayIndexing	ast -> child [ 1 ]		71792	0					
ANR	71992	PtrMemberAccess	ast -> child		71792	0					
ANR	71993	Identifier	ast		71792	0					
ANR	71994	Identifier	child		71792	1					
ANR	71995	PrimaryExpression	1		71792	1					
ANR	71996	Argument	scope		71792	2					
ANR	71997	Identifier	scope		71792	0					
ANR	71998	Identifier	SUCCESS		71792	1					
ANR	71999	CompoundStatement		23:84:702:702	71792	1					
ANR	72000	ExpressionStatement	zval_dtor ( & op1 )	236:4:6849:6864	71792	0	True				
ANR	72001	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72002	Callee	zval_dtor		71792	0					
ANR	72003	Identifier	zval_dtor		71792	0					
ANR	72004	ArgumentList	& op1		71792	1					
ANR	72005	Argument	& op1		71792	0					
ANR	72006	UnaryOperationExpression	& op1		71792	0					
ANR	72007	UnaryOperator	&		71792	0					
ANR	72008	Identifier	op1		71792	1					
ANR	72009	ExpressionStatement	ret = FAILURE	237:4:6870:6883	71792	1	True				
ANR	72010	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72011	Identifier	ret		71792	0					
ANR	72012	Identifier	FAILURE		71792	1					
ANR	72013	ElseStatement	else		71792	0					
ANR	72014	CompoundStatement		28:4:805:912	71792	0					
ANR	72015	IdentifierDeclStatement	binary_op_type op = ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function ;	240:4:6946:7053	71792	0	True				
ANR	72016	IdentifierDecl	op = ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		71792	0					
ANR	72017	IdentifierDeclType	binary_op_type		71792	0					
ANR	72018	Identifier	op		71792	1					
ANR	72019	AssignmentExpression	op = ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		71792	2		=			
ANR	72020	Identifier	op		71792	0					
ANR	72021	ConditionalExpression	ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		71792	1					
ANR	72022	Condition	ast -> kind == ZEND_AST_GREATER		71792	0					
ANR	72023	EqualityExpression	ast -> kind == ZEND_AST_GREATER		71792	0		==			
ANR	72024	PtrMemberAccess	ast -> kind		71792	0					
ANR	72025	Identifier	ast		71792	0					
ANR	72026	Identifier	kind		71792	1					
ANR	72027	Identifier	ZEND_AST_GREATER		71792	1					
ANR	72028	Identifier	is_smaller_function		71792	1					
ANR	72029	Identifier	is_smaller_or_equal_function		71792	2					
ANR	72030	ExpressionStatement	"ret = op ( result , & op2 , & op1 )"	242:4:7059:7087	71792	1	True				
ANR	72031	AssignmentExpression	"ret = op ( result , & op2 , & op1 )"		71792	0		=			
ANR	72032	Identifier	ret		71792	0					
ANR	72033	CallExpression	"op ( result , & op2 , & op1 )"		71792	1					
ANR	72034	Callee	op		71792	0					
ANR	72035	Identifier	op		71792	0					
ANR	72036	ArgumentList	result		71792	1					
ANR	72037	Argument	result		71792	0					
ANR	72038	Identifier	result		71792	0					
ANR	72039	Argument	& op2		71792	1					
ANR	72040	UnaryOperationExpression	& op2		71792	0					
ANR	72041	UnaryOperator	&		71792	0					
ANR	72042	Identifier	op2		71792	1					
ANR	72043	Argument	& op1		71792	2					
ANR	72044	UnaryOperationExpression	& op1		71792	0					
ANR	72045	UnaryOperator	&		71792	0					
ANR	72046	Identifier	op1		71792	1					
ANR	72047	ExpressionStatement	zval_dtor ( & op1 )	243:4:7093:7108	71792	2	True				
ANR	72048	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72049	Callee	zval_dtor		71792	0					
ANR	72050	Identifier	zval_dtor		71792	0					
ANR	72051	ArgumentList	& op1		71792	1					
ANR	72052	Argument	& op1		71792	0					
ANR	72053	UnaryOperationExpression	& op1		71792	0					
ANR	72054	UnaryOperator	&		71792	0					
ANR	72055	Identifier	op1		71792	1					
ANR	72056	ExpressionStatement	zval_dtor ( & op2 )	244:4:7114:7129	71792	3	True				
ANR	72057	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	72058	Callee	zval_dtor		71792	0					
ANR	72059	Identifier	zval_dtor		71792	0					
ANR	72060	ArgumentList	& op2		71792	1					
ANR	72061	Argument	& op2		71792	0					
ANR	72062	UnaryOperationExpression	& op2		71792	0					
ANR	72063	UnaryOperator	&		71792	0					
ANR	72064	Identifier	op2		71792	1					
ANR	72065	BreakStatement	break ;	246:3:7139:7144	71792	6	True				
ANR	72066	Label	case ZEND_AST_UNARY_OP :	247:2:7148:7170	71792	7	True				
ANR	72067	Identifier	ZEND_AST_UNARY_OP		71792	0					
ANR	72068	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	8					
ANR	72069	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	248:7:7179:7246	71792	0	True				
ANR	72070	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	72071	Callee	UNEXPECTED		71792	0					
ANR	72072	Identifier	UNEXPECTED		71792	0					
ANR	72073	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	72074	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	72075	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72076	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	72077	Callee	zend_ast_evaluate		71792	0					
ANR	72078	Identifier	zend_ast_evaluate		71792	0					
ANR	72079	ArgumentList	& op1		71792	1					
ANR	72080	Argument	& op1		71792	0					
ANR	72081	UnaryOperationExpression	& op1		71792	0					
ANR	72082	UnaryOperator	&		71792	0					
ANR	72083	Identifier	op1		71792	1					
ANR	72084	Argument	ast -> child [ 0 ]		71792	1					
ANR	72085	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	72086	PtrMemberAccess	ast -> child		71792	0					
ANR	72087	Identifier	ast		71792	0					
ANR	72088	Identifier	child		71792	1					
ANR	72089	PrimaryExpression	0		71792	1					
ANR	72090	Argument	scope		71792	2					
ANR	72091	Identifier	scope		71792	0					
ANR	72092	Identifier	SUCCESS		71792	1					
ANR	72093	CompoundStatement		36:77:1108:1108	71792	1					
ANR	72094	ExpressionStatement	ret = FAILURE	249:4:7255:7268	71792	0	True				
ANR	72095	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72096	Identifier	ret		71792	0					
ANR	72097	Identifier	FAILURE		71792	1					
ANR	72098	ElseStatement	else		71792	0					
ANR	72099	CompoundStatement		39:4:1145:1187	71792	0					
ANR	72100	IdentifierDeclStatement	unary_op_type op = get_unary_op ( ast -> attr ) ;	251:4:7286:7328	71792	0	True				
ANR	72101	IdentifierDecl	op = get_unary_op ( ast -> attr )		71792	0					
ANR	72102	IdentifierDeclType	unary_op_type		71792	0					
ANR	72103	Identifier	op		71792	1					
ANR	72104	AssignmentExpression	op = get_unary_op ( ast -> attr )		71792	2		=			
ANR	72105	Identifier	op		71792	0					
ANR	72106	CallExpression	get_unary_op ( ast -> attr )		71792	1					
ANR	72107	Callee	get_unary_op		71792	0					
ANR	72108	Identifier	get_unary_op		71792	0					
ANR	72109	ArgumentList	ast -> attr		71792	1					
ANR	72110	Argument	ast -> attr		71792	0					
ANR	72111	PtrMemberAccess	ast -> attr		71792	0					
ANR	72112	Identifier	ast		71792	0					
ANR	72113	Identifier	attr		71792	1					
ANR	72114	ExpressionStatement	"ret = op ( result , & op1 )"	252:4:7334:7356	71792	1	True				
ANR	72115	AssignmentExpression	"ret = op ( result , & op1 )"		71792	0		=			
ANR	72116	Identifier	ret		71792	0					
ANR	72117	CallExpression	"op ( result , & op1 )"		71792	1					
ANR	72118	Callee	op		71792	0					
ANR	72119	Identifier	op		71792	0					
ANR	72120	ArgumentList	result		71792	1					
ANR	72121	Argument	result		71792	0					
ANR	72122	Identifier	result		71792	0					
ANR	72123	Argument	& op1		71792	1					
ANR	72124	UnaryOperationExpression	& op1		71792	0					
ANR	72125	UnaryOperator	&		71792	0					
ANR	72126	Identifier	op1		71792	1					
ANR	72127	ExpressionStatement	zval_dtor ( & op1 )	253:4:7362:7377	71792	2	True				
ANR	72128	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72129	Callee	zval_dtor		71792	0					
ANR	72130	Identifier	zval_dtor		71792	0					
ANR	72131	ArgumentList	& op1		71792	1					
ANR	72132	Argument	& op1		71792	0					
ANR	72133	UnaryOperationExpression	& op1		71792	0					
ANR	72134	UnaryOperator	&		71792	0					
ANR	72135	Identifier	op1		71792	1					
ANR	72136	BreakStatement	break ;	255:3:7387:7392	71792	9	True				
ANR	72137	Label	case ZEND_AST_ZVAL :	256:2:7396:7414	71792	10	True				
ANR	72138	Identifier	ZEND_AST_ZVAL		71792	0					
ANR	72139	CompoundStatement		46:3:1282:1315	71792	11					
ANR	72140	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	258:3:7423:7456	71792	0	True				
ANR	72141	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		71792	0					
ANR	72142	IdentifierDeclType	zval *		71792	0					
ANR	72143	Identifier	zv		71792	1					
ANR	72144	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		71792	2		=			
ANR	72145	Identifier	zv		71792	0					
ANR	72146	CallExpression	zend_ast_get_zval ( ast )		71792	1					
ANR	72147	Callee	zend_ast_get_zval		71792	0					
ANR	72148	Identifier	zend_ast_get_zval		71792	0					
ANR	72149	ArgumentList	ast		71792	1					
ANR	72150	Argument	ast		71792	0					
ANR	72151	Identifier	ast		71792	0					
ANR	72152	IfStatement	if ( scope )		71792	1					
ANR	72153	Condition	scope	259:7:7465:7469	71792	0	True				
ANR	72154	Identifier	scope		71792	0					
ANR	72155	CompoundStatement		47:14:1331:1331	71792	1					
ANR	72156	IfStatement	if ( Z_OPT_CONSTANT_P ( zv ) )		71792	0					
ANR	72157	Condition	Z_OPT_CONSTANT_P ( zv )	261:8:7532:7551	71792	0	True				
ANR	72158	CallExpression	Z_OPT_CONSTANT_P ( zv )		71792	0					
ANR	72159	Callee	Z_OPT_CONSTANT_P		71792	0					
ANR	72160	Identifier	Z_OPT_CONSTANT_P		71792	0					
ANR	72161	ArgumentList	zv		71792	1					
ANR	72162	Argument	zv		71792	0					
ANR	72163	Identifier	zv		71792	0					
ANR	72164	CompoundStatement		49:30:1413:1413	71792	1					
ANR	72165	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS ) )"		71792	0					
ANR	72166	Condition	"UNEXPECTED ( zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS )"	262:9:7565:7624	71792	0	True				
ANR	72167	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS )"		71792	0					
ANR	72168	Callee	UNEXPECTED		71792	0					
ANR	72169	Identifier	UNEXPECTED		71792	0					
ANR	72170	ArgumentList	"zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS"		71792	1					
ANR	72171	Argument	"zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS"		71792	0					
ANR	72172	EqualityExpression	"zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS"		71792	0		!=			
ANR	72173	CallExpression	"zval_update_constant_ex ( zv , 1 , scope )"		71792	0					
ANR	72174	Callee	zval_update_constant_ex		71792	0					
ANR	72175	Identifier	zval_update_constant_ex		71792	0					
ANR	72176	ArgumentList	zv		71792	1					
ANR	72177	Argument	zv		71792	0					
ANR	72178	Identifier	zv		71792	0					
ANR	72179	Argument	1		71792	1					
ANR	72180	PrimaryExpression	1		71792	0					
ANR	72181	Argument	scope		71792	2					
ANR	72182	Identifier	scope		71792	0					
ANR	72183	Identifier	SUCCESS		71792	1					
ANR	72184	CompoundStatement		50:71:1486:1486	71792	1					
ANR	72185	ExpressionStatement	ret = FAILURE	263:6:7635:7648	71792	0	True				
ANR	72186	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72187	Identifier	ret		71792	0					
ANR	72188	Identifier	FAILURE		71792	1					
ANR	72189	BreakStatement	break ;	264:6:7656:7661	71792	1	True				
ANR	72190	ExpressionStatement	"ZVAL_DUP ( result , zv )"	267:4:7680:7700	71792	1	True				
ANR	72191	CallExpression	"ZVAL_DUP ( result , zv )"		71792	0					
ANR	72192	Callee	ZVAL_DUP		71792	0					
ANR	72193	Identifier	ZVAL_DUP		71792	0					
ANR	72194	ArgumentList	result		71792	1					
ANR	72195	Argument	result		71792	0					
ANR	72196	Identifier	result		71792	0					
ANR	72197	Argument	zv		71792	1					
ANR	72198	Identifier	zv		71792	0					
ANR	72199	ElseStatement	else		71792	0					
ANR	72200	CompoundStatement		56:10:1571:1571	71792	0					
ANR	72201	ExpressionStatement	"ZVAL_DUP ( result , zv )"	269:4:7718:7738	71792	0	True				
ANR	72202	CallExpression	"ZVAL_DUP ( result , zv )"		71792	0					
ANR	72203	Callee	ZVAL_DUP		71792	0					
ANR	72204	Identifier	ZVAL_DUP		71792	0					
ANR	72205	ArgumentList	result		71792	1					
ANR	72206	Argument	result		71792	0					
ANR	72207	Identifier	result		71792	0					
ANR	72208	Argument	zv		71792	1					
ANR	72209	Identifier	zv		71792	0					
ANR	72210	IfStatement	if ( Z_OPT_CONSTANT_P ( result ) )		71792	1					
ANR	72211	Condition	Z_OPT_CONSTANT_P ( result )	270:8:7748:7771	71792	0	True				
ANR	72212	CallExpression	Z_OPT_CONSTANT_P ( result )		71792	0					
ANR	72213	Callee	Z_OPT_CONSTANT_P		71792	0					
ANR	72214	Identifier	Z_OPT_CONSTANT_P		71792	0					
ANR	72215	ArgumentList	result		71792	1					
ANR	72216	Argument	result		71792	0					
ANR	72217	Identifier	result		71792	0					
ANR	72218	CompoundStatement		58:34:1633:1633	71792	1					
ANR	72219	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( result , 1 , scope ) != SUCCESS ) )"		71792	0					
ANR	72220	Condition	"UNEXPECTED ( zval_update_constant_ex ( result , 1 , scope ) != SUCCESS )"	271:9:7785:7848	71792	0	True				
ANR	72221	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( result , 1 , scope ) != SUCCESS )"		71792	0					
ANR	72222	Callee	UNEXPECTED		71792	0					
ANR	72223	Identifier	UNEXPECTED		71792	0					
ANR	72224	ArgumentList	"zval_update_constant_ex ( result , 1 , scope ) != SUCCESS"		71792	1					
ANR	72225	Argument	"zval_update_constant_ex ( result , 1 , scope ) != SUCCESS"		71792	0					
ANR	72226	EqualityExpression	"zval_update_constant_ex ( result , 1 , scope ) != SUCCESS"		71792	0		!=			
ANR	72227	CallExpression	"zval_update_constant_ex ( result , 1 , scope )"		71792	0					
ANR	72228	Callee	zval_update_constant_ex		71792	0					
ANR	72229	Identifier	zval_update_constant_ex		71792	0					
ANR	72230	ArgumentList	result		71792	1					
ANR	72231	Argument	result		71792	0					
ANR	72232	Identifier	result		71792	0					
ANR	72233	Argument	1		71792	1					
ANR	72234	PrimaryExpression	1		71792	0					
ANR	72235	Argument	scope		71792	2					
ANR	72236	Identifier	scope		71792	0					
ANR	72237	Identifier	SUCCESS		71792	1					
ANR	72238	CompoundStatement		59:75:1710:1710	71792	1					
ANR	72239	ExpressionStatement	ret = FAILURE	272:6:7859:7872	71792	0	True				
ANR	72240	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72241	Identifier	ret		71792	0					
ANR	72242	Identifier	FAILURE		71792	1					
ANR	72243	BreakStatement	break ;	273:6:7880:7885	71792	1	True				
ANR	72244	BreakStatement	break ;	277:3:7908:7913	71792	2	True				
ANR	72245	Label	case ZEND_AST_AND :	279:2:7921:7938	71792	12	True				
ANR	72246	Identifier	ZEND_AST_AND		71792	0					
ANR	72247	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	13					
ANR	72248	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	280:7:7947:8014	71792	0	True				
ANR	72249	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	72250	Callee	UNEXPECTED		71792	0					
ANR	72251	Identifier	UNEXPECTED		71792	0					
ANR	72252	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	72253	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	72254	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72255	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	72256	Callee	zend_ast_evaluate		71792	0					
ANR	72257	Identifier	zend_ast_evaluate		71792	0					
ANR	72258	ArgumentList	& op1		71792	1					
ANR	72259	Argument	& op1		71792	0					
ANR	72260	UnaryOperationExpression	& op1		71792	0					
ANR	72261	UnaryOperator	&		71792	0					
ANR	72262	Identifier	op1		71792	1					
ANR	72263	Argument	ast -> child [ 0 ]		71792	1					
ANR	72264	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	72265	PtrMemberAccess	ast -> child		71792	0					
ANR	72266	Identifier	ast		71792	0					
ANR	72267	Identifier	child		71792	1					
ANR	72268	PrimaryExpression	0		71792	1					
ANR	72269	Argument	scope		71792	2					
ANR	72270	Identifier	scope		71792	0					
ANR	72271	Identifier	SUCCESS		71792	1					
ANR	72272	CompoundStatement		68:77:1876:1876	71792	1					
ANR	72273	ExpressionStatement	ret = FAILURE	281:4:8023:8036	71792	0	True				
ANR	72274	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72275	Identifier	ret		71792	0					
ANR	72276	Identifier	FAILURE		71792	1					
ANR	72277	BreakStatement	break ;	282:4:8042:8047	71792	1	True				
ANR	72278	IfStatement	if ( zend_is_true ( & op1 ) )		71792	14					
ANR	72279	Condition	zend_is_true ( & op1 )	284:7:8061:8078	71792	0	True				
ANR	72280	CallExpression	zend_is_true ( & op1 )		71792	0					
ANR	72281	Callee	zend_is_true		71792	0					
ANR	72282	Identifier	zend_is_true		71792	0					
ANR	72283	ArgumentList	& op1		71792	1					
ANR	72284	Argument	& op1		71792	0					
ANR	72285	UnaryOperationExpression	& op1		71792	0					
ANR	72286	UnaryOperator	&		71792	0					
ANR	72287	Identifier	op1		71792	1					
ANR	72288	CompoundStatement		72:27:1940:1940	71792	1					
ANR	72289	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	72290	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	285:8:8091:8158	71792	0	True				
ANR	72291	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		71792	0					
ANR	72292	Callee	UNEXPECTED		71792	0					
ANR	72293	Identifier	UNEXPECTED		71792	0					
ANR	72294	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	1					
ANR	72295	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0					
ANR	72296	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72297	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		71792	0					
ANR	72298	Callee	zend_ast_evaluate		71792	0					
ANR	72299	Identifier	zend_ast_evaluate		71792	0					
ANR	72300	ArgumentList	& op2		71792	1					
ANR	72301	Argument	& op2		71792	0					
ANR	72302	UnaryOperationExpression	& op2		71792	0					
ANR	72303	UnaryOperator	&		71792	0					
ANR	72304	Identifier	op2		71792	1					
ANR	72305	Argument	ast -> child [ 1 ]		71792	1					
ANR	72306	ArrayIndexing	ast -> child [ 1 ]		71792	0					
ANR	72307	PtrMemberAccess	ast -> child		71792	0					
ANR	72308	Identifier	ast		71792	0					
ANR	72309	Identifier	child		71792	1					
ANR	72310	PrimaryExpression	1		71792	1					
ANR	72311	Argument	scope		71792	2					
ANR	72312	Identifier	scope		71792	0					
ANR	72313	Identifier	SUCCESS		71792	1					
ANR	72314	CompoundStatement		73:78:2020:2020	71792	1					
ANR	72315	ExpressionStatement	zval_dtor ( & op1 )	286:5:8168:8183	71792	0	True				
ANR	72316	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72317	Callee	zval_dtor		71792	0					
ANR	72318	Identifier	zval_dtor		71792	0					
ANR	72319	ArgumentList	& op1		71792	1					
ANR	72320	Argument	& op1		71792	0					
ANR	72321	UnaryOperationExpression	& op1		71792	0					
ANR	72322	UnaryOperator	&		71792	0					
ANR	72323	Identifier	op1		71792	1					
ANR	72324	ExpressionStatement	ret = FAILURE	287:5:8190:8203	71792	1	True				
ANR	72325	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72326	Identifier	ret		71792	0					
ANR	72327	Identifier	FAILURE		71792	1					
ANR	72328	BreakStatement	break ;	288:5:8210:8215	71792	2	True				
ANR	72329	ExpressionStatement	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"	290:4:8227:8264	71792	1	True				
ANR	72330	CallExpression	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"		71792	0					
ANR	72331	Callee	ZVAL_BOOL		71792	0					
ANR	72332	Identifier	ZVAL_BOOL		71792	0					
ANR	72333	ArgumentList	result		71792	1					
ANR	72334	Argument	result		71792	0					
ANR	72335	Identifier	result		71792	0					
ANR	72336	Argument	zend_is_true ( & op2 )		71792	1					
ANR	72337	CallExpression	zend_is_true ( & op2 )		71792	0					
ANR	72338	Callee	zend_is_true		71792	0					
ANR	72339	Identifier	zend_is_true		71792	0					
ANR	72340	ArgumentList	& op2		71792	1					
ANR	72341	Argument	& op2		71792	0					
ANR	72342	UnaryOperationExpression	& op2		71792	0					
ANR	72343	UnaryOperator	&		71792	0					
ANR	72344	Identifier	op2		71792	1					
ANR	72345	ExpressionStatement	zval_dtor ( & op2 )	291:4:8270:8285	71792	2	True				
ANR	72346	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	72347	Callee	zval_dtor		71792	0					
ANR	72348	Identifier	zval_dtor		71792	0					
ANR	72349	ArgumentList	& op2		71792	1					
ANR	72350	Argument	& op2		71792	0					
ANR	72351	UnaryOperationExpression	& op2		71792	0					
ANR	72352	UnaryOperator	&		71792	0					
ANR	72353	Identifier	op2		71792	1					
ANR	72354	ElseStatement	else		71792	0					
ANR	72355	CompoundStatement		80:10:2156:2156	71792	0					
ANR	72356	ExpressionStatement	ZVAL_FALSE ( result )	293:4:8303:8321	71792	0	True				
ANR	72357	CallExpression	ZVAL_FALSE ( result )		71792	0					
ANR	72358	Callee	ZVAL_FALSE		71792	0					
ANR	72359	Identifier	ZVAL_FALSE		71792	0					
ANR	72360	ArgumentList	result		71792	1					
ANR	72361	Argument	result		71792	0					
ANR	72362	Identifier	result		71792	0					
ANR	72363	ExpressionStatement	zval_dtor ( & op1 )	295:3:8331:8346	71792	15	True				
ANR	72364	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72365	Callee	zval_dtor		71792	0					
ANR	72366	Identifier	zval_dtor		71792	0					
ANR	72367	ArgumentList	& op1		71792	1					
ANR	72368	Argument	& op1		71792	0					
ANR	72369	UnaryOperationExpression	& op1		71792	0					
ANR	72370	UnaryOperator	&		71792	0					
ANR	72371	Identifier	op1		71792	1					
ANR	72372	BreakStatement	break ;	296:3:8351:8356	71792	16	True				
ANR	72373	Label	case ZEND_AST_OR :	297:2:8360:8376	71792	17	True				
ANR	72374	Identifier	ZEND_AST_OR		71792	0					
ANR	72375	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	18					
ANR	72376	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	298:7:8385:8452	71792	0	True				
ANR	72377	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	72378	Callee	UNEXPECTED		71792	0					
ANR	72379	Identifier	UNEXPECTED		71792	0					
ANR	72380	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	72381	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	72382	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72383	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	72384	Callee	zend_ast_evaluate		71792	0					
ANR	72385	Identifier	zend_ast_evaluate		71792	0					
ANR	72386	ArgumentList	& op1		71792	1					
ANR	72387	Argument	& op1		71792	0					
ANR	72388	UnaryOperationExpression	& op1		71792	0					
ANR	72389	UnaryOperator	&		71792	0					
ANR	72390	Identifier	op1		71792	1					
ANR	72391	Argument	ast -> child [ 0 ]		71792	1					
ANR	72392	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	72393	PtrMemberAccess	ast -> child		71792	0					
ANR	72394	Identifier	ast		71792	0					
ANR	72395	Identifier	child		71792	1					
ANR	72396	PrimaryExpression	0		71792	1					
ANR	72397	Argument	scope		71792	2					
ANR	72398	Identifier	scope		71792	0					
ANR	72399	Identifier	SUCCESS		71792	1					
ANR	72400	CompoundStatement		86:77:2314:2314	71792	1					
ANR	72401	ExpressionStatement	ret = FAILURE	299:4:8461:8474	71792	0	True				
ANR	72402	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72403	Identifier	ret		71792	0					
ANR	72404	Identifier	FAILURE		71792	1					
ANR	72405	BreakStatement	break ;	300:4:8480:8485	71792	1	True				
ANR	72406	IfStatement	if ( zend_is_true ( & op1 ) )		71792	19					
ANR	72407	Condition	zend_is_true ( & op1 )	302:7:8499:8516	71792	0	True				
ANR	72408	CallExpression	zend_is_true ( & op1 )		71792	0					
ANR	72409	Callee	zend_is_true		71792	0					
ANR	72410	Identifier	zend_is_true		71792	0					
ANR	72411	ArgumentList	& op1		71792	1					
ANR	72412	Argument	& op1		71792	0					
ANR	72413	UnaryOperationExpression	& op1		71792	0					
ANR	72414	UnaryOperator	&		71792	0					
ANR	72415	Identifier	op1		71792	1					
ANR	72416	CompoundStatement		90:27:2378:2378	71792	1					
ANR	72417	ExpressionStatement	ZVAL_TRUE ( result )	303:4:8525:8542	71792	0	True				
ANR	72418	CallExpression	ZVAL_TRUE ( result )		71792	0					
ANR	72419	Callee	ZVAL_TRUE		71792	0					
ANR	72420	Identifier	ZVAL_TRUE		71792	0					
ANR	72421	ArgumentList	result		71792	1					
ANR	72422	Argument	result		71792	0					
ANR	72423	Identifier	result		71792	0					
ANR	72424	ElseStatement	else		71792	0					
ANR	72425	CompoundStatement		92:10:2413:2413	71792	0					
ANR	72426	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	72427	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	305:8:8564:8631	71792	0	True				
ANR	72428	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		71792	0					
ANR	72429	Callee	UNEXPECTED		71792	0					
ANR	72430	Identifier	UNEXPECTED		71792	0					
ANR	72431	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	1					
ANR	72432	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0					
ANR	72433	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72434	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		71792	0					
ANR	72435	Callee	zend_ast_evaluate		71792	0					
ANR	72436	Identifier	zend_ast_evaluate		71792	0					
ANR	72437	ArgumentList	& op2		71792	1					
ANR	72438	Argument	& op2		71792	0					
ANR	72439	UnaryOperationExpression	& op2		71792	0					
ANR	72440	UnaryOperator	&		71792	0					
ANR	72441	Identifier	op2		71792	1					
ANR	72442	Argument	ast -> child [ 1 ]		71792	1					
ANR	72443	ArrayIndexing	ast -> child [ 1 ]		71792	0					
ANR	72444	PtrMemberAccess	ast -> child		71792	0					
ANR	72445	Identifier	ast		71792	0					
ANR	72446	Identifier	child		71792	1					
ANR	72447	PrimaryExpression	1		71792	1					
ANR	72448	Argument	scope		71792	2					
ANR	72449	Identifier	scope		71792	0					
ANR	72450	Identifier	SUCCESS		71792	1					
ANR	72451	CompoundStatement		93:78:2493:2493	71792	1					
ANR	72452	ExpressionStatement	zval_dtor ( & op1 )	306:5:8641:8656	71792	0	True				
ANR	72453	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72454	Callee	zval_dtor		71792	0					
ANR	72455	Identifier	zval_dtor		71792	0					
ANR	72456	ArgumentList	& op1		71792	1					
ANR	72457	Argument	& op1		71792	0					
ANR	72458	UnaryOperationExpression	& op1		71792	0					
ANR	72459	UnaryOperator	&		71792	0					
ANR	72460	Identifier	op1		71792	1					
ANR	72461	ExpressionStatement	ret = FAILURE	307:5:8663:8676	71792	1	True				
ANR	72462	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72463	Identifier	ret		71792	0					
ANR	72464	Identifier	FAILURE		71792	1					
ANR	72465	BreakStatement	break ;	308:5:8683:8688	71792	2	True				
ANR	72466	ExpressionStatement	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"	310:4:8700:8737	71792	1	True				
ANR	72467	CallExpression	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"		71792	0					
ANR	72468	Callee	ZVAL_BOOL		71792	0					
ANR	72469	Identifier	ZVAL_BOOL		71792	0					
ANR	72470	ArgumentList	result		71792	1					
ANR	72471	Argument	result		71792	0					
ANR	72472	Identifier	result		71792	0					
ANR	72473	Argument	zend_is_true ( & op2 )		71792	1					
ANR	72474	CallExpression	zend_is_true ( & op2 )		71792	0					
ANR	72475	Callee	zend_is_true		71792	0					
ANR	72476	Identifier	zend_is_true		71792	0					
ANR	72477	ArgumentList	& op2		71792	1					
ANR	72478	Argument	& op2		71792	0					
ANR	72479	UnaryOperationExpression	& op2		71792	0					
ANR	72480	UnaryOperator	&		71792	0					
ANR	72481	Identifier	op2		71792	1					
ANR	72482	ExpressionStatement	zval_dtor ( & op2 )	311:4:8743:8758	71792	2	True				
ANR	72483	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	72484	Callee	zval_dtor		71792	0					
ANR	72485	Identifier	zval_dtor		71792	0					
ANR	72486	ArgumentList	& op2		71792	1					
ANR	72487	Argument	& op2		71792	0					
ANR	72488	UnaryOperationExpression	& op2		71792	0					
ANR	72489	UnaryOperator	&		71792	0					
ANR	72490	Identifier	op2		71792	1					
ANR	72491	ExpressionStatement	zval_dtor ( & op1 )	313:3:8768:8783	71792	20	True				
ANR	72492	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72493	Callee	zval_dtor		71792	0					
ANR	72494	Identifier	zval_dtor		71792	0					
ANR	72495	ArgumentList	& op1		71792	1					
ANR	72496	Argument	& op1		71792	0					
ANR	72497	UnaryOperationExpression	& op1		71792	0					
ANR	72498	UnaryOperator	&		71792	0					
ANR	72499	Identifier	op1		71792	1					
ANR	72500	BreakStatement	break ;	314:3:8788:8793	71792	21	True				
ANR	72501	Label	case ZEND_AST_CONDITIONAL :	315:2:8797:8822	71792	22	True				
ANR	72502	Identifier	ZEND_AST_CONDITIONAL		71792	0					
ANR	72503	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	23					
ANR	72504	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	316:7:8831:8898	71792	0	True				
ANR	72505	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	72506	Callee	UNEXPECTED		71792	0					
ANR	72507	Identifier	UNEXPECTED		71792	0					
ANR	72508	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	72509	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	72510	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72511	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	72512	Callee	zend_ast_evaluate		71792	0					
ANR	72513	Identifier	zend_ast_evaluate		71792	0					
ANR	72514	ArgumentList	& op1		71792	1					
ANR	72515	Argument	& op1		71792	0					
ANR	72516	UnaryOperationExpression	& op1		71792	0					
ANR	72517	UnaryOperator	&		71792	0					
ANR	72518	Identifier	op1		71792	1					
ANR	72519	Argument	ast -> child [ 0 ]		71792	1					
ANR	72520	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	72521	PtrMemberAccess	ast -> child		71792	0					
ANR	72522	Identifier	ast		71792	0					
ANR	72523	Identifier	child		71792	1					
ANR	72524	PrimaryExpression	0		71792	1					
ANR	72525	Argument	scope		71792	2					
ANR	72526	Identifier	scope		71792	0					
ANR	72527	Identifier	SUCCESS		71792	1					
ANR	72528	CompoundStatement		104:77:2760:2760	71792	1					
ANR	72529	ExpressionStatement	ret = FAILURE	317:4:8907:8920	71792	0	True				
ANR	72530	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72531	Identifier	ret		71792	0					
ANR	72532	Identifier	FAILURE		71792	1					
ANR	72533	BreakStatement	break ;	318:4:8926:8931	71792	1	True				
ANR	72534	IfStatement	if ( zend_is_true ( & op1 ) )		71792	24					
ANR	72535	Condition	zend_is_true ( & op1 )	320:7:8945:8962	71792	0	True				
ANR	72536	CallExpression	zend_is_true ( & op1 )		71792	0					
ANR	72537	Callee	zend_is_true		71792	0					
ANR	72538	Identifier	zend_is_true		71792	0					
ANR	72539	ArgumentList	& op1		71792	1					
ANR	72540	Argument	& op1		71792	0					
ANR	72541	UnaryOperationExpression	& op1		71792	0					
ANR	72542	UnaryOperator	&		71792	0					
ANR	72543	Identifier	op1		71792	1					
ANR	72544	CompoundStatement		108:27:2824:2824	71792	1					
ANR	72545	IfStatement	if ( ! ast -> child [ 1 ] )		71792	0					
ANR	72546	Condition	! ast -> child [ 1 ]	321:8:8975:8988	71792	0	True				
ANR	72547	UnaryOperationExpression	! ast -> child [ 1 ]		71792	0					
ANR	72548	UnaryOperator	!		71792	0					
ANR	72549	ArrayIndexing	ast -> child [ 1 ]		71792	1					
ANR	72550	PtrMemberAccess	ast -> child		71792	0					
ANR	72551	Identifier	ast		71792	0					
ANR	72552	Identifier	child		71792	1					
ANR	72553	PrimaryExpression	1		71792	1					
ANR	72554	CompoundStatement		109:24:2850:2850	71792	1					
ANR	72555	ExpressionStatement	* result = op1	322:5:8998:9011	71792	0	True				
ANR	72556	AssignmentExpression	* result = op1		71792	0		=			
ANR	72557	UnaryOperationExpression	* result		71792	0					
ANR	72558	UnaryOperator	*		71792	0					
ANR	72559	Identifier	result		71792	1					
ANR	72560	Identifier	op1		71792	1					
ANR	72561	ElseStatement	else		71792	0					
ANR	72562	CompoundStatement		111:11:2883:2883	71792	0					
ANR	72563	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	72564	Condition	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS )"	324:9:9035:9104	71792	0	True				
ANR	72565	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS )"		71792	0					
ANR	72566	Callee	UNEXPECTED		71792	0					
ANR	72567	Identifier	UNEXPECTED		71792	0					
ANR	72568	ArgumentList	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	1					
ANR	72569	Argument	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0					
ANR	72570	EqualityExpression	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72571	CallExpression	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope )"		71792	0					
ANR	72572	Callee	zend_ast_evaluate		71792	0					
ANR	72573	Identifier	zend_ast_evaluate		71792	0					
ANR	72574	ArgumentList	result		71792	1					
ANR	72575	Argument	result		71792	0					
ANR	72576	Identifier	result		71792	0					
ANR	72577	Argument	ast -> child [ 1 ]		71792	1					
ANR	72578	ArrayIndexing	ast -> child [ 1 ]		71792	0					
ANR	72579	PtrMemberAccess	ast -> child		71792	0					
ANR	72580	Identifier	ast		71792	0					
ANR	72581	Identifier	child		71792	1					
ANR	72582	PrimaryExpression	1		71792	1					
ANR	72583	Argument	scope		71792	2					
ANR	72584	Identifier	scope		71792	0					
ANR	72585	Identifier	SUCCESS		71792	1					
ANR	72586	CompoundStatement		112:81:2966:2966	71792	1					
ANR	72587	ExpressionStatement	zval_dtor ( & op1 )	325:6:9115:9130	71792	0	True				
ANR	72588	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72589	Callee	zval_dtor		71792	0					
ANR	72590	Identifier	zval_dtor		71792	0					
ANR	72591	ArgumentList	& op1		71792	1					
ANR	72592	Argument	& op1		71792	0					
ANR	72593	UnaryOperationExpression	& op1		71792	0					
ANR	72594	UnaryOperator	&		71792	0					
ANR	72595	Identifier	op1		71792	1					
ANR	72596	ExpressionStatement	ret = FAILURE	326:6:9138:9151	71792	1	True				
ANR	72597	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72598	Identifier	ret		71792	0					
ANR	72599	Identifier	FAILURE		71792	1					
ANR	72600	BreakStatement	break ;	327:6:9159:9164	71792	2	True				
ANR	72601	ExpressionStatement	zval_dtor ( & op1 )	329:5:9178:9193	71792	1	True				
ANR	72602	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72603	Callee	zval_dtor		71792	0					
ANR	72604	Identifier	zval_dtor		71792	0					
ANR	72605	ArgumentList	& op1		71792	1					
ANR	72606	Argument	& op1		71792	0					
ANR	72607	UnaryOperationExpression	& op1		71792	0					
ANR	72608	UnaryOperator	&		71792	0					
ANR	72609	Identifier	op1		71792	1					
ANR	72610	ElseStatement	else		71792	0					
ANR	72611	CompoundStatement		119:10:3070:3070	71792	0					
ANR	72612	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	72613	Condition	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS )"	332:8:9221:9290	71792	0	True				
ANR	72614	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS )"		71792	0					
ANR	72615	Callee	UNEXPECTED		71792	0					
ANR	72616	Identifier	UNEXPECTED		71792	0					
ANR	72617	ArgumentList	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS"		71792	1					
ANR	72618	Argument	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS"		71792	0					
ANR	72619	EqualityExpression	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72620	CallExpression	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope )"		71792	0					
ANR	72621	Callee	zend_ast_evaluate		71792	0					
ANR	72622	Identifier	zend_ast_evaluate		71792	0					
ANR	72623	ArgumentList	result		71792	1					
ANR	72624	Argument	result		71792	0					
ANR	72625	Identifier	result		71792	0					
ANR	72626	Argument	ast -> child [ 2 ]		71792	1					
ANR	72627	ArrayIndexing	ast -> child [ 2 ]		71792	0					
ANR	72628	PtrMemberAccess	ast -> child		71792	0					
ANR	72629	Identifier	ast		71792	0					
ANR	72630	Identifier	child		71792	1					
ANR	72631	PrimaryExpression	2		71792	1					
ANR	72632	Argument	scope		71792	2					
ANR	72633	Identifier	scope		71792	0					
ANR	72634	Identifier	SUCCESS		71792	1					
ANR	72635	CompoundStatement		120:80:3152:3152	71792	1					
ANR	72636	ExpressionStatement	zval_dtor ( & op1 )	333:5:9300:9315	71792	0	True				
ANR	72637	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72638	Callee	zval_dtor		71792	0					
ANR	72639	Identifier	zval_dtor		71792	0					
ANR	72640	ArgumentList	& op1		71792	1					
ANR	72641	Argument	& op1		71792	0					
ANR	72642	UnaryOperationExpression	& op1		71792	0					
ANR	72643	UnaryOperator	&		71792	0					
ANR	72644	Identifier	op1		71792	1					
ANR	72645	ExpressionStatement	ret = FAILURE	334:5:9322:9335	71792	1	True				
ANR	72646	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72647	Identifier	ret		71792	0					
ANR	72648	Identifier	FAILURE		71792	1					
ANR	72649	BreakStatement	break ;	335:5:9342:9347	71792	2	True				
ANR	72650	ExpressionStatement	zval_dtor ( & op1 )	337:4:9359:9374	71792	1	True				
ANR	72651	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72652	Callee	zval_dtor		71792	0					
ANR	72653	Identifier	zval_dtor		71792	0					
ANR	72654	ArgumentList	& op1		71792	1					
ANR	72655	Argument	& op1		71792	0					
ANR	72656	UnaryOperationExpression	& op1		71792	0					
ANR	72657	UnaryOperator	&		71792	0					
ANR	72658	Identifier	op1		71792	1					
ANR	72659	BreakStatement	break ;	339:3:9384:9389	71792	25	True				
ANR	72660	Label	case ZEND_AST_UNARY_PLUS :	340:2:9393:9417	71792	26	True				
ANR	72661	Identifier	ZEND_AST_UNARY_PLUS		71792	0					
ANR	72662	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	27					
ANR	72663	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"	341:7:9426:9493	71792	0	True				
ANR	72664	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	72665	Callee	UNEXPECTED		71792	0					
ANR	72666	Identifier	UNEXPECTED		71792	0					
ANR	72667	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	72668	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	72669	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72670	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	72671	Callee	zend_ast_evaluate		71792	0					
ANR	72672	Identifier	zend_ast_evaluate		71792	0					
ANR	72673	ArgumentList	& op2		71792	1					
ANR	72674	Argument	& op2		71792	0					
ANR	72675	UnaryOperationExpression	& op2		71792	0					
ANR	72676	UnaryOperator	&		71792	0					
ANR	72677	Identifier	op2		71792	1					
ANR	72678	Argument	ast -> child [ 0 ]		71792	1					
ANR	72679	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	72680	PtrMemberAccess	ast -> child		71792	0					
ANR	72681	Identifier	ast		71792	0					
ANR	72682	Identifier	child		71792	1					
ANR	72683	PrimaryExpression	0		71792	1					
ANR	72684	Argument	scope		71792	2					
ANR	72685	Identifier	scope		71792	0					
ANR	72686	Identifier	SUCCESS		71792	1					
ANR	72687	CompoundStatement		129:77:3355:3355	71792	1					
ANR	72688	ExpressionStatement	ret = FAILURE	342:4:9502:9515	71792	0	True				
ANR	72689	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72690	Identifier	ret		71792	0					
ANR	72691	Identifier	FAILURE		71792	1					
ANR	72692	ElseStatement	else		71792	0					
ANR	72693	CompoundStatement		131:10:3386:3386	71792	0					
ANR	72694	ExpressionStatement	"ZVAL_LONG ( & op1 , 0 )"	344:4:9533:9551	71792	0	True				
ANR	72695	CallExpression	"ZVAL_LONG ( & op1 , 0 )"		71792	0					
ANR	72696	Callee	ZVAL_LONG		71792	0					
ANR	72697	Identifier	ZVAL_LONG		71792	0					
ANR	72698	ArgumentList	& op1		71792	1					
ANR	72699	Argument	& op1		71792	0					
ANR	72700	UnaryOperationExpression	& op1		71792	0					
ANR	72701	UnaryOperator	&		71792	0					
ANR	72702	Identifier	op1		71792	1					
ANR	72703	Argument	0		71792	1					
ANR	72704	PrimaryExpression	0		71792	0					
ANR	72705	ExpressionStatement	"ret = add_function ( result , & op1 , & op2 )"	345:4:9557:9595	71792	1	True				
ANR	72706	AssignmentExpression	"ret = add_function ( result , & op1 , & op2 )"		71792	0		=			
ANR	72707	Identifier	ret		71792	0					
ANR	72708	CallExpression	"add_function ( result , & op1 , & op2 )"		71792	1					
ANR	72709	Callee	add_function		71792	0					
ANR	72710	Identifier	add_function		71792	0					
ANR	72711	ArgumentList	result		71792	1					
ANR	72712	Argument	result		71792	0					
ANR	72713	Identifier	result		71792	0					
ANR	72714	Argument	& op1		71792	1					
ANR	72715	UnaryOperationExpression	& op1		71792	0					
ANR	72716	UnaryOperator	&		71792	0					
ANR	72717	Identifier	op1		71792	1					
ANR	72718	Argument	& op2		71792	2					
ANR	72719	UnaryOperationExpression	& op2		71792	0					
ANR	72720	UnaryOperator	&		71792	0					
ANR	72721	Identifier	op2		71792	1					
ANR	72722	ExpressionStatement	zval_dtor ( & op2 )	346:4:9601:9616	71792	2	True				
ANR	72723	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	72724	Callee	zval_dtor		71792	0					
ANR	72725	Identifier	zval_dtor		71792	0					
ANR	72726	ArgumentList	& op2		71792	1					
ANR	72727	Argument	& op2		71792	0					
ANR	72728	UnaryOperationExpression	& op2		71792	0					
ANR	72729	UnaryOperator	&		71792	0					
ANR	72730	Identifier	op2		71792	1					
ANR	72731	BreakStatement	break ;	348:3:9626:9631	71792	28	True				
ANR	72732	Label	case ZEND_AST_UNARY_MINUS :	349:2:9635:9660	71792	29	True				
ANR	72733	Identifier	ZEND_AST_UNARY_MINUS		71792	0					
ANR	72734	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	30					
ANR	72735	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"	350:7:9669:9736	71792	0	True				
ANR	72736	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	72737	Callee	UNEXPECTED		71792	0					
ANR	72738	Identifier	UNEXPECTED		71792	0					
ANR	72739	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	72740	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	72741	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72742	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	72743	Callee	zend_ast_evaluate		71792	0					
ANR	72744	Identifier	zend_ast_evaluate		71792	0					
ANR	72745	ArgumentList	& op2		71792	1					
ANR	72746	Argument	& op2		71792	0					
ANR	72747	UnaryOperationExpression	& op2		71792	0					
ANR	72748	UnaryOperator	&		71792	0					
ANR	72749	Identifier	op2		71792	1					
ANR	72750	Argument	ast -> child [ 0 ]		71792	1					
ANR	72751	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	72752	PtrMemberAccess	ast -> child		71792	0					
ANR	72753	Identifier	ast		71792	0					
ANR	72754	Identifier	child		71792	1					
ANR	72755	PrimaryExpression	0		71792	1					
ANR	72756	Argument	scope		71792	2					
ANR	72757	Identifier	scope		71792	0					
ANR	72758	Identifier	SUCCESS		71792	1					
ANR	72759	CompoundStatement		138:77:3598:3598	71792	1					
ANR	72760	ExpressionStatement	ret = FAILURE	351:4:9745:9758	71792	0	True				
ANR	72761	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	72762	Identifier	ret		71792	0					
ANR	72763	Identifier	FAILURE		71792	1					
ANR	72764	ElseStatement	else		71792	0					
ANR	72765	CompoundStatement		140:10:3629:3629	71792	0					
ANR	72766	ExpressionStatement	"ZVAL_LONG ( & op1 , 0 )"	353:4:9776:9794	71792	0	True				
ANR	72767	CallExpression	"ZVAL_LONG ( & op1 , 0 )"		71792	0					
ANR	72768	Callee	ZVAL_LONG		71792	0					
ANR	72769	Identifier	ZVAL_LONG		71792	0					
ANR	72770	ArgumentList	& op1		71792	1					
ANR	72771	Argument	& op1		71792	0					
ANR	72772	UnaryOperationExpression	& op1		71792	0					
ANR	72773	UnaryOperator	&		71792	0					
ANR	72774	Identifier	op1		71792	1					
ANR	72775	Argument	0		71792	1					
ANR	72776	PrimaryExpression	0		71792	0					
ANR	72777	ExpressionStatement	"ret = sub_function ( result , & op1 , & op2 )"	354:4:9800:9838	71792	1	True				
ANR	72778	AssignmentExpression	"ret = sub_function ( result , & op1 , & op2 )"		71792	0		=			
ANR	72779	Identifier	ret		71792	0					
ANR	72780	CallExpression	"sub_function ( result , & op1 , & op2 )"		71792	1					
ANR	72781	Callee	sub_function		71792	0					
ANR	72782	Identifier	sub_function		71792	0					
ANR	72783	ArgumentList	result		71792	1					
ANR	72784	Argument	result		71792	0					
ANR	72785	Identifier	result		71792	0					
ANR	72786	Argument	& op1		71792	1					
ANR	72787	UnaryOperationExpression	& op1		71792	0					
ANR	72788	UnaryOperator	&		71792	0					
ANR	72789	Identifier	op1		71792	1					
ANR	72790	Argument	& op2		71792	2					
ANR	72791	UnaryOperationExpression	& op2		71792	0					
ANR	72792	UnaryOperator	&		71792	0					
ANR	72793	Identifier	op2		71792	1					
ANR	72794	ExpressionStatement	zval_dtor ( & op2 )	355:4:9844:9859	71792	2	True				
ANR	72795	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	72796	Callee	zval_dtor		71792	0					
ANR	72797	Identifier	zval_dtor		71792	0					
ANR	72798	ArgumentList	& op2		71792	1					
ANR	72799	Argument	& op2		71792	0					
ANR	72800	UnaryOperationExpression	& op2		71792	0					
ANR	72801	UnaryOperator	&		71792	0					
ANR	72802	Identifier	op2		71792	1					
ANR	72803	BreakStatement	break ;	357:3:9869:9874	71792	31	True				
ANR	72804	Label	case ZEND_AST_ARRAY :	358:2:9878:9897	71792	32	True				
ANR	72805	Identifier	ZEND_AST_ARRAY		71792	0					
ANR	72806	ExpressionStatement	array_init ( result )	359:3:9902:9920	71792	33	True				
ANR	72807	CallExpression	array_init ( result )		71792	0					
ANR	72808	Callee	array_init		71792	0					
ANR	72809	Identifier	array_init		71792	0					
ANR	72810	ArgumentList	result		71792	1					
ANR	72811	Argument	result		71792	0					
ANR	72812	Identifier	result		71792	0					
ANR	72813	CompoundStatement		150:4:3806:3850	71792	34					
ANR	72814	IdentifierDeclStatement	uint32_t i ;	361:4:9931:9941	71792	0	True				
ANR	72815	IdentifierDecl	i		71792	0					
ANR	72816	IdentifierDeclType	uint32_t		71792	0					
ANR	72817	Identifier	i		71792	1					
ANR	72818	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	362:4:9947:9991	71792	1	True				
ANR	72819	IdentifierDecl	* list = zend_ast_get_list ( ast )		71792	0					
ANR	72820	IdentifierDeclType	zend_ast_list *		71792	0					
ANR	72821	Identifier	list		71792	1					
ANR	72822	AssignmentExpression	* list = zend_ast_get_list ( ast )		71792	2		=			
ANR	72823	Identifier	list		71792	0					
ANR	72824	CallExpression	zend_ast_get_list ( ast )		71792	1					
ANR	72825	Callee	zend_ast_get_list		71792	0					
ANR	72826	Identifier	zend_ast_get_list		71792	0					
ANR	72827	ArgumentList	ast		71792	1					
ANR	72828	Argument	ast		71792	0					
ANR	72829	Identifier	ast		71792	0					
ANR	72830	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		71792	2					
ANR	72831	ForInit	i = 0 ;	363:9:10002:10007	71792	0	True				
ANR	72832	AssignmentExpression	i = 0		71792	0		=			
ANR	72833	Identifier	i		71792	0					
ANR	72834	PrimaryExpression	0		71792	1					
ANR	72835	Condition	i < list -> children	363:16:10009:10026	71792	1	True				
ANR	72836	RelationalExpression	i < list -> children		71792	0		<			
ANR	72837	Identifier	i		71792	0					
ANR	72838	PtrMemberAccess	list -> children		71792	1					
ANR	72839	Identifier	list		71792	0					
ANR	72840	Identifier	children		71792	1					
ANR	72841	PostIncDecOperationExpression	i ++	363:36:10029:10031	71792	2	True				
ANR	72842	Identifier	i		71792	0					
ANR	72843	IncDec	++		71792	1					
ANR	72844	CompoundStatement		152:5:3900:3931	71792	3					
ANR	72845	IdentifierDeclStatement	zend_ast * elem = list -> child [ i ] ;	364:5:10041:10072	71792	0	True				
ANR	72846	IdentifierDecl	* elem = list -> child [ i ]		71792	0					
ANR	72847	IdentifierDeclType	zend_ast *		71792	0					
ANR	72848	Identifier	elem		71792	1					
ANR	72849	AssignmentExpression	* elem = list -> child [ i ]		71792	2		=			
ANR	72850	Identifier	elem		71792	0					
ANR	72851	ArrayIndexing	list -> child [ i ]		71792	1					
ANR	72852	PtrMemberAccess	list -> child		71792	0					
ANR	72853	Identifier	list		71792	0					
ANR	72854	Identifier	child		71792	1					
ANR	72855	Identifier	i		71792	1					
ANR	72856	IfStatement	if ( elem -> child [ 1 ] )		71792	1					
ANR	72857	Condition	elem -> child [ 1 ]	365:9:10083:10096	71792	0	True				
ANR	72858	ArrayIndexing	elem -> child [ 1 ]		71792	0					
ANR	72859	PtrMemberAccess	elem -> child		71792	0					
ANR	72860	Identifier	elem		71792	0					
ANR	72861	Identifier	child		71792	1					
ANR	72862	PrimaryExpression	1		71792	1					
ANR	72863	CompoundStatement		153:25:3958:3958	71792	1					
ANR	72864	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	72865	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS )"	366:10:10111:10179	71792	0	True				
ANR	72866	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS )"		71792	0					
ANR	72867	Callee	UNEXPECTED		71792	0					
ANR	72868	Identifier	UNEXPECTED		71792	0					
ANR	72869	ArgumentList	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS"		71792	1					
ANR	72870	Argument	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS"		71792	0					
ANR	72871	EqualityExpression	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72872	CallExpression	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope )"		71792	0					
ANR	72873	Callee	zend_ast_evaluate		71792	0					
ANR	72874	Identifier	zend_ast_evaluate		71792	0					
ANR	72875	ArgumentList	& op1		71792	1					
ANR	72876	Argument	& op1		71792	0					
ANR	72877	UnaryOperationExpression	& op1		71792	0					
ANR	72878	UnaryOperator	&		71792	0					
ANR	72879	Identifier	op1		71792	1					
ANR	72880	Argument	elem -> child [ 1 ]		71792	1					
ANR	72881	ArrayIndexing	elem -> child [ 1 ]		71792	0					
ANR	72882	PtrMemberAccess	elem -> child		71792	0					
ANR	72883	Identifier	elem		71792	0					
ANR	72884	Identifier	child		71792	1					
ANR	72885	PrimaryExpression	1		71792	1					
ANR	72886	Argument	scope		71792	2					
ANR	72887	Identifier	scope		71792	0					
ANR	72888	Identifier	SUCCESS		71792	1					
ANR	72889	CompoundStatement		154:81:4041:4041	71792	1					
ANR	72890	ExpressionStatement	zval_dtor ( result )	367:7:10191:10208	71792	0	True				
ANR	72891	CallExpression	zval_dtor ( result )		71792	0					
ANR	72892	Callee	zval_dtor		71792	0					
ANR	72893	Identifier	zval_dtor		71792	0					
ANR	72894	ArgumentList	result		71792	1					
ANR	72895	Argument	result		71792	0					
ANR	72896	Identifier	result		71792	0					
ANR	72897	ReturnStatement	return FAILURE ;	368:7:10217:10231	71792	1	True				
ANR	72898	Identifier	FAILURE		71792	0					
ANR	72899	ElseStatement	else		71792	0					
ANR	72900	CompoundStatement		158:12:4112:4112	71792	0					
ANR	72901	ExpressionStatement	ZVAL_UNDEF ( & op1 )	371:6:10261:10277	71792	0	True				
ANR	72902	CallExpression	ZVAL_UNDEF ( & op1 )		71792	0					
ANR	72903	Callee	ZVAL_UNDEF		71792	0					
ANR	72904	Identifier	ZVAL_UNDEF		71792	0					
ANR	72905	ArgumentList	& op1		71792	1					
ANR	72906	Argument	& op1		71792	0					
ANR	72907	UnaryOperationExpression	& op1		71792	0					
ANR	72908	UnaryOperator	&		71792	0					
ANR	72909	Identifier	op1		71792	1					
ANR	72910	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	2					
ANR	72911	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS )"	373:9:10295:10363	71792	0	True				
ANR	72912	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	72913	Callee	UNEXPECTED		71792	0					
ANR	72914	Identifier	UNEXPECTED		71792	0					
ANR	72915	ArgumentList	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	72916	Argument	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	72917	EqualityExpression	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	72918	CallExpression	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope )"		71792	0					
ANR	72919	Callee	zend_ast_evaluate		71792	0					
ANR	72920	Identifier	zend_ast_evaluate		71792	0					
ANR	72921	ArgumentList	& op2		71792	1					
ANR	72922	Argument	& op2		71792	0					
ANR	72923	UnaryOperationExpression	& op2		71792	0					
ANR	72924	UnaryOperator	&		71792	0					
ANR	72925	Identifier	op2		71792	1					
ANR	72926	Argument	elem -> child [ 0 ]		71792	1					
ANR	72927	ArrayIndexing	elem -> child [ 0 ]		71792	0					
ANR	72928	PtrMemberAccess	elem -> child		71792	0					
ANR	72929	Identifier	elem		71792	0					
ANR	72930	Identifier	child		71792	1					
ANR	72931	PrimaryExpression	0		71792	1					
ANR	72932	Argument	scope		71792	2					
ANR	72933	Identifier	scope		71792	0					
ANR	72934	Identifier	SUCCESS		71792	1					
ANR	72935	CompoundStatement		161:80:4225:4225	71792	1					
ANR	72936	ExpressionStatement	zval_dtor ( & op1 )	374:6:10374:10389	71792	0	True				
ANR	72937	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72938	Callee	zval_dtor		71792	0					
ANR	72939	Identifier	zval_dtor		71792	0					
ANR	72940	ArgumentList	& op1		71792	1					
ANR	72941	Argument	& op1		71792	0					
ANR	72942	UnaryOperationExpression	& op1		71792	0					
ANR	72943	UnaryOperator	&		71792	0					
ANR	72944	Identifier	op1		71792	1					
ANR	72945	ExpressionStatement	zval_dtor ( result )	375:6:10397:10414	71792	1	True				
ANR	72946	CallExpression	zval_dtor ( result )		71792	0					
ANR	72947	Callee	zval_dtor		71792	0					
ANR	72948	Identifier	zval_dtor		71792	0					
ANR	72949	ArgumentList	result		71792	1					
ANR	72950	Argument	result		71792	0					
ANR	72951	Identifier	result		71792	0					
ANR	72952	ReturnStatement	return FAILURE ;	376:6:10422:10436	71792	2	True				
ANR	72953	Identifier	FAILURE		71792	0					
ANR	72954	IfStatement	"if ( UNEXPECTED ( zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS ) )"		71792	3					
ANR	72955	Condition	"UNEXPECTED ( zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS )"	378:9:10454:10522	71792	0	True				
ANR	72956	CallExpression	"UNEXPECTED ( zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS )"		71792	0					
ANR	72957	Callee	UNEXPECTED		71792	0					
ANR	72958	Identifier	UNEXPECTED		71792	0					
ANR	72959	ArgumentList	"zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS"		71792	1					
ANR	72960	Argument	"zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS"		71792	0					
ANR	72961	EqualityExpression	"zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS"		71792	0		!=			
ANR	72962	CallExpression	"zend_ast_add_array_element ( result , & op1 , & op2 )"		71792	0					
ANR	72963	Callee	zend_ast_add_array_element		71792	0					
ANR	72964	Identifier	zend_ast_add_array_element		71792	0					
ANR	72965	ArgumentList	result		71792	1					
ANR	72966	Argument	result		71792	0					
ANR	72967	Identifier	result		71792	0					
ANR	72968	Argument	& op1		71792	1					
ANR	72969	UnaryOperationExpression	& op1		71792	0					
ANR	72970	UnaryOperator	&		71792	0					
ANR	72971	Identifier	op1		71792	1					
ANR	72972	Argument	& op2		71792	2					
ANR	72973	UnaryOperationExpression	& op2		71792	0					
ANR	72974	UnaryOperator	&		71792	0					
ANR	72975	Identifier	op2		71792	1					
ANR	72976	Identifier	SUCCESS		71792	1					
ANR	72977	CompoundStatement		166:80:4384:4384	71792	1					
ANR	72978	ExpressionStatement	zval_dtor ( & op1 )	379:6:10533:10548	71792	0	True				
ANR	72979	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	72980	Callee	zval_dtor		71792	0					
ANR	72981	Identifier	zval_dtor		71792	0					
ANR	72982	ArgumentList	& op1		71792	1					
ANR	72983	Argument	& op1		71792	0					
ANR	72984	UnaryOperationExpression	& op1		71792	0					
ANR	72985	UnaryOperator	&		71792	0					
ANR	72986	Identifier	op1		71792	1					
ANR	72987	ExpressionStatement	zval_dtor ( & op2 )	380:6:10556:10571	71792	1	True				
ANR	72988	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	72989	Callee	zval_dtor		71792	0					
ANR	72990	Identifier	zval_dtor		71792	0					
ANR	72991	ArgumentList	& op2		71792	1					
ANR	72992	Argument	& op2		71792	0					
ANR	72993	UnaryOperationExpression	& op2		71792	0					
ANR	72994	UnaryOperator	&		71792	0					
ANR	72995	Identifier	op2		71792	1					
ANR	72996	ExpressionStatement	zval_dtor ( result )	381:6:10579:10596	71792	2	True				
ANR	72997	CallExpression	zval_dtor ( result )		71792	0					
ANR	72998	Callee	zval_dtor		71792	0					
ANR	72999	Identifier	zval_dtor		71792	0					
ANR	73000	ArgumentList	result		71792	1					
ANR	73001	Argument	result		71792	0					
ANR	73002	Identifier	result		71792	0					
ANR	73003	ReturnStatement	return FAILURE ;	382:6:10604:10618	71792	3	True				
ANR	73004	Identifier	FAILURE		71792	0					
ANR	73005	BreakStatement	break ;	386:3:10641:10646	71792	35	True				
ANR	73006	Label	case ZEND_AST_DIM :	387:2:10650:10667	71792	36	True				
ANR	73007	Identifier	ZEND_AST_DIM		71792	0					
ANR	73008	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		71792	37					
ANR	73009	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	388:7:10676:10743	71792	0	True				
ANR	73010	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		71792	0					
ANR	73011	Callee	UNEXPECTED		71792	0					
ANR	73012	Identifier	UNEXPECTED		71792	0					
ANR	73013	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	1					
ANR	73014	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0					
ANR	73015	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	73016	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		71792	0					
ANR	73017	Callee	zend_ast_evaluate		71792	0					
ANR	73018	Identifier	zend_ast_evaluate		71792	0					
ANR	73019	ArgumentList	& op1		71792	1					
ANR	73020	Argument	& op1		71792	0					
ANR	73021	UnaryOperationExpression	& op1		71792	0					
ANR	73022	UnaryOperator	&		71792	0					
ANR	73023	Identifier	op1		71792	1					
ANR	73024	Argument	ast -> child [ 0 ]		71792	1					
ANR	73025	ArrayIndexing	ast -> child [ 0 ]		71792	0					
ANR	73026	PtrMemberAccess	ast -> child		71792	0					
ANR	73027	Identifier	ast		71792	0					
ANR	73028	Identifier	child		71792	1					
ANR	73029	PrimaryExpression	0		71792	1					
ANR	73030	Argument	scope		71792	2					
ANR	73031	Identifier	scope		71792	0					
ANR	73032	Identifier	SUCCESS		71792	1					
ANR	73033	CompoundStatement		176:77:4605:4605	71792	1					
ANR	73034	ExpressionStatement	ret = FAILURE	389:4:10752:10765	71792	0	True				
ANR	73035	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	73036	Identifier	ret		71792	0					
ANR	73037	Identifier	FAILURE		71792	1					
ANR	73038	ElseStatement	else		71792	0					
ANR	73039	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		71792	0					
ANR	73040	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	390:14:10781:10848	71792	0	True				
ANR	73041	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		71792	0					
ANR	73042	Callee	UNEXPECTED		71792	0					
ANR	73043	Identifier	UNEXPECTED		71792	0					
ANR	73044	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	1					
ANR	73045	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0					
ANR	73046	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		71792	0		!=			
ANR	73047	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		71792	0					
ANR	73048	Callee	zend_ast_evaluate		71792	0					
ANR	73049	Identifier	zend_ast_evaluate		71792	0					
ANR	73050	ArgumentList	& op2		71792	1					
ANR	73051	Argument	& op2		71792	0					
ANR	73052	UnaryOperationExpression	& op2		71792	0					
ANR	73053	UnaryOperator	&		71792	0					
ANR	73054	Identifier	op2		71792	1					
ANR	73055	Argument	ast -> child [ 1 ]		71792	1					
ANR	73056	ArrayIndexing	ast -> child [ 1 ]		71792	0					
ANR	73057	PtrMemberAccess	ast -> child		71792	0					
ANR	73058	Identifier	ast		71792	0					
ANR	73059	Identifier	child		71792	1					
ANR	73060	PrimaryExpression	1		71792	1					
ANR	73061	Argument	scope		71792	2					
ANR	73062	Identifier	scope		71792	0					
ANR	73063	Identifier	SUCCESS		71792	1					
ANR	73064	CompoundStatement		178:84:4710:4710	71792	1					
ANR	73065	ExpressionStatement	zval_dtor ( & op1 )	391:4:10857:10872	71792	0	True				
ANR	73066	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	73067	Callee	zval_dtor		71792	0					
ANR	73068	Identifier	zval_dtor		71792	0					
ANR	73069	ArgumentList	& op1		71792	1					
ANR	73070	Argument	& op1		71792	0					
ANR	73071	UnaryOperationExpression	& op1		71792	0					
ANR	73072	UnaryOperator	&		71792	0					
ANR	73073	Identifier	op1		71792	1					
ANR	73074	ExpressionStatement	ret = FAILURE	392:4:10878:10891	71792	1	True				
ANR	73075	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	73076	Identifier	ret		71792	0					
ANR	73077	Identifier	FAILURE		71792	1					
ANR	73078	ElseStatement	else		71792	0					
ANR	73079	CompoundStatement		182:4:4768:4776	71792	0					
ANR	73080	IdentifierDeclStatement	zval tmp ;	394:4:10909:10917	71792	0	True				
ANR	73081	IdentifierDecl	tmp		71792	0					
ANR	73082	IdentifierDeclType	zval		71792	0					
ANR	73083	Identifier	tmp		71792	1					
ANR	73084	ExpressionStatement	"zend_fetch_dimension_by_zval ( & tmp , & op1 , & op2 )"	396:4:10924:10970	71792	1	True				
ANR	73085	CallExpression	"zend_fetch_dimension_by_zval ( & tmp , & op1 , & op2 )"		71792	0					
ANR	73086	Callee	zend_fetch_dimension_by_zval		71792	0					
ANR	73087	Identifier	zend_fetch_dimension_by_zval		71792	0					
ANR	73088	ArgumentList	& tmp		71792	1					
ANR	73089	Argument	& tmp		71792	0					
ANR	73090	UnaryOperationExpression	& tmp		71792	0					
ANR	73091	UnaryOperator	&		71792	0					
ANR	73092	Identifier	tmp		71792	1					
ANR	73093	Argument	& op1		71792	1					
ANR	73094	UnaryOperationExpression	& op1		71792	0					
ANR	73095	UnaryOperator	&		71792	0					
ANR	73096	Identifier	op1		71792	1					
ANR	73097	Argument	& op2		71792	2					
ANR	73098	UnaryOperationExpression	& op2		71792	0					
ANR	73099	UnaryOperator	&		71792	0					
ANR	73100	Identifier	op2		71792	1					
ANR	73101	IfStatement	if ( UNEXPECTED ( Z_ISREF ( tmp ) ) )		71792	2					
ANR	73102	Condition	UNEXPECTED ( Z_ISREF ( tmp ) )	397:8:10980:11003	71792	0	True				
ANR	73103	CallExpression	UNEXPECTED ( Z_ISREF ( tmp ) )		71792	0					
ANR	73104	Callee	UNEXPECTED		71792	0					
ANR	73105	Identifier	UNEXPECTED		71792	0					
ANR	73106	ArgumentList	Z_ISREF ( tmp )		71792	1					
ANR	73107	Argument	Z_ISREF ( tmp )		71792	0					
ANR	73108	CallExpression	Z_ISREF ( tmp )		71792	0					
ANR	73109	Callee	Z_ISREF		71792	0					
ANR	73110	Identifier	Z_ISREF		71792	0					
ANR	73111	ArgumentList	tmp		71792	1					
ANR	73112	Argument	tmp		71792	0					
ANR	73113	Identifier	tmp		71792	0					
ANR	73114	CompoundStatement		185:34:4865:4865	71792	1					
ANR	73115	ExpressionStatement	"ZVAL_DUP ( result , Z_REFVAL ( tmp ) )"	398:5:11013:11044	71792	0	True				
ANR	73116	CallExpression	"ZVAL_DUP ( result , Z_REFVAL ( tmp ) )"		71792	0					
ANR	73117	Callee	ZVAL_DUP		71792	0					
ANR	73118	Identifier	ZVAL_DUP		71792	0					
ANR	73119	ArgumentList	result		71792	1					
ANR	73120	Argument	result		71792	0					
ANR	73121	Identifier	result		71792	0					
ANR	73122	Argument	Z_REFVAL ( tmp )		71792	1					
ANR	73123	CallExpression	Z_REFVAL ( tmp )		71792	0					
ANR	73124	Callee	Z_REFVAL		71792	0					
ANR	73125	Identifier	Z_REFVAL		71792	0					
ANR	73126	ArgumentList	tmp		71792	1					
ANR	73127	Argument	tmp		71792	0					
ANR	73128	Identifier	tmp		71792	0					
ANR	73129	ElseStatement	else		71792	0					
ANR	73130	CompoundStatement		187:11:4916:4916	71792	0					
ANR	73131	ExpressionStatement	"ZVAL_DUP ( result , & tmp )"	400:5:11064:11086	71792	0	True				
ANR	73132	CallExpression	"ZVAL_DUP ( result , & tmp )"		71792	0					
ANR	73133	Callee	ZVAL_DUP		71792	0					
ANR	73134	Identifier	ZVAL_DUP		71792	0					
ANR	73135	ArgumentList	result		71792	1					
ANR	73136	Argument	result		71792	0					
ANR	73137	Identifier	result		71792	0					
ANR	73138	Argument	& tmp		71792	1					
ANR	73139	UnaryOperationExpression	& tmp		71792	0					
ANR	73140	UnaryOperator	&		71792	0					
ANR	73141	Identifier	tmp		71792	1					
ANR	73142	ExpressionStatement	zval_ptr_dtor ( & tmp )	402:4:11098:11117	71792	3	True				
ANR	73143	CallExpression	zval_ptr_dtor ( & tmp )		71792	0					
ANR	73144	Callee	zval_ptr_dtor		71792	0					
ANR	73145	Identifier	zval_ptr_dtor		71792	0					
ANR	73146	ArgumentList	& tmp		71792	1					
ANR	73147	Argument	& tmp		71792	0					
ANR	73148	UnaryOperationExpression	& tmp		71792	0					
ANR	73149	UnaryOperator	&		71792	0					
ANR	73150	Identifier	tmp		71792	1					
ANR	73151	ExpressionStatement	zval_dtor ( & op1 )	403:4:11123:11138	71792	4	True				
ANR	73152	CallExpression	zval_dtor ( & op1 )		71792	0					
ANR	73153	Callee	zval_dtor		71792	0					
ANR	73154	Identifier	zval_dtor		71792	0					
ANR	73155	ArgumentList	& op1		71792	1					
ANR	73156	Argument	& op1		71792	0					
ANR	73157	UnaryOperationExpression	& op1		71792	0					
ANR	73158	UnaryOperator	&		71792	0					
ANR	73159	Identifier	op1		71792	1					
ANR	73160	ExpressionStatement	zval_dtor ( & op2 )	404:4:11144:11159	71792	5	True				
ANR	73161	CallExpression	zval_dtor ( & op2 )		71792	0					
ANR	73162	Callee	zval_dtor		71792	0					
ANR	73163	Identifier	zval_dtor		71792	0					
ANR	73164	ArgumentList	& op2		71792	1					
ANR	73165	Argument	& op2		71792	0					
ANR	73166	UnaryOperationExpression	& op2		71792	0					
ANR	73167	UnaryOperator	&		71792	0					
ANR	73168	Identifier	op2		71792	1					
ANR	73169	BreakStatement	break ;	406:3:11169:11174	71792	38	True				
ANR	73170	Label	default :	407:2:11178:11185	71792	39	True				
ANR	73171	Identifier	default		71792	0					
ANR	73172	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported constant expression"" )"	408:3:11190:11247	71792	40	True				
ANR	73173	CallExpression	"zend_throw_error ( NULL , ""Unsupported constant expression"" )"		71792	0					
ANR	73174	Callee	zend_throw_error		71792	0					
ANR	73175	Identifier	zend_throw_error		71792	0					
ANR	73176	ArgumentList	NULL		71792	1					
ANR	73177	Argument	NULL		71792	0					
ANR	73178	Identifier	NULL		71792	0					
ANR	73179	Argument	"""Unsupported constant expression"""		71792	1					
ANR	73180	PrimaryExpression	"""Unsupported constant expression"""		71792	0					
ANR	73181	ExpressionStatement	ret = FAILURE	409:3:11252:11265	71792	41	True				
ANR	73182	AssignmentExpression	ret = FAILURE		71792	0		=			
ANR	73183	Identifier	ret		71792	0					
ANR	73184	Identifier	FAILURE		71792	1					
ANR	73185	ReturnStatement	return ret ;	411:1:11271:11281	71792	3	True				
ANR	73186	Identifier	ret		71792	0					
ANR	73187	ReturnType	ZEND_API int		71792	1					
ANR	73188	Identifier	zend_ast_evaluate		71792	2					
ANR	73189	ParameterList	"zval * result , zend_ast * ast , zend_class_entry * scope"		71792	3					
ANR	73190	Parameter	zval * result	212:31:6086:6097	71792	0	True				
ANR	73191	ParameterType	zval *		71792	0					
ANR	73192	Identifier	result		71792	1					
ANR	73193	Parameter	zend_ast * ast	212:45:6100:6112	71792	1	True				
ANR	73194	ParameterType	zend_ast *		71792	0					
ANR	73195	Identifier	ast		71792	1					
ANR	73196	Parameter	zend_class_entry * scope	212:60:6115:6137	71792	2	True				
ANR	73197	ParameterType	zend_class_entry *		71792	0					
ANR	73198	Identifier	scope		71792	1					
ANR	73199	CFGEntryNode	ENTRY		71792		True				
ANR	73200	CFGExitNode	EXIT		71792		True				
ANR	73201	Symbol	zend_ast_add_array_element		71792						
ANR	73202	Symbol	ast -> kind		71792						
ANR	73203	Symbol	ast		71792						
ANR	73204	Symbol	get_binary_op		71792						
ANR	73205	Symbol	get_unary_op		71792						
ANR	73206	Symbol	ZEND_AST_GREATER		71792						
ANR	73207	Symbol	tmp		71792						
ANR	73208	Symbol	* elem -> child		71792						
ANR	73209	Symbol	elem -> child		71792						
ANR	73210	Symbol	ret		71792						
ANR	73211	Symbol	elem		71792						
ANR	73212	Symbol	NULL		71792						
ANR	73213	Symbol	list		71792						
ANR	73214	Symbol	* * elem		71792						
ANR	73215	Symbol	* ast -> child		71792						
ANR	73216	Symbol	* list -> child		71792						
ANR	73217	Symbol	& tmp		71792						
ANR	73218	Symbol	ast -> child		71792						
ANR	73219	Symbol	zv		71792						
ANR	73220	Symbol	zend_ast_get_zval		71792						
ANR	73221	Symbol	zend_is_true		71792						
ANR	73222	Symbol	add_function		71792						
ANR	73223	Symbol	list -> children		71792						
ANR	73224	Symbol	Z_OPT_CONSTANT_P		71792						
ANR	73225	Symbol	Z_REFVAL		71792						
ANR	73226	Symbol	result		71792						
ANR	73227	Symbol	UNEXPECTED		71792						
ANR	73228	Symbol	& op2		71792						
ANR	73229	Symbol	& op1		71792						
ANR	73230	Symbol	* ast		71792						
ANR	73231	Symbol	sub_function		71792						
ANR	73232	Symbol	* * list		71792						
ANR	73233	Symbol	* result		71792						
ANR	73234	Symbol	* * ast		71792						
ANR	73235	Symbol	is_smaller_or_equal_function		71792						
ANR	73236	Symbol	scope		71792						
ANR	73237	Symbol	* elem		71792						
ANR	73238	Symbol	Z_ISREF		71792						
ANR	73239	Symbol	op		71792						
ANR	73240	Symbol	ast -> attr		71792						
ANR	73241	Symbol	SUCCESS		71792						
ANR	73242	Symbol	list -> child		71792						
ANR	73243	Symbol	i		71792						
ANR	73244	Symbol	FAILURE		71792						
ANR	73245	Symbol	op2		71792						
ANR	73246	Symbol	op1		71792						
ANR	73247	Symbol	zend_ast_get_list		71792						
ANR	73248	Symbol	zend_ast_evaluate		71792						
ANR	73249	Symbol	* i		71792						
ANR	73250	Symbol	is_smaller_function		71792						
ANR	73251	Symbol	* list		71792						
ANR	73252	Symbol	zval_update_constant_ex		71792						
ANR	73253	Function	zend_ast_copy	414:0:11286:12246							
ANR	73254	FunctionDef	zend_ast_copy (zend_ast * ast)		73253	0					
ANR	73255	CompoundStatement		415:0:11334:12246	73253	0					
ANR	73256	IfStatement	if ( ast == NULL )		73253	0					
ANR	73257	Condition	ast == NULL	416:5:11341:11351	73253	0	True				
ANR	73258	EqualityExpression	ast == NULL		73253	0		==			
ANR	73259	Identifier	ast		73253	0					
ANR	73260	Identifier	NULL		73253	1					
ANR	73261	CompoundStatement		2:18:19:19	73253	1					
ANR	73262	ReturnStatement	return NULL ;	417:2:11358:11369	73253	0	True				
ANR	73263	Identifier	NULL		73253	0					
ANR	73264	ElseStatement	else		73253	0					
ANR	73265	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		73253	0					
ANR	73266	Condition	ast -> kind == ZEND_AST_ZVAL	418:12:11383:11408	73253	0	True				
ANR	73267	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		73253	0		==			
ANR	73268	PtrMemberAccess	ast -> kind		73253	0					
ANR	73269	Identifier	ast		73253	0					
ANR	73270	Identifier	kind		73253	1					
ANR	73271	Identifier	ZEND_AST_ZVAL		73253	1					
ANR	73272	CompoundStatement		4:40:76:76	73253	1					
ANR	73273	Statement	zend_ast_zval	419:2:11415:11427	73253	0	True				
ANR	73274	Statement	*	419:16:11429:11429	73253	1	True				
ANR	73275	Statement	new	419:17:11430:11432	73253	2	True				
ANR	73276	Statement	=	419:21:11434:11434	73253	3	True				
ANR	73277	ExpressionStatement	emalloc ( sizeof ( zend_ast_zval ) )	419:23:11436:11466	73253	4	True				
ANR	73278	CallExpression	emalloc ( sizeof ( zend_ast_zval ) )		73253	0					
ANR	73279	Callee	emalloc		73253	0					
ANR	73280	Identifier	emalloc		73253	0					
ANR	73281	ArgumentList	sizeof ( zend_ast_zval )		73253	1					
ANR	73282	Argument	sizeof ( zend_ast_zval )		73253	0					
ANR	73283	SizeofExpression	sizeof ( zend_ast_zval )		73253	0					
ANR	73284	Sizeof	sizeof		73253	0					
ANR	73285	SizeofOperand	zend_ast_zval		73253	1					
ANR	73286	Statement	new	420:2:11470:11472	73253	5	True				
ANR	73287	Statement	->	420:5:11473:11474	73253	6	True				
ANR	73288	ExpressionStatement	kind = ZEND_AST_ZVAL	420:7:11475:11495	73253	7	True				
ANR	73289	AssignmentExpression	kind = ZEND_AST_ZVAL		73253	0		=			
ANR	73290	Identifier	kind		73253	0					
ANR	73291	Identifier	ZEND_AST_ZVAL		73253	1					
ANR	73292	Statement	new	421:2:11499:11501	73253	8	True				
ANR	73293	Statement	->	421:5:11502:11503	73253	9	True				
ANR	73294	ExpressionStatement	attr = ast -> attr	421:7:11504:11520	73253	10	True				
ANR	73295	AssignmentExpression	attr = ast -> attr		73253	0		=			
ANR	73296	Identifier	attr		73253	0					
ANR	73297	PtrMemberAccess	ast -> attr		73253	1					
ANR	73298	Identifier	ast		73253	0					
ANR	73299	Identifier	attr		73253	1					
ANR	73300	Statement	ZVAL_COPY	422:2:11524:11532	73253	11	True				
ANR	73301	Statement	(	422:11:11533:11533	73253	12	True				
ANR	73302	Statement	&	422:12:11534:11534	73253	13	True				
ANR	73303	Statement	new	422:13:11535:11537	73253	14	True				
ANR	73304	Statement	->	422:16:11538:11539	73253	15	True				
ANR	73305	Statement	val	422:18:11540:11542	73253	16	True				
ANR	73306	Statement	","	422:21:11543:11543	73253	17	True				
ANR	73307	Statement	zend_ast_get_zval	422:23:11545:11561	73253	18	True				
ANR	73308	Statement	(	422:40:11562:11562	73253	19	True				
ANR	73309	Statement	ast	422:41:11563:11565	73253	20	True				
ANR	73310	Statement	)	422:44:11566:11566	73253	21	True				
ANR	73311	Statement	)	422:45:11567:11567	73253	22	True				
ANR	73312	ExpressionStatement		422:46:11568:11568	73253	23	True				
ANR	73313	Statement	return	423:2:11572:11577	73253	24	True				
ANR	73314	Statement	(	423:9:11579:11579	73253	25	True				
ANR	73315	Statement	zend_ast	423:10:11580:11587	73253	26	True				
ANR	73316	Statement	*	423:19:11589:11589	73253	27	True				
ANR	73317	Statement	)	423:20:11590:11590	73253	28	True				
ANR	73318	Statement	new	423:22:11592:11594	73253	29	True				
ANR	73319	ExpressionStatement		423:25:11595:11595	73253	30	True				
ANR	73320	ElseStatement	else		73253	0					
ANR	73321	IfStatement	if ( zend_ast_is_list ( ast ) )		73253	0					
ANR	73322	Condition	zend_ast_is_list ( ast )	424:12:11609:11629	73253	0	True				
ANR	73323	CallExpression	zend_ast_is_list ( ast )		73253	0					
ANR	73324	Callee	zend_ast_is_list		73253	0					
ANR	73325	Identifier	zend_ast_is_list		73253	0					
ANR	73326	ArgumentList	ast		73253	1					
ANR	73327	Argument	ast		73253	0					
ANR	73328	Identifier	ast		73253	0					
ANR	73329	CompoundStatement		13:2:417:427	73253	1					
ANR	73330	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	425:2:11636:11680	73253	0	True				
ANR	73331	IdentifierDecl	* list = zend_ast_get_list ( ast )		73253	0					
ANR	73332	IdentifierDeclType	zend_ast_list *		73253	0					
ANR	73333	Identifier	list		73253	1					
ANR	73334	AssignmentExpression	* list = zend_ast_get_list ( ast )		73253	2		=			
ANR	73335	Identifier	list		73253	0					
ANR	73336	CallExpression	zend_ast_get_list ( ast )		73253	1					
ANR	73337	Callee	zend_ast_get_list		73253	0					
ANR	73338	Identifier	zend_ast_get_list		73253	0					
ANR	73339	ArgumentList	ast		73253	1					
ANR	73340	Argument	ast		73253	0					
ANR	73341	Identifier	ast		73253	0					
ANR	73342	Statement	zend_ast_list	426:2:11684:11696	73253	1	True				
ANR	73343	Statement	*	426:16:11698:11698	73253	2	True				
ANR	73344	Statement	new	426:17:11699:11701	73253	3	True				
ANR	73345	Statement	=	426:21:11703:11703	73253	4	True				
ANR	73346	ExpressionStatement	emalloc ( zend_ast_list_size ( list -> children ) )	426:23:11705:11748	73253	5	True				
ANR	73347	CallExpression	emalloc ( zend_ast_list_size ( list -> children ) )		73253	0					
ANR	73348	Callee	emalloc		73253	0					
ANR	73349	Identifier	emalloc		73253	0					
ANR	73350	ArgumentList	zend_ast_list_size ( list -> children )		73253	1					
ANR	73351	Argument	zend_ast_list_size ( list -> children )		73253	0					
ANR	73352	CallExpression	zend_ast_list_size ( list -> children )		73253	0					
ANR	73353	Callee	zend_ast_list_size		73253	0					
ANR	73354	Identifier	zend_ast_list_size		73253	0					
ANR	73355	ArgumentList	list -> children		73253	1					
ANR	73356	Argument	list -> children		73253	0					
ANR	73357	PtrMemberAccess	list -> children		73253	0					
ANR	73358	Identifier	list		73253	0					
ANR	73359	Identifier	children		73253	1					
ANR	73360	IdentifierDeclStatement	uint32_t i ;	427:2:11752:11762	73253	6	True				
ANR	73361	IdentifierDecl	i		73253	0					
ANR	73362	IdentifierDeclType	uint32_t		73253	0					
ANR	73363	Identifier	i		73253	1					
ANR	73364	Statement	new	428:2:11766:11768	73253	7	True				
ANR	73365	Statement	->	428:5:11769:11770	73253	8	True				
ANR	73366	ExpressionStatement	kind = list -> kind	428:7:11771:11788	73253	9	True				
ANR	73367	AssignmentExpression	kind = list -> kind		73253	0		=			
ANR	73368	Identifier	kind		73253	0					
ANR	73369	PtrMemberAccess	list -> kind		73253	1					
ANR	73370	Identifier	list		73253	0					
ANR	73371	Identifier	kind		73253	1					
ANR	73372	Statement	new	429:2:11792:11794	73253	10	True				
ANR	73373	Statement	->	429:5:11795:11796	73253	11	True				
ANR	73374	ExpressionStatement	attr = list -> attr	429:7:11797:11814	73253	12	True				
ANR	73375	AssignmentExpression	attr = list -> attr		73253	0		=			
ANR	73376	Identifier	attr		73253	0					
ANR	73377	PtrMemberAccess	list -> attr		73253	1					
ANR	73378	Identifier	list		73253	0					
ANR	73379	Identifier	attr		73253	1					
ANR	73380	Statement	new	430:2:11818:11820	73253	13	True				
ANR	73381	Statement	->	430:5:11821:11822	73253	14	True				
ANR	73382	ExpressionStatement	children = list -> children	430:7:11823:11848	73253	15	True				
ANR	73383	AssignmentExpression	children = list -> children		73253	0		=			
ANR	73384	Identifier	children		73253	0					
ANR	73385	PtrMemberAccess	list -> children		73253	1					
ANR	73386	Identifier	list		73253	0					
ANR	73387	Identifier	children		73253	1					
ANR	73388	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		73253	16					
ANR	73389	ForInit	i = 0 ;	431:7:11857:11862	73253	0	True				
ANR	73390	AssignmentExpression	i = 0		73253	0		=			
ANR	73391	Identifier	i		73253	0					
ANR	73392	PrimaryExpression	0		73253	1					
ANR	73393	Condition	i < list -> children	431:14:11864:11881	73253	1	True				
ANR	73394	RelationalExpression	i < list -> children		73253	0		<			
ANR	73395	Identifier	i		73253	0					
ANR	73396	PtrMemberAccess	list -> children		73253	1					
ANR	73397	Identifier	list		73253	0					
ANR	73398	Identifier	children		73253	1					
ANR	73399	PostIncDecOperationExpression	i ++	431:34:11884:11886	73253	2	True				
ANR	73400	Identifier	i		73253	0					
ANR	73401	IncDec	++		73253	1					
ANR	73402	CompoundStatement		17:39:554:554	73253	3					
ANR	73403	Statement	new	432:3:11894:11896	73253	0	True				
ANR	73404	Statement	->	432:6:11897:11898	73253	1	True				
ANR	73405	ExpressionStatement	child [ i ] = zend_ast_copy ( list -> child [ i ] )	432:8:11899:11939	73253	2	True				
ANR	73406	AssignmentExpression	child [ i ] = zend_ast_copy ( list -> child [ i ] )		73253	0		=			
ANR	73407	ArrayIndexing	child [ i ]		73253	0					
ANR	73408	Identifier	child		73253	0					
ANR	73409	Identifier	i		73253	1					
ANR	73410	CallExpression	zend_ast_copy ( list -> child [ i ] )		73253	1					
ANR	73411	Callee	zend_ast_copy		73253	0					
ANR	73412	Identifier	zend_ast_copy		73253	0					
ANR	73413	ArgumentList	list -> child [ i ]		73253	1					
ANR	73414	Argument	list -> child [ i ]		73253	0					
ANR	73415	ArrayIndexing	list -> child [ i ]		73253	0					
ANR	73416	PtrMemberAccess	list -> child		73253	0					
ANR	73417	Identifier	list		73253	0					
ANR	73418	Identifier	child		73253	1					
ANR	73419	Identifier	i		73253	1					
ANR	73420	Statement	return	434:2:11947:11952	73253	17	True				
ANR	73421	Statement	(	434:9:11954:11954	73253	18	True				
ANR	73422	Statement	zend_ast	434:10:11955:11962	73253	19	True				
ANR	73423	Statement	*	434:19:11964:11964	73253	20	True				
ANR	73424	Statement	)	434:20:11965:11965	73253	21	True				
ANR	73425	Statement	new	434:22:11967:11969	73253	22	True				
ANR	73426	ExpressionStatement		434:25:11970:11970	73253	23	True				
ANR	73427	ElseStatement	else		73253	0					
ANR	73428	CompoundStatement		22:2:649:702	73253	0					
ANR	73429	IdentifierDeclStatement	"uint32_t i , children = zend_ast_get_num_children ( ast ) ;"	436:2:11984:12037	73253	0	True				
ANR	73430	IdentifierDecl	i		73253	0					
ANR	73431	IdentifierDeclType	uint32_t		73253	0					
ANR	73432	Identifier	i		73253	1					
ANR	73433	IdentifierDecl	children = zend_ast_get_num_children ( ast )		73253	1					
ANR	73434	IdentifierDeclType	uint32_t		73253	0					
ANR	73435	Identifier	children		73253	1					
ANR	73436	AssignmentExpression	children = zend_ast_get_num_children ( ast )		73253	2		=			
ANR	73437	Identifier	children		73253	0					
ANR	73438	CallExpression	zend_ast_get_num_children ( ast )		73253	1					
ANR	73439	Callee	zend_ast_get_num_children		73253	0					
ANR	73440	Identifier	zend_ast_get_num_children		73253	0					
ANR	73441	ArgumentList	ast		73253	1					
ANR	73442	Argument	ast		73253	0					
ANR	73443	Identifier	ast		73253	0					
ANR	73444	Statement	zend_ast	437:2:12041:12048	73253	1	True				
ANR	73445	Statement	*	437:11:12050:12050	73253	2	True				
ANR	73446	Statement	new	437:12:12051:12053	73253	3	True				
ANR	73447	Statement	=	437:16:12055:12055	73253	4	True				
ANR	73448	ExpressionStatement	emalloc ( zend_ast_size ( children ) )	437:18:12057:12089	73253	5	True				
ANR	73449	CallExpression	emalloc ( zend_ast_size ( children ) )		73253	0					
ANR	73450	Callee	emalloc		73253	0					
ANR	73451	Identifier	emalloc		73253	0					
ANR	73452	ArgumentList	zend_ast_size ( children )		73253	1					
ANR	73453	Argument	zend_ast_size ( children )		73253	0					
ANR	73454	CallExpression	zend_ast_size ( children )		73253	0					
ANR	73455	Callee	zend_ast_size		73253	0					
ANR	73456	Identifier	zend_ast_size		73253	0					
ANR	73457	ArgumentList	children		73253	1					
ANR	73458	Argument	children		73253	0					
ANR	73459	Identifier	children		73253	0					
ANR	73460	Statement	new	438:2:12093:12095	73253	6	True				
ANR	73461	Statement	->	438:5:12096:12097	73253	7	True				
ANR	73462	ExpressionStatement	kind = ast -> kind	438:7:12098:12114	73253	8	True				
ANR	73463	AssignmentExpression	kind = ast -> kind		73253	0		=			
ANR	73464	Identifier	kind		73253	0					
ANR	73465	PtrMemberAccess	ast -> kind		73253	1					
ANR	73466	Identifier	ast		73253	0					
ANR	73467	Identifier	kind		73253	1					
ANR	73468	Statement	new	439:2:12118:12120	73253	9	True				
ANR	73469	Statement	->	439:5:12121:12122	73253	10	True				
ANR	73470	ExpressionStatement	attr = ast -> attr	439:7:12123:12139	73253	11	True				
ANR	73471	AssignmentExpression	attr = ast -> attr		73253	0		=			
ANR	73472	Identifier	attr		73253	0					
ANR	73473	PtrMemberAccess	ast -> attr		73253	1					
ANR	73474	Identifier	ast		73253	0					
ANR	73475	Identifier	attr		73253	1					
ANR	73476	ForStatement	for ( i = 0 ; i < children ; i ++ )		73253	12					
ANR	73477	ForInit	i = 0 ;	440:7:12148:12153	73253	0	True				
ANR	73478	AssignmentExpression	i = 0		73253	0		=			
ANR	73479	Identifier	i		73253	0					
ANR	73480	PrimaryExpression	0		73253	1					
ANR	73481	Condition	i < children	440:14:12155:12166	73253	1	True				
ANR	73482	RelationalExpression	i < children		73253	0		<			
ANR	73483	Identifier	i		73253	0					
ANR	73484	Identifier	children		73253	1					
ANR	73485	PostIncDecOperationExpression	i ++	440:28:12169:12171	73253	2	True				
ANR	73486	Identifier	i		73253	0					
ANR	73487	IncDec	++		73253	1					
ANR	73488	CompoundStatement		26:33:839:839	73253	3					
ANR	73489	Statement	new	441:3:12179:12181	73253	0	True				
ANR	73490	Statement	->	441:6:12182:12183	73253	1	True				
ANR	73491	ExpressionStatement	child [ i ] = zend_ast_copy ( ast -> child [ i ] )	441:8:12184:12223	73253	2	True				
ANR	73492	AssignmentExpression	child [ i ] = zend_ast_copy ( ast -> child [ i ] )		73253	0		=			
ANR	73493	ArrayIndexing	child [ i ]		73253	0					
ANR	73494	Identifier	child		73253	0					
ANR	73495	Identifier	i		73253	1					
ANR	73496	CallExpression	zend_ast_copy ( ast -> child [ i ] )		73253	1					
ANR	73497	Callee	zend_ast_copy		73253	0					
ANR	73498	Identifier	zend_ast_copy		73253	0					
ANR	73499	ArgumentList	ast -> child [ i ]		73253	1					
ANR	73500	Argument	ast -> child [ i ]		73253	0					
ANR	73501	ArrayIndexing	ast -> child [ i ]		73253	0					
ANR	73502	PtrMemberAccess	ast -> child		73253	0					
ANR	73503	Identifier	ast		73253	0					
ANR	73504	Identifier	child		73253	1					
ANR	73505	Identifier	i		73253	1					
ANR	73506	Statement	return	443:2:12231:12236	73253	13	True				
ANR	73507	Statement	new	443:9:12238:12240	73253	14	True				
ANR	73508	ExpressionStatement		443:12:12241:12241	73253	15	True				
ANR	73509	ReturnType	ZEND_API zend_ast *		73253	1					
ANR	73510	Identifier	zend_ast_copy		73253	2					
ANR	73511	ParameterList	zend_ast * ast		73253	3					
ANR	73512	Parameter	zend_ast * ast	414:33:11319:11331	73253	0	True				
ANR	73513	ParameterType	zend_ast *		73253	0					
ANR	73514	Identifier	ast		73253	1					
ANR	73515	CFGEntryNode	ENTRY		73253		True				
ANR	73516	CFGExitNode	EXIT		73253		True				
ANR	73517	Symbol	ast -> kind		73253						
ANR	73518	Symbol	ast		73253						
ANR	73519	Symbol	zend_ast_copy		73253						
ANR	73520	Symbol	* ast		73253						
ANR	73521	Symbol	* * list		73253						
ANR	73522	Symbol	children		73253						
ANR	73523	Symbol	* * ast		73253						
ANR	73524	Symbol	ZEND_AST_ZVAL		73253						
ANR	73525	Symbol	attr		73253						
ANR	73526	Symbol	zend_ast_get_num_children		73253						
ANR	73527	Symbol	ast -> attr		73253						
ANR	73528	Symbol	* child		73253						
ANR	73529	Symbol	NULL		73253						
ANR	73530	Symbol	list -> attr		73253						
ANR	73531	Symbol	list -> child		73253						
ANR	73532	Symbol	kind		73253						
ANR	73533	Symbol	i		73253						
ANR	73534	Symbol	list		73253						
ANR	73535	Symbol	zend_ast_get_list		73253						
ANR	73536	Symbol	* i		73253						
ANR	73537	Symbol	zend_ast_is_list		73253						
ANR	73538	Symbol	* list		73253						
ANR	73539	Symbol	* list -> child		73253						
ANR	73540	Symbol	* ast -> child		73253						
ANR	73541	Symbol	ast -> child		73253						
ANR	73542	Symbol	zend_ast_list_size		73253						
ANR	73543	Symbol	list -> children		73253						
ANR	73544	Symbol	zend_ast_size		73253						
ANR	73545	Symbol	list -> kind		73253						
ANR	73546	Symbol	child		73253						
ANR	73547	Function	zend_ast_destroy_ex	447:0:12249:13581							
ANR	73548	FunctionDef	"zend_ast_destroy_ex (zend_ast * ast , zend_bool free)"		73547	0					
ANR	73549	CompoundStatement		447:63:12312:13581	73547	0					
ANR	73550	IfStatement	if ( ! ast )		73547	0					
ANR	73551	Condition	! ast	448:5:12319:12322	73547	0	True				
ANR	73552	UnaryOperationExpression	! ast		73547	0					
ANR	73553	UnaryOperator	!		73547	0					
ANR	73554	Identifier	ast		73547	1					
ANR	73555	CompoundStatement		2:11:12:12	73547	1					
ANR	73556	ReturnStatement	return ;	449:2:12329:12335	73547	0	True				
ANR	73557	SwitchStatement	switch ( ast -> kind )		73547	1					
ANR	73558	Condition	ast -> kind	452:9:12350:12358	73547	0	True				
ANR	73559	PtrMemberAccess	ast -> kind		73547	0					
ANR	73560	Identifier	ast		73547	0					
ANR	73561	Identifier	kind		73547	1					
ANR	73562	CompoundStatement		6:20:48:48	73547	1					
ANR	73563	Label	case ZEND_AST_ZVAL :	453:2:12365:12383	73547	0	True				
ANR	73564	Identifier	ZEND_AST_ZVAL		73547	0					
ANR	73565	ExpressionStatement	zval_ptr_dtor_nogc ( zend_ast_get_zval ( ast ) )	457:3:12629:12671	73547	1	True				
ANR	73566	CallExpression	zval_ptr_dtor_nogc ( zend_ast_get_zval ( ast ) )		73547	0					
ANR	73567	Callee	zval_ptr_dtor_nogc		73547	0					
ANR	73568	Identifier	zval_ptr_dtor_nogc		73547	0					
ANR	73569	ArgumentList	zend_ast_get_zval ( ast )		73547	1					
ANR	73570	Argument	zend_ast_get_zval ( ast )		73547	0					
ANR	73571	CallExpression	zend_ast_get_zval ( ast )		73547	0					
ANR	73572	Callee	zend_ast_get_zval		73547	0					
ANR	73573	Identifier	zend_ast_get_zval		73547	0					
ANR	73574	ArgumentList	ast		73547	1					
ANR	73575	Argument	ast		73547	0					
ANR	73576	Identifier	ast		73547	0					
ANR	73577	BreakStatement	break ;	458:3:12676:12681	73547	2	True				
ANR	73578	Label	case ZEND_AST_FUNC_DECL :	459:2:12685:12708	73547	3	True				
ANR	73579	Identifier	ZEND_AST_FUNC_DECL		73547	0					
ANR	73580	Label	case ZEND_AST_CLOSURE :	460:2:12712:12733	73547	4	True				
ANR	73581	Identifier	ZEND_AST_CLOSURE		73547	0					
ANR	73582	Label	case ZEND_AST_METHOD :	461:2:12737:12757	73547	5	True				
ANR	73583	Identifier	ZEND_AST_METHOD		73547	0					
ANR	73584	Label	case ZEND_AST_CLASS :	462:2:12761:12780	73547	6	True				
ANR	73585	Identifier	ZEND_AST_CLASS		73547	0					
ANR	73586	CompoundStatement		18:3:476:519	73547	7					
ANR	73587	IdentifierDeclStatement	zend_ast_decl * decl = ( zend_ast_decl * ) ast ;	464:3:12789:12832	73547	0	True				
ANR	73588	IdentifierDecl	* decl = ( zend_ast_decl * ) ast		73547	0					
ANR	73589	IdentifierDeclType	zend_ast_decl *		73547	0					
ANR	73590	Identifier	decl		73547	1					
ANR	73591	AssignmentExpression	* decl = ( zend_ast_decl * ) ast		73547	2		=			
ANR	73592	Identifier	decl		73547	0					
ANR	73593	CastExpression	( zend_ast_decl * ) ast		73547	1					
ANR	73594	CastTarget	zend_ast_decl *		73547	0					
ANR	73595	Identifier	ast		73547	1					
ANR	73596	IfStatement	if ( decl -> name )		73547	1					
ANR	73597	Condition	decl -> name	465:7:12841:12850	73547	0	True				
ANR	73598	PtrMemberAccess	decl -> name		73547	0					
ANR	73599	Identifier	decl		73547	0					
ANR	73600	Identifier	name		73547	1					
ANR	73601	CompoundStatement		19:19:540:540	73547	1					
ANR	73602	ExpressionStatement	zend_string_release ( decl -> name )	466:7:12862:12893	73547	0	True				
ANR	73603	CallExpression	zend_string_release ( decl -> name )		73547	0					
ANR	73604	Callee	zend_string_release		73547	0					
ANR	73605	Identifier	zend_string_release		73547	0					
ANR	73606	ArgumentList	decl -> name		73547	1					
ANR	73607	Argument	decl -> name		73547	0					
ANR	73608	PtrMemberAccess	decl -> name		73547	0					
ANR	73609	Identifier	decl		73547	0					
ANR	73610	Identifier	name		73547	1					
ANR	73611	IfStatement	if ( decl -> doc_comment )		73547	2					
ANR	73612	Condition	decl -> doc_comment	468:7:12907:12923	73547	0	True				
ANR	73613	PtrMemberAccess	decl -> doc_comment		73547	0					
ANR	73614	Identifier	decl		73547	0					
ANR	73615	Identifier	doc_comment		73547	1					
ANR	73616	CompoundStatement		22:26:613:613	73547	1					
ANR	73617	ExpressionStatement	zend_string_release ( decl -> doc_comment )	469:4:12932:12970	73547	0	True				
ANR	73618	CallExpression	zend_string_release ( decl -> doc_comment )		73547	0					
ANR	73619	Callee	zend_string_release		73547	0					
ANR	73620	Identifier	zend_string_release		73547	0					
ANR	73621	ArgumentList	decl -> doc_comment		73547	1					
ANR	73622	Argument	decl -> doc_comment		73547	0					
ANR	73623	PtrMemberAccess	decl -> doc_comment		73547	0					
ANR	73624	Identifier	decl		73547	0					
ANR	73625	Identifier	doc_comment		73547	1					
ANR	73626	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 0 ] , free )"	471:3:12980:13021	73547	3	True				
ANR	73627	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 0 ] , free )"		73547	0					
ANR	73628	Callee	zend_ast_destroy_ex		73547	0					
ANR	73629	Identifier	zend_ast_destroy_ex		73547	0					
ANR	73630	ArgumentList	decl -> child [ 0 ]		73547	1					
ANR	73631	Argument	decl -> child [ 0 ]		73547	0					
ANR	73632	ArrayIndexing	decl -> child [ 0 ]		73547	0					
ANR	73633	PtrMemberAccess	decl -> child		73547	0					
ANR	73634	Identifier	decl		73547	0					
ANR	73635	Identifier	child		73547	1					
ANR	73636	PrimaryExpression	0		73547	1					
ANR	73637	Argument	free		73547	1					
ANR	73638	Identifier	free		73547	0					
ANR	73639	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 1 ] , free )"	472:3:13026:13067	73547	4	True				
ANR	73640	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 1 ] , free )"		73547	0					
ANR	73641	Callee	zend_ast_destroy_ex		73547	0					
ANR	73642	Identifier	zend_ast_destroy_ex		73547	0					
ANR	73643	ArgumentList	decl -> child [ 1 ]		73547	1					
ANR	73644	Argument	decl -> child [ 1 ]		73547	0					
ANR	73645	ArrayIndexing	decl -> child [ 1 ]		73547	0					
ANR	73646	PtrMemberAccess	decl -> child		73547	0					
ANR	73647	Identifier	decl		73547	0					
ANR	73648	Identifier	child		73547	1					
ANR	73649	PrimaryExpression	1		73547	1					
ANR	73650	Argument	free		73547	1					
ANR	73651	Identifier	free		73547	0					
ANR	73652	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 2 ] , free )"	473:3:13072:13113	73547	5	True				
ANR	73653	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 2 ] , free )"		73547	0					
ANR	73654	Callee	zend_ast_destroy_ex		73547	0					
ANR	73655	Identifier	zend_ast_destroy_ex		73547	0					
ANR	73656	ArgumentList	decl -> child [ 2 ]		73547	1					
ANR	73657	Argument	decl -> child [ 2 ]		73547	0					
ANR	73658	ArrayIndexing	decl -> child [ 2 ]		73547	0					
ANR	73659	PtrMemberAccess	decl -> child		73547	0					
ANR	73660	Identifier	decl		73547	0					
ANR	73661	Identifier	child		73547	1					
ANR	73662	PrimaryExpression	2		73547	1					
ANR	73663	Argument	free		73547	1					
ANR	73664	Identifier	free		73547	0					
ANR	73665	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 3 ] , free )"	474:3:13118:13159	73547	6	True				
ANR	73666	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 3 ] , free )"		73547	0					
ANR	73667	Callee	zend_ast_destroy_ex		73547	0					
ANR	73668	Identifier	zend_ast_destroy_ex		73547	0					
ANR	73669	ArgumentList	decl -> child [ 3 ]		73547	1					
ANR	73670	Argument	decl -> child [ 3 ]		73547	0					
ANR	73671	ArrayIndexing	decl -> child [ 3 ]		73547	0					
ANR	73672	PtrMemberAccess	decl -> child		73547	0					
ANR	73673	Identifier	decl		73547	0					
ANR	73674	Identifier	child		73547	1					
ANR	73675	PrimaryExpression	3		73547	1					
ANR	73676	Argument	free		73547	1					
ANR	73677	Identifier	free		73547	0					
ANR	73678	BreakStatement	break ;	475:3:13164:13169	73547	7	True				
ANR	73679	Label	default :	477:2:13177:13184	73547	8	True				
ANR	73680	Identifier	default		73547	0					
ANR	73681	IfStatement	if ( zend_ast_is_list ( ast ) )		73547	9					
ANR	73682	Condition	zend_ast_is_list ( ast )	478:7:13193:13213	73547	0	True				
ANR	73683	CallExpression	zend_ast_is_list ( ast )		73547	0					
ANR	73684	Callee	zend_ast_is_list		73547	0					
ANR	73685	Identifier	zend_ast_is_list		73547	0					
ANR	73686	ArgumentList	ast		73547	1					
ANR	73687	Argument	ast		73547	0					
ANR	73688	Identifier	ast		73547	0					
ANR	73689	CompoundStatement		34:4:959:969	73547	1					
ANR	73690	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	479:4:13222:13266	73547	0	True				
ANR	73691	IdentifierDecl	* list = zend_ast_get_list ( ast )		73547	0					
ANR	73692	IdentifierDeclType	zend_ast_list *		73547	0					
ANR	73693	Identifier	list		73547	1					
ANR	73694	AssignmentExpression	* list = zend_ast_get_list ( ast )		73547	2		=			
ANR	73695	Identifier	list		73547	0					
ANR	73696	CallExpression	zend_ast_get_list ( ast )		73547	1					
ANR	73697	Callee	zend_ast_get_list		73547	0					
ANR	73698	Identifier	zend_ast_get_list		73547	0					
ANR	73699	ArgumentList	ast		73547	1					
ANR	73700	Argument	ast		73547	0					
ANR	73701	Identifier	ast		73547	0					
ANR	73702	IdentifierDeclStatement	uint32_t i ;	480:4:13272:13282	73547	1	True				
ANR	73703	IdentifierDecl	i		73547	0					
ANR	73704	IdentifierDeclType	uint32_t		73547	0					
ANR	73705	Identifier	i		73547	1					
ANR	73706	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		73547	2					
ANR	73707	ForInit	i = 0 ;	481:9:13293:13298	73547	0	True				
ANR	73708	AssignmentExpression	i = 0		73547	0		=			
ANR	73709	Identifier	i		73547	0					
ANR	73710	PrimaryExpression	0		73547	1					
ANR	73711	Condition	i < list -> children	481:16:13300:13317	73547	1	True				
ANR	73712	RelationalExpression	i < list -> children		73547	0		<			
ANR	73713	Identifier	i		73547	0					
ANR	73714	PtrMemberAccess	list -> children		73547	1					
ANR	73715	Identifier	list		73547	0					
ANR	73716	Identifier	children		73547	1					
ANR	73717	PostIncDecOperationExpression	i ++	481:36:13320:13322	73547	2	True				
ANR	73718	Identifier	i		73547	0					
ANR	73719	IncDec	++		73547	1					
ANR	73720	CompoundStatement		35:41:1012:1012	73547	3					
ANR	73721	ExpressionStatement	"zend_ast_destroy_ex ( list -> child [ i ] , free )"	482:5:13332:13373	73547	0	True				
ANR	73722	CallExpression	"zend_ast_destroy_ex ( list -> child [ i ] , free )"		73547	0					
ANR	73723	Callee	zend_ast_destroy_ex		73547	0					
ANR	73724	Identifier	zend_ast_destroy_ex		73547	0					
ANR	73725	ArgumentList	list -> child [ i ]		73547	1					
ANR	73726	Argument	list -> child [ i ]		73547	0					
ANR	73727	ArrayIndexing	list -> child [ i ]		73547	0					
ANR	73728	PtrMemberAccess	list -> child		73547	0					
ANR	73729	Identifier	list		73547	0					
ANR	73730	Identifier	child		73547	1					
ANR	73731	Identifier	i		73547	1					
ANR	73732	Argument	free		73547	1					
ANR	73733	Identifier	free		73547	0					
ANR	73734	ElseStatement	else		73547	0					
ANR	73735	CompoundStatement		39:4:1084:1137	73547	0					
ANR	73736	IdentifierDeclStatement	"uint32_t i , children = zend_ast_get_num_children ( ast ) ;"	485:4:13397:13450	73547	0	True				
ANR	73737	IdentifierDecl	i		73547	0					
ANR	73738	IdentifierDeclType	uint32_t		73547	0					
ANR	73739	Identifier	i		73547	1					
ANR	73740	IdentifierDecl	children = zend_ast_get_num_children ( ast )		73547	1					
ANR	73741	IdentifierDeclType	uint32_t		73547	0					
ANR	73742	Identifier	children		73547	1					
ANR	73743	AssignmentExpression	children = zend_ast_get_num_children ( ast )		73547	2		=			
ANR	73744	Identifier	children		73547	0					
ANR	73745	CallExpression	zend_ast_get_num_children ( ast )		73547	1					
ANR	73746	Callee	zend_ast_get_num_children		73547	0					
ANR	73747	Identifier	zend_ast_get_num_children		73547	0					
ANR	73748	ArgumentList	ast		73547	1					
ANR	73749	Argument	ast		73547	0					
ANR	73750	Identifier	ast		73547	0					
ANR	73751	ForStatement	for ( i = 0 ; i < children ; i ++ )		73547	1					
ANR	73752	ForInit	i = 0 ;	486:9:13461:13466	73547	0	True				
ANR	73753	AssignmentExpression	i = 0		73547	0		=			
ANR	73754	Identifier	i		73547	0					
ANR	73755	PrimaryExpression	0		73547	1					
ANR	73756	Condition	i < children	486:16:13468:13479	73547	1	True				
ANR	73757	RelationalExpression	i < children		73547	0		<			
ANR	73758	Identifier	i		73547	0					
ANR	73759	Identifier	children		73547	1					
ANR	73760	PostIncDecOperationExpression	i ++	486:30:13482:13484	73547	2	True				
ANR	73761	Identifier	i		73547	0					
ANR	73762	IncDec	++		73547	1					
ANR	73763	CompoundStatement		40:35:1174:1174	73547	3					
ANR	73764	ExpressionStatement	"zend_ast_destroy_ex ( ast -> child [ i ] , free )"	487:5:13494:13534	73547	0	True				
ANR	73765	CallExpression	"zend_ast_destroy_ex ( ast -> child [ i ] , free )"		73547	0					
ANR	73766	Callee	zend_ast_destroy_ex		73547	0					
ANR	73767	Identifier	zend_ast_destroy_ex		73547	0					
ANR	73768	ArgumentList	ast -> child [ i ]		73547	1					
ANR	73769	Argument	ast -> child [ i ]		73547	0					
ANR	73770	ArrayIndexing	ast -> child [ i ]		73547	0					
ANR	73771	PtrMemberAccess	ast -> child		73547	0					
ANR	73772	Identifier	ast		73547	0					
ANR	73773	Identifier	child		73547	1					
ANR	73774	Identifier	i		73547	1					
ANR	73775	Argument	free		73547	1					
ANR	73776	Identifier	free		73547	0					
ANR	73777	IfStatement	if ( free )		73547	2					
ANR	73778	Condition	free	492:5:13556:13559	73547	0	True				
ANR	73779	Identifier	free		73547	0					
ANR	73780	CompoundStatement		46:11:1249:1249	73547	1					
ANR	73781	ExpressionStatement	efree ( ast )	493:2:13566:13576	73547	0	True				
ANR	73782	CallExpression	efree ( ast )		73547	0					
ANR	73783	Callee	efree		73547	0					
ANR	73784	Identifier	efree		73547	0					
ANR	73785	ArgumentList	ast		73547	1					
ANR	73786	Argument	ast		73547	0					
ANR	73787	Identifier	ast		73547	0					
ANR	73788	ReturnType	static void		73547	1					
ANR	73789	Identifier	zend_ast_destroy_ex		73547	2					
ANR	73790	ParameterList	"zend_ast * ast , zend_bool free"		73547	3					
ANR	73791	Parameter	zend_ast * ast	447:32:12281:12293	73547	0	True				
ANR	73792	ParameterType	zend_ast *		73547	0					
ANR	73793	Identifier	ast		73547	1					
ANR	73794	Parameter	zend_bool free	447:47:12296:12309	73547	1	True				
ANR	73795	ParameterType	zend_bool		73547	0					
ANR	73796	Identifier	free		73547	1					
ANR	73797	CFGEntryNode	ENTRY		73547		True				
ANR	73798	CFGExitNode	EXIT		73547		True				
ANR	73799	Symbol	* * decl		73547						
ANR	73800	Symbol	ast -> kind		73547						
ANR	73801	Symbol	ast		73547						
ANR	73802	Symbol	decl		73547						
ANR	73803	Symbol	* ast		73547						
ANR	73804	Symbol	* * list		73547						
ANR	73805	Symbol	decl -> doc_comment		73547						
ANR	73806	Symbol	children		73547						
ANR	73807	Symbol	* * ast		73547						
ANR	73808	Symbol	free		73547						
ANR	73809	Symbol	zend_ast_get_num_children		73547						
ANR	73810	Symbol	decl -> name		73547						
ANR	73811	Symbol	* decl -> child		73547						
ANR	73812	Symbol	list -> child		73547						
ANR	73813	Symbol	i		73547						
ANR	73814	Symbol	list		73547						
ANR	73815	Symbol	zend_ast_get_list		73547						
ANR	73816	Symbol	* i		73547						
ANR	73817	Symbol	zend_ast_is_list		73547						
ANR	73818	Symbol	* list		73547						
ANR	73819	Symbol	decl -> child		73547						
ANR	73820	Symbol	* list -> child		73547						
ANR	73821	Symbol	* ast -> child		73547						
ANR	73822	Symbol	zend_ast_get_zval		73547						
ANR	73823	Symbol	ast -> child		73547						
ANR	73824	Symbol	* decl		73547						
ANR	73825	Symbol	list -> children		73547						
ANR	73826	Function	zend_ast_destroy	497:0:13584:13662							
ANR	73827	FunctionDef	zend_ast_destroy (zend_ast * ast)		73826	0					
ANR	73828	CompoundStatement		497:46:13630:13662	73826	0					
ANR	73829	ExpressionStatement	"zend_ast_destroy_ex ( ast , 0 )"	498:1:13633:13660	73826	0	True				
ANR	73830	CallExpression	"zend_ast_destroy_ex ( ast , 0 )"		73826	0					
ANR	73831	Callee	zend_ast_destroy_ex		73826	0					
ANR	73832	Identifier	zend_ast_destroy_ex		73826	0					
ANR	73833	ArgumentList	ast		73826	1					
ANR	73834	Argument	ast		73826	0					
ANR	73835	Identifier	ast		73826	0					
ANR	73836	Argument	0		73826	1					
ANR	73837	PrimaryExpression	0		73826	0					
ANR	73838	ReturnType	ZEND_API void		73826	1					
ANR	73839	Identifier	zend_ast_destroy		73826	2					
ANR	73840	ParameterList	zend_ast * ast		73826	3					
ANR	73841	Parameter	zend_ast * ast	497:31:13615:13627	73826	0	True				
ANR	73842	ParameterType	zend_ast *		73826	0					
ANR	73843	Identifier	ast		73826	1					
ANR	73844	CFGEntryNode	ENTRY		73826		True				
ANR	73845	CFGExitNode	EXIT		73826		True				
ANR	73846	Symbol	ast		73826						
ANR	73847	Function	zend_ast_destroy_and_free	500:0:13664:13751							
ANR	73848	FunctionDef	zend_ast_destroy_and_free (zend_ast * ast)		73847	0					
ANR	73849	CompoundStatement		500:55:13719:13751	73847	0					
ANR	73850	ExpressionStatement	"zend_ast_destroy_ex ( ast , 1 )"	501:1:13722:13749	73847	0	True				
ANR	73851	CallExpression	"zend_ast_destroy_ex ( ast , 1 )"		73847	0					
ANR	73852	Callee	zend_ast_destroy_ex		73847	0					
ANR	73853	Identifier	zend_ast_destroy_ex		73847	0					
ANR	73854	ArgumentList	ast		73847	1					
ANR	73855	Argument	ast		73847	0					
ANR	73856	Identifier	ast		73847	0					
ANR	73857	Argument	1		73847	1					
ANR	73858	PrimaryExpression	1		73847	0					
ANR	73859	ReturnType	ZEND_API void		73847	1					
ANR	73860	Identifier	zend_ast_destroy_and_free		73847	2					
ANR	73861	ParameterList	zend_ast * ast		73847	3					
ANR	73862	Parameter	zend_ast * ast	500:40:13704:13716	73847	0	True				
ANR	73863	ParameterType	zend_ast *		73847	0					
ANR	73864	Identifier	ast		73847	1					
ANR	73865	CFGEntryNode	ENTRY		73847		True				
ANR	73866	CFGExitNode	EXIT		73847		True				
ANR	73867	Symbol	ast		73847						
ANR	73868	Function	zend_ast_apply	504:0:13754:14117							
ANR	73869	FunctionDef	"zend_ast_apply (zend_ast * ast , zend_ast_apply_func fn)"		73868	0					
ANR	73870	CompoundStatement		504:68:13822:14117	73868	0					
ANR	73871	IfStatement	if ( zend_ast_is_list ( ast ) )		73868	0					
ANR	73872	Condition	zend_ast_is_list ( ast )	505:5:13829:13849	73868	0	True				
ANR	73873	CallExpression	zend_ast_is_list ( ast )		73868	0					
ANR	73874	Callee	zend_ast_is_list		73868	0					
ANR	73875	Identifier	zend_ast_is_list		73868	0					
ANR	73876	ArgumentList	ast		73868	1					
ANR	73877	Argument	ast		73868	0					
ANR	73878	Identifier	ast		73868	0					
ANR	73879	CompoundStatement		4:2:81:91	73868	1					
ANR	73880	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	506:2:13856:13900	73868	0	True				
ANR	73881	IdentifierDecl	* list = zend_ast_get_list ( ast )		73868	0					
ANR	73882	IdentifierDeclType	zend_ast_list *		73868	0					
ANR	73883	Identifier	list		73868	1					
ANR	73884	AssignmentExpression	* list = zend_ast_get_list ( ast )		73868	2		=			
ANR	73885	Identifier	list		73868	0					
ANR	73886	CallExpression	zend_ast_get_list ( ast )		73868	1					
ANR	73887	Callee	zend_ast_get_list		73868	0					
ANR	73888	Identifier	zend_ast_get_list		73868	0					
ANR	73889	ArgumentList	ast		73868	1					
ANR	73890	Argument	ast		73868	0					
ANR	73891	Identifier	ast		73868	0					
ANR	73892	IdentifierDeclStatement	uint32_t i ;	507:2:13904:13914	73868	1	True				
ANR	73893	IdentifierDecl	i		73868	0					
ANR	73894	IdentifierDeclType	uint32_t		73868	0					
ANR	73895	Identifier	i		73868	1					
ANR	73896	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		73868	2					
ANR	73897	ForInit	i = 0 ;	508:7:13923:13928	73868	0	True				
ANR	73898	AssignmentExpression	i = 0		73868	0		=			
ANR	73899	Identifier	i		73868	0					
ANR	73900	PrimaryExpression	0		73868	1					
ANR	73901	Condition	i < list -> children	508:14:13930:13947	73868	1	True				
ANR	73902	RelationalExpression	i < list -> children		73868	0		<			
ANR	73903	Identifier	i		73868	0					
ANR	73904	PtrMemberAccess	list -> children		73868	1					
ANR	73905	Identifier	list		73868	0					
ANR	73906	Identifier	children		73868	1					
ANR	73907	UnaryExpression	++ i	508:34:13950:13952	73868	2	True				
ANR	73908	IncDec	++		73868	0					
ANR	73909	Identifier	i		73868	1					
ANR	73910	CompoundStatement		5:39:132:132	73868	3					
ANR	73911	ExpressionStatement	fn ( & list -> child [ i ] )	509:3:13960:13979	73868	0	True				
ANR	73912	CallExpression	fn ( & list -> child [ i ] )		73868	0					
ANR	73913	Callee	fn		73868	0					
ANR	73914	Identifier	fn		73868	0					
ANR	73915	ArgumentList	& list -> child [ i ]		73868	1					
ANR	73916	Argument	& list -> child [ i ]		73868	0					
ANR	73917	UnaryOperationExpression	& list -> child [ i ]		73868	0					
ANR	73918	UnaryOperator	&		73868	0					
ANR	73919	ArrayIndexing	list -> child [ i ]		73868	1					
ANR	73920	PtrMemberAccess	list -> child		73868	0					
ANR	73921	Identifier	list		73868	0					
ANR	73922	Identifier	child		73868	1					
ANR	73923	Identifier	i		73868	1					
ANR	73924	ElseStatement	else		73868	0					
ANR	73925	CompoundStatement		9:2:174:227	73868	0					
ANR	73926	IdentifierDeclStatement	"uint32_t i , children = zend_ast_get_num_children ( ast ) ;"	512:2:13997:14050	73868	0	True				
ANR	73927	IdentifierDecl	i		73868	0					
ANR	73928	IdentifierDeclType	uint32_t		73868	0					
ANR	73929	Identifier	i		73868	1					
ANR	73930	IdentifierDecl	children = zend_ast_get_num_children ( ast )		73868	1					
ANR	73931	IdentifierDeclType	uint32_t		73868	0					
ANR	73932	Identifier	children		73868	1					
ANR	73933	AssignmentExpression	children = zend_ast_get_num_children ( ast )		73868	2		=			
ANR	73934	Identifier	children		73868	0					
ANR	73935	CallExpression	zend_ast_get_num_children ( ast )		73868	1					
ANR	73936	Callee	zend_ast_get_num_children		73868	0					
ANR	73937	Identifier	zend_ast_get_num_children		73868	0					
ANR	73938	ArgumentList	ast		73868	1					
ANR	73939	Argument	ast		73868	0					
ANR	73940	Identifier	ast		73868	0					
ANR	73941	ForStatement	for ( i = 0 ; i < children ; ++ i )		73868	1					
ANR	73942	ForInit	i = 0 ;	513:7:14059:14064	73868	0	True				
ANR	73943	AssignmentExpression	i = 0		73868	0		=			
ANR	73944	Identifier	i		73868	0					
ANR	73945	PrimaryExpression	0		73868	1					
ANR	73946	Condition	i < children	513:14:14066:14077	73868	1	True				
ANR	73947	RelationalExpression	i < children		73868	0		<			
ANR	73948	Identifier	i		73868	0					
ANR	73949	Identifier	children		73868	1					
ANR	73950	UnaryExpression	++ i	513:28:14080:14082	73868	2	True				
ANR	73951	IncDec	++		73868	0					
ANR	73952	Identifier	i		73868	1					
ANR	73953	CompoundStatement		10:33:262:262	73868	3					
ANR	73954	ExpressionStatement	fn ( & ast -> child [ i ] )	514:3:14090:14108	73868	0	True				
ANR	73955	CallExpression	fn ( & ast -> child [ i ] )		73868	0					
ANR	73956	Callee	fn		73868	0					
ANR	73957	Identifier	fn		73868	0					
ANR	73958	ArgumentList	& ast -> child [ i ]		73868	1					
ANR	73959	Argument	& ast -> child [ i ]		73868	0					
ANR	73960	UnaryOperationExpression	& ast -> child [ i ]		73868	0					
ANR	73961	UnaryOperator	&		73868	0					
ANR	73962	ArrayIndexing	ast -> child [ i ]		73868	1					
ANR	73963	PtrMemberAccess	ast -> child		73868	0					
ANR	73964	Identifier	ast		73868	0					
ANR	73965	Identifier	child		73868	1					
ANR	73966	Identifier	i		73868	1					
ANR	73967	ReturnType	ZEND_API void		73868	1					
ANR	73968	Identifier	zend_ast_apply		73868	2					
ANR	73969	ParameterList	"zend_ast * ast , zend_ast_apply_func fn"		73868	3					
ANR	73970	Parameter	zend_ast * ast	504:29:13783:13795	73868	0	True				
ANR	73971	ParameterType	zend_ast *		73868	0					
ANR	73972	Identifier	ast		73868	1					
ANR	73973	Parameter	zend_ast_apply_func fn	504:44:13798:13819	73868	1	True				
ANR	73974	ParameterType	zend_ast_apply_func		73868	0					
ANR	73975	Identifier	fn		73868	1					
ANR	73976	CFGEntryNode	ENTRY		73868		True				
ANR	73977	CFGExitNode	EXIT		73868		True				
ANR	73978	Symbol	ast		73868						
ANR	73979	Symbol	list -> child		73868						
ANR	73980	Symbol	fn		73868						
ANR	73981	Symbol	i		73868						
ANR	73982	Symbol	list		73868						
ANR	73983	Symbol	zend_ast_get_list		73868						
ANR	73984	Symbol	* ast		73868						
ANR	73985	Symbol	zend_ast_is_list		73868						
ANR	73986	Symbol	* list		73868						
ANR	73987	Symbol	children		73868						
ANR	73988	Symbol	ast -> child		73868						
ANR	73989	Symbol	zend_ast_get_num_children		73868						
ANR	73990	Symbol	list -> children		73868						
ANR	73991	DeclStmt									
ANR	73992	Decl							void	"void ( smart_str * str , zend_ast * ast , int priority , int indent )"	zend_ast_export_ex
ANR	73993	Function	zend_ast_export_str	556:0:15371:15665							
ANR	73994	FunctionDef	"zend_ast_export_str (smart_str * str , zend_string * s)"		73993	0					
ANR	73995	CompoundStatement		557:0:15435:15665	73993	0					
ANR	73996	IdentifierDeclStatement	size_t i ;	558:1:15438:15446	73993	0	True				
ANR	73997	IdentifierDecl	i		73993	0					
ANR	73998	IdentifierDeclType	size_t		73993	0					
ANR	73999	Identifier	i		73993	1					
ANR	74000	ForStatement	for ( i = 0 ; i < ZSTR_LEN ( s ) ; i ++ )		73993	1					
ANR	74001	ForInit	i = 0 ;	560:6:15455:15460	73993	0	True				
ANR	74002	AssignmentExpression	i = 0		73993	0		=			
ANR	74003	Identifier	i		73993	0					
ANR	74004	PrimaryExpression	0		73993	1					
ANR	74005	Condition	i < ZSTR_LEN ( s )	560:13:15462:15476	73993	1	True				
ANR	74006	RelationalExpression	i < ZSTR_LEN ( s )		73993	0		<			
ANR	74007	Identifier	i		73993	0					
ANR	74008	CallExpression	ZSTR_LEN ( s )		73993	1					
ANR	74009	Callee	ZSTR_LEN		73993	0					
ANR	74010	Identifier	ZSTR_LEN		73993	0					
ANR	74011	ArgumentList	s		73993	1					
ANR	74012	Argument	s		73993	0					
ANR	74013	Identifier	s		73993	0					
ANR	74014	PostIncDecOperationExpression	i ++	560:30:15479:15481	73993	2	True				
ANR	74015	Identifier	i		73993	0					
ANR	74016	IncDec	++		73993	1					
ANR	74017	CompoundStatement		5:2:52:84	73993	3					
ANR	74018	IdentifierDeclStatement	unsigned char c = ZSTR_VAL ( s ) [ i ] ;	561:2:15488:15520	73993	0	True				
ANR	74019	IdentifierDecl	c = ZSTR_VAL ( s ) [ i ]		73993	0					
ANR	74020	IdentifierDeclType	unsigned char		73993	0					
ANR	74021	Identifier	c		73993	1					
ANR	74022	AssignmentExpression	c = ZSTR_VAL ( s ) [ i ]		73993	2		=			
ANR	74023	Identifier	c		73993	0					
ANR	74024	ArrayIndexing	ZSTR_VAL ( s ) [ i ]		73993	1					
ANR	74025	CallExpression	ZSTR_VAL ( s )		73993	0					
ANR	74026	Callee	ZSTR_VAL		73993	0					
ANR	74027	Identifier	ZSTR_VAL		73993	0					
ANR	74028	ArgumentList	s		73993	1					
ANR	74029	Argument	s		73993	0					
ANR	74030	Identifier	s		73993	0					
ANR	74031	Identifier	i		73993	1					
ANR	74032	IfStatement	if ( c == '\\'' || c == '\\\\' )		73993	1					
ANR	74033	Condition	c == '\\'' || c == '\\\\'	562:6:15528:15549	73993	0	True				
ANR	74034	OrExpression	c == '\\'' || c == '\\\\'		73993	0		||			
ANR	74035	EqualityExpression	c == '\\''		73993	0		==			
ANR	74036	Identifier	c		73993	0					
ANR	74037	PrimaryExpression	'\\''		73993	1					
ANR	74038	EqualityExpression	c == '\\\\'		73993	1		==			
ANR	74039	Identifier	c		73993	0					
ANR	74040	PrimaryExpression	'\\\\'		73993	1					
ANR	74041	CompoundStatement		6:30:116:116	73993	1					
ANR	74042	ExpressionStatement	"smart_str_appendc ( str , '\\\\' )"	563:3:15557:15585	73993	0	True				
ANR	74043	CallExpression	"smart_str_appendc ( str , '\\\\' )"		73993	0					
ANR	74044	Callee	smart_str_appendc		73993	0					
ANR	74045	Identifier	smart_str_appendc		73993	0					
ANR	74046	ArgumentList	str		73993	1					
ANR	74047	Argument	str		73993	0					
ANR	74048	Identifier	str		73993	0					
ANR	74049	Argument	'\\\\'		73993	1					
ANR	74050	PrimaryExpression	'\\\\'		73993	0					
ANR	74051	ExpressionStatement	"smart_str_appendc ( str , c )"	564:3:15590:15615	73993	1	True				
ANR	74052	CallExpression	"smart_str_appendc ( str , c )"		73993	0					
ANR	74053	Callee	smart_str_appendc		73993	0					
ANR	74054	Identifier	smart_str_appendc		73993	0					
ANR	74055	ArgumentList	str		73993	1					
ANR	74056	Argument	str		73993	0					
ANR	74057	Identifier	str		73993	0					
ANR	74058	Argument	c		73993	1					
ANR	74059	Identifier	c		73993	0					
ANR	74060	ElseStatement	else		73993	0					
ANR	74061	CompoundStatement		9:9:190:190	73993	0					
ANR	74062	ExpressionStatement	"smart_str_appendc ( str , c )"	566:3:15631:15656	73993	0	True				
ANR	74063	CallExpression	"smart_str_appendc ( str , c )"		73993	0					
ANR	74064	Callee	smart_str_appendc		73993	0					
ANR	74065	Identifier	smart_str_appendc		73993	0					
ANR	74066	ArgumentList	str		73993	1					
ANR	74067	Argument	str		73993	0					
ANR	74068	Identifier	str		73993	0					
ANR	74069	Argument	c		73993	1					
ANR	74070	Identifier	c		73993	0					
ANR	74071	ReturnType	static void		73993	1					
ANR	74072	Identifier	zend_ast_export_str		73993	2					
ANR	74073	ParameterList	"smart_str * str , zend_string * s"		73993	3					
ANR	74074	Parameter	smart_str * str	556:32:15403:15416	73993	0	True				
ANR	74075	ParameterType	smart_str *		73993	0					
ANR	74076	Identifier	str		73993	1					
ANR	74077	Parameter	zend_string * s	556:48:15419:15432	73993	1	True				
ANR	74078	ParameterType	zend_string *		73993	0					
ANR	74079	Identifier	s		73993	1					
ANR	74080	CFGEntryNode	ENTRY		73993		True				
ANR	74081	CFGExitNode	EXIT		73993		True				
ANR	74082	Symbol	str		73993						
ANR	74083	Symbol	s		73993						
ANR	74084	Symbol	c		73993						
ANR	74085	Symbol	* i		73993						
ANR	74086	Symbol	ZSTR_LEN		73993						
ANR	74087	Symbol	i		73993						
ANR	74088	Symbol	* ZSTR_VAL		73993						
ANR	74089	Symbol	ZSTR_VAL		73993						
ANR	74090	Function	zend_ast_export_qstr	571:0:15668:16581							
ANR	74091	FunctionDef	"zend_ast_export_qstr (smart_str * str , char quote , zend_string * s)"		74090	0					
ANR	74092	CompoundStatement		572:0:15745:16581	74090	0					
ANR	74093	IdentifierDeclStatement	size_t i ;	573:1:15748:15756	74090	0	True				
ANR	74094	IdentifierDecl	i		74090	0					
ANR	74095	IdentifierDeclType	size_t		74090	0					
ANR	74096	Identifier	i		74090	1					
ANR	74097	ForStatement	for ( i = 0 ; i < ZSTR_LEN ( s ) ; i ++ )		74090	1					
ANR	74098	ForInit	i = 0 ;	575:6:15765:15770	74090	0	True				
ANR	74099	AssignmentExpression	i = 0		74090	0		=			
ANR	74100	Identifier	i		74090	0					
ANR	74101	PrimaryExpression	0		74090	1					
ANR	74102	Condition	i < ZSTR_LEN ( s )	575:13:15772:15786	74090	1	True				
ANR	74103	RelationalExpression	i < ZSTR_LEN ( s )		74090	0		<			
ANR	74104	Identifier	i		74090	0					
ANR	74105	CallExpression	ZSTR_LEN ( s )		74090	1					
ANR	74106	Callee	ZSTR_LEN		74090	0					
ANR	74107	Identifier	ZSTR_LEN		74090	0					
ANR	74108	ArgumentList	s		74090	1					
ANR	74109	Argument	s		74090	0					
ANR	74110	Identifier	s		74090	0					
ANR	74111	PostIncDecOperationExpression	i ++	575:30:15789:15791	74090	2	True				
ANR	74112	Identifier	i		74090	0					
ANR	74113	IncDec	++		74090	1					
ANR	74114	CompoundStatement		5:2:52:84	74090	3					
ANR	74115	IdentifierDeclStatement	unsigned char c = ZSTR_VAL ( s ) [ i ] ;	576:2:15798:15830	74090	0	True				
ANR	74116	IdentifierDecl	c = ZSTR_VAL ( s ) [ i ]		74090	0					
ANR	74117	IdentifierDeclType	unsigned char		74090	0					
ANR	74118	Identifier	c		74090	1					
ANR	74119	AssignmentExpression	c = ZSTR_VAL ( s ) [ i ]		74090	2		=			
ANR	74120	Identifier	c		74090	0					
ANR	74121	ArrayIndexing	ZSTR_VAL ( s ) [ i ]		74090	1					
ANR	74122	CallExpression	ZSTR_VAL ( s )		74090	0					
ANR	74123	Callee	ZSTR_VAL		74090	0					
ANR	74124	Identifier	ZSTR_VAL		74090	0					
ANR	74125	ArgumentList	s		74090	1					
ANR	74126	Argument	s		74090	0					
ANR	74127	Identifier	s		74090	0					
ANR	74128	Identifier	i		74090	1					
ANR	74129	IfStatement	if ( c < ' ' )		74090	1					
ANR	74130	Condition	c < ' '	577:6:15838:15844	74090	0	True				
ANR	74131	RelationalExpression	c < ' '		74090	0		<			
ANR	74132	Identifier	c		74090	0					
ANR	74133	PrimaryExpression	' '		74090	1					
ANR	74134	CompoundStatement		6:15:101:101	74090	1					
ANR	74135	SwitchStatement	switch ( c )		74090	0					
ANR	74136	Condition	c	578:11:15860:15860	74090	0	True				
ANR	74137	Identifier	c		74090	0					
ANR	74138	CompoundStatement		7:14:117:117	74090	1					
ANR	74139	Label	case '\\n' :	579:4:15869:15878	74090	0	True				
ANR	74140	ExpressionStatement	"smart_str_appends ( str , ""\\\\n"" )"	580:5:15885:15914	74090	1	True				
ANR	74141	CallExpression	"smart_str_appends ( str , ""\\\\n"" )"		74090	0					
ANR	74142	Callee	smart_str_appends		74090	0					
ANR	74143	Identifier	smart_str_appends		74090	0					
ANR	74144	ArgumentList	str		74090	1					
ANR	74145	Argument	str		74090	0					
ANR	74146	Identifier	str		74090	0					
ANR	74147	Argument	"""\\\\n"""		74090	1					
ANR	74148	PrimaryExpression	"""\\\\n"""		74090	0					
ANR	74149	BreakStatement	break ;	581:5:15921:15926	74090	2	True				
ANR	74150	Label	case '\\r' :	582:4:15932:15941	74090	3	True				
ANR	74151	ExpressionStatement	"smart_str_appends ( str , ""\\\\r"" )"	583:5:15948:15977	74090	4	True				
ANR	74152	CallExpression	"smart_str_appends ( str , ""\\\\r"" )"		74090	0					
ANR	74153	Callee	smart_str_appends		74090	0					
ANR	74154	Identifier	smart_str_appends		74090	0					
ANR	74155	ArgumentList	str		74090	1					
ANR	74156	Argument	str		74090	0					
ANR	74157	Identifier	str		74090	0					
ANR	74158	Argument	"""\\\\r"""		74090	1					
ANR	74159	PrimaryExpression	"""\\\\r"""		74090	0					
ANR	74160	BreakStatement	break ;	584:5:15984:15989	74090	5	True				
ANR	74161	Label	case '\\t' :	585:4:15995:16004	74090	6	True				
ANR	74162	ExpressionStatement	"smart_str_appends ( str , ""\\\\t"" )"	586:5:16011:16040	74090	7	True				
ANR	74163	CallExpression	"smart_str_appends ( str , ""\\\\t"" )"		74090	0					
ANR	74164	Callee	smart_str_appends		74090	0					
ANR	74165	Identifier	smart_str_appends		74090	0					
ANR	74166	ArgumentList	str		74090	1					
ANR	74167	Argument	str		74090	0					
ANR	74168	Identifier	str		74090	0					
ANR	74169	Argument	"""\\\\t"""		74090	1					
ANR	74170	PrimaryExpression	"""\\\\t"""		74090	0					
ANR	74171	BreakStatement	break ;	587:5:16047:16052	74090	8	True				
ANR	74172	Label	case '\\f' :	588:4:16058:16067	74090	9	True				
ANR	74173	ExpressionStatement	"smart_str_appends ( str , ""\\\\f"" )"	589:5:16074:16103	74090	10	True				
ANR	74174	CallExpression	"smart_str_appends ( str , ""\\\\f"" )"		74090	0					
ANR	74175	Callee	smart_str_appends		74090	0					
ANR	74176	Identifier	smart_str_appends		74090	0					
ANR	74177	ArgumentList	str		74090	1					
ANR	74178	Argument	str		74090	0					
ANR	74179	Identifier	str		74090	0					
ANR	74180	Argument	"""\\\\f"""		74090	1					
ANR	74181	PrimaryExpression	"""\\\\f"""		74090	0					
ANR	74182	BreakStatement	break ;	590:5:16110:16115	74090	11	True				
ANR	74183	Label	case '\\v' :	591:4:16121:16130	74090	12	True				
ANR	74184	ExpressionStatement	"smart_str_appends ( str , ""\\\\v"" )"	592:5:16137:16166	74090	13	True				
ANR	74185	CallExpression	"smart_str_appends ( str , ""\\\\v"" )"		74090	0					
ANR	74186	Callee	smart_str_appends		74090	0					
ANR	74187	Identifier	smart_str_appends		74090	0					
ANR	74188	ArgumentList	str		74090	1					
ANR	74189	Argument	str		74090	0					
ANR	74190	Identifier	str		74090	0					
ANR	74191	Argument	"""\\\\v"""		74090	1					
ANR	74192	PrimaryExpression	"""\\\\v"""		74090	0					
ANR	74193	BreakStatement	break ;	593:5:16173:16178	74090	14	True				
ANR	74194	Label	case VK_ESCAPE :	595:4:16202:16216	74090	15	True				
ANR	74195	Identifier	VK_ESCAPE		74090	0					
ANR	74196	ExpressionStatement	"smart_str_appends ( str , ""\\\\e"" )"	599:5:16251:16280	74090	16	True				
ANR	74197	CallExpression	"smart_str_appends ( str , ""\\\\e"" )"		74090	0					
ANR	74198	Callee	smart_str_appends		74090	0					
ANR	74199	Identifier	smart_str_appends		74090	0					
ANR	74200	ArgumentList	str		74090	1					
ANR	74201	Argument	str		74090	0					
ANR	74202	Identifier	str		74090	0					
ANR	74203	Argument	"""\\\\e"""		74090	1					
ANR	74204	PrimaryExpression	"""\\\\e"""		74090	0					
ANR	74205	BreakStatement	break ;	600:5:16287:16292	74090	17	True				
ANR	74206	Label	default :	601:4:16298:16305	74090	18	True				
ANR	74207	Identifier	default		74090	0					
ANR	74208	ExpressionStatement	"smart_str_appends ( str , ""\\\\0"" )"	602:5:16312:16341	74090	19	True				
ANR	74209	CallExpression	"smart_str_appends ( str , ""\\\\0"" )"		74090	0					
ANR	74210	Callee	smart_str_appends		74090	0					
ANR	74211	Identifier	smart_str_appends		74090	0					
ANR	74212	ArgumentList	str		74090	1					
ANR	74213	Argument	str		74090	0					
ANR	74214	Identifier	str		74090	0					
ANR	74215	Argument	"""\\\\0"""		74090	1					
ANR	74216	PrimaryExpression	"""\\\\0"""		74090	0					
ANR	74217	ExpressionStatement	"smart_str_appendc ( str , '0' + ( c / 8 ) )"	603:5:16348:16385	74090	20	True				
ANR	74218	CallExpression	"smart_str_appendc ( str , '0' + ( c / 8 ) )"		74090	0					
ANR	74219	Callee	smart_str_appendc		74090	0					
ANR	74220	Identifier	smart_str_appendc		74090	0					
ANR	74221	ArgumentList	str		74090	1					
ANR	74222	Argument	str		74090	0					
ANR	74223	Identifier	str		74090	0					
ANR	74224	Argument	'0' + ( c / 8 )		74090	1					
ANR	74225	AdditiveExpression	'0' + ( c / 8 )		74090	0		+			
ANR	74226	PrimaryExpression	'0'		74090	0					
ANR	74227	MultiplicativeExpression	c / 8		74090	1		/			
ANR	74228	Identifier	c		74090	0					
ANR	74229	PrimaryExpression	8		74090	1					
ANR	74230	ExpressionStatement	"smart_str_appendc ( str , '0' + ( c % 8 ) )"	604:5:16392:16429	74090	21	True				
ANR	74231	CallExpression	"smart_str_appendc ( str , '0' + ( c % 8 ) )"		74090	0					
ANR	74232	Callee	smart_str_appendc		74090	0					
ANR	74233	Identifier	smart_str_appendc		74090	0					
ANR	74234	ArgumentList	str		74090	1					
ANR	74235	Argument	str		74090	0					
ANR	74236	Identifier	str		74090	0					
ANR	74237	Argument	'0' + ( c % 8 )		74090	1					
ANR	74238	AdditiveExpression	'0' + ( c % 8 )		74090	0		+			
ANR	74239	PrimaryExpression	'0'		74090	0					
ANR	74240	MultiplicativeExpression	c % 8		74090	1		%			
ANR	74241	Identifier	c		74090	0					
ANR	74242	PrimaryExpression	8		74090	1					
ANR	74243	BreakStatement	break ;	605:5:16436:16441	74090	22	True				
ANR	74244	ElseStatement	else		74090	0					
ANR	74245	CompoundStatement		36:9:711:711	74090	0					
ANR	74246	IfStatement	if ( c == quote || c == '$' || c == '\\\\' )		74090	0					
ANR	74247	Condition	c == quote || c == '$' || c == '\\\\'	608:7:16466:16500	74090	0	True				
ANR	74248	OrExpression	c == quote || c == '$' || c == '\\\\'		74090	0		||			
ANR	74249	EqualityExpression	c == quote		74090	0		==			
ANR	74250	Identifier	c		74090	0					
ANR	74251	Identifier	quote		74090	1					
ANR	74252	OrExpression	c == '$' || c == '\\\\'		74090	1		||			
ANR	74253	EqualityExpression	c == '$'		74090	0		==			
ANR	74254	Identifier	c		74090	0					
ANR	74255	PrimaryExpression	'$'		74090	1					
ANR	74256	EqualityExpression	c == '\\\\'		74090	1		==			
ANR	74257	Identifier	c		74090	0					
ANR	74258	PrimaryExpression	'\\\\'		74090	1					
ANR	74259	CompoundStatement		37:44:757:757	74090	1					
ANR	74260	ExpressionStatement	"smart_str_appendc ( str , '\\\\' )"	609:4:16509:16537	74090	0	True				
ANR	74261	CallExpression	"smart_str_appendc ( str , '\\\\' )"		74090	0					
ANR	74262	Callee	smart_str_appendc		74090	0					
ANR	74263	Identifier	smart_str_appendc		74090	0					
ANR	74264	ArgumentList	str		74090	1					
ANR	74265	Argument	str		74090	0					
ANR	74266	Identifier	str		74090	0					
ANR	74267	Argument	'\\\\'		74090	1					
ANR	74268	PrimaryExpression	'\\\\'		74090	0					
ANR	74269	ExpressionStatement	"smart_str_appendc ( str , c )"	611:3:16547:16572	74090	1	True				
ANR	74270	CallExpression	"smart_str_appendc ( str , c )"		74090	0					
ANR	74271	Callee	smart_str_appendc		74090	0					
ANR	74272	Identifier	smart_str_appendc		74090	0					
ANR	74273	ArgumentList	str		74090	1					
ANR	74274	Argument	str		74090	0					
ANR	74275	Identifier	str		74090	0					
ANR	74276	Argument	c		74090	1					
ANR	74277	Identifier	c		74090	0					
ANR	74278	ReturnType	static void		74090	1					
ANR	74279	Identifier	zend_ast_export_qstr		74090	2					
ANR	74280	ParameterList	"smart_str * str , char quote , zend_string * s"		74090	3					
ANR	74281	Parameter	smart_str * str	571:33:15701:15714	74090	0	True				
ANR	74282	ParameterType	smart_str *		74090	0					
ANR	74283	Identifier	str		74090	1					
ANR	74284	Parameter	char quote	571:49:15717:15726	74090	1	True				
ANR	74285	ParameterType	char		74090	0					
ANR	74286	Identifier	quote		74090	1					
ANR	74287	Parameter	zend_string * s	571:61:15729:15742	74090	2	True				
ANR	74288	ParameterType	zend_string *		74090	0					
ANR	74289	Identifier	s		74090	1					
ANR	74290	CFGEntryNode	ENTRY		74090		True				
ANR	74291	CFGExitNode	EXIT		74090		True				
ANR	74292	Symbol	str		74090						
ANR	74293	Symbol	quote		74090						
ANR	74294	Symbol	s		74090						
ANR	74295	Symbol	c		74090						
ANR	74296	Symbol	* i		74090						
ANR	74297	Symbol	ZSTR_LEN		74090						
ANR	74298	Symbol	i		74090						
ANR	74299	Symbol	ZSTR_VAL		74090						
ANR	74300	Symbol	* ZSTR_VAL		74090						
ANR	74301	Function	zend_ast_export_indent	616:0:16584:16720							
ANR	74302	FunctionDef	"zend_ast_export_indent (smart_str * str , int indent)"		74301	0					
ANR	74303	CompoundStatement		617:0:16647:16720	74301	0					
ANR	74304	WhileStatement	while ( indent > 0 )		74301	0					
ANR	74305	Condition	indent > 0	618:8:16657:16666	74301	0	True				
ANR	74306	RelationalExpression	indent > 0		74301	0		>			
ANR	74307	Identifier	indent		74301	0					
ANR	74308	PrimaryExpression	0		74301	1					
ANR	74309	CompoundStatement		2:20:21:21	74301	1					
ANR	74310	ExpressionStatement	"smart_str_appends ( str , ""    "" )"	619:2:16673:16703	74301	0	True				
ANR	74311	CallExpression	"smart_str_appends ( str , ""    "" )"		74301	0					
ANR	74312	Callee	smart_str_appends		74301	0					
ANR	74313	Identifier	smart_str_appends		74301	0					
ANR	74314	ArgumentList	str		74301	1					
ANR	74315	Argument	str		74301	0					
ANR	74316	Identifier	str		74301	0					
ANR	74317	Argument	"""    """		74301	1					
ANR	74318	PrimaryExpression	"""    """		74301	0					
ANR	74319	ExpressionStatement	indent --	620:2:16707:16715	74301	1	True				
ANR	74320	PostIncDecOperationExpression	indent --		74301	0					
ANR	74321	Identifier	indent		74301	0					
ANR	74322	IncDec	--		74301	1					
ANR	74323	ReturnType	static void		74301	1					
ANR	74324	Identifier	zend_ast_export_indent		74301	2					
ANR	74325	ParameterList	"smart_str * str , int indent"		74301	3					
ANR	74326	Parameter	smart_str * str	616:35:16619:16632	74301	0	True				
ANR	74327	ParameterType	smart_str *		74301	0					
ANR	74328	Identifier	str		74301	1					
ANR	74329	Parameter	int indent	616:51:16635:16644	74301	1	True				
ANR	74330	ParameterType	int		74301	0					
ANR	74331	Identifier	indent		74301	1					
ANR	74332	CFGEntryNode	ENTRY		74301		True				
ANR	74333	CFGExitNode	EXIT		74301		True				
ANR	74334	Symbol	str		74301						
ANR	74335	Symbol	indent		74301						
ANR	74336	Function	zend_ast_export_name	624:0:16723:17029							
ANR	74337	FunctionDef	"zend_ast_export_name (smart_str * str , zend_ast * ast , int priority , int indent)"		74336	0					
ANR	74338	CompoundStatement		625:0:16813:17029	74336	0					
ANR	74339	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		74336	0					
ANR	74340	Condition	ast -> kind == ZEND_AST_ZVAL	626:5:16820:16845	74336	0	True				
ANR	74341	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		74336	0		==			
ANR	74342	PtrMemberAccess	ast -> kind		74336	0					
ANR	74343	Identifier	ast		74336	0					
ANR	74344	Identifier	kind		74336	1					
ANR	74345	Identifier	ZEND_AST_ZVAL		74336	1					
ANR	74346	CompoundStatement		3:2:38:71	74336	1					
ANR	74347	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	627:2:16852:16885	74336	0	True				
ANR	74348	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		74336	0					
ANR	74349	IdentifierDeclType	zval *		74336	0					
ANR	74350	Identifier	zv		74336	1					
ANR	74351	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		74336	2		=			
ANR	74352	Identifier	zv		74336	0					
ANR	74353	CallExpression	zend_ast_get_zval ( ast )		74336	1					
ANR	74354	Callee	zend_ast_get_zval		74336	0					
ANR	74355	Identifier	zend_ast_get_zval		74336	0					
ANR	74356	ArgumentList	ast		74336	1					
ANR	74357	Argument	ast		74336	0					
ANR	74358	Identifier	ast		74336	0					
ANR	74359	IfStatement	if ( Z_TYPE_P ( zv ) == IS_STRING )		74336	1					
ANR	74360	Condition	Z_TYPE_P ( zv ) == IS_STRING	629:6:16894:16918	74336	0	True				
ANR	74361	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		74336	0		==			
ANR	74362	CallExpression	Z_TYPE_P ( zv )		74336	0					
ANR	74363	Callee	Z_TYPE_P		74336	0					
ANR	74364	Identifier	Z_TYPE_P		74336	0					
ANR	74365	ArgumentList	zv		74336	1					
ANR	74366	Argument	zv		74336	0					
ANR	74367	Identifier	zv		74336	0					
ANR	74368	Identifier	IS_STRING		74336	1					
ANR	74369	CompoundStatement		5:33:107:107	74336	1					
ANR	74370	ExpressionStatement	"smart_str_append ( str , Z_STR_P ( zv ) )"	630:3:16926:16960	74336	0	True				
ANR	74371	CallExpression	"smart_str_append ( str , Z_STR_P ( zv ) )"		74336	0					
ANR	74372	Callee	smart_str_append		74336	0					
ANR	74373	Identifier	smart_str_append		74336	0					
ANR	74374	ArgumentList	str		74336	1					
ANR	74375	Argument	str		74336	0					
ANR	74376	Identifier	str		74336	0					
ANR	74377	Argument	Z_STR_P ( zv )		74336	1					
ANR	74378	CallExpression	Z_STR_P ( zv )		74336	0					
ANR	74379	Callee	Z_STR_P		74336	0					
ANR	74380	Identifier	Z_STR_P		74336	0					
ANR	74381	ArgumentList	zv		74336	1					
ANR	74382	Argument	zv		74336	0					
ANR	74383	Identifier	zv		74336	0					
ANR	74384	ReturnStatement	return ;	631:3:16965:16971	74336	1	True				
ANR	74385	ExpressionStatement	"zend_ast_export_ex ( str , ast , priority , indent )"	634:1:16981:17027	74336	1	True				
ANR	74386	CallExpression	"zend_ast_export_ex ( str , ast , priority , indent )"		74336	0					
ANR	74387	Callee	zend_ast_export_ex		74336	0					
ANR	74388	Identifier	zend_ast_export_ex		74336	0					
ANR	74389	ArgumentList	str		74336	1					
ANR	74390	Argument	str		74336	0					
ANR	74391	Identifier	str		74336	0					
ANR	74392	Argument	ast		74336	1					
ANR	74393	Identifier	ast		74336	0					
ANR	74394	Argument	priority		74336	2					
ANR	74395	Identifier	priority		74336	0					
ANR	74396	Argument	indent		74336	3					
ANR	74397	Identifier	indent		74336	0					
ANR	74398	ReturnType	static void		74336	1					
ANR	74399	Identifier	zend_ast_export_name		74336	2					
ANR	74400	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		74336	3					
ANR	74401	Parameter	smart_str * str	624:33:16756:16769	74336	0	True				
ANR	74402	ParameterType	smart_str *		74336	0					
ANR	74403	Identifier	str		74336	1					
ANR	74404	Parameter	zend_ast * ast	624:49:16772:16784	74336	1	True				
ANR	74405	ParameterType	zend_ast *		74336	0					
ANR	74406	Identifier	ast		74336	1					
ANR	74407	Parameter	int priority	624:64:16787:16798	74336	2	True				
ANR	74408	ParameterType	int		74336	0					
ANR	74409	Identifier	priority		74336	1					
ANR	74410	Parameter	int indent	624:78:16801:16810	74336	3	True				
ANR	74411	ParameterType	int		74336	0					
ANR	74412	Identifier	indent		74336	1					
ANR	74413	CFGEntryNode	ENTRY		74336		True				
ANR	74414	CFGExitNode	EXIT		74336		True				
ANR	74415	Symbol	str		74336						
ANR	74416	Symbol	ast -> kind		74336						
ANR	74417	Symbol	ast		74336						
ANR	74418	Symbol	* ast		74336						
ANR	74419	Symbol	indent		74336						
ANR	74420	Symbol	ZEND_AST_ZVAL		74336						
ANR	74421	Symbol	IS_STRING		74336						
ANR	74422	Symbol	Z_STR_P		74336						
ANR	74423	Symbol	priority		74336						
ANR	74424	Symbol	zv		74336						
ANR	74425	Symbol	zend_ast_get_zval		74336						
ANR	74426	Symbol	Z_TYPE_P		74336						
ANR	74427	Function	zend_ast_export_ns_name	637:0:17032:17517							
ANR	74428	FunctionDef	"zend_ast_export_ns_name (smart_str * str , zend_ast * ast , int priority , int indent)"		74427	0					
ANR	74429	CompoundStatement		638:0:17125:17517	74427	0					
ANR	74430	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		74427	0					
ANR	74431	Condition	ast -> kind == ZEND_AST_ZVAL	639:5:17132:17157	74427	0	True				
ANR	74432	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		74427	0		==			
ANR	74433	PtrMemberAccess	ast -> kind		74427	0					
ANR	74434	Identifier	ast		74427	0					
ANR	74435	Identifier	kind		74427	1					
ANR	74436	Identifier	ZEND_AST_ZVAL		74427	1					
ANR	74437	CompoundStatement		3:2:38:71	74427	1					
ANR	74438	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	640:2:17164:17197	74427	0	True				
ANR	74439	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		74427	0					
ANR	74440	IdentifierDeclType	zval *		74427	0					
ANR	74441	Identifier	zv		74427	1					
ANR	74442	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		74427	2		=			
ANR	74443	Identifier	zv		74427	0					
ANR	74444	CallExpression	zend_ast_get_zval ( ast )		74427	1					
ANR	74445	Callee	zend_ast_get_zval		74427	0					
ANR	74446	Identifier	zend_ast_get_zval		74427	0					
ANR	74447	ArgumentList	ast		74427	1					
ANR	74448	Argument	ast		74427	0					
ANR	74449	Identifier	ast		74427	0					
ANR	74450	IfStatement	if ( Z_TYPE_P ( zv ) == IS_STRING )		74427	1					
ANR	74451	Condition	Z_TYPE_P ( zv ) == IS_STRING	642:6:17206:17230	74427	0	True				
ANR	74452	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		74427	0		==			
ANR	74453	CallExpression	Z_TYPE_P ( zv )		74427	0					
ANR	74454	Callee	Z_TYPE_P		74427	0					
ANR	74455	Identifier	Z_TYPE_P		74427	0					
ANR	74456	ArgumentList	zv		74427	1					
ANR	74457	Argument	zv		74427	0					
ANR	74458	Identifier	zv		74427	0					
ANR	74459	Identifier	IS_STRING		74427	1					
ANR	74460	CompoundStatement		5:33:107:107	74427	1					
ANR	74461	IfStatement	if ( ast -> attr == ZEND_NAME_FQ )		74427	0					
ANR	74462	Condition	ast -> attr == ZEND_NAME_FQ	643:10:17245:17269	74427	0	True				
ANR	74463	EqualityExpression	ast -> attr == ZEND_NAME_FQ		74427	0		==			
ANR	74464	PtrMemberAccess	ast -> attr		74427	0					
ANR	74465	Identifier	ast		74427	0					
ANR	74466	Identifier	attr		74427	1					
ANR	74467	Identifier	ZEND_NAME_FQ		74427	1					
ANR	74468	CompoundStatement		6:37:146:146	74427	1					
ANR	74469	ExpressionStatement	"smart_str_appendc ( str , '\\\\' )"	644:4:17278:17306	74427	0	True				
ANR	74470	CallExpression	"smart_str_appendc ( str , '\\\\' )"		74427	0					
ANR	74471	Callee	smart_str_appendc		74427	0					
ANR	74472	Identifier	smart_str_appendc		74427	0					
ANR	74473	ArgumentList	str		74427	1					
ANR	74474	Argument	str		74427	0					
ANR	74475	Identifier	str		74427	0					
ANR	74476	Argument	'\\\\'		74427	1					
ANR	74477	PrimaryExpression	'\\\\'		74427	0					
ANR	74478	ElseStatement	else		74427	0					
ANR	74479	IfStatement	if ( ast -> attr == ZEND_NAME_RELATIVE )		74427	0					
ANR	74480	Condition	ast -> attr == ZEND_NAME_RELATIVE	645:17:17325:17355	74427	0	True				
ANR	74481	EqualityExpression	ast -> attr == ZEND_NAME_RELATIVE		74427	0		==			
ANR	74482	PtrMemberAccess	ast -> attr		74427	0					
ANR	74483	Identifier	ast		74427	0					
ANR	74484	Identifier	attr		74427	1					
ANR	74485	Identifier	ZEND_NAME_RELATIVE		74427	1					
ANR	74486	CompoundStatement		8:50:232:232	74427	1					
ANR	74487	ExpressionStatement	"smart_str_appends ( str , ""namespace\\\\"" )"	646:4:17364:17401	74427	0	True				
ANR	74488	CallExpression	"smart_str_appends ( str , ""namespace\\\\"" )"		74427	0					
ANR	74489	Callee	smart_str_appends		74427	0					
ANR	74490	Identifier	smart_str_appends		74427	0					
ANR	74491	ArgumentList	str		74427	1					
ANR	74492	Argument	str		74427	0					
ANR	74493	Identifier	str		74427	0					
ANR	74494	Argument	"""namespace\\\\"""		74427	1					
ANR	74495	PrimaryExpression	"""namespace\\\\"""		74427	0					
ANR	74496	ExpressionStatement	"smart_str_append ( str , Z_STR_P ( zv ) )"	648:3:17414:17448	74427	1	True				
ANR	74497	CallExpression	"smart_str_append ( str , Z_STR_P ( zv ) )"		74427	0					
ANR	74498	Callee	smart_str_append		74427	0					
ANR	74499	Identifier	smart_str_append		74427	0					
ANR	74500	ArgumentList	str		74427	1					
ANR	74501	Argument	str		74427	0					
ANR	74502	Identifier	str		74427	0					
ANR	74503	Argument	Z_STR_P ( zv )		74427	1					
ANR	74504	CallExpression	Z_STR_P ( zv )		74427	0					
ANR	74505	Callee	Z_STR_P		74427	0					
ANR	74506	Identifier	Z_STR_P		74427	0					
ANR	74507	ArgumentList	zv		74427	1					
ANR	74508	Argument	zv		74427	0					
ANR	74509	Identifier	zv		74427	0					
ANR	74510	ReturnStatement	return ;	649:3:17453:17459	74427	2	True				
ANR	74511	ExpressionStatement	"zend_ast_export_ex ( str , ast , priority , indent )"	652:1:17469:17515	74427	1	True				
ANR	74512	CallExpression	"zend_ast_export_ex ( str , ast , priority , indent )"		74427	0					
ANR	74513	Callee	zend_ast_export_ex		74427	0					
ANR	74514	Identifier	zend_ast_export_ex		74427	0					
ANR	74515	ArgumentList	str		74427	1					
ANR	74516	Argument	str		74427	0					
ANR	74517	Identifier	str		74427	0					
ANR	74518	Argument	ast		74427	1					
ANR	74519	Identifier	ast		74427	0					
ANR	74520	Argument	priority		74427	2					
ANR	74521	Identifier	priority		74427	0					
ANR	74522	Argument	indent		74427	3					
ANR	74523	Identifier	indent		74427	0					
ANR	74524	ReturnType	static void		74427	1					
ANR	74525	Identifier	zend_ast_export_ns_name		74427	2					
ANR	74526	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		74427	3					
ANR	74527	Parameter	smart_str * str	637:36:17068:17081	74427	0	True				
ANR	74528	ParameterType	smart_str *		74427	0					
ANR	74529	Identifier	str		74427	1					
ANR	74530	Parameter	zend_ast * ast	637:52:17084:17096	74427	1	True				
ANR	74531	ParameterType	zend_ast *		74427	0					
ANR	74532	Identifier	ast		74427	1					
ANR	74533	Parameter	int priority	637:67:17099:17110	74427	2	True				
ANR	74534	ParameterType	int		74427	0					
ANR	74535	Identifier	priority		74427	1					
ANR	74536	Parameter	int indent	637:81:17113:17122	74427	3	True				
ANR	74537	ParameterType	int		74427	0					
ANR	74538	Identifier	indent		74427	1					
ANR	74539	CFGEntryNode	ENTRY		74427		True				
ANR	74540	CFGExitNode	EXIT		74427		True				
ANR	74541	Symbol	ast -> attr		74427						
ANR	74542	Symbol	ast -> kind		74427						
ANR	74543	Symbol	ast		74427						
ANR	74544	Symbol	indent		74427						
ANR	74545	Symbol	ZEND_NAME_FQ		74427						
ANR	74546	Symbol	priority		74427						
ANR	74547	Symbol	Z_TYPE_P		74427						
ANR	74548	Symbol	str		74427						
ANR	74549	Symbol	* ast		74427						
ANR	74550	Symbol	ZEND_AST_ZVAL		74427						
ANR	74551	Symbol	ZEND_NAME_RELATIVE		74427						
ANR	74552	Symbol	IS_STRING		74427						
ANR	74553	Symbol	Z_STR_P		74427						
ANR	74554	Symbol	zv		74427						
ANR	74555	Symbol	zend_ast_get_zval		74427						
ANR	74556	Function	zend_ast_valid_var_char	655:0:17520:17746							
ANR	74557	FunctionDef	zend_ast_valid_var_char (char ch)		74556	0					
ANR	74558	CompoundStatement		656:0:17564:17746	74556	0					
ANR	74559	IdentifierDeclStatement	unsigned char c = ( unsigned char ) ch ;	657:1:17567:17602	74556	0	True				
ANR	74560	IdentifierDecl	c = ( unsigned char ) ch		74556	0					
ANR	74561	IdentifierDeclType	unsigned char		74556	0					
ANR	74562	Identifier	c		74556	1					
ANR	74563	AssignmentExpression	c = ( unsigned char ) ch		74556	2		=			
ANR	74564	Identifier	c		74556	0					
ANR	74565	CastExpression	( unsigned char ) ch		74556	1					
ANR	74566	CastTarget	unsigned char		74556	0					
ANR	74567	Identifier	ch		74556	1					
ANR	74568	IfStatement	if ( c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' ) )		74556	1					
ANR	74569	Condition	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )	659:5:17610:17715	74556	0	True				
ANR	74570	AndExpression	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74556	0		&&			
ANR	74571	EqualityExpression	c != '_'		74556	0		!=			
ANR	74572	Identifier	c		74556	0					
ANR	74573	PrimaryExpression	'_'		74556	1					
ANR	74574	AndExpression	c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74556	1		&&			
ANR	74575	RelationalExpression	c < 127		74556	0		<			
ANR	74576	Identifier	c		74556	0					
ANR	74577	PrimaryExpression	127		74556	1					
ANR	74578	AndExpression	( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74556	1		&&			
ANR	74579	OrExpression	c < '0' || c > '9'		74556	0		||			
ANR	74580	RelationalExpression	c < '0'		74556	0		<			
ANR	74581	Identifier	c		74556	0					
ANR	74582	PrimaryExpression	'0'		74556	1					
ANR	74583	RelationalExpression	c > '9'		74556	1		>			
ANR	74584	Identifier	c		74556	0					
ANR	74585	PrimaryExpression	'9'		74556	1					
ANR	74586	AndExpression	( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74556	1		&&			
ANR	74587	OrExpression	c < 'A' || c > 'Z'		74556	0		||			
ANR	74588	RelationalExpression	c < 'A'		74556	0		<			
ANR	74589	Identifier	c		74556	0					
ANR	74590	PrimaryExpression	'A'		74556	1					
ANR	74591	RelationalExpression	c > 'Z'		74556	1		>			
ANR	74592	Identifier	c		74556	0					
ANR	74593	PrimaryExpression	'Z'		74556	1					
ANR	74594	OrExpression	c < 'a' || c > 'z'		74556	1		||			
ANR	74595	RelationalExpression	c < 'a'		74556	0		<			
ANR	74596	Identifier	c		74556	0					
ANR	74597	PrimaryExpression	'a'		74556	1					
ANR	74598	RelationalExpression	c > 'z'		74556	1		>			
ANR	74599	Identifier	c		74556	0					
ANR	74600	PrimaryExpression	'z'		74556	1					
ANR	74601	CompoundStatement		7:27:153:153	74556	1					
ANR	74602	ReturnStatement	return 0 ;	663:2:17722:17730	74556	0	True				
ANR	74603	PrimaryExpression	0		74556	0					
ANR	74604	ReturnStatement	return 1 ;	665:1:17736:17744	74556	2	True				
ANR	74605	PrimaryExpression	1		74556	0					
ANR	74606	ReturnType	static int		74556	1					
ANR	74607	Identifier	zend_ast_valid_var_char		74556	2					
ANR	74608	ParameterList	char ch		74556	3					
ANR	74609	Parameter	char ch	655:35:17555:17561	74556	0	True				
ANR	74610	ParameterType	char		74556	0					
ANR	74611	Identifier	ch		74556	1					
ANR	74612	CFGEntryNode	ENTRY		74556		True				
ANR	74613	CFGExitNode	EXIT		74556		True				
ANR	74614	Symbol	c		74556						
ANR	74615	Symbol	ch		74556						
ANR	74616	Function	zend_ast_valid_var_name	668:0:17749:18208							
ANR	74617	FunctionDef	"zend_ast_valid_var_name (const char * s , size_t len)"		74616	0					
ANR	74618	CompoundStatement		669:0:17811:18208	74616	0					
ANR	74619	IdentifierDeclStatement	unsigned char c ;	670:1:17814:17829	74616	0	True				
ANR	74620	IdentifierDecl	c		74616	0					
ANR	74621	IdentifierDeclType	unsigned char		74616	0					
ANR	74622	Identifier	c		74616	1					
ANR	74623	IdentifierDeclStatement	size_t i ;	671:1:17832:17840	74616	1	True				
ANR	74624	IdentifierDecl	i		74616	0					
ANR	74625	IdentifierDeclType	size_t		74616	0					
ANR	74626	Identifier	i		74616	1					
ANR	74627	IfStatement	if ( len == 0 )		74616	2					
ANR	74628	Condition	len == 0	673:5:17848:17855	74616	0	True				
ANR	74629	EqualityExpression	len == 0		74616	0		==			
ANR	74630	Identifier	len		74616	0					
ANR	74631	PrimaryExpression	0		74616	1					
ANR	74632	CompoundStatement		5:15:46:46	74616	1					
ANR	74633	ReturnStatement	return 0 ;	674:2:17862:17870	74616	0	True				
ANR	74634	PrimaryExpression	0		74616	0					
ANR	74635	ExpressionStatement	c = ( unsigned char ) s [ 0 ]	676:1:17876:17899	74616	3	True				
ANR	74636	AssignmentExpression	c = ( unsigned char ) s [ 0 ]		74616	0		=			
ANR	74637	Identifier	c		74616	0					
ANR	74638	CastExpression	( unsigned char ) s [ 0 ]		74616	1					
ANR	74639	CastTarget	unsigned char		74616	0					
ANR	74640	ArrayIndexing	s [ 0 ]		74616	1					
ANR	74641	Identifier	s		74616	0					
ANR	74642	PrimaryExpression	0		74616	1					
ANR	74643	IfStatement	if ( c != '_' && c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' ) )		74616	4					
ANR	74644	Condition	c != '_' && c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )	677:5:17906:17982	74616	0	True				
ANR	74645	AndExpression	c != '_' && c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74616	0		&&			
ANR	74646	EqualityExpression	c != '_'		74616	0		!=			
ANR	74647	Identifier	c		74616	0					
ANR	74648	PrimaryExpression	'_'		74616	1					
ANR	74649	AndExpression	c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74616	1		&&			
ANR	74650	RelationalExpression	c < 127		74616	0		<			
ANR	74651	Identifier	c		74616	0					
ANR	74652	PrimaryExpression	127		74616	1					
ANR	74653	AndExpression	( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74616	1		&&			
ANR	74654	OrExpression	c < 'A' || c > 'Z'		74616	0		||			
ANR	74655	RelationalExpression	c < 'A'		74616	0		<			
ANR	74656	Identifier	c		74616	0					
ANR	74657	PrimaryExpression	'A'		74616	1					
ANR	74658	RelationalExpression	c > 'Z'		74616	1		>			
ANR	74659	Identifier	c		74616	0					
ANR	74660	PrimaryExpression	'Z'		74616	1					
ANR	74661	OrExpression	c < 'a' || c > 'z'		74616	1		||			
ANR	74662	RelationalExpression	c < 'a'		74616	0		<			
ANR	74663	Identifier	c		74616	0					
ANR	74664	PrimaryExpression	'a'		74616	1					
ANR	74665	RelationalExpression	c > 'z'		74616	1		>			
ANR	74666	Identifier	c		74616	0					
ANR	74667	PrimaryExpression	'z'		74616	1					
ANR	74668	CompoundStatement		11:27:173:173	74616	1					
ANR	74669	ReturnStatement	return 0 ;	680:2:17989:17997	74616	0	True				
ANR	74670	PrimaryExpression	0		74616	0					
ANR	74671	ForStatement	for ( i = 1 ; i < len ; i ++ )		74616	5					
ANR	74672	ForInit	i = 1 ;	682:6:18008:18013	74616	0	True				
ANR	74673	AssignmentExpression	i = 1		74616	0		=			
ANR	74674	Identifier	i		74616	0					
ANR	74675	PrimaryExpression	1		74616	1					
ANR	74676	Condition	i < len	682:13:18015:18021	74616	1	True				
ANR	74677	RelationalExpression	i < len		74616	0		<			
ANR	74678	Identifier	i		74616	0					
ANR	74679	Identifier	len		74616	1					
ANR	74680	PostIncDecOperationExpression	i ++	682:22:18024:18026	74616	2	True				
ANR	74681	Identifier	i		74616	0					
ANR	74682	IncDec	++		74616	1					
ANR	74683	CompoundStatement		14:27:217:217	74616	3					
ANR	74684	ExpressionStatement	c = ( unsigned char ) s [ i ]	683:2:18033:18056	74616	0	True				
ANR	74685	AssignmentExpression	c = ( unsigned char ) s [ i ]		74616	0		=			
ANR	74686	Identifier	c		74616	0					
ANR	74687	CastExpression	( unsigned char ) s [ i ]		74616	1					
ANR	74688	CastTarget	unsigned char		74616	0					
ANR	74689	ArrayIndexing	s [ i ]		74616	1					
ANR	74690	Identifier	s		74616	0					
ANR	74691	Identifier	i		74616	1					
ANR	74692	IfStatement	if ( c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' ) )		74616	1					
ANR	74693	Condition	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )	684:6:18064:18172	74616	0	True				
ANR	74694	AndExpression	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74616	0		&&			
ANR	74695	EqualityExpression	c != '_'		74616	0		!=			
ANR	74696	Identifier	c		74616	0					
ANR	74697	PrimaryExpression	'_'		74616	1					
ANR	74698	AndExpression	c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74616	1		&&			
ANR	74699	RelationalExpression	c < 127		74616	0		<			
ANR	74700	Identifier	c		74616	0					
ANR	74701	PrimaryExpression	127		74616	1					
ANR	74702	AndExpression	( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74616	1		&&			
ANR	74703	OrExpression	c < '0' || c > '9'		74616	0		||			
ANR	74704	RelationalExpression	c < '0'		74616	0		<			
ANR	74705	Identifier	c		74616	0					
ANR	74706	PrimaryExpression	'0'		74616	1					
ANR	74707	RelationalExpression	c > '9'		74616	1		>			
ANR	74708	Identifier	c		74616	0					
ANR	74709	PrimaryExpression	'9'		74616	1					
ANR	74710	AndExpression	( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		74616	1		&&			
ANR	74711	OrExpression	c < 'A' || c > 'Z'		74616	0		||			
ANR	74712	RelationalExpression	c < 'A'		74616	0		<			
ANR	74713	Identifier	c		74616	0					
ANR	74714	PrimaryExpression	'A'		74616	1					
ANR	74715	RelationalExpression	c > 'Z'		74616	1		>			
ANR	74716	Identifier	c		74616	0					
ANR	74717	PrimaryExpression	'Z'		74616	1					
ANR	74718	OrExpression	c < 'a' || c > 'z'		74616	1		||			
ANR	74719	RelationalExpression	c < 'a'		74616	0		<			
ANR	74720	Identifier	c		74616	0					
ANR	74721	PrimaryExpression	'a'		74616	1					
ANR	74722	RelationalExpression	c > 'z'		74616	1		>			
ANR	74723	Identifier	c		74616	0					
ANR	74724	PrimaryExpression	'z'		74616	1					
ANR	74725	CompoundStatement		19:28:363:363	74616	1					
ANR	74726	ReturnStatement	return 0 ;	688:3:18180:18188	74616	0	True				
ANR	74727	PrimaryExpression	0		74616	0					
ANR	74728	ReturnStatement	return 1 ;	691:1:18198:18206	74616	6	True				
ANR	74729	PrimaryExpression	1		74616	0					
ANR	74730	ReturnType	static int		74616	1					
ANR	74731	Identifier	zend_ast_valid_var_name		74616	2					
ANR	74732	ParameterList	"const char * s , size_t len"		74616	3					
ANR	74733	Parameter	const char * s	668:35:17784:17796	74616	0	True				
ANR	74734	ParameterType	const char *		74616	0					
ANR	74735	Identifier	s		74616	1					
ANR	74736	Parameter	size_t len	668:50:17799:17808	74616	1	True				
ANR	74737	ParameterType	size_t		74616	0					
ANR	74738	Identifier	len		74616	1					
ANR	74739	CFGEntryNode	ENTRY		74616		True				
ANR	74740	CFGExitNode	EXIT		74616		True				
ANR	74741	Symbol	s		74616						
ANR	74742	Symbol	c		74616						
ANR	74743	Symbol	* i		74616						
ANR	74744	Symbol	len		74616						
ANR	74745	Symbol	i		74616						
ANR	74746	Symbol	* s		74616						
ANR	74747	Function	zend_ast_export_var	694:0:18211:18729							
ANR	74748	FunctionDef	"zend_ast_export_var (smart_str * str , zend_ast * ast , int priority , int indent)"		74747	0					
ANR	74749	CompoundStatement		695:0:18300:18729	74747	0					
ANR	74750	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		74747	0					
ANR	74751	Condition	ast -> kind == ZEND_AST_ZVAL	696:5:18307:18332	74747	0	True				
ANR	74752	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		74747	0		==			
ANR	74753	PtrMemberAccess	ast -> kind		74747	0					
ANR	74754	Identifier	ast		74747	0					
ANR	74755	Identifier	kind		74747	1					
ANR	74756	Identifier	ZEND_AST_ZVAL		74747	1					
ANR	74757	CompoundStatement		3:2:38:71	74747	1					
ANR	74758	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	697:2:18339:18372	74747	0	True				
ANR	74759	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		74747	0					
ANR	74760	IdentifierDeclType	zval *		74747	0					
ANR	74761	Identifier	zv		74747	1					
ANR	74762	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		74747	2		=			
ANR	74763	Identifier	zv		74747	0					
ANR	74764	CallExpression	zend_ast_get_zval ( ast )		74747	1					
ANR	74765	Callee	zend_ast_get_zval		74747	0					
ANR	74766	Identifier	zend_ast_get_zval		74747	0					
ANR	74767	ArgumentList	ast		74747	1					
ANR	74768	Argument	ast		74747	0					
ANR	74769	Identifier	ast		74747	0					
ANR	74770	IfStatement	"if ( Z_TYPE_P ( zv ) == IS_STRING && zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) ) )"		74747	1					
ANR	74771	Condition	"Z_TYPE_P ( zv ) == IS_STRING && zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"	698:6:18380:18469	74747	0	True				
ANR	74772	AndExpression	"Z_TYPE_P ( zv ) == IS_STRING && zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"		74747	0		&&			
ANR	74773	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		74747	0		==			
ANR	74774	CallExpression	Z_TYPE_P ( zv )		74747	0					
ANR	74775	Callee	Z_TYPE_P		74747	0					
ANR	74776	Identifier	Z_TYPE_P		74747	0					
ANR	74777	ArgumentList	zv		74747	1					
ANR	74778	Argument	zv		74747	0					
ANR	74779	Identifier	zv		74747	0					
ANR	74780	Identifier	IS_STRING		74747	1					
ANR	74781	CallExpression	"zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"		74747	1					
ANR	74782	Callee	zend_ast_valid_var_name		74747	0					
ANR	74783	Identifier	zend_ast_valid_var_name		74747	0					
ANR	74784	ArgumentList	Z_STRVAL_P ( zv )		74747	1					
ANR	74785	Argument	Z_STRVAL_P ( zv )		74747	0					
ANR	74786	CallExpression	Z_STRVAL_P ( zv )		74747	0					
ANR	74787	Callee	Z_STRVAL_P		74747	0					
ANR	74788	Identifier	Z_STRVAL_P		74747	0					
ANR	74789	ArgumentList	zv		74747	1					
ANR	74790	Argument	zv		74747	0					
ANR	74791	Identifier	zv		74747	0					
ANR	74792	Argument	Z_STRLEN_P ( zv )		74747	1					
ANR	74793	CallExpression	Z_STRLEN_P ( zv )		74747	0					
ANR	74794	Callee	Z_STRLEN_P		74747	0					
ANR	74795	Identifier	Z_STRLEN_P		74747	0					
ANR	74796	ArgumentList	zv		74747	1					
ANR	74797	Argument	zv		74747	0					
ANR	74798	Identifier	zv		74747	0					
ANR	74799	CompoundStatement		5:63:171:171	74747	1					
ANR	74800	ExpressionStatement	"smart_str_append ( str , Z_STR_P ( zv ) )"	700:3:18477:18511	74747	0	True				
ANR	74801	CallExpression	"smart_str_append ( str , Z_STR_P ( zv ) )"		74747	0					
ANR	74802	Callee	smart_str_append		74747	0					
ANR	74803	Identifier	smart_str_append		74747	0					
ANR	74804	ArgumentList	str		74747	1					
ANR	74805	Argument	str		74747	0					
ANR	74806	Identifier	str		74747	0					
ANR	74807	Argument	Z_STR_P ( zv )		74747	1					
ANR	74808	CallExpression	Z_STR_P ( zv )		74747	0					
ANR	74809	Callee	Z_STR_P		74747	0					
ANR	74810	Identifier	Z_STR_P		74747	0					
ANR	74811	ArgumentList	zv		74747	1					
ANR	74812	Argument	zv		74747	0					
ANR	74813	Identifier	zv		74747	0					
ANR	74814	ReturnStatement	return ;	701:3:18516:18522	74747	1	True				
ANR	74815	ElseStatement	else		74747	0					
ANR	74816	IfStatement	if ( ast -> kind == ZEND_AST_VAR )		74747	0					
ANR	74817	Condition	ast -> kind == ZEND_AST_VAR	703:12:18540:18564	74747	0	True				
ANR	74818	EqualityExpression	ast -> kind == ZEND_AST_VAR		74747	0		==			
ANR	74819	PtrMemberAccess	ast -> kind		74747	0					
ANR	74820	Identifier	ast		74747	0					
ANR	74821	Identifier	kind		74747	1					
ANR	74822	Identifier	ZEND_AST_VAR		74747	1					
ANR	74823	CompoundStatement		9:39:266:266	74747	1					
ANR	74824	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	704:2:18571:18610	74747	0	True				
ANR	74825	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		74747	0					
ANR	74826	Callee	zend_ast_export_ex		74747	0					
ANR	74827	Identifier	zend_ast_export_ex		74747	0					
ANR	74828	ArgumentList	str		74747	1					
ANR	74829	Argument	str		74747	0					
ANR	74830	Identifier	str		74747	0					
ANR	74831	Argument	ast		74747	1					
ANR	74832	Identifier	ast		74747	0					
ANR	74833	Argument	0		74747	2					
ANR	74834	PrimaryExpression	0		74747	0					
ANR	74835	Argument	indent		74747	3					
ANR	74836	Identifier	indent		74747	0					
ANR	74837	ReturnStatement	return ;	705:2:18614:18620	74747	1	True				
ANR	74838	ExpressionStatement	"smart_str_appendc ( str , '{' )"	707:1:18626:18653	74747	1	True				
ANR	74839	CallExpression	"smart_str_appendc ( str , '{' )"		74747	0					
ANR	74840	Callee	smart_str_appendc		74747	0					
ANR	74841	Identifier	smart_str_appendc		74747	0					
ANR	74842	ArgumentList	str		74747	1					
ANR	74843	Argument	str		74747	0					
ANR	74844	Identifier	str		74747	0					
ANR	74845	Argument	'{'		74747	1					
ANR	74846	PrimaryExpression	'{'		74747	0					
ANR	74847	ExpressionStatement	"zend_ast_export_name ( str , ast , 0 , indent )"	708:1:18656:18697	74747	2	True				
ANR	74848	CallExpression	"zend_ast_export_name ( str , ast , 0 , indent )"		74747	0					
ANR	74849	Callee	zend_ast_export_name		74747	0					
ANR	74850	Identifier	zend_ast_export_name		74747	0					
ANR	74851	ArgumentList	str		74747	1					
ANR	74852	Argument	str		74747	0					
ANR	74853	Identifier	str		74747	0					
ANR	74854	Argument	ast		74747	1					
ANR	74855	Identifier	ast		74747	0					
ANR	74856	Argument	0		74747	2					
ANR	74857	PrimaryExpression	0		74747	0					
ANR	74858	Argument	indent		74747	3					
ANR	74859	Identifier	indent		74747	0					
ANR	74860	ExpressionStatement	"smart_str_appendc ( str , '}' )"	709:1:18700:18727	74747	3	True				
ANR	74861	CallExpression	"smart_str_appendc ( str , '}' )"		74747	0					
ANR	74862	Callee	smart_str_appendc		74747	0					
ANR	74863	Identifier	smart_str_appendc		74747	0					
ANR	74864	ArgumentList	str		74747	1					
ANR	74865	Argument	str		74747	0					
ANR	74866	Identifier	str		74747	0					
ANR	74867	Argument	'}'		74747	1					
ANR	74868	PrimaryExpression	'}'		74747	0					
ANR	74869	ReturnType	static void		74747	1					
ANR	74870	Identifier	zend_ast_export_var		74747	2					
ANR	74871	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		74747	3					
ANR	74872	Parameter	smart_str * str	694:32:18243:18256	74747	0	True				
ANR	74873	ParameterType	smart_str *		74747	0					
ANR	74874	Identifier	str		74747	1					
ANR	74875	Parameter	zend_ast * ast	694:48:18259:18271	74747	1	True				
ANR	74876	ParameterType	zend_ast *		74747	0					
ANR	74877	Identifier	ast		74747	1					
ANR	74878	Parameter	int priority	694:63:18274:18285	74747	2	True				
ANR	74879	ParameterType	int		74747	0					
ANR	74880	Identifier	priority		74747	1					
ANR	74881	Parameter	int indent	694:77:18288:18297	74747	3	True				
ANR	74882	ParameterType	int		74747	0					
ANR	74883	Identifier	indent		74747	1					
ANR	74884	CFGEntryNode	ENTRY		74747		True				
ANR	74885	CFGExitNode	EXIT		74747		True				
ANR	74886	Symbol	ast -> kind		74747						
ANR	74887	Symbol	ast		74747						
ANR	74888	Symbol	indent		74747						
ANR	74889	Symbol	priority		74747						
ANR	74890	Symbol	Z_TYPE_P		74747						
ANR	74891	Symbol	Z_STRVAL_P		74747						
ANR	74892	Symbol	str		74747						
ANR	74893	Symbol	* ast		74747						
ANR	74894	Symbol	ZEND_AST_VAR		74747						
ANR	74895	Symbol	ZEND_AST_ZVAL		74747						
ANR	74896	Symbol	Z_STRLEN_P		74747						
ANR	74897	Symbol	IS_STRING		74747						
ANR	74898	Symbol	Z_STR_P		74747						
ANR	74899	Symbol	zend_ast_get_zval		74747						
ANR	74900	Symbol	zv		74747						
ANR	74901	Symbol	zend_ast_valid_var_name		74747						
ANR	74902	Function	zend_ast_export_list	712:0:18732:19030							
ANR	74903	FunctionDef	"zend_ast_export_list (smart_str * str , zend_ast_list * list , int separator , int priority , int indent)"		74902	0					
ANR	74904	CompoundStatement		713:0:18843:19030	74902	0					
ANR	74905	IdentifierDeclStatement	uint32_t i = 0 ;	714:1:18846:18860	74902	0	True				
ANR	74906	IdentifierDecl	i = 0		74902	0					
ANR	74907	IdentifierDeclType	uint32_t		74902	0					
ANR	74908	Identifier	i		74902	1					
ANR	74909	AssignmentExpression	i = 0		74902	2		=			
ANR	74910	Identifier	i		74902	0					
ANR	74911	PrimaryExpression	0		74902	1					
ANR	74912	WhileStatement	while ( i < list -> children )		74902	1					
ANR	74913	Condition	i < list -> children	716:8:18871:18888	74902	0	True				
ANR	74914	RelationalExpression	i < list -> children		74902	0		<			
ANR	74915	Identifier	i		74902	0					
ANR	74916	PtrMemberAccess	list -> children		74902	1					
ANR	74917	Identifier	list		74902	0					
ANR	74918	Identifier	children		74902	1					
ANR	74919	CompoundStatement		4:28:47:47	74902	1					
ANR	74920	IfStatement	if ( i != 0 && separator )		74902	0					
ANR	74921	Condition	i != 0 && separator	717:6:18899:18917	74902	0	True				
ANR	74922	AndExpression	i != 0 && separator		74902	0		&&			
ANR	74923	EqualityExpression	i != 0		74902	0		!=			
ANR	74924	Identifier	i		74902	0					
ANR	74925	PrimaryExpression	0		74902	1					
ANR	74926	Identifier	separator		74902	1					
ANR	74927	CompoundStatement		5:27:76:76	74902	1					
ANR	74928	ExpressionStatement	"smart_str_appends ( str , "", "" )"	718:3:18925:18953	74902	0	True				
ANR	74929	CallExpression	"smart_str_appends ( str , "", "" )"		74902	0					
ANR	74930	Callee	smart_str_appends		74902	0					
ANR	74931	Identifier	smart_str_appends		74902	0					
ANR	74932	ArgumentList	str		74902	1					
ANR	74933	Argument	str		74902	0					
ANR	74934	Identifier	str		74902	0					
ANR	74935	Argument	""", """		74902	1					
ANR	74936	PrimaryExpression	""", """		74902	0					
ANR	74937	ExpressionStatement	"zend_ast_export_ex ( str , list -> child [ i ] , priority , indent )"	720:2:18961:19018	74902	1	True				
ANR	74938	CallExpression	"zend_ast_export_ex ( str , list -> child [ i ] , priority , indent )"		74902	0					
ANR	74939	Callee	zend_ast_export_ex		74902	0					
ANR	74940	Identifier	zend_ast_export_ex		74902	0					
ANR	74941	ArgumentList	str		74902	1					
ANR	74942	Argument	str		74902	0					
ANR	74943	Identifier	str		74902	0					
ANR	74944	Argument	list -> child [ i ]		74902	1					
ANR	74945	ArrayIndexing	list -> child [ i ]		74902	0					
ANR	74946	PtrMemberAccess	list -> child		74902	0					
ANR	74947	Identifier	list		74902	0					
ANR	74948	Identifier	child		74902	1					
ANR	74949	Identifier	i		74902	1					
ANR	74950	Argument	priority		74902	2					
ANR	74951	Identifier	priority		74902	0					
ANR	74952	Argument	indent		74902	3					
ANR	74953	Identifier	indent		74902	0					
ANR	74954	ExpressionStatement	i ++	721:2:19022:19025	74902	2	True				
ANR	74955	PostIncDecOperationExpression	i ++		74902	0					
ANR	74956	Identifier	i		74902	0					
ANR	74957	IncDec	++		74902	1					
ANR	74958	ReturnType	static void		74902	1					
ANR	74959	Identifier	zend_ast_export_list		74902	2					
ANR	74960	ParameterList	"smart_str * str , zend_ast_list * list , int separator , int priority , int indent"		74902	3					
ANR	74961	Parameter	smart_str * str	712:33:18765:18778	74902	0	True				
ANR	74962	ParameterType	smart_str *		74902	0					
ANR	74963	Identifier	str		74902	1					
ANR	74964	Parameter	zend_ast_list * list	712:49:18781:18799	74902	1	True				
ANR	74965	ParameterType	zend_ast_list *		74902	0					
ANR	74966	Identifier	list		74902	1					
ANR	74967	Parameter	int separator	712:70:18802:18814	74902	2	True				
ANR	74968	ParameterType	int		74902	0					
ANR	74969	Identifier	separator		74902	1					
ANR	74970	Parameter	int priority	712:85:18817:18828	74902	3	True				
ANR	74971	ParameterType	int		74902	0					
ANR	74972	Identifier	priority		74902	1					
ANR	74973	Parameter	int indent	712:99:18831:18840	74902	4	True				
ANR	74974	ParameterType	int		74902	0					
ANR	74975	Identifier	indent		74902	1					
ANR	74976	CFGEntryNode	ENTRY		74902		True				
ANR	74977	CFGExitNode	EXIT		74902		True				
ANR	74978	Symbol	str		74902						
ANR	74979	Symbol	* * list		74902						
ANR	74980	Symbol	* i		74902						
ANR	74981	Symbol	list -> child		74902						
ANR	74982	Symbol	indent		74902						
ANR	74983	Symbol	* list		74902						
ANR	74984	Symbol	i		74902						
ANR	74985	Symbol	* list -> child		74902						
ANR	74986	Symbol	list		74902						
ANR	74987	Symbol	priority		74902						
ANR	74988	Symbol	separator		74902						
ANR	74989	Symbol	list -> children		74902						
ANR	74990	Function	zend_ast_export_encaps_list	725:0:19033:19901							
ANR	74991	FunctionDef	"zend_ast_export_encaps_list (smart_str * str , char quote , zend_ast_list * list , int indent)"		74990	0					
ANR	74992	CompoundStatement		726:0:19134:19901	74990	0					
ANR	74993	IdentifierDeclStatement	uint32_t i = 0 ;	727:1:19137:19151	74990	0	True				
ANR	74994	IdentifierDecl	i = 0		74990	0					
ANR	74995	IdentifierDeclType	uint32_t		74990	0					
ANR	74996	Identifier	i		74990	1					
ANR	74997	AssignmentExpression	i = 0		74990	2		=			
ANR	74998	Identifier	i		74990	0					
ANR	74999	PrimaryExpression	0		74990	1					
ANR	75000	IdentifierDeclStatement	zend_ast * ast ;	728:1:19154:19167	74990	1	True				
ANR	75001	IdentifierDecl	* ast		74990	0					
ANR	75002	IdentifierDeclType	zend_ast *		74990	0					
ANR	75003	Identifier	ast		74990	1					
ANR	75004	WhileStatement	while ( i < list -> children )		74990	2					
ANR	75005	Condition	i < list -> children	730:8:19178:19195	74990	0	True				
ANR	75006	RelationalExpression	i < list -> children		74990	0		<			
ANR	75007	Identifier	i		74990	0					
ANR	75008	PtrMemberAccess	list -> children		74990	1					
ANR	75009	Identifier	list		74990	0					
ANR	75010	Identifier	children		74990	1					
ANR	75011	CompoundStatement		5:28:63:63	74990	1					
ANR	75012	ExpressionStatement	ast = list -> child [ i ]	731:2:19202:19222	74990	0	True				
ANR	75013	AssignmentExpression	ast = list -> child [ i ]		74990	0		=			
ANR	75014	Identifier	ast		74990	0					
ANR	75015	ArrayIndexing	list -> child [ i ]		74990	1					
ANR	75016	PtrMemberAccess	list -> child		74990	0					
ANR	75017	Identifier	list		74990	0					
ANR	75018	Identifier	child		74990	1					
ANR	75019	Identifier	i		74990	1					
ANR	75020	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		74990	1					
ANR	75021	Condition	ast -> kind == ZEND_AST_ZVAL	732:6:19230:19255	74990	0	True				
ANR	75022	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		74990	0		==			
ANR	75023	PtrMemberAccess	ast -> kind		74990	0					
ANR	75024	Identifier	ast		74990	0					
ANR	75025	Identifier	kind		74990	1					
ANR	75026	Identifier	ZEND_AST_ZVAL		74990	1					
ANR	75027	CompoundStatement		8:3:128:161	74990	1					
ANR	75028	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	733:3:19263:19296	74990	0	True				
ANR	75029	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		74990	0					
ANR	75030	IdentifierDeclType	zval *		74990	0					
ANR	75031	Identifier	zv		74990	1					
ANR	75032	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		74990	2		=			
ANR	75033	Identifier	zv		74990	0					
ANR	75034	CallExpression	zend_ast_get_zval ( ast )		74990	1					
ANR	75035	Callee	zend_ast_get_zval		74990	0					
ANR	75036	Identifier	zend_ast_get_zval		74990	0					
ANR	75037	ArgumentList	ast		74990	1					
ANR	75038	Argument	ast		74990	0					
ANR	75039	Identifier	ast		74990	0					
ANR	75040	ExpressionStatement	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )	735:3:19302:19340	74990	1	True				
ANR	75041	CallExpression	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )		74990	0					
ANR	75042	Callee	ZEND_ASSERT		74990	0					
ANR	75043	Identifier	ZEND_ASSERT		74990	0					
ANR	75044	ArgumentList	Z_TYPE_P ( zv ) == IS_STRING		74990	1					
ANR	75045	Argument	Z_TYPE_P ( zv ) == IS_STRING		74990	0					
ANR	75046	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		74990	0		==			
ANR	75047	CallExpression	Z_TYPE_P ( zv )		74990	0					
ANR	75048	Callee	Z_TYPE_P		74990	0					
ANR	75049	Identifier	Z_TYPE_P		74990	0					
ANR	75050	ArgumentList	zv		74990	1					
ANR	75051	Argument	zv		74990	0					
ANR	75052	Identifier	zv		74990	0					
ANR	75053	Identifier	IS_STRING		74990	1					
ANR	75054	ExpressionStatement	"zend_ast_export_qstr ( str , quote , Z_STR_P ( zv ) )"	736:3:19345:19390	74990	2	True				
ANR	75055	CallExpression	"zend_ast_export_qstr ( str , quote , Z_STR_P ( zv ) )"		74990	0					
ANR	75056	Callee	zend_ast_export_qstr		74990	0					
ANR	75057	Identifier	zend_ast_export_qstr		74990	0					
ANR	75058	ArgumentList	str		74990	1					
ANR	75059	Argument	str		74990	0					
ANR	75060	Identifier	str		74990	0					
ANR	75061	Argument	quote		74990	1					
ANR	75062	Identifier	quote		74990	0					
ANR	75063	Argument	Z_STR_P ( zv )		74990	2					
ANR	75064	CallExpression	Z_STR_P ( zv )		74990	0					
ANR	75065	Callee	Z_STR_P		74990	0					
ANR	75066	Identifier	Z_STR_P		74990	0					
ANR	75067	ArgumentList	zv		74990	1					
ANR	75068	Argument	zv		74990	0					
ANR	75069	Identifier	zv		74990	0					
ANR	75070	ElseStatement	else		74990	0					
ANR	75071	IfStatement	if ( ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) ) )		74990	0					
ANR	75072	Condition	ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) )	737:13:19405:19719	74990	0	True				
ANR	75073	AndExpression	ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) )		74990	0		&&			
ANR	75074	EqualityExpression	ast -> kind == ZEND_AST_VAR		74990	0		==			
ANR	75075	PtrMemberAccess	ast -> kind		74990	0					
ANR	75076	Identifier	ast		74990	0					
ANR	75077	Identifier	kind		74990	1					
ANR	75078	Identifier	ZEND_AST_VAR		74990	1					
ANR	75079	AndExpression	ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) )		74990	1		&&			
ANR	75080	EqualityExpression	ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		74990	0		==			
ANR	75081	PtrMemberAccess	ast -> child [ 0 ] -> kind		74990	0					
ANR	75082	ArrayIndexing	ast -> child [ 0 ]		74990	0					
ANR	75083	PtrMemberAccess	ast -> child		74990	0					
ANR	75084	Identifier	ast		74990	0					
ANR	75085	Identifier	child		74990	1					
ANR	75086	PrimaryExpression	0		74990	1					
ANR	75087	Identifier	kind		74990	1					
ANR	75088	Identifier	ZEND_AST_ZVAL		74990	1					
ANR	75089	OrExpression	i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		74990	1		||			
ANR	75090	EqualityExpression	i + 1 == list -> children		74990	0		==			
ANR	75091	AdditiveExpression	i + 1		74990	0		+			
ANR	75092	Identifier	i		74990	0					
ANR	75093	PrimaryExpression	1		74990	1					
ANR	75094	PtrMemberAccess	list -> children		74990	1					
ANR	75095	Identifier	list		74990	0					
ANR	75096	Identifier	children		74990	1					
ANR	75097	OrExpression	list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		74990	1		||			
ANR	75098	EqualityExpression	list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL		74990	0		!=			
ANR	75099	PtrMemberAccess	list -> child [ i + 1 ] -> kind		74990	0					
ANR	75100	ArrayIndexing	list -> child [ i + 1 ]		74990	0					
ANR	75101	PtrMemberAccess	list -> child		74990	0					
ANR	75102	Identifier	list		74990	0					
ANR	75103	Identifier	child		74990	1					
ANR	75104	AdditiveExpression	i + 1		74990	1		+			
ANR	75105	Identifier	i		74990	0					
ANR	75106	PrimaryExpression	1		74990	1					
ANR	75107	Identifier	kind		74990	1					
ANR	75108	Identifier	ZEND_AST_ZVAL		74990	1					
ANR	75109	UnaryOperationExpression	! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		74990	1					
ANR	75110	UnaryOperator	!		74990	0					
ANR	75111	CallExpression	zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		74990	1					
ANR	75112	Callee	zend_ast_valid_var_char		74990	0					
ANR	75113	Identifier	zend_ast_valid_var_char		74990	0					
ANR	75114	ArgumentList	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		74990	1					
ANR	75115	Argument	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		74990	0					
ANR	75116	UnaryOperationExpression	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		74990	0					
ANR	75117	UnaryOperator	*		74990	0					
ANR	75118	CallExpression	Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		74990	1					
ANR	75119	Callee	Z_STRVAL_P		74990	0					
ANR	75120	Identifier	Z_STRVAL_P		74990	0					
ANR	75121	ArgumentList	zend_ast_get_zval ( list -> child [ i + 1 ] )		74990	1					
ANR	75122	Argument	zend_ast_get_zval ( list -> child [ i + 1 ] )		74990	0					
ANR	75123	CallExpression	zend_ast_get_zval ( list -> child [ i + 1 ] )		74990	0					
ANR	75124	Callee	zend_ast_get_zval		74990	0					
ANR	75125	Identifier	zend_ast_get_zval		74990	0					
ANR	75126	ArgumentList	list -> child [ i + 1 ]		74990	1					
ANR	75127	Argument	list -> child [ i + 1 ]		74990	0					
ANR	75128	ArrayIndexing	list -> child [ i + 1 ]		74990	0					
ANR	75129	PtrMemberAccess	list -> child		74990	0					
ANR	75130	Identifier	list		74990	0					
ANR	75131	Identifier	child		74990	1					
ANR	75132	AdditiveExpression	i + 1		74990	1		+			
ANR	75133	Identifier	i		74990	0					
ANR	75134	PrimaryExpression	1		74990	1					
ANR	75135	CompoundStatement		18:64:587:587	74990	1					
ANR	75136	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	744:3:19727:19766	74990	0	True				
ANR	75137	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		74990	0					
ANR	75138	Callee	zend_ast_export_ex		74990	0					
ANR	75139	Identifier	zend_ast_export_ex		74990	0					
ANR	75140	ArgumentList	str		74990	1					
ANR	75141	Argument	str		74990	0					
ANR	75142	Identifier	str		74990	0					
ANR	75143	Argument	ast		74990	1					
ANR	75144	Identifier	ast		74990	0					
ANR	75145	Argument	0		74990	2					
ANR	75146	PrimaryExpression	0		74990	0					
ANR	75147	Argument	indent		74990	3					
ANR	75148	Identifier	indent		74990	0					
ANR	75149	ElseStatement	else		74990	0					
ANR	75150	CompoundStatement		20:9:642:642	74990	0					
ANR	75151	ExpressionStatement	"smart_str_appendc ( str , '{' )"	746:3:19782:19809	74990	0	True				
ANR	75152	CallExpression	"smart_str_appendc ( str , '{' )"		74990	0					
ANR	75153	Callee	smart_str_appendc		74990	0					
ANR	75154	Identifier	smart_str_appendc		74990	0					
ANR	75155	ArgumentList	str		74990	1					
ANR	75156	Argument	str		74990	0					
ANR	75157	Identifier	str		74990	0					
ANR	75158	Argument	'{'		74990	1					
ANR	75159	PrimaryExpression	'{'		74990	0					
ANR	75160	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	747:3:19814:19853	74990	1	True				
ANR	75161	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		74990	0					
ANR	75162	Callee	zend_ast_export_ex		74990	0					
ANR	75163	Identifier	zend_ast_export_ex		74990	0					
ANR	75164	ArgumentList	str		74990	1					
ANR	75165	Argument	str		74990	0					
ANR	75166	Identifier	str		74990	0					
ANR	75167	Argument	ast		74990	1					
ANR	75168	Identifier	ast		74990	0					
ANR	75169	Argument	0		74990	2					
ANR	75170	PrimaryExpression	0		74990	0					
ANR	75171	Argument	indent		74990	3					
ANR	75172	Identifier	indent		74990	0					
ANR	75173	ExpressionStatement	"smart_str_appendc ( str , '}' )"	748:3:19858:19885	74990	2	True				
ANR	75174	CallExpression	"smart_str_appendc ( str , '}' )"		74990	0					
ANR	75175	Callee	smart_str_appendc		74990	0					
ANR	75176	Identifier	smart_str_appendc		74990	0					
ANR	75177	ArgumentList	str		74990	1					
ANR	75178	Argument	str		74990	0					
ANR	75179	Identifier	str		74990	0					
ANR	75180	Argument	'}'		74990	1					
ANR	75181	PrimaryExpression	'}'		74990	0					
ANR	75182	ExpressionStatement	i ++	750:2:19893:19896	74990	2	True				
ANR	75183	PostIncDecOperationExpression	i ++		74990	0					
ANR	75184	Identifier	i		74990	0					
ANR	75185	IncDec	++		74990	1					
ANR	75186	ReturnType	static void		74990	1					
ANR	75187	Identifier	zend_ast_export_encaps_list		74990	2					
ANR	75188	ParameterList	"smart_str * str , char quote , zend_ast_list * list , int indent"		74990	3					
ANR	75189	Parameter	smart_str * str	725:40:19073:19086	74990	0	True				
ANR	75190	ParameterType	smart_str *		74990	0					
ANR	75191	Identifier	str		74990	1					
ANR	75192	Parameter	char quote	725:56:19089:19098	74990	1	True				
ANR	75193	ParameterType	char		74990	0					
ANR	75194	Identifier	quote		74990	1					
ANR	75195	Parameter	zend_ast_list * list	725:68:19101:19119	74990	2	True				
ANR	75196	ParameterType	zend_ast_list *		74990	0					
ANR	75197	Identifier	list		74990	1					
ANR	75198	Parameter	int indent	725:89:19122:19131	74990	3	True				
ANR	75199	ParameterType	int		74990	0					
ANR	75200	Identifier	indent		74990	1					
ANR	75201	CFGEntryNode	ENTRY		74990		True				
ANR	75202	CFGExitNode	EXIT		74990		True				
ANR	75203	Symbol	* * * ast		74990						
ANR	75204	Symbol	ast -> kind		74990						
ANR	75205	Symbol	ast		74990						
ANR	75206	Symbol	indent		74990						
ANR	75207	Symbol	ast -> child [ 0 ] -> kind		74990						
ANR	75208	Symbol	quote		74990						
ANR	75209	Symbol	* * list		74990						
ANR	75210	Symbol	* ast		74990						
ANR	75211	Symbol	ZEND_AST_VAR		74990						
ANR	75212	Symbol	zend_ast_valid_var_char		74990						
ANR	75213	Symbol	* * ast		74990						
ANR	75214	Symbol	ZEND_AST_ZVAL		74990						
ANR	75215	Symbol	IS_STRING		74990						
ANR	75216	Symbol	* Z_STRVAL_P		74990						
ANR	75217	Symbol	* * list -> child		74990						
ANR	75218	Symbol	* * ast -> child		74990						
ANR	75219	Symbol	* * i		74990						
ANR	75220	Symbol	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		74990						
ANR	75221	Symbol	list -> child		74990						
ANR	75222	Symbol	list -> child [ i + 1 ] -> kind		74990						
ANR	75223	Symbol	i		74990						
ANR	75224	Symbol	list		74990						
ANR	75225	Symbol	Z_TYPE_P		74990						
ANR	75226	Symbol	Z_STRVAL_P		74990						
ANR	75227	Symbol	str		74990						
ANR	75228	Symbol	* i		74990						
ANR	75229	Symbol	* * * list		74990						
ANR	75230	Symbol	* list		74990						
ANR	75231	Symbol	* list -> child		74990						
ANR	75232	Symbol	* ast -> child		74990						
ANR	75233	Symbol	Z_STR_P		74990						
ANR	75234	Symbol	zend_ast_get_zval		74990						
ANR	75235	Symbol	zv		74990						
ANR	75236	Symbol	ast -> child		74990						
ANR	75237	Symbol	list -> children		74990						
ANR	75238	Function	zend_ast_export_name_list	754:0:19904:20160							
ANR	75239	FunctionDef	"zend_ast_export_name_list (smart_str * str , zend_ast_list * list , int indent)"		75238	0					
ANR	75240	CompoundStatement		755:0:19991:20160	75238	0					
ANR	75241	IdentifierDeclStatement	uint32_t i = 0 ;	756:1:19994:20008	75238	0	True				
ANR	75242	IdentifierDecl	i = 0		75238	0					
ANR	75243	IdentifierDeclType	uint32_t		75238	0					
ANR	75244	Identifier	i		75238	1					
ANR	75245	AssignmentExpression	i = 0		75238	2		=			
ANR	75246	Identifier	i		75238	0					
ANR	75247	PrimaryExpression	0		75238	1					
ANR	75248	WhileStatement	while ( i < list -> children )		75238	1					
ANR	75249	Condition	i < list -> children	758:8:20019:20036	75238	0	True				
ANR	75250	RelationalExpression	i < list -> children		75238	0		<			
ANR	75251	Identifier	i		75238	0					
ANR	75252	PtrMemberAccess	list -> children		75238	1					
ANR	75253	Identifier	list		75238	0					
ANR	75254	Identifier	children		75238	1					
ANR	75255	CompoundStatement		4:28:47:47	75238	1					
ANR	75256	IfStatement	if ( i != 0 )		75238	0					
ANR	75257	Condition	i != 0	759:6:20047:20052	75238	0	True				
ANR	75258	EqualityExpression	i != 0		75238	0		!=			
ANR	75259	Identifier	i		75238	0					
ANR	75260	PrimaryExpression	0		75238	1					
ANR	75261	CompoundStatement		5:14:63:63	75238	1					
ANR	75262	ExpressionStatement	"smart_str_appends ( str , "", "" )"	760:3:20060:20088	75238	0	True				
ANR	75263	CallExpression	"smart_str_appends ( str , "", "" )"		75238	0					
ANR	75264	Callee	smart_str_appends		75238	0					
ANR	75265	Identifier	smart_str_appends		75238	0					
ANR	75266	ArgumentList	str		75238	1					
ANR	75267	Argument	str		75238	0					
ANR	75268	Identifier	str		75238	0					
ANR	75269	Argument	""", """		75238	1					
ANR	75270	PrimaryExpression	""", """		75238	0					
ANR	75271	ExpressionStatement	"zend_ast_export_name ( str , list -> child [ i ] , 0 , indent )"	762:2:20096:20148	75238	1	True				
ANR	75272	CallExpression	"zend_ast_export_name ( str , list -> child [ i ] , 0 , indent )"		75238	0					
ANR	75273	Callee	zend_ast_export_name		75238	0					
ANR	75274	Identifier	zend_ast_export_name		75238	0					
ANR	75275	ArgumentList	str		75238	1					
ANR	75276	Argument	str		75238	0					
ANR	75277	Identifier	str		75238	0					
ANR	75278	Argument	list -> child [ i ]		75238	1					
ANR	75279	ArrayIndexing	list -> child [ i ]		75238	0					
ANR	75280	PtrMemberAccess	list -> child		75238	0					
ANR	75281	Identifier	list		75238	0					
ANR	75282	Identifier	child		75238	1					
ANR	75283	Identifier	i		75238	1					
ANR	75284	Argument	0		75238	2					
ANR	75285	PrimaryExpression	0		75238	0					
ANR	75286	Argument	indent		75238	3					
ANR	75287	Identifier	indent		75238	0					
ANR	75288	ExpressionStatement	i ++	763:2:20152:20155	75238	2	True				
ANR	75289	PostIncDecOperationExpression	i ++		75238	0					
ANR	75290	Identifier	i		75238	0					
ANR	75291	IncDec	++		75238	1					
ANR	75292	ReturnType	static void		75238	1					
ANR	75293	Identifier	zend_ast_export_name_list		75238	2					
ANR	75294	ParameterList	"smart_str * str , zend_ast_list * list , int indent"		75238	3					
ANR	75295	Parameter	smart_str * str	754:38:19942:19955	75238	0	True				
ANR	75296	ParameterType	smart_str *		75238	0					
ANR	75297	Identifier	str		75238	1					
ANR	75298	Parameter	zend_ast_list * list	754:54:19958:19976	75238	1	True				
ANR	75299	ParameterType	zend_ast_list *		75238	0					
ANR	75300	Identifier	list		75238	1					
ANR	75301	Parameter	int indent	754:75:19979:19988	75238	2	True				
ANR	75302	ParameterType	int		75238	0					
ANR	75303	Identifier	indent		75238	1					
ANR	75304	CFGEntryNode	ENTRY		75238		True				
ANR	75305	CFGExitNode	EXIT		75238		True				
ANR	75306	Symbol	str		75238						
ANR	75307	Symbol	* i		75238						
ANR	75308	Symbol	* * list		75238						
ANR	75309	Symbol	list -> child		75238						
ANR	75310	Symbol	indent		75238						
ANR	75311	Symbol	* list		75238						
ANR	75312	Symbol	i		75238						
ANR	75313	Symbol	* list -> child		75238						
ANR	75314	Symbol	list		75238						
ANR	75315	Symbol	list -> children		75238						
ANR	75316	Function	zend_ast_export_var_list	767:0:20163:20516							
ANR	75317	FunctionDef	"zend_ast_export_var_list (smart_str * str , zend_ast_list * list , int indent)"		75316	0					
ANR	75318	CompoundStatement		768:0:20249:20516	75316	0					
ANR	75319	IdentifierDeclStatement	uint32_t i = 0 ;	769:1:20252:20266	75316	0	True				
ANR	75320	IdentifierDecl	i = 0		75316	0					
ANR	75321	IdentifierDeclType	uint32_t		75316	0					
ANR	75322	Identifier	i		75316	1					
ANR	75323	AssignmentExpression	i = 0		75316	2		=			
ANR	75324	Identifier	i		75316	0					
ANR	75325	PrimaryExpression	0		75316	1					
ANR	75326	WhileStatement	while ( i < list -> children )		75316	1					
ANR	75327	Condition	i < list -> children	771:8:20277:20294	75316	0	True				
ANR	75328	RelationalExpression	i < list -> children		75316	0		<			
ANR	75329	Identifier	i		75316	0					
ANR	75330	PtrMemberAccess	list -> children		75316	1					
ANR	75331	Identifier	list		75316	0					
ANR	75332	Identifier	children		75316	1					
ANR	75333	CompoundStatement		4:28:47:47	75316	1					
ANR	75334	IfStatement	if ( i != 0 )		75316	0					
ANR	75335	Condition	i != 0	772:6:20305:20310	75316	0	True				
ANR	75336	EqualityExpression	i != 0		75316	0		!=			
ANR	75337	Identifier	i		75316	0					
ANR	75338	PrimaryExpression	0		75316	1					
ANR	75339	CompoundStatement		5:14:63:63	75316	1					
ANR	75340	ExpressionStatement	"smart_str_appends ( str , "", "" )"	773:3:20318:20346	75316	0	True				
ANR	75341	CallExpression	"smart_str_appends ( str , "", "" )"		75316	0					
ANR	75342	Callee	smart_str_appends		75316	0					
ANR	75343	Identifier	smart_str_appends		75316	0					
ANR	75344	ArgumentList	str		75316	1					
ANR	75345	Argument	str		75316	0					
ANR	75346	Identifier	str		75316	0					
ANR	75347	Argument	""", """		75316	1					
ANR	75348	PrimaryExpression	""", """		75316	0					
ANR	75349	IfStatement	if ( list -> child [ i ] -> attr )		75316	1					
ANR	75350	Condition	list -> child [ i ] -> attr	775:6:20358:20377	75316	0	True				
ANR	75351	PtrMemberAccess	list -> child [ i ] -> attr		75316	0					
ANR	75352	ArrayIndexing	list -> child [ i ]		75316	0					
ANR	75353	PtrMemberAccess	list -> child		75316	0					
ANR	75354	Identifier	list		75316	0					
ANR	75355	Identifier	child		75316	1					
ANR	75356	Identifier	i		75316	1					
ANR	75357	Identifier	attr		75316	1					
ANR	75358	CompoundStatement		8:28:130:130	75316	1					
ANR	75359	ExpressionStatement	"smart_str_appendc ( str , '&' )"	776:3:20385:20412	75316	0	True				
ANR	75360	CallExpression	"smart_str_appendc ( str , '&' )"		75316	0					
ANR	75361	Callee	smart_str_appendc		75316	0					
ANR	75362	Identifier	smart_str_appendc		75316	0					
ANR	75363	ArgumentList	str		75316	1					
ANR	75364	Argument	str		75316	0					
ANR	75365	Identifier	str		75316	0					
ANR	75366	Argument	'&'		75316	1					
ANR	75367	PrimaryExpression	'&'		75316	0					
ANR	75368	ExpressionStatement	"smart_str_appendc ( str , '$' )"	778:2:20420:20447	75316	2	True				
ANR	75369	CallExpression	"smart_str_appendc ( str , '$' )"		75316	0					
ANR	75370	Callee	smart_str_appendc		75316	0					
ANR	75371	Identifier	smart_str_appendc		75316	0					
ANR	75372	ArgumentList	str		75316	1					
ANR	75373	Argument	str		75316	0					
ANR	75374	Identifier	str		75316	0					
ANR	75375	Argument	'$'		75316	1					
ANR	75376	PrimaryExpression	'$'		75316	0					
ANR	75377	ExpressionStatement	"zend_ast_export_name ( str , list -> child [ i ] , 20 , indent )"	779:2:20451:20504	75316	3	True				
ANR	75378	CallExpression	"zend_ast_export_name ( str , list -> child [ i ] , 20 , indent )"		75316	0					
ANR	75379	Callee	zend_ast_export_name		75316	0					
ANR	75380	Identifier	zend_ast_export_name		75316	0					
ANR	75381	ArgumentList	str		75316	1					
ANR	75382	Argument	str		75316	0					
ANR	75383	Identifier	str		75316	0					
ANR	75384	Argument	list -> child [ i ]		75316	1					
ANR	75385	ArrayIndexing	list -> child [ i ]		75316	0					
ANR	75386	PtrMemberAccess	list -> child		75316	0					
ANR	75387	Identifier	list		75316	0					
ANR	75388	Identifier	child		75316	1					
ANR	75389	Identifier	i		75316	1					
ANR	75390	Argument	20		75316	2					
ANR	75391	PrimaryExpression	20		75316	0					
ANR	75392	Argument	indent		75316	3					
ANR	75393	Identifier	indent		75316	0					
ANR	75394	ExpressionStatement	i ++	780:2:20508:20511	75316	4	True				
ANR	75395	PostIncDecOperationExpression	i ++		75316	0					
ANR	75396	Identifier	i		75316	0					
ANR	75397	IncDec	++		75316	1					
ANR	75398	ReturnType	static void		75316	1					
ANR	75399	Identifier	zend_ast_export_var_list		75316	2					
ANR	75400	ParameterList	"smart_str * str , zend_ast_list * list , int indent"		75316	3					
ANR	75401	Parameter	smart_str * str	767:37:20200:20213	75316	0	True				
ANR	75402	ParameterType	smart_str *		75316	0					
ANR	75403	Identifier	str		75316	1					
ANR	75404	Parameter	zend_ast_list * list	767:53:20216:20234	75316	1	True				
ANR	75405	ParameterType	zend_ast_list *		75316	0					
ANR	75406	Identifier	list		75316	1					
ANR	75407	Parameter	int indent	767:74:20237:20246	75316	2	True				
ANR	75408	ParameterType	int		75316	0					
ANR	75409	Identifier	indent		75316	1					
ANR	75410	CFGEntryNode	ENTRY		75316		True				
ANR	75411	CFGExitNode	EXIT		75316		True				
ANR	75412	Symbol	* * i		75316						
ANR	75413	Symbol	list -> child		75316						
ANR	75414	Symbol	indent		75316						
ANR	75415	Symbol	i		75316						
ANR	75416	Symbol	list		75316						
ANR	75417	Symbol	list -> child [ i ] -> attr		75316						
ANR	75418	Symbol	str		75316						
ANR	75419	Symbol	* * list		75316						
ANR	75420	Symbol	* i		75316						
ANR	75421	Symbol	* * * list		75316						
ANR	75422	Symbol	* list		75316						
ANR	75423	Symbol	* list -> child		75316						
ANR	75424	Symbol	* * list -> child		75316						
ANR	75425	Symbol	list -> children		75316						
ANR	75426	Function	zend_ast_export_stmt	784:0:20519:21431							
ANR	75427	FunctionDef	"zend_ast_export_stmt (smart_str * str , zend_ast * ast , int indent)"		75426	0					
ANR	75428	CompoundStatement		785:0:20595:21431	75426	0					
ANR	75429	IfStatement	if ( ! ast )		75426	0					
ANR	75430	Condition	! ast	786:5:20602:20605	75426	0	True				
ANR	75431	UnaryOperationExpression	! ast		75426	0					
ANR	75432	UnaryOperator	!		75426	0					
ANR	75433	Identifier	ast		75426	1					
ANR	75434	CompoundStatement		2:11:12:12	75426	1					
ANR	75435	ReturnStatement	return ;	787:2:20612:20618	75426	0	True				
ANR	75436	IfStatement	if ( ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS )		75426	1					
ANR	75437	Condition	ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS	790:5:20629:20707	75426	0	True				
ANR	75438	OrExpression	ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS		75426	0		||			
ANR	75439	EqualityExpression	ast -> kind == ZEND_AST_STMT_LIST		75426	0		==			
ANR	75440	PtrMemberAccess	ast -> kind		75426	0					
ANR	75441	Identifier	ast		75426	0					
ANR	75442	Identifier	kind		75426	1					
ANR	75443	Identifier	ZEND_AST_STMT_LIST		75426	1					
ANR	75444	EqualityExpression	ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS		75426	1		==			
ANR	75445	PtrMemberAccess	ast -> kind		75426	0					
ANR	75446	Identifier	ast		75426	0					
ANR	75447	Identifier	kind		75426	1					
ANR	75448	Identifier	ZEND_AST_TRAIT_ADAPTATIONS		75426	1					
ANR	75449	CompoundStatement		9:2:163:177	75426	1					
ANR	75450	IdentifierDeclStatement	zend_ast_list * list = ( zend_ast_list * ) ast ;	792:2:20714:20755	75426	0	True				
ANR	75451	IdentifierDecl	* list = ( zend_ast_list * ) ast		75426	0					
ANR	75452	IdentifierDeclType	zend_ast_list *		75426	0					
ANR	75453	Identifier	list		75426	1					
ANR	75454	AssignmentExpression	* list = ( zend_ast_list * ) ast		75426	2		=			
ANR	75455	Identifier	list		75426	0					
ANR	75456	CastExpression	( zend_ast_list * ) ast		75426	1					
ANR	75457	CastTarget	zend_ast_list *		75426	0					
ANR	75458	Identifier	ast		75426	1					
ANR	75459	IdentifierDeclStatement	uint32_t i = 0 ;	793:2:20759:20773	75426	1	True				
ANR	75460	IdentifierDecl	i = 0		75426	0					
ANR	75461	IdentifierDeclType	uint32_t		75426	0					
ANR	75462	Identifier	i		75426	1					
ANR	75463	AssignmentExpression	i = 0		75426	2		=			
ANR	75464	Identifier	i		75426	0					
ANR	75465	PrimaryExpression	0		75426	1					
ANR	75466	WhileStatement	while ( i < list -> children )		75426	2					
ANR	75467	Condition	i < list -> children	795:9:20785:20802	75426	0	True				
ANR	75468	RelationalExpression	i < list -> children		75426	0		<			
ANR	75469	Identifier	i		75426	0					
ANR	75470	PtrMemberAccess	list -> children		75426	1					
ANR	75471	Identifier	list		75426	0					
ANR	75472	Identifier	children		75426	1					
ANR	75473	CompoundStatement		11:29:209:209	75426	1					
ANR	75474	ExpressionStatement	ast = list -> child [ i ]	796:3:20810:20830	75426	0	True				
ANR	75475	AssignmentExpression	ast = list -> child [ i ]		75426	0		=			
ANR	75476	Identifier	ast		75426	0					
ANR	75477	ArrayIndexing	list -> child [ i ]		75426	1					
ANR	75478	PtrMemberAccess	list -> child		75426	0					
ANR	75479	Identifier	list		75426	0					
ANR	75480	Identifier	child		75426	1					
ANR	75481	Identifier	i		75426	1					
ANR	75482	ExpressionStatement	"zend_ast_export_stmt ( str , ast , indent )"	797:3:20835:20873	75426	1	True				
ANR	75483	CallExpression	"zend_ast_export_stmt ( str , ast , indent )"		75426	0					
ANR	75484	Callee	zend_ast_export_stmt		75426	0					
ANR	75485	Identifier	zend_ast_export_stmt		75426	0					
ANR	75486	ArgumentList	str		75426	1					
ANR	75487	Argument	str		75426	0					
ANR	75488	Identifier	str		75426	0					
ANR	75489	Argument	ast		75426	1					
ANR	75490	Identifier	ast		75426	0					
ANR	75491	Argument	indent		75426	2					
ANR	75492	Identifier	indent		75426	0					
ANR	75493	ExpressionStatement	i ++	798:3:20878:20881	75426	2	True				
ANR	75494	PostIncDecOperationExpression	i ++		75426	0					
ANR	75495	Identifier	i		75426	0					
ANR	75496	IncDec	++		75426	1					
ANR	75497	ElseStatement	else		75426	0					
ANR	75498	CompoundStatement		16:8:299:299	75426	0					
ANR	75499	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	801:2:20899:20934	75426	0	True				
ANR	75500	CallExpression	"zend_ast_export_indent ( str , indent )"		75426	0					
ANR	75501	Callee	zend_ast_export_indent		75426	0					
ANR	75502	Identifier	zend_ast_export_indent		75426	0					
ANR	75503	ArgumentList	str		75426	1					
ANR	75504	Argument	str		75426	0					
ANR	75505	Identifier	str		75426	0					
ANR	75506	Argument	indent		75426	1					
ANR	75507	Identifier	indent		75426	0					
ANR	75508	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	802:2:20938:20977	75426	1	True				
ANR	75509	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		75426	0					
ANR	75510	Callee	zend_ast_export_ex		75426	0					
ANR	75511	Identifier	zend_ast_export_ex		75426	0					
ANR	75512	ArgumentList	str		75426	1					
ANR	75513	Argument	str		75426	0					
ANR	75514	Identifier	str		75426	0					
ANR	75515	Argument	ast		75426	1					
ANR	75516	Identifier	ast		75426	0					
ANR	75517	Argument	0		75426	2					
ANR	75518	PrimaryExpression	0		75426	0					
ANR	75519	Argument	indent		75426	3					
ANR	75520	Identifier	indent		75426	0					
ANR	75521	SwitchStatement	switch ( ast -> kind )		75426	2					
ANR	75522	Condition	ast -> kind	803:10:20989:20997	75426	0	True				
ANR	75523	PtrMemberAccess	ast -> kind		75426	0					
ANR	75524	Identifier	ast		75426	0					
ANR	75525	Identifier	kind		75426	1					
ANR	75526	CompoundStatement		19:21:404:404	75426	1					
ANR	75527	Label	case ZEND_AST_LABEL :	804:3:21005:21024	75426	0	True				
ANR	75528	Identifier	ZEND_AST_LABEL		75426	0					
ANR	75529	Label	case ZEND_AST_IF :	805:3:21029:21045	75426	1	True				
ANR	75530	Identifier	ZEND_AST_IF		75426	0					
ANR	75531	Label	case ZEND_AST_SWITCH :	806:3:21050:21070	75426	2	True				
ANR	75532	Identifier	ZEND_AST_SWITCH		75426	0					
ANR	75533	Label	case ZEND_AST_WHILE :	807:3:21075:21094	75426	3	True				
ANR	75534	Identifier	ZEND_AST_WHILE		75426	0					
ANR	75535	Label	case ZEND_AST_TRY :	808:3:21099:21116	75426	4	True				
ANR	75536	Identifier	ZEND_AST_TRY		75426	0					
ANR	75537	Label	case ZEND_AST_FOR :	809:3:21121:21138	75426	5	True				
ANR	75538	Identifier	ZEND_AST_FOR		75426	0					
ANR	75539	Label	case ZEND_AST_FOREACH :	810:3:21143:21164	75426	6	True				
ANR	75540	Identifier	ZEND_AST_FOREACH		75426	0					
ANR	75541	Label	case ZEND_AST_FUNC_DECL :	811:3:21169:21192	75426	7	True				
ANR	75542	Identifier	ZEND_AST_FUNC_DECL		75426	0					
ANR	75543	Label	case ZEND_AST_METHOD :	812:3:21197:21217	75426	8	True				
ANR	75544	Identifier	ZEND_AST_METHOD		75426	0					
ANR	75545	Label	case ZEND_AST_CLASS :	813:3:21222:21241	75426	9	True				
ANR	75546	Identifier	ZEND_AST_CLASS		75426	0					
ANR	75547	Label	case ZEND_AST_USE_TRAIT :	814:3:21246:21269	75426	10	True				
ANR	75548	Identifier	ZEND_AST_USE_TRAIT		75426	0					
ANR	75549	Label	case ZEND_AST_NAMESPACE :	815:3:21274:21297	75426	11	True				
ANR	75550	Identifier	ZEND_AST_NAMESPACE		75426	0					
ANR	75551	Label	case ZEND_AST_DECLARE :	816:3:21302:21323	75426	12	True				
ANR	75552	Identifier	ZEND_AST_DECLARE		75426	0					
ANR	75553	BreakStatement	break ;	817:4:21329:21334	75426	13	True				
ANR	75554	Label	default :	818:3:21339:21346	75426	14	True				
ANR	75555	Identifier	default		75426	0					
ANR	75556	ExpressionStatement	"smart_str_appendc ( str , ';' )"	819:4:21352:21379	75426	15	True				
ANR	75557	CallExpression	"smart_str_appendc ( str , ';' )"		75426	0					
ANR	75558	Callee	smart_str_appendc		75426	0					
ANR	75559	Identifier	smart_str_appendc		75426	0					
ANR	75560	ArgumentList	str		75426	1					
ANR	75561	Argument	str		75426	0					
ANR	75562	Identifier	str		75426	0					
ANR	75563	Argument	';'		75426	1					
ANR	75564	PrimaryExpression	';'		75426	0					
ANR	75565	BreakStatement	break ;	820:4:21385:21390	75426	16	True				
ANR	75566	ExpressionStatement	"smart_str_appendc ( str , '\\n' )"	822:2:21398:21426	75426	3	True				
ANR	75567	CallExpression	"smart_str_appendc ( str , '\\n' )"		75426	0					
ANR	75568	Callee	smart_str_appendc		75426	0					
ANR	75569	Identifier	smart_str_appendc		75426	0					
ANR	75570	ArgumentList	str		75426	1					
ANR	75571	Argument	str		75426	0					
ANR	75572	Identifier	str		75426	0					
ANR	75573	Argument	'\\n'		75426	1					
ANR	75574	PrimaryExpression	'\\n'		75426	0					
ANR	75575	ReturnType	static void		75426	1					
ANR	75576	Identifier	zend_ast_export_stmt		75426	2					
ANR	75577	ParameterList	"smart_str * str , zend_ast * ast , int indent"		75426	3					
ANR	75578	Parameter	smart_str * str	784:33:20552:20565	75426	0	True				
ANR	75579	ParameterType	smart_str *		75426	0					
ANR	75580	Identifier	str		75426	1					
ANR	75581	Parameter	zend_ast * ast	784:49:20568:20580	75426	1	True				
ANR	75582	ParameterType	zend_ast *		75426	0					
ANR	75583	Identifier	ast		75426	1					
ANR	75584	Parameter	int indent	784:64:20583:20592	75426	2	True				
ANR	75585	ParameterType	int		75426	0					
ANR	75586	Identifier	indent		75426	1					
ANR	75587	CFGEntryNode	ENTRY		75426		True				
ANR	75588	CFGExitNode	EXIT		75426		True				
ANR	75589	Symbol	ast -> kind		75426						
ANR	75590	Symbol	ast		75426						
ANR	75591	Symbol	list -> child		75426						
ANR	75592	Symbol	indent		75426						
ANR	75593	Symbol	i		75426						
ANR	75594	Symbol	list		75426						
ANR	75595	Symbol	str		75426						
ANR	75596	Symbol	ZEND_AST_STMT_LIST		75426						
ANR	75597	Symbol	* ast		75426						
ANR	75598	Symbol	* * list		75426						
ANR	75599	Symbol	* i		75426						
ANR	75600	Symbol	* list		75426						
ANR	75601	Symbol	* list -> child		75426						
ANR	75602	Symbol	list -> children		75426						
ANR	75603	Symbol	ZEND_AST_TRAIT_ADAPTATIONS		75426						
ANR	75604	Function	zend_ast_export_if_stmt	826:0:21434:22381							
ANR	75605	FunctionDef	"zend_ast_export_if_stmt (smart_str * str , zend_ast_list * list , int indent)"		75604	0					
ANR	75606	CompoundStatement		827:0:21519:22381	75604	0					
ANR	75607	IdentifierDeclStatement	uint32_t i ;	828:1:21522:21532	75604	0	True				
ANR	75608	IdentifierDecl	i		75604	0					
ANR	75609	IdentifierDeclType	uint32_t		75604	0					
ANR	75610	Identifier	i		75604	1					
ANR	75611	IdentifierDeclStatement	zend_ast * ast ;	829:1:21535:21548	75604	1	True				
ANR	75612	IdentifierDecl	* ast		75604	0					
ANR	75613	IdentifierDeclType	zend_ast *		75604	0					
ANR	75614	Identifier	ast		75604	1					
ANR	75615	Label	tail_call :	831:0:21551:21560	75604	2	True				
ANR	75616	Identifier	tail_call		75604	0					
ANR	75617	ExpressionStatement	i = 0	832:1:21563:21568	75604	3	True				
ANR	75618	AssignmentExpression	i = 0		75604	0		=			
ANR	75619	Identifier	i		75604	0					
ANR	75620	PrimaryExpression	0		75604	1					
ANR	75621	WhileStatement	while ( i < list -> children )		75604	4					
ANR	75622	Condition	i < list -> children	833:8:21578:21595	75604	0	True				
ANR	75623	RelationalExpression	i < list -> children		75604	0		<			
ANR	75624	Identifier	i		75604	0					
ANR	75625	PtrMemberAccess	list -> children		75604	1					
ANR	75626	Identifier	list		75604	0					
ANR	75627	Identifier	children		75604	1					
ANR	75628	CompoundStatement		7:28:78:78	75604	1					
ANR	75629	ExpressionStatement	ast = list -> child [ i ]	834:2:21602:21622	75604	0	True				
ANR	75630	AssignmentExpression	ast = list -> child [ i ]		75604	0		=			
ANR	75631	Identifier	ast		75604	0					
ANR	75632	ArrayIndexing	list -> child [ i ]		75604	1					
ANR	75633	PtrMemberAccess	list -> child		75604	0					
ANR	75634	Identifier	list		75604	0					
ANR	75635	Identifier	child		75604	1					
ANR	75636	Identifier	i		75604	1					
ANR	75637	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_IF_ELEM )	835:2:21626:21668	75604	1	True				
ANR	75638	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_IF_ELEM )		75604	0					
ANR	75639	Callee	ZEND_ASSERT		75604	0					
ANR	75640	Identifier	ZEND_ASSERT		75604	0					
ANR	75641	ArgumentList	ast -> kind == ZEND_AST_IF_ELEM		75604	1					
ANR	75642	Argument	ast -> kind == ZEND_AST_IF_ELEM		75604	0					
ANR	75643	EqualityExpression	ast -> kind == ZEND_AST_IF_ELEM		75604	0		==			
ANR	75644	PtrMemberAccess	ast -> kind		75604	0					
ANR	75645	Identifier	ast		75604	0					
ANR	75646	Identifier	kind		75604	1					
ANR	75647	Identifier	ZEND_AST_IF_ELEM		75604	1					
ANR	75648	IfStatement	if ( ast -> child [ 0 ] )		75604	2					
ANR	75649	Condition	ast -> child [ 0 ]	836:6:21676:21688	75604	0	True				
ANR	75650	ArrayIndexing	ast -> child [ 0 ]		75604	0					
ANR	75651	PtrMemberAccess	ast -> child		75604	0					
ANR	75652	Identifier	ast		75604	0					
ANR	75653	Identifier	child		75604	1					
ANR	75654	PrimaryExpression	0		75604	1					
ANR	75655	CompoundStatement		10:21:171:171	75604	1					
ANR	75656	IfStatement	if ( i == 0 )		75604	0					
ANR	75657	Condition	i == 0	837:7:21700:21705	75604	0	True				
ANR	75658	EqualityExpression	i == 0		75604	0		==			
ANR	75659	Identifier	i		75604	0					
ANR	75660	PrimaryExpression	0		75604	1					
ANR	75661	CompoundStatement		11:15:188:188	75604	1					
ANR	75662	ExpressionStatement	"smart_str_appends ( str , ""if ("" )"	838:4:21714:21744	75604	0	True				
ANR	75663	CallExpression	"smart_str_appends ( str , ""if ("" )"		75604	0					
ANR	75664	Callee	smart_str_appends		75604	0					
ANR	75665	Identifier	smart_str_appends		75604	0					
ANR	75666	ArgumentList	str		75604	1					
ANR	75667	Argument	str		75604	0					
ANR	75668	Identifier	str		75604	0					
ANR	75669	Argument	"""if ("""		75604	1					
ANR	75670	PrimaryExpression	"""if ("""		75604	0					
ANR	75671	ElseStatement	else		75604	0					
ANR	75672	CompoundStatement		13:10:236:236	75604	0					
ANR	75673	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	840:4:21762:21797	75604	0	True				
ANR	75674	CallExpression	"zend_ast_export_indent ( str , indent )"		75604	0					
ANR	75675	Callee	zend_ast_export_indent		75604	0					
ANR	75676	Identifier	zend_ast_export_indent		75604	0					
ANR	75677	ArgumentList	str		75604	1					
ANR	75678	Argument	str		75604	0					
ANR	75679	Identifier	str		75604	0					
ANR	75680	Argument	indent		75604	1					
ANR	75681	Identifier	indent		75604	0					
ANR	75682	ExpressionStatement	"smart_str_appends ( str , ""} elseif ("" )"	841:4:21803:21839	75604	1	True				
ANR	75683	CallExpression	"smart_str_appends ( str , ""} elseif ("" )"		75604	0					
ANR	75684	Callee	smart_str_appends		75604	0					
ANR	75685	Identifier	smart_str_appends		75604	0					
ANR	75686	ArgumentList	str		75604	1					
ANR	75687	Argument	str		75604	0					
ANR	75688	Identifier	str		75604	0					
ANR	75689	Argument	"""} elseif ("""		75604	1					
ANR	75690	PrimaryExpression	"""} elseif ("""		75604	0					
ANR	75691	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	843:3:21849:21898	75604	1	True				
ANR	75692	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		75604	0					
ANR	75693	Callee	zend_ast_export_ex		75604	0					
ANR	75694	Identifier	zend_ast_export_ex		75604	0					
ANR	75695	ArgumentList	str		75604	1					
ANR	75696	Argument	str		75604	0					
ANR	75697	Identifier	str		75604	0					
ANR	75698	Argument	ast -> child [ 0 ]		75604	1					
ANR	75699	ArrayIndexing	ast -> child [ 0 ]		75604	0					
ANR	75700	PtrMemberAccess	ast -> child		75604	0					
ANR	75701	Identifier	ast		75604	0					
ANR	75702	Identifier	child		75604	1					
ANR	75703	PrimaryExpression	0		75604	1					
ANR	75704	Argument	0		75604	2					
ANR	75705	PrimaryExpression	0		75604	0					
ANR	75706	Argument	indent		75604	3					
ANR	75707	Identifier	indent		75604	0					
ANR	75708	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	844:3:21903:21934	75604	2	True				
ANR	75709	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		75604	0					
ANR	75710	Callee	smart_str_appends		75604	0					
ANR	75711	Identifier	smart_str_appends		75604	0					
ANR	75712	ArgumentList	str		75604	1					
ANR	75713	Argument	str		75604	0					
ANR	75714	Identifier	str		75604	0					
ANR	75715	Argument	""") {\\n"""		75604	1					
ANR	75716	PrimaryExpression	""") {\\n"""		75604	0					
ANR	75717	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	845:3:21939:21991	75604	3	True				
ANR	75718	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		75604	0					
ANR	75719	Callee	zend_ast_export_stmt		75604	0					
ANR	75720	Identifier	zend_ast_export_stmt		75604	0					
ANR	75721	ArgumentList	str		75604	1					
ANR	75722	Argument	str		75604	0					
ANR	75723	Identifier	str		75604	0					
ANR	75724	Argument	ast -> child [ 1 ]		75604	1					
ANR	75725	ArrayIndexing	ast -> child [ 1 ]		75604	0					
ANR	75726	PtrMemberAccess	ast -> child		75604	0					
ANR	75727	Identifier	ast		75604	0					
ANR	75728	Identifier	child		75604	1					
ANR	75729	PrimaryExpression	1		75604	1					
ANR	75730	Argument	indent + 1		75604	2					
ANR	75731	AdditiveExpression	indent + 1		75604	0		+			
ANR	75732	Identifier	indent		75604	0					
ANR	75733	PrimaryExpression	1		75604	1					
ANR	75734	ElseStatement	else		75604	0					
ANR	75735	CompoundStatement		20:9:482:482	75604	0					
ANR	75736	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	847:3:22007:22042	75604	0	True				
ANR	75737	CallExpression	"zend_ast_export_indent ( str , indent )"		75604	0					
ANR	75738	Callee	zend_ast_export_indent		75604	0					
ANR	75739	Identifier	zend_ast_export_indent		75604	0					
ANR	75740	ArgumentList	str		75604	1					
ANR	75741	Argument	str		75604	0					
ANR	75742	Identifier	str		75604	0					
ANR	75743	Argument	indent		75604	1					
ANR	75744	Identifier	indent		75604	0					
ANR	75745	ExpressionStatement	"smart_str_appends ( str , ""} else "" )"	848:3:22047:22080	75604	1	True				
ANR	75746	CallExpression	"smart_str_appends ( str , ""} else "" )"		75604	0					
ANR	75747	Callee	smart_str_appends		75604	0					
ANR	75748	Identifier	smart_str_appends		75604	0					
ANR	75749	ArgumentList	str		75604	1					
ANR	75750	Argument	str		75604	0					
ANR	75751	Identifier	str		75604	0					
ANR	75752	Argument	"""} else """		75604	1					
ANR	75753	PrimaryExpression	"""} else """		75604	0					
ANR	75754	IfStatement	if ( ast -> child [ 1 ] -> kind == ZEND_AST_IF )		75604	2					
ANR	75755	Condition	ast -> child [ 1 ] -> kind == ZEND_AST_IF	849:7:22089:22122	75604	0	True				
ANR	75756	EqualityExpression	ast -> child [ 1 ] -> kind == ZEND_AST_IF		75604	0		==			
ANR	75757	PtrMemberAccess	ast -> child [ 1 ] -> kind		75604	0					
ANR	75758	ArrayIndexing	ast -> child [ 1 ]		75604	0					
ANR	75759	PtrMemberAccess	ast -> child		75604	0					
ANR	75760	Identifier	ast		75604	0					
ANR	75761	Identifier	child		75604	1					
ANR	75762	PrimaryExpression	1		75604	1					
ANR	75763	Identifier	kind		75604	1					
ANR	75764	Identifier	ZEND_AST_IF		75604	1					
ANR	75765	CompoundStatement		23:43:605:605	75604	1					
ANR	75766	ExpressionStatement	list = ( zend_ast_list * ) ast -> child [ 1 ]	850:4:22131:22167	75604	0	True				
ANR	75767	AssignmentExpression	list = ( zend_ast_list * ) ast -> child [ 1 ]		75604	0		=			
ANR	75768	Identifier	list		75604	0					
ANR	75769	CastExpression	( zend_ast_list * ) ast -> child [ 1 ]		75604	1					
ANR	75770	CastTarget	zend_ast_list *		75604	0					
ANR	75771	ArrayIndexing	ast -> child [ 1 ]		75604	1					
ANR	75772	PtrMemberAccess	ast -> child		75604	0					
ANR	75773	Identifier	ast		75604	0					
ANR	75774	Identifier	child		75604	1					
ANR	75775	PrimaryExpression	1		75604	1					
ANR	75776	GotoStatement	goto tail_call ;	851:4:22173:22187	75604	1	True				
ANR	75777	Identifier	tail_call		75604	0					
ANR	75778	ElseStatement	else		75604	0					
ANR	75779	CompoundStatement		26:10:679:679	75604	0					
ANR	75780	ExpressionStatement	"smart_str_appends ( str , ""{\\n"" )"	853:4:22205:22234	75604	0	True				
ANR	75781	CallExpression	"smart_str_appends ( str , ""{\\n"" )"		75604	0					
ANR	75782	Callee	smart_str_appends		75604	0					
ANR	75783	Identifier	smart_str_appends		75604	0					
ANR	75784	ArgumentList	str		75604	1					
ANR	75785	Argument	str		75604	0					
ANR	75786	Identifier	str		75604	0					
ANR	75787	Argument	"""{\\n"""		75604	1					
ANR	75788	PrimaryExpression	"""{\\n"""		75604	0					
ANR	75789	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	854:4:22240:22292	75604	1	True				
ANR	75790	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		75604	0					
ANR	75791	Callee	zend_ast_export_stmt		75604	0					
ANR	75792	Identifier	zend_ast_export_stmt		75604	0					
ANR	75793	ArgumentList	str		75604	1					
ANR	75794	Argument	str		75604	0					
ANR	75795	Identifier	str		75604	0					
ANR	75796	Argument	ast -> child [ 1 ]		75604	1					
ANR	75797	ArrayIndexing	ast -> child [ 1 ]		75604	0					
ANR	75798	PtrMemberAccess	ast -> child		75604	0					
ANR	75799	Identifier	ast		75604	0					
ANR	75800	Identifier	child		75604	1					
ANR	75801	PrimaryExpression	1		75604	1					
ANR	75802	Argument	indent + 1		75604	2					
ANR	75803	AdditiveExpression	indent + 1		75604	0		+			
ANR	75804	Identifier	indent		75604	0					
ANR	75805	PrimaryExpression	1		75604	1					
ANR	75806	ExpressionStatement	i ++	857:2:22305:22308	75604	3	True				
ANR	75807	PostIncDecOperationExpression	i ++		75604	0					
ANR	75808	Identifier	i		75604	0					
ANR	75809	IncDec	++		75604	1					
ANR	75810	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	859:1:22314:22349	75604	5	True				
ANR	75811	CallExpression	"zend_ast_export_indent ( str , indent )"		75604	0					
ANR	75812	Callee	zend_ast_export_indent		75604	0					
ANR	75813	Identifier	zend_ast_export_indent		75604	0					
ANR	75814	ArgumentList	str		75604	1					
ANR	75815	Argument	str		75604	0					
ANR	75816	Identifier	str		75604	0					
ANR	75817	Argument	indent		75604	1					
ANR	75818	Identifier	indent		75604	0					
ANR	75819	ExpressionStatement	"smart_str_appendc ( str , '}' )"	860:1:22352:22379	75604	6	True				
ANR	75820	CallExpression	"smart_str_appendc ( str , '}' )"		75604	0					
ANR	75821	Callee	smart_str_appendc		75604	0					
ANR	75822	Identifier	smart_str_appendc		75604	0					
ANR	75823	ArgumentList	str		75604	1					
ANR	75824	Argument	str		75604	0					
ANR	75825	Identifier	str		75604	0					
ANR	75826	Argument	'}'		75604	1					
ANR	75827	PrimaryExpression	'}'		75604	0					
ANR	75828	ReturnType	static void		75604	1					
ANR	75829	Identifier	zend_ast_export_if_stmt		75604	2					
ANR	75830	ParameterList	"smart_str * str , zend_ast_list * list , int indent"		75604	3					
ANR	75831	Parameter	smart_str * str	826:36:21470:21483	75604	0	True				
ANR	75832	ParameterType	smart_str *		75604	0					
ANR	75833	Identifier	str		75604	1					
ANR	75834	Parameter	zend_ast_list * list	826:52:21486:21504	75604	1	True				
ANR	75835	ParameterType	zend_ast_list *		75604	0					
ANR	75836	Identifier	list		75604	1					
ANR	75837	Parameter	int indent	826:73:21507:21516	75604	2	True				
ANR	75838	ParameterType	int		75604	0					
ANR	75839	Identifier	indent		75604	1					
ANR	75840	CFGEntryNode	ENTRY		75604		True				
ANR	75841	CFGExitNode	EXIT		75604		True				
ANR	75842	Symbol	* * * ast		75604						
ANR	75843	Symbol	* * ast -> child		75604						
ANR	75844	Symbol	ast -> kind		75604						
ANR	75845	Symbol	ast		75604						
ANR	75846	Symbol	list -> child		75604						
ANR	75847	Symbol	indent		75604						
ANR	75848	Symbol	ZEND_AST_IF_ELEM		75604						
ANR	75849	Symbol	ast -> child [ 1 ] -> kind		75604						
ANR	75850	Symbol	ZEND_AST_IF		75604						
ANR	75851	Symbol	i		75604						
ANR	75852	Symbol	list		75604						
ANR	75853	Symbol	str		75604						
ANR	75854	Symbol	* i		75604						
ANR	75855	Symbol	* * list		75604						
ANR	75856	Symbol	* ast		75604						
ANR	75857	Symbol	* list		75604						
ANR	75858	Symbol	* * ast		75604						
ANR	75859	Symbol	* list -> child		75604						
ANR	75860	Symbol	* ast -> child		75604						
ANR	75861	Symbol	ast -> child		75604						
ANR	75862	Symbol	list -> children		75604						
ANR	75863	Function	zend_ast_export_zval	863:0:22384:23919							
ANR	75864	FunctionDef	"zend_ast_export_zval (smart_str * str , zval * zv , int priority , int indent)"		75863	0					
ANR	75865	CompoundStatement		864:0:22469:23919	75863	0					
ANR	75866	IdentifierDeclStatement	zend_long idx ;	865:1:22472:22485	75863	0	True				
ANR	75867	IdentifierDecl	idx		75863	0					
ANR	75868	IdentifierDeclType	zend_long		75863	0					
ANR	75869	Identifier	idx		75863	1					
ANR	75870	IdentifierDeclStatement	zend_string * key ;	866:1:22488:22504	75863	1	True				
ANR	75871	IdentifierDecl	* key		75863	0					
ANR	75872	IdentifierDeclType	zend_string *		75863	0					
ANR	75873	Identifier	key		75863	1					
ANR	75874	IdentifierDeclStatement	zval * val ;	867:1:22507:22516	75863	2	True				
ANR	75875	IdentifierDecl	* val		75863	0					
ANR	75876	IdentifierDeclType	zval *		75863	0					
ANR	75877	Identifier	val		75863	1					
ANR	75878	IdentifierDeclStatement	int first ;	868:1:22519:22528	75863	3	True				
ANR	75879	IdentifierDecl	first		75863	0					
ANR	75880	IdentifierDeclType	int		75863	0					
ANR	75881	Identifier	first		75863	1					
ANR	75882	ExpressionStatement	ZVAL_DEREF ( zv )	870:1:22532:22546	75863	4	True				
ANR	75883	CallExpression	ZVAL_DEREF ( zv )		75863	0					
ANR	75884	Callee	ZVAL_DEREF		75863	0					
ANR	75885	Identifier	ZVAL_DEREF		75863	0					
ANR	75886	ArgumentList	zv		75863	1					
ANR	75887	Argument	zv		75863	0					
ANR	75888	Identifier	zv		75863	0					
ANR	75889	SwitchStatement	switch ( Z_TYPE_P ( zv ) )		75863	5					
ANR	75890	Condition	Z_TYPE_P ( zv )	871:9:22557:22568	75863	0	True				
ANR	75891	CallExpression	Z_TYPE_P ( zv )		75863	0					
ANR	75892	Callee	Z_TYPE_P		75863	0					
ANR	75893	Identifier	Z_TYPE_P		75863	0					
ANR	75894	ArgumentList	zv		75863	1					
ANR	75895	Argument	zv		75863	0					
ANR	75896	Identifier	zv		75863	0					
ANR	75897	CompoundStatement		8:23:101:101	75863	1					
ANR	75898	Label	case IS_NULL :	872:2:22575:22587	75863	0	True				
ANR	75899	Identifier	IS_NULL		75863	0					
ANR	75900	ExpressionStatement	"smart_str_appends ( str , ""null"" )"	873:3:22592:22622	75863	1	True				
ANR	75901	CallExpression	"smart_str_appends ( str , ""null"" )"		75863	0					
ANR	75902	Callee	smart_str_appends		75863	0					
ANR	75903	Identifier	smart_str_appends		75863	0					
ANR	75904	ArgumentList	str		75863	1					
ANR	75905	Argument	str		75863	0					
ANR	75906	Identifier	str		75863	0					
ANR	75907	Argument	"""null"""		75863	1					
ANR	75908	PrimaryExpression	"""null"""		75863	0					
ANR	75909	BreakStatement	break ;	874:3:22627:22632	75863	2	True				
ANR	75910	Label	case IS_FALSE :	875:2:22636:22649	75863	3	True				
ANR	75911	Identifier	IS_FALSE		75863	0					
ANR	75912	ExpressionStatement	"smart_str_appends ( str , ""false"" )"	876:3:22654:22685	75863	4	True				
ANR	75913	CallExpression	"smart_str_appends ( str , ""false"" )"		75863	0					
ANR	75914	Callee	smart_str_appends		75863	0					
ANR	75915	Identifier	smart_str_appends		75863	0					
ANR	75916	ArgumentList	str		75863	1					
ANR	75917	Argument	str		75863	0					
ANR	75918	Identifier	str		75863	0					
ANR	75919	Argument	"""false"""		75863	1					
ANR	75920	PrimaryExpression	"""false"""		75863	0					
ANR	75921	BreakStatement	break ;	877:3:22690:22695	75863	5	True				
ANR	75922	Label	case IS_TRUE :	878:2:22699:22711	75863	6	True				
ANR	75923	Identifier	IS_TRUE		75863	0					
ANR	75924	ExpressionStatement	"smart_str_appends ( str , ""true"" )"	879:3:22716:22746	75863	7	True				
ANR	75925	CallExpression	"smart_str_appends ( str , ""true"" )"		75863	0					
ANR	75926	Callee	smart_str_appends		75863	0					
ANR	75927	Identifier	smart_str_appends		75863	0					
ANR	75928	ArgumentList	str		75863	1					
ANR	75929	Argument	str		75863	0					
ANR	75930	Identifier	str		75863	0					
ANR	75931	Argument	"""true"""		75863	1					
ANR	75932	PrimaryExpression	"""true"""		75863	0					
ANR	75933	BreakStatement	break ;	880:3:22751:22756	75863	8	True				
ANR	75934	Label	case IS_LONG :	881:2:22760:22772	75863	9	True				
ANR	75935	Identifier	IS_LONG		75863	0					
ANR	75936	ExpressionStatement	"smart_str_append_long ( str , Z_LVAL_P ( zv ) )"	882:3:22777:22817	75863	10	True				
ANR	75937	CallExpression	"smart_str_append_long ( str , Z_LVAL_P ( zv ) )"		75863	0					
ANR	75938	Callee	smart_str_append_long		75863	0					
ANR	75939	Identifier	smart_str_append_long		75863	0					
ANR	75940	ArgumentList	str		75863	1					
ANR	75941	Argument	str		75863	0					
ANR	75942	Identifier	str		75863	0					
ANR	75943	Argument	Z_LVAL_P ( zv )		75863	1					
ANR	75944	CallExpression	Z_LVAL_P ( zv )		75863	0					
ANR	75945	Callee	Z_LVAL_P		75863	0					
ANR	75946	Identifier	Z_LVAL_P		75863	0					
ANR	75947	ArgumentList	zv		75863	1					
ANR	75948	Argument	zv		75863	0					
ANR	75949	Identifier	zv		75863	0					
ANR	75950	BreakStatement	break ;	883:3:22822:22827	75863	11	True				
ANR	75951	Label	case IS_DOUBLE :	884:2:22831:22845	75863	12	True				
ANR	75952	Identifier	IS_DOUBLE		75863	0					
ANR	75953	ExpressionStatement	"key = zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( zv ) )"	885:3:22850:22917	75863	13	True				
ANR	75954	AssignmentExpression	"key = zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( zv ) )"		75863	0		=			
ANR	75955	Identifier	key		75863	0					
ANR	75956	CallExpression	"zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( zv ) )"		75863	1					
ANR	75957	Callee	zend_strpprintf		75863	0					
ANR	75958	Identifier	zend_strpprintf		75863	0					
ANR	75959	ArgumentList	0		75863	1					
ANR	75960	Argument	0		75863	0					
ANR	75961	PrimaryExpression	0		75863	0					
ANR	75962	Argument	"""%.*G"""		75863	1					
ANR	75963	PrimaryExpression	"""%.*G"""		75863	0					
ANR	75964	Argument	( int ) EG ( precision )		75863	2					
ANR	75965	CastExpression	( int ) EG ( precision )		75863	0					
ANR	75966	CastTarget	int		75863	0					
ANR	75967	CallExpression	EG ( precision )		75863	1					
ANR	75968	Callee	EG		75863	0					
ANR	75969	Identifier	EG		75863	0					
ANR	75970	ArgumentList	precision		75863	1					
ANR	75971	Argument	precision		75863	0					
ANR	75972	Identifier	precision		75863	0					
ANR	75973	Argument	Z_DVAL_P ( zv )		75863	3					
ANR	75974	CallExpression	Z_DVAL_P ( zv )		75863	0					
ANR	75975	Callee	Z_DVAL_P		75863	0					
ANR	75976	Identifier	Z_DVAL_P		75863	0					
ANR	75977	ArgumentList	zv		75863	1					
ANR	75978	Argument	zv		75863	0					
ANR	75979	Identifier	zv		75863	0					
ANR	75980	ExpressionStatement	"smart_str_appendl ( str , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"	886:3:22922:22974	75863	14	True				
ANR	75981	CallExpression	"smart_str_appendl ( str , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		75863	0					
ANR	75982	Callee	smart_str_appendl		75863	0					
ANR	75983	Identifier	smart_str_appendl		75863	0					
ANR	75984	ArgumentList	str		75863	1					
ANR	75985	Argument	str		75863	0					
ANR	75986	Identifier	str		75863	0					
ANR	75987	Argument	ZSTR_VAL ( key )		75863	1					
ANR	75988	CallExpression	ZSTR_VAL ( key )		75863	0					
ANR	75989	Callee	ZSTR_VAL		75863	0					
ANR	75990	Identifier	ZSTR_VAL		75863	0					
ANR	75991	ArgumentList	key		75863	1					
ANR	75992	Argument	key		75863	0					
ANR	75993	Identifier	key		75863	0					
ANR	75994	Argument	ZSTR_LEN ( key )		75863	2					
ANR	75995	CallExpression	ZSTR_LEN ( key )		75863	0					
ANR	75996	Callee	ZSTR_LEN		75863	0					
ANR	75997	Identifier	ZSTR_LEN		75863	0					
ANR	75998	ArgumentList	key		75863	1					
ANR	75999	Argument	key		75863	0					
ANR	76000	Identifier	key		75863	0					
ANR	76001	ExpressionStatement	zend_string_release ( key )	887:3:22979:23003	75863	15	True				
ANR	76002	CallExpression	zend_string_release ( key )		75863	0					
ANR	76003	Callee	zend_string_release		75863	0					
ANR	76004	Identifier	zend_string_release		75863	0					
ANR	76005	ArgumentList	key		75863	1					
ANR	76006	Argument	key		75863	0					
ANR	76007	Identifier	key		75863	0					
ANR	76008	BreakStatement	break ;	888:3:23008:23013	75863	16	True				
ANR	76009	Label	case IS_STRING :	889:2:23017:23031	75863	17	True				
ANR	76010	Identifier	IS_STRING		75863	0					
ANR	76011	ExpressionStatement	"smart_str_appendc ( str , '\\'' )"	890:3:23036:23064	75863	18	True				
ANR	76012	CallExpression	"smart_str_appendc ( str , '\\'' )"		75863	0					
ANR	76013	Callee	smart_str_appendc		75863	0					
ANR	76014	Identifier	smart_str_appendc		75863	0					
ANR	76015	ArgumentList	str		75863	1					
ANR	76016	Argument	str		75863	0					
ANR	76017	Identifier	str		75863	0					
ANR	76018	Argument	'\\''		75863	1					
ANR	76019	PrimaryExpression	'\\''		75863	0					
ANR	76020	ExpressionStatement	"zend_ast_export_str ( str , Z_STR_P ( zv ) )"	891:3:23069:23106	75863	19	True				
ANR	76021	CallExpression	"zend_ast_export_str ( str , Z_STR_P ( zv ) )"		75863	0					
ANR	76022	Callee	zend_ast_export_str		75863	0					
ANR	76023	Identifier	zend_ast_export_str		75863	0					
ANR	76024	ArgumentList	str		75863	1					
ANR	76025	Argument	str		75863	0					
ANR	76026	Identifier	str		75863	0					
ANR	76027	Argument	Z_STR_P ( zv )		75863	1					
ANR	76028	CallExpression	Z_STR_P ( zv )		75863	0					
ANR	76029	Callee	Z_STR_P		75863	0					
ANR	76030	Identifier	Z_STR_P		75863	0					
ANR	76031	ArgumentList	zv		75863	1					
ANR	76032	Argument	zv		75863	0					
ANR	76033	Identifier	zv		75863	0					
ANR	76034	ExpressionStatement	"smart_str_appendc ( str , '\\'' )"	892:3:23111:23139	75863	20	True				
ANR	76035	CallExpression	"smart_str_appendc ( str , '\\'' )"		75863	0					
ANR	76036	Callee	smart_str_appendc		75863	0					
ANR	76037	Identifier	smart_str_appendc		75863	0					
ANR	76038	ArgumentList	str		75863	1					
ANR	76039	Argument	str		75863	0					
ANR	76040	Identifier	str		75863	0					
ANR	76041	Argument	'\\''		75863	1					
ANR	76042	PrimaryExpression	'\\''		75863	0					
ANR	76043	BreakStatement	break ;	893:3:23144:23149	75863	21	True				
ANR	76044	Label	case IS_ARRAY :	894:2:23153:23166	75863	22	True				
ANR	76045	Identifier	IS_ARRAY		75863	0					
ANR	76046	ExpressionStatement	"smart_str_appendc ( str , '[' )"	895:3:23171:23198	75863	23	True				
ANR	76047	CallExpression	"smart_str_appendc ( str , '[' )"		75863	0					
ANR	76048	Callee	smart_str_appendc		75863	0					
ANR	76049	Identifier	smart_str_appendc		75863	0					
ANR	76050	ArgumentList	str		75863	1					
ANR	76051	Argument	str		75863	0					
ANR	76052	Identifier	str		75863	0					
ANR	76053	Argument	'['		75863	1					
ANR	76054	PrimaryExpression	'['		75863	0					
ANR	76055	ExpressionStatement	first = 1	896:3:23203:23212	75863	24	True				
ANR	76056	AssignmentExpression	first = 1		75863	0		=			
ANR	76057	Identifier	first		75863	0					
ANR	76058	PrimaryExpression	1		75863	1					
ANR	76059	Statement	ZEND_HASH_FOREACH_KEY_VAL	897:3:23217:23241	75863	25	True				
ANR	76060	Statement	(	897:28:23242:23242	75863	26	True				
ANR	76061	Statement	Z_ARRVAL_P	897:29:23243:23252	75863	27	True				
ANR	76062	Statement	(	897:39:23253:23253	75863	28	True				
ANR	76063	Statement	zv	897:40:23254:23255	75863	29	True				
ANR	76064	Statement	)	897:42:23256:23256	75863	30	True				
ANR	76065	Statement	","	897:43:23257:23257	75863	31	True				
ANR	76066	Statement	idx	897:45:23259:23261	75863	32	True				
ANR	76067	Statement	","	897:48:23262:23262	75863	33	True				
ANR	76068	Statement	key	897:50:23264:23266	75863	34	True				
ANR	76069	Statement	","	897:53:23267:23267	75863	35	True				
ANR	76070	Statement	val	897:55:23269:23271	75863	36	True				
ANR	76071	Statement	)	897:58:23272:23272	75863	37	True				
ANR	76072	CompoundStatement		34:60:804:804	75863	38					
ANR	76073	IfStatement	if ( first )		75863	0					
ANR	76074	Condition	first	898:8:23284:23288	75863	0	True				
ANR	76075	Identifier	first		75863	0					
ANR	76076	CompoundStatement		35:15:821:821	75863	1					
ANR	76077	ExpressionStatement	first = 0	899:5:23298:23307	75863	0	True				
ANR	76078	AssignmentExpression	first = 0		75863	0		=			
ANR	76079	Identifier	first		75863	0					
ANR	76080	PrimaryExpression	0		75863	1					
ANR	76081	ElseStatement	else		75863	0					
ANR	76082	CompoundStatement		37:11:850:850	75863	0					
ANR	76083	ExpressionStatement	"smart_str_appends ( str , "", "" )"	901:5:23327:23355	75863	0	True				
ANR	76084	CallExpression	"smart_str_appends ( str , "", "" )"		75863	0					
ANR	76085	Callee	smart_str_appends		75863	0					
ANR	76086	Identifier	smart_str_appends		75863	0					
ANR	76087	ArgumentList	str		75863	1					
ANR	76088	Argument	str		75863	0					
ANR	76089	Identifier	str		75863	0					
ANR	76090	Argument	""", """		75863	1					
ANR	76091	PrimaryExpression	""", """		75863	0					
ANR	76092	IfStatement	if ( key )		75863	1					
ANR	76093	Condition	key	903:8:23371:23373	75863	0	True				
ANR	76094	Identifier	key		75863	0					
ANR	76095	CompoundStatement		40:13:906:906	75863	1					
ANR	76096	ExpressionStatement	"smart_str_appendc ( str , '\\'' )"	904:5:23383:23411	75863	0	True				
ANR	76097	CallExpression	"smart_str_appendc ( str , '\\'' )"		75863	0					
ANR	76098	Callee	smart_str_appendc		75863	0					
ANR	76099	Identifier	smart_str_appendc		75863	0					
ANR	76100	ArgumentList	str		75863	1					
ANR	76101	Argument	str		75863	0					
ANR	76102	Identifier	str		75863	0					
ANR	76103	Argument	'\\''		75863	1					
ANR	76104	PrimaryExpression	'\\''		75863	0					
ANR	76105	ExpressionStatement	"zend_ast_export_str ( str , key )"	905:5:23418:23447	75863	1	True				
ANR	76106	CallExpression	"zend_ast_export_str ( str , key )"		75863	0					
ANR	76107	Callee	zend_ast_export_str		75863	0					
ANR	76108	Identifier	zend_ast_export_str		75863	0					
ANR	76109	ArgumentList	str		75863	1					
ANR	76110	Argument	str		75863	0					
ANR	76111	Identifier	str		75863	0					
ANR	76112	Argument	key		75863	1					
ANR	76113	Identifier	key		75863	0					
ANR	76114	ExpressionStatement	"smart_str_appends ( str , ""' => "" )"	906:5:23454:23485	75863	2	True				
ANR	76115	CallExpression	"smart_str_appends ( str , ""' => "" )"		75863	0					
ANR	76116	Callee	smart_str_appends		75863	0					
ANR	76117	Identifier	smart_str_appends		75863	0					
ANR	76118	ArgumentList	str		75863	1					
ANR	76119	Argument	str		75863	0					
ANR	76120	Identifier	str		75863	0					
ANR	76121	Argument	"""' => """		75863	1					
ANR	76122	PrimaryExpression	"""' => """		75863	0					
ANR	76123	ElseStatement	else		75863	0					
ANR	76124	CompoundStatement		44:11:1028:1028	75863	0					
ANR	76125	ExpressionStatement	"smart_str_append_long ( str , idx )"	908:5:23505:23536	75863	0	True				
ANR	76126	CallExpression	"smart_str_append_long ( str , idx )"		75863	0					
ANR	76127	Callee	smart_str_append_long		75863	0					
ANR	76128	Identifier	smart_str_append_long		75863	0					
ANR	76129	ArgumentList	str		75863	1					
ANR	76130	Argument	str		75863	0					
ANR	76131	Identifier	str		75863	0					
ANR	76132	Argument	idx		75863	1					
ANR	76133	Identifier	idx		75863	0					
ANR	76134	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	909:5:23543:23573	75863	1	True				
ANR	76135	CallExpression	"smart_str_appends ( str , "" => "" )"		75863	0					
ANR	76136	Callee	smart_str_appends		75863	0					
ANR	76137	Identifier	smart_str_appends		75863	0					
ANR	76138	ArgumentList	str		75863	1					
ANR	76139	Argument	str		75863	0					
ANR	76140	Identifier	str		75863	0					
ANR	76141	Argument	""" => """		75863	1					
ANR	76142	PrimaryExpression	""" => """		75863	0					
ANR	76143	ExpressionStatement	"zend_ast_export_zval ( str , val , 0 , indent )"	911:4:23585:23626	75863	2	True				
ANR	76144	CallExpression	"zend_ast_export_zval ( str , val , 0 , indent )"		75863	0					
ANR	76145	Callee	zend_ast_export_zval		75863	0					
ANR	76146	Identifier	zend_ast_export_zval		75863	0					
ANR	76147	ArgumentList	str		75863	1					
ANR	76148	Argument	str		75863	0					
ANR	76149	Identifier	str		75863	0					
ANR	76150	Argument	val		75863	1					
ANR	76151	Identifier	val		75863	0					
ANR	76152	Argument	0		75863	2					
ANR	76153	PrimaryExpression	0		75863	0					
ANR	76154	Argument	indent		75863	3					
ANR	76155	Identifier	indent		75863	0					
ANR	76156	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	912:5:23633:23656	75863	39	True				
ANR	76157	CallExpression	ZEND_HASH_FOREACH_END ( )		75863	0					
ANR	76158	Callee	ZEND_HASH_FOREACH_END		75863	0					
ANR	76159	Identifier	ZEND_HASH_FOREACH_END		75863	0					
ANR	76160	ArgumentList			75863	1					
ANR	76161	ExpressionStatement	"smart_str_appendc ( str , ']' )"	913:3:23661:23688	75863	40	True				
ANR	76162	CallExpression	"smart_str_appendc ( str , ']' )"		75863	0					
ANR	76163	Callee	smart_str_appendc		75863	0					
ANR	76164	Identifier	smart_str_appendc		75863	0					
ANR	76165	ArgumentList	str		75863	1					
ANR	76166	Argument	str		75863	0					
ANR	76167	Identifier	str		75863	0					
ANR	76168	Argument	']'		75863	1					
ANR	76169	PrimaryExpression	']'		75863	0					
ANR	76170	BreakStatement	break ;	914:3:23693:23698	75863	41	True				
ANR	76171	Label	case IS_CONSTANT :	915:2:23702:23718	75863	42	True				
ANR	76172	Identifier	IS_CONSTANT		75863	0					
ANR	76173	ExpressionStatement	"smart_str_appendl ( str , Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"	916:3:23723:23777	75863	43	True				
ANR	76174	CallExpression	"smart_str_appendl ( str , Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"		75863	0					
ANR	76175	Callee	smart_str_appendl		75863	0					
ANR	76176	Identifier	smart_str_appendl		75863	0					
ANR	76177	ArgumentList	str		75863	1					
ANR	76178	Argument	str		75863	0					
ANR	76179	Identifier	str		75863	0					
ANR	76180	Argument	Z_STRVAL_P ( zv )		75863	1					
ANR	76181	CallExpression	Z_STRVAL_P ( zv )		75863	0					
ANR	76182	Callee	Z_STRVAL_P		75863	0					
ANR	76183	Identifier	Z_STRVAL_P		75863	0					
ANR	76184	ArgumentList	zv		75863	1					
ANR	76185	Argument	zv		75863	0					
ANR	76186	Identifier	zv		75863	0					
ANR	76187	Argument	Z_STRLEN_P ( zv )		75863	2					
ANR	76188	CallExpression	Z_STRLEN_P ( zv )		75863	0					
ANR	76189	Callee	Z_STRLEN_P		75863	0					
ANR	76190	Identifier	Z_STRLEN_P		75863	0					
ANR	76191	ArgumentList	zv		75863	1					
ANR	76192	Argument	zv		75863	0					
ANR	76193	Identifier	zv		75863	0					
ANR	76194	BreakStatement	break ;	917:3:23782:23787	75863	44	True				
ANR	76195	Label	case IS_CONSTANT_AST :	918:2:23791:23811	75863	45	True				
ANR	76196	Identifier	IS_CONSTANT_AST		75863	0					
ANR	76197	ExpressionStatement	"zend_ast_export_ex ( str , Z_ASTVAL_P ( zv ) , priority , indent )"	919:3:23816:23873	75863	46	True				
ANR	76198	CallExpression	"zend_ast_export_ex ( str , Z_ASTVAL_P ( zv ) , priority , indent )"		75863	0					
ANR	76199	Callee	zend_ast_export_ex		75863	0					
ANR	76200	Identifier	zend_ast_export_ex		75863	0					
ANR	76201	ArgumentList	str		75863	1					
ANR	76202	Argument	str		75863	0					
ANR	76203	Identifier	str		75863	0					
ANR	76204	Argument	Z_ASTVAL_P ( zv )		75863	1					
ANR	76205	CallExpression	Z_ASTVAL_P ( zv )		75863	0					
ANR	76206	Callee	Z_ASTVAL_P		75863	0					
ANR	76207	Identifier	Z_ASTVAL_P		75863	0					
ANR	76208	ArgumentList	zv		75863	1					
ANR	76209	Argument	zv		75863	0					
ANR	76210	Identifier	zv		75863	0					
ANR	76211	Argument	priority		75863	2					
ANR	76212	Identifier	priority		75863	0					
ANR	76213	Argument	indent		75863	3					
ANR	76214	Identifier	indent		75863	0					
ANR	76215	BreakStatement	break ;	920:3:23878:23883	75863	47	True				
ANR	76216	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	921:2:23887:23914	75863	48	True				
ANR	76217	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		75863	0					
ANR	76218	Callee	EMPTY_SWITCH_DEFAULT_CASE		75863	0					
ANR	76219	Identifier	EMPTY_SWITCH_DEFAULT_CASE		75863	0					
ANR	76220	ArgumentList			75863	1					
ANR	76221	ReturnType	static void		75863	1					
ANR	76222	Identifier	zend_ast_export_zval		75863	2					
ANR	76223	ParameterList	"smart_str * str , zval * zv , int priority , int indent"		75863	3					
ANR	76224	Parameter	smart_str * str	863:33:22417:22430	75863	0	True				
ANR	76225	ParameterType	smart_str *		75863	0					
ANR	76226	Identifier	str		75863	1					
ANR	76227	Parameter	zval * zv	863:49:22433:22440	75863	1	True				
ANR	76228	ParameterType	zval *		75863	0					
ANR	76229	Identifier	zv		75863	1					
ANR	76230	Parameter	int priority	863:59:22443:22454	75863	2	True				
ANR	76231	ParameterType	int		75863	0					
ANR	76232	Identifier	priority		75863	1					
ANR	76233	Parameter	int indent	863:73:22457:22466	75863	3	True				
ANR	76234	ParameterType	int		75863	0					
ANR	76235	Identifier	indent		75863	1					
ANR	76236	CFGEntryNode	ENTRY		75863		True				
ANR	76237	CFGExitNode	EXIT		75863		True				
ANR	76238	Symbol	val		75863						
ANR	76239	Symbol	zend_strpprintf		75863						
ANR	76240	Symbol	EG		75863						
ANR	76241	Symbol	indent		75863						
ANR	76242	Symbol	precision		75863						
ANR	76243	Symbol	priority		75863						
ANR	76244	Symbol	Z_TYPE_P		75863						
ANR	76245	Symbol	Z_STRVAL_P		75863						
ANR	76246	Symbol	Z_DVAL_P		75863						
ANR	76247	Symbol	Z_LVAL_P		75863						
ANR	76248	Symbol	ZSTR_VAL		75863						
ANR	76249	Symbol	Z_ASTVAL_P		75863						
ANR	76250	Symbol	str		75863						
ANR	76251	Symbol	ZSTR_LEN		75863						
ANR	76252	Symbol	Z_STRLEN_P		75863						
ANR	76253	Symbol	Z_STR_P		75863						
ANR	76254	Symbol	zv		75863						
ANR	76255	Symbol	idx		75863						
ANR	76256	Symbol	key		75863						
ANR	76257	Symbol	first		75863						
ANR	76258	Function	zend_ast_export_ex	967:0:24617:47274							
ANR	76259	FunctionDef	"zend_ast_export_ex (smart_str * str , zend_ast * ast , int priority , int indent)"		76258	0					
ANR	76260	CompoundStatement		968:0:24705:47274	76258	0					
ANR	76261	IdentifierDeclStatement	zend_ast_decl * decl ;	969:1:24708:24727	76258	0	True				
ANR	76262	IdentifierDecl	* decl		76258	0					
ANR	76263	IdentifierDeclType	zend_ast_decl *		76258	0					
ANR	76264	Identifier	decl		76258	1					
ANR	76265	IdentifierDeclStatement	"int p , pl , pr ;"	970:1:24730:24743	76258	1	True				
ANR	76266	IdentifierDecl	p		76258	0					
ANR	76267	IdentifierDeclType	int		76258	0					
ANR	76268	Identifier	p		76258	1					
ANR	76269	IdentifierDecl	pl		76258	1					
ANR	76270	IdentifierDeclType	int		76258	0					
ANR	76271	Identifier	pl		76258	1					
ANR	76272	IdentifierDecl	pr		76258	2					
ANR	76273	IdentifierDeclType	int		76258	0					
ANR	76274	Identifier	pr		76258	1					
ANR	76275	IdentifierDeclStatement	const char * op ;	971:1:24746:24760	76258	2	True				
ANR	76276	IdentifierDecl	* op		76258	0					
ANR	76277	IdentifierDeclType	const char *		76258	0					
ANR	76278	Identifier	op		76258	1					
ANR	76279	Label	tail_call :	973:0:24763:24772	76258	3	True				
ANR	76280	Identifier	tail_call		76258	0					
ANR	76281	IfStatement	if ( ! ast )		76258	4					
ANR	76282	Condition	! ast	974:5:24779:24782	76258	0	True				
ANR	76283	UnaryOperationExpression	! ast		76258	0					
ANR	76284	UnaryOperator	!		76258	0					
ANR	76285	Identifier	ast		76258	1					
ANR	76286	CompoundStatement		7:11:79:79	76258	1					
ANR	76287	ReturnStatement	return ;	975:2:24789:24795	76258	0	True				
ANR	76288	SwitchStatement	switch ( ast -> kind )		76258	5					
ANR	76289	Condition	ast -> kind	977:9:24809:24817	76258	0	True				
ANR	76290	PtrMemberAccess	ast -> kind		76258	0					
ANR	76291	Identifier	ast		76258	0					
ANR	76292	Identifier	kind		76258	1					
ANR	76293	CompoundStatement		10:20:114:114	76258	1					
ANR	76294	Label	case ZEND_AST_ZVAL :	979:2:24846:24864	76258	0	True				
ANR	76295	Identifier	ZEND_AST_ZVAL		76258	0					
ANR	76296	ExpressionStatement	"zend_ast_export_zval ( str , zend_ast_get_zval ( ast ) , priority , indent )"	980:3:24869:24936	76258	1	True				
ANR	76297	CallExpression	"zend_ast_export_zval ( str , zend_ast_get_zval ( ast ) , priority , indent )"		76258	0					
ANR	76298	Callee	zend_ast_export_zval		76258	0					
ANR	76299	Identifier	zend_ast_export_zval		76258	0					
ANR	76300	ArgumentList	str		76258	1					
ANR	76301	Argument	str		76258	0					
ANR	76302	Identifier	str		76258	0					
ANR	76303	Argument	zend_ast_get_zval ( ast )		76258	1					
ANR	76304	CallExpression	zend_ast_get_zval ( ast )		76258	0					
ANR	76305	Callee	zend_ast_get_zval		76258	0					
ANR	76306	Identifier	zend_ast_get_zval		76258	0					
ANR	76307	ArgumentList	ast		76258	1					
ANR	76308	Argument	ast		76258	0					
ANR	76309	Identifier	ast		76258	0					
ANR	76310	Argument	priority		76258	2					
ANR	76311	Identifier	priority		76258	0					
ANR	76312	Argument	indent		76258	3					
ANR	76313	Identifier	indent		76258	0					
ANR	76314	BreakStatement	break ;	981:3:24941:24946	76258	2	True				
ANR	76315	Label	case ZEND_AST_ZNODE :	982:2:24950:24969	76258	3	True				
ANR	76316	Identifier	ZEND_AST_ZNODE		76258	0					
ANR	76317	ExpressionStatement	ZEND_ASSERT ( 0 )	984:3:25049:25063	76258	4	True				
ANR	76318	CallExpression	ZEND_ASSERT ( 0 )		76258	0					
ANR	76319	Callee	ZEND_ASSERT		76258	0					
ANR	76320	Identifier	ZEND_ASSERT		76258	0					
ANR	76321	ArgumentList	0		76258	1					
ANR	76322	Argument	0		76258	0					
ANR	76323	PrimaryExpression	0		76258	0					
ANR	76324	BreakStatement	break ;	985:3:25068:25073	76258	5	True				
ANR	76325	Label	case ZEND_AST_FUNC_DECL :	988:2:25104:25127	76258	6	True				
ANR	76326	Identifier	ZEND_AST_FUNC_DECL		76258	0					
ANR	76327	Label	case ZEND_AST_CLOSURE :	989:2:25131:25152	76258	7	True				
ANR	76328	Identifier	ZEND_AST_CLOSURE		76258	0					
ANR	76329	Label	case ZEND_AST_METHOD :	990:2:25156:25176	76258	8	True				
ANR	76330	Identifier	ZEND_AST_METHOD		76258	0					
ANR	76331	ExpressionStatement	decl = ( zend_ast_decl * ) ast	991:3:25181:25209	76258	9	True				
ANR	76332	AssignmentExpression	decl = ( zend_ast_decl * ) ast		76258	0		=			
ANR	76333	Identifier	decl		76258	0					
ANR	76334	CastExpression	( zend_ast_decl * ) ast		76258	1					
ANR	76335	CastTarget	zend_ast_decl *		76258	0					
ANR	76336	Identifier	ast		76258	1					
ANR	76337	IfStatement	if ( decl -> flags & ZEND_ACC_PUBLIC )		76258	10					
ANR	76338	Condition	decl -> flags & ZEND_ACC_PUBLIC	992:7:25218:25246	76258	0	True				
ANR	76339	BitAndExpression	decl -> flags & ZEND_ACC_PUBLIC		76258	0		&			
ANR	76340	PtrMemberAccess	decl -> flags		76258	0					
ANR	76341	Identifier	decl		76258	0					
ANR	76342	Identifier	flags		76258	1					
ANR	76343	Identifier	ZEND_ACC_PUBLIC		76258	1					
ANR	76344	CompoundStatement		25:38:543:543	76258	1					
ANR	76345	ExpressionStatement	"smart_str_appends ( str , ""public "" )"	993:4:25255:25288	76258	0	True				
ANR	76346	CallExpression	"smart_str_appends ( str , ""public "" )"		76258	0					
ANR	76347	Callee	smart_str_appends		76258	0					
ANR	76348	Identifier	smart_str_appends		76258	0					
ANR	76349	ArgumentList	str		76258	1					
ANR	76350	Argument	str		76258	0					
ANR	76351	Identifier	str		76258	0					
ANR	76352	Argument	"""public """		76258	1					
ANR	76353	PrimaryExpression	"""public """		76258	0					
ANR	76354	ElseStatement	else		76258	0					
ANR	76355	IfStatement	if ( decl -> flags & ZEND_ACC_PROTECTED )		76258	0					
ANR	76356	Condition	decl -> flags & ZEND_ACC_PROTECTED	994:14:25304:25335	76258	0	True				
ANR	76357	BitAndExpression	decl -> flags & ZEND_ACC_PROTECTED		76258	0		&			
ANR	76358	PtrMemberAccess	decl -> flags		76258	0					
ANR	76359	Identifier	decl		76258	0					
ANR	76360	Identifier	flags		76258	1					
ANR	76361	Identifier	ZEND_ACC_PROTECTED		76258	1					
ANR	76362	CompoundStatement		27:48:632:632	76258	1					
ANR	76363	ExpressionStatement	"smart_str_appends ( str , ""protected "" )"	995:4:25344:25380	76258	0	True				
ANR	76364	CallExpression	"smart_str_appends ( str , ""protected "" )"		76258	0					
ANR	76365	Callee	smart_str_appends		76258	0					
ANR	76366	Identifier	smart_str_appends		76258	0					
ANR	76367	ArgumentList	str		76258	1					
ANR	76368	Argument	str		76258	0					
ANR	76369	Identifier	str		76258	0					
ANR	76370	Argument	"""protected """		76258	1					
ANR	76371	PrimaryExpression	"""protected """		76258	0					
ANR	76372	ElseStatement	else		76258	0					
ANR	76373	IfStatement	if ( decl -> flags & ZEND_ACC_PRIVATE )		76258	0					
ANR	76374	Condition	decl -> flags & ZEND_ACC_PRIVATE	996:14:25396:25425	76258	0	True				
ANR	76375	BitAndExpression	decl -> flags & ZEND_ACC_PRIVATE		76258	0		&			
ANR	76376	PtrMemberAccess	decl -> flags		76258	0					
ANR	76377	Identifier	decl		76258	0					
ANR	76378	Identifier	flags		76258	1					
ANR	76379	Identifier	ZEND_ACC_PRIVATE		76258	1					
ANR	76380	CompoundStatement		29:46:722:722	76258	1					
ANR	76381	ExpressionStatement	"smart_str_appends ( str , ""private "" )"	997:4:25434:25468	76258	0	True				
ANR	76382	CallExpression	"smart_str_appends ( str , ""private "" )"		76258	0					
ANR	76383	Callee	smart_str_appends		76258	0					
ANR	76384	Identifier	smart_str_appends		76258	0					
ANR	76385	ArgumentList	str		76258	1					
ANR	76386	Argument	str		76258	0					
ANR	76387	Identifier	str		76258	0					
ANR	76388	Argument	"""private """		76258	1					
ANR	76389	PrimaryExpression	"""private """		76258	0					
ANR	76390	IfStatement	if ( decl -> flags & ZEND_ACC_STATIC )		76258	11					
ANR	76391	Condition	decl -> flags & ZEND_ACC_STATIC	999:7:25482:25510	76258	0	True				
ANR	76392	BitAndExpression	decl -> flags & ZEND_ACC_STATIC		76258	0		&			
ANR	76393	PtrMemberAccess	decl -> flags		76258	0					
ANR	76394	Identifier	decl		76258	0					
ANR	76395	Identifier	flags		76258	1					
ANR	76396	Identifier	ZEND_ACC_STATIC		76258	1					
ANR	76397	CompoundStatement		32:38:807:807	76258	1					
ANR	76398	ExpressionStatement	"smart_str_appends ( str , ""static "" )"	1000:4:25519:25552	76258	0	True				
ANR	76399	CallExpression	"smart_str_appends ( str , ""static "" )"		76258	0					
ANR	76400	Callee	smart_str_appends		76258	0					
ANR	76401	Identifier	smart_str_appends		76258	0					
ANR	76402	ArgumentList	str		76258	1					
ANR	76403	Argument	str		76258	0					
ANR	76404	Identifier	str		76258	0					
ANR	76405	Argument	"""static """		76258	1					
ANR	76406	PrimaryExpression	"""static """		76258	0					
ANR	76407	IfStatement	if ( decl -> flags & ZEND_ACC_ABSTRACT )		76258	12					
ANR	76408	Condition	decl -> flags & ZEND_ACC_ABSTRACT	1002:7:25566:25596	76258	0	True				
ANR	76409	BitAndExpression	decl -> flags & ZEND_ACC_ABSTRACT		76258	0		&			
ANR	76410	PtrMemberAccess	decl -> flags		76258	0					
ANR	76411	Identifier	decl		76258	0					
ANR	76412	Identifier	flags		76258	1					
ANR	76413	Identifier	ZEND_ACC_ABSTRACT		76258	1					
ANR	76414	CompoundStatement		35:40:893:893	76258	1					
ANR	76415	ExpressionStatement	"smart_str_appends ( str , ""abstract "" )"	1003:4:25605:25640	76258	0	True				
ANR	76416	CallExpression	"smart_str_appends ( str , ""abstract "" )"		76258	0					
ANR	76417	Callee	smart_str_appends		76258	0					
ANR	76418	Identifier	smart_str_appends		76258	0					
ANR	76419	ArgumentList	str		76258	1					
ANR	76420	Argument	str		76258	0					
ANR	76421	Identifier	str		76258	0					
ANR	76422	Argument	"""abstract """		76258	1					
ANR	76423	PrimaryExpression	"""abstract """		76258	0					
ANR	76424	IfStatement	if ( decl -> flags & ZEND_ACC_FINAL )		76258	13					
ANR	76425	Condition	decl -> flags & ZEND_ACC_FINAL	1005:7:25654:25681	76258	0	True				
ANR	76426	BitAndExpression	decl -> flags & ZEND_ACC_FINAL		76258	0		&			
ANR	76427	PtrMemberAccess	decl -> flags		76258	0					
ANR	76428	Identifier	decl		76258	0					
ANR	76429	Identifier	flags		76258	1					
ANR	76430	Identifier	ZEND_ACC_FINAL		76258	1					
ANR	76431	CompoundStatement		38:37:978:978	76258	1					
ANR	76432	ExpressionStatement	"smart_str_appends ( str , ""final "" )"	1006:4:25690:25722	76258	0	True				
ANR	76433	CallExpression	"smart_str_appends ( str , ""final "" )"		76258	0					
ANR	76434	Callee	smart_str_appends		76258	0					
ANR	76435	Identifier	smart_str_appends		76258	0					
ANR	76436	ArgumentList	str		76258	1					
ANR	76437	Argument	str		76258	0					
ANR	76438	Identifier	str		76258	0					
ANR	76439	Argument	"""final """		76258	1					
ANR	76440	PrimaryExpression	"""final """		76258	0					
ANR	76441	ExpressionStatement	"smart_str_appends ( str , ""function "" )"	1008:3:25732:25767	76258	14	True				
ANR	76442	CallExpression	"smart_str_appends ( str , ""function "" )"		76258	0					
ANR	76443	Callee	smart_str_appends		76258	0					
ANR	76444	Identifier	smart_str_appends		76258	0					
ANR	76445	ArgumentList	str		76258	1					
ANR	76446	Argument	str		76258	0					
ANR	76447	Identifier	str		76258	0					
ANR	76448	Argument	"""function """		76258	1					
ANR	76449	PrimaryExpression	"""function """		76258	0					
ANR	76450	IfStatement	if ( decl -> flags & ZEND_ACC_RETURN_REFERENCE )		76258	15					
ANR	76451	Condition	decl -> flags & ZEND_ACC_RETURN_REFERENCE	1009:7:25776:25814	76258	0	True				
ANR	76452	BitAndExpression	decl -> flags & ZEND_ACC_RETURN_REFERENCE		76258	0		&			
ANR	76453	PtrMemberAccess	decl -> flags		76258	0					
ANR	76454	Identifier	decl		76258	0					
ANR	76455	Identifier	flags		76258	1					
ANR	76456	Identifier	ZEND_ACC_RETURN_REFERENCE		76258	1					
ANR	76457	CompoundStatement		42:48:1111:1111	76258	1					
ANR	76458	ExpressionStatement	"smart_str_appendc ( str , '&' )"	1010:4:25823:25850	76258	0	True				
ANR	76459	CallExpression	"smart_str_appendc ( str , '&' )"		76258	0					
ANR	76460	Callee	smart_str_appendc		76258	0					
ANR	76461	Identifier	smart_str_appendc		76258	0					
ANR	76462	ArgumentList	str		76258	1					
ANR	76463	Argument	str		76258	0					
ANR	76464	Identifier	str		76258	0					
ANR	76465	Argument	'&'		76258	1					
ANR	76466	PrimaryExpression	'&'		76258	0					
ANR	76467	IfStatement	if ( ast -> kind != ZEND_AST_CLOSURE )		76258	16					
ANR	76468	Condition	ast -> kind != ZEND_AST_CLOSURE	1012:7:25864:25892	76258	0	True				
ANR	76469	EqualityExpression	ast -> kind != ZEND_AST_CLOSURE		76258	0		!=			
ANR	76470	PtrMemberAccess	ast -> kind		76258	0					
ANR	76471	Identifier	ast		76258	0					
ANR	76472	Identifier	kind		76258	1					
ANR	76473	Identifier	ZEND_AST_CLOSURE		76258	1					
ANR	76474	CompoundStatement		45:38:1189:1189	76258	1					
ANR	76475	ExpressionStatement	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"	1013:4:25901:25967	76258	0	True				
ANR	76476	CallExpression	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"		76258	0					
ANR	76477	Callee	smart_str_appendl		76258	0					
ANR	76478	Identifier	smart_str_appendl		76258	0					
ANR	76479	ArgumentList	str		76258	1					
ANR	76480	Argument	str		76258	0					
ANR	76481	Identifier	str		76258	0					
ANR	76482	Argument	ZSTR_VAL ( decl -> name )		76258	1					
ANR	76483	CallExpression	ZSTR_VAL ( decl -> name )		76258	0					
ANR	76484	Callee	ZSTR_VAL		76258	0					
ANR	76485	Identifier	ZSTR_VAL		76258	0					
ANR	76486	ArgumentList	decl -> name		76258	1					
ANR	76487	Argument	decl -> name		76258	0					
ANR	76488	PtrMemberAccess	decl -> name		76258	0					
ANR	76489	Identifier	decl		76258	0					
ANR	76490	Identifier	name		76258	1					
ANR	76491	Argument	ZSTR_LEN ( decl -> name )		76258	2					
ANR	76492	CallExpression	ZSTR_LEN ( decl -> name )		76258	0					
ANR	76493	Callee	ZSTR_LEN		76258	0					
ANR	76494	Identifier	ZSTR_LEN		76258	0					
ANR	76495	ArgumentList	decl -> name		76258	1					
ANR	76496	Argument	decl -> name		76258	0					
ANR	76497	PtrMemberAccess	decl -> name		76258	0					
ANR	76498	Identifier	decl		76258	0					
ANR	76499	Identifier	name		76258	1					
ANR	76500	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1015:3:25977:26004	76258	17	True				
ANR	76501	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	76502	Callee	smart_str_appendc		76258	0					
ANR	76503	Identifier	smart_str_appendc		76258	0					
ANR	76504	ArgumentList	str		76258	1					
ANR	76505	Argument	str		76258	0					
ANR	76506	Identifier	str		76258	0					
ANR	76507	Argument	'('		76258	1					
ANR	76508	PrimaryExpression	'('		76258	0					
ANR	76509	ExpressionStatement	"zend_ast_export_ex ( str , decl -> child [ 0 ] , 0 , indent )"	1016:3:26009:26059	76258	18	True				
ANR	76510	CallExpression	"zend_ast_export_ex ( str , decl -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	76511	Callee	zend_ast_export_ex		76258	0					
ANR	76512	Identifier	zend_ast_export_ex		76258	0					
ANR	76513	ArgumentList	str		76258	1					
ANR	76514	Argument	str		76258	0					
ANR	76515	Identifier	str		76258	0					
ANR	76516	Argument	decl -> child [ 0 ]		76258	1					
ANR	76517	ArrayIndexing	decl -> child [ 0 ]		76258	0					
ANR	76518	PtrMemberAccess	decl -> child		76258	0					
ANR	76519	Identifier	decl		76258	0					
ANR	76520	Identifier	child		76258	1					
ANR	76521	PrimaryExpression	0		76258	1					
ANR	76522	Argument	0		76258	2					
ANR	76523	PrimaryExpression	0		76258	0					
ANR	76524	Argument	indent		76258	3					
ANR	76525	Identifier	indent		76258	0					
ANR	76526	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1017:3:26064:26091	76258	19	True				
ANR	76527	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	76528	Callee	smart_str_appendc		76258	0					
ANR	76529	Identifier	smart_str_appendc		76258	0					
ANR	76530	ArgumentList	str		76258	1					
ANR	76531	Argument	str		76258	0					
ANR	76532	Identifier	str		76258	0					
ANR	76533	Argument	')'		76258	1					
ANR	76534	PrimaryExpression	')'		76258	0					
ANR	76535	ExpressionStatement	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"	1018:3:26096:26146	76258	20	True				
ANR	76536	CallExpression	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	76537	Callee	zend_ast_export_ex		76258	0					
ANR	76538	Identifier	zend_ast_export_ex		76258	0					
ANR	76539	ArgumentList	str		76258	1					
ANR	76540	Argument	str		76258	0					
ANR	76541	Identifier	str		76258	0					
ANR	76542	Argument	decl -> child [ 1 ]		76258	1					
ANR	76543	ArrayIndexing	decl -> child [ 1 ]		76258	0					
ANR	76544	PtrMemberAccess	decl -> child		76258	0					
ANR	76545	Identifier	decl		76258	0					
ANR	76546	Identifier	child		76258	1					
ANR	76547	PrimaryExpression	1		76258	1					
ANR	76548	Argument	0		76258	2					
ANR	76549	PrimaryExpression	0		76258	0					
ANR	76550	Argument	indent		76258	3					
ANR	76551	Identifier	indent		76258	0					
ANR	76552	IfStatement	if ( decl -> child [ 3 ] )		76258	21					
ANR	76553	Condition	decl -> child [ 3 ]	1019:7:26155:26168	76258	0	True				
ANR	76554	ArrayIndexing	decl -> child [ 3 ]		76258	0					
ANR	76555	PtrMemberAccess	decl -> child		76258	0					
ANR	76556	Identifier	decl		76258	0					
ANR	76557	Identifier	child		76258	1					
ANR	76558	PrimaryExpression	3		76258	1					
ANR	76559	CompoundStatement		52:23:1465:1465	76258	1					
ANR	76560	ExpressionStatement	"smart_str_appends ( str , "": "" )"	1020:4:26177:26205	76258	0	True				
ANR	76561	CallExpression	"smart_str_appends ( str , "": "" )"		76258	0					
ANR	76562	Callee	smart_str_appends		76258	0					
ANR	76563	Identifier	smart_str_appends		76258	0					
ANR	76564	ArgumentList	str		76258	1					
ANR	76565	Argument	str		76258	0					
ANR	76566	Identifier	str		76258	0					
ANR	76567	Argument	""": """		76258	1					
ANR	76568	PrimaryExpression	""": """		76258	0					
ANR	76569	ExpressionStatement	"zend_ast_export_ns_name ( str , decl -> child [ 3 ] , 0 , indent )"	1021:4:26211:26266	76258	1	True				
ANR	76570	CallExpression	"zend_ast_export_ns_name ( str , decl -> child [ 3 ] , 0 , indent )"		76258	0					
ANR	76571	Callee	zend_ast_export_ns_name		76258	0					
ANR	76572	Identifier	zend_ast_export_ns_name		76258	0					
ANR	76573	ArgumentList	str		76258	1					
ANR	76574	Argument	str		76258	0					
ANR	76575	Identifier	str		76258	0					
ANR	76576	Argument	decl -> child [ 3 ]		76258	1					
ANR	76577	ArrayIndexing	decl -> child [ 3 ]		76258	0					
ANR	76578	PtrMemberAccess	decl -> child		76258	0					
ANR	76579	Identifier	decl		76258	0					
ANR	76580	Identifier	child		76258	1					
ANR	76581	PrimaryExpression	3		76258	1					
ANR	76582	Argument	0		76258	2					
ANR	76583	PrimaryExpression	0		76258	0					
ANR	76584	Argument	indent		76258	3					
ANR	76585	Identifier	indent		76258	0					
ANR	76586	IfStatement	if ( decl -> child [ 2 ] )		76258	22					
ANR	76587	Condition	decl -> child [ 2 ]	1023:7:26280:26293	76258	0	True				
ANR	76588	ArrayIndexing	decl -> child [ 2 ]		76258	0					
ANR	76589	PtrMemberAccess	decl -> child		76258	0					
ANR	76590	Identifier	decl		76258	0					
ANR	76591	Identifier	child		76258	1					
ANR	76592	PrimaryExpression	2		76258	1					
ANR	76593	CompoundStatement		56:23:1590:1590	76258	1					
ANR	76594	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1024:4:26302:26332	76258	0	True				
ANR	76595	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		76258	0					
ANR	76596	Callee	smart_str_appends		76258	0					
ANR	76597	Identifier	smart_str_appends		76258	0					
ANR	76598	ArgumentList	str		76258	1					
ANR	76599	Argument	str		76258	0					
ANR	76600	Identifier	str		76258	0					
ANR	76601	Argument	""" {\\n"""		76258	1					
ANR	76602	PrimaryExpression	""" {\\n"""		76258	0					
ANR	76603	ExpressionStatement	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"	1025:4:26338:26391	76258	1	True				
ANR	76604	CallExpression	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"		76258	0					
ANR	76605	Callee	zend_ast_export_stmt		76258	0					
ANR	76606	Identifier	zend_ast_export_stmt		76258	0					
ANR	76607	ArgumentList	str		76258	1					
ANR	76608	Argument	str		76258	0					
ANR	76609	Identifier	str		76258	0					
ANR	76610	Argument	decl -> child [ 2 ]		76258	1					
ANR	76611	ArrayIndexing	decl -> child [ 2 ]		76258	0					
ANR	76612	PtrMemberAccess	decl -> child		76258	0					
ANR	76613	Identifier	decl		76258	0					
ANR	76614	Identifier	child		76258	1					
ANR	76615	PrimaryExpression	2		76258	1					
ANR	76616	Argument	indent + 1		76258	2					
ANR	76617	AdditiveExpression	indent + 1		76258	0		+			
ANR	76618	Identifier	indent		76258	0					
ANR	76619	PrimaryExpression	1		76258	1					
ANR	76620	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1026:4:26397:26432	76258	2	True				
ANR	76621	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	76622	Callee	zend_ast_export_indent		76258	0					
ANR	76623	Identifier	zend_ast_export_indent		76258	0					
ANR	76624	ArgumentList	str		76258	1					
ANR	76625	Argument	str		76258	0					
ANR	76626	Identifier	str		76258	0					
ANR	76627	Argument	indent		76258	1					
ANR	76628	Identifier	indent		76258	0					
ANR	76629	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1027:4:26438:26465	76258	3	True				
ANR	76630	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	76631	Callee	smart_str_appendc		76258	0					
ANR	76632	Identifier	smart_str_appendc		76258	0					
ANR	76633	ArgumentList	str		76258	1					
ANR	76634	Argument	str		76258	0					
ANR	76635	Identifier	str		76258	0					
ANR	76636	Argument	'}'		76258	1					
ANR	76637	PrimaryExpression	'}'		76258	0					
ANR	76638	IfStatement	if ( ast -> kind != ZEND_AST_CLOSURE )		76258	4					
ANR	76639	Condition	ast -> kind != ZEND_AST_CLOSURE	1028:8:26475:26503	76258	0	True				
ANR	76640	EqualityExpression	ast -> kind != ZEND_AST_CLOSURE		76258	0		!=			
ANR	76641	PtrMemberAccess	ast -> kind		76258	0					
ANR	76642	Identifier	ast		76258	0					
ANR	76643	Identifier	kind		76258	1					
ANR	76644	Identifier	ZEND_AST_CLOSURE		76258	1					
ANR	76645	CompoundStatement		61:39:1800:1800	76258	1					
ANR	76646	ExpressionStatement	"smart_str_appendc ( str , '\\n' )"	1029:5:26513:26541	76258	0	True				
ANR	76647	CallExpression	"smart_str_appendc ( str , '\\n' )"		76258	0					
ANR	76648	Callee	smart_str_appendc		76258	0					
ANR	76649	Identifier	smart_str_appendc		76258	0					
ANR	76650	ArgumentList	str		76258	1					
ANR	76651	Argument	str		76258	0					
ANR	76652	Identifier	str		76258	0					
ANR	76653	Argument	'\\n'		76258	1					
ANR	76654	PrimaryExpression	'\\n'		76258	0					
ANR	76655	ElseStatement	else		76258	0					
ANR	76656	CompoundStatement		64:10:1853:1853	76258	0					
ANR	76657	ExpressionStatement	"smart_str_appends ( str , "";\\n"" )"	1032:4:26565:26594	76258	0	True				
ANR	76658	CallExpression	"smart_str_appends ( str , "";\\n"" )"		76258	0					
ANR	76659	Callee	smart_str_appends		76258	0					
ANR	76660	Identifier	smart_str_appends		76258	0					
ANR	76661	ArgumentList	str		76258	1					
ANR	76662	Argument	str		76258	0					
ANR	76663	Identifier	str		76258	0					
ANR	76664	Argument	""";\\n"""		76258	1					
ANR	76665	PrimaryExpression	""";\\n"""		76258	0					
ANR	76666	BreakStatement	break ;	1034:3:26604:26609	76258	23	True				
ANR	76667	Label	case ZEND_AST_CLASS :	1035:2:26613:26632	76258	24	True				
ANR	76668	Identifier	ZEND_AST_CLASS		76258	0					
ANR	76669	ExpressionStatement	decl = ( zend_ast_decl * ) ast	1036:3:26637:26665	76258	25	True				
ANR	76670	AssignmentExpression	decl = ( zend_ast_decl * ) ast		76258	0		=			
ANR	76671	Identifier	decl		76258	0					
ANR	76672	CastExpression	( zend_ast_decl * ) ast		76258	1					
ANR	76673	CastTarget	zend_ast_decl *		76258	0					
ANR	76674	Identifier	ast		76258	1					
ANR	76675	IfStatement	if ( decl -> flags & ZEND_ACC_INTERFACE )		76258	26					
ANR	76676	Condition	decl -> flags & ZEND_ACC_INTERFACE	1037:7:26674:26705	76258	0	True				
ANR	76677	BitAndExpression	decl -> flags & ZEND_ACC_INTERFACE		76258	0		&			
ANR	76678	PtrMemberAccess	decl -> flags		76258	0					
ANR	76679	Identifier	decl		76258	0					
ANR	76680	Identifier	flags		76258	1					
ANR	76681	Identifier	ZEND_ACC_INTERFACE		76258	1					
ANR	76682	CompoundStatement		70:41:2002:2002	76258	1					
ANR	76683	ExpressionStatement	"smart_str_appends ( str , ""interface "" )"	1038:4:26714:26750	76258	0	True				
ANR	76684	CallExpression	"smart_str_appends ( str , ""interface "" )"		76258	0					
ANR	76685	Callee	smart_str_appends		76258	0					
ANR	76686	Identifier	smart_str_appends		76258	0					
ANR	76687	ArgumentList	str		76258	1					
ANR	76688	Argument	str		76258	0					
ANR	76689	Identifier	str		76258	0					
ANR	76690	Argument	"""interface """		76258	1					
ANR	76691	PrimaryExpression	"""interface """		76258	0					
ANR	76692	ElseStatement	else		76258	0					
ANR	76693	IfStatement	if ( decl -> flags & ZEND_ACC_TRAIT )		76258	0					
ANR	76694	Condition	decl -> flags & ZEND_ACC_TRAIT	1039:14:26766:26793	76258	0	True				
ANR	76695	BitAndExpression	decl -> flags & ZEND_ACC_TRAIT		76258	0		&			
ANR	76696	PtrMemberAccess	decl -> flags		76258	0					
ANR	76697	Identifier	decl		76258	0					
ANR	76698	Identifier	flags		76258	1					
ANR	76699	Identifier	ZEND_ACC_TRAIT		76258	1					
ANR	76700	CompoundStatement		72:44:2090:2090	76258	1					
ANR	76701	ExpressionStatement	"smart_str_appends ( str , ""trait "" )"	1040:4:26802:26834	76258	0	True				
ANR	76702	CallExpression	"smart_str_appends ( str , ""trait "" )"		76258	0					
ANR	76703	Callee	smart_str_appends		76258	0					
ANR	76704	Identifier	smart_str_appends		76258	0					
ANR	76705	ArgumentList	str		76258	1					
ANR	76706	Argument	str		76258	0					
ANR	76707	Identifier	str		76258	0					
ANR	76708	Argument	"""trait """		76258	1					
ANR	76709	PrimaryExpression	"""trait """		76258	0					
ANR	76710	ElseStatement	else		76258	0					
ANR	76711	CompoundStatement		74:10:2140:2140	76258	0					
ANR	76712	IfStatement	if ( decl -> flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS )		76258	0					
ANR	76713	Condition	decl -> flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS	1042:8:26856:26901	76258	0	True				
ANR	76714	BitAndExpression	decl -> flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		76258	0		&			
ANR	76715	PtrMemberAccess	decl -> flags		76258	0					
ANR	76716	Identifier	decl		76258	0					
ANR	76717	Identifier	flags		76258	1					
ANR	76718	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		76258	1					
ANR	76719	CompoundStatement		75:56:2198:2198	76258	1					
ANR	76720	ExpressionStatement	"smart_str_appends ( str , ""abstract "" )"	1043:5:26911:26946	76258	0	True				
ANR	76721	CallExpression	"smart_str_appends ( str , ""abstract "" )"		76258	0					
ANR	76722	Callee	smart_str_appends		76258	0					
ANR	76723	Identifier	smart_str_appends		76258	0					
ANR	76724	ArgumentList	str		76258	1					
ANR	76725	Argument	str		76258	0					
ANR	76726	Identifier	str		76258	0					
ANR	76727	Argument	"""abstract """		76258	1					
ANR	76728	PrimaryExpression	"""abstract """		76258	0					
ANR	76729	IfStatement	if ( decl -> flags & ZEND_ACC_FINAL )		76258	1					
ANR	76730	Condition	decl -> flags & ZEND_ACC_FINAL	1045:8:26962:26989	76258	0	True				
ANR	76731	BitAndExpression	decl -> flags & ZEND_ACC_FINAL		76258	0		&			
ANR	76732	PtrMemberAccess	decl -> flags		76258	0					
ANR	76733	Identifier	decl		76258	0					
ANR	76734	Identifier	flags		76258	1					
ANR	76735	Identifier	ZEND_ACC_FINAL		76258	1					
ANR	76736	CompoundStatement		78:38:2286:2286	76258	1					
ANR	76737	ExpressionStatement	"smart_str_appends ( str , ""final "" )"	1046:5:26999:27031	76258	0	True				
ANR	76738	CallExpression	"smart_str_appends ( str , ""final "" )"		76258	0					
ANR	76739	Callee	smart_str_appends		76258	0					
ANR	76740	Identifier	smart_str_appends		76258	0					
ANR	76741	ArgumentList	str		76258	1					
ANR	76742	Argument	str		76258	0					
ANR	76743	Identifier	str		76258	0					
ANR	76744	Argument	"""final """		76258	1					
ANR	76745	PrimaryExpression	"""final """		76258	0					
ANR	76746	ExpressionStatement	"smart_str_appends ( str , ""class "" )"	1048:4:27043:27075	76258	2	True				
ANR	76747	CallExpression	"smart_str_appends ( str , ""class "" )"		76258	0					
ANR	76748	Callee	smart_str_appends		76258	0					
ANR	76749	Identifier	smart_str_appends		76258	0					
ANR	76750	ArgumentList	str		76258	1					
ANR	76751	Argument	str		76258	0					
ANR	76752	Identifier	str		76258	0					
ANR	76753	Argument	"""class """		76258	1					
ANR	76754	PrimaryExpression	"""class """		76258	0					
ANR	76755	ExpressionStatement	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"	1050:3:27085:27151	76258	27	True				
ANR	76756	CallExpression	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"		76258	0					
ANR	76757	Callee	smart_str_appendl		76258	0					
ANR	76758	Identifier	smart_str_appendl		76258	0					
ANR	76759	ArgumentList	str		76258	1					
ANR	76760	Argument	str		76258	0					
ANR	76761	Identifier	str		76258	0					
ANR	76762	Argument	ZSTR_VAL ( decl -> name )		76258	1					
ANR	76763	CallExpression	ZSTR_VAL ( decl -> name )		76258	0					
ANR	76764	Callee	ZSTR_VAL		76258	0					
ANR	76765	Identifier	ZSTR_VAL		76258	0					
ANR	76766	ArgumentList	decl -> name		76258	1					
ANR	76767	Argument	decl -> name		76258	0					
ANR	76768	PtrMemberAccess	decl -> name		76258	0					
ANR	76769	Identifier	decl		76258	0					
ANR	76770	Identifier	name		76258	1					
ANR	76771	Argument	ZSTR_LEN ( decl -> name )		76258	2					
ANR	76772	CallExpression	ZSTR_LEN ( decl -> name )		76258	0					
ANR	76773	Callee	ZSTR_LEN		76258	0					
ANR	76774	Identifier	ZSTR_LEN		76258	0					
ANR	76775	ArgumentList	decl -> name		76258	1					
ANR	76776	Argument	decl -> name		76258	0					
ANR	76777	PtrMemberAccess	decl -> name		76258	0					
ANR	76778	Identifier	decl		76258	0					
ANR	76779	Identifier	name		76258	1					
ANR	76780	IfStatement	if ( decl -> child [ 0 ] )		76258	28					
ANR	76781	Condition	decl -> child [ 0 ]	1051:7:27160:27173	76258	0	True				
ANR	76782	ArrayIndexing	decl -> child [ 0 ]		76258	0					
ANR	76783	PtrMemberAccess	decl -> child		76258	0					
ANR	76784	Identifier	decl		76258	0					
ANR	76785	Identifier	child		76258	1					
ANR	76786	PrimaryExpression	0		76258	1					
ANR	76787	CompoundStatement		84:23:2470:2470	76258	1					
ANR	76788	ExpressionStatement	"smart_str_appends ( str , "" extends "" )"	1052:4:27182:27217	76258	0	True				
ANR	76789	CallExpression	"smart_str_appends ( str , "" extends "" )"		76258	0					
ANR	76790	Callee	smart_str_appends		76258	0					
ANR	76791	Identifier	smart_str_appends		76258	0					
ANR	76792	ArgumentList	str		76258	1					
ANR	76793	Argument	str		76258	0					
ANR	76794	Identifier	str		76258	0					
ANR	76795	Argument	""" extends """		76258	1					
ANR	76796	PrimaryExpression	""" extends """		76258	0					
ANR	76797	ExpressionStatement	"zend_ast_export_ns_name ( str , decl -> child [ 0 ] , 0 , indent )"	1053:4:27223:27278	76258	1	True				
ANR	76798	CallExpression	"zend_ast_export_ns_name ( str , decl -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	76799	Callee	zend_ast_export_ns_name		76258	0					
ANR	76800	Identifier	zend_ast_export_ns_name		76258	0					
ANR	76801	ArgumentList	str		76258	1					
ANR	76802	Argument	str		76258	0					
ANR	76803	Identifier	str		76258	0					
ANR	76804	Argument	decl -> child [ 0 ]		76258	1					
ANR	76805	ArrayIndexing	decl -> child [ 0 ]		76258	0					
ANR	76806	PtrMemberAccess	decl -> child		76258	0					
ANR	76807	Identifier	decl		76258	0					
ANR	76808	Identifier	child		76258	1					
ANR	76809	PrimaryExpression	0		76258	1					
ANR	76810	Argument	0		76258	2					
ANR	76811	PrimaryExpression	0		76258	0					
ANR	76812	Argument	indent		76258	3					
ANR	76813	Identifier	indent		76258	0					
ANR	76814	IfStatement	if ( decl -> child [ 1 ] )		76258	29					
ANR	76815	Condition	decl -> child [ 1 ]	1055:7:27292:27305	76258	0	True				
ANR	76816	ArrayIndexing	decl -> child [ 1 ]		76258	0					
ANR	76817	PtrMemberAccess	decl -> child		76258	0					
ANR	76818	Identifier	decl		76258	0					
ANR	76819	Identifier	child		76258	1					
ANR	76820	PrimaryExpression	1		76258	1					
ANR	76821	CompoundStatement		88:23:2602:2602	76258	1					
ANR	76822	ExpressionStatement	"smart_str_appends ( str , "" implements "" )"	1056:4:27314:27352	76258	0	True				
ANR	76823	CallExpression	"smart_str_appends ( str , "" implements "" )"		76258	0					
ANR	76824	Callee	smart_str_appends		76258	0					
ANR	76825	Identifier	smart_str_appends		76258	0					
ANR	76826	ArgumentList	str		76258	1					
ANR	76827	Argument	str		76258	0					
ANR	76828	Identifier	str		76258	0					
ANR	76829	Argument	""" implements """		76258	1					
ANR	76830	PrimaryExpression	""" implements """		76258	0					
ANR	76831	ExpressionStatement	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"	1057:4:27358:27408	76258	1	True				
ANR	76832	CallExpression	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	76833	Callee	zend_ast_export_ex		76258	0					
ANR	76834	Identifier	zend_ast_export_ex		76258	0					
ANR	76835	ArgumentList	str		76258	1					
ANR	76836	Argument	str		76258	0					
ANR	76837	Identifier	str		76258	0					
ANR	76838	Argument	decl -> child [ 1 ]		76258	1					
ANR	76839	ArrayIndexing	decl -> child [ 1 ]		76258	0					
ANR	76840	PtrMemberAccess	decl -> child		76258	0					
ANR	76841	Identifier	decl		76258	0					
ANR	76842	Identifier	child		76258	1					
ANR	76843	PrimaryExpression	1		76258	1					
ANR	76844	Argument	0		76258	2					
ANR	76845	PrimaryExpression	0		76258	0					
ANR	76846	Argument	indent		76258	3					
ANR	76847	Identifier	indent		76258	0					
ANR	76848	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1059:3:27418:27448	76258	30	True				
ANR	76849	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		76258	0					
ANR	76850	Callee	smart_str_appends		76258	0					
ANR	76851	Identifier	smart_str_appends		76258	0					
ANR	76852	ArgumentList	str		76258	1					
ANR	76853	Argument	str		76258	0					
ANR	76854	Identifier	str		76258	0					
ANR	76855	Argument	""" {\\n"""		76258	1					
ANR	76856	PrimaryExpression	""" {\\n"""		76258	0					
ANR	76857	ExpressionStatement	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"	1060:3:27453:27506	76258	31	True				
ANR	76858	CallExpression	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"		76258	0					
ANR	76859	Callee	zend_ast_export_stmt		76258	0					
ANR	76860	Identifier	zend_ast_export_stmt		76258	0					
ANR	76861	ArgumentList	str		76258	1					
ANR	76862	Argument	str		76258	0					
ANR	76863	Identifier	str		76258	0					
ANR	76864	Argument	decl -> child [ 2 ]		76258	1					
ANR	76865	ArrayIndexing	decl -> child [ 2 ]		76258	0					
ANR	76866	PtrMemberAccess	decl -> child		76258	0					
ANR	76867	Identifier	decl		76258	0					
ANR	76868	Identifier	child		76258	1					
ANR	76869	PrimaryExpression	2		76258	1					
ANR	76870	Argument	indent + 1		76258	2					
ANR	76871	AdditiveExpression	indent + 1		76258	0		+			
ANR	76872	Identifier	indent		76258	0					
ANR	76873	PrimaryExpression	1		76258	1					
ANR	76874	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1061:3:27511:27546	76258	32	True				
ANR	76875	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	76876	Callee	zend_ast_export_indent		76258	0					
ANR	76877	Identifier	zend_ast_export_indent		76258	0					
ANR	76878	ArgumentList	str		76258	1					
ANR	76879	Argument	str		76258	0					
ANR	76880	Identifier	str		76258	0					
ANR	76881	Argument	indent		76258	1					
ANR	76882	Identifier	indent		76258	0					
ANR	76883	ExpressionStatement	"smart_str_appends ( str , ""}\\n"" )"	1062:3:27551:27580	76258	33	True				
ANR	76884	CallExpression	"smart_str_appends ( str , ""}\\n"" )"		76258	0					
ANR	76885	Callee	smart_str_appends		76258	0					
ANR	76886	Identifier	smart_str_appends		76258	0					
ANR	76887	ArgumentList	str		76258	1					
ANR	76888	Argument	str		76258	0					
ANR	76889	Identifier	str		76258	0					
ANR	76890	Argument	"""}\\n"""		76258	1					
ANR	76891	PrimaryExpression	"""}\\n"""		76258	0					
ANR	76892	BreakStatement	break ;	1063:3:27585:27590	76258	34	True				
ANR	76893	Label	case ZEND_AST_ARG_LIST :	1066:2:27614:27636	76258	35	True				
ANR	76894	Identifier	ZEND_AST_ARG_LIST		76258	0					
ANR	76895	Label	case ZEND_AST_EXPR_LIST :	1067:2:27640:27663	76258	36	True				
ANR	76896	Identifier	ZEND_AST_EXPR_LIST		76258	0					
ANR	76897	Label	case ZEND_AST_PARAM_LIST :	1068:2:27667:27691	76258	37	True				
ANR	76898	Identifier	ZEND_AST_PARAM_LIST		76258	0					
ANR	76899	Label	simple_list :	1069:0:27693:27704	76258	38	True				
ANR	76900	Identifier	simple_list		76258	0					
ANR	76901	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"	1070:3:27709:27770	76258	39	True				
ANR	76902	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"		76258	0					
ANR	76903	Callee	zend_ast_export_list		76258	0					
ANR	76904	Identifier	zend_ast_export_list		76258	0					
ANR	76905	ArgumentList	str		76258	1					
ANR	76906	Argument	str		76258	0					
ANR	76907	Identifier	str		76258	0					
ANR	76908	Argument	( zend_ast_list * ) ast		76258	1					
ANR	76909	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	76910	CastTarget	zend_ast_list *		76258	0					
ANR	76911	Identifier	ast		76258	1					
ANR	76912	Argument	1		76258	2					
ANR	76913	PrimaryExpression	1		76258	0					
ANR	76914	Argument	20		76258	3					
ANR	76915	PrimaryExpression	20		76258	0					
ANR	76916	Argument	indent		76258	4					
ANR	76917	Identifier	indent		76258	0					
ANR	76918	BreakStatement	break ;	1071:3:27775:27780	76258	40	True				
ANR	76919	Label	case ZEND_AST_LIST :	1072:2:27784:27802	76258	41	True				
ANR	76920	Identifier	ZEND_AST_LIST		76258	0					
ANR	76921	ExpressionStatement	"smart_str_appends ( str , ""list("" )"	1073:3:27807:27838	76258	42	True				
ANR	76922	CallExpression	"smart_str_appends ( str , ""list("" )"		76258	0					
ANR	76923	Callee	smart_str_appends		76258	0					
ANR	76924	Identifier	smart_str_appends		76258	0					
ANR	76925	ArgumentList	str		76258	1					
ANR	76926	Argument	str		76258	0					
ANR	76927	Identifier	str		76258	0					
ANR	76928	Argument	"""list("""		76258	1					
ANR	76929	PrimaryExpression	"""list("""		76258	0					
ANR	76930	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"	1074:3:27843:27904	76258	43	True				
ANR	76931	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"		76258	0					
ANR	76932	Callee	zend_ast_export_list		76258	0					
ANR	76933	Identifier	zend_ast_export_list		76258	0					
ANR	76934	ArgumentList	str		76258	1					
ANR	76935	Argument	str		76258	0					
ANR	76936	Identifier	str		76258	0					
ANR	76937	Argument	( zend_ast_list * ) ast		76258	1					
ANR	76938	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	76939	CastTarget	zend_ast_list *		76258	0					
ANR	76940	Identifier	ast		76258	1					
ANR	76941	Argument	1		76258	2					
ANR	76942	PrimaryExpression	1		76258	0					
ANR	76943	Argument	20		76258	3					
ANR	76944	PrimaryExpression	20		76258	0					
ANR	76945	Argument	indent		76258	4					
ANR	76946	Identifier	indent		76258	0					
ANR	76947	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1075:3:27909:27936	76258	44	True				
ANR	76948	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	76949	Callee	smart_str_appendc		76258	0					
ANR	76950	Identifier	smart_str_appendc		76258	0					
ANR	76951	ArgumentList	str		76258	1					
ANR	76952	Argument	str		76258	0					
ANR	76953	Identifier	str		76258	0					
ANR	76954	Argument	')'		76258	1					
ANR	76955	PrimaryExpression	')'		76258	0					
ANR	76956	BreakStatement	break ;	1076:3:27941:27946	76258	45	True				
ANR	76957	Label	case ZEND_AST_ARRAY :	1077:2:27950:27969	76258	46	True				
ANR	76958	Identifier	ZEND_AST_ARRAY		76258	0					
ANR	76959	ExpressionStatement	"smart_str_appendc ( str , '[' )"	1078:3:27974:28001	76258	47	True				
ANR	76960	CallExpression	"smart_str_appendc ( str , '[' )"		76258	0					
ANR	76961	Callee	smart_str_appendc		76258	0					
ANR	76962	Identifier	smart_str_appendc		76258	0					
ANR	76963	ArgumentList	str		76258	1					
ANR	76964	Argument	str		76258	0					
ANR	76965	Identifier	str		76258	0					
ANR	76966	Argument	'['		76258	1					
ANR	76967	PrimaryExpression	'['		76258	0					
ANR	76968	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"	1079:3:28006:28067	76258	48	True				
ANR	76969	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"		76258	0					
ANR	76970	Callee	zend_ast_export_list		76258	0					
ANR	76971	Identifier	zend_ast_export_list		76258	0					
ANR	76972	ArgumentList	str		76258	1					
ANR	76973	Argument	str		76258	0					
ANR	76974	Identifier	str		76258	0					
ANR	76975	Argument	( zend_ast_list * ) ast		76258	1					
ANR	76976	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	76977	CastTarget	zend_ast_list *		76258	0					
ANR	76978	Identifier	ast		76258	1					
ANR	76979	Argument	1		76258	2					
ANR	76980	PrimaryExpression	1		76258	0					
ANR	76981	Argument	20		76258	3					
ANR	76982	PrimaryExpression	20		76258	0					
ANR	76983	Argument	indent		76258	4					
ANR	76984	Identifier	indent		76258	0					
ANR	76985	ExpressionStatement	"smart_str_appendc ( str , ']' )"	1080:3:28072:28099	76258	49	True				
ANR	76986	CallExpression	"smart_str_appendc ( str , ']' )"		76258	0					
ANR	76987	Callee	smart_str_appendc		76258	0					
ANR	76988	Identifier	smart_str_appendc		76258	0					
ANR	76989	ArgumentList	str		76258	1					
ANR	76990	Argument	str		76258	0					
ANR	76991	Identifier	str		76258	0					
ANR	76992	Argument	']'		76258	1					
ANR	76993	PrimaryExpression	']'		76258	0					
ANR	76994	BreakStatement	break ;	1081:3:28104:28109	76258	50	True				
ANR	76995	Label	case ZEND_AST_ENCAPS_LIST :	1082:2:28113:28138	76258	51	True				
ANR	76996	Identifier	ZEND_AST_ENCAPS_LIST		76258	0					
ANR	76997	ExpressionStatement	"smart_str_appendc ( str , '""' )"	1083:3:28143:28170	76258	52	True				
ANR	76998	CallExpression	"smart_str_appendc ( str , '""' )"		76258	0					
ANR	76999	Callee	smart_str_appendc		76258	0					
ANR	77000	Identifier	smart_str_appendc		76258	0					
ANR	77001	ArgumentList	str		76258	1					
ANR	77002	Argument	str		76258	0					
ANR	77003	Identifier	str		76258	0					
ANR	77004	Argument	"'""'"		76258	1					
ANR	77005	PrimaryExpression	"'""'"		76258	0					
ANR	77006	ExpressionStatement	"zend_ast_export_encaps_list ( str , '""' , ( zend_ast_list * ) ast , indent )"	1084:3:28175:28241	76258	53	True				
ANR	77007	CallExpression	"zend_ast_export_encaps_list ( str , '""' , ( zend_ast_list * ) ast , indent )"		76258	0					
ANR	77008	Callee	zend_ast_export_encaps_list		76258	0					
ANR	77009	Identifier	zend_ast_export_encaps_list		76258	0					
ANR	77010	ArgumentList	str		76258	1					
ANR	77011	Argument	str		76258	0					
ANR	77012	Identifier	str		76258	0					
ANR	77013	Argument	"'""'"		76258	1					
ANR	77014	PrimaryExpression	"'""'"		76258	0					
ANR	77015	Argument	( zend_ast_list * ) ast		76258	2					
ANR	77016	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	77017	CastTarget	zend_ast_list *		76258	0					
ANR	77018	Identifier	ast		76258	1					
ANR	77019	Argument	indent		76258	3					
ANR	77020	Identifier	indent		76258	0					
ANR	77021	ExpressionStatement	"smart_str_appendc ( str , '""' )"	1085:3:28246:28273	76258	54	True				
ANR	77022	CallExpression	"smart_str_appendc ( str , '""' )"		76258	0					
ANR	77023	Callee	smart_str_appendc		76258	0					
ANR	77024	Identifier	smart_str_appendc		76258	0					
ANR	77025	ArgumentList	str		76258	1					
ANR	77026	Argument	str		76258	0					
ANR	77027	Identifier	str		76258	0					
ANR	77028	Argument	"'""'"		76258	1					
ANR	77029	PrimaryExpression	"'""'"		76258	0					
ANR	77030	BreakStatement	break ;	1086:3:28278:28283	76258	55	True				
ANR	77031	Label	case ZEND_AST_STMT_LIST :	1087:2:28287:28310	76258	56	True				
ANR	77032	Identifier	ZEND_AST_STMT_LIST		76258	0					
ANR	77033	Label	case ZEND_AST_TRAIT_ADAPTATIONS :	1088:2:28314:28345	76258	57	True				
ANR	77034	Identifier	ZEND_AST_TRAIT_ADAPTATIONS		76258	0					
ANR	77035	ExpressionStatement	"zend_ast_export_stmt ( str , ast , indent )"	1089:3:28350:28388	76258	58	True				
ANR	77036	CallExpression	"zend_ast_export_stmt ( str , ast , indent )"		76258	0					
ANR	77037	Callee	zend_ast_export_stmt		76258	0					
ANR	77038	Identifier	zend_ast_export_stmt		76258	0					
ANR	77039	ArgumentList	str		76258	1					
ANR	77040	Argument	str		76258	0					
ANR	77041	Identifier	str		76258	0					
ANR	77042	Argument	ast		76258	1					
ANR	77043	Identifier	ast		76258	0					
ANR	77044	Argument	indent		76258	2					
ANR	77045	Identifier	indent		76258	0					
ANR	77046	BreakStatement	break ;	1090:3:28393:28398	76258	59	True				
ANR	77047	Label	case ZEND_AST_IF :	1091:2:28402:28418	76258	60	True				
ANR	77048	Identifier	ZEND_AST_IF		76258	0					
ANR	77049	ExpressionStatement	"zend_ast_export_if_stmt ( str , ( zend_ast_list * ) ast , indent )"	1092:3:28423:28480	76258	61	True				
ANR	77050	CallExpression	"zend_ast_export_if_stmt ( str , ( zend_ast_list * ) ast , indent )"		76258	0					
ANR	77051	Callee	zend_ast_export_if_stmt		76258	0					
ANR	77052	Identifier	zend_ast_export_if_stmt		76258	0					
ANR	77053	ArgumentList	str		76258	1					
ANR	77054	Argument	str		76258	0					
ANR	77055	Identifier	str		76258	0					
ANR	77056	Argument	( zend_ast_list * ) ast		76258	1					
ANR	77057	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	77058	CastTarget	zend_ast_list *		76258	0					
ANR	77059	Identifier	ast		76258	1					
ANR	77060	Argument	indent		76258	2					
ANR	77061	Identifier	indent		76258	0					
ANR	77062	BreakStatement	break ;	1093:3:28485:28490	76258	62	True				
ANR	77063	Label	case ZEND_AST_SWITCH_LIST :	1094:2:28494:28519	76258	63	True				
ANR	77064	Identifier	ZEND_AST_SWITCH_LIST		76258	0					
ANR	77065	Label	case ZEND_AST_CATCH_LIST :	1095:2:28523:28547	76258	64	True				
ANR	77066	Identifier	ZEND_AST_CATCH_LIST		76258	0					
ANR	77067	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 0 , 0 , indent )"	1096:3:28552:28612	76258	65	True				
ANR	77068	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 0 , 0 , indent )"		76258	0					
ANR	77069	Callee	zend_ast_export_list		76258	0					
ANR	77070	Identifier	zend_ast_export_list		76258	0					
ANR	77071	ArgumentList	str		76258	1					
ANR	77072	Argument	str		76258	0					
ANR	77073	Identifier	str		76258	0					
ANR	77074	Argument	( zend_ast_list * ) ast		76258	1					
ANR	77075	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	77076	CastTarget	zend_ast_list *		76258	0					
ANR	77077	Identifier	ast		76258	1					
ANR	77078	Argument	0		76258	2					
ANR	77079	PrimaryExpression	0		76258	0					
ANR	77080	Argument	0		76258	3					
ANR	77081	PrimaryExpression	0		76258	0					
ANR	77082	Argument	indent		76258	4					
ANR	77083	Identifier	indent		76258	0					
ANR	77084	BreakStatement	break ;	1097:3:28617:28622	76258	66	True				
ANR	77085	Label	case ZEND_AST_CLOSURE_USES :	1098:2:28626:28652	76258	67	True				
ANR	77086	Identifier	ZEND_AST_CLOSURE_USES		76258	0					
ANR	77087	ExpressionStatement	"smart_str_appends ( str , "" use("" )"	1099:3:28657:28688	76258	68	True				
ANR	77088	CallExpression	"smart_str_appends ( str , "" use("" )"		76258	0					
ANR	77089	Callee	smart_str_appends		76258	0					
ANR	77090	Identifier	smart_str_appends		76258	0					
ANR	77091	ArgumentList	str		76258	1					
ANR	77092	Argument	str		76258	0					
ANR	77093	Identifier	str		76258	0					
ANR	77094	Argument	""" use("""		76258	1					
ANR	77095	PrimaryExpression	""" use("""		76258	0					
ANR	77096	ExpressionStatement	"zend_ast_export_var_list ( str , ( zend_ast_list * ) ast , indent )"	1100:3:28693:28751	76258	69	True				
ANR	77097	CallExpression	"zend_ast_export_var_list ( str , ( zend_ast_list * ) ast , indent )"		76258	0					
ANR	77098	Callee	zend_ast_export_var_list		76258	0					
ANR	77099	Identifier	zend_ast_export_var_list		76258	0					
ANR	77100	ArgumentList	str		76258	1					
ANR	77101	Argument	str		76258	0					
ANR	77102	Identifier	str		76258	0					
ANR	77103	Argument	( zend_ast_list * ) ast		76258	1					
ANR	77104	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	77105	CastTarget	zend_ast_list *		76258	0					
ANR	77106	Identifier	ast		76258	1					
ANR	77107	Argument	indent		76258	2					
ANR	77108	Identifier	indent		76258	0					
ANR	77109	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1101:3:28756:28783	76258	70	True				
ANR	77110	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	77111	Callee	smart_str_appendc		76258	0					
ANR	77112	Identifier	smart_str_appendc		76258	0					
ANR	77113	ArgumentList	str		76258	1					
ANR	77114	Argument	str		76258	0					
ANR	77115	Identifier	str		76258	0					
ANR	77116	Argument	')'		76258	1					
ANR	77117	PrimaryExpression	')'		76258	0					
ANR	77118	BreakStatement	break ;	1102:3:28788:28793	76258	71	True				
ANR	77119	Label	case ZEND_AST_PROP_DECL :	1103:2:28797:28820	76258	72	True				
ANR	77120	Identifier	ZEND_AST_PROP_DECL		76258	0					
ANR	77121	IfStatement	if ( ast -> attr & ZEND_ACC_PUBLIC )		76258	73					
ANR	77122	Condition	ast -> attr & ZEND_ACC_PUBLIC	1104:7:28829:28855	76258	0	True				
ANR	77123	BitAndExpression	ast -> attr & ZEND_ACC_PUBLIC		76258	0		&			
ANR	77124	PtrMemberAccess	ast -> attr		76258	0					
ANR	77125	Identifier	ast		76258	0					
ANR	77126	Identifier	attr		76258	1					
ANR	77127	Identifier	ZEND_ACC_PUBLIC		76258	1					
ANR	77128	CompoundStatement		137:36:4152:4152	76258	1					
ANR	77129	ExpressionStatement	"smart_str_appends ( str , ""public "" )"	1105:4:28864:28897	76258	0	True				
ANR	77130	CallExpression	"smart_str_appends ( str , ""public "" )"		76258	0					
ANR	77131	Callee	smart_str_appends		76258	0					
ANR	77132	Identifier	smart_str_appends		76258	0					
ANR	77133	ArgumentList	str		76258	1					
ANR	77134	Argument	str		76258	0					
ANR	77135	Identifier	str		76258	0					
ANR	77136	Argument	"""public """		76258	1					
ANR	77137	PrimaryExpression	"""public """		76258	0					
ANR	77138	ElseStatement	else		76258	0					
ANR	77139	IfStatement	if ( ast -> attr & ZEND_ACC_PROTECTED )		76258	0					
ANR	77140	Condition	ast -> attr & ZEND_ACC_PROTECTED	1106:14:28913:28942	76258	0	True				
ANR	77141	BitAndExpression	ast -> attr & ZEND_ACC_PROTECTED		76258	0		&			
ANR	77142	PtrMemberAccess	ast -> attr		76258	0					
ANR	77143	Identifier	ast		76258	0					
ANR	77144	Identifier	attr		76258	1					
ANR	77145	Identifier	ZEND_ACC_PROTECTED		76258	1					
ANR	77146	CompoundStatement		139:46:4239:4239	76258	1					
ANR	77147	ExpressionStatement	"smart_str_appends ( str , ""protected "" )"	1107:4:28951:28987	76258	0	True				
ANR	77148	CallExpression	"smart_str_appends ( str , ""protected "" )"		76258	0					
ANR	77149	Callee	smart_str_appends		76258	0					
ANR	77150	Identifier	smart_str_appends		76258	0					
ANR	77151	ArgumentList	str		76258	1					
ANR	77152	Argument	str		76258	0					
ANR	77153	Identifier	str		76258	0					
ANR	77154	Argument	"""protected """		76258	1					
ANR	77155	PrimaryExpression	"""protected """		76258	0					
ANR	77156	ElseStatement	else		76258	0					
ANR	77157	IfStatement	if ( ast -> attr & ZEND_ACC_PRIVATE )		76258	0					
ANR	77158	Condition	ast -> attr & ZEND_ACC_PRIVATE	1108:14:29003:29030	76258	0	True				
ANR	77159	BitAndExpression	ast -> attr & ZEND_ACC_PRIVATE		76258	0		&			
ANR	77160	PtrMemberAccess	ast -> attr		76258	0					
ANR	77161	Identifier	ast		76258	0					
ANR	77162	Identifier	attr		76258	1					
ANR	77163	Identifier	ZEND_ACC_PRIVATE		76258	1					
ANR	77164	CompoundStatement		141:44:4327:4327	76258	1					
ANR	77165	ExpressionStatement	"smart_str_appends ( str , ""private "" )"	1109:4:29039:29073	76258	0	True				
ANR	77166	CallExpression	"smart_str_appends ( str , ""private "" )"		76258	0					
ANR	77167	Callee	smart_str_appends		76258	0					
ANR	77168	Identifier	smart_str_appends		76258	0					
ANR	77169	ArgumentList	str		76258	1					
ANR	77170	Argument	str		76258	0					
ANR	77171	Identifier	str		76258	0					
ANR	77172	Argument	"""private """		76258	1					
ANR	77173	PrimaryExpression	"""private """		76258	0					
ANR	77174	IfStatement	if ( ast -> attr & ZEND_ACC_STATIC )		76258	74					
ANR	77175	Condition	ast -> attr & ZEND_ACC_STATIC	1111:7:29087:29113	76258	0	True				
ANR	77176	BitAndExpression	ast -> attr & ZEND_ACC_STATIC		76258	0		&			
ANR	77177	PtrMemberAccess	ast -> attr		76258	0					
ANR	77178	Identifier	ast		76258	0					
ANR	77179	Identifier	attr		76258	1					
ANR	77180	Identifier	ZEND_ACC_STATIC		76258	1					
ANR	77181	CompoundStatement		144:36:4410:4410	76258	1					
ANR	77182	ExpressionStatement	"smart_str_appends ( str , ""static "" )"	1112:4:29122:29155	76258	0	True				
ANR	77183	CallExpression	"smart_str_appends ( str , ""static "" )"		76258	0					
ANR	77184	Callee	smart_str_appends		76258	0					
ANR	77185	Identifier	smart_str_appends		76258	0					
ANR	77186	ArgumentList	str		76258	1					
ANR	77187	Argument	str		76258	0					
ANR	77188	Identifier	str		76258	0					
ANR	77189	Argument	"""static """		76258	1					
ANR	77190	PrimaryExpression	"""static """		76258	0					
ANR	77191	GotoStatement	goto simple_list ;	1114:3:29165:29181	76258	75	True				
ANR	77192	Identifier	simple_list		76258	0					
ANR	77193	Label	case ZEND_AST_CONST_DECL :	1115:2:29185:29209	76258	76	True				
ANR	77194	Identifier	ZEND_AST_CONST_DECL		76258	0					
ANR	77195	Label	case ZEND_AST_CLASS_CONST_DECL :	1116:2:29213:29243	76258	77	True				
ANR	77196	Identifier	ZEND_AST_CLASS_CONST_DECL		76258	0					
ANR	77197	ExpressionStatement	"smart_str_appends ( str , ""const "" )"	1117:3:29248:29280	76258	78	True				
ANR	77198	CallExpression	"smart_str_appends ( str , ""const "" )"		76258	0					
ANR	77199	Callee	smart_str_appends		76258	0					
ANR	77200	Identifier	smart_str_appends		76258	0					
ANR	77201	ArgumentList	str		76258	1					
ANR	77202	Argument	str		76258	0					
ANR	77203	Identifier	str		76258	0					
ANR	77204	Argument	"""const """		76258	1					
ANR	77205	PrimaryExpression	"""const """		76258	0					
ANR	77206	GotoStatement	goto simple_list ;	1118:3:29285:29301	76258	79	True				
ANR	77207	Identifier	simple_list		76258	0					
ANR	77208	Label	case ZEND_AST_NAME_LIST :	1119:2:29305:29328	76258	80	True				
ANR	77209	Identifier	ZEND_AST_NAME_LIST		76258	0					
ANR	77210	ExpressionStatement	"zend_ast_export_name_list ( str , ( zend_ast_list * ) ast , indent )"	1120:3:29333:29392	76258	81	True				
ANR	77211	CallExpression	"zend_ast_export_name_list ( str , ( zend_ast_list * ) ast , indent )"		76258	0					
ANR	77212	Callee	zend_ast_export_name_list		76258	0					
ANR	77213	Identifier	zend_ast_export_name_list		76258	0					
ANR	77214	ArgumentList	str		76258	1					
ANR	77215	Argument	str		76258	0					
ANR	77216	Identifier	str		76258	0					
ANR	77217	Argument	( zend_ast_list * ) ast		76258	1					
ANR	77218	CastExpression	( zend_ast_list * ) ast		76258	0					
ANR	77219	CastTarget	zend_ast_list *		76258	0					
ANR	77220	Identifier	ast		76258	1					
ANR	77221	Argument	indent		76258	2					
ANR	77222	Identifier	indent		76258	0					
ANR	77223	BreakStatement	break ;	1121:3:29397:29402	76258	82	True				
ANR	77224	Label	case ZEND_AST_USE :	1122:2:29406:29423	76258	83	True				
ANR	77225	Identifier	ZEND_AST_USE		76258	0					
ANR	77226	ExpressionStatement	"smart_str_appends ( str , ""use "" )"	1123:3:29428:29458	76258	84	True				
ANR	77227	CallExpression	"smart_str_appends ( str , ""use "" )"		76258	0					
ANR	77228	Callee	smart_str_appends		76258	0					
ANR	77229	Identifier	smart_str_appends		76258	0					
ANR	77230	ArgumentList	str		76258	1					
ANR	77231	Argument	str		76258	0					
ANR	77232	Identifier	str		76258	0					
ANR	77233	Argument	"""use """		76258	1					
ANR	77234	PrimaryExpression	"""use """		76258	0					
ANR	77235	IfStatement	if ( ast -> attr == T_FUNCTION )		76258	85					
ANR	77236	Condition	ast -> attr == T_FUNCTION	1124:7:29467:29489	76258	0	True				
ANR	77237	EqualityExpression	ast -> attr == T_FUNCTION		76258	0		==			
ANR	77238	PtrMemberAccess	ast -> attr		76258	0					
ANR	77239	Identifier	ast		76258	0					
ANR	77240	Identifier	attr		76258	1					
ANR	77241	Identifier	T_FUNCTION		76258	1					
ANR	77242	CompoundStatement		157:32:4786:4786	76258	1					
ANR	77243	ExpressionStatement	"smart_str_appends ( str , ""function "" )"	1125:4:29498:29533	76258	0	True				
ANR	77244	CallExpression	"smart_str_appends ( str , ""function "" )"		76258	0					
ANR	77245	Callee	smart_str_appends		76258	0					
ANR	77246	Identifier	smart_str_appends		76258	0					
ANR	77247	ArgumentList	str		76258	1					
ANR	77248	Argument	str		76258	0					
ANR	77249	Identifier	str		76258	0					
ANR	77250	Argument	"""function """		76258	1					
ANR	77251	PrimaryExpression	"""function """		76258	0					
ANR	77252	ElseStatement	else		76258	0					
ANR	77253	IfStatement	if ( ast -> attr == T_CONST )		76258	0					
ANR	77254	Condition	ast -> attr == T_CONST	1126:14:29549:29568	76258	0	True				
ANR	77255	EqualityExpression	ast -> attr == T_CONST		76258	0		==			
ANR	77256	PtrMemberAccess	ast -> attr		76258	0					
ANR	77257	Identifier	ast		76258	0					
ANR	77258	Identifier	attr		76258	1					
ANR	77259	Identifier	T_CONST		76258	1					
ANR	77260	CompoundStatement		159:36:4865:4865	76258	1					
ANR	77261	ExpressionStatement	"smart_str_appends ( str , ""const "" )"	1127:4:29577:29609	76258	0	True				
ANR	77262	CallExpression	"smart_str_appends ( str , ""const "" )"		76258	0					
ANR	77263	Callee	smart_str_appends		76258	0					
ANR	77264	Identifier	smart_str_appends		76258	0					
ANR	77265	ArgumentList	str		76258	1					
ANR	77266	Argument	str		76258	0					
ANR	77267	Identifier	str		76258	0					
ANR	77268	Argument	"""const """		76258	1					
ANR	77269	PrimaryExpression	"""const """		76258	0					
ANR	77270	GotoStatement	goto simple_list ;	1129:3:29619:29635	76258	86	True				
ANR	77271	Identifier	simple_list		76258	0					
ANR	77272	Label	case ZEND_AST_MAGIC_CONST :	1132:2:29662:29687	76258	87	True				
ANR	77273	Identifier	ZEND_AST_MAGIC_CONST		76258	0					
ANR	77274	SwitchStatement	switch ( ast -> attr )		76258	88					
ANR	77275	Condition	ast -> attr	1133:11:29700:29708	76258	0	True				
ANR	77276	PtrMemberAccess	ast -> attr		76258	0					
ANR	77277	Identifier	ast		76258	0					
ANR	77278	Identifier	attr		76258	1					
ANR	77279	CompoundStatement		166:22:5005:5005	76258	1					
ANR	77280	Label	case T_LINE :	1134:4:29717:29728	76258	0	True				
ANR	77281	Identifier	T_LINE		76258	0					
ANR	77282	ExpressionStatement	"APPEND_STR ( ""__LINE__"" )"	1134:21:29734:29756	76258	1	True				
ANR	77283	CallExpression	"APPEND_STR ( ""__LINE__"" )"		76258	0					
ANR	77284	Callee	APPEND_STR		76258	0					
ANR	77285	Identifier	APPEND_STR		76258	0					
ANR	77286	ArgumentList	"""__LINE__"""		76258	1					
ANR	77287	Argument	"""__LINE__"""		76258	0					
ANR	77288	PrimaryExpression	"""__LINE__"""		76258	0					
ANR	77289	Label	case T_FILE :	1135:4:29762:29773	76258	2	True				
ANR	77290	Identifier	T_FILE		76258	0					
ANR	77291	ExpressionStatement	"APPEND_STR ( ""__FILE__"" )"	1135:21:29779:29801	76258	3	True				
ANR	77292	CallExpression	"APPEND_STR ( ""__FILE__"" )"		76258	0					
ANR	77293	Callee	APPEND_STR		76258	0					
ANR	77294	Identifier	APPEND_STR		76258	0					
ANR	77295	ArgumentList	"""__FILE__"""		76258	1					
ANR	77296	Argument	"""__FILE__"""		76258	0					
ANR	77297	PrimaryExpression	"""__FILE__"""		76258	0					
ANR	77298	Label	case T_DIR :	1136:4:29807:29817	76258	4	True				
ANR	77299	Identifier	T_DIR		76258	0					
ANR	77300	ExpressionStatement	"APPEND_STR ( ""__DIR__"" )"	1136:21:29824:29845	76258	5	True				
ANR	77301	CallExpression	"APPEND_STR ( ""__DIR__"" )"		76258	0					
ANR	77302	Callee	APPEND_STR		76258	0					
ANR	77303	Identifier	APPEND_STR		76258	0					
ANR	77304	ArgumentList	"""__DIR__"""		76258	1					
ANR	77305	Argument	"""__DIR__"""		76258	0					
ANR	77306	PrimaryExpression	"""__DIR__"""		76258	0					
ANR	77307	Label	case T_TRAIT_C :	1137:4:29851:29865	76258	6	True				
ANR	77308	Identifier	T_TRAIT_C		76258	0					
ANR	77309	ExpressionStatement	"APPEND_STR ( ""__TRAIT__"" )"	1137:21:29868:29891	76258	7	True				
ANR	77310	CallExpression	"APPEND_STR ( ""__TRAIT__"" )"		76258	0					
ANR	77311	Callee	APPEND_STR		76258	0					
ANR	77312	Identifier	APPEND_STR		76258	0					
ANR	77313	ArgumentList	"""__TRAIT__"""		76258	1					
ANR	77314	Argument	"""__TRAIT__"""		76258	0					
ANR	77315	PrimaryExpression	"""__TRAIT__"""		76258	0					
ANR	77316	Label	case T_METHOD_C :	1138:4:29897:29912	76258	8	True				
ANR	77317	Identifier	T_METHOD_C		76258	0					
ANR	77318	ExpressionStatement	"APPEND_STR ( ""__METHOD__"" )"	1138:21:29914:29938	76258	9	True				
ANR	77319	CallExpression	"APPEND_STR ( ""__METHOD__"" )"		76258	0					
ANR	77320	Callee	APPEND_STR		76258	0					
ANR	77321	Identifier	APPEND_STR		76258	0					
ANR	77322	ArgumentList	"""__METHOD__"""		76258	1					
ANR	77323	Argument	"""__METHOD__"""		76258	0					
ANR	77324	PrimaryExpression	"""__METHOD__"""		76258	0					
ANR	77325	Label	case T_FUNC_C :	1139:4:29944:29957	76258	10	True				
ANR	77326	Identifier	T_FUNC_C		76258	0					
ANR	77327	ExpressionStatement	"APPEND_STR ( ""__FUNCTION__"" )"	1139:21:29961:29987	76258	11	True				
ANR	77328	CallExpression	"APPEND_STR ( ""__FUNCTION__"" )"		76258	0					
ANR	77329	Callee	APPEND_STR		76258	0					
ANR	77330	Identifier	APPEND_STR		76258	0					
ANR	77331	ArgumentList	"""__FUNCTION__"""		76258	1					
ANR	77332	Argument	"""__FUNCTION__"""		76258	0					
ANR	77333	PrimaryExpression	"""__FUNCTION__"""		76258	0					
ANR	77334	Label	case T_NS_C :	1140:4:29993:30004	76258	12	True				
ANR	77335	Identifier	T_NS_C		76258	0					
ANR	77336	ExpressionStatement	"APPEND_STR ( ""__NAMESPACE__"" )"	1140:21:30010:30037	76258	13	True				
ANR	77337	CallExpression	"APPEND_STR ( ""__NAMESPACE__"" )"		76258	0					
ANR	77338	Callee	APPEND_STR		76258	0					
ANR	77339	Identifier	APPEND_STR		76258	0					
ANR	77340	ArgumentList	"""__NAMESPACE__"""		76258	1					
ANR	77341	Argument	"""__NAMESPACE__"""		76258	0					
ANR	77342	PrimaryExpression	"""__NAMESPACE__"""		76258	0					
ANR	77343	Label	case T_CLASS_C :	1141:4:30043:30057	76258	14	True				
ANR	77344	Identifier	T_CLASS_C		76258	0					
ANR	77345	ExpressionStatement	"APPEND_STR ( ""__CLASS__"" )"	1141:21:30060:30083	76258	15	True				
ANR	77346	CallExpression	"APPEND_STR ( ""__CLASS__"" )"		76258	0					
ANR	77347	Callee	APPEND_STR		76258	0					
ANR	77348	Identifier	APPEND_STR		76258	0					
ANR	77349	ArgumentList	"""__CLASS__"""		76258	1					
ANR	77350	Argument	"""__CLASS__"""		76258	0					
ANR	77351	PrimaryExpression	"""__CLASS__"""		76258	0					
ANR	77352	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1142:4:30089:30116	76258	16	True				
ANR	77353	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	77354	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77355	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77356	ArgumentList			76258	1					
ANR	77357	BreakStatement	break ;	1144:3:30126:30131	76258	89	True				
ANR	77358	Label	case ZEND_AST_TYPE :	1145:2:30135:30153	76258	90	True				
ANR	77359	Identifier	ZEND_AST_TYPE		76258	0					
ANR	77360	SwitchStatement	switch ( ast -> attr )		76258	91					
ANR	77361	Condition	ast -> attr	1146:11:30166:30174	76258	0	True				
ANR	77362	PtrMemberAccess	ast -> attr		76258	0					
ANR	77363	Identifier	ast		76258	0					
ANR	77364	Identifier	attr		76258	1					
ANR	77365	CompoundStatement		179:22:5471:5471	76258	1					
ANR	77366	Label	case IS_ARRAY :	1147:4:30183:30196	76258	0	True				
ANR	77367	Identifier	IS_ARRAY		76258	0					
ANR	77368	ExpressionStatement	"APPEND_STR ( ""array"" )"	1147:22:30201:30220	76258	1	True				
ANR	77369	CallExpression	"APPEND_STR ( ""array"" )"		76258	0					
ANR	77370	Callee	APPEND_STR		76258	0					
ANR	77371	Identifier	APPEND_STR		76258	0					
ANR	77372	ArgumentList	"""array"""		76258	1					
ANR	77373	Argument	"""array"""		76258	0					
ANR	77374	PrimaryExpression	"""array"""		76258	0					
ANR	77375	Label	case IS_CALLABLE :	1148:4:30226:30242	76258	2	True				
ANR	77376	Identifier	IS_CALLABLE		76258	0					
ANR	77377	ExpressionStatement	"APPEND_STR ( ""callable"" )"	1148:22:30244:30266	76258	3	True				
ANR	77378	CallExpression	"APPEND_STR ( ""callable"" )"		76258	0					
ANR	77379	Callee	APPEND_STR		76258	0					
ANR	77380	Identifier	APPEND_STR		76258	0					
ANR	77381	ArgumentList	"""callable"""		76258	1					
ANR	77382	Argument	"""callable"""		76258	0					
ANR	77383	PrimaryExpression	"""callable"""		76258	0					
ANR	77384	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1149:4:30272:30299	76258	4	True				
ANR	77385	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	77386	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77387	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77388	ArgumentList			76258	1					
ANR	77389	BreakStatement	break ;	1151:3:30309:30314	76258	92	True				
ANR	77390	Label	case ZEND_AST_VAR :	1154:2:30340:30357	76258	93	True				
ANR	77391	Identifier	ZEND_AST_VAR		76258	0					
ANR	77392	ExpressionStatement	"smart_str_appendc ( str , '$' )"	1155:3:30362:30389	76258	94	True				
ANR	77393	CallExpression	"smart_str_appendc ( str , '$' )"		76258	0					
ANR	77394	Callee	smart_str_appendc		76258	0					
ANR	77395	Identifier	smart_str_appendc		76258	0					
ANR	77396	ArgumentList	str		76258	1					
ANR	77397	Argument	str		76258	0					
ANR	77398	Identifier	str		76258	0					
ANR	77399	Argument	'$'		76258	1					
ANR	77400	PrimaryExpression	'$'		76258	0					
ANR	77401	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 0 ] , 0 , indent )"	1156:3:30394:30444	76258	95	True				
ANR	77402	CallExpression	"zend_ast_export_var ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	77403	Callee	zend_ast_export_var		76258	0					
ANR	77404	Identifier	zend_ast_export_var		76258	0					
ANR	77405	ArgumentList	str		76258	1					
ANR	77406	Argument	str		76258	0					
ANR	77407	Identifier	str		76258	0					
ANR	77408	Argument	ast -> child [ 0 ]		76258	1					
ANR	77409	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	77410	PtrMemberAccess	ast -> child		76258	0					
ANR	77411	Identifier	ast		76258	0					
ANR	77412	Identifier	child		76258	1					
ANR	77413	PrimaryExpression	0		76258	1					
ANR	77414	Argument	0		76258	2					
ANR	77415	PrimaryExpression	0		76258	0					
ANR	77416	Argument	indent		76258	3					
ANR	77417	Identifier	indent		76258	0					
ANR	77418	BreakStatement	break ;	1157:3:30449:30454	76258	96	True				
ANR	77419	Label	case ZEND_AST_CONST :	1158:2:30458:30477	76258	97	True				
ANR	77420	Identifier	ZEND_AST_CONST		76258	0					
ANR	77421	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1159:3:30482:30536	76258	98	True				
ANR	77422	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	77423	Callee	zend_ast_export_ns_name		76258	0					
ANR	77424	Identifier	zend_ast_export_ns_name		76258	0					
ANR	77425	ArgumentList	str		76258	1					
ANR	77426	Argument	str		76258	0					
ANR	77427	Identifier	str		76258	0					
ANR	77428	Argument	ast -> child [ 0 ]		76258	1					
ANR	77429	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	77430	PtrMemberAccess	ast -> child		76258	0					
ANR	77431	Identifier	ast		76258	0					
ANR	77432	Identifier	child		76258	1					
ANR	77433	PrimaryExpression	0		76258	1					
ANR	77434	Argument	0		76258	2					
ANR	77435	PrimaryExpression	0		76258	0					
ANR	77436	Argument	indent		76258	3					
ANR	77437	Identifier	indent		76258	0					
ANR	77438	BreakStatement	break ;	1160:3:30541:30546	76258	99	True				
ANR	77439	Label	case ZEND_AST_UNPACK :	1161:2:30550:30570	76258	100	True				
ANR	77440	Identifier	ZEND_AST_UNPACK		76258	0					
ANR	77441	ExpressionStatement	"smart_str_appends ( str , ""..."" )"	1162:3:30575:30604	76258	101	True				
ANR	77442	CallExpression	"smart_str_appends ( str , ""..."" )"		76258	0					
ANR	77443	Callee	smart_str_appends		76258	0					
ANR	77444	Identifier	smart_str_appends		76258	0					
ANR	77445	ArgumentList	str		76258	1					
ANR	77446	Argument	str		76258	0					
ANR	77447	Identifier	str		76258	0					
ANR	77448	Argument	"""..."""		76258	1					
ANR	77449	PrimaryExpression	"""..."""		76258	0					
ANR	77450	ExpressionStatement	ast = ast -> child [ 0 ]	1163:3:30609:30628	76258	102	True				
ANR	77451	AssignmentExpression	ast = ast -> child [ 0 ]		76258	0		=			
ANR	77452	Identifier	ast		76258	0					
ANR	77453	ArrayIndexing	ast -> child [ 0 ]		76258	1					
ANR	77454	PtrMemberAccess	ast -> child		76258	0					
ANR	77455	Identifier	ast		76258	0					
ANR	77456	Identifier	child		76258	1					
ANR	77457	PrimaryExpression	0		76258	1					
ANR	77458	GotoStatement	goto tail_call ;	1164:3:30633:30647	76258	103	True				
ANR	77459	Identifier	tail_call		76258	0					
ANR	77460	Label	case ZEND_AST_UNARY_PLUS :	1165:2:30651:30675	76258	104	True				
ANR	77461	Identifier	ZEND_AST_UNARY_PLUS		76258	0					
ANR	77462	ExpressionStatement	"PREFIX_OP ( ""+"" , 240 , 241 )"	1165:29:30678:30702	76258	105	True				
ANR	77463	CallExpression	"PREFIX_OP ( ""+"" , 240 , 241 )"		76258	0					
ANR	77464	Callee	PREFIX_OP		76258	0					
ANR	77465	Identifier	PREFIX_OP		76258	0					
ANR	77466	ArgumentList	"""+"""		76258	1					
ANR	77467	Argument	"""+"""		76258	0					
ANR	77468	PrimaryExpression	"""+"""		76258	0					
ANR	77469	Argument	240		76258	1					
ANR	77470	PrimaryExpression	240		76258	0					
ANR	77471	Argument	241		76258	2					
ANR	77472	PrimaryExpression	241		76258	0					
ANR	77473	Label	case ZEND_AST_UNARY_MINUS :	1166:2:30706:30731	76258	106	True				
ANR	77474	Identifier	ZEND_AST_UNARY_MINUS		76258	0					
ANR	77475	ExpressionStatement	"PREFIX_OP ( ""-"" , 240 , 241 )"	1166:29:30733:30757	76258	107	True				
ANR	77476	CallExpression	"PREFIX_OP ( ""-"" , 240 , 241 )"		76258	0					
ANR	77477	Callee	PREFIX_OP		76258	0					
ANR	77478	Identifier	PREFIX_OP		76258	0					
ANR	77479	ArgumentList	"""-"""		76258	1					
ANR	77480	Argument	"""-"""		76258	0					
ANR	77481	PrimaryExpression	"""-"""		76258	0					
ANR	77482	Argument	240		76258	1					
ANR	77483	PrimaryExpression	240		76258	0					
ANR	77484	Argument	241		76258	2					
ANR	77485	PrimaryExpression	241		76258	0					
ANR	77486	Label	case ZEND_AST_CAST :	1167:2:30761:30779	76258	108	True				
ANR	77487	Identifier	ZEND_AST_CAST		76258	0					
ANR	77488	SwitchStatement	switch ( ast -> attr )		76258	109					
ANR	77489	Condition	ast -> attr	1168:11:30792:30800	76258	0	True				
ANR	77490	PtrMemberAccess	ast -> attr		76258	0					
ANR	77491	Identifier	ast		76258	0					
ANR	77492	Identifier	attr		76258	1					
ANR	77493	CompoundStatement		201:22:6097:6097	76258	1					
ANR	77494	Label	case IS_NULL :	1169:4:30809:30821	76258	0	True				
ANR	77495	Identifier	IS_NULL		76258	0					
ANR	77496	ExpressionStatement	"PREFIX_OP ( ""(unset)"" , 240 , 241 )"	1169:23:30828:30859	76258	1	True				
ANR	77497	CallExpression	"PREFIX_OP ( ""(unset)"" , 240 , 241 )"		76258	0					
ANR	77498	Callee	PREFIX_OP		76258	0					
ANR	77499	Identifier	PREFIX_OP		76258	0					
ANR	77500	ArgumentList	"""(unset)"""		76258	1					
ANR	77501	Argument	"""(unset)"""		76258	0					
ANR	77502	PrimaryExpression	"""(unset)"""		76258	0					
ANR	77503	Argument	240		76258	1					
ANR	77504	PrimaryExpression	240		76258	0					
ANR	77505	Argument	241		76258	2					
ANR	77506	PrimaryExpression	241		76258	0					
ANR	77507	Label	case _IS_BOOL :	1170:4:30865:30878	76258	2	True				
ANR	77508	Identifier	_IS_BOOL		76258	0					
ANR	77509	ExpressionStatement	"PREFIX_OP ( ""(bool)"" , 240 , 241 )"	1170:23:30884:30915	76258	3	True				
ANR	77510	CallExpression	"PREFIX_OP ( ""(bool)"" , 240 , 241 )"		76258	0					
ANR	77511	Callee	PREFIX_OP		76258	0					
ANR	77512	Identifier	PREFIX_OP		76258	0					
ANR	77513	ArgumentList	"""(bool)"""		76258	1					
ANR	77514	Argument	"""(bool)"""		76258	0					
ANR	77515	PrimaryExpression	"""(bool)"""		76258	0					
ANR	77516	Argument	240		76258	1					
ANR	77517	PrimaryExpression	240		76258	0					
ANR	77518	Argument	241		76258	2					
ANR	77519	PrimaryExpression	241		76258	0					
ANR	77520	Label	case IS_LONG :	1171:4:30921:30933	76258	4	True				
ANR	77521	Identifier	IS_LONG		76258	0					
ANR	77522	ExpressionStatement	"PREFIX_OP ( ""(int)"" , 240 , 241 )"	1171:23:30940:30971	76258	5	True				
ANR	77523	CallExpression	"PREFIX_OP ( ""(int)"" , 240 , 241 )"		76258	0					
ANR	77524	Callee	PREFIX_OP		76258	0					
ANR	77525	Identifier	PREFIX_OP		76258	0					
ANR	77526	ArgumentList	"""(int)"""		76258	1					
ANR	77527	Argument	"""(int)"""		76258	0					
ANR	77528	PrimaryExpression	"""(int)"""		76258	0					
ANR	77529	Argument	240		76258	1					
ANR	77530	PrimaryExpression	240		76258	0					
ANR	77531	Argument	241		76258	2					
ANR	77532	PrimaryExpression	241		76258	0					
ANR	77533	Label	case IS_DOUBLE :	1172:4:30977:30991	76258	6	True				
ANR	77534	Identifier	IS_DOUBLE		76258	0					
ANR	77535	ExpressionStatement	"PREFIX_OP ( ""(double)"" , 240 , 241 )"	1172:23:30996:31027	76258	7	True				
ANR	77536	CallExpression	"PREFIX_OP ( ""(double)"" , 240 , 241 )"		76258	0					
ANR	77537	Callee	PREFIX_OP		76258	0					
ANR	77538	Identifier	PREFIX_OP		76258	0					
ANR	77539	ArgumentList	"""(double)"""		76258	1					
ANR	77540	Argument	"""(double)"""		76258	0					
ANR	77541	PrimaryExpression	"""(double)"""		76258	0					
ANR	77542	Argument	240		76258	1					
ANR	77543	PrimaryExpression	240		76258	0					
ANR	77544	Argument	241		76258	2					
ANR	77545	PrimaryExpression	241		76258	0					
ANR	77546	Label	case IS_STRING :	1173:4:31033:31047	76258	8	True				
ANR	77547	Identifier	IS_STRING		76258	0					
ANR	77548	ExpressionStatement	"PREFIX_OP ( ""(string)"" , 240 , 241 )"	1173:23:31052:31083	76258	9	True				
ANR	77549	CallExpression	"PREFIX_OP ( ""(string)"" , 240 , 241 )"		76258	0					
ANR	77550	Callee	PREFIX_OP		76258	0					
ANR	77551	Identifier	PREFIX_OP		76258	0					
ANR	77552	ArgumentList	"""(string)"""		76258	1					
ANR	77553	Argument	"""(string)"""		76258	0					
ANR	77554	PrimaryExpression	"""(string)"""		76258	0					
ANR	77555	Argument	240		76258	1					
ANR	77556	PrimaryExpression	240		76258	0					
ANR	77557	Argument	241		76258	2					
ANR	77558	PrimaryExpression	241		76258	0					
ANR	77559	Label	case IS_ARRAY :	1174:4:31089:31102	76258	10	True				
ANR	77560	Identifier	IS_ARRAY		76258	0					
ANR	77561	ExpressionStatement	"PREFIX_OP ( ""(array)"" , 240 , 241 )"	1174:23:31108:31139	76258	11	True				
ANR	77562	CallExpression	"PREFIX_OP ( ""(array)"" , 240 , 241 )"		76258	0					
ANR	77563	Callee	PREFIX_OP		76258	0					
ANR	77564	Identifier	PREFIX_OP		76258	0					
ANR	77565	ArgumentList	"""(array)"""		76258	1					
ANR	77566	Argument	"""(array)"""		76258	0					
ANR	77567	PrimaryExpression	"""(array)"""		76258	0					
ANR	77568	Argument	240		76258	1					
ANR	77569	PrimaryExpression	240		76258	0					
ANR	77570	Argument	241		76258	2					
ANR	77571	PrimaryExpression	241		76258	0					
ANR	77572	Label	case IS_OBJECT :	1175:4:31145:31159	76258	12	True				
ANR	77573	Identifier	IS_OBJECT		76258	0					
ANR	77574	ExpressionStatement	"PREFIX_OP ( ""(object)"" , 240 , 241 )"	1175:23:31164:31195	76258	13	True				
ANR	77575	CallExpression	"PREFIX_OP ( ""(object)"" , 240 , 241 )"		76258	0					
ANR	77576	Callee	PREFIX_OP		76258	0					
ANR	77577	Identifier	PREFIX_OP		76258	0					
ANR	77578	ArgumentList	"""(object)"""		76258	1					
ANR	77579	Argument	"""(object)"""		76258	0					
ANR	77580	PrimaryExpression	"""(object)"""		76258	0					
ANR	77581	Argument	240		76258	1					
ANR	77582	PrimaryExpression	240		76258	0					
ANR	77583	Argument	241		76258	2					
ANR	77584	PrimaryExpression	241		76258	0					
ANR	77585	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1176:4:31201:31228	76258	14	True				
ANR	77586	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	77587	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77588	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77589	ArgumentList			76258	1					
ANR	77590	BreakStatement	break ;	1178:3:31238:31243	76258	110	True				
ANR	77591	Label	case ZEND_AST_EMPTY :	1179:2:31247:31266	76258	111	True				
ANR	77592	Identifier	ZEND_AST_EMPTY		76258	0					
ANR	77593	ExpressionStatement	"FUNC_OP ( ""empty"" )"	1180:3:31271:31287	76258	112	True				
ANR	77594	CallExpression	"FUNC_OP ( ""empty"" )"		76258	0					
ANR	77595	Callee	FUNC_OP		76258	0					
ANR	77596	Identifier	FUNC_OP		76258	0					
ANR	77597	ArgumentList	"""empty"""		76258	1					
ANR	77598	Argument	"""empty"""		76258	0					
ANR	77599	PrimaryExpression	"""empty"""		76258	0					
ANR	77600	Label	case ZEND_AST_ISSET :	1181:2:31291:31310	76258	113	True				
ANR	77601	Identifier	ZEND_AST_ISSET		76258	0					
ANR	77602	ExpressionStatement	"FUNC_OP ( ""isset"" )"	1182:3:31315:31331	76258	114	True				
ANR	77603	CallExpression	"FUNC_OP ( ""isset"" )"		76258	0					
ANR	77604	Callee	FUNC_OP		76258	0					
ANR	77605	Identifier	FUNC_OP		76258	0					
ANR	77606	ArgumentList	"""isset"""		76258	1					
ANR	77607	Argument	"""isset"""		76258	0					
ANR	77608	PrimaryExpression	"""isset"""		76258	0					
ANR	77609	Label	case ZEND_AST_SILENCE :	1183:2:31335:31356	76258	115	True				
ANR	77610	Identifier	ZEND_AST_SILENCE		76258	0					
ANR	77611	ExpressionStatement	"PREFIX_OP ( ""@"" , 240 , 241 )"	1184:3:31361:31385	76258	116	True				
ANR	77612	CallExpression	"PREFIX_OP ( ""@"" , 240 , 241 )"		76258	0					
ANR	77613	Callee	PREFIX_OP		76258	0					
ANR	77614	Identifier	PREFIX_OP		76258	0					
ANR	77615	ArgumentList	"""@"""		76258	1					
ANR	77616	Argument	"""@"""		76258	0					
ANR	77617	PrimaryExpression	"""@"""		76258	0					
ANR	77618	Argument	240		76258	1					
ANR	77619	PrimaryExpression	240		76258	0					
ANR	77620	Argument	241		76258	2					
ANR	77621	PrimaryExpression	241		76258	0					
ANR	77622	Label	case ZEND_AST_SHELL_EXEC :	1185:2:31389:31413	76258	117	True				
ANR	77623	Identifier	ZEND_AST_SHELL_EXEC		76258	0					
ANR	77624	ExpressionStatement	"smart_str_appendc ( str , '`' )"	1186:3:31418:31445	76258	118	True				
ANR	77625	CallExpression	"smart_str_appendc ( str , '`' )"		76258	0					
ANR	77626	Callee	smart_str_appendc		76258	0					
ANR	77627	Identifier	smart_str_appendc		76258	0					
ANR	77628	ArgumentList	str		76258	1					
ANR	77629	Argument	str		76258	0					
ANR	77630	Identifier	str		76258	0					
ANR	77631	Argument	'`'		76258	1					
ANR	77632	PrimaryExpression	'`'		76258	0					
ANR	77633	IfStatement	if ( ast -> child [ 0 ] -> kind == ZEND_AST_ENCAPS_LIST )		76258	119					
ANR	77634	Condition	ast -> child [ 0 ] -> kind == ZEND_AST_ENCAPS_LIST	1187:7:31454:31496	76258	0	True				
ANR	77635	EqualityExpression	ast -> child [ 0 ] -> kind == ZEND_AST_ENCAPS_LIST		76258	0		==			
ANR	77636	PtrMemberAccess	ast -> child [ 0 ] -> kind		76258	0					
ANR	77637	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	77638	PtrMemberAccess	ast -> child		76258	0					
ANR	77639	Identifier	ast		76258	0					
ANR	77640	Identifier	child		76258	1					
ANR	77641	PrimaryExpression	0		76258	1					
ANR	77642	Identifier	kind		76258	1					
ANR	77643	Identifier	ZEND_AST_ENCAPS_LIST		76258	1					
ANR	77644	CompoundStatement		220:52:6793:6793	76258	1					
ANR	77645	ExpressionStatement	"zend_ast_export_encaps_list ( str , '`' , ( zend_ast_list * ) ast -> child [ 0 ] , indent )"	1188:4:31505:31581	76258	0	True				
ANR	77646	CallExpression	"zend_ast_export_encaps_list ( str , '`' , ( zend_ast_list * ) ast -> child [ 0 ] , indent )"		76258	0					
ANR	77647	Callee	zend_ast_export_encaps_list		76258	0					
ANR	77648	Identifier	zend_ast_export_encaps_list		76258	0					
ANR	77649	ArgumentList	str		76258	1					
ANR	77650	Argument	str		76258	0					
ANR	77651	Identifier	str		76258	0					
ANR	77652	Argument	'`'		76258	1					
ANR	77653	PrimaryExpression	'`'		76258	0					
ANR	77654	Argument	( zend_ast_list * ) ast -> child [ 0 ]		76258	2					
ANR	77655	CastExpression	( zend_ast_list * ) ast -> child [ 0 ]		76258	0					
ANR	77656	CastTarget	zend_ast_list *		76258	0					
ANR	77657	ArrayIndexing	ast -> child [ 0 ]		76258	1					
ANR	77658	PtrMemberAccess	ast -> child		76258	0					
ANR	77659	Identifier	ast		76258	0					
ANR	77660	Identifier	child		76258	1					
ANR	77661	PrimaryExpression	0		76258	1					
ANR	77662	Argument	indent		76258	3					
ANR	77663	Identifier	indent		76258	0					
ANR	77664	ElseStatement	else		76258	0					
ANR	77665	CompoundStatement		222:10:6887:6887	76258	0					
ANR	77666	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1190:4:31599:31648	76258	0	True				
ANR	77667	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	77668	Callee	zend_ast_export_ex		76258	0					
ANR	77669	Identifier	zend_ast_export_ex		76258	0					
ANR	77670	ArgumentList	str		76258	1					
ANR	77671	Argument	str		76258	0					
ANR	77672	Identifier	str		76258	0					
ANR	77673	Argument	ast -> child [ 0 ]		76258	1					
ANR	77674	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	77675	PtrMemberAccess	ast -> child		76258	0					
ANR	77676	Identifier	ast		76258	0					
ANR	77677	Identifier	child		76258	1					
ANR	77678	PrimaryExpression	0		76258	1					
ANR	77679	Argument	0		76258	2					
ANR	77680	PrimaryExpression	0		76258	0					
ANR	77681	Argument	indent		76258	3					
ANR	77682	Identifier	indent		76258	0					
ANR	77683	ExpressionStatement	"smart_str_appendc ( str , '`' )"	1192:3:31658:31685	76258	120	True				
ANR	77684	CallExpression	"smart_str_appendc ( str , '`' )"		76258	0					
ANR	77685	Callee	smart_str_appendc		76258	0					
ANR	77686	Identifier	smart_str_appendc		76258	0					
ANR	77687	ArgumentList	str		76258	1					
ANR	77688	Argument	str		76258	0					
ANR	77689	Identifier	str		76258	0					
ANR	77690	Argument	'`'		76258	1					
ANR	77691	PrimaryExpression	'`'		76258	0					
ANR	77692	BreakStatement	break ;	1193:3:31690:31695	76258	121	True				
ANR	77693	Label	case ZEND_AST_CLONE :	1194:2:31699:31718	76258	122	True				
ANR	77694	Identifier	ZEND_AST_CLONE		76258	0					
ANR	77695	ExpressionStatement	"PREFIX_OP ( ""clone "" , 270 , 271 )"	1195:3:31723:31752	76258	123	True				
ANR	77696	CallExpression	"PREFIX_OP ( ""clone "" , 270 , 271 )"		76258	0					
ANR	77697	Callee	PREFIX_OP		76258	0					
ANR	77698	Identifier	PREFIX_OP		76258	0					
ANR	77699	ArgumentList	"""clone """		76258	1					
ANR	77700	Argument	"""clone """		76258	0					
ANR	77701	PrimaryExpression	"""clone """		76258	0					
ANR	77702	Argument	270		76258	1					
ANR	77703	PrimaryExpression	270		76258	0					
ANR	77704	Argument	271		76258	2					
ANR	77705	PrimaryExpression	271		76258	0					
ANR	77706	Label	case ZEND_AST_EXIT :	1196:2:31756:31774	76258	124	True				
ANR	77707	Identifier	ZEND_AST_EXIT		76258	0					
ANR	77708	IfStatement	if ( ast -> child [ 0 ] )		76258	125					
ANR	77709	Condition	ast -> child [ 0 ]	1197:7:31783:31795	76258	0	True				
ANR	77710	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	77711	PtrMemberAccess	ast -> child		76258	0					
ANR	77712	Identifier	ast		76258	0					
ANR	77713	Identifier	child		76258	1					
ANR	77714	PrimaryExpression	0		76258	1					
ANR	77715	CompoundStatement		230:22:7092:7092	76258	1					
ANR	77716	ExpressionStatement	"FUNC_OP ( ""exit"" )"	1198:4:31804:31819	76258	0	True				
ANR	77717	CallExpression	"FUNC_OP ( ""exit"" )"		76258	0					
ANR	77718	Callee	FUNC_OP		76258	0					
ANR	77719	Identifier	FUNC_OP		76258	0					
ANR	77720	ArgumentList	"""exit"""		76258	1					
ANR	77721	Argument	"""exit"""		76258	0					
ANR	77722	PrimaryExpression	"""exit"""		76258	0					
ANR	77723	ElseStatement	else		76258	0					
ANR	77724	CompoundStatement		232:10:7125:7125	76258	0					
ANR	77725	ExpressionStatement	"APPEND_STR ( ""exit"" )"	1200:4:31837:31855	76258	0	True				
ANR	77726	CallExpression	"APPEND_STR ( ""exit"" )"		76258	0					
ANR	77727	Callee	APPEND_STR		76258	0					
ANR	77728	Identifier	APPEND_STR		76258	0					
ANR	77729	ArgumentList	"""exit"""		76258	1					
ANR	77730	Argument	"""exit"""		76258	0					
ANR	77731	PrimaryExpression	"""exit"""		76258	0					
ANR	77732	BreakStatement	break ;	1202:3:31865:31870	76258	126	True				
ANR	77733	Label	case ZEND_AST_PRINT :	1203:2:31874:31893	76258	127	True				
ANR	77734	Identifier	ZEND_AST_PRINT		76258	0					
ANR	77735	ExpressionStatement	"PREFIX_OP ( ""print "" , 60 , 61 )"	1204:3:31898:31925	76258	128	True				
ANR	77736	CallExpression	"PREFIX_OP ( ""print "" , 60 , 61 )"		76258	0					
ANR	77737	Callee	PREFIX_OP		76258	0					
ANR	77738	Identifier	PREFIX_OP		76258	0					
ANR	77739	ArgumentList	"""print """		76258	1					
ANR	77740	Argument	"""print """		76258	0					
ANR	77741	PrimaryExpression	"""print """		76258	0					
ANR	77742	Argument	60		76258	1					
ANR	77743	PrimaryExpression	60		76258	0					
ANR	77744	Argument	61		76258	2					
ANR	77745	PrimaryExpression	61		76258	0					
ANR	77746	Label	case ZEND_AST_INCLUDE_OR_EVAL :	1205:2:31929:31958	76258	129	True				
ANR	77747	Identifier	ZEND_AST_INCLUDE_OR_EVAL		76258	0					
ANR	77748	SwitchStatement	switch ( ast -> attr )		76258	130					
ANR	77749	Condition	ast -> attr	1206:11:31971:31979	76258	0	True				
ANR	77750	PtrMemberAccess	ast -> attr		76258	0					
ANR	77751	Identifier	ast		76258	0					
ANR	77752	Identifier	attr		76258	1					
ANR	77753	CompoundStatement		239:22:7276:7276	76258	1					
ANR	77754	Label	case ZEND_INCLUDE_ONCE :	1207:4:31988:32010	76258	0	True				
ANR	77755	Identifier	ZEND_INCLUDE_ONCE		76258	0					
ANR	77756	ExpressionStatement	"FUNC_OP ( ""include_once"" )"	1207:28:32012:32035	76258	1	True				
ANR	77757	CallExpression	"FUNC_OP ( ""include_once"" )"		76258	0					
ANR	77758	Callee	FUNC_OP		76258	0					
ANR	77759	Identifier	FUNC_OP		76258	0					
ANR	77760	ArgumentList	"""include_once"""		76258	1					
ANR	77761	Argument	"""include_once"""		76258	0					
ANR	77762	PrimaryExpression	"""include_once"""		76258	0					
ANR	77763	Label	case ZEND_INCLUDE :	1208:4:32041:32058	76258	2	True				
ANR	77764	Identifier	ZEND_INCLUDE		76258	0					
ANR	77765	ExpressionStatement	"FUNC_OP ( ""include"" )"	1208:28:32065:32083	76258	3	True				
ANR	77766	CallExpression	"FUNC_OP ( ""include"" )"		76258	0					
ANR	77767	Callee	FUNC_OP		76258	0					
ANR	77768	Identifier	FUNC_OP		76258	0					
ANR	77769	ArgumentList	"""include"""		76258	1					
ANR	77770	Argument	"""include"""		76258	0					
ANR	77771	PrimaryExpression	"""include"""		76258	0					
ANR	77772	Label	case ZEND_REQUIRE_ONCE :	1209:4:32089:32111	76258	4	True				
ANR	77773	Identifier	ZEND_REQUIRE_ONCE		76258	0					
ANR	77774	ExpressionStatement	"FUNC_OP ( ""require_once"" )"	1209:28:32113:32136	76258	5	True				
ANR	77775	CallExpression	"FUNC_OP ( ""require_once"" )"		76258	0					
ANR	77776	Callee	FUNC_OP		76258	0					
ANR	77777	Identifier	FUNC_OP		76258	0					
ANR	77778	ArgumentList	"""require_once"""		76258	1					
ANR	77779	Argument	"""require_once"""		76258	0					
ANR	77780	PrimaryExpression	"""require_once"""		76258	0					
ANR	77781	Label	case ZEND_REQUIRE :	1210:4:32142:32159	76258	6	True				
ANR	77782	Identifier	ZEND_REQUIRE		76258	0					
ANR	77783	ExpressionStatement	"FUNC_OP ( ""require"" )"	1210:28:32166:32184	76258	7	True				
ANR	77784	CallExpression	"FUNC_OP ( ""require"" )"		76258	0					
ANR	77785	Callee	FUNC_OP		76258	0					
ANR	77786	Identifier	FUNC_OP		76258	0					
ANR	77787	ArgumentList	"""require"""		76258	1					
ANR	77788	Argument	"""require"""		76258	0					
ANR	77789	PrimaryExpression	"""require"""		76258	0					
ANR	77790	Label	case ZEND_EVAL :	1211:4:32190:32204	76258	8	True				
ANR	77791	Identifier	ZEND_EVAL		76258	0					
ANR	77792	ExpressionStatement	"FUNC_OP ( ""eval"" )"	1211:28:32214:32229	76258	9	True				
ANR	77793	CallExpression	"FUNC_OP ( ""eval"" )"		76258	0					
ANR	77794	Callee	FUNC_OP		76258	0					
ANR	77795	Identifier	FUNC_OP		76258	0					
ANR	77796	ArgumentList	"""eval"""		76258	1					
ANR	77797	Argument	"""eval"""		76258	0					
ANR	77798	PrimaryExpression	"""eval"""		76258	0					
ANR	77799	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1212:4:32235:32262	76258	10	True				
ANR	77800	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	77801	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77802	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77803	ArgumentList			76258	1					
ANR	77804	BreakStatement	break ;	1214:3:32272:32277	76258	131	True				
ANR	77805	Label	case ZEND_AST_UNARY_OP :	1215:2:32281:32303	76258	132	True				
ANR	77806	Identifier	ZEND_AST_UNARY_OP		76258	0					
ANR	77807	SwitchStatement	switch ( ast -> attr )		76258	133					
ANR	77808	Condition	ast -> attr	1216:11:32316:32324	76258	0	True				
ANR	77809	PtrMemberAccess	ast -> attr		76258	0					
ANR	77810	Identifier	ast		76258	0					
ANR	77811	Identifier	attr		76258	1					
ANR	77812	CompoundStatement		249:22:7621:7621	76258	1					
ANR	77813	Label	case ZEND_BW_NOT :	1217:4:32333:32349	76258	0	True				
ANR	77814	Identifier	ZEND_BW_NOT		76258	0					
ANR	77815	ExpressionStatement	"PREFIX_OP ( ""~"" , 240 , 241 )"	1217:24:32353:32377	76258	1	True				
ANR	77816	CallExpression	"PREFIX_OP ( ""~"" , 240 , 241 )"		76258	0					
ANR	77817	Callee	PREFIX_OP		76258	0					
ANR	77818	Identifier	PREFIX_OP		76258	0					
ANR	77819	ArgumentList	"""~"""		76258	1					
ANR	77820	Argument	"""~"""		76258	0					
ANR	77821	PrimaryExpression	"""~"""		76258	0					
ANR	77822	Argument	240		76258	1					
ANR	77823	PrimaryExpression	240		76258	0					
ANR	77824	Argument	241		76258	2					
ANR	77825	PrimaryExpression	241		76258	0					
ANR	77826	Label	case ZEND_BOOL_NOT :	1218:4:32383:32401	76258	2	True				
ANR	77827	Identifier	ZEND_BOOL_NOT		76258	0					
ANR	77828	ExpressionStatement	"PREFIX_OP ( ""!"" , 240 , 241 )"	1218:24:32403:32427	76258	3	True				
ANR	77829	CallExpression	"PREFIX_OP ( ""!"" , 240 , 241 )"		76258	0					
ANR	77830	Callee	PREFIX_OP		76258	0					
ANR	77831	Identifier	PREFIX_OP		76258	0					
ANR	77832	ArgumentList	"""!"""		76258	1					
ANR	77833	Argument	"""!"""		76258	0					
ANR	77834	PrimaryExpression	"""!"""		76258	0					
ANR	77835	Argument	240		76258	1					
ANR	77836	PrimaryExpression	240		76258	0					
ANR	77837	Argument	241		76258	2					
ANR	77838	PrimaryExpression	241		76258	0					
ANR	77839	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1219:4:32433:32460	76258	4	True				
ANR	77840	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	77841	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77842	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	77843	ArgumentList			76258	1					
ANR	77844	BreakStatement	break ;	1221:3:32470:32475	76258	134	True				
ANR	77845	Label	case ZEND_AST_PRE_INC :	1222:2:32479:32500	76258	135	True				
ANR	77846	Identifier	ZEND_AST_PRE_INC		76258	0					
ANR	77847	ExpressionStatement	"PREFIX_OP ( ""++"" , 240 , 241 )"	1223:3:32505:32530	76258	136	True				
ANR	77848	CallExpression	"PREFIX_OP ( ""++"" , 240 , 241 )"		76258	0					
ANR	77849	Callee	PREFIX_OP		76258	0					
ANR	77850	Identifier	PREFIX_OP		76258	0					
ANR	77851	ArgumentList	"""++"""		76258	1					
ANR	77852	Argument	"""++"""		76258	0					
ANR	77853	PrimaryExpression	"""++"""		76258	0					
ANR	77854	Argument	240		76258	1					
ANR	77855	PrimaryExpression	240		76258	0					
ANR	77856	Argument	241		76258	2					
ANR	77857	PrimaryExpression	241		76258	0					
ANR	77858	Label	case ZEND_AST_PRE_DEC :	1224:2:32534:32555	76258	137	True				
ANR	77859	Identifier	ZEND_AST_PRE_DEC		76258	0					
ANR	77860	ExpressionStatement	"PREFIX_OP ( ""--"" , 240 , 241 )"	1225:3:32560:32585	76258	138	True				
ANR	77861	CallExpression	"PREFIX_OP ( ""--"" , 240 , 241 )"		76258	0					
ANR	77862	Callee	PREFIX_OP		76258	0					
ANR	77863	Identifier	PREFIX_OP		76258	0					
ANR	77864	ArgumentList	"""--"""		76258	1					
ANR	77865	Argument	"""--"""		76258	0					
ANR	77866	PrimaryExpression	"""--"""		76258	0					
ANR	77867	Argument	240		76258	1					
ANR	77868	PrimaryExpression	240		76258	0					
ANR	77869	Argument	241		76258	2					
ANR	77870	PrimaryExpression	241		76258	0					
ANR	77871	Label	case ZEND_AST_POST_INC :	1226:2:32589:32611	76258	139	True				
ANR	77872	Identifier	ZEND_AST_POST_INC		76258	0					
ANR	77873	ExpressionStatement	"POSTFIX_OP ( ""++"" , 240 , 241 )"	1227:3:32616:32642	76258	140	True				
ANR	77874	CallExpression	"POSTFIX_OP ( ""++"" , 240 , 241 )"		76258	0					
ANR	77875	Callee	POSTFIX_OP		76258	0					
ANR	77876	Identifier	POSTFIX_OP		76258	0					
ANR	77877	ArgumentList	"""++"""		76258	1					
ANR	77878	Argument	"""++"""		76258	0					
ANR	77879	PrimaryExpression	"""++"""		76258	0					
ANR	77880	Argument	240		76258	1					
ANR	77881	PrimaryExpression	240		76258	0					
ANR	77882	Argument	241		76258	2					
ANR	77883	PrimaryExpression	241		76258	0					
ANR	77884	Label	case ZEND_AST_POST_DEC :	1228:2:32646:32668	76258	141	True				
ANR	77885	Identifier	ZEND_AST_POST_DEC		76258	0					
ANR	77886	ExpressionStatement	"POSTFIX_OP ( ""--"" , 240 , 241 )"	1229:3:32673:32699	76258	142	True				
ANR	77887	CallExpression	"POSTFIX_OP ( ""--"" , 240 , 241 )"		76258	0					
ANR	77888	Callee	POSTFIX_OP		76258	0					
ANR	77889	Identifier	POSTFIX_OP		76258	0					
ANR	77890	ArgumentList	"""--"""		76258	1					
ANR	77891	Argument	"""--"""		76258	0					
ANR	77892	PrimaryExpression	"""--"""		76258	0					
ANR	77893	Argument	240		76258	1					
ANR	77894	PrimaryExpression	240		76258	0					
ANR	77895	Argument	241		76258	2					
ANR	77896	PrimaryExpression	241		76258	0					
ANR	77897	Label	case ZEND_AST_GLOBAL :	1231:2:32704:32724	76258	143	True				
ANR	77898	Identifier	ZEND_AST_GLOBAL		76258	0					
ANR	77899	ExpressionStatement	"APPEND_NODE_1 ( ""global"" )"	1232:3:32729:32752	76258	144	True				
ANR	77900	CallExpression	"APPEND_NODE_1 ( ""global"" )"		76258	0					
ANR	77901	Callee	APPEND_NODE_1		76258	0					
ANR	77902	Identifier	APPEND_NODE_1		76258	0					
ANR	77903	ArgumentList	"""global"""		76258	1					
ANR	77904	Argument	"""global"""		76258	0					
ANR	77905	PrimaryExpression	"""global"""		76258	0					
ANR	77906	Label	case ZEND_AST_UNSET :	1233:2:32756:32775	76258	145	True				
ANR	77907	Identifier	ZEND_AST_UNSET		76258	0					
ANR	77908	ExpressionStatement	"FUNC_OP ( ""unset"" )"	1234:3:32780:32796	76258	146	True				
ANR	77909	CallExpression	"FUNC_OP ( ""unset"" )"		76258	0					
ANR	77910	Callee	FUNC_OP		76258	0					
ANR	77911	Identifier	FUNC_OP		76258	0					
ANR	77912	ArgumentList	"""unset"""		76258	1					
ANR	77913	Argument	"""unset"""		76258	0					
ANR	77914	PrimaryExpression	"""unset"""		76258	0					
ANR	77915	Label	case ZEND_AST_RETURN :	1235:2:32800:32820	76258	147	True				
ANR	77916	Identifier	ZEND_AST_RETURN		76258	0					
ANR	77917	ExpressionStatement	"APPEND_NODE_1 ( ""return"" )"	1236:3:32825:32848	76258	148	True				
ANR	77918	CallExpression	"APPEND_NODE_1 ( ""return"" )"		76258	0					
ANR	77919	Callee	APPEND_NODE_1		76258	0					
ANR	77920	Identifier	APPEND_NODE_1		76258	0					
ANR	77921	ArgumentList	"""return"""		76258	1					
ANR	77922	Argument	"""return"""		76258	0					
ANR	77923	PrimaryExpression	"""return"""		76258	0					
ANR	77924	Label	case ZEND_AST_LABEL :	1237:2:32852:32871	76258	149	True				
ANR	77925	Identifier	ZEND_AST_LABEL		76258	0					
ANR	77926	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1238:3:32876:32927	76258	150	True				
ANR	77927	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	77928	Callee	zend_ast_export_name		76258	0					
ANR	77929	Identifier	zend_ast_export_name		76258	0					
ANR	77930	ArgumentList	str		76258	1					
ANR	77931	Argument	str		76258	0					
ANR	77932	Identifier	str		76258	0					
ANR	77933	Argument	ast -> child [ 0 ]		76258	1					
ANR	77934	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	77935	PtrMemberAccess	ast -> child		76258	0					
ANR	77936	Identifier	ast		76258	0					
ANR	77937	Identifier	child		76258	1					
ANR	77938	PrimaryExpression	0		76258	1					
ANR	77939	Argument	0		76258	2					
ANR	77940	PrimaryExpression	0		76258	0					
ANR	77941	Argument	indent		76258	3					
ANR	77942	Identifier	indent		76258	0					
ANR	77943	ExpressionStatement	"smart_str_appendc ( str , ':' )"	1239:3:32932:32959	76258	151	True				
ANR	77944	CallExpression	"smart_str_appendc ( str , ':' )"		76258	0					
ANR	77945	Callee	smart_str_appendc		76258	0					
ANR	77946	Identifier	smart_str_appendc		76258	0					
ANR	77947	ArgumentList	str		76258	1					
ANR	77948	Argument	str		76258	0					
ANR	77949	Identifier	str		76258	0					
ANR	77950	Argument	':'		76258	1					
ANR	77951	PrimaryExpression	':'		76258	0					
ANR	77952	BreakStatement	break ;	1240:3:32964:32969	76258	152	True				
ANR	77953	Label	case ZEND_AST_REF :	1241:2:32973:32990	76258	153	True				
ANR	77954	Identifier	ZEND_AST_REF		76258	0					
ANR	77955	ExpressionStatement	"smart_str_appendc ( str , '&' )"	1242:3:32995:33022	76258	154	True				
ANR	77956	CallExpression	"smart_str_appendc ( str , '&' )"		76258	0					
ANR	77957	Callee	smart_str_appendc		76258	0					
ANR	77958	Identifier	smart_str_appendc		76258	0					
ANR	77959	ArgumentList	str		76258	1					
ANR	77960	Argument	str		76258	0					
ANR	77961	Identifier	str		76258	0					
ANR	77962	Argument	'&'		76258	1					
ANR	77963	PrimaryExpression	'&'		76258	0					
ANR	77964	ExpressionStatement	ast = ast -> child [ 0 ]	1243:3:33027:33046	76258	155	True				
ANR	77965	AssignmentExpression	ast = ast -> child [ 0 ]		76258	0		=			
ANR	77966	Identifier	ast		76258	0					
ANR	77967	ArrayIndexing	ast -> child [ 0 ]		76258	1					
ANR	77968	PtrMemberAccess	ast -> child		76258	0					
ANR	77969	Identifier	ast		76258	0					
ANR	77970	Identifier	child		76258	1					
ANR	77971	PrimaryExpression	0		76258	1					
ANR	77972	GotoStatement	goto tail_call ;	1244:3:33051:33065	76258	156	True				
ANR	77973	Identifier	tail_call		76258	0					
ANR	77974	Label	case ZEND_AST_HALT_COMPILER :	1245:2:33069:33096	76258	157	True				
ANR	77975	Identifier	ZEND_AST_HALT_COMPILER		76258	0					
ANR	77976	ExpressionStatement	"APPEND_STR ( ""__HALT_COMPILER()"" )"	1246:3:33101:33132	76258	158	True				
ANR	77977	CallExpression	"APPEND_STR ( ""__HALT_COMPILER()"" )"		76258	0					
ANR	77978	Callee	APPEND_STR		76258	0					
ANR	77979	Identifier	APPEND_STR		76258	0					
ANR	77980	ArgumentList	"""__HALT_COMPILER()"""		76258	1					
ANR	77981	Argument	"""__HALT_COMPILER()"""		76258	0					
ANR	77982	PrimaryExpression	"""__HALT_COMPILER()"""		76258	0					
ANR	77983	Label	case ZEND_AST_ECHO :	1247:2:33136:33154	76258	159	True				
ANR	77984	Identifier	ZEND_AST_ECHO		76258	0					
ANR	77985	ExpressionStatement	"APPEND_NODE_1 ( ""echo"" )"	1248:3:33159:33180	76258	160	True				
ANR	77986	CallExpression	"APPEND_NODE_1 ( ""echo"" )"		76258	0					
ANR	77987	Callee	APPEND_NODE_1		76258	0					
ANR	77988	Identifier	APPEND_NODE_1		76258	0					
ANR	77989	ArgumentList	"""echo"""		76258	1					
ANR	77990	Argument	"""echo"""		76258	0					
ANR	77991	PrimaryExpression	"""echo"""		76258	0					
ANR	77992	Label	case ZEND_AST_THROW :	1249:2:33184:33203	76258	161	True				
ANR	77993	Identifier	ZEND_AST_THROW		76258	0					
ANR	77994	ExpressionStatement	"APPEND_NODE_1 ( ""throw"" )"	1250:3:33208:33230	76258	162	True				
ANR	77995	CallExpression	"APPEND_NODE_1 ( ""throw"" )"		76258	0					
ANR	77996	Callee	APPEND_NODE_1		76258	0					
ANR	77997	Identifier	APPEND_NODE_1		76258	0					
ANR	77998	ArgumentList	"""throw"""		76258	1					
ANR	77999	Argument	"""throw"""		76258	0					
ANR	78000	PrimaryExpression	"""throw"""		76258	0					
ANR	78001	Label	case ZEND_AST_GOTO :	1251:2:33234:33252	76258	163	True				
ANR	78002	Identifier	ZEND_AST_GOTO		76258	0					
ANR	78003	ExpressionStatement	"smart_str_appends ( str , ""goto "" )"	1252:3:33257:33288	76258	164	True				
ANR	78004	CallExpression	"smart_str_appends ( str , ""goto "" )"		76258	0					
ANR	78005	Callee	smart_str_appends		76258	0					
ANR	78006	Identifier	smart_str_appends		76258	0					
ANR	78007	ArgumentList	str		76258	1					
ANR	78008	Argument	str		76258	0					
ANR	78009	Identifier	str		76258	0					
ANR	78010	Argument	"""goto """		76258	1					
ANR	78011	PrimaryExpression	"""goto """		76258	0					
ANR	78012	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1253:3:33293:33344	76258	165	True				
ANR	78013	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	78014	Callee	zend_ast_export_name		76258	0					
ANR	78015	Identifier	zend_ast_export_name		76258	0					
ANR	78016	ArgumentList	str		76258	1					
ANR	78017	Argument	str		76258	0					
ANR	78018	Identifier	str		76258	0					
ANR	78019	Argument	ast -> child [ 0 ]		76258	1					
ANR	78020	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78021	PtrMemberAccess	ast -> child		76258	0					
ANR	78022	Identifier	ast		76258	0					
ANR	78023	Identifier	child		76258	1					
ANR	78024	PrimaryExpression	0		76258	1					
ANR	78025	Argument	0		76258	2					
ANR	78026	PrimaryExpression	0		76258	0					
ANR	78027	Argument	indent		76258	3					
ANR	78028	Identifier	indent		76258	0					
ANR	78029	BreakStatement	break ;	1254:3:33349:33354	76258	166	True				
ANR	78030	Label	case ZEND_AST_BREAK :	1255:2:33358:33377	76258	167	True				
ANR	78031	Identifier	ZEND_AST_BREAK		76258	0					
ANR	78032	ExpressionStatement	"APPEND_NODE_1 ( ""break"" )"	1256:3:33382:33404	76258	168	True				
ANR	78033	CallExpression	"APPEND_NODE_1 ( ""break"" )"		76258	0					
ANR	78034	Callee	APPEND_NODE_1		76258	0					
ANR	78035	Identifier	APPEND_NODE_1		76258	0					
ANR	78036	ArgumentList	"""break"""		76258	1					
ANR	78037	Argument	"""break"""		76258	0					
ANR	78038	PrimaryExpression	"""break"""		76258	0					
ANR	78039	Label	case ZEND_AST_CONTINUE :	1257:2:33408:33430	76258	169	True				
ANR	78040	Identifier	ZEND_AST_CONTINUE		76258	0					
ANR	78041	ExpressionStatement	"APPEND_NODE_1 ( ""continue"" )"	1258:3:33435:33460	76258	170	True				
ANR	78042	CallExpression	"APPEND_NODE_1 ( ""continue"" )"		76258	0					
ANR	78043	Callee	APPEND_NODE_1		76258	0					
ANR	78044	Identifier	APPEND_NODE_1		76258	0					
ANR	78045	ArgumentList	"""continue"""		76258	1					
ANR	78046	Argument	"""continue"""		76258	0					
ANR	78047	PrimaryExpression	"""continue"""		76258	0					
ANR	78048	Label	case ZEND_AST_DIM :	1261:2:33487:33504	76258	171	True				
ANR	78049	Identifier	ZEND_AST_DIM		76258	0					
ANR	78050	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 260 , indent )"	1262:3:33509:33560	76258	172	True				
ANR	78051	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 260 , indent )"		76258	0					
ANR	78052	Callee	zend_ast_export_ex		76258	0					
ANR	78053	Identifier	zend_ast_export_ex		76258	0					
ANR	78054	ArgumentList	str		76258	1					
ANR	78055	Argument	str		76258	0					
ANR	78056	Identifier	str		76258	0					
ANR	78057	Argument	ast -> child [ 0 ]		76258	1					
ANR	78058	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78059	PtrMemberAccess	ast -> child		76258	0					
ANR	78060	Identifier	ast		76258	0					
ANR	78061	Identifier	child		76258	1					
ANR	78062	PrimaryExpression	0		76258	1					
ANR	78063	Argument	260		76258	2					
ANR	78064	PrimaryExpression	260		76258	0					
ANR	78065	Argument	indent		76258	3					
ANR	78066	Identifier	indent		76258	0					
ANR	78067	ExpressionStatement	"smart_str_appendc ( str , '[' )"	1263:3:33565:33592	76258	173	True				
ANR	78068	CallExpression	"smart_str_appendc ( str , '[' )"		76258	0					
ANR	78069	Callee	smart_str_appendc		76258	0					
ANR	78070	Identifier	smart_str_appendc		76258	0					
ANR	78071	ArgumentList	str		76258	1					
ANR	78072	Argument	str		76258	0					
ANR	78073	Identifier	str		76258	0					
ANR	78074	Argument	'['		76258	1					
ANR	78075	PrimaryExpression	'['		76258	0					
ANR	78076	IfStatement	if ( ast -> child [ 1 ] )		76258	174					
ANR	78077	Condition	ast -> child [ 1 ]	1264:7:33601:33613	76258	0	True				
ANR	78078	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78079	PtrMemberAccess	ast -> child		76258	0					
ANR	78080	Identifier	ast		76258	0					
ANR	78081	Identifier	child		76258	1					
ANR	78082	PrimaryExpression	1		76258	1					
ANR	78083	CompoundStatement		297:22:8910:8910	76258	1					
ANR	78084	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1265:4:33622:33671	76258	0	True				
ANR	78085	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	78086	Callee	zend_ast_export_ex		76258	0					
ANR	78087	Identifier	zend_ast_export_ex		76258	0					
ANR	78088	ArgumentList	str		76258	1					
ANR	78089	Argument	str		76258	0					
ANR	78090	Identifier	str		76258	0					
ANR	78091	Argument	ast -> child [ 1 ]		76258	1					
ANR	78092	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78093	PtrMemberAccess	ast -> child		76258	0					
ANR	78094	Identifier	ast		76258	0					
ANR	78095	Identifier	child		76258	1					
ANR	78096	PrimaryExpression	1		76258	1					
ANR	78097	Argument	0		76258	2					
ANR	78098	PrimaryExpression	0		76258	0					
ANR	78099	Argument	indent		76258	3					
ANR	78100	Identifier	indent		76258	0					
ANR	78101	ExpressionStatement	"smart_str_appendc ( str , ']' )"	1267:3:33681:33708	76258	175	True				
ANR	78102	CallExpression	"smart_str_appendc ( str , ']' )"		76258	0					
ANR	78103	Callee	smart_str_appendc		76258	0					
ANR	78104	Identifier	smart_str_appendc		76258	0					
ANR	78105	ArgumentList	str		76258	1					
ANR	78106	Argument	str		76258	0					
ANR	78107	Identifier	str		76258	0					
ANR	78108	Argument	']'		76258	1					
ANR	78109	PrimaryExpression	']'		76258	0					
ANR	78110	BreakStatement	break ;	1268:3:33713:33718	76258	176	True				
ANR	78111	Label	case ZEND_AST_PROP :	1269:2:33722:33740	76258	177	True				
ANR	78112	Identifier	ZEND_AST_PROP		76258	0					
ANR	78113	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1270:3:33745:33794	76258	178	True				
ANR	78114	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	78115	Callee	zend_ast_export_ex		76258	0					
ANR	78116	Identifier	zend_ast_export_ex		76258	0					
ANR	78117	ArgumentList	str		76258	1					
ANR	78118	Argument	str		76258	0					
ANR	78119	Identifier	str		76258	0					
ANR	78120	Argument	ast -> child [ 0 ]		76258	1					
ANR	78121	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78122	PtrMemberAccess	ast -> child		76258	0					
ANR	78123	Identifier	ast		76258	0					
ANR	78124	Identifier	child		76258	1					
ANR	78125	PrimaryExpression	0		76258	1					
ANR	78126	Argument	0		76258	2					
ANR	78127	PrimaryExpression	0		76258	0					
ANR	78128	Argument	indent		76258	3					
ANR	78129	Identifier	indent		76258	0					
ANR	78130	ExpressionStatement	"smart_str_appends ( str , ""->"" )"	1271:3:33799:33827	76258	179	True				
ANR	78131	CallExpression	"smart_str_appends ( str , ""->"" )"		76258	0					
ANR	78132	Callee	smart_str_appends		76258	0					
ANR	78133	Identifier	smart_str_appends		76258	0					
ANR	78134	ArgumentList	str		76258	1					
ANR	78135	Argument	str		76258	0					
ANR	78136	Identifier	str		76258	0					
ANR	78137	Argument	"""->"""		76258	1					
ANR	78138	PrimaryExpression	"""->"""		76258	0					
ANR	78139	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1272:3:33832:33882	76258	180	True				
ANR	78140	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	78141	Callee	zend_ast_export_var		76258	0					
ANR	78142	Identifier	zend_ast_export_var		76258	0					
ANR	78143	ArgumentList	str		76258	1					
ANR	78144	Argument	str		76258	0					
ANR	78145	Identifier	str		76258	0					
ANR	78146	Argument	ast -> child [ 1 ]		76258	1					
ANR	78147	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78148	PtrMemberAccess	ast -> child		76258	0					
ANR	78149	Identifier	ast		76258	0					
ANR	78150	Identifier	child		76258	1					
ANR	78151	PrimaryExpression	1		76258	1					
ANR	78152	Argument	0		76258	2					
ANR	78153	PrimaryExpression	0		76258	0					
ANR	78154	Argument	indent		76258	3					
ANR	78155	Identifier	indent		76258	0					
ANR	78156	BreakStatement	break ;	1273:3:33887:33892	76258	181	True				
ANR	78157	Label	case ZEND_AST_STATIC_PROP :	1274:2:33896:33921	76258	182	True				
ANR	78158	Identifier	ZEND_AST_STATIC_PROP		76258	0					
ANR	78159	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1275:3:33926:33980	76258	183	True				
ANR	78160	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	78161	Callee	zend_ast_export_ns_name		76258	0					
ANR	78162	Identifier	zend_ast_export_ns_name		76258	0					
ANR	78163	ArgumentList	str		76258	1					
ANR	78164	Argument	str		76258	0					
ANR	78165	Identifier	str		76258	0					
ANR	78166	Argument	ast -> child [ 0 ]		76258	1					
ANR	78167	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78168	PtrMemberAccess	ast -> child		76258	0					
ANR	78169	Identifier	ast		76258	0					
ANR	78170	Identifier	child		76258	1					
ANR	78171	PrimaryExpression	0		76258	1					
ANR	78172	Argument	0		76258	2					
ANR	78173	PrimaryExpression	0		76258	0					
ANR	78174	Argument	indent		76258	3					
ANR	78175	Identifier	indent		76258	0					
ANR	78176	ExpressionStatement	"smart_str_appends ( str , ""::$"" )"	1276:3:33985:34014	76258	184	True				
ANR	78177	CallExpression	"smart_str_appends ( str , ""::$"" )"		76258	0					
ANR	78178	Callee	smart_str_appends		76258	0					
ANR	78179	Identifier	smart_str_appends		76258	0					
ANR	78180	ArgumentList	str		76258	1					
ANR	78181	Argument	str		76258	0					
ANR	78182	Identifier	str		76258	0					
ANR	78183	Argument	"""::$"""		76258	1					
ANR	78184	PrimaryExpression	"""::$"""		76258	0					
ANR	78185	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1277:3:34019:34069	76258	185	True				
ANR	78186	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	78187	Callee	zend_ast_export_var		76258	0					
ANR	78188	Identifier	zend_ast_export_var		76258	0					
ANR	78189	ArgumentList	str		76258	1					
ANR	78190	Argument	str		76258	0					
ANR	78191	Identifier	str		76258	0					
ANR	78192	Argument	ast -> child [ 1 ]		76258	1					
ANR	78193	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78194	PtrMemberAccess	ast -> child		76258	0					
ANR	78195	Identifier	ast		76258	0					
ANR	78196	Identifier	child		76258	1					
ANR	78197	PrimaryExpression	1		76258	1					
ANR	78198	Argument	0		76258	2					
ANR	78199	PrimaryExpression	0		76258	0					
ANR	78200	Argument	indent		76258	3					
ANR	78201	Identifier	indent		76258	0					
ANR	78202	BreakStatement	break ;	1278:3:34074:34079	76258	186	True				
ANR	78203	Label	case ZEND_AST_CALL :	1279:2:34083:34101	76258	187	True				
ANR	78204	Identifier	ZEND_AST_CALL		76258	0					
ANR	78205	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1280:3:34106:34160	76258	188	True				
ANR	78206	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	78207	Callee	zend_ast_export_ns_name		76258	0					
ANR	78208	Identifier	zend_ast_export_ns_name		76258	0					
ANR	78209	ArgumentList	str		76258	1					
ANR	78210	Argument	str		76258	0					
ANR	78211	Identifier	str		76258	0					
ANR	78212	Argument	ast -> child [ 0 ]		76258	1					
ANR	78213	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78214	PtrMemberAccess	ast -> child		76258	0					
ANR	78215	Identifier	ast		76258	0					
ANR	78216	Identifier	child		76258	1					
ANR	78217	PrimaryExpression	0		76258	1					
ANR	78218	Argument	0		76258	2					
ANR	78219	PrimaryExpression	0		76258	0					
ANR	78220	Argument	indent		76258	3					
ANR	78221	Identifier	indent		76258	0					
ANR	78222	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1281:3:34165:34192	76258	189	True				
ANR	78223	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	78224	Callee	smart_str_appendc		76258	0					
ANR	78225	Identifier	smart_str_appendc		76258	0					
ANR	78226	ArgumentList	str		76258	1					
ANR	78227	Argument	str		76258	0					
ANR	78228	Identifier	str		76258	0					
ANR	78229	Argument	'('		76258	1					
ANR	78230	PrimaryExpression	'('		76258	0					
ANR	78231	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1282:3:34197:34246	76258	190	True				
ANR	78232	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	78233	Callee	zend_ast_export_ex		76258	0					
ANR	78234	Identifier	zend_ast_export_ex		76258	0					
ANR	78235	ArgumentList	str		76258	1					
ANR	78236	Argument	str		76258	0					
ANR	78237	Identifier	str		76258	0					
ANR	78238	Argument	ast -> child [ 1 ]		76258	1					
ANR	78239	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78240	PtrMemberAccess	ast -> child		76258	0					
ANR	78241	Identifier	ast		76258	0					
ANR	78242	Identifier	child		76258	1					
ANR	78243	PrimaryExpression	1		76258	1					
ANR	78244	Argument	0		76258	2					
ANR	78245	PrimaryExpression	0		76258	0					
ANR	78246	Argument	indent		76258	3					
ANR	78247	Identifier	indent		76258	0					
ANR	78248	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1283:3:34251:34278	76258	191	True				
ANR	78249	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	78250	Callee	smart_str_appendc		76258	0					
ANR	78251	Identifier	smart_str_appendc		76258	0					
ANR	78252	ArgumentList	str		76258	1					
ANR	78253	Argument	str		76258	0					
ANR	78254	Identifier	str		76258	0					
ANR	78255	Argument	')'		76258	1					
ANR	78256	PrimaryExpression	')'		76258	0					
ANR	78257	BreakStatement	break ;	1284:3:34283:34288	76258	192	True				
ANR	78258	Label	case ZEND_AST_CLASS_CONST :	1285:2:34292:34317	76258	193	True				
ANR	78259	Identifier	ZEND_AST_CLASS_CONST		76258	0					
ANR	78260	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1286:3:34322:34376	76258	194	True				
ANR	78261	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	78262	Callee	zend_ast_export_ns_name		76258	0					
ANR	78263	Identifier	zend_ast_export_ns_name		76258	0					
ANR	78264	ArgumentList	str		76258	1					
ANR	78265	Argument	str		76258	0					
ANR	78266	Identifier	str		76258	0					
ANR	78267	Argument	ast -> child [ 0 ]		76258	1					
ANR	78268	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78269	PtrMemberAccess	ast -> child		76258	0					
ANR	78270	Identifier	ast		76258	0					
ANR	78271	Identifier	child		76258	1					
ANR	78272	PrimaryExpression	0		76258	1					
ANR	78273	Argument	0		76258	2					
ANR	78274	PrimaryExpression	0		76258	0					
ANR	78275	Argument	indent		76258	3					
ANR	78276	Identifier	indent		76258	0					
ANR	78277	ExpressionStatement	"smart_str_appends ( str , ""::"" )"	1287:3:34381:34409	76258	195	True				
ANR	78278	CallExpression	"smart_str_appends ( str , ""::"" )"		76258	0					
ANR	78279	Callee	smart_str_appends		76258	0					
ANR	78280	Identifier	smart_str_appends		76258	0					
ANR	78281	ArgumentList	str		76258	1					
ANR	78282	Argument	str		76258	0					
ANR	78283	Identifier	str		76258	0					
ANR	78284	Argument	"""::"""		76258	1					
ANR	78285	PrimaryExpression	"""::"""		76258	0					
ANR	78286	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1288:3:34414:34465	76258	196	True				
ANR	78287	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	78288	Callee	zend_ast_export_name		76258	0					
ANR	78289	Identifier	zend_ast_export_name		76258	0					
ANR	78290	ArgumentList	str		76258	1					
ANR	78291	Argument	str		76258	0					
ANR	78292	Identifier	str		76258	0					
ANR	78293	Argument	ast -> child [ 1 ]		76258	1					
ANR	78294	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78295	PtrMemberAccess	ast -> child		76258	0					
ANR	78296	Identifier	ast		76258	0					
ANR	78297	Identifier	child		76258	1					
ANR	78298	PrimaryExpression	1		76258	1					
ANR	78299	Argument	0		76258	2					
ANR	78300	PrimaryExpression	0		76258	0					
ANR	78301	Argument	indent		76258	3					
ANR	78302	Identifier	indent		76258	0					
ANR	78303	BreakStatement	break ;	1289:3:34470:34475	76258	197	True				
ANR	78304	Label	case ZEND_AST_ASSIGN :	1290:2:34479:34499	76258	198	True				
ANR	78305	Identifier	ZEND_AST_ASSIGN		76258	0					
ANR	78306	ExpressionStatement	"BINARY_OP ( "" = "" , 90 , 91 , 90 )"	1290:35:34512:34542	76258	199	True				
ANR	78307	CallExpression	"BINARY_OP ( "" = "" , 90 , 91 , 90 )"		76258	0					
ANR	78308	Callee	BINARY_OP		76258	0					
ANR	78309	Identifier	BINARY_OP		76258	0					
ANR	78310	ArgumentList	""" = """		76258	1					
ANR	78311	Argument	""" = """		76258	0					
ANR	78312	PrimaryExpression	""" = """		76258	0					
ANR	78313	Argument	90		76258	1					
ANR	78314	PrimaryExpression	90		76258	0					
ANR	78315	Argument	91		76258	2					
ANR	78316	PrimaryExpression	91		76258	0					
ANR	78317	Argument	90		76258	3					
ANR	78318	PrimaryExpression	90		76258	0					
ANR	78319	Label	case ZEND_AST_ASSIGN_REF :	1291:2:34546:34570	76258	200	True				
ANR	78320	Identifier	ZEND_AST_ASSIGN_REF		76258	0					
ANR	78321	ExpressionStatement	"BINARY_OP ( "" =& "" , 90 , 91 , 90 )"	1291:35:34579:34609	76258	201	True				
ANR	78322	CallExpression	"BINARY_OP ( "" =& "" , 90 , 91 , 90 )"		76258	0					
ANR	78323	Callee	BINARY_OP		76258	0					
ANR	78324	Identifier	BINARY_OP		76258	0					
ANR	78325	ArgumentList	""" =& """		76258	1					
ANR	78326	Argument	""" =& """		76258	0					
ANR	78327	PrimaryExpression	""" =& """		76258	0					
ANR	78328	Argument	90		76258	1					
ANR	78329	PrimaryExpression	90		76258	0					
ANR	78330	Argument	91		76258	2					
ANR	78331	PrimaryExpression	91		76258	0					
ANR	78332	Argument	90		76258	3					
ANR	78333	PrimaryExpression	90		76258	0					
ANR	78334	Label	case ZEND_AST_ASSIGN_OP :	1292:2:34613:34636	76258	202	True				
ANR	78335	Identifier	ZEND_AST_ASSIGN_OP		76258	0					
ANR	78336	SwitchStatement	switch ( ast -> attr )		76258	203					
ANR	78337	Condition	ast -> attr	1293:11:34649:34657	76258	0	True				
ANR	78338	PtrMemberAccess	ast -> attr		76258	0					
ANR	78339	Identifier	ast		76258	0					
ANR	78340	Identifier	attr		76258	1					
ANR	78341	CompoundStatement		326:22:9954:9954	76258	1					
ANR	78342	Label	case ZEND_ASSIGN_ADD :	1294:4:34666:34686	76258	0	True				
ANR	78343	Identifier	ZEND_ASSIGN_ADD		76258	0					
ANR	78344	ExpressionStatement	"BINARY_OP ( "" += "" , 90 , 91 , 90 )"	1294:29:34691:34721	76258	1	True				
ANR	78345	CallExpression	"BINARY_OP ( "" += "" , 90 , 91 , 90 )"		76258	0					
ANR	78346	Callee	BINARY_OP		76258	0					
ANR	78347	Identifier	BINARY_OP		76258	0					
ANR	78348	ArgumentList	""" += """		76258	1					
ANR	78349	Argument	""" += """		76258	0					
ANR	78350	PrimaryExpression	""" += """		76258	0					
ANR	78351	Argument	90		76258	1					
ANR	78352	PrimaryExpression	90		76258	0					
ANR	78353	Argument	91		76258	2					
ANR	78354	PrimaryExpression	91		76258	0					
ANR	78355	Argument	90		76258	3					
ANR	78356	PrimaryExpression	90		76258	0					
ANR	78357	Label	case ZEND_ASSIGN_SUB :	1295:4:34727:34747	76258	2	True				
ANR	78358	Identifier	ZEND_ASSIGN_SUB		76258	0					
ANR	78359	ExpressionStatement	"BINARY_OP ( "" -= "" , 90 , 91 , 90 )"	1295:29:34752:34782	76258	3	True				
ANR	78360	CallExpression	"BINARY_OP ( "" -= "" , 90 , 91 , 90 )"		76258	0					
ANR	78361	Callee	BINARY_OP		76258	0					
ANR	78362	Identifier	BINARY_OP		76258	0					
ANR	78363	ArgumentList	""" -= """		76258	1					
ANR	78364	Argument	""" -= """		76258	0					
ANR	78365	PrimaryExpression	""" -= """		76258	0					
ANR	78366	Argument	90		76258	1					
ANR	78367	PrimaryExpression	90		76258	0					
ANR	78368	Argument	91		76258	2					
ANR	78369	PrimaryExpression	91		76258	0					
ANR	78370	Argument	90		76258	3					
ANR	78371	PrimaryExpression	90		76258	0					
ANR	78372	Label	case ZEND_ASSIGN_MUL :	1296:4:34788:34808	76258	4	True				
ANR	78373	Identifier	ZEND_ASSIGN_MUL		76258	0					
ANR	78374	ExpressionStatement	"BINARY_OP ( "" *= "" , 90 , 91 , 90 )"	1296:29:34813:34843	76258	5	True				
ANR	78375	CallExpression	"BINARY_OP ( "" *= "" , 90 , 91 , 90 )"		76258	0					
ANR	78376	Callee	BINARY_OP		76258	0					
ANR	78377	Identifier	BINARY_OP		76258	0					
ANR	78378	ArgumentList	""" *= """		76258	1					
ANR	78379	Argument	""" *= """		76258	0					
ANR	78380	PrimaryExpression	""" *= """		76258	0					
ANR	78381	Argument	90		76258	1					
ANR	78382	PrimaryExpression	90		76258	0					
ANR	78383	Argument	91		76258	2					
ANR	78384	PrimaryExpression	91		76258	0					
ANR	78385	Argument	90		76258	3					
ANR	78386	PrimaryExpression	90		76258	0					
ANR	78387	Label	case ZEND_ASSIGN_DIV :	1297:4:34849:34869	76258	6	True				
ANR	78388	Identifier	ZEND_ASSIGN_DIV		76258	0					
ANR	78389	ExpressionStatement	"BINARY_OP ( "" /= "" , 90 , 91 , 90 )"	1297:29:34874:34904	76258	7	True				
ANR	78390	CallExpression	"BINARY_OP ( "" /= "" , 90 , 91 , 90 )"		76258	0					
ANR	78391	Callee	BINARY_OP		76258	0					
ANR	78392	Identifier	BINARY_OP		76258	0					
ANR	78393	ArgumentList	""" /= """		76258	1					
ANR	78394	Argument	""" /= """		76258	0					
ANR	78395	PrimaryExpression	""" /= """		76258	0					
ANR	78396	Argument	90		76258	1					
ANR	78397	PrimaryExpression	90		76258	0					
ANR	78398	Argument	91		76258	2					
ANR	78399	PrimaryExpression	91		76258	0					
ANR	78400	Argument	90		76258	3					
ANR	78401	PrimaryExpression	90		76258	0					
ANR	78402	Label	case ZEND_ASSIGN_MOD :	1298:4:34910:34930	76258	8	True				
ANR	78403	Identifier	ZEND_ASSIGN_MOD		76258	0					
ANR	78404	ExpressionStatement	"BINARY_OP ( "" %= "" , 90 , 91 , 90 )"	1298:29:34935:34965	76258	9	True				
ANR	78405	CallExpression	"BINARY_OP ( "" %= "" , 90 , 91 , 90 )"		76258	0					
ANR	78406	Callee	BINARY_OP		76258	0					
ANR	78407	Identifier	BINARY_OP		76258	0					
ANR	78408	ArgumentList	""" %= """		76258	1					
ANR	78409	Argument	""" %= """		76258	0					
ANR	78410	PrimaryExpression	""" %= """		76258	0					
ANR	78411	Argument	90		76258	1					
ANR	78412	PrimaryExpression	90		76258	0					
ANR	78413	Argument	91		76258	2					
ANR	78414	PrimaryExpression	91		76258	0					
ANR	78415	Argument	90		76258	3					
ANR	78416	PrimaryExpression	90		76258	0					
ANR	78417	Label	case ZEND_ASSIGN_SL :	1299:4:34971:34990	76258	10	True				
ANR	78418	Identifier	ZEND_ASSIGN_SL		76258	0					
ANR	78419	ExpressionStatement	"BINARY_OP ( "" <<= "" , 90 , 91 , 90 )"	1299:29:34996:35026	76258	11	True				
ANR	78420	CallExpression	"BINARY_OP ( "" <<= "" , 90 , 91 , 90 )"		76258	0					
ANR	78421	Callee	BINARY_OP		76258	0					
ANR	78422	Identifier	BINARY_OP		76258	0					
ANR	78423	ArgumentList	""" <<= """		76258	1					
ANR	78424	Argument	""" <<= """		76258	0					
ANR	78425	PrimaryExpression	""" <<= """		76258	0					
ANR	78426	Argument	90		76258	1					
ANR	78427	PrimaryExpression	90		76258	0					
ANR	78428	Argument	91		76258	2					
ANR	78429	PrimaryExpression	91		76258	0					
ANR	78430	Argument	90		76258	3					
ANR	78431	PrimaryExpression	90		76258	0					
ANR	78432	Label	case ZEND_ASSIGN_SR :	1300:4:35032:35051	76258	12	True				
ANR	78433	Identifier	ZEND_ASSIGN_SR		76258	0					
ANR	78434	ExpressionStatement	"BINARY_OP ( "" >>= "" , 90 , 91 , 90 )"	1300:29:35057:35087	76258	13	True				
ANR	78435	CallExpression	"BINARY_OP ( "" >>= "" , 90 , 91 , 90 )"		76258	0					
ANR	78436	Callee	BINARY_OP		76258	0					
ANR	78437	Identifier	BINARY_OP		76258	0					
ANR	78438	ArgumentList	""" >>= """		76258	1					
ANR	78439	Argument	""" >>= """		76258	0					
ANR	78440	PrimaryExpression	""" >>= """		76258	0					
ANR	78441	Argument	90		76258	1					
ANR	78442	PrimaryExpression	90		76258	0					
ANR	78443	Argument	91		76258	2					
ANR	78444	PrimaryExpression	91		76258	0					
ANR	78445	Argument	90		76258	3					
ANR	78446	PrimaryExpression	90		76258	0					
ANR	78447	Label	case ZEND_ASSIGN_CONCAT :	1301:4:35093:35116	76258	14	True				
ANR	78448	Identifier	ZEND_ASSIGN_CONCAT		76258	0					
ANR	78449	ExpressionStatement	"BINARY_OP ( "" .= "" , 90 , 91 , 90 )"	1301:29:35118:35148	76258	15	True				
ANR	78450	CallExpression	"BINARY_OP ( "" .= "" , 90 , 91 , 90 )"		76258	0					
ANR	78451	Callee	BINARY_OP		76258	0					
ANR	78452	Identifier	BINARY_OP		76258	0					
ANR	78453	ArgumentList	""" .= """		76258	1					
ANR	78454	Argument	""" .= """		76258	0					
ANR	78455	PrimaryExpression	""" .= """		76258	0					
ANR	78456	Argument	90		76258	1					
ANR	78457	PrimaryExpression	90		76258	0					
ANR	78458	Argument	91		76258	2					
ANR	78459	PrimaryExpression	91		76258	0					
ANR	78460	Argument	90		76258	3					
ANR	78461	PrimaryExpression	90		76258	0					
ANR	78462	Label	case ZEND_ASSIGN_BW_OR :	1302:4:35154:35176	76258	16	True				
ANR	78463	Identifier	ZEND_ASSIGN_BW_OR		76258	0					
ANR	78464	ExpressionStatement	"BINARY_OP ( "" |= "" , 90 , 91 , 90 )"	1302:29:35179:35209	76258	17	True				
ANR	78465	CallExpression	"BINARY_OP ( "" |= "" , 90 , 91 , 90 )"		76258	0					
ANR	78466	Callee	BINARY_OP		76258	0					
ANR	78467	Identifier	BINARY_OP		76258	0					
ANR	78468	ArgumentList	""" |= """		76258	1					
ANR	78469	Argument	""" |= """		76258	0					
ANR	78470	PrimaryExpression	""" |= """		76258	0					
ANR	78471	Argument	90		76258	1					
ANR	78472	PrimaryExpression	90		76258	0					
ANR	78473	Argument	91		76258	2					
ANR	78474	PrimaryExpression	91		76258	0					
ANR	78475	Argument	90		76258	3					
ANR	78476	PrimaryExpression	90		76258	0					
ANR	78477	Label	case ZEND_ASSIGN_BW_AND :	1303:4:35215:35238	76258	18	True				
ANR	78478	Identifier	ZEND_ASSIGN_BW_AND		76258	0					
ANR	78479	ExpressionStatement	"BINARY_OP ( "" &= "" , 90 , 91 , 90 )"	1303:29:35240:35270	76258	19	True				
ANR	78480	CallExpression	"BINARY_OP ( "" &= "" , 90 , 91 , 90 )"		76258	0					
ANR	78481	Callee	BINARY_OP		76258	0					
ANR	78482	Identifier	BINARY_OP		76258	0					
ANR	78483	ArgumentList	""" &= """		76258	1					
ANR	78484	Argument	""" &= """		76258	0					
ANR	78485	PrimaryExpression	""" &= """		76258	0					
ANR	78486	Argument	90		76258	1					
ANR	78487	PrimaryExpression	90		76258	0					
ANR	78488	Argument	91		76258	2					
ANR	78489	PrimaryExpression	91		76258	0					
ANR	78490	Argument	90		76258	3					
ANR	78491	PrimaryExpression	90		76258	0					
ANR	78492	Label	case ZEND_ASSIGN_BW_XOR :	1304:4:35276:35299	76258	20	True				
ANR	78493	Identifier	ZEND_ASSIGN_BW_XOR		76258	0					
ANR	78494	ExpressionStatement	"BINARY_OP ( "" ^= "" , 90 , 91 , 90 )"	1304:29:35301:35331	76258	21	True				
ANR	78495	CallExpression	"BINARY_OP ( "" ^= "" , 90 , 91 , 90 )"		76258	0					
ANR	78496	Callee	BINARY_OP		76258	0					
ANR	78497	Identifier	BINARY_OP		76258	0					
ANR	78498	ArgumentList	""" ^= """		76258	1					
ANR	78499	Argument	""" ^= """		76258	0					
ANR	78500	PrimaryExpression	""" ^= """		76258	0					
ANR	78501	Argument	90		76258	1					
ANR	78502	PrimaryExpression	90		76258	0					
ANR	78503	Argument	91		76258	2					
ANR	78504	PrimaryExpression	91		76258	0					
ANR	78505	Argument	90		76258	3					
ANR	78506	PrimaryExpression	90		76258	0					
ANR	78507	Label	case ZEND_POW :	1305:4:35337:35350	76258	22	True				
ANR	78508	Identifier	ZEND_POW		76258	0					
ANR	78509	ExpressionStatement	"BINARY_OP ( "" **= "" , 90 , 91 , 90 )"	1305:29:35362:35392	76258	23	True				
ANR	78510	CallExpression	"BINARY_OP ( "" **= "" , 90 , 91 , 90 )"		76258	0					
ANR	78511	Callee	BINARY_OP		76258	0					
ANR	78512	Identifier	BINARY_OP		76258	0					
ANR	78513	ArgumentList	""" **= """		76258	1					
ANR	78514	Argument	""" **= """		76258	0					
ANR	78515	PrimaryExpression	""" **= """		76258	0					
ANR	78516	Argument	90		76258	1					
ANR	78517	PrimaryExpression	90		76258	0					
ANR	78518	Argument	91		76258	2					
ANR	78519	PrimaryExpression	91		76258	0					
ANR	78520	Argument	90		76258	3					
ANR	78521	PrimaryExpression	90		76258	0					
ANR	78522	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1306:4:35398:35425	76258	24	True				
ANR	78523	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	78524	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	78525	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	78526	ArgumentList			76258	1					
ANR	78527	BreakStatement	break ;	1308:3:35435:35440	76258	204	True				
ANR	78528	Label	case ZEND_AST_BINARY_OP :	1309:2:35444:35467	76258	205	True				
ANR	78529	Identifier	ZEND_AST_BINARY_OP		76258	0					
ANR	78530	SwitchStatement	switch ( ast -> attr )		76258	206					
ANR	78531	Condition	ast -> attr	1310:11:35480:35488	76258	0	True				
ANR	78532	PtrMemberAccess	ast -> attr		76258	0					
ANR	78533	Identifier	ast		76258	0					
ANR	78534	Identifier	attr		76258	1					
ANR	78535	CompoundStatement		343:22:10785:10785	76258	1					
ANR	78536	Label	case ZEND_ADD :	1311:4:35497:35510	76258	0	True				
ANR	78537	Identifier	ZEND_ADD		76258	0					
ANR	78538	ExpressionStatement	"BINARY_OP ( "" + "" , 200 , 200 , 201 )"	1311:35:35528:35561	76258	1	True				
ANR	78539	CallExpression	"BINARY_OP ( "" + "" , 200 , 200 , 201 )"		76258	0					
ANR	78540	Callee	BINARY_OP		76258	0					
ANR	78541	Identifier	BINARY_OP		76258	0					
ANR	78542	ArgumentList	""" + """		76258	1					
ANR	78543	Argument	""" + """		76258	0					
ANR	78544	PrimaryExpression	""" + """		76258	0					
ANR	78545	Argument	200		76258	1					
ANR	78546	PrimaryExpression	200		76258	0					
ANR	78547	Argument	200		76258	2					
ANR	78548	PrimaryExpression	200		76258	0					
ANR	78549	Argument	201		76258	3					
ANR	78550	PrimaryExpression	201		76258	0					
ANR	78551	Label	case ZEND_SUB :	1312:4:35567:35580	76258	2	True				
ANR	78552	Identifier	ZEND_SUB		76258	0					
ANR	78553	ExpressionStatement	"BINARY_OP ( "" - "" , 200 , 200 , 201 )"	1312:35:35598:35631	76258	3	True				
ANR	78554	CallExpression	"BINARY_OP ( "" - "" , 200 , 200 , 201 )"		76258	0					
ANR	78555	Callee	BINARY_OP		76258	0					
ANR	78556	Identifier	BINARY_OP		76258	0					
ANR	78557	ArgumentList	""" - """		76258	1					
ANR	78558	Argument	""" - """		76258	0					
ANR	78559	PrimaryExpression	""" - """		76258	0					
ANR	78560	Argument	200		76258	1					
ANR	78561	PrimaryExpression	200		76258	0					
ANR	78562	Argument	200		76258	2					
ANR	78563	PrimaryExpression	200		76258	0					
ANR	78564	Argument	201		76258	3					
ANR	78565	PrimaryExpression	201		76258	0					
ANR	78566	Label	case ZEND_MUL :	1313:4:35637:35650	76258	4	True				
ANR	78567	Identifier	ZEND_MUL		76258	0					
ANR	78568	ExpressionStatement	"BINARY_OP ( "" * "" , 210 , 210 , 211 )"	1313:35:35668:35701	76258	5	True				
ANR	78569	CallExpression	"BINARY_OP ( "" * "" , 210 , 210 , 211 )"		76258	0					
ANR	78570	Callee	BINARY_OP		76258	0					
ANR	78571	Identifier	BINARY_OP		76258	0					
ANR	78572	ArgumentList	""" * """		76258	1					
ANR	78573	Argument	""" * """		76258	0					
ANR	78574	PrimaryExpression	""" * """		76258	0					
ANR	78575	Argument	210		76258	1					
ANR	78576	PrimaryExpression	210		76258	0					
ANR	78577	Argument	210		76258	2					
ANR	78578	PrimaryExpression	210		76258	0					
ANR	78579	Argument	211		76258	3					
ANR	78580	PrimaryExpression	211		76258	0					
ANR	78581	Label	case ZEND_DIV :	1314:4:35707:35720	76258	6	True				
ANR	78582	Identifier	ZEND_DIV		76258	0					
ANR	78583	ExpressionStatement	"BINARY_OP ( "" / "" , 210 , 210 , 211 )"	1314:35:35738:35771	76258	7	True				
ANR	78584	CallExpression	"BINARY_OP ( "" / "" , 210 , 210 , 211 )"		76258	0					
ANR	78585	Callee	BINARY_OP		76258	0					
ANR	78586	Identifier	BINARY_OP		76258	0					
ANR	78587	ArgumentList	""" / """		76258	1					
ANR	78588	Argument	""" / """		76258	0					
ANR	78589	PrimaryExpression	""" / """		76258	0					
ANR	78590	Argument	210		76258	1					
ANR	78591	PrimaryExpression	210		76258	0					
ANR	78592	Argument	210		76258	2					
ANR	78593	PrimaryExpression	210		76258	0					
ANR	78594	Argument	211		76258	3					
ANR	78595	PrimaryExpression	211		76258	0					
ANR	78596	Label	case ZEND_MOD :	1315:4:35777:35790	76258	8	True				
ANR	78597	Identifier	ZEND_MOD		76258	0					
ANR	78598	ExpressionStatement	"BINARY_OP ( "" % "" , 210 , 210 , 211 )"	1315:35:35808:35841	76258	9	True				
ANR	78599	CallExpression	"BINARY_OP ( "" % "" , 210 , 210 , 211 )"		76258	0					
ANR	78600	Callee	BINARY_OP		76258	0					
ANR	78601	Identifier	BINARY_OP		76258	0					
ANR	78602	ArgumentList	""" % """		76258	1					
ANR	78603	Argument	""" % """		76258	0					
ANR	78604	PrimaryExpression	""" % """		76258	0					
ANR	78605	Argument	210		76258	1					
ANR	78606	PrimaryExpression	210		76258	0					
ANR	78607	Argument	210		76258	2					
ANR	78608	PrimaryExpression	210		76258	0					
ANR	78609	Argument	211		76258	3					
ANR	78610	PrimaryExpression	211		76258	0					
ANR	78611	Label	case ZEND_SL :	1316:4:35847:35859	76258	10	True				
ANR	78612	Identifier	ZEND_SL		76258	0					
ANR	78613	ExpressionStatement	"BINARY_OP ( "" << "" , 190 , 190 , 191 )"	1316:35:35878:35911	76258	11	True				
ANR	78614	CallExpression	"BINARY_OP ( "" << "" , 190 , 190 , 191 )"		76258	0					
ANR	78615	Callee	BINARY_OP		76258	0					
ANR	78616	Identifier	BINARY_OP		76258	0					
ANR	78617	ArgumentList	""" << """		76258	1					
ANR	78618	Argument	""" << """		76258	0					
ANR	78619	PrimaryExpression	""" << """		76258	0					
ANR	78620	Argument	190		76258	1					
ANR	78621	PrimaryExpression	190		76258	0					
ANR	78622	Argument	190		76258	2					
ANR	78623	PrimaryExpression	190		76258	0					
ANR	78624	Argument	191		76258	3					
ANR	78625	PrimaryExpression	191		76258	0					
ANR	78626	Label	case ZEND_SR :	1317:4:35917:35929	76258	12	True				
ANR	78627	Identifier	ZEND_SR		76258	0					
ANR	78628	ExpressionStatement	"BINARY_OP ( "" >> "" , 190 , 190 , 191 )"	1317:35:35948:35981	76258	13	True				
ANR	78629	CallExpression	"BINARY_OP ( "" >> "" , 190 , 190 , 191 )"		76258	0					
ANR	78630	Callee	BINARY_OP		76258	0					
ANR	78631	Identifier	BINARY_OP		76258	0					
ANR	78632	ArgumentList	""" >> """		76258	1					
ANR	78633	Argument	""" >> """		76258	0					
ANR	78634	PrimaryExpression	""" >> """		76258	0					
ANR	78635	Argument	190		76258	1					
ANR	78636	PrimaryExpression	190		76258	0					
ANR	78637	Argument	190		76258	2					
ANR	78638	PrimaryExpression	190		76258	0					
ANR	78639	Argument	191		76258	3					
ANR	78640	PrimaryExpression	191		76258	0					
ANR	78641	Label	case ZEND_CONCAT :	1318:4:35987:36003	76258	14	True				
ANR	78642	Identifier	ZEND_CONCAT		76258	0					
ANR	78643	ExpressionStatement	"BINARY_OP ( "" . "" , 200 , 200 , 201 )"	1318:35:36018:36051	76258	15	True				
ANR	78644	CallExpression	"BINARY_OP ( "" . "" , 200 , 200 , 201 )"		76258	0					
ANR	78645	Callee	BINARY_OP		76258	0					
ANR	78646	Identifier	BINARY_OP		76258	0					
ANR	78647	ArgumentList	""" . """		76258	1					
ANR	78648	Argument	""" . """		76258	0					
ANR	78649	PrimaryExpression	""" . """		76258	0					
ANR	78650	Argument	200		76258	1					
ANR	78651	PrimaryExpression	200		76258	0					
ANR	78652	Argument	200		76258	2					
ANR	78653	PrimaryExpression	200		76258	0					
ANR	78654	Argument	201		76258	3					
ANR	78655	PrimaryExpression	201		76258	0					
ANR	78656	Label	case ZEND_BW_OR :	1319:4:36057:36072	76258	16	True				
ANR	78657	Identifier	ZEND_BW_OR		76258	0					
ANR	78658	ExpressionStatement	"BINARY_OP ( "" | "" , 140 , 140 , 141 )"	1319:35:36088:36121	76258	17	True				
ANR	78659	CallExpression	"BINARY_OP ( "" | "" , 140 , 140 , 141 )"		76258	0					
ANR	78660	Callee	BINARY_OP		76258	0					
ANR	78661	Identifier	BINARY_OP		76258	0					
ANR	78662	ArgumentList	""" | """		76258	1					
ANR	78663	Argument	""" | """		76258	0					
ANR	78664	PrimaryExpression	""" | """		76258	0					
ANR	78665	Argument	140		76258	1					
ANR	78666	PrimaryExpression	140		76258	0					
ANR	78667	Argument	140		76258	2					
ANR	78668	PrimaryExpression	140		76258	0					
ANR	78669	Argument	141		76258	3					
ANR	78670	PrimaryExpression	141		76258	0					
ANR	78671	Label	case ZEND_BW_AND :	1320:4:36127:36143	76258	18	True				
ANR	78672	Identifier	ZEND_BW_AND		76258	0					
ANR	78673	ExpressionStatement	"BINARY_OP ( "" & "" , 160 , 160 , 161 )"	1320:35:36158:36191	76258	19	True				
ANR	78674	CallExpression	"BINARY_OP ( "" & "" , 160 , 160 , 161 )"		76258	0					
ANR	78675	Callee	BINARY_OP		76258	0					
ANR	78676	Identifier	BINARY_OP		76258	0					
ANR	78677	ArgumentList	""" & """		76258	1					
ANR	78678	Argument	""" & """		76258	0					
ANR	78679	PrimaryExpression	""" & """		76258	0					
ANR	78680	Argument	160		76258	1					
ANR	78681	PrimaryExpression	160		76258	0					
ANR	78682	Argument	160		76258	2					
ANR	78683	PrimaryExpression	160		76258	0					
ANR	78684	Argument	161		76258	3					
ANR	78685	PrimaryExpression	161		76258	0					
ANR	78686	Label	case ZEND_BW_XOR :	1321:4:36197:36213	76258	20	True				
ANR	78687	Identifier	ZEND_BW_XOR		76258	0					
ANR	78688	ExpressionStatement	"BINARY_OP ( "" ^ "" , 150 , 150 , 151 )"	1321:35:36228:36261	76258	21	True				
ANR	78689	CallExpression	"BINARY_OP ( "" ^ "" , 150 , 150 , 151 )"		76258	0					
ANR	78690	Callee	BINARY_OP		76258	0					
ANR	78691	Identifier	BINARY_OP		76258	0					
ANR	78692	ArgumentList	""" ^ """		76258	1					
ANR	78693	Argument	""" ^ """		76258	0					
ANR	78694	PrimaryExpression	""" ^ """		76258	0					
ANR	78695	Argument	150		76258	1					
ANR	78696	PrimaryExpression	150		76258	0					
ANR	78697	Argument	150		76258	2					
ANR	78698	PrimaryExpression	150		76258	0					
ANR	78699	Argument	151		76258	3					
ANR	78700	PrimaryExpression	151		76258	0					
ANR	78701	Label	case ZEND_IS_IDENTICAL :	1322:4:36267:36289	76258	22	True				
ANR	78702	Identifier	ZEND_IS_IDENTICAL		76258	0					
ANR	78703	ExpressionStatement	"BINARY_OP ( "" === "" , 170 , 171 , 171 )"	1322:35:36298:36331	76258	23	True				
ANR	78704	CallExpression	"BINARY_OP ( "" === "" , 170 , 171 , 171 )"		76258	0					
ANR	78705	Callee	BINARY_OP		76258	0					
ANR	78706	Identifier	BINARY_OP		76258	0					
ANR	78707	ArgumentList	""" === """		76258	1					
ANR	78708	Argument	""" === """		76258	0					
ANR	78709	PrimaryExpression	""" === """		76258	0					
ANR	78710	Argument	170		76258	1					
ANR	78711	PrimaryExpression	170		76258	0					
ANR	78712	Argument	171		76258	2					
ANR	78713	PrimaryExpression	171		76258	0					
ANR	78714	Argument	171		76258	3					
ANR	78715	PrimaryExpression	171		76258	0					
ANR	78716	Label	case ZEND_IS_NOT_IDENTICAL :	1323:4:36337:36363	76258	24	True				
ANR	78717	Identifier	ZEND_IS_NOT_IDENTICAL		76258	0					
ANR	78718	ExpressionStatement	"BINARY_OP ( "" !== "" , 170 , 171 , 171 )"	1323:35:36368:36401	76258	25	True				
ANR	78719	CallExpression	"BINARY_OP ( "" !== "" , 170 , 171 , 171 )"		76258	0					
ANR	78720	Callee	BINARY_OP		76258	0					
ANR	78721	Identifier	BINARY_OP		76258	0					
ANR	78722	ArgumentList	""" !== """		76258	1					
ANR	78723	Argument	""" !== """		76258	0					
ANR	78724	PrimaryExpression	""" !== """		76258	0					
ANR	78725	Argument	170		76258	1					
ANR	78726	PrimaryExpression	170		76258	0					
ANR	78727	Argument	171		76258	2					
ANR	78728	PrimaryExpression	171		76258	0					
ANR	78729	Argument	171		76258	3					
ANR	78730	PrimaryExpression	171		76258	0					
ANR	78731	Label	case ZEND_IS_EQUAL :	1324:4:36407:36425	76258	26	True				
ANR	78732	Identifier	ZEND_IS_EQUAL		76258	0					
ANR	78733	ExpressionStatement	"BINARY_OP ( "" == "" , 170 , 171 , 171 )"	1324:35:36438:36471	76258	27	True				
ANR	78734	CallExpression	"BINARY_OP ( "" == "" , 170 , 171 , 171 )"		76258	0					
ANR	78735	Callee	BINARY_OP		76258	0					
ANR	78736	Identifier	BINARY_OP		76258	0					
ANR	78737	ArgumentList	""" == """		76258	1					
ANR	78738	Argument	""" == """		76258	0					
ANR	78739	PrimaryExpression	""" == """		76258	0					
ANR	78740	Argument	170		76258	1					
ANR	78741	PrimaryExpression	170		76258	0					
ANR	78742	Argument	171		76258	2					
ANR	78743	PrimaryExpression	171		76258	0					
ANR	78744	Argument	171		76258	3					
ANR	78745	PrimaryExpression	171		76258	0					
ANR	78746	Label	case ZEND_IS_NOT_EQUAL :	1325:4:36477:36499	76258	28	True				
ANR	78747	Identifier	ZEND_IS_NOT_EQUAL		76258	0					
ANR	78748	ExpressionStatement	"BINARY_OP ( "" != "" , 170 , 171 , 171 )"	1325:35:36508:36541	76258	29	True				
ANR	78749	CallExpression	"BINARY_OP ( "" != "" , 170 , 171 , 171 )"		76258	0					
ANR	78750	Callee	BINARY_OP		76258	0					
ANR	78751	Identifier	BINARY_OP		76258	0					
ANR	78752	ArgumentList	""" != """		76258	1					
ANR	78753	Argument	""" != """		76258	0					
ANR	78754	PrimaryExpression	""" != """		76258	0					
ANR	78755	Argument	170		76258	1					
ANR	78756	PrimaryExpression	170		76258	0					
ANR	78757	Argument	171		76258	2					
ANR	78758	PrimaryExpression	171		76258	0					
ANR	78759	Argument	171		76258	3					
ANR	78760	PrimaryExpression	171		76258	0					
ANR	78761	Label	case ZEND_IS_SMALLER :	1326:4:36547:36567	76258	30	True				
ANR	78762	Identifier	ZEND_IS_SMALLER		76258	0					
ANR	78763	ExpressionStatement	"BINARY_OP ( "" < "" , 180 , 181 , 181 )"	1326:35:36578:36611	76258	31	True				
ANR	78764	CallExpression	"BINARY_OP ( "" < "" , 180 , 181 , 181 )"		76258	0					
ANR	78765	Callee	BINARY_OP		76258	0					
ANR	78766	Identifier	BINARY_OP		76258	0					
ANR	78767	ArgumentList	""" < """		76258	1					
ANR	78768	Argument	""" < """		76258	0					
ANR	78769	PrimaryExpression	""" < """		76258	0					
ANR	78770	Argument	180		76258	1					
ANR	78771	PrimaryExpression	180		76258	0					
ANR	78772	Argument	181		76258	2					
ANR	78773	PrimaryExpression	181		76258	0					
ANR	78774	Argument	181		76258	3					
ANR	78775	PrimaryExpression	181		76258	0					
ANR	78776	Label	case ZEND_IS_SMALLER_OR_EQUAL :	1327:4:36617:36646	76258	32	True				
ANR	78777	Identifier	ZEND_IS_SMALLER_OR_EQUAL		76258	0					
ANR	78778	ExpressionStatement	"BINARY_OP ( "" <= "" , 180 , 181 , 181 )"	1327:35:36648:36681	76258	33	True				
ANR	78779	CallExpression	"BINARY_OP ( "" <= "" , 180 , 181 , 181 )"		76258	0					
ANR	78780	Callee	BINARY_OP		76258	0					
ANR	78781	Identifier	BINARY_OP		76258	0					
ANR	78782	ArgumentList	""" <= """		76258	1					
ANR	78783	Argument	""" <= """		76258	0					
ANR	78784	PrimaryExpression	""" <= """		76258	0					
ANR	78785	Argument	180		76258	1					
ANR	78786	PrimaryExpression	180		76258	0					
ANR	78787	Argument	181		76258	2					
ANR	78788	PrimaryExpression	181		76258	0					
ANR	78789	Argument	181		76258	3					
ANR	78790	PrimaryExpression	181		76258	0					
ANR	78791	Label	case ZEND_POW :	1328:4:36687:36700	76258	34	True				
ANR	78792	Identifier	ZEND_POW		76258	0					
ANR	78793	ExpressionStatement	"BINARY_OP ( "" ** "" , 250 , 251 , 250 )"	1328:35:36718:36751	76258	35	True				
ANR	78794	CallExpression	"BINARY_OP ( "" ** "" , 250 , 251 , 250 )"		76258	0					
ANR	78795	Callee	BINARY_OP		76258	0					
ANR	78796	Identifier	BINARY_OP		76258	0					
ANR	78797	ArgumentList	""" ** """		76258	1					
ANR	78798	Argument	""" ** """		76258	0					
ANR	78799	PrimaryExpression	""" ** """		76258	0					
ANR	78800	Argument	250		76258	1					
ANR	78801	PrimaryExpression	250		76258	0					
ANR	78802	Argument	251		76258	2					
ANR	78803	PrimaryExpression	251		76258	0					
ANR	78804	Argument	250		76258	3					
ANR	78805	PrimaryExpression	250		76258	0					
ANR	78806	Label	case ZEND_BOOL_XOR :	1329:4:36757:36775	76258	36	True				
ANR	78807	Identifier	ZEND_BOOL_XOR		76258	0					
ANR	78808	ExpressionStatement	"BINARY_OP ( "" xor "" , 40 , 40 , 41 )"	1329:35:36788:36821	76258	37	True				
ANR	78809	CallExpression	"BINARY_OP ( "" xor "" , 40 , 40 , 41 )"		76258	0					
ANR	78810	Callee	BINARY_OP		76258	0					
ANR	78811	Identifier	BINARY_OP		76258	0					
ANR	78812	ArgumentList	""" xor """		76258	1					
ANR	78813	Argument	""" xor """		76258	0					
ANR	78814	PrimaryExpression	""" xor """		76258	0					
ANR	78815	Argument	40		76258	1					
ANR	78816	PrimaryExpression	40		76258	0					
ANR	78817	Argument	40		76258	2					
ANR	78818	PrimaryExpression	40		76258	0					
ANR	78819	Argument	41		76258	3					
ANR	78820	PrimaryExpression	41		76258	0					
ANR	78821	Label	case ZEND_SPACESHIP :	1330:4:36827:36846	76258	38	True				
ANR	78822	Identifier	ZEND_SPACESHIP		76258	0					
ANR	78823	ExpressionStatement	"BINARY_OP ( "" <=> "" , 180 , 181 , 181 )"	1330:35:36858:36891	76258	39	True				
ANR	78824	CallExpression	"BINARY_OP ( "" <=> "" , 180 , 181 , 181 )"		76258	0					
ANR	78825	Callee	BINARY_OP		76258	0					
ANR	78826	Identifier	BINARY_OP		76258	0					
ANR	78827	ArgumentList	""" <=> """		76258	1					
ANR	78828	Argument	""" <=> """		76258	0					
ANR	78829	PrimaryExpression	""" <=> """		76258	0					
ANR	78830	Argument	180		76258	1					
ANR	78831	PrimaryExpression	180		76258	0					
ANR	78832	Argument	181		76258	2					
ANR	78833	PrimaryExpression	181		76258	0					
ANR	78834	Argument	181		76258	3					
ANR	78835	PrimaryExpression	181		76258	0					
ANR	78836	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1331:4:36897:36924	76258	40	True				
ANR	78837	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	78838	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	78839	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	78840	ArgumentList			76258	1					
ANR	78841	BreakStatement	break ;	1333:3:36934:36939	76258	207	True				
ANR	78842	Label	case ZEND_AST_GREATER :	1334:2:36943:36964	76258	208	True				
ANR	78843	Identifier	ZEND_AST_GREATER		76258	0					
ANR	78844	ExpressionStatement	"BINARY_OP ( "" > "" , 180 , 181 , 181 )"	1334:41:36982:37015	76258	209	True				
ANR	78845	CallExpression	"BINARY_OP ( "" > "" , 180 , 181 , 181 )"		76258	0					
ANR	78846	Callee	BINARY_OP		76258	0					
ANR	78847	Identifier	BINARY_OP		76258	0					
ANR	78848	ArgumentList	""" > """		76258	1					
ANR	78849	Argument	""" > """		76258	0					
ANR	78850	PrimaryExpression	""" > """		76258	0					
ANR	78851	Argument	180		76258	1					
ANR	78852	PrimaryExpression	180		76258	0					
ANR	78853	Argument	181		76258	2					
ANR	78854	PrimaryExpression	181		76258	0					
ANR	78855	Argument	181		76258	3					
ANR	78856	PrimaryExpression	181		76258	0					
ANR	78857	Label	case ZEND_AST_GREATER_EQUAL :	1335:2:37019:37046	76258	210	True				
ANR	78858	Identifier	ZEND_AST_GREATER_EQUAL		76258	0					
ANR	78859	ExpressionStatement	"BINARY_OP ( "" >= "" , 180 , 181 , 181 )"	1335:41:37058:37091	76258	211	True				
ANR	78860	CallExpression	"BINARY_OP ( "" >= "" , 180 , 181 , 181 )"		76258	0					
ANR	78861	Callee	BINARY_OP		76258	0					
ANR	78862	Identifier	BINARY_OP		76258	0					
ANR	78863	ArgumentList	""" >= """		76258	1					
ANR	78864	Argument	""" >= """		76258	0					
ANR	78865	PrimaryExpression	""" >= """		76258	0					
ANR	78866	Argument	180		76258	1					
ANR	78867	PrimaryExpression	180		76258	0					
ANR	78868	Argument	181		76258	2					
ANR	78869	PrimaryExpression	181		76258	0					
ANR	78870	Argument	181		76258	3					
ANR	78871	PrimaryExpression	181		76258	0					
ANR	78872	Label	case ZEND_AST_AND :	1336:2:37095:37112	76258	212	True				
ANR	78873	Identifier	ZEND_AST_AND		76258	0					
ANR	78874	ExpressionStatement	"BINARY_OP ( "" && "" , 130 , 130 , 131 )"	1336:41:37134:37167	76258	213	True				
ANR	78875	CallExpression	"BINARY_OP ( "" && "" , 130 , 130 , 131 )"		76258	0					
ANR	78876	Callee	BINARY_OP		76258	0					
ANR	78877	Identifier	BINARY_OP		76258	0					
ANR	78878	ArgumentList	""" && """		76258	1					
ANR	78879	Argument	""" && """		76258	0					
ANR	78880	PrimaryExpression	""" && """		76258	0					
ANR	78881	Argument	130		76258	1					
ANR	78882	PrimaryExpression	130		76258	0					
ANR	78883	Argument	130		76258	2					
ANR	78884	PrimaryExpression	130		76258	0					
ANR	78885	Argument	131		76258	3					
ANR	78886	PrimaryExpression	131		76258	0					
ANR	78887	Label	case ZEND_AST_OR :	1337:2:37171:37187	76258	214	True				
ANR	78888	Identifier	ZEND_AST_OR		76258	0					
ANR	78889	ExpressionStatement	"BINARY_OP ( "" || "" , 120 , 120 , 121 )"	1337:41:37210:37243	76258	215	True				
ANR	78890	CallExpression	"BINARY_OP ( "" || "" , 120 , 120 , 121 )"		76258	0					
ANR	78891	Callee	BINARY_OP		76258	0					
ANR	78892	Identifier	BINARY_OP		76258	0					
ANR	78893	ArgumentList	""" || """		76258	1					
ANR	78894	Argument	""" || """		76258	0					
ANR	78895	PrimaryExpression	""" || """		76258	0					
ANR	78896	Argument	120		76258	1					
ANR	78897	PrimaryExpression	120		76258	0					
ANR	78898	Argument	120		76258	2					
ANR	78899	PrimaryExpression	120		76258	0					
ANR	78900	Argument	121		76258	3					
ANR	78901	PrimaryExpression	121		76258	0					
ANR	78902	Label	case ZEND_AST_ARRAY_ELEM :	1338:2:37247:37271	76258	216	True				
ANR	78903	Identifier	ZEND_AST_ARRAY_ELEM		76258	0					
ANR	78904	IfStatement	if ( ast -> child [ 1 ] )		76258	217					
ANR	78905	Condition	ast -> child [ 1 ]	1339:7:37280:37292	76258	0	True				
ANR	78906	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78907	PtrMemberAccess	ast -> child		76258	0					
ANR	78908	Identifier	ast		76258	0					
ANR	78909	Identifier	child		76258	1					
ANR	78910	PrimaryExpression	1		76258	1					
ANR	78911	CompoundStatement		372:22:12589:12589	76258	1					
ANR	78912	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 80 , indent )"	1340:4:37301:37351	76258	0	True				
ANR	78913	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 80 , indent )"		76258	0					
ANR	78914	Callee	zend_ast_export_ex		76258	0					
ANR	78915	Identifier	zend_ast_export_ex		76258	0					
ANR	78916	ArgumentList	str		76258	1					
ANR	78917	Argument	str		76258	0					
ANR	78918	Identifier	str		76258	0					
ANR	78919	Argument	ast -> child [ 1 ]		76258	1					
ANR	78920	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	78921	PtrMemberAccess	ast -> child		76258	0					
ANR	78922	Identifier	ast		76258	0					
ANR	78923	Identifier	child		76258	1					
ANR	78924	PrimaryExpression	1		76258	1					
ANR	78925	Argument	80		76258	2					
ANR	78926	PrimaryExpression	80		76258	0					
ANR	78927	Argument	indent		76258	3					
ANR	78928	Identifier	indent		76258	0					
ANR	78929	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	1341:4:37357:37387	76258	1	True				
ANR	78930	CallExpression	"smart_str_appends ( str , "" => "" )"		76258	0					
ANR	78931	Callee	smart_str_appends		76258	0					
ANR	78932	Identifier	smart_str_appends		76258	0					
ANR	78933	ArgumentList	str		76258	1					
ANR	78934	Argument	str		76258	0					
ANR	78935	Identifier	str		76258	0					
ANR	78936	Argument	""" => """		76258	1					
ANR	78937	PrimaryExpression	""" => """		76258	0					
ANR	78938	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 80 , indent )"	1343:3:37397:37447	76258	218	True				
ANR	78939	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 80 , indent )"		76258	0					
ANR	78940	Callee	zend_ast_export_ex		76258	0					
ANR	78941	Identifier	zend_ast_export_ex		76258	0					
ANR	78942	ArgumentList	str		76258	1					
ANR	78943	Argument	str		76258	0					
ANR	78944	Identifier	str		76258	0					
ANR	78945	Argument	ast -> child [ 0 ]		76258	1					
ANR	78946	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78947	PtrMemberAccess	ast -> child		76258	0					
ANR	78948	Identifier	ast		76258	0					
ANR	78949	Identifier	child		76258	1					
ANR	78950	PrimaryExpression	0		76258	1					
ANR	78951	Argument	80		76258	2					
ANR	78952	PrimaryExpression	80		76258	0					
ANR	78953	Argument	indent		76258	3					
ANR	78954	Identifier	indent		76258	0					
ANR	78955	BreakStatement	break ;	1344:3:37452:37457	76258	219	True				
ANR	78956	Label	case ZEND_AST_NEW :	1345:2:37461:37478	76258	220	True				
ANR	78957	Identifier	ZEND_AST_NEW		76258	0					
ANR	78958	ExpressionStatement	"smart_str_appends ( str , ""new "" )"	1346:3:37483:37513	76258	221	True				
ANR	78959	CallExpression	"smart_str_appends ( str , ""new "" )"		76258	0					
ANR	78960	Callee	smart_str_appends		76258	0					
ANR	78961	Identifier	smart_str_appends		76258	0					
ANR	78962	ArgumentList	str		76258	1					
ANR	78963	Argument	str		76258	0					
ANR	78964	Identifier	str		76258	0					
ANR	78965	Argument	"""new """		76258	1					
ANR	78966	PrimaryExpression	"""new """		76258	0					
ANR	78967	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1347:3:37518:37572	76258	222	True				
ANR	78968	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	78969	Callee	zend_ast_export_ns_name		76258	0					
ANR	78970	Identifier	zend_ast_export_ns_name		76258	0					
ANR	78971	ArgumentList	str		76258	1					
ANR	78972	Argument	str		76258	0					
ANR	78973	Identifier	str		76258	0					
ANR	78974	Argument	ast -> child [ 0 ]		76258	1					
ANR	78975	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	78976	PtrMemberAccess	ast -> child		76258	0					
ANR	78977	Identifier	ast		76258	0					
ANR	78978	Identifier	child		76258	1					
ANR	78979	PrimaryExpression	0		76258	1					
ANR	78980	Argument	0		76258	2					
ANR	78981	PrimaryExpression	0		76258	0					
ANR	78982	Argument	indent		76258	3					
ANR	78983	Identifier	indent		76258	0					
ANR	78984	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1348:3:37577:37604	76258	223	True				
ANR	78985	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	78986	Callee	smart_str_appendc		76258	0					
ANR	78987	Identifier	smart_str_appendc		76258	0					
ANR	78988	ArgumentList	str		76258	1					
ANR	78989	Argument	str		76258	0					
ANR	78990	Identifier	str		76258	0					
ANR	78991	Argument	'('		76258	1					
ANR	78992	PrimaryExpression	'('		76258	0					
ANR	78993	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1349:3:37609:37658	76258	224	True				
ANR	78994	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	78995	Callee	zend_ast_export_ex		76258	0					
ANR	78996	Identifier	zend_ast_export_ex		76258	0					
ANR	78997	ArgumentList	str		76258	1					
ANR	78998	Argument	str		76258	0					
ANR	78999	Identifier	str		76258	0					
ANR	79000	Argument	ast -> child [ 1 ]		76258	1					
ANR	79001	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79002	PtrMemberAccess	ast -> child		76258	0					
ANR	79003	Identifier	ast		76258	0					
ANR	79004	Identifier	child		76258	1					
ANR	79005	PrimaryExpression	1		76258	1					
ANR	79006	Argument	0		76258	2					
ANR	79007	PrimaryExpression	0		76258	0					
ANR	79008	Argument	indent		76258	3					
ANR	79009	Identifier	indent		76258	0					
ANR	79010	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1350:3:37663:37690	76258	225	True				
ANR	79011	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	79012	Callee	smart_str_appendc		76258	0					
ANR	79013	Identifier	smart_str_appendc		76258	0					
ANR	79014	ArgumentList	str		76258	1					
ANR	79015	Argument	str		76258	0					
ANR	79016	Identifier	str		76258	0					
ANR	79017	Argument	')'		76258	1					
ANR	79018	PrimaryExpression	')'		76258	0					
ANR	79019	BreakStatement	break ;	1351:3:37695:37700	76258	226	True				
ANR	79020	Label	case ZEND_AST_INSTANCEOF :	1352:2:37704:37728	76258	227	True				
ANR	79021	Identifier	ZEND_AST_INSTANCEOF		76258	0					
ANR	79022	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1353:3:37733:37782	76258	228	True				
ANR	79023	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79024	Callee	zend_ast_export_ex		76258	0					
ANR	79025	Identifier	zend_ast_export_ex		76258	0					
ANR	79026	ArgumentList	str		76258	1					
ANR	79027	Argument	str		76258	0					
ANR	79028	Identifier	str		76258	0					
ANR	79029	Argument	ast -> child [ 0 ]		76258	1					
ANR	79030	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79031	PtrMemberAccess	ast -> child		76258	0					
ANR	79032	Identifier	ast		76258	0					
ANR	79033	Identifier	child		76258	1					
ANR	79034	PrimaryExpression	0		76258	1					
ANR	79035	Argument	0		76258	2					
ANR	79036	PrimaryExpression	0		76258	0					
ANR	79037	Argument	indent		76258	3					
ANR	79038	Identifier	indent		76258	0					
ANR	79039	ExpressionStatement	"smart_str_appends ( str , "" instanceof "" )"	1354:3:37787:37825	76258	229	True				
ANR	79040	CallExpression	"smart_str_appends ( str , "" instanceof "" )"		76258	0					
ANR	79041	Callee	smart_str_appends		76258	0					
ANR	79042	Identifier	smart_str_appends		76258	0					
ANR	79043	ArgumentList	str		76258	1					
ANR	79044	Argument	str		76258	0					
ANR	79045	Identifier	str		76258	0					
ANR	79046	Argument	""" instanceof """		76258	1					
ANR	79047	PrimaryExpression	""" instanceof """		76258	0					
ANR	79048	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 1 ] , 0 , indent )"	1355:3:37830:37884	76258	230	True				
ANR	79049	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	79050	Callee	zend_ast_export_ns_name		76258	0					
ANR	79051	Identifier	zend_ast_export_ns_name		76258	0					
ANR	79052	ArgumentList	str		76258	1					
ANR	79053	Argument	str		76258	0					
ANR	79054	Identifier	str		76258	0					
ANR	79055	Argument	ast -> child [ 1 ]		76258	1					
ANR	79056	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79057	PtrMemberAccess	ast -> child		76258	0					
ANR	79058	Identifier	ast		76258	0					
ANR	79059	Identifier	child		76258	1					
ANR	79060	PrimaryExpression	1		76258	1					
ANR	79061	Argument	0		76258	2					
ANR	79062	PrimaryExpression	0		76258	0					
ANR	79063	Argument	indent		76258	3					
ANR	79064	Identifier	indent		76258	0					
ANR	79065	BreakStatement	break ;	1356:3:37889:37894	76258	231	True				
ANR	79066	Label	case ZEND_AST_YIELD :	1357:2:37898:37917	76258	232	True				
ANR	79067	Identifier	ZEND_AST_YIELD		76258	0					
ANR	79068	IfStatement	if ( priority > 70 )		76258	233					
ANR	79069	Condition	priority > 70	1358:7:37926:37938	76258	0	True				
ANR	79070	RelationalExpression	priority > 70		76258	0		>			
ANR	79071	Identifier	priority		76258	0					
ANR	79072	PrimaryExpression	70		76258	1					
ANR	79073	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1358:22:37941:37968	76258	1	True				
ANR	79074	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	79075	Callee	smart_str_appendc		76258	0					
ANR	79076	Identifier	smart_str_appendc		76258	0					
ANR	79077	ArgumentList	str		76258	1					
ANR	79078	Argument	str		76258	0					
ANR	79079	Identifier	str		76258	0					
ANR	79080	Argument	'('		76258	1					
ANR	79081	PrimaryExpression	'('		76258	0					
ANR	79082	ExpressionStatement	"smart_str_appends ( str , ""yield "" )"	1359:3:37973:38005	76258	234	True				
ANR	79083	CallExpression	"smart_str_appends ( str , ""yield "" )"		76258	0					
ANR	79084	Callee	smart_str_appends		76258	0					
ANR	79085	Identifier	smart_str_appends		76258	0					
ANR	79086	ArgumentList	str		76258	1					
ANR	79087	Argument	str		76258	0					
ANR	79088	Identifier	str		76258	0					
ANR	79089	Argument	"""yield """		76258	1					
ANR	79090	PrimaryExpression	"""yield """		76258	0					
ANR	79091	IfStatement	if ( ast -> child [ 0 ] )		76258	235					
ANR	79092	Condition	ast -> child [ 0 ]	1360:7:38014:38026	76258	0	True				
ANR	79093	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79094	PtrMemberAccess	ast -> child		76258	0					
ANR	79095	Identifier	ast		76258	0					
ANR	79096	Identifier	child		76258	1					
ANR	79097	PrimaryExpression	0		76258	1					
ANR	79098	CompoundStatement		393:22:13323:13323	76258	1					
ANR	79099	IfStatement	if ( ast -> child [ 1 ] )		76258	0					
ANR	79100	Condition	ast -> child [ 1 ]	1361:8:38039:38051	76258	0	True				
ANR	79101	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79102	PtrMemberAccess	ast -> child		76258	0					
ANR	79103	Identifier	ast		76258	0					
ANR	79104	Identifier	child		76258	1					
ANR	79105	PrimaryExpression	1		76258	1					
ANR	79106	CompoundStatement		394:23:13348:13348	76258	1					
ANR	79107	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 70 , indent )"	1362:5:38061:38111	76258	0	True				
ANR	79108	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 70 , indent )"		76258	0					
ANR	79109	Callee	zend_ast_export_ex		76258	0					
ANR	79110	Identifier	zend_ast_export_ex		76258	0					
ANR	79111	ArgumentList	str		76258	1					
ANR	79112	Argument	str		76258	0					
ANR	79113	Identifier	str		76258	0					
ANR	79114	Argument	ast -> child [ 1 ]		76258	1					
ANR	79115	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79116	PtrMemberAccess	ast -> child		76258	0					
ANR	79117	Identifier	ast		76258	0					
ANR	79118	Identifier	child		76258	1					
ANR	79119	PrimaryExpression	1		76258	1					
ANR	79120	Argument	70		76258	2					
ANR	79121	PrimaryExpression	70		76258	0					
ANR	79122	Argument	indent		76258	3					
ANR	79123	Identifier	indent		76258	0					
ANR	79124	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	1363:5:38118:38148	76258	1	True				
ANR	79125	CallExpression	"smart_str_appends ( str , "" => "" )"		76258	0					
ANR	79126	Callee	smart_str_appends		76258	0					
ANR	79127	Identifier	smart_str_appends		76258	0					
ANR	79128	ArgumentList	str		76258	1					
ANR	79129	Argument	str		76258	0					
ANR	79130	Identifier	str		76258	0					
ANR	79131	Argument	""" => """		76258	1					
ANR	79132	PrimaryExpression	""" => """		76258	0					
ANR	79133	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 70 , indent )"	1365:4:38160:38210	76258	1	True				
ANR	79134	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 70 , indent )"		76258	0					
ANR	79135	Callee	zend_ast_export_ex		76258	0					
ANR	79136	Identifier	zend_ast_export_ex		76258	0					
ANR	79137	ArgumentList	str		76258	1					
ANR	79138	Argument	str		76258	0					
ANR	79139	Identifier	str		76258	0					
ANR	79140	Argument	ast -> child [ 0 ]		76258	1					
ANR	79141	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79142	PtrMemberAccess	ast -> child		76258	0					
ANR	79143	Identifier	ast		76258	0					
ANR	79144	Identifier	child		76258	1					
ANR	79145	PrimaryExpression	0		76258	1					
ANR	79146	Argument	70		76258	2					
ANR	79147	PrimaryExpression	70		76258	0					
ANR	79148	Argument	indent		76258	3					
ANR	79149	Identifier	indent		76258	0					
ANR	79150	IfStatement	if ( priority > 70 )		76258	236					
ANR	79151	Condition	priority > 70	1367:7:38224:38236	76258	0	True				
ANR	79152	RelationalExpression	priority > 70		76258	0		>			
ANR	79153	Identifier	priority		76258	0					
ANR	79154	PrimaryExpression	70		76258	1					
ANR	79155	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1367:22:38239:38266	76258	1	True				
ANR	79156	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	79157	Callee	smart_str_appendc		76258	0					
ANR	79158	Identifier	smart_str_appendc		76258	0					
ANR	79159	ArgumentList	str		76258	1					
ANR	79160	Argument	str		76258	0					
ANR	79161	Identifier	str		76258	0					
ANR	79162	Argument	')'		76258	1					
ANR	79163	PrimaryExpression	')'		76258	0					
ANR	79164	BreakStatement	break ;	1368:3:38271:38276	76258	237	True				
ANR	79165	Label	case ZEND_AST_YIELD_FROM :	1369:2:38280:38304	76258	238	True				
ANR	79166	Identifier	ZEND_AST_YIELD_FROM		76258	0					
ANR	79167	ExpressionStatement	"PREFIX_OP ( ""yield from "" , 85 , 86 )"	1370:3:38309:38341	76258	239	True				
ANR	79168	CallExpression	"PREFIX_OP ( ""yield from "" , 85 , 86 )"		76258	0					
ANR	79169	Callee	PREFIX_OP		76258	0					
ANR	79170	Identifier	PREFIX_OP		76258	0					
ANR	79171	ArgumentList	"""yield from """		76258	1					
ANR	79172	Argument	"""yield from """		76258	0					
ANR	79173	PrimaryExpression	"""yield from """		76258	0					
ANR	79174	Argument	85		76258	1					
ANR	79175	PrimaryExpression	85		76258	0					
ANR	79176	Argument	86		76258	2					
ANR	79177	PrimaryExpression	86		76258	0					
ANR	79178	Label	case ZEND_AST_COALESCE :	1371:2:38345:38367	76258	240	True				
ANR	79179	Identifier	ZEND_AST_COALESCE		76258	0					
ANR	79180	ExpressionStatement	"BINARY_OP ( "" ?? "" , 110 , 111 , 110 )"	1371:26:38369:38401	76258	241	True				
ANR	79181	CallExpression	"BINARY_OP ( "" ?? "" , 110 , 111 , 110 )"		76258	0					
ANR	79182	Callee	BINARY_OP		76258	0					
ANR	79183	Identifier	BINARY_OP		76258	0					
ANR	79184	ArgumentList	""" ?? """		76258	1					
ANR	79185	Argument	""" ?? """		76258	0					
ANR	79186	PrimaryExpression	""" ?? """		76258	0					
ANR	79187	Argument	110		76258	1					
ANR	79188	PrimaryExpression	110		76258	0					
ANR	79189	Argument	111		76258	2					
ANR	79190	PrimaryExpression	111		76258	0					
ANR	79191	Argument	110		76258	3					
ANR	79192	PrimaryExpression	110		76258	0					
ANR	79193	Label	case ZEND_AST_STATIC :	1372:2:38405:38425	76258	242	True				
ANR	79194	Identifier	ZEND_AST_STATIC		76258	0					
ANR	79195	ExpressionStatement	"smart_str_appends ( str , ""static $"" )"	1373:3:38430:38464	76258	243	True				
ANR	79196	CallExpression	"smart_str_appends ( str , ""static $"" )"		76258	0					
ANR	79197	Callee	smart_str_appends		76258	0					
ANR	79198	Identifier	smart_str_appends		76258	0					
ANR	79199	ArgumentList	str		76258	1					
ANR	79200	Argument	str		76258	0					
ANR	79201	Identifier	str		76258	0					
ANR	79202	Argument	"""static $"""		76258	1					
ANR	79203	PrimaryExpression	"""static $"""		76258	0					
ANR	79204	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1374:3:38469:38520	76258	244	True				
ANR	79205	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79206	Callee	zend_ast_export_name		76258	0					
ANR	79207	Identifier	zend_ast_export_name		76258	0					
ANR	79208	ArgumentList	str		76258	1					
ANR	79209	Argument	str		76258	0					
ANR	79210	Identifier	str		76258	0					
ANR	79211	Argument	ast -> child [ 0 ]		76258	1					
ANR	79212	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79213	PtrMemberAccess	ast -> child		76258	0					
ANR	79214	Identifier	ast		76258	0					
ANR	79215	Identifier	child		76258	1					
ANR	79216	PrimaryExpression	0		76258	1					
ANR	79217	Argument	0		76258	2					
ANR	79218	PrimaryExpression	0		76258	0					
ANR	79219	Argument	indent		76258	3					
ANR	79220	Identifier	indent		76258	0					
ANR	79221	ExpressionStatement	APPEND_DEFAULT_VALUE ( 1 )	1375:3:38525:38548	76258	245	True				
ANR	79222	CallExpression	APPEND_DEFAULT_VALUE ( 1 )		76258	0					
ANR	79223	Callee	APPEND_DEFAULT_VALUE		76258	0					
ANR	79224	Identifier	APPEND_DEFAULT_VALUE		76258	0					
ANR	79225	ArgumentList	1		76258	1					
ANR	79226	Argument	1		76258	0					
ANR	79227	PrimaryExpression	1		76258	0					
ANR	79228	Label	case ZEND_AST_WHILE :	1376:2:38552:38571	76258	246	True				
ANR	79229	Identifier	ZEND_AST_WHILE		76258	0					
ANR	79230	ExpressionStatement	"smart_str_appends ( str , ""while ("" )"	1377:3:38576:38609	76258	247	True				
ANR	79231	CallExpression	"smart_str_appends ( str , ""while ("" )"		76258	0					
ANR	79232	Callee	smart_str_appends		76258	0					
ANR	79233	Identifier	smart_str_appends		76258	0					
ANR	79234	ArgumentList	str		76258	1					
ANR	79235	Argument	str		76258	0					
ANR	79236	Identifier	str		76258	0					
ANR	79237	Argument	"""while ("""		76258	1					
ANR	79238	PrimaryExpression	"""while ("""		76258	0					
ANR	79239	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1378:3:38614:38663	76258	248	True				
ANR	79240	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79241	Callee	zend_ast_export_ex		76258	0					
ANR	79242	Identifier	zend_ast_export_ex		76258	0					
ANR	79243	ArgumentList	str		76258	1					
ANR	79244	Argument	str		76258	0					
ANR	79245	Identifier	str		76258	0					
ANR	79246	Argument	ast -> child [ 0 ]		76258	1					
ANR	79247	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79248	PtrMemberAccess	ast -> child		76258	0					
ANR	79249	Identifier	ast		76258	0					
ANR	79250	Identifier	child		76258	1					
ANR	79251	PrimaryExpression	0		76258	1					
ANR	79252	Argument	0		76258	2					
ANR	79253	PrimaryExpression	0		76258	0					
ANR	79254	Argument	indent		76258	3					
ANR	79255	Identifier	indent		76258	0					
ANR	79256	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1379:3:38668:38699	76258	249	True				
ANR	79257	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		76258	0					
ANR	79258	Callee	smart_str_appends		76258	0					
ANR	79259	Identifier	smart_str_appends		76258	0					
ANR	79260	ArgumentList	str		76258	1					
ANR	79261	Argument	str		76258	0					
ANR	79262	Identifier	str		76258	0					
ANR	79263	Argument	""") {\\n"""		76258	1					
ANR	79264	PrimaryExpression	""") {\\n"""		76258	0					
ANR	79265	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1380:3:38704:38756	76258	250	True				
ANR	79266	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		76258	0					
ANR	79267	Callee	zend_ast_export_stmt		76258	0					
ANR	79268	Identifier	zend_ast_export_stmt		76258	0					
ANR	79269	ArgumentList	str		76258	1					
ANR	79270	Argument	str		76258	0					
ANR	79271	Identifier	str		76258	0					
ANR	79272	Argument	ast -> child [ 1 ]		76258	1					
ANR	79273	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79274	PtrMemberAccess	ast -> child		76258	0					
ANR	79275	Identifier	ast		76258	0					
ANR	79276	Identifier	child		76258	1					
ANR	79277	PrimaryExpression	1		76258	1					
ANR	79278	Argument	indent + 1		76258	2					
ANR	79279	AdditiveExpression	indent + 1		76258	0		+			
ANR	79280	Identifier	indent		76258	0					
ANR	79281	PrimaryExpression	1		76258	1					
ANR	79282	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1381:3:38761:38796	76258	251	True				
ANR	79283	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	79284	Callee	zend_ast_export_indent		76258	0					
ANR	79285	Identifier	zend_ast_export_indent		76258	0					
ANR	79286	ArgumentList	str		76258	1					
ANR	79287	Argument	str		76258	0					
ANR	79288	Identifier	str		76258	0					
ANR	79289	Argument	indent		76258	1					
ANR	79290	Identifier	indent		76258	0					
ANR	79291	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1382:3:38801:38828	76258	252	True				
ANR	79292	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	79293	Callee	smart_str_appendc		76258	0					
ANR	79294	Identifier	smart_str_appendc		76258	0					
ANR	79295	ArgumentList	str		76258	1					
ANR	79296	Argument	str		76258	0					
ANR	79297	Identifier	str		76258	0					
ANR	79298	Argument	'}'		76258	1					
ANR	79299	PrimaryExpression	'}'		76258	0					
ANR	79300	BreakStatement	break ;	1383:3:38833:38838	76258	253	True				
ANR	79301	Label	case ZEND_AST_DO_WHILE :	1384:2:38842:38864	76258	254	True				
ANR	79302	Identifier	ZEND_AST_DO_WHILE		76258	0					
ANR	79303	ExpressionStatement	"smart_str_appends ( str , ""do {\\n"" )"	1385:3:38869:38901	76258	255	True				
ANR	79304	CallExpression	"smart_str_appends ( str , ""do {\\n"" )"		76258	0					
ANR	79305	Callee	smart_str_appends		76258	0					
ANR	79306	Identifier	smart_str_appends		76258	0					
ANR	79307	ArgumentList	str		76258	1					
ANR	79308	Argument	str		76258	0					
ANR	79309	Identifier	str		76258	0					
ANR	79310	Argument	"""do {\\n"""		76258	1					
ANR	79311	PrimaryExpression	"""do {\\n"""		76258	0					
ANR	79312	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"	1386:3:38906:38958	76258	256	True				
ANR	79313	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"		76258	0					
ANR	79314	Callee	zend_ast_export_stmt		76258	0					
ANR	79315	Identifier	zend_ast_export_stmt		76258	0					
ANR	79316	ArgumentList	str		76258	1					
ANR	79317	Argument	str		76258	0					
ANR	79318	Identifier	str		76258	0					
ANR	79319	Argument	ast -> child [ 0 ]		76258	1					
ANR	79320	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79321	PtrMemberAccess	ast -> child		76258	0					
ANR	79322	Identifier	ast		76258	0					
ANR	79323	Identifier	child		76258	1					
ANR	79324	PrimaryExpression	0		76258	1					
ANR	79325	Argument	indent + 1		76258	2					
ANR	79326	AdditiveExpression	indent + 1		76258	0		+			
ANR	79327	Identifier	indent		76258	0					
ANR	79328	PrimaryExpression	1		76258	1					
ANR	79329	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1387:3:38963:38998	76258	257	True				
ANR	79330	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	79331	Callee	zend_ast_export_indent		76258	0					
ANR	79332	Identifier	zend_ast_export_indent		76258	0					
ANR	79333	ArgumentList	str		76258	1					
ANR	79334	Argument	str		76258	0					
ANR	79335	Identifier	str		76258	0					
ANR	79336	Argument	indent		76258	1					
ANR	79337	Identifier	indent		76258	0					
ANR	79338	ExpressionStatement	"smart_str_appends ( str , ""} while ("" )"	1388:3:39003:39038	76258	258	True				
ANR	79339	CallExpression	"smart_str_appends ( str , ""} while ("" )"		76258	0					
ANR	79340	Callee	smart_str_appends		76258	0					
ANR	79341	Identifier	smart_str_appends		76258	0					
ANR	79342	ArgumentList	str		76258	1					
ANR	79343	Argument	str		76258	0					
ANR	79344	Identifier	str		76258	0					
ANR	79345	Argument	"""} while ("""		76258	1					
ANR	79346	PrimaryExpression	"""} while ("""		76258	0					
ANR	79347	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1389:3:39043:39092	76258	259	True				
ANR	79348	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	79349	Callee	zend_ast_export_ex		76258	0					
ANR	79350	Identifier	zend_ast_export_ex		76258	0					
ANR	79351	ArgumentList	str		76258	1					
ANR	79352	Argument	str		76258	0					
ANR	79353	Identifier	str		76258	0					
ANR	79354	Argument	ast -> child [ 1 ]		76258	1					
ANR	79355	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79356	PtrMemberAccess	ast -> child		76258	0					
ANR	79357	Identifier	ast		76258	0					
ANR	79358	Identifier	child		76258	1					
ANR	79359	PrimaryExpression	1		76258	1					
ANR	79360	Argument	0		76258	2					
ANR	79361	PrimaryExpression	0		76258	0					
ANR	79362	Argument	indent		76258	3					
ANR	79363	Identifier	indent		76258	0					
ANR	79364	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1390:3:39097:39124	76258	260	True				
ANR	79365	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	79366	Callee	smart_str_appendc		76258	0					
ANR	79367	Identifier	smart_str_appendc		76258	0					
ANR	79368	ArgumentList	str		76258	1					
ANR	79369	Argument	str		76258	0					
ANR	79370	Identifier	str		76258	0					
ANR	79371	Argument	')'		76258	1					
ANR	79372	PrimaryExpression	')'		76258	0					
ANR	79373	BreakStatement	break ;	1391:3:39129:39134	76258	261	True				
ANR	79374	Label	case ZEND_AST_IF_ELEM :	1393:2:39139:39160	76258	262	True				
ANR	79375	Identifier	ZEND_AST_IF_ELEM		76258	0					
ANR	79376	IfStatement	if ( ast -> child [ 0 ] )		76258	263					
ANR	79377	Condition	ast -> child [ 0 ]	1394:7:39169:39181	76258	0	True				
ANR	79378	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79379	PtrMemberAccess	ast -> child		76258	0					
ANR	79380	Identifier	ast		76258	0					
ANR	79381	Identifier	child		76258	1					
ANR	79382	PrimaryExpression	0		76258	1					
ANR	79383	CompoundStatement		427:22:14478:14478	76258	1					
ANR	79384	ExpressionStatement	"smart_str_appends ( str , ""if ("" )"	1395:4:39190:39220	76258	0	True				
ANR	79385	CallExpression	"smart_str_appends ( str , ""if ("" )"		76258	0					
ANR	79386	Callee	smart_str_appends		76258	0					
ANR	79387	Identifier	smart_str_appends		76258	0					
ANR	79388	ArgumentList	str		76258	1					
ANR	79389	Argument	str		76258	0					
ANR	79390	Identifier	str		76258	0					
ANR	79391	Argument	"""if ("""		76258	1					
ANR	79392	PrimaryExpression	"""if ("""		76258	0					
ANR	79393	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1396:4:39226:39275	76258	1	True				
ANR	79394	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79395	Callee	zend_ast_export_ex		76258	0					
ANR	79396	Identifier	zend_ast_export_ex		76258	0					
ANR	79397	ArgumentList	str		76258	1					
ANR	79398	Argument	str		76258	0					
ANR	79399	Identifier	str		76258	0					
ANR	79400	Argument	ast -> child [ 0 ]		76258	1					
ANR	79401	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79402	PtrMemberAccess	ast -> child		76258	0					
ANR	79403	Identifier	ast		76258	0					
ANR	79404	Identifier	child		76258	1					
ANR	79405	PrimaryExpression	0		76258	1					
ANR	79406	Argument	0		76258	2					
ANR	79407	PrimaryExpression	0		76258	0					
ANR	79408	Argument	indent		76258	3					
ANR	79409	Identifier	indent		76258	0					
ANR	79410	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1397:4:39281:39312	76258	2	True				
ANR	79411	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		76258	0					
ANR	79412	Callee	smart_str_appends		76258	0					
ANR	79413	Identifier	smart_str_appends		76258	0					
ANR	79414	ArgumentList	str		76258	1					
ANR	79415	Argument	str		76258	0					
ANR	79416	Identifier	str		76258	0					
ANR	79417	Argument	""") {\\n"""		76258	1					
ANR	79418	PrimaryExpression	""") {\\n"""		76258	0					
ANR	79419	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1398:4:39318:39370	76258	3	True				
ANR	79420	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		76258	0					
ANR	79421	Callee	zend_ast_export_stmt		76258	0					
ANR	79422	Identifier	zend_ast_export_stmt		76258	0					
ANR	79423	ArgumentList	str		76258	1					
ANR	79424	Argument	str		76258	0					
ANR	79425	Identifier	str		76258	0					
ANR	79426	Argument	ast -> child [ 1 ]		76258	1					
ANR	79427	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79428	PtrMemberAccess	ast -> child		76258	0					
ANR	79429	Identifier	ast		76258	0					
ANR	79430	Identifier	child		76258	1					
ANR	79431	PrimaryExpression	1		76258	1					
ANR	79432	Argument	indent + 1		76258	2					
ANR	79433	AdditiveExpression	indent + 1		76258	0		+			
ANR	79434	Identifier	indent		76258	0					
ANR	79435	PrimaryExpression	1		76258	1					
ANR	79436	ElseStatement	else		76258	0					
ANR	79437	CompoundStatement		432:10:14676:14676	76258	0					
ANR	79438	ExpressionStatement	"smart_str_appends ( str , ""else {\\n"" )"	1400:4:39388:39422	76258	0	True				
ANR	79439	CallExpression	"smart_str_appends ( str , ""else {\\n"" )"		76258	0					
ANR	79440	Callee	smart_str_appends		76258	0					
ANR	79441	Identifier	smart_str_appends		76258	0					
ANR	79442	ArgumentList	str		76258	1					
ANR	79443	Argument	str		76258	0					
ANR	79444	Identifier	str		76258	0					
ANR	79445	Argument	"""else {\\n"""		76258	1					
ANR	79446	PrimaryExpression	"""else {\\n"""		76258	0					
ANR	79447	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1401:4:39428:39480	76258	1	True				
ANR	79448	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		76258	0					
ANR	79449	Callee	zend_ast_export_stmt		76258	0					
ANR	79450	Identifier	zend_ast_export_stmt		76258	0					
ANR	79451	ArgumentList	str		76258	1					
ANR	79452	Argument	str		76258	0					
ANR	79453	Identifier	str		76258	0					
ANR	79454	Argument	ast -> child [ 1 ]		76258	1					
ANR	79455	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79456	PtrMemberAccess	ast -> child		76258	0					
ANR	79457	Identifier	ast		76258	0					
ANR	79458	Identifier	child		76258	1					
ANR	79459	PrimaryExpression	1		76258	1					
ANR	79460	Argument	indent + 1		76258	2					
ANR	79461	AdditiveExpression	indent + 1		76258	0		+			
ANR	79462	Identifier	indent		76258	0					
ANR	79463	PrimaryExpression	1		76258	1					
ANR	79464	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1403:3:39490:39525	76258	264	True				
ANR	79465	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	79466	Callee	zend_ast_export_indent		76258	0					
ANR	79467	Identifier	zend_ast_export_indent		76258	0					
ANR	79468	ArgumentList	str		76258	1					
ANR	79469	Argument	str		76258	0					
ANR	79470	Identifier	str		76258	0					
ANR	79471	Argument	indent		76258	1					
ANR	79472	Identifier	indent		76258	0					
ANR	79473	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1404:3:39530:39557	76258	265	True				
ANR	79474	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	79475	Callee	smart_str_appendc		76258	0					
ANR	79476	Identifier	smart_str_appendc		76258	0					
ANR	79477	ArgumentList	str		76258	1					
ANR	79478	Argument	str		76258	0					
ANR	79479	Identifier	str		76258	0					
ANR	79480	Argument	'}'		76258	1					
ANR	79481	PrimaryExpression	'}'		76258	0					
ANR	79482	BreakStatement	break ;	1405:3:39562:39567	76258	266	True				
ANR	79483	Label	case ZEND_AST_SWITCH :	1406:2:39571:39591	76258	267	True				
ANR	79484	Identifier	ZEND_AST_SWITCH		76258	0					
ANR	79485	ExpressionStatement	"smart_str_appends ( str , ""switch ("" )"	1407:3:39596:39630	76258	268	True				
ANR	79486	CallExpression	"smart_str_appends ( str , ""switch ("" )"		76258	0					
ANR	79487	Callee	smart_str_appends		76258	0					
ANR	79488	Identifier	smart_str_appends		76258	0					
ANR	79489	ArgumentList	str		76258	1					
ANR	79490	Argument	str		76258	0					
ANR	79491	Identifier	str		76258	0					
ANR	79492	Argument	"""switch ("""		76258	1					
ANR	79493	PrimaryExpression	"""switch ("""		76258	0					
ANR	79494	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1408:3:39635:39684	76258	269	True				
ANR	79495	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79496	Callee	zend_ast_export_ex		76258	0					
ANR	79497	Identifier	zend_ast_export_ex		76258	0					
ANR	79498	ArgumentList	str		76258	1					
ANR	79499	Argument	str		76258	0					
ANR	79500	Identifier	str		76258	0					
ANR	79501	Argument	ast -> child [ 0 ]		76258	1					
ANR	79502	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79503	PtrMemberAccess	ast -> child		76258	0					
ANR	79504	Identifier	ast		76258	0					
ANR	79505	Identifier	child		76258	1					
ANR	79506	PrimaryExpression	0		76258	1					
ANR	79507	Argument	0		76258	2					
ANR	79508	PrimaryExpression	0		76258	0					
ANR	79509	Argument	indent		76258	3					
ANR	79510	Identifier	indent		76258	0					
ANR	79511	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1409:3:39689:39720	76258	270	True				
ANR	79512	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		76258	0					
ANR	79513	Callee	smart_str_appends		76258	0					
ANR	79514	Identifier	smart_str_appends		76258	0					
ANR	79515	ArgumentList	str		76258	1					
ANR	79516	Argument	str		76258	0					
ANR	79517	Identifier	str		76258	0					
ANR	79518	Argument	""") {\\n"""		76258	1					
ANR	79519	PrimaryExpression	""") {\\n"""		76258	0					
ANR	79520	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"	1410:3:39725:39778	76258	271	True				
ANR	79521	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"		76258	0					
ANR	79522	Callee	zend_ast_export_ex		76258	0					
ANR	79523	Identifier	zend_ast_export_ex		76258	0					
ANR	79524	ArgumentList	str		76258	1					
ANR	79525	Argument	str		76258	0					
ANR	79526	Identifier	str		76258	0					
ANR	79527	Argument	ast -> child [ 1 ]		76258	1					
ANR	79528	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79529	PtrMemberAccess	ast -> child		76258	0					
ANR	79530	Identifier	ast		76258	0					
ANR	79531	Identifier	child		76258	1					
ANR	79532	PrimaryExpression	1		76258	1					
ANR	79533	Argument	0		76258	2					
ANR	79534	PrimaryExpression	0		76258	0					
ANR	79535	Argument	indent + 1		76258	3					
ANR	79536	AdditiveExpression	indent + 1		76258	0		+			
ANR	79537	Identifier	indent		76258	0					
ANR	79538	PrimaryExpression	1		76258	1					
ANR	79539	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1411:3:39783:39818	76258	272	True				
ANR	79540	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	79541	Callee	zend_ast_export_indent		76258	0					
ANR	79542	Identifier	zend_ast_export_indent		76258	0					
ANR	79543	ArgumentList	str		76258	1					
ANR	79544	Argument	str		76258	0					
ANR	79545	Identifier	str		76258	0					
ANR	79546	Argument	indent		76258	1					
ANR	79547	Identifier	indent		76258	0					
ANR	79548	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1412:3:39823:39850	76258	273	True				
ANR	79549	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	79550	Callee	smart_str_appendc		76258	0					
ANR	79551	Identifier	smart_str_appendc		76258	0					
ANR	79552	ArgumentList	str		76258	1					
ANR	79553	Argument	str		76258	0					
ANR	79554	Identifier	str		76258	0					
ANR	79555	Argument	'}'		76258	1					
ANR	79556	PrimaryExpression	'}'		76258	0					
ANR	79557	BreakStatement	break ;	1413:3:39855:39860	76258	274	True				
ANR	79558	Label	case ZEND_AST_SWITCH_CASE :	1414:2:39864:39889	76258	275	True				
ANR	79559	Identifier	ZEND_AST_SWITCH_CASE		76258	0					
ANR	79560	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1415:3:39894:39929	76258	276	True				
ANR	79561	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	79562	Callee	zend_ast_export_indent		76258	0					
ANR	79563	Identifier	zend_ast_export_indent		76258	0					
ANR	79564	ArgumentList	str		76258	1					
ANR	79565	Argument	str		76258	0					
ANR	79566	Identifier	str		76258	0					
ANR	79567	Argument	indent		76258	1					
ANR	79568	Identifier	indent		76258	0					
ANR	79569	IfStatement	if ( ast -> child [ 0 ] )		76258	277					
ANR	79570	Condition	ast -> child [ 0 ]	1416:7:39938:39950	76258	0	True				
ANR	79571	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79572	PtrMemberAccess	ast -> child		76258	0					
ANR	79573	Identifier	ast		76258	0					
ANR	79574	Identifier	child		76258	1					
ANR	79575	PrimaryExpression	0		76258	1					
ANR	79576	CompoundStatement		449:22:15247:15247	76258	1					
ANR	79577	ExpressionStatement	"smart_str_appends ( str , ""case "" )"	1417:4:39959:39990	76258	0	True				
ANR	79578	CallExpression	"smart_str_appends ( str , ""case "" )"		76258	0					
ANR	79579	Callee	smart_str_appends		76258	0					
ANR	79580	Identifier	smart_str_appends		76258	0					
ANR	79581	ArgumentList	str		76258	1					
ANR	79582	Argument	str		76258	0					
ANR	79583	Identifier	str		76258	0					
ANR	79584	Argument	"""case """		76258	1					
ANR	79585	PrimaryExpression	"""case """		76258	0					
ANR	79586	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1418:4:39996:40045	76258	1	True				
ANR	79587	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79588	Callee	zend_ast_export_ex		76258	0					
ANR	79589	Identifier	zend_ast_export_ex		76258	0					
ANR	79590	ArgumentList	str		76258	1					
ANR	79591	Argument	str		76258	0					
ANR	79592	Identifier	str		76258	0					
ANR	79593	Argument	ast -> child [ 0 ]		76258	1					
ANR	79594	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79595	PtrMemberAccess	ast -> child		76258	0					
ANR	79596	Identifier	ast		76258	0					
ANR	79597	Identifier	child		76258	1					
ANR	79598	PrimaryExpression	0		76258	1					
ANR	79599	Argument	0		76258	2					
ANR	79600	PrimaryExpression	0		76258	0					
ANR	79601	Argument	indent		76258	3					
ANR	79602	Identifier	indent		76258	0					
ANR	79603	ExpressionStatement	"smart_str_appends ( str , "":\\n"" )"	1419:4:40051:40080	76258	2	True				
ANR	79604	CallExpression	"smart_str_appends ( str , "":\\n"" )"		76258	0					
ANR	79605	Callee	smart_str_appends		76258	0					
ANR	79606	Identifier	smart_str_appends		76258	0					
ANR	79607	ArgumentList	str		76258	1					
ANR	79608	Argument	str		76258	0					
ANR	79609	Identifier	str		76258	0					
ANR	79610	Argument	""":\\n"""		76258	1					
ANR	79611	PrimaryExpression	""":\\n"""		76258	0					
ANR	79612	ElseStatement	else		76258	0					
ANR	79613	CompoundStatement		453:10:15386:15386	76258	0					
ANR	79614	ExpressionStatement	"smart_str_appends ( str , ""default:\\n"" )"	1421:4:40098:40134	76258	0	True				
ANR	79615	CallExpression	"smart_str_appends ( str , ""default:\\n"" )"		76258	0					
ANR	79616	Callee	smart_str_appends		76258	0					
ANR	79617	Identifier	smart_str_appends		76258	0					
ANR	79618	ArgumentList	str		76258	1					
ANR	79619	Argument	str		76258	0					
ANR	79620	Identifier	str		76258	0					
ANR	79621	Argument	"""default:\\n"""		76258	1					
ANR	79622	PrimaryExpression	"""default:\\n"""		76258	0					
ANR	79623	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1423:3:40144:40196	76258	278	True				
ANR	79624	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		76258	0					
ANR	79625	Callee	zend_ast_export_stmt		76258	0					
ANR	79626	Identifier	zend_ast_export_stmt		76258	0					
ANR	79627	ArgumentList	str		76258	1					
ANR	79628	Argument	str		76258	0					
ANR	79629	Identifier	str		76258	0					
ANR	79630	Argument	ast -> child [ 1 ]		76258	1					
ANR	79631	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79632	PtrMemberAccess	ast -> child		76258	0					
ANR	79633	Identifier	ast		76258	0					
ANR	79634	Identifier	child		76258	1					
ANR	79635	PrimaryExpression	1		76258	1					
ANR	79636	Argument	indent + 1		76258	2					
ANR	79637	AdditiveExpression	indent + 1		76258	0		+			
ANR	79638	Identifier	indent		76258	0					
ANR	79639	PrimaryExpression	1		76258	1					
ANR	79640	BreakStatement	break ;	1424:3:40201:40206	76258	279	True				
ANR	79641	Label	case ZEND_AST_DECLARE :	1425:2:40210:40231	76258	280	True				
ANR	79642	Identifier	ZEND_AST_DECLARE		76258	0					
ANR	79643	ExpressionStatement	"smart_str_appends ( str , ""declare("" )"	1426:3:40236:40270	76258	281	True				
ANR	79644	CallExpression	"smart_str_appends ( str , ""declare("" )"		76258	0					
ANR	79645	Callee	smart_str_appends		76258	0					
ANR	79646	Identifier	smart_str_appends		76258	0					
ANR	79647	ArgumentList	str		76258	1					
ANR	79648	Argument	str		76258	0					
ANR	79649	Identifier	str		76258	0					
ANR	79650	Argument	"""declare("""		76258	1					
ANR	79651	PrimaryExpression	"""declare("""		76258	0					
ANR	79652	ExpressionStatement	ZEND_ASSERT ( ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL )	1427:3:40275:40330	76258	282	True				
ANR	79653	CallExpression	ZEND_ASSERT ( ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL )		76258	0					
ANR	79654	Callee	ZEND_ASSERT		76258	0					
ANR	79655	Identifier	ZEND_ASSERT		76258	0					
ANR	79656	ArgumentList	ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL		76258	1					
ANR	79657	Argument	ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL		76258	0					
ANR	79658	EqualityExpression	ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL		76258	0		==			
ANR	79659	PtrMemberAccess	ast -> child [ 0 ] -> kind		76258	0					
ANR	79660	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79661	PtrMemberAccess	ast -> child		76258	0					
ANR	79662	Identifier	ast		76258	0					
ANR	79663	Identifier	child		76258	1					
ANR	79664	PrimaryExpression	0		76258	1					
ANR	79665	Identifier	kind		76258	1					
ANR	79666	Identifier	ZEND_AST_CONST_DECL		76258	1					
ANR	79667	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast -> child [ 0 ] , 1 , 0 , indent )"	1428:3:40335:40405	76258	283	True				
ANR	79668	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast -> child [ 0 ] , 1 , 0 , indent )"		76258	0					
ANR	79669	Callee	zend_ast_export_list		76258	0					
ANR	79670	Identifier	zend_ast_export_list		76258	0					
ANR	79671	ArgumentList	str		76258	1					
ANR	79672	Argument	str		76258	0					
ANR	79673	Identifier	str		76258	0					
ANR	79674	Argument	( zend_ast_list * ) ast -> child [ 0 ]		76258	1					
ANR	79675	CastExpression	( zend_ast_list * ) ast -> child [ 0 ]		76258	0					
ANR	79676	CastTarget	zend_ast_list *		76258	0					
ANR	79677	ArrayIndexing	ast -> child [ 0 ]		76258	1					
ANR	79678	PtrMemberAccess	ast -> child		76258	0					
ANR	79679	Identifier	ast		76258	0					
ANR	79680	Identifier	child		76258	1					
ANR	79681	PrimaryExpression	0		76258	1					
ANR	79682	Argument	1		76258	2					
ANR	79683	PrimaryExpression	1		76258	0					
ANR	79684	Argument	0		76258	3					
ANR	79685	PrimaryExpression	0		76258	0					
ANR	79686	Argument	indent		76258	4					
ANR	79687	Identifier	indent		76258	0					
ANR	79688	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1429:3:40410:40437	76258	284	True				
ANR	79689	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	79690	Callee	smart_str_appendc		76258	0					
ANR	79691	Identifier	smart_str_appendc		76258	0					
ANR	79692	ArgumentList	str		76258	1					
ANR	79693	Argument	str		76258	0					
ANR	79694	Identifier	str		76258	0					
ANR	79695	Argument	')'		76258	1					
ANR	79696	PrimaryExpression	')'		76258	0					
ANR	79697	IfStatement	if ( ast -> child [ 1 ] )		76258	285					
ANR	79698	Condition	ast -> child [ 1 ]	1430:7:40446:40458	76258	0	True				
ANR	79699	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79700	PtrMemberAccess	ast -> child		76258	0					
ANR	79701	Identifier	ast		76258	0					
ANR	79702	Identifier	child		76258	1					
ANR	79703	PrimaryExpression	1		76258	1					
ANR	79704	CompoundStatement		463:22:15755:15755	76258	1					
ANR	79705	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1431:4:40467:40497	76258	0	True				
ANR	79706	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		76258	0					
ANR	79707	Callee	smart_str_appends		76258	0					
ANR	79708	Identifier	smart_str_appends		76258	0					
ANR	79709	ArgumentList	str		76258	1					
ANR	79710	Argument	str		76258	0					
ANR	79711	Identifier	str		76258	0					
ANR	79712	Argument	""" {\\n"""		76258	1					
ANR	79713	PrimaryExpression	""" {\\n"""		76258	0					
ANR	79714	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1432:4:40503:40555	76258	1	True				
ANR	79715	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		76258	0					
ANR	79716	Callee	zend_ast_export_stmt		76258	0					
ANR	79717	Identifier	zend_ast_export_stmt		76258	0					
ANR	79718	ArgumentList	str		76258	1					
ANR	79719	Argument	str		76258	0					
ANR	79720	Identifier	str		76258	0					
ANR	79721	Argument	ast -> child [ 1 ]		76258	1					
ANR	79722	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79723	PtrMemberAccess	ast -> child		76258	0					
ANR	79724	Identifier	ast		76258	0					
ANR	79725	Identifier	child		76258	1					
ANR	79726	PrimaryExpression	1		76258	1					
ANR	79727	Argument	indent + 1		76258	2					
ANR	79728	AdditiveExpression	indent + 1		76258	0		+			
ANR	79729	Identifier	indent		76258	0					
ANR	79730	PrimaryExpression	1		76258	1					
ANR	79731	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1433:4:40561:40596	76258	2	True				
ANR	79732	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	79733	Callee	zend_ast_export_indent		76258	0					
ANR	79734	Identifier	zend_ast_export_indent		76258	0					
ANR	79735	ArgumentList	str		76258	1					
ANR	79736	Argument	str		76258	0					
ANR	79737	Identifier	str		76258	0					
ANR	79738	Argument	indent		76258	1					
ANR	79739	Identifier	indent		76258	0					
ANR	79740	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1434:4:40602:40629	76258	3	True				
ANR	79741	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	79742	Callee	smart_str_appendc		76258	0					
ANR	79743	Identifier	smart_str_appendc		76258	0					
ANR	79744	ArgumentList	str		76258	1					
ANR	79745	Argument	str		76258	0					
ANR	79746	Identifier	str		76258	0					
ANR	79747	Argument	'}'		76258	1					
ANR	79748	PrimaryExpression	'}'		76258	0					
ANR	79749	ElseStatement	else		76258	0					
ANR	79750	CompoundStatement		468:10:15935:15935	76258	0					
ANR	79751	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1436:4:40647:40674	76258	0	True				
ANR	79752	CallExpression	"smart_str_appendc ( str , ';' )"		76258	0					
ANR	79753	Callee	smart_str_appendc		76258	0					
ANR	79754	Identifier	smart_str_appendc		76258	0					
ANR	79755	ArgumentList	str		76258	1					
ANR	79756	Argument	str		76258	0					
ANR	79757	Identifier	str		76258	0					
ANR	79758	Argument	';'		76258	1					
ANR	79759	PrimaryExpression	';'		76258	0					
ANR	79760	BreakStatement	break ;	1438:3:40684:40689	76258	286	True				
ANR	79761	Label	case ZEND_AST_PROP_ELEM :	1439:2:40693:40716	76258	287	True				
ANR	79762	Identifier	ZEND_AST_PROP_ELEM		76258	0					
ANR	79763	ExpressionStatement	"smart_str_appendc ( str , '$' )"	1440:3:40721:40748	76258	288	True				
ANR	79764	CallExpression	"smart_str_appendc ( str , '$' )"		76258	0					
ANR	79765	Callee	smart_str_appendc		76258	0					
ANR	79766	Identifier	smart_str_appendc		76258	0					
ANR	79767	ArgumentList	str		76258	1					
ANR	79768	Argument	str		76258	0					
ANR	79769	Identifier	str		76258	0					
ANR	79770	Argument	'$'		76258	1					
ANR	79771	PrimaryExpression	'$'		76258	0					
ANR	79772	Label	case ZEND_AST_CONST_ELEM :	1442:2:40789:40813	76258	289	True				
ANR	79773	Identifier	ZEND_AST_CONST_ELEM		76258	0					
ANR	79774	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1443:3:40818:40869	76258	290	True				
ANR	79775	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79776	Callee	zend_ast_export_name		76258	0					
ANR	79777	Identifier	zend_ast_export_name		76258	0					
ANR	79778	ArgumentList	str		76258	1					
ANR	79779	Argument	str		76258	0					
ANR	79780	Identifier	str		76258	0					
ANR	79781	Argument	ast -> child [ 0 ]		76258	1					
ANR	79782	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79783	PtrMemberAccess	ast -> child		76258	0					
ANR	79784	Identifier	ast		76258	0					
ANR	79785	Identifier	child		76258	1					
ANR	79786	PrimaryExpression	0		76258	1					
ANR	79787	Argument	0		76258	2					
ANR	79788	PrimaryExpression	0		76258	0					
ANR	79789	Argument	indent		76258	3					
ANR	79790	Identifier	indent		76258	0					
ANR	79791	ExpressionStatement	APPEND_DEFAULT_VALUE ( 1 )	1444:3:40874:40897	76258	291	True				
ANR	79792	CallExpression	APPEND_DEFAULT_VALUE ( 1 )		76258	0					
ANR	79793	Callee	APPEND_DEFAULT_VALUE		76258	0					
ANR	79794	Identifier	APPEND_DEFAULT_VALUE		76258	0					
ANR	79795	ArgumentList	1		76258	1					
ANR	79796	Argument	1		76258	0					
ANR	79797	PrimaryExpression	1		76258	0					
ANR	79798	Label	case ZEND_AST_USE_TRAIT :	1445:2:40901:40924	76258	292	True				
ANR	79799	Identifier	ZEND_AST_USE_TRAIT		76258	0					
ANR	79800	ExpressionStatement	"smart_str_appends ( str , ""use "" )"	1446:3:40929:40959	76258	293	True				
ANR	79801	CallExpression	"smart_str_appends ( str , ""use "" )"		76258	0					
ANR	79802	Callee	smart_str_appends		76258	0					
ANR	79803	Identifier	smart_str_appends		76258	0					
ANR	79804	ArgumentList	str		76258	1					
ANR	79805	Argument	str		76258	0					
ANR	79806	Identifier	str		76258	0					
ANR	79807	Argument	"""use """		76258	1					
ANR	79808	PrimaryExpression	"""use """		76258	0					
ANR	79809	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1447:3:40964:41013	76258	294	True				
ANR	79810	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79811	Callee	zend_ast_export_ex		76258	0					
ANR	79812	Identifier	zend_ast_export_ex		76258	0					
ANR	79813	ArgumentList	str		76258	1					
ANR	79814	Argument	str		76258	0					
ANR	79815	Identifier	str		76258	0					
ANR	79816	Argument	ast -> child [ 0 ]		76258	1					
ANR	79817	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79818	PtrMemberAccess	ast -> child		76258	0					
ANR	79819	Identifier	ast		76258	0					
ANR	79820	Identifier	child		76258	1					
ANR	79821	PrimaryExpression	0		76258	1					
ANR	79822	Argument	0		76258	2					
ANR	79823	PrimaryExpression	0		76258	0					
ANR	79824	Argument	indent		76258	3					
ANR	79825	Identifier	indent		76258	0					
ANR	79826	IfStatement	if ( ast -> child [ 1 ] )		76258	295					
ANR	79827	Condition	ast -> child [ 1 ]	1448:7:41022:41034	76258	0	True				
ANR	79828	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79829	PtrMemberAccess	ast -> child		76258	0					
ANR	79830	Identifier	ast		76258	0					
ANR	79831	Identifier	child		76258	1					
ANR	79832	PrimaryExpression	1		76258	1					
ANR	79833	CompoundStatement		481:22:16331:16331	76258	1					
ANR	79834	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1449:4:41043:41073	76258	0	True				
ANR	79835	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		76258	0					
ANR	79836	Callee	smart_str_appends		76258	0					
ANR	79837	Identifier	smart_str_appends		76258	0					
ANR	79838	ArgumentList	str		76258	1					
ANR	79839	Argument	str		76258	0					
ANR	79840	Identifier	str		76258	0					
ANR	79841	Argument	""" {\\n"""		76258	1					
ANR	79842	PrimaryExpression	""" {\\n"""		76258	0					
ANR	79843	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"	1450:4:41079:41132	76258	1	True				
ANR	79844	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"		76258	0					
ANR	79845	Callee	zend_ast_export_ex		76258	0					
ANR	79846	Identifier	zend_ast_export_ex		76258	0					
ANR	79847	ArgumentList	str		76258	1					
ANR	79848	Argument	str		76258	0					
ANR	79849	Identifier	str		76258	0					
ANR	79850	Argument	ast -> child [ 1 ]		76258	1					
ANR	79851	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79852	PtrMemberAccess	ast -> child		76258	0					
ANR	79853	Identifier	ast		76258	0					
ANR	79854	Identifier	child		76258	1					
ANR	79855	PrimaryExpression	1		76258	1					
ANR	79856	Argument	0		76258	2					
ANR	79857	PrimaryExpression	0		76258	0					
ANR	79858	Argument	indent + 1		76258	3					
ANR	79859	AdditiveExpression	indent + 1		76258	0		+			
ANR	79860	Identifier	indent		76258	0					
ANR	79861	PrimaryExpression	1		76258	1					
ANR	79862	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1451:4:41138:41173	76258	2	True				
ANR	79863	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	79864	Callee	zend_ast_export_indent		76258	0					
ANR	79865	Identifier	zend_ast_export_indent		76258	0					
ANR	79866	ArgumentList	str		76258	1					
ANR	79867	Argument	str		76258	0					
ANR	79868	Identifier	str		76258	0					
ANR	79869	Argument	indent		76258	1					
ANR	79870	Identifier	indent		76258	0					
ANR	79871	ExpressionStatement	"smart_str_appends ( str , ""}"" )"	1452:4:41179:41206	76258	3	True				
ANR	79872	CallExpression	"smart_str_appends ( str , ""}"" )"		76258	0					
ANR	79873	Callee	smart_str_appends		76258	0					
ANR	79874	Identifier	smart_str_appends		76258	0					
ANR	79875	ArgumentList	str		76258	1					
ANR	79876	Argument	str		76258	0					
ANR	79877	Identifier	str		76258	0					
ANR	79878	Argument	"""}"""		76258	1					
ANR	79879	PrimaryExpression	"""}"""		76258	0					
ANR	79880	ElseStatement	else		76258	0					
ANR	79881	CompoundStatement		486:10:16512:16512	76258	0					
ANR	79882	ExpressionStatement	"smart_str_appends ( str , "";"" )"	1454:4:41224:41251	76258	0	True				
ANR	79883	CallExpression	"smart_str_appends ( str , "";"" )"		76258	0					
ANR	79884	Callee	smart_str_appends		76258	0					
ANR	79885	Identifier	smart_str_appends		76258	0					
ANR	79886	ArgumentList	str		76258	1					
ANR	79887	Argument	str		76258	0					
ANR	79888	Identifier	str		76258	0					
ANR	79889	Argument	""";"""		76258	1					
ANR	79890	PrimaryExpression	""";"""		76258	0					
ANR	79891	BreakStatement	break ;	1456:3:41261:41266	76258	296	True				
ANR	79892	Label	case ZEND_AST_TRAIT_PRECEDENCE :	1457:2:41270:41300	76258	297	True				
ANR	79893	Identifier	ZEND_AST_TRAIT_PRECEDENCE		76258	0					
ANR	79894	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1458:3:41305:41354	76258	298	True				
ANR	79895	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79896	Callee	zend_ast_export_ex		76258	0					
ANR	79897	Identifier	zend_ast_export_ex		76258	0					
ANR	79898	ArgumentList	str		76258	1					
ANR	79899	Argument	str		76258	0					
ANR	79900	Identifier	str		76258	0					
ANR	79901	Argument	ast -> child [ 0 ]		76258	1					
ANR	79902	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79903	PtrMemberAccess	ast -> child		76258	0					
ANR	79904	Identifier	ast		76258	0					
ANR	79905	Identifier	child		76258	1					
ANR	79906	PrimaryExpression	0		76258	1					
ANR	79907	Argument	0		76258	2					
ANR	79908	PrimaryExpression	0		76258	0					
ANR	79909	Argument	indent		76258	3					
ANR	79910	Identifier	indent		76258	0					
ANR	79911	ExpressionStatement	"smart_str_appends ( str , "" insteadof "" )"	1459:3:41359:41396	76258	299	True				
ANR	79912	CallExpression	"smart_str_appends ( str , "" insteadof "" )"		76258	0					
ANR	79913	Callee	smart_str_appends		76258	0					
ANR	79914	Identifier	smart_str_appends		76258	0					
ANR	79915	ArgumentList	str		76258	1					
ANR	79916	Argument	str		76258	0					
ANR	79917	Identifier	str		76258	0					
ANR	79918	Argument	""" insteadof """		76258	1					
ANR	79919	PrimaryExpression	""" insteadof """		76258	0					
ANR	79920	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1460:3:41401:41450	76258	300	True				
ANR	79921	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	79922	Callee	zend_ast_export_ex		76258	0					
ANR	79923	Identifier	zend_ast_export_ex		76258	0					
ANR	79924	ArgumentList	str		76258	1					
ANR	79925	Argument	str		76258	0					
ANR	79926	Identifier	str		76258	0					
ANR	79927	Argument	ast -> child [ 1 ]		76258	1					
ANR	79928	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79929	PtrMemberAccess	ast -> child		76258	0					
ANR	79930	Identifier	ast		76258	0					
ANR	79931	Identifier	child		76258	1					
ANR	79932	PrimaryExpression	1		76258	1					
ANR	79933	Argument	0		76258	2					
ANR	79934	PrimaryExpression	0		76258	0					
ANR	79935	Argument	indent		76258	3					
ANR	79936	Identifier	indent		76258	0					
ANR	79937	BreakStatement	break ;	1461:3:41455:41460	76258	301	True				
ANR	79938	Label	case ZEND_AST_METHOD_REFERENCE :	1462:2:41464:41494	76258	302	True				
ANR	79939	Identifier	ZEND_AST_METHOD_REFERENCE		76258	0					
ANR	79940	IfStatement	if ( ast -> child [ 0 ] )		76258	303					
ANR	79941	Condition	ast -> child [ 0 ]	1463:7:41503:41515	76258	0	True				
ANR	79942	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79943	PtrMemberAccess	ast -> child		76258	0					
ANR	79944	Identifier	ast		76258	0					
ANR	79945	Identifier	child		76258	1					
ANR	79946	PrimaryExpression	0		76258	1					
ANR	79947	CompoundStatement		496:22:16812:16812	76258	1					
ANR	79948	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1464:4:41524:41575	76258	0	True				
ANR	79949	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	79950	Callee	zend_ast_export_name		76258	0					
ANR	79951	Identifier	zend_ast_export_name		76258	0					
ANR	79952	ArgumentList	str		76258	1					
ANR	79953	Argument	str		76258	0					
ANR	79954	Identifier	str		76258	0					
ANR	79955	Argument	ast -> child [ 0 ]		76258	1					
ANR	79956	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	79957	PtrMemberAccess	ast -> child		76258	0					
ANR	79958	Identifier	ast		76258	0					
ANR	79959	Identifier	child		76258	1					
ANR	79960	PrimaryExpression	0		76258	1					
ANR	79961	Argument	0		76258	2					
ANR	79962	PrimaryExpression	0		76258	0					
ANR	79963	Argument	indent		76258	3					
ANR	79964	Identifier	indent		76258	0					
ANR	79965	ExpressionStatement	"smart_str_appends ( str , ""::"" )"	1465:4:41581:41609	76258	1	True				
ANR	79966	CallExpression	"smart_str_appends ( str , ""::"" )"		76258	0					
ANR	79967	Callee	smart_str_appends		76258	0					
ANR	79968	Identifier	smart_str_appends		76258	0					
ANR	79969	ArgumentList	str		76258	1					
ANR	79970	Argument	str		76258	0					
ANR	79971	Identifier	str		76258	0					
ANR	79972	Argument	"""::"""		76258	1					
ANR	79973	PrimaryExpression	"""::"""		76258	0					
ANR	79974	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1467:3:41619:41670	76258	304	True				
ANR	79975	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	79976	Callee	zend_ast_export_name		76258	0					
ANR	79977	Identifier	zend_ast_export_name		76258	0					
ANR	79978	ArgumentList	str		76258	1					
ANR	79979	Argument	str		76258	0					
ANR	79980	Identifier	str		76258	0					
ANR	79981	Argument	ast -> child [ 1 ]		76258	1					
ANR	79982	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	79983	PtrMemberAccess	ast -> child		76258	0					
ANR	79984	Identifier	ast		76258	0					
ANR	79985	Identifier	child		76258	1					
ANR	79986	PrimaryExpression	1		76258	1					
ANR	79987	Argument	0		76258	2					
ANR	79988	PrimaryExpression	0		76258	0					
ANR	79989	Argument	indent		76258	3					
ANR	79990	Identifier	indent		76258	0					
ANR	79991	BreakStatement	break ;	1468:3:41675:41680	76258	305	True				
ANR	79992	Label	case ZEND_AST_NAMESPACE :	1469:2:41684:41707	76258	306	True				
ANR	79993	Identifier	ZEND_AST_NAMESPACE		76258	0					
ANR	79994	ExpressionStatement	"smart_str_appends ( str , ""namespace"" )"	1470:3:41712:41747	76258	307	True				
ANR	79995	CallExpression	"smart_str_appends ( str , ""namespace"" )"		76258	0					
ANR	79996	Callee	smart_str_appends		76258	0					
ANR	79997	Identifier	smart_str_appends		76258	0					
ANR	79998	ArgumentList	str		76258	1					
ANR	79999	Argument	str		76258	0					
ANR	80000	Identifier	str		76258	0					
ANR	80001	Argument	"""namespace"""		76258	1					
ANR	80002	PrimaryExpression	"""namespace"""		76258	0					
ANR	80003	IfStatement	if ( ast -> child [ 0 ] )		76258	308					
ANR	80004	Condition	ast -> child [ 0 ]	1471:7:41756:41768	76258	0	True				
ANR	80005	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80006	PtrMemberAccess	ast -> child		76258	0					
ANR	80007	Identifier	ast		76258	0					
ANR	80008	Identifier	child		76258	1					
ANR	80009	PrimaryExpression	0		76258	1					
ANR	80010	CompoundStatement		504:22:17065:17065	76258	1					
ANR	80011	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1472:4:41777:41804	76258	0	True				
ANR	80012	CallExpression	"smart_str_appendc ( str , ' ' )"		76258	0					
ANR	80013	Callee	smart_str_appendc		76258	0					
ANR	80014	Identifier	smart_str_appendc		76258	0					
ANR	80015	ArgumentList	str		76258	1					
ANR	80016	Argument	str		76258	0					
ANR	80017	Identifier	str		76258	0					
ANR	80018	Argument	' '		76258	1					
ANR	80019	PrimaryExpression	' '		76258	0					
ANR	80020	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1473:4:41810:41861	76258	1	True				
ANR	80021	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80022	Callee	zend_ast_export_name		76258	0					
ANR	80023	Identifier	zend_ast_export_name		76258	0					
ANR	80024	ArgumentList	str		76258	1					
ANR	80025	Argument	str		76258	0					
ANR	80026	Identifier	str		76258	0					
ANR	80027	Argument	ast -> child [ 0 ]		76258	1					
ANR	80028	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80029	PtrMemberAccess	ast -> child		76258	0					
ANR	80030	Identifier	ast		76258	0					
ANR	80031	Identifier	child		76258	1					
ANR	80032	PrimaryExpression	0		76258	1					
ANR	80033	Argument	0		76258	2					
ANR	80034	PrimaryExpression	0		76258	0					
ANR	80035	Argument	indent		76258	3					
ANR	80036	Identifier	indent		76258	0					
ANR	80037	IfStatement	if ( ast -> child [ 1 ] )		76258	309					
ANR	80038	Condition	ast -> child [ 1 ]	1475:7:41875:41887	76258	0	True				
ANR	80039	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80040	PtrMemberAccess	ast -> child		76258	0					
ANR	80041	Identifier	ast		76258	0					
ANR	80042	Identifier	child		76258	1					
ANR	80043	PrimaryExpression	1		76258	1					
ANR	80044	CompoundStatement		508:22:17184:17184	76258	1					
ANR	80045	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1476:4:41896:41926	76258	0	True				
ANR	80046	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		76258	0					
ANR	80047	Callee	smart_str_appends		76258	0					
ANR	80048	Identifier	smart_str_appends		76258	0					
ANR	80049	ArgumentList	str		76258	1					
ANR	80050	Argument	str		76258	0					
ANR	80051	Identifier	str		76258	0					
ANR	80052	Argument	""" {\\n"""		76258	1					
ANR	80053	PrimaryExpression	""" {\\n"""		76258	0					
ANR	80054	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1477:4:41932:41984	76258	1	True				
ANR	80055	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		76258	0					
ANR	80056	Callee	zend_ast_export_stmt		76258	0					
ANR	80057	Identifier	zend_ast_export_stmt		76258	0					
ANR	80058	ArgumentList	str		76258	1					
ANR	80059	Argument	str		76258	0					
ANR	80060	Identifier	str		76258	0					
ANR	80061	Argument	ast -> child [ 1 ]		76258	1					
ANR	80062	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80063	PtrMemberAccess	ast -> child		76258	0					
ANR	80064	Identifier	ast		76258	0					
ANR	80065	Identifier	child		76258	1					
ANR	80066	PrimaryExpression	1		76258	1					
ANR	80067	Argument	indent + 1		76258	2					
ANR	80068	AdditiveExpression	indent + 1		76258	0		+			
ANR	80069	Identifier	indent		76258	0					
ANR	80070	PrimaryExpression	1		76258	1					
ANR	80071	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1478:4:41990:42025	76258	2	True				
ANR	80072	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	80073	Callee	zend_ast_export_indent		76258	0					
ANR	80074	Identifier	zend_ast_export_indent		76258	0					
ANR	80075	ArgumentList	str		76258	1					
ANR	80076	Argument	str		76258	0					
ANR	80077	Identifier	str		76258	0					
ANR	80078	Argument	indent		76258	1					
ANR	80079	Identifier	indent		76258	0					
ANR	80080	ExpressionStatement	"smart_str_appends ( str , ""}\\n"" )"	1479:4:42031:42060	76258	3	True				
ANR	80081	CallExpression	"smart_str_appends ( str , ""}\\n"" )"		76258	0					
ANR	80082	Callee	smart_str_appends		76258	0					
ANR	80083	Identifier	smart_str_appends		76258	0					
ANR	80084	ArgumentList	str		76258	1					
ANR	80085	Argument	str		76258	0					
ANR	80086	Identifier	str		76258	0					
ANR	80087	Argument	"""}\\n"""		76258	1					
ANR	80088	PrimaryExpression	"""}\\n"""		76258	0					
ANR	80089	ElseStatement	else		76258	0					
ANR	80090	CompoundStatement		513:10:17366:17366	76258	0					
ANR	80091	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1481:4:42078:42105	76258	0	True				
ANR	80092	CallExpression	"smart_str_appendc ( str , ';' )"		76258	0					
ANR	80093	Callee	smart_str_appendc		76258	0					
ANR	80094	Identifier	smart_str_appendc		76258	0					
ANR	80095	ArgumentList	str		76258	1					
ANR	80096	Argument	str		76258	0					
ANR	80097	Identifier	str		76258	0					
ANR	80098	Argument	';'		76258	1					
ANR	80099	PrimaryExpression	';'		76258	0					
ANR	80100	BreakStatement	break ;	1483:3:42115:42120	76258	310	True				
ANR	80101	Label	case ZEND_AST_USE_ELEM :	1484:2:42124:42146	76258	311	True				
ANR	80102	Identifier	ZEND_AST_USE_ELEM		76258	0					
ANR	80103	Label	case ZEND_AST_TRAIT_ALIAS :	1485:2:42150:42175	76258	312	True				
ANR	80104	Identifier	ZEND_AST_TRAIT_ALIAS		76258	0					
ANR	80105	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1486:3:42180:42231	76258	313	True				
ANR	80106	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80107	Callee	zend_ast_export_name		76258	0					
ANR	80108	Identifier	zend_ast_export_name		76258	0					
ANR	80109	ArgumentList	str		76258	1					
ANR	80110	Argument	str		76258	0					
ANR	80111	Identifier	str		76258	0					
ANR	80112	Argument	ast -> child [ 0 ]		76258	1					
ANR	80113	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80114	PtrMemberAccess	ast -> child		76258	0					
ANR	80115	Identifier	ast		76258	0					
ANR	80116	Identifier	child		76258	1					
ANR	80117	PrimaryExpression	0		76258	1					
ANR	80118	Argument	0		76258	2					
ANR	80119	PrimaryExpression	0		76258	0					
ANR	80120	Argument	indent		76258	3					
ANR	80121	Identifier	indent		76258	0					
ANR	80122	IfStatement	if ( ast -> attr & ZEND_ACC_PUBLIC )		76258	314					
ANR	80123	Condition	ast -> attr & ZEND_ACC_PUBLIC	1487:7:42240:42266	76258	0	True				
ANR	80124	BitAndExpression	ast -> attr & ZEND_ACC_PUBLIC		76258	0		&			
ANR	80125	PtrMemberAccess	ast -> attr		76258	0					
ANR	80126	Identifier	ast		76258	0					
ANR	80127	Identifier	attr		76258	1					
ANR	80128	Identifier	ZEND_ACC_PUBLIC		76258	1					
ANR	80129	CompoundStatement		520:36:17563:17563	76258	1					
ANR	80130	ExpressionStatement	"smart_str_appends ( str , "" as public"" )"	1488:4:42275:42311	76258	0	True				
ANR	80131	CallExpression	"smart_str_appends ( str , "" as public"" )"		76258	0					
ANR	80132	Callee	smart_str_appends		76258	0					
ANR	80133	Identifier	smart_str_appends		76258	0					
ANR	80134	ArgumentList	str		76258	1					
ANR	80135	Argument	str		76258	0					
ANR	80136	Identifier	str		76258	0					
ANR	80137	Argument	""" as public"""		76258	1					
ANR	80138	PrimaryExpression	""" as public"""		76258	0					
ANR	80139	ElseStatement	else		76258	0					
ANR	80140	IfStatement	if ( ast -> attr & ZEND_ACC_PROTECTED )		76258	0					
ANR	80141	Condition	ast -> attr & ZEND_ACC_PROTECTED	1489:14:42327:42356	76258	0	True				
ANR	80142	BitAndExpression	ast -> attr & ZEND_ACC_PROTECTED		76258	0		&			
ANR	80143	PtrMemberAccess	ast -> attr		76258	0					
ANR	80144	Identifier	ast		76258	0					
ANR	80145	Identifier	attr		76258	1					
ANR	80146	Identifier	ZEND_ACC_PROTECTED		76258	1					
ANR	80147	CompoundStatement		522:46:17653:17653	76258	1					
ANR	80148	ExpressionStatement	"smart_str_appends ( str , "" as protected"" )"	1490:4:42365:42404	76258	0	True				
ANR	80149	CallExpression	"smart_str_appends ( str , "" as protected"" )"		76258	0					
ANR	80150	Callee	smart_str_appends		76258	0					
ANR	80151	Identifier	smart_str_appends		76258	0					
ANR	80152	ArgumentList	str		76258	1					
ANR	80153	Argument	str		76258	0					
ANR	80154	Identifier	str		76258	0					
ANR	80155	Argument	""" as protected"""		76258	1					
ANR	80156	PrimaryExpression	""" as protected"""		76258	0					
ANR	80157	ElseStatement	else		76258	0					
ANR	80158	IfStatement	if ( ast -> attr & ZEND_ACC_PRIVATE )		76258	0					
ANR	80159	Condition	ast -> attr & ZEND_ACC_PRIVATE	1491:14:42420:42447	76258	0	True				
ANR	80160	BitAndExpression	ast -> attr & ZEND_ACC_PRIVATE		76258	0		&			
ANR	80161	PtrMemberAccess	ast -> attr		76258	0					
ANR	80162	Identifier	ast		76258	0					
ANR	80163	Identifier	attr		76258	1					
ANR	80164	Identifier	ZEND_ACC_PRIVATE		76258	1					
ANR	80165	CompoundStatement		524:44:17744:17744	76258	1					
ANR	80166	ExpressionStatement	"smart_str_appends ( str , "" as private"" )"	1492:4:42456:42493	76258	0	True				
ANR	80167	CallExpression	"smart_str_appends ( str , "" as private"" )"		76258	0					
ANR	80168	Callee	smart_str_appends		76258	0					
ANR	80169	Identifier	smart_str_appends		76258	0					
ANR	80170	ArgumentList	str		76258	1					
ANR	80171	Argument	str		76258	0					
ANR	80172	Identifier	str		76258	0					
ANR	80173	Argument	""" as private"""		76258	1					
ANR	80174	PrimaryExpression	""" as private"""		76258	0					
ANR	80175	ElseStatement	else		76258	0					
ANR	80176	IfStatement	if ( ast -> child [ 1 ] )		76258	0					
ANR	80177	Condition	ast -> child [ 1 ]	1493:14:42509:42521	76258	0	True				
ANR	80178	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80179	PtrMemberAccess	ast -> child		76258	0					
ANR	80180	Identifier	ast		76258	0					
ANR	80181	Identifier	child		76258	1					
ANR	80182	PrimaryExpression	1		76258	1					
ANR	80183	CompoundStatement		526:29:17818:17818	76258	1					
ANR	80184	ExpressionStatement	"smart_str_appends ( str , "" as"" )"	1494:4:42530:42559	76258	0	True				
ANR	80185	CallExpression	"smart_str_appends ( str , "" as"" )"		76258	0					
ANR	80186	Callee	smart_str_appends		76258	0					
ANR	80187	Identifier	smart_str_appends		76258	0					
ANR	80188	ArgumentList	str		76258	1					
ANR	80189	Argument	str		76258	0					
ANR	80190	Identifier	str		76258	0					
ANR	80191	Argument	""" as"""		76258	1					
ANR	80192	PrimaryExpression	""" as"""		76258	0					
ANR	80193	IfStatement	if ( ast -> child [ 1 ] )		76258	315					
ANR	80194	Condition	ast -> child [ 1 ]	1496:7:42573:42585	76258	0	True				
ANR	80195	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80196	PtrMemberAccess	ast -> child		76258	0					
ANR	80197	Identifier	ast		76258	0					
ANR	80198	Identifier	child		76258	1					
ANR	80199	PrimaryExpression	1		76258	1					
ANR	80200	CompoundStatement		529:22:17882:17882	76258	1					
ANR	80201	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1497:4:42594:42621	76258	0	True				
ANR	80202	CallExpression	"smart_str_appendc ( str , ' ' )"		76258	0					
ANR	80203	Callee	smart_str_appendc		76258	0					
ANR	80204	Identifier	smart_str_appendc		76258	0					
ANR	80205	ArgumentList	str		76258	1					
ANR	80206	Argument	str		76258	0					
ANR	80207	Identifier	str		76258	0					
ANR	80208	Argument	' '		76258	1					
ANR	80209	PrimaryExpression	' '		76258	0					
ANR	80210	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1498:4:42627:42678	76258	1	True				
ANR	80211	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	80212	Callee	zend_ast_export_name		76258	0					
ANR	80213	Identifier	zend_ast_export_name		76258	0					
ANR	80214	ArgumentList	str		76258	1					
ANR	80215	Argument	str		76258	0					
ANR	80216	Identifier	str		76258	0					
ANR	80217	Argument	ast -> child [ 1 ]		76258	1					
ANR	80218	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80219	PtrMemberAccess	ast -> child		76258	0					
ANR	80220	Identifier	ast		76258	0					
ANR	80221	Identifier	child		76258	1					
ANR	80222	PrimaryExpression	1		76258	1					
ANR	80223	Argument	0		76258	2					
ANR	80224	PrimaryExpression	0		76258	0					
ANR	80225	Argument	indent		76258	3					
ANR	80226	Identifier	indent		76258	0					
ANR	80227	BreakStatement	break ;	1500:3:42688:42693	76258	316	True				
ANR	80228	Label	case ZEND_AST_METHOD_CALL :	1503:2:42720:42745	76258	317	True				
ANR	80229	Identifier	ZEND_AST_METHOD_CALL		76258	0					
ANR	80230	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1504:3:42750:42799	76258	318	True				
ANR	80231	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80232	Callee	zend_ast_export_ex		76258	0					
ANR	80233	Identifier	zend_ast_export_ex		76258	0					
ANR	80234	ArgumentList	str		76258	1					
ANR	80235	Argument	str		76258	0					
ANR	80236	Identifier	str		76258	0					
ANR	80237	Argument	ast -> child [ 0 ]		76258	1					
ANR	80238	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80239	PtrMemberAccess	ast -> child		76258	0					
ANR	80240	Identifier	ast		76258	0					
ANR	80241	Identifier	child		76258	1					
ANR	80242	PrimaryExpression	0		76258	1					
ANR	80243	Argument	0		76258	2					
ANR	80244	PrimaryExpression	0		76258	0					
ANR	80245	Argument	indent		76258	3					
ANR	80246	Identifier	indent		76258	0					
ANR	80247	ExpressionStatement	"smart_str_appends ( str , ""->"" )"	1505:3:42804:42832	76258	319	True				
ANR	80248	CallExpression	"smart_str_appends ( str , ""->"" )"		76258	0					
ANR	80249	Callee	smart_str_appends		76258	0					
ANR	80250	Identifier	smart_str_appends		76258	0					
ANR	80251	ArgumentList	str		76258	1					
ANR	80252	Argument	str		76258	0					
ANR	80253	Identifier	str		76258	0					
ANR	80254	Argument	"""->"""		76258	1					
ANR	80255	PrimaryExpression	"""->"""		76258	0					
ANR	80256	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1506:3:42837:42887	76258	320	True				
ANR	80257	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	80258	Callee	zend_ast_export_var		76258	0					
ANR	80259	Identifier	zend_ast_export_var		76258	0					
ANR	80260	ArgumentList	str		76258	1					
ANR	80261	Argument	str		76258	0					
ANR	80262	Identifier	str		76258	0					
ANR	80263	Argument	ast -> child [ 1 ]		76258	1					
ANR	80264	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80265	PtrMemberAccess	ast -> child		76258	0					
ANR	80266	Identifier	ast		76258	0					
ANR	80267	Identifier	child		76258	1					
ANR	80268	PrimaryExpression	1		76258	1					
ANR	80269	Argument	0		76258	2					
ANR	80270	PrimaryExpression	0		76258	0					
ANR	80271	Argument	indent		76258	3					
ANR	80272	Identifier	indent		76258	0					
ANR	80273	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1507:3:42892:42919	76258	321	True				
ANR	80274	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	80275	Callee	smart_str_appendc		76258	0					
ANR	80276	Identifier	smart_str_appendc		76258	0					
ANR	80277	ArgumentList	str		76258	1					
ANR	80278	Argument	str		76258	0					
ANR	80279	Identifier	str		76258	0					
ANR	80280	Argument	'('		76258	1					
ANR	80281	PrimaryExpression	'('		76258	0					
ANR	80282	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1508:3:42924:42973	76258	322	True				
ANR	80283	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		76258	0					
ANR	80284	Callee	zend_ast_export_ex		76258	0					
ANR	80285	Identifier	zend_ast_export_ex		76258	0					
ANR	80286	ArgumentList	str		76258	1					
ANR	80287	Argument	str		76258	0					
ANR	80288	Identifier	str		76258	0					
ANR	80289	Argument	ast -> child [ 2 ]		76258	1					
ANR	80290	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80291	PtrMemberAccess	ast -> child		76258	0					
ANR	80292	Identifier	ast		76258	0					
ANR	80293	Identifier	child		76258	1					
ANR	80294	PrimaryExpression	2		76258	1					
ANR	80295	Argument	0		76258	2					
ANR	80296	PrimaryExpression	0		76258	0					
ANR	80297	Argument	indent		76258	3					
ANR	80298	Identifier	indent		76258	0					
ANR	80299	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1509:3:42978:43005	76258	323	True				
ANR	80300	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	80301	Callee	smart_str_appendc		76258	0					
ANR	80302	Identifier	smart_str_appendc		76258	0					
ANR	80303	ArgumentList	str		76258	1					
ANR	80304	Argument	str		76258	0					
ANR	80305	Identifier	str		76258	0					
ANR	80306	Argument	')'		76258	1					
ANR	80307	PrimaryExpression	')'		76258	0					
ANR	80308	BreakStatement	break ;	1510:3:43010:43015	76258	324	True				
ANR	80309	Label	case ZEND_AST_STATIC_CALL :	1511:2:43019:43044	76258	325	True				
ANR	80310	Identifier	ZEND_AST_STATIC_CALL		76258	0					
ANR	80311	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1512:3:43049:43103	76258	326	True				
ANR	80312	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80313	Callee	zend_ast_export_ns_name		76258	0					
ANR	80314	Identifier	zend_ast_export_ns_name		76258	0					
ANR	80315	ArgumentList	str		76258	1					
ANR	80316	Argument	str		76258	0					
ANR	80317	Identifier	str		76258	0					
ANR	80318	Argument	ast -> child [ 0 ]		76258	1					
ANR	80319	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80320	PtrMemberAccess	ast -> child		76258	0					
ANR	80321	Identifier	ast		76258	0					
ANR	80322	Identifier	child		76258	1					
ANR	80323	PrimaryExpression	0		76258	1					
ANR	80324	Argument	0		76258	2					
ANR	80325	PrimaryExpression	0		76258	0					
ANR	80326	Argument	indent		76258	3					
ANR	80327	Identifier	indent		76258	0					
ANR	80328	ExpressionStatement	"smart_str_appends ( str , ""::"" )"	1513:3:43108:43136	76258	327	True				
ANR	80329	CallExpression	"smart_str_appends ( str , ""::"" )"		76258	0					
ANR	80330	Callee	smart_str_appends		76258	0					
ANR	80331	Identifier	smart_str_appends		76258	0					
ANR	80332	ArgumentList	str		76258	1					
ANR	80333	Argument	str		76258	0					
ANR	80334	Identifier	str		76258	0					
ANR	80335	Argument	"""::"""		76258	1					
ANR	80336	PrimaryExpression	"""::"""		76258	0					
ANR	80337	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1514:3:43141:43191	76258	328	True				
ANR	80338	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	80339	Callee	zend_ast_export_var		76258	0					
ANR	80340	Identifier	zend_ast_export_var		76258	0					
ANR	80341	ArgumentList	str		76258	1					
ANR	80342	Argument	str		76258	0					
ANR	80343	Identifier	str		76258	0					
ANR	80344	Argument	ast -> child [ 1 ]		76258	1					
ANR	80345	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80346	PtrMemberAccess	ast -> child		76258	0					
ANR	80347	Identifier	ast		76258	0					
ANR	80348	Identifier	child		76258	1					
ANR	80349	PrimaryExpression	1		76258	1					
ANR	80350	Argument	0		76258	2					
ANR	80351	PrimaryExpression	0		76258	0					
ANR	80352	Argument	indent		76258	3					
ANR	80353	Identifier	indent		76258	0					
ANR	80354	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1515:3:43196:43223	76258	329	True				
ANR	80355	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	80356	Callee	smart_str_appendc		76258	0					
ANR	80357	Identifier	smart_str_appendc		76258	0					
ANR	80358	ArgumentList	str		76258	1					
ANR	80359	Argument	str		76258	0					
ANR	80360	Identifier	str		76258	0					
ANR	80361	Argument	'('		76258	1					
ANR	80362	PrimaryExpression	'('		76258	0					
ANR	80363	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1516:3:43228:43277	76258	330	True				
ANR	80364	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		76258	0					
ANR	80365	Callee	zend_ast_export_ex		76258	0					
ANR	80366	Identifier	zend_ast_export_ex		76258	0					
ANR	80367	ArgumentList	str		76258	1					
ANR	80368	Argument	str		76258	0					
ANR	80369	Identifier	str		76258	0					
ANR	80370	Argument	ast -> child [ 2 ]		76258	1					
ANR	80371	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80372	PtrMemberAccess	ast -> child		76258	0					
ANR	80373	Identifier	ast		76258	0					
ANR	80374	Identifier	child		76258	1					
ANR	80375	PrimaryExpression	2		76258	1					
ANR	80376	Argument	0		76258	2					
ANR	80377	PrimaryExpression	0		76258	0					
ANR	80378	Argument	indent		76258	3					
ANR	80379	Identifier	indent		76258	0					
ANR	80380	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1517:3:43282:43309	76258	331	True				
ANR	80381	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	80382	Callee	smart_str_appendc		76258	0					
ANR	80383	Identifier	smart_str_appendc		76258	0					
ANR	80384	ArgumentList	str		76258	1					
ANR	80385	Argument	str		76258	0					
ANR	80386	Identifier	str		76258	0					
ANR	80387	Argument	')'		76258	1					
ANR	80388	PrimaryExpression	')'		76258	0					
ANR	80389	BreakStatement	break ;	1518:3:43314:43319	76258	332	True				
ANR	80390	Label	case ZEND_AST_CONDITIONAL :	1519:2:43323:43348	76258	333	True				
ANR	80391	Identifier	ZEND_AST_CONDITIONAL		76258	0					
ANR	80392	IfStatement	if ( priority > 100 )		76258	334					
ANR	80393	Condition	priority > 100	1520:7:43357:43370	76258	0	True				
ANR	80394	RelationalExpression	priority > 100		76258	0		>			
ANR	80395	Identifier	priority		76258	0					
ANR	80396	PrimaryExpression	100		76258	1					
ANR	80397	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1520:23:43373:43400	76258	1	True				
ANR	80398	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	80399	Callee	smart_str_appendc		76258	0					
ANR	80400	Identifier	smart_str_appendc		76258	0					
ANR	80401	ArgumentList	str		76258	1					
ANR	80402	Argument	str		76258	0					
ANR	80403	Identifier	str		76258	0					
ANR	80404	Argument	'('		76258	1					
ANR	80405	PrimaryExpression	'('		76258	0					
ANR	80406	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 100 , indent )"	1521:3:43405:43456	76258	335	True				
ANR	80407	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 100 , indent )"		76258	0					
ANR	80408	Callee	zend_ast_export_ex		76258	0					
ANR	80409	Identifier	zend_ast_export_ex		76258	0					
ANR	80410	ArgumentList	str		76258	1					
ANR	80411	Argument	str		76258	0					
ANR	80412	Identifier	str		76258	0					
ANR	80413	Argument	ast -> child [ 0 ]		76258	1					
ANR	80414	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80415	PtrMemberAccess	ast -> child		76258	0					
ANR	80416	Identifier	ast		76258	0					
ANR	80417	Identifier	child		76258	1					
ANR	80418	PrimaryExpression	0		76258	1					
ANR	80419	Argument	100		76258	2					
ANR	80420	PrimaryExpression	100		76258	0					
ANR	80421	Argument	indent		76258	3					
ANR	80422	Identifier	indent		76258	0					
ANR	80423	IfStatement	if ( ast -> child [ 1 ] )		76258	336					
ANR	80424	Condition	ast -> child [ 1 ]	1522:7:43465:43477	76258	0	True				
ANR	80425	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80426	PtrMemberAccess	ast -> child		76258	0					
ANR	80427	Identifier	ast		76258	0					
ANR	80428	Identifier	child		76258	1					
ANR	80429	PrimaryExpression	1		76258	1					
ANR	80430	CompoundStatement		555:22:18774:18774	76258	1					
ANR	80431	ExpressionStatement	"smart_str_appends ( str , "" ? "" )"	1523:4:43486:43515	76258	0	True				
ANR	80432	CallExpression	"smart_str_appends ( str , "" ? "" )"		76258	0					
ANR	80433	Callee	smart_str_appends		76258	0					
ANR	80434	Identifier	smart_str_appends		76258	0					
ANR	80435	ArgumentList	str		76258	1					
ANR	80436	Argument	str		76258	0					
ANR	80437	Identifier	str		76258	0					
ANR	80438	Argument	""" ? """		76258	1					
ANR	80439	PrimaryExpression	""" ? """		76258	0					
ANR	80440	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 101 , indent )"	1524:4:43521:43572	76258	1	True				
ANR	80441	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 101 , indent )"		76258	0					
ANR	80442	Callee	zend_ast_export_ex		76258	0					
ANR	80443	Identifier	zend_ast_export_ex		76258	0					
ANR	80444	ArgumentList	str		76258	1					
ANR	80445	Argument	str		76258	0					
ANR	80446	Identifier	str		76258	0					
ANR	80447	Argument	ast -> child [ 1 ]		76258	1					
ANR	80448	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80449	PtrMemberAccess	ast -> child		76258	0					
ANR	80450	Identifier	ast		76258	0					
ANR	80451	Identifier	child		76258	1					
ANR	80452	PrimaryExpression	1		76258	1					
ANR	80453	Argument	101		76258	2					
ANR	80454	PrimaryExpression	101		76258	0					
ANR	80455	Argument	indent		76258	3					
ANR	80456	Identifier	indent		76258	0					
ANR	80457	ExpressionStatement	"smart_str_appends ( str , "" : "" )"	1525:4:43578:43607	76258	2	True				
ANR	80458	CallExpression	"smart_str_appends ( str , "" : "" )"		76258	0					
ANR	80459	Callee	smart_str_appends		76258	0					
ANR	80460	Identifier	smart_str_appends		76258	0					
ANR	80461	ArgumentList	str		76258	1					
ANR	80462	Argument	str		76258	0					
ANR	80463	Identifier	str		76258	0					
ANR	80464	Argument	""" : """		76258	1					
ANR	80465	PrimaryExpression	""" : """		76258	0					
ANR	80466	ElseStatement	else		76258	0					
ANR	80467	CompoundStatement		559:10:18913:18913	76258	0					
ANR	80468	ExpressionStatement	"smart_str_appends ( str , "" ?: "" )"	1527:4:43625:43655	76258	0	True				
ANR	80469	CallExpression	"smart_str_appends ( str , "" ?: "" )"		76258	0					
ANR	80470	Callee	smart_str_appends		76258	0					
ANR	80471	Identifier	smart_str_appends		76258	0					
ANR	80472	ArgumentList	str		76258	1					
ANR	80473	Argument	str		76258	0					
ANR	80474	Identifier	str		76258	0					
ANR	80475	Argument	""" ?: """		76258	1					
ANR	80476	PrimaryExpression	""" ?: """		76258	0					
ANR	80477	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 101 , indent )"	1529:3:43665:43716	76258	337	True				
ANR	80478	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 101 , indent )"		76258	0					
ANR	80479	Callee	zend_ast_export_ex		76258	0					
ANR	80480	Identifier	zend_ast_export_ex		76258	0					
ANR	80481	ArgumentList	str		76258	1					
ANR	80482	Argument	str		76258	0					
ANR	80483	Identifier	str		76258	0					
ANR	80484	Argument	ast -> child [ 2 ]		76258	1					
ANR	80485	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80486	PtrMemberAccess	ast -> child		76258	0					
ANR	80487	Identifier	ast		76258	0					
ANR	80488	Identifier	child		76258	1					
ANR	80489	PrimaryExpression	2		76258	1					
ANR	80490	Argument	101		76258	2					
ANR	80491	PrimaryExpression	101		76258	0					
ANR	80492	Argument	indent		76258	3					
ANR	80493	Identifier	indent		76258	0					
ANR	80494	IfStatement	if ( priority > 100 )		76258	338					
ANR	80495	Condition	priority > 100	1530:7:43725:43738	76258	0	True				
ANR	80496	RelationalExpression	priority > 100		76258	0		>			
ANR	80497	Identifier	priority		76258	0					
ANR	80498	PrimaryExpression	100		76258	1					
ANR	80499	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1530:23:43741:43768	76258	1	True				
ANR	80500	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	80501	Callee	smart_str_appendc		76258	0					
ANR	80502	Identifier	smart_str_appendc		76258	0					
ANR	80503	ArgumentList	str		76258	1					
ANR	80504	Argument	str		76258	0					
ANR	80505	Identifier	str		76258	0					
ANR	80506	Argument	')'		76258	1					
ANR	80507	PrimaryExpression	')'		76258	0					
ANR	80508	BreakStatement	break ;	1531:3:43773:43778	76258	339	True				
ANR	80509	Label	case ZEND_AST_TRY :	1533:2:43783:43800	76258	340	True				
ANR	80510	Identifier	ZEND_AST_TRY		76258	0					
ANR	80511	ExpressionStatement	"smart_str_appends ( str , ""try {\\n"" )"	1534:3:43805:43838	76258	341	True				
ANR	80512	CallExpression	"smart_str_appends ( str , ""try {\\n"" )"		76258	0					
ANR	80513	Callee	smart_str_appends		76258	0					
ANR	80514	Identifier	smart_str_appends		76258	0					
ANR	80515	ArgumentList	str		76258	1					
ANR	80516	Argument	str		76258	0					
ANR	80517	Identifier	str		76258	0					
ANR	80518	Argument	"""try {\\n"""		76258	1					
ANR	80519	PrimaryExpression	"""try {\\n"""		76258	0					
ANR	80520	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"	1535:3:43843:43895	76258	342	True				
ANR	80521	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"		76258	0					
ANR	80522	Callee	zend_ast_export_stmt		76258	0					
ANR	80523	Identifier	zend_ast_export_stmt		76258	0					
ANR	80524	ArgumentList	str		76258	1					
ANR	80525	Argument	str		76258	0					
ANR	80526	Identifier	str		76258	0					
ANR	80527	Argument	ast -> child [ 0 ]		76258	1					
ANR	80528	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80529	PtrMemberAccess	ast -> child		76258	0					
ANR	80530	Identifier	ast		76258	0					
ANR	80531	Identifier	child		76258	1					
ANR	80532	PrimaryExpression	0		76258	1					
ANR	80533	Argument	indent + 1		76258	2					
ANR	80534	AdditiveExpression	indent + 1		76258	0		+			
ANR	80535	Identifier	indent		76258	0					
ANR	80536	PrimaryExpression	1		76258	1					
ANR	80537	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1536:3:43900:43935	76258	343	True				
ANR	80538	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	80539	Callee	zend_ast_export_indent		76258	0					
ANR	80540	Identifier	zend_ast_export_indent		76258	0					
ANR	80541	ArgumentList	str		76258	1					
ANR	80542	Argument	str		76258	0					
ANR	80543	Identifier	str		76258	0					
ANR	80544	Argument	indent		76258	1					
ANR	80545	Identifier	indent		76258	0					
ANR	80546	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1537:3:43940:43989	76258	344	True				
ANR	80547	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	80548	Callee	zend_ast_export_ex		76258	0					
ANR	80549	Identifier	zend_ast_export_ex		76258	0					
ANR	80550	ArgumentList	str		76258	1					
ANR	80551	Argument	str		76258	0					
ANR	80552	Identifier	str		76258	0					
ANR	80553	Argument	ast -> child [ 1 ]		76258	1					
ANR	80554	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80555	PtrMemberAccess	ast -> child		76258	0					
ANR	80556	Identifier	ast		76258	0					
ANR	80557	Identifier	child		76258	1					
ANR	80558	PrimaryExpression	1		76258	1					
ANR	80559	Argument	0		76258	2					
ANR	80560	PrimaryExpression	0		76258	0					
ANR	80561	Argument	indent		76258	3					
ANR	80562	Identifier	indent		76258	0					
ANR	80563	IfStatement	if ( ast -> child [ 2 ] )		76258	345					
ANR	80564	Condition	ast -> child [ 2 ]	1538:7:43998:44010	76258	0	True				
ANR	80565	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80566	PtrMemberAccess	ast -> child		76258	0					
ANR	80567	Identifier	ast		76258	0					
ANR	80568	Identifier	child		76258	1					
ANR	80569	PrimaryExpression	2		76258	1					
ANR	80570	CompoundStatement		571:22:19307:19307	76258	1					
ANR	80571	ExpressionStatement	"smart_str_appends ( str , ""} finally {\\n"" )"	1539:4:44019:44058	76258	0	True				
ANR	80572	CallExpression	"smart_str_appends ( str , ""} finally {\\n"" )"		76258	0					
ANR	80573	Callee	smart_str_appends		76258	0					
ANR	80574	Identifier	smart_str_appends		76258	0					
ANR	80575	ArgumentList	str		76258	1					
ANR	80576	Argument	str		76258	0					
ANR	80577	Identifier	str		76258	0					
ANR	80578	Argument	"""} finally {\\n"""		76258	1					
ANR	80579	PrimaryExpression	"""} finally {\\n"""		76258	0					
ANR	80580	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"	1540:4:44064:44116	76258	1	True				
ANR	80581	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"		76258	0					
ANR	80582	Callee	zend_ast_export_stmt		76258	0					
ANR	80583	Identifier	zend_ast_export_stmt		76258	0					
ANR	80584	ArgumentList	str		76258	1					
ANR	80585	Argument	str		76258	0					
ANR	80586	Identifier	str		76258	0					
ANR	80587	Argument	ast -> child [ 2 ]		76258	1					
ANR	80588	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80589	PtrMemberAccess	ast -> child		76258	0					
ANR	80590	Identifier	ast		76258	0					
ANR	80591	Identifier	child		76258	1					
ANR	80592	PrimaryExpression	2		76258	1					
ANR	80593	Argument	indent + 1		76258	2					
ANR	80594	AdditiveExpression	indent + 1		76258	0		+			
ANR	80595	Identifier	indent		76258	0					
ANR	80596	PrimaryExpression	1		76258	1					
ANR	80597	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1541:4:44122:44157	76258	2	True				
ANR	80598	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	80599	Callee	zend_ast_export_indent		76258	0					
ANR	80600	Identifier	zend_ast_export_indent		76258	0					
ANR	80601	ArgumentList	str		76258	1					
ANR	80602	Argument	str		76258	0					
ANR	80603	Identifier	str		76258	0					
ANR	80604	Argument	indent		76258	1					
ANR	80605	Identifier	indent		76258	0					
ANR	80606	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1543:3:44167:44194	76258	346	True				
ANR	80607	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	80608	Callee	smart_str_appendc		76258	0					
ANR	80609	Identifier	smart_str_appendc		76258	0					
ANR	80610	ArgumentList	str		76258	1					
ANR	80611	Argument	str		76258	0					
ANR	80612	Identifier	str		76258	0					
ANR	80613	Argument	'}'		76258	1					
ANR	80614	PrimaryExpression	'}'		76258	0					
ANR	80615	BreakStatement	break ;	1544:3:44199:44204	76258	347	True				
ANR	80616	Label	case ZEND_AST_CATCH :	1545:2:44208:44227	76258	348	True				
ANR	80617	Identifier	ZEND_AST_CATCH		76258	0					
ANR	80618	ExpressionStatement	"smart_str_appends ( str , ""} catch ("" )"	1546:3:44232:44267	76258	349	True				
ANR	80619	CallExpression	"smart_str_appends ( str , ""} catch ("" )"		76258	0					
ANR	80620	Callee	smart_str_appends		76258	0					
ANR	80621	Identifier	smart_str_appends		76258	0					
ANR	80622	ArgumentList	str		76258	1					
ANR	80623	Argument	str		76258	0					
ANR	80624	Identifier	str		76258	0					
ANR	80625	Argument	"""} catch ("""		76258	1					
ANR	80626	PrimaryExpression	"""} catch ("""		76258	0					
ANR	80627	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1547:3:44272:44326	76258	350	True				
ANR	80628	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80629	Callee	zend_ast_export_ns_name		76258	0					
ANR	80630	Identifier	zend_ast_export_ns_name		76258	0					
ANR	80631	ArgumentList	str		76258	1					
ANR	80632	Argument	str		76258	0					
ANR	80633	Identifier	str		76258	0					
ANR	80634	Argument	ast -> child [ 0 ]		76258	1					
ANR	80635	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80636	PtrMemberAccess	ast -> child		76258	0					
ANR	80637	Identifier	ast		76258	0					
ANR	80638	Identifier	child		76258	1					
ANR	80639	PrimaryExpression	0		76258	1					
ANR	80640	Argument	0		76258	2					
ANR	80641	PrimaryExpression	0		76258	0					
ANR	80642	Argument	indent		76258	3					
ANR	80643	Identifier	indent		76258	0					
ANR	80644	ExpressionStatement	"smart_str_appends ( str , "" $"" )"	1548:3:44331:44359	76258	351	True				
ANR	80645	CallExpression	"smart_str_appends ( str , "" $"" )"		76258	0					
ANR	80646	Callee	smart_str_appends		76258	0					
ANR	80647	Identifier	smart_str_appends		76258	0					
ANR	80648	ArgumentList	str		76258	1					
ANR	80649	Argument	str		76258	0					
ANR	80650	Identifier	str		76258	0					
ANR	80651	Argument	""" $"""		76258	1					
ANR	80652	PrimaryExpression	""" $"""		76258	0					
ANR	80653	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1549:3:44364:44414	76258	352	True				
ANR	80654	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	80655	Callee	zend_ast_export_var		76258	0					
ANR	80656	Identifier	zend_ast_export_var		76258	0					
ANR	80657	ArgumentList	str		76258	1					
ANR	80658	Argument	str		76258	0					
ANR	80659	Identifier	str		76258	0					
ANR	80660	Argument	ast -> child [ 1 ]		76258	1					
ANR	80661	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80662	PtrMemberAccess	ast -> child		76258	0					
ANR	80663	Identifier	ast		76258	0					
ANR	80664	Identifier	child		76258	1					
ANR	80665	PrimaryExpression	1		76258	1					
ANR	80666	Argument	0		76258	2					
ANR	80667	PrimaryExpression	0		76258	0					
ANR	80668	Argument	indent		76258	3					
ANR	80669	Identifier	indent		76258	0					
ANR	80670	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1550:3:44419:44450	76258	353	True				
ANR	80671	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		76258	0					
ANR	80672	Callee	smart_str_appends		76258	0					
ANR	80673	Identifier	smart_str_appends		76258	0					
ANR	80674	ArgumentList	str		76258	1					
ANR	80675	Argument	str		76258	0					
ANR	80676	Identifier	str		76258	0					
ANR	80677	Argument	""") {\\n"""		76258	1					
ANR	80678	PrimaryExpression	""") {\\n"""		76258	0					
ANR	80679	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"	1551:3:44455:44507	76258	354	True				
ANR	80680	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"		76258	0					
ANR	80681	Callee	zend_ast_export_stmt		76258	0					
ANR	80682	Identifier	zend_ast_export_stmt		76258	0					
ANR	80683	ArgumentList	str		76258	1					
ANR	80684	Argument	str		76258	0					
ANR	80685	Identifier	str		76258	0					
ANR	80686	Argument	ast -> child [ 2 ]		76258	1					
ANR	80687	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80688	PtrMemberAccess	ast -> child		76258	0					
ANR	80689	Identifier	ast		76258	0					
ANR	80690	Identifier	child		76258	1					
ANR	80691	PrimaryExpression	2		76258	1					
ANR	80692	Argument	indent + 1		76258	2					
ANR	80693	AdditiveExpression	indent + 1		76258	0		+			
ANR	80694	Identifier	indent		76258	0					
ANR	80695	PrimaryExpression	1		76258	1					
ANR	80696	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1552:3:44512:44547	76258	355	True				
ANR	80697	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	80698	Callee	zend_ast_export_indent		76258	0					
ANR	80699	Identifier	zend_ast_export_indent		76258	0					
ANR	80700	ArgumentList	str		76258	1					
ANR	80701	Argument	str		76258	0					
ANR	80702	Identifier	str		76258	0					
ANR	80703	Argument	indent		76258	1					
ANR	80704	Identifier	indent		76258	0					
ANR	80705	BreakStatement	break ;	1553:3:44552:44557	76258	356	True				
ANR	80706	Label	case ZEND_AST_PARAM :	1554:2:44561:44580	76258	357	True				
ANR	80707	Identifier	ZEND_AST_PARAM		76258	0					
ANR	80708	IfStatement	if ( ast -> child [ 0 ] )		76258	358					
ANR	80709	Condition	ast -> child [ 0 ]	1555:7:44589:44601	76258	0	True				
ANR	80710	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80711	PtrMemberAccess	ast -> child		76258	0					
ANR	80712	Identifier	ast		76258	0					
ANR	80713	Identifier	child		76258	1					
ANR	80714	PrimaryExpression	0		76258	1					
ANR	80715	CompoundStatement		588:22:19898:19898	76258	1					
ANR	80716	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1556:4:44610:44664	76258	0	True				
ANR	80717	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80718	Callee	zend_ast_export_ns_name		76258	0					
ANR	80719	Identifier	zend_ast_export_ns_name		76258	0					
ANR	80720	ArgumentList	str		76258	1					
ANR	80721	Argument	str		76258	0					
ANR	80722	Identifier	str		76258	0					
ANR	80723	Argument	ast -> child [ 0 ]		76258	1					
ANR	80724	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80725	PtrMemberAccess	ast -> child		76258	0					
ANR	80726	Identifier	ast		76258	0					
ANR	80727	Identifier	child		76258	1					
ANR	80728	PrimaryExpression	0		76258	1					
ANR	80729	Argument	0		76258	2					
ANR	80730	PrimaryExpression	0		76258	0					
ANR	80731	Argument	indent		76258	3					
ANR	80732	Identifier	indent		76258	0					
ANR	80733	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1557:4:44670:44697	76258	1	True				
ANR	80734	CallExpression	"smart_str_appendc ( str , ' ' )"		76258	0					
ANR	80735	Callee	smart_str_appendc		76258	0					
ANR	80736	Identifier	smart_str_appendc		76258	0					
ANR	80737	ArgumentList	str		76258	1					
ANR	80738	Argument	str		76258	0					
ANR	80739	Identifier	str		76258	0					
ANR	80740	Argument	' '		76258	1					
ANR	80741	PrimaryExpression	' '		76258	0					
ANR	80742	IfStatement	if ( ast -> attr & ZEND_PARAM_REF )		76258	359					
ANR	80743	Condition	ast -> attr & ZEND_PARAM_REF	1559:7:44711:44736	76258	0	True				
ANR	80744	BitAndExpression	ast -> attr & ZEND_PARAM_REF		76258	0		&			
ANR	80745	PtrMemberAccess	ast -> attr		76258	0					
ANR	80746	Identifier	ast		76258	0					
ANR	80747	Identifier	attr		76258	1					
ANR	80748	Identifier	ZEND_PARAM_REF		76258	1					
ANR	80749	CompoundStatement		592:35:20033:20033	76258	1					
ANR	80750	ExpressionStatement	"smart_str_appendc ( str , '&' )"	1560:4:44745:44772	76258	0	True				
ANR	80751	CallExpression	"smart_str_appendc ( str , '&' )"		76258	0					
ANR	80752	Callee	smart_str_appendc		76258	0					
ANR	80753	Identifier	smart_str_appendc		76258	0					
ANR	80754	ArgumentList	str		76258	1					
ANR	80755	Argument	str		76258	0					
ANR	80756	Identifier	str		76258	0					
ANR	80757	Argument	'&'		76258	1					
ANR	80758	PrimaryExpression	'&'		76258	0					
ANR	80759	IfStatement	if ( ast -> attr & ZEND_PARAM_VARIADIC )		76258	360					
ANR	80760	Condition	ast -> attr & ZEND_PARAM_VARIADIC	1562:7:44786:44816	76258	0	True				
ANR	80761	BitAndExpression	ast -> attr & ZEND_PARAM_VARIADIC		76258	0		&			
ANR	80762	PtrMemberAccess	ast -> attr		76258	0					
ANR	80763	Identifier	ast		76258	0					
ANR	80764	Identifier	attr		76258	1					
ANR	80765	Identifier	ZEND_PARAM_VARIADIC		76258	1					
ANR	80766	CompoundStatement		595:40:20113:20113	76258	1					
ANR	80767	ExpressionStatement	"smart_str_appends ( str , ""..."" )"	1563:4:44825:44854	76258	0	True				
ANR	80768	CallExpression	"smart_str_appends ( str , ""..."" )"		76258	0					
ANR	80769	Callee	smart_str_appends		76258	0					
ANR	80770	Identifier	smart_str_appends		76258	0					
ANR	80771	ArgumentList	str		76258	1					
ANR	80772	Argument	str		76258	0					
ANR	80773	Identifier	str		76258	0					
ANR	80774	Argument	"""..."""		76258	1					
ANR	80775	PrimaryExpression	"""..."""		76258	0					
ANR	80776	ExpressionStatement	"smart_str_appendc ( str , '$' )"	1565:3:44864:44891	76258	361	True				
ANR	80777	CallExpression	"smart_str_appendc ( str , '$' )"		76258	0					
ANR	80778	Callee	smart_str_appendc		76258	0					
ANR	80779	Identifier	smart_str_appendc		76258	0					
ANR	80780	ArgumentList	str		76258	1					
ANR	80781	Argument	str		76258	0					
ANR	80782	Identifier	str		76258	0					
ANR	80783	Argument	'$'		76258	1					
ANR	80784	PrimaryExpression	'$'		76258	0					
ANR	80785	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1566:3:44896:44947	76258	362	True				
ANR	80786	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	80787	Callee	zend_ast_export_name		76258	0					
ANR	80788	Identifier	zend_ast_export_name		76258	0					
ANR	80789	ArgumentList	str		76258	1					
ANR	80790	Argument	str		76258	0					
ANR	80791	Identifier	str		76258	0					
ANR	80792	Argument	ast -> child [ 1 ]		76258	1					
ANR	80793	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80794	PtrMemberAccess	ast -> child		76258	0					
ANR	80795	Identifier	ast		76258	0					
ANR	80796	Identifier	child		76258	1					
ANR	80797	PrimaryExpression	1		76258	1					
ANR	80798	Argument	0		76258	2					
ANR	80799	PrimaryExpression	0		76258	0					
ANR	80800	Argument	indent		76258	3					
ANR	80801	Identifier	indent		76258	0					
ANR	80802	ExpressionStatement	APPEND_DEFAULT_VALUE ( 2 )	1567:3:44952:44975	76258	363	True				
ANR	80803	CallExpression	APPEND_DEFAULT_VALUE ( 2 )		76258	0					
ANR	80804	Callee	APPEND_DEFAULT_VALUE		76258	0					
ANR	80805	Identifier	APPEND_DEFAULT_VALUE		76258	0					
ANR	80806	ArgumentList	2		76258	1					
ANR	80807	Argument	2		76258	0					
ANR	80808	PrimaryExpression	2		76258	0					
ANR	80809	Label	case ZEND_AST_FOR :	1570:2:45002:45019	76258	364	True				
ANR	80810	Identifier	ZEND_AST_FOR		76258	0					
ANR	80811	ExpressionStatement	"smart_str_appends ( str , ""for ("" )"	1571:3:45024:45055	76258	365	True				
ANR	80812	CallExpression	"smart_str_appends ( str , ""for ("" )"		76258	0					
ANR	80813	Callee	smart_str_appends		76258	0					
ANR	80814	Identifier	smart_str_appends		76258	0					
ANR	80815	ArgumentList	str		76258	1					
ANR	80816	Argument	str		76258	0					
ANR	80817	Identifier	str		76258	0					
ANR	80818	Argument	"""for ("""		76258	1					
ANR	80819	PrimaryExpression	"""for ("""		76258	0					
ANR	80820	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1572:3:45060:45109	76258	366	True				
ANR	80821	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80822	Callee	zend_ast_export_ex		76258	0					
ANR	80823	Identifier	zend_ast_export_ex		76258	0					
ANR	80824	ArgumentList	str		76258	1					
ANR	80825	Argument	str		76258	0					
ANR	80826	Identifier	str		76258	0					
ANR	80827	Argument	ast -> child [ 0 ]		76258	1					
ANR	80828	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80829	PtrMemberAccess	ast -> child		76258	0					
ANR	80830	Identifier	ast		76258	0					
ANR	80831	Identifier	child		76258	1					
ANR	80832	PrimaryExpression	0		76258	1					
ANR	80833	Argument	0		76258	2					
ANR	80834	PrimaryExpression	0		76258	0					
ANR	80835	Argument	indent		76258	3					
ANR	80836	Identifier	indent		76258	0					
ANR	80837	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1573:3:45114:45141	76258	367	True				
ANR	80838	CallExpression	"smart_str_appendc ( str , ';' )"		76258	0					
ANR	80839	Callee	smart_str_appendc		76258	0					
ANR	80840	Identifier	smart_str_appendc		76258	0					
ANR	80841	ArgumentList	str		76258	1					
ANR	80842	Argument	str		76258	0					
ANR	80843	Identifier	str		76258	0					
ANR	80844	Argument	';'		76258	1					
ANR	80845	PrimaryExpression	';'		76258	0					
ANR	80846	IfStatement	if ( ast -> child [ 1 ] )		76258	368					
ANR	80847	Condition	ast -> child [ 1 ]	1574:7:45150:45162	76258	0	True				
ANR	80848	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80849	PtrMemberAccess	ast -> child		76258	0					
ANR	80850	Identifier	ast		76258	0					
ANR	80851	Identifier	child		76258	1					
ANR	80852	PrimaryExpression	1		76258	1					
ANR	80853	CompoundStatement		607:22:20459:20459	76258	1					
ANR	80854	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1575:4:45171:45198	76258	0	True				
ANR	80855	CallExpression	"smart_str_appendc ( str , ' ' )"		76258	0					
ANR	80856	Callee	smart_str_appendc		76258	0					
ANR	80857	Identifier	smart_str_appendc		76258	0					
ANR	80858	ArgumentList	str		76258	1					
ANR	80859	Argument	str		76258	0					
ANR	80860	Identifier	str		76258	0					
ANR	80861	Argument	' '		76258	1					
ANR	80862	PrimaryExpression	' '		76258	0					
ANR	80863	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1576:4:45204:45253	76258	1	True				
ANR	80864	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	80865	Callee	zend_ast_export_ex		76258	0					
ANR	80866	Identifier	zend_ast_export_ex		76258	0					
ANR	80867	ArgumentList	str		76258	1					
ANR	80868	Argument	str		76258	0					
ANR	80869	Identifier	str		76258	0					
ANR	80870	Argument	ast -> child [ 1 ]		76258	1					
ANR	80871	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	80872	PtrMemberAccess	ast -> child		76258	0					
ANR	80873	Identifier	ast		76258	0					
ANR	80874	Identifier	child		76258	1					
ANR	80875	PrimaryExpression	1		76258	1					
ANR	80876	Argument	0		76258	2					
ANR	80877	PrimaryExpression	0		76258	0					
ANR	80878	Argument	indent		76258	3					
ANR	80879	Identifier	indent		76258	0					
ANR	80880	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1578:3:45263:45290	76258	369	True				
ANR	80881	CallExpression	"smart_str_appendc ( str , ';' )"		76258	0					
ANR	80882	Callee	smart_str_appendc		76258	0					
ANR	80883	Identifier	smart_str_appendc		76258	0					
ANR	80884	ArgumentList	str		76258	1					
ANR	80885	Argument	str		76258	0					
ANR	80886	Identifier	str		76258	0					
ANR	80887	Argument	';'		76258	1					
ANR	80888	PrimaryExpression	';'		76258	0					
ANR	80889	IfStatement	if ( ast -> child [ 2 ] )		76258	370					
ANR	80890	Condition	ast -> child [ 2 ]	1579:7:45299:45311	76258	0	True				
ANR	80891	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80892	PtrMemberAccess	ast -> child		76258	0					
ANR	80893	Identifier	ast		76258	0					
ANR	80894	Identifier	child		76258	1					
ANR	80895	PrimaryExpression	2		76258	1					
ANR	80896	CompoundStatement		612:22:20608:20608	76258	1					
ANR	80897	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1580:4:45320:45347	76258	0	True				
ANR	80898	CallExpression	"smart_str_appendc ( str , ' ' )"		76258	0					
ANR	80899	Callee	smart_str_appendc		76258	0					
ANR	80900	Identifier	smart_str_appendc		76258	0					
ANR	80901	ArgumentList	str		76258	1					
ANR	80902	Argument	str		76258	0					
ANR	80903	Identifier	str		76258	0					
ANR	80904	Argument	' '		76258	1					
ANR	80905	PrimaryExpression	' '		76258	0					
ANR	80906	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1581:4:45353:45402	76258	1	True				
ANR	80907	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		76258	0					
ANR	80908	Callee	zend_ast_export_ex		76258	0					
ANR	80909	Identifier	zend_ast_export_ex		76258	0					
ANR	80910	ArgumentList	str		76258	1					
ANR	80911	Argument	str		76258	0					
ANR	80912	Identifier	str		76258	0					
ANR	80913	Argument	ast -> child [ 2 ]		76258	1					
ANR	80914	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	80915	PtrMemberAccess	ast -> child		76258	0					
ANR	80916	Identifier	ast		76258	0					
ANR	80917	Identifier	child		76258	1					
ANR	80918	PrimaryExpression	2		76258	1					
ANR	80919	Argument	0		76258	2					
ANR	80920	PrimaryExpression	0		76258	0					
ANR	80921	Argument	indent		76258	3					
ANR	80922	Identifier	indent		76258	0					
ANR	80923	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1583:3:45412:45443	76258	371	True				
ANR	80924	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		76258	0					
ANR	80925	Callee	smart_str_appends		76258	0					
ANR	80926	Identifier	smart_str_appends		76258	0					
ANR	80927	ArgumentList	str		76258	1					
ANR	80928	Argument	str		76258	0					
ANR	80929	Identifier	str		76258	0					
ANR	80930	Argument	""") {\\n"""		76258	1					
ANR	80931	PrimaryExpression	""") {\\n"""		76258	0					
ANR	80932	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"	1584:3:45448:45500	76258	372	True				
ANR	80933	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"		76258	0					
ANR	80934	Callee	zend_ast_export_stmt		76258	0					
ANR	80935	Identifier	zend_ast_export_stmt		76258	0					
ANR	80936	ArgumentList	str		76258	1					
ANR	80937	Argument	str		76258	0					
ANR	80938	Identifier	str		76258	0					
ANR	80939	Argument	ast -> child [ 3 ]		76258	1					
ANR	80940	ArrayIndexing	ast -> child [ 3 ]		76258	0					
ANR	80941	PtrMemberAccess	ast -> child		76258	0					
ANR	80942	Identifier	ast		76258	0					
ANR	80943	Identifier	child		76258	1					
ANR	80944	PrimaryExpression	3		76258	1					
ANR	80945	Argument	indent + 1		76258	2					
ANR	80946	AdditiveExpression	indent + 1		76258	0		+			
ANR	80947	Identifier	indent		76258	0					
ANR	80948	PrimaryExpression	1		76258	1					
ANR	80949	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1585:3:45505:45540	76258	373	True				
ANR	80950	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	80951	Callee	zend_ast_export_indent		76258	0					
ANR	80952	Identifier	zend_ast_export_indent		76258	0					
ANR	80953	ArgumentList	str		76258	1					
ANR	80954	Argument	str		76258	0					
ANR	80955	Identifier	str		76258	0					
ANR	80956	Argument	indent		76258	1					
ANR	80957	Identifier	indent		76258	0					
ANR	80958	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1586:3:45545:45572	76258	374	True				
ANR	80959	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	80960	Callee	smart_str_appendc		76258	0					
ANR	80961	Identifier	smart_str_appendc		76258	0					
ANR	80962	ArgumentList	str		76258	1					
ANR	80963	Argument	str		76258	0					
ANR	80964	Identifier	str		76258	0					
ANR	80965	Argument	'}'		76258	1					
ANR	80966	PrimaryExpression	'}'		76258	0					
ANR	80967	BreakStatement	break ;	1587:3:45577:45582	76258	375	True				
ANR	80968	Label	case ZEND_AST_FOREACH :	1588:2:45586:45607	76258	376	True				
ANR	80969	Identifier	ZEND_AST_FOREACH		76258	0					
ANR	80970	ExpressionStatement	"smart_str_appends ( str , ""foreach ("" )"	1589:3:45612:45647	76258	377	True				
ANR	80971	CallExpression	"smart_str_appends ( str , ""foreach ("" )"		76258	0					
ANR	80972	Callee	smart_str_appends		76258	0					
ANR	80973	Identifier	smart_str_appends		76258	0					
ANR	80974	ArgumentList	str		76258	1					
ANR	80975	Argument	str		76258	0					
ANR	80976	Identifier	str		76258	0					
ANR	80977	Argument	"""foreach ("""		76258	1					
ANR	80978	PrimaryExpression	"""foreach ("""		76258	0					
ANR	80979	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1590:3:45652:45701	76258	378	True				
ANR	80980	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	80981	Callee	zend_ast_export_ex		76258	0					
ANR	80982	Identifier	zend_ast_export_ex		76258	0					
ANR	80983	ArgumentList	str		76258	1					
ANR	80984	Argument	str		76258	0					
ANR	80985	Identifier	str		76258	0					
ANR	80986	Argument	ast -> child [ 0 ]		76258	1					
ANR	80987	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	80988	PtrMemberAccess	ast -> child		76258	0					
ANR	80989	Identifier	ast		76258	0					
ANR	80990	Identifier	child		76258	1					
ANR	80991	PrimaryExpression	0		76258	1					
ANR	80992	Argument	0		76258	2					
ANR	80993	PrimaryExpression	0		76258	0					
ANR	80994	Argument	indent		76258	3					
ANR	80995	Identifier	indent		76258	0					
ANR	80996	ExpressionStatement	"smart_str_appends ( str , "" as "" )"	1591:3:45706:45736	76258	379	True				
ANR	80997	CallExpression	"smart_str_appends ( str , "" as "" )"		76258	0					
ANR	80998	Callee	smart_str_appends		76258	0					
ANR	80999	Identifier	smart_str_appends		76258	0					
ANR	81000	ArgumentList	str		76258	1					
ANR	81001	Argument	str		76258	0					
ANR	81002	Identifier	str		76258	0					
ANR	81003	Argument	""" as """		76258	1					
ANR	81004	PrimaryExpression	""" as """		76258	0					
ANR	81005	IfStatement	if ( ast -> child [ 2 ] )		76258	380					
ANR	81006	Condition	ast -> child [ 2 ]	1592:7:45745:45757	76258	0	True				
ANR	81007	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	81008	PtrMemberAccess	ast -> child		76258	0					
ANR	81009	Identifier	ast		76258	0					
ANR	81010	Identifier	child		76258	1					
ANR	81011	PrimaryExpression	2		76258	1					
ANR	81012	CompoundStatement		625:22:21054:21054	76258	1					
ANR	81013	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1593:4:45766:45815	76258	0	True				
ANR	81014	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		76258	0					
ANR	81015	Callee	zend_ast_export_ex		76258	0					
ANR	81016	Identifier	zend_ast_export_ex		76258	0					
ANR	81017	ArgumentList	str		76258	1					
ANR	81018	Argument	str		76258	0					
ANR	81019	Identifier	str		76258	0					
ANR	81020	Argument	ast -> child [ 2 ]		76258	1					
ANR	81021	ArrayIndexing	ast -> child [ 2 ]		76258	0					
ANR	81022	PtrMemberAccess	ast -> child		76258	0					
ANR	81023	Identifier	ast		76258	0					
ANR	81024	Identifier	child		76258	1					
ANR	81025	PrimaryExpression	2		76258	1					
ANR	81026	Argument	0		76258	2					
ANR	81027	PrimaryExpression	0		76258	0					
ANR	81028	Argument	indent		76258	3					
ANR	81029	Identifier	indent		76258	0					
ANR	81030	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	1594:4:45821:45851	76258	1	True				
ANR	81031	CallExpression	"smart_str_appends ( str , "" => "" )"		76258	0					
ANR	81032	Callee	smart_str_appends		76258	0					
ANR	81033	Identifier	smart_str_appends		76258	0					
ANR	81034	ArgumentList	str		76258	1					
ANR	81035	Argument	str		76258	0					
ANR	81036	Identifier	str		76258	0					
ANR	81037	Argument	""" => """		76258	1					
ANR	81038	PrimaryExpression	""" => """		76258	0					
ANR	81039	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1596:3:45861:45910	76258	381	True				
ANR	81040	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		76258	0					
ANR	81041	Callee	zend_ast_export_ex		76258	0					
ANR	81042	Identifier	zend_ast_export_ex		76258	0					
ANR	81043	ArgumentList	str		76258	1					
ANR	81044	Argument	str		76258	0					
ANR	81045	Identifier	str		76258	0					
ANR	81046	Argument	ast -> child [ 1 ]		76258	1					
ANR	81047	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	81048	PtrMemberAccess	ast -> child		76258	0					
ANR	81049	Identifier	ast		76258	0					
ANR	81050	Identifier	child		76258	1					
ANR	81051	PrimaryExpression	1		76258	1					
ANR	81052	Argument	0		76258	2					
ANR	81053	PrimaryExpression	0		76258	0					
ANR	81054	Argument	indent		76258	3					
ANR	81055	Identifier	indent		76258	0					
ANR	81056	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1597:3:45915:45946	76258	382	True				
ANR	81057	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		76258	0					
ANR	81058	Callee	smart_str_appends		76258	0					
ANR	81059	Identifier	smart_str_appends		76258	0					
ANR	81060	ArgumentList	str		76258	1					
ANR	81061	Argument	str		76258	0					
ANR	81062	Identifier	str		76258	0					
ANR	81063	Argument	""") {\\n"""		76258	1					
ANR	81064	PrimaryExpression	""") {\\n"""		76258	0					
ANR	81065	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"	1598:3:45951:46003	76258	383	True				
ANR	81066	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"		76258	0					
ANR	81067	Callee	zend_ast_export_stmt		76258	0					
ANR	81068	Identifier	zend_ast_export_stmt		76258	0					
ANR	81069	ArgumentList	str		76258	1					
ANR	81070	Argument	str		76258	0					
ANR	81071	Identifier	str		76258	0					
ANR	81072	Argument	ast -> child [ 3 ]		76258	1					
ANR	81073	ArrayIndexing	ast -> child [ 3 ]		76258	0					
ANR	81074	PtrMemberAccess	ast -> child		76258	0					
ANR	81075	Identifier	ast		76258	0					
ANR	81076	Identifier	child		76258	1					
ANR	81077	PrimaryExpression	3		76258	1					
ANR	81078	Argument	indent + 1		76258	2					
ANR	81079	AdditiveExpression	indent + 1		76258	0		+			
ANR	81080	Identifier	indent		76258	0					
ANR	81081	PrimaryExpression	1		76258	1					
ANR	81082	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1599:3:46008:46043	76258	384	True				
ANR	81083	CallExpression	"zend_ast_export_indent ( str , indent )"		76258	0					
ANR	81084	Callee	zend_ast_export_indent		76258	0					
ANR	81085	Identifier	zend_ast_export_indent		76258	0					
ANR	81086	ArgumentList	str		76258	1					
ANR	81087	Argument	str		76258	0					
ANR	81088	Identifier	str		76258	0					
ANR	81089	Argument	indent		76258	1					
ANR	81090	Identifier	indent		76258	0					
ANR	81091	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1600:3:46048:46075	76258	385	True				
ANR	81092	CallExpression	"smart_str_appendc ( str , '}' )"		76258	0					
ANR	81093	Callee	smart_str_appendc		76258	0					
ANR	81094	Identifier	smart_str_appendc		76258	0					
ANR	81095	ArgumentList	str		76258	1					
ANR	81096	Argument	str		76258	0					
ANR	81097	Identifier	str		76258	0					
ANR	81098	Argument	'}'		76258	1					
ANR	81099	PrimaryExpression	'}'		76258	0					
ANR	81100	BreakStatement	break ;	1601:3:46080:46085	76258	386	True				
ANR	81101	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1602:2:46089:46116	76258	387	True				
ANR	81102	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		76258	0					
ANR	81103	Callee	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	81104	Identifier	EMPTY_SWITCH_DEFAULT_CASE		76258	0					
ANR	81105	ArgumentList			76258	1					
ANR	81106	ReturnStatement	return ;	1604:1:46122:46128	76258	6	True				
ANR	81107	Label	binary_op :	1606:0:46131:46140	76258	7	True				
ANR	81108	Identifier	binary_op		76258	0					
ANR	81109	IfStatement	if ( priority > p )		76258	8					
ANR	81110	Condition	priority > p	1607:5:46147:46158	76258	0	True				
ANR	81111	RelationalExpression	priority > p		76258	0		>			
ANR	81112	Identifier	priority		76258	0					
ANR	81113	Identifier	p		76258	1					
ANR	81114	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1607:19:46161:46188	76258	1	True				
ANR	81115	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	81116	Callee	smart_str_appendc		76258	0					
ANR	81117	Identifier	smart_str_appendc		76258	0					
ANR	81118	ArgumentList	str		76258	1					
ANR	81119	Argument	str		76258	0					
ANR	81120	Identifier	str		76258	0					
ANR	81121	Argument	'('		76258	1					
ANR	81122	PrimaryExpression	'('		76258	0					
ANR	81123	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"	1608:1:46191:46241	76258	9	True				
ANR	81124	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"		76258	0					
ANR	81125	Callee	zend_ast_export_ex		76258	0					
ANR	81126	Identifier	zend_ast_export_ex		76258	0					
ANR	81127	ArgumentList	str		76258	1					
ANR	81128	Argument	str		76258	0					
ANR	81129	Identifier	str		76258	0					
ANR	81130	Argument	ast -> child [ 0 ]		76258	1					
ANR	81131	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	81132	PtrMemberAccess	ast -> child		76258	0					
ANR	81133	Identifier	ast		76258	0					
ANR	81134	Identifier	child		76258	1					
ANR	81135	PrimaryExpression	0		76258	1					
ANR	81136	Argument	pl		76258	2					
ANR	81137	Identifier	pl		76258	0					
ANR	81138	Argument	indent		76258	3					
ANR	81139	Identifier	indent		76258	0					
ANR	81140	ExpressionStatement	"smart_str_appends ( str , op )"	1609:1:46244:46270	76258	10	True				
ANR	81141	CallExpression	"smart_str_appends ( str , op )"		76258	0					
ANR	81142	Callee	smart_str_appends		76258	0					
ANR	81143	Identifier	smart_str_appends		76258	0					
ANR	81144	ArgumentList	str		76258	1					
ANR	81145	Argument	str		76258	0					
ANR	81146	Identifier	str		76258	0					
ANR	81147	Argument	op		76258	1					
ANR	81148	Identifier	op		76258	0					
ANR	81149	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , pr , indent )"	1610:1:46273:46323	76258	11	True				
ANR	81150	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , pr , indent )"		76258	0					
ANR	81151	Callee	zend_ast_export_ex		76258	0					
ANR	81152	Identifier	zend_ast_export_ex		76258	0					
ANR	81153	ArgumentList	str		76258	1					
ANR	81154	Argument	str		76258	0					
ANR	81155	Identifier	str		76258	0					
ANR	81156	Argument	ast -> child [ 1 ]		76258	1					
ANR	81157	ArrayIndexing	ast -> child [ 1 ]		76258	0					
ANR	81158	PtrMemberAccess	ast -> child		76258	0					
ANR	81159	Identifier	ast		76258	0					
ANR	81160	Identifier	child		76258	1					
ANR	81161	PrimaryExpression	1		76258	1					
ANR	81162	Argument	pr		76258	2					
ANR	81163	Identifier	pr		76258	0					
ANR	81164	Argument	indent		76258	3					
ANR	81165	Identifier	indent		76258	0					
ANR	81166	IfStatement	if ( priority > p )		76258	12					
ANR	81167	Condition	priority > p	1611:5:46330:46341	76258	0	True				
ANR	81168	RelationalExpression	priority > p		76258	0		>			
ANR	81169	Identifier	priority		76258	0					
ANR	81170	Identifier	p		76258	1					
ANR	81171	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1611:19:46344:46371	76258	1	True				
ANR	81172	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	81173	Callee	smart_str_appendc		76258	0					
ANR	81174	Identifier	smart_str_appendc		76258	0					
ANR	81175	ArgumentList	str		76258	1					
ANR	81176	Argument	str		76258	0					
ANR	81177	Identifier	str		76258	0					
ANR	81178	Argument	')'		76258	1					
ANR	81179	PrimaryExpression	')'		76258	0					
ANR	81180	ReturnStatement	return ;	1612:1:46374:46380	76258	13	True				
ANR	81181	Label	prefix_op :	1614:0:46383:46392	76258	14	True				
ANR	81182	Identifier	prefix_op		76258	0					
ANR	81183	IfStatement	if ( priority > p )		76258	15					
ANR	81184	Condition	priority > p	1615:5:46399:46410	76258	0	True				
ANR	81185	RelationalExpression	priority > p		76258	0		>			
ANR	81186	Identifier	priority		76258	0					
ANR	81187	Identifier	p		76258	1					
ANR	81188	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1615:19:46413:46440	76258	1	True				
ANR	81189	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	81190	Callee	smart_str_appendc		76258	0					
ANR	81191	Identifier	smart_str_appendc		76258	0					
ANR	81192	ArgumentList	str		76258	1					
ANR	81193	Argument	str		76258	0					
ANR	81194	Identifier	str		76258	0					
ANR	81195	Argument	'('		76258	1					
ANR	81196	PrimaryExpression	'('		76258	0					
ANR	81197	ExpressionStatement	"smart_str_appends ( str , op )"	1616:1:46443:46469	76258	16	True				
ANR	81198	CallExpression	"smart_str_appends ( str , op )"		76258	0					
ANR	81199	Callee	smart_str_appends		76258	0					
ANR	81200	Identifier	smart_str_appends		76258	0					
ANR	81201	ArgumentList	str		76258	1					
ANR	81202	Argument	str		76258	0					
ANR	81203	Identifier	str		76258	0					
ANR	81204	Argument	op		76258	1					
ANR	81205	Identifier	op		76258	0					
ANR	81206	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"	1617:1:46472:46522	76258	17	True				
ANR	81207	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"		76258	0					
ANR	81208	Callee	zend_ast_export_ex		76258	0					
ANR	81209	Identifier	zend_ast_export_ex		76258	0					
ANR	81210	ArgumentList	str		76258	1					
ANR	81211	Argument	str		76258	0					
ANR	81212	Identifier	str		76258	0					
ANR	81213	Argument	ast -> child [ 0 ]		76258	1					
ANR	81214	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	81215	PtrMemberAccess	ast -> child		76258	0					
ANR	81216	Identifier	ast		76258	0					
ANR	81217	Identifier	child		76258	1					
ANR	81218	PrimaryExpression	0		76258	1					
ANR	81219	Argument	pl		76258	2					
ANR	81220	Identifier	pl		76258	0					
ANR	81221	Argument	indent		76258	3					
ANR	81222	Identifier	indent		76258	0					
ANR	81223	IfStatement	if ( priority > p )		76258	18					
ANR	81224	Condition	priority > p	1618:5:46529:46540	76258	0	True				
ANR	81225	RelationalExpression	priority > p		76258	0		>			
ANR	81226	Identifier	priority		76258	0					
ANR	81227	Identifier	p		76258	1					
ANR	81228	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1618:19:46543:46570	76258	1	True				
ANR	81229	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	81230	Callee	smart_str_appendc		76258	0					
ANR	81231	Identifier	smart_str_appendc		76258	0					
ANR	81232	ArgumentList	str		76258	1					
ANR	81233	Argument	str		76258	0					
ANR	81234	Identifier	str		76258	0					
ANR	81235	Argument	')'		76258	1					
ANR	81236	PrimaryExpression	')'		76258	0					
ANR	81237	ReturnStatement	return ;	1619:1:46573:46579	76258	19	True				
ANR	81238	Label	postfix_op :	1621:0:46582:46592	76258	20	True				
ANR	81239	Identifier	postfix_op		76258	0					
ANR	81240	IfStatement	if ( priority > p )		76258	21					
ANR	81241	Condition	priority > p	1622:5:46599:46610	76258	0	True				
ANR	81242	RelationalExpression	priority > p		76258	0		>			
ANR	81243	Identifier	priority		76258	0					
ANR	81244	Identifier	p		76258	1					
ANR	81245	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1622:19:46613:46640	76258	1	True				
ANR	81246	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	81247	Callee	smart_str_appendc		76258	0					
ANR	81248	Identifier	smart_str_appendc		76258	0					
ANR	81249	ArgumentList	str		76258	1					
ANR	81250	Argument	str		76258	0					
ANR	81251	Identifier	str		76258	0					
ANR	81252	Argument	'('		76258	1					
ANR	81253	PrimaryExpression	'('		76258	0					
ANR	81254	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"	1623:1:46643:46693	76258	22	True				
ANR	81255	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"		76258	0					
ANR	81256	Callee	zend_ast_export_ex		76258	0					
ANR	81257	Identifier	zend_ast_export_ex		76258	0					
ANR	81258	ArgumentList	str		76258	1					
ANR	81259	Argument	str		76258	0					
ANR	81260	Identifier	str		76258	0					
ANR	81261	Argument	ast -> child [ 0 ]		76258	1					
ANR	81262	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	81263	PtrMemberAccess	ast -> child		76258	0					
ANR	81264	Identifier	ast		76258	0					
ANR	81265	Identifier	child		76258	1					
ANR	81266	PrimaryExpression	0		76258	1					
ANR	81267	Argument	pl		76258	2					
ANR	81268	Identifier	pl		76258	0					
ANR	81269	Argument	indent		76258	3					
ANR	81270	Identifier	indent		76258	0					
ANR	81271	ExpressionStatement	"smart_str_appends ( str , op )"	1624:1:46696:46722	76258	23	True				
ANR	81272	CallExpression	"smart_str_appends ( str , op )"		76258	0					
ANR	81273	Callee	smart_str_appends		76258	0					
ANR	81274	Identifier	smart_str_appends		76258	0					
ANR	81275	ArgumentList	str		76258	1					
ANR	81276	Argument	str		76258	0					
ANR	81277	Identifier	str		76258	0					
ANR	81278	Argument	op		76258	1					
ANR	81279	Identifier	op		76258	0					
ANR	81280	IfStatement	if ( priority > p )		76258	24					
ANR	81281	Condition	priority > p	1625:5:46729:46740	76258	0	True				
ANR	81282	RelationalExpression	priority > p		76258	0		>			
ANR	81283	Identifier	priority		76258	0					
ANR	81284	Identifier	p		76258	1					
ANR	81285	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1625:19:46743:46770	76258	1	True				
ANR	81286	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	81287	Callee	smart_str_appendc		76258	0					
ANR	81288	Identifier	smart_str_appendc		76258	0					
ANR	81289	ArgumentList	str		76258	1					
ANR	81290	Argument	str		76258	0					
ANR	81291	Identifier	str		76258	0					
ANR	81292	Argument	')'		76258	1					
ANR	81293	PrimaryExpression	')'		76258	0					
ANR	81294	ReturnStatement	return ;	1626:1:46773:46779	76258	25	True				
ANR	81295	Label	func_op :	1628:0:46782:46789	76258	26	True				
ANR	81296	Identifier	func_op		76258	0					
ANR	81297	ExpressionStatement	"smart_str_appends ( str , op )"	1629:1:46792:46818	76258	27	True				
ANR	81298	CallExpression	"smart_str_appends ( str , op )"		76258	0					
ANR	81299	Callee	smart_str_appends		76258	0					
ANR	81300	Identifier	smart_str_appends		76258	0					
ANR	81301	ArgumentList	str		76258	1					
ANR	81302	Argument	str		76258	0					
ANR	81303	Identifier	str		76258	0					
ANR	81304	Argument	op		76258	1					
ANR	81305	Identifier	op		76258	0					
ANR	81306	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1630:1:46821:46848	76258	28	True				
ANR	81307	CallExpression	"smart_str_appendc ( str , '(' )"		76258	0					
ANR	81308	Callee	smart_str_appendc		76258	0					
ANR	81309	Identifier	smart_str_appendc		76258	0					
ANR	81310	ArgumentList	str		76258	1					
ANR	81311	Argument	str		76258	0					
ANR	81312	Identifier	str		76258	0					
ANR	81313	Argument	'('		76258	1					
ANR	81314	PrimaryExpression	'('		76258	0					
ANR	81315	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1631:1:46851:46900	76258	29	True				
ANR	81316	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		76258	0					
ANR	81317	Callee	zend_ast_export_ex		76258	0					
ANR	81318	Identifier	zend_ast_export_ex		76258	0					
ANR	81319	ArgumentList	str		76258	1					
ANR	81320	Argument	str		76258	0					
ANR	81321	Identifier	str		76258	0					
ANR	81322	Argument	ast -> child [ 0 ]		76258	1					
ANR	81323	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	81324	PtrMemberAccess	ast -> child		76258	0					
ANR	81325	Identifier	ast		76258	0					
ANR	81326	Identifier	child		76258	1					
ANR	81327	PrimaryExpression	0		76258	1					
ANR	81328	Argument	0		76258	2					
ANR	81329	PrimaryExpression	0		76258	0					
ANR	81330	Argument	indent		76258	3					
ANR	81331	Identifier	indent		76258	0					
ANR	81332	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1632:1:46903:46930	76258	30	True				
ANR	81333	CallExpression	"smart_str_appendc ( str , ')' )"		76258	0					
ANR	81334	Callee	smart_str_appendc		76258	0					
ANR	81335	Identifier	smart_str_appendc		76258	0					
ANR	81336	ArgumentList	str		76258	1					
ANR	81337	Argument	str		76258	0					
ANR	81338	Identifier	str		76258	0					
ANR	81339	Argument	')'		76258	1					
ANR	81340	PrimaryExpression	')'		76258	0					
ANR	81341	ReturnStatement	return ;	1633:1:46933:46939	76258	31	True				
ANR	81342	Label	append_node_1 :	1635:0:46942:46955	76258	32	True				
ANR	81343	Identifier	append_node_1		76258	0					
ANR	81344	ExpressionStatement	"smart_str_appends ( str , op )"	1636:1:46958:46984	76258	33	True				
ANR	81345	CallExpression	"smart_str_appends ( str , op )"		76258	0					
ANR	81346	Callee	smart_str_appends		76258	0					
ANR	81347	Identifier	smart_str_appends		76258	0					
ANR	81348	ArgumentList	str		76258	1					
ANR	81349	Argument	str		76258	0					
ANR	81350	Identifier	str		76258	0					
ANR	81351	Argument	op		76258	1					
ANR	81352	Identifier	op		76258	0					
ANR	81353	IfStatement	if ( ast -> child [ 0 ] )		76258	34					
ANR	81354	Condition	ast -> child [ 0 ]	1637:5:46991:47003	76258	0	True				
ANR	81355	ArrayIndexing	ast -> child [ 0 ]		76258	0					
ANR	81356	PtrMemberAccess	ast -> child		76258	0					
ANR	81357	Identifier	ast		76258	0					
ANR	81358	Identifier	child		76258	1					
ANR	81359	PrimaryExpression	0		76258	1					
ANR	81360	CompoundStatement		670:20:22300:22300	76258	1					
ANR	81361	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1638:2:47010:47037	76258	0	True				
ANR	81362	CallExpression	"smart_str_appendc ( str , ' ' )"		76258	0					
ANR	81363	Callee	smart_str_appendc		76258	0					
ANR	81364	Identifier	smart_str_appendc		76258	0					
ANR	81365	ArgumentList	str		76258	1					
ANR	81366	Argument	str		76258	0					
ANR	81367	Identifier	str		76258	0					
ANR	81368	Argument	' '		76258	1					
ANR	81369	PrimaryExpression	' '		76258	0					
ANR	81370	ExpressionStatement	ast = ast -> child [ 0 ]	1639:2:47041:47060	76258	1	True				
ANR	81371	AssignmentExpression	ast = ast -> child [ 0 ]		76258	0		=			
ANR	81372	Identifier	ast		76258	0					
ANR	81373	ArrayIndexing	ast -> child [ 0 ]		76258	1					
ANR	81374	PtrMemberAccess	ast -> child		76258	0					
ANR	81375	Identifier	ast		76258	0					
ANR	81376	Identifier	child		76258	1					
ANR	81377	PrimaryExpression	0		76258	1					
ANR	81378	GotoStatement	goto tail_call ;	1640:2:47064:47078	76258	2	True				
ANR	81379	Identifier	tail_call		76258	0					
ANR	81380	ReturnStatement	return ;	1642:1:47084:47090	76258	35	True				
ANR	81381	Label	append_str :	1644:0:47093:47103	76258	36	True				
ANR	81382	Identifier	append_str		76258	0					
ANR	81383	ExpressionStatement	"smart_str_appends ( str , op )"	1645:1:47106:47132	76258	37	True				
ANR	81384	CallExpression	"smart_str_appends ( str , op )"		76258	0					
ANR	81385	Callee	smart_str_appends		76258	0					
ANR	81386	Identifier	smart_str_appends		76258	0					
ANR	81387	ArgumentList	str		76258	1					
ANR	81388	Argument	str		76258	0					
ANR	81389	Identifier	str		76258	0					
ANR	81390	Argument	op		76258	1					
ANR	81391	Identifier	op		76258	0					
ANR	81392	ReturnStatement	return ;	1646:1:47135:47141	76258	38	True				
ANR	81393	Label	append_default_value :	1648:0:47144:47164	76258	39	True				
ANR	81394	Identifier	append_default_value		76258	0					
ANR	81395	IfStatement	if ( ast -> child [ p ] )		76258	40					
ANR	81396	Condition	ast -> child [ p ]	1649:5:47171:47183	76258	0	True				
ANR	81397	ArrayIndexing	ast -> child [ p ]		76258	0					
ANR	81398	PtrMemberAccess	ast -> child		76258	0					
ANR	81399	Identifier	ast		76258	0					
ANR	81400	Identifier	child		76258	1					
ANR	81401	Identifier	p		76258	1					
ANR	81402	CompoundStatement		682:20:22480:22480	76258	1					
ANR	81403	ExpressionStatement	"smart_str_appends ( str , "" = "" )"	1650:2:47190:47219	76258	0	True				
ANR	81404	CallExpression	"smart_str_appends ( str , "" = "" )"		76258	0					
ANR	81405	Callee	smart_str_appends		76258	0					
ANR	81406	Identifier	smart_str_appends		76258	0					
ANR	81407	ArgumentList	str		76258	1					
ANR	81408	Argument	str		76258	0					
ANR	81409	Identifier	str		76258	0					
ANR	81410	Argument	""" = """		76258	1					
ANR	81411	PrimaryExpression	""" = """		76258	0					
ANR	81412	ExpressionStatement	ast = ast -> child [ p ]	1651:2:47223:47242	76258	1	True				
ANR	81413	AssignmentExpression	ast = ast -> child [ p ]		76258	0		=			
ANR	81414	Identifier	ast		76258	0					
ANR	81415	ArrayIndexing	ast -> child [ p ]		76258	1					
ANR	81416	PtrMemberAccess	ast -> child		76258	0					
ANR	81417	Identifier	ast		76258	0					
ANR	81418	Identifier	child		76258	1					
ANR	81419	Identifier	p		76258	1					
ANR	81420	GotoStatement	goto tail_call ;	1652:2:47246:47260	76258	2	True				
ANR	81421	Identifier	tail_call		76258	0					
ANR	81422	ReturnStatement	return ;	1654:1:47266:47272	76258	41	True				
ANR	81423	ReturnType	static void		76258	1					
ANR	81424	Identifier	zend_ast_export_ex		76258	2					
ANR	81425	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		76258	3					
ANR	81426	Parameter	smart_str * str	967:31:24648:24661	76258	0	True				
ANR	81427	ParameterType	smart_str *		76258	0					
ANR	81428	Identifier	str		76258	1					
ANR	81429	Parameter	zend_ast * ast	967:47:24664:24676	76258	1	True				
ANR	81430	ParameterType	zend_ast *		76258	0					
ANR	81431	Identifier	ast		76258	1					
ANR	81432	Parameter	int priority	967:62:24679:24690	76258	2	True				
ANR	81433	ParameterType	int		76258	0					
ANR	81434	Identifier	priority		76258	1					
ANR	81435	Parameter	int indent	967:76:24693:24702	76258	3	True				
ANR	81436	ParameterType	int		76258	0					
ANR	81437	Identifier	indent		76258	1					
ANR	81438	CFGEntryNode	ENTRY		76258		True				
ANR	81439	CFGExitNode	EXIT		76258		True				
ANR	81440	Symbol	* * decl		76258						
ANR	81441	Symbol	* * * ast		76258						
ANR	81442	Symbol	pr		76258						
ANR	81443	Symbol	ast -> kind		76258						
ANR	81444	Symbol	ast		76258						
ANR	81445	Symbol	decl		76258						
ANR	81446	Symbol	indent		76258						
ANR	81447	Symbol	ZEND_ACC_PUBLIC		76258						
ANR	81448	Symbol	ast -> child [ 0 ] -> kind		76258						
ANR	81449	Symbol	ZEND_ACC_FINAL		76258						
ANR	81450	Symbol	ZEND_PARAM_REF		76258						
ANR	81451	Symbol	decl -> flags		76258						
ANR	81452	Symbol	T_FUNCTION		76258						
ANR	81453	Symbol	* ast		76258						
ANR	81454	Symbol	* * ast		76258						
ANR	81455	Symbol	ZEND_PARAM_VARIADIC		76258						
ANR	81456	Symbol	ZEND_ACC_PROTECTED		76258						
ANR	81457	Symbol	ZEND_ACC_STATIC		76258						
ANR	81458	Symbol	ZEND_ACC_INTERFACE		76258						
ANR	81459	Symbol	op		76258						
ANR	81460	Symbol	decl -> name		76258						
ANR	81461	Symbol	ast -> attr		76258						
ANR	81462	Symbol	* * ast -> child		76258						
ANR	81463	Symbol	ZEND_AST_ENCAPS_LIST		76258						
ANR	81464	Symbol	* decl -> child		76258						
ANR	81465	Symbol	ZEND_AST_CONST_DECL		76258						
ANR	81466	Symbol	T_CONST		76258						
ANR	81467	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		76258						
ANR	81468	Symbol	priority		76258						
ANR	81469	Symbol	ZEND_ACC_PRIVATE		76258						
ANR	81470	Symbol	ZSTR_VAL		76258						
ANR	81471	Symbol	ZEND_ACC_TRAIT		76258						
ANR	81472	Symbol	str		76258						
ANR	81473	Symbol	p		76258						
ANR	81474	Symbol	ZEND_AST_CLOSURE		76258						
ANR	81475	Symbol	ZEND_ACC_ABSTRACT		76258						
ANR	81476	Symbol	decl -> child		76258						
ANR	81477	Symbol	ZEND_ACC_RETURN_REFERENCE		76258						
ANR	81478	Symbol	ZSTR_LEN		76258						
ANR	81479	Symbol	* ast -> child		76258						
ANR	81480	Symbol	* p		76258						
ANR	81481	Symbol	pl		76258						
ANR	81482	Symbol	zend_ast_get_zval		76258						
ANR	81483	Symbol	ast -> child		76258						
ANR	81484	Symbol	* decl		76258						
ANR	81485	Function	zend_ast_export	1657:0:47277:47536							
ANR	81486	FunctionDef	"zend_ast_export (const char * prefix , zend_ast * ast , const char * suffix)"		81485	0					
ANR	81487	CompoundStatement		1658:0:47370:47536	81485	0					
ANR	81488	IdentifierDeclStatement	smart_str str = { 0 } ;	1659:1:47373:47392	81485	0	True				
ANR	81489	IdentifierDecl	str = { 0 }		81485	0					
ANR	81490	IdentifierDeclType	smart_str		81485	0					
ANR	81491	Identifier	str		81485	1					
ANR	81492	AssignmentExpression	str = { 0 }		81485	2		=			
ANR	81493	Identifier	str		81485	0					
ANR	81494	InitializerList	0		81485	1					
ANR	81495	PrimaryExpression	0		81485	0					
ANR	81496	ExpressionStatement	"smart_str_appends ( & str , prefix )"	1661:1:47396:47427	81485	1	True				
ANR	81497	CallExpression	"smart_str_appends ( & str , prefix )"		81485	0					
ANR	81498	Callee	smart_str_appends		81485	0					
ANR	81499	Identifier	smart_str_appends		81485	0					
ANR	81500	ArgumentList	& str		81485	1					
ANR	81501	Argument	& str		81485	0					
ANR	81502	UnaryOperationExpression	& str		81485	0					
ANR	81503	UnaryOperator	&		81485	0					
ANR	81504	Identifier	str		81485	1					
ANR	81505	Argument	prefix		81485	1					
ANR	81506	Identifier	prefix		81485	0					
ANR	81507	ExpressionStatement	"zend_ast_export_ex ( & str , ast , 0 , 0 )"	1662:1:47430:47465	81485	2	True				
ANR	81508	CallExpression	"zend_ast_export_ex ( & str , ast , 0 , 0 )"		81485	0					
ANR	81509	Callee	zend_ast_export_ex		81485	0					
ANR	81510	Identifier	zend_ast_export_ex		81485	0					
ANR	81511	ArgumentList	& str		81485	1					
ANR	81512	Argument	& str		81485	0					
ANR	81513	UnaryOperationExpression	& str		81485	0					
ANR	81514	UnaryOperator	&		81485	0					
ANR	81515	Identifier	str		81485	1					
ANR	81516	Argument	ast		81485	1					
ANR	81517	Identifier	ast		81485	0					
ANR	81518	Argument	0		81485	2					
ANR	81519	PrimaryExpression	0		81485	0					
ANR	81520	Argument	0		81485	3					
ANR	81521	PrimaryExpression	0		81485	0					
ANR	81522	ExpressionStatement	"smart_str_appends ( & str , suffix )"	1663:1:47468:47499	81485	3	True				
ANR	81523	CallExpression	"smart_str_appends ( & str , suffix )"		81485	0					
ANR	81524	Callee	smart_str_appends		81485	0					
ANR	81525	Identifier	smart_str_appends		81485	0					
ANR	81526	ArgumentList	& str		81485	1					
ANR	81527	Argument	& str		81485	0					
ANR	81528	UnaryOperationExpression	& str		81485	0					
ANR	81529	UnaryOperator	&		81485	0					
ANR	81530	Identifier	str		81485	1					
ANR	81531	Argument	suffix		81485	1					
ANR	81532	Identifier	suffix		81485	0					
ANR	81533	ExpressionStatement	smart_str_0 ( & str )	1664:1:47502:47519	81485	4	True				
ANR	81534	CallExpression	smart_str_0 ( & str )		81485	0					
ANR	81535	Callee	smart_str_0		81485	0					
ANR	81536	Identifier	smart_str_0		81485	0					
ANR	81537	ArgumentList	& str		81485	1					
ANR	81538	Argument	& str		81485	0					
ANR	81539	UnaryOperationExpression	& str		81485	0					
ANR	81540	UnaryOperator	&		81485	0					
ANR	81541	Identifier	str		81485	1					
ANR	81542	ReturnStatement	return str . s ;	1665:1:47522:47534	81485	5	True				
ANR	81543	MemberAccess	str . s		81485	0					
ANR	81544	Identifier	str		81485	0					
ANR	81545	Identifier	s		81485	1					
ANR	81546	ReturnType	ZEND_API zend_string *		81485	1					
ANR	81547	Identifier	zend_ast_export		81485	2					
ANR	81548	ParameterList	"const char * prefix , zend_ast * ast , const char * suffix"		81485	3					
ANR	81549	Parameter	const char * prefix	1657:38:47315:47332	81485	0	True				
ANR	81550	ParameterType	const char *		81485	0					
ANR	81551	Identifier	prefix		81485	1					
ANR	81552	Parameter	zend_ast * ast	1657:58:47335:47347	81485	1	True				
ANR	81553	ParameterType	zend_ast *		81485	0					
ANR	81554	Identifier	ast		81485	1					
ANR	81555	Parameter	const char * suffix	1657:73:47350:47367	81485	2	True				
ANR	81556	ParameterType	const char *		81485	0					
ANR	81557	Identifier	suffix		81485	1					
ANR	81558	CFGEntryNode	ENTRY		81485		True				
ANR	81559	CFGExitNode	EXIT		81485		True				
ANR	81560	Symbol	str		81485						
ANR	81561	Symbol	& str		81485						
ANR	81562	Symbol	ast		81485						
ANR	81563	Symbol	prefix		81485						
ANR	81564	Symbol	str . s		81485						
ANR	81565	Symbol	suffix		81485						
