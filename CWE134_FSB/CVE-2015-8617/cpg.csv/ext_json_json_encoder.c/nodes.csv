command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1009403	File	data/converged/CVE-2015-8617_php-src/ext_json_json_encoder.c								
ANR	1009404	DeclStmt									
ANR	1009405	Decl							const char	const char [ ]	digits
ANR	1009406	DeclStmt									
ANR	1009407	Decl							void	"void ( smart_str * buf , char * s , size_t len , int options )"	php_json_escape_string
ANR	1009408	Function	php_json_determine_array_type	46:0:1796:2272							
ANR	1009409	FunctionDef	php_json_determine_array_type (zval * val)		1009408	0					
ANR	1009410	CompoundStatement		47:0:1858:2272	1009408	0					
ANR	1009411	IdentifierDeclStatement	int i ;	48:1:1861:1866	1009408	0	True				
ANR	1009412	IdentifierDecl	i		1009408	0					
ANR	1009413	IdentifierDeclType	int		1009408	0					
ANR	1009414	Identifier	i		1009408	1					
ANR	1009415	IdentifierDeclStatement	HashTable * myht = Z_ARRVAL_P ( val ) ;	49:1:1869:1902	1009408	1	True				
ANR	1009416	IdentifierDecl	* myht = Z_ARRVAL_P ( val )		1009408	0					
ANR	1009417	IdentifierDeclType	HashTable *		1009408	0					
ANR	1009418	Identifier	myht		1009408	1					
ANR	1009419	AssignmentExpression	* myht = Z_ARRVAL_P ( val )		1009408	2		=			
ANR	1009420	Identifier	myht		1009408	0					
ANR	1009421	CallExpression	Z_ARRVAL_P ( val )		1009408	1					
ANR	1009422	Callee	Z_ARRVAL_P		1009408	0					
ANR	1009423	Identifier	Z_ARRVAL_P		1009408	0					
ANR	1009424	ArgumentList	val		1009408	1					
ANR	1009425	Argument	val		1009408	0					
ANR	1009426	Identifier	val		1009408	0					
ANR	1009427	ExpressionStatement	i = myht ? zend_hash_num_elements ( myht ) : 0	51:1:1906:1949	1009408	2	True				
ANR	1009428	AssignmentExpression	i = myht ? zend_hash_num_elements ( myht ) : 0		1009408	0		=			
ANR	1009429	Identifier	i		1009408	0					
ANR	1009430	ConditionalExpression	myht ? zend_hash_num_elements ( myht ) : 0		1009408	1					
ANR	1009431	Condition	myht		1009408	0					
ANR	1009432	Identifier	myht		1009408	0					
ANR	1009433	CallExpression	zend_hash_num_elements ( myht )		1009408	1					
ANR	1009434	Callee	zend_hash_num_elements		1009408	0					
ANR	1009435	Identifier	zend_hash_num_elements		1009408	0					
ANR	1009436	ArgumentList	myht		1009408	1					
ANR	1009437	Argument	myht		1009408	0					
ANR	1009438	Identifier	myht		1009408	0					
ANR	1009439	PrimaryExpression	0		1009408	2					
ANR	1009440	IfStatement	if ( i > 0 )		1009408	3					
ANR	1009441	Condition	i > 0	52:5:1956:1960	1009408	0	True				
ANR	1009442	RelationalExpression	i > 0		1009408	0		>			
ANR	1009443	Identifier	i		1009408	0					
ANR	1009444	PrimaryExpression	0		1009408	1					
ANR	1009445	CompoundStatement		8:2:128:149	1009408	1					
ANR	1009446	IdentifierDeclStatement	zend_string * key ;	53:2:1967:1983	1009408	0	True				
ANR	1009447	IdentifierDecl	* key		1009408	0					
ANR	1009448	IdentifierDeclType	zend_string *		1009408	0					
ANR	1009449	Identifier	key		1009408	1					
ANR	1009450	IdentifierDeclStatement	"zend_ulong index , idx ;"	54:2:1987:2008	1009408	1	True				
ANR	1009451	IdentifierDecl	index		1009408	0					
ANR	1009452	IdentifierDeclType	zend_ulong		1009408	0					
ANR	1009453	Identifier	index		1009408	1					
ANR	1009454	IdentifierDecl	idx		1009408	1					
ANR	1009455	IdentifierDeclType	zend_ulong		1009408	0					
ANR	1009456	Identifier	idx		1009408	1					
ANR	1009457	ExpressionStatement	idx = 0	56:2:2013:2020	1009408	2	True				
ANR	1009458	AssignmentExpression	idx = 0		1009408	0		=			
ANR	1009459	Identifier	idx		1009408	0					
ANR	1009460	PrimaryExpression	0		1009408	1					
ANR	1009461	Statement	ZEND_HASH_FOREACH_KEY	57:2:2024:2044	1009408	3	True				
ANR	1009462	Statement	(	57:23:2045:2045	1009408	4	True				
ANR	1009463	Statement	myht	57:24:2046:2049	1009408	5	True				
ANR	1009464	Statement	","	57:28:2050:2050	1009408	6	True				
ANR	1009465	Statement	index	57:30:2052:2056	1009408	7	True				
ANR	1009466	Statement	","	57:35:2057:2057	1009408	8	True				
ANR	1009467	Statement	key	57:37:2059:2061	1009408	9	True				
ANR	1009468	Statement	)	57:40:2062:2062	1009408	10	True				
ANR	1009469	CompoundStatement		11:42:205:205	1009408	11					
ANR	1009470	IfStatement	if ( key )		1009408	0					
ANR	1009471	Condition	key	58:7:2073:2075	1009408	0	True				
ANR	1009472	Identifier	key		1009408	0					
ANR	1009473	CompoundStatement		12:12:219:219	1009408	1					
ANR	1009474	ReturnStatement	return PHP_JSON_OUTPUT_OBJECT ;	59:4:2084:2113	1009408	0	True				
ANR	1009475	Identifier	PHP_JSON_OUTPUT_OBJECT		1009408	0					
ANR	1009476	ElseStatement	else		1009408	0					
ANR	1009477	CompoundStatement		14:10:266:266	1009408	0					
ANR	1009478	IfStatement	if ( index != idx )		1009408	0					
ANR	1009479	Condition	index != idx	61:8:2135:2146	1009408	0	True				
ANR	1009480	EqualityExpression	index != idx		1009408	0		!=			
ANR	1009481	Identifier	index		1009408	0					
ANR	1009482	Identifier	idx		1009408	1					
ANR	1009483	CompoundStatement		15:22:290:290	1009408	1					
ANR	1009484	ReturnStatement	return PHP_JSON_OUTPUT_OBJECT ;	62:5:2156:2185	1009408	0	True				
ANR	1009485	Identifier	PHP_JSON_OUTPUT_OBJECT		1009408	0					
ANR	1009486	ExpressionStatement	idx ++	65:3:2201:2206	1009408	1	True				
ANR	1009487	PostIncDecOperationExpression	idx ++		1009408	0					
ANR	1009488	Identifier	idx		1009408	0					
ANR	1009489	IncDec	++		1009408	1					
ANR	1009490	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	66:4:2212:2235	1009408	12	True				
ANR	1009491	CallExpression	ZEND_HASH_FOREACH_END ( )		1009408	0					
ANR	1009492	Callee	ZEND_HASH_FOREACH_END		1009408	0					
ANR	1009493	Identifier	ZEND_HASH_FOREACH_END		1009408	0					
ANR	1009494	ArgumentList			1009408	1					
ANR	1009495	ReturnStatement	return PHP_JSON_OUTPUT_ARRAY ;	69:1:2242:2270	1009408	4	True				
ANR	1009496	Identifier	PHP_JSON_OUTPUT_ARRAY		1009408	0					
ANR	1009497	ReturnType	static int		1009408	1					
ANR	1009498	Identifier	php_json_determine_array_type		1009408	2					
ANR	1009499	ParameterList	zval * val		1009408	3					
ANR	1009500	Parameter	zval * val	46:41:1837:1845	1009408	0	True				
ANR	1009501	ParameterType	zval *		1009408	0					
ANR	1009502	Identifier	val		1009408	1					
ANR	1009503	CFGEntryNode	ENTRY		1009408		True				
ANR	1009504	CFGExitNode	EXIT		1009408		True				
ANR	1009505	Symbol	val		1009408						
ANR	1009506	Symbol	PHP_JSON_OUTPUT_OBJECT		1009408						
ANR	1009507	Symbol	zend_hash_num_elements		1009408						
ANR	1009508	Symbol	PHP_JSON_OUTPUT_ARRAY		1009408						
ANR	1009509	Symbol	i		1009408						
ANR	1009510	Symbol	index		1009408						
ANR	1009511	Symbol	myht		1009408						
ANR	1009512	Symbol	Z_ARRVAL_P		1009408						
ANR	1009513	Symbol	idx		1009408						
ANR	1009514	Symbol	key		1009408						
ANR	1009515	Function	php_json_pretty_print_char	75:0:2330:2497							
ANR	1009516	FunctionDef	"php_json_pretty_print_char (smart_str * buf , int options , char c)"		1009515	0					
ANR	1009517	CompoundStatement		76:0:2423:2497	1009515	0					
ANR	1009518	IfStatement	if ( options & PHP_JSON_PRETTY_PRINT )		1009515	0					
ANR	1009519	Condition	options & PHP_JSON_PRETTY_PRINT	77:5:2430:2460	1009515	0	True				
ANR	1009520	BitAndExpression	options & PHP_JSON_PRETTY_PRINT		1009515	0		&			
ANR	1009521	Identifier	options		1009515	0					
ANR	1009522	Identifier	PHP_JSON_PRETTY_PRINT		1009515	1					
ANR	1009523	CompoundStatement		2:38:39:39	1009515	1					
ANR	1009524	ExpressionStatement	"smart_str_appendc ( buf , c )"	78:2:2467:2492	1009515	0	True				
ANR	1009525	CallExpression	"smart_str_appendc ( buf , c )"		1009515	0					
ANR	1009526	Callee	smart_str_appendc		1009515	0					
ANR	1009527	Identifier	smart_str_appendc		1009515	0					
ANR	1009528	ArgumentList	buf		1009515	1					
ANR	1009529	Argument	buf		1009515	0					
ANR	1009530	Identifier	buf		1009515	0					
ANR	1009531	Argument	c		1009515	1					
ANR	1009532	Identifier	c		1009515	0					
ANR	1009533	ReturnType	static inline void		1009515	1					
ANR	1009534	Identifier	php_json_pretty_print_char		1009515	2					
ANR	1009535	ParameterList	"smart_str * buf , int options , char c"		1009515	3					
ANR	1009536	Parameter	smart_str * buf	75:46:2376:2389	1009515	0	True				
ANR	1009537	ParameterType	smart_str *		1009515	0					
ANR	1009538	Identifier	buf		1009515	1					
ANR	1009539	Parameter	int options	75:62:2392:2402	1009515	1	True				
ANR	1009540	ParameterType	int		1009515	0					
ANR	1009541	Identifier	options		1009515	1					
ANR	1009542	Parameter	char c	75:75:2405:2410	1009515	2	True				
ANR	1009543	ParameterType	char		1009515	0					
ANR	1009544	Identifier	c		1009515	1					
ANR	1009545	CFGEntryNode	ENTRY		1009515		True				
ANR	1009546	CFGExitNode	EXIT		1009515		True				
ANR	1009547	Symbol	buf		1009515						
ANR	1009548	Symbol	c		1009515						
ANR	1009549	Symbol	options		1009515						
ANR	1009550	Symbol	PHP_JSON_PRETTY_PRINT		1009515						
ANR	1009551	Function	php_json_pretty_print_indent	83:0:2510:2741							
ANR	1009552	FunctionDef	"php_json_pretty_print_indent (smart_str * buf , int options)"		1009551	0					
ANR	1009553	CompoundStatement		84:0:2597:2741	1009551	0					
ANR	1009554	IdentifierDeclStatement	int i ;	85:1:2600:2605	1009551	0	True				
ANR	1009555	IdentifierDecl	i		1009551	0					
ANR	1009556	IdentifierDeclType	int		1009551	0					
ANR	1009557	Identifier	i		1009551	1					
ANR	1009558	IfStatement	if ( options & PHP_JSON_PRETTY_PRINT )		1009551	1					
ANR	1009559	Condition	options & PHP_JSON_PRETTY_PRINT	87:5:2613:2643	1009551	0	True				
ANR	1009560	BitAndExpression	options & PHP_JSON_PRETTY_PRINT		1009551	0		&			
ANR	1009561	Identifier	options		1009551	0					
ANR	1009562	Identifier	PHP_JSON_PRETTY_PRINT		1009551	1					
ANR	1009563	CompoundStatement		4:38:48:48	1009551	1					
ANR	1009564	ForStatement	for ( i = 0 ; i < JSON_G ( encoder_depth ) ; ++ i )		1009551	0					
ANR	1009565	ForInit	i = 0 ;	88:7:2655:2660	1009551	0	True				
ANR	1009566	AssignmentExpression	i = 0		1009551	0		=			
ANR	1009567	Identifier	i		1009551	0					
ANR	1009568	PrimaryExpression	0		1009551	1					
ANR	1009569	Condition	i < JSON_G ( encoder_depth )	88:14:2662:2686	1009551	1	True				
ANR	1009570	RelationalExpression	i < JSON_G ( encoder_depth )		1009551	0		<			
ANR	1009571	Identifier	i		1009551	0					
ANR	1009572	CallExpression	JSON_G ( encoder_depth )		1009551	1					
ANR	1009573	Callee	JSON_G		1009551	0					
ANR	1009574	Identifier	JSON_G		1009551	0					
ANR	1009575	ArgumentList	encoder_depth		1009551	1					
ANR	1009576	Argument	encoder_depth		1009551	0					
ANR	1009577	Identifier	encoder_depth		1009551	0					
ANR	1009578	UnaryExpression	++ i	88:41:2689:2691	1009551	2	True				
ANR	1009579	IncDec	++		1009551	0					
ANR	1009580	Identifier	i		1009551	1					
ANR	1009581	CompoundStatement		5:46:96:96	1009551	3					
ANR	1009582	ExpressionStatement	"smart_str_appendl ( buf , ""    "" , 4 )"	89:3:2699:2732	1009551	0	True				
ANR	1009583	CallExpression	"smart_str_appendl ( buf , ""    "" , 4 )"		1009551	0					
ANR	1009584	Callee	smart_str_appendl		1009551	0					
ANR	1009585	Identifier	smart_str_appendl		1009551	0					
ANR	1009586	ArgumentList	buf		1009551	1					
ANR	1009587	Argument	buf		1009551	0					
ANR	1009588	Identifier	buf		1009551	0					
ANR	1009589	Argument	"""    """		1009551	1					
ANR	1009590	PrimaryExpression	"""    """		1009551	0					
ANR	1009591	Argument	4		1009551	2					
ANR	1009592	PrimaryExpression	4		1009551	0					
ANR	1009593	ReturnType	static inline void		1009551	1					
ANR	1009594	Identifier	php_json_pretty_print_indent		1009551	2					
ANR	1009595	ParameterList	"smart_str * buf , int options"		1009551	3					
ANR	1009596	Parameter	smart_str * buf	83:48:2558:2571	1009551	0	True				
ANR	1009597	ParameterType	smart_str *		1009551	0					
ANR	1009598	Identifier	buf		1009551	1					
ANR	1009599	Parameter	int options	83:64:2574:2584	1009551	1	True				
ANR	1009600	ParameterType	int		1009551	0					
ANR	1009601	Identifier	options		1009551	1					
ANR	1009602	CFGEntryNode	ENTRY		1009551		True				
ANR	1009603	CFGExitNode	EXIT		1009551		True				
ANR	1009604	Symbol	buf		1009551						
ANR	1009605	Symbol	encoder_depth		1009551						
ANR	1009606	Symbol	options		1009551						
ANR	1009607	Symbol	PHP_JSON_PRETTY_PRINT		1009551						
ANR	1009608	Symbol	i		1009551						
ANR	1009609	Symbol	JSON_G		1009551						
ANR	1009610	Function	php_json_is_valid_double	97:0:2765:2872							
ANR	1009611	FunctionDef	php_json_is_valid_double (double d)		1009610	0					
ANR	1009612	CompoundStatement		98:0:2828:2872	1009610	0					
ANR	1009613	ReturnStatement	return ! zend_isinf ( d ) && ! zend_isnan ( d ) ;	99:1:2831:2870	1009610	0	True				
ANR	1009614	AndExpression	! zend_isinf ( d ) && ! zend_isnan ( d )		1009610	0		&&			
ANR	1009615	UnaryOperationExpression	! zend_isinf ( d )		1009610	0					
ANR	1009616	UnaryOperator	!		1009610	0					
ANR	1009617	CallExpression	zend_isinf ( d )		1009610	1					
ANR	1009618	Callee	zend_isinf		1009610	0					
ANR	1009619	Identifier	zend_isinf		1009610	0					
ANR	1009620	ArgumentList	d		1009610	1					
ANR	1009621	Argument	d		1009610	0					
ANR	1009622	Identifier	d		1009610	0					
ANR	1009623	UnaryOperationExpression	! zend_isnan ( d )		1009610	1					
ANR	1009624	UnaryOperator	!		1009610	0					
ANR	1009625	CallExpression	zend_isnan ( d )		1009610	1					
ANR	1009626	Callee	zend_isnan		1009610	0					
ANR	1009627	Identifier	zend_isnan		1009610	0					
ANR	1009628	ArgumentList	d		1009610	1					
ANR	1009629	Argument	d		1009610	0					
ANR	1009630	Identifier	d		1009610	0					
ANR	1009631	ReturnType	static inline int		1009610	1					
ANR	1009632	Identifier	php_json_is_valid_double		1009610	2					
ANR	1009633	ParameterList	double d		1009610	3					
ANR	1009634	Parameter	double d	97:43:2808:2815	1009610	0	True				
ANR	1009635	ParameterType	double		1009610	0					
ANR	1009636	Identifier	d		1009610	1					
ANR	1009637	CFGEntryNode	ENTRY		1009610		True				
ANR	1009638	CFGExitNode	EXIT		1009610		True				
ANR	1009639	Symbol	zend_isinf		1009610						
ANR	1009640	Symbol	d		1009610						
ANR	1009641	Symbol	zend_isnan		1009610						
ANR	1009642	Function	php_json_encode_double	103:0:2885:3318							
ANR	1009643	FunctionDef	"php_json_encode_double (smart_str * buf , double d , int options)"		1009642	0					
ANR	1009644	CompoundStatement		104:0:2976:3318	1009642	0					
ANR	1009645	IdentifierDeclStatement	size_t len ;	105:1:2979:2989	1009642	0	True				
ANR	1009646	IdentifierDecl	len		1009642	0					
ANR	1009647	IdentifierDeclType	size_t		1009642	0					
ANR	1009648	Identifier	len		1009642	1					
ANR	1009649	IdentifierDeclStatement	char num [ PHP_JSON_DOUBLE_MAX_LENGTH ] ;	106:1:2992:3028	1009642	1	True				
ANR	1009650	IdentifierDecl	num [ PHP_JSON_DOUBLE_MAX_LENGTH ]		1009642	0					
ANR	1009651	IdentifierDeclType	char [ PHP_JSON_DOUBLE_MAX_LENGTH ]		1009642	0					
ANR	1009652	Identifier	num		1009642	1					
ANR	1009653	Identifier	PHP_JSON_DOUBLE_MAX_LENGTH		1009642	2					
ANR	1009654	ExpressionStatement	"php_gcvt ( d , ( int ) EG ( precision ) , '.' , 'e' , & num [ 0 ] )"	107:1:3031:3081	1009642	2	True				
ANR	1009655	CallExpression	"php_gcvt ( d , ( int ) EG ( precision ) , '.' , 'e' , & num [ 0 ] )"		1009642	0					
ANR	1009656	Callee	php_gcvt		1009642	0					
ANR	1009657	Identifier	php_gcvt		1009642	0					
ANR	1009658	ArgumentList	d		1009642	1					
ANR	1009659	Argument	d		1009642	0					
ANR	1009660	Identifier	d		1009642	0					
ANR	1009661	Argument	( int ) EG ( precision )		1009642	1					
ANR	1009662	CastExpression	( int ) EG ( precision )		1009642	0					
ANR	1009663	CastTarget	int		1009642	0					
ANR	1009664	CallExpression	EG ( precision )		1009642	1					
ANR	1009665	Callee	EG		1009642	0					
ANR	1009666	Identifier	EG		1009642	0					
ANR	1009667	ArgumentList	precision		1009642	1					
ANR	1009668	Argument	precision		1009642	0					
ANR	1009669	Identifier	precision		1009642	0					
ANR	1009670	Argument	'.'		1009642	2					
ANR	1009671	PrimaryExpression	'.'		1009642	0					
ANR	1009672	Argument	'e'		1009642	3					
ANR	1009673	PrimaryExpression	'e'		1009642	0					
ANR	1009674	Argument	& num [ 0 ]		1009642	4					
ANR	1009675	UnaryOperationExpression	& num [ 0 ]		1009642	0					
ANR	1009676	UnaryOperator	&		1009642	0					
ANR	1009677	ArrayIndexing	num [ 0 ]		1009642	1					
ANR	1009678	Identifier	num		1009642	0					
ANR	1009679	PrimaryExpression	0		1009642	1					
ANR	1009680	ExpressionStatement	len = strlen ( num )	108:1:3084:3101	1009642	3	True				
ANR	1009681	AssignmentExpression	len = strlen ( num )		1009642	0		=			
ANR	1009682	Identifier	len		1009642	0					
ANR	1009683	CallExpression	strlen ( num )		1009642	1					
ANR	1009684	Callee	strlen		1009642	0					
ANR	1009685	Identifier	strlen		1009642	0					
ANR	1009686	ArgumentList	num		1009642	1					
ANR	1009687	Argument	num		1009642	0					
ANR	1009688	Identifier	num		1009642	0					
ANR	1009689	IfStatement	"if ( options & PHP_JSON_PRESERVE_ZERO_FRACTION && strchr ( num , '.' ) == NULL && len < PHP_JSON_DOUBLE_MAX_LENGTH - 2 )"		1009642	4					
ANR	1009690	Condition	"options & PHP_JSON_PRESERVE_ZERO_FRACTION && strchr ( num , '.' ) == NULL && len < PHP_JSON_DOUBLE_MAX_LENGTH - 2"	109:5:3108:3216	1009642	0	True				
ANR	1009691	AndExpression	"options & PHP_JSON_PRESERVE_ZERO_FRACTION && strchr ( num , '.' ) == NULL && len < PHP_JSON_DOUBLE_MAX_LENGTH - 2"		1009642	0		&&			
ANR	1009692	BitAndExpression	options & PHP_JSON_PRESERVE_ZERO_FRACTION		1009642	0		&			
ANR	1009693	Identifier	options		1009642	0					
ANR	1009694	Identifier	PHP_JSON_PRESERVE_ZERO_FRACTION		1009642	1					
ANR	1009695	AndExpression	"strchr ( num , '.' ) == NULL && len < PHP_JSON_DOUBLE_MAX_LENGTH - 2"		1009642	1		&&			
ANR	1009696	EqualityExpression	"strchr ( num , '.' ) == NULL"		1009642	0		==			
ANR	1009697	CallExpression	"strchr ( num , '.' )"		1009642	0					
ANR	1009698	Callee	strchr		1009642	0					
ANR	1009699	Identifier	strchr		1009642	0					
ANR	1009700	ArgumentList	num		1009642	1					
ANR	1009701	Argument	num		1009642	0					
ANR	1009702	Identifier	num		1009642	0					
ANR	1009703	Argument	'.'		1009642	1					
ANR	1009704	PrimaryExpression	'.'		1009642	0					
ANR	1009705	Identifier	NULL		1009642	1					
ANR	1009706	RelationalExpression	len < PHP_JSON_DOUBLE_MAX_LENGTH - 2		1009642	1		<			
ANR	1009707	Identifier	len		1009642	0					
ANR	1009708	AdditiveExpression	PHP_JSON_DOUBLE_MAX_LENGTH - 2		1009642	1		-			
ANR	1009709	Identifier	PHP_JSON_DOUBLE_MAX_LENGTH		1009642	0					
ANR	1009710	PrimaryExpression	2		1009642	1					
ANR	1009711	CompoundStatement		6:116:242:242	1009642	1					
ANR	1009712	ExpressionStatement	num [ len ++ ] = '.'	110:2:3223:3239	1009642	0	True				
ANR	1009713	AssignmentExpression	num [ len ++ ] = '.'		1009642	0		=			
ANR	1009714	ArrayIndexing	num [ len ++ ]		1009642	0					
ANR	1009715	Identifier	num		1009642	0					
ANR	1009716	PostIncDecOperationExpression	len ++		1009642	1					
ANR	1009717	Identifier	len		1009642	0					
ANR	1009718	IncDec	++		1009642	1					
ANR	1009719	PrimaryExpression	'.'		1009642	1					
ANR	1009720	ExpressionStatement	num [ len ++ ] = '0'	111:2:3243:3259	1009642	1	True				
ANR	1009721	AssignmentExpression	num [ len ++ ] = '0'		1009642	0		=			
ANR	1009722	ArrayIndexing	num [ len ++ ]		1009642	0					
ANR	1009723	Identifier	num		1009642	0					
ANR	1009724	PostIncDecOperationExpression	len ++		1009642	1					
ANR	1009725	Identifier	len		1009642	0					
ANR	1009726	IncDec	++		1009642	1					
ANR	1009727	PrimaryExpression	'0'		1009642	1					
ANR	1009728	ExpressionStatement	num [ len ] = '\\0'	112:2:3263:3278	1009642	2	True				
ANR	1009729	AssignmentExpression	num [ len ] = '\\0'		1009642	0		=			
ANR	1009730	ArrayIndexing	num [ len ]		1009642	0					
ANR	1009731	Identifier	num		1009642	0					
ANR	1009732	Identifier	len		1009642	1					
ANR	1009733	PrimaryExpression	'\\0'		1009642	1					
ANR	1009734	ExpressionStatement	"smart_str_appendl ( buf , num , len )"	114:1:3284:3316	1009642	5	True				
ANR	1009735	CallExpression	"smart_str_appendl ( buf , num , len )"		1009642	0					
ANR	1009736	Callee	smart_str_appendl		1009642	0					
ANR	1009737	Identifier	smart_str_appendl		1009642	0					
ANR	1009738	ArgumentList	buf		1009642	1					
ANR	1009739	Argument	buf		1009642	0					
ANR	1009740	Identifier	buf		1009642	0					
ANR	1009741	Argument	num		1009642	1					
ANR	1009742	Identifier	num		1009642	0					
ANR	1009743	Argument	len		1009642	2					
ANR	1009744	Identifier	len		1009642	0					
ANR	1009745	ReturnType	static inline void		1009642	1					
ANR	1009746	Identifier	php_json_encode_double		1009642	2					
ANR	1009747	ParameterList	"smart_str * buf , double d , int options"		1009642	3					
ANR	1009748	Parameter	smart_str * buf	103:42:2927:2940	1009642	0	True				
ANR	1009749	ParameterType	smart_str *		1009642	0					
ANR	1009750	Identifier	buf		1009642	1					
ANR	1009751	Parameter	double d	103:58:2943:2950	1009642	1	True				
ANR	1009752	ParameterType	double		1009642	0					
ANR	1009753	Identifier	d		1009642	1					
ANR	1009754	Parameter	int options	103:68:2953:2963	1009642	2	True				
ANR	1009755	ParameterType	int		1009642	0					
ANR	1009756	Identifier	options		1009642	1					
ANR	1009757	CFGEntryNode	ENTRY		1009642		True				
ANR	1009758	CFGExitNode	EXIT		1009642		True				
ANR	1009759	Symbol	EG		1009642						
ANR	1009760	Symbol	NULL		1009642						
ANR	1009761	Symbol	d		1009642						
ANR	1009762	Symbol	num		1009642						
ANR	1009763	Symbol	precision		1009642						
ANR	1009764	Symbol	strchr		1009642						
ANR	1009765	Symbol	* num		1009642						
ANR	1009766	Symbol	strlen		1009642						
ANR	1009767	Symbol	buf		1009642						
ANR	1009768	Symbol	len		1009642						
ANR	1009769	Symbol	options		1009642						
ANR	1009770	Symbol	PHP_JSON_PRESERVE_ZERO_FRACTION		1009642						
ANR	1009771	Symbol	PHP_JSON_DOUBLE_MAX_LENGTH		1009642						
ANR	1009772	Symbol	* len		1009642						
ANR	1009773	Function	php_json_encode_array	118:0:3331:6390							
ANR	1009774	FunctionDef	"php_json_encode_array (smart_str * buf , zval * val , int options)"		1009773	0					
ANR	1009775	CompoundStatement		119:0:3415:6390	1009773	0					
ANR	1009776	IdentifierDeclStatement	"int i , r , need_comma = 0 ;"	120:1:3418:3442	1009773	0	True				
ANR	1009777	IdentifierDecl	i		1009773	0					
ANR	1009778	IdentifierDeclType	int		1009773	0					
ANR	1009779	Identifier	i		1009773	1					
ANR	1009780	IdentifierDecl	r		1009773	1					
ANR	1009781	IdentifierDeclType	int		1009773	0					
ANR	1009782	Identifier	r		1009773	1					
ANR	1009783	IdentifierDecl	need_comma = 0		1009773	2					
ANR	1009784	IdentifierDeclType	int		1009773	0					
ANR	1009785	Identifier	need_comma		1009773	1					
ANR	1009786	AssignmentExpression	need_comma = 0		1009773	2		=			
ANR	1009787	Identifier	need_comma		1009773	0					
ANR	1009788	PrimaryExpression	0		1009773	1					
ANR	1009789	IdentifierDeclStatement	HashTable * myht ;	121:1:3445:3460	1009773	1	True				
ANR	1009790	IdentifierDecl	* myht		1009773	0					
ANR	1009791	IdentifierDeclType	HashTable *		1009773	0					
ANR	1009792	Identifier	myht		1009773	1					
ANR	1009793	IfStatement	if ( Z_TYPE_P ( val ) == IS_ARRAY )		1009773	2					
ANR	1009794	Condition	Z_TYPE_P ( val ) == IS_ARRAY	123:5:3468:3492	1009773	0	True				
ANR	1009795	EqualityExpression	Z_TYPE_P ( val ) == IS_ARRAY		1009773	0		==			
ANR	1009796	CallExpression	Z_TYPE_P ( val )		1009773	0					
ANR	1009797	Callee	Z_TYPE_P		1009773	0					
ANR	1009798	Identifier	Z_TYPE_P		1009773	0					
ANR	1009799	ArgumentList	val		1009773	1					
ANR	1009800	Argument	val		1009773	0					
ANR	1009801	Identifier	val		1009773	0					
ANR	1009802	Identifier	IS_ARRAY		1009773	1					
ANR	1009803	CompoundStatement		5:32:79:79	1009773	1					
ANR	1009804	ExpressionStatement	myht = Z_ARRVAL_P ( val )	124:2:3499:3521	1009773	0	True				
ANR	1009805	AssignmentExpression	myht = Z_ARRVAL_P ( val )		1009773	0		=			
ANR	1009806	Identifier	myht		1009773	0					
ANR	1009807	CallExpression	Z_ARRVAL_P ( val )		1009773	1					
ANR	1009808	Callee	Z_ARRVAL_P		1009773	0					
ANR	1009809	Identifier	Z_ARRVAL_P		1009773	0					
ANR	1009810	ArgumentList	val		1009773	1					
ANR	1009811	Argument	val		1009773	0					
ANR	1009812	Identifier	val		1009773	0					
ANR	1009813	ExpressionStatement	r = ( options & PHP_JSON_FORCE_OBJECT ) ? PHP_JSON_OUTPUT_OBJECT : php_json_determine_array_type ( val )	125:2:3525:3624	1009773	1	True				
ANR	1009814	AssignmentExpression	r = ( options & PHP_JSON_FORCE_OBJECT ) ? PHP_JSON_OUTPUT_OBJECT : php_json_determine_array_type ( val )		1009773	0		=			
ANR	1009815	Identifier	r		1009773	0					
ANR	1009816	ConditionalExpression	( options & PHP_JSON_FORCE_OBJECT ) ? PHP_JSON_OUTPUT_OBJECT : php_json_determine_array_type ( val )		1009773	1					
ANR	1009817	Condition	options & PHP_JSON_FORCE_OBJECT		1009773	0					
ANR	1009818	BitAndExpression	options & PHP_JSON_FORCE_OBJECT		1009773	0		&			
ANR	1009819	Identifier	options		1009773	0					
ANR	1009820	Identifier	PHP_JSON_FORCE_OBJECT		1009773	1					
ANR	1009821	Identifier	PHP_JSON_OUTPUT_OBJECT		1009773	1					
ANR	1009822	CallExpression	php_json_determine_array_type ( val )		1009773	2					
ANR	1009823	Callee	php_json_determine_array_type		1009773	0					
ANR	1009824	Identifier	php_json_determine_array_type		1009773	0					
ANR	1009825	ArgumentList	val		1009773	1					
ANR	1009826	Argument	val		1009773	0					
ANR	1009827	Identifier	val		1009773	0					
ANR	1009828	ElseStatement	else		1009773	0					
ANR	1009829	CompoundStatement		8:8:218:218	1009773	0					
ANR	1009830	ExpressionStatement	myht = Z_OBJPROP_P ( val )	127:2:3638:3661	1009773	0	True				
ANR	1009831	AssignmentExpression	myht = Z_OBJPROP_P ( val )		1009773	0		=			
ANR	1009832	Identifier	myht		1009773	0					
ANR	1009833	CallExpression	Z_OBJPROP_P ( val )		1009773	1					
ANR	1009834	Callee	Z_OBJPROP_P		1009773	0					
ANR	1009835	Identifier	Z_OBJPROP_P		1009773	0					
ANR	1009836	ArgumentList	val		1009773	1					
ANR	1009837	Argument	val		1009773	0					
ANR	1009838	Identifier	val		1009773	0					
ANR	1009839	ExpressionStatement	r = PHP_JSON_OUTPUT_OBJECT	128:2:3665:3691	1009773	1	True				
ANR	1009840	AssignmentExpression	r = PHP_JSON_OUTPUT_OBJECT		1009773	0		=			
ANR	1009841	Identifier	r		1009773	0					
ANR	1009842	Identifier	PHP_JSON_OUTPUT_OBJECT		1009773	1					
ANR	1009843	IfStatement	if ( myht && ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1 )		1009773	3					
ANR	1009844	Condition	myht && ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1	131:5:3702:3744	1009773	0	True				
ANR	1009845	AndExpression	myht && ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1		1009773	0		&&			
ANR	1009846	Identifier	myht		1009773	0					
ANR	1009847	RelationalExpression	ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1		1009773	1		>			
ANR	1009848	CallExpression	ZEND_HASH_GET_APPLY_COUNT ( myht )		1009773	0					
ANR	1009849	Callee	ZEND_HASH_GET_APPLY_COUNT		1009773	0					
ANR	1009850	Identifier	ZEND_HASH_GET_APPLY_COUNT		1009773	0					
ANR	1009851	ArgumentList	myht		1009773	1					
ANR	1009852	Argument	myht		1009773	0					
ANR	1009853	Identifier	myht		1009773	0					
ANR	1009854	PrimaryExpression	1		1009773	1					
ANR	1009855	CompoundStatement		13:50:331:331	1009773	1					
ANR	1009856	ExpressionStatement	JSON_G ( error_code ) = PHP_JSON_ERROR_RECURSION	132:2:3751:3796	1009773	0	True				
ANR	1009857	AssignmentExpression	JSON_G ( error_code ) = PHP_JSON_ERROR_RECURSION		1009773	0		=			
ANR	1009858	CallExpression	JSON_G ( error_code )		1009773	0					
ANR	1009859	Callee	JSON_G		1009773	0					
ANR	1009860	Identifier	JSON_G		1009773	0					
ANR	1009861	ArgumentList	error_code		1009773	1					
ANR	1009862	Argument	error_code		1009773	0					
ANR	1009863	Identifier	error_code		1009773	0					
ANR	1009864	Identifier	PHP_JSON_ERROR_RECURSION		1009773	1					
ANR	1009865	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , 4 )"	133:2:3800:3833	1009773	1	True				
ANR	1009866	CallExpression	"smart_str_appendl ( buf , ""null"" , 4 )"		1009773	0					
ANR	1009867	Callee	smart_str_appendl		1009773	0					
ANR	1009868	Identifier	smart_str_appendl		1009773	0					
ANR	1009869	ArgumentList	buf		1009773	1					
ANR	1009870	Argument	buf		1009773	0					
ANR	1009871	Identifier	buf		1009773	0					
ANR	1009872	Argument	"""null"""		1009773	1					
ANR	1009873	PrimaryExpression	"""null"""		1009773	0					
ANR	1009874	Argument	4		1009773	2					
ANR	1009875	PrimaryExpression	4		1009773	0					
ANR	1009876	ReturnStatement	return ;	134:2:3837:3843	1009773	2	True				
ANR	1009877	IfStatement	if ( r == PHP_JSON_OUTPUT_ARRAY )		1009773	4					
ANR	1009878	Condition	r == PHP_JSON_OUTPUT_ARRAY	137:5:3854:3879	1009773	0	True				
ANR	1009879	EqualityExpression	r == PHP_JSON_OUTPUT_ARRAY		1009773	0		==			
ANR	1009880	Identifier	r		1009773	0					
ANR	1009881	Identifier	PHP_JSON_OUTPUT_ARRAY		1009773	1					
ANR	1009882	CompoundStatement		19:33:466:466	1009773	1					
ANR	1009883	ExpressionStatement	"smart_str_appendc ( buf , '[' )"	138:2:3886:3913	1009773	0	True				
ANR	1009884	CallExpression	"smart_str_appendc ( buf , '[' )"		1009773	0					
ANR	1009885	Callee	smart_str_appendc		1009773	0					
ANR	1009886	Identifier	smart_str_appendc		1009773	0					
ANR	1009887	ArgumentList	buf		1009773	1					
ANR	1009888	Argument	buf		1009773	0					
ANR	1009889	Identifier	buf		1009773	0					
ANR	1009890	Argument	'['		1009773	1					
ANR	1009891	PrimaryExpression	'['		1009773	0					
ANR	1009892	ElseStatement	else		1009773	0					
ANR	1009893	CompoundStatement		21:8:507:507	1009773	0					
ANR	1009894	ExpressionStatement	"smart_str_appendc ( buf , '{' )"	140:2:3927:3954	1009773	0	True				
ANR	1009895	CallExpression	"smart_str_appendc ( buf , '{' )"		1009773	0					
ANR	1009896	Callee	smart_str_appendc		1009773	0					
ANR	1009897	Identifier	smart_str_appendc		1009773	0					
ANR	1009898	ArgumentList	buf		1009773	1					
ANR	1009899	Argument	buf		1009773	0					
ANR	1009900	Identifier	buf		1009773	0					
ANR	1009901	Argument	'{'		1009773	1					
ANR	1009902	PrimaryExpression	'{'		1009773	0					
ANR	1009903	ExpressionStatement	++ JSON_G ( encoder_depth )	143:1:3961:3984	1009773	5	True				
ANR	1009904	UnaryExpression	++ JSON_G ( encoder_depth )		1009773	0					
ANR	1009905	IncDec	++		1009773	0					
ANR	1009906	CallExpression	JSON_G ( encoder_depth )		1009773	1					
ANR	1009907	Callee	JSON_G		1009773	0					
ANR	1009908	Identifier	JSON_G		1009773	0					
ANR	1009909	ArgumentList	encoder_depth		1009773	1					
ANR	1009910	Argument	encoder_depth		1009773	0					
ANR	1009911	Identifier	encoder_depth		1009773	0					
ANR	1009912	ExpressionStatement	i = myht ? zend_hash_num_elements ( myht ) : 0	145:1:3988:4031	1009773	6	True				
ANR	1009913	AssignmentExpression	i = myht ? zend_hash_num_elements ( myht ) : 0		1009773	0		=			
ANR	1009914	Identifier	i		1009773	0					
ANR	1009915	ConditionalExpression	myht ? zend_hash_num_elements ( myht ) : 0		1009773	1					
ANR	1009916	Condition	myht		1009773	0					
ANR	1009917	Identifier	myht		1009773	0					
ANR	1009918	CallExpression	zend_hash_num_elements ( myht )		1009773	1					
ANR	1009919	Callee	zend_hash_num_elements		1009773	0					
ANR	1009920	Identifier	zend_hash_num_elements		1009773	0					
ANR	1009921	ArgumentList	myht		1009773	1					
ANR	1009922	Argument	myht		1009773	0					
ANR	1009923	Identifier	myht		1009773	0					
ANR	1009924	PrimaryExpression	0		1009773	2					
ANR	1009925	IfStatement	if ( i > 0 )		1009773	7					
ANR	1009926	Condition	i > 0	147:5:4039:4043	1009773	0	True				
ANR	1009927	RelationalExpression	i > 0		1009773	0		>			
ANR	1009928	Identifier	i		1009773	0					
ANR	1009929	PrimaryExpression	0		1009773	1					
ANR	1009930	CompoundStatement		33:2:688:705	1009773	1					
ANR	1009931	IdentifierDeclStatement	zend_string * key ;	148:2:4050:4066	1009773	0	True				
ANR	1009932	IdentifierDecl	* key		1009773	0					
ANR	1009933	IdentifierDeclType	zend_string *		1009773	0					
ANR	1009934	Identifier	key		1009773	1					
ANR	1009935	IdentifierDeclStatement	zval * data ;	149:2:4070:4080	1009773	1	True				
ANR	1009936	IdentifierDecl	* data		1009773	0					
ANR	1009937	IdentifierDeclType	zval *		1009773	0					
ANR	1009938	Identifier	data		1009773	1					
ANR	1009939	IdentifierDeclStatement	zend_ulong index ;	150:2:4084:4100	1009773	2	True				
ANR	1009940	IdentifierDecl	index		1009773	0					
ANR	1009941	IdentifierDeclType	zend_ulong		1009773	0					
ANR	1009942	Identifier	index		1009773	1					
ANR	1009943	IdentifierDeclStatement	HashTable * tmp_ht ;	151:2:4104:4121	1009773	3	True				
ANR	1009944	IdentifierDecl	* tmp_ht		1009773	0					
ANR	1009945	IdentifierDeclType	HashTable *		1009773	0					
ANR	1009946	Identifier	tmp_ht		1009773	1					
ANR	1009947	Statement	ZEND_HASH_FOREACH_KEY_VAL_IND	153:2:4126:4154	1009773	4	True				
ANR	1009948	Statement	(	153:31:4155:4155	1009773	5	True				
ANR	1009949	Statement	myht	153:32:4156:4159	1009773	6	True				
ANR	1009950	Statement	","	153:36:4160:4160	1009773	7	True				
ANR	1009951	Statement	index	153:38:4162:4166	1009773	8	True				
ANR	1009952	Statement	","	153:43:4167:4167	1009773	9	True				
ANR	1009953	Statement	key	153:45:4169:4171	1009773	10	True				
ANR	1009954	Statement	","	153:48:4172:4172	1009773	11	True				
ANR	1009955	Statement	data	153:50:4174:4177	1009773	12	True				
ANR	1009956	Statement	)	153:54:4178:4178	1009773	13	True				
ANR	1009957	CompoundStatement		35:56:764:764	1009773	14					
ANR	1009958	ExpressionStatement	ZVAL_DEREF ( data )	154:3:4185:4201	1009773	0	True				
ANR	1009959	CallExpression	ZVAL_DEREF ( data )		1009773	0					
ANR	1009960	Callee	ZVAL_DEREF		1009773	0					
ANR	1009961	Identifier	ZVAL_DEREF		1009773	0					
ANR	1009962	ArgumentList	data		1009773	1					
ANR	1009963	Argument	data		1009773	0					
ANR	1009964	Identifier	data		1009773	0					
ANR	1009965	ExpressionStatement	tmp_ht = HASH_OF ( data )	155:3:4206:4228	1009773	1	True				
ANR	1009966	AssignmentExpression	tmp_ht = HASH_OF ( data )		1009773	0		=			
ANR	1009967	Identifier	tmp_ht		1009773	0					
ANR	1009968	CallExpression	HASH_OF ( data )		1009773	1					
ANR	1009969	Callee	HASH_OF		1009773	0					
ANR	1009970	Identifier	HASH_OF		1009773	0					
ANR	1009971	ArgumentList	data		1009773	1					
ANR	1009972	Argument	data		1009773	0					
ANR	1009973	Identifier	data		1009773	0					
ANR	1009974	IfStatement	if ( tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht ) )		1009773	2					
ANR	1009975	Condition	tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht )	156:7:4237:4280	1009773	0	True				
ANR	1009976	AndExpression	tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht )		1009773	0		&&			
ANR	1009977	Identifier	tmp_ht		1009773	0					
ANR	1009978	CallExpression	ZEND_HASH_APPLY_PROTECTION ( tmp_ht )		1009773	1					
ANR	1009979	Callee	ZEND_HASH_APPLY_PROTECTION		1009773	0					
ANR	1009980	Identifier	ZEND_HASH_APPLY_PROTECTION		1009773	0					
ANR	1009981	ArgumentList	tmp_ht		1009773	1					
ANR	1009982	Argument	tmp_ht		1009773	0					
ANR	1009983	Identifier	tmp_ht		1009773	0					
ANR	1009984	CompoundStatement		38:53:867:867	1009773	1					
ANR	1009985	ExpressionStatement	ZEND_HASH_INC_APPLY_COUNT ( tmp_ht )	157:4:4289:4322	1009773	0	True				
ANR	1009986	CallExpression	ZEND_HASH_INC_APPLY_COUNT ( tmp_ht )		1009773	0					
ANR	1009987	Callee	ZEND_HASH_INC_APPLY_COUNT		1009773	0					
ANR	1009988	Identifier	ZEND_HASH_INC_APPLY_COUNT		1009773	0					
ANR	1009989	ArgumentList	tmp_ht		1009773	1					
ANR	1009990	Argument	tmp_ht		1009773	0					
ANR	1009991	Identifier	tmp_ht		1009773	0					
ANR	1009992	IfStatement	if ( r == PHP_JSON_OUTPUT_ARRAY )		1009773	3					
ANR	1009993	Condition	r == PHP_JSON_OUTPUT_ARRAY	160:7:4337:4362	1009773	0	True				
ANR	1009994	EqualityExpression	r == PHP_JSON_OUTPUT_ARRAY		1009773	0		==			
ANR	1009995	Identifier	r		1009773	0					
ANR	1009996	Identifier	PHP_JSON_OUTPUT_ARRAY		1009773	1					
ANR	1009997	CompoundStatement		42:35:949:949	1009773	1					
ANR	1009998	IfStatement	if ( need_comma )		1009773	0					
ANR	1009999	Condition	need_comma	161:8:4375:4384	1009773	0	True				
ANR	1010000	Identifier	need_comma		1009773	0					
ANR	1010001	CompoundStatement		43:20:971:971	1009773	1					
ANR	1010002	ExpressionStatement	"smart_str_appendc ( buf , ',' )"	162:5:4394:4421	1009773	0	True				
ANR	1010003	CallExpression	"smart_str_appendc ( buf , ',' )"		1009773	0					
ANR	1010004	Callee	smart_str_appendc		1009773	0					
ANR	1010005	Identifier	smart_str_appendc		1009773	0					
ANR	1010006	ArgumentList	buf		1009773	1					
ANR	1010007	Argument	buf		1009773	0					
ANR	1010008	Identifier	buf		1009773	0					
ANR	1010009	Argument	"','"		1009773	1					
ANR	1010010	PrimaryExpression	"','"		1009773	0					
ANR	1010011	ElseStatement	else		1009773	0					
ANR	1010012	CompoundStatement		45:11:1018:1018	1009773	0					
ANR	1010013	ExpressionStatement	need_comma = 1	164:5:4441:4455	1009773	0	True				
ANR	1010014	AssignmentExpression	need_comma = 1		1009773	0		=			
ANR	1010015	Identifier	need_comma		1009773	0					
ANR	1010016	PrimaryExpression	1		1009773	1					
ANR	1010017	ExpressionStatement	"php_json_pretty_print_char ( buf , options , '\\n' )"	167:4:4468:4514	1009773	1	True				
ANR	1010018	CallExpression	"php_json_pretty_print_char ( buf , options , '\\n' )"		1009773	0					
ANR	1010019	Callee	php_json_pretty_print_char		1009773	0					
ANR	1010020	Identifier	php_json_pretty_print_char		1009773	0					
ANR	1010021	ArgumentList	buf		1009773	1					
ANR	1010022	Argument	buf		1009773	0					
ANR	1010023	Identifier	buf		1009773	0					
ANR	1010024	Argument	options		1009773	1					
ANR	1010025	Identifier	options		1009773	0					
ANR	1010026	Argument	'\\n'		1009773	2					
ANR	1010027	PrimaryExpression	'\\n'		1009773	0					
ANR	1010028	ExpressionStatement	"php_json_pretty_print_indent ( buf , options )"	168:4:4520:4562	1009773	2	True				
ANR	1010029	CallExpression	"php_json_pretty_print_indent ( buf , options )"		1009773	0					
ANR	1010030	Callee	php_json_pretty_print_indent		1009773	0					
ANR	1010031	Identifier	php_json_pretty_print_indent		1009773	0					
ANR	1010032	ArgumentList	buf		1009773	1					
ANR	1010033	Argument	buf		1009773	0					
ANR	1010034	Identifier	buf		1009773	0					
ANR	1010035	Argument	options		1009773	1					
ANR	1010036	Identifier	options		1009773	0					
ANR	1010037	ExpressionStatement	"php_json_encode ( buf , data , options )"	169:4:4568:4603	1009773	3	True				
ANR	1010038	CallExpression	"php_json_encode ( buf , data , options )"		1009773	0					
ANR	1010039	Callee	php_json_encode		1009773	0					
ANR	1010040	Identifier	php_json_encode		1009773	0					
ANR	1010041	ArgumentList	buf		1009773	1					
ANR	1010042	Argument	buf		1009773	0					
ANR	1010043	Identifier	buf		1009773	0					
ANR	1010044	Argument	data		1009773	1					
ANR	1010045	Identifier	data		1009773	0					
ANR	1010046	Argument	options		1009773	2					
ANR	1010047	Identifier	options		1009773	0					
ANR	1010048	ElseStatement	else		1009773	0					
ANR	1010049	IfStatement	if ( r == PHP_JSON_OUTPUT_OBJECT )		1009773	0					
ANR	1010050	Condition	r == PHP_JSON_OUTPUT_OBJECT	170:14:4619:4645	1009773	0	True				
ANR	1010051	EqualityExpression	r == PHP_JSON_OUTPUT_OBJECT		1009773	0		==			
ANR	1010052	Identifier	r		1009773	0					
ANR	1010053	Identifier	PHP_JSON_OUTPUT_OBJECT		1009773	1					
ANR	1010054	CompoundStatement		52:43:1232:1232	1009773	1					
ANR	1010055	IfStatement	if ( key )		1009773	0					
ANR	1010056	Condition	key	171:8:4658:4660	1009773	0	True				
ANR	1010057	Identifier	key		1009773	0					
ANR	1010058	CompoundStatement		53:13:1247:1247	1009773	1					
ANR	1010059	IfStatement	if ( ZSTR_VAL ( key ) [ 0 ] == '\\0' && Z_TYPE_P ( val ) == IS_OBJECT )		1009773	0					
ANR	1010060	Condition	ZSTR_VAL ( key ) [ 0 ] == '\\0' && Z_TYPE_P ( val ) == IS_OBJECT	172:9:4674:4727	1009773	0	True				
ANR	1010061	AndExpression	ZSTR_VAL ( key ) [ 0 ] == '\\0' && Z_TYPE_P ( val ) == IS_OBJECT		1009773	0		&&			
ANR	1010062	EqualityExpression	ZSTR_VAL ( key ) [ 0 ] == '\\0'		1009773	0		==			
ANR	1010063	ArrayIndexing	ZSTR_VAL ( key ) [ 0 ]		1009773	0					
ANR	1010064	CallExpression	ZSTR_VAL ( key )		1009773	0					
ANR	1010065	Callee	ZSTR_VAL		1009773	0					
ANR	1010066	Identifier	ZSTR_VAL		1009773	0					
ANR	1010067	ArgumentList	key		1009773	1					
ANR	1010068	Argument	key		1009773	0					
ANR	1010069	Identifier	key		1009773	0					
ANR	1010070	PrimaryExpression	0		1009773	1					
ANR	1010071	PrimaryExpression	'\\0'		1009773	1					
ANR	1010072	EqualityExpression	Z_TYPE_P ( val ) == IS_OBJECT		1009773	1		==			
ANR	1010073	CallExpression	Z_TYPE_P ( val )		1009773	0					
ANR	1010074	Callee	Z_TYPE_P		1009773	0					
ANR	1010075	Identifier	Z_TYPE_P		1009773	0					
ANR	1010076	ArgumentList	val		1009773	1					
ANR	1010077	Argument	val		1009773	0					
ANR	1010078	Identifier	val		1009773	0					
ANR	1010079	Identifier	IS_OBJECT		1009773	1					
ANR	1010080	CompoundStatement		54:65:1314:1314	1009773	1					
ANR	1010081	IfStatement	if ( tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht ) )		1009773	0					
ANR	1010082	Condition	tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht )	174:10:4790:4833	1009773	0	True				
ANR	1010083	AndExpression	tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht )		1009773	0		&&			
ANR	1010084	Identifier	tmp_ht		1009773	0					
ANR	1010085	CallExpression	ZEND_HASH_APPLY_PROTECTION ( tmp_ht )		1009773	1					
ANR	1010086	Callee	ZEND_HASH_APPLY_PROTECTION		1009773	0					
ANR	1010087	Identifier	ZEND_HASH_APPLY_PROTECTION		1009773	0					
ANR	1010088	ArgumentList	tmp_ht		1009773	1					
ANR	1010089	Argument	tmp_ht		1009773	0					
ANR	1010090	Identifier	tmp_ht		1009773	0					
ANR	1010091	CompoundStatement		56:56:1420:1420	1009773	1					
ANR	1010092	ExpressionStatement	ZEND_HASH_DEC_APPLY_COUNT ( tmp_ht )	175:7:4845:4878	1009773	0	True				
ANR	1010093	CallExpression	ZEND_HASH_DEC_APPLY_COUNT ( tmp_ht )		1009773	0					
ANR	1010094	Callee	ZEND_HASH_DEC_APPLY_COUNT		1009773	0					
ANR	1010095	Identifier	ZEND_HASH_DEC_APPLY_COUNT		1009773	0					
ANR	1010096	ArgumentList	tmp_ht		1009773	1					
ANR	1010097	Argument	tmp_ht		1009773	0					
ANR	1010098	Identifier	tmp_ht		1009773	0					
ANR	1010099	ContinueStatement	continue ;	177:6:4894:4902	1009773	1	True				
ANR	1010100	IfStatement	if ( need_comma )		1009773	1					
ANR	1010101	Condition	need_comma	180:9:4921:4930	1009773	0	True				
ANR	1010102	Identifier	need_comma		1009773	0					
ANR	1010103	CompoundStatement		62:21:1517:1517	1009773	1					
ANR	1010104	ExpressionStatement	"smart_str_appendc ( buf , ',' )"	181:6:4941:4968	1009773	0	True				
ANR	1010105	CallExpression	"smart_str_appendc ( buf , ',' )"		1009773	0					
ANR	1010106	Callee	smart_str_appendc		1009773	0					
ANR	1010107	Identifier	smart_str_appendc		1009773	0					
ANR	1010108	ArgumentList	buf		1009773	1					
ANR	1010109	Argument	buf		1009773	0					
ANR	1010110	Identifier	buf		1009773	0					
ANR	1010111	Argument	"','"		1009773	1					
ANR	1010112	PrimaryExpression	"','"		1009773	0					
ANR	1010113	ElseStatement	else		1009773	0					
ANR	1010114	CompoundStatement		64:12:1566:1566	1009773	0					
ANR	1010115	ExpressionStatement	need_comma = 1	183:6:4990:5004	1009773	0	True				
ANR	1010116	AssignmentExpression	need_comma = 1		1009773	0		=			
ANR	1010117	Identifier	need_comma		1009773	0					
ANR	1010118	PrimaryExpression	1		1009773	1					
ANR	1010119	ExpressionStatement	"php_json_pretty_print_char ( buf , options , '\\n' )"	186:5:5019:5065	1009773	2	True				
ANR	1010120	CallExpression	"php_json_pretty_print_char ( buf , options , '\\n' )"		1009773	0					
ANR	1010121	Callee	php_json_pretty_print_char		1009773	0					
ANR	1010122	Identifier	php_json_pretty_print_char		1009773	0					
ANR	1010123	ArgumentList	buf		1009773	1					
ANR	1010124	Argument	buf		1009773	0					
ANR	1010125	Identifier	buf		1009773	0					
ANR	1010126	Argument	options		1009773	1					
ANR	1010127	Identifier	options		1009773	0					
ANR	1010128	Argument	'\\n'		1009773	2					
ANR	1010129	PrimaryExpression	'\\n'		1009773	0					
ANR	1010130	ExpressionStatement	"php_json_pretty_print_indent ( buf , options )"	187:5:5072:5114	1009773	3	True				
ANR	1010131	CallExpression	"php_json_pretty_print_indent ( buf , options )"		1009773	0					
ANR	1010132	Callee	php_json_pretty_print_indent		1009773	0					
ANR	1010133	Identifier	php_json_pretty_print_indent		1009773	0					
ANR	1010134	ArgumentList	buf		1009773	1					
ANR	1010135	Argument	buf		1009773	0					
ANR	1010136	Identifier	buf		1009773	0					
ANR	1010137	Argument	options		1009773	1					
ANR	1010138	Identifier	options		1009773	0					
ANR	1010139	ExpressionStatement	"php_json_escape_string ( buf , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) , options & ~PHP_JSON_NUMERIC_CHECK )"	189:5:5122:5214	1009773	4	True				
ANR	1010140	CallExpression	"php_json_escape_string ( buf , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) , options & ~PHP_JSON_NUMERIC_CHECK )"		1009773	0					
ANR	1010141	Callee	php_json_escape_string		1009773	0					
ANR	1010142	Identifier	php_json_escape_string		1009773	0					
ANR	1010143	ArgumentList	buf		1009773	1					
ANR	1010144	Argument	buf		1009773	0					
ANR	1010145	Identifier	buf		1009773	0					
ANR	1010146	Argument	ZSTR_VAL ( key )		1009773	1					
ANR	1010147	CallExpression	ZSTR_VAL ( key )		1009773	0					
ANR	1010148	Callee	ZSTR_VAL		1009773	0					
ANR	1010149	Identifier	ZSTR_VAL		1009773	0					
ANR	1010150	ArgumentList	key		1009773	1					
ANR	1010151	Argument	key		1009773	0					
ANR	1010152	Identifier	key		1009773	0					
ANR	1010153	Argument	ZSTR_LEN ( key )		1009773	2					
ANR	1010154	CallExpression	ZSTR_LEN ( key )		1009773	0					
ANR	1010155	Callee	ZSTR_LEN		1009773	0					
ANR	1010156	Identifier	ZSTR_LEN		1009773	0					
ANR	1010157	ArgumentList	key		1009773	1					
ANR	1010158	Argument	key		1009773	0					
ANR	1010159	Identifier	key		1009773	0					
ANR	1010160	Argument	options & ~PHP_JSON_NUMERIC_CHECK		1009773	3					
ANR	1010161	BitAndExpression	options & ~PHP_JSON_NUMERIC_CHECK		1009773	0		&			
ANR	1010162	Identifier	options		1009773	0					
ANR	1010163	Identifier	~PHP_JSON_NUMERIC_CHECK		1009773	1					
ANR	1010164	ExpressionStatement	"smart_str_appendc ( buf , ':' )"	190:5:5221:5248	1009773	5	True				
ANR	1010165	CallExpression	"smart_str_appendc ( buf , ':' )"		1009773	0					
ANR	1010166	Callee	smart_str_appendc		1009773	0					
ANR	1010167	Identifier	smart_str_appendc		1009773	0					
ANR	1010168	ArgumentList	buf		1009773	1					
ANR	1010169	Argument	buf		1009773	0					
ANR	1010170	Identifier	buf		1009773	0					
ANR	1010171	Argument	':'		1009773	1					
ANR	1010172	PrimaryExpression	':'		1009773	0					
ANR	1010173	ExpressionStatement	"php_json_pretty_print_char ( buf , options , ' ' )"	192:5:5256:5301	1009773	6	True				
ANR	1010174	CallExpression	"php_json_pretty_print_char ( buf , options , ' ' )"		1009773	0					
ANR	1010175	Callee	php_json_pretty_print_char		1009773	0					
ANR	1010176	Identifier	php_json_pretty_print_char		1009773	0					
ANR	1010177	ArgumentList	buf		1009773	1					
ANR	1010178	Argument	buf		1009773	0					
ANR	1010179	Identifier	buf		1009773	0					
ANR	1010180	Argument	options		1009773	1					
ANR	1010181	Identifier	options		1009773	0					
ANR	1010182	Argument	' '		1009773	2					
ANR	1010183	PrimaryExpression	' '		1009773	0					
ANR	1010184	ExpressionStatement	"php_json_encode ( buf , data , options )"	194:5:5309:5344	1009773	7	True				
ANR	1010185	CallExpression	"php_json_encode ( buf , data , options )"		1009773	0					
ANR	1010186	Callee	php_json_encode		1009773	0					
ANR	1010187	Identifier	php_json_encode		1009773	0					
ANR	1010188	ArgumentList	buf		1009773	1					
ANR	1010189	Argument	buf		1009773	0					
ANR	1010190	Identifier	buf		1009773	0					
ANR	1010191	Argument	data		1009773	1					
ANR	1010192	Identifier	data		1009773	0					
ANR	1010193	Argument	options		1009773	2					
ANR	1010194	Identifier	options		1009773	0					
ANR	1010195	ElseStatement	else		1009773	0					
ANR	1010196	CompoundStatement		77:11:1941:1941	1009773	0					
ANR	1010197	IfStatement	if ( need_comma )		1009773	0					
ANR	1010198	Condition	need_comma	196:9:5368:5377	1009773	0	True				
ANR	1010199	Identifier	need_comma		1009773	0					
ANR	1010200	CompoundStatement		78:21:1964:1964	1009773	1					
ANR	1010201	ExpressionStatement	"smart_str_appendc ( buf , ',' )"	197:6:5388:5415	1009773	0	True				
ANR	1010202	CallExpression	"smart_str_appendc ( buf , ',' )"		1009773	0					
ANR	1010203	Callee	smart_str_appendc		1009773	0					
ANR	1010204	Identifier	smart_str_appendc		1009773	0					
ANR	1010205	ArgumentList	buf		1009773	1					
ANR	1010206	Argument	buf		1009773	0					
ANR	1010207	Identifier	buf		1009773	0					
ANR	1010208	Argument	"','"		1009773	1					
ANR	1010209	PrimaryExpression	"','"		1009773	0					
ANR	1010210	ElseStatement	else		1009773	0					
ANR	1010211	CompoundStatement		80:12:2013:2013	1009773	0					
ANR	1010212	ExpressionStatement	need_comma = 1	199:6:5437:5451	1009773	0	True				
ANR	1010213	AssignmentExpression	need_comma = 1		1009773	0		=			
ANR	1010214	Identifier	need_comma		1009773	0					
ANR	1010215	PrimaryExpression	1		1009773	1					
ANR	1010216	ExpressionStatement	"php_json_pretty_print_char ( buf , options , '\\n' )"	202:5:5466:5512	1009773	1	True				
ANR	1010217	CallExpression	"php_json_pretty_print_char ( buf , options , '\\n' )"		1009773	0					
ANR	1010218	Callee	php_json_pretty_print_char		1009773	0					
ANR	1010219	Identifier	php_json_pretty_print_char		1009773	0					
ANR	1010220	ArgumentList	buf		1009773	1					
ANR	1010221	Argument	buf		1009773	0					
ANR	1010222	Identifier	buf		1009773	0					
ANR	1010223	Argument	options		1009773	1					
ANR	1010224	Identifier	options		1009773	0					
ANR	1010225	Argument	'\\n'		1009773	2					
ANR	1010226	PrimaryExpression	'\\n'		1009773	0					
ANR	1010227	ExpressionStatement	"php_json_pretty_print_indent ( buf , options )"	203:5:5519:5561	1009773	2	True				
ANR	1010228	CallExpression	"php_json_pretty_print_indent ( buf , options )"		1009773	0					
ANR	1010229	Callee	php_json_pretty_print_indent		1009773	0					
ANR	1010230	Identifier	php_json_pretty_print_indent		1009773	0					
ANR	1010231	ArgumentList	buf		1009773	1					
ANR	1010232	Argument	buf		1009773	0					
ANR	1010233	Identifier	buf		1009773	0					
ANR	1010234	Argument	options		1009773	1					
ANR	1010235	Identifier	options		1009773	0					
ANR	1010236	ExpressionStatement	"smart_str_appendc ( buf , '""' )"	205:5:5569:5596	1009773	3	True				
ANR	1010237	CallExpression	"smart_str_appendc ( buf , '""' )"		1009773	0					
ANR	1010238	Callee	smart_str_appendc		1009773	0					
ANR	1010239	Identifier	smart_str_appendc		1009773	0					
ANR	1010240	ArgumentList	buf		1009773	1					
ANR	1010241	Argument	buf		1009773	0					
ANR	1010242	Identifier	buf		1009773	0					
ANR	1010243	Argument	"'""'"		1009773	1					
ANR	1010244	PrimaryExpression	"'""'"		1009773	0					
ANR	1010245	ExpressionStatement	"smart_str_append_long ( buf , ( zend_long ) index )"	206:5:5603:5648	1009773	4	True				
ANR	1010246	CallExpression	"smart_str_append_long ( buf , ( zend_long ) index )"		1009773	0					
ANR	1010247	Callee	smart_str_append_long		1009773	0					
ANR	1010248	Identifier	smart_str_append_long		1009773	0					
ANR	1010249	ArgumentList	buf		1009773	1					
ANR	1010250	Argument	buf		1009773	0					
ANR	1010251	Identifier	buf		1009773	0					
ANR	1010252	Argument	( zend_long ) index		1009773	1					
ANR	1010253	CastExpression	( zend_long ) index		1009773	0					
ANR	1010254	CastTarget	zend_long		1009773	0					
ANR	1010255	Identifier	index		1009773	1					
ANR	1010256	ExpressionStatement	"smart_str_appendc ( buf , '""' )"	207:5:5655:5682	1009773	5	True				
ANR	1010257	CallExpression	"smart_str_appendc ( buf , '""' )"		1009773	0					
ANR	1010258	Callee	smart_str_appendc		1009773	0					
ANR	1010259	Identifier	smart_str_appendc		1009773	0					
ANR	1010260	ArgumentList	buf		1009773	1					
ANR	1010261	Argument	buf		1009773	0					
ANR	1010262	Identifier	buf		1009773	0					
ANR	1010263	Argument	"'""'"		1009773	1					
ANR	1010264	PrimaryExpression	"'""'"		1009773	0					
ANR	1010265	ExpressionStatement	"smart_str_appendc ( buf , ':' )"	208:5:5689:5716	1009773	6	True				
ANR	1010266	CallExpression	"smart_str_appendc ( buf , ':' )"		1009773	0					
ANR	1010267	Callee	smart_str_appendc		1009773	0					
ANR	1010268	Identifier	smart_str_appendc		1009773	0					
ANR	1010269	ArgumentList	buf		1009773	1					
ANR	1010270	Argument	buf		1009773	0					
ANR	1010271	Identifier	buf		1009773	0					
ANR	1010272	Argument	':'		1009773	1					
ANR	1010273	PrimaryExpression	':'		1009773	0					
ANR	1010274	ExpressionStatement	"php_json_pretty_print_char ( buf , options , ' ' )"	210:5:5724:5769	1009773	7	True				
ANR	1010275	CallExpression	"php_json_pretty_print_char ( buf , options , ' ' )"		1009773	0					
ANR	1010276	Callee	php_json_pretty_print_char		1009773	0					
ANR	1010277	Identifier	php_json_pretty_print_char		1009773	0					
ANR	1010278	ArgumentList	buf		1009773	1					
ANR	1010279	Argument	buf		1009773	0					
ANR	1010280	Identifier	buf		1009773	0					
ANR	1010281	Argument	options		1009773	1					
ANR	1010282	Identifier	options		1009773	0					
ANR	1010283	Argument	' '		1009773	2					
ANR	1010284	PrimaryExpression	' '		1009773	0					
ANR	1010285	ExpressionStatement	"php_json_encode ( buf , data , options )"	212:5:5777:5812	1009773	8	True				
ANR	1010286	CallExpression	"php_json_encode ( buf , data , options )"		1009773	0					
ANR	1010287	Callee	php_json_encode		1009773	0					
ANR	1010288	Identifier	php_json_encode		1009773	0					
ANR	1010289	ArgumentList	buf		1009773	1					
ANR	1010290	Argument	buf		1009773	0					
ANR	1010291	Identifier	buf		1009773	0					
ANR	1010292	Argument	data		1009773	1					
ANR	1010293	Identifier	data		1009773	0					
ANR	1010294	Argument	options		1009773	2					
ANR	1010295	Identifier	options		1009773	0					
ANR	1010296	IfStatement	if ( tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht ) )		1009773	4					
ANR	1010297	Condition	tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht )	216:7:5833:5876	1009773	0	True				
ANR	1010298	AndExpression	tmp_ht && ZEND_HASH_APPLY_PROTECTION ( tmp_ht )		1009773	0		&&			
ANR	1010299	Identifier	tmp_ht		1009773	0					
ANR	1010300	CallExpression	ZEND_HASH_APPLY_PROTECTION ( tmp_ht )		1009773	1					
ANR	1010301	Callee	ZEND_HASH_APPLY_PROTECTION		1009773	0					
ANR	1010302	Identifier	ZEND_HASH_APPLY_PROTECTION		1009773	0					
ANR	1010303	ArgumentList	tmp_ht		1009773	1					
ANR	1010304	Argument	tmp_ht		1009773	0					
ANR	1010305	Identifier	tmp_ht		1009773	0					
ANR	1010306	CompoundStatement		98:53:2463:2463	1009773	1					
ANR	1010307	ExpressionStatement	ZEND_HASH_DEC_APPLY_COUNT ( tmp_ht )	217:4:5885:5918	1009773	0	True				
ANR	1010308	CallExpression	ZEND_HASH_DEC_APPLY_COUNT ( tmp_ht )		1009773	0					
ANR	1010309	Callee	ZEND_HASH_DEC_APPLY_COUNT		1009773	0					
ANR	1010310	Identifier	ZEND_HASH_DEC_APPLY_COUNT		1009773	0					
ANR	1010311	ArgumentList	tmp_ht		1009773	1					
ANR	1010312	Argument	tmp_ht		1009773	0					
ANR	1010313	Identifier	tmp_ht		1009773	0					
ANR	1010314	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	219:4:5929:5952	1009773	15	True				
ANR	1010315	CallExpression	ZEND_HASH_FOREACH_END ( )		1009773	0					
ANR	1010316	Callee	ZEND_HASH_FOREACH_END		1009773	0					
ANR	1010317	Identifier	ZEND_HASH_FOREACH_END		1009773	0					
ANR	1010318	ArgumentList			1009773	1					
ANR	1010319	IfStatement	if ( JSON_G ( encoder_depth ) > JSON_G ( encode_max_depth ) )		1009773	8					
ANR	1010320	Condition	JSON_G ( encoder_depth ) > JSON_G ( encode_max_depth )	222:5:5963:6010	1009773	0	True				
ANR	1010321	RelationalExpression	JSON_G ( encoder_depth ) > JSON_G ( encode_max_depth )		1009773	0		>			
ANR	1010322	CallExpression	JSON_G ( encoder_depth )		1009773	0					
ANR	1010323	Callee	JSON_G		1009773	0					
ANR	1010324	Identifier	JSON_G		1009773	0					
ANR	1010325	ArgumentList	encoder_depth		1009773	1					
ANR	1010326	Argument	encoder_depth		1009773	0					
ANR	1010327	Identifier	encoder_depth		1009773	0					
ANR	1010328	CallExpression	JSON_G ( encode_max_depth )		1009773	1					
ANR	1010329	Callee	JSON_G		1009773	0					
ANR	1010330	Identifier	JSON_G		1009773	0					
ANR	1010331	ArgumentList	encode_max_depth		1009773	1					
ANR	1010332	Argument	encode_max_depth		1009773	0					
ANR	1010333	Identifier	encode_max_depth		1009773	0					
ANR	1010334	CompoundStatement		104:55:2597:2597	1009773	1					
ANR	1010335	ExpressionStatement	JSON_G ( error_code ) = PHP_JSON_ERROR_DEPTH	223:2:6017:6058	1009773	0	True				
ANR	1010336	AssignmentExpression	JSON_G ( error_code ) = PHP_JSON_ERROR_DEPTH		1009773	0		=			
ANR	1010337	CallExpression	JSON_G ( error_code )		1009773	0					
ANR	1010338	Callee	JSON_G		1009773	0					
ANR	1010339	Identifier	JSON_G		1009773	0					
ANR	1010340	ArgumentList	error_code		1009773	1					
ANR	1010341	Argument	error_code		1009773	0					
ANR	1010342	Identifier	error_code		1009773	0					
ANR	1010343	Identifier	PHP_JSON_ERROR_DEPTH		1009773	1					
ANR	1010344	ExpressionStatement	-- JSON_G ( encoder_depth )	225:1:6064:6087	1009773	9	True				
ANR	1010345	UnaryExpression	-- JSON_G ( encoder_depth )		1009773	0					
ANR	1010346	IncDec	--		1009773	0					
ANR	1010347	CallExpression	JSON_G ( encoder_depth )		1009773	1					
ANR	1010348	Callee	JSON_G		1009773	0					
ANR	1010349	Identifier	JSON_G		1009773	0					
ANR	1010350	ArgumentList	encoder_depth		1009773	1					
ANR	1010351	Argument	encoder_depth		1009773	0					
ANR	1010352	Identifier	encoder_depth		1009773	0					
ANR	1010353	IfStatement	if ( need_comma )		1009773	10					
ANR	1010354	Condition	need_comma	228:5:6166:6175	1009773	0	True				
ANR	1010355	Identifier	need_comma		1009773	0					
ANR	1010356	CompoundStatement		110:17:2762:2762	1009773	1					
ANR	1010357	ExpressionStatement	"php_json_pretty_print_char ( buf , options , '\\n' )"	229:2:6182:6228	1009773	0	True				
ANR	1010358	CallExpression	"php_json_pretty_print_char ( buf , options , '\\n' )"		1009773	0					
ANR	1010359	Callee	php_json_pretty_print_char		1009773	0					
ANR	1010360	Identifier	php_json_pretty_print_char		1009773	0					
ANR	1010361	ArgumentList	buf		1009773	1					
ANR	1010362	Argument	buf		1009773	0					
ANR	1010363	Identifier	buf		1009773	0					
ANR	1010364	Argument	options		1009773	1					
ANR	1010365	Identifier	options		1009773	0					
ANR	1010366	Argument	'\\n'		1009773	2					
ANR	1010367	PrimaryExpression	'\\n'		1009773	0					
ANR	1010368	ExpressionStatement	"php_json_pretty_print_indent ( buf , options )"	230:2:6232:6274	1009773	1	True				
ANR	1010369	CallExpression	"php_json_pretty_print_indent ( buf , options )"		1009773	0					
ANR	1010370	Callee	php_json_pretty_print_indent		1009773	0					
ANR	1010371	Identifier	php_json_pretty_print_indent		1009773	0					
ANR	1010372	ArgumentList	buf		1009773	1					
ANR	1010373	Argument	buf		1009773	0					
ANR	1010374	Identifier	buf		1009773	0					
ANR	1010375	Argument	options		1009773	1					
ANR	1010376	Identifier	options		1009773	0					
ANR	1010377	IfStatement	if ( r == PHP_JSON_OUTPUT_ARRAY )		1009773	11					
ANR	1010378	Condition	r == PHP_JSON_OUTPUT_ARRAY	233:5:6285:6310	1009773	0	True				
ANR	1010379	EqualityExpression	r == PHP_JSON_OUTPUT_ARRAY		1009773	0		==			
ANR	1010380	Identifier	r		1009773	0					
ANR	1010381	Identifier	PHP_JSON_OUTPUT_ARRAY		1009773	1					
ANR	1010382	CompoundStatement		115:33:2897:2897	1009773	1					
ANR	1010383	ExpressionStatement	"smart_str_appendc ( buf , ']' )"	234:2:6317:6344	1009773	0	True				
ANR	1010384	CallExpression	"smart_str_appendc ( buf , ']' )"		1009773	0					
ANR	1010385	Callee	smart_str_appendc		1009773	0					
ANR	1010386	Identifier	smart_str_appendc		1009773	0					
ANR	1010387	ArgumentList	buf		1009773	1					
ANR	1010388	Argument	buf		1009773	0					
ANR	1010389	Identifier	buf		1009773	0					
ANR	1010390	Argument	']'		1009773	1					
ANR	1010391	PrimaryExpression	']'		1009773	0					
ANR	1010392	ElseStatement	else		1009773	0					
ANR	1010393	CompoundStatement		117:8:2938:2938	1009773	0					
ANR	1010394	ExpressionStatement	"smart_str_appendc ( buf , '}' )"	236:2:6358:6385	1009773	0	True				
ANR	1010395	CallExpression	"smart_str_appendc ( buf , '}' )"		1009773	0					
ANR	1010396	Callee	smart_str_appendc		1009773	0					
ANR	1010397	Identifier	smart_str_appendc		1009773	0					
ANR	1010398	ArgumentList	buf		1009773	1					
ANR	1010399	Argument	buf		1009773	0					
ANR	1010400	Identifier	buf		1009773	0					
ANR	1010401	Argument	'}'		1009773	1					
ANR	1010402	PrimaryExpression	'}'		1009773	0					
ANR	1010403	ReturnType	static void		1009773	1					
ANR	1010404	Identifier	php_json_encode_array		1009773	2					
ANR	1010405	ParameterList	"smart_str * buf , zval * val , int options"		1009773	3					
ANR	1010406	Parameter	smart_str * buf	118:34:3365:3378	1009773	0	True				
ANR	1010407	ParameterType	smart_str *		1009773	0					
ANR	1010408	Identifier	buf		1009773	1					
ANR	1010409	Parameter	zval * val	118:50:3381:3389	1009773	1	True				
ANR	1010410	ParameterType	zval *		1009773	0					
ANR	1010411	Identifier	val		1009773	1					
ANR	1010412	Parameter	int options	118:61:3392:3402	1009773	2	True				
ANR	1010413	ParameterType	int		1009773	0					
ANR	1010414	Identifier	options		1009773	1					
ANR	1010415	CFGEntryNode	ENTRY		1009773		True				
ANR	1010416	CFGExitNode	EXIT		1009773		True				
ANR	1010417	CFGErrorNode	ERROR		1009773		True				
ANR	1010418	Symbol	data		1009773						
ANR	1010419	Symbol	encode_max_depth		1009773						
ANR	1010420	Symbol	PHP_JSON_FORCE_OBJECT		1009773						
ANR	1010421	Symbol	myht		1009773						
ANR	1010422	Symbol	JSON_G		1009773						
ANR	1010423	Symbol	tmp_ht		1009773						
ANR	1010424	Symbol	IS_ARRAY		1009773						
ANR	1010425	Symbol	encoder_depth		1009773						
ANR	1010426	Symbol	ZEND_HASH_APPLY_PROTECTION		1009773						
ANR	1010427	Symbol	options		1009773						
ANR	1010428	Symbol	Z_ARRVAL_P		1009773						
ANR	1010429	Symbol	key		1009773						
ANR	1010430	Symbol	* ZSTR_VAL		1009773						
ANR	1010431	Symbol	val		1009773						
ANR	1010432	Symbol	PHP_JSON_ERROR_RECURSION		1009773						
ANR	1010433	Symbol	PHP_JSON_OUTPUT_OBJECT		1009773						
ANR	1010434	Symbol	zend_hash_num_elements		1009773						
ANR	1010435	Symbol	PHP_JSON_OUTPUT_ARRAY		1009773						
ANR	1010436	Symbol	i		1009773						
ANR	1010437	Symbol	index		1009773						
ANR	1010438	Symbol	Z_OBJPROP_P		1009773						
ANR	1010439	Symbol	Z_TYPE_P		1009773						
ANR	1010440	Symbol	ZSTR_VAL		1009773						
ANR	1010441	Symbol	buf		1009773						
ANR	1010442	Symbol	r		1009773						
ANR	1010443	Symbol	php_json_determine_array_type		1009773						
ANR	1010444	Symbol	ZEND_HASH_GET_APPLY_COUNT		1009773						
ANR	1010445	Symbol	HASH_OF		1009773						
ANR	1010446	Symbol	ZSTR_LEN		1009773						
ANR	1010447	Symbol	error_code		1009773						
ANR	1010448	Symbol	~PHP_JSON_NUMERIC_CHECK		1009773						
ANR	1010449	Symbol	need_comma		1009773						
ANR	1010450	Symbol	IS_OBJECT		1009773						
ANR	1010451	Symbol	PHP_JSON_ERROR_DEPTH		1009773						
ANR	1010452	Function	php_json_utf8_to_utf16	241:0:6403:7297							
ANR	1010453	FunctionDef	"php_json_utf8_to_utf16 (unsigned short * utf16 , char utf8 [ ] , size_t len)"		1010452	0					
ANR	1010454	CompoundStatement		242:0:6495:7297	1010452	0					
ANR	1010455	IdentifierDeclStatement	"size_t pos = 0 , us ;"	243:1:6498:6516	1010452	0	True				
ANR	1010456	IdentifierDecl	pos = 0		1010452	0					
ANR	1010457	IdentifierDeclType	size_t		1010452	0					
ANR	1010458	Identifier	pos		1010452	1					
ANR	1010459	AssignmentExpression	pos = 0		1010452	2		=			
ANR	1010460	Identifier	pos		1010452	0					
ANR	1010461	PrimaryExpression	0		1010452	1					
ANR	1010462	IdentifierDecl	us		1010452	1					
ANR	1010463	IdentifierDeclType	size_t		1010452	0					
ANR	1010464	Identifier	us		1010452	1					
ANR	1010465	IdentifierDeclStatement	"int j , status ;"	244:1:6519:6532	1010452	1	True				
ANR	1010466	IdentifierDecl	j		1010452	0					
ANR	1010467	IdentifierDeclType	int		1010452	0					
ANR	1010468	Identifier	j		1010452	1					
ANR	1010469	IdentifierDecl	status		1010452	1					
ANR	1010470	IdentifierDeclType	int		1010452	0					
ANR	1010471	Identifier	status		1010452	1					
ANR	1010472	IfStatement	if ( utf16 )		1010452	2					
ANR	1010473	Condition	utf16	246:5:6540:6544	1010452	0	True				
ANR	1010474	Identifier	utf16		1010452	0					
ANR	1010475	CompoundStatement		5:12:51:51	1010452	1					
ANR	1010476	ForStatement	for ( j = 0 ; pos < len ; j ++ )		1010452	0					
ANR	1010477	ForInit	j = 0 ;	248:7:6595:6599	1010452	0	True				
ANR	1010478	AssignmentExpression	j = 0		1010452	0		=			
ANR	1010479	Identifier	j		1010452	0					
ANR	1010480	PrimaryExpression	0		1010452	1					
ANR	1010481	Condition	pos < len	248:13:6601:6609	1010452	1	True				
ANR	1010482	RelationalExpression	pos < len		1010452	0		<			
ANR	1010483	Identifier	pos		1010452	0					
ANR	1010484	Identifier	len		1010452	1					
ANR	1010485	PostIncDecOperationExpression	j ++	248:25:6613:6615	1010452	2	True				
ANR	1010486	Identifier	j		1010452	0					
ANR	1010487	IncDec	++		1010452	1					
ANR	1010488	CompoundStatement		7:30:122:122	1010452	3					
ANR	1010489	ExpressionStatement	"us = php_next_utf8_char ( ( const unsigned char * ) utf8 , len , & pos , & status )"	249:3:6623:6695	1010452	0	True				
ANR	1010490	AssignmentExpression	"us = php_next_utf8_char ( ( const unsigned char * ) utf8 , len , & pos , & status )"		1010452	0		=			
ANR	1010491	Identifier	us		1010452	0					
ANR	1010492	CallExpression	"php_next_utf8_char ( ( const unsigned char * ) utf8 , len , & pos , & status )"		1010452	1					
ANR	1010493	Callee	php_next_utf8_char		1010452	0					
ANR	1010494	Identifier	php_next_utf8_char		1010452	0					
ANR	1010495	ArgumentList	( const unsigned char * ) utf8		1010452	1					
ANR	1010496	Argument	( const unsigned char * ) utf8		1010452	0					
ANR	1010497	CastExpression	( const unsigned char * ) utf8		1010452	0					
ANR	1010498	CastTarget	const unsigned char *		1010452	0					
ANR	1010499	Identifier	utf8		1010452	1					
ANR	1010500	Argument	len		1010452	1					
ANR	1010501	Identifier	len		1010452	0					
ANR	1010502	Argument	& pos		1010452	2					
ANR	1010503	UnaryOperationExpression	& pos		1010452	0					
ANR	1010504	UnaryOperator	&		1010452	0					
ANR	1010505	Identifier	pos		1010452	1					
ANR	1010506	Argument	& status		1010452	3					
ANR	1010507	UnaryOperationExpression	& status		1010452	0					
ANR	1010508	UnaryOperator	&		1010452	0					
ANR	1010509	Identifier	status		1010452	1					
ANR	1010510	IfStatement	if ( status != SUCCESS )		1010452	1					
ANR	1010511	Condition	status != SUCCESS	250:7:6704:6720	1010452	0	True				
ANR	1010512	EqualityExpression	status != SUCCESS		1010452	0		!=			
ANR	1010513	Identifier	status		1010452	0					
ANR	1010514	Identifier	SUCCESS		1010452	1					
ANR	1010515	CompoundStatement		9:26:227:227	1010452	1					
ANR	1010516	ReturnStatement	return - 1 ;	251:4:6729:6738	1010452	0	True				
ANR	1010517	UnaryOperationExpression	- 1		1010452	0					
ANR	1010518	UnaryOperator	-		1010452	0					
ANR	1010519	PrimaryExpression	1		1010452	1					
ANR	1010520	IfStatement	if ( us >= 0x10000 )		1010452	2					
ANR	1010521	Condition	us >= 0x10000	254:7:6801:6813	1010452	0	True				
ANR	1010522	RelationalExpression	us >= 0x10000		1010452	0		>=			
ANR	1010523	Identifier	us		1010452	0					
ANR	1010524	PrimaryExpression	0x10000		1010452	1					
ANR	1010525	CompoundStatement		13:22:320:320	1010452	1					
ANR	1010526	ExpressionStatement	us -= 0x10000	255:4:6822:6835	1010452	0	True				
ANR	1010527	AssignmentExpression	us -= 0x10000		1010452	0		-=			
ANR	1010528	Identifier	us		1010452	0					
ANR	1010529	PrimaryExpression	0x10000		1010452	1					
ANR	1010530	ExpressionStatement	utf16 [ j ++ ] = ( unsigned short ) ( ( us >> 10 ) | 0xd800 )	256:4:6841:6891	1010452	1	True				
ANR	1010531	AssignmentExpression	utf16 [ j ++ ] = ( unsigned short ) ( ( us >> 10 ) | 0xd800 )		1010452	0		=			
ANR	1010532	ArrayIndexing	utf16 [ j ++ ]		1010452	0					
ANR	1010533	Identifier	utf16		1010452	0					
ANR	1010534	PostIncDecOperationExpression	j ++		1010452	1					
ANR	1010535	Identifier	j		1010452	0					
ANR	1010536	IncDec	++		1010452	1					
ANR	1010537	CastExpression	( unsigned short ) ( ( us >> 10 ) | 0xd800 )		1010452	1					
ANR	1010538	CastTarget	unsigned short		1010452	0					
ANR	1010539	InclusiveOrExpression	( us >> 10 ) | 0xd800		1010452	1		|			
ANR	1010540	ShiftExpression	us >> 10		1010452	0		>>			
ANR	1010541	Identifier	us		1010452	0					
ANR	1010542	PrimaryExpression	10		1010452	1					
ANR	1010543	PrimaryExpression	0xd800		1010452	1					
ANR	1010544	ExpressionStatement	utf16 [ j ] = ( unsigned short ) ( ( us & 0x3ff ) | 0xdc00 )	257:4:6897:6947	1010452	2	True				
ANR	1010545	AssignmentExpression	utf16 [ j ] = ( unsigned short ) ( ( us & 0x3ff ) | 0xdc00 )		1010452	0		=			
ANR	1010546	ArrayIndexing	utf16 [ j ]		1010452	0					
ANR	1010547	Identifier	utf16		1010452	0					
ANR	1010548	Identifier	j		1010452	1					
ANR	1010549	CastExpression	( unsigned short ) ( ( us & 0x3ff ) | 0xdc00 )		1010452	1					
ANR	1010550	CastTarget	unsigned short		1010452	0					
ANR	1010551	InclusiveOrExpression	( us & 0x3ff ) | 0xdc00		1010452	1		|			
ANR	1010552	BitAndExpression	us & 0x3ff		1010452	0		&			
ANR	1010553	Identifier	us		1010452	0					
ANR	1010554	PrimaryExpression	0x3ff		1010452	1					
ANR	1010555	PrimaryExpression	0xdc00		1010452	1					
ANR	1010556	ElseStatement	else		1010452	0					
ANR	1010557	CompoundStatement		17:10:463:463	1010452	0					
ANR	1010558	ExpressionStatement	utf16 [ j ] = ( unsigned short ) us	259:4:6965:6994	1010452	0	True				
ANR	1010559	AssignmentExpression	utf16 [ j ] = ( unsigned short ) us		1010452	0		=			
ANR	1010560	ArrayIndexing	utf16 [ j ]		1010452	0					
ANR	1010561	Identifier	utf16		1010452	0					
ANR	1010562	Identifier	j		1010452	1					
ANR	1010563	CastExpression	( unsigned short ) us		1010452	1					
ANR	1010564	CastTarget	unsigned short		1010452	0					
ANR	1010565	Identifier	us		1010452	1					
ANR	1010566	ElseStatement	else		1010452	0					
ANR	1010567	CompoundStatement		21:8:517:517	1010452	0					
ANR	1010568	ForStatement	for ( j = 0 ; pos < len ; j ++ )		1010452	0					
ANR	1010569	ForInit	j = 0 ;	264:7:7091:7095	1010452	0	True				
ANR	1010570	AssignmentExpression	j = 0		1010452	0		=			
ANR	1010571	Identifier	j		1010452	0					
ANR	1010572	PrimaryExpression	0		1010452	1					
ANR	1010573	Condition	pos < len	264:13:7097:7105	1010452	1	True				
ANR	1010574	RelationalExpression	pos < len		1010452	0		<			
ANR	1010575	Identifier	pos		1010452	0					
ANR	1010576	Identifier	len		1010452	1					
ANR	1010577	PostIncDecOperationExpression	j ++	264:25:7109:7111	1010452	2	True				
ANR	1010578	Identifier	j		1010452	0					
ANR	1010579	IncDec	++		1010452	1					
ANR	1010580	CompoundStatement		23:30:618:618	1010452	3					
ANR	1010581	ExpressionStatement	"us = php_next_utf8_char ( ( const unsigned char * ) utf8 , len , & pos , & status )"	265:3:7119:7191	1010452	0	True				
ANR	1010582	AssignmentExpression	"us = php_next_utf8_char ( ( const unsigned char * ) utf8 , len , & pos , & status )"		1010452	0		=			
ANR	1010583	Identifier	us		1010452	0					
ANR	1010584	CallExpression	"php_next_utf8_char ( ( const unsigned char * ) utf8 , len , & pos , & status )"		1010452	1					
ANR	1010585	Callee	php_next_utf8_char		1010452	0					
ANR	1010586	Identifier	php_next_utf8_char		1010452	0					
ANR	1010587	ArgumentList	( const unsigned char * ) utf8		1010452	1					
ANR	1010588	Argument	( const unsigned char * ) utf8		1010452	0					
ANR	1010589	CastExpression	( const unsigned char * ) utf8		1010452	0					
ANR	1010590	CastTarget	const unsigned char *		1010452	0					
ANR	1010591	Identifier	utf8		1010452	1					
ANR	1010592	Argument	len		1010452	1					
ANR	1010593	Identifier	len		1010452	0					
ANR	1010594	Argument	& pos		1010452	2					
ANR	1010595	UnaryOperationExpression	& pos		1010452	0					
ANR	1010596	UnaryOperator	&		1010452	0					
ANR	1010597	Identifier	pos		1010452	1					
ANR	1010598	Argument	& status		1010452	3					
ANR	1010599	UnaryOperationExpression	& status		1010452	0					
ANR	1010600	UnaryOperator	&		1010452	0					
ANR	1010601	Identifier	status		1010452	1					
ANR	1010602	IfStatement	if ( status != SUCCESS )		1010452	1					
ANR	1010603	Condition	status != SUCCESS	266:7:7200:7216	1010452	0	True				
ANR	1010604	EqualityExpression	status != SUCCESS		1010452	0		!=			
ANR	1010605	Identifier	status		1010452	0					
ANR	1010606	Identifier	SUCCESS		1010452	1					
ANR	1010607	CompoundStatement		25:26:723:723	1010452	1					
ANR	1010608	ReturnStatement	return - 1 ;	267:4:7225:7234	1010452	0	True				
ANR	1010609	UnaryOperationExpression	- 1		1010452	0					
ANR	1010610	UnaryOperator	-		1010452	0					
ANR	1010611	PrimaryExpression	1		1010452	1					
ANR	1010612	IfStatement	if ( us >= 0x10000 )		1010452	2					
ANR	1010613	Condition	us >= 0x10000	269:7:7248:7260	1010452	0	True				
ANR	1010614	RelationalExpression	us >= 0x10000		1010452	0		>=			
ANR	1010615	Identifier	us		1010452	0					
ANR	1010616	PrimaryExpression	0x10000		1010452	1					
ANR	1010617	CompoundStatement		28:22:767:767	1010452	1					
ANR	1010618	ExpressionStatement	j ++	270:4:7269:7272	1010452	0	True				
ANR	1010619	PostIncDecOperationExpression	j ++		1010452	0					
ANR	1010620	Identifier	j		1010452	0					
ANR	1010621	IncDec	++		1010452	1					
ANR	1010622	ReturnStatement	return j ;	274:1:7287:7295	1010452	3	True				
ANR	1010623	Identifier	j		1010452	0					
ANR	1010624	ReturnType	static int		1010452	1					
ANR	1010625	Identifier	php_json_utf8_to_utf16		1010452	2					
ANR	1010626	ParameterList	"unsigned short * utf16 , char utf8 [ ] , size_t len"		1010452	3					
ANR	1010627	Parameter	unsigned short * utf16	241:34:6437:6457	1010452	0	True				
ANR	1010628	ParameterType	unsigned short *		1010452	0					
ANR	1010629	Identifier	utf16		1010452	1					
ANR	1010630	Parameter	char utf8 [ ]	241:57:6460:6470	1010452	1	True				
ANR	1010631	ParameterType	char [ ]		1010452	0					
ANR	1010632	Identifier	utf8		1010452	1					
ANR	1010633	Parameter	size_t len	241:70:6473:6482	1010452	2	True				
ANR	1010634	ParameterType	size_t		1010452	0					
ANR	1010635	Identifier	len		1010452	1					
ANR	1010636	CFGEntryNode	ENTRY		1010452		True				
ANR	1010637	CFGExitNode	EXIT		1010452		True				
ANR	1010638	Symbol	SUCCESS		1010452						
ANR	1010639	Symbol	php_next_utf8_char		1010452						
ANR	1010640	Symbol	utf8		1010452						
ANR	1010641	Symbol	utf16		1010452						
ANR	1010642	Symbol	j		1010452						
ANR	1010643	Symbol	& status		1010452						
ANR	1010644	Symbol	* utf16		1010452						
ANR	1010645	Symbol	len		1010452						
ANR	1010646	Symbol	* j		1010452						
ANR	1010647	Symbol	pos		1010452						
ANR	1010648	Symbol	& pos		1010452						
ANR	1010649	Symbol	us		1010452						
ANR	1010650	Symbol	status		1010452						
ANR	1010651	Function	php_json_escape_string	278:0:7310:11225							
ANR	1010652	FunctionDef	"php_json_escape_string (smart_str * buf , char * s , size_t len , int options)"		1010651	0					
ANR	1010653	CompoundStatement		279:0:7405:11225	1010651	0					
ANR	1010654	IdentifierDeclStatement	int status ;	280:1:7408:7418	1010651	0	True				
ANR	1010655	IdentifierDecl	status		1010651	0					
ANR	1010656	IdentifierDeclType	int		1010651	0					
ANR	1010657	Identifier	status		1010651	1					
ANR	1010658	IdentifierDeclStatement	unsigned int us ;	281:1:7421:7436	1010651	1	True				
ANR	1010659	IdentifierDecl	us		1010651	0					
ANR	1010660	IdentifierDeclType	unsigned int		1010651	0					
ANR	1010661	Identifier	us		1010651	1					
ANR	1010662	IdentifierDeclStatement	"size_t pos , checkpoint ;"	282:1:7439:7461	1010651	2	True				
ANR	1010663	IdentifierDecl	pos		1010651	0					
ANR	1010664	IdentifierDeclType	size_t		1010651	0					
ANR	1010665	Identifier	pos		1010651	1					
ANR	1010666	IdentifierDecl	checkpoint		1010651	1					
ANR	1010667	IdentifierDeclType	size_t		1010651	0					
ANR	1010668	Identifier	checkpoint		1010651	1					
ANR	1010669	IfStatement	if ( len == 0 )		1010651	3					
ANR	1010670	Condition	len == 0	284:5:7469:7476	1010651	0	True				
ANR	1010671	EqualityExpression	len == 0		1010651	0		==			
ANR	1010672	Identifier	len		1010651	0					
ANR	1010673	PrimaryExpression	0		1010651	1					
ANR	1010674	CompoundStatement		6:15:73:73	1010651	1					
ANR	1010675	ExpressionStatement	"smart_str_appendl ( buf , ""\\""\\"""" , 2 )"	285:2:7483:7516	1010651	0	True				
ANR	1010676	CallExpression	"smart_str_appendl ( buf , ""\\""\\"""" , 2 )"		1010651	0					
ANR	1010677	Callee	smart_str_appendl		1010651	0					
ANR	1010678	Identifier	smart_str_appendl		1010651	0					
ANR	1010679	ArgumentList	buf		1010651	1					
ANR	1010680	Argument	buf		1010651	0					
ANR	1010681	Identifier	buf		1010651	0					
ANR	1010682	Argument	"""\\""\\"""""		1010651	1					
ANR	1010683	PrimaryExpression	"""\\""\\"""""		1010651	0					
ANR	1010684	Argument	2		1010651	2					
ANR	1010685	PrimaryExpression	2		1010651	0					
ANR	1010686	ReturnStatement	return ;	286:2:7520:7526	1010651	1	True				
ANR	1010687	IfStatement	if ( options & PHP_JSON_NUMERIC_CHECK )		1010651	4					
ANR	1010688	Condition	options & PHP_JSON_NUMERIC_CHECK	289:5:7537:7568	1010651	0	True				
ANR	1010689	BitAndExpression	options & PHP_JSON_NUMERIC_CHECK		1010651	0		&			
ANR	1010690	Identifier	options		1010651	0					
ANR	1010691	Identifier	PHP_JSON_NUMERIC_CHECK		1010651	1					
ANR	1010692	CompoundStatement		14:2:193:204	1010651	1					
ANR	1010693	IdentifierDeclStatement	double d ;	290:2:7575:7583	1010651	0	True				
ANR	1010694	IdentifierDecl	d		1010651	0					
ANR	1010695	IdentifierDeclType	double		1010651	0					
ANR	1010696	Identifier	d		1010651	1					
ANR	1010697	IdentifierDeclStatement	int type ;	291:2:7587:7595	1010651	1	True				
ANR	1010698	IdentifierDecl	type		1010651	0					
ANR	1010699	IdentifierDeclType	int		1010651	0					
ANR	1010700	Identifier	type		1010651	1					
ANR	1010701	IdentifierDeclStatement	zend_long p ;	292:2:7599:7610	1010651	2	True				
ANR	1010702	IdentifierDecl	p		1010651	0					
ANR	1010703	IdentifierDeclType	zend_long		1010651	0					
ANR	1010704	Identifier	p		1010651	1					
ANR	1010705	IfStatement	"if ( ( type = is_numeric_string ( s , len , & p , & d , 0 ) ) != 0 )"		1010651	3					
ANR	1010706	Condition	"( type = is_numeric_string ( s , len , & p , & d , 0 ) ) != 0"	294:6:7619:7668	1010651	0	True				
ANR	1010707	EqualityExpression	"( type = is_numeric_string ( s , len , & p , & d , 0 ) ) != 0"		1010651	0		!=			
ANR	1010708	AssignmentExpression	"type = is_numeric_string ( s , len , & p , & d , 0 )"		1010651	0		=			
ANR	1010709	Identifier	type		1010651	0					
ANR	1010710	CallExpression	"is_numeric_string ( s , len , & p , & d , 0 )"		1010651	1					
ANR	1010711	Callee	is_numeric_string		1010651	0					
ANR	1010712	Identifier	is_numeric_string		1010651	0					
ANR	1010713	ArgumentList	s		1010651	1					
ANR	1010714	Argument	s		1010651	0					
ANR	1010715	Identifier	s		1010651	0					
ANR	1010716	Argument	len		1010651	1					
ANR	1010717	Identifier	len		1010651	0					
ANR	1010718	Argument	& p		1010651	2					
ANR	1010719	UnaryOperationExpression	& p		1010651	0					
ANR	1010720	UnaryOperator	&		1010651	0					
ANR	1010721	Identifier	p		1010651	1					
ANR	1010722	Argument	& d		1010651	3					
ANR	1010723	UnaryOperationExpression	& d		1010651	0					
ANR	1010724	UnaryOperator	&		1010651	0					
ANR	1010725	Identifier	d		1010651	1					
ANR	1010726	Argument	0		1010651	4					
ANR	1010727	PrimaryExpression	0		1010651	0					
ANR	1010728	PrimaryExpression	0		1010651	1					
ANR	1010729	CompoundStatement		16:58:265:265	1010651	1					
ANR	1010730	IfStatement	if ( type == IS_LONG )		1010651	0					
ANR	1010731	Condition	type == IS_LONG	295:7:7680:7694	1010651	0	True				
ANR	1010732	EqualityExpression	type == IS_LONG		1010651	0		==			
ANR	1010733	Identifier	type		1010651	0					
ANR	1010734	Identifier	IS_LONG		1010651	1					
ANR	1010735	CompoundStatement		17:24:291:291	1010651	1					
ANR	1010736	ExpressionStatement	"smart_str_append_long ( buf , p )"	296:4:7703:7732	1010651	0	True				
ANR	1010737	CallExpression	"smart_str_append_long ( buf , p )"		1010651	0					
ANR	1010738	Callee	smart_str_append_long		1010651	0					
ANR	1010739	Identifier	smart_str_append_long		1010651	0					
ANR	1010740	ArgumentList	buf		1010651	1					
ANR	1010741	Argument	buf		1010651	0					
ANR	1010742	Identifier	buf		1010651	0					
ANR	1010743	Argument	p		1010651	1					
ANR	1010744	Identifier	p		1010651	0					
ANR	1010745	ReturnStatement	return ;	297:4:7738:7744	1010651	1	True				
ANR	1010746	ElseStatement	else		1010651	0					
ANR	1010747	IfStatement	if ( type == IS_DOUBLE && php_json_is_valid_double ( d ) )		1010651	0					
ANR	1010748	Condition	type == IS_DOUBLE && php_json_is_valid_double ( d )	298:14:7760:7807	1010651	0	True				
ANR	1010749	AndExpression	type == IS_DOUBLE && php_json_is_valid_double ( d )		1010651	0		&&			
ANR	1010750	EqualityExpression	type == IS_DOUBLE		1010651	0		==			
ANR	1010751	Identifier	type		1010651	0					
ANR	1010752	Identifier	IS_DOUBLE		1010651	1					
ANR	1010753	CallExpression	php_json_is_valid_double ( d )		1010651	1					
ANR	1010754	Callee	php_json_is_valid_double		1010651	0					
ANR	1010755	Identifier	php_json_is_valid_double		1010651	0					
ANR	1010756	ArgumentList	d		1010651	1					
ANR	1010757	Argument	d		1010651	0					
ANR	1010758	Identifier	d		1010651	0					
ANR	1010759	CompoundStatement		20:64:404:404	1010651	1					
ANR	1010760	ExpressionStatement	"php_json_encode_double ( buf , d , options )"	299:4:7816:7855	1010651	0	True				
ANR	1010761	CallExpression	"php_json_encode_double ( buf , d , options )"		1010651	0					
ANR	1010762	Callee	php_json_encode_double		1010651	0					
ANR	1010763	Identifier	php_json_encode_double		1010651	0					
ANR	1010764	ArgumentList	buf		1010651	1					
ANR	1010765	Argument	buf		1010651	0					
ANR	1010766	Identifier	buf		1010651	0					
ANR	1010767	Argument	d		1010651	1					
ANR	1010768	Identifier	d		1010651	0					
ANR	1010769	Argument	options		1010651	2					
ANR	1010770	Identifier	options		1010651	0					
ANR	1010771	ReturnStatement	return ;	300:4:7861:7867	1010651	1	True				
ANR	1010772	IfStatement	if ( options & PHP_JSON_UNESCAPED_UNICODE )		1010651	5					
ANR	1010773	Condition	options & PHP_JSON_UNESCAPED_UNICODE	306:5:7888:7923	1010651	0	True				
ANR	1010774	BitAndExpression	options & PHP_JSON_UNESCAPED_UNICODE		1010651	0		&			
ANR	1010775	Identifier	options		1010651	0					
ANR	1010776	Identifier	PHP_JSON_UNESCAPED_UNICODE		1010651	1					
ANR	1010777	CompoundStatement		28:43:520:520	1010651	1					
ANR	1010778	IfStatement	"if ( php_json_utf8_to_utf16 ( NULL , s , len ) < 0 )"		1010651	0					
ANR	1010779	Condition	"php_json_utf8_to_utf16 ( NULL , s , len ) < 0"	308:6:7970:8009	1010651	0	True				
ANR	1010780	RelationalExpression	"php_json_utf8_to_utf16 ( NULL , s , len ) < 0"		1010651	0		<			
ANR	1010781	CallExpression	"php_json_utf8_to_utf16 ( NULL , s , len )"		1010651	0					
ANR	1010782	Callee	php_json_utf8_to_utf16		1010651	0					
ANR	1010783	Identifier	php_json_utf8_to_utf16		1010651	0					
ANR	1010784	ArgumentList	NULL		1010651	1					
ANR	1010785	Argument	NULL		1010651	0					
ANR	1010786	Identifier	NULL		1010651	0					
ANR	1010787	Argument	s		1010651	1					
ANR	1010788	Identifier	s		1010651	0					
ANR	1010789	Argument	len		1010651	2					
ANR	1010790	Identifier	len		1010651	0					
ANR	1010791	PrimaryExpression	0		1010651	1					
ANR	1010792	CompoundStatement		30:48:606:606	1010651	1					
ANR	1010793	ExpressionStatement	JSON_G ( error_code ) = PHP_JSON_ERROR_UTF8	309:3:8017:8057	1010651	0	True				
ANR	1010794	AssignmentExpression	JSON_G ( error_code ) = PHP_JSON_ERROR_UTF8		1010651	0		=			
ANR	1010795	CallExpression	JSON_G ( error_code )		1010651	0					
ANR	1010796	Callee	JSON_G		1010651	0					
ANR	1010797	Identifier	JSON_G		1010651	0					
ANR	1010798	ArgumentList	error_code		1010651	1					
ANR	1010799	Argument	error_code		1010651	0					
ANR	1010800	Identifier	error_code		1010651	0					
ANR	1010801	Identifier	PHP_JSON_ERROR_UTF8		1010651	1					
ANR	1010802	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , 4 )"	310:3:8062:8095	1010651	1	True				
ANR	1010803	CallExpression	"smart_str_appendl ( buf , ""null"" , 4 )"		1010651	0					
ANR	1010804	Callee	smart_str_appendl		1010651	0					
ANR	1010805	Identifier	smart_str_appendl		1010651	0					
ANR	1010806	ArgumentList	buf		1010651	1					
ANR	1010807	Argument	buf		1010651	0					
ANR	1010808	Identifier	buf		1010651	0					
ANR	1010809	Argument	"""null"""		1010651	1					
ANR	1010810	PrimaryExpression	"""null"""		1010651	0					
ANR	1010811	Argument	4		1010651	2					
ANR	1010812	PrimaryExpression	4		1010651	0					
ANR	1010813	ReturnStatement	return ;	311:3:8100:8106	1010651	2	True				
ANR	1010814	ExpressionStatement	pos = 0	315:1:8117:8124	1010651	6	True				
ANR	1010815	AssignmentExpression	pos = 0		1010651	0		=			
ANR	1010816	Identifier	pos		1010651	0					
ANR	1010817	PrimaryExpression	0		1010651	1					
ANR	1010818	ExpressionStatement	checkpoint = buf -> s ? ZSTR_LEN ( buf -> s ) : 0	316:1:8127:8169	1010651	7	True				
ANR	1010819	AssignmentExpression	checkpoint = buf -> s ? ZSTR_LEN ( buf -> s ) : 0		1010651	0		=			
ANR	1010820	Identifier	checkpoint		1010651	0					
ANR	1010821	ConditionalExpression	buf -> s ? ZSTR_LEN ( buf -> s ) : 0		1010651	1					
ANR	1010822	Condition	buf -> s		1010651	0					
ANR	1010823	PtrMemberAccess	buf -> s		1010651	0					
ANR	1010824	Identifier	buf		1010651	0					
ANR	1010825	Identifier	s		1010651	1					
ANR	1010826	CallExpression	ZSTR_LEN ( buf -> s )		1010651	1					
ANR	1010827	Callee	ZSTR_LEN		1010651	0					
ANR	1010828	Identifier	ZSTR_LEN		1010651	0					
ANR	1010829	ArgumentList	buf -> s		1010651	1					
ANR	1010830	Argument	buf -> s		1010651	0					
ANR	1010831	PtrMemberAccess	buf -> s		1010651	0					
ANR	1010832	Identifier	buf		1010651	0					
ANR	1010833	Identifier	s		1010651	1					
ANR	1010834	PrimaryExpression	0		1010651	2					
ANR	1010835	ExpressionStatement	"smart_str_alloc ( buf , len + 2 , 0 )"	319:1:8225:8255	1010651	8	True				
ANR	1010836	CallExpression	"smart_str_alloc ( buf , len + 2 , 0 )"		1010651	0					
ANR	1010837	Callee	smart_str_alloc		1010651	0					
ANR	1010838	Identifier	smart_str_alloc		1010651	0					
ANR	1010839	ArgumentList	buf		1010651	1					
ANR	1010840	Argument	buf		1010651	0					
ANR	1010841	Identifier	buf		1010651	0					
ANR	1010842	Argument	len + 2		1010651	1					
ANR	1010843	AdditiveExpression	len + 2		1010651	0		+			
ANR	1010844	Identifier	len		1010651	0					
ANR	1010845	PrimaryExpression	2		1010651	1					
ANR	1010846	Argument	0		1010651	2					
ANR	1010847	PrimaryExpression	0		1010651	0					
ANR	1010848	ExpressionStatement	"smart_str_appendc ( buf , '""' )"	320:1:8258:8285	1010651	9	True				
ANR	1010849	CallExpression	"smart_str_appendc ( buf , '""' )"		1010651	0					
ANR	1010850	Callee	smart_str_appendc		1010651	0					
ANR	1010851	Identifier	smart_str_appendc		1010651	0					
ANR	1010852	ArgumentList	buf		1010651	1					
ANR	1010853	Argument	buf		1010651	0					
ANR	1010854	Identifier	buf		1010651	0					
ANR	1010855	Argument	"'""'"		1010651	1					
ANR	1010856	PrimaryExpression	"'""'"		1010651	0					
ANR	1010857	DoStatement	do		1010651	10					
ANR	1010858	CompoundStatement		44:4:886:886	1010651	0					
ANR	1010859	ExpressionStatement	us = ( unsigned char ) s [ pos ]	323:2:8296:8322	1010651	0	True				
ANR	1010860	AssignmentExpression	us = ( unsigned char ) s [ pos ]		1010651	0		=			
ANR	1010861	Identifier	us		1010651	0					
ANR	1010862	CastExpression	( unsigned char ) s [ pos ]		1010651	1					
ANR	1010863	CastTarget	unsigned char		1010651	0					
ANR	1010864	ArrayIndexing	s [ pos ]		1010651	1					
ANR	1010865	Identifier	s		1010651	0					
ANR	1010866	Identifier	pos		1010651	1					
ANR	1010867	IfStatement	if ( us >= 0x80 && ! ( options & PHP_JSON_UNESCAPED_UNICODE ) )		1010651	1					
ANR	1010868	Condition	us >= 0x80 && ! ( options & PHP_JSON_UNESCAPED_UNICODE )	324:6:8330:8382	1010651	0	True				
ANR	1010869	AndExpression	us >= 0x80 && ! ( options & PHP_JSON_UNESCAPED_UNICODE )		1010651	0		&&			
ANR	1010870	RelationalExpression	us >= 0x80		1010651	0		>=			
ANR	1010871	Identifier	us		1010651	0					
ANR	1010872	PrimaryExpression	0x80		1010651	1					
ANR	1010873	UnaryOperationExpression	! ( options & PHP_JSON_UNESCAPED_UNICODE )		1010651	1					
ANR	1010874	UnaryOperator	!		1010651	0					
ANR	1010875	BitAndExpression	options & PHP_JSON_UNESCAPED_UNICODE		1010651	1		&			
ANR	1010876	Identifier	options		1010651	0					
ANR	1010877	Identifier	PHP_JSON_UNESCAPED_UNICODE		1010651	1					
ANR	1010878	CompoundStatement		46:61:979:979	1010651	1					
ANR	1010879	ExpressionStatement	"us = php_next_utf8_char ( ( const unsigned char * ) s , len , & pos , & status )"	326:3:8415:8484	1010651	0	True				
ANR	1010880	AssignmentExpression	"us = php_next_utf8_char ( ( const unsigned char * ) s , len , & pos , & status )"		1010651	0		=			
ANR	1010881	Identifier	us		1010651	0					
ANR	1010882	CallExpression	"php_next_utf8_char ( ( const unsigned char * ) s , len , & pos , & status )"		1010651	1					
ANR	1010883	Callee	php_next_utf8_char		1010651	0					
ANR	1010884	Identifier	php_next_utf8_char		1010651	0					
ANR	1010885	ArgumentList	( const unsigned char * ) s		1010651	1					
ANR	1010886	Argument	( const unsigned char * ) s		1010651	0					
ANR	1010887	CastExpression	( const unsigned char * ) s		1010651	0					
ANR	1010888	CastTarget	const unsigned char *		1010651	0					
ANR	1010889	Identifier	s		1010651	1					
ANR	1010890	Argument	len		1010651	1					
ANR	1010891	Identifier	len		1010651	0					
ANR	1010892	Argument	& pos		1010651	2					
ANR	1010893	UnaryOperationExpression	& pos		1010651	0					
ANR	1010894	UnaryOperator	&		1010651	0					
ANR	1010895	Identifier	pos		1010651	1					
ANR	1010896	Argument	& status		1010651	3					
ANR	1010897	UnaryOperationExpression	& status		1010651	0					
ANR	1010898	UnaryOperator	&		1010651	0					
ANR	1010899	Identifier	status		1010651	1					
ANR	1010900	IfStatement	if ( status != SUCCESS )		1010651	1					
ANR	1010901	Condition	status != SUCCESS	327:7:8493:8509	1010651	0	True				
ANR	1010902	EqualityExpression	status != SUCCESS		1010651	0		!=			
ANR	1010903	Identifier	status		1010651	0					
ANR	1010904	Identifier	SUCCESS		1010651	1					
ANR	1010905	CompoundStatement		49:26:1106:1106	1010651	1					
ANR	1010906	IfStatement	if ( buf -> s )		1010651	0					
ANR	1010907	Condition	buf -> s	328:8:8522:8527	1010651	0	True				
ANR	1010908	PtrMemberAccess	buf -> s		1010651	0					
ANR	1010909	Identifier	buf		1010651	0					
ANR	1010910	Identifier	s		1010651	1					
ANR	1010911	CompoundStatement		50:16:1124:1124	1010651	1					
ANR	1010912	ExpressionStatement	ZSTR_LEN ( buf -> s ) = checkpoint	329:5:8537:8566	1010651	0	True				
ANR	1010913	AssignmentExpression	ZSTR_LEN ( buf -> s ) = checkpoint		1010651	0		=			
ANR	1010914	CallExpression	ZSTR_LEN ( buf -> s )		1010651	0					
ANR	1010915	Callee	ZSTR_LEN		1010651	0					
ANR	1010916	Identifier	ZSTR_LEN		1010651	0					
ANR	1010917	ArgumentList	buf -> s		1010651	1					
ANR	1010918	Argument	buf -> s		1010651	0					
ANR	1010919	PtrMemberAccess	buf -> s		1010651	0					
ANR	1010920	Identifier	buf		1010651	0					
ANR	1010921	Identifier	s		1010651	1					
ANR	1010922	Identifier	checkpoint		1010651	1					
ANR	1010923	ExpressionStatement	JSON_G ( error_code ) = PHP_JSON_ERROR_UTF8	331:4:8578:8618	1010651	1	True				
ANR	1010924	AssignmentExpression	JSON_G ( error_code ) = PHP_JSON_ERROR_UTF8		1010651	0		=			
ANR	1010925	CallExpression	JSON_G ( error_code )		1010651	0					
ANR	1010926	Callee	JSON_G		1010651	0					
ANR	1010927	Identifier	JSON_G		1010651	0					
ANR	1010928	ArgumentList	error_code		1010651	1					
ANR	1010929	Argument	error_code		1010651	0					
ANR	1010930	Identifier	error_code		1010651	0					
ANR	1010931	Identifier	PHP_JSON_ERROR_UTF8		1010651	1					
ANR	1010932	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , 4 )"	332:4:8624:8657	1010651	2	True				
ANR	1010933	CallExpression	"smart_str_appendl ( buf , ""null"" , 4 )"		1010651	0					
ANR	1010934	Callee	smart_str_appendl		1010651	0					
ANR	1010935	Identifier	smart_str_appendl		1010651	0					
ANR	1010936	ArgumentList	buf		1010651	1					
ANR	1010937	Argument	buf		1010651	0					
ANR	1010938	Identifier	buf		1010651	0					
ANR	1010939	Argument	"""null"""		1010651	1					
ANR	1010940	PrimaryExpression	"""null"""		1010651	0					
ANR	1010941	Argument	4		1010651	2					
ANR	1010942	PrimaryExpression	4		1010651	0					
ANR	1010943	ReturnStatement	return ;	333:4:8663:8669	1010651	3	True				
ANR	1010944	IfStatement	if ( us >= 0x10000 )		1010651	2					
ANR	1010945	Condition	us >= 0x10000	336:7:8732:8744	1010651	0	True				
ANR	1010946	RelationalExpression	us >= 0x10000		1010651	0		>=			
ANR	1010947	Identifier	us		1010651	0					
ANR	1010948	PrimaryExpression	0x10000		1010651	1					
ANR	1010949	CompoundStatement		59:4:1347:1367	1010651	1					
ANR	1010950	IdentifierDeclStatement	unsigned int next_us ;	337:4:8753:8773	1010651	0	True				
ANR	1010951	IdentifierDecl	next_us		1010651	0					
ANR	1010952	IdentifierDeclType	unsigned int		1010651	0					
ANR	1010953	Identifier	next_us		1010651	1					
ANR	1010954	ExpressionStatement	us -= 0x10000	338:4:8779:8792	1010651	1	True				
ANR	1010955	AssignmentExpression	us -= 0x10000		1010651	0		-=			
ANR	1010956	Identifier	us		1010651	0					
ANR	1010957	PrimaryExpression	0x10000		1010651	1					
ANR	1010958	ExpressionStatement	next_us = ( unsigned short ) ( ( us & 0x3ff ) | 0xdc00 )	339:4:8798:8847	1010651	2	True				
ANR	1010959	AssignmentExpression	next_us = ( unsigned short ) ( ( us & 0x3ff ) | 0xdc00 )		1010651	0		=			
ANR	1010960	Identifier	next_us		1010651	0					
ANR	1010961	CastExpression	( unsigned short ) ( ( us & 0x3ff ) | 0xdc00 )		1010651	1					
ANR	1010962	CastTarget	unsigned short		1010651	0					
ANR	1010963	InclusiveOrExpression	( us & 0x3ff ) | 0xdc00		1010651	1		|			
ANR	1010964	BitAndExpression	us & 0x3ff		1010651	0		&			
ANR	1010965	Identifier	us		1010651	0					
ANR	1010966	PrimaryExpression	0x3ff		1010651	1					
ANR	1010967	PrimaryExpression	0xdc00		1010651	1					
ANR	1010968	ExpressionStatement	us = ( unsigned short ) ( ( us >> 10 ) | 0xd800 )	340:4:8853:8895	1010651	3	True				
ANR	1010969	AssignmentExpression	us = ( unsigned short ) ( ( us >> 10 ) | 0xd800 )		1010651	0		=			
ANR	1010970	Identifier	us		1010651	0					
ANR	1010971	CastExpression	( unsigned short ) ( ( us >> 10 ) | 0xd800 )		1010651	1					
ANR	1010972	CastTarget	unsigned short		1010651	0					
ANR	1010973	InclusiveOrExpression	( us >> 10 ) | 0xd800		1010651	1		|			
ANR	1010974	ShiftExpression	us >> 10		1010651	0		>>			
ANR	1010975	Identifier	us		1010651	0					
ANR	1010976	PrimaryExpression	10		1010651	1					
ANR	1010977	PrimaryExpression	0xd800		1010651	1					
ANR	1010978	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u"" , 2 )"	341:4:8901:8933	1010651	4	True				
ANR	1010979	CallExpression	"smart_str_appendl ( buf , ""\\\\u"" , 2 )"		1010651	0					
ANR	1010980	Callee	smart_str_appendl		1010651	0					
ANR	1010981	Identifier	smart_str_appendl		1010651	0					
ANR	1010982	ArgumentList	buf		1010651	1					
ANR	1010983	Argument	buf		1010651	0					
ANR	1010984	Identifier	buf		1010651	0					
ANR	1010985	Argument	"""\\\\u"""		1010651	1					
ANR	1010986	PrimaryExpression	"""\\\\u"""		1010651	0					
ANR	1010987	Argument	2		1010651	2					
ANR	1010988	PrimaryExpression	2		1010651	0					
ANR	1010989	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf000 ) >> 12 ] )"	342:4:8939:8990	1010651	5	True				
ANR	1010990	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf000 ) >> 12 ] )"		1010651	0					
ANR	1010991	Callee	smart_str_appendc		1010651	0					
ANR	1010992	Identifier	smart_str_appendc		1010651	0					
ANR	1010993	ArgumentList	buf		1010651	1					
ANR	1010994	Argument	buf		1010651	0					
ANR	1010995	Identifier	buf		1010651	0					
ANR	1010996	Argument	digits [ ( us & 0xf000 ) >> 12 ]		1010651	1					
ANR	1010997	ArrayIndexing	digits [ ( us & 0xf000 ) >> 12 ]		1010651	0					
ANR	1010998	Identifier	digits		1010651	0					
ANR	1010999	ShiftExpression	( us & 0xf000 ) >> 12		1010651	1		>>			
ANR	1011000	BitAndExpression	us & 0xf000		1010651	0		&			
ANR	1011001	Identifier	us		1010651	0					
ANR	1011002	PrimaryExpression	0xf000		1010651	1					
ANR	1011003	PrimaryExpression	12		1010651	1					
ANR	1011004	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf00 ) >> 8 ] )"	343:4:8996:9046	1010651	6	True				
ANR	1011005	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf00 ) >> 8 ] )"		1010651	0					
ANR	1011006	Callee	smart_str_appendc		1010651	0					
ANR	1011007	Identifier	smart_str_appendc		1010651	0					
ANR	1011008	ArgumentList	buf		1010651	1					
ANR	1011009	Argument	buf		1010651	0					
ANR	1011010	Identifier	buf		1010651	0					
ANR	1011011	Argument	digits [ ( us & 0xf00 ) >> 8 ]		1010651	1					
ANR	1011012	ArrayIndexing	digits [ ( us & 0xf00 ) >> 8 ]		1010651	0					
ANR	1011013	Identifier	digits		1010651	0					
ANR	1011014	ShiftExpression	( us & 0xf00 ) >> 8		1010651	1		>>			
ANR	1011015	BitAndExpression	us & 0xf00		1010651	0		&			
ANR	1011016	Identifier	us		1010651	0					
ANR	1011017	PrimaryExpression	0xf00		1010651	1					
ANR	1011018	PrimaryExpression	8		1010651	1					
ANR	1011019	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf0 ) >> 4 ] )"	344:4:9052:9102	1010651	7	True				
ANR	1011020	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf0 ) >> 4 ] )"		1010651	0					
ANR	1011021	Callee	smart_str_appendc		1010651	0					
ANR	1011022	Identifier	smart_str_appendc		1010651	0					
ANR	1011023	ArgumentList	buf		1010651	1					
ANR	1011024	Argument	buf		1010651	0					
ANR	1011025	Identifier	buf		1010651	0					
ANR	1011026	Argument	digits [ ( us & 0xf0 ) >> 4 ]		1010651	1					
ANR	1011027	ArrayIndexing	digits [ ( us & 0xf0 ) >> 4 ]		1010651	0					
ANR	1011028	Identifier	digits		1010651	0					
ANR	1011029	ShiftExpression	( us & 0xf0 ) >> 4		1010651	1		>>			
ANR	1011030	BitAndExpression	us & 0xf0		1010651	0		&			
ANR	1011031	Identifier	us		1010651	0					
ANR	1011032	PrimaryExpression	0xf0		1010651	1					
ANR	1011033	PrimaryExpression	4		1010651	1					
ANR	1011034	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf ) ] )"	345:4:9108:9150	1010651	8	True				
ANR	1011035	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf ) ] )"		1010651	0					
ANR	1011036	Callee	smart_str_appendc		1010651	0					
ANR	1011037	Identifier	smart_str_appendc		1010651	0					
ANR	1011038	ArgumentList	buf		1010651	1					
ANR	1011039	Argument	buf		1010651	0					
ANR	1011040	Identifier	buf		1010651	0					
ANR	1011041	Argument	digits [ ( us & 0xf ) ]		1010651	1					
ANR	1011042	ArrayIndexing	digits [ ( us & 0xf ) ]		1010651	0					
ANR	1011043	Identifier	digits		1010651	0					
ANR	1011044	BitAndExpression	us & 0xf		1010651	1		&			
ANR	1011045	Identifier	us		1010651	0					
ANR	1011046	PrimaryExpression	0xf		1010651	1					
ANR	1011047	ExpressionStatement	us = next_us	346:4:9156:9168	1010651	9	True				
ANR	1011048	AssignmentExpression	us = next_us		1010651	0		=			
ANR	1011049	Identifier	us		1010651	0					
ANR	1011050	Identifier	next_us		1010651	1					
ANR	1011051	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u"" , 2 )"	348:3:9178:9210	1010651	3	True				
ANR	1011052	CallExpression	"smart_str_appendl ( buf , ""\\\\u"" , 2 )"		1010651	0					
ANR	1011053	Callee	smart_str_appendl		1010651	0					
ANR	1011054	Identifier	smart_str_appendl		1010651	0					
ANR	1011055	ArgumentList	buf		1010651	1					
ANR	1011056	Argument	buf		1010651	0					
ANR	1011057	Identifier	buf		1010651	0					
ANR	1011058	Argument	"""\\\\u"""		1010651	1					
ANR	1011059	PrimaryExpression	"""\\\\u"""		1010651	0					
ANR	1011060	Argument	2		1010651	2					
ANR	1011061	PrimaryExpression	2		1010651	0					
ANR	1011062	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf000 ) >> 12 ] )"	349:3:9215:9266	1010651	4	True				
ANR	1011063	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf000 ) >> 12 ] )"		1010651	0					
ANR	1011064	Callee	smart_str_appendc		1010651	0					
ANR	1011065	Identifier	smart_str_appendc		1010651	0					
ANR	1011066	ArgumentList	buf		1010651	1					
ANR	1011067	Argument	buf		1010651	0					
ANR	1011068	Identifier	buf		1010651	0					
ANR	1011069	Argument	digits [ ( us & 0xf000 ) >> 12 ]		1010651	1					
ANR	1011070	ArrayIndexing	digits [ ( us & 0xf000 ) >> 12 ]		1010651	0					
ANR	1011071	Identifier	digits		1010651	0					
ANR	1011072	ShiftExpression	( us & 0xf000 ) >> 12		1010651	1		>>			
ANR	1011073	BitAndExpression	us & 0xf000		1010651	0		&			
ANR	1011074	Identifier	us		1010651	0					
ANR	1011075	PrimaryExpression	0xf000		1010651	1					
ANR	1011076	PrimaryExpression	12		1010651	1					
ANR	1011077	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf00 ) >> 8 ] )"	350:3:9271:9321	1010651	5	True				
ANR	1011078	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf00 ) >> 8 ] )"		1010651	0					
ANR	1011079	Callee	smart_str_appendc		1010651	0					
ANR	1011080	Identifier	smart_str_appendc		1010651	0					
ANR	1011081	ArgumentList	buf		1010651	1					
ANR	1011082	Argument	buf		1010651	0					
ANR	1011083	Identifier	buf		1010651	0					
ANR	1011084	Argument	digits [ ( us & 0xf00 ) >> 8 ]		1010651	1					
ANR	1011085	ArrayIndexing	digits [ ( us & 0xf00 ) >> 8 ]		1010651	0					
ANR	1011086	Identifier	digits		1010651	0					
ANR	1011087	ShiftExpression	( us & 0xf00 ) >> 8		1010651	1		>>			
ANR	1011088	BitAndExpression	us & 0xf00		1010651	0		&			
ANR	1011089	Identifier	us		1010651	0					
ANR	1011090	PrimaryExpression	0xf00		1010651	1					
ANR	1011091	PrimaryExpression	8		1010651	1					
ANR	1011092	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf0 ) >> 4 ] )"	351:3:9326:9376	1010651	6	True				
ANR	1011093	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf0 ) >> 4 ] )"		1010651	0					
ANR	1011094	Callee	smart_str_appendc		1010651	0					
ANR	1011095	Identifier	smart_str_appendc		1010651	0					
ANR	1011096	ArgumentList	buf		1010651	1					
ANR	1011097	Argument	buf		1010651	0					
ANR	1011098	Identifier	buf		1010651	0					
ANR	1011099	Argument	digits [ ( us & 0xf0 ) >> 4 ]		1010651	1					
ANR	1011100	ArrayIndexing	digits [ ( us & 0xf0 ) >> 4 ]		1010651	0					
ANR	1011101	Identifier	digits		1010651	0					
ANR	1011102	ShiftExpression	( us & 0xf0 ) >> 4		1010651	1		>>			
ANR	1011103	BitAndExpression	us & 0xf0		1010651	0		&			
ANR	1011104	Identifier	us		1010651	0					
ANR	1011105	PrimaryExpression	0xf0		1010651	1					
ANR	1011106	PrimaryExpression	4		1010651	1					
ANR	1011107	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf ) ] )"	352:3:9381:9423	1010651	7	True				
ANR	1011108	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf ) ] )"		1010651	0					
ANR	1011109	Callee	smart_str_appendc		1010651	0					
ANR	1011110	Identifier	smart_str_appendc		1010651	0					
ANR	1011111	ArgumentList	buf		1010651	1					
ANR	1011112	Argument	buf		1010651	0					
ANR	1011113	Identifier	buf		1010651	0					
ANR	1011114	Argument	digits [ ( us & 0xf ) ]		1010651	1					
ANR	1011115	ArrayIndexing	digits [ ( us & 0xf ) ]		1010651	0					
ANR	1011116	Identifier	digits		1010651	0					
ANR	1011117	BitAndExpression	us & 0xf		1010651	1		&			
ANR	1011118	Identifier	us		1010651	0					
ANR	1011119	PrimaryExpression	0xf		1010651	1					
ANR	1011120	ElseStatement	else		1010651	0					
ANR	1011121	CompoundStatement		75:9:2028:2028	1010651	0					
ANR	1011122	ExpressionStatement	pos ++	354:3:9439:9444	1010651	0	True				
ANR	1011123	PostIncDecOperationExpression	pos ++		1010651	0					
ANR	1011124	Identifier	pos		1010651	0					
ANR	1011125	IncDec	++		1010651	1					
ANR	1011126	SwitchStatement	switch ( us )		1010651	1					
ANR	1011127	Condition	us	356:11:9458:9459	1010651	0	True				
ANR	1011128	Identifier	us		1010651	0					
ANR	1011129	CompoundStatement		78:15:2056:2056	1010651	1					
ANR	1011130	Label	"case '""' :"	357:4:9468:9476	1010651	0	True				
ANR	1011131	IfStatement	if ( options & PHP_JSON_HEX_QUOT )		1010651	1					
ANR	1011132	Condition	options & PHP_JSON_HEX_QUOT	358:9:9487:9513	1010651	0	True				
ANR	1011133	BitAndExpression	options & PHP_JSON_HEX_QUOT		1010651	0		&			
ANR	1011134	Identifier	options		1010651	0					
ANR	1011135	Identifier	PHP_JSON_HEX_QUOT		1010651	1					
ANR	1011136	CompoundStatement		80:38:2110:2110	1010651	1					
ANR	1011137	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u0022"" , 6 )"	359:6:9524:9560	1010651	0	True				
ANR	1011138	CallExpression	"smart_str_appendl ( buf , ""\\\\u0022"" , 6 )"		1010651	0					
ANR	1011139	Callee	smart_str_appendl		1010651	0					
ANR	1011140	Identifier	smart_str_appendl		1010651	0					
ANR	1011141	ArgumentList	buf		1010651	1					
ANR	1011142	Argument	buf		1010651	0					
ANR	1011143	Identifier	buf		1010651	0					
ANR	1011144	Argument	"""\\\\u0022"""		1010651	1					
ANR	1011145	PrimaryExpression	"""\\\\u0022"""		1010651	0					
ANR	1011146	Argument	6		1010651	2					
ANR	1011147	PrimaryExpression	6		1010651	0					
ANR	1011148	ElseStatement	else		1010651	0					
ANR	1011149	CompoundStatement		82:12:2168:2168	1010651	0					
ANR	1011150	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\\\"""" , 2 )"	361:6:9582:9615	1010651	0	True				
ANR	1011151	CallExpression	"smart_str_appendl ( buf , ""\\\\\\"""" , 2 )"		1010651	0					
ANR	1011152	Callee	smart_str_appendl		1010651	0					
ANR	1011153	Identifier	smart_str_appendl		1010651	0					
ANR	1011154	ArgumentList	buf		1010651	1					
ANR	1011155	Argument	buf		1010651	0					
ANR	1011156	Identifier	buf		1010651	0					
ANR	1011157	Argument	"""\\\\\\"""""		1010651	1					
ANR	1011158	PrimaryExpression	"""\\\\\\"""""		1010651	0					
ANR	1011159	Argument	2		1010651	2					
ANR	1011160	PrimaryExpression	2		1010651	0					
ANR	1011161	BreakStatement	break ;	363:5:9629:9634	1010651	2	True				
ANR	1011162	Label	case '\\\\' :	365:4:9641:9650	1010651	3	True				
ANR	1011163	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\\\\\"" , 2 )"	366:5:9657:9690	1010651	4	True				
ANR	1011164	CallExpression	"smart_str_appendl ( buf , ""\\\\\\\\"" , 2 )"		1010651	0					
ANR	1011165	Callee	smart_str_appendl		1010651	0					
ANR	1011166	Identifier	smart_str_appendl		1010651	0					
ANR	1011167	ArgumentList	buf		1010651	1					
ANR	1011168	Argument	buf		1010651	0					
ANR	1011169	Identifier	buf		1010651	0					
ANR	1011170	Argument	"""\\\\\\\\"""		1010651	1					
ANR	1011171	PrimaryExpression	"""\\\\\\\\"""		1010651	0					
ANR	1011172	Argument	2		1010651	2					
ANR	1011173	PrimaryExpression	2		1010651	0					
ANR	1011174	BreakStatement	break ;	367:5:9697:9702	1010651	5	True				
ANR	1011175	Label	case '/' :	369:4:9709:9717	1010651	6	True				
ANR	1011176	IfStatement	if ( options & PHP_JSON_UNESCAPED_SLASHES )		1010651	7					
ANR	1011177	Condition	options & PHP_JSON_UNESCAPED_SLASHES	370:9:9728:9763	1010651	0	True				
ANR	1011178	BitAndExpression	options & PHP_JSON_UNESCAPED_SLASHES		1010651	0		&			
ANR	1011179	Identifier	options		1010651	0					
ANR	1011180	Identifier	PHP_JSON_UNESCAPED_SLASHES		1010651	1					
ANR	1011181	CompoundStatement		92:47:2360:2360	1010651	1					
ANR	1011182	ExpressionStatement	"smart_str_appendc ( buf , '/' )"	371:6:9774:9801	1010651	0	True				
ANR	1011183	CallExpression	"smart_str_appendc ( buf , '/' )"		1010651	0					
ANR	1011184	Callee	smart_str_appendc		1010651	0					
ANR	1011185	Identifier	smart_str_appendc		1010651	0					
ANR	1011186	ArgumentList	buf		1010651	1					
ANR	1011187	Argument	buf		1010651	0					
ANR	1011188	Identifier	buf		1010651	0					
ANR	1011189	Argument	'/'		1010651	1					
ANR	1011190	PrimaryExpression	'/'		1010651	0					
ANR	1011191	ElseStatement	else		1010651	0					
ANR	1011192	CompoundStatement		94:12:2409:2409	1010651	0					
ANR	1011193	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\/"" , 2 )"	373:6:9823:9855	1010651	0	True				
ANR	1011194	CallExpression	"smart_str_appendl ( buf , ""\\\\/"" , 2 )"		1010651	0					
ANR	1011195	Callee	smart_str_appendl		1010651	0					
ANR	1011196	Identifier	smart_str_appendl		1010651	0					
ANR	1011197	ArgumentList	buf		1010651	1					
ANR	1011198	Argument	buf		1010651	0					
ANR	1011199	Identifier	buf		1010651	0					
ANR	1011200	Argument	"""\\\\/"""		1010651	1					
ANR	1011201	PrimaryExpression	"""\\\\/"""		1010651	0					
ANR	1011202	Argument	2		1010651	2					
ANR	1011203	PrimaryExpression	2		1010651	0					
ANR	1011204	BreakStatement	break ;	375:5:9869:9874	1010651	8	True				
ANR	1011205	Label	case '\\b' :	377:4:9881:9890	1010651	9	True				
ANR	1011206	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\b"" , 2 )"	378:5:9897:9929	1010651	10	True				
ANR	1011207	CallExpression	"smart_str_appendl ( buf , ""\\\\b"" , 2 )"		1010651	0					
ANR	1011208	Callee	smart_str_appendl		1010651	0					
ANR	1011209	Identifier	smart_str_appendl		1010651	0					
ANR	1011210	ArgumentList	buf		1010651	1					
ANR	1011211	Argument	buf		1010651	0					
ANR	1011212	Identifier	buf		1010651	0					
ANR	1011213	Argument	"""\\\\b"""		1010651	1					
ANR	1011214	PrimaryExpression	"""\\\\b"""		1010651	0					
ANR	1011215	Argument	2		1010651	2					
ANR	1011216	PrimaryExpression	2		1010651	0					
ANR	1011217	BreakStatement	break ;	379:5:9936:9941	1010651	11	True				
ANR	1011218	Label	case '\\f' :	381:4:9948:9957	1010651	12	True				
ANR	1011219	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\f"" , 2 )"	382:5:9964:9996	1010651	13	True				
ANR	1011220	CallExpression	"smart_str_appendl ( buf , ""\\\\f"" , 2 )"		1010651	0					
ANR	1011221	Callee	smart_str_appendl		1010651	0					
ANR	1011222	Identifier	smart_str_appendl		1010651	0					
ANR	1011223	ArgumentList	buf		1010651	1					
ANR	1011224	Argument	buf		1010651	0					
ANR	1011225	Identifier	buf		1010651	0					
ANR	1011226	Argument	"""\\\\f"""		1010651	1					
ANR	1011227	PrimaryExpression	"""\\\\f"""		1010651	0					
ANR	1011228	Argument	2		1010651	2					
ANR	1011229	PrimaryExpression	2		1010651	0					
ANR	1011230	BreakStatement	break ;	383:5:10003:10008	1010651	14	True				
ANR	1011231	Label	case '\\n' :	385:4:10015:10024	1010651	15	True				
ANR	1011232	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\n"" , 2 )"	386:5:10031:10063	1010651	16	True				
ANR	1011233	CallExpression	"smart_str_appendl ( buf , ""\\\\n"" , 2 )"		1010651	0					
ANR	1011234	Callee	smart_str_appendl		1010651	0					
ANR	1011235	Identifier	smart_str_appendl		1010651	0					
ANR	1011236	ArgumentList	buf		1010651	1					
ANR	1011237	Argument	buf		1010651	0					
ANR	1011238	Identifier	buf		1010651	0					
ANR	1011239	Argument	"""\\\\n"""		1010651	1					
ANR	1011240	PrimaryExpression	"""\\\\n"""		1010651	0					
ANR	1011241	Argument	2		1010651	2					
ANR	1011242	PrimaryExpression	2		1010651	0					
ANR	1011243	BreakStatement	break ;	387:5:10070:10075	1010651	17	True				
ANR	1011244	Label	case '\\r' :	389:4:10082:10091	1010651	18	True				
ANR	1011245	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\r"" , 2 )"	390:5:10098:10130	1010651	19	True				
ANR	1011246	CallExpression	"smart_str_appendl ( buf , ""\\\\r"" , 2 )"		1010651	0					
ANR	1011247	Callee	smart_str_appendl		1010651	0					
ANR	1011248	Identifier	smart_str_appendl		1010651	0					
ANR	1011249	ArgumentList	buf		1010651	1					
ANR	1011250	Argument	buf		1010651	0					
ANR	1011251	Identifier	buf		1010651	0					
ANR	1011252	Argument	"""\\\\r"""		1010651	1					
ANR	1011253	PrimaryExpression	"""\\\\r"""		1010651	0					
ANR	1011254	Argument	2		1010651	2					
ANR	1011255	PrimaryExpression	2		1010651	0					
ANR	1011256	BreakStatement	break ;	391:5:10137:10142	1010651	20	True				
ANR	1011257	Label	case '\\t' :	393:4:10149:10158	1010651	21	True				
ANR	1011258	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\t"" , 2 )"	394:5:10165:10197	1010651	22	True				
ANR	1011259	CallExpression	"smart_str_appendl ( buf , ""\\\\t"" , 2 )"		1010651	0					
ANR	1011260	Callee	smart_str_appendl		1010651	0					
ANR	1011261	Identifier	smart_str_appendl		1010651	0					
ANR	1011262	ArgumentList	buf		1010651	1					
ANR	1011263	Argument	buf		1010651	0					
ANR	1011264	Identifier	buf		1010651	0					
ANR	1011265	Argument	"""\\\\t"""		1010651	1					
ANR	1011266	PrimaryExpression	"""\\\\t"""		1010651	0					
ANR	1011267	Argument	2		1010651	2					
ANR	1011268	PrimaryExpression	2		1010651	0					
ANR	1011269	BreakStatement	break ;	395:5:10204:10209	1010651	23	True				
ANR	1011270	Label	case '<' :	397:4:10216:10224	1010651	24	True				
ANR	1011271	IfStatement	if ( options & PHP_JSON_HEX_TAG )		1010651	25					
ANR	1011272	Condition	options & PHP_JSON_HEX_TAG	398:9:10235:10260	1010651	0	True				
ANR	1011273	BitAndExpression	options & PHP_JSON_HEX_TAG		1010651	0		&			
ANR	1011274	Identifier	options		1010651	0					
ANR	1011275	Identifier	PHP_JSON_HEX_TAG		1010651	1					
ANR	1011276	CompoundStatement		120:37:2857:2857	1010651	1					
ANR	1011277	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u003C"" , 6 )"	399:6:10271:10307	1010651	0	True				
ANR	1011278	CallExpression	"smart_str_appendl ( buf , ""\\\\u003C"" , 6 )"		1010651	0					
ANR	1011279	Callee	smart_str_appendl		1010651	0					
ANR	1011280	Identifier	smart_str_appendl		1010651	0					
ANR	1011281	ArgumentList	buf		1010651	1					
ANR	1011282	Argument	buf		1010651	0					
ANR	1011283	Identifier	buf		1010651	0					
ANR	1011284	Argument	"""\\\\u003C"""		1010651	1					
ANR	1011285	PrimaryExpression	"""\\\\u003C"""		1010651	0					
ANR	1011286	Argument	6		1010651	2					
ANR	1011287	PrimaryExpression	6		1010651	0					
ANR	1011288	ElseStatement	else		1010651	0					
ANR	1011289	CompoundStatement		122:12:2915:2915	1010651	0					
ANR	1011290	ExpressionStatement	"smart_str_appendc ( buf , '<' )"	401:6:10329:10356	1010651	0	True				
ANR	1011291	CallExpression	"smart_str_appendc ( buf , '<' )"		1010651	0					
ANR	1011292	Callee	smart_str_appendc		1010651	0					
ANR	1011293	Identifier	smart_str_appendc		1010651	0					
ANR	1011294	ArgumentList	buf		1010651	1					
ANR	1011295	Argument	buf		1010651	0					
ANR	1011296	Identifier	buf		1010651	0					
ANR	1011297	Argument	'<'		1010651	1					
ANR	1011298	PrimaryExpression	'<'		1010651	0					
ANR	1011299	BreakStatement	break ;	403:5:10370:10375	1010651	26	True				
ANR	1011300	Label	case '>' :	405:4:10382:10390	1010651	27	True				
ANR	1011301	IfStatement	if ( options & PHP_JSON_HEX_TAG )		1010651	28					
ANR	1011302	Condition	options & PHP_JSON_HEX_TAG	406:9:10401:10426	1010651	0	True				
ANR	1011303	BitAndExpression	options & PHP_JSON_HEX_TAG		1010651	0		&			
ANR	1011304	Identifier	options		1010651	0					
ANR	1011305	Identifier	PHP_JSON_HEX_TAG		1010651	1					
ANR	1011306	CompoundStatement		128:37:3023:3023	1010651	1					
ANR	1011307	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u003E"" , 6 )"	407:6:10437:10473	1010651	0	True				
ANR	1011308	CallExpression	"smart_str_appendl ( buf , ""\\\\u003E"" , 6 )"		1010651	0					
ANR	1011309	Callee	smart_str_appendl		1010651	0					
ANR	1011310	Identifier	smart_str_appendl		1010651	0					
ANR	1011311	ArgumentList	buf		1010651	1					
ANR	1011312	Argument	buf		1010651	0					
ANR	1011313	Identifier	buf		1010651	0					
ANR	1011314	Argument	"""\\\\u003E"""		1010651	1					
ANR	1011315	PrimaryExpression	"""\\\\u003E"""		1010651	0					
ANR	1011316	Argument	6		1010651	2					
ANR	1011317	PrimaryExpression	6		1010651	0					
ANR	1011318	ElseStatement	else		1010651	0					
ANR	1011319	CompoundStatement		130:12:3081:3081	1010651	0					
ANR	1011320	ExpressionStatement	"smart_str_appendc ( buf , '>' )"	409:6:10495:10522	1010651	0	True				
ANR	1011321	CallExpression	"smart_str_appendc ( buf , '>' )"		1010651	0					
ANR	1011322	Callee	smart_str_appendc		1010651	0					
ANR	1011323	Identifier	smart_str_appendc		1010651	0					
ANR	1011324	ArgumentList	buf		1010651	1					
ANR	1011325	Argument	buf		1010651	0					
ANR	1011326	Identifier	buf		1010651	0					
ANR	1011327	Argument	'>'		1010651	1					
ANR	1011328	PrimaryExpression	'>'		1010651	0					
ANR	1011329	BreakStatement	break ;	411:5:10536:10541	1010651	29	True				
ANR	1011330	Label	case '&' :	413:4:10548:10556	1010651	30	True				
ANR	1011331	IfStatement	if ( options & PHP_JSON_HEX_AMP )		1010651	31					
ANR	1011332	Condition	options & PHP_JSON_HEX_AMP	414:9:10567:10592	1010651	0	True				
ANR	1011333	BitAndExpression	options & PHP_JSON_HEX_AMP		1010651	0		&			
ANR	1011334	Identifier	options		1010651	0					
ANR	1011335	Identifier	PHP_JSON_HEX_AMP		1010651	1					
ANR	1011336	CompoundStatement		136:37:3189:3189	1010651	1					
ANR	1011337	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u0026"" , 6 )"	415:6:10603:10639	1010651	0	True				
ANR	1011338	CallExpression	"smart_str_appendl ( buf , ""\\\\u0026"" , 6 )"		1010651	0					
ANR	1011339	Callee	smart_str_appendl		1010651	0					
ANR	1011340	Identifier	smart_str_appendl		1010651	0					
ANR	1011341	ArgumentList	buf		1010651	1					
ANR	1011342	Argument	buf		1010651	0					
ANR	1011343	Identifier	buf		1010651	0					
ANR	1011344	Argument	"""\\\\u0026"""		1010651	1					
ANR	1011345	PrimaryExpression	"""\\\\u0026"""		1010651	0					
ANR	1011346	Argument	6		1010651	2					
ANR	1011347	PrimaryExpression	6		1010651	0					
ANR	1011348	ElseStatement	else		1010651	0					
ANR	1011349	CompoundStatement		138:12:3247:3247	1010651	0					
ANR	1011350	ExpressionStatement	"smart_str_appendc ( buf , '&' )"	417:6:10661:10688	1010651	0	True				
ANR	1011351	CallExpression	"smart_str_appendc ( buf , '&' )"		1010651	0					
ANR	1011352	Callee	smart_str_appendc		1010651	0					
ANR	1011353	Identifier	smart_str_appendc		1010651	0					
ANR	1011354	ArgumentList	buf		1010651	1					
ANR	1011355	Argument	buf		1010651	0					
ANR	1011356	Identifier	buf		1010651	0					
ANR	1011357	Argument	'&'		1010651	1					
ANR	1011358	PrimaryExpression	'&'		1010651	0					
ANR	1011359	BreakStatement	break ;	419:5:10702:10707	1010651	32	True				
ANR	1011360	Label	case '\\'' :	421:4:10714:10723	1010651	33	True				
ANR	1011361	IfStatement	if ( options & PHP_JSON_HEX_APOS )		1010651	34					
ANR	1011362	Condition	options & PHP_JSON_HEX_APOS	422:9:10734:10760	1010651	0	True				
ANR	1011363	BitAndExpression	options & PHP_JSON_HEX_APOS		1010651	0		&			
ANR	1011364	Identifier	options		1010651	0					
ANR	1011365	Identifier	PHP_JSON_HEX_APOS		1010651	1					
ANR	1011366	CompoundStatement		144:38:3357:3357	1010651	1					
ANR	1011367	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u0027"" , 6 )"	423:6:10771:10807	1010651	0	True				
ANR	1011368	CallExpression	"smart_str_appendl ( buf , ""\\\\u0027"" , 6 )"		1010651	0					
ANR	1011369	Callee	smart_str_appendl		1010651	0					
ANR	1011370	Identifier	smart_str_appendl		1010651	0					
ANR	1011371	ArgumentList	buf		1010651	1					
ANR	1011372	Argument	buf		1010651	0					
ANR	1011373	Identifier	buf		1010651	0					
ANR	1011374	Argument	"""\\\\u0027"""		1010651	1					
ANR	1011375	PrimaryExpression	"""\\\\u0027"""		1010651	0					
ANR	1011376	Argument	6		1010651	2					
ANR	1011377	PrimaryExpression	6		1010651	0					
ANR	1011378	ElseStatement	else		1010651	0					
ANR	1011379	CompoundStatement		146:12:3415:3415	1010651	0					
ANR	1011380	ExpressionStatement	"smart_str_appendc ( buf , '\\'' )"	425:6:10829:10857	1010651	0	True				
ANR	1011381	CallExpression	"smart_str_appendc ( buf , '\\'' )"		1010651	0					
ANR	1011382	Callee	smart_str_appendc		1010651	0					
ANR	1011383	Identifier	smart_str_appendc		1010651	0					
ANR	1011384	ArgumentList	buf		1010651	1					
ANR	1011385	Argument	buf		1010651	0					
ANR	1011386	Identifier	buf		1010651	0					
ANR	1011387	Argument	'\\''		1010651	1					
ANR	1011388	PrimaryExpression	'\\''		1010651	0					
ANR	1011389	BreakStatement	break ;	427:5:10871:10876	1010651	35	True				
ANR	1011390	Label	default :	429:4:10883:10890	1010651	36	True				
ANR	1011391	Identifier	default		1010651	0					
ANR	1011392	IfStatement	if ( us >= ' ' )		1010651	37					
ANR	1011393	Condition	us >= ' '	430:9:10901:10909	1010651	0	True				
ANR	1011394	RelationalExpression	us >= ' '		1010651	0		>=			
ANR	1011395	Identifier	us		1010651	0					
ANR	1011396	PrimaryExpression	' '		1010651	1					
ANR	1011397	CompoundStatement		152:20:3506:3506	1010651	1					
ANR	1011398	ExpressionStatement	"smart_str_appendc ( buf , ( unsigned char ) us )"	431:6:10920:10962	1010651	0	True				
ANR	1011399	CallExpression	"smart_str_appendc ( buf , ( unsigned char ) us )"		1010651	0					
ANR	1011400	Callee	smart_str_appendc		1010651	0					
ANR	1011401	Identifier	smart_str_appendc		1010651	0					
ANR	1011402	ArgumentList	buf		1010651	1					
ANR	1011403	Argument	buf		1010651	0					
ANR	1011404	Identifier	buf		1010651	0					
ANR	1011405	Argument	( unsigned char ) us		1010651	1					
ANR	1011406	CastExpression	( unsigned char ) us		1010651	0					
ANR	1011407	CastTarget	unsigned char		1010651	0					
ANR	1011408	Identifier	us		1010651	1					
ANR	1011409	ElseStatement	else		1010651	0					
ANR	1011410	CompoundStatement		154:12:3570:3570	1010651	0					
ANR	1011411	ExpressionStatement	"smart_str_appendl ( buf , ""\\\\u00"" , sizeof ( ""\\\\u00"" ) - 1 )"	433:6:10984:11034	1010651	0	True				
ANR	1011412	CallExpression	"smart_str_appendl ( buf , ""\\\\u00"" , sizeof ( ""\\\\u00"" ) - 1 )"		1010651	0					
ANR	1011413	Callee	smart_str_appendl		1010651	0					
ANR	1011414	Identifier	smart_str_appendl		1010651	0					
ANR	1011415	ArgumentList	buf		1010651	1					
ANR	1011416	Argument	buf		1010651	0					
ANR	1011417	Identifier	buf		1010651	0					
ANR	1011418	Argument	"""\\\\u00"""		1010651	1					
ANR	1011419	PrimaryExpression	"""\\\\u00"""		1010651	0					
ANR	1011420	Argument	"sizeof ( ""\\\\u00"" ) - 1"		1010651	2					
ANR	1011421	AdditiveExpression	"sizeof ( ""\\\\u00"" ) - 1"		1010651	0		-			
ANR	1011422	SizeofExpression	"sizeof ( ""\\\\u00"" )"		1010651	0					
ANR	1011423	Sizeof	sizeof		1010651	0					
ANR	1011424	PrimaryExpression	"""\\\\u00"""		1010651	1					
ANR	1011425	PrimaryExpression	1		1010651	1					
ANR	1011426	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf0 ) >> 4 ] )"	434:6:11042:11092	1010651	1	True				
ANR	1011427	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf0 ) >> 4 ] )"		1010651	0					
ANR	1011428	Callee	smart_str_appendc		1010651	0					
ANR	1011429	Identifier	smart_str_appendc		1010651	0					
ANR	1011430	ArgumentList	buf		1010651	1					
ANR	1011431	Argument	buf		1010651	0					
ANR	1011432	Identifier	buf		1010651	0					
ANR	1011433	Argument	digits [ ( us & 0xf0 ) >> 4 ]		1010651	1					
ANR	1011434	ArrayIndexing	digits [ ( us & 0xf0 ) >> 4 ]		1010651	0					
ANR	1011435	Identifier	digits		1010651	0					
ANR	1011436	ShiftExpression	( us & 0xf0 ) >> 4		1010651	1		>>			
ANR	1011437	BitAndExpression	us & 0xf0		1010651	0		&			
ANR	1011438	Identifier	us		1010651	0					
ANR	1011439	PrimaryExpression	0xf0		1010651	1					
ANR	1011440	PrimaryExpression	4		1010651	1					
ANR	1011441	ExpressionStatement	"smart_str_appendc ( buf , digits [ ( us & 0xf ) ] )"	435:6:11100:11142	1010651	2	True				
ANR	1011442	CallExpression	"smart_str_appendc ( buf , digits [ ( us & 0xf ) ] )"		1010651	0					
ANR	1011443	Callee	smart_str_appendc		1010651	0					
ANR	1011444	Identifier	smart_str_appendc		1010651	0					
ANR	1011445	ArgumentList	buf		1010651	1					
ANR	1011446	Argument	buf		1010651	0					
ANR	1011447	Identifier	buf		1010651	0					
ANR	1011448	Argument	digits [ ( us & 0xf ) ]		1010651	1					
ANR	1011449	ArrayIndexing	digits [ ( us & 0xf ) ]		1010651	0					
ANR	1011450	Identifier	digits		1010651	0					
ANR	1011451	BitAndExpression	us & 0xf		1010651	1		&			
ANR	1011452	Identifier	us		1010651	0					
ANR	1011453	PrimaryExpression	0xf		1010651	1					
ANR	1011454	BreakStatement	break ;	437:5:11156:11161	1010651	38	True				
ANR	1011455	Condition	pos < len	440:10:11182:11190	1010651	1	True				
ANR	1011456	RelationalExpression	pos < len		1010651	0		<			
ANR	1011457	Identifier	pos		1010651	0					
ANR	1011458	Identifier	len		1010651	1					
ANR	1011459	ExpressionStatement	"smart_str_appendc ( buf , '""' )"	442:1:11196:11223	1010651	11	True				
ANR	1011460	CallExpression	"smart_str_appendc ( buf , '""' )"		1010651	0					
ANR	1011461	Callee	smart_str_appendc		1010651	0					
ANR	1011462	Identifier	smart_str_appendc		1010651	0					
ANR	1011463	ArgumentList	buf		1010651	1					
ANR	1011464	Argument	buf		1010651	0					
ANR	1011465	Identifier	buf		1010651	0					
ANR	1011466	Argument	"'""'"		1010651	1					
ANR	1011467	PrimaryExpression	"'""'"		1010651	0					
ANR	1011468	ReturnType	static void		1010651	1					
ANR	1011469	Identifier	php_json_escape_string		1010651	2					
ANR	1011470	ParameterList	"smart_str * buf , char * s , size_t len , int options"		1010651	3					
ANR	1011471	Parameter	smart_str * buf	278:35:7345:7358	1010651	0	True				
ANR	1011472	ParameterType	smart_str *		1010651	0					
ANR	1011473	Identifier	buf		1010651	1					
ANR	1011474	Parameter	char * s	278:51:7361:7367	1010651	1	True				
ANR	1011475	ParameterType	char *		1010651	0					
ANR	1011476	Identifier	s		1010651	1					
ANR	1011477	Parameter	size_t len	278:60:7370:7379	1010651	2	True				
ANR	1011478	ParameterType	size_t		1010651	0					
ANR	1011479	Identifier	len		1010651	1					
ANR	1011480	Parameter	int options	278:72:7382:7392	1010651	3	True				
ANR	1011481	ParameterType	int		1010651	0					
ANR	1011482	Identifier	options		1010651	1					
ANR	1011483	CFGEntryNode	ENTRY		1010651		True				
ANR	1011484	CFGExitNode	EXIT		1010651		True				
ANR	1011485	Symbol	checkpoint		1010651						
ANR	1011486	Symbol	php_json_is_valid_double		1010651						
ANR	1011487	Symbol	PHP_JSON_HEX_AMP		1010651						
ANR	1011488	Symbol	buf -> s		1010651						
ANR	1011489	Symbol	PHP_JSON_UNESCAPED_UNICODE		1010651						
ANR	1011490	Symbol	php_next_utf8_char		1010651						
ANR	1011491	Symbol	* us		1010651						
ANR	1011492	Symbol	* digits		1010651						
ANR	1011493	Symbol	type		1010651						
ANR	1011494	Symbol	JSON_G		1010651						
ANR	1011495	Symbol	PHP_JSON_NUMERIC_CHECK		1010651						
ANR	1011496	Symbol	len		1010651						
ANR	1011497	Symbol	pos		1010651						
ANR	1011498	Symbol	PHP_JSON_HEX_APOS		1010651						
ANR	1011499	Symbol	IS_LONG		1010651						
ANR	1011500	Symbol	options		1010651						
ANR	1011501	Symbol	PHP_JSON_UNESCAPED_SLASHES		1010651						
ANR	1011502	Symbol	us		1010651						
ANR	1011503	Symbol	* buf		1010651						
ANR	1011504	Symbol	NULL		1010651						
ANR	1011505	Symbol	SUCCESS		1010651						
ANR	1011506	Symbol	d		1010651						
ANR	1011507	Symbol	PHP_JSON_HEX_QUOT		1010651						
ANR	1011508	Symbol	& d		1010651						
ANR	1011509	Symbol	php_json_utf8_to_utf16		1010651						
ANR	1011510	Symbol	PHP_JSON_ERROR_UTF8		1010651						
ANR	1011511	Symbol	& status		1010651						
ANR	1011512	Symbol	p		1010651						
ANR	1011513	Symbol	buf		1010651						
ANR	1011514	Symbol	next_us		1010651						
ANR	1011515	Symbol	s		1010651						
ANR	1011516	Symbol	is_numeric_string		1010651						
ANR	1011517	Symbol	& p		1010651						
ANR	1011518	Symbol	PHP_JSON_HEX_TAG		1010651						
ANR	1011519	Symbol	ZSTR_LEN		1010651						
ANR	1011520	Symbol	IS_DOUBLE		1010651						
ANR	1011521	Symbol	error_code		1010651						
ANR	1011522	Symbol	digits		1010651						
ANR	1011523	Symbol	* s		1010651						
ANR	1011524	Symbol	& pos		1010651						
ANR	1011525	Symbol	* pos		1010651						
ANR	1011526	Symbol	status		1010651						
ANR	1011527	Function	php_json_encode_serializable_object	446:0:11238:12567							
ANR	1011528	FunctionDef	"php_json_encode_serializable_object (smart_str * buf , zval * val , int options)"		1011527	0					
ANR	1011529	CompoundStatement		447:0:11336:12567	1011527	0					
ANR	1011530	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( val ) ;	448:1:11339:11376	1011527	0	True				
ANR	1011531	IdentifierDecl	* ce = Z_OBJCE_P ( val )		1011527	0					
ANR	1011532	IdentifierDeclType	zend_class_entry *		1011527	0					
ANR	1011533	Identifier	ce		1011527	1					
ANR	1011534	AssignmentExpression	* ce = Z_OBJCE_P ( val )		1011527	2		=			
ANR	1011535	Identifier	ce		1011527	0					
ANR	1011536	CallExpression	Z_OBJCE_P ( val )		1011527	1					
ANR	1011537	Callee	Z_OBJCE_P		1011527	0					
ANR	1011538	Identifier	Z_OBJCE_P		1011527	0					
ANR	1011539	ArgumentList	val		1011527	1					
ANR	1011540	Argument	val		1011527	0					
ANR	1011541	Identifier	val		1011527	0					
ANR	1011542	IdentifierDeclStatement	"zval retval , fname ;"	449:1:11379:11397	1011527	1	True				
ANR	1011543	IdentifierDecl	retval		1011527	0					
ANR	1011544	IdentifierDeclType	zval		1011527	0					
ANR	1011545	Identifier	retval		1011527	1					
ANR	1011546	IdentifierDecl	fname		1011527	1					
ANR	1011547	IdentifierDeclType	zval		1011527	0					
ANR	1011548	Identifier	fname		1011527	1					
ANR	1011549	IdentifierDeclStatement	HashTable * myht ;	450:1:11400:11415	1011527	2	True				
ANR	1011550	IdentifierDecl	* myht		1011527	0					
ANR	1011551	IdentifierDeclType	HashTable *		1011527	0					
ANR	1011552	Identifier	myht		1011527	1					
ANR	1011553	IfStatement	if ( Z_TYPE_P ( val ) == IS_ARRAY )		1011527	3					
ANR	1011554	Condition	Z_TYPE_P ( val ) == IS_ARRAY	452:5:11423:11447	1011527	0	True				
ANR	1011555	EqualityExpression	Z_TYPE_P ( val ) == IS_ARRAY		1011527	0		==			
ANR	1011556	CallExpression	Z_TYPE_P ( val )		1011527	0					
ANR	1011557	Callee	Z_TYPE_P		1011527	0					
ANR	1011558	Identifier	Z_TYPE_P		1011527	0					
ANR	1011559	ArgumentList	val		1011527	1					
ANR	1011560	Argument	val		1011527	0					
ANR	1011561	Identifier	val		1011527	0					
ANR	1011562	Identifier	IS_ARRAY		1011527	1					
ANR	1011563	CompoundStatement		6:32:113:113	1011527	1					
ANR	1011564	ExpressionStatement	myht = Z_ARRVAL_P ( val )	453:2:11454:11476	1011527	0	True				
ANR	1011565	AssignmentExpression	myht = Z_ARRVAL_P ( val )		1011527	0		=			
ANR	1011566	Identifier	myht		1011527	0					
ANR	1011567	CallExpression	Z_ARRVAL_P ( val )		1011527	1					
ANR	1011568	Callee	Z_ARRVAL_P		1011527	0					
ANR	1011569	Identifier	Z_ARRVAL_P		1011527	0					
ANR	1011570	ArgumentList	val		1011527	1					
ANR	1011571	Argument	val		1011527	0					
ANR	1011572	Identifier	val		1011527	0					
ANR	1011573	ElseStatement	else		1011527	0					
ANR	1011574	CompoundStatement		8:8:149:149	1011527	0					
ANR	1011575	ExpressionStatement	myht = Z_OBJPROP_P ( val )	455:2:11490:11513	1011527	0	True				
ANR	1011576	AssignmentExpression	myht = Z_OBJPROP_P ( val )		1011527	0		=			
ANR	1011577	Identifier	myht		1011527	0					
ANR	1011578	CallExpression	Z_OBJPROP_P ( val )		1011527	1					
ANR	1011579	Callee	Z_OBJPROP_P		1011527	0					
ANR	1011580	Identifier	Z_OBJPROP_P		1011527	0					
ANR	1011581	ArgumentList	val		1011527	1					
ANR	1011582	Argument	val		1011527	0					
ANR	1011583	Identifier	val		1011527	0					
ANR	1011584	IfStatement	if ( myht && ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1 )		1011527	4					
ANR	1011585	Condition	myht && ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1	458:5:11524:11566	1011527	0	True				
ANR	1011586	AndExpression	myht && ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1		1011527	0		&&			
ANR	1011587	Identifier	myht		1011527	0					
ANR	1011588	RelationalExpression	ZEND_HASH_GET_APPLY_COUNT ( myht ) > 1		1011527	1		>			
ANR	1011589	CallExpression	ZEND_HASH_GET_APPLY_COUNT ( myht )		1011527	0					
ANR	1011590	Callee	ZEND_HASH_GET_APPLY_COUNT		1011527	0					
ANR	1011591	Identifier	ZEND_HASH_GET_APPLY_COUNT		1011527	0					
ANR	1011592	ArgumentList	myht		1011527	1					
ANR	1011593	Argument	myht		1011527	0					
ANR	1011594	Identifier	myht		1011527	0					
ANR	1011595	PrimaryExpression	1		1011527	1					
ANR	1011596	CompoundStatement		12:50:232:232	1011527	1					
ANR	1011597	ExpressionStatement	JSON_G ( error_code ) = PHP_JSON_ERROR_RECURSION	459:2:11573:11618	1011527	0	True				
ANR	1011598	AssignmentExpression	JSON_G ( error_code ) = PHP_JSON_ERROR_RECURSION		1011527	0		=			
ANR	1011599	CallExpression	JSON_G ( error_code )		1011527	0					
ANR	1011600	Callee	JSON_G		1011527	0					
ANR	1011601	Identifier	JSON_G		1011527	0					
ANR	1011602	ArgumentList	error_code		1011527	1					
ANR	1011603	Argument	error_code		1011527	0					
ANR	1011604	Identifier	error_code		1011527	0					
ANR	1011605	Identifier	PHP_JSON_ERROR_RECURSION		1011527	1					
ANR	1011606	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , 4 )"	460:2:11622:11655	1011527	1	True				
ANR	1011607	CallExpression	"smart_str_appendl ( buf , ""null"" , 4 )"		1011527	0					
ANR	1011608	Callee	smart_str_appendl		1011527	0					
ANR	1011609	Identifier	smart_str_appendl		1011527	0					
ANR	1011610	ArgumentList	buf		1011527	1					
ANR	1011611	Argument	buf		1011527	0					
ANR	1011612	Identifier	buf		1011527	0					
ANR	1011613	Argument	"""null"""		1011527	1					
ANR	1011614	PrimaryExpression	"""null"""		1011527	0					
ANR	1011615	Argument	4		1011527	2					
ANR	1011616	PrimaryExpression	4		1011527	0					
ANR	1011617	ReturnStatement	return ;	461:2:11659:11665	1011527	2	True				
ANR	1011618	ExpressionStatement	"ZVAL_STRING ( & fname , ""jsonSerialize"" )"	464:1:11672:11708	1011527	5	True				
ANR	1011619	CallExpression	"ZVAL_STRING ( & fname , ""jsonSerialize"" )"		1011527	0					
ANR	1011620	Callee	ZVAL_STRING		1011527	0					
ANR	1011621	Identifier	ZVAL_STRING		1011527	0					
ANR	1011622	ArgumentList	& fname		1011527	1					
ANR	1011623	Argument	& fname		1011527	0					
ANR	1011624	UnaryOperationExpression	& fname		1011527	0					
ANR	1011625	UnaryOperator	&		1011527	0					
ANR	1011626	Identifier	fname		1011527	1					
ANR	1011627	Argument	"""jsonSerialize"""		1011527	1					
ANR	1011628	PrimaryExpression	"""jsonSerialize"""		1011527	0					
ANR	1011629	IfStatement	"if ( FAILURE == call_user_function_ex ( EG ( function_table ) , val , & fname , & retval , 0 , NULL , 1 , NULL ) || Z_TYPE ( retval ) == IS_UNDEF )"		1011527	6					
ANR	1011630	Condition	"FAILURE == call_user_function_ex ( EG ( function_table ) , val , & fname , & retval , 0 , NULL , 1 , NULL ) || Z_TYPE ( retval ) == IS_UNDEF"	466:5:11716:11837	1011527	0	True				
ANR	1011631	OrExpression	"FAILURE == call_user_function_ex ( EG ( function_table ) , val , & fname , & retval , 0 , NULL , 1 , NULL ) || Z_TYPE ( retval ) == IS_UNDEF"		1011527	0		||			
ANR	1011632	EqualityExpression	"FAILURE == call_user_function_ex ( EG ( function_table ) , val , & fname , & retval , 0 , NULL , 1 , NULL )"		1011527	0		==			
ANR	1011633	Identifier	FAILURE		1011527	0					
ANR	1011634	CallExpression	"call_user_function_ex ( EG ( function_table ) , val , & fname , & retval , 0 , NULL , 1 , NULL )"		1011527	1					
ANR	1011635	Callee	call_user_function_ex		1011527	0					
ANR	1011636	Identifier	call_user_function_ex		1011527	0					
ANR	1011637	ArgumentList	EG ( function_table )		1011527	1					
ANR	1011638	Argument	EG ( function_table )		1011527	0					
ANR	1011639	CallExpression	EG ( function_table )		1011527	0					
ANR	1011640	Callee	EG		1011527	0					
ANR	1011641	Identifier	EG		1011527	0					
ANR	1011642	ArgumentList	function_table		1011527	1					
ANR	1011643	Argument	function_table		1011527	0					
ANR	1011644	Identifier	function_table		1011527	0					
ANR	1011645	Argument	val		1011527	1					
ANR	1011646	Identifier	val		1011527	0					
ANR	1011647	Argument	& fname		1011527	2					
ANR	1011648	UnaryOperationExpression	& fname		1011527	0					
ANR	1011649	UnaryOperator	&		1011527	0					
ANR	1011650	Identifier	fname		1011527	1					
ANR	1011651	Argument	& retval		1011527	3					
ANR	1011652	UnaryOperationExpression	& retval		1011527	0					
ANR	1011653	UnaryOperator	&		1011527	0					
ANR	1011654	Identifier	retval		1011527	1					
ANR	1011655	Argument	0		1011527	4					
ANR	1011656	PrimaryExpression	0		1011527	0					
ANR	1011657	Argument	NULL		1011527	5					
ANR	1011658	Identifier	NULL		1011527	0					
ANR	1011659	Argument	1		1011527	6					
ANR	1011660	PrimaryExpression	1		1011527	0					
ANR	1011661	Argument	NULL		1011527	7					
ANR	1011662	Identifier	NULL		1011527	0					
ANR	1011663	EqualityExpression	Z_TYPE ( retval ) == IS_UNDEF		1011527	1		==			
ANR	1011664	CallExpression	Z_TYPE ( retval )		1011527	0					
ANR	1011665	Callee	Z_TYPE		1011527	0					
ANR	1011666	Identifier	Z_TYPE		1011527	0					
ANR	1011667	ArgumentList	retval		1011527	1					
ANR	1011668	Argument	retval		1011527	0					
ANR	1011669	Identifier	retval		1011527	0					
ANR	1011670	Identifier	IS_UNDEF		1011527	1					
ANR	1011671	CompoundStatement		20:129:503:503	1011527	1					
ANR	1011672	ExpressionStatement	"zend_throw_exception_ex ( NULL , 0 , ""Failed calling %s::jsonSerialize()"" , ZSTR_VAL ( ce -> name ) )"	467:2:11844:11934	1011527	0	True				
ANR	1011673	CallExpression	"zend_throw_exception_ex ( NULL , 0 , ""Failed calling %s::jsonSerialize()"" , ZSTR_VAL ( ce -> name ) )"		1011527	0					
ANR	1011674	Callee	zend_throw_exception_ex		1011527	0					
ANR	1011675	Identifier	zend_throw_exception_ex		1011527	0					
ANR	1011676	ArgumentList	NULL		1011527	1					
ANR	1011677	Argument	NULL		1011527	0					
ANR	1011678	Identifier	NULL		1011527	0					
ANR	1011679	Argument	0		1011527	1					
ANR	1011680	PrimaryExpression	0		1011527	0					
ANR	1011681	Argument	"""Failed calling %s::jsonSerialize()"""		1011527	2					
ANR	1011682	PrimaryExpression	"""Failed calling %s::jsonSerialize()"""		1011527	0					
ANR	1011683	Argument	ZSTR_VAL ( ce -> name )		1011527	3					
ANR	1011684	CallExpression	ZSTR_VAL ( ce -> name )		1011527	0					
ANR	1011685	Callee	ZSTR_VAL		1011527	0					
ANR	1011686	Identifier	ZSTR_VAL		1011527	0					
ANR	1011687	ArgumentList	ce -> name		1011527	1					
ANR	1011688	Argument	ce -> name		1011527	0					
ANR	1011689	PtrMemberAccess	ce -> name		1011527	0					
ANR	1011690	Identifier	ce		1011527	0					
ANR	1011691	Identifier	name		1011527	1					
ANR	1011692	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , sizeof ( ""null"" ) - 1 )"	468:2:11938:11988	1011527	1	True				
ANR	1011693	CallExpression	"smart_str_appendl ( buf , ""null"" , sizeof ( ""null"" ) - 1 )"		1011527	0					
ANR	1011694	Callee	smart_str_appendl		1011527	0					
ANR	1011695	Identifier	smart_str_appendl		1011527	0					
ANR	1011696	ArgumentList	buf		1011527	1					
ANR	1011697	Argument	buf		1011527	0					
ANR	1011698	Identifier	buf		1011527	0					
ANR	1011699	Argument	"""null"""		1011527	1					
ANR	1011700	PrimaryExpression	"""null"""		1011527	0					
ANR	1011701	Argument	"sizeof ( ""null"" ) - 1"		1011527	2					
ANR	1011702	AdditiveExpression	"sizeof ( ""null"" ) - 1"		1011527	0		-			
ANR	1011703	SizeofExpression	"sizeof ( ""null"" )"		1011527	0					
ANR	1011704	Sizeof	sizeof		1011527	0					
ANR	1011705	PrimaryExpression	"""null"""		1011527	1					
ANR	1011706	PrimaryExpression	1		1011527	1					
ANR	1011707	ExpressionStatement	zval_ptr_dtor ( & fname )	469:2:11992:12013	1011527	2	True				
ANR	1011708	CallExpression	zval_ptr_dtor ( & fname )		1011527	0					
ANR	1011709	Callee	zval_ptr_dtor		1011527	0					
ANR	1011710	Identifier	zval_ptr_dtor		1011527	0					
ANR	1011711	ArgumentList	& fname		1011527	1					
ANR	1011712	Argument	& fname		1011527	0					
ANR	1011713	UnaryOperationExpression	& fname		1011527	0					
ANR	1011714	UnaryOperator	&		1011527	0					
ANR	1011715	Identifier	fname		1011527	1					
ANR	1011716	ReturnStatement	return ;	470:2:12017:12023	1011527	3	True				
ANR	1011717	IfStatement	if ( EG ( exception ) )		1011527	7					
ANR	1011718	Condition	EG ( exception )	473:5:12034:12046	1011527	0	True				
ANR	1011719	CallExpression	EG ( exception )		1011527	0					
ANR	1011720	Callee	EG		1011527	0					
ANR	1011721	Identifier	EG		1011527	0					
ANR	1011722	ArgumentList	exception		1011527	1					
ANR	1011723	Argument	exception		1011527	0					
ANR	1011724	Identifier	exception		1011527	0					
ANR	1011725	CompoundStatement		27:20:712:712	1011527	1					
ANR	1011726	ExpressionStatement	zval_ptr_dtor ( & retval )	475:2:12082:12104	1011527	0	True				
ANR	1011727	CallExpression	zval_ptr_dtor ( & retval )		1011527	0					
ANR	1011728	Callee	zval_ptr_dtor		1011527	0					
ANR	1011729	Identifier	zval_ptr_dtor		1011527	0					
ANR	1011730	ArgumentList	& retval		1011527	1					
ANR	1011731	Argument	& retval		1011527	0					
ANR	1011732	UnaryOperationExpression	& retval		1011527	0					
ANR	1011733	UnaryOperator	&		1011527	0					
ANR	1011734	Identifier	retval		1011527	1					
ANR	1011735	ExpressionStatement	zval_ptr_dtor ( & fname )	476:2:12108:12129	1011527	1	True				
ANR	1011736	CallExpression	zval_ptr_dtor ( & fname )		1011527	0					
ANR	1011737	Callee	zval_ptr_dtor		1011527	0					
ANR	1011738	Identifier	zval_ptr_dtor		1011527	0					
ANR	1011739	ArgumentList	& fname		1011527	1					
ANR	1011740	Argument	& fname		1011527	0					
ANR	1011741	UnaryOperationExpression	& fname		1011527	0					
ANR	1011742	UnaryOperator	&		1011527	0					
ANR	1011743	Identifier	fname		1011527	1					
ANR	1011744	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , sizeof ( ""null"" ) - 1 )"	477:2:12133:12183	1011527	2	True				
ANR	1011745	CallExpression	"smart_str_appendl ( buf , ""null"" , sizeof ( ""null"" ) - 1 )"		1011527	0					
ANR	1011746	Callee	smart_str_appendl		1011527	0					
ANR	1011747	Identifier	smart_str_appendl		1011527	0					
ANR	1011748	ArgumentList	buf		1011527	1					
ANR	1011749	Argument	buf		1011527	0					
ANR	1011750	Identifier	buf		1011527	0					
ANR	1011751	Argument	"""null"""		1011527	1					
ANR	1011752	PrimaryExpression	"""null"""		1011527	0					
ANR	1011753	Argument	"sizeof ( ""null"" ) - 1"		1011527	2					
ANR	1011754	AdditiveExpression	"sizeof ( ""null"" ) - 1"		1011527	0		-			
ANR	1011755	SizeofExpression	"sizeof ( ""null"" )"		1011527	0					
ANR	1011756	Sizeof	sizeof		1011527	0					
ANR	1011757	PrimaryExpression	"""null"""		1011527	1					
ANR	1011758	PrimaryExpression	1		1011527	1					
ANR	1011759	ReturnStatement	return ;	478:2:12187:12193	1011527	3	True				
ANR	1011760	IfStatement	if ( ( Z_TYPE ( retval ) == IS_OBJECT ) && ( Z_OBJ ( retval ) == Z_OBJ_P ( val ) ) )		1011527	8					
ANR	1011761	Condition	( Z_TYPE ( retval ) == IS_OBJECT ) && ( Z_OBJ ( retval ) == Z_OBJ_P ( val ) )	481:5:12204:12269	1011527	0	True				
ANR	1011762	AndExpression	( Z_TYPE ( retval ) == IS_OBJECT ) && ( Z_OBJ ( retval ) == Z_OBJ_P ( val ) )		1011527	0		&&			
ANR	1011763	EqualityExpression	Z_TYPE ( retval ) == IS_OBJECT		1011527	0		==			
ANR	1011764	CallExpression	Z_TYPE ( retval )		1011527	0					
ANR	1011765	Callee	Z_TYPE		1011527	0					
ANR	1011766	Identifier	Z_TYPE		1011527	0					
ANR	1011767	ArgumentList	retval		1011527	1					
ANR	1011768	Argument	retval		1011527	0					
ANR	1011769	Identifier	retval		1011527	0					
ANR	1011770	Identifier	IS_OBJECT		1011527	1					
ANR	1011771	EqualityExpression	Z_OBJ ( retval ) == Z_OBJ_P ( val )		1011527	1		==			
ANR	1011772	CallExpression	Z_OBJ ( retval )		1011527	0					
ANR	1011773	Callee	Z_OBJ		1011527	0					
ANR	1011774	Identifier	Z_OBJ		1011527	0					
ANR	1011775	ArgumentList	retval		1011527	1					
ANR	1011776	Argument	retval		1011527	0					
ANR	1011777	Identifier	retval		1011527	0					
ANR	1011778	CallExpression	Z_OBJ_P ( val )		1011527	1					
ANR	1011779	Callee	Z_OBJ_P		1011527	0					
ANR	1011780	Identifier	Z_OBJ_P		1011527	0					
ANR	1011781	ArgumentList	val		1011527	1					
ANR	1011782	Argument	val		1011527	0					
ANR	1011783	Identifier	val		1011527	0					
ANR	1011784	CompoundStatement		36:35:935:935	1011527	1					
ANR	1011785	ExpressionStatement	"php_json_encode_array ( buf , & retval , options )"	484:2:12374:12418	1011527	0	True				
ANR	1011786	CallExpression	"php_json_encode_array ( buf , & retval , options )"		1011527	0					
ANR	1011787	Callee	php_json_encode_array		1011527	0					
ANR	1011788	Identifier	php_json_encode_array		1011527	0					
ANR	1011789	ArgumentList	buf		1011527	1					
ANR	1011790	Argument	buf		1011527	0					
ANR	1011791	Identifier	buf		1011527	0					
ANR	1011792	Argument	& retval		1011527	1					
ANR	1011793	UnaryOperationExpression	& retval		1011527	0					
ANR	1011794	UnaryOperator	&		1011527	0					
ANR	1011795	Identifier	retval		1011527	1					
ANR	1011796	Argument	options		1011527	2					
ANR	1011797	Identifier	options		1011527	0					
ANR	1011798	ElseStatement	else		1011527	0					
ANR	1011799	CompoundStatement		39:8:1091:1091	1011527	0					
ANR	1011800	ExpressionStatement	"php_json_encode ( buf , & retval , options )"	487:2:12474:12512	1011527	0	True				
ANR	1011801	CallExpression	"php_json_encode ( buf , & retval , options )"		1011527	0					
ANR	1011802	Callee	php_json_encode		1011527	0					
ANR	1011803	Identifier	php_json_encode		1011527	0					
ANR	1011804	ArgumentList	buf		1011527	1					
ANR	1011805	Argument	buf		1011527	0					
ANR	1011806	Identifier	buf		1011527	0					
ANR	1011807	Argument	& retval		1011527	1					
ANR	1011808	UnaryOperationExpression	& retval		1011527	0					
ANR	1011809	UnaryOperator	&		1011527	0					
ANR	1011810	Identifier	retval		1011527	1					
ANR	1011811	Argument	options		1011527	2					
ANR	1011812	Identifier	options		1011527	0					
ANR	1011813	ExpressionStatement	zval_ptr_dtor ( & retval )	490:1:12519:12541	1011527	9	True				
ANR	1011814	CallExpression	zval_ptr_dtor ( & retval )		1011527	0					
ANR	1011815	Callee	zval_ptr_dtor		1011527	0					
ANR	1011816	Identifier	zval_ptr_dtor		1011527	0					
ANR	1011817	ArgumentList	& retval		1011527	1					
ANR	1011818	Argument	& retval		1011527	0					
ANR	1011819	UnaryOperationExpression	& retval		1011527	0					
ANR	1011820	UnaryOperator	&		1011527	0					
ANR	1011821	Identifier	retval		1011527	1					
ANR	1011822	ExpressionStatement	zval_ptr_dtor ( & fname )	491:1:12544:12565	1011527	10	True				
ANR	1011823	CallExpression	zval_ptr_dtor ( & fname )		1011527	0					
ANR	1011824	Callee	zval_ptr_dtor		1011527	0					
ANR	1011825	Identifier	zval_ptr_dtor		1011527	0					
ANR	1011826	ArgumentList	& fname		1011527	1					
ANR	1011827	Argument	& fname		1011527	0					
ANR	1011828	UnaryOperationExpression	& fname		1011527	0					
ANR	1011829	UnaryOperator	&		1011527	0					
ANR	1011830	Identifier	fname		1011527	1					
ANR	1011831	ReturnType	static void		1011527	1					
ANR	1011832	Identifier	php_json_encode_serializable_object		1011527	2					
ANR	1011833	ParameterList	"smart_str * buf , zval * val , int options"		1011527	3					
ANR	1011834	Parameter	smart_str * buf	446:48:11286:11299	1011527	0	True				
ANR	1011835	ParameterType	smart_str *		1011527	0					
ANR	1011836	Identifier	buf		1011527	1					
ANR	1011837	Parameter	zval * val	446:64:11302:11310	1011527	1	True				
ANR	1011838	ParameterType	zval *		1011527	0					
ANR	1011839	Identifier	val		1011527	1					
ANR	1011840	Parameter	int options	446:75:11313:11323	1011527	2	True				
ANR	1011841	ParameterType	int		1011527	0					
ANR	1011842	Identifier	options		1011527	1					
ANR	1011843	CFGEntryNode	ENTRY		1011527		True				
ANR	1011844	CFGExitNode	EXIT		1011527		True				
ANR	1011845	Symbol	exception		1011527						
ANR	1011846	Symbol	Z_OBJ_P		1011527						
ANR	1011847	Symbol	Z_TYPE		1011527						
ANR	1011848	Symbol	myht		1011527						
ANR	1011849	Symbol	* ce		1011527						
ANR	1011850	Symbol	JSON_G		1011527						
ANR	1011851	Symbol	Z_OBJ		1011527						
ANR	1011852	Symbol	IS_ARRAY		1011527						
ANR	1011853	Symbol	options		1011527						
ANR	1011854	Symbol	Z_OBJCE_P		1011527						
ANR	1011855	Symbol	& retval		1011527						
ANR	1011856	Symbol	ce -> name		1011527						
ANR	1011857	Symbol	Z_ARRVAL_P		1011527						
ANR	1011858	Symbol	IS_UNDEF		1011527						
ANR	1011859	Symbol	val		1011527						
ANR	1011860	Symbol	fname		1011527						
ANR	1011861	Symbol	ce		1011527						
ANR	1011862	Symbol	PHP_JSON_ERROR_RECURSION		1011527						
ANR	1011863	Symbol	EG		1011527						
ANR	1011864	Symbol	NULL		1011527						
ANR	1011865	Symbol	Z_OBJPROP_P		1011527						
ANR	1011866	Symbol	Z_TYPE_P		1011527						
ANR	1011867	Symbol	call_user_function_ex		1011527						
ANR	1011868	Symbol	FAILURE		1011527						
ANR	1011869	Symbol	retval		1011527						
ANR	1011870	Symbol	& fname		1011527						
ANR	1011871	Symbol	ZSTR_VAL		1011527						
ANR	1011872	Symbol	buf		1011527						
ANR	1011873	Symbol	ZEND_HASH_GET_APPLY_COUNT		1011527						
ANR	1011874	Symbol	error_code		1011527						
ANR	1011875	Symbol	function_table		1011527						
ANR	1011876	Symbol	IS_OBJECT		1011527						
ANR	1011877	Function	php_json_encode_zval	495:0:12580:13782							
ANR	1011878	FunctionDef	"php_json_encode_zval (smart_str * buf , zval * val , int options)"		1011877	0					
ANR	1011879	CompoundStatement		496:0:12656:13782	1011877	0					
ANR	1011880	Label	again :	497:0:12658:12663	1011877	0	True				
ANR	1011881	Identifier	again		1011877	0					
ANR	1011882	SwitchStatement	switch ( Z_TYPE_P ( val ) )		1011877	1					
ANR	1011883	Condition	Z_TYPE_P ( val )	498:9:12674:12686	1011877	0	True				
ANR	1011884	CallExpression	Z_TYPE_P ( val )		1011877	0					
ANR	1011885	Callee	Z_TYPE_P		1011877	0					
ANR	1011886	Identifier	Z_TYPE_P		1011877	0					
ANR	1011887	ArgumentList	val		1011877	1					
ANR	1011888	Argument	val		1011877	0					
ANR	1011889	Identifier	val		1011877	0					
ANR	1011890	CompoundStatement		4:1:33:33	1011877	1					
ANR	1011891	Label	case IS_NULL :	500:2:12694:12706	1011877	0	True				
ANR	1011892	Identifier	IS_NULL		1011877	0					
ANR	1011893	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , 4 )"	501:3:12711:12744	1011877	1	True				
ANR	1011894	CallExpression	"smart_str_appendl ( buf , ""null"" , 4 )"		1011877	0					
ANR	1011895	Callee	smart_str_appendl		1011877	0					
ANR	1011896	Identifier	smart_str_appendl		1011877	0					
ANR	1011897	ArgumentList	buf		1011877	1					
ANR	1011898	Argument	buf		1011877	0					
ANR	1011899	Identifier	buf		1011877	0					
ANR	1011900	Argument	"""null"""		1011877	1					
ANR	1011901	PrimaryExpression	"""null"""		1011877	0					
ANR	1011902	Argument	4		1011877	2					
ANR	1011903	PrimaryExpression	4		1011877	0					
ANR	1011904	BreakStatement	break ;	502:3:12749:12754	1011877	2	True				
ANR	1011905	Label	case IS_TRUE :	504:2:12759:12771	1011877	3	True				
ANR	1011906	Identifier	IS_TRUE		1011877	0					
ANR	1011907	ExpressionStatement	"smart_str_appendl ( buf , ""true"" , 4 )"	505:3:12776:12809	1011877	4	True				
ANR	1011908	CallExpression	"smart_str_appendl ( buf , ""true"" , 4 )"		1011877	0					
ANR	1011909	Callee	smart_str_appendl		1011877	0					
ANR	1011910	Identifier	smart_str_appendl		1011877	0					
ANR	1011911	ArgumentList	buf		1011877	1					
ANR	1011912	Argument	buf		1011877	0					
ANR	1011913	Identifier	buf		1011877	0					
ANR	1011914	Argument	"""true"""		1011877	1					
ANR	1011915	PrimaryExpression	"""true"""		1011877	0					
ANR	1011916	Argument	4		1011877	2					
ANR	1011917	PrimaryExpression	4		1011877	0					
ANR	1011918	BreakStatement	break ;	506:3:12814:12819	1011877	5	True				
ANR	1011919	Label	case IS_FALSE :	507:2:12823:12836	1011877	6	True				
ANR	1011920	Identifier	IS_FALSE		1011877	0					
ANR	1011921	ExpressionStatement	"smart_str_appendl ( buf , ""false"" , 5 )"	508:3:12841:12875	1011877	7	True				
ANR	1011922	CallExpression	"smart_str_appendl ( buf , ""false"" , 5 )"		1011877	0					
ANR	1011923	Callee	smart_str_appendl		1011877	0					
ANR	1011924	Identifier	smart_str_appendl		1011877	0					
ANR	1011925	ArgumentList	buf		1011877	1					
ANR	1011926	Argument	buf		1011877	0					
ANR	1011927	Identifier	buf		1011877	0					
ANR	1011928	Argument	"""false"""		1011877	1					
ANR	1011929	PrimaryExpression	"""false"""		1011877	0					
ANR	1011930	Argument	5		1011877	2					
ANR	1011931	PrimaryExpression	5		1011877	0					
ANR	1011932	BreakStatement	break ;	509:3:12880:12885	1011877	8	True				
ANR	1011933	Label	case IS_LONG :	511:2:12890:12902	1011877	9	True				
ANR	1011934	Identifier	IS_LONG		1011877	0					
ANR	1011935	ExpressionStatement	"smart_str_append_long ( buf , Z_LVAL_P ( val ) )"	512:3:12907:12948	1011877	10	True				
ANR	1011936	CallExpression	"smart_str_append_long ( buf , Z_LVAL_P ( val ) )"		1011877	0					
ANR	1011937	Callee	smart_str_append_long		1011877	0					
ANR	1011938	Identifier	smart_str_append_long		1011877	0					
ANR	1011939	ArgumentList	buf		1011877	1					
ANR	1011940	Argument	buf		1011877	0					
ANR	1011941	Identifier	buf		1011877	0					
ANR	1011942	Argument	Z_LVAL_P ( val )		1011877	1					
ANR	1011943	CallExpression	Z_LVAL_P ( val )		1011877	0					
ANR	1011944	Callee	Z_LVAL_P		1011877	0					
ANR	1011945	Identifier	Z_LVAL_P		1011877	0					
ANR	1011946	ArgumentList	val		1011877	1					
ANR	1011947	Argument	val		1011877	0					
ANR	1011948	Identifier	val		1011877	0					
ANR	1011949	BreakStatement	break ;	513:3:12953:12958	1011877	11	True				
ANR	1011950	Label	case IS_DOUBLE :	515:2:12963:12977	1011877	12	True				
ANR	1011951	Identifier	IS_DOUBLE		1011877	0					
ANR	1011952	IfStatement	if ( php_json_is_valid_double ( Z_DVAL_P ( val ) ) )		1011877	13					
ANR	1011953	Condition	php_json_is_valid_double ( Z_DVAL_P ( val ) )	516:7:12986:13024	1011877	0	True				
ANR	1011954	CallExpression	php_json_is_valid_double ( Z_DVAL_P ( val ) )		1011877	0					
ANR	1011955	Callee	php_json_is_valid_double		1011877	0					
ANR	1011956	Identifier	php_json_is_valid_double		1011877	0					
ANR	1011957	ArgumentList	Z_DVAL_P ( val )		1011877	1					
ANR	1011958	Argument	Z_DVAL_P ( val )		1011877	0					
ANR	1011959	CallExpression	Z_DVAL_P ( val )		1011877	0					
ANR	1011960	Callee	Z_DVAL_P		1011877	0					
ANR	1011961	Identifier	Z_DVAL_P		1011877	0					
ANR	1011962	ArgumentList	val		1011877	1					
ANR	1011963	Argument	val		1011877	0					
ANR	1011964	Identifier	val		1011877	0					
ANR	1011965	CompoundStatement		21:48:370:370	1011877	1					
ANR	1011966	ExpressionStatement	"php_json_encode_double ( buf , Z_DVAL_P ( val ) , options )"	517:4:13033:13084	1011877	0	True				
ANR	1011967	CallExpression	"php_json_encode_double ( buf , Z_DVAL_P ( val ) , options )"		1011877	0					
ANR	1011968	Callee	php_json_encode_double		1011877	0					
ANR	1011969	Identifier	php_json_encode_double		1011877	0					
ANR	1011970	ArgumentList	buf		1011877	1					
ANR	1011971	Argument	buf		1011877	0					
ANR	1011972	Identifier	buf		1011877	0					
ANR	1011973	Argument	Z_DVAL_P ( val )		1011877	1					
ANR	1011974	CallExpression	Z_DVAL_P ( val )		1011877	0					
ANR	1011975	Callee	Z_DVAL_P		1011877	0					
ANR	1011976	Identifier	Z_DVAL_P		1011877	0					
ANR	1011977	ArgumentList	val		1011877	1					
ANR	1011978	Argument	val		1011877	0					
ANR	1011979	Identifier	val		1011877	0					
ANR	1011980	Argument	options		1011877	2					
ANR	1011981	Identifier	options		1011877	0					
ANR	1011982	ElseStatement	else		1011877	0					
ANR	1011983	CompoundStatement		23:10:439:439	1011877	0					
ANR	1011984	ExpressionStatement	JSON_G ( error_code ) = PHP_JSON_ERROR_INF_OR_NAN	519:4:13102:13148	1011877	0	True				
ANR	1011985	AssignmentExpression	JSON_G ( error_code ) = PHP_JSON_ERROR_INF_OR_NAN		1011877	0		=			
ANR	1011986	CallExpression	JSON_G ( error_code )		1011877	0					
ANR	1011987	Callee	JSON_G		1011877	0					
ANR	1011988	Identifier	JSON_G		1011877	0					
ANR	1011989	ArgumentList	error_code		1011877	1					
ANR	1011990	Argument	error_code		1011877	0					
ANR	1011991	Identifier	error_code		1011877	0					
ANR	1011992	Identifier	PHP_JSON_ERROR_INF_OR_NAN		1011877	1					
ANR	1011993	ExpressionStatement	"smart_str_appendc ( buf , '0' )"	520:4:13154:13181	1011877	1	True				
ANR	1011994	CallExpression	"smart_str_appendc ( buf , '0' )"		1011877	0					
ANR	1011995	Callee	smart_str_appendc		1011877	0					
ANR	1011996	Identifier	smart_str_appendc		1011877	0					
ANR	1011997	ArgumentList	buf		1011877	1					
ANR	1011998	Argument	buf		1011877	0					
ANR	1011999	Identifier	buf		1011877	0					
ANR	1012000	Argument	'0'		1011877	1					
ANR	1012001	PrimaryExpression	'0'		1011877	0					
ANR	1012002	BreakStatement	break ;	522:3:13191:13196	1011877	14	True				
ANR	1012003	Label	case IS_STRING :	524:2:13201:13215	1011877	15	True				
ANR	1012004	Identifier	IS_STRING		1011877	0					
ANR	1012005	ExpressionStatement	"php_json_escape_string ( buf , Z_STRVAL_P ( val ) , Z_STRLEN_P ( val ) , options )"	525:3:13220:13290	1011877	16	True				
ANR	1012006	CallExpression	"php_json_escape_string ( buf , Z_STRVAL_P ( val ) , Z_STRLEN_P ( val ) , options )"		1011877	0					
ANR	1012007	Callee	php_json_escape_string		1011877	0					
ANR	1012008	Identifier	php_json_escape_string		1011877	0					
ANR	1012009	ArgumentList	buf		1011877	1					
ANR	1012010	Argument	buf		1011877	0					
ANR	1012011	Identifier	buf		1011877	0					
ANR	1012012	Argument	Z_STRVAL_P ( val )		1011877	1					
ANR	1012013	CallExpression	Z_STRVAL_P ( val )		1011877	0					
ANR	1012014	Callee	Z_STRVAL_P		1011877	0					
ANR	1012015	Identifier	Z_STRVAL_P		1011877	0					
ANR	1012016	ArgumentList	val		1011877	1					
ANR	1012017	Argument	val		1011877	0					
ANR	1012018	Identifier	val		1011877	0					
ANR	1012019	Argument	Z_STRLEN_P ( val )		1011877	2					
ANR	1012020	CallExpression	Z_STRLEN_P ( val )		1011877	0					
ANR	1012021	Callee	Z_STRLEN_P		1011877	0					
ANR	1012022	Identifier	Z_STRLEN_P		1011877	0					
ANR	1012023	ArgumentList	val		1011877	1					
ANR	1012024	Argument	val		1011877	0					
ANR	1012025	Identifier	val		1011877	0					
ANR	1012026	Argument	options		1011877	3					
ANR	1012027	Identifier	options		1011877	0					
ANR	1012028	BreakStatement	break ;	526:3:13295:13300	1011877	17	True				
ANR	1012029	Label	case IS_OBJECT :	528:2:13305:13319	1011877	18	True				
ANR	1012030	Identifier	IS_OBJECT		1011877	0					
ANR	1012031	IfStatement	"if ( instanceof_function ( Z_OBJCE_P ( val ) , php_json_serializable_ce ) )"		1011877	19					
ANR	1012032	Condition	"instanceof_function ( Z_OBJCE_P ( val ) , php_json_serializable_ce )"	529:7:13328:13388	1011877	0	True				
ANR	1012033	CallExpression	"instanceof_function ( Z_OBJCE_P ( val ) , php_json_serializable_ce )"		1011877	0					
ANR	1012034	Callee	instanceof_function		1011877	0					
ANR	1012035	Identifier	instanceof_function		1011877	0					
ANR	1012036	ArgumentList	Z_OBJCE_P ( val )		1011877	1					
ANR	1012037	Argument	Z_OBJCE_P ( val )		1011877	0					
ANR	1012038	CallExpression	Z_OBJCE_P ( val )		1011877	0					
ANR	1012039	Callee	Z_OBJCE_P		1011877	0					
ANR	1012040	Identifier	Z_OBJCE_P		1011877	0					
ANR	1012041	ArgumentList	val		1011877	1					
ANR	1012042	Argument	val		1011877	0					
ANR	1012043	Identifier	val		1011877	0					
ANR	1012044	Argument	php_json_serializable_ce		1011877	1					
ANR	1012045	Identifier	php_json_serializable_ce		1011877	0					
ANR	1012046	CompoundStatement		34:70:734:734	1011877	1					
ANR	1012047	ExpressionStatement	"php_json_encode_serializable_object ( buf , val , options )"	530:4:13397:13451	1011877	0	True				
ANR	1012048	CallExpression	"php_json_encode_serializable_object ( buf , val , options )"		1011877	0					
ANR	1012049	Callee	php_json_encode_serializable_object		1011877	0					
ANR	1012050	Identifier	php_json_encode_serializable_object		1011877	0					
ANR	1012051	ArgumentList	buf		1011877	1					
ANR	1012052	Argument	buf		1011877	0					
ANR	1012053	Identifier	buf		1011877	0					
ANR	1012054	Argument	val		1011877	1					
ANR	1012055	Identifier	val		1011877	0					
ANR	1012056	Argument	options		1011877	2					
ANR	1012057	Identifier	options		1011877	0					
ANR	1012058	BreakStatement	break ;	531:4:13457:13462	1011877	1	True				
ANR	1012059	Label	case IS_ARRAY :	534:2:13519:13532	1011877	20	True				
ANR	1012060	Identifier	IS_ARRAY		1011877	0					
ANR	1012061	ExpressionStatement	"php_json_encode_array ( buf , val , options )"	535:3:13537:13577	1011877	21	True				
ANR	1012062	CallExpression	"php_json_encode_array ( buf , val , options )"		1011877	0					
ANR	1012063	Callee	php_json_encode_array		1011877	0					
ANR	1012064	Identifier	php_json_encode_array		1011877	0					
ANR	1012065	ArgumentList	buf		1011877	1					
ANR	1012066	Argument	buf		1011877	0					
ANR	1012067	Identifier	buf		1011877	0					
ANR	1012068	Argument	val		1011877	1					
ANR	1012069	Identifier	val		1011877	0					
ANR	1012070	Argument	options		1011877	2					
ANR	1012071	Identifier	options		1011877	0					
ANR	1012072	BreakStatement	break ;	536:3:13582:13587	1011877	22	True				
ANR	1012073	Label	case IS_REFERENCE :	538:2:13592:13609	1011877	23	True				
ANR	1012074	Identifier	IS_REFERENCE		1011877	0					
ANR	1012075	ExpressionStatement	val = Z_REFVAL_P ( val )	539:3:13614:13635	1011877	24	True				
ANR	1012076	AssignmentExpression	val = Z_REFVAL_P ( val )		1011877	0		=			
ANR	1012077	Identifier	val		1011877	0					
ANR	1012078	CallExpression	Z_REFVAL_P ( val )		1011877	1					
ANR	1012079	Callee	Z_REFVAL_P		1011877	0					
ANR	1012080	Identifier	Z_REFVAL_P		1011877	0					
ANR	1012081	ArgumentList	val		1011877	1					
ANR	1012082	Argument	val		1011877	0					
ANR	1012083	Identifier	val		1011877	0					
ANR	1012084	GotoStatement	goto again ;	540:3:13640:13650	1011877	25	True				
ANR	1012085	Identifier	again		1011877	0					
ANR	1012086	Label	default :	542:2:13655:13662	1011877	26	True				
ANR	1012087	Identifier	default		1011877	0					
ANR	1012088	ExpressionStatement	JSON_G ( error_code ) = PHP_JSON_ERROR_UNSUPPORTED_TYPE	543:3:13667:13719	1011877	27	True				
ANR	1012089	AssignmentExpression	JSON_G ( error_code ) = PHP_JSON_ERROR_UNSUPPORTED_TYPE		1011877	0		=			
ANR	1012090	CallExpression	JSON_G ( error_code )		1011877	0					
ANR	1012091	Callee	JSON_G		1011877	0					
ANR	1012092	Identifier	JSON_G		1011877	0					
ANR	1012093	ArgumentList	error_code		1011877	1					
ANR	1012094	Argument	error_code		1011877	0					
ANR	1012095	Identifier	error_code		1011877	0					
ANR	1012096	Identifier	PHP_JSON_ERROR_UNSUPPORTED_TYPE		1011877	1					
ANR	1012097	ExpressionStatement	"smart_str_appendl ( buf , ""null"" , 4 )"	544:3:13724:13757	1011877	28	True				
ANR	1012098	CallExpression	"smart_str_appendl ( buf , ""null"" , 4 )"		1011877	0					
ANR	1012099	Callee	smart_str_appendl		1011877	0					
ANR	1012100	Identifier	smart_str_appendl		1011877	0					
ANR	1012101	ArgumentList	buf		1011877	1					
ANR	1012102	Argument	buf		1011877	0					
ANR	1012103	Identifier	buf		1011877	0					
ANR	1012104	Argument	"""null"""		1011877	1					
ANR	1012105	PrimaryExpression	"""null"""		1011877	0					
ANR	1012106	Argument	4		1011877	2					
ANR	1012107	PrimaryExpression	4		1011877	0					
ANR	1012108	BreakStatement	break ;	545:3:13762:13767	1011877	29	True				
ANR	1012109	ReturnStatement	return ;	548:1:13774:13780	1011877	2	True				
ANR	1012110	ReturnType	void		1011877	1					
ANR	1012111	Identifier	php_json_encode_zval		1011877	2					
ANR	1012112	ParameterList	"smart_str * buf , zval * val , int options"		1011877	3					
ANR	1012113	Parameter	smart_str * buf	495:26:12606:12619	1011877	0	True				
ANR	1012114	ParameterType	smart_str *		1011877	0					
ANR	1012115	Identifier	buf		1011877	1					
ANR	1012116	Parameter	zval * val	495:42:12622:12630	1011877	1	True				
ANR	1012117	ParameterType	zval *		1011877	0					
ANR	1012118	Identifier	val		1011877	1					
ANR	1012119	Parameter	int options	495:53:12633:12643	1011877	2	True				
ANR	1012120	ParameterType	int		1011877	0					
ANR	1012121	Identifier	options		1011877	1					
ANR	1012122	CFGEntryNode	ENTRY		1011877		True				
ANR	1012123	CFGExitNode	EXIT		1011877		True				
ANR	1012124	Symbol	val		1011877						
ANR	1012125	Symbol	php_json_is_valid_double		1011877						
ANR	1012126	Symbol	instanceof_function		1011877						
ANR	1012127	Symbol	PHP_JSON_ERROR_INF_OR_NAN		1011877						
ANR	1012128	Symbol	Z_TYPE_P		1011877						
ANR	1012129	Symbol	JSON_G		1011877						
ANR	1012130	Symbol	Z_STRVAL_P		1011877						
ANR	1012131	Symbol	Z_DVAL_P		1011877						
ANR	1012132	Symbol	Z_LVAL_P		1011877						
ANR	1012133	Symbol	buf		1011877						
ANR	1012134	Symbol	PHP_JSON_ERROR_UNSUPPORTED_TYPE		1011877						
ANR	1012135	Symbol	Z_REFVAL_P		1011877						
ANR	1012136	Symbol	options		1011877						
ANR	1012137	Symbol	Z_OBJCE_P		1011877						
ANR	1012138	Symbol	error_code		1011877						
ANR	1012139	Symbol	Z_STRLEN_P		1011877						
ANR	1012140	Symbol	php_json_serializable_ce		1011877						
