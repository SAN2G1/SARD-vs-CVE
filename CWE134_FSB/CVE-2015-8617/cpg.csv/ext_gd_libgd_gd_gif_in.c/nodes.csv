command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	848979	File	data/converged/CVE-2015-8617_php-src/ext_gd_libgd_gd_gif_in.c								
ANR	848980	DeclStmt									
ANR	848981	Decl							int	int	verbose_set
ANR	848982	DeclStmt									
ANR	848983	Decl							int	int	verbose
ANR	848984	Function	set_verbose	18:0:322:425							
ANR	848985	FunctionDef	set_verbose ()		848984	0					
ANR	848986	CompoundStatement		19:0:351:425	848984	0					
ANR	848987	ExpressionStatement	"verbose = ! ! getenv ( ""GIF_VERBOSE"" )"	20:1:354:387	848984	0	True				
ANR	848988	AssignmentExpression	"verbose = ! ! getenv ( ""GIF_VERBOSE"" )"		848984	0		=			
ANR	848989	Identifier	verbose		848984	0					
ANR	848990	UnaryOperationExpression	"! ! getenv ( ""GIF_VERBOSE"" )"		848984	1					
ANR	848991	UnaryOperator	!		848984	0					
ANR	848992	UnaryOperationExpression	"! getenv ( ""GIF_VERBOSE"" )"		848984	1					
ANR	848993	UnaryOperator	!		848984	0					
ANR	848994	CallExpression	"getenv ( ""GIF_VERBOSE"" )"		848984	1					
ANR	848995	Callee	getenv		848984	0					
ANR	848996	Identifier	getenv		848984	0					
ANR	848997	ArgumentList	"""GIF_VERBOSE"""		848984	1					
ANR	848998	Argument	"""GIF_VERBOSE"""		848984	0					
ANR	848999	PrimaryExpression	"""GIF_VERBOSE"""		848984	0					
ANR	849000	ExpressionStatement	verbose_set = 1	21:1:390:405	848984	1	True				
ANR	849001	AssignmentExpression	verbose_set = 1		848984	0		=			
ANR	849002	Identifier	verbose_set		848984	0					
ANR	849003	PrimaryExpression	1		848984	1					
ANR	849004	ReturnStatement	return ( verbose ) ;	22:1:408:423	848984	2	True				
ANR	849005	Identifier	verbose		848984	0					
ANR	849006	ReturnType	static int		848984	1					
ANR	849007	Identifier	set_verbose		848984	2					
ANR	849008	ParameterList			848984	3					
ANR	849009	CFGEntryNode	ENTRY		848984		True				
ANR	849010	CFGExitNode	EXIT		848984		True				
ANR	849011	Symbol	verbose_set		848984						
ANR	849012	Symbol	verbose		848984						
ANR	849013	Symbol	getenv		848984						
ANR	849014	ClassDef	<unnamed>	53:7:1036:1272							
ANR	849015	DeclStmt									
ANR	849016	Decl							unsigned int	unsigned int	Width
ANR	849017	DeclStmt									
ANR	849018	Decl							unsigned int	unsigned int	Height
ANR	849019	DeclStmt									
ANR	849020	Decl							unsigned int	unsigned int	BitPixel
ANR	849021	DeclStmt									
ANR	849022	Decl							unsigned int	unsigned int	ColorResolution
ANR	849023	DeclStmt									
ANR	849024	Decl							unsigned int	unsigned int	Background
ANR	849025	DeclStmt									
ANR	849026	Decl							unsigned int	unsigned int	AspectRatio
ANR	849027	DeclStmt									
ANR	849028	Decl									GifScreen
ANR	849029	ClassDef	<unnamed>	65:7:1295:1412							
ANR	849030	DeclStmt									
ANR	849031	Decl							int	int	transparent
ANR	849032	DeclStmt									
ANR	849033	Decl							int	int	delayTime
ANR	849034	DeclStmt									
ANR	849035	Decl							int	int	inputFlag
ANR	849036	DeclStmt									
ANR	849037	Decl							int	int	disposal
ANR	849038	DeclStmt									
ANR	849039	Decl									Gif89
ANR	849040	ClassDef	<unnamed>	77:8:1500:1616							
ANR	849041	DeclStmt									
ANR	849042	Decl							unsigned char	unsigned char [ CSD_BUF_SIZE ]	buf
ANR	849043	DeclStmt									
ANR	849044	Decl							int	int	curbit
ANR	849045	Decl							int	int	lastbit
ANR	849046	Decl							int	int	done
ANR	849047	Decl							int	int	last_byte
ANR	849048	DeclStmt									
ANR	849049	Decl									CODE_STATIC_DATA
ANR	849050	ClassDef	<unnamed>	82:8:1627:1865							
ANR	849051	DeclStmt									
ANR	849052	Decl							int	int	fresh
ANR	849053	DeclStmt									
ANR	849054	Decl							int	int	code_size
ANR	849055	Decl							int	int	set_code_size
ANR	849056	DeclStmt									
ANR	849057	Decl							int	int	max_code
ANR	849058	Decl							int	int	max_code_size
ANR	849059	DeclStmt									
ANR	849060	Decl							int	int	firstcode
ANR	849061	Decl							int	int	oldcode
ANR	849062	DeclStmt									
ANR	849063	Decl							int	int	clear_code
ANR	849064	Decl							int	int	end_code
ANR	849065	DeclStmt									
ANR	849066	Decl							int	int [ STACK_SIZE ]	stack
ANR	849067	Decl							int	int *	sp
ANR	849068	DeclStmt									
ANR	849069	Decl							CODE_STATIC_DATA	CODE_STATIC_DATA	scd
ANR	849070	DeclStmt									
ANR	849071	Decl									LZW_STATIC_DATA
ANR	849072	DeclStmt									
ANR	849073	Decl							int	"int ( gdIOCtx * fd , int number , unsigned char ( * buffer ) [ 256 ] )"	ReadColorMap
ANR	849074	DeclStmt									
ANR	849075	Decl							int	"int ( gdIOCtx * fd , int label , int * Transparent , int * ZeroDataBlockP )"	DoExtension
ANR	849076	DeclStmt									
ANR	849077	Decl							int	"int ( gdIOCtx * fd , unsigned char * buf , int * ZeroDataBlockP )"	GetDataBlock
ANR	849078	DeclStmt									
ANR	849079	Decl							int	"int ( gdIOCtx * fd , CODE_STATIC_DATA * scd , int code_size , int flag , int * ZeroDataBlockP )"	GetCode
ANR	849080	DeclStmt									
ANR	849081	Decl							int	"int ( gdIOCtx * fd , LZW_STATIC_DATA * sd , char flag , int input_code_size , int * ZeroDataBlockP )"	LWZReadByte
ANR	849082	DeclStmt									
ANR	849083	Decl							void	"void ( gdImagePtr im , gdIOCtx * fd , int len , int height , unsigned char ( * cmap ) [ 256 ] , int interlace , int * ZeroDataBlockP )"	ReadImage
ANR	849084	Function	gdImageCreateFromGifSource	101:0:2496:2708							
ANR	849085	FunctionDef	gdImageCreateFromGifSource (gdSourcePtr inSource)		849084	0					
ANR	849086	CompoundStatement		102:0:2566:2708	849084	0					
ANR	849087	IdentifierDeclStatement	"gdIOCtx * in = gdNewSSCtx ( inSource , NULL ) ;"	103:1:2569:2617	849084	0	True				
ANR	849088	IdentifierDecl	"* in = gdNewSSCtx ( inSource , NULL )"		849084	0					
ANR	849089	IdentifierDeclType	gdIOCtx *		849084	0					
ANR	849090	Identifier	in		849084	1					
ANR	849091	AssignmentExpression	"* in = gdNewSSCtx ( inSource , NULL )"		849084	2		=			
ANR	849092	Identifier	in		849084	0					
ANR	849093	CallExpression	"gdNewSSCtx ( inSource , NULL )"		849084	1					
ANR	849094	Callee	gdNewSSCtx		849084	0					
ANR	849095	Identifier	gdNewSSCtx		849084	0					
ANR	849096	ArgumentList	inSource		849084	1					
ANR	849097	Argument	inSource		849084	0					
ANR	849098	Identifier	inSource		849084	0					
ANR	849099	Argument	NULL		849084	1					
ANR	849100	Identifier	NULL		849084	0					
ANR	849101	IdentifierDeclStatement	gdImagePtr im ;	104:1:2620:2638	849084	1	True				
ANR	849102	IdentifierDecl	im		849084	0					
ANR	849103	IdentifierDeclType	gdImagePtr		849084	0					
ANR	849104	Identifier	im		849084	1					
ANR	849105	ExpressionStatement	im = gdImageCreateFromGifCtx ( in )	106:1:2642:2674	849084	2	True				
ANR	849106	AssignmentExpression	im = gdImageCreateFromGifCtx ( in )		849084	0		=			
ANR	849107	Identifier	im		849084	0					
ANR	849108	CallExpression	gdImageCreateFromGifCtx ( in )		849084	1					
ANR	849109	Callee	gdImageCreateFromGifCtx		849084	0					
ANR	849110	Identifier	gdImageCreateFromGifCtx		849084	0					
ANR	849111	ArgumentList	in		849084	1					
ANR	849112	Argument	in		849084	0					
ANR	849113	Identifier	in		849084	0					
ANR	849114	ExpressionStatement	in -> gd_free ( in )	108:1:2678:2693	849084	3	True				
ANR	849115	CallExpression	in -> gd_free ( in )		849084	0					
ANR	849116	Callee	in -> gd_free		849084	0					
ANR	849117	PtrMemberAccess	in -> gd_free		849084	0					
ANR	849118	Identifier	in		849084	0					
ANR	849119	Identifier	gd_free		849084	1					
ANR	849120	ArgumentList	in		849084	1					
ANR	849121	Argument	in		849084	0					
ANR	849122	Identifier	in		849084	0					
ANR	849123	ReturnStatement	return im ;	110:1:2697:2706	849084	4	True				
ANR	849124	Identifier	im		849084	0					
ANR	849125	ReturnType	gdImagePtr		849084	1					
ANR	849126	Identifier	gdImageCreateFromGifSource		849084	2					
ANR	849127	ParameterList	gdSourcePtr inSource		849084	3					
ANR	849128	Parameter	gdSourcePtr inSource	101:38:2534:2553	849084	0	True				
ANR	849129	ParameterType	gdSourcePtr		849084	0					
ANR	849130	Identifier	inSource		849084	1					
ANR	849131	CFGEntryNode	ENTRY		849084		True				
ANR	849132	CFGExitNode	EXIT		849084		True				
ANR	849133	Symbol	gdImageCreateFromGifCtx		849084						
ANR	849134	Symbol	NULL		849084						
ANR	849135	Symbol	im		849084						
ANR	849136	Symbol	in		849084						
ANR	849137	Symbol	gdNewSSCtx		849084						
ANR	849138	Symbol	inSource		849084						
ANR	849139	Function	gdImageCreateFromGif	114:0:2721:2909							
ANR	849140	FunctionDef	gdImageCreateFromGif (FILE * fdFile)		849139	0					
ANR	849141	CompoundStatement		115:0:2777:2909	849139	0					
ANR	849142	IdentifierDeclStatement	gdIOCtx * fd = gdNewFileCtx ( fdFile ) ;	116:1:2780:2815	849139	0	True				
ANR	849143	IdentifierDecl	* fd = gdNewFileCtx ( fdFile )		849139	0					
ANR	849144	IdentifierDeclType	gdIOCtx *		849139	0					
ANR	849145	Identifier	fd		849139	1					
ANR	849146	AssignmentExpression	* fd = gdNewFileCtx ( fdFile )		849139	2		=			
ANR	849147	Identifier	fd		849139	0					
ANR	849148	CallExpression	gdNewFileCtx ( fdFile )		849139	1					
ANR	849149	Callee	gdNewFileCtx		849139	0					
ANR	849150	Identifier	gdNewFileCtx		849139	0					
ANR	849151	ArgumentList	fdFile		849139	1					
ANR	849152	Argument	fdFile		849139	0					
ANR	849153	Identifier	fdFile		849139	0					
ANR	849154	IdentifierDeclStatement	gdImagePtr im = 0 ;	117:1:2818:2839	849139	1	True				
ANR	849155	IdentifierDecl	im = 0		849139	0					
ANR	849156	IdentifierDeclType	gdImagePtr		849139	0					
ANR	849157	Identifier	im		849139	1					
ANR	849158	AssignmentExpression	im = 0		849139	2		=			
ANR	849159	Identifier	im		849139	0					
ANR	849160	PrimaryExpression	0		849139	1					
ANR	849161	ExpressionStatement	im = gdImageCreateFromGifCtx ( fd )	119:1:2843:2875	849139	2	True				
ANR	849162	AssignmentExpression	im = gdImageCreateFromGifCtx ( fd )		849139	0		=			
ANR	849163	Identifier	im		849139	0					
ANR	849164	CallExpression	gdImageCreateFromGifCtx ( fd )		849139	1					
ANR	849165	Callee	gdImageCreateFromGifCtx		849139	0					
ANR	849166	Identifier	gdImageCreateFromGifCtx		849139	0					
ANR	849167	ArgumentList	fd		849139	1					
ANR	849168	Argument	fd		849139	0					
ANR	849169	Identifier	fd		849139	0					
ANR	849170	ExpressionStatement	fd -> gd_free ( fd )	121:1:2879:2894	849139	3	True				
ANR	849171	CallExpression	fd -> gd_free ( fd )		849139	0					
ANR	849172	Callee	fd -> gd_free		849139	0					
ANR	849173	PtrMemberAccess	fd -> gd_free		849139	0					
ANR	849174	Identifier	fd		849139	0					
ANR	849175	Identifier	gd_free		849139	1					
ANR	849176	ArgumentList	fd		849139	1					
ANR	849177	Argument	fd		849139	0					
ANR	849178	Identifier	fd		849139	0					
ANR	849179	ReturnStatement	return im ;	123:1:2898:2907	849139	4	True				
ANR	849180	Identifier	im		849139	0					
ANR	849181	ReturnType	gdImagePtr		849139	1					
ANR	849182	Identifier	gdImageCreateFromGif		849139	2					
ANR	849183	ParameterList	FILE * fdFile		849139	3					
ANR	849184	Parameter	FILE * fdFile	114:32:2753:2764	849139	0	True				
ANR	849185	ParameterType	FILE *		849139	0					
ANR	849186	Identifier	fdFile		849139	1					
ANR	849187	CFGEntryNode	ENTRY		849139		True				
ANR	849188	CFGExitNode	EXIT		849139		True				
ANR	849189	Symbol	gdImageCreateFromGifCtx		849139						
ANR	849190	Symbol	im		849139						
ANR	849191	Symbol	gdNewFileCtx		849139						
ANR	849192	Symbol	fdFile		849139						
ANR	849193	Symbol	fd		849139						
ANR	849194	Function	gdImageCreateFromGifCtx	127:0:2922:6143							
ANR	849195	FunctionDef	gdImageCreateFromGifCtx (gdIOCtxPtr fd)		849194	0					
ANR	849196	CompoundStatement		128:0:2982:6143	849194	0					
ANR	849197	IdentifierDeclStatement	int BitPixel ;	129:1:2985:2997	849194	0	True				
ANR	849198	IdentifierDecl	BitPixel		849194	0					
ANR	849199	IdentifierDeclType	int		849194	0					
ANR	849200	Identifier	BitPixel		849194	1					
ANR	849201	IdentifierDeclStatement	int ColorResolution ;	131:1:3006:3025	849194	1	True				
ANR	849202	IdentifierDecl	ColorResolution		849194	0					
ANR	849203	IdentifierDeclType	int		849194	0					
ANR	849204	Identifier	ColorResolution		849194	1					
ANR	849205	IdentifierDeclStatement	int Background ;	132:1:3028:3042	849194	2	True				
ANR	849206	IdentifierDecl	Background		849194	0					
ANR	849207	IdentifierDeclType	int		849194	0					
ANR	849208	Identifier	Background		849194	1					
ANR	849209	IdentifierDeclStatement	int AspectRatio ;	133:1:3045:3060	849194	3	True				
ANR	849210	IdentifierDecl	AspectRatio		849194	0					
ANR	849211	IdentifierDeclType	int		849194	0					
ANR	849212	Identifier	AspectRatio		849194	1					
ANR	849213	IdentifierDeclStatement	int Transparent = ( - 1 ) ;	135:1:3070:3092	849194	4	True				
ANR	849214	IdentifierDecl	Transparent = ( - 1 )		849194	0					
ANR	849215	IdentifierDeclType	int		849194	0					
ANR	849216	Identifier	Transparent		849194	1					
ANR	849217	AssignmentExpression	Transparent = ( - 1 )		849194	2		=			
ANR	849218	Identifier	Transparent		849194	0					
ANR	849219	UnaryOperationExpression	- 1		849194	1					
ANR	849220	UnaryOperator	-		849194	0					
ANR	849221	PrimaryExpression	1		849194	1					
ANR	849222	IdentifierDeclStatement	unsigned char buf [ 16 ] ;	136:1:3095:3118	849194	5	True				
ANR	849223	IdentifierDecl	buf [ 16 ]		849194	0					
ANR	849224	IdentifierDeclType	unsigned char [ 16 ]		849194	0					
ANR	849225	Identifier	buf		849194	1					
ANR	849226	PrimaryExpression	16		849194	2					
ANR	849227	IdentifierDeclStatement	unsigned char c ;	137:1:3121:3138	849194	6	True				
ANR	849228	IdentifierDecl	c		849194	0					
ANR	849229	IdentifierDeclType	unsigned char		849194	0					
ANR	849230	Identifier	c		849194	1					
ANR	849231	Statement	unsigned	138:1:3141:3148	849194	7	True				
ANR	849232	Statement	char	138:10:3150:3153	849194	8	True				
ANR	849233	ExpressionStatement	ColorMap [ 3 ] [ MAXCOLORMAPSIZE ]	138:17:3157:3185	849194	9	True				
ANR	849234	ArrayIndexing	ColorMap [ 3 ] [ MAXCOLORMAPSIZE ]		849194	0					
ANR	849235	ArrayIndexing	ColorMap [ 3 ]		849194	0					
ANR	849236	Identifier	ColorMap		849194	0					
ANR	849237	PrimaryExpression	3		849194	1					
ANR	849238	Identifier	MAXCOLORMAPSIZE		849194	1					
ANR	849239	Statement	unsigned	139:1:3188:3195	849194	10	True				
ANR	849240	Statement	char	139:10:3197:3200	849194	11	True				
ANR	849241	ExpressionStatement	localColorMap [ 3 ] [ MAXCOLORMAPSIZE ]	139:17:3204:3237	849194	12	True				
ANR	849242	ArrayIndexing	localColorMap [ 3 ] [ MAXCOLORMAPSIZE ]		849194	0					
ANR	849243	ArrayIndexing	localColorMap [ 3 ]		849194	0					
ANR	849244	Identifier	localColorMap		849194	0					
ANR	849245	PrimaryExpression	3		849194	1					
ANR	849246	Identifier	MAXCOLORMAPSIZE		849194	1					
ANR	849247	IdentifierDeclStatement	"int imw , imh , screen_width , screen_height ;"	140:1:3240:3293	849194	13	True				
ANR	849248	IdentifierDecl	imw		849194	0					
ANR	849249	IdentifierDeclType	int		849194	0					
ANR	849250	Identifier	imw		849194	1					
ANR	849251	IdentifierDecl	imh		849194	1					
ANR	849252	IdentifierDeclType	int		849194	0					
ANR	849253	Identifier	imh		849194	1					
ANR	849254	IdentifierDecl	screen_width		849194	2					
ANR	849255	IdentifierDeclType	int		849194	0					
ANR	849256	Identifier	screen_width		849194	1					
ANR	849257	IdentifierDecl	screen_height		849194	3					
ANR	849258	IdentifierDeclType	int		849194	0					
ANR	849259	Identifier	screen_height		849194	1					
ANR	849260	IdentifierDeclStatement	"int gif87a , useGlobalColormap ;"	141:1:3296:3337	849194	14	True				
ANR	849261	IdentifierDecl	gif87a		849194	0					
ANR	849262	IdentifierDeclType	int		849194	0					
ANR	849263	Identifier	gif87a		849194	1					
ANR	849264	IdentifierDecl	useGlobalColormap		849194	1					
ANR	849265	IdentifierDeclType	int		849194	0					
ANR	849266	Identifier	useGlobalColormap		849194	1					
ANR	849267	IdentifierDeclStatement	int bitPixel ;	142:1:3340:3364	849194	15	True				
ANR	849268	IdentifierDecl	bitPixel		849194	0					
ANR	849269	IdentifierDeclType	int		849194	0					
ANR	849270	Identifier	bitPixel		849194	1					
ANR	849271	IdentifierDeclStatement	int i ;	143:1:3367:3379	849194	16	True				
ANR	849272	IdentifierDecl	i		849194	0					
ANR	849273	IdentifierDeclType	int		849194	0					
ANR	849274	Identifier	i		849194	1					
ANR	849275	IdentifierDeclStatement	int ZeroDataBlock = FALSE ;	146:1:3426:3451	849194	17	True				
ANR	849276	IdentifierDecl	ZeroDataBlock = FALSE		849194	0					
ANR	849277	IdentifierDeclType	int		849194	0					
ANR	849278	Identifier	ZeroDataBlock		849194	1					
ANR	849279	AssignmentExpression	ZeroDataBlock = FALSE		849194	2		=			
ANR	849280	Identifier	FALSE		849194	0					
ANR	849281	Identifier	FALSE		849194	1					
ANR	849282	IdentifierDeclStatement	int haveGlobalColormap ;	147:1:3454:3476	849194	18	True				
ANR	849283	IdentifierDecl	haveGlobalColormap		849194	0					
ANR	849284	IdentifierDeclType	int		849194	0					
ANR	849285	Identifier	haveGlobalColormap		849194	1					
ANR	849286	IdentifierDeclStatement	gdImagePtr im = 0 ;	148:1:3479:3496	849194	19	True				
ANR	849287	IdentifierDecl	im = 0		849194	0					
ANR	849288	IdentifierDeclType	gdImagePtr		849194	0					
ANR	849289	Identifier	im		849194	1					
ANR	849290	AssignmentExpression	im = 0		849194	2		=			
ANR	849291	Identifier	im		849194	0					
ANR	849292	PrimaryExpression	0		849194	1					
ANR	849293	IfStatement	"if ( ! ReadOK ( fd , buf , 6 ) )"		849194	20					
ANR	849294	Condition	"! ReadOK ( fd , buf , 6 )"	151:5:3532:3549	849194	0	True				
ANR	849295	UnaryOperationExpression	"! ReadOK ( fd , buf , 6 )"		849194	0					
ANR	849296	UnaryOperator	!		849194	0					
ANR	849297	CallExpression	"ReadOK ( fd , buf , 6 )"		849194	1					
ANR	849298	Callee	ReadOK		849194	0					
ANR	849299	Identifier	ReadOK		849194	0					
ANR	849300	ArgumentList	fd		849194	1					
ANR	849301	Argument	fd		849194	0					
ANR	849302	Identifier	fd		849194	0					
ANR	849303	Argument	buf		849194	1					
ANR	849304	Identifier	buf		849194	0					
ANR	849305	Argument	6		849194	2					
ANR	849306	PrimaryExpression	6		849194	0					
ANR	849307	CompoundStatement		24:25:569:569	849194	1					
ANR	849308	ReturnStatement	return 0 ;	152:2:3556:3564	849194	0	True				
ANR	849309	PrimaryExpression	0		849194	0					
ANR	849310	IfStatement	"if ( strncmp ( ( char * ) buf , ""GIF"" , 3 ) != 0 )"		849194	21					
ANR	849311	Condition	"strncmp ( ( char * ) buf , ""GIF"" , 3 ) != 0"	154:5:3574:3606	849194	0	True				
ANR	849312	EqualityExpression	"strncmp ( ( char * ) buf , ""GIF"" , 3 ) != 0"		849194	0		!=			
ANR	849313	CallExpression	"strncmp ( ( char * ) buf , ""GIF"" , 3 )"		849194	0					
ANR	849314	Callee	strncmp		849194	0					
ANR	849315	Identifier	strncmp		849194	0					
ANR	849316	ArgumentList	( char * ) buf		849194	1					
ANR	849317	Argument	( char * ) buf		849194	0					
ANR	849318	CastExpression	( char * ) buf		849194	0					
ANR	849319	CastTarget	char *		849194	0					
ANR	849320	Identifier	buf		849194	1					
ANR	849321	Argument	"""GIF"""		849194	1					
ANR	849322	PrimaryExpression	"""GIF"""		849194	0					
ANR	849323	Argument	3		849194	2					
ANR	849324	PrimaryExpression	3		849194	0					
ANR	849325	PrimaryExpression	0		849194	1					
ANR	849326	CompoundStatement		27:40:626:626	849194	1					
ANR	849327	ReturnStatement	return 0 ;	155:2:3613:3621	849194	0	True				
ANR	849328	PrimaryExpression	0		849194	0					
ANR	849329	IfStatement	"if ( memcmp ( ( char * ) buf + 3 , ""87a"" , 3 ) == 0 )"		849194	22					
ANR	849330	Condition	"memcmp ( ( char * ) buf + 3 , ""87a"" , 3 ) == 0"	158:5:3632:3667	849194	0	True				
ANR	849331	EqualityExpression	"memcmp ( ( char * ) buf + 3 , ""87a"" , 3 ) == 0"		849194	0		==			
ANR	849332	CallExpression	"memcmp ( ( char * ) buf + 3 , ""87a"" , 3 )"		849194	0					
ANR	849333	Callee	memcmp		849194	0					
ANR	849334	Identifier	memcmp		849194	0					
ANR	849335	ArgumentList	( char * ) buf + 3		849194	1					
ANR	849336	Argument	( char * ) buf + 3		849194	0					
ANR	849337	AdditiveExpression	( char * ) buf + 3		849194	0		+			
ANR	849338	CastExpression	( char * ) buf		849194	0					
ANR	849339	CastTarget	char *		849194	0					
ANR	849340	Identifier	buf		849194	1					
ANR	849341	PrimaryExpression	3		849194	1					
ANR	849342	Argument	"""87a"""		849194	1					
ANR	849343	PrimaryExpression	"""87a"""		849194	0					
ANR	849344	Argument	3		849194	2					
ANR	849345	PrimaryExpression	3		849194	0					
ANR	849346	PrimaryExpression	0		849194	1					
ANR	849347	CompoundStatement		31:43:687:687	849194	1					
ANR	849348	ExpressionStatement	gif87a = 1	159:2:3674:3684	849194	0	True				
ANR	849349	AssignmentExpression	gif87a = 1		849194	0		=			
ANR	849350	Identifier	gif87a		849194	0					
ANR	849351	PrimaryExpression	1		849194	1					
ANR	849352	ElseStatement	else		849194	0					
ANR	849353	IfStatement	"if ( memcmp ( ( char * ) buf + 3 , ""89a"" , 3 ) == 0 )"		849194	0					
ANR	849354	Condition	"memcmp ( ( char * ) buf + 3 , ""89a"" , 3 ) == 0"	160:12:3698:3733	849194	0	True				
ANR	849355	EqualityExpression	"memcmp ( ( char * ) buf + 3 , ""89a"" , 3 ) == 0"		849194	0		==			
ANR	849356	CallExpression	"memcmp ( ( char * ) buf + 3 , ""89a"" , 3 )"		849194	0					
ANR	849357	Callee	memcmp		849194	0					
ANR	849358	Identifier	memcmp		849194	0					
ANR	849359	ArgumentList	( char * ) buf + 3		849194	1					
ANR	849360	Argument	( char * ) buf + 3		849194	0					
ANR	849361	AdditiveExpression	( char * ) buf + 3		849194	0		+			
ANR	849362	CastExpression	( char * ) buf		849194	0					
ANR	849363	CastTarget	char *		849194	0					
ANR	849364	Identifier	buf		849194	1					
ANR	849365	PrimaryExpression	3		849194	1					
ANR	849366	Argument	"""89a"""		849194	1					
ANR	849367	PrimaryExpression	"""89a"""		849194	0					
ANR	849368	Argument	3		849194	2					
ANR	849369	PrimaryExpression	3		849194	0					
ANR	849370	PrimaryExpression	0		849194	1					
ANR	849371	CompoundStatement		33:50:753:753	849194	1					
ANR	849372	ExpressionStatement	gif87a = 0	161:2:3740:3750	849194	0	True				
ANR	849373	AssignmentExpression	gif87a = 0		849194	0		=			
ANR	849374	Identifier	gif87a		849194	0					
ANR	849375	PrimaryExpression	0		849194	1					
ANR	849376	ElseStatement	else		849194	0					
ANR	849377	CompoundStatement		35:8:777:777	849194	0					
ANR	849378	ReturnStatement	return 0 ;	163:2:3764:3772	849194	0	True				
ANR	849379	PrimaryExpression	0		849194	0					
ANR	849380	IfStatement	"if ( ! ReadOK ( fd , buf , 7 ) )"		849194	23					
ANR	849381	Condition	"! ReadOK ( fd , buf , 7 )"	166:5:3783:3800	849194	0	True				
ANR	849382	UnaryOperationExpression	"! ReadOK ( fd , buf , 7 )"		849194	0					
ANR	849383	UnaryOperator	!		849194	0					
ANR	849384	CallExpression	"ReadOK ( fd , buf , 7 )"		849194	1					
ANR	849385	Callee	ReadOK		849194	0					
ANR	849386	Identifier	ReadOK		849194	0					
ANR	849387	ArgumentList	fd		849194	1					
ANR	849388	Argument	fd		849194	0					
ANR	849389	Identifier	fd		849194	0					
ANR	849390	Argument	buf		849194	1					
ANR	849391	Identifier	buf		849194	0					
ANR	849392	Argument	7		849194	2					
ANR	849393	PrimaryExpression	7		849194	0					
ANR	849394	CompoundStatement		39:25:820:820	849194	1					
ANR	849395	ReturnStatement	return 0 ;	167:2:3807:3815	849194	0	True				
ANR	849396	PrimaryExpression	0		849194	0					
ANR	849397	ExpressionStatement	BitPixel = 2 << ( buf [ 4 ] & 0x07 )	170:1:3822:3856	849194	24	True				
ANR	849398	AssignmentExpression	BitPixel = 2 << ( buf [ 4 ] & 0x07 )		849194	0		=			
ANR	849399	Identifier	BitPixel		849194	0					
ANR	849400	ShiftExpression	2 << ( buf [ 4 ] & 0x07 )		849194	1		<<			
ANR	849401	PrimaryExpression	2		849194	0					
ANR	849402	BitAndExpression	buf [ 4 ] & 0x07		849194	1		&			
ANR	849403	ArrayIndexing	buf [ 4 ]		849194	0					
ANR	849404	Identifier	buf		849194	0					
ANR	849405	PrimaryExpression	4		849194	1					
ANR	849406	PrimaryExpression	0x07		849194	1					
ANR	849407	ExpressionStatement	ColorResolution = ( int ) ( ( ( buf [ 4 ] & 0x70 ) >> 3 ) + 1 )	172:1:3865:3911	849194	25	True				
ANR	849408	AssignmentExpression	ColorResolution = ( int ) ( ( ( buf [ 4 ] & 0x70 ) >> 3 ) + 1 )		849194	0		=			
ANR	849409	Identifier	ColorResolution		849194	0					
ANR	849410	CastExpression	( int ) ( ( ( buf [ 4 ] & 0x70 ) >> 3 ) + 1 )		849194	1					
ANR	849411	CastTarget	int		849194	0					
ANR	849412	AdditiveExpression	( ( buf [ 4 ] & 0x70 ) >> 3 ) + 1		849194	1		+			
ANR	849413	ShiftExpression	( buf [ 4 ] & 0x70 ) >> 3		849194	0		>>			
ANR	849414	BitAndExpression	buf [ 4 ] & 0x70		849194	0		&			
ANR	849415	ArrayIndexing	buf [ 4 ]		849194	0					
ANR	849416	Identifier	buf		849194	0					
ANR	849417	PrimaryExpression	4		849194	1					
ANR	849418	PrimaryExpression	0x70		849194	1					
ANR	849419	PrimaryExpression	3		849194	1					
ANR	849420	PrimaryExpression	1		849194	1					
ANR	849421	ExpressionStatement	Background = buf [ 5 ]	173:1:3914:3938	849194	26	True				
ANR	849422	AssignmentExpression	Background = buf [ 5 ]		849194	0		=			
ANR	849423	Identifier	Background		849194	0					
ANR	849424	ArrayIndexing	buf [ 5 ]		849194	1					
ANR	849425	Identifier	buf		849194	0					
ANR	849426	PrimaryExpression	5		849194	1					
ANR	849427	ExpressionStatement	AspectRatio = buf [ 6 ]	174:1:3941:3965	849194	27	True				
ANR	849428	AssignmentExpression	AspectRatio = buf [ 6 ]		849194	0		=			
ANR	849429	Identifier	AspectRatio		849194	0					
ANR	849430	ArrayIndexing	buf [ 6 ]		849194	1					
ANR	849431	Identifier	buf		849194	0					
ANR	849432	PrimaryExpression	6		849194	1					
ANR	849433	ExpressionStatement	"screen_width = imw = LM_to_uint ( buf [ 0 ] , buf [ 1 ] )"	176:1:3975:4021	849194	28	True				
ANR	849434	AssignmentExpression	"screen_width = imw = LM_to_uint ( buf [ 0 ] , buf [ 1 ] )"		849194	0		=			
ANR	849435	Identifier	screen_width		849194	0					
ANR	849436	AssignmentExpression	"imw = LM_to_uint ( buf [ 0 ] , buf [ 1 ] )"		849194	1		=			
ANR	849437	Identifier	imw		849194	0					
ANR	849438	CallExpression	"LM_to_uint ( buf [ 0 ] , buf [ 1 ] )"		849194	1					
ANR	849439	Callee	LM_to_uint		849194	0					
ANR	849440	Identifier	LM_to_uint		849194	0					
ANR	849441	ArgumentList	buf [ 0 ]		849194	1					
ANR	849442	Argument	buf [ 0 ]		849194	0					
ANR	849443	ArrayIndexing	buf [ 0 ]		849194	0					
ANR	849444	Identifier	buf		849194	0					
ANR	849445	PrimaryExpression	0		849194	1					
ANR	849446	Argument	buf [ 1 ]		849194	1					
ANR	849447	ArrayIndexing	buf [ 1 ]		849194	0					
ANR	849448	Identifier	buf		849194	0					
ANR	849449	PrimaryExpression	1		849194	1					
ANR	849450	ExpressionStatement	"screen_height = imh = LM_to_uint ( buf [ 2 ] , buf [ 3 ] )"	177:1:4024:4071	849194	29	True				
ANR	849451	AssignmentExpression	"screen_height = imh = LM_to_uint ( buf [ 2 ] , buf [ 3 ] )"		849194	0		=			
ANR	849452	Identifier	screen_height		849194	0					
ANR	849453	AssignmentExpression	"imh = LM_to_uint ( buf [ 2 ] , buf [ 3 ] )"		849194	1		=			
ANR	849454	Identifier	imh		849194	0					
ANR	849455	CallExpression	"LM_to_uint ( buf [ 2 ] , buf [ 3 ] )"		849194	1					
ANR	849456	Callee	LM_to_uint		849194	0					
ANR	849457	Identifier	LM_to_uint		849194	0					
ANR	849458	ArgumentList	buf [ 2 ]		849194	1					
ANR	849459	Argument	buf [ 2 ]		849194	0					
ANR	849460	ArrayIndexing	buf [ 2 ]		849194	0					
ANR	849461	Identifier	buf		849194	0					
ANR	849462	PrimaryExpression	2		849194	1					
ANR	849463	Argument	buf [ 3 ]		849194	1					
ANR	849464	ArrayIndexing	buf [ 3 ]		849194	0					
ANR	849465	Identifier	buf		849194	0					
ANR	849466	PrimaryExpression	3		849194	1					
ANR	849467	ExpressionStatement	"haveGlobalColormap = BitSet ( buf [ 4 ] , LOCALCOLORMAP )"	179:1:4075:4125	849194	30	True				
ANR	849468	AssignmentExpression	"haveGlobalColormap = BitSet ( buf [ 4 ] , LOCALCOLORMAP )"		849194	0		=			
ANR	849469	Identifier	haveGlobalColormap		849194	0					
ANR	849470	CallExpression	"BitSet ( buf [ 4 ] , LOCALCOLORMAP )"		849194	1					
ANR	849471	Callee	BitSet		849194	0					
ANR	849472	Identifier	BitSet		849194	0					
ANR	849473	ArgumentList	buf [ 4 ]		849194	1					
ANR	849474	Argument	buf [ 4 ]		849194	0					
ANR	849475	ArrayIndexing	buf [ 4 ]		849194	0					
ANR	849476	Identifier	buf		849194	0					
ANR	849477	PrimaryExpression	4		849194	1					
ANR	849478	Argument	LOCALCOLORMAP		849194	1					
ANR	849479	Identifier	LOCALCOLORMAP		849194	0					
ANR	849480	IfStatement	if ( haveGlobalColormap )		849194	31					
ANR	849481	Condition	haveGlobalColormap	180:5:4157:4174	849194	0	True				
ANR	849482	Identifier	haveGlobalColormap		849194	0					
ANR	849483	CompoundStatement		53:25:1194:1194	849194	1					
ANR	849484	IfStatement	"if ( ReadColorMap ( fd , BitPixel , ColorMap ) )"		849194	0					
ANR	849485	Condition	"ReadColorMap ( fd , BitPixel , ColorMap )"	181:6:4185:4220	849194	0	True				
ANR	849486	CallExpression	"ReadColorMap ( fd , BitPixel , ColorMap )"		849194	0					
ANR	849487	Callee	ReadColorMap		849194	0					
ANR	849488	Identifier	ReadColorMap		849194	0					
ANR	849489	ArgumentList	fd		849194	1					
ANR	849490	Argument	fd		849194	0					
ANR	849491	Identifier	fd		849194	0					
ANR	849492	Argument	BitPixel		849194	1					
ANR	849493	Identifier	BitPixel		849194	0					
ANR	849494	Argument	ColorMap		849194	2					
ANR	849495	Identifier	ColorMap		849194	0					
ANR	849496	CompoundStatement		54:44:1240:1240	849194	1					
ANR	849497	ReturnStatement	return 0 ;	182:3:4228:4236	849194	0	True				
ANR	849498	PrimaryExpression	0		849194	0					
ANR	849499	ForStatement	for ( ; ; )		849194	32					
ANR	849500	CompoundStatement		61:2:1294:1311	849194	0					
ANR	849501	IdentifierDeclStatement	"int top , left ;"	187:2:4260:4273	849194	0	True				
ANR	849502	IdentifierDecl	top		849194	0					
ANR	849503	IdentifierDeclType	int		849194	0					
ANR	849504	Identifier	top		849194	1					
ANR	849505	IdentifierDecl	left		849194	1					
ANR	849506	IdentifierDeclType	int		849194	0					
ANR	849507	Identifier	left		849194	1					
ANR	849508	IdentifierDeclStatement	"int width , height ;"	188:2:4277:4294	849194	1	True				
ANR	849509	IdentifierDecl	width		849194	0					
ANR	849510	IdentifierDeclType	int		849194	0					
ANR	849511	Identifier	width		849194	1					
ANR	849512	IdentifierDecl	height		849194	1					
ANR	849513	IdentifierDeclType	int		849194	0					
ANR	849514	Identifier	height		849194	1					
ANR	849515	IfStatement	"if ( ! ReadOK ( fd , & c , 1 ) )"		849194	2					
ANR	849516	Condition	"! ReadOK ( fd , & c , 1 )"	190:6:4303:4319	849194	0	True				
ANR	849517	UnaryOperationExpression	"! ReadOK ( fd , & c , 1 )"		849194	0					
ANR	849518	UnaryOperator	!		849194	0					
ANR	849519	CallExpression	"ReadOK ( fd , & c , 1 )"		849194	1					
ANR	849520	Callee	ReadOK		849194	0					
ANR	849521	Identifier	ReadOK		849194	0					
ANR	849522	ArgumentList	fd		849194	1					
ANR	849523	Argument	fd		849194	0					
ANR	849524	Identifier	fd		849194	0					
ANR	849525	Argument	& c		849194	1					
ANR	849526	UnaryOperationExpression	& c		849194	0					
ANR	849527	UnaryOperator	&		849194	0					
ANR	849528	Identifier	c		849194	1					
ANR	849529	Argument	1		849194	2					
ANR	849530	PrimaryExpression	1		849194	0					
ANR	849531	CompoundStatement		63:25:1339:1339	849194	1					
ANR	849532	ReturnStatement	return 0 ;	191:3:4327:4335	849194	0	True				
ANR	849533	PrimaryExpression	0		849194	0					
ANR	849534	IfStatement	if ( c == ';' )		849194	3					
ANR	849535	Condition	c == ';'	193:6:4347:4354	849194	0	True				
ANR	849536	EqualityExpression	c == ';'		849194	0		==			
ANR	849537	Identifier	c		849194	0					
ANR	849538	PrimaryExpression	';'		849194	1					
ANR	849539	CompoundStatement		66:16:1374:1374	849194	1					
ANR	849540	GotoStatement	goto terminated ;	194:3:4391:4406	849194	0	True				
ANR	849541	Identifier	terminated		849194	0					
ANR	849542	IfStatement	if ( c == '!' )		849194	4					
ANR	849543	Condition	c == '!'	197:6:4419:4426	849194	0	True				
ANR	849544	EqualityExpression	c == '!'		849194	0		==			
ANR	849545	Identifier	c		849194	0					
ANR	849546	PrimaryExpression	'!'		849194	1					
ANR	849547	CompoundStatement		70:16:1446:1446	849194	1					
ANR	849548	IfStatement	"if ( ! ReadOK ( fd , & c , 1 ) )"		849194	0					
ANR	849549	Condition	"! ReadOK ( fd , & c , 1 )"	198:7:4462:4478	849194	0	True				
ANR	849550	UnaryOperationExpression	"! ReadOK ( fd , & c , 1 )"		849194	0					
ANR	849551	UnaryOperator	!		849194	0					
ANR	849552	CallExpression	"ReadOK ( fd , & c , 1 )"		849194	1					
ANR	849553	Callee	ReadOK		849194	0					
ANR	849554	Identifier	ReadOK		849194	0					
ANR	849555	ArgumentList	fd		849194	1					
ANR	849556	Argument	fd		849194	0					
ANR	849557	Identifier	fd		849194	0					
ANR	849558	Argument	& c		849194	1					
ANR	849559	UnaryOperationExpression	& c		849194	0					
ANR	849560	UnaryOperator	&		849194	0					
ANR	849561	Identifier	c		849194	1					
ANR	849562	Argument	1		849194	2					
ANR	849563	PrimaryExpression	1		849194	0					
ANR	849564	CompoundStatement		71:26:1498:1498	849194	1					
ANR	849565	ReturnStatement	return 0 ;	199:4:4487:4495	849194	0	True				
ANR	849566	PrimaryExpression	0		849194	0					
ANR	849567	ExpressionStatement	"DoExtension ( fd , c , & Transparent , & ZeroDataBlock )"	201:3:4505:4553	849194	1	True				
ANR	849568	CallExpression	"DoExtension ( fd , c , & Transparent , & ZeroDataBlock )"		849194	0					
ANR	849569	Callee	DoExtension		849194	0					
ANR	849570	Identifier	DoExtension		849194	0					
ANR	849571	ArgumentList	fd		849194	1					
ANR	849572	Argument	fd		849194	0					
ANR	849573	Identifier	fd		849194	0					
ANR	849574	Argument	c		849194	1					
ANR	849575	Identifier	c		849194	0					
ANR	849576	Argument	& Transparent		849194	2					
ANR	849577	UnaryOperationExpression	& Transparent		849194	0					
ANR	849578	UnaryOperator	&		849194	0					
ANR	849579	Identifier	Transparent		849194	1					
ANR	849580	Argument	& ZeroDataBlock		849194	3					
ANR	849581	UnaryOperationExpression	& ZeroDataBlock		849194	0					
ANR	849582	UnaryOperator	&		849194	0					
ANR	849583	Identifier	ZeroDataBlock		849194	1					
ANR	849584	ContinueStatement	continue ;	202:3:4558:4566	849194	2	True				
ANR	849585	IfStatement	"if ( c != ',' )"		849194	5					
ANR	849586	Condition	"c != ','"	205:6:4579:4586	849194	0	True				
ANR	849587	EqualityExpression	"c != ','"		849194	0		!=			
ANR	849588	Identifier	c		849194	0					
ANR	849589	PrimaryExpression	"','"		849194	1					
ANR	849590	CompoundStatement		78:16:1606:1606	849194	1					
ANR	849591	ContinueStatement	continue ;	206:3:4636:4644	849194	0	True				
ANR	849592	IfStatement	"if ( ! ReadOK ( fd , buf , 9 ) )"		849194	6					
ANR	849593	Condition	"! ReadOK ( fd , buf , 9 )"	211:6:4684:4701	849194	0	True				
ANR	849594	UnaryOperationExpression	"! ReadOK ( fd , buf , 9 )"		849194	0					
ANR	849595	UnaryOperator	!		849194	0					
ANR	849596	CallExpression	"ReadOK ( fd , buf , 9 )"		849194	1					
ANR	849597	Callee	ReadOK		849194	0					
ANR	849598	Identifier	ReadOK		849194	0					
ANR	849599	ArgumentList	fd		849194	1					
ANR	849600	Argument	fd		849194	0					
ANR	849601	Identifier	fd		849194	0					
ANR	849602	Argument	buf		849194	1					
ANR	849603	Identifier	buf		849194	0					
ANR	849604	Argument	9		849194	2					
ANR	849605	PrimaryExpression	9		849194	0					
ANR	849606	CompoundStatement		84:26:1721:1721	849194	1					
ANR	849607	ReturnStatement	return 0 ;	212:3:4709:4717	849194	0	True				
ANR	849608	PrimaryExpression	0		849194	0					
ANR	849609	ExpressionStatement	"useGlobalColormap = ! BitSet ( buf [ 8 ] , LOCALCOLORMAP )"	215:2:4726:4777	849194	7	True				
ANR	849610	AssignmentExpression	"useGlobalColormap = ! BitSet ( buf [ 8 ] , LOCALCOLORMAP )"		849194	0		=			
ANR	849611	Identifier	useGlobalColormap		849194	0					
ANR	849612	UnaryOperationExpression	"! BitSet ( buf [ 8 ] , LOCALCOLORMAP )"		849194	1					
ANR	849613	UnaryOperator	!		849194	0					
ANR	849614	CallExpression	"BitSet ( buf [ 8 ] , LOCALCOLORMAP )"		849194	1					
ANR	849615	Callee	BitSet		849194	0					
ANR	849616	Identifier	BitSet		849194	0					
ANR	849617	ArgumentList	buf [ 8 ]		849194	1					
ANR	849618	Argument	buf [ 8 ]		849194	0					
ANR	849619	ArrayIndexing	buf [ 8 ]		849194	0					
ANR	849620	Identifier	buf		849194	0					
ANR	849621	PrimaryExpression	8		849194	1					
ANR	849622	Argument	LOCALCOLORMAP		849194	1					
ANR	849623	Identifier	LOCALCOLORMAP		849194	0					
ANR	849624	ExpressionStatement	bitPixel = 1 << ( ( buf [ 8 ] & 0x07 ) + 1 )	217:2:4782:4813	849194	8	True				
ANR	849625	AssignmentExpression	bitPixel = 1 << ( ( buf [ 8 ] & 0x07 ) + 1 )		849194	0		=			
ANR	849626	Identifier	bitPixel		849194	0					
ANR	849627	ShiftExpression	1 << ( ( buf [ 8 ] & 0x07 ) + 1 )		849194	1		<<			
ANR	849628	PrimaryExpression	1		849194	0					
ANR	849629	AdditiveExpression	( buf [ 8 ] & 0x07 ) + 1		849194	1		+			
ANR	849630	BitAndExpression	buf [ 8 ] & 0x07		849194	0		&			
ANR	849631	ArrayIndexing	buf [ 8 ]		849194	0					
ANR	849632	Identifier	buf		849194	0					
ANR	849633	PrimaryExpression	8		849194	1					
ANR	849634	PrimaryExpression	0x07		849194	1					
ANR	849635	PrimaryExpression	1		849194	1					
ANR	849636	ExpressionStatement	"left = LM_to_uint ( buf [ 0 ] , buf [ 1 ] )"	218:2:4817:4850	849194	9	True				
ANR	849637	AssignmentExpression	"left = LM_to_uint ( buf [ 0 ] , buf [ 1 ] )"		849194	0		=			
ANR	849638	Identifier	left		849194	0					
ANR	849639	CallExpression	"LM_to_uint ( buf [ 0 ] , buf [ 1 ] )"		849194	1					
ANR	849640	Callee	LM_to_uint		849194	0					
ANR	849641	Identifier	LM_to_uint		849194	0					
ANR	849642	ArgumentList	buf [ 0 ]		849194	1					
ANR	849643	Argument	buf [ 0 ]		849194	0					
ANR	849644	ArrayIndexing	buf [ 0 ]		849194	0					
ANR	849645	Identifier	buf		849194	0					
ANR	849646	PrimaryExpression	0		849194	1					
ANR	849647	Argument	buf [ 1 ]		849194	1					
ANR	849648	ArrayIndexing	buf [ 1 ]		849194	0					
ANR	849649	Identifier	buf		849194	0					
ANR	849650	PrimaryExpression	1		849194	1					
ANR	849651	ExpressionStatement	"top = LM_to_uint ( buf [ 2 ] , buf [ 3 ] )"	219:2:4854:4886	849194	10	True				
ANR	849652	AssignmentExpression	"top = LM_to_uint ( buf [ 2 ] , buf [ 3 ] )"		849194	0		=			
ANR	849653	Identifier	top		849194	0					
ANR	849654	CallExpression	"LM_to_uint ( buf [ 2 ] , buf [ 3 ] )"		849194	1					
ANR	849655	Callee	LM_to_uint		849194	0					
ANR	849656	Identifier	LM_to_uint		849194	0					
ANR	849657	ArgumentList	buf [ 2 ]		849194	1					
ANR	849658	Argument	buf [ 2 ]		849194	0					
ANR	849659	ArrayIndexing	buf [ 2 ]		849194	0					
ANR	849660	Identifier	buf		849194	0					
ANR	849661	PrimaryExpression	2		849194	1					
ANR	849662	Argument	buf [ 3 ]		849194	1					
ANR	849663	ArrayIndexing	buf [ 3 ]		849194	0					
ANR	849664	Identifier	buf		849194	0					
ANR	849665	PrimaryExpression	3		849194	1					
ANR	849666	ExpressionStatement	"width = LM_to_uint ( buf [ 4 ] , buf [ 5 ] )"	220:2:4890:4924	849194	11	True				
ANR	849667	AssignmentExpression	"width = LM_to_uint ( buf [ 4 ] , buf [ 5 ] )"		849194	0		=			
ANR	849668	Identifier	width		849194	0					
ANR	849669	CallExpression	"LM_to_uint ( buf [ 4 ] , buf [ 5 ] )"		849194	1					
ANR	849670	Callee	LM_to_uint		849194	0					
ANR	849671	Identifier	LM_to_uint		849194	0					
ANR	849672	ArgumentList	buf [ 4 ]		849194	1					
ANR	849673	Argument	buf [ 4 ]		849194	0					
ANR	849674	ArrayIndexing	buf [ 4 ]		849194	0					
ANR	849675	Identifier	buf		849194	0					
ANR	849676	PrimaryExpression	4		849194	1					
ANR	849677	Argument	buf [ 5 ]		849194	1					
ANR	849678	ArrayIndexing	buf [ 5 ]		849194	0					
ANR	849679	Identifier	buf		849194	0					
ANR	849680	PrimaryExpression	5		849194	1					
ANR	849681	ExpressionStatement	"height = LM_to_uint ( buf [ 6 ] , buf [ 7 ] )"	221:2:4928:4963	849194	12	True				
ANR	849682	AssignmentExpression	"height = LM_to_uint ( buf [ 6 ] , buf [ 7 ] )"		849194	0		=			
ANR	849683	Identifier	height		849194	0					
ANR	849684	CallExpression	"LM_to_uint ( buf [ 6 ] , buf [ 7 ] )"		849194	1					
ANR	849685	Callee	LM_to_uint		849194	0					
ANR	849686	Identifier	LM_to_uint		849194	0					
ANR	849687	ArgumentList	buf [ 6 ]		849194	1					
ANR	849688	Argument	buf [ 6 ]		849194	0					
ANR	849689	ArrayIndexing	buf [ 6 ]		849194	0					
ANR	849690	Identifier	buf		849194	0					
ANR	849691	PrimaryExpression	6		849194	1					
ANR	849692	Argument	buf [ 7 ]		849194	1					
ANR	849693	ArrayIndexing	buf [ 7 ]		849194	0					
ANR	849694	Identifier	buf		849194	0					
ANR	849695	PrimaryExpression	7		849194	1					
ANR	849696	IfStatement	if ( left + width > screen_width || top + height > screen_height )		849194	13					
ANR	849697	Condition	left + width > screen_width || top + height > screen_height	223:6:4972:5030	849194	0	True				
ANR	849698	OrExpression	left + width > screen_width || top + height > screen_height		849194	0		||			
ANR	849699	RelationalExpression	left + width > screen_width		849194	0		>			
ANR	849700	AdditiveExpression	left + width		849194	0		+			
ANR	849701	Identifier	left		849194	0					
ANR	849702	Identifier	width		849194	1					
ANR	849703	Identifier	screen_width		849194	1					
ANR	849704	RelationalExpression	top + height > screen_height		849194	1		>			
ANR	849705	AdditiveExpression	top + height		849194	0		+			
ANR	849706	Identifier	top		849194	0					
ANR	849707	Identifier	height		849194	1					
ANR	849708	Identifier	screen_height		849194	1					
ANR	849709	CompoundStatement		96:67:2050:2050	849194	1					
ANR	849710	IfStatement	if ( VERBOSE )		849194	0					
ANR	849711	Condition	VERBOSE	224:7:5042:5048	849194	0	True				
ANR	849712	Identifier	VERBOSE		849194	0					
ANR	849713	CompoundStatement		97:16:2068:2068	849194	1					
ANR	849714	ExpressionStatement	"printf ( ""Frame is not confined to screen dimension.\\n"" )"	225:4:5057:5111	849194	0	True				
ANR	849715	CallExpression	"printf ( ""Frame is not confined to screen dimension.\\n"" )"		849194	0					
ANR	849716	Callee	printf		849194	0					
ANR	849717	Identifier	printf		849194	0					
ANR	849718	ArgumentList	"""Frame is not confined to screen dimension.\\n"""		849194	1					
ANR	849719	Argument	"""Frame is not confined to screen dimension.\\n"""		849194	0					
ANR	849720	PrimaryExpression	"""Frame is not confined to screen dimension.\\n"""		849194	0					
ANR	849721	ReturnStatement	return 0 ;	227:3:5121:5129	849194	1	True				
ANR	849722	PrimaryExpression	0		849194	0					
ANR	849723	IfStatement	"if ( ! ( im = gdImageCreate ( width , height ) ) )"		849194	14					
ANR	849724	Condition	"! ( im = gdImageCreate ( width , height ) )"	230:6:5142:5177	849194	0	True				
ANR	849725	UnaryOperationExpression	"! ( im = gdImageCreate ( width , height ) )"		849194	0					
ANR	849726	UnaryOperator	!		849194	0					
ANR	849727	AssignmentExpression	"im = gdImageCreate ( width , height )"		849194	1		=			
ANR	849728	Identifier	im		849194	0					
ANR	849729	CallExpression	"gdImageCreate ( width , height )"		849194	1					
ANR	849730	Callee	gdImageCreate		849194	0					
ANR	849731	Identifier	gdImageCreate		849194	0					
ANR	849732	ArgumentList	width		849194	1					
ANR	849733	Argument	width		849194	0					
ANR	849734	Identifier	width		849194	0					
ANR	849735	Argument	height		849194	1					
ANR	849736	Identifier	height		849194	0					
ANR	849737	CompoundStatement		103:44:2197:2197	849194	1					
ANR	849738	ReturnStatement	return 0 ;	231:3:5185:5193	849194	0	True				
ANR	849739	PrimaryExpression	0		849194	0					
ANR	849740	ExpressionStatement	"im -> interlace = BitSet ( buf [ 8 ] , INTERLACE )"	233:2:5201:5242	849194	15	True				
ANR	849741	AssignmentExpression	"im -> interlace = BitSet ( buf [ 8 ] , INTERLACE )"		849194	0		=			
ANR	849742	PtrMemberAccess	im -> interlace		849194	0					
ANR	849743	Identifier	im		849194	0					
ANR	849744	Identifier	interlace		849194	1					
ANR	849745	CallExpression	"BitSet ( buf [ 8 ] , INTERLACE )"		849194	1					
ANR	849746	Callee	BitSet		849194	0					
ANR	849747	Identifier	BitSet		849194	0					
ANR	849748	ArgumentList	buf [ 8 ]		849194	1					
ANR	849749	Argument	buf [ 8 ]		849194	0					
ANR	849750	ArrayIndexing	buf [ 8 ]		849194	0					
ANR	849751	Identifier	buf		849194	0					
ANR	849752	PrimaryExpression	8		849194	1					
ANR	849753	Argument	INTERLACE		849194	1					
ANR	849754	Identifier	INTERLACE		849194	0					
ANR	849755	IfStatement	if ( ! useGlobalColormap )		849194	16					
ANR	849756	Condition	! useGlobalColormap	234:6:5250:5267	849194	0	True				
ANR	849757	UnaryOperationExpression	! useGlobalColormap		849194	0					
ANR	849758	UnaryOperator	!		849194	0					
ANR	849759	Identifier	useGlobalColormap		849194	1					
ANR	849760	CompoundStatement		107:26:2287:2287	849194	1					
ANR	849761	IfStatement	"if ( ReadColorMap ( fd , bitPixel , localColorMap ) )"		849194	0					
ANR	849762	Condition	"ReadColorMap ( fd , bitPixel , localColorMap )"	235:7:5279:5319	849194	0	True				
ANR	849763	CallExpression	"ReadColorMap ( fd , bitPixel , localColorMap )"		849194	0					
ANR	849764	Callee	ReadColorMap		849194	0					
ANR	849765	Identifier	ReadColorMap		849194	0					
ANR	849766	ArgumentList	fd		849194	1					
ANR	849767	Argument	fd		849194	0					
ANR	849768	Identifier	fd		849194	0					
ANR	849769	Argument	bitPixel		849194	1					
ANR	849770	Identifier	bitPixel		849194	0					
ANR	849771	Argument	localColorMap		849194	2					
ANR	849772	Identifier	localColorMap		849194	0					
ANR	849773	CompoundStatement		108:50:2339:2339	849194	1					
ANR	849774	ExpressionStatement	gdImageDestroy ( im )	236:4:5328:5346	849194	0	True				
ANR	849775	CallExpression	gdImageDestroy ( im )		849194	0					
ANR	849776	Callee	gdImageDestroy		849194	0					
ANR	849777	Identifier	gdImageDestroy		849194	0					
ANR	849778	ArgumentList	im		849194	1					
ANR	849779	Argument	im		849194	0					
ANR	849780	Identifier	im		849194	0					
ANR	849781	ReturnStatement	return 0 ;	237:4:5352:5360	849194	1	True				
ANR	849782	PrimaryExpression	0		849194	0					
ANR	849783	ExpressionStatement	"ReadImage ( im , fd , width , height , localColorMap , BitSet ( buf [ 8 ] , INTERLACE ) , & ZeroDataBlock )"	239:3:5370:5465	849194	1	True				
ANR	849784	CallExpression	"ReadImage ( im , fd , width , height , localColorMap , BitSet ( buf [ 8 ] , INTERLACE ) , & ZeroDataBlock )"		849194	0					
ANR	849785	Callee	ReadImage		849194	0					
ANR	849786	Identifier	ReadImage		849194	0					
ANR	849787	ArgumentList	im		849194	1					
ANR	849788	Argument	im		849194	0					
ANR	849789	Identifier	im		849194	0					
ANR	849790	Argument	fd		849194	1					
ANR	849791	Identifier	fd		849194	0					
ANR	849792	Argument	width		849194	2					
ANR	849793	Identifier	width		849194	0					
ANR	849794	Argument	height		849194	3					
ANR	849795	Identifier	height		849194	0					
ANR	849796	Argument	localColorMap		849194	4					
ANR	849797	Identifier	localColorMap		849194	0					
ANR	849798	Argument	"BitSet ( buf [ 8 ] , INTERLACE )"		849194	5					
ANR	849799	CallExpression	"BitSet ( buf [ 8 ] , INTERLACE )"		849194	0					
ANR	849800	Callee	BitSet		849194	0					
ANR	849801	Identifier	BitSet		849194	0					
ANR	849802	ArgumentList	buf [ 8 ]		849194	1					
ANR	849803	Argument	buf [ 8 ]		849194	0					
ANR	849804	ArrayIndexing	buf [ 8 ]		849194	0					
ANR	849805	Identifier	buf		849194	0					
ANR	849806	PrimaryExpression	8		849194	1					
ANR	849807	Argument	INTERLACE		849194	1					
ANR	849808	Identifier	INTERLACE		849194	0					
ANR	849809	Argument	& ZeroDataBlock		849194	6					
ANR	849810	UnaryOperationExpression	& ZeroDataBlock		849194	0					
ANR	849811	UnaryOperator	&		849194	0					
ANR	849812	Identifier	ZeroDataBlock		849194	1					
ANR	849813	ElseStatement	else		849194	0					
ANR	849814	CompoundStatement		114:9:2493:2493	849194	0					
ANR	849815	IfStatement	if ( ! haveGlobalColormap )		849194	0					
ANR	849816	Condition	! haveGlobalColormap	242:7:5485:5503	849194	0	True				
ANR	849817	UnaryOperationExpression	! haveGlobalColormap		849194	0					
ANR	849818	UnaryOperator	!		849194	0					
ANR	849819	Identifier	haveGlobalColormap		849194	1					
ANR	849820	CompoundStatement		115:28:2523:2523	849194	1					
ANR	849821	ExpressionStatement	gdImageDestroy ( im )	243:4:5512:5530	849194	0	True				
ANR	849822	CallExpression	gdImageDestroy ( im )		849194	0					
ANR	849823	Callee	gdImageDestroy		849194	0					
ANR	849824	Identifier	gdImageDestroy		849194	0					
ANR	849825	ArgumentList	im		849194	1					
ANR	849826	Argument	im		849194	0					
ANR	849827	Identifier	im		849194	0					
ANR	849828	ReturnStatement	return 0 ;	244:4:5536:5544	849194	1	True				
ANR	849829	PrimaryExpression	0		849194	0					
ANR	849830	ExpressionStatement	"ReadImage ( im , fd , width , height , ColorMap , BitSet ( buf [ 8 ] , INTERLACE ) , & ZeroDataBlock )"	246:3:5554:5651	849194	1	True				
ANR	849831	CallExpression	"ReadImage ( im , fd , width , height , ColorMap , BitSet ( buf [ 8 ] , INTERLACE ) , & ZeroDataBlock )"		849194	0					
ANR	849832	Callee	ReadImage		849194	0					
ANR	849833	Identifier	ReadImage		849194	0					
ANR	849834	ArgumentList	im		849194	1					
ANR	849835	Argument	im		849194	0					
ANR	849836	Identifier	im		849194	0					
ANR	849837	Argument	fd		849194	1					
ANR	849838	Identifier	fd		849194	0					
ANR	849839	Argument	width		849194	2					
ANR	849840	Identifier	width		849194	0					
ANR	849841	Argument	height		849194	3					
ANR	849842	Identifier	height		849194	0					
ANR	849843	Argument	ColorMap		849194	4					
ANR	849844	Identifier	ColorMap		849194	0					
ANR	849845	Argument	"BitSet ( buf [ 8 ] , INTERLACE )"		849194	5					
ANR	849846	CallExpression	"BitSet ( buf [ 8 ] , INTERLACE )"		849194	0					
ANR	849847	Callee	BitSet		849194	0					
ANR	849848	Identifier	BitSet		849194	0					
ANR	849849	ArgumentList	buf [ 8 ]		849194	1					
ANR	849850	Argument	buf [ 8 ]		849194	0					
ANR	849851	ArrayIndexing	buf [ 8 ]		849194	0					
ANR	849852	Identifier	buf		849194	0					
ANR	849853	PrimaryExpression	8		849194	1					
ANR	849854	Argument	INTERLACE		849194	1					
ANR	849855	Identifier	INTERLACE		849194	0					
ANR	849856	Argument	& ZeroDataBlock		849194	6					
ANR	849857	UnaryOperationExpression	& ZeroDataBlock		849194	0					
ANR	849858	UnaryOperator	&		849194	0					
ANR	849859	Identifier	ZeroDataBlock		849194	1					
ANR	849860	IfStatement	if ( Transparent != ( - 1 ) )		849194	17					
ANR	849861	Condition	Transparent != ( - 1 )	250:6:5663:5681	849194	0	True				
ANR	849862	EqualityExpression	Transparent != ( - 1 )		849194	0		!=			
ANR	849863	Identifier	Transparent		849194	0					
ANR	849864	UnaryOperationExpression	- 1		849194	1					
ANR	849865	UnaryOperator	-		849194	0					
ANR	849866	PrimaryExpression	1		849194	1					
ANR	849867	CompoundStatement		123:27:2701:2701	849194	1					
ANR	849868	ExpressionStatement	"gdImageColorTransparent ( im , Transparent )"	251:3:5689:5729	849194	0	True				
ANR	849869	CallExpression	"gdImageColorTransparent ( im , Transparent )"		849194	0					
ANR	849870	Callee	gdImageColorTransparent		849194	0					
ANR	849871	Identifier	gdImageColorTransparent		849194	0					
ANR	849872	ArgumentList	im		849194	1					
ANR	849873	Argument	im		849194	0					
ANR	849874	Identifier	im		849194	0					
ANR	849875	Argument	Transparent		849194	1					
ANR	849876	Identifier	Transparent		849194	0					
ANR	849877	GotoStatement	goto terminated ;	253:2:5737:5752	849194	18	True				
ANR	849878	Identifier	terminated		849194	0					
ANR	849879	Label	terminated :	256:0:5758:5768	849194	33	True				
ANR	849880	Identifier	terminated		849194	0					
ANR	849881	IfStatement	if ( ! im )		849194	34					
ANR	849882	Condition	! im	258:5:5824:5826	849194	0	True				
ANR	849883	UnaryOperationExpression	! im		849194	0					
ANR	849884	UnaryOperator	!		849194	0					
ANR	849885	Identifier	im		849194	1					
ANR	849886	CompoundStatement		131:10:2846:2846	849194	1					
ANR	849887	ReturnStatement	return 0 ;	259:2:5833:5841	849194	0	True				
ANR	849888	PrimaryExpression	0		849194	0					
ANR	849889	IfStatement	if ( ! im -> colorsTotal )		849194	35					
ANR	849890	Condition	! im -> colorsTotal	261:5:5851:5866	849194	0	True				
ANR	849891	UnaryOperationExpression	! im -> colorsTotal		849194	0					
ANR	849892	UnaryOperator	!		849194	0					
ANR	849893	PtrMemberAccess	im -> colorsTotal		849194	1					
ANR	849894	Identifier	im		849194	0					
ANR	849895	Identifier	colorsTotal		849194	1					
ANR	849896	CompoundStatement		134:23:2886:2886	849194	1					
ANR	849897	ExpressionStatement	gdImageDestroy ( im )	262:2:5873:5891	849194	0	True				
ANR	849898	CallExpression	gdImageDestroy ( im )		849194	0					
ANR	849899	Callee	gdImageDestroy		849194	0					
ANR	849900	Identifier	gdImageDestroy		849194	0					
ANR	849901	ArgumentList	im		849194	1					
ANR	849902	Argument	im		849194	0					
ANR	849903	Identifier	im		849194	0					
ANR	849904	ReturnStatement	return 0 ;	263:2:5895:5903	849194	1	True				
ANR	849905	PrimaryExpression	0		849194	0					
ANR	849906	ForStatement	for ( i = ( ( im -> colorsTotal - 1 ) ) ; ( i >= 0 ) ; i -- )		849194	36					
ANR	849907	ForInit	i = ( ( im -> colorsTotal - 1 ) ) ;	268:6:6020:6043	849194	0	True				
ANR	849908	AssignmentExpression	i = ( ( im -> colorsTotal - 1 ) )		849194	0		=			
ANR	849909	Identifier	i		849194	0					
ANR	849910	AdditiveExpression	im -> colorsTotal - 1		849194	1		-			
ANR	849911	PtrMemberAccess	im -> colorsTotal		849194	0					
ANR	849912	Identifier	im		849194	0					
ANR	849913	Identifier	colorsTotal		849194	1					
ANR	849914	PrimaryExpression	1		849194	1					
ANR	849915	Condition	i >= 0	268:31:6045:6050	849194	1	True				
ANR	849916	RelationalExpression	i >= 0		849194	0		>=			
ANR	849917	Identifier	i		849194	0					
ANR	849918	PrimaryExpression	0		849194	1					
ANR	849919	PostIncDecOperationExpression	i --	268:39:6053:6055	849194	2	True				
ANR	849920	Identifier	i		849194	0					
ANR	849921	IncDec	--		849194	1					
ANR	849922	CompoundStatement		141:44:3075:3075	849194	3					
ANR	849923	IfStatement	if ( im -> open [ i ] )		849194	0					
ANR	849924	Condition	im -> open [ i ]	269:6:6066:6076	849194	0	True				
ANR	849925	ArrayIndexing	im -> open [ i ]		849194	0					
ANR	849926	PtrMemberAccess	im -> open		849194	0					
ANR	849927	Identifier	im		849194	0					
ANR	849928	Identifier	open		849194	1					
ANR	849929	Identifier	i		849194	1					
ANR	849930	CompoundStatement		142:19:3096:3096	849194	1					
ANR	849931	ExpressionStatement	im -> colorsTotal --	270:3:6084:6101	849194	0	True				
ANR	849932	PostIncDecOperationExpression	im -> colorsTotal --		849194	0					
ANR	849933	PtrMemberAccess	im -> colorsTotal		849194	0					
ANR	849934	Identifier	im		849194	0					
ANR	849935	Identifier	colorsTotal		849194	1					
ANR	849936	IncDec	--		849194	1					
ANR	849937	ElseStatement	else		849194	0					
ANR	849938	CompoundStatement		144:9:3129:3129	849194	0					
ANR	849939	BreakStatement	break ;	272:3:6117:6122	849194	0	True				
ANR	849940	ReturnStatement	return im ;	275:1:6132:6141	849194	37	True				
ANR	849941	Identifier	im		849194	0					
ANR	849942	ReturnType	gdImagePtr		849194	1					
ANR	849943	Identifier	gdImageCreateFromGifCtx		849194	2					
ANR	849944	ParameterList	gdIOCtxPtr fd		849194	3					
ANR	849945	Parameter	gdIOCtxPtr fd	127:35:2957:2969	849194	0	True				
ANR	849946	ParameterType	gdIOCtxPtr		849194	0					
ANR	849947	Identifier	fd		849194	1					
ANR	849948	CFGEntryNode	ENTRY		849194		True				
ANR	849949	CFGExitNode	EXIT		849194		True				
ANR	849950	InfiniteForNode	true		849194		True				
ANR	849951	Symbol	* localColorMap		849194						
ANR	849952	Symbol	strncmp		849194						
ANR	849953	Symbol	* * im		849194						
ANR	849954	Symbol	screen_height		849194						
ANR	849955	Symbol	memcmp		849194						
ANR	849956	Symbol	& Transparent		849194						
ANR	849957	Symbol	ZeroDataBlock		849194						
ANR	849958	Symbol	BitPixel		849194						
ANR	849959	Symbol	height		849194						
ANR	849960	Symbol	screen_width		849194						
ANR	849961	Symbol	* buf		849194						
ANR	849962	Symbol	Background		849194						
ANR	849963	Symbol	im		849194						
ANR	849964	Symbol	gdImageCreate		849194						
ANR	849965	Symbol	BitSet		849194						
ANR	849966	Symbol	Transparent		849194						
ANR	849967	Symbol	left		849194						
ANR	849968	Symbol	* ColorMap		849194						
ANR	849969	Symbol	ReadOK		849194						
ANR	849970	Symbol	haveGlobalColormap		849194						
ANR	849971	Symbol	fd		849194						
ANR	849972	Symbol	LM_to_uint		849194						
ANR	849973	Symbol	ReadColorMap		849194						
ANR	849974	Symbol	im -> colorsTotal		849194						
ANR	849975	Symbol	INTERLACE		849194						
ANR	849976	Symbol	gif87a		849194						
ANR	849977	Symbol	imh		849194						
ANR	849978	Symbol	ColorMap		849194						
ANR	849979	Symbol	* im		849194						
ANR	849980	Symbol	* im -> open		849194						
ANR	849981	Symbol	LOCALCOLORMAP		849194						
ANR	849982	Symbol	im -> interlace		849194						
ANR	849983	Symbol	imw		849194						
ANR	849984	Symbol	localColorMap		849194						
ANR	849985	Symbol	top		849194						
ANR	849986	Symbol	bitPixel		849194						
ANR	849987	Symbol	VERBOSE		849194						
ANR	849988	Symbol	ColorResolution		849194						
ANR	849989	Symbol	c		849194						
ANR	849990	Symbol	i		849194						
ANR	849991	Symbol	& c		849194						
ANR	849992	Symbol	useGlobalColormap		849194						
ANR	849993	Symbol	MAXCOLORMAPSIZE		849194						
ANR	849994	Symbol	& ZeroDataBlock		849194						
ANR	849995	Symbol	AspectRatio		849194						
ANR	849996	Symbol	buf		849194						
ANR	849997	Symbol	* i		849194						
ANR	849998	Symbol	width		849194						
ANR	849999	Symbol	im -> open		849194						
ANR	850000	Symbol	FALSE		849194						
ANR	850001	Function	ReadColorMap	279:0:6156:6502							
ANR	850002	FunctionDef	"ReadColorMap (gdIOCtx * fd , int number , unsigned char ( * buffer ) [ 256 ])"		850001	0					
ANR	850003	CompoundStatement		280:0:6245:6502	850001	0					
ANR	850004	IdentifierDeclStatement	int i ;	281:1:6248:6265	850001	0	True				
ANR	850005	IdentifierDecl	i		850001	0					
ANR	850006	IdentifierDeclType	int		850001	0					
ANR	850007	Identifier	i		850001	1					
ANR	850008	IdentifierDeclStatement	unsigned char rgb [ 3 ] ;	282:1:6268:6290	850001	1	True				
ANR	850009	IdentifierDecl	rgb [ 3 ]		850001	0					
ANR	850010	IdentifierDeclType	unsigned char [ 3 ]		850001	0					
ANR	850011	Identifier	rgb		850001	1					
ANR	850012	PrimaryExpression	3		850001	2					
ANR	850013	ForStatement	for ( i = 0 ; i < number ; ++ i )		850001	2					
ANR	850014	ForInit	i = 0 ;	285:6:6300:6305	850001	0	True				
ANR	850015	AssignmentExpression	i = 0		850001	0		=			
ANR	850016	Identifier	i		850001	0					
ANR	850017	PrimaryExpression	0		850001	1					
ANR	850018	Condition	i < number	285:13:6307:6316	850001	1	True				
ANR	850019	RelationalExpression	i < number		850001	0		<			
ANR	850020	Identifier	i		850001	0					
ANR	850021	Identifier	number		850001	1					
ANR	850022	UnaryExpression	++ i	285:25:6319:6321	850001	2	True				
ANR	850023	IncDec	++		850001	0					
ANR	850024	Identifier	i		850001	1					
ANR	850025	CompoundStatement		6:30:78:78	850001	3					
ANR	850026	IfStatement	"if ( ! ReadOK ( fd , rgb , sizeof ( rgb ) ) )"		850001	0					
ANR	850027	Condition	"! ReadOK ( fd , rgb , sizeof ( rgb ) )"	286:6:6332:6361	850001	0	True				
ANR	850028	UnaryOperationExpression	"! ReadOK ( fd , rgb , sizeof ( rgb ) )"		850001	0					
ANR	850029	UnaryOperator	!		850001	0					
ANR	850030	CallExpression	"ReadOK ( fd , rgb , sizeof ( rgb ) )"		850001	1					
ANR	850031	Callee	ReadOK		850001	0					
ANR	850032	Identifier	ReadOK		850001	0					
ANR	850033	ArgumentList	fd		850001	1					
ANR	850034	Argument	fd		850001	0					
ANR	850035	Identifier	fd		850001	0					
ANR	850036	Argument	rgb		850001	1					
ANR	850037	Identifier	rgb		850001	0					
ANR	850038	Argument	sizeof ( rgb )		850001	2					
ANR	850039	SizeofExpression	sizeof ( rgb )		850001	0					
ANR	850040	Sizeof	sizeof		850001	0					
ANR	850041	SizeofOperand	rgb		850001	1					
ANR	850042	CompoundStatement		7:38:118:118	850001	1					
ANR	850043	ReturnStatement	return TRUE ;	287:3:6369:6380	850001	0	True				
ANR	850044	Identifier	TRUE		850001	0					
ANR	850045	ExpressionStatement	buffer [ CM_RED ] [ i ] = rgb [ 0 ]	289:2:6388:6415	850001	1	True				
ANR	850046	AssignmentExpression	buffer [ CM_RED ] [ i ] = rgb [ 0 ]		850001	0		=			
ANR	850047	ArrayIndexing	buffer [ CM_RED ] [ i ]		850001	0					
ANR	850048	ArrayIndexing	buffer [ CM_RED ]		850001	0					
ANR	850049	Identifier	buffer		850001	0					
ANR	850050	Identifier	CM_RED		850001	1					
ANR	850051	Identifier	i		850001	1					
ANR	850052	ArrayIndexing	rgb [ 0 ]		850001	1					
ANR	850053	Identifier	rgb		850001	0					
ANR	850054	PrimaryExpression	0		850001	1					
ANR	850055	ExpressionStatement	buffer [ CM_GREEN ] [ i ] = rgb [ 1 ]	290:2:6419:6448	850001	2	True				
ANR	850056	AssignmentExpression	buffer [ CM_GREEN ] [ i ] = rgb [ 1 ]		850001	0		=			
ANR	850057	ArrayIndexing	buffer [ CM_GREEN ] [ i ]		850001	0					
ANR	850058	ArrayIndexing	buffer [ CM_GREEN ]		850001	0					
ANR	850059	Identifier	buffer		850001	0					
ANR	850060	Identifier	CM_GREEN		850001	1					
ANR	850061	Identifier	i		850001	1					
ANR	850062	ArrayIndexing	rgb [ 1 ]		850001	1					
ANR	850063	Identifier	rgb		850001	0					
ANR	850064	PrimaryExpression	1		850001	1					
ANR	850065	ExpressionStatement	buffer [ CM_BLUE ] [ i ] = rgb [ 2 ]	291:2:6452:6480	850001	3	True				
ANR	850066	AssignmentExpression	buffer [ CM_BLUE ] [ i ] = rgb [ 2 ]		850001	0		=			
ANR	850067	ArrayIndexing	buffer [ CM_BLUE ] [ i ]		850001	0					
ANR	850068	ArrayIndexing	buffer [ CM_BLUE ]		850001	0					
ANR	850069	Identifier	buffer		850001	0					
ANR	850070	Identifier	CM_BLUE		850001	1					
ANR	850071	Identifier	i		850001	1					
ANR	850072	ArrayIndexing	rgb [ 2 ]		850001	1					
ANR	850073	Identifier	rgb		850001	0					
ANR	850074	PrimaryExpression	2		850001	1					
ANR	850075	ReturnStatement	return FALSE ;	295:1:6488:6500	850001	3	True				
ANR	850076	Identifier	FALSE		850001	0					
ANR	850077	ReturnType	static int		850001	1					
ANR	850078	Identifier	ReadColorMap		850001	2					
ANR	850079	ParameterList	"gdIOCtx * fd , int number , unsigned char ( * buffer ) [ 256 ]"		850001	3					
ANR	850080	Parameter	gdIOCtx * fd	279:24:6180:6190	850001	0	True				
ANR	850081	ParameterType	gdIOCtx *		850001	0					
ANR	850082	Identifier	fd		850001	1					
ANR	850083	Parameter	int number	279:37:6193:6202	850001	1	True				
ANR	850084	ParameterType	int		850001	0					
ANR	850085	Identifier	number		850001	1					
ANR	850086	Parameter	unsigned char ( * buffer ) [ 256 ]	279:49:6205:6232	850001	2	True				
ANR	850087	ParameterType	([ 256 ] unsigned char) *		850001	0					
ANR	850088	Identifier	buffer		850001	1					
ANR	850089	CFGEntryNode	ENTRY		850001		True				
ANR	850090	CFGExitNode	EXIT		850001		True				
ANR	850091	Symbol	* buffer		850001						
ANR	850092	Symbol	* * buffer		850001						
ANR	850093	Symbol	CM_RED		850001						
ANR	850094	Symbol	* CM_RED		850001						
ANR	850095	Symbol	i		850001						
ANR	850096	Symbol	TRUE		850001						
ANR	850097	Symbol	rgb		850001						
ANR	850098	Symbol	CM_BLUE		850001						
ANR	850099	Symbol	* CM_GREEN		850001						
ANR	850100	Symbol	* * CM_BLUE		850001						
ANR	850101	Symbol	number		850001						
ANR	850102	Symbol	* i		850001						
ANR	850103	Symbol	* * CM_GREEN		850001						
ANR	850104	Symbol	* rgb		850001						
ANR	850105	Symbol	CM_GREEN		850001						
ANR	850106	Symbol	ReadOK		850001						
ANR	850107	Symbol	* * CM_RED		850001						
ANR	850108	Symbol	* CM_BLUE		850001						
ANR	850109	Symbol	FALSE		850001						
ANR	850110	Symbol	buffer		850001						
ANR	850111	Symbol	fd		850001						
ANR	850112	Function	DoExtension	299:0:6515:7283							
ANR	850113	FunctionDef	"DoExtension (gdIOCtx * fd , int label , int * Transparent , int * ZeroDataBlockP)"		850112	0					
ANR	850114	CompoundStatement		301:0:6601:7283	850112	0					
ANR	850115	IdentifierDeclStatement	unsigned char buf [ 256 ] ;	302:1:6604:6626	850112	0	True				
ANR	850116	IdentifierDecl	buf [ 256 ]		850112	0					
ANR	850117	IdentifierDeclType	unsigned char [ 256 ]		850112	0					
ANR	850118	Identifier	buf		850112	1					
ANR	850119	PrimaryExpression	256		850112	2					
ANR	850120	SwitchStatement	switch ( label )		850112	1					
ANR	850121	Condition	label	304:9:6638:6642	850112	0	True				
ANR	850122	Identifier	label		850112	0					
ANR	850123	CompoundStatement		4:16:43:43	850112	1					
ANR	850124	Label	case 0xf9 :	305:2:6649:6658	850112	0	True				
ANR	850125	ExpressionStatement	"memset ( buf , 0 , 4 )"	306:3:6708:6725	850112	1	True				
ANR	850126	CallExpression	"memset ( buf , 0 , 4 )"		850112	0					
ANR	850127	Callee	memset		850112	0					
ANR	850128	Identifier	memset		850112	0					
ANR	850129	ArgumentList	buf		850112	1					
ANR	850130	Argument	buf		850112	0					
ANR	850131	Identifier	buf		850112	0					
ANR	850132	Argument	0		850112	1					
ANR	850133	PrimaryExpression	0		850112	0					
ANR	850134	Argument	4		850112	2					
ANR	850135	PrimaryExpression	4		850112	0					
ANR	850136	ExpressionStatement	"( void ) GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP )"	307:15:6807:6868	850112	2	True				
ANR	850137	CastExpression	"( void ) GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP )"		850112	0					
ANR	850138	CastTarget	void		850112	0					
ANR	850139	CallExpression	"GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP )"		850112	1					
ANR	850140	Callee	GetDataBlock		850112	0					
ANR	850141	Identifier	GetDataBlock		850112	0					
ANR	850142	ArgumentList	fd		850112	1					
ANR	850143	Argument	fd		850112	0					
ANR	850144	Identifier	fd		850112	0					
ANR	850145	Argument	( unsigned char * ) buf		850112	1					
ANR	850146	CastExpression	( unsigned char * ) buf		850112	0					
ANR	850147	CastTarget	unsigned char *		850112	0					
ANR	850148	Identifier	buf		850112	1					
ANR	850149	Argument	ZeroDataBlockP		850112	2					
ANR	850150	Identifier	ZeroDataBlockP		850112	0					
ANR	850151	ExpressionStatement	Gif89 . disposal = ( buf [ 0 ] >> 2 ) & 0x7	309:3:6879:6918	850112	3	True				
ANR	850152	AssignmentExpression	Gif89 . disposal = ( buf [ 0 ] >> 2 ) & 0x7		850112	0		=			
ANR	850153	MemberAccess	Gif89 . disposal		850112	0					
ANR	850154	Identifier	Gif89		850112	0					
ANR	850155	Identifier	disposal		850112	1					
ANR	850156	BitAndExpression	( buf [ 0 ] >> 2 ) & 0x7		850112	1		&			
ANR	850157	ShiftExpression	buf [ 0 ] >> 2		850112	0		>>			
ANR	850158	ArrayIndexing	buf [ 0 ]		850112	0					
ANR	850159	Identifier	buf		850112	0					
ANR	850160	PrimaryExpression	0		850112	1					
ANR	850161	PrimaryExpression	2		850112	1					
ANR	850162	PrimaryExpression	0x7		850112	1					
ANR	850163	ExpressionStatement	Gif89 . inputFlag = ( buf [ 0 ] >> 1 ) & 0x1	310:3:6923:6962	850112	4	True				
ANR	850164	AssignmentExpression	Gif89 . inputFlag = ( buf [ 0 ] >> 1 ) & 0x1		850112	0		=			
ANR	850165	MemberAccess	Gif89 . inputFlag		850112	0					
ANR	850166	Identifier	Gif89		850112	0					
ANR	850167	Identifier	inputFlag		850112	1					
ANR	850168	BitAndExpression	( buf [ 0 ] >> 1 ) & 0x1		850112	1		&			
ANR	850169	ShiftExpression	buf [ 0 ] >> 1		850112	0		>>			
ANR	850170	ArrayIndexing	buf [ 0 ]		850112	0					
ANR	850171	Identifier	buf		850112	0					
ANR	850172	PrimaryExpression	0		850112	1					
ANR	850173	PrimaryExpression	1		850112	1					
ANR	850174	PrimaryExpression	0x1		850112	1					
ANR	850175	ExpressionStatement	"Gif89 . delayTime = LM_to_uint ( buf [ 1 ] , buf [ 2 ] )"	311:3:6967:7012	850112	5	True				
ANR	850176	AssignmentExpression	"Gif89 . delayTime = LM_to_uint ( buf [ 1 ] , buf [ 2 ] )"		850112	0		=			
ANR	850177	MemberAccess	Gif89 . delayTime		850112	0					
ANR	850178	Identifier	Gif89		850112	0					
ANR	850179	Identifier	delayTime		850112	1					
ANR	850180	CallExpression	"LM_to_uint ( buf [ 1 ] , buf [ 2 ] )"		850112	1					
ANR	850181	Callee	LM_to_uint		850112	0					
ANR	850182	Identifier	LM_to_uint		850112	0					
ANR	850183	ArgumentList	buf [ 1 ]		850112	1					
ANR	850184	Argument	buf [ 1 ]		850112	0					
ANR	850185	ArrayIndexing	buf [ 1 ]		850112	0					
ANR	850186	Identifier	buf		850112	0					
ANR	850187	PrimaryExpression	1		850112	1					
ANR	850188	Argument	buf [ 2 ]		850112	1					
ANR	850189	ArrayIndexing	buf [ 2 ]		850112	0					
ANR	850190	Identifier	buf		850112	0					
ANR	850191	PrimaryExpression	2		850112	1					
ANR	850192	IfStatement	if ( ( buf [ 0 ] & 0x1 ) != 0 )		850112	6					
ANR	850193	Condition	( buf [ 0 ] & 0x1 ) != 0	313:7:7028:7046	850112	0	True				
ANR	850194	EqualityExpression	( buf [ 0 ] & 0x1 ) != 0		850112	0		!=			
ANR	850195	BitAndExpression	buf [ 0 ] & 0x1		850112	0		&			
ANR	850196	ArrayIndexing	buf [ 0 ]		850112	0					
ANR	850197	Identifier	buf		850112	0					
ANR	850198	PrimaryExpression	0		850112	1					
ANR	850199	PrimaryExpression	0x1		850112	1					
ANR	850200	PrimaryExpression	0		850112	1					
ANR	850201	ExpressionStatement	* Transparent = buf [ 3 ]	314:4:7053:7074	850112	1	True				
ANR	850202	AssignmentExpression	* Transparent = buf [ 3 ]		850112	0		=			
ANR	850203	UnaryOperationExpression	* Transparent		850112	0					
ANR	850204	UnaryOperator	*		850112	0					
ANR	850205	Identifier	Transparent		850112	1					
ANR	850206	ArrayIndexing	buf [ 3 ]		850112	1					
ANR	850207	Identifier	buf		850112	0					
ANR	850208	PrimaryExpression	3		850112	1					
ANR	850209	WhileStatement	"while ( GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP ) > 0 )"		850112	7					
ANR	850210	Condition	"GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP ) > 0"	316:10:7087:7144	850112	0	True				
ANR	850211	RelationalExpression	"GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP ) > 0"		850112	0		>			
ANR	850212	CallExpression	"GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP )"		850112	0					
ANR	850213	Callee	GetDataBlock		850112	0					
ANR	850214	Identifier	GetDataBlock		850112	0					
ANR	850215	ArgumentList	fd		850112	1					
ANR	850216	Argument	fd		850112	0					
ANR	850217	Identifier	fd		850112	0					
ANR	850218	Argument	( unsigned char * ) buf		850112	1					
ANR	850219	CastExpression	( unsigned char * ) buf		850112	0					
ANR	850220	CastTarget	unsigned char *		850112	0					
ANR	850221	Identifier	buf		850112	1					
ANR	850222	Argument	ZeroDataBlockP		850112	2					
ANR	850223	Identifier	ZeroDataBlockP		850112	0					
ANR	850224	PrimaryExpression	0		850112	1					
ANR	850225	ExpressionStatement		316:69:7146:7146	850112	1	True				
ANR	850226	ReturnStatement	return FALSE ;	317:3:7151:7163	850112	8	True				
ANR	850227	Identifier	FALSE		850112	0					
ANR	850228	Label	default :	318:2:7167:7174	850112	9	True				
ANR	850229	Identifier	default		850112	0					
ANR	850230	BreakStatement	break ;	319:3:7179:7184	850112	10	True				
ANR	850231	WhileStatement	"while ( GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP ) > 0 )"		850112	2					
ANR	850232	Condition	"GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP ) > 0"	321:14:7203:7260	850112	0	True				
ANR	850233	RelationalExpression	"GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP ) > 0"		850112	0		>			
ANR	850234	CallExpression	"GetDataBlock ( fd , ( unsigned char * ) buf , ZeroDataBlockP )"		850112	0					
ANR	850235	Callee	GetDataBlock		850112	0					
ANR	850236	Identifier	GetDataBlock		850112	0					
ANR	850237	ArgumentList	fd		850112	1					
ANR	850238	Argument	fd		850112	0					
ANR	850239	Identifier	fd		850112	0					
ANR	850240	Argument	( unsigned char * ) buf		850112	1					
ANR	850241	CastExpression	( unsigned char * ) buf		850112	0					
ANR	850242	CastTarget	unsigned char *		850112	0					
ANR	850243	Identifier	buf		850112	1					
ANR	850244	Argument	ZeroDataBlockP		850112	2					
ANR	850245	Identifier	ZeroDataBlockP		850112	0					
ANR	850246	PrimaryExpression	0		850112	1					
ANR	850247	ExpressionStatement		322:2:7265:7265	850112	1	True				
ANR	850248	ReturnStatement	return FALSE ;	324:1:7269:7281	850112	3	True				
ANR	850249	Identifier	FALSE		850112	0					
ANR	850250	ReturnType	static int		850112	1					
ANR	850251	Identifier	DoExtension		850112	2					
ANR	850252	ParameterList	"gdIOCtx * fd , int label , int * Transparent , int * ZeroDataBlockP"		850112	3					
ANR	850253	Parameter	gdIOCtx * fd	300:12:6538:6548	850112	0	True				
ANR	850254	ParameterType	gdIOCtx *		850112	0					
ANR	850255	Identifier	fd		850112	1					
ANR	850256	Parameter	int label	300:25:6551:6559	850112	1	True				
ANR	850257	ParameterType	int		850112	0					
ANR	850258	Identifier	label		850112	1					
ANR	850259	Parameter	int * Transparent	300:36:6562:6577	850112	2	True				
ANR	850260	ParameterType	int *		850112	0					
ANR	850261	Identifier	Transparent		850112	1					
ANR	850262	Parameter	int * ZeroDataBlockP	300:54:6580:6598	850112	3	True				
ANR	850263	ParameterType	int *		850112	0					
ANR	850264	Identifier	ZeroDataBlockP		850112	1					
ANR	850265	CFGEntryNode	ENTRY		850112		True				
ANR	850266	CFGExitNode	EXIT		850112		True				
ANR	850267	Symbol	Gif89 . disposal		850112						
ANR	850268	Symbol	LM_to_uint		850112						
ANR	850269	Symbol	* buf		850112						
ANR	850270	Symbol	* Transparent		850112						
ANR	850271	Symbol	Gif89 . inputFlag		850112						
ANR	850272	Symbol	label		850112						
ANR	850273	Symbol	Gif89 . delayTime		850112						
ANR	850274	Symbol	buf		850112						
ANR	850275	Symbol	Transparent		850112						
ANR	850276	Symbol	FALSE		850112						
ANR	850277	Symbol	Gif89		850112						
ANR	850278	Symbol	fd		850112						
ANR	850279	Symbol	GetDataBlock		850112						
ANR	850280	Symbol	ZeroDataBlockP		850112						
ANR	850281	Function	GetDataBlock_	328:0:7296:7564							
ANR	850282	FunctionDef	"GetDataBlock_ (gdIOCtx * fd , unsigned char * buf , int * ZeroDataBlockP)"		850281	0					
ANR	850283	CompoundStatement		330:0:7375:7564	850281	0					
ANR	850284	IdentifierDeclStatement	unsigned char count ;	331:1:7378:7399	850281	0	True				
ANR	850285	IdentifierDecl	count		850281	0					
ANR	850286	IdentifierDeclType	unsigned char		850281	0					
ANR	850287	Identifier	count		850281	1					
ANR	850288	IfStatement	"if ( ! ReadOK ( fd , & count , 1 ) )"		850281	1					
ANR	850289	Condition	"! ReadOK ( fd , & count , 1 )"	333:5:7407:7427	850281	0	True				
ANR	850290	UnaryOperationExpression	"! ReadOK ( fd , & count , 1 )"		850281	0					
ANR	850291	UnaryOperator	!		850281	0					
ANR	850292	CallExpression	"ReadOK ( fd , & count , 1 )"		850281	1					
ANR	850293	Callee	ReadOK		850281	0					
ANR	850294	Identifier	ReadOK		850281	0					
ANR	850295	ArgumentList	fd		850281	1					
ANR	850296	Argument	fd		850281	0					
ANR	850297	Identifier	fd		850281	0					
ANR	850298	Argument	& count		850281	1					
ANR	850299	UnaryOperationExpression	& count		850281	0					
ANR	850300	UnaryOperator	&		850281	0					
ANR	850301	Identifier	count		850281	1					
ANR	850302	Argument	1		850281	2					
ANR	850303	PrimaryExpression	1		850281	0					
ANR	850304	CompoundStatement		4:28:54:54	850281	1					
ANR	850305	ReturnStatement	return - 1 ;	334:2:7434:7443	850281	0	True				
ANR	850306	UnaryOperationExpression	- 1		850281	0					
ANR	850307	UnaryOperator	-		850281	0					
ANR	850308	PrimaryExpression	1		850281	1					
ANR	850309	ExpressionStatement	* ZeroDataBlockP = count == 0	337:1:7450:7478	850281	2	True				
ANR	850310	AssignmentExpression	* ZeroDataBlockP = count == 0		850281	0		=			
ANR	850311	UnaryOperationExpression	* ZeroDataBlockP		850281	0					
ANR	850312	UnaryOperator	*		850281	0					
ANR	850313	Identifier	ZeroDataBlockP		850281	1					
ANR	850314	EqualityExpression	count == 0		850281	1		==			
ANR	850315	Identifier	count		850281	0					
ANR	850316	PrimaryExpression	0		850281	1					
ANR	850317	IfStatement	"if ( ( count != 0 ) && ( ! ReadOK ( fd , buf , count ) ) )"		850281	3					
ANR	850318	Condition	"( count != 0 ) && ( ! ReadOK ( fd , buf , count ) )"	339:5:7486:7527	850281	0	True				
ANR	850319	AndExpression	"( count != 0 ) && ( ! ReadOK ( fd , buf , count ) )"		850281	0		&&			
ANR	850320	EqualityExpression	count != 0		850281	0		!=			
ANR	850321	Identifier	count		850281	0					
ANR	850322	PrimaryExpression	0		850281	1					
ANR	850323	UnaryOperationExpression	"! ReadOK ( fd , buf , count )"		850281	1					
ANR	850324	UnaryOperator	!		850281	0					
ANR	850325	CallExpression	"ReadOK ( fd , buf , count )"		850281	1					
ANR	850326	Callee	ReadOK		850281	0					
ANR	850327	Identifier	ReadOK		850281	0					
ANR	850328	ArgumentList	fd		850281	1					
ANR	850329	Argument	fd		850281	0					
ANR	850330	Identifier	fd		850281	0					
ANR	850331	Argument	buf		850281	1					
ANR	850332	Identifier	buf		850281	0					
ANR	850333	Argument	count		850281	2					
ANR	850334	Identifier	count		850281	0					
ANR	850335	CompoundStatement		10:49:154:154	850281	1					
ANR	850336	ReturnStatement	return - 1 ;	340:2:7534:7543	850281	0	True				
ANR	850337	UnaryOperationExpression	- 1		850281	0					
ANR	850338	UnaryOperator	-		850281	0					
ANR	850339	PrimaryExpression	1		850281	1					
ANR	850340	ReturnStatement	return count ;	343:1:7550:7562	850281	4	True				
ANR	850341	Identifier	count		850281	0					
ANR	850342	ReturnType	static int		850281	1					
ANR	850343	Identifier	GetDataBlock_		850281	2					
ANR	850344	ParameterList	"gdIOCtx * fd , unsigned char * buf , int * ZeroDataBlockP"		850281	3					
ANR	850345	Parameter	gdIOCtx * fd	329:14:7321:7331	850281	0	True				
ANR	850346	ParameterType	gdIOCtx *		850281	0					
ANR	850347	Identifier	fd		850281	1					
ANR	850348	Parameter	unsigned char * buf	329:27:7334:7351	850281	1	True				
ANR	850349	ParameterType	unsigned char *		850281	0					
ANR	850350	Identifier	buf		850281	1					
ANR	850351	Parameter	int * ZeroDataBlockP	329:47:7354:7372	850281	2	True				
ANR	850352	ParameterType	int *		850281	0					
ANR	850353	Identifier	ZeroDataBlockP		850281	1					
ANR	850354	CFGEntryNode	ENTRY		850281		True				
ANR	850355	CFGExitNode	EXIT		850281		True				
ANR	850356	Symbol	buf		850281						
ANR	850357	Symbol	count		850281						
ANR	850358	Symbol	ReadOK		850281						
ANR	850359	Symbol	& count		850281						
ANR	850360	Symbol	fd		850281						
ANR	850361	Symbol	* ZeroDataBlockP		850281						
ANR	850362	Symbol	ZeroDataBlockP		850281						
ANR	850363	Function	GetDataBlock	347:0:7577:8043							
ANR	850364	FunctionDef	"GetDataBlock (gdIOCtx * fd , unsigned char * buf , int * ZeroDataBlockP)"		850363	0					
ANR	850365	CompoundStatement		349:0:7655:8043	850363	0					
ANR	850366	IdentifierDeclStatement	int rv ;	350:1:7658:7664	850363	0	True				
ANR	850367	IdentifierDecl	rv		850363	0					
ANR	850368	IdentifierDeclType	int		850363	0					
ANR	850369	Identifier	rv		850363	1					
ANR	850370	IdentifierDeclStatement	int i ;	351:1:7667:7672	850363	1	True				
ANR	850371	IdentifierDecl	i		850363	0					
ANR	850372	IdentifierDeclType	int		850363	0					
ANR	850373	Identifier	i		850363	1					
ANR	850374	ExpressionStatement	"rv = GetDataBlock_ ( fd , buf , ZeroDataBlockP )"	353:1:7676:7718	850363	2	True				
ANR	850375	AssignmentExpression	"rv = GetDataBlock_ ( fd , buf , ZeroDataBlockP )"		850363	0		=			
ANR	850376	Identifier	rv		850363	0					
ANR	850377	CallExpression	"GetDataBlock_ ( fd , buf , ZeroDataBlockP )"		850363	1					
ANR	850378	Callee	GetDataBlock_		850363	0					
ANR	850379	Identifier	GetDataBlock_		850363	0					
ANR	850380	ArgumentList	fd		850363	1					
ANR	850381	Argument	fd		850363	0					
ANR	850382	Identifier	fd		850363	0					
ANR	850383	Argument	buf		850363	1					
ANR	850384	Identifier	buf		850363	0					
ANR	850385	Argument	ZeroDataBlockP		850363	2					
ANR	850386	Identifier	ZeroDataBlockP		850363	0					
ANR	850387	IfStatement	if ( VERBOSE )		850363	3					
ANR	850388	Condition	VERBOSE	354:5:7725:7731	850363	0	True				
ANR	850389	Identifier	VERBOSE		850363	0					
ANR	850390	CompoundStatement		7:2:82:98	850363	1					
ANR	850391	IdentifierDeclStatement	char * tmp = NULL ;	355:2:7738:7754	850363	0	True				
ANR	850392	IdentifierDecl	* tmp = NULL		850363	0					
ANR	850393	IdentifierDeclType	char *		850363	0					
ANR	850394	Identifier	tmp		850363	1					
ANR	850395	AssignmentExpression	* tmp = NULL		850363	2		=			
ANR	850396	Identifier	NULL		850363	0					
ANR	850397	Identifier	NULL		850363	1					
ANR	850398	IfStatement	if ( rv > 0 )		850363	1					
ANR	850399	Condition	rv > 0	356:6:7762:7767	850363	0	True				
ANR	850400	RelationalExpression	rv > 0		850363	0		>			
ANR	850401	Identifier	rv		850363	0					
ANR	850402	PrimaryExpression	0		850363	1					
ANR	850403	CompoundStatement		8:14:114:114	850363	1					
ANR	850404	ExpressionStatement	"tmp = safe_emalloc ( 3 * rv , sizeof ( char ) , 1 )"	357:3:7775:7818	850363	0	True				
ANR	850405	AssignmentExpression	"tmp = safe_emalloc ( 3 * rv , sizeof ( char ) , 1 )"		850363	0		=			
ANR	850406	Identifier	tmp		850363	0					
ANR	850407	CallExpression	"safe_emalloc ( 3 * rv , sizeof ( char ) , 1 )"		850363	1					
ANR	850408	Callee	safe_emalloc		850363	0					
ANR	850409	Identifier	safe_emalloc		850363	0					
ANR	850410	ArgumentList	3 * rv		850363	1					
ANR	850411	Argument	3 * rv		850363	0					
ANR	850412	MultiplicativeExpression	3 * rv		850363	0		*			
ANR	850413	PrimaryExpression	3		850363	0					
ANR	850414	Identifier	rv		850363	1					
ANR	850415	Argument	sizeof ( char )		850363	1					
ANR	850416	SizeofExpression	sizeof ( char )		850363	0					
ANR	850417	Sizeof	sizeof		850363	0					
ANR	850418	SizeofOperand	char		850363	1					
ANR	850419	Argument	1		850363	2					
ANR	850420	PrimaryExpression	1		850363	0					
ANR	850421	ForStatement	for ( i = 0 ; i < rv ; i ++ )		850363	1					
ANR	850422	ForInit	i = 0 ;	358:8:7828:7831	850363	0	True				
ANR	850423	AssignmentExpression	i = 0		850363	0		=			
ANR	850424	Identifier	i		850363	0					
ANR	850425	PrimaryExpression	0		850363	1					
ANR	850426	Condition	i < rv	358:12:7832:7835	850363	1	True				
ANR	850427	RelationalExpression	i < rv		850363	0		<			
ANR	850428	Identifier	i		850363	0					
ANR	850429	Identifier	rv		850363	1					
ANR	850430	PostIncDecOperationExpression	i ++	358:17:7837:7839	850363	2	True				
ANR	850431	Identifier	i		850363	0					
ANR	850432	IncDec	++		850363	1					
ANR	850433	CompoundStatement		10:22:186:186	850363	3					
ANR	850434	ExpressionStatement	"sprintf ( & tmp [ 3 * sizeof ( char ) * i ] , "" %02x"" , buf [ i ] )"	359:4:7848:7896	850363	0	True				
ANR	850435	CallExpression	"sprintf ( & tmp [ 3 * sizeof ( char ) * i ] , "" %02x"" , buf [ i ] )"		850363	0					
ANR	850436	Callee	sprintf		850363	0					
ANR	850437	Identifier	sprintf		850363	0					
ANR	850438	ArgumentList	& tmp [ 3 * sizeof ( char ) * i ]		850363	1					
ANR	850439	Argument	& tmp [ 3 * sizeof ( char ) * i ]		850363	0					
ANR	850440	UnaryOperationExpression	& tmp [ 3 * sizeof ( char ) * i ]		850363	0					
ANR	850441	UnaryOperator	&		850363	0					
ANR	850442	ArrayIndexing	tmp [ 3 * sizeof ( char ) * i ]		850363	1					
ANR	850443	Identifier	tmp		850363	0					
ANR	850444	MultiplicativeExpression	3 * sizeof ( char ) * i		850363	1		*			
ANR	850445	PrimaryExpression	3		850363	0					
ANR	850446	MultiplicativeExpression	sizeof ( char ) * i		850363	1		*			
ANR	850447	SizeofExpression	sizeof ( char )		850363	0					
ANR	850448	Sizeof	sizeof		850363	0					
ANR	850449	SizeofOperand	char		850363	1					
ANR	850450	Identifier	i		850363	1					
ANR	850451	Argument	""" %02x"""		850363	1					
ANR	850452	PrimaryExpression	""" %02x"""		850363	0					
ANR	850453	Argument	buf [ i ]		850363	2					
ANR	850454	ArrayIndexing	buf [ i ]		850363	0					
ANR	850455	Identifier	buf		850363	0					
ANR	850456	Identifier	i		850363	1					
ANR	850457	ElseStatement	else		850363	0					
ANR	850458	CompoundStatement		13:9:256:256	850363	0					
ANR	850459	ExpressionStatement	"tmp = estrdup ( """" )"	362:3:7917:7934	850363	0	True				
ANR	850460	AssignmentExpression	"tmp = estrdup ( """" )"		850363	0		=			
ANR	850461	Identifier	tmp		850363	0					
ANR	850462	CallExpression	"estrdup ( """" )"		850363	1					
ANR	850463	Callee	estrdup		850363	0					
ANR	850464	Identifier	estrdup		850363	0					
ANR	850465	ArgumentList	""""""		850363	1					
ANR	850466	Argument	""""""		850363	0					
ANR	850467	PrimaryExpression	""""""		850363	0					
ANR	850468	ExpressionStatement	"php_gd_error_ex ( E_NOTICE , ""[GetDataBlock returning %d: %s]"" , rv , tmp )"	364:2:7942:8011	850363	2	True				
ANR	850469	CallExpression	"php_gd_error_ex ( E_NOTICE , ""[GetDataBlock returning %d: %s]"" , rv , tmp )"		850363	0					
ANR	850470	Callee	php_gd_error_ex		850363	0					
ANR	850471	Identifier	php_gd_error_ex		850363	0					
ANR	850472	ArgumentList	E_NOTICE		850363	1					
ANR	850473	Argument	E_NOTICE		850363	0					
ANR	850474	Identifier	E_NOTICE		850363	0					
ANR	850475	Argument	"""[GetDataBlock returning %d: %s]"""		850363	1					
ANR	850476	PrimaryExpression	"""[GetDataBlock returning %d: %s]"""		850363	0					
ANR	850477	Argument	rv		850363	2					
ANR	850478	Identifier	rv		850363	0					
ANR	850479	Argument	tmp		850363	3					
ANR	850480	Identifier	tmp		850363	0					
ANR	850481	ExpressionStatement	efree ( tmp )	365:2:8015:8025	850363	3	True				
ANR	850482	CallExpression	efree ( tmp )		850363	0					
ANR	850483	Callee	efree		850363	0					
ANR	850484	Identifier	efree		850363	0					
ANR	850485	ArgumentList	tmp		850363	1					
ANR	850486	Argument	tmp		850363	0					
ANR	850487	Identifier	tmp		850363	0					
ANR	850488	ReturnStatement	return ( rv ) ;	367:1:8031:8041	850363	4	True				
ANR	850489	Identifier	rv		850363	0					
ANR	850490	ReturnType	static int		850363	1					
ANR	850491	Identifier	GetDataBlock		850363	2					
ANR	850492	ParameterList	"gdIOCtx * fd , unsigned char * buf , int * ZeroDataBlockP"		850363	3					
ANR	850493	Parameter	gdIOCtx * fd	348:13:7601:7611	850363	0	True				
ANR	850494	ParameterType	gdIOCtx *		850363	0					
ANR	850495	Identifier	fd		850363	1					
ANR	850496	Parameter	unsigned char * buf	348:26:7614:7631	850363	1	True				
ANR	850497	ParameterType	unsigned char *		850363	0					
ANR	850498	Identifier	buf		850363	1					
ANR	850499	Parameter	int * ZeroDataBlockP	348:46:7634:7652	850363	2	True				
ANR	850500	ParameterType	int *		850363	0					
ANR	850501	Identifier	ZeroDataBlockP		850363	1					
ANR	850502	CFGEntryNode	ENTRY		850363		True				
ANR	850503	CFGExitNode	EXIT		850363		True				
ANR	850504	Symbol	* buf		850363						
ANR	850505	Symbol	NULL		850363						
ANR	850506	Symbol	rv		850363						
ANR	850507	Symbol	i		850363						
ANR	850508	Symbol	E_NOTICE		850363						
ANR	850509	Symbol	buf		850363						
ANR	850510	Symbol	* i		850363						
ANR	850511	Symbol	tmp		850363						
ANR	850512	Symbol	estrdup		850363						
ANR	850513	Symbol	GetDataBlock_		850363						
ANR	850514	Symbol	VERBOSE		850363						
ANR	850515	Symbol	safe_emalloc		850363						
ANR	850516	Symbol	fd		850363						
ANR	850517	Symbol	ZeroDataBlockP		850363						
ANR	850518	Function	GetCode_	371:0:8056:9035							
ANR	850519	FunctionDef	"GetCode_ (gdIOCtx * fd , CODE_STATIC_DATA * scd , int code_size , int flag , int * ZeroDataBlockP)"		850518	0					
ANR	850520	CompoundStatement		373:0:8158:9035	850518	0					
ANR	850521	IdentifierDeclStatement	"int i , j , ret ;"	374:1:8161:8184	850518	0	True				
ANR	850522	IdentifierDecl	i		850518	0					
ANR	850523	IdentifierDeclType	int		850518	0					
ANR	850524	Identifier	i		850518	1					
ANR	850525	IdentifierDecl	j		850518	1					
ANR	850526	IdentifierDeclType	int		850518	0					
ANR	850527	Identifier	j		850518	1					
ANR	850528	IdentifierDecl	ret		850518	2					
ANR	850529	IdentifierDeclType	int		850518	0					
ANR	850530	Identifier	ret		850518	1					
ANR	850531	IdentifierDeclStatement	unsigned char count ;	375:1:8187:8206	850518	1	True				
ANR	850532	IdentifierDecl	count		850518	0					
ANR	850533	IdentifierDeclType	unsigned char		850518	0					
ANR	850534	Identifier	count		850518	1					
ANR	850535	IfStatement	if ( flag )		850518	2					
ANR	850536	Condition	flag	377:5:8214:8217	850518	0	True				
ANR	850537	Identifier	flag		850518	0					
ANR	850538	CompoundStatement		5:11:61:61	850518	1					
ANR	850539	ExpressionStatement	scd -> curbit = 0	378:2:8224:8239	850518	0	True				
ANR	850540	AssignmentExpression	scd -> curbit = 0		850518	0		=			
ANR	850541	PtrMemberAccess	scd -> curbit		850518	0					
ANR	850542	Identifier	scd		850518	0					
ANR	850543	Identifier	curbit		850518	1					
ANR	850544	PrimaryExpression	0		850518	1					
ANR	850545	ExpressionStatement	scd -> lastbit = 0	379:2:8243:8259	850518	1	True				
ANR	850546	AssignmentExpression	scd -> lastbit = 0		850518	0		=			
ANR	850547	PtrMemberAccess	scd -> lastbit		850518	0					
ANR	850548	Identifier	scd		850518	0					
ANR	850549	Identifier	lastbit		850518	1					
ANR	850550	PrimaryExpression	0		850518	1					
ANR	850551	ExpressionStatement	scd -> last_byte = 0	380:2:8263:8281	850518	2	True				
ANR	850552	AssignmentExpression	scd -> last_byte = 0		850518	0		=			
ANR	850553	PtrMemberAccess	scd -> last_byte		850518	0					
ANR	850554	Identifier	scd		850518	0					
ANR	850555	Identifier	last_byte		850518	1					
ANR	850556	PrimaryExpression	0		850518	1					
ANR	850557	ExpressionStatement	scd -> done = FALSE	381:2:8285:8302	850518	3	True				
ANR	850558	AssignmentExpression	scd -> done = FALSE		850518	0		=			
ANR	850559	PtrMemberAccess	scd -> done		850518	0					
ANR	850560	Identifier	scd		850518	0					
ANR	850561	Identifier	done		850518	1					
ANR	850562	Identifier	FALSE		850518	1					
ANR	850563	ReturnStatement	return 0 ;	382:2:8306:8314	850518	4	True				
ANR	850564	PrimaryExpression	0		850518	0					
ANR	850565	IfStatement	if ( ( scd -> curbit + code_size ) >= scd -> lastbit )		850518	3					
ANR	850566	Condition	( scd -> curbit + code_size ) >= scd -> lastbit	385:6:8326:8366	850518	0	True				
ANR	850567	RelationalExpression	( scd -> curbit + code_size ) >= scd -> lastbit		850518	0		>=			
ANR	850568	AdditiveExpression	scd -> curbit + code_size		850518	0		+			
ANR	850569	PtrMemberAccess	scd -> curbit		850518	0					
ANR	850570	Identifier	scd		850518	0					
ANR	850571	Identifier	curbit		850518	1					
ANR	850572	Identifier	code_size		850518	1					
ANR	850573	PtrMemberAccess	scd -> lastbit		850518	1					
ANR	850574	Identifier	scd		850518	0					
ANR	850575	Identifier	lastbit		850518	1					
ANR	850576	CompoundStatement		13:49:210:210	850518	1					
ANR	850577	IfStatement	if ( scd -> done )		850518	0					
ANR	850578	Condition	scd -> done	386:6:8377:8385	850518	0	True				
ANR	850579	PtrMemberAccess	scd -> done		850518	0					
ANR	850580	Identifier	scd		850518	0					
ANR	850581	Identifier	done		850518	1					
ANR	850582	CompoundStatement		14:17:229:229	850518	1					
ANR	850583	IfStatement	if ( scd -> curbit >= scd -> lastbit )		850518	0					
ANR	850584	Condition	scd -> curbit >= scd -> lastbit	387:7:8397:8423	850518	0	True				
ANR	850585	RelationalExpression	scd -> curbit >= scd -> lastbit		850518	0		>=			
ANR	850586	PtrMemberAccess	scd -> curbit		850518	0					
ANR	850587	Identifier	scd		850518	0					
ANR	850588	Identifier	curbit		850518	1					
ANR	850589	PtrMemberAccess	scd -> lastbit		850518	1					
ANR	850590	Identifier	scd		850518	0					
ANR	850591	Identifier	lastbit		850518	1					
ANR	850592	CompoundStatement		15:36:267:267	850518	1					
ANR	850593	ReturnStatement	return - 1 ;	390:3:8454:8463	850518	1	True				
ANR	850594	UnaryOperationExpression	- 1		850518	0					
ANR	850595	UnaryOperator	-		850518	0					
ANR	850596	PrimaryExpression	1		850518	1					
ANR	850597	ExpressionStatement	scd -> buf [ 0 ] = scd -> buf [ scd -> last_byte - 2 ]	392:2:8471:8511	850518	1	True				
ANR	850598	AssignmentExpression	scd -> buf [ 0 ] = scd -> buf [ scd -> last_byte - 2 ]		850518	0		=			
ANR	850599	ArrayIndexing	scd -> buf [ 0 ]		850518	0					
ANR	850600	PtrMemberAccess	scd -> buf		850518	0					
ANR	850601	Identifier	scd		850518	0					
ANR	850602	Identifier	buf		850518	1					
ANR	850603	PrimaryExpression	0		850518	1					
ANR	850604	ArrayIndexing	scd -> buf [ scd -> last_byte - 2 ]		850518	1					
ANR	850605	PtrMemberAccess	scd -> buf		850518	0					
ANR	850606	Identifier	scd		850518	0					
ANR	850607	Identifier	buf		850518	1					
ANR	850608	AdditiveExpression	scd -> last_byte - 2		850518	1		-			
ANR	850609	PtrMemberAccess	scd -> last_byte		850518	0					
ANR	850610	Identifier	scd		850518	0					
ANR	850611	Identifier	last_byte		850518	1					
ANR	850612	PrimaryExpression	2		850518	1					
ANR	850613	ExpressionStatement	scd -> buf [ 1 ] = scd -> buf [ scd -> last_byte - 1 ]	393:2:8515:8555	850518	2	True				
ANR	850614	AssignmentExpression	scd -> buf [ 1 ] = scd -> buf [ scd -> last_byte - 1 ]		850518	0		=			
ANR	850615	ArrayIndexing	scd -> buf [ 1 ]		850518	0					
ANR	850616	PtrMemberAccess	scd -> buf		850518	0					
ANR	850617	Identifier	scd		850518	0					
ANR	850618	Identifier	buf		850518	1					
ANR	850619	PrimaryExpression	1		850518	1					
ANR	850620	ArrayIndexing	scd -> buf [ scd -> last_byte - 1 ]		850518	1					
ANR	850621	PtrMemberAccess	scd -> buf		850518	0					
ANR	850622	Identifier	scd		850518	0					
ANR	850623	Identifier	buf		850518	1					
ANR	850624	AdditiveExpression	scd -> last_byte - 1		850518	1		-			
ANR	850625	PtrMemberAccess	scd -> last_byte		850518	0					
ANR	850626	Identifier	scd		850518	0					
ANR	850627	Identifier	last_byte		850518	1					
ANR	850628	PrimaryExpression	1		850518	1					
ANR	850629	IfStatement	"if ( ( count = GetDataBlock ( fd , & scd -> buf [ 2 ] , ZeroDataBlockP ) ) <= 0 )"		850518	3					
ANR	850630	Condition	"( count = GetDataBlock ( fd , & scd -> buf [ 2 ] , ZeroDataBlockP ) ) <= 0"	395:19:8577:8637	850518	0	True				
ANR	850631	RelationalExpression	"( count = GetDataBlock ( fd , & scd -> buf [ 2 ] , ZeroDataBlockP ) ) <= 0"		850518	0		<=			
ANR	850632	AssignmentExpression	"count = GetDataBlock ( fd , & scd -> buf [ 2 ] , ZeroDataBlockP )"		850518	0		=			
ANR	850633	Identifier	count		850518	0					
ANR	850634	CallExpression	"GetDataBlock ( fd , & scd -> buf [ 2 ] , ZeroDataBlockP )"		850518	1					
ANR	850635	Callee	GetDataBlock		850518	0					
ANR	850636	Identifier	GetDataBlock		850518	0					
ANR	850637	ArgumentList	fd		850518	1					
ANR	850638	Argument	fd		850518	0					
ANR	850639	Identifier	fd		850518	0					
ANR	850640	Argument	& scd -> buf [ 2 ]		850518	1					
ANR	850641	UnaryOperationExpression	& scd -> buf [ 2 ]		850518	0					
ANR	850642	UnaryOperator	&		850518	0					
ANR	850643	ArrayIndexing	scd -> buf [ 2 ]		850518	1					
ANR	850644	PtrMemberAccess	scd -> buf		850518	0					
ANR	850645	Identifier	scd		850518	0					
ANR	850646	Identifier	buf		850518	1					
ANR	850647	PrimaryExpression	2		850518	1					
ANR	850648	Argument	ZeroDataBlockP		850518	2					
ANR	850649	Identifier	ZeroDataBlockP		850518	0					
ANR	850650	PrimaryExpression	0		850518	1					
ANR	850651	ExpressionStatement	scd -> done = TRUE	396:3:8643:8659	850518	1	True				
ANR	850652	AssignmentExpression	scd -> done = TRUE		850518	0		=			
ANR	850653	PtrMemberAccess	scd -> done		850518	0					
ANR	850654	Identifier	scd		850518	0					
ANR	850655	Identifier	done		850518	1					
ANR	850656	Identifier	TRUE		850518	1					
ANR	850657	ExpressionStatement	scd -> last_byte = 2 + count	398:2:8664:8690	850518	4	True				
ANR	850658	AssignmentExpression	scd -> last_byte = 2 + count		850518	0		=			
ANR	850659	PtrMemberAccess	scd -> last_byte		850518	0					
ANR	850660	Identifier	scd		850518	0					
ANR	850661	Identifier	last_byte		850518	1					
ANR	850662	AdditiveExpression	2 + count		850518	1		+			
ANR	850663	PrimaryExpression	2		850518	0					
ANR	850664	Identifier	count		850518	1					
ANR	850665	ExpressionStatement	scd -> curbit = ( scd -> curbit - scd -> lastbit ) + 16	399:2:8694:8741	850518	5	True				
ANR	850666	AssignmentExpression	scd -> curbit = ( scd -> curbit - scd -> lastbit ) + 16		850518	0		=			
ANR	850667	PtrMemberAccess	scd -> curbit		850518	0					
ANR	850668	Identifier	scd		850518	0					
ANR	850669	Identifier	curbit		850518	1					
ANR	850670	AdditiveExpression	( scd -> curbit - scd -> lastbit ) + 16		850518	1		+			
ANR	850671	AdditiveExpression	scd -> curbit - scd -> lastbit		850518	0		-			
ANR	850672	PtrMemberAccess	scd -> curbit		850518	0					
ANR	850673	Identifier	scd		850518	0					
ANR	850674	Identifier	curbit		850518	1					
ANR	850675	PtrMemberAccess	scd -> lastbit		850518	1					
ANR	850676	Identifier	scd		850518	0					
ANR	850677	Identifier	lastbit		850518	1					
ANR	850678	PrimaryExpression	16		850518	1					
ANR	850679	ExpressionStatement	scd -> lastbit = ( 2 + count ) * 8	400:2:8745:8772	850518	6	True				
ANR	850680	AssignmentExpression	scd -> lastbit = ( 2 + count ) * 8		850518	0		=			
ANR	850681	PtrMemberAccess	scd -> lastbit		850518	0					
ANR	850682	Identifier	scd		850518	0					
ANR	850683	Identifier	lastbit		850518	1					
ANR	850684	MultiplicativeExpression	( 2 + count ) * 8		850518	1		*			
ANR	850685	AdditiveExpression	2 + count		850518	0		+			
ANR	850686	PrimaryExpression	2		850518	0					
ANR	850687	Identifier	count		850518	1					
ANR	850688	PrimaryExpression	8		850518	1					
ANR	850689	IfStatement	if ( ( scd -> curbit + code_size - 1 ) >= ( CSD_BUF_SIZE * 8 ) )		850518	4					
ANR	850690	Condition	( scd -> curbit + code_size - 1 ) >= ( CSD_BUF_SIZE * 8 )	403:5:8783:8833	850518	0	True				
ANR	850691	RelationalExpression	( scd -> curbit + code_size - 1 ) >= ( CSD_BUF_SIZE * 8 )		850518	0		>=			
ANR	850692	AdditiveExpression	scd -> curbit + code_size - 1		850518	0		+			
ANR	850693	PtrMemberAccess	scd -> curbit		850518	0					
ANR	850694	Identifier	scd		850518	0					
ANR	850695	Identifier	curbit		850518	1					
ANR	850696	AdditiveExpression	code_size - 1		850518	1		-			
ANR	850697	Identifier	code_size		850518	0					
ANR	850698	PrimaryExpression	1		850518	1					
ANR	850699	MultiplicativeExpression	CSD_BUF_SIZE * 8		850518	1		*			
ANR	850700	Identifier	CSD_BUF_SIZE		850518	0					
ANR	850701	PrimaryExpression	8		850518	1					
ANR	850702	CompoundStatement		31:58:677:677	850518	1					
ANR	850703	ExpressionStatement	ret = - 1	404:2:8840:8848	850518	0	True				
ANR	850704	AssignmentExpression	ret = - 1		850518	0		=			
ANR	850705	Identifier	ret		850518	0					
ANR	850706	UnaryOperationExpression	- 1		850518	1					
ANR	850707	UnaryOperator	-		850518	0					
ANR	850708	PrimaryExpression	1		850518	1					
ANR	850709	ElseStatement	else		850518	0					
ANR	850710	CompoundStatement		33:8:699:699	850518	0					
ANR	850711	ExpressionStatement	ret = 0	406:2:8862:8869	850518	0	True				
ANR	850712	AssignmentExpression	ret = 0		850518	0		=			
ANR	850713	Identifier	ret		850518	0					
ANR	850714	PrimaryExpression	0		850518	1					
ANR	850715	ForStatement	"for ( i = scd -> curbit , j = 0 ; j < code_size ; ++ i , ++ j )"		850518	1					
ANR	850716	ForInit	"i = scd -> curbit , j = 0 ;"	407:7:8878:8900	850518	0	True				
ANR	850717	Expression	"i = scd -> curbit , j = 0"		850518	0					
ANR	850718	AssignmentExpression	i = scd -> curbit		850518	0		=			
ANR	850719	Identifier	i		850518	0					
ANR	850720	PtrMemberAccess	scd -> curbit		850518	1					
ANR	850721	Identifier	scd		850518	0					
ANR	850722	Identifier	curbit		850518	1					
ANR	850723	AssignmentExpression	j = 0		850518	1		=			
ANR	850724	Identifier	j		850518	0					
ANR	850725	PrimaryExpression	0		850518	1					
ANR	850726	Condition	j < code_size	407:31:8902:8914	850518	1	True				
ANR	850727	RelationalExpression	j < code_size		850518	0		<			
ANR	850728	Identifier	j		850518	0					
ANR	850729	Identifier	code_size		850518	1					
ANR	850730	Expression	"++ i , ++ j"	407:46:8917:8924	850518	2	True				
ANR	850731	UnaryExpression	++ i		850518	0					
ANR	850732	IncDec	++		850518	0					
ANR	850733	Identifier	i		850518	1					
ANR	850734	UnaryExpression	++ j		850518	1					
ANR	850735	IncDec	++		850518	0					
ANR	850736	Identifier	j		850518	1					
ANR	850737	CompoundStatement		35:56:768:768	850518	3					
ANR	850738	ExpressionStatement	ret |= ( ( scd -> buf [ i / 8 ] & ( 1 << ( i % 8 ) ) ) != 0 ) << j	408:3:8932:8985	850518	0	True				
ANR	850739	AssignmentExpression	ret |= ( ( scd -> buf [ i / 8 ] & ( 1 << ( i % 8 ) ) ) != 0 ) << j		850518	0		|=			
ANR	850740	Identifier	ret		850518	0					
ANR	850741	ShiftExpression	( ( scd -> buf [ i / 8 ] & ( 1 << ( i % 8 ) ) ) != 0 ) << j		850518	1		<<			
ANR	850742	EqualityExpression	( scd -> buf [ i / 8 ] & ( 1 << ( i % 8 ) ) ) != 0		850518	0		!=			
ANR	850743	BitAndExpression	scd -> buf [ i / 8 ] & ( 1 << ( i % 8 ) )		850518	0		&			
ANR	850744	ArrayIndexing	scd -> buf [ i / 8 ]		850518	0					
ANR	850745	PtrMemberAccess	scd -> buf		850518	0					
ANR	850746	Identifier	scd		850518	0					
ANR	850747	Identifier	buf		850518	1					
ANR	850748	MultiplicativeExpression	i / 8		850518	1		/			
ANR	850749	Identifier	i		850518	0					
ANR	850750	PrimaryExpression	8		850518	1					
ANR	850751	ShiftExpression	1 << ( i % 8 )		850518	1		<<			
ANR	850752	PrimaryExpression	1		850518	0					
ANR	850753	MultiplicativeExpression	i % 8		850518	1		%			
ANR	850754	Identifier	i		850518	0					
ANR	850755	PrimaryExpression	8		850518	1					
ANR	850756	PrimaryExpression	0		850518	1					
ANR	850757	Identifier	j		850518	1					
ANR	850758	ExpressionStatement	scd -> curbit += code_size	412:1:8996:9020	850518	5	True				
ANR	850759	AssignmentExpression	scd -> curbit += code_size		850518	0		+=			
ANR	850760	PtrMemberAccess	scd -> curbit		850518	0					
ANR	850761	Identifier	scd		850518	0					
ANR	850762	Identifier	curbit		850518	1					
ANR	850763	Identifier	code_size		850518	1					
ANR	850764	ReturnStatement	return ret ;	413:1:9023:9033	850518	6	True				
ANR	850765	Identifier	ret		850518	0					
ANR	850766	ReturnType	static int		850518	1					
ANR	850767	Identifier	GetCode_		850518	2					
ANR	850768	ParameterList	"gdIOCtx * fd , CODE_STATIC_DATA * scd , int code_size , int flag , int * ZeroDataBlockP"		850518	3					
ANR	850769	Parameter	gdIOCtx * fd	372:9:8076:8086	850518	0	True				
ANR	850770	ParameterType	gdIOCtx *		850518	0					
ANR	850771	Identifier	fd		850518	1					
ANR	850772	Parameter	CODE_STATIC_DATA * scd	372:22:8089:8109	850518	1	True				
ANR	850773	ParameterType	CODE_STATIC_DATA *		850518	0					
ANR	850774	Identifier	scd		850518	1					
ANR	850775	Parameter	int code_size	372:45:8112:8124	850518	2	True				
ANR	850776	ParameterType	int		850518	0					
ANR	850777	Identifier	code_size		850518	1					
ANR	850778	Parameter	int flag	372:60:8127:8134	850518	3	True				
ANR	850779	ParameterType	int		850518	0					
ANR	850780	Identifier	flag		850518	1					
ANR	850781	Parameter	int * ZeroDataBlockP	372:70:8137:8155	850518	4	True				
ANR	850782	ParameterType	int *		850518	0					
ANR	850783	Identifier	ZeroDataBlockP		850518	1					
ANR	850784	CFGEntryNode	ENTRY		850518		True				
ANR	850785	CFGExitNode	EXIT		850518		True				
ANR	850786	Symbol	ret		850518						
ANR	850787	Symbol	code_size		850518						
ANR	850788	Symbol	flag		850518						
ANR	850789	Symbol	scd -> buf		850518						
ANR	850790	Symbol	scd -> last_byte		850518						
ANR	850791	Symbol	CSD_BUF_SIZE		850518						
ANR	850792	Symbol	count		850518						
ANR	850793	Symbol	* * scd		850518						
ANR	850794	Symbol	i		850518						
ANR	850795	Symbol	TRUE		850518						
ANR	850796	Symbol	j		850518						
ANR	850797	Symbol	scd -> lastbit		850518						
ANR	850798	Symbol	scd -> curbit		850518						
ANR	850799	Symbol	* i		850518						
ANR	850800	Symbol	scd		850518						
ANR	850801	Symbol	* scd -> buf		850518						
ANR	850802	Symbol	* scd -> last_byte		850518						
ANR	850803	Symbol	FALSE		850518						
ANR	850804	Symbol	fd		850518						
ANR	850805	Symbol	* scd		850518						
ANR	850806	Symbol	GetDataBlock		850518						
ANR	850807	Symbol	ZeroDataBlockP		850518						
ANR	850808	Symbol	scd -> done		850518						
ANR	850809	Function	GetCode	416:0:9038:9297							
ANR	850810	FunctionDef	"GetCode (gdIOCtx * fd , CODE_STATIC_DATA * scd , int code_size , int flag , int * ZeroDataBlockP)"		850809	0					
ANR	850811	CompoundStatement		418:0:9139:9297	850809	0					
ANR	850812	IdentifierDeclStatement	int rv ;	419:1:9142:9148	850809	0	True				
ANR	850813	IdentifierDecl	rv		850809	0					
ANR	850814	IdentifierDeclType	int		850809	0					
ANR	850815	Identifier	rv		850809	1					
ANR	850816	ExpressionStatement	"rv = GetCode_ ( fd , scd , code_size , flag , ZeroDataBlockP )"	421:1:9152:9206	850809	1	True				
ANR	850817	AssignmentExpression	"rv = GetCode_ ( fd , scd , code_size , flag , ZeroDataBlockP )"		850809	0		=			
ANR	850818	Identifier	rv		850809	0					
ANR	850819	CallExpression	"GetCode_ ( fd , scd , code_size , flag , ZeroDataBlockP )"		850809	1					
ANR	850820	Callee	GetCode_		850809	0					
ANR	850821	Identifier	GetCode_		850809	0					
ANR	850822	ArgumentList	fd		850809	1					
ANR	850823	Argument	fd		850809	0					
ANR	850824	Identifier	fd		850809	0					
ANR	850825	Argument	scd		850809	1					
ANR	850826	Identifier	scd		850809	0					
ANR	850827	Argument	code_size		850809	2					
ANR	850828	Identifier	code_size		850809	0					
ANR	850829	Argument	flag		850809	3					
ANR	850830	Identifier	flag		850809	0					
ANR	850831	Argument	ZeroDataBlockP		850809	4					
ANR	850832	Identifier	ZeroDataBlockP		850809	0					
ANR	850833	IfStatement	if ( VERBOSE )		850809	2					
ANR	850834	Condition	VERBOSE	422:5:9213:9219	850809	0	True				
ANR	850835	Identifier	VERBOSE		850809	0					
ANR	850836	ExpressionStatement	"printf ( ""[GetCode(,%d,%d) returning %d]\\n"" , code_size , flag , rv )"	422:14:9222:9282	850809	1	True				
ANR	850837	CallExpression	"printf ( ""[GetCode(,%d,%d) returning %d]\\n"" , code_size , flag , rv )"		850809	0					
ANR	850838	Callee	printf		850809	0					
ANR	850839	Identifier	printf		850809	0					
ANR	850840	ArgumentList	"""[GetCode(,%d,%d) returning %d]\\n"""		850809	1					
ANR	850841	Argument	"""[GetCode(,%d,%d) returning %d]\\n"""		850809	0					
ANR	850842	PrimaryExpression	"""[GetCode(,%d,%d) returning %d]\\n"""		850809	0					
ANR	850843	Argument	code_size		850809	1					
ANR	850844	Identifier	code_size		850809	0					
ANR	850845	Argument	flag		850809	2					
ANR	850846	Identifier	flag		850809	0					
ANR	850847	Argument	rv		850809	3					
ANR	850848	Identifier	rv		850809	0					
ANR	850849	ReturnStatement	return ( rv ) ;	423:1:9285:9295	850809	3	True				
ANR	850850	Identifier	rv		850809	0					
ANR	850851	ReturnType	static int		850809	1					
ANR	850852	Identifier	GetCode		850809	2					
ANR	850853	ParameterList	"gdIOCtx * fd , CODE_STATIC_DATA * scd , int code_size , int flag , int * ZeroDataBlockP"		850809	3					
ANR	850854	Parameter	gdIOCtx * fd	417:8:9057:9067	850809	0	True				
ANR	850855	ParameterType	gdIOCtx *		850809	0					
ANR	850856	Identifier	fd		850809	1					
ANR	850857	Parameter	CODE_STATIC_DATA * scd	417:21:9070:9090	850809	1	True				
ANR	850858	ParameterType	CODE_STATIC_DATA *		850809	0					
ANR	850859	Identifier	scd		850809	1					
ANR	850860	Parameter	int code_size	417:44:9093:9105	850809	2	True				
ANR	850861	ParameterType	int		850809	0					
ANR	850862	Identifier	code_size		850809	1					
ANR	850863	Parameter	int flag	417:59:9108:9115	850809	3	True				
ANR	850864	ParameterType	int		850809	0					
ANR	850865	Identifier	flag		850809	1					
ANR	850866	Parameter	int * ZeroDataBlockP	417:69:9118:9136	850809	4	True				
ANR	850867	ParameterType	int *		850809	0					
ANR	850868	Identifier	ZeroDataBlockP		850809	1					
ANR	850869	CFGEntryNode	ENTRY		850809		True				
ANR	850870	CFGExitNode	EXIT		850809		True				
ANR	850871	Symbol	code_size		850809						
ANR	850872	Symbol	flag		850809						
ANR	850873	Symbol	GetCode_		850809						
ANR	850874	Symbol	rv		850809						
ANR	850875	Symbol	scd		850809						
ANR	850876	Symbol	VERBOSE		850809						
ANR	850877	Symbol	fd		850809						
ANR	850878	Symbol	ZeroDataBlockP		850809						
ANR	850879	Function	LWZReadByte_	427:0:9310:11958							
ANR	850880	FunctionDef	"LWZReadByte_ (gdIOCtx * fd , LZW_STATIC_DATA * sd , char flag , int input_code_size , int * ZeroDataBlockP)"		850879	0					
ANR	850881	CompoundStatement		429:0:9421:11958	850879	0					
ANR	850882	IdentifierDeclStatement	"int code , incode , i ;"	430:1:9424:9443	850879	0	True				
ANR	850883	IdentifierDecl	code		850879	0					
ANR	850884	IdentifierDeclType	int		850879	0					
ANR	850885	Identifier	code		850879	1					
ANR	850886	IdentifierDecl	incode		850879	1					
ANR	850887	IdentifierDeclType	int		850879	0					
ANR	850888	Identifier	incode		850879	1					
ANR	850889	IdentifierDecl	i		850879	2					
ANR	850890	IdentifierDeclType	int		850879	0					
ANR	850891	Identifier	i		850879	1					
ANR	850892	IfStatement	if ( flag )		850879	1					
ANR	850893	Condition	flag	432:5:9451:9454	850879	0	True				
ANR	850894	Identifier	flag		850879	0					
ANR	850895	CompoundStatement		4:11:35:35	850879	1					
ANR	850896	ExpressionStatement	sd -> set_code_size = input_code_size	433:2:9461:9496	850879	0	True				
ANR	850897	AssignmentExpression	sd -> set_code_size = input_code_size		850879	0		=			
ANR	850898	PtrMemberAccess	sd -> set_code_size		850879	0					
ANR	850899	Identifier	sd		850879	0					
ANR	850900	Identifier	set_code_size		850879	1					
ANR	850901	Identifier	input_code_size		850879	1					
ANR	850902	ExpressionStatement	sd -> code_size = sd -> set_code_size + 1	434:2:9500:9535	850879	1	True				
ANR	850903	AssignmentExpression	sd -> code_size = sd -> set_code_size + 1		850879	0		=			
ANR	850904	PtrMemberAccess	sd -> code_size		850879	0					
ANR	850905	Identifier	sd		850879	0					
ANR	850906	Identifier	code_size		850879	1					
ANR	850907	AdditiveExpression	sd -> set_code_size + 1		850879	1		+			
ANR	850908	PtrMemberAccess	sd -> set_code_size		850879	0					
ANR	850909	Identifier	sd		850879	0					
ANR	850910	Identifier	set_code_size		850879	1					
ANR	850911	PrimaryExpression	1		850879	1					
ANR	850912	ExpressionStatement	sd -> clear_code = 1 << sd -> set_code_size	435:2:9539:9579	850879	2	True				
ANR	850913	AssignmentExpression	sd -> clear_code = 1 << sd -> set_code_size		850879	0		=			
ANR	850914	PtrMemberAccess	sd -> clear_code		850879	0					
ANR	850915	Identifier	sd		850879	0					
ANR	850916	Identifier	clear_code		850879	1					
ANR	850917	ShiftExpression	1 << sd -> set_code_size		850879	1		<<			
ANR	850918	PrimaryExpression	1		850879	0					
ANR	850919	PtrMemberAccess	sd -> set_code_size		850879	1					
ANR	850920	Identifier	sd		850879	0					
ANR	850921	Identifier	set_code_size		850879	1					
ANR	850922	ExpressionStatement	sd -> end_code = sd -> clear_code + 1	436:2:9583:9616	850879	3	True				
ANR	850923	AssignmentExpression	sd -> end_code = sd -> clear_code + 1		850879	0		=			
ANR	850924	PtrMemberAccess	sd -> end_code		850879	0					
ANR	850925	Identifier	sd		850879	0					
ANR	850926	Identifier	end_code		850879	1					
ANR	850927	AdditiveExpression	sd -> clear_code + 1		850879	1		+			
ANR	850928	PtrMemberAccess	sd -> clear_code		850879	0					
ANR	850929	Identifier	sd		850879	0					
ANR	850930	Identifier	clear_code		850879	1					
ANR	850931	PrimaryExpression	1		850879	1					
ANR	850932	ExpressionStatement	sd -> max_code_size = 2 * sd -> clear_code	437:2:9620:9656	850879	4	True				
ANR	850933	AssignmentExpression	sd -> max_code_size = 2 * sd -> clear_code		850879	0		=			
ANR	850934	PtrMemberAccess	sd -> max_code_size		850879	0					
ANR	850935	Identifier	sd		850879	0					
ANR	850936	Identifier	max_code_size		850879	1					
ANR	850937	MultiplicativeExpression	2 * sd -> clear_code		850879	1		*			
ANR	850938	PrimaryExpression	2		850879	0					
ANR	850939	PtrMemberAccess	sd -> clear_code		850879	1					
ANR	850940	Identifier	sd		850879	0					
ANR	850941	Identifier	clear_code		850879	1					
ANR	850942	ExpressionStatement	sd -> max_code = sd -> clear_code + 2	438:2:9660:9691	850879	5	True				
ANR	850943	AssignmentExpression	sd -> max_code = sd -> clear_code + 2		850879	0		=			
ANR	850944	PtrMemberAccess	sd -> max_code		850879	0					
ANR	850945	Identifier	sd		850879	0					
ANR	850946	Identifier	max_code		850879	1					
ANR	850947	AdditiveExpression	sd -> clear_code + 2		850879	1		+			
ANR	850948	PtrMemberAccess	sd -> clear_code		850879	0					
ANR	850949	Identifier	sd		850879	0					
ANR	850950	Identifier	clear_code		850879	1					
ANR	850951	PrimaryExpression	2		850879	1					
ANR	850952	ExpressionStatement	"GetCode ( fd , & sd -> scd , 0 , TRUE , ZeroDataBlockP )"	440:2:9696:9742	850879	6	True				
ANR	850953	CallExpression	"GetCode ( fd , & sd -> scd , 0 , TRUE , ZeroDataBlockP )"		850879	0					
ANR	850954	Callee	GetCode		850879	0					
ANR	850955	Identifier	GetCode		850879	0					
ANR	850956	ArgumentList	fd		850879	1					
ANR	850957	Argument	fd		850879	0					
ANR	850958	Identifier	fd		850879	0					
ANR	850959	Argument	& sd -> scd		850879	1					
ANR	850960	UnaryOperationExpression	& sd -> scd		850879	0					
ANR	850961	UnaryOperator	&		850879	0					
ANR	850962	PtrMemberAccess	sd -> scd		850879	1					
ANR	850963	Identifier	sd		850879	0					
ANR	850964	Identifier	scd		850879	1					
ANR	850965	Argument	0		850879	2					
ANR	850966	PrimaryExpression	0		850879	0					
ANR	850967	Argument	TRUE		850879	3					
ANR	850968	Identifier	TRUE		850879	0					
ANR	850969	Argument	ZeroDataBlockP		850879	4					
ANR	850970	Identifier	ZeroDataBlockP		850879	0					
ANR	850971	ExpressionStatement	sd -> fresh = TRUE	442:2:9747:9763	850879	7	True				
ANR	850972	AssignmentExpression	sd -> fresh = TRUE		850879	0		=			
ANR	850973	PtrMemberAccess	sd -> fresh		850879	0					
ANR	850974	Identifier	sd		850879	0					
ANR	850975	Identifier	fresh		850879	1					
ANR	850976	Identifier	TRUE		850879	1					
ANR	850977	ForStatement	for ( i = 0 ; i < sd -> clear_code ; ++ i )		850879	8					
ANR	850978	ForInit	i = 0 ;	444:7:9773:9778	850879	0	True				
ANR	850979	AssignmentExpression	i = 0		850879	0		=			
ANR	850980	Identifier	i		850879	0					
ANR	850981	PrimaryExpression	0		850879	1					
ANR	850982	Condition	i < sd -> clear_code	444:14:9780:9797	850879	1	True				
ANR	850983	RelationalExpression	i < sd -> clear_code		850879	0		<			
ANR	850984	Identifier	i		850879	0					
ANR	850985	PtrMemberAccess	sd -> clear_code		850879	1					
ANR	850986	Identifier	sd		850879	0					
ANR	850987	Identifier	clear_code		850879	1					
ANR	850988	UnaryExpression	++ i	444:34:9800:9802	850879	2	True				
ANR	850989	IncDec	++		850879	0					
ANR	850990	Identifier	i		850879	1					
ANR	850991	CompoundStatement		16:39:383:383	850879	3					
ANR	850992	ExpressionStatement	sd -> table [ 0 ] [ i ] = 0	445:3:9810:9829	850879	0	True				
ANR	850993	AssignmentExpression	sd -> table [ 0 ] [ i ] = 0		850879	0		=			
ANR	850994	ArrayIndexing	sd -> table [ 0 ] [ i ]		850879	0					
ANR	850995	ArrayIndexing	sd -> table [ 0 ]		850879	0					
ANR	850996	PtrMemberAccess	sd -> table		850879	0					
ANR	850997	Identifier	sd		850879	0					
ANR	850998	Identifier	table		850879	1					
ANR	850999	PrimaryExpression	0		850879	1					
ANR	851000	Identifier	i		850879	1					
ANR	851001	PrimaryExpression	0		850879	1					
ANR	851002	ExpressionStatement	sd -> table [ 1 ] [ i ] = i	446:3:9834:9853	850879	1	True				
ANR	851003	AssignmentExpression	sd -> table [ 1 ] [ i ] = i		850879	0		=			
ANR	851004	ArrayIndexing	sd -> table [ 1 ] [ i ]		850879	0					
ANR	851005	ArrayIndexing	sd -> table [ 1 ]		850879	0					
ANR	851006	PtrMemberAccess	sd -> table		850879	0					
ANR	851007	Identifier	sd		850879	0					
ANR	851008	Identifier	table		850879	1					
ANR	851009	PrimaryExpression	1		850879	1					
ANR	851010	Identifier	i		850879	1					
ANR	851011	Identifier	i		850879	1					
ANR	851012	ForStatement	for ( ; i < ( 1 << MAX_LWZ_BITS ) ; ++ i )		850879	9					
ANR	851013	Condition	i < ( 1 << MAX_LWZ_BITS )	448:9:9868:9888	850879	0	True				
ANR	851014	RelationalExpression	i < ( 1 << MAX_LWZ_BITS )		850879	0		<			
ANR	851015	Identifier	i		850879	0					
ANR	851016	ShiftExpression	1 << MAX_LWZ_BITS		850879	1		<<			
ANR	851017	PrimaryExpression	1		850879	0					
ANR	851018	Identifier	MAX_LWZ_BITS		850879	1					
ANR	851019	UnaryExpression	++ i	448:32:9891:9893	850879	1	True				
ANR	851020	IncDec	++		850879	0					
ANR	851021	Identifier	i		850879	1					
ANR	851022	ExpressionStatement	sd -> table [ 0 ] [ i ] = sd -> table [ 1 ] [ 0 ] = 0	449:3:9899:9936	850879	2	True				
ANR	851023	AssignmentExpression	sd -> table [ 0 ] [ i ] = sd -> table [ 1 ] [ 0 ] = 0		850879	0		=			
ANR	851024	ArrayIndexing	sd -> table [ 0 ] [ i ]		850879	0					
ANR	851025	ArrayIndexing	sd -> table [ 0 ]		850879	0					
ANR	851026	PtrMemberAccess	sd -> table		850879	0					
ANR	851027	Identifier	sd		850879	0					
ANR	851028	Identifier	table		850879	1					
ANR	851029	PrimaryExpression	0		850879	1					
ANR	851030	Identifier	i		850879	1					
ANR	851031	AssignmentExpression	sd -> table [ 1 ] [ 0 ] = 0		850879	1		=			
ANR	851032	ArrayIndexing	sd -> table [ 1 ] [ 0 ]		850879	0					
ANR	851033	ArrayIndexing	sd -> table [ 1 ]		850879	0					
ANR	851034	PtrMemberAccess	sd -> table		850879	0					
ANR	851035	Identifier	sd		850879	0					
ANR	851036	Identifier	table		850879	1					
ANR	851037	PrimaryExpression	1		850879	1					
ANR	851038	PrimaryExpression	0		850879	1					
ANR	851039	PrimaryExpression	0		850879	1					
ANR	851040	ExpressionStatement	sd -> sp = sd -> stack	451:2:9941:9959	850879	10	True				
ANR	851041	AssignmentExpression	sd -> sp = sd -> stack		850879	0		=			
ANR	851042	PtrMemberAccess	sd -> sp		850879	0					
ANR	851043	Identifier	sd		850879	0					
ANR	851044	Identifier	sp		850879	1					
ANR	851045	PtrMemberAccess	sd -> stack		850879	1					
ANR	851046	Identifier	sd		850879	0					
ANR	851047	Identifier	stack		850879	1					
ANR	851048	ReturnStatement	return 0 ;	453:2:9964:9972	850879	11	True				
ANR	851049	PrimaryExpression	0		850879	0					
ANR	851050	ElseStatement	else		850879	0					
ANR	851051	IfStatement	if ( sd -> fresh )		850879	0					
ANR	851052	Condition	sd -> fresh	454:12:9986:9994	850879	0	True				
ANR	851053	PtrMemberAccess	sd -> fresh		850879	0					
ANR	851054	Identifier	sd		850879	0					
ANR	851055	Identifier	fresh		850879	1					
ANR	851056	CompoundStatement		26:23:575:575	850879	1					
ANR	851057	ExpressionStatement	sd -> fresh = FALSE	455:2:10001:10018	850879	0	True				
ANR	851058	AssignmentExpression	sd -> fresh = FALSE		850879	0		=			
ANR	851059	PtrMemberAccess	sd -> fresh		850879	0					
ANR	851060	Identifier	sd		850879	0					
ANR	851061	Identifier	fresh		850879	1					
ANR	851062	Identifier	FALSE		850879	1					
ANR	851063	DoStatement	do		850879	1					
ANR	851064	CompoundStatement		28:5:603:603	850879	0					
ANR	851065	ExpressionStatement	"sd -> firstcode = sd -> oldcode = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"	457:3:10030:10122	850879	0	True				
ANR	851066	AssignmentExpression	"sd -> firstcode = sd -> oldcode = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	0		=			
ANR	851067	PtrMemberAccess	sd -> firstcode		850879	0					
ANR	851068	Identifier	sd		850879	0					
ANR	851069	Identifier	firstcode		850879	1					
ANR	851070	AssignmentExpression	"sd -> oldcode = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	1		=			
ANR	851071	PtrMemberAccess	sd -> oldcode		850879	0					
ANR	851072	Identifier	sd		850879	0					
ANR	851073	Identifier	oldcode		850879	1					
ANR	851074	CallExpression	"GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	1					
ANR	851075	Callee	GetCode		850879	0					
ANR	851076	Identifier	GetCode		850879	0					
ANR	851077	ArgumentList	fd		850879	1					
ANR	851078	Argument	fd		850879	0					
ANR	851079	Identifier	fd		850879	0					
ANR	851080	Argument	& sd -> scd		850879	1					
ANR	851081	UnaryOperationExpression	& sd -> scd		850879	0					
ANR	851082	UnaryOperator	&		850879	0					
ANR	851083	PtrMemberAccess	sd -> scd		850879	1					
ANR	851084	Identifier	sd		850879	0					
ANR	851085	Identifier	scd		850879	1					
ANR	851086	Argument	sd -> code_size		850879	2					
ANR	851087	PtrMemberAccess	sd -> code_size		850879	0					
ANR	851088	Identifier	sd		850879	0					
ANR	851089	Identifier	code_size		850879	1					
ANR	851090	Argument	FALSE		850879	3					
ANR	851091	Identifier	FALSE		850879	0					
ANR	851092	Argument	ZeroDataBlockP		850879	4					
ANR	851093	Identifier	ZeroDataBlockP		850879	0					
ANR	851094	Condition	sd -> firstcode == sd -> clear_code	459:11:10135:10165	850879	1	True				
ANR	851095	EqualityExpression	sd -> firstcode == sd -> clear_code		850879	0		==			
ANR	851096	PtrMemberAccess	sd -> firstcode		850879	0					
ANR	851097	Identifier	sd		850879	0					
ANR	851098	Identifier	firstcode		850879	1					
ANR	851099	PtrMemberAccess	sd -> clear_code		850879	1					
ANR	851100	Identifier	sd		850879	0					
ANR	851101	Identifier	clear_code		850879	1					
ANR	851102	ReturnStatement	return sd -> firstcode ;	460:2:10171:10191	850879	2	True				
ANR	851103	PtrMemberAccess	sd -> firstcode		850879	0					
ANR	851104	Identifier	sd		850879	0					
ANR	851105	Identifier	firstcode		850879	1					
ANR	851106	IfStatement	if ( sd -> sp > sd -> stack )		850879	2					
ANR	851107	Condition	sd -> sp > sd -> stack	463:5:10202:10219	850879	0	True				
ANR	851108	RelationalExpression	sd -> sp > sd -> stack		850879	0		>			
ANR	851109	PtrMemberAccess	sd -> sp		850879	0					
ANR	851110	Identifier	sd		850879	0					
ANR	851111	Identifier	sp		850879	1					
ANR	851112	PtrMemberAccess	sd -> stack		850879	1					
ANR	851113	Identifier	sd		850879	0					
ANR	851114	Identifier	stack		850879	1					
ANR	851115	ReturnStatement	return * -- sd -> sp ;	464:2:10224:10240	850879	1	True				
ANR	851116	UnaryOperationExpression	* -- sd -> sp		850879	0					
ANR	851117	UnaryOperator	*		850879	0					
ANR	851118	UnaryExpression	-- sd -> sp		850879	1					
ANR	851119	IncDec	--		850879	0					
ANR	851120	PtrMemberAccess	sd -> sp		850879	1					
ANR	851121	Identifier	sd		850879	0					
ANR	851122	Identifier	sp		850879	1					
ANR	851123	WhileStatement	"while ( ( code = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP ) ) >= 0 )"		850879	3					
ANR	851124	Condition	"( code = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP ) ) >= 0"	466:9:10252:10324	850879	0	True				
ANR	851125	RelationalExpression	"( code = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP ) ) >= 0"		850879	0		>=			
ANR	851126	AssignmentExpression	"code = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	0		=			
ANR	851127	Identifier	code		850879	0					
ANR	851128	CallExpression	"GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	1					
ANR	851129	Callee	GetCode		850879	0					
ANR	851130	Identifier	GetCode		850879	0					
ANR	851131	ArgumentList	fd		850879	1					
ANR	851132	Argument	fd		850879	0					
ANR	851133	Identifier	fd		850879	0					
ANR	851134	Argument	& sd -> scd		850879	1					
ANR	851135	UnaryOperationExpression	& sd -> scd		850879	0					
ANR	851136	UnaryOperator	&		850879	0					
ANR	851137	PtrMemberAccess	sd -> scd		850879	1					
ANR	851138	Identifier	sd		850879	0					
ANR	851139	Identifier	scd		850879	1					
ANR	851140	Argument	sd -> code_size		850879	2					
ANR	851141	PtrMemberAccess	sd -> code_size		850879	0					
ANR	851142	Identifier	sd		850879	0					
ANR	851143	Identifier	code_size		850879	1					
ANR	851144	Argument	FALSE		850879	3					
ANR	851145	Identifier	FALSE		850879	0					
ANR	851146	Argument	ZeroDataBlockP		850879	4					
ANR	851147	Identifier	ZeroDataBlockP		850879	0					
ANR	851148	PrimaryExpression	0		850879	1					
ANR	851149	CompoundStatement		38:84:905:905	850879	1					
ANR	851150	IfStatement	if ( code == sd -> clear_code )		850879	0					
ANR	851151	Condition	code == sd -> clear_code	467:6:10335:10356	850879	0	True				
ANR	851152	EqualityExpression	code == sd -> clear_code		850879	0		==			
ANR	851153	Identifier	code		850879	0					
ANR	851154	PtrMemberAccess	sd -> clear_code		850879	1					
ANR	851155	Identifier	sd		850879	0					
ANR	851156	Identifier	clear_code		850879	1					
ANR	851157	CompoundStatement		39:30:937:937	850879	1					
ANR	851158	ForStatement	for ( i = 0 ; i < sd -> clear_code ; ++ i )		850879	0					
ANR	851159	ForInit	i = 0 ;	468:8:10369:10374	850879	0	True				
ANR	851160	AssignmentExpression	i = 0		850879	0		=			
ANR	851161	Identifier	i		850879	0					
ANR	851162	PrimaryExpression	0		850879	1					
ANR	851163	Condition	i < sd -> clear_code	468:15:10376:10393	850879	1	True				
ANR	851164	RelationalExpression	i < sd -> clear_code		850879	0		<			
ANR	851165	Identifier	i		850879	0					
ANR	851166	PtrMemberAccess	sd -> clear_code		850879	1					
ANR	851167	Identifier	sd		850879	0					
ANR	851168	Identifier	clear_code		850879	1					
ANR	851169	UnaryExpression	++ i	468:35:10396:10398	850879	2	True				
ANR	851170	IncDec	++		850879	0					
ANR	851171	Identifier	i		850879	1					
ANR	851172	CompoundStatement		40:40:979:979	850879	3					
ANR	851173	ExpressionStatement	sd -> table [ 0 ] [ i ] = 0	469:4:10407:10426	850879	0	True				
ANR	851174	AssignmentExpression	sd -> table [ 0 ] [ i ] = 0		850879	0		=			
ANR	851175	ArrayIndexing	sd -> table [ 0 ] [ i ]		850879	0					
ANR	851176	ArrayIndexing	sd -> table [ 0 ]		850879	0					
ANR	851177	PtrMemberAccess	sd -> table		850879	0					
ANR	851178	Identifier	sd		850879	0					
ANR	851179	Identifier	table		850879	1					
ANR	851180	PrimaryExpression	0		850879	1					
ANR	851181	Identifier	i		850879	1					
ANR	851182	PrimaryExpression	0		850879	1					
ANR	851183	ExpressionStatement	sd -> table [ 1 ] [ i ] = i	470:4:10432:10451	850879	1	True				
ANR	851184	AssignmentExpression	sd -> table [ 1 ] [ i ] = i		850879	0		=			
ANR	851185	ArrayIndexing	sd -> table [ 1 ] [ i ]		850879	0					
ANR	851186	ArrayIndexing	sd -> table [ 1 ]		850879	0					
ANR	851187	PtrMemberAccess	sd -> table		850879	0					
ANR	851188	Identifier	sd		850879	0					
ANR	851189	Identifier	table		850879	1					
ANR	851190	PrimaryExpression	1		850879	1					
ANR	851191	Identifier	i		850879	1					
ANR	851192	Identifier	i		850879	1					
ANR	851193	ForStatement	for ( ; i < ( 1 << MAX_LWZ_BITS ) ; ++ i )		850879	1					
ANR	851194	Condition	i < ( 1 << MAX_LWZ_BITS )	472:10:10468:10488	850879	0	True				
ANR	851195	RelationalExpression	i < ( 1 << MAX_LWZ_BITS )		850879	0		<			
ANR	851196	Identifier	i		850879	0					
ANR	851197	ShiftExpression	1 << MAX_LWZ_BITS		850879	1		<<			
ANR	851198	PrimaryExpression	1		850879	0					
ANR	851199	Identifier	MAX_LWZ_BITS		850879	1					
ANR	851200	UnaryExpression	++ i	472:33:10491:10493	850879	1	True				
ANR	851201	IncDec	++		850879	0					
ANR	851202	Identifier	i		850879	1					
ANR	851203	ExpressionStatement	sd -> table [ 0 ] [ i ] = sd -> table [ 1 ] [ i ] = 0	473:4:10500:10537	850879	2	True				
ANR	851204	AssignmentExpression	sd -> table [ 0 ] [ i ] = sd -> table [ 1 ] [ i ] = 0		850879	0		=			
ANR	851205	ArrayIndexing	sd -> table [ 0 ] [ i ]		850879	0					
ANR	851206	ArrayIndexing	sd -> table [ 0 ]		850879	0					
ANR	851207	PtrMemberAccess	sd -> table		850879	0					
ANR	851208	Identifier	sd		850879	0					
ANR	851209	Identifier	table		850879	1					
ANR	851210	PrimaryExpression	0		850879	1					
ANR	851211	Identifier	i		850879	1					
ANR	851212	AssignmentExpression	sd -> table [ 1 ] [ i ] = 0		850879	1		=			
ANR	851213	ArrayIndexing	sd -> table [ 1 ] [ i ]		850879	0					
ANR	851214	ArrayIndexing	sd -> table [ 1 ]		850879	0					
ANR	851215	PtrMemberAccess	sd -> table		850879	0					
ANR	851216	Identifier	sd		850879	0					
ANR	851217	Identifier	table		850879	1					
ANR	851218	PrimaryExpression	1		850879	1					
ANR	851219	Identifier	i		850879	1					
ANR	851220	PrimaryExpression	0		850879	1					
ANR	851221	ExpressionStatement	sd -> code_size = sd -> set_code_size + 1	474:3:10542:10577	850879	2	True				
ANR	851222	AssignmentExpression	sd -> code_size = sd -> set_code_size + 1		850879	0		=			
ANR	851223	PtrMemberAccess	sd -> code_size		850879	0					
ANR	851224	Identifier	sd		850879	0					
ANR	851225	Identifier	code_size		850879	1					
ANR	851226	AdditiveExpression	sd -> set_code_size + 1		850879	1		+			
ANR	851227	PtrMemberAccess	sd -> set_code_size		850879	0					
ANR	851228	Identifier	sd		850879	0					
ANR	851229	Identifier	set_code_size		850879	1					
ANR	851230	PrimaryExpression	1		850879	1					
ANR	851231	ExpressionStatement	sd -> max_code_size = 2 * sd -> clear_code	475:3:10582:10618	850879	3	True				
ANR	851232	AssignmentExpression	sd -> max_code_size = 2 * sd -> clear_code		850879	0		=			
ANR	851233	PtrMemberAccess	sd -> max_code_size		850879	0					
ANR	851234	Identifier	sd		850879	0					
ANR	851235	Identifier	max_code_size		850879	1					
ANR	851236	MultiplicativeExpression	2 * sd -> clear_code		850879	1		*			
ANR	851237	PrimaryExpression	2		850879	0					
ANR	851238	PtrMemberAccess	sd -> clear_code		850879	1					
ANR	851239	Identifier	sd		850879	0					
ANR	851240	Identifier	clear_code		850879	1					
ANR	851241	ExpressionStatement	sd -> max_code = sd -> clear_code + 2	476:3:10623:10654	850879	4	True				
ANR	851242	AssignmentExpression	sd -> max_code = sd -> clear_code + 2		850879	0		=			
ANR	851243	PtrMemberAccess	sd -> max_code		850879	0					
ANR	851244	Identifier	sd		850879	0					
ANR	851245	Identifier	max_code		850879	1					
ANR	851246	AdditiveExpression	sd -> clear_code + 2		850879	1		+			
ANR	851247	PtrMemberAccess	sd -> clear_code		850879	0					
ANR	851248	Identifier	sd		850879	0					
ANR	851249	Identifier	clear_code		850879	1					
ANR	851250	PrimaryExpression	2		850879	1					
ANR	851251	ExpressionStatement	sd -> sp = sd -> stack	477:3:10659:10677	850879	5	True				
ANR	851252	AssignmentExpression	sd -> sp = sd -> stack		850879	0		=			
ANR	851253	PtrMemberAccess	sd -> sp		850879	0					
ANR	851254	Identifier	sd		850879	0					
ANR	851255	Identifier	sp		850879	1					
ANR	851256	PtrMemberAccess	sd -> stack		850879	1					
ANR	851257	Identifier	sd		850879	0					
ANR	851258	Identifier	stack		850879	1					
ANR	851259	ExpressionStatement	"sd -> firstcode = sd -> oldcode = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"	478:3:10682:10779	850879	6	True				
ANR	851260	AssignmentExpression	"sd -> firstcode = sd -> oldcode = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	0		=			
ANR	851261	PtrMemberAccess	sd -> firstcode		850879	0					
ANR	851262	Identifier	sd		850879	0					
ANR	851263	Identifier	firstcode		850879	1					
ANR	851264	AssignmentExpression	"sd -> oldcode = GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	1		=			
ANR	851265	PtrMemberAccess	sd -> oldcode		850879	0					
ANR	851266	Identifier	sd		850879	0					
ANR	851267	Identifier	oldcode		850879	1					
ANR	851268	CallExpression	"GetCode ( fd , & sd -> scd , sd -> code_size , FALSE , ZeroDataBlockP )"		850879	1					
ANR	851269	Callee	GetCode		850879	0					
ANR	851270	Identifier	GetCode		850879	0					
ANR	851271	ArgumentList	fd		850879	1					
ANR	851272	Argument	fd		850879	0					
ANR	851273	Identifier	fd		850879	0					
ANR	851274	Argument	& sd -> scd		850879	1					
ANR	851275	UnaryOperationExpression	& sd -> scd		850879	0					
ANR	851276	UnaryOperator	&		850879	0					
ANR	851277	PtrMemberAccess	sd -> scd		850879	1					
ANR	851278	Identifier	sd		850879	0					
ANR	851279	Identifier	scd		850879	1					
ANR	851280	Argument	sd -> code_size		850879	2					
ANR	851281	PtrMemberAccess	sd -> code_size		850879	0					
ANR	851282	Identifier	sd		850879	0					
ANR	851283	Identifier	code_size		850879	1					
ANR	851284	Argument	FALSE		850879	3					
ANR	851285	Identifier	FALSE		850879	0					
ANR	851286	Argument	ZeroDataBlockP		850879	4					
ANR	851287	Identifier	ZeroDataBlockP		850879	0					
ANR	851288	ReturnStatement	return sd -> firstcode ;	480:3:10784:10804	850879	7	True				
ANR	851289	PtrMemberAccess	sd -> firstcode		850879	0					
ANR	851290	Identifier	sd		850879	0					
ANR	851291	Identifier	firstcode		850879	1					
ANR	851292	ElseStatement	else		850879	0					
ANR	851293	IfStatement	if ( code == sd -> end_code )		850879	0					
ANR	851294	Condition	code == sd -> end_code	481:13:10819:10838	850879	0	True				
ANR	851295	EqualityExpression	code == sd -> end_code		850879	0		==			
ANR	851296	Identifier	code		850879	0					
ANR	851297	PtrMemberAccess	sd -> end_code		850879	1					
ANR	851298	Identifier	sd		850879	0					
ANR	851299	Identifier	end_code		850879	1					
ANR	851300	CompoundStatement		55:3:1450:1474	850879	1					
ANR	851301	IdentifierDeclStatement	int count ;	482:3:10846:10867	850879	0	True				
ANR	851302	IdentifierDecl	count		850879	0					
ANR	851303	IdentifierDeclType	int		850879	0					
ANR	851304	Identifier	count		850879	1					
ANR	851305	IdentifierDeclStatement	unsigned char buf [ 260 ] ;	483:3:10872:10896	850879	1	True				
ANR	851306	IdentifierDecl	buf [ 260 ]		850879	0					
ANR	851307	IdentifierDeclType	unsigned char [ 260 ]		850879	0					
ANR	851308	Identifier	buf		850879	1					
ANR	851309	PrimaryExpression	260		850879	2					
ANR	851310	IfStatement	if ( * ZeroDataBlockP )		850879	2					
ANR	851311	Condition	* ZeroDataBlockP	485:7:10906:10920	850879	0	True				
ANR	851312	UnaryOperationExpression	* ZeroDataBlockP		850879	0					
ANR	851313	UnaryOperator	*		850879	0					
ANR	851314	Identifier	ZeroDataBlockP		850879	1					
ANR	851315	ReturnStatement	return - 2 ;	486:4:10927:10936	850879	1	True				
ANR	851316	UnaryOperationExpression	- 2		850879	0					
ANR	851317	UnaryOperator	-		850879	0					
ANR	851318	PrimaryExpression	2		850879	1					
ANR	851319	WhileStatement	"while ( ( count = GetDataBlock ( fd , buf , ZeroDataBlockP ) ) > 0 )"		850879	3					
ANR	851320	Condition	"( count = GetDataBlock ( fd , buf , ZeroDataBlockP ) ) > 0"	488:10:10949:10999	850879	0	True				
ANR	851321	RelationalExpression	"( count = GetDataBlock ( fd , buf , ZeroDataBlockP ) ) > 0"		850879	0		>			
ANR	851322	AssignmentExpression	"count = GetDataBlock ( fd , buf , ZeroDataBlockP )"		850879	0		=			
ANR	851323	Identifier	count		850879	0					
ANR	851324	CallExpression	"GetDataBlock ( fd , buf , ZeroDataBlockP )"		850879	1					
ANR	851325	Callee	GetDataBlock		850879	0					
ANR	851326	Identifier	GetDataBlock		850879	0					
ANR	851327	ArgumentList	fd		850879	1					
ANR	851328	Argument	fd		850879	0					
ANR	851329	Identifier	fd		850879	0					
ANR	851330	Argument	buf		850879	1					
ANR	851331	Identifier	buf		850879	0					
ANR	851332	Argument	ZeroDataBlockP		850879	2					
ANR	851333	Identifier	ZeroDataBlockP		850879	0					
ANR	851334	PrimaryExpression	0		850879	1					
ANR	851335	ExpressionStatement		489:4:11006:11006	850879	1	True				
ANR	851336	IfStatement	if ( count != 0 )		850879	4					
ANR	851337	Condition	count != 0	491:7:11016:11025	850879	0	True				
ANR	851338	EqualityExpression	count != 0		850879	0		!=			
ANR	851339	Identifier	count		850879	0					
ANR	851340	PrimaryExpression	0		850879	1					
ANR	851341	ReturnStatement	return - 2 ;	492:4:11032:11041	850879	1	True				
ANR	851342	UnaryOperationExpression	- 2		850879	0					
ANR	851343	UnaryOperator	-		850879	0					
ANR	851344	PrimaryExpression	2		850879	1					
ANR	851345	ExpressionStatement	incode = code	495:2:11050:11063	850879	1	True				
ANR	851346	AssignmentExpression	incode = code		850879	0		=			
ANR	851347	Identifier	incode		850879	0					
ANR	851348	Identifier	code		850879	1					
ANR	851349	IfStatement	if ( sd -> sp == ( sd -> stack + STACK_SIZE ) )		850879	2					
ANR	851350	Condition	sd -> sp == ( sd -> stack + STACK_SIZE )	497:6:11072:11105	850879	0	True				
ANR	851351	EqualityExpression	sd -> sp == ( sd -> stack + STACK_SIZE )		850879	0		==			
ANR	851352	PtrMemberAccess	sd -> sp		850879	0					
ANR	851353	Identifier	sd		850879	0					
ANR	851354	Identifier	sp		850879	1					
ANR	851355	AdditiveExpression	sd -> stack + STACK_SIZE		850879	1		+			
ANR	851356	PtrMemberAccess	sd -> stack		850879	0					
ANR	851357	Identifier	sd		850879	0					
ANR	851358	Identifier	stack		850879	1					
ANR	851359	Identifier	STACK_SIZE		850879	1					
ANR	851360	CompoundStatement		69:42:1686:1686	850879	1					
ANR	851361	ReturnStatement	return - 1 ;	499:3:11149:11158	850879	0	True				
ANR	851362	UnaryOperationExpression	- 1		850879	0					
ANR	851363	UnaryOperator	-		850879	0					
ANR	851364	PrimaryExpression	1		850879	1					
ANR	851365	IfStatement	if ( code >= sd -> max_code )		850879	3					
ANR	851366	Condition	code >= sd -> max_code	502:6:11171:11190	850879	0	True				
ANR	851367	RelationalExpression	code >= sd -> max_code		850879	0		>=			
ANR	851368	Identifier	code		850879	0					
ANR	851369	PtrMemberAccess	sd -> max_code		850879	1					
ANR	851370	Identifier	sd		850879	0					
ANR	851371	Identifier	max_code		850879	1					
ANR	851372	CompoundStatement		74:28:1771:1771	850879	1					
ANR	851373	ExpressionStatement	* sd -> sp ++ = sd -> firstcode	503:3:11198:11223	850879	0	True				
ANR	851374	AssignmentExpression	* sd -> sp ++ = sd -> firstcode		850879	0		=			
ANR	851375	UnaryOperationExpression	* sd -> sp ++		850879	0					
ANR	851376	UnaryOperator	*		850879	0					
ANR	851377	PostIncDecOperationExpression	sd -> sp ++		850879	1					
ANR	851378	PtrMemberAccess	sd -> sp		850879	0					
ANR	851379	Identifier	sd		850879	0					
ANR	851380	Identifier	sp		850879	1					
ANR	851381	IncDec	++		850879	1					
ANR	851382	PtrMemberAccess	sd -> firstcode		850879	1					
ANR	851383	Identifier	sd		850879	0					
ANR	851384	Identifier	firstcode		850879	1					
ANR	851385	ExpressionStatement	code = sd -> oldcode	504:3:11228:11246	850879	1	True				
ANR	851386	AssignmentExpression	code = sd -> oldcode		850879	0		=			
ANR	851387	Identifier	code		850879	0					
ANR	851388	PtrMemberAccess	sd -> oldcode		850879	1					
ANR	851389	Identifier	sd		850879	0					
ANR	851390	Identifier	oldcode		850879	1					
ANR	851391	WhileStatement	while ( code >= sd -> clear_code )		850879	4					
ANR	851392	Condition	code >= sd -> clear_code	507:9:11262:11283	850879	0	True				
ANR	851393	RelationalExpression	code >= sd -> clear_code		850879	0		>=			
ANR	851394	Identifier	code		850879	0					
ANR	851395	PtrMemberAccess	sd -> clear_code		850879	1					
ANR	851396	Identifier	sd		850879	0					
ANR	851397	Identifier	clear_code		850879	1					
ANR	851398	CompoundStatement		79:33:1864:1864	850879	1					
ANR	851399	IfStatement	if ( sd -> sp == ( sd -> stack + STACK_SIZE ) )		850879	0					
ANR	851400	Condition	sd -> sp == ( sd -> stack + STACK_SIZE )	508:7:11295:11328	850879	0	True				
ANR	851401	EqualityExpression	sd -> sp == ( sd -> stack + STACK_SIZE )		850879	0		==			
ANR	851402	PtrMemberAccess	sd -> sp		850879	0					
ANR	851403	Identifier	sd		850879	0					
ANR	851404	Identifier	sp		850879	1					
ANR	851405	AdditiveExpression	sd -> stack + STACK_SIZE		850879	1		+			
ANR	851406	PtrMemberAccess	sd -> stack		850879	0					
ANR	851407	Identifier	sd		850879	0					
ANR	851408	Identifier	stack		850879	1					
ANR	851409	Identifier	STACK_SIZE		850879	1					
ANR	851410	CompoundStatement		80:43:1909:1909	850879	1					
ANR	851411	ReturnStatement	return - 1 ;	510:4:11374:11383	850879	0	True				
ANR	851412	UnaryOperationExpression	- 1		850879	0					
ANR	851413	UnaryOperator	-		850879	0					
ANR	851414	PrimaryExpression	1		850879	1					
ANR	851415	ExpressionStatement	* sd -> sp ++ = sd -> table [ 1 ] [ code ]	512:3:11393:11423	850879	1	True				
ANR	851416	AssignmentExpression	* sd -> sp ++ = sd -> table [ 1 ] [ code ]		850879	0		=			
ANR	851417	UnaryOperationExpression	* sd -> sp ++		850879	0					
ANR	851418	UnaryOperator	*		850879	0					
ANR	851419	PostIncDecOperationExpression	sd -> sp ++		850879	1					
ANR	851420	PtrMemberAccess	sd -> sp		850879	0					
ANR	851421	Identifier	sd		850879	0					
ANR	851422	Identifier	sp		850879	1					
ANR	851423	IncDec	++		850879	1					
ANR	851424	ArrayIndexing	sd -> table [ 1 ] [ code ]		850879	1					
ANR	851425	ArrayIndexing	sd -> table [ 1 ]		850879	0					
ANR	851426	PtrMemberAccess	sd -> table		850879	0					
ANR	851427	Identifier	sd		850879	0					
ANR	851428	Identifier	table		850879	1					
ANR	851429	PrimaryExpression	1		850879	1					
ANR	851430	Identifier	code		850879	1					
ANR	851431	IfStatement	if ( code == sd -> table [ 0 ] [ code ] )		850879	2					
ANR	851432	Condition	code == sd -> table [ 0 ] [ code ]	513:7:11432:11457	850879	0	True				
ANR	851433	EqualityExpression	code == sd -> table [ 0 ] [ code ]		850879	0		==			
ANR	851434	Identifier	code		850879	0					
ANR	851435	ArrayIndexing	sd -> table [ 0 ] [ code ]		850879	1					
ANR	851436	ArrayIndexing	sd -> table [ 0 ]		850879	0					
ANR	851437	PtrMemberAccess	sd -> table		850879	0					
ANR	851438	Identifier	sd		850879	0					
ANR	851439	Identifier	table		850879	1					
ANR	851440	PrimaryExpression	0		850879	1					
ANR	851441	Identifier	code		850879	1					
ANR	851442	CompoundStatement		85:35:2038:2038	850879	1					
ANR	851443	ExpressionStatement	code = sd -> table [ 0 ] [ code ]	516:3:11488:11513	850879	3	True				
ANR	851444	AssignmentExpression	code = sd -> table [ 0 ] [ code ]		850879	0		=			
ANR	851445	Identifier	code		850879	0					
ANR	851446	ArrayIndexing	sd -> table [ 0 ] [ code ]		850879	1					
ANR	851447	ArrayIndexing	sd -> table [ 0 ]		850879	0					
ANR	851448	PtrMemberAccess	sd -> table		850879	0					
ANR	851449	Identifier	sd		850879	0					
ANR	851450	Identifier	table		850879	1					
ANR	851451	PrimaryExpression	0		850879	1					
ANR	851452	Identifier	code		850879	1					
ANR	851453	ExpressionStatement	* sd -> sp ++ = sd -> firstcode = sd -> table [ 1 ] [ code ]	519:2:11522:11568	850879	5	True				
ANR	851454	AssignmentExpression	* sd -> sp ++ = sd -> firstcode = sd -> table [ 1 ] [ code ]		850879	0		=			
ANR	851455	UnaryOperationExpression	* sd -> sp ++		850879	0					
ANR	851456	UnaryOperator	*		850879	0					
ANR	851457	PostIncDecOperationExpression	sd -> sp ++		850879	1					
ANR	851458	PtrMemberAccess	sd -> sp		850879	0					
ANR	851459	Identifier	sd		850879	0					
ANR	851460	Identifier	sp		850879	1					
ANR	851461	IncDec	++		850879	1					
ANR	851462	AssignmentExpression	sd -> firstcode = sd -> table [ 1 ] [ code ]		850879	1		=			
ANR	851463	PtrMemberAccess	sd -> firstcode		850879	0					
ANR	851464	Identifier	sd		850879	0					
ANR	851465	Identifier	firstcode		850879	1					
ANR	851466	ArrayIndexing	sd -> table [ 1 ] [ code ]		850879	1					
ANR	851467	ArrayIndexing	sd -> table [ 1 ]		850879	0					
ANR	851468	PtrMemberAccess	sd -> table		850879	0					
ANR	851469	Identifier	sd		850879	0					
ANR	851470	Identifier	table		850879	1					
ANR	851471	PrimaryExpression	1		850879	1					
ANR	851472	Identifier	code		850879	1					
ANR	851473	IfStatement	if ( ( code = sd -> max_code ) < ( 1 << MAX_LWZ_BITS ) )		850879	6					
ANR	851474	Condition	( code = sd -> max_code ) < ( 1 << MAX_LWZ_BITS )	521:6:11577:11616	850879	0	True				
ANR	851475	RelationalExpression	( code = sd -> max_code ) < ( 1 << MAX_LWZ_BITS )		850879	0		<			
ANR	851476	AssignmentExpression	code = sd -> max_code		850879	0		=			
ANR	851477	Identifier	code		850879	0					
ANR	851478	PtrMemberAccess	sd -> max_code		850879	1					
ANR	851479	Identifier	sd		850879	0					
ANR	851480	Identifier	max_code		850879	1					
ANR	851481	ShiftExpression	1 << MAX_LWZ_BITS		850879	1		<<			
ANR	851482	PrimaryExpression	1		850879	0					
ANR	851483	Identifier	MAX_LWZ_BITS		850879	1					
ANR	851484	CompoundStatement		93:48:2197:2197	850879	1					
ANR	851485	ExpressionStatement	sd -> table [ 0 ] [ code ] = sd -> oldcode	522:3:11624:11656	850879	0	True				
ANR	851486	AssignmentExpression	sd -> table [ 0 ] [ code ] = sd -> oldcode		850879	0		=			
ANR	851487	ArrayIndexing	sd -> table [ 0 ] [ code ]		850879	0					
ANR	851488	ArrayIndexing	sd -> table [ 0 ]		850879	0					
ANR	851489	PtrMemberAccess	sd -> table		850879	0					
ANR	851490	Identifier	sd		850879	0					
ANR	851491	Identifier	table		850879	1					
ANR	851492	PrimaryExpression	0		850879	1					
ANR	851493	Identifier	code		850879	1					
ANR	851494	PtrMemberAccess	sd -> oldcode		850879	1					
ANR	851495	Identifier	sd		850879	0					
ANR	851496	Identifier	oldcode		850879	1					
ANR	851497	ExpressionStatement	sd -> table [ 1 ] [ code ] = sd -> firstcode	523:3:11661:11695	850879	1	True				
ANR	851498	AssignmentExpression	sd -> table [ 1 ] [ code ] = sd -> firstcode		850879	0		=			
ANR	851499	ArrayIndexing	sd -> table [ 1 ] [ code ]		850879	0					
ANR	851500	ArrayIndexing	sd -> table [ 1 ]		850879	0					
ANR	851501	PtrMemberAccess	sd -> table		850879	0					
ANR	851502	Identifier	sd		850879	0					
ANR	851503	Identifier	table		850879	1					
ANR	851504	PrimaryExpression	1		850879	1					
ANR	851505	Identifier	code		850879	1					
ANR	851506	PtrMemberAccess	sd -> firstcode		850879	1					
ANR	851507	Identifier	sd		850879	0					
ANR	851508	Identifier	firstcode		850879	1					
ANR	851509	ExpressionStatement	++ sd -> max_code	524:3:11700:11714	850879	2	True				
ANR	851510	UnaryExpression	++ sd -> max_code		850879	0					
ANR	851511	IncDec	++		850879	0					
ANR	851512	PtrMemberAccess	sd -> max_code		850879	1					
ANR	851513	Identifier	sd		850879	0					
ANR	851514	Identifier	max_code		850879	1					
ANR	851515	IfStatement	if ( ( sd -> max_code >= sd -> max_code_size ) && ( sd -> max_code_size < ( 1 << MAX_LWZ_BITS ) ) )		850879	3					
ANR	851516	Condition	( sd -> max_code >= sd -> max_code_size ) && ( sd -> max_code_size < ( 1 << MAX_LWZ_BITS ) )	525:7:11723:11805	850879	0	True				
ANR	851517	AndExpression	( sd -> max_code >= sd -> max_code_size ) && ( sd -> max_code_size < ( 1 << MAX_LWZ_BITS ) )		850879	0		&&			
ANR	851518	RelationalExpression	sd -> max_code >= sd -> max_code_size		850879	0		>=			
ANR	851519	PtrMemberAccess	sd -> max_code		850879	0					
ANR	851520	Identifier	sd		850879	0					
ANR	851521	Identifier	max_code		850879	1					
ANR	851522	PtrMemberAccess	sd -> max_code_size		850879	1					
ANR	851523	Identifier	sd		850879	0					
ANR	851524	Identifier	max_code_size		850879	1					
ANR	851525	RelationalExpression	sd -> max_code_size < ( 1 << MAX_LWZ_BITS )		850879	1		<			
ANR	851526	PtrMemberAccess	sd -> max_code_size		850879	0					
ANR	851527	Identifier	sd		850879	0					
ANR	851528	Identifier	max_code_size		850879	1					
ANR	851529	ShiftExpression	1 << MAX_LWZ_BITS		850879	1		<<			
ANR	851530	PrimaryExpression	1		850879	0					
ANR	851531	Identifier	MAX_LWZ_BITS		850879	1					
ANR	851532	CompoundStatement		98:46:2386:2386	850879	1					
ANR	851533	ExpressionStatement	sd -> max_code_size *= 2	527:4:11814:11836	850879	0	True				
ANR	851534	AssignmentExpression	sd -> max_code_size *= 2		850879	0		*=			
ANR	851535	PtrMemberAccess	sd -> max_code_size		850879	0					
ANR	851536	Identifier	sd		850879	0					
ANR	851537	Identifier	max_code_size		850879	1					
ANR	851538	PrimaryExpression	2		850879	1					
ANR	851539	ExpressionStatement	++ sd -> code_size	528:4:11842:11857	850879	1	True				
ANR	851540	UnaryExpression	++ sd -> code_size		850879	0					
ANR	851541	IncDec	++		850879	0					
ANR	851542	PtrMemberAccess	sd -> code_size		850879	1					
ANR	851543	Identifier	sd		850879	0					
ANR	851544	Identifier	code_size		850879	1					
ANR	851545	ExpressionStatement	sd -> oldcode = incode	532:2:11871:11891	850879	7	True				
ANR	851546	AssignmentExpression	sd -> oldcode = incode		850879	0		=			
ANR	851547	PtrMemberAccess	sd -> oldcode		850879	0					
ANR	851548	Identifier	sd		850879	0					
ANR	851549	Identifier	oldcode		850879	1					
ANR	851550	Identifier	incode		850879	1					
ANR	851551	IfStatement	if ( sd -> sp > sd -> stack )		850879	8					
ANR	851552	Condition	sd -> sp > sd -> stack	534:6:11900:11917	850879	0	True				
ANR	851553	RelationalExpression	sd -> sp > sd -> stack		850879	0		>			
ANR	851554	PtrMemberAccess	sd -> sp		850879	0					
ANR	851555	Identifier	sd		850879	0					
ANR	851556	Identifier	sp		850879	1					
ANR	851557	PtrMemberAccess	sd -> stack		850879	1					
ANR	851558	Identifier	sd		850879	0					
ANR	851559	Identifier	stack		850879	1					
ANR	851560	ReturnStatement	return * -- sd -> sp ;	535:3:11923:11939	850879	1	True				
ANR	851561	UnaryOperationExpression	* -- sd -> sp		850879	0					
ANR	851562	UnaryOperator	*		850879	0					
ANR	851563	UnaryExpression	-- sd -> sp		850879	1					
ANR	851564	IncDec	--		850879	0					
ANR	851565	PtrMemberAccess	sd -> sp		850879	1					
ANR	851566	Identifier	sd		850879	0					
ANR	851567	Identifier	sp		850879	1					
ANR	851568	ReturnStatement	return code ;	537:1:11945:11956	850879	4	True				
ANR	851569	Identifier	code		850879	0					
ANR	851570	ReturnType	static int		850879	1					
ANR	851571	Identifier	LWZReadByte_		850879	2					
ANR	851572	ParameterList	"gdIOCtx * fd , LZW_STATIC_DATA * sd , char flag , int input_code_size , int * ZeroDataBlockP"		850879	3					
ANR	851573	Parameter	gdIOCtx * fd	428:13:9334:9344	850879	0	True				
ANR	851574	ParameterType	gdIOCtx *		850879	0					
ANR	851575	Identifier	fd		850879	1					
ANR	851576	Parameter	LZW_STATIC_DATA * sd	428:26:9347:9365	850879	1	True				
ANR	851577	ParameterType	LZW_STATIC_DATA *		850879	0					
ANR	851578	Identifier	sd		850879	1					
ANR	851579	Parameter	char flag	428:47:9368:9376	850879	2	True				
ANR	851580	ParameterType	char		850879	0					
ANR	851581	Identifier	flag		850879	1					
ANR	851582	Parameter	int input_code_size	428:58:9379:9397	850879	3	True				
ANR	851583	ParameterType	int		850879	0					
ANR	851584	Identifier	input_code_size		850879	1					
ANR	851585	Parameter	int * ZeroDataBlockP	428:79:9400:9418	850879	4	True				
ANR	851586	ParameterType	int *		850879	0					
ANR	851587	Identifier	ZeroDataBlockP		850879	1					
ANR	851588	CFGEntryNode	ENTRY		850879		True				
ANR	851589	CFGExitNode	EXIT		850879		True				
ANR	851590	Symbol	* -- sd -> sp		850879						
ANR	851591	Symbol	flag		850879						
ANR	851592	Symbol	code		850879						
ANR	851593	Symbol	& sd -> scd		850879						
ANR	851594	Symbol	* * * sd		850879						
ANR	851595	Symbol	sd -> firstcode		850879						
ANR	851596	Symbol	* * sd -> table		850879						
ANR	851597	Symbol	* ZeroDataBlockP		850879						
ANR	851598	Symbol	sd		850879						
ANR	851599	Symbol	sd -> fresh		850879						
ANR	851600	Symbol	sd -> oldcode		850879						
ANR	851601	Symbol	* sd		850879						
ANR	851602	Symbol	sd -> sp		850879						
ANR	851603	Symbol	MAX_LWZ_BITS		850879						
ANR	851604	Symbol	sd -> max_code_size		850879						
ANR	851605	Symbol	input_code_size		850879						
ANR	851606	Symbol	GetDataBlock		850879						
ANR	851607	Symbol	sd -> set_code_size		850879						
ANR	851608	Symbol	sd -> code_size		850879						
ANR	851609	Symbol	* sd -> sp ++		850879						
ANR	851610	Symbol	* sd -> table		850879						
ANR	851611	Symbol	count		850879						
ANR	851612	Symbol	i		850879						
ANR	851613	Symbol	TRUE		850879						
ANR	851614	Symbol	sd -> end_code		850879						
ANR	851615	Symbol	* sd -> sp		850879						
ANR	851616	Symbol	sd -> max_code		850879						
ANR	851617	Symbol	sd -> table		850879						
ANR	851618	Symbol	buf		850879						
ANR	851619	Symbol	* i		850879						
ANR	851620	Symbol	GetCode		850879						
ANR	851621	Symbol	STACK_SIZE		850879						
ANR	851622	Symbol	FALSE		850879						
ANR	851623	Symbol	incode		850879						
ANR	851624	Symbol	sd -> clear_code		850879						
ANR	851625	Symbol	fd		850879						
ANR	851626	Symbol	* code		850879						
ANR	851627	Symbol	ZeroDataBlockP		850879						
ANR	851628	Symbol	* * sd		850879						
ANR	851629	Symbol	sd -> stack		850879						
ANR	851630	Function	LWZReadByte	541:0:11971:12259							
ANR	851631	FunctionDef	"LWZReadByte (gdIOCtx * fd , LZW_STATIC_DATA * sd , char flag , int input_code_size , int * ZeroDataBlockP)"		851630	0					
ANR	851632	CompoundStatement		543:0:12081:12259	851630	0					
ANR	851633	IdentifierDeclStatement	int rv ;	544:1:12084:12090	851630	0	True				
ANR	851634	IdentifierDecl	rv		851630	0					
ANR	851635	IdentifierDeclType	int		851630	0					
ANR	851636	Identifier	rv		851630	1					
ANR	851637	ExpressionStatement	"rv = LWZReadByte_ ( fd , sd , flag , input_code_size , ZeroDataBlockP )"	546:1:12094:12158	851630	1	True				
ANR	851638	AssignmentExpression	"rv = LWZReadByte_ ( fd , sd , flag , input_code_size , ZeroDataBlockP )"		851630	0		=			
ANR	851639	Identifier	rv		851630	0					
ANR	851640	CallExpression	"LWZReadByte_ ( fd , sd , flag , input_code_size , ZeroDataBlockP )"		851630	1					
ANR	851641	Callee	LWZReadByte_		851630	0					
ANR	851642	Identifier	LWZReadByte_		851630	0					
ANR	851643	ArgumentList	fd		851630	1					
ANR	851644	Argument	fd		851630	0					
ANR	851645	Identifier	fd		851630	0					
ANR	851646	Argument	sd		851630	1					
ANR	851647	Identifier	sd		851630	0					
ANR	851648	Argument	flag		851630	2					
ANR	851649	Identifier	flag		851630	0					
ANR	851650	Argument	input_code_size		851630	3					
ANR	851651	Identifier	input_code_size		851630	0					
ANR	851652	Argument	ZeroDataBlockP		851630	4					
ANR	851653	Identifier	ZeroDataBlockP		851630	0					
ANR	851654	IfStatement	if ( VERBOSE )		851630	2					
ANR	851655	Condition	VERBOSE	547:5:12165:12171	851630	0	True				
ANR	851656	Identifier	VERBOSE		851630	0					
ANR	851657	ExpressionStatement	"printf ( ""[LWZReadByte(,%d,%d) returning %d]\\n"" , flag , input_code_size , rv )"	547:14:12174:12244	851630	1	True				
ANR	851658	CallExpression	"printf ( ""[LWZReadByte(,%d,%d) returning %d]\\n"" , flag , input_code_size , rv )"		851630	0					
ANR	851659	Callee	printf		851630	0					
ANR	851660	Identifier	printf		851630	0					
ANR	851661	ArgumentList	"""[LWZReadByte(,%d,%d) returning %d]\\n"""		851630	1					
ANR	851662	Argument	"""[LWZReadByte(,%d,%d) returning %d]\\n"""		851630	0					
ANR	851663	PrimaryExpression	"""[LWZReadByte(,%d,%d) returning %d]\\n"""		851630	0					
ANR	851664	Argument	flag		851630	1					
ANR	851665	Identifier	flag		851630	0					
ANR	851666	Argument	input_code_size		851630	2					
ANR	851667	Identifier	input_code_size		851630	0					
ANR	851668	Argument	rv		851630	3					
ANR	851669	Identifier	rv		851630	0					
ANR	851670	ReturnStatement	return ( rv ) ;	548:1:12247:12257	851630	3	True				
ANR	851671	Identifier	rv		851630	0					
ANR	851672	ReturnType	static int		851630	1					
ANR	851673	Identifier	LWZReadByte		851630	2					
ANR	851674	ParameterList	"gdIOCtx * fd , LZW_STATIC_DATA * sd , char flag , int input_code_size , int * ZeroDataBlockP"		851630	3					
ANR	851675	Parameter	gdIOCtx * fd	542:12:11994:12004	851630	0	True				
ANR	851676	ParameterType	gdIOCtx *		851630	0					
ANR	851677	Identifier	fd		851630	1					
ANR	851678	Parameter	LZW_STATIC_DATA * sd	542:25:12007:12025	851630	1	True				
ANR	851679	ParameterType	LZW_STATIC_DATA *		851630	0					
ANR	851680	Identifier	sd		851630	1					
ANR	851681	Parameter	char flag	542:46:12028:12036	851630	2	True				
ANR	851682	ParameterType	char		851630	0					
ANR	851683	Identifier	flag		851630	1					
ANR	851684	Parameter	int input_code_size	542:57:12039:12057	851630	3	True				
ANR	851685	ParameterType	int		851630	0					
ANR	851686	Identifier	input_code_size		851630	1					
ANR	851687	Parameter	int * ZeroDataBlockP	542:78:12060:12078	851630	4	True				
ANR	851688	ParameterType	int *		851630	0					
ANR	851689	Identifier	ZeroDataBlockP		851630	1					
ANR	851690	CFGEntryNode	ENTRY		851630		True				
ANR	851691	CFGExitNode	EXIT		851630		True				
ANR	851692	Symbol	sd		851630						
ANR	851693	Symbol	flag		851630						
ANR	851694	Symbol	rv		851630						
ANR	851695	Symbol	LWZReadByte_		851630						
ANR	851696	Symbol	VERBOSE		851630						
ANR	851697	Symbol	input_code_size		851630						
ANR	851698	Symbol	fd		851630						
ANR	851699	Symbol	ZeroDataBlockP		851630						
ANR	851700	Function	ReadImage	552:0:12272:14120							
ANR	851701	FunctionDef	"ReadImage (gdImagePtr im , gdIOCtx * fd , int len , int height , unsigned char ( * cmap ) [ 256 ] , int interlace , int * ZeroDataBlockP)"		851700	0					
ANR	851702	CompoundStatement		554:0:12431:14120	851700	0					
ANR	851703	IdentifierDeclStatement	unsigned char c ;	555:1:12434:12451	851700	0	True				
ANR	851704	IdentifierDecl	c		851700	0					
ANR	851705	IdentifierDeclType	unsigned char		851700	0					
ANR	851706	Identifier	c		851700	1					
ANR	851707	IdentifierDeclStatement	int v ;	556:1:12454:12471	851700	1	True				
ANR	851708	IdentifierDecl	v		851700	0					
ANR	851709	IdentifierDeclType	int		851700	0					
ANR	851710	Identifier	v		851700	1					
ANR	851711	IdentifierDeclStatement	"int xpos = 0 , ypos = 0 , pass = 0 ;"	557:1:12474:12518	851700	2	True				
ANR	851712	IdentifierDecl	xpos = 0		851700	0					
ANR	851713	IdentifierDeclType	int		851700	0					
ANR	851714	Identifier	xpos		851700	1					
ANR	851715	AssignmentExpression	xpos = 0		851700	2		=			
ANR	851716	Identifier	xpos		851700	0					
ANR	851717	PrimaryExpression	0		851700	1					
ANR	851718	IdentifierDecl	ypos = 0		851700	1					
ANR	851719	IdentifierDeclType	int		851700	0					
ANR	851720	Identifier	ypos		851700	1					
ANR	851721	AssignmentExpression	ypos = 0		851700	2		=			
ANR	851722	Identifier	ypos		851700	0					
ANR	851723	PrimaryExpression	0		851700	1					
ANR	851724	IdentifierDecl	pass = 0		851700	2					
ANR	851725	IdentifierDeclType	int		851700	0					
ANR	851726	Identifier	pass		851700	1					
ANR	851727	AssignmentExpression	pass = 0		851700	2		=			
ANR	851728	Identifier	pass		851700	0					
ANR	851729	PrimaryExpression	0		851700	1					
ANR	851730	IdentifierDeclStatement	int i ;	558:1:12521:12526	851700	3	True				
ANR	851731	IdentifierDecl	i		851700	0					
ANR	851732	IdentifierDeclType	int		851700	0					
ANR	851733	Identifier	i		851700	1					
ANR	851734	IdentifierDeclStatement	LZW_STATIC_DATA sd ;	559:1:12529:12547	851700	4	True				
ANR	851735	IdentifierDecl	sd		851700	0					
ANR	851736	IdentifierDeclType	LZW_STATIC_DATA		851700	0					
ANR	851737	Identifier	sd		851700	1					
ANR	851738	IfStatement	"if ( ! ReadOK ( fd , & c , 1 ) )"		851700	5					
ANR	851739	Condition	"! ReadOK ( fd , & c , 1 )"	565:5:12607:12623	851700	0	True				
ANR	851740	UnaryOperationExpression	"! ReadOK ( fd , & c , 1 )"		851700	0					
ANR	851741	UnaryOperator	!		851700	0					
ANR	851742	CallExpression	"ReadOK ( fd , & c , 1 )"		851700	1					
ANR	851743	Callee	ReadOK		851700	0					
ANR	851744	Identifier	ReadOK		851700	0					
ANR	851745	ArgumentList	fd		851700	1					
ANR	851746	Argument	fd		851700	0					
ANR	851747	Identifier	fd		851700	0					
ANR	851748	Argument	& c		851700	1					
ANR	851749	UnaryOperationExpression	& c		851700	0					
ANR	851750	UnaryOperator	&		851700	0					
ANR	851751	Identifier	c		851700	1					
ANR	851752	Argument	1		851700	2					
ANR	851753	PrimaryExpression	1		851700	0					
ANR	851754	CompoundStatement		12:24:194:194	851700	1					
ANR	851755	ReturnStatement	return ;	566:2:12630:12636	851700	0	True				
ANR	851756	IfStatement	if ( c > MAX_LWZ_BITS )		851700	6					
ANR	851757	Condition	c > MAX_LWZ_BITS	569:5:12647:12662	851700	0	True				
ANR	851758	RelationalExpression	c > MAX_LWZ_BITS		851700	0		>			
ANR	851759	Identifier	c		851700	0					
ANR	851760	Identifier	MAX_LWZ_BITS		851700	1					
ANR	851761	CompoundStatement		16:23:233:233	851700	1					
ANR	851762	ReturnStatement	return ;	570:2:12669:12675	851700	0	True				
ANR	851763	ForStatement	for ( i = 0 ; ( i < gdMaxColors ) ; i ++ )		851700	7					
ANR	851764	ForInit	i = 0 ;	574:6:12729:12732	851700	0	True				
ANR	851765	AssignmentExpression	i = 0		851700	0		=			
ANR	851766	Identifier	i		851700	0					
ANR	851767	PrimaryExpression	0		851700	1					
ANR	851768	Condition	i < gdMaxColors	574:11:12734:12748	851700	1	True				
ANR	851769	RelationalExpression	i < gdMaxColors		851700	0		<			
ANR	851770	Identifier	i		851700	0					
ANR	851771	Identifier	gdMaxColors		851700	1					
ANR	851772	PostIncDecOperationExpression	i ++	574:28:12751:12753	851700	2	True				
ANR	851773	Identifier	i		851700	0					
ANR	851774	IncDec	++		851700	1					
ANR	851775	CompoundStatement		21:33:324:324	851700	3					
ANR	851776	ExpressionStatement	im -> red [ i ] = cmap [ CM_RED ] [ i ]	575:2:12760:12788	851700	0	True				
ANR	851777	AssignmentExpression	im -> red [ i ] = cmap [ CM_RED ] [ i ]		851700	0		=			
ANR	851778	ArrayIndexing	im -> red [ i ]		851700	0					
ANR	851779	PtrMemberAccess	im -> red		851700	0					
ANR	851780	Identifier	im		851700	0					
ANR	851781	Identifier	red		851700	1					
ANR	851782	Identifier	i		851700	1					
ANR	851783	ArrayIndexing	cmap [ CM_RED ] [ i ]		851700	1					
ANR	851784	ArrayIndexing	cmap [ CM_RED ]		851700	0					
ANR	851785	Identifier	cmap		851700	0					
ANR	851786	Identifier	CM_RED		851700	1					
ANR	851787	Identifier	i		851700	1					
ANR	851788	ExpressionStatement	im -> green [ i ] = cmap [ CM_GREEN ] [ i ]	576:2:12792:12824	851700	1	True				
ANR	851789	AssignmentExpression	im -> green [ i ] = cmap [ CM_GREEN ] [ i ]		851700	0		=			
ANR	851790	ArrayIndexing	im -> green [ i ]		851700	0					
ANR	851791	PtrMemberAccess	im -> green		851700	0					
ANR	851792	Identifier	im		851700	0					
ANR	851793	Identifier	green		851700	1					
ANR	851794	Identifier	i		851700	1					
ANR	851795	ArrayIndexing	cmap [ CM_GREEN ] [ i ]		851700	1					
ANR	851796	ArrayIndexing	cmap [ CM_GREEN ]		851700	0					
ANR	851797	Identifier	cmap		851700	0					
ANR	851798	Identifier	CM_GREEN		851700	1					
ANR	851799	Identifier	i		851700	1					
ANR	851800	ExpressionStatement	im -> blue [ i ] = cmap [ CM_BLUE ] [ i ]	577:2:12828:12858	851700	2	True				
ANR	851801	AssignmentExpression	im -> blue [ i ] = cmap [ CM_BLUE ] [ i ]		851700	0		=			
ANR	851802	ArrayIndexing	im -> blue [ i ]		851700	0					
ANR	851803	PtrMemberAccess	im -> blue		851700	0					
ANR	851804	Identifier	im		851700	0					
ANR	851805	Identifier	blue		851700	1					
ANR	851806	Identifier	i		851700	1					
ANR	851807	ArrayIndexing	cmap [ CM_BLUE ] [ i ]		851700	1					
ANR	851808	ArrayIndexing	cmap [ CM_BLUE ]		851700	0					
ANR	851809	Identifier	cmap		851700	0					
ANR	851810	Identifier	CM_BLUE		851700	1					
ANR	851811	Identifier	i		851700	1					
ANR	851812	ExpressionStatement	im -> open [ i ] = 1	578:2:12862:12877	851700	3	True				
ANR	851813	AssignmentExpression	im -> open [ i ] = 1		851700	0		=			
ANR	851814	ArrayIndexing	im -> open [ i ]		851700	0					
ANR	851815	PtrMemberAccess	im -> open		851700	0					
ANR	851816	Identifier	im		851700	0					
ANR	851817	Identifier	open		851700	1					
ANR	851818	Identifier	i		851700	1					
ANR	851819	PrimaryExpression	1		851700	1					
ANR	851820	ExpressionStatement	im -> colorsTotal = gdMaxColors	581:1:12951:12980	851700	8	True				
ANR	851821	AssignmentExpression	im -> colorsTotal = gdMaxColors		851700	0		=			
ANR	851822	PtrMemberAccess	im -> colorsTotal		851700	0					
ANR	851823	Identifier	im		851700	0					
ANR	851824	Identifier	colorsTotal		851700	1					
ANR	851825	Identifier	gdMaxColors		851700	1					
ANR	851826	IfStatement	"if ( LWZReadByte ( fd , & sd , TRUE , c , ZeroDataBlockP ) < 0 )"		851700	9					
ANR	851827	Condition	"LWZReadByte ( fd , & sd , TRUE , c , ZeroDataBlockP ) < 0"	582:5:12987:13035	851700	0	True				
ANR	851828	RelationalExpression	"LWZReadByte ( fd , & sd , TRUE , c , ZeroDataBlockP ) < 0"		851700	0		<			
ANR	851829	CallExpression	"LWZReadByte ( fd , & sd , TRUE , c , ZeroDataBlockP )"		851700	0					
ANR	851830	Callee	LWZReadByte		851700	0					
ANR	851831	Identifier	LWZReadByte		851700	0					
ANR	851832	ArgumentList	fd		851700	1					
ANR	851833	Argument	fd		851700	0					
ANR	851834	Identifier	fd		851700	0					
ANR	851835	Argument	& sd		851700	1					
ANR	851836	UnaryOperationExpression	& sd		851700	0					
ANR	851837	UnaryOperator	&		851700	0					
ANR	851838	Identifier	sd		851700	1					
ANR	851839	Argument	TRUE		851700	2					
ANR	851840	Identifier	TRUE		851700	0					
ANR	851841	Argument	c		851700	3					
ANR	851842	Identifier	c		851700	0					
ANR	851843	Argument	ZeroDataBlockP		851700	4					
ANR	851844	Identifier	ZeroDataBlockP		851700	0					
ANR	851845	PrimaryExpression	0		851700	1					
ANR	851846	CompoundStatement		29:56:606:606	851700	1					
ANR	851847	ReturnStatement	return ;	583:2:13042:13048	851700	0	True				
ANR	851848	WhileStatement	"while ( ( v = LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP ) ) >= 0 )"		851700	10					
ANR	851849	Condition	"( v = LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP ) ) >= 0"	596:8:13281:13337	851700	0	True				
ANR	851850	RelationalExpression	"( v = LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP ) ) >= 0"		851700	0		>=			
ANR	851851	AssignmentExpression	"v = LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP )"		851700	0		=			
ANR	851852	Identifier	v		851700	0					
ANR	851853	CallExpression	"LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP )"		851700	1					
ANR	851854	Callee	LWZReadByte		851700	0					
ANR	851855	Identifier	LWZReadByte		851700	0					
ANR	851856	ArgumentList	fd		851700	1					
ANR	851857	Argument	fd		851700	0					
ANR	851858	Identifier	fd		851700	0					
ANR	851859	Argument	& sd		851700	1					
ANR	851860	UnaryOperationExpression	& sd		851700	0					
ANR	851861	UnaryOperator	&		851700	0					
ANR	851862	Identifier	sd		851700	1					
ANR	851863	Argument	FALSE		851700	2					
ANR	851864	Identifier	FALSE		851700	0					
ANR	851865	Argument	c		851700	3					
ANR	851866	Identifier	c		851700	0					
ANR	851867	Argument	ZeroDataBlockP		851700	4					
ANR	851868	Identifier	ZeroDataBlockP		851700	0					
ANR	851869	PrimaryExpression	0		851700	1					
ANR	851870	CompoundStatement		43:67:908:908	851700	1					
ANR	851871	IfStatement	if ( v >= gdMaxColors )		851700	0					
ANR	851872	Condition	v >= gdMaxColors	597:6:13348:13363	851700	0	True				
ANR	851873	RelationalExpression	v >= gdMaxColors		851700	0		>=			
ANR	851874	Identifier	v		851700	0					
ANR	851875	Identifier	gdMaxColors		851700	1					
ANR	851876	CompoundStatement		44:24:934:934	851700	1					
ANR	851877	ExpressionStatement	v = 0	598:3:13371:13376	851700	0	True				
ANR	851878	AssignmentExpression	v = 0		851700	0		=			
ANR	851879	Identifier	v		851700	0					
ANR	851880	PrimaryExpression	0		851700	1					
ANR	851881	IfStatement	if ( im -> open [ v ] )		851700	1					
ANR	851882	Condition	im -> open [ v ]	601:6:13450:13460	851700	0	True				
ANR	851883	ArrayIndexing	im -> open [ v ]		851700	0					
ANR	851884	PtrMemberAccess	im -> open		851700	0					
ANR	851885	Identifier	im		851700	0					
ANR	851886	Identifier	open		851700	1					
ANR	851887	Identifier	v		851700	1					
ANR	851888	CompoundStatement		48:19:1031:1031	851700	1					
ANR	851889	ExpressionStatement	im -> open [ v ] = 0	602:3:13468:13483	851700	0	True				
ANR	851890	AssignmentExpression	im -> open [ v ] = 0		851700	0		=			
ANR	851891	ArrayIndexing	im -> open [ v ]		851700	0					
ANR	851892	PtrMemberAccess	im -> open		851700	0					
ANR	851893	Identifier	im		851700	0					
ANR	851894	Identifier	open		851700	1					
ANR	851895	Identifier	v		851700	1					
ANR	851896	PrimaryExpression	0		851700	1					
ANR	851897	ExpressionStatement	"gdImageSetPixel ( im , xpos , ypos , v )"	604:2:13491:13525	851700	2	True				
ANR	851898	CallExpression	"gdImageSetPixel ( im , xpos , ypos , v )"		851700	0					
ANR	851899	Callee	gdImageSetPixel		851700	0					
ANR	851900	Identifier	gdImageSetPixel		851700	0					
ANR	851901	ArgumentList	im		851700	1					
ANR	851902	Argument	im		851700	0					
ANR	851903	Identifier	im		851700	0					
ANR	851904	Argument	xpos		851700	1					
ANR	851905	Identifier	xpos		851700	0					
ANR	851906	Argument	ypos		851700	2					
ANR	851907	Identifier	ypos		851700	0					
ANR	851908	Argument	v		851700	3					
ANR	851909	Identifier	v		851700	0					
ANR	851910	ExpressionStatement	++ xpos	605:2:13529:13535	851700	3	True				
ANR	851911	UnaryExpression	++ xpos		851700	0					
ANR	851912	IncDec	++		851700	0					
ANR	851913	Identifier	xpos		851700	1					
ANR	851914	IfStatement	if ( xpos == len )		851700	4					
ANR	851915	Condition	xpos == len	606:6:13543:13553	851700	0	True				
ANR	851916	EqualityExpression	xpos == len		851700	0		==			
ANR	851917	Identifier	xpos		851700	0					
ANR	851918	Identifier	len		851700	1					
ANR	851919	CompoundStatement		53:19:1124:1124	851700	1					
ANR	851920	ExpressionStatement	xpos = 0	607:3:13561:13569	851700	0	True				
ANR	851921	AssignmentExpression	xpos = 0		851700	0		=			
ANR	851922	Identifier	xpos		851700	0					
ANR	851923	PrimaryExpression	0		851700	1					
ANR	851924	IfStatement	if ( interlace )		851700	1					
ANR	851925	Condition	interlace	608:7:13578:13586	851700	0	True				
ANR	851926	Identifier	interlace		851700	0					
ANR	851927	CompoundStatement		55:18:1157:1157	851700	1					
ANR	851928	SwitchStatement	switch ( pass )		851700	0					
ANR	851929	Condition	pass	609:12:13603:13606	851700	0	True				
ANR	851930	Identifier	pass		851700	0					
ANR	851931	CompoundStatement		56:18:1177:1177	851700	1					
ANR	851932	Label	case 0 :	610:5:13616:13622	851700	0	True				
ANR	851933	Label	case 1 :	611:5:13629:13635	851700	1	True				
ANR	851934	ExpressionStatement	ypos += 8	612:6:13643:13652	851700	2	True				
ANR	851935	AssignmentExpression	ypos += 8		851700	0		+=			
ANR	851936	Identifier	ypos		851700	0					
ANR	851937	PrimaryExpression	8		851700	1					
ANR	851938	BreakStatement	break ;	612:17:13654:13659	851700	3	True				
ANR	851939	Label	case 2 :	613:5:13666:13672	851700	4	True				
ANR	851940	ExpressionStatement	ypos += 4	614:6:13680:13689	851700	5	True				
ANR	851941	AssignmentExpression	ypos += 4		851700	0		+=			
ANR	851942	Identifier	ypos		851700	0					
ANR	851943	PrimaryExpression	4		851700	1					
ANR	851944	BreakStatement	break ;	614:17:13691:13696	851700	6	True				
ANR	851945	Label	case 3 :	615:5:13703:13709	851700	7	True				
ANR	851946	ExpressionStatement	ypos += 2	616:6:13717:13726	851700	8	True				
ANR	851947	AssignmentExpression	ypos += 2		851700	0		+=			
ANR	851948	Identifier	ypos		851700	0					
ANR	851949	PrimaryExpression	2		851700	1					
ANR	851950	BreakStatement	break ;	616:17:13728:13733	851700	9	True				
ANR	851951	IfStatement	if ( ypos >= height )		851700	1					
ANR	851952	Condition	ypos >= height	619:8:13750:13763	851700	0	True				
ANR	851953	RelationalExpression	ypos >= height		851700	0		>=			
ANR	851954	Identifier	ypos		851700	0					
ANR	851955	Identifier	height		851700	1					
ANR	851956	CompoundStatement		66:24:1334:1334	851700	1					
ANR	851957	ExpressionStatement	++ pass	620:5:13773:13779	851700	0	True				
ANR	851958	UnaryExpression	++ pass		851700	0					
ANR	851959	IncDec	++		851700	0					
ANR	851960	Identifier	pass		851700	1					
ANR	851961	SwitchStatement	switch ( pass )		851700	1					
ANR	851962	Condition	pass	621:13:13794:13797	851700	0	True				
ANR	851963	Identifier	pass		851700	0					
ANR	851964	CompoundStatement		68:19:1368:1368	851700	1					
ANR	851965	Label	case 1 :	622:6:13808:13814	851700	0	True				
ANR	851966	ExpressionStatement	ypos = 4	623:7:13823:13831	851700	1	True				
ANR	851967	AssignmentExpression	ypos = 4		851700	0		=			
ANR	851968	Identifier	ypos		851700	0					
ANR	851969	PrimaryExpression	4		851700	1					
ANR	851970	BreakStatement	break ;	623:17:13833:13838	851700	2	True				
ANR	851971	Label	case 2 :	624:6:13846:13852	851700	3	True				
ANR	851972	ExpressionStatement	ypos = 2	625:7:13861:13869	851700	4	True				
ANR	851973	AssignmentExpression	ypos = 2		851700	0		=			
ANR	851974	Identifier	ypos		851700	0					
ANR	851975	PrimaryExpression	2		851700	1					
ANR	851976	BreakStatement	break ;	625:17:13871:13876	851700	5	True				
ANR	851977	Label	case 3 :	626:6:13884:13890	851700	6	True				
ANR	851978	ExpressionStatement	ypos = 1	627:7:13899:13907	851700	7	True				
ANR	851979	AssignmentExpression	ypos = 1		851700	0		=			
ANR	851980	Identifier	ypos		851700	0					
ANR	851981	PrimaryExpression	1		851700	1					
ANR	851982	BreakStatement	break ;	627:17:13909:13914	851700	8	True				
ANR	851983	Label	default :	628:6:13922:13929	851700	9	True				
ANR	851984	Identifier	default		851700	0					
ANR	851985	GotoStatement	goto fini ;	629:7:13938:13947	851700	10	True				
ANR	851986	Identifier	fini		851700	0					
ANR	851987	ElseStatement	else		851700	0					
ANR	851988	CompoundStatement		79:10:1540:1540	851700	0					
ANR	851989	ExpressionStatement	++ ypos	633:4:13978:13984	851700	0	True				
ANR	851990	UnaryExpression	++ ypos		851700	0					
ANR	851991	IncDec	++		851700	0					
ANR	851992	Identifier	ypos		851700	1					
ANR	851993	IfStatement	if ( ypos >= height )		851700	5					
ANR	851994	Condition	ypos >= height	636:6:14001:14014	851700	0	True				
ANR	851995	RelationalExpression	ypos >= height		851700	0		>=			
ANR	851996	Identifier	ypos		851700	0					
ANR	851997	Identifier	height		851700	1					
ANR	851998	BreakStatement	break ;	637:3:14020:14025	851700	1	True				
ANR	851999	Label	fini :	640:0:14031:14035	851700	11	True				
ANR	852000	Identifier	fini		851700	0					
ANR	852001	IfStatement	"if ( LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP ) >= 0 )"		851700	12					
ANR	852002	Condition	"LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP ) >= 0"	641:5:14042:14091	851700	0	True				
ANR	852003	RelationalExpression	"LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP ) >= 0"		851700	0		>=			
ANR	852004	CallExpression	"LWZReadByte ( fd , & sd , FALSE , c , ZeroDataBlockP )"		851700	0					
ANR	852005	Callee	LWZReadByte		851700	0					
ANR	852006	Identifier	LWZReadByte		851700	0					
ANR	852007	ArgumentList	fd		851700	1					
ANR	852008	Argument	fd		851700	0					
ANR	852009	Identifier	fd		851700	0					
ANR	852010	Argument	& sd		851700	1					
ANR	852011	UnaryOperationExpression	& sd		851700	0					
ANR	852012	UnaryOperator	&		851700	0					
ANR	852013	Identifier	sd		851700	1					
ANR	852014	Argument	FALSE		851700	2					
ANR	852015	Identifier	FALSE		851700	0					
ANR	852016	Argument	c		851700	3					
ANR	852017	Identifier	c		851700	0					
ANR	852018	Argument	ZeroDataBlockP		851700	4					
ANR	852019	Identifier	ZeroDataBlockP		851700	0					
ANR	852020	PrimaryExpression	0		851700	1					
ANR	852021	CompoundStatement		88:57:1662:1662	851700	1					
ANR	852022	ReturnType	static void		851700	1					
ANR	852023	Identifier	ReadImage		851700	2					
ANR	852024	ParameterList	"gdImagePtr im , gdIOCtx * fd , int len , int height , unsigned char ( * cmap ) [ 256 ] , int interlace , int * ZeroDataBlockP"		851700	3					
ANR	852025	Parameter	gdImagePtr im	553:10:12294:12306	851700	0	True				
ANR	852026	ParameterType	gdImagePtr		851700	0					
ANR	852027	Identifier	im		851700	1					
ANR	852028	Parameter	gdIOCtx * fd	553:25:12309:12319	851700	1	True				
ANR	852029	ParameterType	gdIOCtx *		851700	0					
ANR	852030	Identifier	fd		851700	1					
ANR	852031	Parameter	int len	553:38:12322:12328	851700	2	True				
ANR	852032	ParameterType	int		851700	0					
ANR	852033	Identifier	len		851700	1					
ANR	852034	Parameter	int height	553:47:12331:12340	851700	3	True				
ANR	852035	ParameterType	int		851700	0					
ANR	852036	Identifier	height		851700	1					
ANR	852037	Parameter	unsigned char ( * cmap ) [ 256 ]	553:59:12343:12368	851700	4	True				
ANR	852038	ParameterType	([ 256 ] unsigned char) *		851700	0					
ANR	852039	Identifier	cmap		851700	1					
ANR	852040	Parameter	int interlace	553:87:12371:12383	851700	5	True				
ANR	852041	ParameterType	int		851700	0					
ANR	852042	Identifier	interlace		851700	1					
ANR	852043	Parameter	int * ZeroDataBlockP	553:102:12386:12404	851700	6	True				
ANR	852044	ParameterType	int *		851700	0					
ANR	852045	Identifier	ZeroDataBlockP		851700	1					
ANR	852046	CFGEntryNode	ENTRY		851700		True				
ANR	852047	CFGExitNode	EXIT		851700		True				
ANR	852048	Symbol	* v		851700						
ANR	852049	Symbol	im -> colorsTotal		851700						
ANR	852050	Symbol	ypos		851700						
ANR	852051	Symbol	* im		851700						
ANR	852052	Symbol	interlace		851700						
ANR	852053	Symbol	LWZReadByte		851700						
ANR	852054	Symbol	* im -> open		851700						
ANR	852055	Symbol	CM_BLUE		851700						
ANR	852056	Symbol	* * cmap		851700						
ANR	852057	Symbol	sd		851700						
ANR	852058	Symbol	* cmap		851700						
ANR	852059	Symbol	* * im		851700						
ANR	852060	Symbol	len		851700						
ANR	852061	Symbol	* * CM_GREEN		851700						
ANR	852062	Symbol	CM_GREEN		851700						
ANR	852063	Symbol	MAX_LWZ_BITS		851700						
ANR	852064	Symbol	* im -> red		851700						
ANR	852065	Symbol	* * CM_RED		851700						
ANR	852066	Symbol	& sd		851700						
ANR	852067	Symbol	height		851700						
ANR	852068	Symbol	CM_RED		851700						
ANR	852069	Symbol	c		851700						
ANR	852070	Symbol	im -> red		851700						
ANR	852071	Symbol	im -> green		851700						
ANR	852072	Symbol	im		851700						
ANR	852073	Symbol	xpos		851700						
ANR	852074	Symbol	* CM_RED		851700						
ANR	852075	Symbol	pass		851700						
ANR	852076	Symbol	i		851700						
ANR	852077	Symbol	& c		851700						
ANR	852078	Symbol	TRUE		851700						
ANR	852079	Symbol	* CM_GREEN		851700						
ANR	852080	Symbol	* * CM_BLUE		851700						
ANR	852081	Symbol	* i		851700						
ANR	852082	Symbol	im -> blue		851700						
ANR	852083	Symbol	v		851700						
ANR	852084	Symbol	cmap		851700						
ANR	852085	Symbol	ReadOK		851700						
ANR	852086	Symbol	* CM_BLUE		851700						
ANR	852087	Symbol	im -> open		851700						
ANR	852088	Symbol	* im -> blue		851700						
ANR	852089	Symbol	FALSE		851700						
ANR	852090	Symbol	gdMaxColors		851700						
ANR	852091	Symbol	* im -> green		851700						
ANR	852092	Symbol	fd		851700						
ANR	852093	Symbol	ZeroDataBlockP		851700						
