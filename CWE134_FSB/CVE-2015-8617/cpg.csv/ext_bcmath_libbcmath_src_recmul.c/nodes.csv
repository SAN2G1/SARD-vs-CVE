command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	500306	File	data/converged/CVE-2015-8617_php-src/ext_bcmath_libbcmath_src_recmul.c								
ANR	500307	DeclStmt									
ANR	500308	Decl							int	int	mul_base_digits
ANR	500309	DeclStmt									
ANR	500310	Decl							int	int	length
ANR	500311	Decl							int	int	scale
ANR	500312	DeclStmt									
ANR	500313	Decl							char	char *	value
ANR	500314	DeclStmt									
ANR	500315	Decl							bc_num	bc_num	temp
ANR	500316	Function	_bc_simp_mul	80:0:2180:2969							
ANR	500317	FunctionDef	"_bc_simp_mul (bc_num n1 , int n1len , bc_num n2 , int n2len , bc_num * prod , int full_scale)"		500316	0					
ANR	500318	CompoundStatement		83:0:2287:2969	500316	0					
ANR	500319	IdentifierDeclStatement	"char * n1ptr , * n2ptr , * pvptr ;"	84:2:2291:2318	500316	0	True				
ANR	500320	IdentifierDecl	* n1ptr		500316	0					
ANR	500321	IdentifierDeclType	char *		500316	0					
ANR	500322	Identifier	n1ptr		500316	1					
ANR	500323	IdentifierDecl	* n2ptr		500316	1					
ANR	500324	IdentifierDeclType	char *		500316	0					
ANR	500325	Identifier	n2ptr		500316	1					
ANR	500326	IdentifierDecl	* pvptr		500316	2					
ANR	500327	IdentifierDeclType	char *		500316	0					
ANR	500328	Identifier	pvptr		500316	1					
ANR	500329	IdentifierDeclStatement	"char * n1end , * n2end ;"	85:2:2322:2341	500316	1	True				
ANR	500330	IdentifierDecl	* n1end		500316	0					
ANR	500331	IdentifierDeclType	char *		500316	0					
ANR	500332	Identifier	n1end		500316	1					
ANR	500333	IdentifierDecl	* n2end		500316	1					
ANR	500334	IdentifierDeclType	char *		500316	0					
ANR	500335	Identifier	n2end		500316	1					
ANR	500336	IdentifierDeclStatement	"int indx , sum , prodlen ;"	86:2:2377:2399	500316	2	True				
ANR	500337	IdentifierDecl	indx		500316	0					
ANR	500338	IdentifierDeclType	int		500316	0					
ANR	500339	Identifier	indx		500316	1					
ANR	500340	IdentifierDecl	sum		500316	1					
ANR	500341	IdentifierDeclType	int		500316	0					
ANR	500342	Identifier	sum		500316	1					
ANR	500343	IdentifierDecl	prodlen		500316	2					
ANR	500344	IdentifierDeclType	int		500316	0					
ANR	500345	Identifier	prodlen		500316	1					
ANR	500346	ExpressionStatement	prodlen = n1len + n2len + 1	88:2:2404:2427	500316	3	True				
ANR	500347	AssignmentExpression	prodlen = n1len + n2len + 1		500316	0		=			
ANR	500348	Identifier	prodlen		500316	0					
ANR	500349	AdditiveExpression	n1len + n2len + 1		500316	1		+			
ANR	500350	Identifier	n1len		500316	0					
ANR	500351	AdditiveExpression	n2len + 1		500316	1		+			
ANR	500352	Identifier	n2len		500316	0					
ANR	500353	PrimaryExpression	1		500316	1					
ANR	500354	ExpressionStatement	"* prod = bc_new_num ( prodlen , 0 )"	90:2:2432:2463	500316	4	True				
ANR	500355	AssignmentExpression	"* prod = bc_new_num ( prodlen , 0 )"		500316	0		=			
ANR	500356	UnaryOperationExpression	* prod		500316	0					
ANR	500357	UnaryOperator	*		500316	0					
ANR	500358	Identifier	prod		500316	1					
ANR	500359	CallExpression	"bc_new_num ( prodlen , 0 )"		500316	1					
ANR	500360	Callee	bc_new_num		500316	0					
ANR	500361	Identifier	bc_new_num		500316	0					
ANR	500362	ArgumentList	prodlen		500316	1					
ANR	500363	Argument	prodlen		500316	0					
ANR	500364	Identifier	prodlen		500316	0					
ANR	500365	Argument	0		500316	1					
ANR	500366	PrimaryExpression	0		500316	0					
ANR	500367	ExpressionStatement	n1end = ( char * ) ( n1 -> n_value + n1len - 1 )	92:2:2468:2510	500316	5	True				
ANR	500368	AssignmentExpression	n1end = ( char * ) ( n1 -> n_value + n1len - 1 )		500316	0		=			
ANR	500369	Identifier	n1end		500316	0					
ANR	500370	CastExpression	( char * ) ( n1 -> n_value + n1len - 1 )		500316	1					
ANR	500371	CastTarget	char *		500316	0					
ANR	500372	AdditiveExpression	n1 -> n_value + n1len - 1		500316	1		+			
ANR	500373	PtrMemberAccess	n1 -> n_value		500316	0					
ANR	500374	Identifier	n1		500316	0					
ANR	500375	Identifier	n_value		500316	1					
ANR	500376	AdditiveExpression	n1len - 1		500316	1		-			
ANR	500377	Identifier	n1len		500316	0					
ANR	500378	PrimaryExpression	1		500316	1					
ANR	500379	ExpressionStatement	n2end = ( char * ) ( n2 -> n_value + n2len - 1 )	93:2:2514:2556	500316	6	True				
ANR	500380	AssignmentExpression	n2end = ( char * ) ( n2 -> n_value + n2len - 1 )		500316	0		=			
ANR	500381	Identifier	n2end		500316	0					
ANR	500382	CastExpression	( char * ) ( n2 -> n_value + n2len - 1 )		500316	1					
ANR	500383	CastTarget	char *		500316	0					
ANR	500384	AdditiveExpression	n2 -> n_value + n2len - 1		500316	1		+			
ANR	500385	PtrMemberAccess	n2 -> n_value		500316	0					
ANR	500386	Identifier	n2		500316	0					
ANR	500387	Identifier	n_value		500316	1					
ANR	500388	AdditiveExpression	n2len - 1		500316	1		-			
ANR	500389	Identifier	n2len		500316	0					
ANR	500390	PrimaryExpression	1		500316	1					
ANR	500391	ExpressionStatement	pvptr = ( char * ) ( ( * prod ) -> n_value + prodlen - 1 )	94:2:2560:2609	500316	7	True				
ANR	500392	AssignmentExpression	pvptr = ( char * ) ( ( * prod ) -> n_value + prodlen - 1 )		500316	0		=			
ANR	500393	Identifier	pvptr		500316	0					
ANR	500394	CastExpression	( char * ) ( ( * prod ) -> n_value + prodlen - 1 )		500316	1					
ANR	500395	CastTarget	char *		500316	0					
ANR	500396	AdditiveExpression	( * prod ) -> n_value + prodlen - 1		500316	1		+			
ANR	500397	PtrMemberAccess	( * prod ) -> n_value		500316	0					
ANR	500398	UnaryOperationExpression	* prod		500316	0					
ANR	500399	UnaryOperator	*		500316	0					
ANR	500400	Identifier	prod		500316	1					
ANR	500401	Identifier	n_value		500316	1					
ANR	500402	AdditiveExpression	prodlen - 1		500316	1		-			
ANR	500403	Identifier	prodlen		500316	0					
ANR	500404	PrimaryExpression	1		500316	1					
ANR	500405	ExpressionStatement	sum = 0	95:2:2613:2620	500316	8	True				
ANR	500406	AssignmentExpression	sum = 0		500316	0		=			
ANR	500407	Identifier	sum		500316	0					
ANR	500408	PrimaryExpression	0		500316	1					
ANR	500409	ForStatement	for ( indx = 0 ; indx < prodlen - 1 ; indx ++ )		500316	9					
ANR	500410	ForInit	indx = 0 ;	98:7:2658:2666	500316	0	True				
ANR	500411	AssignmentExpression	indx = 0		500316	0		=			
ANR	500412	Identifier	indx		500316	0					
ANR	500413	PrimaryExpression	0		500316	1					
ANR	500414	Condition	indx < prodlen - 1	98:17:2668:2683	500316	1	True				
ANR	500415	RelationalExpression	indx < prodlen - 1		500316	0		<			
ANR	500416	Identifier	indx		500316	0					
ANR	500417	AdditiveExpression	prodlen - 1		500316	1		-			
ANR	500418	Identifier	prodlen		500316	0					
ANR	500419	PrimaryExpression	1		500316	1					
ANR	500420	PostIncDecOperationExpression	indx ++	98:35:2686:2691	500316	2	True				
ANR	500421	Identifier	indx		500316	0					
ANR	500422	IncDec	++		500316	1					
ANR	500423	CompoundStatement		17:4:410:410	500316	3					
ANR	500424	ExpressionStatement	"n1ptr = ( char * ) ( n1end - MAX ( 0 , indx - n2len + 1 ) )"	100:6:2706:2753	500316	0	True				
ANR	500425	AssignmentExpression	"n1ptr = ( char * ) ( n1end - MAX ( 0 , indx - n2len + 1 ) )"		500316	0		=			
ANR	500426	Identifier	n1ptr		500316	0					
ANR	500427	CastExpression	"( char * ) ( n1end - MAX ( 0 , indx - n2len + 1 ) )"		500316	1					
ANR	500428	CastTarget	char *		500316	0					
ANR	500429	AdditiveExpression	"n1end - MAX ( 0 , indx - n2len + 1 )"		500316	1		-			
ANR	500430	Identifier	n1end		500316	0					
ANR	500431	CallExpression	"MAX ( 0 , indx - n2len + 1 )"		500316	1					
ANR	500432	Callee	MAX		500316	0					
ANR	500433	Identifier	MAX		500316	0					
ANR	500434	ArgumentList	0		500316	1					
ANR	500435	Argument	0		500316	0					
ANR	500436	PrimaryExpression	0		500316	0					
ANR	500437	Argument	indx - n2len + 1		500316	1					
ANR	500438	AdditiveExpression	indx - n2len + 1		500316	0		-			
ANR	500439	Identifier	indx		500316	0					
ANR	500440	AdditiveExpression	n2len + 1		500316	1		+			
ANR	500441	Identifier	n2len		500316	0					
ANR	500442	PrimaryExpression	1		500316	1					
ANR	500443	ExpressionStatement	"n2ptr = ( char * ) ( n2end - MIN ( indx , n2len - 1 ) )"	101:6:2761:2806	500316	1	True				
ANR	500444	AssignmentExpression	"n2ptr = ( char * ) ( n2end - MIN ( indx , n2len - 1 ) )"		500316	0		=			
ANR	500445	Identifier	n2ptr		500316	0					
ANR	500446	CastExpression	"( char * ) ( n2end - MIN ( indx , n2len - 1 ) )"		500316	1					
ANR	500447	CastTarget	char *		500316	0					
ANR	500448	AdditiveExpression	"n2end - MIN ( indx , n2len - 1 )"		500316	1		-			
ANR	500449	Identifier	n2end		500316	0					
ANR	500450	CallExpression	"MIN ( indx , n2len - 1 )"		500316	1					
ANR	500451	Callee	MIN		500316	0					
ANR	500452	Identifier	MIN		500316	0					
ANR	500453	ArgumentList	indx		500316	1					
ANR	500454	Argument	indx		500316	0					
ANR	500455	Identifier	indx		500316	0					
ANR	500456	Argument	n2len - 1		500316	1					
ANR	500457	AdditiveExpression	n2len - 1		500316	0		-			
ANR	500458	Identifier	n2len		500316	0					
ANR	500459	PrimaryExpression	1		500316	1					
ANR	500460	WhileStatement	while ( ( n1ptr >= n1 -> n_value ) && ( n2ptr <= n2end ) )		500316	2					
ANR	500461	Condition	( n1ptr >= n1 -> n_value ) && ( n2ptr <= n2end )	102:13:2821:2862	500316	0	True				
ANR	500462	AndExpression	( n1ptr >= n1 -> n_value ) && ( n2ptr <= n2end )		500316	0		&&			
ANR	500463	RelationalExpression	n1ptr >= n1 -> n_value		500316	0		>=			
ANR	500464	Identifier	n1ptr		500316	0					
ANR	500465	PtrMemberAccess	n1 -> n_value		500316	1					
ANR	500466	Identifier	n1		500316	0					
ANR	500467	Identifier	n_value		500316	1					
ANR	500468	RelationalExpression	n2ptr <= n2end		500316	1		<=			
ANR	500469	Identifier	n2ptr		500316	0					
ANR	500470	Identifier	n2end		500316	1					
ANR	500471	ExpressionStatement	sum += * n1ptr -- * * n2ptr ++	103:1:2866:2892	500316	1	True				
ANR	500472	AssignmentExpression	sum += * n1ptr -- * * n2ptr ++		500316	0		+=			
ANR	500473	Identifier	sum		500316	0					
ANR	500474	MultiplicativeExpression	* n1ptr -- * * n2ptr ++		500316	1		*			
ANR	500475	UnaryOperationExpression	* n1ptr --		500316	0					
ANR	500476	UnaryOperator	*		500316	0					
ANR	500477	PostIncDecOperationExpression	n1ptr --		500316	1					
ANR	500478	Identifier	n1ptr		500316	0					
ANR	500479	IncDec	--		500316	1					
ANR	500480	UnaryOperationExpression	* n2ptr ++		500316	1					
ANR	500481	UnaryOperator	*		500316	0					
ANR	500482	PostIncDecOperationExpression	n2ptr ++		500316	1					
ANR	500483	Identifier	n2ptr		500316	0					
ANR	500484	IncDec	++		500316	1					
ANR	500485	ExpressionStatement	* pvptr -- = sum % BASE	104:6:2900:2921	500316	3	True				
ANR	500486	AssignmentExpression	* pvptr -- = sum % BASE		500316	0		=			
ANR	500487	UnaryOperationExpression	* pvptr --		500316	0					
ANR	500488	UnaryOperator	*		500316	0					
ANR	500489	PostIncDecOperationExpression	pvptr --		500316	1					
ANR	500490	Identifier	pvptr		500316	0					
ANR	500491	IncDec	--		500316	1					
ANR	500492	MultiplicativeExpression	sum % BASE		500316	1		%			
ANR	500493	Identifier	sum		500316	0					
ANR	500494	Identifier	BASE		500316	1					
ANR	500495	ExpressionStatement	sum = sum / BASE	105:6:2929:2945	500316	4	True				
ANR	500496	AssignmentExpression	sum = sum / BASE		500316	0		=			
ANR	500497	Identifier	sum		500316	0					
ANR	500498	MultiplicativeExpression	sum / BASE		500316	1		/			
ANR	500499	Identifier	sum		500316	0					
ANR	500500	Identifier	BASE		500316	1					
ANR	500501	ExpressionStatement	* pvptr = sum	107:2:2955:2967	500316	10	True				
ANR	500502	AssignmentExpression	* pvptr = sum		500316	0		=			
ANR	500503	UnaryOperationExpression	* pvptr		500316	0					
ANR	500504	UnaryOperator	*		500316	0					
ANR	500505	Identifier	pvptr		500316	1					
ANR	500506	Identifier	sum		500316	1					
ANR	500507	ReturnType	static void		500316	1					
ANR	500508	Identifier	_bc_simp_mul		500316	2					
ANR	500509	ParameterList	"bc_num n1 , int n1len , bc_num n2 , int n2len , bc_num * prod , int full_scale"		500316	3					
ANR	500510	Parameter	bc_num n1	81:14:2206:2214	500316	0	True				
ANR	500511	ParameterType	bc_num		500316	0					
ANR	500512	Identifier	n1		500316	1					
ANR	500513	Parameter	int n1len	81:25:2217:2225	500316	1	True				
ANR	500514	ParameterType	int		500316	0					
ANR	500515	Identifier	n1len		500316	1					
ANR	500516	Parameter	bc_num n2	81:36:2228:2236	500316	2	True				
ANR	500517	ParameterType	bc_num		500316	0					
ANR	500518	Identifier	n2		500316	1					
ANR	500519	Parameter	int n2len	81:47:2239:2247	500316	3	True				
ANR	500520	ParameterType	int		500316	0					
ANR	500521	Identifier	n2len		500316	1					
ANR	500522	Parameter	bc_num * prod	81:58:2250:2261	500316	4	True				
ANR	500523	ParameterType	bc_num *		500316	0					
ANR	500524	Identifier	prod		500316	1					
ANR	500525	Parameter	int full_scale	82:7:2271:2284	500316	5	True				
ANR	500526	ParameterType	int		500316	0					
ANR	500527	Identifier	full_scale		500316	1					
ANR	500528	CFGEntryNode	ENTRY		500316		True				
ANR	500529	CFGExitNode	EXIT		500316		True				
ANR	500530	Symbol	n1		500316						
ANR	500531	Symbol	n2		500316						
ANR	500532	Symbol	MAX		500316						
ANR	500533	Symbol	* n2ptr ++		500316						
ANR	500534	Symbol	indx		500316						
ANR	500535	Symbol	pvptr		500316						
ANR	500536	Symbol	sum		500316						
ANR	500537	Symbol	n2ptr		500316						
ANR	500538	Symbol	bc_new_num		500316						
ANR	500539	Symbol	BASE		500316						
ANR	500540	Symbol	full_scale		500316						
ANR	500541	Symbol	prodlen		500316						
ANR	500542	Symbol	n1len		500316						
ANR	500543	Symbol	n1 -> n_value		500316						
ANR	500544	Symbol	* * prod		500316						
ANR	500545	Symbol	( * prod ) -> n_value		500316						
ANR	500546	Symbol	n1end		500316						
ANR	500547	Symbol	n2 -> n_value		500316						
ANR	500548	Symbol	prod		500316						
ANR	500549	Symbol	* n2		500316						
ANR	500550	Symbol	* n1ptr --		500316						
ANR	500551	Symbol	* n1		500316						
ANR	500552	Symbol	n1ptr		500316						
ANR	500553	Symbol	* prod		500316						
ANR	500554	Symbol	* pvptr		500316						
ANR	500555	Symbol	n2end		500316						
ANR	500556	Symbol	MIN		500316						
ANR	500557	Symbol	n2len		500316						
ANR	500558	Symbol	* pvptr --		500316						
ANR	500559	Function	_bc_shift_addsub	115:0:3233:4332							
ANR	500560	FunctionDef	"_bc_shift_addsub (bc_num accum , bc_num val , int shift , int sub)"		500559	0					
ANR	500561	CompoundStatement		117:0:3309:4332	500559	0					
ANR	500562	IdentifierDeclStatement	"signed char * accp , * valp ;"	118:2:3313:3337	500559	0	True				
ANR	500563	IdentifierDecl	* accp		500559	0					
ANR	500564	IdentifierDeclType	signed char *		500559	0					
ANR	500565	Identifier	accp		500559	1					
ANR	500566	IdentifierDecl	* valp		500559	1					
ANR	500567	IdentifierDeclType	signed char *		500559	0					
ANR	500568	Identifier	valp		500559	1					
ANR	500569	IdentifierDeclStatement	"int count , carry ;"	119:2:3341:3358	500559	1	True				
ANR	500570	IdentifierDecl	count		500559	0					
ANR	500571	IdentifierDeclType	int		500559	0					
ANR	500572	Identifier	count		500559	1					
ANR	500573	IdentifierDecl	carry		500559	1					
ANR	500574	IdentifierDeclType	int		500559	0					
ANR	500575	Identifier	carry		500559	1					
ANR	500576	ExpressionStatement	count = val -> n_len	121:2:3363:3381	500559	2	True				
ANR	500577	AssignmentExpression	count = val -> n_len		500559	0		=			
ANR	500578	Identifier	count		500559	0					
ANR	500579	PtrMemberAccess	val -> n_len		500559	1					
ANR	500580	Identifier	val		500559	0					
ANR	500581	Identifier	n_len		500559	1					
ANR	500582	IfStatement	if ( val -> n_value [ 0 ] == 0 )		500559	3					
ANR	500583	Condition	val -> n_value [ 0 ] == 0	122:6:3389:3408	500559	0	True				
ANR	500584	EqualityExpression	val -> n_value [ 0 ] == 0		500559	0		==			
ANR	500585	ArrayIndexing	val -> n_value [ 0 ]		500559	0					
ANR	500586	PtrMemberAccess	val -> n_value		500559	0					
ANR	500587	Identifier	val		500559	0					
ANR	500588	Identifier	n_value		500559	1					
ANR	500589	PrimaryExpression	0		500559	1					
ANR	500590	PrimaryExpression	0		500559	1					
ANR	500591	ExpressionStatement	count --	123:4:3415:3422	500559	1	True				
ANR	500592	PostIncDecOperationExpression	count --		500559	0					
ANR	500593	Identifier	count		500559	0					
ANR	500594	IncDec	--		500559	1					
ANR	500595	ExpressionStatement	assert ( accum -> n_len + accum -> n_scale >= shift + count )	124:2:3426:3477	500559	4	True				
ANR	500596	CallExpression	assert ( accum -> n_len + accum -> n_scale >= shift + count )		500559	0					
ANR	500597	Callee	assert		500559	0					
ANR	500598	Identifier	assert		500559	0					
ANR	500599	ArgumentList	accum -> n_len + accum -> n_scale >= shift + count		500559	1					
ANR	500600	Argument	accum -> n_len + accum -> n_scale >= shift + count		500559	0					
ANR	500601	RelationalExpression	accum -> n_len + accum -> n_scale >= shift + count		500559	0		>=			
ANR	500602	AdditiveExpression	accum -> n_len + accum -> n_scale		500559	0		+			
ANR	500603	PtrMemberAccess	accum -> n_len		500559	0					
ANR	500604	Identifier	accum		500559	0					
ANR	500605	Identifier	n_len		500559	1					
ANR	500606	PtrMemberAccess	accum -> n_scale		500559	1					
ANR	500607	Identifier	accum		500559	0					
ANR	500608	Identifier	n_scale		500559	1					
ANR	500609	AdditiveExpression	shift + count		500559	1		+			
ANR	500610	Identifier	shift		500559	0					
ANR	500611	Identifier	count		500559	1					
ANR	500612	ExpressionStatement	accp = ( signed char * ) ( accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1 )	127:2:3517:3603	500559	5	True				
ANR	500613	AssignmentExpression	accp = ( signed char * ) ( accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1 )		500559	0		=			
ANR	500614	Identifier	accp		500559	0					
ANR	500615	CastExpression	( signed char * ) ( accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1 )		500559	1					
ANR	500616	CastTarget	signed char *		500559	0					
ANR	500617	AdditiveExpression	accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1		500559	1		+			
ANR	500618	PtrMemberAccess	accum -> n_value		500559	0					
ANR	500619	Identifier	accum		500559	0					
ANR	500620	Identifier	n_value		500559	1					
ANR	500621	AdditiveExpression	accum -> n_len + accum -> n_scale - shift - 1		500559	1		+			
ANR	500622	PtrMemberAccess	accum -> n_len		500559	0					
ANR	500623	Identifier	accum		500559	0					
ANR	500624	Identifier	n_len		500559	1					
ANR	500625	AdditiveExpression	accum -> n_scale - shift - 1		500559	1		-			
ANR	500626	PtrMemberAccess	accum -> n_scale		500559	0					
ANR	500627	Identifier	accum		500559	0					
ANR	500628	Identifier	n_scale		500559	1					
ANR	500629	AdditiveExpression	shift - 1		500559	1		-			
ANR	500630	Identifier	shift		500559	0					
ANR	500631	PrimaryExpression	1		500559	1					
ANR	500632	ExpressionStatement	valp = ( signed char * ) ( val -> n_value + val -> n_len - 1 )	129:2:3607:3660	500559	6	True				
ANR	500633	AssignmentExpression	valp = ( signed char * ) ( val -> n_value + val -> n_len - 1 )		500559	0		=			
ANR	500634	Identifier	valp		500559	0					
ANR	500635	CastExpression	( signed char * ) ( val -> n_value + val -> n_len - 1 )		500559	1					
ANR	500636	CastTarget	signed char *		500559	0					
ANR	500637	AdditiveExpression	val -> n_value + val -> n_len - 1		500559	1		+			
ANR	500638	PtrMemberAccess	val -> n_value		500559	0					
ANR	500639	Identifier	val		500559	0					
ANR	500640	Identifier	n_value		500559	1					
ANR	500641	AdditiveExpression	val -> n_len - 1		500559	1		-			
ANR	500642	PtrMemberAccess	val -> n_len		500559	0					
ANR	500643	Identifier	val		500559	0					
ANR	500644	Identifier	n_len		500559	1					
ANR	500645	PrimaryExpression	1		500559	1					
ANR	500646	ExpressionStatement	carry = 0	130:2:3664:3673	500559	7	True				
ANR	500647	AssignmentExpression	carry = 0		500559	0		=			
ANR	500648	Identifier	carry		500559	0					
ANR	500649	PrimaryExpression	0		500559	1					
ANR	500650	IfStatement	if ( sub )		500559	8					
ANR	500651	Condition	sub	132:6:3682:3684	500559	0	True				
ANR	500652	Identifier	sub		500559	0					
ANR	500653	CompoundStatement		16:11:377:377	500559	1					
ANR	500654	WhileStatement	while ( count -- )		500559	0					
ANR	500655	Condition	count --	134:11:3747:3753	500559	0	True				
ANR	500656	PostIncDecOperationExpression	count --		500559	0					
ANR	500657	Identifier	count		500559	0					
ANR	500658	IncDec	--		500559	1					
ANR	500659	CompoundStatement		18:20:446:446	500559	1					
ANR	500660	ExpressionStatement	* accp -= * valp -- + carry	135:6:3764:3788	500559	0	True				
ANR	500661	AssignmentExpression	* accp -= * valp -- + carry		500559	0		-=			
ANR	500662	UnaryOperationExpression	* accp		500559	0					
ANR	500663	UnaryOperator	*		500559	0					
ANR	500664	Identifier	accp		500559	1					
ANR	500665	AdditiveExpression	* valp -- + carry		500559	1		+			
ANR	500666	UnaryOperationExpression	* valp --		500559	0					
ANR	500667	UnaryOperator	*		500559	0					
ANR	500668	PostIncDecOperationExpression	valp --		500559	1					
ANR	500669	Identifier	valp		500559	0					
ANR	500670	IncDec	--		500559	1					
ANR	500671	Identifier	carry		500559	1					
ANR	500672	IfStatement	if ( * accp < 0 )		500559	1					
ANR	500673	Condition	* accp < 0	136:10:3800:3808	500559	0	True				
ANR	500674	RelationalExpression	* accp < 0		500559	0		<			
ANR	500675	UnaryOperationExpression	* accp		500559	0					
ANR	500676	UnaryOperator	*		500559	0					
ANR	500677	Identifier	accp		500559	1					
ANR	500678	PrimaryExpression	0		500559	1					
ANR	500679	CompoundStatement		20:21:501:501	500559	1					
ANR	500680	ExpressionStatement	carry = 1	137:1:3814:3823	500559	0	True				
ANR	500681	AssignmentExpression	carry = 1		500559	0		=			
ANR	500682	Identifier	carry		500559	0					
ANR	500683	PrimaryExpression	1		500559	1					
ANR	500684	ExpressionStatement	* accp -- += BASE	138:8:3833:3848	500559	1	True				
ANR	500685	AssignmentExpression	* accp -- += BASE		500559	0		+=			
ANR	500686	UnaryOperationExpression	* accp --		500559	0					
ANR	500687	UnaryOperator	*		500559	0					
ANR	500688	PostIncDecOperationExpression	accp --		500559	1					
ANR	500689	Identifier	accp		500559	0					
ANR	500690	IncDec	--		500559	1					
ANR	500691	Identifier	BASE		500559	1					
ANR	500692	ElseStatement	else		500559	0					
ANR	500693	CompoundStatement		23:13:553:553	500559	0					
ANR	500694	ExpressionStatement	carry = 0	140:1:3866:3875	500559	0	True				
ANR	500695	AssignmentExpression	carry = 0		500559	0		=			
ANR	500696	Identifier	carry		500559	0					
ANR	500697	PrimaryExpression	0		500559	1					
ANR	500698	ExpressionStatement	accp --	141:1:3878:3884	500559	1	True				
ANR	500699	PostIncDecOperationExpression	accp --		500559	0					
ANR	500700	Identifier	accp		500559	0					
ANR	500701	IncDec	--		500559	1					
ANR	500702	WhileStatement	while ( carry )		500559	1					
ANR	500703	Condition	carry	144:11:3911:3915	500559	0	True				
ANR	500704	Identifier	carry		500559	0					
ANR	500705	CompoundStatement		28:18:608:608	500559	1					
ANR	500706	ExpressionStatement	* accp -= carry	145:6:3926:3940	500559	0	True				
ANR	500707	AssignmentExpression	* accp -= carry		500559	0		-=			
ANR	500708	UnaryOperationExpression	* accp		500559	0					
ANR	500709	UnaryOperator	*		500559	0					
ANR	500710	Identifier	accp		500559	1					
ANR	500711	Identifier	carry		500559	1					
ANR	500712	IfStatement	if ( * accp < 0 )		500559	1					
ANR	500713	Condition	* accp < 0	146:10:3952:3960	500559	0	True				
ANR	500714	RelationalExpression	* accp < 0		500559	0		<			
ANR	500715	UnaryOperationExpression	* accp		500559	0					
ANR	500716	UnaryOperator	*		500559	0					
ANR	500717	Identifier	accp		500559	1					
ANR	500718	PrimaryExpression	0		500559	1					
ANR	500719	ExpressionStatement	* accp -- += BASE	147:1:3964:3979	500559	1	True				
ANR	500720	AssignmentExpression	* accp -- += BASE		500559	0		+=			
ANR	500721	UnaryOperationExpression	* accp --		500559	0					
ANR	500722	UnaryOperator	*		500559	0					
ANR	500723	PostIncDecOperationExpression	accp --		500559	1					
ANR	500724	Identifier	accp		500559	0					
ANR	500725	IncDec	--		500559	1					
ANR	500726	Identifier	BASE		500559	1					
ANR	500727	ElseStatement	else		500559	0					
ANR	500728	ExpressionStatement	carry = 0	149:1:3993:4002	500559	0	True				
ANR	500729	AssignmentExpression	carry = 0		500559	0		=			
ANR	500730	Identifier	carry		500559	0					
ANR	500731	PrimaryExpression	0		500559	1					
ANR	500732	ElseStatement	else		500559	0					
ANR	500733	CompoundStatement		35:9:709:709	500559	0					
ANR	500734	WhileStatement	while ( count -- )		500559	0					
ANR	500735	Condition	count --	153:11:4051:4057	500559	0	True				
ANR	500736	PostIncDecOperationExpression	count --		500559	0					
ANR	500737	Identifier	count		500559	0					
ANR	500738	IncDec	--		500559	1					
ANR	500739	CompoundStatement		37:20:750:750	500559	1					
ANR	500740	ExpressionStatement	* accp += * valp -- + carry	154:6:4068:4092	500559	0	True				
ANR	500741	AssignmentExpression	* accp += * valp -- + carry		500559	0		+=			
ANR	500742	UnaryOperationExpression	* accp		500559	0					
ANR	500743	UnaryOperator	*		500559	0					
ANR	500744	Identifier	accp		500559	1					
ANR	500745	AdditiveExpression	* valp -- + carry		500559	1		+			
ANR	500746	UnaryOperationExpression	* valp --		500559	0					
ANR	500747	UnaryOperator	*		500559	0					
ANR	500748	PostIncDecOperationExpression	valp --		500559	1					
ANR	500749	Identifier	valp		500559	0					
ANR	500750	IncDec	--		500559	1					
ANR	500751	Identifier	carry		500559	1					
ANR	500752	IfStatement	if ( * accp > ( BASE - 1 ) )		500559	1					
ANR	500753	Condition	* accp > ( BASE - 1 )	155:10:4104:4119	500559	0	True				
ANR	500754	RelationalExpression	* accp > ( BASE - 1 )		500559	0		>			
ANR	500755	UnaryOperationExpression	* accp		500559	0					
ANR	500756	UnaryOperator	*		500559	0					
ANR	500757	Identifier	accp		500559	1					
ANR	500758	AdditiveExpression	BASE - 1		500559	1		-			
ANR	500759	Identifier	BASE		500559	0					
ANR	500760	PrimaryExpression	1		500559	1					
ANR	500761	CompoundStatement		39:28:812:812	500559	1					
ANR	500762	ExpressionStatement	carry = 1	156:1:4125:4134	500559	0	True				
ANR	500763	AssignmentExpression	carry = 1		500559	0		=			
ANR	500764	Identifier	carry		500559	0					
ANR	500765	PrimaryExpression	1		500559	1					
ANR	500766	ExpressionStatement	* accp -- -= BASE	157:8:4144:4159	500559	1	True				
ANR	500767	AssignmentExpression	* accp -- -= BASE		500559	0		-=			
ANR	500768	UnaryOperationExpression	* accp --		500559	0					
ANR	500769	UnaryOperator	*		500559	0					
ANR	500770	PostIncDecOperationExpression	accp --		500559	1					
ANR	500771	Identifier	accp		500559	0					
ANR	500772	IncDec	--		500559	1					
ANR	500773	Identifier	BASE		500559	1					
ANR	500774	ElseStatement	else		500559	0					
ANR	500775	CompoundStatement		42:13:864:864	500559	0					
ANR	500776	ExpressionStatement	carry = 0	159:1:4177:4186	500559	0	True				
ANR	500777	AssignmentExpression	carry = 0		500559	0		=			
ANR	500778	Identifier	carry		500559	0					
ANR	500779	PrimaryExpression	0		500559	1					
ANR	500780	ExpressionStatement	accp --	160:1:4189:4195	500559	1	True				
ANR	500781	PostIncDecOperationExpression	accp --		500559	0					
ANR	500782	Identifier	accp		500559	0					
ANR	500783	IncDec	--		500559	1					
ANR	500784	WhileStatement	while ( carry )		500559	1					
ANR	500785	Condition	carry	163:11:4222:4226	500559	0	True				
ANR	500786	Identifier	carry		500559	0					
ANR	500787	CompoundStatement		47:18:919:919	500559	1					
ANR	500788	ExpressionStatement	* accp += carry	164:6:4237:4251	500559	0	True				
ANR	500789	AssignmentExpression	* accp += carry		500559	0		+=			
ANR	500790	UnaryOperationExpression	* accp		500559	0					
ANR	500791	UnaryOperator	*		500559	0					
ANR	500792	Identifier	accp		500559	1					
ANR	500793	Identifier	carry		500559	1					
ANR	500794	IfStatement	if ( * accp > ( BASE - 1 ) )		500559	1					
ANR	500795	Condition	* accp > ( BASE - 1 )	165:10:4263:4278	500559	0	True				
ANR	500796	RelationalExpression	* accp > ( BASE - 1 )		500559	0		>			
ANR	500797	UnaryOperationExpression	* accp		500559	0					
ANR	500798	UnaryOperator	*		500559	0					
ANR	500799	Identifier	accp		500559	1					
ANR	500800	AdditiveExpression	BASE - 1		500559	1		-			
ANR	500801	Identifier	BASE		500559	0					
ANR	500802	PrimaryExpression	1		500559	1					
ANR	500803	ExpressionStatement	* accp -- -= BASE	166:1:4282:4297	500559	1	True				
ANR	500804	AssignmentExpression	* accp -- -= BASE		500559	0		-=			
ANR	500805	UnaryOperationExpression	* accp --		500559	0					
ANR	500806	UnaryOperator	*		500559	0					
ANR	500807	PostIncDecOperationExpression	accp --		500559	1					
ANR	500808	Identifier	accp		500559	0					
ANR	500809	IncDec	--		500559	1					
ANR	500810	Identifier	BASE		500559	1					
ANR	500811	ElseStatement	else		500559	0					
ANR	500812	ExpressionStatement	carry = 0	168:1:4311:4320	500559	0	True				
ANR	500813	AssignmentExpression	carry = 0		500559	0		=			
ANR	500814	Identifier	carry		500559	0					
ANR	500815	PrimaryExpression	0		500559	1					
ANR	500816	ReturnType	static void		500559	1					
ANR	500817	Identifier	_bc_shift_addsub		500559	2					
ANR	500818	ParameterList	"bc_num accum , bc_num val , int shift , int sub"		500559	3					
ANR	500819	Parameter	bc_num accum	116:18:3263:3274	500559	0	True				
ANR	500820	ParameterType	bc_num		500559	0					
ANR	500821	Identifier	accum		500559	1					
ANR	500822	Parameter	bc_num val	116:32:3277:3286	500559	1	True				
ANR	500823	ParameterType	bc_num		500559	0					
ANR	500824	Identifier	val		500559	1					
ANR	500825	Parameter	int shift	116:44:3289:3297	500559	2	True				
ANR	500826	ParameterType	int		500559	0					
ANR	500827	Identifier	shift		500559	1					
ANR	500828	Parameter	int sub	116:55:3300:3306	500559	3	True				
ANR	500829	ParameterType	int		500559	0					
ANR	500830	Identifier	sub		500559	1					
ANR	500831	CFGEntryNode	ENTRY		500559		True				
ANR	500832	CFGExitNode	EXIT		500559		True				
ANR	500833	Symbol	val		500559						
ANR	500834	Symbol	sub		500559						
ANR	500835	Symbol	accp		500559						
ANR	500836	Symbol	* accum		500559						
ANR	500837	Symbol	shift		500559						
ANR	500838	Symbol	count		500559						
ANR	500839	Symbol	* accp --		500559						
ANR	500840	Symbol	* val		500559						
ANR	500841	Symbol	accum -> n_value		500559						
ANR	500842	Symbol	BASE		500559						
ANR	500843	Symbol	val -> n_value		500559						
ANR	500844	Symbol	accum -> n_len		500559						
ANR	500845	Symbol	* valp --		500559						
ANR	500846	Symbol	val -> n_len		500559						
ANR	500847	Symbol	* * val		500559						
ANR	500848	Symbol	valp		500559						
ANR	500849	Symbol	* accp		500559						
ANR	500850	Symbol	carry		500559						
ANR	500851	Symbol	accum		500559						
ANR	500852	Symbol	* val -> n_value		500559						
ANR	500853	Symbol	accum -> n_scale		500559						
ANR	500854	Function	_bc_rec_mul	181:0:4592:6831							
ANR	500855	FunctionDef	"_bc_rec_mul (bc_num u , int ulen , bc_num v , int vlen , bc_num * prod , int full_scale)"		500854	0					
ANR	500856	CompoundStatement		184:0:4693:6831	500854	0					
ANR	500857	IdentifierDeclStatement	"bc_num u0 , u1 , v0 , v1 ;"	185:2:4697:4718	500854	0	True				
ANR	500858	IdentifierDecl	u0		500854	0					
ANR	500859	IdentifierDeclType	bc_num		500854	0					
ANR	500860	Identifier	u0		500854	1					
ANR	500861	IdentifierDecl	u1		500854	1					
ANR	500862	IdentifierDeclType	bc_num		500854	0					
ANR	500863	Identifier	u1		500854	1					
ANR	500864	IdentifierDecl	v0		500854	2					
ANR	500865	IdentifierDeclType	bc_num		500854	0					
ANR	500866	Identifier	v0		500854	1					
ANR	500867	IdentifierDecl	v1		500854	3					
ANR	500868	IdentifierDeclType	bc_num		500854	0					
ANR	500869	Identifier	v1		500854	1					
ANR	500870	IdentifierDeclStatement	"bc_num m1 , m2 , m3 , d1 , d2 ;"	186:2:4722:4747	500854	1	True				
ANR	500871	IdentifierDecl	m1		500854	0					
ANR	500872	IdentifierDeclType	bc_num		500854	0					
ANR	500873	Identifier	m1		500854	1					
ANR	500874	IdentifierDecl	m2		500854	1					
ANR	500875	IdentifierDeclType	bc_num		500854	0					
ANR	500876	Identifier	m2		500854	1					
ANR	500877	IdentifierDecl	m3		500854	2					
ANR	500878	IdentifierDeclType	bc_num		500854	0					
ANR	500879	Identifier	m3		500854	1					
ANR	500880	IdentifierDecl	d1		500854	3					
ANR	500881	IdentifierDeclType	bc_num		500854	0					
ANR	500882	Identifier	d1		500854	1					
ANR	500883	IdentifierDecl	d2		500854	4					
ANR	500884	IdentifierDeclType	bc_num		500854	0					
ANR	500885	Identifier	d2		500854	1					
ANR	500886	IdentifierDeclStatement	"int n , prodlen , m1zero ;"	187:2:4751:4773	500854	2	True				
ANR	500887	IdentifierDecl	n		500854	0					
ANR	500888	IdentifierDeclType	int		500854	0					
ANR	500889	Identifier	n		500854	1					
ANR	500890	IdentifierDecl	prodlen		500854	1					
ANR	500891	IdentifierDeclType	int		500854	0					
ANR	500892	Identifier	prodlen		500854	1					
ANR	500893	IdentifierDecl	m1zero		500854	2					
ANR	500894	IdentifierDeclType	int		500854	0					
ANR	500895	Identifier	m1zero		500854	1					
ANR	500896	IdentifierDeclStatement	"int d1len , d2len ;"	188:2:4777:4793	500854	3	True				
ANR	500897	IdentifierDecl	d1len		500854	0					
ANR	500898	IdentifierDeclType	int		500854	0					
ANR	500899	Identifier	d1len		500854	1					
ANR	500900	IdentifierDecl	d2len		500854	1					
ANR	500901	IdentifierDeclType	int		500854	0					
ANR	500902	Identifier	d2len		500854	1					
ANR	500903	IfStatement	if ( ( ulen + vlen ) < mul_base_digits || ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS )		500854	4					
ANR	500904	Condition	( ulen + vlen ) < mul_base_digits || ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS	191:6:4821:4915	500854	0	True				
ANR	500905	OrExpression	( ulen + vlen ) < mul_base_digits || ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS		500854	0		||			
ANR	500906	RelationalExpression	( ulen + vlen ) < mul_base_digits		500854	0		<			
ANR	500907	AdditiveExpression	ulen + vlen		500854	0		+			
ANR	500908	Identifier	ulen		500854	0					
ANR	500909	Identifier	vlen		500854	1					
ANR	500910	Identifier	mul_base_digits		500854	1					
ANR	500911	OrExpression	ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS		500854	1		||			
ANR	500912	RelationalExpression	ulen < MUL_SMALL_DIGITS		500854	0		<			
ANR	500913	Identifier	ulen		500854	0					
ANR	500914	Identifier	MUL_SMALL_DIGITS		500854	1					
ANR	500915	RelationalExpression	vlen < MUL_SMALL_DIGITS		500854	1		<			
ANR	500916	Identifier	vlen		500854	0					
ANR	500917	Identifier	MUL_SMALL_DIGITS		500854	1					
ANR	500918	CompoundStatement		10:35:225:225	500854	1					
ANR	500919	ExpressionStatement	"_bc_simp_mul ( u , ulen , v , vlen , prod , full_scale )"	194:4:4925:4974	500854	0	True				
ANR	500920	CallExpression	"_bc_simp_mul ( u , ulen , v , vlen , prod , full_scale )"		500854	0					
ANR	500921	Callee	_bc_simp_mul		500854	0					
ANR	500922	Identifier	_bc_simp_mul		500854	0					
ANR	500923	ArgumentList	u		500854	1					
ANR	500924	Argument	u		500854	0					
ANR	500925	Identifier	u		500854	0					
ANR	500926	Argument	ulen		500854	1					
ANR	500927	Identifier	ulen		500854	0					
ANR	500928	Argument	v		500854	2					
ANR	500929	Identifier	v		500854	0					
ANR	500930	Argument	vlen		500854	3					
ANR	500931	Identifier	vlen		500854	0					
ANR	500932	Argument	prod		500854	4					
ANR	500933	Identifier	prod		500854	0					
ANR	500934	Argument	full_scale		500854	5					
ANR	500935	Identifier	full_scale		500854	0					
ANR	500936	ReturnStatement	return ;	195:4:4980:4986	500854	1	True				
ANR	500937	ExpressionStatement	"n = ( MAX ( ulen , vlen ) + 1 ) / 2"	199:2:5053:5080	500854	5	True				
ANR	500938	AssignmentExpression	"n = ( MAX ( ulen , vlen ) + 1 ) / 2"		500854	0		=			
ANR	500939	Identifier	n		500854	0					
ANR	500940	MultiplicativeExpression	"( MAX ( ulen , vlen ) + 1 ) / 2"		500854	1		/			
ANR	500941	AdditiveExpression	"MAX ( ulen , vlen ) + 1"		500854	0		+			
ANR	500942	CallExpression	"MAX ( ulen , vlen )"		500854	0					
ANR	500943	Callee	MAX		500854	0					
ANR	500944	Identifier	MAX		500854	0					
ANR	500945	ArgumentList	ulen		500854	1					
ANR	500946	Argument	ulen		500854	0					
ANR	500947	Identifier	ulen		500854	0					
ANR	500948	Argument	vlen		500854	1					
ANR	500949	Identifier	vlen		500854	0					
ANR	500950	PrimaryExpression	1		500854	1					
ANR	500951	PrimaryExpression	2		500854	1					
ANR	500952	IfStatement	if ( ulen < n )		500854	6					
ANR	500953	Condition	ulen < n	202:6:5112:5119	500854	0	True				
ANR	500954	RelationalExpression	ulen < n		500854	0		<			
ANR	500955	Identifier	ulen		500854	0					
ANR	500956	Identifier	n		500854	1					
ANR	500957	CompoundStatement		19:16:428:428	500854	1					
ANR	500958	ExpressionStatement	u1 = bc_copy_num ( BCG ( _zero_ ) )	203:4:5128:5158	500854	0	True				
ANR	500959	AssignmentExpression	u1 = bc_copy_num ( BCG ( _zero_ ) )		500854	0		=			
ANR	500960	Identifier	u1		500854	0					
ANR	500961	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		500854	1					
ANR	500962	Callee	bc_copy_num		500854	0					
ANR	500963	Identifier	bc_copy_num		500854	0					
ANR	500964	ArgumentList	BCG ( _zero_ )		500854	1					
ANR	500965	Argument	BCG ( _zero_ )		500854	0					
ANR	500966	CallExpression	BCG ( _zero_ )		500854	0					
ANR	500967	Callee	BCG		500854	0					
ANR	500968	Identifier	BCG		500854	0					
ANR	500969	ArgumentList	_zero_		500854	1					
ANR	500970	Argument	_zero_		500854	0					
ANR	500971	Identifier	_zero_		500854	0					
ANR	500972	ExpressionStatement	"u0 = new_sub_num ( ulen , 0 , u -> n_value )"	204:4:5164:5201	500854	1	True				
ANR	500973	AssignmentExpression	"u0 = new_sub_num ( ulen , 0 , u -> n_value )"		500854	0		=			
ANR	500974	Identifier	u0		500854	0					
ANR	500975	CallExpression	"new_sub_num ( ulen , 0 , u -> n_value )"		500854	1					
ANR	500976	Callee	new_sub_num		500854	0					
ANR	500977	Identifier	new_sub_num		500854	0					
ANR	500978	ArgumentList	ulen		500854	1					
ANR	500979	Argument	ulen		500854	0					
ANR	500980	Identifier	ulen		500854	0					
ANR	500981	Argument	0		500854	1					
ANR	500982	PrimaryExpression	0		500854	0					
ANR	500983	Argument	u -> n_value		500854	2					
ANR	500984	PtrMemberAccess	u -> n_value		500854	0					
ANR	500985	Identifier	u		500854	0					
ANR	500986	Identifier	n_value		500854	1					
ANR	500987	ElseStatement	else		500854	0					
ANR	500988	CompoundStatement		22:9:518:518	500854	0					
ANR	500989	ExpressionStatement	"u1 = new_sub_num ( ulen - n , 0 , u -> n_value )"	206:4:5218:5258	500854	0	True				
ANR	500990	AssignmentExpression	"u1 = new_sub_num ( ulen - n , 0 , u -> n_value )"		500854	0		=			
ANR	500991	Identifier	u1		500854	0					
ANR	500992	CallExpression	"new_sub_num ( ulen - n , 0 , u -> n_value )"		500854	1					
ANR	500993	Callee	new_sub_num		500854	0					
ANR	500994	Identifier	new_sub_num		500854	0					
ANR	500995	ArgumentList	ulen - n		500854	1					
ANR	500996	Argument	ulen - n		500854	0					
ANR	500997	AdditiveExpression	ulen - n		500854	0		-			
ANR	500998	Identifier	ulen		500854	0					
ANR	500999	Identifier	n		500854	1					
ANR	501000	Argument	0		500854	1					
ANR	501001	PrimaryExpression	0		500854	0					
ANR	501002	Argument	u -> n_value		500854	2					
ANR	501003	PtrMemberAccess	u -> n_value		500854	0					
ANR	501004	Identifier	u		500854	0					
ANR	501005	Identifier	n_value		500854	1					
ANR	501006	ExpressionStatement	"u0 = new_sub_num ( n , 0 , u -> n_value + ulen - n )"	207:4:5264:5306	500854	1	True				
ANR	501007	AssignmentExpression	"u0 = new_sub_num ( n , 0 , u -> n_value + ulen - n )"		500854	0		=			
ANR	501008	Identifier	u0		500854	0					
ANR	501009	CallExpression	"new_sub_num ( n , 0 , u -> n_value + ulen - n )"		500854	1					
ANR	501010	Callee	new_sub_num		500854	0					
ANR	501011	Identifier	new_sub_num		500854	0					
ANR	501012	ArgumentList	n		500854	1					
ANR	501013	Argument	n		500854	0					
ANR	501014	Identifier	n		500854	0					
ANR	501015	Argument	0		500854	1					
ANR	501016	PrimaryExpression	0		500854	0					
ANR	501017	Argument	u -> n_value + ulen - n		500854	2					
ANR	501018	AdditiveExpression	u -> n_value + ulen - n		500854	0		+			
ANR	501019	PtrMemberAccess	u -> n_value		500854	0					
ANR	501020	Identifier	u		500854	0					
ANR	501021	Identifier	n_value		500854	1					
ANR	501022	AdditiveExpression	ulen - n		500854	1		-			
ANR	501023	Identifier	ulen		500854	0					
ANR	501024	Identifier	n		500854	1					
ANR	501025	IfStatement	if ( vlen < n )		500854	7					
ANR	501026	Condition	vlen < n	209:6:5318:5325	500854	0	True				
ANR	501027	RelationalExpression	vlen < n		500854	0		<			
ANR	501028	Identifier	vlen		500854	0					
ANR	501029	Identifier	n		500854	1					
ANR	501030	CompoundStatement		26:16:634:634	500854	1					
ANR	501031	ExpressionStatement	v1 = bc_copy_num ( BCG ( _zero_ ) )	210:4:5334:5364	500854	0	True				
ANR	501032	AssignmentExpression	v1 = bc_copy_num ( BCG ( _zero_ ) )		500854	0		=			
ANR	501033	Identifier	v1		500854	0					
ANR	501034	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		500854	1					
ANR	501035	Callee	bc_copy_num		500854	0					
ANR	501036	Identifier	bc_copy_num		500854	0					
ANR	501037	ArgumentList	BCG ( _zero_ )		500854	1					
ANR	501038	Argument	BCG ( _zero_ )		500854	0					
ANR	501039	CallExpression	BCG ( _zero_ )		500854	0					
ANR	501040	Callee	BCG		500854	0					
ANR	501041	Identifier	BCG		500854	0					
ANR	501042	ArgumentList	_zero_		500854	1					
ANR	501043	Argument	_zero_		500854	0					
ANR	501044	Identifier	_zero_		500854	0					
ANR	501045	ExpressionStatement	"v0 = new_sub_num ( vlen , 0 , v -> n_value )"	211:4:5370:5407	500854	1	True				
ANR	501046	AssignmentExpression	"v0 = new_sub_num ( vlen , 0 , v -> n_value )"		500854	0		=			
ANR	501047	Identifier	v0		500854	0					
ANR	501048	CallExpression	"new_sub_num ( vlen , 0 , v -> n_value )"		500854	1					
ANR	501049	Callee	new_sub_num		500854	0					
ANR	501050	Identifier	new_sub_num		500854	0					
ANR	501051	ArgumentList	vlen		500854	1					
ANR	501052	Argument	vlen		500854	0					
ANR	501053	Identifier	vlen		500854	0					
ANR	501054	Argument	0		500854	1					
ANR	501055	PrimaryExpression	0		500854	0					
ANR	501056	Argument	v -> n_value		500854	2					
ANR	501057	PtrMemberAccess	v -> n_value		500854	0					
ANR	501058	Identifier	v		500854	0					
ANR	501059	Identifier	n_value		500854	1					
ANR	501060	ElseStatement	else		500854	0					
ANR	501061	CompoundStatement		29:9:724:724	500854	0					
ANR	501062	ExpressionStatement	"v1 = new_sub_num ( vlen - n , 0 , v -> n_value )"	213:4:5424:5464	500854	0	True				
ANR	501063	AssignmentExpression	"v1 = new_sub_num ( vlen - n , 0 , v -> n_value )"		500854	0		=			
ANR	501064	Identifier	v1		500854	0					
ANR	501065	CallExpression	"new_sub_num ( vlen - n , 0 , v -> n_value )"		500854	1					
ANR	501066	Callee	new_sub_num		500854	0					
ANR	501067	Identifier	new_sub_num		500854	0					
ANR	501068	ArgumentList	vlen - n		500854	1					
ANR	501069	Argument	vlen - n		500854	0					
ANR	501070	AdditiveExpression	vlen - n		500854	0		-			
ANR	501071	Identifier	vlen		500854	0					
ANR	501072	Identifier	n		500854	1					
ANR	501073	Argument	0		500854	1					
ANR	501074	PrimaryExpression	0		500854	0					
ANR	501075	Argument	v -> n_value		500854	2					
ANR	501076	PtrMemberAccess	v -> n_value		500854	0					
ANR	501077	Identifier	v		500854	0					
ANR	501078	Identifier	n_value		500854	1					
ANR	501079	ExpressionStatement	"v0 = new_sub_num ( n , 0 , v -> n_value + vlen - n )"	214:4:5470:5512	500854	1	True				
ANR	501080	AssignmentExpression	"v0 = new_sub_num ( n , 0 , v -> n_value + vlen - n )"		500854	0		=			
ANR	501081	Identifier	v0		500854	0					
ANR	501082	CallExpression	"new_sub_num ( n , 0 , v -> n_value + vlen - n )"		500854	1					
ANR	501083	Callee	new_sub_num		500854	0					
ANR	501084	Identifier	new_sub_num		500854	0					
ANR	501085	ArgumentList	n		500854	1					
ANR	501086	Argument	n		500854	0					
ANR	501087	Identifier	n		500854	0					
ANR	501088	Argument	0		500854	1					
ANR	501089	PrimaryExpression	0		500854	0					
ANR	501090	Argument	v -> n_value + vlen - n		500854	2					
ANR	501091	AdditiveExpression	v -> n_value + vlen - n		500854	0		+			
ANR	501092	PtrMemberAccess	v -> n_value		500854	0					
ANR	501093	Identifier	v		500854	0					
ANR	501094	Identifier	n_value		500854	1					
ANR	501095	AdditiveExpression	vlen - n		500854	1		-			
ANR	501096	Identifier	vlen		500854	0					
ANR	501097	Identifier	n		500854	1					
ANR	501098	ExpressionStatement	_bc_rm_leading_zeros ( u1 )	216:2:5522:5547	500854	8	True				
ANR	501099	CallExpression	_bc_rm_leading_zeros ( u1 )		500854	0					
ANR	501100	Callee	_bc_rm_leading_zeros		500854	0					
ANR	501101	Identifier	_bc_rm_leading_zeros		500854	0					
ANR	501102	ArgumentList	u1		500854	1					
ANR	501103	Argument	u1		500854	0					
ANR	501104	Identifier	u1		500854	0					
ANR	501105	ExpressionStatement	_bc_rm_leading_zeros ( u0 )	217:2:5551:5576	500854	9	True				
ANR	501106	CallExpression	_bc_rm_leading_zeros ( u0 )		500854	0					
ANR	501107	Callee	_bc_rm_leading_zeros		500854	0					
ANR	501108	Identifier	_bc_rm_leading_zeros		500854	0					
ANR	501109	ArgumentList	u0		500854	1					
ANR	501110	Argument	u0		500854	0					
ANR	501111	Identifier	u0		500854	0					
ANR	501112	ExpressionStatement	_bc_rm_leading_zeros ( v1 )	218:2:5580:5605	500854	10	True				
ANR	501113	CallExpression	_bc_rm_leading_zeros ( v1 )		500854	0					
ANR	501114	Callee	_bc_rm_leading_zeros		500854	0					
ANR	501115	Identifier	_bc_rm_leading_zeros		500854	0					
ANR	501116	ArgumentList	v1		500854	1					
ANR	501117	Argument	v1		500854	0					
ANR	501118	Identifier	v1		500854	0					
ANR	501119	ExpressionStatement	_bc_rm_leading_zeros ( v0 )	219:2:5609:5634	500854	11	True				
ANR	501120	CallExpression	_bc_rm_leading_zeros ( v0 )		500854	0					
ANR	501121	Callee	_bc_rm_leading_zeros		500854	0					
ANR	501122	Identifier	_bc_rm_leading_zeros		500854	0					
ANR	501123	ArgumentList	v0		500854	1					
ANR	501124	Argument	v0		500854	0					
ANR	501125	Identifier	v0		500854	0					
ANR	501126	ExpressionStatement	m1zero = bc_is_zero ( u1 ) || bc_is_zero ( v1 )	221:2:5639:5680	500854	12	True				
ANR	501127	AssignmentExpression	m1zero = bc_is_zero ( u1 ) || bc_is_zero ( v1 )		500854	0		=			
ANR	501128	Identifier	m1zero		500854	0					
ANR	501129	OrExpression	bc_is_zero ( u1 ) || bc_is_zero ( v1 )		500854	1		||			
ANR	501130	CallExpression	bc_is_zero ( u1 )		500854	0					
ANR	501131	Callee	bc_is_zero		500854	0					
ANR	501132	Identifier	bc_is_zero		500854	0					
ANR	501133	ArgumentList	u1		500854	1					
ANR	501134	Argument	u1		500854	0					
ANR	501135	Identifier	u1		500854	0					
ANR	501136	CallExpression	bc_is_zero ( v1 )		500854	1					
ANR	501137	Callee	bc_is_zero		500854	0					
ANR	501138	Identifier	bc_is_zero		500854	0					
ANR	501139	ArgumentList	v1		500854	1					
ANR	501140	Argument	v1		500854	0					
ANR	501141	Identifier	v1		500854	0					
ANR	501142	ExpressionStatement	bc_init_num ( & d1 )	225:2:5720:5736	500854	13	True				
ANR	501143	CallExpression	bc_init_num ( & d1 )		500854	0					
ANR	501144	Callee	bc_init_num		500854	0					
ANR	501145	Identifier	bc_init_num		500854	0					
ANR	501146	ArgumentList	& d1		500854	1					
ANR	501147	Argument	& d1		500854	0					
ANR	501148	UnaryOperationExpression	& d1		500854	0					
ANR	501149	UnaryOperator	&		500854	0					
ANR	501150	Identifier	d1		500854	1					
ANR	501151	ExpressionStatement	bc_init_num ( & d2 )	226:2:5740:5756	500854	14	True				
ANR	501152	CallExpression	bc_init_num ( & d2 )		500854	0					
ANR	501153	Callee	bc_init_num		500854	0					
ANR	501154	Identifier	bc_init_num		500854	0					
ANR	501155	ArgumentList	& d2		500854	1					
ANR	501156	Argument	& d2		500854	0					
ANR	501157	UnaryOperationExpression	& d2		500854	0					
ANR	501158	UnaryOperator	&		500854	0					
ANR	501159	Identifier	d2		500854	1					
ANR	501160	ExpressionStatement	"bc_sub ( u1 , u0 , & d1 , 0 )"	227:2:5760:5783	500854	15	True				
ANR	501161	CallExpression	"bc_sub ( u1 , u0 , & d1 , 0 )"		500854	0					
ANR	501162	Callee	bc_sub		500854	0					
ANR	501163	Identifier	bc_sub		500854	0					
ANR	501164	ArgumentList	u1		500854	1					
ANR	501165	Argument	u1		500854	0					
ANR	501166	Identifier	u1		500854	0					
ANR	501167	Argument	u0		500854	1					
ANR	501168	Identifier	u0		500854	0					
ANR	501169	Argument	& d1		500854	2					
ANR	501170	UnaryOperationExpression	& d1		500854	0					
ANR	501171	UnaryOperator	&		500854	0					
ANR	501172	Identifier	d1		500854	1					
ANR	501173	Argument	0		500854	3					
ANR	501174	PrimaryExpression	0		500854	0					
ANR	501175	ExpressionStatement	d1len = d1 -> n_len	228:2:5787:5804	500854	16	True				
ANR	501176	AssignmentExpression	d1len = d1 -> n_len		500854	0		=			
ANR	501177	Identifier	d1len		500854	0					
ANR	501178	PtrMemberAccess	d1 -> n_len		500854	1					
ANR	501179	Identifier	d1		500854	0					
ANR	501180	Identifier	n_len		500854	1					
ANR	501181	ExpressionStatement	"bc_sub ( v0 , v1 , & d2 , 0 )"	229:2:5808:5831	500854	17	True				
ANR	501182	CallExpression	"bc_sub ( v0 , v1 , & d2 , 0 )"		500854	0					
ANR	501183	Callee	bc_sub		500854	0					
ANR	501184	Identifier	bc_sub		500854	0					
ANR	501185	ArgumentList	v0		500854	1					
ANR	501186	Argument	v0		500854	0					
ANR	501187	Identifier	v0		500854	0					
ANR	501188	Argument	v1		500854	1					
ANR	501189	Identifier	v1		500854	0					
ANR	501190	Argument	& d2		500854	2					
ANR	501191	UnaryOperationExpression	& d2		500854	0					
ANR	501192	UnaryOperator	&		500854	0					
ANR	501193	Identifier	d2		500854	1					
ANR	501194	Argument	0		500854	3					
ANR	501195	PrimaryExpression	0		500854	0					
ANR	501196	ExpressionStatement	d2len = d2 -> n_len	230:2:5835:5852	500854	18	True				
ANR	501197	AssignmentExpression	d2len = d2 -> n_len		500854	0		=			
ANR	501198	Identifier	d2len		500854	0					
ANR	501199	PtrMemberAccess	d2 -> n_len		500854	1					
ANR	501200	Identifier	d2		500854	0					
ANR	501201	Identifier	n_len		500854	1					
ANR	501202	IfStatement	if ( m1zero )		500854	19					
ANR	501203	Condition	m1zero	234:6:5912:5917	500854	0	True				
ANR	501204	Identifier	m1zero		500854	0					
ANR	501205	ExpressionStatement	m1 = bc_copy_num ( BCG ( _zero_ ) )	235:4:5924:5954	500854	1	True				
ANR	501206	AssignmentExpression	m1 = bc_copy_num ( BCG ( _zero_ ) )		500854	0		=			
ANR	501207	Identifier	m1		500854	0					
ANR	501208	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		500854	1					
ANR	501209	Callee	bc_copy_num		500854	0					
ANR	501210	Identifier	bc_copy_num		500854	0					
ANR	501211	ArgumentList	BCG ( _zero_ )		500854	1					
ANR	501212	Argument	BCG ( _zero_ )		500854	0					
ANR	501213	CallExpression	BCG ( _zero_ )		500854	0					
ANR	501214	Callee	BCG		500854	0					
ANR	501215	Identifier	BCG		500854	0					
ANR	501216	ArgumentList	_zero_		500854	1					
ANR	501217	Argument	_zero_		500854	0					
ANR	501218	Identifier	_zero_		500854	0					
ANR	501219	ElseStatement	else		500854	0					
ANR	501220	ExpressionStatement	"_bc_rec_mul ( u1 , u1 -> n_len , v1 , v1 -> n_len , & m1 , 0 )"	237:4:5967:6017	500854	0	True				
ANR	501221	CallExpression	"_bc_rec_mul ( u1 , u1 -> n_len , v1 , v1 -> n_len , & m1 , 0 )"		500854	0					
ANR	501222	Callee	_bc_rec_mul		500854	0					
ANR	501223	Identifier	_bc_rec_mul		500854	0					
ANR	501224	ArgumentList	u1		500854	1					
ANR	501225	Argument	u1		500854	0					
ANR	501226	Identifier	u1		500854	0					
ANR	501227	Argument	u1 -> n_len		500854	1					
ANR	501228	PtrMemberAccess	u1 -> n_len		500854	0					
ANR	501229	Identifier	u1		500854	0					
ANR	501230	Identifier	n_len		500854	1					
ANR	501231	Argument	v1		500854	2					
ANR	501232	Identifier	v1		500854	0					
ANR	501233	Argument	v1 -> n_len		500854	3					
ANR	501234	PtrMemberAccess	v1 -> n_len		500854	0					
ANR	501235	Identifier	v1		500854	0					
ANR	501236	Identifier	n_len		500854	1					
ANR	501237	Argument	& m1		500854	4					
ANR	501238	UnaryOperationExpression	& m1		500854	0					
ANR	501239	UnaryOperator	&		500854	0					
ANR	501240	Identifier	m1		500854	1					
ANR	501241	Argument	0		500854	5					
ANR	501242	PrimaryExpression	0		500854	0					
ANR	501243	IfStatement	if ( bc_is_zero ( d1 ) || bc_is_zero ( d2 ) )		500854	20					
ANR	501244	Condition	bc_is_zero ( d1 ) || bc_is_zero ( d2 )	239:6:6026:6057	500854	0	True				
ANR	501245	OrExpression	bc_is_zero ( d1 ) || bc_is_zero ( d2 )		500854	0		||			
ANR	501246	CallExpression	bc_is_zero ( d1 )		500854	0					
ANR	501247	Callee	bc_is_zero		500854	0					
ANR	501248	Identifier	bc_is_zero		500854	0					
ANR	501249	ArgumentList	d1		500854	1					
ANR	501250	Argument	d1		500854	0					
ANR	501251	Identifier	d1		500854	0					
ANR	501252	CallExpression	bc_is_zero ( d2 )		500854	1					
ANR	501253	Callee	bc_is_zero		500854	0					
ANR	501254	Identifier	bc_is_zero		500854	0					
ANR	501255	ArgumentList	d2		500854	1					
ANR	501256	Argument	d2		500854	0					
ANR	501257	Identifier	d2		500854	0					
ANR	501258	ExpressionStatement	m2 = bc_copy_num ( BCG ( _zero_ ) )	240:4:6064:6094	500854	1	True				
ANR	501259	AssignmentExpression	m2 = bc_copy_num ( BCG ( _zero_ ) )		500854	0		=			
ANR	501260	Identifier	m2		500854	0					
ANR	501261	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		500854	1					
ANR	501262	Callee	bc_copy_num		500854	0					
ANR	501263	Identifier	bc_copy_num		500854	0					
ANR	501264	ArgumentList	BCG ( _zero_ )		500854	1					
ANR	501265	Argument	BCG ( _zero_ )		500854	0					
ANR	501266	CallExpression	BCG ( _zero_ )		500854	0					
ANR	501267	Callee	BCG		500854	0					
ANR	501268	Identifier	BCG		500854	0					
ANR	501269	ArgumentList	_zero_		500854	1					
ANR	501270	Argument	_zero_		500854	0					
ANR	501271	Identifier	_zero_		500854	0					
ANR	501272	ElseStatement	else		500854	0					
ANR	501273	ExpressionStatement	"_bc_rec_mul ( d1 , d1len , d2 , d2len , & m2 , 0 )"	242:4:6107:6149	500854	0	True				
ANR	501274	CallExpression	"_bc_rec_mul ( d1 , d1len , d2 , d2len , & m2 , 0 )"		500854	0					
ANR	501275	Callee	_bc_rec_mul		500854	0					
ANR	501276	Identifier	_bc_rec_mul		500854	0					
ANR	501277	ArgumentList	d1		500854	1					
ANR	501278	Argument	d1		500854	0					
ANR	501279	Identifier	d1		500854	0					
ANR	501280	Argument	d1len		500854	1					
ANR	501281	Identifier	d1len		500854	0					
ANR	501282	Argument	d2		500854	2					
ANR	501283	Identifier	d2		500854	0					
ANR	501284	Argument	d2len		500854	3					
ANR	501285	Identifier	d2len		500854	0					
ANR	501286	Argument	& m2		500854	4					
ANR	501287	UnaryOperationExpression	& m2		500854	0					
ANR	501288	UnaryOperator	&		500854	0					
ANR	501289	Identifier	m2		500854	1					
ANR	501290	Argument	0		500854	5					
ANR	501291	PrimaryExpression	0		500854	0					
ANR	501292	IfStatement	if ( bc_is_zero ( u0 ) || bc_is_zero ( v0 ) )		500854	21					
ANR	501293	Condition	bc_is_zero ( u0 ) || bc_is_zero ( v0 )	244:6:6158:6189	500854	0	True				
ANR	501294	OrExpression	bc_is_zero ( u0 ) || bc_is_zero ( v0 )		500854	0		||			
ANR	501295	CallExpression	bc_is_zero ( u0 )		500854	0					
ANR	501296	Callee	bc_is_zero		500854	0					
ANR	501297	Identifier	bc_is_zero		500854	0					
ANR	501298	ArgumentList	u0		500854	1					
ANR	501299	Argument	u0		500854	0					
ANR	501300	Identifier	u0		500854	0					
ANR	501301	CallExpression	bc_is_zero ( v0 )		500854	1					
ANR	501302	Callee	bc_is_zero		500854	0					
ANR	501303	Identifier	bc_is_zero		500854	0					
ANR	501304	ArgumentList	v0		500854	1					
ANR	501305	Argument	v0		500854	0					
ANR	501306	Identifier	v0		500854	0					
ANR	501307	ExpressionStatement	m3 = bc_copy_num ( BCG ( _zero_ ) )	245:4:6196:6226	500854	1	True				
ANR	501308	AssignmentExpression	m3 = bc_copy_num ( BCG ( _zero_ ) )		500854	0		=			
ANR	501309	Identifier	m3		500854	0					
ANR	501310	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		500854	1					
ANR	501311	Callee	bc_copy_num		500854	0					
ANR	501312	Identifier	bc_copy_num		500854	0					
ANR	501313	ArgumentList	BCG ( _zero_ )		500854	1					
ANR	501314	Argument	BCG ( _zero_ )		500854	0					
ANR	501315	CallExpression	BCG ( _zero_ )		500854	0					
ANR	501316	Callee	BCG		500854	0					
ANR	501317	Identifier	BCG		500854	0					
ANR	501318	ArgumentList	_zero_		500854	1					
ANR	501319	Argument	_zero_		500854	0					
ANR	501320	Identifier	_zero_		500854	0					
ANR	501321	ElseStatement	else		500854	0					
ANR	501322	ExpressionStatement	"_bc_rec_mul ( u0 , u0 -> n_len , v0 , v0 -> n_len , & m3 , 0 )"	247:4:6239:6289	500854	0	True				
ANR	501323	CallExpression	"_bc_rec_mul ( u0 , u0 -> n_len , v0 , v0 -> n_len , & m3 , 0 )"		500854	0					
ANR	501324	Callee	_bc_rec_mul		500854	0					
ANR	501325	Identifier	_bc_rec_mul		500854	0					
ANR	501326	ArgumentList	u0		500854	1					
ANR	501327	Argument	u0		500854	0					
ANR	501328	Identifier	u0		500854	0					
ANR	501329	Argument	u0 -> n_len		500854	1					
ANR	501330	PtrMemberAccess	u0 -> n_len		500854	0					
ANR	501331	Identifier	u0		500854	0					
ANR	501332	Identifier	n_len		500854	1					
ANR	501333	Argument	v0		500854	2					
ANR	501334	Identifier	v0		500854	0					
ANR	501335	Argument	v0 -> n_len		500854	3					
ANR	501336	PtrMemberAccess	v0 -> n_len		500854	0					
ANR	501337	Identifier	v0		500854	0					
ANR	501338	Identifier	n_len		500854	1					
ANR	501339	Argument	& m3		500854	4					
ANR	501340	UnaryOperationExpression	& m3		500854	0					
ANR	501341	UnaryOperator	&		500854	0					
ANR	501342	Identifier	m3		500854	1					
ANR	501343	Argument	0		500854	5					
ANR	501344	PrimaryExpression	0		500854	0					
ANR	501345	ExpressionStatement	prodlen = ulen + vlen + 1	250:2:6321:6342	500854	22	True				
ANR	501346	AssignmentExpression	prodlen = ulen + vlen + 1		500854	0		=			
ANR	501347	Identifier	prodlen		500854	0					
ANR	501348	AdditiveExpression	ulen + vlen + 1		500854	1		+			
ANR	501349	Identifier	ulen		500854	0					
ANR	501350	AdditiveExpression	vlen + 1		500854	1		+			
ANR	501351	Identifier	vlen		500854	0					
ANR	501352	PrimaryExpression	1		500854	1					
ANR	501353	ExpressionStatement	"* prod = bc_new_num ( prodlen , 0 )"	251:2:6346:6376	500854	23	True				
ANR	501354	AssignmentExpression	"* prod = bc_new_num ( prodlen , 0 )"		500854	0		=			
ANR	501355	UnaryOperationExpression	* prod		500854	0					
ANR	501356	UnaryOperator	*		500854	0					
ANR	501357	Identifier	prod		500854	1					
ANR	501358	CallExpression	"bc_new_num ( prodlen , 0 )"		500854	1					
ANR	501359	Callee	bc_new_num		500854	0					
ANR	501360	Identifier	bc_new_num		500854	0					
ANR	501361	ArgumentList	prodlen		500854	1					
ANR	501362	Argument	prodlen		500854	0					
ANR	501363	Identifier	prodlen		500854	0					
ANR	501364	Argument	0		500854	1					
ANR	501365	PrimaryExpression	0		500854	0					
ANR	501366	IfStatement	if ( ! m1zero )		500854	24					
ANR	501367	Condition	! m1zero	253:6:6385:6391	500854	0	True				
ANR	501368	UnaryOperationExpression	! m1zero		500854	0					
ANR	501369	UnaryOperator	!		500854	0					
ANR	501370	Identifier	m1zero		500854	1					
ANR	501371	CompoundStatement		70:15:1700:1700	500854	1					
ANR	501372	ExpressionStatement	"_bc_shift_addsub ( * prod , m1 , 2 * n , 0 )"	254:4:6400:6436	500854	0	True				
ANR	501373	CallExpression	"_bc_shift_addsub ( * prod , m1 , 2 * n , 0 )"		500854	0					
ANR	501374	Callee	_bc_shift_addsub		500854	0					
ANR	501375	Identifier	_bc_shift_addsub		500854	0					
ANR	501376	ArgumentList	* prod		500854	1					
ANR	501377	Argument	* prod		500854	0					
ANR	501378	UnaryOperationExpression	* prod		500854	0					
ANR	501379	UnaryOperator	*		500854	0					
ANR	501380	Identifier	prod		500854	1					
ANR	501381	Argument	m1		500854	1					
ANR	501382	Identifier	m1		500854	0					
ANR	501383	Argument	2 * n		500854	2					
ANR	501384	MultiplicativeExpression	2 * n		500854	0		*			
ANR	501385	PrimaryExpression	2		500854	0					
ANR	501386	Identifier	n		500854	1					
ANR	501387	Argument	0		500854	3					
ANR	501388	PrimaryExpression	0		500854	0					
ANR	501389	ExpressionStatement	"_bc_shift_addsub ( * prod , m1 , n , 0 )"	255:4:6442:6476	500854	1	True				
ANR	501390	CallExpression	"_bc_shift_addsub ( * prod , m1 , n , 0 )"		500854	0					
ANR	501391	Callee	_bc_shift_addsub		500854	0					
ANR	501392	Identifier	_bc_shift_addsub		500854	0					
ANR	501393	ArgumentList	* prod		500854	1					
ANR	501394	Argument	* prod		500854	0					
ANR	501395	UnaryOperationExpression	* prod		500854	0					
ANR	501396	UnaryOperator	*		500854	0					
ANR	501397	Identifier	prod		500854	1					
ANR	501398	Argument	m1		500854	1					
ANR	501399	Identifier	m1		500854	0					
ANR	501400	Argument	n		500854	2					
ANR	501401	Identifier	n		500854	0					
ANR	501402	Argument	0		500854	3					
ANR	501403	PrimaryExpression	0		500854	0					
ANR	501404	ExpressionStatement	"_bc_shift_addsub ( * prod , m3 , n , 0 )"	257:2:6484:6518	500854	25	True				
ANR	501405	CallExpression	"_bc_shift_addsub ( * prod , m3 , n , 0 )"		500854	0					
ANR	501406	Callee	_bc_shift_addsub		500854	0					
ANR	501407	Identifier	_bc_shift_addsub		500854	0					
ANR	501408	ArgumentList	* prod		500854	1					
ANR	501409	Argument	* prod		500854	0					
ANR	501410	UnaryOperationExpression	* prod		500854	0					
ANR	501411	UnaryOperator	*		500854	0					
ANR	501412	Identifier	prod		500854	1					
ANR	501413	Argument	m3		500854	1					
ANR	501414	Identifier	m3		500854	0					
ANR	501415	Argument	n		500854	2					
ANR	501416	Identifier	n		500854	0					
ANR	501417	Argument	0		500854	3					
ANR	501418	PrimaryExpression	0		500854	0					
ANR	501419	ExpressionStatement	"_bc_shift_addsub ( * prod , m3 , 0 , 0 )"	258:2:6522:6556	500854	26	True				
ANR	501420	CallExpression	"_bc_shift_addsub ( * prod , m3 , 0 , 0 )"		500854	0					
ANR	501421	Callee	_bc_shift_addsub		500854	0					
ANR	501422	Identifier	_bc_shift_addsub		500854	0					
ANR	501423	ArgumentList	* prod		500854	1					
ANR	501424	Argument	* prod		500854	0					
ANR	501425	UnaryOperationExpression	* prod		500854	0					
ANR	501426	UnaryOperator	*		500854	0					
ANR	501427	Identifier	prod		500854	1					
ANR	501428	Argument	m3		500854	1					
ANR	501429	Identifier	m3		500854	0					
ANR	501430	Argument	0		500854	2					
ANR	501431	PrimaryExpression	0		500854	0					
ANR	501432	Argument	0		500854	3					
ANR	501433	PrimaryExpression	0		500854	0					
ANR	501434	ExpressionStatement	"_bc_shift_addsub ( * prod , m2 , n , d1 -> n_sign != d2 -> n_sign )"	259:2:6560:6617	500854	27	True				
ANR	501435	CallExpression	"_bc_shift_addsub ( * prod , m2 , n , d1 -> n_sign != d2 -> n_sign )"		500854	0					
ANR	501436	Callee	_bc_shift_addsub		500854	0					
ANR	501437	Identifier	_bc_shift_addsub		500854	0					
ANR	501438	ArgumentList	* prod		500854	1					
ANR	501439	Argument	* prod		500854	0					
ANR	501440	UnaryOperationExpression	* prod		500854	0					
ANR	501441	UnaryOperator	*		500854	0					
ANR	501442	Identifier	prod		500854	1					
ANR	501443	Argument	m2		500854	1					
ANR	501444	Identifier	m2		500854	0					
ANR	501445	Argument	n		500854	2					
ANR	501446	Identifier	n		500854	0					
ANR	501447	Argument	d1 -> n_sign != d2 -> n_sign		500854	3					
ANR	501448	EqualityExpression	d1 -> n_sign != d2 -> n_sign		500854	0		!=			
ANR	501449	PtrMemberAccess	d1 -> n_sign		500854	0					
ANR	501450	Identifier	d1		500854	0					
ANR	501451	Identifier	n_sign		500854	1					
ANR	501452	PtrMemberAccess	d2 -> n_sign		500854	1					
ANR	501453	Identifier	d2		500854	0					
ANR	501454	Identifier	n_sign		500854	1					
ANR	501455	ExpressionStatement	bc_free_num ( & u1 )	262:2:6644:6661	500854	28	True				
ANR	501456	CallExpression	bc_free_num ( & u1 )		500854	0					
ANR	501457	Callee	bc_free_num		500854	0					
ANR	501458	Identifier	bc_free_num		500854	0					
ANR	501459	ArgumentList	& u1		500854	1					
ANR	501460	Argument	& u1		500854	0					
ANR	501461	UnaryOperationExpression	& u1		500854	0					
ANR	501462	UnaryOperator	&		500854	0					
ANR	501463	Identifier	u1		500854	1					
ANR	501464	ExpressionStatement	bc_free_num ( & u0 )	263:2:6665:6682	500854	29	True				
ANR	501465	CallExpression	bc_free_num ( & u0 )		500854	0					
ANR	501466	Callee	bc_free_num		500854	0					
ANR	501467	Identifier	bc_free_num		500854	0					
ANR	501468	ArgumentList	& u0		500854	1					
ANR	501469	Argument	& u0		500854	0					
ANR	501470	UnaryOperationExpression	& u0		500854	0					
ANR	501471	UnaryOperator	&		500854	0					
ANR	501472	Identifier	u0		500854	1					
ANR	501473	ExpressionStatement	bc_free_num ( & v1 )	264:2:6686:6703	500854	30	True				
ANR	501474	CallExpression	bc_free_num ( & v1 )		500854	0					
ANR	501475	Callee	bc_free_num		500854	0					
ANR	501476	Identifier	bc_free_num		500854	0					
ANR	501477	ArgumentList	& v1		500854	1					
ANR	501478	Argument	& v1		500854	0					
ANR	501479	UnaryOperationExpression	& v1		500854	0					
ANR	501480	UnaryOperator	&		500854	0					
ANR	501481	Identifier	v1		500854	1					
ANR	501482	ExpressionStatement	bc_free_num ( & m1 )	265:2:6707:6724	500854	31	True				
ANR	501483	CallExpression	bc_free_num ( & m1 )		500854	0					
ANR	501484	Callee	bc_free_num		500854	0					
ANR	501485	Identifier	bc_free_num		500854	0					
ANR	501486	ArgumentList	& m1		500854	1					
ANR	501487	Argument	& m1		500854	0					
ANR	501488	UnaryOperationExpression	& m1		500854	0					
ANR	501489	UnaryOperator	&		500854	0					
ANR	501490	Identifier	m1		500854	1					
ANR	501491	ExpressionStatement	bc_free_num ( & v0 )	266:2:6728:6745	500854	32	True				
ANR	501492	CallExpression	bc_free_num ( & v0 )		500854	0					
ANR	501493	Callee	bc_free_num		500854	0					
ANR	501494	Identifier	bc_free_num		500854	0					
ANR	501495	ArgumentList	& v0		500854	1					
ANR	501496	Argument	& v0		500854	0					
ANR	501497	UnaryOperationExpression	& v0		500854	0					
ANR	501498	UnaryOperator	&		500854	0					
ANR	501499	Identifier	v0		500854	1					
ANR	501500	ExpressionStatement	bc_free_num ( & m2 )	267:2:6749:6766	500854	33	True				
ANR	501501	CallExpression	bc_free_num ( & m2 )		500854	0					
ANR	501502	Callee	bc_free_num		500854	0					
ANR	501503	Identifier	bc_free_num		500854	0					
ANR	501504	ArgumentList	& m2		500854	1					
ANR	501505	Argument	& m2		500854	0					
ANR	501506	UnaryOperationExpression	& m2		500854	0					
ANR	501507	UnaryOperator	&		500854	0					
ANR	501508	Identifier	m2		500854	1					
ANR	501509	ExpressionStatement	bc_free_num ( & m3 )	268:2:6770:6787	500854	34	True				
ANR	501510	CallExpression	bc_free_num ( & m3 )		500854	0					
ANR	501511	Callee	bc_free_num		500854	0					
ANR	501512	Identifier	bc_free_num		500854	0					
ANR	501513	ArgumentList	& m3		500854	1					
ANR	501514	Argument	& m3		500854	0					
ANR	501515	UnaryOperationExpression	& m3		500854	0					
ANR	501516	UnaryOperator	&		500854	0					
ANR	501517	Identifier	m3		500854	1					
ANR	501518	ExpressionStatement	bc_free_num ( & d1 )	269:2:6791:6808	500854	35	True				
ANR	501519	CallExpression	bc_free_num ( & d1 )		500854	0					
ANR	501520	Callee	bc_free_num		500854	0					
ANR	501521	Identifier	bc_free_num		500854	0					
ANR	501522	ArgumentList	& d1		500854	1					
ANR	501523	Argument	& d1		500854	0					
ANR	501524	UnaryOperationExpression	& d1		500854	0					
ANR	501525	UnaryOperator	&		500854	0					
ANR	501526	Identifier	d1		500854	1					
ANR	501527	ExpressionStatement	bc_free_num ( & d2 )	270:2:6812:6829	500854	36	True				
ANR	501528	CallExpression	bc_free_num ( & d2 )		500854	0					
ANR	501529	Callee	bc_free_num		500854	0					
ANR	501530	Identifier	bc_free_num		500854	0					
ANR	501531	ArgumentList	& d2		500854	1					
ANR	501532	Argument	& d2		500854	0					
ANR	501533	UnaryOperationExpression	& d2		500854	0					
ANR	501534	UnaryOperator	&		500854	0					
ANR	501535	Identifier	d2		500854	1					
ANR	501536	ReturnType	static void		500854	1					
ANR	501537	Identifier	_bc_rec_mul		500854	2					
ANR	501538	ParameterList	"bc_num u , int ulen , bc_num v , int vlen , bc_num * prod , int full_scale"		500854	3					
ANR	501539	Parameter	bc_num u	182:13:4617:4624	500854	0	True				
ANR	501540	ParameterType	bc_num		500854	0					
ANR	501541	Identifier	u		500854	1					
ANR	501542	Parameter	int ulen	182:23:4627:4634	500854	1	True				
ANR	501543	ParameterType	int		500854	0					
ANR	501544	Identifier	ulen		500854	1					
ANR	501545	Parameter	bc_num v	182:33:4637:4644	500854	2	True				
ANR	501546	ParameterType	bc_num		500854	0					
ANR	501547	Identifier	v		500854	1					
ANR	501548	Parameter	int vlen	182:43:4647:4654	500854	3	True				
ANR	501549	ParameterType	int		500854	0					
ANR	501550	Identifier	vlen		500854	1					
ANR	501551	Parameter	bc_num * prod	182:53:4657:4668	500854	4	True				
ANR	501552	ParameterType	bc_num *		500854	0					
ANR	501553	Identifier	prod		500854	1					
ANR	501554	Parameter	int full_scale	183:6:4677:4690	500854	5	True				
ANR	501555	ParameterType	int		500854	0					
ANR	501556	Identifier	full_scale		500854	1					
ANR	501557	CFGEntryNode	ENTRY		500854		True				
ANR	501558	CFGExitNode	EXIT		500854		True				
ANR	501559	Symbol	* v		500854						
ANR	501560	Symbol	* u1		500854						
ANR	501561	Symbol	* u0		500854						
ANR	501562	Symbol	& u0		500854						
ANR	501563	Symbol	& u1		500854						
ANR	501564	Symbol	v -> n_value		500854						
ANR	501565	Symbol	& m2		500854						
ANR	501566	Symbol	& m1		500854						
ANR	501567	Symbol	* d1		500854						
ANR	501568	Symbol	v0 -> n_len		500854						
ANR	501569	Symbol	& d1		500854						
ANR	501570	Symbol	u1 -> n_len		500854						
ANR	501571	Symbol	d1 -> n_len		500854						
ANR	501572	Symbol	* d2		500854						
ANR	501573	Symbol	& d2		500854						
ANR	501574	Symbol	d2len		500854						
ANR	501575	Symbol	* v1		500854						
ANR	501576	Symbol	* v0		500854						
ANR	501577	Symbol	& v1		500854						
ANR	501578	Symbol	& v0		500854						
ANR	501579	Symbol	BCG		500854						
ANR	501580	Symbol	new_sub_num		500854						
ANR	501581	Symbol	v1 -> n_len		500854						
ANR	501582	Symbol	* prod		500854						
ANR	501583	Symbol	d1len		500854						
ANR	501584	Symbol	& m3		500854						
ANR	501585	Symbol	ulen		500854						
ANR	501586	Symbol	_zero_		500854						
ANR	501587	Symbol	u0 -> n_len		500854						
ANR	501588	Symbol	MAX		500854						
ANR	501589	Symbol	d1		500854						
ANR	501590	Symbol	bc_new_num		500854						
ANR	501591	Symbol	d2		500854						
ANR	501592	Symbol	d2 -> n_len		500854						
ANR	501593	Symbol	bc_copy_num		500854						
ANR	501594	Symbol	d2 -> n_sign		500854						
ANR	501595	Symbol	full_scale		500854						
ANR	501596	Symbol	prodlen		500854						
ANR	501597	Symbol	u0		500854						
ANR	501598	Symbol	u1		500854						
ANR	501599	Symbol	bc_is_zero		500854						
ANR	501600	Symbol	u -> n_value		500854						
ANR	501601	Symbol	prod		500854						
ANR	501602	Symbol	m1		500854						
ANR	501603	Symbol	m2		500854						
ANR	501604	Symbol	m3		500854						
ANR	501605	Symbol	m1zero		500854						
ANR	501606	Symbol	mul_base_digits		500854						
ANR	501607	Symbol	vlen		500854						
ANR	501608	Symbol	n		500854						
ANR	501609	Symbol	u		500854						
ANR	501610	Symbol	v		500854						
ANR	501611	Symbol	v0		500854						
ANR	501612	Symbol	MUL_SMALL_DIGITS		500854						
ANR	501613	Symbol	v1		500854						
ANR	501614	Symbol	d1 -> n_sign		500854						
ANR	501615	Symbol	* u		500854						
ANR	501616	Function	bc_multiply	277:0:6990:7747							
ANR	501617	FunctionDef	"bc_multiply (bc_num n1 , bc_num n2 , bc_num * prod , int scale)"		501616	0					
ANR	501618	CompoundStatement		279:0:7055:7747	501616	0					
ANR	501619	IdentifierDeclStatement	bc_num pval ;	280:2:7059:7070	501616	0	True				
ANR	501620	IdentifierDecl	pval		501616	0					
ANR	501621	IdentifierDeclType	bc_num		501616	0					
ANR	501622	Identifier	pval		501616	1					
ANR	501623	IdentifierDeclStatement	"int len1 , len2 ;"	281:2:7074:7088	501616	1	True				
ANR	501624	IdentifierDecl	len1		501616	0					
ANR	501625	IdentifierDeclType	int		501616	0					
ANR	501626	Identifier	len1		501616	1					
ANR	501627	IdentifierDecl	len2		501616	1					
ANR	501628	IdentifierDeclType	int		501616	0					
ANR	501629	Identifier	len2		501616	1					
ANR	501630	IdentifierDeclStatement	"int full_scale , prod_scale ;"	282:2:7092:7118	501616	2	True				
ANR	501631	IdentifierDecl	full_scale		501616	0					
ANR	501632	IdentifierDeclType	int		501616	0					
ANR	501633	Identifier	full_scale		501616	1					
ANR	501634	IdentifierDecl	prod_scale		501616	1					
ANR	501635	IdentifierDeclType	int		501616	0					
ANR	501636	Identifier	prod_scale		501616	1					
ANR	501637	ExpressionStatement	len1 = n1 -> n_len + n1 -> n_scale	285:2:7150:7180	501616	3	True				
ANR	501638	AssignmentExpression	len1 = n1 -> n_len + n1 -> n_scale		501616	0		=			
ANR	501639	Identifier	len1		501616	0					
ANR	501640	AdditiveExpression	n1 -> n_len + n1 -> n_scale		501616	1		+			
ANR	501641	PtrMemberAccess	n1 -> n_len		501616	0					
ANR	501642	Identifier	n1		501616	0					
ANR	501643	Identifier	n_len		501616	1					
ANR	501644	PtrMemberAccess	n1 -> n_scale		501616	1					
ANR	501645	Identifier	n1		501616	0					
ANR	501646	Identifier	n_scale		501616	1					
ANR	501647	ExpressionStatement	len2 = n2 -> n_len + n2 -> n_scale	286:2:7184:7214	501616	4	True				
ANR	501648	AssignmentExpression	len2 = n2 -> n_len + n2 -> n_scale		501616	0		=			
ANR	501649	Identifier	len2		501616	0					
ANR	501650	AdditiveExpression	n2 -> n_len + n2 -> n_scale		501616	1		+			
ANR	501651	PtrMemberAccess	n2 -> n_len		501616	0					
ANR	501652	Identifier	n2		501616	0					
ANR	501653	Identifier	n_len		501616	1					
ANR	501654	PtrMemberAccess	n2 -> n_scale		501616	1					
ANR	501655	Identifier	n2		501616	0					
ANR	501656	Identifier	n_scale		501616	1					
ANR	501657	ExpressionStatement	full_scale = n1 -> n_scale + n2 -> n_scale	287:2:7218:7256	501616	5	True				
ANR	501658	AssignmentExpression	full_scale = n1 -> n_scale + n2 -> n_scale		501616	0		=			
ANR	501659	Identifier	full_scale		501616	0					
ANR	501660	AdditiveExpression	n1 -> n_scale + n2 -> n_scale		501616	1		+			
ANR	501661	PtrMemberAccess	n1 -> n_scale		501616	0					
ANR	501662	Identifier	n1		501616	0					
ANR	501663	Identifier	n_scale		501616	1					
ANR	501664	PtrMemberAccess	n2 -> n_scale		501616	1					
ANR	501665	Identifier	n2		501616	0					
ANR	501666	Identifier	n_scale		501616	1					
ANR	501667	ExpressionStatement	"prod_scale = MIN ( full_scale , MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) ) )"	288:2:7260:7328	501616	6	True				
ANR	501668	AssignmentExpression	"prod_scale = MIN ( full_scale , MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) ) )"		501616	0		=			
ANR	501669	Identifier	prod_scale		501616	0					
ANR	501670	CallExpression	"MIN ( full_scale , MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) ) )"		501616	1					
ANR	501671	Callee	MIN		501616	0					
ANR	501672	Identifier	MIN		501616	0					
ANR	501673	ArgumentList	full_scale		501616	1					
ANR	501674	Argument	full_scale		501616	0					
ANR	501675	Identifier	full_scale		501616	0					
ANR	501676	Argument	"MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) )"		501616	1					
ANR	501677	CallExpression	"MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) )"		501616	0					
ANR	501678	Callee	MAX		501616	0					
ANR	501679	Identifier	MAX		501616	0					
ANR	501680	ArgumentList	scale		501616	1					
ANR	501681	Argument	scale		501616	0					
ANR	501682	Identifier	scale		501616	0					
ANR	501683	Argument	"MAX ( n1 -> n_scale , n2 -> n_scale )"		501616	1					
ANR	501684	CallExpression	"MAX ( n1 -> n_scale , n2 -> n_scale )"		501616	0					
ANR	501685	Callee	MAX		501616	0					
ANR	501686	Identifier	MAX		501616	0					
ANR	501687	ArgumentList	n1 -> n_scale		501616	1					
ANR	501688	Argument	n1 -> n_scale		501616	0					
ANR	501689	PtrMemberAccess	n1 -> n_scale		501616	0					
ANR	501690	Identifier	n1		501616	0					
ANR	501691	Identifier	n_scale		501616	1					
ANR	501692	Argument	n2 -> n_scale		501616	1					
ANR	501693	PtrMemberAccess	n2 -> n_scale		501616	0					
ANR	501694	Identifier	n2		501616	0					
ANR	501695	Identifier	n_scale		501616	1					
ANR	501696	ExpressionStatement	"_bc_rec_mul ( n1 , len1 , n2 , len2 , & pval , full_scale )"	291:2:7357:7408	501616	7	True				
ANR	501697	CallExpression	"_bc_rec_mul ( n1 , len1 , n2 , len2 , & pval , full_scale )"		501616	0					
ANR	501698	Callee	_bc_rec_mul		501616	0					
ANR	501699	Identifier	_bc_rec_mul		501616	0					
ANR	501700	ArgumentList	n1		501616	1					
ANR	501701	Argument	n1		501616	0					
ANR	501702	Identifier	n1		501616	0					
ANR	501703	Argument	len1		501616	1					
ANR	501704	Identifier	len1		501616	0					
ANR	501705	Argument	n2		501616	2					
ANR	501706	Identifier	n2		501616	0					
ANR	501707	Argument	len2		501616	3					
ANR	501708	Identifier	len2		501616	0					
ANR	501709	Argument	& pval		501616	4					
ANR	501710	UnaryOperationExpression	& pval		501616	0					
ANR	501711	UnaryOperator	&		501616	0					
ANR	501712	Identifier	pval		501616	1					
ANR	501713	Argument	full_scale		501616	5					
ANR	501714	Identifier	full_scale		501616	0					
ANR	501715	ExpressionStatement	pval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	294:2:7461:7519	501616	8	True				
ANR	501716	AssignmentExpression	pval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		501616	0		=			
ANR	501717	PtrMemberAccess	pval -> n_sign		501616	0					
ANR	501718	Identifier	pval		501616	0					
ANR	501719	Identifier	n_sign		501616	1					
ANR	501720	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		501616	1					
ANR	501721	Condition	n1 -> n_sign == n2 -> n_sign		501616	0					
ANR	501722	EqualityExpression	n1 -> n_sign == n2 -> n_sign		501616	0		==			
ANR	501723	PtrMemberAccess	n1 -> n_sign		501616	0					
ANR	501724	Identifier	n1		501616	0					
ANR	501725	Identifier	n_sign		501616	1					
ANR	501726	PtrMemberAccess	n2 -> n_sign		501616	1					
ANR	501727	Identifier	n2		501616	0					
ANR	501728	Identifier	n_sign		501616	1					
ANR	501729	Identifier	PLUS		501616	1					
ANR	501730	Identifier	MINUS		501616	2					
ANR	501731	ExpressionStatement	pval -> n_value = pval -> n_ptr	295:2:7523:7550	501616	9	True				
ANR	501732	AssignmentExpression	pval -> n_value = pval -> n_ptr		501616	0		=			
ANR	501733	PtrMemberAccess	pval -> n_value		501616	0					
ANR	501734	Identifier	pval		501616	0					
ANR	501735	Identifier	n_value		501616	1					
ANR	501736	PtrMemberAccess	pval -> n_ptr		501616	1					
ANR	501737	Identifier	pval		501616	0					
ANR	501738	Identifier	n_ptr		501616	1					
ANR	501739	ExpressionStatement	pval -> n_len = len2 + len1 + 1 - full_scale	296:2:7554:7596	501616	10	True				
ANR	501740	AssignmentExpression	pval -> n_len = len2 + len1 + 1 - full_scale		501616	0		=			
ANR	501741	PtrMemberAccess	pval -> n_len		501616	0					
ANR	501742	Identifier	pval		501616	0					
ANR	501743	Identifier	n_len		501616	1					
ANR	501744	AdditiveExpression	len2 + len1 + 1 - full_scale		501616	1		+			
ANR	501745	Identifier	len2		501616	0					
ANR	501746	AdditiveExpression	len1 + 1 - full_scale		501616	1		+			
ANR	501747	Identifier	len1		501616	0					
ANR	501748	AdditiveExpression	1 - full_scale		501616	1		-			
ANR	501749	PrimaryExpression	1		501616	0					
ANR	501750	Identifier	full_scale		501616	1					
ANR	501751	ExpressionStatement	pval -> n_scale = prod_scale	297:2:7600:7626	501616	11	True				
ANR	501752	AssignmentExpression	pval -> n_scale = prod_scale		501616	0		=			
ANR	501753	PtrMemberAccess	pval -> n_scale		501616	0					
ANR	501754	Identifier	pval		501616	0					
ANR	501755	Identifier	n_scale		501616	1					
ANR	501756	Identifier	prod_scale		501616	1					
ANR	501757	ExpressionStatement	_bc_rm_leading_zeros ( pval )	298:2:7630:7657	501616	12	True				
ANR	501758	CallExpression	_bc_rm_leading_zeros ( pval )		501616	0					
ANR	501759	Callee	_bc_rm_leading_zeros		501616	0					
ANR	501760	Identifier	_bc_rm_leading_zeros		501616	0					
ANR	501761	ArgumentList	pval		501616	1					
ANR	501762	Argument	pval		501616	0					
ANR	501763	Identifier	pval		501616	0					
ANR	501764	IfStatement	if ( bc_is_zero ( pval ) )		501616	13					
ANR	501765	Condition	bc_is_zero ( pval )	299:6:7665:7681	501616	0	True				
ANR	501766	CallExpression	bc_is_zero ( pval )		501616	0					
ANR	501767	Callee	bc_is_zero		501616	0					
ANR	501768	Identifier	bc_is_zero		501616	0					
ANR	501769	ArgumentList	pval		501616	1					
ANR	501770	Argument	pval		501616	0					
ANR	501771	Identifier	pval		501616	0					
ANR	501772	ExpressionStatement	pval -> n_sign = PLUS	300:4:7688:7707	501616	1	True				
ANR	501773	AssignmentExpression	pval -> n_sign = PLUS		501616	0		=			
ANR	501774	PtrMemberAccess	pval -> n_sign		501616	0					
ANR	501775	Identifier	pval		501616	0					
ANR	501776	Identifier	n_sign		501616	1					
ANR	501777	Identifier	PLUS		501616	1					
ANR	501778	ExpressionStatement	bc_free_num ( prod )	301:2:7711:7729	501616	14	True				
ANR	501779	CallExpression	bc_free_num ( prod )		501616	0					
ANR	501780	Callee	bc_free_num		501616	0					
ANR	501781	Identifier	bc_free_num		501616	0					
ANR	501782	ArgumentList	prod		501616	1					
ANR	501783	Argument	prod		501616	0					
ANR	501784	Identifier	prod		501616	0					
ANR	501785	ExpressionStatement	* prod = pval	302:2:7733:7745	501616	15	True				
ANR	501786	AssignmentExpression	* prod = pval		501616	0		=			
ANR	501787	UnaryOperationExpression	* prod		501616	0					
ANR	501788	UnaryOperator	*		501616	0					
ANR	501789	Identifier	prod		501616	1					
ANR	501790	Identifier	pval		501616	1					
ANR	501791	ReturnType	void		501616	1					
ANR	501792	Identifier	bc_multiply		501616	2					
ANR	501793	ParameterList	"bc_num n1 , bc_num n2 , bc_num * prod , int scale"		501616	3					
ANR	501794	Parameter	bc_num n1	278:13:7008:7016	501616	0	True				
ANR	501795	ParameterType	bc_num		501616	0					
ANR	501796	Identifier	n1		501616	1					
ANR	501797	Parameter	bc_num n2	278:24:7019:7027	501616	1	True				
ANR	501798	ParameterType	bc_num		501616	0					
ANR	501799	Identifier	n2		501616	1					
ANR	501800	Parameter	bc_num * prod	278:35:7030:7041	501616	2	True				
ANR	501801	ParameterType	bc_num *		501616	0					
ANR	501802	Identifier	prod		501616	1					
ANR	501803	Parameter	int scale	278:49:7044:7052	501616	3	True				
ANR	501804	ParameterType	int		501616	0					
ANR	501805	Identifier	scale		501616	1					
ANR	501806	CFGEntryNode	ENTRY		501616		True				
ANR	501807	CFGExitNode	EXIT		501616		True				
ANR	501808	Symbol	n1		501616						
ANR	501809	Symbol	n2		501616						
ANR	501810	Symbol	* pval		501616						
ANR	501811	Symbol	pval		501616						
ANR	501812	Symbol	MAX		501616						
ANR	501813	Symbol	scale		501616						
ANR	501814	Symbol	n2 -> n_sign		501616						
ANR	501815	Symbol	pval -> n_scale		501616						
ANR	501816	Symbol	len1		501616						
ANR	501817	Symbol	len2		501616						
ANR	501818	Symbol	MINUS		501616						
ANR	501819	Symbol	full_scale		501616						
ANR	501820	Symbol	n1 -> n_scale		501616						
ANR	501821	Symbol	n1 -> n_len		501616						
ANR	501822	Symbol	bc_is_zero		501616						
ANR	501823	Symbol	prod		501616						
ANR	501824	Symbol	& pval		501616						
ANR	501825	Symbol	n2 -> n_scale		501616						
ANR	501826	Symbol	n1 -> n_sign		501616						
ANR	501827	Symbol	prod_scale		501616						
ANR	501828	Symbol	* n2		501616						
ANR	501829	Symbol	n2 -> n_len		501616						
ANR	501830	Symbol	* n1		501616						
ANR	501831	Symbol	pval -> n_sign		501616						
ANR	501832	Symbol	pval -> n_ptr		501616						
ANR	501833	Symbol	* prod		501616						
ANR	501834	Symbol	MIN		501616						
ANR	501835	Symbol	pval -> n_len		501616						
ANR	501836	Symbol	pval -> n_value		501616						
ANR	501837	Symbol	PLUS		501616						
