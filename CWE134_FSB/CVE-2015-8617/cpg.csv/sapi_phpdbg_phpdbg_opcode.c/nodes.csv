command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3674535	File	data/converged/CVE-2015-8617_php-src/sapi_phpdbg_phpdbg_opcode.c								
ANR	3674536	Function	phpdbg_decode_opcode	30:0:1502:1705							
ANR	3674537	FunctionDef	phpdbg_decode_opcode (zend_uchar opcode)		3674536	0					
ANR	3674538	CompoundStatement		31:0:1578:1705	3674536	0					
ANR	3674539	IdentifierDeclStatement	const char * ret = zend_get_opcode_name ( opcode ) ;	32:1:1581:1627	3674536	0	True				
ANR	3674540	IdentifierDecl	* ret = zend_get_opcode_name ( opcode )		3674536	0					
ANR	3674541	IdentifierDeclType	const char *		3674536	0					
ANR	3674542	Identifier	ret		3674536	1					
ANR	3674543	AssignmentExpression	* ret = zend_get_opcode_name ( opcode )		3674536	2		=			
ANR	3674544	Identifier	ret		3674536	0					
ANR	3674545	CallExpression	zend_get_opcode_name ( opcode )		3674536	1					
ANR	3674546	Callee	zend_get_opcode_name		3674536	0					
ANR	3674547	Identifier	zend_get_opcode_name		3674536	0					
ANR	3674548	ArgumentList	opcode		3674536	1					
ANR	3674549	Argument	opcode		3674536	0					
ANR	3674550	Identifier	opcode		3674536	0					
ANR	3674551	IfStatement	if ( ret )		3674536	1					
ANR	3674552	Condition	ret	33:5:1634:1636	3674536	0	True				
ANR	3674553	Identifier	ret		3674536	0					
ANR	3674554	CompoundStatement		3:10:60:60	3674536	1					
ANR	3674555	ReturnStatement	return ret + 5 ;	34:2:1643:1657	3674536	0	True				
ANR	3674556	AdditiveExpression	ret + 5		3674536	0		+			
ANR	3674557	Identifier	ret		3674536	0					
ANR	3674558	PrimaryExpression	5		3674536	1					
ANR	3674559	ReturnStatement	"return ""UNKNOWN"" ;"	36:1:1687:1703	3674536	2	True				
ANR	3674560	PrimaryExpression	"""UNKNOWN"""		3674536	0					
ANR	3674561	ReturnType	static inline const char *		3674536	1					
ANR	3674562	Identifier	phpdbg_decode_opcode		3674536	2					
ANR	3674563	ParameterList	zend_uchar opcode		3674536	3					
ANR	3674564	Parameter	zend_uchar opcode	30:47:1549:1565	3674536	0	True				
ANR	3674565	ParameterType	zend_uchar		3674536	0					
ANR	3674566	Identifier	opcode		3674536	1					
ANR	3674567	CFGEntryNode	ENTRY		3674536		True				
ANR	3674568	CFGExitNode	EXIT		3674536		True				
ANR	3674569	Symbol	ret		3674536						
ANR	3674570	Symbol	zend_get_opcode_name		3674536						
ANR	3674571	Symbol	opcode		3674536						
ANR	3674572	Function	phpdbg_decode_op	39:0:1718:2418							
ANR	3674573	FunctionDef	"phpdbg_decode_op (zend_op_array * ops , znode_op * op , uint32_t type)"		3674572	0					
ANR	3674574	CompoundStatement		40:0:1814:2418	3674572	0					
ANR	3674575	IdentifierDeclStatement	char * decode = NULL ;	41:1:1817:1836	3674572	0	True				
ANR	3674576	IdentifierDecl	* decode = NULL		3674572	0					
ANR	3674577	IdentifierDeclType	char *		3674572	0					
ANR	3674578	Identifier	decode		3674572	1					
ANR	3674579	AssignmentExpression	* decode = NULL		3674572	2		=			
ANR	3674580	Identifier	NULL		3674572	0					
ANR	3674581	Identifier	NULL		3674572	1					
ANR	3674582	SwitchStatement	switch ( type )		3674572	1					
ANR	3674583	Condition	type	43:9:1848:1851	3674572	0	True				
ANR	3674584	Identifier	type		3674572	0					
ANR	3674585	CompoundStatement		4:15:39:39	3674572	1					
ANR	3674586	Label	case IS_CV :	44:2:1858:1868	3674572	0	True				
ANR	3674587	Identifier	IS_CV		3674572	0					
ANR	3674588	CompoundStatement		6:3:60:112	3674572	1					
ANR	3674589	IdentifierDeclStatement	zend_string * var = ops -> vars [ EX_VAR_TO_NUM ( op -> var ) ] ;	45:3:1875:1927	3674572	0	True				
ANR	3674590	IdentifierDecl	* var = ops -> vars [ EX_VAR_TO_NUM ( op -> var ) ]		3674572	0					
ANR	3674591	IdentifierDeclType	zend_string *		3674572	0					
ANR	3674592	Identifier	var		3674572	1					
ANR	3674593	AssignmentExpression	* var = ops -> vars [ EX_VAR_TO_NUM ( op -> var ) ]		3674572	2		=			
ANR	3674594	Identifier	var		3674572	0					
ANR	3674595	ArrayIndexing	ops -> vars [ EX_VAR_TO_NUM ( op -> var ) ]		3674572	1					
ANR	3674596	PtrMemberAccess	ops -> vars		3674572	0					
ANR	3674597	Identifier	ops		3674572	0					
ANR	3674598	Identifier	vars		3674572	1					
ANR	3674599	CallExpression	EX_VAR_TO_NUM ( op -> var )		3674572	1					
ANR	3674600	Callee	EX_VAR_TO_NUM		3674572	0					
ANR	3674601	Identifier	EX_VAR_TO_NUM		3674572	0					
ANR	3674602	ArgumentList	op -> var		3674572	1					
ANR	3674603	Argument	op -> var		3674572	0					
ANR	3674604	PtrMemberAccess	op -> var		3674572	0					
ANR	3674605	Identifier	op		3674572	0					
ANR	3674606	Identifier	var		3674572	1					
ANR	3674607	ExpressionStatement	"spprintf ( & decode , 0 , ""$%.*s%c"" , ZSTR_LEN ( var ) <= 19 ? ( int ) ZSTR_LEN ( var ) : 18 , ZSTR_VAL ( var ) , ZSTR_LEN ( var ) <= 19 ? 0 : '+' )"	46:3:1932:2065	3674572	1	True				
ANR	3674608	CallExpression	"spprintf ( & decode , 0 , ""$%.*s%c"" , ZSTR_LEN ( var ) <= 19 ? ( int ) ZSTR_LEN ( var ) : 18 , ZSTR_VAL ( var ) , ZSTR_LEN ( var ) <= 19 ? 0 : '+' )"		3674572	0					
ANR	3674609	Callee	spprintf		3674572	0					
ANR	3674610	Identifier	spprintf		3674572	0					
ANR	3674611	ArgumentList	& decode		3674572	1					
ANR	3674612	Argument	& decode		3674572	0					
ANR	3674613	UnaryOperationExpression	& decode		3674572	0					
ANR	3674614	UnaryOperator	&		3674572	0					
ANR	3674615	Identifier	decode		3674572	1					
ANR	3674616	Argument	0		3674572	1					
ANR	3674617	PrimaryExpression	0		3674572	0					
ANR	3674618	Argument	"""$%.*s%c"""		3674572	2					
ANR	3674619	PrimaryExpression	"""$%.*s%c"""		3674572	0					
ANR	3674620	Argument	ZSTR_LEN ( var ) <= 19 ? ( int ) ZSTR_LEN ( var ) : 18		3674572	3					
ANR	3674621	ConditionalExpression	ZSTR_LEN ( var ) <= 19 ? ( int ) ZSTR_LEN ( var ) : 18		3674572	0					
ANR	3674622	Condition	ZSTR_LEN ( var ) <= 19		3674572	0					
ANR	3674623	RelationalExpression	ZSTR_LEN ( var ) <= 19		3674572	0		<=			
ANR	3674624	CallExpression	ZSTR_LEN ( var )		3674572	0					
ANR	3674625	Callee	ZSTR_LEN		3674572	0					
ANR	3674626	Identifier	ZSTR_LEN		3674572	0					
ANR	3674627	ArgumentList	var		3674572	1					
ANR	3674628	Argument	var		3674572	0					
ANR	3674629	Identifier	var		3674572	0					
ANR	3674630	PrimaryExpression	19		3674572	1					
ANR	3674631	CastExpression	( int ) ZSTR_LEN ( var )		3674572	1					
ANR	3674632	CastTarget	int		3674572	0					
ANR	3674633	CallExpression	ZSTR_LEN ( var )		3674572	1					
ANR	3674634	Callee	ZSTR_LEN		3674572	0					
ANR	3674635	Identifier	ZSTR_LEN		3674572	0					
ANR	3674636	ArgumentList	var		3674572	1					
ANR	3674637	Argument	var		3674572	0					
ANR	3674638	Identifier	var		3674572	0					
ANR	3674639	PrimaryExpression	18		3674572	2					
ANR	3674640	Argument	ZSTR_VAL ( var )		3674572	4					
ANR	3674641	CallExpression	ZSTR_VAL ( var )		3674572	0					
ANR	3674642	Callee	ZSTR_VAL		3674572	0					
ANR	3674643	Identifier	ZSTR_VAL		3674572	0					
ANR	3674644	ArgumentList	var		3674572	1					
ANR	3674645	Argument	var		3674572	0					
ANR	3674646	Identifier	var		3674572	0					
ANR	3674647	Argument	ZSTR_LEN ( var ) <= 19 ? 0 : '+'		3674572	5					
ANR	3674648	ConditionalExpression	ZSTR_LEN ( var ) <= 19 ? 0 : '+'		3674572	0					
ANR	3674649	Condition	ZSTR_LEN ( var ) <= 19		3674572	0					
ANR	3674650	RelationalExpression	ZSTR_LEN ( var ) <= 19		3674572	0		<=			
ANR	3674651	CallExpression	ZSTR_LEN ( var )		3674572	0					
ANR	3674652	Callee	ZSTR_LEN		3674572	0					
ANR	3674653	Identifier	ZSTR_LEN		3674572	0					
ANR	3674654	ArgumentList	var		3674572	1					
ANR	3674655	Argument	var		3674572	0					
ANR	3674656	Identifier	var		3674572	0					
ANR	3674657	PrimaryExpression	19		3674572	1					
ANR	3674658	PrimaryExpression	0		3674572	1					
ANR	3674659	PrimaryExpression	'+'		3674572	2					
ANR	3674660	BreakStatement	break ;	49:4:2071:2076	3674572	2	True				
ANR	3674661	Label	case IS_VAR :	51:2:2081:2092	3674572	3	True				
ANR	3674662	Identifier	IS_VAR		3674572	0					
ANR	3674663	ExpressionStatement	"spprintf ( & decode , 0 , ""@%td"" , EX_VAR_TO_NUM ( op -> var ) - ops -> last_var )"	52:3:2097:2165	3674572	4	True				
ANR	3674664	CallExpression	"spprintf ( & decode , 0 , ""@%td"" , EX_VAR_TO_NUM ( op -> var ) - ops -> last_var )"		3674572	0					
ANR	3674665	Callee	spprintf		3674572	0					
ANR	3674666	Identifier	spprintf		3674572	0					
ANR	3674667	ArgumentList	& decode		3674572	1					
ANR	3674668	Argument	& decode		3674572	0					
ANR	3674669	UnaryOperationExpression	& decode		3674572	0					
ANR	3674670	UnaryOperator	&		3674572	0					
ANR	3674671	Identifier	decode		3674572	1					
ANR	3674672	Argument	0		3674572	1					
ANR	3674673	PrimaryExpression	0		3674572	0					
ANR	3674674	Argument	"""@%td"""		3674572	2					
ANR	3674675	PrimaryExpression	"""@%td"""		3674572	0					
ANR	3674676	Argument	EX_VAR_TO_NUM ( op -> var ) - ops -> last_var		3674572	3					
ANR	3674677	AdditiveExpression	EX_VAR_TO_NUM ( op -> var ) - ops -> last_var		3674572	0		-			
ANR	3674678	CallExpression	EX_VAR_TO_NUM ( op -> var )		3674572	0					
ANR	3674679	Callee	EX_VAR_TO_NUM		3674572	0					
ANR	3674680	Identifier	EX_VAR_TO_NUM		3674572	0					
ANR	3674681	ArgumentList	op -> var		3674572	1					
ANR	3674682	Argument	op -> var		3674572	0					
ANR	3674683	PtrMemberAccess	op -> var		3674572	0					
ANR	3674684	Identifier	op		3674572	0					
ANR	3674685	Identifier	var		3674572	1					
ANR	3674686	PtrMemberAccess	ops -> last_var		3674572	1					
ANR	3674687	Identifier	ops		3674572	0					
ANR	3674688	Identifier	last_var		3674572	1					
ANR	3674689	BreakStatement	break ;	53:2:2169:2174	3674572	5	True				
ANR	3674690	Label	case IS_TMP_VAR :	54:2:2178:2193	3674572	6	True				
ANR	3674691	Identifier	IS_TMP_VAR		3674572	0					
ANR	3674692	ExpressionStatement	"spprintf ( & decode , 0 , ""~%td"" , EX_VAR_TO_NUM ( op -> var ) - ops -> last_var )"	55:3:2198:2266	3674572	7	True				
ANR	3674693	CallExpression	"spprintf ( & decode , 0 , ""~%td"" , EX_VAR_TO_NUM ( op -> var ) - ops -> last_var )"		3674572	0					
ANR	3674694	Callee	spprintf		3674572	0					
ANR	3674695	Identifier	spprintf		3674572	0					
ANR	3674696	ArgumentList	& decode		3674572	1					
ANR	3674697	Argument	& decode		3674572	0					
ANR	3674698	UnaryOperationExpression	& decode		3674572	0					
ANR	3674699	UnaryOperator	&		3674572	0					
ANR	3674700	Identifier	decode		3674572	1					
ANR	3674701	Argument	0		3674572	1					
ANR	3674702	PrimaryExpression	0		3674572	0					
ANR	3674703	Argument	"""~%td"""		3674572	2					
ANR	3674704	PrimaryExpression	"""~%td"""		3674572	0					
ANR	3674705	Argument	EX_VAR_TO_NUM ( op -> var ) - ops -> last_var		3674572	3					
ANR	3674706	AdditiveExpression	EX_VAR_TO_NUM ( op -> var ) - ops -> last_var		3674572	0		-			
ANR	3674707	CallExpression	EX_VAR_TO_NUM ( op -> var )		3674572	0					
ANR	3674708	Callee	EX_VAR_TO_NUM		3674572	0					
ANR	3674709	Identifier	EX_VAR_TO_NUM		3674572	0					
ANR	3674710	ArgumentList	op -> var		3674572	1					
ANR	3674711	Argument	op -> var		3674572	0					
ANR	3674712	PtrMemberAccess	op -> var		3674572	0					
ANR	3674713	Identifier	op		3674572	0					
ANR	3674714	Identifier	var		3674572	1					
ANR	3674715	PtrMemberAccess	ops -> last_var		3674572	1					
ANR	3674716	Identifier	ops		3674572	0					
ANR	3674717	Identifier	last_var		3674572	1					
ANR	3674718	BreakStatement	break ;	56:2:2270:2275	3674572	8	True				
ANR	3674719	Label	case IS_CONST :	57:2:2279:2292	3674572	9	True				
ANR	3674720	Identifier	IS_CONST		3674572	0					
ANR	3674721	CompoundStatement		19:3:484:521	3674572	10					
ANR	3674722	IdentifierDeclStatement	"zval * literal = RT_CONSTANT ( ops , * op ) ;"	58:3:2299:2336	3674572	0	True				
ANR	3674723	IdentifierDecl	"* literal = RT_CONSTANT ( ops , * op )"		3674572	0					
ANR	3674724	IdentifierDeclType	zval *		3674572	0					
ANR	3674725	Identifier	literal		3674572	1					
ANR	3674726	AssignmentExpression	"* literal = RT_CONSTANT ( ops , * op )"		3674572	2		=			
ANR	3674727	Identifier	literal		3674572	0					
ANR	3674728	CallExpression	"RT_CONSTANT ( ops , * op )"		3674572	1					
ANR	3674729	Callee	RT_CONSTANT		3674572	0					
ANR	3674730	Identifier	RT_CONSTANT		3674572	0					
ANR	3674731	ArgumentList	ops		3674572	1					
ANR	3674732	Argument	ops		3674572	0					
ANR	3674733	Identifier	ops		3674572	0					
ANR	3674734	Argument	* op		3674572	1					
ANR	3674735	UnaryOperationExpression	* op		3674572	0					
ANR	3674736	UnaryOperator	*		3674572	0					
ANR	3674737	Identifier	op		3674572	1					
ANR	3674738	ExpressionStatement	"decode = phpdbg_short_zval_print ( literal , 20 )"	59:3:2341:2386	3674572	1	True				
ANR	3674739	AssignmentExpression	"decode = phpdbg_short_zval_print ( literal , 20 )"		3674572	0		=			
ANR	3674740	Identifier	decode		3674572	0					
ANR	3674741	CallExpression	"phpdbg_short_zval_print ( literal , 20 )"		3674572	1					
ANR	3674742	Callee	phpdbg_short_zval_print		3674572	0					
ANR	3674743	Identifier	phpdbg_short_zval_print		3674572	0					
ANR	3674744	ArgumentList	literal		3674572	1					
ANR	3674745	Argument	literal		3674572	0					
ANR	3674746	Identifier	literal		3674572	0					
ANR	3674747	Argument	20		3674572	1					
ANR	3674748	PrimaryExpression	20		3674572	0					
ANR	3674749	BreakStatement	break ;	60:4:2392:2397	3674572	11	True				
ANR	3674750	ReturnStatement	return decode ;	62:1:2403:2416	3674572	2	True				
ANR	3674751	Identifier	decode		3674572	0					
ANR	3674752	ReturnType	static inline char *		3674572	1					
ANR	3674753	Identifier	phpdbg_decode_op		3674572	2					
ANR	3674754	ParameterList	"zend_op_array * ops , znode_op * op , uint32_t type"		3674572	3					
ANR	3674755	Parameter	zend_op_array * ops	39:37:1755:1772	3674572	0	True				
ANR	3674756	ParameterType	zend_op_array *		3674572	0					
ANR	3674757	Identifier	ops		3674572	1					
ANR	3674758	Parameter	znode_op * op	39:57:1775:1786	3674572	1	True				
ANR	3674759	ParameterType	znode_op *		3674572	0					
ANR	3674760	Identifier	op		3674572	1					
ANR	3674761	Parameter	uint32_t type	39:71:1789:1801	3674572	2	True				
ANR	3674762	ParameterType	uint32_t		3674572	0					
ANR	3674763	Identifier	type		3674572	1					
ANR	3674764	CFGEntryNode	ENTRY		3674572		True				
ANR	3674765	CFGExitNode	EXIT		3674572		True				
ANR	3674766	Symbol	ops -> vars		3674572						
ANR	3674767	Symbol	op		3674572						
ANR	3674768	Symbol	* EX_VAR_TO_NUM		3674572						
ANR	3674769	Symbol	NULL		3674572						
ANR	3674770	Symbol	* op		3674572						
ANR	3674771	Symbol	phpdbg_short_zval_print		3674572						
ANR	3674772	Symbol	* * ops		3674572						
ANR	3674773	Symbol	var		3674572						
ANR	3674774	Symbol	type		3674572						
ANR	3674775	Symbol	decode		3674572						
ANR	3674776	Symbol	op -> var		3674572						
ANR	3674777	Symbol	RT_CONSTANT		3674572						
ANR	3674778	Symbol	ZSTR_VAL		3674572						
ANR	3674779	Symbol	literal		3674572						
ANR	3674780	Symbol	ops -> last_var		3674572						
ANR	3674781	Symbol	ops		3674572						
ANR	3674782	Symbol	* ops -> vars		3674572						
ANR	3674783	Symbol	ZSTR_LEN		3674572						
ANR	3674784	Symbol	* ops		3674572						
ANR	3674785	Symbol	& decode		3674572						
ANR	3674786	Symbol	EX_VAR_TO_NUM		3674572						
ANR	3674787	Function	phpdbg_decode_opline	65:0:2431:4813							
ANR	3674788	FunctionDef	"phpdbg_decode_opline (zend_op_array * ops , zend_op * op)"		3674787	0					
ANR	3674789	CompoundStatement		66:0:2500:4813	3674787	0					
ANR	3674790	IdentifierDeclStatement	const char * opcode_name = phpdbg_decode_opcode ( op -> opcode ) ;	67:1:2503:2561	3674787	0	True				
ANR	3674791	IdentifierDecl	* opcode_name = phpdbg_decode_opcode ( op -> opcode )		3674787	0					
ANR	3674792	IdentifierDeclType	const char *		3674787	0					
ANR	3674793	Identifier	opcode_name		3674787	1					
ANR	3674794	AssignmentExpression	* opcode_name = phpdbg_decode_opcode ( op -> opcode )		3674787	2		=			
ANR	3674795	Identifier	opcode_name		3674787	0					
ANR	3674796	CallExpression	phpdbg_decode_opcode ( op -> opcode )		3674787	1					
ANR	3674797	Callee	phpdbg_decode_opcode		3674787	0					
ANR	3674798	Identifier	phpdbg_decode_opcode		3674787	0					
ANR	3674799	ArgumentList	op -> opcode		3674787	1					
ANR	3674800	Argument	op -> opcode		3674787	0					
ANR	3674801	PtrMemberAccess	op -> opcode		3674787	0					
ANR	3674802	Identifier	op		3674787	0					
ANR	3674803	Identifier	opcode		3674787	1					
ANR	3674804	IdentifierDeclStatement	"char * result , * decode [ 4 ] = { NULL , NULL , NULL , NULL } ;"	68:1:2564:2615	3674787	1	True				
ANR	3674805	IdentifierDecl	* result		3674787	0					
ANR	3674806	IdentifierDeclType	char *		3674787	0					
ANR	3674807	Identifier	result		3674787	1					
ANR	3674808	IdentifierDecl	"* decode [ 4 ] = { NULL , NULL , NULL , NULL }"		3674787	1					
ANR	3674809	IdentifierDeclType	char * [ 4 ]		3674787	0					
ANR	3674810	Identifier	decode		3674787	1					
ANR	3674811	PrimaryExpression	4		3674787	2					
ANR	3674812	AssignmentExpression	"* decode [ 4 ] = { NULL , NULL , NULL , NULL }"		3674787	3		=			
ANR	3674813	Identifier	decode		3674787	0					
ANR	3674814	InitializerList	NULL		3674787	1					
ANR	3674815	Identifier	NULL		3674787	0					
ANR	3674816	Identifier	NULL		3674787	1					
ANR	3674817	Identifier	NULL		3674787	2					
ANR	3674818	Identifier	NULL		3674787	3					
ANR	3674819	SwitchStatement	switch ( op -> opcode )		3674787	2					
ANR	3674820	Condition	op -> opcode	71:9:2637:2646	3674787	0	True				
ANR	3674821	PtrMemberAccess	op -> opcode		3674787	0					
ANR	3674822	Identifier	op		3674787	0					
ANR	3674823	Identifier	opcode		3674787	1					
ANR	3674824	CompoundStatement		6:21:148:148	3674787	1					
ANR	3674825	Label	case ZEND_FAST_CALL :	72:1:2652:2671	3674787	0	True				
ANR	3674826	Identifier	ZEND_FAST_CALL		3674787	0					
ANR	3674827	IfStatement	if ( op -> extended_value == ZEND_FAST_CALL_FROM_FINALLY )		3674787	1					
ANR	3674828	Condition	op -> extended_value == ZEND_FAST_CALL_FROM_FINALLY	73:6:2679:2727	3674787	0	True				
ANR	3674829	EqualityExpression	op -> extended_value == ZEND_FAST_CALL_FROM_FINALLY		3674787	0		==			
ANR	3674830	PtrMemberAccess	op -> extended_value		3674787	0					
ANR	3674831	Identifier	op		3674787	0					
ANR	3674832	Identifier	extended_value		3674787	1					
ANR	3674833	Identifier	ZEND_FAST_CALL_FROM_FINALLY		3674787	1					
ANR	3674834	CompoundStatement		8:57:229:229	3674787	1					
ANR	3674835	ExpressionStatement	"decode [ 0 ] = estrdup ( ""FAST_CALL<FROM_FINALLY>"" )"	74:3:2735:2781	3674787	0	True				
ANR	3674836	AssignmentExpression	"decode [ 0 ] = estrdup ( ""FAST_CALL<FROM_FINALLY>"" )"		3674787	0		=			
ANR	3674837	ArrayIndexing	decode [ 0 ]		3674787	0					
ANR	3674838	Identifier	decode		3674787	0					
ANR	3674839	PrimaryExpression	0		3674787	1					
ANR	3674840	CallExpression	"estrdup ( ""FAST_CALL<FROM_FINALLY>"" )"		3674787	1					
ANR	3674841	Callee	estrdup		3674787	0					
ANR	3674842	Identifier	estrdup		3674787	0					
ANR	3674843	ArgumentList	"""FAST_CALL<FROM_FINALLY>"""		3674787	1					
ANR	3674844	Argument	"""FAST_CALL<FROM_FINALLY>"""		3674787	0					
ANR	3674845	PrimaryExpression	"""FAST_CALL<FROM_FINALLY>"""		3674787	0					
ANR	3674846	BreakStatement	break ;	76:2:2789:2794	3674787	2	True				
ANR	3674847	Label	case ZEND_FAST_RET :	77:1:2797:2815	3674787	3	True				
ANR	3674848	Identifier	ZEND_FAST_RET		3674787	0					
ANR	3674849	IfStatement	if ( op -> extended_value != 0 )		3674787	4					
ANR	3674850	Condition	op -> extended_value != 0	78:6:2823:2845	3674787	0	True				
ANR	3674851	EqualityExpression	op -> extended_value != 0		3674787	0		!=			
ANR	3674852	PtrMemberAccess	op -> extended_value		3674787	0					
ANR	3674853	Identifier	op		3674787	0					
ANR	3674854	Identifier	extended_value		3674787	1					
ANR	3674855	PrimaryExpression	0		3674787	1					
ANR	3674856	CompoundStatement		13:31:347:347	3674787	1					
ANR	3674857	ExpressionStatement	"spprintf ( & decode [ 0 ] , 0 , ""FAST_RET<%s>"" , op -> extended_value == ZEND_FAST_RET_TO_CATCH ? ""TO_CATCH"" : ""TO_FINALLY"" )"	79:3:2853:2970	3674787	0	True				
ANR	3674858	CallExpression	"spprintf ( & decode [ 0 ] , 0 , ""FAST_RET<%s>"" , op -> extended_value == ZEND_FAST_RET_TO_CATCH ? ""TO_CATCH"" : ""TO_FINALLY"" )"		3674787	0					
ANR	3674859	Callee	spprintf		3674787	0					
ANR	3674860	Identifier	spprintf		3674787	0					
ANR	3674861	ArgumentList	& decode [ 0 ]		3674787	1					
ANR	3674862	Argument	& decode [ 0 ]		3674787	0					
ANR	3674863	UnaryOperationExpression	& decode [ 0 ]		3674787	0					
ANR	3674864	UnaryOperator	&		3674787	0					
ANR	3674865	ArrayIndexing	decode [ 0 ]		3674787	1					
ANR	3674866	Identifier	decode		3674787	0					
ANR	3674867	PrimaryExpression	0		3674787	1					
ANR	3674868	Argument	0		3674787	1					
ANR	3674869	PrimaryExpression	0		3674787	0					
ANR	3674870	Argument	"""FAST_RET<%s>"""		3674787	2					
ANR	3674871	PrimaryExpression	"""FAST_RET<%s>"""		3674787	0					
ANR	3674872	Argument	"op -> extended_value == ZEND_FAST_RET_TO_CATCH ? ""TO_CATCH"" : ""TO_FINALLY"""		3674787	3					
ANR	3674873	ConditionalExpression	"op -> extended_value == ZEND_FAST_RET_TO_CATCH ? ""TO_CATCH"" : ""TO_FINALLY"""		3674787	0					
ANR	3674874	Condition	op -> extended_value == ZEND_FAST_RET_TO_CATCH		3674787	0					
ANR	3674875	EqualityExpression	op -> extended_value == ZEND_FAST_RET_TO_CATCH		3674787	0		==			
ANR	3674876	PtrMemberAccess	op -> extended_value		3674787	0					
ANR	3674877	Identifier	op		3674787	0					
ANR	3674878	Identifier	extended_value		3674787	1					
ANR	3674879	Identifier	ZEND_FAST_RET_TO_CATCH		3674787	1					
ANR	3674880	PrimaryExpression	"""TO_CATCH"""		3674787	1					
ANR	3674881	PrimaryExpression	"""TO_FINALLY"""		3674787	2					
ANR	3674882	BreakStatement	break ;	82:2:2978:2983	3674787	5	True				
ANR	3674883	SwitchStatement	switch ( op -> opcode )		3674787	3					
ANR	3674884	Condition	op -> opcode	86:9:3009:3018	3674787	0	True				
ANR	3674885	PtrMemberAccess	op -> opcode		3674787	0					
ANR	3674886	Identifier	op		3674787	0					
ANR	3674887	Identifier	opcode		3674787	1					
ANR	3674888	CompoundStatement		21:21:520:520	3674787	1					
ANR	3674889	Label	case ZEND_JMP :	87:1:3024:3037	3674787	0	True				
ANR	3674890	Identifier	ZEND_JMP		3674787	0					
ANR	3674891	Label	case ZEND_FAST_CALL :	88:1:3040:3059	3674787	1	True				
ANR	3674892	Identifier	ZEND_FAST_CALL		3674787	0					
ANR	3674893	ExpressionStatement	"spprintf ( & decode [ 1 ] , 0 , ""J%td"" , OP_JMP_ADDR ( op , op -> op1 ) - ops -> opcodes )"	89:2:3063:3135	3674787	2	True				
ANR	3674894	CallExpression	"spprintf ( & decode [ 1 ] , 0 , ""J%td"" , OP_JMP_ADDR ( op , op -> op1 ) - ops -> opcodes )"		3674787	0					
ANR	3674895	Callee	spprintf		3674787	0					
ANR	3674896	Identifier	spprintf		3674787	0					
ANR	3674897	ArgumentList	& decode [ 1 ]		3674787	1					
ANR	3674898	Argument	& decode [ 1 ]		3674787	0					
ANR	3674899	UnaryOperationExpression	& decode [ 1 ]		3674787	0					
ANR	3674900	UnaryOperator	&		3674787	0					
ANR	3674901	ArrayIndexing	decode [ 1 ]		3674787	1					
ANR	3674902	Identifier	decode		3674787	0					
ANR	3674903	PrimaryExpression	1		3674787	1					
ANR	3674904	Argument	0		3674787	1					
ANR	3674905	PrimaryExpression	0		3674787	0					
ANR	3674906	Argument	"""J%td"""		3674787	2					
ANR	3674907	PrimaryExpression	"""J%td"""		3674787	0					
ANR	3674908	Argument	"OP_JMP_ADDR ( op , op -> op1 ) - ops -> opcodes"		3674787	3					
ANR	3674909	AdditiveExpression	"OP_JMP_ADDR ( op , op -> op1 ) - ops -> opcodes"		3674787	0		-			
ANR	3674910	CallExpression	"OP_JMP_ADDR ( op , op -> op1 )"		3674787	0					
ANR	3674911	Callee	OP_JMP_ADDR		3674787	0					
ANR	3674912	Identifier	OP_JMP_ADDR		3674787	0					
ANR	3674913	ArgumentList	op		3674787	1					
ANR	3674914	Argument	op		3674787	0					
ANR	3674915	Identifier	op		3674787	0					
ANR	3674916	Argument	op -> op1		3674787	1					
ANR	3674917	PtrMemberAccess	op -> op1		3674787	0					
ANR	3674918	Identifier	op		3674787	0					
ANR	3674919	Identifier	op1		3674787	1					
ANR	3674920	PtrMemberAccess	ops -> opcodes		3674787	1					
ANR	3674921	Identifier	ops		3674787	0					
ANR	3674922	Identifier	opcodes		3674787	1					
ANR	3674923	BreakStatement	break ;	90:2:3139:3144	3674787	3	True				
ANR	3674924	Label	case ZEND_INIT_FCALL :	92:1:3148:3168	3674787	4	True				
ANR	3674925	Identifier	ZEND_INIT_FCALL		3674787	0					
ANR	3674926	Label	case ZEND_RECV :	93:1:3171:3185	3674787	5	True				
ANR	3674927	Identifier	ZEND_RECV		3674787	0					
ANR	3674928	Label	case ZEND_RECV_INIT :	94:1:3188:3207	3674787	6	True				
ANR	3674929	Identifier	ZEND_RECV_INIT		3674787	0					
ANR	3674930	Label	case ZEND_RECV_VARIADIC :	95:1:3210:3233	3674787	7	True				
ANR	3674931	Identifier	ZEND_RECV_VARIADIC		3674787	0					
ANR	3674932	Statement	spprintf	96:2:3237:3244	3674787	8	True				
ANR	3674933	Statement	(	96:10:3245:3245	3674787	9	True				
ANR	3674934	Statement	&	96:11:3246:3246	3674787	10	True				
ANR	3674935	Statement	decode	96:12:3247:3252	3674787	11	True				
ANR	3674936	Statement	[	96:18:3253:3253	3674787	12	True				
ANR	3674937	Statement	1	96:19:3254:3254	3674787	13	True				
ANR	3674938	Statement	]	96:20:3255:3255	3674787	14	True				
ANR	3674939	Statement	","	96:21:3256:3256	3674787	15	True				
ANR	3674940	Statement	0	96:23:3258:3258	3674787	16	True				
ANR	3674941	Statement	","	96:24:3259:3259	3674787	17	True				
ANR	3674942	Statement	"""%"""	96:26:3261:3263	3674787	18	True				
ANR	3674943	Statement	PRIu32	96:30:3265:3270	3674787	19	True				
ANR	3674944	Statement	","	96:36:3271:3271	3674787	20	True				
ANR	3674945	Statement	op	96:38:3273:3274	3674787	21	True				
ANR	3674946	Statement	->	96:40:3275:3276	3674787	22	True				
ANR	3674947	Statement	op1	96:42:3277:3279	3674787	23	True				
ANR	3674948	Statement	.	96:45:3280:3280	3674787	24	True				
ANR	3674949	Statement	num	96:46:3281:3283	3674787	25	True				
ANR	3674950	Statement	)	96:49:3284:3284	3674787	26	True				
ANR	3674951	ExpressionStatement		96:50:3285:3285	3674787	27	True				
ANR	3674952	BreakStatement	break ;	97:2:3289:3294	3674787	28	True				
ANR	3674953	Label	default :	99:1:3298:3305	3674787	29	True				
ANR	3674954	Identifier	default		3674787	0					
ANR	3674955	ExpressionStatement	"decode [ 1 ] = phpdbg_decode_op ( ops , & op -> op1 , op -> op1_type )"	100:2:3309:3366	3674787	30	True				
ANR	3674956	AssignmentExpression	"decode [ 1 ] = phpdbg_decode_op ( ops , & op -> op1 , op -> op1_type )"		3674787	0		=			
ANR	3674957	ArrayIndexing	decode [ 1 ]		3674787	0					
ANR	3674958	Identifier	decode		3674787	0					
ANR	3674959	PrimaryExpression	1		3674787	1					
ANR	3674960	CallExpression	"phpdbg_decode_op ( ops , & op -> op1 , op -> op1_type )"		3674787	1					
ANR	3674961	Callee	phpdbg_decode_op		3674787	0					
ANR	3674962	Identifier	phpdbg_decode_op		3674787	0					
ANR	3674963	ArgumentList	ops		3674787	1					
ANR	3674964	Argument	ops		3674787	0					
ANR	3674965	Identifier	ops		3674787	0					
ANR	3674966	Argument	& op -> op1		3674787	1					
ANR	3674967	UnaryOperationExpression	& op -> op1		3674787	0					
ANR	3674968	UnaryOperator	&		3674787	0					
ANR	3674969	PtrMemberAccess	op -> op1		3674787	1					
ANR	3674970	Identifier	op		3674787	0					
ANR	3674971	Identifier	op1		3674787	1					
ANR	3674972	Argument	op -> op1_type		3674787	2					
ANR	3674973	PtrMemberAccess	op -> op1_type		3674787	0					
ANR	3674974	Identifier	op		3674787	0					
ANR	3674975	Identifier	op1_type		3674787	1					
ANR	3674976	BreakStatement	break ;	101:2:3370:3375	3674787	31	True				
ANR	3674977	SwitchStatement	switch ( op -> opcode )		3674787	4					
ANR	3674978	Condition	op -> opcode	105:9:3401:3410	3674787	0	True				
ANR	3674979	PtrMemberAccess	op -> opcode		3674787	0					
ANR	3674980	Identifier	op		3674787	0					
ANR	3674981	Identifier	opcode		3674787	1					
ANR	3674982	CompoundStatement		40:21:912:912	3674787	1					
ANR	3674983	Label	case ZEND_JMPZNZ :	106:1:3416:3432	3674787	0	True				
ANR	3674984	Identifier	ZEND_JMPZNZ		3674787	0					
ANR	3674985	ExpressionStatement	"spprintf ( & decode [ 2 ] , 0 , ""J%td or J%td"" , OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes , ZEND_OFFSET_TO_OPLINE ( op , op -> extended_value ) - ops -> opcodes )"	107:2:3436:3584	3674787	1	True				
ANR	3674986	CallExpression	"spprintf ( & decode [ 2 ] , 0 , ""J%td or J%td"" , OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes , ZEND_OFFSET_TO_OPLINE ( op , op -> extended_value ) - ops -> opcodes )"		3674787	0					
ANR	3674987	Callee	spprintf		3674787	0					
ANR	3674988	Identifier	spprintf		3674787	0					
ANR	3674989	ArgumentList	& decode [ 2 ]		3674787	1					
ANR	3674990	Argument	& decode [ 2 ]		3674787	0					
ANR	3674991	UnaryOperationExpression	& decode [ 2 ]		3674787	0					
ANR	3674992	UnaryOperator	&		3674787	0					
ANR	3674993	ArrayIndexing	decode [ 2 ]		3674787	1					
ANR	3674994	Identifier	decode		3674787	0					
ANR	3674995	PrimaryExpression	2		3674787	1					
ANR	3674996	Argument	0		3674787	1					
ANR	3674997	PrimaryExpression	0		3674787	0					
ANR	3674998	Argument	"""J%td or J%td"""		3674787	2					
ANR	3674999	PrimaryExpression	"""J%td or J%td"""		3674787	0					
ANR	3675000	Argument	"OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes"		3674787	3					
ANR	3675001	AdditiveExpression	"OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes"		3674787	0		-			
ANR	3675002	CallExpression	"OP_JMP_ADDR ( op , op -> op2 )"		3674787	0					
ANR	3675003	Callee	OP_JMP_ADDR		3674787	0					
ANR	3675004	Identifier	OP_JMP_ADDR		3674787	0					
ANR	3675005	ArgumentList	op		3674787	1					
ANR	3675006	Argument	op		3674787	0					
ANR	3675007	Identifier	op		3674787	0					
ANR	3675008	Argument	op -> op2		3674787	1					
ANR	3675009	PtrMemberAccess	op -> op2		3674787	0					
ANR	3675010	Identifier	op		3674787	0					
ANR	3675011	Identifier	op2		3674787	1					
ANR	3675012	PtrMemberAccess	ops -> opcodes		3674787	1					
ANR	3675013	Identifier	ops		3674787	0					
ANR	3675014	Identifier	opcodes		3674787	1					
ANR	3675015	Argument	"ZEND_OFFSET_TO_OPLINE ( op , op -> extended_value ) - ops -> opcodes"		3674787	4					
ANR	3675016	AdditiveExpression	"ZEND_OFFSET_TO_OPLINE ( op , op -> extended_value ) - ops -> opcodes"		3674787	0		-			
ANR	3675017	CallExpression	"ZEND_OFFSET_TO_OPLINE ( op , op -> extended_value )"		3674787	0					
ANR	3675018	Callee	ZEND_OFFSET_TO_OPLINE		3674787	0					
ANR	3675019	Identifier	ZEND_OFFSET_TO_OPLINE		3674787	0					
ANR	3675020	ArgumentList	op		3674787	1					
ANR	3675021	Argument	op		3674787	0					
ANR	3675022	Identifier	op		3674787	0					
ANR	3675023	Argument	op -> extended_value		3674787	1					
ANR	3675024	PtrMemberAccess	op -> extended_value		3674787	0					
ANR	3675025	Identifier	op		3674787	0					
ANR	3675026	Identifier	extended_value		3674787	1					
ANR	3675027	PtrMemberAccess	ops -> opcodes		3674787	1					
ANR	3675028	Identifier	ops		3674787	0					
ANR	3675029	Identifier	opcodes		3674787	1					
ANR	3675030	BreakStatement	break ;	110:2:3588:3593	3674787	2	True				
ANR	3675031	Label	case ZEND_JMPZ :	112:1:3597:3611	3674787	3	True				
ANR	3675032	Identifier	ZEND_JMPZ		3674787	0					
ANR	3675033	Label	case ZEND_JMPNZ :	113:1:3614:3629	3674787	4	True				
ANR	3675034	Identifier	ZEND_JMPNZ		3674787	0					
ANR	3675035	Label	case ZEND_JMPZ_EX :	114:1:3632:3649	3674787	5	True				
ANR	3675036	Identifier	ZEND_JMPZ_EX		3674787	0					
ANR	3675037	Label	case ZEND_JMPNZ_EX :	115:1:3652:3670	3674787	6	True				
ANR	3675038	Identifier	ZEND_JMPNZ_EX		3674787	0					
ANR	3675039	Label	case ZEND_JMP_SET :	116:1:3673:3690	3674787	7	True				
ANR	3675040	Identifier	ZEND_JMP_SET		3674787	0					
ANR	3675041	Label	case ZEND_ASSERT_CHECK :	117:1:3693:3715	3674787	8	True				
ANR	3675042	Identifier	ZEND_ASSERT_CHECK		3674787	0					
ANR	3675043	ExpressionStatement	"spprintf ( & decode [ 2 ] , 0 , ""J%td"" , OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes )"	118:2:3719:3791	3674787	9	True				
ANR	3675044	CallExpression	"spprintf ( & decode [ 2 ] , 0 , ""J%td"" , OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes )"		3674787	0					
ANR	3675045	Callee	spprintf		3674787	0					
ANR	3675046	Identifier	spprintf		3674787	0					
ANR	3675047	ArgumentList	& decode [ 2 ]		3674787	1					
ANR	3675048	Argument	& decode [ 2 ]		3674787	0					
ANR	3675049	UnaryOperationExpression	& decode [ 2 ]		3674787	0					
ANR	3675050	UnaryOperator	&		3674787	0					
ANR	3675051	ArrayIndexing	decode [ 2 ]		3674787	1					
ANR	3675052	Identifier	decode		3674787	0					
ANR	3675053	PrimaryExpression	2		3674787	1					
ANR	3675054	Argument	0		3674787	1					
ANR	3675055	PrimaryExpression	0		3674787	0					
ANR	3675056	Argument	"""J%td"""		3674787	2					
ANR	3675057	PrimaryExpression	"""J%td"""		3674787	0					
ANR	3675058	Argument	"OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes"		3674787	3					
ANR	3675059	AdditiveExpression	"OP_JMP_ADDR ( op , op -> op2 ) - ops -> opcodes"		3674787	0		-			
ANR	3675060	CallExpression	"OP_JMP_ADDR ( op , op -> op2 )"		3674787	0					
ANR	3675061	Callee	OP_JMP_ADDR		3674787	0					
ANR	3675062	Identifier	OP_JMP_ADDR		3674787	0					
ANR	3675063	ArgumentList	op		3674787	1					
ANR	3675064	Argument	op		3674787	0					
ANR	3675065	Identifier	op		3674787	0					
ANR	3675066	Argument	op -> op2		3674787	1					
ANR	3675067	PtrMemberAccess	op -> op2		3674787	0					
ANR	3675068	Identifier	op		3674787	0					
ANR	3675069	Identifier	op2		3674787	1					
ANR	3675070	PtrMemberAccess	ops -> opcodes		3674787	1					
ANR	3675071	Identifier	ops		3674787	0					
ANR	3675072	Identifier	opcodes		3674787	1					
ANR	3675073	BreakStatement	break ;	119:2:3795:3800	3674787	10	True				
ANR	3675074	Label	case ZEND_FAST_CALL :	121:1:3804:3823	3674787	11	True				
ANR	3675075	Identifier	ZEND_FAST_CALL		3674787	0					
ANR	3675076	Label	case ZEND_FAST_RET :	122:1:3826:3844	3674787	12	True				
ANR	3675077	Identifier	ZEND_FAST_RET		3674787	0					
ANR	3675078	IfStatement	if ( op -> extended_value != 0 )		3674787	13					
ANR	3675079	Condition	op -> extended_value != 0	123:6:3852:3874	3674787	0	True				
ANR	3675080	EqualityExpression	op -> extended_value != 0		3674787	0		!=			
ANR	3675081	PtrMemberAccess	op -> extended_value		3674787	0					
ANR	3675082	Identifier	op		3674787	0					
ANR	3675083	Identifier	extended_value		3674787	1					
ANR	3675084	PrimaryExpression	0		3674787	1					
ANR	3675085	CompoundStatement		58:31:1376:1376	3674787	1					
ANR	3675086	Statement	spprintf	124:3:3882:3889	3674787	0	True				
ANR	3675087	Statement	(	124:11:3890:3890	3674787	1	True				
ANR	3675088	Statement	&	124:12:3891:3891	3674787	2	True				
ANR	3675089	Statement	decode	124:13:3892:3897	3674787	3	True				
ANR	3675090	Statement	[	124:19:3898:3898	3674787	4	True				
ANR	3675091	Statement	2	124:20:3899:3899	3674787	5	True				
ANR	3675092	Statement	]	124:21:3900:3900	3674787	6	True				
ANR	3675093	Statement	","	124:22:3901:3901	3674787	7	True				
ANR	3675094	Statement	0	124:24:3903:3903	3674787	8	True				
ANR	3675095	Statement	","	124:25:3904:3904	3674787	9	True				
ANR	3675096	Statement	"""J%"""	124:27:3906:3909	3674787	10	True				
ANR	3675097	Statement	PRIu32	124:32:3911:3916	3674787	11	True				
ANR	3675098	Statement	","	124:38:3917:3917	3674787	12	True				
ANR	3675099	Statement	op	124:40:3919:3920	3674787	13	True				
ANR	3675100	Statement	->	124:42:3921:3922	3674787	14	True				
ANR	3675101	Statement	op2	124:44:3923:3925	3674787	15	True				
ANR	3675102	Statement	.	124:47:3926:3926	3674787	16	True				
ANR	3675103	Statement	opline_num	124:48:3927:3936	3674787	17	True				
ANR	3675104	Statement	)	124:58:3937:3937	3674787	18	True				
ANR	3675105	ExpressionStatement		124:59:3938:3938	3674787	19	True				
ANR	3675106	BreakStatement	break ;	126:2:3946:3951	3674787	14	True				
ANR	3675107	Label	case ZEND_SEND_VAL :	128:1:3955:3973	3674787	15	True				
ANR	3675108	Identifier	ZEND_SEND_VAL		3674787	0					
ANR	3675109	Label	case ZEND_SEND_VAL_EX :	129:1:3976:3997	3674787	16	True				
ANR	3675110	Identifier	ZEND_SEND_VAL_EX		3674787	0					
ANR	3675111	Label	case ZEND_SEND_VAR :	130:1:4000:4018	3674787	17	True				
ANR	3675112	Identifier	ZEND_SEND_VAR		3674787	0					
ANR	3675113	Label	case ZEND_SEND_VAR_NO_REF :	131:1:4021:4046	3674787	18	True				
ANR	3675114	Identifier	ZEND_SEND_VAR_NO_REF		3674787	0					
ANR	3675115	Label	case ZEND_SEND_REF :	132:1:4049:4067	3674787	19	True				
ANR	3675116	Identifier	ZEND_SEND_REF		3674787	0					
ANR	3675117	Label	case ZEND_SEND_VAR_EX :	133:1:4070:4091	3674787	20	True				
ANR	3675118	Identifier	ZEND_SEND_VAR_EX		3674787	0					
ANR	3675119	Label	case ZEND_SEND_USER :	134:1:4094:4113	3674787	21	True				
ANR	3675120	Identifier	ZEND_SEND_USER		3674787	0					
ANR	3675121	Statement	spprintf	135:2:4117:4124	3674787	22	True				
ANR	3675122	Statement	(	135:10:4125:4125	3674787	23	True				
ANR	3675123	Statement	&	135:11:4126:4126	3674787	24	True				
ANR	3675124	Statement	decode	135:12:4127:4132	3674787	25	True				
ANR	3675125	Statement	[	135:18:4133:4133	3674787	26	True				
ANR	3675126	Statement	2	135:19:4134:4134	3674787	27	True				
ANR	3675127	Statement	]	135:20:4135:4135	3674787	28	True				
ANR	3675128	Statement	","	135:21:4136:4136	3674787	29	True				
ANR	3675129	Statement	0	135:23:4138:4138	3674787	30	True				
ANR	3675130	Statement	","	135:24:4139:4139	3674787	31	True				
ANR	3675131	Statement	"""%"""	135:26:4141:4143	3674787	32	True				
ANR	3675132	Statement	PRIu32	135:30:4145:4150	3674787	33	True				
ANR	3675133	Statement	","	135:36:4151:4151	3674787	34	True				
ANR	3675134	Statement	op	135:38:4153:4154	3674787	35	True				
ANR	3675135	Statement	->	135:40:4155:4156	3674787	36	True				
ANR	3675136	Statement	op2	135:42:4157:4159	3674787	37	True				
ANR	3675137	Statement	.	135:45:4160:4160	3674787	38	True				
ANR	3675138	Statement	num	135:46:4161:4163	3674787	39	True				
ANR	3675139	Statement	)	135:49:4164:4164	3674787	40	True				
ANR	3675140	ExpressionStatement		135:50:4165:4165	3674787	41	True				
ANR	3675141	BreakStatement	break ;	136:2:4169:4174	3674787	42	True				
ANR	3675142	Label	default :	138:1:4178:4185	3674787	43	True				
ANR	3675143	Identifier	default		3674787	0					
ANR	3675144	ExpressionStatement	"decode [ 2 ] = phpdbg_decode_op ( ops , & op -> op2 , op -> op2_type )"	139:2:4189:4246	3674787	44	True				
ANR	3675145	AssignmentExpression	"decode [ 2 ] = phpdbg_decode_op ( ops , & op -> op2 , op -> op2_type )"		3674787	0		=			
ANR	3675146	ArrayIndexing	decode [ 2 ]		3674787	0					
ANR	3675147	Identifier	decode		3674787	0					
ANR	3675148	PrimaryExpression	2		3674787	1					
ANR	3675149	CallExpression	"phpdbg_decode_op ( ops , & op -> op2 , op -> op2_type )"		3674787	1					
ANR	3675150	Callee	phpdbg_decode_op		3674787	0					
ANR	3675151	Identifier	phpdbg_decode_op		3674787	0					
ANR	3675152	ArgumentList	ops		3674787	1					
ANR	3675153	Argument	ops		3674787	0					
ANR	3675154	Identifier	ops		3674787	0					
ANR	3675155	Argument	& op -> op2		3674787	1					
ANR	3675156	UnaryOperationExpression	& op -> op2		3674787	0					
ANR	3675157	UnaryOperator	&		3674787	0					
ANR	3675158	PtrMemberAccess	op -> op2		3674787	1					
ANR	3675159	Identifier	op		3674787	0					
ANR	3675160	Identifier	op2		3674787	1					
ANR	3675161	Argument	op -> op2_type		3674787	2					
ANR	3675162	PtrMemberAccess	op -> op2_type		3674787	0					
ANR	3675163	Identifier	op		3674787	0					
ANR	3675164	Identifier	op2_type		3674787	1					
ANR	3675165	BreakStatement	break ;	140:2:4250:4255	3674787	45	True				
ANR	3675166	SwitchStatement	switch ( op -> opcode )		3674787	5					
ANR	3675167	Condition	op -> opcode	144:9:4284:4293	3674787	0	True				
ANR	3675168	PtrMemberAccess	op -> opcode		3674787	0					
ANR	3675169	Identifier	op		3674787	0					
ANR	3675170	Identifier	opcode		3674787	1					
ANR	3675171	CompoundStatement		79:21:1795:1795	3674787	1					
ANR	3675172	Label	case ZEND_CATCH :	145:1:4299:4314	3674787	0	True				
ANR	3675173	Identifier	ZEND_CATCH		3674787	0					
ANR	3675174	Statement	spprintf	146:2:4318:4325	3674787	1	True				
ANR	3675175	Statement	(	146:10:4326:4326	3674787	2	True				
ANR	3675176	Statement	&	146:11:4327:4327	3674787	3	True				
ANR	3675177	Statement	decode	146:12:4328:4333	3674787	4	True				
ANR	3675178	Statement	[	146:18:4334:4334	3674787	5	True				
ANR	3675179	Statement	3	146:19:4335:4335	3674787	6	True				
ANR	3675180	Statement	]	146:20:4336:4336	3674787	7	True				
ANR	3675181	Statement	","	146:21:4337:4337	3674787	8	True				
ANR	3675182	Statement	0	146:23:4339:4339	3674787	9	True				
ANR	3675183	Statement	","	146:24:4340:4340	3674787	10	True				
ANR	3675184	Statement	"""%"""	146:26:4342:4344	3674787	11	True				
ANR	3675185	Statement	PRIu32	146:30:4346:4351	3674787	12	True				
ANR	3675186	Statement	","	146:36:4352:4352	3674787	13	True				
ANR	3675187	Statement	op	146:38:4354:4355	3674787	14	True				
ANR	3675188	Statement	->	146:40:4356:4357	3674787	15	True				
ANR	3675189	Statement	result	146:42:4358:4363	3674787	16	True				
ANR	3675190	Statement	.	146:48:4364:4364	3674787	17	True				
ANR	3675191	Statement	num	146:49:4365:4367	3674787	18	True				
ANR	3675192	Statement	)	146:52:4368:4368	3674787	19	True				
ANR	3675193	ExpressionStatement		146:53:4369:4369	3674787	20	True				
ANR	3675194	BreakStatement	break ;	147:2:4373:4378	3674787	21	True				
ANR	3675195	Label	default :	148:1:4381:4388	3674787	22	True				
ANR	3675196	Identifier	default		3674787	0					
ANR	3675197	ExpressionStatement	"decode [ 3 ] = phpdbg_decode_op ( ops , & op -> result , op -> result_type )"	149:2:4392:4455	3674787	23	True				
ANR	3675198	AssignmentExpression	"decode [ 3 ] = phpdbg_decode_op ( ops , & op -> result , op -> result_type )"		3674787	0		=			
ANR	3675199	ArrayIndexing	decode [ 3 ]		3674787	0					
ANR	3675200	Identifier	decode		3674787	0					
ANR	3675201	PrimaryExpression	3		3674787	1					
ANR	3675202	CallExpression	"phpdbg_decode_op ( ops , & op -> result , op -> result_type )"		3674787	1					
ANR	3675203	Callee	phpdbg_decode_op		3674787	0					
ANR	3675204	Identifier	phpdbg_decode_op		3674787	0					
ANR	3675205	ArgumentList	ops		3674787	1					
ANR	3675206	Argument	ops		3674787	0					
ANR	3675207	Identifier	ops		3674787	0					
ANR	3675208	Argument	& op -> result		3674787	1					
ANR	3675209	UnaryOperationExpression	& op -> result		3674787	0					
ANR	3675210	UnaryOperator	&		3674787	0					
ANR	3675211	PtrMemberAccess	op -> result		3674787	1					
ANR	3675212	Identifier	op		3674787	0					
ANR	3675213	Identifier	result		3674787	1					
ANR	3675214	Argument	op -> result_type		3674787	2					
ANR	3675215	PtrMemberAccess	op -> result_type		3674787	0					
ANR	3675216	Identifier	op		3674787	0					
ANR	3675217	Identifier	result_type		3674787	1					
ANR	3675218	BreakStatement	break ;	150:2:4459:4464	3674787	24	True				
ANR	3675219	ExpressionStatement	"spprintf ( & result , 0 , ""%-23s %-20s %-20s %-20s"" , decode [ 0 ] ? decode [ 0 ] : opcode_name , decode [ 1 ] ? decode [ 1 ] : """" , decode [ 2 ] ? decode [ 2 ] : """" , decode [ 3 ] ? decode [ 3 ] : """" )"	153:1:4471:4649	3674787	6	True				
ANR	3675220	CallExpression	"spprintf ( & result , 0 , ""%-23s %-20s %-20s %-20s"" , decode [ 0 ] ? decode [ 0 ] : opcode_name , decode [ 1 ] ? decode [ 1 ] : """" , decode [ 2 ] ? decode [ 2 ] : """" , decode [ 3 ] ? decode [ 3 ] : """" )"		3674787	0					
ANR	3675221	Callee	spprintf		3674787	0					
ANR	3675222	Identifier	spprintf		3674787	0					
ANR	3675223	ArgumentList	& result		3674787	1					
ANR	3675224	Argument	& result		3674787	0					
ANR	3675225	UnaryOperationExpression	& result		3674787	0					
ANR	3675226	UnaryOperator	&		3674787	0					
ANR	3675227	Identifier	result		3674787	1					
ANR	3675228	Argument	0		3674787	1					
ANR	3675229	PrimaryExpression	0		3674787	0					
ANR	3675230	Argument	"""%-23s %-20s %-20s %-20s"""		3674787	2					
ANR	3675231	PrimaryExpression	"""%-23s %-20s %-20s %-20s"""		3674787	0					
ANR	3675232	Argument	decode [ 0 ] ? decode [ 0 ] : opcode_name		3674787	3					
ANR	3675233	ConditionalExpression	decode [ 0 ] ? decode [ 0 ] : opcode_name		3674787	0					
ANR	3675234	Condition	decode [ 0 ]		3674787	0					
ANR	3675235	ArrayIndexing	decode [ 0 ]		3674787	0					
ANR	3675236	Identifier	decode		3674787	0					
ANR	3675237	PrimaryExpression	0		3674787	1					
ANR	3675238	ArrayIndexing	decode [ 0 ]		3674787	1					
ANR	3675239	Identifier	decode		3674787	0					
ANR	3675240	PrimaryExpression	0		3674787	1					
ANR	3675241	Identifier	opcode_name		3674787	2					
ANR	3675242	Argument	"decode [ 1 ] ? decode [ 1 ] : """""		3674787	4					
ANR	3675243	ConditionalExpression	"decode [ 1 ] ? decode [ 1 ] : """""		3674787	0					
ANR	3675244	Condition	decode [ 1 ]		3674787	0					
ANR	3675245	ArrayIndexing	decode [ 1 ]		3674787	0					
ANR	3675246	Identifier	decode		3674787	0					
ANR	3675247	PrimaryExpression	1		3674787	1					
ANR	3675248	ArrayIndexing	decode [ 1 ]		3674787	1					
ANR	3675249	Identifier	decode		3674787	0					
ANR	3675250	PrimaryExpression	1		3674787	1					
ANR	3675251	PrimaryExpression	""""""		3674787	2					
ANR	3675252	Argument	"decode [ 2 ] ? decode [ 2 ] : """""		3674787	5					
ANR	3675253	ConditionalExpression	"decode [ 2 ] ? decode [ 2 ] : """""		3674787	0					
ANR	3675254	Condition	decode [ 2 ]		3674787	0					
ANR	3675255	ArrayIndexing	decode [ 2 ]		3674787	0					
ANR	3675256	Identifier	decode		3674787	0					
ANR	3675257	PrimaryExpression	2		3674787	1					
ANR	3675258	ArrayIndexing	decode [ 2 ]		3674787	1					
ANR	3675259	Identifier	decode		3674787	0					
ANR	3675260	PrimaryExpression	2		3674787	1					
ANR	3675261	PrimaryExpression	""""""		3674787	2					
ANR	3675262	Argument	"decode [ 3 ] ? decode [ 3 ] : """""		3674787	6					
ANR	3675263	ConditionalExpression	"decode [ 3 ] ? decode [ 3 ] : """""		3674787	0					
ANR	3675264	Condition	decode [ 3 ]		3674787	0					
ANR	3675265	ArrayIndexing	decode [ 3 ]		3674787	0					
ANR	3675266	Identifier	decode		3674787	0					
ANR	3675267	PrimaryExpression	3		3674787	1					
ANR	3675268	ArrayIndexing	decode [ 3 ]		3674787	1					
ANR	3675269	Identifier	decode		3674787	0					
ANR	3675270	PrimaryExpression	3		3674787	1					
ANR	3675271	PrimaryExpression	""""""		3674787	2					
ANR	3675272	IfStatement	if ( decode [ 0 ] )		3674787	7					
ANR	3675273	Condition	decode [ 0 ]	160:5:4657:4665	3674787	0	True				
ANR	3675274	ArrayIndexing	decode [ 0 ]		3674787	0					
ANR	3675275	Identifier	decode		3674787	0					
ANR	3675276	PrimaryExpression	0		3674787	1					
ANR	3675277	ExpressionStatement	efree ( decode [ 0 ] )	161:2:4670:4686	3674787	1	True				
ANR	3675278	CallExpression	efree ( decode [ 0 ] )		3674787	0					
ANR	3675279	Callee	efree		3674787	0					
ANR	3675280	Identifier	efree		3674787	0					
ANR	3675281	ArgumentList	decode [ 0 ]		3674787	1					
ANR	3675282	Argument	decode [ 0 ]		3674787	0					
ANR	3675283	ArrayIndexing	decode [ 0 ]		3674787	0					
ANR	3675284	Identifier	decode		3674787	0					
ANR	3675285	PrimaryExpression	0		3674787	1					
ANR	3675286	IfStatement	if ( decode [ 1 ] )		3674787	8					
ANR	3675287	Condition	decode [ 1 ]	162:5:4693:4701	3674787	0	True				
ANR	3675288	ArrayIndexing	decode [ 1 ]		3674787	0					
ANR	3675289	Identifier	decode		3674787	0					
ANR	3675290	PrimaryExpression	1		3674787	1					
ANR	3675291	ExpressionStatement	efree ( decode [ 1 ] )	163:2:4706:4722	3674787	1	True				
ANR	3675292	CallExpression	efree ( decode [ 1 ] )		3674787	0					
ANR	3675293	Callee	efree		3674787	0					
ANR	3675294	Identifier	efree		3674787	0					
ANR	3675295	ArgumentList	decode [ 1 ]		3674787	1					
ANR	3675296	Argument	decode [ 1 ]		3674787	0					
ANR	3675297	ArrayIndexing	decode [ 1 ]		3674787	0					
ANR	3675298	Identifier	decode		3674787	0					
ANR	3675299	PrimaryExpression	1		3674787	1					
ANR	3675300	IfStatement	if ( decode [ 2 ] )		3674787	9					
ANR	3675301	Condition	decode [ 2 ]	164:5:4729:4737	3674787	0	True				
ANR	3675302	ArrayIndexing	decode [ 2 ]		3674787	0					
ANR	3675303	Identifier	decode		3674787	0					
ANR	3675304	PrimaryExpression	2		3674787	1					
ANR	3675305	ExpressionStatement	efree ( decode [ 2 ] )	165:2:4742:4758	3674787	1	True				
ANR	3675306	CallExpression	efree ( decode [ 2 ] )		3674787	0					
ANR	3675307	Callee	efree		3674787	0					
ANR	3675308	Identifier	efree		3674787	0					
ANR	3675309	ArgumentList	decode [ 2 ]		3674787	1					
ANR	3675310	Argument	decode [ 2 ]		3674787	0					
ANR	3675311	ArrayIndexing	decode [ 2 ]		3674787	0					
ANR	3675312	Identifier	decode		3674787	0					
ANR	3675313	PrimaryExpression	2		3674787	1					
ANR	3675314	IfStatement	if ( decode [ 3 ] )		3674787	10					
ANR	3675315	Condition	decode [ 3 ]	166:5:4765:4773	3674787	0	True				
ANR	3675316	ArrayIndexing	decode [ 3 ]		3674787	0					
ANR	3675317	Identifier	decode		3674787	0					
ANR	3675318	PrimaryExpression	3		3674787	1					
ANR	3675319	ExpressionStatement	efree ( decode [ 3 ] )	167:2:4778:4794	3674787	1	True				
ANR	3675320	CallExpression	efree ( decode [ 3 ] )		3674787	0					
ANR	3675321	Callee	efree		3674787	0					
ANR	3675322	Identifier	efree		3674787	0					
ANR	3675323	ArgumentList	decode [ 3 ]		3674787	1					
ANR	3675324	Argument	decode [ 3 ]		3674787	0					
ANR	3675325	ArrayIndexing	decode [ 3 ]		3674787	0					
ANR	3675326	Identifier	decode		3674787	0					
ANR	3675327	PrimaryExpression	3		3674787	1					
ANR	3675328	ReturnStatement	return result ;	169:1:4798:4811	3674787	11	True				
ANR	3675329	Identifier	result		3674787	0					
ANR	3675330	ReturnType	char *		3674787	1					
ANR	3675331	Identifier	phpdbg_decode_opline		3674787	2					
ANR	3675332	ParameterList	"zend_op_array * ops , zend_op * op"		3674787	3					
ANR	3675333	Parameter	zend_op_array * ops	65:27:2458:2475	3674787	0	True				
ANR	3675334	ParameterType	zend_op_array *		3674787	0					
ANR	3675335	Identifier	ops		3674787	1					
ANR	3675336	Parameter	zend_op * op	65:47:2478:2488	3674787	1	True				
ANR	3675337	ParameterType	zend_op *		3674787	0					
ANR	3675338	Identifier	op		3674787	1					
ANR	3675339	CFGEntryNode	ENTRY		3674787		True				
ANR	3675340	CFGExitNode	EXIT		3674787		True				
ANR	3675341	Symbol	phpdbg_decode_opcode		3674787						
ANR	3675342	Symbol	op -> opcode		3674787						
ANR	3675343	Symbol	op -> result_type		3674787						
ANR	3675344	Symbol	* op		3674787						
ANR	3675345	Symbol	op -> op2_type		3674787						
ANR	3675346	Symbol	opcode_name		3674787						
ANR	3675347	Symbol	decode		3674787						
ANR	3675348	Symbol	result		3674787						
ANR	3675349	Symbol	& op -> result		3674787						
ANR	3675350	Symbol	& result		3674787						
ANR	3675351	Symbol	op -> op2		3674787						
ANR	3675352	Symbol	op -> op1		3674787						
ANR	3675353	Symbol	* ops		3674787						
ANR	3675354	Symbol	op -> op1_type		3674787						
ANR	3675355	Symbol	ZEND_FAST_RET_TO_CATCH		3674787						
ANR	3675356	Symbol	op		3674787						
ANR	3675357	Symbol	phpdbg_decode_op		3674787						
ANR	3675358	Symbol	NULL		3674787						
ANR	3675359	Symbol	ZEND_OFFSET_TO_OPLINE		3674787						
ANR	3675360	Symbol	ops		3674787						
ANR	3675361	Symbol	op -> extended_value		3674787						
ANR	3675362	Symbol	ZEND_FAST_CALL_FROM_FINALLY		3674787						
ANR	3675363	Symbol	estrdup		3674787						
ANR	3675364	Symbol	& op -> op2		3674787						
ANR	3675365	Symbol	& op -> op1		3674787						
ANR	3675366	Symbol	OP_JMP_ADDR		3674787						
ANR	3675367	Symbol	* decode		3674787						
ANR	3675368	Symbol	ops -> opcodes		3674787						
ANR	3675369	Function	phpdbg_print_opline_ex	172:0:4826:6412							
ANR	3675370	FunctionDef	"phpdbg_print_opline_ex (zend_execute_data * execute_data , zend_bool ignore_flags)"		3675369	0					
ANR	3675371	CompoundStatement		173:0:4921:6412	3675369	0					
ANR	3675372	IfStatement	if ( ignore_flags || ( ! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) || ( PHPDBG_G ( oplog ) ) ) )		3675369	0					
ANR	3675373	Condition	ignore_flags || ( ! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) || ( PHPDBG_G ( oplog ) ) )	175:5:5003:5125	3675369	0	True				
ANR	3675374	OrExpression	ignore_flags || ( ! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) || ( PHPDBG_G ( oplog ) ) )		3675369	0		||			
ANR	3675375	Identifier	ignore_flags		3675369	0					
ANR	3675376	OrExpression	! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) || ( PHPDBG_G ( oplog ) )		3675369	1		||			
ANR	3675377	UnaryOperationExpression	! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET )		3675369	0					
ANR	3675378	UnaryOperator	!		3675369	0					
ANR	3675379	BitAndExpression	PHPDBG_G ( flags ) & PHPDBG_IS_QUIET		3675369	1		&			
ANR	3675380	CallExpression	PHPDBG_G ( flags )		3675369	0					
ANR	3675381	Callee	PHPDBG_G		3675369	0					
ANR	3675382	Identifier	PHPDBG_G		3675369	0					
ANR	3675383	ArgumentList	flags		3675369	1					
ANR	3675384	Argument	flags		3675369	0					
ANR	3675385	Identifier	flags		3675369	0					
ANR	3675386	Identifier	PHPDBG_IS_QUIET		3675369	1					
ANR	3675387	OrExpression	( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) || ( PHPDBG_G ( oplog ) )		3675369	1		||			
ANR	3675388	BitAndExpression	PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING		3675369	0		&			
ANR	3675389	CallExpression	PHPDBG_G ( flags )		3675369	0					
ANR	3675390	Callee	PHPDBG_G		3675369	0					
ANR	3675391	Identifier	PHPDBG_G		3675369	0					
ANR	3675392	ArgumentList	flags		3675369	1					
ANR	3675393	Argument	flags		3675369	0					
ANR	3675394	Identifier	flags		3675369	0					
ANR	3675395	Identifier	PHPDBG_IS_STEPPING		3675369	1					
ANR	3675396	CallExpression	PHPDBG_G ( oplog )		3675369	1					
ANR	3675397	Callee	PHPDBG_G		3675369	0					
ANR	3675398	Identifier	PHPDBG_G		3675369	0					
ANR	3675399	ArgumentList	oplog		3675369	1					
ANR	3675400	Argument	oplog		3675369	0					
ANR	3675401	Identifier	oplog		3675369	0					
ANR	3675402	CompoundStatement		9:2:265:339	3675369	1					
ANR	3675403	IdentifierDeclStatement	zend_op * opline = ( zend_op * ) execute_data -> opline ;	180:2:5133:5183	3675369	0	True				
ANR	3675404	IdentifierDecl	* opline = ( zend_op * ) execute_data -> opline		3675369	0					
ANR	3675405	IdentifierDeclType	zend_op *		3675369	0					
ANR	3675406	Identifier	opline		3675369	1					
ANR	3675407	AssignmentExpression	* opline = ( zend_op * ) execute_data -> opline		3675369	2		=			
ANR	3675408	Identifier	opline		3675369	0					
ANR	3675409	CastExpression	( zend_op * ) execute_data -> opline		3675369	1					
ANR	3675410	CastTarget	zend_op *		3675369	0					
ANR	3675411	PtrMemberAccess	execute_data -> opline		3675369	1					
ANR	3675412	Identifier	execute_data		3675369	0					
ANR	3675413	Identifier	opline		3675369	1					
ANR	3675414	IdentifierDeclStatement	"char * decode = phpdbg_decode_opline ( & execute_data -> func -> op_array , opline ) ;"	181:2:5187:5261	3675369	1	True				
ANR	3675415	IdentifierDecl	"* decode = phpdbg_decode_opline ( & execute_data -> func -> op_array , opline )"		3675369	0					
ANR	3675416	IdentifierDeclType	char *		3675369	0					
ANR	3675417	Identifier	decode		3675369	1					
ANR	3675418	AssignmentExpression	"* decode = phpdbg_decode_opline ( & execute_data -> func -> op_array , opline )"		3675369	2		=			
ANR	3675419	Identifier	decode		3675369	0					
ANR	3675420	CallExpression	"phpdbg_decode_opline ( & execute_data -> func -> op_array , opline )"		3675369	1					
ANR	3675421	Callee	phpdbg_decode_opline		3675369	0					
ANR	3675422	Identifier	phpdbg_decode_opline		3675369	0					
ANR	3675423	ArgumentList	& execute_data -> func -> op_array		3675369	1					
ANR	3675424	Argument	& execute_data -> func -> op_array		3675369	0					
ANR	3675425	UnaryOperationExpression	& execute_data -> func -> op_array		3675369	0					
ANR	3675426	UnaryOperator	&		3675369	0					
ANR	3675427	PtrMemberAccess	execute_data -> func -> op_array		3675369	1					
ANR	3675428	PtrMemberAccess	execute_data -> func		3675369	0					
ANR	3675429	Identifier	execute_data		3675369	0					
ANR	3675430	Identifier	func		3675369	1					
ANR	3675431	Identifier	op_array		3675369	1					
ANR	3675432	Argument	opline		3675369	1					
ANR	3675433	Identifier	opline		3675369	0					
ANR	3675434	IfStatement	if ( ignore_flags || ( ! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) ) )		3675369	2					
ANR	3675435	Condition	ignore_flags || ( ! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) )	183:6:5270:5365	3675369	0	True				
ANR	3675436	OrExpression	ignore_flags || ( ! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING ) )		3675369	0		||			
ANR	3675437	Identifier	ignore_flags		3675369	0					
ANR	3675438	OrExpression	! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET ) || ( PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING )		3675369	1		||			
ANR	3675439	UnaryOperationExpression	! ( PHPDBG_G ( flags ) & PHPDBG_IS_QUIET )		3675369	0					
ANR	3675440	UnaryOperator	!		3675369	0					
ANR	3675441	BitAndExpression	PHPDBG_G ( flags ) & PHPDBG_IS_QUIET		3675369	1		&			
ANR	3675442	CallExpression	PHPDBG_G ( flags )		3675369	0					
ANR	3675443	Callee	PHPDBG_G		3675369	0					
ANR	3675444	Identifier	PHPDBG_G		3675369	0					
ANR	3675445	ArgumentList	flags		3675369	1					
ANR	3675446	Argument	flags		3675369	0					
ANR	3675447	Identifier	flags		3675369	0					
ANR	3675448	Identifier	PHPDBG_IS_QUIET		3675369	1					
ANR	3675449	BitAndExpression	PHPDBG_G ( flags ) & PHPDBG_IS_STEPPING		3675369	1		&			
ANR	3675450	CallExpression	PHPDBG_G ( flags )		3675369	0					
ANR	3675451	Callee	PHPDBG_G		3675369	0					
ANR	3675452	Identifier	PHPDBG_G		3675369	0					
ANR	3675453	ArgumentList	flags		3675369	1					
ANR	3675454	Argument	flags		3675369	0					
ANR	3675455	Identifier	flags		3675369	0					
ANR	3675456	Identifier	PHPDBG_IS_STEPPING		3675369	1					
ANR	3675457	CompoundStatement		11:104:446:446	3675369	1					
ANR	3675458	ExpressionStatement	"phpdbg_notice ( ""opline"" , ""line=\\""%u\\"" opline=\\""%p\\"" op=\\""%s\\"" file=\\""%s\\"""" , ""L%-5u %16p %s %s"" , opline -> lineno , opline , decode , execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"" )"	185:3:5399:5650	3675369	0	True				
ANR	3675459	CallExpression	"phpdbg_notice ( ""opline"" , ""line=\\""%u\\"" opline=\\""%p\\"" op=\\""%s\\"" file=\\""%s\\"""" , ""L%-5u %16p %s %s"" , opline -> lineno , opline , decode , execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"" )"		3675369	0					
ANR	3675460	Callee	phpdbg_notice		3675369	0					
ANR	3675461	Identifier	phpdbg_notice		3675369	0					
ANR	3675462	ArgumentList	"""opline"""		3675369	1					
ANR	3675463	Argument	"""opline"""		3675369	0					
ANR	3675464	PrimaryExpression	"""opline"""		3675369	0					
ANR	3675465	Argument	"""line=\\""%u\\"" opline=\\""%p\\"" op=\\""%s\\"" file=\\""%s\\"""""		3675369	1					
ANR	3675466	PrimaryExpression	"""line=\\""%u\\"" opline=\\""%p\\"" op=\\""%s\\"" file=\\""%s\\"""""		3675369	0					
ANR	3675467	Argument	"""L%-5u %16p %s %s"""		3675369	2					
ANR	3675468	PrimaryExpression	"""L%-5u %16p %s %s"""		3675369	0					
ANR	3675469	Argument	opline -> lineno		3675369	3					
ANR	3675470	PtrMemberAccess	opline -> lineno		3675369	0					
ANR	3675471	Identifier	opline		3675369	0					
ANR	3675472	Identifier	lineno		3675369	1					
ANR	3675473	Argument	opline		3675369	4					
ANR	3675474	Identifier	opline		3675369	0					
ANR	3675475	Argument	decode		3675369	5					
ANR	3675476	Identifier	decode		3675369	0					
ANR	3675477	Argument	"execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"""		3675369	6					
ANR	3675478	ConditionalExpression	"execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"""		3675369	0					
ANR	3675479	Condition	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675480	MemberAccess	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675481	PtrMemberAccess	execute_data -> func -> op_array		3675369	0					
ANR	3675482	PtrMemberAccess	execute_data -> func		3675369	0					
ANR	3675483	Identifier	execute_data		3675369	0					
ANR	3675484	Identifier	func		3675369	1					
ANR	3675485	Identifier	op_array		3675369	1					
ANR	3675486	Identifier	filename		3675369	1					
ANR	3675487	CallExpression	ZSTR_VAL ( execute_data -> func -> op_array . filename )		3675369	1					
ANR	3675488	Callee	ZSTR_VAL		3675369	0					
ANR	3675489	Identifier	ZSTR_VAL		3675369	0					
ANR	3675490	ArgumentList	execute_data -> func -> op_array . filename		3675369	1					
ANR	3675491	Argument	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675492	MemberAccess	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675493	PtrMemberAccess	execute_data -> func -> op_array		3675369	0					
ANR	3675494	PtrMemberAccess	execute_data -> func		3675369	0					
ANR	3675495	Identifier	execute_data		3675369	0					
ANR	3675496	Identifier	func		3675369	1					
ANR	3675497	Identifier	op_array		3675369	1					
ANR	3675498	Identifier	filename		3675369	1					
ANR	3675499	PrimaryExpression	"""unknown"""		3675369	2					
ANR	3675500	IfStatement	if ( ! ignore_flags && PHPDBG_G ( oplog ) )		3675369	3					
ANR	3675501	Condition	! ignore_flags && PHPDBG_G ( oplog )	192:6:5663:5694	3675369	0	True				
ANR	3675502	AndExpression	! ignore_flags && PHPDBG_G ( oplog )		3675369	0		&&			
ANR	3675503	UnaryOperationExpression	! ignore_flags		3675369	0					
ANR	3675504	UnaryOperator	!		3675369	0					
ANR	3675505	Identifier	ignore_flags		3675369	1					
ANR	3675506	CallExpression	PHPDBG_G ( oplog )		3675369	1					
ANR	3675507	Callee	PHPDBG_G		3675369	0					
ANR	3675508	Identifier	PHPDBG_G		3675369	0					
ANR	3675509	ArgumentList	oplog		3675369	1					
ANR	3675510	Argument	oplog		3675369	0					
ANR	3675511	Identifier	oplog		3675369	0					
ANR	3675512	CompoundStatement		20:40:775:775	3675369	1					
ANR	3675513	ExpressionStatement	"phpdbg_log_ex ( fileno ( PHPDBG_G ( oplog ) ) , ""L%-5u %16p %s %s\\n"" , opline -> lineno , opline , decode , execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"" )"	193:3:5702:5911	3675369	0	True				
ANR	3675514	CallExpression	"phpdbg_log_ex ( fileno ( PHPDBG_G ( oplog ) ) , ""L%-5u %16p %s %s\\n"" , opline -> lineno , opline , decode , execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"" )"		3675369	0					
ANR	3675515	Callee	phpdbg_log_ex		3675369	0					
ANR	3675516	Identifier	phpdbg_log_ex		3675369	0					
ANR	3675517	ArgumentList	fileno ( PHPDBG_G ( oplog ) )		3675369	1					
ANR	3675518	Argument	fileno ( PHPDBG_G ( oplog ) )		3675369	0					
ANR	3675519	CallExpression	fileno ( PHPDBG_G ( oplog ) )		3675369	0					
ANR	3675520	Callee	fileno		3675369	0					
ANR	3675521	Identifier	fileno		3675369	0					
ANR	3675522	ArgumentList	PHPDBG_G ( oplog )		3675369	1					
ANR	3675523	Argument	PHPDBG_G ( oplog )		3675369	0					
ANR	3675524	CallExpression	PHPDBG_G ( oplog )		3675369	0					
ANR	3675525	Callee	PHPDBG_G		3675369	0					
ANR	3675526	Identifier	PHPDBG_G		3675369	0					
ANR	3675527	ArgumentList	oplog		3675369	1					
ANR	3675528	Argument	oplog		3675369	0					
ANR	3675529	Identifier	oplog		3675369	0					
ANR	3675530	Argument	"""L%-5u %16p %s %s\\n"""		3675369	1					
ANR	3675531	PrimaryExpression	"""L%-5u %16p %s %s\\n"""		3675369	0					
ANR	3675532	Argument	opline -> lineno		3675369	2					
ANR	3675533	PtrMemberAccess	opline -> lineno		3675369	0					
ANR	3675534	Identifier	opline		3675369	0					
ANR	3675535	Identifier	lineno		3675369	1					
ANR	3675536	Argument	opline		3675369	3					
ANR	3675537	Identifier	opline		3675369	0					
ANR	3675538	Argument	decode		3675369	4					
ANR	3675539	Identifier	decode		3675369	0					
ANR	3675540	Argument	"execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"""		3675369	5					
ANR	3675541	ConditionalExpression	"execute_data -> func -> op_array . filename ? ZSTR_VAL ( execute_data -> func -> op_array . filename ) : ""unknown"""		3675369	0					
ANR	3675542	Condition	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675543	MemberAccess	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675544	PtrMemberAccess	execute_data -> func -> op_array		3675369	0					
ANR	3675545	PtrMemberAccess	execute_data -> func		3675369	0					
ANR	3675546	Identifier	execute_data		3675369	0					
ANR	3675547	Identifier	func		3675369	1					
ANR	3675548	Identifier	op_array		3675369	1					
ANR	3675549	Identifier	filename		3675369	1					
ANR	3675550	CallExpression	ZSTR_VAL ( execute_data -> func -> op_array . filename )		3675369	1					
ANR	3675551	Callee	ZSTR_VAL		3675369	0					
ANR	3675552	Identifier	ZSTR_VAL		3675369	0					
ANR	3675553	ArgumentList	execute_data -> func -> op_array . filename		3675369	1					
ANR	3675554	Argument	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675555	MemberAccess	execute_data -> func -> op_array . filename		3675369	0					
ANR	3675556	PtrMemberAccess	execute_data -> func -> op_array		3675369	0					
ANR	3675557	PtrMemberAccess	execute_data -> func		3675369	0					
ANR	3675558	Identifier	execute_data		3675369	0					
ANR	3675559	Identifier	func		3675369	1					
ANR	3675560	Identifier	op_array		3675369	1					
ANR	3675561	Identifier	filename		3675369	1					
ANR	3675562	PrimaryExpression	"""unknown"""		3675369	2					
ANR	3675563	ExpressionStatement	efree ( decode )	200:2:5920:5933	3675369	4	True				
ANR	3675564	CallExpression	efree ( decode )		3675369	0					
ANR	3675565	Callee	efree		3675369	0					
ANR	3675566	Identifier	efree		3675369	0					
ANR	3675567	ArgumentList	decode		3675369	1					
ANR	3675568	Argument	decode		3675369	0					
ANR	3675569	Identifier	decode		3675369	0					
ANR	3675570	IfStatement	if ( PHPDBG_G ( oplog_list ) )		3675369	1					
ANR	3675571	Condition	PHPDBG_G ( oplog_list )	203:5:5944:5963	3675369	0	True				
ANR	3675572	CallExpression	PHPDBG_G ( oplog_list )		3675369	0					
ANR	3675573	Callee	PHPDBG_G		3675369	0					
ANR	3675574	Identifier	PHPDBG_G		3675369	0					
ANR	3675575	ArgumentList	oplog_list		3675369	1					
ANR	3675576	Argument	oplog_list		3675369	0					
ANR	3675577	Identifier	oplog_list		3675369	0					
ANR	3675578	CompoundStatement		33:2:1146:1201	3675369	1					
ANR	3675579	IdentifierDeclStatement	"phpdbg_oplog_entry * cur = zend_arena_alloc ( & PHPDBG_G ( oplog_arena ) , sizeof ( phpdbg_oplog_entry ) ) ;"	204:2:5970:6064	3675369	0	True				
ANR	3675580	IdentifierDecl	"* cur = zend_arena_alloc ( & PHPDBG_G ( oplog_arena ) , sizeof ( phpdbg_oplog_entry ) )"		3675369	0					
ANR	3675581	IdentifierDeclType	phpdbg_oplog_entry *		3675369	0					
ANR	3675582	Identifier	cur		3675369	1					
ANR	3675583	AssignmentExpression	"* cur = zend_arena_alloc ( & PHPDBG_G ( oplog_arena ) , sizeof ( phpdbg_oplog_entry ) )"		3675369	2		=			
ANR	3675584	Identifier	cur		3675369	0					
ANR	3675585	CallExpression	"zend_arena_alloc ( & PHPDBG_G ( oplog_arena ) , sizeof ( phpdbg_oplog_entry ) )"		3675369	1					
ANR	3675586	Callee	zend_arena_alloc		3675369	0					
ANR	3675587	Identifier	zend_arena_alloc		3675369	0					
ANR	3675588	ArgumentList	& PHPDBG_G ( oplog_arena )		3675369	1					
ANR	3675589	Argument	& PHPDBG_G ( oplog_arena )		3675369	0					
ANR	3675590	UnaryOperationExpression	& PHPDBG_G ( oplog_arena )		3675369	0					
ANR	3675591	UnaryOperator	&		3675369	0					
ANR	3675592	CallExpression	PHPDBG_G ( oplog_arena )		3675369	1					
ANR	3675593	Callee	PHPDBG_G		3675369	0					
ANR	3675594	Identifier	PHPDBG_G		3675369	0					
ANR	3675595	ArgumentList	oplog_arena		3675369	1					
ANR	3675596	Argument	oplog_arena		3675369	0					
ANR	3675597	Identifier	oplog_arena		3675369	0					
ANR	3675598	Argument	sizeof ( phpdbg_oplog_entry )		3675369	1					
ANR	3675599	SizeofExpression	sizeof ( phpdbg_oplog_entry )		3675369	0					
ANR	3675600	Sizeof	sizeof		3675369	0					
ANR	3675601	SizeofOperand	phpdbg_oplog_entry		3675369	1					
ANR	3675602	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	205:2:6068:6123	3675369	1	True				
ANR	3675603	IdentifierDecl	* op_array = & execute_data -> func -> op_array		3675369	0					
ANR	3675604	IdentifierDeclType	zend_op_array *		3675369	0					
ANR	3675605	Identifier	op_array		3675369	1					
ANR	3675606	AssignmentExpression	* op_array = & execute_data -> func -> op_array		3675369	2		=			
ANR	3675607	Identifier	op_array		3675369	0					
ANR	3675608	UnaryOperationExpression	& execute_data -> func -> op_array		3675369	1					
ANR	3675609	UnaryOperator	&		3675369	0					
ANR	3675610	PtrMemberAccess	execute_data -> func -> op_array		3675369	1					
ANR	3675611	PtrMemberAccess	execute_data -> func		3675369	0					
ANR	3675612	Identifier	execute_data		3675369	0					
ANR	3675613	Identifier	func		3675369	1					
ANR	3675614	Identifier	op_array		3675369	1					
ANR	3675615	ExpressionStatement	cur -> op = ( zend_op * ) execute_data -> opline	206:2:6127:6169	3675369	2	True				
ANR	3675616	AssignmentExpression	cur -> op = ( zend_op * ) execute_data -> opline		3675369	0		=			
ANR	3675617	PtrMemberAccess	cur -> op		3675369	0					
ANR	3675618	Identifier	cur		3675369	0					
ANR	3675619	Identifier	op		3675369	1					
ANR	3675620	CastExpression	( zend_op * ) execute_data -> opline		3675369	1					
ANR	3675621	CastTarget	zend_op *		3675369	0					
ANR	3675622	PtrMemberAccess	execute_data -> opline		3675369	1					
ANR	3675623	Identifier	execute_data		3675369	0					
ANR	3675624	Identifier	opline		3675369	1					
ANR	3675625	ExpressionStatement	cur -> opcodes = op_array -> opcodes	207:2:6173:6205	3675369	3	True				
ANR	3675626	AssignmentExpression	cur -> opcodes = op_array -> opcodes		3675369	0		=			
ANR	3675627	PtrMemberAccess	cur -> opcodes		3675369	0					
ANR	3675628	Identifier	cur		3675369	0					
ANR	3675629	Identifier	opcodes		3675369	1					
ANR	3675630	PtrMemberAccess	op_array -> opcodes		3675369	1					
ANR	3675631	Identifier	op_array		3675369	0					
ANR	3675632	Identifier	opcodes		3675369	1					
ANR	3675633	ExpressionStatement	cur -> filename = op_array -> filename	208:2:6209:6243	3675369	4	True				
ANR	3675634	AssignmentExpression	cur -> filename = op_array -> filename		3675369	0		=			
ANR	3675635	PtrMemberAccess	cur -> filename		3675369	0					
ANR	3675636	Identifier	cur		3675369	0					
ANR	3675637	Identifier	filename		3675369	1					
ANR	3675638	PtrMemberAccess	op_array -> filename		3675369	1					
ANR	3675639	Identifier	op_array		3675369	0					
ANR	3675640	Identifier	filename		3675369	1					
ANR	3675641	ExpressionStatement	cur -> scope = op_array -> scope	209:2:6247:6275	3675369	5	True				
ANR	3675642	AssignmentExpression	cur -> scope = op_array -> scope		3675369	0		=			
ANR	3675643	PtrMemberAccess	cur -> scope		3675369	0					
ANR	3675644	Identifier	cur		3675369	0					
ANR	3675645	Identifier	scope		3675369	1					
ANR	3675646	PtrMemberAccess	op_array -> scope		3675369	1					
ANR	3675647	Identifier	op_array		3675369	0					
ANR	3675648	Identifier	scope		3675369	1					
ANR	3675649	ExpressionStatement	cur -> function_name = op_array -> function_name	210:2:6279:6323	3675369	6	True				
ANR	3675650	AssignmentExpression	cur -> function_name = op_array -> function_name		3675369	0		=			
ANR	3675651	PtrMemberAccess	cur -> function_name		3675369	0					
ANR	3675652	Identifier	cur		3675369	0					
ANR	3675653	Identifier	function_name		3675369	1					
ANR	3675654	PtrMemberAccess	op_array -> function_name		3675369	1					
ANR	3675655	Identifier	op_array		3675369	0					
ANR	3675656	Identifier	function_name		3675369	1					
ANR	3675657	ExpressionStatement	cur -> next = NULL	211:2:6327:6343	3675369	7	True				
ANR	3675658	AssignmentExpression	cur -> next = NULL		3675369	0		=			
ANR	3675659	PtrMemberAccess	cur -> next		3675369	0					
ANR	3675660	Identifier	cur		3675369	0					
ANR	3675661	Identifier	next		3675369	1					
ANR	3675662	Identifier	NULL		3675369	1					
ANR	3675663	ExpressionStatement	PHPDBG_G ( oplog_cur ) -> next = cur	212:2:6347:6378	3675369	8	True				
ANR	3675664	AssignmentExpression	PHPDBG_G ( oplog_cur ) -> next = cur		3675369	0		=			
ANR	3675665	PtrMemberAccess	PHPDBG_G ( oplog_cur ) -> next		3675369	0					
ANR	3675666	CallExpression	PHPDBG_G ( oplog_cur )		3675369	0					
ANR	3675667	Callee	PHPDBG_G		3675369	0					
ANR	3675668	Identifier	PHPDBG_G		3675369	0					
ANR	3675669	ArgumentList	oplog_cur		3675369	1					
ANR	3675670	Argument	oplog_cur		3675369	0					
ANR	3675671	Identifier	oplog_cur		3675369	0					
ANR	3675672	Identifier	next		3675369	1					
ANR	3675673	Identifier	cur		3675369	1					
ANR	3675674	ExpressionStatement	PHPDBG_G ( oplog_cur ) = cur	213:2:6382:6407	3675369	9	True				
ANR	3675675	AssignmentExpression	PHPDBG_G ( oplog_cur ) = cur		3675369	0		=			
ANR	3675676	CallExpression	PHPDBG_G ( oplog_cur )		3675369	0					
ANR	3675677	Callee	PHPDBG_G		3675369	0					
ANR	3675678	Identifier	PHPDBG_G		3675369	0					
ANR	3675679	ArgumentList	oplog_cur		3675369	1					
ANR	3675680	Argument	oplog_cur		3675369	0					
ANR	3675681	Identifier	oplog_cur		3675369	0					
ANR	3675682	Identifier	cur		3675369	1					
ANR	3675683	ReturnType	void		3675369	1					
ANR	3675684	Identifier	phpdbg_print_opline_ex		3675369	2					
ANR	3675685	ParameterList	"zend_execute_data * execute_data , zend_bool ignore_flags"		3675369	3					
ANR	3675686	Parameter	zend_execute_data * execute_data	172:28:4854:4884	3675369	0	True				
ANR	3675687	ParameterType	zend_execute_data *		3675369	0					
ANR	3675688	Identifier	execute_data		3675369	1					
ANR	3675689	Parameter	zend_bool ignore_flags	172:61:4887:4908	3675369	1	True				
ANR	3675690	ParameterType	zend_bool		3675369	0					
ANR	3675691	Identifier	ignore_flags		3675369	1					
ANR	3675692	CFGEntryNode	ENTRY		3675369		True				
ANR	3675693	CFGExitNode	EXIT		3675369		True				
ANR	3675694	Symbol	cur		3675369						
ANR	3675695	Symbol	cur -> opcodes		3675369						
ANR	3675696	Symbol	PHPDBG_G		3675369						
ANR	3675697	Symbol	* execute_data -> func		3675369						
ANR	3675698	Symbol	& PHPDBG_G		3675369						
ANR	3675699	Symbol	flags		3675369						
ANR	3675700	Symbol	cur -> op		3675369						
ANR	3675701	Symbol	PHPDBG_IS_STEPPING		3675369						
ANR	3675702	Symbol	decode		3675369						
ANR	3675703	Symbol	execute_data		3675369						
ANR	3675704	Symbol	phpdbg_decode_opline		3675369						
ANR	3675705	Symbol	cur -> function_name		3675369						
ANR	3675706	Symbol	opline -> lineno		3675369						
ANR	3675707	Symbol	oplog_list		3675369						
ANR	3675708	Symbol	oplog		3675369						
ANR	3675709	Symbol	opline		3675369						
ANR	3675710	Symbol	op_array -> opcodes		3675369						
ANR	3675711	Symbol	& execute_data -> func -> op_array		3675369						
ANR	3675712	Symbol	* cur		3675369						
ANR	3675713	Symbol	oplog_cur		3675369						
ANR	3675714	Symbol	* execute_data		3675369						
ANR	3675715	Symbol	oplog_arena		3675369						
ANR	3675716	Symbol	PHPDBG_G ( oplog_cur ) -> next		3675369						
ANR	3675717	Symbol	execute_data -> func -> op_array		3675369						
ANR	3675718	Symbol	NULL		3675369						
ANR	3675719	Symbol	zend_arena_alloc		3675369						
ANR	3675720	Symbol	execute_data -> func		3675369						
ANR	3675721	Symbol	* op_array		3675369						
ANR	3675722	Symbol	op_array -> scope		3675369						
ANR	3675723	Symbol	PHPDBG_IS_QUIET		3675369						
ANR	3675724	Symbol	ZSTR_VAL		3675369						
ANR	3675725	Symbol	op_array -> function_name		3675369						
ANR	3675726	Symbol	execute_data -> opline		3675369						
ANR	3675727	Symbol	* opline		3675369						
ANR	3675728	Symbol	fileno		3675369						
ANR	3675729	Symbol	cur -> filename		3675369						
ANR	3675730	Symbol	cur -> scope		3675369						
ANR	3675731	Symbol	* PHPDBG_G		3675369						
ANR	3675732	Symbol	ignore_flags		3675369						
ANR	3675733	Symbol	* * execute_data		3675369						
ANR	3675734	Symbol	op_array -> filename		3675369						
ANR	3675735	Symbol	execute_data -> func -> op_array . filename		3675369						
ANR	3675736	Symbol	op_array		3675369						
ANR	3675737	Symbol	cur -> next		3675369						
ANR	3675738	Function	phpdbg_print_opline	217:0:6425:6572							
ANR	3675739	FunctionDef	"phpdbg_print_opline (zend_execute_data * execute_data , zend_bool ignore_flags)"		3675738	0					
ANR	3675740	CompoundStatement		218:0:6517:6572	3675738	0					
ANR	3675741	ExpressionStatement	"phpdbg_print_opline_ex ( execute_data , ignore_flags )"	219:1:6520:6570	3675738	0	True				
ANR	3675742	CallExpression	"phpdbg_print_opline_ex ( execute_data , ignore_flags )"		3675738	0					
ANR	3675743	Callee	phpdbg_print_opline_ex		3675738	0					
ANR	3675744	Identifier	phpdbg_print_opline_ex		3675738	0					
ANR	3675745	ArgumentList	execute_data		3675738	1					
ANR	3675746	Argument	execute_data		3675738	0					
ANR	3675747	Identifier	execute_data		3675738	0					
ANR	3675748	Argument	ignore_flags		3675738	1					
ANR	3675749	Identifier	ignore_flags		3675738	0					
ANR	3675750	ReturnType	void		3675738	1					
ANR	3675751	Identifier	phpdbg_print_opline		3675738	2					
ANR	3675752	ParameterList	"zend_execute_data * execute_data , zend_bool ignore_flags"		3675738	3					
ANR	3675753	Parameter	zend_execute_data * execute_data	217:25:6450:6480	3675738	0	True				
ANR	3675754	ParameterType	zend_execute_data *		3675738	0					
ANR	3675755	Identifier	execute_data		3675738	1					
ANR	3675756	Parameter	zend_bool ignore_flags	217:58:6483:6504	3675738	1	True				
ANR	3675757	ParameterType	zend_bool		3675738	0					
ANR	3675758	Identifier	ignore_flags		3675738	1					
ANR	3675759	CFGEntryNode	ENTRY		3675738		True				
ANR	3675760	CFGExitNode	EXIT		3675738		True				
ANR	3675761	Symbol	ignore_flags		3675738						
ANR	3675762	Symbol	execute_data		3675738						
