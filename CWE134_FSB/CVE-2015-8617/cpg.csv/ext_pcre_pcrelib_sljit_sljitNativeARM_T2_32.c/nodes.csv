command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1594375	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_sljit_sljitNativeARM_T2_32.c								
ANR	1594376	Function	sljit_get_platform_name	27:0:1455:1566							
ANR	1594377	FunctionDef	sljit_get_platform_name ()		1594376	0					
ANR	1594378	CompoundStatement		28:0:1528:1566	1594376	0					
ANR	1594379	Statement	return	29:1:1531:1536	1594376	0	True				
ANR	1594380	Statement	"""ARM-Thumb2"""	29:8:1538:1549	1594376	1	True				
ANR	1594381	ExpressionStatement	SLJIT_CPUINFO	29:21:1551:1564	1594376	2	True				
ANR	1594382	Identifier	SLJIT_CPUINFO		1594376	0					
ANR	1594383	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1594376	1					
ANR	1594384	Identifier	sljit_get_platform_name		1594376	2					
ANR	1594385	ParameterList			1594376	3					
ANR	1594386	CFGEntryNode	ENTRY		1594376		True				
ANR	1594387	CFGExitNode	EXIT		1594376		True				
ANR	1594388	DeclStmt									
ANR	1594389	Decl							sljit_ui	sljit_ui	sljit_ins
ANR	1594390	DeclStmt									
ANR	1594391	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 6 ]	reg_map
ANR	1594392	Function	push_inst16	184:0:5875:6138							
ANR	1594393	FunctionDef	"push_inst16 (struct sljit_compiler * compiler , sljit_ins inst)"		1594392	0					
ANR	1594394	CompoundStatement		185:0:5952:6138	1594392	0					
ANR	1594395	IdentifierDeclStatement	sljit_uh * ptr ;	186:1:5955:5968	1594392	0	True				
ANR	1594396	IdentifierDecl	* ptr		1594392	0					
ANR	1594397	IdentifierDeclType	sljit_uh *		1594392	0					
ANR	1594398	Identifier	ptr		1594392	1					
ANR	1594399	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & 0xffff0000 ) )	187:1:5971:6005	1594392	1	True				
ANR	1594400	CallExpression	SLJIT_ASSERT ( ! ( inst & 0xffff0000 ) )		1594392	0					
ANR	1594401	Callee	SLJIT_ASSERT		1594392	0					
ANR	1594402	Identifier	SLJIT_ASSERT		1594392	0					
ANR	1594403	ArgumentList	! ( inst & 0xffff0000 )		1594392	1					
ANR	1594404	Argument	! ( inst & 0xffff0000 )		1594392	0					
ANR	1594405	UnaryOperationExpression	! ( inst & 0xffff0000 )		1594392	0					
ANR	1594406	UnaryOperator	!		1594392	0					
ANR	1594407	BitAndExpression	inst & 0xffff0000		1594392	1		&			
ANR	1594408	Identifier	inst		1594392	0					
ANR	1594409	PrimaryExpression	0xffff0000		1594392	1					
ANR	1594410	ExpressionStatement	"ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_uh ) )"	189:1:6009:6064	1594392	2	True				
ANR	1594411	AssignmentExpression	"ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_uh ) )"		1594392	0		=			
ANR	1594412	Identifier	ptr		1594392	0					
ANR	1594413	CastExpression	"( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_uh ) )"		1594392	1					
ANR	1594414	CastTarget	sljit_uh *		1594392	0					
ANR	1594415	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uh ) )"		1594392	1					
ANR	1594416	Callee	ensure_buf		1594392	0					
ANR	1594417	Identifier	ensure_buf		1594392	0					
ANR	1594418	ArgumentList	compiler		1594392	1					
ANR	1594419	Argument	compiler		1594392	0					
ANR	1594420	Identifier	compiler		1594392	0					
ANR	1594421	Argument	sizeof ( sljit_uh )		1594392	1					
ANR	1594422	SizeofExpression	sizeof ( sljit_uh )		1594392	0					
ANR	1594423	Sizeof	sizeof		1594392	0					
ANR	1594424	SizeofOperand	sljit_uh		1594392	1					
ANR	1594425	ExpressionStatement	FAIL_IF ( ! ptr )	190:1:6067:6080	1594392	3	True				
ANR	1594426	CallExpression	FAIL_IF ( ! ptr )		1594392	0					
ANR	1594427	Callee	FAIL_IF		1594392	0					
ANR	1594428	Identifier	FAIL_IF		1594392	0					
ANR	1594429	ArgumentList	! ptr		1594392	1					
ANR	1594430	Argument	! ptr		1594392	0					
ANR	1594431	UnaryOperationExpression	! ptr		1594392	0					
ANR	1594432	UnaryOperator	!		1594392	0					
ANR	1594433	Identifier	ptr		1594392	1					
ANR	1594434	ExpressionStatement	* ptr = inst	191:1:6083:6094	1594392	4	True				
ANR	1594435	AssignmentExpression	* ptr = inst		1594392	0		=			
ANR	1594436	UnaryOperationExpression	* ptr		1594392	0					
ANR	1594437	UnaryOperator	*		1594392	0					
ANR	1594438	Identifier	ptr		1594392	1					
ANR	1594439	Identifier	inst		1594392	1					
ANR	1594440	ExpressionStatement	compiler -> size ++	192:1:6097:6113	1594392	5	True				
ANR	1594441	PostIncDecOperationExpression	compiler -> size ++		1594392	0					
ANR	1594442	PtrMemberAccess	compiler -> size		1594392	0					
ANR	1594443	Identifier	compiler		1594392	0					
ANR	1594444	Identifier	size		1594392	1					
ANR	1594445	IncDec	++		1594392	1					
ANR	1594446	ReturnStatement	return SLJIT_SUCCESS ;	193:1:6116:6136	1594392	6	True				
ANR	1594447	Identifier	SLJIT_SUCCESS		1594392	0					
ANR	1594448	ReturnType	static sljit_si		1594392	1					
ANR	1594449	Identifier	push_inst16		1594392	2					
ANR	1594450	ParameterList	"struct sljit_compiler * compiler , sljit_ins inst"		1594392	3					
ANR	1594451	Parameter	struct sljit_compiler * compiler	184:28:5903:5933	1594392	0	True				
ANR	1594452	ParameterType	struct sljit_compiler *		1594392	0					
ANR	1594453	Identifier	compiler		1594392	1					
ANR	1594454	Parameter	sljit_ins inst	184:61:5936:5949	1594392	1	True				
ANR	1594455	ParameterType	sljit_ins		1594392	0					
ANR	1594456	Identifier	inst		1594392	1					
ANR	1594457	CFGEntryNode	ENTRY		1594392		True				
ANR	1594458	CFGExitNode	EXIT		1594392		True				
ANR	1594459	Symbol	compiler -> size		1594392						
ANR	1594460	Symbol	inst		1594392						
ANR	1594461	Symbol	ensure_buf		1594392						
ANR	1594462	Symbol	* ptr		1594392						
ANR	1594463	Symbol	SLJIT_SUCCESS		1594392						
ANR	1594464	Symbol	* compiler		1594392						
ANR	1594465	Symbol	compiler		1594392						
ANR	1594466	Symbol	ptr		1594392						
ANR	1594467	Function	push_inst32	196:0:6141:6386							
ANR	1594468	FunctionDef	"push_inst32 (struct sljit_compiler * compiler , sljit_ins inst)"		1594467	0					
ANR	1594469	CompoundStatement		197:0:6218:6386	1594467	0					
ANR	1594470	IdentifierDeclStatement	"sljit_uh * ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	198:1:6221:6287	1594467	0	True				
ANR	1594471	IdentifierDecl	"* ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1594467	0					
ANR	1594472	IdentifierDeclType	sljit_uh *		1594467	0					
ANR	1594473	Identifier	ptr		1594467	1					
ANR	1594474	AssignmentExpression	"* ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1594467	2		=			
ANR	1594475	Identifier	ptr		1594467	0					
ANR	1594476	CastExpression	"( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1594467	1					
ANR	1594477	CastTarget	sljit_uh *		1594467	0					
ANR	1594478	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1594467	1					
ANR	1594479	Callee	ensure_buf		1594467	0					
ANR	1594480	Identifier	ensure_buf		1594467	0					
ANR	1594481	ArgumentList	compiler		1594467	1					
ANR	1594482	Argument	compiler		1594467	0					
ANR	1594483	Identifier	compiler		1594467	0					
ANR	1594484	Argument	sizeof ( sljit_ins )		1594467	1					
ANR	1594485	SizeofExpression	sizeof ( sljit_ins )		1594467	0					
ANR	1594486	Sizeof	sizeof		1594467	0					
ANR	1594487	SizeofOperand	sljit_ins		1594467	1					
ANR	1594488	ExpressionStatement	FAIL_IF ( ! ptr )	199:1:6290:6303	1594467	1	True				
ANR	1594489	CallExpression	FAIL_IF ( ! ptr )		1594467	0					
ANR	1594490	Callee	FAIL_IF		1594467	0					
ANR	1594491	Identifier	FAIL_IF		1594467	0					
ANR	1594492	ArgumentList	! ptr		1594467	1					
ANR	1594493	Argument	! ptr		1594467	0					
ANR	1594494	UnaryOperationExpression	! ptr		1594467	0					
ANR	1594495	UnaryOperator	!		1594467	0					
ANR	1594496	Identifier	ptr		1594467	1					
ANR	1594497	ExpressionStatement	* ptr ++ = inst >> 16	200:1:6306:6325	1594467	2	True				
ANR	1594498	AssignmentExpression	* ptr ++ = inst >> 16		1594467	0		=			
ANR	1594499	UnaryOperationExpression	* ptr ++		1594467	0					
ANR	1594500	UnaryOperator	*		1594467	0					
ANR	1594501	PostIncDecOperationExpression	ptr ++		1594467	1					
ANR	1594502	Identifier	ptr		1594467	0					
ANR	1594503	IncDec	++		1594467	1					
ANR	1594504	ShiftExpression	inst >> 16		1594467	1		>>			
ANR	1594505	Identifier	inst		1594467	0					
ANR	1594506	PrimaryExpression	16		1594467	1					
ANR	1594507	ExpressionStatement	* ptr = inst	201:1:6328:6339	1594467	3	True				
ANR	1594508	AssignmentExpression	* ptr = inst		1594467	0		=			
ANR	1594509	UnaryOperationExpression	* ptr		1594467	0					
ANR	1594510	UnaryOperator	*		1594467	0					
ANR	1594511	Identifier	ptr		1594467	1					
ANR	1594512	Identifier	inst		1594467	1					
ANR	1594513	ExpressionStatement	compiler -> size += 2	202:1:6342:6361	1594467	4	True				
ANR	1594514	AssignmentExpression	compiler -> size += 2		1594467	0		+=			
ANR	1594515	PtrMemberAccess	compiler -> size		1594467	0					
ANR	1594516	Identifier	compiler		1594467	0					
ANR	1594517	Identifier	size		1594467	1					
ANR	1594518	PrimaryExpression	2		1594467	1					
ANR	1594519	ReturnStatement	return SLJIT_SUCCESS ;	203:1:6364:6384	1594467	5	True				
ANR	1594520	Identifier	SLJIT_SUCCESS		1594467	0					
ANR	1594521	ReturnType	static sljit_si		1594467	1					
ANR	1594522	Identifier	push_inst32		1594467	2					
ANR	1594523	ParameterList	"struct sljit_compiler * compiler , sljit_ins inst"		1594467	3					
ANR	1594524	Parameter	struct sljit_compiler * compiler	196:28:6169:6199	1594467	0	True				
ANR	1594525	ParameterType	struct sljit_compiler *		1594467	0					
ANR	1594526	Identifier	compiler		1594467	1					
ANR	1594527	Parameter	sljit_ins inst	196:61:6202:6215	1594467	1	True				
ANR	1594528	ParameterType	sljit_ins		1594467	0					
ANR	1594529	Identifier	inst		1594467	1					
ANR	1594530	CFGEntryNode	ENTRY		1594467		True				
ANR	1594531	CFGExitNode	EXIT		1594467		True				
ANR	1594532	Symbol	compiler -> size		1594467						
ANR	1594533	Symbol	* ptr ++		1594467						
ANR	1594534	Symbol	inst		1594467						
ANR	1594535	Symbol	ensure_buf		1594467						
ANR	1594536	Symbol	* ptr		1594467						
ANR	1594537	Symbol	SLJIT_SUCCESS		1594467						
ANR	1594538	Symbol	* compiler		1594467						
ANR	1594539	Symbol	compiler		1594467						
ANR	1594540	Symbol	ptr		1594467						
ANR	1594541	Function	emit_imm32_const	206:0:6389:6823							
ANR	1594542	FunctionDef	"emit_imm32_const (struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm)"		1594541	0					
ANR	1594543	CompoundStatement		207:0:6496:6823	1594541	0					
ANR	1594544	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"	208:1:6499:6646	1594541	0	True				
ANR	1594545	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"		1594541	0					
ANR	1594546	Callee	FAIL_IF		1594541	0					
ANR	1594547	Identifier	FAIL_IF		1594541	0					
ANR	1594548	ArgumentList	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1594541	1					
ANR	1594549	Argument	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1594541	0					
ANR	1594550	CallExpression	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1594541	0					
ANR	1594551	Callee	push_inst32		1594541	0					
ANR	1594552	Identifier	push_inst32		1594541	0					
ANR	1594553	ArgumentList	compiler		1594541	1					
ANR	1594554	Argument	compiler		1594541	0					
ANR	1594555	Identifier	compiler		1594541	0					
ANR	1594556	Argument	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1594541	1					
ANR	1594557	InclusiveOrExpression	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1594541	0		|			
ANR	1594558	Identifier	MOVW		1594541	0					
ANR	1594559	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1594541	1		|			
ANR	1594560	CallExpression	RD4 ( dst )		1594541	0					
ANR	1594561	Callee	RD4		1594541	0					
ANR	1594562	Identifier	RD4		1594541	0					
ANR	1594563	ArgumentList	dst		1594541	1					
ANR	1594564	Argument	dst		1594541	0					
ANR	1594565	Identifier	dst		1594541	0					
ANR	1594566	InclusiveOrExpression	"COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1594541	1		|			
ANR	1594567	CallExpression	"COPY_BITS ( imm , 12 , 16 , 4 )"		1594541	0					
ANR	1594568	Callee	COPY_BITS		1594541	0					
ANR	1594569	Identifier	COPY_BITS		1594541	0					
ANR	1594570	ArgumentList	imm		1594541	1					
ANR	1594571	Argument	imm		1594541	0					
ANR	1594572	Identifier	imm		1594541	0					
ANR	1594573	Argument	12		1594541	1					
ANR	1594574	PrimaryExpression	12		1594541	0					
ANR	1594575	Argument	16		1594541	2					
ANR	1594576	PrimaryExpression	16		1594541	0					
ANR	1594577	Argument	4		1594541	3					
ANR	1594578	PrimaryExpression	4		1594541	0					
ANR	1594579	InclusiveOrExpression	"COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1594541	1		|			
ANR	1594580	CallExpression	"COPY_BITS ( imm , 11 , 26 , 1 )"		1594541	0					
ANR	1594581	Callee	COPY_BITS		1594541	0					
ANR	1594582	Identifier	COPY_BITS		1594541	0					
ANR	1594583	ArgumentList	imm		1594541	1					
ANR	1594584	Argument	imm		1594541	0					
ANR	1594585	Identifier	imm		1594541	0					
ANR	1594586	Argument	11		1594541	1					
ANR	1594587	PrimaryExpression	11		1594541	0					
ANR	1594588	Argument	26		1594541	2					
ANR	1594589	PrimaryExpression	26		1594541	0					
ANR	1594590	Argument	1		1594541	3					
ANR	1594591	PrimaryExpression	1		1594541	0					
ANR	1594592	InclusiveOrExpression	"COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1594541	1		|			
ANR	1594593	CallExpression	"COPY_BITS ( imm , 8 , 12 , 3 )"		1594541	0					
ANR	1594594	Callee	COPY_BITS		1594541	0					
ANR	1594595	Identifier	COPY_BITS		1594541	0					
ANR	1594596	ArgumentList	imm		1594541	1					
ANR	1594597	Argument	imm		1594541	0					
ANR	1594598	Identifier	imm		1594541	0					
ANR	1594599	Argument	8		1594541	1					
ANR	1594600	PrimaryExpression	8		1594541	0					
ANR	1594601	Argument	12		1594541	2					
ANR	1594602	PrimaryExpression	12		1594541	0					
ANR	1594603	Argument	3		1594541	3					
ANR	1594604	PrimaryExpression	3		1594541	0					
ANR	1594605	BitAndExpression	imm & 0xff		1594541	1		&			
ANR	1594606	Identifier	imm		1594541	0					
ANR	1594607	PrimaryExpression	0xff		1594541	1					
ANR	1594608	ReturnStatement	"return push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) ) ;"	210:1:6649:6821	1594541	1	True				
ANR	1594609	CallExpression	"push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) )"		1594541	0					
ANR	1594610	Callee	push_inst32		1594541	0					
ANR	1594611	Identifier	push_inst32		1594541	0					
ANR	1594612	ArgumentList	compiler		1594541	1					
ANR	1594613	Argument	compiler		1594541	0					
ANR	1594614	Identifier	compiler		1594541	0					
ANR	1594615	Argument	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1594541	1					
ANR	1594616	InclusiveOrExpression	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1594541	0		|			
ANR	1594617	Identifier	MOVT		1594541	0					
ANR	1594618	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1594541	1		|			
ANR	1594619	CallExpression	RD4 ( dst )		1594541	0					
ANR	1594620	Callee	RD4		1594541	0					
ANR	1594621	Identifier	RD4		1594541	0					
ANR	1594622	ArgumentList	dst		1594541	1					
ANR	1594623	Argument	dst		1594541	0					
ANR	1594624	Identifier	dst		1594541	0					
ANR	1594625	InclusiveOrExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1594541	1		|			
ANR	1594626	CallExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 )"		1594541	0					
ANR	1594627	Callee	COPY_BITS		1594541	0					
ANR	1594628	Identifier	COPY_BITS		1594541	0					
ANR	1594629	ArgumentList	imm		1594541	1					
ANR	1594630	Argument	imm		1594541	0					
ANR	1594631	Identifier	imm		1594541	0					
ANR	1594632	Argument	12 + 16		1594541	1					
ANR	1594633	AdditiveExpression	12 + 16		1594541	0		+			
ANR	1594634	PrimaryExpression	12		1594541	0					
ANR	1594635	PrimaryExpression	16		1594541	1					
ANR	1594636	Argument	16		1594541	2					
ANR	1594637	PrimaryExpression	16		1594541	0					
ANR	1594638	Argument	4		1594541	3					
ANR	1594639	PrimaryExpression	4		1594541	0					
ANR	1594640	InclusiveOrExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1594541	1		|			
ANR	1594641	CallExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 )"		1594541	0					
ANR	1594642	Callee	COPY_BITS		1594541	0					
ANR	1594643	Identifier	COPY_BITS		1594541	0					
ANR	1594644	ArgumentList	imm		1594541	1					
ANR	1594645	Argument	imm		1594541	0					
ANR	1594646	Identifier	imm		1594541	0					
ANR	1594647	Argument	11 + 16		1594541	1					
ANR	1594648	AdditiveExpression	11 + 16		1594541	0		+			
ANR	1594649	PrimaryExpression	11		1594541	0					
ANR	1594650	PrimaryExpression	16		1594541	1					
ANR	1594651	Argument	26		1594541	2					
ANR	1594652	PrimaryExpression	26		1594541	0					
ANR	1594653	Argument	1		1594541	3					
ANR	1594654	PrimaryExpression	1		1594541	0					
ANR	1594655	InclusiveOrExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1594541	1		|			
ANR	1594656	CallExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 )"		1594541	0					
ANR	1594657	Callee	COPY_BITS		1594541	0					
ANR	1594658	Identifier	COPY_BITS		1594541	0					
ANR	1594659	ArgumentList	imm		1594541	1					
ANR	1594660	Argument	imm		1594541	0					
ANR	1594661	Identifier	imm		1594541	0					
ANR	1594662	Argument	8 + 16		1594541	1					
ANR	1594663	AdditiveExpression	8 + 16		1594541	0		+			
ANR	1594664	PrimaryExpression	8		1594541	0					
ANR	1594665	PrimaryExpression	16		1594541	1					
ANR	1594666	Argument	12		1594541	2					
ANR	1594667	PrimaryExpression	12		1594541	0					
ANR	1594668	Argument	3		1594541	3					
ANR	1594669	PrimaryExpression	3		1594541	0					
ANR	1594670	ShiftExpression	( imm & 0xff0000 ) >> 16		1594541	1		>>			
ANR	1594671	BitAndExpression	imm & 0xff0000		1594541	0		&			
ANR	1594672	Identifier	imm		1594541	0					
ANR	1594673	PrimaryExpression	0xff0000		1594541	1					
ANR	1594674	PrimaryExpression	16		1594541	1					
ANR	1594675	ReturnType	static SLJIT_INLINE sljit_si		1594541	1					
ANR	1594676	Identifier	emit_imm32_const		1594541	2					
ANR	1594677	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm"		1594541	3					
ANR	1594678	Parameter	struct sljit_compiler * compiler	206:46:6435:6465	1594541	0	True				
ANR	1594679	ParameterType	struct sljit_compiler *		1594541	0					
ANR	1594680	Identifier	compiler		1594541	1					
ANR	1594681	Parameter	sljit_si dst	206:79:6468:6479	1594541	1	True				
ANR	1594682	ParameterType	sljit_si		1594541	0					
ANR	1594683	Identifier	dst		1594541	1					
ANR	1594684	Parameter	sljit_uw imm	206:93:6482:6493	1594541	2	True				
ANR	1594685	ParameterType	sljit_uw		1594541	0					
ANR	1594686	Identifier	imm		1594541	1					
ANR	1594687	CFGEntryNode	ENTRY		1594541		True				
ANR	1594688	CFGExitNode	EXIT		1594541		True				
ANR	1594689	Symbol	COPY_BITS		1594541						
ANR	1594690	Symbol	RD4		1594541						
ANR	1594691	Symbol	dst		1594541						
ANR	1594692	Symbol	MOVT		1594541						
ANR	1594693	Symbol	MOVW		1594541						
ANR	1594694	Symbol	imm		1594541						
ANR	1594695	Symbol	compiler		1594541						
ANR	1594696	Symbol	push_inst32		1594541						
ANR	1594697	Function	modify_imm32_const	214:0:6826:7397							
ANR	1594698	FunctionDef	"modify_imm32_const (sljit_uh * inst , sljit_uw new_imm)"		1594697	0					
ANR	1594699	CompoundStatement		215:0:6904:7397	1594697	0					
ANR	1594700	IdentifierDeclStatement	sljit_si dst = inst [ 1 ] & 0x0f00 ;	216:1:6907:6938	1594697	0	True				
ANR	1594701	IdentifierDecl	dst = inst [ 1 ] & 0x0f00		1594697	0					
ANR	1594702	IdentifierDeclType	sljit_si		1594697	0					
ANR	1594703	Identifier	dst		1594697	1					
ANR	1594704	AssignmentExpression	dst = inst [ 1 ] & 0x0f00		1594697	2		=			
ANR	1594705	Identifier	dst		1594697	0					
ANR	1594706	BitAndExpression	inst [ 1 ] & 0x0f00		1594697	1		&			
ANR	1594707	ArrayIndexing	inst [ 1 ]		1594697	0					
ANR	1594708	Identifier	inst		1594697	0					
ANR	1594709	PrimaryExpression	1		1594697	1					
ANR	1594710	PrimaryExpression	0x0f00		1594697	1					
ANR	1594711	ExpressionStatement	SLJIT_ASSERT ( ( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 ) )	217:1:6941:7060	1594697	1	True				
ANR	1594712	CallExpression	SLJIT_ASSERT ( ( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 ) )		1594697	0					
ANR	1594713	Callee	SLJIT_ASSERT		1594697	0					
ANR	1594714	Identifier	SLJIT_ASSERT		1594697	0					
ANR	1594715	ArgumentList	( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1594697	1					
ANR	1594716	Argument	( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1594697	0					
ANR	1594717	AndExpression	( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1594697	0		&&			
ANR	1594718	EqualityExpression	( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 )		1594697	0		==			
ANR	1594719	BitAndExpression	inst [ 0 ] & 0xfbf0		1594697	0		&			
ANR	1594720	ArrayIndexing	inst [ 0 ]		1594697	0					
ANR	1594721	Identifier	inst		1594697	0					
ANR	1594722	PrimaryExpression	0		1594697	1					
ANR	1594723	PrimaryExpression	0xfbf0		1594697	1					
ANR	1594724	ShiftExpression	MOVW >> 16		1594697	1		>>			
ANR	1594725	Identifier	MOVW		1594697	0					
ANR	1594726	PrimaryExpression	16		1594697	1					
ANR	1594727	AndExpression	( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1594697	1		&&			
ANR	1594728	EqualityExpression	( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 )		1594697	0		==			
ANR	1594729	BitAndExpression	inst [ 2 ] & 0xfbf0		1594697	0		&			
ANR	1594730	ArrayIndexing	inst [ 2 ]		1594697	0					
ANR	1594731	Identifier	inst		1594697	0					
ANR	1594732	PrimaryExpression	2		1594697	1					
ANR	1594733	PrimaryExpression	0xfbf0		1594697	1					
ANR	1594734	ShiftExpression	MOVT >> 16		1594697	1		>>			
ANR	1594735	Identifier	MOVT		1594697	0					
ANR	1594736	PrimaryExpression	16		1594697	1					
ANR	1594737	EqualityExpression	dst == ( inst [ 3 ] & 0x0f00 )		1594697	1		==			
ANR	1594738	Identifier	dst		1594697	0					
ANR	1594739	BitAndExpression	inst [ 3 ] & 0x0f00		1594697	1		&			
ANR	1594740	ArrayIndexing	inst [ 3 ]		1594697	0					
ANR	1594741	Identifier	inst		1594697	0					
ANR	1594742	PrimaryExpression	3		1594697	1					
ANR	1594743	PrimaryExpression	0x0f00		1594697	1					
ANR	1594744	ExpressionStatement	"inst [ 0 ] = ( MOVW >> 16 ) | COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"	218:1:7063:7148	1594697	2	True				
ANR	1594745	AssignmentExpression	"inst [ 0 ] = ( MOVW >> 16 ) | COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"		1594697	0		=			
ANR	1594746	ArrayIndexing	inst [ 0 ]		1594697	0					
ANR	1594747	Identifier	inst		1594697	0					
ANR	1594748	PrimaryExpression	0		1594697	1					
ANR	1594749	InclusiveOrExpression	"( MOVW >> 16 ) | COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"		1594697	1		|			
ANR	1594750	ShiftExpression	MOVW >> 16		1594697	0		>>			
ANR	1594751	Identifier	MOVW		1594697	0					
ANR	1594752	PrimaryExpression	16		1594697	1					
ANR	1594753	InclusiveOrExpression	"COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"		1594697	1		|			
ANR	1594754	CallExpression	"COPY_BITS ( new_imm , 12 , 0 , 4 )"		1594697	0					
ANR	1594755	Callee	COPY_BITS		1594697	0					
ANR	1594756	Identifier	COPY_BITS		1594697	0					
ANR	1594757	ArgumentList	new_imm		1594697	1					
ANR	1594758	Argument	new_imm		1594697	0					
ANR	1594759	Identifier	new_imm		1594697	0					
ANR	1594760	Argument	12		1594697	1					
ANR	1594761	PrimaryExpression	12		1594697	0					
ANR	1594762	Argument	0		1594697	2					
ANR	1594763	PrimaryExpression	0		1594697	0					
ANR	1594764	Argument	4		1594697	3					
ANR	1594765	PrimaryExpression	4		1594697	0					
ANR	1594766	CallExpression	"COPY_BITS ( new_imm , 11 , 10 , 1 )"		1594697	1					
ANR	1594767	Callee	COPY_BITS		1594697	0					
ANR	1594768	Identifier	COPY_BITS		1594697	0					
ANR	1594769	ArgumentList	new_imm		1594697	1					
ANR	1594770	Argument	new_imm		1594697	0					
ANR	1594771	Identifier	new_imm		1594697	0					
ANR	1594772	Argument	11		1594697	1					
ANR	1594773	PrimaryExpression	11		1594697	0					
ANR	1594774	Argument	10		1594697	2					
ANR	1594775	PrimaryExpression	10		1594697	0					
ANR	1594776	Argument	1		1594697	3					
ANR	1594777	PrimaryExpression	1		1594697	0					
ANR	1594778	ExpressionStatement	"inst [ 1 ] = dst | COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"	219:1:7151:7214	1594697	3	True				
ANR	1594779	AssignmentExpression	"inst [ 1 ] = dst | COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"		1594697	0		=			
ANR	1594780	ArrayIndexing	inst [ 1 ]		1594697	0					
ANR	1594781	Identifier	inst		1594697	0					
ANR	1594782	PrimaryExpression	1		1594697	1					
ANR	1594783	InclusiveOrExpression	"dst | COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"		1594697	1		|			
ANR	1594784	Identifier	dst		1594697	0					
ANR	1594785	InclusiveOrExpression	"COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"		1594697	1		|			
ANR	1594786	CallExpression	"COPY_BITS ( new_imm , 8 , 12 , 3 )"		1594697	0					
ANR	1594787	Callee	COPY_BITS		1594697	0					
ANR	1594788	Identifier	COPY_BITS		1594697	0					
ANR	1594789	ArgumentList	new_imm		1594697	1					
ANR	1594790	Argument	new_imm		1594697	0					
ANR	1594791	Identifier	new_imm		1594697	0					
ANR	1594792	Argument	8		1594697	1					
ANR	1594793	PrimaryExpression	8		1594697	0					
ANR	1594794	Argument	12		1594697	2					
ANR	1594795	PrimaryExpression	12		1594697	0					
ANR	1594796	Argument	3		1594697	3					
ANR	1594797	PrimaryExpression	3		1594697	0					
ANR	1594798	BitAndExpression	new_imm & 0xff		1594697	1		&			
ANR	1594799	Identifier	new_imm		1594697	0					
ANR	1594800	PrimaryExpression	0xff		1594697	1					
ANR	1594801	ExpressionStatement	"inst [ 2 ] = ( MOVT >> 16 ) | COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"	220:1:7217:7312	1594697	4	True				
ANR	1594802	AssignmentExpression	"inst [ 2 ] = ( MOVT >> 16 ) | COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1594697	0		=			
ANR	1594803	ArrayIndexing	inst [ 2 ]		1594697	0					
ANR	1594804	Identifier	inst		1594697	0					
ANR	1594805	PrimaryExpression	2		1594697	1					
ANR	1594806	InclusiveOrExpression	"( MOVT >> 16 ) | COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1594697	1		|			
ANR	1594807	ShiftExpression	MOVT >> 16		1594697	0		>>			
ANR	1594808	Identifier	MOVT		1594697	0					
ANR	1594809	PrimaryExpression	16		1594697	1					
ANR	1594810	InclusiveOrExpression	"COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1594697	1		|			
ANR	1594811	CallExpression	"COPY_BITS ( new_imm , 12 + 16 , 0 , 4 )"		1594697	0					
ANR	1594812	Callee	COPY_BITS		1594697	0					
ANR	1594813	Identifier	COPY_BITS		1594697	0					
ANR	1594814	ArgumentList	new_imm		1594697	1					
ANR	1594815	Argument	new_imm		1594697	0					
ANR	1594816	Identifier	new_imm		1594697	0					
ANR	1594817	Argument	12 + 16		1594697	1					
ANR	1594818	AdditiveExpression	12 + 16		1594697	0		+			
ANR	1594819	PrimaryExpression	12		1594697	0					
ANR	1594820	PrimaryExpression	16		1594697	1					
ANR	1594821	Argument	0		1594697	2					
ANR	1594822	PrimaryExpression	0		1594697	0					
ANR	1594823	Argument	4		1594697	3					
ANR	1594824	PrimaryExpression	4		1594697	0					
ANR	1594825	CallExpression	"COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1594697	1					
ANR	1594826	Callee	COPY_BITS		1594697	0					
ANR	1594827	Identifier	COPY_BITS		1594697	0					
ANR	1594828	ArgumentList	new_imm		1594697	1					
ANR	1594829	Argument	new_imm		1594697	0					
ANR	1594830	Identifier	new_imm		1594697	0					
ANR	1594831	Argument	11 + 16		1594697	1					
ANR	1594832	AdditiveExpression	11 + 16		1594697	0		+			
ANR	1594833	PrimaryExpression	11		1594697	0					
ANR	1594834	PrimaryExpression	16		1594697	1					
ANR	1594835	Argument	10		1594697	2					
ANR	1594836	PrimaryExpression	10		1594697	0					
ANR	1594837	Argument	1		1594697	3					
ANR	1594838	PrimaryExpression	1		1594697	0					
ANR	1594839	ExpressionStatement	"inst [ 3 ] = dst | COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"	221:1:7315:7395	1594697	5	True				
ANR	1594840	AssignmentExpression	"inst [ 3 ] = dst | COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"		1594697	0		=			
ANR	1594841	ArrayIndexing	inst [ 3 ]		1594697	0					
ANR	1594842	Identifier	inst		1594697	0					
ANR	1594843	PrimaryExpression	3		1594697	1					
ANR	1594844	InclusiveOrExpression	"dst | COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"		1594697	1		|			
ANR	1594845	Identifier	dst		1594697	0					
ANR	1594846	InclusiveOrExpression	"COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"		1594697	1		|			
ANR	1594847	CallExpression	"COPY_BITS ( new_imm , 8 + 16 , 12 , 3 )"		1594697	0					
ANR	1594848	Callee	COPY_BITS		1594697	0					
ANR	1594849	Identifier	COPY_BITS		1594697	0					
ANR	1594850	ArgumentList	new_imm		1594697	1					
ANR	1594851	Argument	new_imm		1594697	0					
ANR	1594852	Identifier	new_imm		1594697	0					
ANR	1594853	Argument	8 + 16		1594697	1					
ANR	1594854	AdditiveExpression	8 + 16		1594697	0		+			
ANR	1594855	PrimaryExpression	8		1594697	0					
ANR	1594856	PrimaryExpression	16		1594697	1					
ANR	1594857	Argument	12		1594697	2					
ANR	1594858	PrimaryExpression	12		1594697	0					
ANR	1594859	Argument	3		1594697	3					
ANR	1594860	PrimaryExpression	3		1594697	0					
ANR	1594861	ShiftExpression	( new_imm & 0xff0000 ) >> 16		1594697	1		>>			
ANR	1594862	BitAndExpression	new_imm & 0xff0000		1594697	0		&			
ANR	1594863	Identifier	new_imm		1594697	0					
ANR	1594864	PrimaryExpression	0xff0000		1594697	1					
ANR	1594865	PrimaryExpression	16		1594697	1					
ANR	1594866	ReturnType	static SLJIT_INLINE void		1594697	1					
ANR	1594867	Identifier	modify_imm32_const		1594697	2					
ANR	1594868	ParameterList	"sljit_uh * inst , sljit_uw new_imm"		1594697	3					
ANR	1594869	Parameter	sljit_uh * inst	214:44:6870:6883	1594697	0	True				
ANR	1594870	ParameterType	sljit_uh *		1594697	0					
ANR	1594871	Identifier	inst		1594697	1					
ANR	1594872	Parameter	sljit_uw new_imm	214:60:6886:6901	1594697	1	True				
ANR	1594873	ParameterType	sljit_uw		1594697	0					
ANR	1594874	Identifier	new_imm		1594697	1					
ANR	1594875	CFGEntryNode	ENTRY		1594697		True				
ANR	1594876	CFGExitNode	EXIT		1594697		True				
ANR	1594877	Symbol	COPY_BITS		1594697						
ANR	1594878	Symbol	* inst		1594697						
ANR	1594879	Symbol	dst		1594697						
ANR	1594880	Symbol	MOVT		1594697						
ANR	1594881	Symbol	inst		1594697						
ANR	1594882	Symbol	MOVW		1594697						
ANR	1594883	Symbol	new_imm		1594697						
ANR	1594884	Function	detect_jump_type	224:0:7400:8645							
ANR	1594885	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_uh * code_ptr , sljit_uh * code)"		1594884	0					
ANR	1594886	CompoundStatement		225:0:7507:8645	1594884	0					
ANR	1594887	IdentifierDeclStatement	sljit_sw diff ;	226:1:7510:7523	1594884	0	True				
ANR	1594888	IdentifierDecl	diff		1594884	0					
ANR	1594889	IdentifierDeclType	sljit_sw		1594884	0					
ANR	1594890	Identifier	diff		1594884	1					
ANR	1594891	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1594884	1					
ANR	1594892	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	228:5:7531:7565	1594884	0	True				
ANR	1594893	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1594884	0		&			
ANR	1594894	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1594895	Identifier	jump		1594884	0					
ANR	1594896	Identifier	flags		1594884	1					
ANR	1594897	Identifier	SLJIT_REWRITABLE_JUMP		1594884	1					
ANR	1594898	ReturnStatement	return 0 ;	229:2:7570:7578	1594884	1	True				
ANR	1594899	PrimaryExpression	0		1594884	0					
ANR	1594900	IfStatement	if ( jump -> flags & JUMP_ADDR )		1594884	2					
ANR	1594901	Condition	jump -> flags & JUMP_ADDR	231:5:7586:7608	1594884	0	True				
ANR	1594902	BitAndExpression	jump -> flags & JUMP_ADDR		1594884	0		&			
ANR	1594903	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1594904	Identifier	jump		1594884	0					
ANR	1594905	Identifier	flags		1594884	1					
ANR	1594906	Identifier	JUMP_ADDR		1594884	1					
ANR	1594907	CompoundStatement		7:30:103:103	1594884	1					
ANR	1594908	IfStatement	if ( ! ( jump -> u . target & 0x1 ) )		1594884	0					
ANR	1594909	Condition	! ( jump -> u . target & 0x1 )	233:6:7668:7690	1594884	0	True				
ANR	1594910	UnaryOperationExpression	! ( jump -> u . target & 0x1 )		1594884	0					
ANR	1594911	UnaryOperator	!		1594884	0					
ANR	1594912	BitAndExpression	jump -> u . target & 0x1		1594884	1		&			
ANR	1594913	MemberAccess	jump -> u . target		1594884	0					
ANR	1594914	PtrMemberAccess	jump -> u		1594884	0					
ANR	1594915	Identifier	jump		1594884	0					
ANR	1594916	Identifier	u		1594884	1					
ANR	1594917	Identifier	target		1594884	1					
ANR	1594918	PrimaryExpression	0x1		1594884	1					
ANR	1594919	ReturnStatement	return 0 ;	234:3:7696:7704	1594884	1	True				
ANR	1594920	PrimaryExpression	0		1594884	0					
ANR	1594921	ExpressionStatement	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1	235:2:7708:7773	1594884	1	True				
ANR	1594922	AssignmentExpression	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1594884	0		=			
ANR	1594923	Identifier	diff		1594884	0					
ANR	1594924	ShiftExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1594884	1		>>			
ANR	1594925	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 )		1594884	0		-			
ANR	1594926	CastExpression	( sljit_sw ) jump -> u . target		1594884	0					
ANR	1594927	CastTarget	sljit_sw		1594884	0					
ANR	1594928	MemberAccess	jump -> u . target		1594884	1					
ANR	1594929	PtrMemberAccess	jump -> u		1594884	0					
ANR	1594930	Identifier	jump		1594884	0					
ANR	1594931	Identifier	u		1594884	1					
ANR	1594932	Identifier	target		1594884	1					
ANR	1594933	CastExpression	( sljit_sw ) ( code_ptr + 2 )		1594884	1					
ANR	1594934	CastTarget	sljit_sw		1594884	0					
ANR	1594935	AdditiveExpression	code_ptr + 2		1594884	1		+			
ANR	1594936	Identifier	code_ptr		1594884	0					
ANR	1594937	PrimaryExpression	2		1594884	1					
ANR	1594938	PrimaryExpression	1		1594884	1					
ANR	1594939	ElseStatement	else		1594884	0					
ANR	1594940	CompoundStatement		13:6:276:276	1594884	0					
ANR	1594941	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	238:2:7788:7826	1594884	0	True				
ANR	1594942	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1594884	0					
ANR	1594943	Callee	SLJIT_ASSERT		1594884	0					
ANR	1594944	Identifier	SLJIT_ASSERT		1594884	0					
ANR	1594945	ArgumentList	jump -> flags & JUMP_LABEL		1594884	1					
ANR	1594946	Argument	jump -> flags & JUMP_LABEL		1594884	0					
ANR	1594947	BitAndExpression	jump -> flags & JUMP_LABEL		1594884	0		&			
ANR	1594948	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1594949	Identifier	jump		1594884	0					
ANR	1594950	Identifier	flags		1594884	1					
ANR	1594951	Identifier	JUMP_LABEL		1594884	1					
ANR	1594952	ExpressionStatement	diff = ( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1	239:2:7830:7909	1594884	1	True				
ANR	1594953	AssignmentExpression	diff = ( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1594884	0		=			
ANR	1594954	Identifier	diff		1594884	0					
ANR	1594955	ShiftExpression	( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1594884	1		>>			
ANR	1594956	AdditiveExpression	( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 )		1594884	0		-			
ANR	1594957	CastExpression	( sljit_sw ) ( code + jump -> u . label -> size )		1594884	0					
ANR	1594958	CastTarget	sljit_sw		1594884	0					
ANR	1594959	AdditiveExpression	code + jump -> u . label -> size		1594884	1		+			
ANR	1594960	Identifier	code		1594884	0					
ANR	1594961	PtrMemberAccess	jump -> u . label -> size		1594884	1					
ANR	1594962	MemberAccess	jump -> u . label		1594884	0					
ANR	1594963	PtrMemberAccess	jump -> u		1594884	0					
ANR	1594964	Identifier	jump		1594884	0					
ANR	1594965	Identifier	u		1594884	1					
ANR	1594966	Identifier	label		1594884	1					
ANR	1594967	Identifier	size		1594884	1					
ANR	1594968	CastExpression	( sljit_sw ) ( code_ptr + 2 )		1594884	1					
ANR	1594969	CastTarget	sljit_sw		1594884	0					
ANR	1594970	AdditiveExpression	code_ptr + 2		1594884	1		+			
ANR	1594971	Identifier	code_ptr		1594884	0					
ANR	1594972	PrimaryExpression	2		1594884	1					
ANR	1594973	PrimaryExpression	1		1594884	1					
ANR	1594974	IfStatement	if ( jump -> flags & IS_COND )		1594884	3					
ANR	1594975	Condition	jump -> flags & IS_COND	242:5:7920:7940	1594884	0	True				
ANR	1594976	BitAndExpression	jump -> flags & IS_COND		1594884	0		&			
ANR	1594977	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1594978	Identifier	jump		1594884	0					
ANR	1594979	Identifier	flags		1594884	1					
ANR	1594980	Identifier	IS_COND		1594884	1					
ANR	1594981	CompoundStatement		18:28:435:435	1594884	1					
ANR	1594982	ExpressionStatement	SLJIT_ASSERT ( ! ( jump -> flags & IS_BL ) )	243:2:7947:7983	1594884	0	True				
ANR	1594983	CallExpression	SLJIT_ASSERT ( ! ( jump -> flags & IS_BL ) )		1594884	0					
ANR	1594984	Callee	SLJIT_ASSERT		1594884	0					
ANR	1594985	Identifier	SLJIT_ASSERT		1594884	0					
ANR	1594986	ArgumentList	! ( jump -> flags & IS_BL )		1594884	1					
ANR	1594987	Argument	! ( jump -> flags & IS_BL )		1594884	0					
ANR	1594988	UnaryOperationExpression	! ( jump -> flags & IS_BL )		1594884	0					
ANR	1594989	UnaryOperator	!		1594884	0					
ANR	1594990	BitAndExpression	jump -> flags & IS_BL		1594884	1		&			
ANR	1594991	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1594992	Identifier	jump		1594884	0					
ANR	1594993	Identifier	flags		1594884	1					
ANR	1594994	Identifier	IS_BL		1594884	1					
ANR	1594995	IfStatement	if ( diff <= 127 && diff >= - 128 )		1594884	1					
ANR	1594996	Condition	diff <= 127 && diff >= - 128	244:6:7991:8017	1594884	0	True				
ANR	1594997	AndExpression	diff <= 127 && diff >= - 128		1594884	0		&&			
ANR	1594998	RelationalExpression	diff <= 127		1594884	0		<=			
ANR	1594999	Identifier	diff		1594884	0					
ANR	1595000	PrimaryExpression	127		1594884	1					
ANR	1595001	RelationalExpression	diff >= - 128		1594884	1		>=			
ANR	1595002	Identifier	diff		1594884	0					
ANR	1595003	UnaryOperationExpression	- 128		1594884	1					
ANR	1595004	UnaryOperator	-		1594884	0					
ANR	1595005	PrimaryExpression	128		1594884	1					
ANR	1595006	CompoundStatement		20:35:512:512	1594884	1					
ANR	1595007	ExpressionStatement	jump -> flags |= PATCH_TYPE1	245:3:8025:8051	1594884	0	True				
ANR	1595008	AssignmentExpression	jump -> flags |= PATCH_TYPE1		1594884	0		|=			
ANR	1595009	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1595010	Identifier	jump		1594884	0					
ANR	1595011	Identifier	flags		1594884	1					
ANR	1595012	Identifier	PATCH_TYPE1		1594884	1					
ANR	1595013	ReturnStatement	return 5 ;	246:3:8056:8064	1594884	1	True				
ANR	1595014	PrimaryExpression	5		1594884	0					
ANR	1595015	IfStatement	if ( diff <= 524287 && diff >= - 524288 )		1594884	2					
ANR	1595016	Condition	diff <= 524287 && diff >= - 524288	248:6:8076:8108	1594884	0	True				
ANR	1595017	AndExpression	diff <= 524287 && diff >= - 524288		1594884	0		&&			
ANR	1595018	RelationalExpression	diff <= 524287		1594884	0		<=			
ANR	1595019	Identifier	diff		1594884	0					
ANR	1595020	PrimaryExpression	524287		1594884	1					
ANR	1595021	RelationalExpression	diff >= - 524288		1594884	1		>=			
ANR	1595022	Identifier	diff		1594884	0					
ANR	1595023	UnaryOperationExpression	- 524288		1594884	1					
ANR	1595024	UnaryOperator	-		1594884	0					
ANR	1595025	PrimaryExpression	524288		1594884	1					
ANR	1595026	CompoundStatement		24:41:603:603	1594884	1					
ANR	1595027	ExpressionStatement	jump -> flags |= PATCH_TYPE2	249:3:8116:8142	1594884	0	True				
ANR	1595028	AssignmentExpression	jump -> flags |= PATCH_TYPE2		1594884	0		|=			
ANR	1595029	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1595030	Identifier	jump		1594884	0					
ANR	1595031	Identifier	flags		1594884	1					
ANR	1595032	Identifier	PATCH_TYPE2		1594884	1					
ANR	1595033	ReturnStatement	return 4 ;	250:3:8147:8155	1594884	1	True				
ANR	1595034	PrimaryExpression	4		1594884	0					
ANR	1595035	ExpressionStatement	diff --	253:2:8212:8218	1594884	3	True				
ANR	1595036	PostIncDecOperationExpression	diff --		1594884	0					
ANR	1595037	Identifier	diff		1594884	0					
ANR	1595038	IncDec	--		1594884	1					
ANR	1595039	IfStatement	if ( diff <= 8388607 && diff >= - 8388608 )		1594884	4					
ANR	1595040	Condition	diff <= 8388607 && diff >= - 8388608	254:6:8226:8260	1594884	0	True				
ANR	1595041	AndExpression	diff <= 8388607 && diff >= - 8388608		1594884	0		&&			
ANR	1595042	RelationalExpression	diff <= 8388607		1594884	0		<=			
ANR	1595043	Identifier	diff		1594884	0					
ANR	1595044	PrimaryExpression	8388607		1594884	1					
ANR	1595045	RelationalExpression	diff >= - 8388608		1594884	1		>=			
ANR	1595046	Identifier	diff		1594884	0					
ANR	1595047	UnaryOperationExpression	- 8388608		1594884	1					
ANR	1595048	UnaryOperator	-		1594884	0					
ANR	1595049	PrimaryExpression	8388608		1594884	1					
ANR	1595050	CompoundStatement		30:43:755:755	1594884	1					
ANR	1595051	ExpressionStatement	jump -> flags |= PATCH_TYPE3	255:3:8268:8294	1594884	0	True				
ANR	1595052	AssignmentExpression	jump -> flags |= PATCH_TYPE3		1594884	0		|=			
ANR	1595053	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1595054	Identifier	jump		1594884	0					
ANR	1595055	Identifier	flags		1594884	1					
ANR	1595056	Identifier	PATCH_TYPE3		1594884	1					
ANR	1595057	ReturnStatement	return 3 ;	256:3:8299:8307	1594884	1	True				
ANR	1595058	PrimaryExpression	3		1594884	0					
ANR	1595059	ElseStatement	else		1594884	0					
ANR	1595060	IfStatement	if ( jump -> flags & IS_BL )		1594884	0					
ANR	1595061	Condition	jump -> flags & IS_BL	259:10:8326:8344	1594884	0	True				
ANR	1595062	BitAndExpression	jump -> flags & IS_BL		1594884	0		&			
ANR	1595063	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1595064	Identifier	jump		1594884	0					
ANR	1595065	Identifier	flags		1594884	1					
ANR	1595066	Identifier	IS_BL		1594884	1					
ANR	1595067	CompoundStatement		35:31:839:839	1594884	1					
ANR	1595068	IfStatement	if ( diff <= 8388607 && diff >= - 8388608 )		1594884	0					
ANR	1595069	Condition	diff <= 8388607 && diff >= - 8388608	260:6:8355:8389	1594884	0	True				
ANR	1595070	AndExpression	diff <= 8388607 && diff >= - 8388608		1594884	0		&&			
ANR	1595071	RelationalExpression	diff <= 8388607		1594884	0		<=			
ANR	1595072	Identifier	diff		1594884	0					
ANR	1595073	PrimaryExpression	8388607		1594884	1					
ANR	1595074	RelationalExpression	diff >= - 8388608		1594884	1		>=			
ANR	1595075	Identifier	diff		1594884	0					
ANR	1595076	UnaryOperationExpression	- 8388608		1594884	1					
ANR	1595077	UnaryOperator	-		1594884	0					
ANR	1595078	PrimaryExpression	8388608		1594884	1					
ANR	1595079	CompoundStatement		36:43:884:884	1594884	1					
ANR	1595080	ExpressionStatement	jump -> flags |= PATCH_BL	261:3:8397:8420	1594884	0	True				
ANR	1595081	AssignmentExpression	jump -> flags |= PATCH_BL		1594884	0		|=			
ANR	1595082	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1595083	Identifier	jump		1594884	0					
ANR	1595084	Identifier	flags		1594884	1					
ANR	1595085	Identifier	PATCH_BL		1594884	1					
ANR	1595086	ReturnStatement	return 3 ;	262:3:8425:8433	1594884	1	True				
ANR	1595087	PrimaryExpression	3		1594884	0					
ANR	1595088	ElseStatement	else		1594884	0					
ANR	1595089	CompoundStatement		41:6:940:940	1594884	0					
ANR	1595090	IfStatement	if ( diff <= 1023 && diff >= - 1024 )		1594884	0					
ANR	1595091	Condition	diff <= 1023 && diff >= - 1024	266:6:8456:8484	1594884	0	True				
ANR	1595092	AndExpression	diff <= 1023 && diff >= - 1024		1594884	0		&&			
ANR	1595093	RelationalExpression	diff <= 1023		1594884	0		<=			
ANR	1595094	Identifier	diff		1594884	0					
ANR	1595095	PrimaryExpression	1023		1594884	1					
ANR	1595096	RelationalExpression	diff >= - 1024		1594884	1		>=			
ANR	1595097	Identifier	diff		1594884	0					
ANR	1595098	UnaryOperationExpression	- 1024		1594884	1					
ANR	1595099	UnaryOperator	-		1594884	0					
ANR	1595100	PrimaryExpression	1024		1594884	1					
ANR	1595101	CompoundStatement		42:37:979:979	1594884	1					
ANR	1595102	ExpressionStatement	jump -> flags |= PATCH_TYPE4	267:3:8492:8518	1594884	0	True				
ANR	1595103	AssignmentExpression	jump -> flags |= PATCH_TYPE4		1594884	0		|=			
ANR	1595104	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1595105	Identifier	jump		1594884	0					
ANR	1595106	Identifier	flags		1594884	1					
ANR	1595107	Identifier	PATCH_TYPE4		1594884	1					
ANR	1595108	ReturnStatement	return 4 ;	268:3:8523:8531	1594884	1	True				
ANR	1595109	PrimaryExpression	4		1594884	0					
ANR	1595110	IfStatement	if ( diff <= 8388607 && diff >= - 8388608 )		1594884	1					
ANR	1595111	Condition	diff <= 8388607 && diff >= - 8388608	270:6:8543:8577	1594884	0	True				
ANR	1595112	AndExpression	diff <= 8388607 && diff >= - 8388608		1594884	0		&&			
ANR	1595113	RelationalExpression	diff <= 8388607		1594884	0		<=			
ANR	1595114	Identifier	diff		1594884	0					
ANR	1595115	PrimaryExpression	8388607		1594884	1					
ANR	1595116	RelationalExpression	diff >= - 8388608		1594884	1		>=			
ANR	1595117	Identifier	diff		1594884	0					
ANR	1595118	UnaryOperationExpression	- 8388608		1594884	1					
ANR	1595119	UnaryOperator	-		1594884	0					
ANR	1595120	PrimaryExpression	8388608		1594884	1					
ANR	1595121	CompoundStatement		46:43:1072:1072	1594884	1					
ANR	1595122	ExpressionStatement	jump -> flags |= PATCH_TYPE5	271:3:8585:8611	1594884	0	True				
ANR	1595123	AssignmentExpression	jump -> flags |= PATCH_TYPE5		1594884	0		|=			
ANR	1595124	PtrMemberAccess	jump -> flags		1594884	0					
ANR	1595125	Identifier	jump		1594884	0					
ANR	1595126	Identifier	flags		1594884	1					
ANR	1595127	Identifier	PATCH_TYPE5		1594884	1					
ANR	1595128	ReturnStatement	return 3 ;	272:3:8616:8624	1594884	1	True				
ANR	1595129	PrimaryExpression	3		1594884	0					
ANR	1595130	ReturnStatement	return 0 ;	276:1:8635:8643	1594884	4	True				
ANR	1595131	PrimaryExpression	0		1594884	0					
ANR	1595132	ReturnType	static SLJIT_INLINE sljit_si		1594884	1					
ANR	1595133	Identifier	detect_jump_type		1594884	2					
ANR	1595134	ParameterList	"struct sljit_jump * jump , sljit_uh * code_ptr , sljit_uh * code"		1594884	3					
ANR	1595135	Parameter	struct sljit_jump * jump	224:46:7446:7468	1594884	0	True				
ANR	1595136	ParameterType	struct sljit_jump *		1594884	0					
ANR	1595137	Identifier	jump		1594884	1					
ANR	1595138	Parameter	sljit_uh * code_ptr	224:71:7471:7488	1594884	1	True				
ANR	1595139	ParameterType	sljit_uh *		1594884	0					
ANR	1595140	Identifier	code_ptr		1594884	1					
ANR	1595141	Parameter	sljit_uh * code	224:91:7491:7504	1594884	2	True				
ANR	1595142	ParameterType	sljit_uh *		1594884	0					
ANR	1595143	Identifier	code		1594884	1					
ANR	1595144	CFGEntryNode	ENTRY		1594884		True				
ANR	1595145	CFGExitNode	EXIT		1594884		True				
ANR	1595146	Symbol	jump -> u . label -> size		1594884						
ANR	1595147	Symbol	code		1594884						
ANR	1595148	Symbol	* * jump		1594884						
ANR	1595149	Symbol	PATCH_TYPE5		1594884						
ANR	1595150	Symbol	* jump		1594884						
ANR	1595151	Symbol	PATCH_TYPE4		1594884						
ANR	1595152	Symbol	jump -> u		1594884						
ANR	1595153	Symbol	PATCH_TYPE3		1594884						
ANR	1595154	Symbol	PATCH_TYPE2		1594884						
ANR	1595155	Symbol	PATCH_TYPE1		1594884						
ANR	1595156	Symbol	jump -> flags		1594884						
ANR	1595157	Symbol	JUMP_LABEL		1594884						
ANR	1595158	Symbol	diff		1594884						
ANR	1595159	Symbol	JUMP_ADDR		1594884						
ANR	1595160	Symbol	* jump -> u . label		1594884						
ANR	1595161	Symbol	* jump -> u		1594884						
ANR	1595162	Symbol	code_ptr		1594884						
ANR	1595163	Symbol	IS_COND		1594884						
ANR	1595164	Symbol	IS_BL		1594884						
ANR	1595165	Symbol	jump -> u . target		1594884						
ANR	1595166	Symbol	SLJIT_REWRITABLE_JUMP		1594884						
ANR	1595167	Symbol	jump -> u . label		1594884						
ANR	1595168	Symbol	PATCH_BL		1594884						
ANR	1595169	Symbol	jump		1594884						
ANR	1595170	Function	set_jump_instruction	279:0:8648:10680							
ANR	1595171	FunctionDef	set_jump_instruction (struct sljit_jump * jump)		1595170	0					
ANR	1595172	CompoundStatement		280:0:8719:10680	1595170	0					
ANR	1595173	IdentifierDeclStatement	sljit_si type = ( jump -> flags >> 4 ) & 0xf ;	281:1:8722:8762	1595170	0	True				
ANR	1595174	IdentifierDecl	type = ( jump -> flags >> 4 ) & 0xf		1595170	0					
ANR	1595175	IdentifierDeclType	sljit_si		1595170	0					
ANR	1595176	Identifier	type		1595170	1					
ANR	1595177	AssignmentExpression	type = ( jump -> flags >> 4 ) & 0xf		1595170	2		=			
ANR	1595178	Identifier	type		1595170	0					
ANR	1595179	BitAndExpression	( jump -> flags >> 4 ) & 0xf		1595170	1		&			
ANR	1595180	ShiftExpression	jump -> flags >> 4		1595170	0		>>			
ANR	1595181	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595182	Identifier	jump		1595170	0					
ANR	1595183	Identifier	flags		1595170	1					
ANR	1595184	PrimaryExpression	4		1595170	1					
ANR	1595185	PrimaryExpression	0xf		1595170	1					
ANR	1595186	IdentifierDeclStatement	sljit_sw diff ;	282:1:8765:8778	1595170	1	True				
ANR	1595187	IdentifierDecl	diff		1595170	0					
ANR	1595188	IdentifierDeclType	sljit_sw		1595170	0					
ANR	1595189	Identifier	diff		1595170	1					
ANR	1595190	IdentifierDeclStatement	sljit_uh * jump_inst ;	283:1:8781:8800	1595170	2	True				
ANR	1595191	IdentifierDecl	* jump_inst		1595170	0					
ANR	1595192	IdentifierDeclType	sljit_uh *		1595170	0					
ANR	1595193	Identifier	jump_inst		1595170	1					
ANR	1595194	IdentifierDeclStatement	"sljit_si s , j1 , j2 ;"	284:1:8803:8821	1595170	3	True				
ANR	1595195	IdentifierDecl	s		1595170	0					
ANR	1595196	IdentifierDeclType	sljit_si		1595170	0					
ANR	1595197	Identifier	s		1595170	1					
ANR	1595198	IdentifierDecl	j1		1595170	1					
ANR	1595199	IdentifierDeclType	sljit_si		1595170	0					
ANR	1595200	Identifier	j1		1595170	1					
ANR	1595201	IdentifierDecl	j2		1595170	2					
ANR	1595202	IdentifierDeclType	sljit_si		1595170	0					
ANR	1595203	Identifier	j2		1595170	1					
ANR	1595204	IfStatement	if ( SLJIT_UNLIKELY ( type == 0 ) )		1595170	4					
ANR	1595205	Condition	SLJIT_UNLIKELY ( type == 0 )	286:5:8829:8853	1595170	0	True				
ANR	1595206	CallExpression	SLJIT_UNLIKELY ( type == 0 )		1595170	0					
ANR	1595207	Callee	SLJIT_UNLIKELY		1595170	0					
ANR	1595208	Identifier	SLJIT_UNLIKELY		1595170	0					
ANR	1595209	ArgumentList	type == 0		1595170	1					
ANR	1595210	Argument	type == 0		1595170	0					
ANR	1595211	EqualityExpression	type == 0		1595170	0		==			
ANR	1595212	Identifier	type		1595170	0					
ANR	1595213	PrimaryExpression	0		1595170	1					
ANR	1595214	CompoundStatement		7:32:136:136	1595170	1					
ANR	1595215	ExpressionStatement	"modify_imm32_const ( ( sljit_uh * ) jump -> addr , ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target )"	287:2:8860:8968	1595170	0	True				
ANR	1595216	CallExpression	"modify_imm32_const ( ( sljit_uh * ) jump -> addr , ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target )"		1595170	0					
ANR	1595217	Callee	modify_imm32_const		1595170	0					
ANR	1595218	Identifier	modify_imm32_const		1595170	0					
ANR	1595219	ArgumentList	( sljit_uh * ) jump -> addr		1595170	1					
ANR	1595220	Argument	( sljit_uh * ) jump -> addr		1595170	0					
ANR	1595221	CastExpression	( sljit_uh * ) jump -> addr		1595170	0					
ANR	1595222	CastTarget	sljit_uh *		1595170	0					
ANR	1595223	PtrMemberAccess	jump -> addr		1595170	1					
ANR	1595224	Identifier	jump		1595170	0					
ANR	1595225	Identifier	addr		1595170	1					
ANR	1595226	Argument	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1595170	1					
ANR	1595227	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1595170	0					
ANR	1595228	Condition	jump -> flags & JUMP_LABEL		1595170	0					
ANR	1595229	BitAndExpression	jump -> flags & JUMP_LABEL		1595170	0		&			
ANR	1595230	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595231	Identifier	jump		1595170	0					
ANR	1595232	Identifier	flags		1595170	1					
ANR	1595233	Identifier	JUMP_LABEL		1595170	1					
ANR	1595234	PtrMemberAccess	jump -> u . label -> addr		1595170	1					
ANR	1595235	MemberAccess	jump -> u . label		1595170	0					
ANR	1595236	PtrMemberAccess	jump -> u		1595170	0					
ANR	1595237	Identifier	jump		1595170	0					
ANR	1595238	Identifier	u		1595170	1					
ANR	1595239	Identifier	label		1595170	1					
ANR	1595240	Identifier	addr		1595170	1					
ANR	1595241	MemberAccess	jump -> u . target		1595170	2					
ANR	1595242	PtrMemberAccess	jump -> u		1595170	0					
ANR	1595243	Identifier	jump		1595170	0					
ANR	1595244	Identifier	u		1595170	1					
ANR	1595245	Identifier	target		1595170	1					
ANR	1595246	ReturnStatement	return ;	288:2:8972:8978	1595170	1	True				
ANR	1595247	IfStatement	if ( jump -> flags & JUMP_ADDR )		1595170	5					
ANR	1595248	Condition	jump -> flags & JUMP_ADDR	291:5:8989:9011	1595170	0	True				
ANR	1595249	BitAndExpression	jump -> flags & JUMP_ADDR		1595170	0		&			
ANR	1595250	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595251	Identifier	jump		1595170	0					
ANR	1595252	Identifier	flags		1595170	1					
ANR	1595253	Identifier	JUMP_ADDR		1595170	1					
ANR	1595254	CompoundStatement		12:30:294:294	1595170	1					
ANR	1595255	ExpressionStatement	SLJIT_ASSERT ( jump -> u . target & 0x1 )	292:2:9018:9052	1595170	0	True				
ANR	1595256	CallExpression	SLJIT_ASSERT ( jump -> u . target & 0x1 )		1595170	0					
ANR	1595257	Callee	SLJIT_ASSERT		1595170	0					
ANR	1595258	Identifier	SLJIT_ASSERT		1595170	0					
ANR	1595259	ArgumentList	jump -> u . target & 0x1		1595170	1					
ANR	1595260	Argument	jump -> u . target & 0x1		1595170	0					
ANR	1595261	BitAndExpression	jump -> u . target & 0x1		1595170	0		&			
ANR	1595262	MemberAccess	jump -> u . target		1595170	0					
ANR	1595263	PtrMemberAccess	jump -> u		1595170	0					
ANR	1595264	Identifier	jump		1595170	0					
ANR	1595265	Identifier	u		1595170	1					
ANR	1595266	Identifier	target		1595170	1					
ANR	1595267	PrimaryExpression	0x1		1595170	1					
ANR	1595268	ExpressionStatement	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1	293:2:9056:9123	1595170	1	True				
ANR	1595269	AssignmentExpression	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1595170	0		=			
ANR	1595270	Identifier	diff		1595170	0					
ANR	1595271	ShiftExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1595170	1		>>			
ANR	1595272	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 )		1595170	0		-			
ANR	1595273	CastExpression	( sljit_sw ) jump -> u . target		1595170	0					
ANR	1595274	CastTarget	sljit_sw		1595170	0					
ANR	1595275	MemberAccess	jump -> u . target		1595170	1					
ANR	1595276	PtrMemberAccess	jump -> u		1595170	0					
ANR	1595277	Identifier	jump		1595170	0					
ANR	1595278	Identifier	u		1595170	1					
ANR	1595279	Identifier	target		1595170	1					
ANR	1595280	CastExpression	( sljit_sw ) ( jump -> addr + 4 )		1595170	1					
ANR	1595281	CastTarget	sljit_sw		1595170	0					
ANR	1595282	AdditiveExpression	jump -> addr + 4		1595170	1		+			
ANR	1595283	PtrMemberAccess	jump -> addr		1595170	0					
ANR	1595284	Identifier	jump		1595170	0					
ANR	1595285	Identifier	addr		1595170	1					
ANR	1595286	PrimaryExpression	4		1595170	1					
ANR	1595287	PrimaryExpression	1		1595170	1					
ANR	1595288	ElseStatement	else		1595170	0					
ANR	1595289	ExpressionStatement	diff = ( ( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1	296:2:9136:9210	1595170	0	True				
ANR	1595290	AssignmentExpression	diff = ( ( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1595170	0		=			
ANR	1595291	Identifier	diff		1595170	0					
ANR	1595292	ShiftExpression	( ( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1595170	1		>>			
ANR	1595293	AdditiveExpression	( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 )		1595170	0		-			
ANR	1595294	CastExpression	( sljit_sw ) ( jump -> u . label -> addr )		1595170	0					
ANR	1595295	CastTarget	sljit_sw		1595170	0					
ANR	1595296	PtrMemberAccess	jump -> u . label -> addr		1595170	1					
ANR	1595297	MemberAccess	jump -> u . label		1595170	0					
ANR	1595298	PtrMemberAccess	jump -> u		1595170	0					
ANR	1595299	Identifier	jump		1595170	0					
ANR	1595300	Identifier	u		1595170	1					
ANR	1595301	Identifier	label		1595170	1					
ANR	1595302	Identifier	addr		1595170	1					
ANR	1595303	CastExpression	( sljit_sw ) ( jump -> addr + 4 )		1595170	1					
ANR	1595304	CastTarget	sljit_sw		1595170	0					
ANR	1595305	AdditiveExpression	jump -> addr + 4		1595170	1		+			
ANR	1595306	PtrMemberAccess	jump -> addr		1595170	0					
ANR	1595307	Identifier	jump		1595170	0					
ANR	1595308	Identifier	addr		1595170	1					
ANR	1595309	PrimaryExpression	4		1595170	1					
ANR	1595310	PrimaryExpression	1		1595170	1					
ANR	1595311	ExpressionStatement	jump_inst = ( sljit_uh * ) jump -> addr	297:1:9213:9246	1595170	6	True				
ANR	1595312	AssignmentExpression	jump_inst = ( sljit_uh * ) jump -> addr		1595170	0		=			
ANR	1595313	Identifier	jump_inst		1595170	0					
ANR	1595314	CastExpression	( sljit_uh * ) jump -> addr		1595170	1					
ANR	1595315	CastTarget	sljit_uh *		1595170	0					
ANR	1595316	PtrMemberAccess	jump -> addr		1595170	1					
ANR	1595317	Identifier	jump		1595170	0					
ANR	1595318	Identifier	addr		1595170	1					
ANR	1595319	SwitchStatement	switch ( type )		1595170	7					
ANR	1595320	Condition	type	299:9:9258:9261	1595170	0	True				
ANR	1595321	Identifier	type		1595170	0					
ANR	1595322	CompoundStatement		20:15:544:544	1595170	1					
ANR	1595323	Label	case 1 :	300:1:9267:9273	1595170	0	True				
ANR	1595324	ExpressionStatement	SLJIT_ASSERT ( diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND ) )	302:2:9316:9384	1595170	1	True				
ANR	1595325	CallExpression	SLJIT_ASSERT ( diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND ) )		1595170	0					
ANR	1595326	Callee	SLJIT_ASSERT		1595170	0					
ANR	1595327	Identifier	SLJIT_ASSERT		1595170	0					
ANR	1595328	ArgumentList	diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND )		1595170	1					
ANR	1595329	Argument	diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND )		1595170	0					
ANR	1595330	AndExpression	diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND )		1595170	0		&&			
ANR	1595331	RelationalExpression	diff <= 127		1595170	0		<=			
ANR	1595332	Identifier	diff		1595170	0					
ANR	1595333	PrimaryExpression	127		1595170	1					
ANR	1595334	AndExpression	diff >= - 128 && ( jump -> flags & IS_COND )		1595170	1		&&			
ANR	1595335	RelationalExpression	diff >= - 128		1595170	0		>=			
ANR	1595336	Identifier	diff		1595170	0					
ANR	1595337	UnaryOperationExpression	- 128		1595170	1					
ANR	1595338	UnaryOperator	-		1595170	0					
ANR	1595339	PrimaryExpression	128		1595170	1					
ANR	1595340	BitAndExpression	jump -> flags & IS_COND		1595170	1		&			
ANR	1595341	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595342	Identifier	jump		1595170	0					
ANR	1595343	Identifier	flags		1595170	1					
ANR	1595344	Identifier	IS_COND		1595170	1					
ANR	1595345	ExpressionStatement	jump_inst [ 0 ] = 0xd000 | ( jump -> flags & 0xf00 ) | ( diff & 0xff )	303:2:9388:9449	1595170	2	True				
ANR	1595346	AssignmentExpression	jump_inst [ 0 ] = 0xd000 | ( jump -> flags & 0xf00 ) | ( diff & 0xff )		1595170	0		=			
ANR	1595347	ArrayIndexing	jump_inst [ 0 ]		1595170	0					
ANR	1595348	Identifier	jump_inst		1595170	0					
ANR	1595349	PrimaryExpression	0		1595170	1					
ANR	1595350	InclusiveOrExpression	0xd000 | ( jump -> flags & 0xf00 ) | ( diff & 0xff )		1595170	1		|			
ANR	1595351	PrimaryExpression	0xd000		1595170	0					
ANR	1595352	InclusiveOrExpression	( jump -> flags & 0xf00 ) | ( diff & 0xff )		1595170	1		|			
ANR	1595353	BitAndExpression	jump -> flags & 0xf00		1595170	0		&			
ANR	1595354	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595355	Identifier	jump		1595170	0					
ANR	1595356	Identifier	flags		1595170	1					
ANR	1595357	PrimaryExpression	0xf00		1595170	1					
ANR	1595358	BitAndExpression	diff & 0xff		1595170	1		&			
ANR	1595359	Identifier	diff		1595170	0					
ANR	1595360	PrimaryExpression	0xff		1595170	1					
ANR	1595361	ReturnStatement	return ;	304:2:9453:9459	1595170	3	True				
ANR	1595362	Label	case 2 :	305:1:9462:9468	1595170	4	True				
ANR	1595363	ExpressionStatement	SLJIT_ASSERT ( diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND ) )	307:2:9511:9585	1595170	5	True				
ANR	1595364	CallExpression	SLJIT_ASSERT ( diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND ) )		1595170	0					
ANR	1595365	Callee	SLJIT_ASSERT		1595170	0					
ANR	1595366	Identifier	SLJIT_ASSERT		1595170	0					
ANR	1595367	ArgumentList	diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND )		1595170	1					
ANR	1595368	Argument	diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND )		1595170	0					
ANR	1595369	AndExpression	diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND )		1595170	0		&&			
ANR	1595370	RelationalExpression	diff <= 524287		1595170	0		<=			
ANR	1595371	Identifier	diff		1595170	0					
ANR	1595372	PrimaryExpression	524287		1595170	1					
ANR	1595373	AndExpression	diff >= - 524288 && ( jump -> flags & IS_COND )		1595170	1		&&			
ANR	1595374	RelationalExpression	diff >= - 524288		1595170	0		>=			
ANR	1595375	Identifier	diff		1595170	0					
ANR	1595376	UnaryOperationExpression	- 524288		1595170	1					
ANR	1595377	UnaryOperator	-		1595170	0					
ANR	1595378	PrimaryExpression	524288		1595170	1					
ANR	1595379	BitAndExpression	jump -> flags & IS_COND		1595170	1		&			
ANR	1595380	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595381	Identifier	jump		1595170	0					
ANR	1595382	Identifier	flags		1595170	1					
ANR	1595383	Identifier	IS_COND		1595170	1					
ANR	1595384	ExpressionStatement	"jump_inst [ 0 ] = 0xf000 | COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"	308:2:9589:9701	1595170	6	True				
ANR	1595385	AssignmentExpression	"jump_inst [ 0 ] = 0xf000 | COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1595170	0		=			
ANR	1595386	ArrayIndexing	jump_inst [ 0 ]		1595170	0					
ANR	1595387	Identifier	jump_inst		1595170	0					
ANR	1595388	PrimaryExpression	0		1595170	1					
ANR	1595389	InclusiveOrExpression	"0xf000 | COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1595170	1		|			
ANR	1595390	PrimaryExpression	0xf000		1595170	0					
ANR	1595391	InclusiveOrExpression	"COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1595170	1		|			
ANR	1595392	CallExpression	"COPY_BITS ( jump -> flags , 8 , 6 , 4 )"		1595170	0					
ANR	1595393	Callee	COPY_BITS		1595170	0					
ANR	1595394	Identifier	COPY_BITS		1595170	0					
ANR	1595395	ArgumentList	jump -> flags		1595170	1					
ANR	1595396	Argument	jump -> flags		1595170	0					
ANR	1595397	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595398	Identifier	jump		1595170	0					
ANR	1595399	Identifier	flags		1595170	1					
ANR	1595400	Argument	8		1595170	1					
ANR	1595401	PrimaryExpression	8		1595170	0					
ANR	1595402	Argument	6		1595170	2					
ANR	1595403	PrimaryExpression	6		1595170	0					
ANR	1595404	Argument	4		1595170	3					
ANR	1595405	PrimaryExpression	4		1595170	0					
ANR	1595406	InclusiveOrExpression	"COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1595170	1		|			
ANR	1595407	CallExpression	"COPY_BITS ( diff , 11 , 0 , 6 )"		1595170	0					
ANR	1595408	Callee	COPY_BITS		1595170	0					
ANR	1595409	Identifier	COPY_BITS		1595170	0					
ANR	1595410	ArgumentList	diff		1595170	1					
ANR	1595411	Argument	diff		1595170	0					
ANR	1595412	Identifier	diff		1595170	0					
ANR	1595413	Argument	11		1595170	1					
ANR	1595414	PrimaryExpression	11		1595170	0					
ANR	1595415	Argument	0		1595170	2					
ANR	1595416	PrimaryExpression	0		1595170	0					
ANR	1595417	Argument	6		1595170	3					
ANR	1595418	PrimaryExpression	6		1595170	0					
ANR	1595419	CallExpression	"COPY_BITS ( diff , 19 , 10 , 1 )"		1595170	1					
ANR	1595420	Callee	COPY_BITS		1595170	0					
ANR	1595421	Identifier	COPY_BITS		1595170	0					
ANR	1595422	ArgumentList	diff		1595170	1					
ANR	1595423	Argument	diff		1595170	0					
ANR	1595424	Identifier	diff		1595170	0					
ANR	1595425	Argument	19		1595170	1					
ANR	1595426	PrimaryExpression	19		1595170	0					
ANR	1595427	Argument	10		1595170	2					
ANR	1595428	PrimaryExpression	10		1595170	0					
ANR	1595429	Argument	1		1595170	3					
ANR	1595430	PrimaryExpression	1		1595170	0					
ANR	1595431	ExpressionStatement	"jump_inst [ 1 ] = 0x8000 | COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"	309:2:9705:9801	1595170	7	True				
ANR	1595432	AssignmentExpression	"jump_inst [ 1 ] = 0x8000 | COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1595170	0		=			
ANR	1595433	ArrayIndexing	jump_inst [ 1 ]		1595170	0					
ANR	1595434	Identifier	jump_inst		1595170	0					
ANR	1595435	PrimaryExpression	1		1595170	1					
ANR	1595436	InclusiveOrExpression	"0x8000 | COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1595170	1		|			
ANR	1595437	PrimaryExpression	0x8000		1595170	0					
ANR	1595438	InclusiveOrExpression	"COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1595170	1		|			
ANR	1595439	CallExpression	"COPY_BITS ( diff , 17 , 13 , 1 )"		1595170	0					
ANR	1595440	Callee	COPY_BITS		1595170	0					
ANR	1595441	Identifier	COPY_BITS		1595170	0					
ANR	1595442	ArgumentList	diff		1595170	1					
ANR	1595443	Argument	diff		1595170	0					
ANR	1595444	Identifier	diff		1595170	0					
ANR	1595445	Argument	17		1595170	1					
ANR	1595446	PrimaryExpression	17		1595170	0					
ANR	1595447	Argument	13		1595170	2					
ANR	1595448	PrimaryExpression	13		1595170	0					
ANR	1595449	Argument	1		1595170	3					
ANR	1595450	PrimaryExpression	1		1595170	0					
ANR	1595451	InclusiveOrExpression	"COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1595170	1		|			
ANR	1595452	CallExpression	"COPY_BITS ( diff , 18 , 11 , 1 )"		1595170	0					
ANR	1595453	Callee	COPY_BITS		1595170	0					
ANR	1595454	Identifier	COPY_BITS		1595170	0					
ANR	1595455	ArgumentList	diff		1595170	1					
ANR	1595456	Argument	diff		1595170	0					
ANR	1595457	Identifier	diff		1595170	0					
ANR	1595458	Argument	18		1595170	1					
ANR	1595459	PrimaryExpression	18		1595170	0					
ANR	1595460	Argument	11		1595170	2					
ANR	1595461	PrimaryExpression	11		1595170	0					
ANR	1595462	Argument	1		1595170	3					
ANR	1595463	PrimaryExpression	1		1595170	0					
ANR	1595464	BitAndExpression	diff & 0x7ff		1595170	1		&			
ANR	1595465	Identifier	diff		1595170	0					
ANR	1595466	PrimaryExpression	0x7ff		1595170	1					
ANR	1595467	ReturnStatement	return ;	310:2:9805:9811	1595170	8	True				
ANR	1595468	Label	case 3 :	311:1:9814:9820	1595170	9	True				
ANR	1595469	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & IS_COND )	312:2:9824:9859	1595170	10	True				
ANR	1595470	CallExpression	SLJIT_ASSERT ( jump -> flags & IS_COND )		1595170	0					
ANR	1595471	Callee	SLJIT_ASSERT		1595170	0					
ANR	1595472	Identifier	SLJIT_ASSERT		1595170	0					
ANR	1595473	ArgumentList	jump -> flags & IS_COND		1595170	1					
ANR	1595474	Argument	jump -> flags & IS_COND		1595170	0					
ANR	1595475	BitAndExpression	jump -> flags & IS_COND		1595170	0		&			
ANR	1595476	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595477	Identifier	jump		1595170	0					
ANR	1595478	Identifier	flags		1595170	1					
ANR	1595479	Identifier	IS_COND		1595170	1					
ANR	1595480	ExpressionStatement	* jump_inst ++ = IT | ( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8	313:2:9863:9916	1595170	11	True				
ANR	1595481	AssignmentExpression	* jump_inst ++ = IT | ( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8		1595170	0		=			
ANR	1595482	UnaryOperationExpression	* jump_inst ++		1595170	0					
ANR	1595483	UnaryOperator	*		1595170	0					
ANR	1595484	PostIncDecOperationExpression	jump_inst ++		1595170	1					
ANR	1595485	Identifier	jump_inst		1595170	0					
ANR	1595486	IncDec	++		1595170	1					
ANR	1595487	InclusiveOrExpression	IT | ( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8		1595170	1		|			
ANR	1595488	Identifier	IT		1595170	0					
ANR	1595489	InclusiveOrExpression	( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8		1595170	1		|			
ANR	1595490	BitAndExpression	( jump -> flags >> 4 ) & 0xf0		1595170	0		&			
ANR	1595491	ShiftExpression	jump -> flags >> 4		1595170	0		>>			
ANR	1595492	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595493	Identifier	jump		1595170	0					
ANR	1595494	Identifier	flags		1595170	1					
ANR	1595495	PrimaryExpression	4		1595170	1					
ANR	1595496	PrimaryExpression	0xf0		1595170	1					
ANR	1595497	PrimaryExpression	0x8		1595170	1					
ANR	1595498	ExpressionStatement	diff --	314:2:9920:9926	1595170	12	True				
ANR	1595499	PostIncDecOperationExpression	diff --		1595170	0					
ANR	1595500	Identifier	diff		1595170	0					
ANR	1595501	IncDec	--		1595170	1					
ANR	1595502	ExpressionStatement	type = 5	315:2:9930:9938	1595170	13	True				
ANR	1595503	AssignmentExpression	type = 5		1595170	0		=			
ANR	1595504	Identifier	type		1595170	0					
ANR	1595505	PrimaryExpression	5		1595170	1					
ANR	1595506	BreakStatement	break ;	316:2:9942:9947	1595170	14	True				
ANR	1595507	Label	case 4 :	317:1:9950:9956	1595170	15	True				
ANR	1595508	ExpressionStatement	SLJIT_ASSERT ( diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND ) )	319:2:9999:10070	1595170	16	True				
ANR	1595509	CallExpression	SLJIT_ASSERT ( diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND ) )		1595170	0					
ANR	1595510	Callee	SLJIT_ASSERT		1595170	0					
ANR	1595511	Identifier	SLJIT_ASSERT		1595170	0					
ANR	1595512	ArgumentList	diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND )		1595170	1					
ANR	1595513	Argument	diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND )		1595170	0					
ANR	1595514	AndExpression	diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND )		1595170	0		&&			
ANR	1595515	RelationalExpression	diff <= 1023		1595170	0		<=			
ANR	1595516	Identifier	diff		1595170	0					
ANR	1595517	PrimaryExpression	1023		1595170	1					
ANR	1595518	AndExpression	diff >= - 1024 && ! ( jump -> flags & IS_COND )		1595170	1		&&			
ANR	1595519	RelationalExpression	diff >= - 1024		1595170	0		>=			
ANR	1595520	Identifier	diff		1595170	0					
ANR	1595521	UnaryOperationExpression	- 1024		1595170	1					
ANR	1595522	UnaryOperator	-		1595170	0					
ANR	1595523	PrimaryExpression	1024		1595170	1					
ANR	1595524	UnaryOperationExpression	! ( jump -> flags & IS_COND )		1595170	1					
ANR	1595525	UnaryOperator	!		1595170	0					
ANR	1595526	BitAndExpression	jump -> flags & IS_COND		1595170	1		&			
ANR	1595527	PtrMemberAccess	jump -> flags		1595170	0					
ANR	1595528	Identifier	jump		1595170	0					
ANR	1595529	Identifier	flags		1595170	1					
ANR	1595530	Identifier	IS_COND		1595170	1					
ANR	1595531	ExpressionStatement	jump_inst [ 0 ] = 0xe000 | ( diff & 0x7ff )	320:2:10074:10112	1595170	17	True				
ANR	1595532	AssignmentExpression	jump_inst [ 0 ] = 0xe000 | ( diff & 0x7ff )		1595170	0		=			
ANR	1595533	ArrayIndexing	jump_inst [ 0 ]		1595170	0					
ANR	1595534	Identifier	jump_inst		1595170	0					
ANR	1595535	PrimaryExpression	0		1595170	1					
ANR	1595536	InclusiveOrExpression	0xe000 | ( diff & 0x7ff )		1595170	1		|			
ANR	1595537	PrimaryExpression	0xe000		1595170	0					
ANR	1595538	BitAndExpression	diff & 0x7ff		1595170	1		&			
ANR	1595539	Identifier	diff		1595170	0					
ANR	1595540	PrimaryExpression	0x7ff		1595170	1					
ANR	1595541	ReturnStatement	return ;	321:2:10116:10122	1595170	18	True				
ANR	1595542	ExpressionStatement	SLJIT_ASSERT ( diff <= 8388607 && diff >= - 8388608 )	324:1:10129:10178	1595170	8	True				
ANR	1595543	CallExpression	SLJIT_ASSERT ( diff <= 8388607 && diff >= - 8388608 )		1595170	0					
ANR	1595544	Callee	SLJIT_ASSERT		1595170	0					
ANR	1595545	Identifier	SLJIT_ASSERT		1595170	0					
ANR	1595546	ArgumentList	diff <= 8388607 && diff >= - 8388608		1595170	1					
ANR	1595547	Argument	diff <= 8388607 && diff >= - 8388608		1595170	0					
ANR	1595548	AndExpression	diff <= 8388607 && diff >= - 8388608		1595170	0		&&			
ANR	1595549	RelationalExpression	diff <= 8388607		1595170	0		<=			
ANR	1595550	Identifier	diff		1595170	0					
ANR	1595551	PrimaryExpression	8388607		1595170	1					
ANR	1595552	RelationalExpression	diff >= - 8388608		1595170	1		>=			
ANR	1595553	Identifier	diff		1595170	0					
ANR	1595554	UnaryOperationExpression	- 8388608		1595170	1					
ANR	1595555	UnaryOperator	-		1595170	0					
ANR	1595556	PrimaryExpression	8388608		1595170	1					
ANR	1595557	ExpressionStatement	s = ( diff >> 23 ) & 0x1	327:1:10235:10257	1595170	9	True				
ANR	1595558	AssignmentExpression	s = ( diff >> 23 ) & 0x1		1595170	0		=			
ANR	1595559	Identifier	s		1595170	0					
ANR	1595560	BitAndExpression	( diff >> 23 ) & 0x1		1595170	1		&			
ANR	1595561	ShiftExpression	diff >> 23		1595170	0		>>			
ANR	1595562	Identifier	diff		1595170	0					
ANR	1595563	PrimaryExpression	23		1595170	1					
ANR	1595564	PrimaryExpression	0x1		1595170	1					
ANR	1595565	ExpressionStatement	j1 = ( ~ ( diff >> 21 ) ^ s ) & 0x1	328:1:10260:10290	1595170	10	True				
ANR	1595566	AssignmentExpression	j1 = ( ~ ( diff >> 21 ) ^ s ) & 0x1		1595170	0		=			
ANR	1595567	Identifier	j1		1595170	0					
ANR	1595568	BitAndExpression	( ~ ( diff >> 21 ) ^ s ) & 0x1		1595170	1		&			
ANR	1595569	ExclusiveOrExpression	~ ( diff >> 21 ) ^ s		1595170	0		^			
ANR	1595570	UnaryOperationExpression	~ ( diff >> 21 )		1595170	0					
ANR	1595571	UnaryOperator	~		1595170	0					
ANR	1595572	ShiftExpression	diff >> 21		1595170	1		>>			
ANR	1595573	Identifier	diff		1595170	0					
ANR	1595574	PrimaryExpression	21		1595170	1					
ANR	1595575	Identifier	s		1595170	1					
ANR	1595576	PrimaryExpression	0x1		1595170	1					
ANR	1595577	ExpressionStatement	j2 = ( ~ ( diff >> 22 ) ^ s ) & 0x1	329:1:10293:10323	1595170	11	True				
ANR	1595578	AssignmentExpression	j2 = ( ~ ( diff >> 22 ) ^ s ) & 0x1		1595170	0		=			
ANR	1595579	Identifier	j2		1595170	0					
ANR	1595580	BitAndExpression	( ~ ( diff >> 22 ) ^ s ) & 0x1		1595170	1		&			
ANR	1595581	ExclusiveOrExpression	~ ( diff >> 22 ) ^ s		1595170	0		^			
ANR	1595582	UnaryOperationExpression	~ ( diff >> 22 )		1595170	0					
ANR	1595583	UnaryOperator	~		1595170	0					
ANR	1595584	ShiftExpression	diff >> 22		1595170	1		>>			
ANR	1595585	Identifier	diff		1595170	0					
ANR	1595586	PrimaryExpression	22		1595170	1					
ANR	1595587	Identifier	s		1595170	1					
ANR	1595588	PrimaryExpression	0x1		1595170	1					
ANR	1595589	ExpressionStatement	"jump_inst [ 0 ] = 0xf000 | ( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"	330:1:10326:10388	1595170	12	True				
ANR	1595590	AssignmentExpression	"jump_inst [ 0 ] = 0xf000 | ( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"		1595170	0		=			
ANR	1595591	ArrayIndexing	jump_inst [ 0 ]		1595170	0					
ANR	1595592	Identifier	jump_inst		1595170	0					
ANR	1595593	PrimaryExpression	0		1595170	1					
ANR	1595594	InclusiveOrExpression	"0xf000 | ( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"		1595170	1		|			
ANR	1595595	PrimaryExpression	0xf000		1595170	0					
ANR	1595596	InclusiveOrExpression	"( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"		1595170	1		|			
ANR	1595597	ShiftExpression	s << 10		1595170	0		<<			
ANR	1595598	Identifier	s		1595170	0					
ANR	1595599	PrimaryExpression	10		1595170	1					
ANR	1595600	CallExpression	"COPY_BITS ( diff , 11 , 0 , 10 )"		1595170	1					
ANR	1595601	Callee	COPY_BITS		1595170	0					
ANR	1595602	Identifier	COPY_BITS		1595170	0					
ANR	1595603	ArgumentList	diff		1595170	1					
ANR	1595604	Argument	diff		1595170	0					
ANR	1595605	Identifier	diff		1595170	0					
ANR	1595606	Argument	11		1595170	1					
ANR	1595607	PrimaryExpression	11		1595170	0					
ANR	1595608	Argument	0		1595170	2					
ANR	1595609	PrimaryExpression	0		1595170	0					
ANR	1595610	Argument	10		1595170	3					
ANR	1595611	PrimaryExpression	10		1595170	0					
ANR	1595612	ExpressionStatement	jump_inst [ 1 ] = ( j1 << 13 ) | ( j2 << 11 ) | ( diff & 0x7ff )	331:1:10391:10446	1595170	13	True				
ANR	1595613	AssignmentExpression	jump_inst [ 1 ] = ( j1 << 13 ) | ( j2 << 11 ) | ( diff & 0x7ff )		1595170	0		=			
ANR	1595614	ArrayIndexing	jump_inst [ 1 ]		1595170	0					
ANR	1595615	Identifier	jump_inst		1595170	0					
ANR	1595616	PrimaryExpression	1		1595170	1					
ANR	1595617	InclusiveOrExpression	( j1 << 13 ) | ( j2 << 11 ) | ( diff & 0x7ff )		1595170	1		|			
ANR	1595618	ShiftExpression	j1 << 13		1595170	0		<<			
ANR	1595619	Identifier	j1		1595170	0					
ANR	1595620	PrimaryExpression	13		1595170	1					
ANR	1595621	InclusiveOrExpression	( j2 << 11 ) | ( diff & 0x7ff )		1595170	1		|			
ANR	1595622	ShiftExpression	j2 << 11		1595170	0		<<			
ANR	1595623	Identifier	j2		1595170	0					
ANR	1595624	PrimaryExpression	11		1595170	1					
ANR	1595625	BitAndExpression	diff & 0x7ff		1595170	1		&			
ANR	1595626	Identifier	diff		1595170	0					
ANR	1595627	PrimaryExpression	0x7ff		1595170	1					
ANR	1595628	IfStatement	if ( type == 5 )		1595170	14					
ANR	1595629	Condition	type == 5	334:5:10492:10500	1595170	0	True				
ANR	1595630	EqualityExpression	type == 5		1595170	0		==			
ANR	1595631	Identifier	type		1595170	0					
ANR	1595632	PrimaryExpression	5		1595170	1					
ANR	1595633	ExpressionStatement	jump_inst [ 1 ] |= 0x9000	335:2:10542:10564	1595170	1	True				
ANR	1595634	AssignmentExpression	jump_inst [ 1 ] |= 0x9000		1595170	0		|=			
ANR	1595635	ArrayIndexing	jump_inst [ 1 ]		1595170	0					
ANR	1595636	Identifier	jump_inst		1595170	0					
ANR	1595637	PrimaryExpression	1		1595170	1					
ANR	1595638	PrimaryExpression	0x9000		1595170	1					
ANR	1595639	ElseStatement	else		1595170	0					
ANR	1595640	IfStatement	if ( type == 6 )		1595170	0					
ANR	1595641	Condition	type == 6	336:10:10576:10584	1595170	0	True				
ANR	1595642	EqualityExpression	type == 6		1595170	0		==			
ANR	1595643	Identifier	type		1595170	0					
ANR	1595644	PrimaryExpression	6		1595170	1					
ANR	1595645	ExpressionStatement	jump_inst [ 1 ] |= 0xd000	337:2:10627:10649	1595170	1	True				
ANR	1595646	AssignmentExpression	jump_inst [ 1 ] |= 0xd000		1595170	0		|=			
ANR	1595647	ArrayIndexing	jump_inst [ 1 ]		1595170	0					
ANR	1595648	Identifier	jump_inst		1595170	0					
ANR	1595649	PrimaryExpression	1		1595170	1					
ANR	1595650	PrimaryExpression	0xd000		1595170	1					
ANR	1595651	ElseStatement	else		1595170	0					
ANR	1595652	ExpressionStatement	SLJIT_ASSERT_STOP ( )	339:2:10659:10678	1595170	0	True				
ANR	1595653	CallExpression	SLJIT_ASSERT_STOP ( )		1595170	0					
ANR	1595654	Callee	SLJIT_ASSERT_STOP		1595170	0					
ANR	1595655	Identifier	SLJIT_ASSERT_STOP		1595170	0					
ANR	1595656	ArgumentList			1595170	1					
ANR	1595657	ReturnType	static SLJIT_INLINE void		1595170	1					
ANR	1595658	Identifier	set_jump_instruction		1595170	2					
ANR	1595659	ParameterList	struct sljit_jump * jump		1595170	3					
ANR	1595660	Parameter	struct sljit_jump * jump	279:46:8694:8716	1595170	0	True				
ANR	1595661	ParameterType	struct sljit_jump *		1595170	0					
ANR	1595662	Identifier	jump		1595170	1					
ANR	1595663	CFGEntryNode	ENTRY		1595170		True				
ANR	1595664	CFGExitNode	EXIT		1595170		True				
ANR	1595665	Symbol	COPY_BITS		1595170						
ANR	1595666	Symbol	* * jump		1595170						
ANR	1595667	Symbol	* jump		1595170						
ANR	1595668	Symbol	* jump_inst		1595170						
ANR	1595669	Symbol	jump -> u		1595170						
ANR	1595670	Symbol	j1		1595170						
ANR	1595671	Symbol	jump -> flags		1595170						
ANR	1595672	Symbol	j2		1595170						
ANR	1595673	Symbol	JUMP_LABEL		1595170						
ANR	1595674	Symbol	JUMP_ADDR		1595170						
ANR	1595675	Symbol	type		1595170						
ANR	1595676	Symbol	* jump_inst ++		1595170						
ANR	1595677	Symbol	jump		1595170						
ANR	1595678	Symbol	jump_inst		1595170						
ANR	1595679	Symbol	diff		1595170						
ANR	1595680	Symbol	jump -> addr		1595170						
ANR	1595681	Symbol	IT		1595170						
ANR	1595682	Symbol	* jump -> u . label		1595170						
ANR	1595683	Symbol	s		1595170						
ANR	1595684	Symbol	* jump -> u		1595170						
ANR	1595685	Symbol	IS_COND		1595170						
ANR	1595686	Symbol	jump -> u . target		1595170						
ANR	1595687	Symbol	jump -> u . label -> addr		1595170						
ANR	1595688	Symbol	jump -> u . label		1595170						
ANR	1595689	Symbol	SLJIT_UNLIKELY		1595170						
ANR	1595690	Function	sljit_generate_code	342:0:10683:12827							
ANR	1595691	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1595690	0					
ANR	1595692	CompoundStatement		343:0:10767:12827	1595690	0					
ANR	1595693	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	344:1:10770:10803	1595690	0	True				
ANR	1595694	IdentifierDecl	* buf		1595690	0					
ANR	1595695	IdentifierDeclType	struct sljit_memory_fragment *		1595690	0					
ANR	1595696	Identifier	buf		1595690	1					
ANR	1595697	IdentifierDeclStatement	sljit_uh * code ;	345:1:10806:10820	1595690	1	True				
ANR	1595698	IdentifierDecl	* code		1595690	0					
ANR	1595699	IdentifierDeclType	sljit_uh *		1595690	0					
ANR	1595700	Identifier	code		1595690	1					
ANR	1595701	IdentifierDeclStatement	sljit_uh * code_ptr ;	346:1:10823:10841	1595690	2	True				
ANR	1595702	IdentifierDecl	* code_ptr		1595690	0					
ANR	1595703	IdentifierDeclType	sljit_uh *		1595690	0					
ANR	1595704	Identifier	code_ptr		1595690	1					
ANR	1595705	IdentifierDeclStatement	sljit_uh * buf_ptr ;	347:1:10844:10861	1595690	3	True				
ANR	1595706	IdentifierDecl	* buf_ptr		1595690	0					
ANR	1595707	IdentifierDeclType	sljit_uh *		1595690	0					
ANR	1595708	Identifier	buf_ptr		1595690	1					
ANR	1595709	IdentifierDeclStatement	sljit_uh * buf_end ;	348:1:10864:10881	1595690	4	True				
ANR	1595710	IdentifierDecl	* buf_end		1595690	0					
ANR	1595711	IdentifierDeclType	sljit_uh *		1595690	0					
ANR	1595712	Identifier	buf_end		1595690	1					
ANR	1595713	IdentifierDeclStatement	sljit_uw half_count ;	349:1:10884:10903	1595690	5	True				
ANR	1595714	IdentifierDecl	half_count		1595690	0					
ANR	1595715	IdentifierDeclType	sljit_uw		1595690	0					
ANR	1595716	Identifier	half_count		1595690	1					
ANR	1595717	IdentifierDeclStatement	struct sljit_label * label ;	351:1:10907:10932	1595690	6	True				
ANR	1595718	IdentifierDecl	* label		1595690	0					
ANR	1595719	IdentifierDeclType	struct sljit_label *		1595690	0					
ANR	1595720	Identifier	label		1595690	1					
ANR	1595721	IdentifierDeclStatement	struct sljit_jump * jump ;	352:1:10935:10958	1595690	7	True				
ANR	1595722	IdentifierDecl	* jump		1595690	0					
ANR	1595723	IdentifierDeclType	struct sljit_jump *		1595690	0					
ANR	1595724	Identifier	jump		1595690	1					
ANR	1595725	IdentifierDeclStatement	struct sljit_const * const_ ;	353:1:10961:10987	1595690	8	True				
ANR	1595726	IdentifierDecl	* const_		1595690	0					
ANR	1595727	IdentifierDeclType	struct sljit_const *		1595690	0					
ANR	1595728	Identifier	const_		1595690	1					
ANR	1595729	ExpressionStatement	CHECK_ERROR_PTR ( )	355:1:10991:11008	1595690	9	True				
ANR	1595730	CallExpression	CHECK_ERROR_PTR ( )		1595690	0					
ANR	1595731	Callee	CHECK_ERROR_PTR		1595690	0					
ANR	1595732	Identifier	CHECK_ERROR_PTR		1595690	0					
ANR	1595733	ArgumentList			1595690	1					
ANR	1595734	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	356:1:11011:11057	1595690	10	True				
ANR	1595735	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1595690	0					
ANR	1595736	Callee	CHECK_PTR		1595690	0					
ANR	1595737	Identifier	CHECK_PTR		1595690	0					
ANR	1595738	ArgumentList	check_sljit_generate_code ( compiler )		1595690	1					
ANR	1595739	Argument	check_sljit_generate_code ( compiler )		1595690	0					
ANR	1595740	CallExpression	check_sljit_generate_code ( compiler )		1595690	0					
ANR	1595741	Callee	check_sljit_generate_code		1595690	0					
ANR	1595742	Identifier	check_sljit_generate_code		1595690	0					
ANR	1595743	ArgumentList	compiler		1595690	1					
ANR	1595744	Argument	compiler		1595690	0					
ANR	1595745	Identifier	compiler		1595690	0					
ANR	1595746	ExpressionStatement	reverse_buf ( compiler )	357:1:11060:11081	1595690	11	True				
ANR	1595747	CallExpression	reverse_buf ( compiler )		1595690	0					
ANR	1595748	Callee	reverse_buf		1595690	0					
ANR	1595749	Identifier	reverse_buf		1595690	0					
ANR	1595750	ArgumentList	compiler		1595690	1					
ANR	1595751	Argument	compiler		1595690	0					
ANR	1595752	Identifier	compiler		1595690	0					
ANR	1595753	ExpressionStatement	code = ( sljit_uh * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )	359:1:11085:11155	1595690	12	True				
ANR	1595754	AssignmentExpression	code = ( sljit_uh * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )		1595690	0		=			
ANR	1595755	Identifier	code		1595690	0					
ANR	1595756	CastExpression	( sljit_uh * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )		1595690	1					
ANR	1595757	CastTarget	sljit_uh *		1595690	0					
ANR	1595758	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )		1595690	1					
ANR	1595759	Callee	SLJIT_MALLOC_EXEC		1595690	0					
ANR	1595760	Identifier	SLJIT_MALLOC_EXEC		1595690	0					
ANR	1595761	ArgumentList	compiler -> size * sizeof ( sljit_uh )		1595690	1					
ANR	1595762	Argument	compiler -> size * sizeof ( sljit_uh )		1595690	0					
ANR	1595763	MultiplicativeExpression	compiler -> size * sizeof ( sljit_uh )		1595690	0		*			
ANR	1595764	PtrMemberAccess	compiler -> size		1595690	0					
ANR	1595765	Identifier	compiler		1595690	0					
ANR	1595766	Identifier	size		1595690	1					
ANR	1595767	SizeofExpression	sizeof ( sljit_uh )		1595690	1					
ANR	1595768	Sizeof	sizeof		1595690	0					
ANR	1595769	SizeofOperand	sljit_uh		1595690	1					
ANR	1595770	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	360:1:11158:11185	1595690	13	True				
ANR	1595771	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1595690	0					
ANR	1595772	Callee	PTR_FAIL_WITH_EXEC_IF		1595690	0					
ANR	1595773	Identifier	PTR_FAIL_WITH_EXEC_IF		1595690	0					
ANR	1595774	ArgumentList	code		1595690	1					
ANR	1595775	Argument	code		1595690	0					
ANR	1595776	Identifier	code		1595690	0					
ANR	1595777	ExpressionStatement	buf = compiler -> buf	361:1:11188:11207	1595690	14	True				
ANR	1595778	AssignmentExpression	buf = compiler -> buf		1595690	0		=			
ANR	1595779	Identifier	buf		1595690	0					
ANR	1595780	PtrMemberAccess	compiler -> buf		1595690	1					
ANR	1595781	Identifier	compiler		1595690	0					
ANR	1595782	Identifier	buf		1595690	1					
ANR	1595783	ExpressionStatement	code_ptr = code	363:1:11211:11226	1595690	15	True				
ANR	1595784	AssignmentExpression	code_ptr = code		1595690	0		=			
ANR	1595785	Identifier	code_ptr		1595690	0					
ANR	1595786	Identifier	code		1595690	1					
ANR	1595787	ExpressionStatement	half_count = 0	364:1:11229:11243	1595690	16	True				
ANR	1595788	AssignmentExpression	half_count = 0		1595690	0		=			
ANR	1595789	Identifier	half_count		1595690	0					
ANR	1595790	PrimaryExpression	0		1595690	1					
ANR	1595791	ExpressionStatement	label = compiler -> labels	365:1:11246:11270	1595690	17	True				
ANR	1595792	AssignmentExpression	label = compiler -> labels		1595690	0		=			
ANR	1595793	Identifier	label		1595690	0					
ANR	1595794	PtrMemberAccess	compiler -> labels		1595690	1					
ANR	1595795	Identifier	compiler		1595690	0					
ANR	1595796	Identifier	labels		1595690	1					
ANR	1595797	ExpressionStatement	jump = compiler -> jumps	366:1:11273:11295	1595690	18	True				
ANR	1595798	AssignmentExpression	jump = compiler -> jumps		1595690	0		=			
ANR	1595799	Identifier	jump		1595690	0					
ANR	1595800	PtrMemberAccess	compiler -> jumps		1595690	1					
ANR	1595801	Identifier	compiler		1595690	0					
ANR	1595802	Identifier	jumps		1595690	1					
ANR	1595803	ExpressionStatement	const_ = compiler -> consts	367:1:11298:11323	1595690	19	True				
ANR	1595804	AssignmentExpression	const_ = compiler -> consts		1595690	0		=			
ANR	1595805	Identifier	const_		1595690	0					
ANR	1595806	PtrMemberAccess	compiler -> consts		1595690	1					
ANR	1595807	Identifier	compiler		1595690	0					
ANR	1595808	Identifier	consts		1595690	1					
ANR	1595809	DoStatement	do		1595690	20					
ANR	1595810	CompoundStatement		27:4:562:562	1595690	0					
ANR	1595811	ExpressionStatement	buf_ptr = ( sljit_uh * ) buf -> memory	370:2:11334:11366	1595690	0	True				
ANR	1595812	AssignmentExpression	buf_ptr = ( sljit_uh * ) buf -> memory		1595690	0		=			
ANR	1595813	Identifier	buf_ptr		1595690	0					
ANR	1595814	CastExpression	( sljit_uh * ) buf -> memory		1595690	1					
ANR	1595815	CastTarget	sljit_uh *		1595690	0					
ANR	1595816	PtrMemberAccess	buf -> memory		1595690	1					
ANR	1595817	Identifier	buf		1595690	0					
ANR	1595818	Identifier	memory		1595690	1					
ANR	1595819	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 1 )	371:2:11370:11411	1595690	1	True				
ANR	1595820	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 1 )		1595690	0		=			
ANR	1595821	Identifier	buf_end		1595690	0					
ANR	1595822	AdditiveExpression	buf_ptr + ( buf -> used_size >> 1 )		1595690	1		+			
ANR	1595823	Identifier	buf_ptr		1595690	0					
ANR	1595824	ShiftExpression	buf -> used_size >> 1		1595690	1		>>			
ANR	1595825	PtrMemberAccess	buf -> used_size		1595690	0					
ANR	1595826	Identifier	buf		1595690	0					
ANR	1595827	Identifier	used_size		1595690	1					
ANR	1595828	PrimaryExpression	1		1595690	1					
ANR	1595829	DoStatement	do		1595690	2					
ANR	1595830	CompoundStatement		30:5:650:650	1595690	0					
ANR	1595831	ExpressionStatement	* code_ptr = * buf_ptr ++	373:3:11423:11445	1595690	0	True				
ANR	1595832	AssignmentExpression	* code_ptr = * buf_ptr ++		1595690	0		=			
ANR	1595833	UnaryOperationExpression	* code_ptr		1595690	0					
ANR	1595834	UnaryOperator	*		1595690	0					
ANR	1595835	Identifier	code_ptr		1595690	1					
ANR	1595836	UnaryOperationExpression	* buf_ptr ++		1595690	1					
ANR	1595837	UnaryOperator	*		1595690	0					
ANR	1595838	PostIncDecOperationExpression	buf_ptr ++		1595690	1					
ANR	1595839	Identifier	buf_ptr		1595690	0					
ANR	1595840	IncDec	++		1595690	1					
ANR	1595841	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= half_count )	375:3:11506:11555	1595690	1	True				
ANR	1595842	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= half_count )		1595690	0					
ANR	1595843	Callee	SLJIT_ASSERT		1595690	0					
ANR	1595844	Identifier	SLJIT_ASSERT		1595690	0					
ANR	1595845	ArgumentList	! label || label -> size >= half_count		1595690	1					
ANR	1595846	Argument	! label || label -> size >= half_count		1595690	0					
ANR	1595847	OrExpression	! label || label -> size >= half_count		1595690	0		||			
ANR	1595848	UnaryOperationExpression	! label		1595690	0					
ANR	1595849	UnaryOperator	!		1595690	0					
ANR	1595850	Identifier	label		1595690	1					
ANR	1595851	RelationalExpression	label -> size >= half_count		1595690	1		>=			
ANR	1595852	PtrMemberAccess	label -> size		1595690	0					
ANR	1595853	Identifier	label		1595690	0					
ANR	1595854	Identifier	size		1595690	1					
ANR	1595855	Identifier	half_count		1595690	1					
ANR	1595856	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= half_count )	376:3:11560:11607	1595690	2	True				
ANR	1595857	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= half_count )		1595690	0					
ANR	1595858	Callee	SLJIT_ASSERT		1595690	0					
ANR	1595859	Identifier	SLJIT_ASSERT		1595690	0					
ANR	1595860	ArgumentList	! jump || jump -> addr >= half_count		1595690	1					
ANR	1595861	Argument	! jump || jump -> addr >= half_count		1595690	0					
ANR	1595862	OrExpression	! jump || jump -> addr >= half_count		1595690	0		||			
ANR	1595863	UnaryOperationExpression	! jump		1595690	0					
ANR	1595864	UnaryOperator	!		1595690	0					
ANR	1595865	Identifier	jump		1595690	1					
ANR	1595866	RelationalExpression	jump -> addr >= half_count		1595690	1		>=			
ANR	1595867	PtrMemberAccess	jump -> addr		1595690	0					
ANR	1595868	Identifier	jump		1595690	0					
ANR	1595869	Identifier	addr		1595690	1					
ANR	1595870	Identifier	half_count		1595690	1					
ANR	1595871	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= half_count )	377:3:11612:11663	1595690	3	True				
ANR	1595872	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= half_count )		1595690	0					
ANR	1595873	Callee	SLJIT_ASSERT		1595690	0					
ANR	1595874	Identifier	SLJIT_ASSERT		1595690	0					
ANR	1595875	ArgumentList	! const_ || const_ -> addr >= half_count		1595690	1					
ANR	1595876	Argument	! const_ || const_ -> addr >= half_count		1595690	0					
ANR	1595877	OrExpression	! const_ || const_ -> addr >= half_count		1595690	0		||			
ANR	1595878	UnaryOperationExpression	! const_		1595690	0					
ANR	1595879	UnaryOperator	!		1595690	0					
ANR	1595880	Identifier	const_		1595690	1					
ANR	1595881	RelationalExpression	const_ -> addr >= half_count		1595690	1		>=			
ANR	1595882	PtrMemberAccess	const_ -> addr		1595690	0					
ANR	1595883	Identifier	const_		1595690	0					
ANR	1595884	Identifier	addr		1595690	1					
ANR	1595885	Identifier	half_count		1595690	1					
ANR	1595886	IfStatement	if ( label && label -> size == half_count )		1595690	4					
ANR	1595887	Condition	label && label -> size == half_count	378:7:11672:11705	1595690	0	True				
ANR	1595888	AndExpression	label && label -> size == half_count		1595690	0		&&			
ANR	1595889	Identifier	label		1595690	0					
ANR	1595890	EqualityExpression	label -> size == half_count		1595690	1		==			
ANR	1595891	PtrMemberAccess	label -> size		1595690	0					
ANR	1595892	Identifier	label		1595690	0					
ANR	1595893	Identifier	size		1595690	1					
ANR	1595894	Identifier	half_count		1595690	1					
ANR	1595895	CompoundStatement		36:43:940:940	1595690	1					
ANR	1595896	ExpressionStatement	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1	379:4:11714:11754	1595690	0	True				
ANR	1595897	AssignmentExpression	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1		1595690	0		=			
ANR	1595898	PtrMemberAccess	label -> addr		1595690	0					
ANR	1595899	Identifier	label		1595690	0					
ANR	1595900	Identifier	addr		1595690	1					
ANR	1595901	InclusiveOrExpression	( ( sljit_uw ) code_ptr ) | 0x1		1595690	1		|			
ANR	1595902	CastExpression	( sljit_uw ) code_ptr		1595690	0					
ANR	1595903	CastTarget	sljit_uw		1595690	0					
ANR	1595904	Identifier	code_ptr		1595690	1					
ANR	1595905	PrimaryExpression	0x1		1595690	1					
ANR	1595906	ExpressionStatement	label -> size = code_ptr - code	380:4:11760:11789	1595690	1	True				
ANR	1595907	AssignmentExpression	label -> size = code_ptr - code		1595690	0		=			
ANR	1595908	PtrMemberAccess	label -> size		1595690	0					
ANR	1595909	Identifier	label		1595690	0					
ANR	1595910	Identifier	size		1595690	1					
ANR	1595911	AdditiveExpression	code_ptr - code		1595690	1		-			
ANR	1595912	Identifier	code_ptr		1595690	0					
ANR	1595913	Identifier	code		1595690	1					
ANR	1595914	ExpressionStatement	label = label -> next	381:4:11795:11814	1595690	2	True				
ANR	1595915	AssignmentExpression	label = label -> next		1595690	0		=			
ANR	1595916	Identifier	label		1595690	0					
ANR	1595917	PtrMemberAccess	label -> next		1595690	1					
ANR	1595918	Identifier	label		1595690	0					
ANR	1595919	Identifier	next		1595690	1					
ANR	1595920	IfStatement	if ( jump && jump -> addr == half_count )		1595690	5					
ANR	1595921	Condition	jump && jump -> addr == half_count	383:7:11828:11859	1595690	0	True				
ANR	1595922	AndExpression	jump && jump -> addr == half_count		1595690	0		&&			
ANR	1595923	Identifier	jump		1595690	0					
ANR	1595924	EqualityExpression	jump -> addr == half_count		1595690	1		==			
ANR	1595925	PtrMemberAccess	jump -> addr		1595690	0					
ANR	1595926	Identifier	jump		1595690	0					
ANR	1595927	Identifier	addr		1595690	1					
ANR	1595928	Identifier	half_count		1595690	1					
ANR	1595929	CompoundStatement		41:41:1094:1094	1595690	1					
ANR	1595930	ExpressionStatement	jump -> addr = ( sljit_uw ) code_ptr - ( ( jump -> flags & IS_COND ) ? 10 : 8 )	384:5:11869:11937	1595690	0	True				
ANR	1595931	AssignmentExpression	jump -> addr = ( sljit_uw ) code_ptr - ( ( jump -> flags & IS_COND ) ? 10 : 8 )		1595690	0		=			
ANR	1595932	PtrMemberAccess	jump -> addr		1595690	0					
ANR	1595933	Identifier	jump		1595690	0					
ANR	1595934	Identifier	addr		1595690	1					
ANR	1595935	AdditiveExpression	( sljit_uw ) code_ptr - ( ( jump -> flags & IS_COND ) ? 10 : 8 )		1595690	1		-			
ANR	1595936	CastExpression	( sljit_uw ) code_ptr		1595690	0					
ANR	1595937	CastTarget	sljit_uw		1595690	0					
ANR	1595938	Identifier	code_ptr		1595690	1					
ANR	1595939	ConditionalExpression	( jump -> flags & IS_COND ) ? 10 : 8		1595690	1					
ANR	1595940	Condition	jump -> flags & IS_COND		1595690	0					
ANR	1595941	BitAndExpression	jump -> flags & IS_COND		1595690	0		&			
ANR	1595942	PtrMemberAccess	jump -> flags		1595690	0					
ANR	1595943	Identifier	jump		1595690	0					
ANR	1595944	Identifier	flags		1595690	1					
ANR	1595945	Identifier	IS_COND		1595690	1					
ANR	1595946	PrimaryExpression	10		1595690	1					
ANR	1595947	PrimaryExpression	8		1595690	2					
ANR	1595948	ExpressionStatement	"code_ptr -= detect_jump_type ( jump , code_ptr , code )"	385:5:11944:11994	1595690	1	True				
ANR	1595949	AssignmentExpression	"code_ptr -= detect_jump_type ( jump , code_ptr , code )"		1595690	0		-=			
ANR	1595950	Identifier	code_ptr		1595690	0					
ANR	1595951	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1595690	1					
ANR	1595952	Callee	detect_jump_type		1595690	0					
ANR	1595953	Identifier	detect_jump_type		1595690	0					
ANR	1595954	ArgumentList	jump		1595690	1					
ANR	1595955	Argument	jump		1595690	0					
ANR	1595956	Identifier	jump		1595690	0					
ANR	1595957	Argument	code_ptr		1595690	1					
ANR	1595958	Identifier	code_ptr		1595690	0					
ANR	1595959	Argument	code		1595690	2					
ANR	1595960	Identifier	code		1595690	0					
ANR	1595961	ExpressionStatement	jump = jump -> next	386:5:12001:12018	1595690	2	True				
ANR	1595962	AssignmentExpression	jump = jump -> next		1595690	0		=			
ANR	1595963	Identifier	jump		1595690	0					
ANR	1595964	PtrMemberAccess	jump -> next		1595690	1					
ANR	1595965	Identifier	jump		1595690	0					
ANR	1595966	Identifier	next		1595690	1					
ANR	1595967	IfStatement	if ( const_ && const_ -> addr == half_count )		1595690	6					
ANR	1595968	Condition	const_ && const_ -> addr == half_count	388:7:12032:12067	1595690	0	True				
ANR	1595969	AndExpression	const_ && const_ -> addr == half_count		1595690	0		&&			
ANR	1595970	Identifier	const_		1595690	0					
ANR	1595971	EqualityExpression	const_ -> addr == half_count		1595690	1		==			
ANR	1595972	PtrMemberAccess	const_ -> addr		1595690	0					
ANR	1595973	Identifier	const_		1595690	0					
ANR	1595974	Identifier	addr		1595690	1					
ANR	1595975	Identifier	half_count		1595690	1					
ANR	1595976	CompoundStatement		46:45:1302:1302	1595690	1					
ANR	1595977	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	389:4:12076:12109	1595690	0	True				
ANR	1595978	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1595690	0		=			
ANR	1595979	PtrMemberAccess	const_ -> addr		1595690	0					
ANR	1595980	Identifier	const_		1595690	0					
ANR	1595981	Identifier	addr		1595690	1					
ANR	1595982	CastExpression	( sljit_uw ) code_ptr		1595690	1					
ANR	1595983	CastTarget	sljit_uw		1595690	0					
ANR	1595984	Identifier	code_ptr		1595690	1					
ANR	1595985	ExpressionStatement	const_ = const_ -> next	390:4:12115:12136	1595690	1	True				
ANR	1595986	AssignmentExpression	const_ = const_ -> next		1595690	0		=			
ANR	1595987	Identifier	const_		1595690	0					
ANR	1595988	PtrMemberAccess	const_ -> next		1595690	1					
ANR	1595989	Identifier	const_		1595690	0					
ANR	1595990	Identifier	next		1595690	1					
ANR	1595991	ExpressionStatement	code_ptr ++	392:3:12146:12157	1595690	7	True				
ANR	1595992	PostIncDecOperationExpression	code_ptr ++		1595690	0					
ANR	1595993	Identifier	code_ptr		1595690	0					
ANR	1595994	IncDec	++		1595690	1					
ANR	1595995	ExpressionStatement	half_count ++	393:3:12162:12175	1595690	8	True				
ANR	1595996	PostIncDecOperationExpression	half_count ++		1595690	0					
ANR	1595997	Identifier	half_count		1595690	0					
ANR	1595998	IncDec	++		1595690	1					
ANR	1595999	Condition	buf_ptr < buf_end	394:11:12188:12204	1595690	1	True				
ANR	1596000	RelationalExpression	buf_ptr < buf_end		1595690	0		<			
ANR	1596001	Identifier	buf_ptr		1595690	0					
ANR	1596002	Identifier	buf_end		1595690	1					
ANR	1596003	ExpressionStatement	buf = buf -> next	396:2:12211:12226	1595690	3	True				
ANR	1596004	AssignmentExpression	buf = buf -> next		1595690	0		=			
ANR	1596005	Identifier	buf		1595690	0					
ANR	1596006	PtrMemberAccess	buf -> next		1595690	1					
ANR	1596007	Identifier	buf		1595690	0					
ANR	1596008	Identifier	next		1595690	1					
ANR	1596009	Condition	buf	397:10:12238:12240	1595690	1	True				
ANR	1596010	Identifier	buf		1595690	0					
ANR	1596011	IfStatement	if ( label && label -> size == half_count )		1595690	21					
ANR	1596012	Condition	label && label -> size == half_count	399:5:12250:12283	1595690	0	True				
ANR	1596013	AndExpression	label && label -> size == half_count		1595690	0		&&			
ANR	1596014	Identifier	label		1595690	0					
ANR	1596015	EqualityExpression	label -> size == half_count		1595690	1		==			
ANR	1596016	PtrMemberAccess	label -> size		1595690	0					
ANR	1596017	Identifier	label		1595690	0					
ANR	1596018	Identifier	size		1595690	1					
ANR	1596019	Identifier	half_count		1595690	1					
ANR	1596020	CompoundStatement		57:41:1518:1518	1595690	1					
ANR	1596021	ExpressionStatement	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1	400:2:12290:12330	1595690	0	True				
ANR	1596022	AssignmentExpression	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1		1595690	0		=			
ANR	1596023	PtrMemberAccess	label -> addr		1595690	0					
ANR	1596024	Identifier	label		1595690	0					
ANR	1596025	Identifier	addr		1595690	1					
ANR	1596026	InclusiveOrExpression	( ( sljit_uw ) code_ptr ) | 0x1		1595690	1		|			
ANR	1596027	CastExpression	( sljit_uw ) code_ptr		1595690	0					
ANR	1596028	CastTarget	sljit_uw		1595690	0					
ANR	1596029	Identifier	code_ptr		1595690	1					
ANR	1596030	PrimaryExpression	0x1		1595690	1					
ANR	1596031	ExpressionStatement	label -> size = code_ptr - code	401:2:12334:12363	1595690	1	True				
ANR	1596032	AssignmentExpression	label -> size = code_ptr - code		1595690	0		=			
ANR	1596033	PtrMemberAccess	label -> size		1595690	0					
ANR	1596034	Identifier	label		1595690	0					
ANR	1596035	Identifier	size		1595690	1					
ANR	1596036	AdditiveExpression	code_ptr - code		1595690	1		-			
ANR	1596037	Identifier	code_ptr		1595690	0					
ANR	1596038	Identifier	code		1595690	1					
ANR	1596039	ExpressionStatement	label = label -> next	402:2:12367:12386	1595690	2	True				
ANR	1596040	AssignmentExpression	label = label -> next		1595690	0		=			
ANR	1596041	Identifier	label		1595690	0					
ANR	1596042	PtrMemberAccess	label -> next		1595690	1					
ANR	1596043	Identifier	label		1595690	0					
ANR	1596044	Identifier	next		1595690	1					
ANR	1596045	ExpressionStatement	SLJIT_ASSERT ( ! label )	405:1:12393:12413	1595690	22	True				
ANR	1596046	CallExpression	SLJIT_ASSERT ( ! label )		1595690	0					
ANR	1596047	Callee	SLJIT_ASSERT		1595690	0					
ANR	1596048	Identifier	SLJIT_ASSERT		1595690	0					
ANR	1596049	ArgumentList	! label		1595690	1					
ANR	1596050	Argument	! label		1595690	0					
ANR	1596051	UnaryOperationExpression	! label		1595690	0					
ANR	1596052	UnaryOperator	!		1595690	0					
ANR	1596053	Identifier	label		1595690	1					
ANR	1596054	ExpressionStatement	SLJIT_ASSERT ( ! jump )	406:1:12416:12435	1595690	23	True				
ANR	1596055	CallExpression	SLJIT_ASSERT ( ! jump )		1595690	0					
ANR	1596056	Callee	SLJIT_ASSERT		1595690	0					
ANR	1596057	Identifier	SLJIT_ASSERT		1595690	0					
ANR	1596058	ArgumentList	! jump		1595690	1					
ANR	1596059	Argument	! jump		1595690	0					
ANR	1596060	UnaryOperationExpression	! jump		1595690	0					
ANR	1596061	UnaryOperator	!		1595690	0					
ANR	1596062	Identifier	jump		1595690	1					
ANR	1596063	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	407:1:12438:12459	1595690	24	True				
ANR	1596064	CallExpression	SLJIT_ASSERT ( ! const_ )		1595690	0					
ANR	1596065	Callee	SLJIT_ASSERT		1595690	0					
ANR	1596066	Identifier	SLJIT_ASSERT		1595690	0					
ANR	1596067	ArgumentList	! const_		1595690	1					
ANR	1596068	Argument	! const_		1595690	0					
ANR	1596069	UnaryOperationExpression	! const_		1595690	0					
ANR	1596070	UnaryOperator	!		1595690	0					
ANR	1596071	Identifier	const_		1595690	1					
ANR	1596072	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )	408:1:12462:12519	1595690	25	True				
ANR	1596073	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )		1595690	0					
ANR	1596074	Callee	SLJIT_ASSERT		1595690	0					
ANR	1596075	Identifier	SLJIT_ASSERT		1595690	0					
ANR	1596076	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size		1595690	1					
ANR	1596077	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size		1595690	0					
ANR	1596078	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size		1595690	0		<=			
ANR	1596079	AdditiveExpression	code_ptr - code		1595690	0		-			
ANR	1596080	Identifier	code_ptr		1595690	0					
ANR	1596081	Identifier	code		1595690	1					
ANR	1596082	CastExpression	( sljit_sw ) compiler -> size		1595690	1					
ANR	1596083	CastTarget	sljit_sw		1595690	0					
ANR	1596084	PtrMemberAccess	compiler -> size		1595690	1					
ANR	1596085	Identifier	compiler		1595690	0					
ANR	1596086	Identifier	size		1595690	1					
ANR	1596087	ExpressionStatement	jump = compiler -> jumps	410:1:12523:12545	1595690	26	True				
ANR	1596088	AssignmentExpression	jump = compiler -> jumps		1595690	0		=			
ANR	1596089	Identifier	jump		1595690	0					
ANR	1596090	PtrMemberAccess	compiler -> jumps		1595690	1					
ANR	1596091	Identifier	compiler		1595690	0					
ANR	1596092	Identifier	jumps		1595690	1					
ANR	1596093	WhileStatement	while ( jump )		1595690	27					
ANR	1596094	Condition	jump	411:8:12555:12558	1595690	0	True				
ANR	1596095	Identifier	jump		1595690	0					
ANR	1596096	CompoundStatement		69:14:1793:1793	1595690	1					
ANR	1596097	ExpressionStatement	set_jump_instruction ( jump )	412:2:12565:12591	1595690	0	True				
ANR	1596098	CallExpression	set_jump_instruction ( jump )		1595690	0					
ANR	1596099	Callee	set_jump_instruction		1595690	0					
ANR	1596100	Identifier	set_jump_instruction		1595690	0					
ANR	1596101	ArgumentList	jump		1595690	1					
ANR	1596102	Argument	jump		1595690	0					
ANR	1596103	Identifier	jump		1595690	0					
ANR	1596104	ExpressionStatement	jump = jump -> next	413:2:12595:12612	1595690	1	True				
ANR	1596105	AssignmentExpression	jump = jump -> next		1595690	0		=			
ANR	1596106	Identifier	jump		1595690	0					
ANR	1596107	PtrMemberAccess	jump -> next		1595690	1					
ANR	1596108	Identifier	jump		1595690	0					
ANR	1596109	Identifier	next		1595690	1					
ANR	1596110	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	416:1:12619:12655	1595690	28	True				
ANR	1596111	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1595690	0		=			
ANR	1596112	PtrMemberAccess	compiler -> error		1595690	0					
ANR	1596113	Identifier	compiler		1595690	0					
ANR	1596114	Identifier	error		1595690	1					
ANR	1596115	Identifier	SLJIT_ERR_COMPILED		1595690	1					
ANR	1596116	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_uh )	417:1:12658:12722	1595690	29	True				
ANR	1596117	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_uh )		1595690	0		=			
ANR	1596118	PtrMemberAccess	compiler -> executable_size		1595690	0					
ANR	1596119	Identifier	compiler		1595690	0					
ANR	1596120	Identifier	executable_size		1595690	1					
ANR	1596121	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_uh )		1595690	1		*			
ANR	1596122	AdditiveExpression	code_ptr - code		1595690	0		-			
ANR	1596123	Identifier	code_ptr		1595690	0					
ANR	1596124	Identifier	code		1595690	1					
ANR	1596125	SizeofExpression	sizeof ( sljit_uh )		1595690	1					
ANR	1596126	Sizeof	sizeof		1595690	0					
ANR	1596127	SizeofOperand	sljit_uh		1595690	1					
ANR	1596128	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	418:1:12725:12758	1595690	30	True				
ANR	1596129	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1595690	0					
ANR	1596130	Callee	SLJIT_CACHE_FLUSH		1595690	0					
ANR	1596131	Identifier	SLJIT_CACHE_FLUSH		1595690	0					
ANR	1596132	ArgumentList	code		1595690	1					
ANR	1596133	Argument	code		1595690	0					
ANR	1596134	Identifier	code		1595690	0					
ANR	1596135	Argument	code_ptr		1595690	1					
ANR	1596136	Identifier	code_ptr		1595690	0					
ANR	1596137	ReturnStatement	return ( void * ) ( ( sljit_uw ) code | 0x1 ) ;	420:1:12789:12825	1595690	31	True				
ANR	1596138	CastExpression	( void * ) ( ( sljit_uw ) code | 0x1 )		1595690	0					
ANR	1596139	CastTarget	void *		1595690	0					
ANR	1596140	InclusiveOrExpression	( sljit_uw ) code | 0x1		1595690	1		|			
ANR	1596141	CastExpression	( sljit_uw ) code		1595690	0					
ANR	1596142	CastTarget	sljit_uw		1595690	0					
ANR	1596143	Identifier	code		1595690	1					
ANR	1596144	PrimaryExpression	0x1		1595690	1					
ANR	1596145	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1595690	1					
ANR	1596146	Identifier	sljit_generate_code		1595690	2					
ANR	1596147	ParameterList	struct sljit_compiler * compiler		1595690	3					
ANR	1596148	Parameter	struct sljit_compiler * compiler	342:51:10734:10764	1595690	0	True				
ANR	1596149	ParameterType	struct sljit_compiler *		1595690	0					
ANR	1596150	Identifier	compiler		1595690	1					
ANR	1596151	CFGEntryNode	ENTRY		1595690		True				
ANR	1596152	CFGExitNode	EXIT		1595690		True				
ANR	1596153	Symbol	half_count		1595690						
ANR	1596154	Symbol	label -> addr		1595690						
ANR	1596155	Symbol	code		1595690						
ANR	1596156	Symbol	* jump		1595690						
ANR	1596157	Symbol	compiler -> buf		1595690						
ANR	1596158	Symbol	jump -> flags		1595690						
ANR	1596159	Symbol	SLJIT_MALLOC_EXEC		1595690						
ANR	1596160	Symbol	label -> next		1595690						
ANR	1596161	Symbol	* compiler		1595690						
ANR	1596162	Symbol	const_ -> next		1595690						
ANR	1596163	Symbol	const_ -> addr		1595690						
ANR	1596164	Symbol	code_ptr		1595690						
ANR	1596165	Symbol	buf -> next		1595690						
ANR	1596166	Symbol	compiler		1595690						
ANR	1596167	Symbol	buf_end		1595690						
ANR	1596168	Symbol	compiler -> executable_size		1595690						
ANR	1596169	Symbol	jump		1595690						
ANR	1596170	Symbol	buf -> used_size		1595690						
ANR	1596171	Symbol	check_sljit_generate_code		1595690						
ANR	1596172	Symbol	* buf		1595690						
ANR	1596173	Symbol	const_		1595690						
ANR	1596174	Symbol	compiler -> labels		1595690						
ANR	1596175	Symbol	compiler -> consts		1595690						
ANR	1596176	Symbol	buf -> memory		1595690						
ANR	1596177	Symbol	detect_jump_type		1595690						
ANR	1596178	Symbol	* buf_ptr ++		1595690						
ANR	1596179	Symbol	jump -> addr		1595690						
ANR	1596180	Symbol	* const_		1595690						
ANR	1596181	Symbol	label		1595690						
ANR	1596182	Symbol	buf_ptr		1595690						
ANR	1596183	Symbol	* code_ptr		1595690						
ANR	1596184	Symbol	buf		1595690						
ANR	1596185	Symbol	compiler -> size		1595690						
ANR	1596186	Symbol	IS_COND		1595690						
ANR	1596187	Symbol	compiler -> jumps		1595690						
ANR	1596188	Symbol	label -> size		1595690						
ANR	1596189	Symbol	jump -> next		1595690						
ANR	1596190	Symbol	compiler -> error		1595690						
ANR	1596191	Symbol	SLJIT_ERR_COMPILED		1595690						
ANR	1596192	Symbol	* label		1595690						
ANR	1596193	Function	get_imm	428:0:13090:14122							
ANR	1596194	FunctionDef	get_imm (sljit_uw imm)		1596193	0					
ANR	1596195	CompoundStatement		429:0:13128:14122	1596193	0					
ANR	1596196	IdentifierDeclStatement	sljit_si counter ;	431:1:13160:13176	1596193	0	True				
ANR	1596197	IdentifierDecl	counter		1596193	0					
ANR	1596198	IdentifierDeclType	sljit_si		1596193	0					
ANR	1596199	Identifier	counter		1596193	1					
ANR	1596200	IfStatement	if ( imm <= 0xff )		1596193	1					
ANR	1596201	Condition	imm <= 0xff	433:5:13184:13194	1596193	0	True				
ANR	1596202	RelationalExpression	imm <= 0xff		1596193	0		<=			
ANR	1596203	Identifier	imm		1596193	0					
ANR	1596204	PrimaryExpression	0xff		1596193	1					
ANR	1596205	ReturnStatement	return imm ;	434:2:13199:13209	1596193	1	True				
ANR	1596206	Identifier	imm		1596193	0					
ANR	1596207	IfStatement	if ( ( imm & 0xffff ) == ( imm >> 16 ) )		1596193	2					
ANR	1596208	Condition	( imm & 0xffff ) == ( imm >> 16 )	436:5:13217:13245	1596193	0	True				
ANR	1596209	EqualityExpression	( imm & 0xffff ) == ( imm >> 16 )		1596193	0		==			
ANR	1596210	BitAndExpression	imm & 0xffff		1596193	0		&			
ANR	1596211	Identifier	imm		1596193	0					
ANR	1596212	PrimaryExpression	0xffff		1596193	1					
ANR	1596213	ShiftExpression	imm >> 16		1596193	1		>>			
ANR	1596214	Identifier	imm		1596193	0					
ANR	1596215	PrimaryExpression	16		1596193	1					
ANR	1596216	CompoundStatement		8:36:119:119	1596193	1					
ANR	1596217	IfStatement	if ( ! ( imm & 0xff00 ) )		1596193	0					
ANR	1596218	Condition	! ( imm & 0xff00 )	438:6:13284:13298	1596193	0	True				
ANR	1596219	UnaryOperationExpression	! ( imm & 0xff00 )		1596193	0					
ANR	1596220	UnaryOperator	!		1596193	0					
ANR	1596221	BitAndExpression	imm & 0xff00		1596193	1		&			
ANR	1596222	Identifier	imm		1596193	0					
ANR	1596223	PrimaryExpression	0xff00		1596193	1					
ANR	1596224	ReturnStatement	return ( 1 << 12 ) | ( imm & 0xff ) ;	439:3:13304:13335	1596193	1	True				
ANR	1596225	InclusiveOrExpression	( 1 << 12 ) | ( imm & 0xff )		1596193	0		|			
ANR	1596226	ShiftExpression	1 << 12		1596193	0		<<			
ANR	1596227	PrimaryExpression	1		1596193	0					
ANR	1596228	PrimaryExpression	12		1596193	1					
ANR	1596229	BitAndExpression	imm & 0xff		1596193	1		&			
ANR	1596230	Identifier	imm		1596193	0					
ANR	1596231	PrimaryExpression	0xff		1596193	1					
ANR	1596232	IfStatement	if ( ! ( imm & 0xff ) )		1596193	1					
ANR	1596233	Condition	! ( imm & 0xff )	440:6:13343:13355	1596193	0	True				
ANR	1596234	UnaryOperationExpression	! ( imm & 0xff )		1596193	0					
ANR	1596235	UnaryOperator	!		1596193	0					
ANR	1596236	BitAndExpression	imm & 0xff		1596193	1		&			
ANR	1596237	Identifier	imm		1596193	0					
ANR	1596238	PrimaryExpression	0xff		1596193	1					
ANR	1596239	ReturnStatement	return ( 2 << 12 ) | ( ( imm >> 8 ) & 0xff ) ;	441:3:13361:13399	1596193	1	True				
ANR	1596240	InclusiveOrExpression	( 2 << 12 ) | ( ( imm >> 8 ) & 0xff )		1596193	0		|			
ANR	1596241	ShiftExpression	2 << 12		1596193	0		<<			
ANR	1596242	PrimaryExpression	2		1596193	0					
ANR	1596243	PrimaryExpression	12		1596193	1					
ANR	1596244	BitAndExpression	( imm >> 8 ) & 0xff		1596193	1		&			
ANR	1596245	ShiftExpression	imm >> 8		1596193	0		>>			
ANR	1596246	Identifier	imm		1596193	0					
ANR	1596247	PrimaryExpression	8		1596193	1					
ANR	1596248	PrimaryExpression	0xff		1596193	1					
ANR	1596249	IfStatement	if ( ( imm & 0xff00 ) == ( ( imm & 0xff ) << 8 ) )		1596193	2					
ANR	1596250	Condition	( imm & 0xff00 ) == ( ( imm & 0xff ) << 8 )	442:6:13407:13443	1596193	0	True				
ANR	1596251	EqualityExpression	( imm & 0xff00 ) == ( ( imm & 0xff ) << 8 )		1596193	0		==			
ANR	1596252	BitAndExpression	imm & 0xff00		1596193	0		&			
ANR	1596253	Identifier	imm		1596193	0					
ANR	1596254	PrimaryExpression	0xff00		1596193	1					
ANR	1596255	ShiftExpression	( imm & 0xff ) << 8		1596193	1		<<			
ANR	1596256	BitAndExpression	imm & 0xff		1596193	0		&			
ANR	1596257	Identifier	imm		1596193	0					
ANR	1596258	PrimaryExpression	0xff		1596193	1					
ANR	1596259	PrimaryExpression	8		1596193	1					
ANR	1596260	ReturnStatement	return ( 3 << 12 ) | ( imm & 0xff ) ;	443:3:13449:13480	1596193	1	True				
ANR	1596261	InclusiveOrExpression	( 3 << 12 ) | ( imm & 0xff )		1596193	0		|			
ANR	1596262	ShiftExpression	3 << 12		1596193	0		<<			
ANR	1596263	PrimaryExpression	3		1596193	0					
ANR	1596264	PrimaryExpression	12		1596193	1					
ANR	1596265	BitAndExpression	imm & 0xff		1596193	1		&			
ANR	1596266	Identifier	imm		1596193	0					
ANR	1596267	PrimaryExpression	0xff		1596193	1					
ANR	1596268	ExpressionStatement	counter = 8	447:1:13539:13550	1596193	3	True				
ANR	1596269	AssignmentExpression	counter = 8		1596193	0		=			
ANR	1596270	Identifier	counter		1596193	0					
ANR	1596271	PrimaryExpression	8		1596193	1					
ANR	1596272	IfStatement	if ( ! ( imm & 0xffff0000 ) )		1596193	4					
ANR	1596273	Condition	! ( imm & 0xffff0000 )	448:5:13557:13575	1596193	0	True				
ANR	1596274	UnaryOperationExpression	! ( imm & 0xffff0000 )		1596193	0					
ANR	1596275	UnaryOperator	!		1596193	0					
ANR	1596276	BitAndExpression	imm & 0xffff0000		1596193	1		&			
ANR	1596277	Identifier	imm		1596193	0					
ANR	1596278	PrimaryExpression	0xffff0000		1596193	1					
ANR	1596279	CompoundStatement		20:26:449:449	1596193	1					
ANR	1596280	ExpressionStatement	counter += 16	449:2:13582:13595	1596193	0	True				
ANR	1596281	AssignmentExpression	counter += 16		1596193	0		+=			
ANR	1596282	Identifier	counter		1596193	0					
ANR	1596283	PrimaryExpression	16		1596193	1					
ANR	1596284	ExpressionStatement	imm <<= 16	450:2:13599:13609	1596193	1	True				
ANR	1596285	AssignmentExpression	imm <<= 16		1596193	0		<<=			
ANR	1596286	Identifier	imm		1596193	0					
ANR	1596287	PrimaryExpression	16		1596193	1					
ANR	1596288	IfStatement	if ( ! ( imm & 0xff000000 ) )		1596193	5					
ANR	1596289	Condition	! ( imm & 0xff000000 )	452:5:13619:13637	1596193	0	True				
ANR	1596290	UnaryOperationExpression	! ( imm & 0xff000000 )		1596193	0					
ANR	1596291	UnaryOperator	!		1596193	0					
ANR	1596292	BitAndExpression	imm & 0xff000000		1596193	1		&			
ANR	1596293	Identifier	imm		1596193	0					
ANR	1596294	PrimaryExpression	0xff000000		1596193	1					
ANR	1596295	CompoundStatement		24:26:511:511	1596193	1					
ANR	1596296	ExpressionStatement	counter += 8	453:2:13644:13656	1596193	0	True				
ANR	1596297	AssignmentExpression	counter += 8		1596193	0		+=			
ANR	1596298	Identifier	counter		1596193	0					
ANR	1596299	PrimaryExpression	8		1596193	1					
ANR	1596300	ExpressionStatement	imm <<= 8	454:2:13660:13669	1596193	1	True				
ANR	1596301	AssignmentExpression	imm <<= 8		1596193	0		<<=			
ANR	1596302	Identifier	imm		1596193	0					
ANR	1596303	PrimaryExpression	8		1596193	1					
ANR	1596304	IfStatement	if ( ! ( imm & 0xf0000000 ) )		1596193	6					
ANR	1596305	Condition	! ( imm & 0xf0000000 )	456:5:13679:13697	1596193	0	True				
ANR	1596306	UnaryOperationExpression	! ( imm & 0xf0000000 )		1596193	0					
ANR	1596307	UnaryOperator	!		1596193	0					
ANR	1596308	BitAndExpression	imm & 0xf0000000		1596193	1		&			
ANR	1596309	Identifier	imm		1596193	0					
ANR	1596310	PrimaryExpression	0xf0000000		1596193	1					
ANR	1596311	CompoundStatement		28:26:571:571	1596193	1					
ANR	1596312	ExpressionStatement	counter += 4	457:2:13704:13716	1596193	0	True				
ANR	1596313	AssignmentExpression	counter += 4		1596193	0		+=			
ANR	1596314	Identifier	counter		1596193	0					
ANR	1596315	PrimaryExpression	4		1596193	1					
ANR	1596316	ExpressionStatement	imm <<= 4	458:2:13720:13729	1596193	1	True				
ANR	1596317	AssignmentExpression	imm <<= 4		1596193	0		<<=			
ANR	1596318	Identifier	imm		1596193	0					
ANR	1596319	PrimaryExpression	4		1596193	1					
ANR	1596320	IfStatement	if ( ! ( imm & 0xc0000000 ) )		1596193	7					
ANR	1596321	Condition	! ( imm & 0xc0000000 )	460:5:13739:13757	1596193	0	True				
ANR	1596322	UnaryOperationExpression	! ( imm & 0xc0000000 )		1596193	0					
ANR	1596323	UnaryOperator	!		1596193	0					
ANR	1596324	BitAndExpression	imm & 0xc0000000		1596193	1		&			
ANR	1596325	Identifier	imm		1596193	0					
ANR	1596326	PrimaryExpression	0xc0000000		1596193	1					
ANR	1596327	CompoundStatement		32:26:631:631	1596193	1					
ANR	1596328	ExpressionStatement	counter += 2	461:2:13764:13776	1596193	0	True				
ANR	1596329	AssignmentExpression	counter += 2		1596193	0		+=			
ANR	1596330	Identifier	counter		1596193	0					
ANR	1596331	PrimaryExpression	2		1596193	1					
ANR	1596332	ExpressionStatement	imm <<= 2	462:2:13780:13789	1596193	1	True				
ANR	1596333	AssignmentExpression	imm <<= 2		1596193	0		<<=			
ANR	1596334	Identifier	imm		1596193	0					
ANR	1596335	PrimaryExpression	2		1596193	1					
ANR	1596336	IfStatement	if ( ! ( imm & 0x80000000 ) )		1596193	8					
ANR	1596337	Condition	! ( imm & 0x80000000 )	464:5:13799:13817	1596193	0	True				
ANR	1596338	UnaryOperationExpression	! ( imm & 0x80000000 )		1596193	0					
ANR	1596339	UnaryOperator	!		1596193	0					
ANR	1596340	BitAndExpression	imm & 0x80000000		1596193	1		&			
ANR	1596341	Identifier	imm		1596193	0					
ANR	1596342	PrimaryExpression	0x80000000		1596193	1					
ANR	1596343	CompoundStatement		36:26:691:691	1596193	1					
ANR	1596344	ExpressionStatement	counter += 1	465:2:13824:13836	1596193	0	True				
ANR	1596345	AssignmentExpression	counter += 1		1596193	0		+=			
ANR	1596346	Identifier	counter		1596193	0					
ANR	1596347	PrimaryExpression	1		1596193	1					
ANR	1596348	ExpressionStatement	imm <<= 1	466:2:13840:13849	1596193	1	True				
ANR	1596349	AssignmentExpression	imm <<= 1		1596193	0		<<=			
ANR	1596350	Identifier	imm		1596193	0					
ANR	1596351	PrimaryExpression	1		1596193	1					
ANR	1596352	ExpressionStatement	SLJIT_ASSERT ( counter <= 31 )	469:1:13899:13926	1596193	9	True				
ANR	1596353	CallExpression	SLJIT_ASSERT ( counter <= 31 )		1596193	0					
ANR	1596354	Callee	SLJIT_ASSERT		1596193	0					
ANR	1596355	Identifier	SLJIT_ASSERT		1596193	0					
ANR	1596356	ArgumentList	counter <= 31		1596193	1					
ANR	1596357	Argument	counter <= 31		1596193	0					
ANR	1596358	RelationalExpression	counter <= 31		1596193	0		<=			
ANR	1596359	Identifier	counter		1596193	0					
ANR	1596360	PrimaryExpression	31		1596193	1					
ANR	1596361	IfStatement	if ( imm & 0x00ffffff )		1596193	10					
ANR	1596362	Condition	imm & 0x00ffffff	471:5:13934:13949	1596193	0	True				
ANR	1596363	BitAndExpression	imm & 0x00ffffff		1596193	0		&			
ANR	1596364	Identifier	imm		1596193	0					
ANR	1596365	PrimaryExpression	0x00ffffff		1596193	1					
ANR	1596366	ReturnStatement	return INVALID_IMM ;	472:2:13954:13972	1596193	1	True				
ANR	1596367	Identifier	INVALID_IMM		1596193	0					
ANR	1596368	ReturnStatement	"return ( ( imm >> 24 ) & 0x7f ) | COPY_BITS ( counter , 4 , 26 , 1 ) | COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 ) ;"	474:1:14001:14120	1596193	11	True				
ANR	1596369	InclusiveOrExpression	"( ( imm >> 24 ) & 0x7f ) | COPY_BITS ( counter , 4 , 26 , 1 ) | COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 )"		1596193	0		|			
ANR	1596370	BitAndExpression	( imm >> 24 ) & 0x7f		1596193	0		&			
ANR	1596371	ShiftExpression	imm >> 24		1596193	0		>>			
ANR	1596372	Identifier	imm		1596193	0					
ANR	1596373	PrimaryExpression	24		1596193	1					
ANR	1596374	PrimaryExpression	0x7f		1596193	1					
ANR	1596375	InclusiveOrExpression	"COPY_BITS ( counter , 4 , 26 , 1 ) | COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 )"		1596193	1		|			
ANR	1596376	CallExpression	"COPY_BITS ( counter , 4 , 26 , 1 )"		1596193	0					
ANR	1596377	Callee	COPY_BITS		1596193	0					
ANR	1596378	Identifier	COPY_BITS		1596193	0					
ANR	1596379	ArgumentList	counter		1596193	1					
ANR	1596380	Argument	counter		1596193	0					
ANR	1596381	Identifier	counter		1596193	0					
ANR	1596382	Argument	4		1596193	1					
ANR	1596383	PrimaryExpression	4		1596193	0					
ANR	1596384	Argument	26		1596193	2					
ANR	1596385	PrimaryExpression	26		1596193	0					
ANR	1596386	Argument	1		1596193	3					
ANR	1596387	PrimaryExpression	1		1596193	0					
ANR	1596388	InclusiveOrExpression	"COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 )"		1596193	1		|			
ANR	1596389	CallExpression	"COPY_BITS ( counter , 1 , 12 , 3 )"		1596193	0					
ANR	1596390	Callee	COPY_BITS		1596193	0					
ANR	1596391	Identifier	COPY_BITS		1596193	0					
ANR	1596392	ArgumentList	counter		1596193	1					
ANR	1596393	Argument	counter		1596193	0					
ANR	1596394	Identifier	counter		1596193	0					
ANR	1596395	Argument	1		1596193	1					
ANR	1596396	PrimaryExpression	1		1596193	0					
ANR	1596397	Argument	12		1596193	2					
ANR	1596398	PrimaryExpression	12		1596193	0					
ANR	1596399	Argument	3		1596193	3					
ANR	1596400	PrimaryExpression	3		1596193	0					
ANR	1596401	CallExpression	"COPY_BITS ( counter , 0 , 7 , 1 )"		1596193	1					
ANR	1596402	Callee	COPY_BITS		1596193	0					
ANR	1596403	Identifier	COPY_BITS		1596193	0					
ANR	1596404	ArgumentList	counter		1596193	1					
ANR	1596405	Argument	counter		1596193	0					
ANR	1596406	Identifier	counter		1596193	0					
ANR	1596407	Argument	0		1596193	1					
ANR	1596408	PrimaryExpression	0		1596193	0					
ANR	1596409	Argument	7		1596193	2					
ANR	1596410	PrimaryExpression	7		1596193	0					
ANR	1596411	Argument	1		1596193	3					
ANR	1596412	PrimaryExpression	1		1596193	0					
ANR	1596413	ReturnType	static sljit_uw		1596193	1					
ANR	1596414	Identifier	get_imm		1596193	2					
ANR	1596415	ParameterList	sljit_uw imm		1596193	3					
ANR	1596416	Parameter	sljit_uw imm	428:24:13114:13125	1596193	0	True				
ANR	1596417	ParameterType	sljit_uw		1596193	0					
ANR	1596418	Identifier	imm		1596193	1					
ANR	1596419	CFGEntryNode	ENTRY		1596193		True				
ANR	1596420	CFGExitNode	EXIT		1596193		True				
ANR	1596421	Symbol	COPY_BITS		1596193						
ANR	1596422	Symbol	INVALID_IMM		1596193						
ANR	1596423	Symbol	imm		1596193						
ANR	1596424	Symbol	counter		1596193						
ANR	1596425	Function	load_immediate	477:0:14125:14924							
ANR	1596426	FunctionDef	"load_immediate (struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm)"		1596425	0					
ANR	1596427	CompoundStatement		478:0:14217:14924	1596425	0					
ANR	1596428	IdentifierDeclStatement	sljit_uw tmp ;	479:1:14220:14232	1596425	0	True				
ANR	1596429	IdentifierDecl	tmp		1596425	0					
ANR	1596430	IdentifierDeclType	sljit_uw		1596425	0					
ANR	1596431	Identifier	tmp		1596425	1					
ANR	1596432	IfStatement	if ( imm >= 0x10000 )		1596425	1					
ANR	1596433	Condition	imm >= 0x10000	481:5:14240:14253	1596425	0	True				
ANR	1596434	RelationalExpression	imm >= 0x10000		1596425	0		>=			
ANR	1596435	Identifier	imm		1596425	0					
ANR	1596436	PrimaryExpression	0x10000		1596425	1					
ANR	1596437	CompoundStatement		4:21:38:38	1596425	1					
ANR	1596438	ExpressionStatement	tmp = get_imm ( imm )	482:2:14260:14278	1596425	0	True				
ANR	1596439	AssignmentExpression	tmp = get_imm ( imm )		1596425	0		=			
ANR	1596440	Identifier	tmp		1596425	0					
ANR	1596441	CallExpression	get_imm ( imm )		1596425	1					
ANR	1596442	Callee	get_imm		1596425	0					
ANR	1596443	Identifier	get_imm		1596425	0					
ANR	1596444	ArgumentList	imm		1596425	1					
ANR	1596445	Argument	imm		1596425	0					
ANR	1596446	Identifier	imm		1596425	0					
ANR	1596447	IfStatement	if ( tmp != INVALID_IMM )		1596425	1					
ANR	1596448	Condition	tmp != INVALID_IMM	483:6:14286:14303	1596425	0	True				
ANR	1596449	EqualityExpression	tmp != INVALID_IMM		1596425	0		!=			
ANR	1596450	Identifier	tmp		1596425	0					
ANR	1596451	Identifier	INVALID_IMM		1596425	1					
ANR	1596452	ReturnStatement	"return push_inst32 ( compiler , MOV_WI | RD4 ( dst ) | tmp ) ;"	484:3:14309:14362	1596425	1	True				
ANR	1596453	CallExpression	"push_inst32 ( compiler , MOV_WI | RD4 ( dst ) | tmp )"		1596425	0					
ANR	1596454	Callee	push_inst32		1596425	0					
ANR	1596455	Identifier	push_inst32		1596425	0					
ANR	1596456	ArgumentList	compiler		1596425	1					
ANR	1596457	Argument	compiler		1596425	0					
ANR	1596458	Identifier	compiler		1596425	0					
ANR	1596459	Argument	MOV_WI | RD4 ( dst ) | tmp		1596425	1					
ANR	1596460	InclusiveOrExpression	MOV_WI | RD4 ( dst ) | tmp		1596425	0		|			
ANR	1596461	Identifier	MOV_WI		1596425	0					
ANR	1596462	InclusiveOrExpression	RD4 ( dst ) | tmp		1596425	1		|			
ANR	1596463	CallExpression	RD4 ( dst )		1596425	0					
ANR	1596464	Callee	RD4		1596425	0					
ANR	1596465	Identifier	RD4		1596425	0					
ANR	1596466	ArgumentList	dst		1596425	1					
ANR	1596467	Argument	dst		1596425	0					
ANR	1596468	Identifier	dst		1596425	0					
ANR	1596469	Identifier	tmp		1596425	1					
ANR	1596470	ExpressionStatement	tmp = get_imm ( ~imm )	485:2:14366:14385	1596425	2	True				
ANR	1596471	AssignmentExpression	tmp = get_imm ( ~imm )		1596425	0		=			
ANR	1596472	Identifier	tmp		1596425	0					
ANR	1596473	CallExpression	get_imm ( ~imm )		1596425	1					
ANR	1596474	Callee	get_imm		1596425	0					
ANR	1596475	Identifier	get_imm		1596425	0					
ANR	1596476	ArgumentList	~imm		1596425	1					
ANR	1596477	Argument	~imm		1596425	0					
ANR	1596478	Identifier	~imm		1596425	0					
ANR	1596479	IfStatement	if ( tmp != INVALID_IMM )		1596425	3					
ANR	1596480	Condition	tmp != INVALID_IMM	486:6:14393:14410	1596425	0	True				
ANR	1596481	EqualityExpression	tmp != INVALID_IMM		1596425	0		!=			
ANR	1596482	Identifier	tmp		1596425	0					
ANR	1596483	Identifier	INVALID_IMM		1596425	1					
ANR	1596484	ReturnStatement	"return push_inst32 ( compiler , MVN_WI | RD4 ( dst ) | tmp ) ;"	487:3:14416:14469	1596425	1	True				
ANR	1596485	CallExpression	"push_inst32 ( compiler , MVN_WI | RD4 ( dst ) | tmp )"		1596425	0					
ANR	1596486	Callee	push_inst32		1596425	0					
ANR	1596487	Identifier	push_inst32		1596425	0					
ANR	1596488	ArgumentList	compiler		1596425	1					
ANR	1596489	Argument	compiler		1596425	0					
ANR	1596490	Identifier	compiler		1596425	0					
ANR	1596491	Argument	MVN_WI | RD4 ( dst ) | tmp		1596425	1					
ANR	1596492	InclusiveOrExpression	MVN_WI | RD4 ( dst ) | tmp		1596425	0		|			
ANR	1596493	Identifier	MVN_WI		1596425	0					
ANR	1596494	InclusiveOrExpression	RD4 ( dst ) | tmp		1596425	1		|			
ANR	1596495	CallExpression	RD4 ( dst )		1596425	0					
ANR	1596496	Callee	RD4		1596425	0					
ANR	1596497	Identifier	RD4		1596425	0					
ANR	1596498	ArgumentList	dst		1596425	1					
ANR	1596499	Argument	dst		1596425	0					
ANR	1596500	Identifier	dst		1596425	0					
ANR	1596501	Identifier	tmp		1596425	1					
ANR	1596502	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"	491:1:14521:14668	1596425	2	True				
ANR	1596503	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"		1596425	0					
ANR	1596504	Callee	FAIL_IF		1596425	0					
ANR	1596505	Identifier	FAIL_IF		1596425	0					
ANR	1596506	ArgumentList	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1596425	1					
ANR	1596507	Argument	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1596425	0					
ANR	1596508	CallExpression	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1596425	0					
ANR	1596509	Callee	push_inst32		1596425	0					
ANR	1596510	Identifier	push_inst32		1596425	0					
ANR	1596511	ArgumentList	compiler		1596425	1					
ANR	1596512	Argument	compiler		1596425	0					
ANR	1596513	Identifier	compiler		1596425	0					
ANR	1596514	Argument	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1596425	1					
ANR	1596515	InclusiveOrExpression	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1596425	0		|			
ANR	1596516	Identifier	MOVW		1596425	0					
ANR	1596517	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1596425	1		|			
ANR	1596518	CallExpression	RD4 ( dst )		1596425	0					
ANR	1596519	Callee	RD4		1596425	0					
ANR	1596520	Identifier	RD4		1596425	0					
ANR	1596521	ArgumentList	dst		1596425	1					
ANR	1596522	Argument	dst		1596425	0					
ANR	1596523	Identifier	dst		1596425	0					
ANR	1596524	InclusiveOrExpression	"COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1596425	1		|			
ANR	1596525	CallExpression	"COPY_BITS ( imm , 12 , 16 , 4 )"		1596425	0					
ANR	1596526	Callee	COPY_BITS		1596425	0					
ANR	1596527	Identifier	COPY_BITS		1596425	0					
ANR	1596528	ArgumentList	imm		1596425	1					
ANR	1596529	Argument	imm		1596425	0					
ANR	1596530	Identifier	imm		1596425	0					
ANR	1596531	Argument	12		1596425	1					
ANR	1596532	PrimaryExpression	12		1596425	0					
ANR	1596533	Argument	16		1596425	2					
ANR	1596534	PrimaryExpression	16		1596425	0					
ANR	1596535	Argument	4		1596425	3					
ANR	1596536	PrimaryExpression	4		1596425	0					
ANR	1596537	InclusiveOrExpression	"COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1596425	1		|			
ANR	1596538	CallExpression	"COPY_BITS ( imm , 11 , 26 , 1 )"		1596425	0					
ANR	1596539	Callee	COPY_BITS		1596425	0					
ANR	1596540	Identifier	COPY_BITS		1596425	0					
ANR	1596541	ArgumentList	imm		1596425	1					
ANR	1596542	Argument	imm		1596425	0					
ANR	1596543	Identifier	imm		1596425	0					
ANR	1596544	Argument	11		1596425	1					
ANR	1596545	PrimaryExpression	11		1596425	0					
ANR	1596546	Argument	26		1596425	2					
ANR	1596547	PrimaryExpression	26		1596425	0					
ANR	1596548	Argument	1		1596425	3					
ANR	1596549	PrimaryExpression	1		1596425	0					
ANR	1596550	InclusiveOrExpression	"COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1596425	1		|			
ANR	1596551	CallExpression	"COPY_BITS ( imm , 8 , 12 , 3 )"		1596425	0					
ANR	1596552	Callee	COPY_BITS		1596425	0					
ANR	1596553	Identifier	COPY_BITS		1596425	0					
ANR	1596554	ArgumentList	imm		1596425	1					
ANR	1596555	Argument	imm		1596425	0					
ANR	1596556	Identifier	imm		1596425	0					
ANR	1596557	Argument	8		1596425	1					
ANR	1596558	PrimaryExpression	8		1596425	0					
ANR	1596559	Argument	12		1596425	2					
ANR	1596560	PrimaryExpression	12		1596425	0					
ANR	1596561	Argument	3		1596425	3					
ANR	1596562	PrimaryExpression	3		1596425	0					
ANR	1596563	BitAndExpression	imm & 0xff		1596425	1		&			
ANR	1596564	Identifier	imm		1596425	0					
ANR	1596565	PrimaryExpression	0xff		1596425	1					
ANR	1596566	IfStatement	if ( imm >= 0x10000 )		1596425	3					
ANR	1596567	Condition	imm >= 0x10000	495:5:14708:14721	1596425	0	True				
ANR	1596568	RelationalExpression	imm >= 0x10000		1596425	0		>=			
ANR	1596569	Identifier	imm		1596425	0					
ANR	1596570	PrimaryExpression	0x10000		1596425	1					
ANR	1596571	ReturnStatement	"return push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) ) ;"	496:2:14726:14899	1596425	1	True				
ANR	1596572	CallExpression	"push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) )"		1596425	0					
ANR	1596573	Callee	push_inst32		1596425	0					
ANR	1596574	Identifier	push_inst32		1596425	0					
ANR	1596575	ArgumentList	compiler		1596425	1					
ANR	1596576	Argument	compiler		1596425	0					
ANR	1596577	Identifier	compiler		1596425	0					
ANR	1596578	Argument	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1596425	1					
ANR	1596579	InclusiveOrExpression	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1596425	0		|			
ANR	1596580	Identifier	MOVT		1596425	0					
ANR	1596581	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1596425	1		|			
ANR	1596582	CallExpression	RD4 ( dst )		1596425	0					
ANR	1596583	Callee	RD4		1596425	0					
ANR	1596584	Identifier	RD4		1596425	0					
ANR	1596585	ArgumentList	dst		1596425	1					
ANR	1596586	Argument	dst		1596425	0					
ANR	1596587	Identifier	dst		1596425	0					
ANR	1596588	InclusiveOrExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1596425	1		|			
ANR	1596589	CallExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 )"		1596425	0					
ANR	1596590	Callee	COPY_BITS		1596425	0					
ANR	1596591	Identifier	COPY_BITS		1596425	0					
ANR	1596592	ArgumentList	imm		1596425	1					
ANR	1596593	Argument	imm		1596425	0					
ANR	1596594	Identifier	imm		1596425	0					
ANR	1596595	Argument	12 + 16		1596425	1					
ANR	1596596	AdditiveExpression	12 + 16		1596425	0		+			
ANR	1596597	PrimaryExpression	12		1596425	0					
ANR	1596598	PrimaryExpression	16		1596425	1					
ANR	1596599	Argument	16		1596425	2					
ANR	1596600	PrimaryExpression	16		1596425	0					
ANR	1596601	Argument	4		1596425	3					
ANR	1596602	PrimaryExpression	4		1596425	0					
ANR	1596603	InclusiveOrExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1596425	1		|			
ANR	1596604	CallExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 )"		1596425	0					
ANR	1596605	Callee	COPY_BITS		1596425	0					
ANR	1596606	Identifier	COPY_BITS		1596425	0					
ANR	1596607	ArgumentList	imm		1596425	1					
ANR	1596608	Argument	imm		1596425	0					
ANR	1596609	Identifier	imm		1596425	0					
ANR	1596610	Argument	11 + 16		1596425	1					
ANR	1596611	AdditiveExpression	11 + 16		1596425	0		+			
ANR	1596612	PrimaryExpression	11		1596425	0					
ANR	1596613	PrimaryExpression	16		1596425	1					
ANR	1596614	Argument	26		1596425	2					
ANR	1596615	PrimaryExpression	26		1596425	0					
ANR	1596616	Argument	1		1596425	3					
ANR	1596617	PrimaryExpression	1		1596425	0					
ANR	1596618	InclusiveOrExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1596425	1		|			
ANR	1596619	CallExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 )"		1596425	0					
ANR	1596620	Callee	COPY_BITS		1596425	0					
ANR	1596621	Identifier	COPY_BITS		1596425	0					
ANR	1596622	ArgumentList	imm		1596425	1					
ANR	1596623	Argument	imm		1596425	0					
ANR	1596624	Identifier	imm		1596425	0					
ANR	1596625	Argument	8 + 16		1596425	1					
ANR	1596626	AdditiveExpression	8 + 16		1596425	0		+			
ANR	1596627	PrimaryExpression	8		1596425	0					
ANR	1596628	PrimaryExpression	16		1596425	1					
ANR	1596629	Argument	12		1596425	2					
ANR	1596630	PrimaryExpression	12		1596425	0					
ANR	1596631	Argument	3		1596425	3					
ANR	1596632	PrimaryExpression	3		1596425	0					
ANR	1596633	ShiftExpression	( imm & 0xff0000 ) >> 16		1596425	1		>>			
ANR	1596634	BitAndExpression	imm & 0xff0000		1596425	0		&			
ANR	1596635	Identifier	imm		1596425	0					
ANR	1596636	PrimaryExpression	0xff0000		1596425	1					
ANR	1596637	PrimaryExpression	16		1596425	1					
ANR	1596638	ReturnStatement	return SLJIT_SUCCESS ;	498:1:14902:14922	1596425	4	True				
ANR	1596639	Identifier	SLJIT_SUCCESS		1596425	0					
ANR	1596640	ReturnType	static sljit_si		1596425	1					
ANR	1596641	Identifier	load_immediate		1596425	2					
ANR	1596642	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm"		1596425	3					
ANR	1596643	Parameter	struct sljit_compiler * compiler	477:31:14156:14186	1596425	0	True				
ANR	1596644	ParameterType	struct sljit_compiler *		1596425	0					
ANR	1596645	Identifier	compiler		1596425	1					
ANR	1596646	Parameter	sljit_si dst	477:64:14189:14200	1596425	1	True				
ANR	1596647	ParameterType	sljit_si		1596425	0					
ANR	1596648	Identifier	dst		1596425	1					
ANR	1596649	Parameter	sljit_uw imm	477:78:14203:14214	1596425	2	True				
ANR	1596650	ParameterType	sljit_uw		1596425	0					
ANR	1596651	Identifier	imm		1596425	1					
ANR	1596652	CFGEntryNode	ENTRY		1596425		True				
ANR	1596653	CFGExitNode	EXIT		1596425		True				
ANR	1596654	Symbol	COPY_BITS		1596425						
ANR	1596655	Symbol	RD4		1596425						
ANR	1596656	Symbol	dst		1596425						
ANR	1596657	Symbol	MOVT		1596425						
ANR	1596658	Symbol	MOVW		1596425						
ANR	1596659	Symbol	imm		1596425						
ANR	1596660	Symbol	MVN_WI		1596425						
ANR	1596661	Symbol	get_imm		1596425						
ANR	1596662	Symbol	SLJIT_SUCCESS		1596425						
ANR	1596663	Symbol	~imm		1596425						
ANR	1596664	Symbol	tmp		1596425						
ANR	1596665	Symbol	INVALID_IMM		1596425						
ANR	1596666	Symbol	MOV_WI		1596425						
ANR	1596667	Symbol	compiler		1596425						
ANR	1596668	Symbol	push_inst32		1596425						
ANR	1596669	Function	emit_op_imm	511:0:15253:26343							
ANR	1596670	FunctionDef	"emit_op_imm (struct sljit_compiler * compiler , sljit_si flags , sljit_si dst , sljit_uw arg1 , sljit_uw arg2)"		1596669	0					
ANR	1596671	CompoundStatement		512:0:15374:26343	1596669	0					
ANR	1596672	IdentifierDeclStatement	sljit_si reg ;	516:1:15497:15509	1596669	0	True				
ANR	1596673	IdentifierDecl	reg		1596669	0					
ANR	1596674	IdentifierDeclType	sljit_si		1596669	0					
ANR	1596675	Identifier	reg		1596669	1					
ANR	1596676	IdentifierDeclStatement	"sljit_uw imm , nimm ;"	517:1:15512:15530	1596669	1	True				
ANR	1596677	IdentifierDecl	imm		1596669	0					
ANR	1596678	IdentifierDeclType	sljit_uw		1596669	0					
ANR	1596679	Identifier	imm		1596669	1					
ANR	1596680	IdentifierDecl	nimm		1596669	1					
ANR	1596681	IdentifierDeclType	sljit_uw		1596669	0					
ANR	1596682	Identifier	nimm		1596669	1					
ANR	1596683	IfStatement	if ( SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) ) )		1596669	2					
ANR	1596684	Condition	SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) )	519:5:15538:15609	1596669	0	True				
ANR	1596685	CallExpression	SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) )		1596669	0					
ANR	1596686	Callee	SLJIT_UNLIKELY		1596669	0					
ANR	1596687	Identifier	SLJIT_UNLIKELY		1596669	0					
ANR	1596688	ArgumentList	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1596669	1					
ANR	1596689	Argument	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1596669	0					
ANR	1596690	EqualityExpression	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1596669	0		==			
ANR	1596691	BitAndExpression	flags & ( ARG1_IMM | ARG2_IMM )		1596669	0		&			
ANR	1596692	Identifier	flags		1596669	0					
ANR	1596693	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1596669	1		|			
ANR	1596694	Identifier	ARG1_IMM		1596669	0					
ANR	1596695	Identifier	ARG2_IMM		1596669	1					
ANR	1596696	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1596669	1		|			
ANR	1596697	Identifier	ARG1_IMM		1596669	0					
ANR	1596698	Identifier	ARG2_IMM		1596669	1					
ANR	1596699	CompoundStatement		8:79:237:237	1596669	1					
ANR	1596700	ExpressionStatement	flags &= ~ARG1_IMM	521:2:15645:15663	1596669	0	True				
ANR	1596701	AssignmentExpression	flags &= ~ARG1_IMM		1596669	0		&=			
ANR	1596702	Identifier	flags		1596669	0					
ANR	1596703	Identifier	~ARG1_IMM		1596669	1					
ANR	1596704	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"	522:2:15667:15716	1596669	1	True				
ANR	1596705	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"		1596669	0					
ANR	1596706	Callee	FAIL_IF		1596669	0					
ANR	1596707	Identifier	FAIL_IF		1596669	0					
ANR	1596708	ArgumentList	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1596669	1					
ANR	1596709	Argument	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1596669	0					
ANR	1596710	CallExpression	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1596669	0					
ANR	1596711	Callee	load_immediate		1596669	0					
ANR	1596712	Identifier	load_immediate		1596669	0					
ANR	1596713	ArgumentList	compiler		1596669	1					
ANR	1596714	Argument	compiler		1596669	0					
ANR	1596715	Identifier	compiler		1596669	0					
ANR	1596716	Argument	TMP_REG1		1596669	1					
ANR	1596717	Identifier	TMP_REG1		1596669	0					
ANR	1596718	Argument	arg1		1596669	2					
ANR	1596719	Identifier	arg1		1596669	0					
ANR	1596720	ExpressionStatement	arg1 = TMP_REG1	523:2:15720:15735	1596669	2	True				
ANR	1596721	AssignmentExpression	arg1 = TMP_REG1		1596669	0		=			
ANR	1596722	Identifier	arg1		1596669	0					
ANR	1596723	Identifier	TMP_REG1		1596669	1					
ANR	1596724	IfStatement	if ( flags & ( ARG1_IMM | ARG2_IMM ) )		1596669	3					
ANR	1596725	Condition	flags & ( ARG1_IMM | ARG2_IMM )	526:5:15746:15774	1596669	0	True				
ANR	1596726	BitAndExpression	flags & ( ARG1_IMM | ARG2_IMM )		1596669	0		&			
ANR	1596727	Identifier	flags		1596669	0					
ANR	1596728	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1596669	1		|			
ANR	1596729	Identifier	ARG1_IMM		1596669	0					
ANR	1596730	Identifier	ARG2_IMM		1596669	1					
ANR	1596731	CompoundStatement		15:36:402:402	1596669	1					
ANR	1596732	ExpressionStatement	reg = ( flags & ARG2_IMM ) ? arg1 : arg2	527:2:15781:15819	1596669	0	True				
ANR	1596733	AssignmentExpression	reg = ( flags & ARG2_IMM ) ? arg1 : arg2		1596669	0		=			
ANR	1596734	Identifier	reg		1596669	0					
ANR	1596735	ConditionalExpression	( flags & ARG2_IMM ) ? arg1 : arg2		1596669	1					
ANR	1596736	Condition	flags & ARG2_IMM		1596669	0					
ANR	1596737	BitAndExpression	flags & ARG2_IMM		1596669	0		&			
ANR	1596738	Identifier	flags		1596669	0					
ANR	1596739	Identifier	ARG2_IMM		1596669	1					
ANR	1596740	Identifier	arg1		1596669	1					
ANR	1596741	Identifier	arg2		1596669	2					
ANR	1596742	ExpressionStatement	imm = ( flags & ARG2_IMM ) ? arg2 : arg1	528:2:15823:15861	1596669	1	True				
ANR	1596743	AssignmentExpression	imm = ( flags & ARG2_IMM ) ? arg2 : arg1		1596669	0		=			
ANR	1596744	Identifier	imm		1596669	0					
ANR	1596745	ConditionalExpression	( flags & ARG2_IMM ) ? arg2 : arg1		1596669	1					
ANR	1596746	Condition	flags & ARG2_IMM		1596669	0					
ANR	1596747	BitAndExpression	flags & ARG2_IMM		1596669	0		&			
ANR	1596748	Identifier	flags		1596669	0					
ANR	1596749	Identifier	ARG2_IMM		1596669	1					
ANR	1596750	Identifier	arg2		1596669	1					
ANR	1596751	Identifier	arg1		1596669	2					
ANR	1596752	SwitchStatement	switch ( flags & 0xffff )		1596669	2					
ANR	1596753	Condition	flags & 0xffff	530:10:15874:15887	1596669	0	True				
ANR	1596754	BitAndExpression	flags & 0xffff		1596669	0		&			
ANR	1596755	Identifier	flags		1596669	0					
ANR	1596756	PrimaryExpression	0xffff		1596669	1					
ANR	1596757	CompoundStatement		19:26:515:515	1596669	1					
ANR	1596758	Label	case SLJIT_CLZ :	531:2:15894:15908	1596669	0	True				
ANR	1596759	Identifier	SLJIT_CLZ		1596669	0					
ANR	1596760	Label	case SLJIT_MUL :	532:2:15912:15926	1596669	1	True				
ANR	1596761	Identifier	SLJIT_MUL		1596669	0					
ANR	1596762	BreakStatement	break ;	534:3:15972:15977	1596669	2	True				
ANR	1596763	Label	case SLJIT_MOV :	535:2:15981:15995	1596669	3	True				
ANR	1596764	Identifier	SLJIT_MOV		1596669	0					
ANR	1596765	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1 )	536:3:16000:16076	1596669	4	True				
ANR	1596766	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1 )		1596669	0					
ANR	1596767	Callee	SLJIT_ASSERT		1596669	0					
ANR	1596768	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1596769	ArgumentList	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1596669	1					
ANR	1596770	Argument	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1596669	0					
ANR	1596771	AndExpression	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1596669	0		&&			
ANR	1596772	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1596773	UnaryOperator	!		1596669	0					
ANR	1596774	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1596775	Identifier	flags		1596669	0					
ANR	1596776	Identifier	SET_FLAGS		1596669	1					
ANR	1596777	AndExpression	( flags & ARG2_IMM ) && arg1 == TMP_REG1		1596669	1		&&			
ANR	1596778	BitAndExpression	flags & ARG2_IMM		1596669	0		&			
ANR	1596779	Identifier	flags		1596669	0					
ANR	1596780	Identifier	ARG2_IMM		1596669	1					
ANR	1596781	EqualityExpression	arg1 == TMP_REG1		1596669	1		==			
ANR	1596782	Identifier	arg1		1596669	0					
ANR	1596783	Identifier	TMP_REG1		1596669	1					
ANR	1596784	ReturnStatement	"return load_immediate ( compiler , dst , imm ) ;"	537:3:16081:16122	1596669	5	True				
ANR	1596785	CallExpression	"load_immediate ( compiler , dst , imm )"		1596669	0					
ANR	1596786	Callee	load_immediate		1596669	0					
ANR	1596787	Identifier	load_immediate		1596669	0					
ANR	1596788	ArgumentList	compiler		1596669	1					
ANR	1596789	Argument	compiler		1596669	0					
ANR	1596790	Identifier	compiler		1596669	0					
ANR	1596791	Argument	dst		1596669	1					
ANR	1596792	Identifier	dst		1596669	0					
ANR	1596793	Argument	imm		1596669	2					
ANR	1596794	Identifier	imm		1596669	0					
ANR	1596795	Label	case SLJIT_NOT :	538:2:16126:16140	1596669	6	True				
ANR	1596796	Identifier	SLJIT_NOT		1596669	0					
ANR	1596797	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1596669	7					
ANR	1596798	Condition	! ( flags & SET_FLAGS )	539:7:16149:16168	1596669	0	True				
ANR	1596799	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1596800	UnaryOperator	!		1596669	0					
ANR	1596801	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1596802	Identifier	flags		1596669	0					
ANR	1596803	Identifier	SET_FLAGS		1596669	1					
ANR	1596804	ReturnStatement	"return load_immediate ( compiler , dst , ~imm ) ;"	540:4:16175:16217	1596669	1	True				
ANR	1596805	CallExpression	"load_immediate ( compiler , dst , ~imm )"		1596669	0					
ANR	1596806	Callee	load_immediate		1596669	0					
ANR	1596807	Identifier	load_immediate		1596669	0					
ANR	1596808	ArgumentList	compiler		1596669	1					
ANR	1596809	Argument	compiler		1596669	0					
ANR	1596810	Identifier	compiler		1596669	0					
ANR	1596811	Argument	dst		1596669	1					
ANR	1596812	Identifier	dst		1596669	0					
ANR	1596813	Argument	~imm		1596669	2					
ANR	1596814	Identifier	~imm		1596669	0					
ANR	1596815	BreakStatement	break ;	543:3:16393:16398	1596669	8	True				
ANR	1596816	Label	case SLJIT_ADD :	544:2:16402:16416	1596669	9	True				
ANR	1596817	Identifier	SLJIT_ADD		1596669	0					
ANR	1596818	ExpressionStatement	nimm = - imm	545:3:16421:16432	1596669	10	True				
ANR	1596819	AssignmentExpression	nimm = - imm		1596669	0		=			
ANR	1596820	Identifier	nimm		1596669	0					
ANR	1596821	UnaryOperationExpression	- imm		1596669	1					
ANR	1596822	UnaryOperator	-		1596669	0					
ANR	1596823	Identifier	imm		1596669	1					
ANR	1596824	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst ) )"		1596669	11					
ANR	1596825	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"	546:7:16441:16487	1596669	0	True				
ANR	1596826	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"		1596669	0		&&			
ANR	1596827	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1596828	UnaryOperator	!		1596669	0					
ANR	1596829	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1596830	Identifier	flags		1596669	0					
ANR	1596831	Identifier	KEEP_FLAGS		1596669	1					
ANR	1596832	CallExpression	"IS_2_LO_REGS ( reg , dst )"		1596669	1					
ANR	1596833	Callee	IS_2_LO_REGS		1596669	0					
ANR	1596834	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1596835	ArgumentList	reg		1596669	1					
ANR	1596836	Argument	reg		1596669	0					
ANR	1596837	Identifier	reg		1596669	0					
ANR	1596838	Argument	dst		1596669	1					
ANR	1596839	Identifier	dst		1596669	0					
ANR	1596840	CompoundStatement		35:56:1115:1115	1596669	1					
ANR	1596841	IfStatement	if ( imm <= 0x7 )		1596669	0					
ANR	1596842	Condition	imm <= 0x7	547:8:16500:16509	1596669	0	True				
ANR	1596843	RelationalExpression	imm <= 0x7		1596669	0		<=			
ANR	1596844	Identifier	imm		1596669	0					
ANR	1596845	PrimaryExpression	0x7		1596669	1					
ANR	1596846	ReturnStatement	"return push_inst16 ( compiler , ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	548:5:16517:16587	1596669	1	True				
ANR	1596847	CallExpression	"push_inst16 ( compiler , ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) )"		1596669	0					
ANR	1596848	Callee	push_inst16		1596669	0					
ANR	1596849	Identifier	push_inst16		1596669	0					
ANR	1596850	ArgumentList	compiler		1596669	1					
ANR	1596851	Argument	compiler		1596669	0					
ANR	1596852	Identifier	compiler		1596669	0					
ANR	1596853	Argument	ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1					
ANR	1596854	InclusiveOrExpression	ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1596669	0		|			
ANR	1596855	Identifier	ADDSI3		1596669	0					
ANR	1596856	InclusiveOrExpression	IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1596857	CallExpression	IMM3 ( imm )		1596669	0					
ANR	1596858	Callee	IMM3		1596669	0					
ANR	1596859	Identifier	IMM3		1596669	0					
ANR	1596860	ArgumentList	imm		1596669	1					
ANR	1596861	Argument	imm		1596669	0					
ANR	1596862	Identifier	imm		1596669	0					
ANR	1596863	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1596864	CallExpression	RD3 ( dst )		1596669	0					
ANR	1596865	Callee	RD3		1596669	0					
ANR	1596866	Identifier	RD3		1596669	0					
ANR	1596867	ArgumentList	dst		1596669	1					
ANR	1596868	Argument	dst		1596669	0					
ANR	1596869	Identifier	dst		1596669	0					
ANR	1596870	CallExpression	RN3 ( reg )		1596669	1					
ANR	1596871	Callee	RN3		1596669	0					
ANR	1596872	Identifier	RN3		1596669	0					
ANR	1596873	ArgumentList	reg		1596669	1					
ANR	1596874	Argument	reg		1596669	0					
ANR	1596875	Identifier	reg		1596669	0					
ANR	1596876	IfStatement	if ( nimm <= 0x7 )		1596669	1					
ANR	1596877	Condition	nimm <= 0x7	549:8:16597:16607	1596669	0	True				
ANR	1596878	RelationalExpression	nimm <= 0x7		1596669	0		<=			
ANR	1596879	Identifier	nimm		1596669	0					
ANR	1596880	PrimaryExpression	0x7		1596669	1					
ANR	1596881	ReturnStatement	"return push_inst16 ( compiler , SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	550:5:16615:16686	1596669	1	True				
ANR	1596882	CallExpression	"push_inst16 ( compiler , SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) )"		1596669	0					
ANR	1596883	Callee	push_inst16		1596669	0					
ANR	1596884	Identifier	push_inst16		1596669	0					
ANR	1596885	ArgumentList	compiler		1596669	1					
ANR	1596886	Argument	compiler		1596669	0					
ANR	1596887	Identifier	compiler		1596669	0					
ANR	1596888	Argument	SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1					
ANR	1596889	InclusiveOrExpression	SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1596669	0		|			
ANR	1596890	Identifier	SUBSI3		1596669	0					
ANR	1596891	InclusiveOrExpression	IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1596892	CallExpression	IMM3 ( nimm )		1596669	0					
ANR	1596893	Callee	IMM3		1596669	0					
ANR	1596894	Identifier	IMM3		1596669	0					
ANR	1596895	ArgumentList	nimm		1596669	1					
ANR	1596896	Argument	nimm		1596669	0					
ANR	1596897	Identifier	nimm		1596669	0					
ANR	1596898	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1596899	CallExpression	RD3 ( dst )		1596669	0					
ANR	1596900	Callee	RD3		1596669	0					
ANR	1596901	Identifier	RD3		1596669	0					
ANR	1596902	ArgumentList	dst		1596669	1					
ANR	1596903	Argument	dst		1596669	0					
ANR	1596904	Identifier	dst		1596669	0					
ANR	1596905	CallExpression	RN3 ( reg )		1596669	1					
ANR	1596906	Callee	RN3		1596669	0					
ANR	1596907	Identifier	RN3		1596669	0					
ANR	1596908	ArgumentList	reg		1596669	1					
ANR	1596909	Argument	reg		1596669	0					
ANR	1596910	Identifier	reg		1596669	0					
ANR	1596911	IfStatement	if ( reg == dst )		1596669	2					
ANR	1596912	Condition	reg == dst	551:8:16696:16705	1596669	0	True				
ANR	1596913	EqualityExpression	reg == dst		1596669	0		==			
ANR	1596914	Identifier	reg		1596669	0					
ANR	1596915	Identifier	dst		1596669	1					
ANR	1596916	CompoundStatement		40:20:1333:1333	1596669	1					
ANR	1596917	IfStatement	if ( imm <= 0xff )		1596669	0					
ANR	1596918	Condition	imm <= 0xff	552:9:16719:16729	1596669	0	True				
ANR	1596919	RelationalExpression	imm <= 0xff		1596669	0		<=			
ANR	1596920	Identifier	imm		1596669	0					
ANR	1596921	PrimaryExpression	0xff		1596669	1					
ANR	1596922	ReturnStatement	"return push_inst16 ( compiler , ADDSI8 | IMM8 ( imm ) | RDN3 ( dst ) ) ;"	553:6:16738:16798	1596669	1	True				
ANR	1596923	CallExpression	"push_inst16 ( compiler , ADDSI8 | IMM8 ( imm ) | RDN3 ( dst ) )"		1596669	0					
ANR	1596924	Callee	push_inst16		1596669	0					
ANR	1596925	Identifier	push_inst16		1596669	0					
ANR	1596926	ArgumentList	compiler		1596669	1					
ANR	1596927	Argument	compiler		1596669	0					
ANR	1596928	Identifier	compiler		1596669	0					
ANR	1596929	Argument	ADDSI8 | IMM8 ( imm ) | RDN3 ( dst )		1596669	1					
ANR	1596930	InclusiveOrExpression	ADDSI8 | IMM8 ( imm ) | RDN3 ( dst )		1596669	0		|			
ANR	1596931	Identifier	ADDSI8		1596669	0					
ANR	1596932	InclusiveOrExpression	IMM8 ( imm ) | RDN3 ( dst )		1596669	1		|			
ANR	1596933	CallExpression	IMM8 ( imm )		1596669	0					
ANR	1596934	Callee	IMM8		1596669	0					
ANR	1596935	Identifier	IMM8		1596669	0					
ANR	1596936	ArgumentList	imm		1596669	1					
ANR	1596937	Argument	imm		1596669	0					
ANR	1596938	Identifier	imm		1596669	0					
ANR	1596939	CallExpression	RDN3 ( dst )		1596669	1					
ANR	1596940	Callee	RDN3		1596669	0					
ANR	1596941	Identifier	RDN3		1596669	0					
ANR	1596942	ArgumentList	dst		1596669	1					
ANR	1596943	Argument	dst		1596669	0					
ANR	1596944	Identifier	dst		1596669	0					
ANR	1596945	IfStatement	if ( nimm <= 0xff )		1596669	1					
ANR	1596946	Condition	nimm <= 0xff	554:9:16809:16820	1596669	0	True				
ANR	1596947	RelationalExpression	nimm <= 0xff		1596669	0		<=			
ANR	1596948	Identifier	nimm		1596669	0					
ANR	1596949	PrimaryExpression	0xff		1596669	1					
ANR	1596950	ReturnStatement	"return push_inst16 ( compiler , SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst ) ) ;"	555:6:16829:16890	1596669	1	True				
ANR	1596951	CallExpression	"push_inst16 ( compiler , SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst ) )"		1596669	0					
ANR	1596952	Callee	push_inst16		1596669	0					
ANR	1596953	Identifier	push_inst16		1596669	0					
ANR	1596954	ArgumentList	compiler		1596669	1					
ANR	1596955	Argument	compiler		1596669	0					
ANR	1596956	Identifier	compiler		1596669	0					
ANR	1596957	Argument	SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1596669	1					
ANR	1596958	InclusiveOrExpression	SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1596669	0		|			
ANR	1596959	Identifier	SUBSI8		1596669	0					
ANR	1596960	InclusiveOrExpression	IMM8 ( nimm ) | RDN3 ( dst )		1596669	1		|			
ANR	1596961	CallExpression	IMM8 ( nimm )		1596669	0					
ANR	1596962	Callee	IMM8		1596669	0					
ANR	1596963	Identifier	IMM8		1596669	0					
ANR	1596964	ArgumentList	nimm		1596669	1					
ANR	1596965	Argument	nimm		1596669	0					
ANR	1596966	Identifier	nimm		1596669	0					
ANR	1596967	CallExpression	RDN3 ( dst )		1596669	1					
ANR	1596968	Callee	RDN3		1596669	0					
ANR	1596969	Identifier	RDN3		1596669	0					
ANR	1596970	ArgumentList	dst		1596669	1					
ANR	1596971	Argument	dst		1596669	0					
ANR	1596972	Identifier	dst		1596669	0					
ANR	1596973	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1596669	12					
ANR	1596974	Condition	! ( flags & SET_FLAGS )	558:7:16910:16929	1596669	0	True				
ANR	1596975	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1596976	UnaryOperator	!		1596669	0					
ANR	1596977	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1596978	Identifier	flags		1596669	0					
ANR	1596979	Identifier	SET_FLAGS		1596669	1					
ANR	1596980	CompoundStatement		47:29:1557:1557	1596669	1					
ANR	1596981	IfStatement	if ( imm <= 0xfff )		1596669	0					
ANR	1596982	Condition	imm <= 0xfff	559:8:16942:16953	1596669	0	True				
ANR	1596983	RelationalExpression	imm <= 0xfff		1596669	0		<=			
ANR	1596984	Identifier	imm		1596669	0					
ANR	1596985	PrimaryExpression	0xfff		1596669	1					
ANR	1596986	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) ) ;"	560:5:16961:17031	1596669	1	True				
ANR	1596987	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) )"		1596669	0					
ANR	1596988	Callee	push_inst32		1596669	0					
ANR	1596989	Identifier	push_inst32		1596669	0					
ANR	1596990	ArgumentList	compiler		1596669	1					
ANR	1596991	Argument	compiler		1596669	0					
ANR	1596992	Identifier	compiler		1596669	0					
ANR	1596993	Argument	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1596669	1					
ANR	1596994	InclusiveOrExpression	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1596669	0		|			
ANR	1596995	Identifier	ADDWI		1596669	0					
ANR	1596996	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1596669	1		|			
ANR	1596997	CallExpression	RD4 ( dst )		1596669	0					
ANR	1596998	Callee	RD4		1596669	0					
ANR	1596999	Identifier	RD4		1596669	0					
ANR	1597000	ArgumentList	dst		1596669	1					
ANR	1597001	Argument	dst		1596669	0					
ANR	1597002	Identifier	dst		1596669	0					
ANR	1597003	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( imm )		1596669	1		|			
ANR	1597004	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597005	Callee	RN4		1596669	0					
ANR	1597006	Identifier	RN4		1596669	0					
ANR	1597007	ArgumentList	reg		1596669	1					
ANR	1597008	Argument	reg		1596669	0					
ANR	1597009	Identifier	reg		1596669	0					
ANR	1597010	CallExpression	IMM12 ( imm )		1596669	1					
ANR	1597011	Callee	IMM12		1596669	0					
ANR	1597012	Identifier	IMM12		1596669	0					
ANR	1597013	ArgumentList	imm		1596669	1					
ANR	1597014	Argument	imm		1596669	0					
ANR	1597015	Identifier	imm		1596669	0					
ANR	1597016	IfStatement	if ( nimm <= 0xfff )		1596669	1					
ANR	1597017	Condition	nimm <= 0xfff	561:8:17041:17053	1596669	0	True				
ANR	1597018	RelationalExpression	nimm <= 0xfff		1596669	0		<=			
ANR	1597019	Identifier	nimm		1596669	0					
ANR	1597020	PrimaryExpression	0xfff		1596669	1					
ANR	1597021	ReturnStatement	"return push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) ) ;"	562:5:17061:17132	1596669	1	True				
ANR	1597022	CallExpression	"push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) )"		1596669	0					
ANR	1597023	Callee	push_inst32		1596669	0					
ANR	1597024	Identifier	push_inst32		1596669	0					
ANR	1597025	ArgumentList	compiler		1596669	1					
ANR	1597026	Argument	compiler		1596669	0					
ANR	1597027	Identifier	compiler		1596669	0					
ANR	1597028	Argument	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1596669	1					
ANR	1597029	InclusiveOrExpression	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1596669	0		|			
ANR	1597030	Identifier	SUBWI		1596669	0					
ANR	1597031	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1596669	1		|			
ANR	1597032	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597033	Callee	RD4		1596669	0					
ANR	1597034	Identifier	RD4		1596669	0					
ANR	1597035	ArgumentList	dst		1596669	1					
ANR	1597036	Argument	dst		1596669	0					
ANR	1597037	Identifier	dst		1596669	0					
ANR	1597038	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( nimm )		1596669	1		|			
ANR	1597039	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597040	Callee	RN4		1596669	0					
ANR	1597041	Identifier	RN4		1596669	0					
ANR	1597042	ArgumentList	reg		1596669	1					
ANR	1597043	Argument	reg		1596669	0					
ANR	1597044	Identifier	reg		1596669	0					
ANR	1597045	CallExpression	IMM12 ( nimm )		1596669	1					
ANR	1597046	Callee	IMM12		1596669	0					
ANR	1597047	Identifier	IMM12		1596669	0					
ANR	1597048	ArgumentList	nimm		1596669	1					
ANR	1597049	Argument	nimm		1596669	0					
ANR	1597050	Identifier	nimm		1596669	0					
ANR	1597051	ExpressionStatement	imm = get_imm ( imm )	564:3:17142:17160	1596669	13	True				
ANR	1597052	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597053	Identifier	imm		1596669	0					
ANR	1597054	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597055	Callee	get_imm		1596669	0					
ANR	1597056	Identifier	get_imm		1596669	0					
ANR	1597057	ArgumentList	imm		1596669	1					
ANR	1597058	Argument	imm		1596669	0					
ANR	1597059	Identifier	imm		1596669	0					
ANR	1597060	IfStatement	if ( imm != INVALID_IMM )		1596669	14					
ANR	1597061	Condition	imm != INVALID_IMM	565:7:17169:17186	1596669	0	True				
ANR	1597062	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597063	Identifier	imm		1596669	0					
ANR	1597064	Identifier	INVALID_IMM		1596669	1					
ANR	1597065	ReturnStatement	"return push_inst32 ( compiler , ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	566:4:17193:17279	1596669	1	True				
ANR	1597066	CallExpression	"push_inst32 ( compiler , ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597067	Callee	push_inst32		1596669	0					
ANR	1597068	Identifier	push_inst32		1596669	0					
ANR	1597069	ArgumentList	compiler		1596669	1					
ANR	1597070	Argument	compiler		1596669	0					
ANR	1597071	Identifier	compiler		1596669	0					
ANR	1597072	Argument	ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597073	InclusiveOrExpression	ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597074	Identifier	ADD_WI		1596669	0					
ANR	1597075	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597076	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597077	Identifier	flags		1596669	0					
ANR	1597078	Identifier	SET_FLAGS		1596669	1					
ANR	1597079	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597080	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597081	Callee	RD4		1596669	0					
ANR	1597082	Identifier	RD4		1596669	0					
ANR	1597083	ArgumentList	dst		1596669	1					
ANR	1597084	Argument	dst		1596669	0					
ANR	1597085	Identifier	dst		1596669	0					
ANR	1597086	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597087	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597088	Callee	RN4		1596669	0					
ANR	1597089	Identifier	RN4		1596669	0					
ANR	1597090	ArgumentList	reg		1596669	1					
ANR	1597091	Argument	reg		1596669	0					
ANR	1597092	Identifier	reg		1596669	0					
ANR	1597093	Identifier	imm		1596669	1					
ANR	1597094	BreakStatement	break ;	567:3:17284:17289	1596669	15	True				
ANR	1597095	Label	case SLJIT_ADDC :	568:2:17293:17308	1596669	16	True				
ANR	1597096	Identifier	SLJIT_ADDC		1596669	0					
ANR	1597097	ExpressionStatement	imm = get_imm ( imm )	569:3:17313:17331	1596669	17	True				
ANR	1597098	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597099	Identifier	imm		1596669	0					
ANR	1597100	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597101	Callee	get_imm		1596669	0					
ANR	1597102	Identifier	get_imm		1596669	0					
ANR	1597103	ArgumentList	imm		1596669	1					
ANR	1597104	Argument	imm		1596669	0					
ANR	1597105	Identifier	imm		1596669	0					
ANR	1597106	IfStatement	if ( imm != INVALID_IMM )		1596669	18					
ANR	1597107	Condition	imm != INVALID_IMM	570:7:17340:17357	1596669	0	True				
ANR	1597108	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597109	Identifier	imm		1596669	0					
ANR	1597110	Identifier	INVALID_IMM		1596669	1					
ANR	1597111	ReturnStatement	"return push_inst32 ( compiler , ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	571:4:17364:17448	1596669	1	True				
ANR	1597112	CallExpression	"push_inst32 ( compiler , ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597113	Callee	push_inst32		1596669	0					
ANR	1597114	Identifier	push_inst32		1596669	0					
ANR	1597115	ArgumentList	compiler		1596669	1					
ANR	1597116	Argument	compiler		1596669	0					
ANR	1597117	Identifier	compiler		1596669	0					
ANR	1597118	Argument	ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597119	InclusiveOrExpression	ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597120	Identifier	ADCI		1596669	0					
ANR	1597121	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597122	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597123	Identifier	flags		1596669	0					
ANR	1597124	Identifier	SET_FLAGS		1596669	1					
ANR	1597125	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597126	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597127	Callee	RD4		1596669	0					
ANR	1597128	Identifier	RD4		1596669	0					
ANR	1597129	ArgumentList	dst		1596669	1					
ANR	1597130	Argument	dst		1596669	0					
ANR	1597131	Identifier	dst		1596669	0					
ANR	1597132	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597133	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597134	Callee	RN4		1596669	0					
ANR	1597135	Identifier	RN4		1596669	0					
ANR	1597136	ArgumentList	reg		1596669	1					
ANR	1597137	Argument	reg		1596669	0					
ANR	1597138	Identifier	reg		1596669	0					
ANR	1597139	Identifier	imm		1596669	1					
ANR	1597140	BreakStatement	break ;	572:3:17453:17458	1596669	19	True				
ANR	1597141	Label	case SLJIT_SUB :	573:2:17462:17476	1596669	20	True				
ANR	1597142	Identifier	SLJIT_SUB		1596669	0					
ANR	1597143	IfStatement	if ( flags & ARG1_IMM )		1596669	21					
ANR	1597144	Condition	flags & ARG1_IMM	574:7:17485:17500	1596669	0	True				
ANR	1597145	BitAndExpression	flags & ARG1_IMM		1596669	0		&			
ANR	1597146	Identifier	flags		1596669	0					
ANR	1597147	Identifier	ARG1_IMM		1596669	1					
ANR	1597148	CompoundStatement		63:25:2128:2128	1596669	1					
ANR	1597149	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && imm == 0 && IS_2_LO_REGS ( reg , dst ) )"		1596669	0					
ANR	1597150	Condition	"! ( flags & KEEP_FLAGS ) && imm == 0 && IS_2_LO_REGS ( reg , dst )"	575:8:17513:17571	1596669	0	True				
ANR	1597151	AndExpression	"! ( flags & KEEP_FLAGS ) && imm == 0 && IS_2_LO_REGS ( reg , dst )"		1596669	0		&&			
ANR	1597152	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1597153	UnaryOperator	!		1596669	0					
ANR	1597154	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1597155	Identifier	flags		1596669	0					
ANR	1597156	Identifier	KEEP_FLAGS		1596669	1					
ANR	1597157	AndExpression	"imm == 0 && IS_2_LO_REGS ( reg , dst )"		1596669	1		&&			
ANR	1597158	EqualityExpression	imm == 0		1596669	0		==			
ANR	1597159	Identifier	imm		1596669	0					
ANR	1597160	PrimaryExpression	0		1596669	1					
ANR	1597161	CallExpression	"IS_2_LO_REGS ( reg , dst )"		1596669	1					
ANR	1597162	Callee	IS_2_LO_REGS		1596669	0					
ANR	1597163	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1597164	ArgumentList	reg		1596669	1					
ANR	1597165	Argument	reg		1596669	0					
ANR	1597166	Identifier	reg		1596669	0					
ANR	1597167	Argument	dst		1596669	1					
ANR	1597168	Identifier	dst		1596669	0					
ANR	1597169	ReturnStatement	"return push_inst16 ( compiler , RSBSI | RD3 ( dst ) | RN3 ( reg ) ) ;"	576:5:17579:17636	1596669	1	True				
ANR	1597170	CallExpression	"push_inst16 ( compiler , RSBSI | RD3 ( dst ) | RN3 ( reg ) )"		1596669	0					
ANR	1597171	Callee	push_inst16		1596669	0					
ANR	1597172	Identifier	push_inst16		1596669	0					
ANR	1597173	ArgumentList	compiler		1596669	1					
ANR	1597174	Argument	compiler		1596669	0					
ANR	1597175	Identifier	compiler		1596669	0					
ANR	1597176	Argument	RSBSI | RD3 ( dst ) | RN3 ( reg )		1596669	1					
ANR	1597177	InclusiveOrExpression	RSBSI | RD3 ( dst ) | RN3 ( reg )		1596669	0		|			
ANR	1597178	Identifier	RSBSI		1596669	0					
ANR	1597179	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1597180	CallExpression	RD3 ( dst )		1596669	0					
ANR	1597181	Callee	RD3		1596669	0					
ANR	1597182	Identifier	RD3		1596669	0					
ANR	1597183	ArgumentList	dst		1596669	1					
ANR	1597184	Argument	dst		1596669	0					
ANR	1597185	Identifier	dst		1596669	0					
ANR	1597186	CallExpression	RN3 ( reg )		1596669	1					
ANR	1597187	Callee	RN3		1596669	0					
ANR	1597188	Identifier	RN3		1596669	0					
ANR	1597189	ArgumentList	reg		1596669	1					
ANR	1597190	Argument	reg		1596669	0					
ANR	1597191	Identifier	reg		1596669	0					
ANR	1597192	ExpressionStatement	imm = get_imm ( imm )	577:4:17642:17660	1596669	1	True				
ANR	1597193	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597194	Identifier	imm		1596669	0					
ANR	1597195	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597196	Callee	get_imm		1596669	0					
ANR	1597197	Identifier	get_imm		1596669	0					
ANR	1597198	ArgumentList	imm		1596669	1					
ANR	1597199	Argument	imm		1596669	0					
ANR	1597200	Identifier	imm		1596669	0					
ANR	1597201	IfStatement	if ( imm != INVALID_IMM )		1596669	2					
ANR	1597202	Condition	imm != INVALID_IMM	578:8:17670:17687	1596669	0	True				
ANR	1597203	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597204	Identifier	imm		1596669	0					
ANR	1597205	Identifier	INVALID_IMM		1596669	1					
ANR	1597206	ReturnStatement	"return push_inst32 ( compiler , RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	579:5:17695:17781	1596669	1	True				
ANR	1597207	CallExpression	"push_inst32 ( compiler , RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597208	Callee	push_inst32		1596669	0					
ANR	1597209	Identifier	push_inst32		1596669	0					
ANR	1597210	ArgumentList	compiler		1596669	1					
ANR	1597211	Argument	compiler		1596669	0					
ANR	1597212	Identifier	compiler		1596669	0					
ANR	1597213	Argument	RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597214	InclusiveOrExpression	RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597215	Identifier	RSB_WI		1596669	0					
ANR	1597216	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597217	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597218	Identifier	flags		1596669	0					
ANR	1597219	Identifier	SET_FLAGS		1596669	1					
ANR	1597220	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597221	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597222	Callee	RD4		1596669	0					
ANR	1597223	Identifier	RD4		1596669	0					
ANR	1597224	ArgumentList	dst		1596669	1					
ANR	1597225	Argument	dst		1596669	0					
ANR	1597226	Identifier	dst		1596669	0					
ANR	1597227	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597228	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597229	Callee	RN4		1596669	0					
ANR	1597230	Identifier	RN4		1596669	0					
ANR	1597231	ArgumentList	reg		1596669	1					
ANR	1597232	Argument	reg		1596669	0					
ANR	1597233	Identifier	reg		1596669	0					
ANR	1597234	Identifier	imm		1596669	1					
ANR	1597235	BreakStatement	break ;	580:4:17787:17792	1596669	3	True				
ANR	1597236	ExpressionStatement	nimm = - imm	582:3:17802:17813	1596669	22	True				
ANR	1597237	AssignmentExpression	nimm = - imm		1596669	0		=			
ANR	1597238	Identifier	nimm		1596669	0					
ANR	1597239	UnaryOperationExpression	- imm		1596669	1					
ANR	1597240	UnaryOperator	-		1596669	0					
ANR	1597241	Identifier	imm		1596669	1					
ANR	1597242	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst ) )"		1596669	23					
ANR	1597243	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"	583:7:17822:17868	1596669	0	True				
ANR	1597244	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"		1596669	0		&&			
ANR	1597245	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1597246	UnaryOperator	!		1596669	0					
ANR	1597247	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1597248	Identifier	flags		1596669	0					
ANR	1597249	Identifier	KEEP_FLAGS		1596669	1					
ANR	1597250	CallExpression	"IS_2_LO_REGS ( reg , dst )"		1596669	1					
ANR	1597251	Callee	IS_2_LO_REGS		1596669	0					
ANR	1597252	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1597253	ArgumentList	reg		1596669	1					
ANR	1597254	Argument	reg		1596669	0					
ANR	1597255	Identifier	reg		1596669	0					
ANR	1597256	Argument	dst		1596669	1					
ANR	1597257	Identifier	dst		1596669	0					
ANR	1597258	CompoundStatement		72:56:2496:2496	1596669	1					
ANR	1597259	IfStatement	if ( imm <= 0x7 )		1596669	0					
ANR	1597260	Condition	imm <= 0x7	584:8:17881:17890	1596669	0	True				
ANR	1597261	RelationalExpression	imm <= 0x7		1596669	0		<=			
ANR	1597262	Identifier	imm		1596669	0					
ANR	1597263	PrimaryExpression	0x7		1596669	1					
ANR	1597264	ReturnStatement	"return push_inst16 ( compiler , SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	585:5:17898:17968	1596669	1	True				
ANR	1597265	CallExpression	"push_inst16 ( compiler , SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) )"		1596669	0					
ANR	1597266	Callee	push_inst16		1596669	0					
ANR	1597267	Identifier	push_inst16		1596669	0					
ANR	1597268	ArgumentList	compiler		1596669	1					
ANR	1597269	Argument	compiler		1596669	0					
ANR	1597270	Identifier	compiler		1596669	0					
ANR	1597271	Argument	SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1					
ANR	1597272	InclusiveOrExpression	SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1596669	0		|			
ANR	1597273	Identifier	SUBSI3		1596669	0					
ANR	1597274	InclusiveOrExpression	IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1597275	CallExpression	IMM3 ( imm )		1596669	0					
ANR	1597276	Callee	IMM3		1596669	0					
ANR	1597277	Identifier	IMM3		1596669	0					
ANR	1597278	ArgumentList	imm		1596669	1					
ANR	1597279	Argument	imm		1596669	0					
ANR	1597280	Identifier	imm		1596669	0					
ANR	1597281	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1597282	CallExpression	RD3 ( dst )		1596669	0					
ANR	1597283	Callee	RD3		1596669	0					
ANR	1597284	Identifier	RD3		1596669	0					
ANR	1597285	ArgumentList	dst		1596669	1					
ANR	1597286	Argument	dst		1596669	0					
ANR	1597287	Identifier	dst		1596669	0					
ANR	1597288	CallExpression	RN3 ( reg )		1596669	1					
ANR	1597289	Callee	RN3		1596669	0					
ANR	1597290	Identifier	RN3		1596669	0					
ANR	1597291	ArgumentList	reg		1596669	1					
ANR	1597292	Argument	reg		1596669	0					
ANR	1597293	Identifier	reg		1596669	0					
ANR	1597294	IfStatement	if ( nimm <= 0x7 )		1596669	1					
ANR	1597295	Condition	nimm <= 0x7	586:8:17978:17988	1596669	0	True				
ANR	1597296	RelationalExpression	nimm <= 0x7		1596669	0		<=			
ANR	1597297	Identifier	nimm		1596669	0					
ANR	1597298	PrimaryExpression	0x7		1596669	1					
ANR	1597299	ReturnStatement	"return push_inst16 ( compiler , ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	587:5:17996:18067	1596669	1	True				
ANR	1597300	CallExpression	"push_inst16 ( compiler , ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) )"		1596669	0					
ANR	1597301	Callee	push_inst16		1596669	0					
ANR	1597302	Identifier	push_inst16		1596669	0					
ANR	1597303	ArgumentList	compiler		1596669	1					
ANR	1597304	Argument	compiler		1596669	0					
ANR	1597305	Identifier	compiler		1596669	0					
ANR	1597306	Argument	ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1					
ANR	1597307	InclusiveOrExpression	ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1596669	0		|			
ANR	1597308	Identifier	ADDSI3		1596669	0					
ANR	1597309	InclusiveOrExpression	IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1597310	CallExpression	IMM3 ( nimm )		1596669	0					
ANR	1597311	Callee	IMM3		1596669	0					
ANR	1597312	Identifier	IMM3		1596669	0					
ANR	1597313	ArgumentList	nimm		1596669	1					
ANR	1597314	Argument	nimm		1596669	0					
ANR	1597315	Identifier	nimm		1596669	0					
ANR	1597316	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1597317	CallExpression	RD3 ( dst )		1596669	0					
ANR	1597318	Callee	RD3		1596669	0					
ANR	1597319	Identifier	RD3		1596669	0					
ANR	1597320	ArgumentList	dst		1596669	1					
ANR	1597321	Argument	dst		1596669	0					
ANR	1597322	Identifier	dst		1596669	0					
ANR	1597323	CallExpression	RN3 ( reg )		1596669	1					
ANR	1597324	Callee	RN3		1596669	0					
ANR	1597325	Identifier	RN3		1596669	0					
ANR	1597326	ArgumentList	reg		1596669	1					
ANR	1597327	Argument	reg		1596669	0					
ANR	1597328	Identifier	reg		1596669	0					
ANR	1597329	IfStatement	if ( reg == dst )		1596669	2					
ANR	1597330	Condition	reg == dst	588:8:18077:18086	1596669	0	True				
ANR	1597331	EqualityExpression	reg == dst		1596669	0		==			
ANR	1597332	Identifier	reg		1596669	0					
ANR	1597333	Identifier	dst		1596669	1					
ANR	1597334	CompoundStatement		77:20:2714:2714	1596669	1					
ANR	1597335	IfStatement	if ( imm <= 0xff )		1596669	0					
ANR	1597336	Condition	imm <= 0xff	589:9:18100:18110	1596669	0	True				
ANR	1597337	RelationalExpression	imm <= 0xff		1596669	0		<=			
ANR	1597338	Identifier	imm		1596669	0					
ANR	1597339	PrimaryExpression	0xff		1596669	1					
ANR	1597340	ReturnStatement	"return push_inst16 ( compiler , SUBSI8 | IMM8 ( imm ) | RDN3 ( dst ) ) ;"	590:6:18119:18179	1596669	1	True				
ANR	1597341	CallExpression	"push_inst16 ( compiler , SUBSI8 | IMM8 ( imm ) | RDN3 ( dst ) )"		1596669	0					
ANR	1597342	Callee	push_inst16		1596669	0					
ANR	1597343	Identifier	push_inst16		1596669	0					
ANR	1597344	ArgumentList	compiler		1596669	1					
ANR	1597345	Argument	compiler		1596669	0					
ANR	1597346	Identifier	compiler		1596669	0					
ANR	1597347	Argument	SUBSI8 | IMM8 ( imm ) | RDN3 ( dst )		1596669	1					
ANR	1597348	InclusiveOrExpression	SUBSI8 | IMM8 ( imm ) | RDN3 ( dst )		1596669	0		|			
ANR	1597349	Identifier	SUBSI8		1596669	0					
ANR	1597350	InclusiveOrExpression	IMM8 ( imm ) | RDN3 ( dst )		1596669	1		|			
ANR	1597351	CallExpression	IMM8 ( imm )		1596669	0					
ANR	1597352	Callee	IMM8		1596669	0					
ANR	1597353	Identifier	IMM8		1596669	0					
ANR	1597354	ArgumentList	imm		1596669	1					
ANR	1597355	Argument	imm		1596669	0					
ANR	1597356	Identifier	imm		1596669	0					
ANR	1597357	CallExpression	RDN3 ( dst )		1596669	1					
ANR	1597358	Callee	RDN3		1596669	0					
ANR	1597359	Identifier	RDN3		1596669	0					
ANR	1597360	ArgumentList	dst		1596669	1					
ANR	1597361	Argument	dst		1596669	0					
ANR	1597362	Identifier	dst		1596669	0					
ANR	1597363	IfStatement	if ( nimm <= 0xff )		1596669	1					
ANR	1597364	Condition	nimm <= 0xff	591:9:18190:18201	1596669	0	True				
ANR	1597365	RelationalExpression	nimm <= 0xff		1596669	0		<=			
ANR	1597366	Identifier	nimm		1596669	0					
ANR	1597367	PrimaryExpression	0xff		1596669	1					
ANR	1597368	ReturnStatement	"return push_inst16 ( compiler , ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst ) ) ;"	592:6:18210:18271	1596669	1	True				
ANR	1597369	CallExpression	"push_inst16 ( compiler , ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst ) )"		1596669	0					
ANR	1597370	Callee	push_inst16		1596669	0					
ANR	1597371	Identifier	push_inst16		1596669	0					
ANR	1597372	ArgumentList	compiler		1596669	1					
ANR	1597373	Argument	compiler		1596669	0					
ANR	1597374	Identifier	compiler		1596669	0					
ANR	1597375	Argument	ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1596669	1					
ANR	1597376	InclusiveOrExpression	ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1596669	0		|			
ANR	1597377	Identifier	ADDSI8		1596669	0					
ANR	1597378	InclusiveOrExpression	IMM8 ( nimm ) | RDN3 ( dst )		1596669	1		|			
ANR	1597379	CallExpression	IMM8 ( nimm )		1596669	0					
ANR	1597380	Callee	IMM8		1596669	0					
ANR	1597381	Identifier	IMM8		1596669	0					
ANR	1597382	ArgumentList	nimm		1596669	1					
ANR	1597383	Argument	nimm		1596669	0					
ANR	1597384	Identifier	nimm		1596669	0					
ANR	1597385	CallExpression	RDN3 ( dst )		1596669	1					
ANR	1597386	Callee	RDN3		1596669	0					
ANR	1597387	Identifier	RDN3		1596669	0					
ANR	1597388	ArgumentList	dst		1596669	1					
ANR	1597389	Argument	dst		1596669	0					
ANR	1597390	Identifier	dst		1596669	0					
ANR	1597391	IfStatement	if ( imm <= 0xff && ( flags & UNUSED_RETURN ) )		1596669	3					
ANR	1597392	Condition	imm <= 0xff && ( flags & UNUSED_RETURN )	594:8:18287:18324	1596669	0	True				
ANR	1597393	AndExpression	imm <= 0xff && ( flags & UNUSED_RETURN )		1596669	0		&&			
ANR	1597394	RelationalExpression	imm <= 0xff		1596669	0		<=			
ANR	1597395	Identifier	imm		1596669	0					
ANR	1597396	PrimaryExpression	0xff		1596669	1					
ANR	1597397	BitAndExpression	flags & UNUSED_RETURN		1596669	1		&			
ANR	1597398	Identifier	flags		1596669	0					
ANR	1597399	Identifier	UNUSED_RETURN		1596669	1					
ANR	1597400	ReturnStatement	"return push_inst16 ( compiler , CMPI | IMM8 ( imm ) | RDN3 ( reg ) ) ;"	595:5:18332:18390	1596669	1	True				
ANR	1597401	CallExpression	"push_inst16 ( compiler , CMPI | IMM8 ( imm ) | RDN3 ( reg ) )"		1596669	0					
ANR	1597402	Callee	push_inst16		1596669	0					
ANR	1597403	Identifier	push_inst16		1596669	0					
ANR	1597404	ArgumentList	compiler		1596669	1					
ANR	1597405	Argument	compiler		1596669	0					
ANR	1597406	Identifier	compiler		1596669	0					
ANR	1597407	Argument	CMPI | IMM8 ( imm ) | RDN3 ( reg )		1596669	1					
ANR	1597408	InclusiveOrExpression	CMPI | IMM8 ( imm ) | RDN3 ( reg )		1596669	0		|			
ANR	1597409	Identifier	CMPI		1596669	0					
ANR	1597410	InclusiveOrExpression	IMM8 ( imm ) | RDN3 ( reg )		1596669	1		|			
ANR	1597411	CallExpression	IMM8 ( imm )		1596669	0					
ANR	1597412	Callee	IMM8		1596669	0					
ANR	1597413	Identifier	IMM8		1596669	0					
ANR	1597414	ArgumentList	imm		1596669	1					
ANR	1597415	Argument	imm		1596669	0					
ANR	1597416	Identifier	imm		1596669	0					
ANR	1597417	CallExpression	RDN3 ( reg )		1596669	1					
ANR	1597418	Callee	RDN3		1596669	0					
ANR	1597419	Identifier	RDN3		1596669	0					
ANR	1597420	ArgumentList	reg		1596669	1					
ANR	1597421	Argument	reg		1596669	0					
ANR	1597422	Identifier	reg		1596669	0					
ANR	1597423	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1596669	24					
ANR	1597424	Condition	! ( flags & SET_FLAGS )	597:7:18404:18423	1596669	0	True				
ANR	1597425	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1597426	UnaryOperator	!		1596669	0					
ANR	1597427	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1597428	Identifier	flags		1596669	0					
ANR	1597429	Identifier	SET_FLAGS		1596669	1					
ANR	1597430	CompoundStatement		86:29:3051:3051	1596669	1					
ANR	1597431	IfStatement	if ( imm <= 0xfff )		1596669	0					
ANR	1597432	Condition	imm <= 0xfff	598:8:18436:18447	1596669	0	True				
ANR	1597433	RelationalExpression	imm <= 0xfff		1596669	0		<=			
ANR	1597434	Identifier	imm		1596669	0					
ANR	1597435	PrimaryExpression	0xfff		1596669	1					
ANR	1597436	ReturnStatement	"return push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) ) ;"	599:5:18455:18525	1596669	1	True				
ANR	1597437	CallExpression	"push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) )"		1596669	0					
ANR	1597438	Callee	push_inst32		1596669	0					
ANR	1597439	Identifier	push_inst32		1596669	0					
ANR	1597440	ArgumentList	compiler		1596669	1					
ANR	1597441	Argument	compiler		1596669	0					
ANR	1597442	Identifier	compiler		1596669	0					
ANR	1597443	Argument	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1596669	1					
ANR	1597444	InclusiveOrExpression	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1596669	0		|			
ANR	1597445	Identifier	SUBWI		1596669	0					
ANR	1597446	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1596669	1		|			
ANR	1597447	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597448	Callee	RD4		1596669	0					
ANR	1597449	Identifier	RD4		1596669	0					
ANR	1597450	ArgumentList	dst		1596669	1					
ANR	1597451	Argument	dst		1596669	0					
ANR	1597452	Identifier	dst		1596669	0					
ANR	1597453	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( imm )		1596669	1		|			
ANR	1597454	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597455	Callee	RN4		1596669	0					
ANR	1597456	Identifier	RN4		1596669	0					
ANR	1597457	ArgumentList	reg		1596669	1					
ANR	1597458	Argument	reg		1596669	0					
ANR	1597459	Identifier	reg		1596669	0					
ANR	1597460	CallExpression	IMM12 ( imm )		1596669	1					
ANR	1597461	Callee	IMM12		1596669	0					
ANR	1597462	Identifier	IMM12		1596669	0					
ANR	1597463	ArgumentList	imm		1596669	1					
ANR	1597464	Argument	imm		1596669	0					
ANR	1597465	Identifier	imm		1596669	0					
ANR	1597466	IfStatement	if ( nimm <= 0xfff )		1596669	1					
ANR	1597467	Condition	nimm <= 0xfff	600:8:18535:18547	1596669	0	True				
ANR	1597468	RelationalExpression	nimm <= 0xfff		1596669	0		<=			
ANR	1597469	Identifier	nimm		1596669	0					
ANR	1597470	PrimaryExpression	0xfff		1596669	1					
ANR	1597471	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) ) ;"	601:5:18555:18626	1596669	1	True				
ANR	1597472	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) )"		1596669	0					
ANR	1597473	Callee	push_inst32		1596669	0					
ANR	1597474	Identifier	push_inst32		1596669	0					
ANR	1597475	ArgumentList	compiler		1596669	1					
ANR	1597476	Argument	compiler		1596669	0					
ANR	1597477	Identifier	compiler		1596669	0					
ANR	1597478	Argument	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1596669	1					
ANR	1597479	InclusiveOrExpression	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1596669	0		|			
ANR	1597480	Identifier	ADDWI		1596669	0					
ANR	1597481	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1596669	1		|			
ANR	1597482	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597483	Callee	RD4		1596669	0					
ANR	1597484	Identifier	RD4		1596669	0					
ANR	1597485	ArgumentList	dst		1596669	1					
ANR	1597486	Argument	dst		1596669	0					
ANR	1597487	Identifier	dst		1596669	0					
ANR	1597488	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( nimm )		1596669	1		|			
ANR	1597489	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597490	Callee	RN4		1596669	0					
ANR	1597491	Identifier	RN4		1596669	0					
ANR	1597492	ArgumentList	reg		1596669	1					
ANR	1597493	Argument	reg		1596669	0					
ANR	1597494	Identifier	reg		1596669	0					
ANR	1597495	CallExpression	IMM12 ( nimm )		1596669	1					
ANR	1597496	Callee	IMM12		1596669	0					
ANR	1597497	Identifier	IMM12		1596669	0					
ANR	1597498	ArgumentList	nimm		1596669	1					
ANR	1597499	Argument	nimm		1596669	0					
ANR	1597500	Identifier	nimm		1596669	0					
ANR	1597501	ExpressionStatement	imm = get_imm ( imm )	603:3:18636:18654	1596669	25	True				
ANR	1597502	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597503	Identifier	imm		1596669	0					
ANR	1597504	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597505	Callee	get_imm		1596669	0					
ANR	1597506	Identifier	get_imm		1596669	0					
ANR	1597507	ArgumentList	imm		1596669	1					
ANR	1597508	Argument	imm		1596669	0					
ANR	1597509	Identifier	imm		1596669	0					
ANR	1597510	IfStatement	if ( imm != INVALID_IMM )		1596669	26					
ANR	1597511	Condition	imm != INVALID_IMM	604:7:18663:18680	1596669	0	True				
ANR	1597512	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597513	Identifier	imm		1596669	0					
ANR	1597514	Identifier	INVALID_IMM		1596669	1					
ANR	1597515	ReturnStatement	"return push_inst32 ( compiler , SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	605:4:18687:18773	1596669	1	True				
ANR	1597516	CallExpression	"push_inst32 ( compiler , SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597517	Callee	push_inst32		1596669	0					
ANR	1597518	Identifier	push_inst32		1596669	0					
ANR	1597519	ArgumentList	compiler		1596669	1					
ANR	1597520	Argument	compiler		1596669	0					
ANR	1597521	Identifier	compiler		1596669	0					
ANR	1597522	Argument	SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597523	InclusiveOrExpression	SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597524	Identifier	SUB_WI		1596669	0					
ANR	1597525	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597526	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597527	Identifier	flags		1596669	0					
ANR	1597528	Identifier	SET_FLAGS		1596669	1					
ANR	1597529	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597530	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597531	Callee	RD4		1596669	0					
ANR	1597532	Identifier	RD4		1596669	0					
ANR	1597533	ArgumentList	dst		1596669	1					
ANR	1597534	Argument	dst		1596669	0					
ANR	1597535	Identifier	dst		1596669	0					
ANR	1597536	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597537	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597538	Callee	RN4		1596669	0					
ANR	1597539	Identifier	RN4		1596669	0					
ANR	1597540	ArgumentList	reg		1596669	1					
ANR	1597541	Argument	reg		1596669	0					
ANR	1597542	Identifier	reg		1596669	0					
ANR	1597543	Identifier	imm		1596669	1					
ANR	1597544	BreakStatement	break ;	606:3:18778:18783	1596669	27	True				
ANR	1597545	Label	case SLJIT_SUBC :	607:2:18787:18802	1596669	28	True				
ANR	1597546	Identifier	SLJIT_SUBC		1596669	0					
ANR	1597547	IfStatement	if ( flags & ARG1_IMM )		1596669	29					
ANR	1597548	Condition	flags & ARG1_IMM	608:7:18811:18826	1596669	0	True				
ANR	1597549	BitAndExpression	flags & ARG1_IMM		1596669	0		&			
ANR	1597550	Identifier	flags		1596669	0					
ANR	1597551	Identifier	ARG1_IMM		1596669	1					
ANR	1597552	BreakStatement	break ;	609:4:18833:18838	1596669	1	True				
ANR	1597553	ExpressionStatement	imm = get_imm ( imm )	610:3:18843:18861	1596669	30	True				
ANR	1597554	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597555	Identifier	imm		1596669	0					
ANR	1597556	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597557	Callee	get_imm		1596669	0					
ANR	1597558	Identifier	get_imm		1596669	0					
ANR	1597559	ArgumentList	imm		1596669	1					
ANR	1597560	Argument	imm		1596669	0					
ANR	1597561	Identifier	imm		1596669	0					
ANR	1597562	IfStatement	if ( imm != INVALID_IMM )		1596669	31					
ANR	1597563	Condition	imm != INVALID_IMM	611:7:18870:18887	1596669	0	True				
ANR	1597564	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597565	Identifier	imm		1596669	0					
ANR	1597566	Identifier	INVALID_IMM		1596669	1					
ANR	1597567	ReturnStatement	"return push_inst32 ( compiler , SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	612:4:18894:18978	1596669	1	True				
ANR	1597568	CallExpression	"push_inst32 ( compiler , SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597569	Callee	push_inst32		1596669	0					
ANR	1597570	Identifier	push_inst32		1596669	0					
ANR	1597571	ArgumentList	compiler		1596669	1					
ANR	1597572	Argument	compiler		1596669	0					
ANR	1597573	Identifier	compiler		1596669	0					
ANR	1597574	Argument	SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597575	InclusiveOrExpression	SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597576	Identifier	SBCI		1596669	0					
ANR	1597577	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597578	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597579	Identifier	flags		1596669	0					
ANR	1597580	Identifier	SET_FLAGS		1596669	1					
ANR	1597581	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597582	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597583	Callee	RD4		1596669	0					
ANR	1597584	Identifier	RD4		1596669	0					
ANR	1597585	ArgumentList	dst		1596669	1					
ANR	1597586	Argument	dst		1596669	0					
ANR	1597587	Identifier	dst		1596669	0					
ANR	1597588	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597589	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597590	Callee	RN4		1596669	0					
ANR	1597591	Identifier	RN4		1596669	0					
ANR	1597592	ArgumentList	reg		1596669	1					
ANR	1597593	Argument	reg		1596669	0					
ANR	1597594	Identifier	reg		1596669	0					
ANR	1597595	Identifier	imm		1596669	1					
ANR	1597596	BreakStatement	break ;	613:3:18983:18988	1596669	32	True				
ANR	1597597	Label	case SLJIT_AND :	614:2:18992:19006	1596669	33	True				
ANR	1597598	Identifier	SLJIT_AND		1596669	0					
ANR	1597599	ExpressionStatement	nimm = get_imm ( imm )	615:3:19011:19030	1596669	34	True				
ANR	1597600	AssignmentExpression	nimm = get_imm ( imm )		1596669	0		=			
ANR	1597601	Identifier	nimm		1596669	0					
ANR	1597602	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597603	Callee	get_imm		1596669	0					
ANR	1597604	Identifier	get_imm		1596669	0					
ANR	1597605	ArgumentList	imm		1596669	1					
ANR	1597606	Argument	imm		1596669	0					
ANR	1597607	Identifier	imm		1596669	0					
ANR	1597608	IfStatement	if ( nimm != INVALID_IMM )		1596669	35					
ANR	1597609	Condition	nimm != INVALID_IMM	616:7:19039:19057	1596669	0	True				
ANR	1597610	EqualityExpression	nimm != INVALID_IMM		1596669	0		!=			
ANR	1597611	Identifier	nimm		1596669	0					
ANR	1597612	Identifier	INVALID_IMM		1596669	1					
ANR	1597613	ReturnStatement	"return push_inst32 ( compiler , ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm ) ;"	617:4:19064:19149	1596669	1	True				
ANR	1597614	CallExpression	"push_inst32 ( compiler , ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm )"		1596669	0					
ANR	1597615	Callee	push_inst32		1596669	0					
ANR	1597616	Identifier	push_inst32		1596669	0					
ANR	1597617	ArgumentList	compiler		1596669	1					
ANR	1597618	Argument	compiler		1596669	0					
ANR	1597619	Identifier	compiler		1596669	0					
ANR	1597620	Argument	ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	1					
ANR	1597621	InclusiveOrExpression	ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	0		|			
ANR	1597622	Identifier	ANDI		1596669	0					
ANR	1597623	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	1		|			
ANR	1597624	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597625	Identifier	flags		1596669	0					
ANR	1597626	Identifier	SET_FLAGS		1596669	1					
ANR	1597627	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	1		|			
ANR	1597628	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597629	Callee	RD4		1596669	0					
ANR	1597630	Identifier	RD4		1596669	0					
ANR	1597631	ArgumentList	dst		1596669	1					
ANR	1597632	Argument	dst		1596669	0					
ANR	1597633	Identifier	dst		1596669	0					
ANR	1597634	InclusiveOrExpression	RN4 ( reg ) | nimm		1596669	1		|			
ANR	1597635	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597636	Callee	RN4		1596669	0					
ANR	1597637	Identifier	RN4		1596669	0					
ANR	1597638	ArgumentList	reg		1596669	1					
ANR	1597639	Argument	reg		1596669	0					
ANR	1597640	Identifier	reg		1596669	0					
ANR	1597641	Identifier	nimm		1596669	1					
ANR	1597642	ExpressionStatement	imm = get_imm ( imm )	618:3:19154:19172	1596669	36	True				
ANR	1597643	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597644	Identifier	imm		1596669	0					
ANR	1597645	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597646	Callee	get_imm		1596669	0					
ANR	1597647	Identifier	get_imm		1596669	0					
ANR	1597648	ArgumentList	imm		1596669	1					
ANR	1597649	Argument	imm		1596669	0					
ANR	1597650	Identifier	imm		1596669	0					
ANR	1597651	IfStatement	if ( imm != INVALID_IMM )		1596669	37					
ANR	1597652	Condition	imm != INVALID_IMM	619:7:19181:19198	1596669	0	True				
ANR	1597653	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597654	Identifier	imm		1596669	0					
ANR	1597655	Identifier	INVALID_IMM		1596669	1					
ANR	1597656	ReturnStatement	"return push_inst32 ( compiler , BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	620:4:19205:19289	1596669	1	True				
ANR	1597657	CallExpression	"push_inst32 ( compiler , BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597658	Callee	push_inst32		1596669	0					
ANR	1597659	Identifier	push_inst32		1596669	0					
ANR	1597660	ArgumentList	compiler		1596669	1					
ANR	1597661	Argument	compiler		1596669	0					
ANR	1597662	Identifier	compiler		1596669	0					
ANR	1597663	Argument	BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597664	InclusiveOrExpression	BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597665	Identifier	BICI		1596669	0					
ANR	1597666	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597667	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597668	Identifier	flags		1596669	0					
ANR	1597669	Identifier	SET_FLAGS		1596669	1					
ANR	1597670	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597671	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597672	Callee	RD4		1596669	0					
ANR	1597673	Identifier	RD4		1596669	0					
ANR	1597674	ArgumentList	dst		1596669	1					
ANR	1597675	Argument	dst		1596669	0					
ANR	1597676	Identifier	dst		1596669	0					
ANR	1597677	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597678	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597679	Callee	RN4		1596669	0					
ANR	1597680	Identifier	RN4		1596669	0					
ANR	1597681	ArgumentList	reg		1596669	1					
ANR	1597682	Argument	reg		1596669	0					
ANR	1597683	Identifier	reg		1596669	0					
ANR	1597684	Identifier	imm		1596669	1					
ANR	1597685	BreakStatement	break ;	621:3:19294:19299	1596669	38	True				
ANR	1597686	Label	case SLJIT_OR :	622:2:19303:19316	1596669	39	True				
ANR	1597687	Identifier	SLJIT_OR		1596669	0					
ANR	1597688	ExpressionStatement	nimm = get_imm ( imm )	623:3:19321:19340	1596669	40	True				
ANR	1597689	AssignmentExpression	nimm = get_imm ( imm )		1596669	0		=			
ANR	1597690	Identifier	nimm		1596669	0					
ANR	1597691	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597692	Callee	get_imm		1596669	0					
ANR	1597693	Identifier	get_imm		1596669	0					
ANR	1597694	ArgumentList	imm		1596669	1					
ANR	1597695	Argument	imm		1596669	0					
ANR	1597696	Identifier	imm		1596669	0					
ANR	1597697	IfStatement	if ( nimm != INVALID_IMM )		1596669	41					
ANR	1597698	Condition	nimm != INVALID_IMM	624:7:19349:19367	1596669	0	True				
ANR	1597699	EqualityExpression	nimm != INVALID_IMM		1596669	0		!=			
ANR	1597700	Identifier	nimm		1596669	0					
ANR	1597701	Identifier	INVALID_IMM		1596669	1					
ANR	1597702	ReturnStatement	"return push_inst32 ( compiler , ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm ) ;"	625:4:19374:19459	1596669	1	True				
ANR	1597703	CallExpression	"push_inst32 ( compiler , ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm )"		1596669	0					
ANR	1597704	Callee	push_inst32		1596669	0					
ANR	1597705	Identifier	push_inst32		1596669	0					
ANR	1597706	ArgumentList	compiler		1596669	1					
ANR	1597707	Argument	compiler		1596669	0					
ANR	1597708	Identifier	compiler		1596669	0					
ANR	1597709	Argument	ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	1					
ANR	1597710	InclusiveOrExpression	ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	0		|			
ANR	1597711	Identifier	ORRI		1596669	0					
ANR	1597712	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	1		|			
ANR	1597713	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597714	Identifier	flags		1596669	0					
ANR	1597715	Identifier	SET_FLAGS		1596669	1					
ANR	1597716	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | nimm		1596669	1		|			
ANR	1597717	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597718	Callee	RD4		1596669	0					
ANR	1597719	Identifier	RD4		1596669	0					
ANR	1597720	ArgumentList	dst		1596669	1					
ANR	1597721	Argument	dst		1596669	0					
ANR	1597722	Identifier	dst		1596669	0					
ANR	1597723	InclusiveOrExpression	RN4 ( reg ) | nimm		1596669	1		|			
ANR	1597724	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597725	Callee	RN4		1596669	0					
ANR	1597726	Identifier	RN4		1596669	0					
ANR	1597727	ArgumentList	reg		1596669	1					
ANR	1597728	Argument	reg		1596669	0					
ANR	1597729	Identifier	reg		1596669	0					
ANR	1597730	Identifier	nimm		1596669	1					
ANR	1597731	ExpressionStatement	imm = get_imm ( imm )	626:3:19464:19482	1596669	42	True				
ANR	1597732	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597733	Identifier	imm		1596669	0					
ANR	1597734	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597735	Callee	get_imm		1596669	0					
ANR	1597736	Identifier	get_imm		1596669	0					
ANR	1597737	ArgumentList	imm		1596669	1					
ANR	1597738	Argument	imm		1596669	0					
ANR	1597739	Identifier	imm		1596669	0					
ANR	1597740	IfStatement	if ( imm != INVALID_IMM )		1596669	43					
ANR	1597741	Condition	imm != INVALID_IMM	627:7:19491:19508	1596669	0	True				
ANR	1597742	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597743	Identifier	imm		1596669	0					
ANR	1597744	Identifier	INVALID_IMM		1596669	1					
ANR	1597745	ReturnStatement	"return push_inst32 ( compiler , ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	628:4:19515:19599	1596669	1	True				
ANR	1597746	CallExpression	"push_inst32 ( compiler , ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597747	Callee	push_inst32		1596669	0					
ANR	1597748	Identifier	push_inst32		1596669	0					
ANR	1597749	ArgumentList	compiler		1596669	1					
ANR	1597750	Argument	compiler		1596669	0					
ANR	1597751	Identifier	compiler		1596669	0					
ANR	1597752	Argument	ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597753	InclusiveOrExpression	ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597754	Identifier	ORNI		1596669	0					
ANR	1597755	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597756	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597757	Identifier	flags		1596669	0					
ANR	1597758	Identifier	SET_FLAGS		1596669	1					
ANR	1597759	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597760	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597761	Callee	RD4		1596669	0					
ANR	1597762	Identifier	RD4		1596669	0					
ANR	1597763	ArgumentList	dst		1596669	1					
ANR	1597764	Argument	dst		1596669	0					
ANR	1597765	Identifier	dst		1596669	0					
ANR	1597766	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597767	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597768	Callee	RN4		1596669	0					
ANR	1597769	Identifier	RN4		1596669	0					
ANR	1597770	ArgumentList	reg		1596669	1					
ANR	1597771	Argument	reg		1596669	0					
ANR	1597772	Identifier	reg		1596669	0					
ANR	1597773	Identifier	imm		1596669	1					
ANR	1597774	BreakStatement	break ;	629:3:19604:19609	1596669	44	True				
ANR	1597775	Label	case SLJIT_XOR :	630:2:19613:19627	1596669	45	True				
ANR	1597776	Identifier	SLJIT_XOR		1596669	0					
ANR	1597777	ExpressionStatement	imm = get_imm ( imm )	631:3:19632:19650	1596669	46	True				
ANR	1597778	AssignmentExpression	imm = get_imm ( imm )		1596669	0		=			
ANR	1597779	Identifier	imm		1596669	0					
ANR	1597780	CallExpression	get_imm ( imm )		1596669	1					
ANR	1597781	Callee	get_imm		1596669	0					
ANR	1597782	Identifier	get_imm		1596669	0					
ANR	1597783	ArgumentList	imm		1596669	1					
ANR	1597784	Argument	imm		1596669	0					
ANR	1597785	Identifier	imm		1596669	0					
ANR	1597786	IfStatement	if ( imm != INVALID_IMM )		1596669	47					
ANR	1597787	Condition	imm != INVALID_IMM	632:7:19659:19676	1596669	0	True				
ANR	1597788	EqualityExpression	imm != INVALID_IMM		1596669	0		!=			
ANR	1597789	Identifier	imm		1596669	0					
ANR	1597790	Identifier	INVALID_IMM		1596669	1					
ANR	1597791	ReturnStatement	"return push_inst32 ( compiler , EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	633:4:19683:19767	1596669	1	True				
ANR	1597792	CallExpression	"push_inst32 ( compiler , EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1596669	0					
ANR	1597793	Callee	push_inst32		1596669	0					
ANR	1597794	Identifier	push_inst32		1596669	0					
ANR	1597795	ArgumentList	compiler		1596669	1					
ANR	1597796	Argument	compiler		1596669	0					
ANR	1597797	Identifier	compiler		1596669	0					
ANR	1597798	Argument	EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1					
ANR	1597799	InclusiveOrExpression	EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	0		|			
ANR	1597800	Identifier	EORI		1596669	0					
ANR	1597801	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597802	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597803	Identifier	flags		1596669	0					
ANR	1597804	Identifier	SET_FLAGS		1596669	1					
ANR	1597805	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1596669	1		|			
ANR	1597806	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597807	Callee	RD4		1596669	0					
ANR	1597808	Identifier	RD4		1596669	0					
ANR	1597809	ArgumentList	dst		1596669	1					
ANR	1597810	Argument	dst		1596669	0					
ANR	1597811	Identifier	dst		1596669	0					
ANR	1597812	InclusiveOrExpression	RN4 ( reg ) | imm		1596669	1		|			
ANR	1597813	CallExpression	RN4 ( reg )		1596669	0					
ANR	1597814	Callee	RN4		1596669	0					
ANR	1597815	Identifier	RN4		1596669	0					
ANR	1597816	ArgumentList	reg		1596669	1					
ANR	1597817	Argument	reg		1596669	0					
ANR	1597818	Identifier	reg		1596669	0					
ANR	1597819	Identifier	imm		1596669	1					
ANR	1597820	BreakStatement	break ;	634:3:19772:19777	1596669	48	True				
ANR	1597821	Label	case SLJIT_SHL :	635:2:19781:19795	1596669	49	True				
ANR	1597822	Identifier	SLJIT_SHL		1596669	0					
ANR	1597823	Label	case SLJIT_LSHR :	636:2:19799:19814	1596669	50	True				
ANR	1597824	Identifier	SLJIT_LSHR		1596669	0					
ANR	1597825	Label	case SLJIT_ASHR :	637:2:19818:19833	1596669	51	True				
ANR	1597826	Identifier	SLJIT_ASHR		1596669	0					
ANR	1597827	IfStatement	if ( flags & ARG1_IMM )		1596669	52					
ANR	1597828	Condition	flags & ARG1_IMM	638:7:19842:19857	1596669	0	True				
ANR	1597829	BitAndExpression	flags & ARG1_IMM		1596669	0		&			
ANR	1597830	Identifier	flags		1596669	0					
ANR	1597831	Identifier	ARG1_IMM		1596669	1					
ANR	1597832	BreakStatement	break ;	639:4:19864:19869	1596669	1	True				
ANR	1597833	ExpressionStatement	imm &= 0x1f	640:3:19874:19885	1596669	53	True				
ANR	1597834	AssignmentExpression	imm &= 0x1f		1596669	0		&=			
ANR	1597835	Identifier	imm		1596669	0					
ANR	1597836	PrimaryExpression	0x1f		1596669	1					
ANR	1597837	IfStatement	if ( imm == 0 )		1596669	54					
ANR	1597838	Condition	imm == 0	641:7:19894:19901	1596669	0	True				
ANR	1597839	EqualityExpression	imm == 0		1596669	0		==			
ANR	1597840	Identifier	imm		1596669	0					
ANR	1597841	PrimaryExpression	0		1596669	1					
ANR	1597842	CompoundStatement		130:17:4529:4529	1596669	1					
ANR	1597843	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1596669	0					
ANR	1597844	Condition	! ( flags & SET_FLAGS )	642:8:19914:19933	1596669	0	True				
ANR	1597845	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1597846	UnaryOperator	!		1596669	0					
ANR	1597847	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1597848	Identifier	flags		1596669	0					
ANR	1597849	Identifier	SET_FLAGS		1596669	1					
ANR	1597850	ReturnStatement	"return push_inst16 ( compiler , MOV | SET_REGS44 ( dst , reg ) ) ;"	643:5:19941:19997	1596669	1	True				
ANR	1597851	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( dst , reg ) )"		1596669	0					
ANR	1597852	Callee	push_inst16		1596669	0					
ANR	1597853	Identifier	push_inst16		1596669	0					
ANR	1597854	ArgumentList	compiler		1596669	1					
ANR	1597855	Argument	compiler		1596669	0					
ANR	1597856	Identifier	compiler		1596669	0					
ANR	1597857	Argument	"MOV | SET_REGS44 ( dst , reg )"		1596669	1					
ANR	1597858	InclusiveOrExpression	"MOV | SET_REGS44 ( dst , reg )"		1596669	0		|			
ANR	1597859	Identifier	MOV		1596669	0					
ANR	1597860	CallExpression	"SET_REGS44 ( dst , reg )"		1596669	1					
ANR	1597861	Callee	SET_REGS44		1596669	0					
ANR	1597862	Identifier	SET_REGS44		1596669	0					
ANR	1597863	ArgumentList	dst		1596669	1					
ANR	1597864	Argument	dst		1596669	0					
ANR	1597865	Identifier	dst		1596669	0					
ANR	1597866	Argument	reg		1596669	1					
ANR	1597867	Identifier	reg		1596669	0					
ANR	1597868	IfStatement	"if ( IS_2_LO_REGS ( dst , reg ) )"		1596669	1					
ANR	1597869	Condition	"IS_2_LO_REGS ( dst , reg )"	644:8:20007:20028	1596669	0	True				
ANR	1597870	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1596669	0					
ANR	1597871	Callee	IS_2_LO_REGS		1596669	0					
ANR	1597872	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1597873	ArgumentList	dst		1596669	1					
ANR	1597874	Argument	dst		1596669	0					
ANR	1597875	Identifier	dst		1596669	0					
ANR	1597876	Argument	reg		1596669	1					
ANR	1597877	Identifier	reg		1596669	0					
ANR	1597878	ReturnStatement	"return push_inst16 ( compiler , MOVS | RD3 ( dst ) | RN3 ( reg ) ) ;"	645:5:20036:20092	1596669	1	True				
ANR	1597879	CallExpression	"push_inst16 ( compiler , MOVS | RD3 ( dst ) | RN3 ( reg ) )"		1596669	0					
ANR	1597880	Callee	push_inst16		1596669	0					
ANR	1597881	Identifier	push_inst16		1596669	0					
ANR	1597882	ArgumentList	compiler		1596669	1					
ANR	1597883	Argument	compiler		1596669	0					
ANR	1597884	Identifier	compiler		1596669	0					
ANR	1597885	Argument	MOVS | RD3 ( dst ) | RN3 ( reg )		1596669	1					
ANR	1597886	InclusiveOrExpression	MOVS | RD3 ( dst ) | RN3 ( reg )		1596669	0		|			
ANR	1597887	Identifier	MOVS		1596669	0					
ANR	1597888	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1596669	1		|			
ANR	1597889	CallExpression	RD3 ( dst )		1596669	0					
ANR	1597890	Callee	RD3		1596669	0					
ANR	1597891	Identifier	RD3		1596669	0					
ANR	1597892	ArgumentList	dst		1596669	1					
ANR	1597893	Argument	dst		1596669	0					
ANR	1597894	Identifier	dst		1596669	0					
ANR	1597895	CallExpression	RN3 ( reg )		1596669	1					
ANR	1597896	Callee	RN3		1596669	0					
ANR	1597897	Identifier	RN3		1596669	0					
ANR	1597898	ArgumentList	reg		1596669	1					
ANR	1597899	Argument	reg		1596669	0					
ANR	1597900	Identifier	reg		1596669	0					
ANR	1597901	ReturnStatement	"return push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg ) ) ;"	646:4:20098:20167	1596669	2	True				
ANR	1597902	CallExpression	"push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg ) )"		1596669	0					
ANR	1597903	Callee	push_inst32		1596669	0					
ANR	1597904	Identifier	push_inst32		1596669	0					
ANR	1597905	ArgumentList	compiler		1596669	1					
ANR	1597906	Argument	compiler		1596669	0					
ANR	1597907	Identifier	compiler		1596669	0					
ANR	1597908	Argument	MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg )		1596669	1					
ANR	1597909	InclusiveOrExpression	MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg )		1596669	0		|			
ANR	1597910	Identifier	MOV_W		1596669	0					
ANR	1597911	InclusiveOrExpression	SET_FLAGS | RD4 ( dst ) | RM4 ( reg )		1596669	1		|			
ANR	1597912	Identifier	SET_FLAGS		1596669	0					
ANR	1597913	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg )		1596669	1		|			
ANR	1597914	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597915	Callee	RD4		1596669	0					
ANR	1597916	Identifier	RD4		1596669	0					
ANR	1597917	ArgumentList	dst		1596669	1					
ANR	1597918	Argument	dst		1596669	0					
ANR	1597919	Identifier	dst		1596669	0					
ANR	1597920	CallExpression	RM4 ( reg )		1596669	1					
ANR	1597921	Callee	RM4		1596669	0					
ANR	1597922	Identifier	RM4		1596669	0					
ANR	1597923	ArgumentList	reg		1596669	1					
ANR	1597924	Argument	reg		1596669	0					
ANR	1597925	Identifier	reg		1596669	0					
ANR	1597926	SwitchStatement	switch ( flags & 0xffff )		1596669	55					
ANR	1597927	Condition	flags & 0xffff	648:11:20185:20198	1596669	0	True				
ANR	1597928	BitAndExpression	flags & 0xffff		1596669	0		&			
ANR	1597929	Identifier	flags		1596669	0					
ANR	1597930	PrimaryExpression	0xffff		1596669	1					
ANR	1597931	CompoundStatement		137:27:4826:4826	1596669	1					
ANR	1597932	Label	case SLJIT_SHL :	649:3:20206:20220	1596669	0	True				
ANR	1597933	Identifier	SLJIT_SHL		1596669	0					
ANR	1597934	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg ) )"		1596669	1					
ANR	1597935	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"	650:8:20230:20276	1596669	0	True				
ANR	1597936	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"		1596669	0		&&			
ANR	1597937	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1597938	UnaryOperator	!		1596669	0					
ANR	1597939	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1597940	Identifier	flags		1596669	0					
ANR	1597941	Identifier	KEEP_FLAGS		1596669	1					
ANR	1597942	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1596669	1					
ANR	1597943	Callee	IS_2_LO_REGS		1596669	0					
ANR	1597944	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1597945	ArgumentList	dst		1596669	1					
ANR	1597946	Argument	dst		1596669	0					
ANR	1597947	Identifier	dst		1596669	0					
ANR	1597948	Argument	reg		1596669	1					
ANR	1597949	Identifier	reg		1596669	0					
ANR	1597950	ReturnStatement	"return push_inst16 ( compiler , LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) ) ;"	651:5:20284:20354	1596669	1	True				
ANR	1597951	CallExpression	"push_inst16 ( compiler , LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) )"		1596669	0					
ANR	1597952	Callee	push_inst16		1596669	0					
ANR	1597953	Identifier	push_inst16		1596669	0					
ANR	1597954	ArgumentList	compiler		1596669	1					
ANR	1597955	Argument	compiler		1596669	0					
ANR	1597956	Identifier	compiler		1596669	0					
ANR	1597957	Argument	LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	1					
ANR	1597958	InclusiveOrExpression	LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	0		|			
ANR	1597959	Identifier	LSLSI		1596669	0					
ANR	1597960	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	1		|			
ANR	1597961	CallExpression	RD3 ( dst )		1596669	0					
ANR	1597962	Callee	RD3		1596669	0					
ANR	1597963	Identifier	RD3		1596669	0					
ANR	1597964	ArgumentList	dst		1596669	1					
ANR	1597965	Argument	dst		1596669	0					
ANR	1597966	Identifier	dst		1596669	0					
ANR	1597967	InclusiveOrExpression	RN3 ( reg ) | ( imm << 6 )		1596669	1		|			
ANR	1597968	CallExpression	RN3 ( reg )		1596669	0					
ANR	1597969	Callee	RN3		1596669	0					
ANR	1597970	Identifier	RN3		1596669	0					
ANR	1597971	ArgumentList	reg		1596669	1					
ANR	1597972	Argument	reg		1596669	0					
ANR	1597973	Identifier	reg		1596669	0					
ANR	1597974	ShiftExpression	imm << 6		1596669	1		<<			
ANR	1597975	Identifier	imm		1596669	0					
ANR	1597976	PrimaryExpression	6		1596669	1					
ANR	1597977	ReturnStatement	"return push_inst32 ( compiler , LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) ) ;"	652:4:20360:20452	1596669	2	True				
ANR	1597978	CallExpression	"push_inst32 ( compiler , LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) )"		1596669	0					
ANR	1597979	Callee	push_inst32		1596669	0					
ANR	1597980	Identifier	push_inst32		1596669	0					
ANR	1597981	ArgumentList	compiler		1596669	1					
ANR	1597982	Argument	compiler		1596669	0					
ANR	1597983	Identifier	compiler		1596669	0					
ANR	1597984	Argument	LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1					
ANR	1597985	InclusiveOrExpression	LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	0		|			
ANR	1597986	Identifier	LSL_WI		1596669	0					
ANR	1597987	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1597988	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1597989	Identifier	flags		1596669	0					
ANR	1597990	Identifier	SET_FLAGS		1596669	1					
ANR	1597991	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1597992	CallExpression	RD4 ( dst )		1596669	0					
ANR	1597993	Callee	RD4		1596669	0					
ANR	1597994	Identifier	RD4		1596669	0					
ANR	1597995	ArgumentList	dst		1596669	1					
ANR	1597996	Argument	dst		1596669	0					
ANR	1597997	Identifier	dst		1596669	0					
ANR	1597998	InclusiveOrExpression	RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1597999	CallExpression	RM4 ( reg )		1596669	0					
ANR	1598000	Callee	RM4		1596669	0					
ANR	1598001	Identifier	RM4		1596669	0					
ANR	1598002	ArgumentList	reg		1596669	1					
ANR	1598003	Argument	reg		1596669	0					
ANR	1598004	Identifier	reg		1596669	0					
ANR	1598005	CallExpression	IMM5 ( imm )		1596669	1					
ANR	1598006	Callee	IMM5		1596669	0					
ANR	1598007	Identifier	IMM5		1596669	0					
ANR	1598008	ArgumentList	imm		1596669	1					
ANR	1598009	Argument	imm		1596669	0					
ANR	1598010	Identifier	imm		1596669	0					
ANR	1598011	Label	case SLJIT_LSHR :	653:3:20457:20472	1596669	3	True				
ANR	1598012	Identifier	SLJIT_LSHR		1596669	0					
ANR	1598013	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg ) )"		1596669	4					
ANR	1598014	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"	654:8:20482:20528	1596669	0	True				
ANR	1598015	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"		1596669	0		&&			
ANR	1598016	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1598017	UnaryOperator	!		1596669	0					
ANR	1598018	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1598019	Identifier	flags		1596669	0					
ANR	1598020	Identifier	KEEP_FLAGS		1596669	1					
ANR	1598021	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1596669	1					
ANR	1598022	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598023	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598024	ArgumentList	dst		1596669	1					
ANR	1598025	Argument	dst		1596669	0					
ANR	1598026	Identifier	dst		1596669	0					
ANR	1598027	Argument	reg		1596669	1					
ANR	1598028	Identifier	reg		1596669	0					
ANR	1598029	ReturnStatement	"return push_inst16 ( compiler , LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) ) ;"	655:5:20536:20606	1596669	1	True				
ANR	1598030	CallExpression	"push_inst16 ( compiler , LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) )"		1596669	0					
ANR	1598031	Callee	push_inst16		1596669	0					
ANR	1598032	Identifier	push_inst16		1596669	0					
ANR	1598033	ArgumentList	compiler		1596669	1					
ANR	1598034	Argument	compiler		1596669	0					
ANR	1598035	Identifier	compiler		1596669	0					
ANR	1598036	Argument	LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	1					
ANR	1598037	InclusiveOrExpression	LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	0		|			
ANR	1598038	Identifier	LSRSI		1596669	0					
ANR	1598039	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	1		|			
ANR	1598040	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598041	Callee	RD3		1596669	0					
ANR	1598042	Identifier	RD3		1596669	0					
ANR	1598043	ArgumentList	dst		1596669	1					
ANR	1598044	Argument	dst		1596669	0					
ANR	1598045	Identifier	dst		1596669	0					
ANR	1598046	InclusiveOrExpression	RN3 ( reg ) | ( imm << 6 )		1596669	1		|			
ANR	1598047	CallExpression	RN3 ( reg )		1596669	0					
ANR	1598048	Callee	RN3		1596669	0					
ANR	1598049	Identifier	RN3		1596669	0					
ANR	1598050	ArgumentList	reg		1596669	1					
ANR	1598051	Argument	reg		1596669	0					
ANR	1598052	Identifier	reg		1596669	0					
ANR	1598053	ShiftExpression	imm << 6		1596669	1		<<			
ANR	1598054	Identifier	imm		1596669	0					
ANR	1598055	PrimaryExpression	6		1596669	1					
ANR	1598056	ReturnStatement	"return push_inst32 ( compiler , LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) ) ;"	656:4:20612:20704	1596669	5	True				
ANR	1598057	CallExpression	"push_inst32 ( compiler , LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) )"		1596669	0					
ANR	1598058	Callee	push_inst32		1596669	0					
ANR	1598059	Identifier	push_inst32		1596669	0					
ANR	1598060	ArgumentList	compiler		1596669	1					
ANR	1598061	Argument	compiler		1596669	0					
ANR	1598062	Identifier	compiler		1596669	0					
ANR	1598063	Argument	LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1					
ANR	1598064	InclusiveOrExpression	LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	0		|			
ANR	1598065	Identifier	LSR_WI		1596669	0					
ANR	1598066	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1598067	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1598068	Identifier	flags		1596669	0					
ANR	1598069	Identifier	SET_FLAGS		1596669	1					
ANR	1598070	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1598071	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598072	Callee	RD4		1596669	0					
ANR	1598073	Identifier	RD4		1596669	0					
ANR	1598074	ArgumentList	dst		1596669	1					
ANR	1598075	Argument	dst		1596669	0					
ANR	1598076	Identifier	dst		1596669	0					
ANR	1598077	InclusiveOrExpression	RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1598078	CallExpression	RM4 ( reg )		1596669	0					
ANR	1598079	Callee	RM4		1596669	0					
ANR	1598080	Identifier	RM4		1596669	0					
ANR	1598081	ArgumentList	reg		1596669	1					
ANR	1598082	Argument	reg		1596669	0					
ANR	1598083	Identifier	reg		1596669	0					
ANR	1598084	CallExpression	IMM5 ( imm )		1596669	1					
ANR	1598085	Callee	IMM5		1596669	0					
ANR	1598086	Identifier	IMM5		1596669	0					
ANR	1598087	ArgumentList	imm		1596669	1					
ANR	1598088	Argument	imm		1596669	0					
ANR	1598089	Identifier	imm		1596669	0					
ANR	1598090	Label	default :	657:3:20709:20716	1596669	6	True				
ANR	1598091	Identifier	default		1596669	0					
ANR	1598092	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg ) )"		1596669	7					
ANR	1598093	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"	658:8:20743:20789	1596669	0	True				
ANR	1598094	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"		1596669	0		&&			
ANR	1598095	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1598096	UnaryOperator	!		1596669	0					
ANR	1598097	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1598098	Identifier	flags		1596669	0					
ANR	1598099	Identifier	KEEP_FLAGS		1596669	1					
ANR	1598100	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1596669	1					
ANR	1598101	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598102	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598103	ArgumentList	dst		1596669	1					
ANR	1598104	Argument	dst		1596669	0					
ANR	1598105	Identifier	dst		1596669	0					
ANR	1598106	Argument	reg		1596669	1					
ANR	1598107	Identifier	reg		1596669	0					
ANR	1598108	ReturnStatement	"return push_inst16 ( compiler , ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) ) ;"	659:5:20797:20867	1596669	1	True				
ANR	1598109	CallExpression	"push_inst16 ( compiler , ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) )"		1596669	0					
ANR	1598110	Callee	push_inst16		1596669	0					
ANR	1598111	Identifier	push_inst16		1596669	0					
ANR	1598112	ArgumentList	compiler		1596669	1					
ANR	1598113	Argument	compiler		1596669	0					
ANR	1598114	Identifier	compiler		1596669	0					
ANR	1598115	Argument	ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	1					
ANR	1598116	InclusiveOrExpression	ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	0		|			
ANR	1598117	Identifier	ASRSI		1596669	0					
ANR	1598118	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1596669	1		|			
ANR	1598119	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598120	Callee	RD3		1596669	0					
ANR	1598121	Identifier	RD3		1596669	0					
ANR	1598122	ArgumentList	dst		1596669	1					
ANR	1598123	Argument	dst		1596669	0					
ANR	1598124	Identifier	dst		1596669	0					
ANR	1598125	InclusiveOrExpression	RN3 ( reg ) | ( imm << 6 )		1596669	1		|			
ANR	1598126	CallExpression	RN3 ( reg )		1596669	0					
ANR	1598127	Callee	RN3		1596669	0					
ANR	1598128	Identifier	RN3		1596669	0					
ANR	1598129	ArgumentList	reg		1596669	1					
ANR	1598130	Argument	reg		1596669	0					
ANR	1598131	Identifier	reg		1596669	0					
ANR	1598132	ShiftExpression	imm << 6		1596669	1		<<			
ANR	1598133	Identifier	imm		1596669	0					
ANR	1598134	PrimaryExpression	6		1596669	1					
ANR	1598135	ReturnStatement	"return push_inst32 ( compiler , ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) ) ;"	660:4:20873:20965	1596669	8	True				
ANR	1598136	CallExpression	"push_inst32 ( compiler , ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) )"		1596669	0					
ANR	1598137	Callee	push_inst32		1596669	0					
ANR	1598138	Identifier	push_inst32		1596669	0					
ANR	1598139	ArgumentList	compiler		1596669	1					
ANR	1598140	Argument	compiler		1596669	0					
ANR	1598141	Identifier	compiler		1596669	0					
ANR	1598142	Argument	ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1					
ANR	1598143	InclusiveOrExpression	ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	0		|			
ANR	1598144	Identifier	ASR_WI		1596669	0					
ANR	1598145	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1598146	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1598147	Identifier	flags		1596669	0					
ANR	1598148	Identifier	SET_FLAGS		1596669	1					
ANR	1598149	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1598150	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598151	Callee	RD4		1596669	0					
ANR	1598152	Identifier	RD4		1596669	0					
ANR	1598153	ArgumentList	dst		1596669	1					
ANR	1598154	Argument	dst		1596669	0					
ANR	1598155	Identifier	dst		1596669	0					
ANR	1598156	InclusiveOrExpression	RM4 ( reg ) | IMM5 ( imm )		1596669	1		|			
ANR	1598157	CallExpression	RM4 ( reg )		1596669	0					
ANR	1598158	Callee	RM4		1596669	0					
ANR	1598159	Identifier	RM4		1596669	0					
ANR	1598160	ArgumentList	reg		1596669	1					
ANR	1598161	Argument	reg		1596669	0					
ANR	1598162	Identifier	reg		1596669	0					
ANR	1598163	CallExpression	IMM5 ( imm )		1596669	1					
ANR	1598164	Callee	IMM5		1596669	0					
ANR	1598165	Identifier	IMM5		1596669	0					
ANR	1598166	ArgumentList	imm		1596669	1					
ANR	1598167	Argument	imm		1596669	0					
ANR	1598168	Identifier	imm		1596669	0					
ANR	1598169	Label	default :	662:2:20974:20981	1596669	56	True				
ANR	1598170	Identifier	default		1596669	0					
ANR	1598171	ExpressionStatement	SLJIT_ASSERT_STOP ( )	663:3:20986:21005	1596669	57	True				
ANR	1598172	CallExpression	SLJIT_ASSERT_STOP ( )		1596669	0					
ANR	1598173	Callee	SLJIT_ASSERT_STOP		1596669	0					
ANR	1598174	Identifier	SLJIT_ASSERT_STOP		1596669	0					
ANR	1598175	ArgumentList			1596669	1					
ANR	1598176	BreakStatement	break ;	664:3:21010:21015	1596669	58	True				
ANR	1598177	IfStatement	if ( flags & ARG2_IMM )		1596669	3					
ANR	1598178	Condition	flags & ARG2_IMM	667:6:21028:21043	1596669	0	True				
ANR	1598179	BitAndExpression	flags & ARG2_IMM		1596669	0		&			
ANR	1598180	Identifier	flags		1596669	0					
ANR	1598181	Identifier	ARG2_IMM		1596669	1					
ANR	1598182	CompoundStatement		156:24:5671:5671	1596669	1					
ANR	1598183	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , arg2 ) )"	668:3:21051:21100	1596669	0	True				
ANR	1598184	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , arg2 ) )"		1596669	0					
ANR	1598185	Callee	FAIL_IF		1596669	0					
ANR	1598186	Identifier	FAIL_IF		1596669	0					
ANR	1598187	ArgumentList	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1596669	1					
ANR	1598188	Argument	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1596669	0					
ANR	1598189	CallExpression	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1596669	0					
ANR	1598190	Callee	load_immediate		1596669	0					
ANR	1598191	Identifier	load_immediate		1596669	0					
ANR	1598192	ArgumentList	compiler		1596669	1					
ANR	1598193	Argument	compiler		1596669	0					
ANR	1598194	Identifier	compiler		1596669	0					
ANR	1598195	Argument	TMP_REG2		1596669	1					
ANR	1598196	Identifier	TMP_REG2		1596669	0					
ANR	1598197	Argument	arg2		1596669	2					
ANR	1598198	Identifier	arg2		1596669	0					
ANR	1598199	ExpressionStatement	arg2 = TMP_REG2	669:3:21105:21120	1596669	1	True				
ANR	1598200	AssignmentExpression	arg2 = TMP_REG2		1596669	0		=			
ANR	1598201	Identifier	arg2		1596669	0					
ANR	1598202	Identifier	TMP_REG2		1596669	1					
ANR	1598203	ElseStatement	else		1596669	0					
ANR	1598204	CompoundStatement		160:7:5758:5758	1596669	0					
ANR	1598205	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"	672:3:21138:21187	1596669	0	True				
ANR	1598206	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"		1596669	0					
ANR	1598207	Callee	FAIL_IF		1596669	0					
ANR	1598208	Identifier	FAIL_IF		1596669	0					
ANR	1598209	ArgumentList	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1596669	1					
ANR	1598210	Argument	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1596669	0					
ANR	1598211	CallExpression	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1596669	0					
ANR	1598212	Callee	load_immediate		1596669	0					
ANR	1598213	Identifier	load_immediate		1596669	0					
ANR	1598214	ArgumentList	compiler		1596669	1					
ANR	1598215	Argument	compiler		1596669	0					
ANR	1598216	Identifier	compiler		1596669	0					
ANR	1598217	Argument	TMP_REG1		1596669	1					
ANR	1598218	Identifier	TMP_REG1		1596669	0					
ANR	1598219	Argument	arg1		1596669	2					
ANR	1598220	Identifier	arg1		1596669	0					
ANR	1598221	ExpressionStatement	arg1 = TMP_REG1	673:3:21192:21207	1596669	1	True				
ANR	1598222	AssignmentExpression	arg1 = TMP_REG1		1596669	0		=			
ANR	1598223	Identifier	arg1		1596669	0					
ANR	1598224	Identifier	TMP_REG1		1596669	1					
ANR	1598225	SwitchStatement	switch ( flags & 0xffff )		1596669	4					
ANR	1598226	Condition	flags & 0xffff	678:9:21263:21276	1596669	0	True				
ANR	1598227	BitAndExpression	flags & 0xffff		1596669	0		&			
ANR	1598228	Identifier	flags		1596669	0					
ANR	1598229	PrimaryExpression	0xffff		1596669	1					
ANR	1598230	CompoundStatement		167:25:5904:5904	1596669	1					
ANR	1598231	Label	case SLJIT_MOV :	679:1:21282:21296	1596669	0	True				
ANR	1598232	Identifier	SLJIT_MOV		1596669	0					
ANR	1598233	Label	case SLJIT_MOV_UI :	680:1:21299:21316	1596669	1	True				
ANR	1598234	Identifier	SLJIT_MOV_UI		1596669	0					
ANR	1598235	Label	case SLJIT_MOV_SI :	681:1:21319:21336	1596669	2	True				
ANR	1598236	Identifier	SLJIT_MOV_SI		1596669	0					
ANR	1598237	Label	case SLJIT_MOV_P :	682:1:21339:21355	1596669	3	True				
ANR	1598238	Identifier	SLJIT_MOV_P		1596669	0					
ANR	1598239	Label	case SLJIT_MOVU :	683:1:21358:21373	1596669	4	True				
ANR	1598240	Identifier	SLJIT_MOVU		1596669	0					
ANR	1598241	Label	case SLJIT_MOVU_UI :	684:1:21376:21394	1596669	5	True				
ANR	1598242	Identifier	SLJIT_MOVU_UI		1596669	0					
ANR	1598243	Label	case SLJIT_MOVU_SI :	685:1:21397:21415	1596669	6	True				
ANR	1598244	Identifier	SLJIT_MOVU_SI		1596669	0					
ANR	1598245	Label	case SLJIT_MOVU_P :	686:1:21418:21435	1596669	7	True				
ANR	1598246	Identifier	SLJIT_MOVU_P		1596669	0					
ANR	1598247	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	687:2:21439:21493	1596669	8	True				
ANR	1598248	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1596669	0					
ANR	1598249	Callee	SLJIT_ASSERT		1596669	0					
ANR	1598250	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1598251	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	1					
ANR	1598252	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0					
ANR	1598253	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0		&&			
ANR	1598254	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1598255	UnaryOperator	!		1596669	0					
ANR	1598256	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1598257	Identifier	flags		1596669	0					
ANR	1598258	Identifier	SET_FLAGS		1596669	1					
ANR	1598259	EqualityExpression	arg1 == TMP_REG1		1596669	1		==			
ANR	1598260	Identifier	arg1		1596669	0					
ANR	1598261	Identifier	TMP_REG1		1596669	1					
ANR	1598262	IfStatement	if ( dst == arg2 )		1596669	9					
ANR	1598263	Condition	dst == arg2	688:6:21501:21511	1596669	0	True				
ANR	1598264	EqualityExpression	dst == arg2		1596669	0		==			
ANR	1598265	Identifier	dst		1596669	0					
ANR	1598266	Identifier	arg2		1596669	1					
ANR	1598267	ReturnStatement	return SLJIT_SUCCESS ;	689:3:21517:21537	1596669	1	True				
ANR	1598268	Identifier	SLJIT_SUCCESS		1596669	0					
ANR	1598269	ReturnStatement	"return push_inst16 ( compiler , MOV | SET_REGS44 ( dst , arg2 ) ) ;"	690:2:21541:21598	1596669	10	True				
ANR	1598270	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( dst , arg2 ) )"		1596669	0					
ANR	1598271	Callee	push_inst16		1596669	0					
ANR	1598272	Identifier	push_inst16		1596669	0					
ANR	1598273	ArgumentList	compiler		1596669	1					
ANR	1598274	Argument	compiler		1596669	0					
ANR	1598275	Identifier	compiler		1596669	0					
ANR	1598276	Argument	"MOV | SET_REGS44 ( dst , arg2 )"		1596669	1					
ANR	1598277	InclusiveOrExpression	"MOV | SET_REGS44 ( dst , arg2 )"		1596669	0		|			
ANR	1598278	Identifier	MOV		1596669	0					
ANR	1598279	CallExpression	"SET_REGS44 ( dst , arg2 )"		1596669	1					
ANR	1598280	Callee	SET_REGS44		1596669	0					
ANR	1598281	Identifier	SET_REGS44		1596669	0					
ANR	1598282	ArgumentList	dst		1596669	1					
ANR	1598283	Argument	dst		1596669	0					
ANR	1598284	Identifier	dst		1596669	0					
ANR	1598285	Argument	arg2		1596669	1					
ANR	1598286	Identifier	arg2		1596669	0					
ANR	1598287	Label	case SLJIT_MOV_UB :	691:1:21601:21618	1596669	11	True				
ANR	1598288	Identifier	SLJIT_MOV_UB		1596669	0					
ANR	1598289	Label	case SLJIT_MOVU_UB :	692:1:21621:21639	1596669	12	True				
ANR	1598290	Identifier	SLJIT_MOVU_UB		1596669	0					
ANR	1598291	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	693:2:21643:21697	1596669	13	True				
ANR	1598292	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1596669	0					
ANR	1598293	Callee	SLJIT_ASSERT		1596669	0					
ANR	1598294	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1598295	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	1					
ANR	1598296	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0					
ANR	1598297	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0		&&			
ANR	1598298	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1598299	UnaryOperator	!		1596669	0					
ANR	1598300	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1598301	Identifier	flags		1596669	0					
ANR	1598302	Identifier	SET_FLAGS		1596669	1					
ANR	1598303	EqualityExpression	arg1 == TMP_REG1		1596669	1		==			
ANR	1598304	Identifier	arg1		1596669	0					
ANR	1598305	Identifier	TMP_REG1		1596669	1					
ANR	1598306	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1596669	14					
ANR	1598307	Condition	"IS_2_LO_REGS ( dst , arg2 )"	694:6:21705:21727	1596669	0	True				
ANR	1598308	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	0					
ANR	1598309	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598310	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598311	ArgumentList	dst		1596669	1					
ANR	1598312	Argument	dst		1596669	0					
ANR	1598313	Identifier	dst		1596669	0					
ANR	1598314	Argument	arg2		1596669	1					
ANR	1598315	Identifier	arg2		1596669	0					
ANR	1598316	ReturnStatement	"return push_inst16 ( compiler , UXTB | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	695:3:21733:21790	1596669	1	True				
ANR	1598317	CallExpression	"push_inst16 ( compiler , UXTB | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1598318	Callee	push_inst16		1596669	0					
ANR	1598319	Identifier	push_inst16		1596669	0					
ANR	1598320	ArgumentList	compiler		1596669	1					
ANR	1598321	Argument	compiler		1596669	0					
ANR	1598322	Identifier	compiler		1596669	0					
ANR	1598323	Argument	UXTB | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1598324	InclusiveOrExpression	UXTB | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1598325	Identifier	UXTB		1596669	0					
ANR	1598326	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1598327	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598328	Callee	RD3		1596669	0					
ANR	1598329	Identifier	RD3		1596669	0					
ANR	1598330	ArgumentList	dst		1596669	1					
ANR	1598331	Argument	dst		1596669	0					
ANR	1598332	Identifier	dst		1596669	0					
ANR	1598333	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1598334	Callee	RN3		1596669	0					
ANR	1598335	Identifier	RN3		1596669	0					
ANR	1598336	ArgumentList	arg2		1596669	1					
ANR	1598337	Argument	arg2		1596669	0					
ANR	1598338	Identifier	arg2		1596669	0					
ANR	1598339	ReturnStatement	"return push_inst32 ( compiler , UXTB_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	696:2:21794:21853	1596669	15	True				
ANR	1598340	CallExpression	"push_inst32 ( compiler , UXTB_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598341	Callee	push_inst32		1596669	0					
ANR	1598342	Identifier	push_inst32		1596669	0					
ANR	1598343	ArgumentList	compiler		1596669	1					
ANR	1598344	Argument	compiler		1596669	0					
ANR	1598345	Identifier	compiler		1596669	0					
ANR	1598346	Argument	UXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	1					
ANR	1598347	InclusiveOrExpression	UXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598348	Identifier	UXTB_W		1596669	0					
ANR	1598349	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598350	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598351	Callee	RD4		1596669	0					
ANR	1598352	Identifier	RD4		1596669	0					
ANR	1598353	ArgumentList	dst		1596669	1					
ANR	1598354	Argument	dst		1596669	0					
ANR	1598355	Identifier	dst		1596669	0					
ANR	1598356	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598357	Callee	RM4		1596669	0					
ANR	1598358	Identifier	RM4		1596669	0					
ANR	1598359	ArgumentList	arg2		1596669	1					
ANR	1598360	Argument	arg2		1596669	0					
ANR	1598361	Identifier	arg2		1596669	0					
ANR	1598362	Label	case SLJIT_MOV_SB :	697:1:21856:21873	1596669	16	True				
ANR	1598363	Identifier	SLJIT_MOV_SB		1596669	0					
ANR	1598364	Label	case SLJIT_MOVU_SB :	698:1:21876:21894	1596669	17	True				
ANR	1598365	Identifier	SLJIT_MOVU_SB		1596669	0					
ANR	1598366	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	699:2:21898:21952	1596669	18	True				
ANR	1598367	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1596669	0					
ANR	1598368	Callee	SLJIT_ASSERT		1596669	0					
ANR	1598369	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1598370	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	1					
ANR	1598371	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0					
ANR	1598372	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0		&&			
ANR	1598373	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1598374	UnaryOperator	!		1596669	0					
ANR	1598375	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1598376	Identifier	flags		1596669	0					
ANR	1598377	Identifier	SET_FLAGS		1596669	1					
ANR	1598378	EqualityExpression	arg1 == TMP_REG1		1596669	1		==			
ANR	1598379	Identifier	arg1		1596669	0					
ANR	1598380	Identifier	TMP_REG1		1596669	1					
ANR	1598381	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1596669	19					
ANR	1598382	Condition	"IS_2_LO_REGS ( dst , arg2 )"	700:6:21960:21982	1596669	0	True				
ANR	1598383	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	0					
ANR	1598384	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598385	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598386	ArgumentList	dst		1596669	1					
ANR	1598387	Argument	dst		1596669	0					
ANR	1598388	Identifier	dst		1596669	0					
ANR	1598389	Argument	arg2		1596669	1					
ANR	1598390	Identifier	arg2		1596669	0					
ANR	1598391	ReturnStatement	"return push_inst16 ( compiler , SXTB | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	701:3:21988:22045	1596669	1	True				
ANR	1598392	CallExpression	"push_inst16 ( compiler , SXTB | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1598393	Callee	push_inst16		1596669	0					
ANR	1598394	Identifier	push_inst16		1596669	0					
ANR	1598395	ArgumentList	compiler		1596669	1					
ANR	1598396	Argument	compiler		1596669	0					
ANR	1598397	Identifier	compiler		1596669	0					
ANR	1598398	Argument	SXTB | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1598399	InclusiveOrExpression	SXTB | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1598400	Identifier	SXTB		1596669	0					
ANR	1598401	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1598402	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598403	Callee	RD3		1596669	0					
ANR	1598404	Identifier	RD3		1596669	0					
ANR	1598405	ArgumentList	dst		1596669	1					
ANR	1598406	Argument	dst		1596669	0					
ANR	1598407	Identifier	dst		1596669	0					
ANR	1598408	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1598409	Callee	RN3		1596669	0					
ANR	1598410	Identifier	RN3		1596669	0					
ANR	1598411	ArgumentList	arg2		1596669	1					
ANR	1598412	Argument	arg2		1596669	0					
ANR	1598413	Identifier	arg2		1596669	0					
ANR	1598414	ReturnStatement	"return push_inst32 ( compiler , SXTB_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	702:2:22049:22108	1596669	20	True				
ANR	1598415	CallExpression	"push_inst32 ( compiler , SXTB_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598416	Callee	push_inst32		1596669	0					
ANR	1598417	Identifier	push_inst32		1596669	0					
ANR	1598418	ArgumentList	compiler		1596669	1					
ANR	1598419	Argument	compiler		1596669	0					
ANR	1598420	Identifier	compiler		1596669	0					
ANR	1598421	Argument	SXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	1					
ANR	1598422	InclusiveOrExpression	SXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598423	Identifier	SXTB_W		1596669	0					
ANR	1598424	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598425	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598426	Callee	RD4		1596669	0					
ANR	1598427	Identifier	RD4		1596669	0					
ANR	1598428	ArgumentList	dst		1596669	1					
ANR	1598429	Argument	dst		1596669	0					
ANR	1598430	Identifier	dst		1596669	0					
ANR	1598431	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598432	Callee	RM4		1596669	0					
ANR	1598433	Identifier	RM4		1596669	0					
ANR	1598434	ArgumentList	arg2		1596669	1					
ANR	1598435	Argument	arg2		1596669	0					
ANR	1598436	Identifier	arg2		1596669	0					
ANR	1598437	Label	case SLJIT_MOV_UH :	703:1:22111:22128	1596669	21	True				
ANR	1598438	Identifier	SLJIT_MOV_UH		1596669	0					
ANR	1598439	Label	case SLJIT_MOVU_UH :	704:1:22131:22149	1596669	22	True				
ANR	1598440	Identifier	SLJIT_MOVU_UH		1596669	0					
ANR	1598441	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	705:2:22153:22207	1596669	23	True				
ANR	1598442	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1596669	0					
ANR	1598443	Callee	SLJIT_ASSERT		1596669	0					
ANR	1598444	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1598445	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	1					
ANR	1598446	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0					
ANR	1598447	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0		&&			
ANR	1598448	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1598449	UnaryOperator	!		1596669	0					
ANR	1598450	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1598451	Identifier	flags		1596669	0					
ANR	1598452	Identifier	SET_FLAGS		1596669	1					
ANR	1598453	EqualityExpression	arg1 == TMP_REG1		1596669	1		==			
ANR	1598454	Identifier	arg1		1596669	0					
ANR	1598455	Identifier	TMP_REG1		1596669	1					
ANR	1598456	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1596669	24					
ANR	1598457	Condition	"IS_2_LO_REGS ( dst , arg2 )"	706:6:22215:22237	1596669	0	True				
ANR	1598458	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	0					
ANR	1598459	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598460	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598461	ArgumentList	dst		1596669	1					
ANR	1598462	Argument	dst		1596669	0					
ANR	1598463	Identifier	dst		1596669	0					
ANR	1598464	Argument	arg2		1596669	1					
ANR	1598465	Identifier	arg2		1596669	0					
ANR	1598466	ReturnStatement	"return push_inst16 ( compiler , UXTH | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	707:3:22243:22300	1596669	1	True				
ANR	1598467	CallExpression	"push_inst16 ( compiler , UXTH | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1598468	Callee	push_inst16		1596669	0					
ANR	1598469	Identifier	push_inst16		1596669	0					
ANR	1598470	ArgumentList	compiler		1596669	1					
ANR	1598471	Argument	compiler		1596669	0					
ANR	1598472	Identifier	compiler		1596669	0					
ANR	1598473	Argument	UXTH | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1598474	InclusiveOrExpression	UXTH | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1598475	Identifier	UXTH		1596669	0					
ANR	1598476	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1598477	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598478	Callee	RD3		1596669	0					
ANR	1598479	Identifier	RD3		1596669	0					
ANR	1598480	ArgumentList	dst		1596669	1					
ANR	1598481	Argument	dst		1596669	0					
ANR	1598482	Identifier	dst		1596669	0					
ANR	1598483	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1598484	Callee	RN3		1596669	0					
ANR	1598485	Identifier	RN3		1596669	0					
ANR	1598486	ArgumentList	arg2		1596669	1					
ANR	1598487	Argument	arg2		1596669	0					
ANR	1598488	Identifier	arg2		1596669	0					
ANR	1598489	ReturnStatement	"return push_inst32 ( compiler , UXTH_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	708:2:22304:22363	1596669	25	True				
ANR	1598490	CallExpression	"push_inst32 ( compiler , UXTH_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598491	Callee	push_inst32		1596669	0					
ANR	1598492	Identifier	push_inst32		1596669	0					
ANR	1598493	ArgumentList	compiler		1596669	1					
ANR	1598494	Argument	compiler		1596669	0					
ANR	1598495	Identifier	compiler		1596669	0					
ANR	1598496	Argument	UXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	1					
ANR	1598497	InclusiveOrExpression	UXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598498	Identifier	UXTH_W		1596669	0					
ANR	1598499	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598500	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598501	Callee	RD4		1596669	0					
ANR	1598502	Identifier	RD4		1596669	0					
ANR	1598503	ArgumentList	dst		1596669	1					
ANR	1598504	Argument	dst		1596669	0					
ANR	1598505	Identifier	dst		1596669	0					
ANR	1598506	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598507	Callee	RM4		1596669	0					
ANR	1598508	Identifier	RM4		1596669	0					
ANR	1598509	ArgumentList	arg2		1596669	1					
ANR	1598510	Argument	arg2		1596669	0					
ANR	1598511	Identifier	arg2		1596669	0					
ANR	1598512	Label	case SLJIT_MOV_SH :	709:1:22366:22383	1596669	26	True				
ANR	1598513	Identifier	SLJIT_MOV_SH		1596669	0					
ANR	1598514	Label	case SLJIT_MOVU_SH :	710:1:22386:22404	1596669	27	True				
ANR	1598515	Identifier	SLJIT_MOVU_SH		1596669	0					
ANR	1598516	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	711:2:22408:22462	1596669	28	True				
ANR	1598517	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1596669	0					
ANR	1598518	Callee	SLJIT_ASSERT		1596669	0					
ANR	1598519	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1598520	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	1					
ANR	1598521	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0					
ANR	1598522	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1596669	0		&&			
ANR	1598523	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1598524	UnaryOperator	!		1596669	0					
ANR	1598525	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1598526	Identifier	flags		1596669	0					
ANR	1598527	Identifier	SET_FLAGS		1596669	1					
ANR	1598528	EqualityExpression	arg1 == TMP_REG1		1596669	1		==			
ANR	1598529	Identifier	arg1		1596669	0					
ANR	1598530	Identifier	TMP_REG1		1596669	1					
ANR	1598531	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1596669	29					
ANR	1598532	Condition	"IS_2_LO_REGS ( dst , arg2 )"	712:6:22470:22492	1596669	0	True				
ANR	1598533	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	0					
ANR	1598534	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598535	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598536	ArgumentList	dst		1596669	1					
ANR	1598537	Argument	dst		1596669	0					
ANR	1598538	Identifier	dst		1596669	0					
ANR	1598539	Argument	arg2		1596669	1					
ANR	1598540	Identifier	arg2		1596669	0					
ANR	1598541	ReturnStatement	"return push_inst16 ( compiler , SXTH | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	713:3:22498:22555	1596669	1	True				
ANR	1598542	CallExpression	"push_inst16 ( compiler , SXTH | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1598543	Callee	push_inst16		1596669	0					
ANR	1598544	Identifier	push_inst16		1596669	0					
ANR	1598545	ArgumentList	compiler		1596669	1					
ANR	1598546	Argument	compiler		1596669	0					
ANR	1598547	Identifier	compiler		1596669	0					
ANR	1598548	Argument	SXTH | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1598549	InclusiveOrExpression	SXTH | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1598550	Identifier	SXTH		1596669	0					
ANR	1598551	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1598552	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598553	Callee	RD3		1596669	0					
ANR	1598554	Identifier	RD3		1596669	0					
ANR	1598555	ArgumentList	dst		1596669	1					
ANR	1598556	Argument	dst		1596669	0					
ANR	1598557	Identifier	dst		1596669	0					
ANR	1598558	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1598559	Callee	RN3		1596669	0					
ANR	1598560	Identifier	RN3		1596669	0					
ANR	1598561	ArgumentList	arg2		1596669	1					
ANR	1598562	Argument	arg2		1596669	0					
ANR	1598563	Identifier	arg2		1596669	0					
ANR	1598564	ReturnStatement	"return push_inst32 ( compiler , SXTH_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	714:2:22559:22618	1596669	30	True				
ANR	1598565	CallExpression	"push_inst32 ( compiler , SXTH_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598566	Callee	push_inst32		1596669	0					
ANR	1598567	Identifier	push_inst32		1596669	0					
ANR	1598568	ArgumentList	compiler		1596669	1					
ANR	1598569	Argument	compiler		1596669	0					
ANR	1598570	Identifier	compiler		1596669	0					
ANR	1598571	Argument	SXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	1					
ANR	1598572	InclusiveOrExpression	SXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598573	Identifier	SXTH_W		1596669	0					
ANR	1598574	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598575	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598576	Callee	RD4		1596669	0					
ANR	1598577	Identifier	RD4		1596669	0					
ANR	1598578	ArgumentList	dst		1596669	1					
ANR	1598579	Argument	dst		1596669	0					
ANR	1598580	Identifier	dst		1596669	0					
ANR	1598581	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598582	Callee	RM4		1596669	0					
ANR	1598583	Identifier	RM4		1596669	0					
ANR	1598584	ArgumentList	arg2		1596669	1					
ANR	1598585	Argument	arg2		1596669	0					
ANR	1598586	Identifier	arg2		1596669	0					
ANR	1598587	Label	case SLJIT_NOT :	715:1:22621:22635	1596669	31	True				
ANR	1598588	Identifier	SLJIT_NOT		1596669	0					
ANR	1598589	ExpressionStatement	SLJIT_ASSERT ( arg1 == TMP_REG1 )	716:2:22639:22669	1596669	32	True				
ANR	1598590	CallExpression	SLJIT_ASSERT ( arg1 == TMP_REG1 )		1596669	0					
ANR	1598591	Callee	SLJIT_ASSERT		1596669	0					
ANR	1598592	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1598593	ArgumentList	arg1 == TMP_REG1		1596669	1					
ANR	1598594	Argument	arg1 == TMP_REG1		1596669	0					
ANR	1598595	EqualityExpression	arg1 == TMP_REG1		1596669	0		==			
ANR	1598596	Identifier	arg1		1596669	0					
ANR	1598597	Identifier	TMP_REG1		1596669	1					
ANR	1598598	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	33					
ANR	1598599	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	717:6:22677:22724	1596669	0	True				
ANR	1598600	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1598601	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1598602	UnaryOperator	!		1596669	0					
ANR	1598603	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1598604	Identifier	flags		1596669	0					
ANR	1598605	Identifier	KEEP_FLAGS		1596669	1					
ANR	1598606	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1598607	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598608	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598609	ArgumentList	dst		1596669	1					
ANR	1598610	Argument	dst		1596669	0					
ANR	1598611	Identifier	dst		1596669	0					
ANR	1598612	Argument	arg2		1596669	1					
ANR	1598613	Identifier	arg2		1596669	0					
ANR	1598614	ReturnStatement	"return push_inst16 ( compiler , MVNS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	718:3:22730:22787	1596669	1	True				
ANR	1598615	CallExpression	"push_inst16 ( compiler , MVNS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1598616	Callee	push_inst16		1596669	0					
ANR	1598617	Identifier	push_inst16		1596669	0					
ANR	1598618	ArgumentList	compiler		1596669	1					
ANR	1598619	Argument	compiler		1596669	0					
ANR	1598620	Identifier	compiler		1596669	0					
ANR	1598621	Argument	MVNS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1598622	InclusiveOrExpression	MVNS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1598623	Identifier	MVNS		1596669	0					
ANR	1598624	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1598625	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598626	Callee	RD3		1596669	0					
ANR	1598627	Identifier	RD3		1596669	0					
ANR	1598628	ArgumentList	dst		1596669	1					
ANR	1598629	Argument	dst		1596669	0					
ANR	1598630	Identifier	dst		1596669	0					
ANR	1598631	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1598632	Callee	RN3		1596669	0					
ANR	1598633	Identifier	RN3		1596669	0					
ANR	1598634	ArgumentList	arg2		1596669	1					
ANR	1598635	Argument	arg2		1596669	0					
ANR	1598636	Identifier	arg2		1596669	0					
ANR	1598637	ReturnStatement	"return push_inst32 ( compiler , MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	719:2:22791:22871	1596669	34	True				
ANR	1598638	CallExpression	"push_inst32 ( compiler , MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598639	Callee	push_inst32		1596669	0					
ANR	1598640	Identifier	push_inst32		1596669	0					
ANR	1598641	ArgumentList	compiler		1596669	1					
ANR	1598642	Argument	compiler		1596669	0					
ANR	1598643	Identifier	compiler		1596669	0					
ANR	1598644	Argument	MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 )		1596669	1					
ANR	1598645	InclusiveOrExpression	MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598646	Identifier	MVN_W		1596669	0					
ANR	1598647	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598648	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1598649	Identifier	flags		1596669	0					
ANR	1598650	Identifier	SET_FLAGS		1596669	1					
ANR	1598651	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598652	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598653	Callee	RD4		1596669	0					
ANR	1598654	Identifier	RD4		1596669	0					
ANR	1598655	ArgumentList	dst		1596669	1					
ANR	1598656	Argument	dst		1596669	0					
ANR	1598657	Identifier	dst		1596669	0					
ANR	1598658	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598659	Callee	RM4		1596669	0					
ANR	1598660	Identifier	RM4		1596669	0					
ANR	1598661	ArgumentList	arg2		1596669	1					
ANR	1598662	Argument	arg2		1596669	0					
ANR	1598663	Identifier	arg2		1596669	0					
ANR	1598664	Label	case SLJIT_CLZ :	720:1:22874:22888	1596669	35	True				
ANR	1598665	Identifier	SLJIT_CLZ		1596669	0					
ANR	1598666	ExpressionStatement	SLJIT_ASSERT ( arg1 == TMP_REG1 )	721:2:22892:22922	1596669	36	True				
ANR	1598667	CallExpression	SLJIT_ASSERT ( arg1 == TMP_REG1 )		1596669	0					
ANR	1598668	Callee	SLJIT_ASSERT		1596669	0					
ANR	1598669	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1598670	ArgumentList	arg1 == TMP_REG1		1596669	1					
ANR	1598671	Argument	arg1 == TMP_REG1		1596669	0					
ANR	1598672	EqualityExpression	arg1 == TMP_REG1		1596669	0		==			
ANR	1598673	Identifier	arg1		1596669	0					
ANR	1598674	Identifier	TMP_REG1		1596669	1					
ANR	1598675	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) ) )"	722:2:22926:22996	1596669	37	True				
ANR	1598676	CallExpression	"FAIL_IF ( push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) ) )"		1596669	0					
ANR	1598677	Callee	FAIL_IF		1596669	0					
ANR	1598678	Identifier	FAIL_IF		1596669	0					
ANR	1598679	ArgumentList	"push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	1					
ANR	1598680	Argument	"push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598681	CallExpression	"push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598682	Callee	push_inst32		1596669	0					
ANR	1598683	Identifier	push_inst32		1596669	0					
ANR	1598684	ArgumentList	compiler		1596669	1					
ANR	1598685	Argument	compiler		1596669	0					
ANR	1598686	Identifier	compiler		1596669	0					
ANR	1598687	Argument	CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 )		1596669	1					
ANR	1598688	InclusiveOrExpression	CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598689	Identifier	CLZ		1596669	0					
ANR	1598690	InclusiveOrExpression	RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598691	CallExpression	RN4 ( arg2 )		1596669	0					
ANR	1598692	Callee	RN4		1596669	0					
ANR	1598693	Identifier	RN4		1596669	0					
ANR	1598694	ArgumentList	arg2		1596669	1					
ANR	1598695	Argument	arg2		1596669	0					
ANR	1598696	Identifier	arg2		1596669	0					
ANR	1598697	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598698	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598699	Callee	RD4		1596669	0					
ANR	1598700	Identifier	RD4		1596669	0					
ANR	1598701	ArgumentList	dst		1596669	1					
ANR	1598702	Argument	dst		1596669	0					
ANR	1598703	Identifier	dst		1596669	0					
ANR	1598704	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598705	Callee	RM4		1596669	0					
ANR	1598706	Identifier	RM4		1596669	0					
ANR	1598707	ArgumentList	arg2		1596669	1					
ANR	1598708	Argument	arg2		1596669	0					
ANR	1598709	Identifier	arg2		1596669	0					
ANR	1598710	IfStatement	if ( flags & SET_FLAGS )		1596669	38					
ANR	1598711	Condition	flags & SET_FLAGS	723:6:23004:23020	1596669	0	True				
ANR	1598712	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1598713	Identifier	flags		1596669	0					
ANR	1598714	Identifier	SET_FLAGS		1596669	1					
ANR	1598715	CompoundStatement		212:25:7648:7648	1596669	1					
ANR	1598716	IfStatement	if ( reg_map [ dst ] <= 7 )		1596669	0					
ANR	1598717	Condition	reg_map [ dst ] <= 7	724:7:23032:23048	1596669	0	True				
ANR	1598718	RelationalExpression	reg_map [ dst ] <= 7		1596669	0		<=			
ANR	1598719	ArrayIndexing	reg_map [ dst ]		1596669	0					
ANR	1598720	Identifier	reg_map		1596669	0					
ANR	1598721	Identifier	dst		1596669	1					
ANR	1598722	PrimaryExpression	7		1596669	1					
ANR	1598723	ReturnStatement	"return push_inst16 ( compiler , CMPI | RDN3 ( dst ) ) ;"	725:4:23055:23101	1596669	1	True				
ANR	1598724	CallExpression	"push_inst16 ( compiler , CMPI | RDN3 ( dst ) )"		1596669	0					
ANR	1598725	Callee	push_inst16		1596669	0					
ANR	1598726	Identifier	push_inst16		1596669	0					
ANR	1598727	ArgumentList	compiler		1596669	1					
ANR	1598728	Argument	compiler		1596669	0					
ANR	1598729	Identifier	compiler		1596669	0					
ANR	1598730	Argument	CMPI | RDN3 ( dst )		1596669	1					
ANR	1598731	InclusiveOrExpression	CMPI | RDN3 ( dst )		1596669	0		|			
ANR	1598732	Identifier	CMPI		1596669	0					
ANR	1598733	CallExpression	RDN3 ( dst )		1596669	1					
ANR	1598734	Callee	RDN3		1596669	0					
ANR	1598735	Identifier	RDN3		1596669	0					
ANR	1598736	ArgumentList	dst		1596669	1					
ANR	1598737	Argument	dst		1596669	0					
ANR	1598738	Identifier	dst		1596669	0					
ANR	1598739	ReturnStatement	"return push_inst32 ( compiler , ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst ) ) ;"	726:3:23106:23176	1596669	1	True				
ANR	1598740	CallExpression	"push_inst32 ( compiler , ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst ) )"		1596669	0					
ANR	1598741	Callee	push_inst32		1596669	0					
ANR	1598742	Identifier	push_inst32		1596669	0					
ANR	1598743	ArgumentList	compiler		1596669	1					
ANR	1598744	Argument	compiler		1596669	0					
ANR	1598745	Identifier	compiler		1596669	0					
ANR	1598746	Argument	ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst )		1596669	1					
ANR	1598747	InclusiveOrExpression	ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst )		1596669	0		|			
ANR	1598748	Identifier	ADD_WI		1596669	0					
ANR	1598749	InclusiveOrExpression	SET_FLAGS | RN4 ( dst ) | RD4 ( dst )		1596669	1		|			
ANR	1598750	Identifier	SET_FLAGS		1596669	0					
ANR	1598751	InclusiveOrExpression	RN4 ( dst ) | RD4 ( dst )		1596669	1		|			
ANR	1598752	CallExpression	RN4 ( dst )		1596669	0					
ANR	1598753	Callee	RN4		1596669	0					
ANR	1598754	Identifier	RN4		1596669	0					
ANR	1598755	ArgumentList	dst		1596669	1					
ANR	1598756	Argument	dst		1596669	0					
ANR	1598757	Identifier	dst		1596669	0					
ANR	1598758	CallExpression	RD4 ( dst )		1596669	1					
ANR	1598759	Callee	RD4		1596669	0					
ANR	1598760	Identifier	RD4		1596669	0					
ANR	1598761	ArgumentList	dst		1596669	1					
ANR	1598762	Argument	dst		1596669	0					
ANR	1598763	Identifier	dst		1596669	0					
ANR	1598764	ReturnStatement	return SLJIT_SUCCESS ;	728:2:23184:23204	1596669	39	True				
ANR	1598765	Identifier	SLJIT_SUCCESS		1596669	0					
ANR	1598766	Label	case SLJIT_ADD :	729:1:23207:23221	1596669	40	True				
ANR	1598767	Identifier	SLJIT_ADD		1596669	0					
ANR	1598768	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 ) )"		1596669	41					
ANR	1598769	Condition	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"	730:6:23229:23282	1596669	0	True				
ANR	1598770	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"		1596669	0		&&			
ANR	1598771	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1598772	UnaryOperator	!		1596669	0					
ANR	1598773	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1598774	Identifier	flags		1596669	0					
ANR	1598775	Identifier	KEEP_FLAGS		1596669	1					
ANR	1598776	CallExpression	"IS_3_LO_REGS ( dst , arg1 , arg2 )"		1596669	1					
ANR	1598777	Callee	IS_3_LO_REGS		1596669	0					
ANR	1598778	Identifier	IS_3_LO_REGS		1596669	0					
ANR	1598779	ArgumentList	dst		1596669	1					
ANR	1598780	Argument	dst		1596669	0					
ANR	1598781	Identifier	dst		1596669	0					
ANR	1598782	Argument	arg1		1596669	1					
ANR	1598783	Identifier	arg1		1596669	0					
ANR	1598784	Argument	arg2		1596669	2					
ANR	1598785	Identifier	arg2		1596669	0					
ANR	1598786	ReturnStatement	"return push_inst16 ( compiler , ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) ) ;"	731:3:23288:23357	1596669	1	True				
ANR	1598787	CallExpression	"push_inst16 ( compiler , ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) )"		1596669	0					
ANR	1598788	Callee	push_inst16		1596669	0					
ANR	1598789	Identifier	push_inst16		1596669	0					
ANR	1598790	ArgumentList	compiler		1596669	1					
ANR	1598791	Argument	compiler		1596669	0					
ANR	1598792	Identifier	compiler		1596669	0					
ANR	1598793	Argument	ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1596669	1					
ANR	1598794	InclusiveOrExpression	ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1596669	0		|			
ANR	1598795	Identifier	ADDS		1596669	0					
ANR	1598796	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1596669	1		|			
ANR	1598797	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598798	Callee	RD3		1596669	0					
ANR	1598799	Identifier	RD3		1596669	0					
ANR	1598800	ArgumentList	dst		1596669	1					
ANR	1598801	Argument	dst		1596669	0					
ANR	1598802	Identifier	dst		1596669	0					
ANR	1598803	InclusiveOrExpression	RN3 ( arg1 ) | RM3 ( arg2 )		1596669	1		|			
ANR	1598804	CallExpression	RN3 ( arg1 )		1596669	0					
ANR	1598805	Callee	RN3		1596669	0					
ANR	1598806	Identifier	RN3		1596669	0					
ANR	1598807	ArgumentList	arg1		1596669	1					
ANR	1598808	Argument	arg1		1596669	0					
ANR	1598809	Identifier	arg1		1596669	0					
ANR	1598810	CallExpression	RM3 ( arg2 )		1596669	1					
ANR	1598811	Callee	RM3		1596669	0					
ANR	1598812	Identifier	RM3		1596669	0					
ANR	1598813	ArgumentList	arg2		1596669	1					
ANR	1598814	Argument	arg2		1596669	0					
ANR	1598815	Identifier	arg2		1596669	0					
ANR	1598816	IfStatement	if ( dst == arg1 && ! ( flags & SET_FLAGS ) )		1596669	42					
ANR	1598817	Condition	dst == arg1 && ! ( flags & SET_FLAGS )	732:6:23365:23399	1596669	0	True				
ANR	1598818	AndExpression	dst == arg1 && ! ( flags & SET_FLAGS )		1596669	0		&&			
ANR	1598819	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1598820	Identifier	dst		1596669	0					
ANR	1598821	Identifier	arg1		1596669	1					
ANR	1598822	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	1					
ANR	1598823	UnaryOperator	!		1596669	0					
ANR	1598824	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1598825	Identifier	flags		1596669	0					
ANR	1598826	Identifier	SET_FLAGS		1596669	1					
ANR	1598827	ReturnStatement	"return push_inst16 ( compiler , ADD | SET_REGS44 ( dst , arg2 ) ) ;"	733:3:23405:23462	1596669	1	True				
ANR	1598828	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( dst , arg2 ) )"		1596669	0					
ANR	1598829	Callee	push_inst16		1596669	0					
ANR	1598830	Identifier	push_inst16		1596669	0					
ANR	1598831	ArgumentList	compiler		1596669	1					
ANR	1598832	Argument	compiler		1596669	0					
ANR	1598833	Identifier	compiler		1596669	0					
ANR	1598834	Argument	"ADD | SET_REGS44 ( dst , arg2 )"		1596669	1					
ANR	1598835	InclusiveOrExpression	"ADD | SET_REGS44 ( dst , arg2 )"		1596669	0		|			
ANR	1598836	Identifier	ADD		1596669	0					
ANR	1598837	CallExpression	"SET_REGS44 ( dst , arg2 )"		1596669	1					
ANR	1598838	Callee	SET_REGS44		1596669	0					
ANR	1598839	Identifier	SET_REGS44		1596669	0					
ANR	1598840	ArgumentList	dst		1596669	1					
ANR	1598841	Argument	dst		1596669	0					
ANR	1598842	Identifier	dst		1596669	0					
ANR	1598843	Argument	arg2		1596669	1					
ANR	1598844	Identifier	arg2		1596669	0					
ANR	1598845	ReturnStatement	"return push_inst32 ( compiler , ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	734:2:23466:23558	1596669	43	True				
ANR	1598846	CallExpression	"push_inst32 ( compiler , ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598847	Callee	push_inst32		1596669	0					
ANR	1598848	Identifier	push_inst32		1596669	0					
ANR	1598849	ArgumentList	compiler		1596669	1					
ANR	1598850	Argument	compiler		1596669	0					
ANR	1598851	Identifier	compiler		1596669	0					
ANR	1598852	Argument	ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1598853	InclusiveOrExpression	ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598854	Identifier	ADD_W		1596669	0					
ANR	1598855	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598856	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1598857	Identifier	flags		1596669	0					
ANR	1598858	Identifier	SET_FLAGS		1596669	1					
ANR	1598859	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598860	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598861	Callee	RD4		1596669	0					
ANR	1598862	Identifier	RD4		1596669	0					
ANR	1598863	ArgumentList	dst		1596669	1					
ANR	1598864	Argument	dst		1596669	0					
ANR	1598865	Identifier	dst		1596669	0					
ANR	1598866	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598867	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1598868	Callee	RN4		1596669	0					
ANR	1598869	Identifier	RN4		1596669	0					
ANR	1598870	ArgumentList	arg1		1596669	1					
ANR	1598871	Argument	arg1		1596669	0					
ANR	1598872	Identifier	arg1		1596669	0					
ANR	1598873	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598874	Callee	RM4		1596669	0					
ANR	1598875	Identifier	RM4		1596669	0					
ANR	1598876	ArgumentList	arg2		1596669	1					
ANR	1598877	Argument	arg2		1596669	0					
ANR	1598878	Identifier	arg2		1596669	0					
ANR	1598879	Label	case SLJIT_ADDC :	735:1:23561:23576	1596669	44	True				
ANR	1598880	Identifier	SLJIT_ADDC		1596669	0					
ANR	1598881	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	45					
ANR	1598882	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	736:6:23584:23646	1596669	0	True				
ANR	1598883	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1598884	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1598885	Identifier	dst		1596669	0					
ANR	1598886	Identifier	arg1		1596669	1					
ANR	1598887	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	1		&&			
ANR	1598888	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1598889	UnaryOperator	!		1596669	0					
ANR	1598890	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1598891	Identifier	flags		1596669	0					
ANR	1598892	Identifier	KEEP_FLAGS		1596669	1					
ANR	1598893	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1598894	Callee	IS_2_LO_REGS		1596669	0					
ANR	1598895	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1598896	ArgumentList	dst		1596669	1					
ANR	1598897	Argument	dst		1596669	0					
ANR	1598898	Identifier	dst		1596669	0					
ANR	1598899	Argument	arg2		1596669	1					
ANR	1598900	Identifier	arg2		1596669	0					
ANR	1598901	ReturnStatement	"return push_inst16 ( compiler , ADCS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	737:3:23652:23709	1596669	1	True				
ANR	1598902	CallExpression	"push_inst16 ( compiler , ADCS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1598903	Callee	push_inst16		1596669	0					
ANR	1598904	Identifier	push_inst16		1596669	0					
ANR	1598905	ArgumentList	compiler		1596669	1					
ANR	1598906	Argument	compiler		1596669	0					
ANR	1598907	Identifier	compiler		1596669	0					
ANR	1598908	Argument	ADCS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1598909	InclusiveOrExpression	ADCS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1598910	Identifier	ADCS		1596669	0					
ANR	1598911	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1598912	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598913	Callee	RD3		1596669	0					
ANR	1598914	Identifier	RD3		1596669	0					
ANR	1598915	ArgumentList	dst		1596669	1					
ANR	1598916	Argument	dst		1596669	0					
ANR	1598917	Identifier	dst		1596669	0					
ANR	1598918	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1598919	Callee	RN3		1596669	0					
ANR	1598920	Identifier	RN3		1596669	0					
ANR	1598921	ArgumentList	arg2		1596669	1					
ANR	1598922	Argument	arg2		1596669	0					
ANR	1598923	Identifier	arg2		1596669	0					
ANR	1598924	ReturnStatement	"return push_inst32 ( compiler , ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	738:2:23713:23805	1596669	46	True				
ANR	1598925	CallExpression	"push_inst32 ( compiler , ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1598926	Callee	push_inst32		1596669	0					
ANR	1598927	Identifier	push_inst32		1596669	0					
ANR	1598928	ArgumentList	compiler		1596669	1					
ANR	1598929	Argument	compiler		1596669	0					
ANR	1598930	Identifier	compiler		1596669	0					
ANR	1598931	Argument	ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1598932	InclusiveOrExpression	ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1598933	Identifier	ADC_W		1596669	0					
ANR	1598934	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598935	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1598936	Identifier	flags		1596669	0					
ANR	1598937	Identifier	SET_FLAGS		1596669	1					
ANR	1598938	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598939	CallExpression	RD4 ( dst )		1596669	0					
ANR	1598940	Callee	RD4		1596669	0					
ANR	1598941	Identifier	RD4		1596669	0					
ANR	1598942	ArgumentList	dst		1596669	1					
ANR	1598943	Argument	dst		1596669	0					
ANR	1598944	Identifier	dst		1596669	0					
ANR	1598945	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1598946	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1598947	Callee	RN4		1596669	0					
ANR	1598948	Identifier	RN4		1596669	0					
ANR	1598949	ArgumentList	arg1		1596669	1					
ANR	1598950	Argument	arg1		1596669	0					
ANR	1598951	Identifier	arg1		1596669	0					
ANR	1598952	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1598953	Callee	RM4		1596669	0					
ANR	1598954	Identifier	RM4		1596669	0					
ANR	1598955	ArgumentList	arg2		1596669	1					
ANR	1598956	Argument	arg2		1596669	0					
ANR	1598957	Identifier	arg2		1596669	0					
ANR	1598958	Label	case SLJIT_SUB :	739:1:23808:23822	1596669	47	True				
ANR	1598959	Identifier	SLJIT_SUB		1596669	0					
ANR	1598960	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 ) )"		1596669	48					
ANR	1598961	Condition	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"	740:6:23830:23883	1596669	0	True				
ANR	1598962	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"		1596669	0		&&			
ANR	1598963	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1598964	UnaryOperator	!		1596669	0					
ANR	1598965	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1598966	Identifier	flags		1596669	0					
ANR	1598967	Identifier	KEEP_FLAGS		1596669	1					
ANR	1598968	CallExpression	"IS_3_LO_REGS ( dst , arg1 , arg2 )"		1596669	1					
ANR	1598969	Callee	IS_3_LO_REGS		1596669	0					
ANR	1598970	Identifier	IS_3_LO_REGS		1596669	0					
ANR	1598971	ArgumentList	dst		1596669	1					
ANR	1598972	Argument	dst		1596669	0					
ANR	1598973	Identifier	dst		1596669	0					
ANR	1598974	Argument	arg1		1596669	1					
ANR	1598975	Identifier	arg1		1596669	0					
ANR	1598976	Argument	arg2		1596669	2					
ANR	1598977	Identifier	arg2		1596669	0					
ANR	1598978	ReturnStatement	"return push_inst16 ( compiler , SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) ) ;"	741:3:23889:23958	1596669	1	True				
ANR	1598979	CallExpression	"push_inst16 ( compiler , SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) )"		1596669	0					
ANR	1598980	Callee	push_inst16		1596669	0					
ANR	1598981	Identifier	push_inst16		1596669	0					
ANR	1598982	ArgumentList	compiler		1596669	1					
ANR	1598983	Argument	compiler		1596669	0					
ANR	1598984	Identifier	compiler		1596669	0					
ANR	1598985	Argument	SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1596669	1					
ANR	1598986	InclusiveOrExpression	SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1596669	0		|			
ANR	1598987	Identifier	SUBS		1596669	0					
ANR	1598988	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1596669	1		|			
ANR	1598989	CallExpression	RD3 ( dst )		1596669	0					
ANR	1598990	Callee	RD3		1596669	0					
ANR	1598991	Identifier	RD3		1596669	0					
ANR	1598992	ArgumentList	dst		1596669	1					
ANR	1598993	Argument	dst		1596669	0					
ANR	1598994	Identifier	dst		1596669	0					
ANR	1598995	InclusiveOrExpression	RN3 ( arg1 ) | RM3 ( arg2 )		1596669	1		|			
ANR	1598996	CallExpression	RN3 ( arg1 )		1596669	0					
ANR	1598997	Callee	RN3		1596669	0					
ANR	1598998	Identifier	RN3		1596669	0					
ANR	1598999	ArgumentList	arg1		1596669	1					
ANR	1599000	Argument	arg1		1596669	0					
ANR	1599001	Identifier	arg1		1596669	0					
ANR	1599002	CallExpression	RM3 ( arg2 )		1596669	1					
ANR	1599003	Callee	RM3		1596669	0					
ANR	1599004	Identifier	RM3		1596669	0					
ANR	1599005	ArgumentList	arg2		1596669	1					
ANR	1599006	Argument	arg2		1596669	0					
ANR	1599007	Identifier	arg2		1596669	0					
ANR	1599008	ReturnStatement	"return push_inst32 ( compiler , SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	742:2:23962:24054	1596669	49	True				
ANR	1599009	CallExpression	"push_inst32 ( compiler , SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599010	Callee	push_inst32		1596669	0					
ANR	1599011	Identifier	push_inst32		1596669	0					
ANR	1599012	ArgumentList	compiler		1596669	1					
ANR	1599013	Argument	compiler		1596669	0					
ANR	1599014	Identifier	compiler		1596669	0					
ANR	1599015	Argument	SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599016	InclusiveOrExpression	SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599017	Identifier	SUB_W		1596669	0					
ANR	1599018	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599019	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599020	Identifier	flags		1596669	0					
ANR	1599021	Identifier	SET_FLAGS		1596669	1					
ANR	1599022	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599023	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599024	Callee	RD4		1596669	0					
ANR	1599025	Identifier	RD4		1596669	0					
ANR	1599026	ArgumentList	dst		1596669	1					
ANR	1599027	Argument	dst		1596669	0					
ANR	1599028	Identifier	dst		1596669	0					
ANR	1599029	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599030	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599031	Callee	RN4		1596669	0					
ANR	1599032	Identifier	RN4		1596669	0					
ANR	1599033	ArgumentList	arg1		1596669	1					
ANR	1599034	Argument	arg1		1596669	0					
ANR	1599035	Identifier	arg1		1596669	0					
ANR	1599036	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599037	Callee	RM4		1596669	0					
ANR	1599038	Identifier	RM4		1596669	0					
ANR	1599039	ArgumentList	arg2		1596669	1					
ANR	1599040	Argument	arg2		1596669	0					
ANR	1599041	Identifier	arg2		1596669	0					
ANR	1599042	Label	case SLJIT_SUBC :	743:1:24057:24072	1596669	50	True				
ANR	1599043	Identifier	SLJIT_SUBC		1596669	0					
ANR	1599044	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	51					
ANR	1599045	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	744:6:24080:24142	1596669	0	True				
ANR	1599046	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1599047	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1599048	Identifier	dst		1596669	0					
ANR	1599049	Identifier	arg1		1596669	1					
ANR	1599050	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	1		&&			
ANR	1599051	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1599052	UnaryOperator	!		1596669	0					
ANR	1599053	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1599054	Identifier	flags		1596669	0					
ANR	1599055	Identifier	KEEP_FLAGS		1596669	1					
ANR	1599056	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1599057	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599058	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599059	ArgumentList	dst		1596669	1					
ANR	1599060	Argument	dst		1596669	0					
ANR	1599061	Identifier	dst		1596669	0					
ANR	1599062	Argument	arg2		1596669	1					
ANR	1599063	Identifier	arg2		1596669	0					
ANR	1599064	ReturnStatement	"return push_inst16 ( compiler , SBCS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	745:3:24148:24205	1596669	1	True				
ANR	1599065	CallExpression	"push_inst16 ( compiler , SBCS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599066	Callee	push_inst16		1596669	0					
ANR	1599067	Identifier	push_inst16		1596669	0					
ANR	1599068	ArgumentList	compiler		1596669	1					
ANR	1599069	Argument	compiler		1596669	0					
ANR	1599070	Identifier	compiler		1596669	0					
ANR	1599071	Argument	SBCS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1599072	InclusiveOrExpression	SBCS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599073	Identifier	SBCS		1596669	0					
ANR	1599074	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599075	CallExpression	RD3 ( dst )		1596669	0					
ANR	1599076	Callee	RD3		1596669	0					
ANR	1599077	Identifier	RD3		1596669	0					
ANR	1599078	ArgumentList	dst		1596669	1					
ANR	1599079	Argument	dst		1596669	0					
ANR	1599080	Identifier	dst		1596669	0					
ANR	1599081	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599082	Callee	RN3		1596669	0					
ANR	1599083	Identifier	RN3		1596669	0					
ANR	1599084	ArgumentList	arg2		1596669	1					
ANR	1599085	Argument	arg2		1596669	0					
ANR	1599086	Identifier	arg2		1596669	0					
ANR	1599087	ReturnStatement	"return push_inst32 ( compiler , SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	746:2:24209:24301	1596669	52	True				
ANR	1599088	CallExpression	"push_inst32 ( compiler , SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599089	Callee	push_inst32		1596669	0					
ANR	1599090	Identifier	push_inst32		1596669	0					
ANR	1599091	ArgumentList	compiler		1596669	1					
ANR	1599092	Argument	compiler		1596669	0					
ANR	1599093	Identifier	compiler		1596669	0					
ANR	1599094	Argument	SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599095	InclusiveOrExpression	SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599096	Identifier	SBC_W		1596669	0					
ANR	1599097	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599098	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599099	Identifier	flags		1596669	0					
ANR	1599100	Identifier	SET_FLAGS		1596669	1					
ANR	1599101	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599102	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599103	Callee	RD4		1596669	0					
ANR	1599104	Identifier	RD4		1596669	0					
ANR	1599105	ArgumentList	dst		1596669	1					
ANR	1599106	Argument	dst		1596669	0					
ANR	1599107	Identifier	dst		1596669	0					
ANR	1599108	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599109	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599110	Callee	RN4		1596669	0					
ANR	1599111	Identifier	RN4		1596669	0					
ANR	1599112	ArgumentList	arg1		1596669	1					
ANR	1599113	Argument	arg1		1596669	0					
ANR	1599114	Identifier	arg1		1596669	0					
ANR	1599115	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599116	Callee	RM4		1596669	0					
ANR	1599117	Identifier	RM4		1596669	0					
ANR	1599118	ArgumentList	arg2		1596669	1					
ANR	1599119	Argument	arg2		1596669	0					
ANR	1599120	Identifier	arg2		1596669	0					
ANR	1599121	Label	case SLJIT_MUL :	747:1:24304:24318	1596669	53	True				
ANR	1599122	Identifier	SLJIT_MUL		1596669	0					
ANR	1599123	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1596669	54					
ANR	1599124	Condition	! ( flags & SET_FLAGS )	748:6:24326:24345	1596669	0	True				
ANR	1599125	UnaryOperationExpression	! ( flags & SET_FLAGS )		1596669	0					
ANR	1599126	UnaryOperator	!		1596669	0					
ANR	1599127	BitAndExpression	flags & SET_FLAGS		1596669	1		&			
ANR	1599128	Identifier	flags		1596669	0					
ANR	1599129	Identifier	SET_FLAGS		1596669	1					
ANR	1599130	ReturnStatement	"return push_inst32 ( compiler , MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	749:3:24351:24419	1596669	1	True				
ANR	1599131	CallExpression	"push_inst32 ( compiler , MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599132	Callee	push_inst32		1596669	0					
ANR	1599133	Identifier	push_inst32		1596669	0					
ANR	1599134	ArgumentList	compiler		1596669	1					
ANR	1599135	Argument	compiler		1596669	0					
ANR	1599136	Identifier	compiler		1596669	0					
ANR	1599137	Argument	MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599138	InclusiveOrExpression	MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599139	Identifier	MUL		1596669	0					
ANR	1599140	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599141	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599142	Callee	RD4		1596669	0					
ANR	1599143	Identifier	RD4		1596669	0					
ANR	1599144	ArgumentList	dst		1596669	1					
ANR	1599145	Argument	dst		1596669	0					
ANR	1599146	Identifier	dst		1596669	0					
ANR	1599147	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599148	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599149	Callee	RN4		1596669	0					
ANR	1599150	Identifier	RN4		1596669	0					
ANR	1599151	ArgumentList	arg1		1596669	1					
ANR	1599152	Argument	arg1		1596669	0					
ANR	1599153	Identifier	arg1		1596669	0					
ANR	1599154	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599155	Callee	RM4		1596669	0					
ANR	1599156	Identifier	RM4		1596669	0					
ANR	1599157	ArgumentList	arg2		1596669	1					
ANR	1599158	Argument	arg2		1596669	0					
ANR	1599159	Identifier	arg2		1596669	0					
ANR	1599160	ExpressionStatement	SLJIT_ASSERT ( reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2 )	750:2:24423:24478	1596669	55	True				
ANR	1599161	CallExpression	SLJIT_ASSERT ( reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2 )		1596669	0					
ANR	1599162	Callee	SLJIT_ASSERT		1596669	0					
ANR	1599163	Identifier	SLJIT_ASSERT		1596669	0					
ANR	1599164	ArgumentList	reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2		1596669	1					
ANR	1599165	Argument	reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2		1596669	0					
ANR	1599166	AndExpression	reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2		1596669	0		&&			
ANR	1599167	RelationalExpression	reg_map [ TMP_REG2 ] <= 7		1596669	0		<=			
ANR	1599168	ArrayIndexing	reg_map [ TMP_REG2 ]		1596669	0					
ANR	1599169	Identifier	reg_map		1596669	0					
ANR	1599170	Identifier	TMP_REG2		1596669	1					
ANR	1599171	PrimaryExpression	7		1596669	1					
ANR	1599172	EqualityExpression	dst != TMP_REG2		1596669	1		!=			
ANR	1599173	Identifier	dst		1596669	0					
ANR	1599174	Identifier	TMP_REG2		1596669	1					
ANR	1599175	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) )"	751:2:24482:24570	1596669	56	True				
ANR	1599176	CallExpression	"FAIL_IF ( push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) )"		1596669	0					
ANR	1599177	Callee	FAIL_IF		1596669	0					
ANR	1599178	Identifier	FAIL_IF		1596669	0					
ANR	1599179	ArgumentList	"push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	1					
ANR	1599180	Argument	"push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599181	CallExpression	"push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599182	Callee	push_inst32		1596669	0					
ANR	1599183	Identifier	push_inst32		1596669	0					
ANR	1599184	ArgumentList	compiler		1596669	1					
ANR	1599185	Argument	compiler		1596669	0					
ANR	1599186	Identifier	compiler		1596669	0					
ANR	1599187	Argument	SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599188	InclusiveOrExpression	SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599189	Identifier	SMULL		1596669	0					
ANR	1599190	InclusiveOrExpression	RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599191	CallExpression	RT4 ( dst )		1596669	0					
ANR	1599192	Callee	RT4		1596669	0					
ANR	1599193	Identifier	RT4		1596669	0					
ANR	1599194	ArgumentList	dst		1596669	1					
ANR	1599195	Argument	dst		1596669	0					
ANR	1599196	Identifier	dst		1596669	0					
ANR	1599197	InclusiveOrExpression	RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599198	CallExpression	RD4 ( TMP_REG2 )		1596669	0					
ANR	1599199	Callee	RD4		1596669	0					
ANR	1599200	Identifier	RD4		1596669	0					
ANR	1599201	ArgumentList	TMP_REG2		1596669	1					
ANR	1599202	Argument	TMP_REG2		1596669	0					
ANR	1599203	Identifier	TMP_REG2		1596669	0					
ANR	1599204	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599205	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599206	Callee	RN4		1596669	0					
ANR	1599207	Identifier	RN4		1596669	0					
ANR	1599208	ArgumentList	arg1		1596669	1					
ANR	1599209	Argument	arg1		1596669	0					
ANR	1599210	Identifier	arg1		1596669	0					
ANR	1599211	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599212	Callee	RM4		1596669	0					
ANR	1599213	Identifier	RM4		1596669	0					
ANR	1599214	ArgumentList	arg2		1596669	1					
ANR	1599215	Argument	arg2		1596669	0					
ANR	1599216	Identifier	arg2		1596669	0					
ANR	1599217	ReturnStatement	"return push_inst32 ( compiler , CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst ) ) ;"	753:2:24609:24680	1596669	57	True				
ANR	1599218	CallExpression	"push_inst32 ( compiler , CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst ) )"		1596669	0					
ANR	1599219	Callee	push_inst32		1596669	0					
ANR	1599220	Identifier	push_inst32		1596669	0					
ANR	1599221	ArgumentList	compiler		1596669	1					
ANR	1599222	Argument	compiler		1596669	0					
ANR	1599223	Identifier	compiler		1596669	0					
ANR	1599224	Argument	CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst )		1596669	1					
ANR	1599225	InclusiveOrExpression	CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst )		1596669	0		|			
ANR	1599226	Identifier	CMP_W		1596669	0					
ANR	1599227	InclusiveOrExpression	RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst )		1596669	1		|			
ANR	1599228	CallExpression	RN4 ( TMP_REG2 )		1596669	0					
ANR	1599229	Callee	RN4		1596669	0					
ANR	1599230	Identifier	RN4		1596669	0					
ANR	1599231	ArgumentList	TMP_REG2		1596669	1					
ANR	1599232	Argument	TMP_REG2		1596669	0					
ANR	1599233	Identifier	TMP_REG2		1596669	0					
ANR	1599234	InclusiveOrExpression	0x70e0 | RM4 ( dst )		1596669	1		|			
ANR	1599235	PrimaryExpression	0x70e0		1596669	0					
ANR	1599236	CallExpression	RM4 ( dst )		1596669	1					
ANR	1599237	Callee	RM4		1596669	0					
ANR	1599238	Identifier	RM4		1596669	0					
ANR	1599239	ArgumentList	dst		1596669	1					
ANR	1599240	Argument	dst		1596669	0					
ANR	1599241	Identifier	dst		1596669	0					
ANR	1599242	Label	case SLJIT_AND :	754:1:24683:24697	1596669	58	True				
ANR	1599243	Identifier	SLJIT_AND		1596669	0					
ANR	1599244	IfStatement	if ( ! ( flags & KEEP_FLAGS ) )		1596669	59					
ANR	1599245	Condition	! ( flags & KEEP_FLAGS )	755:6:24705:24725	1596669	0	True				
ANR	1599246	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1599247	UnaryOperator	!		1596669	0					
ANR	1599248	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1599249	Identifier	flags		1596669	0					
ANR	1599250	Identifier	KEEP_FLAGS		1596669	1					
ANR	1599251	CompoundStatement		244:29:9353:9353	1596669	1					
ANR	1599252	IfStatement	"if ( dst == arg1 && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	0					
ANR	1599253	Condition	"dst == arg1 && IS_2_LO_REGS ( dst , arg2 )"	756:7:24737:24774	1596669	0	True				
ANR	1599254	AndExpression	"dst == arg1 && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1599255	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1599256	Identifier	dst		1596669	0					
ANR	1599257	Identifier	arg1		1596669	1					
ANR	1599258	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1599259	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599260	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599261	ArgumentList	dst		1596669	1					
ANR	1599262	Argument	dst		1596669	0					
ANR	1599263	Identifier	dst		1596669	0					
ANR	1599264	Argument	arg2		1596669	1					
ANR	1599265	Identifier	arg2		1596669	0					
ANR	1599266	ReturnStatement	"return push_inst16 ( compiler , ANDS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	757:4:24781:24838	1596669	1	True				
ANR	1599267	CallExpression	"push_inst16 ( compiler , ANDS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599268	Callee	push_inst16		1596669	0					
ANR	1599269	Identifier	push_inst16		1596669	0					
ANR	1599270	ArgumentList	compiler		1596669	1					
ANR	1599271	Argument	compiler		1596669	0					
ANR	1599272	Identifier	compiler		1596669	0					
ANR	1599273	Argument	ANDS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1599274	InclusiveOrExpression	ANDS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599275	Identifier	ANDS		1596669	0					
ANR	1599276	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599277	CallExpression	RD3 ( dst )		1596669	0					
ANR	1599278	Callee	RD3		1596669	0					
ANR	1599279	Identifier	RD3		1596669	0					
ANR	1599280	ArgumentList	dst		1596669	1					
ANR	1599281	Argument	dst		1596669	0					
ANR	1599282	Identifier	dst		1596669	0					
ANR	1599283	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599284	Callee	RN3		1596669	0					
ANR	1599285	Identifier	RN3		1596669	0					
ANR	1599286	ArgumentList	arg2		1596669	1					
ANR	1599287	Argument	arg2		1596669	0					
ANR	1599288	Identifier	arg2		1596669	0					
ANR	1599289	IfStatement	"if ( ( flags & UNUSED_RETURN ) && IS_2_LO_REGS ( arg1 , arg2 ) )"		1596669	1					
ANR	1599290	Condition	"( flags & UNUSED_RETURN ) && IS_2_LO_REGS ( arg1 , arg2 )"	758:7:24847:24897	1596669	0	True				
ANR	1599291	AndExpression	"( flags & UNUSED_RETURN ) && IS_2_LO_REGS ( arg1 , arg2 )"		1596669	0		&&			
ANR	1599292	BitAndExpression	flags & UNUSED_RETURN		1596669	0		&			
ANR	1599293	Identifier	flags		1596669	0					
ANR	1599294	Identifier	UNUSED_RETURN		1596669	1					
ANR	1599295	CallExpression	"IS_2_LO_REGS ( arg1 , arg2 )"		1596669	1					
ANR	1599296	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599297	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599298	ArgumentList	arg1		1596669	1					
ANR	1599299	Argument	arg1		1596669	0					
ANR	1599300	Identifier	arg1		1596669	0					
ANR	1599301	Argument	arg2		1596669	1					
ANR	1599302	Identifier	arg2		1596669	0					
ANR	1599303	ReturnStatement	"return push_inst16 ( compiler , TST | RD3 ( arg1 ) | RN3 ( arg2 ) ) ;"	759:4:24904:24961	1596669	1	True				
ANR	1599304	CallExpression	"push_inst16 ( compiler , TST | RD3 ( arg1 ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599305	Callee	push_inst16		1596669	0					
ANR	1599306	Identifier	push_inst16		1596669	0					
ANR	1599307	ArgumentList	compiler		1596669	1					
ANR	1599308	Argument	compiler		1596669	0					
ANR	1599309	Identifier	compiler		1596669	0					
ANR	1599310	Argument	TST | RD3 ( arg1 ) | RN3 ( arg2 )		1596669	1					
ANR	1599311	InclusiveOrExpression	TST | RD3 ( arg1 ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599312	Identifier	TST		1596669	0					
ANR	1599313	InclusiveOrExpression	RD3 ( arg1 ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599314	CallExpression	RD3 ( arg1 )		1596669	0					
ANR	1599315	Callee	RD3		1596669	0					
ANR	1599316	Identifier	RD3		1596669	0					
ANR	1599317	ArgumentList	arg1		1596669	1					
ANR	1599318	Argument	arg1		1596669	0					
ANR	1599319	Identifier	arg1		1596669	0					
ANR	1599320	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599321	Callee	RN3		1596669	0					
ANR	1599322	Identifier	RN3		1596669	0					
ANR	1599323	ArgumentList	arg2		1596669	1					
ANR	1599324	Argument	arg2		1596669	0					
ANR	1599325	Identifier	arg2		1596669	0					
ANR	1599326	ReturnStatement	"return push_inst32 ( compiler , AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	761:2:24969:25061	1596669	60	True				
ANR	1599327	CallExpression	"push_inst32 ( compiler , AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599328	Callee	push_inst32		1596669	0					
ANR	1599329	Identifier	push_inst32		1596669	0					
ANR	1599330	ArgumentList	compiler		1596669	1					
ANR	1599331	Argument	compiler		1596669	0					
ANR	1599332	Identifier	compiler		1596669	0					
ANR	1599333	Argument	AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599334	InclusiveOrExpression	AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599335	Identifier	AND_W		1596669	0					
ANR	1599336	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599337	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599338	Identifier	flags		1596669	0					
ANR	1599339	Identifier	SET_FLAGS		1596669	1					
ANR	1599340	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599341	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599342	Callee	RD4		1596669	0					
ANR	1599343	Identifier	RD4		1596669	0					
ANR	1599344	ArgumentList	dst		1596669	1					
ANR	1599345	Argument	dst		1596669	0					
ANR	1599346	Identifier	dst		1596669	0					
ANR	1599347	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599348	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599349	Callee	RN4		1596669	0					
ANR	1599350	Identifier	RN4		1596669	0					
ANR	1599351	ArgumentList	arg1		1596669	1					
ANR	1599352	Argument	arg1		1596669	0					
ANR	1599353	Identifier	arg1		1596669	0					
ANR	1599354	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599355	Callee	RM4		1596669	0					
ANR	1599356	Identifier	RM4		1596669	0					
ANR	1599357	ArgumentList	arg2		1596669	1					
ANR	1599358	Argument	arg2		1596669	0					
ANR	1599359	Identifier	arg2		1596669	0					
ANR	1599360	Label	case SLJIT_OR :	762:1:25064:25077	1596669	61	True				
ANR	1599361	Identifier	SLJIT_OR		1596669	0					
ANR	1599362	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	62					
ANR	1599363	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	763:6:25085:25147	1596669	0	True				
ANR	1599364	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1599365	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1599366	Identifier	dst		1596669	0					
ANR	1599367	Identifier	arg1		1596669	1					
ANR	1599368	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	1		&&			
ANR	1599369	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1599370	UnaryOperator	!		1596669	0					
ANR	1599371	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1599372	Identifier	flags		1596669	0					
ANR	1599373	Identifier	KEEP_FLAGS		1596669	1					
ANR	1599374	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1599375	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599376	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599377	ArgumentList	dst		1596669	1					
ANR	1599378	Argument	dst		1596669	0					
ANR	1599379	Identifier	dst		1596669	0					
ANR	1599380	Argument	arg2		1596669	1					
ANR	1599381	Identifier	arg2		1596669	0					
ANR	1599382	ReturnStatement	"return push_inst16 ( compiler , ORRS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	764:3:25153:25210	1596669	1	True				
ANR	1599383	CallExpression	"push_inst16 ( compiler , ORRS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599384	Callee	push_inst16		1596669	0					
ANR	1599385	Identifier	push_inst16		1596669	0					
ANR	1599386	ArgumentList	compiler		1596669	1					
ANR	1599387	Argument	compiler		1596669	0					
ANR	1599388	Identifier	compiler		1596669	0					
ANR	1599389	Argument	ORRS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1599390	InclusiveOrExpression	ORRS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599391	Identifier	ORRS		1596669	0					
ANR	1599392	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599393	CallExpression	RD3 ( dst )		1596669	0					
ANR	1599394	Callee	RD3		1596669	0					
ANR	1599395	Identifier	RD3		1596669	0					
ANR	1599396	ArgumentList	dst		1596669	1					
ANR	1599397	Argument	dst		1596669	0					
ANR	1599398	Identifier	dst		1596669	0					
ANR	1599399	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599400	Callee	RN3		1596669	0					
ANR	1599401	Identifier	RN3		1596669	0					
ANR	1599402	ArgumentList	arg2		1596669	1					
ANR	1599403	Argument	arg2		1596669	0					
ANR	1599404	Identifier	arg2		1596669	0					
ANR	1599405	ReturnStatement	"return push_inst32 ( compiler , ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	765:2:25214:25306	1596669	63	True				
ANR	1599406	CallExpression	"push_inst32 ( compiler , ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599407	Callee	push_inst32		1596669	0					
ANR	1599408	Identifier	push_inst32		1596669	0					
ANR	1599409	ArgumentList	compiler		1596669	1					
ANR	1599410	Argument	compiler		1596669	0					
ANR	1599411	Identifier	compiler		1596669	0					
ANR	1599412	Argument	ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599413	InclusiveOrExpression	ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599414	Identifier	ORR_W		1596669	0					
ANR	1599415	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599416	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599417	Identifier	flags		1596669	0					
ANR	1599418	Identifier	SET_FLAGS		1596669	1					
ANR	1599419	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599420	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599421	Callee	RD4		1596669	0					
ANR	1599422	Identifier	RD4		1596669	0					
ANR	1599423	ArgumentList	dst		1596669	1					
ANR	1599424	Argument	dst		1596669	0					
ANR	1599425	Identifier	dst		1596669	0					
ANR	1599426	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599427	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599428	Callee	RN4		1596669	0					
ANR	1599429	Identifier	RN4		1596669	0					
ANR	1599430	ArgumentList	arg1		1596669	1					
ANR	1599431	Argument	arg1		1596669	0					
ANR	1599432	Identifier	arg1		1596669	0					
ANR	1599433	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599434	Callee	RM4		1596669	0					
ANR	1599435	Identifier	RM4		1596669	0					
ANR	1599436	ArgumentList	arg2		1596669	1					
ANR	1599437	Argument	arg2		1596669	0					
ANR	1599438	Identifier	arg2		1596669	0					
ANR	1599439	Label	case SLJIT_XOR :	766:1:25309:25323	1596669	64	True				
ANR	1599440	Identifier	SLJIT_XOR		1596669	0					
ANR	1599441	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	65					
ANR	1599442	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	767:6:25331:25393	1596669	0	True				
ANR	1599443	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1599444	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1599445	Identifier	dst		1596669	0					
ANR	1599446	Identifier	arg1		1596669	1					
ANR	1599447	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	1		&&			
ANR	1599448	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1599449	UnaryOperator	!		1596669	0					
ANR	1599450	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1599451	Identifier	flags		1596669	0					
ANR	1599452	Identifier	KEEP_FLAGS		1596669	1					
ANR	1599453	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1599454	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599455	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599456	ArgumentList	dst		1596669	1					
ANR	1599457	Argument	dst		1596669	0					
ANR	1599458	Identifier	dst		1596669	0					
ANR	1599459	Argument	arg2		1596669	1					
ANR	1599460	Identifier	arg2		1596669	0					
ANR	1599461	ReturnStatement	"return push_inst16 ( compiler , EORS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	768:3:25399:25456	1596669	1	True				
ANR	1599462	CallExpression	"push_inst16 ( compiler , EORS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599463	Callee	push_inst16		1596669	0					
ANR	1599464	Identifier	push_inst16		1596669	0					
ANR	1599465	ArgumentList	compiler		1596669	1					
ANR	1599466	Argument	compiler		1596669	0					
ANR	1599467	Identifier	compiler		1596669	0					
ANR	1599468	Argument	EORS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1599469	InclusiveOrExpression	EORS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599470	Identifier	EORS		1596669	0					
ANR	1599471	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599472	CallExpression	RD3 ( dst )		1596669	0					
ANR	1599473	Callee	RD3		1596669	0					
ANR	1599474	Identifier	RD3		1596669	0					
ANR	1599475	ArgumentList	dst		1596669	1					
ANR	1599476	Argument	dst		1596669	0					
ANR	1599477	Identifier	dst		1596669	0					
ANR	1599478	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599479	Callee	RN3		1596669	0					
ANR	1599480	Identifier	RN3		1596669	0					
ANR	1599481	ArgumentList	arg2		1596669	1					
ANR	1599482	Argument	arg2		1596669	0					
ANR	1599483	Identifier	arg2		1596669	0					
ANR	1599484	ReturnStatement	"return push_inst32 ( compiler , EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	769:2:25460:25552	1596669	66	True				
ANR	1599485	CallExpression	"push_inst32 ( compiler , EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599486	Callee	push_inst32		1596669	0					
ANR	1599487	Identifier	push_inst32		1596669	0					
ANR	1599488	ArgumentList	compiler		1596669	1					
ANR	1599489	Argument	compiler		1596669	0					
ANR	1599490	Identifier	compiler		1596669	0					
ANR	1599491	Argument	EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599492	InclusiveOrExpression	EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599493	Identifier	EOR_W		1596669	0					
ANR	1599494	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599495	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599496	Identifier	flags		1596669	0					
ANR	1599497	Identifier	SET_FLAGS		1596669	1					
ANR	1599498	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599499	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599500	Callee	RD4		1596669	0					
ANR	1599501	Identifier	RD4		1596669	0					
ANR	1599502	ArgumentList	dst		1596669	1					
ANR	1599503	Argument	dst		1596669	0					
ANR	1599504	Identifier	dst		1596669	0					
ANR	1599505	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599506	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599507	Callee	RN4		1596669	0					
ANR	1599508	Identifier	RN4		1596669	0					
ANR	1599509	ArgumentList	arg1		1596669	1					
ANR	1599510	Argument	arg1		1596669	0					
ANR	1599511	Identifier	arg1		1596669	0					
ANR	1599512	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599513	Callee	RM4		1596669	0					
ANR	1599514	Identifier	RM4		1596669	0					
ANR	1599515	ArgumentList	arg2		1596669	1					
ANR	1599516	Argument	arg2		1596669	0					
ANR	1599517	Identifier	arg2		1596669	0					
ANR	1599518	Label	case SLJIT_SHL :	770:1:25555:25569	1596669	67	True				
ANR	1599519	Identifier	SLJIT_SHL		1596669	0					
ANR	1599520	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	68					
ANR	1599521	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	771:6:25577:25639	1596669	0	True				
ANR	1599522	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1599523	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1599524	Identifier	dst		1596669	0					
ANR	1599525	Identifier	arg1		1596669	1					
ANR	1599526	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	1		&&			
ANR	1599527	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1599528	UnaryOperator	!		1596669	0					
ANR	1599529	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1599530	Identifier	flags		1596669	0					
ANR	1599531	Identifier	KEEP_FLAGS		1596669	1					
ANR	1599532	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1599533	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599534	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599535	ArgumentList	dst		1596669	1					
ANR	1599536	Argument	dst		1596669	0					
ANR	1599537	Identifier	dst		1596669	0					
ANR	1599538	Argument	arg2		1596669	1					
ANR	1599539	Identifier	arg2		1596669	0					
ANR	1599540	ReturnStatement	"return push_inst16 ( compiler , LSLS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	772:3:25645:25702	1596669	1	True				
ANR	1599541	CallExpression	"push_inst16 ( compiler , LSLS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599542	Callee	push_inst16		1596669	0					
ANR	1599543	Identifier	push_inst16		1596669	0					
ANR	1599544	ArgumentList	compiler		1596669	1					
ANR	1599545	Argument	compiler		1596669	0					
ANR	1599546	Identifier	compiler		1596669	0					
ANR	1599547	Argument	LSLS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1599548	InclusiveOrExpression	LSLS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599549	Identifier	LSLS		1596669	0					
ANR	1599550	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599551	CallExpression	RD3 ( dst )		1596669	0					
ANR	1599552	Callee	RD3		1596669	0					
ANR	1599553	Identifier	RD3		1596669	0					
ANR	1599554	ArgumentList	dst		1596669	1					
ANR	1599555	Argument	dst		1596669	0					
ANR	1599556	Identifier	dst		1596669	0					
ANR	1599557	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599558	Callee	RN3		1596669	0					
ANR	1599559	Identifier	RN3		1596669	0					
ANR	1599560	ArgumentList	arg2		1596669	1					
ANR	1599561	Argument	arg2		1596669	0					
ANR	1599562	Identifier	arg2		1596669	0					
ANR	1599563	ReturnStatement	"return push_inst32 ( compiler , LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	773:2:25706:25798	1596669	69	True				
ANR	1599564	CallExpression	"push_inst32 ( compiler , LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599565	Callee	push_inst32		1596669	0					
ANR	1599566	Identifier	push_inst32		1596669	0					
ANR	1599567	ArgumentList	compiler		1596669	1					
ANR	1599568	Argument	compiler		1596669	0					
ANR	1599569	Identifier	compiler		1596669	0					
ANR	1599570	Argument	LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599571	InclusiveOrExpression	LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599572	Identifier	LSL_W		1596669	0					
ANR	1599573	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599574	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599575	Identifier	flags		1596669	0					
ANR	1599576	Identifier	SET_FLAGS		1596669	1					
ANR	1599577	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599578	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599579	Callee	RD4		1596669	0					
ANR	1599580	Identifier	RD4		1596669	0					
ANR	1599581	ArgumentList	dst		1596669	1					
ANR	1599582	Argument	dst		1596669	0					
ANR	1599583	Identifier	dst		1596669	0					
ANR	1599584	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599585	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599586	Callee	RN4		1596669	0					
ANR	1599587	Identifier	RN4		1596669	0					
ANR	1599588	ArgumentList	arg1		1596669	1					
ANR	1599589	Argument	arg1		1596669	0					
ANR	1599590	Identifier	arg1		1596669	0					
ANR	1599591	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599592	Callee	RM4		1596669	0					
ANR	1599593	Identifier	RM4		1596669	0					
ANR	1599594	ArgumentList	arg2		1596669	1					
ANR	1599595	Argument	arg2		1596669	0					
ANR	1599596	Identifier	arg2		1596669	0					
ANR	1599597	Label	case SLJIT_LSHR :	774:1:25801:25816	1596669	70	True				
ANR	1599598	Identifier	SLJIT_LSHR		1596669	0					
ANR	1599599	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	71					
ANR	1599600	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	775:6:25824:25886	1596669	0	True				
ANR	1599601	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1599602	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1599603	Identifier	dst		1596669	0					
ANR	1599604	Identifier	arg1		1596669	1					
ANR	1599605	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	1		&&			
ANR	1599606	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1599607	UnaryOperator	!		1596669	0					
ANR	1599608	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1599609	Identifier	flags		1596669	0					
ANR	1599610	Identifier	KEEP_FLAGS		1596669	1					
ANR	1599611	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1599612	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599613	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599614	ArgumentList	dst		1596669	1					
ANR	1599615	Argument	dst		1596669	0					
ANR	1599616	Identifier	dst		1596669	0					
ANR	1599617	Argument	arg2		1596669	1					
ANR	1599618	Identifier	arg2		1596669	0					
ANR	1599619	ReturnStatement	"return push_inst16 ( compiler , LSRS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	776:3:25892:25949	1596669	1	True				
ANR	1599620	CallExpression	"push_inst16 ( compiler , LSRS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599621	Callee	push_inst16		1596669	0					
ANR	1599622	Identifier	push_inst16		1596669	0					
ANR	1599623	ArgumentList	compiler		1596669	1					
ANR	1599624	Argument	compiler		1596669	0					
ANR	1599625	Identifier	compiler		1596669	0					
ANR	1599626	Argument	LSRS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1599627	InclusiveOrExpression	LSRS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599628	Identifier	LSRS		1596669	0					
ANR	1599629	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599630	CallExpression	RD3 ( dst )		1596669	0					
ANR	1599631	Callee	RD3		1596669	0					
ANR	1599632	Identifier	RD3		1596669	0					
ANR	1599633	ArgumentList	dst		1596669	1					
ANR	1599634	Argument	dst		1596669	0					
ANR	1599635	Identifier	dst		1596669	0					
ANR	1599636	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599637	Callee	RN3		1596669	0					
ANR	1599638	Identifier	RN3		1596669	0					
ANR	1599639	ArgumentList	arg2		1596669	1					
ANR	1599640	Argument	arg2		1596669	0					
ANR	1599641	Identifier	arg2		1596669	0					
ANR	1599642	ReturnStatement	"return push_inst32 ( compiler , LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	777:2:25953:26045	1596669	72	True				
ANR	1599643	CallExpression	"push_inst32 ( compiler , LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599644	Callee	push_inst32		1596669	0					
ANR	1599645	Identifier	push_inst32		1596669	0					
ANR	1599646	ArgumentList	compiler		1596669	1					
ANR	1599647	Argument	compiler		1596669	0					
ANR	1599648	Identifier	compiler		1596669	0					
ANR	1599649	Argument	LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599650	InclusiveOrExpression	LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599651	Identifier	LSR_W		1596669	0					
ANR	1599652	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599653	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599654	Identifier	flags		1596669	0					
ANR	1599655	Identifier	SET_FLAGS		1596669	1					
ANR	1599656	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599657	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599658	Callee	RD4		1596669	0					
ANR	1599659	Identifier	RD4		1596669	0					
ANR	1599660	ArgumentList	dst		1596669	1					
ANR	1599661	Argument	dst		1596669	0					
ANR	1599662	Identifier	dst		1596669	0					
ANR	1599663	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599664	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599665	Callee	RN4		1596669	0					
ANR	1599666	Identifier	RN4		1596669	0					
ANR	1599667	ArgumentList	arg1		1596669	1					
ANR	1599668	Argument	arg1		1596669	0					
ANR	1599669	Identifier	arg1		1596669	0					
ANR	1599670	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599671	Callee	RM4		1596669	0					
ANR	1599672	Identifier	RM4		1596669	0					
ANR	1599673	ArgumentList	arg2		1596669	1					
ANR	1599674	Argument	arg2		1596669	0					
ANR	1599675	Identifier	arg2		1596669	0					
ANR	1599676	Label	case SLJIT_ASHR :	778:1:26048:26063	1596669	73	True				
ANR	1599677	Identifier	SLJIT_ASHR		1596669	0					
ANR	1599678	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1596669	74					
ANR	1599679	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	779:6:26071:26133	1596669	0	True				
ANR	1599680	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	0		&&			
ANR	1599681	EqualityExpression	dst == arg1		1596669	0		==			
ANR	1599682	Identifier	dst		1596669	0					
ANR	1599683	Identifier	arg1		1596669	1					
ANR	1599684	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1596669	1		&&			
ANR	1599685	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1596669	0					
ANR	1599686	UnaryOperator	!		1596669	0					
ANR	1599687	BitAndExpression	flags & KEEP_FLAGS		1596669	1		&			
ANR	1599688	Identifier	flags		1596669	0					
ANR	1599689	Identifier	KEEP_FLAGS		1596669	1					
ANR	1599690	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1596669	1					
ANR	1599691	Callee	IS_2_LO_REGS		1596669	0					
ANR	1599692	Identifier	IS_2_LO_REGS		1596669	0					
ANR	1599693	ArgumentList	dst		1596669	1					
ANR	1599694	Argument	dst		1596669	0					
ANR	1599695	Identifier	dst		1596669	0					
ANR	1599696	Argument	arg2		1596669	1					
ANR	1599697	Identifier	arg2		1596669	0					
ANR	1599698	ReturnStatement	"return push_inst16 ( compiler , ASRS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	780:3:26139:26196	1596669	1	True				
ANR	1599699	CallExpression	"push_inst16 ( compiler , ASRS | RD3 ( dst ) | RN3 ( arg2 ) )"		1596669	0					
ANR	1599700	Callee	push_inst16		1596669	0					
ANR	1599701	Identifier	push_inst16		1596669	0					
ANR	1599702	ArgumentList	compiler		1596669	1					
ANR	1599703	Argument	compiler		1596669	0					
ANR	1599704	Identifier	compiler		1596669	0					
ANR	1599705	Argument	ASRS | RD3 ( dst ) | RN3 ( arg2 )		1596669	1					
ANR	1599706	InclusiveOrExpression	ASRS | RD3 ( dst ) | RN3 ( arg2 )		1596669	0		|			
ANR	1599707	Identifier	ASRS		1596669	0					
ANR	1599708	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1596669	1		|			
ANR	1599709	CallExpression	RD3 ( dst )		1596669	0					
ANR	1599710	Callee	RD3		1596669	0					
ANR	1599711	Identifier	RD3		1596669	0					
ANR	1599712	ArgumentList	dst		1596669	1					
ANR	1599713	Argument	dst		1596669	0					
ANR	1599714	Identifier	dst		1596669	0					
ANR	1599715	CallExpression	RN3 ( arg2 )		1596669	1					
ANR	1599716	Callee	RN3		1596669	0					
ANR	1599717	Identifier	RN3		1596669	0					
ANR	1599718	ArgumentList	arg2		1596669	1					
ANR	1599719	Argument	arg2		1596669	0					
ANR	1599720	Identifier	arg2		1596669	0					
ANR	1599721	ReturnStatement	"return push_inst32 ( compiler , ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	781:2:26200:26292	1596669	75	True				
ANR	1599722	CallExpression	"push_inst32 ( compiler , ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1596669	0					
ANR	1599723	Callee	push_inst32		1596669	0					
ANR	1599724	Identifier	push_inst32		1596669	0					
ANR	1599725	ArgumentList	compiler		1596669	1					
ANR	1599726	Argument	compiler		1596669	0					
ANR	1599727	Identifier	compiler		1596669	0					
ANR	1599728	Argument	ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1					
ANR	1599729	InclusiveOrExpression	ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	0		|			
ANR	1599730	Identifier	ASR_W		1596669	0					
ANR	1599731	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599732	BitAndExpression	flags & SET_FLAGS		1596669	0		&			
ANR	1599733	Identifier	flags		1596669	0					
ANR	1599734	Identifier	SET_FLAGS		1596669	1					
ANR	1599735	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599736	CallExpression	RD4 ( dst )		1596669	0					
ANR	1599737	Callee	RD4		1596669	0					
ANR	1599738	Identifier	RD4		1596669	0					
ANR	1599739	ArgumentList	dst		1596669	1					
ANR	1599740	Argument	dst		1596669	0					
ANR	1599741	Identifier	dst		1596669	0					
ANR	1599742	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1596669	1		|			
ANR	1599743	CallExpression	RN4 ( arg1 )		1596669	0					
ANR	1599744	Callee	RN4		1596669	0					
ANR	1599745	Identifier	RN4		1596669	0					
ANR	1599746	ArgumentList	arg1		1596669	1					
ANR	1599747	Argument	arg1		1596669	0					
ANR	1599748	Identifier	arg1		1596669	0					
ANR	1599749	CallExpression	RM4 ( arg2 )		1596669	1					
ANR	1599750	Callee	RM4		1596669	0					
ANR	1599751	Identifier	RM4		1596669	0					
ANR	1599752	ArgumentList	arg2		1596669	1					
ANR	1599753	Argument	arg2		1596669	0					
ANR	1599754	Identifier	arg2		1596669	0					
ANR	1599755	ExpressionStatement	SLJIT_ASSERT_STOP ( )	784:1:26299:26318	1596669	5	True				
ANR	1599756	CallExpression	SLJIT_ASSERT_STOP ( )		1596669	0					
ANR	1599757	Callee	SLJIT_ASSERT_STOP		1596669	0					
ANR	1599758	Identifier	SLJIT_ASSERT_STOP		1596669	0					
ANR	1599759	ArgumentList			1596669	1					
ANR	1599760	ReturnStatement	return SLJIT_SUCCESS ;	785:1:26321:26341	1596669	6	True				
ANR	1599761	Identifier	SLJIT_SUCCESS		1596669	0					
ANR	1599762	ReturnType	static sljit_si		1596669	1					
ANR	1599763	Identifier	emit_op_imm		1596669	2					
ANR	1599764	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si dst , sljit_uw arg1 , sljit_uw arg2"		1596669	3					
ANR	1599765	Parameter	struct sljit_compiler * compiler	511:28:15281:15311	1596669	0	True				
ANR	1599766	ParameterType	struct sljit_compiler *		1596669	0					
ANR	1599767	Identifier	compiler		1596669	1					
ANR	1599768	Parameter	sljit_si flags	511:61:15314:15327	1596669	1	True				
ANR	1599769	ParameterType	sljit_si		1596669	0					
ANR	1599770	Identifier	flags		1596669	1					
ANR	1599771	Parameter	sljit_si dst	511:77:15330:15341	1596669	2	True				
ANR	1599772	ParameterType	sljit_si		1596669	0					
ANR	1599773	Identifier	dst		1596669	1					
ANR	1599774	Parameter	sljit_uw arg1	511:91:15344:15356	1596669	3	True				
ANR	1599775	ParameterType	sljit_uw		1596669	0					
ANR	1599776	Identifier	arg1		1596669	1					
ANR	1599777	Parameter	sljit_uw arg2	511:106:15359:15371	1596669	4	True				
ANR	1599778	ParameterType	sljit_uw		1596669	0					
ANR	1599779	Identifier	arg2		1596669	1					
ANR	1599780	CFGEntryNode	ENTRY		1596669		True				
ANR	1599781	CFGExitNode	EXIT		1596669		True				
ANR	1599782	Symbol	~ARG1_IMM		1596669						
ANR	1599783	Symbol	push_inst16		1596669						
ANR	1599784	Symbol	SXTB_W		1596669						
ANR	1599785	Symbol	MVNS		1596669						
ANR	1599786	Symbol	ASRSI		1596669						
ANR	1599787	Symbol	CLZ		1596669						
ANR	1599788	Symbol	SUBSI3		1596669						
ANR	1599789	Symbol	LSRSI		1596669						
ANR	1599790	Symbol	SUBS		1596669						
ANR	1599791	Symbol	SBC_W		1596669						
ANR	1599792	Symbol	* TMP_REG2		1596669						
ANR	1599793	Symbol	LSRS		1596669						
ANR	1599794	Symbol	* reg_map		1596669						
ANR	1599795	Symbol	RSB_WI		1596669						
ANR	1599796	Symbol	EOR_W		1596669						
ANR	1599797	Symbol	RT4		1596669						
ANR	1599798	Symbol	MVN_W		1596669						
ANR	1599799	Symbol	IS_2_LO_REGS		1596669						
ANR	1599800	Symbol	SUB_WI		1596669						
ANR	1599801	Symbol	RD3		1596669						
ANR	1599802	Symbol	EORI		1596669						
ANR	1599803	Symbol	SUB_W		1596669						
ANR	1599804	Symbol	ORRS		1596669						
ANR	1599805	Symbol	RD4		1596669						
ANR	1599806	Symbol	flags		1596669						
ANR	1599807	Symbol	ADDSI8		1596669						
ANR	1599808	Symbol	UNUSED_RETURN		1596669						
ANR	1599809	Symbol	SUBWI		1596669						
ANR	1599810	Symbol	EORS		1596669						
ANR	1599811	Symbol	SMULL		1596669						
ANR	1599812	Symbol	RM4		1596669						
ANR	1599813	Symbol	RM3		1596669						
ANR	1599814	Symbol	push_inst32		1596669						
ANR	1599815	Symbol	ANDS		1596669						
ANR	1599816	Symbol	UXTH_W		1596669						
ANR	1599817	Symbol	LSL_W		1596669						
ANR	1599818	Symbol	SLJIT_SUCCESS		1596669						
ANR	1599819	Symbol	ANDI		1596669						
ANR	1599820	Symbol	LSLS		1596669						
ANR	1599821	Symbol	UXTH		1596669						
ANR	1599822	Symbol	IS_3_LO_REGS		1596669						
ANR	1599823	Symbol	RDN3		1596669						
ANR	1599824	Symbol	RN3		1596669						
ANR	1599825	Symbol	UXTB		1596669						
ANR	1599826	Symbol	AND_W		1596669						
ANR	1599827	Symbol	RN4		1596669						
ANR	1599828	Symbol	ORRI		1596669						
ANR	1599829	Symbol	TMP_REG2		1596669						
ANR	1599830	Symbol	ADD		1596669						
ANR	1599831	Symbol	TMP_REG1		1596669						
ANR	1599832	Symbol	ASR_W		1596669						
ANR	1599833	Symbol	IMM3		1596669						
ANR	1599834	Symbol	reg_map		1596669						
ANR	1599835	Symbol	IMM8		1596669						
ANR	1599836	Symbol	IMM5		1596669						
ANR	1599837	Symbol	LSR_WI		1596669						
ANR	1599838	Symbol	SXTH_W		1596669						
ANR	1599839	Symbol	* dst		1596669						
ANR	1599840	Symbol	reg		1596669						
ANR	1599841	Symbol	LSR_W		1596669						
ANR	1599842	Symbol	ORR_W		1596669						
ANR	1599843	Symbol	KEEP_FLAGS		1596669						
ANR	1599844	Symbol	ADD_WI		1596669						
ANR	1599845	Symbol	RSBSI		1596669						
ANR	1599846	Symbol	ADDWI		1596669						
ANR	1599847	Symbol	IMM12		1596669						
ANR	1599848	Symbol	MUL		1596669						
ANR	1599849	Symbol	ARG2_IMM		1596669						
ANR	1599850	Symbol	nimm		1596669						
ANR	1599851	Symbol	ADD_W		1596669						
ANR	1599852	Symbol	CMP_W		1596669						
ANR	1599853	Symbol	SET_FLAGS		1596669						
ANR	1599854	Symbol	MOV_W		1596669						
ANR	1599855	Symbol	arg2		1596669						
ANR	1599856	Symbol	~imm		1596669						
ANR	1599857	Symbol	ASR_WI		1596669						
ANR	1599858	Symbol	SXTB		1596669						
ANR	1599859	Symbol	TST		1596669						
ANR	1599860	Symbol	ADDSI3		1596669						
ANR	1599861	Symbol	arg1		1596669						
ANR	1599862	Symbol	SXTH		1596669						
ANR	1599863	Symbol	SLJIT_UNLIKELY		1596669						
ANR	1599864	Symbol	dst		1596669						
ANR	1599865	Symbol	imm		1596669						
ANR	1599866	Symbol	LSL_WI		1596669						
ANR	1599867	Symbol	ADCS		1596669						
ANR	1599868	Symbol	SBCI		1596669						
ANR	1599869	Symbol	SET_REGS44		1596669						
ANR	1599870	Symbol	load_immediate		1596669						
ANR	1599871	Symbol	INVALID_IMM		1596669						
ANR	1599872	Symbol	ARG1_IMM		1596669						
ANR	1599873	Symbol	ADCI		1596669						
ANR	1599874	Symbol	SBCS		1596669						
ANR	1599875	Symbol	compiler		1596669						
ANR	1599876	Symbol	UXTB_W		1596669						
ANR	1599877	Symbol	get_imm		1596669						
ANR	1599878	Symbol	ADC_W		1596669						
ANR	1599879	Symbol	ADDS		1596669						
ANR	1599880	Symbol	SUBSI8		1596669						
ANR	1599881	Symbol	ASRS		1596669						
ANR	1599882	Symbol	LSLSI		1596669						
ANR	1599883	Symbol	BICI		1596669						
ANR	1599884	Symbol	MOV		1596669						
ANR	1599885	Symbol	ORNI		1596669						
ANR	1599886	Symbol	MOVS		1596669						
ANR	1599887	Symbol	CMPI		1596669						
ANR	1599888	DeclStmt									
ANR	1599889	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 12 ]	sljit_mem16
ANR	1599890	DeclStmt									
ANR	1599891	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 12 ]	sljit_mem16_imm5
ANR	1599892	DeclStmt									
ANR	1599893	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 12 ]	sljit_mem32
ANR	1599894	Function	emit_set_delta	870:0:28330:28970							
ANR	1599895	FunctionDef	"emit_set_delta (struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value)"		1599894	0					
ANR	1599896	CompoundStatement		871:0:28438:28970	1599894	0					
ANR	1599897	IfStatement	if ( value >= 0 )		1599894	0					
ANR	1599898	Condition	value >= 0	872:5:28445:28454	1599894	0	True				
ANR	1599899	RelationalExpression	value >= 0		1599894	0		>=			
ANR	1599900	Identifier	value		1599894	0					
ANR	1599901	PrimaryExpression	0		1599894	1					
ANR	1599902	CompoundStatement		2:17:18:18	1599894	1					
ANR	1599903	IfStatement	if ( value <= 0xfff )		1599894	0					
ANR	1599904	Condition	value <= 0xfff	873:6:28465:28478	1599894	0	True				
ANR	1599905	RelationalExpression	value <= 0xfff		1599894	0		<=			
ANR	1599906	Identifier	value		1599894	0					
ANR	1599907	PrimaryExpression	0xfff		1599894	1					
ANR	1599908	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) ) ;"	874:3:28484:28556	1599894	1	True				
ANR	1599909	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) )"		1599894	0					
ANR	1599910	Callee	push_inst32		1599894	0					
ANR	1599911	Identifier	push_inst32		1599894	0					
ANR	1599912	ArgumentList	compiler		1599894	1					
ANR	1599913	Argument	compiler		1599894	0					
ANR	1599914	Identifier	compiler		1599894	0					
ANR	1599915	Argument	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1599894	1					
ANR	1599916	InclusiveOrExpression	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1599894	0		|			
ANR	1599917	Identifier	ADDWI		1599894	0					
ANR	1599918	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1599894	1		|			
ANR	1599919	CallExpression	RD4 ( dst )		1599894	0					
ANR	1599920	Callee	RD4		1599894	0					
ANR	1599921	Identifier	RD4		1599894	0					
ANR	1599922	ArgumentList	dst		1599894	1					
ANR	1599923	Argument	dst		1599894	0					
ANR	1599924	Identifier	dst		1599894	0					
ANR	1599925	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( value )		1599894	1		|			
ANR	1599926	CallExpression	RN4 ( reg )		1599894	0					
ANR	1599927	Callee	RN4		1599894	0					
ANR	1599928	Identifier	RN4		1599894	0					
ANR	1599929	ArgumentList	reg		1599894	1					
ANR	1599930	Argument	reg		1599894	0					
ANR	1599931	Identifier	reg		1599894	0					
ANR	1599932	CallExpression	IMM12 ( value )		1599894	1					
ANR	1599933	Callee	IMM12		1599894	0					
ANR	1599934	Identifier	IMM12		1599894	0					
ANR	1599935	ArgumentList	value		1599894	1					
ANR	1599936	Argument	value		1599894	0					
ANR	1599937	Identifier	value		1599894	0					
ANR	1599938	ExpressionStatement	value = get_imm ( value )	875:2:28560:28582	1599894	1	True				
ANR	1599939	AssignmentExpression	value = get_imm ( value )		1599894	0		=			
ANR	1599940	Identifier	value		1599894	0					
ANR	1599941	CallExpression	get_imm ( value )		1599894	1					
ANR	1599942	Callee	get_imm		1599894	0					
ANR	1599943	Identifier	get_imm		1599894	0					
ANR	1599944	ArgumentList	value		1599894	1					
ANR	1599945	Argument	value		1599894	0					
ANR	1599946	Identifier	value		1599894	0					
ANR	1599947	IfStatement	if ( value != INVALID_IMM )		1599894	2					
ANR	1599948	Condition	value != INVALID_IMM	876:6:28590:28609	1599894	0	True				
ANR	1599949	EqualityExpression	value != INVALID_IMM		1599894	0		!=			
ANR	1599950	Identifier	value		1599894	0					
ANR	1599951	Identifier	INVALID_IMM		1599894	1					
ANR	1599952	ReturnStatement	"return push_inst32 ( compiler , ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value ) ;"	877:3:28615:28681	1599894	1	True				
ANR	1599953	CallExpression	"push_inst32 ( compiler , ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value )"		1599894	0					
ANR	1599954	Callee	push_inst32		1599894	0					
ANR	1599955	Identifier	push_inst32		1599894	0					
ANR	1599956	ArgumentList	compiler		1599894	1					
ANR	1599957	Argument	compiler		1599894	0					
ANR	1599958	Identifier	compiler		1599894	0					
ANR	1599959	Argument	ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value		1599894	1					
ANR	1599960	InclusiveOrExpression	ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value		1599894	0		|			
ANR	1599961	Identifier	ADD_WI		1599894	0					
ANR	1599962	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | value		1599894	1		|			
ANR	1599963	CallExpression	RD4 ( dst )		1599894	0					
ANR	1599964	Callee	RD4		1599894	0					
ANR	1599965	Identifier	RD4		1599894	0					
ANR	1599966	ArgumentList	dst		1599894	1					
ANR	1599967	Argument	dst		1599894	0					
ANR	1599968	Identifier	dst		1599894	0					
ANR	1599969	InclusiveOrExpression	RN4 ( reg ) | value		1599894	1		|			
ANR	1599970	CallExpression	RN4 ( reg )		1599894	0					
ANR	1599971	Callee	RN4		1599894	0					
ANR	1599972	Identifier	RN4		1599894	0					
ANR	1599973	ArgumentList	reg		1599894	1					
ANR	1599974	Argument	reg		1599894	0					
ANR	1599975	Identifier	reg		1599894	0					
ANR	1599976	Identifier	value		1599894	1					
ANR	1599977	ElseStatement	else		1599894	0					
ANR	1599978	CompoundStatement		9:6:253:253	1599894	0					
ANR	1599979	ExpressionStatement	value = - value	880:2:28696:28710	1599894	0	True				
ANR	1599980	AssignmentExpression	value = - value		1599894	0		=			
ANR	1599981	Identifier	value		1599894	0					
ANR	1599982	UnaryOperationExpression	- value		1599894	1					
ANR	1599983	UnaryOperator	-		1599894	0					
ANR	1599984	Identifier	value		1599894	1					
ANR	1599985	IfStatement	if ( value <= 0xfff )		1599894	1					
ANR	1599986	Condition	value <= 0xfff	881:6:28718:28731	1599894	0	True				
ANR	1599987	RelationalExpression	value <= 0xfff		1599894	0		<=			
ANR	1599988	Identifier	value		1599894	0					
ANR	1599989	PrimaryExpression	0xfff		1599894	1					
ANR	1599990	ReturnStatement	"return push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) ) ;"	882:3:28737:28809	1599894	1	True				
ANR	1599991	CallExpression	"push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) )"		1599894	0					
ANR	1599992	Callee	push_inst32		1599894	0					
ANR	1599993	Identifier	push_inst32		1599894	0					
ANR	1599994	ArgumentList	compiler		1599894	1					
ANR	1599995	Argument	compiler		1599894	0					
ANR	1599996	Identifier	compiler		1599894	0					
ANR	1599997	Argument	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1599894	1					
ANR	1599998	InclusiveOrExpression	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1599894	0		|			
ANR	1599999	Identifier	SUBWI		1599894	0					
ANR	1600000	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1599894	1		|			
ANR	1600001	CallExpression	RD4 ( dst )		1599894	0					
ANR	1600002	Callee	RD4		1599894	0					
ANR	1600003	Identifier	RD4		1599894	0					
ANR	1600004	ArgumentList	dst		1599894	1					
ANR	1600005	Argument	dst		1599894	0					
ANR	1600006	Identifier	dst		1599894	0					
ANR	1600007	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( value )		1599894	1		|			
ANR	1600008	CallExpression	RN4 ( reg )		1599894	0					
ANR	1600009	Callee	RN4		1599894	0					
ANR	1600010	Identifier	RN4		1599894	0					
ANR	1600011	ArgumentList	reg		1599894	1					
ANR	1600012	Argument	reg		1599894	0					
ANR	1600013	Identifier	reg		1599894	0					
ANR	1600014	CallExpression	IMM12 ( value )		1599894	1					
ANR	1600015	Callee	IMM12		1599894	0					
ANR	1600016	Identifier	IMM12		1599894	0					
ANR	1600017	ArgumentList	value		1599894	1					
ANR	1600018	Argument	value		1599894	0					
ANR	1600019	Identifier	value		1599894	0					
ANR	1600020	ExpressionStatement	value = get_imm ( value )	883:2:28813:28835	1599894	2	True				
ANR	1600021	AssignmentExpression	value = get_imm ( value )		1599894	0		=			
ANR	1600022	Identifier	value		1599894	0					
ANR	1600023	CallExpression	get_imm ( value )		1599894	1					
ANR	1600024	Callee	get_imm		1599894	0					
ANR	1600025	Identifier	get_imm		1599894	0					
ANR	1600026	ArgumentList	value		1599894	1					
ANR	1600027	Argument	value		1599894	0					
ANR	1600028	Identifier	value		1599894	0					
ANR	1600029	IfStatement	if ( value != INVALID_IMM )		1599894	3					
ANR	1600030	Condition	value != INVALID_IMM	884:6:28843:28862	1599894	0	True				
ANR	1600031	EqualityExpression	value != INVALID_IMM		1599894	0		!=			
ANR	1600032	Identifier	value		1599894	0					
ANR	1600033	Identifier	INVALID_IMM		1599894	1					
ANR	1600034	ReturnStatement	"return push_inst32 ( compiler , SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value ) ;"	885:3:28868:28934	1599894	1	True				
ANR	1600035	CallExpression	"push_inst32 ( compiler , SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value )"		1599894	0					
ANR	1600036	Callee	push_inst32		1599894	0					
ANR	1600037	Identifier	push_inst32		1599894	0					
ANR	1600038	ArgumentList	compiler		1599894	1					
ANR	1600039	Argument	compiler		1599894	0					
ANR	1600040	Identifier	compiler		1599894	0					
ANR	1600041	Argument	SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value		1599894	1					
ANR	1600042	InclusiveOrExpression	SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value		1599894	0		|			
ANR	1600043	Identifier	SUB_WI		1599894	0					
ANR	1600044	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | value		1599894	1		|			
ANR	1600045	CallExpression	RD4 ( dst )		1599894	0					
ANR	1600046	Callee	RD4		1599894	0					
ANR	1600047	Identifier	RD4		1599894	0					
ANR	1600048	ArgumentList	dst		1599894	1					
ANR	1600049	Argument	dst		1599894	0					
ANR	1600050	Identifier	dst		1599894	0					
ANR	1600051	InclusiveOrExpression	RN4 ( reg ) | value		1599894	1		|			
ANR	1600052	CallExpression	RN4 ( reg )		1599894	0					
ANR	1600053	Callee	RN4		1599894	0					
ANR	1600054	Identifier	RN4		1599894	0					
ANR	1600055	ArgumentList	reg		1599894	1					
ANR	1600056	Argument	reg		1599894	0					
ANR	1600057	Identifier	reg		1599894	0					
ANR	1600058	Identifier	value		1599894	1					
ANR	1600059	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	887:1:28940:28968	1599894	1	True				
ANR	1600060	Identifier	SLJIT_ERR_UNSUPPORTED		1599894	0					
ANR	1600061	ReturnType	static sljit_si		1599894	1					
ANR	1600062	Identifier	emit_set_delta		1599894	2					
ANR	1600063	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value"		1599894	3					
ANR	1600064	Parameter	struct sljit_compiler * compiler	870:31:28361:28391	1599894	0	True				
ANR	1600065	ParameterType	struct sljit_compiler *		1599894	0					
ANR	1600066	Identifier	compiler		1599894	1					
ANR	1600067	Parameter	sljit_si dst	870:64:28394:28405	1599894	1	True				
ANR	1600068	ParameterType	sljit_si		1599894	0					
ANR	1600069	Identifier	dst		1599894	1					
ANR	1600070	Parameter	sljit_si reg	870:78:28408:28419	1599894	2	True				
ANR	1600071	ParameterType	sljit_si		1599894	0					
ANR	1600072	Identifier	reg		1599894	1					
ANR	1600073	Parameter	sljit_sw value	870:92:28422:28435	1599894	3	True				
ANR	1600074	ParameterType	sljit_sw		1599894	0					
ANR	1600075	Identifier	value		1599894	1					
ANR	1600076	CFGEntryNode	ENTRY		1599894		True				
ANR	1600077	CFGExitNode	EXIT		1599894		True				
ANR	1600078	Symbol	ADDWI		1599894						
ANR	1600079	Symbol	IMM12		1599894						
ANR	1600080	Symbol	RD4		1599894						
ANR	1600081	Symbol	dst		1599894						
ANR	1600082	Symbol	get_imm		1599894						
ANR	1600083	Symbol	SUBWI		1599894						
ANR	1600084	Symbol	reg		1599894						
ANR	1600085	Symbol	INVALID_IMM		1599894						
ANR	1600086	Symbol	RN4		1599894						
ANR	1600087	Symbol	ADD_WI		1599894						
ANR	1600088	Symbol	compiler		1599894						
ANR	1600089	Symbol	value		1599894						
ANR	1600090	Symbol	push_inst32		1599894						
ANR	1600091	Symbol	SUB_WI		1599894						
ANR	1600092	Symbol	SLJIT_ERR_UNSUPPORTED		1599894						
ANR	1600093	Function	getput_arg_fast	891:0:29033:31207							
ANR	1600094	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1600093	0					
ANR	1600095	CompoundStatement		892:0:29157:31207	1600093	0					
ANR	1600096	IdentifierDeclStatement	"sljit_si other_r , shift ;"	893:1:29160:29183	1600093	0	True				
ANR	1600097	IdentifierDecl	other_r		1600093	0					
ANR	1600098	IdentifierDeclType	sljit_si		1600093	0					
ANR	1600099	Identifier	other_r		1600093	1					
ANR	1600100	IdentifierDecl	shift		1600093	1					
ANR	1600101	IdentifierDeclType	sljit_si		1600093	0					
ANR	1600102	Identifier	shift		1600093	1					
ANR	1600103	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	895:1:29187:29216	1600093	1	True				
ANR	1600104	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1600093	0					
ANR	1600105	Callee	SLJIT_ASSERT		1600093	0					
ANR	1600106	Identifier	SLJIT_ASSERT		1600093	0					
ANR	1600107	ArgumentList	arg & SLJIT_MEM		1600093	1					
ANR	1600108	Argument	arg & SLJIT_MEM		1600093	0					
ANR	1600109	BitAndExpression	arg & SLJIT_MEM		1600093	0		&			
ANR	1600110	Identifier	arg		1600093	0					
ANR	1600111	Identifier	SLJIT_MEM		1600093	1					
ANR	1600112	IfStatement	if ( SLJIT_UNLIKELY ( flags & UPDATE ) )		1600093	2					
ANR	1600113	Condition	SLJIT_UNLIKELY ( flags & UPDATE )	897:5:29224:29253	1600093	0	True				
ANR	1600114	CallExpression	SLJIT_UNLIKELY ( flags & UPDATE )		1600093	0					
ANR	1600115	Callee	SLJIT_UNLIKELY		1600093	0					
ANR	1600116	Identifier	SLJIT_UNLIKELY		1600093	0					
ANR	1600117	ArgumentList	flags & UPDATE		1600093	1					
ANR	1600118	Argument	flags & UPDATE		1600093	0					
ANR	1600119	BitAndExpression	flags & UPDATE		1600093	0		&			
ANR	1600120	Identifier	flags		1600093	0					
ANR	1600121	Identifier	UPDATE		1600093	1					
ANR	1600122	CompoundStatement		6:37:98:98	1600093	1					
ANR	1600123	IfStatement	if ( ( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff )		1600093	0					
ANR	1600124	Condition	( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff	898:6:29264:29338	1600093	0	True				
ANR	1600125	AndExpression	( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff		1600093	0		&&			
ANR	1600126	BitAndExpression	arg & REG_MASK		1600093	0		&			
ANR	1600127	Identifier	arg		1600093	0					
ANR	1600128	Identifier	REG_MASK		1600093	1					
ANR	1600129	AndExpression	! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff		1600093	1		&&			
ANR	1600130	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1600093	0					
ANR	1600131	UnaryOperator	!		1600093	0					
ANR	1600132	BitAndExpression	arg & OFFS_REG_MASK		1600093	1		&			
ANR	1600133	Identifier	arg		1600093	0					
ANR	1600134	Identifier	OFFS_REG_MASK		1600093	1					
ANR	1600135	AndExpression	argw <= 0xff && argw >= - 0xff		1600093	1		&&			
ANR	1600136	RelationalExpression	argw <= 0xff		1600093	0		<=			
ANR	1600137	Identifier	argw		1600093	0					
ANR	1600138	PrimaryExpression	0xff		1600093	1					
ANR	1600139	RelationalExpression	argw >= - 0xff		1600093	1		>=			
ANR	1600140	Identifier	argw		1600093	0					
ANR	1600141	UnaryOperationExpression	- 0xff		1600093	1					
ANR	1600142	UnaryOperator	-		1600093	0					
ANR	1600143	PrimaryExpression	0xff		1600093	1					
ANR	1600144	CompoundStatement		7:83:183:183	1600093	1					
ANR	1600145	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1600093	0					
ANR	1600146	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	899:7:29350:29381	1600093	0	True				
ANR	1600147	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1600093	0					
ANR	1600148	Callee	SLJIT_UNLIKELY		1600093	0					
ANR	1600149	Identifier	SLJIT_UNLIKELY		1600093	0					
ANR	1600150	ArgumentList	flags & ARG_TEST		1600093	1					
ANR	1600151	Argument	flags & ARG_TEST		1600093	0					
ANR	1600152	BitAndExpression	flags & ARG_TEST		1600093	0		&			
ANR	1600153	Identifier	flags		1600093	0					
ANR	1600154	Identifier	ARG_TEST		1600093	1					
ANR	1600155	ReturnStatement	return 1 ;	900:4:29388:29396	1600093	1	True				
ANR	1600156	PrimaryExpression	1		1600093	0					
ANR	1600157	ExpressionStatement	flags &= ~UPDATE	902:3:29402:29418	1600093	1	True				
ANR	1600158	AssignmentExpression	flags &= ~UPDATE		1600093	0		&=			
ANR	1600159	Identifier	flags		1600093	0					
ANR	1600160	Identifier	~UPDATE		1600093	1					
ANR	1600161	ExpressionStatement	arg &= 0xf	903:3:29423:29433	1600093	2	True				
ANR	1600162	AssignmentExpression	arg &= 0xf		1600093	0		&=			
ANR	1600163	Identifier	arg		1600093	0					
ANR	1600164	PrimaryExpression	0xf		1600093	1					
ANR	1600165	IfStatement	if ( argw >= 0 )		1600093	3					
ANR	1600166	Condition	argw >= 0	904:7:29442:29450	1600093	0	True				
ANR	1600167	RelationalExpression	argw >= 0		1600093	0		>=			
ANR	1600168	Identifier	argw		1600093	0					
ANR	1600169	PrimaryExpression	0		1600093	1					
ANR	1600170	ExpressionStatement	argw |= 0x200	905:4:29457:29470	1600093	1	True				
ANR	1600171	AssignmentExpression	argw |= 0x200		1600093	0		|=			
ANR	1600172	Identifier	argw		1600093	0					
ANR	1600173	PrimaryExpression	0x200		1600093	1					
ANR	1600174	ElseStatement	else		1600093	0					
ANR	1600175	CompoundStatement		15:8:322:322	1600093	0					
ANR	1600176	ExpressionStatement	argw = - argw	907:4:29486:29498	1600093	0	True				
ANR	1600177	AssignmentExpression	argw = - argw		1600093	0		=			
ANR	1600178	Identifier	argw		1600093	0					
ANR	1600179	UnaryOperationExpression	- argw		1600093	1					
ANR	1600180	UnaryOperator	-		1600093	0					
ANR	1600181	Identifier	argw		1600093	1					
ANR	1600182	ExpressionStatement	SLJIT_ASSERT ( argw >= 0 && ( argw & 0xff ) <= 0xff )	910:3:29509:29557	1600093	4	True				
ANR	1600183	CallExpression	SLJIT_ASSERT ( argw >= 0 && ( argw & 0xff ) <= 0xff )		1600093	0					
ANR	1600184	Callee	SLJIT_ASSERT		1600093	0					
ANR	1600185	Identifier	SLJIT_ASSERT		1600093	0					
ANR	1600186	ArgumentList	argw >= 0 && ( argw & 0xff ) <= 0xff		1600093	1					
ANR	1600187	Argument	argw >= 0 && ( argw & 0xff ) <= 0xff		1600093	0					
ANR	1600188	AndExpression	argw >= 0 && ( argw & 0xff ) <= 0xff		1600093	0		&&			
ANR	1600189	RelationalExpression	argw >= 0		1600093	0		>=			
ANR	1600190	Identifier	argw		1600093	0					
ANR	1600191	PrimaryExpression	0		1600093	1					
ANR	1600192	RelationalExpression	( argw & 0xff ) <= 0xff		1600093	1		<=			
ANR	1600193	BitAndExpression	argw & 0xff		1600093	0		&			
ANR	1600194	Identifier	argw		1600093	0					
ANR	1600195	PrimaryExpression	0xff		1600093	1					
ANR	1600196	PrimaryExpression	0xff		1600093	1					
ANR	1600197	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw ) )"	911:3:29562:29660	1600093	5	True				
ANR	1600198	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw ) )"		1600093	0					
ANR	1600199	Callee	FAIL_IF		1600093	0					
ANR	1600200	Identifier	FAIL_IF		1600093	0					
ANR	1600201	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw )"		1600093	1					
ANR	1600202	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw )"		1600093	0					
ANR	1600203	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw )"		1600093	0					
ANR	1600204	Callee	push_inst32		1600093	0					
ANR	1600205	Identifier	push_inst32		1600093	0					
ANR	1600206	ArgumentList	compiler		1600093	1					
ANR	1600207	Argument	compiler		1600093	0					
ANR	1600208	Identifier	compiler		1600093	0					
ANR	1600209	Argument	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1600093	1					
ANR	1600210	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1600093	0		|			
ANR	1600211	ArrayIndexing	sljit_mem32 [ flags ]		1600093	0					
ANR	1600212	Identifier	sljit_mem32		1600093	0					
ANR	1600213	Identifier	flags		1600093	1					
ANR	1600214	InclusiveOrExpression	MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1600093	1		|			
ANR	1600215	Identifier	MEM_IMM8		1600093	0					
ANR	1600216	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1600093	1		|			
ANR	1600217	CallExpression	RT4 ( reg )		1600093	0					
ANR	1600218	Callee	RT4		1600093	0					
ANR	1600219	Identifier	RT4		1600093	0					
ANR	1600220	ArgumentList	reg		1600093	1					
ANR	1600221	Argument	reg		1600093	0					
ANR	1600222	Identifier	reg		1600093	0					
ANR	1600223	InclusiveOrExpression	RN4 ( arg ) | 0x100 | argw		1600093	1		|			
ANR	1600224	CallExpression	RN4 ( arg )		1600093	0					
ANR	1600225	Callee	RN4		1600093	0					
ANR	1600226	Identifier	RN4		1600093	0					
ANR	1600227	ArgumentList	arg		1600093	1					
ANR	1600228	Argument	arg		1600093	0					
ANR	1600229	Identifier	arg		1600093	0					
ANR	1600230	InclusiveOrExpression	0x100 | argw		1600093	1		|			
ANR	1600231	PrimaryExpression	0x100		1600093	0					
ANR	1600232	Identifier	argw		1600093	1					
ANR	1600233	ReturnStatement	return - 1 ;	912:3:29665:29674	1600093	6	True				
ANR	1600234	UnaryOperationExpression	- 1		1600093	0					
ANR	1600235	UnaryOperator	-		1600093	0					
ANR	1600236	PrimaryExpression	1		1600093	1					
ANR	1600237	ReturnStatement	return 0 ;	914:2:29682:29690	1600093	1	True				
ANR	1600238	PrimaryExpression	0		1600093	0					
ANR	1600239	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1600093	3					
ANR	1600240	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	917:5:29701:29735	1600093	0	True				
ANR	1600241	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1600093	0					
ANR	1600242	Callee	SLJIT_UNLIKELY		1600093	0					
ANR	1600243	Identifier	SLJIT_UNLIKELY		1600093	0					
ANR	1600244	ArgumentList	arg & OFFS_REG_MASK		1600093	1					
ANR	1600245	Argument	arg & OFFS_REG_MASK		1600093	0					
ANR	1600246	BitAndExpression	arg & OFFS_REG_MASK		1600093	0		&			
ANR	1600247	Identifier	arg		1600093	0					
ANR	1600248	Identifier	OFFS_REG_MASK		1600093	1					
ANR	1600249	CompoundStatement		26:42:580:580	1600093	1					
ANR	1600250	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1600093	0					
ANR	1600251	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	918:6:29746:29777	1600093	0	True				
ANR	1600252	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1600093	0					
ANR	1600253	Callee	SLJIT_UNLIKELY		1600093	0					
ANR	1600254	Identifier	SLJIT_UNLIKELY		1600093	0					
ANR	1600255	ArgumentList	flags & ARG_TEST		1600093	1					
ANR	1600256	Argument	flags & ARG_TEST		1600093	0					
ANR	1600257	BitAndExpression	flags & ARG_TEST		1600093	0		&			
ANR	1600258	Identifier	flags		1600093	0					
ANR	1600259	Identifier	ARG_TEST		1600093	1					
ANR	1600260	ReturnStatement	return 1 ;	919:3:29783:29791	1600093	1	True				
ANR	1600261	PrimaryExpression	1		1600093	0					
ANR	1600262	ExpressionStatement	argw &= 0x3	921:2:29796:29807	1600093	1	True				
ANR	1600263	AssignmentExpression	argw &= 0x3		1600093	0		&=			
ANR	1600264	Identifier	argw		1600093	0					
ANR	1600265	PrimaryExpression	0x3		1600093	1					
ANR	1600266	ExpressionStatement	other_r = OFFS_REG ( arg )	922:2:29811:29834	1600093	2	True				
ANR	1600267	AssignmentExpression	other_r = OFFS_REG ( arg )		1600093	0		=			
ANR	1600268	Identifier	other_r		1600093	0					
ANR	1600269	CallExpression	OFFS_REG ( arg )		1600093	1					
ANR	1600270	Callee	OFFS_REG		1600093	0					
ANR	1600271	Identifier	OFFS_REG		1600093	0					
ANR	1600272	ArgumentList	arg		1600093	1					
ANR	1600273	Argument	arg		1600093	0					
ANR	1600274	Identifier	arg		1600093	0					
ANR	1600275	ExpressionStatement	arg &= 0xf	923:2:29838:29848	1600093	3	True				
ANR	1600276	AssignmentExpression	arg &= 0xf		1600093	0		&=			
ANR	1600277	Identifier	arg		1600093	0					
ANR	1600278	PrimaryExpression	0xf		1600093	1					
ANR	1600279	IfStatement	"if ( ! argw && IS_3_LO_REGS ( reg , arg , other_r ) )"		1600093	4					
ANR	1600280	Condition	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"	925:6:29857:29896	1600093	0	True				
ANR	1600281	AndExpression	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"		1600093	0		&&			
ANR	1600282	UnaryOperationExpression	! argw		1600093	0					
ANR	1600283	UnaryOperator	!		1600093	0					
ANR	1600284	Identifier	argw		1600093	1					
ANR	1600285	CallExpression	"IS_3_LO_REGS ( reg , arg , other_r )"		1600093	1					
ANR	1600286	Callee	IS_3_LO_REGS		1600093	0					
ANR	1600287	Identifier	IS_3_LO_REGS		1600093	0					
ANR	1600288	ArgumentList	reg		1600093	1					
ANR	1600289	Argument	reg		1600093	0					
ANR	1600290	Identifier	reg		1600093	0					
ANR	1600291	Argument	arg		1600093	1					
ANR	1600292	Identifier	arg		1600093	0					
ANR	1600293	Argument	other_r		1600093	2					
ANR	1600294	Identifier	other_r		1600093	0					
ANR	1600295	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"	926:3:29902:29989	1600093	1	True				
ANR	1600296	CallExpression	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"		1600093	0					
ANR	1600297	Callee	FAIL_IF		1600093	0					
ANR	1600298	Identifier	FAIL_IF		1600093	0					
ANR	1600299	ArgumentList	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1600093	1					
ANR	1600300	Argument	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1600093	0					
ANR	1600301	CallExpression	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1600093	0					
ANR	1600302	Callee	push_inst16		1600093	0					
ANR	1600303	Identifier	push_inst16		1600093	0					
ANR	1600304	ArgumentList	compiler		1600093	1					
ANR	1600305	Argument	compiler		1600093	0					
ANR	1600306	Identifier	compiler		1600093	0					
ANR	1600307	Argument	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1600093	1					
ANR	1600308	InclusiveOrExpression	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1600093	0		|			
ANR	1600309	ArrayIndexing	sljit_mem16 [ flags ]		1600093	0					
ANR	1600310	Identifier	sljit_mem16		1600093	0					
ANR	1600311	Identifier	flags		1600093	1					
ANR	1600312	InclusiveOrExpression	RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1600093	1		|			
ANR	1600313	CallExpression	RD3 ( reg )		1600093	0					
ANR	1600314	Callee	RD3		1600093	0					
ANR	1600315	Identifier	RD3		1600093	0					
ANR	1600316	ArgumentList	reg		1600093	1					
ANR	1600317	Argument	reg		1600093	0					
ANR	1600318	Identifier	reg		1600093	0					
ANR	1600319	InclusiveOrExpression	RN3 ( arg ) | RM3 ( other_r )		1600093	1		|			
ANR	1600320	CallExpression	RN3 ( arg )		1600093	0					
ANR	1600321	Callee	RN3		1600093	0					
ANR	1600322	Identifier	RN3		1600093	0					
ANR	1600323	ArgumentList	arg		1600093	1					
ANR	1600324	Argument	arg		1600093	0					
ANR	1600325	Identifier	arg		1600093	0					
ANR	1600326	CallExpression	RM3 ( other_r )		1600093	1					
ANR	1600327	Callee	RM3		1600093	0					
ANR	1600328	Identifier	RM3		1600093	0					
ANR	1600329	ArgumentList	other_r		1600093	1					
ANR	1600330	Argument	other_r		1600093	0					
ANR	1600331	Identifier	other_r		1600093	0					
ANR	1600332	ElseStatement	else		1600093	0					
ANR	1600333	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"	928:3:30001:30102	1600093	0	True				
ANR	1600334	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"		1600093	0					
ANR	1600335	Callee	FAIL_IF		1600093	0					
ANR	1600336	Identifier	FAIL_IF		1600093	0					
ANR	1600337	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1600093	1					
ANR	1600338	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1600093	0					
ANR	1600339	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1600093	0					
ANR	1600340	Callee	push_inst32		1600093	0					
ANR	1600341	Identifier	push_inst32		1600093	0					
ANR	1600342	ArgumentList	compiler		1600093	1					
ANR	1600343	Argument	compiler		1600093	0					
ANR	1600344	Identifier	compiler		1600093	0					
ANR	1600345	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600093	1					
ANR	1600346	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600093	0		|			
ANR	1600347	ArrayIndexing	sljit_mem32 [ flags ]		1600093	0					
ANR	1600348	Identifier	sljit_mem32		1600093	0					
ANR	1600349	Identifier	flags		1600093	1					
ANR	1600350	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600093	1		|			
ANR	1600351	CallExpression	RT4 ( reg )		1600093	0					
ANR	1600352	Callee	RT4		1600093	0					
ANR	1600353	Identifier	RT4		1600093	0					
ANR	1600354	ArgumentList	reg		1600093	1					
ANR	1600355	Argument	reg		1600093	0					
ANR	1600356	Identifier	reg		1600093	0					
ANR	1600357	InclusiveOrExpression	RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600093	1		|			
ANR	1600358	CallExpression	RN4 ( arg )		1600093	0					
ANR	1600359	Callee	RN4		1600093	0					
ANR	1600360	Identifier	RN4		1600093	0					
ANR	1600361	ArgumentList	arg		1600093	1					
ANR	1600362	Argument	arg		1600093	0					
ANR	1600363	Identifier	arg		1600093	0					
ANR	1600364	InclusiveOrExpression	RM4 ( other_r ) | ( argw << 4 )		1600093	1		|			
ANR	1600365	CallExpression	RM4 ( other_r )		1600093	0					
ANR	1600366	Callee	RM4		1600093	0					
ANR	1600367	Identifier	RM4		1600093	0					
ANR	1600368	ArgumentList	other_r		1600093	1					
ANR	1600369	Argument	other_r		1600093	0					
ANR	1600370	Identifier	other_r		1600093	0					
ANR	1600371	ShiftExpression	argw << 4		1600093	1		<<			
ANR	1600372	Identifier	argw		1600093	0					
ANR	1600373	PrimaryExpression	4		1600093	1					
ANR	1600374	ReturnStatement	return - 1 ;	929:2:30106:30115	1600093	5	True				
ANR	1600375	UnaryOperationExpression	- 1		1600093	0					
ANR	1600376	UnaryOperator	-		1600093	0					
ANR	1600377	PrimaryExpression	1		1600093	1					
ANR	1600378	IfStatement	if ( ! ( arg & REG_MASK ) || argw > 0xfff || argw < - 0xff )		1600093	4					
ANR	1600379	Condition	! ( arg & REG_MASK ) || argw > 0xfff || argw < - 0xff	932:5:30126:30174	1600093	0	True				
ANR	1600380	OrExpression	! ( arg & REG_MASK ) || argw > 0xfff || argw < - 0xff		1600093	0		||			
ANR	1600381	UnaryOperationExpression	! ( arg & REG_MASK )		1600093	0					
ANR	1600382	UnaryOperator	!		1600093	0					
ANR	1600383	BitAndExpression	arg & REG_MASK		1600093	1		&			
ANR	1600384	Identifier	arg		1600093	0					
ANR	1600385	Identifier	REG_MASK		1600093	1					
ANR	1600386	OrExpression	argw > 0xfff || argw < - 0xff		1600093	1		||			
ANR	1600387	RelationalExpression	argw > 0xfff		1600093	0		>			
ANR	1600388	Identifier	argw		1600093	0					
ANR	1600389	PrimaryExpression	0xfff		1600093	1					
ANR	1600390	RelationalExpression	argw < - 0xff		1600093	1		<			
ANR	1600391	Identifier	argw		1600093	0					
ANR	1600392	UnaryOperationExpression	- 0xff		1600093	1					
ANR	1600393	UnaryOperator	-		1600093	0					
ANR	1600394	PrimaryExpression	0xff		1600093	1					
ANR	1600395	ReturnStatement	return 0 ;	933:2:30179:30187	1600093	1	True				
ANR	1600396	PrimaryExpression	0		1600093	0					
ANR	1600397	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1600093	5					
ANR	1600398	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	935:5:30195:30226	1600093	0	True				
ANR	1600399	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1600093	0					
ANR	1600400	Callee	SLJIT_UNLIKELY		1600093	0					
ANR	1600401	Identifier	SLJIT_UNLIKELY		1600093	0					
ANR	1600402	ArgumentList	flags & ARG_TEST		1600093	1					
ANR	1600403	Argument	flags & ARG_TEST		1600093	0					
ANR	1600404	BitAndExpression	flags & ARG_TEST		1600093	0		&			
ANR	1600405	Identifier	flags		1600093	0					
ANR	1600406	Identifier	ARG_TEST		1600093	1					
ANR	1600407	ReturnStatement	return 1 ;	936:2:30231:30239	1600093	1	True				
ANR	1600408	PrimaryExpression	1		1600093	0					
ANR	1600409	ExpressionStatement	arg &= 0xf	938:1:30243:30253	1600093	6	True				
ANR	1600410	AssignmentExpression	arg &= 0xf		1600093	0		&=			
ANR	1600411	Identifier	arg		1600093	0					
ANR	1600412	PrimaryExpression	0xf		1600093	1					
ANR	1600413	IfStatement	"if ( IS_2_LO_REGS ( reg , arg ) && sljit_mem16_imm5 [ flags ] )"		1600093	7					
ANR	1600414	Condition	"IS_2_LO_REGS ( reg , arg ) && sljit_mem16_imm5 [ flags ]"	939:5:30260:30308	1600093	0	True				
ANR	1600415	AndExpression	"IS_2_LO_REGS ( reg , arg ) && sljit_mem16_imm5 [ flags ]"		1600093	0		&&			
ANR	1600416	CallExpression	"IS_2_LO_REGS ( reg , arg )"		1600093	0					
ANR	1600417	Callee	IS_2_LO_REGS		1600093	0					
ANR	1600418	Identifier	IS_2_LO_REGS		1600093	0					
ANR	1600419	ArgumentList	reg		1600093	1					
ANR	1600420	Argument	reg		1600093	0					
ANR	1600421	Identifier	reg		1600093	0					
ANR	1600422	Argument	arg		1600093	1					
ANR	1600423	Identifier	arg		1600093	0					
ANR	1600424	ArrayIndexing	sljit_mem16_imm5 [ flags ]		1600093	1					
ANR	1600425	Identifier	sljit_mem16_imm5		1600093	0					
ANR	1600426	Identifier	flags		1600093	1					
ANR	1600427	CompoundStatement		48:56:1153:1153	1600093	1					
ANR	1600428	ExpressionStatement	shift = 3	940:2:30315:30324	1600093	0	True				
ANR	1600429	AssignmentExpression	shift = 3		1600093	0		=			
ANR	1600430	Identifier	shift		1600093	0					
ANR	1600431	PrimaryExpression	3		1600093	1					
ANR	1600432	IfStatement	if ( IS_WORD_SIZE ( flags ) )		1600093	1					
ANR	1600433	Condition	IS_WORD_SIZE ( flags )	941:6:30332:30350	1600093	0	True				
ANR	1600434	CallExpression	IS_WORD_SIZE ( flags )		1600093	0					
ANR	1600435	Callee	IS_WORD_SIZE		1600093	0					
ANR	1600436	Identifier	IS_WORD_SIZE		1600093	0					
ANR	1600437	ArgumentList	flags		1600093	1					
ANR	1600438	Argument	flags		1600093	0					
ANR	1600439	Identifier	flags		1600093	0					
ANR	1600440	CompoundStatement		50:27:1195:1195	1600093	1					
ANR	1600441	IfStatement	"if ( OFFSET_CHECK ( 0x1f , 2 ) )"		1600093	0					
ANR	1600442	Condition	"OFFSET_CHECK ( 0x1f , 2 )"	942:7:30362:30382	1600093	0	True				
ANR	1600443	CallExpression	"OFFSET_CHECK ( 0x1f , 2 )"		1600093	0					
ANR	1600444	Callee	OFFSET_CHECK		1600093	0					
ANR	1600445	Identifier	OFFSET_CHECK		1600093	0					
ANR	1600446	ArgumentList	0x1f		1600093	1					
ANR	1600447	Argument	0x1f		1600093	0					
ANR	1600448	PrimaryExpression	0x1f		1600093	0					
ANR	1600449	Argument	2		1600093	1					
ANR	1600450	PrimaryExpression	2		1600093	0					
ANR	1600451	ExpressionStatement	shift = 2	943:4:30389:30398	1600093	1	True				
ANR	1600452	AssignmentExpression	shift = 2		1600093	0		=			
ANR	1600453	Identifier	shift		1600093	0					
ANR	1600454	PrimaryExpression	2		1600093	1					
ANR	1600455	ElseStatement	else		1600093	0					
ANR	1600456	IfStatement	if ( flags & BYTE_SIZE )		1600093	0					
ANR	1600457	Condition	flags & BYTE_SIZE	945:11:30415:30431	1600093	0	True				
ANR	1600458	BitAndExpression	flags & BYTE_SIZE		1600093	0		&			
ANR	1600459	Identifier	flags		1600093	0					
ANR	1600460	Identifier	BYTE_SIZE		1600093	1					
ANR	1600461	CompoundStatement		55:2:1278:1278	1600093	1					
ANR	1600462	IfStatement	"if ( OFFSET_CHECK ( 0x1f , 0 ) )"		1600093	0					
ANR	1600463	Condition	"OFFSET_CHECK ( 0x1f , 0 )"	947:7:30445:30465	1600093	0	True				
ANR	1600464	CallExpression	"OFFSET_CHECK ( 0x1f , 0 )"		1600093	0					
ANR	1600465	Callee	OFFSET_CHECK		1600093	0					
ANR	1600466	Identifier	OFFSET_CHECK		1600093	0					
ANR	1600467	ArgumentList	0x1f		1600093	1					
ANR	1600468	Argument	0x1f		1600093	0					
ANR	1600469	PrimaryExpression	0x1f		1600093	0					
ANR	1600470	Argument	0		1600093	1					
ANR	1600471	PrimaryExpression	0		1600093	0					
ANR	1600472	ExpressionStatement	shift = 0	948:4:30472:30481	1600093	1	True				
ANR	1600473	AssignmentExpression	shift = 0		1600093	0		=			
ANR	1600474	Identifier	shift		1600093	0					
ANR	1600475	PrimaryExpression	0		1600093	1					
ANR	1600476	ElseStatement	else		1600093	0					
ANR	1600477	CompoundStatement		59:7:1336:1336	1600093	0					
ANR	1600478	ExpressionStatement	SLJIT_ASSERT ( flags & HALF_SIZE )	951:3:30499:30530	1600093	0	True				
ANR	1600479	CallExpression	SLJIT_ASSERT ( flags & HALF_SIZE )		1600093	0					
ANR	1600480	Callee	SLJIT_ASSERT		1600093	0					
ANR	1600481	Identifier	SLJIT_ASSERT		1600093	0					
ANR	1600482	ArgumentList	flags & HALF_SIZE		1600093	1					
ANR	1600483	Argument	flags & HALF_SIZE		1600093	0					
ANR	1600484	BitAndExpression	flags & HALF_SIZE		1600093	0		&			
ANR	1600485	Identifier	flags		1600093	0					
ANR	1600486	Identifier	HALF_SIZE		1600093	1					
ANR	1600487	IfStatement	"if ( OFFSET_CHECK ( 0x1f , 1 ) )"		1600093	1					
ANR	1600488	Condition	"OFFSET_CHECK ( 0x1f , 1 )"	952:7:30539:30559	1600093	0	True				
ANR	1600489	CallExpression	"OFFSET_CHECK ( 0x1f , 1 )"		1600093	0					
ANR	1600490	Callee	OFFSET_CHECK		1600093	0					
ANR	1600491	Identifier	OFFSET_CHECK		1600093	0					
ANR	1600492	ArgumentList	0x1f		1600093	1					
ANR	1600493	Argument	0x1f		1600093	0					
ANR	1600494	PrimaryExpression	0x1f		1600093	0					
ANR	1600495	Argument	1		1600093	1					
ANR	1600496	PrimaryExpression	1		1600093	0					
ANR	1600497	ExpressionStatement	shift = 1	953:4:30566:30575	1600093	1	True				
ANR	1600498	AssignmentExpression	shift = 1		1600093	0		=			
ANR	1600499	Identifier	shift		1600093	0					
ANR	1600500	PrimaryExpression	1		1600093	1					
ANR	1600501	IfStatement	if ( shift != 3 )		1600093	2					
ANR	1600502	Condition	shift != 3	956:6:30588:30597	1600093	0	True				
ANR	1600503	EqualityExpression	shift != 3		1600093	0		!=			
ANR	1600504	Identifier	shift		1600093	0					
ANR	1600505	PrimaryExpression	3		1600093	1					
ANR	1600506	CompoundStatement		65:18:1442:1442	1600093	1					
ANR	1600507	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) ) )"	957:3:30605:30706	1600093	0	True				
ANR	1600508	CallExpression	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) ) )"		1600093	0					
ANR	1600509	Callee	FAIL_IF		1600093	0					
ANR	1600510	Identifier	FAIL_IF		1600093	0					
ANR	1600511	ArgumentList	"push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) )"		1600093	1					
ANR	1600512	Argument	"push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) )"		1600093	0					
ANR	1600513	CallExpression	"push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) )"		1600093	0					
ANR	1600514	Callee	push_inst16		1600093	0					
ANR	1600515	Identifier	push_inst16		1600093	0					
ANR	1600516	ArgumentList	compiler		1600093	1					
ANR	1600517	Argument	compiler		1600093	0					
ANR	1600518	Identifier	compiler		1600093	0					
ANR	1600519	Argument	sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) )		1600093	1					
ANR	1600520	InclusiveOrExpression	sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) )		1600093	0		|			
ANR	1600521	ArrayIndexing	sljit_mem16_imm5 [ flags ]		1600093	0					
ANR	1600522	Identifier	sljit_mem16_imm5		1600093	0					
ANR	1600523	Identifier	flags		1600093	1					
ANR	1600524	InclusiveOrExpression	RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) )		1600093	1		|			
ANR	1600525	CallExpression	RD3 ( reg )		1600093	0					
ANR	1600526	Callee	RD3		1600093	0					
ANR	1600527	Identifier	RD3		1600093	0					
ANR	1600528	ArgumentList	reg		1600093	1					
ANR	1600529	Argument	reg		1600093	0					
ANR	1600530	Identifier	reg		1600093	0					
ANR	1600531	InclusiveOrExpression	RN3 ( arg ) | ( argw << ( 6 - shift ) )		1600093	1		|			
ANR	1600532	CallExpression	RN3 ( arg )		1600093	0					
ANR	1600533	Callee	RN3		1600093	0					
ANR	1600534	Identifier	RN3		1600093	0					
ANR	1600535	ArgumentList	arg		1600093	1					
ANR	1600536	Argument	arg		1600093	0					
ANR	1600537	Identifier	arg		1600093	0					
ANR	1600538	ShiftExpression	argw << ( 6 - shift )		1600093	1		<<			
ANR	1600539	Identifier	argw		1600093	0					
ANR	1600540	AdditiveExpression	6 - shift		1600093	1		-			
ANR	1600541	PrimaryExpression	6		1600093	0					
ANR	1600542	Identifier	shift		1600093	1					
ANR	1600543	ReturnStatement	return - 1 ;	958:3:30711:30720	1600093	1	True				
ANR	1600544	UnaryOperationExpression	- 1		1600093	0					
ANR	1600545	UnaryOperator	-		1600093	0					
ANR	1600546	PrimaryExpression	1		1600093	1					
ANR	1600547	IfStatement	"if ( SLJIT_UNLIKELY ( arg == SLJIT_SP ) && OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7 )"		1600093	8					
ANR	1600548	Condition	"SLJIT_UNLIKELY ( arg == SLJIT_SP ) && OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7"	963:5:30762:30861	1600093	0	True				
ANR	1600549	AndExpression	"SLJIT_UNLIKELY ( arg == SLJIT_SP ) && OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7"		1600093	0		&&			
ANR	1600550	CallExpression	SLJIT_UNLIKELY ( arg == SLJIT_SP )		1600093	0					
ANR	1600551	Callee	SLJIT_UNLIKELY		1600093	0					
ANR	1600552	Identifier	SLJIT_UNLIKELY		1600093	0					
ANR	1600553	ArgumentList	arg == SLJIT_SP		1600093	1					
ANR	1600554	Argument	arg == SLJIT_SP		1600093	0					
ANR	1600555	EqualityExpression	arg == SLJIT_SP		1600093	0		==			
ANR	1600556	Identifier	arg		1600093	0					
ANR	1600557	Identifier	SLJIT_SP		1600093	1					
ANR	1600558	AndExpression	"OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7"		1600093	1		&&			
ANR	1600559	CallExpression	"OFFSET_CHECK ( 0xff , 2 )"		1600093	0					
ANR	1600560	Callee	OFFSET_CHECK		1600093	0					
ANR	1600561	Identifier	OFFSET_CHECK		1600093	0					
ANR	1600562	ArgumentList	0xff		1600093	1					
ANR	1600563	Argument	0xff		1600093	0					
ANR	1600564	PrimaryExpression	0xff		1600093	0					
ANR	1600565	Argument	2		1600093	1					
ANR	1600566	PrimaryExpression	2		1600093	0					
ANR	1600567	AndExpression	IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7		1600093	1		&&			
ANR	1600568	CallExpression	IS_WORD_SIZE ( flags )		1600093	0					
ANR	1600569	Callee	IS_WORD_SIZE		1600093	0					
ANR	1600570	Identifier	IS_WORD_SIZE		1600093	0					
ANR	1600571	ArgumentList	flags		1600093	1					
ANR	1600572	Argument	flags		1600093	0					
ANR	1600573	Identifier	flags		1600093	0					
ANR	1600574	RelationalExpression	reg_map [ reg ] <= 7		1600093	1		<=			
ANR	1600575	ArrayIndexing	reg_map [ reg ]		1600093	0					
ANR	1600576	Identifier	reg_map		1600093	0					
ANR	1600577	Identifier	reg		1600093	1					
ANR	1600578	PrimaryExpression	7		1600093	1					
ANR	1600579	CompoundStatement		72:107:1706:1706	1600093	1					
ANR	1600580	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) ) )"	964:2:30868:30964	1600093	0	True				
ANR	1600581	CallExpression	"FAIL_IF ( push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) ) )"		1600093	0					
ANR	1600582	Callee	FAIL_IF		1600093	0					
ANR	1600583	Identifier	FAIL_IF		1600093	0					
ANR	1600584	ArgumentList	"push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) )"		1600093	1					
ANR	1600585	Argument	"push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) )"		1600093	0					
ANR	1600586	CallExpression	"push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) )"		1600093	0					
ANR	1600587	Callee	push_inst16		1600093	0					
ANR	1600588	Identifier	push_inst16		1600093	0					
ANR	1600589	ArgumentList	compiler		1600093	1					
ANR	1600590	Argument	compiler		1600093	0					
ANR	1600591	Identifier	compiler		1600093	0					
ANR	1600592	Argument	STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 )		1600093	1					
ANR	1600593	InclusiveOrExpression	STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 )		1600093	0		|			
ANR	1600594	Identifier	STR_SP		1600093	0					
ANR	1600595	InclusiveOrExpression	( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 )		1600093	1		|			
ANR	1600596	ConditionalExpression	( flags & STORE ) ? 0 : 0x800		1600093	0					
ANR	1600597	Condition	flags & STORE		1600093	0					
ANR	1600598	BitAndExpression	flags & STORE		1600093	0		&			
ANR	1600599	Identifier	flags		1600093	0					
ANR	1600600	Identifier	STORE		1600093	1					
ANR	1600601	PrimaryExpression	0		1600093	1					
ANR	1600602	PrimaryExpression	0x800		1600093	2					
ANR	1600603	InclusiveOrExpression	RDN3 ( reg ) | ( argw >> 2 )		1600093	1		|			
ANR	1600604	CallExpression	RDN3 ( reg )		1600093	0					
ANR	1600605	Callee	RDN3		1600093	0					
ANR	1600606	Identifier	RDN3		1600093	0					
ANR	1600607	ArgumentList	reg		1600093	1					
ANR	1600608	Argument	reg		1600093	0					
ANR	1600609	Identifier	reg		1600093	0					
ANR	1600610	ShiftExpression	argw >> 2		1600093	1		>>			
ANR	1600611	Identifier	argw		1600093	0					
ANR	1600612	PrimaryExpression	2		1600093	1					
ANR	1600613	ReturnStatement	return - 1 ;	965:2:30968:30977	1600093	1	True				
ANR	1600614	UnaryOperationExpression	- 1		1600093	0					
ANR	1600615	UnaryOperator	-		1600093	0					
ANR	1600616	PrimaryExpression	1		1600093	1					
ANR	1600617	IfStatement	if ( argw >= 0 )		1600093	9					
ANR	1600618	Condition	argw >= 0	968:5:30988:30996	1600093	0	True				
ANR	1600619	RelationalExpression	argw >= 0		1600093	0		>=			
ANR	1600620	Identifier	argw		1600093	0					
ANR	1600621	PrimaryExpression	0		1600093	1					
ANR	1600622	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"	969:2:31001:31092	1600093	1	True				
ANR	1600623	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"		1600093	0					
ANR	1600624	Callee	FAIL_IF		1600093	0					
ANR	1600625	Identifier	FAIL_IF		1600093	0					
ANR	1600626	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1600093	1					
ANR	1600627	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1600093	0					
ANR	1600628	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1600093	0					
ANR	1600629	Callee	push_inst32		1600093	0					
ANR	1600630	Identifier	push_inst32		1600093	0					
ANR	1600631	ArgumentList	compiler		1600093	1					
ANR	1600632	Argument	compiler		1600093	0					
ANR	1600633	Identifier	compiler		1600093	0					
ANR	1600634	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1600093	1					
ANR	1600635	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1600093	0		|			
ANR	1600636	ArrayIndexing	sljit_mem32 [ flags ]		1600093	0					
ANR	1600637	Identifier	sljit_mem32		1600093	0					
ANR	1600638	Identifier	flags		1600093	1					
ANR	1600639	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1600093	1		|			
ANR	1600640	Identifier	MEM_IMM12		1600093	0					
ANR	1600641	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | argw		1600093	1		|			
ANR	1600642	CallExpression	RT4 ( reg )		1600093	0					
ANR	1600643	Callee	RT4		1600093	0					
ANR	1600644	Identifier	RT4		1600093	0					
ANR	1600645	ArgumentList	reg		1600093	1					
ANR	1600646	Argument	reg		1600093	0					
ANR	1600647	Identifier	reg		1600093	0					
ANR	1600648	InclusiveOrExpression	RN4 ( arg ) | argw		1600093	1		|			
ANR	1600649	CallExpression	RN4 ( arg )		1600093	0					
ANR	1600650	Callee	RN4		1600093	0					
ANR	1600651	Identifier	RN4		1600093	0					
ANR	1600652	ArgumentList	arg		1600093	1					
ANR	1600653	Argument	arg		1600093	0					
ANR	1600654	Identifier	arg		1600093	0					
ANR	1600655	Identifier	argw		1600093	1					
ANR	1600656	ElseStatement	else		1600093	0					
ANR	1600657	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw ) )"	971:2:31102:31193	1600093	0	True				
ANR	1600658	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw ) )"		1600093	0					
ANR	1600659	Callee	FAIL_IF		1600093	0					
ANR	1600660	Identifier	FAIL_IF		1600093	0					
ANR	1600661	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw )"		1600093	1					
ANR	1600662	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw )"		1600093	0					
ANR	1600663	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw )"		1600093	0					
ANR	1600664	Callee	push_inst32		1600093	0					
ANR	1600665	Identifier	push_inst32		1600093	0					
ANR	1600666	ArgumentList	compiler		1600093	1					
ANR	1600667	Argument	compiler		1600093	0					
ANR	1600668	Identifier	compiler		1600093	0					
ANR	1600669	Argument	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw		1600093	1					
ANR	1600670	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw		1600093	0		|			
ANR	1600671	ArrayIndexing	sljit_mem32 [ flags ]		1600093	0					
ANR	1600672	Identifier	sljit_mem32		1600093	0					
ANR	1600673	Identifier	flags		1600093	1					
ANR	1600674	InclusiveOrExpression	MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw		1600093	1		|			
ANR	1600675	Identifier	MEM_IMM8		1600093	0					
ANR	1600676	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | - argw		1600093	1		|			
ANR	1600677	CallExpression	RT4 ( reg )		1600093	0					
ANR	1600678	Callee	RT4		1600093	0					
ANR	1600679	Identifier	RT4		1600093	0					
ANR	1600680	ArgumentList	reg		1600093	1					
ANR	1600681	Argument	reg		1600093	0					
ANR	1600682	Identifier	reg		1600093	0					
ANR	1600683	InclusiveOrExpression	RN4 ( arg ) | - argw		1600093	1		|			
ANR	1600684	CallExpression	RN4 ( arg )		1600093	0					
ANR	1600685	Callee	RN4		1600093	0					
ANR	1600686	Identifier	RN4		1600093	0					
ANR	1600687	ArgumentList	arg		1600093	1					
ANR	1600688	Argument	arg		1600093	0					
ANR	1600689	Identifier	arg		1600093	0					
ANR	1600690	UnaryOperationExpression	- argw		1600093	1					
ANR	1600691	UnaryOperator	-		1600093	0					
ANR	1600692	Identifier	argw		1600093	1					
ANR	1600693	ReturnStatement	return - 1 ;	972:1:31196:31205	1600093	10	True				
ANR	1600694	UnaryOperationExpression	- 1		1600093	0					
ANR	1600695	UnaryOperator	-		1600093	0					
ANR	1600696	PrimaryExpression	1		1600093	1					
ANR	1600697	ReturnType	static sljit_si		1600093	1					
ANR	1600698	Identifier	getput_arg_fast		1600093	2					
ANR	1600699	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1600093	3					
ANR	1600700	Parameter	struct sljit_compiler * compiler	891:32:29065:29095	1600093	0	True				
ANR	1600701	ParameterType	struct sljit_compiler *		1600093	0					
ANR	1600702	Identifier	compiler		1600093	1					
ANR	1600703	Parameter	sljit_si flags	891:65:29098:29111	1600093	1	True				
ANR	1600704	ParameterType	sljit_si		1600093	0					
ANR	1600705	Identifier	flags		1600093	1					
ANR	1600706	Parameter	sljit_si reg	891:81:29114:29125	1600093	2	True				
ANR	1600707	ParameterType	sljit_si		1600093	0					
ANR	1600708	Identifier	reg		1600093	1					
ANR	1600709	Parameter	sljit_si arg	891:95:29128:29139	1600093	3	True				
ANR	1600710	ParameterType	sljit_si		1600093	0					
ANR	1600711	Identifier	arg		1600093	1					
ANR	1600712	Parameter	sljit_sw argw	891:109:29142:29154	1600093	4	True				
ANR	1600713	ParameterType	sljit_sw		1600093	0					
ANR	1600714	Identifier	argw		1600093	1					
ANR	1600715	CFGEntryNode	ENTRY		1600093		True				
ANR	1600716	CFGExitNode	EXIT		1600093		True				
ANR	1600717	Symbol	RD3		1600093						
ANR	1600718	Symbol	BYTE_SIZE		1600093						
ANR	1600719	Symbol	SLJIT_MEM		1600093						
ANR	1600720	Symbol	shift		1600093						
ANR	1600721	Symbol	push_inst16		1600093						
ANR	1600722	Symbol	flags		1600093						
ANR	1600723	Symbol	reg_map		1600093						
ANR	1600724	Symbol	MEM_IMM12		1600093						
ANR	1600725	Symbol	argw		1600093						
ANR	1600726	Symbol	ARG_TEST		1600093						
ANR	1600727	Symbol	SLJIT_SP		1600093						
ANR	1600728	Symbol	* sljit_mem16_imm5		1600093						
ANR	1600729	Symbol	reg		1600093						
ANR	1600730	Symbol	arg		1600093						
ANR	1600731	Symbol	HALF_SIZE		1600093						
ANR	1600732	Symbol	RM4		1600093						
ANR	1600733	Symbol	sljit_mem32		1600093						
ANR	1600734	Symbol	RM3		1600093						
ANR	1600735	Symbol	UPDATE		1600093						
ANR	1600736	Symbol	* sljit_mem16		1600093						
ANR	1600737	Symbol	compiler		1600093						
ANR	1600738	Symbol	push_inst32		1600093						
ANR	1600739	Symbol	sljit_mem16		1600093						
ANR	1600740	Symbol	* sljit_mem32		1600093						
ANR	1600741	Symbol	* flags		1600093						
ANR	1600742	Symbol	REG_MASK		1600093						
ANR	1600743	Symbol	~UPDATE		1600093						
ANR	1600744	Symbol	STR_SP		1600093						
ANR	1600745	Symbol	sljit_mem16_imm5		1600093						
ANR	1600746	Symbol	OFFS_REG_MASK		1600093						
ANR	1600747	Symbol	other_r		1600093						
ANR	1600748	Symbol	* reg_map		1600093						
ANR	1600749	Symbol	IS_3_LO_REGS		1600093						
ANR	1600750	Symbol	RDN3		1600093						
ANR	1600751	Symbol	RT4		1600093						
ANR	1600752	Symbol	MEM_IMM8		1600093						
ANR	1600753	Symbol	RN3		1600093						
ANR	1600754	Symbol	IS_WORD_SIZE		1600093						
ANR	1600755	Symbol	OFFSET_CHECK		1600093						
ANR	1600756	Symbol	STORE		1600093						
ANR	1600757	Symbol	RN4		1600093						
ANR	1600758	Symbol	OFFS_REG		1600093						
ANR	1600759	Symbol	IS_2_LO_REGS		1600093						
ANR	1600760	Symbol	* reg		1600093						
ANR	1600761	Symbol	SLJIT_UNLIKELY		1600093						
ANR	1600762	Function	can_cache	978:0:31360:31805							
ANR	1600763	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1600762	0					
ANR	1600764	CompoundStatement		979:0:31454:31805	1600762	0					
ANR	1600765	IdentifierDeclStatement	sljit_sw diff ;	980:1:31457:31470	1600762	0	True				
ANR	1600766	IdentifierDecl	diff		1600762	0					
ANR	1600767	IdentifierDeclType	sljit_sw		1600762	0					
ANR	1600768	Identifier	diff		1600762	1					
ANR	1600769	IfStatement	if ( ( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM ) )		1600762	1					
ANR	1600770	Condition	( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM )	981:5:31477:31524	1600762	0	True				
ANR	1600771	OrExpression	( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM )		1600762	0		||			
ANR	1600772	BitAndExpression	arg & OFFS_REG_MASK		1600762	0		&			
ANR	1600773	Identifier	arg		1600762	0					
ANR	1600774	Identifier	OFFS_REG_MASK		1600762	1					
ANR	1600775	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1600762	1					
ANR	1600776	UnaryOperator	!		1600762	0					
ANR	1600777	BitAndExpression	next_arg & SLJIT_MEM		1600762	1		&			
ANR	1600778	Identifier	next_arg		1600762	0					
ANR	1600779	Identifier	SLJIT_MEM		1600762	1					
ANR	1600780	ReturnStatement	return 0 ;	982:2:31529:31537	1600762	1	True				
ANR	1600781	PrimaryExpression	0		1600762	0					
ANR	1600782	IfStatement	if ( ! ( arg & REG_MASK ) )		1600762	2					
ANR	1600783	Condition	! ( arg & REG_MASK )	984:5:31545:31561	1600762	0	True				
ANR	1600784	UnaryOperationExpression	! ( arg & REG_MASK )		1600762	0					
ANR	1600785	UnaryOperator	!		1600762	0					
ANR	1600786	BitAndExpression	arg & REG_MASK		1600762	1		&			
ANR	1600787	Identifier	arg		1600762	0					
ANR	1600788	Identifier	REG_MASK		1600762	1					
ANR	1600789	CompoundStatement		6:24:109:109	1600762	1					
ANR	1600790	ExpressionStatement	diff = argw - next_argw	985:2:31568:31591	1600762	0	True				
ANR	1600791	AssignmentExpression	diff = argw - next_argw		1600762	0		=			
ANR	1600792	Identifier	diff		1600762	0					
ANR	1600793	AdditiveExpression	argw - next_argw		1600762	1		-			
ANR	1600794	Identifier	argw		1600762	0					
ANR	1600795	Identifier	next_argw		1600762	1					
ANR	1600796	IfStatement	if ( diff <= 0xfff && diff >= - 0xfff )		1600762	1					
ANR	1600797	Condition	diff <= 0xfff && diff >= - 0xfff	986:6:31599:31629	1600762	0	True				
ANR	1600798	AndExpression	diff <= 0xfff && diff >= - 0xfff		1600762	0		&&			
ANR	1600799	RelationalExpression	diff <= 0xfff		1600762	0		<=			
ANR	1600800	Identifier	diff		1600762	0					
ANR	1600801	PrimaryExpression	0xfff		1600762	1					
ANR	1600802	RelationalExpression	diff >= - 0xfff		1600762	1		>=			
ANR	1600803	Identifier	diff		1600762	0					
ANR	1600804	UnaryOperationExpression	- 0xfff		1600762	1					
ANR	1600805	UnaryOperator	-		1600762	0					
ANR	1600806	PrimaryExpression	0xfff		1600762	1					
ANR	1600807	ReturnStatement	return 1 ;	987:3:31635:31643	1600762	1	True				
ANR	1600808	PrimaryExpression	1		1600762	0					
ANR	1600809	ReturnStatement	return 0 ;	988:2:31647:31655	1600762	2	True				
ANR	1600810	PrimaryExpression	0		1600762	0					
ANR	1600811	IfStatement	if ( argw == next_argw )		1600762	3					
ANR	1600812	Condition	argw == next_argw	991:5:31666:31682	1600762	0	True				
ANR	1600813	EqualityExpression	argw == next_argw		1600762	0		==			
ANR	1600814	Identifier	argw		1600762	0					
ANR	1600815	Identifier	next_argw		1600762	1					
ANR	1600816	ReturnStatement	return 1 ;	992:2:31687:31695	1600762	1	True				
ANR	1600817	PrimaryExpression	1		1600762	0					
ANR	1600818	ExpressionStatement	diff = argw - next_argw	994:1:31699:31722	1600762	4	True				
ANR	1600819	AssignmentExpression	diff = argw - next_argw		1600762	0		=			
ANR	1600820	Identifier	diff		1600762	0					
ANR	1600821	AdditiveExpression	argw - next_argw		1600762	1		-			
ANR	1600822	Identifier	argw		1600762	0					
ANR	1600823	Identifier	next_argw		1600762	1					
ANR	1600824	IfStatement	if ( arg == next_arg && diff <= 0xfff && diff >= - 0xfff )		1600762	5					
ANR	1600825	Condition	arg == next_arg && diff <= 0xfff && diff >= - 0xfff	995:5:31729:31778	1600762	0	True				
ANR	1600826	AndExpression	arg == next_arg && diff <= 0xfff && diff >= - 0xfff		1600762	0		&&			
ANR	1600827	EqualityExpression	arg == next_arg		1600762	0		==			
ANR	1600828	Identifier	arg		1600762	0					
ANR	1600829	Identifier	next_arg		1600762	1					
ANR	1600830	AndExpression	diff <= 0xfff && diff >= - 0xfff		1600762	1		&&			
ANR	1600831	RelationalExpression	diff <= 0xfff		1600762	0		<=			
ANR	1600832	Identifier	diff		1600762	0					
ANR	1600833	PrimaryExpression	0xfff		1600762	1					
ANR	1600834	RelationalExpression	diff >= - 0xfff		1600762	1		>=			
ANR	1600835	Identifier	diff		1600762	0					
ANR	1600836	UnaryOperationExpression	- 0xfff		1600762	1					
ANR	1600837	UnaryOperator	-		1600762	0					
ANR	1600838	PrimaryExpression	0xfff		1600762	1					
ANR	1600839	ReturnStatement	return 1 ;	996:2:31783:31791	1600762	1	True				
ANR	1600840	PrimaryExpression	1		1600762	0					
ANR	1600841	ReturnStatement	return 0 ;	998:1:31795:31803	1600762	6	True				
ANR	1600842	PrimaryExpression	0		1600762	0					
ANR	1600843	ReturnType	static sljit_si		1600762	1					
ANR	1600844	Identifier	can_cache		1600762	2					
ANR	1600845	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1600762	3					
ANR	1600846	Parameter	sljit_si arg	978:26:31386:31397	1600762	0	True				
ANR	1600847	ParameterType	sljit_si		1600762	0					
ANR	1600848	Identifier	arg		1600762	1					
ANR	1600849	Parameter	sljit_sw argw	978:40:31400:31412	1600762	1	True				
ANR	1600850	ParameterType	sljit_sw		1600762	0					
ANR	1600851	Identifier	argw		1600762	1					
ANR	1600852	Parameter	sljit_si next_arg	978:55:31415:31431	1600762	2	True				
ANR	1600853	ParameterType	sljit_si		1600762	0					
ANR	1600854	Identifier	next_arg		1600762	1					
ANR	1600855	Parameter	sljit_sw next_argw	978:74:31434:31451	1600762	3	True				
ANR	1600856	ParameterType	sljit_sw		1600762	0					
ANR	1600857	Identifier	next_argw		1600762	1					
ANR	1600858	CFGEntryNode	ENTRY		1600762		True				
ANR	1600859	CFGExitNode	EXIT		1600762		True				
ANR	1600860	Symbol	next_arg		1600762						
ANR	1600861	Symbol	REG_MASK		1600762						
ANR	1600862	Symbol	SLJIT_MEM		1600762						
ANR	1600863	Symbol	arg		1600762						
ANR	1600864	Symbol	OFFS_REG_MASK		1600762						
ANR	1600865	Symbol	next_argw		1600762						
ANR	1600866	Symbol	diff		1600762						
ANR	1600867	Symbol	argw		1600762						
ANR	1600868	Function	getput_arg	1002:0:31868:35507							
ANR	1600869	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1600868	0					
ANR	1600870	CompoundStatement		1004:0:32027:35507	1600868	0					
ANR	1600871	IdentifierDeclStatement	"sljit_si tmp_r , other_r ;"	1005:1:32030:32053	1600868	0	True				
ANR	1600872	IdentifierDecl	tmp_r		1600868	0					
ANR	1600873	IdentifierDeclType	sljit_si		1600868	0					
ANR	1600874	Identifier	tmp_r		1600868	1					
ANR	1600875	IdentifierDecl	other_r		1600868	1					
ANR	1600876	IdentifierDeclType	sljit_si		1600868	0					
ANR	1600877	Identifier	other_r		1600868	1					
ANR	1600878	IdentifierDeclStatement	sljit_sw diff ;	1006:1:32056:32069	1600868	1	True				
ANR	1600879	IdentifierDecl	diff		1600868	0					
ANR	1600880	IdentifierDeclType	sljit_sw		1600868	0					
ANR	1600881	Identifier	diff		1600868	1					
ANR	1600882	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1008:1:32073:32102	1600868	2	True				
ANR	1600883	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1600868	0					
ANR	1600884	Callee	SLJIT_ASSERT		1600868	0					
ANR	1600885	Identifier	SLJIT_ASSERT		1600868	0					
ANR	1600886	ArgumentList	arg & SLJIT_MEM		1600868	1					
ANR	1600887	Argument	arg & SLJIT_MEM		1600868	0					
ANR	1600888	BitAndExpression	arg & SLJIT_MEM		1600868	0		&			
ANR	1600889	Identifier	arg		1600868	0					
ANR	1600890	Identifier	SLJIT_MEM		1600868	1					
ANR	1600891	IfStatement	if ( ! ( next_arg & SLJIT_MEM ) )		1600868	3					
ANR	1600892	Condition	! ( next_arg & SLJIT_MEM )	1009:5:32109:32131	1600868	0	True				
ANR	1600893	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1600868	0					
ANR	1600894	UnaryOperator	!		1600868	0					
ANR	1600895	BitAndExpression	next_arg & SLJIT_MEM		1600868	1		&			
ANR	1600896	Identifier	next_arg		1600868	0					
ANR	1600897	Identifier	SLJIT_MEM		1600868	1					
ANR	1600898	CompoundStatement		6:30:106:106	1600868	1					
ANR	1600899	ExpressionStatement	next_arg = 0	1010:2:32138:32150	1600868	0	True				
ANR	1600900	AssignmentExpression	next_arg = 0		1600868	0		=			
ANR	1600901	Identifier	next_arg		1600868	0					
ANR	1600902	PrimaryExpression	0		1600868	1					
ANR	1600903	ExpressionStatement	next_argw = 0	1011:2:32154:32167	1600868	1	True				
ANR	1600904	AssignmentExpression	next_argw = 0		1600868	0		=			
ANR	1600905	Identifier	next_argw		1600868	0					
ANR	1600906	PrimaryExpression	0		1600868	1					
ANR	1600907	ExpressionStatement	tmp_r = ( flags & STORE ) ? TMP_REG3 : reg	1014:1:32174:32214	1600868	4	True				
ANR	1600908	AssignmentExpression	tmp_r = ( flags & STORE ) ? TMP_REG3 : reg		1600868	0		=			
ANR	1600909	Identifier	tmp_r		1600868	0					
ANR	1600910	ConditionalExpression	( flags & STORE ) ? TMP_REG3 : reg		1600868	1					
ANR	1600911	Condition	flags & STORE		1600868	0					
ANR	1600912	BitAndExpression	flags & STORE		1600868	0		&			
ANR	1600913	Identifier	flags		1600868	0					
ANR	1600914	Identifier	STORE		1600868	1					
ANR	1600915	Identifier	TMP_REG3		1600868	1					
ANR	1600916	Identifier	reg		1600868	2					
ANR	1600917	IfStatement	if ( SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) ) )		1600868	5					
ANR	1600918	Condition	SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) )	1016:5:32222:32273	1600868	0	True				
ANR	1600919	CallExpression	SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) )		1600868	0					
ANR	1600920	Callee	SLJIT_UNLIKELY		1600868	0					
ANR	1600921	Identifier	SLJIT_UNLIKELY		1600868	0					
ANR	1600922	ArgumentList	( flags & UPDATE ) && ( arg & REG_MASK )		1600868	1					
ANR	1600923	Argument	( flags & UPDATE ) && ( arg & REG_MASK )		1600868	0					
ANR	1600924	AndExpression	( flags & UPDATE ) && ( arg & REG_MASK )		1600868	0		&&			
ANR	1600925	BitAndExpression	flags & UPDATE		1600868	0		&			
ANR	1600926	Identifier	flags		1600868	0					
ANR	1600927	Identifier	UPDATE		1600868	1					
ANR	1600928	BitAndExpression	arg & REG_MASK		1600868	1		&			
ANR	1600929	Identifier	arg		1600868	0					
ANR	1600930	Identifier	REG_MASK		1600868	1					
ANR	1600931	CompoundStatement		13:59:248:248	1600868	1					
ANR	1600932	ExpressionStatement	other_r = OFFS_REG ( arg )	1019:2:32369:32392	1600868	0	True				
ANR	1600933	AssignmentExpression	other_r = OFFS_REG ( arg )		1600868	0		=			
ANR	1600934	Identifier	other_r		1600868	0					
ANR	1600935	CallExpression	OFFS_REG ( arg )		1600868	1					
ANR	1600936	Callee	OFFS_REG		1600868	0					
ANR	1600937	Identifier	OFFS_REG		1600868	0					
ANR	1600938	ArgumentList	arg		1600868	1					
ANR	1600939	Argument	arg		1600868	0					
ANR	1600940	Identifier	arg		1600868	0					
ANR	1600941	ExpressionStatement	arg &= 0xf	1020:2:32396:32406	1600868	1	True				
ANR	1600942	AssignmentExpression	arg &= 0xf		1600868	0		&=			
ANR	1600943	Identifier	arg		1600868	0					
ANR	1600944	PrimaryExpression	0xf		1600868	1					
ANR	1600945	ExpressionStatement	flags &= ~UPDATE	1021:2:32410:32426	1600868	2	True				
ANR	1600946	AssignmentExpression	flags &= ~UPDATE		1600868	0		&=			
ANR	1600947	Identifier	flags		1600868	0					
ANR	1600948	Identifier	~UPDATE		1600868	1					
ANR	1600949	IfStatement	if ( ! other_r )		1600868	3					
ANR	1600950	Condition	! other_r	1023:6:32435:32442	1600868	0	True				
ANR	1600951	UnaryOperationExpression	! other_r		1600868	0					
ANR	1600952	UnaryOperator	!		1600868	0					
ANR	1600953	Identifier	other_r		1600868	1					
ANR	1600954	CompoundStatement		20:16:417:417	1600868	1					
ANR	1600955	IfStatement	if ( ! ( argw & ~0xfff ) )		1600868	0					
ANR	1600956	Condition	! ( argw & ~0xfff )	1024:7:32454:32469	1600868	0	True				
ANR	1600957	UnaryOperationExpression	! ( argw & ~0xfff )		1600868	0					
ANR	1600958	UnaryOperator	!		1600868	0					
ANR	1600959	BitAndExpression	argw & ~0xfff		1600868	1		&			
ANR	1600960	Identifier	argw		1600868	0					
ANR	1600961	Identifier	~0xfff		1600868	1					
ANR	1600962	CompoundStatement		21:25:444:444	1600868	1					
ANR	1600963	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"	1025:4:32478:32569	1600868	0	True				
ANR	1600964	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"		1600868	0					
ANR	1600965	Callee	FAIL_IF		1600868	0					
ANR	1600966	Identifier	FAIL_IF		1600868	0					
ANR	1600967	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1600868	1					
ANR	1600968	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1600868	0					
ANR	1600969	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1600868	0					
ANR	1600970	Callee	push_inst32		1600868	0					
ANR	1600971	Identifier	push_inst32		1600868	0					
ANR	1600972	ArgumentList	compiler		1600868	1					
ANR	1600973	Argument	compiler		1600868	0					
ANR	1600974	Identifier	compiler		1600868	0					
ANR	1600975	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1600868	1					
ANR	1600976	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1600868	0		|			
ANR	1600977	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1600978	Identifier	sljit_mem32		1600868	0					
ANR	1600979	Identifier	flags		1600868	1					
ANR	1600980	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1600868	1		|			
ANR	1600981	Identifier	MEM_IMM12		1600868	0					
ANR	1600982	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | argw		1600868	1		|			
ANR	1600983	CallExpression	RT4 ( reg )		1600868	0					
ANR	1600984	Callee	RT4		1600868	0					
ANR	1600985	Identifier	RT4		1600868	0					
ANR	1600986	ArgumentList	reg		1600868	1					
ANR	1600987	Argument	reg		1600868	0					
ANR	1600988	Identifier	reg		1600868	0					
ANR	1600989	InclusiveOrExpression	RN4 ( arg ) | argw		1600868	1		|			
ANR	1600990	CallExpression	RN4 ( arg )		1600868	0					
ANR	1600991	Callee	RN4		1600868	0					
ANR	1600992	Identifier	RN4		1600868	0					
ANR	1600993	ArgumentList	arg		1600868	1					
ANR	1600994	Argument	arg		1600868	0					
ANR	1600995	Identifier	arg		1600868	0					
ANR	1600996	Identifier	argw		1600868	1					
ANR	1600997	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw ) ) ;"	1026:4:32575:32646	1600868	1	True				
ANR	1600998	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw ) )"		1600868	0					
ANR	1600999	Callee	push_inst32		1600868	0					
ANR	1601000	Identifier	push_inst32		1600868	0					
ANR	1601001	ArgumentList	compiler		1600868	1					
ANR	1601002	Argument	compiler		1600868	0					
ANR	1601003	Identifier	compiler		1600868	0					
ANR	1601004	Argument	ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw )		1600868	1					
ANR	1601005	InclusiveOrExpression	ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw )		1600868	0		|			
ANR	1601006	Identifier	ADDWI		1600868	0					
ANR	1601007	InclusiveOrExpression	RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw )		1600868	1		|			
ANR	1601008	CallExpression	RD4 ( arg )		1600868	0					
ANR	1601009	Callee	RD4		1600868	0					
ANR	1601010	Identifier	RD4		1600868	0					
ANR	1601011	ArgumentList	arg		1600868	1					
ANR	1601012	Argument	arg		1600868	0					
ANR	1601013	Identifier	arg		1600868	0					
ANR	1601014	InclusiveOrExpression	RN4 ( arg ) | IMM12 ( argw )		1600868	1		|			
ANR	1601015	CallExpression	RN4 ( arg )		1600868	0					
ANR	1601016	Callee	RN4		1600868	0					
ANR	1601017	Identifier	RN4		1600868	0					
ANR	1601018	ArgumentList	arg		1600868	1					
ANR	1601019	Argument	arg		1600868	0					
ANR	1601020	Identifier	arg		1600868	0					
ANR	1601021	CallExpression	IMM12 ( argw )		1600868	1					
ANR	1601022	Callee	IMM12		1600868	0					
ANR	1601023	Identifier	IMM12		1600868	0					
ANR	1601024	ArgumentList	argw		1600868	1					
ANR	1601025	Argument	argw		1600868	0					
ANR	1601026	Identifier	argw		1600868	0					
ANR	1601027	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM )		1600868	1					
ANR	1601028	Condition	compiler -> cache_arg == SLJIT_MEM	1029:7:32661:32692	1600868	0	True				
ANR	1601029	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1600868	0		==			
ANR	1601030	PtrMemberAccess	compiler -> cache_arg		1600868	0					
ANR	1601031	Identifier	compiler		1600868	0					
ANR	1601032	Identifier	cache_arg		1600868	1					
ANR	1601033	Identifier	SLJIT_MEM		1600868	1					
ANR	1601034	CompoundStatement		26:41:667:667	1600868	1					
ANR	1601035	IfStatement	if ( argw == compiler -> cache_argw )		1600868	0					
ANR	1601036	Condition	argw == compiler -> cache_argw	1030:8:32705:32732	1600868	0	True				
ANR	1601037	EqualityExpression	argw == compiler -> cache_argw		1600868	0		==			
ANR	1601038	Identifier	argw		1600868	0					
ANR	1601039	PtrMemberAccess	compiler -> cache_argw		1600868	1					
ANR	1601040	Identifier	compiler		1600868	0					
ANR	1601041	Identifier	cache_argw		1600868	1					
ANR	1601042	CompoundStatement		27:38:707:707	1600868	1					
ANR	1601043	ExpressionStatement	other_r = TMP_REG3	1031:5:32742:32760	1600868	0	True				
ANR	1601044	AssignmentExpression	other_r = TMP_REG3		1600868	0		=			
ANR	1601045	Identifier	other_r		1600868	0					
ANR	1601046	Identifier	TMP_REG3		1600868	1					
ANR	1601047	ExpressionStatement	argw = 0	1032:5:32767:32775	1600868	1	True				
ANR	1601048	AssignmentExpression	argw = 0		1600868	0		=			
ANR	1601049	Identifier	argw		1600868	0					
ANR	1601050	PrimaryExpression	0		1600868	1					
ANR	1601051	ElseStatement	else		1600868	0					
ANR	1601052	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED )"		1600868	0					
ANR	1601053	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"	1034:13:32796:32893	1600868	0	True				
ANR	1601054	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"		1600868	0		!=			
ANR	1601055	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw )"		1600868	0					
ANR	1601056	Callee	emit_set_delta		1600868	0					
ANR	1601057	Identifier	emit_set_delta		1600868	0					
ANR	1601058	ArgumentList	compiler		1600868	1					
ANR	1601059	Argument	compiler		1600868	0					
ANR	1601060	Identifier	compiler		1600868	0					
ANR	1601061	Argument	TMP_REG3		1600868	1					
ANR	1601062	Identifier	TMP_REG3		1600868	0					
ANR	1601063	Argument	TMP_REG3		1600868	2					
ANR	1601064	Identifier	TMP_REG3		1600868	0					
ANR	1601065	Argument	argw - compiler -> cache_argw		1600868	3					
ANR	1601066	AdditiveExpression	argw - compiler -> cache_argw		1600868	0		-			
ANR	1601067	Identifier	argw		1600868	0					
ANR	1601068	PtrMemberAccess	compiler -> cache_argw		1600868	1					
ANR	1601069	Identifier	compiler		1600868	0					
ANR	1601070	Identifier	cache_argw		1600868	1					
ANR	1601071	Identifier	SLJIT_ERR_UNSUPPORTED		1600868	1					
ANR	1601072	CompoundStatement		31:113:868:868	1600868	1					
ANR	1601073	ExpressionStatement	FAIL_IF ( compiler -> error )	1035:5:32903:32927	1600868	0	True				
ANR	1601074	CallExpression	FAIL_IF ( compiler -> error )		1600868	0					
ANR	1601075	Callee	FAIL_IF		1600868	0					
ANR	1601076	Identifier	FAIL_IF		1600868	0					
ANR	1601077	ArgumentList	compiler -> error		1600868	1					
ANR	1601078	Argument	compiler -> error		1600868	0					
ANR	1601079	PtrMemberAccess	compiler -> error		1600868	0					
ANR	1601080	Identifier	compiler		1600868	0					
ANR	1601081	Identifier	error		1600868	1					
ANR	1601082	ExpressionStatement	compiler -> cache_argw = argw	1036:5:32934:32961	1600868	1	True				
ANR	1601083	AssignmentExpression	compiler -> cache_argw = argw		1600868	0		=			
ANR	1601084	PtrMemberAccess	compiler -> cache_argw		1600868	0					
ANR	1601085	Identifier	compiler		1600868	0					
ANR	1601086	Identifier	cache_argw		1600868	1					
ANR	1601087	Identifier	argw		1600868	1					
ANR	1601088	ExpressionStatement	other_r = TMP_REG3	1037:5:32968:32986	1600868	2	True				
ANR	1601089	AssignmentExpression	other_r = TMP_REG3		1600868	0		=			
ANR	1601090	Identifier	other_r		1600868	0					
ANR	1601091	Identifier	TMP_REG3		1600868	1					
ANR	1601092	ExpressionStatement	argw = 0	1038:5:32993:33001	1600868	3	True				
ANR	1601093	AssignmentExpression	argw = 0		1600868	0		=			
ANR	1601094	Identifier	argw		1600868	0					
ANR	1601095	PrimaryExpression	0		1600868	1					
ANR	1601096	IfStatement	if ( argw )		1600868	2					
ANR	1601097	Condition	argw	1042:7:33022:33025	1600868	0	True				
ANR	1601098	Identifier	argw		1600868	0					
ANR	1601099	CompoundStatement		39:13:1000:1000	1600868	1					
ANR	1601100	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1043:4:33034:33083	1600868	0	True				
ANR	1601101	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1600868	0					
ANR	1601102	Callee	FAIL_IF		1600868	0					
ANR	1601103	Identifier	FAIL_IF		1600868	0					
ANR	1601104	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1600868	1					
ANR	1601105	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1600868	0					
ANR	1601106	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1600868	0					
ANR	1601107	Callee	load_immediate		1600868	0					
ANR	1601108	Identifier	load_immediate		1600868	0					
ANR	1601109	ArgumentList	compiler		1600868	1					
ANR	1601110	Argument	compiler		1600868	0					
ANR	1601111	Identifier	compiler		1600868	0					
ANR	1601112	Argument	TMP_REG3		1600868	1					
ANR	1601113	Identifier	TMP_REG3		1600868	0					
ANR	1601114	Argument	argw		1600868	2					
ANR	1601115	Identifier	argw		1600868	0					
ANR	1601116	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1044:4:33089:33120	1600868	1	True				
ANR	1601117	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1600868	0		=			
ANR	1601118	PtrMemberAccess	compiler -> cache_arg		1600868	0					
ANR	1601119	Identifier	compiler		1600868	0					
ANR	1601120	Identifier	cache_arg		1600868	1					
ANR	1601121	Identifier	SLJIT_MEM		1600868	1					
ANR	1601122	ExpressionStatement	compiler -> cache_argw = argw	1045:4:33126:33153	1600868	2	True				
ANR	1601123	AssignmentExpression	compiler -> cache_argw = argw		1600868	0		=			
ANR	1601124	PtrMemberAccess	compiler -> cache_argw		1600868	0					
ANR	1601125	Identifier	compiler		1600868	0					
ANR	1601126	Identifier	cache_argw		1600868	1					
ANR	1601127	Identifier	argw		1600868	1					
ANR	1601128	ExpressionStatement	other_r = TMP_REG3	1046:4:33159:33177	1600868	3	True				
ANR	1601129	AssignmentExpression	other_r = TMP_REG3		1600868	0		=			
ANR	1601130	Identifier	other_r		1600868	0					
ANR	1601131	Identifier	TMP_REG3		1600868	1					
ANR	1601132	ExpressionStatement	argw = 0	1047:4:33183:33191	1600868	4	True				
ANR	1601133	AssignmentExpression	argw = 0		1600868	0		=			
ANR	1601134	Identifier	argw		1600868	0					
ANR	1601135	PrimaryExpression	0		1600868	1					
ANR	1601136	ExpressionStatement	argw &= 0x3	1051:2:33205:33216	1600868	4	True				
ANR	1601137	AssignmentExpression	argw &= 0x3		1600868	0		&=			
ANR	1601138	Identifier	argw		1600868	0					
ANR	1601139	PrimaryExpression	0x3		1600868	1					
ANR	1601140	IfStatement	"if ( ! argw && IS_3_LO_REGS ( reg , arg , other_r ) )"		1600868	5					
ANR	1601141	Condition	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"	1052:6:33224:33263	1600868	0	True				
ANR	1601142	AndExpression	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"		1600868	0		&&			
ANR	1601143	UnaryOperationExpression	! argw		1600868	0					
ANR	1601144	UnaryOperator	!		1600868	0					
ANR	1601145	Identifier	argw		1600868	1					
ANR	1601146	CallExpression	"IS_3_LO_REGS ( reg , arg , other_r )"		1600868	1					
ANR	1601147	Callee	IS_3_LO_REGS		1600868	0					
ANR	1601148	Identifier	IS_3_LO_REGS		1600868	0					
ANR	1601149	ArgumentList	reg		1600868	1					
ANR	1601150	Argument	reg		1600868	0					
ANR	1601151	Identifier	reg		1600868	0					
ANR	1601152	Argument	arg		1600868	1					
ANR	1601153	Identifier	arg		1600868	0					
ANR	1601154	Argument	other_r		1600868	2					
ANR	1601155	Identifier	other_r		1600868	0					
ANR	1601156	CompoundStatement		49:48:1238:1238	1600868	1					
ANR	1601157	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"	1053:3:33271:33358	1600868	0	True				
ANR	1601158	CallExpression	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"		1600868	0					
ANR	1601159	Callee	FAIL_IF		1600868	0					
ANR	1601160	Identifier	FAIL_IF		1600868	0					
ANR	1601161	ArgumentList	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1600868	1					
ANR	1601162	Argument	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1600868	0					
ANR	1601163	CallExpression	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1600868	0					
ANR	1601164	Callee	push_inst16		1600868	0					
ANR	1601165	Identifier	push_inst16		1600868	0					
ANR	1601166	ArgumentList	compiler		1600868	1					
ANR	1601167	Argument	compiler		1600868	0					
ANR	1601168	Identifier	compiler		1600868	0					
ANR	1601169	Argument	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1600868	1					
ANR	1601170	InclusiveOrExpression	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1600868	0		|			
ANR	1601171	ArrayIndexing	sljit_mem16 [ flags ]		1600868	0					
ANR	1601172	Identifier	sljit_mem16		1600868	0					
ANR	1601173	Identifier	flags		1600868	1					
ANR	1601174	InclusiveOrExpression	RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1600868	1		|			
ANR	1601175	CallExpression	RD3 ( reg )		1600868	0					
ANR	1601176	Callee	RD3		1600868	0					
ANR	1601177	Identifier	RD3		1600868	0					
ANR	1601178	ArgumentList	reg		1600868	1					
ANR	1601179	Argument	reg		1600868	0					
ANR	1601180	Identifier	reg		1600868	0					
ANR	1601181	InclusiveOrExpression	RN3 ( arg ) | RM3 ( other_r )		1600868	1		|			
ANR	1601182	CallExpression	RN3 ( arg )		1600868	0					
ANR	1601183	Callee	RN3		1600868	0					
ANR	1601184	Identifier	RN3		1600868	0					
ANR	1601185	ArgumentList	arg		1600868	1					
ANR	1601186	Argument	arg		1600868	0					
ANR	1601187	Identifier	arg		1600868	0					
ANR	1601188	CallExpression	RM3 ( other_r )		1600868	1					
ANR	1601189	Callee	RM3		1600868	0					
ANR	1601190	Identifier	RM3		1600868	0					
ANR	1601191	ArgumentList	other_r		1600868	1					
ANR	1601192	Argument	other_r		1600868	0					
ANR	1601193	Identifier	other_r		1600868	0					
ANR	1601194	ReturnStatement	"return push_inst16 ( compiler , ADD | SET_REGS44 ( arg , other_r ) ) ;"	1054:3:33363:33423	1600868	1	True				
ANR	1601195	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( arg , other_r ) )"		1600868	0					
ANR	1601196	Callee	push_inst16		1600868	0					
ANR	1601197	Identifier	push_inst16		1600868	0					
ANR	1601198	ArgumentList	compiler		1600868	1					
ANR	1601199	Argument	compiler		1600868	0					
ANR	1601200	Identifier	compiler		1600868	0					
ANR	1601201	Argument	"ADD | SET_REGS44 ( arg , other_r )"		1600868	1					
ANR	1601202	InclusiveOrExpression	"ADD | SET_REGS44 ( arg , other_r )"		1600868	0		|			
ANR	1601203	Identifier	ADD		1600868	0					
ANR	1601204	CallExpression	"SET_REGS44 ( arg , other_r )"		1600868	1					
ANR	1601205	Callee	SET_REGS44		1600868	0					
ANR	1601206	Identifier	SET_REGS44		1600868	0					
ANR	1601207	ArgumentList	arg		1600868	1					
ANR	1601208	Argument	arg		1600868	0					
ANR	1601209	Identifier	arg		1600868	0					
ANR	1601210	Argument	other_r		1600868	1					
ANR	1601211	Identifier	other_r		1600868	0					
ANR	1601212	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"	1056:2:33431:33532	1600868	6	True				
ANR	1601213	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"		1600868	0					
ANR	1601214	Callee	FAIL_IF		1600868	0					
ANR	1601215	Identifier	FAIL_IF		1600868	0					
ANR	1601216	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1600868	1					
ANR	1601217	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1600868	0					
ANR	1601218	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1600868	0					
ANR	1601219	Callee	push_inst32		1600868	0					
ANR	1601220	Identifier	push_inst32		1600868	0					
ANR	1601221	ArgumentList	compiler		1600868	1					
ANR	1601222	Argument	compiler		1600868	0					
ANR	1601223	Identifier	compiler		1600868	0					
ANR	1601224	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600868	1					
ANR	1601225	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600868	0		|			
ANR	1601226	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601227	Identifier	sljit_mem32		1600868	0					
ANR	1601228	Identifier	flags		1600868	1					
ANR	1601229	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600868	1		|			
ANR	1601230	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601231	Callee	RT4		1600868	0					
ANR	1601232	Identifier	RT4		1600868	0					
ANR	1601233	ArgumentList	reg		1600868	1					
ANR	1601234	Argument	reg		1600868	0					
ANR	1601235	Identifier	reg		1600868	0					
ANR	1601236	InclusiveOrExpression	RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1600868	1		|			
ANR	1601237	CallExpression	RN4 ( arg )		1600868	0					
ANR	1601238	Callee	RN4		1600868	0					
ANR	1601239	Identifier	RN4		1600868	0					
ANR	1601240	ArgumentList	arg		1600868	1					
ANR	1601241	Argument	arg		1600868	0					
ANR	1601242	Identifier	arg		1600868	0					
ANR	1601243	InclusiveOrExpression	RM4 ( other_r ) | ( argw << 4 )		1600868	1		|			
ANR	1601244	CallExpression	RM4 ( other_r )		1600868	0					
ANR	1601245	Callee	RM4		1600868	0					
ANR	1601246	Identifier	RM4		1600868	0					
ANR	1601247	ArgumentList	other_r		1600868	1					
ANR	1601248	Argument	other_r		1600868	0					
ANR	1601249	Identifier	other_r		1600868	0					
ANR	1601250	ShiftExpression	argw << 4		1600868	1		<<			
ANR	1601251	Identifier	argw		1600868	0					
ANR	1601252	PrimaryExpression	4		1600868	1					
ANR	1601253	ReturnStatement	"return push_inst32 ( compiler , ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 ) ) ;"	1057:2:33536:33622	1600868	7	True				
ANR	1601254	CallExpression	"push_inst32 ( compiler , ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 ) )"		1600868	0					
ANR	1601255	Callee	push_inst32		1600868	0					
ANR	1601256	Identifier	push_inst32		1600868	0					
ANR	1601257	ArgumentList	compiler		1600868	1					
ANR	1601258	Argument	compiler		1600868	0					
ANR	1601259	Identifier	compiler		1600868	0					
ANR	1601260	Argument	ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1600868	1					
ANR	1601261	InclusiveOrExpression	ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1600868	0		|			
ANR	1601262	Identifier	ADD_W		1600868	0					
ANR	1601263	InclusiveOrExpression	RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1600868	1		|			
ANR	1601264	CallExpression	RD4 ( arg )		1600868	0					
ANR	1601265	Callee	RD4		1600868	0					
ANR	1601266	Identifier	RD4		1600868	0					
ANR	1601267	ArgumentList	arg		1600868	1					
ANR	1601268	Argument	arg		1600868	0					
ANR	1601269	Identifier	arg		1600868	0					
ANR	1601270	InclusiveOrExpression	RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1600868	1		|			
ANR	1601271	CallExpression	RN4 ( arg )		1600868	0					
ANR	1601272	Callee	RN4		1600868	0					
ANR	1601273	Identifier	RN4		1600868	0					
ANR	1601274	ArgumentList	arg		1600868	1					
ANR	1601275	Argument	arg		1600868	0					
ANR	1601276	Identifier	arg		1600868	0					
ANR	1601277	InclusiveOrExpression	RM4 ( other_r ) | ( argw << 6 )		1600868	1		|			
ANR	1601278	CallExpression	RM4 ( other_r )		1600868	0					
ANR	1601279	Callee	RM4		1600868	0					
ANR	1601280	Identifier	RM4		1600868	0					
ANR	1601281	ArgumentList	other_r		1600868	1					
ANR	1601282	Argument	other_r		1600868	0					
ANR	1601283	Identifier	other_r		1600868	0					
ANR	1601284	ShiftExpression	argw << 6		1600868	1		<<			
ANR	1601285	Identifier	argw		1600868	0					
ANR	1601286	PrimaryExpression	6		1600868	1					
ANR	1601287	ExpressionStatement	flags &= ~UPDATE	1059:1:33628:33644	1600868	6	True				
ANR	1601288	AssignmentExpression	flags &= ~UPDATE		1600868	0		&=			
ANR	1601289	Identifier	flags		1600868	0					
ANR	1601290	Identifier	~UPDATE		1600868	1					
ANR	1601291	ExpressionStatement	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )	1061:1:33648:33684	1600868	7	True				
ANR	1601292	CallExpression	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )		1600868	0					
ANR	1601293	Callee	SLJIT_ASSERT		1600868	0					
ANR	1601294	Identifier	SLJIT_ASSERT		1600868	0					
ANR	1601295	ArgumentList	! ( arg & OFFS_REG_MASK )		1600868	1					
ANR	1601296	Argument	! ( arg & OFFS_REG_MASK )		1600868	0					
ANR	1601297	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1600868	0					
ANR	1601298	UnaryOperator	!		1600868	0					
ANR	1601299	BitAndExpression	arg & OFFS_REG_MASK		1600868	1		&			
ANR	1601300	Identifier	arg		1600868	0					
ANR	1601301	Identifier	OFFS_REG_MASK		1600868	1					
ANR	1601302	IfStatement	if ( compiler -> cache_arg == arg )		1600868	8					
ANR	1601303	Condition	compiler -> cache_arg == arg	1063:5:33692:33717	1600868	0	True				
ANR	1601304	EqualityExpression	compiler -> cache_arg == arg		1600868	0		==			
ANR	1601305	PtrMemberAccess	compiler -> cache_arg		1600868	0					
ANR	1601306	Identifier	compiler		1600868	0					
ANR	1601307	Identifier	cache_arg		1600868	1					
ANR	1601308	Identifier	arg		1600868	1					
ANR	1601309	CompoundStatement		60:33:1692:1692	1600868	1					
ANR	1601310	ExpressionStatement	diff = argw - compiler -> cache_argw	1064:2:33724:33758	1600868	0	True				
ANR	1601311	AssignmentExpression	diff = argw - compiler -> cache_argw		1600868	0		=			
ANR	1601312	Identifier	diff		1600868	0					
ANR	1601313	AdditiveExpression	argw - compiler -> cache_argw		1600868	1		-			
ANR	1601314	Identifier	argw		1600868	0					
ANR	1601315	PtrMemberAccess	compiler -> cache_argw		1600868	1					
ANR	1601316	Identifier	compiler		1600868	0					
ANR	1601317	Identifier	cache_argw		1600868	1					
ANR	1601318	IfStatement	if ( ! ( diff & ~0xfff ) )		1600868	1					
ANR	1601319	Condition	! ( diff & ~0xfff )	1065:6:33766:33781	1600868	0	True				
ANR	1601320	UnaryOperationExpression	! ( diff & ~0xfff )		1600868	0					
ANR	1601321	UnaryOperator	!		1600868	0					
ANR	1601322	BitAndExpression	diff & ~0xfff		1600868	1		&			
ANR	1601323	Identifier	diff		1600868	0					
ANR	1601324	Identifier	~0xfff		1600868	1					
ANR	1601325	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff ) ;"	1066:3:33787:33881	1600868	1	True				
ANR	1601326	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff )"		1600868	0					
ANR	1601327	Callee	push_inst32		1600868	0					
ANR	1601328	Identifier	push_inst32		1600868	0					
ANR	1601329	ArgumentList	compiler		1600868	1					
ANR	1601330	Argument	compiler		1600868	0					
ANR	1601331	Identifier	compiler		1600868	0					
ANR	1601332	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1600868	1					
ANR	1601333	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1600868	0		|			
ANR	1601334	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601335	Identifier	sljit_mem32		1600868	0					
ANR	1601336	Identifier	flags		1600868	1					
ANR	1601337	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1600868	1		|			
ANR	1601338	Identifier	MEM_IMM12		1600868	0					
ANR	1601339	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1600868	1		|			
ANR	1601340	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601341	Callee	RT4		1600868	0					
ANR	1601342	Identifier	RT4		1600868	0					
ANR	1601343	ArgumentList	reg		1600868	1					
ANR	1601344	Argument	reg		1600868	0					
ANR	1601345	Identifier	reg		1600868	0					
ANR	1601346	InclusiveOrExpression	RN4 ( TMP_REG3 ) | diff		1600868	1		|			
ANR	1601347	CallExpression	RN4 ( TMP_REG3 )		1600868	0					
ANR	1601348	Callee	RN4		1600868	0					
ANR	1601349	Identifier	RN4		1600868	0					
ANR	1601350	ArgumentList	TMP_REG3		1600868	1					
ANR	1601351	Argument	TMP_REG3		1600868	0					
ANR	1601352	Identifier	TMP_REG3		1600868	0					
ANR	1601353	Identifier	diff		1600868	1					
ANR	1601354	IfStatement	if ( ! ( ( compiler -> cache_argw - argw ) & ~0xff ) )		1600868	2					
ANR	1601355	Condition	! ( ( compiler -> cache_argw - argw ) & ~0xff )	1067:6:33889:33928	1600868	0	True				
ANR	1601356	UnaryOperationExpression	! ( ( compiler -> cache_argw - argw ) & ~0xff )		1600868	0					
ANR	1601357	UnaryOperator	!		1600868	0					
ANR	1601358	BitAndExpression	( compiler -> cache_argw - argw ) & ~0xff		1600868	1		&			
ANR	1601359	AdditiveExpression	compiler -> cache_argw - argw		1600868	0		-			
ANR	1601360	PtrMemberAccess	compiler -> cache_argw		1600868	0					
ANR	1601361	Identifier	compiler		1600868	0					
ANR	1601362	Identifier	cache_argw		1600868	1					
ANR	1601363	Identifier	argw		1600868	1					
ANR	1601364	Identifier	~0xff		1600868	1					
ANR	1601365	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw ) ) ;"	1068:3:33934:34052	1600868	1	True				
ANR	1601366	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw ) )"		1600868	0					
ANR	1601367	Callee	push_inst32		1600868	0					
ANR	1601368	Identifier	push_inst32		1600868	0					
ANR	1601369	ArgumentList	compiler		1600868	1					
ANR	1601370	Argument	compiler		1600868	0					
ANR	1601371	Identifier	compiler		1600868	0					
ANR	1601372	Argument	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1600868	1					
ANR	1601373	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1600868	0		|			
ANR	1601374	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601375	Identifier	sljit_mem32		1600868	0					
ANR	1601376	Identifier	flags		1600868	1					
ANR	1601377	InclusiveOrExpression	MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1600868	1		|			
ANR	1601378	Identifier	MEM_IMM8		1600868	0					
ANR	1601379	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1600868	1		|			
ANR	1601380	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601381	Callee	RT4		1600868	0					
ANR	1601382	Identifier	RT4		1600868	0					
ANR	1601383	ArgumentList	reg		1600868	1					
ANR	1601384	Argument	reg		1600868	0					
ANR	1601385	Identifier	reg		1600868	0					
ANR	1601386	InclusiveOrExpression	RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1600868	1		|			
ANR	1601387	CallExpression	RN4 ( TMP_REG3 )		1600868	0					
ANR	1601388	Callee	RN4		1600868	0					
ANR	1601389	Identifier	RN4		1600868	0					
ANR	1601390	ArgumentList	TMP_REG3		1600868	1					
ANR	1601391	Argument	TMP_REG3		1600868	0					
ANR	1601392	Identifier	TMP_REG3		1600868	0					
ANR	1601393	AdditiveExpression	compiler -> cache_argw - argw		1600868	1		-			
ANR	1601394	PtrMemberAccess	compiler -> cache_argw		1600868	0					
ANR	1601395	Identifier	compiler		1600868	0					
ANR	1601396	Identifier	cache_argw		1600868	1					
ANR	1601397	Identifier	argw		1600868	1					
ANR	1601398	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED )"		1600868	3					
ANR	1601399	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED"	1069:6:34060:34134	1600868	0	True				
ANR	1601400	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED"		1600868	0		!=			
ANR	1601401	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff )"		1600868	0					
ANR	1601402	Callee	emit_set_delta		1600868	0					
ANR	1601403	Identifier	emit_set_delta		1600868	0					
ANR	1601404	ArgumentList	compiler		1600868	1					
ANR	1601405	Argument	compiler		1600868	0					
ANR	1601406	Identifier	compiler		1600868	0					
ANR	1601407	Argument	TMP_REG3		1600868	1					
ANR	1601408	Identifier	TMP_REG3		1600868	0					
ANR	1601409	Argument	TMP_REG3		1600868	2					
ANR	1601410	Identifier	TMP_REG3		1600868	0					
ANR	1601411	Argument	diff		1600868	3					
ANR	1601412	Identifier	diff		1600868	0					
ANR	1601413	Identifier	SLJIT_ERR_UNSUPPORTED		1600868	1					
ANR	1601414	CompoundStatement		66:83:2109:2109	1600868	1					
ANR	1601415	ExpressionStatement	FAIL_IF ( compiler -> error )	1070:3:34142:34166	1600868	0	True				
ANR	1601416	CallExpression	FAIL_IF ( compiler -> error )		1600868	0					
ANR	1601417	Callee	FAIL_IF		1600868	0					
ANR	1601418	Identifier	FAIL_IF		1600868	0					
ANR	1601419	ArgumentList	compiler -> error		1600868	1					
ANR	1601420	Argument	compiler -> error		1600868	0					
ANR	1601421	PtrMemberAccess	compiler -> error		1600868	0					
ANR	1601422	Identifier	compiler		1600868	0					
ANR	1601423	Identifier	error		1600868	1					
ANR	1601424	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 ) ;"	1071:3:34171:34262	1600868	1	True				
ANR	1601425	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 )"		1600868	0					
ANR	1601426	Callee	push_inst32		1600868	0					
ANR	1601427	Identifier	push_inst32		1600868	0					
ANR	1601428	ArgumentList	compiler		1600868	1					
ANR	1601429	Argument	compiler		1600868	0					
ANR	1601430	Identifier	compiler		1600868	0					
ANR	1601431	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	1					
ANR	1601432	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	0		|			
ANR	1601433	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601434	Identifier	sljit_mem32		1600868	0					
ANR	1601435	Identifier	flags		1600868	1					
ANR	1601436	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	1		|			
ANR	1601437	Identifier	MEM_IMM12		1600868	0					
ANR	1601438	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	1		|			
ANR	1601439	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601440	Callee	RT4		1600868	0					
ANR	1601441	Identifier	RT4		1600868	0					
ANR	1601442	ArgumentList	reg		1600868	1					
ANR	1601443	Argument	reg		1600868	0					
ANR	1601444	Identifier	reg		1600868	0					
ANR	1601445	InclusiveOrExpression	RN4 ( TMP_REG3 ) | 0		1600868	1		|			
ANR	1601446	CallExpression	RN4 ( TMP_REG3 )		1600868	0					
ANR	1601447	Callee	RN4		1600868	0					
ANR	1601448	Identifier	RN4		1600868	0					
ANR	1601449	ArgumentList	TMP_REG3		1600868	1					
ANR	1601450	Argument	TMP_REG3		1600868	0					
ANR	1601451	Identifier	TMP_REG3		1600868	0					
ANR	1601452	PrimaryExpression	0		1600868	1					
ANR	1601453	ExpressionStatement	next_arg = ( arg & REG_MASK ) && ( arg == next_arg ) && ( argw != next_argw )	1075:1:34273:34344	1600868	9	True				
ANR	1601454	AssignmentExpression	next_arg = ( arg & REG_MASK ) && ( arg == next_arg ) && ( argw != next_argw )		1600868	0		=			
ANR	1601455	Identifier	next_arg		1600868	0					
ANR	1601456	AndExpression	( arg & REG_MASK ) && ( arg == next_arg ) && ( argw != next_argw )		1600868	1		&&			
ANR	1601457	BitAndExpression	arg & REG_MASK		1600868	0		&			
ANR	1601458	Identifier	arg		1600868	0					
ANR	1601459	Identifier	REG_MASK		1600868	1					
ANR	1601460	AndExpression	( arg == next_arg ) && ( argw != next_argw )		1600868	1		&&			
ANR	1601461	EqualityExpression	arg == next_arg		1600868	0		==			
ANR	1601462	Identifier	arg		1600868	0					
ANR	1601463	Identifier	next_arg		1600868	1					
ANR	1601464	EqualityExpression	argw != next_argw		1600868	1		!=			
ANR	1601465	Identifier	argw		1600868	0					
ANR	1601466	Identifier	next_argw		1600868	1					
ANR	1601467	ExpressionStatement	arg &= 0xf	1076:1:34347:34357	1600868	10	True				
ANR	1601468	AssignmentExpression	arg &= 0xf		1600868	0		&=			
ANR	1601469	Identifier	arg		1600868	0					
ANR	1601470	PrimaryExpression	0xf		1600868	1					
ANR	1601471	IfStatement	if ( arg && compiler -> cache_arg == SLJIT_MEM )		1600868	11					
ANR	1601472	Condition	arg && compiler -> cache_arg == SLJIT_MEM	1077:5:34364:34402	1600868	0	True				
ANR	1601473	AndExpression	arg && compiler -> cache_arg == SLJIT_MEM		1600868	0		&&			
ANR	1601474	Identifier	arg		1600868	0					
ANR	1601475	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1600868	1		==			
ANR	1601476	PtrMemberAccess	compiler -> cache_arg		1600868	0					
ANR	1601477	Identifier	compiler		1600868	0					
ANR	1601478	Identifier	cache_arg		1600868	1					
ANR	1601479	Identifier	SLJIT_MEM		1600868	1					
ANR	1601480	CompoundStatement		74:46:2377:2377	1600868	1					
ANR	1601481	IfStatement	if ( compiler -> cache_argw == argw )		1600868	0					
ANR	1601482	Condition	compiler -> cache_argw == argw	1078:6:34413:34440	1600868	0	True				
ANR	1601483	EqualityExpression	compiler -> cache_argw == argw		1600868	0		==			
ANR	1601484	PtrMemberAccess	compiler -> cache_argw		1600868	0					
ANR	1601485	Identifier	compiler		1600868	0					
ANR	1601486	Identifier	cache_argw		1600868	1					
ANR	1601487	Identifier	argw		1600868	1					
ANR	1601488	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) ) ;"	1079:3:34446:34532	1600868	1	True				
ANR	1601489	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) )"		1600868	0					
ANR	1601490	Callee	push_inst32		1600868	0					
ANR	1601491	Identifier	push_inst32		1600868	0					
ANR	1601492	ArgumentList	compiler		1600868	1					
ANR	1601493	Argument	compiler		1600868	0					
ANR	1601494	Identifier	compiler		1600868	0					
ANR	1601495	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1					
ANR	1601496	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	0		|			
ANR	1601497	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601498	Identifier	sljit_mem32		1600868	0					
ANR	1601499	Identifier	flags		1600868	1					
ANR	1601500	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1		|			
ANR	1601501	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601502	Callee	RT4		1600868	0					
ANR	1601503	Identifier	RT4		1600868	0					
ANR	1601504	ArgumentList	reg		1600868	1					
ANR	1601505	Argument	reg		1600868	0					
ANR	1601506	Identifier	reg		1600868	0					
ANR	1601507	InclusiveOrExpression	RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1		|			
ANR	1601508	CallExpression	RN4 ( arg )		1600868	0					
ANR	1601509	Callee	RN4		1600868	0					
ANR	1601510	Identifier	RN4		1600868	0					
ANR	1601511	ArgumentList	arg		1600868	1					
ANR	1601512	Argument	arg		1600868	0					
ANR	1601513	Identifier	arg		1600868	0					
ANR	1601514	CallExpression	RM4 ( TMP_REG3 )		1600868	1					
ANR	1601515	Callee	RM4		1600868	0					
ANR	1601516	Identifier	RM4		1600868	0					
ANR	1601517	ArgumentList	TMP_REG3		1600868	1					
ANR	1601518	Argument	TMP_REG3		1600868	0					
ANR	1601519	Identifier	TMP_REG3		1600868	0					
ANR	1601520	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED )"		1600868	1					
ANR	1601521	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"	1080:6:34540:34637	1600868	0	True				
ANR	1601522	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"		1600868	0		!=			
ANR	1601523	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw )"		1600868	0					
ANR	1601524	Callee	emit_set_delta		1600868	0					
ANR	1601525	Identifier	emit_set_delta		1600868	0					
ANR	1601526	ArgumentList	compiler		1600868	1					
ANR	1601527	Argument	compiler		1600868	0					
ANR	1601528	Identifier	compiler		1600868	0					
ANR	1601529	Argument	TMP_REG3		1600868	1					
ANR	1601530	Identifier	TMP_REG3		1600868	0					
ANR	1601531	Argument	TMP_REG3		1600868	2					
ANR	1601532	Identifier	TMP_REG3		1600868	0					
ANR	1601533	Argument	argw - compiler -> cache_argw		1600868	3					
ANR	1601534	AdditiveExpression	argw - compiler -> cache_argw		1600868	0		-			
ANR	1601535	Identifier	argw		1600868	0					
ANR	1601536	PtrMemberAccess	compiler -> cache_argw		1600868	1					
ANR	1601537	Identifier	compiler		1600868	0					
ANR	1601538	Identifier	cache_argw		1600868	1					
ANR	1601539	Identifier	SLJIT_ERR_UNSUPPORTED		1600868	1					
ANR	1601540	CompoundStatement		77:106:2612:2612	1600868	1					
ANR	1601541	ExpressionStatement	FAIL_IF ( compiler -> error )	1081:3:34645:34669	1600868	0	True				
ANR	1601542	CallExpression	FAIL_IF ( compiler -> error )		1600868	0					
ANR	1601543	Callee	FAIL_IF		1600868	0					
ANR	1601544	Identifier	FAIL_IF		1600868	0					
ANR	1601545	ArgumentList	compiler -> error		1600868	1					
ANR	1601546	Argument	compiler -> error		1600868	0					
ANR	1601547	PtrMemberAccess	compiler -> error		1600868	0					
ANR	1601548	Identifier	compiler		1600868	0					
ANR	1601549	Identifier	error		1600868	1					
ANR	1601550	ExpressionStatement	compiler -> cache_argw = argw	1082:3:34674:34701	1600868	1	True				
ANR	1601551	AssignmentExpression	compiler -> cache_argw = argw		1600868	0		=			
ANR	1601552	PtrMemberAccess	compiler -> cache_argw		1600868	0					
ANR	1601553	Identifier	compiler		1600868	0					
ANR	1601554	Identifier	cache_argw		1600868	1					
ANR	1601555	Identifier	argw		1600868	1					
ANR	1601556	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) ) ;"	1083:3:34706:34792	1600868	2	True				
ANR	1601557	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) )"		1600868	0					
ANR	1601558	Callee	push_inst32		1600868	0					
ANR	1601559	Identifier	push_inst32		1600868	0					
ANR	1601560	ArgumentList	compiler		1600868	1					
ANR	1601561	Argument	compiler		1600868	0					
ANR	1601562	Identifier	compiler		1600868	0					
ANR	1601563	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1					
ANR	1601564	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	0		|			
ANR	1601565	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601566	Identifier	sljit_mem32		1600868	0					
ANR	1601567	Identifier	flags		1600868	1					
ANR	1601568	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1		|			
ANR	1601569	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601570	Callee	RT4		1600868	0					
ANR	1601571	Identifier	RT4		1600868	0					
ANR	1601572	ArgumentList	reg		1600868	1					
ANR	1601573	Argument	reg		1600868	0					
ANR	1601574	Identifier	reg		1600868	0					
ANR	1601575	InclusiveOrExpression	RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1		|			
ANR	1601576	CallExpression	RN4 ( arg )		1600868	0					
ANR	1601577	Callee	RN4		1600868	0					
ANR	1601578	Identifier	RN4		1600868	0					
ANR	1601579	ArgumentList	arg		1600868	1					
ANR	1601580	Argument	arg		1600868	0					
ANR	1601581	Identifier	arg		1600868	0					
ANR	1601582	CallExpression	RM4 ( TMP_REG3 )		1600868	1					
ANR	1601583	Callee	RM4		1600868	0					
ANR	1601584	Identifier	RM4		1600868	0					
ANR	1601585	ArgumentList	TMP_REG3		1600868	1					
ANR	1601586	Argument	TMP_REG3		1600868	0					
ANR	1601587	Identifier	TMP_REG3		1600868	0					
ANR	1601588	ExpressionStatement	compiler -> cache_argw = argw	1087:1:34803:34830	1600868	12	True				
ANR	1601589	AssignmentExpression	compiler -> cache_argw = argw		1600868	0		=			
ANR	1601590	PtrMemberAccess	compiler -> cache_argw		1600868	0					
ANR	1601591	Identifier	compiler		1600868	0					
ANR	1601592	Identifier	cache_argw		1600868	1					
ANR	1601593	Identifier	argw		1600868	1					
ANR	1601594	IfStatement	"if ( next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED )"		1600868	13					
ANR	1601595	Condition	"next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"	1088:5:34837:34918	1600868	0	True				
ANR	1601596	AndExpression	"next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"		1600868	0		&&			
ANR	1601597	Identifier	next_arg		1600868	0					
ANR	1601598	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"		1600868	1		!=			
ANR	1601599	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , arg , argw )"		1600868	0					
ANR	1601600	Callee	emit_set_delta		1600868	0					
ANR	1601601	Identifier	emit_set_delta		1600868	0					
ANR	1601602	ArgumentList	compiler		1600868	1					
ANR	1601603	Argument	compiler		1600868	0					
ANR	1601604	Identifier	compiler		1600868	0					
ANR	1601605	Argument	TMP_REG3		1600868	1					
ANR	1601606	Identifier	TMP_REG3		1600868	0					
ANR	1601607	Argument	arg		1600868	2					
ANR	1601608	Identifier	arg		1600868	0					
ANR	1601609	Argument	argw		1600868	3					
ANR	1601610	Identifier	argw		1600868	0					
ANR	1601611	Identifier	SLJIT_ERR_UNSUPPORTED		1600868	1					
ANR	1601612	CompoundStatement		85:89:2893:2893	1600868	1					
ANR	1601613	ExpressionStatement	FAIL_IF ( compiler -> error )	1089:2:34925:34949	1600868	0	True				
ANR	1601614	CallExpression	FAIL_IF ( compiler -> error )		1600868	0					
ANR	1601615	Callee	FAIL_IF		1600868	0					
ANR	1601616	Identifier	FAIL_IF		1600868	0					
ANR	1601617	ArgumentList	compiler -> error		1600868	1					
ANR	1601618	Argument	compiler -> error		1600868	0					
ANR	1601619	PtrMemberAccess	compiler -> error		1600868	0					
ANR	1601620	Identifier	compiler		1600868	0					
ANR	1601621	Identifier	error		1600868	1					
ANR	1601622	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1090:2:34953:34990	1600868	1	True				
ANR	1601623	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1600868	0		=			
ANR	1601624	PtrMemberAccess	compiler -> cache_arg		1600868	0					
ANR	1601625	Identifier	compiler		1600868	0					
ANR	1601626	Identifier	cache_arg		1600868	1					
ANR	1601627	InclusiveOrExpression	SLJIT_MEM | arg		1600868	1		|			
ANR	1601628	Identifier	SLJIT_MEM		1600868	0					
ANR	1601629	Identifier	arg		1600868	1					
ANR	1601630	ExpressionStatement	arg = 0	1091:2:34994:35001	1600868	2	True				
ANR	1601631	AssignmentExpression	arg = 0		1600868	0		=			
ANR	1601632	Identifier	arg		1600868	0					
ANR	1601633	PrimaryExpression	0		1600868	1					
ANR	1601634	ElseStatement	else		1600868	0					
ANR	1601635	CompoundStatement		90:6:2984:2984	1600868	0					
ANR	1601636	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1094:2:35016:35065	1600868	0	True				
ANR	1601637	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1600868	0					
ANR	1601638	Callee	FAIL_IF		1600868	0					
ANR	1601639	Identifier	FAIL_IF		1600868	0					
ANR	1601640	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1600868	1					
ANR	1601641	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1600868	0					
ANR	1601642	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1600868	0					
ANR	1601643	Callee	load_immediate		1600868	0					
ANR	1601644	Identifier	load_immediate		1600868	0					
ANR	1601645	ArgumentList	compiler		1600868	1					
ANR	1601646	Argument	compiler		1600868	0					
ANR	1601647	Identifier	compiler		1600868	0					
ANR	1601648	Argument	TMP_REG3		1600868	1					
ANR	1601649	Identifier	TMP_REG3		1600868	0					
ANR	1601650	Argument	argw		1600868	2					
ANR	1601651	Identifier	argw		1600868	0					
ANR	1601652	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1095:2:35069:35100	1600868	1	True				
ANR	1601653	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1600868	0		=			
ANR	1601654	PtrMemberAccess	compiler -> cache_arg		1600868	0					
ANR	1601655	Identifier	compiler		1600868	0					
ANR	1601656	Identifier	cache_arg		1600868	1					
ANR	1601657	Identifier	SLJIT_MEM		1600868	1					
ANR	1601658	ExpressionStatement	diff = argw - next_argw	1097:2:35105:35128	1600868	2	True				
ANR	1601659	AssignmentExpression	diff = argw - next_argw		1600868	0		=			
ANR	1601660	Identifier	diff		1600868	0					
ANR	1601661	AdditiveExpression	argw - next_argw		1600868	1		-			
ANR	1601662	Identifier	argw		1600868	0					
ANR	1601663	Identifier	next_argw		1600868	1					
ANR	1601664	IfStatement	if ( next_arg && diff <= 0xfff && diff >= - 0xfff )		1600868	3					
ANR	1601665	Condition	next_arg && diff <= 0xfff && diff >= - 0xfff	1098:6:35136:35178	1600868	0	True				
ANR	1601666	AndExpression	next_arg && diff <= 0xfff && diff >= - 0xfff		1600868	0		&&			
ANR	1601667	Identifier	next_arg		1600868	0					
ANR	1601668	AndExpression	diff <= 0xfff && diff >= - 0xfff		1600868	1		&&			
ANR	1601669	RelationalExpression	diff <= 0xfff		1600868	0		<=			
ANR	1601670	Identifier	diff		1600868	0					
ANR	1601671	PrimaryExpression	0xfff		1600868	1					
ANR	1601672	RelationalExpression	diff >= - 0xfff		1600868	1		>=			
ANR	1601673	Identifier	diff		1600868	0					
ANR	1601674	UnaryOperationExpression	- 0xfff		1600868	1					
ANR	1601675	UnaryOperator	-		1600868	0					
ANR	1601676	PrimaryExpression	0xfff		1600868	1					
ANR	1601677	CompoundStatement		95:51:3153:3153	1600868	1					
ANR	1601678	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) ) )"	1099:3:35186:35249	1600868	0	True				
ANR	1601679	CallExpression	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) ) )"		1600868	0					
ANR	1601680	Callee	FAIL_IF		1600868	0					
ANR	1601681	Identifier	FAIL_IF		1600868	0					
ANR	1601682	ArgumentList	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) )"		1600868	1					
ANR	1601683	Argument	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) )"		1600868	0					
ANR	1601684	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) )"		1600868	0					
ANR	1601685	Callee	push_inst16		1600868	0					
ANR	1601686	Identifier	push_inst16		1600868	0					
ANR	1601687	ArgumentList	compiler		1600868	1					
ANR	1601688	Argument	compiler		1600868	0					
ANR	1601689	Identifier	compiler		1600868	0					
ANR	1601690	Argument	"ADD | SET_REGS44 ( TMP_REG3 , arg )"		1600868	1					
ANR	1601691	InclusiveOrExpression	"ADD | SET_REGS44 ( TMP_REG3 , arg )"		1600868	0		|			
ANR	1601692	Identifier	ADD		1600868	0					
ANR	1601693	CallExpression	"SET_REGS44 ( TMP_REG3 , arg )"		1600868	1					
ANR	1601694	Callee	SET_REGS44		1600868	0					
ANR	1601695	Identifier	SET_REGS44		1600868	0					
ANR	1601696	ArgumentList	TMP_REG3		1600868	1					
ANR	1601697	Argument	TMP_REG3		1600868	0					
ANR	1601698	Identifier	TMP_REG3		1600868	0					
ANR	1601699	Argument	arg		1600868	1					
ANR	1601700	Identifier	arg		1600868	0					
ANR	1601701	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1100:3:35254:35291	1600868	1	True				
ANR	1601702	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1600868	0		=			
ANR	1601703	PtrMemberAccess	compiler -> cache_arg		1600868	0					
ANR	1601704	Identifier	compiler		1600868	0					
ANR	1601705	Identifier	cache_arg		1600868	1					
ANR	1601706	InclusiveOrExpression	SLJIT_MEM | arg		1600868	1		|			
ANR	1601707	Identifier	SLJIT_MEM		1600868	0					
ANR	1601708	Identifier	arg		1600868	1					
ANR	1601709	ExpressionStatement	arg = 0	1101:3:35296:35303	1600868	2	True				
ANR	1601710	AssignmentExpression	arg = 0		1600868	0		=			
ANR	1601711	Identifier	arg		1600868	0					
ANR	1601712	PrimaryExpression	0		1600868	1					
ANR	1601713	IfStatement	if ( arg )		1600868	14					
ANR	1601714	Condition	arg	1105:5:35318:35320	1600868	0	True				
ANR	1601715	Identifier	arg		1600868	0					
ANR	1601716	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) ) ;"	1106:2:35325:35411	1600868	1	True				
ANR	1601717	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) )"		1600868	0					
ANR	1601718	Callee	push_inst32		1600868	0					
ANR	1601719	Identifier	push_inst32		1600868	0					
ANR	1601720	ArgumentList	compiler		1600868	1					
ANR	1601721	Argument	compiler		1600868	0					
ANR	1601722	Identifier	compiler		1600868	0					
ANR	1601723	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1					
ANR	1601724	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	0		|			
ANR	1601725	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601726	Identifier	sljit_mem32		1600868	0					
ANR	1601727	Identifier	flags		1600868	1					
ANR	1601728	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1		|			
ANR	1601729	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601730	Callee	RT4		1600868	0					
ANR	1601731	Identifier	RT4		1600868	0					
ANR	1601732	ArgumentList	reg		1600868	1					
ANR	1601733	Argument	reg		1600868	0					
ANR	1601734	Identifier	reg		1600868	0					
ANR	1601735	InclusiveOrExpression	RN4 ( arg ) | RM4 ( TMP_REG3 )		1600868	1		|			
ANR	1601736	CallExpression	RN4 ( arg )		1600868	0					
ANR	1601737	Callee	RN4		1600868	0					
ANR	1601738	Identifier	RN4		1600868	0					
ANR	1601739	ArgumentList	arg		1600868	1					
ANR	1601740	Argument	arg		1600868	0					
ANR	1601741	Identifier	arg		1600868	0					
ANR	1601742	CallExpression	RM4 ( TMP_REG3 )		1600868	1					
ANR	1601743	Callee	RM4		1600868	0					
ANR	1601744	Identifier	RM4		1600868	0					
ANR	1601745	ArgumentList	TMP_REG3		1600868	1					
ANR	1601746	Argument	TMP_REG3		1600868	0					
ANR	1601747	Identifier	TMP_REG3		1600868	0					
ANR	1601748	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 ) ;"	1107:1:35414:35505	1600868	15	True				
ANR	1601749	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 )"		1600868	0					
ANR	1601750	Callee	push_inst32		1600868	0					
ANR	1601751	Identifier	push_inst32		1600868	0					
ANR	1601752	ArgumentList	compiler		1600868	1					
ANR	1601753	Argument	compiler		1600868	0					
ANR	1601754	Identifier	compiler		1600868	0					
ANR	1601755	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	1					
ANR	1601756	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	0		|			
ANR	1601757	ArrayIndexing	sljit_mem32 [ flags ]		1600868	0					
ANR	1601758	Identifier	sljit_mem32		1600868	0					
ANR	1601759	Identifier	flags		1600868	1					
ANR	1601760	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	1		|			
ANR	1601761	Identifier	MEM_IMM12		1600868	0					
ANR	1601762	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1600868	1		|			
ANR	1601763	CallExpression	RT4 ( reg )		1600868	0					
ANR	1601764	Callee	RT4		1600868	0					
ANR	1601765	Identifier	RT4		1600868	0					
ANR	1601766	ArgumentList	reg		1600868	1					
ANR	1601767	Argument	reg		1600868	0					
ANR	1601768	Identifier	reg		1600868	0					
ANR	1601769	InclusiveOrExpression	RN4 ( TMP_REG3 ) | 0		1600868	1		|			
ANR	1601770	CallExpression	RN4 ( TMP_REG3 )		1600868	0					
ANR	1601771	Callee	RN4		1600868	0					
ANR	1601772	Identifier	RN4		1600868	0					
ANR	1601773	ArgumentList	TMP_REG3		1600868	1					
ANR	1601774	Argument	TMP_REG3		1600868	0					
ANR	1601775	Identifier	TMP_REG3		1600868	0					
ANR	1601776	PrimaryExpression	0		1600868	1					
ANR	1601777	ReturnType	static sljit_si		1600868	1					
ANR	1601778	Identifier	getput_arg		1600868	2					
ANR	1601779	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1600868	3					
ANR	1601780	Parameter	struct sljit_compiler * compiler	1002:27:31895:31925	1600868	0	True				
ANR	1601781	ParameterType	struct sljit_compiler *		1600868	0					
ANR	1601782	Identifier	compiler		1600868	1					
ANR	1601783	Parameter	sljit_si flags	1002:60:31928:31941	1600868	1	True				
ANR	1601784	ParameterType	sljit_si		1600868	0					
ANR	1601785	Identifier	flags		1600868	1					
ANR	1601786	Parameter	sljit_si reg	1002:76:31944:31955	1600868	2	True				
ANR	1601787	ParameterType	sljit_si		1600868	0					
ANR	1601788	Identifier	reg		1600868	1					
ANR	1601789	Parameter	sljit_si arg	1003:1:31959:31970	1600868	3	True				
ANR	1601790	ParameterType	sljit_si		1600868	0					
ANR	1601791	Identifier	arg		1600868	1					
ANR	1601792	Parameter	sljit_sw argw	1003:15:31973:31985	1600868	4	True				
ANR	1601793	ParameterType	sljit_sw		1600868	0					
ANR	1601794	Identifier	argw		1600868	1					
ANR	1601795	Parameter	sljit_si next_arg	1003:30:31988:32004	1600868	5	True				
ANR	1601796	ParameterType	sljit_si		1600868	0					
ANR	1601797	Identifier	next_arg		1600868	1					
ANR	1601798	Parameter	sljit_sw next_argw	1003:49:32007:32024	1600868	6	True				
ANR	1601799	ParameterType	sljit_sw		1600868	0					
ANR	1601800	Identifier	next_argw		1600868	1					
ANR	1601801	CFGEntryNode	ENTRY		1600868		True				
ANR	1601802	CFGExitNode	EXIT		1600868		True				
ANR	1601803	Symbol	TMP_REG3		1600868						
ANR	1601804	Symbol	ADD		1600868						
ANR	1601805	Symbol	~0xff		1600868						
ANR	1601806	Symbol	SLJIT_MEM		1600868						
ANR	1601807	Symbol	push_inst16		1600868						
ANR	1601808	Symbol	* compiler		1600868						
ANR	1601809	Symbol	emit_set_delta		1600868						
ANR	1601810	Symbol	reg		1600868						
ANR	1601811	Symbol	sljit_mem32		1600868						
ANR	1601812	Symbol	* sljit_mem32		1600868						
ANR	1601813	Symbol	ADDWI		1600868						
ANR	1601814	Symbol	* flags		1600868						
ANR	1601815	Symbol	IMM12		1600868						
ANR	1601816	Symbol	~UPDATE		1600868						
ANR	1601817	Symbol	compiler -> cache_arg		1600868						
ANR	1601818	Symbol	OFFS_REG_MASK		1600868						
ANR	1601819	Symbol	next_argw		1600868						
ANR	1601820	Symbol	diff		1600868						
ANR	1601821	Symbol	ADD_W		1600868						
ANR	1601822	Symbol	other_r		1600868						
ANR	1601823	Symbol	RT4		1600868						
ANR	1601824	Symbol	OFFS_REG		1600868						
ANR	1601825	Symbol	SLJIT_UNLIKELY		1600868						
ANR	1601826	Symbol	RD3		1600868						
ANR	1601827	Symbol	compiler -> cache_argw		1600868						
ANR	1601828	Symbol	RD4		1600868						
ANR	1601829	Symbol	flags		1600868						
ANR	1601830	Symbol	MEM_IMM12		1600868						
ANR	1601831	Symbol	argw		1600868						
ANR	1601832	Symbol	SET_REGS44		1600868						
ANR	1601833	Symbol	load_immediate		1600868						
ANR	1601834	Symbol	arg		1600868						
ANR	1601835	Symbol	RM4		1600868						
ANR	1601836	Symbol	RM3		1600868						
ANR	1601837	Symbol	UPDATE		1600868						
ANR	1601838	Symbol	* sljit_mem16		1600868						
ANR	1601839	Symbol	compiler		1600868						
ANR	1601840	Symbol	push_inst32		1600868						
ANR	1601841	Symbol	tmp_r		1600868						
ANR	1601842	Symbol	sljit_mem16		1600868						
ANR	1601843	Symbol	next_arg		1600868						
ANR	1601844	Symbol	REG_MASK		1600868						
ANR	1601845	Symbol	IS_3_LO_REGS		1600868						
ANR	1601846	Symbol	MEM_IMM8		1600868						
ANR	1601847	Symbol	RN3		1600868						
ANR	1601848	Symbol	STORE		1600868						
ANR	1601849	Symbol	RN4		1600868						
ANR	1601850	Symbol	compiler -> error		1600868						
ANR	1601851	Symbol	~0xfff		1600868						
ANR	1601852	Symbol	SLJIT_ERR_UNSUPPORTED		1600868						
ANR	1601853	Function	emit_op_mem	1110:0:35510:35838							
ANR	1601854	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1601853	0					
ANR	1601855	CompoundStatement		1111:0:35643:35838	1601853	0					
ANR	1601856	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg , argw ) )"		1601853	0					
ANR	1601857	Condition	"getput_arg_fast ( compiler , flags , reg , arg , argw )"	1112:5:35650:35697	1601853	0	True				
ANR	1601858	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg , argw )"		1601853	0					
ANR	1601859	Callee	getput_arg_fast		1601853	0					
ANR	1601860	Identifier	getput_arg_fast		1601853	0					
ANR	1601861	ArgumentList	compiler		1601853	1					
ANR	1601862	Argument	compiler		1601853	0					
ANR	1601863	Identifier	compiler		1601853	0					
ANR	1601864	Argument	flags		1601853	1					
ANR	1601865	Identifier	flags		1601853	0					
ANR	1601866	Argument	reg		1601853	2					
ANR	1601867	Identifier	reg		1601853	0					
ANR	1601868	Argument	arg		1601853	3					
ANR	1601869	Identifier	arg		1601853	0					
ANR	1601870	Argument	argw		1601853	4					
ANR	1601871	Identifier	argw		1601853	0					
ANR	1601872	ReturnStatement	return compiler -> error ;	1113:2:35702:35724	1601853	1	True				
ANR	1601873	PtrMemberAccess	compiler -> error		1601853	0					
ANR	1601874	Identifier	compiler		1601853	0					
ANR	1601875	Identifier	error		1601853	1					
ANR	1601876	ExpressionStatement	compiler -> cache_arg = 0	1114:1:35727:35750	1601853	1	True				
ANR	1601877	AssignmentExpression	compiler -> cache_arg = 0		1601853	0		=			
ANR	1601878	PtrMemberAccess	compiler -> cache_arg		1601853	0					
ANR	1601879	Identifier	compiler		1601853	0					
ANR	1601880	Identifier	cache_arg		1601853	1					
ANR	1601881	PrimaryExpression	0		1601853	1					
ANR	1601882	ExpressionStatement	compiler -> cache_argw = 0	1115:1:35753:35777	1601853	2	True				
ANR	1601883	AssignmentExpression	compiler -> cache_argw = 0		1601853	0		=			
ANR	1601884	PtrMemberAccess	compiler -> cache_argw		1601853	0					
ANR	1601885	Identifier	compiler		1601853	0					
ANR	1601886	Identifier	cache_argw		1601853	1					
ANR	1601887	PrimaryExpression	0		1601853	1					
ANR	1601888	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 ) ;"	1116:1:35780:35836	1601853	3	True				
ANR	1601889	CallExpression	"getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 )"		1601853	0					
ANR	1601890	Callee	getput_arg		1601853	0					
ANR	1601891	Identifier	getput_arg		1601853	0					
ANR	1601892	ArgumentList	compiler		1601853	1					
ANR	1601893	Argument	compiler		1601853	0					
ANR	1601894	Identifier	compiler		1601853	0					
ANR	1601895	Argument	flags		1601853	1					
ANR	1601896	Identifier	flags		1601853	0					
ANR	1601897	Argument	reg		1601853	2					
ANR	1601898	Identifier	reg		1601853	0					
ANR	1601899	Argument	arg		1601853	3					
ANR	1601900	Identifier	arg		1601853	0					
ANR	1601901	Argument	argw		1601853	4					
ANR	1601902	Identifier	argw		1601853	0					
ANR	1601903	Argument	0		1601853	5					
ANR	1601904	PrimaryExpression	0		1601853	0					
ANR	1601905	Argument	0		1601853	6					
ANR	1601906	PrimaryExpression	0		1601853	0					
ANR	1601907	ReturnType	static SLJIT_INLINE sljit_si		1601853	1					
ANR	1601908	Identifier	emit_op_mem		1601853	2					
ANR	1601909	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1601853	3					
ANR	1601910	Parameter	struct sljit_compiler * compiler	1110:41:35551:35581	1601853	0	True				
ANR	1601911	ParameterType	struct sljit_compiler *		1601853	0					
ANR	1601912	Identifier	compiler		1601853	1					
ANR	1601913	Parameter	sljit_si flags	1110:74:35584:35597	1601853	1	True				
ANR	1601914	ParameterType	sljit_si		1601853	0					
ANR	1601915	Identifier	flags		1601853	1					
ANR	1601916	Parameter	sljit_si reg	1110:90:35600:35611	1601853	2	True				
ANR	1601917	ParameterType	sljit_si		1601853	0					
ANR	1601918	Identifier	reg		1601853	1					
ANR	1601919	Parameter	sljit_si arg	1110:104:35614:35625	1601853	3	True				
ANR	1601920	ParameterType	sljit_si		1601853	0					
ANR	1601921	Identifier	arg		1601853	1					
ANR	1601922	Parameter	sljit_sw argw	1110:118:35628:35640	1601853	4	True				
ANR	1601923	ParameterType	sljit_sw		1601853	0					
ANR	1601924	Identifier	argw		1601853	1					
ANR	1601925	CFGEntryNode	ENTRY		1601853		True				
ANR	1601926	CFGExitNode	EXIT		1601853		True				
ANR	1601927	Symbol	compiler -> cache_argw		1601853						
ANR	1601928	Symbol	getput_arg		1601853						
ANR	1601929	Symbol	reg		1601853						
ANR	1601930	Symbol	compiler -> cache_arg		1601853						
ANR	1601931	Symbol	arg		1601853						
ANR	1601932	Symbol	flags		1601853						
ANR	1601933	Symbol	* compiler		1601853						
ANR	1601934	Symbol	compiler		1601853						
ANR	1601935	Symbol	argw		1601853						
ANR	1601936	Symbol	getput_arg_fast		1601853						
ANR	1601937	Symbol	compiler -> error		1601853						
ANR	1601938	Function	emit_op_mem2	1119:0:35841:36161							
ANR	1601939	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1601938	0					
ANR	1601940	CompoundStatement		1120:0:36008:36161	1601938	0					
ANR	1601941	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1601938	0					
ANR	1601942	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1121:5:36015:36064	1601938	0	True				
ANR	1601943	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1601938	0					
ANR	1601944	Callee	getput_arg_fast		1601938	0					
ANR	1601945	Identifier	getput_arg_fast		1601938	0					
ANR	1601946	ArgumentList	compiler		1601938	1					
ANR	1601947	Argument	compiler		1601938	0					
ANR	1601948	Identifier	compiler		1601938	0					
ANR	1601949	Argument	flags		1601938	1					
ANR	1601950	Identifier	flags		1601938	0					
ANR	1601951	Argument	reg		1601938	2					
ANR	1601952	Identifier	reg		1601938	0					
ANR	1601953	Argument	arg1		1601938	3					
ANR	1601954	Identifier	arg1		1601938	0					
ANR	1601955	Argument	arg1w		1601938	4					
ANR	1601956	Identifier	arg1w		1601938	0					
ANR	1601957	ReturnStatement	return compiler -> error ;	1122:2:36069:36091	1601938	1	True				
ANR	1601958	PtrMemberAccess	compiler -> error		1601938	0					
ANR	1601959	Identifier	compiler		1601938	0					
ANR	1601960	Identifier	error		1601938	1					
ANR	1601961	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1123:1:36094:36159	1601938	1	True				
ANR	1601962	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1601938	0					
ANR	1601963	Callee	getput_arg		1601938	0					
ANR	1601964	Identifier	getput_arg		1601938	0					
ANR	1601965	ArgumentList	compiler		1601938	1					
ANR	1601966	Argument	compiler		1601938	0					
ANR	1601967	Identifier	compiler		1601938	0					
ANR	1601968	Argument	flags		1601938	1					
ANR	1601969	Identifier	flags		1601938	0					
ANR	1601970	Argument	reg		1601938	2					
ANR	1601971	Identifier	reg		1601938	0					
ANR	1601972	Argument	arg1		1601938	3					
ANR	1601973	Identifier	arg1		1601938	0					
ANR	1601974	Argument	arg1w		1601938	4					
ANR	1601975	Identifier	arg1w		1601938	0					
ANR	1601976	Argument	arg2		1601938	5					
ANR	1601977	Identifier	arg2		1601938	0					
ANR	1601978	Argument	arg2w		1601938	6					
ANR	1601979	Identifier	arg2w		1601938	0					
ANR	1601980	ReturnType	static SLJIT_INLINE sljit_si		1601938	1					
ANR	1601981	Identifier	emit_op_mem2		1601938	2					
ANR	1601982	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1601938	3					
ANR	1601983	Parameter	struct sljit_compiler * compiler	1119:42:35883:35913	1601938	0	True				
ANR	1601984	ParameterType	struct sljit_compiler *		1601938	0					
ANR	1601985	Identifier	compiler		1601938	1					
ANR	1601986	Parameter	sljit_si flags	1119:75:35916:35929	1601938	1	True				
ANR	1601987	ParameterType	sljit_si		1601938	0					
ANR	1601988	Identifier	flags		1601938	1					
ANR	1601989	Parameter	sljit_si reg	1119:91:35932:35943	1601938	2	True				
ANR	1601990	ParameterType	sljit_si		1601938	0					
ANR	1601991	Identifier	reg		1601938	1					
ANR	1601992	Parameter	sljit_si arg1	1119:105:35946:35958	1601938	3	True				
ANR	1601993	ParameterType	sljit_si		1601938	0					
ANR	1601994	Identifier	arg1		1601938	1					
ANR	1601995	Parameter	sljit_sw arg1w	1119:120:35961:35974	1601938	4	True				
ANR	1601996	ParameterType	sljit_sw		1601938	0					
ANR	1601997	Identifier	arg1w		1601938	1					
ANR	1601998	Parameter	sljit_si arg2	1119:136:35977:35989	1601938	5	True				
ANR	1601999	ParameterType	sljit_si		1601938	0					
ANR	1602000	Identifier	arg2		1601938	1					
ANR	1602001	Parameter	sljit_sw arg2w	1119:151:35992:36005	1601938	6	True				
ANR	1602002	ParameterType	sljit_sw		1601938	0					
ANR	1602003	Identifier	arg2w		1601938	1					
ANR	1602004	CFGEntryNode	ENTRY		1601938		True				
ANR	1602005	CFGExitNode	EXIT		1601938		True				
ANR	1602006	Symbol	arg1w		1601938						
ANR	1602007	Symbol	arg2		1601938						
ANR	1602008	Symbol	getput_arg		1601938						
ANR	1602009	Symbol	reg		1601938						
ANR	1602010	Symbol	arg1		1601938						
ANR	1602011	Symbol	arg2w		1601938						
ANR	1602012	Symbol	flags		1601938						
ANR	1602013	Symbol	* compiler		1601938						
ANR	1602014	Symbol	compiler		1601938						
ANR	1602015	Symbol	getput_arg_fast		1601938						
ANR	1602016	Symbol	compiler -> error		1601938						
ANR	1602017	Function	sljit_emit_enter	1130:0:36393:37968							
ANR	1602018	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1602017	0					
ANR	1602019	CompoundStatement		1133:0:36609:37968	1602017	0					
ANR	1602020	IdentifierDeclStatement	"sljit_si size , i , tmp ;"	1134:1:36612:36633	1602017	0	True				
ANR	1602021	IdentifierDecl	size		1602017	0					
ANR	1602022	IdentifierDeclType	sljit_si		1602017	0					
ANR	1602023	Identifier	size		1602017	1					
ANR	1602024	IdentifierDecl	i		1602017	1					
ANR	1602025	IdentifierDeclType	sljit_si		1602017	0					
ANR	1602026	Identifier	i		1602017	1					
ANR	1602027	IdentifierDecl	tmp		1602017	2					
ANR	1602028	IdentifierDeclType	sljit_si		1602017	0					
ANR	1602029	Identifier	tmp		1602017	1					
ANR	1602030	IdentifierDeclStatement	sljit_ins push ;	1135:1:36636:36650	1602017	1	True				
ANR	1602031	IdentifierDecl	push		1602017	0					
ANR	1602032	IdentifierDeclType	sljit_ins		1602017	0					
ANR	1602033	Identifier	push		1602017	1					
ANR	1602034	ExpressionStatement	CHECK_ERROR ( )	1137:1:36654:36667	1602017	2	True				
ANR	1602035	CallExpression	CHECK_ERROR ( )		1602017	0					
ANR	1602036	Callee	CHECK_ERROR		1602017	0					
ANR	1602037	Identifier	CHECK_ERROR		1602017	0					
ANR	1602038	ArgumentList			1602017	1					
ANR	1602039	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1138:1:36670:36776	1602017	3	True				
ANR	1602040	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1602017	0					
ANR	1602041	Callee	CHECK		1602017	0					
ANR	1602042	Identifier	CHECK		1602017	0					
ANR	1602043	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602017	1					
ANR	1602044	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602017	0					
ANR	1602045	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602017	0					
ANR	1602046	Callee	check_sljit_emit_enter		1602017	0					
ANR	1602047	Identifier	check_sljit_emit_enter		1602017	0					
ANR	1602048	ArgumentList	compiler		1602017	1					
ANR	1602049	Argument	compiler		1602017	0					
ANR	1602050	Identifier	compiler		1602017	0					
ANR	1602051	Argument	options		1602017	1					
ANR	1602052	Identifier	options		1602017	0					
ANR	1602053	Argument	args		1602017	2					
ANR	1602054	Identifier	args		1602017	0					
ANR	1602055	Argument	scratches		1602017	3					
ANR	1602056	Identifier	scratches		1602017	0					
ANR	1602057	Argument	saveds		1602017	4					
ANR	1602058	Identifier	saveds		1602017	0					
ANR	1602059	Argument	fscratches		1602017	5					
ANR	1602060	Identifier	fscratches		1602017	0					
ANR	1602061	Argument	fsaveds		1602017	6					
ANR	1602062	Identifier	fsaveds		1602017	0					
ANR	1602063	Argument	local_size		1602017	7					
ANR	1602064	Identifier	local_size		1602017	0					
ANR	1602065	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1139:1:36779:36870	1602017	4	True				
ANR	1602066	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602017	0					
ANR	1602067	Callee	set_emit_enter		1602017	0					
ANR	1602068	Identifier	set_emit_enter		1602017	0					
ANR	1602069	ArgumentList	compiler		1602017	1					
ANR	1602070	Argument	compiler		1602017	0					
ANR	1602071	Identifier	compiler		1602017	0					
ANR	1602072	Argument	options		1602017	1					
ANR	1602073	Identifier	options		1602017	0					
ANR	1602074	Argument	args		1602017	2					
ANR	1602075	Identifier	args		1602017	0					
ANR	1602076	Argument	scratches		1602017	3					
ANR	1602077	Identifier	scratches		1602017	0					
ANR	1602078	Argument	saveds		1602017	4					
ANR	1602079	Identifier	saveds		1602017	0					
ANR	1602080	Argument	fscratches		1602017	5					
ANR	1602081	Identifier	fscratches		1602017	0					
ANR	1602082	Argument	fsaveds		1602017	6					
ANR	1602083	Identifier	fsaveds		1602017	0					
ANR	1602084	Argument	local_size		1602017	7					
ANR	1602085	Identifier	local_size		1602017	0					
ANR	1602086	ExpressionStatement	push = ( 1 << 4 )	1141:1:36874:36889	1602017	5	True				
ANR	1602087	AssignmentExpression	push = ( 1 << 4 )		1602017	0		=			
ANR	1602088	Identifier	push		1602017	0					
ANR	1602089	ShiftExpression	1 << 4		1602017	1		<<			
ANR	1602090	PrimaryExpression	1		1602017	0					
ANR	1602091	PrimaryExpression	4		1602017	1					
ANR	1602092	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	1143:1:36893:36989	1602017	6	True				
ANR	1602093	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1602017	0		=			
ANR	1602094	Identifier	tmp		1602017	0					
ANR	1602095	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1602017	1					
ANR	1602096	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1602017	0					
ANR	1602097	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1602017	0		<			
ANR	1602098	Identifier	saveds		1602017	0					
ANR	1602099	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1602017	1					
ANR	1602100	AdditiveExpression	SLJIT_S0 + 1 - saveds		1602017	1		+			
ANR	1602101	Identifier	SLJIT_S0		1602017	0					
ANR	1602102	AdditiveExpression	1 - saveds		1602017	1		-			
ANR	1602103	PrimaryExpression	1		1602017	0					
ANR	1602104	Identifier	saveds		1602017	1					
ANR	1602105	Identifier	SLJIT_FIRST_SAVED_REG		1602017	2					
ANR	1602106	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1602017	7					
ANR	1602107	ForInit	i = SLJIT_S0 ;	1144:6:36997:37009	1602017	0	True				
ANR	1602108	AssignmentExpression	i = SLJIT_S0		1602017	0		=			
ANR	1602109	Identifier	i		1602017	0					
ANR	1602110	Identifier	SLJIT_S0		1602017	1					
ANR	1602111	Condition	i >= tmp	1144:20:37011:37018	1602017	1	True				
ANR	1602112	RelationalExpression	i >= tmp		1602017	0		>=			
ANR	1602113	Identifier	i		1602017	0					
ANR	1602114	Identifier	tmp		1602017	1					
ANR	1602115	PostIncDecOperationExpression	i --	1144:30:37021:37023	1602017	2	True				
ANR	1602116	Identifier	i		1602017	0					
ANR	1602117	IncDec	--		1602017	1					
ANR	1602118	ExpressionStatement	push |= 1 << reg_map [ i ]	1145:2:37028:37051	1602017	3	True				
ANR	1602119	AssignmentExpression	push |= 1 << reg_map [ i ]		1602017	0		|=			
ANR	1602120	Identifier	push		1602017	0					
ANR	1602121	ShiftExpression	1 << reg_map [ i ]		1602017	1		<<			
ANR	1602122	PrimaryExpression	1		1602017	0					
ANR	1602123	ArrayIndexing	reg_map [ i ]		1602017	1					
ANR	1602124	Identifier	reg_map		1602017	0					
ANR	1602125	Identifier	i		1602017	1					
ANR	1602126	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1602017	8					
ANR	1602127	ForInit	i = scratches ;	1147:6:37060:37073	1602017	0	True				
ANR	1602128	AssignmentExpression	i = scratches		1602017	0		=			
ANR	1602129	Identifier	i		1602017	0					
ANR	1602130	Identifier	scratches		1602017	1					
ANR	1602131	Condition	i >= SLJIT_FIRST_SAVED_REG	1147:21:37075:37100	1602017	1	True				
ANR	1602132	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1602017	0		>=			
ANR	1602133	Identifier	i		1602017	0					
ANR	1602134	Identifier	SLJIT_FIRST_SAVED_REG		1602017	1					
ANR	1602135	PostIncDecOperationExpression	i --	1147:49:37103:37105	1602017	2	True				
ANR	1602136	Identifier	i		1602017	0					
ANR	1602137	IncDec	--		1602017	1					
ANR	1602138	ExpressionStatement	push |= 1 << reg_map [ i ]	1148:2:37110:37133	1602017	3	True				
ANR	1602139	AssignmentExpression	push |= 1 << reg_map [ i ]		1602017	0		|=			
ANR	1602140	Identifier	push		1602017	0					
ANR	1602141	ShiftExpression	1 << reg_map [ i ]		1602017	1		<<			
ANR	1602142	PrimaryExpression	1		1602017	0					
ANR	1602143	ArrayIndexing	reg_map [ i ]		1602017	1					
ANR	1602144	Identifier	reg_map		1602017	0					
ANR	1602145	Identifier	i		1602017	1					
ANR	1602146	ExpressionStatement	"FAIL_IF ( ( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push ) )"	1150:1:37137:37264	1602017	9	True				
ANR	1602147	CallExpression	"FAIL_IF ( ( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push ) )"		1602017	0					
ANR	1602148	Callee	FAIL_IF		1602017	0					
ANR	1602149	Identifier	FAIL_IF		1602017	0					
ANR	1602150	ArgumentList	"( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1602017	1					
ANR	1602151	Argument	"( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1602017	0					
ANR	1602152	ConditionalExpression	"( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1602017	0					
ANR	1602153	Condition	push & 0xff00		1602017	0					
ANR	1602154	BitAndExpression	push & 0xff00		1602017	0		&			
ANR	1602155	Identifier	push		1602017	0					
ANR	1602156	PrimaryExpression	0xff00		1602017	1					
ANR	1602157	CallExpression	"push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push )"		1602017	1					
ANR	1602158	Callee	push_inst32		1602017	0					
ANR	1602159	Identifier	push_inst32		1602017	0					
ANR	1602160	ArgumentList	compiler		1602017	1					
ANR	1602161	Argument	compiler		1602017	0					
ANR	1602162	Identifier	compiler		1602017	0					
ANR	1602163	Argument	PUSH_W | ( 1 << 14 ) | push		1602017	1					
ANR	1602164	InclusiveOrExpression	PUSH_W | ( 1 << 14 ) | push		1602017	0		|			
ANR	1602165	Identifier	PUSH_W		1602017	0					
ANR	1602166	InclusiveOrExpression	( 1 << 14 ) | push		1602017	1		|			
ANR	1602167	ShiftExpression	1 << 14		1602017	0		<<			
ANR	1602168	PrimaryExpression	1		1602017	0					
ANR	1602169	PrimaryExpression	14		1602017	1					
ANR	1602170	Identifier	push		1602017	1					
ANR	1602171	CallExpression	"push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1602017	2					
ANR	1602172	Callee	push_inst16		1602017	0					
ANR	1602173	Identifier	push_inst16		1602017	0					
ANR	1602174	ArgumentList	compiler		1602017	1					
ANR	1602175	Argument	compiler		1602017	0					
ANR	1602176	Identifier	compiler		1602017	0					
ANR	1602177	Argument	PUSH | ( 1 << 8 ) | push		1602017	1					
ANR	1602178	InclusiveOrExpression	PUSH | ( 1 << 8 ) | push		1602017	0		|			
ANR	1602179	Identifier	PUSH		1602017	0					
ANR	1602180	InclusiveOrExpression	( 1 << 8 ) | push		1602017	1		|			
ANR	1602181	ShiftExpression	1 << 8		1602017	0		<<			
ANR	1602182	PrimaryExpression	1		1602017	0					
ANR	1602183	PrimaryExpression	8		1602017	1					
ANR	1602184	Identifier	push		1602017	1					
ANR	1602185	ExpressionStatement	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"	1155:1:37318:37371	1602017	10	True				
ANR	1602186	AssignmentExpression	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1602017	0		=			
ANR	1602187	Identifier	size		1602017	0					
ANR	1602188	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1602017	1					
ANR	1602189	Callee	GET_SAVED_REGISTERS_SIZE		1602017	0					
ANR	1602190	Identifier	GET_SAVED_REGISTERS_SIZE		1602017	0					
ANR	1602191	ArgumentList	scratches		1602017	1					
ANR	1602192	Argument	scratches		1602017	0					
ANR	1602193	Identifier	scratches		1602017	0					
ANR	1602194	Argument	saveds		1602017	1					
ANR	1602195	Identifier	saveds		1602017	0					
ANR	1602196	Argument	2		1602017	2					
ANR	1602197	PrimaryExpression	2		1602017	0					
ANR	1602198	ExpressionStatement	local_size = ( ( size + local_size + 7 ) & ~7 ) - size	1156:1:37374:37424	1602017	11	True				
ANR	1602199	AssignmentExpression	local_size = ( ( size + local_size + 7 ) & ~7 ) - size		1602017	0		=			
ANR	1602200	Identifier	local_size		1602017	0					
ANR	1602201	AdditiveExpression	( ( size + local_size + 7 ) & ~7 ) - size		1602017	1		-			
ANR	1602202	BitAndExpression	( size + local_size + 7 ) & ~7		1602017	0		&			
ANR	1602203	AdditiveExpression	size + local_size + 7		1602017	0		+			
ANR	1602204	Identifier	size		1602017	0					
ANR	1602205	AdditiveExpression	local_size + 7		1602017	1		+			
ANR	1602206	Identifier	local_size		1602017	0					
ANR	1602207	PrimaryExpression	7		1602017	1					
ANR	1602208	Identifier	~7		1602017	1					
ANR	1602209	Identifier	size		1602017	1					
ANR	1602210	ExpressionStatement	compiler -> local_size = local_size	1157:1:37427:37460	1602017	12	True				
ANR	1602211	AssignmentExpression	compiler -> local_size = local_size		1602017	0		=			
ANR	1602212	PtrMemberAccess	compiler -> local_size		1602017	0					
ANR	1602213	Identifier	compiler		1602017	0					
ANR	1602214	Identifier	local_size		1602017	1					
ANR	1602215	Identifier	local_size		1602017	1					
ANR	1602216	IfStatement	if ( local_size > 0 )		1602017	13					
ANR	1602217	Condition	local_size > 0	1158:5:37467:37480	1602017	0	True				
ANR	1602218	RelationalExpression	local_size > 0		1602017	0		>			
ANR	1602219	Identifier	local_size		1602017	0					
ANR	1602220	PrimaryExpression	0		1602017	1					
ANR	1602221	CompoundStatement		26:21:873:873	1602017	1					
ANR	1602222	IfStatement	if ( local_size <= ( 127 << 2 ) )		1602017	0					
ANR	1602223	Condition	local_size <= ( 127 << 2 )	1159:6:37491:37514	1602017	0	True				
ANR	1602224	RelationalExpression	local_size <= ( 127 << 2 )		1602017	0		<=			
ANR	1602225	Identifier	local_size		1602017	0					
ANR	1602226	ShiftExpression	127 << 2		1602017	1		<<			
ANR	1602227	PrimaryExpression	127		1602017	0					
ANR	1602228	PrimaryExpression	2		1602017	1					
ANR	1602229	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) ) )"	1160:3:37520:37578	1602017	1	True				
ANR	1602230	CallExpression	"FAIL_IF ( push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) ) )"		1602017	0					
ANR	1602231	Callee	FAIL_IF		1602017	0					
ANR	1602232	Identifier	FAIL_IF		1602017	0					
ANR	1602233	ArgumentList	"push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) )"		1602017	1					
ANR	1602234	Argument	"push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) )"		1602017	0					
ANR	1602235	CallExpression	"push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) )"		1602017	0					
ANR	1602236	Callee	push_inst16		1602017	0					
ANR	1602237	Identifier	push_inst16		1602017	0					
ANR	1602238	ArgumentList	compiler		1602017	1					
ANR	1602239	Argument	compiler		1602017	0					
ANR	1602240	Identifier	compiler		1602017	0					
ANR	1602241	Argument	SUB_SP | ( local_size >> 2 )		1602017	1					
ANR	1602242	InclusiveOrExpression	SUB_SP | ( local_size >> 2 )		1602017	0		|			
ANR	1602243	Identifier	SUB_SP		1602017	0					
ANR	1602244	ShiftExpression	local_size >> 2		1602017	1		>>			
ANR	1602245	Identifier	local_size		1602017	0					
ANR	1602246	PrimaryExpression	2		1602017	1					
ANR	1602247	ElseStatement	else		1602017	0					
ANR	1602248	ExpressionStatement	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size ) )"	1162:3:37590:37674	1602017	0	True				
ANR	1602249	CallExpression	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size ) )"		1602017	0					
ANR	1602250	Callee	FAIL_IF		1602017	0					
ANR	1602251	Identifier	FAIL_IF		1602017	0					
ANR	1602252	ArgumentList	"emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size )"		1602017	1					
ANR	1602253	Argument	"emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size )"		1602017	0					
ANR	1602254	CallExpression	"emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size )"		1602017	0					
ANR	1602255	Callee	emit_op_imm		1602017	0					
ANR	1602256	Identifier	emit_op_imm		1602017	0					
ANR	1602257	ArgumentList	compiler		1602017	1					
ANR	1602258	Argument	compiler		1602017	0					
ANR	1602259	Identifier	compiler		1602017	0					
ANR	1602260	Argument	SLJIT_SUB | ARG2_IMM		1602017	1					
ANR	1602261	InclusiveOrExpression	SLJIT_SUB | ARG2_IMM		1602017	0		|			
ANR	1602262	Identifier	SLJIT_SUB		1602017	0					
ANR	1602263	Identifier	ARG2_IMM		1602017	1					
ANR	1602264	Argument	SLJIT_SP		1602017	2					
ANR	1602265	Identifier	SLJIT_SP		1602017	0					
ANR	1602266	Argument	SLJIT_SP		1602017	3					
ANR	1602267	Identifier	SLJIT_SP		1602017	0					
ANR	1602268	Argument	local_size		1602017	4					
ANR	1602269	Identifier	local_size		1602017	0					
ANR	1602270	IfStatement	if ( args >= 1 )		1602017	14					
ANR	1602271	Condition	args >= 1	1165:5:37685:37693	1602017	0	True				
ANR	1602272	RelationalExpression	args >= 1		1602017	0		>=			
ANR	1602273	Identifier	args		1602017	0					
ANR	1602274	PrimaryExpression	1		1602017	1					
ANR	1602275	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) ) )"	1166:2:37698:37766	1602017	1	True				
ANR	1602276	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) ) )"		1602017	0					
ANR	1602277	Callee	FAIL_IF		1602017	0					
ANR	1602278	Identifier	FAIL_IF		1602017	0					
ANR	1602279	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) )"		1602017	1					
ANR	1602280	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) )"		1602017	0					
ANR	1602281	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) )"		1602017	0					
ANR	1602282	Callee	push_inst16		1602017	0					
ANR	1602283	Identifier	push_inst16		1602017	0					
ANR	1602284	ArgumentList	compiler		1602017	1					
ANR	1602285	Argument	compiler		1602017	0					
ANR	1602286	Identifier	compiler		1602017	0					
ANR	1602287	Argument	"MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 )"		1602017	1					
ANR	1602288	InclusiveOrExpression	"MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 )"		1602017	0		|			
ANR	1602289	Identifier	MOV		1602017	0					
ANR	1602290	CallExpression	"SET_REGS44 ( SLJIT_S0 , SLJIT_R0 )"		1602017	1					
ANR	1602291	Callee	SET_REGS44		1602017	0					
ANR	1602292	Identifier	SET_REGS44		1602017	0					
ANR	1602293	ArgumentList	SLJIT_S0		1602017	1					
ANR	1602294	Argument	SLJIT_S0		1602017	0					
ANR	1602295	Identifier	SLJIT_S0		1602017	0					
ANR	1602296	Argument	SLJIT_R0		1602017	1					
ANR	1602297	Identifier	SLJIT_R0		1602017	0					
ANR	1602298	IfStatement	if ( args >= 2 )		1602017	15					
ANR	1602299	Condition	args >= 2	1167:5:37773:37781	1602017	0	True				
ANR	1602300	RelationalExpression	args >= 2		1602017	0		>=			
ANR	1602301	Identifier	args		1602017	0					
ANR	1602302	PrimaryExpression	2		1602017	1					
ANR	1602303	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) ) )"	1168:2:37786:37854	1602017	1	True				
ANR	1602304	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) ) )"		1602017	0					
ANR	1602305	Callee	FAIL_IF		1602017	0					
ANR	1602306	Identifier	FAIL_IF		1602017	0					
ANR	1602307	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) )"		1602017	1					
ANR	1602308	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) )"		1602017	0					
ANR	1602309	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) )"		1602017	0					
ANR	1602310	Callee	push_inst16		1602017	0					
ANR	1602311	Identifier	push_inst16		1602017	0					
ANR	1602312	ArgumentList	compiler		1602017	1					
ANR	1602313	Argument	compiler		1602017	0					
ANR	1602314	Identifier	compiler		1602017	0					
ANR	1602315	Argument	"MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 )"		1602017	1					
ANR	1602316	InclusiveOrExpression	"MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 )"		1602017	0		|			
ANR	1602317	Identifier	MOV		1602017	0					
ANR	1602318	CallExpression	"SET_REGS44 ( SLJIT_S1 , SLJIT_R1 )"		1602017	1					
ANR	1602319	Callee	SET_REGS44		1602017	0					
ANR	1602320	Identifier	SET_REGS44		1602017	0					
ANR	1602321	ArgumentList	SLJIT_S1		1602017	1					
ANR	1602322	Argument	SLJIT_S1		1602017	0					
ANR	1602323	Identifier	SLJIT_S1		1602017	0					
ANR	1602324	Argument	SLJIT_R1		1602017	1					
ANR	1602325	Identifier	SLJIT_R1		1602017	0					
ANR	1602326	IfStatement	if ( args >= 3 )		1602017	16					
ANR	1602327	Condition	args >= 3	1169:5:37861:37869	1602017	0	True				
ANR	1602328	RelationalExpression	args >= 3		1602017	0		>=			
ANR	1602329	Identifier	args		1602017	0					
ANR	1602330	PrimaryExpression	3		1602017	1					
ANR	1602331	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) ) )"	1170:2:37874:37942	1602017	1	True				
ANR	1602332	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) ) )"		1602017	0					
ANR	1602333	Callee	FAIL_IF		1602017	0					
ANR	1602334	Identifier	FAIL_IF		1602017	0					
ANR	1602335	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) )"		1602017	1					
ANR	1602336	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) )"		1602017	0					
ANR	1602337	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) )"		1602017	0					
ANR	1602338	Callee	push_inst16		1602017	0					
ANR	1602339	Identifier	push_inst16		1602017	0					
ANR	1602340	ArgumentList	compiler		1602017	1					
ANR	1602341	Argument	compiler		1602017	0					
ANR	1602342	Identifier	compiler		1602017	0					
ANR	1602343	Argument	"MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 )"		1602017	1					
ANR	1602344	InclusiveOrExpression	"MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 )"		1602017	0		|			
ANR	1602345	Identifier	MOV		1602017	0					
ANR	1602346	CallExpression	"SET_REGS44 ( SLJIT_S2 , SLJIT_R2 )"		1602017	1					
ANR	1602347	Callee	SET_REGS44		1602017	0					
ANR	1602348	Identifier	SET_REGS44		1602017	0					
ANR	1602349	ArgumentList	SLJIT_S2		1602017	1					
ANR	1602350	Argument	SLJIT_S2		1602017	0					
ANR	1602351	Identifier	SLJIT_S2		1602017	0					
ANR	1602352	Argument	SLJIT_R2		1602017	1					
ANR	1602353	Identifier	SLJIT_R2		1602017	0					
ANR	1602354	ReturnStatement	return SLJIT_SUCCESS ;	1172:1:37946:37966	1602017	17	True				
ANR	1602355	Identifier	SLJIT_SUCCESS		1602017	0					
ANR	1602356	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1602017	1					
ANR	1602357	Identifier	sljit_emit_enter		1602017	2					
ANR	1602358	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1602017	3					
ANR	1602359	Parameter	struct sljit_compiler * compiler	1130:51:36444:36474	1602017	0	True				
ANR	1602360	ParameterType	struct sljit_compiler *		1602017	0					
ANR	1602361	Identifier	compiler		1602017	1					
ANR	1602362	Parameter	sljit_si options	1131:1:36478:36493	1602017	1	True				
ANR	1602363	ParameterType	sljit_si		1602017	0					
ANR	1602364	Identifier	options		1602017	1					
ANR	1602365	Parameter	sljit_si args	1131:19:36496:36508	1602017	2	True				
ANR	1602366	ParameterType	sljit_si		1602017	0					
ANR	1602367	Identifier	args		1602017	1					
ANR	1602368	Parameter	sljit_si scratches	1131:34:36511:36528	1602017	3	True				
ANR	1602369	ParameterType	sljit_si		1602017	0					
ANR	1602370	Identifier	scratches		1602017	1					
ANR	1602371	Parameter	sljit_si saveds	1131:54:36531:36545	1602017	4	True				
ANR	1602372	ParameterType	sljit_si		1602017	0					
ANR	1602373	Identifier	saveds		1602017	1					
ANR	1602374	Parameter	sljit_si fscratches	1132:1:36549:36567	1602017	5	True				
ANR	1602375	ParameterType	sljit_si		1602017	0					
ANR	1602376	Identifier	fscratches		1602017	1					
ANR	1602377	Parameter	sljit_si fsaveds	1132:22:36570:36585	1602017	6	True				
ANR	1602378	ParameterType	sljit_si		1602017	0					
ANR	1602379	Identifier	fsaveds		1602017	1					
ANR	1602380	Parameter	sljit_si local_size	1132:40:36588:36606	1602017	7	True				
ANR	1602381	ParameterType	sljit_si		1602017	0					
ANR	1602382	Identifier	local_size		1602017	1					
ANR	1602383	CFGEntryNode	ENTRY		1602017		True				
ANR	1602384	CFGExitNode	EXIT		1602017		True				
ANR	1602385	Symbol	scratches		1602017						
ANR	1602386	Symbol	saveds		1602017						
ANR	1602387	Symbol	push_inst16		1602017						
ANR	1602388	Symbol	reg_map		1602017						
ANR	1602389	Symbol	check_sljit_emit_enter		1602017						
ANR	1602390	Symbol	* compiler		1602017						
ANR	1602391	Symbol	SLJIT_R1		1602017						
ANR	1602392	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1602017						
ANR	1602393	Symbol	SLJIT_R2		1602017						
ANR	1602394	Symbol	SLJIT_SP		1602017						
ANR	1602395	Symbol	SLJIT_R0		1602017						
ANR	1602396	Symbol	SET_REGS44		1602017						
ANR	1602397	Symbol	tmp		1602017						
ANR	1602398	Symbol	options		1602017						
ANR	1602399	Symbol	compiler		1602017						
ANR	1602400	Symbol	push_inst32		1602017						
ANR	1602401	Symbol	emit_op_imm		1602017						
ANR	1602402	Symbol	GET_SAVED_REGISTERS_SIZE		1602017						
ANR	1602403	Symbol	local_size		1602017						
ANR	1602404	Symbol	ARG2_IMM		1602017						
ANR	1602405	Symbol	i		1602017						
ANR	1602406	Symbol	SLJIT_SUB		1602017						
ANR	1602407	Symbol	PUSH_W		1602017						
ANR	1602408	Symbol	SLJIT_SUCCESS		1602017						
ANR	1602409	Symbol	* reg_map		1602017						
ANR	1602410	Symbol	SLJIT_S2		1602017						
ANR	1602411	Symbol	push		1602017						
ANR	1602412	Symbol	SLJIT_S0		1602017						
ANR	1602413	Symbol	SLJIT_S1		1602017						
ANR	1602414	Symbol	args		1602017						
ANR	1602415	Symbol	fscratches		1602017						
ANR	1602416	Symbol	* i		1602017						
ANR	1602417	Symbol	compiler -> local_size		1602017						
ANR	1602418	Symbol	SUB_SP		1602017						
ANR	1602419	Symbol	fsaveds		1602017						
ANR	1602420	Symbol	size		1602017						
ANR	1602421	Symbol	MOV		1602017						
ANR	1602422	Symbol	SLJIT_FIRST_SAVED_REG		1602017						
ANR	1602423	Symbol	~7		1602017						
ANR	1602424	Symbol	PUSH		1602017						
ANR	1602425	Function	sljit_set_context	1175:0:37971:38571							
ANR	1602426	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1602425	0					
ANR	1602427	CompoundStatement		1178:0:38188:38571	1602425	0					
ANR	1602428	IdentifierDeclStatement	sljit_si size ;	1179:1:38191:38204	1602425	0	True				
ANR	1602429	IdentifierDecl	size		1602425	0					
ANR	1602430	IdentifierDeclType	sljit_si		1602425	0					
ANR	1602431	Identifier	size		1602425	1					
ANR	1602432	ExpressionStatement	CHECK_ERROR ( )	1181:1:38208:38221	1602425	1	True				
ANR	1602433	CallExpression	CHECK_ERROR ( )		1602425	0					
ANR	1602434	Callee	CHECK_ERROR		1602425	0					
ANR	1602435	Identifier	CHECK_ERROR		1602425	0					
ANR	1602436	ArgumentList			1602425	1					
ANR	1602437	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1182:1:38224:38331	1602425	2	True				
ANR	1602438	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1602425	0					
ANR	1602439	Callee	CHECK		1602425	0					
ANR	1602440	Identifier	CHECK		1602425	0					
ANR	1602441	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602425	1					
ANR	1602442	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602425	0					
ANR	1602443	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602425	0					
ANR	1602444	Callee	check_sljit_set_context		1602425	0					
ANR	1602445	Identifier	check_sljit_set_context		1602425	0					
ANR	1602446	ArgumentList	compiler		1602425	1					
ANR	1602447	Argument	compiler		1602425	0					
ANR	1602448	Identifier	compiler		1602425	0					
ANR	1602449	Argument	options		1602425	1					
ANR	1602450	Identifier	options		1602425	0					
ANR	1602451	Argument	args		1602425	2					
ANR	1602452	Identifier	args		1602425	0					
ANR	1602453	Argument	scratches		1602425	3					
ANR	1602454	Identifier	scratches		1602425	0					
ANR	1602455	Argument	saveds		1602425	4					
ANR	1602456	Identifier	saveds		1602425	0					
ANR	1602457	Argument	fscratches		1602425	5					
ANR	1602458	Identifier	fscratches		1602425	0					
ANR	1602459	Argument	fsaveds		1602425	6					
ANR	1602460	Identifier	fsaveds		1602425	0					
ANR	1602461	Argument	local_size		1602425	7					
ANR	1602462	Identifier	local_size		1602425	0					
ANR	1602463	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1183:1:38334:38426	1602425	3	True				
ANR	1602464	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1602425	0					
ANR	1602465	Callee	set_set_context		1602425	0					
ANR	1602466	Identifier	set_set_context		1602425	0					
ANR	1602467	ArgumentList	compiler		1602425	1					
ANR	1602468	Argument	compiler		1602425	0					
ANR	1602469	Identifier	compiler		1602425	0					
ANR	1602470	Argument	options		1602425	1					
ANR	1602471	Identifier	options		1602425	0					
ANR	1602472	Argument	args		1602425	2					
ANR	1602473	Identifier	args		1602425	0					
ANR	1602474	Argument	scratches		1602425	3					
ANR	1602475	Identifier	scratches		1602425	0					
ANR	1602476	Argument	saveds		1602425	4					
ANR	1602477	Identifier	saveds		1602425	0					
ANR	1602478	Argument	fscratches		1602425	5					
ANR	1602479	Identifier	fscratches		1602425	0					
ANR	1602480	Argument	fsaveds		1602425	6					
ANR	1602481	Identifier	fsaveds		1602425	0					
ANR	1602482	Argument	local_size		1602425	7					
ANR	1602483	Identifier	local_size		1602425	0					
ANR	1602484	ExpressionStatement	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"	1185:1:38430:38483	1602425	4	True				
ANR	1602485	AssignmentExpression	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1602425	0		=			
ANR	1602486	Identifier	size		1602425	0					
ANR	1602487	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1602425	1					
ANR	1602488	Callee	GET_SAVED_REGISTERS_SIZE		1602425	0					
ANR	1602489	Identifier	GET_SAVED_REGISTERS_SIZE		1602425	0					
ANR	1602490	ArgumentList	scratches		1602425	1					
ANR	1602491	Argument	scratches		1602425	0					
ANR	1602492	Identifier	scratches		1602425	0					
ANR	1602493	Argument	saveds		1602425	1					
ANR	1602494	Identifier	saveds		1602425	0					
ANR	1602495	Argument	2		1602425	2					
ANR	1602496	PrimaryExpression	2		1602425	0					
ANR	1602497	ExpressionStatement	compiler -> local_size = ( ( size + local_size + 7 ) & ~7 ) - size	1186:1:38486:38546	1602425	5	True				
ANR	1602498	AssignmentExpression	compiler -> local_size = ( ( size + local_size + 7 ) & ~7 ) - size		1602425	0		=			
ANR	1602499	PtrMemberAccess	compiler -> local_size		1602425	0					
ANR	1602500	Identifier	compiler		1602425	0					
ANR	1602501	Identifier	local_size		1602425	1					
ANR	1602502	AdditiveExpression	( ( size + local_size + 7 ) & ~7 ) - size		1602425	1		-			
ANR	1602503	BitAndExpression	( size + local_size + 7 ) & ~7		1602425	0		&			
ANR	1602504	AdditiveExpression	size + local_size + 7		1602425	0		+			
ANR	1602505	Identifier	size		1602425	0					
ANR	1602506	AdditiveExpression	local_size + 7		1602425	1		+			
ANR	1602507	Identifier	local_size		1602425	0					
ANR	1602508	PrimaryExpression	7		1602425	1					
ANR	1602509	Identifier	~7		1602425	1					
ANR	1602510	Identifier	size		1602425	1					
ANR	1602511	ReturnStatement	return SLJIT_SUCCESS ;	1187:1:38549:38569	1602425	6	True				
ANR	1602512	Identifier	SLJIT_SUCCESS		1602425	0					
ANR	1602513	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1602425	1					
ANR	1602514	Identifier	sljit_set_context		1602425	2					
ANR	1602515	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1602425	3					
ANR	1602516	Parameter	struct sljit_compiler * compiler	1175:52:38023:38053	1602425	0	True				
ANR	1602517	ParameterType	struct sljit_compiler *		1602425	0					
ANR	1602518	Identifier	compiler		1602425	1					
ANR	1602519	Parameter	sljit_si options	1176:1:38057:38072	1602425	1	True				
ANR	1602520	ParameterType	sljit_si		1602425	0					
ANR	1602521	Identifier	options		1602425	1					
ANR	1602522	Parameter	sljit_si args	1176:19:38075:38087	1602425	2	True				
ANR	1602523	ParameterType	sljit_si		1602425	0					
ANR	1602524	Identifier	args		1602425	1					
ANR	1602525	Parameter	sljit_si scratches	1176:34:38090:38107	1602425	3	True				
ANR	1602526	ParameterType	sljit_si		1602425	0					
ANR	1602527	Identifier	scratches		1602425	1					
ANR	1602528	Parameter	sljit_si saveds	1176:54:38110:38124	1602425	4	True				
ANR	1602529	ParameterType	sljit_si		1602425	0					
ANR	1602530	Identifier	saveds		1602425	1					
ANR	1602531	Parameter	sljit_si fscratches	1177:1:38128:38146	1602425	5	True				
ANR	1602532	ParameterType	sljit_si		1602425	0					
ANR	1602533	Identifier	fscratches		1602425	1					
ANR	1602534	Parameter	sljit_si fsaveds	1177:22:38149:38164	1602425	6	True				
ANR	1602535	ParameterType	sljit_si		1602425	0					
ANR	1602536	Identifier	fsaveds		1602425	1					
ANR	1602537	Parameter	sljit_si local_size	1177:40:38167:38185	1602425	7	True				
ANR	1602538	ParameterType	sljit_si		1602425	0					
ANR	1602539	Identifier	local_size		1602425	1					
ANR	1602540	CFGEntryNode	ENTRY		1602425		True				
ANR	1602541	CFGExitNode	EXIT		1602425		True				
ANR	1602542	Symbol	GET_SAVED_REGISTERS_SIZE		1602425						
ANR	1602543	Symbol	local_size		1602425						
ANR	1602544	Symbol	scratches		1602425						
ANR	1602545	Symbol	saveds		1602425						
ANR	1602546	Symbol	check_sljit_set_context		1602425						
ANR	1602547	Symbol	SLJIT_SUCCESS		1602425						
ANR	1602548	Symbol	* compiler		1602425						
ANR	1602549	Symbol	args		1602425						
ANR	1602550	Symbol	fscratches		1602425						
ANR	1602551	Symbol	compiler -> local_size		1602425						
ANR	1602552	Symbol	fsaveds		1602425						
ANR	1602553	Symbol	size		1602425						
ANR	1602554	Symbol	options		1602425						
ANR	1602555	Symbol	~7		1602425						
ANR	1602556	Symbol	compiler		1602425						
ANR	1602557	Function	sljit_emit_return	1190:0:38574:39544							
ANR	1602558	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1602557	0					
ANR	1602559	CompoundStatement		1191:0:38701:39544	1602557	0					
ANR	1602560	IdentifierDeclStatement	"sljit_si i , tmp ;"	1192:1:38704:38719	1602557	0	True				
ANR	1602561	IdentifierDecl	i		1602557	0					
ANR	1602562	IdentifierDeclType	sljit_si		1602557	0					
ANR	1602563	Identifier	i		1602557	1					
ANR	1602564	IdentifierDecl	tmp		1602557	1					
ANR	1602565	IdentifierDeclType	sljit_si		1602557	0					
ANR	1602566	Identifier	tmp		1602557	1					
ANR	1602567	IdentifierDeclStatement	sljit_ins pop ;	1193:1:38722:38735	1602557	1	True				
ANR	1602568	IdentifierDecl	pop		1602557	0					
ANR	1602569	IdentifierDeclType	sljit_ins		1602557	0					
ANR	1602570	Identifier	pop		1602557	1					
ANR	1602571	ExpressionStatement	CHECK_ERROR ( )	1195:1:38739:38752	1602557	2	True				
ANR	1602572	CallExpression	CHECK_ERROR ( )		1602557	0					
ANR	1602573	Callee	CHECK_ERROR		1602557	0					
ANR	1602574	Identifier	CHECK_ERROR		1602557	0					
ANR	1602575	ArgumentList			1602557	1					
ANR	1602576	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	1196:1:38755:38810	1602557	3	True				
ANR	1602577	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1602557	0					
ANR	1602578	Callee	CHECK		1602557	0					
ANR	1602579	Identifier	CHECK		1602557	0					
ANR	1602580	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1602557	1					
ANR	1602581	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1602557	0					
ANR	1602582	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1602557	0					
ANR	1602583	Callee	check_sljit_emit_return		1602557	0					
ANR	1602584	Identifier	check_sljit_emit_return		1602557	0					
ANR	1602585	ArgumentList	compiler		1602557	1					
ANR	1602586	Argument	compiler		1602557	0					
ANR	1602587	Identifier	compiler		1602557	0					
ANR	1602588	Argument	op		1602557	1					
ANR	1602589	Identifier	op		1602557	0					
ANR	1602590	Argument	src		1602557	2					
ANR	1602591	Identifier	src		1602557	0					
ANR	1602592	Argument	srcw		1602557	3					
ANR	1602593	Identifier	srcw		1602557	0					
ANR	1602594	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	1198:1:38814:38870	1602557	4	True				
ANR	1602595	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1602557	0					
ANR	1602596	Callee	FAIL_IF		1602557	0					
ANR	1602597	Identifier	FAIL_IF		1602557	0					
ANR	1602598	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1602557	1					
ANR	1602599	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1602557	0					
ANR	1602600	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1602557	0					
ANR	1602601	Callee	emit_mov_before_return		1602557	0					
ANR	1602602	Identifier	emit_mov_before_return		1602557	0					
ANR	1602603	ArgumentList	compiler		1602557	1					
ANR	1602604	Argument	compiler		1602557	0					
ANR	1602605	Identifier	compiler		1602557	0					
ANR	1602606	Argument	op		1602557	1					
ANR	1602607	Identifier	op		1602557	0					
ANR	1602608	Argument	src		1602557	2					
ANR	1602609	Identifier	src		1602557	0					
ANR	1602610	Argument	srcw		1602557	3					
ANR	1602611	Identifier	srcw		1602557	0					
ANR	1602612	IfStatement	if ( compiler -> local_size > 0 )		1602557	5					
ANR	1602613	Condition	compiler -> local_size > 0	1200:5:38878:38901	1602557	0	True				
ANR	1602614	RelationalExpression	compiler -> local_size > 0		1602557	0		>			
ANR	1602615	PtrMemberAccess	compiler -> local_size		1602557	0					
ANR	1602616	Identifier	compiler		1602557	0					
ANR	1602617	Identifier	local_size		1602557	1					
ANR	1602618	PrimaryExpression	0		1602557	1					
ANR	1602619	CompoundStatement		10:31:202:202	1602557	1					
ANR	1602620	IfStatement	if ( compiler -> local_size <= ( 127 << 2 ) )		1602557	0					
ANR	1602621	Condition	compiler -> local_size <= ( 127 << 2 )	1201:6:38912:38945	1602557	0	True				
ANR	1602622	RelationalExpression	compiler -> local_size <= ( 127 << 2 )		1602557	0		<=			
ANR	1602623	PtrMemberAccess	compiler -> local_size		1602557	0					
ANR	1602624	Identifier	compiler		1602557	0					
ANR	1602625	Identifier	local_size		1602557	1					
ANR	1602626	ShiftExpression	127 << 2		1602557	1		<<			
ANR	1602627	PrimaryExpression	127		1602557	0					
ANR	1602628	PrimaryExpression	2		1602557	1					
ANR	1602629	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) ) )"	1202:3:38951:39019	1602557	1	True				
ANR	1602630	CallExpression	"FAIL_IF ( push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) ) )"		1602557	0					
ANR	1602631	Callee	FAIL_IF		1602557	0					
ANR	1602632	Identifier	FAIL_IF		1602557	0					
ANR	1602633	ArgumentList	"push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) )"		1602557	1					
ANR	1602634	Argument	"push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) )"		1602557	0					
ANR	1602635	CallExpression	"push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) )"		1602557	0					
ANR	1602636	Callee	push_inst16		1602557	0					
ANR	1602637	Identifier	push_inst16		1602557	0					
ANR	1602638	ArgumentList	compiler		1602557	1					
ANR	1602639	Argument	compiler		1602557	0					
ANR	1602640	Identifier	compiler		1602557	0					
ANR	1602641	Argument	ADD_SP | ( compiler -> local_size >> 2 )		1602557	1					
ANR	1602642	InclusiveOrExpression	ADD_SP | ( compiler -> local_size >> 2 )		1602557	0		|			
ANR	1602643	Identifier	ADD_SP		1602557	0					
ANR	1602644	ShiftExpression	compiler -> local_size >> 2		1602557	1		>>			
ANR	1602645	PtrMemberAccess	compiler -> local_size		1602557	0					
ANR	1602646	Identifier	compiler		1602557	0					
ANR	1602647	Identifier	local_size		1602557	1					
ANR	1602648	PrimaryExpression	2		1602557	1					
ANR	1602649	ElseStatement	else		1602557	0					
ANR	1602650	ExpressionStatement	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size ) )"	1204:3:39031:39125	1602557	0	True				
ANR	1602651	CallExpression	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size ) )"		1602557	0					
ANR	1602652	Callee	FAIL_IF		1602557	0					
ANR	1602653	Identifier	FAIL_IF		1602557	0					
ANR	1602654	ArgumentList	"emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size )"		1602557	1					
ANR	1602655	Argument	"emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size )"		1602557	0					
ANR	1602656	CallExpression	"emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size )"		1602557	0					
ANR	1602657	Callee	emit_op_imm		1602557	0					
ANR	1602658	Identifier	emit_op_imm		1602557	0					
ANR	1602659	ArgumentList	compiler		1602557	1					
ANR	1602660	Argument	compiler		1602557	0					
ANR	1602661	Identifier	compiler		1602557	0					
ANR	1602662	Argument	SLJIT_ADD | ARG2_IMM		1602557	1					
ANR	1602663	InclusiveOrExpression	SLJIT_ADD | ARG2_IMM		1602557	0		|			
ANR	1602664	Identifier	SLJIT_ADD		1602557	0					
ANR	1602665	Identifier	ARG2_IMM		1602557	1					
ANR	1602666	Argument	SLJIT_SP		1602557	2					
ANR	1602667	Identifier	SLJIT_SP		1602557	0					
ANR	1602668	Argument	SLJIT_SP		1602557	3					
ANR	1602669	Identifier	SLJIT_SP		1602557	0					
ANR	1602670	Argument	compiler -> local_size		1602557	4					
ANR	1602671	PtrMemberAccess	compiler -> local_size		1602557	0					
ANR	1602672	Identifier	compiler		1602557	0					
ANR	1602673	Identifier	local_size		1602557	1					
ANR	1602674	ExpressionStatement	pop = ( 1 << 4 )	1207:1:39132:39146	1602557	6	True				
ANR	1602675	AssignmentExpression	pop = ( 1 << 4 )		1602557	0		=			
ANR	1602676	Identifier	pop		1602557	0					
ANR	1602677	ShiftExpression	1 << 4		1602557	1		<<			
ANR	1602678	PrimaryExpression	1		1602557	0					
ANR	1602679	PrimaryExpression	4		1602557	1					
ANR	1602680	ExpressionStatement	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG	1209:1:39150:39266	1602557	7	True				
ANR	1602681	AssignmentExpression	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1602557	0		=			
ANR	1602682	Identifier	tmp		1602557	0					
ANR	1602683	ConditionalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1602557	1					
ANR	1602684	Condition	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1602557	0					
ANR	1602685	RelationalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1602557	0		<			
ANR	1602686	PtrMemberAccess	compiler -> saveds		1602557	0					
ANR	1602687	Identifier	compiler		1602557	0					
ANR	1602688	Identifier	saveds		1602557	1					
ANR	1602689	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1602557	1					
ANR	1602690	AdditiveExpression	SLJIT_S0 + 1 - compiler -> saveds		1602557	1		+			
ANR	1602691	Identifier	SLJIT_S0		1602557	0					
ANR	1602692	AdditiveExpression	1 - compiler -> saveds		1602557	1		-			
ANR	1602693	PrimaryExpression	1		1602557	0					
ANR	1602694	PtrMemberAccess	compiler -> saveds		1602557	1					
ANR	1602695	Identifier	compiler		1602557	0					
ANR	1602696	Identifier	saveds		1602557	1					
ANR	1602697	Identifier	SLJIT_FIRST_SAVED_REG		1602557	2					
ANR	1602698	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1602557	8					
ANR	1602699	ForInit	i = SLJIT_S0 ;	1210:6:39274:39286	1602557	0	True				
ANR	1602700	AssignmentExpression	i = SLJIT_S0		1602557	0		=			
ANR	1602701	Identifier	i		1602557	0					
ANR	1602702	Identifier	SLJIT_S0		1602557	1					
ANR	1602703	Condition	i >= tmp	1210:20:39288:39295	1602557	1	True				
ANR	1602704	RelationalExpression	i >= tmp		1602557	0		>=			
ANR	1602705	Identifier	i		1602557	0					
ANR	1602706	Identifier	tmp		1602557	1					
ANR	1602707	PostIncDecOperationExpression	i --	1210:30:39298:39300	1602557	2	True				
ANR	1602708	Identifier	i		1602557	0					
ANR	1602709	IncDec	--		1602557	1					
ANR	1602710	ExpressionStatement	pop |= 1 << reg_map [ i ]	1211:2:39305:39327	1602557	3	True				
ANR	1602711	AssignmentExpression	pop |= 1 << reg_map [ i ]		1602557	0		|=			
ANR	1602712	Identifier	pop		1602557	0					
ANR	1602713	ShiftExpression	1 << reg_map [ i ]		1602557	1		<<			
ANR	1602714	PrimaryExpression	1		1602557	0					
ANR	1602715	ArrayIndexing	reg_map [ i ]		1602557	1					
ANR	1602716	Identifier	reg_map		1602557	0					
ANR	1602717	Identifier	i		1602557	1					
ANR	1602718	ForStatement	for ( i = compiler -> scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1602557	9					
ANR	1602719	ForInit	i = compiler -> scratches ;	1213:6:39336:39359	1602557	0	True				
ANR	1602720	AssignmentExpression	i = compiler -> scratches		1602557	0		=			
ANR	1602721	Identifier	i		1602557	0					
ANR	1602722	PtrMemberAccess	compiler -> scratches		1602557	1					
ANR	1602723	Identifier	compiler		1602557	0					
ANR	1602724	Identifier	scratches		1602557	1					
ANR	1602725	Condition	i >= SLJIT_FIRST_SAVED_REG	1213:31:39361:39386	1602557	1	True				
ANR	1602726	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1602557	0		>=			
ANR	1602727	Identifier	i		1602557	0					
ANR	1602728	Identifier	SLJIT_FIRST_SAVED_REG		1602557	1					
ANR	1602729	PostIncDecOperationExpression	i --	1213:59:39389:39391	1602557	2	True				
ANR	1602730	Identifier	i		1602557	0					
ANR	1602731	IncDec	--		1602557	1					
ANR	1602732	ExpressionStatement	pop |= 1 << reg_map [ i ]	1214:2:39396:39418	1602557	3	True				
ANR	1602733	AssignmentExpression	pop |= 1 << reg_map [ i ]		1602557	0		|=			
ANR	1602734	Identifier	pop		1602557	0					
ANR	1602735	ShiftExpression	1 << reg_map [ i ]		1602557	1		<<			
ANR	1602736	PrimaryExpression	1		1602557	0					
ANR	1602737	ArrayIndexing	reg_map [ i ]		1602557	1					
ANR	1602738	Identifier	reg_map		1602557	0					
ANR	1602739	Identifier	i		1602557	1					
ANR	1602740	ReturnStatement	"return ( pop & 0xff00 ) ? push_inst32 ( compiler , POP_W | ( 1 << 15 ) | pop ) : push_inst16 ( compiler , POP | ( 1 << 8 ) | pop ) ;"	1216:1:39422:39542	1602557	10	True				
ANR	1602741	ConditionalExpression	"( pop & 0xff00 ) ? push_inst32 ( compiler , POP_W | ( 1 << 15 ) | pop ) : push_inst16 ( compiler , POP | ( 1 << 8 ) | pop )"		1602557	0					
ANR	1602742	Condition	pop & 0xff00		1602557	0					
ANR	1602743	BitAndExpression	pop & 0xff00		1602557	0		&			
ANR	1602744	Identifier	pop		1602557	0					
ANR	1602745	PrimaryExpression	0xff00		1602557	1					
ANR	1602746	CallExpression	"push_inst32 ( compiler , POP_W | ( 1 << 15 ) | pop )"		1602557	1					
ANR	1602747	Callee	push_inst32		1602557	0					
ANR	1602748	Identifier	push_inst32		1602557	0					
ANR	1602749	ArgumentList	compiler		1602557	1					
ANR	1602750	Argument	compiler		1602557	0					
ANR	1602751	Identifier	compiler		1602557	0					
ANR	1602752	Argument	POP_W | ( 1 << 15 ) | pop		1602557	1					
ANR	1602753	InclusiveOrExpression	POP_W | ( 1 << 15 ) | pop		1602557	0		|			
ANR	1602754	Identifier	POP_W		1602557	0					
ANR	1602755	InclusiveOrExpression	( 1 << 15 ) | pop		1602557	1		|			
ANR	1602756	ShiftExpression	1 << 15		1602557	0		<<			
ANR	1602757	PrimaryExpression	1		1602557	0					
ANR	1602758	PrimaryExpression	15		1602557	1					
ANR	1602759	Identifier	pop		1602557	1					
ANR	1602760	CallExpression	"push_inst16 ( compiler , POP | ( 1 << 8 ) | pop )"		1602557	2					
ANR	1602761	Callee	push_inst16		1602557	0					
ANR	1602762	Identifier	push_inst16		1602557	0					
ANR	1602763	ArgumentList	compiler		1602557	1					
ANR	1602764	Argument	compiler		1602557	0					
ANR	1602765	Identifier	compiler		1602557	0					
ANR	1602766	Argument	POP | ( 1 << 8 ) | pop		1602557	1					
ANR	1602767	InclusiveOrExpression	POP | ( 1 << 8 ) | pop		1602557	0		|			
ANR	1602768	Identifier	POP		1602557	0					
ANR	1602769	InclusiveOrExpression	( 1 << 8 ) | pop		1602557	1		|			
ANR	1602770	ShiftExpression	1 << 8		1602557	0		<<			
ANR	1602771	PrimaryExpression	1		1602557	0					
ANR	1602772	PrimaryExpression	8		1602557	1					
ANR	1602773	Identifier	pop		1602557	1					
ANR	1602774	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1602557	1					
ANR	1602775	Identifier	sljit_emit_return		1602557	2					
ANR	1602776	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1602557	3					
ANR	1602777	Parameter	struct sljit_compiler * compiler	1190:52:38626:38656	1602557	0	True				
ANR	1602778	ParameterType	struct sljit_compiler *		1602557	0					
ANR	1602779	Identifier	compiler		1602557	1					
ANR	1602780	Parameter	sljit_si op	1190:85:38659:38669	1602557	1	True				
ANR	1602781	ParameterType	sljit_si		1602557	0					
ANR	1602782	Identifier	op		1602557	1					
ANR	1602783	Parameter	sljit_si src	1190:98:38672:38683	1602557	2	True				
ANR	1602784	ParameterType	sljit_si		1602557	0					
ANR	1602785	Identifier	src		1602557	1					
ANR	1602786	Parameter	sljit_sw srcw	1190:112:38686:38698	1602557	3	True				
ANR	1602787	ParameterType	sljit_sw		1602557	0					
ANR	1602788	Identifier	srcw		1602557	1					
ANR	1602789	CFGEntryNode	ENTRY		1602557		True				
ANR	1602790	CFGExitNode	EXIT		1602557		True				
ANR	1602791	Symbol	compiler -> scratches		1602557						
ANR	1602792	Symbol	POP_W		1602557						
ANR	1602793	Symbol	push_inst16		1602557						
ANR	1602794	Symbol	reg_map		1602557						
ANR	1602795	Symbol	SLJIT_ADD		1602557						
ANR	1602796	Symbol	* compiler		1602557						
ANR	1602797	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1602557						
ANR	1602798	Symbol	SLJIT_SP		1602557						
ANR	1602799	Symbol	pop		1602557						
ANR	1602800	Symbol	ADD_SP		1602557						
ANR	1602801	Symbol	check_sljit_emit_return		1602557						
ANR	1602802	Symbol	tmp		1602557						
ANR	1602803	Symbol	compiler		1602557						
ANR	1602804	Symbol	emit_op_imm		1602557						
ANR	1602805	Symbol	push_inst32		1602557						
ANR	1602806	Symbol	op		1602557						
ANR	1602807	Symbol	src		1602557						
ANR	1602808	Symbol	srcw		1602557						
ANR	1602809	Symbol	ARG2_IMM		1602557						
ANR	1602810	Symbol	i		1602557						
ANR	1602811	Symbol	* reg_map		1602557						
ANR	1602812	Symbol	SLJIT_S0		1602557						
ANR	1602813	Symbol	POP		1602557						
ANR	1602814	Symbol	compiler -> local_size		1602557						
ANR	1602815	Symbol	compiler -> saveds		1602557						
ANR	1602816	Symbol	* i		1602557						
ANR	1602817	Symbol	SLJIT_FIRST_SAVED_REG		1602557						
ANR	1602818	Symbol	emit_mov_before_return		1602557						
ANR	1602819	DeclStmt									
ANR	1602820	Decl							extern int	"extern int ( int numerator , int denominator )"	__aeabi_idivmod
ANR	1602821	Function	sljit_emit_op0	1240:0:40075:41512							
ANR	1602822	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1602821	0					
ANR	1602823	CompoundStatement		1241:0:40170:41512	1602821	0					
ANR	1602824	ExpressionStatement	CHECK_ERROR ( )	1242:1:40173:40186	1602821	0	True				
ANR	1602825	CallExpression	CHECK_ERROR ( )		1602821	0					
ANR	1602826	Callee	CHECK_ERROR		1602821	0					
ANR	1602827	Identifier	CHECK_ERROR		1602821	0					
ANR	1602828	ArgumentList			1602821	1					
ANR	1602829	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	1243:1:40189:40230	1602821	1	True				
ANR	1602830	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1602821	0					
ANR	1602831	Callee	CHECK		1602821	0					
ANR	1602832	Identifier	CHECK		1602821	0					
ANR	1602833	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1602821	1					
ANR	1602834	Argument	"check_sljit_emit_op0 ( compiler , op )"		1602821	0					
ANR	1602835	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1602821	0					
ANR	1602836	Callee	check_sljit_emit_op0		1602821	0					
ANR	1602837	Identifier	check_sljit_emit_op0		1602821	0					
ANR	1602838	ArgumentList	compiler		1602821	1					
ANR	1602839	Argument	compiler		1602821	0					
ANR	1602840	Identifier	compiler		1602821	0					
ANR	1602841	Argument	op		1602821	1					
ANR	1602842	Identifier	op		1602821	0					
ANR	1602843	ExpressionStatement	op = GET_OPCODE ( op )	1245:1:40234:40253	1602821	2	True				
ANR	1602844	AssignmentExpression	op = GET_OPCODE ( op )		1602821	0		=			
ANR	1602845	Identifier	op		1602821	0					
ANR	1602846	CallExpression	GET_OPCODE ( op )		1602821	1					
ANR	1602847	Callee	GET_OPCODE		1602821	0					
ANR	1602848	Identifier	GET_OPCODE		1602821	0					
ANR	1602849	ArgumentList	op		1602821	1					
ANR	1602850	Argument	op		1602821	0					
ANR	1602851	Identifier	op		1602821	0					
ANR	1602852	SwitchStatement	switch ( op )		1602821	3					
ANR	1602853	Condition	op	1246:9:40264:40265	1602821	0	True				
ANR	1602854	Identifier	op		1602821	0					
ANR	1602855	CompoundStatement		6:13:97:97	1602821	1					
ANR	1602856	Label	case SLJIT_BREAKPOINT :	1247:1:40271:40292	1602821	0	True				
ANR	1602857	Identifier	SLJIT_BREAKPOINT		1602821	0					
ANR	1602858	ReturnStatement	"return push_inst16 ( compiler , BKPT ) ;"	1248:2:40296:40330	1602821	1	True				
ANR	1602859	CallExpression	"push_inst16 ( compiler , BKPT )"		1602821	0					
ANR	1602860	Callee	push_inst16		1602821	0					
ANR	1602861	Identifier	push_inst16		1602821	0					
ANR	1602862	ArgumentList	compiler		1602821	1					
ANR	1602863	Argument	compiler		1602821	0					
ANR	1602864	Identifier	compiler		1602821	0					
ANR	1602865	Argument	BKPT		1602821	1					
ANR	1602866	Identifier	BKPT		1602821	0					
ANR	1602867	Label	case SLJIT_NOP :	1249:1:40333:40347	1602821	2	True				
ANR	1602868	Identifier	SLJIT_NOP		1602821	0					
ANR	1602869	ReturnStatement	"return push_inst16 ( compiler , NOP ) ;"	1250:2:40351:40384	1602821	3	True				
ANR	1602870	CallExpression	"push_inst16 ( compiler , NOP )"		1602821	0					
ANR	1602871	Callee	push_inst16		1602821	0					
ANR	1602872	Identifier	push_inst16		1602821	0					
ANR	1602873	ArgumentList	compiler		1602821	1					
ANR	1602874	Argument	compiler		1602821	0					
ANR	1602875	Identifier	compiler		1602821	0					
ANR	1602876	Argument	NOP		1602821	1					
ANR	1602877	Identifier	NOP		1602821	0					
ANR	1602878	Label	case SLJIT_LUMUL :	1251:1:40387:40403	1602821	4	True				
ANR	1602879	Identifier	SLJIT_LUMUL		1602821	0					
ANR	1602880	Label	case SLJIT_LSMUL :	1252:1:40406:40422	1602821	5	True				
ANR	1602881	Identifier	SLJIT_LSMUL		1602821	0					
ANR	1602882	ReturnStatement	"return push_inst32 ( compiler , ( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ] ) ;"	1253:2:40426:40606	1602821	6	True				
ANR	1602883	CallExpression	"push_inst32 ( compiler , ( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ] )"		1602821	0					
ANR	1602884	Callee	push_inst32		1602821	0					
ANR	1602885	Identifier	push_inst32		1602821	0					
ANR	1602886	ArgumentList	compiler		1602821	1					
ANR	1602887	Argument	compiler		1602821	0					
ANR	1602888	Identifier	compiler		1602821	0					
ANR	1602889	Argument	( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1602821	1					
ANR	1602890	InclusiveOrExpression	( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1602821	0		|			
ANR	1602891	ConditionalExpression	op == SLJIT_LUMUL ? UMULL : SMULL		1602821	0					
ANR	1602892	Condition	op == SLJIT_LUMUL		1602821	0					
ANR	1602893	EqualityExpression	op == SLJIT_LUMUL		1602821	0		==			
ANR	1602894	Identifier	op		1602821	0					
ANR	1602895	Identifier	SLJIT_LUMUL		1602821	1					
ANR	1602896	Identifier	UMULL		1602821	1					
ANR	1602897	Identifier	SMULL		1602821	2					
ANR	1602898	InclusiveOrExpression	( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1602821	1		|			
ANR	1602899	ShiftExpression	reg_map [ SLJIT_R1 ] << 8		1602821	0		<<			
ANR	1602900	ArrayIndexing	reg_map [ SLJIT_R1 ]		1602821	0					
ANR	1602901	Identifier	reg_map		1602821	0					
ANR	1602902	Identifier	SLJIT_R1		1602821	1					
ANR	1602903	PrimaryExpression	8		1602821	1					
ANR	1602904	InclusiveOrExpression	( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1602821	1		|			
ANR	1602905	ShiftExpression	reg_map [ SLJIT_R0 ] << 12		1602821	0		<<			
ANR	1602906	ArrayIndexing	reg_map [ SLJIT_R0 ]		1602821	0					
ANR	1602907	Identifier	reg_map		1602821	0					
ANR	1602908	Identifier	SLJIT_R0		1602821	1					
ANR	1602909	PrimaryExpression	12		1602821	1					
ANR	1602910	InclusiveOrExpression	( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1602821	1		|			
ANR	1602911	ShiftExpression	reg_map [ SLJIT_R0 ] << 16		1602821	0		<<			
ANR	1602912	ArrayIndexing	reg_map [ SLJIT_R0 ]		1602821	0					
ANR	1602913	Identifier	reg_map		1602821	0					
ANR	1602914	Identifier	SLJIT_R0		1602821	1					
ANR	1602915	PrimaryExpression	16		1602821	1					
ANR	1602916	ArrayIndexing	reg_map [ SLJIT_R1 ]		1602821	1					
ANR	1602917	Identifier	reg_map		1602821	0					
ANR	1602918	Identifier	SLJIT_R1		1602821	1					
ANR	1602919	Label	case SLJIT_LUDIV :	1258:1:40609:40625	1602821	7	True				
ANR	1602920	Identifier	SLJIT_LUDIV		1602821	0					
ANR	1602921	Label	case SLJIT_LSDIV :	1259:1:40628:40644	1602821	8	True				
ANR	1602922	Identifier	SLJIT_LSDIV		1602821	0					
ANR	1602923	IfStatement	if ( compiler -> scratches >= 4 )		1602821	9					
ANR	1602924	Condition	compiler -> scratches >= 4	1260:6:40652:40675	1602821	0	True				
ANR	1602925	RelationalExpression	compiler -> scratches >= 4		1602821	0		>=			
ANR	1602926	PtrMemberAccess	compiler -> scratches		1602821	0					
ANR	1602927	Identifier	compiler		1602821	0					
ANR	1602928	Identifier	scratches		1602821	1					
ANR	1602929	PrimaryExpression	4		1602821	1					
ANR	1602930	CompoundStatement		20:32:507:507	1602821	1					
ANR	1602931	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , 0xf84d2d04 ) )"	1261:3:40683:40750	1602821	0	True				
ANR	1602932	CallExpression	"FAIL_IF ( push_inst32 ( compiler , 0xf84d2d04 ) )"		1602821	0					
ANR	1602933	Callee	FAIL_IF		1602821	0					
ANR	1602934	Identifier	FAIL_IF		1602821	0					
ANR	1602935	ArgumentList	"push_inst32 ( compiler , 0xf84d2d04 )"		1602821	1					
ANR	1602936	Argument	"push_inst32 ( compiler , 0xf84d2d04 )"		1602821	0					
ANR	1602937	CallExpression	"push_inst32 ( compiler , 0xf84d2d04 )"		1602821	0					
ANR	1602938	Callee	push_inst32		1602821	0					
ANR	1602939	Identifier	push_inst32		1602821	0					
ANR	1602940	ArgumentList	compiler		1602821	1					
ANR	1602941	Argument	compiler		1602821	0					
ANR	1602942	Identifier	compiler		1602821	0					
ANR	1602943	Argument	0xf84d2d04		1602821	1					
ANR	1602944	PrimaryExpression	0xf84d2d04		1602821	0					
ANR	1602945	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , 0xf84dcd04 ) )"	1262:3:40755:40822	1602821	1	True				
ANR	1602946	CallExpression	"FAIL_IF ( push_inst32 ( compiler , 0xf84dcd04 ) )"		1602821	0					
ANR	1602947	Callee	FAIL_IF		1602821	0					
ANR	1602948	Identifier	FAIL_IF		1602821	0					
ANR	1602949	ArgumentList	"push_inst32 ( compiler , 0xf84dcd04 )"		1602821	1					
ANR	1602950	Argument	"push_inst32 ( compiler , 0xf84dcd04 )"		1602821	0					
ANR	1602951	CallExpression	"push_inst32 ( compiler , 0xf84dcd04 )"		1602821	0					
ANR	1602952	Callee	push_inst32		1602821	0					
ANR	1602953	Identifier	push_inst32		1602821	0					
ANR	1602954	ArgumentList	compiler		1602821	1					
ANR	1602955	Argument	compiler		1602821	0					
ANR	1602956	Identifier	compiler		1602821	0					
ANR	1602957	Argument	0xf84dcd04		1602821	1					
ANR	1602958	PrimaryExpression	0xf84dcd04		1602821	0					
ANR	1602959	ElseStatement	else		1602821	0					
ANR	1602960	IfStatement	if ( compiler -> scratches >= 3 )		1602821	0					
ANR	1602961	Condition	compiler -> scratches >= 3	1263:13:40837:40860	1602821	0	True				
ANR	1602962	RelationalExpression	compiler -> scratches >= 3		1602821	0		>=			
ANR	1602963	PtrMemberAccess	compiler -> scratches		1602821	0					
ANR	1602964	Identifier	compiler		1602821	0					
ANR	1602965	Identifier	scratches		1602821	1					
ANR	1602966	PrimaryExpression	3		1602821	1					
ANR	1602967	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , 0xf84d2d08 ) )"	1264:3:40866:40933	1602821	1	True				
ANR	1602968	CallExpression	"FAIL_IF ( push_inst32 ( compiler , 0xf84d2d08 ) )"		1602821	0					
ANR	1602969	Callee	FAIL_IF		1602821	0					
ANR	1602970	Identifier	FAIL_IF		1602821	0					
ANR	1602971	ArgumentList	"push_inst32 ( compiler , 0xf84d2d08 )"		1602821	1					
ANR	1602972	Argument	"push_inst32 ( compiler , 0xf84d2d08 )"		1602821	0					
ANR	1602973	CallExpression	"push_inst32 ( compiler , 0xf84d2d08 )"		1602821	0					
ANR	1602974	Callee	push_inst32		1602821	0					
ANR	1602975	Identifier	push_inst32		1602821	0					
ANR	1602976	ArgumentList	compiler		1602821	1					
ANR	1602977	Argument	compiler		1602821	0					
ANR	1602978	Identifier	compiler		1602821	0					
ANR	1602979	Argument	0xf84d2d08		1602821	1					
ANR	1602980	PrimaryExpression	0xf84d2d08		1602821	0					
ANR	1602981	ExpressionStatement	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) ) )"	1266:2:40959:41121	1602821	10	True				
ANR	1602982	CallExpression	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) ) )"		1602821	0					
ANR	1602983	Callee	FAIL_IF		1602821	0					
ANR	1602984	Identifier	FAIL_IF		1602821	0					
ANR	1602985	ArgumentList	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1602821	1					
ANR	1602986	Argument	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1602821	0					
ANR	1602987	CallExpression	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1602821	0					
ANR	1602988	Callee	sljit_emit_ijump		1602821	0					
ANR	1602989	Identifier	sljit_emit_ijump		1602821	0					
ANR	1602990	ArgumentList	compiler		1602821	1					
ANR	1602991	Argument	compiler		1602821	0					
ANR	1602992	Identifier	compiler		1602821	0					
ANR	1602993	Argument	SLJIT_FAST_CALL		1602821	1					
ANR	1602994	Identifier	SLJIT_FAST_CALL		1602821	0					
ANR	1602995	Argument	SLJIT_IMM		1602821	2					
ANR	1602996	Identifier	SLJIT_IMM		1602821	0					
ANR	1602997	Argument	op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1602821	3					
ANR	1602998	ConditionalExpression	op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1602821	0					
ANR	1602999	Condition	op == SLJIT_LUDIV		1602821	0					
ANR	1603000	EqualityExpression	op == SLJIT_LUDIV		1602821	0		==			
ANR	1603001	Identifier	op		1602821	0					
ANR	1603002	Identifier	SLJIT_LUDIV		1602821	1					
ANR	1603003	CallExpression	SLJIT_FUNC_OFFSET ( __aeabi_uidivmod )		1602821	1					
ANR	1603004	Callee	SLJIT_FUNC_OFFSET		1602821	0					
ANR	1603005	Identifier	SLJIT_FUNC_OFFSET		1602821	0					
ANR	1603006	ArgumentList	__aeabi_uidivmod		1602821	1					
ANR	1603007	Argument	__aeabi_uidivmod		1602821	0					
ANR	1603008	Identifier	__aeabi_uidivmod		1602821	0					
ANR	1603009	CallExpression	SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1602821	2					
ANR	1603010	Callee	SLJIT_FUNC_OFFSET		1602821	0					
ANR	1603011	Identifier	SLJIT_FUNC_OFFSET		1602821	0					
ANR	1603012	ArgumentList	__aeabi_idivmod		1602821	1					
ANR	1603013	Argument	__aeabi_idivmod		1602821	0					
ANR	1603014	Identifier	__aeabi_idivmod		1602821	0					
ANR	1603015	IfStatement	if ( compiler -> scratches >= 4 )		1602821	11					
ANR	1603016	Condition	compiler -> scratches >= 4	1271:6:41188:41211	1602821	0	True				
ANR	1603017	RelationalExpression	compiler -> scratches >= 4		1602821	0		>=			
ANR	1603018	PtrMemberAccess	compiler -> scratches		1602821	0					
ANR	1603019	Identifier	compiler		1602821	0					
ANR	1603020	Identifier	scratches		1602821	1					
ANR	1603021	PrimaryExpression	4		1602821	1					
ANR	1603022	CompoundStatement		31:32:1043:1043	1602821	1					
ANR	1603023	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , 0xf85dcb04 ) )"	1272:3:41219:41284	1602821	0	True				
ANR	1603024	CallExpression	"FAIL_IF ( push_inst32 ( compiler , 0xf85dcb04 ) )"		1602821	0					
ANR	1603025	Callee	FAIL_IF		1602821	0					
ANR	1603026	Identifier	FAIL_IF		1602821	0					
ANR	1603027	ArgumentList	"push_inst32 ( compiler , 0xf85dcb04 )"		1602821	1					
ANR	1603028	Argument	"push_inst32 ( compiler , 0xf85dcb04 )"		1602821	0					
ANR	1603029	CallExpression	"push_inst32 ( compiler , 0xf85dcb04 )"		1602821	0					
ANR	1603030	Callee	push_inst32		1602821	0					
ANR	1603031	Identifier	push_inst32		1602821	0					
ANR	1603032	ArgumentList	compiler		1602821	1					
ANR	1603033	Argument	compiler		1602821	0					
ANR	1603034	Identifier	compiler		1602821	0					
ANR	1603035	Argument	0xf85dcb04		1602821	1					
ANR	1603036	PrimaryExpression	0xf85dcb04		1602821	0					
ANR	1603037	ReturnStatement	"return push_inst32 ( compiler , 0xf85d2b04 ) ;"	1273:3:41289:41352	1602821	1	True				
ANR	1603038	CallExpression	"push_inst32 ( compiler , 0xf85d2b04 )"		1602821	0					
ANR	1603039	Callee	push_inst32		1602821	0					
ANR	1603040	Identifier	push_inst32		1602821	0					
ANR	1603041	ArgumentList	compiler		1602821	1					
ANR	1603042	Argument	compiler		1602821	0					
ANR	1603043	Identifier	compiler		1602821	0					
ANR	1603044	Argument	0xf85d2b04		1602821	1					
ANR	1603045	PrimaryExpression	0xf85d2b04		1602821	0					
ANR	1603046	ElseStatement	else		1602821	0					
ANR	1603047	IfStatement	if ( compiler -> scratches >= 3 )		1602821	0					
ANR	1603048	Condition	compiler -> scratches >= 3	1274:13:41367:41390	1602821	0	True				
ANR	1603049	RelationalExpression	compiler -> scratches >= 3		1602821	0		>=			
ANR	1603050	PtrMemberAccess	compiler -> scratches		1602821	0					
ANR	1603051	Identifier	compiler		1602821	0					
ANR	1603052	Identifier	scratches		1602821	1					
ANR	1603053	PrimaryExpression	3		1602821	1					
ANR	1603054	ReturnStatement	"return push_inst32 ( compiler , 0xf85d2b08 ) ;"	1275:3:41396:41459	1602821	1	True				
ANR	1603055	CallExpression	"push_inst32 ( compiler , 0xf85d2b08 )"		1602821	0					
ANR	1603056	Callee	push_inst32		1602821	0					
ANR	1603057	Identifier	push_inst32		1602821	0					
ANR	1603058	ArgumentList	compiler		1602821	1					
ANR	1603059	Argument	compiler		1602821	0					
ANR	1603060	Identifier	compiler		1602821	0					
ANR	1603061	Argument	0xf85d2b08		1602821	1					
ANR	1603062	PrimaryExpression	0xf85d2b08		1602821	0					
ANR	1603063	ReturnStatement	return SLJIT_SUCCESS ;	1276:2:41463:41483	1602821	12	True				
ANR	1603064	Identifier	SLJIT_SUCCESS		1602821	0					
ANR	1603065	ReturnStatement	return SLJIT_SUCCESS ;	1279:1:41490:41510	1602821	4	True				
ANR	1603066	Identifier	SLJIT_SUCCESS		1602821	0					
ANR	1603067	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1602821	1					
ANR	1603068	Identifier	sljit_emit_op0		1602821	2					
ANR	1603069	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1602821	3					
ANR	1603070	Parameter	struct sljit_compiler * compiler	1240:49:40124:40154	1602821	0	True				
ANR	1603071	ParameterType	struct sljit_compiler *		1602821	0					
ANR	1603072	Identifier	compiler		1602821	1					
ANR	1603073	Parameter	sljit_si op	1240:82:40157:40167	1602821	1	True				
ANR	1603074	ParameterType	sljit_si		1602821	0					
ANR	1603075	Identifier	op		1602821	1					
ANR	1603076	CFGEntryNode	ENTRY		1602821		True				
ANR	1603077	CFGExitNode	EXIT		1602821		True				
ANR	1603078	Symbol	compiler -> scratches		1602821						
ANR	1603079	Symbol	__aeabi_uidivmod		1602821						
ANR	1603080	Symbol	push_inst16		1602821						
ANR	1603081	Symbol	sljit_emit_ijump		1602821						
ANR	1603082	Symbol	SLJIT_LUMUL		1602821						
ANR	1603083	Symbol	reg_map		1602821						
ANR	1603084	Symbol	* compiler		1602821						
ANR	1603085	Symbol	SLJIT_R1		1602821						
ANR	1603086	Symbol	SMULL		1602821						
ANR	1603087	Symbol	GET_OPCODE		1602821						
ANR	1603088	Symbol	SLJIT_R0		1602821						
ANR	1603089	Symbol	SLJIT_FUNC_OFFSET		1602821						
ANR	1603090	Symbol	* SLJIT_R1		1602821						
ANR	1603091	Symbol	BKPT		1602821						
ANR	1603092	Symbol	SLJIT_IMM		1602821						
ANR	1603093	Symbol	SLJIT_FAST_CALL		1602821						
ANR	1603094	Symbol	compiler		1602821						
ANR	1603095	Symbol	push_inst32		1602821						
ANR	1603096	Symbol	* SLJIT_R0		1602821						
ANR	1603097	Symbol	op		1602821						
ANR	1603098	Symbol	check_sljit_emit_op0		1602821						
ANR	1603099	Symbol	SLJIT_LUDIV		1602821						
ANR	1603100	Symbol	SLJIT_SUCCESS		1602821						
ANR	1603101	Symbol	* reg_map		1602821						
ANR	1603102	Symbol	NOP		1602821						
ANR	1603103	Symbol	UMULL		1602821						
ANR	1603104	Symbol	__aeabi_idivmod		1602821						
ANR	1603105	Function	sljit_emit_op1	1282:0:41515:44864							
ANR	1603106	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1603105	0					
ANR	1603107	CompoundStatement		1285:0:41670:44864	1603105	0					
ANR	1603108	IdentifierDeclStatement	"sljit_si dst_r , flags ;"	1286:1:41673:41694	1603105	0	True				
ANR	1603109	IdentifierDecl	dst_r		1603105	0					
ANR	1603110	IdentifierDeclType	sljit_si		1603105	0					
ANR	1603111	Identifier	dst_r		1603105	1					
ANR	1603112	IdentifierDecl	flags		1603105	1					
ANR	1603113	IdentifierDeclType	sljit_si		1603105	0					
ANR	1603114	Identifier	flags		1603105	1					
ANR	1603115	IdentifierDeclStatement	sljit_si op_flags = GET_ALL_FLAGS ( op ) ;	1287:1:41697:41734	1603105	1	True				
ANR	1603116	IdentifierDecl	op_flags = GET_ALL_FLAGS ( op )		1603105	0					
ANR	1603117	IdentifierDeclType	sljit_si		1603105	0					
ANR	1603118	Identifier	op_flags		1603105	1					
ANR	1603119	AssignmentExpression	op_flags = GET_ALL_FLAGS ( op )		1603105	2		=			
ANR	1603120	Identifier	op_flags		1603105	0					
ANR	1603121	CallExpression	GET_ALL_FLAGS ( op )		1603105	1					
ANR	1603122	Callee	GET_ALL_FLAGS		1603105	0					
ANR	1603123	Identifier	GET_ALL_FLAGS		1603105	0					
ANR	1603124	ArgumentList	op		1603105	1					
ANR	1603125	Argument	op		1603105	0					
ANR	1603126	Identifier	op		1603105	0					
ANR	1603127	ExpressionStatement	CHECK_ERROR ( )	1289:1:41738:41751	1603105	2	True				
ANR	1603128	CallExpression	CHECK_ERROR ( )		1603105	0					
ANR	1603129	Callee	CHECK_ERROR		1603105	0					
ANR	1603130	Identifier	CHECK_ERROR		1603105	0					
ANR	1603131	ArgumentList			1603105	1					
ANR	1603132	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1290:1:41754:41817	1603105	3	True				
ANR	1603133	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1603105	0					
ANR	1603134	Callee	CHECK		1603105	0					
ANR	1603135	Identifier	CHECK		1603105	0					
ANR	1603136	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1603105	1					
ANR	1603137	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1603105	0					
ANR	1603138	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1603105	0					
ANR	1603139	Callee	check_sljit_emit_op1		1603105	0					
ANR	1603140	Identifier	check_sljit_emit_op1		1603105	0					
ANR	1603141	ArgumentList	compiler		1603105	1					
ANR	1603142	Argument	compiler		1603105	0					
ANR	1603143	Identifier	compiler		1603105	0					
ANR	1603144	Argument	op		1603105	1					
ANR	1603145	Identifier	op		1603105	0					
ANR	1603146	Argument	dst		1603105	2					
ANR	1603147	Identifier	dst		1603105	0					
ANR	1603148	Argument	dstw		1603105	3					
ANR	1603149	Identifier	dstw		1603105	0					
ANR	1603150	Argument	src		1603105	4					
ANR	1603151	Identifier	src		1603105	0					
ANR	1603152	Argument	srcw		1603105	5					
ANR	1603153	Identifier	srcw		1603105	0					
ANR	1603154	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1291:1:41820:41850	1603105	4	True				
ANR	1603155	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1603105	0					
ANR	1603156	Callee	ADJUST_LOCAL_OFFSET		1603105	0					
ANR	1603157	Identifier	ADJUST_LOCAL_OFFSET		1603105	0					
ANR	1603158	ArgumentList	dst		1603105	1					
ANR	1603159	Argument	dst		1603105	0					
ANR	1603160	Identifier	dst		1603105	0					
ANR	1603161	Argument	dstw		1603105	1					
ANR	1603162	Identifier	dstw		1603105	0					
ANR	1603163	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1292:1:41853:41883	1603105	5	True				
ANR	1603164	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1603105	0					
ANR	1603165	Callee	ADJUST_LOCAL_OFFSET		1603105	0					
ANR	1603166	Identifier	ADJUST_LOCAL_OFFSET		1603105	0					
ANR	1603167	ArgumentList	src		1603105	1					
ANR	1603168	Argument	src		1603105	0					
ANR	1603169	Identifier	src		1603105	0					
ANR	1603170	Argument	srcw		1603105	1					
ANR	1603171	Identifier	srcw		1603105	0					
ANR	1603172	ExpressionStatement	compiler -> cache_arg = 0	1294:1:41887:41910	1603105	6	True				
ANR	1603173	AssignmentExpression	compiler -> cache_arg = 0		1603105	0		=			
ANR	1603174	PtrMemberAccess	compiler -> cache_arg		1603105	0					
ANR	1603175	Identifier	compiler		1603105	0					
ANR	1603176	Identifier	cache_arg		1603105	1					
ANR	1603177	PrimaryExpression	0		1603105	1					
ANR	1603178	ExpressionStatement	compiler -> cache_argw = 0	1295:1:41913:41937	1603105	7	True				
ANR	1603179	AssignmentExpression	compiler -> cache_argw = 0		1603105	0		=			
ANR	1603180	PtrMemberAccess	compiler -> cache_argw		1603105	0					
ANR	1603181	Identifier	compiler		1603105	0					
ANR	1603182	Identifier	cache_argw		1603105	1					
ANR	1603183	PrimaryExpression	0		1603105	1					
ANR	1603184	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	1297:1:41941:41982	1603105	8	True				
ANR	1603185	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1603105	0		=			
ANR	1603186	Identifier	dst_r		1603105	0					
ANR	1603187	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1603105	1					
ANR	1603188	Condition	SLOW_IS_REG ( dst )		1603105	0					
ANR	1603189	CallExpression	SLOW_IS_REG ( dst )		1603105	0					
ANR	1603190	Callee	SLOW_IS_REG		1603105	0					
ANR	1603191	Identifier	SLOW_IS_REG		1603105	0					
ANR	1603192	ArgumentList	dst		1603105	1					
ANR	1603193	Argument	dst		1603105	0					
ANR	1603194	Identifier	dst		1603105	0					
ANR	1603195	Identifier	dst		1603105	1					
ANR	1603196	Identifier	TMP_REG1		1603105	2					
ANR	1603197	ExpressionStatement	op = GET_OPCODE ( op )	1299:1:41986:42005	1603105	9	True				
ANR	1603198	AssignmentExpression	op = GET_OPCODE ( op )		1603105	0		=			
ANR	1603199	Identifier	op		1603105	0					
ANR	1603200	CallExpression	GET_OPCODE ( op )		1603105	1					
ANR	1603201	Callee	GET_OPCODE		1603105	0					
ANR	1603202	Identifier	GET_OPCODE		1603105	0					
ANR	1603203	ArgumentList	op		1603105	1					
ANR	1603204	Argument	op		1603105	0					
ANR	1603205	Identifier	op		1603105	0					
ANR	1603206	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_P )		1603105	10					
ANR	1603207	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_P	1300:5:42012:42048	1603105	0	True				
ANR	1603208	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_P		1603105	0		&&			
ANR	1603209	RelationalExpression	op >= SLJIT_MOV		1603105	0		>=			
ANR	1603210	Identifier	op		1603105	0					
ANR	1603211	Identifier	SLJIT_MOV		1603105	1					
ANR	1603212	RelationalExpression	op <= SLJIT_MOVU_P		1603105	1		<=			
ANR	1603213	Identifier	op		1603105	0					
ANR	1603214	Identifier	SLJIT_MOVU_P		1603105	1					
ANR	1603215	CompoundStatement		16:44:380:380	1603105	1					
ANR	1603216	SwitchStatement	switch ( op )		1603105	0					
ANR	1603217	Condition	op	1301:10:42063:42064	1603105	0	True				
ANR	1603218	Identifier	op		1603105	0					
ANR	1603219	CompoundStatement		17:14:396:396	1603105	1					
ANR	1603220	Label	case SLJIT_MOV :	1302:2:42071:42085	1603105	0	True				
ANR	1603221	Identifier	SLJIT_MOV		1603105	0					
ANR	1603222	Label	case SLJIT_MOV_UI :	1303:2:42089:42106	1603105	1	True				
ANR	1603223	Identifier	SLJIT_MOV_UI		1603105	0					
ANR	1603224	Label	case SLJIT_MOV_SI :	1304:2:42110:42127	1603105	2	True				
ANR	1603225	Identifier	SLJIT_MOV_SI		1603105	0					
ANR	1603226	Label	case SLJIT_MOV_P :	1305:2:42131:42147	1603105	3	True				
ANR	1603227	Identifier	SLJIT_MOV_P		1603105	0					
ANR	1603228	ExpressionStatement	flags = WORD_SIZE	1306:3:42152:42169	1603105	4	True				
ANR	1603229	AssignmentExpression	flags = WORD_SIZE		1603105	0		=			
ANR	1603230	Identifier	flags		1603105	0					
ANR	1603231	Identifier	WORD_SIZE		1603105	1					
ANR	1603232	BreakStatement	break ;	1307:3:42174:42179	1603105	5	True				
ANR	1603233	Label	case SLJIT_MOV_UB :	1308:2:42183:42200	1603105	6	True				
ANR	1603234	Identifier	SLJIT_MOV_UB		1603105	0					
ANR	1603235	ExpressionStatement	flags = BYTE_SIZE	1309:3:42205:42222	1603105	7	True				
ANR	1603236	AssignmentExpression	flags = BYTE_SIZE		1603105	0		=			
ANR	1603237	Identifier	flags		1603105	0					
ANR	1603238	Identifier	BYTE_SIZE		1603105	1					
ANR	1603239	IfStatement	if ( src & SLJIT_IMM )		1603105	8					
ANR	1603240	Condition	src & SLJIT_IMM	1310:7:42231:42245	1603105	0	True				
ANR	1603241	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603242	Identifier	src		1603105	0					
ANR	1603243	Identifier	SLJIT_IMM		1603105	1					
ANR	1603244	ExpressionStatement	srcw = ( sljit_ub ) srcw	1311:4:42252:42273	1603105	1	True				
ANR	1603245	AssignmentExpression	srcw = ( sljit_ub ) srcw		1603105	0		=			
ANR	1603246	Identifier	srcw		1603105	0					
ANR	1603247	CastExpression	( sljit_ub ) srcw		1603105	1					
ANR	1603248	CastTarget	sljit_ub		1603105	0					
ANR	1603249	Identifier	srcw		1603105	1					
ANR	1603250	BreakStatement	break ;	1312:3:42278:42283	1603105	9	True				
ANR	1603251	Label	case SLJIT_MOV_SB :	1313:2:42287:42304	1603105	10	True				
ANR	1603252	Identifier	SLJIT_MOV_SB		1603105	0					
ANR	1603253	ExpressionStatement	flags = BYTE_SIZE | SIGNED	1314:3:42309:42335	1603105	11	True				
ANR	1603254	AssignmentExpression	flags = BYTE_SIZE | SIGNED		1603105	0		=			
ANR	1603255	Identifier	flags		1603105	0					
ANR	1603256	InclusiveOrExpression	BYTE_SIZE | SIGNED		1603105	1		|			
ANR	1603257	Identifier	BYTE_SIZE		1603105	0					
ANR	1603258	Identifier	SIGNED		1603105	1					
ANR	1603259	IfStatement	if ( src & SLJIT_IMM )		1603105	12					
ANR	1603260	Condition	src & SLJIT_IMM	1315:7:42344:42358	1603105	0	True				
ANR	1603261	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603262	Identifier	src		1603105	0					
ANR	1603263	Identifier	SLJIT_IMM		1603105	1					
ANR	1603264	ExpressionStatement	srcw = ( sljit_sb ) srcw	1316:4:42365:42386	1603105	1	True				
ANR	1603265	AssignmentExpression	srcw = ( sljit_sb ) srcw		1603105	0		=			
ANR	1603266	Identifier	srcw		1603105	0					
ANR	1603267	CastExpression	( sljit_sb ) srcw		1603105	1					
ANR	1603268	CastTarget	sljit_sb		1603105	0					
ANR	1603269	Identifier	srcw		1603105	1					
ANR	1603270	BreakStatement	break ;	1317:3:42391:42396	1603105	13	True				
ANR	1603271	Label	case SLJIT_MOV_UH :	1318:2:42400:42417	1603105	14	True				
ANR	1603272	Identifier	SLJIT_MOV_UH		1603105	0					
ANR	1603273	ExpressionStatement	flags = HALF_SIZE	1319:3:42422:42439	1603105	15	True				
ANR	1603274	AssignmentExpression	flags = HALF_SIZE		1603105	0		=			
ANR	1603275	Identifier	flags		1603105	0					
ANR	1603276	Identifier	HALF_SIZE		1603105	1					
ANR	1603277	IfStatement	if ( src & SLJIT_IMM )		1603105	16					
ANR	1603278	Condition	src & SLJIT_IMM	1320:7:42448:42462	1603105	0	True				
ANR	1603279	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603280	Identifier	src		1603105	0					
ANR	1603281	Identifier	SLJIT_IMM		1603105	1					
ANR	1603282	ExpressionStatement	srcw = ( sljit_uh ) srcw	1321:4:42469:42490	1603105	1	True				
ANR	1603283	AssignmentExpression	srcw = ( sljit_uh ) srcw		1603105	0		=			
ANR	1603284	Identifier	srcw		1603105	0					
ANR	1603285	CastExpression	( sljit_uh ) srcw		1603105	1					
ANR	1603286	CastTarget	sljit_uh		1603105	0					
ANR	1603287	Identifier	srcw		1603105	1					
ANR	1603288	BreakStatement	break ;	1322:3:42495:42500	1603105	17	True				
ANR	1603289	Label	case SLJIT_MOV_SH :	1323:2:42504:42521	1603105	18	True				
ANR	1603290	Identifier	SLJIT_MOV_SH		1603105	0					
ANR	1603291	ExpressionStatement	flags = HALF_SIZE | SIGNED	1324:3:42526:42552	1603105	19	True				
ANR	1603292	AssignmentExpression	flags = HALF_SIZE | SIGNED		1603105	0		=			
ANR	1603293	Identifier	flags		1603105	0					
ANR	1603294	InclusiveOrExpression	HALF_SIZE | SIGNED		1603105	1		|			
ANR	1603295	Identifier	HALF_SIZE		1603105	0					
ANR	1603296	Identifier	SIGNED		1603105	1					
ANR	1603297	IfStatement	if ( src & SLJIT_IMM )		1603105	20					
ANR	1603298	Condition	src & SLJIT_IMM	1325:7:42561:42575	1603105	0	True				
ANR	1603299	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603300	Identifier	src		1603105	0					
ANR	1603301	Identifier	SLJIT_IMM		1603105	1					
ANR	1603302	ExpressionStatement	srcw = ( sljit_sh ) srcw	1326:4:42582:42603	1603105	1	True				
ANR	1603303	AssignmentExpression	srcw = ( sljit_sh ) srcw		1603105	0		=			
ANR	1603304	Identifier	srcw		1603105	0					
ANR	1603305	CastExpression	( sljit_sh ) srcw		1603105	1					
ANR	1603306	CastTarget	sljit_sh		1603105	0					
ANR	1603307	Identifier	srcw		1603105	1					
ANR	1603308	BreakStatement	break ;	1327:3:42608:42613	1603105	21	True				
ANR	1603309	Label	case SLJIT_MOVU :	1328:2:42617:42632	1603105	22	True				
ANR	1603310	Identifier	SLJIT_MOVU		1603105	0					
ANR	1603311	Label	case SLJIT_MOVU_UI :	1329:2:42636:42654	1603105	23	True				
ANR	1603312	Identifier	SLJIT_MOVU_UI		1603105	0					
ANR	1603313	Label	case SLJIT_MOVU_SI :	1330:2:42658:42676	1603105	24	True				
ANR	1603314	Identifier	SLJIT_MOVU_SI		1603105	0					
ANR	1603315	Label	case SLJIT_MOVU_P :	1331:2:42680:42697	1603105	25	True				
ANR	1603316	Identifier	SLJIT_MOVU_P		1603105	0					
ANR	1603317	ExpressionStatement	flags = WORD_SIZE | UPDATE	1332:3:42702:42728	1603105	26	True				
ANR	1603318	AssignmentExpression	flags = WORD_SIZE | UPDATE		1603105	0		=			
ANR	1603319	Identifier	flags		1603105	0					
ANR	1603320	InclusiveOrExpression	WORD_SIZE | UPDATE		1603105	1		|			
ANR	1603321	Identifier	WORD_SIZE		1603105	0					
ANR	1603322	Identifier	UPDATE		1603105	1					
ANR	1603323	BreakStatement	break ;	1333:3:42733:42738	1603105	27	True				
ANR	1603324	Label	case SLJIT_MOVU_UB :	1334:2:42742:42760	1603105	28	True				
ANR	1603325	Identifier	SLJIT_MOVU_UB		1603105	0					
ANR	1603326	ExpressionStatement	flags = BYTE_SIZE | UPDATE	1335:3:42765:42791	1603105	29	True				
ANR	1603327	AssignmentExpression	flags = BYTE_SIZE | UPDATE		1603105	0		=			
ANR	1603328	Identifier	flags		1603105	0					
ANR	1603329	InclusiveOrExpression	BYTE_SIZE | UPDATE		1603105	1		|			
ANR	1603330	Identifier	BYTE_SIZE		1603105	0					
ANR	1603331	Identifier	UPDATE		1603105	1					
ANR	1603332	IfStatement	if ( src & SLJIT_IMM )		1603105	30					
ANR	1603333	Condition	src & SLJIT_IMM	1336:7:42800:42814	1603105	0	True				
ANR	1603334	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603335	Identifier	src		1603105	0					
ANR	1603336	Identifier	SLJIT_IMM		1603105	1					
ANR	1603337	ExpressionStatement	srcw = ( sljit_ub ) srcw	1337:4:42821:42842	1603105	1	True				
ANR	1603338	AssignmentExpression	srcw = ( sljit_ub ) srcw		1603105	0		=			
ANR	1603339	Identifier	srcw		1603105	0					
ANR	1603340	CastExpression	( sljit_ub ) srcw		1603105	1					
ANR	1603341	CastTarget	sljit_ub		1603105	0					
ANR	1603342	Identifier	srcw		1603105	1					
ANR	1603343	BreakStatement	break ;	1338:3:42847:42852	1603105	31	True				
ANR	1603344	Label	case SLJIT_MOVU_SB :	1339:2:42856:42874	1603105	32	True				
ANR	1603345	Identifier	SLJIT_MOVU_SB		1603105	0					
ANR	1603346	ExpressionStatement	flags = BYTE_SIZE | SIGNED | UPDATE	1340:3:42879:42914	1603105	33	True				
ANR	1603347	AssignmentExpression	flags = BYTE_SIZE | SIGNED | UPDATE		1603105	0		=			
ANR	1603348	Identifier	flags		1603105	0					
ANR	1603349	InclusiveOrExpression	BYTE_SIZE | SIGNED | UPDATE		1603105	1		|			
ANR	1603350	Identifier	BYTE_SIZE		1603105	0					
ANR	1603351	InclusiveOrExpression	SIGNED | UPDATE		1603105	1		|			
ANR	1603352	Identifier	SIGNED		1603105	0					
ANR	1603353	Identifier	UPDATE		1603105	1					
ANR	1603354	IfStatement	if ( src & SLJIT_IMM )		1603105	34					
ANR	1603355	Condition	src & SLJIT_IMM	1341:7:42923:42937	1603105	0	True				
ANR	1603356	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603357	Identifier	src		1603105	0					
ANR	1603358	Identifier	SLJIT_IMM		1603105	1					
ANR	1603359	ExpressionStatement	srcw = ( sljit_sb ) srcw	1342:4:42944:42965	1603105	1	True				
ANR	1603360	AssignmentExpression	srcw = ( sljit_sb ) srcw		1603105	0		=			
ANR	1603361	Identifier	srcw		1603105	0					
ANR	1603362	CastExpression	( sljit_sb ) srcw		1603105	1					
ANR	1603363	CastTarget	sljit_sb		1603105	0					
ANR	1603364	Identifier	srcw		1603105	1					
ANR	1603365	BreakStatement	break ;	1343:3:42970:42975	1603105	35	True				
ANR	1603366	Label	case SLJIT_MOVU_UH :	1344:2:42979:42997	1603105	36	True				
ANR	1603367	Identifier	SLJIT_MOVU_UH		1603105	0					
ANR	1603368	ExpressionStatement	flags = HALF_SIZE | UPDATE	1345:3:43002:43028	1603105	37	True				
ANR	1603369	AssignmentExpression	flags = HALF_SIZE | UPDATE		1603105	0		=			
ANR	1603370	Identifier	flags		1603105	0					
ANR	1603371	InclusiveOrExpression	HALF_SIZE | UPDATE		1603105	1		|			
ANR	1603372	Identifier	HALF_SIZE		1603105	0					
ANR	1603373	Identifier	UPDATE		1603105	1					
ANR	1603374	IfStatement	if ( src & SLJIT_IMM )		1603105	38					
ANR	1603375	Condition	src & SLJIT_IMM	1346:7:43037:43051	1603105	0	True				
ANR	1603376	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603377	Identifier	src		1603105	0					
ANR	1603378	Identifier	SLJIT_IMM		1603105	1					
ANR	1603379	ExpressionStatement	srcw = ( sljit_uh ) srcw	1347:4:43058:43079	1603105	1	True				
ANR	1603380	AssignmentExpression	srcw = ( sljit_uh ) srcw		1603105	0		=			
ANR	1603381	Identifier	srcw		1603105	0					
ANR	1603382	CastExpression	( sljit_uh ) srcw		1603105	1					
ANR	1603383	CastTarget	sljit_uh		1603105	0					
ANR	1603384	Identifier	srcw		1603105	1					
ANR	1603385	BreakStatement	break ;	1348:3:43084:43089	1603105	39	True				
ANR	1603386	Label	case SLJIT_MOVU_SH :	1349:2:43093:43111	1603105	40	True				
ANR	1603387	Identifier	SLJIT_MOVU_SH		1603105	0					
ANR	1603388	ExpressionStatement	flags = HALF_SIZE | SIGNED | UPDATE	1350:3:43116:43151	1603105	41	True				
ANR	1603389	AssignmentExpression	flags = HALF_SIZE | SIGNED | UPDATE		1603105	0		=			
ANR	1603390	Identifier	flags		1603105	0					
ANR	1603391	InclusiveOrExpression	HALF_SIZE | SIGNED | UPDATE		1603105	1		|			
ANR	1603392	Identifier	HALF_SIZE		1603105	0					
ANR	1603393	InclusiveOrExpression	SIGNED | UPDATE		1603105	1		|			
ANR	1603394	Identifier	SIGNED		1603105	0					
ANR	1603395	Identifier	UPDATE		1603105	1					
ANR	1603396	IfStatement	if ( src & SLJIT_IMM )		1603105	42					
ANR	1603397	Condition	src & SLJIT_IMM	1351:7:43160:43174	1603105	0	True				
ANR	1603398	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603399	Identifier	src		1603105	0					
ANR	1603400	Identifier	SLJIT_IMM		1603105	1					
ANR	1603401	ExpressionStatement	srcw = ( sljit_sh ) srcw	1352:4:43181:43202	1603105	1	True				
ANR	1603402	AssignmentExpression	srcw = ( sljit_sh ) srcw		1603105	0		=			
ANR	1603403	Identifier	srcw		1603105	0					
ANR	1603404	CastExpression	( sljit_sh ) srcw		1603105	1					
ANR	1603405	CastTarget	sljit_sh		1603105	0					
ANR	1603406	Identifier	srcw		1603105	1					
ANR	1603407	BreakStatement	break ;	1353:3:43207:43212	1603105	43	True				
ANR	1603408	Label	default :	1354:2:43216:43223	1603105	44	True				
ANR	1603409	Identifier	default		1603105	0					
ANR	1603410	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1355:3:43228:43247	1603105	45	True				
ANR	1603411	CallExpression	SLJIT_ASSERT_STOP ( )		1603105	0					
ANR	1603412	Callee	SLJIT_ASSERT_STOP		1603105	0					
ANR	1603413	Identifier	SLJIT_ASSERT_STOP		1603105	0					
ANR	1603414	ArgumentList			1603105	1					
ANR	1603415	ExpressionStatement	flags = 0	1356:3:43252:43261	1603105	46	True				
ANR	1603416	AssignmentExpression	flags = 0		1603105	0		=			
ANR	1603417	Identifier	flags		1603105	0					
ANR	1603418	PrimaryExpression	0		1603105	1					
ANR	1603419	BreakStatement	break ;	1357:3:43266:43271	1603105	47	True				
ANR	1603420	IfStatement	if ( src & SLJIT_IMM )		1603105	1					
ANR	1603421	Condition	src & SLJIT_IMM	1360:6:43284:43298	1603105	0	True				
ANR	1603422	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603423	Identifier	src		1603105	0					
ANR	1603424	Identifier	SLJIT_IMM		1603105	1					
ANR	1603425	ExpressionStatement	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw ) )"	1361:3:43304:43379	1603105	1	True				
ANR	1603426	CallExpression	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw ) )"		1603105	0					
ANR	1603427	Callee	FAIL_IF		1603105	0					
ANR	1603428	Identifier	FAIL_IF		1603105	0					
ANR	1603429	ArgumentList	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1603105	1					
ANR	1603430	Argument	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1603105	0					
ANR	1603431	CallExpression	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1603105	0					
ANR	1603432	Callee	emit_op_imm		1603105	0					
ANR	1603433	Identifier	emit_op_imm		1603105	0					
ANR	1603434	ArgumentList	compiler		1603105	1					
ANR	1603435	Argument	compiler		1603105	0					
ANR	1603436	Identifier	compiler		1603105	0					
ANR	1603437	Argument	SLJIT_MOV | ARG2_IMM		1603105	1					
ANR	1603438	InclusiveOrExpression	SLJIT_MOV | ARG2_IMM		1603105	0		|			
ANR	1603439	Identifier	SLJIT_MOV		1603105	0					
ANR	1603440	Identifier	ARG2_IMM		1603105	1					
ANR	1603441	Argument	dst_r		1603105	2					
ANR	1603442	Identifier	dst_r		1603105	0					
ANR	1603443	Argument	TMP_REG1		1603105	3					
ANR	1603444	Identifier	TMP_REG1		1603105	0					
ANR	1603445	Argument	srcw		1603105	4					
ANR	1603446	Identifier	srcw		1603105	0					
ANR	1603447	ElseStatement	else		1603105	0					
ANR	1603448	IfStatement	if ( src & SLJIT_MEM )		1603105	0					
ANR	1603449	Condition	src & SLJIT_MEM	1362:11:43392:43406	1603105	0	True				
ANR	1603450	BitAndExpression	src & SLJIT_MEM		1603105	0		&			
ANR	1603451	Identifier	src		1603105	0					
ANR	1603452	Identifier	SLJIT_MEM		1603105	1					
ANR	1603453	CompoundStatement		78:28:1738:1738	1603105	1					
ANR	1603454	IfStatement	"if ( getput_arg_fast ( compiler , flags , dst_r , src , srcw ) )"		1603105	0					
ANR	1603455	Condition	"getput_arg_fast ( compiler , flags , dst_r , src , srcw )"	1363:7:43418:43467	1603105	0	True				
ANR	1603456	CallExpression	"getput_arg_fast ( compiler , flags , dst_r , src , srcw )"		1603105	0					
ANR	1603457	Callee	getput_arg_fast		1603105	0					
ANR	1603458	Identifier	getput_arg_fast		1603105	0					
ANR	1603459	ArgumentList	compiler		1603105	1					
ANR	1603460	Argument	compiler		1603105	0					
ANR	1603461	Identifier	compiler		1603105	0					
ANR	1603462	Argument	flags		1603105	1					
ANR	1603463	Identifier	flags		1603105	0					
ANR	1603464	Argument	dst_r		1603105	2					
ANR	1603465	Identifier	dst_r		1603105	0					
ANR	1603466	Argument	src		1603105	3					
ANR	1603467	Identifier	src		1603105	0					
ANR	1603468	Argument	srcw		1603105	4					
ANR	1603469	Identifier	srcw		1603105	0					
ANR	1603470	ExpressionStatement	FAIL_IF ( compiler -> error )	1364:4:43474:43498	1603105	1	True				
ANR	1603471	CallExpression	FAIL_IF ( compiler -> error )		1603105	0					
ANR	1603472	Callee	FAIL_IF		1603105	0					
ANR	1603473	Identifier	FAIL_IF		1603105	0					
ANR	1603474	ArgumentList	compiler -> error		1603105	1					
ANR	1603475	Argument	compiler -> error		1603105	0					
ANR	1603476	PtrMemberAccess	compiler -> error		1603105	0					
ANR	1603477	Identifier	compiler		1603105	0					
ANR	1603478	Identifier	error		1603105	1					
ANR	1603479	ElseStatement	else		1603105	0					
ANR	1603480	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw ) )"	1366:4:43512:43577	1603105	0	True				
ANR	1603481	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw ) )"		1603105	0					
ANR	1603482	Callee	FAIL_IF		1603105	0					
ANR	1603483	Identifier	FAIL_IF		1603105	0					
ANR	1603484	ArgumentList	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1603105	1					
ANR	1603485	Argument	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1603105	0					
ANR	1603486	CallExpression	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1603105	0					
ANR	1603487	Callee	getput_arg		1603105	0					
ANR	1603488	Identifier	getput_arg		1603105	0					
ANR	1603489	ArgumentList	compiler		1603105	1					
ANR	1603490	Argument	compiler		1603105	0					
ANR	1603491	Identifier	compiler		1603105	0					
ANR	1603492	Argument	flags		1603105	1					
ANR	1603493	Identifier	flags		1603105	0					
ANR	1603494	Argument	dst_r		1603105	2					
ANR	1603495	Identifier	dst_r		1603105	0					
ANR	1603496	Argument	src		1603105	3					
ANR	1603497	Identifier	src		1603105	0					
ANR	1603498	Argument	srcw		1603105	4					
ANR	1603499	Identifier	srcw		1603105	0					
ANR	1603500	Argument	dst		1603105	5					
ANR	1603501	Identifier	dst		1603105	0					
ANR	1603502	Argument	dstw		1603105	6					
ANR	1603503	Identifier	dstw		1603105	0					
ANR	1603504	ElseStatement	else		1603105	0					
ANR	1603505	CompoundStatement		83:9:1917:1917	1603105	0					
ANR	1603506	IfStatement	if ( dst_r != TMP_REG1 )		1603105	0					
ANR	1603507	Condition	dst_r != TMP_REG1	1368:7:43597:43613	1603105	0	True				
ANR	1603508	EqualityExpression	dst_r != TMP_REG1		1603105	0		!=			
ANR	1603509	Identifier	dst_r		1603105	0					
ANR	1603510	Identifier	TMP_REG1		1603105	1					
ANR	1603511	ReturnStatement	"return emit_op_imm ( compiler , op , dst_r , TMP_REG1 , src ) ;"	1369:4:43620:43674	1603105	1	True				
ANR	1603512	CallExpression	"emit_op_imm ( compiler , op , dst_r , TMP_REG1 , src )"		1603105	0					
ANR	1603513	Callee	emit_op_imm		1603105	0					
ANR	1603514	Identifier	emit_op_imm		1603105	0					
ANR	1603515	ArgumentList	compiler		1603105	1					
ANR	1603516	Argument	compiler		1603105	0					
ANR	1603517	Identifier	compiler		1603105	0					
ANR	1603518	Argument	op		1603105	1					
ANR	1603519	Identifier	op		1603105	0					
ANR	1603520	Argument	dst_r		1603105	2					
ANR	1603521	Identifier	dst_r		1603105	0					
ANR	1603522	Argument	TMP_REG1		1603105	3					
ANR	1603523	Identifier	TMP_REG1		1603105	0					
ANR	1603524	Argument	src		1603105	4					
ANR	1603525	Identifier	src		1603105	0					
ANR	1603526	ExpressionStatement	dst_r = src	1370:3:43679:43690	1603105	1	True				
ANR	1603527	AssignmentExpression	dst_r = src		1603105	0		=			
ANR	1603528	Identifier	dst_r		1603105	0					
ANR	1603529	Identifier	src		1603105	1					
ANR	1603530	IfStatement	if ( dst & SLJIT_MEM )		1603105	2					
ANR	1603531	Condition	dst & SLJIT_MEM	1373:6:43703:43717	1603105	0	True				
ANR	1603532	BitAndExpression	dst & SLJIT_MEM		1603105	0		&			
ANR	1603533	Identifier	dst		1603105	0					
ANR	1603534	Identifier	SLJIT_MEM		1603105	1					
ANR	1603535	CompoundStatement		89:23:2049:2049	1603105	1					
ANR	1603536	IfStatement	"if ( getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw ) )"		1603105	0					
ANR	1603537	Condition	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"	1374:7:43729:43786	1603105	0	True				
ANR	1603538	CallExpression	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"		1603105	0					
ANR	1603539	Callee	getput_arg_fast		1603105	0					
ANR	1603540	Identifier	getput_arg_fast		1603105	0					
ANR	1603541	ArgumentList	compiler		1603105	1					
ANR	1603542	Argument	compiler		1603105	0					
ANR	1603543	Identifier	compiler		1603105	0					
ANR	1603544	Argument	flags | STORE		1603105	1					
ANR	1603545	InclusiveOrExpression	flags | STORE		1603105	0		|			
ANR	1603546	Identifier	flags		1603105	0					
ANR	1603547	Identifier	STORE		1603105	1					
ANR	1603548	Argument	dst_r		1603105	2					
ANR	1603549	Identifier	dst_r		1603105	0					
ANR	1603550	Argument	dst		1603105	3					
ANR	1603551	Identifier	dst		1603105	0					
ANR	1603552	Argument	dstw		1603105	4					
ANR	1603553	Identifier	dstw		1603105	0					
ANR	1603554	ReturnStatement	return compiler -> error ;	1375:4:43793:43815	1603105	1	True				
ANR	1603555	PtrMemberAccess	compiler -> error		1603105	0					
ANR	1603556	Identifier	compiler		1603105	0					
ANR	1603557	Identifier	error		1603105	1					
ANR	1603558	ElseStatement	else		1603105	0					
ANR	1603559	ReturnStatement	"return getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 ) ;"	1377:4:43829:43895	1603105	0	True				
ANR	1603560	CallExpression	"getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 )"		1603105	0					
ANR	1603561	Callee	getput_arg		1603105	0					
ANR	1603562	Identifier	getput_arg		1603105	0					
ANR	1603563	ArgumentList	compiler		1603105	1					
ANR	1603564	Argument	compiler		1603105	0					
ANR	1603565	Identifier	compiler		1603105	0					
ANR	1603566	Argument	flags | STORE		1603105	1					
ANR	1603567	InclusiveOrExpression	flags | STORE		1603105	0		|			
ANR	1603568	Identifier	flags		1603105	0					
ANR	1603569	Identifier	STORE		1603105	1					
ANR	1603570	Argument	dst_r		1603105	2					
ANR	1603571	Identifier	dst_r		1603105	0					
ANR	1603572	Argument	dst		1603105	3					
ANR	1603573	Identifier	dst		1603105	0					
ANR	1603574	Argument	dstw		1603105	4					
ANR	1603575	Identifier	dstw		1603105	0					
ANR	1603576	Argument	0		1603105	5					
ANR	1603577	PrimaryExpression	0		1603105	0					
ANR	1603578	Argument	0		1603105	6					
ANR	1603579	PrimaryExpression	0		1603105	0					
ANR	1603580	ReturnStatement	return SLJIT_SUCCESS ;	1379:2:43903:43923	1603105	3	True				
ANR	1603581	Identifier	SLJIT_SUCCESS		1603105	0					
ANR	1603582	IfStatement	if ( op == SLJIT_NEG )		1603105	11					
ANR	1603583	Condition	op == SLJIT_NEG	1382:5:43934:43948	1603105	0	True				
ANR	1603584	EqualityExpression	op == SLJIT_NEG		1603105	0		==			
ANR	1603585	Identifier	op		1603105	0					
ANR	1603586	Identifier	SLJIT_NEG		1603105	1					
ANR	1603587	CompoundStatement		98:22:2280:2280	1603105	1					
ANR	1603588	Statement	||	1384:3:44003:44004	1603105	0	True				
ANR	1603589	Statement	(	1384:6:44006:44006	1603105	1	True				
ANR	1603590	Statement	defined	1384:7:44007:44013	1603105	2	True				
ANR	1603591	Statement	SLJIT_ARGUMENT_CHECKS	1384:15:44015:44035	1603105	3	True				
ANR	1603592	Statement	&&	1384:37:44037:44038	1603105	4	True				
ANR	1603593	Statement	SLJIT_ARGUMENT_CHECKS	1384:40:44040:44060	1603105	5	True				
ANR	1603594	Statement	)	1384:61:44061:44061	1603105	6	True				
ANR	1603595	ExpressionStatement	compiler -> skip_checks = 1	1385:2:44065:44090	1603105	7	True				
ANR	1603596	AssignmentExpression	compiler -> skip_checks = 1		1603105	0		=			
ANR	1603597	PtrMemberAccess	compiler -> skip_checks		1603105	0					
ANR	1603598	Identifier	compiler		1603105	0					
ANR	1603599	Identifier	skip_checks		1603105	1					
ANR	1603600	PrimaryExpression	1		1603105	1					
ANR	1603601	ReturnStatement	"return sljit_emit_op2 ( compiler , SLJIT_SUB | op_flags , dst , dstw , SLJIT_IMM , 0 , src , srcw ) ;"	1387:2:44101:44190	1603105	8	True				
ANR	1603602	CallExpression	"sljit_emit_op2 ( compiler , SLJIT_SUB | op_flags , dst , dstw , SLJIT_IMM , 0 , src , srcw )"		1603105	0					
ANR	1603603	Callee	sljit_emit_op2		1603105	0					
ANR	1603604	Identifier	sljit_emit_op2		1603105	0					
ANR	1603605	ArgumentList	compiler		1603105	1					
ANR	1603606	Argument	compiler		1603105	0					
ANR	1603607	Identifier	compiler		1603105	0					
ANR	1603608	Argument	SLJIT_SUB | op_flags		1603105	1					
ANR	1603609	InclusiveOrExpression	SLJIT_SUB | op_flags		1603105	0		|			
ANR	1603610	Identifier	SLJIT_SUB		1603105	0					
ANR	1603611	Identifier	op_flags		1603105	1					
ANR	1603612	Argument	dst		1603105	2					
ANR	1603613	Identifier	dst		1603105	0					
ANR	1603614	Argument	dstw		1603105	3					
ANR	1603615	Identifier	dstw		1603105	0					
ANR	1603616	Argument	SLJIT_IMM		1603105	4					
ANR	1603617	Identifier	SLJIT_IMM		1603105	0					
ANR	1603618	Argument	0		1603105	5					
ANR	1603619	PrimaryExpression	0		1603105	0					
ANR	1603620	Argument	src		1603105	6					
ANR	1603621	Identifier	src		1603105	0					
ANR	1603622	Argument	srcw		1603105	7					
ANR	1603623	Identifier	srcw		1603105	0					
ANR	1603624	ExpressionStatement	flags = ( GET_FLAGS ( op_flags ) ? SET_FLAGS : 0 ) | ( ( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )	1390:1:44197:44293	1603105	12	True				
ANR	1603625	AssignmentExpression	flags = ( GET_FLAGS ( op_flags ) ? SET_FLAGS : 0 ) | ( ( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1603105	0		=			
ANR	1603626	Identifier	flags		1603105	0					
ANR	1603627	InclusiveOrExpression	( GET_FLAGS ( op_flags ) ? SET_FLAGS : 0 ) | ( ( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1603105	1		|			
ANR	1603628	ConditionalExpression	GET_FLAGS ( op_flags ) ? SET_FLAGS : 0		1603105	0					
ANR	1603629	Condition	GET_FLAGS ( op_flags )		1603105	0					
ANR	1603630	CallExpression	GET_FLAGS ( op_flags )		1603105	0					
ANR	1603631	Callee	GET_FLAGS		1603105	0					
ANR	1603632	Identifier	GET_FLAGS		1603105	0					
ANR	1603633	ArgumentList	op_flags		1603105	1					
ANR	1603634	Argument	op_flags		1603105	0					
ANR	1603635	Identifier	op_flags		1603105	0					
ANR	1603636	Identifier	SET_FLAGS		1603105	1					
ANR	1603637	PrimaryExpression	0		1603105	2					
ANR	1603638	ConditionalExpression	( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0		1603105	1					
ANR	1603639	Condition	op_flags & SLJIT_KEEP_FLAGS		1603105	0					
ANR	1603640	BitAndExpression	op_flags & SLJIT_KEEP_FLAGS		1603105	0		&			
ANR	1603641	Identifier	op_flags		1603105	0					
ANR	1603642	Identifier	SLJIT_KEEP_FLAGS		1603105	1					
ANR	1603643	Identifier	KEEP_FLAGS		1603105	1					
ANR	1603644	PrimaryExpression	0		1603105	2					
ANR	1603645	IfStatement	if ( src & SLJIT_MEM )		1603105	13					
ANR	1603646	Condition	src & SLJIT_MEM	1391:5:44300:44314	1603105	0	True				
ANR	1603647	BitAndExpression	src & SLJIT_MEM		1603105	0		&			
ANR	1603648	Identifier	src		1603105	0					
ANR	1603649	Identifier	SLJIT_MEM		1603105	1					
ANR	1603650	CompoundStatement		107:22:2646:2646	1603105	1					
ANR	1603651	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src , srcw ) )"		1603105	0					
ANR	1603652	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src , srcw )"	1392:6:44325:44381	1603105	0	True				
ANR	1603653	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src , srcw )"		1603105	0					
ANR	1603654	Callee	getput_arg_fast		1603105	0					
ANR	1603655	Identifier	getput_arg_fast		1603105	0					
ANR	1603656	ArgumentList	compiler		1603105	1					
ANR	1603657	Argument	compiler		1603105	0					
ANR	1603658	Identifier	compiler		1603105	0					
ANR	1603659	Argument	WORD_SIZE		1603105	1					
ANR	1603660	Identifier	WORD_SIZE		1603105	0					
ANR	1603661	Argument	TMP_REG2		1603105	2					
ANR	1603662	Identifier	TMP_REG2		1603105	0					
ANR	1603663	Argument	src		1603105	3					
ANR	1603664	Identifier	src		1603105	0					
ANR	1603665	Argument	srcw		1603105	4					
ANR	1603666	Identifier	srcw		1603105	0					
ANR	1603667	ExpressionStatement	FAIL_IF ( compiler -> error )	1393:3:44387:44411	1603105	1	True				
ANR	1603668	CallExpression	FAIL_IF ( compiler -> error )		1603105	0					
ANR	1603669	Callee	FAIL_IF		1603105	0					
ANR	1603670	Identifier	FAIL_IF		1603105	0					
ANR	1603671	ArgumentList	compiler -> error		1603105	1					
ANR	1603672	Argument	compiler -> error		1603105	0					
ANR	1603673	PtrMemberAccess	compiler -> error		1603105	0					
ANR	1603674	Identifier	compiler		1603105	0					
ANR	1603675	Identifier	error		1603105	1					
ANR	1603676	ElseStatement	else		1603105	0					
ANR	1603677	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"	1395:3:44423:44495	1603105	0	True				
ANR	1603678	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"		1603105	0					
ANR	1603679	Callee	FAIL_IF		1603105	0					
ANR	1603680	Identifier	FAIL_IF		1603105	0					
ANR	1603681	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1603105	1					
ANR	1603682	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1603105	0					
ANR	1603683	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1603105	0					
ANR	1603684	Callee	getput_arg		1603105	0					
ANR	1603685	Identifier	getput_arg		1603105	0					
ANR	1603686	ArgumentList	compiler		1603105	1					
ANR	1603687	Argument	compiler		1603105	0					
ANR	1603688	Identifier	compiler		1603105	0					
ANR	1603689	Argument	WORD_SIZE		1603105	1					
ANR	1603690	Identifier	WORD_SIZE		1603105	0					
ANR	1603691	Argument	TMP_REG2		1603105	2					
ANR	1603692	Identifier	TMP_REG2		1603105	0					
ANR	1603693	Argument	src		1603105	3					
ANR	1603694	Identifier	src		1603105	0					
ANR	1603695	Argument	srcw		1603105	4					
ANR	1603696	Identifier	srcw		1603105	0					
ANR	1603697	Argument	dst		1603105	5					
ANR	1603698	Identifier	dst		1603105	0					
ANR	1603699	Argument	dstw		1603105	6					
ANR	1603700	Identifier	dstw		1603105	0					
ANR	1603701	ExpressionStatement	src = TMP_REG2	1396:2:44499:44513	1603105	1	True				
ANR	1603702	AssignmentExpression	src = TMP_REG2		1603105	0		=			
ANR	1603703	Identifier	src		1603105	0					
ANR	1603704	Identifier	TMP_REG2		1603105	1					
ANR	1603705	IfStatement	if ( src & SLJIT_IMM )		1603105	14					
ANR	1603706	Condition	src & SLJIT_IMM	1399:5:44524:44538	1603105	0	True				
ANR	1603707	BitAndExpression	src & SLJIT_IMM		1603105	0		&			
ANR	1603708	Identifier	src		1603105	0					
ANR	1603709	Identifier	SLJIT_IMM		1603105	1					
ANR	1603710	ExpressionStatement	flags |= ARG2_IMM	1400:2:44543:44560	1603105	1	True				
ANR	1603711	AssignmentExpression	flags |= ARG2_IMM		1603105	0		|=			
ANR	1603712	Identifier	flags		1603105	0					
ANR	1603713	Identifier	ARG2_IMM		1603105	1					
ANR	1603714	ElseStatement	else		1603105	0					
ANR	1603715	ExpressionStatement	srcw = src	1402:2:44570:44580	1603105	0	True				
ANR	1603716	AssignmentExpression	srcw = src		1603105	0		=			
ANR	1603717	Identifier	srcw		1603105	0					
ANR	1603718	Identifier	src		1603105	1					
ANR	1603719	ExpressionStatement	"emit_op_imm ( compiler , flags | op , dst_r , TMP_REG1 , srcw )"	1404:1:44584:44640	1603105	15	True				
ANR	1603720	CallExpression	"emit_op_imm ( compiler , flags | op , dst_r , TMP_REG1 , srcw )"		1603105	0					
ANR	1603721	Callee	emit_op_imm		1603105	0					
ANR	1603722	Identifier	emit_op_imm		1603105	0					
ANR	1603723	ArgumentList	compiler		1603105	1					
ANR	1603724	Argument	compiler		1603105	0					
ANR	1603725	Identifier	compiler		1603105	0					
ANR	1603726	Argument	flags | op		1603105	1					
ANR	1603727	InclusiveOrExpression	flags | op		1603105	0		|			
ANR	1603728	Identifier	flags		1603105	0					
ANR	1603729	Identifier	op		1603105	1					
ANR	1603730	Argument	dst_r		1603105	2					
ANR	1603731	Identifier	dst_r		1603105	0					
ANR	1603732	Argument	TMP_REG1		1603105	3					
ANR	1603733	Identifier	TMP_REG1		1603105	0					
ANR	1603734	Argument	srcw		1603105	4					
ANR	1603735	Identifier	srcw		1603105	0					
ANR	1603736	IfStatement	if ( dst & SLJIT_MEM )		1603105	16					
ANR	1603737	Condition	dst & SLJIT_MEM	1406:5:44648:44662	1603105	0	True				
ANR	1603738	BitAndExpression	dst & SLJIT_MEM		1603105	0		&			
ANR	1603739	Identifier	dst		1603105	0					
ANR	1603740	Identifier	SLJIT_MEM		1603105	1					
ANR	1603741	CompoundStatement		122:22:2994:2994	1603105	1					
ANR	1603742	IfStatement	"if ( getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw ) )"		1603105	0					
ANR	1603743	Condition	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"	1407:6:44673:44730	1603105	0	True				
ANR	1603744	CallExpression	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"		1603105	0					
ANR	1603745	Callee	getput_arg_fast		1603105	0					
ANR	1603746	Identifier	getput_arg_fast		1603105	0					
ANR	1603747	ArgumentList	compiler		1603105	1					
ANR	1603748	Argument	compiler		1603105	0					
ANR	1603749	Identifier	compiler		1603105	0					
ANR	1603750	Argument	flags | STORE		1603105	1					
ANR	1603751	InclusiveOrExpression	flags | STORE		1603105	0		|			
ANR	1603752	Identifier	flags		1603105	0					
ANR	1603753	Identifier	STORE		1603105	1					
ANR	1603754	Argument	dst_r		1603105	2					
ANR	1603755	Identifier	dst_r		1603105	0					
ANR	1603756	Argument	dst		1603105	3					
ANR	1603757	Identifier	dst		1603105	0					
ANR	1603758	Argument	dstw		1603105	4					
ANR	1603759	Identifier	dstw		1603105	0					
ANR	1603760	ReturnStatement	return compiler -> error ;	1408:3:44736:44758	1603105	1	True				
ANR	1603761	PtrMemberAccess	compiler -> error		1603105	0					
ANR	1603762	Identifier	compiler		1603105	0					
ANR	1603763	Identifier	error		1603105	1					
ANR	1603764	ElseStatement	else		1603105	0					
ANR	1603765	ReturnStatement	"return getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 ) ;"	1410:3:44770:44836	1603105	0	True				
ANR	1603766	CallExpression	"getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 )"		1603105	0					
ANR	1603767	Callee	getput_arg		1603105	0					
ANR	1603768	Identifier	getput_arg		1603105	0					
ANR	1603769	ArgumentList	compiler		1603105	1					
ANR	1603770	Argument	compiler		1603105	0					
ANR	1603771	Identifier	compiler		1603105	0					
ANR	1603772	Argument	flags | STORE		1603105	1					
ANR	1603773	InclusiveOrExpression	flags | STORE		1603105	0		|			
ANR	1603774	Identifier	flags		1603105	0					
ANR	1603775	Identifier	STORE		1603105	1					
ANR	1603776	Argument	dst_r		1603105	2					
ANR	1603777	Identifier	dst_r		1603105	0					
ANR	1603778	Argument	dst		1603105	3					
ANR	1603779	Identifier	dst		1603105	0					
ANR	1603780	Argument	dstw		1603105	4					
ANR	1603781	Identifier	dstw		1603105	0					
ANR	1603782	Argument	0		1603105	5					
ANR	1603783	PrimaryExpression	0		1603105	0					
ANR	1603784	Argument	0		1603105	6					
ANR	1603785	PrimaryExpression	0		1603105	0					
ANR	1603786	ReturnStatement	return SLJIT_SUCCESS ;	1412:1:44842:44862	1603105	17	True				
ANR	1603787	Identifier	SLJIT_SUCCESS		1603105	0					
ANR	1603788	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1603105	1					
ANR	1603789	Identifier	sljit_emit_op1		1603105	2					
ANR	1603790	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1603105	3					
ANR	1603791	Parameter	struct sljit_compiler * compiler	1282:49:41564:41594	1603105	0	True				
ANR	1603792	ParameterType	struct sljit_compiler *		1603105	0					
ANR	1603793	Identifier	compiler		1603105	1					
ANR	1603794	Parameter	sljit_si op	1282:82:41597:41607	1603105	1	True				
ANR	1603795	ParameterType	sljit_si		1603105	0					
ANR	1603796	Identifier	op		1603105	1					
ANR	1603797	Parameter	sljit_si dst	1283:1:41611:41622	1603105	2	True				
ANR	1603798	ParameterType	sljit_si		1603105	0					
ANR	1603799	Identifier	dst		1603105	1					
ANR	1603800	Parameter	sljit_sw dstw	1283:15:41625:41637	1603105	3	True				
ANR	1603801	ParameterType	sljit_sw		1603105	0					
ANR	1603802	Identifier	dstw		1603105	1					
ANR	1603803	Parameter	sljit_si src	1284:1:41641:41652	1603105	4	True				
ANR	1603804	ParameterType	sljit_si		1603105	0					
ANR	1603805	Identifier	src		1603105	1					
ANR	1603806	Parameter	sljit_sw srcw	1284:15:41655:41667	1603105	5	True				
ANR	1603807	ParameterType	sljit_sw		1603105	0					
ANR	1603808	Identifier	srcw		1603105	1					
ANR	1603809	CFGEntryNode	ENTRY		1603105		True				
ANR	1603810	CFGExitNode	EXIT		1603105		True				
ANR	1603811	Symbol	BYTE_SIZE		1603105						
ANR	1603812	Symbol	TMP_REG2		1603105						
ANR	1603813	Symbol	compiler -> cache_argw		1603105						
ANR	1603814	Symbol	TMP_REG1		1603105						
ANR	1603815	Symbol	sljit_emit_op2		1603105						
ANR	1603816	Symbol	dst		1603105						
ANR	1603817	Symbol	SLJIT_MOV		1603105						
ANR	1603818	Symbol	SLJIT_MEM		1603105						
ANR	1603819	Symbol	flags		1603105						
ANR	1603820	Symbol	SLOW_IS_REG		1603105						
ANR	1603821	Symbol	* compiler		1603105						
ANR	1603822	Symbol	dst_r		1603105						
ANR	1603823	Symbol	GET_OPCODE		1603105						
ANR	1603824	Symbol	GET_FLAGS		1603105						
ANR	1603825	Symbol	GET_ALL_FLAGS		1603105						
ANR	1603826	Symbol	SLJIT_IMM		1603105						
ANR	1603827	Symbol	SIGNED		1603105						
ANR	1603828	Symbol	getput_arg		1603105						
ANR	1603829	Symbol	SLJIT_KEEP_FLAGS		1603105						
ANR	1603830	Symbol	HALF_SIZE		1603105						
ANR	1603831	Symbol	SLJIT_NEG		1603105						
ANR	1603832	Symbol	KEEP_FLAGS		1603105						
ANR	1603833	Symbol	UPDATE		1603105						
ANR	1603834	Symbol	compiler		1603105						
ANR	1603835	Symbol	emit_op_imm		1603105						
ANR	1603836	Symbol	SLJIT_MOVU_P		1603105						
ANR	1603837	Symbol	op		1603105						
ANR	1603838	Symbol	op_flags		1603105						
ANR	1603839	Symbol	src		1603105						
ANR	1603840	Symbol	check_sljit_emit_op1		1603105						
ANR	1603841	Symbol	srcw		1603105						
ANR	1603842	Symbol	compiler -> cache_arg		1603105						
ANR	1603843	Symbol	ARG2_IMM		1603105						
ANR	1603844	Symbol	SLJIT_SUB		1603105						
ANR	1603845	Symbol	SLJIT_SUCCESS		1603105						
ANR	1603846	Symbol	SET_FLAGS		1603105						
ANR	1603847	Symbol	STORE		1603105						
ANR	1603848	Symbol	compiler -> skip_checks		1603105						
ANR	1603849	Symbol	getput_arg_fast		1603105						
ANR	1603850	Symbol	dstw		1603105						
ANR	1603851	Symbol	compiler -> error		1603105						
ANR	1603852	Symbol	WORD_SIZE		1603105						
ANR	1603853	Function	sljit_emit_op2	1415:0:44867:47210							
ANR	1603854	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1603853	0					
ANR	1603855	CompoundStatement		1419:0:45056:47210	1603853	0					
ANR	1603856	IdentifierDeclStatement	"sljit_si dst_r , flags ;"	1420:1:45059:45080	1603853	0	True				
ANR	1603857	IdentifierDecl	dst_r		1603853	0					
ANR	1603858	IdentifierDeclType	sljit_si		1603853	0					
ANR	1603859	Identifier	dst_r		1603853	1					
ANR	1603860	IdentifierDecl	flags		1603853	1					
ANR	1603861	IdentifierDeclType	sljit_si		1603853	0					
ANR	1603862	Identifier	flags		1603853	1					
ANR	1603863	ExpressionStatement	CHECK_ERROR ( )	1422:1:45084:45097	1603853	1	True				
ANR	1603864	CallExpression	CHECK_ERROR ( )		1603853	0					
ANR	1603865	Callee	CHECK_ERROR		1603853	0					
ANR	1603866	Identifier	CHECK_ERROR		1603853	0					
ANR	1603867	ArgumentList			1603853	1					
ANR	1603868	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1423:1:45100:45178	1603853	2	True				
ANR	1603869	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1603853	0					
ANR	1603870	Callee	CHECK		1603853	0					
ANR	1603871	Identifier	CHECK		1603853	0					
ANR	1603872	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1603853	1					
ANR	1603873	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1603853	0					
ANR	1603874	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1603853	0					
ANR	1603875	Callee	check_sljit_emit_op2		1603853	0					
ANR	1603876	Identifier	check_sljit_emit_op2		1603853	0					
ANR	1603877	ArgumentList	compiler		1603853	1					
ANR	1603878	Argument	compiler		1603853	0					
ANR	1603879	Identifier	compiler		1603853	0					
ANR	1603880	Argument	op		1603853	1					
ANR	1603881	Identifier	op		1603853	0					
ANR	1603882	Argument	dst		1603853	2					
ANR	1603883	Identifier	dst		1603853	0					
ANR	1603884	Argument	dstw		1603853	3					
ANR	1603885	Identifier	dstw		1603853	0					
ANR	1603886	Argument	src1		1603853	4					
ANR	1603887	Identifier	src1		1603853	0					
ANR	1603888	Argument	src1w		1603853	5					
ANR	1603889	Identifier	src1w		1603853	0					
ANR	1603890	Argument	src2		1603853	6					
ANR	1603891	Identifier	src2		1603853	0					
ANR	1603892	Argument	src2w		1603853	7					
ANR	1603893	Identifier	src2w		1603853	0					
ANR	1603894	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1424:1:45181:45211	1603853	3	True				
ANR	1603895	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1603853	0					
ANR	1603896	Callee	ADJUST_LOCAL_OFFSET		1603853	0					
ANR	1603897	Identifier	ADJUST_LOCAL_OFFSET		1603853	0					
ANR	1603898	ArgumentList	dst		1603853	1					
ANR	1603899	Argument	dst		1603853	0					
ANR	1603900	Identifier	dst		1603853	0					
ANR	1603901	Argument	dstw		1603853	1					
ANR	1603902	Identifier	dstw		1603853	0					
ANR	1603903	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1425:1:45214:45246	1603853	4	True				
ANR	1603904	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1603853	0					
ANR	1603905	Callee	ADJUST_LOCAL_OFFSET		1603853	0					
ANR	1603906	Identifier	ADJUST_LOCAL_OFFSET		1603853	0					
ANR	1603907	ArgumentList	src1		1603853	1					
ANR	1603908	Argument	src1		1603853	0					
ANR	1603909	Identifier	src1		1603853	0					
ANR	1603910	Argument	src1w		1603853	1					
ANR	1603911	Identifier	src1w		1603853	0					
ANR	1603912	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1426:1:45249:45281	1603853	5	True				
ANR	1603913	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1603853	0					
ANR	1603914	Callee	ADJUST_LOCAL_OFFSET		1603853	0					
ANR	1603915	Identifier	ADJUST_LOCAL_OFFSET		1603853	0					
ANR	1603916	ArgumentList	src2		1603853	1					
ANR	1603917	Argument	src2		1603853	0					
ANR	1603918	Identifier	src2		1603853	0					
ANR	1603919	Argument	src2w		1603853	1					
ANR	1603920	Identifier	src2w		1603853	0					
ANR	1603921	ExpressionStatement	compiler -> cache_arg = 0	1428:1:45285:45308	1603853	6	True				
ANR	1603922	AssignmentExpression	compiler -> cache_arg = 0		1603853	0		=			
ANR	1603923	PtrMemberAccess	compiler -> cache_arg		1603853	0					
ANR	1603924	Identifier	compiler		1603853	0					
ANR	1603925	Identifier	cache_arg		1603853	1					
ANR	1603926	PrimaryExpression	0		1603853	1					
ANR	1603927	ExpressionStatement	compiler -> cache_argw = 0	1429:1:45311:45335	1603853	7	True				
ANR	1603928	AssignmentExpression	compiler -> cache_argw = 0		1603853	0		=			
ANR	1603929	PtrMemberAccess	compiler -> cache_argw		1603853	0					
ANR	1603930	Identifier	compiler		1603853	0					
ANR	1603931	Identifier	cache_argw		1603853	1					
ANR	1603932	PrimaryExpression	0		1603853	1					
ANR	1603933	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	1431:1:45339:45380	1603853	8	True				
ANR	1603934	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1603853	0		=			
ANR	1603935	Identifier	dst_r		1603853	0					
ANR	1603936	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1603853	1					
ANR	1603937	Condition	SLOW_IS_REG ( dst )		1603853	0					
ANR	1603938	CallExpression	SLOW_IS_REG ( dst )		1603853	0					
ANR	1603939	Callee	SLOW_IS_REG		1603853	0					
ANR	1603940	Identifier	SLOW_IS_REG		1603853	0					
ANR	1603941	ArgumentList	dst		1603853	1					
ANR	1603942	Argument	dst		1603853	0					
ANR	1603943	Identifier	dst		1603853	0					
ANR	1603944	Identifier	dst		1603853	1					
ANR	1603945	Identifier	TMP_REG1		1603853	2					
ANR	1603946	ExpressionStatement	flags = ( GET_FLAGS ( op ) ? SET_FLAGS : 0 ) | ( ( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )	1432:1:45383:45467	1603853	9	True				
ANR	1603947	AssignmentExpression	flags = ( GET_FLAGS ( op ) ? SET_FLAGS : 0 ) | ( ( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1603853	0		=			
ANR	1603948	Identifier	flags		1603853	0					
ANR	1603949	InclusiveOrExpression	( GET_FLAGS ( op ) ? SET_FLAGS : 0 ) | ( ( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1603853	1		|			
ANR	1603950	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1603853	0					
ANR	1603951	Condition	GET_FLAGS ( op )		1603853	0					
ANR	1603952	CallExpression	GET_FLAGS ( op )		1603853	0					
ANR	1603953	Callee	GET_FLAGS		1603853	0					
ANR	1603954	Identifier	GET_FLAGS		1603853	0					
ANR	1603955	ArgumentList	op		1603853	1					
ANR	1603956	Argument	op		1603853	0					
ANR	1603957	Identifier	op		1603853	0					
ANR	1603958	Identifier	SET_FLAGS		1603853	1					
ANR	1603959	PrimaryExpression	0		1603853	2					
ANR	1603960	ConditionalExpression	( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0		1603853	1					
ANR	1603961	Condition	op & SLJIT_KEEP_FLAGS		1603853	0					
ANR	1603962	BitAndExpression	op & SLJIT_KEEP_FLAGS		1603853	0		&			
ANR	1603963	Identifier	op		1603853	0					
ANR	1603964	Identifier	SLJIT_KEEP_FLAGS		1603853	1					
ANR	1603965	Identifier	KEEP_FLAGS		1603853	1					
ANR	1603966	PrimaryExpression	0		1603853	2					
ANR	1603967	IfStatement	"if ( ( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw ) )"		1603853	10					
ANR	1603968	Condition	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"	1434:5:45475:45572	1603853	0	True				
ANR	1603969	AndExpression	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1603853	0		&&			
ANR	1603970	BitAndExpression	dst & SLJIT_MEM		1603853	0		&			
ANR	1603971	Identifier	dst		1603853	0					
ANR	1603972	Identifier	SLJIT_MEM		1603853	1					
ANR	1603973	UnaryOperationExpression	"! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1603853	1					
ANR	1603974	UnaryOperator	!		1603853	0					
ANR	1603975	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1603853	1					
ANR	1603976	Callee	getput_arg_fast		1603853	0					
ANR	1603977	Identifier	getput_arg_fast		1603853	0					
ANR	1603978	ArgumentList	compiler		1603853	1					
ANR	1603979	Argument	compiler		1603853	0					
ANR	1603980	Identifier	compiler		1603853	0					
ANR	1603981	Argument	WORD_SIZE | STORE | ARG_TEST		1603853	1					
ANR	1603982	InclusiveOrExpression	WORD_SIZE | STORE | ARG_TEST		1603853	0		|			
ANR	1603983	Identifier	WORD_SIZE		1603853	0					
ANR	1603984	InclusiveOrExpression	STORE | ARG_TEST		1603853	1		|			
ANR	1603985	Identifier	STORE		1603853	0					
ANR	1603986	Identifier	ARG_TEST		1603853	1					
ANR	1603987	Argument	TMP_REG1		1603853	2					
ANR	1603988	Identifier	TMP_REG1		1603853	0					
ANR	1603989	Argument	dst		1603853	3					
ANR	1603990	Identifier	dst		1603853	0					
ANR	1603991	Argument	dstw		1603853	4					
ANR	1603992	Identifier	dstw		1603853	0					
ANR	1603993	ExpressionStatement	flags |= SLOW_DEST	1435:2:45577:45595	1603853	1	True				
ANR	1603994	AssignmentExpression	flags |= SLOW_DEST		1603853	0		|=			
ANR	1603995	Identifier	flags		1603853	0					
ANR	1603996	Identifier	SLOW_DEST		1603853	1					
ANR	1603997	IfStatement	if ( src1 & SLJIT_MEM )		1603853	11					
ANR	1603998	Condition	src1 & SLJIT_MEM	1437:5:45603:45618	1603853	0	True				
ANR	1603999	BitAndExpression	src1 & SLJIT_MEM		1603853	0		&			
ANR	1604000	Identifier	src1		1603853	0					
ANR	1604001	Identifier	SLJIT_MEM		1603853	1					
ANR	1604002	CompoundStatement		19:23:564:564	1603853	1					
ANR	1604003	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w ) )"		1603853	0					
ANR	1604004	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w )"	1438:6:45629:45687	1603853	0	True				
ANR	1604005	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w )"		1603853	0					
ANR	1604006	Callee	getput_arg_fast		1603853	0					
ANR	1604007	Identifier	getput_arg_fast		1603853	0					
ANR	1604008	ArgumentList	compiler		1603853	1					
ANR	1604009	Argument	compiler		1603853	0					
ANR	1604010	Identifier	compiler		1603853	0					
ANR	1604011	Argument	WORD_SIZE		1603853	1					
ANR	1604012	Identifier	WORD_SIZE		1603853	0					
ANR	1604013	Argument	TMP_REG1		1603853	2					
ANR	1604014	Identifier	TMP_REG1		1603853	0					
ANR	1604015	Argument	src1		1603853	3					
ANR	1604016	Identifier	src1		1603853	0					
ANR	1604017	Argument	src1w		1603853	4					
ANR	1604018	Identifier	src1w		1603853	0					
ANR	1604019	ExpressionStatement	FAIL_IF ( compiler -> error )	1439:3:45693:45717	1603853	1	True				
ANR	1604020	CallExpression	FAIL_IF ( compiler -> error )		1603853	0					
ANR	1604021	Callee	FAIL_IF		1603853	0					
ANR	1604022	Identifier	FAIL_IF		1603853	0					
ANR	1604023	ArgumentList	compiler -> error		1603853	1					
ANR	1604024	Argument	compiler -> error		1603853	0					
ANR	1604025	PtrMemberAccess	compiler -> error		1603853	0					
ANR	1604026	Identifier	compiler		1603853	0					
ANR	1604027	Identifier	error		1603853	1					
ANR	1604028	ElseStatement	else		1603853	0					
ANR	1604029	ExpressionStatement	flags |= SLOW_SRC1	1441:3:45729:45747	1603853	0	True				
ANR	1604030	AssignmentExpression	flags |= SLOW_SRC1		1603853	0		|=			
ANR	1604031	Identifier	flags		1603853	0					
ANR	1604032	Identifier	SLOW_SRC1		1603853	1					
ANR	1604033	IfStatement	if ( src2 & SLJIT_MEM )		1603853	12					
ANR	1604034	Condition	src2 & SLJIT_MEM	1443:5:45757:45772	1603853	0	True				
ANR	1604035	BitAndExpression	src2 & SLJIT_MEM		1603853	0		&			
ANR	1604036	Identifier	src2		1603853	0					
ANR	1604037	Identifier	SLJIT_MEM		1603853	1					
ANR	1604038	CompoundStatement		25:23:718:718	1603853	1					
ANR	1604039	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w ) )"		1603853	0					
ANR	1604040	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w )"	1444:6:45783:45841	1603853	0	True				
ANR	1604041	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w )"		1603853	0					
ANR	1604042	Callee	getput_arg_fast		1603853	0					
ANR	1604043	Identifier	getput_arg_fast		1603853	0					
ANR	1604044	ArgumentList	compiler		1603853	1					
ANR	1604045	Argument	compiler		1603853	0					
ANR	1604046	Identifier	compiler		1603853	0					
ANR	1604047	Argument	WORD_SIZE		1603853	1					
ANR	1604048	Identifier	WORD_SIZE		1603853	0					
ANR	1604049	Argument	TMP_REG2		1603853	2					
ANR	1604050	Identifier	TMP_REG2		1603853	0					
ANR	1604051	Argument	src2		1603853	3					
ANR	1604052	Identifier	src2		1603853	0					
ANR	1604053	Argument	src2w		1603853	4					
ANR	1604054	Identifier	src2w		1603853	0					
ANR	1604055	ExpressionStatement	FAIL_IF ( compiler -> error )	1445:3:45847:45871	1603853	1	True				
ANR	1604056	CallExpression	FAIL_IF ( compiler -> error )		1603853	0					
ANR	1604057	Callee	FAIL_IF		1603853	0					
ANR	1604058	Identifier	FAIL_IF		1603853	0					
ANR	1604059	ArgumentList	compiler -> error		1603853	1					
ANR	1604060	Argument	compiler -> error		1603853	0					
ANR	1604061	PtrMemberAccess	compiler -> error		1603853	0					
ANR	1604062	Identifier	compiler		1603853	0					
ANR	1604063	Identifier	error		1603853	1					
ANR	1604064	ElseStatement	else		1603853	0					
ANR	1604065	ExpressionStatement	flags |= SLOW_SRC2	1447:3:45883:45901	1603853	0	True				
ANR	1604066	AssignmentExpression	flags |= SLOW_SRC2		1603853	0		|=			
ANR	1604067	Identifier	flags		1603853	0					
ANR	1604068	Identifier	SLOW_SRC2		1603853	1					
ANR	1604069	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1603853	13					
ANR	1604070	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	1450:5:45912:45971	1603853	0	True				
ANR	1604071	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1603853	0		==			
ANR	1604072	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1603853	0		&			
ANR	1604073	Identifier	flags		1603853	0					
ANR	1604074	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1603853	1		|			
ANR	1604075	Identifier	SLOW_SRC1		1603853	0					
ANR	1604076	Identifier	SLOW_SRC2		1603853	1					
ANR	1604077	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1603853	1		|			
ANR	1604078	Identifier	SLOW_SRC1		1603853	0					
ANR	1604079	Identifier	SLOW_SRC2		1603853	1					
ANR	1604080	CompoundStatement		32:67:917:917	1603853	1					
ANR	1604081	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1603853	0					
ANR	1604082	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1451:6:45982:46054	1603853	0	True				
ANR	1604083	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1603853	0		&&			
ANR	1604084	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1603853	0					
ANR	1604085	UnaryOperator	!		1603853	0					
ANR	1604086	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1603853	1					
ANR	1604087	Callee	can_cache		1603853	0					
ANR	1604088	Identifier	can_cache		1603853	0					
ANR	1604089	ArgumentList	src1		1603853	1					
ANR	1604090	Argument	src1		1603853	0					
ANR	1604091	Identifier	src1		1603853	0					
ANR	1604092	Argument	src1w		1603853	1					
ANR	1604093	Identifier	src1w		1603853	0					
ANR	1604094	Argument	src2		1603853	2					
ANR	1604095	Identifier	src2		1603853	0					
ANR	1604096	Argument	src2w		1603853	3					
ANR	1604097	Identifier	src2w		1603853	0					
ANR	1604098	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1603853	1					
ANR	1604099	Callee	can_cache		1603853	0					
ANR	1604100	Identifier	can_cache		1603853	0					
ANR	1604101	ArgumentList	src1		1603853	1					
ANR	1604102	Argument	src1		1603853	0					
ANR	1604103	Identifier	src1		1603853	0					
ANR	1604104	Argument	src1w		1603853	1					
ANR	1604105	Identifier	src1w		1603853	0					
ANR	1604106	Argument	dst		1603853	2					
ANR	1604107	Identifier	dst		1603853	0					
ANR	1604108	Argument	dstw		1603853	3					
ANR	1604109	Identifier	dstw		1603853	0					
ANR	1604110	CompoundStatement		33:81:1000:1000	1603853	1					
ANR	1604111	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w ) )"	1452:3:46062:46138	1603853	0	True				
ANR	1604112	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w ) )"		1603853	0					
ANR	1604113	Callee	FAIL_IF		1603853	0					
ANR	1604114	Identifier	FAIL_IF		1603853	0					
ANR	1604115	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w )"		1603853	1					
ANR	1604116	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w )"		1603853	0					
ANR	1604117	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w )"		1603853	0					
ANR	1604118	Callee	getput_arg		1603853	0					
ANR	1604119	Identifier	getput_arg		1603853	0					
ANR	1604120	ArgumentList	compiler		1603853	1					
ANR	1604121	Argument	compiler		1603853	0					
ANR	1604122	Identifier	compiler		1603853	0					
ANR	1604123	Argument	WORD_SIZE		1603853	1					
ANR	1604124	Identifier	WORD_SIZE		1603853	0					
ANR	1604125	Argument	TMP_REG2		1603853	2					
ANR	1604126	Identifier	TMP_REG2		1603853	0					
ANR	1604127	Argument	src2		1603853	3					
ANR	1604128	Identifier	src2		1603853	0					
ANR	1604129	Argument	src2w		1603853	4					
ANR	1604130	Identifier	src2w		1603853	0					
ANR	1604131	Argument	src1		1603853	5					
ANR	1604132	Identifier	src1		1603853	0					
ANR	1604133	Argument	src1w		1603853	6					
ANR	1604134	Identifier	src1w		1603853	0					
ANR	1604135	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1453:3:46143:46217	1603853	1	True				
ANR	1604136	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1603853	0					
ANR	1604137	Callee	FAIL_IF		1603853	0					
ANR	1604138	Identifier	FAIL_IF		1603853	0					
ANR	1604139	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1603853	1					
ANR	1604140	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1603853	0					
ANR	1604141	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1603853	0					
ANR	1604142	Callee	getput_arg		1603853	0					
ANR	1604143	Identifier	getput_arg		1603853	0					
ANR	1604144	ArgumentList	compiler		1603853	1					
ANR	1604145	Argument	compiler		1603853	0					
ANR	1604146	Identifier	compiler		1603853	0					
ANR	1604147	Argument	WORD_SIZE		1603853	1					
ANR	1604148	Identifier	WORD_SIZE		1603853	0					
ANR	1604149	Argument	TMP_REG1		1603853	2					
ANR	1604150	Identifier	TMP_REG1		1603853	0					
ANR	1604151	Argument	src1		1603853	3					
ANR	1604152	Identifier	src1		1603853	0					
ANR	1604153	Argument	src1w		1603853	4					
ANR	1604154	Identifier	src1w		1603853	0					
ANR	1604155	Argument	dst		1603853	5					
ANR	1604156	Identifier	dst		1603853	0					
ANR	1604157	Argument	dstw		1603853	6					
ANR	1604158	Identifier	dstw		1603853	0					
ANR	1604159	ElseStatement	else		1603853	0					
ANR	1604160	CompoundStatement		37:7:1173:1173	1603853	0					
ANR	1604161	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	1456:3:46235:46311	1603853	0	True				
ANR	1604162	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1603853	0					
ANR	1604163	Callee	FAIL_IF		1603853	0					
ANR	1604164	Identifier	FAIL_IF		1603853	0					
ANR	1604165	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w )"		1603853	1					
ANR	1604166	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w )"		1603853	0					
ANR	1604167	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w )"		1603853	0					
ANR	1604168	Callee	getput_arg		1603853	0					
ANR	1604169	Identifier	getput_arg		1603853	0					
ANR	1604170	ArgumentList	compiler		1603853	1					
ANR	1604171	Argument	compiler		1603853	0					
ANR	1604172	Identifier	compiler		1603853	0					
ANR	1604173	Argument	WORD_SIZE		1603853	1					
ANR	1604174	Identifier	WORD_SIZE		1603853	0					
ANR	1604175	Argument	TMP_REG1		1603853	2					
ANR	1604176	Identifier	TMP_REG1		1603853	0					
ANR	1604177	Argument	src1		1603853	3					
ANR	1604178	Identifier	src1		1603853	0					
ANR	1604179	Argument	src1w		1603853	4					
ANR	1604180	Identifier	src1w		1603853	0					
ANR	1604181	Argument	src2		1603853	5					
ANR	1604182	Identifier	src2		1603853	0					
ANR	1604183	Argument	src2w		1603853	6					
ANR	1604184	Identifier	src2w		1603853	0					
ANR	1604185	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1457:3:46316:46390	1603853	1	True				
ANR	1604186	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1603853	0					
ANR	1604187	Callee	FAIL_IF		1603853	0					
ANR	1604188	Identifier	FAIL_IF		1603853	0					
ANR	1604189	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1603853	1					
ANR	1604190	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1603853	0					
ANR	1604191	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1603853	0					
ANR	1604192	Callee	getput_arg		1603853	0					
ANR	1604193	Identifier	getput_arg		1603853	0					
ANR	1604194	ArgumentList	compiler		1603853	1					
ANR	1604195	Argument	compiler		1603853	0					
ANR	1604196	Identifier	compiler		1603853	0					
ANR	1604197	Argument	WORD_SIZE		1603853	1					
ANR	1604198	Identifier	WORD_SIZE		1603853	0					
ANR	1604199	Argument	TMP_REG2		1603853	2					
ANR	1604200	Identifier	TMP_REG2		1603853	0					
ANR	1604201	Argument	src2		1603853	3					
ANR	1604202	Identifier	src2		1603853	0					
ANR	1604203	Argument	src2w		1603853	4					
ANR	1604204	Identifier	src2w		1603853	0					
ANR	1604205	Argument	dst		1603853	5					
ANR	1604206	Identifier	dst		1603853	0					
ANR	1604207	Argument	dstw		1603853	6					
ANR	1604208	Identifier	dstw		1603853	0					
ANR	1604209	ElseStatement	else		1603853	0					
ANR	1604210	IfStatement	if ( flags & SLOW_SRC1 )		1603853	0					
ANR	1604211	Condition	flags & SLOW_SRC1	1460:10:46409:46425	1603853	0	True				
ANR	1604212	BitAndExpression	flags & SLOW_SRC1		1603853	0		&			
ANR	1604213	Identifier	flags		1603853	0					
ANR	1604214	Identifier	SLOW_SRC1		1603853	1					
ANR	1604215	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1461:2:46430:46504	1603853	1	True				
ANR	1604216	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1603853	0					
ANR	1604217	Callee	FAIL_IF		1603853	0					
ANR	1604218	Identifier	FAIL_IF		1603853	0					
ANR	1604219	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1603853	1					
ANR	1604220	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1603853	0					
ANR	1604221	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1603853	0					
ANR	1604222	Callee	getput_arg		1603853	0					
ANR	1604223	Identifier	getput_arg		1603853	0					
ANR	1604224	ArgumentList	compiler		1603853	1					
ANR	1604225	Argument	compiler		1603853	0					
ANR	1604226	Identifier	compiler		1603853	0					
ANR	1604227	Argument	WORD_SIZE		1603853	1					
ANR	1604228	Identifier	WORD_SIZE		1603853	0					
ANR	1604229	Argument	TMP_REG1		1603853	2					
ANR	1604230	Identifier	TMP_REG1		1603853	0					
ANR	1604231	Argument	src1		1603853	3					
ANR	1604232	Identifier	src1		1603853	0					
ANR	1604233	Argument	src1w		1603853	4					
ANR	1604234	Identifier	src1w		1603853	0					
ANR	1604235	Argument	dst		1603853	5					
ANR	1604236	Identifier	dst		1603853	0					
ANR	1604237	Argument	dstw		1603853	6					
ANR	1604238	Identifier	dstw		1603853	0					
ANR	1604239	ElseStatement	else		1603853	0					
ANR	1604240	IfStatement	if ( flags & SLOW_SRC2 )		1603853	0					
ANR	1604241	Condition	flags & SLOW_SRC2	1462:10:46516:46532	1603853	0	True				
ANR	1604242	BitAndExpression	flags & SLOW_SRC2		1603853	0		&			
ANR	1604243	Identifier	flags		1603853	0					
ANR	1604244	Identifier	SLOW_SRC2		1603853	1					
ANR	1604245	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1463:2:46537:46611	1603853	1	True				
ANR	1604246	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1603853	0					
ANR	1604247	Callee	FAIL_IF		1603853	0					
ANR	1604248	Identifier	FAIL_IF		1603853	0					
ANR	1604249	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1603853	1					
ANR	1604250	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1603853	0					
ANR	1604251	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1603853	0					
ANR	1604252	Callee	getput_arg		1603853	0					
ANR	1604253	Identifier	getput_arg		1603853	0					
ANR	1604254	ArgumentList	compiler		1603853	1					
ANR	1604255	Argument	compiler		1603853	0					
ANR	1604256	Identifier	compiler		1603853	0					
ANR	1604257	Argument	WORD_SIZE		1603853	1					
ANR	1604258	Identifier	WORD_SIZE		1603853	0					
ANR	1604259	Argument	TMP_REG2		1603853	2					
ANR	1604260	Identifier	TMP_REG2		1603853	0					
ANR	1604261	Argument	src2		1603853	3					
ANR	1604262	Identifier	src2		1603853	0					
ANR	1604263	Argument	src2w		1603853	4					
ANR	1604264	Identifier	src2w		1603853	0					
ANR	1604265	Argument	dst		1603853	5					
ANR	1604266	Identifier	dst		1603853	0					
ANR	1604267	Argument	dstw		1603853	6					
ANR	1604268	Identifier	dstw		1603853	0					
ANR	1604269	IfStatement	if ( src1 & SLJIT_MEM )		1603853	14					
ANR	1604270	Condition	src1 & SLJIT_MEM	1465:5:46619:46634	1603853	0	True				
ANR	1604271	BitAndExpression	src1 & SLJIT_MEM		1603853	0		&			
ANR	1604272	Identifier	src1		1603853	0					
ANR	1604273	Identifier	SLJIT_MEM		1603853	1					
ANR	1604274	ExpressionStatement	src1 = TMP_REG1	1466:2:46639:46654	1603853	1	True				
ANR	1604275	AssignmentExpression	src1 = TMP_REG1		1603853	0		=			
ANR	1604276	Identifier	src1		1603853	0					
ANR	1604277	Identifier	TMP_REG1		1603853	1					
ANR	1604278	IfStatement	if ( src2 & SLJIT_MEM )		1603853	15					
ANR	1604279	Condition	src2 & SLJIT_MEM	1467:5:46661:46676	1603853	0	True				
ANR	1604280	BitAndExpression	src2 & SLJIT_MEM		1603853	0		&			
ANR	1604281	Identifier	src2		1603853	0					
ANR	1604282	Identifier	SLJIT_MEM		1603853	1					
ANR	1604283	ExpressionStatement	src2 = TMP_REG2	1468:2:46681:46696	1603853	1	True				
ANR	1604284	AssignmentExpression	src2 = TMP_REG2		1603853	0		=			
ANR	1604285	Identifier	src2		1603853	0					
ANR	1604286	Identifier	TMP_REG2		1603853	1					
ANR	1604287	IfStatement	if ( src1 & SLJIT_IMM )		1603853	16					
ANR	1604288	Condition	src1 & SLJIT_IMM	1470:5:46704:46719	1603853	0	True				
ANR	1604289	BitAndExpression	src1 & SLJIT_IMM		1603853	0		&			
ANR	1604290	Identifier	src1		1603853	0					
ANR	1604291	Identifier	SLJIT_IMM		1603853	1					
ANR	1604292	ExpressionStatement	flags |= ARG1_IMM	1471:2:46724:46741	1603853	1	True				
ANR	1604293	AssignmentExpression	flags |= ARG1_IMM		1603853	0		|=			
ANR	1604294	Identifier	flags		1603853	0					
ANR	1604295	Identifier	ARG1_IMM		1603853	1					
ANR	1604296	ElseStatement	else		1603853	0					
ANR	1604297	ExpressionStatement	src1w = src1	1473:2:46751:46763	1603853	0	True				
ANR	1604298	AssignmentExpression	src1w = src1		1603853	0		=			
ANR	1604299	Identifier	src1w		1603853	0					
ANR	1604300	Identifier	src1		1603853	1					
ANR	1604301	IfStatement	if ( src2 & SLJIT_IMM )		1603853	17					
ANR	1604302	Condition	src2 & SLJIT_IMM	1474:5:46770:46785	1603853	0	True				
ANR	1604303	BitAndExpression	src2 & SLJIT_IMM		1603853	0		&			
ANR	1604304	Identifier	src2		1603853	0					
ANR	1604305	Identifier	SLJIT_IMM		1603853	1					
ANR	1604306	ExpressionStatement	flags |= ARG2_IMM	1475:2:46790:46807	1603853	1	True				
ANR	1604307	AssignmentExpression	flags |= ARG2_IMM		1603853	0		|=			
ANR	1604308	Identifier	flags		1603853	0					
ANR	1604309	Identifier	ARG2_IMM		1603853	1					
ANR	1604310	ElseStatement	else		1603853	0					
ANR	1604311	ExpressionStatement	src2w = src2	1477:2:46817:46829	1603853	0	True				
ANR	1604312	AssignmentExpression	src2w = src2		1603853	0		=			
ANR	1604313	Identifier	src2w		1603853	0					
ANR	1604314	Identifier	src2		1603853	1					
ANR	1604315	IfStatement	if ( dst == SLJIT_UNUSED )		1603853	18					
ANR	1604316	Condition	dst == SLJIT_UNUSED	1479:5:46837:46855	1603853	0	True				
ANR	1604317	EqualityExpression	dst == SLJIT_UNUSED		1603853	0		==			
ANR	1604318	Identifier	dst		1603853	0					
ANR	1604319	Identifier	SLJIT_UNUSED		1603853	1					
ANR	1604320	ExpressionStatement	flags |= UNUSED_RETURN	1480:2:46860:46882	1603853	1	True				
ANR	1604321	AssignmentExpression	flags |= UNUSED_RETURN		1603853	0		|=			
ANR	1604322	Identifier	flags		1603853	0					
ANR	1604323	Identifier	UNUSED_RETURN		1603853	1					
ANR	1604324	ExpressionStatement	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src1w , src2w )"	1482:1:46886:46952	1603853	19	True				
ANR	1604325	CallExpression	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src1w , src2w )"		1603853	0					
ANR	1604326	Callee	emit_op_imm		1603853	0					
ANR	1604327	Identifier	emit_op_imm		1603853	0					
ANR	1604328	ArgumentList	compiler		1603853	1					
ANR	1604329	Argument	compiler		1603853	0					
ANR	1604330	Identifier	compiler		1603853	0					
ANR	1604331	Argument	flags | GET_OPCODE ( op )		1603853	1					
ANR	1604332	InclusiveOrExpression	flags | GET_OPCODE ( op )		1603853	0		|			
ANR	1604333	Identifier	flags		1603853	0					
ANR	1604334	CallExpression	GET_OPCODE ( op )		1603853	1					
ANR	1604335	Callee	GET_OPCODE		1603853	0					
ANR	1604336	Identifier	GET_OPCODE		1603853	0					
ANR	1604337	ArgumentList	op		1603853	1					
ANR	1604338	Argument	op		1603853	0					
ANR	1604339	Identifier	op		1603853	0					
ANR	1604340	Argument	dst_r		1603853	2					
ANR	1604341	Identifier	dst_r		1603853	0					
ANR	1604342	Argument	src1w		1603853	3					
ANR	1604343	Identifier	src1w		1603853	0					
ANR	1604344	Argument	src2w		1603853	4					
ANR	1604345	Identifier	src2w		1603853	0					
ANR	1604346	IfStatement	if ( dst & SLJIT_MEM )		1603853	20					
ANR	1604347	Condition	dst & SLJIT_MEM	1484:5:46960:46974	1603853	0	True				
ANR	1604348	BitAndExpression	dst & SLJIT_MEM		1603853	0		&			
ANR	1604349	Identifier	dst		1603853	0					
ANR	1604350	Identifier	SLJIT_MEM		1603853	1					
ANR	1604351	CompoundStatement		66:22:1920:1920	1603853	1					
ANR	1604352	IfStatement	if ( ! ( flags & SLOW_DEST ) )		1603853	0					
ANR	1604353	Condition	! ( flags & SLOW_DEST )	1485:6:46985:47004	1603853	0	True				
ANR	1604354	UnaryOperationExpression	! ( flags & SLOW_DEST )		1603853	0					
ANR	1604355	UnaryOperator	!		1603853	0					
ANR	1604356	BitAndExpression	flags & SLOW_DEST		1603853	1		&			
ANR	1604357	Identifier	flags		1603853	0					
ANR	1604358	Identifier	SLOW_DEST		1603853	1					
ANR	1604359	CompoundStatement		67:28:1950:1950	1603853	1					
ANR	1604360	ExpressionStatement	"getput_arg_fast ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"	1486:3:47012:47074	1603853	0	True				
ANR	1604361	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1603853	0					
ANR	1604362	Callee	getput_arg_fast		1603853	0					
ANR	1604363	Identifier	getput_arg_fast		1603853	0					
ANR	1604364	ArgumentList	compiler		1603853	1					
ANR	1604365	Argument	compiler		1603853	0					
ANR	1604366	Identifier	compiler		1603853	0					
ANR	1604367	Argument	WORD_SIZE | STORE		1603853	1					
ANR	1604368	InclusiveOrExpression	WORD_SIZE | STORE		1603853	0		|			
ANR	1604369	Identifier	WORD_SIZE		1603853	0					
ANR	1604370	Identifier	STORE		1603853	1					
ANR	1604371	Argument	dst_r		1603853	2					
ANR	1604372	Identifier	dst_r		1603853	0					
ANR	1604373	Argument	dst		1603853	3					
ANR	1604374	Identifier	dst		1603853	0					
ANR	1604375	Argument	dstw		1603853	4					
ANR	1604376	Identifier	dstw		1603853	0					
ANR	1604377	ReturnStatement	return compiler -> error ;	1487:3:47079:47101	1603853	1	True				
ANR	1604378	PtrMemberAccess	compiler -> error		1603853	0					
ANR	1604379	Identifier	compiler		1603853	0					
ANR	1604380	Identifier	error		1603853	1					
ANR	1604381	ReturnStatement	"return getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG1 , dst , dstw , 0 , 0 ) ;"	1489:2:47109:47182	1603853	1	True				
ANR	1604382	CallExpression	"getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG1 , dst , dstw , 0 , 0 )"		1603853	0					
ANR	1604383	Callee	getput_arg		1603853	0					
ANR	1604384	Identifier	getput_arg		1603853	0					
ANR	1604385	ArgumentList	compiler		1603853	1					
ANR	1604386	Argument	compiler		1603853	0					
ANR	1604387	Identifier	compiler		1603853	0					
ANR	1604388	Argument	WORD_SIZE | STORE		1603853	1					
ANR	1604389	InclusiveOrExpression	WORD_SIZE | STORE		1603853	0		|			
ANR	1604390	Identifier	WORD_SIZE		1603853	0					
ANR	1604391	Identifier	STORE		1603853	1					
ANR	1604392	Argument	TMP_REG1		1603853	2					
ANR	1604393	Identifier	TMP_REG1		1603853	0					
ANR	1604394	Argument	dst		1603853	3					
ANR	1604395	Identifier	dst		1603853	0					
ANR	1604396	Argument	dstw		1603853	4					
ANR	1604397	Identifier	dstw		1603853	0					
ANR	1604398	Argument	0		1603853	5					
ANR	1604399	PrimaryExpression	0		1603853	0					
ANR	1604400	Argument	0		1603853	6					
ANR	1604401	PrimaryExpression	0		1603853	0					
ANR	1604402	ReturnStatement	return SLJIT_SUCCESS ;	1491:1:47188:47208	1603853	21	True				
ANR	1604403	Identifier	SLJIT_SUCCESS		1603853	0					
ANR	1604404	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1603853	1					
ANR	1604405	Identifier	sljit_emit_op2		1603853	2					
ANR	1604406	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1603853	3					
ANR	1604407	Parameter	struct sljit_compiler * compiler	1415:49:44916:44946	1603853	0	True				
ANR	1604408	ParameterType	struct sljit_compiler *		1603853	0					
ANR	1604409	Identifier	compiler		1603853	1					
ANR	1604410	Parameter	sljit_si op	1415:82:44949:44959	1603853	1	True				
ANR	1604411	ParameterType	sljit_si		1603853	0					
ANR	1604412	Identifier	op		1603853	1					
ANR	1604413	Parameter	sljit_si dst	1416:1:44963:44974	1603853	2	True				
ANR	1604414	ParameterType	sljit_si		1603853	0					
ANR	1604415	Identifier	dst		1603853	1					
ANR	1604416	Parameter	sljit_sw dstw	1416:15:44977:44989	1603853	3	True				
ANR	1604417	ParameterType	sljit_sw		1603853	0					
ANR	1604418	Identifier	dstw		1603853	1					
ANR	1604419	Parameter	sljit_si src1	1417:1:44993:45005	1603853	4	True				
ANR	1604420	ParameterType	sljit_si		1603853	0					
ANR	1604421	Identifier	src1		1603853	1					
ANR	1604422	Parameter	sljit_sw src1w	1417:16:45008:45021	1603853	5	True				
ANR	1604423	ParameterType	sljit_sw		1603853	0					
ANR	1604424	Identifier	src1w		1603853	1					
ANR	1604425	Parameter	sljit_si src2	1418:1:45025:45037	1603853	6	True				
ANR	1604426	ParameterType	sljit_si		1603853	0					
ANR	1604427	Identifier	src2		1603853	1					
ANR	1604428	Parameter	sljit_sw src2w	1418:16:45040:45053	1603853	7	True				
ANR	1604429	ParameterType	sljit_sw		1603853	0					
ANR	1604430	Identifier	src2w		1603853	1					
ANR	1604431	CFGEntryNode	ENTRY		1603853		True				
ANR	1604432	CFGExitNode	EXIT		1603853		True				
ANR	1604433	Symbol	SLOW_SRC2		1603853						
ANR	1604434	Symbol	TMP_REG2		1603853						
ANR	1604435	Symbol	compiler -> cache_argw		1603853						
ANR	1604436	Symbol	TMP_REG1		1603853						
ANR	1604437	Symbol	src1w		1603853						
ANR	1604438	Symbol	dst		1603853						
ANR	1604439	Symbol	SLOW_DEST		1603853						
ANR	1604440	Symbol	SLJIT_MEM		1603853						
ANR	1604441	Symbol	SLOW_SRC1		1603853						
ANR	1604442	Symbol	flags		1603853						
ANR	1604443	Symbol	SLOW_IS_REG		1603853						
ANR	1604444	Symbol	UNUSED_RETURN		1603853						
ANR	1604445	Symbol	* compiler		1603853						
ANR	1604446	Symbol	ARG_TEST		1603853						
ANR	1604447	Symbol	dst_r		1603853						
ANR	1604448	Symbol	GET_FLAGS		1603853						
ANR	1604449	Symbol	GET_OPCODE		1603853						
ANR	1604450	Symbol	SLJIT_IMM		1603853						
ANR	1604451	Symbol	SLJIT_KEEP_FLAGS		1603853						
ANR	1604452	Symbol	getput_arg		1603853						
ANR	1604453	Symbol	ARG1_IMM		1603853						
ANR	1604454	Symbol	KEEP_FLAGS		1603853						
ANR	1604455	Symbol	compiler		1603853						
ANR	1604456	Symbol	src2w		1603853						
ANR	1604457	Symbol	can_cache		1603853						
ANR	1604458	Symbol	op		1603853						
ANR	1604459	Symbol	check_sljit_emit_op2		1603853						
ANR	1604460	Symbol	compiler -> cache_arg		1603853						
ANR	1604461	Symbol	ARG2_IMM		1603853						
ANR	1604462	Symbol	SLJIT_SUCCESS		1603853						
ANR	1604463	Symbol	SET_FLAGS		1603853						
ANR	1604464	Symbol	SLJIT_UNUSED		1603853						
ANR	1604465	Symbol	src1		1603853						
ANR	1604466	Symbol	STORE		1603853						
ANR	1604467	Symbol	src2		1603853						
ANR	1604468	Symbol	getput_arg_fast		1603853						
ANR	1604469	Symbol	dstw		1603853						
ANR	1604470	Symbol	compiler -> error		1603853						
ANR	1604471	Symbol	WORD_SIZE		1603853						
ANR	1604472	Function	sljit_get_register_index	1494:0:47213:47365							
ANR	1604473	FunctionDef	sljit_get_register_index (sljit_si reg)		1604472	0					
ANR	1604474	CompoundStatement		1495:0:47286:47365	1604472	0					
ANR	1604475	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	1496:1:47289:47341	1604472	0	True				
ANR	1604476	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1604472	0					
ANR	1604477	Callee	CHECK_REG_INDEX		1604472	0					
ANR	1604478	Identifier	CHECK_REG_INDEX		1604472	0					
ANR	1604479	ArgumentList	check_sljit_get_register_index ( reg )		1604472	1					
ANR	1604480	Argument	check_sljit_get_register_index ( reg )		1604472	0					
ANR	1604481	CallExpression	check_sljit_get_register_index ( reg )		1604472	0					
ANR	1604482	Callee	check_sljit_get_register_index		1604472	0					
ANR	1604483	Identifier	check_sljit_get_register_index		1604472	0					
ANR	1604484	ArgumentList	reg		1604472	1					
ANR	1604485	Argument	reg		1604472	0					
ANR	1604486	Identifier	reg		1604472	0					
ANR	1604487	ReturnStatement	return reg_map [ reg ] ;	1497:1:47344:47363	1604472	1	True				
ANR	1604488	ArrayIndexing	reg_map [ reg ]		1604472	0					
ANR	1604489	Identifier	reg_map		1604472	0					
ANR	1604490	Identifier	reg		1604472	1					
ANR	1604491	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1604472	1					
ANR	1604492	Identifier	sljit_get_register_index		1604472	2					
ANR	1604493	ParameterList	sljit_si reg		1604472	3					
ANR	1604494	Parameter	sljit_si reg	1494:59:47272:47283	1604472	0	True				
ANR	1604495	ParameterType	sljit_si		1604472	0					
ANR	1604496	Identifier	reg		1604472	1					
ANR	1604497	CFGEntryNode	ENTRY		1604472		True				
ANR	1604498	CFGExitNode	EXIT		1604472		True				
ANR	1604499	Symbol	reg		1604472						
ANR	1604500	Symbol	reg_map		1604472						
ANR	1604501	Symbol	* reg_map		1604472						
ANR	1604502	Symbol	* reg		1604472						
ANR	1604503	Symbol	check_sljit_get_register_index		1604472						
ANR	1604504	Function	sljit_get_float_register_index	1500:0:47368:47528							
ANR	1604505	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1604504	0					
ANR	1604506	CompoundStatement		1501:0:47447:47528	1604504	0					
ANR	1604507	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	1502:1:47450:47508	1604504	0	True				
ANR	1604508	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1604504	0					
ANR	1604509	Callee	CHECK_REG_INDEX		1604504	0					
ANR	1604510	Identifier	CHECK_REG_INDEX		1604504	0					
ANR	1604511	ArgumentList	check_sljit_get_float_register_index ( reg )		1604504	1					
ANR	1604512	Argument	check_sljit_get_float_register_index ( reg )		1604504	0					
ANR	1604513	CallExpression	check_sljit_get_float_register_index ( reg )		1604504	0					
ANR	1604514	Callee	check_sljit_get_float_register_index		1604504	0					
ANR	1604515	Identifier	check_sljit_get_float_register_index		1604504	0					
ANR	1604516	ArgumentList	reg		1604504	1					
ANR	1604517	Argument	reg		1604504	0					
ANR	1604518	Identifier	reg		1604504	0					
ANR	1604519	ReturnStatement	return reg << 1 ;	1503:1:47511:47526	1604504	1	True				
ANR	1604520	ShiftExpression	reg << 1		1604504	0		<<			
ANR	1604521	Identifier	reg		1604504	0					
ANR	1604522	PrimaryExpression	1		1604504	1					
ANR	1604523	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1604504	1					
ANR	1604524	Identifier	sljit_get_float_register_index		1604504	2					
ANR	1604525	ParameterList	sljit_si reg		1604504	3					
ANR	1604526	Parameter	sljit_si reg	1500:65:47433:47444	1604504	0	True				
ANR	1604527	ParameterType	sljit_si		1604504	0					
ANR	1604528	Identifier	reg		1604504	1					
ANR	1604529	CFGEntryNode	ENTRY		1604504		True				
ANR	1604530	CFGExitNode	EXIT		1604504		True				
ANR	1604531	Symbol	reg		1604504						
ANR	1604532	Symbol	check_sljit_get_float_register_index		1604504						
ANR	1604533	Function	sljit_emit_op_custom	1506:0:47531:47868							
ANR	1604534	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1604533	0					
ANR	1604535	CompoundStatement		1508:0:47654:47868	1604533	0					
ANR	1604536	ExpressionStatement	CHECK_ERROR ( )	1509:1:47657:47670	1604533	0	True				
ANR	1604537	CallExpression	CHECK_ERROR ( )		1604533	0					
ANR	1604538	Callee	CHECK_ERROR		1604533	0					
ANR	1604539	Identifier	CHECK_ERROR		1604533	0					
ANR	1604540	ArgumentList			1604533	1					
ANR	1604541	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	1510:1:47673:47735	1604533	1	True				
ANR	1604542	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1604533	0					
ANR	1604543	Callee	CHECK		1604533	0					
ANR	1604544	Identifier	CHECK		1604533	0					
ANR	1604545	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1604533	1					
ANR	1604546	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1604533	0					
ANR	1604547	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1604533	0					
ANR	1604548	Callee	check_sljit_emit_op_custom		1604533	0					
ANR	1604549	Identifier	check_sljit_emit_op_custom		1604533	0					
ANR	1604550	ArgumentList	compiler		1604533	1					
ANR	1604551	Argument	compiler		1604533	0					
ANR	1604552	Identifier	compiler		1604533	0					
ANR	1604553	Argument	instruction		1604533	1					
ANR	1604554	Identifier	instruction		1604533	0					
ANR	1604555	Argument	size		1604533	2					
ANR	1604556	Identifier	size		1604533	0					
ANR	1604557	IfStatement	if ( size == 2 )		1604533	2					
ANR	1604558	Condition	size == 2	1512:5:47743:47751	1604533	0	True				
ANR	1604559	EqualityExpression	size == 2		1604533	0		==			
ANR	1604560	Identifier	size		1604533	0					
ANR	1604561	PrimaryExpression	2		1604533	1					
ANR	1604562	ReturnStatement	"return push_inst16 ( compiler , * ( sljit_uh * ) instruction ) ;"	1513:2:47756:47809	1604533	1	True				
ANR	1604563	CallExpression	"push_inst16 ( compiler , * ( sljit_uh * ) instruction )"		1604533	0					
ANR	1604564	Callee	push_inst16		1604533	0					
ANR	1604565	Identifier	push_inst16		1604533	0					
ANR	1604566	ArgumentList	compiler		1604533	1					
ANR	1604567	Argument	compiler		1604533	0					
ANR	1604568	Identifier	compiler		1604533	0					
ANR	1604569	Argument	* ( sljit_uh * ) instruction		1604533	1					
ANR	1604570	UnaryOperationExpression	* ( sljit_uh * ) instruction		1604533	0					
ANR	1604571	UnaryOperator	*		1604533	0					
ANR	1604572	CastExpression	( sljit_uh * ) instruction		1604533	1					
ANR	1604573	CastTarget	sljit_uh *		1604533	0					
ANR	1604574	Identifier	instruction		1604533	1					
ANR	1604575	ReturnStatement	"return push_inst32 ( compiler , * ( sljit_ins * ) instruction ) ;"	1514:1:47812:47866	1604533	3	True				
ANR	1604576	CallExpression	"push_inst32 ( compiler , * ( sljit_ins * ) instruction )"		1604533	0					
ANR	1604577	Callee	push_inst32		1604533	0					
ANR	1604578	Identifier	push_inst32		1604533	0					
ANR	1604579	ArgumentList	compiler		1604533	1					
ANR	1604580	Argument	compiler		1604533	0					
ANR	1604581	Identifier	compiler		1604533	0					
ANR	1604582	Argument	* ( sljit_ins * ) instruction		1604533	1					
ANR	1604583	UnaryOperationExpression	* ( sljit_ins * ) instruction		1604533	0					
ANR	1604584	UnaryOperator	*		1604533	0					
ANR	1604585	CastExpression	( sljit_ins * ) instruction		1604533	1					
ANR	1604586	CastTarget	sljit_ins *		1604533	0					
ANR	1604587	Identifier	instruction		1604533	1					
ANR	1604588	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1604533	1					
ANR	1604589	Identifier	sljit_emit_op_custom		1604533	2					
ANR	1604590	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1604533	3					
ANR	1604591	Parameter	struct sljit_compiler * compiler	1506:55:47586:47616	1604533	0	True				
ANR	1604592	ParameterType	struct sljit_compiler *		1604533	0					
ANR	1604593	Identifier	compiler		1604533	1					
ANR	1604594	Parameter	void * instruction	1507:1:47620:47636	1604533	1	True				
ANR	1604595	ParameterType	void *		1604533	0					
ANR	1604596	Identifier	instruction		1604533	1					
ANR	1604597	Parameter	sljit_si size	1507:20:47639:47651	1604533	2	True				
ANR	1604598	ParameterType	sljit_si		1604533	0					
ANR	1604599	Identifier	size		1604533	1					
ANR	1604600	CFGEntryNode	ENTRY		1604533		True				
ANR	1604601	CFGExitNode	EXIT		1604533		True				
ANR	1604602	Symbol	size		1604533						
ANR	1604603	Symbol	* instruction		1604533						
ANR	1604604	Symbol	* ( sljit_ins * ) instruction		1604533						
ANR	1604605	Symbol	instruction		1604533						
ANR	1604606	Symbol	* ( sljit_uh * ) instruction		1604533						
ANR	1604607	Symbol	check_sljit_emit_op_custom		1604533						
ANR	1604608	Symbol	push_inst16		1604533						
ANR	1604609	Symbol	compiler		1604533						
ANR	1604610	Symbol	push_inst32		1604533						
ANR	1604611	Function	sljit_is_fpu_available	1521:0:48100:48280							
ANR	1604612	FunctionDef	sljit_is_fpu_available ()		1604611	0					
ANR	1604613	CompoundStatement		1522:0:48163:48280	1604611	0					
ANR	1604614	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	1524:1:48196:48225	1604611	0	True				
ANR	1604615	Identifier	SLJIT_IS_FPU_AVAILABLE		1604611	0					
ANR	1604616	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1604611	1					
ANR	1604617	Identifier	sljit_is_fpu_available		1604611	2					
ANR	1604618	ParameterList			1604611	3					
ANR	1604619	CFGEntryNode	ENTRY		1604611		True				
ANR	1604620	CFGExitNode	EXIT		1604611		True				
ANR	1604621	Symbol	SLJIT_IS_FPU_AVAILABLE		1604611						
ANR	1604622	Function	emit_fop_mem	1533:0:48311:50693							
ANR	1604623	FunctionDef	"emit_fop_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1604622	0					
ANR	1604624	CompoundStatement		1534:0:48432:50693	1604622	0					
ANR	1604625	IdentifierDeclStatement	sljit_sw tmp ;	1535:1:48435:48447	1604622	0	True				
ANR	1604626	IdentifierDecl	tmp		1604622	0					
ANR	1604627	IdentifierDeclType	sljit_sw		1604622	0					
ANR	1604628	Identifier	tmp		1604622	1					
ANR	1604629	IdentifierDeclStatement	sljit_uw imm ;	1536:1:48450:48462	1604622	1	True				
ANR	1604630	IdentifierDecl	imm		1604622	0					
ANR	1604631	IdentifierDeclType	sljit_uw		1604622	0					
ANR	1604632	Identifier	imm		1604622	1					
ANR	1604633	IdentifierDeclStatement	sljit_sw inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) ) ;	1537:1:48465:48530	1604622	2	True				
ANR	1604634	IdentifierDecl	inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1604622	0					
ANR	1604635	IdentifierDeclType	sljit_sw		1604622	0					
ANR	1604636	Identifier	inst		1604622	1					
ANR	1604637	AssignmentExpression	inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1604622	2		=			
ANR	1604638	Identifier	inst		1604622	0					
ANR	1604639	InclusiveOrExpression	VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1604622	1		|			
ANR	1604640	Identifier	VSTR_F32		1604622	0					
ANR	1604641	BitAndExpression	flags & ( SLJIT_SINGLE_OP | FPU_LOAD )		1604622	1		&			
ANR	1604642	Identifier	flags		1604622	0					
ANR	1604643	InclusiveOrExpression	SLJIT_SINGLE_OP | FPU_LOAD		1604622	1		|			
ANR	1604644	Identifier	SLJIT_SINGLE_OP		1604622	0					
ANR	1604645	Identifier	FPU_LOAD		1604622	1					
ANR	1604646	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1539:1:48534:48563	1604622	3	True				
ANR	1604647	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1604622	0					
ANR	1604648	Callee	SLJIT_ASSERT		1604622	0					
ANR	1604649	Identifier	SLJIT_ASSERT		1604622	0					
ANR	1604650	ArgumentList	arg & SLJIT_MEM		1604622	1					
ANR	1604651	Argument	arg & SLJIT_MEM		1604622	0					
ANR	1604652	BitAndExpression	arg & SLJIT_MEM		1604622	0		&			
ANR	1604653	Identifier	arg		1604622	0					
ANR	1604654	Identifier	SLJIT_MEM		1604622	1					
ANR	1604655	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1604622	4					
ANR	1604656	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	1542:5:48601:48635	1604622	0	True				
ANR	1604657	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1604622	0					
ANR	1604658	Callee	SLJIT_UNLIKELY		1604622	0					
ANR	1604659	Identifier	SLJIT_UNLIKELY		1604622	0					
ANR	1604660	ArgumentList	arg & OFFS_REG_MASK		1604622	1					
ANR	1604661	Argument	arg & OFFS_REG_MASK		1604622	0					
ANR	1604662	BitAndExpression	arg & OFFS_REG_MASK		1604622	0		&			
ANR	1604663	Identifier	arg		1604622	0					
ANR	1604664	Identifier	OFFS_REG_MASK		1604622	1					
ANR	1604665	CompoundStatement		9:42:205:205	1604622	1					
ANR	1604666	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) ) )"	1543:2:48642:48760	1604622	0	True				
ANR	1604667	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) ) )"		1604622	0					
ANR	1604668	Callee	FAIL_IF		1604622	0					
ANR	1604669	Identifier	FAIL_IF		1604622	0					
ANR	1604670	ArgumentList	"push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) )"		1604622	1					
ANR	1604671	Argument	"push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) )"		1604622	0					
ANR	1604672	CallExpression	"push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) )"		1604622	0					
ANR	1604673	Callee	push_inst32		1604622	0					
ANR	1604674	Identifier	push_inst32		1604622	0					
ANR	1604675	ArgumentList	compiler		1604622	1					
ANR	1604676	Argument	compiler		1604622	0					
ANR	1604677	Identifier	compiler		1604622	0					
ANR	1604678	Argument	ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1604622	1					
ANR	1604679	InclusiveOrExpression	ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1604622	0		|			
ANR	1604680	Identifier	ADD_W		1604622	0					
ANR	1604681	InclusiveOrExpression	RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1604622	1		|			
ANR	1604682	CallExpression	RD4 ( TMP_REG2 )		1604622	0					
ANR	1604683	Callee	RD4		1604622	0					
ANR	1604684	Identifier	RD4		1604622	0					
ANR	1604685	ArgumentList	TMP_REG2		1604622	1					
ANR	1604686	Argument	TMP_REG2		1604622	0					
ANR	1604687	Identifier	TMP_REG2		1604622	0					
ANR	1604688	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1604622	1		|			
ANR	1604689	CallExpression	RN4 ( arg & REG_MASK )		1604622	0					
ANR	1604690	Callee	RN4		1604622	0					
ANR	1604691	Identifier	RN4		1604622	0					
ANR	1604692	ArgumentList	arg & REG_MASK		1604622	1					
ANR	1604693	Argument	arg & REG_MASK		1604622	0					
ANR	1604694	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1604695	Identifier	arg		1604622	0					
ANR	1604696	Identifier	REG_MASK		1604622	1					
ANR	1604697	InclusiveOrExpression	RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1604622	1		|			
ANR	1604698	CallExpression	RM4 ( OFFS_REG ( arg ) )		1604622	0					
ANR	1604699	Callee	RM4		1604622	0					
ANR	1604700	Identifier	RM4		1604622	0					
ANR	1604701	ArgumentList	OFFS_REG ( arg )		1604622	1					
ANR	1604702	Argument	OFFS_REG ( arg )		1604622	0					
ANR	1604703	CallExpression	OFFS_REG ( arg )		1604622	0					
ANR	1604704	Callee	OFFS_REG		1604622	0					
ANR	1604705	Identifier	OFFS_REG		1604622	0					
ANR	1604706	ArgumentList	arg		1604622	1					
ANR	1604707	Argument	arg		1604622	0					
ANR	1604708	Identifier	arg		1604622	0					
ANR	1604709	ShiftExpression	( argw & 0x3 ) << 6		1604622	1		<<			
ANR	1604710	BitAndExpression	argw & 0x3		1604622	0		&			
ANR	1604711	Identifier	argw		1604622	0					
ANR	1604712	PrimaryExpression	0x3		1604622	1					
ANR	1604713	PrimaryExpression	6		1604622	1					
ANR	1604714	ExpressionStatement	arg = SLJIT_MEM | TMP_REG2	1544:2:48764:48790	1604622	1	True				
ANR	1604715	AssignmentExpression	arg = SLJIT_MEM | TMP_REG2		1604622	0		=			
ANR	1604716	Identifier	arg		1604622	0					
ANR	1604717	InclusiveOrExpression	SLJIT_MEM | TMP_REG2		1604622	1		|			
ANR	1604718	Identifier	SLJIT_MEM		1604622	0					
ANR	1604719	Identifier	TMP_REG2		1604622	1					
ANR	1604720	ExpressionStatement	argw = 0	1545:2:48794:48802	1604622	2	True				
ANR	1604721	AssignmentExpression	argw = 0		1604622	0		=			
ANR	1604722	Identifier	argw		1604622	0					
ANR	1604723	PrimaryExpression	0		1604622	1					
ANR	1604724	IfStatement	if ( ( arg & REG_MASK ) && ( argw & 0x3 ) == 0 )		1604622	5					
ANR	1604725	Condition	( arg & REG_MASK ) && ( argw & 0x3 ) == 0	1548:5:48813:48849	1604622	0	True				
ANR	1604726	AndExpression	( arg & REG_MASK ) && ( argw & 0x3 ) == 0		1604622	0		&&			
ANR	1604727	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1604728	Identifier	arg		1604622	0					
ANR	1604729	Identifier	REG_MASK		1604622	1					
ANR	1604730	EqualityExpression	( argw & 0x3 ) == 0		1604622	1		==			
ANR	1604731	BitAndExpression	argw & 0x3		1604622	0		&			
ANR	1604732	Identifier	argw		1604622	0					
ANR	1604733	PrimaryExpression	0x3		1604622	1					
ANR	1604734	PrimaryExpression	0		1604622	1					
ANR	1604735	CompoundStatement		15:44:419:419	1604622	1					
ANR	1604736	IfStatement	if ( ! ( argw & ~0x3fc ) )		1604622	0					
ANR	1604737	Condition	! ( argw & ~0x3fc )	1549:6:48860:48875	1604622	0	True				
ANR	1604738	UnaryOperationExpression	! ( argw & ~0x3fc )		1604622	0					
ANR	1604739	UnaryOperator	!		1604622	0					
ANR	1604740	BitAndExpression	argw & ~0x3fc		1604622	1		&			
ANR	1604741	Identifier	argw		1604622	0					
ANR	1604742	Identifier	~0x3fc		1604622	1					
ANR	1604743	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 ) ) ;"	1550:3:48881:48973	1604622	1	True				
ANR	1604744	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 ) )"		1604622	0					
ANR	1604745	Callee	push_inst32		1604622	0					
ANR	1604746	Identifier	push_inst32		1604622	0					
ANR	1604747	ArgumentList	compiler		1604622	1					
ANR	1604748	Argument	compiler		1604622	0					
ANR	1604749	Identifier	compiler		1604622	0					
ANR	1604750	Argument	inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1604622	1					
ANR	1604751	InclusiveOrExpression	inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1604622	0		|			
ANR	1604752	Identifier	inst		1604622	0					
ANR	1604753	InclusiveOrExpression	0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1604622	1		|			
ANR	1604754	PrimaryExpression	0x800000		1604622	0					
ANR	1604755	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1604622	1		|			
ANR	1604756	CallExpression	RN4 ( arg & REG_MASK )		1604622	0					
ANR	1604757	Callee	RN4		1604622	0					
ANR	1604758	Identifier	RN4		1604622	0					
ANR	1604759	ArgumentList	arg & REG_MASK		1604622	1					
ANR	1604760	Argument	arg & REG_MASK		1604622	0					
ANR	1604761	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1604762	Identifier	arg		1604622	0					
ANR	1604763	Identifier	REG_MASK		1604622	1					
ANR	1604764	InclusiveOrExpression	DD4 ( reg ) | ( argw >> 2 )		1604622	1		|			
ANR	1604765	CallExpression	DD4 ( reg )		1604622	0					
ANR	1604766	Callee	DD4		1604622	0					
ANR	1604767	Identifier	DD4		1604622	0					
ANR	1604768	ArgumentList	reg		1604622	1					
ANR	1604769	Argument	reg		1604622	0					
ANR	1604770	Identifier	reg		1604622	0					
ANR	1604771	ShiftExpression	argw >> 2		1604622	1		>>			
ANR	1604772	Identifier	argw		1604622	0					
ANR	1604773	PrimaryExpression	2		1604622	1					
ANR	1604774	IfStatement	if ( ! ( - argw & ~0x3fc ) )		1604622	1					
ANR	1604775	Condition	! ( - argw & ~0x3fc )	1551:6:48981:48997	1604622	0	True				
ANR	1604776	UnaryOperationExpression	! ( - argw & ~0x3fc )		1604622	0					
ANR	1604777	UnaryOperator	!		1604622	0					
ANR	1604778	BitAndExpression	- argw & ~0x3fc		1604622	1		&			
ANR	1604779	UnaryOperationExpression	- argw		1604622	0					
ANR	1604780	UnaryOperator	-		1604622	0					
ANR	1604781	Identifier	argw		1604622	1					
ANR	1604782	Identifier	~0x3fc		1604622	1					
ANR	1604783	ReturnStatement	"return push_inst32 ( compiler , inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 ) ) ;"	1552:3:49003:49085	1604622	1	True				
ANR	1604784	CallExpression	"push_inst32 ( compiler , inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 ) )"		1604622	0					
ANR	1604785	Callee	push_inst32		1604622	0					
ANR	1604786	Identifier	push_inst32		1604622	0					
ANR	1604787	ArgumentList	compiler		1604622	1					
ANR	1604788	Argument	compiler		1604622	0					
ANR	1604789	Identifier	compiler		1604622	0					
ANR	1604790	Argument	inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 )		1604622	1					
ANR	1604791	InclusiveOrExpression	inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 )		1604622	0		|			
ANR	1604792	Identifier	inst		1604622	0					
ANR	1604793	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 )		1604622	1		|			
ANR	1604794	CallExpression	RN4 ( arg & REG_MASK )		1604622	0					
ANR	1604795	Callee	RN4		1604622	0					
ANR	1604796	Identifier	RN4		1604622	0					
ANR	1604797	ArgumentList	arg & REG_MASK		1604622	1					
ANR	1604798	Argument	arg & REG_MASK		1604622	0					
ANR	1604799	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1604800	Identifier	arg		1604622	0					
ANR	1604801	Identifier	REG_MASK		1604622	1					
ANR	1604802	InclusiveOrExpression	DD4 ( reg ) | ( - argw >> 2 )		1604622	1		|			
ANR	1604803	CallExpression	DD4 ( reg )		1604622	0					
ANR	1604804	Callee	DD4		1604622	0					
ANR	1604805	Identifier	DD4		1604622	0					
ANR	1604806	ArgumentList	reg		1604622	1					
ANR	1604807	Argument	reg		1604622	0					
ANR	1604808	Identifier	reg		1604622	0					
ANR	1604809	ShiftExpression	- argw >> 2		1604622	1		>>			
ANR	1604810	UnaryOperationExpression	- argw		1604622	0					
ANR	1604811	UnaryOperator	-		1604622	0					
ANR	1604812	Identifier	argw		1604622	1					
ANR	1604813	PrimaryExpression	2		1604622	1					
ANR	1604814	ExpressionStatement	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )	1556:1:49110:49146	1604622	6	True				
ANR	1604815	CallExpression	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )		1604622	0					
ANR	1604816	Callee	SLJIT_ASSERT		1604622	0					
ANR	1604817	Identifier	SLJIT_ASSERT		1604622	0					
ANR	1604818	ArgumentList	! ( arg & OFFS_REG_MASK )		1604622	1					
ANR	1604819	Argument	! ( arg & OFFS_REG_MASK )		1604622	0					
ANR	1604820	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1604622	0					
ANR	1604821	UnaryOperator	!		1604622	0					
ANR	1604822	BitAndExpression	arg & OFFS_REG_MASK		1604622	1		&			
ANR	1604823	Identifier	arg		1604622	0					
ANR	1604824	Identifier	OFFS_REG_MASK		1604622	1					
ANR	1604825	IfStatement	if ( compiler -> cache_arg == arg )		1604622	7					
ANR	1604826	Condition	compiler -> cache_arg == arg	1557:5:49153:49178	1604622	0	True				
ANR	1604827	EqualityExpression	compiler -> cache_arg == arg		1604622	0		==			
ANR	1604828	PtrMemberAccess	compiler -> cache_arg		1604622	0					
ANR	1604829	Identifier	compiler		1604622	0					
ANR	1604830	Identifier	cache_arg		1604622	1					
ANR	1604831	Identifier	arg		1604622	1					
ANR	1604832	CompoundStatement		24:33:748:748	1604622	1					
ANR	1604833	ExpressionStatement	tmp = argw - compiler -> cache_argw	1558:2:49185:49218	1604622	0	True				
ANR	1604834	AssignmentExpression	tmp = argw - compiler -> cache_argw		1604622	0		=			
ANR	1604835	Identifier	tmp		1604622	0					
ANR	1604836	AdditiveExpression	argw - compiler -> cache_argw		1604622	1		-			
ANR	1604837	Identifier	argw		1604622	0					
ANR	1604838	PtrMemberAccess	compiler -> cache_argw		1604622	1					
ANR	1604839	Identifier	compiler		1604622	0					
ANR	1604840	Identifier	cache_argw		1604622	1					
ANR	1604841	IfStatement	if ( ! ( tmp & ~0x3fc ) )		1604622	1					
ANR	1604842	Condition	! ( tmp & ~0x3fc )	1559:6:49226:49240	1604622	0	True				
ANR	1604843	UnaryOperationExpression	! ( tmp & ~0x3fc )		1604622	0					
ANR	1604844	UnaryOperator	!		1604622	0					
ANR	1604845	BitAndExpression	tmp & ~0x3fc		1604622	1		&			
ANR	1604846	Identifier	tmp		1604622	0					
ANR	1604847	Identifier	~0x3fc		1604622	1					
ANR	1604848	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 ) ) ;"	1560:3:49246:49331	1604622	1	True				
ANR	1604849	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 ) )"		1604622	0					
ANR	1604850	Callee	push_inst32		1604622	0					
ANR	1604851	Identifier	push_inst32		1604622	0					
ANR	1604852	ArgumentList	compiler		1604622	1					
ANR	1604853	Argument	compiler		1604622	0					
ANR	1604854	Identifier	compiler		1604622	0					
ANR	1604855	Argument	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1604622	1					
ANR	1604856	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1604622	0		|			
ANR	1604857	Identifier	inst		1604622	0					
ANR	1604858	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1604622	1		|			
ANR	1604859	PrimaryExpression	0x800000		1604622	0					
ANR	1604860	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1604622	1		|			
ANR	1604861	CallExpression	RN4 ( TMP_REG3 )		1604622	0					
ANR	1604862	Callee	RN4		1604622	0					
ANR	1604863	Identifier	RN4		1604622	0					
ANR	1604864	ArgumentList	TMP_REG3		1604622	1					
ANR	1604865	Argument	TMP_REG3		1604622	0					
ANR	1604866	Identifier	TMP_REG3		1604622	0					
ANR	1604867	InclusiveOrExpression	DD4 ( reg ) | ( tmp >> 2 )		1604622	1		|			
ANR	1604868	CallExpression	DD4 ( reg )		1604622	0					
ANR	1604869	Callee	DD4		1604622	0					
ANR	1604870	Identifier	DD4		1604622	0					
ANR	1604871	ArgumentList	reg		1604622	1					
ANR	1604872	Argument	reg		1604622	0					
ANR	1604873	Identifier	reg		1604622	0					
ANR	1604874	ShiftExpression	tmp >> 2		1604622	1		>>			
ANR	1604875	Identifier	tmp		1604622	0					
ANR	1604876	PrimaryExpression	2		1604622	1					
ANR	1604877	IfStatement	if ( ! ( - tmp & ~0x3fc ) )		1604622	2					
ANR	1604878	Condition	! ( - tmp & ~0x3fc )	1561:6:49339:49354	1604622	0	True				
ANR	1604879	UnaryOperationExpression	! ( - tmp & ~0x3fc )		1604622	0					
ANR	1604880	UnaryOperator	!		1604622	0					
ANR	1604881	BitAndExpression	- tmp & ~0x3fc		1604622	1		&			
ANR	1604882	UnaryOperationExpression	- tmp		1604622	0					
ANR	1604883	UnaryOperator	-		1604622	0					
ANR	1604884	Identifier	tmp		1604622	1					
ANR	1604885	Identifier	~0x3fc		1604622	1					
ANR	1604886	ReturnStatement	"return push_inst32 ( compiler , inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 ) ) ;"	1562:3:49360:49435	1604622	1	True				
ANR	1604887	CallExpression	"push_inst32 ( compiler , inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 ) )"		1604622	0					
ANR	1604888	Callee	push_inst32		1604622	0					
ANR	1604889	Identifier	push_inst32		1604622	0					
ANR	1604890	ArgumentList	compiler		1604622	1					
ANR	1604891	Argument	compiler		1604622	0					
ANR	1604892	Identifier	compiler		1604622	0					
ANR	1604893	Argument	inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 )		1604622	1					
ANR	1604894	InclusiveOrExpression	inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 )		1604622	0		|			
ANR	1604895	Identifier	inst		1604622	0					
ANR	1604896	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 )		1604622	1		|			
ANR	1604897	CallExpression	RN4 ( TMP_REG3 )		1604622	0					
ANR	1604898	Callee	RN4		1604622	0					
ANR	1604899	Identifier	RN4		1604622	0					
ANR	1604900	ArgumentList	TMP_REG3		1604622	1					
ANR	1604901	Argument	TMP_REG3		1604622	0					
ANR	1604902	Identifier	TMP_REG3		1604622	0					
ANR	1604903	InclusiveOrExpression	DD4 ( reg ) | ( - tmp >> 2 )		1604622	1		|			
ANR	1604904	CallExpression	DD4 ( reg )		1604622	0					
ANR	1604905	Callee	DD4		1604622	0					
ANR	1604906	Identifier	DD4		1604622	0					
ANR	1604907	ArgumentList	reg		1604622	1					
ANR	1604908	Argument	reg		1604622	0					
ANR	1604909	Identifier	reg		1604622	0					
ANR	1604910	ShiftExpression	- tmp >> 2		1604622	1		>>			
ANR	1604911	UnaryOperationExpression	- tmp		1604622	0					
ANR	1604912	UnaryOperator	-		1604622	0					
ANR	1604913	Identifier	tmp		1604622	1					
ANR	1604914	PrimaryExpression	2		1604622	1					
ANR	1604915	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED )"		1604622	3					
ANR	1604916	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED"	1563:6:49443:49516	1604622	0	True				
ANR	1604917	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED"		1604622	0		!=			
ANR	1604918	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp )"		1604622	0					
ANR	1604919	Callee	emit_set_delta		1604622	0					
ANR	1604920	Identifier	emit_set_delta		1604622	0					
ANR	1604921	ArgumentList	compiler		1604622	1					
ANR	1604922	Argument	compiler		1604622	0					
ANR	1604923	Identifier	compiler		1604622	0					
ANR	1604924	Argument	TMP_REG3		1604622	1					
ANR	1604925	Identifier	TMP_REG3		1604622	0					
ANR	1604926	Argument	TMP_REG3		1604622	2					
ANR	1604927	Identifier	TMP_REG3		1604622	0					
ANR	1604928	Argument	tmp		1604622	3					
ANR	1604929	Identifier	tmp		1604622	0					
ANR	1604930	Identifier	SLJIT_ERR_UNSUPPORTED		1604622	1					
ANR	1604931	CompoundStatement		30:82:1086:1086	1604622	1					
ANR	1604932	ExpressionStatement	FAIL_IF ( compiler -> error )	1564:3:49524:49548	1604622	0	True				
ANR	1604933	CallExpression	FAIL_IF ( compiler -> error )		1604622	0					
ANR	1604934	Callee	FAIL_IF		1604622	0					
ANR	1604935	Identifier	FAIL_IF		1604622	0					
ANR	1604936	ArgumentList	compiler -> error		1604622	1					
ANR	1604937	Argument	compiler -> error		1604622	0					
ANR	1604938	PtrMemberAccess	compiler -> error		1604622	0					
ANR	1604939	Identifier	compiler		1604622	0					
ANR	1604940	Identifier	error		1604622	1					
ANR	1604941	ExpressionStatement	compiler -> cache_argw = argw	1565:3:49553:49580	1604622	1	True				
ANR	1604942	AssignmentExpression	compiler -> cache_argw = argw		1604622	0		=			
ANR	1604943	PtrMemberAccess	compiler -> cache_argw		1604622	0					
ANR	1604944	Identifier	compiler		1604622	0					
ANR	1604945	Identifier	cache_argw		1604622	1					
ANR	1604946	Identifier	argw		1604622	1					
ANR	1604947	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) ) ;"	1566:3:49585:49657	1604622	2	True				
ANR	1604948	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) )"		1604622	0					
ANR	1604949	Callee	push_inst32		1604622	0					
ANR	1604950	Identifier	push_inst32		1604622	0					
ANR	1604951	ArgumentList	compiler		1604622	1					
ANR	1604952	Argument	compiler		1604622	0					
ANR	1604953	Identifier	compiler		1604622	0					
ANR	1604954	Argument	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	1					
ANR	1604955	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	0		|			
ANR	1604956	Identifier	inst		1604622	0					
ANR	1604957	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	1		|			
ANR	1604958	PrimaryExpression	0x800000		1604622	0					
ANR	1604959	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	1		|			
ANR	1604960	CallExpression	RN4 ( TMP_REG3 )		1604622	0					
ANR	1604961	Callee	RN4		1604622	0					
ANR	1604962	Identifier	RN4		1604622	0					
ANR	1604963	ArgumentList	TMP_REG3		1604622	1					
ANR	1604964	Argument	TMP_REG3		1604622	0					
ANR	1604965	Identifier	TMP_REG3		1604622	0					
ANR	1604966	CallExpression	DD4 ( reg )		1604622	1					
ANR	1604967	Callee	DD4		1604622	0					
ANR	1604968	Identifier	DD4		1604622	0					
ANR	1604969	ArgumentList	reg		1604622	1					
ANR	1604970	Argument	reg		1604622	0					
ANR	1604971	Identifier	reg		1604622	0					
ANR	1604972	IfStatement	if ( arg & REG_MASK )		1604622	8					
ANR	1604973	Condition	arg & REG_MASK	1570:5:49672:49685	1604622	0	True				
ANR	1604974	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1604975	Identifier	arg		1604622	0					
ANR	1604976	Identifier	REG_MASK		1604622	1					
ANR	1604977	CompoundStatement		37:21:1255:1255	1604622	1					
ANR	1604978	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED )"		1604622	0					
ANR	1604979	Condition	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED"	1571:6:49696:49776	1604622	0	True				
ANR	1604980	EqualityExpression	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED"		1604622	0		!=			
ANR	1604981	CallExpression	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw )"		1604622	0					
ANR	1604982	Callee	emit_set_delta		1604622	0					
ANR	1604983	Identifier	emit_set_delta		1604622	0					
ANR	1604984	ArgumentList	compiler		1604622	1					
ANR	1604985	Argument	compiler		1604622	0					
ANR	1604986	Identifier	compiler		1604622	0					
ANR	1604987	Argument	TMP_REG1		1604622	1					
ANR	1604988	Identifier	TMP_REG1		1604622	0					
ANR	1604989	Argument	arg & REG_MASK		1604622	2					
ANR	1604990	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1604991	Identifier	arg		1604622	0					
ANR	1604992	Identifier	REG_MASK		1604622	1					
ANR	1604993	Argument	argw		1604622	3					
ANR	1604994	Identifier	argw		1604622	0					
ANR	1604995	Identifier	SLJIT_ERR_UNSUPPORTED		1604622	1					
ANR	1604996	CompoundStatement		38:89:1346:1346	1604622	1					
ANR	1604997	ExpressionStatement	FAIL_IF ( compiler -> error )	1572:3:49784:49808	1604622	0	True				
ANR	1604998	CallExpression	FAIL_IF ( compiler -> error )		1604622	0					
ANR	1604999	Callee	FAIL_IF		1604622	0					
ANR	1605000	Identifier	FAIL_IF		1604622	0					
ANR	1605001	ArgumentList	compiler -> error		1604622	1					
ANR	1605002	Argument	compiler -> error		1604622	0					
ANR	1605003	PtrMemberAccess	compiler -> error		1604622	0					
ANR	1605004	Identifier	compiler		1604622	0					
ANR	1605005	Identifier	error		1604622	1					
ANR	1605006	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) ) ;"	1573:3:49813:49885	1604622	1	True				
ANR	1605007	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) )"		1604622	0					
ANR	1605008	Callee	push_inst32		1604622	0					
ANR	1605009	Identifier	push_inst32		1604622	0					
ANR	1605010	ArgumentList	compiler		1604622	1					
ANR	1605011	Argument	compiler		1604622	0					
ANR	1605012	Identifier	compiler		1604622	0					
ANR	1605013	Argument	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg )		1604622	1					
ANR	1605014	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg )		1604622	0		|			
ANR	1605015	Identifier	inst		1604622	0					
ANR	1605016	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg )		1604622	1		|			
ANR	1605017	PrimaryExpression	0x800000		1604622	0					
ANR	1605018	InclusiveOrExpression	RN4 ( TMP_REG1 ) | DD4 ( reg )		1604622	1		|			
ANR	1605019	CallExpression	RN4 ( TMP_REG1 )		1604622	0					
ANR	1605020	Callee	RN4		1604622	0					
ANR	1605021	Identifier	RN4		1604622	0					
ANR	1605022	ArgumentList	TMP_REG1		1604622	1					
ANR	1605023	Argument	TMP_REG1		1604622	0					
ANR	1605024	Identifier	TMP_REG1		1604622	0					
ANR	1605025	CallExpression	DD4 ( reg )		1604622	1					
ANR	1605026	Callee	DD4		1604622	0					
ANR	1605027	Identifier	DD4		1604622	0					
ANR	1605028	ArgumentList	reg		1604622	1					
ANR	1605029	Argument	reg		1604622	0					
ANR	1605030	Identifier	reg		1604622	0					
ANR	1605031	ExpressionStatement	imm = get_imm ( argw & ~0x3fc )	1575:2:49893:49921	1604622	1	True				
ANR	1605032	AssignmentExpression	imm = get_imm ( argw & ~0x3fc )		1604622	0		=			
ANR	1605033	Identifier	imm		1604622	0					
ANR	1605034	CallExpression	get_imm ( argw & ~0x3fc )		1604622	1					
ANR	1605035	Callee	get_imm		1604622	0					
ANR	1605036	Identifier	get_imm		1604622	0					
ANR	1605037	ArgumentList	argw & ~0x3fc		1604622	1					
ANR	1605038	Argument	argw & ~0x3fc		1604622	0					
ANR	1605039	BitAndExpression	argw & ~0x3fc		1604622	0		&			
ANR	1605040	Identifier	argw		1604622	0					
ANR	1605041	Identifier	~0x3fc		1604622	1					
ANR	1605042	IfStatement	if ( imm != INVALID_IMM )		1604622	2					
ANR	1605043	Condition	imm != INVALID_IMM	1576:6:49929:49946	1604622	0	True				
ANR	1605044	EqualityExpression	imm != INVALID_IMM		1604622	0		!=			
ANR	1605045	Identifier	imm		1604622	0					
ANR	1605046	Identifier	INVALID_IMM		1604622	1					
ANR	1605047	CompoundStatement		43:26:1516:1516	1604622	1					
ANR	1605048	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"	1577:3:49954:50036	1604622	0	True				
ANR	1605049	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"		1604622	0					
ANR	1605050	Callee	FAIL_IF		1604622	0					
ANR	1605051	Identifier	FAIL_IF		1604622	0					
ANR	1605052	ArgumentList	"push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1604622	1					
ANR	1605053	Argument	"push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1604622	0					
ANR	1605054	CallExpression	"push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1604622	0					
ANR	1605055	Callee	push_inst32		1604622	0					
ANR	1605056	Identifier	push_inst32		1604622	0					
ANR	1605057	ArgumentList	compiler		1604622	1					
ANR	1605058	Argument	compiler		1604622	0					
ANR	1605059	Identifier	compiler		1604622	0					
ANR	1605060	Argument	ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1604622	1					
ANR	1605061	InclusiveOrExpression	ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1604622	0		|			
ANR	1605062	Identifier	ADD_WI		1604622	0					
ANR	1605063	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1604622	1		|			
ANR	1605064	CallExpression	RD4 ( TMP_REG1 )		1604622	0					
ANR	1605065	Callee	RD4		1604622	0					
ANR	1605066	Identifier	RD4		1604622	0					
ANR	1605067	ArgumentList	TMP_REG1		1604622	1					
ANR	1605068	Argument	TMP_REG1		1604622	0					
ANR	1605069	Identifier	TMP_REG1		1604622	0					
ANR	1605070	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | imm		1604622	1		|			
ANR	1605071	CallExpression	RN4 ( arg & REG_MASK )		1604622	0					
ANR	1605072	Callee	RN4		1604622	0					
ANR	1605073	Identifier	RN4		1604622	0					
ANR	1605074	ArgumentList	arg & REG_MASK		1604622	1					
ANR	1605075	Argument	arg & REG_MASK		1604622	0					
ANR	1605076	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1605077	Identifier	arg		1604622	0					
ANR	1605078	Identifier	REG_MASK		1604622	1					
ANR	1605079	Identifier	imm		1604622	1					
ANR	1605080	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) ) ;"	1578:3:50041:50137	1604622	1	True				
ANR	1605081	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) )"		1604622	0					
ANR	1605082	Callee	push_inst32		1604622	0					
ANR	1605083	Identifier	push_inst32		1604622	0					
ANR	1605084	ArgumentList	compiler		1604622	1					
ANR	1605085	Argument	compiler		1604622	0					
ANR	1605086	Identifier	compiler		1604622	0					
ANR	1605087	Argument	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	1					
ANR	1605088	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	0		|			
ANR	1605089	Identifier	inst		1604622	0					
ANR	1605090	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	1		|			
ANR	1605091	PrimaryExpression	0x800000		1604622	0					
ANR	1605092	InclusiveOrExpression	RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	1		|			
ANR	1605093	CallExpression	RN4 ( TMP_REG1 )		1604622	0					
ANR	1605094	Callee	RN4		1604622	0					
ANR	1605095	Identifier	RN4		1604622	0					
ANR	1605096	ArgumentList	TMP_REG1		1604622	1					
ANR	1605097	Argument	TMP_REG1		1604622	0					
ANR	1605098	Identifier	TMP_REG1		1604622	0					
ANR	1605099	InclusiveOrExpression	DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	1		|			
ANR	1605100	CallExpression	DD4 ( reg )		1604622	0					
ANR	1605101	Callee	DD4		1604622	0					
ANR	1605102	Identifier	DD4		1604622	0					
ANR	1605103	ArgumentList	reg		1604622	1					
ANR	1605104	Argument	reg		1604622	0					
ANR	1605105	Identifier	reg		1604622	0					
ANR	1605106	ShiftExpression	( argw & 0x3fc ) >> 2		1604622	1		>>			
ANR	1605107	BitAndExpression	argw & 0x3fc		1604622	0		&			
ANR	1605108	Identifier	argw		1604622	0					
ANR	1605109	PrimaryExpression	0x3fc		1604622	1					
ANR	1605110	PrimaryExpression	2		1604622	1					
ANR	1605111	ExpressionStatement	imm = get_imm ( - argw & ~0x3fc )	1580:2:50145:50174	1604622	3	True				
ANR	1605112	AssignmentExpression	imm = get_imm ( - argw & ~0x3fc )		1604622	0		=			
ANR	1605113	Identifier	imm		1604622	0					
ANR	1605114	CallExpression	get_imm ( - argw & ~0x3fc )		1604622	1					
ANR	1605115	Callee	get_imm		1604622	0					
ANR	1605116	Identifier	get_imm		1604622	0					
ANR	1605117	ArgumentList	- argw & ~0x3fc		1604622	1					
ANR	1605118	Argument	- argw & ~0x3fc		1604622	0					
ANR	1605119	BitAndExpression	- argw & ~0x3fc		1604622	0		&			
ANR	1605120	UnaryOperationExpression	- argw		1604622	0					
ANR	1605121	UnaryOperator	-		1604622	0					
ANR	1605122	Identifier	argw		1604622	1					
ANR	1605123	Identifier	~0x3fc		1604622	1					
ANR	1605124	IfStatement	if ( imm != INVALID_IMM )		1604622	4					
ANR	1605125	Condition	imm != INVALID_IMM	1581:6:50182:50199	1604622	0	True				
ANR	1605126	EqualityExpression	imm != INVALID_IMM		1604622	0		!=			
ANR	1605127	Identifier	imm		1604622	0					
ANR	1605128	Identifier	INVALID_IMM		1604622	1					
ANR	1605129	CompoundStatement		48:26:1769:1769	1604622	1					
ANR	1605130	ExpressionStatement	argw = - argw	1582:3:50207:50219	1604622	0	True				
ANR	1605131	AssignmentExpression	argw = - argw		1604622	0		=			
ANR	1605132	Identifier	argw		1604622	0					
ANR	1605133	UnaryOperationExpression	- argw		1604622	1					
ANR	1605134	UnaryOperator	-		1604622	0					
ANR	1605135	Identifier	argw		1604622	1					
ANR	1605136	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"	1583:3:50224:50306	1604622	1	True				
ANR	1605137	CallExpression	"FAIL_IF ( push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"		1604622	0					
ANR	1605138	Callee	FAIL_IF		1604622	0					
ANR	1605139	Identifier	FAIL_IF		1604622	0					
ANR	1605140	ArgumentList	"push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1604622	1					
ANR	1605141	Argument	"push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1604622	0					
ANR	1605142	CallExpression	"push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1604622	0					
ANR	1605143	Callee	push_inst32		1604622	0					
ANR	1605144	Identifier	push_inst32		1604622	0					
ANR	1605145	ArgumentList	compiler		1604622	1					
ANR	1605146	Argument	compiler		1604622	0					
ANR	1605147	Identifier	compiler		1604622	0					
ANR	1605148	Argument	SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1604622	1					
ANR	1605149	InclusiveOrExpression	SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1604622	0		|			
ANR	1605150	Identifier	SUB_WI		1604622	0					
ANR	1605151	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1604622	1		|			
ANR	1605152	CallExpression	RD4 ( TMP_REG1 )		1604622	0					
ANR	1605153	Callee	RD4		1604622	0					
ANR	1605154	Identifier	RD4		1604622	0					
ANR	1605155	ArgumentList	TMP_REG1		1604622	1					
ANR	1605156	Argument	TMP_REG1		1604622	0					
ANR	1605157	Identifier	TMP_REG1		1604622	0					
ANR	1605158	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | imm		1604622	1		|			
ANR	1605159	CallExpression	RN4 ( arg & REG_MASK )		1604622	0					
ANR	1605160	Callee	RN4		1604622	0					
ANR	1605161	Identifier	RN4		1604622	0					
ANR	1605162	ArgumentList	arg & REG_MASK		1604622	1					
ANR	1605163	Argument	arg & REG_MASK		1604622	0					
ANR	1605164	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1605165	Identifier	arg		1604622	0					
ANR	1605166	Identifier	REG_MASK		1604622	1					
ANR	1605167	Identifier	imm		1604622	1					
ANR	1605168	ReturnStatement	"return push_inst32 ( compiler , inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) ) ;"	1584:3:50311:50396	1604622	2	True				
ANR	1605169	CallExpression	"push_inst32 ( compiler , inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) )"		1604622	0					
ANR	1605170	Callee	push_inst32		1604622	0					
ANR	1605171	Identifier	push_inst32		1604622	0					
ANR	1605172	ArgumentList	compiler		1604622	1					
ANR	1605173	Argument	compiler		1604622	0					
ANR	1605174	Identifier	compiler		1604622	0					
ANR	1605175	Argument	inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	1					
ANR	1605176	InclusiveOrExpression	inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	0		|			
ANR	1605177	Identifier	inst		1604622	0					
ANR	1605178	InclusiveOrExpression	RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	1		|			
ANR	1605179	CallExpression	RN4 ( TMP_REG1 )		1604622	0					
ANR	1605180	Callee	RN4		1604622	0					
ANR	1605181	Identifier	RN4		1604622	0					
ANR	1605182	ArgumentList	TMP_REG1		1604622	1					
ANR	1605183	Argument	TMP_REG1		1604622	0					
ANR	1605184	Identifier	TMP_REG1		1604622	0					
ANR	1605185	InclusiveOrExpression	DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1604622	1		|			
ANR	1605186	CallExpression	DD4 ( reg )		1604622	0					
ANR	1605187	Callee	DD4		1604622	0					
ANR	1605188	Identifier	DD4		1604622	0					
ANR	1605189	ArgumentList	reg		1604622	1					
ANR	1605190	Argument	reg		1604622	0					
ANR	1605191	Identifier	reg		1604622	0					
ANR	1605192	ShiftExpression	( argw & 0x3fc ) >> 2		1604622	1		>>			
ANR	1605193	BitAndExpression	argw & 0x3fc		1604622	0		&			
ANR	1605194	Identifier	argw		1604622	0					
ANR	1605195	PrimaryExpression	0x3fc		1604622	1					
ANR	1605196	PrimaryExpression	2		1604622	1					
ANR	1605197	ExpressionStatement	compiler -> cache_arg = arg	1588:1:50407:50432	1604622	9	True				
ANR	1605198	AssignmentExpression	compiler -> cache_arg = arg		1604622	0		=			
ANR	1605199	PtrMemberAccess	compiler -> cache_arg		1604622	0					
ANR	1605200	Identifier	compiler		1604622	0					
ANR	1605201	Identifier	cache_arg		1604622	1					
ANR	1605202	Identifier	arg		1604622	1					
ANR	1605203	ExpressionStatement	compiler -> cache_argw = argw	1589:1:50435:50462	1604622	10	True				
ANR	1605204	AssignmentExpression	compiler -> cache_argw = argw		1604622	0		=			
ANR	1605205	PtrMemberAccess	compiler -> cache_argw		1604622	0					
ANR	1605206	Identifier	compiler		1604622	0					
ANR	1605207	Identifier	cache_argw		1604622	1					
ANR	1605208	Identifier	argw		1604622	1					
ANR	1605209	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1591:1:50466:50515	1604622	11	True				
ANR	1605210	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1604622	0					
ANR	1605211	Callee	FAIL_IF		1604622	0					
ANR	1605212	Identifier	FAIL_IF		1604622	0					
ANR	1605213	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1604622	1					
ANR	1605214	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1604622	0					
ANR	1605215	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1604622	0					
ANR	1605216	Callee	load_immediate		1604622	0					
ANR	1605217	Identifier	load_immediate		1604622	0					
ANR	1605218	ArgumentList	compiler		1604622	1					
ANR	1605219	Argument	compiler		1604622	0					
ANR	1605220	Identifier	compiler		1604622	0					
ANR	1605221	Argument	TMP_REG3		1604622	1					
ANR	1605222	Identifier	TMP_REG3		1604622	0					
ANR	1605223	Argument	argw		1604622	2					
ANR	1605224	Identifier	argw		1604622	0					
ANR	1605225	IfStatement	if ( arg & REG_MASK )		1604622	12					
ANR	1605226	Condition	arg & REG_MASK	1592:5:50522:50535	1604622	0	True				
ANR	1605227	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1605228	Identifier	arg		1604622	0					
ANR	1605229	Identifier	REG_MASK		1604622	1					
ANR	1605230	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) ) )"	1593:2:50540:50616	1604622	1	True				
ANR	1605231	CallExpression	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) ) )"		1604622	0					
ANR	1605232	Callee	FAIL_IF		1604622	0					
ANR	1605233	Identifier	FAIL_IF		1604622	0					
ANR	1605234	ArgumentList	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) )"		1604622	1					
ANR	1605235	Argument	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) )"		1604622	0					
ANR	1605236	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) )"		1604622	0					
ANR	1605237	Callee	push_inst16		1604622	0					
ANR	1605238	Identifier	push_inst16		1604622	0					
ANR	1605239	ArgumentList	compiler		1604622	1					
ANR	1605240	Argument	compiler		1604622	0					
ANR	1605241	Identifier	compiler		1604622	0					
ANR	1605242	Argument	"ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) )"		1604622	1					
ANR	1605243	InclusiveOrExpression	"ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) )"		1604622	0		|			
ANR	1605244	Identifier	ADD		1604622	0					
ANR	1605245	CallExpression	"SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) )"		1604622	1					
ANR	1605246	Callee	SET_REGS44		1604622	0					
ANR	1605247	Identifier	SET_REGS44		1604622	0					
ANR	1605248	ArgumentList	TMP_REG3		1604622	1					
ANR	1605249	Argument	TMP_REG3		1604622	0					
ANR	1605250	Identifier	TMP_REG3		1604622	0					
ANR	1605251	Argument	arg & REG_MASK		1604622	1					
ANR	1605252	BitAndExpression	arg & REG_MASK		1604622	0		&			
ANR	1605253	Identifier	arg		1604622	0					
ANR	1605254	Identifier	REG_MASK		1604622	1					
ANR	1605255	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) ) ;"	1594:1:50619:50691	1604622	13	True				
ANR	1605256	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) )"		1604622	0					
ANR	1605257	Callee	push_inst32		1604622	0					
ANR	1605258	Identifier	push_inst32		1604622	0					
ANR	1605259	ArgumentList	compiler		1604622	1					
ANR	1605260	Argument	compiler		1604622	0					
ANR	1605261	Identifier	compiler		1604622	0					
ANR	1605262	Argument	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	1					
ANR	1605263	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	0		|			
ANR	1605264	Identifier	inst		1604622	0					
ANR	1605265	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	1		|			
ANR	1605266	PrimaryExpression	0x800000		1604622	0					
ANR	1605267	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg )		1604622	1		|			
ANR	1605268	CallExpression	RN4 ( TMP_REG3 )		1604622	0					
ANR	1605269	Callee	RN4		1604622	0					
ANR	1605270	Identifier	RN4		1604622	0					
ANR	1605271	ArgumentList	TMP_REG3		1604622	1					
ANR	1605272	Argument	TMP_REG3		1604622	0					
ANR	1605273	Identifier	TMP_REG3		1604622	0					
ANR	1605274	CallExpression	DD4 ( reg )		1604622	1					
ANR	1605275	Callee	DD4		1604622	0					
ANR	1605276	Identifier	DD4		1604622	0					
ANR	1605277	ArgumentList	reg		1604622	1					
ANR	1605278	Argument	reg		1604622	0					
ANR	1605279	Identifier	reg		1604622	0					
ANR	1605280	ReturnType	static sljit_si		1604622	1					
ANR	1605281	Identifier	emit_fop_mem		1604622	2					
ANR	1605282	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1604622	3					
ANR	1605283	Parameter	struct sljit_compiler * compiler	1533:29:48340:48370	1604622	0	True				
ANR	1605284	ParameterType	struct sljit_compiler *		1604622	0					
ANR	1605285	Identifier	compiler		1604622	1					
ANR	1605286	Parameter	sljit_si flags	1533:62:48373:48386	1604622	1	True				
ANR	1605287	ParameterType	sljit_si		1604622	0					
ANR	1605288	Identifier	flags		1604622	1					
ANR	1605289	Parameter	sljit_si reg	1533:78:48389:48400	1604622	2	True				
ANR	1605290	ParameterType	sljit_si		1604622	0					
ANR	1605291	Identifier	reg		1604622	1					
ANR	1605292	Parameter	sljit_si arg	1533:92:48403:48414	1604622	3	True				
ANR	1605293	ParameterType	sljit_si		1604622	0					
ANR	1605294	Identifier	arg		1604622	1					
ANR	1605295	Parameter	sljit_sw argw	1533:106:48417:48429	1604622	4	True				
ANR	1605296	ParameterType	sljit_sw		1604622	0					
ANR	1605297	Identifier	argw		1604622	1					
ANR	1605298	CFGEntryNode	ENTRY		1604622		True				
ANR	1605299	CFGExitNode	EXIT		1604622		True				
ANR	1605300	Symbol	TMP_REG3		1604622						
ANR	1605301	Symbol	TMP_REG2		1604622						
ANR	1605302	Symbol	ADD		1604622						
ANR	1605303	Symbol	compiler -> cache_argw		1604622						
ANR	1605304	Symbol	TMP_REG1		1604622						
ANR	1605305	Symbol	RD4		1604622						
ANR	1605306	Symbol	SLJIT_MEM		1604622						
ANR	1605307	Symbol	push_inst16		1604622						
ANR	1605308	Symbol	flags		1604622						
ANR	1605309	Symbol	imm		1604622						
ANR	1605310	Symbol	* compiler		1604622						
ANR	1605311	Symbol	argw		1604622						
ANR	1605312	Symbol	emit_set_delta		1604622						
ANR	1605313	Symbol	SET_REGS44		1604622						
ANR	1605314	Symbol	load_immediate		1604622						
ANR	1605315	Symbol	reg		1604622						
ANR	1605316	Symbol	tmp		1604622						
ANR	1605317	Symbol	INVALID_IMM		1604622						
ANR	1605318	Symbol	arg		1604622						
ANR	1605319	Symbol	RM4		1604622						
ANR	1605320	Symbol	ADD_WI		1604622						
ANR	1605321	Symbol	compiler		1604622						
ANR	1605322	Symbol	push_inst32		1604622						
ANR	1605323	Symbol	REG_MASK		1604622						
ANR	1605324	Symbol	compiler -> cache_arg		1604622						
ANR	1605325	Symbol	SLJIT_SINGLE_OP		1604622						
ANR	1605326	Symbol	OFFS_REG_MASK		1604622						
ANR	1605327	Symbol	ADD_W		1604622						
ANR	1605328	Symbol	get_imm		1604622						
ANR	1605329	Symbol	VSTR_F32		1604622						
ANR	1605330	Symbol	~0x3fc		1604622						
ANR	1605331	Symbol	FPU_LOAD		1604622						
ANR	1605332	Symbol	DD4		1604622						
ANR	1605333	Symbol	inst		1604622						
ANR	1605334	Symbol	RN4		1604622						
ANR	1605335	Symbol	OFFS_REG		1604622						
ANR	1605336	Symbol	compiler -> error		1604622						
ANR	1605337	Symbol	SUB_WI		1604622						
ANR	1605338	Symbol	SLJIT_UNLIKELY		1604622						
ANR	1605339	Symbol	SLJIT_ERR_UNSUPPORTED		1604622						
ANR	1605340	Function	sljit_emit_fop1_convw_fromd	1597:0:50696:51363							
ANR	1605341	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1605340	0					
ANR	1605342	CompoundStatement		1600:0:50859:51363	1605340	0					
ANR	1605343	IfStatement	if ( src & SLJIT_MEM )		1605340	0					
ANR	1605344	Condition	src & SLJIT_MEM	1601:5:50866:50880	1605340	0	True				
ANR	1605345	BitAndExpression	src & SLJIT_MEM		1605340	0		&			
ANR	1605346	Identifier	src		1605340	0					
ANR	1605347	Identifier	SLJIT_MEM		1605340	1					
ANR	1605348	CompoundStatement		2:22:23:23	1605340	1					
ANR	1605349	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw ) )"	1602:2:50887:50975	1605340	0	True				
ANR	1605350	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw ) )"		1605340	0					
ANR	1605351	Callee	FAIL_IF		1605340	0					
ANR	1605352	Identifier	FAIL_IF		1605340	0					
ANR	1605353	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1605340	1					
ANR	1605354	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1605340	0					
ANR	1605355	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1605340	0					
ANR	1605356	Callee	emit_fop_mem		1605340	0					
ANR	1605357	Identifier	emit_fop_mem		1605340	0					
ANR	1605358	ArgumentList	compiler		1605340	1					
ANR	1605359	Argument	compiler		1605340	0					
ANR	1605360	Identifier	compiler		1605340	0					
ANR	1605361	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605340	1					
ANR	1605362	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605340	0		|			
ANR	1605363	BitAndExpression	op & SLJIT_SINGLE_OP		1605340	0		&			
ANR	1605364	Identifier	op		1605340	0					
ANR	1605365	Identifier	SLJIT_SINGLE_OP		1605340	1					
ANR	1605366	Identifier	FPU_LOAD		1605340	1					
ANR	1605367	Argument	TMP_FREG1		1605340	2					
ANR	1605368	Identifier	TMP_FREG1		1605340	0					
ANR	1605369	Argument	src		1605340	3					
ANR	1605370	Identifier	src		1605340	0					
ANR	1605371	Argument	srcw		1605340	4					
ANR	1605372	Identifier	srcw		1605340	0					
ANR	1605373	ExpressionStatement	src = TMP_FREG1	1603:2:50979:50994	1605340	1	True				
ANR	1605374	AssignmentExpression	src = TMP_FREG1		1605340	0		=			
ANR	1605375	Identifier	src		1605340	0					
ANR	1605376	Identifier	TMP_FREG1		1605340	1					
ANR	1605377	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) ) )"	1606:1:51001:51098	1605340	1	True				
ANR	1605378	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) ) )"		1605340	0					
ANR	1605379	Callee	FAIL_IF		1605340	0					
ANR	1605380	Identifier	FAIL_IF		1605340	0					
ANR	1605381	ArgumentList	"push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) )"		1605340	1					
ANR	1605382	Argument	"push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) )"		1605340	0					
ANR	1605383	CallExpression	"push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) )"		1605340	0					
ANR	1605384	Callee	push_inst32		1605340	0					
ANR	1605385	Identifier	push_inst32		1605340	0					
ANR	1605386	ArgumentList	compiler		1605340	1					
ANR	1605387	Argument	compiler		1605340	0					
ANR	1605388	Identifier	compiler		1605340	0					
ANR	1605389	Argument	VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src )		1605340	1					
ANR	1605390	InclusiveOrExpression	VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src )		1605340	0		|			
ANR	1605391	Identifier	VCVT_S32_F32		1605340	0					
ANR	1605392	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src )		1605340	1		|			
ANR	1605393	BitAndExpression	op & SLJIT_SINGLE_OP		1605340	0		&			
ANR	1605394	Identifier	op		1605340	0					
ANR	1605395	Identifier	SLJIT_SINGLE_OP		1605340	1					
ANR	1605396	InclusiveOrExpression	DD4 ( TMP_FREG1 ) | DM4 ( src )		1605340	1		|			
ANR	1605397	CallExpression	DD4 ( TMP_FREG1 )		1605340	0					
ANR	1605398	Callee	DD4		1605340	0					
ANR	1605399	Identifier	DD4		1605340	0					
ANR	1605400	ArgumentList	TMP_FREG1		1605340	1					
ANR	1605401	Argument	TMP_FREG1		1605340	0					
ANR	1605402	Identifier	TMP_FREG1		1605340	0					
ANR	1605403	CallExpression	DM4 ( src )		1605340	1					
ANR	1605404	Callee	DM4		1605340	0					
ANR	1605405	Identifier	DM4		1605340	0					
ANR	1605406	ArgumentList	src		1605340	1					
ANR	1605407	Argument	src		1605340	0					
ANR	1605408	Identifier	src		1605340	0					
ANR	1605409	IfStatement	if ( dst == SLJIT_UNUSED )		1605340	2					
ANR	1605410	Condition	dst == SLJIT_UNUSED	1608:5:51106:51124	1605340	0	True				
ANR	1605411	EqualityExpression	dst == SLJIT_UNUSED		1605340	0		==			
ANR	1605412	Identifier	dst		1605340	0					
ANR	1605413	Identifier	SLJIT_UNUSED		1605340	1					
ANR	1605414	ReturnStatement	return SLJIT_SUCCESS ;	1609:2:51129:51149	1605340	1	True				
ANR	1605415	Identifier	SLJIT_SUCCESS		1605340	0					
ANR	1605416	IfStatement	if ( FAST_IS_REG ( dst ) )		1605340	3					
ANR	1605417	Condition	FAST_IS_REG ( dst )	1611:5:51157:51172	1605340	0	True				
ANR	1605418	CallExpression	FAST_IS_REG ( dst )		1605340	0					
ANR	1605419	Callee	FAST_IS_REG		1605340	0					
ANR	1605420	Identifier	FAST_IS_REG		1605340	0					
ANR	1605421	ArgumentList	dst		1605340	1					
ANR	1605422	Argument	dst		1605340	0					
ANR	1605423	Identifier	dst		1605340	0					
ANR	1605424	ReturnStatement	"return push_inst32 ( compiler , VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 ) ) ;"	1612:2:51177:51251	1605340	1	True				
ANR	1605425	CallExpression	"push_inst32 ( compiler , VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 ) )"		1605340	0					
ANR	1605426	Callee	push_inst32		1605340	0					
ANR	1605427	Identifier	push_inst32		1605340	0					
ANR	1605428	ArgumentList	compiler		1605340	1					
ANR	1605429	Argument	compiler		1605340	0					
ANR	1605430	Identifier	compiler		1605340	0					
ANR	1605431	Argument	VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 )		1605340	1					
ANR	1605432	InclusiveOrExpression	VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 )		1605340	0		|			
ANR	1605433	Identifier	VMOV		1605340	0					
ANR	1605434	InclusiveOrExpression	( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 )		1605340	1		|			
ANR	1605435	ShiftExpression	1 << 20		1605340	0		<<			
ANR	1605436	PrimaryExpression	1		1605340	0					
ANR	1605437	PrimaryExpression	20		1605340	1					
ANR	1605438	InclusiveOrExpression	RT4 ( dst ) | DN4 ( TMP_FREG1 )		1605340	1		|			
ANR	1605439	CallExpression	RT4 ( dst )		1605340	0					
ANR	1605440	Callee	RT4		1605340	0					
ANR	1605441	Identifier	RT4		1605340	0					
ANR	1605442	ArgumentList	dst		1605340	1					
ANR	1605443	Argument	dst		1605340	0					
ANR	1605444	Identifier	dst		1605340	0					
ANR	1605445	CallExpression	DN4 ( TMP_FREG1 )		1605340	1					
ANR	1605446	Callee	DN4		1605340	0					
ANR	1605447	Identifier	DN4		1605340	0					
ANR	1605448	ArgumentList	TMP_FREG1		1605340	1					
ANR	1605449	Argument	TMP_FREG1		1605340	0					
ANR	1605450	Identifier	TMP_FREG1		1605340	0					
ANR	1605451	ReturnStatement	"return emit_fop_mem ( compiler , 0 , TMP_FREG1 , dst , dstw ) ;"	1615:1:51307:51361	1605340	4	True				
ANR	1605452	CallExpression	"emit_fop_mem ( compiler , 0 , TMP_FREG1 , dst , dstw )"		1605340	0					
ANR	1605453	Callee	emit_fop_mem		1605340	0					
ANR	1605454	Identifier	emit_fop_mem		1605340	0					
ANR	1605455	ArgumentList	compiler		1605340	1					
ANR	1605456	Argument	compiler		1605340	0					
ANR	1605457	Identifier	compiler		1605340	0					
ANR	1605458	Argument	0		1605340	1					
ANR	1605459	PrimaryExpression	0		1605340	0					
ANR	1605460	Argument	TMP_FREG1		1605340	2					
ANR	1605461	Identifier	TMP_FREG1		1605340	0					
ANR	1605462	Argument	dst		1605340	3					
ANR	1605463	Identifier	dst		1605340	0					
ANR	1605464	Argument	dstw		1605340	4					
ANR	1605465	Identifier	dstw		1605340	0					
ANR	1605466	ReturnType	static SLJIT_INLINE sljit_si		1605340	1					
ANR	1605467	Identifier	sljit_emit_fop1_convw_fromd		1605340	2					
ANR	1605468	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1605340	3					
ANR	1605469	Parameter	struct sljit_compiler * compiler	1597:57:50753:50783	1605340	0	True				
ANR	1605470	ParameterType	struct sljit_compiler *		1605340	0					
ANR	1605471	Identifier	compiler		1605340	1					
ANR	1605472	Parameter	sljit_si op	1597:90:50786:50796	1605340	1	True				
ANR	1605473	ParameterType	sljit_si		1605340	0					
ANR	1605474	Identifier	op		1605340	1					
ANR	1605475	Parameter	sljit_si dst	1598:1:50800:50811	1605340	2	True				
ANR	1605476	ParameterType	sljit_si		1605340	0					
ANR	1605477	Identifier	dst		1605340	1					
ANR	1605478	Parameter	sljit_sw dstw	1598:15:50814:50826	1605340	3	True				
ANR	1605479	ParameterType	sljit_sw		1605340	0					
ANR	1605480	Identifier	dstw		1605340	1					
ANR	1605481	Parameter	sljit_si src	1599:1:50830:50841	1605340	4	True				
ANR	1605482	ParameterType	sljit_si		1605340	0					
ANR	1605483	Identifier	src		1605340	1					
ANR	1605484	Parameter	sljit_sw srcw	1599:15:50844:50856	1605340	5	True				
ANR	1605485	ParameterType	sljit_sw		1605340	0					
ANR	1605486	Identifier	srcw		1605340	1					
ANR	1605487	CFGEntryNode	ENTRY		1605340		True				
ANR	1605488	CFGExitNode	EXIT		1605340		True				
ANR	1605489	Symbol	op		1605340						
ANR	1605490	Symbol	FAST_IS_REG		1605340						
ANR	1605491	Symbol	dst		1605340						
ANR	1605492	Symbol	src		1605340						
ANR	1605493	Symbol	TMP_FREG1		1605340						
ANR	1605494	Symbol	srcw		1605340						
ANR	1605495	Symbol	SLJIT_MEM		1605340						
ANR	1605496	Symbol	SLJIT_SINGLE_OP		1605340						
ANR	1605497	Symbol	DM4		1605340						
ANR	1605498	Symbol	SLJIT_SUCCESS		1605340						
ANR	1605499	Symbol	DN4		1605340						
ANR	1605500	Symbol	RT4		1605340						
ANR	1605501	Symbol	SLJIT_UNUSED		1605340						
ANR	1605502	Symbol	emit_fop_mem		1605340						
ANR	1605503	Symbol	FPU_LOAD		1605340						
ANR	1605504	Symbol	VCVT_S32_F32		1605340						
ANR	1605505	Symbol	DD4		1605340						
ANR	1605506	Symbol	VMOV		1605340						
ANR	1605507	Symbol	compiler		1605340						
ANR	1605508	Symbol	dstw		1605340						
ANR	1605509	Symbol	push_inst32		1605340						
ANR	1605510	Function	sljit_emit_fop1_convd_fromw	1618:0:51366:52193							
ANR	1605511	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1605510	0					
ANR	1605512	CompoundStatement		1621:0:51529:52193	1605510	0					
ANR	1605513	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1 ;	1622:1:51532:51583	1605510	0	True				
ANR	1605514	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1605510	0					
ANR	1605515	IdentifierDeclType	sljit_si		1605510	0					
ANR	1605516	Identifier	dst_r		1605510	1					
ANR	1605517	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1605510	2		=			
ANR	1605518	Identifier	dst_r		1605510	0					
ANR	1605519	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1605510	1					
ANR	1605520	Condition	FAST_IS_REG ( dst )		1605510	0					
ANR	1605521	CallExpression	FAST_IS_REG ( dst )		1605510	0					
ANR	1605522	Callee	FAST_IS_REG		1605510	0					
ANR	1605523	Identifier	FAST_IS_REG		1605510	0					
ANR	1605524	ArgumentList	dst		1605510	1					
ANR	1605525	Argument	dst		1605510	0					
ANR	1605526	Identifier	dst		1605510	0					
ANR	1605527	Identifier	dst		1605510	1					
ANR	1605528	Identifier	TMP_FREG1		1605510	2					
ANR	1605529	IfStatement	if ( FAST_IS_REG ( src ) )		1605510	1					
ANR	1605530	Condition	FAST_IS_REG ( src )	1624:5:51591:51606	1605510	0	True				
ANR	1605531	CallExpression	FAST_IS_REG ( src )		1605510	0					
ANR	1605532	Callee	FAST_IS_REG		1605510	0					
ANR	1605533	Identifier	FAST_IS_REG		1605510	0					
ANR	1605534	ArgumentList	src		1605510	1					
ANR	1605535	Argument	src		1605510	0					
ANR	1605536	Identifier	src		1605510	0					
ANR	1605537	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) ) )"	1625:2:51611:51675	1605510	1	True				
ANR	1605538	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) ) )"		1605510	0					
ANR	1605539	Callee	FAIL_IF		1605510	0					
ANR	1605540	Identifier	FAIL_IF		1605510	0					
ANR	1605541	ArgumentList	"push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) )"		1605510	1					
ANR	1605542	Argument	"push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) )"		1605510	0					
ANR	1605543	CallExpression	"push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) )"		1605510	0					
ANR	1605544	Callee	push_inst32		1605510	0					
ANR	1605545	Identifier	push_inst32		1605510	0					
ANR	1605546	ArgumentList	compiler		1605510	1					
ANR	1605547	Argument	compiler		1605510	0					
ANR	1605548	Identifier	compiler		1605510	0					
ANR	1605549	Argument	VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 )		1605510	1					
ANR	1605550	InclusiveOrExpression	VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 )		1605510	0		|			
ANR	1605551	Identifier	VMOV		1605510	0					
ANR	1605552	InclusiveOrExpression	RT4 ( src ) | DN4 ( TMP_FREG1 )		1605510	1		|			
ANR	1605553	CallExpression	RT4 ( src )		1605510	0					
ANR	1605554	Callee	RT4		1605510	0					
ANR	1605555	Identifier	RT4		1605510	0					
ANR	1605556	ArgumentList	src		1605510	1					
ANR	1605557	Argument	src		1605510	0					
ANR	1605558	Identifier	src		1605510	0					
ANR	1605559	CallExpression	DN4 ( TMP_FREG1 )		1605510	1					
ANR	1605560	Callee	DN4		1605510	0					
ANR	1605561	Identifier	DN4		1605510	0					
ANR	1605562	ArgumentList	TMP_FREG1		1605510	1					
ANR	1605563	Argument	TMP_FREG1		1605510	0					
ANR	1605564	Identifier	TMP_FREG1		1605510	0					
ANR	1605565	ElseStatement	else		1605510	0					
ANR	1605566	IfStatement	if ( src & SLJIT_MEM )		1605510	0					
ANR	1605567	Condition	src & SLJIT_MEM	1626:10:51687:51701	1605510	0	True				
ANR	1605568	BitAndExpression	src & SLJIT_MEM		1605510	0		&			
ANR	1605569	Identifier	src		1605510	0					
ANR	1605570	Identifier	SLJIT_MEM		1605510	1					
ANR	1605571	CompoundStatement		6:27:174:174	1605510	1					
ANR	1605572	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw ) )"	1628:2:51760:51823	1605510	0	True				
ANR	1605573	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw ) )"		1605510	0					
ANR	1605574	Callee	FAIL_IF		1605510	0					
ANR	1605575	Identifier	FAIL_IF		1605510	0					
ANR	1605576	ArgumentList	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1605510	1					
ANR	1605577	Argument	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1605510	0					
ANR	1605578	CallExpression	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1605510	0					
ANR	1605579	Callee	emit_fop_mem		1605510	0					
ANR	1605580	Identifier	emit_fop_mem		1605510	0					
ANR	1605581	ArgumentList	compiler		1605510	1					
ANR	1605582	Argument	compiler		1605510	0					
ANR	1605583	Identifier	compiler		1605510	0					
ANR	1605584	Argument	FPU_LOAD		1605510	1					
ANR	1605585	Identifier	FPU_LOAD		1605510	0					
ANR	1605586	Argument	TMP_FREG1		1605510	2					
ANR	1605587	Identifier	TMP_FREG1		1605510	0					
ANR	1605588	Argument	src		1605510	3					
ANR	1605589	Identifier	src		1605510	0					
ANR	1605590	Argument	srcw		1605510	4					
ANR	1605591	Identifier	srcw		1605510	0					
ANR	1605592	ElseStatement	else		1605510	0					
ANR	1605593	CompoundStatement		10:6:304:304	1605510	0					
ANR	1605594	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	1631:2:51838:51887	1605510	0	True				
ANR	1605595	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1605510	0					
ANR	1605596	Callee	FAIL_IF		1605510	0					
ANR	1605597	Identifier	FAIL_IF		1605510	0					
ANR	1605598	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1605510	1					
ANR	1605599	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1605510	0					
ANR	1605600	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1605510	0					
ANR	1605601	Callee	load_immediate		1605510	0					
ANR	1605602	Identifier	load_immediate		1605510	0					
ANR	1605603	ArgumentList	compiler		1605510	1					
ANR	1605604	Argument	compiler		1605510	0					
ANR	1605605	Identifier	compiler		1605510	0					
ANR	1605606	Argument	TMP_REG1		1605510	1					
ANR	1605607	Identifier	TMP_REG1		1605510	0					
ANR	1605608	Argument	srcw		1605510	2					
ANR	1605609	Identifier	srcw		1605510	0					
ANR	1605610	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) ) )"	1632:2:51891:51960	1605510	1	True				
ANR	1605611	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) ) )"		1605510	0					
ANR	1605612	Callee	FAIL_IF		1605510	0					
ANR	1605613	Identifier	FAIL_IF		1605510	0					
ANR	1605614	ArgumentList	"push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) )"		1605510	1					
ANR	1605615	Argument	"push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) )"		1605510	0					
ANR	1605616	CallExpression	"push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) )"		1605510	0					
ANR	1605617	Callee	push_inst32		1605510	0					
ANR	1605618	Identifier	push_inst32		1605510	0					
ANR	1605619	ArgumentList	compiler		1605510	1					
ANR	1605620	Argument	compiler		1605510	0					
ANR	1605621	Identifier	compiler		1605510	0					
ANR	1605622	Argument	VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 )		1605510	1					
ANR	1605623	InclusiveOrExpression	VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 )		1605510	0		|			
ANR	1605624	Identifier	VMOV		1605510	0					
ANR	1605625	InclusiveOrExpression	RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 )		1605510	1		|			
ANR	1605626	CallExpression	RT4 ( TMP_REG1 )		1605510	0					
ANR	1605627	Callee	RT4		1605510	0					
ANR	1605628	Identifier	RT4		1605510	0					
ANR	1605629	ArgumentList	TMP_REG1		1605510	1					
ANR	1605630	Argument	TMP_REG1		1605510	0					
ANR	1605631	Identifier	TMP_REG1		1605510	0					
ANR	1605632	CallExpression	DN4 ( TMP_FREG1 )		1605510	1					
ANR	1605633	Callee	DN4		1605510	0					
ANR	1605634	Identifier	DN4		1605510	0					
ANR	1605635	ArgumentList	TMP_FREG1		1605510	1					
ANR	1605636	Argument	TMP_FREG1		1605510	0					
ANR	1605637	Identifier	TMP_FREG1		1605510	0					
ANR	1605638	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) ) )"	1635:1:51967:52066	1605510	2	True				
ANR	1605639	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) ) )"		1605510	0					
ANR	1605640	Callee	FAIL_IF		1605510	0					
ANR	1605641	Identifier	FAIL_IF		1605510	0					
ANR	1605642	ArgumentList	"push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) )"		1605510	1					
ANR	1605643	Argument	"push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) )"		1605510	0					
ANR	1605644	CallExpression	"push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) )"		1605510	0					
ANR	1605645	Callee	push_inst32		1605510	0					
ANR	1605646	Identifier	push_inst32		1605510	0					
ANR	1605647	ArgumentList	compiler		1605510	1					
ANR	1605648	Argument	compiler		1605510	0					
ANR	1605649	Identifier	compiler		1605510	0					
ANR	1605650	Argument	VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1605510	1					
ANR	1605651	InclusiveOrExpression	VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1605510	0		|			
ANR	1605652	Identifier	VCVT_F32_S32		1605510	0					
ANR	1605653	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1605510	1		|			
ANR	1605654	BitAndExpression	op & SLJIT_SINGLE_OP		1605510	0		&			
ANR	1605655	Identifier	op		1605510	0					
ANR	1605656	Identifier	SLJIT_SINGLE_OP		1605510	1					
ANR	1605657	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1605510	1		|			
ANR	1605658	CallExpression	DD4 ( dst_r )		1605510	0					
ANR	1605659	Callee	DD4		1605510	0					
ANR	1605660	Identifier	DD4		1605510	0					
ANR	1605661	ArgumentList	dst_r		1605510	1					
ANR	1605662	Argument	dst_r		1605510	0					
ANR	1605663	Identifier	dst_r		1605510	0					
ANR	1605664	CallExpression	DM4 ( TMP_FREG1 )		1605510	1					
ANR	1605665	Callee	DM4		1605510	0					
ANR	1605666	Identifier	DM4		1605510	0					
ANR	1605667	ArgumentList	TMP_FREG1		1605510	1					
ANR	1605668	Argument	TMP_FREG1		1605510	0					
ANR	1605669	Identifier	TMP_FREG1		1605510	0					
ANR	1605670	IfStatement	if ( dst & SLJIT_MEM )		1605510	3					
ANR	1605671	Condition	dst & SLJIT_MEM	1637:5:52074:52088	1605510	0	True				
ANR	1605672	BitAndExpression	dst & SLJIT_MEM		1605510	0		&			
ANR	1605673	Identifier	dst		1605510	0					
ANR	1605674	Identifier	SLJIT_MEM		1605510	1					
ANR	1605675	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw ) ;"	1638:2:52093:52168	1605510	1	True				
ANR	1605676	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1605510	0					
ANR	1605677	Callee	emit_fop_mem		1605510	0					
ANR	1605678	Identifier	emit_fop_mem		1605510	0					
ANR	1605679	ArgumentList	compiler		1605510	1					
ANR	1605680	Argument	compiler		1605510	0					
ANR	1605681	Identifier	compiler		1605510	0					
ANR	1605682	Argument	op & SLJIT_SINGLE_OP		1605510	1					
ANR	1605683	BitAndExpression	op & SLJIT_SINGLE_OP		1605510	0		&			
ANR	1605684	Identifier	op		1605510	0					
ANR	1605685	Identifier	SLJIT_SINGLE_OP		1605510	1					
ANR	1605686	Argument	TMP_FREG1		1605510	2					
ANR	1605687	Identifier	TMP_FREG1		1605510	0					
ANR	1605688	Argument	dst		1605510	3					
ANR	1605689	Identifier	dst		1605510	0					
ANR	1605690	Argument	dstw		1605510	4					
ANR	1605691	Identifier	dstw		1605510	0					
ANR	1605692	ReturnStatement	return SLJIT_SUCCESS ;	1639:1:52171:52191	1605510	4	True				
ANR	1605693	Identifier	SLJIT_SUCCESS		1605510	0					
ANR	1605694	ReturnType	static SLJIT_INLINE sljit_si		1605510	1					
ANR	1605695	Identifier	sljit_emit_fop1_convd_fromw		1605510	2					
ANR	1605696	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1605510	3					
ANR	1605697	Parameter	struct sljit_compiler * compiler	1618:57:51423:51453	1605510	0	True				
ANR	1605698	ParameterType	struct sljit_compiler *		1605510	0					
ANR	1605699	Identifier	compiler		1605510	1					
ANR	1605700	Parameter	sljit_si op	1618:90:51456:51466	1605510	1	True				
ANR	1605701	ParameterType	sljit_si		1605510	0					
ANR	1605702	Identifier	op		1605510	1					
ANR	1605703	Parameter	sljit_si dst	1619:1:51470:51481	1605510	2	True				
ANR	1605704	ParameterType	sljit_si		1605510	0					
ANR	1605705	Identifier	dst		1605510	1					
ANR	1605706	Parameter	sljit_sw dstw	1619:15:51484:51496	1605510	3	True				
ANR	1605707	ParameterType	sljit_sw		1605510	0					
ANR	1605708	Identifier	dstw		1605510	1					
ANR	1605709	Parameter	sljit_si src	1620:1:51500:51511	1605510	4	True				
ANR	1605710	ParameterType	sljit_si		1605510	0					
ANR	1605711	Identifier	src		1605510	1					
ANR	1605712	Parameter	sljit_sw srcw	1620:15:51514:51526	1605510	5	True				
ANR	1605713	ParameterType	sljit_sw		1605510	0					
ANR	1605714	Identifier	srcw		1605510	1					
ANR	1605715	CFGEntryNode	ENTRY		1605510		True				
ANR	1605716	CFGExitNode	EXIT		1605510		True				
ANR	1605717	Symbol	op		1605510						
ANR	1605718	Symbol	TMP_REG1		1605510						
ANR	1605719	Symbol	FAST_IS_REG		1605510						
ANR	1605720	Symbol	dst		1605510						
ANR	1605721	Symbol	VCVT_F32_S32		1605510						
ANR	1605722	Symbol	src		1605510						
ANR	1605723	Symbol	TMP_FREG1		1605510						
ANR	1605724	Symbol	srcw		1605510						
ANR	1605725	Symbol	SLJIT_MEM		1605510						
ANR	1605726	Symbol	SLJIT_SINGLE_OP		1605510						
ANR	1605727	Symbol	DM4		1605510						
ANR	1605728	Symbol	SLJIT_SUCCESS		1605510						
ANR	1605729	Symbol	DN4		1605510						
ANR	1605730	Symbol	dst_r		1605510						
ANR	1605731	Symbol	RT4		1605510						
ANR	1605732	Symbol	load_immediate		1605510						
ANR	1605733	Symbol	emit_fop_mem		1605510						
ANR	1605734	Symbol	FPU_LOAD		1605510						
ANR	1605735	Symbol	DD4		1605510						
ANR	1605736	Symbol	VMOV		1605510						
ANR	1605737	Symbol	compiler		1605510						
ANR	1605738	Symbol	dstw		1605510						
ANR	1605739	Symbol	push_inst32		1605510						
ANR	1605740	Function	sljit_emit_fop1_cmp	1642:0:52196:52754							
ANR	1605741	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1605740	0					
ANR	1605742	CompoundStatement		1645:0:52355:52754	1605740	0					
ANR	1605743	IfStatement	if ( src1 & SLJIT_MEM )		1605740	0					
ANR	1605744	Condition	src1 & SLJIT_MEM	1646:5:52362:52377	1605740	0	True				
ANR	1605745	BitAndExpression	src1 & SLJIT_MEM		1605740	0		&			
ANR	1605746	Identifier	src1		1605740	0					
ANR	1605747	Identifier	SLJIT_MEM		1605740	1					
ANR	1605748	CompoundStatement		2:23:24:24	1605740	1					
ANR	1605749	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"	1647:2:52384:52465	1605740	0	True				
ANR	1605750	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1605740	0					
ANR	1605751	Callee	emit_fop_mem		1605740	0					
ANR	1605752	Identifier	emit_fop_mem		1605740	0					
ANR	1605753	ArgumentList	compiler		1605740	1					
ANR	1605754	Argument	compiler		1605740	0					
ANR	1605755	Identifier	compiler		1605740	0					
ANR	1605756	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605740	1					
ANR	1605757	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605740	0		|			
ANR	1605758	BitAndExpression	op & SLJIT_SINGLE_OP		1605740	0		&			
ANR	1605759	Identifier	op		1605740	0					
ANR	1605760	Identifier	SLJIT_SINGLE_OP		1605740	1					
ANR	1605761	Identifier	FPU_LOAD		1605740	1					
ANR	1605762	Argument	TMP_FREG1		1605740	2					
ANR	1605763	Identifier	TMP_FREG1		1605740	0					
ANR	1605764	Argument	src1		1605740	3					
ANR	1605765	Identifier	src1		1605740	0					
ANR	1605766	Argument	src1w		1605740	4					
ANR	1605767	Identifier	src1w		1605740	0					
ANR	1605768	ExpressionStatement	src1 = TMP_FREG1	1648:2:52469:52485	1605740	1	True				
ANR	1605769	AssignmentExpression	src1 = TMP_FREG1		1605740	0		=			
ANR	1605770	Identifier	src1		1605740	0					
ANR	1605771	Identifier	TMP_FREG1		1605740	1					
ANR	1605772	IfStatement	if ( src2 & SLJIT_MEM )		1605740	1					
ANR	1605773	Condition	src2 & SLJIT_MEM	1651:5:52496:52511	1605740	0	True				
ANR	1605774	BitAndExpression	src2 & SLJIT_MEM		1605740	0		&			
ANR	1605775	Identifier	src2		1605740	0					
ANR	1605776	Identifier	SLJIT_MEM		1605740	1					
ANR	1605777	CompoundStatement		7:23:158:158	1605740	1					
ANR	1605778	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"	1652:2:52518:52599	1605740	0	True				
ANR	1605779	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1605740	0					
ANR	1605780	Callee	emit_fop_mem		1605740	0					
ANR	1605781	Identifier	emit_fop_mem		1605740	0					
ANR	1605782	ArgumentList	compiler		1605740	1					
ANR	1605783	Argument	compiler		1605740	0					
ANR	1605784	Identifier	compiler		1605740	0					
ANR	1605785	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605740	1					
ANR	1605786	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605740	0		|			
ANR	1605787	BitAndExpression	op & SLJIT_SINGLE_OP		1605740	0		&			
ANR	1605788	Identifier	op		1605740	0					
ANR	1605789	Identifier	SLJIT_SINGLE_OP		1605740	1					
ANR	1605790	Identifier	FPU_LOAD		1605740	1					
ANR	1605791	Argument	TMP_FREG2		1605740	2					
ANR	1605792	Identifier	TMP_FREG2		1605740	0					
ANR	1605793	Argument	src2		1605740	3					
ANR	1605794	Identifier	src2		1605740	0					
ANR	1605795	Argument	src2w		1605740	4					
ANR	1605796	Identifier	src2w		1605740	0					
ANR	1605797	ExpressionStatement	src2 = TMP_FREG2	1653:2:52603:52619	1605740	1	True				
ANR	1605798	AssignmentExpression	src2 = TMP_FREG2		1605740	0		=			
ANR	1605799	Identifier	src2		1605740	0					
ANR	1605800	Identifier	TMP_FREG2		1605740	1					
ANR	1605801	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) ) )"	1656:1:52626:52715	1605740	2	True				
ANR	1605802	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) ) )"		1605740	0					
ANR	1605803	Callee	FAIL_IF		1605740	0					
ANR	1605804	Identifier	FAIL_IF		1605740	0					
ANR	1605805	ArgumentList	"push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) )"		1605740	1					
ANR	1605806	Argument	"push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) )"		1605740	0					
ANR	1605807	CallExpression	"push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) )"		1605740	0					
ANR	1605808	Callee	push_inst32		1605740	0					
ANR	1605809	Identifier	push_inst32		1605740	0					
ANR	1605810	ArgumentList	compiler		1605740	1					
ANR	1605811	Argument	compiler		1605740	0					
ANR	1605812	Identifier	compiler		1605740	0					
ANR	1605813	Argument	VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 )		1605740	1					
ANR	1605814	InclusiveOrExpression	VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 )		1605740	0		|			
ANR	1605815	Identifier	VCMP_F32		1605740	0					
ANR	1605816	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 )		1605740	1		|			
ANR	1605817	BitAndExpression	op & SLJIT_SINGLE_OP		1605740	0		&			
ANR	1605818	Identifier	op		1605740	0					
ANR	1605819	Identifier	SLJIT_SINGLE_OP		1605740	1					
ANR	1605820	InclusiveOrExpression	DD4 ( src1 ) | DM4 ( src2 )		1605740	1		|			
ANR	1605821	CallExpression	DD4 ( src1 )		1605740	0					
ANR	1605822	Callee	DD4		1605740	0					
ANR	1605823	Identifier	DD4		1605740	0					
ANR	1605824	ArgumentList	src1		1605740	1					
ANR	1605825	Argument	src1		1605740	0					
ANR	1605826	Identifier	src1		1605740	0					
ANR	1605827	CallExpression	DM4 ( src2 )		1605740	1					
ANR	1605828	Callee	DM4		1605740	0					
ANR	1605829	Identifier	DM4		1605740	0					
ANR	1605830	ArgumentList	src2		1605740	1					
ANR	1605831	Argument	src2		1605740	0					
ANR	1605832	Identifier	src2		1605740	0					
ANR	1605833	ReturnStatement	"return push_inst32 ( compiler , VMRS ) ;"	1657:1:52718:52752	1605740	3	True				
ANR	1605834	CallExpression	"push_inst32 ( compiler , VMRS )"		1605740	0					
ANR	1605835	Callee	push_inst32		1605740	0					
ANR	1605836	Identifier	push_inst32		1605740	0					
ANR	1605837	ArgumentList	compiler		1605740	1					
ANR	1605838	Argument	compiler		1605740	0					
ANR	1605839	Identifier	compiler		1605740	0					
ANR	1605840	Argument	VMRS		1605740	1					
ANR	1605841	Identifier	VMRS		1605740	0					
ANR	1605842	ReturnType	static SLJIT_INLINE sljit_si		1605740	1					
ANR	1605843	Identifier	sljit_emit_fop1_cmp		1605740	2					
ANR	1605844	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1605740	3					
ANR	1605845	Parameter	struct sljit_compiler * compiler	1642:49:52245:52275	1605740	0	True				
ANR	1605846	ParameterType	struct sljit_compiler *		1605740	0					
ANR	1605847	Identifier	compiler		1605740	1					
ANR	1605848	Parameter	sljit_si op	1642:82:52278:52288	1605740	1	True				
ANR	1605849	ParameterType	sljit_si		1605740	0					
ANR	1605850	Identifier	op		1605740	1					
ANR	1605851	Parameter	sljit_si src1	1643:1:52292:52304	1605740	2	True				
ANR	1605852	ParameterType	sljit_si		1605740	0					
ANR	1605853	Identifier	src1		1605740	1					
ANR	1605854	Parameter	sljit_sw src1w	1643:16:52307:52320	1605740	3	True				
ANR	1605855	ParameterType	sljit_sw		1605740	0					
ANR	1605856	Identifier	src1w		1605740	1					
ANR	1605857	Parameter	sljit_si src2	1644:1:52324:52336	1605740	4	True				
ANR	1605858	ParameterType	sljit_si		1605740	0					
ANR	1605859	Identifier	src2		1605740	1					
ANR	1605860	Parameter	sljit_sw src2w	1644:16:52339:52352	1605740	5	True				
ANR	1605861	ParameterType	sljit_sw		1605740	0					
ANR	1605862	Identifier	src2w		1605740	1					
ANR	1605863	CFGEntryNode	ENTRY		1605740		True				
ANR	1605864	CFGExitNode	EXIT		1605740		True				
ANR	1605865	Symbol	src2w		1605740						
ANR	1605866	Symbol	op		1605740						
ANR	1605867	Symbol	TMP_FREG2		1605740						
ANR	1605868	Symbol	src1w		1605740						
ANR	1605869	Symbol	TMP_FREG1		1605740						
ANR	1605870	Symbol	SLJIT_MEM		1605740						
ANR	1605871	Symbol	SLJIT_SINGLE_OP		1605740						
ANR	1605872	Symbol	VCMP_F32		1605740						
ANR	1605873	Symbol	DM4		1605740						
ANR	1605874	Symbol	VMRS		1605740						
ANR	1605875	Symbol	FPU_LOAD		1605740						
ANR	1605876	Symbol	DD4		1605740						
ANR	1605877	Symbol	src1		1605740						
ANR	1605878	Symbol	src2		1605740						
ANR	1605879	Symbol	compiler		1605740						
ANR	1605880	Symbol	push_inst32		1605740						
ANR	1605881	Function	sljit_emit_fop1	1660:0:52757:54135							
ANR	1605882	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1605881	0					
ANR	1605883	CompoundStatement		1663:0:52913:54135	1605881	0					
ANR	1605884	IdentifierDeclStatement	sljit_si dst_r ;	1664:1:52916:52930	1605881	0	True				
ANR	1605885	IdentifierDecl	dst_r		1605881	0					
ANR	1605886	IdentifierDeclType	sljit_si		1605881	0					
ANR	1605887	Identifier	dst_r		1605881	1					
ANR	1605888	ExpressionStatement	CHECK_ERROR ( )	1666:1:52934:52947	1605881	1	True				
ANR	1605889	CallExpression	CHECK_ERROR ( )		1605881	0					
ANR	1605890	Callee	CHECK_ERROR		1605881	0					
ANR	1605891	Identifier	CHECK_ERROR		1605881	0					
ANR	1605892	ArgumentList			1605881	1					
ANR	1605893	ExpressionStatement	compiler -> cache_arg = 0	1667:1:52950:52973	1605881	2	True				
ANR	1605894	AssignmentExpression	compiler -> cache_arg = 0		1605881	0		=			
ANR	1605895	PtrMemberAccess	compiler -> cache_arg		1605881	0					
ANR	1605896	Identifier	compiler		1605881	0					
ANR	1605897	Identifier	cache_arg		1605881	1					
ANR	1605898	PrimaryExpression	0		1605881	1					
ANR	1605899	ExpressionStatement	compiler -> cache_argw = 0	1668:1:52976:53000	1605881	3	True				
ANR	1605900	AssignmentExpression	compiler -> cache_argw = 0		1605881	0		=			
ANR	1605901	PtrMemberAccess	compiler -> cache_argw		1605881	0					
ANR	1605902	Identifier	compiler		1605881	0					
ANR	1605903	Identifier	cache_argw		1605881	1					
ANR	1605904	PrimaryExpression	0		1605881	1					
ANR	1605905	IfStatement	if ( GET_OPCODE ( op ) != SLJIT_CONVD_FROMS )		1605881	4					
ANR	1605906	Condition	GET_OPCODE ( op ) != SLJIT_CONVD_FROMS	1669:5:53007:53041	1605881	0	True				
ANR	1605907	EqualityExpression	GET_OPCODE ( op ) != SLJIT_CONVD_FROMS		1605881	0		!=			
ANR	1605908	CallExpression	GET_OPCODE ( op )		1605881	0					
ANR	1605909	Callee	GET_OPCODE		1605881	0					
ANR	1605910	Identifier	GET_OPCODE		1605881	0					
ANR	1605911	ArgumentList	op		1605881	1					
ANR	1605912	Argument	op		1605881	0					
ANR	1605913	Identifier	op		1605881	0					
ANR	1605914	Identifier	SLJIT_CONVD_FROMS		1605881	1					
ANR	1605915	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1670:2:53046:53067	1605881	1	True				
ANR	1605916	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1605881	0		^=			
ANR	1605917	Identifier	op		1605881	0					
ANR	1605918	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1605919	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) , float_transfer_bit_error )"	1672:1:53071:53145	1605881	5	True				
ANR	1605920	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) , float_transfer_bit_error )"		1605881	0					
ANR	1605921	Callee	SLJIT_COMPILE_ASSERT		1605881	0					
ANR	1605922	Identifier	SLJIT_COMPILE_ASSERT		1605881	0					
ANR	1605923	ArgumentList	SLJIT_SINGLE_OP == 0x100		1605881	1					
ANR	1605924	Argument	SLJIT_SINGLE_OP == 0x100		1605881	0					
ANR	1605925	EqualityExpression	SLJIT_SINGLE_OP == 0x100		1605881	0		==			
ANR	1605926	Identifier	SLJIT_SINGLE_OP		1605881	0					
ANR	1605927	PrimaryExpression	0x100		1605881	1					
ANR	1605928	Argument	float_transfer_bit_error		1605881	1					
ANR	1605929	Identifier	float_transfer_bit_error		1605881	0					
ANR	1605930	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	1673:1:53148:53217	1605881	6	True				
ANR	1605931	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1605881	0					
ANR	1605932	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1605881	0					
ANR	1605933	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1605881	0					
ANR	1605934	ArgumentList	compiler		1605881	1					
ANR	1605935	Argument	compiler		1605881	0					
ANR	1605936	Identifier	compiler		1605881	0					
ANR	1605937	Argument	op		1605881	1					
ANR	1605938	Identifier	op		1605881	0					
ANR	1605939	Argument	dst		1605881	2					
ANR	1605940	Identifier	dst		1605881	0					
ANR	1605941	Argument	dstw		1605881	3					
ANR	1605942	Identifier	dstw		1605881	0					
ANR	1605943	Argument	src		1605881	4					
ANR	1605944	Identifier	src		1605881	0					
ANR	1605945	Argument	srcw		1605881	5					
ANR	1605946	Identifier	srcw		1605881	0					
ANR	1605947	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1675:1:53221:53263	1605881	7	True				
ANR	1605948	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1605881	0		=			
ANR	1605949	Identifier	dst_r		1605881	0					
ANR	1605950	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1605881	1					
ANR	1605951	Condition	FAST_IS_REG ( dst )		1605881	0					
ANR	1605952	CallExpression	FAST_IS_REG ( dst )		1605881	0					
ANR	1605953	Callee	FAST_IS_REG		1605881	0					
ANR	1605954	Identifier	FAST_IS_REG		1605881	0					
ANR	1605955	ArgumentList	dst		1605881	1					
ANR	1605956	Argument	dst		1605881	0					
ANR	1605957	Identifier	dst		1605881	0					
ANR	1605958	Identifier	dst		1605881	1					
ANR	1605959	Identifier	TMP_FREG1		1605881	2					
ANR	1605960	IfStatement	if ( src & SLJIT_MEM )		1605881	8					
ANR	1605961	Condition	src & SLJIT_MEM	1677:5:53271:53285	1605881	0	True				
ANR	1605962	BitAndExpression	src & SLJIT_MEM		1605881	0		&			
ANR	1605963	Identifier	src		1605881	0					
ANR	1605964	Identifier	SLJIT_MEM		1605881	1					
ANR	1605965	CompoundStatement		15:22:374:374	1605881	1					
ANR	1605966	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw )"	1678:2:53292:53367	1605881	0	True				
ANR	1605967	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw )"		1605881	0					
ANR	1605968	Callee	emit_fop_mem		1605881	0					
ANR	1605969	Identifier	emit_fop_mem		1605881	0					
ANR	1605970	ArgumentList	compiler		1605881	1					
ANR	1605971	Argument	compiler		1605881	0					
ANR	1605972	Identifier	compiler		1605881	0					
ANR	1605973	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605881	1					
ANR	1605974	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1605881	0		|			
ANR	1605975	BitAndExpression	op & SLJIT_SINGLE_OP		1605881	0		&			
ANR	1605976	Identifier	op		1605881	0					
ANR	1605977	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1605978	Identifier	FPU_LOAD		1605881	1					
ANR	1605979	Argument	dst_r		1605881	2					
ANR	1605980	Identifier	dst_r		1605881	0					
ANR	1605981	Argument	src		1605881	3					
ANR	1605982	Identifier	src		1605881	0					
ANR	1605983	Argument	srcw		1605881	4					
ANR	1605984	Identifier	srcw		1605881	0					
ANR	1605985	ExpressionStatement	src = dst_r	1679:2:53371:53382	1605881	1	True				
ANR	1605986	AssignmentExpression	src = dst_r		1605881	0		=			
ANR	1605987	Identifier	src		1605881	0					
ANR	1605988	Identifier	dst_r		1605881	1					
ANR	1605989	SwitchStatement	switch ( GET_OPCODE ( op ) )		1605881	9					
ANR	1605990	Condition	GET_OPCODE ( op )	1682:9:53397:53410	1605881	0	True				
ANR	1605991	CallExpression	GET_OPCODE ( op )		1605881	0					
ANR	1605992	Callee	GET_OPCODE		1605881	0					
ANR	1605993	Identifier	GET_OPCODE		1605881	0					
ANR	1605994	ArgumentList	op		1605881	1					
ANR	1605995	Argument	op		1605881	0					
ANR	1605996	Identifier	op		1605881	0					
ANR	1605997	CompoundStatement		20:25:499:499	1605881	1					
ANR	1605998	Label	case SLJIT_DMOV :	1683:1:53416:53431	1605881	0	True				
ANR	1605999	Identifier	SLJIT_DMOV		1605881	0					
ANR	1606000	IfStatement	if ( src != dst_r )		1605881	1					
ANR	1606001	Condition	src != dst_r	1684:6:53439:53450	1605881	0	True				
ANR	1606002	EqualityExpression	src != dst_r		1605881	0		!=			
ANR	1606003	Identifier	src		1605881	0					
ANR	1606004	Identifier	dst_r		1605881	1					
ANR	1606005	CompoundStatement		22:20:539:539	1605881	1					
ANR	1606006	IfStatement	if ( dst_r != TMP_FREG1 )		1605881	0					
ANR	1606007	Condition	dst_r != TMP_FREG1	1685:7:53462:53479	1605881	0	True				
ANR	1606008	EqualityExpression	dst_r != TMP_FREG1		1605881	0		!=			
ANR	1606009	Identifier	dst_r		1605881	0					
ANR	1606010	Identifier	TMP_FREG1		1605881	1					
ANR	1606011	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1686:4:53486:53575	1605881	1	True				
ANR	1606012	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1605881	0					
ANR	1606013	Callee	FAIL_IF		1605881	0					
ANR	1606014	Identifier	FAIL_IF		1605881	0					
ANR	1606015	ArgumentList	"push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	1					
ANR	1606016	Argument	"push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606017	CallExpression	"push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606018	Callee	push_inst32		1605881	0					
ANR	1606019	Identifier	push_inst32		1605881	0					
ANR	1606020	ArgumentList	compiler		1605881	1					
ANR	1606021	Argument	compiler		1605881	0					
ANR	1606022	Identifier	compiler		1605881	0					
ANR	1606023	Argument	VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1					
ANR	1606024	InclusiveOrExpression	VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	0		|			
ANR	1606025	Identifier	VMOV_F32		1605881	0					
ANR	1606026	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606027	BitAndExpression	op & SLJIT_SINGLE_OP		1605881	0		&			
ANR	1606028	Identifier	op		1605881	0					
ANR	1606029	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1606030	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606031	CallExpression	DD4 ( dst_r )		1605881	0					
ANR	1606032	Callee	DD4		1605881	0					
ANR	1606033	Identifier	DD4		1605881	0					
ANR	1606034	ArgumentList	dst_r		1605881	1					
ANR	1606035	Argument	dst_r		1605881	0					
ANR	1606036	Identifier	dst_r		1605881	0					
ANR	1606037	CallExpression	DM4 ( src )		1605881	1					
ANR	1606038	Callee	DM4		1605881	0					
ANR	1606039	Identifier	DM4		1605881	0					
ANR	1606040	ArgumentList	src		1605881	1					
ANR	1606041	Argument	src		1605881	0					
ANR	1606042	Identifier	src		1605881	0					
ANR	1606043	ElseStatement	else		1605881	0					
ANR	1606044	ExpressionStatement	dst_r = src	1688:4:53589:53600	1605881	0	True				
ANR	1606045	AssignmentExpression	dst_r = src		1605881	0		=			
ANR	1606046	Identifier	dst_r		1605881	0					
ANR	1606047	Identifier	src		1605881	1					
ANR	1606048	BreakStatement	break ;	1690:2:53608:53613	1605881	2	True				
ANR	1606049	Label	case SLJIT_DNEG :	1691:1:53616:53631	1605881	3	True				
ANR	1606050	Identifier	SLJIT_DNEG		1605881	0					
ANR	1606051	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1692:2:53635:53724	1605881	4	True				
ANR	1606052	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1605881	0					
ANR	1606053	Callee	FAIL_IF		1605881	0					
ANR	1606054	Identifier	FAIL_IF		1605881	0					
ANR	1606055	ArgumentList	"push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	1					
ANR	1606056	Argument	"push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606057	CallExpression	"push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606058	Callee	push_inst32		1605881	0					
ANR	1606059	Identifier	push_inst32		1605881	0					
ANR	1606060	ArgumentList	compiler		1605881	1					
ANR	1606061	Argument	compiler		1605881	0					
ANR	1606062	Identifier	compiler		1605881	0					
ANR	1606063	Argument	VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1					
ANR	1606064	InclusiveOrExpression	VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	0		|			
ANR	1606065	Identifier	VNEG_F32		1605881	0					
ANR	1606066	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606067	BitAndExpression	op & SLJIT_SINGLE_OP		1605881	0		&			
ANR	1606068	Identifier	op		1605881	0					
ANR	1606069	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1606070	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606071	CallExpression	DD4 ( dst_r )		1605881	0					
ANR	1606072	Callee	DD4		1605881	0					
ANR	1606073	Identifier	DD4		1605881	0					
ANR	1606074	ArgumentList	dst_r		1605881	1					
ANR	1606075	Argument	dst_r		1605881	0					
ANR	1606076	Identifier	dst_r		1605881	0					
ANR	1606077	CallExpression	DM4 ( src )		1605881	1					
ANR	1606078	Callee	DM4		1605881	0					
ANR	1606079	Identifier	DM4		1605881	0					
ANR	1606080	ArgumentList	src		1605881	1					
ANR	1606081	Argument	src		1605881	0					
ANR	1606082	Identifier	src		1605881	0					
ANR	1606083	BreakStatement	break ;	1693:2:53728:53733	1605881	5	True				
ANR	1606084	Label	case SLJIT_DABS :	1694:1:53736:53751	1605881	6	True				
ANR	1606085	Identifier	SLJIT_DABS		1605881	0					
ANR	1606086	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1695:2:53755:53844	1605881	7	True				
ANR	1606087	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1605881	0					
ANR	1606088	Callee	FAIL_IF		1605881	0					
ANR	1606089	Identifier	FAIL_IF		1605881	0					
ANR	1606090	ArgumentList	"push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	1					
ANR	1606091	Argument	"push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606092	CallExpression	"push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606093	Callee	push_inst32		1605881	0					
ANR	1606094	Identifier	push_inst32		1605881	0					
ANR	1606095	ArgumentList	compiler		1605881	1					
ANR	1606096	Argument	compiler		1605881	0					
ANR	1606097	Identifier	compiler		1605881	0					
ANR	1606098	Argument	VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1					
ANR	1606099	InclusiveOrExpression	VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	0		|			
ANR	1606100	Identifier	VABS_F32		1605881	0					
ANR	1606101	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606102	BitAndExpression	op & SLJIT_SINGLE_OP		1605881	0		&			
ANR	1606103	Identifier	op		1605881	0					
ANR	1606104	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1606105	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606106	CallExpression	DD4 ( dst_r )		1605881	0					
ANR	1606107	Callee	DD4		1605881	0					
ANR	1606108	Identifier	DD4		1605881	0					
ANR	1606109	ArgumentList	dst_r		1605881	1					
ANR	1606110	Argument	dst_r		1605881	0					
ANR	1606111	Identifier	dst_r		1605881	0					
ANR	1606112	CallExpression	DM4 ( src )		1605881	1					
ANR	1606113	Callee	DM4		1605881	0					
ANR	1606114	Identifier	DM4		1605881	0					
ANR	1606115	ArgumentList	src		1605881	1					
ANR	1606116	Argument	src		1605881	0					
ANR	1606117	Identifier	src		1605881	0					
ANR	1606118	BreakStatement	break ;	1696:2:53848:53853	1605881	8	True				
ANR	1606119	Label	case SLJIT_CONVD_FROMS :	1697:1:53856:53878	1605881	9	True				
ANR	1606120	Identifier	SLJIT_CONVD_FROMS		1605881	0					
ANR	1606121	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1698:2:53882:53975	1605881	10	True				
ANR	1606122	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1605881	0					
ANR	1606123	Callee	FAIL_IF		1605881	0					
ANR	1606124	Identifier	FAIL_IF		1605881	0					
ANR	1606125	ArgumentList	"push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	1					
ANR	1606126	Argument	"push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606127	CallExpression	"push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1605881	0					
ANR	1606128	Callee	push_inst32		1605881	0					
ANR	1606129	Identifier	push_inst32		1605881	0					
ANR	1606130	ArgumentList	compiler		1605881	1					
ANR	1606131	Argument	compiler		1605881	0					
ANR	1606132	Identifier	compiler		1605881	0					
ANR	1606133	Argument	VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1					
ANR	1606134	InclusiveOrExpression	VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	0		|			
ANR	1606135	Identifier	VCVT_F64_F32		1605881	0					
ANR	1606136	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606137	BitAndExpression	op & SLJIT_SINGLE_OP		1605881	0		&			
ANR	1606138	Identifier	op		1605881	0					
ANR	1606139	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1606140	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1605881	1		|			
ANR	1606141	CallExpression	DD4 ( dst_r )		1605881	0					
ANR	1606142	Callee	DD4		1605881	0					
ANR	1606143	Identifier	DD4		1605881	0					
ANR	1606144	ArgumentList	dst_r		1605881	1					
ANR	1606145	Argument	dst_r		1605881	0					
ANR	1606146	Identifier	dst_r		1605881	0					
ANR	1606147	CallExpression	DM4 ( src )		1605881	1					
ANR	1606148	Callee	DM4		1605881	0					
ANR	1606149	Identifier	DM4		1605881	0					
ANR	1606150	ArgumentList	src		1605881	1					
ANR	1606151	Argument	src		1605881	0					
ANR	1606152	Identifier	src		1605881	0					
ANR	1606153	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1699:2:53979:54000	1605881	11	True				
ANR	1606154	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1605881	0		^=			
ANR	1606155	Identifier	op		1605881	0					
ANR	1606156	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1606157	BreakStatement	break ;	1700:2:54004:54009	1605881	12	True				
ANR	1606158	IfStatement	if ( dst & SLJIT_MEM )		1605881	10					
ANR	1606159	Condition	dst & SLJIT_MEM	1703:5:54020:54034	1605881	0	True				
ANR	1606160	BitAndExpression	dst & SLJIT_MEM		1605881	0		&			
ANR	1606161	Identifier	dst		1605881	0					
ANR	1606162	Identifier	SLJIT_MEM		1605881	1					
ANR	1606163	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , dst_r , dst , dstw ) ;"	1704:2:54039:54110	1605881	1	True				
ANR	1606164	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , dst_r , dst , dstw )"		1605881	0					
ANR	1606165	Callee	emit_fop_mem		1605881	0					
ANR	1606166	Identifier	emit_fop_mem		1605881	0					
ANR	1606167	ArgumentList	compiler		1605881	1					
ANR	1606168	Argument	compiler		1605881	0					
ANR	1606169	Identifier	compiler		1605881	0					
ANR	1606170	Argument	op & SLJIT_SINGLE_OP		1605881	1					
ANR	1606171	BitAndExpression	op & SLJIT_SINGLE_OP		1605881	0		&			
ANR	1606172	Identifier	op		1605881	0					
ANR	1606173	Identifier	SLJIT_SINGLE_OP		1605881	1					
ANR	1606174	Argument	dst_r		1605881	2					
ANR	1606175	Identifier	dst_r		1605881	0					
ANR	1606176	Argument	dst		1605881	3					
ANR	1606177	Identifier	dst		1605881	0					
ANR	1606178	Argument	dstw		1605881	4					
ANR	1606179	Identifier	dstw		1605881	0					
ANR	1606180	ReturnStatement	return SLJIT_SUCCESS ;	1705:1:54113:54133	1605881	11	True				
ANR	1606181	Identifier	SLJIT_SUCCESS		1605881	0					
ANR	1606182	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1605881	1					
ANR	1606183	Identifier	sljit_emit_fop1		1605881	2					
ANR	1606184	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1605881	3					
ANR	1606185	Parameter	struct sljit_compiler * compiler	1660:50:52807:52837	1605881	0	True				
ANR	1606186	ParameterType	struct sljit_compiler *		1605881	0					
ANR	1606187	Identifier	compiler		1605881	1					
ANR	1606188	Parameter	sljit_si op	1660:83:52840:52850	1605881	1	True				
ANR	1606189	ParameterType	sljit_si		1605881	0					
ANR	1606190	Identifier	op		1605881	1					
ANR	1606191	Parameter	sljit_si dst	1661:1:52854:52865	1605881	2	True				
ANR	1606192	ParameterType	sljit_si		1605881	0					
ANR	1606193	Identifier	dst		1605881	1					
ANR	1606194	Parameter	sljit_sw dstw	1661:15:52868:52880	1605881	3	True				
ANR	1606195	ParameterType	sljit_sw		1605881	0					
ANR	1606196	Identifier	dstw		1605881	1					
ANR	1606197	Parameter	sljit_si src	1662:1:52884:52895	1605881	4	True				
ANR	1606198	ParameterType	sljit_si		1605881	0					
ANR	1606199	Identifier	src		1605881	1					
ANR	1606200	Parameter	sljit_sw srcw	1662:15:52898:52910	1605881	5	True				
ANR	1606201	ParameterType	sljit_sw		1605881	0					
ANR	1606202	Identifier	srcw		1605881	1					
ANR	1606203	CFGEntryNode	ENTRY		1605881		True				
ANR	1606204	CFGExitNode	EXIT		1605881		True				
ANR	1606205	Symbol	compiler -> cache_argw		1605881						
ANR	1606206	Symbol	dst		1605881						
ANR	1606207	Symbol	TMP_FREG1		1605881						
ANR	1606208	Symbol	SLJIT_MEM		1605881						
ANR	1606209	Symbol	SLJIT_CONVD_FROMS		1605881						
ANR	1606210	Symbol	DM4		1605881						
ANR	1606211	Symbol	* compiler		1605881						
ANR	1606212	Symbol	VCVT_F64_F32		1605881						
ANR	1606213	Symbol	dst_r		1605881						
ANR	1606214	Symbol	GET_OPCODE		1605881						
ANR	1606215	Symbol	VABS_F32		1605881						
ANR	1606216	Symbol	emit_fop_mem		1605881						
ANR	1606217	Symbol	float_transfer_bit_error		1605881						
ANR	1606218	Symbol	compiler		1605881						
ANR	1606219	Symbol	push_inst32		1605881						
ANR	1606220	Symbol	VNEG_F32		1605881						
ANR	1606221	Symbol	VMOV_F32		1605881						
ANR	1606222	Symbol	op		1605881						
ANR	1606223	Symbol	FAST_IS_REG		1605881						
ANR	1606224	Symbol	src		1605881						
ANR	1606225	Symbol	srcw		1605881						
ANR	1606226	Symbol	compiler -> cache_arg		1605881						
ANR	1606227	Symbol	SLJIT_SINGLE_OP		1605881						
ANR	1606228	Symbol	SLJIT_SUCCESS		1605881						
ANR	1606229	Symbol	FPU_LOAD		1605881						
ANR	1606230	Symbol	DD4		1605881						
ANR	1606231	Symbol	dstw		1605881						
ANR	1606232	Function	sljit_emit_fop2	1708:0:54138:55630							
ANR	1606233	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1606232	0					
ANR	1606234	CompoundStatement		1712:0:54328:55630	1606232	0					
ANR	1606235	IdentifierDeclStatement	sljit_si dst_r ;	1713:1:54331:54345	1606232	0	True				
ANR	1606236	IdentifierDecl	dst_r		1606232	0					
ANR	1606237	IdentifierDeclType	sljit_si		1606232	0					
ANR	1606238	Identifier	dst_r		1606232	1					
ANR	1606239	ExpressionStatement	CHECK_ERROR ( )	1715:1:54349:54362	1606232	1	True				
ANR	1606240	CallExpression	CHECK_ERROR ( )		1606232	0					
ANR	1606241	Callee	CHECK_ERROR		1606232	0					
ANR	1606242	Identifier	CHECK_ERROR		1606232	0					
ANR	1606243	ArgumentList			1606232	1					
ANR	1606244	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1716:1:54365:54444	1606232	2	True				
ANR	1606245	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1606232	0					
ANR	1606246	Callee	CHECK		1606232	0					
ANR	1606247	Identifier	CHECK		1606232	0					
ANR	1606248	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1606232	1					
ANR	1606249	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1606232	0					
ANR	1606250	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1606232	0					
ANR	1606251	Callee	check_sljit_emit_fop2		1606232	0					
ANR	1606252	Identifier	check_sljit_emit_fop2		1606232	0					
ANR	1606253	ArgumentList	compiler		1606232	1					
ANR	1606254	Argument	compiler		1606232	0					
ANR	1606255	Identifier	compiler		1606232	0					
ANR	1606256	Argument	op		1606232	1					
ANR	1606257	Identifier	op		1606232	0					
ANR	1606258	Argument	dst		1606232	2					
ANR	1606259	Identifier	dst		1606232	0					
ANR	1606260	Argument	dstw		1606232	3					
ANR	1606261	Identifier	dstw		1606232	0					
ANR	1606262	Argument	src1		1606232	4					
ANR	1606263	Identifier	src1		1606232	0					
ANR	1606264	Argument	src1w		1606232	5					
ANR	1606265	Identifier	src1w		1606232	0					
ANR	1606266	Argument	src2		1606232	6					
ANR	1606267	Identifier	src2		1606232	0					
ANR	1606268	Argument	src2w		1606232	7					
ANR	1606269	Identifier	src2w		1606232	0					
ANR	1606270	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1717:1:54447:54477	1606232	3	True				
ANR	1606271	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1606232	0					
ANR	1606272	Callee	ADJUST_LOCAL_OFFSET		1606232	0					
ANR	1606273	Identifier	ADJUST_LOCAL_OFFSET		1606232	0					
ANR	1606274	ArgumentList	dst		1606232	1					
ANR	1606275	Argument	dst		1606232	0					
ANR	1606276	Identifier	dst		1606232	0					
ANR	1606277	Argument	dstw		1606232	1					
ANR	1606278	Identifier	dstw		1606232	0					
ANR	1606279	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1718:1:54480:54512	1606232	4	True				
ANR	1606280	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1606232	0					
ANR	1606281	Callee	ADJUST_LOCAL_OFFSET		1606232	0					
ANR	1606282	Identifier	ADJUST_LOCAL_OFFSET		1606232	0					
ANR	1606283	ArgumentList	src1		1606232	1					
ANR	1606284	Argument	src1		1606232	0					
ANR	1606285	Identifier	src1		1606232	0					
ANR	1606286	Argument	src1w		1606232	1					
ANR	1606287	Identifier	src1w		1606232	0					
ANR	1606288	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1719:1:54515:54547	1606232	5	True				
ANR	1606289	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1606232	0					
ANR	1606290	Callee	ADJUST_LOCAL_OFFSET		1606232	0					
ANR	1606291	Identifier	ADJUST_LOCAL_OFFSET		1606232	0					
ANR	1606292	ArgumentList	src2		1606232	1					
ANR	1606293	Argument	src2		1606232	0					
ANR	1606294	Identifier	src2		1606232	0					
ANR	1606295	Argument	src2w		1606232	1					
ANR	1606296	Identifier	src2w		1606232	0					
ANR	1606297	ExpressionStatement	compiler -> cache_arg = 0	1721:1:54551:54574	1606232	6	True				
ANR	1606298	AssignmentExpression	compiler -> cache_arg = 0		1606232	0		=			
ANR	1606299	PtrMemberAccess	compiler -> cache_arg		1606232	0					
ANR	1606300	Identifier	compiler		1606232	0					
ANR	1606301	Identifier	cache_arg		1606232	1					
ANR	1606302	PrimaryExpression	0		1606232	1					
ANR	1606303	ExpressionStatement	compiler -> cache_argw = 0	1722:1:54577:54601	1606232	7	True				
ANR	1606304	AssignmentExpression	compiler -> cache_argw = 0		1606232	0		=			
ANR	1606305	PtrMemberAccess	compiler -> cache_argw		1606232	0					
ANR	1606306	Identifier	compiler		1606232	0					
ANR	1606307	Identifier	cache_argw		1606232	1					
ANR	1606308	PrimaryExpression	0		1606232	1					
ANR	1606309	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1723:1:54604:54625	1606232	8	True				
ANR	1606310	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1606232	0		^=			
ANR	1606311	Identifier	op		1606232	0					
ANR	1606312	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606313	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1725:1:54629:54671	1606232	9	True				
ANR	1606314	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1606232	0		=			
ANR	1606315	Identifier	dst_r		1606232	0					
ANR	1606316	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1606232	1					
ANR	1606317	Condition	FAST_IS_REG ( dst )		1606232	0					
ANR	1606318	CallExpression	FAST_IS_REG ( dst )		1606232	0					
ANR	1606319	Callee	FAST_IS_REG		1606232	0					
ANR	1606320	Identifier	FAST_IS_REG		1606232	0					
ANR	1606321	ArgumentList	dst		1606232	1					
ANR	1606322	Argument	dst		1606232	0					
ANR	1606323	Identifier	dst		1606232	0					
ANR	1606324	Identifier	dst		1606232	1					
ANR	1606325	Identifier	TMP_FREG1		1606232	2					
ANR	1606326	IfStatement	if ( src1 & SLJIT_MEM )		1606232	10					
ANR	1606327	Condition	src1 & SLJIT_MEM	1726:5:54678:54693	1606232	0	True				
ANR	1606328	BitAndExpression	src1 & SLJIT_MEM		1606232	0		&			
ANR	1606329	Identifier	src1		1606232	0					
ANR	1606330	Identifier	SLJIT_MEM		1606232	1					
ANR	1606331	CompoundStatement		15:23:367:367	1606232	1					
ANR	1606332	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"	1727:2:54700:54781	1606232	0	True				
ANR	1606333	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1606232	0					
ANR	1606334	Callee	emit_fop_mem		1606232	0					
ANR	1606335	Identifier	emit_fop_mem		1606232	0					
ANR	1606336	ArgumentList	compiler		1606232	1					
ANR	1606337	Argument	compiler		1606232	0					
ANR	1606338	Identifier	compiler		1606232	0					
ANR	1606339	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1606232	1					
ANR	1606340	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1606232	0		|			
ANR	1606341	BitAndExpression	op & SLJIT_SINGLE_OP		1606232	0		&			
ANR	1606342	Identifier	op		1606232	0					
ANR	1606343	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606344	Identifier	FPU_LOAD		1606232	1					
ANR	1606345	Argument	TMP_FREG1		1606232	2					
ANR	1606346	Identifier	TMP_FREG1		1606232	0					
ANR	1606347	Argument	src1		1606232	3					
ANR	1606348	Identifier	src1		1606232	0					
ANR	1606349	Argument	src1w		1606232	4					
ANR	1606350	Identifier	src1w		1606232	0					
ANR	1606351	ExpressionStatement	src1 = TMP_FREG1	1728:2:54785:54801	1606232	1	True				
ANR	1606352	AssignmentExpression	src1 = TMP_FREG1		1606232	0		=			
ANR	1606353	Identifier	src1		1606232	0					
ANR	1606354	Identifier	TMP_FREG1		1606232	1					
ANR	1606355	IfStatement	if ( src2 & SLJIT_MEM )		1606232	11					
ANR	1606356	Condition	src2 & SLJIT_MEM	1730:5:54811:54826	1606232	0	True				
ANR	1606357	BitAndExpression	src2 & SLJIT_MEM		1606232	0		&			
ANR	1606358	Identifier	src2		1606232	0					
ANR	1606359	Identifier	SLJIT_MEM		1606232	1					
ANR	1606360	CompoundStatement		19:23:500:500	1606232	1					
ANR	1606361	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"	1731:2:54833:54914	1606232	0	True				
ANR	1606362	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1606232	0					
ANR	1606363	Callee	emit_fop_mem		1606232	0					
ANR	1606364	Identifier	emit_fop_mem		1606232	0					
ANR	1606365	ArgumentList	compiler		1606232	1					
ANR	1606366	Argument	compiler		1606232	0					
ANR	1606367	Identifier	compiler		1606232	0					
ANR	1606368	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1606232	1					
ANR	1606369	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1606232	0		|			
ANR	1606370	BitAndExpression	op & SLJIT_SINGLE_OP		1606232	0		&			
ANR	1606371	Identifier	op		1606232	0					
ANR	1606372	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606373	Identifier	FPU_LOAD		1606232	1					
ANR	1606374	Argument	TMP_FREG2		1606232	2					
ANR	1606375	Identifier	TMP_FREG2		1606232	0					
ANR	1606376	Argument	src2		1606232	3					
ANR	1606377	Identifier	src2		1606232	0					
ANR	1606378	Argument	src2w		1606232	4					
ANR	1606379	Identifier	src2w		1606232	0					
ANR	1606380	ExpressionStatement	src2 = TMP_FREG2	1732:2:54918:54934	1606232	1	True				
ANR	1606381	AssignmentExpression	src2 = TMP_FREG2		1606232	0		=			
ANR	1606382	Identifier	src2		1606232	0					
ANR	1606383	Identifier	TMP_FREG2		1606232	1					
ANR	1606384	SwitchStatement	switch ( GET_OPCODE ( op ) )		1606232	12					
ANR	1606385	Condition	GET_OPCODE ( op )	1735:9:54949:54962	1606232	0	True				
ANR	1606386	CallExpression	GET_OPCODE ( op )		1606232	0					
ANR	1606387	Callee	GET_OPCODE		1606232	0					
ANR	1606388	Identifier	GET_OPCODE		1606232	0					
ANR	1606389	ArgumentList	op		1606232	1					
ANR	1606390	Argument	op		1606232	0					
ANR	1606391	Identifier	op		1606232	0					
ANR	1606392	CompoundStatement		24:25:636:636	1606232	1					
ANR	1606393	Label	case SLJIT_DADD :	1736:1:54968:54983	1606232	0	True				
ANR	1606394	Identifier	SLJIT_DADD		1606232	0					
ANR	1606395	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1737:2:54987:55089	1606232	1	True				
ANR	1606396	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1606232	0					
ANR	1606397	Callee	FAIL_IF		1606232	0					
ANR	1606398	Identifier	FAIL_IF		1606232	0					
ANR	1606399	ArgumentList	"push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	1					
ANR	1606400	Argument	"push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606401	CallExpression	"push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606402	Callee	push_inst32		1606232	0					
ANR	1606403	Identifier	push_inst32		1606232	0					
ANR	1606404	ArgumentList	compiler		1606232	1					
ANR	1606405	Argument	compiler		1606232	0					
ANR	1606406	Identifier	compiler		1606232	0					
ANR	1606407	Argument	VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1					
ANR	1606408	InclusiveOrExpression	VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	0		|			
ANR	1606409	Identifier	VADD_F32		1606232	0					
ANR	1606410	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606411	BitAndExpression	op & SLJIT_SINGLE_OP		1606232	0		&			
ANR	1606412	Identifier	op		1606232	0					
ANR	1606413	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606414	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606415	CallExpression	DD4 ( dst_r )		1606232	0					
ANR	1606416	Callee	DD4		1606232	0					
ANR	1606417	Identifier	DD4		1606232	0					
ANR	1606418	ArgumentList	dst_r		1606232	1					
ANR	1606419	Argument	dst_r		1606232	0					
ANR	1606420	Identifier	dst_r		1606232	0					
ANR	1606421	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606422	CallExpression	DN4 ( src1 )		1606232	0					
ANR	1606423	Callee	DN4		1606232	0					
ANR	1606424	Identifier	DN4		1606232	0					
ANR	1606425	ArgumentList	src1		1606232	1					
ANR	1606426	Argument	src1		1606232	0					
ANR	1606427	Identifier	src1		1606232	0					
ANR	1606428	CallExpression	DM4 ( src2 )		1606232	1					
ANR	1606429	Callee	DM4		1606232	0					
ANR	1606430	Identifier	DM4		1606232	0					
ANR	1606431	ArgumentList	src2		1606232	1					
ANR	1606432	Argument	src2		1606232	0					
ANR	1606433	Identifier	src2		1606232	0					
ANR	1606434	BreakStatement	break ;	1738:2:55093:55098	1606232	2	True				
ANR	1606435	Label	case SLJIT_DSUB :	1739:1:55101:55116	1606232	3	True				
ANR	1606436	Identifier	SLJIT_DSUB		1606232	0					
ANR	1606437	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1740:2:55120:55222	1606232	4	True				
ANR	1606438	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1606232	0					
ANR	1606439	Callee	FAIL_IF		1606232	0					
ANR	1606440	Identifier	FAIL_IF		1606232	0					
ANR	1606441	ArgumentList	"push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	1					
ANR	1606442	Argument	"push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606443	CallExpression	"push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606444	Callee	push_inst32		1606232	0					
ANR	1606445	Identifier	push_inst32		1606232	0					
ANR	1606446	ArgumentList	compiler		1606232	1					
ANR	1606447	Argument	compiler		1606232	0					
ANR	1606448	Identifier	compiler		1606232	0					
ANR	1606449	Argument	VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1					
ANR	1606450	InclusiveOrExpression	VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	0		|			
ANR	1606451	Identifier	VSUB_F32		1606232	0					
ANR	1606452	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606453	BitAndExpression	op & SLJIT_SINGLE_OP		1606232	0		&			
ANR	1606454	Identifier	op		1606232	0					
ANR	1606455	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606456	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606457	CallExpression	DD4 ( dst_r )		1606232	0					
ANR	1606458	Callee	DD4		1606232	0					
ANR	1606459	Identifier	DD4		1606232	0					
ANR	1606460	ArgumentList	dst_r		1606232	1					
ANR	1606461	Argument	dst_r		1606232	0					
ANR	1606462	Identifier	dst_r		1606232	0					
ANR	1606463	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606464	CallExpression	DN4 ( src1 )		1606232	0					
ANR	1606465	Callee	DN4		1606232	0					
ANR	1606466	Identifier	DN4		1606232	0					
ANR	1606467	ArgumentList	src1		1606232	1					
ANR	1606468	Argument	src1		1606232	0					
ANR	1606469	Identifier	src1		1606232	0					
ANR	1606470	CallExpression	DM4 ( src2 )		1606232	1					
ANR	1606471	Callee	DM4		1606232	0					
ANR	1606472	Identifier	DM4		1606232	0					
ANR	1606473	ArgumentList	src2		1606232	1					
ANR	1606474	Argument	src2		1606232	0					
ANR	1606475	Identifier	src2		1606232	0					
ANR	1606476	BreakStatement	break ;	1741:2:55226:55231	1606232	5	True				
ANR	1606477	Label	case SLJIT_DMUL :	1742:1:55234:55249	1606232	6	True				
ANR	1606478	Identifier	SLJIT_DMUL		1606232	0					
ANR	1606479	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1743:2:55253:55355	1606232	7	True				
ANR	1606480	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1606232	0					
ANR	1606481	Callee	FAIL_IF		1606232	0					
ANR	1606482	Identifier	FAIL_IF		1606232	0					
ANR	1606483	ArgumentList	"push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	1					
ANR	1606484	Argument	"push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606485	CallExpression	"push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606486	Callee	push_inst32		1606232	0					
ANR	1606487	Identifier	push_inst32		1606232	0					
ANR	1606488	ArgumentList	compiler		1606232	1					
ANR	1606489	Argument	compiler		1606232	0					
ANR	1606490	Identifier	compiler		1606232	0					
ANR	1606491	Argument	VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1					
ANR	1606492	InclusiveOrExpression	VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	0		|			
ANR	1606493	Identifier	VMUL_F32		1606232	0					
ANR	1606494	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606495	BitAndExpression	op & SLJIT_SINGLE_OP		1606232	0		&			
ANR	1606496	Identifier	op		1606232	0					
ANR	1606497	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606498	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606499	CallExpression	DD4 ( dst_r )		1606232	0					
ANR	1606500	Callee	DD4		1606232	0					
ANR	1606501	Identifier	DD4		1606232	0					
ANR	1606502	ArgumentList	dst_r		1606232	1					
ANR	1606503	Argument	dst_r		1606232	0					
ANR	1606504	Identifier	dst_r		1606232	0					
ANR	1606505	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606506	CallExpression	DN4 ( src1 )		1606232	0					
ANR	1606507	Callee	DN4		1606232	0					
ANR	1606508	Identifier	DN4		1606232	0					
ANR	1606509	ArgumentList	src1		1606232	1					
ANR	1606510	Argument	src1		1606232	0					
ANR	1606511	Identifier	src1		1606232	0					
ANR	1606512	CallExpression	DM4 ( src2 )		1606232	1					
ANR	1606513	Callee	DM4		1606232	0					
ANR	1606514	Identifier	DM4		1606232	0					
ANR	1606515	ArgumentList	src2		1606232	1					
ANR	1606516	Argument	src2		1606232	0					
ANR	1606517	Identifier	src2		1606232	0					
ANR	1606518	BreakStatement	break ;	1744:2:55359:55364	1606232	8	True				
ANR	1606519	Label	case SLJIT_DDIV :	1745:1:55367:55382	1606232	9	True				
ANR	1606520	Identifier	SLJIT_DDIV		1606232	0					
ANR	1606521	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1746:2:55386:55488	1606232	10	True				
ANR	1606522	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1606232	0					
ANR	1606523	Callee	FAIL_IF		1606232	0					
ANR	1606524	Identifier	FAIL_IF		1606232	0					
ANR	1606525	ArgumentList	"push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	1					
ANR	1606526	Argument	"push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606527	CallExpression	"push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1606232	0					
ANR	1606528	Callee	push_inst32		1606232	0					
ANR	1606529	Identifier	push_inst32		1606232	0					
ANR	1606530	ArgumentList	compiler		1606232	1					
ANR	1606531	Argument	compiler		1606232	0					
ANR	1606532	Identifier	compiler		1606232	0					
ANR	1606533	Argument	VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1					
ANR	1606534	InclusiveOrExpression	VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	0		|			
ANR	1606535	Identifier	VDIV_F32		1606232	0					
ANR	1606536	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606537	BitAndExpression	op & SLJIT_SINGLE_OP		1606232	0		&			
ANR	1606538	Identifier	op		1606232	0					
ANR	1606539	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606540	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606541	CallExpression	DD4 ( dst_r )		1606232	0					
ANR	1606542	Callee	DD4		1606232	0					
ANR	1606543	Identifier	DD4		1606232	0					
ANR	1606544	ArgumentList	dst_r		1606232	1					
ANR	1606545	Argument	dst_r		1606232	0					
ANR	1606546	Identifier	dst_r		1606232	0					
ANR	1606547	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1606232	1		|			
ANR	1606548	CallExpression	DN4 ( src1 )		1606232	0					
ANR	1606549	Callee	DN4		1606232	0					
ANR	1606550	Identifier	DN4		1606232	0					
ANR	1606551	ArgumentList	src1		1606232	1					
ANR	1606552	Argument	src1		1606232	0					
ANR	1606553	Identifier	src1		1606232	0					
ANR	1606554	CallExpression	DM4 ( src2 )		1606232	1					
ANR	1606555	Callee	DM4		1606232	0					
ANR	1606556	Identifier	DM4		1606232	0					
ANR	1606557	ArgumentList	src2		1606232	1					
ANR	1606558	Argument	src2		1606232	0					
ANR	1606559	Identifier	src2		1606232	0					
ANR	1606560	BreakStatement	break ;	1747:2:55492:55497	1606232	11	True				
ANR	1606561	IfStatement	if ( ! ( dst & SLJIT_MEM ) )		1606232	13					
ANR	1606562	Condition	! ( dst & SLJIT_MEM )	1750:5:55508:55525	1606232	0	True				
ANR	1606563	UnaryOperationExpression	! ( dst & SLJIT_MEM )		1606232	0					
ANR	1606564	UnaryOperator	!		1606232	0					
ANR	1606565	BitAndExpression	dst & SLJIT_MEM		1606232	1		&			
ANR	1606566	Identifier	dst		1606232	0					
ANR	1606567	Identifier	SLJIT_MEM		1606232	1					
ANR	1606568	ReturnStatement	return SLJIT_SUCCESS ;	1751:2:55530:55550	1606232	1	True				
ANR	1606569	Identifier	SLJIT_SUCCESS		1606232	0					
ANR	1606570	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw ) ;"	1752:1:55553:55628	1606232	14	True				
ANR	1606571	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1606232	0					
ANR	1606572	Callee	emit_fop_mem		1606232	0					
ANR	1606573	Identifier	emit_fop_mem		1606232	0					
ANR	1606574	ArgumentList	compiler		1606232	1					
ANR	1606575	Argument	compiler		1606232	0					
ANR	1606576	Identifier	compiler		1606232	0					
ANR	1606577	Argument	op & SLJIT_SINGLE_OP		1606232	1					
ANR	1606578	BitAndExpression	op & SLJIT_SINGLE_OP		1606232	0		&			
ANR	1606579	Identifier	op		1606232	0					
ANR	1606580	Identifier	SLJIT_SINGLE_OP		1606232	1					
ANR	1606581	Argument	TMP_FREG1		1606232	2					
ANR	1606582	Identifier	TMP_FREG1		1606232	0					
ANR	1606583	Argument	dst		1606232	3					
ANR	1606584	Identifier	dst		1606232	0					
ANR	1606585	Argument	dstw		1606232	4					
ANR	1606586	Identifier	dstw		1606232	0					
ANR	1606587	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1606232	1					
ANR	1606588	Identifier	sljit_emit_fop2		1606232	2					
ANR	1606589	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1606232	3					
ANR	1606590	Parameter	struct sljit_compiler * compiler	1708:50:54188:54218	1606232	0	True				
ANR	1606591	ParameterType	struct sljit_compiler *		1606232	0					
ANR	1606592	Identifier	compiler		1606232	1					
ANR	1606593	Parameter	sljit_si op	1708:83:54221:54231	1606232	1	True				
ANR	1606594	ParameterType	sljit_si		1606232	0					
ANR	1606595	Identifier	op		1606232	1					
ANR	1606596	Parameter	sljit_si dst	1709:1:54235:54246	1606232	2	True				
ANR	1606597	ParameterType	sljit_si		1606232	0					
ANR	1606598	Identifier	dst		1606232	1					
ANR	1606599	Parameter	sljit_sw dstw	1709:15:54249:54261	1606232	3	True				
ANR	1606600	ParameterType	sljit_sw		1606232	0					
ANR	1606601	Identifier	dstw		1606232	1					
ANR	1606602	Parameter	sljit_si src1	1710:1:54265:54277	1606232	4	True				
ANR	1606603	ParameterType	sljit_si		1606232	0					
ANR	1606604	Identifier	src1		1606232	1					
ANR	1606605	Parameter	sljit_sw src1w	1710:16:54280:54293	1606232	5	True				
ANR	1606606	ParameterType	sljit_sw		1606232	0					
ANR	1606607	Identifier	src1w		1606232	1					
ANR	1606608	Parameter	sljit_si src2	1711:1:54297:54309	1606232	6	True				
ANR	1606609	ParameterType	sljit_si		1606232	0					
ANR	1606610	Identifier	src2		1606232	1					
ANR	1606611	Parameter	sljit_sw src2w	1711:16:54312:54325	1606232	7	True				
ANR	1606612	ParameterType	sljit_sw		1606232	0					
ANR	1606613	Identifier	src2w		1606232	1					
ANR	1606614	CFGEntryNode	ENTRY		1606232		True				
ANR	1606615	CFGExitNode	EXIT		1606232		True				
ANR	1606616	Symbol	compiler -> cache_argw		1606232						
ANR	1606617	Symbol	TMP_FREG2		1606232						
ANR	1606618	Symbol	src1w		1606232						
ANR	1606619	Symbol	dst		1606232						
ANR	1606620	Symbol	TMP_FREG1		1606232						
ANR	1606621	Symbol	SLJIT_MEM		1606232						
ANR	1606622	Symbol	VDIV_F32		1606232						
ANR	1606623	Symbol	DM4		1606232						
ANR	1606624	Symbol	* compiler		1606232						
ANR	1606625	Symbol	dst_r		1606232						
ANR	1606626	Symbol	GET_OPCODE		1606232						
ANR	1606627	Symbol	VSUB_F32		1606232						
ANR	1606628	Symbol	emit_fop_mem		1606232						
ANR	1606629	Symbol	compiler		1606232						
ANR	1606630	Symbol	push_inst32		1606232						
ANR	1606631	Symbol	VADD_F32		1606232						
ANR	1606632	Symbol	src2w		1606232						
ANR	1606633	Symbol	op		1606232						
ANR	1606634	Symbol	FAST_IS_REG		1606232						
ANR	1606635	Symbol	compiler -> cache_arg		1606232						
ANR	1606636	Symbol	SLJIT_SINGLE_OP		1606232						
ANR	1606637	Symbol	SLJIT_SUCCESS		1606232						
ANR	1606638	Symbol	check_sljit_emit_fop2		1606232						
ANR	1606639	Symbol	DN4		1606232						
ANR	1606640	Symbol	FPU_LOAD		1606232						
ANR	1606641	Symbol	DD4		1606232						
ANR	1606642	Symbol	src1		1606232						
ANR	1606643	Symbol	VMUL_F32		1606232						
ANR	1606644	Symbol	src2		1606232						
ANR	1606645	Symbol	dstw		1606232						
ANR	1606646	Function	sljit_emit_fast_enter	1755:1:55634:56644							
ANR	1606647	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1606646	0					
ANR	1606648	CompoundStatement		1762:0:55997:56644	1606646	0					
ANR	1606649	ExpressionStatement	CHECK_ERROR ( )	1763:1:56000:56013	1606646	0	True				
ANR	1606650	CallExpression	CHECK_ERROR ( )		1606646	0					
ANR	1606651	Callee	CHECK_ERROR		1606646	0					
ANR	1606652	Identifier	CHECK_ERROR		1606646	0					
ANR	1606653	ArgumentList			1606646	1					
ANR	1606654	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	1764:1:56016:56071	1606646	1	True				
ANR	1606655	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1606646	0					
ANR	1606656	Callee	CHECK		1606646	0					
ANR	1606657	Identifier	CHECK		1606646	0					
ANR	1606658	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1606646	1					
ANR	1606659	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1606646	0					
ANR	1606660	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1606646	0					
ANR	1606661	Callee	check_sljit_emit_fast_enter		1606646	0					
ANR	1606662	Identifier	check_sljit_emit_fast_enter		1606646	0					
ANR	1606663	ArgumentList	compiler		1606646	1					
ANR	1606664	Argument	compiler		1606646	0					
ANR	1606665	Identifier	compiler		1606646	0					
ANR	1606666	Argument	dst		1606646	1					
ANR	1606667	Identifier	dst		1606646	0					
ANR	1606668	Argument	dstw		1606646	2					
ANR	1606669	Identifier	dstw		1606646	0					
ANR	1606670	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1765:1:56074:56104	1606646	2	True				
ANR	1606671	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1606646	0					
ANR	1606672	Callee	ADJUST_LOCAL_OFFSET		1606646	0					
ANR	1606673	Identifier	ADJUST_LOCAL_OFFSET		1606646	0					
ANR	1606674	ArgumentList	dst		1606646	1					
ANR	1606675	Argument	dst		1606646	0					
ANR	1606676	Identifier	dst		1606646	0					
ANR	1606677	Argument	dstw		1606646	1					
ANR	1606678	Identifier	dstw		1606646	0					
ANR	1606679	IfStatement	if ( dst == SLJIT_UNUSED )		1606646	3					
ANR	1606680	Condition	dst == SLJIT_UNUSED	1768:5:56159:56177	1606646	0	True				
ANR	1606681	EqualityExpression	dst == SLJIT_UNUSED		1606646	0		==			
ANR	1606682	Identifier	dst		1606646	0					
ANR	1606683	Identifier	SLJIT_UNUSED		1606646	1					
ANR	1606684	ReturnStatement	return SLJIT_SUCCESS ;	1769:2:56182:56202	1606646	1	True				
ANR	1606685	Identifier	SLJIT_SUCCESS		1606646	0					
ANR	1606686	IfStatement	if ( FAST_IS_REG ( dst ) )		1606646	4					
ANR	1606687	Condition	FAST_IS_REG ( dst )	1771:5:56210:56225	1606646	0	True				
ANR	1606688	CallExpression	FAST_IS_REG ( dst )		1606646	0					
ANR	1606689	Callee	FAST_IS_REG		1606646	0					
ANR	1606690	Identifier	FAST_IS_REG		1606646	0					
ANR	1606691	ArgumentList	dst		1606646	1					
ANR	1606692	Argument	dst		1606646	0					
ANR	1606693	Identifier	dst		1606646	0					
ANR	1606694	ReturnStatement	"return push_inst16 ( compiler , MOV | SET_REGS44 ( dst , TMP_REG3 ) ) ;"	1772:2:56230:56291	1606646	1	True				
ANR	1606695	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( dst , TMP_REG3 ) )"		1606646	0					
ANR	1606696	Callee	push_inst16		1606646	0					
ANR	1606697	Identifier	push_inst16		1606646	0					
ANR	1606698	ArgumentList	compiler		1606646	1					
ANR	1606699	Argument	compiler		1606646	0					
ANR	1606700	Identifier	compiler		1606646	0					
ANR	1606701	Argument	"MOV | SET_REGS44 ( dst , TMP_REG3 )"		1606646	1					
ANR	1606702	InclusiveOrExpression	"MOV | SET_REGS44 ( dst , TMP_REG3 )"		1606646	0		|			
ANR	1606703	Identifier	MOV		1606646	0					
ANR	1606704	CallExpression	"SET_REGS44 ( dst , TMP_REG3 )"		1606646	1					
ANR	1606705	Callee	SET_REGS44		1606646	0					
ANR	1606706	Identifier	SET_REGS44		1606646	0					
ANR	1606707	ArgumentList	dst		1606646	1					
ANR	1606708	Argument	dst		1606646	0					
ANR	1606709	Identifier	dst		1606646	0					
ANR	1606710	Argument	TMP_REG3		1606646	1					
ANR	1606711	Identifier	TMP_REG3		1606646	0					
ANR	1606712	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE | STORE , TMP_REG3 , dst , dstw ) )"		1606646	5					
ANR	1606713	Condition	"getput_arg_fast ( compiler , WORD_SIZE | STORE , TMP_REG3 , dst , dstw )"	1775:5:56314:56378	1606646	0	True				
ANR	1606714	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE | STORE , TMP_REG3 , dst , dstw )"		1606646	0					
ANR	1606715	Callee	getput_arg_fast		1606646	0					
ANR	1606716	Identifier	getput_arg_fast		1606646	0					
ANR	1606717	ArgumentList	compiler		1606646	1					
ANR	1606718	Argument	compiler		1606646	0					
ANR	1606719	Identifier	compiler		1606646	0					
ANR	1606720	Argument	WORD_SIZE | STORE		1606646	1					
ANR	1606721	InclusiveOrExpression	WORD_SIZE | STORE		1606646	0		|			
ANR	1606722	Identifier	WORD_SIZE		1606646	0					
ANR	1606723	Identifier	STORE		1606646	1					
ANR	1606724	Argument	TMP_REG3		1606646	2					
ANR	1606725	Identifier	TMP_REG3		1606646	0					
ANR	1606726	Argument	dst		1606646	3					
ANR	1606727	Identifier	dst		1606646	0					
ANR	1606728	Argument	dstw		1606646	4					
ANR	1606729	Identifier	dstw		1606646	0					
ANR	1606730	ReturnStatement	return compiler -> error ;	1776:2:56383:56405	1606646	1	True				
ANR	1606731	PtrMemberAccess	compiler -> error		1606646	0					
ANR	1606732	Identifier	compiler		1606646	0					
ANR	1606733	Identifier	error		1606646	1					
ANR	1606734	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) ) )"	1778:1:56445:56513	1606646	6	True				
ANR	1606735	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) ) )"		1606646	0					
ANR	1606736	Callee	FAIL_IF		1606646	0					
ANR	1606737	Identifier	FAIL_IF		1606646	0					
ANR	1606738	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) )"		1606646	1					
ANR	1606739	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) )"		1606646	0					
ANR	1606740	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) )"		1606646	0					
ANR	1606741	Callee	push_inst16		1606646	0					
ANR	1606742	Identifier	push_inst16		1606646	0					
ANR	1606743	ArgumentList	compiler		1606646	1					
ANR	1606744	Argument	compiler		1606646	0					
ANR	1606745	Identifier	compiler		1606646	0					
ANR	1606746	Argument	"MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 )"		1606646	1					
ANR	1606747	InclusiveOrExpression	"MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 )"		1606646	0		|			
ANR	1606748	Identifier	MOV		1606646	0					
ANR	1606749	CallExpression	"SET_REGS44 ( TMP_REG2 , TMP_REG3 )"		1606646	1					
ANR	1606750	Callee	SET_REGS44		1606646	0					
ANR	1606751	Identifier	SET_REGS44		1606646	0					
ANR	1606752	ArgumentList	TMP_REG2		1606646	1					
ANR	1606753	Argument	TMP_REG2		1606646	0					
ANR	1606754	Identifier	TMP_REG2		1606646	0					
ANR	1606755	Argument	TMP_REG3		1606646	1					
ANR	1606756	Identifier	TMP_REG3		1606646	0					
ANR	1606757	ExpressionStatement	compiler -> cache_arg = 0	1779:1:56516:56539	1606646	7	True				
ANR	1606758	AssignmentExpression	compiler -> cache_arg = 0		1606646	0		=			
ANR	1606759	PtrMemberAccess	compiler -> cache_arg		1606646	0					
ANR	1606760	Identifier	compiler		1606646	0					
ANR	1606761	Identifier	cache_arg		1606646	1					
ANR	1606762	PrimaryExpression	0		1606646	1					
ANR	1606763	ExpressionStatement	compiler -> cache_argw = 0	1780:1:56542:56566	1606646	8	True				
ANR	1606764	AssignmentExpression	compiler -> cache_argw = 0		1606646	0		=			
ANR	1606765	PtrMemberAccess	compiler -> cache_argw		1606646	0					
ANR	1606766	Identifier	compiler		1606646	0					
ANR	1606767	Identifier	cache_argw		1606646	1					
ANR	1606768	PrimaryExpression	0		1606646	1					
ANR	1606769	ReturnStatement	"return getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 ) ;"	1781:1:56569:56642	1606646	9	True				
ANR	1606770	CallExpression	"getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1606646	0					
ANR	1606771	Callee	getput_arg		1606646	0					
ANR	1606772	Identifier	getput_arg		1606646	0					
ANR	1606773	ArgumentList	compiler		1606646	1					
ANR	1606774	Argument	compiler		1606646	0					
ANR	1606775	Identifier	compiler		1606646	0					
ANR	1606776	Argument	WORD_SIZE | STORE		1606646	1					
ANR	1606777	InclusiveOrExpression	WORD_SIZE | STORE		1606646	0		|			
ANR	1606778	Identifier	WORD_SIZE		1606646	0					
ANR	1606779	Identifier	STORE		1606646	1					
ANR	1606780	Argument	TMP_REG2		1606646	2					
ANR	1606781	Identifier	TMP_REG2		1606646	0					
ANR	1606782	Argument	dst		1606646	3					
ANR	1606783	Identifier	dst		1606646	0					
ANR	1606784	Argument	dstw		1606646	4					
ANR	1606785	Identifier	dstw		1606646	0					
ANR	1606786	Argument	0		1606646	5					
ANR	1606787	PrimaryExpression	0		1606646	0					
ANR	1606788	Argument	0		1606646	6					
ANR	1606789	PrimaryExpression	0		1606646	0					
ANR	1606790	ReturnType	undef FPU_LOAD SLJIT_API_FUNC_ATTRIBUTE sljit_si		1606646	1					
ANR	1606791	Identifier	sljit_emit_fast_enter		1606646	2					
ANR	1606792	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1606646	3					
ANR	1606793	Parameter	struct sljit_compiler * compiler	1761:56:55935:55965	1606646	0	True				
ANR	1606794	ParameterType	struct sljit_compiler *		1606646	0					
ANR	1606795	Identifier	compiler		1606646	1					
ANR	1606796	Parameter	sljit_si dst	1761:89:55968:55979	1606646	1	True				
ANR	1606797	ParameterType	sljit_si		1606646	0					
ANR	1606798	Identifier	dst		1606646	1					
ANR	1606799	Parameter	sljit_sw dstw	1761:103:55982:55994	1606646	2	True				
ANR	1606800	ParameterType	sljit_sw		1606646	0					
ANR	1606801	Identifier	dstw		1606646	1					
ANR	1606802	CFGEntryNode	ENTRY		1606646		True				
ANR	1606803	CFGExitNode	EXIT		1606646		True				
ANR	1606804	Symbol	TMP_REG3		1606646						
ANR	1606805	Symbol	TMP_REG2		1606646						
ANR	1606806	Symbol	check_sljit_emit_fast_enter		1606646						
ANR	1606807	Symbol	compiler -> cache_argw		1606646						
ANR	1606808	Symbol	FAST_IS_REG		1606646						
ANR	1606809	Symbol	dst		1606646						
ANR	1606810	Symbol	compiler -> cache_arg		1606646						
ANR	1606811	Symbol	push_inst16		1606646						
ANR	1606812	Symbol	SLJIT_SUCCESS		1606646						
ANR	1606813	Symbol	* compiler		1606646						
ANR	1606814	Symbol	SET_REGS44		1606646						
ANR	1606815	Symbol	SLJIT_UNUSED		1606646						
ANR	1606816	Symbol	getput_arg		1606646						
ANR	1606817	Symbol	MOV		1606646						
ANR	1606818	Symbol	STORE		1606646						
ANR	1606819	Symbol	compiler		1606646						
ANR	1606820	Symbol	getput_arg_fast		1606646						
ANR	1606821	Symbol	dstw		1606646						
ANR	1606822	Symbol	compiler -> error		1606646						
ANR	1606823	Symbol	WORD_SIZE		1606646						
ANR	1606824	Function	sljit_emit_fast_return	1784:0:56647:57440							
ANR	1606825	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1606824	0					
ANR	1606826	CompoundStatement		1785:0:56766:57440	1606824	0					
ANR	1606827	ExpressionStatement	CHECK_ERROR ( )	1786:1:56769:56782	1606824	0	True				
ANR	1606828	CallExpression	CHECK_ERROR ( )		1606824	0					
ANR	1606829	Callee	CHECK_ERROR		1606824	0					
ANR	1606830	Identifier	CHECK_ERROR		1606824	0					
ANR	1606831	ArgumentList			1606824	1					
ANR	1606832	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	1787:1:56785:56841	1606824	1	True				
ANR	1606833	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1606824	0					
ANR	1606834	Callee	CHECK		1606824	0					
ANR	1606835	Identifier	CHECK		1606824	0					
ANR	1606836	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1606824	1					
ANR	1606837	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1606824	0					
ANR	1606838	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1606824	0					
ANR	1606839	Callee	check_sljit_emit_fast_return		1606824	0					
ANR	1606840	Identifier	check_sljit_emit_fast_return		1606824	0					
ANR	1606841	ArgumentList	compiler		1606824	1					
ANR	1606842	Argument	compiler		1606824	0					
ANR	1606843	Identifier	compiler		1606824	0					
ANR	1606844	Argument	src		1606824	1					
ANR	1606845	Identifier	src		1606824	0					
ANR	1606846	Argument	srcw		1606824	2					
ANR	1606847	Identifier	srcw		1606824	0					
ANR	1606848	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1788:1:56844:56874	1606824	2	True				
ANR	1606849	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1606824	0					
ANR	1606850	Callee	ADJUST_LOCAL_OFFSET		1606824	0					
ANR	1606851	Identifier	ADJUST_LOCAL_OFFSET		1606824	0					
ANR	1606852	ArgumentList	src		1606824	1					
ANR	1606853	Argument	src		1606824	0					
ANR	1606854	Identifier	src		1606824	0					
ANR	1606855	Argument	srcw		1606824	1					
ANR	1606856	Identifier	srcw		1606824	0					
ANR	1606857	IfStatement	if ( FAST_IS_REG ( src ) )		1606824	3					
ANR	1606858	Condition	FAST_IS_REG ( src )	1790:5:56882:56897	1606824	0	True				
ANR	1606859	CallExpression	FAST_IS_REG ( src )		1606824	0					
ANR	1606860	Callee	FAST_IS_REG		1606824	0					
ANR	1606861	Identifier	FAST_IS_REG		1606824	0					
ANR	1606862	ArgumentList	src		1606824	1					
ANR	1606863	Argument	src		1606824	0					
ANR	1606864	Identifier	src		1606824	0					
ANR	1606865	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) ) )"	1791:2:56902:56965	1606824	1	True				
ANR	1606866	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) ) )"		1606824	0					
ANR	1606867	Callee	FAIL_IF		1606824	0					
ANR	1606868	Identifier	FAIL_IF		1606824	0					
ANR	1606869	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) )"		1606824	1					
ANR	1606870	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) )"		1606824	0					
ANR	1606871	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) )"		1606824	0					
ANR	1606872	Callee	push_inst16		1606824	0					
ANR	1606873	Identifier	push_inst16		1606824	0					
ANR	1606874	ArgumentList	compiler		1606824	1					
ANR	1606875	Argument	compiler		1606824	0					
ANR	1606876	Identifier	compiler		1606824	0					
ANR	1606877	Argument	"MOV | SET_REGS44 ( TMP_REG3 , src )"		1606824	1					
ANR	1606878	InclusiveOrExpression	"MOV | SET_REGS44 ( TMP_REG3 , src )"		1606824	0		|			
ANR	1606879	Identifier	MOV		1606824	0					
ANR	1606880	CallExpression	"SET_REGS44 ( TMP_REG3 , src )"		1606824	1					
ANR	1606881	Callee	SET_REGS44		1606824	0					
ANR	1606882	Identifier	SET_REGS44		1606824	0					
ANR	1606883	ArgumentList	TMP_REG3		1606824	1					
ANR	1606884	Argument	TMP_REG3		1606824	0					
ANR	1606885	Identifier	TMP_REG3		1606824	0					
ANR	1606886	Argument	src		1606824	1					
ANR	1606887	Identifier	src		1606824	0					
ANR	1606888	ElseStatement	else		1606824	0					
ANR	1606889	IfStatement	if ( src & SLJIT_MEM )		1606824	0					
ANR	1606890	Condition	src & SLJIT_MEM	1792:10:56977:56991	1606824	0	True				
ANR	1606891	BitAndExpression	src & SLJIT_MEM		1606824	0		&			
ANR	1606892	Identifier	src		1606824	0					
ANR	1606893	Identifier	SLJIT_MEM		1606824	1					
ANR	1606894	CompoundStatement		8:27:227:227	1606824	1					
ANR	1606895	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG3 , src , srcw ) )"		1606824	0					
ANR	1606896	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG3 , src , srcw )"	1793:6:57002:57058	1606824	0	True				
ANR	1606897	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG3 , src , srcw )"		1606824	0					
ANR	1606898	Callee	getput_arg_fast		1606824	0					
ANR	1606899	Identifier	getput_arg_fast		1606824	0					
ANR	1606900	ArgumentList	compiler		1606824	1					
ANR	1606901	Argument	compiler		1606824	0					
ANR	1606902	Identifier	compiler		1606824	0					
ANR	1606903	Argument	WORD_SIZE		1606824	1					
ANR	1606904	Identifier	WORD_SIZE		1606824	0					
ANR	1606905	Argument	TMP_REG3		1606824	2					
ANR	1606906	Identifier	TMP_REG3		1606824	0					
ANR	1606907	Argument	src		1606824	3					
ANR	1606908	Identifier	src		1606824	0					
ANR	1606909	Argument	srcw		1606824	4					
ANR	1606910	Identifier	srcw		1606824	0					
ANR	1606911	ExpressionStatement	FAIL_IF ( compiler -> error )	1794:3:57064:57088	1606824	1	True				
ANR	1606912	CallExpression	FAIL_IF ( compiler -> error )		1606824	0					
ANR	1606913	Callee	FAIL_IF		1606824	0					
ANR	1606914	Identifier	FAIL_IF		1606824	0					
ANR	1606915	ArgumentList	compiler -> error		1606824	1					
ANR	1606916	Argument	compiler -> error		1606824	0					
ANR	1606917	PtrMemberAccess	compiler -> error		1606824	0					
ANR	1606918	Identifier	compiler		1606824	0					
ANR	1606919	Identifier	error		1606824	1					
ANR	1606920	ElseStatement	else		1606824	0					
ANR	1606921	CompoundStatement		11:7:330:330	1606824	0					
ANR	1606922	ExpressionStatement	compiler -> cache_arg = 0	1796:3:57102:57125	1606824	0	True				
ANR	1606923	AssignmentExpression	compiler -> cache_arg = 0		1606824	0		=			
ANR	1606924	PtrMemberAccess	compiler -> cache_arg		1606824	0					
ANR	1606925	Identifier	compiler		1606824	0					
ANR	1606926	Identifier	cache_arg		1606824	1					
ANR	1606927	PrimaryExpression	0		1606824	1					
ANR	1606928	ExpressionStatement	compiler -> cache_argw = 0	1797:3:57130:57154	1606824	1	True				
ANR	1606929	AssignmentExpression	compiler -> cache_argw = 0		1606824	0		=			
ANR	1606930	PtrMemberAccess	compiler -> cache_argw		1606824	0					
ANR	1606931	Identifier	compiler		1606824	0					
ANR	1606932	Identifier	cache_argw		1606824	1					
ANR	1606933	PrimaryExpression	0		1606824	1					
ANR	1606934	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 ) )"	1798:3:57159:57226	1606824	2	True				
ANR	1606935	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 ) )"		1606824	0					
ANR	1606936	Callee	FAIL_IF		1606824	0					
ANR	1606937	Identifier	FAIL_IF		1606824	0					
ANR	1606938	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 )"		1606824	1					
ANR	1606939	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 )"		1606824	0					
ANR	1606940	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 )"		1606824	0					
ANR	1606941	Callee	getput_arg		1606824	0					
ANR	1606942	Identifier	getput_arg		1606824	0					
ANR	1606943	ArgumentList	compiler		1606824	1					
ANR	1606944	Argument	compiler		1606824	0					
ANR	1606945	Identifier	compiler		1606824	0					
ANR	1606946	Argument	WORD_SIZE		1606824	1					
ANR	1606947	Identifier	WORD_SIZE		1606824	0					
ANR	1606948	Argument	TMP_REG2		1606824	2					
ANR	1606949	Identifier	TMP_REG2		1606824	0					
ANR	1606950	Argument	src		1606824	3					
ANR	1606951	Identifier	src		1606824	0					
ANR	1606952	Argument	srcw		1606824	4					
ANR	1606953	Identifier	srcw		1606824	0					
ANR	1606954	Argument	0		1606824	5					
ANR	1606955	PrimaryExpression	0		1606824	0					
ANR	1606956	Argument	0		1606824	6					
ANR	1606957	PrimaryExpression	0		1606824	0					
ANR	1606958	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) ) )"	1799:3:57231:57299	1606824	3	True				
ANR	1606959	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) ) )"		1606824	0					
ANR	1606960	Callee	FAIL_IF		1606824	0					
ANR	1606961	Identifier	FAIL_IF		1606824	0					
ANR	1606962	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) )"		1606824	1					
ANR	1606963	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) )"		1606824	0					
ANR	1606964	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) )"		1606824	0					
ANR	1606965	Callee	push_inst16		1606824	0					
ANR	1606966	Identifier	push_inst16		1606824	0					
ANR	1606967	ArgumentList	compiler		1606824	1					
ANR	1606968	Argument	compiler		1606824	0					
ANR	1606969	Identifier	compiler		1606824	0					
ANR	1606970	Argument	"MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 )"		1606824	1					
ANR	1606971	InclusiveOrExpression	"MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 )"		1606824	0		|			
ANR	1606972	Identifier	MOV		1606824	0					
ANR	1606973	CallExpression	"SET_REGS44 ( TMP_REG3 , TMP_REG2 )"		1606824	1					
ANR	1606974	Callee	SET_REGS44		1606824	0					
ANR	1606975	Identifier	SET_REGS44		1606824	0					
ANR	1606976	ArgumentList	TMP_REG3		1606824	1					
ANR	1606977	Argument	TMP_REG3		1606824	0					
ANR	1606978	Identifier	TMP_REG3		1606824	0					
ANR	1606979	Argument	TMP_REG2		1606824	1					
ANR	1606980	Identifier	TMP_REG2		1606824	0					
ANR	1606981	ElseStatement	else		1606824	0					
ANR	1606982	IfStatement	if ( src & SLJIT_IMM )		1606824	0					
ANR	1606983	Condition	src & SLJIT_IMM	1802:10:57318:57332	1606824	0	True				
ANR	1606984	BitAndExpression	src & SLJIT_IMM		1606824	0		&			
ANR	1606985	Identifier	src		1606824	0					
ANR	1606986	Identifier	SLJIT_IMM		1606824	1					
ANR	1606987	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , srcw ) )"	1803:2:57337:57386	1606824	1	True				
ANR	1606988	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , srcw ) )"		1606824	0					
ANR	1606989	Callee	FAIL_IF		1606824	0					
ANR	1606990	Identifier	FAIL_IF		1606824	0					
ANR	1606991	ArgumentList	"load_immediate ( compiler , TMP_REG3 , srcw )"		1606824	1					
ANR	1606992	Argument	"load_immediate ( compiler , TMP_REG3 , srcw )"		1606824	0					
ANR	1606993	CallExpression	"load_immediate ( compiler , TMP_REG3 , srcw )"		1606824	0					
ANR	1606994	Callee	load_immediate		1606824	0					
ANR	1606995	Identifier	load_immediate		1606824	0					
ANR	1606996	ArgumentList	compiler		1606824	1					
ANR	1606997	Argument	compiler		1606824	0					
ANR	1606998	Identifier	compiler		1606824	0					
ANR	1606999	Argument	TMP_REG3		1606824	1					
ANR	1607000	Identifier	TMP_REG3		1606824	0					
ANR	1607001	Argument	srcw		1606824	2					
ANR	1607002	Identifier	srcw		1606824	0					
ANR	1607003	ReturnStatement	"return push_inst16 ( compiler , BLX | RN3 ( TMP_REG3 ) ) ;"	1804:1:57389:57438	1606824	4	True				
ANR	1607004	CallExpression	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG3 ) )"		1606824	0					
ANR	1607005	Callee	push_inst16		1606824	0					
ANR	1607006	Identifier	push_inst16		1606824	0					
ANR	1607007	ArgumentList	compiler		1606824	1					
ANR	1607008	Argument	compiler		1606824	0					
ANR	1607009	Identifier	compiler		1606824	0					
ANR	1607010	Argument	BLX | RN3 ( TMP_REG3 )		1606824	1					
ANR	1607011	InclusiveOrExpression	BLX | RN3 ( TMP_REG3 )		1606824	0		|			
ANR	1607012	Identifier	BLX		1606824	0					
ANR	1607013	CallExpression	RN3 ( TMP_REG3 )		1606824	1					
ANR	1607014	Callee	RN3		1606824	0					
ANR	1607015	Identifier	RN3		1606824	0					
ANR	1607016	ArgumentList	TMP_REG3		1606824	1					
ANR	1607017	Argument	TMP_REG3		1606824	0					
ANR	1607018	Identifier	TMP_REG3		1606824	0					
ANR	1607019	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1606824	1					
ANR	1607020	Identifier	sljit_emit_fast_return		1606824	2					
ANR	1607021	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1606824	3					
ANR	1607022	Parameter	struct sljit_compiler * compiler	1784:57:56704:56734	1606824	0	True				
ANR	1607023	ParameterType	struct sljit_compiler *		1606824	0					
ANR	1607024	Identifier	compiler		1606824	1					
ANR	1607025	Parameter	sljit_si src	1784:90:56737:56748	1606824	1	True				
ANR	1607026	ParameterType	sljit_si		1606824	0					
ANR	1607027	Identifier	src		1606824	1					
ANR	1607028	Parameter	sljit_sw srcw	1784:104:56751:56763	1606824	2	True				
ANR	1607029	ParameterType	sljit_sw		1606824	0					
ANR	1607030	Identifier	srcw		1606824	1					
ANR	1607031	CFGEntryNode	ENTRY		1606824		True				
ANR	1607032	CFGExitNode	EXIT		1606824		True				
ANR	1607033	Symbol	TMP_REG3		1606824						
ANR	1607034	Symbol	TMP_REG2		1606824						
ANR	1607035	Symbol	compiler -> cache_argw		1606824						
ANR	1607036	Symbol	FAST_IS_REG		1606824						
ANR	1607037	Symbol	src		1606824						
ANR	1607038	Symbol	srcw		1606824						
ANR	1607039	Symbol	SLJIT_MEM		1606824						
ANR	1607040	Symbol	compiler -> cache_arg		1606824						
ANR	1607041	Symbol	push_inst16		1606824						
ANR	1607042	Symbol	* compiler		1606824						
ANR	1607043	Symbol	BLX		1606824						
ANR	1607044	Symbol	SLJIT_IMM		1606824						
ANR	1607045	Symbol	SET_REGS44		1606824						
ANR	1607046	Symbol	check_sljit_emit_fast_return		1606824						
ANR	1607047	Symbol	getput_arg		1606824						
ANR	1607048	Symbol	load_immediate		1606824						
ANR	1607049	Symbol	MOV		1606824						
ANR	1607050	Symbol	RN3		1606824						
ANR	1607051	Symbol	compiler		1606824						
ANR	1607052	Symbol	getput_arg_fast		1606824						
ANR	1607053	Symbol	compiler -> error		1606824						
ANR	1607054	Symbol	WORD_SIZE		1606824						
ANR	1607055	Function	get_cc	1811:0:57672:58510							
ANR	1607056	FunctionDef	get_cc (sljit_si type)		1607055	0					
ANR	1607057	CompoundStatement		1812:0:57710:58510	1607055	0					
ANR	1607058	SwitchStatement	switch ( type )		1607055	0					
ANR	1607059	Condition	type	1813:9:57721:57724	1607055	0	True				
ANR	1607060	Identifier	type		1607055	0					
ANR	1607061	CompoundStatement		2:15:16:16	1607055	1					
ANR	1607062	Label	case SLJIT_EQUAL :	1814:1:57730:57746	1607055	0	True				
ANR	1607063	Identifier	SLJIT_EQUAL		1607055	0					
ANR	1607064	Label	case SLJIT_MUL_NOT_OVERFLOW :	1815:1:57749:57776	1607055	1	True				
ANR	1607065	Identifier	SLJIT_MUL_NOT_OVERFLOW		1607055	0					
ANR	1607066	Label	case SLJIT_D_EQUAL :	1816:1:57779:57797	1607055	2	True				
ANR	1607067	Identifier	SLJIT_D_EQUAL		1607055	0					
ANR	1607068	ReturnStatement	return 0x0 ;	1817:2:57801:57811	1607055	3	True				
ANR	1607069	PrimaryExpression	0x0		1607055	0					
ANR	1607070	Label	case SLJIT_NOT_EQUAL :	1819:1:57815:57835	1607055	4	True				
ANR	1607071	Identifier	SLJIT_NOT_EQUAL		1607055	0					
ANR	1607072	Label	case SLJIT_MUL_OVERFLOW :	1820:1:57838:57861	1607055	5	True				
ANR	1607073	Identifier	SLJIT_MUL_OVERFLOW		1607055	0					
ANR	1607074	Label	case SLJIT_D_NOT_EQUAL :	1821:1:57864:57886	1607055	6	True				
ANR	1607075	Identifier	SLJIT_D_NOT_EQUAL		1607055	0					
ANR	1607076	ReturnStatement	return 0x1 ;	1822:2:57890:57900	1607055	7	True				
ANR	1607077	PrimaryExpression	0x1		1607055	0					
ANR	1607078	Label	case SLJIT_LESS :	1824:1:57904:57919	1607055	8	True				
ANR	1607079	Identifier	SLJIT_LESS		1607055	0					
ANR	1607080	Label	case SLJIT_D_LESS :	1825:1:57922:57939	1607055	9	True				
ANR	1607081	Identifier	SLJIT_D_LESS		1607055	0					
ANR	1607082	ReturnStatement	return 0x3 ;	1826:2:57943:57953	1607055	10	True				
ANR	1607083	PrimaryExpression	0x3		1607055	0					
ANR	1607084	Label	case SLJIT_GREATER_EQUAL :	1828:1:57957:57981	1607055	11	True				
ANR	1607085	Identifier	SLJIT_GREATER_EQUAL		1607055	0					
ANR	1607086	Label	case SLJIT_D_GREATER_EQUAL :	1829:1:57984:58010	1607055	12	True				
ANR	1607087	Identifier	SLJIT_D_GREATER_EQUAL		1607055	0					
ANR	1607088	ReturnStatement	return 0x2 ;	1830:2:58014:58024	1607055	13	True				
ANR	1607089	PrimaryExpression	0x2		1607055	0					
ANR	1607090	Label	case SLJIT_GREATER :	1832:1:58028:58046	1607055	14	True				
ANR	1607091	Identifier	SLJIT_GREATER		1607055	0					
ANR	1607092	Label	case SLJIT_D_GREATER :	1833:1:58049:58069	1607055	15	True				
ANR	1607093	Identifier	SLJIT_D_GREATER		1607055	0					
ANR	1607094	ReturnStatement	return 0x8 ;	1834:2:58073:58083	1607055	16	True				
ANR	1607095	PrimaryExpression	0x8		1607055	0					
ANR	1607096	Label	case SLJIT_LESS_EQUAL :	1836:1:58087:58108	1607055	17	True				
ANR	1607097	Identifier	SLJIT_LESS_EQUAL		1607055	0					
ANR	1607098	Label	case SLJIT_D_LESS_EQUAL :	1837:1:58111:58134	1607055	18	True				
ANR	1607099	Identifier	SLJIT_D_LESS_EQUAL		1607055	0					
ANR	1607100	ReturnStatement	return 0x9 ;	1838:2:58138:58148	1607055	19	True				
ANR	1607101	PrimaryExpression	0x9		1607055	0					
ANR	1607102	Label	case SLJIT_SIG_LESS :	1840:1:58152:58171	1607055	20	True				
ANR	1607103	Identifier	SLJIT_SIG_LESS		1607055	0					
ANR	1607104	ReturnStatement	return 0xb ;	1841:2:58175:58185	1607055	21	True				
ANR	1607105	PrimaryExpression	0xb		1607055	0					
ANR	1607106	Label	case SLJIT_SIG_GREATER_EQUAL :	1843:1:58189:58217	1607055	22	True				
ANR	1607107	Identifier	SLJIT_SIG_GREATER_EQUAL		1607055	0					
ANR	1607108	ReturnStatement	return 0xa ;	1844:2:58221:58231	1607055	23	True				
ANR	1607109	PrimaryExpression	0xa		1607055	0					
ANR	1607110	Label	case SLJIT_SIG_GREATER :	1846:1:58235:58257	1607055	24	True				
ANR	1607111	Identifier	SLJIT_SIG_GREATER		1607055	0					
ANR	1607112	ReturnStatement	return 0xc ;	1847:2:58261:58271	1607055	25	True				
ANR	1607113	PrimaryExpression	0xc		1607055	0					
ANR	1607114	Label	case SLJIT_SIG_LESS_EQUAL :	1849:1:58275:58300	1607055	26	True				
ANR	1607115	Identifier	SLJIT_SIG_LESS_EQUAL		1607055	0					
ANR	1607116	ReturnStatement	return 0xd ;	1850:2:58304:58314	1607055	27	True				
ANR	1607117	PrimaryExpression	0xd		1607055	0					
ANR	1607118	Label	case SLJIT_OVERFLOW :	1852:1:58318:58337	1607055	28	True				
ANR	1607119	Identifier	SLJIT_OVERFLOW		1607055	0					
ANR	1607120	Label	case SLJIT_D_UNORDERED :	1853:1:58340:58362	1607055	29	True				
ANR	1607121	Identifier	SLJIT_D_UNORDERED		1607055	0					
ANR	1607122	ReturnStatement	return 0x6 ;	1854:2:58366:58376	1607055	30	True				
ANR	1607123	PrimaryExpression	0x6		1607055	0					
ANR	1607124	Label	case SLJIT_NOT_OVERFLOW :	1856:1:58380:58403	1607055	31	True				
ANR	1607125	Identifier	SLJIT_NOT_OVERFLOW		1607055	0					
ANR	1607126	Label	case SLJIT_D_ORDERED :	1857:1:58406:58426	1607055	32	True				
ANR	1607127	Identifier	SLJIT_D_ORDERED		1607055	0					
ANR	1607128	ReturnStatement	return 0x7 ;	1858:2:58430:58440	1607055	33	True				
ANR	1607129	PrimaryExpression	0x7		1607055	0					
ANR	1607130	Label	default :	1860:1:58444:58451	1607055	34	True				
ANR	1607131	Identifier	default		1607055	0					
ANR	1607132	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1861:2:58472:58491	1607055	35	True				
ANR	1607133	CallExpression	SLJIT_ASSERT_STOP ( )		1607055	0					
ANR	1607134	Callee	SLJIT_ASSERT_STOP		1607055	0					
ANR	1607135	Identifier	SLJIT_ASSERT_STOP		1607055	0					
ANR	1607136	ArgumentList			1607055	1					
ANR	1607137	ReturnStatement	return 0xe ;	1862:2:58495:58505	1607055	36	True				
ANR	1607138	PrimaryExpression	0xe		1607055	0					
ANR	1607139	ReturnType	static sljit_uw		1607055	1					
ANR	1607140	Identifier	get_cc		1607055	2					
ANR	1607141	ParameterList	sljit_si type		1607055	3					
ANR	1607142	Parameter	sljit_si type	1811:23:57695:57707	1607055	0	True				
ANR	1607143	ParameterType	sljit_si		1607055	0					
ANR	1607144	Identifier	type		1607055	1					
ANR	1607145	CFGEntryNode	ENTRY		1607055		True				
ANR	1607146	CFGExitNode	EXIT		1607055		True				
ANR	1607147	Symbol	type		1607055						
ANR	1607148	Function	sljit_emit_label	1866:25:58538:58960							
ANR	1607149	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1607148	0					
ANR	1607150	CompoundStatement		1867:0:58608:58960	1607148	0					
ANR	1607151	IdentifierDeclStatement	struct sljit_label * label ;	1868:1:58611:58636	1607148	0	True				
ANR	1607152	IdentifierDecl	* label		1607148	0					
ANR	1607153	IdentifierDeclType	struct sljit_label *		1607148	0					
ANR	1607154	Identifier	label		1607148	1					
ANR	1607155	ExpressionStatement	CHECK_ERROR_PTR ( )	1870:1:58640:58657	1607148	1	True				
ANR	1607156	CallExpression	CHECK_ERROR_PTR ( )		1607148	0					
ANR	1607157	Callee	CHECK_ERROR_PTR		1607148	0					
ANR	1607158	Identifier	CHECK_ERROR_PTR		1607148	0					
ANR	1607159	ArgumentList			1607148	1					
ANR	1607160	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	1871:1:58660:58703	1607148	2	True				
ANR	1607161	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1607148	0					
ANR	1607162	Callee	CHECK_PTR		1607148	0					
ANR	1607163	Identifier	CHECK_PTR		1607148	0					
ANR	1607164	ArgumentList	check_sljit_emit_label ( compiler )		1607148	1					
ANR	1607165	Argument	check_sljit_emit_label ( compiler )		1607148	0					
ANR	1607166	CallExpression	check_sljit_emit_label ( compiler )		1607148	0					
ANR	1607167	Callee	check_sljit_emit_label		1607148	0					
ANR	1607168	Identifier	check_sljit_emit_label		1607148	0					
ANR	1607169	ArgumentList	compiler		1607148	1					
ANR	1607170	Argument	compiler		1607148	0					
ANR	1607171	Identifier	compiler		1607148	0					
ANR	1607172	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1607148	3					
ANR	1607173	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	1873:5:58711:58778	1607148	0	True				
ANR	1607174	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1607148	0		&&			
ANR	1607175	PtrMemberAccess	compiler -> last_label		1607148	0					
ANR	1607176	Identifier	compiler		1607148	0					
ANR	1607177	Identifier	last_label		1607148	1					
ANR	1607178	EqualityExpression	compiler -> last_label -> size == compiler -> size		1607148	1		==			
ANR	1607179	PtrMemberAccess	compiler -> last_label -> size		1607148	0					
ANR	1607180	PtrMemberAccess	compiler -> last_label		1607148	0					
ANR	1607181	Identifier	compiler		1607148	0					
ANR	1607182	Identifier	last_label		1607148	1					
ANR	1607183	Identifier	size		1607148	1					
ANR	1607184	PtrMemberAccess	compiler -> size		1607148	1					
ANR	1607185	Identifier	compiler		1607148	0					
ANR	1607186	Identifier	size		1607148	1					
ANR	1607187	ReturnStatement	return compiler -> last_label ;	1874:2:58783:58810	1607148	1	True				
ANR	1607188	PtrMemberAccess	compiler -> last_label		1607148	0					
ANR	1607189	Identifier	compiler		1607148	0					
ANR	1607190	Identifier	last_label		1607148	1					
ANR	1607191	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	1876:1:58814:58892	1607148	4	True				
ANR	1607192	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1607148	0		=			
ANR	1607193	Identifier	label		1607148	0					
ANR	1607194	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1607148	1					
ANR	1607195	CastTarget	struct sljit_label *		1607148	0					
ANR	1607196	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1607148	1					
ANR	1607197	Callee	ensure_abuf		1607148	0					
ANR	1607198	Identifier	ensure_abuf		1607148	0					
ANR	1607199	ArgumentList	compiler		1607148	1					
ANR	1607200	Argument	compiler		1607148	0					
ANR	1607201	Identifier	compiler		1607148	0					
ANR	1607202	Argument	sizeof ( struct sljit_label )		1607148	1					
ANR	1607203	SizeofExpression	sizeof ( struct sljit_label )		1607148	0					
ANR	1607204	Sizeof	sizeof		1607148	0					
ANR	1607205	SizeofOperand	struct sljit_label		1607148	1					
ANR	1607206	ExpressionStatement	PTR_FAIL_IF ( ! label )	1877:1:58895:58914	1607148	5	True				
ANR	1607207	CallExpression	PTR_FAIL_IF ( ! label )		1607148	0					
ANR	1607208	Callee	PTR_FAIL_IF		1607148	0					
ANR	1607209	Identifier	PTR_FAIL_IF		1607148	0					
ANR	1607210	ArgumentList	! label		1607148	1					
ANR	1607211	Argument	! label		1607148	0					
ANR	1607212	UnaryOperationExpression	! label		1607148	0					
ANR	1607213	UnaryOperator	!		1607148	0					
ANR	1607214	Identifier	label		1607148	1					
ANR	1607215	ExpressionStatement	"set_label ( label , compiler )"	1878:1:58917:58943	1607148	6	True				
ANR	1607216	CallExpression	"set_label ( label , compiler )"		1607148	0					
ANR	1607217	Callee	set_label		1607148	0					
ANR	1607218	Identifier	set_label		1607148	0					
ANR	1607219	ArgumentList	label		1607148	1					
ANR	1607220	Argument	label		1607148	0					
ANR	1607221	Identifier	label		1607148	0					
ANR	1607222	Argument	compiler		1607148	1					
ANR	1607223	Identifier	compiler		1607148	0					
ANR	1607224	ReturnStatement	return label ;	1879:1:58946:58958	1607148	7	True				
ANR	1607225	Identifier	label		1607148	0					
ANR	1607226	ReturnType	struct sljit_label *		1607148	1					
ANR	1607227	Identifier	sljit_emit_label		1607148	2					
ANR	1607228	ParameterList	struct sljit_compiler * compiler		1607148	3					
ANR	1607229	Parameter	struct sljit_compiler * compiler	1866:62:58575:58605	1607148	0	True				
ANR	1607230	ParameterType	struct sljit_compiler *		1607148	0					
ANR	1607231	Identifier	compiler		1607148	1					
ANR	1607232	CFGEntryNode	ENTRY		1607148		True				
ANR	1607233	CFGExitNode	EXIT		1607148		True				
ANR	1607234	Symbol	* compiler -> last_label		1607148						
ANR	1607235	Symbol	compiler -> last_label -> size		1607148						
ANR	1607236	Symbol	* * compiler		1607148						
ANR	1607237	Symbol	compiler -> last_label		1607148						
ANR	1607238	Symbol	compiler -> size		1607148						
ANR	1607239	Symbol	check_sljit_emit_label		1607148						
ANR	1607240	Symbol	label		1607148						
ANR	1607241	Symbol	* compiler		1607148						
ANR	1607242	Symbol	ensure_abuf		1607148						
ANR	1607243	Symbol	compiler		1607148						
ANR	1607244	Function	sljit_emit_jump	1882:25:58988:59852							
ANR	1607245	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1607244	0					
ANR	1607246	CompoundStatement		1883:0:59071:59852	1607244	0					
ANR	1607247	IdentifierDeclStatement	struct sljit_jump * jump ;	1884:1:59074:59097	1607244	0	True				
ANR	1607248	IdentifierDecl	* jump		1607244	0					
ANR	1607249	IdentifierDeclType	struct sljit_jump *		1607244	0					
ANR	1607250	Identifier	jump		1607244	1					
ANR	1607251	IdentifierDeclStatement	sljit_ins cc ;	1885:1:59100:59112	1607244	1	True				
ANR	1607252	IdentifierDecl	cc		1607244	0					
ANR	1607253	IdentifierDeclType	sljit_ins		1607244	0					
ANR	1607254	Identifier	cc		1607244	1					
ANR	1607255	ExpressionStatement	CHECK_ERROR_PTR ( )	1887:1:59116:59133	1607244	2	True				
ANR	1607256	CallExpression	CHECK_ERROR_PTR ( )		1607244	0					
ANR	1607257	Callee	CHECK_ERROR_PTR		1607244	0					
ANR	1607258	Identifier	CHECK_ERROR_PTR		1607244	0					
ANR	1607259	ArgumentList			1607244	1					
ANR	1607260	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	1888:1:59136:59184	1607244	3	True				
ANR	1607261	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1607244	0					
ANR	1607262	Callee	CHECK_PTR		1607244	0					
ANR	1607263	Identifier	CHECK_PTR		1607244	0					
ANR	1607264	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1607244	1					
ANR	1607265	Argument	"check_sljit_emit_jump ( compiler , type )"		1607244	0					
ANR	1607266	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1607244	0					
ANR	1607267	Callee	check_sljit_emit_jump		1607244	0					
ANR	1607268	Identifier	check_sljit_emit_jump		1607244	0					
ANR	1607269	ArgumentList	compiler		1607244	1					
ANR	1607270	Argument	compiler		1607244	0					
ANR	1607271	Identifier	compiler		1607244	0					
ANR	1607272	Argument	type		1607244	1					
ANR	1607273	Identifier	type		1607244	0					
ANR	1607274	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1890:1:59188:59263	1607244	4	True				
ANR	1607275	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1607244	0		=			
ANR	1607276	Identifier	jump		1607244	0					
ANR	1607277	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1607244	1					
ANR	1607278	CastTarget	struct sljit_jump *		1607244	0					
ANR	1607279	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1607244	1					
ANR	1607280	Callee	ensure_abuf		1607244	0					
ANR	1607281	Identifier	ensure_abuf		1607244	0					
ANR	1607282	ArgumentList	compiler		1607244	1					
ANR	1607283	Argument	compiler		1607244	0					
ANR	1607284	Identifier	compiler		1607244	0					
ANR	1607285	Argument	sizeof ( struct sljit_jump )		1607244	1					
ANR	1607286	SizeofExpression	sizeof ( struct sljit_jump )		1607244	0					
ANR	1607287	Sizeof	sizeof		1607244	0					
ANR	1607288	SizeofOperand	struct sljit_jump		1607244	1					
ANR	1607289	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1891:1:59266:59284	1607244	5	True				
ANR	1607290	CallExpression	PTR_FAIL_IF ( ! jump )		1607244	0					
ANR	1607291	Callee	PTR_FAIL_IF		1607244	0					
ANR	1607292	Identifier	PTR_FAIL_IF		1607244	0					
ANR	1607293	ArgumentList	! jump		1607244	1					
ANR	1607294	Argument	! jump		1607244	0					
ANR	1607295	UnaryOperationExpression	! jump		1607244	0					
ANR	1607296	UnaryOperator	!		1607244	0					
ANR	1607297	Identifier	jump		1607244	1					
ANR	1607298	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1892:1:59287:59341	1607244	6	True				
ANR	1607299	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1607244	0					
ANR	1607300	Callee	set_jump		1607244	0					
ANR	1607301	Identifier	set_jump		1607244	0					
ANR	1607302	ArgumentList	jump		1607244	1					
ANR	1607303	Argument	jump		1607244	0					
ANR	1607304	Identifier	jump		1607244	0					
ANR	1607305	Argument	compiler		1607244	1					
ANR	1607306	Identifier	compiler		1607244	0					
ANR	1607307	Argument	type & SLJIT_REWRITABLE_JUMP		1607244	2					
ANR	1607308	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1607244	0		&			
ANR	1607309	Identifier	type		1607244	0					
ANR	1607310	Identifier	SLJIT_REWRITABLE_JUMP		1607244	1					
ANR	1607311	ExpressionStatement	type &= 0xff	1893:1:59344:59356	1607244	7	True				
ANR	1607312	AssignmentExpression	type &= 0xff		1607244	0		&=			
ANR	1607313	Identifier	type		1607244	0					
ANR	1607314	PrimaryExpression	0xff		1607244	1					
ANR	1607315	ExpressionStatement	"PTR_FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"	1896:1:59413:59465	1607244	8	True				
ANR	1607316	CallExpression	"PTR_FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"		1607244	0					
ANR	1607317	Callee	PTR_FAIL_IF		1607244	0					
ANR	1607318	Identifier	PTR_FAIL_IF		1607244	0					
ANR	1607319	ArgumentList	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1607244	1					
ANR	1607320	Argument	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1607244	0					
ANR	1607321	CallExpression	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1607244	0					
ANR	1607322	Callee	emit_imm32_const		1607244	0					
ANR	1607323	Identifier	emit_imm32_const		1607244	0					
ANR	1607324	ArgumentList	compiler		1607244	1					
ANR	1607325	Argument	compiler		1607244	0					
ANR	1607326	Identifier	compiler		1607244	0					
ANR	1607327	Argument	TMP_REG1		1607244	1					
ANR	1607328	Identifier	TMP_REG1		1607244	0					
ANR	1607329	Argument	0		1607244	2					
ANR	1607330	PrimaryExpression	0		1607244	0					
ANR	1607331	IfStatement	if ( type < SLJIT_JUMP )		1607244	9					
ANR	1607332	Condition	type < SLJIT_JUMP	1897:5:59472:59488	1607244	0	True				
ANR	1607333	RelationalExpression	type < SLJIT_JUMP		1607244	0		<			
ANR	1607334	Identifier	type		1607244	0					
ANR	1607335	Identifier	SLJIT_JUMP		1607244	1					
ANR	1607336	CompoundStatement		15:24:419:419	1607244	1					
ANR	1607337	ExpressionStatement	jump -> flags |= IS_COND	1898:2:59495:59517	1607244	0	True				
ANR	1607338	AssignmentExpression	jump -> flags |= IS_COND		1607244	0		|=			
ANR	1607339	PtrMemberAccess	jump -> flags		1607244	0					
ANR	1607340	Identifier	jump		1607244	0					
ANR	1607341	Identifier	flags		1607244	1					
ANR	1607342	Identifier	IS_COND		1607244	1					
ANR	1607343	ExpressionStatement	cc = get_cc ( type )	1899:2:59521:59538	1607244	1	True				
ANR	1607344	AssignmentExpression	cc = get_cc ( type )		1607244	0		=			
ANR	1607345	Identifier	cc		1607244	0					
ANR	1607346	CallExpression	get_cc ( type )		1607244	1					
ANR	1607347	Callee	get_cc		1607244	0					
ANR	1607348	Identifier	get_cc		1607244	0					
ANR	1607349	ArgumentList	type		1607244	1					
ANR	1607350	Argument	type		1607244	0					
ANR	1607351	Identifier	type		1607244	0					
ANR	1607352	ExpressionStatement	jump -> flags |= cc << 8	1900:2:59542:59564	1607244	2	True				
ANR	1607353	AssignmentExpression	jump -> flags |= cc << 8		1607244	0		|=			
ANR	1607354	PtrMemberAccess	jump -> flags		1607244	0					
ANR	1607355	Identifier	jump		1607244	0					
ANR	1607356	Identifier	flags		1607244	1					
ANR	1607357	ShiftExpression	cc << 8		1607244	1		<<			
ANR	1607358	Identifier	cc		1607244	0					
ANR	1607359	PrimaryExpression	8		1607244	1					
ANR	1607360	ExpressionStatement	"PTR_FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"	1901:2:59568:59624	1607244	3	True				
ANR	1607361	CallExpression	"PTR_FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"		1607244	0					
ANR	1607362	Callee	PTR_FAIL_IF		1607244	0					
ANR	1607363	Identifier	PTR_FAIL_IF		1607244	0					
ANR	1607364	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607244	1					
ANR	1607365	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607244	0					
ANR	1607366	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607244	0					
ANR	1607367	Callee	push_inst16		1607244	0					
ANR	1607368	Identifier	push_inst16		1607244	0					
ANR	1607369	ArgumentList	compiler		1607244	1					
ANR	1607370	Argument	compiler		1607244	0					
ANR	1607371	Identifier	compiler		1607244	0					
ANR	1607372	Argument	IT | ( cc << 4 ) | 0x8		1607244	1					
ANR	1607373	InclusiveOrExpression	IT | ( cc << 4 ) | 0x8		1607244	0		|			
ANR	1607374	Identifier	IT		1607244	0					
ANR	1607375	InclusiveOrExpression	( cc << 4 ) | 0x8		1607244	1		|			
ANR	1607376	ShiftExpression	cc << 4		1607244	0		<<			
ANR	1607377	Identifier	cc		1607244	0					
ANR	1607378	PrimaryExpression	4		1607244	1					
ANR	1607379	PrimaryExpression	0x8		1607244	1					
ANR	1607380	ExpressionStatement	jump -> addr = compiler -> size	1904:1:59631:59658	1607244	10	True				
ANR	1607381	AssignmentExpression	jump -> addr = compiler -> size		1607244	0		=			
ANR	1607382	PtrMemberAccess	jump -> addr		1607244	0					
ANR	1607383	Identifier	jump		1607244	0					
ANR	1607384	Identifier	addr		1607244	1					
ANR	1607385	PtrMemberAccess	compiler -> size		1607244	1					
ANR	1607386	Identifier	compiler		1607244	0					
ANR	1607387	Identifier	size		1607244	1					
ANR	1607388	IfStatement	if ( type <= SLJIT_JUMP )		1607244	11					
ANR	1607389	Condition	type <= SLJIT_JUMP	1905:5:59665:59682	1607244	0	True				
ANR	1607390	RelationalExpression	type <= SLJIT_JUMP		1607244	0		<=			
ANR	1607391	Identifier	type		1607244	0					
ANR	1607392	Identifier	SLJIT_JUMP		1607244	1					
ANR	1607393	ExpressionStatement	"PTR_FAIL_IF ( push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) ) )"	1906:2:59687:59741	1607244	1	True				
ANR	1607394	CallExpression	"PTR_FAIL_IF ( push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) ) )"		1607244	0					
ANR	1607395	Callee	PTR_FAIL_IF		1607244	0					
ANR	1607396	Identifier	PTR_FAIL_IF		1607244	0					
ANR	1607397	ArgumentList	"push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) )"		1607244	1					
ANR	1607398	Argument	"push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) )"		1607244	0					
ANR	1607399	CallExpression	"push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) )"		1607244	0					
ANR	1607400	Callee	push_inst16		1607244	0					
ANR	1607401	Identifier	push_inst16		1607244	0					
ANR	1607402	ArgumentList	compiler		1607244	1					
ANR	1607403	Argument	compiler		1607244	0					
ANR	1607404	Identifier	compiler		1607244	0					
ANR	1607405	Argument	BX | RN3 ( TMP_REG1 )		1607244	1					
ANR	1607406	InclusiveOrExpression	BX | RN3 ( TMP_REG1 )		1607244	0		|			
ANR	1607407	Identifier	BX		1607244	0					
ANR	1607408	CallExpression	RN3 ( TMP_REG1 )		1607244	1					
ANR	1607409	Callee	RN3		1607244	0					
ANR	1607410	Identifier	RN3		1607244	0					
ANR	1607411	ArgumentList	TMP_REG1		1607244	1					
ANR	1607412	Argument	TMP_REG1		1607244	0					
ANR	1607413	Identifier	TMP_REG1		1607244	0					
ANR	1607414	ElseStatement	else		1607244	0					
ANR	1607415	CompoundStatement		25:6:677:677	1607244	0					
ANR	1607416	ExpressionStatement	jump -> flags |= IS_BL	1908:2:59753:59773	1607244	0	True				
ANR	1607417	AssignmentExpression	jump -> flags |= IS_BL		1607244	0		|=			
ANR	1607418	PtrMemberAccess	jump -> flags		1607244	0					
ANR	1607419	Identifier	jump		1607244	0					
ANR	1607420	Identifier	flags		1607244	1					
ANR	1607421	Identifier	IS_BL		1607244	1					
ANR	1607422	ExpressionStatement	"PTR_FAIL_IF ( push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) ) )"	1909:2:59777:59832	1607244	1	True				
ANR	1607423	CallExpression	"PTR_FAIL_IF ( push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) ) )"		1607244	0					
ANR	1607424	Callee	PTR_FAIL_IF		1607244	0					
ANR	1607425	Identifier	PTR_FAIL_IF		1607244	0					
ANR	1607426	ArgumentList	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1607244	1					
ANR	1607427	Argument	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1607244	0					
ANR	1607428	CallExpression	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1607244	0					
ANR	1607429	Callee	push_inst16		1607244	0					
ANR	1607430	Identifier	push_inst16		1607244	0					
ANR	1607431	ArgumentList	compiler		1607244	1					
ANR	1607432	Argument	compiler		1607244	0					
ANR	1607433	Identifier	compiler		1607244	0					
ANR	1607434	Argument	BLX | RN3 ( TMP_REG1 )		1607244	1					
ANR	1607435	InclusiveOrExpression	BLX | RN3 ( TMP_REG1 )		1607244	0		|			
ANR	1607436	Identifier	BLX		1607244	0					
ANR	1607437	CallExpression	RN3 ( TMP_REG1 )		1607244	1					
ANR	1607438	Callee	RN3		1607244	0					
ANR	1607439	Identifier	RN3		1607244	0					
ANR	1607440	ArgumentList	TMP_REG1		1607244	1					
ANR	1607441	Argument	TMP_REG1		1607244	0					
ANR	1607442	Identifier	TMP_REG1		1607244	0					
ANR	1607443	ReturnStatement	return jump ;	1912:1:59839:59850	1607244	12	True				
ANR	1607444	Identifier	jump		1607244	0					
ANR	1607445	ReturnType	struct sljit_jump *		1607244	1					
ANR	1607446	Identifier	sljit_emit_jump		1607244	2					
ANR	1607447	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1607244	3					
ANR	1607448	Parameter	struct sljit_compiler * compiler	1882:60:59023:59053	1607244	0	True				
ANR	1607449	ParameterType	struct sljit_compiler *		1607244	0					
ANR	1607450	Identifier	compiler		1607244	1					
ANR	1607451	Parameter	sljit_si type	1882:93:59056:59068	1607244	1	True				
ANR	1607452	ParameterType	sljit_si		1607244	0					
ANR	1607453	Identifier	type		1607244	1					
ANR	1607454	CFGEntryNode	ENTRY		1607244		True				
ANR	1607455	CFGExitNode	EXIT		1607244		True				
ANR	1607456	Symbol	cc		1607244						
ANR	1607457	Symbol	get_cc		1607244						
ANR	1607458	Symbol	TMP_REG1		1607244						
ANR	1607459	Symbol	SLJIT_JUMP		1607244						
ANR	1607460	Symbol	* jump		1607244						
ANR	1607461	Symbol	push_inst16		1607244						
ANR	1607462	Symbol	emit_imm32_const		1607244						
ANR	1607463	Symbol	jump -> flags		1607244						
ANR	1607464	Symbol	jump -> addr		1607244						
ANR	1607465	Symbol	ensure_abuf		1607244						
ANR	1607466	Symbol	IT		1607244						
ANR	1607467	Symbol	* compiler		1607244						
ANR	1607468	Symbol	type		1607244						
ANR	1607469	Symbol	BLX		1607244						
ANR	1607470	Symbol	compiler -> size		1607244						
ANR	1607471	Symbol	IS_COND		1607244						
ANR	1607472	Symbol	IS_BL		1607244						
ANR	1607473	Symbol	RN3		1607244						
ANR	1607474	Symbol	BX		1607244						
ANR	1607475	Symbol	check_sljit_emit_jump		1607244						
ANR	1607476	Symbol	SLJIT_REWRITABLE_JUMP		1607244						
ANR	1607477	Symbol	compiler		1607244						
ANR	1607478	Symbol	jump		1607244						
ANR	1607479	Function	sljit_emit_ijump	1915:0:59855:60849							
ANR	1607480	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1607479	0					
ANR	1607481	CompoundStatement		1916:0:59983:60849	1607479	0					
ANR	1607482	IdentifierDeclStatement	struct sljit_jump * jump ;	1917:1:59986:60009	1607479	0	True				
ANR	1607483	IdentifierDecl	* jump		1607479	0					
ANR	1607484	IdentifierDeclType	struct sljit_jump *		1607479	0					
ANR	1607485	Identifier	jump		1607479	1					
ANR	1607486	ExpressionStatement	CHECK_ERROR ( )	1919:1:60013:60026	1607479	1	True				
ANR	1607487	CallExpression	CHECK_ERROR ( )		1607479	0					
ANR	1607488	Callee	CHECK_ERROR		1607479	0					
ANR	1607489	Identifier	CHECK_ERROR		1607479	0					
ANR	1607490	ArgumentList			1607479	1					
ANR	1607491	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	1920:1:60029:60085	1607479	2	True				
ANR	1607492	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1607479	0					
ANR	1607493	Callee	CHECK		1607479	0					
ANR	1607494	Identifier	CHECK		1607479	0					
ANR	1607495	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1607479	1					
ANR	1607496	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1607479	0					
ANR	1607497	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1607479	0					
ANR	1607498	Callee	check_sljit_emit_ijump		1607479	0					
ANR	1607499	Identifier	check_sljit_emit_ijump		1607479	0					
ANR	1607500	ArgumentList	compiler		1607479	1					
ANR	1607501	Argument	compiler		1607479	0					
ANR	1607502	Identifier	compiler		1607479	0					
ANR	1607503	Argument	type		1607479	1					
ANR	1607504	Identifier	type		1607479	0					
ANR	1607505	Argument	src		1607479	2					
ANR	1607506	Identifier	src		1607479	0					
ANR	1607507	Argument	srcw		1607479	3					
ANR	1607508	Identifier	srcw		1607479	0					
ANR	1607509	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1921:1:60088:60118	1607479	3	True				
ANR	1607510	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1607479	0					
ANR	1607511	Callee	ADJUST_LOCAL_OFFSET		1607479	0					
ANR	1607512	Identifier	ADJUST_LOCAL_OFFSET		1607479	0					
ANR	1607513	ArgumentList	src		1607479	1					
ANR	1607514	Argument	src		1607479	0					
ANR	1607515	Identifier	src		1607479	0					
ANR	1607516	Argument	srcw		1607479	1					
ANR	1607517	Identifier	srcw		1607479	0					
ANR	1607518	IfStatement	if ( ! ( src & SLJIT_IMM ) )		1607479	4					
ANR	1607519	Condition	! ( src & SLJIT_IMM )	1924:5:60179:60196	1607479	0	True				
ANR	1607520	UnaryOperationExpression	! ( src & SLJIT_IMM )		1607479	0					
ANR	1607521	UnaryOperator	!		1607479	0					
ANR	1607522	BitAndExpression	src & SLJIT_IMM		1607479	1		&			
ANR	1607523	Identifier	src		1607479	0					
ANR	1607524	Identifier	SLJIT_IMM		1607479	1					
ANR	1607525	CompoundStatement		9:25:215:215	1607479	1					
ANR	1607526	IfStatement	if ( FAST_IS_REG ( src ) )		1607479	0					
ANR	1607527	Condition	FAST_IS_REG ( src )	1925:6:60207:60222	1607479	0	True				
ANR	1607528	CallExpression	FAST_IS_REG ( src )		1607479	0					
ANR	1607529	Callee	FAST_IS_REG		1607479	0					
ANR	1607530	Identifier	FAST_IS_REG		1607479	0					
ANR	1607531	ArgumentList	src		1607479	1					
ANR	1607532	Argument	src		1607479	0					
ANR	1607533	Identifier	src		1607479	0					
ANR	1607534	ReturnStatement	"return push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src ) ) ;"	1926:3:60228:60300	1607479	1	True				
ANR	1607535	CallExpression	"push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src ) )"		1607479	0					
ANR	1607536	Callee	push_inst16		1607479	0					
ANR	1607537	Identifier	push_inst16		1607479	0					
ANR	1607538	ArgumentList	compiler		1607479	1					
ANR	1607539	Argument	compiler		1607479	0					
ANR	1607540	Identifier	compiler		1607479	0					
ANR	1607541	Argument	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src )		1607479	1					
ANR	1607542	InclusiveOrExpression	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src )		1607479	0		|			
ANR	1607543	ConditionalExpression	type <= SLJIT_JUMP ? BX : BLX		1607479	0					
ANR	1607544	Condition	type <= SLJIT_JUMP		1607479	0					
ANR	1607545	RelationalExpression	type <= SLJIT_JUMP		1607479	0		<=			
ANR	1607546	Identifier	type		1607479	0					
ANR	1607547	Identifier	SLJIT_JUMP		1607479	1					
ANR	1607548	Identifier	BX		1607479	1					
ANR	1607549	Identifier	BLX		1607479	2					
ANR	1607550	CallExpression	RN3 ( src )		1607479	1					
ANR	1607551	Callee	RN3		1607479	0					
ANR	1607552	Identifier	RN3		1607479	0					
ANR	1607553	ArgumentList	src		1607479	1					
ANR	1607554	Argument	src		1607479	0					
ANR	1607555	Identifier	src		1607479	0					
ANR	1607556	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw ) )"	1928:2:60305:60397	1607479	1	True				
ANR	1607557	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw ) )"		1607479	0					
ANR	1607558	Callee	FAIL_IF		1607479	0					
ANR	1607559	Identifier	FAIL_IF		1607479	0					
ANR	1607560	ArgumentList	"emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw )"		1607479	1					
ANR	1607561	Argument	"emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw )"		1607479	0					
ANR	1607562	CallExpression	"emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw )"		1607479	0					
ANR	1607563	Callee	emit_op_mem		1607479	0					
ANR	1607564	Identifier	emit_op_mem		1607479	0					
ANR	1607565	ArgumentList	compiler		1607479	1					
ANR	1607566	Argument	compiler		1607479	0					
ANR	1607567	Identifier	compiler		1607479	0					
ANR	1607568	Argument	WORD_SIZE		1607479	1					
ANR	1607569	Identifier	WORD_SIZE		1607479	0					
ANR	1607570	Argument	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1607479	2					
ANR	1607571	ConditionalExpression	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1607479	0					
ANR	1607572	Condition	type <= SLJIT_JUMP		1607479	0					
ANR	1607573	RelationalExpression	type <= SLJIT_JUMP		1607479	0		<=			
ANR	1607574	Identifier	type		1607479	0					
ANR	1607575	Identifier	SLJIT_JUMP		1607479	1					
ANR	1607576	Identifier	TMP_PC		1607479	1					
ANR	1607577	Identifier	TMP_REG1		1607479	2					
ANR	1607578	Argument	src		1607479	3					
ANR	1607579	Identifier	src		1607479	0					
ANR	1607580	Argument	srcw		1607479	4					
ANR	1607581	Identifier	srcw		1607479	0					
ANR	1607582	IfStatement	if ( type >= SLJIT_FAST_CALL )		1607479	2					
ANR	1607583	Condition	type >= SLJIT_FAST_CALL	1929:6:60405:60427	1607479	0	True				
ANR	1607584	RelationalExpression	type >= SLJIT_FAST_CALL		1607479	0		>=			
ANR	1607585	Identifier	type		1607479	0					
ANR	1607586	Identifier	SLJIT_FAST_CALL		1607479	1					
ANR	1607587	ReturnStatement	"return push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) ) ;"	1930:3:60433:60482	1607479	1	True				
ANR	1607588	CallExpression	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1607479	0					
ANR	1607589	Callee	push_inst16		1607479	0					
ANR	1607590	Identifier	push_inst16		1607479	0					
ANR	1607591	ArgumentList	compiler		1607479	1					
ANR	1607592	Argument	compiler		1607479	0					
ANR	1607593	Identifier	compiler		1607479	0					
ANR	1607594	Argument	BLX | RN3 ( TMP_REG1 )		1607479	1					
ANR	1607595	InclusiveOrExpression	BLX | RN3 ( TMP_REG1 )		1607479	0		|			
ANR	1607596	Identifier	BLX		1607479	0					
ANR	1607597	CallExpression	RN3 ( TMP_REG1 )		1607479	1					
ANR	1607598	Callee	RN3		1607479	0					
ANR	1607599	Identifier	RN3		1607479	0					
ANR	1607600	ArgumentList	TMP_REG1		1607479	1					
ANR	1607601	Argument	TMP_REG1		1607479	0					
ANR	1607602	Identifier	TMP_REG1		1607479	0					
ANR	1607603	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1933:1:60489:60564	1607479	5	True				
ANR	1607604	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1607479	0		=			
ANR	1607605	Identifier	jump		1607479	0					
ANR	1607606	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1607479	1					
ANR	1607607	CastTarget	struct sljit_jump *		1607479	0					
ANR	1607608	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1607479	1					
ANR	1607609	Callee	ensure_abuf		1607479	0					
ANR	1607610	Identifier	ensure_abuf		1607479	0					
ANR	1607611	ArgumentList	compiler		1607479	1					
ANR	1607612	Argument	compiler		1607479	0					
ANR	1607613	Identifier	compiler		1607479	0					
ANR	1607614	Argument	sizeof ( struct sljit_jump )		1607479	1					
ANR	1607615	SizeofExpression	sizeof ( struct sljit_jump )		1607479	0					
ANR	1607616	Sizeof	sizeof		1607479	0					
ANR	1607617	SizeofOperand	struct sljit_jump		1607479	1					
ANR	1607618	ExpressionStatement	FAIL_IF ( ! jump )	1934:1:60567:60581	1607479	6	True				
ANR	1607619	CallExpression	FAIL_IF ( ! jump )		1607479	0					
ANR	1607620	Callee	FAIL_IF		1607479	0					
ANR	1607621	Identifier	FAIL_IF		1607479	0					
ANR	1607622	ArgumentList	! jump		1607479	1					
ANR	1607623	Argument	! jump		1607479	0					
ANR	1607624	UnaryOperationExpression	! jump		1607479	0					
ANR	1607625	UnaryOperator	!		1607479	0					
ANR	1607626	Identifier	jump		1607479	1					
ANR	1607627	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"	1935:1:60584:60661	1607479	7	True				
ANR	1607628	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"		1607479	0					
ANR	1607629	Callee	set_jump		1607479	0					
ANR	1607630	Identifier	set_jump		1607479	0					
ANR	1607631	ArgumentList	jump		1607479	1					
ANR	1607632	Argument	jump		1607479	0					
ANR	1607633	Identifier	jump		1607479	0					
ANR	1607634	Argument	compiler		1607479	1					
ANR	1607635	Identifier	compiler		1607479	0					
ANR	1607636	Argument	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1607479	2					
ANR	1607637	InclusiveOrExpression	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1607479	0		|			
ANR	1607638	Identifier	JUMP_ADDR		1607479	0					
ANR	1607639	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? IS_BL : 0		1607479	1					
ANR	1607640	Condition	type >= SLJIT_FAST_CALL		1607479	0					
ANR	1607641	RelationalExpression	type >= SLJIT_FAST_CALL		1607479	0		>=			
ANR	1607642	Identifier	type		1607479	0					
ANR	1607643	Identifier	SLJIT_FAST_CALL		1607479	1					
ANR	1607644	Identifier	IS_BL		1607479	1					
ANR	1607645	PrimaryExpression	0		1607479	2					
ANR	1607646	ExpressionStatement	jump -> u . target = srcw	1936:1:60664:60685	1607479	8	True				
ANR	1607647	AssignmentExpression	jump -> u . target = srcw		1607479	0		=			
ANR	1607648	MemberAccess	jump -> u . target		1607479	0					
ANR	1607649	PtrMemberAccess	jump -> u		1607479	0					
ANR	1607650	Identifier	jump		1607479	0					
ANR	1607651	Identifier	u		1607479	1					
ANR	1607652	Identifier	target		1607479	1					
ANR	1607653	Identifier	srcw		1607479	1					
ANR	1607654	ExpressionStatement	"FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"	1938:1:60689:60737	1607479	9	True				
ANR	1607655	CallExpression	"FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"		1607479	0					
ANR	1607656	Callee	FAIL_IF		1607479	0					
ANR	1607657	Identifier	FAIL_IF		1607479	0					
ANR	1607658	ArgumentList	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1607479	1					
ANR	1607659	Argument	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1607479	0					
ANR	1607660	CallExpression	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1607479	0					
ANR	1607661	Callee	emit_imm32_const		1607479	0					
ANR	1607662	Identifier	emit_imm32_const		1607479	0					
ANR	1607663	ArgumentList	compiler		1607479	1					
ANR	1607664	Argument	compiler		1607479	0					
ANR	1607665	Identifier	compiler		1607479	0					
ANR	1607666	Argument	TMP_REG1		1607479	1					
ANR	1607667	Identifier	TMP_REG1		1607479	0					
ANR	1607668	Argument	0		1607479	2					
ANR	1607669	PrimaryExpression	0		1607479	0					
ANR	1607670	ExpressionStatement	jump -> addr = compiler -> size	1939:1:60740:60767	1607479	10	True				
ANR	1607671	AssignmentExpression	jump -> addr = compiler -> size		1607479	0		=			
ANR	1607672	PtrMemberAccess	jump -> addr		1607479	0					
ANR	1607673	Identifier	jump		1607479	0					
ANR	1607674	Identifier	addr		1607479	1					
ANR	1607675	PtrMemberAccess	compiler -> size		1607479	1					
ANR	1607676	Identifier	compiler		1607479	0					
ANR	1607677	Identifier	size		1607479	1					
ANR	1607678	ReturnStatement	"return push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 ) ) ;"	1940:1:60770:60847	1607479	11	True				
ANR	1607679	CallExpression	"push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 ) )"		1607479	0					
ANR	1607680	Callee	push_inst16		1607479	0					
ANR	1607681	Identifier	push_inst16		1607479	0					
ANR	1607682	ArgumentList	compiler		1607479	1					
ANR	1607683	Argument	compiler		1607479	0					
ANR	1607684	Identifier	compiler		1607479	0					
ANR	1607685	Argument	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 )		1607479	1					
ANR	1607686	InclusiveOrExpression	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 )		1607479	0		|			
ANR	1607687	ConditionalExpression	type <= SLJIT_JUMP ? BX : BLX		1607479	0					
ANR	1607688	Condition	type <= SLJIT_JUMP		1607479	0					
ANR	1607689	RelationalExpression	type <= SLJIT_JUMP		1607479	0		<=			
ANR	1607690	Identifier	type		1607479	0					
ANR	1607691	Identifier	SLJIT_JUMP		1607479	1					
ANR	1607692	Identifier	BX		1607479	1					
ANR	1607693	Identifier	BLX		1607479	2					
ANR	1607694	CallExpression	RN3 ( TMP_REG1 )		1607479	1					
ANR	1607695	Callee	RN3		1607479	0					
ANR	1607696	Identifier	RN3		1607479	0					
ANR	1607697	ArgumentList	TMP_REG1		1607479	1					
ANR	1607698	Argument	TMP_REG1		1607479	0					
ANR	1607699	Identifier	TMP_REG1		1607479	0					
ANR	1607700	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1607479	1					
ANR	1607701	Identifier	sljit_emit_ijump		1607479	2					
ANR	1607702	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1607479	3					
ANR	1607703	Parameter	struct sljit_compiler * compiler	1915:51:59906:59936	1607479	0	True				
ANR	1607704	ParameterType	struct sljit_compiler *		1607479	0					
ANR	1607705	Identifier	compiler		1607479	1					
ANR	1607706	Parameter	sljit_si type	1915:84:59939:59951	1607479	1	True				
ANR	1607707	ParameterType	sljit_si		1607479	0					
ANR	1607708	Identifier	type		1607479	1					
ANR	1607709	Parameter	sljit_si src	1915:99:59954:59965	1607479	2	True				
ANR	1607710	ParameterType	sljit_si		1607479	0					
ANR	1607711	Identifier	src		1607479	1					
ANR	1607712	Parameter	sljit_sw srcw	1915:113:59968:59980	1607479	3	True				
ANR	1607713	ParameterType	sljit_sw		1607479	0					
ANR	1607714	Identifier	srcw		1607479	1					
ANR	1607715	CFGEntryNode	ENTRY		1607479		True				
ANR	1607716	CFGExitNode	EXIT		1607479		True				
ANR	1607717	Symbol	check_sljit_emit_ijump		1607479						
ANR	1607718	Symbol	SLJIT_JUMP		1607479						
ANR	1607719	Symbol	TMP_PC		1607479						
ANR	1607720	Symbol	TMP_REG1		1607479						
ANR	1607721	Symbol	* jump		1607479						
ANR	1607722	Symbol	jump -> u		1607479						
ANR	1607723	Symbol	push_inst16		1607479						
ANR	1607724	Symbol	JUMP_ADDR		1607479						
ANR	1607725	Symbol	* compiler		1607479						
ANR	1607726	Symbol	type		1607479						
ANR	1607727	Symbol	BLX		1607479						
ANR	1607728	Symbol	SLJIT_IMM		1607479						
ANR	1607729	Symbol	IS_BL		1607479						
ANR	1607730	Symbol	BX		1607479						
ANR	1607731	Symbol	SLJIT_FAST_CALL		1607479						
ANR	1607732	Symbol	compiler		1607479						
ANR	1607733	Symbol	jump		1607479						
ANR	1607734	Symbol	FAST_IS_REG		1607479						
ANR	1607735	Symbol	src		1607479						
ANR	1607736	Symbol	srcw		1607479						
ANR	1607737	Symbol	emit_imm32_const		1607479						
ANR	1607738	Symbol	emit_op_mem		1607479						
ANR	1607739	Symbol	jump -> addr		1607479						
ANR	1607740	Symbol	ensure_abuf		1607479						
ANR	1607741	Symbol	compiler -> size		1607479						
ANR	1607742	Symbol	RN3		1607479						
ANR	1607743	Symbol	jump -> u . target		1607479						
ANR	1607744	Symbol	WORD_SIZE		1607479						
ANR	1607745	Function	sljit_emit_op_flags	1943:0:60852:63662							
ANR	1607746	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1607745	0					
ANR	1607747	CompoundStatement		1947:0:61028:63662	1607745	0					
ANR	1607748	IdentifierDeclStatement	"sljit_si dst_r , flags = GET_ALL_FLAGS ( op ) ;"	1948:1:61031:61072	1607745	0	True				
ANR	1607749	IdentifierDecl	dst_r		1607745	0					
ANR	1607750	IdentifierDeclType	sljit_si		1607745	0					
ANR	1607751	Identifier	dst_r		1607745	1					
ANR	1607752	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1607745	1					
ANR	1607753	IdentifierDeclType	sljit_si		1607745	0					
ANR	1607754	Identifier	flags		1607745	1					
ANR	1607755	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1607745	2		=			
ANR	1607756	Identifier	flags		1607745	0					
ANR	1607757	CallExpression	GET_ALL_FLAGS ( op )		1607745	1					
ANR	1607758	Callee	GET_ALL_FLAGS		1607745	0					
ANR	1607759	Identifier	GET_ALL_FLAGS		1607745	0					
ANR	1607760	ArgumentList	op		1607745	1					
ANR	1607761	Argument	op		1607745	0					
ANR	1607762	Identifier	op		1607745	0					
ANR	1607763	IdentifierDeclStatement	"sljit_ins cc , ins ;"	1949:1:61075:61092	1607745	1	True				
ANR	1607764	IdentifierDecl	cc		1607745	0					
ANR	1607765	IdentifierDeclType	sljit_ins		1607745	0					
ANR	1607766	Identifier	cc		1607745	1					
ANR	1607767	IdentifierDecl	ins		1607745	1					
ANR	1607768	IdentifierDeclType	sljit_ins		1607745	0					
ANR	1607769	Identifier	ins		1607745	1					
ANR	1607770	ExpressionStatement	CHECK_ERROR ( )	1951:1:61096:61109	1607745	2	True				
ANR	1607771	CallExpression	CHECK_ERROR ( )		1607745	0					
ANR	1607772	Callee	CHECK_ERROR		1607745	0					
ANR	1607773	Identifier	CHECK_ERROR		1607745	0					
ANR	1607774	ArgumentList			1607745	1					
ANR	1607775	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	1952:1:61112:61186	1607745	3	True				
ANR	1607776	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1607745	0					
ANR	1607777	Callee	CHECK		1607745	0					
ANR	1607778	Identifier	CHECK		1607745	0					
ANR	1607779	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1607745	1					
ANR	1607780	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1607745	0					
ANR	1607781	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1607745	0					
ANR	1607782	Callee	check_sljit_emit_op_flags		1607745	0					
ANR	1607783	Identifier	check_sljit_emit_op_flags		1607745	0					
ANR	1607784	ArgumentList	compiler		1607745	1					
ANR	1607785	Argument	compiler		1607745	0					
ANR	1607786	Identifier	compiler		1607745	0					
ANR	1607787	Argument	op		1607745	1					
ANR	1607788	Identifier	op		1607745	0					
ANR	1607789	Argument	dst		1607745	2					
ANR	1607790	Identifier	dst		1607745	0					
ANR	1607791	Argument	dstw		1607745	3					
ANR	1607792	Identifier	dstw		1607745	0					
ANR	1607793	Argument	src		1607745	4					
ANR	1607794	Identifier	src		1607745	0					
ANR	1607795	Argument	srcw		1607745	5					
ANR	1607796	Identifier	srcw		1607745	0					
ANR	1607797	Argument	type		1607745	6					
ANR	1607798	Identifier	type		1607745	0					
ANR	1607799	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1953:1:61189:61219	1607745	4	True				
ANR	1607800	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1607745	0					
ANR	1607801	Callee	ADJUST_LOCAL_OFFSET		1607745	0					
ANR	1607802	Identifier	ADJUST_LOCAL_OFFSET		1607745	0					
ANR	1607803	ArgumentList	dst		1607745	1					
ANR	1607804	Argument	dst		1607745	0					
ANR	1607805	Identifier	dst		1607745	0					
ANR	1607806	Argument	dstw		1607745	1					
ANR	1607807	Identifier	dstw		1607745	0					
ANR	1607808	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1954:1:61222:61252	1607745	5	True				
ANR	1607809	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1607745	0					
ANR	1607810	Callee	ADJUST_LOCAL_OFFSET		1607745	0					
ANR	1607811	Identifier	ADJUST_LOCAL_OFFSET		1607745	0					
ANR	1607812	ArgumentList	src		1607745	1					
ANR	1607813	Argument	src		1607745	0					
ANR	1607814	Identifier	src		1607745	0					
ANR	1607815	Argument	srcw		1607745	1					
ANR	1607816	Identifier	srcw		1607745	0					
ANR	1607817	IfStatement	if ( dst == SLJIT_UNUSED )		1607745	6					
ANR	1607818	Condition	dst == SLJIT_UNUSED	1956:5:61260:61278	1607745	0	True				
ANR	1607819	EqualityExpression	dst == SLJIT_UNUSED		1607745	0		==			
ANR	1607820	Identifier	dst		1607745	0					
ANR	1607821	Identifier	SLJIT_UNUSED		1607745	1					
ANR	1607822	ReturnStatement	return SLJIT_SUCCESS ;	1957:2:61283:61303	1607745	1	True				
ANR	1607823	Identifier	SLJIT_SUCCESS		1607745	0					
ANR	1607824	ExpressionStatement	op = GET_OPCODE ( op )	1959:1:61307:61326	1607745	7	True				
ANR	1607825	AssignmentExpression	op = GET_OPCODE ( op )		1607745	0		=			
ANR	1607826	Identifier	op		1607745	0					
ANR	1607827	CallExpression	GET_OPCODE ( op )		1607745	1					
ANR	1607828	Callee	GET_OPCODE		1607745	0					
ANR	1607829	Identifier	GET_OPCODE		1607745	0					
ANR	1607830	ArgumentList	op		1607745	1					
ANR	1607831	Argument	op		1607745	0					
ANR	1607832	Identifier	op		1607745	0					
ANR	1607833	ExpressionStatement	cc = get_cc ( type & 0xff )	1960:1:61329:61353	1607745	8	True				
ANR	1607834	AssignmentExpression	cc = get_cc ( type & 0xff )		1607745	0		=			
ANR	1607835	Identifier	cc		1607745	0					
ANR	1607836	CallExpression	get_cc ( type & 0xff )		1607745	1					
ANR	1607837	Callee	get_cc		1607745	0					
ANR	1607838	Identifier	get_cc		1607745	0					
ANR	1607839	ArgumentList	type & 0xff		1607745	1					
ANR	1607840	Argument	type & 0xff		1607745	0					
ANR	1607841	BitAndExpression	type & 0xff		1607745	0		&			
ANR	1607842	Identifier	type		1607745	0					
ANR	1607843	PrimaryExpression	0xff		1607745	1					
ANR	1607844	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG2	1961:1:61356:61397	1607745	9	True				
ANR	1607845	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG2		1607745	0		=			
ANR	1607846	Identifier	dst_r		1607745	0					
ANR	1607847	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG2		1607745	1					
ANR	1607848	Condition	FAST_IS_REG ( dst )		1607745	0					
ANR	1607849	CallExpression	FAST_IS_REG ( dst )		1607745	0					
ANR	1607850	Callee	FAST_IS_REG		1607745	0					
ANR	1607851	Identifier	FAST_IS_REG		1607745	0					
ANR	1607852	ArgumentList	dst		1607745	1					
ANR	1607853	Argument	dst		1607745	0					
ANR	1607854	Identifier	dst		1607745	0					
ANR	1607855	Identifier	dst		1607745	1					
ANR	1607856	Identifier	TMP_REG2		1607745	2					
ANR	1607857	IfStatement	if ( op < SLJIT_ADD )		1607745	10					
ANR	1607858	Condition	op < SLJIT_ADD	1963:5:61405:61418	1607745	0	True				
ANR	1607859	RelationalExpression	op < SLJIT_ADD		1607745	0		<			
ANR	1607860	Identifier	op		1607745	0					
ANR	1607861	Identifier	SLJIT_ADD		1607745	1					
ANR	1607862	CompoundStatement		17:21:392:392	1607745	1					
ANR	1607863	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"	1964:2:61425:61505	1607745	0	True				
ANR	1607864	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"		1607745	0					
ANR	1607865	Callee	FAIL_IF		1607745	0					
ANR	1607866	Identifier	FAIL_IF		1607745	0					
ANR	1607867	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1607745	1					
ANR	1607868	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1607745	0					
ANR	1607869	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1607745	0					
ANR	1607870	Callee	push_inst16		1607745	0					
ANR	1607871	Identifier	push_inst16		1607745	0					
ANR	1607872	ArgumentList	compiler		1607745	1					
ANR	1607873	Argument	compiler		1607745	0					
ANR	1607874	Identifier	compiler		1607745	0					
ANR	1607875	Argument	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	1					
ANR	1607876	InclusiveOrExpression	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	0		|			
ANR	1607877	Identifier	IT		1607745	0					
ANR	1607878	InclusiveOrExpression	( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	1		|			
ANR	1607879	ShiftExpression	cc << 4		1607745	0		<<			
ANR	1607880	Identifier	cc		1607745	0					
ANR	1607881	PrimaryExpression	4		1607745	1					
ANR	1607882	InclusiveOrExpression	( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	1		|			
ANR	1607883	ShiftExpression	( ( cc & 0x1 ) ^ 0x1 ) << 3		1607745	0		<<			
ANR	1607884	ExclusiveOrExpression	( cc & 0x1 ) ^ 0x1		1607745	0		^			
ANR	1607885	BitAndExpression	cc & 0x1		1607745	0		&			
ANR	1607886	Identifier	cc		1607745	0					
ANR	1607887	PrimaryExpression	0x1		1607745	1					
ANR	1607888	PrimaryExpression	0x1		1607745	1					
ANR	1607889	PrimaryExpression	3		1607745	1					
ANR	1607890	PrimaryExpression	0x4		1607745	1					
ANR	1607891	IfStatement	if ( reg_map [ dst_r ] > 7 )		1607745	1					
ANR	1607892	Condition	reg_map [ dst_r ] > 7	1965:6:61513:61530	1607745	0	True				
ANR	1607893	RelationalExpression	reg_map [ dst_r ] > 7		1607745	0		>			
ANR	1607894	ArrayIndexing	reg_map [ dst_r ]		1607745	0					
ANR	1607895	Identifier	reg_map		1607745	0					
ANR	1607896	Identifier	dst_r		1607745	1					
ANR	1607897	PrimaryExpression	7		1607745	1					
ANR	1607898	CompoundStatement		19:26:504:504	1607745	1					
ANR	1607899	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 ) )"	1966:3:61538:61593	1607745	0	True				
ANR	1607900	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 ) )"		1607745	0					
ANR	1607901	Callee	FAIL_IF		1607745	0					
ANR	1607902	Identifier	FAIL_IF		1607745	0					
ANR	1607903	ArgumentList	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 )"		1607745	1					
ANR	1607904	Argument	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 )"		1607745	0					
ANR	1607905	CallExpression	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 )"		1607745	0					
ANR	1607906	Callee	push_inst32		1607745	0					
ANR	1607907	Identifier	push_inst32		1607745	0					
ANR	1607908	ArgumentList	compiler		1607745	1					
ANR	1607909	Argument	compiler		1607745	0					
ANR	1607910	Identifier	compiler		1607745	0					
ANR	1607911	Argument	MOV_WI | RD4 ( dst_r ) | 1		1607745	1					
ANR	1607912	InclusiveOrExpression	MOV_WI | RD4 ( dst_r ) | 1		1607745	0		|			
ANR	1607913	Identifier	MOV_WI		1607745	0					
ANR	1607914	InclusiveOrExpression	RD4 ( dst_r ) | 1		1607745	1		|			
ANR	1607915	CallExpression	RD4 ( dst_r )		1607745	0					
ANR	1607916	Callee	RD4		1607745	0					
ANR	1607917	Identifier	RD4		1607745	0					
ANR	1607918	ArgumentList	dst_r		1607745	1					
ANR	1607919	Argument	dst_r		1607745	0					
ANR	1607920	Identifier	dst_r		1607745	0					
ANR	1607921	PrimaryExpression	1		1607745	1					
ANR	1607922	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 ) )"	1967:3:61598:61653	1607745	1	True				
ANR	1607923	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 ) )"		1607745	0					
ANR	1607924	Callee	FAIL_IF		1607745	0					
ANR	1607925	Identifier	FAIL_IF		1607745	0					
ANR	1607926	ArgumentList	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 )"		1607745	1					
ANR	1607927	Argument	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 )"		1607745	0					
ANR	1607928	CallExpression	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 )"		1607745	0					
ANR	1607929	Callee	push_inst32		1607745	0					
ANR	1607930	Identifier	push_inst32		1607745	0					
ANR	1607931	ArgumentList	compiler		1607745	1					
ANR	1607932	Argument	compiler		1607745	0					
ANR	1607933	Identifier	compiler		1607745	0					
ANR	1607934	Argument	MOV_WI | RD4 ( dst_r ) | 0		1607745	1					
ANR	1607935	InclusiveOrExpression	MOV_WI | RD4 ( dst_r ) | 0		1607745	0		|			
ANR	1607936	Identifier	MOV_WI		1607745	0					
ANR	1607937	InclusiveOrExpression	RD4 ( dst_r ) | 0		1607745	1		|			
ANR	1607938	CallExpression	RD4 ( dst_r )		1607745	0					
ANR	1607939	Callee	RD4		1607745	0					
ANR	1607940	Identifier	RD4		1607745	0					
ANR	1607941	ArgumentList	dst_r		1607745	1					
ANR	1607942	Argument	dst_r		1607745	0					
ANR	1607943	Identifier	dst_r		1607745	0					
ANR	1607944	PrimaryExpression	0		1607745	1					
ANR	1607945	ElseStatement	else		1607745	0					
ANR	1607946	CompoundStatement		22:9:635:635	1607745	0					
ANR	1607947	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 ) )"	1969:3:61669:61724	1607745	0	True				
ANR	1607948	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 ) )"		1607745	0					
ANR	1607949	Callee	FAIL_IF		1607745	0					
ANR	1607950	Identifier	FAIL_IF		1607745	0					
ANR	1607951	ArgumentList	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 )"		1607745	1					
ANR	1607952	Argument	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 )"		1607745	0					
ANR	1607953	CallExpression	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 )"		1607745	0					
ANR	1607954	Callee	push_inst16		1607745	0					
ANR	1607955	Identifier	push_inst16		1607745	0					
ANR	1607956	ArgumentList	compiler		1607745	1					
ANR	1607957	Argument	compiler		1607745	0					
ANR	1607958	Identifier	compiler		1607745	0					
ANR	1607959	Argument	MOVSI | RDN3 ( dst_r ) | 1		1607745	1					
ANR	1607960	InclusiveOrExpression	MOVSI | RDN3 ( dst_r ) | 1		1607745	0		|			
ANR	1607961	Identifier	MOVSI		1607745	0					
ANR	1607962	InclusiveOrExpression	RDN3 ( dst_r ) | 1		1607745	1		|			
ANR	1607963	CallExpression	RDN3 ( dst_r )		1607745	0					
ANR	1607964	Callee	RDN3		1607745	0					
ANR	1607965	Identifier	RDN3		1607745	0					
ANR	1607966	ArgumentList	dst_r		1607745	1					
ANR	1607967	Argument	dst_r		1607745	0					
ANR	1607968	Identifier	dst_r		1607745	0					
ANR	1607969	PrimaryExpression	1		1607745	1					
ANR	1607970	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 ) )"	1970:3:61729:61784	1607745	1	True				
ANR	1607971	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 ) )"		1607745	0					
ANR	1607972	Callee	FAIL_IF		1607745	0					
ANR	1607973	Identifier	FAIL_IF		1607745	0					
ANR	1607974	ArgumentList	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 )"		1607745	1					
ANR	1607975	Argument	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 )"		1607745	0					
ANR	1607976	CallExpression	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 )"		1607745	0					
ANR	1607977	Callee	push_inst16		1607745	0					
ANR	1607978	Identifier	push_inst16		1607745	0					
ANR	1607979	ArgumentList	compiler		1607745	1					
ANR	1607980	Argument	compiler		1607745	0					
ANR	1607981	Identifier	compiler		1607745	0					
ANR	1607982	Argument	MOVSI | RDN3 ( dst_r ) | 0		1607745	1					
ANR	1607983	InclusiveOrExpression	MOVSI | RDN3 ( dst_r ) | 0		1607745	0		|			
ANR	1607984	Identifier	MOVSI		1607745	0					
ANR	1607985	InclusiveOrExpression	RDN3 ( dst_r ) | 0		1607745	1		|			
ANR	1607986	CallExpression	RDN3 ( dst_r )		1607745	0					
ANR	1607987	Callee	RDN3		1607745	0					
ANR	1607988	Identifier	RDN3		1607745	0					
ANR	1607989	ArgumentList	dst_r		1607745	1					
ANR	1607990	Argument	dst_r		1607745	0					
ANR	1607991	Identifier	dst_r		1607745	0					
ANR	1607992	PrimaryExpression	0		1607745	1					
ANR	1607993	IfStatement	if ( dst_r != TMP_REG2 )		1607745	2					
ANR	1607994	Condition	dst_r != TMP_REG2	1972:6:61796:61812	1607745	0	True				
ANR	1607995	EqualityExpression	dst_r != TMP_REG2		1607745	0		!=			
ANR	1607996	Identifier	dst_r		1607745	0					
ANR	1607997	Identifier	TMP_REG2		1607745	1					
ANR	1607998	ReturnStatement	return SLJIT_SUCCESS ;	1973:3:61818:61838	1607745	1	True				
ANR	1607999	Identifier	SLJIT_SUCCESS		1607745	0					
ANR	1608000	ReturnStatement	"return emit_op_mem ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw ) ;"	1974:2:61842:61910	1607745	3	True				
ANR	1608001	CallExpression	"emit_op_mem ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw )"		1607745	0					
ANR	1608002	Callee	emit_op_mem		1607745	0					
ANR	1608003	Identifier	emit_op_mem		1607745	0					
ANR	1608004	ArgumentList	compiler		1607745	1					
ANR	1608005	Argument	compiler		1607745	0					
ANR	1608006	Identifier	compiler		1607745	0					
ANR	1608007	Argument	WORD_SIZE | STORE		1607745	1					
ANR	1608008	InclusiveOrExpression	WORD_SIZE | STORE		1607745	0		|			
ANR	1608009	Identifier	WORD_SIZE		1607745	0					
ANR	1608010	Identifier	STORE		1607745	1					
ANR	1608011	Argument	TMP_REG2		1607745	2					
ANR	1608012	Identifier	TMP_REG2		1607745	0					
ANR	1608013	Argument	dst		1607745	3					
ANR	1608014	Identifier	dst		1607745	0					
ANR	1608015	Argument	dstw		1607745	4					
ANR	1608016	Identifier	dstw		1607745	0					
ANR	1608017	ExpressionStatement	ins = ( op == SLJIT_AND ? ANDI : ( op == SLJIT_OR ? ORRI : EORI ) )	1977:1:61917:61980	1607745	11	True				
ANR	1608018	AssignmentExpression	ins = ( op == SLJIT_AND ? ANDI : ( op == SLJIT_OR ? ORRI : EORI ) )		1607745	0		=			
ANR	1608019	Identifier	ins		1607745	0					
ANR	1608020	ConditionalExpression	op == SLJIT_AND ? ANDI : ( op == SLJIT_OR ? ORRI : EORI )		1607745	1					
ANR	1608021	Condition	op == SLJIT_AND		1607745	0					
ANR	1608022	EqualityExpression	op == SLJIT_AND		1607745	0		==			
ANR	1608023	Identifier	op		1607745	0					
ANR	1608024	Identifier	SLJIT_AND		1607745	1					
ANR	1608025	Identifier	ANDI		1607745	1					
ANR	1608026	ConditionalExpression	op == SLJIT_OR ? ORRI : EORI		1607745	2					
ANR	1608027	Condition	op == SLJIT_OR		1607745	0					
ANR	1608028	EqualityExpression	op == SLJIT_OR		1607745	0		==			
ANR	1608029	Identifier	op		1607745	0					
ANR	1608030	Identifier	SLJIT_OR		1607745	1					
ANR	1608031	Identifier	ORRI		1607745	1					
ANR	1608032	Identifier	EORI		1607745	2					
ANR	1608033	IfStatement	if ( ( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src )		1607745	12					
ANR	1608034	Condition	( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src	1978:5:61987:62055	1607745	0	True				
ANR	1608035	AndExpression	( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src		1607745	0		&&			
ANR	1608036	OrExpression	op == SLJIT_OR || op == SLJIT_XOR		1607745	0		||			
ANR	1608037	EqualityExpression	op == SLJIT_OR		1607745	0		==			
ANR	1608038	Identifier	op		1607745	0					
ANR	1608039	Identifier	SLJIT_OR		1607745	1					
ANR	1608040	EqualityExpression	op == SLJIT_XOR		1607745	1		==			
ANR	1608041	Identifier	op		1607745	0					
ANR	1608042	Identifier	SLJIT_XOR		1607745	1					
ANR	1608043	AndExpression	FAST_IS_REG ( dst ) && dst == src		1607745	1		&&			
ANR	1608044	CallExpression	FAST_IS_REG ( dst )		1607745	0					
ANR	1608045	Callee	FAST_IS_REG		1607745	0					
ANR	1608046	Identifier	FAST_IS_REG		1607745	0					
ANR	1608047	ArgumentList	dst		1607745	1					
ANR	1608048	Argument	dst		1607745	0					
ANR	1608049	Identifier	dst		1607745	0					
ANR	1608050	EqualityExpression	dst == src		1607745	1		==			
ANR	1608051	Identifier	dst		1607745	0					
ANR	1608052	Identifier	src		1607745	1					
ANR	1608053	CompoundStatement		32:76:1029:1029	1607745	1					
ANR	1608054	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"	1980:2:62102:62154	1607745	0	True				
ANR	1608055	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"		1607745	0					
ANR	1608056	Callee	FAIL_IF		1607745	0					
ANR	1608057	Identifier	FAIL_IF		1607745	0					
ANR	1608058	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607745	1					
ANR	1608059	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607745	0					
ANR	1608060	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607745	0					
ANR	1608061	Callee	push_inst16		1607745	0					
ANR	1608062	Identifier	push_inst16		1607745	0					
ANR	1608063	ArgumentList	compiler		1607745	1					
ANR	1608064	Argument	compiler		1607745	0					
ANR	1608065	Identifier	compiler		1607745	0					
ANR	1608066	Argument	IT | ( cc << 4 ) | 0x8		1607745	1					
ANR	1608067	InclusiveOrExpression	IT | ( cc << 4 ) | 0x8		1607745	0		|			
ANR	1608068	Identifier	IT		1607745	0					
ANR	1608069	InclusiveOrExpression	( cc << 4 ) | 0x8		1607745	1		|			
ANR	1608070	ShiftExpression	cc << 4		1607745	0		<<			
ANR	1608071	Identifier	cc		1607745	0					
ANR	1608072	PrimaryExpression	4		1607745	1					
ANR	1608073	PrimaryExpression	0x8		1607745	1					
ANR	1608074	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 ) )"	1981:2:62158:62219	1607745	1	True				
ANR	1608075	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 ) )"		1607745	0					
ANR	1608076	Callee	FAIL_IF		1607745	0					
ANR	1608077	Identifier	FAIL_IF		1607745	0					
ANR	1608078	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 )"		1607745	1					
ANR	1608079	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 )"		1607745	0					
ANR	1608080	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 )"		1607745	0					
ANR	1608081	Callee	push_inst32		1607745	0					
ANR	1608082	Identifier	push_inst32		1607745	0					
ANR	1608083	ArgumentList	compiler		1607745	1					
ANR	1608084	Argument	compiler		1607745	0					
ANR	1608085	Identifier	compiler		1607745	0					
ANR	1608086	Argument	ins | RN4 ( src ) | RD4 ( dst ) | 1		1607745	1					
ANR	1608087	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst ) | 1		1607745	0		|			
ANR	1608088	Identifier	ins		1607745	0					
ANR	1608089	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst ) | 1		1607745	1		|			
ANR	1608090	CallExpression	RN4 ( src )		1607745	0					
ANR	1608091	Callee	RN4		1607745	0					
ANR	1608092	Identifier	RN4		1607745	0					
ANR	1608093	ArgumentList	src		1607745	1					
ANR	1608094	Argument	src		1607745	0					
ANR	1608095	Identifier	src		1607745	0					
ANR	1608096	InclusiveOrExpression	RD4 ( dst ) | 1		1607745	1		|			
ANR	1608097	CallExpression	RD4 ( dst )		1607745	0					
ANR	1608098	Callee	RD4		1607745	0					
ANR	1608099	Identifier	RD4		1607745	0					
ANR	1608100	ArgumentList	dst		1607745	1					
ANR	1608101	Argument	dst		1607745	0					
ANR	1608102	Identifier	dst		1607745	0					
ANR	1608103	PrimaryExpression	1		1607745	1					
ANR	1608104	IfStatement	if ( flags & SLJIT_SET_E )		1607745	2					
ANR	1608105	Condition	flags & SLJIT_SET_E	1982:6:62227:62245	1607745	0	True				
ANR	1608106	BitAndExpression	flags & SLJIT_SET_E		1607745	0		&			
ANR	1608107	Identifier	flags		1607745	0					
ANR	1608108	Identifier	SLJIT_SET_E		1607745	1					
ANR	1608109	CompoundStatement		36:27:1219:1219	1607745	1					
ANR	1608110	IfStatement	if ( reg_map [ dst ] <= 7 )		1607745	0					
ANR	1608111	Condition	reg_map [ dst ] <= 7	1984:7:62345:62361	1607745	0	True				
ANR	1608112	RelationalExpression	reg_map [ dst ] <= 7		1607745	0		<=			
ANR	1608113	ArrayIndexing	reg_map [ dst ]		1607745	0					
ANR	1608114	Identifier	reg_map		1607745	0					
ANR	1608115	Identifier	dst		1607745	1					
ANR	1608116	PrimaryExpression	7		1607745	1					
ANR	1608117	ReturnStatement	"return push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst ) ) ;"	1985:4:62368:62429	1607745	1	True				
ANR	1608118	CallExpression	"push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst ) )"		1607745	0					
ANR	1608119	Callee	push_inst16		1607745	0					
ANR	1608120	Identifier	push_inst16		1607745	0					
ANR	1608121	ArgumentList	compiler		1607745	1					
ANR	1608122	Argument	compiler		1607745	0					
ANR	1608123	Identifier	compiler		1607745	0					
ANR	1608124	Argument	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst )		1607745	1					
ANR	1608125	InclusiveOrExpression	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst )		1607745	0		|			
ANR	1608126	Identifier	MOVS		1607745	0					
ANR	1608127	InclusiveOrExpression	RD3 ( TMP_REG1 ) | RN3 ( dst )		1607745	1		|			
ANR	1608128	CallExpression	RD3 ( TMP_REG1 )		1607745	0					
ANR	1608129	Callee	RD3		1607745	0					
ANR	1608130	Identifier	RD3		1607745	0					
ANR	1608131	ArgumentList	TMP_REG1		1607745	1					
ANR	1608132	Argument	TMP_REG1		1607745	0					
ANR	1608133	Identifier	TMP_REG1		1607745	0					
ANR	1608134	CallExpression	RN3 ( dst )		1607745	1					
ANR	1608135	Callee	RN3		1607745	0					
ANR	1608136	Identifier	RN3		1607745	0					
ANR	1608137	ArgumentList	dst		1607745	1					
ANR	1608138	Argument	dst		1607745	0					
ANR	1608139	Identifier	dst		1607745	0					
ANR	1608140	ReturnStatement	"return push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst ) ) ;"	1986:3:62434:62508	1607745	1	True				
ANR	1608141	CallExpression	"push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst ) )"		1607745	0					
ANR	1608142	Callee	push_inst32		1607745	0					
ANR	1608143	Identifier	push_inst32		1607745	0					
ANR	1608144	ArgumentList	compiler		1607745	1					
ANR	1608145	Argument	compiler		1607745	0					
ANR	1608146	Identifier	compiler		1607745	0					
ANR	1608147	Argument	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst )		1607745	1					
ANR	1608148	InclusiveOrExpression	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst )		1607745	0		|			
ANR	1608149	Identifier	MOV_W		1607745	0					
ANR	1608150	InclusiveOrExpression	SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst )		1607745	1		|			
ANR	1608151	Identifier	SET_FLAGS		1607745	0					
ANR	1608152	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RM4 ( dst )		1607745	1		|			
ANR	1608153	CallExpression	RD4 ( TMP_REG1 )		1607745	0					
ANR	1608154	Callee	RD4		1607745	0					
ANR	1608155	Identifier	RD4		1607745	0					
ANR	1608156	ArgumentList	TMP_REG1		1607745	1					
ANR	1608157	Argument	TMP_REG1		1607745	0					
ANR	1608158	Identifier	TMP_REG1		1607745	0					
ANR	1608159	CallExpression	RM4 ( dst )		1607745	1					
ANR	1608160	Callee	RM4		1607745	0					
ANR	1608161	Identifier	RM4		1607745	0					
ANR	1608162	ArgumentList	dst		1607745	1					
ANR	1608163	Argument	dst		1607745	0					
ANR	1608164	Identifier	dst		1607745	0					
ANR	1608165	ReturnStatement	return SLJIT_SUCCESS ;	1988:2:62516:62536	1607745	3	True				
ANR	1608166	Identifier	SLJIT_SUCCESS		1607745	0					
ANR	1608167	ExpressionStatement	compiler -> cache_arg = 0	1991:1:62543:62566	1607745	13	True				
ANR	1608168	AssignmentExpression	compiler -> cache_arg = 0		1607745	0		=			
ANR	1608169	PtrMemberAccess	compiler -> cache_arg		1607745	0					
ANR	1608170	Identifier	compiler		1607745	0					
ANR	1608171	Identifier	cache_arg		1607745	1					
ANR	1608172	PrimaryExpression	0		1607745	1					
ANR	1608173	ExpressionStatement	compiler -> cache_argw = 0	1992:1:62569:62593	1607745	14	True				
ANR	1608174	AssignmentExpression	compiler -> cache_argw = 0		1607745	0		=			
ANR	1608175	PtrMemberAccess	compiler -> cache_argw		1607745	0					
ANR	1608176	Identifier	compiler		1607745	0					
ANR	1608177	Identifier	cache_argw		1607745	1					
ANR	1608178	PrimaryExpression	0		1607745	1					
ANR	1608179	IfStatement	if ( src & SLJIT_MEM )		1607745	15					
ANR	1608180	Condition	src & SLJIT_MEM	1993:5:62600:62614	1607745	0	True				
ANR	1608181	BitAndExpression	src & SLJIT_MEM		1607745	0		&			
ANR	1608182	Identifier	src		1607745	0					
ANR	1608183	Identifier	SLJIT_MEM		1607745	1					
ANR	1608184	CompoundStatement		47:22:1588:1588	1607745	1					
ANR	1608185	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"	1994:2:62621:62695	1607745	0	True				
ANR	1608186	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"		1607745	0					
ANR	1608187	Callee	FAIL_IF		1607745	0					
ANR	1608188	Identifier	FAIL_IF		1607745	0					
ANR	1608189	ArgumentList	"emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1607745	1					
ANR	1608190	Argument	"emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1607745	0					
ANR	1608191	CallExpression	"emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1607745	0					
ANR	1608192	Callee	emit_op_mem2		1607745	0					
ANR	1608193	Identifier	emit_op_mem2		1607745	0					
ANR	1608194	ArgumentList	compiler		1607745	1					
ANR	1608195	Argument	compiler		1607745	0					
ANR	1608196	Identifier	compiler		1607745	0					
ANR	1608197	Argument	WORD_SIZE		1607745	1					
ANR	1608198	Identifier	WORD_SIZE		1607745	0					
ANR	1608199	Argument	TMP_REG2		1607745	2					
ANR	1608200	Identifier	TMP_REG2		1607745	0					
ANR	1608201	Argument	src		1607745	3					
ANR	1608202	Identifier	src		1607745	0					
ANR	1608203	Argument	srcw		1607745	4					
ANR	1608204	Identifier	srcw		1607745	0					
ANR	1608205	Argument	dst		1607745	5					
ANR	1608206	Identifier	dst		1607745	0					
ANR	1608207	Argument	dstw		1607745	6					
ANR	1608208	Identifier	dstw		1607745	0					
ANR	1608209	ExpressionStatement	src = TMP_REG2	1995:2:62699:62713	1607745	1	True				
ANR	1608210	AssignmentExpression	src = TMP_REG2		1607745	0		=			
ANR	1608211	Identifier	src		1607745	0					
ANR	1608212	Identifier	TMP_REG2		1607745	1					
ANR	1608213	ExpressionStatement	srcw = 0	1996:2:62717:62725	1607745	2	True				
ANR	1608214	AssignmentExpression	srcw = 0		1607745	0		=			
ANR	1608215	Identifier	srcw		1607745	0					
ANR	1608216	PrimaryExpression	0		1607745	1					
ANR	1608217	ElseStatement	else		1607745	0					
ANR	1608218	IfStatement	if ( src & SLJIT_IMM )		1607745	0					
ANR	1608219	Condition	src & SLJIT_IMM	1997:12:62739:62753	1607745	0	True				
ANR	1608220	BitAndExpression	src & SLJIT_IMM		1607745	0		&			
ANR	1608221	Identifier	src		1607745	0					
ANR	1608222	Identifier	SLJIT_IMM		1607745	1					
ANR	1608223	CompoundStatement		51:29:1727:1727	1607745	1					
ANR	1608224	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"	1998:2:62760:62809	1607745	0	True				
ANR	1608225	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"		1607745	0					
ANR	1608226	Callee	FAIL_IF		1607745	0					
ANR	1608227	Identifier	FAIL_IF		1607745	0					
ANR	1608228	ArgumentList	"load_immediate ( compiler , TMP_REG2 , srcw )"		1607745	1					
ANR	1608229	Argument	"load_immediate ( compiler , TMP_REG2 , srcw )"		1607745	0					
ANR	1608230	CallExpression	"load_immediate ( compiler , TMP_REG2 , srcw )"		1607745	0					
ANR	1608231	Callee	load_immediate		1607745	0					
ANR	1608232	Identifier	load_immediate		1607745	0					
ANR	1608233	ArgumentList	compiler		1607745	1					
ANR	1608234	Argument	compiler		1607745	0					
ANR	1608235	Identifier	compiler		1607745	0					
ANR	1608236	Argument	TMP_REG2		1607745	1					
ANR	1608237	Identifier	TMP_REG2		1607745	0					
ANR	1608238	Argument	srcw		1607745	2					
ANR	1608239	Identifier	srcw		1607745	0					
ANR	1608240	ExpressionStatement	src = TMP_REG2	1999:2:62813:62827	1607745	1	True				
ANR	1608241	AssignmentExpression	src = TMP_REG2		1607745	0		=			
ANR	1608242	Identifier	src		1607745	0					
ANR	1608243	Identifier	TMP_REG2		1607745	1					
ANR	1608244	ExpressionStatement	srcw = 0	2000:2:62831:62839	1607745	2	True				
ANR	1608245	AssignmentExpression	srcw = 0		1607745	0		=			
ANR	1608246	Identifier	srcw		1607745	0					
ANR	1608247	PrimaryExpression	0		1607745	1					
ANR	1608248	IfStatement	if ( op == SLJIT_AND || src != dst_r )		1607745	16					
ANR	1608249	Condition	op == SLJIT_AND || src != dst_r	2003:5:62850:62880	1607745	0	True				
ANR	1608250	OrExpression	op == SLJIT_AND || src != dst_r		1607745	0		||			
ANR	1608251	EqualityExpression	op == SLJIT_AND		1607745	0		==			
ANR	1608252	Identifier	op		1607745	0					
ANR	1608253	Identifier	SLJIT_AND		1607745	1					
ANR	1608254	EqualityExpression	src != dst_r		1607745	1		!=			
ANR	1608255	Identifier	src		1607745	0					
ANR	1608256	Identifier	dst_r		1607745	1					
ANR	1608257	CompoundStatement		57:38:1854:1854	1607745	1					
ANR	1608258	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"	2004:2:62887:62967	1607745	0	True				
ANR	1608259	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"		1607745	0					
ANR	1608260	Callee	FAIL_IF		1607745	0					
ANR	1608261	Identifier	FAIL_IF		1607745	0					
ANR	1608262	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1607745	1					
ANR	1608263	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1607745	0					
ANR	1608264	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1607745	0					
ANR	1608265	Callee	push_inst16		1607745	0					
ANR	1608266	Identifier	push_inst16		1607745	0					
ANR	1608267	ArgumentList	compiler		1607745	1					
ANR	1608268	Argument	compiler		1607745	0					
ANR	1608269	Identifier	compiler		1607745	0					
ANR	1608270	Argument	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	1					
ANR	1608271	InclusiveOrExpression	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	0		|			
ANR	1608272	Identifier	IT		1607745	0					
ANR	1608273	InclusiveOrExpression	( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	1		|			
ANR	1608274	ShiftExpression	cc << 4		1607745	0		<<			
ANR	1608275	Identifier	cc		1607745	0					
ANR	1608276	PrimaryExpression	4		1607745	1					
ANR	1608277	InclusiveOrExpression	( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1607745	1		|			
ANR	1608278	ShiftExpression	( ( cc & 0x1 ) ^ 0x1 ) << 3		1607745	0		<<			
ANR	1608279	ExclusiveOrExpression	( cc & 0x1 ) ^ 0x1		1607745	0		^			
ANR	1608280	BitAndExpression	cc & 0x1		1607745	0		&			
ANR	1608281	Identifier	cc		1607745	0					
ANR	1608282	PrimaryExpression	0x1		1607745	1					
ANR	1608283	PrimaryExpression	0x1		1607745	1					
ANR	1608284	PrimaryExpression	3		1607745	1					
ANR	1608285	PrimaryExpression	0x4		1607745	1					
ANR	1608286	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"	2005:2:62971:63034	1607745	1	True				
ANR	1608287	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"		1607745	0					
ANR	1608288	Callee	FAIL_IF		1607745	0					
ANR	1608289	Identifier	FAIL_IF		1607745	0					
ANR	1608290	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1607745	1					
ANR	1608291	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1607745	0					
ANR	1608292	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1607745	0					
ANR	1608293	Callee	push_inst32		1607745	0					
ANR	1608294	Identifier	push_inst32		1607745	0					
ANR	1608295	ArgumentList	compiler		1607745	1					
ANR	1608296	Argument	compiler		1607745	0					
ANR	1608297	Identifier	compiler		1607745	0					
ANR	1608298	Argument	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1607745	1					
ANR	1608299	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1607745	0		|			
ANR	1608300	Identifier	ins		1607745	0					
ANR	1608301	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst_r ) | 1		1607745	1		|			
ANR	1608302	CallExpression	RN4 ( src )		1607745	0					
ANR	1608303	Callee	RN4		1607745	0					
ANR	1608304	Identifier	RN4		1607745	0					
ANR	1608305	ArgumentList	src		1607745	1					
ANR	1608306	Argument	src		1607745	0					
ANR	1608307	Identifier	src		1607745	0					
ANR	1608308	InclusiveOrExpression	RD4 ( dst_r ) | 1		1607745	1		|			
ANR	1608309	CallExpression	RD4 ( dst_r )		1607745	0					
ANR	1608310	Callee	RD4		1607745	0					
ANR	1608311	Identifier	RD4		1607745	0					
ANR	1608312	ArgumentList	dst_r		1607745	1					
ANR	1608313	Argument	dst_r		1607745	0					
ANR	1608314	Identifier	dst_r		1607745	0					
ANR	1608315	PrimaryExpression	1		1607745	1					
ANR	1608316	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 ) )"	2006:2:63038:63101	1607745	2	True				
ANR	1608317	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 ) )"		1607745	0					
ANR	1608318	Callee	FAIL_IF		1607745	0					
ANR	1608319	Identifier	FAIL_IF		1607745	0					
ANR	1608320	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 )"		1607745	1					
ANR	1608321	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 )"		1607745	0					
ANR	1608322	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 )"		1607745	0					
ANR	1608323	Callee	push_inst32		1607745	0					
ANR	1608324	Identifier	push_inst32		1607745	0					
ANR	1608325	ArgumentList	compiler		1607745	1					
ANR	1608326	Argument	compiler		1607745	0					
ANR	1608327	Identifier	compiler		1607745	0					
ANR	1608328	Argument	ins | RN4 ( src ) | RD4 ( dst_r ) | 0		1607745	1					
ANR	1608329	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst_r ) | 0		1607745	0		|			
ANR	1608330	Identifier	ins		1607745	0					
ANR	1608331	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst_r ) | 0		1607745	1		|			
ANR	1608332	CallExpression	RN4 ( src )		1607745	0					
ANR	1608333	Callee	RN4		1607745	0					
ANR	1608334	Identifier	RN4		1607745	0					
ANR	1608335	ArgumentList	src		1607745	1					
ANR	1608336	Argument	src		1607745	0					
ANR	1608337	Identifier	src		1607745	0					
ANR	1608338	InclusiveOrExpression	RD4 ( dst_r ) | 0		1607745	1		|			
ANR	1608339	CallExpression	RD4 ( dst_r )		1607745	0					
ANR	1608340	Callee	RD4		1607745	0					
ANR	1608341	Identifier	RD4		1607745	0					
ANR	1608342	ArgumentList	dst_r		1607745	1					
ANR	1608343	Argument	dst_r		1607745	0					
ANR	1608344	Identifier	dst_r		1607745	0					
ANR	1608345	PrimaryExpression	0		1607745	1					
ANR	1608346	ElseStatement	else		1607745	0					
ANR	1608347	CompoundStatement		62:6:2083:2083	1607745	0					
ANR	1608348	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"	2009:2:63116:63168	1607745	0	True				
ANR	1608349	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"		1607745	0					
ANR	1608350	Callee	FAIL_IF		1607745	0					
ANR	1608351	Identifier	FAIL_IF		1607745	0					
ANR	1608352	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607745	1					
ANR	1608353	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607745	0					
ANR	1608354	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1607745	0					
ANR	1608355	Callee	push_inst16		1607745	0					
ANR	1608356	Identifier	push_inst16		1607745	0					
ANR	1608357	ArgumentList	compiler		1607745	1					
ANR	1608358	Argument	compiler		1607745	0					
ANR	1608359	Identifier	compiler		1607745	0					
ANR	1608360	Argument	IT | ( cc << 4 ) | 0x8		1607745	1					
ANR	1608361	InclusiveOrExpression	IT | ( cc << 4 ) | 0x8		1607745	0		|			
ANR	1608362	Identifier	IT		1607745	0					
ANR	1608363	InclusiveOrExpression	( cc << 4 ) | 0x8		1607745	1		|			
ANR	1608364	ShiftExpression	cc << 4		1607745	0		<<			
ANR	1608365	Identifier	cc		1607745	0					
ANR	1608366	PrimaryExpression	4		1607745	1					
ANR	1608367	PrimaryExpression	0x8		1607745	1					
ANR	1608368	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"	2010:2:63172:63235	1607745	1	True				
ANR	1608369	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"		1607745	0					
ANR	1608370	Callee	FAIL_IF		1607745	0					
ANR	1608371	Identifier	FAIL_IF		1607745	0					
ANR	1608372	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1607745	1					
ANR	1608373	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1607745	0					
ANR	1608374	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1607745	0					
ANR	1608375	Callee	push_inst32		1607745	0					
ANR	1608376	Identifier	push_inst32		1607745	0					
ANR	1608377	ArgumentList	compiler		1607745	1					
ANR	1608378	Argument	compiler		1607745	0					
ANR	1608379	Identifier	compiler		1607745	0					
ANR	1608380	Argument	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1607745	1					
ANR	1608381	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1607745	0		|			
ANR	1608382	Identifier	ins		1607745	0					
ANR	1608383	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst_r ) | 1		1607745	1		|			
ANR	1608384	CallExpression	RN4 ( src )		1607745	0					
ANR	1608385	Callee	RN4		1607745	0					
ANR	1608386	Identifier	RN4		1607745	0					
ANR	1608387	ArgumentList	src		1607745	1					
ANR	1608388	Argument	src		1607745	0					
ANR	1608389	Identifier	src		1607745	0					
ANR	1608390	InclusiveOrExpression	RD4 ( dst_r ) | 1		1607745	1		|			
ANR	1608391	CallExpression	RD4 ( dst_r )		1607745	0					
ANR	1608392	Callee	RD4		1607745	0					
ANR	1608393	Identifier	RD4		1607745	0					
ANR	1608394	ArgumentList	dst_r		1607745	1					
ANR	1608395	Argument	dst_r		1607745	0					
ANR	1608396	Identifier	dst_r		1607745	0					
ANR	1608397	PrimaryExpression	1		1607745	1					
ANR	1608398	IfStatement	if ( dst_r == TMP_REG2 )		1607745	17					
ANR	1608399	Condition	dst_r == TMP_REG2	2013:5:63246:63262	1607745	0	True				
ANR	1608400	EqualityExpression	dst_r == TMP_REG2		1607745	0		==			
ANR	1608401	Identifier	dst_r		1607745	0					
ANR	1608402	Identifier	TMP_REG2		1607745	1					
ANR	1608403	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 ) )"	2014:2:63267:63344	1607745	1	True				
ANR	1608404	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 ) )"		1607745	0					
ANR	1608405	Callee	FAIL_IF		1607745	0					
ANR	1608406	Identifier	FAIL_IF		1607745	0					
ANR	1608407	ArgumentList	"emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1607745	1					
ANR	1608408	Argument	"emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1607745	0					
ANR	1608409	CallExpression	"emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1607745	0					
ANR	1608410	Callee	emit_op_mem2		1607745	0					
ANR	1608411	Identifier	emit_op_mem2		1607745	0					
ANR	1608412	ArgumentList	compiler		1607745	1					
ANR	1608413	Argument	compiler		1607745	0					
ANR	1608414	Identifier	compiler		1607745	0					
ANR	1608415	Argument	WORD_SIZE | STORE		1607745	1					
ANR	1608416	InclusiveOrExpression	WORD_SIZE | STORE		1607745	0		|			
ANR	1608417	Identifier	WORD_SIZE		1607745	0					
ANR	1608418	Identifier	STORE		1607745	1					
ANR	1608419	Argument	TMP_REG2		1607745	2					
ANR	1608420	Identifier	TMP_REG2		1607745	0					
ANR	1608421	Argument	dst		1607745	3					
ANR	1608422	Identifier	dst		1607745	0					
ANR	1608423	Argument	dstw		1607745	4					
ANR	1608424	Identifier	dstw		1607745	0					
ANR	1608425	Argument	0		1607745	5					
ANR	1608426	PrimaryExpression	0		1607745	0					
ANR	1608427	Argument	0		1607745	6					
ANR	1608428	PrimaryExpression	0		1607745	0					
ANR	1608429	IfStatement	if ( flags & SLJIT_SET_E )		1607745	18					
ANR	1608430	Condition	flags & SLJIT_SET_E	2016:5:63352:63370	1607745	0	True				
ANR	1608431	BitAndExpression	flags & SLJIT_SET_E		1607745	0		&			
ANR	1608432	Identifier	flags		1607745	0					
ANR	1608433	Identifier	SLJIT_SET_E		1607745	1					
ANR	1608434	CompoundStatement		70:26:2344:2344	1607745	1					
ANR	1608435	IfStatement	if ( reg_map [ dst_r ] <= 7 )		1607745	0					
ANR	1608436	Condition	reg_map [ dst_r ] <= 7	2018:6:63467:63485	1607745	0	True				
ANR	1608437	RelationalExpression	reg_map [ dst_r ] <= 7		1607745	0		<=			
ANR	1608438	ArrayIndexing	reg_map [ dst_r ]		1607745	0					
ANR	1608439	Identifier	reg_map		1607745	0					
ANR	1608440	Identifier	dst_r		1607745	1					
ANR	1608441	PrimaryExpression	7		1607745	1					
ANR	1608442	ReturnStatement	"return push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r ) ) ;"	2019:3:63491:63554	1607745	1	True				
ANR	1608443	CallExpression	"push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r ) )"		1607745	0					
ANR	1608444	Callee	push_inst16		1607745	0					
ANR	1608445	Identifier	push_inst16		1607745	0					
ANR	1608446	ArgumentList	compiler		1607745	1					
ANR	1608447	Argument	compiler		1607745	0					
ANR	1608448	Identifier	compiler		1607745	0					
ANR	1608449	Argument	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r )		1607745	1					
ANR	1608450	InclusiveOrExpression	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r )		1607745	0		|			
ANR	1608451	Identifier	MOVS		1607745	0					
ANR	1608452	InclusiveOrExpression	RD3 ( TMP_REG1 ) | RN3 ( dst_r )		1607745	1		|			
ANR	1608453	CallExpression	RD3 ( TMP_REG1 )		1607745	0					
ANR	1608454	Callee	RD3		1607745	0					
ANR	1608455	Identifier	RD3		1607745	0					
ANR	1608456	ArgumentList	TMP_REG1		1607745	1					
ANR	1608457	Argument	TMP_REG1		1607745	0					
ANR	1608458	Identifier	TMP_REG1		1607745	0					
ANR	1608459	CallExpression	RN3 ( dst_r )		1607745	1					
ANR	1608460	Callee	RN3		1607745	0					
ANR	1608461	Identifier	RN3		1607745	0					
ANR	1608462	ArgumentList	dst_r		1607745	1					
ANR	1608463	Argument	dst_r		1607745	0					
ANR	1608464	Identifier	dst_r		1607745	0					
ANR	1608465	ReturnStatement	"return push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r ) ) ;"	2020:2:63558:63634	1607745	1	True				
ANR	1608466	CallExpression	"push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r ) )"		1607745	0					
ANR	1608467	Callee	push_inst32		1607745	0					
ANR	1608468	Identifier	push_inst32		1607745	0					
ANR	1608469	ArgumentList	compiler		1607745	1					
ANR	1608470	Argument	compiler		1607745	0					
ANR	1608471	Identifier	compiler		1607745	0					
ANR	1608472	Argument	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1607745	1					
ANR	1608473	InclusiveOrExpression	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1607745	0		|			
ANR	1608474	Identifier	MOV_W		1607745	0					
ANR	1608475	InclusiveOrExpression	SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1607745	1		|			
ANR	1608476	Identifier	SET_FLAGS		1607745	0					
ANR	1608477	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1607745	1		|			
ANR	1608478	CallExpression	RD4 ( TMP_REG1 )		1607745	0					
ANR	1608479	Callee	RD4		1607745	0					
ANR	1608480	Identifier	RD4		1607745	0					
ANR	1608481	ArgumentList	TMP_REG1		1607745	1					
ANR	1608482	Argument	TMP_REG1		1607745	0					
ANR	1608483	Identifier	TMP_REG1		1607745	0					
ANR	1608484	CallExpression	RM4 ( dst_r )		1607745	1					
ANR	1608485	Callee	RM4		1607745	0					
ANR	1608486	Identifier	RM4		1607745	0					
ANR	1608487	ArgumentList	dst_r		1607745	1					
ANR	1608488	Argument	dst_r		1607745	0					
ANR	1608489	Identifier	dst_r		1607745	0					
ANR	1608490	ReturnStatement	return SLJIT_SUCCESS ;	2022:1:63640:63660	1607745	19	True				
ANR	1608491	Identifier	SLJIT_SUCCESS		1607745	0					
ANR	1608492	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1607745	1					
ANR	1608493	Identifier	sljit_emit_op_flags		1607745	2					
ANR	1608494	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1607745	3					
ANR	1608495	Parameter	struct sljit_compiler * compiler	1943:54:60906:60936	1607745	0	True				
ANR	1608496	ParameterType	struct sljit_compiler *		1607745	0					
ANR	1608497	Identifier	compiler		1607745	1					
ANR	1608498	Parameter	sljit_si op	1943:87:60939:60949	1607745	1	True				
ANR	1608499	ParameterType	sljit_si		1607745	0					
ANR	1608500	Identifier	op		1607745	1					
ANR	1608501	Parameter	sljit_si dst	1944:1:60953:60964	1607745	2	True				
ANR	1608502	ParameterType	sljit_si		1607745	0					
ANR	1608503	Identifier	dst		1607745	1					
ANR	1608504	Parameter	sljit_sw dstw	1944:15:60967:60979	1607745	3	True				
ANR	1608505	ParameterType	sljit_sw		1607745	0					
ANR	1608506	Identifier	dstw		1607745	1					
ANR	1608507	Parameter	sljit_si src	1945:1:60983:60994	1607745	4	True				
ANR	1608508	ParameterType	sljit_si		1607745	0					
ANR	1608509	Identifier	src		1607745	1					
ANR	1608510	Parameter	sljit_sw srcw	1945:15:60997:61009	1607745	5	True				
ANR	1608511	ParameterType	sljit_sw		1607745	0					
ANR	1608512	Identifier	srcw		1607745	1					
ANR	1608513	Parameter	sljit_si type	1946:1:61013:61025	1607745	6	True				
ANR	1608514	ParameterType	sljit_si		1607745	0					
ANR	1608515	Identifier	type		1607745	1					
ANR	1608516	CFGEntryNode	ENTRY		1607745		True				
ANR	1608517	CFGExitNode	EXIT		1607745		True				
ANR	1608518	Symbol	SLJIT_AND		1607745						
ANR	1608519	Symbol	TMP_REG2		1607745						
ANR	1608520	Symbol	TMP_REG1		1607745						
ANR	1608521	Symbol	SLJIT_MEM		1607745						
ANR	1608522	Symbol	push_inst16		1607745						
ANR	1608523	Symbol	reg_map		1607745						
ANR	1608524	Symbol	* compiler		1607745						
ANR	1608525	Symbol	type		1607745						
ANR	1608526	Symbol	SLJIT_XOR		1607745						
ANR	1608527	Symbol	GET_OPCODE		1607745						
ANR	1608528	Symbol	* dst		1607745						
ANR	1608529	Symbol	SLJIT_IMM		1607745						
ANR	1608530	Symbol	* dst_r		1607745						
ANR	1608531	Symbol	MOV_WI		1607745						
ANR	1608532	Symbol	FAST_IS_REG		1607745						
ANR	1608533	Symbol	srcw		1607745						
ANR	1608534	Symbol	compiler -> cache_arg		1607745						
ANR	1608535	Symbol	MOVSI		1607745						
ANR	1608536	Symbol	emit_op_mem2		1607745						
ANR	1608537	Symbol	emit_op_mem		1607745						
ANR	1608538	Symbol	IT		1607745						
ANR	1608539	Symbol	* reg_map		1607745						
ANR	1608540	Symbol	SET_FLAGS		1607745						
ANR	1608541	Symbol	MOV_W		1607745						
ANR	1608542	Symbol	RD3		1607745						
ANR	1608543	Symbol	EORI		1607745						
ANR	1608544	Symbol	compiler -> cache_argw		1607745						
ANR	1608545	Symbol	RD4		1607745						
ANR	1608546	Symbol	dst		1607745						
ANR	1608547	Symbol	flags		1607745						
ANR	1608548	Symbol	SLJIT_OR		1607745						
ANR	1608549	Symbol	SLJIT_ADD		1607745						
ANR	1608550	Symbol	SLJIT_SET_E		1607745						
ANR	1608551	Symbol	dst_r		1607745						
ANR	1608552	Symbol	GET_ALL_FLAGS		1607745						
ANR	1608553	Symbol	load_immediate		1607745						
ANR	1608554	Symbol	RM4		1607745						
ANR	1608555	Symbol	compiler		1607745						
ANR	1608556	Symbol	check_sljit_emit_op_flags		1607745						
ANR	1608557	Symbol	push_inst32		1607745						
ANR	1608558	Symbol	cc		1607745						
ANR	1608559	Symbol	op		1607745						
ANR	1608560	Symbol	get_cc		1607745						
ANR	1608561	Symbol	src		1607745						
ANR	1608562	Symbol	SLJIT_SUCCESS		1607745						
ANR	1608563	Symbol	ANDI		1607745						
ANR	1608564	Symbol	ins		1607745						
ANR	1608565	Symbol	RDN3		1607745						
ANR	1608566	Symbol	SLJIT_UNUSED		1607745						
ANR	1608567	Symbol	RN3		1607745						
ANR	1608568	Symbol	STORE		1607745						
ANR	1608569	Symbol	RN4		1607745						
ANR	1608570	Symbol	MOVS		1607745						
ANR	1608571	Symbol	dstw		1607745						
ANR	1608572	Symbol	WORD_SIZE		1607745						
ANR	1608573	Symbol	ORRI		1607745						
ANR	1608574	Function	sljit_emit_const	2025:25:63690:64337							
ANR	1608575	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1608574	0					
ANR	1608576	CompoundStatement		2026:0:63810:64337	1608574	0					
ANR	1608577	IdentifierDeclStatement	struct sljit_const * const_ ;	2027:1:63813:63839	1608574	0	True				
ANR	1608578	IdentifierDecl	* const_		1608574	0					
ANR	1608579	IdentifierDeclType	struct sljit_const *		1608574	0					
ANR	1608580	Identifier	const_		1608574	1					
ANR	1608581	IdentifierDeclStatement	sljit_si dst_r ;	2028:1:63842:63856	1608574	1	True				
ANR	1608582	IdentifierDecl	dst_r		1608574	0					
ANR	1608583	IdentifierDeclType	sljit_si		1608574	0					
ANR	1608584	Identifier	dst_r		1608574	1					
ANR	1608585	ExpressionStatement	CHECK_ERROR_PTR ( )	2030:1:63860:63877	1608574	2	True				
ANR	1608586	CallExpression	CHECK_ERROR_PTR ( )		1608574	0					
ANR	1608587	Callee	CHECK_ERROR_PTR		1608574	0					
ANR	1608588	Identifier	CHECK_ERROR_PTR		1608574	0					
ANR	1608589	ArgumentList			1608574	1					
ANR	1608590	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2031:1:63880:63946	1608574	3	True				
ANR	1608591	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1608574	0					
ANR	1608592	Callee	CHECK_PTR		1608574	0					
ANR	1608593	Identifier	CHECK_PTR		1608574	0					
ANR	1608594	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1608574	1					
ANR	1608595	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1608574	0					
ANR	1608596	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1608574	0					
ANR	1608597	Callee	check_sljit_emit_const		1608574	0					
ANR	1608598	Identifier	check_sljit_emit_const		1608574	0					
ANR	1608599	ArgumentList	compiler		1608574	1					
ANR	1608600	Argument	compiler		1608574	0					
ANR	1608601	Identifier	compiler		1608574	0					
ANR	1608602	Argument	dst		1608574	1					
ANR	1608603	Identifier	dst		1608574	0					
ANR	1608604	Argument	dstw		1608574	2					
ANR	1608605	Identifier	dstw		1608574	0					
ANR	1608606	Argument	init_value		1608574	3					
ANR	1608607	Identifier	init_value		1608574	0					
ANR	1608608	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2032:1:63949:63979	1608574	4	True				
ANR	1608609	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1608574	0					
ANR	1608610	Callee	ADJUST_LOCAL_OFFSET		1608574	0					
ANR	1608611	Identifier	ADJUST_LOCAL_OFFSET		1608574	0					
ANR	1608612	ArgumentList	dst		1608574	1					
ANR	1608613	Argument	dst		1608574	0					
ANR	1608614	Identifier	dst		1608574	0					
ANR	1608615	Argument	dstw		1608574	1					
ANR	1608616	Identifier	dstw		1608574	0					
ANR	1608617	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2034:1:63983:64062	1608574	5	True				
ANR	1608618	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1608574	0		=			
ANR	1608619	Identifier	const_		1608574	0					
ANR	1608620	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1608574	1					
ANR	1608621	CastTarget	struct sljit_const *		1608574	0					
ANR	1608622	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1608574	1					
ANR	1608623	Callee	ensure_abuf		1608574	0					
ANR	1608624	Identifier	ensure_abuf		1608574	0					
ANR	1608625	ArgumentList	compiler		1608574	1					
ANR	1608626	Argument	compiler		1608574	0					
ANR	1608627	Identifier	compiler		1608574	0					
ANR	1608628	Argument	sizeof ( struct sljit_const )		1608574	1					
ANR	1608629	SizeofExpression	sizeof ( struct sljit_const )		1608574	0					
ANR	1608630	Sizeof	sizeof		1608574	0					
ANR	1608631	SizeofOperand	struct sljit_const		1608574	1					
ANR	1608632	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2035:1:64065:64085	1608574	6	True				
ANR	1608633	CallExpression	PTR_FAIL_IF ( ! const_ )		1608574	0					
ANR	1608634	Callee	PTR_FAIL_IF		1608574	0					
ANR	1608635	Identifier	PTR_FAIL_IF		1608574	0					
ANR	1608636	ArgumentList	! const_		1608574	1					
ANR	1608637	Argument	! const_		1608574	0					
ANR	1608638	UnaryOperationExpression	! const_		1608574	0					
ANR	1608639	UnaryOperator	!		1608574	0					
ANR	1608640	Identifier	const_		1608574	1					
ANR	1608641	ExpressionStatement	"set_const ( const_ , compiler )"	2036:1:64088:64115	1608574	7	True				
ANR	1608642	CallExpression	"set_const ( const_ , compiler )"		1608574	0					
ANR	1608643	Callee	set_const		1608574	0					
ANR	1608644	Identifier	set_const		1608574	0					
ANR	1608645	ArgumentList	const_		1608574	1					
ANR	1608646	Argument	const_		1608574	0					
ANR	1608647	Identifier	const_		1608574	0					
ANR	1608648	Argument	compiler		1608574	1					
ANR	1608649	Identifier	compiler		1608574	0					
ANR	1608650	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	2038:1:64119:64160	1608574	8	True				
ANR	1608651	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1608574	0		=			
ANR	1608652	Identifier	dst_r		1608574	0					
ANR	1608653	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1608574	1					
ANR	1608654	Condition	SLOW_IS_REG ( dst )		1608574	0					
ANR	1608655	CallExpression	SLOW_IS_REG ( dst )		1608574	0					
ANR	1608656	Callee	SLOW_IS_REG		1608574	0					
ANR	1608657	Identifier	SLOW_IS_REG		1608574	0					
ANR	1608658	ArgumentList	dst		1608574	1					
ANR	1608659	Argument	dst		1608574	0					
ANR	1608660	Identifier	dst		1608574	0					
ANR	1608661	Identifier	dst		1608574	1					
ANR	1608662	Identifier	TMP_REG1		1608574	2					
ANR	1608663	ExpressionStatement	"PTR_FAIL_IF ( emit_imm32_const ( compiler , dst_r , init_value ) )"	2039:1:64163:64221	1608574	9	True				
ANR	1608664	CallExpression	"PTR_FAIL_IF ( emit_imm32_const ( compiler , dst_r , init_value ) )"		1608574	0					
ANR	1608665	Callee	PTR_FAIL_IF		1608574	0					
ANR	1608666	Identifier	PTR_FAIL_IF		1608574	0					
ANR	1608667	ArgumentList	"emit_imm32_const ( compiler , dst_r , init_value )"		1608574	1					
ANR	1608668	Argument	"emit_imm32_const ( compiler , dst_r , init_value )"		1608574	0					
ANR	1608669	CallExpression	"emit_imm32_const ( compiler , dst_r , init_value )"		1608574	0					
ANR	1608670	Callee	emit_imm32_const		1608574	0					
ANR	1608671	Identifier	emit_imm32_const		1608574	0					
ANR	1608672	ArgumentList	compiler		1608574	1					
ANR	1608673	Argument	compiler		1608574	0					
ANR	1608674	Identifier	compiler		1608574	0					
ANR	1608675	Argument	dst_r		1608574	1					
ANR	1608676	Identifier	dst_r		1608574	0					
ANR	1608677	Argument	init_value		1608574	2					
ANR	1608678	Identifier	init_value		1608574	0					
ANR	1608679	IfStatement	if ( dst & SLJIT_MEM )		1608574	10					
ANR	1608680	Condition	dst & SLJIT_MEM	2041:5:64229:64243	1608574	0	True				
ANR	1608681	BitAndExpression	dst & SLJIT_MEM		1608574	0		&			
ANR	1608682	Identifier	dst		1608574	0					
ANR	1608683	Identifier	SLJIT_MEM		1608574	1					
ANR	1608684	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw ) )"	2042:2:64248:64319	1608574	1	True				
ANR	1608685	CallExpression	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw ) )"		1608574	0					
ANR	1608686	Callee	PTR_FAIL_IF		1608574	0					
ANR	1608687	Identifier	PTR_FAIL_IF		1608574	0					
ANR	1608688	ArgumentList	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1608574	1					
ANR	1608689	Argument	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1608574	0					
ANR	1608690	CallExpression	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1608574	0					
ANR	1608691	Callee	emit_op_mem		1608574	0					
ANR	1608692	Identifier	emit_op_mem		1608574	0					
ANR	1608693	ArgumentList	compiler		1608574	1					
ANR	1608694	Argument	compiler		1608574	0					
ANR	1608695	Identifier	compiler		1608574	0					
ANR	1608696	Argument	WORD_SIZE | STORE		1608574	1					
ANR	1608697	InclusiveOrExpression	WORD_SIZE | STORE		1608574	0		|			
ANR	1608698	Identifier	WORD_SIZE		1608574	0					
ANR	1608699	Identifier	STORE		1608574	1					
ANR	1608700	Argument	dst_r		1608574	2					
ANR	1608701	Identifier	dst_r		1608574	0					
ANR	1608702	Argument	dst		1608574	3					
ANR	1608703	Identifier	dst		1608574	0					
ANR	1608704	Argument	dstw		1608574	4					
ANR	1608705	Identifier	dstw		1608574	0					
ANR	1608706	ReturnStatement	return const_ ;	2043:1:64322:64335	1608574	11	True				
ANR	1608707	Identifier	const_		1608574	0					
ANR	1608708	ReturnType	struct sljit_const *		1608574	1					
ANR	1608709	Identifier	sljit_emit_const		1608574	2					
ANR	1608710	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1608574	3					
ANR	1608711	Parameter	struct sljit_compiler * compiler	2025:62:63727:63757	1608574	0	True				
ANR	1608712	ParameterType	struct sljit_compiler *		1608574	0					
ANR	1608713	Identifier	compiler		1608574	1					
ANR	1608714	Parameter	sljit_si dst	2025:95:63760:63771	1608574	1	True				
ANR	1608715	ParameterType	sljit_si		1608574	0					
ANR	1608716	Identifier	dst		1608574	1					
ANR	1608717	Parameter	sljit_sw dstw	2025:109:63774:63786	1608574	2	True				
ANR	1608718	ParameterType	sljit_sw		1608574	0					
ANR	1608719	Identifier	dstw		1608574	1					
ANR	1608720	Parameter	sljit_sw init_value	2025:124:63789:63807	1608574	3	True				
ANR	1608721	ParameterType	sljit_sw		1608574	0					
ANR	1608722	Identifier	init_value		1608574	1					
ANR	1608723	CFGEntryNode	ENTRY		1608574		True				
ANR	1608724	CFGExitNode	EXIT		1608574		True				
ANR	1608725	Symbol	check_sljit_emit_const		1608574						
ANR	1608726	Symbol	TMP_REG1		1608574						
ANR	1608727	Symbol	const_		1608574						
ANR	1608728	Symbol	dst		1608574						
ANR	1608729	Symbol	SLJIT_MEM		1608574						
ANR	1608730	Symbol	emit_imm32_const		1608574						
ANR	1608731	Symbol	emit_op_mem		1608574						
ANR	1608732	Symbol	SLOW_IS_REG		1608574						
ANR	1608733	Symbol	ensure_abuf		1608574						
ANR	1608734	Symbol	dst_r		1608574						
ANR	1608735	Symbol	STORE		1608574						
ANR	1608736	Symbol	compiler		1608574						
ANR	1608737	Symbol	init_value		1608574						
ANR	1608738	Symbol	dstw		1608574						
ANR	1608739	Symbol	WORD_SIZE		1608574						
ANR	1608740	Function	sljit_set_jump_addr	2046:0:64340:64534							
ANR	1608741	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1608740	0					
ANR	1608742	CompoundStatement		2047:0:64424:64534	1608740	0					
ANR	1608743	IdentifierDeclStatement	sljit_uh * inst = ( sljit_uh * ) addr ;	2048:1:64427:64459	1608740	0	True				
ANR	1608744	IdentifierDecl	* inst = ( sljit_uh * ) addr		1608740	0					
ANR	1608745	IdentifierDeclType	sljit_uh *		1608740	0					
ANR	1608746	Identifier	inst		1608740	1					
ANR	1608747	AssignmentExpression	* inst = ( sljit_uh * ) addr		1608740	2		=			
ANR	1608748	Identifier	inst		1608740	0					
ANR	1608749	CastExpression	( sljit_uh * ) addr		1608740	1					
ANR	1608750	CastTarget	sljit_uh *		1608740	0					
ANR	1608751	Identifier	addr		1608740	1					
ANR	1608752	ExpressionStatement	"modify_imm32_const ( inst , new_addr )"	2049:1:64462:64496	1608740	1	True				
ANR	1608753	CallExpression	"modify_imm32_const ( inst , new_addr )"		1608740	0					
ANR	1608754	Callee	modify_imm32_const		1608740	0					
ANR	1608755	Identifier	modify_imm32_const		1608740	0					
ANR	1608756	ArgumentList	inst		1608740	1					
ANR	1608757	Argument	inst		1608740	0					
ANR	1608758	Identifier	inst		1608740	0					
ANR	1608759	Argument	new_addr		1608740	1					
ANR	1608760	Identifier	new_addr		1608740	0					
ANR	1608761	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2050:1:64499:64532	1608740	2	True				
ANR	1608762	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1608740	0					
ANR	1608763	Callee	SLJIT_CACHE_FLUSH		1608740	0					
ANR	1608764	Identifier	SLJIT_CACHE_FLUSH		1608740	0					
ANR	1608765	ArgumentList	inst		1608740	1					
ANR	1608766	Argument	inst		1608740	0					
ANR	1608767	Identifier	inst		1608740	0					
ANR	1608768	Argument	inst + 4		1608740	1					
ANR	1608769	AdditiveExpression	inst + 4		1608740	0		+			
ANR	1608770	Identifier	inst		1608740	0					
ANR	1608771	PrimaryExpression	4		1608740	1					
ANR	1608772	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1608740	1					
ANR	1608773	Identifier	sljit_set_jump_addr		1608740	2					
ANR	1608774	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1608740	3					
ANR	1608775	Parameter	sljit_uw addr	2046:50:64390:64402	1608740	0	True				
ANR	1608776	ParameterType	sljit_uw		1608740	0					
ANR	1608777	Identifier	addr		1608740	1					
ANR	1608778	Parameter	sljit_uw new_addr	2046:65:64405:64421	1608740	1	True				
ANR	1608779	ParameterType	sljit_uw		1608740	0					
ANR	1608780	Identifier	new_addr		1608740	1					
ANR	1608781	CFGEntryNode	ENTRY		1608740		True				
ANR	1608782	CFGExitNode	EXIT		1608740		True				
ANR	1608783	Symbol	inst		1608740						
ANR	1608784	Symbol	addr		1608740						
ANR	1608785	Symbol	new_addr		1608740						
ANR	1608786	Function	sljit_set_const	2053:0:64537:64735							
ANR	1608787	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1608786	0					
ANR	1608788	CompoundStatement		2054:0:64621:64735	1608786	0					
ANR	1608789	IdentifierDeclStatement	sljit_uh * inst = ( sljit_uh * ) addr ;	2055:1:64624:64656	1608786	0	True				
ANR	1608790	IdentifierDecl	* inst = ( sljit_uh * ) addr		1608786	0					
ANR	1608791	IdentifierDeclType	sljit_uh *		1608786	0					
ANR	1608792	Identifier	inst		1608786	1					
ANR	1608793	AssignmentExpression	* inst = ( sljit_uh * ) addr		1608786	2		=			
ANR	1608794	Identifier	inst		1608786	0					
ANR	1608795	CastExpression	( sljit_uh * ) addr		1608786	1					
ANR	1608796	CastTarget	sljit_uh *		1608786	0					
ANR	1608797	Identifier	addr		1608786	1					
ANR	1608798	ExpressionStatement	"modify_imm32_const ( inst , new_constant )"	2056:1:64659:64697	1608786	1	True				
ANR	1608799	CallExpression	"modify_imm32_const ( inst , new_constant )"		1608786	0					
ANR	1608800	Callee	modify_imm32_const		1608786	0					
ANR	1608801	Identifier	modify_imm32_const		1608786	0					
ANR	1608802	ArgumentList	inst		1608786	1					
ANR	1608803	Argument	inst		1608786	0					
ANR	1608804	Identifier	inst		1608786	0					
ANR	1608805	Argument	new_constant		1608786	1					
ANR	1608806	Identifier	new_constant		1608786	0					
ANR	1608807	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2057:1:64700:64733	1608786	2	True				
ANR	1608808	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1608786	0					
ANR	1608809	Callee	SLJIT_CACHE_FLUSH		1608786	0					
ANR	1608810	Identifier	SLJIT_CACHE_FLUSH		1608786	0					
ANR	1608811	ArgumentList	inst		1608786	1					
ANR	1608812	Argument	inst		1608786	0					
ANR	1608813	Identifier	inst		1608786	0					
ANR	1608814	Argument	inst + 4		1608786	1					
ANR	1608815	AdditiveExpression	inst + 4		1608786	0		+			
ANR	1608816	Identifier	inst		1608786	0					
ANR	1608817	PrimaryExpression	4		1608786	1					
ANR	1608818	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1608786	1					
ANR	1608819	Identifier	sljit_set_const		1608786	2					
ANR	1608820	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1608786	3					
ANR	1608821	Parameter	sljit_uw addr	2053:46:64583:64595	1608786	0	True				
ANR	1608822	ParameterType	sljit_uw		1608786	0					
ANR	1608823	Identifier	addr		1608786	1					
ANR	1608824	Parameter	sljit_sw new_constant	2053:61:64598:64618	1608786	1	True				
ANR	1608825	ParameterType	sljit_sw		1608786	0					
ANR	1608826	Identifier	new_constant		1608786	1					
ANR	1608827	CFGEntryNode	ENTRY		1608786		True				
ANR	1608828	CFGExitNode	EXIT		1608786		True				
ANR	1608829	Symbol	new_constant		1608786						
ANR	1608830	Symbol	inst		1608786						
ANR	1608831	Symbol	addr		1608786						
