command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1375207	File	data/converged/CVE-2015-8617_php-src/ext_opcache_Optimizer_pass1_5.c								
ANR	1375208	Function	zend_optimizer_pass1	40:0:1919:23941							
ANR	1375209	FunctionDef	"zend_optimizer_pass1 (zend_op_array * op_array , zend_optimizer_ctx * ctx)"		1375208	0					
ANR	1375210	CompoundStatement		41:0:1995:23941	1375208	0					
ANR	1375211	IdentifierDeclStatement	int i = 0 ;	42:1:1998:2007	1375208	0	True				
ANR	1375212	IdentifierDecl	i = 0		1375208	0					
ANR	1375213	IdentifierDeclType	int		1375208	0					
ANR	1375214	Identifier	i		1375208	1					
ANR	1375215	AssignmentExpression	i = 0		1375208	2		=			
ANR	1375216	Identifier	i		1375208	0					
ANR	1375217	PrimaryExpression	0		1375208	1					
ANR	1375218	IdentifierDeclStatement	zend_op * opline = op_array -> opcodes ;	43:1:2010:2045	1375208	1	True				
ANR	1375219	IdentifierDecl	* opline = op_array -> opcodes		1375208	0					
ANR	1375220	IdentifierDeclType	zend_op *		1375208	0					
ANR	1375221	Identifier	opline		1375208	1					
ANR	1375222	AssignmentExpression	* opline = op_array -> opcodes		1375208	2		=			
ANR	1375223	Identifier	opline		1375208	0					
ANR	1375224	PtrMemberAccess	op_array -> opcodes		1375208	1					
ANR	1375225	Identifier	op_array		1375208	0					
ANR	1375226	Identifier	opcodes		1375208	1					
ANR	1375227	IdentifierDeclStatement	zend_op * end = opline + op_array -> last ;	44:1:2048:2086	1375208	2	True				
ANR	1375228	IdentifierDecl	* end = opline + op_array -> last		1375208	0					
ANR	1375229	IdentifierDeclType	zend_op *		1375208	0					
ANR	1375230	Identifier	end		1375208	1					
ANR	1375231	AssignmentExpression	* end = opline + op_array -> last		1375208	2		=			
ANR	1375232	Identifier	end		1375208	0					
ANR	1375233	AdditiveExpression	opline + op_array -> last		1375208	1		+			
ANR	1375234	Identifier	opline		1375208	0					
ANR	1375235	PtrMemberAccess	op_array -> last		1375208	1					
ANR	1375236	Identifier	op_array		1375208	0					
ANR	1375237	Identifier	last		1375208	1					
ANR	1375238	IdentifierDeclStatement	zend_bool collect_constants = ( op_array == & ctx -> script -> main_op_array ) ;	45:1:2089:2160	1375208	3	True				
ANR	1375239	IdentifierDecl	collect_constants = ( op_array == & ctx -> script -> main_op_array )		1375208	0					
ANR	1375240	IdentifierDeclType	zend_bool		1375208	0					
ANR	1375241	Identifier	collect_constants		1375208	1					
ANR	1375242	AssignmentExpression	collect_constants = ( op_array == & ctx -> script -> main_op_array )		1375208	2		=			
ANR	1375243	Identifier	collect_constants		1375208	0					
ANR	1375244	EqualityExpression	op_array == & ctx -> script -> main_op_array		1375208	1		==			
ANR	1375245	Identifier	op_array		1375208	0					
ANR	1375246	UnaryOperationExpression	& ctx -> script -> main_op_array		1375208	1					
ANR	1375247	UnaryOperator	&		1375208	0					
ANR	1375248	PtrMemberAccess	ctx -> script -> main_op_array		1375208	1					
ANR	1375249	PtrMemberAccess	ctx -> script		1375208	0					
ANR	1375250	Identifier	ctx		1375208	0					
ANR	1375251	Identifier	script		1375208	1					
ANR	1375252	Identifier	main_op_array		1375208	1					
ANR	1375253	WhileStatement	while ( opline < end )		1375208	4					
ANR	1375254	Condition	opline < end	47:8:2171:2182	1375208	0	True				
ANR	1375255	RelationalExpression	opline < end		1375208	0		<			
ANR	1375256	Identifier	opline		1375208	0					
ANR	1375257	Identifier	end		1375208	1					
ANR	1375258	CompoundStatement		7:22:189:189	1375208	1					
ANR	1375259	SwitchStatement	switch ( opline -> opcode )		1375208	0					
ANR	1375260	Condition	opline -> opcode	48:10:2197:2210	1375208	0	True				
ANR	1375261	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375262	Identifier	opline		1375208	0					
ANR	1375263	Identifier	opcode		1375208	1					
ANR	1375264	CompoundStatement		8:26:217:217	1375208	1					
ANR	1375265	Label	case ZEND_ADD :	49:2:2217:2230	1375208	0	True				
ANR	1375266	Identifier	ZEND_ADD		1375208	0					
ANR	1375267	Label	case ZEND_SUB :	50:2:2234:2247	1375208	1	True				
ANR	1375268	Identifier	ZEND_SUB		1375208	0					
ANR	1375269	Label	case ZEND_MUL :	51:2:2251:2264	1375208	2	True				
ANR	1375270	Identifier	ZEND_MUL		1375208	0					
ANR	1375271	Label	case ZEND_DIV :	52:2:2268:2281	1375208	3	True				
ANR	1375272	Identifier	ZEND_DIV		1375208	0					
ANR	1375273	Label	case ZEND_MOD :	53:2:2285:2298	1375208	4	True				
ANR	1375274	Identifier	ZEND_MOD		1375208	0					
ANR	1375275	Label	case ZEND_POW :	54:2:2302:2315	1375208	5	True				
ANR	1375276	Identifier	ZEND_POW		1375208	0					
ANR	1375277	Label	case ZEND_SL :	55:2:2319:2331	1375208	6	True				
ANR	1375278	Identifier	ZEND_SL		1375208	0					
ANR	1375279	Label	case ZEND_SR :	56:2:2335:2347	1375208	7	True				
ANR	1375280	Identifier	ZEND_SR		1375208	0					
ANR	1375281	Label	case ZEND_CONCAT :	57:2:2351:2367	1375208	8	True				
ANR	1375282	Identifier	ZEND_CONCAT		1375208	0					
ANR	1375283	Label	case ZEND_FAST_CONCAT :	58:2:2371:2392	1375208	9	True				
ANR	1375284	Identifier	ZEND_FAST_CONCAT		1375208	0					
ANR	1375285	Label	case ZEND_IS_EQUAL :	59:2:2396:2414	1375208	10	True				
ANR	1375286	Identifier	ZEND_IS_EQUAL		1375208	0					
ANR	1375287	Label	case ZEND_IS_NOT_EQUAL :	60:2:2418:2440	1375208	11	True				
ANR	1375288	Identifier	ZEND_IS_NOT_EQUAL		1375208	0					
ANR	1375289	Label	case ZEND_IS_SMALLER :	61:2:2444:2464	1375208	12	True				
ANR	1375290	Identifier	ZEND_IS_SMALLER		1375208	0					
ANR	1375291	Label	case ZEND_IS_SMALLER_OR_EQUAL :	62:2:2468:2497	1375208	13	True				
ANR	1375292	Identifier	ZEND_IS_SMALLER_OR_EQUAL		1375208	0					
ANR	1375293	Label	case ZEND_IS_IDENTICAL :	63:2:2501:2523	1375208	14	True				
ANR	1375294	Identifier	ZEND_IS_IDENTICAL		1375208	0					
ANR	1375295	Label	case ZEND_IS_NOT_IDENTICAL :	64:2:2527:2553	1375208	15	True				
ANR	1375296	Identifier	ZEND_IS_NOT_IDENTICAL		1375208	0					
ANR	1375297	Label	case ZEND_BW_OR :	65:2:2557:2572	1375208	16	True				
ANR	1375298	Identifier	ZEND_BW_OR		1375208	0					
ANR	1375299	Label	case ZEND_BW_AND :	66:2:2576:2592	1375208	17	True				
ANR	1375300	Identifier	ZEND_BW_AND		1375208	0					
ANR	1375301	Label	case ZEND_BW_XOR :	67:2:2596:2612	1375208	18	True				
ANR	1375302	Identifier	ZEND_BW_XOR		1375208	0					
ANR	1375303	Label	case ZEND_BOOL_XOR :	68:2:2616:2634	1375208	19	True				
ANR	1375304	Identifier	ZEND_BOOL_XOR		1375208	0					
ANR	1375305	Label	case ZEND_SPACESHIP :	69:2:2638:2657	1375208	20	True				
ANR	1375306	Identifier	ZEND_SPACESHIP		1375208	0					
ANR	1375307	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST )		1375208	21					
ANR	1375308	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST	70:7:2666:2739	1375208	0	True				
ANR	1375309	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST		1375208	0		&&			
ANR	1375310	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1375311	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1375312	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1375313	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1375314	ArgumentList	opline		1375208	1					
ANR	1375315	Argument	opline		1375208	0					
ANR	1375316	Identifier	opline		1375208	0					
ANR	1375317	Identifier	IS_CONST		1375208	1					
ANR	1375318	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1375208	1		==			
ANR	1375319	CallExpression	ZEND_OP2_TYPE ( opline )		1375208	0					
ANR	1375320	Callee	ZEND_OP2_TYPE		1375208	0					
ANR	1375321	Identifier	ZEND_OP2_TYPE		1375208	0					
ANR	1375322	ArgumentList	opline		1375208	1					
ANR	1375323	Argument	opline		1375208	0					
ANR	1375324	Identifier	opline		1375208	0					
ANR	1375325	Identifier	IS_CONST		1375208	1					
ANR	1375326	CompoundStatement		36:4:950:956	1375208	1					
ANR	1375327	IdentifierDeclStatement	binary_op_type binary_op = get_binary_op ( opline -> opcode ) ;	73:4:2798:2854	1375208	0	True				
ANR	1375328	IdentifierDecl	binary_op = get_binary_op ( opline -> opcode )		1375208	0					
ANR	1375329	IdentifierDeclType	binary_op_type		1375208	0					
ANR	1375330	Identifier	binary_op		1375208	1					
ANR	1375331	AssignmentExpression	binary_op = get_binary_op ( opline -> opcode )		1375208	2		=			
ANR	1375332	Identifier	binary_op		1375208	0					
ANR	1375333	CallExpression	get_binary_op ( opline -> opcode )		1375208	1					
ANR	1375334	Callee	get_binary_op		1375208	0					
ANR	1375335	Identifier	get_binary_op		1375208	0					
ANR	1375336	ArgumentList	opline -> opcode		1375208	1					
ANR	1375337	Argument	opline -> opcode		1375208	0					
ANR	1375338	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375339	Identifier	opline		1375208	0					
ANR	1375340	Identifier	opcode		1375208	1					
ANR	1375341	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	74:4:2860:2897	1375208	1	True				
ANR	1375342	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1375343	IdentifierDeclType	uint32_t		1375208	0					
ANR	1375344	Identifier	tv		1375208	1					
ANR	1375345	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		1375208	2		=			
ANR	1375346	Identifier	tv		1375208	0					
ANR	1375347	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	1					
ANR	1375348	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1375349	Callee	ZEND_RESULT		1375208	0					
ANR	1375350	Identifier	ZEND_RESULT		1375208	0					
ANR	1375351	ArgumentList	opline		1375208	1					
ANR	1375352	Argument	opline		1375208	0					
ANR	1375353	Identifier	opline		1375208	0					
ANR	1375354	Identifier	var		1375208	1					
ANR	1375355	IdentifierDeclStatement	zval result ;	75:4:2929:2940	1375208	2	True				
ANR	1375356	IdentifierDecl	result		1375208	0					
ANR	1375357	IdentifierDeclType	zval		1375208	0					
ANR	1375358	Identifier	result		1375208	1					
ANR	1375359	IdentifierDeclStatement	int er ;	76:4:2946:2952	1375208	3	True				
ANR	1375360	IdentifierDecl	er		1375208	0					
ANR	1375361	IdentifierDeclType	int		1375208	0					
ANR	1375362	Identifier	er		1375208	1					
ANR	1375363	IfStatement	if ( ( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0 )		1375208	4					
ANR	1375364	Condition	( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0	78:8:2963:3074	1375208	0	True				
ANR	1375365	AndExpression	( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0		1375208	0		&&			
ANR	1375366	OrExpression	opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD		1375208	0		||			
ANR	1375367	EqualityExpression	opline -> opcode == ZEND_DIV		1375208	0		==			
ANR	1375368	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375369	Identifier	opline		1375208	0					
ANR	1375370	Identifier	opcode		1375208	1					
ANR	1375371	Identifier	ZEND_DIV		1375208	1					
ANR	1375372	EqualityExpression	opline -> opcode == ZEND_MOD		1375208	1		==			
ANR	1375373	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375374	Identifier	opline		1375208	0					
ANR	1375375	Identifier	opcode		1375208	1					
ANR	1375376	Identifier	ZEND_MOD		1375208	1					
ANR	1375377	EqualityExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0		1375208	1		==			
ANR	1375378	CallExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1375379	Callee	zval_get_long		1375208	0					
ANR	1375380	Identifier	zval_get_long		1375208	0					
ANR	1375381	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1375382	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1375383	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1375384	UnaryOperator	&		1375208	0					
ANR	1375385	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1375386	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1375387	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1375388	ArgumentList	opline		1375208	1					
ANR	1375389	Argument	opline		1375208	0					
ANR	1375390	Identifier	opline		1375208	0					
ANR	1375391	PrimaryExpression	0		1375208	1					
ANR	1375392	CompoundStatement		39:52:1081:1081	1375208	1					
ANR	1375393	BreakStatement	break ;	81:5:3104:3109	1375208	0	True				
ANR	1375394	ElseStatement	else		1375208	0					
ANR	1375395	IfStatement	if ( ( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0 )		1375208	0					
ANR	1375396	Condition	( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0	82:15:3126:3234	1375208	0	True				
ANR	1375397	AndExpression	( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0		1375208	0		&&			
ANR	1375398	OrExpression	opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR		1375208	0		||			
ANR	1375399	EqualityExpression	opline -> opcode == ZEND_SL		1375208	0		==			
ANR	1375400	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375401	Identifier	opline		1375208	0					
ANR	1375402	Identifier	opcode		1375208	1					
ANR	1375403	Identifier	ZEND_SL		1375208	1					
ANR	1375404	EqualityExpression	opline -> opcode == ZEND_SR		1375208	1		==			
ANR	1375405	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375406	Identifier	opline		1375208	0					
ANR	1375407	Identifier	opcode		1375208	1					
ANR	1375408	Identifier	ZEND_SR		1375208	1					
ANR	1375409	RelationalExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0		1375208	1		<			
ANR	1375410	CallExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1375411	Callee	zval_get_long		1375208	0					
ANR	1375412	Identifier	zval_get_long		1375208	0					
ANR	1375413	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1375414	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1375415	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1375416	UnaryOperator	&		1375208	0					
ANR	1375417	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1375418	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1375419	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1375420	ArgumentList	opline		1375208	1					
ANR	1375421	Argument	opline		1375208	0					
ANR	1375422	Identifier	opline		1375208	0					
ANR	1375423	PrimaryExpression	0		1375208	1					
ANR	1375424	CompoundStatement		43:51:1241:1241	1375208	1					
ANR	1375425	BreakStatement	break ;	85:5:3280:3285	1375208	0	True				
ANR	1375426	ExpressionStatement	er = EG ( error_reporting )	87:4:3297:3321	1375208	5	True				
ANR	1375427	AssignmentExpression	er = EG ( error_reporting )		1375208	0		=			
ANR	1375428	Identifier	er		1375208	0					
ANR	1375429	CallExpression	EG ( error_reporting )		1375208	1					
ANR	1375430	Callee	EG		1375208	0					
ANR	1375431	Identifier	EG		1375208	0					
ANR	1375432	ArgumentList	error_reporting		1375208	1					
ANR	1375433	Argument	error_reporting		1375208	0					
ANR	1375434	Identifier	error_reporting		1375208	0					
ANR	1375435	ExpressionStatement	EG ( error_reporting ) = 0	88:4:3327:3350	1375208	6	True				
ANR	1375436	AssignmentExpression	EG ( error_reporting ) = 0		1375208	0		=			
ANR	1375437	CallExpression	EG ( error_reporting )		1375208	0					
ANR	1375438	Callee	EG		1375208	0					
ANR	1375439	Identifier	EG		1375208	0					
ANR	1375440	ArgumentList	error_reporting		1375208	1					
ANR	1375441	Argument	error_reporting		1375208	0					
ANR	1375442	Identifier	error_reporting		1375208	0					
ANR	1375443	PrimaryExpression	0		1375208	1					
ANR	1375444	IfStatement	"if ( binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) != SUCCESS )"		1375208	7					
ANR	1375445	Condition	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) != SUCCESS"	90:8:3399:3481	1375208	0	True				
ANR	1375446	EqualityExpression	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) != SUCCESS"		1375208	0		!=			
ANR	1375447	CallExpression	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) )"		1375208	0					
ANR	1375448	Callee	binary_op		1375208	0					
ANR	1375449	Identifier	binary_op		1375208	0					
ANR	1375450	ArgumentList	& result		1375208	1					
ANR	1375451	Argument	& result		1375208	0					
ANR	1375452	UnaryOperationExpression	& result		1375208	0					
ANR	1375453	UnaryOperator	&		1375208	0					
ANR	1375454	Identifier	result		1375208	1					
ANR	1375455	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375456	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375457	UnaryOperator	&		1375208	0					
ANR	1375458	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375459	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1375460	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1375461	ArgumentList	opline		1375208	1					
ANR	1375462	Argument	opline		1375208	0					
ANR	1375463	Identifier	opline		1375208	0					
ANR	1375464	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	2					
ANR	1375465	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1375466	UnaryOperator	&		1375208	0					
ANR	1375467	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1375468	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1375469	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1375470	ArgumentList	opline		1375208	1					
ANR	1375471	Argument	opline		1375208	0					
ANR	1375472	Identifier	opline		1375208	0					
ANR	1375473	Identifier	SUCCESS		1375208	1					
ANR	1375474	CompoundStatement		50:93:1488:1488	1375208	1					
ANR	1375475	ExpressionStatement	EG ( error_reporting ) = er	91:5:3491:3515	1375208	0	True				
ANR	1375476	AssignmentExpression	EG ( error_reporting ) = er		1375208	0		=			
ANR	1375477	CallExpression	EG ( error_reporting )		1375208	0					
ANR	1375478	Callee	EG		1375208	0					
ANR	1375479	Identifier	EG		1375208	0					
ANR	1375480	ArgumentList	error_reporting		1375208	1					
ANR	1375481	Argument	error_reporting		1375208	0					
ANR	1375482	Identifier	error_reporting		1375208	0					
ANR	1375483	Identifier	er		1375208	1					
ANR	1375484	BreakStatement	break ;	92:5:3522:3527	1375208	1	True				
ANR	1375485	ExpressionStatement	EG ( error_reporting ) = er	94:4:3539:3563	1375208	8	True				
ANR	1375486	AssignmentExpression	EG ( error_reporting ) = er		1375208	0		=			
ANR	1375487	CallExpression	EG ( error_reporting )		1375208	0					
ANR	1375488	Callee	EG		1375208	0					
ANR	1375489	Identifier	EG		1375208	0					
ANR	1375490	ArgumentList	error_reporting		1375208	1					
ANR	1375491	Argument	error_reporting		1375208	0					
ANR	1375492	Identifier	error_reporting		1375208	0					
ANR	1375493	Identifier	er		1375208	1					
ANR	1375494	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result ) )"		1375208	9					
ANR	1375495	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"	96:8:3574:3651	1375208	0	True				
ANR	1375496	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"		1375208	0					
ANR	1375497	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1375498	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1375499	ArgumentList	op_array		1375208	1					
ANR	1375500	Argument	op_array		1375208	0					
ANR	1375501	Identifier	op_array		1375208	0					
ANR	1375502	Argument	opline + 1		1375208	1					
ANR	1375503	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1375504	Identifier	opline		1375208	0					
ANR	1375505	PrimaryExpression	1		1375208	1					
ANR	1375506	Argument	IS_TMP_VAR		1375208	2					
ANR	1375507	Identifier	IS_TMP_VAR		1375208	0					
ANR	1375508	Argument	tv		1375208	3					
ANR	1375509	Identifier	tv		1375208	0					
ANR	1375510	Argument	& result		1375208	4					
ANR	1375511	UnaryOperationExpression	& result		1375208	0					
ANR	1375512	UnaryOperator	&		1375208	0					
ANR	1375513	Identifier	result		1375208	1					
ANR	1375514	CompoundStatement		56:88:1658:1658	1375208	1					
ANR	1375515	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	97:5:3661:3700	1375208	0	True				
ANR	1375516	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1375517	Callee	literal_dtor		1375208	0					
ANR	1375518	Identifier	literal_dtor		1375208	0					
ANR	1375519	ArgumentList	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375520	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375521	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375522	UnaryOperator	&		1375208	0					
ANR	1375523	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375524	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1375525	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1375526	ArgumentList	opline		1375208	1					
ANR	1375527	Argument	opline		1375208	0					
ANR	1375528	Identifier	opline		1375208	0					
ANR	1375529	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	98:5:3707:3746	1375208	1	True				
ANR	1375530	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1375531	Callee	literal_dtor		1375208	0					
ANR	1375532	Identifier	literal_dtor		1375208	0					
ANR	1375533	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1375534	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1375535	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1375536	UnaryOperator	&		1375208	0					
ANR	1375537	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1375538	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1375539	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1375540	ArgumentList	opline		1375208	1					
ANR	1375541	Argument	opline		1375208	0					
ANR	1375542	Identifier	opline		1375208	0					
ANR	1375543	ExpressionStatement	MAKE_NOP ( opline )	99:5:3753:3769	1375208	2	True				
ANR	1375544	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1375545	Callee	MAKE_NOP		1375208	0					
ANR	1375546	Identifier	MAKE_NOP		1375208	0					
ANR	1375547	ArgumentList	opline		1375208	1					
ANR	1375548	Argument	opline		1375208	0					
ANR	1375549	Identifier	opline		1375208	0					
ANR	1375550	BreakStatement	break ;	102:3:3785:3790	1375208	22	True				
ANR	1375551	Label	case ZEND_CAST :	104:2:3795:3809	1375208	23	True				
ANR	1375552	Identifier	ZEND_CAST		1375208	0					
ANR	1375553	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE )		1375208	24					
ANR	1375554	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE	105:7:3818:3980	1375208	0	True				
ANR	1375555	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE		1375208	0		&&			
ANR	1375556	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1375557	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1375558	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1375559	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1375560	ArgumentList	opline		1375208	1					
ANR	1375561	Argument	opline		1375208	0					
ANR	1375562	Identifier	opline		1375208	0					
ANR	1375563	Identifier	IS_CONST		1375208	1					
ANR	1375564	AndExpression	opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE		1375208	1		&&			
ANR	1375565	EqualityExpression	opline -> extended_value != IS_ARRAY		1375208	0		!=			
ANR	1375566	PtrMemberAccess	opline -> extended_value		1375208	0					
ANR	1375567	Identifier	opline		1375208	0					
ANR	1375568	Identifier	extended_value		1375208	1					
ANR	1375569	Identifier	IS_ARRAY		1375208	1					
ANR	1375570	AndExpression	opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE		1375208	1		&&			
ANR	1375571	EqualityExpression	opline -> extended_value != IS_OBJECT		1375208	0		!=			
ANR	1375572	PtrMemberAccess	opline -> extended_value		1375208	0					
ANR	1375573	Identifier	opline		1375208	0					
ANR	1375574	Identifier	extended_value		1375208	1					
ANR	1375575	Identifier	IS_OBJECT		1375208	1					
ANR	1375576	EqualityExpression	opline -> extended_value != IS_RESOURCE		1375208	1		!=			
ANR	1375577	PtrMemberAccess	opline -> extended_value		1375208	0					
ANR	1375578	Identifier	opline		1375208	0					
ANR	1375579	Identifier	extended_value		1375208	1					
ANR	1375580	Identifier	IS_RESOURCE		1375208	1					
ANR	1375581	CompoundStatement		72:4:2140:2148	1375208	1					
ANR	1375582	IdentifierDeclStatement	zend_uchar type = opline -> result_type ;	110:4:4024:4061	1375208	0	True				
ANR	1375583	IdentifierDecl	type = opline -> result_type		1375208	0					
ANR	1375584	IdentifierDeclType	zend_uchar		1375208	0					
ANR	1375585	Identifier	type		1375208	1					
ANR	1375586	AssignmentExpression	type = opline -> result_type		1375208	2		=			
ANR	1375587	Identifier	type		1375208	0					
ANR	1375588	PtrMemberAccess	opline -> result_type		1375208	1					
ANR	1375589	Identifier	opline		1375208	0					
ANR	1375590	Identifier	result_type		1375208	1					
ANR	1375591	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	111:4:4067:4104	1375208	1	True				
ANR	1375592	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1375593	IdentifierDeclType	uint32_t		1375208	0					
ANR	1375594	Identifier	tv		1375208	1					
ANR	1375595	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		1375208	2		=			
ANR	1375596	Identifier	tv		1375208	0					
ANR	1375597	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	1					
ANR	1375598	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1375599	Callee	ZEND_RESULT		1375208	0					
ANR	1375600	Identifier	ZEND_RESULT		1375208	0					
ANR	1375601	ArgumentList	opline		1375208	1					
ANR	1375602	Argument	opline		1375208	0					
ANR	1375603	Identifier	opline		1375208	0					
ANR	1375604	Identifier	var		1375208	1					
ANR	1375605	IdentifierDeclStatement	zval res ;	112:4:4136:4144	1375208	2	True				
ANR	1375606	IdentifierDecl	res		1375208	0					
ANR	1375607	IdentifierDeclType	zval		1375208	0					
ANR	1375608	Identifier	res		1375208	1					
ANR	1375609	ExpressionStatement	res = ZEND_OP1_LITERAL ( opline )	113:4:4150:4180	1375208	3	True				
ANR	1375610	AssignmentExpression	res = ZEND_OP1_LITERAL ( opline )		1375208	0		=			
ANR	1375611	Identifier	res		1375208	0					
ANR	1375612	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375613	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1375614	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1375615	ArgumentList	opline		1375208	1					
ANR	1375616	Argument	opline		1375208	0					
ANR	1375617	Identifier	opline		1375208	0					
ANR	1375618	ExpressionStatement	zval_copy_ctor ( & res )	114:4:4186:4206	1375208	4	True				
ANR	1375619	CallExpression	zval_copy_ctor ( & res )		1375208	0					
ANR	1375620	Callee	zval_copy_ctor		1375208	0					
ANR	1375621	Identifier	zval_copy_ctor		1375208	0					
ANR	1375622	ArgumentList	& res		1375208	1					
ANR	1375623	Argument	& res		1375208	0					
ANR	1375624	UnaryOperationExpression	& res		1375208	0					
ANR	1375625	UnaryOperator	&		1375208	0					
ANR	1375626	Identifier	res		1375208	1					
ANR	1375627	SwitchStatement	switch ( opline -> extended_value )		1375208	5					
ANR	1375628	Condition	opline -> extended_value	115:12:4220:4241	1375208	0	True				
ANR	1375629	PtrMemberAccess	opline -> extended_value		1375208	0					
ANR	1375630	Identifier	opline		1375208	0					
ANR	1375631	Identifier	extended_value		1375208	1					
ANR	1375632	CompoundStatement		75:36:2248:2248	1375208	1					
ANR	1375633	Label	case IS_NULL :	116:5:4251:4263	1375208	0	True				
ANR	1375634	Identifier	IS_NULL		1375208	0					
ANR	1375635	ExpressionStatement	convert_to_null ( & res )	117:6:4271:4292	1375208	1	True				
ANR	1375636	CallExpression	convert_to_null ( & res )		1375208	0					
ANR	1375637	Callee	convert_to_null		1375208	0					
ANR	1375638	Identifier	convert_to_null		1375208	0					
ANR	1375639	ArgumentList	& res		1375208	1					
ANR	1375640	Argument	& res		1375208	0					
ANR	1375641	UnaryOperationExpression	& res		1375208	0					
ANR	1375642	UnaryOperator	&		1375208	0					
ANR	1375643	Identifier	res		1375208	1					
ANR	1375644	BreakStatement	break ;	118:6:4300:4305	1375208	2	True				
ANR	1375645	Label	case _IS_BOOL :	119:5:4312:4325	1375208	3	True				
ANR	1375646	Identifier	_IS_BOOL		1375208	0					
ANR	1375647	ExpressionStatement	convert_to_boolean ( & res )	120:6:4333:4357	1375208	4	True				
ANR	1375648	CallExpression	convert_to_boolean ( & res )		1375208	0					
ANR	1375649	Callee	convert_to_boolean		1375208	0					
ANR	1375650	Identifier	convert_to_boolean		1375208	0					
ANR	1375651	ArgumentList	& res		1375208	1					
ANR	1375652	Argument	& res		1375208	0					
ANR	1375653	UnaryOperationExpression	& res		1375208	0					
ANR	1375654	UnaryOperator	&		1375208	0					
ANR	1375655	Identifier	res		1375208	1					
ANR	1375656	BreakStatement	break ;	121:6:4365:4370	1375208	5	True				
ANR	1375657	Label	case IS_LONG :	122:5:4377:4389	1375208	6	True				
ANR	1375658	Identifier	IS_LONG		1375208	0					
ANR	1375659	ExpressionStatement	convert_to_long ( & res )	123:6:4397:4418	1375208	7	True				
ANR	1375660	CallExpression	convert_to_long ( & res )		1375208	0					
ANR	1375661	Callee	convert_to_long		1375208	0					
ANR	1375662	Identifier	convert_to_long		1375208	0					
ANR	1375663	ArgumentList	& res		1375208	1					
ANR	1375664	Argument	& res		1375208	0					
ANR	1375665	UnaryOperationExpression	& res		1375208	0					
ANR	1375666	UnaryOperator	&		1375208	0					
ANR	1375667	Identifier	res		1375208	1					
ANR	1375668	BreakStatement	break ;	124:6:4426:4431	1375208	8	True				
ANR	1375669	Label	case IS_DOUBLE :	125:5:4438:4452	1375208	9	True				
ANR	1375670	Identifier	IS_DOUBLE		1375208	0					
ANR	1375671	ExpressionStatement	convert_to_double ( & res )	126:6:4460:4483	1375208	10	True				
ANR	1375672	CallExpression	convert_to_double ( & res )		1375208	0					
ANR	1375673	Callee	convert_to_double		1375208	0					
ANR	1375674	Identifier	convert_to_double		1375208	0					
ANR	1375675	ArgumentList	& res		1375208	1					
ANR	1375676	Argument	& res		1375208	0					
ANR	1375677	UnaryOperationExpression	& res		1375208	0					
ANR	1375678	UnaryOperator	&		1375208	0					
ANR	1375679	Identifier	res		1375208	1					
ANR	1375680	BreakStatement	break ;	127:6:4491:4496	1375208	11	True				
ANR	1375681	Label	case IS_STRING :	128:5:4503:4517	1375208	12	True				
ANR	1375682	Identifier	IS_STRING		1375208	0					
ANR	1375683	ExpressionStatement	convert_to_string ( & res )	129:6:4525:4548	1375208	13	True				
ANR	1375684	CallExpression	convert_to_string ( & res )		1375208	0					
ANR	1375685	Callee	convert_to_string		1375208	0					
ANR	1375686	Identifier	convert_to_string		1375208	0					
ANR	1375687	ArgumentList	& res		1375208	1					
ANR	1375688	Argument	& res		1375208	0					
ANR	1375689	UnaryOperationExpression	& res		1375208	0					
ANR	1375690	UnaryOperator	&		1375208	0					
ANR	1375691	Identifier	res		1375208	1					
ANR	1375692	BreakStatement	break ;	130:6:4556:4561	1375208	14	True				
ANR	1375693	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , type , tv , & res ) )"		1375208	6					
ANR	1375694	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , type , tv , & res )"	133:8:4578:4646	1375208	0	True				
ANR	1375695	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , type , tv , & res )"		1375208	0					
ANR	1375696	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1375697	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1375698	ArgumentList	op_array		1375208	1					
ANR	1375699	Argument	op_array		1375208	0					
ANR	1375700	Identifier	op_array		1375208	0					
ANR	1375701	Argument	opline + 1		1375208	1					
ANR	1375702	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1375703	Identifier	opline		1375208	0					
ANR	1375704	PrimaryExpression	1		1375208	1					
ANR	1375705	Argument	type		1375208	2					
ANR	1375706	Identifier	type		1375208	0					
ANR	1375707	Argument	tv		1375208	3					
ANR	1375708	Identifier	tv		1375208	0					
ANR	1375709	Argument	& res		1375208	4					
ANR	1375710	UnaryOperationExpression	& res		1375208	0					
ANR	1375711	UnaryOperator	&		1375208	0					
ANR	1375712	Identifier	res		1375208	1					
ANR	1375713	CompoundStatement		93:79:2653:2653	1375208	1					
ANR	1375714	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	134:5:4656:4695	1375208	0	True				
ANR	1375715	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1375716	Callee	literal_dtor		1375208	0					
ANR	1375717	Identifier	literal_dtor		1375208	0					
ANR	1375718	ArgumentList	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375719	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375720	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375721	UnaryOperator	&		1375208	0					
ANR	1375722	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375723	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1375724	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1375725	ArgumentList	opline		1375208	1					
ANR	1375726	Argument	opline		1375208	0					
ANR	1375727	Identifier	opline		1375208	0					
ANR	1375728	ExpressionStatement	MAKE_NOP ( opline )	135:5:4702:4718	1375208	1	True				
ANR	1375729	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1375730	Callee	MAKE_NOP		1375208	0					
ANR	1375731	Identifier	MAKE_NOP		1375208	0					
ANR	1375732	ArgumentList	opline		1375208	1					
ANR	1375733	Argument	opline		1375208	0					
ANR	1375734	Identifier	opline		1375208	0					
ANR	1375735	ElseStatement	else		1375208	0					
ANR	1375736	IfStatement	if ( opline -> extended_value == _IS_BOOL )		1375208	0					
ANR	1375737	Condition	opline -> extended_value == _IS_BOOL	137:14:4740:4773	1375208	0	True				
ANR	1375738	EqualityExpression	opline -> extended_value == _IS_BOOL		1375208	0		==			
ANR	1375739	PtrMemberAccess	opline -> extended_value		1375208	0					
ANR	1375740	Identifier	opline		1375208	0					
ANR	1375741	Identifier	extended_value		1375208	1					
ANR	1375742	Identifier	_IS_BOOL		1375208	1					
ANR	1375743	CompoundStatement		97:50:2780:2780	1375208	1					
ANR	1375744	ExpressionStatement	opline -> opcode = ZEND_BOOL	139:4:4828:4854	1375208	0	True				
ANR	1375745	AssignmentExpression	opline -> opcode = ZEND_BOOL		1375208	0		=			
ANR	1375746	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375747	Identifier	opline		1375208	0					
ANR	1375748	Identifier	opcode		1375208	1					
ANR	1375749	Identifier	ZEND_BOOL		1375208	1					
ANR	1375750	ExpressionStatement	opline -> extended_value = 0	140:4:4860:4886	1375208	1	True				
ANR	1375751	AssignmentExpression	opline -> extended_value = 0		1375208	0		=			
ANR	1375752	PtrMemberAccess	opline -> extended_value		1375208	0					
ANR	1375753	Identifier	opline		1375208	0					
ANR	1375754	Identifier	extended_value		1375208	1					
ANR	1375755	PrimaryExpression	0		1375208	1					
ANR	1375756	BreakStatement	break ;	142:3:4896:4901	1375208	25	True				
ANR	1375757	Label	case ZEND_BW_NOT :	144:2:4906:4922	1375208	26	True				
ANR	1375758	Identifier	ZEND_BW_NOT		1375208	0					
ANR	1375759	Label	case ZEND_BOOL_NOT :	145:2:4926:4944	1375208	27	True				
ANR	1375760	Identifier	ZEND_BOOL_NOT		1375208	0					
ANR	1375761	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1375208	28					
ANR	1375762	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	146:7:4953:4985	1375208	0	True				
ANR	1375763	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1375764	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1375765	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1375766	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1375767	ArgumentList	opline		1375208	1					
ANR	1375768	Argument	opline		1375208	0					
ANR	1375769	Identifier	opline		1375208	0					
ANR	1375770	Identifier	IS_CONST		1375208	1					
ANR	1375771	CompoundStatement		111:4:3189:3195	1375208	1					
ANR	1375772	IdentifierDeclStatement	unary_op_type unary_op = get_unary_op ( opline -> opcode ) ;	148:4:5040:5093	1375208	0	True				
ANR	1375773	IdentifierDecl	unary_op = get_unary_op ( opline -> opcode )		1375208	0					
ANR	1375774	IdentifierDeclType	unary_op_type		1375208	0					
ANR	1375775	Identifier	unary_op		1375208	1					
ANR	1375776	AssignmentExpression	unary_op = get_unary_op ( opline -> opcode )		1375208	2		=			
ANR	1375777	Identifier	unary_op		1375208	0					
ANR	1375778	CallExpression	get_unary_op ( opline -> opcode )		1375208	1					
ANR	1375779	Callee	get_unary_op		1375208	0					
ANR	1375780	Identifier	get_unary_op		1375208	0					
ANR	1375781	ArgumentList	opline -> opcode		1375208	1					
ANR	1375782	Argument	opline -> opcode		1375208	0					
ANR	1375783	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375784	Identifier	opline		1375208	0					
ANR	1375785	Identifier	opcode		1375208	1					
ANR	1375786	IdentifierDeclStatement	zval result ;	149:4:5099:5110	1375208	1	True				
ANR	1375787	IdentifierDecl	result		1375208	0					
ANR	1375788	IdentifierDeclType	zval		1375208	0					
ANR	1375789	Identifier	result		1375208	1					
ANR	1375790	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	150:4:5116:5153	1375208	2	True				
ANR	1375791	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1375792	IdentifierDeclType	uint32_t		1375208	0					
ANR	1375793	Identifier	tv		1375208	1					
ANR	1375794	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		1375208	2		=			
ANR	1375795	Identifier	tv		1375208	0					
ANR	1375796	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	1					
ANR	1375797	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1375798	Callee	ZEND_RESULT		1375208	0					
ANR	1375799	Identifier	ZEND_RESULT		1375208	0					
ANR	1375800	ArgumentList	opline		1375208	1					
ANR	1375801	Argument	opline		1375208	0					
ANR	1375802	Identifier	opline		1375208	0					
ANR	1375803	Identifier	var		1375208	1					
ANR	1375804	IdentifierDeclStatement	int er ;	151:4:5185:5191	1375208	3	True				
ANR	1375805	IdentifierDecl	er		1375208	0					
ANR	1375806	IdentifierDeclType	int		1375208	0					
ANR	1375807	Identifier	er		1375208	1					
ANR	1375808	ExpressionStatement	er = EG ( error_reporting )	153:4:5198:5222	1375208	4	True				
ANR	1375809	AssignmentExpression	er = EG ( error_reporting )		1375208	0		=			
ANR	1375810	Identifier	er		1375208	0					
ANR	1375811	CallExpression	EG ( error_reporting )		1375208	1					
ANR	1375812	Callee	EG		1375208	0					
ANR	1375813	Identifier	EG		1375208	0					
ANR	1375814	ArgumentList	error_reporting		1375208	1					
ANR	1375815	Argument	error_reporting		1375208	0					
ANR	1375816	Identifier	error_reporting		1375208	0					
ANR	1375817	ExpressionStatement	EG ( error_reporting ) = 0	154:4:5228:5251	1375208	5	True				
ANR	1375818	AssignmentExpression	EG ( error_reporting ) = 0		1375208	0		=			
ANR	1375819	CallExpression	EG ( error_reporting )		1375208	0					
ANR	1375820	Callee	EG		1375208	0					
ANR	1375821	Identifier	EG		1375208	0					
ANR	1375822	ArgumentList	error_reporting		1375208	1					
ANR	1375823	Argument	error_reporting		1375208	0					
ANR	1375824	Identifier	error_reporting		1375208	0					
ANR	1375825	PrimaryExpression	0		1375208	1					
ANR	1375826	IfStatement	"if ( unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) ) != SUCCESS )"		1375208	6					
ANR	1375827	Condition	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) ) != SUCCESS"	155:8:5261:5315	1375208	0	True				
ANR	1375828	EqualityExpression	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) ) != SUCCESS"		1375208	0		!=			
ANR	1375829	CallExpression	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) )"		1375208	0					
ANR	1375830	Callee	unary_op		1375208	0					
ANR	1375831	Identifier	unary_op		1375208	0					
ANR	1375832	ArgumentList	& result		1375208	1					
ANR	1375833	Argument	& result		1375208	0					
ANR	1375834	UnaryOperationExpression	& result		1375208	0					
ANR	1375835	UnaryOperator	&		1375208	0					
ANR	1375836	Identifier	result		1375208	1					
ANR	1375837	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375838	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375839	UnaryOperator	&		1375208	0					
ANR	1375840	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375841	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1375842	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1375843	ArgumentList	opline		1375208	1					
ANR	1375844	Argument	opline		1375208	0					
ANR	1375845	Identifier	opline		1375208	0					
ANR	1375846	Identifier	SUCCESS		1375208	1					
ANR	1375847	CompoundStatement		115:65:3322:3322	1375208	1					
ANR	1375848	ExpressionStatement	EG ( error_reporting ) = er	156:5:5325:5349	1375208	0	True				
ANR	1375849	AssignmentExpression	EG ( error_reporting ) = er		1375208	0		=			
ANR	1375850	CallExpression	EG ( error_reporting )		1375208	0					
ANR	1375851	Callee	EG		1375208	0					
ANR	1375852	Identifier	EG		1375208	0					
ANR	1375853	ArgumentList	error_reporting		1375208	1					
ANR	1375854	Argument	error_reporting		1375208	0					
ANR	1375855	Identifier	error_reporting		1375208	0					
ANR	1375856	Identifier	er		1375208	1					
ANR	1375857	BreakStatement	break ;	157:5:5356:5361	1375208	1	True				
ANR	1375858	ExpressionStatement	EG ( error_reporting ) = er	159:4:5373:5397	1375208	7	True				
ANR	1375859	AssignmentExpression	EG ( error_reporting ) = er		1375208	0		=			
ANR	1375860	CallExpression	EG ( error_reporting )		1375208	0					
ANR	1375861	Callee	EG		1375208	0					
ANR	1375862	Identifier	EG		1375208	0					
ANR	1375863	ArgumentList	error_reporting		1375208	1					
ANR	1375864	Argument	error_reporting		1375208	0					
ANR	1375865	Identifier	error_reporting		1375208	0					
ANR	1375866	Identifier	er		1375208	1					
ANR	1375867	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result ) )"		1375208	8					
ANR	1375868	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"	161:8:5408:5485	1375208	0	True				
ANR	1375869	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"		1375208	0					
ANR	1375870	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1375871	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1375872	ArgumentList	op_array		1375208	1					
ANR	1375873	Argument	op_array		1375208	0					
ANR	1375874	Identifier	op_array		1375208	0					
ANR	1375875	Argument	opline + 1		1375208	1					
ANR	1375876	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1375877	Identifier	opline		1375208	0					
ANR	1375878	PrimaryExpression	1		1375208	1					
ANR	1375879	Argument	IS_TMP_VAR		1375208	2					
ANR	1375880	Identifier	IS_TMP_VAR		1375208	0					
ANR	1375881	Argument	tv		1375208	3					
ANR	1375882	Identifier	tv		1375208	0					
ANR	1375883	Argument	& result		1375208	4					
ANR	1375884	UnaryOperationExpression	& result		1375208	0					
ANR	1375885	UnaryOperator	&		1375208	0					
ANR	1375886	Identifier	result		1375208	1					
ANR	1375887	CompoundStatement		121:88:3492:3492	1375208	1					
ANR	1375888	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	162:5:5495:5534	1375208	0	True				
ANR	1375889	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1375890	Callee	literal_dtor		1375208	0					
ANR	1375891	Identifier	literal_dtor		1375208	0					
ANR	1375892	ArgumentList	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375893	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375894	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1375895	UnaryOperator	&		1375208	0					
ANR	1375896	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1375897	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1375898	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1375899	ArgumentList	opline		1375208	1					
ANR	1375900	Argument	opline		1375208	0					
ANR	1375901	Identifier	opline		1375208	0					
ANR	1375902	ExpressionStatement	MAKE_NOP ( opline )	163:5:5541:5557	1375208	1	True				
ANR	1375903	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1375904	Callee	MAKE_NOP		1375208	0					
ANR	1375905	Identifier	MAKE_NOP		1375208	0					
ANR	1375906	ArgumentList	opline		1375208	1					
ANR	1375907	Argument	opline		1375208	0					
ANR	1375908	Identifier	opline		1375208	0					
ANR	1375909	BreakStatement	break ;	166:3:5573:5578	1375208	29	True				
ANR	1375910	Label	case ZEND_ADD_STRING :	169:2:5589:5609	1375208	30	True				
ANR	1375911	Identifier	ZEND_ADD_STRING		1375208	0					
ANR	1375912	Label	case ZEND_ADD_CHAR :	170:2:5613:5631	1375208	31	True				
ANR	1375913	Identifier	ZEND_ADD_CHAR		1375208	0					
ANR	1375914	CompoundStatement		137:4:3819:3835	1375208	32					
ANR	1375915	IdentifierDeclStatement	zend_op * next_op = opline + 1 ;	172:4:5642:5671	1375208	0	True				
ANR	1375916	IdentifierDecl	* next_op = opline + 1		1375208	0					
ANR	1375917	IdentifierDeclType	zend_op *		1375208	0					
ANR	1375918	Identifier	next_op		1375208	1					
ANR	1375919	AssignmentExpression	* next_op = opline + 1		1375208	2		=			
ANR	1375920	Identifier	next_op		1375208	0					
ANR	1375921	AdditiveExpression	opline + 1		1375208	1		+			
ANR	1375922	Identifier	opline		1375208	0					
ANR	1375923	PrimaryExpression	1		1375208	1					
ANR	1375924	IdentifierDeclStatement	int requires_conversion = ( opline -> opcode == ZEND_ADD_CHAR ? 1 : 0 ) ;	173:4:5677:5743	1375208	1	True				
ANR	1375925	IdentifierDecl	requires_conversion = ( opline -> opcode == ZEND_ADD_CHAR ? 1 : 0 )		1375208	0					
ANR	1375926	IdentifierDeclType	int		1375208	0					
ANR	1375927	Identifier	requires_conversion		1375208	1					
ANR	1375928	AssignmentExpression	requires_conversion = ( opline -> opcode == ZEND_ADD_CHAR ? 1 : 0 )		1375208	2		=			
ANR	1375929	Identifier	requires_conversion		1375208	0					
ANR	1375930	ConditionalExpression	opline -> opcode == ZEND_ADD_CHAR ? 1 : 0		1375208	1					
ANR	1375931	Condition	opline -> opcode == ZEND_ADD_CHAR		1375208	0					
ANR	1375932	EqualityExpression	opline -> opcode == ZEND_ADD_CHAR		1375208	0		==			
ANR	1375933	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1375934	Identifier	opline		1375208	0					
ANR	1375935	Identifier	opcode		1375208	1					
ANR	1375936	Identifier	ZEND_ADD_CHAR		1375208	1					
ANR	1375937	PrimaryExpression	1		1375208	1					
ANR	1375938	PrimaryExpression	0		1375208	2					
ANR	1375939	IdentifierDeclStatement	size_t final_length = 0 ;	174:4:5749:5772	1375208	2	True				
ANR	1375940	IdentifierDecl	final_length = 0		1375208	0					
ANR	1375941	IdentifierDeclType	size_t		1375208	0					
ANR	1375942	Identifier	final_length		1375208	1					
ANR	1375943	AssignmentExpression	final_length = 0		1375208	2		=			
ANR	1375944	Identifier	final_length		1375208	0					
ANR	1375945	PrimaryExpression	0		1375208	1					
ANR	1375946	IdentifierDeclStatement	zend_string * str ;	175:4:5778:5794	1375208	3	True				
ANR	1375947	IdentifierDecl	* str		1375208	0					
ANR	1375948	IdentifierDeclType	zend_string *		1375208	0					
ANR	1375949	Identifier	str		1375208	1					
ANR	1375950	IdentifierDeclStatement	char * ptr ;	176:4:5800:5809	1375208	4	True				
ANR	1375951	IdentifierDecl	* ptr		1375208	0					
ANR	1375952	IdentifierDeclType	char *		1375208	0					
ANR	1375953	Identifier	ptr		1375208	1					
ANR	1375954	IdentifierDeclStatement	zend_op * last_op ;	177:4:5815:5831	1375208	5	True				
ANR	1375955	IdentifierDecl	* last_op		1375208	0					
ANR	1375956	IdentifierDeclType	zend_op *		1375208	0					
ANR	1375957	Identifier	last_op		1375208	1					
ANR	1375958	WhileStatement	while ( next_op -> opcode == ZEND_ADD_STRING || next_op -> opcode == ZEND_ADD_CHAR )		1375208	6					
ANR	1375959	Condition	next_op -> opcode == ZEND_ADD_STRING || next_op -> opcode == ZEND_ADD_CHAR	184:11:5942:6011	1375208	0	True				
ANR	1375960	OrExpression	next_op -> opcode == ZEND_ADD_STRING || next_op -> opcode == ZEND_ADD_CHAR		1375208	0		||			
ANR	1375961	EqualityExpression	next_op -> opcode == ZEND_ADD_STRING		1375208	0		==			
ANR	1375962	PtrMemberAccess	next_op -> opcode		1375208	0					
ANR	1375963	Identifier	next_op		1375208	0					
ANR	1375964	Identifier	opcode		1375208	1					
ANR	1375965	Identifier	ZEND_ADD_STRING		1375208	1					
ANR	1375966	EqualityExpression	next_op -> opcode == ZEND_ADD_CHAR		1375208	1		==			
ANR	1375967	PtrMemberAccess	next_op -> opcode		1375208	0					
ANR	1375968	Identifier	next_op		1375208	0					
ANR	1375969	Identifier	opcode		1375208	1					
ANR	1375970	Identifier	ZEND_ADD_CHAR		1375208	1					
ANR	1375971	CompoundStatement		144:83:4018:4018	1375208	1					
ANR	1375972	IfStatement	if ( ZEND_RESULT ( opline ) . var != ZEND_RESULT ( next_op ) . var )		1375208	0					
ANR	1375973	Condition	ZEND_RESULT ( opline ) . var != ZEND_RESULT ( next_op ) . var	185:9:6025:6075	1375208	0	True				
ANR	1375974	EqualityExpression	ZEND_RESULT ( opline ) . var != ZEND_RESULT ( next_op ) . var		1375208	0		!=			
ANR	1375975	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1375976	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1375977	Callee	ZEND_RESULT		1375208	0					
ANR	1375978	Identifier	ZEND_RESULT		1375208	0					
ANR	1375979	ArgumentList	opline		1375208	1					
ANR	1375980	Argument	opline		1375208	0					
ANR	1375981	Identifier	opline		1375208	0					
ANR	1375982	Identifier	var		1375208	1					
ANR	1375983	MemberAccess	ZEND_RESULT ( next_op ) . var		1375208	1					
ANR	1375984	CallExpression	ZEND_RESULT ( next_op )		1375208	0					
ANR	1375985	Callee	ZEND_RESULT		1375208	0					
ANR	1375986	Identifier	ZEND_RESULT		1375208	0					
ANR	1375987	ArgumentList	next_op		1375208	1					
ANR	1375988	Argument	next_op		1375208	0					
ANR	1375989	Identifier	next_op		1375208	0					
ANR	1375990	Identifier	var		1375208	1					
ANR	1375991	CompoundStatement		145:62:4082:4082	1375208	1					
ANR	1375992	BreakStatement	break ;	186:6:6086:6091	1375208	0	True				
ANR	1375993	IfStatement	if ( next_op -> opcode == ZEND_ADD_CHAR )		1375208	1					
ANR	1375994	Condition	next_op -> opcode == ZEND_ADD_CHAR	188:9:6109:6140	1375208	0	True				
ANR	1375995	EqualityExpression	next_op -> opcode == ZEND_ADD_CHAR		1375208	0		==			
ANR	1375996	PtrMemberAccess	next_op -> opcode		1375208	0					
ANR	1375997	Identifier	next_op		1375208	0					
ANR	1375998	Identifier	opcode		1375208	1					
ANR	1375999	Identifier	ZEND_ADD_CHAR		1375208	1					
ANR	1376000	CompoundStatement		148:43:4147:4147	1375208	1					
ANR	1376001	ExpressionStatement	final_length += 1	189:6:6151:6168	1375208	0	True				
ANR	1376002	AssignmentExpression	final_length += 1		1375208	0		+=			
ANR	1376003	Identifier	final_length		1375208	0					
ANR	1376004	PrimaryExpression	1		1375208	1					
ANR	1376005	ElseStatement	else		1375208	0					
ANR	1376006	CompoundStatement		150:12:4186:4186	1375208	0					
ANR	1376007	ExpressionStatement	final_length += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )	191:6:6212:6263	1375208	0	True				
ANR	1376008	AssignmentExpression	final_length += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		1375208	0		+=			
ANR	1376009	Identifier	final_length		1375208	0					
ANR	1376010	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		1375208	1					
ANR	1376011	Callee	Z_STRLEN		1375208	0					
ANR	1376012	Identifier	Z_STRLEN		1375208	0					
ANR	1376013	ArgumentList	ZEND_OP2_LITERAL ( next_op )		1375208	1					
ANR	1376014	Argument	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376015	CallExpression	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376016	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376017	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376018	ArgumentList	next_op		1375208	1					
ANR	1376019	Argument	next_op		1375208	0					
ANR	1376020	Identifier	next_op		1375208	0					
ANR	1376021	ExpressionStatement	next_op ++	193:5:6277:6286	1375208	2	True				
ANR	1376022	PostIncDecOperationExpression	next_op ++		1375208	0					
ANR	1376023	Identifier	next_op		1375208	0					
ANR	1376024	IncDec	++		1375208	1					
ANR	1376025	IfStatement	if ( final_length == 0 )		1375208	7					
ANR	1376026	Condition	final_length == 0	195:8:6302:6318	1375208	0	True				
ANR	1376027	EqualityExpression	final_length == 0		1375208	0		==			
ANR	1376028	Identifier	final_length		1375208	0					
ANR	1376029	PrimaryExpression	0		1375208	1					
ANR	1376030	CompoundStatement		155:27:4325:4325	1375208	1					
ANR	1376031	BreakStatement	break ;	196:5:6328:6333	1375208	0	True				
ANR	1376032	ExpressionStatement	last_op = next_op	198:4:6345:6362	1375208	8	True				
ANR	1376033	AssignmentExpression	last_op = next_op		1375208	0		=			
ANR	1376034	Identifier	last_op		1375208	0					
ANR	1376035	Identifier	next_op		1375208	1					
ANR	1376036	ExpressionStatement	final_length += ( requires_conversion ? 1 : Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )	199:4:6368:6445	1375208	9	True				
ANR	1376037	AssignmentExpression	final_length += ( requires_conversion ? 1 : Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )		1375208	0		+=			
ANR	1376038	Identifier	final_length		1375208	0					
ANR	1376039	ConditionalExpression	requires_conversion ? 1 : Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376040	Condition	requires_conversion		1375208	0					
ANR	1376041	Identifier	requires_conversion		1375208	0					
ANR	1376042	PrimaryExpression	1		1375208	1					
ANR	1376043	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		1375208	2					
ANR	1376044	Callee	Z_STRLEN		1375208	0					
ANR	1376045	Identifier	Z_STRLEN		1375208	0					
ANR	1376046	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376047	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376048	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376049	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376050	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376051	ArgumentList	opline		1375208	1					
ANR	1376052	Argument	opline		1375208	0					
ANR	1376053	Identifier	opline		1375208	0					
ANR	1376054	ExpressionStatement	"str = zend_string_alloc ( final_length , 0 )"	200:4:6451:6491	1375208	10	True				
ANR	1376055	AssignmentExpression	"str = zend_string_alloc ( final_length , 0 )"		1375208	0		=			
ANR	1376056	Identifier	str		1375208	0					
ANR	1376057	CallExpression	"zend_string_alloc ( final_length , 0 )"		1375208	1					
ANR	1376058	Callee	zend_string_alloc		1375208	0					
ANR	1376059	Identifier	zend_string_alloc		1375208	0					
ANR	1376060	ArgumentList	final_length		1375208	1					
ANR	1376061	Argument	final_length		1375208	0					
ANR	1376062	Identifier	final_length		1375208	0					
ANR	1376063	Argument	0		1375208	1					
ANR	1376064	PrimaryExpression	0		1375208	0					
ANR	1376065	ExpressionStatement	str -> len = final_length	201:4:6497:6520	1375208	11	True				
ANR	1376066	AssignmentExpression	str -> len = final_length		1375208	0		=			
ANR	1376067	PtrMemberAccess	str -> len		1375208	0					
ANR	1376068	Identifier	str		1375208	0					
ANR	1376069	Identifier	len		1375208	1					
ANR	1376070	Identifier	final_length		1375208	1					
ANR	1376071	ExpressionStatement	ptr = str -> val	202:4:6526:6540	1375208	12	True				
ANR	1376072	AssignmentExpression	ptr = str -> val		1375208	0		=			
ANR	1376073	Identifier	ptr		1375208	0					
ANR	1376074	PtrMemberAccess	str -> val		1375208	1					
ANR	1376075	Identifier	str		1375208	0					
ANR	1376076	Identifier	val		1375208	1					
ANR	1376077	ExpressionStatement	ptr [ final_length ] = '\\0'	203:4:6546:6570	1375208	13	True				
ANR	1376078	AssignmentExpression	ptr [ final_length ] = '\\0'		1375208	0		=			
ANR	1376079	ArrayIndexing	ptr [ final_length ]		1375208	0					
ANR	1376080	Identifier	ptr		1375208	0					
ANR	1376081	Identifier	final_length		1375208	1					
ANR	1376082	PrimaryExpression	'\\0'		1375208	1					
ANR	1376083	IfStatement	if ( requires_conversion )		1375208	14					
ANR	1376084	Condition	requires_conversion	204:8:6580:6598	1375208	0	True				
ANR	1376085	Identifier	requires_conversion		1375208	0					
ANR	1376086	CompoundStatement		165:5:4632:4683	1375208	1					
ANR	1376087	IdentifierDeclStatement	char chval = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) ) ;	205:5:6628:6679	1375208	0	True				
ANR	1376088	IdentifierDecl	chval = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376089	IdentifierDeclType	char		1375208	0					
ANR	1376090	Identifier	chval		1375208	1					
ANR	1376091	AssignmentExpression	chval = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	2		=			
ANR	1376092	Identifier	chval		1375208	0					
ANR	1376093	CastExpression	( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376094	CastTarget	char		1375208	0					
ANR	1376095	CallExpression	Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376096	Callee	Z_LVAL		1375208	0					
ANR	1376097	Identifier	Z_LVAL		1375208	0					
ANR	1376098	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376099	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376100	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376101	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376102	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376103	ArgumentList	opline		1375208	1					
ANR	1376104	Argument	opline		1375208	0					
ANR	1376105	Identifier	opline		1375208	0					
ANR	1376106	ExpressionStatement	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"	207:5:6687:6731	1375208	1	True				
ANR	1376107	CallExpression	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"		1375208	0					
ANR	1376108	Callee	ZVAL_NEW_STR		1375208	0					
ANR	1376109	Identifier	ZVAL_NEW_STR		1375208	0					
ANR	1376110	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376111	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376112	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376113	UnaryOperator	&		1375208	0					
ANR	1376114	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376115	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376116	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376117	ArgumentList	opline		1375208	1					
ANR	1376118	Argument	opline		1375208	0					
ANR	1376119	Identifier	opline		1375208	0					
ANR	1376120	Argument	str		1375208	1					
ANR	1376121	Identifier	str		1375208	0					
ANR	1376122	ExpressionStatement	ptr [ 0 ] = chval	208:5:6738:6752	1375208	2	True				
ANR	1376123	AssignmentExpression	ptr [ 0 ] = chval		1375208	0		=			
ANR	1376124	ArrayIndexing	ptr [ 0 ]		1375208	0					
ANR	1376125	Identifier	ptr		1375208	0					
ANR	1376126	PrimaryExpression	0		1375208	1					
ANR	1376127	Identifier	chval		1375208	1					
ANR	1376128	ExpressionStatement	opline -> opcode = ZEND_ADD_STRING	209:5:6759:6791	1375208	3	True				
ANR	1376129	AssignmentExpression	opline -> opcode = ZEND_ADD_STRING		1375208	0		=			
ANR	1376130	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1376131	Identifier	opline		1375208	0					
ANR	1376132	Identifier	opcode		1375208	1					
ANR	1376133	Identifier	ZEND_ADD_STRING		1375208	1					
ANR	1376134	ExpressionStatement	ptr ++	210:5:6798:6803	1375208	4	True				
ANR	1376135	PostIncDecOperationExpression	ptr ++		1375208	0					
ANR	1376136	Identifier	ptr		1375208	0					
ANR	1376137	IncDec	++		1375208	1					
ANR	1376138	ElseStatement	else		1375208	0					
ANR	1376139	CompoundStatement		171:11:4820:4820	1375208	0					
ANR	1376140	ExpressionStatement	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )"	212:5:6845:6928	1375208	0	True				
ANR	1376141	CallExpression	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )"		1375208	0					
ANR	1376142	Callee	memcpy		1375208	0					
ANR	1376143	Identifier	memcpy		1375208	0					
ANR	1376144	ArgumentList	ptr		1375208	1					
ANR	1376145	Argument	ptr		1375208	0					
ANR	1376146	Identifier	ptr		1375208	0					
ANR	1376147	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376148	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376149	Callee	Z_STRVAL		1375208	0					
ANR	1376150	Identifier	Z_STRVAL		1375208	0					
ANR	1376151	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376152	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376153	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376154	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376155	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376156	ArgumentList	opline		1375208	1					
ANR	1376157	Argument	opline		1375208	0					
ANR	1376158	Identifier	opline		1375208	0					
ANR	1376159	Argument	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		1375208	2					
ANR	1376160	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376161	Callee	Z_STRLEN		1375208	0					
ANR	1376162	Identifier	Z_STRLEN		1375208	0					
ANR	1376163	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376164	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376165	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376166	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376167	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376168	ArgumentList	opline		1375208	1					
ANR	1376169	Argument	opline		1375208	0					
ANR	1376170	Identifier	opline		1375208	0					
ANR	1376171	ExpressionStatement	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )	213:5:6935:6976	1375208	1	True				
ANR	1376172	AssignmentExpression	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		1375208	0		+=			
ANR	1376173	Identifier	ptr		1375208	0					
ANR	1376174	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376175	Callee	Z_STRLEN		1375208	0					
ANR	1376176	Identifier	Z_STRLEN		1375208	0					
ANR	1376177	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376178	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376179	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376180	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376181	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376182	ArgumentList	opline		1375208	1					
ANR	1376183	Argument	opline		1375208	0					
ANR	1376184	Identifier	opline		1375208	0					
ANR	1376185	ExpressionStatement	zend_string_release ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )	214:5:6983:7035	1375208	2	True				
ANR	1376186	CallExpression	zend_string_release ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )		1375208	0					
ANR	1376187	Callee	zend_string_release		1375208	0					
ANR	1376188	Identifier	zend_string_release		1375208	0					
ANR	1376189	ArgumentList	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376190	Argument	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376191	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376192	Callee	Z_STR		1375208	0					
ANR	1376193	Identifier	Z_STR		1375208	0					
ANR	1376194	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376195	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376196	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376197	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376198	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376199	ArgumentList	opline		1375208	1					
ANR	1376200	Argument	opline		1375208	0					
ANR	1376201	Identifier	opline		1375208	0					
ANR	1376202	ExpressionStatement	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"	215:5:7042:7086	1375208	3	True				
ANR	1376203	CallExpression	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"		1375208	0					
ANR	1376204	Callee	ZVAL_NEW_STR		1375208	0					
ANR	1376205	Identifier	ZVAL_NEW_STR		1375208	0					
ANR	1376206	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376207	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376208	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376209	UnaryOperator	&		1375208	0					
ANR	1376210	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376211	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376212	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376213	ArgumentList	opline		1375208	1					
ANR	1376214	Argument	opline		1375208	0					
ANR	1376215	Identifier	opline		1375208	0					
ANR	1376216	Argument	str		1375208	1					
ANR	1376217	Identifier	str		1375208	0					
ANR	1376218	ExpressionStatement	next_op = opline + 1	217:4:7098:7118	1375208	15	True				
ANR	1376219	AssignmentExpression	next_op = opline + 1		1375208	0		=			
ANR	1376220	Identifier	next_op		1375208	0					
ANR	1376221	AdditiveExpression	opline + 1		1375208	1		+			
ANR	1376222	Identifier	opline		1375208	0					
ANR	1376223	PrimaryExpression	1		1375208	1					
ANR	1376224	WhileStatement	while ( next_op < last_op )		1375208	16					
ANR	1376225	Condition	next_op < last_op	218:11:7131:7147	1375208	0	True				
ANR	1376226	RelationalExpression	next_op < last_op		1375208	0		<			
ANR	1376227	Identifier	next_op		1375208	0					
ANR	1376228	Identifier	last_op		1375208	1					
ANR	1376229	CompoundStatement		178:30:5154:5154	1375208	1					
ANR	1376230	IfStatement	if ( next_op -> opcode == ZEND_ADD_STRING )		1375208	0					
ANR	1376231	Condition	next_op -> opcode == ZEND_ADD_STRING	219:9:7161:7194	1375208	0	True				
ANR	1376232	EqualityExpression	next_op -> opcode == ZEND_ADD_STRING		1375208	0		==			
ANR	1376233	PtrMemberAccess	next_op -> opcode		1375208	0					
ANR	1376234	Identifier	next_op		1375208	0					
ANR	1376235	Identifier	opcode		1375208	1					
ANR	1376236	Identifier	ZEND_ADD_STRING		1375208	1					
ANR	1376237	CompoundStatement		179:45:5201:5201	1375208	1					
ANR	1376238	ExpressionStatement	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) ) )"	220:6:7205:7290	1375208	0	True				
ANR	1376239	CallExpression	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) ) )"		1375208	0					
ANR	1376240	Callee	memcpy		1375208	0					
ANR	1376241	Identifier	memcpy		1375208	0					
ANR	1376242	ArgumentList	ptr		1375208	1					
ANR	1376243	Argument	ptr		1375208	0					
ANR	1376244	Identifier	ptr		1375208	0					
ANR	1376245	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) )		1375208	1					
ANR	1376246	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) )		1375208	0					
ANR	1376247	Callee	Z_STRVAL		1375208	0					
ANR	1376248	Identifier	Z_STRVAL		1375208	0					
ANR	1376249	ArgumentList	ZEND_OP2_LITERAL ( next_op )		1375208	1					
ANR	1376250	Argument	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376251	CallExpression	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376252	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376253	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376254	ArgumentList	next_op		1375208	1					
ANR	1376255	Argument	next_op		1375208	0					
ANR	1376256	Identifier	next_op		1375208	0					
ANR	1376257	Argument	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		1375208	2					
ANR	1376258	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		1375208	0					
ANR	1376259	Callee	Z_STRLEN		1375208	0					
ANR	1376260	Identifier	Z_STRLEN		1375208	0					
ANR	1376261	ArgumentList	ZEND_OP2_LITERAL ( next_op )		1375208	1					
ANR	1376262	Argument	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376263	CallExpression	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376264	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376265	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376266	ArgumentList	next_op		1375208	1					
ANR	1376267	Argument	next_op		1375208	0					
ANR	1376268	Identifier	next_op		1375208	0					
ANR	1376269	ExpressionStatement	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )	221:6:7298:7340	1375208	1	True				
ANR	1376270	AssignmentExpression	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		1375208	0		+=			
ANR	1376271	Identifier	ptr		1375208	0					
ANR	1376272	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		1375208	1					
ANR	1376273	Callee	Z_STRLEN		1375208	0					
ANR	1376274	Identifier	Z_STRLEN		1375208	0					
ANR	1376275	ArgumentList	ZEND_OP2_LITERAL ( next_op )		1375208	1					
ANR	1376276	Argument	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376277	CallExpression	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376278	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376279	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376280	ArgumentList	next_op		1375208	1					
ANR	1376281	Argument	next_op		1375208	0					
ANR	1376282	Identifier	next_op		1375208	0					
ANR	1376283	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( next_op ) )	222:6:7348:7388	1375208	2	True				
ANR	1376284	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( next_op ) )		1375208	0					
ANR	1376285	Callee	literal_dtor		1375208	0					
ANR	1376286	Identifier	literal_dtor		1375208	0					
ANR	1376287	ArgumentList	& ZEND_OP2_LITERAL ( next_op )		1375208	1					
ANR	1376288	Argument	& ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376289	UnaryOperationExpression	& ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376290	UnaryOperator	&		1375208	0					
ANR	1376291	CallExpression	ZEND_OP2_LITERAL ( next_op )		1375208	1					
ANR	1376292	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376293	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376294	ArgumentList	next_op		1375208	1					
ANR	1376295	Argument	next_op		1375208	0					
ANR	1376296	Identifier	next_op		1375208	0					
ANR	1376297	ElseStatement	else		1375208	0					
ANR	1376298	CompoundStatement		183:12:5406:5406	1375208	0					
ANR	1376299	ExpressionStatement	* ptr = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )	224:6:7430:7476	1375208	0	True				
ANR	1376300	AssignmentExpression	* ptr = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )		1375208	0		=			
ANR	1376301	UnaryOperationExpression	* ptr		1375208	0					
ANR	1376302	UnaryOperator	*		1375208	0					
ANR	1376303	Identifier	ptr		1375208	1					
ANR	1376304	CastExpression	( char ) Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )		1375208	1					
ANR	1376305	CastTarget	char		1375208	0					
ANR	1376306	CallExpression	Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )		1375208	1					
ANR	1376307	Callee	Z_LVAL		1375208	0					
ANR	1376308	Identifier	Z_LVAL		1375208	0					
ANR	1376309	ArgumentList	ZEND_OP2_LITERAL ( next_op )		1375208	1					
ANR	1376310	Argument	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376311	CallExpression	ZEND_OP2_LITERAL ( next_op )		1375208	0					
ANR	1376312	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376313	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376314	ArgumentList	next_op		1375208	1					
ANR	1376315	Argument	next_op		1375208	0					
ANR	1376316	Identifier	next_op		1375208	0					
ANR	1376317	ExpressionStatement	ptr ++	225:6:7484:7489	1375208	1	True				
ANR	1376318	PostIncDecOperationExpression	ptr ++		1375208	0					
ANR	1376319	Identifier	ptr		1375208	0					
ANR	1376320	IncDec	++		1375208	1					
ANR	1376321	ExpressionStatement	MAKE_NOP ( next_op )	227:5:7503:7520	1375208	1	True				
ANR	1376322	CallExpression	MAKE_NOP ( next_op )		1375208	0					
ANR	1376323	Callee	MAKE_NOP		1375208	0					
ANR	1376324	Identifier	MAKE_NOP		1375208	0					
ANR	1376325	ArgumentList	next_op		1375208	1					
ANR	1376326	Argument	next_op		1375208	0					
ANR	1376327	Identifier	next_op		1375208	0					
ANR	1376328	ExpressionStatement	next_op ++	228:5:7527:7536	1375208	2	True				
ANR	1376329	PostIncDecOperationExpression	next_op ++		1375208	0					
ANR	1376330	Identifier	next_op		1375208	0					
ANR	1376331	IncDec	++		1375208	1					
ANR	1376332	IfStatement	if ( ! ( ( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL ) )		1375208	17					
ANR	1376333	Condition	! ( ( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL )	230:8:7552:7621	1375208	0	True				
ANR	1376334	UnaryOperationExpression	! ( ( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL )		1375208	0					
ANR	1376335	UnaryOperator	!		1375208	0					
ANR	1376336	BitAndExpression	( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL		1375208	1		&			
ANR	1376337	InclusiveOrExpression	ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10		1375208	0		|			
ANR	1376338	Identifier	ZEND_OPTIMIZER_PASS_5		1375208	0					
ANR	1376339	Identifier	ZEND_OPTIMIZER_PASS_10		1375208	1					
ANR	1376340	Identifier	OPTIMIZATION_LEVEL		1375208	1					
ANR	1376341	CompoundStatement		190:80:5628:5628	1375208	1					
ANR	1376342	IfStatement	if ( last_op - opline >= 3 )		1375208	0					
ANR	1376343	Condition	last_op - opline >= 3	232:9:7694:7712	1375208	0	True				
ANR	1376344	RelationalExpression	last_op - opline >= 3		1375208	0		>=			
ANR	1376345	AdditiveExpression	last_op - opline		1375208	0		-			
ANR	1376346	Identifier	last_op		1375208	0					
ANR	1376347	Identifier	opline		1375208	1					
ANR	1376348	PrimaryExpression	3		1375208	1					
ANR	1376349	CompoundStatement		192:30:5719:5719	1375208	1					
ANR	1376350	ExpressionStatement	( opline + 1 ) -> opcode = ZEND_JMP	233:6:7776:7807	1375208	0	True				
ANR	1376351	AssignmentExpression	( opline + 1 ) -> opcode = ZEND_JMP		1375208	0		=			
ANR	1376352	PtrMemberAccess	( opline + 1 ) -> opcode		1375208	0					
ANR	1376353	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1376354	Identifier	opline		1375208	0					
ANR	1376355	PrimaryExpression	1		1375208	1					
ANR	1376356	Identifier	opcode		1375208	1					
ANR	1376357	Identifier	ZEND_JMP		1375208	1					
ANR	1376358	ExpressionStatement	ZEND_OP1 ( opline + 1 ) . opline_num = last_op - op_array -> opcodes	234:6:7815:7876	1375208	1	True				
ANR	1376359	AssignmentExpression	ZEND_OP1 ( opline + 1 ) . opline_num = last_op - op_array -> opcodes		1375208	0		=			
ANR	1376360	MemberAccess	ZEND_OP1 ( opline + 1 ) . opline_num		1375208	0					
ANR	1376361	CallExpression	ZEND_OP1 ( opline + 1 )		1375208	0					
ANR	1376362	Callee	ZEND_OP1		1375208	0					
ANR	1376363	Identifier	ZEND_OP1		1375208	0					
ANR	1376364	ArgumentList	opline + 1		1375208	1					
ANR	1376365	Argument	opline + 1		1375208	0					
ANR	1376366	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1376367	Identifier	opline		1375208	0					
ANR	1376368	PrimaryExpression	1		1375208	1					
ANR	1376369	Identifier	opline_num		1375208	1					
ANR	1376370	AdditiveExpression	last_op - op_array -> opcodes		1375208	1		-			
ANR	1376371	Identifier	last_op		1375208	0					
ANR	1376372	PtrMemberAccess	op_array -> opcodes		1375208	1					
ANR	1376373	Identifier	op_array		1375208	0					
ANR	1376374	Identifier	opcodes		1375208	1					
ANR	1376375	BreakStatement	break ;	238:3:7977:7982	1375208	33	True				
ANR	1376376	Label	case ZEND_FETCH_CONSTANT :	241:2:7994:8018	1375208	34	True				
ANR	1376377	Identifier	ZEND_FETCH_CONSTANT		1375208	0					
ANR	1376378	IfStatement	"if ( ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0 )"		1375208	35					
ANR	1376379	Condition	"ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"	242:7:8027:8361	1375208	0	True				
ANR	1376380	AndExpression	"ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		1375208	0		&&			
ANR	1376381	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED		1375208	0		==			
ANR	1376382	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1376383	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1376384	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1376385	ArgumentList	opline		1375208	1					
ANR	1376386	Argument	opline		1375208	0					
ANR	1376387	Identifier	opline		1375208	0					
ANR	1376388	Identifier	IS_UNUSED		1375208	1					
ANR	1376389	AndExpression	"ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		1375208	1		&&			
ANR	1376390	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1376391	CallExpression	ZEND_OP2_TYPE ( opline )		1375208	0					
ANR	1376392	Callee	ZEND_OP2_TYPE		1375208	0					
ANR	1376393	Identifier	ZEND_OP2_TYPE		1375208	0					
ANR	1376394	ArgumentList	opline		1375208	1					
ANR	1376395	Argument	opline		1375208	0					
ANR	1376396	Identifier	opline		1375208	0					
ANR	1376397	Identifier	IS_CONST		1375208	1					
ANR	1376398	AndExpression	"Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		1375208	1		&&			
ANR	1376399	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		1375208	0		==			
ANR	1376400	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376401	Callee	Z_TYPE		1375208	0					
ANR	1376402	Identifier	Z_TYPE		1375208	0					
ANR	1376403	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376404	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376405	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376406	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376407	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376408	ArgumentList	opline		1375208	1					
ANR	1376409	Argument	opline		1375208	0					
ANR	1376410	Identifier	opline		1375208	0					
ANR	1376411	Identifier	IS_STRING		1375208	1					
ANR	1376412	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		1375208	1		&&			
ANR	1376413	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		1375208	0		==			
ANR	1376414	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376415	Callee	Z_STRLEN		1375208	0					
ANR	1376416	Identifier	Z_STRLEN		1375208	0					
ANR	1376417	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376418	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376419	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376420	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376421	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376422	ArgumentList	opline		1375208	1					
ANR	1376423	Argument	opline		1375208	0					
ANR	1376424	Identifier	opline		1375208	0					
ANR	1376425	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		1375208	1		-			
ANR	1376426	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		1375208	0					
ANR	1376427	Sizeof	sizeof		1375208	0					
ANR	1376428	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		1375208	1					
ANR	1376429	PrimaryExpression	1		1375208	1					
ANR	1376430	EqualityExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		1375208	1		==			
ANR	1376431	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		1375208	0					
ANR	1376432	Callee	memcmp		1375208	0					
ANR	1376433	Identifier	memcmp		1375208	0					
ANR	1376434	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376435	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376436	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376437	Callee	Z_STRVAL		1375208	0					
ANR	1376438	Identifier	Z_STRVAL		1375208	0					
ANR	1376439	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376440	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376441	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376442	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376443	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376444	ArgumentList	opline		1375208	1					
ANR	1376445	Argument	opline		1375208	0					
ANR	1376446	Identifier	opline		1375208	0					
ANR	1376447	Argument	"""__COMPILER_HALT_OFFSET__"""		1375208	1					
ANR	1376448	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		1375208	0					
ANR	1376449	Argument	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		1375208	2					
ANR	1376450	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		1375208	0		-			
ANR	1376451	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		1375208	0					
ANR	1376452	Sizeof	sizeof		1375208	0					
ANR	1376453	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		1375208	1					
ANR	1376454	PrimaryExpression	1		1375208	1					
ANR	1376455	PrimaryExpression	0		1375208	1					
ANR	1376456	CompoundStatement		210:4:6539:6551	1375208	1					
ANR	1376457	IdentifierDeclStatement	zend_execute_data * orig_execute_data = EG ( current_execute_data ) ;	248:4:8425:8488	1375208	0	True				
ANR	1376458	IdentifierDecl	* orig_execute_data = EG ( current_execute_data )		1375208	0					
ANR	1376459	IdentifierDeclType	zend_execute_data *		1375208	0					
ANR	1376460	Identifier	orig_execute_data		1375208	1					
ANR	1376461	AssignmentExpression	* orig_execute_data = EG ( current_execute_data )		1375208	2		=			
ANR	1376462	Identifier	orig_execute_data		1375208	0					
ANR	1376463	CallExpression	EG ( current_execute_data )		1375208	1					
ANR	1376464	Callee	EG		1375208	0					
ANR	1376465	Identifier	EG		1375208	0					
ANR	1376466	ArgumentList	current_execute_data		1375208	1					
ANR	1376467	Argument	current_execute_data		1375208	0					
ANR	1376468	Identifier	current_execute_data		1375208	0					
ANR	1376469	IdentifierDeclStatement	zend_execute_data fake_execute_data ;	249:4:8494:8529	1375208	1	True				
ANR	1376470	IdentifierDecl	fake_execute_data		1375208	0					
ANR	1376471	IdentifierDeclType	zend_execute_data		1375208	0					
ANR	1376472	Identifier	fake_execute_data		1375208	1					
ANR	1376473	IdentifierDeclStatement	zval * offset ;	250:4:8535:8547	1375208	2	True				
ANR	1376474	IdentifierDecl	* offset		1375208	0					
ANR	1376475	IdentifierDeclType	zval *		1375208	0					
ANR	1376476	Identifier	offset		1375208	1					
ANR	1376477	ExpressionStatement	"memset ( & fake_execute_data , 0 , sizeof ( zend_execute_data ) )"	252:4:8554:8610	1375208	3	True				
ANR	1376478	CallExpression	"memset ( & fake_execute_data , 0 , sizeof ( zend_execute_data ) )"		1375208	0					
ANR	1376479	Callee	memset		1375208	0					
ANR	1376480	Identifier	memset		1375208	0					
ANR	1376481	ArgumentList	& fake_execute_data		1375208	1					
ANR	1376482	Argument	& fake_execute_data		1375208	0					
ANR	1376483	UnaryOperationExpression	& fake_execute_data		1375208	0					
ANR	1376484	UnaryOperator	&		1375208	0					
ANR	1376485	Identifier	fake_execute_data		1375208	1					
ANR	1376486	Argument	0		1375208	1					
ANR	1376487	PrimaryExpression	0		1375208	0					
ANR	1376488	Argument	sizeof ( zend_execute_data )		1375208	2					
ANR	1376489	SizeofExpression	sizeof ( zend_execute_data )		1375208	0					
ANR	1376490	Sizeof	sizeof		1375208	0					
ANR	1376491	SizeofOperand	zend_execute_data		1375208	1					
ANR	1376492	ExpressionStatement	fake_execute_data . func = ( zend_function * ) op_array	253:4:8616:8665	1375208	4	True				
ANR	1376493	AssignmentExpression	fake_execute_data . func = ( zend_function * ) op_array		1375208	0		=			
ANR	1376494	MemberAccess	fake_execute_data . func		1375208	0					
ANR	1376495	Identifier	fake_execute_data		1375208	0					
ANR	1376496	Identifier	func		1375208	1					
ANR	1376497	CastExpression	( zend_function * ) op_array		1375208	1					
ANR	1376498	CastTarget	zend_function *		1375208	0					
ANR	1376499	Identifier	op_array		1375208	1					
ANR	1376500	ExpressionStatement	EG ( current_execute_data ) = & fake_execute_data	254:4:8671:8716	1375208	5	True				
ANR	1376501	AssignmentExpression	EG ( current_execute_data ) = & fake_execute_data		1375208	0		=			
ANR	1376502	CallExpression	EG ( current_execute_data )		1375208	0					
ANR	1376503	Callee	EG		1375208	0					
ANR	1376504	Identifier	EG		1375208	0					
ANR	1376505	ArgumentList	current_execute_data		1375208	1					
ANR	1376506	Argument	current_execute_data		1375208	0					
ANR	1376507	Identifier	current_execute_data		1375208	0					
ANR	1376508	UnaryOperationExpression	& fake_execute_data		1375208	1					
ANR	1376509	UnaryOperator	&		1375208	0					
ANR	1376510	Identifier	fake_execute_data		1375208	1					
ANR	1376511	IfStatement	"if ( ( offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) != NULL )"		1375208	6					
ANR	1376512	Condition	"( offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) != NULL"	255:8:8726:8833	1375208	0	True				
ANR	1376513	EqualityExpression	"( offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) != NULL"		1375208	0		!=			
ANR	1376514	AssignmentExpression	"offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		1375208	0		=			
ANR	1376515	Identifier	offset		1375208	0					
ANR	1376516	CallExpression	"zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		1375208	1					
ANR	1376517	Callee	zend_get_constant_str		1375208	0					
ANR	1376518	Identifier	zend_get_constant_str		1375208	0					
ANR	1376519	ArgumentList	"""__COMPILER_HALT_OFFSET__"""		1375208	1					
ANR	1376520	Argument	"""__COMPILER_HALT_OFFSET__"""		1375208	0					
ANR	1376521	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		1375208	0					
ANR	1376522	Argument	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		1375208	1					
ANR	1376523	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		1375208	0		-			
ANR	1376524	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		1375208	0					
ANR	1376525	Sizeof	sizeof		1375208	0					
ANR	1376526	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		1375208	1					
ANR	1376527	PrimaryExpression	1		1375208	1					
ANR	1376528	Identifier	NULL		1375208	1					
ANR	1376529	CompoundStatement		216:5:6847:6884	1375208	1					
ANR	1376530	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	256:5:8843:8880	1375208	0	True				
ANR	1376531	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1376532	IdentifierDeclType	uint32_t		1375208	0					
ANR	1376533	Identifier	tv		1375208	1					
ANR	1376534	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		1375208	2		=			
ANR	1376535	Identifier	tv		1375208	0					
ANR	1376536	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	1					
ANR	1376537	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1376538	Callee	ZEND_RESULT		1375208	0					
ANR	1376539	Identifier	ZEND_RESULT		1375208	0					
ANR	1376540	ArgumentList	opline		1375208	1					
ANR	1376541	Argument	opline		1375208	0					
ANR	1376542	Identifier	opline		1375208	0					
ANR	1376543	Identifier	var		1375208	1					
ANR	1376544	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , offset ) )"		1375208	1					
ANR	1376545	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , offset )"	258:9:8892:8964	1375208	0	True				
ANR	1376546	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , offset )"		1375208	0					
ANR	1376547	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1376548	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1376549	ArgumentList	op_array		1375208	1					
ANR	1376550	Argument	op_array		1375208	0					
ANR	1376551	Identifier	op_array		1375208	0					
ANR	1376552	Argument	opline		1375208	1					
ANR	1376553	Identifier	opline		1375208	0					
ANR	1376554	Argument	IS_TMP_VAR		1375208	2					
ANR	1376555	Identifier	IS_TMP_VAR		1375208	0					
ANR	1376556	Argument	tv		1375208	3					
ANR	1376557	Identifier	tv		1375208	0					
ANR	1376558	Argument	offset		1375208	4					
ANR	1376559	Identifier	offset		1375208	0					
ANR	1376560	CompoundStatement		218:84:6971:6971	1375208	1					
ANR	1376561	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	259:6:8975:9014	1375208	0	True				
ANR	1376562	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376563	Callee	literal_dtor		1375208	0					
ANR	1376564	Identifier	literal_dtor		1375208	0					
ANR	1376565	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376566	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376567	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376568	UnaryOperator	&		1375208	0					
ANR	1376569	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376570	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376571	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376572	ArgumentList	opline		1375208	1					
ANR	1376573	Argument	opline		1375208	0					
ANR	1376574	Identifier	opline		1375208	0					
ANR	1376575	ExpressionStatement	MAKE_NOP ( opline )	260:6:9022:9038	1375208	1	True				
ANR	1376576	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1376577	Callee	MAKE_NOP		1375208	0					
ANR	1376578	Identifier	MAKE_NOP		1375208	0					
ANR	1376579	ArgumentList	opline		1375208	1					
ANR	1376580	Argument	opline		1375208	0					
ANR	1376581	Identifier	opline		1375208	0					
ANR	1376582	ExpressionStatement	EG ( current_execute_data ) = orig_execute_data	263:4:9057:9101	1375208	7	True				
ANR	1376583	AssignmentExpression	EG ( current_execute_data ) = orig_execute_data		1375208	0		=			
ANR	1376584	CallExpression	EG ( current_execute_data )		1375208	0					
ANR	1376585	Callee	EG		1375208	0					
ANR	1376586	Identifier	EG		1375208	0					
ANR	1376587	ArgumentList	current_execute_data		1375208	1					
ANR	1376588	Argument	current_execute_data		1375208	0					
ANR	1376589	Identifier	current_execute_data		1375208	0					
ANR	1376590	Identifier	orig_execute_data		1375208	1					
ANR	1376591	BreakStatement	break ;	264:4:9107:9112	1375208	8	True				
ANR	1376592	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING )		1375208	36					
ANR	1376593	Condition	ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING	267:7:9127:9254	1375208	0	True				
ANR	1376594	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		1375208	0		&&			
ANR	1376595	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED		1375208	0		==			
ANR	1376596	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1376597	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1376598	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1376599	ArgumentList	opline		1375208	1					
ANR	1376600	Argument	opline		1375208	0					
ANR	1376601	Identifier	opline		1375208	0					
ANR	1376602	Identifier	IS_UNUSED		1375208	1					
ANR	1376603	AndExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		1375208	1		&&			
ANR	1376604	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1376605	CallExpression	ZEND_OP2_TYPE ( opline )		1375208	0					
ANR	1376606	Callee	ZEND_OP2_TYPE		1375208	0					
ANR	1376607	Identifier	ZEND_OP2_TYPE		1375208	0					
ANR	1376608	ArgumentList	opline		1375208	1					
ANR	1376609	Argument	opline		1375208	0					
ANR	1376610	Identifier	opline		1375208	0					
ANR	1376611	Identifier	IS_CONST		1375208	1					
ANR	1376612	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		1375208	1		==			
ANR	1376613	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376614	Callee	Z_TYPE		1375208	0					
ANR	1376615	Identifier	Z_TYPE		1375208	0					
ANR	1376616	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376617	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376618	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376619	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376620	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376621	ArgumentList	opline		1375208	1					
ANR	1376622	Argument	opline		1375208	0					
ANR	1376623	Identifier	opline		1375208	0					
ANR	1376624	Identifier	IS_STRING		1375208	1					
ANR	1376625	CompoundStatement		232:4:7352:7358	1375208	1					
ANR	1376626	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	271:4:9305:9342	1375208	0	True				
ANR	1376627	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1376628	IdentifierDeclType	uint32_t		1375208	0					
ANR	1376629	Identifier	tv		1375208	1					
ANR	1376630	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		1375208	2		=			
ANR	1376631	Identifier	tv		1375208	0					
ANR	1376632	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	1					
ANR	1376633	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1376634	Callee	ZEND_RESULT		1375208	0					
ANR	1376635	Identifier	ZEND_RESULT		1375208	0					
ANR	1376636	ArgumentList	opline		1375208	1					
ANR	1376637	Argument	opline		1375208	0					
ANR	1376638	Identifier	opline		1375208	0					
ANR	1376639	Identifier	var		1375208	1					
ANR	1376640	IdentifierDeclStatement	zval c ;	272:4:9348:9354	1375208	1	True				
ANR	1376641	IdentifierDecl	c		1375208	0					
ANR	1376642	IdentifierDeclType	zval		1375208	0					
ANR	1376643	Identifier	c		1375208	1					
ANR	1376644	IfStatement	"if ( ! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 ) )"		1375208	2					
ANR	1376645	Condition	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 )"	274:8:9365:9443	1375208	0	True				
ANR	1376646	UnaryOperationExpression	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 )"		1375208	0					
ANR	1376647	UnaryOperator	!		1375208	0					
ANR	1376648	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 )"		1375208	1					
ANR	1376649	Callee	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1376650	Identifier	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1376651	ArgumentList	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1376652	Argument	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376653	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376654	Callee	Z_STR		1375208	0					
ANR	1376655	Identifier	Z_STR		1375208	0					
ANR	1376656	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376657	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376658	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376659	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376660	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376661	ArgumentList	opline		1375208	1					
ANR	1376662	Argument	opline		1375208	0					
ANR	1376663	Identifier	opline		1375208	0					
ANR	1376664	Argument	& c		1375208	1					
ANR	1376665	UnaryOperationExpression	& c		1375208	0					
ANR	1376666	UnaryOperator	&		1375208	0					
ANR	1376667	Identifier	c		1375208	1					
ANR	1376668	Argument	1		1375208	2					
ANR	1376669	PrimaryExpression	1		1375208	0					
ANR	1376670	CompoundStatement		234:89:7450:7450	1375208	1					
ANR	1376671	IfStatement	"if ( ! ctx -> constants || ! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c ) )"		1375208	0					
ANR	1376672	Condition	"! ctx -> constants || ! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"	275:9:9457:9560	1375208	0	True				
ANR	1376673	OrExpression	"! ctx -> constants || ! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"		1375208	0		||			
ANR	1376674	UnaryOperationExpression	! ctx -> constants		1375208	0					
ANR	1376675	UnaryOperator	!		1375208	0					
ANR	1376676	PtrMemberAccess	ctx -> constants		1375208	1					
ANR	1376677	Identifier	ctx		1375208	0					
ANR	1376678	Identifier	constants		1375208	1					
ANR	1376679	UnaryOperationExpression	"! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"		1375208	1					
ANR	1376680	UnaryOperator	!		1375208	0					
ANR	1376681	CallExpression	"zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"		1375208	1					
ANR	1376682	Callee	zend_optimizer_get_collected_constant		1375208	0					
ANR	1376683	Identifier	zend_optimizer_get_collected_constant		1375208	0					
ANR	1376684	ArgumentList	ctx -> constants		1375208	1					
ANR	1376685	Argument	ctx -> constants		1375208	0					
ANR	1376686	PtrMemberAccess	ctx -> constants		1375208	0					
ANR	1376687	Identifier	ctx		1375208	0					
ANR	1376688	Identifier	constants		1375208	1					
ANR	1376689	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376690	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376691	UnaryOperator	&		1375208	0					
ANR	1376692	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376693	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376694	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376695	ArgumentList	opline		1375208	1					
ANR	1376696	Argument	opline		1375208	0					
ANR	1376697	Identifier	opline		1375208	0					
ANR	1376698	Argument	& c		1375208	2					
ANR	1376699	UnaryOperationExpression	& c		1375208	0					
ANR	1376700	UnaryOperator	&		1375208	0					
ANR	1376701	Identifier	c		1375208	1					
ANR	1376702	CompoundStatement		235:115:7567:7567	1375208	1					
ANR	1376703	BreakStatement	break ;	276:6:9571:9576	1375208	0	True				
ANR	1376704	IfStatement	if ( Z_TYPE ( c ) == IS_CONSTANT_AST )		1375208	3					
ANR	1376705	Condition	Z_TYPE ( c ) == IS_CONSTANT_AST	279:8:9599:9626	1375208	0	True				
ANR	1376706	EqualityExpression	Z_TYPE ( c ) == IS_CONSTANT_AST		1375208	0		==			
ANR	1376707	CallExpression	Z_TYPE ( c )		1375208	0					
ANR	1376708	Callee	Z_TYPE		1375208	0					
ANR	1376709	Identifier	Z_TYPE		1375208	0					
ANR	1376710	ArgumentList	c		1375208	1					
ANR	1376711	Argument	c		1375208	0					
ANR	1376712	Identifier	c		1375208	0					
ANR	1376713	Identifier	IS_CONSTANT_AST		1375208	1					
ANR	1376714	CompoundStatement		239:38:7633:7633	1375208	1					
ANR	1376715	BreakStatement	break ;	280:5:9636:9641	1375208	0	True				
ANR	1376716	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c ) )"		1375208	4					
ANR	1376717	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"	282:8:9657:9725	1375208	0	True				
ANR	1376718	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"		1375208	0					
ANR	1376719	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1376720	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1376721	ArgumentList	op_array		1375208	1					
ANR	1376722	Argument	op_array		1375208	0					
ANR	1376723	Identifier	op_array		1375208	0					
ANR	1376724	Argument	opline		1375208	1					
ANR	1376725	Identifier	opline		1375208	0					
ANR	1376726	Argument	IS_TMP_VAR		1375208	2					
ANR	1376727	Identifier	IS_TMP_VAR		1375208	0					
ANR	1376728	Argument	tv		1375208	3					
ANR	1376729	Identifier	tv		1375208	0					
ANR	1376730	Argument	& c		1375208	4					
ANR	1376731	UnaryOperationExpression	& c		1375208	0					
ANR	1376732	UnaryOperator	&		1375208	0					
ANR	1376733	Identifier	c		1375208	1					
ANR	1376734	CompoundStatement		242:79:7732:7732	1375208	1					
ANR	1376735	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	283:5:9735:9774	1375208	0	True				
ANR	1376736	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376737	Callee	literal_dtor		1375208	0					
ANR	1376738	Identifier	literal_dtor		1375208	0					
ANR	1376739	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376740	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376741	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376742	UnaryOperator	&		1375208	0					
ANR	1376743	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376744	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376745	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376746	ArgumentList	opline		1375208	1					
ANR	1376747	Argument	opline		1375208	0					
ANR	1376748	Identifier	opline		1375208	0					
ANR	1376749	ExpressionStatement	MAKE_NOP ( opline )	284:5:9781:9797	1375208	1	True				
ANR	1376750	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1376751	Callee	MAKE_NOP		1375208	0					
ANR	1376752	Identifier	MAKE_NOP		1375208	0					
ANR	1376753	ArgumentList	opline		1375208	1					
ANR	1376754	Argument	opline		1375208	0					
ANR	1376755	Identifier	opline		1375208	0					
ANR	1376756	IfStatement	if ( ZEND_OP1_TYPE ( opline ) != IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING )		1375208	37					
ANR	1376757	Condition	ZEND_OP1_TYPE ( opline ) != IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING	289:7:9842:9972	1375208	0	True				
ANR	1376758	AndExpression	ZEND_OP1_TYPE ( opline ) != IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		1375208	0		&&			
ANR	1376759	EqualityExpression	ZEND_OP1_TYPE ( opline ) != IS_UNUSED		1375208	0		!=			
ANR	1376760	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1376761	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1376762	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1376763	ArgumentList	opline		1375208	1					
ANR	1376764	Argument	opline		1375208	0					
ANR	1376765	Identifier	opline		1375208	0					
ANR	1376766	Identifier	IS_UNUSED		1375208	1					
ANR	1376767	AndExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		1375208	1		&&			
ANR	1376768	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1376769	CallExpression	ZEND_OP2_TYPE ( opline )		1375208	0					
ANR	1376770	Callee	ZEND_OP2_TYPE		1375208	0					
ANR	1376771	Identifier	ZEND_OP2_TYPE		1375208	0					
ANR	1376772	ArgumentList	opline		1375208	1					
ANR	1376773	Argument	opline		1375208	0					
ANR	1376774	Identifier	opline		1375208	0					
ANR	1376775	Identifier	IS_CONST		1375208	1					
ANR	1376776	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		1375208	1		==			
ANR	1376777	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1376778	Callee	Z_TYPE		1375208	0					
ANR	1376779	Identifier	Z_TYPE		1375208	0					
ANR	1376780	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1376781	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376782	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1376783	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1376784	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1376785	ArgumentList	opline		1375208	1					
ANR	1376786	Argument	opline		1375208	0					
ANR	1376787	Identifier	opline		1375208	0					
ANR	1376788	Identifier	IS_STRING		1375208	1					
ANR	1376789	CompoundStatement		253:4:7986:8013	1375208	1					
ANR	1376790	IdentifierDeclStatement	zend_class_entry * ce = NULL ;	293:4:9982:10009	1375208	0	True				
ANR	1376791	IdentifierDecl	* ce = NULL		1375208	0					
ANR	1376792	IdentifierDeclType	zend_class_entry *		1375208	0					
ANR	1376793	Identifier	ce		1375208	1					
ANR	1376794	AssignmentExpression	* ce = NULL		1375208	2		=			
ANR	1376795	Identifier	NULL		1375208	0					
ANR	1376796	Identifier	NULL		1375208	1					
ANR	1376797	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING )		1375208	1					
ANR	1376798	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING	295:8:10020:10112	1375208	0	True				
ANR	1376799	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		1375208	0		&&			
ANR	1376800	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1376801	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1376802	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1376803	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1376804	ArgumentList	opline		1375208	1					
ANR	1376805	Argument	opline		1375208	0					
ANR	1376806	Identifier	opline		1375208	0					
ANR	1376807	Identifier	IS_CONST		1375208	1					
ANR	1376808	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		1375208	1		==			
ANR	1376809	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1376810	Callee	Z_TYPE		1375208	0					
ANR	1376811	Identifier	Z_TYPE		1375208	0					
ANR	1376812	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1376813	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1376814	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1376815	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1376816	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1376817	ArgumentList	opline		1375208	1					
ANR	1376818	Argument	opline		1375208	0					
ANR	1376819	Identifier	opline		1375208	0					
ANR	1376820	Identifier	IS_STRING		1375208	1					
ANR	1376821	CompoundStatement		256:58:8119:8119	1375208	1					
ANR	1376822	IfStatement	"if ( op_array -> scope && ! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 ) )"		1375208	0					
ANR	1376823	Condition	"op_array -> scope && ! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"	298:9:10146:10297	1375208	0	True				
ANR	1376824	AndExpression	"op_array -> scope && ! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"		1375208	0		&&			
ANR	1376825	PtrMemberAccess	op_array -> scope		1375208	0					
ANR	1376826	Identifier	op_array		1375208	0					
ANR	1376827	Identifier	scope		1375208	1					
ANR	1376828	UnaryOperationExpression	"! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"		1375208	1					
ANR	1376829	UnaryOperator	!		1375208	0					
ANR	1376830	CallExpression	"strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"		1375208	1					
ANR	1376831	Callee	strncasecmp		1375208	0					
ANR	1376832	Identifier	strncasecmp		1375208	0					
ANR	1376833	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		1375208	1					
ANR	1376834	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1376835	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1376836	Callee	Z_STRVAL		1375208	0					
ANR	1376837	Identifier	Z_STRVAL		1375208	0					
ANR	1376838	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1376839	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1376840	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1376841	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1376842	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1376843	ArgumentList	opline		1375208	1					
ANR	1376844	Argument	opline		1375208	0					
ANR	1376845	Identifier	opline		1375208	0					
ANR	1376846	Argument	ZSTR_VAL ( op_array -> scope -> name )		1375208	1					
ANR	1376847	CallExpression	ZSTR_VAL ( op_array -> scope -> name )		1375208	0					
ANR	1376848	Callee	ZSTR_VAL		1375208	0					
ANR	1376849	Identifier	ZSTR_VAL		1375208	0					
ANR	1376850	ArgumentList	op_array -> scope -> name		1375208	1					
ANR	1376851	Argument	op_array -> scope -> name		1375208	0					
ANR	1376852	PtrMemberAccess	op_array -> scope -> name		1375208	0					
ANR	1376853	PtrMemberAccess	op_array -> scope		1375208	0					
ANR	1376854	Identifier	op_array		1375208	0					
ANR	1376855	Identifier	scope		1375208	1					
ANR	1376856	Identifier	name		1375208	1					
ANR	1376857	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1		1375208	2					
ANR	1376858	AdditiveExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1		1375208	0		+			
ANR	1376859	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1376860	Callee	Z_STRLEN		1375208	0					
ANR	1376861	Identifier	Z_STRLEN		1375208	0					
ANR	1376862	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1376863	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1376864	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1376865	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1376866	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1376867	ArgumentList	opline		1375208	1					
ANR	1376868	Argument	opline		1375208	0					
ANR	1376869	Identifier	opline		1375208	0					
ANR	1376870	PrimaryExpression	1		1375208	1					
ANR	1376871	CompoundStatement		260:80:8304:8304	1375208	1					
ANR	1376872	ExpressionStatement	ce = op_array -> scope	301:6:10308:10328	1375208	0	True				
ANR	1376873	AssignmentExpression	ce = op_array -> scope		1375208	0		=			
ANR	1376874	Identifier	ce		1375208	0					
ANR	1376875	PtrMemberAccess	op_array -> scope		1375208	1					
ANR	1376876	Identifier	op_array		1375208	0					
ANR	1376877	Identifier	scope		1375208	1					
ANR	1376878	ElseStatement	else		1375208	0					
ANR	1376879	CompoundStatement		262:12:8346:8346	1375208	0					
ANR	1376880	IfStatement	"if ( ( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL || ( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename ) )"		1375208	0					
ANR	1376881	Condition	"( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL || ( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename )"	303:10:10354:10669	1375208	0	True				
ANR	1376882	OrExpression	"( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL || ( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename )"		1375208	0		||			
ANR	1376883	EqualityExpression	"( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL"		1375208	0		==			
ANR	1376884	AssignmentExpression	"ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) )"		1375208	0		=			
ANR	1376885	Identifier	ce		1375208	0					
ANR	1376886	CallExpression	"zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) )"		1375208	1					
ANR	1376887	Callee	zend_hash_find_ptr		1375208	0					
ANR	1376888	Identifier	zend_hash_find_ptr		1375208	0					
ANR	1376889	ArgumentList	EG ( class_table )		1375208	1					
ANR	1376890	Argument	EG ( class_table )		1375208	0					
ANR	1376891	CallExpression	EG ( class_table )		1375208	0					
ANR	1376892	Callee	EG		1375208	0					
ANR	1376893	Identifier	EG		1375208	0					
ANR	1376894	ArgumentList	class_table		1375208	1					
ANR	1376895	Argument	class_table		1375208	0					
ANR	1376896	Identifier	class_table		1375208	0					
ANR	1376897	Argument	Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] )		1375208	1					
ANR	1376898	CallExpression	Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] )		1375208	0					
ANR	1376899	Callee	Z_STR		1375208	0					
ANR	1376900	Identifier	Z_STR		1375208	0					
ANR	1376901	ArgumentList	op_array -> literals [ opline -> op1 . constant + 1 ]		1375208	1					
ANR	1376902	Argument	op_array -> literals [ opline -> op1 . constant + 1 ]		1375208	0					
ANR	1376903	ArrayIndexing	op_array -> literals [ opline -> op1 . constant + 1 ]		1375208	0					
ANR	1376904	PtrMemberAccess	op_array -> literals		1375208	0					
ANR	1376905	Identifier	op_array		1375208	0					
ANR	1376906	Identifier	literals		1375208	1					
ANR	1376907	AdditiveExpression	opline -> op1 . constant + 1		1375208	1		+			
ANR	1376908	MemberAccess	opline -> op1 . constant		1375208	0					
ANR	1376909	PtrMemberAccess	opline -> op1		1375208	0					
ANR	1376910	Identifier	opline		1375208	0					
ANR	1376911	Identifier	op1		1375208	1					
ANR	1376912	Identifier	constant		1375208	1					
ANR	1376913	PrimaryExpression	1		1375208	1					
ANR	1376914	Identifier	NULL		1375208	1					
ANR	1376915	OrExpression	( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename )		1375208	1		||			
ANR	1376916	AndExpression	ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT		1375208	0		&&			
ANR	1376917	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		1375208	0		==			
ANR	1376918	PtrMemberAccess	ce -> type		1375208	0					
ANR	1376919	Identifier	ce		1375208	0					
ANR	1376920	Identifier	type		1375208	1					
ANR	1376921	Identifier	ZEND_INTERNAL_CLASS		1375208	1					
ANR	1376922	EqualityExpression	ce -> info . internal . module -> type != MODULE_PERSISTENT		1375208	1		!=			
ANR	1376923	PtrMemberAccess	ce -> info . internal . module -> type		1375208	0					
ANR	1376924	MemberAccess	ce -> info . internal . module		1375208	0					
ANR	1376925	MemberAccess	ce -> info . internal		1375208	0					
ANR	1376926	PtrMemberAccess	ce -> info		1375208	0					
ANR	1376927	Identifier	ce		1375208	0					
ANR	1376928	Identifier	info		1375208	1					
ANR	1376929	Identifier	internal		1375208	1					
ANR	1376930	Identifier	module		1375208	1					
ANR	1376931	Identifier	type		1375208	1					
ANR	1376932	Identifier	MODULE_PERSISTENT		1375208	1					
ANR	1376933	AndExpression	ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename		1375208	1		&&			
ANR	1376934	EqualityExpression	ce -> type == ZEND_USER_CLASS		1375208	0		==			
ANR	1376935	PtrMemberAccess	ce -> type		1375208	0					
ANR	1376936	Identifier	ce		1375208	0					
ANR	1376937	Identifier	type		1375208	1					
ANR	1376938	Identifier	ZEND_USER_CLASS		1375208	1					
ANR	1376939	EqualityExpression	ZEND_CE_FILENAME ( ce ) != op_array -> filename		1375208	1		!=			
ANR	1376940	CallExpression	ZEND_CE_FILENAME ( ce )		1375208	0					
ANR	1376941	Callee	ZEND_CE_FILENAME		1375208	0					
ANR	1376942	Identifier	ZEND_CE_FILENAME		1375208	0					
ANR	1376943	ArgumentList	ce		1375208	1					
ANR	1376944	Argument	ce		1375208	0					
ANR	1376945	Identifier	ce		1375208	0					
ANR	1376946	PtrMemberAccess	op_array -> filename		1375208	1					
ANR	1376947	Identifier	op_array		1375208	0					
ANR	1376948	Identifier	filename		1375208	1					
ANR	1376949	CompoundStatement		268:54:8676:8676	1375208	1					
ANR	1376950	BreakStatement	break ;	309:7:10681:10686	1375208	0	True				
ANR	1376951	ElseStatement	else		1375208	0					
ANR	1376952	IfStatement	if ( op_array -> scope && ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var )		1375208	0					
ANR	1376953	Condition	op_array -> scope && ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var	312:15:10718:11028	1375208	0	True				
ANR	1376954	AndExpression	op_array -> scope && ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		1375208	0		&&			
ANR	1376955	PtrMemberAccess	op_array -> scope		1375208	0					
ANR	1376956	Identifier	op_array		1375208	0					
ANR	1376957	Identifier	scope		1375208	1					
ANR	1376958	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		1375208	1		&&			
ANR	1376959	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR		1375208	0		==			
ANR	1376960	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1376961	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1376962	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1376963	ArgumentList	opline		1375208	1					
ANR	1376964	Argument	opline		1375208	0					
ANR	1376965	Identifier	opline		1375208	0					
ANR	1376966	Identifier	IS_VAR		1375208	1					
ANR	1376967	AndExpression	( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		1375208	1		&&			
ANR	1376968	EqualityExpression	( opline - 1 ) -> opcode == ZEND_FETCH_CLASS		1375208	0		==			
ANR	1376969	PtrMemberAccess	( opline - 1 ) -> opcode		1375208	0					
ANR	1376970	AdditiveExpression	opline - 1		1375208	0		-			
ANR	1376971	Identifier	opline		1375208	0					
ANR	1376972	PrimaryExpression	1		1375208	1					
ANR	1376973	Identifier	opcode		1375208	1					
ANR	1376974	Identifier	ZEND_FETCH_CLASS		1375208	1					
ANR	1376975	AndExpression	( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		1375208	1		&&			
ANR	1376976	AndExpression	ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF		1375208	0		&&			
ANR	1376977	EqualityExpression	ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED		1375208	0		==			
ANR	1376978	CallExpression	ZEND_OP1_TYPE ( opline - 1 )		1375208	0					
ANR	1376979	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1376980	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1376981	ArgumentList	opline - 1		1375208	1					
ANR	1376982	Argument	opline - 1		1375208	0					
ANR	1376983	AdditiveExpression	opline - 1		1375208	0		-			
ANR	1376984	Identifier	opline		1375208	0					
ANR	1376985	PrimaryExpression	1		1375208	1					
ANR	1376986	Identifier	IS_UNUSED		1375208	1					
ANR	1376987	EqualityExpression	( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF		1375208	1		==			
ANR	1376988	BitAndExpression	( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD		1375208	0		&			
ANR	1376989	PtrMemberAccess	( opline - 1 ) -> extended_value		1375208	0					
ANR	1376990	AdditiveExpression	opline - 1		1375208	0		-			
ANR	1376991	Identifier	opline		1375208	0					
ANR	1376992	PrimaryExpression	1		1375208	1					
ANR	1376993	Identifier	extended_value		1375208	1					
ANR	1376994	Identifier	~ZEND_FETCH_CLASS_NO_AUTOLOAD		1375208	1					
ANR	1376995	Identifier	ZEND_FETCH_CLASS_SELF		1375208	1					
ANR	1376996	EqualityExpression	ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		1375208	1		==			
ANR	1376997	MemberAccess	ZEND_RESULT ( ( opline - 1 ) ) . var		1375208	0					
ANR	1376998	CallExpression	ZEND_RESULT ( ( opline - 1 ) )		1375208	0					
ANR	1376999	Callee	ZEND_RESULT		1375208	0					
ANR	1377000	Identifier	ZEND_RESULT		1375208	0					
ANR	1377001	ArgumentList	opline - 1		1375208	1					
ANR	1377002	Argument	opline - 1		1375208	0					
ANR	1377003	AdditiveExpression	opline - 1		1375208	0		-			
ANR	1377004	Identifier	opline		1375208	0					
ANR	1377005	PrimaryExpression	1		1375208	1					
ANR	1377006	Identifier	var		1375208	1					
ANR	1377007	MemberAccess	ZEND_OP1 ( opline ) . var		1375208	1					
ANR	1377008	CallExpression	ZEND_OP1 ( opline )		1375208	0					
ANR	1377009	Callee	ZEND_OP1		1375208	0					
ANR	1377010	Identifier	ZEND_OP1		1375208	0					
ANR	1377011	ArgumentList	opline		1375208	1					
ANR	1377012	Argument	opline		1375208	0					
ANR	1377013	Identifier	opline		1375208	0					
ANR	1377014	Identifier	var		1375208	1					
ANR	1377015	CompoundStatement		277:60:9035:9035	1375208	1					
ANR	1377016	ExpressionStatement	ce = op_array -> scope	319:5:11061:11081	1375208	0	True				
ANR	1377017	AssignmentExpression	ce = op_array -> scope		1375208	0		=			
ANR	1377018	Identifier	ce		1375208	0					
ANR	1377019	PtrMemberAccess	op_array -> scope		1375208	1					
ANR	1377020	Identifier	op_array		1375208	0					
ANR	1377021	Identifier	scope		1375208	1					
ANR	1377022	IfStatement	if ( ce )		1375208	2					
ANR	1377023	Condition	ce	322:8:11098:11099	1375208	0	True				
ANR	1377024	Identifier	ce		1375208	0					
ANR	1377025	CompoundStatement		284:5:9157:9167	1375208	1					
ANR	1377026	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	323:5:11109:11146	1375208	0	True				
ANR	1377027	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1377028	IdentifierDeclType	uint32_t		1375208	0					
ANR	1377029	Identifier	tv		1375208	1					
ANR	1377030	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		1375208	2		=			
ANR	1377031	Identifier	tv		1375208	0					
ANR	1377032	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	1					
ANR	1377033	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1377034	Callee	ZEND_RESULT		1375208	0					
ANR	1377035	Identifier	ZEND_RESULT		1375208	0					
ANR	1377036	ArgumentList	opline		1375208	1					
ANR	1377037	Argument	opline		1375208	0					
ANR	1377038	Identifier	opline		1375208	0					
ANR	1377039	Identifier	var		1375208	1					
ANR	1377040	IdentifierDeclStatement	"zval * c , t ;"	324:5:11153:11163	1375208	1	True				
ANR	1377041	IdentifierDecl	* c		1375208	0					
ANR	1377042	IdentifierDeclType	zval *		1375208	0					
ANR	1377043	Identifier	c		1375208	1					
ANR	1377044	IdentifierDecl	t		1375208	1					
ANR	1377045	IdentifierDeclType	zval		1375208	0					
ANR	1377046	Identifier	t		1375208	1					
ANR	1377047	IfStatement	"if ( ( c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) ) ) != NULL )"		1375208	2					
ANR	1377048	Condition	"( c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) ) ) != NULL"	326:9:11175:11264	1375208	0	True				
ANR	1377049	EqualityExpression	"( c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) ) ) != NULL"		1375208	0		!=			
ANR	1377050	AssignmentExpression	"c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )"		1375208	0		=			
ANR	1377051	Identifier	c		1375208	0					
ANR	1377052	CallExpression	"zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )"		1375208	1					
ANR	1377053	Callee	zend_hash_find		1375208	0					
ANR	1377054	Identifier	zend_hash_find		1375208	0					
ANR	1377055	ArgumentList	& ce -> constants_table		1375208	1					
ANR	1377056	Argument	& ce -> constants_table		1375208	0					
ANR	1377057	UnaryOperationExpression	& ce -> constants_table		1375208	0					
ANR	1377058	UnaryOperator	&		1375208	0					
ANR	1377059	PtrMemberAccess	ce -> constants_table		1375208	1					
ANR	1377060	Identifier	ce		1375208	0					
ANR	1377061	Identifier	constants_table		1375208	1					
ANR	1377062	Argument	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	1					
ANR	1377063	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1377064	Callee	Z_STR		1375208	0					
ANR	1377065	Identifier	Z_STR		1375208	0					
ANR	1377066	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1377067	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1377068	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1377069	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377070	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377071	ArgumentList	opline		1375208	1					
ANR	1377072	Argument	opline		1375208	0					
ANR	1377073	Identifier	opline		1375208	0					
ANR	1377074	Identifier	NULL		1375208	1					
ANR	1377075	CompoundStatement		287:50:9271:9271	1375208	1					
ANR	1377076	ExpressionStatement	ZVAL_DEREF ( c )	328:6:11275:11288	1375208	0	True				
ANR	1377077	CallExpression	ZVAL_DEREF ( c )		1375208	0					
ANR	1377078	Callee	ZVAL_DEREF		1375208	0					
ANR	1377079	Identifier	ZVAL_DEREF		1375208	0					
ANR	1377080	ArgumentList	c		1375208	1					
ANR	1377081	Argument	c		1375208	0					
ANR	1377082	Identifier	c		1375208	0					
ANR	1377083	IfStatement	if ( Z_TYPE_P ( c ) == IS_CONSTANT_AST )		1375208	1					
ANR	1377084	Condition	Z_TYPE_P ( c ) == IS_CONSTANT_AST	329:10:11300:11329	1375208	0	True				
ANR	1377085	EqualityExpression	Z_TYPE_P ( c ) == IS_CONSTANT_AST		1375208	0		==			
ANR	1377086	CallExpression	Z_TYPE_P ( c )		1375208	0					
ANR	1377087	Callee	Z_TYPE_P		1375208	0					
ANR	1377088	Identifier	Z_TYPE_P		1375208	0					
ANR	1377089	ArgumentList	c		1375208	1					
ANR	1377090	Argument	c		1375208	0					
ANR	1377091	Identifier	c		1375208	0					
ANR	1377092	Identifier	IS_CONSTANT_AST		1375208	1					
ANR	1377093	CompoundStatement		289:42:9336:9336	1375208	1					
ANR	1377094	BreakStatement	break ;	330:7:11341:11346	1375208	0	True				
ANR	1377095	IfStatement	if ( ZEND_IS_CONSTANT_TYPE ( Z_TYPE_P ( c ) ) )		1375208	2					
ANR	1377096	Condition	ZEND_IS_CONSTANT_TYPE ( Z_TYPE_P ( c ) )	332:10:11366:11399	1375208	0	True				
ANR	1377097	CallExpression	ZEND_IS_CONSTANT_TYPE ( Z_TYPE_P ( c ) )		1375208	0					
ANR	1377098	Callee	ZEND_IS_CONSTANT_TYPE		1375208	0					
ANR	1377099	Identifier	ZEND_IS_CONSTANT_TYPE		1375208	0					
ANR	1377100	ArgumentList	Z_TYPE_P ( c )		1375208	1					
ANR	1377101	Argument	Z_TYPE_P ( c )		1375208	0					
ANR	1377102	CallExpression	Z_TYPE_P ( c )		1375208	0					
ANR	1377103	Callee	Z_TYPE_P		1375208	0					
ANR	1377104	Identifier	Z_TYPE_P		1375208	0					
ANR	1377105	ArgumentList	c		1375208	1					
ANR	1377106	Argument	c		1375208	0					
ANR	1377107	Identifier	c		1375208	0					
ANR	1377108	CompoundStatement		292:46:9406:9406	1375208	1					
ANR	1377109	IfStatement	"if ( ! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 ) || ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) ) )"		1375208	0					
ANR	1377110	Condition	"! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 ) || ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) )"	333:11:11415:11519	1375208	0	True				
ANR	1377111	OrExpression	"! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 ) || ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) )"		1375208	0		||			
ANR	1377112	UnaryOperationExpression	"! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 )"		1375208	0					
ANR	1377113	UnaryOperator	!		1375208	0					
ANR	1377114	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 )"		1375208	1					
ANR	1377115	Callee	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1377116	Identifier	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1377117	ArgumentList	Z_STR_P ( c )		1375208	1					
ANR	1377118	Argument	Z_STR_P ( c )		1375208	0					
ANR	1377119	CallExpression	Z_STR_P ( c )		1375208	0					
ANR	1377120	Callee	Z_STR_P		1375208	0					
ANR	1377121	Identifier	Z_STR_P		1375208	0					
ANR	1377122	ArgumentList	c		1375208	1					
ANR	1377123	Argument	c		1375208	0					
ANR	1377124	Identifier	c		1375208	0					
ANR	1377125	Argument	& t		1375208	1					
ANR	1377126	UnaryOperationExpression	& t		1375208	0					
ANR	1377127	UnaryOperator	&		1375208	0					
ANR	1377128	Identifier	t		1375208	1					
ANR	1377129	Argument	1		1375208	2					
ANR	1377130	PrimaryExpression	1		1375208	0					
ANR	1377131	CallExpression	ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) )		1375208	1					
ANR	1377132	Callee	ZEND_IS_CONSTANT_TYPE		1375208	0					
ANR	1377133	Identifier	ZEND_IS_CONSTANT_TYPE		1375208	0					
ANR	1377134	ArgumentList	Z_TYPE ( t )		1375208	1					
ANR	1377135	Argument	Z_TYPE ( t )		1375208	0					
ANR	1377136	CallExpression	Z_TYPE ( t )		1375208	0					
ANR	1377137	Callee	Z_TYPE		1375208	0					
ANR	1377138	Identifier	Z_TYPE		1375208	0					
ANR	1377139	ArgumentList	t		1375208	1					
ANR	1377140	Argument	t		1375208	0					
ANR	1377141	Identifier	t		1375208	0					
ANR	1377142	CompoundStatement		294:45:9526:9526	1375208	1					
ANR	1377143	BreakStatement	break ;	335:8:11532:11537	1375208	0	True				
ANR	1377144	ElseStatement	else		1375208	0					
ANR	1377145	CompoundStatement		297:13:9565:9565	1375208	0					
ANR	1377146	ExpressionStatement	"ZVAL_COPY_VALUE ( & t , c )"	338:7:11570:11592	1375208	0	True				
ANR	1377147	CallExpression	"ZVAL_COPY_VALUE ( & t , c )"		1375208	0					
ANR	1377148	Callee	ZVAL_COPY_VALUE		1375208	0					
ANR	1377149	Identifier	ZVAL_COPY_VALUE		1375208	0					
ANR	1377150	ArgumentList	& t		1375208	1					
ANR	1377151	Argument	& t		1375208	0					
ANR	1377152	UnaryOperationExpression	& t		1375208	0					
ANR	1377153	UnaryOperator	&		1375208	0					
ANR	1377154	Identifier	t		1375208	1					
ANR	1377155	Argument	c		1375208	1					
ANR	1377156	Identifier	c		1375208	0					
ANR	1377157	ExpressionStatement	zval_copy_ctor ( & t )	339:7:11601:11619	1375208	1	True				
ANR	1377158	CallExpression	zval_copy_ctor ( & t )		1375208	0					
ANR	1377159	Callee	zval_copy_ctor		1375208	0					
ANR	1377160	Identifier	zval_copy_ctor		1375208	0					
ANR	1377161	ArgumentList	& t		1375208	1					
ANR	1377162	Argument	& t		1375208	0					
ANR	1377163	UnaryOperationExpression	& t		1375208	0					
ANR	1377164	UnaryOperator	&		1375208	0					
ANR	1377165	Identifier	t		1375208	1					
ANR	1377166	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1375208	3					
ANR	1377167	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	342:10:11640:11672	1375208	0	True				
ANR	1377168	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1377169	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1377170	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1377171	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1377172	ArgumentList	opline		1375208	1					
ANR	1377173	Argument	opline		1375208	0					
ANR	1377174	Identifier	opline		1375208	0					
ANR	1377175	Identifier	IS_CONST		1375208	1					
ANR	1377176	CompoundStatement		302:45:9679:9679	1375208	1					
ANR	1377177	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	343:7:11684:11723	1375208	0	True				
ANR	1377178	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1377179	Callee	literal_dtor		1375208	0					
ANR	1377180	Identifier	literal_dtor		1375208	0					
ANR	1377181	ArgumentList	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1377182	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1377183	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1377184	UnaryOperator	&		1375208	0					
ANR	1377185	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1377186	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377187	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377188	ArgumentList	opline		1375208	1					
ANR	1377189	Argument	opline		1375208	0					
ANR	1377190	Identifier	opline		1375208	0					
ANR	1377191	ElseStatement	else		1375208	0					
ANR	1377192	CompoundStatement		304:13:9742:9742	1375208	0					
ANR	1377193	ExpressionStatement	MAKE_NOP ( ( opline - 1 ) )	345:7:11747:11769	1375208	0	True				
ANR	1377194	CallExpression	MAKE_NOP ( ( opline - 1 ) )		1375208	0					
ANR	1377195	Callee	MAKE_NOP		1375208	0					
ANR	1377196	Identifier	MAKE_NOP		1375208	0					
ANR	1377197	ArgumentList	opline - 1		1375208	1					
ANR	1377198	Argument	opline - 1		1375208	0					
ANR	1377199	AdditiveExpression	opline - 1		1375208	0		-			
ANR	1377200	Identifier	opline		1375208	0					
ANR	1377201	PrimaryExpression	1		1375208	1					
ANR	1377202	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & t ) )"		1375208	4					
ANR	1377203	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & t )"	347:10:11789:11857	1375208	0	True				
ANR	1377204	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & t )"		1375208	0					
ANR	1377205	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1377206	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1377207	ArgumentList	op_array		1375208	1					
ANR	1377208	Argument	op_array		1375208	0					
ANR	1377209	Identifier	op_array		1375208	0					
ANR	1377210	Argument	opline		1375208	1					
ANR	1377211	Identifier	opline		1375208	0					
ANR	1377212	Argument	IS_TMP_VAR		1375208	2					
ANR	1377213	Identifier	IS_TMP_VAR		1375208	0					
ANR	1377214	Argument	tv		1375208	3					
ANR	1377215	Identifier	tv		1375208	0					
ANR	1377216	Argument	& t		1375208	4					
ANR	1377217	UnaryOperationExpression	& t		1375208	0					
ANR	1377218	UnaryOperator	&		1375208	0					
ANR	1377219	Identifier	t		1375208	1					
ANR	1377220	CompoundStatement		307:81:9864:9864	1375208	1					
ANR	1377221	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	348:7:11869:11908	1375208	0	True				
ANR	1377222	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1377223	Callee	literal_dtor		1375208	0					
ANR	1377224	Identifier	literal_dtor		1375208	0					
ANR	1377225	ArgumentList	& ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1377226	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1377227	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1377228	UnaryOperator	&		1375208	0					
ANR	1377229	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1377230	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377231	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377232	ArgumentList	opline		1375208	1					
ANR	1377233	Argument	opline		1375208	0					
ANR	1377234	Identifier	opline		1375208	0					
ANR	1377235	ExpressionStatement	MAKE_NOP ( opline )	349:7:11917:11933	1375208	1	True				
ANR	1377236	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1377237	Callee	MAKE_NOP		1375208	0					
ANR	1377238	Identifier	MAKE_NOP		1375208	0					
ANR	1377239	ArgumentList	opline		1375208	1					
ANR	1377240	Argument	opline		1375208	0					
ANR	1377241	Identifier	opline		1375208	0					
ANR	1377242	BreakStatement	break ;	354:3:11964:11969	1375208	38	True				
ANR	1377243	Label	case ZEND_DO_ICALL :	356:2:11974:11992	1375208	39	True				
ANR	1377244	Identifier	ZEND_DO_ICALL		1375208	0					
ANR	1377245	CompoundStatement		319:3:10075:10102	1375208	40					
ANR	1377246	IdentifierDeclStatement	zend_op * send1_opline = opline - 1 ;	357:3:11999:12033	1375208	0	True				
ANR	1377247	IdentifierDecl	* send1_opline = opline - 1		1375208	0					
ANR	1377248	IdentifierDeclType	zend_op *		1375208	0					
ANR	1377249	Identifier	send1_opline		1375208	1					
ANR	1377250	AssignmentExpression	* send1_opline = opline - 1		1375208	2		=			
ANR	1377251	Identifier	send1_opline		1375208	0					
ANR	1377252	AdditiveExpression	opline - 1		1375208	1		-			
ANR	1377253	Identifier	opline		1375208	0					
ANR	1377254	PrimaryExpression	1		1375208	1					
ANR	1377255	IdentifierDeclStatement	zend_op * send2_opline = NULL ;	358:3:12038:12066	1375208	1	True				
ANR	1377256	IdentifierDecl	* send2_opline = NULL		1375208	0					
ANR	1377257	IdentifierDeclType	zend_op *		1375208	0					
ANR	1377258	Identifier	send2_opline		1375208	1					
ANR	1377259	AssignmentExpression	* send2_opline = NULL		1375208	2		=			
ANR	1377260	Identifier	NULL		1375208	0					
ANR	1377261	Identifier	NULL		1375208	1					
ANR	1377262	IdentifierDeclStatement	zend_op * init_opline = NULL ;	359:3:12071:12098	1375208	2	True				
ANR	1377263	IdentifierDecl	* init_opline = NULL		1375208	0					
ANR	1377264	IdentifierDeclType	zend_op *		1375208	0					
ANR	1377265	Identifier	init_opline		1375208	1					
ANR	1377266	AssignmentExpression	* init_opline = NULL		1375208	2		=			
ANR	1377267	Identifier	NULL		1375208	0					
ANR	1377268	Identifier	NULL		1375208	1					
ANR	1377269	WhileStatement	while ( send1_opline -> opcode == ZEND_NOP )		1375208	3					
ANR	1377270	Condition	send1_opline -> opcode == ZEND_NOP	361:10:12111:12142	1375208	0	True				
ANR	1377271	EqualityExpression	send1_opline -> opcode == ZEND_NOP		1375208	0		==			
ANR	1377272	PtrMemberAccess	send1_opline -> opcode		1375208	0					
ANR	1377273	Identifier	send1_opline		1375208	0					
ANR	1377274	Identifier	opcode		1375208	1					
ANR	1377275	Identifier	ZEND_NOP		1375208	1					
ANR	1377276	CompoundStatement		321:44:10149:10149	1375208	1					
ANR	1377277	ExpressionStatement	send1_opline --	362:4:12151:12165	1375208	0	True				
ANR	1377278	PostIncDecOperationExpression	send1_opline --		1375208	0					
ANR	1377279	Identifier	send1_opline		1375208	0					
ANR	1377280	IncDec	--		1375208	1					
ANR	1377281	IfStatement	if ( send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST )		1375208	4					
ANR	1377282	Condition	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST	364:7:12179:12265	1375208	0	True				
ANR	1377283	OrExpression	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		1375208	0		||			
ANR	1377284	EqualityExpression	send1_opline -> opcode != ZEND_SEND_VAL		1375208	0		!=			
ANR	1377285	PtrMemberAccess	send1_opline -> opcode		1375208	0					
ANR	1377286	Identifier	send1_opline		1375208	0					
ANR	1377287	Identifier	opcode		1375208	1					
ANR	1377288	Identifier	ZEND_SEND_VAL		1375208	1					
ANR	1377289	EqualityExpression	ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		1375208	1		!=			
ANR	1377290	CallExpression	ZEND_OP1_TYPE ( send1_opline )		1375208	0					
ANR	1377291	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1377292	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1377293	ArgumentList	send1_opline		1375208	1					
ANR	1377294	Argument	send1_opline		1375208	0					
ANR	1377295	Identifier	send1_opline		1375208	0					
ANR	1377296	Identifier	IS_CONST		1375208	1					
ANR	1377297	CompoundStatement		325:48:10272:10272	1375208	1					
ANR	1377298	ExpressionStatement	collect_constants = 0	367:4:12337:12358	1375208	0	True				
ANR	1377299	AssignmentExpression	collect_constants = 0		1375208	0		=			
ANR	1377300	Identifier	collect_constants		1375208	0					
ANR	1377301	PrimaryExpression	0		1375208	1					
ANR	1377302	BreakStatement	break ;	368:4:12364:12369	1375208	1	True				
ANR	1377303	IfStatement	if ( send1_opline -> op2 . num == 2 )		1375208	5					
ANR	1377304	Condition	send1_opline -> op2 . num == 2	370:7:12383:12408	1375208	0	True				
ANR	1377305	EqualityExpression	send1_opline -> op2 . num == 2		1375208	0		==			
ANR	1377306	MemberAccess	send1_opline -> op2 . num		1375208	0					
ANR	1377307	PtrMemberAccess	send1_opline -> op2		1375208	0					
ANR	1377308	Identifier	send1_opline		1375208	0					
ANR	1377309	Identifier	op2		1375208	1					
ANR	1377310	Identifier	num		1375208	1					
ANR	1377311	PrimaryExpression	2		1375208	1					
ANR	1377312	CompoundStatement		330:35:10415:10415	1375208	1					
ANR	1377313	ExpressionStatement	send2_opline = send1_opline	371:4:12417:12444	1375208	0	True				
ANR	1377314	AssignmentExpression	send2_opline = send1_opline		1375208	0		=			
ANR	1377315	Identifier	send2_opline		1375208	0					
ANR	1377316	Identifier	send1_opline		1375208	1					
ANR	1377317	ExpressionStatement	send1_opline --	372:4:12450:12464	1375208	1	True				
ANR	1377318	PostIncDecOperationExpression	send1_opline --		1375208	0					
ANR	1377319	Identifier	send1_opline		1375208	0					
ANR	1377320	IncDec	--		1375208	1					
ANR	1377321	WhileStatement	while ( send1_opline -> opcode == ZEND_NOP )		1375208	2					
ANR	1377322	Condition	send1_opline -> opcode == ZEND_NOP	373:11:12477:12508	1375208	0	True				
ANR	1377323	EqualityExpression	send1_opline -> opcode == ZEND_NOP		1375208	0		==			
ANR	1377324	PtrMemberAccess	send1_opline -> opcode		1375208	0					
ANR	1377325	Identifier	send1_opline		1375208	0					
ANR	1377326	Identifier	opcode		1375208	1					
ANR	1377327	Identifier	ZEND_NOP		1375208	1					
ANR	1377328	CompoundStatement		333:45:10515:10515	1375208	1					
ANR	1377329	ExpressionStatement	send1_opline --	374:5:12518:12532	1375208	0	True				
ANR	1377330	PostIncDecOperationExpression	send1_opline --		1375208	0					
ANR	1377331	Identifier	send1_opline		1375208	0					
ANR	1377332	IncDec	--		1375208	1					
ANR	1377333	IfStatement	if ( send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST )		1375208	3					
ANR	1377334	Condition	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST	376:8:12548:12635	1375208	0	True				
ANR	1377335	OrExpression	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		1375208	0		||			
ANR	1377336	EqualityExpression	send1_opline -> opcode != ZEND_SEND_VAL		1375208	0		!=			
ANR	1377337	PtrMemberAccess	send1_opline -> opcode		1375208	0					
ANR	1377338	Identifier	send1_opline		1375208	0					
ANR	1377339	Identifier	opcode		1375208	1					
ANR	1377340	Identifier	ZEND_SEND_VAL		1375208	1					
ANR	1377341	EqualityExpression	ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		1375208	1		!=			
ANR	1377342	CallExpression	ZEND_OP1_TYPE ( send1_opline )		1375208	0					
ANR	1377343	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1377344	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1377345	ArgumentList	send1_opline		1375208	1					
ANR	1377346	Argument	send1_opline		1375208	0					
ANR	1377347	Identifier	send1_opline		1375208	0					
ANR	1377348	Identifier	IS_CONST		1375208	1					
ANR	1377349	CompoundStatement		337:49:10642:10642	1375208	1					
ANR	1377350	ExpressionStatement	collect_constants = 0	379:5:12709:12730	1375208	0	True				
ANR	1377351	AssignmentExpression	collect_constants = 0		1375208	0		=			
ANR	1377352	Identifier	collect_constants		1375208	0					
ANR	1377353	PrimaryExpression	0		1375208	1					
ANR	1377354	BreakStatement	break ;	380:5:12737:12742	1375208	1	True				
ANR	1377355	ExpressionStatement	init_opline = send1_opline - 1	383:3:12758:12788	1375208	6	True				
ANR	1377356	AssignmentExpression	init_opline = send1_opline - 1		1375208	0		=			
ANR	1377357	Identifier	init_opline		1375208	0					
ANR	1377358	AdditiveExpression	send1_opline - 1		1375208	1		-			
ANR	1377359	Identifier	send1_opline		1375208	0					
ANR	1377360	PrimaryExpression	1		1375208	1					
ANR	1377361	WhileStatement	while ( init_opline -> opcode == ZEND_NOP )		1375208	7					
ANR	1377362	Condition	init_opline -> opcode == ZEND_NOP	384:10:12800:12830	1375208	0	True				
ANR	1377363	EqualityExpression	init_opline -> opcode == ZEND_NOP		1375208	0		==			
ANR	1377364	PtrMemberAccess	init_opline -> opcode		1375208	0					
ANR	1377365	Identifier	init_opline		1375208	0					
ANR	1377366	Identifier	opcode		1375208	1					
ANR	1377367	Identifier	ZEND_NOP		1375208	1					
ANR	1377368	CompoundStatement		344:43:10837:10837	1375208	1					
ANR	1377369	ExpressionStatement	init_opline --	385:4:12839:12852	1375208	0	True				
ANR	1377370	PostIncDecOperationExpression	init_opline --		1375208	0					
ANR	1377371	Identifier	init_opline		1375208	0					
ANR	1377372	IncDec	--		1375208	1					
ANR	1377373	IfStatement	if ( init_opline -> opcode != ZEND_INIT_FCALL || ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING )		1375208	8					
ANR	1377374	Condition	init_opline -> opcode != ZEND_INIT_FCALL || ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING	387:7:12866:13013	1375208	0	True				
ANR	1377375	OrExpression	init_opline -> opcode != ZEND_INIT_FCALL || ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING		1375208	0		||			
ANR	1377376	EqualityExpression	init_opline -> opcode != ZEND_INIT_FCALL		1375208	0		!=			
ANR	1377377	PtrMemberAccess	init_opline -> opcode		1375208	0					
ANR	1377378	Identifier	init_opline		1375208	0					
ANR	1377379	Identifier	opcode		1375208	1					
ANR	1377380	Identifier	ZEND_INIT_FCALL		1375208	1					
ANR	1377381	OrExpression	ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING		1375208	1		||			
ANR	1377382	EqualityExpression	ZEND_OP2_TYPE ( init_opline ) != IS_CONST		1375208	0		!=			
ANR	1377383	CallExpression	ZEND_OP2_TYPE ( init_opline )		1375208	0					
ANR	1377384	Callee	ZEND_OP2_TYPE		1375208	0					
ANR	1377385	Identifier	ZEND_OP2_TYPE		1375208	0					
ANR	1377386	ArgumentList	init_opline		1375208	1					
ANR	1377387	Argument	init_opline		1375208	0					
ANR	1377388	Identifier	init_opline		1375208	0					
ANR	1377389	Identifier	IS_CONST		1375208	1					
ANR	1377390	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING		1375208	1		!=			
ANR	1377391	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377392	Callee	Z_TYPE		1375208	0					
ANR	1377393	Identifier	Z_TYPE		1375208	0					
ANR	1377394	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377395	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377396	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377397	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377398	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377399	ArgumentList	init_opline		1375208	1					
ANR	1377400	Argument	init_opline		1375208	0					
ANR	1377401	Identifier	init_opline		1375208	0					
ANR	1377402	Identifier	IS_STRING		1375208	1					
ANR	1377403	CompoundStatement		349:59:11020:11020	1375208	1					
ANR	1377404	ExpressionStatement	collect_constants = 0	391:4:13085:13106	1375208	0	True				
ANR	1377405	AssignmentExpression	collect_constants = 0		1375208	0		=			
ANR	1377406	Identifier	collect_constants		1375208	0					
ANR	1377407	PrimaryExpression	0		1375208	1					
ANR	1377408	BreakStatement	break ;	392:4:13112:13117	1375208	1	True				
ANR	1377409	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1 && zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0 )"		1375208	9					
ANR	1377410	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1 && zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0"	396:7:13165:13375	1375208	0	True				
ANR	1377411	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1 && zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0"		1375208	0		&&			
ANR	1377412	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1"		1375208	0		==			
ANR	1377413	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377414	Callee	Z_STRLEN		1375208	0					
ANR	1377415	Identifier	Z_STRLEN		1375208	0					
ANR	1377416	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377417	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377418	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377419	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377420	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377421	ArgumentList	init_opline		1375208	1					
ANR	1377422	Argument	init_opline		1375208	0					
ANR	1377423	Identifier	init_opline		1375208	0					
ANR	1377424	AdditiveExpression	"sizeof ( ""define"" ) - 1"		1375208	1		-			
ANR	1377425	SizeofExpression	"sizeof ( ""define"" )"		1375208	0					
ANR	1377426	Sizeof	sizeof		1375208	0					
ANR	1377427	PrimaryExpression	"""define"""		1375208	1					
ANR	1377428	PrimaryExpression	1		1375208	1					
ANR	1377429	EqualityExpression	"zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0"		1375208	1		==			
ANR	1377430	CallExpression	"zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 )"		1375208	0					
ANR	1377431	Callee	zend_binary_strcasecmp		1375208	0					
ANR	1377432	Identifier	zend_binary_strcasecmp		1375208	0					
ANR	1377433	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1377434	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377435	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377436	Callee	Z_STRVAL		1375208	0					
ANR	1377437	Identifier	Z_STRVAL		1375208	0					
ANR	1377438	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377439	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377440	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377441	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377442	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377443	ArgumentList	init_opline		1375208	1					
ANR	1377444	Argument	init_opline		1375208	0					
ANR	1377445	Identifier	init_opline		1375208	0					
ANR	1377446	Argument	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1377447	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377448	Callee	Z_STRLEN		1375208	0					
ANR	1377449	Identifier	Z_STRLEN		1375208	0					
ANR	1377450	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377451	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377452	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377453	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377454	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377455	ArgumentList	init_opline		1375208	1					
ANR	1377456	Argument	init_opline		1375208	0					
ANR	1377457	Identifier	init_opline		1375208	0					
ANR	1377458	Argument	"""define"""		1375208	2					
ANR	1377459	PrimaryExpression	"""define"""		1375208	0					
ANR	1377460	Argument	"sizeof ( ""define"" ) - 1"		1375208	3					
ANR	1377461	AdditiveExpression	"sizeof ( ""define"" ) - 1"		1375208	0		-			
ANR	1377462	SizeofExpression	"sizeof ( ""define"" )"		1375208	0					
ANR	1377463	Sizeof	sizeof		1375208	0					
ANR	1377464	PrimaryExpression	"""define"""		1375208	1					
ANR	1377465	PrimaryExpression	1		1375208	1					
ANR	1377466	PrimaryExpression	0		1375208	1					
ANR	1377467	CompoundStatement		357:148:11382:11382	1375208	1					
ANR	1377468	IfStatement	if ( Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING && send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING )		1375208	0					
ANR	1377469	Condition	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING && send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING	399:8:13389:13526	1375208	0	True				
ANR	1377470	AndExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING && send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING		1375208	0		&&			
ANR	1377471	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING		1375208	0		==			
ANR	1377472	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377473	Callee	Z_TYPE		1375208	0					
ANR	1377474	Identifier	Z_TYPE		1375208	0					
ANR	1377475	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377476	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377477	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377478	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377479	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377480	ArgumentList	send1_opline		1375208	1					
ANR	1377481	Argument	send1_opline		1375208	0					
ANR	1377482	Identifier	send1_opline		1375208	0					
ANR	1377483	Identifier	IS_STRING		1375208	1					
ANR	1377484	AndExpression	send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING		1375208	1		&&			
ANR	1377485	Identifier	send2_opline		1375208	0					
ANR	1377486	RelationalExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING		1375208	1		<=			
ANR	1377487	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) )		1375208	0					
ANR	1377488	Callee	Z_TYPE		1375208	0					
ANR	1377489	Identifier	Z_TYPE		1375208	0					
ANR	1377490	ArgumentList	ZEND_OP1_LITERAL ( send2_opline )		1375208	1					
ANR	1377491	Argument	ZEND_OP1_LITERAL ( send2_opline )		1375208	0					
ANR	1377492	CallExpression	ZEND_OP1_LITERAL ( send2_opline )		1375208	0					
ANR	1377493	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377494	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377495	ArgumentList	send2_opline		1375208	1					
ANR	1377496	Argument	send2_opline		1375208	0					
ANR	1377497	Identifier	send2_opline		1375208	0					
ANR	1377498	Identifier	IS_STRING		1375208	1					
ANR	1377499	CompoundStatement		361:61:11533:11533	1375208	1					
ANR	1377500	IfStatement	if ( collect_constants )		1375208	0					
ANR	1377501	Condition	collect_constants	403:9:13541:13557	1375208	0	True				
ANR	1377502	Identifier	collect_constants		1375208	0					
ANR	1377503	CompoundStatement		363:28:11564:11564	1375208	1					
ANR	1377504	ExpressionStatement	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( send1_opline ) , & ZEND_OP1_LITERAL ( send2_opline ) )"	404:6:13568:13670	1375208	0	True				
ANR	1377505	CallExpression	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( send1_opline ) , & ZEND_OP1_LITERAL ( send2_opline ) )"		1375208	0					
ANR	1377506	Callee	zend_optimizer_collect_constant		1375208	0					
ANR	1377507	Identifier	zend_optimizer_collect_constant		1375208	0					
ANR	1377508	ArgumentList	ctx		1375208	1					
ANR	1377509	Argument	ctx		1375208	0					
ANR	1377510	Identifier	ctx		1375208	0					
ANR	1377511	Argument	& ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377512	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377513	UnaryOperator	&		1375208	0					
ANR	1377514	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377515	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377516	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377517	ArgumentList	send1_opline		1375208	1					
ANR	1377518	Argument	send1_opline		1375208	0					
ANR	1377519	Identifier	send1_opline		1375208	0					
ANR	1377520	Argument	& ZEND_OP1_LITERAL ( send2_opline )		1375208	2					
ANR	1377521	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send2_opline )		1375208	0					
ANR	1377522	UnaryOperator	&		1375208	0					
ANR	1377523	CallExpression	ZEND_OP1_LITERAL ( send2_opline )		1375208	1					
ANR	1377524	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377525	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377526	ArgumentList	send2_opline		1375208	1					
ANR	1377527	Argument	send2_opline		1375208	0					
ANR	1377528	Identifier	send2_opline		1375208	0					
ANR	1377529	IfStatement	"if ( RESULT_UNUSED ( opline ) && ! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) ) )"		1375208	1					
ANR	1377530	Condition	"RESULT_UNUSED ( opline ) && ! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"	407:9:13689:13886	1375208	0	True				
ANR	1377531	AndExpression	"RESULT_UNUSED ( opline ) && ! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	0		&&			
ANR	1377532	CallExpression	RESULT_UNUSED ( opline )		1375208	0					
ANR	1377533	Callee	RESULT_UNUSED		1375208	0					
ANR	1377534	Identifier	RESULT_UNUSED		1375208	0					
ANR	1377535	ArgumentList	opline		1375208	1					
ANR	1377536	Argument	opline		1375208	0					
ANR	1377537	Identifier	opline		1375208	0					
ANR	1377538	UnaryOperationExpression	"! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	1					
ANR	1377539	UnaryOperator	!		1375208	0					
ANR	1377540	CallExpression	"zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	1					
ANR	1377541	Callee	zend_memnstr		1375208	0					
ANR	1377542	Identifier	zend_memnstr		1375208	0					
ANR	1377543	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1377544	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377545	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377546	Callee	Z_STRVAL		1375208	0					
ANR	1377547	Identifier	Z_STRVAL		1375208	0					
ANR	1377548	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377549	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377550	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377551	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377552	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377553	ArgumentList	send1_opline		1375208	1					
ANR	1377554	Argument	send1_opline		1375208	0					
ANR	1377555	Identifier	send1_opline		1375208	0					
ANR	1377556	Argument	"""::"""		1375208	1					
ANR	1377557	PrimaryExpression	"""::"""		1375208	0					
ANR	1377558	Argument	"sizeof ( ""::"" ) - 1"		1375208	2					
ANR	1377559	AdditiveExpression	"sizeof ( ""::"" ) - 1"		1375208	0		-			
ANR	1377560	SizeofExpression	"sizeof ( ""::"" )"		1375208	0					
ANR	1377561	Sizeof	sizeof		1375208	0					
ANR	1377562	PrimaryExpression	"""::"""		1375208	1					
ANR	1377563	PrimaryExpression	1		1375208	1					
ANR	1377564	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	3					
ANR	1377565	AdditiveExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0		+			
ANR	1377566	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377567	Callee	Z_STRVAL		1375208	0					
ANR	1377568	Identifier	Z_STRVAL		1375208	0					
ANR	1377569	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377570	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377571	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377572	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377573	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377574	ArgumentList	send1_opline		1375208	1					
ANR	1377575	Argument	send1_opline		1375208	0					
ANR	1377576	Identifier	send1_opline		1375208	0					
ANR	1377577	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1377578	Callee	Z_STRLEN		1375208	0					
ANR	1377579	Identifier	Z_STRLEN		1375208	0					
ANR	1377580	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377581	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377582	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377583	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377584	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377585	ArgumentList	send1_opline		1375208	1					
ANR	1377586	Argument	send1_opline		1375208	0					
ANR	1377587	Identifier	send1_opline		1375208	0					
ANR	1377588	CompoundStatement		368:175:11893:11893	1375208	1					
ANR	1377589	ExpressionStatement	opline -> opcode = ZEND_DECLARE_CONST	410:6:13898:13933	1375208	0	True				
ANR	1377590	AssignmentExpression	opline -> opcode = ZEND_DECLARE_CONST		1375208	0		=			
ANR	1377591	PtrMemberAccess	opline -> opcode		1375208	0					
ANR	1377592	Identifier	opline		1375208	0					
ANR	1377593	Identifier	opcode		1375208	1					
ANR	1377594	Identifier	ZEND_DECLARE_CONST		1375208	1					
ANR	1377595	ExpressionStatement	opline -> op1_type = IS_CONST	411:6:13941:13968	1375208	1	True				
ANR	1377596	AssignmentExpression	opline -> op1_type = IS_CONST		1375208	0		=			
ANR	1377597	PtrMemberAccess	opline -> op1_type		1375208	0					
ANR	1377598	Identifier	opline		1375208	0					
ANR	1377599	Identifier	op1_type		1375208	1					
ANR	1377600	Identifier	IS_CONST		1375208	1					
ANR	1377601	ExpressionStatement	opline -> op2_type = IS_CONST	412:6:13976:14003	1375208	2	True				
ANR	1377602	AssignmentExpression	opline -> op2_type = IS_CONST		1375208	0		=			
ANR	1377603	PtrMemberAccess	opline -> op2_type		1375208	0					
ANR	1377604	Identifier	opline		1375208	0					
ANR	1377605	Identifier	op2_type		1375208	1					
ANR	1377606	Identifier	IS_CONST		1375208	1					
ANR	1377607	ExpressionStatement	opline -> result_type = IS_UNUSED	413:6:14011:14042	1375208	3	True				
ANR	1377608	AssignmentExpression	opline -> result_type = IS_UNUSED		1375208	0		=			
ANR	1377609	PtrMemberAccess	opline -> result_type		1375208	0					
ANR	1377610	Identifier	opline		1375208	0					
ANR	1377611	Identifier	result_type		1375208	1					
ANR	1377612	Identifier	IS_UNUSED		1375208	1					
ANR	1377613	ExpressionStatement	opline -> op1 . constant = send1_opline -> op1 . constant	414:6:14050:14099	1375208	4	True				
ANR	1377614	AssignmentExpression	opline -> op1 . constant = send1_opline -> op1 . constant		1375208	0		=			
ANR	1377615	MemberAccess	opline -> op1 . constant		1375208	0					
ANR	1377616	PtrMemberAccess	opline -> op1		1375208	0					
ANR	1377617	Identifier	opline		1375208	0					
ANR	1377618	Identifier	op1		1375208	1					
ANR	1377619	Identifier	constant		1375208	1					
ANR	1377620	MemberAccess	send1_opline -> op1 . constant		1375208	1					
ANR	1377621	PtrMemberAccess	send1_opline -> op1		1375208	0					
ANR	1377622	Identifier	send1_opline		1375208	0					
ANR	1377623	Identifier	op1		1375208	1					
ANR	1377624	Identifier	constant		1375208	1					
ANR	1377625	ExpressionStatement	opline -> op2 . constant = send2_opline -> op1 . constant	415:6:14107:14156	1375208	5	True				
ANR	1377626	AssignmentExpression	opline -> op2 . constant = send2_opline -> op1 . constant		1375208	0		=			
ANR	1377627	MemberAccess	opline -> op2 . constant		1375208	0					
ANR	1377628	PtrMemberAccess	opline -> op2		1375208	0					
ANR	1377629	Identifier	opline		1375208	0					
ANR	1377630	Identifier	op2		1375208	1					
ANR	1377631	Identifier	constant		1375208	1					
ANR	1377632	MemberAccess	send2_opline -> op1 . constant		1375208	1					
ANR	1377633	PtrMemberAccess	send2_opline -> op1		1375208	0					
ANR	1377634	Identifier	send2_opline		1375208	0					
ANR	1377635	Identifier	op1		1375208	1					
ANR	1377636	Identifier	constant		1375208	1					
ANR	1377637	ExpressionStatement	opline -> result . num = 0	416:6:14164:14186	1375208	6	True				
ANR	1377638	AssignmentExpression	opline -> result . num = 0		1375208	0		=			
ANR	1377639	MemberAccess	opline -> result . num		1375208	0					
ANR	1377640	PtrMemberAccess	opline -> result		1375208	0					
ANR	1377641	Identifier	opline		1375208	0					
ANR	1377642	Identifier	result		1375208	1					
ANR	1377643	Identifier	num		1375208	1					
ANR	1377644	PrimaryExpression	0		1375208	1					
ANR	1377645	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	418:6:14195:14239	1375208	7	True				
ANR	1377646	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377647	Callee	literal_dtor		1375208	0					
ANR	1377648	Identifier	literal_dtor		1375208	0					
ANR	1377649	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377650	Argument	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377651	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377652	UnaryOperator	&		1375208	0					
ANR	1377653	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377654	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377655	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377656	ArgumentList	init_opline		1375208	1					
ANR	1377657	Argument	init_opline		1375208	0					
ANR	1377658	Identifier	init_opline		1375208	0					
ANR	1377659	ExpressionStatement	MAKE_NOP ( init_opline )	419:6:14247:14268	1375208	8	True				
ANR	1377660	CallExpression	MAKE_NOP ( init_opline )		1375208	0					
ANR	1377661	Callee	MAKE_NOP		1375208	0					
ANR	1377662	Identifier	MAKE_NOP		1375208	0					
ANR	1377663	ArgumentList	init_opline		1375208	1					
ANR	1377664	Argument	init_opline		1375208	0					
ANR	1377665	Identifier	init_opline		1375208	0					
ANR	1377666	ExpressionStatement	MAKE_NOP ( send1_opline )	420:6:14276:14298	1375208	9	True				
ANR	1377667	CallExpression	MAKE_NOP ( send1_opline )		1375208	0					
ANR	1377668	Callee	MAKE_NOP		1375208	0					
ANR	1377669	Identifier	MAKE_NOP		1375208	0					
ANR	1377670	ArgumentList	send1_opline		1375208	1					
ANR	1377671	Argument	send1_opline		1375208	0					
ANR	1377672	Identifier	send1_opline		1375208	0					
ANR	1377673	ExpressionStatement	MAKE_NOP ( send2_opline )	421:6:14306:14328	1375208	10	True				
ANR	1377674	CallExpression	MAKE_NOP ( send2_opline )		1375208	0					
ANR	1377675	Callee	MAKE_NOP		1375208	0					
ANR	1377676	Identifier	MAKE_NOP		1375208	0					
ANR	1377677	ArgumentList	send2_opline		1375208	1					
ANR	1377678	Argument	send2_opline		1375208	0					
ANR	1377679	Identifier	send2_opline		1375208	0					
ANR	1377680	BreakStatement	break ;	423:5:14342:14347	1375208	2	True				
ANR	1377681	IfStatement	if ( ! send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING )		1375208	10					
ANR	1377682	Condition	! send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING	434:7:14520:14594	1375208	0	True				
ANR	1377683	AndExpression	! send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING		1375208	0		&&			
ANR	1377684	UnaryOperationExpression	! send2_opline		1375208	0					
ANR	1377685	UnaryOperator	!		1375208	0					
ANR	1377686	Identifier	send2_opline		1375208	1					
ANR	1377687	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING		1375208	1		==			
ANR	1377688	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377689	Callee	Z_TYPE		1375208	0					
ANR	1377690	Identifier	Z_TYPE		1375208	0					
ANR	1377691	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377692	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377693	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377694	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377695	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377696	ArgumentList	send1_opline		1375208	1					
ANR	1377697	Argument	send1_opline		1375208	0					
ANR	1377698	Identifier	send1_opline		1375208	0					
ANR	1377699	Identifier	IS_STRING		1375208	1					
ANR	1377700	CompoundStatement		395:60:12601:12601	1375208	1					
ANR	1377701	IfStatement	"if ( ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) ) || ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) ) )"		1375208	0					
ANR	1377702	Condition	"( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) ) || ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) )"	436:8:14607:15141	1375208	0	True				
ANR	1377703	OrExpression	"( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) ) || ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) )"		1375208	0		||			
ANR	1377704	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		1375208	0		&&			
ANR	1377705	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1"		1375208	0		==			
ANR	1377706	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377707	Callee	Z_STRLEN		1375208	0					
ANR	1377708	Identifier	Z_STRLEN		1375208	0					
ANR	1377709	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377710	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377711	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377712	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377713	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377714	ArgumentList	init_opline		1375208	1					
ANR	1377715	Argument	init_opline		1375208	0					
ANR	1377716	Identifier	init_opline		1375208	0					
ANR	1377717	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		1375208	1		-			
ANR	1377718	SizeofExpression	"sizeof ( ""function_exists"" )"		1375208	0					
ANR	1377719	Sizeof	sizeof		1375208	0					
ANR	1377720	PrimaryExpression	"""function_exists"""		1375208	1					
ANR	1377721	PrimaryExpression	1		1375208	1					
ANR	1377722	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		1375208	1		&&			
ANR	1377723	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		1375208	0					
ANR	1377724	UnaryOperator	!		1375208	0					
ANR	1377725	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		1375208	1					
ANR	1377726	Callee	memcmp		1375208	0					
ANR	1377727	Identifier	memcmp		1375208	0					
ANR	1377728	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1377729	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377730	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377731	Callee	Z_STRVAL		1375208	0					
ANR	1377732	Identifier	Z_STRVAL		1375208	0					
ANR	1377733	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377734	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377735	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377736	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377737	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377738	ArgumentList	init_opline		1375208	1					
ANR	1377739	Argument	init_opline		1375208	0					
ANR	1377740	Identifier	init_opline		1375208	0					
ANR	1377741	Argument	"""function_exists"""		1375208	1					
ANR	1377742	PrimaryExpression	"""function_exists"""		1375208	0					
ANR	1377743	Argument	"sizeof ( ""function_exists"" ) - 1"		1375208	2					
ANR	1377744	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		1375208	0		-			
ANR	1377745	SizeofExpression	"sizeof ( ""function_exists"" )"		1375208	0					
ANR	1377746	Sizeof	sizeof		1375208	0					
ANR	1377747	PrimaryExpression	"""function_exists"""		1375208	1					
ANR	1377748	PrimaryExpression	1		1375208	1					
ANR	1377749	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		1375208	1					
ANR	1377750	UnaryOperator	!		1375208	0					
ANR	1377751	CallExpression	"zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		1375208	1					
ANR	1377752	Callee	zend_optimizer_is_disabled_func		1375208	0					
ANR	1377753	Identifier	zend_optimizer_is_disabled_func		1375208	0					
ANR	1377754	ArgumentList	"""function_exists"""		1375208	1					
ANR	1377755	Argument	"""function_exists"""		1375208	0					
ANR	1377756	PrimaryExpression	"""function_exists"""		1375208	0					
ANR	1377757	Argument	"sizeof ( ""function_exists"" ) - 1"		1375208	1					
ANR	1377758	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		1375208	0		-			
ANR	1377759	SizeofExpression	"sizeof ( ""function_exists"" )"		1375208	0					
ANR	1377760	Sizeof	sizeof		1375208	0					
ANR	1377761	PrimaryExpression	"""function_exists"""		1375208	1					
ANR	1377762	PrimaryExpression	1		1375208	1					
ANR	1377763	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		1375208	1		&&			
ANR	1377764	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1"		1375208	0		==			
ANR	1377765	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377766	Callee	Z_STRLEN		1375208	0					
ANR	1377767	Identifier	Z_STRLEN		1375208	0					
ANR	1377768	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377769	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377770	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377771	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377772	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377773	ArgumentList	init_opline		1375208	1					
ANR	1377774	Argument	init_opline		1375208	0					
ANR	1377775	Identifier	init_opline		1375208	0					
ANR	1377776	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		1375208	1		-			
ANR	1377777	SizeofExpression	"sizeof ( ""is_callable"" )"		1375208	0					
ANR	1377778	Sizeof	sizeof		1375208	0					
ANR	1377779	PrimaryExpression	"""is_callable"""		1375208	1					
ANR	1377780	PrimaryExpression	1		1375208	1					
ANR	1377781	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		1375208	1		&&			
ANR	1377782	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) )"		1375208	0					
ANR	1377783	UnaryOperator	!		1375208	0					
ANR	1377784	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) )"		1375208	1					
ANR	1377785	Callee	memcmp		1375208	0					
ANR	1377786	Identifier	memcmp		1375208	0					
ANR	1377787	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1377788	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377789	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377790	Callee	Z_STRVAL		1375208	0					
ANR	1377791	Identifier	Z_STRVAL		1375208	0					
ANR	1377792	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377793	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377794	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377795	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377796	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377797	ArgumentList	init_opline		1375208	1					
ANR	1377798	Argument	init_opline		1375208	0					
ANR	1377799	Identifier	init_opline		1375208	0					
ANR	1377800	Argument	"""is_callable"""		1375208	1					
ANR	1377801	PrimaryExpression	"""is_callable"""		1375208	0					
ANR	1377802	Argument	"sizeof ( ""is_callable"" )"		1375208	2					
ANR	1377803	SizeofExpression	"sizeof ( ""is_callable"" )"		1375208	0					
ANR	1377804	Sizeof	sizeof		1375208	0					
ANR	1377805	PrimaryExpression	"""is_callable"""		1375208	1					
ANR	1377806	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		1375208	1					
ANR	1377807	UnaryOperator	!		1375208	0					
ANR	1377808	CallExpression	"zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		1375208	1					
ANR	1377809	Callee	zend_optimizer_is_disabled_func		1375208	0					
ANR	1377810	Identifier	zend_optimizer_is_disabled_func		1375208	0					
ANR	1377811	ArgumentList	"""is_callable"""		1375208	1					
ANR	1377812	Argument	"""is_callable"""		1375208	0					
ANR	1377813	PrimaryExpression	"""is_callable"""		1375208	0					
ANR	1377814	Argument	"sizeof ( ""is_callable"" ) - 1"		1375208	1					
ANR	1377815	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		1375208	0		-			
ANR	1377816	SizeofExpression	"sizeof ( ""is_callable"" )"		1375208	0					
ANR	1377817	Sizeof	sizeof		1375208	0					
ANR	1377818	PrimaryExpression	"""is_callable"""		1375208	1					
ANR	1377819	PrimaryExpression	1		1375208	1					
ANR	1377820	CompoundStatement		405:5:13190:13279	1375208	1					
ANR	1377821	IdentifierDeclStatement	zend_internal_function * func ;	444:5:15151:15179	1375208	0	True				
ANR	1377822	IdentifierDecl	* func		1375208	0					
ANR	1377823	IdentifierDeclType	zend_internal_function *		1375208	0					
ANR	1377824	Identifier	func		1375208	1					
ANR	1377825	IdentifierDeclStatement	zend_string * lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) ) ;	445:5:15186:15275	1375208	1	True				
ANR	1377826	IdentifierDecl	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		1375208	0					
ANR	1377827	IdentifierDeclType	zend_string *		1375208	0					
ANR	1377828	Identifier	lc_name		1375208	1					
ANR	1377829	AssignmentExpression	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		1375208	2		=			
ANR	1377830	Identifier	lc_name		1375208	0					
ANR	1377831	CallExpression	zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		1375208	1					
ANR	1377832	Callee	zend_string_tolower		1375208	0					
ANR	1377833	Identifier	zend_string_tolower		1375208	0					
ANR	1377834	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1377835	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377836	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377837	Callee	Z_STR		1375208	0					
ANR	1377838	Identifier	Z_STR		1375208	0					
ANR	1377839	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377840	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377841	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377842	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1377843	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1377844	ArgumentList	send1_opline		1375208	1					
ANR	1377845	Argument	send1_opline		1375208	0					
ANR	1377846	Identifier	send1_opline		1375208	0					
ANR	1377847	Statement	if	448:5:15283:15284	1375208	2	True				
ANR	1377848	Statement	(	448:8:15286:15286	1375208	3	True				
ANR	1377849	Statement	(	448:9:15287:15287	1375208	4	True				
ANR	1377850	Statement	func	448:10:15288:15291	1375208	5	True				
ANR	1377851	Statement	=	448:15:15293:15293	1375208	6	True				
ANR	1377852	Statement	zend_hash_find_ptr	448:17:15295:15312	1375208	7	True				
ANR	1377853	Statement	(	448:35:15313:15313	1375208	8	True				
ANR	1377854	Statement	EG	448:36:15314:15315	1375208	9	True				
ANR	1377855	Statement	(	448:38:15316:15316	1375208	10	True				
ANR	1377856	Statement	function_table	448:39:15317:15330	1375208	11	True				
ANR	1377857	Statement	)	448:53:15331:15331	1375208	12	True				
ANR	1377858	Statement	","	448:54:15332:15332	1375208	13	True				
ANR	1377859	Statement	lc_name	448:56:15334:15340	1375208	14	True				
ANR	1377860	Statement	)	448:63:15341:15341	1375208	15	True				
ANR	1377861	Statement	)	448:64:15342:15342	1375208	16	True				
ANR	1377862	Statement	!=	448:66:15344:15345	1375208	17	True				
ANR	1377863	Statement	NULL	448:69:15347:15350	1375208	18	True				
ANR	1377864	Statement	&&	449:7:15359:15360	1375208	19	True				
ANR	1377865	Statement	func	449:10:15362:15365	1375208	20	True				
ANR	1377866	Statement	->	449:14:15366:15367	1375208	21	True				
ANR	1377867	Statement	type	449:16:15368:15371	1375208	22	True				
ANR	1377868	Statement	==	449:21:15373:15374	1375208	23	True				
ANR	1377869	Statement	ZEND_INTERNAL_FUNCTION	449:24:15376:15397	1375208	24	True				
ANR	1377870	Statement	&&	450:7:15406:15407	1375208	25	True				
ANR	1377871	Statement	func	450:10:15409:15412	1375208	26	True				
ANR	1377872	Statement	->	450:14:15413:15414	1375208	27	True				
ANR	1377873	Statement	module	450:16:15415:15420	1375208	28	True				
ANR	1377874	Statement	->	450:22:15421:15422	1375208	29	True				
ANR	1377875	Statement	type	450:24:15423:15426	1375208	30	True				
ANR	1377876	Statement	==	450:29:15428:15429	1375208	31	True				
ANR	1377877	Statement	MODULE_PERSISTENT	450:32:15431:15447	1375208	32	True				
ANR	1377878	Statement	&&	452:7:15474:15475	1375208	33	True				
ANR	1377879	Statement	func	452:10:15477:15480	1375208	34	True				
ANR	1377880	Statement	->	452:14:15481:15482	1375208	35	True				
ANR	1377881	Statement	module	452:16:15483:15488	1375208	36	True				
ANR	1377882	Statement	->	452:22:15489:15490	1375208	37	True				
ANR	1377883	Statement	handle	452:24:15491:15496	1375208	38	True				
ANR	1377884	Statement	==	452:31:15498:15499	1375208	39	True				
ANR	1377885	Statement	NULL	452:34:15501:15504	1375208	40	True				
ANR	1377886	Statement	)	454:6:15519:15519	1375208	41	True				
ANR	1377887	CompoundStatement		415:6:13533:13539	1375208	42					
ANR	1377888	IdentifierDeclStatement	zval t ;	455:6:15529:15535	1375208	0	True				
ANR	1377889	IdentifierDecl	t		1375208	0					
ANR	1377890	IdentifierDeclType	zval		1375208	0					
ANR	1377891	Identifier	t		1375208	1					
ANR	1377892	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 || func -> handler != ZEND_FN ( display_disabled_function ) )"		1375208	1					
ANR	1377893	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 || func -> handler != ZEND_FN ( display_disabled_function )"	456:10:15547:15677	1375208	0	True				
ANR	1377894	OrExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 || func -> handler != ZEND_FN ( display_disabled_function )"		1375208	0		||			
ANR	1377895	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1"		1375208	0		==			
ANR	1377896	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377897	Callee	Z_STRLEN		1375208	0					
ANR	1377898	Identifier	Z_STRLEN		1375208	0					
ANR	1377899	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377900	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377901	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377902	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377903	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377904	ArgumentList	init_opline		1375208	1					
ANR	1377905	Argument	init_opline		1375208	0					
ANR	1377906	Identifier	init_opline		1375208	0					
ANR	1377907	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		1375208	1		-			
ANR	1377908	SizeofExpression	"sizeof ( ""is_callable"" )"		1375208	0					
ANR	1377909	Sizeof	sizeof		1375208	0					
ANR	1377910	PrimaryExpression	"""is_callable"""		1375208	1					
ANR	1377911	PrimaryExpression	1		1375208	1					
ANR	1377912	EqualityExpression	func -> handler != ZEND_FN ( display_disabled_function )		1375208	1		!=			
ANR	1377913	PtrMemberAccess	func -> handler		1375208	0					
ANR	1377914	Identifier	func		1375208	0					
ANR	1377915	Identifier	handler		1375208	1					
ANR	1377916	CallExpression	ZEND_FN ( display_disabled_function )		1375208	1					
ANR	1377917	Callee	ZEND_FN		1375208	0					
ANR	1377918	Identifier	ZEND_FN		1375208	0					
ANR	1377919	ArgumentList	display_disabled_function		1375208	1					
ANR	1377920	Argument	display_disabled_function		1375208	0					
ANR	1377921	Identifier	display_disabled_function		1375208	0					
ANR	1377922	CompoundStatement		417:61:13684:13684	1375208	1					
ANR	1377923	ExpressionStatement	ZVAL_TRUE ( & t )	458:7:15689:15702	1375208	0	True				
ANR	1377924	CallExpression	ZVAL_TRUE ( & t )		1375208	0					
ANR	1377925	Callee	ZVAL_TRUE		1375208	0					
ANR	1377926	Identifier	ZVAL_TRUE		1375208	0					
ANR	1377927	ArgumentList	& t		1375208	1					
ANR	1377928	Argument	& t		1375208	0					
ANR	1377929	UnaryOperationExpression	& t		1375208	0					
ANR	1377930	UnaryOperator	&		1375208	0					
ANR	1377931	Identifier	t		1375208	1					
ANR	1377932	ElseStatement	else		1375208	0					
ANR	1377933	CompoundStatement		419:13:13721:13721	1375208	0					
ANR	1377934	ExpressionStatement	ZVAL_FALSE ( & t )	460:7:15726:15740	1375208	0	True				
ANR	1377935	CallExpression	ZVAL_FALSE ( & t )		1375208	0					
ANR	1377936	Callee	ZVAL_FALSE		1375208	0					
ANR	1377937	Identifier	ZVAL_FALSE		1375208	0					
ANR	1377938	ArgumentList	& t		1375208	1					
ANR	1377939	Argument	& t		1375208	0					
ANR	1377940	UnaryOperationExpression	& t		1375208	0					
ANR	1377941	UnaryOperator	&		1375208	0					
ANR	1377942	Identifier	t		1375208	1					
ANR	1377943	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		1375208	2					
ANR	1377944	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	462:10:15760:15849	1375208	0	True				
ANR	1377945	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		1375208	0					
ANR	1377946	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1377947	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1377948	ArgumentList	op_array		1375208	1					
ANR	1377949	Argument	op_array		1375208	0					
ANR	1377950	Identifier	op_array		1375208	0					
ANR	1377951	Argument	opline + 1		1375208	1					
ANR	1377952	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1377953	Identifier	opline		1375208	0					
ANR	1377954	PrimaryExpression	1		1375208	1					
ANR	1377955	Argument	IS_VAR		1375208	2					
ANR	1377956	Identifier	IS_VAR		1375208	0					
ANR	1377957	Argument	ZEND_RESULT ( opline ) . var		1375208	3					
ANR	1377958	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1377959	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1377960	Callee	ZEND_RESULT		1375208	0					
ANR	1377961	Identifier	ZEND_RESULT		1375208	0					
ANR	1377962	ArgumentList	opline		1375208	1					
ANR	1377963	Argument	opline		1375208	0					
ANR	1377964	Identifier	opline		1375208	0					
ANR	1377965	Identifier	var		1375208	1					
ANR	1377966	Argument	& t		1375208	4					
ANR	1377967	UnaryOperationExpression	& t		1375208	0					
ANR	1377968	UnaryOperator	&		1375208	0					
ANR	1377969	Identifier	t		1375208	1					
ANR	1377970	CompoundStatement		422:102:13856:13856	1375208	1					
ANR	1377971	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	463:7:15861:15905	1375208	0	True				
ANR	1377972	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1377973	Callee	literal_dtor		1375208	0					
ANR	1377974	Identifier	literal_dtor		1375208	0					
ANR	1377975	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377976	Argument	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377977	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1377978	UnaryOperator	&		1375208	0					
ANR	1377979	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1377980	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1377981	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1377982	ArgumentList	init_opline		1375208	1					
ANR	1377983	Argument	init_opline		1375208	0					
ANR	1377984	Identifier	init_opline		1375208	0					
ANR	1377985	ExpressionStatement	MAKE_NOP ( init_opline )	464:7:15914:15935	1375208	1	True				
ANR	1377986	CallExpression	MAKE_NOP ( init_opline )		1375208	0					
ANR	1377987	Callee	MAKE_NOP		1375208	0					
ANR	1377988	Identifier	MAKE_NOP		1375208	0					
ANR	1377989	ArgumentList	init_opline		1375208	1					
ANR	1377990	Argument	init_opline		1375208	0					
ANR	1377991	Identifier	init_opline		1375208	0					
ANR	1377992	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	465:7:15944:15989	1375208	2	True				
ANR	1377993	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1377994	Callee	literal_dtor		1375208	0					
ANR	1377995	Identifier	literal_dtor		1375208	0					
ANR	1377996	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1377997	Argument	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377998	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1377999	UnaryOperator	&		1375208	0					
ANR	1378000	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378001	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378002	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378003	ArgumentList	send1_opline		1375208	1					
ANR	1378004	Argument	send1_opline		1375208	0					
ANR	1378005	Identifier	send1_opline		1375208	0					
ANR	1378006	ExpressionStatement	MAKE_NOP ( send1_opline )	466:7:15998:16020	1375208	3	True				
ANR	1378007	CallExpression	MAKE_NOP ( send1_opline )		1375208	0					
ANR	1378008	Callee	MAKE_NOP		1375208	0					
ANR	1378009	Identifier	MAKE_NOP		1375208	0					
ANR	1378010	ArgumentList	send1_opline		1375208	1					
ANR	1378011	Argument	send1_opline		1375208	0					
ANR	1378012	Identifier	send1_opline		1375208	0					
ANR	1378013	ExpressionStatement	MAKE_NOP ( opline )	467:7:16029:16045	1375208	4	True				
ANR	1378014	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1378015	Callee	MAKE_NOP		1375208	0					
ANR	1378016	Identifier	MAKE_NOP		1375208	0					
ANR	1378017	ArgumentList	opline		1375208	1					
ANR	1378018	Argument	opline		1375208	0					
ANR	1378019	Identifier	opline		1375208	0					
ANR	1378020	ExpressionStatement	zend_string_release ( lc_name )	468:7:16054:16082	1375208	5	True				
ANR	1378021	CallExpression	zend_string_release ( lc_name )		1375208	0					
ANR	1378022	Callee	zend_string_release		1375208	0					
ANR	1378023	Identifier	zend_string_release		1375208	0					
ANR	1378024	ArgumentList	lc_name		1375208	1					
ANR	1378025	Argument	lc_name		1375208	0					
ANR	1378026	Identifier	lc_name		1375208	0					
ANR	1378027	BreakStatement	break ;	469:7:16091:16096	1375208	6	True				
ANR	1378028	ExpressionStatement	zend_string_release ( lc_name )	472:5:16118:16146	1375208	43	True				
ANR	1378029	CallExpression	zend_string_release ( lc_name )		1375208	0					
ANR	1378030	Callee	zend_string_release		1375208	0					
ANR	1378031	Identifier	zend_string_release		1375208	0					
ANR	1378032	ArgumentList	lc_name		1375208	1					
ANR	1378033	Argument	lc_name		1375208	0					
ANR	1378034	Identifier	lc_name		1375208	0					
ANR	1378035	ElseStatement	else		1375208	0					
ANR	1378036	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 ) )"		1375208	0					
ANR	1378037	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"	510:15:17283:17514	1375208	0	True				
ANR	1378038	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		1375208	0		&&			
ANR	1378039	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1"		1375208	0		==			
ANR	1378040	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378041	Callee	Z_STRLEN		1375208	0					
ANR	1378042	Identifier	Z_STRLEN		1375208	0					
ANR	1378043	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378044	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378045	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378046	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378047	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378048	ArgumentList	init_opline		1375208	1					
ANR	1378049	Argument	init_opline		1375208	0					
ANR	1378050	Identifier	init_opline		1375208	0					
ANR	1378051	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		1375208	1		-			
ANR	1378052	SizeofExpression	"sizeof ( ""defined"" )"		1375208	0					
ANR	1378053	Sizeof	sizeof		1375208	0					
ANR	1378054	PrimaryExpression	"""defined"""		1375208	1					
ANR	1378055	PrimaryExpression	1		1375208	1					
ANR	1378056	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		1375208	1		&&			
ANR	1378057	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 )"		1375208	0					
ANR	1378058	UnaryOperator	!		1375208	0					
ANR	1378059	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 )"		1375208	1					
ANR	1378060	Callee	memcmp		1375208	0					
ANR	1378061	Identifier	memcmp		1375208	0					
ANR	1378062	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1378063	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378064	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378065	Callee	Z_STRVAL		1375208	0					
ANR	1378066	Identifier	Z_STRVAL		1375208	0					
ANR	1378067	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378068	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378069	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378070	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378071	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378072	ArgumentList	init_opline		1375208	1					
ANR	1378073	Argument	init_opline		1375208	0					
ANR	1378074	Identifier	init_opline		1375208	0					
ANR	1378075	Argument	"""defined"""		1375208	1					
ANR	1378076	PrimaryExpression	"""defined"""		1375208	0					
ANR	1378077	Argument	"sizeof ( ""defined"" ) - 1"		1375208	2					
ANR	1378078	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		1375208	0		-			
ANR	1378079	SizeofExpression	"sizeof ( ""defined"" )"		1375208	0					
ANR	1378080	Sizeof	sizeof		1375208	0					
ANR	1378081	PrimaryExpression	"""defined"""		1375208	1					
ANR	1378082	PrimaryExpression	1		1375208	1					
ANR	1378083	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		1375208	1					
ANR	1378084	UnaryOperator	!		1375208	0					
ANR	1378085	CallExpression	"zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		1375208	1					
ANR	1378086	Callee	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378087	Identifier	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378088	ArgumentList	"""defined"""		1375208	1					
ANR	1378089	Argument	"""defined"""		1375208	0					
ANR	1378090	PrimaryExpression	"""defined"""		1375208	0					
ANR	1378091	Argument	"sizeof ( ""defined"" ) - 1"		1375208	1					
ANR	1378092	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		1375208	0		-			
ANR	1378093	SizeofExpression	"sizeof ( ""defined"" )"		1375208	0					
ANR	1378094	Sizeof	sizeof		1375208	0					
ANR	1378095	PrimaryExpression	"""defined"""		1375208	1					
ANR	1378096	PrimaryExpression	1		1375208	1					
ANR	1378097	CompoundStatement		474:5:15528:15534	1375208	1					
ANR	1378098	IdentifierDeclStatement	zval t ;	514:5:17524:17530	1375208	0	True				
ANR	1378099	IdentifierDecl	t		1375208	0					
ANR	1378100	IdentifierDeclType	zval		1375208	0					
ANR	1378101	Identifier	t		1375208	1					
ANR	1378102	IfStatement	"if ( zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 0 ) )"		1375208	1					
ANR	1378103	Condition	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 0 )"	516:9:17542:17625	1375208	0	True				
ANR	1378104	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 0 )"		1375208	0					
ANR	1378105	Callee	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1378106	Identifier	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1378107	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378108	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378109	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378110	Callee	Z_STR		1375208	0					
ANR	1378111	Identifier	Z_STR		1375208	0					
ANR	1378112	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378113	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378114	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378115	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378116	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378117	ArgumentList	send1_opline		1375208	1					
ANR	1378118	Argument	send1_opline		1375208	0					
ANR	1378119	Identifier	send1_opline		1375208	0					
ANR	1378120	Argument	& t		1375208	1					
ANR	1378121	UnaryOperationExpression	& t		1375208	0					
ANR	1378122	UnaryOperator	&		1375208	0					
ANR	1378123	Identifier	t		1375208	1					
ANR	1378124	Argument	0		1375208	2					
ANR	1378125	PrimaryExpression	0		1375208	0					
ANR	1378126	CompoundStatement		476:95:15632:15632	1375208	1					
ANR	1378127	ExpressionStatement	ZVAL_TRUE ( & t )	518:6:17637:17650	1375208	0	True				
ANR	1378128	CallExpression	ZVAL_TRUE ( & t )		1375208	0					
ANR	1378129	Callee	ZVAL_TRUE		1375208	0					
ANR	1378130	Identifier	ZVAL_TRUE		1375208	0					
ANR	1378131	ArgumentList	& t		1375208	1					
ANR	1378132	Argument	& t		1375208	0					
ANR	1378133	UnaryOperationExpression	& t		1375208	0					
ANR	1378134	UnaryOperator	&		1375208	0					
ANR	1378135	Identifier	t		1375208	1					
ANR	1378136	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		1375208	1					
ANR	1378137	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	519:10:17662:17751	1375208	0	True				
ANR	1378138	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		1375208	0					
ANR	1378139	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1378140	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1378141	ArgumentList	op_array		1375208	1					
ANR	1378142	Argument	op_array		1375208	0					
ANR	1378143	Identifier	op_array		1375208	0					
ANR	1378144	Argument	opline + 1		1375208	1					
ANR	1378145	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1378146	Identifier	opline		1375208	0					
ANR	1378147	PrimaryExpression	1		1375208	1					
ANR	1378148	Argument	IS_VAR		1375208	2					
ANR	1378149	Identifier	IS_VAR		1375208	0					
ANR	1378150	Argument	ZEND_RESULT ( opline ) . var		1375208	3					
ANR	1378151	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1378152	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1378153	Callee	ZEND_RESULT		1375208	0					
ANR	1378154	Identifier	ZEND_RESULT		1375208	0					
ANR	1378155	ArgumentList	opline		1375208	1					
ANR	1378156	Argument	opline		1375208	0					
ANR	1378157	Identifier	opline		1375208	0					
ANR	1378158	Identifier	var		1375208	1					
ANR	1378159	Argument	& t		1375208	4					
ANR	1378160	UnaryOperationExpression	& t		1375208	0					
ANR	1378161	UnaryOperator	&		1375208	0					
ANR	1378162	Identifier	t		1375208	1					
ANR	1378163	CompoundStatement		479:102:15758:15758	1375208	1					
ANR	1378164	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	520:7:17763:17807	1375208	0	True				
ANR	1378165	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378166	Callee	literal_dtor		1375208	0					
ANR	1378167	Identifier	literal_dtor		1375208	0					
ANR	1378168	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378169	Argument	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378170	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378171	UnaryOperator	&		1375208	0					
ANR	1378172	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378173	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378174	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378175	ArgumentList	init_opline		1375208	1					
ANR	1378176	Argument	init_opline		1375208	0					
ANR	1378177	Identifier	init_opline		1375208	0					
ANR	1378178	ExpressionStatement	MAKE_NOP ( init_opline )	521:7:17816:17837	1375208	1	True				
ANR	1378179	CallExpression	MAKE_NOP ( init_opline )		1375208	0					
ANR	1378180	Callee	MAKE_NOP		1375208	0					
ANR	1378181	Identifier	MAKE_NOP		1375208	0					
ANR	1378182	ArgumentList	init_opline		1375208	1					
ANR	1378183	Argument	init_opline		1375208	0					
ANR	1378184	Identifier	init_opline		1375208	0					
ANR	1378185	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	522:7:17846:17891	1375208	2	True				
ANR	1378186	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378187	Callee	literal_dtor		1375208	0					
ANR	1378188	Identifier	literal_dtor		1375208	0					
ANR	1378189	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378190	Argument	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378191	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378192	UnaryOperator	&		1375208	0					
ANR	1378193	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378194	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378195	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378196	ArgumentList	send1_opline		1375208	1					
ANR	1378197	Argument	send1_opline		1375208	0					
ANR	1378198	Identifier	send1_opline		1375208	0					
ANR	1378199	ExpressionStatement	MAKE_NOP ( send1_opline )	523:7:17900:17922	1375208	3	True				
ANR	1378200	CallExpression	MAKE_NOP ( send1_opline )		1375208	0					
ANR	1378201	Callee	MAKE_NOP		1375208	0					
ANR	1378202	Identifier	MAKE_NOP		1375208	0					
ANR	1378203	ArgumentList	send1_opline		1375208	1					
ANR	1378204	Argument	send1_opline		1375208	0					
ANR	1378205	Identifier	send1_opline		1375208	0					
ANR	1378206	ExpressionStatement	MAKE_NOP ( opline )	524:7:17931:17947	1375208	4	True				
ANR	1378207	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1378208	Callee	MAKE_NOP		1375208	0					
ANR	1378209	Identifier	MAKE_NOP		1375208	0					
ANR	1378210	ArgumentList	opline		1375208	1					
ANR	1378211	Argument	opline		1375208	0					
ANR	1378212	Identifier	opline		1375208	0					
ANR	1378213	BreakStatement	break ;	525:7:17956:17961	1375208	5	True				
ANR	1378214	ElseStatement	else		1375208	0					
ANR	1378215	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 ) )"		1375208	0					
ANR	1378216	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"	528:15:17993:18229	1375208	0	True				
ANR	1378217	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		1375208	0		&&			
ANR	1378218	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1"		1375208	0		==			
ANR	1378219	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378220	Callee	Z_STRLEN		1375208	0					
ANR	1378221	Identifier	Z_STRLEN		1375208	0					
ANR	1378222	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378223	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378224	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378225	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378226	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378227	ArgumentList	init_opline		1375208	1					
ANR	1378228	Argument	init_opline		1375208	0					
ANR	1378229	Identifier	init_opline		1375208	0					
ANR	1378230	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		1375208	1		-			
ANR	1378231	SizeofExpression	"sizeof ( ""constant"" )"		1375208	0					
ANR	1378232	Sizeof	sizeof		1375208	0					
ANR	1378233	PrimaryExpression	"""constant"""		1375208	1					
ANR	1378234	PrimaryExpression	1		1375208	1					
ANR	1378235	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		1375208	1		&&			
ANR	1378236	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 )"		1375208	0					
ANR	1378237	UnaryOperator	!		1375208	0					
ANR	1378238	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 )"		1375208	1					
ANR	1378239	Callee	memcmp		1375208	0					
ANR	1378240	Identifier	memcmp		1375208	0					
ANR	1378241	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1378242	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378243	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378244	Callee	Z_STRVAL		1375208	0					
ANR	1378245	Identifier	Z_STRVAL		1375208	0					
ANR	1378246	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378247	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378248	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378249	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378250	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378251	ArgumentList	init_opline		1375208	1					
ANR	1378252	Argument	init_opline		1375208	0					
ANR	1378253	Identifier	init_opline		1375208	0					
ANR	1378254	Argument	"""constant"""		1375208	1					
ANR	1378255	PrimaryExpression	"""constant"""		1375208	0					
ANR	1378256	Argument	"sizeof ( ""constant"" ) - 1"		1375208	2					
ANR	1378257	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		1375208	0		-			
ANR	1378258	SizeofExpression	"sizeof ( ""constant"" )"		1375208	0					
ANR	1378259	Sizeof	sizeof		1375208	0					
ANR	1378260	PrimaryExpression	"""constant"""		1375208	1					
ANR	1378261	PrimaryExpression	1		1375208	1					
ANR	1378262	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		1375208	1					
ANR	1378263	UnaryOperator	!		1375208	0					
ANR	1378264	CallExpression	"zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		1375208	1					
ANR	1378265	Callee	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378266	Identifier	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378267	ArgumentList	"""constant"""		1375208	1					
ANR	1378268	Argument	"""constant"""		1375208	0					
ANR	1378269	PrimaryExpression	"""constant"""		1375208	0					
ANR	1378270	Argument	"sizeof ( ""constant"" ) - 1"		1375208	1					
ANR	1378271	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		1375208	0		-			
ANR	1378272	SizeofExpression	"sizeof ( ""constant"" )"		1375208	0					
ANR	1378273	Sizeof	sizeof		1375208	0					
ANR	1378274	PrimaryExpression	"""constant"""		1375208	1					
ANR	1378275	PrimaryExpression	1		1375208	1					
ANR	1378276	CompoundStatement		492:5:16243:16249	1375208	1					
ANR	1378277	IdentifierDeclStatement	zval t ;	532:5:18239:18245	1375208	0	True				
ANR	1378278	IdentifierDecl	t		1375208	0					
ANR	1378279	IdentifierDeclType	zval		1375208	0					
ANR	1378280	Identifier	t		1375208	1					
ANR	1378281	IfStatement	"if ( zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 1 ) )"		1375208	1					
ANR	1378282	Condition	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 1 )"	534:9:18257:18340	1375208	0	True				
ANR	1378283	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 1 )"		1375208	0					
ANR	1378284	Callee	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1378285	Identifier	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1378286	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378287	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378288	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378289	Callee	Z_STR		1375208	0					
ANR	1378290	Identifier	Z_STR		1375208	0					
ANR	1378291	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378292	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378293	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378294	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378295	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378296	ArgumentList	send1_opline		1375208	1					
ANR	1378297	Argument	send1_opline		1375208	0					
ANR	1378298	Identifier	send1_opline		1375208	0					
ANR	1378299	Argument	& t		1375208	1					
ANR	1378300	UnaryOperationExpression	& t		1375208	0					
ANR	1378301	UnaryOperator	&		1375208	0					
ANR	1378302	Identifier	t		1375208	1					
ANR	1378303	Argument	1		1375208	2					
ANR	1378304	PrimaryExpression	1		1375208	0					
ANR	1378305	CompoundStatement		494:95:16347:16347	1375208	1					
ANR	1378306	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		1375208	0					
ANR	1378307	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	535:10:18355:18444	1375208	0	True				
ANR	1378308	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		1375208	0					
ANR	1378309	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1378310	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1378311	ArgumentList	op_array		1375208	1					
ANR	1378312	Argument	op_array		1375208	0					
ANR	1378313	Identifier	op_array		1375208	0					
ANR	1378314	Argument	opline + 1		1375208	1					
ANR	1378315	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1378316	Identifier	opline		1375208	0					
ANR	1378317	PrimaryExpression	1		1375208	1					
ANR	1378318	Argument	IS_VAR		1375208	2					
ANR	1378319	Identifier	IS_VAR		1375208	0					
ANR	1378320	Argument	ZEND_RESULT ( opline ) . var		1375208	3					
ANR	1378321	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1378322	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1378323	Callee	ZEND_RESULT		1375208	0					
ANR	1378324	Identifier	ZEND_RESULT		1375208	0					
ANR	1378325	ArgumentList	opline		1375208	1					
ANR	1378326	Argument	opline		1375208	0					
ANR	1378327	Identifier	opline		1375208	0					
ANR	1378328	Identifier	var		1375208	1					
ANR	1378329	Argument	& t		1375208	4					
ANR	1378330	UnaryOperationExpression	& t		1375208	0					
ANR	1378331	UnaryOperator	&		1375208	0					
ANR	1378332	Identifier	t		1375208	1					
ANR	1378333	CompoundStatement		495:102:16451:16451	1375208	1					
ANR	1378334	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	536:7:18456:18500	1375208	0	True				
ANR	1378335	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378336	Callee	literal_dtor		1375208	0					
ANR	1378337	Identifier	literal_dtor		1375208	0					
ANR	1378338	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378339	Argument	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378340	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378341	UnaryOperator	&		1375208	0					
ANR	1378342	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378343	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378344	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378345	ArgumentList	init_opline		1375208	1					
ANR	1378346	Argument	init_opline		1375208	0					
ANR	1378347	Identifier	init_opline		1375208	0					
ANR	1378348	ExpressionStatement	MAKE_NOP ( init_opline )	537:7:18509:18530	1375208	1	True				
ANR	1378349	CallExpression	MAKE_NOP ( init_opline )		1375208	0					
ANR	1378350	Callee	MAKE_NOP		1375208	0					
ANR	1378351	Identifier	MAKE_NOP		1375208	0					
ANR	1378352	ArgumentList	init_opline		1375208	1					
ANR	1378353	Argument	init_opline		1375208	0					
ANR	1378354	Identifier	init_opline		1375208	0					
ANR	1378355	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	538:7:18539:18584	1375208	2	True				
ANR	1378356	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378357	Callee	literal_dtor		1375208	0					
ANR	1378358	Identifier	literal_dtor		1375208	0					
ANR	1378359	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378360	Argument	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378361	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378362	UnaryOperator	&		1375208	0					
ANR	1378363	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378364	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378365	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378366	ArgumentList	send1_opline		1375208	1					
ANR	1378367	Argument	send1_opline		1375208	0					
ANR	1378368	Identifier	send1_opline		1375208	0					
ANR	1378369	ExpressionStatement	MAKE_NOP ( send1_opline )	539:7:18593:18615	1375208	3	True				
ANR	1378370	CallExpression	MAKE_NOP ( send1_opline )		1375208	0					
ANR	1378371	Callee	MAKE_NOP		1375208	0					
ANR	1378372	Identifier	MAKE_NOP		1375208	0					
ANR	1378373	ArgumentList	send1_opline		1375208	1					
ANR	1378374	Argument	send1_opline		1375208	0					
ANR	1378375	Identifier	send1_opline		1375208	0					
ANR	1378376	ExpressionStatement	MAKE_NOP ( opline )	540:7:18624:18640	1375208	4	True				
ANR	1378377	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1378378	Callee	MAKE_NOP		1375208	0					
ANR	1378379	Identifier	MAKE_NOP		1375208	0					
ANR	1378380	ArgumentList	opline		1375208	1					
ANR	1378381	Argument	opline		1375208	0					
ANR	1378382	Identifier	opline		1375208	0					
ANR	1378383	BreakStatement	break ;	541:7:18649:18654	1375208	5	True				
ANR	1378384	ElseStatement	else		1375208	0					
ANR	1378385	IfStatement	"if ( ( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0 && Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 ) )"		1375208	0					
ANR	1378386	Condition	"( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0 && Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"	544:15:18686:18979	1375208	0	True				
ANR	1378387	AndExpression	"( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0 && Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		1375208	0		&&			
ANR	1378388	EqualityExpression	( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0		1375208	0		==			
ANR	1378389	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN		1375208	0		&			
ANR	1378390	CallExpression	CG ( compiler_options )		1375208	0					
ANR	1378391	Callee	CG		1375208	0					
ANR	1378392	Identifier	CG		1375208	0					
ANR	1378393	ArgumentList	compiler_options		1375208	1					
ANR	1378394	Argument	compiler_options		1375208	0					
ANR	1378395	Identifier	compiler_options		1375208	0					
ANR	1378396	Identifier	ZEND_COMPILE_NO_BUILTIN_STRLEN		1375208	1					
ANR	1378397	PrimaryExpression	0		1375208	1					
ANR	1378398	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		1375208	1		&&			
ANR	1378399	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1"		1375208	0		==			
ANR	1378400	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378401	Callee	Z_STRLEN		1375208	0					
ANR	1378402	Identifier	Z_STRLEN		1375208	0					
ANR	1378403	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378404	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378405	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378406	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378407	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378408	ArgumentList	init_opline		1375208	1					
ANR	1378409	Argument	init_opline		1375208	0					
ANR	1378410	Identifier	init_opline		1375208	0					
ANR	1378411	AdditiveExpression	"sizeof ( ""strlen"" ) - 1"		1375208	1		-			
ANR	1378412	SizeofExpression	"sizeof ( ""strlen"" )"		1375208	0					
ANR	1378413	Sizeof	sizeof		1375208	0					
ANR	1378414	PrimaryExpression	"""strlen"""		1375208	1					
ANR	1378415	PrimaryExpression	1		1375208	1					
ANR	1378416	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		1375208	1		&&			
ANR	1378417	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		1375208	0					
ANR	1378418	UnaryOperator	!		1375208	0					
ANR	1378419	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		1375208	1					
ANR	1378420	Callee	memcmp		1375208	0					
ANR	1378421	Identifier	memcmp		1375208	0					
ANR	1378422	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1378423	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378424	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378425	Callee	Z_STRVAL		1375208	0					
ANR	1378426	Identifier	Z_STRVAL		1375208	0					
ANR	1378427	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378428	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378429	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378430	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378431	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378432	ArgumentList	init_opline		1375208	1					
ANR	1378433	Argument	init_opline		1375208	0					
ANR	1378434	Identifier	init_opline		1375208	0					
ANR	1378435	Argument	"""strlen"""		1375208	1					
ANR	1378436	PrimaryExpression	"""strlen"""		1375208	0					
ANR	1378437	Argument	"sizeof ( ""strlen"" ) - 1"		1375208	2					
ANR	1378438	AdditiveExpression	"sizeof ( ""strlen"" ) - 1"		1375208	0		-			
ANR	1378439	SizeofExpression	"sizeof ( ""strlen"" )"		1375208	0					
ANR	1378440	Sizeof	sizeof		1375208	0					
ANR	1378441	PrimaryExpression	"""strlen"""		1375208	1					
ANR	1378442	PrimaryExpression	1		1375208	1					
ANR	1378443	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		1375208	1					
ANR	1378444	UnaryOperator	!		1375208	0					
ANR	1378445	CallExpression	"zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		1375208	1					
ANR	1378446	Callee	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378447	Identifier	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378448	ArgumentList	"""strlen"""		1375208	1					
ANR	1378449	Argument	"""strlen"""		1375208	0					
ANR	1378450	PrimaryExpression	"""strlen"""		1375208	0					
ANR	1378451	Argument	"sizeof ( ""strlen"" ) - 1"		1375208	1					
ANR	1378452	AdditiveExpression	"sizeof ( ""strlen"" ) - 1"		1375208	0		-			
ANR	1378453	SizeofExpression	"sizeof ( ""strlen"" )"		1375208	0					
ANR	1378454	Sizeof	sizeof		1375208	0					
ANR	1378455	PrimaryExpression	"""strlen"""		1375208	1					
ANR	1378456	PrimaryExpression	1		1375208	1					
ANR	1378457	CompoundStatement		508:5:16993:16999	1375208	1					
ANR	1378458	IdentifierDeclStatement	zval t ;	548:5:18989:18995	1375208	0	True				
ANR	1378459	IdentifierDecl	t		1375208	0					
ANR	1378460	IdentifierDeclType	zval		1375208	0					
ANR	1378461	Identifier	t		1375208	1					
ANR	1378462	ExpressionStatement	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"	550:5:19003:19058	1375208	1	True				
ANR	1378463	CallExpression	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	0					
ANR	1378464	Callee	ZVAL_LONG		1375208	0					
ANR	1378465	Identifier	ZVAL_LONG		1375208	0					
ANR	1378466	ArgumentList	& t		1375208	1					
ANR	1378467	Argument	& t		1375208	0					
ANR	1378468	UnaryOperationExpression	& t		1375208	0					
ANR	1378469	UnaryOperator	&		1375208	0					
ANR	1378470	Identifier	t		1375208	1					
ANR	1378471	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378472	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378473	Callee	Z_STRLEN		1375208	0					
ANR	1378474	Identifier	Z_STRLEN		1375208	0					
ANR	1378475	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378476	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378477	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378478	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378479	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378480	ArgumentList	send1_opline		1375208	1					
ANR	1378481	Argument	send1_opline		1375208	0					
ANR	1378482	Identifier	send1_opline		1375208	0					
ANR	1378483	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		1375208	2					
ANR	1378484	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	551:9:19069:19158	1375208	0	True				
ANR	1378485	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		1375208	0					
ANR	1378486	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1378487	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1378488	ArgumentList	op_array		1375208	1					
ANR	1378489	Argument	op_array		1375208	0					
ANR	1378490	Identifier	op_array		1375208	0					
ANR	1378491	Argument	opline + 1		1375208	1					
ANR	1378492	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1378493	Identifier	opline		1375208	0					
ANR	1378494	PrimaryExpression	1		1375208	1					
ANR	1378495	Argument	IS_VAR		1375208	2					
ANR	1378496	Identifier	IS_VAR		1375208	0					
ANR	1378497	Argument	ZEND_RESULT ( opline ) . var		1375208	3					
ANR	1378498	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1378499	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1378500	Callee	ZEND_RESULT		1375208	0					
ANR	1378501	Identifier	ZEND_RESULT		1375208	0					
ANR	1378502	ArgumentList	opline		1375208	1					
ANR	1378503	Argument	opline		1375208	0					
ANR	1378504	Identifier	opline		1375208	0					
ANR	1378505	Identifier	var		1375208	1					
ANR	1378506	Argument	& t		1375208	4					
ANR	1378507	UnaryOperationExpression	& t		1375208	0					
ANR	1378508	UnaryOperator	&		1375208	0					
ANR	1378509	Identifier	t		1375208	1					
ANR	1378510	CompoundStatement		511:101:17165:17165	1375208	1					
ANR	1378511	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	552:6:19169:19213	1375208	0	True				
ANR	1378512	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378513	Callee	literal_dtor		1375208	0					
ANR	1378514	Identifier	literal_dtor		1375208	0					
ANR	1378515	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378516	Argument	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378517	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378518	UnaryOperator	&		1375208	0					
ANR	1378519	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378520	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378521	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378522	ArgumentList	init_opline		1375208	1					
ANR	1378523	Argument	init_opline		1375208	0					
ANR	1378524	Identifier	init_opline		1375208	0					
ANR	1378525	ExpressionStatement	MAKE_NOP ( init_opline )	553:6:19221:19242	1375208	1	True				
ANR	1378526	CallExpression	MAKE_NOP ( init_opline )		1375208	0					
ANR	1378527	Callee	MAKE_NOP		1375208	0					
ANR	1378528	Identifier	MAKE_NOP		1375208	0					
ANR	1378529	ArgumentList	init_opline		1375208	1					
ANR	1378530	Argument	init_opline		1375208	0					
ANR	1378531	Identifier	init_opline		1375208	0					
ANR	1378532	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	554:6:19250:19295	1375208	2	True				
ANR	1378533	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378534	Callee	literal_dtor		1375208	0					
ANR	1378535	Identifier	literal_dtor		1375208	0					
ANR	1378536	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378537	Argument	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378538	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378539	UnaryOperator	&		1375208	0					
ANR	1378540	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378541	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378542	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378543	ArgumentList	send1_opline		1375208	1					
ANR	1378544	Argument	send1_opline		1375208	0					
ANR	1378545	Identifier	send1_opline		1375208	0					
ANR	1378546	ExpressionStatement	MAKE_NOP ( send1_opline )	555:6:19303:19325	1375208	3	True				
ANR	1378547	CallExpression	MAKE_NOP ( send1_opline )		1375208	0					
ANR	1378548	Callee	MAKE_NOP		1375208	0					
ANR	1378549	Identifier	MAKE_NOP		1375208	0					
ANR	1378550	ArgumentList	send1_opline		1375208	1					
ANR	1378551	Argument	send1_opline		1375208	0					
ANR	1378552	Identifier	send1_opline		1375208	0					
ANR	1378553	ExpressionStatement	MAKE_NOP ( opline )	556:6:19333:19349	1375208	4	True				
ANR	1378554	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1378555	Callee	MAKE_NOP		1375208	0					
ANR	1378556	Identifier	MAKE_NOP		1375208	0					
ANR	1378557	ArgumentList	opline		1375208	1					
ANR	1378558	Argument	opline		1375208	0					
ANR	1378559	Identifier	opline		1375208	0					
ANR	1378560	BreakStatement	break ;	557:6:19357:19362	1375208	5	True				
ANR	1378561	ElseStatement	else		1375208	0					
ANR	1378562	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) ) )"		1375208	0					
ANR	1378563	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"	560:15:19446:19788	1375208	0	True				
ANR	1378564	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	0		&&			
ANR	1378565	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1"		1375208	0		==			
ANR	1378566	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378567	Callee	Z_STRLEN		1375208	0					
ANR	1378568	Identifier	Z_STRLEN		1375208	0					
ANR	1378569	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378570	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378571	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378572	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378573	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378574	ArgumentList	init_opline		1375208	1					
ANR	1378575	Argument	init_opline		1375208	0					
ANR	1378576	Identifier	init_opline		1375208	0					
ANR	1378577	AdditiveExpression	"sizeof ( ""dirname"" ) - 1"		1375208	1		-			
ANR	1378578	SizeofExpression	"sizeof ( ""dirname"" )"		1375208	0					
ANR	1378579	Sizeof	sizeof		1375208	0					
ANR	1378580	PrimaryExpression	"""dirname"""		1375208	1					
ANR	1378581	PrimaryExpression	1		1375208	1					
ANR	1378582	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	1		&&			
ANR	1378583	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		1375208	0					
ANR	1378584	UnaryOperator	!		1375208	0					
ANR	1378585	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		1375208	1					
ANR	1378586	Callee	memcmp		1375208	0					
ANR	1378587	Identifier	memcmp		1375208	0					
ANR	1378588	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1378589	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378590	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378591	Callee	Z_STRVAL		1375208	0					
ANR	1378592	Identifier	Z_STRVAL		1375208	0					
ANR	1378593	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378594	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378595	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378596	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378597	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378598	ArgumentList	init_opline		1375208	1					
ANR	1378599	Argument	init_opline		1375208	0					
ANR	1378600	Identifier	init_opline		1375208	0					
ANR	1378601	Argument	"""dirname"""		1375208	1					
ANR	1378602	PrimaryExpression	"""dirname"""		1375208	0					
ANR	1378603	Argument	"sizeof ( ""dirname"" ) - 1"		1375208	2					
ANR	1378604	AdditiveExpression	"sizeof ( ""dirname"" ) - 1"		1375208	0		-			
ANR	1378605	SizeofExpression	"sizeof ( ""dirname"" )"		1375208	0					
ANR	1378606	Sizeof	sizeof		1375208	0					
ANR	1378607	PrimaryExpression	"""dirname"""		1375208	1					
ANR	1378608	PrimaryExpression	1		1375208	1					
ANR	1378609	AndExpression	"! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	1		&&			
ANR	1378610	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		1375208	0					
ANR	1378611	UnaryOperator	!		1375208	0					
ANR	1378612	CallExpression	"zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		1375208	1					
ANR	1378613	Callee	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378614	Identifier	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378615	ArgumentList	"""dirname"""		1375208	1					
ANR	1378616	Argument	"""dirname"""		1375208	0					
ANR	1378617	PrimaryExpression	"""dirname"""		1375208	0					
ANR	1378618	Argument	"sizeof ( ""dirname"" ) - 1"		1375208	1					
ANR	1378619	AdditiveExpression	"sizeof ( ""dirname"" ) - 1"		1375208	0		-			
ANR	1378620	SizeofExpression	"sizeof ( ""dirname"" )"		1375208	0					
ANR	1378621	Sizeof	sizeof		1375208	0					
ANR	1378622	PrimaryExpression	"""dirname"""		1375208	1					
ANR	1378623	PrimaryExpression	1		1375208	1					
ANR	1378624	CallExpression	"IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		1375208	1					
ANR	1378625	Callee	IS_ABSOLUTE_PATH		1375208	0					
ANR	1378626	Identifier	IS_ABSOLUTE_PATH		1375208	0					
ANR	1378627	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378628	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378629	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378630	Callee	Z_STRVAL		1375208	0					
ANR	1378631	Identifier	Z_STRVAL		1375208	0					
ANR	1378632	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378633	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378634	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378635	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378636	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378637	ArgumentList	send1_opline		1375208	1					
ANR	1378638	Argument	send1_opline		1375208	0					
ANR	1378639	Identifier	send1_opline		1375208	0					
ANR	1378640	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378641	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378642	Callee	Z_STRLEN		1375208	0					
ANR	1378643	Identifier	Z_STRLEN		1375208	0					
ANR	1378644	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378645	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378646	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378647	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378648	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378649	ArgumentList	send1_opline		1375208	1					
ANR	1378650	Argument	send1_opline		1375208	0					
ANR	1378651	Identifier	send1_opline		1375208	0					
ANR	1378652	CompoundStatement		525:5:17802:17928	1375208	1					
ANR	1378653	IdentifierDeclStatement	"zend_string * dirname = zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 ) ;"	565:5:19798:19924	1375208	0	True				
ANR	1378654	IdentifierDecl	"* dirname = zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 )"		1375208	0					
ANR	1378655	IdentifierDeclType	zend_string *		1375208	0					
ANR	1378656	Identifier	dirname		1375208	1					
ANR	1378657	AssignmentExpression	"* dirname = zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 )"		1375208	2		=			
ANR	1378658	Identifier	dirname		1375208	0					
ANR	1378659	CallExpression	"zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 )"		1375208	1					
ANR	1378660	Callee	zend_string_init		1375208	0					
ANR	1378661	Identifier	zend_string_init		1375208	0					
ANR	1378662	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378663	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378664	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378665	Callee	Z_STRVAL		1375208	0					
ANR	1378666	Identifier	Z_STRVAL		1375208	0					
ANR	1378667	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378668	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378669	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378670	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378671	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378672	ArgumentList	send1_opline		1375208	1					
ANR	1378673	Argument	send1_opline		1375208	0					
ANR	1378674	Identifier	send1_opline		1375208	0					
ANR	1378675	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378676	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378677	Callee	Z_STRLEN		1375208	0					
ANR	1378678	Identifier	Z_STRLEN		1375208	0					
ANR	1378679	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378680	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378681	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378682	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378683	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378684	ArgumentList	send1_opline		1375208	1					
ANR	1378685	Argument	send1_opline		1375208	0					
ANR	1378686	Identifier	send1_opline		1375208	0					
ANR	1378687	Argument	0		1375208	2					
ANR	1378688	PrimaryExpression	0		1375208	0					
ANR	1378689	ExpressionStatement	"ZSTR_LEN ( dirname ) = zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"	566:5:19931:20001	1375208	1	True				
ANR	1378690	AssignmentExpression	"ZSTR_LEN ( dirname ) = zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"		1375208	0		=			
ANR	1378691	CallExpression	ZSTR_LEN ( dirname )		1375208	0					
ANR	1378692	Callee	ZSTR_LEN		1375208	0					
ANR	1378693	Identifier	ZSTR_LEN		1375208	0					
ANR	1378694	ArgumentList	dirname		1375208	1					
ANR	1378695	Argument	dirname		1375208	0					
ANR	1378696	Identifier	dirname		1375208	0					
ANR	1378697	CallExpression	"zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"		1375208	1					
ANR	1378698	Callee	zend_dirname		1375208	0					
ANR	1378699	Identifier	zend_dirname		1375208	0					
ANR	1378700	ArgumentList	ZSTR_VAL ( dirname )		1375208	1					
ANR	1378701	Argument	ZSTR_VAL ( dirname )		1375208	0					
ANR	1378702	CallExpression	ZSTR_VAL ( dirname )		1375208	0					
ANR	1378703	Callee	ZSTR_VAL		1375208	0					
ANR	1378704	Identifier	ZSTR_VAL		1375208	0					
ANR	1378705	ArgumentList	dirname		1375208	1					
ANR	1378706	Argument	dirname		1375208	0					
ANR	1378707	Identifier	dirname		1375208	0					
ANR	1378708	Argument	ZSTR_LEN ( dirname )		1375208	1					
ANR	1378709	CallExpression	ZSTR_LEN ( dirname )		1375208	0					
ANR	1378710	Callee	ZSTR_LEN		1375208	0					
ANR	1378711	Identifier	ZSTR_LEN		1375208	0					
ANR	1378712	ArgumentList	dirname		1375208	1					
ANR	1378713	Argument	dirname		1375208	0					
ANR	1378714	Identifier	dirname		1375208	0					
ANR	1378715	IfStatement	"if ( IS_ABSOLUTE_PATH ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) ) )"		1375208	2					
ANR	1378716	Condition	"IS_ABSOLUTE_PATH ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"	567:9:20012:20065	1375208	0	True				
ANR	1378717	CallExpression	"IS_ABSOLUTE_PATH ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"		1375208	0					
ANR	1378718	Callee	IS_ABSOLUTE_PATH		1375208	0					
ANR	1378719	Identifier	IS_ABSOLUTE_PATH		1375208	0					
ANR	1378720	ArgumentList	ZSTR_VAL ( dirname )		1375208	1					
ANR	1378721	Argument	ZSTR_VAL ( dirname )		1375208	0					
ANR	1378722	CallExpression	ZSTR_VAL ( dirname )		1375208	0					
ANR	1378723	Callee	ZSTR_VAL		1375208	0					
ANR	1378724	Identifier	ZSTR_VAL		1375208	0					
ANR	1378725	ArgumentList	dirname		1375208	1					
ANR	1378726	Argument	dirname		1375208	0					
ANR	1378727	Identifier	dirname		1375208	0					
ANR	1378728	Argument	ZSTR_LEN ( dirname )		1375208	1					
ANR	1378729	CallExpression	ZSTR_LEN ( dirname )		1375208	0					
ANR	1378730	Callee	ZSTR_LEN		1375208	0					
ANR	1378731	Identifier	ZSTR_LEN		1375208	0					
ANR	1378732	ArgumentList	dirname		1375208	1					
ANR	1378733	Argument	dirname		1375208	0					
ANR	1378734	Identifier	dirname		1375208	0					
ANR	1378735	CompoundStatement		528:6:18080:18086	1375208	1					
ANR	1378736	IdentifierDeclStatement	zval t ;	568:6:20076:20082	1375208	0	True				
ANR	1378737	IdentifierDecl	t		1375208	0					
ANR	1378738	IdentifierDeclType	zval		1375208	0					
ANR	1378739	Identifier	t		1375208	1					
ANR	1378740	ExpressionStatement	"ZVAL_STR ( & t , dirname )"	570:6:20091:20112	1375208	1	True				
ANR	1378741	CallExpression	"ZVAL_STR ( & t , dirname )"		1375208	0					
ANR	1378742	Callee	ZVAL_STR		1375208	0					
ANR	1378743	Identifier	ZVAL_STR		1375208	0					
ANR	1378744	ArgumentList	& t		1375208	1					
ANR	1378745	Argument	& t		1375208	0					
ANR	1378746	UnaryOperationExpression	& t		1375208	0					
ANR	1378747	UnaryOperator	&		1375208	0					
ANR	1378748	Identifier	t		1375208	1					
ANR	1378749	Argument	dirname		1375208	1					
ANR	1378750	Identifier	dirname		1375208	0					
ANR	1378751	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		1375208	2					
ANR	1378752	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	571:10:20124:20213	1375208	0	True				
ANR	1378753	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		1375208	0					
ANR	1378754	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1378755	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1378756	ArgumentList	op_array		1375208	1					
ANR	1378757	Argument	op_array		1375208	0					
ANR	1378758	Identifier	op_array		1375208	0					
ANR	1378759	Argument	opline + 1		1375208	1					
ANR	1378760	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1378761	Identifier	opline		1375208	0					
ANR	1378762	PrimaryExpression	1		1375208	1					
ANR	1378763	Argument	IS_VAR		1375208	2					
ANR	1378764	Identifier	IS_VAR		1375208	0					
ANR	1378765	Argument	ZEND_RESULT ( opline ) . var		1375208	3					
ANR	1378766	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1378767	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1378768	Callee	ZEND_RESULT		1375208	0					
ANR	1378769	Identifier	ZEND_RESULT		1375208	0					
ANR	1378770	ArgumentList	opline		1375208	1					
ANR	1378771	Argument	opline		1375208	0					
ANR	1378772	Identifier	opline		1375208	0					
ANR	1378773	Identifier	var		1375208	1					
ANR	1378774	Argument	& t		1375208	4					
ANR	1378775	UnaryOperationExpression	& t		1375208	0					
ANR	1378776	UnaryOperator	&		1375208	0					
ANR	1378777	Identifier	t		1375208	1					
ANR	1378778	CompoundStatement		531:102:18220:18220	1375208	1					
ANR	1378779	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	572:7:20225:20269	1375208	0	True				
ANR	1378780	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378781	Callee	literal_dtor		1375208	0					
ANR	1378782	Identifier	literal_dtor		1375208	0					
ANR	1378783	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378784	Argument	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378785	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378786	UnaryOperator	&		1375208	0					
ANR	1378787	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378788	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378789	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378790	ArgumentList	init_opline		1375208	1					
ANR	1378791	Argument	init_opline		1375208	0					
ANR	1378792	Identifier	init_opline		1375208	0					
ANR	1378793	ExpressionStatement	MAKE_NOP ( init_opline )	573:7:20278:20299	1375208	1	True				
ANR	1378794	CallExpression	MAKE_NOP ( init_opline )		1375208	0					
ANR	1378795	Callee	MAKE_NOP		1375208	0					
ANR	1378796	Identifier	MAKE_NOP		1375208	0					
ANR	1378797	ArgumentList	init_opline		1375208	1					
ANR	1378798	Argument	init_opline		1375208	0					
ANR	1378799	Identifier	init_opline		1375208	0					
ANR	1378800	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	574:7:20308:20353	1375208	2	True				
ANR	1378801	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378802	Callee	literal_dtor		1375208	0					
ANR	1378803	Identifier	literal_dtor		1375208	0					
ANR	1378804	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378805	Argument	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378806	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378807	UnaryOperator	&		1375208	0					
ANR	1378808	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378809	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378810	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378811	ArgumentList	send1_opline		1375208	1					
ANR	1378812	Argument	send1_opline		1375208	0					
ANR	1378813	Identifier	send1_opline		1375208	0					
ANR	1378814	ExpressionStatement	MAKE_NOP ( send1_opline )	575:7:20362:20384	1375208	3	True				
ANR	1378815	CallExpression	MAKE_NOP ( send1_opline )		1375208	0					
ANR	1378816	Callee	MAKE_NOP		1375208	0					
ANR	1378817	Identifier	MAKE_NOP		1375208	0					
ANR	1378818	ArgumentList	send1_opline		1375208	1					
ANR	1378819	Argument	send1_opline		1375208	0					
ANR	1378820	Identifier	send1_opline		1375208	0					
ANR	1378821	ExpressionStatement	MAKE_NOP ( opline )	576:7:20393:20409	1375208	4	True				
ANR	1378822	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1378823	Callee	MAKE_NOP		1375208	0					
ANR	1378824	Identifier	MAKE_NOP		1375208	0					
ANR	1378825	ArgumentList	opline		1375208	1					
ANR	1378826	Argument	opline		1375208	0					
ANR	1378827	Identifier	opline		1375208	0					
ANR	1378828	BreakStatement	break ;	577:7:20418:20423	1375208	5	True				
ANR	1378829	ElseStatement	else		1375208	0					
ANR	1378830	CompoundStatement		539:12:18449:18449	1375208	0					
ANR	1378831	ExpressionStatement	zend_string_release ( dirname )	580:6:20453:20481	1375208	0	True				
ANR	1378832	CallExpression	zend_string_release ( dirname )		1375208	0					
ANR	1378833	Callee	zend_string_release		1375208	0					
ANR	1378834	Identifier	zend_string_release		1375208	0					
ANR	1378835	ArgumentList	dirname		1375208	1					
ANR	1378836	Argument	dirname		1375208	0					
ANR	1378837	Identifier	dirname		1375208	0					
ANR	1378838	ElseStatement	else		1375208	0					
ANR	1378839	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) )"		1375208	0					
ANR	1378840	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"	473:15:16163:16439	1375208	0	True				
ANR	1378841	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		1375208	0		&&			
ANR	1378842	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1"		1375208	0		==			
ANR	1378843	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378844	Callee	Z_STRLEN		1375208	0					
ANR	1378845	Identifier	Z_STRLEN		1375208	0					
ANR	1378846	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378847	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378848	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378849	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378850	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378851	ArgumentList	init_opline		1375208	1					
ANR	1378852	Argument	init_opline		1375208	0					
ANR	1378853	Identifier	init_opline		1375208	0					
ANR	1378854	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		1375208	1		-			
ANR	1378855	SizeofExpression	"sizeof ( ""extension_loaded"" )"		1375208	0					
ANR	1378856	Sizeof	sizeof		1375208	0					
ANR	1378857	PrimaryExpression	"""extension_loaded"""		1375208	1					
ANR	1378858	PrimaryExpression	1		1375208	1					
ANR	1378859	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		1375208	1		&&			
ANR	1378860	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		1375208	0					
ANR	1378861	UnaryOperator	!		1375208	0					
ANR	1378862	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		1375208	1					
ANR	1378863	Callee	memcmp		1375208	0					
ANR	1378864	Identifier	memcmp		1375208	0					
ANR	1378865	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	1					
ANR	1378866	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378867	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1378868	Callee	Z_STRVAL		1375208	0					
ANR	1378869	Identifier	Z_STRVAL		1375208	0					
ANR	1378870	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1378871	Argument	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378872	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1378873	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1378874	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1378875	ArgumentList	init_opline		1375208	1					
ANR	1378876	Argument	init_opline		1375208	0					
ANR	1378877	Identifier	init_opline		1375208	0					
ANR	1378878	Argument	"""extension_loaded"""		1375208	1					
ANR	1378879	PrimaryExpression	"""extension_loaded"""		1375208	0					
ANR	1378880	Argument	"sizeof ( ""extension_loaded"" ) - 1"		1375208	2					
ANR	1378881	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		1375208	0		-			
ANR	1378882	SizeofExpression	"sizeof ( ""extension_loaded"" )"		1375208	0					
ANR	1378883	Sizeof	sizeof		1375208	0					
ANR	1378884	PrimaryExpression	"""extension_loaded"""		1375208	1					
ANR	1378885	PrimaryExpression	1		1375208	1					
ANR	1378886	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		1375208	1					
ANR	1378887	UnaryOperator	!		1375208	0					
ANR	1378888	CallExpression	"zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		1375208	1					
ANR	1378889	Callee	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378890	Identifier	zend_optimizer_is_disabled_func		1375208	0					
ANR	1378891	ArgumentList	"""extension_loaded"""		1375208	1					
ANR	1378892	Argument	"""extension_loaded"""		1375208	0					
ANR	1378893	PrimaryExpression	"""extension_loaded"""		1375208	0					
ANR	1378894	Argument	"sizeof ( ""extension_loaded"" ) - 1"		1375208	1					
ANR	1378895	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		1375208	0		-			
ANR	1378896	SizeofExpression	"sizeof ( ""extension_loaded"" )"		1375208	0					
ANR	1378897	Sizeof	sizeof		1375208	0					
ANR	1378898	PrimaryExpression	"""extension_loaded"""		1375208	1					
ANR	1378899	PrimaryExpression	1		1375208	1					
ANR	1378900	CompoundStatement		440:5:14562:14637	1375208	1					
ANR	1378901	IdentifierDeclStatement	zval t ;	477:5:16449:16455	1375208	0	True				
ANR	1378902	IdentifierDecl	t		1375208	0					
ANR	1378903	IdentifierDeclType	zval		1375208	0					
ANR	1378904	Identifier	t		1375208	1					
ANR	1378905	IdentifierDeclStatement	zend_string * lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) ) ;	478:5:16462:16551	1375208	1	True				
ANR	1378906	IdentifierDecl	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		1375208	0					
ANR	1378907	IdentifierDeclType	zend_string *		1375208	0					
ANR	1378908	Identifier	lc_name		1375208	1					
ANR	1378909	AssignmentExpression	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		1375208	2		=			
ANR	1378910	Identifier	lc_name		1375208	0					
ANR	1378911	CallExpression	zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		1375208	1					
ANR	1378912	Callee	zend_string_tolower		1375208	0					
ANR	1378913	Identifier	zend_string_tolower		1375208	0					
ANR	1378914	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	1					
ANR	1378915	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378916	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1378917	Callee	Z_STR		1375208	0					
ANR	1378918	Identifier	Z_STR		1375208	0					
ANR	1378919	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1378920	Argument	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378921	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1378922	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1378923	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1378924	ArgumentList	send1_opline		1375208	1					
ANR	1378925	Argument	send1_opline		1375208	0					
ANR	1378926	Identifier	send1_opline		1375208	0					
ANR	1378927	IdentifierDeclStatement	"zend_module_entry * m = zend_hash_find_ptr ( & module_registry , lc_name ) ;"	480:5:16558:16633	1375208	2	True				
ANR	1378928	IdentifierDecl	"* m = zend_hash_find_ptr ( & module_registry , lc_name )"		1375208	0					
ANR	1378929	IdentifierDeclType	zend_module_entry *		1375208	0					
ANR	1378930	Identifier	m		1375208	1					
ANR	1378931	AssignmentExpression	"* m = zend_hash_find_ptr ( & module_registry , lc_name )"		1375208	2		=			
ANR	1378932	Identifier	m		1375208	0					
ANR	1378933	CallExpression	"zend_hash_find_ptr ( & module_registry , lc_name )"		1375208	1					
ANR	1378934	Callee	zend_hash_find_ptr		1375208	0					
ANR	1378935	Identifier	zend_hash_find_ptr		1375208	0					
ANR	1378936	ArgumentList	& module_registry		1375208	1					
ANR	1378937	Argument	& module_registry		1375208	0					
ANR	1378938	UnaryOperationExpression	& module_registry		1375208	0					
ANR	1378939	UnaryOperator	&		1375208	0					
ANR	1378940	Identifier	module_registry		1375208	1					
ANR	1378941	Argument	lc_name		1375208	1					
ANR	1378942	Identifier	lc_name		1375208	0					
ANR	1378943	ExpressionStatement	zend_string_release ( lc_name )	483:5:16641:16669	1375208	3	True				
ANR	1378944	CallExpression	zend_string_release ( lc_name )		1375208	0					
ANR	1378945	Callee	zend_string_release		1375208	0					
ANR	1378946	Identifier	zend_string_release		1375208	0					
ANR	1378947	ArgumentList	lc_name		1375208	1					
ANR	1378948	Argument	lc_name		1375208	0					
ANR	1378949	Identifier	lc_name		1375208	0					
ANR	1378950	IfStatement	if ( ! m )		1375208	4					
ANR	1378951	Condition	! m	484:9:16680:16681	1375208	0	True				
ANR	1378952	UnaryOperationExpression	! m		1375208	0					
ANR	1378953	UnaryOperator	!		1375208	0					
ANR	1378954	Identifier	m		1375208	1					
ANR	1378955	CompoundStatement		444:13:14688:14688	1375208	1					
ANR	1378956	IfStatement	if ( ! PG ( enable_dl ) )		1375208	0					
ANR	1378957	Condition	! PG ( enable_dl )	485:10:16696:16709	1375208	0	True				
ANR	1378958	UnaryOperationExpression	! PG ( enable_dl )		1375208	0					
ANR	1378959	UnaryOperator	!		1375208	0					
ANR	1378960	CallExpression	PG ( enable_dl )		1375208	1					
ANR	1378961	Callee	PG		1375208	0					
ANR	1378962	Identifier	PG		1375208	0					
ANR	1378963	ArgumentList	enable_dl		1375208	1					
ANR	1378964	Argument	enable_dl		1375208	0					
ANR	1378965	Identifier	enable_dl		1375208	0					
ANR	1378966	CompoundStatement		445:26:14716:14716	1375208	1					
ANR	1378967	BreakStatement	break ;	486:7:16721:16726	1375208	0	True				
ANR	1378968	ElseStatement	else		1375208	0					
ANR	1378969	CompoundStatement		447:13:14745:14745	1375208	0					
ANR	1378970	ExpressionStatement	ZVAL_FALSE ( & t )	488:7:16750:16764	1375208	0	True				
ANR	1378971	CallExpression	ZVAL_FALSE ( & t )		1375208	0					
ANR	1378972	Callee	ZVAL_FALSE		1375208	0					
ANR	1378973	Identifier	ZVAL_FALSE		1375208	0					
ANR	1378974	ArgumentList	& t		1375208	1					
ANR	1378975	Argument	& t		1375208	0					
ANR	1378976	UnaryOperationExpression	& t		1375208	0					
ANR	1378977	UnaryOperator	&		1375208	0					
ANR	1378978	Identifier	t		1375208	1					
ANR	1378979	ElseStatement	else		1375208	0					
ANR	1378980	CompoundStatement		457:13:14929:14929	1375208	0					
ANR	1378981	BreakStatement	break ;	498:7:16934:16939	1375208	0	True				
ANR	1378982	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		1375208	5					
ANR	1378983	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	502:9:16966:17055	1375208	0	True				
ANR	1378984	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		1375208	0					
ANR	1378985	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1378986	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1378987	ArgumentList	op_array		1375208	1					
ANR	1378988	Argument	op_array		1375208	0					
ANR	1378989	Identifier	op_array		1375208	0					
ANR	1378990	Argument	opline + 1		1375208	1					
ANR	1378991	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1378992	Identifier	opline		1375208	0					
ANR	1378993	PrimaryExpression	1		1375208	1					
ANR	1378994	Argument	IS_VAR		1375208	2					
ANR	1378995	Identifier	IS_VAR		1375208	0					
ANR	1378996	Argument	ZEND_RESULT ( opline ) . var		1375208	3					
ANR	1378997	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1378998	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1378999	Callee	ZEND_RESULT		1375208	0					
ANR	1379000	Identifier	ZEND_RESULT		1375208	0					
ANR	1379001	ArgumentList	opline		1375208	1					
ANR	1379002	Argument	opline		1375208	0					
ANR	1379003	Identifier	opline		1375208	0					
ANR	1379004	Identifier	var		1375208	1					
ANR	1379005	Argument	& t		1375208	4					
ANR	1379006	UnaryOperationExpression	& t		1375208	0					
ANR	1379007	UnaryOperator	&		1375208	0					
ANR	1379008	Identifier	t		1375208	1					
ANR	1379009	CompoundStatement		462:101:15062:15062	1375208	1					
ANR	1379010	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	503:6:17066:17110	1375208	0	True				
ANR	1379011	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		1375208	0					
ANR	1379012	Callee	literal_dtor		1375208	0					
ANR	1379013	Identifier	literal_dtor		1375208	0					
ANR	1379014	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1379015	Argument	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1379016	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		1375208	0					
ANR	1379017	UnaryOperator	&		1375208	0					
ANR	1379018	CallExpression	ZEND_OP2_LITERAL ( init_opline )		1375208	1					
ANR	1379019	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1379020	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1379021	ArgumentList	init_opline		1375208	1					
ANR	1379022	Argument	init_opline		1375208	0					
ANR	1379023	Identifier	init_opline		1375208	0					
ANR	1379024	ExpressionStatement	MAKE_NOP ( init_opline )	504:6:17118:17139	1375208	1	True				
ANR	1379025	CallExpression	MAKE_NOP ( init_opline )		1375208	0					
ANR	1379026	Callee	MAKE_NOP		1375208	0					
ANR	1379027	Identifier	MAKE_NOP		1375208	0					
ANR	1379028	ArgumentList	init_opline		1375208	1					
ANR	1379029	Argument	init_opline		1375208	0					
ANR	1379030	Identifier	init_opline		1375208	0					
ANR	1379031	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	505:6:17147:17192	1375208	2	True				
ANR	1379032	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		1375208	0					
ANR	1379033	Callee	literal_dtor		1375208	0					
ANR	1379034	Identifier	literal_dtor		1375208	0					
ANR	1379035	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1379036	Argument	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1379037	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		1375208	0					
ANR	1379038	UnaryOperator	&		1375208	0					
ANR	1379039	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		1375208	1					
ANR	1379040	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379041	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379042	ArgumentList	send1_opline		1375208	1					
ANR	1379043	Argument	send1_opline		1375208	0					
ANR	1379044	Identifier	send1_opline		1375208	0					
ANR	1379045	ExpressionStatement	MAKE_NOP ( send1_opline )	506:6:17200:17222	1375208	3	True				
ANR	1379046	CallExpression	MAKE_NOP ( send1_opline )		1375208	0					
ANR	1379047	Callee	MAKE_NOP		1375208	0					
ANR	1379048	Identifier	MAKE_NOP		1375208	0					
ANR	1379049	ArgumentList	send1_opline		1375208	1					
ANR	1379050	Argument	send1_opline		1375208	0					
ANR	1379051	Identifier	send1_opline		1375208	0					
ANR	1379052	ExpressionStatement	MAKE_NOP ( opline )	507:6:17230:17246	1375208	4	True				
ANR	1379053	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1379054	Callee	MAKE_NOP		1375208	0					
ANR	1379055	Identifier	MAKE_NOP		1375208	0					
ANR	1379056	ArgumentList	opline		1375208	1					
ANR	1379057	Argument	opline		1375208	0					
ANR	1379058	Identifier	opline		1375208	0					
ANR	1379059	BreakStatement	break ;	508:6:17254:17259	1375208	5	True				
ANR	1379060	ElseStatement	else		1375208	0					
ANR	1379061	CompoundStatement		450:12:14790:14790	1375208	0					
ANR	1379062	Statement	if	491:6:16794:16795	1375208	0	True				
ANR	1379063	Statement	(	491:9:16797:16797	1375208	1	True				
ANR	1379064	Statement	m	491:10:16798:16798	1375208	2	True				
ANR	1379065	Statement	->	491:11:16799:16800	1375208	3	True				
ANR	1379066	Statement	type	491:13:16801:16804	1375208	4	True				
ANR	1379067	Statement	==	491:18:16806:16807	1375208	5	True				
ANR	1379068	Statement	MODULE_PERSISTENT	491:21:16809:16825	1375208	6	True				
ANR	1379069	Statement	&&	493:7:16852:16853	1375208	7	True				
ANR	1379070	Statement	m	493:10:16855:16855	1375208	8	True				
ANR	1379071	Statement	->	493:11:16856:16857	1375208	9	True				
ANR	1379072	Statement	handle	493:13:16858:16863	1375208	10	True				
ANR	1379073	Statement	==	493:20:16865:16866	1375208	11	True				
ANR	1379074	Statement	NULL	493:23:16868:16871	1375208	12	True				
ANR	1379075	Statement	)	495:6:16886:16886	1375208	13	True				
ANR	1379076	CompoundStatement		455:8:14892:14892	1375208	14					
ANR	1379077	ExpressionStatement	ZVAL_TRUE ( & t )	496:7:16897:16910	1375208	0	True				
ANR	1379078	CallExpression	ZVAL_TRUE ( & t )		1375208	0					
ANR	1379079	Callee	ZVAL_TRUE		1375208	0					
ANR	1379080	Identifier	ZVAL_TRUE		1375208	0					
ANR	1379081	ArgumentList	& t		1375208	1					
ANR	1379082	Argument	& t		1375208	0					
ANR	1379083	UnaryOperationExpression	& t		1375208	0					
ANR	1379084	UnaryOperator	&		1375208	0					
ANR	1379085	Identifier	t		1375208	1					
ANR	1379086	ExpressionStatement	collect_constants = 0	585:3:20568:20589	1375208	11	True				
ANR	1379087	AssignmentExpression	collect_constants = 0		1375208	0		=			
ANR	1379088	Identifier	collect_constants		1375208	0					
ANR	1379089	PrimaryExpression	0		1375208	1					
ANR	1379090	BreakStatement	break ;	586:3:20594:20599	1375208	12	True				
ANR	1379091	Label	case ZEND_STRLEN :	588:2:20607:20623	1375208	41	True				
ANR	1379092	Identifier	ZEND_STRLEN		1375208	0					
ANR	1379093	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING )		1375208	42					
ANR	1379094	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING	589:7:20632:20720	1375208	0	True				
ANR	1379095	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		1375208	0		&&			
ANR	1379096	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1375208	0		==			
ANR	1379097	CallExpression	ZEND_OP1_TYPE ( opline )		1375208	0					
ANR	1379098	Callee	ZEND_OP1_TYPE		1375208	0					
ANR	1379099	Identifier	ZEND_OP1_TYPE		1375208	0					
ANR	1379100	ArgumentList	opline		1375208	1					
ANR	1379101	Argument	opline		1375208	0					
ANR	1379102	Identifier	opline		1375208	0					
ANR	1379103	Identifier	IS_CONST		1375208	1					
ANR	1379104	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		1375208	1		==			
ANR	1379105	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379106	Callee	Z_TYPE		1375208	0					
ANR	1379107	Identifier	Z_TYPE		1375208	0					
ANR	1379108	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379109	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379110	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379111	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379112	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379113	ArgumentList	opline		1375208	1					
ANR	1379114	Argument	opline		1375208	0					
ANR	1379115	Identifier	opline		1375208	0					
ANR	1379116	Identifier	IS_STRING		1375208	1					
ANR	1379117	CompoundStatement		551:4:18733:18739	1375208	1					
ANR	1379118	IdentifierDeclStatement	zval t ;	591:4:20729:20735	1375208	0	True				
ANR	1379119	IdentifierDecl	t		1375208	0					
ANR	1379120	IdentifierDeclType	zval		1375208	0					
ANR	1379121	Identifier	t		1375208	1					
ANR	1379122	ExpressionStatement	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) )"	593:4:20742:20791	1375208	1	True				
ANR	1379123	CallExpression	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) )"		1375208	0					
ANR	1379124	Callee	ZVAL_LONG		1375208	0					
ANR	1379125	Identifier	ZVAL_LONG		1375208	0					
ANR	1379126	ArgumentList	& t		1375208	1					
ANR	1379127	Argument	& t		1375208	0					
ANR	1379128	UnaryOperationExpression	& t		1375208	0					
ANR	1379129	UnaryOperator	&		1375208	0					
ANR	1379130	Identifier	t		1375208	1					
ANR	1379131	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		1375208	1					
ANR	1379132	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379133	Callee	Z_STRLEN		1375208	0					
ANR	1379134	Identifier	Z_STRLEN		1375208	0					
ANR	1379135	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379136	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379137	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379138	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379139	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379140	ArgumentList	opline		1375208	1					
ANR	1379141	Argument	opline		1375208	0					
ANR	1379142	Identifier	opline		1375208	0					
ANR	1379143	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		1375208	2					
ANR	1379144	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , ZEND_RESULT ( opline ) . var , & t )"	594:8:20801:20894	1375208	0	True				
ANR	1379145	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , ZEND_RESULT ( opline ) . var , & t )"		1375208	0					
ANR	1379146	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1379147	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1379148	ArgumentList	op_array		1375208	1					
ANR	1379149	Argument	op_array		1375208	0					
ANR	1379150	Identifier	op_array		1375208	0					
ANR	1379151	Argument	opline + 1		1375208	1					
ANR	1379152	AdditiveExpression	opline + 1		1375208	0		+			
ANR	1379153	Identifier	opline		1375208	0					
ANR	1379154	PrimaryExpression	1		1375208	1					
ANR	1379155	Argument	IS_TMP_VAR		1375208	2					
ANR	1379156	Identifier	IS_TMP_VAR		1375208	0					
ANR	1379157	Argument	ZEND_RESULT ( opline ) . var		1375208	3					
ANR	1379158	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1379159	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1379160	Callee	ZEND_RESULT		1375208	0					
ANR	1379161	Identifier	ZEND_RESULT		1375208	0					
ANR	1379162	ArgumentList	opline		1375208	1					
ANR	1379163	Argument	opline		1375208	0					
ANR	1379164	Identifier	opline		1375208	0					
ANR	1379165	Identifier	var		1375208	1					
ANR	1379166	Argument	& t		1375208	4					
ANR	1379167	UnaryOperationExpression	& t		1375208	0					
ANR	1379168	UnaryOperator	&		1375208	0					
ANR	1379169	Identifier	t		1375208	1					
ANR	1379170	CompoundStatement		554:104:18901:18901	1375208	1					
ANR	1379171	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	595:5:20904:20943	1375208	0	True				
ANR	1379172	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379173	Callee	literal_dtor		1375208	0					
ANR	1379174	Identifier	literal_dtor		1375208	0					
ANR	1379175	ArgumentList	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379176	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379177	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379178	UnaryOperator	&		1375208	0					
ANR	1379179	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379180	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379181	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379182	ArgumentList	opline		1375208	1					
ANR	1379183	Argument	opline		1375208	0					
ANR	1379184	Identifier	opline		1375208	0					
ANR	1379185	ExpressionStatement	MAKE_NOP ( opline )	596:5:20950:20966	1375208	1	True				
ANR	1379186	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1379187	Callee	MAKE_NOP		1375208	0					
ANR	1379188	Identifier	MAKE_NOP		1375208	0					
ANR	1379189	ArgumentList	opline		1375208	1					
ANR	1379190	Argument	opline		1375208	0					
ANR	1379191	Identifier	opline		1375208	0					
ANR	1379192	BreakStatement	break ;	599:3:20982:20987	1375208	43	True				
ANR	1379193	Label	case ZEND_DEFINED :	600:2:20991:21008	1375208	44	True				
ANR	1379194	Identifier	ZEND_DEFINED		1375208	0					
ANR	1379195	CompoundStatement		563:4:19035:19072	1375208	45					
ANR	1379196	IdentifierDeclStatement	zval c ;	602:4:21019:21025	1375208	0	True				
ANR	1379197	IdentifierDecl	c		1375208	0					
ANR	1379198	IdentifierDeclType	zval		1375208	0					
ANR	1379199	Identifier	c		1375208	1					
ANR	1379200	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	603:4:21031:21068	1375208	1	True				
ANR	1379201	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		1375208	0					
ANR	1379202	IdentifierDeclType	uint32_t		1375208	0					
ANR	1379203	Identifier	tv		1375208	1					
ANR	1379204	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		1375208	2		=			
ANR	1379205	Identifier	tv		1375208	0					
ANR	1379206	MemberAccess	ZEND_RESULT ( opline ) . var		1375208	1					
ANR	1379207	CallExpression	ZEND_RESULT ( opline )		1375208	0					
ANR	1379208	Callee	ZEND_RESULT		1375208	0					
ANR	1379209	Identifier	ZEND_RESULT		1375208	0					
ANR	1379210	ArgumentList	opline		1375208	1					
ANR	1379211	Argument	opline		1375208	0					
ANR	1379212	Identifier	opline		1375208	0					
ANR	1379213	Identifier	var		1375208	1					
ANR	1379214	IfStatement	"if ( ! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 ) )"		1375208	2					
ANR	1379215	Condition	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 )"	604:8:21078:21156	1375208	0	True				
ANR	1379216	UnaryOperationExpression	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 )"		1375208	0					
ANR	1379217	UnaryOperator	!		1375208	0					
ANR	1379218	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 )"		1375208	1					
ANR	1379219	Callee	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1379220	Identifier	zend_optimizer_get_persistent_constant		1375208	0					
ANR	1379221	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		1375208	1					
ANR	1379222	Argument	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379223	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379224	Callee	Z_STR		1375208	0					
ANR	1379225	Identifier	Z_STR		1375208	0					
ANR	1379226	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379227	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379228	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379229	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379230	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379231	ArgumentList	opline		1375208	1					
ANR	1379232	Argument	opline		1375208	0					
ANR	1379233	Identifier	opline		1375208	0					
ANR	1379234	Argument	& c		1375208	1					
ANR	1379235	UnaryOperationExpression	& c		1375208	0					
ANR	1379236	UnaryOperator	&		1375208	0					
ANR	1379237	Identifier	c		1375208	1					
ANR	1379238	Argument	0		1375208	2					
ANR	1379239	PrimaryExpression	0		1375208	0					
ANR	1379240	CompoundStatement		564:89:19163:19163	1375208	1					
ANR	1379241	BreakStatement	break ;	605:5:21166:21171	1375208	0	True				
ANR	1379242	ExpressionStatement	ZVAL_TRUE ( & c )	607:4:21183:21196	1375208	3	True				
ANR	1379243	CallExpression	ZVAL_TRUE ( & c )		1375208	0					
ANR	1379244	Callee	ZVAL_TRUE		1375208	0					
ANR	1379245	Identifier	ZVAL_TRUE		1375208	0					
ANR	1379246	ArgumentList	& c		1375208	1					
ANR	1379247	Argument	& c		1375208	0					
ANR	1379248	UnaryOperationExpression	& c		1375208	0					
ANR	1379249	UnaryOperator	&		1375208	0					
ANR	1379250	Identifier	c		1375208	1					
ANR	1379251	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c ) )"		1375208	4					
ANR	1379252	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"	608:8:21206:21274	1375208	0	True				
ANR	1379253	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"		1375208	0					
ANR	1379254	Callee	zend_optimizer_replace_by_const		1375208	0					
ANR	1379255	Identifier	zend_optimizer_replace_by_const		1375208	0					
ANR	1379256	ArgumentList	op_array		1375208	1					
ANR	1379257	Argument	op_array		1375208	0					
ANR	1379258	Identifier	op_array		1375208	0					
ANR	1379259	Argument	opline		1375208	1					
ANR	1379260	Identifier	opline		1375208	0					
ANR	1379261	Argument	IS_TMP_VAR		1375208	2					
ANR	1379262	Identifier	IS_TMP_VAR		1375208	0					
ANR	1379263	Argument	tv		1375208	3					
ANR	1379264	Identifier	tv		1375208	0					
ANR	1379265	Argument	& c		1375208	4					
ANR	1379266	UnaryOperationExpression	& c		1375208	0					
ANR	1379267	UnaryOperator	&		1375208	0					
ANR	1379268	Identifier	c		1375208	1					
ANR	1379269	CompoundStatement		568:79:19281:19281	1375208	1					
ANR	1379270	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	609:5:21284:21323	1375208	0	True				
ANR	1379271	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379272	Callee	literal_dtor		1375208	0					
ANR	1379273	Identifier	literal_dtor		1375208	0					
ANR	1379274	ArgumentList	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379275	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379276	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379277	UnaryOperator	&		1375208	0					
ANR	1379278	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379279	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379280	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379281	ArgumentList	opline		1375208	1					
ANR	1379282	Argument	opline		1375208	0					
ANR	1379283	Identifier	opline		1375208	0					
ANR	1379284	ExpressionStatement	MAKE_NOP ( opline )	610:5:21330:21346	1375208	1	True				
ANR	1379285	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1379286	Callee	MAKE_NOP		1375208	0					
ANR	1379287	Identifier	MAKE_NOP		1375208	0					
ANR	1379288	ArgumentList	opline		1375208	1					
ANR	1379289	Argument	opline		1375208	0					
ANR	1379290	Identifier	opline		1375208	0					
ANR	1379291	BreakStatement	break ;	613:3:21362:21367	1375208	46	True				
ANR	1379292	Label	case ZEND_DECLARE_CONST :	614:2:21371:21394	1375208	47	True				
ANR	1379293	Identifier	ZEND_DECLARE_CONST		1375208	0					
ANR	1379294	IfStatement	if ( collect_constants && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING )		1375208	48					
ANR	1379295	Condition	collect_constants && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING	615:7:21403:21531	1375208	0	True				
ANR	1379296	AndExpression	collect_constants && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING		1375208	0		&&			
ANR	1379297	Identifier	collect_constants		1375208	0					
ANR	1379298	AndExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING		1375208	1		&&			
ANR	1379299	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		1375208	0		==			
ANR	1379300	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379301	Callee	Z_TYPE		1375208	0					
ANR	1379302	Identifier	Z_TYPE		1375208	0					
ANR	1379303	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379304	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379305	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379306	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379307	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379308	ArgumentList	opline		1375208	1					
ANR	1379309	Argument	opline		1375208	0					
ANR	1379310	Identifier	opline		1375208	0					
ANR	1379311	Identifier	IS_STRING		1375208	1					
ANR	1379312	RelationalExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING		1375208	1		<=			
ANR	1379313	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		1375208	0					
ANR	1379314	Callee	Z_TYPE		1375208	0					
ANR	1379315	Identifier	Z_TYPE		1375208	0					
ANR	1379316	ArgumentList	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1379317	Argument	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1379318	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1379319	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1379320	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1379321	ArgumentList	opline		1375208	1					
ANR	1379322	Argument	opline		1375208	0					
ANR	1379323	Identifier	opline		1375208	0					
ANR	1379324	Identifier	IS_STRING		1375208	1					
ANR	1379325	CompoundStatement		577:54:19538:19538	1375208	1					
ANR	1379326	ExpressionStatement	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) )"	618:4:21540:21630	1375208	0	True				
ANR	1379327	CallExpression	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) )"		1375208	0					
ANR	1379328	Callee	zend_optimizer_collect_constant		1375208	0					
ANR	1379329	Identifier	zend_optimizer_collect_constant		1375208	0					
ANR	1379330	ArgumentList	ctx		1375208	1					
ANR	1379331	Argument	ctx		1375208	0					
ANR	1379332	Identifier	ctx		1375208	0					
ANR	1379333	Argument	& ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379334	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379335	UnaryOperator	&		1375208	0					
ANR	1379336	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379337	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379338	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379339	ArgumentList	opline		1375208	1					
ANR	1379340	Argument	opline		1375208	0					
ANR	1379341	Identifier	opline		1375208	0					
ANR	1379342	Argument	& ZEND_OP2_LITERAL ( opline )		1375208	2					
ANR	1379343	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		1375208	0					
ANR	1379344	UnaryOperator	&		1375208	0					
ANR	1379345	CallExpression	ZEND_OP2_LITERAL ( opline )		1375208	1					
ANR	1379346	Callee	ZEND_OP2_LITERAL		1375208	0					
ANR	1379347	Identifier	ZEND_OP2_LITERAL		1375208	0					
ANR	1379348	ArgumentList	opline		1375208	1					
ANR	1379349	Argument	opline		1375208	0					
ANR	1379350	Identifier	opline		1375208	0					
ANR	1379351	BreakStatement	break ;	620:3:21640:21645	1375208	49	True				
ANR	1379352	Label	case ZEND_RETURN :	622:2:21650:21666	1375208	50	True				
ANR	1379353	Identifier	ZEND_RETURN		1375208	0					
ANR	1379354	Label	case ZEND_RETURN_BY_REF :	623:2:21670:21693	1375208	51	True				
ANR	1379355	Identifier	ZEND_RETURN_BY_REF		1375208	0					
ANR	1379356	Label	case ZEND_GENERATOR_RETURN :	624:2:21697:21723	1375208	52	True				
ANR	1379357	Identifier	ZEND_GENERATOR_RETURN		1375208	0					
ANR	1379358	Label	case ZEND_EXIT :	625:2:21727:21741	1375208	53	True				
ANR	1379359	Identifier	ZEND_EXIT		1375208	0					
ANR	1379360	Label	case ZEND_THROW :	626:2:21745:21760	1375208	54	True				
ANR	1379361	Identifier	ZEND_THROW		1375208	0					
ANR	1379362	Label	case ZEND_CATCH :	627:2:21764:21779	1375208	55	True				
ANR	1379363	Identifier	ZEND_CATCH		1375208	0					
ANR	1379364	Label	case ZEND_FAST_CALL :	628:2:21783:21802	1375208	56	True				
ANR	1379365	Identifier	ZEND_FAST_CALL		1375208	0					
ANR	1379366	Label	case ZEND_FAST_RET :	629:2:21806:21824	1375208	57	True				
ANR	1379367	Identifier	ZEND_FAST_RET		1375208	0					
ANR	1379368	Label	case ZEND_JMP :	630:2:21828:21841	1375208	58	True				
ANR	1379369	Identifier	ZEND_JMP		1375208	0					
ANR	1379370	Label	case ZEND_JMPZNZ :	631:2:21845:21861	1375208	59	True				
ANR	1379371	Identifier	ZEND_JMPZNZ		1375208	0					
ANR	1379372	Label	case ZEND_JMPZ :	632:2:21865:21879	1375208	60	True				
ANR	1379373	Identifier	ZEND_JMPZ		1375208	0					
ANR	1379374	Label	case ZEND_JMPNZ :	633:2:21883:21898	1375208	61	True				
ANR	1379375	Identifier	ZEND_JMPNZ		1375208	0					
ANR	1379376	Label	case ZEND_JMPZ_EX :	634:2:21902:21919	1375208	62	True				
ANR	1379377	Identifier	ZEND_JMPZ_EX		1375208	0					
ANR	1379378	Label	case ZEND_JMPNZ_EX :	635:2:21923:21941	1375208	63	True				
ANR	1379379	Identifier	ZEND_JMPNZ_EX		1375208	0					
ANR	1379380	Label	case ZEND_FE_RESET_R :	636:2:21945:21965	1375208	64	True				
ANR	1379381	Identifier	ZEND_FE_RESET_R		1375208	0					
ANR	1379382	Label	case ZEND_FE_RESET_RW :	637:2:21969:21990	1375208	65	True				
ANR	1379383	Identifier	ZEND_FE_RESET_RW		1375208	0					
ANR	1379384	Label	case ZEND_FE_FETCH_R :	638:2:21994:22014	1375208	66	True				
ANR	1379385	Identifier	ZEND_FE_FETCH_R		1375208	0					
ANR	1379386	Label	case ZEND_FE_FETCH_RW :	639:2:22018:22039	1375208	67	True				
ANR	1379387	Identifier	ZEND_FE_FETCH_RW		1375208	0					
ANR	1379388	Label	case ZEND_NEW :	640:2:22043:22056	1375208	68	True				
ANR	1379389	Identifier	ZEND_NEW		1375208	0					
ANR	1379390	Label	case ZEND_JMP_SET :	641:2:22060:22077	1375208	69	True				
ANR	1379391	Identifier	ZEND_JMP_SET		1375208	0					
ANR	1379392	Label	case ZEND_COALESCE :	642:2:22081:22099	1375208	70	True				
ANR	1379393	Identifier	ZEND_COALESCE		1375208	0					
ANR	1379394	Label	case ZEND_ASSERT_CHECK :	643:2:22103:22125	1375208	71	True				
ANR	1379395	Identifier	ZEND_ASSERT_CHECK		1375208	0					
ANR	1379396	ExpressionStatement	collect_constants = 0	644:3:22130:22151	1375208	72	True				
ANR	1379397	AssignmentExpression	collect_constants = 0		1375208	0		=			
ANR	1379398	Identifier	collect_constants		1375208	0					
ANR	1379399	PrimaryExpression	0		1375208	1					
ANR	1379400	BreakStatement	break ;	645:3:22156:22161	1375208	73	True				
ANR	1379401	Label	case ZEND_FETCH_R :	646:2:22165:22182	1375208	74	True				
ANR	1379402	Identifier	ZEND_FETCH_R		1375208	0					
ANR	1379403	Label	case ZEND_FETCH_W :	647:2:22186:22203	1375208	75	True				
ANR	1379404	Identifier	ZEND_FETCH_W		1375208	0					
ANR	1379405	Label	case ZEND_FETCH_RW :	648:2:22207:22225	1375208	76	True				
ANR	1379406	Identifier	ZEND_FETCH_RW		1375208	0					
ANR	1379407	Label	case ZEND_FETCH_FUNC_ARG :	649:2:22229:22253	1375208	77	True				
ANR	1379408	Identifier	ZEND_FETCH_FUNC_ARG		1375208	0					
ANR	1379409	Label	case ZEND_FETCH_IS :	650:2:22257:22275	1375208	78	True				
ANR	1379410	Identifier	ZEND_FETCH_IS		1375208	0					
ANR	1379411	Label	case ZEND_FETCH_UNSET :	651:2:22279:22300	1375208	79	True				
ANR	1379412	Identifier	ZEND_FETCH_UNSET		1375208	0					
ANR	1379413	IfStatement	"if ( opline != op_array -> opcodes && ( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 ) )"		1375208	80					
ANR	1379414	Condition	"opline != op_array -> opcodes && ( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"	652:7:22309:22750	1375208	0	True				
ANR	1379415	AndExpression	"opline != op_array -> opcodes && ( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		1375208	0		&&			
ANR	1379416	EqualityExpression	opline != op_array -> opcodes		1375208	0		!=			
ANR	1379417	Identifier	opline		1375208	0					
ANR	1379418	PtrMemberAccess	op_array -> opcodes		1375208	1					
ANR	1379419	Identifier	op_array		1375208	0					
ANR	1379420	Identifier	opcodes		1375208	1					
ANR	1379421	AndExpression	"( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		1375208	1		&&			
ANR	1379422	EqualityExpression	( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE		1375208	0		==			
ANR	1379423	PtrMemberAccess	( opline - 1 ) -> opcode		1375208	0					
ANR	1379424	AdditiveExpression	opline - 1		1375208	0		-			
ANR	1379425	Identifier	opline		1375208	0					
ANR	1379426	PrimaryExpression	1		1375208	1					
ANR	1379427	Identifier	opcode		1375208	1					
ANR	1379428	Identifier	ZEND_BEGIN_SILENCE		1375208	1					
ANR	1379429	AndExpression	"( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		1375208	1		&&			
ANR	1379430	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL		1375208	0		==			
ANR	1379431	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		1375208	0		&			
ANR	1379432	PtrMemberAccess	opline -> extended_value		1375208	0					
ANR	1379433	Identifier	opline		1375208	0					
ANR	1379434	Identifier	extended_value		1375208	1					
ANR	1379435	Identifier	ZEND_FETCH_TYPE_MASK		1375208	1					
ANR	1379436	Identifier	ZEND_FETCH_LOCAL		1375208	1					
ANR	1379437	AndExpression	"opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		1375208	1		&&			
ANR	1379438	EqualityExpression	opline -> op1_type == IS_CONST		1375208	0		==			
ANR	1379439	PtrMemberAccess	opline -> op1_type		1375208	0					
ANR	1379440	Identifier	opline		1375208	0					
ANR	1379441	Identifier	op1_type		1375208	1					
ANR	1379442	Identifier	IS_CONST		1375208	1					
ANR	1379443	AndExpression	"opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		1375208	1		&&			
ANR	1379444	EqualityExpression	opline -> op2_type == IS_UNUSED		1375208	0		==			
ANR	1379445	PtrMemberAccess	opline -> op2_type		1375208	0					
ANR	1379446	Identifier	opline		1375208	0					
ANR	1379447	Identifier	op2_type		1375208	1					
ANR	1379448	Identifier	IS_UNUSED		1375208	1					
ANR	1379449	AndExpression	"Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		1375208	1		&&			
ANR	1379450	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		1375208	0		==			
ANR	1379451	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379452	Callee	Z_TYPE		1375208	0					
ANR	1379453	Identifier	Z_TYPE		1375208	0					
ANR	1379454	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379455	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379456	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379457	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379458	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379459	ArgumentList	opline		1375208	1					
ANR	1379460	Argument	opline		1375208	0					
ANR	1379461	Identifier	opline		1375208	0					
ANR	1379462	Identifier	IS_STRING		1375208	1					
ANR	1379463	OrExpression	"Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0"		1375208	1		||			
ANR	1379464	EqualityExpression	"Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1"		1375208	0		!=			
ANR	1379465	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379466	Callee	Z_STRLEN		1375208	0					
ANR	1379467	Identifier	Z_STRLEN		1375208	0					
ANR	1379468	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379469	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379470	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379471	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379472	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379473	ArgumentList	opline		1375208	1					
ANR	1379474	Argument	opline		1375208	0					
ANR	1379475	Identifier	opline		1375208	0					
ANR	1379476	AdditiveExpression	"sizeof ( ""this"" ) - 1"		1375208	1		-			
ANR	1379477	SizeofExpression	"sizeof ( ""this"" )"		1375208	0					
ANR	1379478	Sizeof	sizeof		1375208	0					
ANR	1379479	PrimaryExpression	"""this"""		1375208	1					
ANR	1379480	PrimaryExpression	1		1375208	1					
ANR	1379481	EqualityExpression	"memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0"		1375208	1		!=			
ANR	1379482	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 )"		1375208	0					
ANR	1379483	Callee	memcmp		1375208	0					
ANR	1379484	Identifier	memcmp		1375208	0					
ANR	1379485	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		1375208	1					
ANR	1379486	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379487	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379488	Callee	Z_STRVAL		1375208	0					
ANR	1379489	Identifier	Z_STRVAL		1375208	0					
ANR	1379490	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379491	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379492	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379493	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379494	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379495	ArgumentList	opline		1375208	1					
ANR	1379496	Argument	opline		1375208	0					
ANR	1379497	Identifier	opline		1375208	0					
ANR	1379498	Argument	"""this"""		1375208	1					
ANR	1379499	PrimaryExpression	"""this"""		1375208	0					
ANR	1379500	Argument	"sizeof ( ""this"" ) - 1"		1375208	2					
ANR	1379501	AdditiveExpression	"sizeof ( ""this"" ) - 1"		1375208	0		-			
ANR	1379502	SizeofExpression	"sizeof ( ""this"" )"		1375208	0					
ANR	1379503	Sizeof	sizeof		1375208	0					
ANR	1379504	PrimaryExpression	"""this"""		1375208	1					
ANR	1379505	PrimaryExpression	1		1375208	1					
ANR	1379506	PrimaryExpression	0		1375208	1					
ANR	1379507	CompoundStatement		624:4:20853:20872	1375208	1					
ANR	1379508	IdentifierDeclStatement	int var = opline -> result . var ;	661:7:22763:22791	1375208	0	True				
ANR	1379509	IdentifierDecl	var = opline -> result . var		1375208	0					
ANR	1379510	IdentifierDeclType	int		1375208	0					
ANR	1379511	Identifier	var		1375208	1					
ANR	1379512	AssignmentExpression	var = opline -> result . var		1375208	2		=			
ANR	1379513	Identifier	var		1375208	0					
ANR	1379514	MemberAccess	opline -> result . var		1375208	1					
ANR	1379515	PtrMemberAccess	opline -> result		1375208	0					
ANR	1379516	Identifier	opline		1375208	0					
ANR	1379517	Identifier	result		1375208	1					
ANR	1379518	Identifier	var		1375208	1					
ANR	1379519	IdentifierDeclStatement	int level = 0 ;	662:7:22800:22813	1375208	1	True				
ANR	1379520	IdentifierDecl	level = 0		1375208	0					
ANR	1379521	IdentifierDeclType	int		1375208	0					
ANR	1379522	Identifier	level		1375208	1					
ANR	1379523	AssignmentExpression	level = 0		1375208	2		=			
ANR	1379524	Identifier	level		1375208	0					
ANR	1379525	PrimaryExpression	0		1375208	1					
ANR	1379526	IdentifierDeclStatement	zend_op * op = opline + 1 ;	663:4:22819:22843	1375208	2	True				
ANR	1379527	IdentifierDecl	* op = opline + 1		1375208	0					
ANR	1379528	IdentifierDeclType	zend_op *		1375208	0					
ANR	1379529	Identifier	op		1375208	1					
ANR	1379530	AssignmentExpression	* op = opline + 1		1375208	2		=			
ANR	1379531	Identifier	op		1375208	0					
ANR	1379532	AdditiveExpression	opline + 1		1375208	1		+			
ANR	1379533	Identifier	opline		1375208	0					
ANR	1379534	PrimaryExpression	1		1375208	1					
ANR	1379535	IdentifierDeclStatement	zend_op * use = NULL ;	664:4:22849:22868	1375208	3	True				
ANR	1379536	IdentifierDecl	* use = NULL		1375208	0					
ANR	1379537	IdentifierDeclType	zend_op *		1375208	0					
ANR	1379538	Identifier	use		1375208	1					
ANR	1379539	AssignmentExpression	* use = NULL		1375208	2		=			
ANR	1379540	Identifier	NULL		1375208	0					
ANR	1379541	Identifier	NULL		1375208	1					
ANR	1379542	WhileStatement	while ( op < end )		1375208	4					
ANR	1379543	Condition	op < end	666:11:22882:22889	1375208	0	True				
ANR	1379544	RelationalExpression	op < end		1375208	0		<			
ANR	1379545	Identifier	op		1375208	0					
ANR	1379546	Identifier	end		1375208	1					
ANR	1379547	CompoundStatement		626:21:20896:20896	1375208	1					
ANR	1379548	IfStatement	if ( op -> opcode == ZEND_BEGIN_SILENCE )		1375208	0					
ANR	1379549	Condition	op -> opcode == ZEND_BEGIN_SILENCE	667:9:22903:22934	1375208	0	True				
ANR	1379550	EqualityExpression	op -> opcode == ZEND_BEGIN_SILENCE		1375208	0		==			
ANR	1379551	PtrMemberAccess	op -> opcode		1375208	0					
ANR	1379552	Identifier	op		1375208	0					
ANR	1379553	Identifier	opcode		1375208	1					
ANR	1379554	Identifier	ZEND_BEGIN_SILENCE		1375208	1					
ANR	1379555	CompoundStatement		627:43:20941:20941	1375208	1					
ANR	1379556	ExpressionStatement	level ++	668:6:22945:22952	1375208	0	True				
ANR	1379557	PostIncDecOperationExpression	level ++		1375208	0					
ANR	1379558	Identifier	level		1375208	0					
ANR	1379559	IncDec	++		1375208	1					
ANR	1379560	ElseStatement	else		1375208	0					
ANR	1379561	IfStatement	if ( op -> opcode == ZEND_END_SILENCE )		1375208	0					
ANR	1379562	Condition	op -> opcode == ZEND_END_SILENCE	669:16:22970:22999	1375208	0	True				
ANR	1379563	EqualityExpression	op -> opcode == ZEND_END_SILENCE		1375208	0		==			
ANR	1379564	PtrMemberAccess	op -> opcode		1375208	0					
ANR	1379565	Identifier	op		1375208	0					
ANR	1379566	Identifier	opcode		1375208	1					
ANR	1379567	Identifier	ZEND_END_SILENCE		1375208	1					
ANR	1379568	CompoundStatement		629:48:21006:21006	1375208	1					
ANR	1379569	IfStatement	if ( level == 0 )		1375208	0					
ANR	1379570	Condition	level == 0	670:10:23014:23023	1375208	0	True				
ANR	1379571	EqualityExpression	level == 0		1375208	0		==			
ANR	1379572	Identifier	level		1375208	0					
ANR	1379573	PrimaryExpression	0		1375208	1					
ANR	1379574	CompoundStatement		630:22:21030:21030	1375208	1					
ANR	1379575	BreakStatement	break ;	671:7:23035:23040	1375208	0	True				
ANR	1379576	ElseStatement	else		1375208	0					
ANR	1379577	CompoundStatement		632:13:21059:21059	1375208	0					
ANR	1379578	ExpressionStatement	level --	673:7:23064:23071	1375208	0	True				
ANR	1379579	PostIncDecOperationExpression	level --		1375208	0					
ANR	1379580	Identifier	level		1375208	0					
ANR	1379581	IncDec	--		1375208	1					
ANR	1379582	IfStatement	if ( op -> op1_type == IS_VAR && op -> op1 . var == var )		1375208	1					
ANR	1379583	Condition	op -> op1_type == IS_VAR && op -> op1 . var == var	676:9:23097:23140	1375208	0	True				
ANR	1379584	AndExpression	op -> op1_type == IS_VAR && op -> op1 . var == var		1375208	0		&&			
ANR	1379585	EqualityExpression	op -> op1_type == IS_VAR		1375208	0		==			
ANR	1379586	PtrMemberAccess	op -> op1_type		1375208	0					
ANR	1379587	Identifier	op		1375208	0					
ANR	1379588	Identifier	op1_type		1375208	1					
ANR	1379589	Identifier	IS_VAR		1375208	1					
ANR	1379590	EqualityExpression	op -> op1 . var == var		1375208	1		==			
ANR	1379591	MemberAccess	op -> op1 . var		1375208	0					
ANR	1379592	PtrMemberAccess	op -> op1		1375208	0					
ANR	1379593	Identifier	op		1375208	0					
ANR	1379594	Identifier	op1		1375208	1					
ANR	1379595	Identifier	var		1375208	1					
ANR	1379596	Identifier	var		1375208	1					
ANR	1379597	CompoundStatement		636:55:21147:21147	1375208	1					
ANR	1379598	IfStatement	if ( use )		1375208	0					
ANR	1379599	Condition	use	677:10:23155:23157	1375208	0	True				
ANR	1379600	Identifier	use		1375208	0					
ANR	1379601	CompoundStatement		637:15:21164:21164	1375208	1					
ANR	1379602	ExpressionStatement	use = NULL	679:7:23202:23212	1375208	0	True				
ANR	1379603	AssignmentExpression	use = NULL		1375208	0		=			
ANR	1379604	Identifier	use		1375208	0					
ANR	1379605	Identifier	NULL		1375208	1					
ANR	1379606	BreakStatement	break ;	680:7:23221:23226	1375208	1	True				
ANR	1379607	ExpressionStatement	use = op	682:6:23242:23250	1375208	1	True				
ANR	1379608	AssignmentExpression	use = op		1375208	0		=			
ANR	1379609	Identifier	use		1375208	0					
ANR	1379610	Identifier	op		1375208	1					
ANR	1379611	ElseStatement	else		1375208	0					
ANR	1379612	IfStatement	if ( op -> op2_type == IS_VAR && op -> op2 . var == var )		1375208	0					
ANR	1379613	Condition	op -> op2_type == IS_VAR && op -> op2 . var == var	683:16:23268:23311	1375208	0	True				
ANR	1379614	AndExpression	op -> op2_type == IS_VAR && op -> op2 . var == var		1375208	0		&&			
ANR	1379615	EqualityExpression	op -> op2_type == IS_VAR		1375208	0		==			
ANR	1379616	PtrMemberAccess	op -> op2_type		1375208	0					
ANR	1379617	Identifier	op		1375208	0					
ANR	1379618	Identifier	op2_type		1375208	1					
ANR	1379619	Identifier	IS_VAR		1375208	1					
ANR	1379620	EqualityExpression	op -> op2 . var == var		1375208	1		==			
ANR	1379621	MemberAccess	op -> op2 . var		1375208	0					
ANR	1379622	PtrMemberAccess	op -> op2		1375208	0					
ANR	1379623	Identifier	op		1375208	0					
ANR	1379624	Identifier	op2		1375208	1					
ANR	1379625	Identifier	var		1375208	1					
ANR	1379626	Identifier	var		1375208	1					
ANR	1379627	CompoundStatement		643:62:21318:21318	1375208	1					
ANR	1379628	IfStatement	if ( use )		1375208	0					
ANR	1379629	Condition	use	684:10:23326:23328	1375208	0	True				
ANR	1379630	Identifier	use		1375208	0					
ANR	1379631	CompoundStatement		644:15:21335:21335	1375208	1					
ANR	1379632	ExpressionStatement	use = NULL	686:7:23373:23383	1375208	0	True				
ANR	1379633	AssignmentExpression	use = NULL		1375208	0		=			
ANR	1379634	Identifier	use		1375208	0					
ANR	1379635	Identifier	NULL		1375208	1					
ANR	1379636	BreakStatement	break ;	687:7:23392:23397	1375208	1	True				
ANR	1379637	ExpressionStatement	use = op	689:6:23413:23421	1375208	1	True				
ANR	1379638	AssignmentExpression	use = op		1375208	0		=			
ANR	1379639	Identifier	use		1375208	0					
ANR	1379640	Identifier	op		1375208	1					
ANR	1379641	ExpressionStatement	op ++	691:5:23435:23439	1375208	2	True				
ANR	1379642	PostIncDecOperationExpression	op ++		1375208	0					
ANR	1379643	Identifier	op		1375208	0					
ANR	1379644	IncDec	++		1375208	1					
ANR	1379645	IfStatement	if ( use )		1375208	5					
ANR	1379646	Condition	use	693:8:23455:23457	1375208	0	True				
ANR	1379647	Identifier	use		1375208	0					
ANR	1379648	CompoundStatement		653:13:21464:21464	1375208	1					
ANR	1379649	IfStatement	if ( use -> op1_type == IS_VAR && use -> op1 . var == var )		1375208	0					
ANR	1379650	Condition	use -> op1_type == IS_VAR && use -> op1 . var == var	694:9:23471:23516	1375208	0	True				
ANR	1379651	AndExpression	use -> op1_type == IS_VAR && use -> op1 . var == var		1375208	0		&&			
ANR	1379652	EqualityExpression	use -> op1_type == IS_VAR		1375208	0		==			
ANR	1379653	PtrMemberAccess	use -> op1_type		1375208	0					
ANR	1379654	Identifier	use		1375208	0					
ANR	1379655	Identifier	op1_type		1375208	1					
ANR	1379656	Identifier	IS_VAR		1375208	1					
ANR	1379657	EqualityExpression	use -> op1 . var == var		1375208	1		==			
ANR	1379658	MemberAccess	use -> op1 . var		1375208	0					
ANR	1379659	PtrMemberAccess	use -> op1		1375208	0					
ANR	1379660	Identifier	use		1375208	0					
ANR	1379661	Identifier	op1		1375208	1					
ANR	1379662	Identifier	var		1375208	1					
ANR	1379663	Identifier	var		1375208	1					
ANR	1379664	CompoundStatement		654:57:21523:21523	1375208	1					
ANR	1379665	ExpressionStatement	use -> op1_type = IS_CV	695:6:23527:23548	1375208	0	True				
ANR	1379666	AssignmentExpression	use -> op1_type = IS_CV		1375208	0		=			
ANR	1379667	PtrMemberAccess	use -> op1_type		1375208	0					
ANR	1379668	Identifier	use		1375208	0					
ANR	1379669	Identifier	op1_type		1375208	1					
ANR	1379670	Identifier	IS_CV		1375208	1					
ANR	1379671	ExpressionStatement	"use -> op1 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"	696:6:23556:23645	1375208	1	True				
ANR	1379672	AssignmentExpression	"use -> op1 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		1375208	0		=			
ANR	1379673	MemberAccess	use -> op1 . var		1375208	0					
ANR	1379674	PtrMemberAccess	use -> op1		1375208	0					
ANR	1379675	Identifier	use		1375208	0					
ANR	1379676	Identifier	op1		1375208	1					
ANR	1379677	Identifier	var		1375208	1					
ANR	1379678	CallExpression	"zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		1375208	1					
ANR	1379679	Callee	zend_optimizer_lookup_cv		1375208	0					
ANR	1379680	Identifier	zend_optimizer_lookup_cv		1375208	0					
ANR	1379681	ArgumentList	op_array		1375208	1					
ANR	1379682	Argument	op_array		1375208	0					
ANR	1379683	Identifier	op_array		1375208	0					
ANR	1379684	Argument	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		1375208	1					
ANR	1379685	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379686	Callee	Z_STR		1375208	0					
ANR	1379687	Identifier	Z_STR		1375208	0					
ANR	1379688	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379689	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379690	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379691	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379692	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379693	ArgumentList	opline		1375208	1					
ANR	1379694	Argument	opline		1375208	0					
ANR	1379695	Identifier	opline		1375208	0					
ANR	1379696	ExpressionStatement	MAKE_NOP ( opline )	698:6:23653:23669	1375208	2	True				
ANR	1379697	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1379698	Callee	MAKE_NOP		1375208	0					
ANR	1379699	Identifier	MAKE_NOP		1375208	0					
ANR	1379700	ArgumentList	opline		1375208	1					
ANR	1379701	Argument	opline		1375208	0					
ANR	1379702	Identifier	opline		1375208	0					
ANR	1379703	ElseStatement	else		1375208	0					
ANR	1379704	IfStatement	if ( use -> op2_type == IS_VAR && use -> op2 . var == var )		1375208	0					
ANR	1379705	Condition	use -> op2_type == IS_VAR && use -> op2 . var == var	699:16:23687:23732	1375208	0	True				
ANR	1379706	AndExpression	use -> op2_type == IS_VAR && use -> op2 . var == var		1375208	0		&&			
ANR	1379707	EqualityExpression	use -> op2_type == IS_VAR		1375208	0		==			
ANR	1379708	PtrMemberAccess	use -> op2_type		1375208	0					
ANR	1379709	Identifier	use		1375208	0					
ANR	1379710	Identifier	op2_type		1375208	1					
ANR	1379711	Identifier	IS_VAR		1375208	1					
ANR	1379712	EqualityExpression	use -> op2 . var == var		1375208	1		==			
ANR	1379713	MemberAccess	use -> op2 . var		1375208	0					
ANR	1379714	PtrMemberAccess	use -> op2		1375208	0					
ANR	1379715	Identifier	use		1375208	0					
ANR	1379716	Identifier	op2		1375208	1					
ANR	1379717	Identifier	var		1375208	1					
ANR	1379718	Identifier	var		1375208	1					
ANR	1379719	CompoundStatement		659:64:21739:21739	1375208	1					
ANR	1379720	ExpressionStatement	use -> op2_type = IS_CV	700:6:23743:23764	1375208	0	True				
ANR	1379721	AssignmentExpression	use -> op2_type = IS_CV		1375208	0		=			
ANR	1379722	PtrMemberAccess	use -> op2_type		1375208	0					
ANR	1379723	Identifier	use		1375208	0					
ANR	1379724	Identifier	op2_type		1375208	1					
ANR	1379725	Identifier	IS_CV		1375208	1					
ANR	1379726	ExpressionStatement	"use -> op2 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"	701:6:23772:23861	1375208	1	True				
ANR	1379727	AssignmentExpression	"use -> op2 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		1375208	0		=			
ANR	1379728	MemberAccess	use -> op2 . var		1375208	0					
ANR	1379729	PtrMemberAccess	use -> op2		1375208	0					
ANR	1379730	Identifier	use		1375208	0					
ANR	1379731	Identifier	op2		1375208	1					
ANR	1379732	Identifier	var		1375208	1					
ANR	1379733	CallExpression	"zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		1375208	1					
ANR	1379734	Callee	zend_optimizer_lookup_cv		1375208	0					
ANR	1379735	Identifier	zend_optimizer_lookup_cv		1375208	0					
ANR	1379736	ArgumentList	op_array		1375208	1					
ANR	1379737	Argument	op_array		1375208	0					
ANR	1379738	Identifier	op_array		1375208	0					
ANR	1379739	Argument	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		1375208	1					
ANR	1379740	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		1375208	0					
ANR	1379741	Callee	Z_STR		1375208	0					
ANR	1379742	Identifier	Z_STR		1375208	0					
ANR	1379743	ArgumentList	ZEND_OP1_LITERAL ( opline )		1375208	1					
ANR	1379744	Argument	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379745	CallExpression	ZEND_OP1_LITERAL ( opline )		1375208	0					
ANR	1379746	Callee	ZEND_OP1_LITERAL		1375208	0					
ANR	1379747	Identifier	ZEND_OP1_LITERAL		1375208	0					
ANR	1379748	ArgumentList	opline		1375208	1					
ANR	1379749	Argument	opline		1375208	0					
ANR	1379750	Identifier	opline		1375208	0					
ANR	1379751	ExpressionStatement	MAKE_NOP ( opline )	703:6:23869:23885	1375208	2	True				
ANR	1379752	CallExpression	MAKE_NOP ( opline )		1375208	0					
ANR	1379753	Callee	MAKE_NOP		1375208	0					
ANR	1379754	Identifier	MAKE_NOP		1375208	0					
ANR	1379755	ArgumentList	opline		1375208	1					
ANR	1379756	Argument	opline		1375208	0					
ANR	1379757	Identifier	opline		1375208	0					
ANR	1379758	BreakStatement	break ;	707:3:23908:23913	1375208	81	True				
ANR	1379759	ExpressionStatement	opline ++	709:2:23921:23929	1375208	1	True				
ANR	1379760	PostIncDecOperationExpression	opline ++		1375208	0					
ANR	1379761	Identifier	opline		1375208	0					
ANR	1379762	IncDec	++		1375208	1					
ANR	1379763	ExpressionStatement	i ++	710:2:23933:23936	1375208	2	True				
ANR	1379764	PostIncDecOperationExpression	i ++		1375208	0					
ANR	1379765	Identifier	i		1375208	0					
ANR	1379766	IncDec	++		1375208	1					
ANR	1379767	ReturnType	void		1375208	1					
ANR	1379768	Identifier	zend_optimizer_pass1		1375208	2					
ANR	1379769	ParameterList	"zend_op_array * op_array , zend_optimizer_ctx * ctx"		1375208	3					
ANR	1379770	Parameter	zend_op_array * op_array	40:26:1945:1967	1375208	0	True				
ANR	1379771	ParameterType	zend_op_array *		1375208	0					
ANR	1379772	Identifier	op_array		1375208	1					
ANR	1379773	Parameter	zend_optimizer_ctx * ctx	40:51:1970:1992	1375208	1	True				
ANR	1379774	ParameterType	zend_optimizer_ctx *		1375208	0					
ANR	1379775	Identifier	ctx		1375208	1					
ANR	1379776	CFGEntryNode	ENTRY		1375208		True				
ANR	1379777	CFGExitNode	EXIT		1375208		True				
ANR	1379778	Symbol	zend_optimizer_replace_by_const		1375208						
ANR	1379779	Symbol	get_binary_op		1375208						
ANR	1379780	Symbol	send1_opline		1375208						
ANR	1379781	Symbol	error_reporting		1375208						
ANR	1379782	Symbol	* ce		1375208						
ANR	1379783	Symbol	ZEND_OP2_TYPE		1375208						
ANR	1379784	Symbol	ZEND_ADD_STRING		1375208						
ANR	1379785	Symbol	* init_opline		1375208						
ANR	1379786	Symbol	ZEND_RESULT ( opline ) . var		1375208						
ANR	1379787	Symbol	* opline -> op1		1375208						
ANR	1379788	Symbol	ZEND_INIT_FCALL		1375208						
ANR	1379789	Symbol	ce -> info . internal		1375208						
ANR	1379790	Symbol	ZEND_INTERNAL_CLASS		1375208						
ANR	1379791	Symbol	IS_CONST		1375208						
ANR	1379792	Symbol	ctx		1375208						
ANR	1379793	Symbol	ZEND_SR		1375208						
ANR	1379794	Symbol	zend_binary_strcasecmp		1375208						
ANR	1379795	Symbol	unary_op		1375208						
ANR	1379796	Symbol	ZEND_SL		1375208						
ANR	1379797	Symbol	* op_array		1375208						
ANR	1379798	Symbol	send2_opline -> op1 . constant		1375208						
ANR	1379799	Symbol	str		1375208						
ANR	1379800	Symbol	ctx -> constants		1375208						
ANR	1379801	Symbol	* ce -> info		1375208						
ANR	1379802	Symbol	ce -> info		1375208						
ANR	1379803	Symbol	* * op_array		1375208						
ANR	1379804	Symbol	ZEND_BEGIN_SILENCE		1375208						
ANR	1379805	Symbol	result		1375208						
ANR	1379806	Symbol	str -> val		1375208						
ANR	1379807	Symbol	init_opline -> opcode		1375208						
ANR	1379808	Symbol	send1_opline -> op1		1375208						
ANR	1379809	Symbol	send1_opline -> op2		1375208						
ANR	1379810	Symbol	binary_op		1375208						
ANR	1379811	Symbol	ce		1375208						
ANR	1379812	Symbol	SUCCESS		1375208						
ANR	1379813	Symbol	c		1375208						
ANR	1379814	Symbol	CG		1375208						
ANR	1379815	Symbol	MODULE_PERSISTENT		1375208						
ANR	1379816	Symbol	i		1375208						
ANR	1379817	Symbol	zend_memnstr		1375208						
ANR	1379818	Symbol	& fake_execute_data		1375208						
ANR	1379819	Symbol	m		1375208						
ANR	1379820	Symbol	send2_opline -> op1		1375208						
ANR	1379821	Symbol	ZEND_JMP		1375208						
ANR	1379822	Symbol	ZEND_FETCH_CLASS		1375208						
ANR	1379823	Symbol	t		1375208						
ANR	1379824	Symbol	send1_opline -> op2 . num		1375208						
ANR	1379825	Symbol	ZEND_OP2_LITERAL		1375208						
ANR	1379826	Symbol	opline -> op2_type		1375208						
ANR	1379827	Symbol	IS_OBJECT		1375208						
ANR	1379828	Symbol	opline -> result . var		1375208						
ANR	1379829	Symbol	tv		1375208						
ANR	1379830	Symbol	* send2_opline		1375208						
ANR	1379831	Symbol	ZEND_ADD_CHAR		1375208						
ANR	1379832	Symbol	opline -> extended_value		1375208						
ANR	1379833	Symbol	opline -> result		1375208						
ANR	1379834	Symbol	zend_string_tolower		1375208						
ANR	1379835	Symbol	_IS_BOOL		1375208						
ANR	1379836	Symbol	opline		1375208						
ANR	1379837	Symbol	memcmp		1375208						
ANR	1379838	Symbol	use -> op1 . var		1375208						
ANR	1379839	Symbol	zend_hash_find_ptr		1375208						
ANR	1379840	Symbol	enable_dl		1375208						
ANR	1379841	Symbol	IS_TMP_VAR		1375208						
ANR	1379842	Symbol	( opline - 1 ) -> opcode		1375208						
ANR	1379843	Symbol	res		1375208						
ANR	1379844	Symbol	EG		1375208						
ANR	1379845	Symbol	str -> len		1375208						
ANR	1379846	Symbol	& module_registry		1375208						
ANR	1379847	Symbol	er		1375208						
ANR	1379848	Symbol	opline -> op1_type		1375208						
ANR	1379849	Symbol	ZEND_SEND_VAL		1375208						
ANR	1379850	Symbol	next_op		1375208						
ANR	1379851	Symbol	op_array -> literals		1375208						
ANR	1379852	Symbol	send1_opline -> opcode		1375208						
ANR	1379853	Symbol	ZEND_CE_FILENAME		1375208						
ANR	1379854	Symbol	Z_STR_P		1375208						
ANR	1379855	Symbol	requires_conversion		1375208						
ANR	1379856	Symbol	RESULT_UNUSED		1375208						
ANR	1379857	Symbol	ZEND_FN		1375208						
ANR	1379858	Symbol	use -> op2_type		1375208						
ANR	1379859	Symbol	ZEND_OPTIMIZER_PASS_5		1375208						
ANR	1379860	Symbol	Z_STRLEN		1375208						
ANR	1379861	Symbol	compiler_options		1375208						
ANR	1379862	Symbol	( opline + 1 ) -> opcode		1375208						
ANR	1379863	Symbol	end		1375208						
ANR	1379864	Symbol	use -> op1_type		1375208						
ANR	1379865	Symbol	ZEND_END_SILENCE		1375208						
ANR	1379866	Symbol	op -> op1_type		1375208						
ANR	1379867	Symbol	& ZEND_OP2_LITERAL		1375208						
ANR	1379868	Symbol	& c		1375208						
ANR	1379869	Symbol	ZEND_FETCH_LOCAL		1375208						
ANR	1379870	Symbol	Z_TYPE_P		1375208						
ANR	1379871	Symbol	op_array -> scope		1375208						
ANR	1379872	Symbol	ptr		1375208						
ANR	1379873	Symbol	ZEND_OP1_TYPE		1375208						
ANR	1379874	Symbol	* use		1375208						
ANR	1379875	Symbol	func		1375208						
ANR	1379876	Symbol	ZSTR_LEN		1375208						
ANR	1379877	Symbol	& t		1375208						
ANR	1379878	Symbol	IS_UNUSED		1375208						
ANR	1379879	Symbol	ZEND_BOOL		1375208						
ANR	1379880	Symbol	Z_LVAL		1375208						
ANR	1379881	Symbol	Z_TYPE		1375208						
ANR	1379882	Symbol	send2_opline		1375208						
ANR	1379883	Symbol	zend_optimizer_is_disabled_func		1375208						
ANR	1379884	Symbol	next_op -> opcode		1375208						
ANR	1379885	Symbol	use -> op1		1375208						
ANR	1379886	Symbol	use -> op2		1375208						
ANR	1379887	Symbol	type		1375208						
ANR	1379888	Symbol	dirname		1375208						
ANR	1379889	Symbol	~ZEND_FETCH_CLASS_NO_AUTOLOAD		1375208						
ANR	1379890	Symbol	zend_hash_find		1375208						
ANR	1379891	Symbol	zend_string_init		1375208						
ANR	1379892	Symbol	ZEND_USER_CLASS		1375208						
ANR	1379893	Symbol	( opline - 1 ) -> extended_value		1375208						
ANR	1379894	Symbol	send1_opline -> op1 . constant		1375208						
ANR	1379895	Symbol	zend_optimizer_lookup_cv		1375208						
ANR	1379896	Symbol	& ctx -> script -> main_op_array		1375208						
ANR	1379897	Symbol	last_op		1375208						
ANR	1379898	Symbol	fake_execute_data . func		1375208						
ANR	1379899	Symbol	var		1375208						
ANR	1379900	Symbol	ce -> info . internal . module		1375208						
ANR	1379901	Symbol	zend_dirname		1375208						
ANR	1379902	Symbol	& ZEND_OP1_LITERAL		1375208						
ANR	1379903	Symbol	lc_name		1375208						
ANR	1379904	Symbol	IS_ABSOLUTE_PATH		1375208						
ANR	1379905	Symbol	ZEND_OP1_LITERAL		1375208						
ANR	1379906	Symbol	chval		1375208						
ANR	1379907	Symbol	IS_VAR		1375208						
ANR	1379908	Symbol	IS_RESOURCE		1375208						
ANR	1379909	Symbol	final_length		1375208						
ANR	1379910	Symbol	* op_array -> scope		1375208						
ANR	1379911	Symbol	zend_optimizer_get_collected_constant		1375208						
ANR	1379912	Symbol	ce -> type		1375208						
ANR	1379913	Symbol	orig_execute_data		1375208						
ANR	1379914	Symbol	op -> opcode		1375208						
ANR	1379915	Symbol	op -> op2_type		1375208						
ANR	1379916	Symbol	op -> op2 . var		1375208						
ANR	1379917	Symbol	strncasecmp		1375208						
ANR	1379918	Symbol	* opline -> op1 . constant		1375208						
ANR	1379919	Symbol	use -> op2 . var		1375208						
ANR	1379920	Symbol	ZEND_COMPILE_NO_BUILTIN_STRLEN		1375208						
ANR	1379921	Symbol	IS_ARRAY		1375208						
ANR	1379922	Symbol	opline -> op1 . constant		1375208						
ANR	1379923	Symbol	collect_constants		1375208						
ANR	1379924	Symbol	* final_length		1375208						
ANR	1379925	Symbol	* str		1375208						
ANR	1379926	Symbol	* * opline		1375208						
ANR	1379927	Symbol	fake_execute_data		1375208						
ANR	1379928	Symbol	* func		1375208						
ANR	1379929	Symbol	ce -> info . internal . module -> type		1375208						
ANR	1379930	Symbol	ZEND_FETCH_TYPE_MASK		1375208						
ANR	1379931	Symbol	* ctx		1375208						
ANR	1379932	Symbol	ZEND_OP1		1375208						
ANR	1379933	Symbol	ZEND_DIV		1375208						
ANR	1379934	Symbol	* opline		1375208						
ANR	1379935	Symbol	opline -> op2 . constant		1375208						
ANR	1379936	Symbol	op -> op1 . var		1375208						
ANR	1379937	Symbol	ZEND_RESULT ( next_op ) . var		1375208						
ANR	1379938	Symbol	op_array		1375208						
ANR	1379939	Symbol	& res		1375208						
ANR	1379940	Symbol	ZEND_DECLARE_CONST		1375208						
ANR	1379941	Symbol	IS_CV		1375208						
ANR	1379942	Symbol	* op		1375208						
ANR	1379943	Symbol	get_unary_op		1375208						
ANR	1379944	Symbol	use		1375208						
ANR	1379945	Symbol	current_execute_data		1375208						
ANR	1379946	Symbol	* send1_opline		1375208						
ANR	1379947	Symbol	Z_STR		1375208						
ANR	1379948	Symbol	* op_array -> literals		1375208						
ANR	1379949	Symbol	ZEND_OP1 ( opline + 1 ) . opline_num		1375208						
ANR	1379950	Symbol	ZEND_FETCH_CLASS_SELF		1375208						
ANR	1379951	Symbol	* ptr		1375208						
ANR	1379952	Symbol	op -> op2		1375208						
ANR	1379953	Symbol	IS_STRING		1375208						
ANR	1379954	Symbol	op -> op1		1375208						
ANR	1379955	Symbol	zend_string_alloc		1375208						
ANR	1379956	Symbol	NULL		1375208						
ANR	1379957	Symbol	offset		1375208						
ANR	1379958	Symbol	level		1375208						
ANR	1379959	Symbol	ctx -> script		1375208						
ANR	1379960	Symbol	display_disabled_function		1375208						
ANR	1379961	Symbol	ZEND_NOP		1375208						
ANR	1379962	Symbol	op_array -> last		1375208						
ANR	1379963	Symbol	zend_get_constant_str		1375208						
ANR	1379964	Symbol	* ce -> info . internal		1375208						
ANR	1379965	Symbol	zval_get_long		1375208						
ANR	1379966	Symbol	op_array -> filename		1375208						
ANR	1379967	Symbol	* next_op		1375208						
ANR	1379968	Symbol	ZEND_OPTIMIZER_PASS_10		1375208						
ANR	1379969	Symbol	opline -> op1		1375208						
ANR	1379970	Symbol	opline -> op2		1375208						
ANR	1379971	Symbol	ZEND_IS_CONSTANT_TYPE		1375208						
ANR	1379972	Symbol	IS_CONSTANT_AST		1375208						
ANR	1379973	Symbol	init_opline		1375208						
ANR	1379974	Symbol	* * ce		1375208						
ANR	1379975	Symbol	op_array -> opcodes		1375208						
ANR	1379976	Symbol	& result		1375208						
ANR	1379977	Symbol	ZEND_RESULT		1375208						
ANR	1379978	Symbol	Z_STRVAL		1375208						
ANR	1379979	Symbol	OPTIMIZATION_LEVEL		1375208						
ANR	1379980	Symbol	ZEND_RESULT ( ( opline - 1 ) ) . var		1375208						
ANR	1379981	Symbol	class_table		1375208						
ANR	1379982	Symbol	zend_optimizer_get_persistent_constant		1375208						
ANR	1379983	Symbol	opline -> result . num		1375208						
ANR	1379984	Symbol	opline -> result_type		1375208						
ANR	1379985	Symbol	op		1375208						
ANR	1379986	Symbol	ZEND_OP1 ( opline ) . var		1375208						
ANR	1379987	Symbol	* ce -> info . internal . module		1375208						
ANR	1379988	Symbol	ZSTR_VAL		1375208						
ANR	1379989	Symbol	& ce -> constants_table		1375208						
ANR	1379990	Symbol	opline -> opcode		1375208						
ANR	1379991	Symbol	PG		1375208						
ANR	1379992	Symbol	ZEND_MOD		1375208						
ANR	1379993	Symbol	op_array -> scope -> name		1375208						
ANR	1379994	Symbol	func -> handler		1375208						
