command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	57120	File	data/converged/CVE-2015-8617_php-src/Zend_zend_API.h								
ANR	57121	ClassDef	_zend_function_entry	36:8:1585:1790							
ANR	57122	DeclStmt									
ANR	57123	Decl							const char	const char *	fname
ANR	57124	DeclStmt									
ANR	57125	Decl							void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	handler
ANR	57126	DeclStmt									
ANR	57127	Decl							const struct _zend_internal_arg_info	const struct _zend_internal_arg_info *	arg_info
ANR	57128	DeclStmt									
ANR	57129	Decl							uint32_t	uint32_t	num_args
ANR	57130	DeclStmt									
ANR	57131	Decl							uint32_t	uint32_t	flags
ANR	57132	DeclStmt									
ANR	57133	Decl							_zend_function_entry	_zend_function_entry	zend_function_entry
ANR	57134	ClassDef	_zend_fcall_info	44:8:1801:2035							
ANR	57135	DeclStmt									
ANR	57136	Decl							size_t	size_t	size
ANR	57137	DeclStmt									
ANR	57138	Decl							HashTable	HashTable *	function_table
ANR	57139	DeclStmt									
ANR	57140	Decl							zval	zval	function_name
ANR	57141	DeclStmt									
ANR	57142	Decl							zend_array	zend_array *	symbol_table
ANR	57143	DeclStmt									
ANR	57144	Decl							zval	zval *	retval
ANR	57145	DeclStmt									
ANR	57146	Decl							zval	zval *	params
ANR	57147	DeclStmt									
ANR	57148	Decl							zend_object	zend_object *	object
ANR	57149	DeclStmt									
ANR	57150	Decl							zend_bool	zend_bool	no_separation
ANR	57151	DeclStmt									
ANR	57152	Decl							uint32_t	uint32_t	param_count
ANR	57153	DeclStmt									
ANR	57154	Decl							_zend_fcall_info	_zend_fcall_info	zend_fcall_info
ANR	57155	ClassDef	_zend_fcall_info_cache	56:8:2046:2248							
ANR	57156	DeclStmt									
ANR	57157	Decl							zend_bool	zend_bool	initialized
ANR	57158	DeclStmt									
ANR	57159	Decl							zend_function	zend_function *	function_handler
ANR	57160	DeclStmt									
ANR	57161	Decl							zend_class_entry	zend_class_entry *	calling_scope
ANR	57162	DeclStmt									
ANR	57163	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	57164	DeclStmt									
ANR	57165	Decl							zend_object	zend_object *	object
ANR	57166	DeclStmt									
ANR	57167	Decl							_zend_fcall_info_cache	_zend_fcall_info_cache	zend_fcall_info_cache
ANR	57168	DeclStmt									
ANR	57169	Decl							const zend_internal_arg_info	const zend_internal_arg_info [ ]	name
ANR	57170	Function	get_module	146:1:8246:8327							
ANR	57171	FunctionDef	get_module ()		57170	0					
ANR	57172	CompoundStatement		146:51:8296:8327	57170	0					
ANR	57173	Statement	return	146:1:8298:8303	57170	0	True				
ANR	57174	Statement	&	146:8:8305:8305	57170	1	True				
ANR	57175	IdentifierDeclStatement	name _module_entry ;	146:9:8306:8325	57170	2	True				
ANR	57176	IdentifierDecl	_module_entry		57170	0					
ANR	57177	IdentifierDeclType	name		57170	0					
ANR	57178	Identifier	_module_entry		57170	1					
ANR	57179	ReturnType	ZEND_DLEXPORT zend_module_entry *		57170	1					
ANR	57180	Identifier	get_module		57170	2					
ANR	57181	ParameterList			57170	3					
ANR	57182	CFGEntryNode	ENTRY		57170		True				
ANR	57183	CFGExitNode	EXIT		57170		True				
ANR	57184	Symbol	_module_entry		57170						
ANR	57185	DeclStmt									
ANR	57186	Decl							zend_ module_name	zend_ module_name	_globals
ANR	57187	DeclStmt									
ANR	57188	Decl							ts_rsrc_id module_name	ts_rsrc_id module_name	_globals_id
ANR	57189	DeclStmt									
ANR	57190	Decl							extern ts_rsrc_id module_name	extern ts_rsrc_id module_name	_globals_id
ANR	57191	DeclStmt									
ANR	57192	Decl							zend_ module_name _globals module_name	zend_ module_name _globals module_name	_globals
ANR	57193	DeclStmt									
ANR	57194	Decl							extern zend_ module_name _globals module_name	extern zend_ module_name _globals module_name	_globals
ANR	57195	DeclStmt									
ANR	57196	Decl							zend_string	zend_string *	cl_name
ANR	57197	DeclStmt									
ANR	57198	Decl							ZEND_API int	ZEND_API int ( void )	zend_next_free_module
ANR	57199	DeclStmt									
ANR	57200	Decl							ZEND_API int	"ZEND_API int ( int param_count , zval * argument_array )"	_zend_get_parameters_array_ex
ANR	57201	DeclStmt									
ANR	57202	Decl							ZEND_API int	"ZEND_API int ( int param_count , zval * argument_array )"	zend_copy_parameters_array
ANR	57203	DeclStmt									
ANR	57204	Decl							ZEND_API char	ZEND_API char * ( const zval * arg )	zend_zval_type_name
ANR	57205	DeclStmt									
ANR	57206	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const zend_function_entry * functions , HashTable * function_table , int type )"	zend_register_functions
ANR	57207	DeclStmt									
ANR	57208	Decl							ZEND_API void	"ZEND_API void ( const zend_function_entry * functions , int count , HashTable * function_table )"	zend_unregister_functions
ANR	57209	DeclStmt									
ANR	57210	Decl							ZEND_API int	ZEND_API int ( zend_module_entry * module_entry )	zend_startup_module
ANR	57211	DeclStmt									
ANR	57212	Decl							ZEND_API zend_module_entry	ZEND_API zend_module_entry * ( zend_module_entry * module_entry )	zend_register_internal_module
ANR	57213	DeclStmt									
ANR	57214	Decl							ZEND_API zend_module_entry	ZEND_API zend_module_entry * ( zend_module_entry * module )	zend_register_module_ex
ANR	57215	DeclStmt									
ANR	57216	Decl							ZEND_API int	ZEND_API int ( zend_module_entry * module )	zend_startup_module_ex
ANR	57217	DeclStmt									
ANR	57218	Decl							ZEND_API int	ZEND_API int ( void )	zend_startup_modules
ANR	57219	DeclStmt									
ANR	57220	Decl							ZEND_API void	ZEND_API void ( void )	zend_collect_module_handlers
ANR	57221	DeclStmt									
ANR	57222	Decl							ZEND_API void	ZEND_API void ( void )	zend_destroy_modules
ANR	57223	DeclStmt									
ANR	57224	Decl							ZEND_API void	"ZEND_API void ( const zend_class_entry * ce , const zend_function * fptr , int error_type )"	zend_check_magic_method_implementation
ANR	57225	DeclStmt									
ANR	57226	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry * ( zend_class_entry * class_entry )	zend_register_internal_class
ANR	57227	DeclStmt									
ANR	57228	Decl							ZEND_API zend_class_entry	"ZEND_API zend_class_entry * ( zend_class_entry * class_entry , zend_class_entry * parent_ce )"	zend_register_internal_class_ex
ANR	57229	DeclStmt									
ANR	57230	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry * ( zend_class_entry * orig_class_entry )	zend_register_internal_interface
ANR	57231	DeclStmt									
ANR	57232	Decl							ZEND_API int	"ZEND_API int ( const char * name , size_t name_len , zend_class_entry * ce )"	zend_register_class_alias_ex
ANR	57233	DeclStmt									
ANR	57234	Decl							ZEND_API int	"ZEND_API int ( char * function_name , size_t function_name_length )"	zend_disable_function
ANR	57235	DeclStmt									
ANR	57236	Decl							ZEND_API int	"ZEND_API int ( char * class_name , size_t class_name_length )"	zend_disable_class
ANR	57237	DeclStmt									
ANR	57238	Decl							ZEND_API ZEND_COLD void	ZEND_API ZEND_COLD void ( void )	zend_wrong_param_count
ANR	57239	DeclStmt									
ANR	57240	Decl							ZEND_API zend_bool	"ZEND_API zend_bool ( zval * callable , zend_object * object , uint check_flags , zend_string * * callable_name , zend_fcall_info_cache * fcc , char * * error )"	zend_is_callable_ex
ANR	57241	DeclStmt									
ANR	57242	Decl							ZEND_API zend_bool	"ZEND_API zend_bool ( zval * callable , uint check_flags , zend_string * * callable_name )"	zend_is_callable
ANR	57243	DeclStmt									
ANR	57244	Decl							ZEND_API zend_bool	"ZEND_API zend_bool ( zval * callable , zend_string * * callable_name )"	zend_make_callable
ANR	57245	DeclStmt									
ANR	57246	Decl							const char	const char * ( const char * module_name )	zend_get_module_version
ANR	57247	DeclStmt									
ANR	57248	Decl							ZEND_API int	ZEND_API int ( const char * module_name )	zend_get_module_started
ANR	57249	DeclStmt									
ANR	57250	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , zend_string * name , zval * property , int access_type , zend_string * doc_comment )"	zend_declare_property_ex
ANR	57251	DeclStmt									
ANR	57252	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zval * property , int access_type )"	zend_declare_property
ANR	57253	DeclStmt									
ANR	57254	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , int access_type )"	zend_declare_property_null
ANR	57255	DeclStmt									
ANR	57256	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type )"	zend_declare_property_bool
ANR	57257	DeclStmt									
ANR	57258	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type )"	zend_declare_property_long
ANR	57259	DeclStmt									
ANR	57260	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , double value , int access_type )"	zend_declare_property_double
ANR	57261	DeclStmt									
ANR	57262	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value , int access_type )"	zend_declare_property_string
ANR	57263	DeclStmt									
ANR	57264	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_len , int access_type )"	zend_declare_property_stringl
ANR	57265	DeclStmt									
ANR	57266	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zval * value )"	zend_declare_class_constant
ANR	57267	DeclStmt									
ANR	57268	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length )"	zend_declare_class_constant_null
ANR	57269	DeclStmt									
ANR	57270	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_long value )"	zend_declare_class_constant_long
ANR	57271	DeclStmt									
ANR	57272	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_bool value )"	zend_declare_class_constant_bool
ANR	57273	DeclStmt									
ANR	57274	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , double value )"	zend_declare_class_constant_double
ANR	57275	DeclStmt									
ANR	57276	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_length )"	zend_declare_class_constant_stringl
ANR	57277	DeclStmt									
ANR	57278	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value )"	zend_declare_class_constant_string
ANR	57279	DeclStmt									
ANR	57280	Decl							ZEND_API int	ZEND_API int ( zend_class_entry * class_type )	zend_update_class_constants
ANR	57281	DeclStmt									
ANR	57282	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , zend_string * name , zval * value )"	zend_update_property_ex
ANR	57283	DeclStmt									
ANR	57284	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zval * value )"	zend_update_property
ANR	57285	DeclStmt									
ANR	57286	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length )"	zend_update_property_null
ANR	57287	DeclStmt									
ANR	57288	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value )"	zend_update_property_bool
ANR	57289	DeclStmt									
ANR	57290	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value )"	zend_update_property_long
ANR	57291	DeclStmt									
ANR	57292	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , double value )"	zend_update_property_double
ANR	57293	DeclStmt									
ANR	57294	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_string * value )"	zend_update_property_str
ANR	57295	DeclStmt									
ANR	57296	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value )"	zend_update_property_string
ANR	57297	DeclStmt									
ANR	57298	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value , size_t value_length )"	zend_update_property_stringl
ANR	57299	DeclStmt									
ANR	57300	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , zval * value )"	zend_update_static_property
ANR	57301	DeclStmt									
ANR	57302	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length )"	zend_update_static_property_null
ANR	57303	DeclStmt									
ANR	57304	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , zend_long value )"	zend_update_static_property_bool
ANR	57305	DeclStmt									
ANR	57306	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , zend_long value )"	zend_update_static_property_long
ANR	57307	DeclStmt									
ANR	57308	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , double value )"	zend_update_static_property_double
ANR	57309	DeclStmt									
ANR	57310	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , const char * value )"	zend_update_static_property_string
ANR	57311	DeclStmt									
ANR	57312	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , const char * value , size_t value_length )"	zend_update_static_property_stringl
ANR	57313	DeclStmt									
ANR	57314	Decl							ZEND_API zval	"ZEND_API zval * ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_bool silent , zval * rv )"	zend_read_property
ANR	57315	DeclStmt									
ANR	57316	Decl							ZEND_API zval	"ZEND_API zval * ( zend_class_entry * scope , const char * name , size_t name_length , zend_bool silent )"	zend_read_static_property
ANR	57317	DeclStmt									
ANR	57318	Decl							ZEND_API char	ZEND_API char * ( int type )	zend_get_type_by_const
ANR	57319	Function	ZEND_WRONG_PARAM_COUNT	368:1:22489:22561							
ANR	57320	FunctionDef	ZEND_WRONG_PARAM_COUNT ()		57319	0					
ANR	57321	CompoundStatement		368:37:22525:22561	57319	0					
ANR	57322	ExpressionStatement	zend_wrong_param_count ( )	368:1:22527:22551	57319	0	True				
ANR	57323	CallExpression	zend_wrong_param_count ( )		57319	0					
ANR	57324	Callee	zend_wrong_param_count		57319	0					
ANR	57325	Identifier	zend_wrong_param_count		57319	0					
ANR	57326	ArgumentList			57319	1					
ANR	57327	ReturnStatement	return ;	368:27:22553:22559	57319	1	True				
ANR	57328	ReturnType	define		57319	1					
ANR	57329	Identifier	ZEND_WRONG_PARAM_COUNT		57319	2					
ANR	57330	ParameterList			57319	3					
ANR	57331	CFGEntryNode	ENTRY		57319		True				
ANR	57332	CFGExitNode	EXIT		57319		True				
ANR	57333	DeclStmt									
ANR	57334	Decl							ZEND_API int	"ZEND_API int ( zval * arg , uint32_t size ZEND_FILE_LINE_DC )"	_array_init
ANR	57335	DeclStmt									
ANR	57336	Decl							ZEND_API void	"ZEND_API void ( zend_object * object , zend_class_entry * class_type )"	object_properties_init
ANR	57337	DeclStmt									
ANR	57338	Decl							ZEND_API void	"ZEND_API void ( zend_object * object , HashTable * properties )"	object_properties_init_ex
ANR	57339	DeclStmt									
ANR	57340	Decl							ZEND_API void	"ZEND_API void ( zend_object * object , HashTable * properties )"	object_properties_load
ANR	57341	DeclStmt									
ANR	57342	Decl							ZEND_API void	"ZEND_API void ( zval * obj , HashTable * properties )"	zend_merge_properties
ANR	57343	DeclStmt									
ANR	57344	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_long n )"	add_assoc_long_ex
ANR	57345	DeclStmt									
ANR	57346	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len )"	add_assoc_null_ex
ANR	57347	DeclStmt									
ANR	57348	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , int b )"	add_assoc_bool_ex
ANR	57349	DeclStmt									
ANR	57350	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_resource * r )"	add_assoc_resource_ex
ANR	57351	DeclStmt									
ANR	57352	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , double d )"	add_assoc_double_ex
ANR	57353	DeclStmt									
ANR	57354	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_string * str )"	add_assoc_str_ex
ANR	57355	DeclStmt									
ANR	57356	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , char * str )"	add_assoc_string_ex
ANR	57357	DeclStmt									
ANR	57358	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , char * str , size_t length )"	add_assoc_stringl_ex
ANR	57359	DeclStmt									
ANR	57360	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zval * value )"	add_assoc_zval_ex
ANR	57361	DeclStmt									
ANR	57362	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , zend_long n )"	add_index_long
ANR	57363	DeclStmt									
ANR	57364	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx )"	add_index_null
ANR	57365	DeclStmt									
ANR	57366	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , int b )"	add_index_bool
ANR	57367	DeclStmt									
ANR	57368	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , zend_resource * r )"	add_index_resource
ANR	57369	DeclStmt									
ANR	57370	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , double d )"	add_index_double
ANR	57371	DeclStmt									
ANR	57372	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , zend_string * str )"	add_index_str
ANR	57373	DeclStmt									
ANR	57374	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , const char * str )"	add_index_string
ANR	57375	DeclStmt									
ANR	57376	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , const char * str , size_t length )"	add_index_stringl
ANR	57377	DeclStmt									
ANR	57378	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong index , zval * value )"	add_index_zval
ANR	57379	DeclStmt									
ANR	57380	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_long n )"	add_next_index_long
ANR	57381	DeclStmt									
ANR	57382	Decl							ZEND_API int	ZEND_API int ( zval * arg )	add_next_index_null
ANR	57383	DeclStmt									
ANR	57384	Decl							ZEND_API int	"ZEND_API int ( zval * arg , int b )"	add_next_index_bool
ANR	57385	DeclStmt									
ANR	57386	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_resource * r )"	add_next_index_resource
ANR	57387	DeclStmt									
ANR	57388	Decl							ZEND_API int	"ZEND_API int ( zval * arg , double d )"	add_next_index_double
ANR	57389	DeclStmt									
ANR	57390	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_string * str )"	add_next_index_str
ANR	57391	DeclStmt									
ANR	57392	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * str )"	add_next_index_string
ANR	57393	DeclStmt									
ANR	57394	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * str , size_t length )"	add_next_index_stringl
ANR	57395	DeclStmt									
ANR	57396	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zval * value )"	add_next_index_zval
ANR	57397	DeclStmt									
ANR	57398	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , const char * key , uint key_len , const char * str )"	add_get_assoc_string_ex
ANR	57399	DeclStmt									
ANR	57400	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , const char * key , uint key_len , const char * str , size_t length )"	add_get_assoc_stringl_ex
ANR	57401	DeclStmt									
ANR	57402	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , zend_long l )"	add_get_index_long
ANR	57403	DeclStmt									
ANR	57404	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , double d )"	add_get_index_double
ANR	57405	DeclStmt									
ANR	57406	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong index , zend_string * str )"	add_get_index_str
ANR	57407	DeclStmt									
ANR	57408	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , const char * str )"	add_get_index_string
ANR	57409	DeclStmt									
ANR	57410	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , const char * str , size_t length )"	add_get_index_stringl
ANR	57411	DeclStmt									
ANR	57412	Decl							ZEND_API int	"ZEND_API int ( HashTable * ht , zval * key , zval * value )"	array_set_zval_key
ANR	57413	DeclStmt									
ANR	57414	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_long l )"	add_property_long_ex
ANR	57415	DeclStmt									
ANR	57416	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len )"	add_property_null_ex
ANR	57417	DeclStmt									
ANR	57418	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_long b )"	add_property_bool_ex
ANR	57419	DeclStmt									
ANR	57420	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_resource * r )"	add_property_resource_ex
ANR	57421	DeclStmt									
ANR	57422	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , double d )"	add_property_double_ex
ANR	57423	DeclStmt									
ANR	57424	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_string * str )"	add_property_str_ex
ANR	57425	DeclStmt									
ANR	57426	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , const char * str )"	add_property_string_ex
ANR	57427	DeclStmt									
ANR	57428	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , const char * str , size_t length )"	add_property_stringl_ex
ANR	57429	DeclStmt									
ANR	57430	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zval * value )"	add_property_zval_ex
ANR	57431	DeclStmt									
ANR	57432	Decl							ZEND_API int	"ZEND_API int ( HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] )"	call_user_function
ANR	57433	DeclStmt									
ANR	57434	Decl							ZEND_API int	"ZEND_API int ( HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] , int no_separation , zend_array * symbol_table )"	call_user_function_ex
ANR	57435	DeclStmt									
ANR	57436	Decl							const zend_fcall_info	const zend_fcall_info	empty_fcall_info
ANR	57437	DeclStmt									
ANR	57438	Decl							const zend_fcall_info_cache	const zend_fcall_info_cache	empty_fcall_info_cache
ANR	57439	DeclStmt									
ANR	57440	Decl							ZEND_API int	"ZEND_API int ( zval * callable , uint check_flags , zend_fcall_info * fci , zend_fcall_info_cache * fcc , zend_string * * callable_name , char * * error )"	zend_fcall_info_init
ANR	57441	DeclStmt									
ANR	57442	Decl							ZEND_API void	"ZEND_API void ( zend_fcall_info * fci , int free_mem )"	zend_fcall_info_args_clear
ANR	57443	DeclStmt									
ANR	57444	Decl							ZEND_API void	"ZEND_API void ( zend_fcall_info * fci , int * param_count , zval * * params )"	zend_fcall_info_args_save
ANR	57445	DeclStmt									
ANR	57446	Decl							ZEND_API void	"ZEND_API void ( zend_fcall_info * fci , int param_count , zval * params )"	zend_fcall_info_args_restore
ANR	57447	DeclStmt									
ANR	57448	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zval * args )"	zend_fcall_info_args
ANR	57449	DeclStmt									
ANR	57450	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zend_function * func , zval * args )"	zend_fcall_info_args_ex
ANR	57451	DeclStmt									
ANR	57452	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , int argc , zval * argv )"	zend_fcall_info_argp
ANR	57453	DeclStmt									
ANR	57454	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , int argc , va_list * argv )"	zend_fcall_info_argv
ANR	57455	DeclStmt									
ANR	57456	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zend_fcall_info_cache * fcc , zval * retval , zval * args )"	zend_fcall_info_call
ANR	57457	DeclStmt									
ANR	57458	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zend_fcall_info_cache * fci_cache )"	zend_call_function
ANR	57459	DeclStmt									
ANR	57460	Decl							ZEND_API int	ZEND_API int ( zend_string * name )	zend_delete_global_variable
ANR	57461	DeclStmt									
ANR	57462	Decl							ZEND_API zend_array	ZEND_API zend_array * ( void )	zend_rebuild_symbol_table
ANR	57463	DeclStmt									
ANR	57464	Decl							ZEND_API void	ZEND_API void ( zend_execute_data * execute_data )	zend_attach_symbol_table
ANR	57465	DeclStmt									
ANR	57466	Decl							ZEND_API void	ZEND_API void ( zend_execute_data * execute_data )	zend_detach_symbol_table
ANR	57467	DeclStmt									
ANR	57468	Decl							ZEND_API int	"ZEND_API int ( zend_string * name , zval * value , int force )"	zend_set_local_var
ANR	57469	DeclStmt									
ANR	57470	Decl							ZEND_API int	"ZEND_API int ( const char * name , size_t len , zval * value , int force )"	zend_set_local_var_str
ANR	57471	DeclStmt									
ANR	57472	Decl							ZEND_API zend_string	"ZEND_API zend_string * ( zend_class_entry * ce , zend_string * name )"	zend_find_alias_name
ANR	57473	DeclStmt									
ANR	57474	Decl							ZEND_API zend_string	"ZEND_API zend_string * ( zend_class_entry * ce , zend_function * f )"	zend_resolve_method_name
ANR	57475	DeclStmt									
ANR	57476	Decl							const char	const char * ( const zend_class_entry * ce )	zend_get_object_type
ANR	57477	DeclStmt									
ANR	57478	Decl							ZEND_API	ZEND_API ( display_disabled_function )	ZEND_FUNCTION
ANR	57479	DeclStmt									
ANR	57480	Decl							ZEND_API	ZEND_API ( display_disabled_class )	ZEND_FUNCTION
ANR	57481	DeclStmt									
ANR	57482	Decl							const char	const char *	_s
ANR	57483	DeclStmt									
ANR	57484	Decl							const char	const char *	_s
ANR	57485	DeclStmt									
ANR	57486	Decl							zval	zval *	__z
ANR	57487	DeclStmt									
ANR	57488	Decl							zval	zval *	__zv
ANR	57489	Function	RETURN_NULL	630:1:36570:36620							
ANR	57490	FunctionDef	RETURN_NULL ()		57489	0					
ANR	57491	CompoundStatement		630:27:36596:36620	57489	0					
ANR	57492	ExpressionStatement	RETVAL_NULL ( )	630:1:36598:36611	57489	0	True				
ANR	57493	CallExpression	RETVAL_NULL ( )		57489	0					
ANR	57494	Callee	RETVAL_NULL		57489	0					
ANR	57495	Identifier	RETVAL_NULL		57489	0					
ANR	57496	ArgumentList			57489	1					
ANR	57497	ReturnStatement	return ;	630:16:36613:36619	57489	1	True				
ANR	57498	ReturnType	define		57489	1					
ANR	57499	Identifier	RETURN_NULL		57489	2					
ANR	57500	ParameterList			57489	3					
ANR	57501	CFGEntryNode	ENTRY		57489		True				
ANR	57502	CFGExitNode	EXIT		57489		True				
ANR	57503	Function	RETURN_EMPTY_STRING	639:1:37108:37173							
ANR	57504	FunctionDef	RETURN_EMPTY_STRING ()		57503	0					
ANR	57505	CompoundStatement		639:33:37140:37173	57503	0					
ANR	57506	ExpressionStatement	RETVAL_EMPTY_STRING ( )	639:1:37142:37163	57503	0	True				
ANR	57507	CallExpression	RETVAL_EMPTY_STRING ( )		57503	0					
ANR	57508	Callee	RETVAL_EMPTY_STRING		57503	0					
ANR	57509	Identifier	RETVAL_EMPTY_STRING		57503	0					
ANR	57510	ArgumentList			57503	1					
ANR	57511	ReturnStatement	return ;	639:24:37165:37171	57503	1	True				
ANR	57512	ReturnType	define		57503	1					
ANR	57513	Identifier	RETURN_EMPTY_STRING		57503	2					
ANR	57514	ParameterList			57503	3					
ANR	57515	CFGEntryNode	ENTRY		57503		True				
ANR	57516	CFGExitNode	EXIT		57503		True				
ANR	57517	ClassDef	_zend_expected_type	690:8:39164:39268							
ANR	57518	DeclStmt									
ANR	57519	Decl							_zend_expected_type	_zend_expected_type	zend_expected_type
ANR	57520	DeclStmt									
ANR	57521	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int num_args , int min_num_args , int max_num_args )"	zend_wrong_paramers_count_error
ANR	57522	DeclStmt									
ANR	57523	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int num , zend_expected_type expected_type , zval * arg )"	zend_wrong_paramer_type_error
ANR	57524	DeclStmt									
ANR	57525	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int num , char * name , zval * arg )"	zend_wrong_paramer_class_error
ANR	57526	DeclStmt									
ANR	57527	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int severity , int num , char * error )"	zend_wrong_callback_error
ANR	57528	DeclStmt									
ANR	57529	Decl							const int	const int	_flags
ANR	57530	DeclStmt									
ANR	57531	Decl							int	int	_min_num_args
ANR	57532	DeclStmt									
ANR	57533	Decl							int	int	_max_num_args
ANR	57534	DeclStmt									
ANR	57535	Decl							int	int	_num_args
ANR	57536	DeclStmt									
ANR	57537	Decl							int	int	_i
ANR	57538	DeclStmt									
ANR	57539	Decl							zval	zval *	_real_arg
ANR	57540	Decl							zval	zval *	_arg
ANR	57541	DeclStmt									
ANR	57542	Decl							zend_expected_type	zend_expected_type	_expected_type
ANR	57543	DeclStmt									
ANR	57544	Decl							char	char *	_error
ANR	57545	DeclStmt									
ANR	57546	Decl							zend_bool	zend_bool	_dummy
ANR	57547	DeclStmt									
ANR	57548	Decl							zend_bool	zend_bool	_optional
ANR	57549	DeclStmt									
ANR	57550	Decl							int	int	error_code
ANR	57551	DeclStmt									
ANR	57552	Decl							define Z_PARAM_OPTIONAL	define Z_PARAM_OPTIONAL	_optional
ANR	57553	DeclStmt									
ANR	57554	Decl							int	int	_num_varargs
ANR	57555	DeclStmt									
ANR	57556	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_class_entry * * pce , int num , int check_null )"	zend_parse_arg_class
ANR	57557	DeclStmt									
ANR	57558	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_bool * dest )"	zend_parse_arg_bool_slow
ANR	57559	DeclStmt									
ANR	57560	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_bool * dest )"	zend_parse_arg_bool_weak
ANR	57561	DeclStmt									
ANR	57562	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_slow
ANR	57563	DeclStmt									
ANR	57564	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_weak
ANR	57565	DeclStmt									
ANR	57566	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_cap_slow
ANR	57567	DeclStmt									
ANR	57568	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_cap_weak
ANR	57569	DeclStmt									
ANR	57570	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , double * dest )"	zend_parse_arg_double_slow
ANR	57571	DeclStmt									
ANR	57572	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , double * dest )"	zend_parse_arg_double_weak
ANR	57573	DeclStmt									
ANR	57574	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_string * * dest )"	zend_parse_arg_str_slow
ANR	57575	DeclStmt									
ANR	57576	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_string * * dest )"	zend_parse_arg_str_weak
ANR	57577	Function	zend_parse_arg_bool	1056:0:50714:51141							
ANR	57578	FunctionDef	"zend_parse_arg_bool (zval * arg , zend_bool * dest , zend_bool * is_null , int check_null)"		57577	0					
ANR	57579	CompoundStatement		1057:0:50828:51141	57577	0					
ANR	57580	IfStatement	if ( check_null )		57577	0					
ANR	57581	Condition	check_null	1058:5:50835:50844	57577	0	True				
ANR	57582	Identifier	check_null		57577	0					
ANR	57583	CompoundStatement		2:17:18:18	57577	1					
ANR	57584	ExpressionStatement	* is_null = 0	1059:2:50851:50863	57577	0	True				
ANR	57585	AssignmentExpression	* is_null = 0		57577	0		=			
ANR	57586	UnaryOperationExpression	* is_null		57577	0					
ANR	57587	UnaryOperator	*		57577	0					
ANR	57588	Identifier	is_null		57577	1					
ANR	57589	PrimaryExpression	0		57577	1					
ANR	57590	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE ) )		57577	1					
ANR	57591	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )	1061:5:50873:50906	57577	0	True				
ANR	57592	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )		57577	0					
ANR	57593	Callee	EXPECTED		57577	0					
ANR	57594	Identifier	EXPECTED		57577	0					
ANR	57595	ArgumentList	Z_TYPE_P ( arg ) == IS_TRUE		57577	1					
ANR	57596	Argument	Z_TYPE_P ( arg ) == IS_TRUE		57577	0					
ANR	57597	EqualityExpression	Z_TYPE_P ( arg ) == IS_TRUE		57577	0		==			
ANR	57598	CallExpression	Z_TYPE_P ( arg )		57577	0					
ANR	57599	Callee	Z_TYPE_P		57577	0					
ANR	57600	Identifier	Z_TYPE_P		57577	0					
ANR	57601	ArgumentList	arg		57577	1					
ANR	57602	Argument	arg		57577	0					
ANR	57603	Identifier	arg		57577	0					
ANR	57604	Identifier	IS_TRUE		57577	1					
ANR	57605	CompoundStatement		5:41:80:80	57577	1					
ANR	57606	ExpressionStatement	* dest = 1	1062:2:50913:50922	57577	0	True				
ANR	57607	AssignmentExpression	* dest = 1		57577	0		=			
ANR	57608	UnaryOperationExpression	* dest		57577	0					
ANR	57609	UnaryOperator	*		57577	0					
ANR	57610	Identifier	dest		57577	1					
ANR	57611	PrimaryExpression	1		57577	1					
ANR	57612	ElseStatement	else		57577	0					
ANR	57613	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE ) )		57577	0					
ANR	57614	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE )	1063:12:50936:50970	57577	0	True				
ANR	57615	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE )		57577	0					
ANR	57616	Callee	EXPECTED		57577	0					
ANR	57617	Identifier	EXPECTED		57577	0					
ANR	57618	ArgumentList	Z_TYPE_P ( arg ) == IS_FALSE		57577	1					
ANR	57619	Argument	Z_TYPE_P ( arg ) == IS_FALSE		57577	0					
ANR	57620	EqualityExpression	Z_TYPE_P ( arg ) == IS_FALSE		57577	0		==			
ANR	57621	CallExpression	Z_TYPE_P ( arg )		57577	0					
ANR	57622	Callee	Z_TYPE_P		57577	0					
ANR	57623	Identifier	Z_TYPE_P		57577	0					
ANR	57624	ArgumentList	arg		57577	1					
ANR	57625	Argument	arg		57577	0					
ANR	57626	Identifier	arg		57577	0					
ANR	57627	Identifier	IS_FALSE		57577	1					
ANR	57628	CompoundStatement		7:49:144:144	57577	1					
ANR	57629	ExpressionStatement	* dest = 0	1064:2:50977:50986	57577	0	True				
ANR	57630	AssignmentExpression	* dest = 0		57577	0		=			
ANR	57631	UnaryOperationExpression	* dest		57577	0					
ANR	57632	UnaryOperator	*		57577	0					
ANR	57633	Identifier	dest		57577	1					
ANR	57634	PrimaryExpression	0		57577	1					
ANR	57635	ElseStatement	else		57577	0					
ANR	57636	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		57577	0					
ANR	57637	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1065:12:51000:51037	57577	0	True				
ANR	57638	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		57577	0		&&			
ANR	57639	Identifier	check_null		57577	0					
ANR	57640	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		57577	1		==			
ANR	57641	CallExpression	Z_TYPE_P ( arg )		57577	0					
ANR	57642	Callee	Z_TYPE_P		57577	0					
ANR	57643	Identifier	Z_TYPE_P		57577	0					
ANR	57644	ArgumentList	arg		57577	1					
ANR	57645	Argument	arg		57577	0					
ANR	57646	Identifier	arg		57577	0					
ANR	57647	Identifier	IS_NULL		57577	1					
ANR	57648	CompoundStatement		9:52:211:211	57577	1					
ANR	57649	ExpressionStatement	* is_null = 1	1066:2:51044:51056	57577	0	True				
ANR	57650	AssignmentExpression	* is_null = 1		57577	0		=			
ANR	57651	UnaryOperationExpression	* is_null		57577	0					
ANR	57652	UnaryOperator	*		57577	0					
ANR	57653	Identifier	is_null		57577	1					
ANR	57654	PrimaryExpression	1		57577	1					
ANR	57655	ExpressionStatement	* dest = 0	1067:2:51060:51069	57577	1	True				
ANR	57656	AssignmentExpression	* dest = 0		57577	0		=			
ANR	57657	UnaryOperationExpression	* dest		57577	0					
ANR	57658	UnaryOperator	*		57577	0					
ANR	57659	Identifier	dest		57577	1					
ANR	57660	PrimaryExpression	0		57577	1					
ANR	57661	ElseStatement	else		57577	0					
ANR	57662	CompoundStatement		12:8:250:250	57577	0					
ANR	57663	ReturnStatement	"return zend_parse_arg_bool_slow ( arg , dest ) ;"	1069:2:51083:51125	57577	0	True				
ANR	57664	CallExpression	"zend_parse_arg_bool_slow ( arg , dest )"		57577	0					
ANR	57665	Callee	zend_parse_arg_bool_slow		57577	0					
ANR	57666	Identifier	zend_parse_arg_bool_slow		57577	0					
ANR	57667	ArgumentList	arg		57577	1					
ANR	57668	Argument	arg		57577	0					
ANR	57669	Identifier	arg		57577	0					
ANR	57670	Argument	dest		57577	1					
ANR	57671	Identifier	dest		57577	0					
ANR	57672	ReturnStatement	return 1 ;	1071:1:51131:51139	57577	2	True				
ANR	57673	PrimaryExpression	1		57577	0					
ANR	57674	ReturnType	static zend_always_inline int		57577	1					
ANR	57675	Identifier	zend_parse_arg_bool		57577	2					
ANR	57676	ParameterList	"zval * arg , zend_bool * dest , zend_bool * is_null , int check_null"		57577	3					
ANR	57677	Parameter	zval * arg	1056:50:50764:50772	57577	0	True				
ANR	57678	ParameterType	zval *		57577	0					
ANR	57679	Identifier	arg		57577	1					
ANR	57680	Parameter	zend_bool * dest	1056:61:50775:50789	57577	1	True				
ANR	57681	ParameterType	zend_bool *		57577	0					
ANR	57682	Identifier	dest		57577	1					
ANR	57683	Parameter	zend_bool * is_null	1056:78:50792:50809	57577	2	True				
ANR	57684	ParameterType	zend_bool *		57577	0					
ANR	57685	Identifier	is_null		57577	1					
ANR	57686	Parameter	int check_null	1056:98:50812:50825	57577	3	True				
ANR	57687	ParameterType	int		57577	0					
ANR	57688	Identifier	check_null		57577	1					
ANR	57689	CFGEntryNode	ENTRY		57577		True				
ANR	57690	CFGExitNode	EXIT		57577		True				
ANR	57691	Symbol	IS_NULL		57577						
ANR	57692	Symbol	* dest		57577						
ANR	57693	Symbol	is_null		57577						
ANR	57694	Symbol	check_null		57577						
ANR	57695	Symbol	arg		57577						
ANR	57696	Symbol	IS_TRUE		57577						
ANR	57697	Symbol	zend_parse_arg_bool_slow		57577						
ANR	57698	Symbol	dest		57577						
ANR	57699	Symbol	Z_TYPE_P		57577						
ANR	57700	Symbol	EXPECTED		57577						
ANR	57701	Symbol	IS_FALSE		57577						
ANR	57702	Symbol	* is_null		57577						
ANR	57703	Function	zend_parse_arg_long	1074:0:51144:51597							
ANR	57704	FunctionDef	"zend_parse_arg_long (zval * arg , zend_long * dest , zend_bool * is_null , int check_null , int cap)"		57703	0					
ANR	57705	CompoundStatement		1075:0:51267:51597	57703	0					
ANR	57706	IfStatement	if ( check_null )		57703	0					
ANR	57707	Condition	check_null	1076:5:51274:51283	57703	0	True				
ANR	57708	Identifier	check_null		57703	0					
ANR	57709	CompoundStatement		2:17:18:18	57703	1					
ANR	57710	ExpressionStatement	* is_null = 0	1077:2:51290:51302	57703	0	True				
ANR	57711	AssignmentExpression	* is_null = 0		57703	0		=			
ANR	57712	UnaryOperationExpression	* is_null		57703	0					
ANR	57713	UnaryOperator	*		57703	0					
ANR	57714	Identifier	is_null		57703	1					
ANR	57715	PrimaryExpression	0		57703	1					
ANR	57716	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG ) )		57703	1					
ANR	57717	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )	1079:5:51312:51345	57703	0	True				
ANR	57718	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )		57703	0					
ANR	57719	Callee	EXPECTED		57703	0					
ANR	57720	Identifier	EXPECTED		57703	0					
ANR	57721	ArgumentList	Z_TYPE_P ( arg ) == IS_LONG		57703	1					
ANR	57722	Argument	Z_TYPE_P ( arg ) == IS_LONG		57703	0					
ANR	57723	EqualityExpression	Z_TYPE_P ( arg ) == IS_LONG		57703	0		==			
ANR	57724	CallExpression	Z_TYPE_P ( arg )		57703	0					
ANR	57725	Callee	Z_TYPE_P		57703	0					
ANR	57726	Identifier	Z_TYPE_P		57703	0					
ANR	57727	ArgumentList	arg		57703	1					
ANR	57728	Argument	arg		57703	0					
ANR	57729	Identifier	arg		57703	0					
ANR	57730	Identifier	IS_LONG		57703	1					
ANR	57731	CompoundStatement		5:41:80:80	57703	1					
ANR	57732	ExpressionStatement	* dest = Z_LVAL_P ( arg )	1080:2:51352:51373	57703	0	True				
ANR	57733	AssignmentExpression	* dest = Z_LVAL_P ( arg )		57703	0		=			
ANR	57734	UnaryOperationExpression	* dest		57703	0					
ANR	57735	UnaryOperator	*		57703	0					
ANR	57736	Identifier	dest		57703	1					
ANR	57737	CallExpression	Z_LVAL_P ( arg )		57703	1					
ANR	57738	Callee	Z_LVAL_P		57703	0					
ANR	57739	Identifier	Z_LVAL_P		57703	0					
ANR	57740	ArgumentList	arg		57703	1					
ANR	57741	Argument	arg		57703	0					
ANR	57742	Identifier	arg		57703	0					
ANR	57743	ElseStatement	else		57703	0					
ANR	57744	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		57703	0					
ANR	57745	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1081:12:51387:51424	57703	0	True				
ANR	57746	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		57703	0		&&			
ANR	57747	Identifier	check_null		57703	0					
ANR	57748	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		57703	1		==			
ANR	57749	CallExpression	Z_TYPE_P ( arg )		57703	0					
ANR	57750	Callee	Z_TYPE_P		57703	0					
ANR	57751	Identifier	Z_TYPE_P		57703	0					
ANR	57752	ArgumentList	arg		57703	1					
ANR	57753	Argument	arg		57703	0					
ANR	57754	Identifier	arg		57703	0					
ANR	57755	Identifier	IS_NULL		57703	1					
ANR	57756	CompoundStatement		7:52:159:159	57703	1					
ANR	57757	ExpressionStatement	* is_null = 1	1082:2:51431:51443	57703	0	True				
ANR	57758	AssignmentExpression	* is_null = 1		57703	0		=			
ANR	57759	UnaryOperationExpression	* is_null		57703	0					
ANR	57760	UnaryOperator	*		57703	0					
ANR	57761	Identifier	is_null		57703	1					
ANR	57762	PrimaryExpression	1		57703	1					
ANR	57763	ExpressionStatement	* dest = 0	1083:2:51447:51456	57703	1	True				
ANR	57764	AssignmentExpression	* dest = 0		57703	0		=			
ANR	57765	UnaryOperationExpression	* dest		57703	0					
ANR	57766	UnaryOperator	*		57703	0					
ANR	57767	Identifier	dest		57703	1					
ANR	57768	PrimaryExpression	0		57703	1					
ANR	57769	ElseStatement	else		57703	0					
ANR	57770	IfStatement	if ( cap )		57703	0					
ANR	57771	Condition	cap	1084:12:51470:51472	57703	0	True				
ANR	57772	Identifier	cap		57703	0					
ANR	57773	CompoundStatement		10:17:207:207	57703	1					
ANR	57774	ReturnStatement	"return zend_parse_arg_long_cap_slow ( arg , dest ) ;"	1085:2:51479:51525	57703	0	True				
ANR	57775	CallExpression	"zend_parse_arg_long_cap_slow ( arg , dest )"		57703	0					
ANR	57776	Callee	zend_parse_arg_long_cap_slow		57703	0					
ANR	57777	Identifier	zend_parse_arg_long_cap_slow		57703	0					
ANR	57778	ArgumentList	arg		57703	1					
ANR	57779	Argument	arg		57703	0					
ANR	57780	Identifier	arg		57703	0					
ANR	57781	Argument	dest		57703	1					
ANR	57782	Identifier	dest		57703	0					
ANR	57783	ElseStatement	else		57703	0					
ANR	57784	CompoundStatement		12:8:267:267	57703	0					
ANR	57785	ReturnStatement	"return zend_parse_arg_long_slow ( arg , dest ) ;"	1087:2:51539:51581	57703	0	True				
ANR	57786	CallExpression	"zend_parse_arg_long_slow ( arg , dest )"		57703	0					
ANR	57787	Callee	zend_parse_arg_long_slow		57703	0					
ANR	57788	Identifier	zend_parse_arg_long_slow		57703	0					
ANR	57789	ArgumentList	arg		57703	1					
ANR	57790	Argument	arg		57703	0					
ANR	57791	Identifier	arg		57703	0					
ANR	57792	Argument	dest		57703	1					
ANR	57793	Identifier	dest		57703	0					
ANR	57794	ReturnStatement	return 1 ;	1089:1:51587:51595	57703	2	True				
ANR	57795	PrimaryExpression	1		57703	0					
ANR	57796	ReturnType	static zend_always_inline int		57703	1					
ANR	57797	Identifier	zend_parse_arg_long		57703	2					
ANR	57798	ParameterList	"zval * arg , zend_long * dest , zend_bool * is_null , int check_null , int cap"		57703	3					
ANR	57799	Parameter	zval * arg	1074:50:51194:51202	57703	0	True				
ANR	57800	ParameterType	zval *		57703	0					
ANR	57801	Identifier	arg		57703	1					
ANR	57802	Parameter	zend_long * dest	1074:61:51205:51219	57703	1	True				
ANR	57803	ParameterType	zend_long *		57703	0					
ANR	57804	Identifier	dest		57703	1					
ANR	57805	Parameter	zend_bool * is_null	1074:78:51222:51239	57703	2	True				
ANR	57806	ParameterType	zend_bool *		57703	0					
ANR	57807	Identifier	is_null		57703	1					
ANR	57808	Parameter	int check_null	1074:98:51242:51255	57703	3	True				
ANR	57809	ParameterType	int		57703	0					
ANR	57810	Identifier	check_null		57703	1					
ANR	57811	Parameter	int cap	1074:114:51258:51264	57703	4	True				
ANR	57812	ParameterType	int		57703	0					
ANR	57813	Identifier	cap		57703	1					
ANR	57814	CFGEntryNode	ENTRY		57703		True				
ANR	57815	CFGExitNode	EXIT		57703		True				
ANR	57816	Symbol	* dest		57703						
ANR	57817	Symbol	is_null		57703						
ANR	57818	Symbol	check_null		57703						
ANR	57819	Symbol	zend_parse_arg_long_slow		57703						
ANR	57820	Symbol	dest		57703						
ANR	57821	Symbol	Z_TYPE_P		57703						
ANR	57822	Symbol	Z_LVAL_P		57703						
ANR	57823	Symbol	cap		57703						
ANR	57824	Symbol	IS_NULL		57703						
ANR	57825	Symbol	IS_LONG		57703						
ANR	57826	Symbol	arg		57703						
ANR	57827	Symbol	EXPECTED		57703						
ANR	57828	Symbol	zend_parse_arg_long_cap_slow		57703						
ANR	57829	Symbol	* is_null		57703						
ANR	57830	Function	zend_parse_arg_double	1092:0:51600:51980							
ANR	57831	FunctionDef	"zend_parse_arg_double (zval * arg , double * dest , zend_bool * is_null , int check_null)"		57830	0					
ANR	57832	CompoundStatement		1093:0:51713:51980	57830	0					
ANR	57833	IfStatement	if ( check_null )		57830	0					
ANR	57834	Condition	check_null	1094:5:51720:51729	57830	0	True				
ANR	57835	Identifier	check_null		57830	0					
ANR	57836	CompoundStatement		2:17:18:18	57830	1					
ANR	57837	ExpressionStatement	* is_null = 0	1095:2:51736:51748	57830	0	True				
ANR	57838	AssignmentExpression	* is_null = 0		57830	0		=			
ANR	57839	UnaryOperationExpression	* is_null		57830	0					
ANR	57840	UnaryOperator	*		57830	0					
ANR	57841	Identifier	is_null		57830	1					
ANR	57842	PrimaryExpression	0		57830	1					
ANR	57843	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE ) )		57830	1					
ANR	57844	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )	1097:5:51758:51793	57830	0	True				
ANR	57845	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )		57830	0					
ANR	57846	Callee	EXPECTED		57830	0					
ANR	57847	Identifier	EXPECTED		57830	0					
ANR	57848	ArgumentList	Z_TYPE_P ( arg ) == IS_DOUBLE		57830	1					
ANR	57849	Argument	Z_TYPE_P ( arg ) == IS_DOUBLE		57830	0					
ANR	57850	EqualityExpression	Z_TYPE_P ( arg ) == IS_DOUBLE		57830	0		==			
ANR	57851	CallExpression	Z_TYPE_P ( arg )		57830	0					
ANR	57852	Callee	Z_TYPE_P		57830	0					
ANR	57853	Identifier	Z_TYPE_P		57830	0					
ANR	57854	ArgumentList	arg		57830	1					
ANR	57855	Argument	arg		57830	0					
ANR	57856	Identifier	arg		57830	0					
ANR	57857	Identifier	IS_DOUBLE		57830	1					
ANR	57858	CompoundStatement		5:43:82:82	57830	1					
ANR	57859	ExpressionStatement	* dest = Z_DVAL_P ( arg )	1098:2:51800:51821	57830	0	True				
ANR	57860	AssignmentExpression	* dest = Z_DVAL_P ( arg )		57830	0		=			
ANR	57861	UnaryOperationExpression	* dest		57830	0					
ANR	57862	UnaryOperator	*		57830	0					
ANR	57863	Identifier	dest		57830	1					
ANR	57864	CallExpression	Z_DVAL_P ( arg )		57830	1					
ANR	57865	Callee	Z_DVAL_P		57830	0					
ANR	57866	Identifier	Z_DVAL_P		57830	0					
ANR	57867	ArgumentList	arg		57830	1					
ANR	57868	Argument	arg		57830	0					
ANR	57869	Identifier	arg		57830	0					
ANR	57870	ElseStatement	else		57830	0					
ANR	57871	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		57830	0					
ANR	57872	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1099:12:51835:51872	57830	0	True				
ANR	57873	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		57830	0		&&			
ANR	57874	Identifier	check_null		57830	0					
ANR	57875	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		57830	1		==			
ANR	57876	CallExpression	Z_TYPE_P ( arg )		57830	0					
ANR	57877	Callee	Z_TYPE_P		57830	0					
ANR	57878	Identifier	Z_TYPE_P		57830	0					
ANR	57879	ArgumentList	arg		57830	1					
ANR	57880	Argument	arg		57830	0					
ANR	57881	Identifier	arg		57830	0					
ANR	57882	Identifier	IS_NULL		57830	1					
ANR	57883	CompoundStatement		7:52:161:161	57830	1					
ANR	57884	ExpressionStatement	* is_null = 1	1100:2:51879:51891	57830	0	True				
ANR	57885	AssignmentExpression	* is_null = 1		57830	0		=			
ANR	57886	UnaryOperationExpression	* is_null		57830	0					
ANR	57887	UnaryOperator	*		57830	0					
ANR	57888	Identifier	is_null		57830	1					
ANR	57889	PrimaryExpression	1		57830	1					
ANR	57890	ExpressionStatement	* dest = 0.0	1101:2:51895:51906	57830	1	True				
ANR	57891	AssignmentExpression	* dest = 0.0		57830	0		=			
ANR	57892	UnaryOperationExpression	* dest		57830	0					
ANR	57893	UnaryOperator	*		57830	0					
ANR	57894	Identifier	dest		57830	1					
ANR	57895	PrimaryExpression	0.0		57830	1					
ANR	57896	ElseStatement	else		57830	0					
ANR	57897	CompoundStatement		10:8:202:202	57830	0					
ANR	57898	ReturnStatement	"return zend_parse_arg_double_slow ( arg , dest ) ;"	1103:2:51920:51964	57830	0	True				
ANR	57899	CallExpression	"zend_parse_arg_double_slow ( arg , dest )"		57830	0					
ANR	57900	Callee	zend_parse_arg_double_slow		57830	0					
ANR	57901	Identifier	zend_parse_arg_double_slow		57830	0					
ANR	57902	ArgumentList	arg		57830	1					
ANR	57903	Argument	arg		57830	0					
ANR	57904	Identifier	arg		57830	0					
ANR	57905	Argument	dest		57830	1					
ANR	57906	Identifier	dest		57830	0					
ANR	57907	ReturnStatement	return 1 ;	1105:1:51970:51978	57830	2	True				
ANR	57908	PrimaryExpression	1		57830	0					
ANR	57909	ReturnType	static zend_always_inline int		57830	1					
ANR	57910	Identifier	zend_parse_arg_double		57830	2					
ANR	57911	ParameterList	"zval * arg , double * dest , zend_bool * is_null , int check_null"		57830	3					
ANR	57912	Parameter	zval * arg	1092:52:51652:51660	57830	0	True				
ANR	57913	ParameterType	zval *		57830	0					
ANR	57914	Identifier	arg		57830	1					
ANR	57915	Parameter	double * dest	1092:63:51663:51674	57830	1	True				
ANR	57916	ParameterType	double *		57830	0					
ANR	57917	Identifier	dest		57830	1					
ANR	57918	Parameter	zend_bool * is_null	1092:77:51677:51694	57830	2	True				
ANR	57919	ParameterType	zend_bool *		57830	0					
ANR	57920	Identifier	is_null		57830	1					
ANR	57921	Parameter	int check_null	1092:97:51697:51710	57830	3	True				
ANR	57922	ParameterType	int		57830	0					
ANR	57923	Identifier	check_null		57830	1					
ANR	57924	CFGEntryNode	ENTRY		57830		True				
ANR	57925	CFGExitNode	EXIT		57830		True				
ANR	57926	Symbol	IS_NULL		57830						
ANR	57927	Symbol	* dest		57830						
ANR	57928	Symbol	is_null		57830						
ANR	57929	Symbol	check_null		57830						
ANR	57930	Symbol	arg		57830						
ANR	57931	Symbol	IS_DOUBLE		57830						
ANR	57932	Symbol	zend_parse_arg_double_slow		57830						
ANR	57933	Symbol	dest		57830						
ANR	57934	Symbol	Z_TYPE_P		57830						
ANR	57935	Symbol	EXPECTED		57830						
ANR	57936	Symbol	Z_DVAL_P		57830						
ANR	57937	Symbol	* is_null		57830						
ANR	57938	Function	zend_parse_arg_str	1108:0:51983:52289							
ANR	57939	FunctionDef	"zend_parse_arg_str (zval * arg , zend_string * * dest , int check_null)"		57938	0					
ANR	57940	CompoundStatement		1109:0:52079:52289	57938	0					
ANR	57941	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING ) )		57938	0					
ANR	57942	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )	1110:5:52086:52121	57938	0	True				
ANR	57943	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )		57938	0					
ANR	57944	Callee	EXPECTED		57938	0					
ANR	57945	Identifier	EXPECTED		57938	0					
ANR	57946	ArgumentList	Z_TYPE_P ( arg ) == IS_STRING		57938	1					
ANR	57947	Argument	Z_TYPE_P ( arg ) == IS_STRING		57938	0					
ANR	57948	EqualityExpression	Z_TYPE_P ( arg ) == IS_STRING		57938	0		==			
ANR	57949	CallExpression	Z_TYPE_P ( arg )		57938	0					
ANR	57950	Callee	Z_TYPE_P		57938	0					
ANR	57951	Identifier	Z_TYPE_P		57938	0					
ANR	57952	ArgumentList	arg		57938	1					
ANR	57953	Argument	arg		57938	0					
ANR	57954	Identifier	arg		57938	0					
ANR	57955	Identifier	IS_STRING		57938	1					
ANR	57956	CompoundStatement		2:43:44:44	57938	1					
ANR	57957	ExpressionStatement	* dest = Z_STR_P ( arg )	1111:2:52128:52148	57938	0	True				
ANR	57958	AssignmentExpression	* dest = Z_STR_P ( arg )		57938	0		=			
ANR	57959	UnaryOperationExpression	* dest		57938	0					
ANR	57960	UnaryOperator	*		57938	0					
ANR	57961	Identifier	dest		57938	1					
ANR	57962	CallExpression	Z_STR_P ( arg )		57938	1					
ANR	57963	Callee	Z_STR_P		57938	0					
ANR	57964	Identifier	Z_STR_P		57938	0					
ANR	57965	ArgumentList	arg		57938	1					
ANR	57966	Argument	arg		57938	0					
ANR	57967	Identifier	arg		57938	0					
ANR	57968	ElseStatement	else		57938	0					
ANR	57969	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		57938	0					
ANR	57970	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1112:12:52162:52199	57938	0	True				
ANR	57971	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		57938	0		&&			
ANR	57972	Identifier	check_null		57938	0					
ANR	57973	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		57938	1		==			
ANR	57974	CallExpression	Z_TYPE_P ( arg )		57938	0					
ANR	57975	Callee	Z_TYPE_P		57938	0					
ANR	57976	Identifier	Z_TYPE_P		57938	0					
ANR	57977	ArgumentList	arg		57938	1					
ANR	57978	Argument	arg		57938	0					
ANR	57979	Identifier	arg		57938	0					
ANR	57980	Identifier	IS_NULL		57938	1					
ANR	57981	CompoundStatement		4:52:122:122	57938	1					
ANR	57982	ExpressionStatement	* dest = NULL	1113:2:52206:52218	57938	0	True				
ANR	57983	AssignmentExpression	* dest = NULL		57938	0		=			
ANR	57984	UnaryOperationExpression	* dest		57938	0					
ANR	57985	UnaryOperator	*		57938	0					
ANR	57986	Identifier	dest		57938	1					
ANR	57987	Identifier	NULL		57938	1					
ANR	57988	ElseStatement	else		57938	0					
ANR	57989	CompoundStatement		6:8:148:148	57938	0					
ANR	57990	ReturnStatement	"return zend_parse_arg_str_slow ( arg , dest ) ;"	1115:2:52232:52273	57938	0	True				
ANR	57991	CallExpression	"zend_parse_arg_str_slow ( arg , dest )"		57938	0					
ANR	57992	Callee	zend_parse_arg_str_slow		57938	0					
ANR	57993	Identifier	zend_parse_arg_str_slow		57938	0					
ANR	57994	ArgumentList	arg		57938	1					
ANR	57995	Argument	arg		57938	0					
ANR	57996	Identifier	arg		57938	0					
ANR	57997	Argument	dest		57938	1					
ANR	57998	Identifier	dest		57938	0					
ANR	57999	ReturnStatement	return 1 ;	1117:1:52279:52287	57938	1	True				
ANR	58000	PrimaryExpression	1		57938	0					
ANR	58001	ReturnType	static zend_always_inline int		57938	1					
ANR	58002	Identifier	zend_parse_arg_str		57938	2					
ANR	58003	ParameterList	"zval * arg , zend_string * * dest , int check_null"		57938	3					
ANR	58004	Parameter	zval * arg	1108:49:52032:52040	57938	0	True				
ANR	58005	ParameterType	zval *		57938	0					
ANR	58006	Identifier	arg		57938	1					
ANR	58007	Parameter	zend_string * * dest	1108:60:52043:52060	57938	1	True				
ANR	58008	ParameterType	zend_string * *		57938	0					
ANR	58009	Identifier	dest		57938	1					
ANR	58010	Parameter	int check_null	1108:80:52063:52076	57938	2	True				
ANR	58011	ParameterType	int		57938	0					
ANR	58012	Identifier	check_null		57938	1					
ANR	58013	CFGEntryNode	ENTRY		57938		True				
ANR	58014	CFGExitNode	EXIT		57938		True				
ANR	58015	Symbol	zend_parse_arg_str_slow		57938						
ANR	58016	Symbol	NULL		57938						
ANR	58017	Symbol	IS_NULL		57938						
ANR	58018	Symbol	* dest		57938						
ANR	58019	Symbol	check_null		57938						
ANR	58020	Symbol	arg		57938						
ANR	58021	Symbol	IS_STRING		57938						
ANR	58022	Symbol	Z_STR_P		57938						
ANR	58023	Symbol	dest		57938						
ANR	58024	Symbol	Z_TYPE_P		57938						
ANR	58025	Symbol	EXPECTED		57938						
ANR	58026	Function	zend_parse_arg_string	1120:0:52292:52640							
ANR	58027	FunctionDef	"zend_parse_arg_string (zval * arg , char * * dest , size_t * dest_len , int check_null)"		58026	0					
ANR	58028	CompoundStatement		1121:0:52402:52640	58026	0					
ANR	58029	IdentifierDeclStatement	zend_string * str ;	1122:1:52405:52421	58026	0	True				
ANR	58030	IdentifierDecl	* str		58026	0					
ANR	58031	IdentifierDeclType	zend_string *		58026	0					
ANR	58032	Identifier	str		58026	1					
ANR	58033	IfStatement	"if ( ! zend_parse_arg_str ( arg , & str , check_null ) )"		58026	1					
ANR	58034	Condition	"! zend_parse_arg_str ( arg , & str , check_null )"	1124:5:52429:52470	58026	0	True				
ANR	58035	UnaryOperationExpression	"! zend_parse_arg_str ( arg , & str , check_null )"		58026	0					
ANR	58036	UnaryOperator	!		58026	0					
ANR	58037	CallExpression	"zend_parse_arg_str ( arg , & str , check_null )"		58026	1					
ANR	58038	Callee	zend_parse_arg_str		58026	0					
ANR	58039	Identifier	zend_parse_arg_str		58026	0					
ANR	58040	ArgumentList	arg		58026	1					
ANR	58041	Argument	arg		58026	0					
ANR	58042	Identifier	arg		58026	0					
ANR	58043	Argument	& str		58026	1					
ANR	58044	UnaryOperationExpression	& str		58026	0					
ANR	58045	UnaryOperator	&		58026	0					
ANR	58046	Identifier	str		58026	1					
ANR	58047	Argument	check_null		58026	2					
ANR	58048	Identifier	check_null		58026	0					
ANR	58049	CompoundStatement		4:49:70:70	58026	1					
ANR	58050	ReturnStatement	return 0 ;	1125:2:52477:52485	58026	0	True				
ANR	58051	PrimaryExpression	0		58026	0					
ANR	58052	IfStatement	if ( check_null && UNEXPECTED ( ! str ) )		58026	2					
ANR	58053	Condition	check_null && UNEXPECTED ( ! str )	1127:5:52495:52524	58026	0	True				
ANR	58054	AndExpression	check_null && UNEXPECTED ( ! str )		58026	0		&&			
ANR	58055	Identifier	check_null		58026	0					
ANR	58056	CallExpression	UNEXPECTED ( ! str )		58026	1					
ANR	58057	Callee	UNEXPECTED		58026	0					
ANR	58058	Identifier	UNEXPECTED		58026	0					
ANR	58059	ArgumentList	! str		58026	1					
ANR	58060	Argument	! str		58026	0					
ANR	58061	UnaryOperationExpression	! str		58026	0					
ANR	58062	UnaryOperator	!		58026	0					
ANR	58063	Identifier	str		58026	1					
ANR	58064	CompoundStatement		7:37:124:124	58026	1					
ANR	58065	ExpressionStatement	* dest = NULL	1128:2:52531:52543	58026	0	True				
ANR	58066	AssignmentExpression	* dest = NULL		58026	0		=			
ANR	58067	UnaryOperationExpression	* dest		58026	0					
ANR	58068	UnaryOperator	*		58026	0					
ANR	58069	Identifier	dest		58026	1					
ANR	58070	Identifier	NULL		58026	1					
ANR	58071	ExpressionStatement	* dest_len = 0	1129:2:52547:52560	58026	1	True				
ANR	58072	AssignmentExpression	* dest_len = 0		58026	0		=			
ANR	58073	UnaryOperationExpression	* dest_len		58026	0					
ANR	58074	UnaryOperator	*		58026	0					
ANR	58075	Identifier	dest_len		58026	1					
ANR	58076	PrimaryExpression	0		58026	1					
ANR	58077	ElseStatement	else		58026	0					
ANR	58078	CompoundStatement		10:8:167:167	58026	0					
ANR	58079	ExpressionStatement	* dest = ZSTR_VAL ( str )	1131:2:52574:52595	58026	0	True				
ANR	58080	AssignmentExpression	* dest = ZSTR_VAL ( str )		58026	0		=			
ANR	58081	UnaryOperationExpression	* dest		58026	0					
ANR	58082	UnaryOperator	*		58026	0					
ANR	58083	Identifier	dest		58026	1					
ANR	58084	CallExpression	ZSTR_VAL ( str )		58026	1					
ANR	58085	Callee	ZSTR_VAL		58026	0					
ANR	58086	Identifier	ZSTR_VAL		58026	0					
ANR	58087	ArgumentList	str		58026	1					
ANR	58088	Argument	str		58026	0					
ANR	58089	Identifier	str		58026	0					
ANR	58090	ExpressionStatement	* dest_len = ZSTR_LEN ( str )	1132:2:52599:52624	58026	1	True				
ANR	58091	AssignmentExpression	* dest_len = ZSTR_LEN ( str )		58026	0		=			
ANR	58092	UnaryOperationExpression	* dest_len		58026	0					
ANR	58093	UnaryOperator	*		58026	0					
ANR	58094	Identifier	dest_len		58026	1					
ANR	58095	CallExpression	ZSTR_LEN ( str )		58026	1					
ANR	58096	Callee	ZSTR_LEN		58026	0					
ANR	58097	Identifier	ZSTR_LEN		58026	0					
ANR	58098	ArgumentList	str		58026	1					
ANR	58099	Argument	str		58026	0					
ANR	58100	Identifier	str		58026	0					
ANR	58101	ReturnStatement	return 1 ;	1134:1:52630:52638	58026	3	True				
ANR	58102	PrimaryExpression	1		58026	0					
ANR	58103	ReturnType	static zend_always_inline int		58026	1					
ANR	58104	Identifier	zend_parse_arg_string		58026	2					
ANR	58105	ParameterList	"zval * arg , char * * dest , size_t * dest_len , int check_null"		58026	3					
ANR	58106	Parameter	zval * arg	1120:52:52344:52352	58026	0	True				
ANR	58107	ParameterType	zval *		58026	0					
ANR	58108	Identifier	arg		58026	1					
ANR	58109	Parameter	char * * dest	1120:63:52355:52365	58026	1	True				
ANR	58110	ParameterType	char * *		58026	0					
ANR	58111	Identifier	dest		58026	1					
ANR	58112	Parameter	size_t * dest_len	1120:76:52368:52383	58026	2	True				
ANR	58113	ParameterType	size_t *		58026	0					
ANR	58114	Identifier	dest_len		58026	1					
ANR	58115	Parameter	int check_null	1120:94:52386:52399	58026	3	True				
ANR	58116	ParameterType	int		58026	0					
ANR	58117	Identifier	check_null		58026	1					
ANR	58118	CFGEntryNode	ENTRY		58026		True				
ANR	58119	CFGExitNode	EXIT		58026		True				
ANR	58120	Symbol	zend_parse_arg_str		58026						
ANR	58121	Symbol	NULL		58026						
ANR	58122	Symbol	* dest		58026						
ANR	58123	Symbol	check_null		58026						
ANR	58124	Symbol	dest		58026						
ANR	58125	Symbol	dest_len		58026						
ANR	58126	Symbol	ZSTR_VAL		58026						
ANR	58127	Symbol	str		58026						
ANR	58128	Symbol	& str		58026						
ANR	58129	Symbol	UNEXPECTED		58026						
ANR	58130	Symbol	arg		58026						
ANR	58131	Symbol	ZSTR_LEN		58026						
ANR	58132	Symbol	* dest_len		58026						
ANR	58133	Function	zend_parse_arg_path_str	1137:0:52643:52904							
ANR	58134	FunctionDef	"zend_parse_arg_path_str (zval * arg , zend_string * * dest , int check_null)"		58133	0					
ANR	58135	CompoundStatement		1138:0:52744:52904	58133	0					
ANR	58136	IfStatement	"if ( ! zend_parse_arg_str ( arg , dest , check_null ) || ( * dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) ) ) )"		58133	0					
ANR	58137	Condition	"! zend_parse_arg_str ( arg , dest , check_null ) || ( * dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) ) )"	1139:5:52751:52873	58133	0	True				
ANR	58138	OrExpression	"! zend_parse_arg_str ( arg , dest , check_null ) || ( * dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) ) )"		58133	0		||			
ANR	58139	UnaryOperationExpression	"! zend_parse_arg_str ( arg , dest , check_null )"		58133	0					
ANR	58140	UnaryOperator	!		58133	0					
ANR	58141	CallExpression	"zend_parse_arg_str ( arg , dest , check_null )"		58133	1					
ANR	58142	Callee	zend_parse_arg_str		58133	0					
ANR	58143	Identifier	zend_parse_arg_str		58133	0					
ANR	58144	ArgumentList	arg		58133	1					
ANR	58145	Argument	arg		58133	0					
ANR	58146	Identifier	arg		58133	0					
ANR	58147	Argument	dest		58133	1					
ANR	58148	Identifier	dest		58133	0					
ANR	58149	Argument	check_null		58133	2					
ANR	58150	Identifier	check_null		58133	0					
ANR	58151	AndExpression	"* dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) )"		58133	1		&&			
ANR	58152	UnaryOperationExpression	* dest		58133	0					
ANR	58153	UnaryOperator	*		58133	0					
ANR	58154	Identifier	dest		58133	1					
ANR	58155	CallExpression	"UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) )"		58133	1					
ANR	58156	Callee	UNEXPECTED		58133	0					
ANR	58157	Identifier	UNEXPECTED		58133	0					
ANR	58158	ArgumentList	"CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) )"		58133	1					
ANR	58159	Argument	"CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) )"		58133	0					
ANR	58160	CallExpression	"CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) )"		58133	0					
ANR	58161	Callee	CHECK_NULL_PATH		58133	0					
ANR	58162	Identifier	CHECK_NULL_PATH		58133	0					
ANR	58163	ArgumentList	ZSTR_VAL ( * dest )		58133	1					
ANR	58164	Argument	ZSTR_VAL ( * dest )		58133	0					
ANR	58165	CallExpression	ZSTR_VAL ( * dest )		58133	0					
ANR	58166	Callee	ZSTR_VAL		58133	0					
ANR	58167	Identifier	ZSTR_VAL		58133	0					
ANR	58168	ArgumentList	* dest		58133	1					
ANR	58169	Argument	* dest		58133	0					
ANR	58170	UnaryOperationExpression	* dest		58133	0					
ANR	58171	UnaryOperator	*		58133	0					
ANR	58172	Identifier	dest		58133	1					
ANR	58173	Argument	ZSTR_LEN ( * dest )		58133	1					
ANR	58174	CallExpression	ZSTR_LEN ( * dest )		58133	0					
ANR	58175	Callee	ZSTR_LEN		58133	0					
ANR	58176	Identifier	ZSTR_LEN		58133	0					
ANR	58177	ArgumentList	* dest		58133	1					
ANR	58178	Argument	* dest		58133	0					
ANR	58179	UnaryOperationExpression	* dest		58133	0					
ANR	58180	UnaryOperator	*		58133	0					
ANR	58181	Identifier	dest		58133	1					
ANR	58182	CompoundStatement		3:79:131:131	58133	1					
ANR	58183	ReturnStatement	return 0 ;	1141:2:52880:52888	58133	0	True				
ANR	58184	PrimaryExpression	0		58133	0					
ANR	58185	ReturnStatement	return 1 ;	1143:1:52894:52902	58133	1	True				
ANR	58186	PrimaryExpression	1		58133	0					
ANR	58187	ReturnType	static zend_always_inline int		58133	1					
ANR	58188	Identifier	zend_parse_arg_path_str		58133	2					
ANR	58189	ParameterList	"zval * arg , zend_string * * dest , int check_null"		58133	3					
ANR	58190	Parameter	zval * arg	1137:54:52697:52705	58133	0	True				
ANR	58191	ParameterType	zval *		58133	0					
ANR	58192	Identifier	arg		58133	1					
ANR	58193	Parameter	zend_string * * dest	1137:65:52708:52725	58133	1	True				
ANR	58194	ParameterType	zend_string * *		58133	0					
ANR	58195	Identifier	dest		58133	1					
ANR	58196	Parameter	int check_null	1137:85:52728:52741	58133	2	True				
ANR	58197	ParameterType	int		58133	0					
ANR	58198	Identifier	check_null		58133	1					
ANR	58199	CFGEntryNode	ENTRY		58133		True				
ANR	58200	CFGExitNode	EXIT		58133		True				
ANR	58201	Symbol	UNEXPECTED		58133						
ANR	58202	Symbol	zend_parse_arg_str		58133						
ANR	58203	Symbol	CHECK_NULL_PATH		58133						
ANR	58204	Symbol	* dest		58133						
ANR	58205	Symbol	check_null		58133						
ANR	58206	Symbol	arg		58133						
ANR	58207	Symbol	ZSTR_LEN		58133						
ANR	58208	Symbol	dest		58133						
ANR	58209	Symbol	ZSTR_VAL		58133						
ANR	58210	Function	zend_parse_arg_path	1146:0:52907:53258							
ANR	58211	FunctionDef	"zend_parse_arg_path (zval * arg , char * * dest , size_t * dest_len , int check_null)"		58210	0					
ANR	58212	CompoundStatement		1147:0:53015:53258	58210	0					
ANR	58213	IdentifierDeclStatement	zend_string * str ;	1148:1:53018:53034	58210	0	True				
ANR	58214	IdentifierDecl	* str		58210	0					
ANR	58215	IdentifierDeclType	zend_string *		58210	0					
ANR	58216	Identifier	str		58210	1					
ANR	58217	IfStatement	"if ( ! zend_parse_arg_path_str ( arg , & str , check_null ) )"		58210	1					
ANR	58218	Condition	"! zend_parse_arg_path_str ( arg , & str , check_null )"	1150:5:53042:53088	58210	0	True				
ANR	58219	UnaryOperationExpression	"! zend_parse_arg_path_str ( arg , & str , check_null )"		58210	0					
ANR	58220	UnaryOperator	!		58210	0					
ANR	58221	CallExpression	"zend_parse_arg_path_str ( arg , & str , check_null )"		58210	1					
ANR	58222	Callee	zend_parse_arg_path_str		58210	0					
ANR	58223	Identifier	zend_parse_arg_path_str		58210	0					
ANR	58224	ArgumentList	arg		58210	1					
ANR	58225	Argument	arg		58210	0					
ANR	58226	Identifier	arg		58210	0					
ANR	58227	Argument	& str		58210	1					
ANR	58228	UnaryOperationExpression	& str		58210	0					
ANR	58229	UnaryOperator	&		58210	0					
ANR	58230	Identifier	str		58210	1					
ANR	58231	Argument	check_null		58210	2					
ANR	58232	Identifier	check_null		58210	0					
ANR	58233	CompoundStatement		4:54:75:75	58210	1					
ANR	58234	ReturnStatement	return 0 ;	1151:2:53095:53103	58210	0	True				
ANR	58235	PrimaryExpression	0		58210	0					
ANR	58236	IfStatement	if ( check_null && UNEXPECTED ( ! str ) )		58210	2					
ANR	58237	Condition	check_null && UNEXPECTED ( ! str )	1153:5:53113:53142	58210	0	True				
ANR	58238	AndExpression	check_null && UNEXPECTED ( ! str )		58210	0		&&			
ANR	58239	Identifier	check_null		58210	0					
ANR	58240	CallExpression	UNEXPECTED ( ! str )		58210	1					
ANR	58241	Callee	UNEXPECTED		58210	0					
ANR	58242	Identifier	UNEXPECTED		58210	0					
ANR	58243	ArgumentList	! str		58210	1					
ANR	58244	Argument	! str		58210	0					
ANR	58245	UnaryOperationExpression	! str		58210	0					
ANR	58246	UnaryOperator	!		58210	0					
ANR	58247	Identifier	str		58210	1					
ANR	58248	CompoundStatement		7:37:129:129	58210	1					
ANR	58249	ExpressionStatement	* dest = NULL	1154:2:53149:53161	58210	0	True				
ANR	58250	AssignmentExpression	* dest = NULL		58210	0		=			
ANR	58251	UnaryOperationExpression	* dest		58210	0					
ANR	58252	UnaryOperator	*		58210	0					
ANR	58253	Identifier	dest		58210	1					
ANR	58254	Identifier	NULL		58210	1					
ANR	58255	ExpressionStatement	* dest_len = 0	1155:2:53165:53178	58210	1	True				
ANR	58256	AssignmentExpression	* dest_len = 0		58210	0		=			
ANR	58257	UnaryOperationExpression	* dest_len		58210	0					
ANR	58258	UnaryOperator	*		58210	0					
ANR	58259	Identifier	dest_len		58210	1					
ANR	58260	PrimaryExpression	0		58210	1					
ANR	58261	ElseStatement	else		58210	0					
ANR	58262	CompoundStatement		10:8:172:172	58210	0					
ANR	58263	ExpressionStatement	* dest = ZSTR_VAL ( str )	1157:2:53192:53213	58210	0	True				
ANR	58264	AssignmentExpression	* dest = ZSTR_VAL ( str )		58210	0		=			
ANR	58265	UnaryOperationExpression	* dest		58210	0					
ANR	58266	UnaryOperator	*		58210	0					
ANR	58267	Identifier	dest		58210	1					
ANR	58268	CallExpression	ZSTR_VAL ( str )		58210	1					
ANR	58269	Callee	ZSTR_VAL		58210	0					
ANR	58270	Identifier	ZSTR_VAL		58210	0					
ANR	58271	ArgumentList	str		58210	1					
ANR	58272	Argument	str		58210	0					
ANR	58273	Identifier	str		58210	0					
ANR	58274	ExpressionStatement	* dest_len = ZSTR_LEN ( str )	1158:2:53217:53242	58210	1	True				
ANR	58275	AssignmentExpression	* dest_len = ZSTR_LEN ( str )		58210	0		=			
ANR	58276	UnaryOperationExpression	* dest_len		58210	0					
ANR	58277	UnaryOperator	*		58210	0					
ANR	58278	Identifier	dest_len		58210	1					
ANR	58279	CallExpression	ZSTR_LEN ( str )		58210	1					
ANR	58280	Callee	ZSTR_LEN		58210	0					
ANR	58281	Identifier	ZSTR_LEN		58210	0					
ANR	58282	ArgumentList	str		58210	1					
ANR	58283	Argument	str		58210	0					
ANR	58284	Identifier	str		58210	0					
ANR	58285	ReturnStatement	return 1 ;	1160:1:53248:53256	58210	3	True				
ANR	58286	PrimaryExpression	1		58210	0					
ANR	58287	ReturnType	static zend_always_inline int		58210	1					
ANR	58288	Identifier	zend_parse_arg_path		58210	2					
ANR	58289	ParameterList	"zval * arg , char * * dest , size_t * dest_len , int check_null"		58210	3					
ANR	58290	Parameter	zval * arg	1146:50:52957:52965	58210	0	True				
ANR	58291	ParameterType	zval *		58210	0					
ANR	58292	Identifier	arg		58210	1					
ANR	58293	Parameter	char * * dest	1146:61:52968:52978	58210	1	True				
ANR	58294	ParameterType	char * *		58210	0					
ANR	58295	Identifier	dest		58210	1					
ANR	58296	Parameter	size_t * dest_len	1146:74:52981:52996	58210	2	True				
ANR	58297	ParameterType	size_t *		58210	0					
ANR	58298	Identifier	dest_len		58210	1					
ANR	58299	Parameter	int check_null	1146:92:52999:53012	58210	3	True				
ANR	58300	ParameterType	int		58210	0					
ANR	58301	Identifier	check_null		58210	1					
ANR	58302	CFGEntryNode	ENTRY		58210		True				
ANR	58303	CFGExitNode	EXIT		58210		True				
ANR	58304	Symbol	NULL		58210						
ANR	58305	Symbol	* dest		58210						
ANR	58306	Symbol	check_null		58210						
ANR	58307	Symbol	dest		58210						
ANR	58308	Symbol	dest_len		58210						
ANR	58309	Symbol	ZSTR_VAL		58210						
ANR	58310	Symbol	str		58210						
ANR	58311	Symbol	& str		58210						
ANR	58312	Symbol	UNEXPECTED		58210						
ANR	58313	Symbol	zend_parse_arg_path_str		58210						
ANR	58314	Symbol	arg		58210						
ANR	58315	Symbol	ZSTR_LEN		58210						
ANR	58316	Symbol	* dest_len		58210						
ANR	58317	Function	zend_parse_arg_array	1163:0:53261:53601							
ANR	58318	FunctionDef	"zend_parse_arg_array (zval * arg , zval * * dest , int check_null , int or_object)"		58317	0					
ANR	58319	CompoundStatement		1164:0:53367:53601	58317	0					
ANR	58320	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) || ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) ) )		58317	0					
ANR	58321	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) || ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) )	1165:5:53374:53465	58317	0	True				
ANR	58322	OrExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) || ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) )		58317	0		||			
ANR	58323	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY )		58317	0					
ANR	58324	Callee	EXPECTED		58317	0					
ANR	58325	Identifier	EXPECTED		58317	0					
ANR	58326	ArgumentList	Z_TYPE_P ( arg ) == IS_ARRAY		58317	1					
ANR	58327	Argument	Z_TYPE_P ( arg ) == IS_ARRAY		58317	0					
ANR	58328	EqualityExpression	Z_TYPE_P ( arg ) == IS_ARRAY		58317	0		==			
ANR	58329	CallExpression	Z_TYPE_P ( arg )		58317	0					
ANR	58330	Callee	Z_TYPE_P		58317	0					
ANR	58331	Identifier	Z_TYPE_P		58317	0					
ANR	58332	ArgumentList	arg		58317	1					
ANR	58333	Argument	arg		58317	0					
ANR	58334	Identifier	arg		58317	0					
ANR	58335	Identifier	IS_ARRAY		58317	1					
ANR	58336	AndExpression	or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		58317	1		&&			
ANR	58337	Identifier	or_object		58317	0					
ANR	58338	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		58317	1					
ANR	58339	Callee	EXPECTED		58317	0					
ANR	58340	Identifier	EXPECTED		58317	0					
ANR	58341	ArgumentList	Z_TYPE_P ( arg ) == IS_OBJECT		58317	1					
ANR	58342	Argument	Z_TYPE_P ( arg ) == IS_OBJECT		58317	0					
ANR	58343	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		58317	0		==			
ANR	58344	CallExpression	Z_TYPE_P ( arg )		58317	0					
ANR	58345	Callee	Z_TYPE_P		58317	0					
ANR	58346	Identifier	Z_TYPE_P		58317	0					
ANR	58347	ArgumentList	arg		58317	1					
ANR	58348	Argument	arg		58317	0					
ANR	58349	Identifier	arg		58317	0					
ANR	58350	Identifier	IS_OBJECT		58317	1					
ANR	58351	CompoundStatement		3:55:100:100	58317	1					
ANR	58352	ExpressionStatement	* dest = arg	1167:2:53472:53483	58317	0	True				
ANR	58353	AssignmentExpression	* dest = arg		58317	0		=			
ANR	58354	UnaryOperationExpression	* dest		58317	0					
ANR	58355	UnaryOperator	*		58317	0					
ANR	58356	Identifier	dest		58317	1					
ANR	58357	Identifier	arg		58317	1					
ANR	58358	ElseStatement	else		58317	0					
ANR	58359	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		58317	0					
ANR	58360	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1168:12:53497:53544	58317	0	True				
ANR	58361	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58317	0		&&			
ANR	58362	Identifier	check_null		58317	0					
ANR	58363	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58317	1					
ANR	58364	Callee	EXPECTED		58317	0					
ANR	58365	Identifier	EXPECTED		58317	0					
ANR	58366	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		58317	1					
ANR	58367	Argument	Z_TYPE_P ( arg ) == IS_NULL		58317	0					
ANR	58368	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		58317	0		==			
ANR	58369	CallExpression	Z_TYPE_P ( arg )		58317	0					
ANR	58370	Callee	Z_TYPE_P		58317	0					
ANR	58371	Identifier	Z_TYPE_P		58317	0					
ANR	58372	ArgumentList	arg		58317	1					
ANR	58373	Argument	arg		58317	0					
ANR	58374	Identifier	arg		58317	0					
ANR	58375	Identifier	IS_NULL		58317	1					
ANR	58376	CompoundStatement		5:62:179:179	58317	1					
ANR	58377	ExpressionStatement	* dest = NULL	1169:2:53551:53563	58317	0	True				
ANR	58378	AssignmentExpression	* dest = NULL		58317	0		=			
ANR	58379	UnaryOperationExpression	* dest		58317	0					
ANR	58380	UnaryOperator	*		58317	0					
ANR	58381	Identifier	dest		58317	1					
ANR	58382	Identifier	NULL		58317	1					
ANR	58383	ElseStatement	else		58317	0					
ANR	58384	CompoundStatement		7:8:205:205	58317	0					
ANR	58385	ReturnStatement	return 0 ;	1171:2:53577:53585	58317	0	True				
ANR	58386	PrimaryExpression	0		58317	0					
ANR	58387	ReturnStatement	return 1 ;	1173:1:53591:53599	58317	1	True				
ANR	58388	PrimaryExpression	1		58317	0					
ANR	58389	ReturnType	static zend_always_inline int		58317	1					
ANR	58390	Identifier	zend_parse_arg_array		58317	2					
ANR	58391	ParameterList	"zval * arg , zval * * dest , int check_null , int or_object"		58317	3					
ANR	58392	Parameter	zval * arg	1163:51:53312:53320	58317	0	True				
ANR	58393	ParameterType	zval *		58317	0					
ANR	58394	Identifier	arg		58317	1					
ANR	58395	Parameter	zval * * dest	1163:62:53323:53333	58317	1	True				
ANR	58396	ParameterType	zval * *		58317	0					
ANR	58397	Identifier	dest		58317	1					
ANR	58398	Parameter	int check_null	1163:75:53336:53349	58317	2	True				
ANR	58399	ParameterType	int		58317	0					
ANR	58400	Identifier	check_null		58317	1					
ANR	58401	Parameter	int or_object	1163:91:53352:53364	58317	3	True				
ANR	58402	ParameterType	int		58317	0					
ANR	58403	Identifier	or_object		58317	1					
ANR	58404	CFGEntryNode	ENTRY		58317		True				
ANR	58405	CFGExitNode	EXIT		58317		True				
ANR	58406	Symbol	NULL		58317						
ANR	58407	Symbol	IS_NULL		58317						
ANR	58408	Symbol	IS_ARRAY		58317						
ANR	58409	Symbol	* dest		58317						
ANR	58410	Symbol	check_null		58317						
ANR	58411	Symbol	arg		58317						
ANR	58412	Symbol	or_object		58317						
ANR	58413	Symbol	dest		58317						
ANR	58414	Symbol	IS_OBJECT		58317						
ANR	58415	Symbol	Z_TYPE_P		58317						
ANR	58416	Symbol	EXPECTED		58317						
ANR	58417	Function	zend_parse_arg_array_ht	1176:0:53604:54020							
ANR	58418	FunctionDef	"zend_parse_arg_array_ht (zval * arg , HashTable * * dest , int check_null , int or_object)"		58417	0					
ANR	58419	CompoundStatement		1177:0:53718:54020	58417	0					
ANR	58420	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) )		58417	0					
ANR	58421	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY )	1178:5:53725:53759	58417	0	True				
ANR	58422	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY )		58417	0					
ANR	58423	Callee	EXPECTED		58417	0					
ANR	58424	Identifier	EXPECTED		58417	0					
ANR	58425	ArgumentList	Z_TYPE_P ( arg ) == IS_ARRAY		58417	1					
ANR	58426	Argument	Z_TYPE_P ( arg ) == IS_ARRAY		58417	0					
ANR	58427	EqualityExpression	Z_TYPE_P ( arg ) == IS_ARRAY		58417	0		==			
ANR	58428	CallExpression	Z_TYPE_P ( arg )		58417	0					
ANR	58429	Callee	Z_TYPE_P		58417	0					
ANR	58430	Identifier	Z_TYPE_P		58417	0					
ANR	58431	ArgumentList	arg		58417	1					
ANR	58432	Argument	arg		58417	0					
ANR	58433	Identifier	arg		58417	0					
ANR	58434	Identifier	IS_ARRAY		58417	1					
ANR	58435	CompoundStatement		2:42:43:43	58417	1					
ANR	58436	ExpressionStatement	* dest = Z_ARRVAL_P ( arg )	1179:2:53766:53789	58417	0	True				
ANR	58437	AssignmentExpression	* dest = Z_ARRVAL_P ( arg )		58417	0		=			
ANR	58438	UnaryOperationExpression	* dest		58417	0					
ANR	58439	UnaryOperator	*		58417	0					
ANR	58440	Identifier	dest		58417	1					
ANR	58441	CallExpression	Z_ARRVAL_P ( arg )		58417	1					
ANR	58442	Callee	Z_ARRVAL_P		58417	0					
ANR	58443	Identifier	Z_ARRVAL_P		58417	0					
ANR	58444	ArgumentList	arg		58417	1					
ANR	58445	Argument	arg		58417	0					
ANR	58446	Identifier	arg		58417	0					
ANR	58447	ElseStatement	else		58417	0					
ANR	58448	IfStatement	if ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) )		58417	0					
ANR	58449	Condition	or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )	1180:12:53803:53851	58417	0	True				
ANR	58450	AndExpression	or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		58417	0		&&			
ANR	58451	Identifier	or_object		58417	0					
ANR	58452	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		58417	1					
ANR	58453	Callee	EXPECTED		58417	0					
ANR	58454	Identifier	EXPECTED		58417	0					
ANR	58455	ArgumentList	Z_TYPE_P ( arg ) == IS_OBJECT		58417	1					
ANR	58456	Argument	Z_TYPE_P ( arg ) == IS_OBJECT		58417	0					
ANR	58457	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		58417	0		==			
ANR	58458	CallExpression	Z_TYPE_P ( arg )		58417	0					
ANR	58459	Callee	Z_TYPE_P		58417	0					
ANR	58460	Identifier	Z_TYPE_P		58417	0					
ANR	58461	ArgumentList	arg		58417	1					
ANR	58462	Argument	arg		58417	0					
ANR	58463	Identifier	arg		58417	0					
ANR	58464	Identifier	IS_OBJECT		58417	1					
ANR	58465	CompoundStatement		4:63:135:135	58417	1					
ANR	58466	ExpressionStatement	* dest = Z_OBJ_HT_P ( arg ) -> get_properties ( arg )	1181:2:53858:53902	58417	0	True				
ANR	58467	AssignmentExpression	* dest = Z_OBJ_HT_P ( arg ) -> get_properties ( arg )		58417	0		=			
ANR	58468	UnaryOperationExpression	* dest		58417	0					
ANR	58469	UnaryOperator	*		58417	0					
ANR	58470	Identifier	dest		58417	1					
ANR	58471	CallExpression	Z_OBJ_HT_P ( arg ) -> get_properties ( arg )		58417	1					
ANR	58472	Callee	Z_OBJ_HT_P ( arg ) -> get_properties		58417	0					
ANR	58473	PtrMemberAccess	Z_OBJ_HT_P ( arg ) -> get_properties		58417	0					
ANR	58474	CallExpression	Z_OBJ_HT_P ( arg )		58417	0					
ANR	58475	Callee	Z_OBJ_HT_P		58417	0					
ANR	58476	Identifier	Z_OBJ_HT_P		58417	0					
ANR	58477	ArgumentList	arg		58417	1					
ANR	58478	Argument	arg		58417	0					
ANR	58479	Identifier	arg		58417	0					
ANR	58480	Identifier	get_properties		58417	1					
ANR	58481	ArgumentList	arg		58417	1					
ANR	58482	Argument	arg		58417	0					
ANR	58483	Identifier	arg		58417	0					
ANR	58484	ElseStatement	else		58417	0					
ANR	58485	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		58417	0					
ANR	58486	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1182:12:53916:53963	58417	0	True				
ANR	58487	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58417	0		&&			
ANR	58488	Identifier	check_null		58417	0					
ANR	58489	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58417	1					
ANR	58490	Callee	EXPECTED		58417	0					
ANR	58491	Identifier	EXPECTED		58417	0					
ANR	58492	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		58417	1					
ANR	58493	Argument	Z_TYPE_P ( arg ) == IS_NULL		58417	0					
ANR	58494	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		58417	0		==			
ANR	58495	CallExpression	Z_TYPE_P ( arg )		58417	0					
ANR	58496	Callee	Z_TYPE_P		58417	0					
ANR	58497	Identifier	Z_TYPE_P		58417	0					
ANR	58498	ArgumentList	arg		58417	1					
ANR	58499	Argument	arg		58417	0					
ANR	58500	Identifier	arg		58417	0					
ANR	58501	Identifier	IS_NULL		58417	1					
ANR	58502	CompoundStatement		6:62:247:247	58417	1					
ANR	58503	ExpressionStatement	* dest = NULL	1183:2:53970:53982	58417	0	True				
ANR	58504	AssignmentExpression	* dest = NULL		58417	0		=			
ANR	58505	UnaryOperationExpression	* dest		58417	0					
ANR	58506	UnaryOperator	*		58417	0					
ANR	58507	Identifier	dest		58417	1					
ANR	58508	Identifier	NULL		58417	1					
ANR	58509	ElseStatement	else		58417	0					
ANR	58510	CompoundStatement		8:8:273:273	58417	0					
ANR	58511	ReturnStatement	return 0 ;	1185:2:53996:54004	58417	0	True				
ANR	58512	PrimaryExpression	0		58417	0					
ANR	58513	ReturnStatement	return 1 ;	1187:1:54010:54018	58417	1	True				
ANR	58514	PrimaryExpression	1		58417	0					
ANR	58515	ReturnType	static zend_always_inline int		58417	1					
ANR	58516	Identifier	zend_parse_arg_array_ht		58417	2					
ANR	58517	ParameterList	"zval * arg , HashTable * * dest , int check_null , int or_object"		58417	3					
ANR	58518	Parameter	zval * arg	1176:54:53658:53666	58417	0	True				
ANR	58519	ParameterType	zval *		58417	0					
ANR	58520	Identifier	arg		58417	1					
ANR	58521	Parameter	HashTable * * dest	1176:65:53669:53684	58417	1	True				
ANR	58522	ParameterType	HashTable * *		58417	0					
ANR	58523	Identifier	dest		58417	1					
ANR	58524	Parameter	int check_null	1176:83:53687:53700	58417	2	True				
ANR	58525	ParameterType	int		58417	0					
ANR	58526	Identifier	check_null		58417	1					
ANR	58527	Parameter	int or_object	1176:99:53703:53715	58417	3	True				
ANR	58528	ParameterType	int		58417	0					
ANR	58529	Identifier	or_object		58417	1					
ANR	58530	CFGEntryNode	ENTRY		58417		True				
ANR	58531	CFGExitNode	EXIT		58417		True				
ANR	58532	Symbol	NULL		58417						
ANR	58533	Symbol	* dest		58417						
ANR	58534	Symbol	Z_OBJ_HT_P ( arg ) -> get_properties		58417						
ANR	58535	Symbol	check_null		58417						
ANR	58536	Symbol	dest		58417						
ANR	58537	Symbol	Z_TYPE_P		58417						
ANR	58538	Symbol	* Z_OBJ_HT_P		58417						
ANR	58539	Symbol	IS_NULL		58417						
ANR	58540	Symbol	IS_ARRAY		58417						
ANR	58541	Symbol	arg		58417						
ANR	58542	Symbol	Z_OBJ_HT_P		58417						
ANR	58543	Symbol	or_object		58417						
ANR	58544	Symbol	Z_ARRVAL_P		58417						
ANR	58545	Symbol	IS_OBJECT		58417						
ANR	58546	Symbol	EXPECTED		58417						
ANR	58547	Function	zend_parse_arg_object	1190:0:54023:54387							
ANR	58548	FunctionDef	"zend_parse_arg_object (zval * arg , zval * * dest , zend_class_entry * ce , int check_null)"		58547	0					
ANR	58549	CompoundStatement		1191:0:54137:54387	58547	0					
ANR	58550	IfStatement	"if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) && ( ! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 ) ) )"		58547	0					
ANR	58551	Condition	"EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) && ( ! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 ) )"	1192:5:54144:54251	58547	0	True				
ANR	58552	AndExpression	"EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) && ( ! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 ) )"		58547	0		&&			
ANR	58553	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		58547	0					
ANR	58554	Callee	EXPECTED		58547	0					
ANR	58555	Identifier	EXPECTED		58547	0					
ANR	58556	ArgumentList	Z_TYPE_P ( arg ) == IS_OBJECT		58547	1					
ANR	58557	Argument	Z_TYPE_P ( arg ) == IS_OBJECT		58547	0					
ANR	58558	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		58547	0		==			
ANR	58559	CallExpression	Z_TYPE_P ( arg )		58547	0					
ANR	58560	Callee	Z_TYPE_P		58547	0					
ANR	58561	Identifier	Z_TYPE_P		58547	0					
ANR	58562	ArgumentList	arg		58547	1					
ANR	58563	Argument	arg		58547	0					
ANR	58564	Identifier	arg		58547	0					
ANR	58565	Identifier	IS_OBJECT		58547	1					
ANR	58566	OrExpression	"! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 )"		58547	1		||			
ANR	58567	UnaryOperationExpression	! ce		58547	0					
ANR	58568	UnaryOperator	!		58547	0					
ANR	58569	Identifier	ce		58547	1					
ANR	58570	CallExpression	"EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 )"		58547	1					
ANR	58571	Callee	EXPECTED		58547	0					
ANR	58572	Identifier	EXPECTED		58547	0					
ANR	58573	ArgumentList	"instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0"		58547	1					
ANR	58574	Argument	"instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0"		58547	0					
ANR	58575	EqualityExpression	"instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0"		58547	0		!=			
ANR	58576	CallExpression	"instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		58547	0					
ANR	58577	Callee	instanceof_function		58547	0					
ANR	58578	Identifier	instanceof_function		58547	0					
ANR	58579	ArgumentList	Z_OBJCE_P ( arg )		58547	1					
ANR	58580	Argument	Z_OBJCE_P ( arg )		58547	0					
ANR	58581	CallExpression	Z_OBJCE_P ( arg )		58547	0					
ANR	58582	Callee	Z_OBJCE_P		58547	0					
ANR	58583	Identifier	Z_OBJCE_P		58547	0					
ANR	58584	ArgumentList	arg		58547	1					
ANR	58585	Argument	arg		58547	0					
ANR	58586	Identifier	arg		58547	0					
ANR	58587	Argument	ce		58547	1					
ANR	58588	Identifier	ce		58547	0					
ANR	58589	PrimaryExpression	0		58547	1					
ANR	58590	CompoundStatement		3:70:116:116	58547	1					
ANR	58591	ExpressionStatement	* dest = arg	1194:2:54258:54269	58547	0	True				
ANR	58592	AssignmentExpression	* dest = arg		58547	0		=			
ANR	58593	UnaryOperationExpression	* dest		58547	0					
ANR	58594	UnaryOperator	*		58547	0					
ANR	58595	Identifier	dest		58547	1					
ANR	58596	Identifier	arg		58547	1					
ANR	58597	ElseStatement	else		58547	0					
ANR	58598	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		58547	0					
ANR	58599	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1195:12:54283:54330	58547	0	True				
ANR	58600	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58547	0		&&			
ANR	58601	Identifier	check_null		58547	0					
ANR	58602	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58547	1					
ANR	58603	Callee	EXPECTED		58547	0					
ANR	58604	Identifier	EXPECTED		58547	0					
ANR	58605	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		58547	1					
ANR	58606	Argument	Z_TYPE_P ( arg ) == IS_NULL		58547	0					
ANR	58607	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		58547	0		==			
ANR	58608	CallExpression	Z_TYPE_P ( arg )		58547	0					
ANR	58609	Callee	Z_TYPE_P		58547	0					
ANR	58610	Identifier	Z_TYPE_P		58547	0					
ANR	58611	ArgumentList	arg		58547	1					
ANR	58612	Argument	arg		58547	0					
ANR	58613	Identifier	arg		58547	0					
ANR	58614	Identifier	IS_NULL		58547	1					
ANR	58615	CompoundStatement		5:62:195:195	58547	1					
ANR	58616	ExpressionStatement	* dest = NULL	1196:2:54337:54349	58547	0	True				
ANR	58617	AssignmentExpression	* dest = NULL		58547	0		=			
ANR	58618	UnaryOperationExpression	* dest		58547	0					
ANR	58619	UnaryOperator	*		58547	0					
ANR	58620	Identifier	dest		58547	1					
ANR	58621	Identifier	NULL		58547	1					
ANR	58622	ElseStatement	else		58547	0					
ANR	58623	CompoundStatement		7:8:221:221	58547	0					
ANR	58624	ReturnStatement	return 0 ;	1198:2:54363:54371	58547	0	True				
ANR	58625	PrimaryExpression	0		58547	0					
ANR	58626	ReturnStatement	return 1 ;	1200:1:54377:54385	58547	1	True				
ANR	58627	PrimaryExpression	1		58547	0					
ANR	58628	ReturnType	static zend_always_inline int		58547	1					
ANR	58629	Identifier	zend_parse_arg_object		58547	2					
ANR	58630	ParameterList	"zval * arg , zval * * dest , zend_class_entry * ce , int check_null"		58547	3					
ANR	58631	Parameter	zval * arg	1190:52:54075:54083	58547	0	True				
ANR	58632	ParameterType	zval *		58547	0					
ANR	58633	Identifier	arg		58547	1					
ANR	58634	Parameter	zval * * dest	1190:63:54086:54096	58547	1	True				
ANR	58635	ParameterType	zval * *		58547	0					
ANR	58636	Identifier	dest		58547	1					
ANR	58637	Parameter	zend_class_entry * ce	1190:76:54099:54118	58547	2	True				
ANR	58638	ParameterType	zend_class_entry *		58547	0					
ANR	58639	Identifier	ce		58547	1					
ANR	58640	Parameter	int check_null	1190:98:54121:54134	58547	3	True				
ANR	58641	ParameterType	int		58547	0					
ANR	58642	Identifier	check_null		58547	1					
ANR	58643	CFGEntryNode	ENTRY		58547		True				
ANR	58644	CFGExitNode	EXIT		58547		True				
ANR	58645	Symbol	instanceof_function		58547						
ANR	58646	Symbol	ce		58547						
ANR	58647	Symbol	NULL		58547						
ANR	58648	Symbol	IS_NULL		58547						
ANR	58649	Symbol	* dest		58547						
ANR	58650	Symbol	check_null		58547						
ANR	58651	Symbol	arg		58547						
ANR	58652	Symbol	Z_OBJCE_P		58547						
ANR	58653	Symbol	dest		58547						
ANR	58654	Symbol	IS_OBJECT		58547						
ANR	58655	Symbol	Z_TYPE_P		58547						
ANR	58656	Symbol	EXPECTED		58547						
ANR	58657	Function	zend_parse_arg_resource	1203:0:54390:54664							
ANR	58658	FunctionDef	"zend_parse_arg_resource (zval * arg , zval * * dest , int check_null)"		58657	0					
ANR	58659	CompoundStatement		1204:0:54484:54664	58657	0					
ANR	58660	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_RESOURCE ) )		58657	0					
ANR	58661	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_RESOURCE )	1205:5:54491:54528	58657	0	True				
ANR	58662	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_RESOURCE )		58657	0					
ANR	58663	Callee	EXPECTED		58657	0					
ANR	58664	Identifier	EXPECTED		58657	0					
ANR	58665	ArgumentList	Z_TYPE_P ( arg ) == IS_RESOURCE		58657	1					
ANR	58666	Argument	Z_TYPE_P ( arg ) == IS_RESOURCE		58657	0					
ANR	58667	EqualityExpression	Z_TYPE_P ( arg ) == IS_RESOURCE		58657	0		==			
ANR	58668	CallExpression	Z_TYPE_P ( arg )		58657	0					
ANR	58669	Callee	Z_TYPE_P		58657	0					
ANR	58670	Identifier	Z_TYPE_P		58657	0					
ANR	58671	ArgumentList	arg		58657	1					
ANR	58672	Argument	arg		58657	0					
ANR	58673	Identifier	arg		58657	0					
ANR	58674	Identifier	IS_RESOURCE		58657	1					
ANR	58675	CompoundStatement		2:45:46:46	58657	1					
ANR	58676	ExpressionStatement	* dest = arg	1206:2:54535:54546	58657	0	True				
ANR	58677	AssignmentExpression	* dest = arg		58657	0		=			
ANR	58678	UnaryOperationExpression	* dest		58657	0					
ANR	58679	UnaryOperator	*		58657	0					
ANR	58680	Identifier	dest		58657	1					
ANR	58681	Identifier	arg		58657	1					
ANR	58682	ElseStatement	else		58657	0					
ANR	58683	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		58657	0					
ANR	58684	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1207:12:54560:54607	58657	0	True				
ANR	58685	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58657	0		&&			
ANR	58686	Identifier	check_null		58657	0					
ANR	58687	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58657	1					
ANR	58688	Callee	EXPECTED		58657	0					
ANR	58689	Identifier	EXPECTED		58657	0					
ANR	58690	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		58657	1					
ANR	58691	Argument	Z_TYPE_P ( arg ) == IS_NULL		58657	0					
ANR	58692	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		58657	0		==			
ANR	58693	CallExpression	Z_TYPE_P ( arg )		58657	0					
ANR	58694	Callee	Z_TYPE_P		58657	0					
ANR	58695	Identifier	Z_TYPE_P		58657	0					
ANR	58696	ArgumentList	arg		58657	1					
ANR	58697	Argument	arg		58657	0					
ANR	58698	Identifier	arg		58657	0					
ANR	58699	Identifier	IS_NULL		58657	1					
ANR	58700	CompoundStatement		4:62:125:125	58657	1					
ANR	58701	ExpressionStatement	* dest = NULL	1208:2:54614:54626	58657	0	True				
ANR	58702	AssignmentExpression	* dest = NULL		58657	0		=			
ANR	58703	UnaryOperationExpression	* dest		58657	0					
ANR	58704	UnaryOperator	*		58657	0					
ANR	58705	Identifier	dest		58657	1					
ANR	58706	Identifier	NULL		58657	1					
ANR	58707	ElseStatement	else		58657	0					
ANR	58708	CompoundStatement		6:8:151:151	58657	0					
ANR	58709	ReturnStatement	return 0 ;	1210:2:54640:54648	58657	0	True				
ANR	58710	PrimaryExpression	0		58657	0					
ANR	58711	ReturnStatement	return 1 ;	1212:1:54654:54662	58657	1	True				
ANR	58712	PrimaryExpression	1		58657	0					
ANR	58713	ReturnType	static zend_always_inline int		58657	1					
ANR	58714	Identifier	zend_parse_arg_resource		58657	2					
ANR	58715	ParameterList	"zval * arg , zval * * dest , int check_null"		58657	3					
ANR	58716	Parameter	zval * arg	1203:54:54444:54452	58657	0	True				
ANR	58717	ParameterType	zval *		58657	0					
ANR	58718	Identifier	arg		58657	1					
ANR	58719	Parameter	zval * * dest	1203:65:54455:54465	58657	1	True				
ANR	58720	ParameterType	zval * *		58657	0					
ANR	58721	Identifier	dest		58657	1					
ANR	58722	Parameter	int check_null	1203:78:54468:54481	58657	2	True				
ANR	58723	ParameterType	int		58657	0					
ANR	58724	Identifier	check_null		58657	1					
ANR	58725	CFGEntryNode	ENTRY		58657		True				
ANR	58726	CFGExitNode	EXIT		58657		True				
ANR	58727	Symbol	NULL		58657						
ANR	58728	Symbol	IS_NULL		58657						
ANR	58729	Symbol	* dest		58657						
ANR	58730	Symbol	check_null		58657						
ANR	58731	Symbol	arg		58657						
ANR	58732	Symbol	dest		58657						
ANR	58733	Symbol	Z_TYPE_P		58657						
ANR	58734	Symbol	EXPECTED		58657						
ANR	58735	Symbol	IS_RESOURCE		58657						
ANR	58736	Function	zend_parse_arg_func	1215:0:54667:55073							
ANR	58737	FunctionDef	"zend_parse_arg_func (zval * arg , zend_fcall_info * dest_fci , zend_fcall_info_cache * dest_fcc , int check_null , char * * error)"		58736	0					
ANR	58738	CompoundStatement		1216:0:54818:55073	58736	0					
ANR	58739	IfStatement	if ( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		58736	0					
ANR	58740	Condition	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1217:5:54825:54874	58736	0	True				
ANR	58741	AndExpression	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58736	0		&&			
ANR	58742	Identifier	check_null		58736	0					
ANR	58743	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58736	1					
ANR	58744	Callee	UNEXPECTED		58736	0					
ANR	58745	Identifier	UNEXPECTED		58736	0					
ANR	58746	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		58736	1					
ANR	58747	Argument	Z_TYPE_P ( arg ) == IS_NULL		58736	0					
ANR	58748	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		58736	0		==			
ANR	58749	CallExpression	Z_TYPE_P ( arg )		58736	0					
ANR	58750	Callee	Z_TYPE_P		58736	0					
ANR	58751	Identifier	Z_TYPE_P		58736	0					
ANR	58752	ArgumentList	arg		58736	1					
ANR	58753	Argument	arg		58736	0					
ANR	58754	Identifier	arg		58736	0					
ANR	58755	Identifier	IS_NULL		58736	1					
ANR	58756	CompoundStatement		2:57:58:58	58736	1					
ANR	58757	ExpressionStatement	dest_fci -> size = 0	1218:2:54881:54899	58736	0	True				
ANR	58758	AssignmentExpression	dest_fci -> size = 0		58736	0		=			
ANR	58759	PtrMemberAccess	dest_fci -> size		58736	0					
ANR	58760	Identifier	dest_fci		58736	0					
ANR	58761	Identifier	size		58736	1					
ANR	58762	PrimaryExpression	0		58736	1					
ANR	58763	ExpressionStatement	dest_fcc -> initialized = 0	1219:2:54903:54928	58736	1	True				
ANR	58764	AssignmentExpression	dest_fcc -> initialized = 0		58736	0		=			
ANR	58765	PtrMemberAccess	dest_fcc -> initialized		58736	0					
ANR	58766	Identifier	dest_fcc		58736	0					
ANR	58767	Identifier	initialized		58736	1					
ANR	58768	PrimaryExpression	0		58736	1					
ANR	58769	ExpressionStatement	* error = NULL	1220:2:54932:54945	58736	2	True				
ANR	58770	AssignmentExpression	* error = NULL		58736	0		=			
ANR	58771	UnaryOperationExpression	* error		58736	0					
ANR	58772	UnaryOperator	*		58736	0					
ANR	58773	Identifier	error		58736	1					
ANR	58774	Identifier	NULL		58736	1					
ANR	58775	ElseStatement	else		58736	0					
ANR	58776	IfStatement	"if ( UNEXPECTED ( zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS ) )"		58736	0					
ANR	58777	Condition	"UNEXPECTED ( zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS )"	1221:12:54959:55042	58736	0	True				
ANR	58778	CallExpression	"UNEXPECTED ( zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS )"		58736	0					
ANR	58779	Callee	UNEXPECTED		58736	0					
ANR	58780	Identifier	UNEXPECTED		58736	0					
ANR	58781	ArgumentList	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS"		58736	1					
ANR	58782	Argument	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS"		58736	0					
ANR	58783	EqualityExpression	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS"		58736	0		!=			
ANR	58784	CallExpression	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error )"		58736	0					
ANR	58785	Callee	zend_fcall_info_init		58736	0					
ANR	58786	Identifier	zend_fcall_info_init		58736	0					
ANR	58787	ArgumentList	arg		58736	1					
ANR	58788	Argument	arg		58736	0					
ANR	58789	Identifier	arg		58736	0					
ANR	58790	Argument	0		58736	1					
ANR	58791	PrimaryExpression	0		58736	0					
ANR	58792	Argument	dest_fci		58736	2					
ANR	58793	Identifier	dest_fci		58736	0					
ANR	58794	Argument	dest_fcc		58736	3					
ANR	58795	Identifier	dest_fcc		58736	0					
ANR	58796	Argument	NULL		58736	4					
ANR	58797	Identifier	NULL		58736	0					
ANR	58798	Argument	error		58736	5					
ANR	58799	Identifier	error		58736	0					
ANR	58800	Identifier	SUCCESS		58736	1					
ANR	58801	CompoundStatement		6:98:226:226	58736	1					
ANR	58802	ReturnStatement	return 0 ;	1222:2:55049:55057	58736	0	True				
ANR	58803	PrimaryExpression	0		58736	0					
ANR	58804	ReturnStatement	return 1 ;	1224:1:55063:55071	58736	1	True				
ANR	58805	PrimaryExpression	1		58736	0					
ANR	58806	ReturnType	static zend_always_inline int		58736	1					
ANR	58807	Identifier	zend_parse_arg_func		58736	2					
ANR	58808	ParameterList	"zval * arg , zend_fcall_info * dest_fci , zend_fcall_info_cache * dest_fcc , int check_null , char * * error"		58736	3					
ANR	58809	Parameter	zval * arg	1215:50:54717:54725	58736	0	True				
ANR	58810	ParameterType	zval *		58736	0					
ANR	58811	Identifier	arg		58736	1					
ANR	58812	Parameter	zend_fcall_info * dest_fci	1215:61:54728:54752	58736	1	True				
ANR	58813	ParameterType	zend_fcall_info *		58736	0					
ANR	58814	Identifier	dest_fci		58736	1					
ANR	58815	Parameter	zend_fcall_info_cache * dest_fcc	1215:88:54755:54785	58736	2	True				
ANR	58816	ParameterType	zend_fcall_info_cache *		58736	0					
ANR	58817	Identifier	dest_fcc		58736	1					
ANR	58818	Parameter	int check_null	1215:121:54788:54801	58736	3	True				
ANR	58819	ParameterType	int		58736	0					
ANR	58820	Identifier	check_null		58736	1					
ANR	58821	Parameter	char * * error	1215:137:54804:54815	58736	4	True				
ANR	58822	ParameterType	char * *		58736	0					
ANR	58823	Identifier	error		58736	1					
ANR	58824	CFGEntryNode	ENTRY		58736		True				
ANR	58825	CFGExitNode	EXIT		58736		True				
ANR	58826	Symbol	NULL		58736						
ANR	58827	Symbol	SUCCESS		58736						
ANR	58828	Symbol	zend_fcall_info_init		58736						
ANR	58829	Symbol	check_null		58736						
ANR	58830	Symbol	error		58736						
ANR	58831	Symbol	Z_TYPE_P		58736						
ANR	58832	Symbol	dest_fci -> size		58736						
ANR	58833	Symbol	* dest_fcc		58736						
ANR	58834	Symbol	UNEXPECTED		58736						
ANR	58835	Symbol	IS_NULL		58736						
ANR	58836	Symbol	dest_fcc -> initialized		58736						
ANR	58837	Symbol	arg		58736						
ANR	58838	Symbol	* dest_fci		58736						
ANR	58839	Symbol	* error		58736						
ANR	58840	Symbol	dest_fci		58736						
ANR	58841	Symbol	dest_fcc		58736						
ANR	58842	Function	zend_parse_arg_zval	1227:0:55076:55349							
ANR	58843	FunctionDef	"zend_parse_arg_zval (zval * arg , zval * * dest , int check_null)"		58842	0					
ANR	58844	CompoundStatement		1228:0:55167:55349	58842	0					
ANR	58845	ExpressionStatement	* dest = ( check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) ) ) ? NULL : arg	1229:1:55170:55347	58842	0	True				
ANR	58846	AssignmentExpression	* dest = ( check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) ) ) ? NULL : arg		58842	0		=			
ANR	58847	UnaryOperationExpression	* dest		58842	0					
ANR	58848	UnaryOperator	*		58842	0					
ANR	58849	Identifier	dest		58842	1					
ANR	58850	ConditionalExpression	( check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) ) ) ? NULL : arg		58842	1					
ANR	58851	Condition	check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) )		58842	0					
ANR	58852	AndExpression	check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) )		58842	0		&&			
ANR	58853	Identifier	check_null		58842	0					
ANR	58854	OrExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) )		58842	1		||			
ANR	58855	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58842	0					
ANR	58856	Callee	UNEXPECTED		58842	0					
ANR	58857	Identifier	UNEXPECTED		58842	0					
ANR	58858	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		58842	1					
ANR	58859	Argument	Z_TYPE_P ( arg ) == IS_NULL		58842	0					
ANR	58860	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		58842	0		==			
ANR	58861	CallExpression	Z_TYPE_P ( arg )		58842	0					
ANR	58862	Callee	Z_TYPE_P		58842	0					
ANR	58863	Identifier	Z_TYPE_P		58842	0					
ANR	58864	ArgumentList	arg		58842	1					
ANR	58865	Argument	arg		58842	0					
ANR	58866	Identifier	arg		58842	0					
ANR	58867	Identifier	IS_NULL		58842	1					
ANR	58868	AndExpression	UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL )		58842	1		&&			
ANR	58869	CallExpression	UNEXPECTED ( Z_ISREF_P ( arg ) )		58842	0					
ANR	58870	Callee	UNEXPECTED		58842	0					
ANR	58871	Identifier	UNEXPECTED		58842	0					
ANR	58872	ArgumentList	Z_ISREF_P ( arg )		58842	1					
ANR	58873	Argument	Z_ISREF_P ( arg )		58842	0					
ANR	58874	CallExpression	Z_ISREF_P ( arg )		58842	0					
ANR	58875	Callee	Z_ISREF_P		58842	0					
ANR	58876	Identifier	Z_ISREF_P		58842	0					
ANR	58877	ArgumentList	arg		58842	1					
ANR	58878	Argument	arg		58842	0					
ANR	58879	Identifier	arg		58842	0					
ANR	58880	CallExpression	UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL )		58842	1					
ANR	58881	Callee	UNEXPECTED		58842	0					
ANR	58882	Identifier	UNEXPECTED		58842	0					
ANR	58883	ArgumentList	Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL		58842	1					
ANR	58884	Argument	Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL		58842	0					
ANR	58885	EqualityExpression	Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL		58842	0		==			
ANR	58886	CallExpression	Z_TYPE_P ( Z_REFVAL_P ( arg ) )		58842	0					
ANR	58887	Callee	Z_TYPE_P		58842	0					
ANR	58888	Identifier	Z_TYPE_P		58842	0					
ANR	58889	ArgumentList	Z_REFVAL_P ( arg )		58842	1					
ANR	58890	Argument	Z_REFVAL_P ( arg )		58842	0					
ANR	58891	CallExpression	Z_REFVAL_P ( arg )		58842	0					
ANR	58892	Callee	Z_REFVAL_P		58842	0					
ANR	58893	Identifier	Z_REFVAL_P		58842	0					
ANR	58894	ArgumentList	arg		58842	1					
ANR	58895	Argument	arg		58842	0					
ANR	58896	Identifier	arg		58842	0					
ANR	58897	Identifier	IS_NULL		58842	1					
ANR	58898	Identifier	NULL		58842	1					
ANR	58899	Identifier	arg		58842	2					
ANR	58900	ReturnType	static zend_always_inline void		58842	1					
ANR	58901	Identifier	zend_parse_arg_zval		58842	2					
ANR	58902	ParameterList	"zval * arg , zval * * dest , int check_null"		58842	3					
ANR	58903	Parameter	zval * arg	1227:51:55127:55135	58842	0	True				
ANR	58904	ParameterType	zval *		58842	0					
ANR	58905	Identifier	arg		58842	1					
ANR	58906	Parameter	zval * * dest	1227:62:55138:55148	58842	1	True				
ANR	58907	ParameterType	zval * *		58842	0					
ANR	58908	Identifier	dest		58842	1					
ANR	58909	Parameter	int check_null	1227:75:55151:55164	58842	2	True				
ANR	58910	ParameterType	int		58842	0					
ANR	58911	Identifier	check_null		58842	1					
ANR	58912	CFGEntryNode	ENTRY		58842		True				
ANR	58913	CFGExitNode	EXIT		58842		True				
ANR	58914	Symbol	UNEXPECTED		58842						
ANR	58915	Symbol	NULL		58842						
ANR	58916	Symbol	IS_NULL		58842						
ANR	58917	Symbol	* dest		58842						
ANR	58918	Symbol	check_null		58842						
ANR	58919	Symbol	arg		58842						
ANR	58920	Symbol	Z_REFVAL_P		58842						
ANR	58921	Symbol	dest		58842						
ANR	58922	Symbol	Z_TYPE_P		58842						
ANR	58923	Symbol	Z_ISREF_P		58842						
ANR	58924	Function	zend_parse_arg_zval_deref	1235:0:55352:55527							
ANR	58925	FunctionDef	"zend_parse_arg_zval_deref (zval * arg , zval * * dest , int check_null)"		58924	0					
ANR	58926	CompoundStatement		1236:0:55449:55527	58924	0					
ANR	58927	ExpressionStatement	* dest = ( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) ) ? NULL : arg	1237:1:55452:55525	58924	0	True				
ANR	58928	AssignmentExpression	* dest = ( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) ) ? NULL : arg		58924	0		=			
ANR	58929	UnaryOperationExpression	* dest		58924	0					
ANR	58930	UnaryOperator	*		58924	0					
ANR	58931	Identifier	dest		58924	1					
ANR	58932	ConditionalExpression	( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) ) ? NULL : arg		58924	1					
ANR	58933	Condition	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58924	0					
ANR	58934	AndExpression	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58924	0		&&			
ANR	58935	Identifier	check_null		58924	0					
ANR	58936	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		58924	1					
ANR	58937	Callee	UNEXPECTED		58924	0					
ANR	58938	Identifier	UNEXPECTED		58924	0					
ANR	58939	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		58924	1					
ANR	58940	Argument	Z_TYPE_P ( arg ) == IS_NULL		58924	0					
ANR	58941	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		58924	0		==			
ANR	58942	CallExpression	Z_TYPE_P ( arg )		58924	0					
ANR	58943	Callee	Z_TYPE_P		58924	0					
ANR	58944	Identifier	Z_TYPE_P		58924	0					
ANR	58945	ArgumentList	arg		58924	1					
ANR	58946	Argument	arg		58924	0					
ANR	58947	Identifier	arg		58924	0					
ANR	58948	Identifier	IS_NULL		58924	1					
ANR	58949	Identifier	NULL		58924	1					
ANR	58950	Identifier	arg		58924	2					
ANR	58951	ReturnType	static zend_always_inline void		58924	1					
ANR	58952	Identifier	zend_parse_arg_zval_deref		58924	2					
ANR	58953	ParameterList	"zval * arg , zval * * dest , int check_null"		58924	3					
ANR	58954	Parameter	zval * arg	1235:57:55409:55417	58924	0	True				
ANR	58955	ParameterType	zval *		58924	0					
ANR	58956	Identifier	arg		58924	1					
ANR	58957	Parameter	zval * * dest	1235:68:55420:55430	58924	1	True				
ANR	58958	ParameterType	zval * *		58924	0					
ANR	58959	Identifier	dest		58924	1					
ANR	58960	Parameter	int check_null	1235:81:55433:55446	58924	2	True				
ANR	58961	ParameterType	int		58924	0					
ANR	58962	Identifier	check_null		58924	1					
ANR	58963	CFGEntryNode	ENTRY		58924		True				
ANR	58964	CFGExitNode	EXIT		58924		True				
ANR	58965	Symbol	UNEXPECTED		58924						
ANR	58966	Symbol	NULL		58924						
ANR	58967	Symbol	IS_NULL		58924						
ANR	58968	Symbol	* dest		58924						
ANR	58969	Symbol	check_null		58924						
ANR	58970	Symbol	arg		58924						
ANR	58971	Symbol	dest		58924						
ANR	58972	Symbol	Z_TYPE_P		58924						
