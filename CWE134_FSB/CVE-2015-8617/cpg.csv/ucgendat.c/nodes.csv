command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3804353	File	data/converged/CVE-2015-8617_php-src/ucgendat.c								
ANR	3804354	DeclStmt									
ANR	3804355	Decl							ac_uint2	ac_uint2 [ 2 ]	hdr
ANR	3804356	ClassDef	<unnamed>	69:8:2464:2511							
ANR	3804357	DeclStmt									
ANR	3804358	Decl							char	char *	name
ANR	3804359	DeclStmt									
ANR	3804360	Decl							int	int	len
ANR	3804361	DeclStmt									
ANR	3804362	Decl									_prop_t
ANR	3804363	DeclStmt									
ANR	3804364	Decl							_prop_t	_prop_t [ NUMPROPS ]	props
ANR	3804365	ClassDef	<unnamed>	100:8:3540:3620							
ANR	3804366	DeclStmt									
ANR	3804367	Decl							ac_uint4	ac_uint4 *	ranges
ANR	3804368	DeclStmt									
ANR	3804369	Decl							ac_uint2	ac_uint2	used
ANR	3804370	DeclStmt									
ANR	3804371	Decl							ac_uint2	ac_uint2	size
ANR	3804372	DeclStmt									
ANR	3804373	Decl									_ranges_t
ANR	3804374	DeclStmt									
ANR	3804375	Decl							_ranges_t	_ranges_t [ NUMPROPS ]	proptbl
ANR	3804376	DeclStmt									
ANR	3804377	Decl							ac_uint2	ac_uint2 [ NEEDPROPS ]	propcnt
ANR	3804378	DeclStmt									
ANR	3804379	Decl							ac_uint4	ac_uint4 [ 64 ]	dectmp
ANR	3804380	DeclStmt									
ANR	3804381	Decl							ac_uint4	ac_uint4	dectmp_size
ANR	3804382	ClassDef	<unnamed>	120:8:3943:4042							
ANR	3804383	DeclStmt									
ANR	3804384	Decl							ac_uint4	ac_uint4	code
ANR	3804385	DeclStmt									
ANR	3804386	Decl							ac_uint2	ac_uint2	size
ANR	3804387	DeclStmt									
ANR	3804388	Decl							ac_uint2	ac_uint2	used
ANR	3804389	DeclStmt									
ANR	3804390	Decl							ac_uint4	ac_uint4 *	decomp
ANR	3804391	DeclStmt									
ANR	3804392	Decl									_decomp_t
ANR	3804393	DeclStmt									
ANR	3804394	Decl							_decomp_t	_decomp_t *	decomps
ANR	3804395	DeclStmt									
ANR	3804396	Decl							ac_uint4	ac_uint4	decomps_used
ANR	3804397	DeclStmt									
ANR	3804398	Decl							ac_uint4	ac_uint4	decomps_size
ANR	3804399	DeclStmt									
ANR	3804400	Decl							_decomp_t	_decomp_t *	kdecomps
ANR	3804401	DeclStmt									
ANR	3804402	Decl							ac_uint4	ac_uint4	kdecomps_used
ANR	3804403	DeclStmt									
ANR	3804404	Decl							ac_uint4	ac_uint4	kdecomps_size
ANR	3804405	DeclStmt									
ANR	3804406	Decl							ac_uint4	ac_uint4 [ 8192 ]	compexs
ANR	3804407	ClassDef	<unnamed>	150:8:4705:4802							
ANR	3804408	DeclStmt									
ANR	3804409	Decl							ac_uint4	ac_uint4	comp
ANR	3804410	DeclStmt									
ANR	3804411	Decl							ac_uint4	ac_uint4	count
ANR	3804412	DeclStmt									
ANR	3804413	Decl							ac_uint4	ac_uint4	code1
ANR	3804414	DeclStmt									
ANR	3804415	Decl							ac_uint4	ac_uint4	code2
ANR	3804416	DeclStmt									
ANR	3804417	Decl									_comp_t
ANR	3804418	DeclStmt									
ANR	3804419	Decl							_comp_t	_comp_t *	comps
ANR	3804420	DeclStmt									
ANR	3804421	Decl							ac_uint4	ac_uint4	comps_used
ANR	3804422	ClassDef	<unnamed>	165:8:4941:5019							
ANR	3804423	DeclStmt									
ANR	3804424	Decl							ac_uint4	ac_uint4	key
ANR	3804425	DeclStmt									
ANR	3804426	Decl							ac_uint4	ac_uint4	other1
ANR	3804427	DeclStmt									
ANR	3804428	Decl							ac_uint4	ac_uint4	other2
ANR	3804429	DeclStmt									
ANR	3804430	Decl									_case_t
ANR	3804431	DeclStmt									
ANR	3804432	Decl							_case_t	_case_t *	upper
ANR	3804433	DeclStmt									
ANR	3804434	Decl							_case_t	_case_t *	lower
ANR	3804435	DeclStmt									
ANR	3804436	Decl							_case_t	_case_t *	title
ANR	3804437	DeclStmt									
ANR	3804438	Decl							ac_uint4	ac_uint4	upper_used
ANR	3804439	DeclStmt									
ANR	3804440	Decl							ac_uint4	ac_uint4	upper_size
ANR	3804441	DeclStmt									
ANR	3804442	Decl							ac_uint4	ac_uint4	lower_used
ANR	3804443	DeclStmt									
ANR	3804444	Decl							ac_uint4	ac_uint4	lower_size
ANR	3804445	DeclStmt									
ANR	3804446	Decl							ac_uint4	ac_uint4	title_used
ANR	3804447	DeclStmt									
ANR	3804448	Decl							ac_uint4	ac_uint4	title_size
ANR	3804449	DeclStmt									
ANR	3804450	Decl							ac_uint4	ac_uint4 [ 3 ]	cases
ANR	3804451	DeclStmt									
ANR	3804452	Decl							ac_uint4	ac_uint4 *	ccl
ANR	3804453	DeclStmt									
ANR	3804454	Decl							ac_uint4	ac_uint4	ccl_used
ANR	3804455	DeclStmt									
ANR	3804456	Decl							ac_uint4	ac_uint4	ccl_size
ANR	3804457	ClassDef	<unnamed>	196:8:5546:5604							
ANR	3804458	DeclStmt									
ANR	3804459	Decl							ac_uint4	ac_uint4	code
ANR	3804460	DeclStmt									
ANR	3804461	Decl							ac_uint4	ac_uint4	idx
ANR	3804462	DeclStmt									
ANR	3804463	Decl									_codeidx_t
ANR	3804464	ClassDef	<unnamed>	201:8:5615:5676							
ANR	3804465	DeclStmt									
ANR	3804466	Decl							short	short	numerator
ANR	3804467	DeclStmt									
ANR	3804468	Decl							short	short	denominator
ANR	3804469	DeclStmt									
ANR	3804470	Decl									_num_t
ANR	3804471	DeclStmt									
ANR	3804472	Decl							_codeidx_t	_codeidx_t *	ncodes
ANR	3804473	DeclStmt									
ANR	3804474	Decl							ac_uint4	ac_uint4	ncodes_used
ANR	3804475	DeclStmt									
ANR	3804476	Decl							ac_uint4	ac_uint4	ncodes_size
ANR	3804477	DeclStmt									
ANR	3804478	Decl							_num_t	_num_t *	nums
ANR	3804479	DeclStmt									
ANR	3804480	Decl							ac_uint4	ac_uint4	nums_used
ANR	3804481	DeclStmt									
ANR	3804482	Decl							ac_uint4	ac_uint4	nums_size
ANR	3804483	DeclStmt									
ANR	3804484	Decl							_num_t	_num_t *	nums
ANR	3804485	DeclStmt									
ANR	3804486	Decl							ac_uint4	ac_uint4	nums_used
ANR	3804487	DeclStmt									
ANR	3804488	Decl							ac_uint4	ac_uint4	nums_size
ANR	3804489	Function	add_range	224:0:6012:8497							
ANR	3804490	FunctionDef	"add_range (ac_uint4 start , ac_uint4 end , char * p1 , char * p2)"		3804489	0					
ANR	3804491	CompoundStatement		226:0:6084:8497	3804489	0					
ANR	3804492	IdentifierDeclStatement	"int i , j , k , len ;"	227:4:6090:6106	3804489	0	True				
ANR	3804493	IdentifierDecl	i		3804489	0					
ANR	3804494	IdentifierDeclType	int		3804489	0					
ANR	3804495	Identifier	i		3804489	1					
ANR	3804496	IdentifierDecl	j		3804489	1					
ANR	3804497	IdentifierDeclType	int		3804489	0					
ANR	3804498	Identifier	j		3804489	1					
ANR	3804499	IdentifierDecl	k		3804489	2					
ANR	3804500	IdentifierDeclType	int		3804489	0					
ANR	3804501	Identifier	k		3804489	1					
ANR	3804502	IdentifierDecl	len		3804489	3					
ANR	3804503	IdentifierDeclType	int		3804489	0					
ANR	3804504	Identifier	len		3804489	1					
ANR	3804505	IdentifierDeclStatement	_ranges_t * rlp ;	228:4:6112:6126	3804489	1	True				
ANR	3804506	IdentifierDecl	* rlp		3804489	0					
ANR	3804507	IdentifierDeclType	_ranges_t *		3804489	0					
ANR	3804508	Identifier	rlp		3804489	1					
ANR	3804509	IdentifierDeclStatement	char * name ;	229:4:6132:6142	3804489	2	True				
ANR	3804510	IdentifierDecl	* name		3804489	0					
ANR	3804511	IdentifierDeclType	char *		3804489	0					
ANR	3804512	Identifier	name		3804489	1					
ANR	3804513	ForStatement	for ( k = 0 ; k < 2 ; k ++ )		3804489	3					
ANR	3804514	ForInit	k = 0 ;	231:9:6154:6159	3804489	0	True				
ANR	3804515	AssignmentExpression	k = 0		3804489	0		=			
ANR	3804516	Identifier	k		3804489	0					
ANR	3804517	PrimaryExpression	0		3804489	1					
ANR	3804518	Condition	k < 2	231:16:6161:6165	3804489	1	True				
ANR	3804519	RelationalExpression	k < 2		3804489	0		<			
ANR	3804520	Identifier	k		3804489	0					
ANR	3804521	PrimaryExpression	2		3804489	1					
ANR	3804522	PostIncDecOperationExpression	k ++	231:23:6168:6170	3804489	2	True				
ANR	3804523	Identifier	k		3804489	0					
ANR	3804524	IncDec	++		3804489	1					
ANR	3804525	CompoundStatement		6:28:88:88	3804489	3					
ANR	3804526	IfStatement	if ( k == 0 )		3804489	0					
ANR	3804527	Condition	k == 0	232:12:6187:6192	3804489	0	True				
ANR	3804528	EqualityExpression	k == 0		3804489	0		==			
ANR	3804529	Identifier	k		3804489	0					
ANR	3804530	PrimaryExpression	0		3804489	1					
ANR	3804531	CompoundStatement		7:20:110:110	3804489	1					
ANR	3804532	ExpressionStatement	name = p1	233:12:6209:6218	3804489	0	True				
ANR	3804533	AssignmentExpression	name = p1		3804489	0		=			
ANR	3804534	Identifier	name		3804489	0					
ANR	3804535	Identifier	p1		3804489	1					
ANR	3804536	ExpressionStatement	len = 2	234:12:6232:6239	3804489	1	True				
ANR	3804537	AssignmentExpression	len = 2		3804489	0		=			
ANR	3804538	Identifier	len		3804489	0					
ANR	3804539	PrimaryExpression	2		3804489	1					
ANR	3804540	ElseStatement	else		3804489	0					
ANR	3804541	CompoundStatement		10:15:171:171	3804489	0					
ANR	3804542	IfStatement	if ( p2 == 0 )		3804489	0					
ANR	3804543	Condition	p2 == 0	236:16:6274:6280	3804489	0	True				
ANR	3804544	EqualityExpression	p2 == 0		3804489	0		==			
ANR	3804545	Identifier	p2		3804489	0					
ANR	3804546	PrimaryExpression	0		3804489	1					
ANR	3804547	BreakStatement	break ;	237:14:6297:6302	3804489	1	True				
ANR	3804548	ExpressionStatement	name = p2	239:12:6317:6326	3804489	1	True				
ANR	3804549	AssignmentExpression	name = p2		3804489	0		=			
ANR	3804550	Identifier	name		3804489	0					
ANR	3804551	Identifier	p2		3804489	1					
ANR	3804552	ExpressionStatement	len = 1	240:12:6340:6347	3804489	2	True				
ANR	3804553	AssignmentExpression	len = 1		3804489	0		=			
ANR	3804554	Identifier	len		3804489	0					
ANR	3804555	PrimaryExpression	1		3804489	1					
ANR	3804556	ForStatement	for ( i = 0 ; i < NUMPROPS ; i ++ )		3804489	1					
ANR	3804557	ForInit	i = 0 ;	243:13:6373:6378	3804489	0	True				
ANR	3804558	AssignmentExpression	i = 0		3804489	0		=			
ANR	3804559	Identifier	i		3804489	0					
ANR	3804560	PrimaryExpression	0		3804489	1					
ANR	3804561	Condition	i < NUMPROPS	243:20:6380:6391	3804489	1	True				
ANR	3804562	RelationalExpression	i < NUMPROPS		3804489	0		<			
ANR	3804563	Identifier	i		3804489	0					
ANR	3804564	Identifier	NUMPROPS		3804489	1					
ANR	3804565	PostIncDecOperationExpression	i ++	243:34:6394:6396	3804489	2	True				
ANR	3804566	Identifier	i		3804489	0					
ANR	3804567	IncDec	++		3804489	1					
ANR	3804568	CompoundStatement		18:39:314:314	3804489	3					
ANR	3804569	IfStatement	"if ( props [ i ] . len == len && memcmp ( props [ i ] . name , name , len ) == 0 )"		3804489	0					
ANR	3804570	Condition	"props [ i ] . len == len && memcmp ( props [ i ] . name , name , len ) == 0"	244:16:6417:6476	3804489	0	True				
ANR	3804571	AndExpression	"props [ i ] . len == len && memcmp ( props [ i ] . name , name , len ) == 0"		3804489	0		&&			
ANR	3804572	EqualityExpression	props [ i ] . len == len		3804489	0		==			
ANR	3804573	MemberAccess	props [ i ] . len		3804489	0					
ANR	3804574	ArrayIndexing	props [ i ]		3804489	0					
ANR	3804575	Identifier	props		3804489	0					
ANR	3804576	Identifier	i		3804489	1					
ANR	3804577	Identifier	len		3804489	1					
ANR	3804578	Identifier	len		3804489	1					
ANR	3804579	EqualityExpression	"memcmp ( props [ i ] . name , name , len ) == 0"		3804489	1		==			
ANR	3804580	CallExpression	"memcmp ( props [ i ] . name , name , len )"		3804489	0					
ANR	3804581	Callee	memcmp		3804489	0					
ANR	3804582	Identifier	memcmp		3804489	0					
ANR	3804583	ArgumentList	props [ i ] . name		3804489	1					
ANR	3804584	Argument	props [ i ] . name		3804489	0					
ANR	3804585	MemberAccess	props [ i ] . name		3804489	0					
ANR	3804586	ArrayIndexing	props [ i ]		3804489	0					
ANR	3804587	Identifier	props		3804489	0					
ANR	3804588	Identifier	i		3804489	1					
ANR	3804589	Identifier	name		3804489	1					
ANR	3804590	Argument	name		3804489	1					
ANR	3804591	Identifier	name		3804489	0					
ANR	3804592	Argument	len		3804489	2					
ANR	3804593	Identifier	len		3804489	0					
ANR	3804594	PrimaryExpression	0		3804489	1					
ANR	3804595	BreakStatement	break ;	245:14:6493:6498	3804489	1	True				
ANR	3804596	IfStatement	if ( i == NUMPROPS )		3804489	2					
ANR	3804597	Condition	i == NUMPROPS	248:12:6523:6535	3804489	0	True				
ANR	3804598	EqualityExpression	i == NUMPROPS		3804489	0		==			
ANR	3804599	Identifier	i		3804489	0					
ANR	3804600	Identifier	NUMPROPS		3804489	1					
ANR	3804601	ContinueStatement	continue ;	249:10:6548:6556	3804489	1	True				
ANR	3804602	ExpressionStatement	rlp = & proptbl [ i ]	251:8:6567:6584	3804489	3	True				
ANR	3804603	AssignmentExpression	rlp = & proptbl [ i ]		3804489	0		=			
ANR	3804604	Identifier	rlp		3804489	0					
ANR	3804605	UnaryOperationExpression	& proptbl [ i ]		3804489	1					
ANR	3804606	UnaryOperator	&		3804489	0					
ANR	3804607	ArrayIndexing	proptbl [ i ]		3804489	1					
ANR	3804608	Identifier	proptbl		3804489	0					
ANR	3804609	Identifier	i		3804489	1					
ANR	3804610	IfStatement	if ( rlp -> used == rlp -> size )		3804489	4					
ANR	3804611	Condition	rlp -> used == rlp -> size	256:12:6669:6690	3804489	0	True				
ANR	3804612	EqualityExpression	rlp -> used == rlp -> size		3804489	0		==			
ANR	3804613	PtrMemberAccess	rlp -> used		3804489	0					
ANR	3804614	Identifier	rlp		3804489	0					
ANR	3804615	Identifier	used		3804489	1					
ANR	3804616	PtrMemberAccess	rlp -> size		3804489	1					
ANR	3804617	Identifier	rlp		3804489	0					
ANR	3804618	Identifier	size		3804489	1					
ANR	3804619	CompoundStatement		31:36:608:608	3804489	1					
ANR	3804620	IfStatement	if ( rlp -> size == 0 )		3804489	0					
ANR	3804621	Condition	rlp -> size == 0	257:16:6711:6724	3804489	0	True				
ANR	3804622	EqualityExpression	rlp -> size == 0		3804489	0		==			
ANR	3804623	PtrMemberAccess	rlp -> size		3804489	0					
ANR	3804624	Identifier	rlp		3804489	0					
ANR	3804625	Identifier	size		3804489	1					
ANR	3804626	PrimaryExpression	0		3804489	1					
ANR	3804627	ExpressionStatement	rlp -> ranges = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) << 3 )	258:14:6741:6815	3804489	1	True				
ANR	3804628	AssignmentExpression	rlp -> ranges = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) << 3 )		3804489	0		=			
ANR	3804629	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804630	Identifier	rlp		3804489	0					
ANR	3804631	Identifier	ranges		3804489	1					
ANR	3804632	CastExpression	( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) << 3 )		3804489	1					
ANR	3804633	CastTarget	ac_uint4 *		3804489	0					
ANR	3804634	CallExpression	malloc ( sizeof ( ac_uint4 ) << 3 )		3804489	1					
ANR	3804635	Callee	malloc		3804489	0					
ANR	3804636	Identifier	malloc		3804489	0					
ANR	3804637	ArgumentList	sizeof ( ac_uint4 ) << 3		3804489	1					
ANR	3804638	Argument	sizeof ( ac_uint4 ) << 3		3804489	0					
ANR	3804639	ShiftExpression	sizeof ( ac_uint4 ) << 3		3804489	0		<<			
ANR	3804640	SizeofExpression	sizeof ( ac_uint4 )		3804489	0					
ANR	3804641	Sizeof	sizeof		3804489	0					
ANR	3804642	SizeofOperand	ac_uint4		3804489	1					
ANR	3804643	PrimaryExpression	3		3804489	1					
ANR	3804644	ElseStatement	else		3804489	0					
ANR	3804645	ExpressionStatement	"rlp -> ranges = ( ac_uint4 * ) realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"	261:14:6848:6984	3804489	0	True				
ANR	3804646	AssignmentExpression	"rlp -> ranges = ( ac_uint4 * ) realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"		3804489	0		=			
ANR	3804647	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804648	Identifier	rlp		3804489	0					
ANR	3804649	Identifier	ranges		3804489	1					
ANR	3804650	CastExpression	"( ac_uint4 * ) realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"		3804489	1					
ANR	3804651	CastTarget	ac_uint4 *		3804489	0					
ANR	3804652	CallExpression	"realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"		3804489	1					
ANR	3804653	Callee	realloc		3804489	0					
ANR	3804654	Identifier	realloc		3804489	0					
ANR	3804655	ArgumentList	( char * ) rlp -> ranges		3804489	1					
ANR	3804656	Argument	( char * ) rlp -> ranges		3804489	0					
ANR	3804657	CastExpression	( char * ) rlp -> ranges		3804489	0					
ANR	3804658	CastTarget	char *		3804489	0					
ANR	3804659	PtrMemberAccess	rlp -> ranges		3804489	1					
ANR	3804660	Identifier	rlp		3804489	0					
ANR	3804661	Identifier	ranges		3804489	1					
ANR	3804662	Argument	sizeof ( ac_uint4 ) * ( rlp -> size + 8 )		3804489	1					
ANR	3804663	MultiplicativeExpression	sizeof ( ac_uint4 ) * ( rlp -> size + 8 )		3804489	0		*			
ANR	3804664	SizeofExpression	sizeof ( ac_uint4 )		3804489	0					
ANR	3804665	Sizeof	sizeof		3804489	0					
ANR	3804666	SizeofOperand	ac_uint4		3804489	1					
ANR	3804667	AdditiveExpression	rlp -> size + 8		3804489	1		+			
ANR	3804668	PtrMemberAccess	rlp -> size		3804489	0					
ANR	3804669	Identifier	rlp		3804489	0					
ANR	3804670	Identifier	size		3804489	1					
ANR	3804671	PrimaryExpression	8		3804489	1					
ANR	3804672	ExpressionStatement	rlp -> size += 8	264:12:6998:7012	3804489	1	True				
ANR	3804673	AssignmentExpression	rlp -> size += 8		3804489	0		+=			
ANR	3804674	PtrMemberAccess	rlp -> size		3804489	0					
ANR	3804675	Identifier	rlp		3804489	0					
ANR	3804676	Identifier	size		3804489	1					
ANR	3804677	PrimaryExpression	8		3804489	1					
ANR	3804678	IfStatement	if ( rlp -> used == 0 )		3804489	5					
ANR	3804679	Condition	rlp -> used == 0	271:12:7156:7169	3804489	0	True				
ANR	3804680	EqualityExpression	rlp -> used == 0		3804489	0		==			
ANR	3804681	PtrMemberAccess	rlp -> used		3804489	0					
ANR	3804682	Identifier	rlp		3804489	0					
ANR	3804683	Identifier	used		3804489	1					
ANR	3804684	PrimaryExpression	0		3804489	1					
ANR	3804685	CompoundStatement		46:28:1087:1087	3804489	1					
ANR	3804686	ExpressionStatement	rlp -> ranges [ 0 ] = start	272:12:7186:7208	3804489	0	True				
ANR	3804687	AssignmentExpression	rlp -> ranges [ 0 ] = start		3804489	0		=			
ANR	3804688	ArrayIndexing	rlp -> ranges [ 0 ]		3804489	0					
ANR	3804689	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804690	Identifier	rlp		3804489	0					
ANR	3804691	Identifier	ranges		3804489	1					
ANR	3804692	PrimaryExpression	0		3804489	1					
ANR	3804693	Identifier	start		3804489	1					
ANR	3804694	ExpressionStatement	rlp -> ranges [ 1 ] = end	273:12:7222:7242	3804489	1	True				
ANR	3804695	AssignmentExpression	rlp -> ranges [ 1 ] = end		3804489	0		=			
ANR	3804696	ArrayIndexing	rlp -> ranges [ 1 ]		3804489	0					
ANR	3804697	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804698	Identifier	rlp		3804489	0					
ANR	3804699	Identifier	ranges		3804489	1					
ANR	3804700	PrimaryExpression	1		3804489	1					
ANR	3804701	Identifier	end		3804489	1					
ANR	3804702	ExpressionStatement	rlp -> used += 2	274:12:7256:7270	3804489	2	True				
ANR	3804703	AssignmentExpression	rlp -> used += 2		3804489	0		+=			
ANR	3804704	PtrMemberAccess	rlp -> used		3804489	0					
ANR	3804705	Identifier	rlp		3804489	0					
ANR	3804706	Identifier	used		3804489	1					
ANR	3804707	PrimaryExpression	2		3804489	1					
ANR	3804708	ContinueStatement	continue ;	275:12:7284:7292	3804489	3	True				
ANR	3804709	ExpressionStatement	j = rlp -> used - 1	281:8:7397:7414	3804489	6	True				
ANR	3804710	AssignmentExpression	j = rlp -> used - 1		3804489	0		=			
ANR	3804711	Identifier	j		3804489	0					
ANR	3804712	AdditiveExpression	rlp -> used - 1		3804489	1		-			
ANR	3804713	PtrMemberAccess	rlp -> used		3804489	0					
ANR	3804714	Identifier	rlp		3804489	0					
ANR	3804715	Identifier	used		3804489	1					
ANR	3804716	PrimaryExpression	1		3804489	1					
ANR	3804717	IfStatement	if ( start > rlp -> ranges [ j ] )		3804489	7					
ANR	3804718	Condition	start > rlp -> ranges [ j ]	282:12:7428:7449	3804489	0	True				
ANR	3804719	RelationalExpression	start > rlp -> ranges [ j ]		3804489	0		>			
ANR	3804720	Identifier	start		3804489	0					
ANR	3804721	ArrayIndexing	rlp -> ranges [ j ]		3804489	1					
ANR	3804722	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804723	Identifier	rlp		3804489	0					
ANR	3804724	Identifier	ranges		3804489	1					
ANR	3804725	Identifier	j		3804489	1					
ANR	3804726	CompoundStatement		57:36:1367:1367	3804489	1					
ANR	3804727	ExpressionStatement	j = rlp -> used	283:12:7466:7479	3804489	0	True				
ANR	3804728	AssignmentExpression	j = rlp -> used		3804489	0		=			
ANR	3804729	Identifier	j		3804489	0					
ANR	3804730	PtrMemberAccess	rlp -> used		3804489	1					
ANR	3804731	Identifier	rlp		3804489	0					
ANR	3804732	Identifier	used		3804489	1					
ANR	3804733	ExpressionStatement	rlp -> ranges [ j ++ ] = start	284:12:7493:7517	3804489	1	True				
ANR	3804734	AssignmentExpression	rlp -> ranges [ j ++ ] = start		3804489	0		=			
ANR	3804735	ArrayIndexing	rlp -> ranges [ j ++ ]		3804489	0					
ANR	3804736	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804737	Identifier	rlp		3804489	0					
ANR	3804738	Identifier	ranges		3804489	1					
ANR	3804739	PostIncDecOperationExpression	j ++		3804489	1					
ANR	3804740	Identifier	j		3804489	0					
ANR	3804741	IncDec	++		3804489	1					
ANR	3804742	Identifier	start		3804489	1					
ANR	3804743	ExpressionStatement	rlp -> ranges [ j ++ ] = end	285:12:7531:7553	3804489	2	True				
ANR	3804744	AssignmentExpression	rlp -> ranges [ j ++ ] = end		3804489	0		=			
ANR	3804745	ArrayIndexing	rlp -> ranges [ j ++ ]		3804489	0					
ANR	3804746	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804747	Identifier	rlp		3804489	0					
ANR	3804748	Identifier	ranges		3804489	1					
ANR	3804749	PostIncDecOperationExpression	j ++		3804489	1					
ANR	3804750	Identifier	j		3804489	0					
ANR	3804751	IncDec	++		3804489	1					
ANR	3804752	Identifier	end		3804489	1					
ANR	3804753	ExpressionStatement	rlp -> used = j	286:12:7567:7580	3804489	3	True				
ANR	3804754	AssignmentExpression	rlp -> used = j		3804489	0		=			
ANR	3804755	PtrMemberAccess	rlp -> used		3804489	0					
ANR	3804756	Identifier	rlp		3804489	0					
ANR	3804757	Identifier	used		3804489	1					
ANR	3804758	Identifier	j		3804489	1					
ANR	3804759	ContinueStatement	continue ;	287:12:7594:7602	3804489	4	True				
ANR	3804760	ForStatement	for ( i = 0 ; i < rlp -> used && start > rlp -> ranges [ i + 1 ] + 1 ; i += 2 )		3804489	8					
ANR	3804761	ForInit	i = 0 ;	293:13:7698:7703	3804489	0	True				
ANR	3804762	AssignmentExpression	i = 0		3804489	0		=			
ANR	3804763	Identifier	i		3804489	0					
ANR	3804764	PrimaryExpression	0		3804489	1					
ANR	3804765	Condition	i < rlp -> used && start > rlp -> ranges [ i + 1 ] + 1	294:13:7718:7764	3804489	1	True				
ANR	3804766	AndExpression	i < rlp -> used && start > rlp -> ranges [ i + 1 ] + 1		3804489	0		&&			
ANR	3804767	RelationalExpression	i < rlp -> used		3804489	0		<			
ANR	3804768	Identifier	i		3804489	0					
ANR	3804769	PtrMemberAccess	rlp -> used		3804489	1					
ANR	3804770	Identifier	rlp		3804489	0					
ANR	3804771	Identifier	used		3804489	1					
ANR	3804772	RelationalExpression	start > rlp -> ranges [ i + 1 ] + 1		3804489	1		>			
ANR	3804773	Identifier	start		3804489	0					
ANR	3804774	AdditiveExpression	rlp -> ranges [ i + 1 ] + 1		3804489	1		+			
ANR	3804775	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804489	0					
ANR	3804776	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804777	Identifier	rlp		3804489	0					
ANR	3804778	Identifier	ranges		3804489	1					
ANR	3804779	AdditiveExpression	i + 1		3804489	1		+			
ANR	3804780	Identifier	i		3804489	0					
ANR	3804781	PrimaryExpression	1		3804489	1					
ANR	3804782	PrimaryExpression	1		3804489	1					
ANR	3804783	AssignmentExpression	i += 2	294:62:7767:7772	3804489	2	True	+=			
ANR	3804784	Identifier	i		3804489	0					
ANR	3804785	PrimaryExpression	2		3804489	1					
ANR	3804786	ExpressionStatement		294:70:7775:7775	3804489	3	True				
ANR	3804787	IfStatement	if ( rlp -> ranges [ i ] <= start && start <= rlp -> ranges [ i + 1 ] + 1 )		3804489	9					
ANR	3804788	Condition	rlp -> ranges [ i ] <= start && start <= rlp -> ranges [ i + 1 ] + 1	300:12:7968:8025	3804489	0	True				
ANR	3804789	AndExpression	rlp -> ranges [ i ] <= start && start <= rlp -> ranges [ i + 1 ] + 1		3804489	0		&&			
ANR	3804790	RelationalExpression	rlp -> ranges [ i ] <= start		3804489	0		<=			
ANR	3804791	ArrayIndexing	rlp -> ranges [ i ]		3804489	0					
ANR	3804792	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804793	Identifier	rlp		3804489	0					
ANR	3804794	Identifier	ranges		3804489	1					
ANR	3804795	Identifier	i		3804489	1					
ANR	3804796	Identifier	start		3804489	1					
ANR	3804797	RelationalExpression	start <= rlp -> ranges [ i + 1 ] + 1		3804489	1		<=			
ANR	3804798	Identifier	start		3804489	0					
ANR	3804799	AdditiveExpression	rlp -> ranges [ i + 1 ] + 1		3804489	1		+			
ANR	3804800	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804489	0					
ANR	3804801	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804802	Identifier	rlp		3804489	0					
ANR	3804803	Identifier	ranges		3804489	1					
ANR	3804804	AdditiveExpression	i + 1		3804489	1		+			
ANR	3804805	Identifier	i		3804489	0					
ANR	3804806	PrimaryExpression	1		3804489	1					
ANR	3804807	PrimaryExpression	1		3804489	1					
ANR	3804808	CompoundStatement		75:72:1943:1943	3804489	1					
ANR	3804809	ExpressionStatement	rlp -> ranges [ i + 1 ] = end	301:12:8042:8066	3804489	0	True				
ANR	3804810	AssignmentExpression	rlp -> ranges [ i + 1 ] = end		3804489	0		=			
ANR	3804811	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804489	0					
ANR	3804812	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804813	Identifier	rlp		3804489	0					
ANR	3804814	Identifier	ranges		3804489	1					
ANR	3804815	AdditiveExpression	i + 1		3804489	1		+			
ANR	3804816	Identifier	i		3804489	0					
ANR	3804817	PrimaryExpression	1		3804489	1					
ANR	3804818	Identifier	end		3804489	1					
ANR	3804819	ReturnStatement	return ;	302:12:8080:8086	3804489	1	True				
ANR	3804820	ForStatement	for ( j = rlp -> used ; j > i ; j -= 2 )		3804489	10					
ANR	3804821	ForInit	j = rlp -> used ;	308:13:8180:8193	3804489	0	True				
ANR	3804822	AssignmentExpression	j = rlp -> used		3804489	0		=			
ANR	3804823	Identifier	j		3804489	0					
ANR	3804824	PtrMemberAccess	rlp -> used		3804489	1					
ANR	3804825	Identifier	rlp		3804489	0					
ANR	3804826	Identifier	used		3804489	1					
ANR	3804827	Condition	j > i	308:28:8195:8199	3804489	1	True				
ANR	3804828	RelationalExpression	j > i		3804489	0		>			
ANR	3804829	Identifier	j		3804489	0					
ANR	3804830	Identifier	i		3804489	1					
ANR	3804831	AssignmentExpression	j -= 2	308:35:8202:8207	3804489	2	True	-=			
ANR	3804832	Identifier	j		3804489	0					
ANR	3804833	PrimaryExpression	2		3804489	1					
ANR	3804834	CompoundStatement		83:43:2125:2125	3804489	3					
ANR	3804835	ExpressionStatement	rlp -> ranges [ j ] = rlp -> ranges [ j - 2 ]	309:12:8224:8259	3804489	0	True				
ANR	3804836	AssignmentExpression	rlp -> ranges [ j ] = rlp -> ranges [ j - 2 ]		3804489	0		=			
ANR	3804837	ArrayIndexing	rlp -> ranges [ j ]		3804489	0					
ANR	3804838	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804839	Identifier	rlp		3804489	0					
ANR	3804840	Identifier	ranges		3804489	1					
ANR	3804841	Identifier	j		3804489	1					
ANR	3804842	ArrayIndexing	rlp -> ranges [ j - 2 ]		3804489	1					
ANR	3804843	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804844	Identifier	rlp		3804489	0					
ANR	3804845	Identifier	ranges		3804489	1					
ANR	3804846	AdditiveExpression	j - 2		3804489	1		-			
ANR	3804847	Identifier	j		3804489	0					
ANR	3804848	PrimaryExpression	2		3804489	1					
ANR	3804849	ExpressionStatement	rlp -> ranges [ j + 1 ] = rlp -> ranges [ j - 1 ]	310:12:8273:8312	3804489	1	True				
ANR	3804850	AssignmentExpression	rlp -> ranges [ j + 1 ] = rlp -> ranges [ j - 1 ]		3804489	0		=			
ANR	3804851	ArrayIndexing	rlp -> ranges [ j + 1 ]		3804489	0					
ANR	3804852	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804853	Identifier	rlp		3804489	0					
ANR	3804854	Identifier	ranges		3804489	1					
ANR	3804855	AdditiveExpression	j + 1		3804489	1		+			
ANR	3804856	Identifier	j		3804489	0					
ANR	3804857	PrimaryExpression	1		3804489	1					
ANR	3804858	ArrayIndexing	rlp -> ranges [ j - 1 ]		3804489	1					
ANR	3804859	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804860	Identifier	rlp		3804489	0					
ANR	3804861	Identifier	ranges		3804489	1					
ANR	3804862	AdditiveExpression	j - 1		3804489	1		-			
ANR	3804863	Identifier	j		3804489	0					
ANR	3804864	PrimaryExpression	1		3804489	1					
ANR	3804865	ExpressionStatement	rlp -> ranges [ i ] = start	316:8:8409:8431	3804489	11	True				
ANR	3804866	AssignmentExpression	rlp -> ranges [ i ] = start		3804489	0		=			
ANR	3804867	ArrayIndexing	rlp -> ranges [ i ]		3804489	0					
ANR	3804868	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804869	Identifier	rlp		3804489	0					
ANR	3804870	Identifier	ranges		3804489	1					
ANR	3804871	Identifier	i		3804489	1					
ANR	3804872	Identifier	start		3804489	1					
ANR	3804873	ExpressionStatement	rlp -> ranges [ i + 1 ] = end	317:8:8441:8465	3804489	12	True				
ANR	3804874	AssignmentExpression	rlp -> ranges [ i + 1 ] = end		3804489	0		=			
ANR	3804875	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804489	0					
ANR	3804876	PtrMemberAccess	rlp -> ranges		3804489	0					
ANR	3804877	Identifier	rlp		3804489	0					
ANR	3804878	Identifier	ranges		3804489	1					
ANR	3804879	AdditiveExpression	i + 1		3804489	1		+			
ANR	3804880	Identifier	i		3804489	0					
ANR	3804881	PrimaryExpression	1		3804489	1					
ANR	3804882	Identifier	end		3804489	1					
ANR	3804883	ExpressionStatement	rlp -> used += 2	318:8:8475:8489	3804489	13	True				
ANR	3804884	AssignmentExpression	rlp -> used += 2		3804489	0		+=			
ANR	3804885	PtrMemberAccess	rlp -> used		3804489	0					
ANR	3804886	Identifier	rlp		3804489	0					
ANR	3804887	Identifier	used		3804489	1					
ANR	3804888	PrimaryExpression	2		3804489	1					
ANR	3804889	ReturnType	static void		3804489	1					
ANR	3804890	Identifier	add_range		3804489	2					
ANR	3804891	ParameterList	"ac_uint4 start , ac_uint4 end , char * p1 , char * p2"		3804489	3					
ANR	3804892	Parameter	ac_uint4 start	225:10:6034:6047	3804489	0	True				
ANR	3804893	ParameterType	ac_uint4		3804489	0					
ANR	3804894	Identifier	start		3804489	1					
ANR	3804895	Parameter	ac_uint4 end	225:26:6050:6061	3804489	1	True				
ANR	3804896	ParameterType	ac_uint4		3804489	0					
ANR	3804897	Identifier	end		3804489	1					
ANR	3804898	Parameter	char * p1	225:40:6064:6071	3804489	2	True				
ANR	3804899	ParameterType	char *		3804489	0					
ANR	3804900	Identifier	p1		3804489	1					
ANR	3804901	Parameter	char * p2	225:50:6074:6081	3804489	3	True				
ANR	3804902	ParameterType	char *		3804489	0					
ANR	3804903	Identifier	p2		3804489	1					
ANR	3804904	CFGEntryNode	ENTRY		3804489		True				
ANR	3804905	CFGExitNode	EXIT		3804489		True				
ANR	3804906	Symbol	p1		3804489						
ANR	3804907	Symbol	rlp -> size		3804489						
ANR	3804908	Symbol	p2		3804489						
ANR	3804909	Symbol	rlp -> used		3804489						
ANR	3804910	Symbol	rlp -> ranges		3804489						
ANR	3804911	Symbol	* * rlp		3804489						
ANR	3804912	Symbol	realloc		3804489						
ANR	3804913	Symbol	memcmp		3804489						
ANR	3804914	Symbol	len		3804489						
ANR	3804915	Symbol	end		3804489						
ANR	3804916	Symbol	* rlp		3804489						
ANR	3804917	Symbol	malloc		3804489						
ANR	3804918	Symbol	props [ i ] . name		3804489						
ANR	3804919	Symbol	start		3804489						
ANR	3804920	Symbol	proptbl		3804489						
ANR	3804921	Symbol	i		3804489						
ANR	3804922	Symbol	j		3804489						
ANR	3804923	Symbol	NUMPROPS		3804489						
ANR	3804924	Symbol	k		3804489						
ANR	3804925	Symbol	props		3804489						
ANR	3804926	Symbol	* rlp -> ranges		3804489						
ANR	3804927	Symbol	* i		3804489						
ANR	3804928	Symbol	* j		3804489						
ANR	3804929	Symbol	rlp		3804489						
ANR	3804930	Symbol	name		3804489						
ANR	3804931	Symbol	* props		3804489						
ANR	3804932	Symbol	props [ i ] . len		3804489						
ANR	3804933	Function	ordered_range_insert	322:0:8500:11508							
ANR	3804934	FunctionDef	"ordered_range_insert (ac_uint4 c , char * name , int len)"		3804933	0					
ANR	3804935	CompoundStatement		324:0:8566:11508	3804933	0					
ANR	3804936	IdentifierDeclStatement	"int i , j ;"	325:4:8572:8580	3804933	0	True				
ANR	3804937	IdentifierDecl	i		3804933	0					
ANR	3804938	IdentifierDeclType	int		3804933	0					
ANR	3804939	Identifier	i		3804933	1					
ANR	3804940	IdentifierDecl	j		3804933	1					
ANR	3804941	IdentifierDeclType	int		3804933	0					
ANR	3804942	Identifier	j		3804933	1					
ANR	3804943	IdentifierDeclStatement	"ac_uint4 s , e ;"	326:4:8586:8599	3804933	1	True				
ANR	3804944	IdentifierDecl	s		3804933	0					
ANR	3804945	IdentifierDeclType	ac_uint4		3804933	0					
ANR	3804946	Identifier	s		3804933	1					
ANR	3804947	IdentifierDecl	e		3804933	1					
ANR	3804948	IdentifierDeclType	ac_uint4		3804933	0					
ANR	3804949	Identifier	e		3804933	1					
ANR	3804950	IdentifierDeclStatement	_ranges_t * rlp ;	327:4:8605:8619	3804933	2	True				
ANR	3804951	IdentifierDecl	* rlp		3804933	0					
ANR	3804952	IdentifierDeclType	_ranges_t *		3804933	0					
ANR	3804953	Identifier	rlp		3804933	1					
ANR	3804954	IfStatement	if ( len == 0 )		3804933	3					
ANR	3804955	Condition	len == 0	329:8:8630:8637	3804933	0	True				
ANR	3804956	EqualityExpression	len == 0		3804933	0		==			
ANR	3804957	Identifier	len		3804933	0					
ANR	3804958	PrimaryExpression	0		3804933	1					
ANR	3804959	ReturnStatement	return ;	330:6:8646:8652	3804933	1	True				
ANR	3804960	IfStatement	"if ( ( len == 2 && memcmp ( name , ""BN"" , 2 ) == 0 ) || ( len == 3 && ( memcmp ( name , ""NSM"" , 3 ) == 0 || memcmp ( name , ""PDF"" , 3 ) == 0 || memcmp ( name , ""LRE"" , 3 ) == 0 || memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0 ) ) )"		3804933	4					
ANR	3804961	Condition	"( len == 2 && memcmp ( name , ""BN"" , 2 ) == 0 ) || ( len == 3 && ( memcmp ( name , ""NSM"" , 3 ) == 0 || memcmp ( name , ""PDF"" , 3 ) == 0 || memcmp ( name , ""LRE"" , 3 ) == 0 || memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0 ) )"	335:8:8743:9021	3804933	0	True				
ANR	3804962	OrExpression	"( len == 2 && memcmp ( name , ""BN"" , 2 ) == 0 ) || ( len == 3 && ( memcmp ( name , ""NSM"" , 3 ) == 0 || memcmp ( name , ""PDF"" , 3 ) == 0 || memcmp ( name , ""LRE"" , 3 ) == 0 || memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0 ) )"		3804933	0		||			
ANR	3804963	AndExpression	"len == 2 && memcmp ( name , ""BN"" , 2 ) == 0"		3804933	0		&&			
ANR	3804964	EqualityExpression	len == 2		3804933	0		==			
ANR	3804965	Identifier	len		3804933	0					
ANR	3804966	PrimaryExpression	2		3804933	1					
ANR	3804967	EqualityExpression	"memcmp ( name , ""BN"" , 2 ) == 0"		3804933	1		==			
ANR	3804968	CallExpression	"memcmp ( name , ""BN"" , 2 )"		3804933	0					
ANR	3804969	Callee	memcmp		3804933	0					
ANR	3804970	Identifier	memcmp		3804933	0					
ANR	3804971	ArgumentList	name		3804933	1					
ANR	3804972	Argument	name		3804933	0					
ANR	3804973	Identifier	name		3804933	0					
ANR	3804974	Argument	"""BN"""		3804933	1					
ANR	3804975	PrimaryExpression	"""BN"""		3804933	0					
ANR	3804976	Argument	2		3804933	2					
ANR	3804977	PrimaryExpression	2		3804933	0					
ANR	3804978	PrimaryExpression	0		3804933	1					
ANR	3804979	AndExpression	"len == 3 && ( memcmp ( name , ""NSM"" , 3 ) == 0 || memcmp ( name , ""PDF"" , 3 ) == 0 || memcmp ( name , ""LRE"" , 3 ) == 0 || memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0 )"		3804933	1		&&			
ANR	3804980	EqualityExpression	len == 3		3804933	0		==			
ANR	3804981	Identifier	len		3804933	0					
ANR	3804982	PrimaryExpression	3		3804933	1					
ANR	3804983	OrExpression	"memcmp ( name , ""NSM"" , 3 ) == 0 || memcmp ( name , ""PDF"" , 3 ) == 0 || memcmp ( name , ""LRE"" , 3 ) == 0 || memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0"		3804933	1		||			
ANR	3804984	EqualityExpression	"memcmp ( name , ""NSM"" , 3 ) == 0"		3804933	0		==			
ANR	3804985	CallExpression	"memcmp ( name , ""NSM"" , 3 )"		3804933	0					
ANR	3804986	Callee	memcmp		3804933	0					
ANR	3804987	Identifier	memcmp		3804933	0					
ANR	3804988	ArgumentList	name		3804933	1					
ANR	3804989	Argument	name		3804933	0					
ANR	3804990	Identifier	name		3804933	0					
ANR	3804991	Argument	"""NSM"""		3804933	1					
ANR	3804992	PrimaryExpression	"""NSM"""		3804933	0					
ANR	3804993	Argument	3		3804933	2					
ANR	3804994	PrimaryExpression	3		3804933	0					
ANR	3804995	PrimaryExpression	0		3804933	1					
ANR	3804996	OrExpression	"memcmp ( name , ""PDF"" , 3 ) == 0 || memcmp ( name , ""LRE"" , 3 ) == 0 || memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0"		3804933	1		||			
ANR	3804997	EqualityExpression	"memcmp ( name , ""PDF"" , 3 ) == 0"		3804933	0		==			
ANR	3804998	CallExpression	"memcmp ( name , ""PDF"" , 3 )"		3804933	0					
ANR	3804999	Callee	memcmp		3804933	0					
ANR	3805000	Identifier	memcmp		3804933	0					
ANR	3805001	ArgumentList	name		3804933	1					
ANR	3805002	Argument	name		3804933	0					
ANR	3805003	Identifier	name		3804933	0					
ANR	3805004	Argument	"""PDF"""		3804933	1					
ANR	3805005	PrimaryExpression	"""PDF"""		3804933	0					
ANR	3805006	Argument	3		3804933	2					
ANR	3805007	PrimaryExpression	3		3804933	0					
ANR	3805008	PrimaryExpression	0		3804933	1					
ANR	3805009	OrExpression	"memcmp ( name , ""LRE"" , 3 ) == 0 || memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0"		3804933	1		||			
ANR	3805010	EqualityExpression	"memcmp ( name , ""LRE"" , 3 ) == 0"		3804933	0		==			
ANR	3805011	CallExpression	"memcmp ( name , ""LRE"" , 3 )"		3804933	0					
ANR	3805012	Callee	memcmp		3804933	0					
ANR	3805013	Identifier	memcmp		3804933	0					
ANR	3805014	ArgumentList	name		3804933	1					
ANR	3805015	Argument	name		3804933	0					
ANR	3805016	Identifier	name		3804933	0					
ANR	3805017	Argument	"""LRE"""		3804933	1					
ANR	3805018	PrimaryExpression	"""LRE"""		3804933	0					
ANR	3805019	Argument	3		3804933	2					
ANR	3805020	PrimaryExpression	3		3804933	0					
ANR	3805021	PrimaryExpression	0		3804933	1					
ANR	3805022	OrExpression	"memcmp ( name , ""LRO"" , 3 ) == 0 || memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0"		3804933	1		||			
ANR	3805023	EqualityExpression	"memcmp ( name , ""LRO"" , 3 ) == 0"		3804933	0		==			
ANR	3805024	CallExpression	"memcmp ( name , ""LRO"" , 3 )"		3804933	0					
ANR	3805025	Callee	memcmp		3804933	0					
ANR	3805026	Identifier	memcmp		3804933	0					
ANR	3805027	ArgumentList	name		3804933	1					
ANR	3805028	Argument	name		3804933	0					
ANR	3805029	Identifier	name		3804933	0					
ANR	3805030	Argument	"""LRO"""		3804933	1					
ANR	3805031	PrimaryExpression	"""LRO"""		3804933	0					
ANR	3805032	Argument	3		3804933	2					
ANR	3805033	PrimaryExpression	3		3804933	0					
ANR	3805034	PrimaryExpression	0		3804933	1					
ANR	3805035	OrExpression	"memcmp ( name , ""RLE"" , 3 ) == 0 || memcmp ( name , ""RLO"" , 3 ) == 0"		3804933	1		||			
ANR	3805036	EqualityExpression	"memcmp ( name , ""RLE"" , 3 ) == 0"		3804933	0		==			
ANR	3805037	CallExpression	"memcmp ( name , ""RLE"" , 3 )"		3804933	0					
ANR	3805038	Callee	memcmp		3804933	0					
ANR	3805039	Identifier	memcmp		3804933	0					
ANR	3805040	ArgumentList	name		3804933	1					
ANR	3805041	Argument	name		3804933	0					
ANR	3805042	Identifier	name		3804933	0					
ANR	3805043	Argument	"""RLE"""		3804933	1					
ANR	3805044	PrimaryExpression	"""RLE"""		3804933	0					
ANR	3805045	Argument	3		3804933	2					
ANR	3805046	PrimaryExpression	3		3804933	0					
ANR	3805047	PrimaryExpression	0		3804933	1					
ANR	3805048	EqualityExpression	"memcmp ( name , ""RLO"" , 3 ) == 0"		3804933	1		==			
ANR	3805049	CallExpression	"memcmp ( name , ""RLO"" , 3 )"		3804933	0					
ANR	3805050	Callee	memcmp		3804933	0					
ANR	3805051	Identifier	memcmp		3804933	0					
ANR	3805052	ArgumentList	name		3804933	1					
ANR	3805053	Argument	name		3804933	0					
ANR	3805054	Identifier	name		3804933	0					
ANR	3805055	Argument	"""RLO"""		3804933	1					
ANR	3805056	PrimaryExpression	"""RLO"""		3804933	0					
ANR	3805057	Argument	3		3804933	2					
ANR	3805058	PrimaryExpression	3		3804933	0					
ANR	3805059	PrimaryExpression	0		3804933	1					
ANR	3805060	CompoundStatement		16:72:457:457	3804933	1					
ANR	3805061	ExpressionStatement	len = 2	344:8:9161:9168	3804933	0	True				
ANR	3805062	AssignmentExpression	len = 2		3804933	0		=			
ANR	3805063	Identifier	len		3804933	0					
ANR	3805064	PrimaryExpression	2		3804933	1					
ANR	3805065	ExpressionStatement	"name = ""ON"""	345:8:9178:9189	3804933	1	True				
ANR	3805066	AssignmentExpression	"name = ""ON"""		3804933	0		=			
ANR	3805067	Identifier	name		3804933	0					
ANR	3805068	PrimaryExpression	"""ON"""		3804933	1					
ANR	3805069	ForStatement	for ( i = 0 ; i < NUMPROPS ; i ++ )		3804933	5					
ANR	3805070	ForInit	i = 0 ;	348:9:9207:9212	3804933	0	True				
ANR	3805071	AssignmentExpression	i = 0		3804933	0		=			
ANR	3805072	Identifier	i		3804933	0					
ANR	3805073	PrimaryExpression	0		3804933	1					
ANR	3805074	Condition	i < NUMPROPS	348:16:9214:9225	3804933	1	True				
ANR	3805075	RelationalExpression	i < NUMPROPS		3804933	0		<			
ANR	3805076	Identifier	i		3804933	0					
ANR	3805077	Identifier	NUMPROPS		3804933	1					
ANR	3805078	PostIncDecOperationExpression	i ++	348:30:9228:9230	3804933	2	True				
ANR	3805079	Identifier	i		3804933	0					
ANR	3805080	IncDec	++		3804933	1					
ANR	3805081	CompoundStatement		25:35:666:666	3804933	3					
ANR	3805082	IfStatement	"if ( props [ i ] . len == len && memcmp ( props [ i ] . name , name , len ) == 0 )"		3804933	0					
ANR	3805083	Condition	"props [ i ] . len == len && memcmp ( props [ i ] . name , name , len ) == 0"	349:12:9247:9306	3804933	0	True				
ANR	3805084	AndExpression	"props [ i ] . len == len && memcmp ( props [ i ] . name , name , len ) == 0"		3804933	0		&&			
ANR	3805085	EqualityExpression	props [ i ] . len == len		3804933	0		==			
ANR	3805086	MemberAccess	props [ i ] . len		3804933	0					
ANR	3805087	ArrayIndexing	props [ i ]		3804933	0					
ANR	3805088	Identifier	props		3804933	0					
ANR	3805089	Identifier	i		3804933	1					
ANR	3805090	Identifier	len		3804933	1					
ANR	3805091	Identifier	len		3804933	1					
ANR	3805092	EqualityExpression	"memcmp ( props [ i ] . name , name , len ) == 0"		3804933	1		==			
ANR	3805093	CallExpression	"memcmp ( props [ i ] . name , name , len )"		3804933	0					
ANR	3805094	Callee	memcmp		3804933	0					
ANR	3805095	Identifier	memcmp		3804933	0					
ANR	3805096	ArgumentList	props [ i ] . name		3804933	1					
ANR	3805097	Argument	props [ i ] . name		3804933	0					
ANR	3805098	MemberAccess	props [ i ] . name		3804933	0					
ANR	3805099	ArrayIndexing	props [ i ]		3804933	0					
ANR	3805100	Identifier	props		3804933	0					
ANR	3805101	Identifier	i		3804933	1					
ANR	3805102	Identifier	name		3804933	1					
ANR	3805103	Argument	name		3804933	1					
ANR	3805104	Identifier	name		3804933	0					
ANR	3805105	Argument	len		3804933	2					
ANR	3805106	Identifier	len		3804933	0					
ANR	3805107	PrimaryExpression	0		3804933	1					
ANR	3805108	BreakStatement	break ;	350:10:9319:9324	3804933	1	True				
ANR	3805109	IfStatement	if ( i == NUMPROPS )		3804933	6					
ANR	3805110	Condition	i == NUMPROPS	353:8:9341:9353	3804933	0	True				
ANR	3805111	EqualityExpression	i == NUMPROPS		3804933	0		==			
ANR	3805112	Identifier	i		3804933	0					
ANR	3805113	Identifier	NUMPROPS		3804933	1					
ANR	3805114	ReturnStatement	return ;	354:6:9362:9368	3804933	1	True				
ANR	3805115	ExpressionStatement	rlp = & proptbl [ i ]	359:4:9440:9457	3804933	7	True				
ANR	3805116	AssignmentExpression	rlp = & proptbl [ i ]		3804933	0		=			
ANR	3805117	Identifier	rlp		3804933	0					
ANR	3805118	UnaryOperationExpression	& proptbl [ i ]		3804933	1					
ANR	3805119	UnaryOperator	&		3804933	0					
ANR	3805120	ArrayIndexing	proptbl [ i ]		3804933	1					
ANR	3805121	Identifier	proptbl		3804933	0					
ANR	3805122	Identifier	i		3804933	1					
ANR	3805123	IfStatement	if ( rlp -> used == rlp -> size )		3804933	8					
ANR	3805124	Condition	rlp -> used == rlp -> size	364:8:9526:9547	3804933	0	True				
ANR	3805125	EqualityExpression	rlp -> used == rlp -> size		3804933	0		==			
ANR	3805126	PtrMemberAccess	rlp -> used		3804933	0					
ANR	3805127	Identifier	rlp		3804933	0					
ANR	3805128	Identifier	used		3804933	1					
ANR	3805129	PtrMemberAccess	rlp -> size		3804933	1					
ANR	3805130	Identifier	rlp		3804933	0					
ANR	3805131	Identifier	size		3804933	1					
ANR	3805132	CompoundStatement		41:32:983:983	3804933	1					
ANR	3805133	IfStatement	if ( rlp -> size == 0 )		3804933	0					
ANR	3805134	Condition	rlp -> size == 0	365:12:9564:9577	3804933	0	True				
ANR	3805135	EqualityExpression	rlp -> size == 0		3804933	0		==			
ANR	3805136	PtrMemberAccess	rlp -> size		3804933	0					
ANR	3805137	Identifier	rlp		3804933	0					
ANR	3805138	Identifier	size		3804933	1					
ANR	3805139	PrimaryExpression	0		3804933	1					
ANR	3805140	ExpressionStatement	rlp -> ranges = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) << 3 )	366:10:9590:9660	3804933	1	True				
ANR	3805141	AssignmentExpression	rlp -> ranges = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) << 3 )		3804933	0		=			
ANR	3805142	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805143	Identifier	rlp		3804933	0					
ANR	3805144	Identifier	ranges		3804933	1					
ANR	3805145	CastExpression	( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) << 3 )		3804933	1					
ANR	3805146	CastTarget	ac_uint4 *		3804933	0					
ANR	3805147	CallExpression	malloc ( sizeof ( ac_uint4 ) << 3 )		3804933	1					
ANR	3805148	Callee	malloc		3804933	0					
ANR	3805149	Identifier	malloc		3804933	0					
ANR	3805150	ArgumentList	sizeof ( ac_uint4 ) << 3		3804933	1					
ANR	3805151	Argument	sizeof ( ac_uint4 ) << 3		3804933	0					
ANR	3805152	ShiftExpression	sizeof ( ac_uint4 ) << 3		3804933	0		<<			
ANR	3805153	SizeofExpression	sizeof ( ac_uint4 )		3804933	0					
ANR	3805154	Sizeof	sizeof		3804933	0					
ANR	3805155	SizeofOperand	ac_uint4		3804933	1					
ANR	3805156	PrimaryExpression	3		3804933	1					
ANR	3805157	ElseStatement	else		3804933	0					
ANR	3805158	ExpressionStatement	"rlp -> ranges = ( ac_uint4 * ) realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"	369:10:9685:9813	3804933	0	True				
ANR	3805159	AssignmentExpression	"rlp -> ranges = ( ac_uint4 * ) realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"		3804933	0		=			
ANR	3805160	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805161	Identifier	rlp		3804933	0					
ANR	3805162	Identifier	ranges		3804933	1					
ANR	3805163	CastExpression	"( ac_uint4 * ) realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"		3804933	1					
ANR	3805164	CastTarget	ac_uint4 *		3804933	0					
ANR	3805165	CallExpression	"realloc ( ( char * ) rlp -> ranges , sizeof ( ac_uint4 ) * ( rlp -> size + 8 ) )"		3804933	1					
ANR	3805166	Callee	realloc		3804933	0					
ANR	3805167	Identifier	realloc		3804933	0					
ANR	3805168	ArgumentList	( char * ) rlp -> ranges		3804933	1					
ANR	3805169	Argument	( char * ) rlp -> ranges		3804933	0					
ANR	3805170	CastExpression	( char * ) rlp -> ranges		3804933	0					
ANR	3805171	CastTarget	char *		3804933	0					
ANR	3805172	PtrMemberAccess	rlp -> ranges		3804933	1					
ANR	3805173	Identifier	rlp		3804933	0					
ANR	3805174	Identifier	ranges		3804933	1					
ANR	3805175	Argument	sizeof ( ac_uint4 ) * ( rlp -> size + 8 )		3804933	1					
ANR	3805176	MultiplicativeExpression	sizeof ( ac_uint4 ) * ( rlp -> size + 8 )		3804933	0		*			
ANR	3805177	SizeofExpression	sizeof ( ac_uint4 )		3804933	0					
ANR	3805178	Sizeof	sizeof		3804933	0					
ANR	3805179	SizeofOperand	ac_uint4		3804933	1					
ANR	3805180	AdditiveExpression	rlp -> size + 8		3804933	1		+			
ANR	3805181	PtrMemberAccess	rlp -> size		3804933	0					
ANR	3805182	Identifier	rlp		3804933	0					
ANR	3805183	Identifier	size		3804933	1					
ANR	3805184	PrimaryExpression	8		3804933	1					
ANR	3805185	ExpressionStatement	rlp -> size += 8	372:8:9823:9837	3804933	1	True				
ANR	3805186	AssignmentExpression	rlp -> size += 8		3804933	0		+=			
ANR	3805187	PtrMemberAccess	rlp -> size		3804933	0					
ANR	3805188	Identifier	rlp		3804933	0					
ANR	3805189	Identifier	size		3804933	1					
ANR	3805190	PrimaryExpression	8		3804933	1					
ANR	3805191	IfStatement	if ( rlp -> used == 0 )		3804933	9					
ANR	3805192	Condition	rlp -> used == 0	379:8:9957:9970	3804933	0	True				
ANR	3805193	EqualityExpression	rlp -> used == 0		3804933	0		==			
ANR	3805194	PtrMemberAccess	rlp -> used		3804933	0					
ANR	3805195	Identifier	rlp		3804933	0					
ANR	3805196	Identifier	used		3804933	1					
ANR	3805197	PrimaryExpression	0		3804933	1					
ANR	3805198	CompoundStatement		56:24:1406:1406	3804933	1					
ANR	3805199	ExpressionStatement	rlp -> ranges [ 0 ] = rlp -> ranges [ 1 ] = c	380:8:9983:10018	3804933	0	True				
ANR	3805200	AssignmentExpression	rlp -> ranges [ 0 ] = rlp -> ranges [ 1 ] = c		3804933	0		=			
ANR	3805201	ArrayIndexing	rlp -> ranges [ 0 ]		3804933	0					
ANR	3805202	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805203	Identifier	rlp		3804933	0					
ANR	3805204	Identifier	ranges		3804933	1					
ANR	3805205	PrimaryExpression	0		3804933	1					
ANR	3805206	AssignmentExpression	rlp -> ranges [ 1 ] = c		3804933	1		=			
ANR	3805207	ArrayIndexing	rlp -> ranges [ 1 ]		3804933	0					
ANR	3805208	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805209	Identifier	rlp		3804933	0					
ANR	3805210	Identifier	ranges		3804933	1					
ANR	3805211	PrimaryExpression	1		3804933	1					
ANR	3805212	Identifier	c		3804933	1					
ANR	3805213	ExpressionStatement	rlp -> used += 2	381:8:10028:10042	3804933	1	True				
ANR	3805214	AssignmentExpression	rlp -> used += 2		3804933	0		+=			
ANR	3805215	PtrMemberAccess	rlp -> used		3804933	0					
ANR	3805216	Identifier	rlp		3804933	0					
ANR	3805217	Identifier	used		3804933	1					
ANR	3805218	PrimaryExpression	2		3804933	1					
ANR	3805219	ReturnStatement	return ;	382:8:10052:10058	3804933	2	True				
ANR	3805220	ExpressionStatement	j = rlp -> used - 1	389:4:10181:10198	3804933	10	True				
ANR	3805221	AssignmentExpression	j = rlp -> used - 1		3804933	0		=			
ANR	3805222	Identifier	j		3804933	0					
ANR	3805223	AdditiveExpression	rlp -> used - 1		3804933	1		-			
ANR	3805224	PtrMemberAccess	rlp -> used		3804933	0					
ANR	3805225	Identifier	rlp		3804933	0					
ANR	3805226	Identifier	used		3804933	1					
ANR	3805227	PrimaryExpression	1		3804933	1					
ANR	3805228	ExpressionStatement	e = rlp -> ranges [ j ]	390:4:10204:10222	3804933	11	True				
ANR	3805229	AssignmentExpression	e = rlp -> ranges [ j ]		3804933	0		=			
ANR	3805230	Identifier	e		3804933	0					
ANR	3805231	ArrayIndexing	rlp -> ranges [ j ]		3804933	1					
ANR	3805232	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805233	Identifier	rlp		3804933	0					
ANR	3805234	Identifier	ranges		3804933	1					
ANR	3805235	Identifier	j		3804933	1					
ANR	3805236	ExpressionStatement	s = rlp -> ranges [ j - 1 ]	391:4:10228:10250	3804933	12	True				
ANR	3805237	AssignmentExpression	s = rlp -> ranges [ j - 1 ]		3804933	0		=			
ANR	3805238	Identifier	s		3804933	0					
ANR	3805239	ArrayIndexing	rlp -> ranges [ j - 1 ]		3804933	1					
ANR	3805240	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805241	Identifier	rlp		3804933	0					
ANR	3805242	Identifier	ranges		3804933	1					
ANR	3805243	AdditiveExpression	j - 1		3804933	1		-			
ANR	3805244	Identifier	j		3804933	0					
ANR	3805245	PrimaryExpression	1		3804933	1					
ANR	3805246	IfStatement	if ( c == e + 1 )		3804933	13					
ANR	3805247	Condition	c == e + 1	393:8:10261:10270	3804933	0	True				
ANR	3805248	EqualityExpression	c == e + 1		3804933	0		==			
ANR	3805249	Identifier	c		3804933	0					
ANR	3805250	AdditiveExpression	e + 1		3804933	1		+			
ANR	3805251	Identifier	e		3804933	0					
ANR	3805252	PrimaryExpression	1		3804933	1					
ANR	3805253	CompoundStatement		70:20:1706:1706	3804933	1					
ANR	3805254	ExpressionStatement	rlp -> ranges [ j ] = c	397:8:10340:10358	3804933	0	True				
ANR	3805255	AssignmentExpression	rlp -> ranges [ j ] = c		3804933	0		=			
ANR	3805256	ArrayIndexing	rlp -> ranges [ j ]		3804933	0					
ANR	3805257	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805258	Identifier	rlp		3804933	0					
ANR	3805259	Identifier	ranges		3804933	1					
ANR	3805260	Identifier	j		3804933	1					
ANR	3805261	Identifier	c		3804933	1					
ANR	3805262	ReturnStatement	return ;	398:8:10368:10374	3804933	1	True				
ANR	3805263	IfStatement	if ( c > e + 1 )		3804933	14					
ANR	3805264	Condition	c > e + 1	401:8:10391:10399	3804933	0	True				
ANR	3805265	RelationalExpression	c > e + 1		3804933	0		>			
ANR	3805266	Identifier	c		3804933	0					
ANR	3805267	AdditiveExpression	e + 1		3804933	1		+			
ANR	3805268	Identifier	e		3804933	0					
ANR	3805269	PrimaryExpression	1		3804933	1					
ANR	3805270	CompoundStatement		78:19:1835:1835	3804933	1					
ANR	3805271	ExpressionStatement	j = rlp -> used	405:8:10478:10491	3804933	0	True				
ANR	3805272	AssignmentExpression	j = rlp -> used		3804933	0		=			
ANR	3805273	Identifier	j		3804933	0					
ANR	3805274	PtrMemberAccess	rlp -> used		3804933	1					
ANR	3805275	Identifier	rlp		3804933	0					
ANR	3805276	Identifier	used		3804933	1					
ANR	3805277	ExpressionStatement	rlp -> ranges [ j ] = rlp -> ranges [ j + 1 ] = c	406:8:10501:10540	3804933	1	True				
ANR	3805278	AssignmentExpression	rlp -> ranges [ j ] = rlp -> ranges [ j + 1 ] = c		3804933	0		=			
ANR	3805279	ArrayIndexing	rlp -> ranges [ j ]		3804933	0					
ANR	3805280	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805281	Identifier	rlp		3804933	0					
ANR	3805282	Identifier	ranges		3804933	1					
ANR	3805283	Identifier	j		3804933	1					
ANR	3805284	AssignmentExpression	rlp -> ranges [ j + 1 ] = c		3804933	1		=			
ANR	3805285	ArrayIndexing	rlp -> ranges [ j + 1 ]		3804933	0					
ANR	3805286	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805287	Identifier	rlp		3804933	0					
ANR	3805288	Identifier	ranges		3804933	1					
ANR	3805289	AdditiveExpression	j + 1		3804933	1		+			
ANR	3805290	Identifier	j		3804933	0					
ANR	3805291	PrimaryExpression	1		3804933	1					
ANR	3805292	Identifier	c		3804933	1					
ANR	3805293	ExpressionStatement	rlp -> used += 2	407:8:10550:10564	3804933	2	True				
ANR	3805294	AssignmentExpression	rlp -> used += 2		3804933	0		+=			
ANR	3805295	PtrMemberAccess	rlp -> used		3804933	0					
ANR	3805296	Identifier	rlp		3804933	0					
ANR	3805297	Identifier	used		3804933	1					
ANR	3805298	PrimaryExpression	2		3804933	1					
ANR	3805299	ReturnStatement	return ;	408:8:10574:10580	3804933	3	True				
ANR	3805300	IfStatement	if ( c >= s )		3804933	15					
ANR	3805301	Condition	c >= s	411:8:10597:10602	3804933	0	True				
ANR	3805302	RelationalExpression	c >= s		3804933	0		>=			
ANR	3805303	Identifier	c		3804933	0					
ANR	3805304	Identifier	s		3804933	1					
ANR	3805305	ReturnStatement	return ;	415:6:10708:10714	3804933	1	True				
ANR	3805306	ForStatement	for ( i = 0 ; i < rlp -> used && c > rlp -> ranges [ i + 1 ] + 1 ; i += 2 )		3804933	16					
ANR	3805307	ForInit	i = 0 ;	421:9:10857:10862	3804933	0	True				
ANR	3805308	AssignmentExpression	i = 0		3804933	0		=			
ANR	3805309	Identifier	i		3804933	0					
ANR	3805310	PrimaryExpression	0		3804933	1					
ANR	3805311	Condition	i < rlp -> used && c > rlp -> ranges [ i + 1 ] + 1	422:9:10873:10915	3804933	1	True				
ANR	3805312	AndExpression	i < rlp -> used && c > rlp -> ranges [ i + 1 ] + 1		3804933	0		&&			
ANR	3805313	RelationalExpression	i < rlp -> used		3804933	0		<			
ANR	3805314	Identifier	i		3804933	0					
ANR	3805315	PtrMemberAccess	rlp -> used		3804933	1					
ANR	3805316	Identifier	rlp		3804933	0					
ANR	3805317	Identifier	used		3804933	1					
ANR	3805318	RelationalExpression	c > rlp -> ranges [ i + 1 ] + 1		3804933	1		>			
ANR	3805319	Identifier	c		3804933	0					
ANR	3805320	AdditiveExpression	rlp -> ranges [ i + 1 ] + 1		3804933	1		+			
ANR	3805321	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804933	0					
ANR	3805322	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805323	Identifier	rlp		3804933	0					
ANR	3805324	Identifier	ranges		3804933	1					
ANR	3805325	AdditiveExpression	i + 1		3804933	1		+			
ANR	3805326	Identifier	i		3804933	0					
ANR	3805327	PrimaryExpression	1		3804933	1					
ANR	3805328	PrimaryExpression	1		3804933	1					
ANR	3805329	AssignmentExpression	i += 2	422:54:10918:10923	3804933	2	True	+=			
ANR	3805330	Identifier	i		3804933	0					
ANR	3805331	PrimaryExpression	2		3804933	1					
ANR	3805332	ExpressionStatement		422:62:10926:10926	3804933	3	True				
ANR	3805333	ExpressionStatement	s = rlp -> ranges [ i ]	424:4:10933:10951	3804933	17	True				
ANR	3805334	AssignmentExpression	s = rlp -> ranges [ i ]		3804933	0		=			
ANR	3805335	Identifier	s		3804933	0					
ANR	3805336	ArrayIndexing	rlp -> ranges [ i ]		3804933	1					
ANR	3805337	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805338	Identifier	rlp		3804933	0					
ANR	3805339	Identifier	ranges		3804933	1					
ANR	3805340	Identifier	i		3804933	1					
ANR	3805341	ExpressionStatement	e = rlp -> ranges [ i + 1 ]	425:4:10957:10979	3804933	18	True				
ANR	3805342	AssignmentExpression	e = rlp -> ranges [ i + 1 ]		3804933	0		=			
ANR	3805343	Identifier	e		3804933	0					
ANR	3805344	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804933	1					
ANR	3805345	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805346	Identifier	rlp		3804933	0					
ANR	3805347	Identifier	ranges		3804933	1					
ANR	3805348	AdditiveExpression	i + 1		3804933	1		+			
ANR	3805349	Identifier	i		3804933	0					
ANR	3805350	PrimaryExpression	1		3804933	1					
ANR	3805351	IfStatement	if ( c == e + 1 )		3804933	19					
ANR	3805352	Condition	c == e + 1	427:8:10990:10999	3804933	0	True				
ANR	3805353	EqualityExpression	c == e + 1		3804933	0		==			
ANR	3805354	Identifier	c		3804933	0					
ANR	3805355	AdditiveExpression	e + 1		3804933	1		+			
ANR	3805356	Identifier	e		3804933	0					
ANR	3805357	PrimaryExpression	1		3804933	1					
ANR	3805358	ExpressionStatement	rlp -> ranges [ i + 1 ] = c	431:6:11069:11091	3804933	1	True				
ANR	3805359	AssignmentExpression	rlp -> ranges [ i + 1 ] = c		3804933	0		=			
ANR	3805360	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804933	0					
ANR	3805361	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805362	Identifier	rlp		3804933	0					
ANR	3805363	Identifier	ranges		3804933	1					
ANR	3805364	AdditiveExpression	i + 1		3804933	1		+			
ANR	3805365	Identifier	i		3804933	0					
ANR	3805366	PrimaryExpression	1		3804933	1					
ANR	3805367	Identifier	c		3804933	1					
ANR	3805368	ElseStatement	else		3804933	0					
ANR	3805369	IfStatement	if ( c < s )		3804933	0					
ANR	3805370	Condition	c < s	432:13:11106:11110	3804933	0	True				
ANR	3805371	RelationalExpression	c < s		3804933	0		<			
ANR	3805372	Identifier	c		3804933	0					
ANR	3805373	Identifier	s		3804933	1					
ANR	3805374	CompoundStatement		109:20:2546:2546	3804933	1					
ANR	3805375	ForStatement	for ( j = rlp -> used ; j > i ; j -= 2 )		3804933	0					
ANR	3805376	ForInit	j = rlp -> used ;	437:13:11284:11297	3804933	0	True				
ANR	3805377	AssignmentExpression	j = rlp -> used		3804933	0		=			
ANR	3805378	Identifier	j		3804933	0					
ANR	3805379	PtrMemberAccess	rlp -> used		3804933	1					
ANR	3805380	Identifier	rlp		3804933	0					
ANR	3805381	Identifier	used		3804933	1					
ANR	3805382	Condition	j > i	437:28:11299:11303	3804933	1	True				
ANR	3805383	RelationalExpression	j > i		3804933	0		>			
ANR	3805384	Identifier	j		3804933	0					
ANR	3805385	Identifier	i		3804933	1					
ANR	3805386	AssignmentExpression	j -= 2	437:35:11306:11311	3804933	2	True	-=			
ANR	3805387	Identifier	j		3804933	0					
ANR	3805388	PrimaryExpression	2		3804933	1					
ANR	3805389	CompoundStatement		114:43:2747:2747	3804933	3					
ANR	3805390	ExpressionStatement	rlp -> ranges [ j ] = rlp -> ranges [ j - 2 ]	438:12:11328:11363	3804933	0	True				
ANR	3805391	AssignmentExpression	rlp -> ranges [ j ] = rlp -> ranges [ j - 2 ]		3804933	0		=			
ANR	3805392	ArrayIndexing	rlp -> ranges [ j ]		3804933	0					
ANR	3805393	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805394	Identifier	rlp		3804933	0					
ANR	3805395	Identifier	ranges		3804933	1					
ANR	3805396	Identifier	j		3804933	1					
ANR	3805397	ArrayIndexing	rlp -> ranges [ j - 2 ]		3804933	1					
ANR	3805398	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805399	Identifier	rlp		3804933	0					
ANR	3805400	Identifier	ranges		3804933	1					
ANR	3805401	AdditiveExpression	j - 2		3804933	1		-			
ANR	3805402	Identifier	j		3804933	0					
ANR	3805403	PrimaryExpression	2		3804933	1					
ANR	3805404	ExpressionStatement	rlp -> ranges [ j + 1 ] = rlp -> ranges [ j - 1 ]	439:12:11377:11416	3804933	1	True				
ANR	3805405	AssignmentExpression	rlp -> ranges [ j + 1 ] = rlp -> ranges [ j - 1 ]		3804933	0		=			
ANR	3805406	ArrayIndexing	rlp -> ranges [ j + 1 ]		3804933	0					
ANR	3805407	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805408	Identifier	rlp		3804933	0					
ANR	3805409	Identifier	ranges		3804933	1					
ANR	3805410	AdditiveExpression	j + 1		3804933	1		+			
ANR	3805411	Identifier	j		3804933	0					
ANR	3805412	PrimaryExpression	1		3804933	1					
ANR	3805413	ArrayIndexing	rlp -> ranges [ j - 1 ]		3804933	1					
ANR	3805414	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805415	Identifier	rlp		3804933	0					
ANR	3805416	Identifier	ranges		3804933	1					
ANR	3805417	AdditiveExpression	j - 1		3804933	1		-			
ANR	3805418	Identifier	j		3804933	0					
ANR	3805419	PrimaryExpression	1		3804933	1					
ANR	3805420	ExpressionStatement	rlp -> ranges [ i ] = rlp -> ranges [ i + 1 ] = c	441:8:11436:11475	3804933	1	True				
ANR	3805421	AssignmentExpression	rlp -> ranges [ i ] = rlp -> ranges [ i + 1 ] = c		3804933	0		=			
ANR	3805422	ArrayIndexing	rlp -> ranges [ i ]		3804933	0					
ANR	3805423	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805424	Identifier	rlp		3804933	0					
ANR	3805425	Identifier	ranges		3804933	1					
ANR	3805426	Identifier	i		3804933	1					
ANR	3805427	AssignmentExpression	rlp -> ranges [ i + 1 ] = c		3804933	1		=			
ANR	3805428	ArrayIndexing	rlp -> ranges [ i + 1 ]		3804933	0					
ANR	3805429	PtrMemberAccess	rlp -> ranges		3804933	0					
ANR	3805430	Identifier	rlp		3804933	0					
ANR	3805431	Identifier	ranges		3804933	1					
ANR	3805432	AdditiveExpression	i + 1		3804933	1		+			
ANR	3805433	Identifier	i		3804933	0					
ANR	3805434	PrimaryExpression	1		3804933	1					
ANR	3805435	Identifier	c		3804933	1					
ANR	3805436	ExpressionStatement	rlp -> used += 2	443:8:11486:11500	3804933	2	True				
ANR	3805437	AssignmentExpression	rlp -> used += 2		3804933	0		+=			
ANR	3805438	PtrMemberAccess	rlp -> used		3804933	0					
ANR	3805439	Identifier	rlp		3804933	0					
ANR	3805440	Identifier	used		3804933	1					
ANR	3805441	PrimaryExpression	2		3804933	1					
ANR	3805442	ReturnType	static void		3804933	1					
ANR	3805443	Identifier	ordered_range_insert		3804933	2					
ANR	3805444	ParameterList	"ac_uint4 c , char * name , int len"		3804933	3					
ANR	3805445	Parameter	ac_uint4 c	323:21:8533:8542	3804933	0	True				
ANR	3805446	ParameterType	ac_uint4		3804933	0					
ANR	3805447	Identifier	c		3804933	1					
ANR	3805448	Parameter	char * name	323:33:8545:8554	3804933	1	True				
ANR	3805449	ParameterType	char *		3804933	0					
ANR	3805450	Identifier	name		3804933	1					
ANR	3805451	Parameter	int len	323:45:8557:8563	3804933	2	True				
ANR	3805452	ParameterType	int		3804933	0					
ANR	3805453	Identifier	len		3804933	1					
ANR	3805454	CFGEntryNode	ENTRY		3804933		True				
ANR	3805455	CFGExitNode	EXIT		3804933		True				
ANR	3805456	Symbol	rlp -> size		3804933						
ANR	3805457	Symbol	rlp -> used		3804933						
ANR	3805458	Symbol	rlp -> ranges		3804933						
ANR	3805459	Symbol	* * rlp		3804933						
ANR	3805460	Symbol	realloc		3804933						
ANR	3805461	Symbol	memcmp		3804933						
ANR	3805462	Symbol	len		3804933						
ANR	3805463	Symbol	* rlp		3804933						
ANR	3805464	Symbol	malloc		3804933						
ANR	3805465	Symbol	c		3804933						
ANR	3805466	Symbol	e		3804933						
ANR	3805467	Symbol	props [ i ] . name		3804933						
ANR	3805468	Symbol	proptbl		3804933						
ANR	3805469	Symbol	i		3804933						
ANR	3805470	Symbol	j		3804933						
ANR	3805471	Symbol	NUMPROPS		3804933						
ANR	3805472	Symbol	props		3804933						
ANR	3805473	Symbol	* rlp -> ranges		3804933						
ANR	3805474	Symbol	s		3804933						
ANR	3805475	Symbol	* i		3804933						
ANR	3805476	Symbol	* j		3804933						
ANR	3805477	Symbol	rlp		3804933						
ANR	3805478	Symbol	name		3804933						
ANR	3805479	Symbol	* props		3804933						
ANR	3805480	Symbol	props [ i ] . len		3804933						
ANR	3805481	Function	add_decomp	447:0:11511:13957							
ANR	3805482	FunctionDef	"add_decomp (ac_uint4 code , short compat)"		3805481	0					
ANR	3805483	CompoundStatement		449:0:11563:13957	3805481	0					
ANR	3805484	IdentifierDeclStatement	"ac_uint4 i , j , size ;"	450:4:11569:11588	3805481	0	True				
ANR	3805485	IdentifierDecl	i		3805481	0					
ANR	3805486	IdentifierDeclType	ac_uint4		3805481	0					
ANR	3805487	Identifier	i		3805481	1					
ANR	3805488	IdentifierDecl	j		3805481	1					
ANR	3805489	IdentifierDeclType	ac_uint4		3805481	0					
ANR	3805490	Identifier	j		3805481	1					
ANR	3805491	IdentifierDecl	size		3805481	2					
ANR	3805492	IdentifierDeclType	ac_uint4		3805481	0					
ANR	3805493	Identifier	size		3805481	1					
ANR	3805494	IdentifierDeclStatement	_decomp_t * * pdecomps ;	451:4:11594:11614	3805481	1	True				
ANR	3805495	IdentifierDecl	* * pdecomps		3805481	0					
ANR	3805496	IdentifierDeclType	_decomp_t * *		3805481	0					
ANR	3805497	Identifier	pdecomps		3805481	1					
ANR	3805498	IdentifierDeclStatement	ac_uint4 * pdecomps_used ;	452:4:11620:11643	3805481	2	True				
ANR	3805499	IdentifierDecl	* pdecomps_used		3805481	0					
ANR	3805500	IdentifierDeclType	ac_uint4 *		3805481	0					
ANR	3805501	Identifier	pdecomps_used		3805481	1					
ANR	3805502	IdentifierDeclStatement	ac_uint4 * pdecomps_size ;	453:4:11649:11672	3805481	3	True				
ANR	3805503	IdentifierDecl	* pdecomps_size		3805481	0					
ANR	3805504	IdentifierDeclType	ac_uint4 *		3805481	0					
ANR	3805505	Identifier	pdecomps_size		3805481	1					
ANR	3805506	IfStatement	if ( compat )		3805481	4					
ANR	3805507	Condition	compat	455:8:11683:11688	3805481	0	True				
ANR	3805508	Identifier	compat		3805481	0					
ANR	3805509	CompoundStatement		7:16:127:127	3805481	1					
ANR	3805510	ExpressionStatement	pdecomps = & kdecomps	456:1:11694:11714	3805481	0	True				
ANR	3805511	AssignmentExpression	pdecomps = & kdecomps		3805481	0		=			
ANR	3805512	Identifier	pdecomps		3805481	0					
ANR	3805513	UnaryOperationExpression	& kdecomps		3805481	1					
ANR	3805514	UnaryOperator	&		3805481	0					
ANR	3805515	Identifier	kdecomps		3805481	1					
ANR	3805516	ExpressionStatement	pdecomps_used = & kdecomps_used	457:1:11717:11747	3805481	1	True				
ANR	3805517	AssignmentExpression	pdecomps_used = & kdecomps_used		3805481	0		=			
ANR	3805518	Identifier	pdecomps_used		3805481	0					
ANR	3805519	UnaryOperationExpression	& kdecomps_used		3805481	1					
ANR	3805520	UnaryOperator	&		3805481	0					
ANR	3805521	Identifier	kdecomps_used		3805481	1					
ANR	3805522	ExpressionStatement	pdecomps_size = & kdecomps_size	458:1:11750:11780	3805481	2	True				
ANR	3805523	AssignmentExpression	pdecomps_size = & kdecomps_size		3805481	0		=			
ANR	3805524	Identifier	pdecomps_size		3805481	0					
ANR	3805525	UnaryOperationExpression	& kdecomps_size		3805481	1					
ANR	3805526	UnaryOperator	&		3805481	0					
ANR	3805527	Identifier	kdecomps_size		3805481	1					
ANR	3805528	ElseStatement	else		3805481	0					
ANR	3805529	CompoundStatement		11:11:229:229	3805481	0					
ANR	3805530	ExpressionStatement	pdecomps = & decomps	460:1:11796:11815	3805481	0	True				
ANR	3805531	AssignmentExpression	pdecomps = & decomps		3805481	0		=			
ANR	3805532	Identifier	pdecomps		3805481	0					
ANR	3805533	UnaryOperationExpression	& decomps		3805481	1					
ANR	3805534	UnaryOperator	&		3805481	0					
ANR	3805535	Identifier	decomps		3805481	1					
ANR	3805536	ExpressionStatement	pdecomps_used = & decomps_used	461:1:11818:11847	3805481	1	True				
ANR	3805537	AssignmentExpression	pdecomps_used = & decomps_used		3805481	0		=			
ANR	3805538	Identifier	pdecomps_used		3805481	0					
ANR	3805539	UnaryOperationExpression	& decomps_used		3805481	1					
ANR	3805540	UnaryOperator	&		3805481	0					
ANR	3805541	Identifier	decomps_used		3805481	1					
ANR	3805542	ExpressionStatement	pdecomps_size = & decomps_size	462:1:11850:11879	3805481	2	True				
ANR	3805543	AssignmentExpression	pdecomps_size = & decomps_size		3805481	0		=			
ANR	3805544	Identifier	pdecomps_size		3805481	0					
ANR	3805545	UnaryOperationExpression	& decomps_size		3805481	1					
ANR	3805546	UnaryOperator	&		3805481	0					
ANR	3805547	Identifier	decomps_size		3805481	1					
ANR	3805548	IfStatement	if ( ! compat )		3805481	5					
ANR	3805549	Condition	! compat	468:8:11958:11964	3805481	0	True				
ANR	3805550	UnaryOperationExpression	! compat		3805481	0					
ANR	3805551	UnaryOperator	!		3805481	0					
ANR	3805552	Identifier	compat		3805481	1					
ANR	3805553	CompoundStatement		20:17:403:403	3805481	1					
ANR	3805554	ExpressionStatement	"ordered_range_insert ( code , ""Cm"" , 2 )"	469:1:11970:12005	3805481	0	True				
ANR	3805555	CallExpression	"ordered_range_insert ( code , ""Cm"" , 2 )"		3805481	0					
ANR	3805556	Callee	ordered_range_insert		3805481	0					
ANR	3805557	Identifier	ordered_range_insert		3805481	0					
ANR	3805558	ArgumentList	code		3805481	1					
ANR	3805559	Argument	code		3805481	0					
ANR	3805560	Identifier	code		3805481	0					
ANR	3805561	Argument	"""Cm"""		3805481	1					
ANR	3805562	PrimaryExpression	"""Cm"""		3805481	0					
ANR	3805563	Argument	2		3805481	2					
ANR	3805564	PrimaryExpression	2		3805481	0					
ANR	3805565	ForStatement	for ( i = 0 ; i < * pdecomps_used && code > ( * pdecomps ) [ i ] . code ; i ++ )		3805481	6					
ANR	3805566	ForInit	i = 0 ;	475:9:12086:12091	3805481	0	True				
ANR	3805567	AssignmentExpression	i = 0		3805481	0		=			
ANR	3805568	Identifier	i		3805481	0					
ANR	3805569	PrimaryExpression	0		3805481	1					
ANR	3805570	Condition	i < * pdecomps_used && code > ( * pdecomps ) [ i ] . code	475:16:12093:12140	3805481	1	True				
ANR	3805571	AndExpression	i < * pdecomps_used && code > ( * pdecomps ) [ i ] . code		3805481	0		&&			
ANR	3805572	RelationalExpression	i < * pdecomps_used		3805481	0		<			
ANR	3805573	Identifier	i		3805481	0					
ANR	3805574	UnaryOperationExpression	* pdecomps_used		3805481	1					
ANR	3805575	UnaryOperator	*		3805481	0					
ANR	3805576	Identifier	pdecomps_used		3805481	1					
ANR	3805577	RelationalExpression	code > ( * pdecomps ) [ i ] . code		3805481	1		>			
ANR	3805578	Identifier	code		3805481	0					
ANR	3805579	MemberAccess	( * pdecomps ) [ i ] . code		3805481	1					
ANR	3805580	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805581	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805582	UnaryOperator	*		3805481	0					
ANR	3805583	Identifier	pdecomps		3805481	1					
ANR	3805584	Identifier	i		3805481	1					
ANR	3805585	Identifier	code		3805481	1					
ANR	3805586	PostIncDecOperationExpression	i ++	475:66:12143:12145	3805481	2	True				
ANR	3805587	Identifier	i		3805481	0					
ANR	3805588	IncDec	++		3805481	1					
ANR	3805589	ExpressionStatement		475:71:12148:12148	3805481	3	True				
ANR	3805590	IfStatement	if ( * pdecomps_used == * pdecomps_size )		3805481	7					
ANR	3805591	Condition	* pdecomps_used == * pdecomps_size	480:8:12221:12252	3805481	0	True				
ANR	3805592	EqualityExpression	* pdecomps_used == * pdecomps_size		3805481	0		==			
ANR	3805593	UnaryOperationExpression	* pdecomps_used		3805481	0					
ANR	3805594	UnaryOperator	*		3805481	0					
ANR	3805595	Identifier	pdecomps_used		3805481	1					
ANR	3805596	UnaryOperationExpression	* pdecomps_size		3805481	1					
ANR	3805597	UnaryOperator	*		3805481	0					
ANR	3805598	Identifier	pdecomps_size		3805481	1					
ANR	3805599	CompoundStatement		32:42:691:691	3805481	1					
ANR	3805600	IfStatement	if ( * pdecomps_size == 0 )		3805481	0					
ANR	3805601	Condition	* pdecomps_size == 0	481:12:12269:12287	3805481	0	True				
ANR	3805602	EqualityExpression	* pdecomps_size == 0		3805481	0		==			
ANR	3805603	UnaryOperationExpression	* pdecomps_size		3805481	0					
ANR	3805604	UnaryOperator	*		3805481	0					
ANR	3805605	Identifier	pdecomps_size		3805481	1					
ANR	3805606	PrimaryExpression	0		3805481	1					
ANR	3805607	ExpressionStatement	* pdecomps = ( _decomp_t * ) malloc ( sizeof ( _decomp_t ) << 3 )	482:10:12300:12356	3805481	1	True				
ANR	3805608	AssignmentExpression	* pdecomps = ( _decomp_t * ) malloc ( sizeof ( _decomp_t ) << 3 )		3805481	0		=			
ANR	3805609	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805610	UnaryOperator	*		3805481	0					
ANR	3805611	Identifier	pdecomps		3805481	1					
ANR	3805612	CastExpression	( _decomp_t * ) malloc ( sizeof ( _decomp_t ) << 3 )		3805481	1					
ANR	3805613	CastTarget	_decomp_t *		3805481	0					
ANR	3805614	CallExpression	malloc ( sizeof ( _decomp_t ) << 3 )		3805481	1					
ANR	3805615	Callee	malloc		3805481	0					
ANR	3805616	Identifier	malloc		3805481	0					
ANR	3805617	ArgumentList	sizeof ( _decomp_t ) << 3		3805481	1					
ANR	3805618	Argument	sizeof ( _decomp_t ) << 3		3805481	0					
ANR	3805619	ShiftExpression	sizeof ( _decomp_t ) << 3		3805481	0		<<			
ANR	3805620	SizeofExpression	sizeof ( _decomp_t )		3805481	0					
ANR	3805621	Sizeof	sizeof		3805481	0					
ANR	3805622	SizeofOperand	_decomp_t		3805481	1					
ANR	3805623	PrimaryExpression	3		3805481	1					
ANR	3805624	ElseStatement	else		3805481	0					
ANR	3805625	ExpressionStatement	"* pdecomps = ( _decomp_t * ) realloc ( ( char * ) * pdecomps , sizeof ( _decomp_t ) * ( * pdecomps_size + 8 ) )"	484:10:12381:12512	3805481	0	True				
ANR	3805626	AssignmentExpression	"* pdecomps = ( _decomp_t * ) realloc ( ( char * ) * pdecomps , sizeof ( _decomp_t ) * ( * pdecomps_size + 8 ) )"		3805481	0		=			
ANR	3805627	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805628	UnaryOperator	*		3805481	0					
ANR	3805629	Identifier	pdecomps		3805481	1					
ANR	3805630	CastExpression	"( _decomp_t * ) realloc ( ( char * ) * pdecomps , sizeof ( _decomp_t ) * ( * pdecomps_size + 8 ) )"		3805481	1					
ANR	3805631	CastTarget	_decomp_t *		3805481	0					
ANR	3805632	CallExpression	"realloc ( ( char * ) * pdecomps , sizeof ( _decomp_t ) * ( * pdecomps_size + 8 ) )"		3805481	1					
ANR	3805633	Callee	realloc		3805481	0					
ANR	3805634	Identifier	realloc		3805481	0					
ANR	3805635	ArgumentList	( char * ) * pdecomps		3805481	1					
ANR	3805636	Argument	( char * ) * pdecomps		3805481	0					
ANR	3805637	CastExpression	( char * ) * pdecomps		3805481	0					
ANR	3805638	CastTarget	char *		3805481	0					
ANR	3805639	UnaryOperationExpression	* pdecomps		3805481	1					
ANR	3805640	UnaryOperator	*		3805481	0					
ANR	3805641	Identifier	pdecomps		3805481	1					
ANR	3805642	Argument	sizeof ( _decomp_t ) * ( * pdecomps_size + 8 )		3805481	1					
ANR	3805643	MultiplicativeExpression	sizeof ( _decomp_t ) * ( * pdecomps_size + 8 )		3805481	0		*			
ANR	3805644	SizeofExpression	sizeof ( _decomp_t )		3805481	0					
ANR	3805645	Sizeof	sizeof		3805481	0					
ANR	3805646	SizeofOperand	_decomp_t		3805481	1					
ANR	3805647	AdditiveExpression	* pdecomps_size + 8		3805481	1		+			
ANR	3805648	UnaryOperationExpression	* pdecomps_size		3805481	0					
ANR	3805649	UnaryOperator	*		3805481	0					
ANR	3805650	Identifier	pdecomps_size		3805481	1					
ANR	3805651	PrimaryExpression	8		3805481	1					
ANR	3805652	ExpressionStatement	"( void ) memset ( ( char * ) ( * pdecomps + * pdecomps_size ) , '\\0' , sizeof ( _decomp_t ) << 3 )"	487:8:12522:12626	3805481	1	True				
ANR	3805653	CastExpression	"( void ) memset ( ( char * ) ( * pdecomps + * pdecomps_size ) , '\\0' , sizeof ( _decomp_t ) << 3 )"		3805481	0					
ANR	3805654	CastTarget	void		3805481	0					
ANR	3805655	CallExpression	"memset ( ( char * ) ( * pdecomps + * pdecomps_size ) , '\\0' , sizeof ( _decomp_t ) << 3 )"		3805481	1					
ANR	3805656	Callee	memset		3805481	0					
ANR	3805657	Identifier	memset		3805481	0					
ANR	3805658	ArgumentList	( char * ) ( * pdecomps + * pdecomps_size )		3805481	1					
ANR	3805659	Argument	( char * ) ( * pdecomps + * pdecomps_size )		3805481	0					
ANR	3805660	CastExpression	( char * ) ( * pdecomps + * pdecomps_size )		3805481	0					
ANR	3805661	CastTarget	char *		3805481	0					
ANR	3805662	AdditiveExpression	* pdecomps + * pdecomps_size		3805481	1		+			
ANR	3805663	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805664	UnaryOperator	*		3805481	0					
ANR	3805665	Identifier	pdecomps		3805481	1					
ANR	3805666	UnaryOperationExpression	* pdecomps_size		3805481	1					
ANR	3805667	UnaryOperator	*		3805481	0					
ANR	3805668	Identifier	pdecomps_size		3805481	1					
ANR	3805669	Argument	'\\0'		3805481	1					
ANR	3805670	PrimaryExpression	'\\0'		3805481	0					
ANR	3805671	Argument	sizeof ( _decomp_t ) << 3		3805481	2					
ANR	3805672	ShiftExpression	sizeof ( _decomp_t ) << 3		3805481	0		<<			
ANR	3805673	SizeofExpression	sizeof ( _decomp_t )		3805481	0					
ANR	3805674	Sizeof	sizeof		3805481	0					
ANR	3805675	SizeofOperand	_decomp_t		3805481	1					
ANR	3805676	PrimaryExpression	3		3805481	1					
ANR	3805677	ExpressionStatement	* pdecomps_size += 8	489:8:12636:12655	3805481	2	True				
ANR	3805678	AssignmentExpression	* pdecomps_size += 8		3805481	0		+=			
ANR	3805679	UnaryOperationExpression	* pdecomps_size		3805481	0					
ANR	3805680	UnaryOperator	*		3805481	0					
ANR	3805681	Identifier	pdecomps_size		3805481	1					
ANR	3805682	PrimaryExpression	8		3805481	1					
ANR	3805683	IfStatement	if ( i < * pdecomps_used && code != ( * pdecomps ) [ i ] . code )		3805481	8					
ANR	3805684	Condition	i < * pdecomps_used && code != ( * pdecomps ) [ i ] . code	492:8:12672:12720	3805481	0	True				
ANR	3805685	AndExpression	i < * pdecomps_used && code != ( * pdecomps ) [ i ] . code		3805481	0		&&			
ANR	3805686	RelationalExpression	i < * pdecomps_used		3805481	0		<			
ANR	3805687	Identifier	i		3805481	0					
ANR	3805688	UnaryOperationExpression	* pdecomps_used		3805481	1					
ANR	3805689	UnaryOperator	*		3805481	0					
ANR	3805690	Identifier	pdecomps_used		3805481	1					
ANR	3805691	EqualityExpression	code != ( * pdecomps ) [ i ] . code		3805481	1		!=			
ANR	3805692	Identifier	code		3805481	0					
ANR	3805693	MemberAccess	( * pdecomps ) [ i ] . code		3805481	1					
ANR	3805694	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805695	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805696	UnaryOperator	*		3805481	0					
ANR	3805697	Identifier	pdecomps		3805481	1					
ANR	3805698	Identifier	i		3805481	1					
ANR	3805699	Identifier	code		3805481	1					
ANR	3805700	CompoundStatement		44:59:1159:1159	3805481	1					
ANR	3805701	ForStatement	for ( j = * pdecomps_used ; j > i ; j -- )		3805481	0					
ANR	3805702	ForInit	j = * pdecomps_used ;	496:13:12826:12844	3805481	0	True				
ANR	3805703	AssignmentExpression	j = * pdecomps_used		3805481	0		=			
ANR	3805704	Identifier	j		3805481	0					
ANR	3805705	UnaryOperationExpression	* pdecomps_used		3805481	1					
ANR	3805706	UnaryOperator	*		3805481	0					
ANR	3805707	Identifier	pdecomps_used		3805481	1					
ANR	3805708	Condition	j > i	496:33:12846:12850	3805481	1	True				
ANR	3805709	RelationalExpression	j > i		3805481	0		>			
ANR	3805710	Identifier	j		3805481	0					
ANR	3805711	Identifier	i		3805481	1					
ANR	3805712	PostIncDecOperationExpression	j --	496:40:12853:12855	3805481	2	True				
ANR	3805713	Identifier	j		3805481	0					
ANR	3805714	IncDec	--		3805481	1					
ANR	3805715	ExpressionStatement	"( void ) AC_MEMCPY ( ( char * ) & ( * pdecomps ) [ j ] , ( char * ) & ( * pdecomps ) [ j - 1 ] , sizeof ( _decomp_t ) )"	497:10:12868:12983	3805481	3	True				
ANR	3805716	CastExpression	"( void ) AC_MEMCPY ( ( char * ) & ( * pdecomps ) [ j ] , ( char * ) & ( * pdecomps ) [ j - 1 ] , sizeof ( _decomp_t ) )"		3805481	0					
ANR	3805717	CastTarget	void		3805481	0					
ANR	3805718	CallExpression	"AC_MEMCPY ( ( char * ) & ( * pdecomps ) [ j ] , ( char * ) & ( * pdecomps ) [ j - 1 ] , sizeof ( _decomp_t ) )"		3805481	1					
ANR	3805719	Callee	AC_MEMCPY		3805481	0					
ANR	3805720	Identifier	AC_MEMCPY		3805481	0					
ANR	3805721	ArgumentList	( char * ) & ( * pdecomps ) [ j ]		3805481	1					
ANR	3805722	Argument	( char * ) & ( * pdecomps ) [ j ]		3805481	0					
ANR	3805723	CastExpression	( char * ) & ( * pdecomps ) [ j ]		3805481	0					
ANR	3805724	CastTarget	char *		3805481	0					
ANR	3805725	UnaryOperationExpression	& ( * pdecomps ) [ j ]		3805481	1					
ANR	3805726	UnaryOperator	&		3805481	0					
ANR	3805727	ArrayIndexing	( * pdecomps ) [ j ]		3805481	1					
ANR	3805728	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805729	UnaryOperator	*		3805481	0					
ANR	3805730	Identifier	pdecomps		3805481	1					
ANR	3805731	Identifier	j		3805481	1					
ANR	3805732	Argument	( char * ) & ( * pdecomps ) [ j - 1 ]		3805481	1					
ANR	3805733	CastExpression	( char * ) & ( * pdecomps ) [ j - 1 ]		3805481	0					
ANR	3805734	CastTarget	char *		3805481	0					
ANR	3805735	UnaryOperationExpression	& ( * pdecomps ) [ j - 1 ]		3805481	1					
ANR	3805736	UnaryOperator	&		3805481	0					
ANR	3805737	ArrayIndexing	( * pdecomps ) [ j - 1 ]		3805481	1					
ANR	3805738	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805739	UnaryOperator	*		3805481	0					
ANR	3805740	Identifier	pdecomps		3805481	1					
ANR	3805741	AdditiveExpression	j - 1		3805481	1		-			
ANR	3805742	Identifier	j		3805481	0					
ANR	3805743	PrimaryExpression	1		3805481	1					
ANR	3805744	Argument	sizeof ( _decomp_t )		3805481	2					
ANR	3805745	SizeofExpression	sizeof ( _decomp_t )		3805481	0					
ANR	3805746	Sizeof	sizeof		3805481	0					
ANR	3805747	SizeofOperand	_decomp_t		3805481	1					
ANR	3805748	ExpressionStatement	size = dectmp_size + ( 4 - ( dectmp_size & 3 ) )	504:4:13053:13097	3805481	9	True				
ANR	3805749	AssignmentExpression	size = dectmp_size + ( 4 - ( dectmp_size & 3 ) )		3805481	0		=			
ANR	3805750	Identifier	size		3805481	0					
ANR	3805751	AdditiveExpression	dectmp_size + ( 4 - ( dectmp_size & 3 ) )		3805481	1		+			
ANR	3805752	Identifier	dectmp_size		3805481	0					
ANR	3805753	AdditiveExpression	4 - ( dectmp_size & 3 )		3805481	1		-			
ANR	3805754	PrimaryExpression	4		3805481	0					
ANR	3805755	BitAndExpression	dectmp_size & 3		3805481	1		&			
ANR	3805756	Identifier	dectmp_size		3805481	0					
ANR	3805757	PrimaryExpression	3		3805481	1					
ANR	3805758	IfStatement	if ( ( * pdecomps ) [ i ] . size < size )		3805481	10					
ANR	3805759	Condition	( * pdecomps ) [ i ] . size < size	505:8:13107:13132	3805481	0	True				
ANR	3805760	RelationalExpression	( * pdecomps ) [ i ] . size < size		3805481	0		<			
ANR	3805761	MemberAccess	( * pdecomps ) [ i ] . size		3805481	0					
ANR	3805762	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805763	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805764	UnaryOperator	*		3805481	0					
ANR	3805765	Identifier	pdecomps		3805481	1					
ANR	3805766	Identifier	i		3805481	1					
ANR	3805767	Identifier	size		3805481	1					
ANR	3805768	Identifier	size		3805481	1					
ANR	3805769	CompoundStatement		57:36:1571:1571	3805481	1					
ANR	3805770	IfStatement	if ( ( * pdecomps ) [ i ] . size == 0 )		3805481	0					
ANR	3805771	Condition	( * pdecomps ) [ i ] . size == 0	506:12:13149:13172	3805481	0	True				
ANR	3805772	EqualityExpression	( * pdecomps ) [ i ] . size == 0		3805481	0		==			
ANR	3805773	MemberAccess	( * pdecomps ) [ i ] . size		3805481	0					
ANR	3805774	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805775	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805776	UnaryOperator	*		3805481	0					
ANR	3805777	Identifier	pdecomps		3805481	1					
ANR	3805778	Identifier	i		3805481	1					
ANR	3805779	Identifier	size		3805481	1					
ANR	3805780	PrimaryExpression	0		3805481	1					
ANR	3805781	ExpressionStatement	( * pdecomps ) [ i ] . decomp = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) * size )	507:10:13185:13267	3805481	1	True				
ANR	3805782	AssignmentExpression	( * pdecomps ) [ i ] . decomp = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) * size )		3805481	0		=			
ANR	3805783	MemberAccess	( * pdecomps ) [ i ] . decomp		3805481	0					
ANR	3805784	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805785	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805786	UnaryOperator	*		3805481	0					
ANR	3805787	Identifier	pdecomps		3805481	1					
ANR	3805788	Identifier	i		3805481	1					
ANR	3805789	Identifier	decomp		3805481	1					
ANR	3805790	CastExpression	( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) * size )		3805481	1					
ANR	3805791	CastTarget	ac_uint4 *		3805481	0					
ANR	3805792	CallExpression	malloc ( sizeof ( ac_uint4 ) * size )		3805481	1					
ANR	3805793	Callee	malloc		3805481	0					
ANR	3805794	Identifier	malloc		3805481	0					
ANR	3805795	ArgumentList	sizeof ( ac_uint4 ) * size		3805481	1					
ANR	3805796	Argument	sizeof ( ac_uint4 ) * size		3805481	0					
ANR	3805797	MultiplicativeExpression	sizeof ( ac_uint4 ) * size		3805481	0		*			
ANR	3805798	SizeofExpression	sizeof ( ac_uint4 )		3805481	0					
ANR	3805799	Sizeof	sizeof		3805481	0					
ANR	3805800	SizeofOperand	ac_uint4		3805481	1					
ANR	3805801	Identifier	size		3805481	1					
ANR	3805802	ElseStatement	else		3805481	0					
ANR	3805803	ExpressionStatement	"( * pdecomps ) [ i ] . decomp = ( ac_uint4 * ) realloc ( ( char * ) ( * pdecomps ) [ i ] . decomp , sizeof ( ac_uint4 ) * size )"	510:10:13292:13429	3805481	0	True				
ANR	3805804	AssignmentExpression	"( * pdecomps ) [ i ] . decomp = ( ac_uint4 * ) realloc ( ( char * ) ( * pdecomps ) [ i ] . decomp , sizeof ( ac_uint4 ) * size )"		3805481	0		=			
ANR	3805805	MemberAccess	( * pdecomps ) [ i ] . decomp		3805481	0					
ANR	3805806	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805807	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805808	UnaryOperator	*		3805481	0					
ANR	3805809	Identifier	pdecomps		3805481	1					
ANR	3805810	Identifier	i		3805481	1					
ANR	3805811	Identifier	decomp		3805481	1					
ANR	3805812	CastExpression	"( ac_uint4 * ) realloc ( ( char * ) ( * pdecomps ) [ i ] . decomp , sizeof ( ac_uint4 ) * size )"		3805481	1					
ANR	3805813	CastTarget	ac_uint4 *		3805481	0					
ANR	3805814	CallExpression	"realloc ( ( char * ) ( * pdecomps ) [ i ] . decomp , sizeof ( ac_uint4 ) * size )"		3805481	1					
ANR	3805815	Callee	realloc		3805481	0					
ANR	3805816	Identifier	realloc		3805481	0					
ANR	3805817	ArgumentList	( char * ) ( * pdecomps ) [ i ] . decomp		3805481	1					
ANR	3805818	Argument	( char * ) ( * pdecomps ) [ i ] . decomp		3805481	0					
ANR	3805819	CastExpression	( char * ) ( * pdecomps ) [ i ] . decomp		3805481	0					
ANR	3805820	CastTarget	char *		3805481	0					
ANR	3805821	MemberAccess	( * pdecomps ) [ i ] . decomp		3805481	1					
ANR	3805822	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805823	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805824	UnaryOperator	*		3805481	0					
ANR	3805825	Identifier	pdecomps		3805481	1					
ANR	3805826	Identifier	i		3805481	1					
ANR	3805827	Identifier	decomp		3805481	1					
ANR	3805828	Argument	sizeof ( ac_uint4 ) * size		3805481	1					
ANR	3805829	MultiplicativeExpression	sizeof ( ac_uint4 ) * size		3805481	0		*			
ANR	3805830	SizeofExpression	sizeof ( ac_uint4 )		3805481	0					
ANR	3805831	Sizeof	sizeof		3805481	0					
ANR	3805832	SizeofOperand	ac_uint4		3805481	1					
ANR	3805833	Identifier	size		3805481	1					
ANR	3805834	ExpressionStatement	( * pdecomps ) [ i ] . size = size	513:8:13439:13465	3805481	1	True				
ANR	3805835	AssignmentExpression	( * pdecomps ) [ i ] . size = size		3805481	0		=			
ANR	3805836	MemberAccess	( * pdecomps ) [ i ] . size		3805481	0					
ANR	3805837	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805838	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805839	UnaryOperator	*		3805481	0					
ANR	3805840	Identifier	pdecomps		3805481	1					
ANR	3805841	Identifier	i		3805481	1					
ANR	3805842	Identifier	size		3805481	1					
ANR	3805843	Identifier	size		3805481	1					
ANR	3805844	IfStatement	if ( ( * pdecomps ) [ i ] . code != code )		3805481	11					
ANR	3805845	Condition	( * pdecomps ) [ i ] . code != code	516:8:13482:13508	3805481	0	True				
ANR	3805846	EqualityExpression	( * pdecomps ) [ i ] . code != code		3805481	0		!=			
ANR	3805847	MemberAccess	( * pdecomps ) [ i ] . code		3805481	0					
ANR	3805848	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805849	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805850	UnaryOperator	*		3805481	0					
ANR	3805851	Identifier	pdecomps		3805481	1					
ANR	3805852	Identifier	i		3805481	1					
ANR	3805853	Identifier	code		3805481	1					
ANR	3805854	Identifier	code		3805481	1					
ANR	3805855	ExpressionStatement	( * pdecomps_used ) ++	517:6:13517:13535	3805481	1	True				
ANR	3805856	PostIncDecOperationExpression	( * pdecomps_used ) ++		3805481	0					
ANR	3805857	UnaryOperationExpression	* pdecomps_used		3805481	0					
ANR	3805858	UnaryOperator	*		3805481	0					
ANR	3805859	Identifier	pdecomps_used		3805481	1					
ANR	3805860	IncDec	++		3805481	1					
ANR	3805861	ExpressionStatement	( * pdecomps ) [ i ] . code = code	519:4:13542:13568	3805481	12	True				
ANR	3805862	AssignmentExpression	( * pdecomps ) [ i ] . code = code		3805481	0		=			
ANR	3805863	MemberAccess	( * pdecomps ) [ i ] . code		3805481	0					
ANR	3805864	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805865	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805866	UnaryOperator	*		3805481	0					
ANR	3805867	Identifier	pdecomps		3805481	1					
ANR	3805868	Identifier	i		3805481	1					
ANR	3805869	Identifier	code		3805481	1					
ANR	3805870	Identifier	code		3805481	1					
ANR	3805871	ExpressionStatement	( * pdecomps ) [ i ] . used = dectmp_size	520:4:13574:13607	3805481	13	True				
ANR	3805872	AssignmentExpression	( * pdecomps ) [ i ] . used = dectmp_size		3805481	0		=			
ANR	3805873	MemberAccess	( * pdecomps ) [ i ] . used		3805481	0					
ANR	3805874	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805875	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805876	UnaryOperator	*		3805481	0					
ANR	3805877	Identifier	pdecomps		3805481	1					
ANR	3805878	Identifier	i		3805481	1					
ANR	3805879	Identifier	used		3805481	1					
ANR	3805880	Identifier	dectmp_size		3805481	1					
ANR	3805881	ExpressionStatement	"( void ) AC_MEMCPY ( ( char * ) ( * pdecomps ) [ i ] . decomp , ( char * ) dectmp , sizeof ( ac_uint4 ) * dectmp_size )"	521:4:13613:13728	3805481	14	True				
ANR	3805882	CastExpression	"( void ) AC_MEMCPY ( ( char * ) ( * pdecomps ) [ i ] . decomp , ( char * ) dectmp , sizeof ( ac_uint4 ) * dectmp_size )"		3805481	0					
ANR	3805883	CastTarget	void		3805481	0					
ANR	3805884	CallExpression	"AC_MEMCPY ( ( char * ) ( * pdecomps ) [ i ] . decomp , ( char * ) dectmp , sizeof ( ac_uint4 ) * dectmp_size )"		3805481	1					
ANR	3805885	Callee	AC_MEMCPY		3805481	0					
ANR	3805886	Identifier	AC_MEMCPY		3805481	0					
ANR	3805887	ArgumentList	( char * ) ( * pdecomps ) [ i ] . decomp		3805481	1					
ANR	3805888	Argument	( char * ) ( * pdecomps ) [ i ] . decomp		3805481	0					
ANR	3805889	CastExpression	( char * ) ( * pdecomps ) [ i ] . decomp		3805481	0					
ANR	3805890	CastTarget	char *		3805481	0					
ANR	3805891	MemberAccess	( * pdecomps ) [ i ] . decomp		3805481	1					
ANR	3805892	ArrayIndexing	( * pdecomps ) [ i ]		3805481	0					
ANR	3805893	UnaryOperationExpression	* pdecomps		3805481	0					
ANR	3805894	UnaryOperator	*		3805481	0					
ANR	3805895	Identifier	pdecomps		3805481	1					
ANR	3805896	Identifier	i		3805481	1					
ANR	3805897	Identifier	decomp		3805481	1					
ANR	3805898	Argument	( char * ) dectmp		3805481	1					
ANR	3805899	CastExpression	( char * ) dectmp		3805481	0					
ANR	3805900	CastTarget	char *		3805481	0					
ANR	3805901	Identifier	dectmp		3805481	1					
ANR	3805902	Argument	sizeof ( ac_uint4 ) * dectmp_size		3805481	2					
ANR	3805903	MultiplicativeExpression	sizeof ( ac_uint4 ) * dectmp_size		3805481	0		*			
ANR	3805904	SizeofExpression	sizeof ( ac_uint4 )		3805481	0					
ANR	3805905	Sizeof	sizeof		3805481	0					
ANR	3805906	SizeofOperand	ac_uint4		3805481	1					
ANR	3805907	Identifier	dectmp_size		3805481	1					
ANR	3805908	IfStatement	if ( ! compat && dectmp_size == 2 )		3805481	15					
ANR	3805909	Condition	! compat && dectmp_size == 2	528:8:13908:13934	3805481	0	True				
ANR	3805910	AndExpression	! compat && dectmp_size == 2		3805481	0		&&			
ANR	3805911	UnaryOperationExpression	! compat		3805481	0					
ANR	3805912	UnaryOperator	!		3805481	0					
ANR	3805913	Identifier	compat		3805481	1					
ANR	3805914	EqualityExpression	dectmp_size == 2		3805481	1		==			
ANR	3805915	Identifier	dectmp_size		3805481	0					
ANR	3805916	PrimaryExpression	2		3805481	1					
ANR	3805917	ExpressionStatement	comps_used ++	529:6:13943:13955	3805481	1	True				
ANR	3805918	PostIncDecOperationExpression	comps_used ++		3805481	0					
ANR	3805919	Identifier	comps_used		3805481	0					
ANR	3805920	IncDec	++		3805481	1					
ANR	3805921	ReturnType	static void		3805481	1					
ANR	3805922	Identifier	add_decomp		3805481	2					
ANR	3805923	ParameterList	"ac_uint4 code , short compat"		3805481	3					
ANR	3805924	Parameter	ac_uint4 code	448:11:11534:11546	3805481	0	True				
ANR	3805925	ParameterType	ac_uint4		3805481	0					
ANR	3805926	Identifier	code		3805481	1					
ANR	3805927	Parameter	short compat	448:26:11549:11560	3805481	1	True				
ANR	3805928	ParameterType	short		3805481	0					
ANR	3805929	Identifier	compat		3805481	1					
ANR	3805930	CFGEntryNode	ENTRY		3805481		True				
ANR	3805931	CFGExitNode	EXIT		3805481		True				
ANR	3805932	Symbol	pdecomps		3805481						
ANR	3805933	Symbol	pdecomps_size		3805481						
ANR	3805934	Symbol	code		3805481						
ANR	3805935	Symbol	& kdecomps_used		3805481						
ANR	3805936	Symbol	comps_used		3805481						
ANR	3805937	Symbol	pdecomps_used		3805481						
ANR	3805938	Symbol	& kdecomps_size		3805481						
ANR	3805939	Symbol	realloc		3805481						
ANR	3805940	Symbol	dectmp_size		3805481						
ANR	3805941	Symbol	& kdecomps		3805481						
ANR	3805942	Symbol	& decomps_size		3805481						
ANR	3805943	Symbol	* pdecomps_size		3805481						
ANR	3805944	Symbol	& decomps		3805481						
ANR	3805945	Symbol	& decomps_used		3805481						
ANR	3805946	Symbol	* pdecomps_used		3805481						
ANR	3805947	Symbol	* * pdecomps		3805481						
ANR	3805948	Symbol	( * pdecomps ) [ i ] . code		3805481						
ANR	3805949	Symbol	malloc		3805481						
ANR	3805950	Symbol	( * pdecomps ) [ i ] . decomp		3805481						
ANR	3805951	Symbol	* pdecomps		3805481						
ANR	3805952	Symbol	i		3805481						
ANR	3805953	Symbol	j		3805481						
ANR	3805954	Symbol	* i		3805481						
ANR	3805955	Symbol	size		3805481						
ANR	3805956	Symbol	( * pdecomps ) [ i ] . used		3805481						
ANR	3805957	Symbol	dectmp		3805481						
ANR	3805958	Symbol	( * pdecomps ) [ i ] . size		3805481						
ANR	3805959	Symbol	compat		3805481						
ANR	3805960	Function	add_title	532:0:13960:14905							
ANR	3805961	FunctionDef	add_title (ac_uint4 code)		3805960	0					
ANR	3805962	CompoundStatement		534:0:13997:14905	3805960	0					
ANR	3805963	IdentifierDeclStatement	"ac_uint4 i , j ;"	535:4:14003:14016	3805960	0	True				
ANR	3805964	IdentifierDecl	i		3805960	0					
ANR	3805965	IdentifierDeclType	ac_uint4		3805960	0					
ANR	3805966	Identifier	i		3805960	1					
ANR	3805967	IdentifierDecl	j		3805960	1					
ANR	3805968	IdentifierDeclType	ac_uint4		3805960	0					
ANR	3805969	Identifier	j		3805960	1					
ANR	3805970	ExpressionStatement	cases [ 2 ] = code	540:4:14076:14091	3805960	1	True				
ANR	3805971	AssignmentExpression	cases [ 2 ] = code		3805960	0		=			
ANR	3805972	ArrayIndexing	cases [ 2 ]		3805960	0					
ANR	3805973	Identifier	cases		3805960	0					
ANR	3805974	PrimaryExpression	2		3805960	1					
ANR	3805975	Identifier	code		3805960	1					
ANR	3805976	IfStatement	if ( title_used == title_size )		3805960	2					
ANR	3805977	Condition	title_used == title_size	542:8:14102:14125	3805960	0	True				
ANR	3805978	EqualityExpression	title_used == title_size		3805960	0		==			
ANR	3805979	Identifier	title_used		3805960	0					
ANR	3805980	Identifier	title_size		3805960	1					
ANR	3805981	CompoundStatement		9:34:130:130	3805960	1					
ANR	3805982	IfStatement	if ( title_size == 0 )		3805960	0					
ANR	3805983	Condition	title_size == 0	543:12:14142:14156	3805960	0	True				
ANR	3805984	EqualityExpression	title_size == 0		3805960	0		==			
ANR	3805985	Identifier	title_size		3805960	0					
ANR	3805986	PrimaryExpression	0		3805960	1					
ANR	3805987	ExpressionStatement	title = ( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )	544:10:14169:14217	3805960	1	True				
ANR	3805988	AssignmentExpression	title = ( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )		3805960	0		=			
ANR	3805989	Identifier	title		3805960	0					
ANR	3805990	CastExpression	( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )		3805960	1					
ANR	3805991	CastTarget	_case_t *		3805960	0					
ANR	3805992	CallExpression	malloc ( sizeof ( _case_t ) << 3 )		3805960	1					
ANR	3805993	Callee	malloc		3805960	0					
ANR	3805994	Identifier	malloc		3805960	0					
ANR	3805995	ArgumentList	sizeof ( _case_t ) << 3		3805960	1					
ANR	3805996	Argument	sizeof ( _case_t ) << 3		3805960	0					
ANR	3805997	ShiftExpression	sizeof ( _case_t ) << 3		3805960	0		<<			
ANR	3805998	SizeofExpression	sizeof ( _case_t )		3805960	0					
ANR	3805999	Sizeof	sizeof		3805960	0					
ANR	3806000	SizeofOperand	_case_t		3805960	1					
ANR	3806001	PrimaryExpression	3		3805960	1					
ANR	3806002	ElseStatement	else		3805960	0					
ANR	3806003	ExpressionStatement	"title = ( _case_t * ) realloc ( ( char * ) title , sizeof ( _case_t ) * ( title_size + 8 ) )"	546:10:14242:14359	3805960	0	True				
ANR	3806004	AssignmentExpression	"title = ( _case_t * ) realloc ( ( char * ) title , sizeof ( _case_t ) * ( title_size + 8 ) )"		3805960	0		=			
ANR	3806005	Identifier	title		3805960	0					
ANR	3806006	CastExpression	"( _case_t * ) realloc ( ( char * ) title , sizeof ( _case_t ) * ( title_size + 8 ) )"		3805960	1					
ANR	3806007	CastTarget	_case_t *		3805960	0					
ANR	3806008	CallExpression	"realloc ( ( char * ) title , sizeof ( _case_t ) * ( title_size + 8 ) )"		3805960	1					
ANR	3806009	Callee	realloc		3805960	0					
ANR	3806010	Identifier	realloc		3805960	0					
ANR	3806011	ArgumentList	( char * ) title		3805960	1					
ANR	3806012	Argument	( char * ) title		3805960	0					
ANR	3806013	CastExpression	( char * ) title		3805960	0					
ANR	3806014	CastTarget	char *		3805960	0					
ANR	3806015	Identifier	title		3805960	1					
ANR	3806016	Argument	sizeof ( _case_t ) * ( title_size + 8 )		3805960	1					
ANR	3806017	MultiplicativeExpression	sizeof ( _case_t ) * ( title_size + 8 )		3805960	0		*			
ANR	3806018	SizeofExpression	sizeof ( _case_t )		3805960	0					
ANR	3806019	Sizeof	sizeof		3805960	0					
ANR	3806020	SizeofOperand	_case_t		3805960	1					
ANR	3806021	AdditiveExpression	title_size + 8		3805960	1		+			
ANR	3806022	Identifier	title_size		3805960	0					
ANR	3806023	PrimaryExpression	8		3805960	1					
ANR	3806024	ExpressionStatement	title_size += 8	548:8:14369:14384	3805960	1	True				
ANR	3806025	AssignmentExpression	title_size += 8		3805960	0		+=			
ANR	3806026	Identifier	title_size		3805960	0					
ANR	3806027	PrimaryExpression	8		3805960	1					
ANR	3806028	ForStatement	for ( i = 0 ; i < title_used && code > title [ i ] . key ; i ++ )		3805960	3					
ANR	3806029	ForInit	i = 0 ;	554:9:14452:14457	3805960	0	True				
ANR	3806030	AssignmentExpression	i = 0		3805960	0		=			
ANR	3806031	Identifier	i		3805960	0					
ANR	3806032	PrimaryExpression	0		3805960	1					
ANR	3806033	Condition	i < title_used && code > title [ i ] . key	554:16:14459:14495	3805960	1	True				
ANR	3806034	AndExpression	i < title_used && code > title [ i ] . key		3805960	0		&&			
ANR	3806035	RelationalExpression	i < title_used		3805960	0		<			
ANR	3806036	Identifier	i		3805960	0					
ANR	3806037	Identifier	title_used		3805960	1					
ANR	3806038	RelationalExpression	code > title [ i ] . key		3805960	1		>			
ANR	3806039	Identifier	code		3805960	0					
ANR	3806040	MemberAccess	title [ i ] . key		3805960	1					
ANR	3806041	ArrayIndexing	title [ i ]		3805960	0					
ANR	3806042	Identifier	title		3805960	0					
ANR	3806043	Identifier	i		3805960	1					
ANR	3806044	Identifier	key		3805960	1					
ANR	3806045	PostIncDecOperationExpression	i ++	554:55:14498:14500	3805960	2	True				
ANR	3806046	Identifier	i		3805960	0					
ANR	3806047	IncDec	++		3805960	1					
ANR	3806048	ExpressionStatement		554:60:14503:14503	3805960	3	True				
ANR	3806049	IfStatement	if ( i < title_used )		3805960	4					
ANR	3806050	Condition	i < title_used	556:8:14514:14527	3805960	0	True				
ANR	3806051	RelationalExpression	i < title_used		3805960	0		<			
ANR	3806052	Identifier	i		3805960	0					
ANR	3806053	Identifier	title_used		3805960	1					
ANR	3806054	CompoundStatement		23:24:532:532	3805960	1					
ANR	3806055	ForStatement	for ( j = title_used ; j > i ; j -- )		3805960	0					
ANR	3806056	ForInit	j = title_used ;	560:13:14606:14620	3805960	0	True				
ANR	3806057	AssignmentExpression	j = title_used		3805960	0		=			
ANR	3806058	Identifier	j		3805960	0					
ANR	3806059	Identifier	title_used		3805960	1					
ANR	3806060	Condition	j > i	560:29:14622:14626	3805960	1	True				
ANR	3806061	RelationalExpression	j > i		3805960	0		>			
ANR	3806062	Identifier	j		3805960	0					
ANR	3806063	Identifier	i		3805960	1					
ANR	3806064	PostIncDecOperationExpression	j --	560:36:14629:14631	3805960	2	True				
ANR	3806065	Identifier	j		3805960	0					
ANR	3806066	IncDec	--		3805960	1					
ANR	3806067	ExpressionStatement	"( void ) AC_MEMCPY ( ( char * ) & title [ j ] , ( char * ) & title [ j - 1 ] , sizeof ( _case_t ) )"	561:10:14644:14745	3805960	3	True				
ANR	3806068	CastExpression	"( void ) AC_MEMCPY ( ( char * ) & title [ j ] , ( char * ) & title [ j - 1 ] , sizeof ( _case_t ) )"		3805960	0					
ANR	3806069	CastTarget	void		3805960	0					
ANR	3806070	CallExpression	"AC_MEMCPY ( ( char * ) & title [ j ] , ( char * ) & title [ j - 1 ] , sizeof ( _case_t ) )"		3805960	1					
ANR	3806071	Callee	AC_MEMCPY		3805960	0					
ANR	3806072	Identifier	AC_MEMCPY		3805960	0					
ANR	3806073	ArgumentList	( char * ) & title [ j ]		3805960	1					
ANR	3806074	Argument	( char * ) & title [ j ]		3805960	0					
ANR	3806075	CastExpression	( char * ) & title [ j ]		3805960	0					
ANR	3806076	CastTarget	char *		3805960	0					
ANR	3806077	UnaryOperationExpression	& title [ j ]		3805960	1					
ANR	3806078	UnaryOperator	&		3805960	0					
ANR	3806079	ArrayIndexing	title [ j ]		3805960	1					
ANR	3806080	Identifier	title		3805960	0					
ANR	3806081	Identifier	j		3805960	1					
ANR	3806082	Argument	( char * ) & title [ j - 1 ]		3805960	1					
ANR	3806083	CastExpression	( char * ) & title [ j - 1 ]		3805960	0					
ANR	3806084	CastTarget	char *		3805960	0					
ANR	3806085	UnaryOperationExpression	& title [ j - 1 ]		3805960	1					
ANR	3806086	UnaryOperator	&		3805960	0					
ANR	3806087	ArrayIndexing	title [ j - 1 ]		3805960	1					
ANR	3806088	Identifier	title		3805960	0					
ANR	3806089	AdditiveExpression	j - 1		3805960	1		-			
ANR	3806090	Identifier	j		3805960	0					
ANR	3806091	PrimaryExpression	1		3805960	1					
ANR	3806092	Argument	sizeof ( _case_t )		3805960	2					
ANR	3806093	SizeofExpression	sizeof ( _case_t )		3805960	0					
ANR	3806094	Sizeof	sizeof		3805960	0					
ANR	3806095	SizeofOperand	_case_t		3805960	1					
ANR	3806096	ExpressionStatement	title [ i ] . key = cases [ 2 ]	565:4:14758:14781	3805960	5	True				
ANR	3806097	AssignmentExpression	title [ i ] . key = cases [ 2 ]		3805960	0		=			
ANR	3806098	MemberAccess	title [ i ] . key		3805960	0					
ANR	3806099	ArrayIndexing	title [ i ]		3805960	0					
ANR	3806100	Identifier	title		3805960	0					
ANR	3806101	Identifier	i		3805960	1					
ANR	3806102	Identifier	key		3805960	1					
ANR	3806103	ArrayIndexing	cases [ 2 ]		3805960	1					
ANR	3806104	Identifier	cases		3805960	0					
ANR	3806105	PrimaryExpression	2		3805960	1					
ANR	3806106	ExpressionStatement	title [ i ] . other1 = cases [ 0 ]	566:4:14802:14828	3805960	6	True				
ANR	3806107	AssignmentExpression	title [ i ] . other1 = cases [ 0 ]		3805960	0		=			
ANR	3806108	MemberAccess	title [ i ] . other1		3805960	0					
ANR	3806109	ArrayIndexing	title [ i ]		3805960	0					
ANR	3806110	Identifier	title		3805960	0					
ANR	3806111	Identifier	i		3805960	1					
ANR	3806112	Identifier	other1		3805960	1					
ANR	3806113	ArrayIndexing	cases [ 0 ]		3805960	1					
ANR	3806114	Identifier	cases		3805960	0					
ANR	3806115	PrimaryExpression	0		3805960	1					
ANR	3806116	ExpressionStatement	title [ i ] . other2 = cases [ 1 ]	567:4:14846:14872	3805960	7	True				
ANR	3806117	AssignmentExpression	title [ i ] . other2 = cases [ 1 ]		3805960	0		=			
ANR	3806118	MemberAccess	title [ i ] . other2		3805960	0					
ANR	3806119	ArrayIndexing	title [ i ]		3805960	0					
ANR	3806120	Identifier	title		3805960	0					
ANR	3806121	Identifier	i		3805960	1					
ANR	3806122	Identifier	other2		3805960	1					
ANR	3806123	ArrayIndexing	cases [ 1 ]		3805960	1					
ANR	3806124	Identifier	cases		3805960	0					
ANR	3806125	PrimaryExpression	1		3805960	1					
ANR	3806126	ExpressionStatement	title_used ++	569:4:14891:14903	3805960	8	True				
ANR	3806127	PostIncDecOperationExpression	title_used ++		3805960	0					
ANR	3806128	Identifier	title_used		3805960	0					
ANR	3806129	IncDec	++		3805960	1					
ANR	3806130	ReturnType	static void		3805960	1					
ANR	3806131	Identifier	add_title		3805960	2					
ANR	3806132	ParameterList	ac_uint4 code		3805960	3					
ANR	3806133	Parameter	ac_uint4 code	533:10:13982:13994	3805960	0	True				
ANR	3806134	ParameterType	ac_uint4		3805960	0					
ANR	3806135	Identifier	code		3805960	1					
ANR	3806136	CFGEntryNode	ENTRY		3805960		True				
ANR	3806137	CFGExitNode	EXIT		3805960		True				
ANR	3806138	Symbol	malloc		3805960						
ANR	3806139	Symbol	code		3805960						
ANR	3806140	Symbol	cases		3805960						
ANR	3806141	Symbol	title_size		3805960						
ANR	3806142	Symbol	i		3805960						
ANR	3806143	Symbol	title_used		3805960						
ANR	3806144	Symbol	j		3805960						
ANR	3806145	Symbol	realloc		3805960						
ANR	3806146	Symbol	* cases		3805960						
ANR	3806147	Symbol	title		3805960						
ANR	3806148	Symbol	title [ i ] . other1		3805960						
ANR	3806149	Symbol	title [ i ] . other2		3805960						
ANR	3806150	Symbol	title [ i ] . key		3805960						
ANR	3806151	Symbol	* i		3805960						
ANR	3806152	Symbol	* title		3805960						
ANR	3806153	Function	add_upper	572:0:14908:16014							
ANR	3806154	FunctionDef	add_upper (ac_uint4 code)		3806153	0					
ANR	3806155	CompoundStatement		574:0:14945:16014	3806153	0					
ANR	3806156	IdentifierDeclStatement	"ac_uint4 i , j ;"	575:4:14951:14964	3806153	0	True				
ANR	3806157	IdentifierDecl	i		3806153	0					
ANR	3806158	IdentifierDeclType	ac_uint4		3806153	0					
ANR	3806159	Identifier	i		3806153	1					
ANR	3806160	IdentifierDecl	j		3806153	1					
ANR	3806161	IdentifierDeclType	ac_uint4		3806153	0					
ANR	3806162	Identifier	j		3806153	1					
ANR	3806163	ExpressionStatement	cases [ 0 ] = code	580:4:15024:15039	3806153	1	True				
ANR	3806164	AssignmentExpression	cases [ 0 ] = code		3806153	0		=			
ANR	3806165	ArrayIndexing	cases [ 0 ]		3806153	0					
ANR	3806166	Identifier	cases		3806153	0					
ANR	3806167	PrimaryExpression	0		3806153	1					
ANR	3806168	Identifier	code		3806153	1					
ANR	3806169	IfStatement	if ( cases [ 2 ] == 0 )		3806153	2					
ANR	3806170	Condition	cases [ 2 ] == 0	586:8:15164:15176	3806153	0	True				
ANR	3806171	EqualityExpression	cases [ 2 ] == 0		3806153	0		==			
ANR	3806172	ArrayIndexing	cases [ 2 ]		3806153	0					
ANR	3806173	Identifier	cases		3806153	0					
ANR	3806174	PrimaryExpression	2		3806153	1					
ANR	3806175	PrimaryExpression	0		3806153	1					
ANR	3806176	ExpressionStatement	cases [ 2 ] = code	587:6:15185:15200	3806153	1	True				
ANR	3806177	AssignmentExpression	cases [ 2 ] = code		3806153	0		=			
ANR	3806178	ArrayIndexing	cases [ 2 ]		3806153	0					
ANR	3806179	Identifier	cases		3806153	0					
ANR	3806180	PrimaryExpression	2		3806153	1					
ANR	3806181	Identifier	code		3806153	1					
ANR	3806182	IfStatement	if ( upper_used == upper_size )		3806153	3					
ANR	3806183	Condition	upper_used == upper_size	589:8:15211:15234	3806153	0	True				
ANR	3806184	EqualityExpression	upper_used == upper_size		3806153	0		==			
ANR	3806185	Identifier	upper_used		3806153	0					
ANR	3806186	Identifier	upper_size		3806153	1					
ANR	3806187	CompoundStatement		16:34:291:291	3806153	1					
ANR	3806188	IfStatement	if ( upper_size == 0 )		3806153	0					
ANR	3806189	Condition	upper_size == 0	590:12:15251:15265	3806153	0	True				
ANR	3806190	EqualityExpression	upper_size == 0		3806153	0		==			
ANR	3806191	Identifier	upper_size		3806153	0					
ANR	3806192	PrimaryExpression	0		3806153	1					
ANR	3806193	ExpressionStatement	upper = ( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )	591:10:15278:15326	3806153	1	True				
ANR	3806194	AssignmentExpression	upper = ( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )		3806153	0		=			
ANR	3806195	Identifier	upper		3806153	0					
ANR	3806196	CastExpression	( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )		3806153	1					
ANR	3806197	CastTarget	_case_t *		3806153	0					
ANR	3806198	CallExpression	malloc ( sizeof ( _case_t ) << 3 )		3806153	1					
ANR	3806199	Callee	malloc		3806153	0					
ANR	3806200	Identifier	malloc		3806153	0					
ANR	3806201	ArgumentList	sizeof ( _case_t ) << 3		3806153	1					
ANR	3806202	Argument	sizeof ( _case_t ) << 3		3806153	0					
ANR	3806203	ShiftExpression	sizeof ( _case_t ) << 3		3806153	0		<<			
ANR	3806204	SizeofExpression	sizeof ( _case_t )		3806153	0					
ANR	3806205	Sizeof	sizeof		3806153	0					
ANR	3806206	SizeofOperand	_case_t		3806153	1					
ANR	3806207	PrimaryExpression	3		3806153	1					
ANR	3806208	ElseStatement	else		3806153	0					
ANR	3806209	ExpressionStatement	"upper = ( _case_t * ) realloc ( ( char * ) upper , sizeof ( _case_t ) * ( upper_size + 8 ) )"	593:10:15351:15468	3806153	0	True				
ANR	3806210	AssignmentExpression	"upper = ( _case_t * ) realloc ( ( char * ) upper , sizeof ( _case_t ) * ( upper_size + 8 ) )"		3806153	0		=			
ANR	3806211	Identifier	upper		3806153	0					
ANR	3806212	CastExpression	"( _case_t * ) realloc ( ( char * ) upper , sizeof ( _case_t ) * ( upper_size + 8 ) )"		3806153	1					
ANR	3806213	CastTarget	_case_t *		3806153	0					
ANR	3806214	CallExpression	"realloc ( ( char * ) upper , sizeof ( _case_t ) * ( upper_size + 8 ) )"		3806153	1					
ANR	3806215	Callee	realloc		3806153	0					
ANR	3806216	Identifier	realloc		3806153	0					
ANR	3806217	ArgumentList	( char * ) upper		3806153	1					
ANR	3806218	Argument	( char * ) upper		3806153	0					
ANR	3806219	CastExpression	( char * ) upper		3806153	0					
ANR	3806220	CastTarget	char *		3806153	0					
ANR	3806221	Identifier	upper		3806153	1					
ANR	3806222	Argument	sizeof ( _case_t ) * ( upper_size + 8 )		3806153	1					
ANR	3806223	MultiplicativeExpression	sizeof ( _case_t ) * ( upper_size + 8 )		3806153	0		*			
ANR	3806224	SizeofExpression	sizeof ( _case_t )		3806153	0					
ANR	3806225	Sizeof	sizeof		3806153	0					
ANR	3806226	SizeofOperand	_case_t		3806153	1					
ANR	3806227	AdditiveExpression	upper_size + 8		3806153	1		+			
ANR	3806228	Identifier	upper_size		3806153	0					
ANR	3806229	PrimaryExpression	8		3806153	1					
ANR	3806230	ExpressionStatement	upper_size += 8	595:8:15478:15493	3806153	1	True				
ANR	3806231	AssignmentExpression	upper_size += 8		3806153	0		+=			
ANR	3806232	Identifier	upper_size		3806153	0					
ANR	3806233	PrimaryExpression	8		3806153	1					
ANR	3806234	ForStatement	for ( i = 0 ; i < upper_used && code > upper [ i ] . key ; i ++ )		3806153	4					
ANR	3806235	ForInit	i = 0 ;	601:9:15561:15566	3806153	0	True				
ANR	3806236	AssignmentExpression	i = 0		3806153	0		=			
ANR	3806237	Identifier	i		3806153	0					
ANR	3806238	PrimaryExpression	0		3806153	1					
ANR	3806239	Condition	i < upper_used && code > upper [ i ] . key	601:16:15568:15604	3806153	1	True				
ANR	3806240	AndExpression	i < upper_used && code > upper [ i ] . key		3806153	0		&&			
ANR	3806241	RelationalExpression	i < upper_used		3806153	0		<			
ANR	3806242	Identifier	i		3806153	0					
ANR	3806243	Identifier	upper_used		3806153	1					
ANR	3806244	RelationalExpression	code > upper [ i ] . key		3806153	1		>			
ANR	3806245	Identifier	code		3806153	0					
ANR	3806246	MemberAccess	upper [ i ] . key		3806153	1					
ANR	3806247	ArrayIndexing	upper [ i ]		3806153	0					
ANR	3806248	Identifier	upper		3806153	0					
ANR	3806249	Identifier	i		3806153	1					
ANR	3806250	Identifier	key		3806153	1					
ANR	3806251	PostIncDecOperationExpression	i ++	601:55:15607:15609	3806153	2	True				
ANR	3806252	Identifier	i		3806153	0					
ANR	3806253	IncDec	++		3806153	1					
ANR	3806254	ExpressionStatement		601:60:15612:15612	3806153	3	True				
ANR	3806255	IfStatement	if ( i < upper_used )		3806153	5					
ANR	3806256	Condition	i < upper_used	603:8:15623:15636	3806153	0	True				
ANR	3806257	RelationalExpression	i < upper_used		3806153	0		<			
ANR	3806258	Identifier	i		3806153	0					
ANR	3806259	Identifier	upper_used		3806153	1					
ANR	3806260	CompoundStatement		30:24:693:693	3806153	1					
ANR	3806261	ForStatement	for ( j = upper_used ; j > i ; j -- )		3806153	0					
ANR	3806262	ForInit	j = upper_used ;	607:13:15715:15729	3806153	0	True				
ANR	3806263	AssignmentExpression	j = upper_used		3806153	0		=			
ANR	3806264	Identifier	j		3806153	0					
ANR	3806265	Identifier	upper_used		3806153	1					
ANR	3806266	Condition	j > i	607:29:15731:15735	3806153	1	True				
ANR	3806267	RelationalExpression	j > i		3806153	0		>			
ANR	3806268	Identifier	j		3806153	0					
ANR	3806269	Identifier	i		3806153	1					
ANR	3806270	PostIncDecOperationExpression	j --	607:36:15738:15740	3806153	2	True				
ANR	3806271	Identifier	j		3806153	0					
ANR	3806272	IncDec	--		3806153	1					
ANR	3806273	ExpressionStatement	"( void ) AC_MEMCPY ( ( char * ) & upper [ j ] , ( char * ) & upper [ j - 1 ] , sizeof ( _case_t ) )"	608:10:15753:15854	3806153	3	True				
ANR	3806274	CastExpression	"( void ) AC_MEMCPY ( ( char * ) & upper [ j ] , ( char * ) & upper [ j - 1 ] , sizeof ( _case_t ) )"		3806153	0					
ANR	3806275	CastTarget	void		3806153	0					
ANR	3806276	CallExpression	"AC_MEMCPY ( ( char * ) & upper [ j ] , ( char * ) & upper [ j - 1 ] , sizeof ( _case_t ) )"		3806153	1					
ANR	3806277	Callee	AC_MEMCPY		3806153	0					
ANR	3806278	Identifier	AC_MEMCPY		3806153	0					
ANR	3806279	ArgumentList	( char * ) & upper [ j ]		3806153	1					
ANR	3806280	Argument	( char * ) & upper [ j ]		3806153	0					
ANR	3806281	CastExpression	( char * ) & upper [ j ]		3806153	0					
ANR	3806282	CastTarget	char *		3806153	0					
ANR	3806283	UnaryOperationExpression	& upper [ j ]		3806153	1					
ANR	3806284	UnaryOperator	&		3806153	0					
ANR	3806285	ArrayIndexing	upper [ j ]		3806153	1					
ANR	3806286	Identifier	upper		3806153	0					
ANR	3806287	Identifier	j		3806153	1					
ANR	3806288	Argument	( char * ) & upper [ j - 1 ]		3806153	1					
ANR	3806289	CastExpression	( char * ) & upper [ j - 1 ]		3806153	0					
ANR	3806290	CastTarget	char *		3806153	0					
ANR	3806291	UnaryOperationExpression	& upper [ j - 1 ]		3806153	1					
ANR	3806292	UnaryOperator	&		3806153	0					
ANR	3806293	ArrayIndexing	upper [ j - 1 ]		3806153	1					
ANR	3806294	Identifier	upper		3806153	0					
ANR	3806295	AdditiveExpression	j - 1		3806153	1		-			
ANR	3806296	Identifier	j		3806153	0					
ANR	3806297	PrimaryExpression	1		3806153	1					
ANR	3806298	Argument	sizeof ( _case_t )		3806153	2					
ANR	3806299	SizeofExpression	sizeof ( _case_t )		3806153	0					
ANR	3806300	Sizeof	sizeof		3806153	0					
ANR	3806301	SizeofOperand	_case_t		3806153	1					
ANR	3806302	ExpressionStatement	upper [ i ] . key = cases [ 0 ]	612:4:15867:15890	3806153	6	True				
ANR	3806303	AssignmentExpression	upper [ i ] . key = cases [ 0 ]		3806153	0		=			
ANR	3806304	MemberAccess	upper [ i ] . key		3806153	0					
ANR	3806305	ArrayIndexing	upper [ i ]		3806153	0					
ANR	3806306	Identifier	upper		3806153	0					
ANR	3806307	Identifier	i		3806153	1					
ANR	3806308	Identifier	key		3806153	1					
ANR	3806309	ArrayIndexing	cases [ 0 ]		3806153	1					
ANR	3806310	Identifier	cases		3806153	0					
ANR	3806311	PrimaryExpression	0		3806153	1					
ANR	3806312	ExpressionStatement	upper [ i ] . other1 = cases [ 1 ]	613:4:15911:15937	3806153	7	True				
ANR	3806313	AssignmentExpression	upper [ i ] . other1 = cases [ 1 ]		3806153	0		=			
ANR	3806314	MemberAccess	upper [ i ] . other1		3806153	0					
ANR	3806315	ArrayIndexing	upper [ i ]		3806153	0					
ANR	3806316	Identifier	upper		3806153	0					
ANR	3806317	Identifier	i		3806153	1					
ANR	3806318	Identifier	other1		3806153	1					
ANR	3806319	ArrayIndexing	cases [ 1 ]		3806153	1					
ANR	3806320	Identifier	cases		3806153	0					
ANR	3806321	PrimaryExpression	1		3806153	1					
ANR	3806322	ExpressionStatement	upper [ i ] . other2 = cases [ 2 ]	614:4:15955:15981	3806153	8	True				
ANR	3806323	AssignmentExpression	upper [ i ] . other2 = cases [ 2 ]		3806153	0		=			
ANR	3806324	MemberAccess	upper [ i ] . other2		3806153	0					
ANR	3806325	ArrayIndexing	upper [ i ]		3806153	0					
ANR	3806326	Identifier	upper		3806153	0					
ANR	3806327	Identifier	i		3806153	1					
ANR	3806328	Identifier	other2		3806153	1					
ANR	3806329	ArrayIndexing	cases [ 2 ]		3806153	1					
ANR	3806330	Identifier	cases		3806153	0					
ANR	3806331	PrimaryExpression	2		3806153	1					
ANR	3806332	ExpressionStatement	upper_used ++	616:4:16000:16012	3806153	9	True				
ANR	3806333	PostIncDecOperationExpression	upper_used ++		3806153	0					
ANR	3806334	Identifier	upper_used		3806153	0					
ANR	3806335	IncDec	++		3806153	1					
ANR	3806336	ReturnType	static void		3806153	1					
ANR	3806337	Identifier	add_upper		3806153	2					
ANR	3806338	ParameterList	ac_uint4 code		3806153	3					
ANR	3806339	Parameter	ac_uint4 code	573:10:14930:14942	3806153	0	True				
ANR	3806340	ParameterType	ac_uint4		3806153	0					
ANR	3806341	Identifier	code		3806153	1					
ANR	3806342	CFGEntryNode	ENTRY		3806153		True				
ANR	3806343	CFGExitNode	EXIT		3806153		True				
ANR	3806344	Symbol	malloc		3806153						
ANR	3806345	Symbol	code		3806153						
ANR	3806346	Symbol	cases		3806153						
ANR	3806347	Symbol	upper		3806153						
ANR	3806348	Symbol	i		3806153						
ANR	3806349	Symbol	j		3806153						
ANR	3806350	Symbol	* upper		3806153						
ANR	3806351	Symbol	realloc		3806153						
ANR	3806352	Symbol	* cases		3806153						
ANR	3806353	Symbol	upper [ i ] . other1		3806153						
ANR	3806354	Symbol	upper_size		3806153						
ANR	3806355	Symbol	upper [ i ] . other2		3806153						
ANR	3806356	Symbol	upper_used		3806153						
ANR	3806357	Symbol	* i		3806153						
ANR	3806358	Symbol	upper [ i ] . key		3806153						
ANR	3806359	Function	add_lower	619:0:16017:17121							
ANR	3806360	FunctionDef	add_lower (ac_uint4 code)		3806359	0					
ANR	3806361	CompoundStatement		621:0:16054:17121	3806359	0					
ANR	3806362	IdentifierDeclStatement	"ac_uint4 i , j ;"	622:4:16060:16073	3806359	0	True				
ANR	3806363	IdentifierDecl	i		3806359	0					
ANR	3806364	IdentifierDeclType	ac_uint4		3806359	0					
ANR	3806365	Identifier	i		3806359	1					
ANR	3806366	IdentifierDecl	j		3806359	1					
ANR	3806367	IdentifierDeclType	ac_uint4		3806359	0					
ANR	3806368	Identifier	j		3806359	1					
ANR	3806369	ExpressionStatement	cases [ 1 ] = code	627:4:16133:16148	3806359	1	True				
ANR	3806370	AssignmentExpression	cases [ 1 ] = code		3806359	0		=			
ANR	3806371	ArrayIndexing	cases [ 1 ]		3806359	0					
ANR	3806372	Identifier	cases		3806359	0					
ANR	3806373	PrimaryExpression	1		3806359	1					
ANR	3806374	Identifier	code		3806359	1					
ANR	3806375	IfStatement	if ( cases [ 2 ] == 0 )		3806359	2					
ANR	3806376	Condition	cases [ 2 ] == 0	633:8:16267:16279	3806359	0	True				
ANR	3806377	EqualityExpression	cases [ 2 ] == 0		3806359	0		==			
ANR	3806378	ArrayIndexing	cases [ 2 ]		3806359	0					
ANR	3806379	Identifier	cases		3806359	0					
ANR	3806380	PrimaryExpression	2		3806359	1					
ANR	3806381	PrimaryExpression	0		3806359	1					
ANR	3806382	ExpressionStatement	cases [ 2 ] = cases [ 0 ]	634:6:16288:16307	3806359	1	True				
ANR	3806383	AssignmentExpression	cases [ 2 ] = cases [ 0 ]		3806359	0		=			
ANR	3806384	ArrayIndexing	cases [ 2 ]		3806359	0					
ANR	3806385	Identifier	cases		3806359	0					
ANR	3806386	PrimaryExpression	2		3806359	1					
ANR	3806387	ArrayIndexing	cases [ 0 ]		3806359	1					
ANR	3806388	Identifier	cases		3806359	0					
ANR	3806389	PrimaryExpression	0		3806359	1					
ANR	3806390	IfStatement	if ( lower_used == lower_size )		3806359	3					
ANR	3806391	Condition	lower_used == lower_size	636:8:16318:16341	3806359	0	True				
ANR	3806392	EqualityExpression	lower_used == lower_size		3806359	0		==			
ANR	3806393	Identifier	lower_used		3806359	0					
ANR	3806394	Identifier	lower_size		3806359	1					
ANR	3806395	CompoundStatement		16:34:289:289	3806359	1					
ANR	3806396	IfStatement	if ( lower_size == 0 )		3806359	0					
ANR	3806397	Condition	lower_size == 0	637:12:16358:16372	3806359	0	True				
ANR	3806398	EqualityExpression	lower_size == 0		3806359	0		==			
ANR	3806399	Identifier	lower_size		3806359	0					
ANR	3806400	PrimaryExpression	0		3806359	1					
ANR	3806401	ExpressionStatement	lower = ( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )	638:10:16385:16433	3806359	1	True				
ANR	3806402	AssignmentExpression	lower = ( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )		3806359	0		=			
ANR	3806403	Identifier	lower		3806359	0					
ANR	3806404	CastExpression	( _case_t * ) malloc ( sizeof ( _case_t ) << 3 )		3806359	1					
ANR	3806405	CastTarget	_case_t *		3806359	0					
ANR	3806406	CallExpression	malloc ( sizeof ( _case_t ) << 3 )		3806359	1					
ANR	3806407	Callee	malloc		3806359	0					
ANR	3806408	Identifier	malloc		3806359	0					
ANR	3806409	ArgumentList	sizeof ( _case_t ) << 3		3806359	1					
ANR	3806410	Argument	sizeof ( _case_t ) << 3		3806359	0					
ANR	3806411	ShiftExpression	sizeof ( _case_t ) << 3		3806359	0		<<			
ANR	3806412	SizeofExpression	sizeof ( _case_t )		3806359	0					
ANR	3806413	Sizeof	sizeof		3806359	0					
ANR	3806414	SizeofOperand	_case_t		3806359	1					
ANR	3806415	PrimaryExpression	3		3806359	1					
ANR	3806416	ElseStatement	else		3806359	0					
ANR	3806417	ExpressionStatement	"lower = ( _case_t * ) realloc ( ( char * ) lower , sizeof ( _case_t ) * ( lower_size + 8 ) )"	640:10:16458:16575	3806359	0	True				
ANR	3806418	AssignmentExpression	"lower = ( _case_t * ) realloc ( ( char * ) lower , sizeof ( _case_t ) * ( lower_size + 8 ) )"		3806359	0		=			
ANR	3806419	Identifier	lower		3806359	0					
ANR	3806420	CastExpression	"( _case_t * ) realloc ( ( char * ) lower , sizeof ( _case_t ) * ( lower_size + 8 ) )"		3806359	1					
ANR	3806421	CastTarget	_case_t *		3806359	0					
ANR	3806422	CallExpression	"realloc ( ( char * ) lower , sizeof ( _case_t ) * ( lower_size + 8 ) )"		3806359	1					
ANR	3806423	Callee	realloc		3806359	0					
ANR	3806424	Identifier	realloc		3806359	0					
ANR	3806425	ArgumentList	( char * ) lower		3806359	1					
ANR	3806426	Argument	( char * ) lower		3806359	0					
ANR	3806427	CastExpression	( char * ) lower		3806359	0					
ANR	3806428	CastTarget	char *		3806359	0					
ANR	3806429	Identifier	lower		3806359	1					
ANR	3806430	Argument	sizeof ( _case_t ) * ( lower_size + 8 )		3806359	1					
ANR	3806431	MultiplicativeExpression	sizeof ( _case_t ) * ( lower_size + 8 )		3806359	0		*			
ANR	3806432	SizeofExpression	sizeof ( _case_t )		3806359	0					
ANR	3806433	Sizeof	sizeof		3806359	0					
ANR	3806434	SizeofOperand	_case_t		3806359	1					
ANR	3806435	AdditiveExpression	lower_size + 8		3806359	1		+			
ANR	3806436	Identifier	lower_size		3806359	0					
ANR	3806437	PrimaryExpression	8		3806359	1					
ANR	3806438	ExpressionStatement	lower_size += 8	642:8:16585:16600	3806359	1	True				
ANR	3806439	AssignmentExpression	lower_size += 8		3806359	0		+=			
ANR	3806440	Identifier	lower_size		3806359	0					
ANR	3806441	PrimaryExpression	8		3806359	1					
ANR	3806442	ForStatement	for ( i = 0 ; i < lower_used && code > lower [ i ] . key ; i ++ )		3806359	4					
ANR	3806443	ForInit	i = 0 ;	648:9:16668:16673	3806359	0	True				
ANR	3806444	AssignmentExpression	i = 0		3806359	0		=			
ANR	3806445	Identifier	i		3806359	0					
ANR	3806446	PrimaryExpression	0		3806359	1					
ANR	3806447	Condition	i < lower_used && code > lower [ i ] . key	648:16:16675:16711	3806359	1	True				
ANR	3806448	AndExpression	i < lower_used && code > lower [ i ] . key		3806359	0		&&			
ANR	3806449	RelationalExpression	i < lower_used		3806359	0		<			
ANR	3806450	Identifier	i		3806359	0					
ANR	3806451	Identifier	lower_used		3806359	1					
ANR	3806452	RelationalExpression	code > lower [ i ] . key		3806359	1		>			
ANR	3806453	Identifier	code		3806359	0					
ANR	3806454	MemberAccess	lower [ i ] . key		3806359	1					
ANR	3806455	ArrayIndexing	lower [ i ]		3806359	0					
ANR	3806456	Identifier	lower		3806359	0					
ANR	3806457	Identifier	i		3806359	1					
ANR	3806458	Identifier	key		3806359	1					
ANR	3806459	PostIncDecOperationExpression	i ++	648:55:16714:16716	3806359	2	True				
ANR	3806460	Identifier	i		3806359	0					
ANR	3806461	IncDec	++		3806359	1					
ANR	3806462	ExpressionStatement		648:60:16719:16719	3806359	3	True				
ANR	3806463	IfStatement	if ( i < lower_used )		3806359	5					
ANR	3806464	Condition	i < lower_used	650:8:16730:16743	3806359	0	True				
ANR	3806465	RelationalExpression	i < lower_used		3806359	0		<			
ANR	3806466	Identifier	i		3806359	0					
ANR	3806467	Identifier	lower_used		3806359	1					
ANR	3806468	CompoundStatement		30:24:691:691	3806359	1					
ANR	3806469	ForStatement	for ( j = lower_used ; j > i ; j -- )		3806359	0					
ANR	3806470	ForInit	j = lower_used ;	654:13:16822:16836	3806359	0	True				
ANR	3806471	AssignmentExpression	j = lower_used		3806359	0		=			
ANR	3806472	Identifier	j		3806359	0					
ANR	3806473	Identifier	lower_used		3806359	1					
ANR	3806474	Condition	j > i	654:29:16838:16842	3806359	1	True				
ANR	3806475	RelationalExpression	j > i		3806359	0		>			
ANR	3806476	Identifier	j		3806359	0					
ANR	3806477	Identifier	i		3806359	1					
ANR	3806478	PostIncDecOperationExpression	j --	654:36:16845:16847	3806359	2	True				
ANR	3806479	Identifier	j		3806359	0					
ANR	3806480	IncDec	--		3806359	1					
ANR	3806481	ExpressionStatement	"( void ) AC_MEMCPY ( ( char * ) & lower [ j ] , ( char * ) & lower [ j - 1 ] , sizeof ( _case_t ) )"	655:10:16860:16961	3806359	3	True				
ANR	3806482	CastExpression	"( void ) AC_MEMCPY ( ( char * ) & lower [ j ] , ( char * ) & lower [ j - 1 ] , sizeof ( _case_t ) )"		3806359	0					
ANR	3806483	CastTarget	void		3806359	0					
ANR	3806484	CallExpression	"AC_MEMCPY ( ( char * ) & lower [ j ] , ( char * ) & lower [ j - 1 ] , sizeof ( _case_t ) )"		3806359	1					
ANR	3806485	Callee	AC_MEMCPY		3806359	0					
ANR	3806486	Identifier	AC_MEMCPY		3806359	0					
ANR	3806487	ArgumentList	( char * ) & lower [ j ]		3806359	1					
ANR	3806488	Argument	( char * ) & lower [ j ]		3806359	0					
ANR	3806489	CastExpression	( char * ) & lower [ j ]		3806359	0					
ANR	3806490	CastTarget	char *		3806359	0					
ANR	3806491	UnaryOperationExpression	& lower [ j ]		3806359	1					
ANR	3806492	UnaryOperator	&		3806359	0					
ANR	3806493	ArrayIndexing	lower [ j ]		3806359	1					
ANR	3806494	Identifier	lower		3806359	0					
ANR	3806495	Identifier	j		3806359	1					
ANR	3806496	Argument	( char * ) & lower [ j - 1 ]		3806359	1					
ANR	3806497	CastExpression	( char * ) & lower [ j - 1 ]		3806359	0					
ANR	3806498	CastTarget	char *		3806359	0					
ANR	3806499	UnaryOperationExpression	& lower [ j - 1 ]		3806359	1					
ANR	3806500	UnaryOperator	&		3806359	0					
ANR	3806501	ArrayIndexing	lower [ j - 1 ]		3806359	1					
ANR	3806502	Identifier	lower		3806359	0					
ANR	3806503	AdditiveExpression	j - 1		3806359	1		-			
ANR	3806504	Identifier	j		3806359	0					
ANR	3806505	PrimaryExpression	1		3806359	1					
ANR	3806506	Argument	sizeof ( _case_t )		3806359	2					
ANR	3806507	SizeofExpression	sizeof ( _case_t )		3806359	0					
ANR	3806508	Sizeof	sizeof		3806359	0					
ANR	3806509	SizeofOperand	_case_t		3806359	1					
ANR	3806510	ExpressionStatement	lower [ i ] . key = cases [ 1 ]	659:4:16974:16997	3806359	6	True				
ANR	3806511	AssignmentExpression	lower [ i ] . key = cases [ 1 ]		3806359	0		=			
ANR	3806512	MemberAccess	lower [ i ] . key		3806359	0					
ANR	3806513	ArrayIndexing	lower [ i ]		3806359	0					
ANR	3806514	Identifier	lower		3806359	0					
ANR	3806515	Identifier	i		3806359	1					
ANR	3806516	Identifier	key		3806359	1					
ANR	3806517	ArrayIndexing	cases [ 1 ]		3806359	1					
ANR	3806518	Identifier	cases		3806359	0					
ANR	3806519	PrimaryExpression	1		3806359	1					
ANR	3806520	ExpressionStatement	lower [ i ] . other1 = cases [ 0 ]	660:4:17018:17044	3806359	7	True				
ANR	3806521	AssignmentExpression	lower [ i ] . other1 = cases [ 0 ]		3806359	0		=			
ANR	3806522	MemberAccess	lower [ i ] . other1		3806359	0					
ANR	3806523	ArrayIndexing	lower [ i ]		3806359	0					
ANR	3806524	Identifier	lower		3806359	0					
ANR	3806525	Identifier	i		3806359	1					
ANR	3806526	Identifier	other1		3806359	1					
ANR	3806527	ArrayIndexing	cases [ 0 ]		3806359	1					
ANR	3806528	Identifier	cases		3806359	0					
ANR	3806529	PrimaryExpression	0		3806359	1					
ANR	3806530	ExpressionStatement	lower [ i ] . other2 = cases [ 2 ]	661:4:17062:17088	3806359	8	True				
ANR	3806531	AssignmentExpression	lower [ i ] . other2 = cases [ 2 ]		3806359	0		=			
ANR	3806532	MemberAccess	lower [ i ] . other2		3806359	0					
ANR	3806533	ArrayIndexing	lower [ i ]		3806359	0					
ANR	3806534	Identifier	lower		3806359	0					
ANR	3806535	Identifier	i		3806359	1					
ANR	3806536	Identifier	other2		3806359	1					
ANR	3806537	ArrayIndexing	cases [ 2 ]		3806359	1					
ANR	3806538	Identifier	cases		3806359	0					
ANR	3806539	PrimaryExpression	2		3806359	1					
ANR	3806540	ExpressionStatement	lower_used ++	663:4:17107:17119	3806359	9	True				
ANR	3806541	PostIncDecOperationExpression	lower_used ++		3806359	0					
ANR	3806542	Identifier	lower_used		3806359	0					
ANR	3806543	IncDec	++		3806359	1					
ANR	3806544	ReturnType	static void		3806359	1					
ANR	3806545	Identifier	add_lower		3806359	2					
ANR	3806546	ParameterList	ac_uint4 code		3806359	3					
ANR	3806547	Parameter	ac_uint4 code	620:10:16039:16051	3806359	0	True				
ANR	3806548	ParameterType	ac_uint4		3806359	0					
ANR	3806549	Identifier	code		3806359	1					
ANR	3806550	CFGEntryNode	ENTRY		3806359		True				
ANR	3806551	CFGExitNode	EXIT		3806359		True				
ANR	3806552	Symbol	malloc		3806359						
ANR	3806553	Symbol	code		3806359						
ANR	3806554	Symbol	cases		3806359						
ANR	3806555	Symbol	lower		3806359						
ANR	3806556	Symbol	i		3806359						
ANR	3806557	Symbol	j		3806359						
ANR	3806558	Symbol	realloc		3806359						
ANR	3806559	Symbol	* cases		3806359						
ANR	3806560	Symbol	* lower		3806359						
ANR	3806561	Symbol	lower [ i ] . other2		3806359						
ANR	3806562	Symbol	lower [ i ] . other1		3806359						
ANR	3806563	Symbol	lower [ i ] . key		3806359						
ANR	3806564	Symbol	* i		3806359						
ANR	3806565	Symbol	lower_used		3806359						
ANR	3806566	Symbol	lower_size		3806359						
ANR	3806567	Function	ordered_ccl_insert	666:0:17124:18876							
ANR	3806568	FunctionDef	"ordered_ccl_insert (ac_uint4 c , ac_uint4 ccl_code)"		3806567	0					
ANR	3806569	CompoundStatement		668:0:17186:18876	3806567	0					
ANR	3806570	IdentifierDeclStatement	"ac_uint4 i , j ;"	669:4:17192:17205	3806567	0	True				
ANR	3806571	IdentifierDecl	i		3806567	0					
ANR	3806572	IdentifierDeclType	ac_uint4		3806567	0					
ANR	3806573	Identifier	i		3806567	1					
ANR	3806574	IdentifierDecl	j		3806567	1					
ANR	3806575	IdentifierDeclType	ac_uint4		3806567	0					
ANR	3806576	Identifier	j		3806567	1					
ANR	3806577	IfStatement	if ( ccl_used == ccl_size )		3806567	1					
ANR	3806578	Condition	ccl_used == ccl_size	671:8:17216:17235	3806567	0	True				
ANR	3806579	EqualityExpression	ccl_used == ccl_size		3806567	0		==			
ANR	3806580	Identifier	ccl_used		3806567	0					
ANR	3806581	Identifier	ccl_size		3806567	1					
ANR	3806582	CompoundStatement		4:30:51:51	3806567	1					
ANR	3806583	IfStatement	if ( ccl_size == 0 )		3806567	0					
ANR	3806584	Condition	ccl_size == 0	672:12:17252:17264	3806567	0	True				
ANR	3806585	EqualityExpression	ccl_size == 0		3806567	0		==			
ANR	3806586	Identifier	ccl_size		3806567	0					
ANR	3806587	PrimaryExpression	0		3806567	1					
ANR	3806588	ExpressionStatement	ccl = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) * 24 )	673:10:17277:17325	3806567	1	True				
ANR	3806589	AssignmentExpression	ccl = ( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) * 24 )		3806567	0		=			
ANR	3806590	Identifier	ccl		3806567	0					
ANR	3806591	CastExpression	( ac_uint4 * ) malloc ( sizeof ( ac_uint4 ) * 24 )		3806567	1					
ANR	3806592	CastTarget	ac_uint4 *		3806567	0					
ANR	3806593	CallExpression	malloc ( sizeof ( ac_uint4 ) * 24 )		3806567	1					
ANR	3806594	Callee	malloc		3806567	0					
ANR	3806595	Identifier	malloc		3806567	0					
ANR	3806596	ArgumentList	sizeof ( ac_uint4 ) * 24		3806567	1					
ANR	3806597	Argument	sizeof ( ac_uint4 ) * 24		3806567	0					
ANR	3806598	MultiplicativeExpression	sizeof ( ac_uint4 ) * 24		3806567	0		*			
ANR	3806599	SizeofExpression	sizeof ( ac_uint4 )		3806567	0					
ANR	3806600	Sizeof	sizeof		3806567	0					
ANR	3806601	SizeofOperand	ac_uint4		3806567	1					
ANR	3806602	PrimaryExpression	24		3806567	1					
ANR	3806603	ElseStatement	else		3806567	0					
ANR	3806604	ExpressionStatement	"ccl = ( ac_uint4 * ) realloc ( ( char * ) ccl , sizeof ( ac_uint4 ) * ( ccl_size + 24 ) )"	675:10:17350:17440	3806567	0	True				
ANR	3806605	AssignmentExpression	"ccl = ( ac_uint4 * ) realloc ( ( char * ) ccl , sizeof ( ac_uint4 ) * ( ccl_size + 24 ) )"		3806567	0		=			
ANR	3806606	Identifier	ccl		3806567	0					
ANR	3806607	CastExpression	"( ac_uint4 * ) realloc ( ( char * ) ccl , sizeof ( ac_uint4 ) * ( ccl_size + 24 ) )"		3806567	1					
ANR	3806608	CastTarget	ac_uint4 *		3806567	0					
ANR	3806609	CallExpression	"realloc ( ( char * ) ccl , sizeof ( ac_uint4 ) * ( ccl_size + 24 ) )"		3806567	1					
ANR	3806610	Callee	realloc		3806567	0					
ANR	3806611	Identifier	realloc		3806567	0					
ANR	3806612	ArgumentList	( char * ) ccl		3806567	1					
ANR	3806613	Argument	( char * ) ccl		3806567	0					
ANR	3806614	CastExpression	( char * ) ccl		3806567	0					
ANR	3806615	CastTarget	char *		3806567	0					
ANR	3806616	Identifier	ccl		3806567	1					
ANR	3806617	Argument	sizeof ( ac_uint4 ) * ( ccl_size + 24 )		3806567	1					
ANR	3806618	MultiplicativeExpression	sizeof ( ac_uint4 ) * ( ccl_size + 24 )		3806567	0		*			
ANR	3806619	SizeofExpression	sizeof ( ac_uint4 )		3806567	0					
ANR	3806620	Sizeof	sizeof		3806567	0					
ANR	3806621	SizeofOperand	ac_uint4		3806567	1					
ANR	3806622	AdditiveExpression	ccl_size + 24		3806567	1		+			
ANR	3806623	Identifier	ccl_size		3806567	0					
ANR	3806624	PrimaryExpression	24		3806567	1					
ANR	3806625	ExpressionStatement	ccl_size += 24	677:8:17450:17464	3806567	1	True				
ANR	3806626	AssignmentExpression	ccl_size += 24		3806567	0		+=			
ANR	3806627	Identifier	ccl_size		3806567	0					
ANR	3806628	PrimaryExpression	24		3806567	1					
ANR	3806629	IfStatement	if ( ccl_used == 0 )		3806567	2					
ANR	3806630	Condition	ccl_used == 0	683:8:17535:17547	3806567	0	True				
ANR	3806631	EqualityExpression	ccl_used == 0		3806567	0		==			
ANR	3806632	Identifier	ccl_used		3806567	0					
ANR	3806633	PrimaryExpression	0		3806567	1					
ANR	3806634	CompoundStatement		16:23:363:363	3806567	1					
ANR	3806635	ExpressionStatement	ccl [ 0 ] = ccl [ 1 ] = c	684:8:17560:17579	3806567	0	True				
ANR	3806636	AssignmentExpression	ccl [ 0 ] = ccl [ 1 ] = c		3806567	0		=			
ANR	3806637	ArrayIndexing	ccl [ 0 ]		3806567	0					
ANR	3806638	Identifier	ccl		3806567	0					
ANR	3806639	PrimaryExpression	0		3806567	1					
ANR	3806640	AssignmentExpression	ccl [ 1 ] = c		3806567	1		=			
ANR	3806641	ArrayIndexing	ccl [ 1 ]		3806567	0					
ANR	3806642	Identifier	ccl		3806567	0					
ANR	3806643	PrimaryExpression	1		3806567	1					
ANR	3806644	Identifier	c		3806567	1					
ANR	3806645	ExpressionStatement	ccl [ 2 ] = ccl_code	685:8:17589:17606	3806567	1	True				
ANR	3806646	AssignmentExpression	ccl [ 2 ] = ccl_code		3806567	0		=			
ANR	3806647	ArrayIndexing	ccl [ 2 ]		3806567	0					
ANR	3806648	Identifier	ccl		3806567	0					
ANR	3806649	PrimaryExpression	2		3806567	1					
ANR	3806650	Identifier	ccl_code		3806567	1					
ANR	3806651	ExpressionStatement	ccl_used += 3	686:8:17616:17629	3806567	2	True				
ANR	3806652	AssignmentExpression	ccl_used += 3		3806567	0		+=			
ANR	3806653	Identifier	ccl_used		3806567	0					
ANR	3806654	PrimaryExpression	3		3806567	1					
ANR	3806655	ReturnStatement	return ;	687:8:17639:17645	3806567	3	True				
ANR	3806656	IfStatement	if ( ccl_code == ccl [ ccl_used - 1 ] && c == ccl [ ccl_used - 2 ] + 1 )		3806567	3					
ANR	3806657	Condition	ccl_code == ccl [ ccl_used - 1 ] && c == ccl [ ccl_used - 2 ] + 1	694:8:17810:17868	3806567	0	True				
ANR	3806658	AndExpression	ccl_code == ccl [ ccl_used - 1 ] && c == ccl [ ccl_used - 2 ] + 1		3806567	0		&&			
ANR	3806659	EqualityExpression	ccl_code == ccl [ ccl_used - 1 ]		3806567	0		==			
ANR	3806660	Identifier	ccl_code		3806567	0					
ANR	3806661	ArrayIndexing	ccl [ ccl_used - 1 ]		3806567	1					
ANR	3806662	Identifier	ccl		3806567	0					
ANR	3806663	AdditiveExpression	ccl_used - 1		3806567	1		-			
ANR	3806664	Identifier	ccl_used		3806567	0					
ANR	3806665	PrimaryExpression	1		3806567	1					
ANR	3806666	EqualityExpression	c == ccl [ ccl_used - 2 ] + 1		3806567	1		==			
ANR	3806667	Identifier	c		3806567	0					
ANR	3806668	AdditiveExpression	ccl [ ccl_used - 2 ] + 1		3806567	1		+			
ANR	3806669	ArrayIndexing	ccl [ ccl_used - 2 ]		3806567	0					
ANR	3806670	Identifier	ccl		3806567	0					
ANR	3806671	AdditiveExpression	ccl_used - 2		3806567	1		-			
ANR	3806672	Identifier	ccl_used		3806567	0					
ANR	3806673	PrimaryExpression	2		3806567	1					
ANR	3806674	PrimaryExpression	1		3806567	1					
ANR	3806675	CompoundStatement		27:69:684:684	3806567	1					
ANR	3806676	ExpressionStatement	ccl [ ccl_used - 2 ] = c	695:8:17881:17902	3806567	0	True				
ANR	3806677	AssignmentExpression	ccl [ ccl_used - 2 ] = c		3806567	0		=			
ANR	3806678	ArrayIndexing	ccl [ ccl_used - 2 ]		3806567	0					
ANR	3806679	Identifier	ccl		3806567	0					
ANR	3806680	AdditiveExpression	ccl_used - 2		3806567	1		-			
ANR	3806681	Identifier	ccl_used		3806567	0					
ANR	3806682	PrimaryExpression	2		3806567	1					
ANR	3806683	Identifier	c		3806567	1					
ANR	3806684	ReturnStatement	return ;	696:8:17912:17918	3806567	1	True				
ANR	3806685	IfStatement	if ( c > ccl [ ccl_used - 2 ] + 1 || ( c == ccl [ ccl_used - 2 ] + 1 && ccl_code != ccl [ ccl_used - 1 ] ) )		3806567	4					
ANR	3806686	Condition	c > ccl [ ccl_used - 2 ] + 1 || ( c == ccl [ ccl_used - 2 ] + 1 && ccl_code != ccl [ ccl_used - 1 ] )	702:8:18017:18114	3806567	0	True				
ANR	3806687	OrExpression	c > ccl [ ccl_used - 2 ] + 1 || ( c == ccl [ ccl_used - 2 ] + 1 && ccl_code != ccl [ ccl_used - 1 ] )		3806567	0		||			
ANR	3806688	RelationalExpression	c > ccl [ ccl_used - 2 ] + 1		3806567	0		>			
ANR	3806689	Identifier	c		3806567	0					
ANR	3806690	AdditiveExpression	ccl [ ccl_used - 2 ] + 1		3806567	1		+			
ANR	3806691	ArrayIndexing	ccl [ ccl_used - 2 ]		3806567	0					
ANR	3806692	Identifier	ccl		3806567	0					
ANR	3806693	AdditiveExpression	ccl_used - 2		3806567	1		-			
ANR	3806694	Identifier	ccl_used		3806567	0					
ANR	3806695	PrimaryExpression	2		3806567	1					
ANR	3806696	PrimaryExpression	1		3806567	1					
ANR	3806697	AndExpression	c == ccl [ ccl_used - 2 ] + 1 && ccl_code != ccl [ ccl_used - 1 ]		3806567	1		&&			
ANR	3806698	EqualityExpression	c == ccl [ ccl_used - 2 ] + 1		3806567	0		==			
ANR	3806699	Identifier	c		3806567	0					
ANR	3806700	AdditiveExpression	ccl [ ccl_used - 2 ] + 1		3806567	1		+			
ANR	3806701	ArrayIndexing	ccl [ ccl_used - 2 ]		3806567	0					
ANR	3806702	Identifier	ccl		3806567	0					
ANR	3806703	AdditiveExpression	ccl_used - 2		3806567	1		-			
ANR	3806704	Identifier	ccl_used		3806567	0					
ANR	3806705	PrimaryExpression	2		3806567	1					
ANR	3806706	PrimaryExpression	1		3806567	1					
ANR	3806707	EqualityExpression	ccl_code != ccl [ ccl_used - 1 ]		3806567	1		!=			
ANR	3806708	Identifier	ccl_code		3806567	0					
ANR	3806709	ArrayIndexing	ccl [ ccl_used - 1 ]		3806567	1					
ANR	3806710	Identifier	ccl		3806567	0					
ANR	3806711	AdditiveExpression	ccl_used - 1		3806567	1		-			
ANR	3806712	Identifier	ccl_used		3806567	0					
ANR	3806713	PrimaryExpression	1		3806567	1					
ANR	3806714	CompoundStatement		36:71:930:930	3806567	1					
ANR	3806715	ExpressionStatement	ccl [ ccl_used ++ ] = c	704:8:18127:18146	3806567	0	True				
ANR	3806716	AssignmentExpression	ccl [ ccl_used ++ ] = c		3806567	0		=			
ANR	3806717	ArrayIndexing	ccl [ ccl_used ++ ]		3806567	0					
ANR	3806718	Identifier	ccl		3806567	0					
ANR	3806719	PostIncDecOperationExpression	ccl_used ++		3806567	1					
ANR	3806720	Identifier	ccl_used		3806567	0					
ANR	3806721	IncDec	++		3806567	1					
ANR	3806722	Identifier	c		3806567	1					
ANR	3806723	ExpressionStatement	ccl [ ccl_used ++ ] = c	705:8:18156:18175	3806567	1	True				
ANR	3806724	AssignmentExpression	ccl [ ccl_used ++ ] = c		3806567	0		=			
ANR	3806725	ArrayIndexing	ccl [ ccl_used ++ ]		3806567	0					
ANR	3806726	Identifier	ccl		3806567	0					
ANR	3806727	PostIncDecOperationExpression	ccl_used ++		3806567	1					
ANR	3806728	Identifier	ccl_used		3806567	0					
ANR	3806729	IncDec	++		3806567	1					
ANR	3806730	Identifier	c		3806567	1					
ANR	3806731	ExpressionStatement	ccl [ ccl_used ++ ] = ccl_code	706:8:18185:18211	3806567	2	True				
ANR	3806732	AssignmentExpression	ccl [ ccl_used ++ ] = ccl_code		3806567	0		=			
ANR	3806733	ArrayIndexing	ccl [ ccl_used ++ ]		3806567	0					
ANR	3806734	Identifier	ccl		3806567	0					
ANR	3806735	PostIncDecOperationExpression	ccl_used ++		3806567	1					
ANR	3806736	Identifier	ccl_used		3806567	0					
ANR	3806737	IncDec	++		3806567	1					
ANR	3806738	Identifier	ccl_code		3806567	1					
ANR	3806739	ReturnStatement	return ;	707:8:18221:18227	3806567	3	True				
ANR	3806740	ForStatement	for ( i = 0 ; i < ccl_used && c > ccl [ i + 1 ] + 1 ; i += 3 )		3806567	5					
ANR	3806741	ForInit	i = 0 ;	713:9:18324:18329	3806567	0	True				
ANR	3806742	AssignmentExpression	i = 0		3806567	0		=			
ANR	3806743	Identifier	i		3806567	0					
ANR	3806744	PrimaryExpression	0		3806567	1					
ANR	3806745	Condition	i < ccl_used && c > ccl [ i + 1 ] + 1	713:16:18331:18364	3806567	1	True				
ANR	3806746	AndExpression	i < ccl_used && c > ccl [ i + 1 ] + 1		3806567	0		&&			
ANR	3806747	RelationalExpression	i < ccl_used		3806567	0		<			
ANR	3806748	Identifier	i		3806567	0					
ANR	3806749	Identifier	ccl_used		3806567	1					
ANR	3806750	RelationalExpression	c > ccl [ i + 1 ] + 1		3806567	1		>			
ANR	3806751	Identifier	c		3806567	0					
ANR	3806752	AdditiveExpression	ccl [ i + 1 ] + 1		3806567	1		+			
ANR	3806753	ArrayIndexing	ccl [ i + 1 ]		3806567	0					
ANR	3806754	Identifier	ccl		3806567	0					
ANR	3806755	AdditiveExpression	i + 1		3806567	1		+			
ANR	3806756	Identifier	i		3806567	0					
ANR	3806757	PrimaryExpression	1		3806567	1					
ANR	3806758	PrimaryExpression	1		3806567	1					
ANR	3806759	AssignmentExpression	i += 3	713:52:18367:18372	3806567	2	True	+=			
ANR	3806760	Identifier	i		3806567	0					
ANR	3806761	PrimaryExpression	3		3806567	1					
ANR	3806762	ExpressionStatement		713:60:18375:18375	3806567	3	True				
ANR	3806763	IfStatement	if ( ccl_code == ccl [ i + 2 ] && c == ccl [ i + 1 ] + 1 )		3806567	6					
ANR	3806764	Condition	ccl_code == ccl [ i + 2 ] && c == ccl [ i + 1 ] + 1	715:8:18386:18430	3806567	0	True				
ANR	3806765	AndExpression	ccl_code == ccl [ i + 2 ] && c == ccl [ i + 1 ] + 1		3806567	0		&&			
ANR	3806766	EqualityExpression	ccl_code == ccl [ i + 2 ]		3806567	0		==			
ANR	3806767	Identifier	ccl_code		3806567	0					
ANR	3806768	ArrayIndexing	ccl [ i + 2 ]		3806567	1					
ANR	3806769	Identifier	ccl		3806567	0					
ANR	3806770	AdditiveExpression	i + 2		3806567	1		+			
ANR	3806771	Identifier	i		3806567	0					
ANR	3806772	PrimaryExpression	2		3806567	1					
ANR	3806773	EqualityExpression	c == ccl [ i + 1 ] + 1		3806567	1		==			
ANR	3806774	Identifier	c		3806567	0					
ANR	3806775	AdditiveExpression	ccl [ i + 1 ] + 1		3806567	1		+			
ANR	3806776	ArrayIndexing	ccl [ i + 1 ]		3806567	0					
ANR	3806777	Identifier	ccl		3806567	0					
ANR	3806778	AdditiveExpression	i + 1		3806567	1		+			
ANR	3806779	Identifier	i		3806567	0					
ANR	3806780	PrimaryExpression	1		3806567	1					
ANR	3806781	PrimaryExpression	1		3806567	1					
ANR	3806782	CompoundStatement		48:55:1246:1246	3806567	1					
ANR	3806783	ExpressionStatement	ccl [ i + 1 ] = c	719:8:18503:18517	3806567	0	True				
ANR	3806784	AssignmentExpression	ccl [ i + 1 ] = c		3806567	0		=			
ANR	3806785	ArrayIndexing	ccl [ i + 1 ]		3806567	0					
ANR	3806786	Identifier	ccl		3806567	0					
ANR	3806787	AdditiveExpression	i + 1		3806567	1		+			
ANR	3806788	Identifier	i		3806567	0					
ANR	3806789	PrimaryExpression	1		3806567	1					
ANR	3806790	Identifier	c		3806567	1					
ANR	3806791	ReturnStatement	return ;	720:8:18527:18533	3806567	1	True				
ANR	3806792	ElseStatement	else		3806567	0					
ANR	3806793	IfStatement	if ( c < ccl [ i ] )		3806567	0					
ANR	3806794	Condition	c < ccl [ i ]	721:15:18550:18559	3806567	0	True				
ANR	3806795	RelationalExpression	c < ccl [ i ]		3806567	0		<			
ANR	3806796	Identifier	c		3806567	0					
ANR	3806797	ArrayIndexing	ccl [ i ]		3806567	1					
ANR	3806798	Identifier	ccl		3806567	0					
ANR	3806799	Identifier	i		3806567	1					
ANR	3806800	CompoundStatement		54:27:1375:1375	3806567	1					
ANR	3806801	ForStatement	for ( j = ccl_used ; j > i ; j -= 3 )		3806567	0					
ANR	3806802	ForInit	j = ccl_used ;	725:13:18658:18670	3806567	0	True				
ANR	3806803	AssignmentExpression	j = ccl_used		3806567	0		=			
ANR	3806804	Identifier	j		3806567	0					
ANR	3806805	Identifier	ccl_used		3806567	1					
ANR	3806806	Condition	j > i	725:27:18672:18676	3806567	1	True				
ANR	3806807	RelationalExpression	j > i		3806567	0		>			
ANR	3806808	Identifier	j		3806567	0					
ANR	3806809	Identifier	i		3806567	1					
ANR	3806810	AssignmentExpression	j -= 3	725:34:18679:18684	3806567	2	True	-=			
ANR	3806811	Identifier	j		3806567	0					
ANR	3806812	PrimaryExpression	3		3806567	1					
ANR	3806813	CompoundStatement		58:42:1500:1500	3806567	3					
ANR	3806814	ExpressionStatement	ccl [ j ] = ccl [ j - 3 ]	726:12:18701:18720	3806567	0	True				
ANR	3806815	AssignmentExpression	ccl [ j ] = ccl [ j - 3 ]		3806567	0		=			
ANR	3806816	ArrayIndexing	ccl [ j ]		3806567	0					
ANR	3806817	Identifier	ccl		3806567	0					
ANR	3806818	Identifier	j		3806567	1					
ANR	3806819	ArrayIndexing	ccl [ j - 3 ]		3806567	1					
ANR	3806820	Identifier	ccl		3806567	0					
ANR	3806821	AdditiveExpression	j - 3		3806567	1		-			
ANR	3806822	Identifier	j		3806567	0					
ANR	3806823	PrimaryExpression	3		3806567	1					
ANR	3806824	ExpressionStatement	ccl [ j - 1 ] = ccl [ j - 4 ]	727:12:18734:18757	3806567	1	True				
ANR	3806825	AssignmentExpression	ccl [ j - 1 ] = ccl [ j - 4 ]		3806567	0		=			
ANR	3806826	ArrayIndexing	ccl [ j - 1 ]		3806567	0					
ANR	3806827	Identifier	ccl		3806567	0					
ANR	3806828	AdditiveExpression	j - 1		3806567	1		-			
ANR	3806829	Identifier	j		3806567	0					
ANR	3806830	PrimaryExpression	1		3806567	1					
ANR	3806831	ArrayIndexing	ccl [ j - 4 ]		3806567	1					
ANR	3806832	Identifier	ccl		3806567	0					
ANR	3806833	AdditiveExpression	j - 4		3806567	1		-			
ANR	3806834	Identifier	j		3806567	0					
ANR	3806835	PrimaryExpression	4		3806567	1					
ANR	3806836	ExpressionStatement	ccl [ j - 2 ] = ccl [ j - 5 ]	728:12:18771:18794	3806567	2	True				
ANR	3806837	AssignmentExpression	ccl [ j - 2 ] = ccl [ j - 5 ]		3806567	0		=			
ANR	3806838	ArrayIndexing	ccl [ j - 2 ]		3806567	0					
ANR	3806839	Identifier	ccl		3806567	0					
ANR	3806840	AdditiveExpression	j - 2		3806567	1		-			
ANR	3806841	Identifier	j		3806567	0					
ANR	3806842	PrimaryExpression	2		3806567	1					
ANR	3806843	ArrayIndexing	ccl [ j - 5 ]		3806567	1					
ANR	3806844	Identifier	ccl		3806567	0					
ANR	3806845	AdditiveExpression	j - 5		3806567	1		-			
ANR	3806846	Identifier	j		3806567	0					
ANR	3806847	PrimaryExpression	5		3806567	1					
ANR	3806848	ExpressionStatement	ccl [ i ] = ccl [ i + 1 ] = c	730:8:18814:18837	3806567	1	True				
ANR	3806849	AssignmentExpression	ccl [ i ] = ccl [ i + 1 ] = c		3806567	0		=			
ANR	3806850	ArrayIndexing	ccl [ i ]		3806567	0					
ANR	3806851	Identifier	ccl		3806567	0					
ANR	3806852	Identifier	i		3806567	1					
ANR	3806853	AssignmentExpression	ccl [ i + 1 ] = c		3806567	1		=			
ANR	3806854	ArrayIndexing	ccl [ i + 1 ]		3806567	0					
ANR	3806855	Identifier	ccl		3806567	0					
ANR	3806856	AdditiveExpression	i + 1		3806567	1		+			
ANR	3806857	Identifier	i		3806567	0					
ANR	3806858	PrimaryExpression	1		3806567	1					
ANR	3806859	Identifier	c		3806567	1					
ANR	3806860	ExpressionStatement	ccl [ i + 2 ] = ccl_code	731:8:18847:18868	3806567	2	True				
ANR	3806861	AssignmentExpression	ccl [ i + 2 ] = ccl_code		3806567	0		=			
ANR	3806862	ArrayIndexing	ccl [ i + 2 ]		3806567	0					
ANR	3806863	Identifier	ccl		3806567	0					
ANR	3806864	AdditiveExpression	i + 2		3806567	1		+			
ANR	3806865	Identifier	i		3806567	0					
ANR	3806866	PrimaryExpression	2		3806567	1					
ANR	3806867	Identifier	ccl_code		3806567	1					
ANR	3806868	ReturnType	static void		3806567	1					
ANR	3806869	Identifier	ordered_ccl_insert		3806567	2					
ANR	3806870	ParameterList	"ac_uint4 c , ac_uint4 ccl_code"		3806567	3					
ANR	3806871	Parameter	ac_uint4 c	667:19:17155:17164	3806567	0	True				
ANR	3806872	ParameterType	ac_uint4		3806567	0					
ANR	3806873	Identifier	c		3806567	1					
ANR	3806874	Parameter	ac_uint4 ccl_code	667:31:17167:17183	3806567	1	True				
ANR	3806875	ParameterType	ac_uint4		3806567	0					
ANR	3806876	Identifier	ccl_code		3806567	1					
ANR	3806877	CFGEntryNode	ENTRY		3806567		True				
ANR	3806878	CFGExitNode	EXIT		3806567		True				
ANR	3806879	Symbol	malloc		3806567						
ANR	3806880	Symbol	c		3806567						
ANR	3806881	Symbol	i		3806567						
ANR	3806882	Symbol	* ccl		3806567						
ANR	3806883	Symbol	j		3806567						
ANR	3806884	Symbol	ccl_used		3806567						
ANR	3806885	Symbol	realloc		3806567						
ANR	3806886	Symbol	ccl_size		3806567						
ANR	3806887	Symbol	ccl		3806567						
ANR	3806888	Symbol	ccl_code		3806567						
ANR	3806889	Symbol	* ccl_used		3806567						
ANR	3806890	Symbol	* i		3806567						
ANR	3806891	Symbol	* j		3806567						
ANR	3806892	Function	make_number	739:0:18979:19640							
ANR	3806893	FunctionDef	"make_number (short num , short denom)"		3806892	0					
ANR	3806894	CompoundStatement		741:0:19031:19640	3806892	0					
ANR	3806895	IdentifierDeclStatement	ac_uint4 n ;	742:4:19037:19047	3806892	0	True				
ANR	3806896	IdentifierDecl	n		3806892	0					
ANR	3806897	IdentifierDeclType	ac_uint4		3806892	0					
ANR	3806898	Identifier	n		3806892	1					
ANR	3806899	ForStatement	for ( n = 0 ; n < nums_used ; n ++ )		3806892	1					
ANR	3806900	ForInit	n = 0 ;	747:9:19121:19126	3806892	0	True				
ANR	3806901	AssignmentExpression	n = 0		3806892	0		=			
ANR	3806902	Identifier	n		3806892	0					
ANR	3806903	PrimaryExpression	0		3806892	1					
ANR	3806904	Condition	n < nums_used	747:16:19128:19140	3806892	1	True				
ANR	3806905	RelationalExpression	n < nums_used		3806892	0		<			
ANR	3806906	Identifier	n		3806892	0					
ANR	3806907	Identifier	nums_used		3806892	1					
ANR	3806908	PostIncDecOperationExpression	n ++	747:31:19143:19145	3806892	2	True				
ANR	3806909	Identifier	n		3806892	0					
ANR	3806910	IncDec	++		3806892	1					
ANR	3806911	CompoundStatement		7:36:116:116	3806892	3					
ANR	3806912	IfStatement	if ( nums [ n ] . numerator == num && nums [ n ] . denominator == denom )		3806892	0					
ANR	3806913	Condition	nums [ n ] . numerator == num && nums [ n ] . denominator == denom	748:12:19162:19217	3806892	0	True				
ANR	3806914	AndExpression	nums [ n ] . numerator == num && nums [ n ] . denominator == denom		3806892	0		&&			
ANR	3806915	EqualityExpression	nums [ n ] . numerator == num		3806892	0		==			
ANR	3806916	MemberAccess	nums [ n ] . numerator		3806892	0					
ANR	3806917	ArrayIndexing	nums [ n ]		3806892	0					
ANR	3806918	Identifier	nums		3806892	0					
ANR	3806919	Identifier	n		3806892	1					
ANR	3806920	Identifier	numerator		3806892	1					
ANR	3806921	Identifier	num		3806892	1					
ANR	3806922	EqualityExpression	nums [ n ] . denominator == denom		3806892	1		==			
ANR	3806923	MemberAccess	nums [ n ] . denominator		3806892	0					
ANR	3806924	ArrayIndexing	nums [ n ]		3806892	0					
ANR	3806925	Identifier	nums		3806892	0					
ANR	3806926	Identifier	n		3806892	1					
ANR	3806927	Identifier	denominator		3806892	1					
ANR	3806928	Identifier	denom		3806892	1					
ANR	3806929	ReturnStatement	return n << 1 ;	749:10:19230:19243	3806892	1	True				
ANR	3806930	ShiftExpression	n << 1		3806892	0		<<			
ANR	3806931	Identifier	n		3806892	0					
ANR	3806932	PrimaryExpression	1		3806892	1					
ANR	3806933	IfStatement	if ( nums_used == nums_size )		3806892	2					
ANR	3806934	Condition	nums_used == nums_size	752:8:19260:19281	3806892	0	True				
ANR	3806935	EqualityExpression	nums_used == nums_size		3806892	0		==			
ANR	3806936	Identifier	nums_used		3806892	0					
ANR	3806937	Identifier	nums_size		3806892	1					
ANR	3806938	CompoundStatement		12:32:252:252	3806892	1					
ANR	3806939	IfStatement	if ( nums_size == 0 )		3806892	0					
ANR	3806940	Condition	nums_size == 0	753:12:19298:19311	3806892	0	True				
ANR	3806941	EqualityExpression	nums_size == 0		3806892	0		==			
ANR	3806942	Identifier	nums_size		3806892	0					
ANR	3806943	PrimaryExpression	0		3806892	1					
ANR	3806944	ExpressionStatement	nums = ( _num_t * ) malloc ( sizeof ( _num_t ) << 3 )	754:10:19324:19369	3806892	1	True				
ANR	3806945	AssignmentExpression	nums = ( _num_t * ) malloc ( sizeof ( _num_t ) << 3 )		3806892	0		=			
ANR	3806946	Identifier	nums		3806892	0					
ANR	3806947	CastExpression	( _num_t * ) malloc ( sizeof ( _num_t ) << 3 )		3806892	1					
ANR	3806948	CastTarget	_num_t *		3806892	0					
ANR	3806949	CallExpression	malloc ( sizeof ( _num_t ) << 3 )		3806892	1					
ANR	3806950	Callee	malloc		3806892	0					
ANR	3806951	Identifier	malloc		3806892	0					
ANR	3806952	ArgumentList	sizeof ( _num_t ) << 3		3806892	1					
ANR	3806953	Argument	sizeof ( _num_t ) << 3		3806892	0					
ANR	3806954	ShiftExpression	sizeof ( _num_t ) << 3		3806892	0		<<			
ANR	3806955	SizeofExpression	sizeof ( _num_t )		3806892	0					
ANR	3806956	Sizeof	sizeof		3806892	0					
ANR	3806957	SizeofOperand	_num_t		3806892	1					
ANR	3806958	PrimaryExpression	3		3806892	1					
ANR	3806959	ElseStatement	else		3806892	0					
ANR	3806960	ExpressionStatement	"nums = ( _num_t * ) realloc ( ( char * ) nums , sizeof ( _num_t ) * ( nums_size + 8 ) )"	756:10:19394:19504	3806892	0	True				
ANR	3806961	AssignmentExpression	"nums = ( _num_t * ) realloc ( ( char * ) nums , sizeof ( _num_t ) * ( nums_size + 8 ) )"		3806892	0		=			
ANR	3806962	Identifier	nums		3806892	0					
ANR	3806963	CastExpression	"( _num_t * ) realloc ( ( char * ) nums , sizeof ( _num_t ) * ( nums_size + 8 ) )"		3806892	1					
ANR	3806964	CastTarget	_num_t *		3806892	0					
ANR	3806965	CallExpression	"realloc ( ( char * ) nums , sizeof ( _num_t ) * ( nums_size + 8 ) )"		3806892	1					
ANR	3806966	Callee	realloc		3806892	0					
ANR	3806967	Identifier	realloc		3806892	0					
ANR	3806968	ArgumentList	( char * ) nums		3806892	1					
ANR	3806969	Argument	( char * ) nums		3806892	0					
ANR	3806970	CastExpression	( char * ) nums		3806892	0					
ANR	3806971	CastTarget	char *		3806892	0					
ANR	3806972	Identifier	nums		3806892	1					
ANR	3806973	Argument	sizeof ( _num_t ) * ( nums_size + 8 )		3806892	1					
ANR	3806974	MultiplicativeExpression	sizeof ( _num_t ) * ( nums_size + 8 )		3806892	0		*			
ANR	3806975	SizeofExpression	sizeof ( _num_t )		3806892	0					
ANR	3806976	Sizeof	sizeof		3806892	0					
ANR	3806977	SizeofOperand	_num_t		3806892	1					
ANR	3806978	AdditiveExpression	nums_size + 8		3806892	1		+			
ANR	3806979	Identifier	nums_size		3806892	0					
ANR	3806980	PrimaryExpression	8		3806892	1					
ANR	3806981	ExpressionStatement	nums_size += 8	758:8:19514:19528	3806892	1	True				
ANR	3806982	AssignmentExpression	nums_size += 8		3806892	0		+=			
ANR	3806983	Identifier	nums_size		3806892	0					
ANR	3806984	PrimaryExpression	8		3806892	1					
ANR	3806985	ExpressionStatement	n = nums_used ++	761:4:19541:19556	3806892	3	True				
ANR	3806986	AssignmentExpression	n = nums_used ++		3806892	0		=			
ANR	3806987	Identifier	n		3806892	0					
ANR	3806988	PostIncDecOperationExpression	nums_used ++		3806892	1					
ANR	3806989	Identifier	nums_used		3806892	0					
ANR	3806990	IncDec	++		3806892	1					
ANR	3806991	ExpressionStatement	nums [ n ] . numerator = num	762:4:19562:19585	3806892	4	True				
ANR	3806992	AssignmentExpression	nums [ n ] . numerator = num		3806892	0		=			
ANR	3806993	MemberAccess	nums [ n ] . numerator		3806892	0					
ANR	3806994	ArrayIndexing	nums [ n ]		3806892	0					
ANR	3806995	Identifier	nums		3806892	0					
ANR	3806996	Identifier	n		3806892	1					
ANR	3806997	Identifier	numerator		3806892	1					
ANR	3806998	Identifier	num		3806892	1					
ANR	3806999	ExpressionStatement	nums [ n ] . denominator = denom	763:4:19591:19618	3806892	5	True				
ANR	3807000	AssignmentExpression	nums [ n ] . denominator = denom		3806892	0		=			
ANR	3807001	MemberAccess	nums [ n ] . denominator		3806892	0					
ANR	3807002	ArrayIndexing	nums [ n ]		3806892	0					
ANR	3807003	Identifier	nums		3806892	0					
ANR	3807004	Identifier	n		3806892	1					
ANR	3807005	Identifier	denominator		3806892	1					
ANR	3807006	Identifier	denom		3806892	1					
ANR	3807007	ReturnStatement	return n << 1 ;	765:4:19625:19638	3806892	6	True				
ANR	3807008	ShiftExpression	n << 1		3806892	0		<<			
ANR	3807009	Identifier	n		3806892	0					
ANR	3807010	PrimaryExpression	1		3806892	1					
ANR	3807011	ReturnType	static ac_uint4		3806892	1					
ANR	3807012	Identifier	make_number		3806892	2					
ANR	3807013	ParameterList	"short num , short denom"		3806892	3					
ANR	3807014	Parameter	short num	740:12:19007:19015	3806892	0	True				
ANR	3807015	ParameterType	short		3806892	0					
ANR	3807016	Identifier	num		3806892	1					
ANR	3807017	Parameter	short denom	740:23:19018:19028	3806892	1	True				
ANR	3807018	ParameterType	short		3806892	0					
ANR	3807019	Identifier	denom		3806892	1					
ANR	3807020	CFGEntryNode	ENTRY		3806892		True				
ANR	3807021	CFGExitNode	EXIT		3806892		True				
ANR	3807022	Symbol	* nums		3806892						
ANR	3807023	Symbol	nums [ n ] . denominator		3806892						
ANR	3807024	Symbol	malloc		3806892						
ANR	3807025	Symbol	nums_size		3806892						
ANR	3807026	Symbol	num		3806892						
ANR	3807027	Symbol	nums_used		3806892						
ANR	3807028	Symbol	* n		3806892						
ANR	3807029	Symbol	denom		3806892						
ANR	3807030	Symbol	realloc		3806892						
ANR	3807031	Symbol	n		3806892						
ANR	3807032	Symbol	nums		3806892						
ANR	3807033	Symbol	nums [ n ] . numerator		3806892						
ANR	3807034	Function	add_number	768:0:19643:20785							
ANR	3807035	FunctionDef	"add_number (ac_uint4 code , short num , short denom)"		3807034	0					
ANR	3807036	CompoundStatement		770:0:19705:20785	3807034	0					
ANR	3807037	IdentifierDeclStatement	"ac_uint4 i , j ;"	771:4:19711:19724	3807034	0	True				
ANR	3807038	IdentifierDecl	i		3807034	0					
ANR	3807039	IdentifierDeclType	ac_uint4		3807034	0					
ANR	3807040	Identifier	i		3807034	1					
ANR	3807041	IdentifierDecl	j		3807034	1					
ANR	3807042	IdentifierDeclType	ac_uint4		3807034	0					
ANR	3807043	Identifier	j		3807034	1					
ANR	3807044	ForStatement	for ( i = 0 ; i < ncodes_used && code > ncodes [ i ] . code ; i ++ )		3807034	1					
ANR	3807045	ForInit	i = 0 ;	776:9:19784:19789	3807034	0	True				
ANR	3807046	AssignmentExpression	i = 0		3807034	0		=			
ANR	3807047	Identifier	i		3807034	0					
ANR	3807048	PrimaryExpression	0		3807034	1					
ANR	3807049	Condition	i < ncodes_used && code > ncodes [ i ] . code	776:16:19791:19830	3807034	1	True				
ANR	3807050	AndExpression	i < ncodes_used && code > ncodes [ i ] . code		3807034	0		&&			
ANR	3807051	RelationalExpression	i < ncodes_used		3807034	0		<			
ANR	3807052	Identifier	i		3807034	0					
ANR	3807053	Identifier	ncodes_used		3807034	1					
ANR	3807054	RelationalExpression	code > ncodes [ i ] . code		3807034	1		>			
ANR	3807055	Identifier	code		3807034	0					
ANR	3807056	MemberAccess	ncodes [ i ] . code		3807034	1					
ANR	3807057	ArrayIndexing	ncodes [ i ]		3807034	0					
ANR	3807058	Identifier	ncodes		3807034	0					
ANR	3807059	Identifier	i		3807034	1					
ANR	3807060	Identifier	code		3807034	1					
ANR	3807061	PostIncDecOperationExpression	i ++	776:58:19833:19835	3807034	2	True				
ANR	3807062	Identifier	i		3807034	0					
ANR	3807063	IncDec	++		3807034	1					
ANR	3807064	ExpressionStatement		776:63:19838:19838	3807034	3	True				
ANR	3807065	IfStatement	if ( i < ncodes_used && code == ncodes [ i ] . code )		3807034	2					
ANR	3807066	Condition	i < ncodes_used && code == ncodes [ i ] . code	782:8:19969:20009	3807034	0	True				
ANR	3807067	AndExpression	i < ncodes_used && code == ncodes [ i ] . code		3807034	0		&&			
ANR	3807068	RelationalExpression	i < ncodes_used		3807034	0		<			
ANR	3807069	Identifier	i		3807034	0					
ANR	3807070	Identifier	ncodes_used		3807034	1					
ANR	3807071	EqualityExpression	code == ncodes [ i ] . code		3807034	1		==			
ANR	3807072	Identifier	code		3807034	0					
ANR	3807073	MemberAccess	ncodes [ i ] . code		3807034	1					
ANR	3807074	ArrayIndexing	ncodes [ i ]		3807034	0					
ANR	3807075	Identifier	ncodes		3807034	0					
ANR	3807076	Identifier	i		3807034	1					
ANR	3807077	Identifier	code		3807034	1					
ANR	3807078	CompoundStatement		13:51:306:306	3807034	1					
ANR	3807079	ExpressionStatement	"ncodes [ i ] . idx = make_number ( num , denom )"	783:8:20022:20061	3807034	0	True				
ANR	3807080	AssignmentExpression	"ncodes [ i ] . idx = make_number ( num , denom )"		3807034	0		=			
ANR	3807081	MemberAccess	ncodes [ i ] . idx		3807034	0					
ANR	3807082	ArrayIndexing	ncodes [ i ]		3807034	0					
ANR	3807083	Identifier	ncodes		3807034	0					
ANR	3807084	Identifier	i		3807034	1					
ANR	3807085	Identifier	idx		3807034	1					
ANR	3807086	CallExpression	"make_number ( num , denom )"		3807034	1					
ANR	3807087	Callee	make_number		3807034	0					
ANR	3807088	Identifier	make_number		3807034	0					
ANR	3807089	ArgumentList	num		3807034	1					
ANR	3807090	Argument	num		3807034	0					
ANR	3807091	Identifier	num		3807034	0					
ANR	3807092	Argument	denom		3807034	1					
ANR	3807093	Identifier	denom		3807034	0					
ANR	3807094	ReturnStatement	return ;	784:8:20071:20077	3807034	1	True				
ANR	3807095	IfStatement	if ( ncodes_used == ncodes_size )		3807034	3					
ANR	3807096	Condition	ncodes_used == ncodes_size	790:8:20147:20172	3807034	0	True				
ANR	3807097	EqualityExpression	ncodes_used == ncodes_size		3807034	0		==			
ANR	3807098	Identifier	ncodes_used		3807034	0					
ANR	3807099	Identifier	ncodes_size		3807034	1					
ANR	3807100	CompoundStatement		21:36:469:469	3807034	1					
ANR	3807101	IfStatement	if ( ncodes_size == 0 )		3807034	0					
ANR	3807102	Condition	ncodes_size == 0	791:12:20189:20204	3807034	0	True				
ANR	3807103	EqualityExpression	ncodes_size == 0		3807034	0		==			
ANR	3807104	Identifier	ncodes_size		3807034	0					
ANR	3807105	PrimaryExpression	0		3807034	1					
ANR	3807106	ExpressionStatement	ncodes = ( _codeidx_t * ) malloc ( sizeof ( _codeidx_t ) << 3 )	792:10:20217:20272	3807034	1	True				
ANR	3807107	AssignmentExpression	ncodes = ( _codeidx_t * ) malloc ( sizeof ( _codeidx_t ) << 3 )		3807034	0		=			
ANR	3807108	Identifier	ncodes		3807034	0					
ANR	3807109	CastExpression	( _codeidx_t * ) malloc ( sizeof ( _codeidx_t ) << 3 )		3807034	1					
ANR	3807110	CastTarget	_codeidx_t *		3807034	0					
ANR	3807111	CallExpression	malloc ( sizeof ( _codeidx_t ) << 3 )		3807034	1					
ANR	3807112	Callee	malloc		3807034	0					
ANR	3807113	Identifier	malloc		3807034	0					
ANR	3807114	ArgumentList	sizeof ( _codeidx_t ) << 3		3807034	1					
ANR	3807115	Argument	sizeof ( _codeidx_t ) << 3		3807034	0					
ANR	3807116	ShiftExpression	sizeof ( _codeidx_t ) << 3		3807034	0		<<			
ANR	3807117	SizeofExpression	sizeof ( _codeidx_t )		3807034	0					
ANR	3807118	Sizeof	sizeof		3807034	0					
ANR	3807119	SizeofOperand	_codeidx_t		3807034	1					
ANR	3807120	PrimaryExpression	3		3807034	1					
ANR	3807121	ElseStatement	else		3807034	0					
ANR	3807122	ExpressionStatement	"ncodes = ( _codeidx_t * ) realloc ( ( char * ) ncodes , sizeof ( _codeidx_t ) * ( ncodes_size + 8 ) )"	794:10:20297:20399	3807034	0	True				
ANR	3807123	AssignmentExpression	"ncodes = ( _codeidx_t * ) realloc ( ( char * ) ncodes , sizeof ( _codeidx_t ) * ( ncodes_size + 8 ) )"		3807034	0		=			
ANR	3807124	Identifier	ncodes		3807034	0					
ANR	3807125	CastExpression	"( _codeidx_t * ) realloc ( ( char * ) ncodes , sizeof ( _codeidx_t ) * ( ncodes_size + 8 ) )"		3807034	1					
ANR	3807126	CastTarget	_codeidx_t *		3807034	0					
ANR	3807127	CallExpression	"realloc ( ( char * ) ncodes , sizeof ( _codeidx_t ) * ( ncodes_size + 8 ) )"		3807034	1					
ANR	3807128	Callee	realloc		3807034	0					
ANR	3807129	Identifier	realloc		3807034	0					
ANR	3807130	ArgumentList	( char * ) ncodes		3807034	1					
ANR	3807131	Argument	( char * ) ncodes		3807034	0					
ANR	3807132	CastExpression	( char * ) ncodes		3807034	0					
ANR	3807133	CastTarget	char *		3807034	0					
ANR	3807134	Identifier	ncodes		3807034	1					
ANR	3807135	Argument	sizeof ( _codeidx_t ) * ( ncodes_size + 8 )		3807034	1					
ANR	3807136	MultiplicativeExpression	sizeof ( _codeidx_t ) * ( ncodes_size + 8 )		3807034	0		*			
ANR	3807137	SizeofExpression	sizeof ( _codeidx_t )		3807034	0					
ANR	3807138	Sizeof	sizeof		3807034	0					
ANR	3807139	SizeofOperand	_codeidx_t		3807034	1					
ANR	3807140	AdditiveExpression	ncodes_size + 8		3807034	1		+			
ANR	3807141	Identifier	ncodes_size		3807034	0					
ANR	3807142	PrimaryExpression	8		3807034	1					
ANR	3807143	ExpressionStatement	ncodes_size += 8	797:8:20410:20426	3807034	1	True				
ANR	3807144	AssignmentExpression	ncodes_size += 8		3807034	0		+=			
ANR	3807145	Identifier	ncodes_size		3807034	0					
ANR	3807146	PrimaryExpression	8		3807034	1					
ANR	3807147	IfStatement	if ( i < ncodes_used )		3807034	4					
ANR	3807148	Condition	i < ncodes_used	803:8:20518:20532	3807034	0	True				
ANR	3807149	RelationalExpression	i < ncodes_used		3807034	0		<			
ANR	3807150	Identifier	i		3807034	0					
ANR	3807151	Identifier	ncodes_used		3807034	1					
ANR	3807152	CompoundStatement		34:25:829:829	3807034	1					
ANR	3807153	ForStatement	for ( j = ncodes_used ; j > i ; j -- )		3807034	0					
ANR	3807154	ForInit	j = ncodes_used ;	804:13:20550:20565	3807034	0	True				
ANR	3807155	AssignmentExpression	j = ncodes_used		3807034	0		=			
ANR	3807156	Identifier	j		3807034	0					
ANR	3807157	Identifier	ncodes_used		3807034	1					
ANR	3807158	Condition	j > i	804:30:20567:20571	3807034	1	True				
ANR	3807159	RelationalExpression	j > i		3807034	0		>			
ANR	3807160	Identifier	j		3807034	0					
ANR	3807161	Identifier	i		3807034	1					
ANR	3807162	PostIncDecOperationExpression	j --	804:37:20574:20576	3807034	2	True				
ANR	3807163	Identifier	j		3807034	0					
ANR	3807164	IncDec	--		3807034	1					
ANR	3807165	CompoundStatement		35:42:873:873	3807034	3					
ANR	3807166	ExpressionStatement	ncodes [ j ] . code = ncodes [ j - 1 ] . code	805:12:20593:20628	3807034	0	True				
ANR	3807167	AssignmentExpression	ncodes [ j ] . code = ncodes [ j - 1 ] . code		3807034	0		=			
ANR	3807168	MemberAccess	ncodes [ j ] . code		3807034	0					
ANR	3807169	ArrayIndexing	ncodes [ j ]		3807034	0					
ANR	3807170	Identifier	ncodes		3807034	0					
ANR	3807171	Identifier	j		3807034	1					
ANR	3807172	Identifier	code		3807034	1					
ANR	3807173	MemberAccess	ncodes [ j - 1 ] . code		3807034	1					
ANR	3807174	ArrayIndexing	ncodes [ j - 1 ]		3807034	0					
ANR	3807175	Identifier	ncodes		3807034	0					
ANR	3807176	AdditiveExpression	j - 1		3807034	1		-			
ANR	3807177	Identifier	j		3807034	0					
ANR	3807178	PrimaryExpression	1		3807034	1					
ANR	3807179	Identifier	code		3807034	1					
ANR	3807180	ExpressionStatement	ncodes [ j ] . idx = ncodes [ j - 1 ] . idx	806:12:20642:20675	3807034	1	True				
ANR	3807181	AssignmentExpression	ncodes [ j ] . idx = ncodes [ j - 1 ] . idx		3807034	0		=			
ANR	3807182	MemberAccess	ncodes [ j ] . idx		3807034	0					
ANR	3807183	ArrayIndexing	ncodes [ j ]		3807034	0					
ANR	3807184	Identifier	ncodes		3807034	0					
ANR	3807185	Identifier	j		3807034	1					
ANR	3807186	Identifier	idx		3807034	1					
ANR	3807187	MemberAccess	ncodes [ j - 1 ] . idx		3807034	1					
ANR	3807188	ArrayIndexing	ncodes [ j - 1 ]		3807034	0					
ANR	3807189	Identifier	ncodes		3807034	0					
ANR	3807190	AdditiveExpression	j - 1		3807034	1		-			
ANR	3807191	Identifier	j		3807034	0					
ANR	3807192	PrimaryExpression	1		3807034	1					
ANR	3807193	Identifier	idx		3807034	1					
ANR	3807194	ExpressionStatement	ncodes [ i ] . code = code	809:4:20697:20718	3807034	5	True				
ANR	3807195	AssignmentExpression	ncodes [ i ] . code = code		3807034	0		=			
ANR	3807196	MemberAccess	ncodes [ i ] . code		3807034	0					
ANR	3807197	ArrayIndexing	ncodes [ i ]		3807034	0					
ANR	3807198	Identifier	ncodes		3807034	0					
ANR	3807199	Identifier	i		3807034	1					
ANR	3807200	Identifier	code		3807034	1					
ANR	3807201	Identifier	code		3807034	1					
ANR	3807202	ExpressionStatement	"ncodes [ i ] . idx = make_number ( num , denom )"	810:4:20724:20763	3807034	6	True				
ANR	3807203	AssignmentExpression	"ncodes [ i ] . idx = make_number ( num , denom )"		3807034	0		=			
ANR	3807204	MemberAccess	ncodes [ i ] . idx		3807034	0					
ANR	3807205	ArrayIndexing	ncodes [ i ]		3807034	0					
ANR	3807206	Identifier	ncodes		3807034	0					
ANR	3807207	Identifier	i		3807034	1					
ANR	3807208	Identifier	idx		3807034	1					
ANR	3807209	CallExpression	"make_number ( num , denom )"		3807034	1					
ANR	3807210	Callee	make_number		3807034	0					
ANR	3807211	Identifier	make_number		3807034	0					
ANR	3807212	ArgumentList	num		3807034	1					
ANR	3807213	Argument	num		3807034	0					
ANR	3807214	Identifier	num		3807034	0					
ANR	3807215	Argument	denom		3807034	1					
ANR	3807216	Identifier	denom		3807034	0					
ANR	3807217	ExpressionStatement	ncodes_used ++	812:4:20770:20783	3807034	7	True				
ANR	3807218	PostIncDecOperationExpression	ncodes_used ++		3807034	0					
ANR	3807219	Identifier	ncodes_used		3807034	0					
ANR	3807220	IncDec	++		3807034	1					
ANR	3807221	ReturnType	static void		3807034	1					
ANR	3807222	Identifier	add_number		3807034	2					
ANR	3807223	ParameterList	"ac_uint4 code , short num , short denom"		3807034	3					
ANR	3807224	Parameter	ac_uint4 code	769:11:19666:19678	3807034	0	True				
ANR	3807225	ParameterType	ac_uint4		3807034	0					
ANR	3807226	Identifier	code		3807034	1					
ANR	3807227	Parameter	short num	769:26:19681:19689	3807034	1	True				
ANR	3807228	ParameterType	short		3807034	0					
ANR	3807229	Identifier	num		3807034	1					
ANR	3807230	Parameter	short denom	769:37:19692:19702	3807034	2	True				
ANR	3807231	ParameterType	short		3807034	0					
ANR	3807232	Identifier	denom		3807034	1					
ANR	3807233	CFGEntryNode	ENTRY		3807034		True				
ANR	3807234	CFGExitNode	EXIT		3807034		True				
ANR	3807235	Symbol	malloc		3807034						
ANR	3807236	Symbol	ncodes [ i ] . code		3807034						
ANR	3807237	Symbol	code		3807034						
ANR	3807238	Symbol	ncodes		3807034						
ANR	3807239	Symbol	num		3807034						
ANR	3807240	Symbol	ncodes [ j ] . code		3807034						
ANR	3807241	Symbol	i		3807034						
ANR	3807242	Symbol	ncodes [ i ] . idx		3807034						
ANR	3807243	Symbol	j		3807034						
ANR	3807244	Symbol	realloc		3807034						
ANR	3807245	Symbol	* i		3807034						
ANR	3807246	Symbol	* j		3807034						
ANR	3807247	Symbol	ncodes_used		3807034						
ANR	3807248	Symbol	make_number		3807034						
ANR	3807249	Symbol	ncodes [ j ] . idx		3807034						
ANR	3807250	Symbol	ncodes [ j - 1 ] . idx		3807034						
ANR	3807251	Symbol	ncodes_size		3807034						
ANR	3807252	Symbol	* ncodes		3807034						
ANR	3807253	Symbol	ncodes [ j - 1 ] . code		3807034						
ANR	3807254	Symbol	denom		3807034						
ANR	3807255	Function	read_cdata	819:0:20881:29123							
ANR	3807256	FunctionDef	read_cdata (FILE * in)		3807255	0					
ANR	3807257	CompoundStatement		821:0:20914:29123	3807255	0					
ANR	3807258	IdentifierDeclStatement	"ac_uint4 i , lineno , skip , code , ccl_code ;"	822:4:20920:20960	3807255	0	True				
ANR	3807259	IdentifierDecl	i		3807255	0					
ANR	3807260	IdentifierDeclType	ac_uint4		3807255	0					
ANR	3807261	Identifier	i		3807255	1					
ANR	3807262	IdentifierDecl	lineno		3807255	1					
ANR	3807263	IdentifierDeclType	ac_uint4		3807255	0					
ANR	3807264	Identifier	lineno		3807255	1					
ANR	3807265	IdentifierDecl	skip		3807255	2					
ANR	3807266	IdentifierDeclType	ac_uint4		3807255	0					
ANR	3807267	Identifier	skip		3807255	1					
ANR	3807268	IdentifierDecl	code		3807255	3					
ANR	3807269	IdentifierDeclType	ac_uint4		3807255	0					
ANR	3807270	Identifier	code		3807255	1					
ANR	3807271	IdentifierDecl	ccl_code		3807255	4					
ANR	3807272	IdentifierDeclType	ac_uint4		3807255	0					
ANR	3807273	Identifier	ccl_code		3807255	1					
ANR	3807274	IdentifierDeclStatement	"short wnum , neg , number [ 2 ] , compat ;"	823:4:20966:21000	3807255	1	True				
ANR	3807275	IdentifierDecl	wnum		3807255	0					
ANR	3807276	IdentifierDeclType	short		3807255	0					
ANR	3807277	Identifier	wnum		3807255	1					
ANR	3807278	IdentifierDecl	neg		3807255	1					
ANR	3807279	IdentifierDeclType	short		3807255	0					
ANR	3807280	Identifier	neg		3807255	1					
ANR	3807281	IdentifierDecl	number [ 2 ]		3807255	2					
ANR	3807282	IdentifierDeclType	short [ 2 ]		3807255	0					
ANR	3807283	Identifier	number		3807255	1					
ANR	3807284	PrimaryExpression	2		3807255	2					
ANR	3807285	IdentifierDecl	compat		3807255	3					
ANR	3807286	IdentifierDeclType	short		3807255	0					
ANR	3807287	Identifier	compat		3807255	1					
ANR	3807288	IdentifierDeclStatement	"char line [ 512 ] , * s , * e ;"	824:4:21006:21028	3807255	2	True				
ANR	3807289	IdentifierDecl	line [ 512 ]		3807255	0					
ANR	3807290	IdentifierDeclType	char [ 512 ]		3807255	0					
ANR	3807291	Identifier	line		3807255	1					
ANR	3807292	PrimaryExpression	512		3807255	2					
ANR	3807293	IdentifierDecl	* s		3807255	1					
ANR	3807294	IdentifierDeclType	char *		3807255	0					
ANR	3807295	Identifier	s		3807255	1					
ANR	3807296	IdentifierDecl	* e		3807255	2					
ANR	3807297	IdentifierDeclType	char *		3807255	0					
ANR	3807298	Identifier	e		3807255	1					
ANR	3807299	ExpressionStatement	lineno = skip = 0	826:4:21035:21052	3807255	3	True				
ANR	3807300	AssignmentExpression	lineno = skip = 0		3807255	0		=			
ANR	3807301	Identifier	lineno		3807255	0					
ANR	3807302	AssignmentExpression	skip = 0		3807255	1		=			
ANR	3807303	Identifier	skip		3807255	0					
ANR	3807304	PrimaryExpression	0		3807255	1					
ANR	3807305	WhileStatement	"while ( fgets ( line , sizeof ( line ) , in ) )"		3807255	4					
ANR	3807306	Condition	"fgets ( line , sizeof ( line ) , in )"	827:11:21065:21093	3807255	0	True				
ANR	3807307	CallExpression	"fgets ( line , sizeof ( line ) , in )"		3807255	0					
ANR	3807308	Callee	fgets		3807255	0					
ANR	3807309	Identifier	fgets		3807255	0					
ANR	3807310	ArgumentList	line		3807255	1					
ANR	3807311	Argument	line		3807255	0					
ANR	3807312	Identifier	line		3807255	0					
ANR	3807313	Argument	sizeof ( line )		3807255	1					
ANR	3807314	SizeofExpression	sizeof ( line )		3807255	0					
ANR	3807315	Sizeof	sizeof		3807255	0					
ANR	3807316	SizeofOperand	line		3807255	1					
ANR	3807317	Argument	in		3807255	2					
ANR	3807318	Identifier	in		3807255	0					
ANR	3807319	CompoundStatement		7:42:181:181	3807255	1					
ANR	3807320	IfStatement	"if ( ( s = strchr ( line , '\\n' ) ) )"		3807255	0					
ANR	3807321	Condition	"s = strchr ( line , '\\n' )"	828:5:21103:21124	3807255	0	True				
ANR	3807322	AssignmentExpression	"s = strchr ( line , '\\n' )"		3807255	0		=			
ANR	3807323	Identifier	s		3807255	0					
ANR	3807324	CallExpression	"strchr ( line , '\\n' )"		3807255	1					
ANR	3807325	Callee	strchr		3807255	0					
ANR	3807326	Identifier	strchr		3807255	0					
ANR	3807327	ArgumentList	line		3807255	1					
ANR	3807328	Argument	line		3807255	0					
ANR	3807329	Identifier	line		3807255	0					
ANR	3807330	Argument	'\\n'		3807255	1					
ANR	3807331	PrimaryExpression	'\\n'		3807255	0					
ANR	3807332	ExpressionStatement	* s = '\\0'	828:30:21128:21137	3807255	1	True				
ANR	3807333	AssignmentExpression	* s = '\\0'		3807255	0		=			
ANR	3807334	UnaryOperationExpression	* s		3807255	0					
ANR	3807335	UnaryOperator	*		3807255	0					
ANR	3807336	Identifier	s		3807255	1					
ANR	3807337	PrimaryExpression	'\\0'		3807255	1					
ANR	3807338	ExpressionStatement	lineno ++	829:8:21147:21155	3807255	1	True				
ANR	3807339	PostIncDecOperationExpression	lineno ++		3807255	0					
ANR	3807340	Identifier	lineno		3807255	0					
ANR	3807341	IncDec	++		3807255	1					
ANR	3807342	IfStatement	if ( line [ 0 ] == 0 || line [ 0 ] == '#' )		3807255	2					
ANR	3807343	Condition	line [ 0 ] == 0 || line [ 0 ] == '#'	834:12:21254:21283	3807255	0	True				
ANR	3807344	OrExpression	line [ 0 ] == 0 || line [ 0 ] == '#'		3807255	0		||			
ANR	3807345	EqualityExpression	line [ 0 ] == 0		3807255	0		==			
ANR	3807346	ArrayIndexing	line [ 0 ]		3807255	0					
ANR	3807347	Identifier	line		3807255	0					
ANR	3807348	PrimaryExpression	0		3807255	1					
ANR	3807349	PrimaryExpression	0		3807255	1					
ANR	3807350	EqualityExpression	line [ 0 ] == '#'		3807255	1		==			
ANR	3807351	ArrayIndexing	line [ 0 ]		3807255	0					
ANR	3807352	Identifier	line		3807255	0					
ANR	3807353	PrimaryExpression	0		3807255	1					
ANR	3807354	PrimaryExpression	'#'		3807255	1					
ANR	3807355	ContinueStatement	continue ;	835:10:21296:21304	3807255	1	True				
ANR	3807356	IfStatement	if ( skip )		3807255	3					
ANR	3807357	Condition	skip	840:12:21394:21397	3807255	0	True				
ANR	3807358	Identifier	skip		3807255	0					
ANR	3807359	CompoundStatement		20:18:485:485	3807255	1					
ANR	3807360	ExpressionStatement	skip --	841:12:21414:21420	3807255	0	True				
ANR	3807361	PostIncDecOperationExpression	skip --		3807255	0					
ANR	3807362	Identifier	skip		3807255	0					
ANR	3807363	IncDec	--		3807255	1					
ANR	3807364	ContinueStatement	continue ;	842:12:21434:21442	3807255	1	True				
ANR	3807365	ForStatement	"for ( s = line , i = code = 0 ; * s != ';' && i < 6 ; i ++ , s ++ )"		3807255	4					
ANR	3807366	ForInit	"s = line , i = code = 0 ;"	849:13:21614:21636	3807255	0	True				
ANR	3807367	Expression	"s = line , i = code = 0"		3807255	0					
ANR	3807368	AssignmentExpression	s = line		3807255	0		=			
ANR	3807369	Identifier	s		3807255	0					
ANR	3807370	Identifier	line		3807255	1					
ANR	3807371	AssignmentExpression	i = code = 0		3807255	1		=			
ANR	3807372	Identifier	i		3807255	0					
ANR	3807373	AssignmentExpression	code = 0		3807255	1		=			
ANR	3807374	Identifier	code		3807255	0					
ANR	3807375	PrimaryExpression	0		3807255	1					
ANR	3807376	Condition	* s != ';' && i < 6	849:37:21638:21655	3807255	1	True				
ANR	3807377	AndExpression	* s != ';' && i < 6		3807255	0		&&			
ANR	3807378	EqualityExpression	* s != ';'		3807255	0		!=			
ANR	3807379	UnaryOperationExpression	* s		3807255	0					
ANR	3807380	UnaryOperator	*		3807255	0					
ANR	3807381	Identifier	s		3807255	1					
ANR	3807382	PrimaryExpression	';'		3807255	1					
ANR	3807383	RelationalExpression	i < 6		3807255	1		<			
ANR	3807384	Identifier	i		3807255	0					
ANR	3807385	PrimaryExpression	6		3807255	1					
ANR	3807386	Expression	"i ++ , s ++"	849:57:21658:21665	3807255	2	True				
ANR	3807387	PostIncDecOperationExpression	i ++		3807255	0					
ANR	3807388	Identifier	i		3807255	0					
ANR	3807389	IncDec	++		3807255	1					
ANR	3807390	PostIncDecOperationExpression	s ++		3807255	1					
ANR	3807391	Identifier	s		3807255	0					
ANR	3807392	IncDec	++		3807255	1					
ANR	3807393	CompoundStatement		29:67:753:753	3807255	3					
ANR	3807394	ExpressionStatement	code <<= 4	850:12:21682:21692	3807255	0	True				
ANR	3807395	AssignmentExpression	code <<= 4		3807255	0		<<=			
ANR	3807396	Identifier	code		3807255	0					
ANR	3807397	PrimaryExpression	4		3807255	1					
ANR	3807398	IfStatement	if ( * s >= '0' && * s <= '9' )		3807255	1					
ANR	3807399	Condition	* s >= '0' && * s <= '9'	851:16:21710:21731	3807255	0	True				
ANR	3807400	AndExpression	* s >= '0' && * s <= '9'		3807255	0		&&			
ANR	3807401	RelationalExpression	* s >= '0'		3807255	0		>=			
ANR	3807402	UnaryOperationExpression	* s		3807255	0					
ANR	3807403	UnaryOperator	*		3807255	0					
ANR	3807404	Identifier	s		3807255	1					
ANR	3807405	PrimaryExpression	'0'		3807255	1					
ANR	3807406	RelationalExpression	* s <= '9'		3807255	1		<=			
ANR	3807407	UnaryOperationExpression	* s		3807255	0					
ANR	3807408	UnaryOperator	*		3807255	0					
ANR	3807409	Identifier	s		3807255	1					
ANR	3807410	PrimaryExpression	'9'		3807255	1					
ANR	3807411	ExpressionStatement	code += * s - '0'	852:14:21748:21764	3807255	1	True				
ANR	3807412	AssignmentExpression	code += * s - '0'		3807255	0		+=			
ANR	3807413	Identifier	code		3807255	0					
ANR	3807414	AdditiveExpression	* s - '0'		3807255	1		-			
ANR	3807415	UnaryOperationExpression	* s		3807255	0					
ANR	3807416	UnaryOperator	*		3807255	0					
ANR	3807417	Identifier	s		3807255	1					
ANR	3807418	PrimaryExpression	'0'		3807255	1					
ANR	3807419	ElseStatement	else		3807255	0					
ANR	3807420	IfStatement	if ( * s >= 'A' && * s <= 'F' )		3807255	0					
ANR	3807421	Condition	* s >= 'A' && * s <= 'F'	853:21:21787:21808	3807255	0	True				
ANR	3807422	AndExpression	* s >= 'A' && * s <= 'F'		3807255	0		&&			
ANR	3807423	RelationalExpression	* s >= 'A'		3807255	0		>=			
ANR	3807424	UnaryOperationExpression	* s		3807255	0					
ANR	3807425	UnaryOperator	*		3807255	0					
ANR	3807426	Identifier	s		3807255	1					
ANR	3807427	PrimaryExpression	'A'		3807255	1					
ANR	3807428	RelationalExpression	* s <= 'F'		3807255	1		<=			
ANR	3807429	UnaryOperationExpression	* s		3807255	0					
ANR	3807430	UnaryOperator	*		3807255	0					
ANR	3807431	Identifier	s		3807255	1					
ANR	3807432	PrimaryExpression	'F'		3807255	1					
ANR	3807433	ExpressionStatement	code += ( * s - 'A' ) + 10	854:14:21825:21848	3807255	1	True				
ANR	3807434	AssignmentExpression	code += ( * s - 'A' ) + 10		3807255	0		+=			
ANR	3807435	Identifier	code		3807255	0					
ANR	3807436	AdditiveExpression	( * s - 'A' ) + 10		3807255	1		+			
ANR	3807437	AdditiveExpression	* s - 'A'		3807255	0		-			
ANR	3807438	UnaryOperationExpression	* s		3807255	0					
ANR	3807439	UnaryOperator	*		3807255	0					
ANR	3807440	Identifier	s		3807255	1					
ANR	3807441	PrimaryExpression	'A'		3807255	1					
ANR	3807442	PrimaryExpression	10		3807255	1					
ANR	3807443	ElseStatement	else		3807255	0					
ANR	3807444	IfStatement	if ( * s >= 'a' && * s <= 'f' )		3807255	0					
ANR	3807445	Condition	* s >= 'a' && * s <= 'f'	855:21:21871:21892	3807255	0	True				
ANR	3807446	AndExpression	* s >= 'a' && * s <= 'f'		3807255	0		&&			
ANR	3807447	RelationalExpression	* s >= 'a'		3807255	0		>=			
ANR	3807448	UnaryOperationExpression	* s		3807255	0					
ANR	3807449	UnaryOperator	*		3807255	0					
ANR	3807450	Identifier	s		3807255	1					
ANR	3807451	PrimaryExpression	'a'		3807255	1					
ANR	3807452	RelationalExpression	* s <= 'f'		3807255	1		<=			
ANR	3807453	UnaryOperationExpression	* s		3807255	0					
ANR	3807454	UnaryOperator	*		3807255	0					
ANR	3807455	Identifier	s		3807255	1					
ANR	3807456	PrimaryExpression	'f'		3807255	1					
ANR	3807457	ExpressionStatement	code += ( * s - 'a' ) + 10	856:14:21909:21932	3807255	1	True				
ANR	3807458	AssignmentExpression	code += ( * s - 'a' ) + 10		3807255	0		+=			
ANR	3807459	Identifier	code		3807255	0					
ANR	3807460	AdditiveExpression	( * s - 'a' ) + 10		3807255	1		+			
ANR	3807461	AdditiveExpression	* s - 'a'		3807255	0		-			
ANR	3807462	UnaryOperationExpression	* s		3807255	0					
ANR	3807463	UnaryOperator	*		3807255	0					
ANR	3807464	Identifier	s		3807255	1					
ANR	3807465	PrimaryExpression	'a'		3807255	1					
ANR	3807466	PrimaryExpression	10		3807255	1					
ANR	3807467	SwitchStatement	switch ( code )		3807255	5					
ANR	3807468	Condition	code	868:16:22293:22296	3807255	0	True				
ANR	3807469	Identifier	code		3807255	0					
ANR	3807470	CompoundStatement		48:22:1384:1384	3807255	1					
ANR	3807471	Label	case 0x3400 :	869:3:22304:22315	3807255	0	True				
ANR	3807472	ExpressionStatement	"add_range ( 0x3400 , 0x4db5 , ""Lo"" , ""L"" )"	871:12:22366:22402	3807255	1	True				
ANR	3807473	CallExpression	"add_range ( 0x3400 , 0x4db5 , ""Lo"" , ""L"" )"		3807255	0					
ANR	3807474	Callee	add_range		3807255	0					
ANR	3807475	Identifier	add_range		3807255	0					
ANR	3807476	ArgumentList	0x3400		3807255	1					
ANR	3807477	Argument	0x3400		3807255	0					
ANR	3807478	PrimaryExpression	0x3400		3807255	0					
ANR	3807479	Argument	0x4db5		3807255	1					
ANR	3807480	PrimaryExpression	0x4db5		3807255	0					
ANR	3807481	Argument	"""Lo"""		3807255	2					
ANR	3807482	PrimaryExpression	"""Lo"""		3807255	0					
ANR	3807483	Argument	"""L"""		3807255	3					
ANR	3807484	PrimaryExpression	"""L"""		3807255	0					
ANR	3807485	ExpressionStatement	"add_range ( 0x3400 , 0x4db5 , ""Cp"" , 0 )"	873:12:22417:22451	3807255	2	True				
ANR	3807486	CallExpression	"add_range ( 0x3400 , 0x4db5 , ""Cp"" , 0 )"		3807255	0					
ANR	3807487	Callee	add_range		3807255	0					
ANR	3807488	Identifier	add_range		3807255	0					
ANR	3807489	ArgumentList	0x3400		3807255	1					
ANR	3807490	Argument	0x3400		3807255	0					
ANR	3807491	PrimaryExpression	0x3400		3807255	0					
ANR	3807492	Argument	0x4db5		3807255	1					
ANR	3807493	PrimaryExpression	0x4db5		3807255	0					
ANR	3807494	Argument	"""Cp"""		3807255	2					
ANR	3807495	PrimaryExpression	"""Cp"""		3807255	0					
ANR	3807496	Argument	0		3807255	3					
ANR	3807497	PrimaryExpression	0		3807255	0					
ANR	3807498	ExpressionStatement	skip = 1	875:5:22459:22467	3807255	3	True				
ANR	3807499	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807500	Identifier	skip		3807255	0					
ANR	3807501	PrimaryExpression	1		3807255	1					
ANR	3807502	BreakStatement	break ;	876:5:22474:22479	3807255	4	True				
ANR	3807503	Label	case 0x4e00 :	877:10:22491:22502	3807255	5	True				
ANR	3807504	ExpressionStatement	"add_range ( 0x4e00 , 0x9fff , ""Lo"" , ""L"" )"	881:12:22582:22618	3807255	6	True				
ANR	3807505	CallExpression	"add_range ( 0x4e00 , 0x9fff , ""Lo"" , ""L"" )"		3807255	0					
ANR	3807506	Callee	add_range		3807255	0					
ANR	3807507	Identifier	add_range		3807255	0					
ANR	3807508	ArgumentList	0x4e00		3807255	1					
ANR	3807509	Argument	0x4e00		3807255	0					
ANR	3807510	PrimaryExpression	0x4e00		3807255	0					
ANR	3807511	Argument	0x9fff		3807255	1					
ANR	3807512	PrimaryExpression	0x9fff		3807255	0					
ANR	3807513	Argument	"""Lo"""		3807255	2					
ANR	3807514	PrimaryExpression	"""Lo"""		3807255	0					
ANR	3807515	Argument	"""L"""		3807255	3					
ANR	3807516	PrimaryExpression	"""L"""		3807255	0					
ANR	3807517	ExpressionStatement	"add_range ( 0x4e00 , 0x9fa5 , ""Cp"" , 0 )"	886:12:22723:22757	3807255	7	True				
ANR	3807518	CallExpression	"add_range ( 0x4e00 , 0x9fa5 , ""Cp"" , 0 )"		3807255	0					
ANR	3807519	Callee	add_range		3807255	0					
ANR	3807520	Identifier	add_range		3807255	0					
ANR	3807521	ArgumentList	0x4e00		3807255	1					
ANR	3807522	Argument	0x4e00		3807255	0					
ANR	3807523	PrimaryExpression	0x4e00		3807255	0					
ANR	3807524	Argument	0x9fa5		3807255	1					
ANR	3807525	PrimaryExpression	0x9fa5		3807255	0					
ANR	3807526	Argument	"""Cp"""		3807255	2					
ANR	3807527	PrimaryExpression	"""Cp"""		3807255	0					
ANR	3807528	Argument	0		3807255	3					
ANR	3807529	PrimaryExpression	0		3807255	0					
ANR	3807530	ExpressionStatement	skip = 1	888:12:22772:22780	3807255	8	True				
ANR	3807531	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807532	Identifier	skip		3807255	0					
ANR	3807533	PrimaryExpression	1		3807255	1					
ANR	3807534	BreakStatement	break ;	889:12:22794:22799	3807255	9	True				
ANR	3807535	Label	case 0xac00 :	890:10:22811:22822	3807255	10	True				
ANR	3807536	ExpressionStatement	"add_range ( 0xac00 , 0xd7a3 , ""Lo"" , ""L"" )"	894:12:22904:22940	3807255	11	True				
ANR	3807537	CallExpression	"add_range ( 0xac00 , 0xd7a3 , ""Lo"" , ""L"" )"		3807255	0					
ANR	3807538	Callee	add_range		3807255	0					
ANR	3807539	Identifier	add_range		3807255	0					
ANR	3807540	ArgumentList	0xac00		3807255	1					
ANR	3807541	Argument	0xac00		3807255	0					
ANR	3807542	PrimaryExpression	0xac00		3807255	0					
ANR	3807543	Argument	0xd7a3		3807255	1					
ANR	3807544	PrimaryExpression	0xd7a3		3807255	0					
ANR	3807545	Argument	"""Lo"""		3807255	2					
ANR	3807546	PrimaryExpression	"""Lo"""		3807255	0					
ANR	3807547	Argument	"""L"""		3807255	3					
ANR	3807548	PrimaryExpression	"""L"""		3807255	0					
ANR	3807549	ExpressionStatement	"add_range ( 0xac00 , 0xd7a3 , ""Cp"" , 0 )"	899:12:23045:23079	3807255	12	True				
ANR	3807550	CallExpression	"add_range ( 0xac00 , 0xd7a3 , ""Cp"" , 0 )"		3807255	0					
ANR	3807551	Callee	add_range		3807255	0					
ANR	3807552	Identifier	add_range		3807255	0					
ANR	3807553	ArgumentList	0xac00		3807255	1					
ANR	3807554	Argument	0xac00		3807255	0					
ANR	3807555	PrimaryExpression	0xac00		3807255	0					
ANR	3807556	Argument	0xd7a3		3807255	1					
ANR	3807557	PrimaryExpression	0xd7a3		3807255	0					
ANR	3807558	Argument	"""Cp"""		3807255	2					
ANR	3807559	PrimaryExpression	"""Cp"""		3807255	0					
ANR	3807560	Argument	0		3807255	3					
ANR	3807561	PrimaryExpression	0		3807255	0					
ANR	3807562	ExpressionStatement	skip = 1	901:12:23094:23102	3807255	13	True				
ANR	3807563	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807564	Identifier	skip		3807255	0					
ANR	3807565	PrimaryExpression	1		3807255	1					
ANR	3807566	BreakStatement	break ;	902:12:23116:23121	3807255	14	True				
ANR	3807567	Label	case 0xd800 :	903:10:23133:23144	3807255	15	True				
ANR	3807568	ExpressionStatement	"add_range ( 0x010000 , 0x10ffff , ""Cs"" , ""L"" )"	908:12:23286:23326	3807255	16	True				
ANR	3807569	CallExpression	"add_range ( 0x010000 , 0x10ffff , ""Cs"" , ""L"" )"		3807255	0					
ANR	3807570	Callee	add_range		3807255	0					
ANR	3807571	Identifier	add_range		3807255	0					
ANR	3807572	ArgumentList	0x010000		3807255	1					
ANR	3807573	Argument	0x010000		3807255	0					
ANR	3807574	PrimaryExpression	0x010000		3807255	0					
ANR	3807575	Argument	0x10ffff		3807255	1					
ANR	3807576	PrimaryExpression	0x10ffff		3807255	0					
ANR	3807577	Argument	"""Cs"""		3807255	2					
ANR	3807578	PrimaryExpression	"""Cs"""		3807255	0					
ANR	3807579	Argument	"""L"""		3807255	3					
ANR	3807580	PrimaryExpression	"""L"""		3807255	0					
ANR	3807581	ExpressionStatement	skip = 5	909:12:23340:23348	3807255	17	True				
ANR	3807582	AssignmentExpression	skip = 5		3807255	0		=			
ANR	3807583	Identifier	skip		3807255	0					
ANR	3807584	PrimaryExpression	5		3807255	1					
ANR	3807585	BreakStatement	break ;	910:12:23362:23367	3807255	18	True				
ANR	3807586	Label	case 0xe000 :	911:10:23379:23390	3807255	19	True				
ANR	3807587	ExpressionStatement	"add_range ( 0xe000 , 0xf8ff , ""Co"" , ""L"" )"	915:12:23511:23547	3807255	20	True				
ANR	3807588	CallExpression	"add_range ( 0xe000 , 0xf8ff , ""Co"" , ""L"" )"		3807255	0					
ANR	3807589	Callee	add_range		3807255	0					
ANR	3807590	Identifier	add_range		3807255	0					
ANR	3807591	ArgumentList	0xe000		3807255	1					
ANR	3807592	Argument	0xe000		3807255	0					
ANR	3807593	PrimaryExpression	0xe000		3807255	0					
ANR	3807594	Argument	0xf8ff		3807255	1					
ANR	3807595	PrimaryExpression	0xf8ff		3807255	0					
ANR	3807596	Argument	"""Co"""		3807255	2					
ANR	3807597	PrimaryExpression	"""Co"""		3807255	0					
ANR	3807598	Argument	"""L"""		3807255	3					
ANR	3807599	PrimaryExpression	"""L"""		3807255	0					
ANR	3807600	ExpressionStatement	skip = 1	916:12:23561:23569	3807255	21	True				
ANR	3807601	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807602	Identifier	skip		3807255	0					
ANR	3807603	PrimaryExpression	1		3807255	1					
ANR	3807604	BreakStatement	break ;	917:12:23583:23588	3807255	22	True				
ANR	3807605	Label	case 0xf900 :	918:10:23600:23611	3807255	23	True				
ANR	3807606	ExpressionStatement	"add_range ( 0xf900 , 0xfaff , ""Lo"" , ""L"" )"	922:12:23699:23735	3807255	24	True				
ANR	3807607	CallExpression	"add_range ( 0xf900 , 0xfaff , ""Lo"" , ""L"" )"		3807255	0					
ANR	3807608	Callee	add_range		3807255	0					
ANR	3807609	Identifier	add_range		3807255	0					
ANR	3807610	ArgumentList	0xf900		3807255	1					
ANR	3807611	Argument	0xf900		3807255	0					
ANR	3807612	PrimaryExpression	0xf900		3807255	0					
ANR	3807613	Argument	0xfaff		3807255	1					
ANR	3807614	PrimaryExpression	0xfaff		3807255	0					
ANR	3807615	Argument	"""Lo"""		3807255	2					
ANR	3807616	PrimaryExpression	"""Lo"""		3807255	0					
ANR	3807617	Argument	"""L"""		3807255	3					
ANR	3807618	PrimaryExpression	"""L"""		3807255	0					
ANR	3807619	ExpressionStatement	"add_range ( 0xf900 , 0xfaff , ""Cp"" , 0 )"	927:12:23840:23874	3807255	25	True				
ANR	3807620	CallExpression	"add_range ( 0xf900 , 0xfaff , ""Cp"" , 0 )"		3807255	0					
ANR	3807621	Callee	add_range		3807255	0					
ANR	3807622	Identifier	add_range		3807255	0					
ANR	3807623	ArgumentList	0xf900		3807255	1					
ANR	3807624	Argument	0xf900		3807255	0					
ANR	3807625	PrimaryExpression	0xf900		3807255	0					
ANR	3807626	Argument	0xfaff		3807255	1					
ANR	3807627	PrimaryExpression	0xfaff		3807255	0					
ANR	3807628	Argument	"""Cp"""		3807255	2					
ANR	3807629	PrimaryExpression	"""Cp"""		3807255	0					
ANR	3807630	Argument	0		3807255	3					
ANR	3807631	PrimaryExpression	0		3807255	0					
ANR	3807632	ExpressionStatement	skip = 1	929:12:23889:23897	3807255	26	True				
ANR	3807633	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807634	Identifier	skip		3807255	0					
ANR	3807635	PrimaryExpression	1		3807255	1					
ANR	3807636	BreakStatement	break ;	930:5:23904:23909	3807255	27	True				
ANR	3807637	Label	case 0x20000 :	931:3:23914:23926	3807255	28	True				
ANR	3807638	ExpressionStatement	"add_range ( 0x20000 , 0x2a6d6 , ""Lo"" , ""L"" )"	933:12:23977:24015	3807255	29	True				
ANR	3807639	CallExpression	"add_range ( 0x20000 , 0x2a6d6 , ""Lo"" , ""L"" )"		3807255	0					
ANR	3807640	Callee	add_range		3807255	0					
ANR	3807641	Identifier	add_range		3807255	0					
ANR	3807642	ArgumentList	0x20000		3807255	1					
ANR	3807643	Argument	0x20000		3807255	0					
ANR	3807644	PrimaryExpression	0x20000		3807255	0					
ANR	3807645	Argument	0x2a6d6		3807255	1					
ANR	3807646	PrimaryExpression	0x2a6d6		3807255	0					
ANR	3807647	Argument	"""Lo"""		3807255	2					
ANR	3807648	PrimaryExpression	"""Lo"""		3807255	0					
ANR	3807649	Argument	"""L"""		3807255	3					
ANR	3807650	PrimaryExpression	"""L"""		3807255	0					
ANR	3807651	ExpressionStatement	"add_range ( 0x20000 , 0x2a6d6 , ""Cp"" , 0 )"	935:12:24030:24066	3807255	30	True				
ANR	3807652	CallExpression	"add_range ( 0x20000 , 0x2a6d6 , ""Cp"" , 0 )"		3807255	0					
ANR	3807653	Callee	add_range		3807255	0					
ANR	3807654	Identifier	add_range		3807255	0					
ANR	3807655	ArgumentList	0x20000		3807255	1					
ANR	3807656	Argument	0x20000		3807255	0					
ANR	3807657	PrimaryExpression	0x20000		3807255	0					
ANR	3807658	Argument	0x2a6d6		3807255	1					
ANR	3807659	PrimaryExpression	0x2a6d6		3807255	0					
ANR	3807660	Argument	"""Cp"""		3807255	2					
ANR	3807661	PrimaryExpression	"""Cp"""		3807255	0					
ANR	3807662	Argument	0		3807255	3					
ANR	3807663	PrimaryExpression	0		3807255	0					
ANR	3807664	ExpressionStatement	skip = 1	937:5:24074:24082	3807255	31	True				
ANR	3807665	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807666	Identifier	skip		3807255	0					
ANR	3807667	PrimaryExpression	1		3807255	1					
ANR	3807668	BreakStatement	break ;	938:5:24089:24094	3807255	32	True				
ANR	3807669	Label	case 0xf0000 :	939:3:24099:24111	3807255	33	True				
ANR	3807670	ExpressionStatement	"add_range ( 0xf0000 , 0xffffd , ""Co"" , ""L"" )"	941:5:24150:24188	3807255	34	True				
ANR	3807671	CallExpression	"add_range ( 0xf0000 , 0xffffd , ""Co"" , ""L"" )"		3807255	0					
ANR	3807672	Callee	add_range		3807255	0					
ANR	3807673	Identifier	add_range		3807255	0					
ANR	3807674	ArgumentList	0xf0000		3807255	1					
ANR	3807675	Argument	0xf0000		3807255	0					
ANR	3807676	PrimaryExpression	0xf0000		3807255	0					
ANR	3807677	Argument	0xffffd		3807255	1					
ANR	3807678	PrimaryExpression	0xffffd		3807255	0					
ANR	3807679	Argument	"""Co"""		3807255	2					
ANR	3807680	PrimaryExpression	"""Co"""		3807255	0					
ANR	3807681	Argument	"""L"""		3807255	3					
ANR	3807682	PrimaryExpression	"""L"""		3807255	0					
ANR	3807683	ExpressionStatement	skip = 1	942:5:24195:24203	3807255	35	True				
ANR	3807684	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807685	Identifier	skip		3807255	0					
ANR	3807686	PrimaryExpression	1		3807255	1					
ANR	3807687	BreakStatement	break ;	943:5:24210:24215	3807255	36	True				
ANR	3807688	Label	case 0x100000 :	945:3:24221:24234	3807255	37	True				
ANR	3807689	ExpressionStatement	"add_range ( 0x100000 , 0x10fffd , ""Co"" , ""L"" )"	947:5:24273:24313	3807255	38	True				
ANR	3807690	CallExpression	"add_range ( 0x100000 , 0x10fffd , ""Co"" , ""L"" )"		3807255	0					
ANR	3807691	Callee	add_range		3807255	0					
ANR	3807692	Identifier	add_range		3807255	0					
ANR	3807693	ArgumentList	0x100000		3807255	1					
ANR	3807694	Argument	0x100000		3807255	0					
ANR	3807695	PrimaryExpression	0x100000		3807255	0					
ANR	3807696	Argument	0x10fffd		3807255	1					
ANR	3807697	PrimaryExpression	0x10fffd		3807255	0					
ANR	3807698	Argument	"""Co"""		3807255	2					
ANR	3807699	PrimaryExpression	"""Co"""		3807255	0					
ANR	3807700	Argument	"""L"""		3807255	3					
ANR	3807701	PrimaryExpression	"""L"""		3807255	0					
ANR	3807702	ExpressionStatement	skip = 1	948:5:24320:24328	3807255	39	True				
ANR	3807703	AssignmentExpression	skip = 1		3807255	0		=			
ANR	3807704	Identifier	skip		3807255	0					
ANR	3807705	PrimaryExpression	1		3807255	1					
ANR	3807706	BreakStatement	break ;	949:5:24335:24340	3807255	40	True				
ANR	3807707	IfStatement	if ( skip )		3807255	6					
ANR	3807708	Condition	skip	952:12:24365:24368	3807255	0	True				
ANR	3807709	Identifier	skip		3807255	0					
ANR	3807710	ContinueStatement	continue ;	953:10:24381:24389	3807255	1	True				
ANR	3807711	ExpressionStatement	"ordered_range_insert ( code , ""Cp"" , 2 )"	958:8:24472:24507	3807255	7	True				
ANR	3807712	CallExpression	"ordered_range_insert ( code , ""Cp"" , 2 )"		3807255	0					
ANR	3807713	Callee	ordered_range_insert		3807255	0					
ANR	3807714	Identifier	ordered_range_insert		3807255	0					
ANR	3807715	ArgumentList	code		3807255	1					
ANR	3807716	Argument	code		3807255	0					
ANR	3807717	Identifier	code		3807255	0					
ANR	3807718	Argument	"""Cp"""		3807255	1					
ANR	3807719	PrimaryExpression	"""Cp"""		3807255	0					
ANR	3807720	Argument	2		3807255	2					
ANR	3807721	PrimaryExpression	2		3807255	0					
ANR	3807722	ForStatement	for ( i = 0 ; * s != 0 && i < 2 ; s ++ )		3807255	8					
ANR	3807723	ForInit	i = 0 ;	963:13:24600:24605	3807255	0	True				
ANR	3807724	AssignmentExpression	i = 0		3807255	0		=			
ANR	3807725	Identifier	i		3807255	0					
ANR	3807726	PrimaryExpression	0		3807255	1					
ANR	3807727	Condition	* s != 0 && i < 2	963:20:24607:24622	3807255	1	True				
ANR	3807728	AndExpression	* s != 0 && i < 2		3807255	0		&&			
ANR	3807729	EqualityExpression	* s != 0		3807255	0		!=			
ANR	3807730	UnaryOperationExpression	* s		3807255	0					
ANR	3807731	UnaryOperator	*		3807255	0					
ANR	3807732	Identifier	s		3807255	1					
ANR	3807733	PrimaryExpression	0		3807255	1					
ANR	3807734	RelationalExpression	i < 2		3807255	1		<			
ANR	3807735	Identifier	i		3807255	0					
ANR	3807736	PrimaryExpression	2		3807255	1					
ANR	3807737	PostIncDecOperationExpression	s ++	963:38:24625:24627	3807255	2	True				
ANR	3807738	Identifier	s		3807255	0					
ANR	3807739	IncDec	++		3807255	1					
ANR	3807740	CompoundStatement		143:43:3715:3715	3807255	3					
ANR	3807741	IfStatement	if ( * s == ';' )		3807255	0					
ANR	3807742	Condition	* s == ';'	964:16:24648:24656	3807255	0	True				
ANR	3807743	EqualityExpression	* s == ';'		3807255	0		==			
ANR	3807744	UnaryOperationExpression	* s		3807255	0					
ANR	3807745	UnaryOperator	*		3807255	0					
ANR	3807746	Identifier	s		3807255	1					
ANR	3807747	PrimaryExpression	';'		3807255	1					
ANR	3807748	ExpressionStatement	i ++	965:14:24673:24676	3807255	1	True				
ANR	3807749	PostIncDecOperationExpression	i ++		3807255	0					
ANR	3807750	Identifier	i		3807255	0					
ANR	3807751	IncDec	++		3807255	1					
ANR	3807752	ForStatement	for ( e = s ; * e && * e != ';' ; e ++ )		3807255	9					
ANR	3807753	ForInit	e = s ;	967:13:24701:24706	3807255	0	True				
ANR	3807754	AssignmentExpression	e = s		3807255	0		=			
ANR	3807755	Identifier	e		3807255	0					
ANR	3807756	Identifier	s		3807255	1					
ANR	3807757	Condition	* e && * e != ';'	967:20:24708:24722	3807255	1	True				
ANR	3807758	AndExpression	* e && * e != ';'		3807255	0		&&			
ANR	3807759	UnaryOperationExpression	* e		3807255	0					
ANR	3807760	UnaryOperator	*		3807255	0					
ANR	3807761	Identifier	e		3807255	1					
ANR	3807762	EqualityExpression	* e != ';'		3807255	1		!=			
ANR	3807763	UnaryOperationExpression	* e		3807255	0					
ANR	3807764	UnaryOperator	*		3807255	0					
ANR	3807765	Identifier	e		3807255	1					
ANR	3807766	PrimaryExpression	';'		3807255	1					
ANR	3807767	PostIncDecOperationExpression	e ++	967:37:24725:24727	3807255	2	True				
ANR	3807768	Identifier	e		3807255	0					
ANR	3807769	IncDec	++		3807255	1					
ANR	3807770	ExpressionStatement		967:42:24730:24730	3807255	3	True				
ANR	3807771	ExpressionStatement	"ordered_range_insert ( code , s , e - s )"	969:8:24741:24777	3807255	10	True				
ANR	3807772	CallExpression	"ordered_range_insert ( code , s , e - s )"		3807255	0					
ANR	3807773	Callee	ordered_range_insert		3807255	0					
ANR	3807774	Identifier	ordered_range_insert		3807255	0					
ANR	3807775	ArgumentList	code		3807255	1					
ANR	3807776	Argument	code		3807255	0					
ANR	3807777	Identifier	code		3807255	0					
ANR	3807778	Argument	s		3807255	1					
ANR	3807779	Identifier	s		3807255	0					
ANR	3807780	Argument	e - s		3807255	2					
ANR	3807781	AdditiveExpression	e - s		3807255	0		-			
ANR	3807782	Identifier	e		3807255	0					
ANR	3807783	Identifier	s		3807255	1					
ANR	3807784	ForStatement	for ( s = e ; * s != 0 && i < 3 ; s ++ )		3807255	11					
ANR	3807785	ForInit	s = e ;	974:13:24860:24865	3807255	0	True				
ANR	3807786	AssignmentExpression	s = e		3807255	0		=			
ANR	3807787	Identifier	s		3807255	0					
ANR	3807788	Identifier	e		3807255	1					
ANR	3807789	Condition	* s != 0 && i < 3	974:20:24867:24882	3807255	1	True				
ANR	3807790	AndExpression	* s != 0 && i < 3		3807255	0		&&			
ANR	3807791	EqualityExpression	* s != 0		3807255	0		!=			
ANR	3807792	UnaryOperationExpression	* s		3807255	0					
ANR	3807793	UnaryOperator	*		3807255	0					
ANR	3807794	Identifier	s		3807255	1					
ANR	3807795	PrimaryExpression	0		3807255	1					
ANR	3807796	RelationalExpression	i < 3		3807255	1		<			
ANR	3807797	Identifier	i		3807255	0					
ANR	3807798	PrimaryExpression	3		3807255	1					
ANR	3807799	PostIncDecOperationExpression	s ++	974:38:24885:24887	3807255	2	True				
ANR	3807800	Identifier	s		3807255	0					
ANR	3807801	IncDec	++		3807255	1					
ANR	3807802	CompoundStatement		154:43:3975:3975	3807255	3					
ANR	3807803	IfStatement	if ( * s == ';' )		3807255	0					
ANR	3807804	Condition	* s == ';'	975:16:24908:24916	3807255	0	True				
ANR	3807805	EqualityExpression	* s == ';'		3807255	0		==			
ANR	3807806	UnaryOperationExpression	* s		3807255	0					
ANR	3807807	UnaryOperator	*		3807255	0					
ANR	3807808	Identifier	s		3807255	1					
ANR	3807809	PrimaryExpression	';'		3807255	1					
ANR	3807810	ExpressionStatement	i ++	976:14:24933:24936	3807255	1	True				
ANR	3807811	PostIncDecOperationExpression	i ++		3807255	0					
ANR	3807812	Identifier	i		3807255	0					
ANR	3807813	IncDec	++		3807255	1					
ANR	3807814	ForStatement	"for ( ccl_code = 0 , e = s ; * e && * e != ';' ; e ++ )"		3807255	12					
ANR	3807815	ForInit	"ccl_code = 0 , e = s ;"	982:13:25043:25062	3807255	0	True				
ANR	3807816	Expression	"ccl_code = 0 , e = s"		3807255	0					
ANR	3807817	AssignmentExpression	ccl_code = 0		3807255	0		=			
ANR	3807818	Identifier	ccl_code		3807255	0					
ANR	3807819	PrimaryExpression	0		3807255	1					
ANR	3807820	AssignmentExpression	e = s		3807255	1		=			
ANR	3807821	Identifier	e		3807255	0					
ANR	3807822	Identifier	s		3807255	1					
ANR	3807823	Condition	* e && * e != ';'	982:34:25064:25078	3807255	1	True				
ANR	3807824	AndExpression	* e && * e != ';'		3807255	0		&&			
ANR	3807825	UnaryOperationExpression	* e		3807255	0					
ANR	3807826	UnaryOperator	*		3807255	0					
ANR	3807827	Identifier	e		3807255	1					
ANR	3807828	EqualityExpression	* e != ';'		3807255	1		!=			
ANR	3807829	UnaryOperationExpression	* e		3807255	0					
ANR	3807830	UnaryOperator	*		3807255	0					
ANR	3807831	Identifier	e		3807255	1					
ANR	3807832	PrimaryExpression	';'		3807255	1					
ANR	3807833	PostIncDecOperationExpression	e ++	982:51:25081:25083	3807255	2	True				
ANR	3807834	Identifier	e		3807255	0					
ANR	3807835	IncDec	++		3807255	1					
ANR	3807836	ExpressionStatement	ccl_code = ( ccl_code * 10 ) + ( * e - '0' )	983:10:25096:25135	3807255	3	True				
ANR	3807837	AssignmentExpression	ccl_code = ( ccl_code * 10 ) + ( * e - '0' )		3807255	0		=			
ANR	3807838	Identifier	ccl_code		3807255	0					
ANR	3807839	AdditiveExpression	( ccl_code * 10 ) + ( * e - '0' )		3807255	1		+			
ANR	3807840	MultiplicativeExpression	ccl_code * 10		3807255	0		*			
ANR	3807841	Identifier	ccl_code		3807255	0					
ANR	3807842	PrimaryExpression	10		3807255	1					
ANR	3807843	AdditiveExpression	* e - '0'		3807255	1		-			
ANR	3807844	UnaryOperationExpression	* e		3807255	0					
ANR	3807845	UnaryOperator	*		3807255	0					
ANR	3807846	Identifier	e		3807255	1					
ANR	3807847	PrimaryExpression	'0'		3807255	1					
ANR	3807848	IfStatement	if ( ccl_code != 0 )		3807255	13					
ANR	3807849	Condition	ccl_code != 0	988:12:25210:25222	3807255	0	True				
ANR	3807850	EqualityExpression	ccl_code != 0		3807255	0		!=			
ANR	3807851	Identifier	ccl_code		3807255	0					
ANR	3807852	PrimaryExpression	0		3807255	1					
ANR	3807853	ExpressionStatement	"ordered_ccl_insert ( code , ccl_code )"	989:10:25235:25269	3807255	1	True				
ANR	3807854	CallExpression	"ordered_ccl_insert ( code , ccl_code )"		3807255	0					
ANR	3807855	Callee	ordered_ccl_insert		3807255	0					
ANR	3807856	Identifier	ordered_ccl_insert		3807255	0					
ANR	3807857	ArgumentList	code		3807255	1					
ANR	3807858	Argument	code		3807255	0					
ANR	3807859	Identifier	code		3807255	0					
ANR	3807860	Argument	ccl_code		3807255	1					
ANR	3807861	Identifier	ccl_code		3807255	0					
ANR	3807862	ForStatement	for ( s = e ; * s != 0 && i < 4 ; s ++ )		3807255	14					
ANR	3807863	ForInit	s = e ;	994:13:25363:25368	3807255	0	True				
ANR	3807864	AssignmentExpression	s = e		3807255	0		=			
ANR	3807865	Identifier	s		3807255	0					
ANR	3807866	Identifier	e		3807255	1					
ANR	3807867	Condition	* s != 0 && i < 4	994:20:25370:25385	3807255	1	True				
ANR	3807868	AndExpression	* s != 0 && i < 4		3807255	0		&&			
ANR	3807869	EqualityExpression	* s != 0		3807255	0		!=			
ANR	3807870	UnaryOperationExpression	* s		3807255	0					
ANR	3807871	UnaryOperator	*		3807255	0					
ANR	3807872	Identifier	s		3807255	1					
ANR	3807873	PrimaryExpression	0		3807255	1					
ANR	3807874	RelationalExpression	i < 4		3807255	1		<			
ANR	3807875	Identifier	i		3807255	0					
ANR	3807876	PrimaryExpression	4		3807255	1					
ANR	3807877	PostIncDecOperationExpression	s ++	994:38:25388:25390	3807255	2	True				
ANR	3807878	Identifier	s		3807255	0					
ANR	3807879	IncDec	++		3807255	1					
ANR	3807880	CompoundStatement		174:43:4478:4478	3807255	3					
ANR	3807881	IfStatement	if ( * s == ';' )		3807255	0					
ANR	3807882	Condition	* s == ';'	995:16:25411:25419	3807255	0	True				
ANR	3807883	EqualityExpression	* s == ';'		3807255	0		==			
ANR	3807884	UnaryOperationExpression	* s		3807255	0					
ANR	3807885	UnaryOperator	*		3807255	0					
ANR	3807886	Identifier	s		3807255	1					
ANR	3807887	PrimaryExpression	';'		3807255	1					
ANR	3807888	ExpressionStatement	i ++	996:14:25436:25439	3807255	1	True				
ANR	3807889	PostIncDecOperationExpression	i ++		3807255	0					
ANR	3807890	Identifier	i		3807255	0					
ANR	3807891	IncDec	++		3807255	1					
ANR	3807892	ForStatement	for ( e = s ; * e && * e != ';' ; e ++ )		3807255	15					
ANR	3807893	ForInit	e = s ;	998:13:25464:25469	3807255	0	True				
ANR	3807894	AssignmentExpression	e = s		3807255	0		=			
ANR	3807895	Identifier	e		3807255	0					
ANR	3807896	Identifier	s		3807255	1					
ANR	3807897	Condition	* e && * e != ';'	998:20:25471:25485	3807255	1	True				
ANR	3807898	AndExpression	* e && * e != ';'		3807255	0		&&			
ANR	3807899	UnaryOperationExpression	* e		3807255	0					
ANR	3807900	UnaryOperator	*		3807255	0					
ANR	3807901	Identifier	e		3807255	1					
ANR	3807902	EqualityExpression	* e != ';'		3807255	1		!=			
ANR	3807903	UnaryOperationExpression	* e		3807255	0					
ANR	3807904	UnaryOperator	*		3807255	0					
ANR	3807905	Identifier	e		3807255	1					
ANR	3807906	PrimaryExpression	';'		3807255	1					
ANR	3807907	PostIncDecOperationExpression	e ++	998:37:25488:25490	3807255	2	True				
ANR	3807908	Identifier	e		3807255	0					
ANR	3807909	IncDec	++		3807255	1					
ANR	3807910	ExpressionStatement		998:42:25493:25493	3807255	3	True				
ANR	3807911	ExpressionStatement	"ordered_range_insert ( code , s , e - s )"	1000:8:25504:25540	3807255	16	True				
ANR	3807912	CallExpression	"ordered_range_insert ( code , s , e - s )"		3807255	0					
ANR	3807913	Callee	ordered_range_insert		3807255	0					
ANR	3807914	Identifier	ordered_range_insert		3807255	0					
ANR	3807915	ArgumentList	code		3807255	1					
ANR	3807916	Argument	code		3807255	0					
ANR	3807917	Identifier	code		3807255	0					
ANR	3807918	Argument	s		3807255	1					
ANR	3807919	Identifier	s		3807255	0					
ANR	3807920	Argument	e - s		3807255	2					
ANR	3807921	AdditiveExpression	e - s		3807255	0		-			
ANR	3807922	Identifier	e		3807255	0					
ANR	3807923	Identifier	s		3807255	1					
ANR	3807924	ExpressionStatement	s = ++ e	1005:8:25612:25619	3807255	17	True				
ANR	3807925	AssignmentExpression	s = ++ e		3807255	0		=			
ANR	3807926	Identifier	s		3807255	0					
ANR	3807927	UnaryExpression	++ e		3807255	1					
ANR	3807928	IncDec	++		3807255	0					
ANR	3807929	Identifier	e		3807255	1					
ANR	3807930	IfStatement	if ( * s != ';' )		3807255	18					
ANR	3807931	Condition	* s != ';'	1006:12:25633:25641	3807255	0	True				
ANR	3807932	EqualityExpression	* s != ';'		3807255	0		!=			
ANR	3807933	UnaryOperationExpression	* s		3807255	0					
ANR	3807934	UnaryOperator	*		3807255	0					
ANR	3807935	Identifier	s		3807255	1					
ANR	3807936	PrimaryExpression	';'		3807255	1					
ANR	3807937	CompoundStatement		186:23:4729:4729	3807255	1					
ANR	3807938	ExpressionStatement	compat = * s == '<'	1007:5:25651:25669	3807255	0	True				
ANR	3807939	AssignmentExpression	compat = * s == '<'		3807255	0		=			
ANR	3807940	Identifier	compat		3807255	0					
ANR	3807941	EqualityExpression	* s == '<'		3807255	1		==			
ANR	3807942	UnaryOperationExpression	* s		3807255	0					
ANR	3807943	UnaryOperator	*		3807255	0					
ANR	3807944	Identifier	s		3807255	1					
ANR	3807945	PrimaryExpression	'<'		3807255	1					
ANR	3807946	IfStatement	if ( compat )		3807255	1					
ANR	3807947	Condition	compat	1008:9:25680:25685	3807255	0	True				
ANR	3807948	Identifier	compat		3807255	0					
ANR	3807949	CompoundStatement		188:17:4773:4773	3807255	1					
ANR	3807950	WhileStatement	while ( * s ++ != '>' )		3807255	0					
ANR	3807951	Condition	* s ++ != '>'	1012:9:25750:25760	3807255	0	True				
ANR	3807952	EqualityExpression	* s ++ != '>'		3807255	0		!=			
ANR	3807953	UnaryOperationExpression	* s ++		3807255	0					
ANR	3807954	UnaryOperator	*		3807255	0					
ANR	3807955	PostIncDecOperationExpression	s ++		3807255	1					
ANR	3807956	Identifier	s		3807255	0					
ANR	3807957	IncDec	++		3807255	1					
ANR	3807958	PrimaryExpression	'>'		3807255	1					
ANR	3807959	ExpressionStatement		1012:21:25762:25762	3807255	1	True				
ANR	3807960	ForStatement	for ( dectmp_size = 0 ; * s != ';' ; )		3807255	2					
ANR	3807961	ForInit	dectmp_size = 0 ;	1017:17:25874:25889	3807255	0	True				
ANR	3807962	AssignmentExpression	dectmp_size = 0		3807255	0		=			
ANR	3807963	Identifier	dectmp_size		3807255	0					
ANR	3807964	PrimaryExpression	0		3807255	1					
ANR	3807965	Condition	* s != ';'	1017:34:25891:25899	3807255	1	True				
ANR	3807966	EqualityExpression	* s != ';'		3807255	0		!=			
ANR	3807967	UnaryOperationExpression	* s		3807255	0					
ANR	3807968	UnaryOperator	*		3807255	0					
ANR	3807969	Identifier	s		3807255	1					
ANR	3807970	PrimaryExpression	';'		3807255	1					
ANR	3807971	CompoundStatement		197:47:4989:4989	3807255	2					
ANR	3807972	WhileStatement	while ( ! ishdigit ( * s ) )		3807255	0					
ANR	3807973	Condition	! ishdigit ( * s )	1021:23:26020:26032	3807255	0	True				
ANR	3807974	UnaryOperationExpression	! ishdigit ( * s )		3807255	0					
ANR	3807975	UnaryOperator	!		3807255	0					
ANR	3807976	CallExpression	ishdigit ( * s )		3807255	1					
ANR	3807977	Callee	ishdigit		3807255	0					
ANR	3807978	Identifier	ishdigit		3807255	0					
ANR	3807979	ArgumentList	* s		3807255	1					
ANR	3807980	Argument	* s		3807255	0					
ANR	3807981	UnaryOperationExpression	* s		3807255	0					
ANR	3807982	UnaryOperator	*		3807255	0					
ANR	3807983	Identifier	s		3807255	1					
ANR	3807984	ExpressionStatement	s ++	1022:5:26040:26043	3807255	1	True				
ANR	3807985	PostIncDecOperationExpression	s ++		3807255	0					
ANR	3807986	Identifier	s		3807255	0					
ANR	3807987	IncDec	++		3807255	1					
ANR	3807988	ForStatement	for ( dectmp [ dectmp_size ] = 0 ; ishdigit ( * s ) ; s ++ )		3807255	1					
ANR	3807989	ForInit	dectmp [ dectmp_size ] = 0 ;	1024:21:26067:26090	3807255	0	True				
ANR	3807990	AssignmentExpression	dectmp [ dectmp_size ] = 0		3807255	0		=			
ANR	3807991	ArrayIndexing	dectmp [ dectmp_size ]		3807255	0					
ANR	3807992	Identifier	dectmp		3807255	0					
ANR	3807993	Identifier	dectmp_size		3807255	1					
ANR	3807994	PrimaryExpression	0		3807255	1					
ANR	3807995	Condition	ishdigit ( * s )	1024:46:26092:26103	3807255	1	True				
ANR	3807996	CallExpression	ishdigit ( * s )		3807255	0					
ANR	3807997	Callee	ishdigit		3807255	0					
ANR	3807998	Identifier	ishdigit		3807255	0					
ANR	3807999	ArgumentList	* s		3807255	1					
ANR	3808000	Argument	* s		3807255	0					
ANR	3808001	UnaryOperationExpression	* s		3807255	0					
ANR	3808002	UnaryOperator	*		3807255	0					
ANR	3808003	Identifier	s		3807255	1					
ANR	3808004	PostIncDecOperationExpression	s ++	1024:60:26106:26108	3807255	2	True				
ANR	3808005	Identifier	s		3807255	0					
ANR	3808006	IncDec	++		3807255	1					
ANR	3808007	CompoundStatement		204:65:5196:5196	3807255	3					
ANR	3808008	ExpressionStatement	dectmp [ dectmp_size ] <<= 4	1025:20:26133:26158	3807255	0	True				
ANR	3808009	AssignmentExpression	dectmp [ dectmp_size ] <<= 4		3807255	0		<<=			
ANR	3808010	ArrayIndexing	dectmp [ dectmp_size ]		3807255	0					
ANR	3808011	Identifier	dectmp		3807255	0					
ANR	3808012	Identifier	dectmp_size		3807255	1					
ANR	3808013	PrimaryExpression	4		3807255	1					
ANR	3808014	IfStatement	if ( * s >= '0' && * s <= '9' )		3807255	1					
ANR	3808015	Condition	* s >= '0' && * s <= '9'	1026:24:26184:26205	3807255	0	True				
ANR	3808016	AndExpression	* s >= '0' && * s <= '9'		3807255	0		&&			
ANR	3808017	RelationalExpression	* s >= '0'		3807255	0		>=			
ANR	3808018	UnaryOperationExpression	* s		3807255	0					
ANR	3808019	UnaryOperator	*		3807255	0					
ANR	3808020	Identifier	s		3807255	1					
ANR	3808021	PrimaryExpression	'0'		3807255	1					
ANR	3808022	RelationalExpression	* s <= '9'		3807255	1		<=			
ANR	3808023	UnaryOperationExpression	* s		3807255	0					
ANR	3808024	UnaryOperator	*		3807255	0					
ANR	3808025	Identifier	s		3807255	1					
ANR	3808026	PrimaryExpression	'9'		3807255	1					
ANR	3808027	ExpressionStatement	dectmp [ dectmp_size ] += * s - '0'	1027:22:26230:26261	3807255	1	True				
ANR	3808028	AssignmentExpression	dectmp [ dectmp_size ] += * s - '0'		3807255	0		+=			
ANR	3808029	ArrayIndexing	dectmp [ dectmp_size ]		3807255	0					
ANR	3808030	Identifier	dectmp		3807255	0					
ANR	3808031	Identifier	dectmp_size		3807255	1					
ANR	3808032	AdditiveExpression	* s - '0'		3807255	1		-			
ANR	3808033	UnaryOperationExpression	* s		3807255	0					
ANR	3808034	UnaryOperator	*		3807255	0					
ANR	3808035	Identifier	s		3807255	1					
ANR	3808036	PrimaryExpression	'0'		3807255	1					
ANR	3808037	ElseStatement	else		3807255	0					
ANR	3808038	IfStatement	if ( * s >= 'A' && * s <= 'F' )		3807255	0					
ANR	3808039	Condition	* s >= 'A' && * s <= 'F'	1028:29:26292:26313	3807255	0	True				
ANR	3808040	AndExpression	* s >= 'A' && * s <= 'F'		3807255	0		&&			
ANR	3808041	RelationalExpression	* s >= 'A'		3807255	0		>=			
ANR	3808042	UnaryOperationExpression	* s		3807255	0					
ANR	3808043	UnaryOperator	*		3807255	0					
ANR	3808044	Identifier	s		3807255	1					
ANR	3808045	PrimaryExpression	'A'		3807255	1					
ANR	3808046	RelationalExpression	* s <= 'F'		3807255	1		<=			
ANR	3808047	UnaryOperationExpression	* s		3807255	0					
ANR	3808048	UnaryOperator	*		3807255	0					
ANR	3808049	Identifier	s		3807255	1					
ANR	3808050	PrimaryExpression	'F'		3807255	1					
ANR	3808051	ExpressionStatement	dectmp [ dectmp_size ] += ( * s - 'A' ) + 10	1029:22:26338:26376	3807255	1	True				
ANR	3808052	AssignmentExpression	dectmp [ dectmp_size ] += ( * s - 'A' ) + 10		3807255	0		+=			
ANR	3808053	ArrayIndexing	dectmp [ dectmp_size ]		3807255	0					
ANR	3808054	Identifier	dectmp		3807255	0					
ANR	3808055	Identifier	dectmp_size		3807255	1					
ANR	3808056	AdditiveExpression	( * s - 'A' ) + 10		3807255	1		+			
ANR	3808057	AdditiveExpression	* s - 'A'		3807255	0		-			
ANR	3808058	UnaryOperationExpression	* s		3807255	0					
ANR	3808059	UnaryOperator	*		3807255	0					
ANR	3808060	Identifier	s		3807255	1					
ANR	3808061	PrimaryExpression	'A'		3807255	1					
ANR	3808062	PrimaryExpression	10		3807255	1					
ANR	3808063	ElseStatement	else		3807255	0					
ANR	3808064	IfStatement	if ( * s >= 'a' && * s <= 'f' )		3807255	0					
ANR	3808065	Condition	* s >= 'a' && * s <= 'f'	1030:29:26407:26428	3807255	0	True				
ANR	3808066	AndExpression	* s >= 'a' && * s <= 'f'		3807255	0		&&			
ANR	3808067	RelationalExpression	* s >= 'a'		3807255	0		>=			
ANR	3808068	UnaryOperationExpression	* s		3807255	0					
ANR	3808069	UnaryOperator	*		3807255	0					
ANR	3808070	Identifier	s		3807255	1					
ANR	3808071	PrimaryExpression	'a'		3807255	1					
ANR	3808072	RelationalExpression	* s <= 'f'		3807255	1		<=			
ANR	3808073	UnaryOperationExpression	* s		3807255	0					
ANR	3808074	UnaryOperator	*		3807255	0					
ANR	3808075	Identifier	s		3807255	1					
ANR	3808076	PrimaryExpression	'f'		3807255	1					
ANR	3808077	ExpressionStatement	dectmp [ dectmp_size ] += ( * s - 'a' ) + 10	1031:22:26453:26491	3807255	1	True				
ANR	3808078	AssignmentExpression	dectmp [ dectmp_size ] += ( * s - 'a' ) + 10		3807255	0		+=			
ANR	3808079	ArrayIndexing	dectmp [ dectmp_size ]		3807255	0					
ANR	3808080	Identifier	dectmp		3807255	0					
ANR	3808081	Identifier	dectmp_size		3807255	1					
ANR	3808082	AdditiveExpression	( * s - 'a' ) + 10		3807255	1		+			
ANR	3808083	AdditiveExpression	* s - 'a'		3807255	0		-			
ANR	3808084	UnaryOperationExpression	* s		3807255	0					
ANR	3808085	UnaryOperator	*		3807255	0					
ANR	3808086	Identifier	s		3807255	1					
ANR	3808087	PrimaryExpression	'a'		3807255	1					
ANR	3808088	PrimaryExpression	10		3807255	1					
ANR	3808089	ExpressionStatement	dectmp_size ++	1033:16:26527:26540	3807255	2	True				
ANR	3808090	PostIncDecOperationExpression	dectmp_size ++		3807255	0					
ANR	3808091	Identifier	dectmp_size		3807255	0					
ANR	3808092	IncDec	++		3807255	1					
ANR	3808093	IfStatement	if ( dectmp_size > 0 )		3807255	3					
ANR	3808094	Condition	dectmp_size > 0	1040:16:26742:26756	3807255	0	True				
ANR	3808095	RelationalExpression	dectmp_size > 0		3807255	0		>			
ANR	3808096	Identifier	dectmp_size		3807255	0					
ANR	3808097	PrimaryExpression	0		3807255	1					
ANR	3808098	CompoundStatement		220:33:5844:5844	3807255	1					
ANR	3808099	IfStatement	if ( ! compat )		3807255	0					
ANR	3808100	Condition	! compat	1041:6:26767:26773	3807255	0	True				
ANR	3808101	UnaryOperationExpression	! compat		3807255	0					
ANR	3808102	UnaryOperator	!		3807255	0					
ANR	3808103	Identifier	compat		3807255	1					
ANR	3808104	CompoundStatement		221:15:5861:5861	3807255	1					
ANR	3808105	ExpressionStatement	"add_decomp ( code , 0 )"	1042:6:26784:26803	3807255	0	True				
ANR	3808106	CallExpression	"add_decomp ( code , 0 )"		3807255	0					
ANR	3808107	Callee	add_decomp		3807255	0					
ANR	3808108	Identifier	add_decomp		3807255	0					
ANR	3808109	ArgumentList	code		3807255	1					
ANR	3808110	Argument	code		3807255	0					
ANR	3808111	Identifier	code		3807255	0					
ANR	3808112	Argument	0		3807255	1					
ANR	3808113	PrimaryExpression	0		3807255	0					
ANR	3808114	ExpressionStatement	"add_decomp ( code , 1 )"	1044:2:26811:26830	3807255	1	True				
ANR	3808115	CallExpression	"add_decomp ( code , 1 )"		3807255	0					
ANR	3808116	Callee	add_decomp		3807255	0					
ANR	3808117	Identifier	add_decomp		3807255	0					
ANR	3808118	ArgumentList	code		3807255	1					
ANR	3808119	Argument	code		3807255	0					
ANR	3808120	Identifier	code		3807255	0					
ANR	3808121	Argument	1		3807255	1					
ANR	3808122	PrimaryExpression	1		3807255	0					
ANR	3808123	ForStatement	for ( i = 0 ; i < 3 && * s ; s ++ )		3807255	19					
ANR	3808124	ForInit	i = 0 ;	1051:13:26923:26928	3807255	0	True				
ANR	3808125	AssignmentExpression	i = 0		3807255	0		=			
ANR	3808126	Identifier	i		3807255	0					
ANR	3808127	PrimaryExpression	0		3807255	1					
ANR	3808128	Condition	i < 3 && * s	1051:20:26930:26940	3807255	1	True				
ANR	3808129	AndExpression	i < 3 && * s		3807255	0		&&			
ANR	3808130	RelationalExpression	i < 3		3807255	0		<			
ANR	3808131	Identifier	i		3807255	0					
ANR	3808132	PrimaryExpression	3		3807255	1					
ANR	3808133	UnaryOperationExpression	* s		3807255	1					
ANR	3808134	UnaryOperator	*		3807255	0					
ANR	3808135	Identifier	s		3807255	1					
ANR	3808136	PostIncDecOperationExpression	s ++	1051:33:26943:26945	3807255	2	True				
ANR	3808137	Identifier	s		3807255	0					
ANR	3808138	IncDec	++		3807255	1					
ANR	3808139	CompoundStatement		231:38:6033:6033	3807255	3					
ANR	3808140	IfStatement	if ( * s == ';' )		3807255	0					
ANR	3808141	Condition	* s == ';'	1052:16:26966:26974	3807255	0	True				
ANR	3808142	EqualityExpression	* s == ';'		3807255	0		==			
ANR	3808143	UnaryOperationExpression	* s		3807255	0					
ANR	3808144	UnaryOperator	*		3807255	0					
ANR	3808145	Identifier	s		3807255	1					
ANR	3808146	PrimaryExpression	';'		3807255	1					
ANR	3808147	ExpressionStatement	i ++	1053:14:26991:26994	3807255	1	True				
ANR	3808148	PostIncDecOperationExpression	i ++		3807255	0					
ANR	3808149	Identifier	i		3807255	0					
ANR	3808150	IncDec	++		3807255	1					
ANR	3808151	ExpressionStatement	number [ 0 ] = number [ 1 ] = 0	1059:8:27069:27094	3807255	20	True				
ANR	3808152	AssignmentExpression	number [ 0 ] = number [ 1 ] = 0		3807255	0		=			
ANR	3808153	ArrayIndexing	number [ 0 ]		3807255	0					
ANR	3808154	Identifier	number		3807255	0					
ANR	3808155	PrimaryExpression	0		3807255	1					
ANR	3808156	AssignmentExpression	number [ 1 ] = 0		3807255	1		=			
ANR	3808157	ArrayIndexing	number [ 1 ]		3807255	0					
ANR	3808158	Identifier	number		3807255	0					
ANR	3808159	PrimaryExpression	1		3807255	1					
ANR	3808160	PrimaryExpression	0		3807255	1					
ANR	3808161	ForStatement	"for ( e = s , neg = wnum = 0 ; * e && * e != ';' ; e ++ )"		3807255	21					
ANR	3808162	ForInit	"e = s , neg = wnum = 0 ;"	1060:13:27109:27130	3807255	0	True				
ANR	3808163	Expression	"e = s , neg = wnum = 0"		3807255	0					
ANR	3808164	AssignmentExpression	e = s		3807255	0		=			
ANR	3808165	Identifier	e		3807255	0					
ANR	3808166	Identifier	s		3807255	1					
ANR	3808167	AssignmentExpression	neg = wnum = 0		3807255	1		=			
ANR	3808168	Identifier	neg		3807255	0					
ANR	3808169	AssignmentExpression	wnum = 0		3807255	1		=			
ANR	3808170	Identifier	wnum		3807255	0					
ANR	3808171	PrimaryExpression	0		3807255	1					
ANR	3808172	Condition	* e && * e != ';'	1060:36:27132:27146	3807255	1	True				
ANR	3808173	AndExpression	* e && * e != ';'		3807255	0		&&			
ANR	3808174	UnaryOperationExpression	* e		3807255	0					
ANR	3808175	UnaryOperator	*		3807255	0					
ANR	3808176	Identifier	e		3807255	1					
ANR	3808177	EqualityExpression	* e != ';'		3807255	1		!=			
ANR	3808178	UnaryOperationExpression	* e		3807255	0					
ANR	3808179	UnaryOperator	*		3807255	0					
ANR	3808180	Identifier	e		3807255	1					
ANR	3808181	PrimaryExpression	';'		3807255	1					
ANR	3808182	PostIncDecOperationExpression	e ++	1060:53:27149:27151	3807255	2	True				
ANR	3808183	Identifier	e		3807255	0					
ANR	3808184	IncDec	++		3807255	1					
ANR	3808185	CompoundStatement		240:58:6239:6239	3807255	3					
ANR	3808186	IfStatement	if ( * e == '-' )		3807255	0					
ANR	3808187	Condition	* e == '-'	1061:16:27172:27180	3807255	0	True				
ANR	3808188	EqualityExpression	* e == '-'		3807255	0		==			
ANR	3808189	UnaryOperationExpression	* e		3807255	0					
ANR	3808190	UnaryOperator	*		3807255	0					
ANR	3808191	Identifier	e		3807255	1					
ANR	3808192	PrimaryExpression	'-'		3807255	1					
ANR	3808193	CompoundStatement		241:27:6268:6268	3807255	1					
ANR	3808194	ExpressionStatement	neg = 1	1062:16:27201:27208	3807255	0	True				
ANR	3808195	AssignmentExpression	neg = 1		3807255	0		=			
ANR	3808196	Identifier	neg		3807255	0					
ANR	3808197	PrimaryExpression	1		3807255	1					
ANR	3808198	ContinueStatement	continue ;	1063:16:27226:27234	3807255	1	True				
ANR	3808199	IfStatement	if ( * e == '/' )		3807255	1					
ANR	3808200	Condition	* e == '/'	1066:16:27267:27275	3807255	0	True				
ANR	3808201	EqualityExpression	* e == '/'		3807255	0		==			
ANR	3808202	UnaryOperationExpression	* e		3807255	0					
ANR	3808203	UnaryOperator	*		3807255	0					
ANR	3808204	Identifier	e		3807255	1					
ANR	3808205	PrimaryExpression	'/'		3807255	1					
ANR	3808206	CompoundStatement		246:27:6363:6363	3807255	1					
ANR	3808207	IfStatement	if ( neg )		3807255	0					
ANR	3808208	Condition	neg	1070:20:27396:27398	3807255	0	True				
ANR	3808209	Identifier	neg		3807255	0					
ANR	3808210	ExpressionStatement	number [ wnum ] *= - 1	1071:18:27419:27437	3807255	1	True				
ANR	3808211	AssignmentExpression	number [ wnum ] *= - 1		3807255	0		*=			
ANR	3808212	ArrayIndexing	number [ wnum ]		3807255	0					
ANR	3808213	Identifier	number		3807255	0					
ANR	3808214	Identifier	wnum		3807255	1					
ANR	3808215	UnaryOperationExpression	- 1		3807255	1					
ANR	3808216	UnaryOperator	-		3807255	0					
ANR	3808217	PrimaryExpression	1		3807255	1					
ANR	3808218	ExpressionStatement	neg = 0	1072:16:27455:27462	3807255	1	True				
ANR	3808219	AssignmentExpression	neg = 0		3807255	0		=			
ANR	3808220	Identifier	neg		3807255	0					
ANR	3808221	PrimaryExpression	0		3807255	1					
ANR	3808222	ExpressionStatement	e ++	1073:16:27480:27483	3807255	2	True				
ANR	3808223	PostIncDecOperationExpression	e ++		3807255	0					
ANR	3808224	Identifier	e		3807255	0					
ANR	3808225	IncDec	++		3807255	1					
ANR	3808226	ExpressionStatement	wnum ++	1074:16:27501:27507	3807255	3	True				
ANR	3808227	PostIncDecOperationExpression	wnum ++		3807255	0					
ANR	3808228	Identifier	wnum		3807255	0					
ANR	3808229	IncDec	++		3807255	1					
ANR	3808230	ExpressionStatement	number [ wnum ] = ( number [ wnum ] * 10 ) + ( * e - '0' )	1076:12:27535:27582	3807255	2	True				
ANR	3808231	AssignmentExpression	number [ wnum ] = ( number [ wnum ] * 10 ) + ( * e - '0' )		3807255	0		=			
ANR	3808232	ArrayIndexing	number [ wnum ]		3807255	0					
ANR	3808233	Identifier	number		3807255	0					
ANR	3808234	Identifier	wnum		3807255	1					
ANR	3808235	AdditiveExpression	( number [ wnum ] * 10 ) + ( * e - '0' )		3807255	1		+			
ANR	3808236	MultiplicativeExpression	number [ wnum ] * 10		3807255	0		*			
ANR	3808237	ArrayIndexing	number [ wnum ]		3807255	0					
ANR	3808238	Identifier	number		3807255	0					
ANR	3808239	Identifier	wnum		3807255	1					
ANR	3808240	PrimaryExpression	10		3807255	1					
ANR	3808241	AdditiveExpression	* e - '0'		3807255	1		-			
ANR	3808242	UnaryOperationExpression	* e		3807255	0					
ANR	3808243	UnaryOperator	*		3807255	0					
ANR	3808244	Identifier	e		3807255	1					
ANR	3808245	PrimaryExpression	'0'		3807255	1					
ANR	3808246	IfStatement	if ( e > s )		3807255	22					
ANR	3808247	Condition	e > s	1079:12:27607:27611	3807255	0	True				
ANR	3808248	RelationalExpression	e > s		3807255	0		>			
ANR	3808249	Identifier	e		3807255	0					
ANR	3808250	Identifier	s		3807255	1					
ANR	3808251	CompoundStatement		259:19:6699:6699	3807255	1					
ANR	3808252	IfStatement	if ( wnum == 0 )		3807255	0					
ANR	3808253	Condition	wnum == 0	1083:16:27741:27749	3807255	0	True				
ANR	3808254	EqualityExpression	wnum == 0		3807255	0		==			
ANR	3808255	Identifier	wnum		3807255	0					
ANR	3808256	PrimaryExpression	0		3807255	1					
ANR	3808257	ExpressionStatement	number [ 1 ] = 1	1084:14:27766:27779	3807255	1	True				
ANR	3808258	AssignmentExpression	number [ 1 ] = 1		3807255	0		=			
ANR	3808259	ArrayIndexing	number [ 1 ]		3807255	0					
ANR	3808260	Identifier	number		3807255	0					
ANR	3808261	PrimaryExpression	1		3807255	1					
ANR	3808262	PrimaryExpression	1		3807255	1					
ANR	3808263	ExpressionStatement	"add_number ( code , number [ 0 ] , number [ 1 ] )"	1086:12:27794:27832	3807255	1	True				
ANR	3808264	CallExpression	"add_number ( code , number [ 0 ] , number [ 1 ] )"		3807255	0					
ANR	3808265	Callee	add_number		3807255	0					
ANR	3808266	Identifier	add_number		3807255	0					
ANR	3808267	ArgumentList	code		3807255	1					
ANR	3808268	Argument	code		3807255	0					
ANR	3808269	Identifier	code		3807255	0					
ANR	3808270	Argument	number [ 0 ]		3807255	1					
ANR	3808271	ArrayIndexing	number [ 0 ]		3807255	0					
ANR	3808272	Identifier	number		3807255	0					
ANR	3808273	PrimaryExpression	0		3807255	1					
ANR	3808274	Argument	number [ 1 ]		3807255	2					
ANR	3808275	ArrayIndexing	number [ 1 ]		3807255	0					
ANR	3808276	Identifier	number		3807255	0					
ANR	3808277	PrimaryExpression	1		3807255	1					
ANR	3808278	ForStatement	"for ( s = e , i = 0 ; i < 4 && * s ; s ++ )"		3807255	23					
ANR	3808279	ForInit	"s = e , i = 0 ;"	1092:13:27941:27953	3807255	0	True				
ANR	3808280	Expression	"s = e , i = 0"		3807255	0					
ANR	3808281	AssignmentExpression	s = e		3807255	0		=			
ANR	3808282	Identifier	s		3807255	0					
ANR	3808283	Identifier	e		3807255	1					
ANR	3808284	AssignmentExpression	i = 0		3807255	1		=			
ANR	3808285	Identifier	i		3807255	0					
ANR	3808286	PrimaryExpression	0		3807255	1					
ANR	3808287	Condition	i < 4 && * s	1092:27:27955:27965	3807255	1	True				
ANR	3808288	AndExpression	i < 4 && * s		3807255	0		&&			
ANR	3808289	RelationalExpression	i < 4		3807255	0		<			
ANR	3808290	Identifier	i		3807255	0					
ANR	3808291	PrimaryExpression	4		3807255	1					
ANR	3808292	UnaryOperationExpression	* s		3807255	1					
ANR	3808293	UnaryOperator	*		3807255	0					
ANR	3808294	Identifier	s		3807255	1					
ANR	3808295	PostIncDecOperationExpression	s ++	1092:40:27968:27970	3807255	2	True				
ANR	3808296	Identifier	s		3807255	0					
ANR	3808297	IncDec	++		3807255	1					
ANR	3808298	CompoundStatement		272:45:7058:7058	3807255	3					
ANR	3808299	IfStatement	if ( * s == ';' )		3807255	0					
ANR	3808300	Condition	* s == ';'	1093:16:27991:27999	3807255	0	True				
ANR	3808301	EqualityExpression	* s == ';'		3807255	0		==			
ANR	3808302	UnaryOperationExpression	* s		3807255	0					
ANR	3808303	UnaryOperator	*		3807255	0					
ANR	3808304	Identifier	s		3807255	1					
ANR	3808305	PrimaryExpression	';'		3807255	1					
ANR	3808306	ExpressionStatement	i ++	1094:14:28016:28019	3807255	1	True				
ANR	3808307	PostIncDecOperationExpression	i ++		3807255	0					
ANR	3808308	Identifier	i		3807255	0					
ANR	3808309	IncDec	++		3807255	1					
ANR	3808310	ExpressionStatement	cases [ 0 ] = cases [ 1 ] = cases [ 2 ] = 0	1100:8:28101:28135	3807255	24	True				
ANR	3808311	AssignmentExpression	cases [ 0 ] = cases [ 1 ] = cases [ 2 ] = 0		3807255	0		=			
ANR	3808312	ArrayIndexing	cases [ 0 ]		3807255	0					
ANR	3808313	Identifier	cases		3807255	0					
ANR	3808314	PrimaryExpression	0		3807255	1					
ANR	3808315	AssignmentExpression	cases [ 1 ] = cases [ 2 ] = 0		3807255	1		=			
ANR	3808316	ArrayIndexing	cases [ 1 ]		3807255	0					
ANR	3808317	Identifier	cases		3807255	0					
ANR	3808318	PrimaryExpression	1		3807255	1					
ANR	3808319	AssignmentExpression	cases [ 2 ] = 0		3807255	1		=			
ANR	3808320	ArrayIndexing	cases [ 2 ]		3807255	0					
ANR	3808321	Identifier	cases		3807255	0					
ANR	3808322	PrimaryExpression	2		3807255	1					
ANR	3808323	PrimaryExpression	0		3807255	1					
ANR	3808324	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		3807255	25					
ANR	3808325	ForInit	i = 0 ;	1101:13:28150:28155	3807255	0	True				
ANR	3808326	AssignmentExpression	i = 0		3807255	0		=			
ANR	3808327	Identifier	i		3807255	0					
ANR	3808328	PrimaryExpression	0		3807255	1					
ANR	3808329	Condition	i < 3	1101:20:28157:28161	3807255	1	True				
ANR	3808330	RelationalExpression	i < 3		3807255	0		<			
ANR	3808331	Identifier	i		3807255	0					
ANR	3808332	PrimaryExpression	3		3807255	1					
ANR	3808333	PostIncDecOperationExpression	i ++	1101:27:28164:28166	3807255	2	True				
ANR	3808334	Identifier	i		3807255	0					
ANR	3808335	IncDec	++		3807255	1					
ANR	3808336	CompoundStatement		281:32:7254:7254	3807255	3					
ANR	3808337	WhileStatement	while ( ishdigit ( * s ) )		3807255	0					
ANR	3808338	Condition	ishdigit ( * s )	1102:19:28190:28201	3807255	0	True				
ANR	3808339	CallExpression	ishdigit ( * s )		3807255	0					
ANR	3808340	Callee	ishdigit		3807255	0					
ANR	3808341	Identifier	ishdigit		3807255	0					
ANR	3808342	ArgumentList	* s		3807255	1					
ANR	3808343	Argument	* s		3807255	0					
ANR	3808344	UnaryOperationExpression	* s		3807255	0					
ANR	3808345	UnaryOperator	*		3807255	0					
ANR	3808346	Identifier	s		3807255	1					
ANR	3808347	CompoundStatement		282:33:7289:7289	3807255	1					
ANR	3808348	ExpressionStatement	cases [ i ] <<= 4	1103:16:28222:28236	3807255	0	True				
ANR	3808349	AssignmentExpression	cases [ i ] <<= 4		3807255	0		<<=			
ANR	3808350	ArrayIndexing	cases [ i ]		3807255	0					
ANR	3808351	Identifier	cases		3807255	0					
ANR	3808352	Identifier	i		3807255	1					
ANR	3808353	PrimaryExpression	4		3807255	1					
ANR	3808354	IfStatement	if ( * s >= '0' && * s <= '9' )		3807255	1					
ANR	3808355	Condition	* s >= '0' && * s <= '9'	1104:20:28258:28279	3807255	0	True				
ANR	3808356	AndExpression	* s >= '0' && * s <= '9'		3807255	0		&&			
ANR	3808357	RelationalExpression	* s >= '0'		3807255	0		>=			
ANR	3808358	UnaryOperationExpression	* s		3807255	0					
ANR	3808359	UnaryOperator	*		3807255	0					
ANR	3808360	Identifier	s		3807255	1					
ANR	3808361	PrimaryExpression	'0'		3807255	1					
ANR	3808362	RelationalExpression	* s <= '9'		3807255	1		<=			
ANR	3808363	UnaryOperationExpression	* s		3807255	0					
ANR	3808364	UnaryOperator	*		3807255	0					
ANR	3808365	Identifier	s		3807255	1					
ANR	3808366	PrimaryExpression	'9'		3807255	1					
ANR	3808367	ExpressionStatement	cases [ i ] += * s - '0'	1105:18:28300:28320	3807255	1	True				
ANR	3808368	AssignmentExpression	cases [ i ] += * s - '0'		3807255	0		+=			
ANR	3808369	ArrayIndexing	cases [ i ]		3807255	0					
ANR	3808370	Identifier	cases		3807255	0					
ANR	3808371	Identifier	i		3807255	1					
ANR	3808372	AdditiveExpression	* s - '0'		3807255	1		-			
ANR	3808373	UnaryOperationExpression	* s		3807255	0					
ANR	3808374	UnaryOperator	*		3807255	0					
ANR	3808375	Identifier	s		3807255	1					
ANR	3808376	PrimaryExpression	'0'		3807255	1					
ANR	3808377	ElseStatement	else		3807255	0					
ANR	3808378	IfStatement	if ( * s >= 'A' && * s <= 'F' )		3807255	0					
ANR	3808379	Condition	* s >= 'A' && * s <= 'F'	1106:25:28347:28368	3807255	0	True				
ANR	3808380	AndExpression	* s >= 'A' && * s <= 'F'		3807255	0		&&			
ANR	3808381	RelationalExpression	* s >= 'A'		3807255	0		>=			
ANR	3808382	UnaryOperationExpression	* s		3807255	0					
ANR	3808383	UnaryOperator	*		3807255	0					
ANR	3808384	Identifier	s		3807255	1					
ANR	3808385	PrimaryExpression	'A'		3807255	1					
ANR	3808386	RelationalExpression	* s <= 'F'		3807255	1		<=			
ANR	3808387	UnaryOperationExpression	* s		3807255	0					
ANR	3808388	UnaryOperator	*		3807255	0					
ANR	3808389	Identifier	s		3807255	1					
ANR	3808390	PrimaryExpression	'F'		3807255	1					
ANR	3808391	ExpressionStatement	cases [ i ] += ( * s - 'A' ) + 10	1107:18:28389:28416	3807255	1	True				
ANR	3808392	AssignmentExpression	cases [ i ] += ( * s - 'A' ) + 10		3807255	0		+=			
ANR	3808393	ArrayIndexing	cases [ i ]		3807255	0					
ANR	3808394	Identifier	cases		3807255	0					
ANR	3808395	Identifier	i		3807255	1					
ANR	3808396	AdditiveExpression	( * s - 'A' ) + 10		3807255	1		+			
ANR	3808397	AdditiveExpression	* s - 'A'		3807255	0		-			
ANR	3808398	UnaryOperationExpression	* s		3807255	0					
ANR	3808399	UnaryOperator	*		3807255	0					
ANR	3808400	Identifier	s		3807255	1					
ANR	3808401	PrimaryExpression	'A'		3807255	1					
ANR	3808402	PrimaryExpression	10		3807255	1					
ANR	3808403	ElseStatement	else		3807255	0					
ANR	3808404	IfStatement	if ( * s >= 'a' && * s <= 'f' )		3807255	0					
ANR	3808405	Condition	* s >= 'a' && * s <= 'f'	1108:25:28443:28464	3807255	0	True				
ANR	3808406	AndExpression	* s >= 'a' && * s <= 'f'		3807255	0		&&			
ANR	3808407	RelationalExpression	* s >= 'a'		3807255	0		>=			
ANR	3808408	UnaryOperationExpression	* s		3807255	0					
ANR	3808409	UnaryOperator	*		3807255	0					
ANR	3808410	Identifier	s		3807255	1					
ANR	3808411	PrimaryExpression	'a'		3807255	1					
ANR	3808412	RelationalExpression	* s <= 'f'		3807255	1		<=			
ANR	3808413	UnaryOperationExpression	* s		3807255	0					
ANR	3808414	UnaryOperator	*		3807255	0					
ANR	3808415	Identifier	s		3807255	1					
ANR	3808416	PrimaryExpression	'f'		3807255	1					
ANR	3808417	ExpressionStatement	cases [ i ] += ( * s - 'a' ) + 10	1109:18:28485:28512	3807255	1	True				
ANR	3808418	AssignmentExpression	cases [ i ] += ( * s - 'a' ) + 10		3807255	0		+=			
ANR	3808419	ArrayIndexing	cases [ i ]		3807255	0					
ANR	3808420	Identifier	cases		3807255	0					
ANR	3808421	Identifier	i		3807255	1					
ANR	3808422	AdditiveExpression	( * s - 'a' ) + 10		3807255	1		+			
ANR	3808423	AdditiveExpression	* s - 'a'		3807255	0		-			
ANR	3808424	UnaryOperationExpression	* s		3807255	0					
ANR	3808425	UnaryOperator	*		3807255	0					
ANR	3808426	Identifier	s		3807255	1					
ANR	3808427	PrimaryExpression	'a'		3807255	1					
ANR	3808428	PrimaryExpression	10		3807255	1					
ANR	3808429	ExpressionStatement	s ++	1110:16:28530:28533	3807255	2	True				
ANR	3808430	PostIncDecOperationExpression	s ++		3807255	0					
ANR	3808431	Identifier	s		3807255	0					
ANR	3808432	IncDec	++		3807255	1					
ANR	3808433	IfStatement	if ( * s == ';' )		3807255	1					
ANR	3808434	Condition	* s == ';'	1112:16:28565:28573	3807255	0	True				
ANR	3808435	EqualityExpression	* s == ';'		3807255	0		==			
ANR	3808436	UnaryOperationExpression	* s		3807255	0					
ANR	3808437	UnaryOperator	*		3807255	0					
ANR	3808438	Identifier	s		3807255	1					
ANR	3808439	PrimaryExpression	';'		3807255	1					
ANR	3808440	ExpressionStatement	s ++	1113:14:28590:28593	3807255	1	True				
ANR	3808441	PostIncDecOperationExpression	s ++		3807255	0					
ANR	3808442	Identifier	s		3807255	0					
ANR	3808443	IncDec	++		3807255	1					
ANR	3808444	IfStatement	if ( cases [ 0 ] && cases [ 1 ] )		3807255	26					
ANR	3808445	Condition	cases [ 0 ] && cases [ 1 ]	1115:12:28617:28636	3807255	0	True				
ANR	3808446	AndExpression	cases [ 0 ] && cases [ 1 ]		3807255	0		&&			
ANR	3808447	ArrayIndexing	cases [ 0 ]		3807255	0					
ANR	3808448	Identifier	cases		3807255	0					
ANR	3808449	PrimaryExpression	0		3807255	1					
ANR	3808450	ArrayIndexing	cases [ 1 ]		3807255	1					
ANR	3808451	Identifier	cases		3807255	0					
ANR	3808452	PrimaryExpression	1		3807255	1					
ANR	3808453	ExpressionStatement	add_title ( code )	1119:10:28750:28765	3807255	1	True				
ANR	3808454	CallExpression	add_title ( code )		3807255	0					
ANR	3808455	Callee	add_title		3807255	0					
ANR	3808456	Identifier	add_title		3807255	0					
ANR	3808457	ArgumentList	code		3807255	1					
ANR	3808458	Argument	code		3807255	0					
ANR	3808459	Identifier	code		3807255	0					
ANR	3808460	ElseStatement	else		3807255	0					
ANR	3808461	IfStatement	if ( cases [ 1 ] )		3807255	0					
ANR	3808462	Condition	cases [ 1 ]	1120:17:28784:28791	3807255	0	True				
ANR	3808463	ArrayIndexing	cases [ 1 ]		3807255	0					
ANR	3808464	Identifier	cases		3807255	0					
ANR	3808465	PrimaryExpression	1		3807255	1					
ANR	3808466	ExpressionStatement	add_upper ( code )	1125:10:28925:28940	3807255	1	True				
ANR	3808467	CallExpression	add_upper ( code )		3807255	0					
ANR	3808468	Callee	add_upper		3807255	0					
ANR	3808469	Identifier	add_upper		3807255	0					
ANR	3808470	ArgumentList	code		3807255	1					
ANR	3808471	Argument	code		3807255	0					
ANR	3808472	Identifier	code		3807255	0					
ANR	3808473	ElseStatement	else		3807255	0					
ANR	3808474	IfStatement	if ( cases [ 0 ] )		3807255	0					
ANR	3808475	Condition	cases [ 0 ]	1126:17:28959:28966	3807255	0	True				
ANR	3808476	ArrayIndexing	cases [ 0 ]		3807255	0					
ANR	3808477	Identifier	cases		3807255	0					
ANR	3808478	PrimaryExpression	0		3807255	1					
ANR	3808479	ExpressionStatement	add_lower ( code )	1131:10:29100:29115	3807255	1	True				
ANR	3808480	CallExpression	add_lower ( code )		3807255	0					
ANR	3808481	Callee	add_lower		3807255	0					
ANR	3808482	Identifier	add_lower		3807255	0					
ANR	3808483	ArgumentList	code		3807255	1					
ANR	3808484	Argument	code		3807255	0					
ANR	3808485	Identifier	code		3807255	0					
ANR	3808486	ReturnType	static void		3807255	1					
ANR	3808487	Identifier	read_cdata		3807255	2					
ANR	3808488	ParameterList	FILE * in		3807255	3					
ANR	3808489	Parameter	FILE * in	820:11:20904:20911	3807255	0	True				
ANR	3808490	ParameterType	FILE *		3807255	0					
ANR	3808491	Identifier	in		3807255	1					
ANR	3808492	CFGEntryNode	ENTRY		3807255		True				
ANR	3808493	CFGExitNode	EXIT		3807255		True				
ANR	3808494	Symbol	* s ++		3807255						
ANR	3808495	Symbol	code		3807255						
ANR	3808496	Symbol	* wnum		3807255						
ANR	3808497	Symbol	line		3807255						
ANR	3808498	Symbol	strchr		3807255						
ANR	3808499	Symbol	skip		3807255						
ANR	3808500	Symbol	* line		3807255						
ANR	3808501	Symbol	* cases		3807255						
ANR	3808502	Symbol	fgets		3807255						
ANR	3808503	Symbol	dectmp_size		3807255						
ANR	3808504	Symbol	* dectmp		3807255						
ANR	3808505	Symbol	neg		3807255						
ANR	3808506	Symbol	number		3807255						
ANR	3808507	Symbol	ccl_code		3807255						
ANR	3808508	Symbol	wnum		3807255						
ANR	3808509	Symbol	ishdigit		3807255						
ANR	3808510	Symbol	cases		3807255						
ANR	3808511	Symbol	in		3807255						
ANR	3808512	Symbol	e		3807255						
ANR	3808513	Symbol	i		3807255						
ANR	3808514	Symbol	* dectmp_size		3807255						
ANR	3808515	Symbol	* number		3807255						
ANR	3808516	Symbol	* e		3807255						
ANR	3808517	Symbol	lineno		3807255						
ANR	3808518	Symbol	s		3807255						
ANR	3808519	Symbol	* i		3807255						
ANR	3808520	Symbol	dectmp		3807255						
ANR	3808521	Symbol	compat		3807255						
ANR	3808522	Symbol	* s		3807255						
ANR	3808523	Function	find_decomp	1137:0:29133:29559							
ANR	3808524	FunctionDef	"find_decomp (ac_uint4 code , short compat)"		3808523	0					
ANR	3808525	CompoundStatement		1139:0:29193:29559	3808523	0					
ANR	3808526	IdentifierDeclStatement	"long l , r , m ;"	1140:4:29199:29211	3808523	0	True				
ANR	3808527	IdentifierDecl	l		3808523	0					
ANR	3808528	IdentifierDeclType	long		3808523	0					
ANR	3808529	Identifier	l		3808523	1					
ANR	3808530	IdentifierDecl	r		3808523	1					
ANR	3808531	IdentifierDeclType	long		3808523	0					
ANR	3808532	Identifier	r		3808523	1					
ANR	3808533	IdentifierDecl	m		3808523	2					
ANR	3808534	IdentifierDeclType	long		3808523	0					
ANR	3808535	Identifier	m		3808523	1					
ANR	3808536	IdentifierDeclStatement	_decomp_t * decs ;	1141:4:29217:29232	3808523	1	True				
ANR	3808537	IdentifierDecl	* decs		3808523	0					
ANR	3808538	IdentifierDeclType	_decomp_t *		3808523	0					
ANR	3808539	Identifier	decs		3808523	1					
ANR	3808540	ExpressionStatement	l = 0	1143:4:29239:29244	3808523	2	True				
ANR	3808541	AssignmentExpression	l = 0		3808523	0		=			
ANR	3808542	Identifier	l		3808523	0					
ANR	3808543	PrimaryExpression	0		3808523	1					
ANR	3808544	ExpressionStatement	r = ( compat ? kdecomps_used : decomps_used ) - 1	1144:4:29250:29297	3808523	3	True				
ANR	3808545	AssignmentExpression	r = ( compat ? kdecomps_used : decomps_used ) - 1		3808523	0		=			
ANR	3808546	Identifier	r		3808523	0					
ANR	3808547	AdditiveExpression	( compat ? kdecomps_used : decomps_used ) - 1		3808523	1		-			
ANR	3808548	ConditionalExpression	compat ? kdecomps_used : decomps_used		3808523	0					
ANR	3808549	Condition	compat		3808523	0					
ANR	3808550	Identifier	compat		3808523	0					
ANR	3808551	Identifier	kdecomps_used		3808523	1					
ANR	3808552	Identifier	decomps_used		3808523	2					
ANR	3808553	PrimaryExpression	1		3808523	1					
ANR	3808554	ExpressionStatement	decs = compat ? kdecomps : decomps	1145:4:29303:29337	3808523	4	True				
ANR	3808555	AssignmentExpression	decs = compat ? kdecomps : decomps		3808523	0		=			
ANR	3808556	Identifier	decs		3808523	0					
ANR	3808557	ConditionalExpression	compat ? kdecomps : decomps		3808523	1					
ANR	3808558	Condition	compat		3808523	0					
ANR	3808559	Identifier	compat		3808523	0					
ANR	3808560	Identifier	kdecomps		3808523	1					
ANR	3808561	Identifier	decomps		3808523	2					
ANR	3808562	WhileStatement	while ( l <= r )		3808523	5					
ANR	3808563	Condition	l <= r	1146:11:29350:29355	3808523	0	True				
ANR	3808564	RelationalExpression	l <= r		3808523	0		<=			
ANR	3808565	Identifier	l		3808523	0					
ANR	3808566	Identifier	r		3808523	1					
ANR	3808567	CompoundStatement		8:19:164:164	3808523	1					
ANR	3808568	ExpressionStatement	m = ( l + r ) >> 1	1147:8:29368:29384	3808523	0	True				
ANR	3808569	AssignmentExpression	m = ( l + r ) >> 1		3808523	0		=			
ANR	3808570	Identifier	m		3808523	0					
ANR	3808571	ShiftExpression	( l + r ) >> 1		3808523	1		>>			
ANR	3808572	AdditiveExpression	l + r		3808523	0		+			
ANR	3808573	Identifier	l		3808523	0					
ANR	3808574	Identifier	r		3808523	1					
ANR	3808575	PrimaryExpression	1		3808523	1					
ANR	3808576	IfStatement	if ( code > decs [ m ] . code )		3808523	1					
ANR	3808577	Condition	code > decs [ m ] . code	1148:12:29398:29416	3808523	0	True				
ANR	3808578	RelationalExpression	code > decs [ m ] . code		3808523	0		>			
ANR	3808579	Identifier	code		3808523	0					
ANR	3808580	MemberAccess	decs [ m ] . code		3808523	1					
ANR	3808581	ArrayIndexing	decs [ m ]		3808523	0					
ANR	3808582	Identifier	decs		3808523	0					
ANR	3808583	Identifier	m		3808523	1					
ANR	3808584	Identifier	code		3808523	1					
ANR	3808585	ExpressionStatement	l = m + 1	1149:10:29429:29438	3808523	1	True				
ANR	3808586	AssignmentExpression	l = m + 1		3808523	0		=			
ANR	3808587	Identifier	l		3808523	0					
ANR	3808588	AdditiveExpression	m + 1		3808523	1		+			
ANR	3808589	Identifier	m		3808523	0					
ANR	3808590	PrimaryExpression	1		3808523	1					
ANR	3808591	ElseStatement	else		3808523	0					
ANR	3808592	IfStatement	if ( code < decs [ m ] . code )		3808523	0					
ANR	3808593	Condition	code < decs [ m ] . code	1150:17:29457:29475	3808523	0	True				
ANR	3808594	RelationalExpression	code < decs [ m ] . code		3808523	0		<			
ANR	3808595	Identifier	code		3808523	0					
ANR	3808596	MemberAccess	decs [ m ] . code		3808523	1					
ANR	3808597	ArrayIndexing	decs [ m ]		3808523	0					
ANR	3808598	Identifier	decs		3808523	0					
ANR	3808599	Identifier	m		3808523	1					
ANR	3808600	Identifier	code		3808523	1					
ANR	3808601	ExpressionStatement	r = m - 1	1151:10:29488:29497	3808523	1	True				
ANR	3808602	AssignmentExpression	r = m - 1		3808523	0		=			
ANR	3808603	Identifier	r		3808523	0					
ANR	3808604	AdditiveExpression	m - 1		3808523	1		-			
ANR	3808605	Identifier	m		3808523	0					
ANR	3808606	PrimaryExpression	1		3808523	1					
ANR	3808607	ElseStatement	else		3808523	0					
ANR	3808608	ReturnStatement	return & decs [ m ] ;	1153:10:29522:29537	3808523	0	True				
ANR	3808609	UnaryOperationExpression	& decs [ m ]		3808523	0					
ANR	3808610	UnaryOperator	&		3808523	0					
ANR	3808611	ArrayIndexing	decs [ m ]		3808523	1					
ANR	3808612	Identifier	decs		3808523	0					
ANR	3808613	Identifier	m		3808523	1					
ANR	3808614	ReturnStatement	return 0 ;	1155:4:29549:29557	3808523	6	True				
ANR	3808615	PrimaryExpression	0		3808523	0					
ANR	3808616	ReturnType	static _decomp_t *		3808523	1					
ANR	3808617	Identifier	find_decomp		3808523	2					
ANR	3808618	ParameterList	"ac_uint4 code , short compat"		3808523	3					
ANR	3808619	Parameter	ac_uint4 code	1138:12:29164:29176	3808523	0	True				
ANR	3808620	ParameterType	ac_uint4		3808523	0					
ANR	3808621	Identifier	code		3808523	1					
ANR	3808622	Parameter	short compat	1138:27:29179:29190	3808523	1	True				
ANR	3808623	ParameterType	short		3808523	0					
ANR	3808624	Identifier	compat		3808523	1					
ANR	3808625	CFGEntryNode	ENTRY		3808523		True				
ANR	3808626	CFGExitNode	EXIT		3808523		True				
ANR	3808627	Symbol	code		3808523						
ANR	3808628	Symbol	decomps_used		3808523						
ANR	3808629	Symbol	l		3808523						
ANR	3808630	Symbol	decomps		3808523						
ANR	3808631	Symbol	m		3808523						
ANR	3808632	Symbol	decs [ m ] . code		3808523						
ANR	3808633	Symbol	r		3808523						
ANR	3808634	Symbol	kdecomps		3808523						
ANR	3808635	Symbol	* m		3808523						
ANR	3808636	Symbol	kdecomps_used		3808523						
ANR	3808637	Symbol	* decs		3808523						
ANR	3808638	Symbol	compat		3808523						
ANR	3808639	Symbol	decs		3808523						
ANR	3808640	Function	decomp_it	1158:0:29562:29845							
ANR	3808641	FunctionDef	"decomp_it (_decomp_t * d , short compat)"		3808640	0					
ANR	3808642	CompoundStatement		1160:0:29612:29845	3808640	0					
ANR	3808643	IdentifierDeclStatement	ac_uint4 i ;	1161:4:29618:29628	3808640	0	True				
ANR	3808644	IdentifierDecl	i		3808640	0					
ANR	3808645	IdentifierDeclType	ac_uint4		3808640	0					
ANR	3808646	Identifier	i		3808640	1					
ANR	3808647	IdentifierDeclStatement	_decomp_t * dp ;	1162:4:29634:29647	3808640	1	True				
ANR	3808648	IdentifierDecl	* dp		3808640	0					
ANR	3808649	IdentifierDeclType	_decomp_t *		3808640	0					
ANR	3808650	Identifier	dp		3808640	1					
ANR	3808651	ForStatement	for ( i = 0 ; i < d -> used ; i ++ )		3808640	2					
ANR	3808652	ForInit	i = 0 ;	1164:9:29659:29664	3808640	0	True				
ANR	3808653	AssignmentExpression	i = 0		3808640	0		=			
ANR	3808654	Identifier	i		3808640	0					
ANR	3808655	PrimaryExpression	0		3808640	1					
ANR	3808656	Condition	i < d -> used	1164:16:29666:29676	3808640	1	True				
ANR	3808657	RelationalExpression	i < d -> used		3808640	0		<			
ANR	3808658	Identifier	i		3808640	0					
ANR	3808659	PtrMemberAccess	d -> used		3808640	1					
ANR	3808660	Identifier	d		3808640	0					
ANR	3808661	Identifier	used		3808640	1					
ANR	3808662	PostIncDecOperationExpression	i ++	1164:29:29679:29681	3808640	2	True				
ANR	3808663	Identifier	i		3808640	0					
ANR	3808664	IncDec	++		3808640	1					
ANR	3808665	CompoundStatement		5:34:71:71	3808640	3					
ANR	3808666	IfStatement	"if ( ( dp = find_decomp ( d -> decomp [ i ] , compat ) ) != 0 )"		3808640	0					
ANR	3808667	Condition	"( dp = find_decomp ( d -> decomp [ i ] , compat ) ) != 0"	1165:12:29698:29742	3808640	0	True				
ANR	3808668	EqualityExpression	"( dp = find_decomp ( d -> decomp [ i ] , compat ) ) != 0"		3808640	0		!=			
ANR	3808669	AssignmentExpression	"dp = find_decomp ( d -> decomp [ i ] , compat )"		3808640	0		=			
ANR	3808670	Identifier	dp		3808640	0					
ANR	3808671	CallExpression	"find_decomp ( d -> decomp [ i ] , compat )"		3808640	1					
ANR	3808672	Callee	find_decomp		3808640	0					
ANR	3808673	Identifier	find_decomp		3808640	0					
ANR	3808674	ArgumentList	d -> decomp [ i ]		3808640	1					
ANR	3808675	Argument	d -> decomp [ i ]		3808640	0					
ANR	3808676	ArrayIndexing	d -> decomp [ i ]		3808640	0					
ANR	3808677	PtrMemberAccess	d -> decomp		3808640	0					
ANR	3808678	Identifier	d		3808640	0					
ANR	3808679	Identifier	decomp		3808640	1					
ANR	3808680	Identifier	i		3808640	1					
ANR	3808681	Argument	compat		3808640	1					
ANR	3808682	Identifier	compat		3808640	0					
ANR	3808683	PrimaryExpression	0		3808640	1					
ANR	3808684	ExpressionStatement	"decomp_it ( dp , compat )"	1166:10:29755:29776	3808640	1	True				
ANR	3808685	CallExpression	"decomp_it ( dp , compat )"		3808640	0					
ANR	3808686	Callee	decomp_it		3808640	0					
ANR	3808687	Identifier	decomp_it		3808640	0					
ANR	3808688	ArgumentList	dp		3808640	1					
ANR	3808689	Argument	dp		3808640	0					
ANR	3808690	Identifier	dp		3808640	0					
ANR	3808691	Argument	compat		3808640	1					
ANR	3808692	Identifier	compat		3808640	0					
ANR	3808693	ElseStatement	else		3808640	0					
ANR	3808694	ExpressionStatement	dectmp [ dectmp_size ++ ] = d -> decomp [ i ]	1168:10:29801:29837	3808640	0	True				
ANR	3808695	AssignmentExpression	dectmp [ dectmp_size ++ ] = d -> decomp [ i ]		3808640	0		=			
ANR	3808696	ArrayIndexing	dectmp [ dectmp_size ++ ]		3808640	0					
ANR	3808697	Identifier	dectmp		3808640	0					
ANR	3808698	PostIncDecOperationExpression	dectmp_size ++		3808640	1					
ANR	3808699	Identifier	dectmp_size		3808640	0					
ANR	3808700	IncDec	++		3808640	1					
ANR	3808701	ArrayIndexing	d -> decomp [ i ]		3808640	1					
ANR	3808702	PtrMemberAccess	d -> decomp		3808640	0					
ANR	3808703	Identifier	d		3808640	0					
ANR	3808704	Identifier	decomp		3808640	1					
ANR	3808705	Identifier	i		3808640	1					
ANR	3808706	ReturnType	static void		3808640	1					
ANR	3808707	Identifier	decomp_it		3808640	2					
ANR	3808708	ParameterList	"_decomp_t * d , short compat"		3808640	3					
ANR	3808709	Parameter	_decomp_t * d	1159:10:29584:29595	3808640	0	True				
ANR	3808710	ParameterType	_decomp_t *		3808640	0					
ANR	3808711	Identifier	d		3808640	1					
ANR	3808712	Parameter	short compat	1159:24:29598:29609	3808640	1	True				
ANR	3808713	ParameterType	short		3808640	0					
ANR	3808714	Identifier	compat		3808640	1					
ANR	3808715	CFGEntryNode	ENTRY		3808640		True				
ANR	3808716	CFGExitNode	EXIT		3808640		True				
ANR	3808717	Symbol	d		3808640						
ANR	3808718	Symbol	* * d		3808640						
ANR	3808719	Symbol	i		3808640						
ANR	3808720	Symbol	dp		3808640						
ANR	3808721	Symbol	* d		3808640						
ANR	3808722	Symbol	dectmp_size		3808640						
ANR	3808723	Symbol	d -> used		3808640						
ANR	3808724	Symbol	* dectmp		3808640						
ANR	3808725	Symbol	* i		3808640						
ANR	3808726	Symbol	dectmp		3808640						
ANR	3808727	Symbol	find_decomp		3808640						
ANR	3808728	Symbol	compat		3808640						
ANR	3808729	Symbol	d -> decomp		3808640						
ANR	3808730	Symbol	* d -> decomp		3808640						
ANR	3808731	Function	expand_decomp	1177:0:29952:30363							
ANR	3808732	FunctionDef	expand_decomp ()		3808731	0					
ANR	3808733	CompoundStatement		1179:0:29984:30363	3808731	0					
ANR	3808734	IdentifierDeclStatement	ac_uint4 i ;	1180:4:29990:30000	3808731	0	True				
ANR	3808735	IdentifierDecl	i		3808731	0					
ANR	3808736	IdentifierDeclType	ac_uint4		3808731	0					
ANR	3808737	Identifier	i		3808731	1					
ANR	3808738	ForStatement	for ( i = 0 ; i < decomps_used ; i ++ )		3808731	1					
ANR	3808739	ForInit	i = 0 ;	1182:9:30012:30017	3808731	0	True				
ANR	3808740	AssignmentExpression	i = 0		3808731	0		=			
ANR	3808741	Identifier	i		3808731	0					
ANR	3808742	PrimaryExpression	0		3808731	1					
ANR	3808743	Condition	i < decomps_used	1182:16:30019:30034	3808731	1	True				
ANR	3808744	RelationalExpression	i < decomps_used		3808731	0		<			
ANR	3808745	Identifier	i		3808731	0					
ANR	3808746	Identifier	decomps_used		3808731	1					
ANR	3808747	PostIncDecOperationExpression	i ++	1182:34:30037:30039	3808731	2	True				
ANR	3808748	Identifier	i		3808731	0					
ANR	3808749	IncDec	++		3808731	1					
ANR	3808750	CompoundStatement		4:39:57:57	3808731	3					
ANR	3808751	ExpressionStatement	dectmp_size = 0	1183:8:30052:30067	3808731	0	True				
ANR	3808752	AssignmentExpression	dectmp_size = 0		3808731	0		=			
ANR	3808753	Identifier	dectmp_size		3808731	0					
ANR	3808754	PrimaryExpression	0		3808731	1					
ANR	3808755	ExpressionStatement	"decomp_it ( & decomps [ i ] , 0 )"	1184:8:30077:30102	3808731	1	True				
ANR	3808756	CallExpression	"decomp_it ( & decomps [ i ] , 0 )"		3808731	0					
ANR	3808757	Callee	decomp_it		3808731	0					
ANR	3808758	Identifier	decomp_it		3808731	0					
ANR	3808759	ArgumentList	& decomps [ i ]		3808731	1					
ANR	3808760	Argument	& decomps [ i ]		3808731	0					
ANR	3808761	UnaryOperationExpression	& decomps [ i ]		3808731	0					
ANR	3808762	UnaryOperator	&		3808731	0					
ANR	3808763	ArrayIndexing	decomps [ i ]		3808731	1					
ANR	3808764	Identifier	decomps		3808731	0					
ANR	3808765	Identifier	i		3808731	1					
ANR	3808766	Argument	0		3808731	1					
ANR	3808767	PrimaryExpression	0		3808731	0					
ANR	3808768	IfStatement	if ( dectmp_size > 0 )		3808731	2					
ANR	3808769	Condition	dectmp_size > 0	1185:12:30116:30130	3808731	0	True				
ANR	3808770	RelationalExpression	dectmp_size > 0		3808731	0		>			
ANR	3808771	Identifier	dectmp_size		3808731	0					
ANR	3808772	PrimaryExpression	0		3808731	1					
ANR	3808773	ExpressionStatement	"add_decomp ( decomps [ i ] . code , 0 )"	1186:10:30143:30173	3808731	1	True				
ANR	3808774	CallExpression	"add_decomp ( decomps [ i ] . code , 0 )"		3808731	0					
ANR	3808775	Callee	add_decomp		3808731	0					
ANR	3808776	Identifier	add_decomp		3808731	0					
ANR	3808777	ArgumentList	decomps [ i ] . code		3808731	1					
ANR	3808778	Argument	decomps [ i ] . code		3808731	0					
ANR	3808779	MemberAccess	decomps [ i ] . code		3808731	0					
ANR	3808780	ArrayIndexing	decomps [ i ]		3808731	0					
ANR	3808781	Identifier	decomps		3808731	0					
ANR	3808782	Identifier	i		3808731	1					
ANR	3808783	Identifier	code		3808731	1					
ANR	3808784	Argument	0		3808731	1					
ANR	3808785	PrimaryExpression	0		3808731	0					
ANR	3808786	ForStatement	for ( i = 0 ; i < kdecomps_used ; i ++ )		3808731	2					
ANR	3808787	ForInit	i = 0 ;	1189:9:30191:30196	3808731	0	True				
ANR	3808788	AssignmentExpression	i = 0		3808731	0		=			
ANR	3808789	Identifier	i		3808731	0					
ANR	3808790	PrimaryExpression	0		3808731	1					
ANR	3808791	Condition	i < kdecomps_used	1189:16:30198:30214	3808731	1	True				
ANR	3808792	RelationalExpression	i < kdecomps_used		3808731	0		<			
ANR	3808793	Identifier	i		3808731	0					
ANR	3808794	Identifier	kdecomps_used		3808731	1					
ANR	3808795	PostIncDecOperationExpression	i ++	1189:35:30217:30219	3808731	2	True				
ANR	3808796	Identifier	i		3808731	0					
ANR	3808797	IncDec	++		3808731	1					
ANR	3808798	CompoundStatement		11:40:237:237	3808731	3					
ANR	3808799	ExpressionStatement	dectmp_size = 0	1190:8:30232:30247	3808731	0	True				
ANR	3808800	AssignmentExpression	dectmp_size = 0		3808731	0		=			
ANR	3808801	Identifier	dectmp_size		3808731	0					
ANR	3808802	PrimaryExpression	0		3808731	1					
ANR	3808803	ExpressionStatement	"decomp_it ( & kdecomps [ i ] , 1 )"	1191:8:30257:30283	3808731	1	True				
ANR	3808804	CallExpression	"decomp_it ( & kdecomps [ i ] , 1 )"		3808731	0					
ANR	3808805	Callee	decomp_it		3808731	0					
ANR	3808806	Identifier	decomp_it		3808731	0					
ANR	3808807	ArgumentList	& kdecomps [ i ]		3808731	1					
ANR	3808808	Argument	& kdecomps [ i ]		3808731	0					
ANR	3808809	UnaryOperationExpression	& kdecomps [ i ]		3808731	0					
ANR	3808810	UnaryOperator	&		3808731	0					
ANR	3808811	ArrayIndexing	kdecomps [ i ]		3808731	1					
ANR	3808812	Identifier	kdecomps		3808731	0					
ANR	3808813	Identifier	i		3808731	1					
ANR	3808814	Argument	1		3808731	1					
ANR	3808815	PrimaryExpression	1		3808731	0					
ANR	3808816	IfStatement	if ( dectmp_size > 0 )		3808731	2					
ANR	3808817	Condition	dectmp_size > 0	1192:12:30297:30311	3808731	0	True				
ANR	3808818	RelationalExpression	dectmp_size > 0		3808731	0		>			
ANR	3808819	Identifier	dectmp_size		3808731	0					
ANR	3808820	PrimaryExpression	0		3808731	1					
ANR	3808821	ExpressionStatement	"add_decomp ( kdecomps [ i ] . code , 1 )"	1193:10:30324:30355	3808731	1	True				
ANR	3808822	CallExpression	"add_decomp ( kdecomps [ i ] . code , 1 )"		3808731	0					
ANR	3808823	Callee	add_decomp		3808731	0					
ANR	3808824	Identifier	add_decomp		3808731	0					
ANR	3808825	ArgumentList	kdecomps [ i ] . code		3808731	1					
ANR	3808826	Argument	kdecomps [ i ] . code		3808731	0					
ANR	3808827	MemberAccess	kdecomps [ i ] . code		3808731	0					
ANR	3808828	ArrayIndexing	kdecomps [ i ]		3808731	0					
ANR	3808829	Identifier	kdecomps		3808731	0					
ANR	3808830	Identifier	i		3808731	1					
ANR	3808831	Identifier	code		3808731	1					
ANR	3808832	Argument	1		3808731	1					
ANR	3808833	PrimaryExpression	1		3808731	0					
ANR	3808834	ReturnType	static void		3808731	1					
ANR	3808835	Identifier	expand_decomp		3808731	2					
ANR	3808836	ParameterList			3808731	3					
ANR	3808837	CFGEntryNode	ENTRY		3808731		True				
ANR	3808838	CFGExitNode	EXIT		3808731		True				
ANR	3808839	Symbol	* decomps		3808731						
ANR	3808840	Symbol	decomps_used		3808731						
ANR	3808841	Symbol	* i		3808731						
ANR	3808842	Symbol	kdecomps		3808731						
ANR	3808843	Symbol	decomps [ i ] . code		3808731						
ANR	3808844	Symbol	i		3808731						
ANR	3808845	Symbol	* kdecomps		3808731						
ANR	3808846	Symbol	kdecomps_used		3808731						
ANR	3808847	Symbol	decomps		3808731						
ANR	3808848	Symbol	kdecomps [ i ] . code		3808731						
ANR	3808849	Symbol	dectmp_size		3808731						
ANR	3808850	Function	cmpcomps	1197:0:30366:30602							
ANR	3808851	FunctionDef	"cmpcomps (const void * v_comp1 , const void * v_comp2)"		3808850	0					
ANR	3808852	CompoundStatement		1199:0:30428:30602	3808850	0					
ANR	3808853	IdentifierDeclStatement	"const _comp_t * comp1 = v_comp1 , * comp2 = v_comp2 ;"	1200:1:30431:30479	3808850	0	True				
ANR	3808854	IdentifierDecl	* comp1 = v_comp1		3808850	0					
ANR	3808855	IdentifierDeclType	const _comp_t *		3808850	0					
ANR	3808856	Identifier	comp1		3808850	1					
ANR	3808857	AssignmentExpression	* comp1 = v_comp1		3808850	2		=			
ANR	3808858	Identifier	v_comp1		3808850	0					
ANR	3808859	Identifier	v_comp1		3808850	1					
ANR	3808860	IdentifierDecl	* comp2 = v_comp2		3808850	1					
ANR	3808861	IdentifierDeclType	const _comp_t *		3808850	0					
ANR	3808862	Identifier	comp2		3808850	1					
ANR	3808863	AssignmentExpression	* comp2 = v_comp2		3808850	2		=			
ANR	3808864	Identifier	v_comp2		3808850	0					
ANR	3808865	Identifier	v_comp2		3808850	1					
ANR	3808866	IdentifierDeclStatement	long diff = comp1 -> code1 - comp2 -> code1 ;	1201:4:30485:30524	3808850	1	True				
ANR	3808867	IdentifierDecl	diff = comp1 -> code1 - comp2 -> code1		3808850	0					
ANR	3808868	IdentifierDeclType	long		3808850	0					
ANR	3808869	Identifier	diff		3808850	1					
ANR	3808870	AssignmentExpression	diff = comp1 -> code1 - comp2 -> code1		3808850	2		=			
ANR	3808871	Identifier	diff		3808850	0					
ANR	3808872	AdditiveExpression	comp1 -> code1 - comp2 -> code1		3808850	1		-			
ANR	3808873	PtrMemberAccess	comp1 -> code1		3808850	0					
ANR	3808874	Identifier	comp1		3808850	0					
ANR	3808875	Identifier	code1		3808850	1					
ANR	3808876	PtrMemberAccess	comp2 -> code1		3808850	1					
ANR	3808877	Identifier	comp2		3808850	0					
ANR	3808878	Identifier	code1		3808850	1					
ANR	3808879	IfStatement	if ( ! diff )		3808850	2					
ANR	3808880	Condition	! diff	1203:8:30535:30539	3808850	0	True				
ANR	3808881	UnaryOperationExpression	! diff		3808850	0					
ANR	3808882	UnaryOperator	!		3808850	0					
ANR	3808883	Identifier	diff		3808850	1					
ANR	3808884	ExpressionStatement	diff = comp1 -> code2 - comp2 -> code2	1204:1:30543:30577	3808850	1	True				
ANR	3808885	AssignmentExpression	diff = comp1 -> code2 - comp2 -> code2		3808850	0		=			
ANR	3808886	Identifier	diff		3808850	0					
ANR	3808887	AdditiveExpression	comp1 -> code2 - comp2 -> code2		3808850	1		-			
ANR	3808888	PtrMemberAccess	comp1 -> code2		3808850	0					
ANR	3808889	Identifier	comp1		3808850	0					
ANR	3808890	Identifier	code2		3808850	1					
ANR	3808891	PtrMemberAccess	comp2 -> code2		3808850	1					
ANR	3808892	Identifier	comp2		3808850	0					
ANR	3808893	Identifier	code2		3808850	1					
ANR	3808894	ReturnStatement	return ( int ) diff ;	1205:4:30583:30600	3808850	3	True				
ANR	3808895	CastExpression	( int ) diff		3808850	0					
ANR	3808896	CastTarget	int		3808850	0					
ANR	3808897	Identifier	diff		3808850	1					
ANR	3808898	ReturnType	static int		3808850	1					
ANR	3808899	Identifier	cmpcomps		3808850	2					
ANR	3808900	ParameterList	"const void * v_comp1 , const void * v_comp2"		3808850	3					
ANR	3808901	Parameter	const void * v_comp1	1198:9:30386:30404	3808850	0	True				
ANR	3808902	ParameterType	const void *		3808850	0					
ANR	3808903	Identifier	v_comp1		3808850	1					
ANR	3808904	Parameter	const void * v_comp2	1198:30:30407:30425	3808850	1	True				
ANR	3808905	ParameterType	const void *		3808850	0					
ANR	3808906	Identifier	v_comp2		3808850	1					
ANR	3808907	CFGEntryNode	ENTRY		3808850		True				
ANR	3808908	CFGExitNode	EXIT		3808850		True				
ANR	3808909	Symbol	comp2		3808850						
ANR	3808910	Symbol	comp1		3808850						
ANR	3808911	Symbol	comp2 -> code2		3808850						
ANR	3808912	Symbol	comp2 -> code1		3808850						
ANR	3808913	Symbol	v_comp2		3808850						
ANR	3808914	Symbol	comp1 -> code2		3808850						
ANR	3808915	Symbol	diff		3808850						
ANR	3808916	Symbol	* comp2		3808850						
ANR	3808917	Symbol	v_comp1		3808850						
ANR	3808918	Symbol	* comp1		3808850						
ANR	3808919	Symbol	comp1 -> code1		3808850						
ANR	3808920	Function	read_compexdata	1213:0:30655:31485							
ANR	3808921	FunctionDef	read_compexdata (FILE * in)		3808920	0					
ANR	3808922	CompoundStatement		1215:0:30693:31485	3808920	0					
ANR	3808923	IdentifierDeclStatement	ac_uint2 i ;	1216:4:30699:30709	3808920	0	True				
ANR	3808924	IdentifierDecl	i		3808920	0					
ANR	3808925	IdentifierDeclType	ac_uint2		3808920	0					
ANR	3808926	Identifier	i		3808920	1					
ANR	3808927	IdentifierDeclStatement	ac_uint4 code ;	1217:4:30715:30728	3808920	1	True				
ANR	3808928	IdentifierDecl	code		3808920	0					
ANR	3808929	IdentifierDeclType	ac_uint4		3808920	0					
ANR	3808930	Identifier	code		3808920	1					
ANR	3808931	IdentifierDeclStatement	"char line [ 512 ] , * s ;"	1218:4:30734:30752	3808920	2	True				
ANR	3808932	IdentifierDecl	line [ 512 ]		3808920	0					
ANR	3808933	IdentifierDeclType	char [ 512 ]		3808920	0					
ANR	3808934	Identifier	line		3808920	1					
ANR	3808935	PrimaryExpression	512		3808920	2					
ANR	3808936	IdentifierDecl	* s		3808920	1					
ANR	3808937	IdentifierDeclType	char *		3808920	0					
ANR	3808938	Identifier	s		3808920	1					
ANR	3808939	ExpressionStatement	"( void ) memset ( ( char * ) compexs , 0 , sizeof ( compexs ) )"	1220:4:30759:30810	3808920	3	True				
ANR	3808940	CastExpression	"( void ) memset ( ( char * ) compexs , 0 , sizeof ( compexs ) )"		3808920	0					
ANR	3808941	CastTarget	void		3808920	0					
ANR	3808942	CallExpression	"memset ( ( char * ) compexs , 0 , sizeof ( compexs ) )"		3808920	1					
ANR	3808943	Callee	memset		3808920	0					
ANR	3808944	Identifier	memset		3808920	0					
ANR	3808945	ArgumentList	( char * ) compexs		3808920	1					
ANR	3808946	Argument	( char * ) compexs		3808920	0					
ANR	3808947	CastExpression	( char * ) compexs		3808920	0					
ANR	3808948	CastTarget	char *		3808920	0					
ANR	3808949	Identifier	compexs		3808920	1					
ANR	3808950	Argument	0		3808920	1					
ANR	3808951	PrimaryExpression	0		3808920	0					
ANR	3808952	Argument	sizeof ( compexs )		3808920	2					
ANR	3808953	SizeofExpression	sizeof ( compexs )		3808920	0					
ANR	3808954	Sizeof	sizeof		3808920	0					
ANR	3808955	SizeofOperand	compexs		3808920	1					
ANR	3808956	WhileStatement	"while ( fgets ( line , sizeof ( line ) , in ) )"		3808920	4					
ANR	3808957	Condition	"fgets ( line , sizeof ( line ) , in )"	1222:11:30824:30852	3808920	0	True				
ANR	3808958	CallExpression	"fgets ( line , sizeof ( line ) , in )"		3808920	0					
ANR	3808959	Callee	fgets		3808920	0					
ANR	3808960	Identifier	fgets		3808920	0					
ANR	3808961	ArgumentList	line		3808920	1					
ANR	3808962	Argument	line		3808920	0					
ANR	3808963	Identifier	line		3808920	0					
ANR	3808964	Argument	sizeof ( line )		3808920	1					
ANR	3808965	SizeofExpression	sizeof ( line )		3808920	0					
ANR	3808966	Sizeof	sizeof		3808920	0					
ANR	3808967	SizeofOperand	line		3808920	1					
ANR	3808968	Argument	in		3808920	2					
ANR	3808969	Identifier	in		3808920	0					
ANR	3808970	CompoundStatement		8:42:161:161	3808920	1					
ANR	3808971	IfStatement	"if ( ( s = strchr ( line , '\\n' ) ) )"		3808920	0					
ANR	3808972	Condition	"s = strchr ( line , '\\n' )"	1223:5:30862:30883	3808920	0	True				
ANR	3808973	AssignmentExpression	"s = strchr ( line , '\\n' )"		3808920	0		=			
ANR	3808974	Identifier	s		3808920	0					
ANR	3808975	CallExpression	"strchr ( line , '\\n' )"		3808920	1					
ANR	3808976	Callee	strchr		3808920	0					
ANR	3808977	Identifier	strchr		3808920	0					
ANR	3808978	ArgumentList	line		3808920	1					
ANR	3808979	Argument	line		3808920	0					
ANR	3808980	Identifier	line		3808920	0					
ANR	3808981	Argument	'\\n'		3808920	1					
ANR	3808982	PrimaryExpression	'\\n'		3808920	0					
ANR	3808983	ExpressionStatement	* s = '\\0'	1223:30:30887:30896	3808920	1	True				
ANR	3808984	AssignmentExpression	* s = '\\0'		3808920	0		=			
ANR	3808985	UnaryOperationExpression	* s		3808920	0					
ANR	3808986	UnaryOperator	*		3808920	0					
ANR	3808987	Identifier	s		3808920	1					
ANR	3808988	PrimaryExpression	'\\0'		3808920	1					
ANR	3808989	IfStatement	if ( line [ 0 ] == 0 || line [ 0 ] == '#' )		3808920	1					
ANR	3808990	Condition	line [ 0 ] == 0 || line [ 0 ] == '#'	1227:12:30994:31023	3808920	0	True				
ANR	3808991	OrExpression	line [ 0 ] == 0 || line [ 0 ] == '#'		3808920	0		||			
ANR	3808992	EqualityExpression	line [ 0 ] == 0		3808920	0		==			
ANR	3808993	ArrayIndexing	line [ 0 ]		3808920	0					
ANR	3808994	Identifier	line		3808920	0					
ANR	3808995	PrimaryExpression	0		3808920	1					
ANR	3808996	PrimaryExpression	0		3808920	1					
ANR	3808997	EqualityExpression	line [ 0 ] == '#'		3808920	1		==			
ANR	3808998	ArrayIndexing	line [ 0 ]		3808920	0					
ANR	3808999	Identifier	line		3808920	0					
ANR	3809000	PrimaryExpression	0		3808920	1					
ANR	3809001	PrimaryExpression	'#'		3808920	1					
ANR	3809002	ContinueStatement	continue ;	1228:5:31031:31039	3808920	1	True				
ANR	3809003	ForStatement	"for ( s = line , i = code = 0 ; * s != '#' && i < 6 ; i ++ , s ++ )"		3808920	2					
ANR	3809004	ForInit	"s = line , i = code = 0 ;"	1234:6:31115:31137	3808920	0	True				
ANR	3809005	Expression	"s = line , i = code = 0"		3808920	0					
ANR	3809006	AssignmentExpression	s = line		3808920	0		=			
ANR	3809007	Identifier	s		3808920	0					
ANR	3809008	Identifier	line		3808920	1					
ANR	3809009	AssignmentExpression	i = code = 0		3808920	1		=			
ANR	3809010	Identifier	i		3808920	0					
ANR	3809011	AssignmentExpression	code = 0		3808920	1		=			
ANR	3809012	Identifier	code		3808920	0					
ANR	3809013	PrimaryExpression	0		3808920	1					
ANR	3809014	Condition	* s != '#' && i < 6	1234:30:31139:31156	3808920	1	True				
ANR	3809015	AndExpression	* s != '#' && i < 6		3808920	0		&&			
ANR	3809016	EqualityExpression	* s != '#'		3808920	0		!=			
ANR	3809017	UnaryOperationExpression	* s		3808920	0					
ANR	3809018	UnaryOperator	*		3808920	0					
ANR	3809019	Identifier	s		3808920	1					
ANR	3809020	PrimaryExpression	'#'		3808920	1					
ANR	3809021	RelationalExpression	i < 6		3808920	1		<			
ANR	3809022	Identifier	i		3808920	0					
ANR	3809023	PrimaryExpression	6		3808920	1					
ANR	3809024	Expression	"i ++ , s ++"	1234:50:31159:31166	3808920	2	True				
ANR	3809025	PostIncDecOperationExpression	i ++		3808920	0					
ANR	3809026	Identifier	i		3808920	0					
ANR	3809027	IncDec	++		3808920	1					
ANR	3809028	PostIncDecOperationExpression	s ++		3808920	1					
ANR	3809029	Identifier	s		3808920	0					
ANR	3809030	IncDec	++		3808920	1					
ANR	3809031	CompoundStatement		20:60:475:475	3808920	3					
ANR	3809032	IfStatement	if ( isspace ( ( unsigned char ) * s ) )		3808920	0					
ANR	3809033	Condition	isspace ( ( unsigned char ) * s )	1235:9:31180:31205	3808920	0	True				
ANR	3809034	CallExpression	isspace ( ( unsigned char ) * s )		3808920	0					
ANR	3809035	Callee	isspace		3808920	0					
ANR	3809036	Identifier	isspace		3808920	0					
ANR	3809037	ArgumentList	( unsigned char ) * s		3808920	1					
ANR	3809038	Argument	( unsigned char ) * s		3808920	0					
ANR	3809039	CastExpression	( unsigned char ) * s		3808920	0					
ANR	3809040	CastTarget	unsigned char		3808920	0					
ANR	3809041	UnaryOperationExpression	* s		3808920	1					
ANR	3809042	UnaryOperator	*		3808920	0					
ANR	3809043	Identifier	s		3808920	1					
ANR	3809044	BreakStatement	break ;	1235:37:31208:31213	3808920	1	True				
ANR	3809045	ExpressionStatement	code <<= 4	1236:12:31227:31237	3808920	1	True				
ANR	3809046	AssignmentExpression	code <<= 4		3808920	0		<<=			
ANR	3809047	Identifier	code		3808920	0					
ANR	3809048	PrimaryExpression	4		3808920	1					
ANR	3809049	IfStatement	if ( * s >= '0' && * s <= '9' )		3808920	2					
ANR	3809050	Condition	* s >= '0' && * s <= '9'	1237:16:31255:31276	3808920	0	True				
ANR	3809051	AndExpression	* s >= '0' && * s <= '9'		3808920	0		&&			
ANR	3809052	RelationalExpression	* s >= '0'		3808920	0		>=			
ANR	3809053	UnaryOperationExpression	* s		3808920	0					
ANR	3809054	UnaryOperator	*		3808920	0					
ANR	3809055	Identifier	s		3808920	1					
ANR	3809056	PrimaryExpression	'0'		3808920	1					
ANR	3809057	RelationalExpression	* s <= '9'		3808920	1		<=			
ANR	3809058	UnaryOperationExpression	* s		3808920	0					
ANR	3809059	UnaryOperator	*		3808920	0					
ANR	3809060	Identifier	s		3808920	1					
ANR	3809061	PrimaryExpression	'9'		3808920	1					
ANR	3809062	ExpressionStatement	code += * s - '0'	1238:2:31281:31297	3808920	1	True				
ANR	3809063	AssignmentExpression	code += * s - '0'		3808920	0		+=			
ANR	3809064	Identifier	code		3808920	0					
ANR	3809065	AdditiveExpression	* s - '0'		3808920	1		-			
ANR	3809066	UnaryOperationExpression	* s		3808920	0					
ANR	3809067	UnaryOperator	*		3808920	0					
ANR	3809068	Identifier	s		3808920	1					
ANR	3809069	PrimaryExpression	'0'		3808920	1					
ANR	3809070	ElseStatement	else		3808920	0					
ANR	3809071	IfStatement	if ( * s >= 'A' && * s <= 'F' )		3808920	0					
ANR	3809072	Condition	* s >= 'A' && * s <= 'F'	1239:21:31320:31341	3808920	0	True				
ANR	3809073	AndExpression	* s >= 'A' && * s <= 'F'		3808920	0		&&			
ANR	3809074	RelationalExpression	* s >= 'A'		3808920	0		>=			
ANR	3809075	UnaryOperationExpression	* s		3808920	0					
ANR	3809076	UnaryOperator	*		3808920	0					
ANR	3809077	Identifier	s		3808920	1					
ANR	3809078	PrimaryExpression	'A'		3808920	1					
ANR	3809079	RelationalExpression	* s <= 'F'		3808920	1		<=			
ANR	3809080	UnaryOperationExpression	* s		3808920	0					
ANR	3809081	UnaryOperator	*		3808920	0					
ANR	3809082	Identifier	s		3808920	1					
ANR	3809083	PrimaryExpression	'F'		3808920	1					
ANR	3809084	ExpressionStatement	code += ( * s - 'A' ) + 10	1240:2:31346:31369	3808920	1	True				
ANR	3809085	AssignmentExpression	code += ( * s - 'A' ) + 10		3808920	0		+=			
ANR	3809086	Identifier	code		3808920	0					
ANR	3809087	AdditiveExpression	( * s - 'A' ) + 10		3808920	1		+			
ANR	3809088	AdditiveExpression	* s - 'A'		3808920	0		-			
ANR	3809089	UnaryOperationExpression	* s		3808920	0					
ANR	3809090	UnaryOperator	*		3808920	0					
ANR	3809091	Identifier	s		3808920	1					
ANR	3809092	PrimaryExpression	'A'		3808920	1					
ANR	3809093	PrimaryExpression	10		3808920	1					
ANR	3809094	ElseStatement	else		3808920	0					
ANR	3809095	IfStatement	if ( * s >= 'a' && * s <= 'f' )		3808920	0					
ANR	3809096	Condition	* s >= 'a' && * s <= 'f'	1241:21:31392:31413	3808920	0	True				
ANR	3809097	AndExpression	* s >= 'a' && * s <= 'f'		3808920	0		&&			
ANR	3809098	RelationalExpression	* s >= 'a'		3808920	0		>=			
ANR	3809099	UnaryOperationExpression	* s		3808920	0					
ANR	3809100	UnaryOperator	*		3808920	0					
ANR	3809101	Identifier	s		3808920	1					
ANR	3809102	PrimaryExpression	'a'		3808920	1					
ANR	3809103	RelationalExpression	* s <= 'f'		3808920	1		<=			
ANR	3809104	UnaryOperationExpression	* s		3808920	0					
ANR	3809105	UnaryOperator	*		3808920	0					
ANR	3809106	Identifier	s		3808920	1					
ANR	3809107	PrimaryExpression	'f'		3808920	1					
ANR	3809108	ExpressionStatement	code += ( * s - 'a' ) + 10	1242:2:31418:31441	3808920	1	True				
ANR	3809109	AssignmentExpression	code += ( * s - 'a' ) + 10		3808920	0		+=			
ANR	3809110	Identifier	code		3808920	0					
ANR	3809111	AdditiveExpression	( * s - 'a' ) + 10		3808920	1		+			
ANR	3809112	AdditiveExpression	* s - 'a'		3808920	0		-			
ANR	3809113	UnaryOperationExpression	* s		3808920	0					
ANR	3809114	UnaryOperator	*		3808920	0					
ANR	3809115	Identifier	s		3808920	1					
ANR	3809116	PrimaryExpression	'a'		3808920	1					
ANR	3809117	PrimaryExpression	10		3808920	1					
ANR	3809118	ExpressionStatement	COMPEX_SET ( code )	1244:8:31461:31477	3808920	3	True				
ANR	3809119	CallExpression	COMPEX_SET ( code )		3808920	0					
ANR	3809120	Callee	COMPEX_SET		3808920	0					
ANR	3809121	Identifier	COMPEX_SET		3808920	0					
ANR	3809122	ArgumentList	code		3808920	1					
ANR	3809123	Argument	code		3808920	0					
ANR	3809124	Identifier	code		3808920	0					
ANR	3809125	ReturnType	static void		3808920	1					
ANR	3809126	Identifier	read_compexdata		3808920	2					
ANR	3809127	ParameterList	FILE * in		3808920	3					
ANR	3809128	Parameter	FILE * in	1214:16:30683:30690	3808920	0	True				
ANR	3809129	ParameterType	FILE *		3808920	0					
ANR	3809130	Identifier	in		3808920	1					
ANR	3809131	CFGEntryNode	ENTRY		3808920		True				
ANR	3809132	CFGExitNode	EXIT		3808920		True				
ANR	3809133	Symbol	code		3808920						
ANR	3809134	Symbol	s		3808920						
ANR	3809135	Symbol	in		3808920						
ANR	3809136	Symbol	line		3808920						
ANR	3809137	Symbol	compexs		3808920						
ANR	3809138	Symbol	isspace		3808920						
ANR	3809139	Symbol	i		3808920						
ANR	3809140	Symbol	strchr		3808920						
ANR	3809141	Symbol	* line		3808920						
ANR	3809142	Symbol	* s		3808920						
ANR	3809143	Symbol	fgets		3808920						
ANR	3809144	Function	create_comps	1253:0:31560:32027							
ANR	3809145	FunctionDef	create_comps ()		3809144	0					
ANR	3809146	CompoundStatement		1255:0:31591:32027	3809144	0					
ANR	3809147	IdentifierDeclStatement	"ac_uint4 i , cu ;"	1256:4:31597:31611	3809144	0	True				
ANR	3809148	IdentifierDecl	i		3809144	0					
ANR	3809149	IdentifierDeclType	ac_uint4		3809144	0					
ANR	3809150	Identifier	i		3809144	1					
ANR	3809151	IdentifierDecl	cu		3809144	1					
ANR	3809152	IdentifierDeclType	ac_uint4		3809144	0					
ANR	3809153	Identifier	cu		3809144	1					
ANR	3809154	ExpressionStatement	comps = ( _comp_t * ) malloc ( comps_used * sizeof ( _comp_t ) )	1258:4:31618:31674	3809144	1	True				
ANR	3809155	AssignmentExpression	comps = ( _comp_t * ) malloc ( comps_used * sizeof ( _comp_t ) )		3809144	0		=			
ANR	3809156	Identifier	comps		3809144	0					
ANR	3809157	CastExpression	( _comp_t * ) malloc ( comps_used * sizeof ( _comp_t ) )		3809144	1					
ANR	3809158	CastTarget	_comp_t *		3809144	0					
ANR	3809159	CallExpression	malloc ( comps_used * sizeof ( _comp_t ) )		3809144	1					
ANR	3809160	Callee	malloc		3809144	0					
ANR	3809161	Identifier	malloc		3809144	0					
ANR	3809162	ArgumentList	comps_used * sizeof ( _comp_t )		3809144	1					
ANR	3809163	Argument	comps_used * sizeof ( _comp_t )		3809144	0					
ANR	3809164	MultiplicativeExpression	comps_used * sizeof ( _comp_t )		3809144	0		*			
ANR	3809165	Identifier	comps_used		3809144	0					
ANR	3809166	SizeofExpression	sizeof ( _comp_t )		3809144	1					
ANR	3809167	Sizeof	sizeof		3809144	0					
ANR	3809168	SizeofOperand	_comp_t		3809144	1					
ANR	3809169	ForStatement	for ( i = cu = 0 ; i < decomps_used ; i ++ )		3809144	2					
ANR	3809170	ForInit	i = cu = 0 ;	1260:9:31686:31696	3809144	0	True				
ANR	3809171	AssignmentExpression	i = cu = 0		3809144	0		=			
ANR	3809172	Identifier	i		3809144	0					
ANR	3809173	AssignmentExpression	cu = 0		3809144	1		=			
ANR	3809174	Identifier	cu		3809144	0					
ANR	3809175	PrimaryExpression	0		3809144	1					
ANR	3809176	Condition	i < decomps_used	1260:21:31698:31713	3809144	1	True				
ANR	3809177	RelationalExpression	i < decomps_used		3809144	0		<			
ANR	3809178	Identifier	i		3809144	0					
ANR	3809179	Identifier	decomps_used		3809144	1					
ANR	3809180	PostIncDecOperationExpression	i ++	1260:39:31716:31718	3809144	2	True				
ANR	3809181	Identifier	i		3809144	0					
ANR	3809182	IncDec	++		3809144	1					
ANR	3809183	CompoundStatement		6:44:129:129	3809144	3					
ANR	3809184	IfStatement	if ( decomps [ i ] . used != 2 || COMPEX_TEST ( decomps [ i ] . code ) )		3809144	0					
ANR	3809185	Condition	decomps [ i ] . used != 2 || COMPEX_TEST ( decomps [ i ] . code )	1261:5:31728:31779	3809144	0	True				
ANR	3809186	OrExpression	decomps [ i ] . used != 2 || COMPEX_TEST ( decomps [ i ] . code )		3809144	0		||			
ANR	3809187	EqualityExpression	decomps [ i ] . used != 2		3809144	0		!=			
ANR	3809188	MemberAccess	decomps [ i ] . used		3809144	0					
ANR	3809189	ArrayIndexing	decomps [ i ]		3809144	0					
ANR	3809190	Identifier	decomps		3809144	0					
ANR	3809191	Identifier	i		3809144	1					
ANR	3809192	Identifier	used		3809144	1					
ANR	3809193	PrimaryExpression	2		3809144	1					
ANR	3809194	CallExpression	COMPEX_TEST ( decomps [ i ] . code )		3809144	1					
ANR	3809195	Callee	COMPEX_TEST		3809144	0					
ANR	3809196	Identifier	COMPEX_TEST		3809144	0					
ANR	3809197	ArgumentList	decomps [ i ] . code		3809144	1					
ANR	3809198	Argument	decomps [ i ] . code		3809144	0					
ANR	3809199	MemberAccess	decomps [ i ] . code		3809144	0					
ANR	3809200	ArrayIndexing	decomps [ i ]		3809144	0					
ANR	3809201	Identifier	decomps		3809144	0					
ANR	3809202	Identifier	i		3809144	1					
ANR	3809203	Identifier	code		3809144	1					
ANR	3809204	ContinueStatement	continue ;	1262:5:31787:31795	3809144	1	True				
ANR	3809205	ExpressionStatement	comps [ cu ] . comp = decomps [ i ] . code	1263:1:31798:31830	3809144	1	True				
ANR	3809206	AssignmentExpression	comps [ cu ] . comp = decomps [ i ] . code		3809144	0		=			
ANR	3809207	MemberAccess	comps [ cu ] . comp		3809144	0					
ANR	3809208	ArrayIndexing	comps [ cu ]		3809144	0					
ANR	3809209	Identifier	comps		3809144	0					
ANR	3809210	Identifier	cu		3809144	1					
ANR	3809211	Identifier	comp		3809144	1					
ANR	3809212	MemberAccess	decomps [ i ] . code		3809144	1					
ANR	3809213	ArrayIndexing	decomps [ i ]		3809144	0					
ANR	3809214	Identifier	decomps		3809144	0					
ANR	3809215	Identifier	i		3809144	1					
ANR	3809216	Identifier	code		3809144	1					
ANR	3809217	ExpressionStatement	comps [ cu ] . count = 2	1264:1:31833:31852	3809144	2	True				
ANR	3809218	AssignmentExpression	comps [ cu ] . count = 2		3809144	0		=			
ANR	3809219	MemberAccess	comps [ cu ] . count		3809144	0					
ANR	3809220	ArrayIndexing	comps [ cu ]		3809144	0					
ANR	3809221	Identifier	comps		3809144	0					
ANR	3809222	Identifier	cu		3809144	1					
ANR	3809223	Identifier	count		3809144	1					
ANR	3809224	PrimaryExpression	2		3809144	1					
ANR	3809225	ExpressionStatement	comps [ cu ] . code1 = decomps [ i ] . decomp [ 0 ]	1265:1:31855:31893	3809144	3	True				
ANR	3809226	AssignmentExpression	comps [ cu ] . code1 = decomps [ i ] . decomp [ 0 ]		3809144	0		=			
ANR	3809227	MemberAccess	comps [ cu ] . code1		3809144	0					
ANR	3809228	ArrayIndexing	comps [ cu ]		3809144	0					
ANR	3809229	Identifier	comps		3809144	0					
ANR	3809230	Identifier	cu		3809144	1					
ANR	3809231	Identifier	code1		3809144	1					
ANR	3809232	ArrayIndexing	decomps [ i ] . decomp [ 0 ]		3809144	1					
ANR	3809233	MemberAccess	decomps [ i ] . decomp		3809144	0					
ANR	3809234	ArrayIndexing	decomps [ i ]		3809144	0					
ANR	3809235	Identifier	decomps		3809144	0					
ANR	3809236	Identifier	i		3809144	1					
ANR	3809237	Identifier	decomp		3809144	1					
ANR	3809238	PrimaryExpression	0		3809144	1					
ANR	3809239	ExpressionStatement	comps [ cu ] . code2 = decomps [ i ] . decomp [ 1 ]	1266:1:31896:31934	3809144	4	True				
ANR	3809240	AssignmentExpression	comps [ cu ] . code2 = decomps [ i ] . decomp [ 1 ]		3809144	0		=			
ANR	3809241	MemberAccess	comps [ cu ] . code2		3809144	0					
ANR	3809242	ArrayIndexing	comps [ cu ]		3809144	0					
ANR	3809243	Identifier	comps		3809144	0					
ANR	3809244	Identifier	cu		3809144	1					
ANR	3809245	Identifier	code2		3809144	1					
ANR	3809246	ArrayIndexing	decomps [ i ] . decomp [ 1 ]		3809144	1					
ANR	3809247	MemberAccess	decomps [ i ] . decomp		3809144	0					
ANR	3809248	ArrayIndexing	decomps [ i ]		3809144	0					
ANR	3809249	Identifier	decomps		3809144	0					
ANR	3809250	Identifier	i		3809144	1					
ANR	3809251	Identifier	decomp		3809144	1					
ANR	3809252	PrimaryExpression	1		3809144	1					
ANR	3809253	ExpressionStatement	cu ++	1267:1:31937:31941	3809144	5	True				
ANR	3809254	PostIncDecOperationExpression	cu ++		3809144	0					
ANR	3809255	Identifier	cu		3809144	0					
ANR	3809256	IncDec	++		3809144	1					
ANR	3809257	ExpressionStatement	comps_used = cu	1269:4:31953:31968	3809144	3	True				
ANR	3809258	AssignmentExpression	comps_used = cu		3809144	0		=			
ANR	3809259	Identifier	comps_used		3809144	0					
ANR	3809260	Identifier	cu		3809144	1					
ANR	3809261	ExpressionStatement	"qsort ( comps , comps_used , sizeof ( _comp_t ) , cmpcomps )"	1270:4:31974:32025	3809144	4	True				
ANR	3809262	CallExpression	"qsort ( comps , comps_used , sizeof ( _comp_t ) , cmpcomps )"		3809144	0					
ANR	3809263	Callee	qsort		3809144	0					
ANR	3809264	Identifier	qsort		3809144	0					
ANR	3809265	ArgumentList	comps		3809144	1					
ANR	3809266	Argument	comps		3809144	0					
ANR	3809267	Identifier	comps		3809144	0					
ANR	3809268	Argument	comps_used		3809144	1					
ANR	3809269	Identifier	comps_used		3809144	0					
ANR	3809270	Argument	sizeof ( _comp_t )		3809144	2					
ANR	3809271	SizeofExpression	sizeof ( _comp_t )		3809144	0					
ANR	3809272	Sizeof	sizeof		3809144	0					
ANR	3809273	SizeofOperand	_comp_t		3809144	1					
ANR	3809274	Argument	cmpcomps		3809144	3					
ANR	3809275	Identifier	cmpcomps		3809144	0					
ANR	3809276	ReturnType	static void		3809144	1					
ANR	3809277	Identifier	create_comps		3809144	2					
ANR	3809278	ParameterList			3809144	3					
ANR	3809279	CFGEntryNode	ENTRY		3809144		True				
ANR	3809280	CFGExitNode	EXIT		3809144		True				
ANR	3809281	Symbol	malloc		3809144						
ANR	3809282	Symbol	comps [ cu ] . comp		3809144						
ANR	3809283	Symbol	* decomps		3809144						
ANR	3809284	Symbol	* * i		3809144						
ANR	3809285	Symbol	comps_used		3809144						
ANR	3809286	Symbol	comps		3809144						
ANR	3809287	Symbol	decomps_used		3809144						
ANR	3809288	Symbol	i		3809144						
ANR	3809289	Symbol	* comps		3809144						
ANR	3809290	Symbol	decomps [ i ] . decomp		3809144						
ANR	3809291	Symbol	decomps		3809144						
ANR	3809292	Symbol	cu		3809144						
ANR	3809293	Symbol	* i		3809144						
ANR	3809294	Symbol	comps [ cu ] . count		3809144						
ANR	3809295	Symbol	* * decomps		3809144						
ANR	3809296	Symbol	decomps [ i ] . code		3809144						
ANR	3809297	Symbol	comps [ cu ] . code2		3809144						
ANR	3809298	Symbol	* cu		3809144						
ANR	3809299	Symbol	comps [ cu ] . code1		3809144						
ANR	3809300	Symbol	COMPEX_TEST		3809144						
ANR	3809301	Symbol	* decomps [ i ] . decomp		3809144						
ANR	3809302	Symbol	decomps [ i ] . used		3809144						
ANR	3809303	Symbol	cmpcomps		3809144						
ANR	3809304	Function	write_case	1276:0:32056:32362							
ANR	3809305	FunctionDef	"write_case (FILE * out , _case_t * tab , int num , int first)"		3809304	0					
ANR	3809306	CompoundStatement		1278:0:32124:32362	3809304	0					
ANR	3809307	IdentifierDeclStatement	int i ;	1279:4:32130:32135	3809304	0	True				
ANR	3809308	IdentifierDecl	i		3809304	0					
ANR	3809309	IdentifierDeclType	int		3809304	0					
ANR	3809310	Identifier	i		3809304	1					
ANR	3809311	ForStatement	for ( i = 0 ; i < num ; i ++ )		3809304	1					
ANR	3809312	ForInit	i = 0 ;	1281:9:32147:32150	3809304	0	True				
ANR	3809313	AssignmentExpression	i = 0		3809304	0		=			
ANR	3809314	Identifier	i		3809304	0					
ANR	3809315	PrimaryExpression	0		3809304	1					
ANR	3809316	Condition	i < num	1281:14:32152:32156	3809304	1	True				
ANR	3809317	RelationalExpression	i < num		3809304	0		<			
ANR	3809318	Identifier	i		3809304	0					
ANR	3809319	Identifier	num		3809304	1					
ANR	3809320	PostIncDecOperationExpression	i ++	1281:21:32159:32161	3809304	2	True				
ANR	3809321	Identifier	i		3809304	0					
ANR	3809322	IncDec	++		3809304	1					
ANR	3809323	CompoundStatement		4:26:39:39	3809304	3					
ANR	3809324	IfStatement	if ( first )		3809304	0					
ANR	3809325	Condition	first	1282:5:32171:32175	3809304	0	True				
ANR	3809326	Identifier	first		3809304	0					
ANR	3809327	ExpressionStatement	first = 0	1282:12:32178:32187	3809304	1	True				
ANR	3809328	AssignmentExpression	first = 0		3809304	0		=			
ANR	3809329	Identifier	first		3809304	0					
ANR	3809330	PrimaryExpression	0		3809304	1					
ANR	3809331	ElseStatement	else		3809304	0					
ANR	3809332	ExpressionStatement	"fprintf ( out , "","" )"	1283:6:32195:32212	3809304	0	True				
ANR	3809333	CallExpression	"fprintf ( out , "","" )"		3809304	0					
ANR	3809334	Callee	fprintf		3809304	0					
ANR	3809335	Identifier	fprintf		3809304	0					
ANR	3809336	ArgumentList	out		3809304	1					
ANR	3809337	Argument	out		3809304	0					
ANR	3809338	Identifier	out		3809304	0					
ANR	3809339	Argument	""","""		3809304	1					
ANR	3809340	PrimaryExpression	""","""		3809304	0					
ANR	3809341	ExpressionStatement	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx, 0x%08lx"" , ( unsigned long ) tab [ i ] . key , ( unsigned long ) tab [ i ] . other1 , ( unsigned long ) tab [ i ] . other2 )"	1284:1:32215:32354	3809304	1	True				
ANR	3809342	CallExpression	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx, 0x%08lx"" , ( unsigned long ) tab [ i ] . key , ( unsigned long ) tab [ i ] . other1 , ( unsigned long ) tab [ i ] . other2 )"		3809304	0					
ANR	3809343	Callee	fprintf		3809304	0					
ANR	3809344	Identifier	fprintf		3809304	0					
ANR	3809345	ArgumentList	out		3809304	1					
ANR	3809346	Argument	out		3809304	0					
ANR	3809347	Identifier	out		3809304	0					
ANR	3809348	Argument	"""\\n\\t0x%08lx, 0x%08lx, 0x%08lx"""		3809304	1					
ANR	3809349	PrimaryExpression	"""\\n\\t0x%08lx, 0x%08lx, 0x%08lx"""		3809304	0					
ANR	3809350	Argument	( unsigned long ) tab [ i ] . key		3809304	2					
ANR	3809351	CastExpression	( unsigned long ) tab [ i ] . key		3809304	0					
ANR	3809352	CastTarget	unsigned long		3809304	0					
ANR	3809353	MemberAccess	tab [ i ] . key		3809304	1					
ANR	3809354	ArrayIndexing	tab [ i ]		3809304	0					
ANR	3809355	Identifier	tab		3809304	0					
ANR	3809356	Identifier	i		3809304	1					
ANR	3809357	Identifier	key		3809304	1					
ANR	3809358	Argument	( unsigned long ) tab [ i ] . other1		3809304	3					
ANR	3809359	CastExpression	( unsigned long ) tab [ i ] . other1		3809304	0					
ANR	3809360	CastTarget	unsigned long		3809304	0					
ANR	3809361	MemberAccess	tab [ i ] . other1		3809304	1					
ANR	3809362	ArrayIndexing	tab [ i ]		3809304	0					
ANR	3809363	Identifier	tab		3809304	0					
ANR	3809364	Identifier	i		3809304	1					
ANR	3809365	Identifier	other1		3809304	1					
ANR	3809366	Argument	( unsigned long ) tab [ i ] . other2		3809304	4					
ANR	3809367	CastExpression	( unsigned long ) tab [ i ] . other2		3809304	0					
ANR	3809368	CastTarget	unsigned long		3809304	0					
ANR	3809369	MemberAccess	tab [ i ] . other2		3809304	1					
ANR	3809370	ArrayIndexing	tab [ i ]		3809304	0					
ANR	3809371	Identifier	tab		3809304	0					
ANR	3809372	Identifier	i		3809304	1					
ANR	3809373	Identifier	other2		3809304	1					
ANR	3809374	ReturnType	static void		3809304	1					
ANR	3809375	Identifier	write_case		3809304	2					
ANR	3809376	ParameterList	"FILE * out , _case_t * tab , int num , int first"		3809304	3					
ANR	3809377	Parameter	FILE * out	1277:11:32079:32087	3809304	0	True				
ANR	3809378	ParameterType	FILE *		3809304	0					
ANR	3809379	Identifier	out		3809304	1					
ANR	3809380	Parameter	_case_t * tab	1277:22:32090:32101	3809304	1	True				
ANR	3809381	ParameterType	_case_t *		3809304	0					
ANR	3809382	Identifier	tab		3809304	1					
ANR	3809383	Parameter	int num	1277:36:32104:32110	3809304	2	True				
ANR	3809384	ParameterType	int		3809304	0					
ANR	3809385	Identifier	num		3809304	1					
ANR	3809386	Parameter	int first	1277:45:32113:32121	3809304	3	True				
ANR	3809387	ParameterType	int		3809304	0					
ANR	3809388	Identifier	first		3809304	1					
ANR	3809389	CFGEntryNode	ENTRY		3809304		True				
ANR	3809390	CFGExitNode	EXIT		3809304		True				
ANR	3809391	Symbol	tab [ i ] . other1		3809304						
ANR	3809392	Symbol	* i		3809304						
ANR	3809393	Symbol	tab [ i ] . other2		3809304						
ANR	3809394	Symbol	tab		3809304						
ANR	3809395	Symbol	num		3809304						
ANR	3809396	Symbol	i		3809304						
ANR	3809397	Symbol	tab [ i ] . key		3809304						
ANR	3809398	Symbol	first		3809304						
ANR	3809399	Symbol	out		3809304						
ANR	3809400	Symbol	* tab		3809304						
ANR	3809401	Function	write_cdata	1294:0:32403:48686							
ANR	3809402	FunctionDef	write_cdata (char * opath)		3809401	0					
ANR	3809403	CompoundStatement		1296:0:32440:48686	3809401	0					
ANR	3809404	IdentifierDeclStatement	FILE * out ;	1297:4:32446:32455	3809401	0	True				
ANR	3809405	IdentifierDecl	* out		3809401	0					
ANR	3809406	IdentifierDeclType	FILE *		3809401	0					
ANR	3809407	Identifier	out		3809401	1					
ANR	3809408	IdentifierDeclStatement	ac_uint4 bytes ;	1298:1:32458:32472	3809401	1	True				
ANR	3809409	IdentifierDecl	bytes		3809401	0					
ANR	3809410	IdentifierDeclType	ac_uint4		3809401	0					
ANR	3809411	Identifier	bytes		3809401	1					
ANR	3809412	IdentifierDeclStatement	"ac_uint4 i , idx , nprops ;"	1299:4:32478:32501	3809401	2	True				
ANR	3809413	IdentifierDecl	i		3809401	0					
ANR	3809414	IdentifierDeclType	ac_uint4		3809401	0					
ANR	3809415	Identifier	i		3809401	1					
ANR	3809416	IdentifierDecl	idx		3809401	1					
ANR	3809417	IdentifierDeclType	ac_uint4		3809401	0					
ANR	3809418	Identifier	idx		3809401	1					
ANR	3809419	IdentifierDecl	nprops		3809401	2					
ANR	3809420	IdentifierDeclType	ac_uint4		3809401	0					
ANR	3809421	Identifier	nprops		3809401	1					
ANR	3809422	IdentifierDeclStatement	ac_uint2 casecnt [ 2 ] ;	1301:4:32528:32547	3809401	3	True				
ANR	3809423	IdentifierDecl	casecnt [ 2 ]		3809401	0					
ANR	3809424	IdentifierDeclType	ac_uint2 [ 2 ]		3809401	0					
ANR	3809425	Identifier	casecnt		3809401	1					
ANR	3809426	PrimaryExpression	2		3809401	2					
ANR	3809427	IdentifierDeclStatement	char path [ BUFSIZ ] ;	1303:4:32560:32577	3809401	4	True				
ANR	3809428	IdentifierDecl	path [ BUFSIZ ]		3809401	0					
ANR	3809429	IdentifierDeclType	char [ BUFSIZ ]		3809401	0					
ANR	3809430	Identifier	path		3809401	1					
ANR	3809431	Identifier	BUFSIZ		3809401	2					
ANR	3809432	IdentifierDeclStatement	"int j , k ;"	1305:4:32601:32609	3809401	5	True				
ANR	3809433	IdentifierDecl	j		3809401	0					
ANR	3809434	IdentifierDeclType	int		3809401	0					
ANR	3809435	Identifier	j		3809401	1					
ANR	3809436	IdentifierDecl	k		3809401	1					
ANR	3809437	IdentifierDeclType	int		3809401	0					
ANR	3809438	Identifier	k		3809401	1					
ANR	3809439	Statement	snprintf	1316:4:32850:32857	3809401	6	True				
ANR	3809440	Statement	(	1316:12:32858:32858	3809401	7	True				
ANR	3809441	Statement	path	1316:13:32859:32862	3809401	8	True				
ANR	3809442	Statement	","	1316:17:32863:32863	3809401	9	True				
ANR	3809443	Statement	sizeof	1316:19:32865:32870	3809401	10	True				
ANR	3809444	Statement	path	1316:26:32872:32875	3809401	11	True				
ANR	3809445	Statement	","	1316:30:32876:32876	3809401	12	True				
ANR	3809446	Statement	"""%s"""	1316:32:32878:32881	3809401	13	True				
ANR	3809447	Statement	LDAP_DIRSEP	1316:37:32883:32893	3809401	14	True				
ANR	3809448	Statement	"""uctable.h"""	1316:49:32895:32905	3809401	15	True				
ANR	3809449	Statement	","	1316:60:32906:32906	3809401	16	True				
ANR	3809450	Statement	opath	1316:62:32908:32912	3809401	17	True				
ANR	3809451	Statement	)	1316:67:32913:32913	3809401	18	True				
ANR	3809452	ExpressionStatement		1316:68:32914:32914	3809401	19	True				
ANR	3809453	IfStatement	"if ( ( out = fopen ( path , ""w"" ) ) == 0 )"		3809401	20					
ANR	3809454	Condition	"( out = fopen ( path , ""w"" ) ) == 0"	1317:8:32924:32952	3809401	0	True				
ANR	3809455	EqualityExpression	"( out = fopen ( path , ""w"" ) ) == 0"		3809401	0		==			
ANR	3809456	AssignmentExpression	"out = fopen ( path , ""w"" )"		3809401	0		=			
ANR	3809457	Identifier	out		3809401	0					
ANR	3809458	CallExpression	"fopen ( path , ""w"" )"		3809401	1					
ANR	3809459	Callee	fopen		3809401	0					
ANR	3809460	Identifier	fopen		3809401	0					
ANR	3809461	ArgumentList	path		3809401	1					
ANR	3809462	Argument	path		3809401	0					
ANR	3809463	Identifier	path		3809401	0					
ANR	3809464	Argument	"""w"""		3809401	1					
ANR	3809465	PrimaryExpression	"""w"""		3809401	0					
ANR	3809466	PrimaryExpression	0		3809401	1					
ANR	3809467	ReturnStatement	return ;	1318:6:32961:32967	3809401	1	True				
ANR	3809468	ForStatement	for ( i = idx = 0 ; i < NUMPROPS ; i ++ )		3809401	21					
ANR	3809469	ForInit	i = idx = 0 ;	1333:9:33349:33360	3809401	0	True				
ANR	3809470	AssignmentExpression	i = idx = 0		3809401	0		=			
ANR	3809471	Identifier	i		3809401	0					
ANR	3809472	AssignmentExpression	idx = 0		3809401	1		=			
ANR	3809473	Identifier	idx		3809401	0					
ANR	3809474	PrimaryExpression	0		3809401	1					
ANR	3809475	Condition	i < NUMPROPS	1333:22:33362:33373	3809401	1	True				
ANR	3809476	RelationalExpression	i < NUMPROPS		3809401	0		<			
ANR	3809477	Identifier	i		3809401	0					
ANR	3809478	Identifier	NUMPROPS		3809401	1					
ANR	3809479	PostIncDecOperationExpression	i ++	1333:36:33376:33378	3809401	2	True				
ANR	3809480	Identifier	i		3809401	0					
ANR	3809481	IncDec	++		3809401	1					
ANR	3809482	CompoundStatement		38:41:940:940	3809401	3					
ANR	3809483	ExpressionStatement	propcnt [ i ] = ( proptbl [ i ] . used != 0 ) ? idx : 0xffff	1334:8:33391:33441	3809401	0	True				
ANR	3809484	AssignmentExpression	propcnt [ i ] = ( proptbl [ i ] . used != 0 ) ? idx : 0xffff		3809401	0		=			
ANR	3809485	ArrayIndexing	propcnt [ i ]		3809401	0					
ANR	3809486	Identifier	propcnt		3809401	0					
ANR	3809487	Identifier	i		3809401	1					
ANR	3809488	ConditionalExpression	( proptbl [ i ] . used != 0 ) ? idx : 0xffff		3809401	1					
ANR	3809489	Condition	proptbl [ i ] . used != 0		3809401	0					
ANR	3809490	EqualityExpression	proptbl [ i ] . used != 0		3809401	0		!=			
ANR	3809491	MemberAccess	proptbl [ i ] . used		3809401	0					
ANR	3809492	ArrayIndexing	proptbl [ i ]		3809401	0					
ANR	3809493	Identifier	proptbl		3809401	0					
ANR	3809494	Identifier	i		3809401	1					
ANR	3809495	Identifier	used		3809401	1					
ANR	3809496	PrimaryExpression	0		3809401	1					
ANR	3809497	Identifier	idx		3809401	1					
ANR	3809498	PrimaryExpression	0xffff		3809401	2					
ANR	3809499	ExpressionStatement	idx += proptbl [ i ] . used	1335:8:33451:33473	3809401	1	True				
ANR	3809500	AssignmentExpression	idx += proptbl [ i ] . used		3809401	0		+=			
ANR	3809501	Identifier	idx		3809401	0					
ANR	3809502	MemberAccess	proptbl [ i ] . used		3809401	1					
ANR	3809503	ArrayIndexing	proptbl [ i ]		3809401	0					
ANR	3809504	Identifier	proptbl		3809401	0					
ANR	3809505	Identifier	i		3809401	1					
ANR	3809506	Identifier	used		3809401	1					
ANR	3809507	ExpressionStatement	propcnt [ i ] = idx	1342:4:33606:33622	3809401	22	True				
ANR	3809508	AssignmentExpression	propcnt [ i ] = idx		3809401	0		=			
ANR	3809509	ArrayIndexing	propcnt [ i ]		3809401	0					
ANR	3809510	Identifier	propcnt		3809401	0					
ANR	3809511	Identifier	i		3809401	1					
ANR	3809512	Identifier	idx		3809401	1					
ANR	3809513	ExpressionStatement	hdr [ 1 ] = NUMPROPS	1349:4:33818:33835	3809401	23	True				
ANR	3809514	AssignmentExpression	hdr [ 1 ] = NUMPROPS		3809401	0		=			
ANR	3809515	ArrayIndexing	hdr [ 1 ]		3809401	0					
ANR	3809516	Identifier	hdr		3809401	0					
ANR	3809517	PrimaryExpression	1		3809401	1					
ANR	3809518	Identifier	NUMPROPS		3809401	1					
ANR	3809519	IfStatement	if ( ( bytes = sizeof ( ac_uint2 ) * ( NUMPROPS + 1 ) ) & 3 )		3809401	24					
ANR	3809520	Condition	( bytes = sizeof ( ac_uint2 ) * ( NUMPROPS + 1 ) ) & 3	1355:8:33963:34009	3809401	0	True				
ANR	3809521	BitAndExpression	( bytes = sizeof ( ac_uint2 ) * ( NUMPROPS + 1 ) ) & 3		3809401	0		&			
ANR	3809522	AssignmentExpression	bytes = sizeof ( ac_uint2 ) * ( NUMPROPS + 1 )		3809401	0		=			
ANR	3809523	Identifier	bytes		3809401	0					
ANR	3809524	MultiplicativeExpression	sizeof ( ac_uint2 ) * ( NUMPROPS + 1 )		3809401	1		*			
ANR	3809525	SizeofExpression	sizeof ( ac_uint2 )		3809401	0					
ANR	3809526	Sizeof	sizeof		3809401	0					
ANR	3809527	SizeofOperand	ac_uint2		3809401	1					
ANR	3809528	AdditiveExpression	NUMPROPS + 1		3809401	1		+			
ANR	3809529	Identifier	NUMPROPS		3809401	0					
ANR	3809530	PrimaryExpression	1		3809401	1					
ANR	3809531	PrimaryExpression	3		3809401	1					
ANR	3809532	ExpressionStatement	bytes += 4 - ( bytes & 3 )	1356:6:34018:34042	3809401	1	True				
ANR	3809533	AssignmentExpression	bytes += 4 - ( bytes & 3 )		3809401	0		+=			
ANR	3809534	Identifier	bytes		3809401	0					
ANR	3809535	AdditiveExpression	4 - ( bytes & 3 )		3809401	1		-			
ANR	3809536	PrimaryExpression	4		3809401	0					
ANR	3809537	BitAndExpression	bytes & 3		3809401	1		&			
ANR	3809538	Identifier	bytes		3809401	0					
ANR	3809539	PrimaryExpression	3		3809401	1					
ANR	3809540	ExpressionStatement	nprops = bytes / sizeof ( ac_uint2 )	1357:4:34048:34081	3809401	25	True				
ANR	3809541	AssignmentExpression	nprops = bytes / sizeof ( ac_uint2 )		3809401	0		=			
ANR	3809542	Identifier	nprops		3809401	0					
ANR	3809543	MultiplicativeExpression	bytes / sizeof ( ac_uint2 )		3809401	1		/			
ANR	3809544	Identifier	bytes		3809401	0					
ANR	3809545	SizeofExpression	sizeof ( ac_uint2 )		3809401	1					
ANR	3809546	Sizeof	sizeof		3809401	0					
ANR	3809547	SizeofOperand	ac_uint2		3809401	1					
ANR	3809548	ExpressionStatement	bytes += sizeof ( ac_uint4 ) * idx	1358:4:34087:34118	3809401	26	True				
ANR	3809549	AssignmentExpression	bytes += sizeof ( ac_uint4 ) * idx		3809401	0		+=			
ANR	3809550	Identifier	bytes		3809401	0					
ANR	3809551	MultiplicativeExpression	sizeof ( ac_uint4 ) * idx		3809401	1		*			
ANR	3809552	SizeofExpression	sizeof ( ac_uint4 )		3809401	0					
ANR	3809553	Sizeof	sizeof		3809401	0					
ANR	3809554	SizeofOperand	ac_uint4		3809401	1					
ANR	3809555	Identifier	idx		3809401	1					
ANR	3809556	Statement	fprintf	1361:4:34143:34149	3809401	27	True				
ANR	3809557	Statement	(	1361:11:34150:34150	3809401	28	True				
ANR	3809558	Statement	out	1361:12:34151:34153	3809401	29	True				
ANR	3809559	Statement	","	1361:15:34154:34154	3809401	30	True				
ANR	3809560	Statement	"""/* This file was generated from a modified version UCData's ucgendat.\\n"""	1362:8:34164:34236	3809401	31	True				
ANR	3809561	Statement	""" *\\n"""	1363:8:34246:34251	3809401	32	True				
ANR	3809562	Statement	""" *                     DO NOT EDIT THIS FILE!\\n"""	1364:8:34261:34309	3809401	33	True				
ANR	3809563	Statement	""" * \\n"""	1365:8:34319:34325	3809401	34	True				
ANR	3809564	Statement	""" * Instead, compile ucgendat.c (bundled with PHP in ext/mbstring), download\\n"""	1366:8:34335:34413	3809401	35	True				
ANR	3809565	Statement	""" * the appropriate UnicodeData-x.x.x.txt and CompositionExclusions-x.x.x.txt\\n"""	1367:8:34423:34502	3809401	36	True				
ANR	3809566	Statement	""" * files from  http://www.unicode.org/Public/ and run this program.\\n"""	1368:8:34512:34582	3809401	37	True				
ANR	3809567	Statement	""" *\\n"""	1369:8:34592:34597	3809401	38	True				
ANR	3809568	Statement	""" * More information can be found in the UCData package. Unfortunately,\\n"""	1370:8:34607:34680	3809401	39	True				
ANR	3809569	Statement	""" * the project's page doesn't seem to be live anymore, so you can use\\n"""	1371:8:34690:34762	3809401	40	True				
ANR	3809570	Statement	""" * OpenLDAPs modified copy (look in libraries/liblunicode/ucdata) */\\n\\n"""	1372:8:34772:34845	3809401	41	True				
ANR	3809571	Statement	)	1372:82:34846:34846	3809401	42	True				
ANR	3809572	ExpressionStatement		1372:83:34847:34847	3809401	43	True				
ANR	3809573	Statement	fprintf	1374:4:34854:34860	3809401	44	True				
ANR	3809574	Statement	(	1374:11:34861:34861	3809401	45	True				
ANR	3809575	Statement	out	1374:12:34862:34864	3809401	46	True				
ANR	3809576	Statement	","	1374:15:34865:34865	3809401	47	True				
ANR	3809577	Statement	PREF	1374:17:34867:34870	3809401	48	True				
ANR	3809578	Statement	"""unsigned short _ucprop_size = %d;\\n\\n"""	1374:22:34872:34910	3809401	49	True				
ANR	3809579	Statement	","	1374:61:34911:34911	3809401	50	True				
ANR	3809580	Statement	NUMPROPS	1374:63:34913:34920	3809401	51	True				
ANR	3809581	Statement	)	1374:71:34921:34921	3809401	52	True				
ANR	3809582	ExpressionStatement		1374:72:34922:34922	3809401	53	True				
ANR	3809583	Statement	fprintf	1376:4:34929:34935	3809401	54	True				
ANR	3809584	Statement	(	1376:11:34936:34936	3809401	55	True				
ANR	3809585	Statement	out	1376:12:34937:34939	3809401	56	True				
ANR	3809586	Statement	","	1376:15:34940:34940	3809401	57	True				
ANR	3809587	Statement	PREF	1376:17:34942:34945	3809401	58	True				
ANR	3809588	Statement	"""unsigned short  _ucprop_offsets[] = {"""	1376:22:34947:34985	3809401	59	True				
ANR	3809589	Statement	)	1376:61:34986:34986	3809401	60	True				
ANR	3809590	ExpressionStatement		1376:62:34987:34987	3809401	61	True				
ANR	3809591	ForStatement	for ( i = 0 ; i < nprops ; i ++ )		3809401	62					
ANR	3809592	ForInit	i = 0 ;	1378:9:34999:35004	3809401	0	True				
ANR	3809593	AssignmentExpression	i = 0		3809401	0		=			
ANR	3809594	Identifier	i		3809401	0					
ANR	3809595	PrimaryExpression	0		3809401	1					
ANR	3809596	Condition	i < nprops	1378:16:35006:35013	3809401	1	True				
ANR	3809597	RelationalExpression	i < nprops		3809401	0		<			
ANR	3809598	Identifier	i		3809401	0					
ANR	3809599	Identifier	nprops		3809401	1					
ANR	3809600	PostIncDecOperationExpression	i ++	1378:26:35016:35018	3809401	2	True				
ANR	3809601	Identifier	i		3809401	0					
ANR	3809602	IncDec	++		3809401	1					
ANR	3809603	CompoundStatement		83:31:2580:2580	3809401	3					
ANR	3809604	IfStatement	if ( i )		3809401	0					
ANR	3809605	Condition	i	1379:11:35034:35034	3809401	0	True				
ANR	3809606	Identifier	i		3809401	0					
ANR	3809607	ExpressionStatement	"fprintf ( out , "","" )"	1379:14:35037:35054	3809401	1	True				
ANR	3809608	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3809609	Callee	fprintf		3809401	0					
ANR	3809610	Identifier	fprintf		3809401	0					
ANR	3809611	ArgumentList	out		3809401	1					
ANR	3809612	Argument	out		3809401	0					
ANR	3809613	Identifier	out		3809401	0					
ANR	3809614	Argument	""","""		3809401	1					
ANR	3809615	PrimaryExpression	""","""		3809401	0					
ANR	3809616	IfStatement	if ( ! ( i & 7 ) )		3809401	1					
ANR	3809617	Condition	! ( i & 7 )	1380:11:35067:35072	3809401	0	True				
ANR	3809618	UnaryOperationExpression	! ( i & 7 )		3809401	0					
ANR	3809619	UnaryOperator	!		3809401	0					
ANR	3809620	BitAndExpression	i & 7		3809401	1		&			
ANR	3809621	Identifier	i		3809401	0					
ANR	3809622	PrimaryExpression	7		3809401	1					
ANR	3809623	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	1380:19:35075:35095	3809401	1	True				
ANR	3809624	CallExpression	"fprintf ( out , ""\\n\\t"" )"		3809401	0					
ANR	3809625	Callee	fprintf		3809401	0					
ANR	3809626	Identifier	fprintf		3809401	0					
ANR	3809627	ArgumentList	out		3809401	1					
ANR	3809628	Argument	out		3809401	0					
ANR	3809629	Identifier	out		3809401	0					
ANR	3809630	Argument	"""\\n\\t"""		3809401	1					
ANR	3809631	PrimaryExpression	"""\\n\\t"""		3809401	0					
ANR	3809632	ElseStatement	else		3809401	0					
ANR	3809633	ExpressionStatement	"fprintf ( out , "" "" )"	1381:12:35109:35126	3809401	0	True				
ANR	3809634	CallExpression	"fprintf ( out , "" "" )"		3809401	0					
ANR	3809635	Callee	fprintf		3809401	0					
ANR	3809636	Identifier	fprintf		3809401	0					
ANR	3809637	ArgumentList	out		3809401	1					
ANR	3809638	Argument	out		3809401	0					
ANR	3809639	Identifier	out		3809401	0					
ANR	3809640	Argument	""" """		3809401	1					
ANR	3809641	PrimaryExpression	""" """		3809401	0					
ANR	3809642	ExpressionStatement	"fprintf ( out , ""0x%04x"" , propcnt [ i ] )"	1382:7:35135:35169	3809401	2	True				
ANR	3809643	CallExpression	"fprintf ( out , ""0x%04x"" , propcnt [ i ] )"		3809401	0					
ANR	3809644	Callee	fprintf		3809401	0					
ANR	3809645	Identifier	fprintf		3809401	0					
ANR	3809646	ArgumentList	out		3809401	1					
ANR	3809647	Argument	out		3809401	0					
ANR	3809648	Identifier	out		3809401	0					
ANR	3809649	Argument	"""0x%04x"""		3809401	1					
ANR	3809650	PrimaryExpression	"""0x%04x"""		3809401	0					
ANR	3809651	Argument	propcnt [ i ]		3809401	2					
ANR	3809652	ArrayIndexing	propcnt [ i ]		3809401	0					
ANR	3809653	Identifier	propcnt		3809401	0					
ANR	3809654	Identifier	i		3809401	1					
ANR	3809655	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1384:4:35181:35205	3809401	63	True				
ANR	3809656	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3809657	Callee	fprintf		3809401	0					
ANR	3809658	Identifier	fprintf		3809401	0					
ANR	3809659	ArgumentList	out		3809401	1					
ANR	3809660	Argument	out		3809401	0					
ANR	3809661	Identifier	out		3809401	0					
ANR	3809662	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3809663	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3809664	Statement	fprintf	1386:4:35212:35218	3809401	64	True				
ANR	3809665	Statement	(	1386:11:35219:35219	3809401	65	True				
ANR	3809666	Statement	out	1386:12:35220:35222	3809401	66	True				
ANR	3809667	Statement	","	1386:15:35223:35223	3809401	67	True				
ANR	3809668	Statement	PREF	1386:17:35225:35228	3809401	68	True				
ANR	3809669	Statement	"""unsigned int _ucprop_ranges[] = {"""	1386:22:35230:35264	3809401	69	True				
ANR	3809670	Statement	)	1386:57:35265:35265	3809401	70	True				
ANR	3809671	ExpressionStatement		1386:58:35266:35266	3809401	71	True				
ANR	3809672	ExpressionStatement	k = 0	1388:4:35273:35278	3809401	72	True				
ANR	3809673	AssignmentExpression	k = 0		3809401	0		=			
ANR	3809674	Identifier	k		3809401	0					
ANR	3809675	PrimaryExpression	0		3809401	1					
ANR	3809676	ForStatement	for ( i = 0 ; i < NUMPROPS ; i ++ )		3809401	73					
ANR	3809677	ForInit	i = 0 ;	1389:9:35289:35294	3809401	0	True				
ANR	3809678	AssignmentExpression	i = 0		3809401	0		=			
ANR	3809679	Identifier	i		3809401	0					
ANR	3809680	PrimaryExpression	0		3809401	1					
ANR	3809681	Condition	i < NUMPROPS	1389:16:35296:35307	3809401	1	True				
ANR	3809682	RelationalExpression	i < NUMPROPS		3809401	0		<			
ANR	3809683	Identifier	i		3809401	0					
ANR	3809684	Identifier	NUMPROPS		3809401	1					
ANR	3809685	PostIncDecOperationExpression	i ++	1389:30:35310:35312	3809401	2	True				
ANR	3809686	Identifier	i		3809401	0					
ANR	3809687	IncDec	++		3809401	1					
ANR	3809688	CompoundStatement		94:35:2874:2874	3809401	3					
ANR	3809689	IfStatement	if ( proptbl [ i ] . used > 0 )		3809401	0					
ANR	3809690	Condition	proptbl [ i ] . used > 0	1390:5:35322:35340	3809401	0	True				
ANR	3809691	RelationalExpression	proptbl [ i ] . used > 0		3809401	0		>			
ANR	3809692	MemberAccess	proptbl [ i ] . used		3809401	0					
ANR	3809693	ArrayIndexing	proptbl [ i ]		3809401	0					
ANR	3809694	Identifier	proptbl		3809401	0					
ANR	3809695	Identifier	i		3809401	1					
ANR	3809696	Identifier	used		3809401	1					
ANR	3809697	PrimaryExpression	0		3809401	1					
ANR	3809698	CompoundStatement		95:26:2902:2902	3809401	1					
ANR	3809699	ForStatement	for ( j = 0 ; j < proptbl [ i ] . used ; j ++ )		3809401	0					
ANR	3809700	ForInit	j = 0 ;	1391:8:35353:35356	3809401	0	True				
ANR	3809701	AssignmentExpression	j = 0		3809401	0		=			
ANR	3809702	Identifier	j		3809401	0					
ANR	3809703	PrimaryExpression	0		3809401	1					
ANR	3809704	Condition	j < proptbl [ i ] . used	1391:13:35358:35374	3809401	1	True				
ANR	3809705	RelationalExpression	j < proptbl [ i ] . used		3809401	0		<			
ANR	3809706	Identifier	j		3809401	0					
ANR	3809707	MemberAccess	proptbl [ i ] . used		3809401	1					
ANR	3809708	ArrayIndexing	proptbl [ i ]		3809401	0					
ANR	3809709	Identifier	proptbl		3809401	0					
ANR	3809710	Identifier	i		3809401	1					
ANR	3809711	Identifier	used		3809401	1					
ANR	3809712	PostIncDecOperationExpression	j ++	1391:32:35377:35379	3809401	2	True				
ANR	3809713	Identifier	j		3809401	0					
ANR	3809714	IncDec	++		3809401	1					
ANR	3809715	CompoundStatement		96:37:2941:2941	3809401	3					
ANR	3809716	IfStatement	if ( k )		3809401	0					
ANR	3809717	Condition	k	1392:9:35393:35393	3809401	0	True				
ANR	3809718	Identifier	k		3809401	0					
ANR	3809719	ExpressionStatement	"fprintf ( out , "","" )"	1392:12:35396:35413	3809401	1	True				
ANR	3809720	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3809721	Callee	fprintf		3809401	0					
ANR	3809722	Identifier	fprintf		3809401	0					
ANR	3809723	ArgumentList	out		3809401	1					
ANR	3809724	Argument	out		3809401	0					
ANR	3809725	Identifier	out		3809401	0					
ANR	3809726	Argument	""","""		3809401	1					
ANR	3809727	PrimaryExpression	""","""		3809401	0					
ANR	3809728	IfStatement	if ( ! ( k & 3 ) )		3809401	1					
ANR	3809729	Condition	! ( k & 3 )	1393:9:35424:35429	3809401	0	True				
ANR	3809730	UnaryOperationExpression	! ( k & 3 )		3809401	0					
ANR	3809731	UnaryOperator	!		3809401	0					
ANR	3809732	BitAndExpression	k & 3		3809401	1		&			
ANR	3809733	Identifier	k		3809401	0					
ANR	3809734	PrimaryExpression	3		3809401	1					
ANR	3809735	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	1393:17:35432:35451	3809401	1	True				
ANR	3809736	CallExpression	"fprintf ( out , ""\\n\\t"" )"		3809401	0					
ANR	3809737	Callee	fprintf		3809401	0					
ANR	3809738	Identifier	fprintf		3809401	0					
ANR	3809739	ArgumentList	out		3809401	1					
ANR	3809740	Argument	out		3809401	0					
ANR	3809741	Identifier	out		3809401	0					
ANR	3809742	Argument	"""\\n\\t"""		3809401	1					
ANR	3809743	PrimaryExpression	"""\\n\\t"""		3809401	0					
ANR	3809744	ElseStatement	else		3809401	0					
ANR	3809745	ExpressionStatement	"fprintf ( out , "" "" )"	1394:10:35463:35480	3809401	0	True				
ANR	3809746	CallExpression	"fprintf ( out , "" "" )"		3809401	0					
ANR	3809747	Callee	fprintf		3809401	0					
ANR	3809748	Identifier	fprintf		3809401	0					
ANR	3809749	ArgumentList	out		3809401	1					
ANR	3809750	Argument	out		3809401	0					
ANR	3809751	Identifier	out		3809401	0					
ANR	3809752	Argument	""" """		3809401	1					
ANR	3809753	PrimaryExpression	""" """		3809401	0					
ANR	3809754	ExpressionStatement	k ++	1395:5:35487:35490	3809401	2	True				
ANR	3809755	PostIncDecOperationExpression	k ++		3809401	0					
ANR	3809756	Identifier	k		3809401	0					
ANR	3809757	IncDec	++		3809401	1					
ANR	3809758	ExpressionStatement	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) proptbl [ i ] . ranges [ j ] )"	1396:5:35497:35558	3809401	3	True				
ANR	3809759	CallExpression	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) proptbl [ i ] . ranges [ j ] )"		3809401	0					
ANR	3809760	Callee	fprintf		3809401	0					
ANR	3809761	Identifier	fprintf		3809401	0					
ANR	3809762	ArgumentList	out		3809401	1					
ANR	3809763	Argument	out		3809401	0					
ANR	3809764	Identifier	out		3809401	0					
ANR	3809765	Argument	"""0x%08lx"""		3809401	1					
ANR	3809766	PrimaryExpression	"""0x%08lx"""		3809401	0					
ANR	3809767	Argument	( unsigned long ) proptbl [ i ] . ranges [ j ]		3809401	2					
ANR	3809768	CastExpression	( unsigned long ) proptbl [ i ] . ranges [ j ]		3809401	0					
ANR	3809769	CastTarget	unsigned long		3809401	0					
ANR	3809770	ArrayIndexing	proptbl [ i ] . ranges [ j ]		3809401	1					
ANR	3809771	MemberAccess	proptbl [ i ] . ranges		3809401	0					
ANR	3809772	ArrayIndexing	proptbl [ i ]		3809401	0					
ANR	3809773	Identifier	proptbl		3809401	0					
ANR	3809774	Identifier	i		3809401	1					
ANR	3809775	Identifier	ranges		3809401	1					
ANR	3809776	Identifier	j		3809401	1					
ANR	3809777	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1400:4:35578:35602	3809401	74	True				
ANR	3809778	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3809779	Callee	fprintf		3809401	0					
ANR	3809780	Identifier	fprintf		3809401	0					
ANR	3809781	ArgumentList	out		3809401	1					
ANR	3809782	Argument	out		3809401	0					
ANR	3809783	Identifier	out		3809401	0					
ANR	3809784	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3809785	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3809786	Statement	fprintf	1436:4:36391:36397	3809401	75	True				
ANR	3809787	Statement	(	1436:11:36398:36398	3809401	76	True				
ANR	3809788	Statement	out	1436:12:36399:36401	3809401	77	True				
ANR	3809789	Statement	","	1436:15:36402:36402	3809401	78	True				
ANR	3809790	Statement	PREF	1436:17:36404:36407	3809401	79	True				
ANR	3809791	Statement	"""unsigned int _uccase_size = %ld;\\n\\n"""	1436:22:36409:36446	3809401	80	True				
ANR	3809792	Statement	","	1436:60:36447:36447	3809401	81	True				
ANR	3809793	Statement	(	1437:8:36457:36457	3809401	82	True				
ANR	3809794	Statement	long	1437:9:36458:36461	3809401	83	True				
ANR	3809795	Statement	)	1437:13:36462:36462	3809401	84	True				
ANR	3809796	Statement	(	1437:15:36464:36464	3809401	85	True				
ANR	3809797	Statement	upper_used	1437:16:36465:36474	3809401	86	True				
ANR	3809798	Statement	+	1437:27:36476:36476	3809401	87	True				
ANR	3809799	Statement	lower_used	1437:29:36478:36487	3809401	88	True				
ANR	3809800	Statement	+	1437:40:36489:36489	3809401	89	True				
ANR	3809801	Statement	title_used	1437:42:36491:36500	3809401	90	True				
ANR	3809802	Statement	)	1437:52:36501:36501	3809401	91	True				
ANR	3809803	Statement	)	1437:53:36502:36502	3809401	92	True				
ANR	3809804	ExpressionStatement		1437:54:36503:36503	3809401	93	True				
ANR	3809805	Statement	fprintf	1439:4:36510:36516	3809401	94	True				
ANR	3809806	Statement	(	1439:11:36517:36517	3809401	95	True				
ANR	3809807	Statement	out	1439:12:36518:36520	3809401	96	True				
ANR	3809808	Statement	","	1439:15:36521:36521	3809401	97	True				
ANR	3809809	Statement	"""/* Starting indexes of the case tables\\n"""	1440:8:36531:36572	3809401	98	True				
ANR	3809810	Statement	""" * UpperIndex = 0\\n"""	1441:8:36582:36602	3809401	99	True				
ANR	3809811	Statement	""" * LowerIndex = _uccase_len[0]\\n"""	1442:8:36612:36645	3809401	100	True				
ANR	3809812	Statement	""" * TitleIndex = LowerIndex + _uccase_len[1] */\\n\\n"""	1443:8:36655:36706	3809401	101	True				
ANR	3809813	Statement	)	1443:60:36707:36707	3809401	102	True				
ANR	3809814	ExpressionStatement		1443:61:36708:36708	3809401	103	True				
ANR	3809815	Statement	fprintf	1444:4:36714:36720	3809401	104	True				
ANR	3809816	Statement	(	1444:11:36721:36721	3809401	105	True				
ANR	3809817	Statement	out	1444:12:36722:36724	3809401	106	True				
ANR	3809818	Statement	","	1444:15:36725:36725	3809401	107	True				
ANR	3809819	Statement	PREF	1444:17:36727:36730	3809401	108	True				
ANR	3809820	Statement	"""unsigned short _uccase_len[2] = {%ld, %ld};\\n\\n"""	1444:22:36732:36780	3809401	109	True				
ANR	3809821	Statement	","	1444:71:36781:36781	3809401	110	True				
ANR	3809822	Statement	(	1445:8:36791:36791	3809401	111	True				
ANR	3809823	Statement	long	1445:9:36792:36795	3809401	112	True				
ANR	3809824	Statement	)	1445:13:36796:36796	3809401	113	True				
ANR	3809825	Statement	upper_used	1445:15:36798:36807	3809401	114	True				
ANR	3809826	Statement	*	1445:26:36809:36809	3809401	115	True				
ANR	3809827	Statement	3	1445:28:36811:36811	3809401	116	True				
ANR	3809828	Statement	","	1445:29:36812:36812	3809401	117	True				
ANR	3809829	Statement	(	1445:31:36814:36814	3809401	118	True				
ANR	3809830	Statement	long	1445:32:36815:36818	3809401	119	True				
ANR	3809831	Statement	)	1445:36:36819:36819	3809401	120	True				
ANR	3809832	Statement	lower_used	1445:38:36821:36830	3809401	121	True				
ANR	3809833	Statement	*	1445:49:36832:36832	3809401	122	True				
ANR	3809834	Statement	3	1445:51:36834:36834	3809401	123	True				
ANR	3809835	Statement	)	1445:52:36835:36835	3809401	124	True				
ANR	3809836	ExpressionStatement		1445:53:36836:36836	3809401	125	True				
ANR	3809837	Statement	fprintf	1446:4:36842:36848	3809401	126	True				
ANR	3809838	Statement	(	1446:11:36849:36849	3809401	127	True				
ANR	3809839	Statement	out	1446:12:36850:36852	3809401	128	True				
ANR	3809840	Statement	","	1446:15:36853:36853	3809401	129	True				
ANR	3809841	Statement	PREF	1446:17:36855:36858	3809401	130	True				
ANR	3809842	Statement	"""unsigned int _uccase_map[] = {"""	1446:22:36860:36891	3809401	131	True				
ANR	3809843	Statement	)	1446:54:36892:36892	3809401	132	True				
ANR	3809844	ExpressionStatement		1446:55:36893:36893	3809401	133	True				
ANR	3809845	IfStatement	if ( upper_used > 0 )		3809401	134					
ANR	3809846	Condition	upper_used > 0	1448:8:36904:36917	3809401	0	True				
ANR	3809847	RelationalExpression	upper_used > 0		3809401	0		>			
ANR	3809848	Identifier	upper_used		3809401	0					
ANR	3809849	PrimaryExpression	0		3809401	1					
ANR	3809850	ExpressionStatement	"write_case ( out , upper , upper_used , 1 )"	1452:6:36982:37019	3809401	1	True				
ANR	3809851	CallExpression	"write_case ( out , upper , upper_used , 1 )"		3809401	0					
ANR	3809852	Callee	write_case		3809401	0					
ANR	3809853	Identifier	write_case		3809401	0					
ANR	3809854	ArgumentList	out		3809401	1					
ANR	3809855	Argument	out		3809401	0					
ANR	3809856	Identifier	out		3809401	0					
ANR	3809857	Argument	upper		3809401	1					
ANR	3809858	Identifier	upper		3809401	0					
ANR	3809859	Argument	upper_used		3809401	2					
ANR	3809860	Identifier	upper_used		3809401	0					
ANR	3809861	Argument	1		3809401	3					
ANR	3809862	PrimaryExpression	1		3809401	0					
ANR	3809863	IfStatement	if ( lower_used > 0 )		3809401	135					
ANR	3809864	Condition	lower_used > 0	1454:8:37030:37043	3809401	0	True				
ANR	3809865	RelationalExpression	lower_used > 0		3809401	0		>			
ANR	3809866	Identifier	lower_used		3809401	0					
ANR	3809867	PrimaryExpression	0		3809401	1					
ANR	3809868	ExpressionStatement	"write_case ( out , lower , lower_used , ! upper_used )"	1458:6:37108:37155	3809401	1	True				
ANR	3809869	CallExpression	"write_case ( out , lower , lower_used , ! upper_used )"		3809401	0					
ANR	3809870	Callee	write_case		3809401	0					
ANR	3809871	Identifier	write_case		3809401	0					
ANR	3809872	ArgumentList	out		3809401	1					
ANR	3809873	Argument	out		3809401	0					
ANR	3809874	Identifier	out		3809401	0					
ANR	3809875	Argument	lower		3809401	1					
ANR	3809876	Identifier	lower		3809401	0					
ANR	3809877	Argument	lower_used		3809401	2					
ANR	3809878	Identifier	lower_used		3809401	0					
ANR	3809879	Argument	! upper_used		3809401	3					
ANR	3809880	UnaryOperationExpression	! upper_used		3809401	0					
ANR	3809881	UnaryOperator	!		3809401	0					
ANR	3809882	Identifier	upper_used		3809401	1					
ANR	3809883	IfStatement	if ( title_used > 0 )		3809401	136					
ANR	3809884	Condition	title_used > 0	1460:8:37166:37179	3809401	0	True				
ANR	3809885	RelationalExpression	title_used > 0		3809401	0		>			
ANR	3809886	Identifier	title_used		3809401	0					
ANR	3809887	PrimaryExpression	0		3809401	1					
ANR	3809888	ExpressionStatement	"write_case ( out , title , title_used , ! ( upper_used || lower_used ) )"	1464:6:37244:37305	3809401	1	True				
ANR	3809889	CallExpression	"write_case ( out , title , title_used , ! ( upper_used || lower_used ) )"		3809401	0					
ANR	3809890	Callee	write_case		3809401	0					
ANR	3809891	Identifier	write_case		3809401	0					
ANR	3809892	ArgumentList	out		3809401	1					
ANR	3809893	Argument	out		3809401	0					
ANR	3809894	Identifier	out		3809401	0					
ANR	3809895	Argument	title		3809401	1					
ANR	3809896	Identifier	title		3809401	0					
ANR	3809897	Argument	title_used		3809401	2					
ANR	3809898	Identifier	title_used		3809401	0					
ANR	3809899	Argument	! ( upper_used || lower_used )		3809401	3					
ANR	3809900	UnaryOperationExpression	! ( upper_used || lower_used )		3809401	0					
ANR	3809901	UnaryOperator	!		3809401	0					
ANR	3809902	OrExpression	upper_used || lower_used		3809401	1		||			
ANR	3809903	Identifier	upper_used		3809401	0					
ANR	3809904	Identifier	lower_used		3809401	1					
ANR	3809905	IfStatement	if ( ! ( upper_used || lower_used || title_used ) )		3809401	137					
ANR	3809906	Condition	! ( upper_used || lower_used || title_used )	1466:8:37316:37356	3809401	0	True				
ANR	3809907	UnaryOperationExpression	! ( upper_used || lower_used || title_used )		3809401	0					
ANR	3809908	UnaryOperator	!		3809401	0					
ANR	3809909	OrExpression	upper_used || lower_used || title_used		3809401	1		||			
ANR	3809910	Identifier	upper_used		3809401	0					
ANR	3809911	OrExpression	lower_used || title_used		3809401	1		||			
ANR	3809912	Identifier	lower_used		3809401	0					
ANR	3809913	Identifier	title_used		3809401	1					
ANR	3809914	ExpressionStatement	"fprintf ( out , ""\\t0"" )"	1467:1:37360:37379	3809401	1	True				
ANR	3809915	CallExpression	"fprintf ( out , ""\\t0"" )"		3809401	0					
ANR	3809916	Callee	fprintf		3809401	0					
ANR	3809917	Identifier	fprintf		3809401	0					
ANR	3809918	ArgumentList	out		3809401	1					
ANR	3809919	Argument	out		3809401	0					
ANR	3809920	Identifier	out		3809401	0					
ANR	3809921	Argument	"""\\t0"""		3809401	1					
ANR	3809922	PrimaryExpression	"""\\t0"""		3809401	0					
ANR	3809923	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1469:4:37386:37410	3809401	138	True				
ANR	3809924	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3809925	Callee	fprintf		3809401	0					
ANR	3809926	Identifier	fprintf		3809401	0					
ANR	3809927	ArgumentList	out		3809401	1					
ANR	3809928	Argument	out		3809401	0					
ANR	3809929	Identifier	out		3809401	0					
ANR	3809930	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3809931	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3809932	ExpressionStatement	create_comps ( )	1527:4:38700:38714	3809401	139	True				
ANR	3809933	CallExpression	create_comps ( )		3809401	0					
ANR	3809934	Callee	create_comps		3809401	0					
ANR	3809935	Identifier	create_comps		3809401	0					
ANR	3809936	ArgumentList			3809401	1					
ANR	3809937	Statement	fprintf	1530:4:38739:38745	3809401	140	True				
ANR	3809938	Statement	(	1530:11:38746:38746	3809401	141	True				
ANR	3809939	Statement	out	1530:12:38747:38749	3809401	142	True				
ANR	3809940	Statement	","	1530:15:38750:38750	3809401	143	True				
ANR	3809941	Statement	PREF	1530:17:38752:38755	3809401	144	True				
ANR	3809942	Statement	"""ac_uint4 _uccomp_size = %ld;\\n\\n"""	1530:22:38757:38790	3809401	145	True				
ANR	3809943	Statement	","	1530:56:38791:38791	3809401	146	True				
ANR	3809944	Statement	comps_used	1531:8:38801:38810	3809401	147	True				
ANR	3809945	Statement	*	1531:19:38812:38812	3809401	148	True				
ANR	3809946	Statement	4L	1531:21:38814:38815	3809401	149	True				
ANR	3809947	Statement	)	1531:23:38816:38816	3809401	150	True				
ANR	3809948	ExpressionStatement		1531:24:38817:38817	3809401	151	True				
ANR	3809949	Statement	fprintf	1533:4:38824:38830	3809401	152	True				
ANR	3809950	Statement	(	1533:11:38831:38831	3809401	153	True				
ANR	3809951	Statement	out	1533:12:38832:38834	3809401	154	True				
ANR	3809952	Statement	","	1533:15:38835:38835	3809401	155	True				
ANR	3809953	Statement	PREF	1533:17:38837:38840	3809401	156	True				
ANR	3809954	Statement	"""ac_uint4 _uccomp_data[] = {"""	1533:22:38842:38870	3809401	157	True				
ANR	3809955	Statement	)	1533:51:38871:38871	3809401	158	True				
ANR	3809956	ExpressionStatement		1533:52:38872:38872	3809401	159	True				
ANR	3809957	IfStatement	if ( comps_used > 0 )		3809401	160					
ANR	3809958	Condition	comps_used > 0	1538:8:38945:38958	3809401	0	True				
ANR	3809959	RelationalExpression	comps_used > 0		3809401	0		>			
ANR	3809960	Identifier	comps_used		3809401	0					
ANR	3809961	PrimaryExpression	0		3809401	1					
ANR	3809962	CompoundStatement		243:24:6520:6520	3809401	1					
ANR	3809963	ForStatement	for ( i = 0 ; i < comps_used ; i ++ )		3809401	0					
ANR	3809964	ForInit	i = 0 ;	1539:6:38969:38972	3809401	0	True				
ANR	3809965	AssignmentExpression	i = 0		3809401	0		=			
ANR	3809966	Identifier	i		3809401	0					
ANR	3809967	PrimaryExpression	0		3809401	1					
ANR	3809968	Condition	i < comps_used	1539:11:38974:38985	3809401	1	True				
ANR	3809969	RelationalExpression	i < comps_used		3809401	0		<			
ANR	3809970	Identifier	i		3809401	0					
ANR	3809971	Identifier	comps_used		3809401	1					
ANR	3809972	PostIncDecOperationExpression	i ++	1539:25:38988:38990	3809401	2	True				
ANR	3809973	Identifier	i		3809401	0					
ANR	3809974	IncDec	++		3809401	1					
ANR	3809975	CompoundStatement		244:30:6552:6552	3809401	3					
ANR	3809976	IfStatement	if ( i )		3809401	0					
ANR	3809977	Condition	i	1540:9:39004:39004	3809401	0	True				
ANR	3809978	Identifier	i		3809401	0					
ANR	3809979	ExpressionStatement	"fprintf ( out , "","" )"	1540:12:39007:39024	3809401	1	True				
ANR	3809980	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3809981	Callee	fprintf		3809401	0					
ANR	3809982	Identifier	fprintf		3809401	0					
ANR	3809983	ArgumentList	out		3809401	1					
ANR	3809984	Argument	out		3809401	0					
ANR	3809985	Identifier	out		3809401	0					
ANR	3809986	Argument	""","""		3809401	1					
ANR	3809987	PrimaryExpression	""","""		3809401	0					
ANR	3809988	ExpressionStatement	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx, 0x%08lx, 0x%08lx"" , ( unsigned long ) comps [ i ] . comp , ( unsigned long ) comps [ i ] . count , ( unsigned long ) comps [ i ] . code1 , ( unsigned long ) comps [ i ] . code2 )"	1541:5:39031:39230	3809401	1	True				
ANR	3809989	CallExpression	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx, 0x%08lx, 0x%08lx"" , ( unsigned long ) comps [ i ] . comp , ( unsigned long ) comps [ i ] . count , ( unsigned long ) comps [ i ] . code1 , ( unsigned long ) comps [ i ] . code2 )"		3809401	0					
ANR	3809990	Callee	fprintf		3809401	0					
ANR	3809991	Identifier	fprintf		3809401	0					
ANR	3809992	ArgumentList	out		3809401	1					
ANR	3809993	Argument	out		3809401	0					
ANR	3809994	Identifier	out		3809401	0					
ANR	3809995	Argument	"""\\n\\t0x%08lx, 0x%08lx, 0x%08lx, 0x%08lx"""		3809401	1					
ANR	3809996	PrimaryExpression	"""\\n\\t0x%08lx, 0x%08lx, 0x%08lx, 0x%08lx"""		3809401	0					
ANR	3809997	Argument	( unsigned long ) comps [ i ] . comp		3809401	2					
ANR	3809998	CastExpression	( unsigned long ) comps [ i ] . comp		3809401	0					
ANR	3809999	CastTarget	unsigned long		3809401	0					
ANR	3810000	MemberAccess	comps [ i ] . comp		3809401	1					
ANR	3810001	ArrayIndexing	comps [ i ]		3809401	0					
ANR	3810002	Identifier	comps		3809401	0					
ANR	3810003	Identifier	i		3809401	1					
ANR	3810004	Identifier	comp		3809401	1					
ANR	3810005	Argument	( unsigned long ) comps [ i ] . count		3809401	3					
ANR	3810006	CastExpression	( unsigned long ) comps [ i ] . count		3809401	0					
ANR	3810007	CastTarget	unsigned long		3809401	0					
ANR	3810008	MemberAccess	comps [ i ] . count		3809401	1					
ANR	3810009	ArrayIndexing	comps [ i ]		3809401	0					
ANR	3810010	Identifier	comps		3809401	0					
ANR	3810011	Identifier	i		3809401	1					
ANR	3810012	Identifier	count		3809401	1					
ANR	3810013	Argument	( unsigned long ) comps [ i ] . code1		3809401	4					
ANR	3810014	CastExpression	( unsigned long ) comps [ i ] . code1		3809401	0					
ANR	3810015	CastTarget	unsigned long		3809401	0					
ANR	3810016	MemberAccess	comps [ i ] . code1		3809401	1					
ANR	3810017	ArrayIndexing	comps [ i ]		3809401	0					
ANR	3810018	Identifier	comps		3809401	0					
ANR	3810019	Identifier	i		3809401	1					
ANR	3810020	Identifier	code1		3809401	1					
ANR	3810021	Argument	( unsigned long ) comps [ i ] . code2		3809401	5					
ANR	3810022	CastExpression	( unsigned long ) comps [ i ] . code2		3809401	0					
ANR	3810023	CastTarget	unsigned long		3809401	0					
ANR	3810024	MemberAccess	comps [ i ] . code2		3809401	1					
ANR	3810025	ArrayIndexing	comps [ i ]		3809401	0					
ANR	3810026	Identifier	comps		3809401	0					
ANR	3810027	Identifier	i		3809401	1					
ANR	3810028	Identifier	code2		3809401	1					
ANR	3810029	ElseStatement	else		3809401	0					
ANR	3810030	CompoundStatement		250:11:6805:6805	3809401	0					
ANR	3810031	ExpressionStatement	"fprintf ( out , ""\\t0"" )"	1546:1:39249:39268	3809401	0	True				
ANR	3810032	CallExpression	"fprintf ( out , ""\\t0"" )"		3809401	0					
ANR	3810033	Callee	fprintf		3809401	0					
ANR	3810034	Identifier	fprintf		3809401	0					
ANR	3810035	ArgumentList	out		3809401	1					
ANR	3810036	Argument	out		3809401	0					
ANR	3810037	Identifier	out		3809401	0					
ANR	3810038	Argument	"""\\t0"""		3809401	1					
ANR	3810039	PrimaryExpression	"""\\t0"""		3809401	0					
ANR	3810040	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1548:4:39280:39304	3809401	161	True				
ANR	3810041	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3810042	Callee	fprintf		3809401	0					
ANR	3810043	Identifier	fprintf		3809401	0					
ANR	3810044	ArgumentList	out		3809401	1					
ANR	3810045	Argument	out		3809401	0					
ANR	3810046	Identifier	out		3809401	0					
ANR	3810047	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3810048	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3810049	ExpressionStatement	expand_decomp ( )	1587:4:40246:40261	3809401	162	True				
ANR	3810050	CallExpression	expand_decomp ( )		3809401	0					
ANR	3810051	Callee	expand_decomp		3809401	0					
ANR	3810052	Identifier	expand_decomp		3809401	0					
ANR	3810053	ArgumentList			3809401	1					
ANR	3810054	Statement	fprintf	1590:4:40286:40292	3809401	163	True				
ANR	3810055	Statement	(	1590:11:40293:40293	3809401	164	True				
ANR	3810056	Statement	out	1590:12:40294:40296	3809401	165	True				
ANR	3810057	Statement	","	1590:15:40297:40297	3809401	166	True				
ANR	3810058	Statement	PREF	1590:17:40299:40302	3809401	167	True				
ANR	3810059	Statement	"""ac_uint4 _ucdcmp_size = %ld;\\n\\n"""	1590:22:40304:40337	3809401	168	True				
ANR	3810060	Statement	","	1590:56:40338:40338	3809401	169	True				
ANR	3810061	Statement	decomps_used	1591:8:40348:40359	3809401	170	True				
ANR	3810062	Statement	*	1591:21:40361:40361	3809401	171	True				
ANR	3810063	Statement	2L	1591:23:40363:40364	3809401	172	True				
ANR	3810064	Statement	)	1591:25:40365:40365	3809401	173	True				
ANR	3810065	ExpressionStatement		1591:26:40366:40366	3809401	174	True				
ANR	3810066	Statement	fprintf	1593:4:40373:40379	3809401	175	True				
ANR	3810067	Statement	(	1593:11:40380:40380	3809401	176	True				
ANR	3810068	Statement	out	1593:12:40381:40383	3809401	177	True				
ANR	3810069	Statement	","	1593:15:40384:40384	3809401	178	True				
ANR	3810070	Statement	PREF	1593:17:40386:40389	3809401	179	True				
ANR	3810071	Statement	"""ac_uint4 _ucdcmp_nodes[] = {"""	1593:22:40391:40420	3809401	180	True				
ANR	3810072	Statement	)	1593:52:40421:40421	3809401	181	True				
ANR	3810073	ExpressionStatement		1593:53:40422:40422	3809401	182	True				
ANR	3810074	IfStatement	if ( decomps_used )		3809401	183					
ANR	3810075	Condition	decomps_used	1595:8:40433:40444	3809401	0	True				
ANR	3810076	Identifier	decomps_used		3809401	0					
ANR	3810077	CompoundStatement		300:22:8006:8006	3809401	1					
ANR	3810078	ForStatement	for ( i = idx = 0 ; i < decomps_used ; i ++ )		3809401	0					
ANR	3810079	ForInit	i = idx = 0 ;	1599:6:40500:40511	3809401	0	True				
ANR	3810080	AssignmentExpression	i = idx = 0		3809401	0		=			
ANR	3810081	Identifier	i		3809401	0					
ANR	3810082	AssignmentExpression	idx = 0		3809401	1		=			
ANR	3810083	Identifier	idx		3809401	0					
ANR	3810084	PrimaryExpression	0		3809401	1					
ANR	3810085	Condition	i < decomps_used	1599:19:40513:40528	3809401	1	True				
ANR	3810086	RelationalExpression	i < decomps_used		3809401	0		<			
ANR	3810087	Identifier	i		3809401	0					
ANR	3810088	Identifier	decomps_used		3809401	1					
ANR	3810089	PostIncDecOperationExpression	i ++	1599:37:40531:40533	3809401	2	True				
ANR	3810090	Identifier	i		3809401	0					
ANR	3810091	IncDec	++		3809401	1					
ANR	3810092	CompoundStatement		304:42:8095:8095	3809401	3					
ANR	3810093	ExpressionStatement	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx,"" , ( unsigned long ) decomps [ i ] . code , ( unsigned long ) idx )"	1600:5:40543:40643	3809401	0	True				
ANR	3810094	CallExpression	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx,"" , ( unsigned long ) decomps [ i ] . code , ( unsigned long ) idx )"		3809401	0					
ANR	3810095	Callee	fprintf		3809401	0					
ANR	3810096	Identifier	fprintf		3809401	0					
ANR	3810097	ArgumentList	out		3809401	1					
ANR	3810098	Argument	out		3809401	0					
ANR	3810099	Identifier	out		3809401	0					
ANR	3810100	Argument	"""\\n\\t0x%08lx, 0x%08lx,"""		3809401	1					
ANR	3810101	PrimaryExpression	"""\\n\\t0x%08lx, 0x%08lx,"""		3809401	0					
ANR	3810102	Argument	( unsigned long ) decomps [ i ] . code		3809401	2					
ANR	3810103	CastExpression	( unsigned long ) decomps [ i ] . code		3809401	0					
ANR	3810104	CastTarget	unsigned long		3809401	0					
ANR	3810105	MemberAccess	decomps [ i ] . code		3809401	1					
ANR	3810106	ArrayIndexing	decomps [ i ]		3809401	0					
ANR	3810107	Identifier	decomps		3809401	0					
ANR	3810108	Identifier	i		3809401	1					
ANR	3810109	Identifier	code		3809401	1					
ANR	3810110	Argument	( unsigned long ) idx		3809401	3					
ANR	3810111	CastExpression	( unsigned long ) idx		3809401	0					
ANR	3810112	CastTarget	unsigned long		3809401	0					
ANR	3810113	Identifier	idx		3809401	1					
ANR	3810114	ExpressionStatement	idx += decomps [ i ] . used	1602:5:40650:40672	3809401	1	True				
ANR	3810115	AssignmentExpression	idx += decomps [ i ] . used		3809401	0		+=			
ANR	3810116	Identifier	idx		3809401	0					
ANR	3810117	MemberAccess	decomps [ i ] . used		3809401	1					
ANR	3810118	ArrayIndexing	decomps [ i ]		3809401	0					
ANR	3810119	Identifier	decomps		3809401	0					
ANR	3810120	Identifier	i		3809401	1					
ANR	3810121	Identifier	used		3809401	1					
ANR	3810122	ExpressionStatement	"fprintf ( out , ""\\n\\t0x%08lx\\n};\\n\\n"" , ( unsigned long ) idx )"	1608:1:40742:40798	3809401	1	True				
ANR	3810123	CallExpression	"fprintf ( out , ""\\n\\t0x%08lx\\n};\\n\\n"" , ( unsigned long ) idx )"		3809401	0					
ANR	3810124	Callee	fprintf		3809401	0					
ANR	3810125	Identifier	fprintf		3809401	0					
ANR	3810126	ArgumentList	out		3809401	1					
ANR	3810127	Argument	out		3809401	0					
ANR	3810128	Identifier	out		3809401	0					
ANR	3810129	Argument	"""\\n\\t0x%08lx\\n};\\n\\n"""		3809401	1					
ANR	3810130	PrimaryExpression	"""\\n\\t0x%08lx\\n};\\n\\n"""		3809401	0					
ANR	3810131	Argument	( unsigned long ) idx		3809401	2					
ANR	3810132	CastExpression	( unsigned long ) idx		3809401	0					
ANR	3810133	CastTarget	unsigned long		3809401	0					
ANR	3810134	Identifier	idx		3809401	1					
ANR	3810135	Statement	fprintf	1610:1:40802:40808	3809401	2	True				
ANR	3810136	Statement	(	1610:8:40809:40809	3809401	3	True				
ANR	3810137	Statement	out	1610:9:40810:40812	3809401	4	True				
ANR	3810138	Statement	","	1610:12:40813:40813	3809401	5	True				
ANR	3810139	Statement	PREF	1610:14:40815:40818	3809401	6	True				
ANR	3810140	Statement	"""ac_uint4 _ucdcmp_decomp[] = {"""	1610:19:40820:40850	3809401	7	True				
ANR	3810141	Statement	)	1610:50:40851:40851	3809401	8	True				
ANR	3810142	ExpressionStatement		1610:51:40852:40852	3809401	9	True				
ANR	3810143	ExpressionStatement	k = 0	1614:1:40905:40910	3809401	10	True				
ANR	3810144	AssignmentExpression	k = 0		3809401	0		=			
ANR	3810145	Identifier	k		3809401	0					
ANR	3810146	PrimaryExpression	0		3809401	1					
ANR	3810147	ForStatement	for ( i = 0 ; i < decomps_used ; i ++ )		3809401	11					
ANR	3810148	ForInit	i = 0 ;	1615:6:40918:40923	3809401	0	True				
ANR	3810149	AssignmentExpression	i = 0		3809401	0		=			
ANR	3810150	Identifier	i		3809401	0					
ANR	3810151	PrimaryExpression	0		3809401	1					
ANR	3810152	Condition	i < decomps_used	1615:13:40925:40940	3809401	1	True				
ANR	3810153	RelationalExpression	i < decomps_used		3809401	0		<			
ANR	3810154	Identifier	i		3809401	0					
ANR	3810155	Identifier	decomps_used		3809401	1					
ANR	3810156	PostIncDecOperationExpression	i ++	1615:31:40943:40945	3809401	2	True				
ANR	3810157	Identifier	i		3809401	0					
ANR	3810158	IncDec	++		3809401	1					
ANR	3810159	ForStatement	for ( j = 0 ; j < decomps [ i ] . used ; j ++ )		3809401	3					
ANR	3810160	ForInit	j = 0 ;	1616:8:40956:40959	3809401	0	True				
ANR	3810161	AssignmentExpression	j = 0		3809401	0		=			
ANR	3810162	Identifier	j		3809401	0					
ANR	3810163	PrimaryExpression	0		3809401	1					
ANR	3810164	Condition	j < decomps [ i ] . used	1616:13:40961:40977	3809401	1	True				
ANR	3810165	RelationalExpression	j < decomps [ i ] . used		3809401	0		<			
ANR	3810166	Identifier	j		3809401	0					
ANR	3810167	MemberAccess	decomps [ i ] . used		3809401	1					
ANR	3810168	ArrayIndexing	decomps [ i ]		3809401	0					
ANR	3810169	Identifier	decomps		3809401	0					
ANR	3810170	Identifier	i		3809401	1					
ANR	3810171	Identifier	used		3809401	1					
ANR	3810172	PostIncDecOperationExpression	j ++	1616:32:40980:40982	3809401	2	True				
ANR	3810173	Identifier	j		3809401	0					
ANR	3810174	IncDec	++		3809401	1					
ANR	3810175	CompoundStatement		321:37:8544:8544	3809401	3					
ANR	3810176	IfStatement	if ( k )		3809401	0					
ANR	3810177	Condition	k	1617:9:40996:40996	3809401	0	True				
ANR	3810178	Identifier	k		3809401	0					
ANR	3810179	ExpressionStatement	"fprintf ( out , "","" )"	1617:12:40999:41016	3809401	1	True				
ANR	3810180	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3810181	Callee	fprintf		3809401	0					
ANR	3810182	Identifier	fprintf		3809401	0					
ANR	3810183	ArgumentList	out		3809401	1					
ANR	3810184	Argument	out		3809401	0					
ANR	3810185	Identifier	out		3809401	0					
ANR	3810186	Argument	""","""		3809401	1					
ANR	3810187	PrimaryExpression	""","""		3809401	0					
ANR	3810188	IfStatement	if ( ! ( k & 3 ) )		3809401	1					
ANR	3810189	Condition	! ( k & 3 )	1618:9:41027:41032	3809401	0	True				
ANR	3810190	UnaryOperationExpression	! ( k & 3 )		3809401	0					
ANR	3810191	UnaryOperator	!		3809401	0					
ANR	3810192	BitAndExpression	k & 3		3809401	1		&			
ANR	3810193	Identifier	k		3809401	0					
ANR	3810194	PrimaryExpression	3		3809401	1					
ANR	3810195	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	1618:17:41035:41054	3809401	1	True				
ANR	3810196	CallExpression	"fprintf ( out , ""\\n\\t"" )"		3809401	0					
ANR	3810197	Callee	fprintf		3809401	0					
ANR	3810198	Identifier	fprintf		3809401	0					
ANR	3810199	ArgumentList	out		3809401	1					
ANR	3810200	Argument	out		3809401	0					
ANR	3810201	Identifier	out		3809401	0					
ANR	3810202	Argument	"""\\n\\t"""		3809401	1					
ANR	3810203	PrimaryExpression	"""\\n\\t"""		3809401	0					
ANR	3810204	ElseStatement	else		3809401	0					
ANR	3810205	ExpressionStatement	"fprintf ( out , "" "" )"	1619:10:41066:41083	3809401	0	True				
ANR	3810206	CallExpression	"fprintf ( out , "" "" )"		3809401	0					
ANR	3810207	Callee	fprintf		3809401	0					
ANR	3810208	Identifier	fprintf		3809401	0					
ANR	3810209	ArgumentList	out		3809401	1					
ANR	3810210	Argument	out		3809401	0					
ANR	3810211	Identifier	out		3809401	0					
ANR	3810212	Argument	""" """		3809401	1					
ANR	3810213	PrimaryExpression	""" """		3809401	0					
ANR	3810214	ExpressionStatement	k ++	1620:5:41090:41093	3809401	2	True				
ANR	3810215	PostIncDecOperationExpression	k ++		3809401	0					
ANR	3810216	Identifier	k		3809401	0					
ANR	3810217	IncDec	++		3809401	1					
ANR	3810218	ExpressionStatement	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) decomps [ i ] . decomp [ j ] )"	1621:5:41100:41161	3809401	3	True				
ANR	3810219	CallExpression	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) decomps [ i ] . decomp [ j ] )"		3809401	0					
ANR	3810220	Callee	fprintf		3809401	0					
ANR	3810221	Identifier	fprintf		3809401	0					
ANR	3810222	ArgumentList	out		3809401	1					
ANR	3810223	Argument	out		3809401	0					
ANR	3810224	Identifier	out		3809401	0					
ANR	3810225	Argument	"""0x%08lx"""		3809401	1					
ANR	3810226	PrimaryExpression	"""0x%08lx"""		3809401	0					
ANR	3810227	Argument	( unsigned long ) decomps [ i ] . decomp [ j ]		3809401	2					
ANR	3810228	CastExpression	( unsigned long ) decomps [ i ] . decomp [ j ]		3809401	0					
ANR	3810229	CastTarget	unsigned long		3809401	0					
ANR	3810230	ArrayIndexing	decomps [ i ] . decomp [ j ]		3809401	1					
ANR	3810231	MemberAccess	decomps [ i ] . decomp		3809401	0					
ANR	3810232	ArrayIndexing	decomps [ i ]		3809401	0					
ANR	3810233	Identifier	decomps		3809401	0					
ANR	3810234	Identifier	i		3809401	1					
ANR	3810235	Identifier	decomp		3809401	1					
ANR	3810236	Identifier	j		3809401	1					
ANR	3810237	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1623:1:41169:41193	3809401	12	True				
ANR	3810238	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3810239	Callee	fprintf		3809401	0					
ANR	3810240	Identifier	fprintf		3809401	0					
ANR	3810241	ArgumentList	out		3809401	1					
ANR	3810242	Argument	out		3809401	0					
ANR	3810243	Identifier	out		3809401	0					
ANR	3810244	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3810245	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3810246	Statement	fprintf	1682:4:42728:42734	3809401	184	True				
ANR	3810247	Statement	(	1682:11:42735:42735	3809401	185	True				
ANR	3810248	Statement	out	1682:12:42736:42738	3809401	186	True				
ANR	3810249	Statement	","	1682:15:42739:42739	3809401	187	True				
ANR	3810250	Statement	PREF	1682:17:42741:42744	3809401	188	True				
ANR	3810251	Statement	"""ac_uint4 _uckdcmp_size = %ld;\\n\\n"""	1682:22:42746:42780	3809401	189	True				
ANR	3810252	Statement	","	1682:57:42781:42781	3809401	190	True				
ANR	3810253	Statement	kdecomps_used	1683:8:42791:42803	3809401	191	True				
ANR	3810254	Statement	*	1683:22:42805:42805	3809401	192	True				
ANR	3810255	Statement	2L	1683:24:42807:42808	3809401	193	True				
ANR	3810256	Statement	)	1683:26:42809:42809	3809401	194	True				
ANR	3810257	ExpressionStatement		1683:27:42810:42810	3809401	195	True				
ANR	3810258	Statement	fprintf	1685:4:42817:42823	3809401	196	True				
ANR	3810259	Statement	(	1685:11:42824:42824	3809401	197	True				
ANR	3810260	Statement	out	1685:12:42825:42827	3809401	198	True				
ANR	3810261	Statement	","	1685:15:42828:42828	3809401	199	True				
ANR	3810262	Statement	PREF	1685:17:42830:42833	3809401	200	True				
ANR	3810263	Statement	"""ac_uint4 _uckdcmp_nodes[] = {"""	1685:22:42835:42865	3809401	201	True				
ANR	3810264	Statement	)	1685:53:42866:42866	3809401	202	True				
ANR	3810265	ExpressionStatement		1685:54:42867:42867	3809401	203	True				
ANR	3810266	IfStatement	if ( kdecomps_used )		3809401	204					
ANR	3810267	Condition	kdecomps_used	1687:8:42878:42890	3809401	0	True				
ANR	3810268	Identifier	kdecomps_used		3809401	0					
ANR	3810269	CompoundStatement		392:23:10452:10452	3809401	1					
ANR	3810270	ForStatement	for ( i = idx = 0 ; i < kdecomps_used ; i ++ )		3809401	0					
ANR	3810271	ForInit	i = idx = 0 ;	1691:6:42947:42958	3809401	0	True				
ANR	3810272	AssignmentExpression	i = idx = 0		3809401	0		=			
ANR	3810273	Identifier	i		3809401	0					
ANR	3810274	AssignmentExpression	idx = 0		3809401	1		=			
ANR	3810275	Identifier	idx		3809401	0					
ANR	3810276	PrimaryExpression	0		3809401	1					
ANR	3810277	Condition	i < kdecomps_used	1691:19:42960:42976	3809401	1	True				
ANR	3810278	RelationalExpression	i < kdecomps_used		3809401	0		<			
ANR	3810279	Identifier	i		3809401	0					
ANR	3810280	Identifier	kdecomps_used		3809401	1					
ANR	3810281	PostIncDecOperationExpression	i ++	1691:38:42979:42981	3809401	2	True				
ANR	3810282	Identifier	i		3809401	0					
ANR	3810283	IncDec	++		3809401	1					
ANR	3810284	CompoundStatement		396:43:10543:10543	3809401	3					
ANR	3810285	ExpressionStatement	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx,"" , ( unsigned long ) kdecomps [ i ] . code , ( unsigned long ) idx )"	1692:5:42991:43092	3809401	0	True				
ANR	3810286	CallExpression	"fprintf ( out , ""\\n\\t0x%08lx, 0x%08lx,"" , ( unsigned long ) kdecomps [ i ] . code , ( unsigned long ) idx )"		3809401	0					
ANR	3810287	Callee	fprintf		3809401	0					
ANR	3810288	Identifier	fprintf		3809401	0					
ANR	3810289	ArgumentList	out		3809401	1					
ANR	3810290	Argument	out		3809401	0					
ANR	3810291	Identifier	out		3809401	0					
ANR	3810292	Argument	"""\\n\\t0x%08lx, 0x%08lx,"""		3809401	1					
ANR	3810293	PrimaryExpression	"""\\n\\t0x%08lx, 0x%08lx,"""		3809401	0					
ANR	3810294	Argument	( unsigned long ) kdecomps [ i ] . code		3809401	2					
ANR	3810295	CastExpression	( unsigned long ) kdecomps [ i ] . code		3809401	0					
ANR	3810296	CastTarget	unsigned long		3809401	0					
ANR	3810297	MemberAccess	kdecomps [ i ] . code		3809401	1					
ANR	3810298	ArrayIndexing	kdecomps [ i ]		3809401	0					
ANR	3810299	Identifier	kdecomps		3809401	0					
ANR	3810300	Identifier	i		3809401	1					
ANR	3810301	Identifier	code		3809401	1					
ANR	3810302	Argument	( unsigned long ) idx		3809401	3					
ANR	3810303	CastExpression	( unsigned long ) idx		3809401	0					
ANR	3810304	CastTarget	unsigned long		3809401	0					
ANR	3810305	Identifier	idx		3809401	1					
ANR	3810306	ExpressionStatement	idx += kdecomps [ i ] . used	1694:5:43099:43122	3809401	1	True				
ANR	3810307	AssignmentExpression	idx += kdecomps [ i ] . used		3809401	0		+=			
ANR	3810308	Identifier	idx		3809401	0					
ANR	3810309	MemberAccess	kdecomps [ i ] . used		3809401	1					
ANR	3810310	ArrayIndexing	kdecomps [ i ]		3809401	0					
ANR	3810311	Identifier	kdecomps		3809401	0					
ANR	3810312	Identifier	i		3809401	1					
ANR	3810313	Identifier	used		3809401	1					
ANR	3810314	ExpressionStatement	"fprintf ( out , ""\\n\\t0x%08lx\\n};\\n\\n"" , ( unsigned long ) idx )"	1700:1:43192:43248	3809401	1	True				
ANR	3810315	CallExpression	"fprintf ( out , ""\\n\\t0x%08lx\\n};\\n\\n"" , ( unsigned long ) idx )"		3809401	0					
ANR	3810316	Callee	fprintf		3809401	0					
ANR	3810317	Identifier	fprintf		3809401	0					
ANR	3810318	ArgumentList	out		3809401	1					
ANR	3810319	Argument	out		3809401	0					
ANR	3810320	Identifier	out		3809401	0					
ANR	3810321	Argument	"""\\n\\t0x%08lx\\n};\\n\\n"""		3809401	1					
ANR	3810322	PrimaryExpression	"""\\n\\t0x%08lx\\n};\\n\\n"""		3809401	0					
ANR	3810323	Argument	( unsigned long ) idx		3809401	2					
ANR	3810324	CastExpression	( unsigned long ) idx		3809401	0					
ANR	3810325	CastTarget	unsigned long		3809401	0					
ANR	3810326	Identifier	idx		3809401	1					
ANR	3810327	Statement	fprintf	1702:1:43252:43258	3809401	2	True				
ANR	3810328	Statement	(	1702:8:43259:43259	3809401	3	True				
ANR	3810329	Statement	out	1702:9:43260:43262	3809401	4	True				
ANR	3810330	Statement	","	1702:12:43263:43263	3809401	5	True				
ANR	3810331	Statement	PREF	1702:14:43265:43268	3809401	6	True				
ANR	3810332	Statement	"""ac_uint4 _uckdcmp_decomp[] = {"""	1702:19:43270:43301	3809401	7	True				
ANR	3810333	Statement	)	1702:51:43302:43302	3809401	8	True				
ANR	3810334	ExpressionStatement		1702:52:43303:43303	3809401	9	True				
ANR	3810335	ExpressionStatement	k = 0	1707:1:43357:43362	3809401	10	True				
ANR	3810336	AssignmentExpression	k = 0		3809401	0		=			
ANR	3810337	Identifier	k		3809401	0					
ANR	3810338	PrimaryExpression	0		3809401	1					
ANR	3810339	ForStatement	for ( i = 0 ; i < kdecomps_used ; i ++ )		3809401	11					
ANR	3810340	ForInit	i = 0 ;	1708:6:43370:43375	3809401	0	True				
ANR	3810341	AssignmentExpression	i = 0		3809401	0		=			
ANR	3810342	Identifier	i		3809401	0					
ANR	3810343	PrimaryExpression	0		3809401	1					
ANR	3810344	Condition	i < kdecomps_used	1708:13:43377:43393	3809401	1	True				
ANR	3810345	RelationalExpression	i < kdecomps_used		3809401	0		<			
ANR	3810346	Identifier	i		3809401	0					
ANR	3810347	Identifier	kdecomps_used		3809401	1					
ANR	3810348	PostIncDecOperationExpression	i ++	1708:32:43396:43398	3809401	2	True				
ANR	3810349	Identifier	i		3809401	0					
ANR	3810350	IncDec	++		3809401	1					
ANR	3810351	ForStatement	for ( j = 0 ; j < kdecomps [ i ] . used ; j ++ )		3809401	3					
ANR	3810352	ForInit	j = 0 ;	1709:8:43409:43412	3809401	0	True				
ANR	3810353	AssignmentExpression	j = 0		3809401	0		=			
ANR	3810354	Identifier	j		3809401	0					
ANR	3810355	PrimaryExpression	0		3809401	1					
ANR	3810356	Condition	j < kdecomps [ i ] . used	1709:13:43414:43431	3809401	1	True				
ANR	3810357	RelationalExpression	j < kdecomps [ i ] . used		3809401	0		<			
ANR	3810358	Identifier	j		3809401	0					
ANR	3810359	MemberAccess	kdecomps [ i ] . used		3809401	1					
ANR	3810360	ArrayIndexing	kdecomps [ i ]		3809401	0					
ANR	3810361	Identifier	kdecomps		3809401	0					
ANR	3810362	Identifier	i		3809401	1					
ANR	3810363	Identifier	used		3809401	1					
ANR	3810364	PostIncDecOperationExpression	j ++	1709:33:43434:43436	3809401	2	True				
ANR	3810365	Identifier	j		3809401	0					
ANR	3810366	IncDec	++		3809401	1					
ANR	3810367	CompoundStatement		414:38:10998:10998	3809401	3					
ANR	3810368	IfStatement	if ( k )		3809401	0					
ANR	3810369	Condition	k	1710:9:43450:43450	3809401	0	True				
ANR	3810370	Identifier	k		3809401	0					
ANR	3810371	ExpressionStatement	"fprintf ( out , "","" )"	1710:12:43453:43470	3809401	1	True				
ANR	3810372	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3810373	Callee	fprintf		3809401	0					
ANR	3810374	Identifier	fprintf		3809401	0					
ANR	3810375	ArgumentList	out		3809401	1					
ANR	3810376	Argument	out		3809401	0					
ANR	3810377	Identifier	out		3809401	0					
ANR	3810378	Argument	""","""		3809401	1					
ANR	3810379	PrimaryExpression	""","""		3809401	0					
ANR	3810380	IfStatement	if ( ! ( k & 3 ) )		3809401	1					
ANR	3810381	Condition	! ( k & 3 )	1711:9:43481:43486	3809401	0	True				
ANR	3810382	UnaryOperationExpression	! ( k & 3 )		3809401	0					
ANR	3810383	UnaryOperator	!		3809401	0					
ANR	3810384	BitAndExpression	k & 3		3809401	1		&			
ANR	3810385	Identifier	k		3809401	0					
ANR	3810386	PrimaryExpression	3		3809401	1					
ANR	3810387	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	1711:17:43489:43508	3809401	1	True				
ANR	3810388	CallExpression	"fprintf ( out , ""\\n\\t"" )"		3809401	0					
ANR	3810389	Callee	fprintf		3809401	0					
ANR	3810390	Identifier	fprintf		3809401	0					
ANR	3810391	ArgumentList	out		3809401	1					
ANR	3810392	Argument	out		3809401	0					
ANR	3810393	Identifier	out		3809401	0					
ANR	3810394	Argument	"""\\n\\t"""		3809401	1					
ANR	3810395	PrimaryExpression	"""\\n\\t"""		3809401	0					
ANR	3810396	ElseStatement	else		3809401	0					
ANR	3810397	ExpressionStatement	"fprintf ( out , "" "" )"	1712:10:43520:43537	3809401	0	True				
ANR	3810398	CallExpression	"fprintf ( out , "" "" )"		3809401	0					
ANR	3810399	Callee	fprintf		3809401	0					
ANR	3810400	Identifier	fprintf		3809401	0					
ANR	3810401	ArgumentList	out		3809401	1					
ANR	3810402	Argument	out		3809401	0					
ANR	3810403	Identifier	out		3809401	0					
ANR	3810404	Argument	""" """		3809401	1					
ANR	3810405	PrimaryExpression	""" """		3809401	0					
ANR	3810406	ExpressionStatement	k ++	1713:5:43544:43547	3809401	2	True				
ANR	3810407	PostIncDecOperationExpression	k ++		3809401	0					
ANR	3810408	Identifier	k		3809401	0					
ANR	3810409	IncDec	++		3809401	1					
ANR	3810410	ExpressionStatement	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) kdecomps [ i ] . decomp [ j ] )"	1714:5:43554:43616	3809401	3	True				
ANR	3810411	CallExpression	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) kdecomps [ i ] . decomp [ j ] )"		3809401	0					
ANR	3810412	Callee	fprintf		3809401	0					
ANR	3810413	Identifier	fprintf		3809401	0					
ANR	3810414	ArgumentList	out		3809401	1					
ANR	3810415	Argument	out		3809401	0					
ANR	3810416	Identifier	out		3809401	0					
ANR	3810417	Argument	"""0x%08lx"""		3809401	1					
ANR	3810418	PrimaryExpression	"""0x%08lx"""		3809401	0					
ANR	3810419	Argument	( unsigned long ) kdecomps [ i ] . decomp [ j ]		3809401	2					
ANR	3810420	CastExpression	( unsigned long ) kdecomps [ i ] . decomp [ j ]		3809401	0					
ANR	3810421	CastTarget	unsigned long		3809401	0					
ANR	3810422	ArrayIndexing	kdecomps [ i ] . decomp [ j ]		3809401	1					
ANR	3810423	MemberAccess	kdecomps [ i ] . decomp		3809401	0					
ANR	3810424	ArrayIndexing	kdecomps [ i ]		3809401	0					
ANR	3810425	Identifier	kdecomps		3809401	0					
ANR	3810426	Identifier	i		3809401	1					
ANR	3810427	Identifier	decomp		3809401	1					
ANR	3810428	Identifier	j		3809401	1					
ANR	3810429	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1716:1:43624:43648	3809401	12	True				
ANR	3810430	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3810431	Callee	fprintf		3809401	0					
ANR	3810432	Identifier	fprintf		3809401	0					
ANR	3810433	ArgumentList	out		3809401	1					
ANR	3810434	Argument	out		3809401	0					
ANR	3810435	Identifier	out		3809401	0					
ANR	3810436	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3810437	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3810438	Statement	fprintf	1780:4:45393:45399	3809401	205	True				
ANR	3810439	Statement	(	1780:11:45400:45400	3809401	206	True				
ANR	3810440	Statement	out	1780:12:45401:45403	3809401	207	True				
ANR	3810441	Statement	","	1780:15:45404:45404	3809401	208	True				
ANR	3810442	Statement	PREF	1780:17:45406:45409	3809401	209	True				
ANR	3810443	Statement	"""ac_uint4 _uccmcl_size = %ld;\\n\\n"""	1780:22:45411:45444	3809401	210	True				
ANR	3810444	Statement	","	1780:56:45445:45445	3809401	211	True				
ANR	3810445	Statement	(	1780:58:45447:45447	3809401	212	True				
ANR	3810446	Statement	long	1780:59:45448:45451	3809401	213	True				
ANR	3810447	Statement	)	1780:63:45452:45452	3809401	214	True				
ANR	3810448	Statement	ccl_used	1780:65:45454:45461	3809401	215	True				
ANR	3810449	Statement	)	1780:73:45462:45462	3809401	216	True				
ANR	3810450	ExpressionStatement		1780:74:45463:45463	3809401	217	True				
ANR	3810451	Statement	fprintf	1782:4:45470:45476	3809401	218	True				
ANR	3810452	Statement	(	1782:11:45477:45477	3809401	219	True				
ANR	3810453	Statement	out	1782:12:45478:45480	3809401	220	True				
ANR	3810454	Statement	","	1782:15:45481:45481	3809401	221	True				
ANR	3810455	Statement	PREF	1782:17:45483:45486	3809401	222	True				
ANR	3810456	Statement	"""ac_uint4 _uccmcl_nodes[] = {"""	1782:22:45488:45517	3809401	223	True				
ANR	3810457	Statement	)	1782:52:45518:45518	3809401	224	True				
ANR	3810458	ExpressionStatement		1782:53:45519:45519	3809401	225	True				
ANR	3810459	IfStatement	if ( ccl_used > 0 )		3809401	226					
ANR	3810460	Condition	ccl_used > 0	1784:8:45530:45541	3809401	0	True				
ANR	3810461	RelationalExpression	ccl_used > 0		3809401	0		>			
ANR	3810462	Identifier	ccl_used		3809401	0					
ANR	3810463	PrimaryExpression	0		3809401	1					
ANR	3810464	CompoundStatement		489:22:13103:13103	3809401	1					
ANR	3810465	ForStatement	for ( i = 0 ; i < ccl_used ; i ++ )		3809401	0					
ANR	3810466	ForInit	i = 0 ;	1788:6:45603:45608	3809401	0	True				
ANR	3810467	AssignmentExpression	i = 0		3809401	0		=			
ANR	3810468	Identifier	i		3809401	0					
ANR	3810469	PrimaryExpression	0		3809401	1					
ANR	3810470	Condition	i < ccl_used	1788:13:45610:45619	3809401	1	True				
ANR	3810471	RelationalExpression	i < ccl_used		3809401	0		<			
ANR	3810472	Identifier	i		3809401	0					
ANR	3810473	Identifier	ccl_used		3809401	1					
ANR	3810474	PostIncDecOperationExpression	i ++	1788:25:45622:45624	3809401	2	True				
ANR	3810475	Identifier	i		3809401	0					
ANR	3810476	IncDec	++		3809401	1					
ANR	3810477	CompoundStatement		493:30:13186:13186	3809401	3					
ANR	3810478	IfStatement	if ( i )		3809401	0					
ANR	3810479	Condition	i	1789:9:45638:45638	3809401	0	True				
ANR	3810480	Identifier	i		3809401	0					
ANR	3810481	ExpressionStatement	"fprintf ( out , "","" )"	1789:12:45641:45658	3809401	1	True				
ANR	3810482	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3810483	Callee	fprintf		3809401	0					
ANR	3810484	Identifier	fprintf		3809401	0					
ANR	3810485	ArgumentList	out		3809401	1					
ANR	3810486	Argument	out		3809401	0					
ANR	3810487	Identifier	out		3809401	0					
ANR	3810488	Argument	""","""		3809401	1					
ANR	3810489	PrimaryExpression	""","""		3809401	0					
ANR	3810490	IfStatement	if ( ! ( i & 3 ) )		3809401	1					
ANR	3810491	Condition	! ( i & 3 )	1790:9:45669:45674	3809401	0	True				
ANR	3810492	UnaryOperationExpression	! ( i & 3 )		3809401	0					
ANR	3810493	UnaryOperator	!		3809401	0					
ANR	3810494	BitAndExpression	i & 3		3809401	1		&			
ANR	3810495	Identifier	i		3809401	0					
ANR	3810496	PrimaryExpression	3		3809401	1					
ANR	3810497	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	1790:17:45677:45697	3809401	1	True				
ANR	3810498	CallExpression	"fprintf ( out , ""\\n\\t"" )"		3809401	0					
ANR	3810499	Callee	fprintf		3809401	0					
ANR	3810500	Identifier	fprintf		3809401	0					
ANR	3810501	ArgumentList	out		3809401	1					
ANR	3810502	Argument	out		3809401	0					
ANR	3810503	Identifier	out		3809401	0					
ANR	3810504	Argument	"""\\n\\t"""		3809401	1					
ANR	3810505	PrimaryExpression	"""\\n\\t"""		3809401	0					
ANR	3810506	ElseStatement	else		3809401	0					
ANR	3810507	ExpressionStatement	"fprintf ( out , "" "" )"	1791:10:45709:45726	3809401	0	True				
ANR	3810508	CallExpression	"fprintf ( out , "" "" )"		3809401	0					
ANR	3810509	Callee	fprintf		3809401	0					
ANR	3810510	Identifier	fprintf		3809401	0					
ANR	3810511	ArgumentList	out		3809401	1					
ANR	3810512	Argument	out		3809401	0					
ANR	3810513	Identifier	out		3809401	0					
ANR	3810514	Argument	""" """		3809401	1					
ANR	3810515	PrimaryExpression	""" """		3809401	0					
ANR	3810516	ExpressionStatement	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) ccl [ i ] )"	1792:5:45733:45780	3809401	2	True				
ANR	3810517	CallExpression	"fprintf ( out , ""0x%08lx"" , ( unsigned long ) ccl [ i ] )"		3809401	0					
ANR	3810518	Callee	fprintf		3809401	0					
ANR	3810519	Identifier	fprintf		3809401	0					
ANR	3810520	ArgumentList	out		3809401	1					
ANR	3810521	Argument	out		3809401	0					
ANR	3810522	Identifier	out		3809401	0					
ANR	3810523	Argument	"""0x%08lx"""		3809401	1					
ANR	3810524	PrimaryExpression	"""0x%08lx"""		3809401	0					
ANR	3810525	Argument	( unsigned long ) ccl [ i ]		3809401	2					
ANR	3810526	CastExpression	( unsigned long ) ccl [ i ]		3809401	0					
ANR	3810527	CastTarget	unsigned long		3809401	0					
ANR	3810528	ArrayIndexing	ccl [ i ]		3809401	1					
ANR	3810529	Identifier	ccl		3809401	0					
ANR	3810530	Identifier	i		3809401	1					
ANR	3810531	ElseStatement	else		3809401	0					
ANR	3810532	CompoundStatement		499:11:13355:13355	3809401	0					
ANR	3810533	ExpressionStatement	"fprintf ( out , ""\\t0"" )"	1795:1:45799:45818	3809401	0	True				
ANR	3810534	CallExpression	"fprintf ( out , ""\\t0"" )"		3809401	0					
ANR	3810535	Callee	fprintf		3809401	0					
ANR	3810536	Identifier	fprintf		3809401	0					
ANR	3810537	ArgumentList	out		3809401	1					
ANR	3810538	Argument	out		3809401	0					
ANR	3810539	Identifier	out		3809401	0					
ANR	3810540	Argument	"""\\t0"""		3809401	1					
ANR	3810541	PrimaryExpression	"""\\t0"""		3809401	0					
ANR	3810542	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1797:4:45830:45854	3809401	227	True				
ANR	3810543	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3810544	Callee	fprintf		3809401	0					
ANR	3810545	Identifier	fprintf		3809401	0					
ANR	3810546	ArgumentList	out		3809401	1					
ANR	3810547	Argument	out		3809401	0					
ANR	3810548	Identifier	out		3809401	0					
ANR	3810549	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3810550	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3810551	Statement	fprintf	1839:4:46843:46849	3809401	228	True				
ANR	3810552	Statement	(	1839:11:46850:46850	3809401	229	True				
ANR	3810553	Statement	out	1839:12:46851:46853	3809401	230	True				
ANR	3810554	Statement	","	1839:15:46854:46854	3809401	231	True				
ANR	3810555	Statement	PREF	1839:17:46856:46859	3809401	232	True				
ANR	3810556	Statement	"""ac_uint4 _ucnum_size = %lu;\\n\\n"""	1839:22:46861:46893	3809401	233	True				
ANR	3810557	Statement	","	1839:55:46894:46894	3809401	234	True				
ANR	3810558	Statement	(	1840:8:46904:46904	3809401	235	True				
ANR	3810559	Statement	unsigned	1840:9:46905:46912	3809401	236	True				
ANR	3810560	Statement	long	1840:18:46914:46917	3809401	237	True				
ANR	3810561	Statement	)	1840:22:46918:46918	3809401	238	True				
ANR	3810562	Statement	ncodes_used	1840:23:46919:46929	3809401	239	True				
ANR	3810563	Statement	<<	1840:34:46930:46931	3809401	240	True				
ANR	3810564	Statement	1	1840:36:46932:46932	3809401	241	True				
ANR	3810565	Statement	)	1840:37:46933:46933	3809401	242	True				
ANR	3810566	ExpressionStatement		1840:38:46934:46934	3809401	243	True				
ANR	3810567	Statement	fprintf	1842:4:46941:46947	3809401	244	True				
ANR	3810568	Statement	(	1842:11:46948:46948	3809401	245	True				
ANR	3810569	Statement	out	1842:12:46949:46951	3809401	246	True				
ANR	3810570	Statement	","	1842:15:46952:46952	3809401	247	True				
ANR	3810571	Statement	PREF	1842:17:46954:46957	3809401	248	True				
ANR	3810572	Statement	"""ac_uint4 _ucnum_nodes[] = {"""	1842:22:46959:46987	3809401	249	True				
ANR	3810573	Statement	)	1842:51:46988:46988	3809401	250	True				
ANR	3810574	ExpressionStatement		1842:52:46989:46989	3809401	251	True				
ANR	3810575	IfStatement	if ( ncodes_used > 0 )		3809401	252					
ANR	3810576	Condition	ncodes_used > 0	1847:8:47069:47083	3809401	0	True				
ANR	3810577	RelationalExpression	ncodes_used > 0		3809401	0		>			
ANR	3810578	Identifier	ncodes_used		3809401	0					
ANR	3810579	PrimaryExpression	0		3809401	1					
ANR	3810580	CompoundStatement		552:25:14645:14645	3809401	1					
ANR	3810581	ForStatement	for ( i = 0 ; i < ncodes_used ; i ++ )		3809401	0					
ANR	3810582	ForInit	i = 0 ;	1848:6:47094:47099	3809401	0	True				
ANR	3810583	AssignmentExpression	i = 0		3809401	0		=			
ANR	3810584	Identifier	i		3809401	0					
ANR	3810585	PrimaryExpression	0		3809401	1					
ANR	3810586	Condition	i < ncodes_used	1848:13:47101:47113	3809401	1	True				
ANR	3810587	RelationalExpression	i < ncodes_used		3809401	0		<			
ANR	3810588	Identifier	i		3809401	0					
ANR	3810589	Identifier	ncodes_used		3809401	1					
ANR	3810590	PostIncDecOperationExpression	i ++	1848:28:47116:47118	3809401	2	True				
ANR	3810591	Identifier	i		3809401	0					
ANR	3810592	IncDec	++		3809401	1					
ANR	3810593	CompoundStatement		553:33:14680:14680	3809401	3					
ANR	3810594	IfStatement	if ( i )		3809401	0					
ANR	3810595	Condition	i	1849:9:47132:47132	3809401	0	True				
ANR	3810596	Identifier	i		3809401	0					
ANR	3810597	ExpressionStatement	"fprintf ( out , "","" )"	1849:12:47135:47152	3809401	1	True				
ANR	3810598	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3810599	Callee	fprintf		3809401	0					
ANR	3810600	Identifier	fprintf		3809401	0					
ANR	3810601	ArgumentList	out		3809401	1					
ANR	3810602	Argument	out		3809401	0					
ANR	3810603	Identifier	out		3809401	0					
ANR	3810604	Argument	""","""		3809401	1					
ANR	3810605	PrimaryExpression	""","""		3809401	0					
ANR	3810606	IfStatement	if ( ! ( i & 1 ) )		3809401	1					
ANR	3810607	Condition	! ( i & 1 )	1850:9:47163:47168	3809401	0	True				
ANR	3810608	UnaryOperationExpression	! ( i & 1 )		3809401	0					
ANR	3810609	UnaryOperator	!		3809401	0					
ANR	3810610	BitAndExpression	i & 1		3809401	1		&			
ANR	3810611	Identifier	i		3809401	0					
ANR	3810612	PrimaryExpression	1		3809401	1					
ANR	3810613	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	1850:17:47171:47191	3809401	1	True				
ANR	3810614	CallExpression	"fprintf ( out , ""\\n\\t"" )"		3809401	0					
ANR	3810615	Callee	fprintf		3809401	0					
ANR	3810616	Identifier	fprintf		3809401	0					
ANR	3810617	ArgumentList	out		3809401	1					
ANR	3810618	Argument	out		3809401	0					
ANR	3810619	Identifier	out		3809401	0					
ANR	3810620	Argument	"""\\n\\t"""		3809401	1					
ANR	3810621	PrimaryExpression	"""\\n\\t"""		3809401	0					
ANR	3810622	ElseStatement	else		3809401	0					
ANR	3810623	ExpressionStatement	"fprintf ( out , "" "" )"	1851:10:47203:47220	3809401	0	True				
ANR	3810624	CallExpression	"fprintf ( out , "" "" )"		3809401	0					
ANR	3810625	Callee	fprintf		3809401	0					
ANR	3810626	Identifier	fprintf		3809401	0					
ANR	3810627	ArgumentList	out		3809401	1					
ANR	3810628	Argument	out		3809401	0					
ANR	3810629	Identifier	out		3809401	0					
ANR	3810630	Argument	""" """		3809401	1					
ANR	3810631	PrimaryExpression	""" """		3809401	0					
ANR	3810632	ExpressionStatement	"fprintf ( out , ""0x%08lx, 0x%08lx"" , ( unsigned long ) ncodes [ i ] . code , ( unsigned long ) ncodes [ i ] . idx )"	1852:5:47227:47331	3809401	2	True				
ANR	3810633	CallExpression	"fprintf ( out , ""0x%08lx, 0x%08lx"" , ( unsigned long ) ncodes [ i ] . code , ( unsigned long ) ncodes [ i ] . idx )"		3809401	0					
ANR	3810634	Callee	fprintf		3809401	0					
ANR	3810635	Identifier	fprintf		3809401	0					
ANR	3810636	ArgumentList	out		3809401	1					
ANR	3810637	Argument	out		3809401	0					
ANR	3810638	Identifier	out		3809401	0					
ANR	3810639	Argument	"""0x%08lx, 0x%08lx"""		3809401	1					
ANR	3810640	PrimaryExpression	"""0x%08lx, 0x%08lx"""		3809401	0					
ANR	3810641	Argument	( unsigned long ) ncodes [ i ] . code		3809401	2					
ANR	3810642	CastExpression	( unsigned long ) ncodes [ i ] . code		3809401	0					
ANR	3810643	CastTarget	unsigned long		3809401	0					
ANR	3810644	MemberAccess	ncodes [ i ] . code		3809401	1					
ANR	3810645	ArrayIndexing	ncodes [ i ]		3809401	0					
ANR	3810646	Identifier	ncodes		3809401	0					
ANR	3810647	Identifier	i		3809401	1					
ANR	3810648	Identifier	code		3809401	1					
ANR	3810649	Argument	( unsigned long ) ncodes [ i ] . idx		3809401	3					
ANR	3810650	CastExpression	( unsigned long ) ncodes [ i ] . idx		3809401	0					
ANR	3810651	CastTarget	unsigned long		3809401	0					
ANR	3810652	MemberAccess	ncodes [ i ] . idx		3809401	1					
ANR	3810653	ArrayIndexing	ncodes [ i ]		3809401	0					
ANR	3810654	Identifier	ncodes		3809401	0					
ANR	3810655	Identifier	i		3809401	1					
ANR	3810656	Identifier	idx		3809401	1					
ANR	3810657	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1855:1:47337:47361	3809401	1	True				
ANR	3810658	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3810659	Callee	fprintf		3809401	0					
ANR	3810660	Identifier	fprintf		3809401	0					
ANR	3810661	ArgumentList	out		3809401	1					
ANR	3810662	Argument	out		3809401	0					
ANR	3810663	Identifier	out		3809401	0					
ANR	3810664	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3810665	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3810666	Statement	fprintf	1857:1:47365:47371	3809401	2	True				
ANR	3810667	Statement	(	1857:8:47372:47372	3809401	3	True				
ANR	3810668	Statement	out	1857:9:47373:47375	3809401	4	True				
ANR	3810669	Statement	","	1857:12:47376:47376	3809401	5	True				
ANR	3810670	Statement	PREF	1857:14:47378:47381	3809401	6	True				
ANR	3810671	Statement	"""short _ucnum_vals[] = {"""	1857:19:47383:47407	3809401	7	True				
ANR	3810672	Statement	)	1857:44:47408:47408	3809401	8	True				
ANR	3810673	ExpressionStatement		1857:45:47409:47409	3809401	9	True				
ANR	3810674	ForStatement	for ( i = 0 ; i < nums_used ; i ++ )		3809401	10					
ANR	3810675	ForInit	i = 0 ;	1858:6:47417:47422	3809401	0	True				
ANR	3810676	AssignmentExpression	i = 0		3809401	0		=			
ANR	3810677	Identifier	i		3809401	0					
ANR	3810678	PrimaryExpression	0		3809401	1					
ANR	3810679	Condition	i < nums_used	1858:13:47424:47434	3809401	1	True				
ANR	3810680	RelationalExpression	i < nums_used		3809401	0		<			
ANR	3810681	Identifier	i		3809401	0					
ANR	3810682	Identifier	nums_used		3809401	1					
ANR	3810683	PostIncDecOperationExpression	i ++	1858:26:47437:47439	3809401	2	True				
ANR	3810684	Identifier	i		3809401	0					
ANR	3810685	IncDec	++		3809401	1					
ANR	3810686	CompoundStatement		563:31:15001:15001	3809401	3					
ANR	3810687	IfStatement	if ( i )		3809401	0					
ANR	3810688	Condition	i	1859:9:47453:47453	3809401	0	True				
ANR	3810689	Identifier	i		3809401	0					
ANR	3810690	ExpressionStatement	"fprintf ( out , "","" )"	1859:12:47456:47473	3809401	1	True				
ANR	3810691	CallExpression	"fprintf ( out , "","" )"		3809401	0					
ANR	3810692	Callee	fprintf		3809401	0					
ANR	3810693	Identifier	fprintf		3809401	0					
ANR	3810694	ArgumentList	out		3809401	1					
ANR	3810695	Argument	out		3809401	0					
ANR	3810696	Identifier	out		3809401	0					
ANR	3810697	Argument	""","""		3809401	1					
ANR	3810698	PrimaryExpression	""","""		3809401	0					
ANR	3810699	IfStatement	if ( ! ( i & 3 ) )		3809401	1					
ANR	3810700	Condition	! ( i & 3 )	1860:9:47484:47489	3809401	0	True				
ANR	3810701	UnaryOperationExpression	! ( i & 3 )		3809401	0					
ANR	3810702	UnaryOperator	!		3809401	0					
ANR	3810703	BitAndExpression	i & 3		3809401	1		&			
ANR	3810704	Identifier	i		3809401	0					
ANR	3810705	PrimaryExpression	3		3809401	1					
ANR	3810706	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	1860:17:47492:47512	3809401	1	True				
ANR	3810707	CallExpression	"fprintf ( out , ""\\n\\t"" )"		3809401	0					
ANR	3810708	Callee	fprintf		3809401	0					
ANR	3810709	Identifier	fprintf		3809401	0					
ANR	3810710	ArgumentList	out		3809401	1					
ANR	3810711	Argument	out		3809401	0					
ANR	3810712	Identifier	out		3809401	0					
ANR	3810713	Argument	"""\\n\\t"""		3809401	1					
ANR	3810714	PrimaryExpression	"""\\n\\t"""		3809401	0					
ANR	3810715	ElseStatement	else		3809401	0					
ANR	3810716	ExpressionStatement	"fprintf ( out , "" "" )"	1861:10:47524:47541	3809401	0	True				
ANR	3810717	CallExpression	"fprintf ( out , "" "" )"		3809401	0					
ANR	3810718	Callee	fprintf		3809401	0					
ANR	3810719	Identifier	fprintf		3809401	0					
ANR	3810720	ArgumentList	out		3809401	1					
ANR	3810721	Argument	out		3809401	0					
ANR	3810722	Identifier	out		3809401	0					
ANR	3810723	Argument	""" """		3809401	1					
ANR	3810724	PrimaryExpression	""" """		3809401	0					
ANR	3810725	IfStatement	if ( nums [ i ] . numerator < 0 )		3809401	2					
ANR	3810726	Condition	nums [ i ] . numerator < 0	1862:9:47552:47572	3809401	0	True				
ANR	3810727	RelationalExpression	nums [ i ] . numerator < 0		3809401	0		<			
ANR	3810728	MemberAccess	nums [ i ] . numerator		3809401	0					
ANR	3810729	ArrayIndexing	nums [ i ]		3809401	0					
ANR	3810730	Identifier	nums		3809401	0					
ANR	3810731	Identifier	i		3809401	1					
ANR	3810732	Identifier	numerator		3809401	1					
ANR	3810733	PrimaryExpression	0		3809401	1					
ANR	3810734	CompoundStatement		567:32:15134:15134	3809401	1					
ANR	3810735	ExpressionStatement	"fprintf ( out , ""%6d, 0x%04x"" , nums [ i ] . numerator , nums [ i ] . denominator )"	1863:2:47579:47650	3809401	0	True				
ANR	3810736	CallExpression	"fprintf ( out , ""%6d, 0x%04x"" , nums [ i ] . numerator , nums [ i ] . denominator )"		3809401	0					
ANR	3810737	Callee	fprintf		3809401	0					
ANR	3810738	Identifier	fprintf		3809401	0					
ANR	3810739	ArgumentList	out		3809401	1					
ANR	3810740	Argument	out		3809401	0					
ANR	3810741	Identifier	out		3809401	0					
ANR	3810742	Argument	"""%6d, 0x%04x"""		3809401	1					
ANR	3810743	PrimaryExpression	"""%6d, 0x%04x"""		3809401	0					
ANR	3810744	Argument	nums [ i ] . numerator		3809401	2					
ANR	3810745	MemberAccess	nums [ i ] . numerator		3809401	0					
ANR	3810746	ArrayIndexing	nums [ i ]		3809401	0					
ANR	3810747	Identifier	nums		3809401	0					
ANR	3810748	Identifier	i		3809401	1					
ANR	3810749	Identifier	numerator		3809401	1					
ANR	3810750	Argument	nums [ i ] . denominator		3809401	3					
ANR	3810751	MemberAccess	nums [ i ] . denominator		3809401	0					
ANR	3810752	ArrayIndexing	nums [ i ]		3809401	0					
ANR	3810753	Identifier	nums		3809401	0					
ANR	3810754	Identifier	i		3809401	1					
ANR	3810755	Identifier	denominator		3809401	1					
ANR	3810756	ElseStatement	else		3809401	0					
ANR	3810757	CompoundStatement		570:12:15223:15223	3809401	0					
ANR	3810758	ExpressionStatement	"fprintf ( out , ""0x%04x, 0x%04x"" , nums [ i ] . numerator , nums [ i ] . denominator )"	1866:2:47668:47742	3809401	0	True				
ANR	3810759	CallExpression	"fprintf ( out , ""0x%04x, 0x%04x"" , nums [ i ] . numerator , nums [ i ] . denominator )"		3809401	0					
ANR	3810760	Callee	fprintf		3809401	0					
ANR	3810761	Identifier	fprintf		3809401	0					
ANR	3810762	ArgumentList	out		3809401	1					
ANR	3810763	Argument	out		3809401	0					
ANR	3810764	Identifier	out		3809401	0					
ANR	3810765	Argument	"""0x%04x, 0x%04x"""		3809401	1					
ANR	3810766	PrimaryExpression	"""0x%04x, 0x%04x"""		3809401	0					
ANR	3810767	Argument	nums [ i ] . numerator		3809401	2					
ANR	3810768	MemberAccess	nums [ i ] . numerator		3809401	0					
ANR	3810769	ArrayIndexing	nums [ i ]		3809401	0					
ANR	3810770	Identifier	nums		3809401	0					
ANR	3810771	Identifier	i		3809401	1					
ANR	3810772	Identifier	numerator		3809401	1					
ANR	3810773	Argument	nums [ i ] . denominator		3809401	3					
ANR	3810774	MemberAccess	nums [ i ] . denominator		3809401	0					
ANR	3810775	ArrayIndexing	nums [ i ]		3809401	0					
ANR	3810776	Identifier	nums		3809401	0					
ANR	3810777	Identifier	i		3809401	1					
ANR	3810778	Identifier	denominator		3809401	1					
ANR	3810779	ExpressionStatement	"fprintf ( out , ""\\n};\\n\\n"" )"	1870:1:47755:47779	3809401	11	True				
ANR	3810780	CallExpression	"fprintf ( out , ""\\n};\\n\\n"" )"		3809401	0					
ANR	3810781	Callee	fprintf		3809401	0					
ANR	3810782	Identifier	fprintf		3809401	0					
ANR	3810783	ArgumentList	out		3809401	1					
ANR	3810784	Argument	out		3809401	0					
ANR	3810785	Identifier	out		3809401	0					
ANR	3810786	Argument	"""\\n};\\n\\n"""		3809401	1					
ANR	3810787	PrimaryExpression	"""\\n};\\n\\n"""		3809401	0					
ANR	3810788	ExpressionStatement	fclose ( out )	1908:4:48673:48684	3809401	253	True				
ANR	3810789	CallExpression	fclose ( out )		3809401	0					
ANR	3810790	Callee	fclose		3809401	0					
ANR	3810791	Identifier	fclose		3809401	0					
ANR	3810792	ArgumentList	out		3809401	1					
ANR	3810793	Argument	out		3809401	0					
ANR	3810794	Identifier	out		3809401	0					
ANR	3810795	ReturnType	static void		3809401	1					
ANR	3810796	Identifier	write_cdata		3809401	2					
ANR	3810797	ParameterList	char * opath		3809401	3					
ANR	3810798	Parameter	char * opath	1295:12:32427:32437	3809401	0	True				
ANR	3810799	ParameterType	char *		3809401	0					
ANR	3810800	Identifier	opath		3809401	1					
ANR	3810801	CFGEntryNode	ENTRY		3809401		True				
ANR	3810802	CFGExitNode	EXIT		3809401		True				
ANR	3810803	Symbol	comps_used		3809401						
ANR	3810804	Symbol	upper		3809401						
ANR	3810805	Symbol	nums_used		3809401						
ANR	3810806	Symbol	title_used		3809401						
ANR	3810807	Symbol	ncodes [ i ] . idx		3809401						
ANR	3810808	Symbol	decomps		3809401						
ANR	3810809	Symbol	ccl		3809401						
ANR	3810810	Symbol	path		3809401						
ANR	3810811	Symbol	kdecomps		3809401						
ANR	3810812	Symbol	decomps [ i ] . code		3809401						
ANR	3810813	Symbol	lower_used		3809401						
ANR	3810814	Symbol	* decomps [ i ] . decomp		3809401						
ANR	3810815	Symbol	nums		3809401						
ANR	3810816	Symbol	* * i		3809401						
ANR	3810817	Symbol	* decomps		3809401						
ANR	3810818	Symbol	ncodes		3809401						
ANR	3810819	Symbol	lower		3809401						
ANR	3810820	Symbol	nums [ i ] . denominator		3809401						
ANR	3810821	Symbol	* * proptbl		3809401						
ANR	3810822	Symbol	NUMPROPS		3809401						
ANR	3810823	Symbol	casecnt		3809401						
ANR	3810824	Symbol	propcnt		3809401						
ANR	3810825	Symbol	kdecomps_used		3809401						
ANR	3810826	Symbol	* ncodes		3809401						
ANR	3810827	Symbol	* proptbl [ i ] . ranges		3809401						
ANR	3810828	Symbol	comps [ i ] . count		3809401						
ANR	3810829	Symbol	idx		3809401						
ANR	3810830	Symbol	* kdecomps [ i ] . decomp		3809401						
ANR	3810831	Symbol	* nums		3809401						
ANR	3810832	Symbol	* propcnt		3809401						
ANR	3810833	Symbol	opath		3809401						
ANR	3810834	Symbol	proptbl [ i ] . ranges		3809401						
ANR	3810835	Symbol	* comps		3809401						
ANR	3810836	Symbol	* ccl		3809401						
ANR	3810837	Symbol	ccl_used		3809401						
ANR	3810838	Symbol	decomps [ i ] . decomp		3809401						
ANR	3810839	Symbol	title		3809401						
ANR	3810840	Symbol	out		3809401						
ANR	3810841	Symbol	kdecomps [ i ] . used		3809401						
ANR	3810842	Symbol	nprops		3809401						
ANR	3810843	Symbol	kdecomps [ i ] . decomp		3809401						
ANR	3810844	Symbol	* hdr		3809401						
ANR	3810845	Symbol	comps [ i ] . comp		3809401						
ANR	3810846	Symbol	fopen		3809401						
ANR	3810847	Symbol	comps [ i ] . code2		3809401						
ANR	3810848	Symbol	ncodes [ i ] . code		3809401						
ANR	3810849	Symbol	comps		3809401						
ANR	3810850	Symbol	decomps_used		3809401						
ANR	3810851	Symbol	* * kdecomps		3809401						
ANR	3810852	Symbol	proptbl		3809401						
ANR	3810853	Symbol	i		3809401						
ANR	3810854	Symbol	* kdecomps		3809401						
ANR	3810855	Symbol	j		3809401						
ANR	3810856	Symbol	k		3809401						
ANR	3810857	Symbol	proptbl [ i ] . used		3809401						
ANR	3810858	Symbol	upper_used		3809401						
ANR	3810859	Symbol	comps [ i ] . code1		3809401						
ANR	3810860	Symbol	* i		3809401						
ANR	3810861	Symbol	* j		3809401						
ANR	3810862	Symbol	* * decomps		3809401						
ANR	3810863	Symbol	ncodes_used		3809401						
ANR	3810864	Symbol	bytes		3809401						
ANR	3810865	Symbol	* proptbl		3809401						
ANR	3810866	Symbol	hdr		3809401						
ANR	3810867	Symbol	nums [ i ] . numerator		3809401						
ANR	3810868	Symbol	kdecomps [ i ] . code		3809401						
ANR	3810869	Symbol	decomps [ i ] . used		3809401						
ANR	3810870	Function	usage	1911:0:48689:49181							
ANR	3810871	FunctionDef	usage (char * prog)		3810870	0					
ANR	3810872	CompoundStatement		1913:0:48719:49181	3810870	0					
ANR	3810873	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [-o output-directory|-x composition-exclusions]"" , prog )"	1914:4:48725:48819	3810870	0	True				
ANR	3810874	CallExpression	"fprintf ( stderr , ""Usage: %s [-o output-directory|-x composition-exclusions]"" , prog )"		3810870	0					
ANR	3810875	Callee	fprintf		3810870	0					
ANR	3810876	Identifier	fprintf		3810870	0					
ANR	3810877	ArgumentList	stderr		3810870	1					
ANR	3810878	Argument	stderr		3810870	0					
ANR	3810879	Identifier	stderr		3810870	0					
ANR	3810880	Argument	"""Usage: %s [-o output-directory|-x composition-exclusions]"""		3810870	1					
ANR	3810881	PrimaryExpression	"""Usage: %s [-o output-directory|-x composition-exclusions]"""		3810870	0					
ANR	3810882	Argument	prog		3810870	2					
ANR	3810883	Identifier	prog		3810870	0					
ANR	3810884	ExpressionStatement	"fprintf ( stderr , "" datafile1 datafile2 ...\\n\\n"" )"	1916:4:48825:48872	3810870	1	True				
ANR	3810885	CallExpression	"fprintf ( stderr , "" datafile1 datafile2 ...\\n\\n"" )"		3810870	0					
ANR	3810886	Callee	fprintf		3810870	0					
ANR	3810887	Identifier	fprintf		3810870	0					
ANR	3810888	ArgumentList	stderr		3810870	1					
ANR	3810889	Argument	stderr		3810870	0					
ANR	3810890	Identifier	stderr		3810870	0					
ANR	3810891	Argument	""" datafile1 datafile2 ...\\n\\n"""		3810870	1					
ANR	3810892	PrimaryExpression	""" datafile1 datafile2 ...\\n\\n"""		3810870	0					
ANR	3810893	ExpressionStatement	"fprintf ( stderr , ""-o output-directory\\n\\t\\tWrite the output files to a different"" )"	1917:4:48878:48971	3810870	2	True				
ANR	3810894	CallExpression	"fprintf ( stderr , ""-o output-directory\\n\\t\\tWrite the output files to a different"" )"		3810870	0					
ANR	3810895	Callee	fprintf		3810870	0					
ANR	3810896	Identifier	fprintf		3810870	0					
ANR	3810897	ArgumentList	stderr		3810870	1					
ANR	3810898	Argument	stderr		3810870	0					
ANR	3810899	Identifier	stderr		3810870	0					
ANR	3810900	Argument	"""-o output-directory\\n\\t\\tWrite the output files to a different"""		3810870	1					
ANR	3810901	PrimaryExpression	"""-o output-directory\\n\\t\\tWrite the output files to a different"""		3810870	0					
ANR	3810902	ExpressionStatement	"fprintf ( stderr , "" directory (default: .).\\n"" )"	1919:4:48977:49022	3810870	3	True				
ANR	3810903	CallExpression	"fprintf ( stderr , "" directory (default: .).\\n"" )"		3810870	0					
ANR	3810904	Callee	fprintf		3810870	0					
ANR	3810905	Identifier	fprintf		3810870	0					
ANR	3810906	ArgumentList	stderr		3810870	1					
ANR	3810907	Argument	stderr		3810870	0					
ANR	3810908	Identifier	stderr		3810870	0					
ANR	3810909	Argument	""" directory (default: .).\\n"""		3810870	1					
ANR	3810910	PrimaryExpression	""" directory (default: .).\\n"""		3810870	0					
ANR	3810911	ExpressionStatement	"fprintf ( stderr , ""-x composition-exclusion\\n\\t\\tFile of composition codes"" )"	1920:4:49028:49114	3810870	4	True				
ANR	3810912	CallExpression	"fprintf ( stderr , ""-x composition-exclusion\\n\\t\\tFile of composition codes"" )"		3810870	0					
ANR	3810913	Callee	fprintf		3810870	0					
ANR	3810914	Identifier	fprintf		3810870	0					
ANR	3810915	ArgumentList	stderr		3810870	1					
ANR	3810916	Argument	stderr		3810870	0					
ANR	3810917	Identifier	stderr		3810870	0					
ANR	3810918	Argument	"""-x composition-exclusion\\n\\t\\tFile of composition codes"""		3810870	1					
ANR	3810919	PrimaryExpression	"""-x composition-exclusion\\n\\t\\tFile of composition codes"""		3810870	0					
ANR	3810920	ExpressionStatement	"fprintf ( stderr , "" that should be excluded.\\n"" )"	1922:4:49120:49166	3810870	5	True				
ANR	3810921	CallExpression	"fprintf ( stderr , "" that should be excluded.\\n"" )"		3810870	0					
ANR	3810922	Callee	fprintf		3810870	0					
ANR	3810923	Identifier	fprintf		3810870	0					
ANR	3810924	ArgumentList	stderr		3810870	1					
ANR	3810925	Argument	stderr		3810870	0					
ANR	3810926	Identifier	stderr		3810870	0					
ANR	3810927	Argument	""" that should be excluded.\\n"""		3810870	1					
ANR	3810928	PrimaryExpression	""" that should be excluded.\\n"""		3810870	0					
ANR	3810929	ExpressionStatement	exit ( 1 )	1923:4:49172:49179	3810870	6	True				
ANR	3810930	CallExpression	exit ( 1 )		3810870	0					
ANR	3810931	Callee	exit		3810870	0					
ANR	3810932	Identifier	exit		3810870	0					
ANR	3810933	ArgumentList	1		3810870	1					
ANR	3810934	Argument	1		3810870	0					
ANR	3810935	PrimaryExpression	1		3810870	0					
ANR	3810936	ReturnType	static void		3810870	1					
ANR	3810937	Identifier	usage		3810870	2					
ANR	3810938	ParameterList	char * prog		3810870	3					
ANR	3810939	Parameter	char * prog	1912:6:48707:48716	3810870	0	True				
ANR	3810940	ParameterType	char *		3810870	0					
ANR	3810941	Identifier	prog		3810870	1					
ANR	3810942	CFGEntryNode	ENTRY		3810870		True				
ANR	3810943	CFGExitNode	EXIT		3810870		True				
ANR	3810944	Symbol	stderr		3810870						
ANR	3810945	Symbol	prog		3810870						
ANR	3810946	Function	main	1926:0:49184:50544							
ANR	3810947	FunctionDef	"main (int argc , char * argv [ ])"		3810946	0					
ANR	3810948	CompoundStatement		1928:0:49217:50544	3810946	0					
ANR	3810949	IdentifierDeclStatement	FILE * in ;	1929:4:49223:49231	3810946	0	True				
ANR	3810950	IdentifierDecl	* in		3810946	0					
ANR	3810951	IdentifierDeclType	FILE *		3810946	0					
ANR	3810952	Identifier	in		3810946	1					
ANR	3810953	IdentifierDeclStatement	"char * prog , * opath ;"	1930:4:49237:49255	3810946	1	True				
ANR	3810954	IdentifierDecl	* prog		3810946	0					
ANR	3810955	IdentifierDeclType	char *		3810946	0					
ANR	3810956	Identifier	prog		3810946	1					
ANR	3810957	IdentifierDecl	* opath		3810946	1					
ANR	3810958	IdentifierDeclType	char *		3810946	0					
ANR	3810959	Identifier	opath		3810946	1					
ANR	3810960	ExpressionStatement	prog = argv [ 1 ]	1932:4:49262:49276	3810946	2	True				
ANR	3810961	AssignmentExpression	prog = argv [ 1 ]		3810946	0		=			
ANR	3810962	Identifier	prog		3810946	0					
ANR	3810963	ArrayIndexing	argv [ 1 ]		3810946	1					
ANR	3810964	Identifier	argv		3810946	0					
ANR	3810965	PrimaryExpression	1		3810946	1					
ANR	3810966	ExpressionStatement	opath = 0	1934:4:49283:49292	3810946	3	True				
ANR	3810967	AssignmentExpression	opath = 0		3810946	0		=			
ANR	3810968	Identifier	opath		3810946	0					
ANR	3810969	PrimaryExpression	0		3810946	1					
ANR	3810970	ExpressionStatement	in = stdin	1935:4:49298:49308	3810946	4	True				
ANR	3810971	AssignmentExpression	in = stdin		3810946	0		=			
ANR	3810972	Identifier	in		3810946	0					
ANR	3810973	Identifier	stdin		3810946	1					
ANR	3810974	ExpressionStatement	argc --	1937:4:49315:49321	3810946	5	True				
ANR	3810975	PostIncDecOperationExpression	argc --		3810946	0					
ANR	3810976	Identifier	argc		3810946	0					
ANR	3810977	IncDec	--		3810946	1					
ANR	3810978	ExpressionStatement	argv ++	1938:4:49327:49333	3810946	6	True				
ANR	3810979	PostIncDecOperationExpression	argv ++		3810946	0					
ANR	3810980	Identifier	argv		3810946	0					
ANR	3810981	IncDec	++		3810946	1					
ANR	3810982	WhileStatement	while ( argc > 0 )		3810946	7					
ANR	3810983	Condition	argc > 0	1940:11:49347:49354	3810946	0	True				
ANR	3810984	RelationalExpression	argc > 0		3810946	0		>			
ANR	3810985	Identifier	argc		3810946	0					
ANR	3810986	PrimaryExpression	0		3810946	1					
ANR	3810987	CompoundStatement		13:21:139:139	3810946	1					
ANR	3810988	IfStatement	if ( argv [ 0 ] [ 0 ] == '-' )		3810946	0					
ANR	3810989	Condition	argv [ 0 ] [ 0 ] == '-'	1941:12:49371:49387	3810946	0	True				
ANR	3810990	EqualityExpression	argv [ 0 ] [ 0 ] == '-'		3810946	0		==			
ANR	3810991	ArrayIndexing	argv [ 0 ] [ 0 ]		3810946	0					
ANR	3810992	ArrayIndexing	argv [ 0 ]		3810946	0					
ANR	3810993	Identifier	argv		3810946	0					
ANR	3810994	PrimaryExpression	0		3810946	1					
ANR	3810995	PrimaryExpression	0		3810946	1					
ANR	3810996	PrimaryExpression	'-'		3810946	1					
ANR	3810997	CompoundStatement		14:31:172:172	3810946	1					
ANR	3810998	SwitchStatement	switch ( argv [ 0 ] [ 1 ] )		3810946	0					
ANR	3810999	Condition	argv [ 0 ] [ 1 ]	1942:20:49412:49421	3810946	0	True				
ANR	3811000	ArrayIndexing	argv [ 0 ] [ 1 ]		3810946	0					
ANR	3811001	ArrayIndexing	argv [ 0 ]		3810946	0					
ANR	3811002	Identifier	argv		3810946	0					
ANR	3811003	PrimaryExpression	0		3810946	1					
ANR	3811004	PrimaryExpression	1		3810946	1					
ANR	3811005	CompoundStatement		15:32:206:206	3810946	1					
ANR	3811006	Label	case 'o' :	1943:14:49440:49448	3810946	0	True				
ANR	3811007	ExpressionStatement	argc --	1944:16:49466:49472	3810946	1	True				
ANR	3811008	PostIncDecOperationExpression	argc --		3810946	0					
ANR	3811009	Identifier	argc		3810946	0					
ANR	3811010	IncDec	--		3810946	1					
ANR	3811011	ExpressionStatement	argv ++	1945:16:49490:49496	3810946	2	True				
ANR	3811012	PostIncDecOperationExpression	argv ++		3810946	0					
ANR	3811013	Identifier	argv		3810946	0					
ANR	3811014	IncDec	++		3810946	1					
ANR	3811015	ExpressionStatement	opath = argv [ 0 ]	1946:16:49514:49529	3810946	3	True				
ANR	3811016	AssignmentExpression	opath = argv [ 0 ]		3810946	0		=			
ANR	3811017	Identifier	opath		3810946	0					
ANR	3811018	ArrayIndexing	argv [ 0 ]		3810946	1					
ANR	3811019	Identifier	argv		3810946	0					
ANR	3811020	PrimaryExpression	0		3810946	1					
ANR	3811021	BreakStatement	break ;	1947:16:49547:49552	3810946	4	True				
ANR	3811022	Label	case 'x' :	1948:14:49568:49576	3810946	5	True				
ANR	3811023	ExpressionStatement	argc --	1949:16:49594:49600	3810946	6	True				
ANR	3811024	PostIncDecOperationExpression	argc --		3810946	0					
ANR	3811025	Identifier	argc		3810946	0					
ANR	3811026	IncDec	--		3810946	1					
ANR	3811027	ExpressionStatement	argv ++	1950:16:49618:49624	3810946	7	True				
ANR	3811028	PostIncDecOperationExpression	argv ++		3810946	0					
ANR	3811029	Identifier	argv		3810946	0					
ANR	3811030	IncDec	++		3810946	1					
ANR	3811031	IfStatement	"if ( ( in = fopen ( argv [ 0 ] , ""r"" ) ) == 0 )"		3810946	8					
ANR	3811032	Condition	"( in = fopen ( argv [ 0 ] , ""r"" ) ) == 0"	1951:20:49646:49676	3810946	0	True				
ANR	3811033	EqualityExpression	"( in = fopen ( argv [ 0 ] , ""r"" ) ) == 0"		3810946	0		==			
ANR	3811034	AssignmentExpression	"in = fopen ( argv [ 0 ] , ""r"" )"		3810946	0		=			
ANR	3811035	Identifier	in		3810946	0					
ANR	3811036	CallExpression	"fopen ( argv [ 0 ] , ""r"" )"		3810946	1					
ANR	3811037	Callee	fopen		3810946	0					
ANR	3811038	Identifier	fopen		3810946	0					
ANR	3811039	ArgumentList	argv [ 0 ]		3810946	1					
ANR	3811040	Argument	argv [ 0 ]		3810946	0					
ANR	3811041	ArrayIndexing	argv [ 0 ]		3810946	0					
ANR	3811042	Identifier	argv		3810946	0					
ANR	3811043	PrimaryExpression	0		3810946	1					
ANR	3811044	Argument	"""r"""		3810946	1					
ANR	3811045	PrimaryExpression	"""r"""		3810946	0					
ANR	3811046	PrimaryExpression	0		3810946	1					
ANR	3811047	ExpressionStatement	"fprintf ( stderr , ""%s: unable to open composition exclusion file %s\\n"" , prog , argv [ 0 ] )"	1952:18:49697:49833	3810946	1	True				
ANR	3811048	CallExpression	"fprintf ( stderr , ""%s: unable to open composition exclusion file %s\\n"" , prog , argv [ 0 ] )"		3810946	0					
ANR	3811049	Callee	fprintf		3810946	0					
ANR	3811050	Identifier	fprintf		3810946	0					
ANR	3811051	ArgumentList	stderr		3810946	1					
ANR	3811052	Argument	stderr		3810946	0					
ANR	3811053	Identifier	stderr		3810946	0					
ANR	3811054	Argument	"""%s: unable to open composition exclusion file %s\\n"""		3810946	1					
ANR	3811055	PrimaryExpression	"""%s: unable to open composition exclusion file %s\\n"""		3810946	0					
ANR	3811056	Argument	prog		3810946	2					
ANR	3811057	Identifier	prog		3810946	0					
ANR	3811058	Argument	argv [ 0 ]		3810946	3					
ANR	3811059	ArrayIndexing	argv [ 0 ]		3810946	0					
ANR	3811060	Identifier	argv		3810946	0					
ANR	3811061	PrimaryExpression	0		3810946	1					
ANR	3811062	ElseStatement	else		3810946	0					
ANR	3811063	CompoundStatement		28:21:638:638	3810946	0					
ANR	3811064	ExpressionStatement	read_compexdata ( in )	1956:20:49878:49897	3810946	0	True				
ANR	3811065	CallExpression	read_compexdata ( in )		3810946	0					
ANR	3811066	Callee	read_compexdata		3810946	0					
ANR	3811067	Identifier	read_compexdata		3810946	0					
ANR	3811068	ArgumentList	in		3810946	1					
ANR	3811069	Argument	in		3810946	0					
ANR	3811070	Identifier	in		3810946	0					
ANR	3811071	ExpressionStatement	fclose ( in )	1957:20:49919:49929	3810946	1	True				
ANR	3811072	CallExpression	fclose ( in )		3810946	0					
ANR	3811073	Callee	fclose		3810946	0					
ANR	3811074	Identifier	fclose		3810946	0					
ANR	3811075	ArgumentList	in		3810946	1					
ANR	3811076	Argument	in		3810946	0					
ANR	3811077	Identifier	in		3810946	0					
ANR	3811078	ExpressionStatement	in = 0	1958:20:49951:49957	3810946	2	True				
ANR	3811079	AssignmentExpression	in = 0		3810946	0		=			
ANR	3811080	Identifier	in		3810946	0					
ANR	3811081	PrimaryExpression	0		3810946	1					
ANR	3811082	BreakStatement	break ;	1960:16:49993:49998	3810946	9	True				
ANR	3811083	Label	default :	1961:14:50014:50021	3810946	10	True				
ANR	3811084	Identifier	default		3810946	0					
ANR	3811085	ExpressionStatement	usage ( prog )	1962:16:50039:50050	3810946	11	True				
ANR	3811086	CallExpression	usage ( prog )		3810946	0					
ANR	3811087	Callee	usage		3810946	0					
ANR	3811088	Identifier	usage		3810946	0					
ANR	3811089	ArgumentList	prog		3810946	1					
ANR	3811090	Argument	prog		3810946	0					
ANR	3811091	Identifier	prog		3810946	0					
ANR	3811092	ElseStatement	else		3810946	0					
ANR	3811093	CompoundStatement		37:15:863:863	3810946	0					
ANR	3811094	IfStatement	if ( in != stdin && in != NULL )		3810946	0					
ANR	3811095	Condition	in != stdin && in != NULL	1965:16:50099:50123	3810946	0	True				
ANR	3811096	AndExpression	in != stdin && in != NULL		3810946	0		&&			
ANR	3811097	EqualityExpression	in != stdin		3810946	0		!=			
ANR	3811098	Identifier	in		3810946	0					
ANR	3811099	Identifier	stdin		3810946	1					
ANR	3811100	EqualityExpression	in != NULL		3810946	1		!=			
ANR	3811101	Identifier	in		3810946	0					
ANR	3811102	Identifier	NULL		3810946	1					
ANR	3811103	ExpressionStatement	fclose ( in )	1966:14:50140:50150	3810946	1	True				
ANR	3811104	CallExpression	fclose ( in )		3810946	0					
ANR	3811105	Callee	fclose		3810946	0					
ANR	3811106	Identifier	fclose		3810946	0					
ANR	3811107	ArgumentList	in		3810946	1					
ANR	3811108	Argument	in		3810946	0					
ANR	3811109	Identifier	in		3810946	0					
ANR	3811110	IfStatement	"if ( ( in = fopen ( argv [ 0 ] , ""r"" ) ) == 0 )"		3810946	1					
ANR	3811111	Condition	"( in = fopen ( argv [ 0 ] , ""r"" ) ) == 0"	1967:16:50168:50198	3810946	0	True				
ANR	3811112	EqualityExpression	"( in = fopen ( argv [ 0 ] , ""r"" ) ) == 0"		3810946	0		==			
ANR	3811113	AssignmentExpression	"in = fopen ( argv [ 0 ] , ""r"" )"		3810946	0		=			
ANR	3811114	Identifier	in		3810946	0					
ANR	3811115	CallExpression	"fopen ( argv [ 0 ] , ""r"" )"		3810946	1					
ANR	3811116	Callee	fopen		3810946	0					
ANR	3811117	Identifier	fopen		3810946	0					
ANR	3811118	ArgumentList	argv [ 0 ]		3810946	1					
ANR	3811119	Argument	argv [ 0 ]		3810946	0					
ANR	3811120	ArrayIndexing	argv [ 0 ]		3810946	0					
ANR	3811121	Identifier	argv		3810946	0					
ANR	3811122	PrimaryExpression	0		3810946	1					
ANR	3811123	Argument	"""r"""		3810946	1					
ANR	3811124	PrimaryExpression	"""r"""		3810946	0					
ANR	3811125	PrimaryExpression	0		3810946	1					
ANR	3811126	ExpressionStatement	"fprintf ( stderr , ""%s: unable to open ctype file %s\\n"" , prog , argv [ 0 ] )"	1968:14:50215:50305	3810946	1	True				
ANR	3811127	CallExpression	"fprintf ( stderr , ""%s: unable to open ctype file %s\\n"" , prog , argv [ 0 ] )"		3810946	0					
ANR	3811128	Callee	fprintf		3810946	0					
ANR	3811129	Identifier	fprintf		3810946	0					
ANR	3811130	ArgumentList	stderr		3810946	1					
ANR	3811131	Argument	stderr		3810946	0					
ANR	3811132	Identifier	stderr		3810946	0					
ANR	3811133	Argument	"""%s: unable to open ctype file %s\\n"""		3810946	1					
ANR	3811134	PrimaryExpression	"""%s: unable to open ctype file %s\\n"""		3810946	0					
ANR	3811135	Argument	prog		3810946	2					
ANR	3811136	Identifier	prog		3810946	0					
ANR	3811137	Argument	argv [ 0 ]		3810946	3					
ANR	3811138	ArrayIndexing	argv [ 0 ]		3810946	0					
ANR	3811139	Identifier	argv		3810946	0					
ANR	3811140	PrimaryExpression	0		3810946	1					
ANR	3811141	ElseStatement	else		3810946	0					
ANR	3811142	CompoundStatement		43:17:1106:1106	3810946	0					
ANR	3811143	ExpressionStatement	read_cdata ( in )	1971:16:50342:50356	3810946	0	True				
ANR	3811144	CallExpression	read_cdata ( in )		3810946	0					
ANR	3811145	Callee	read_cdata		3810946	0					
ANR	3811146	Identifier	read_cdata		3810946	0					
ANR	3811147	ArgumentList	in		3810946	1					
ANR	3811148	Argument	in		3810946	0					
ANR	3811149	Identifier	in		3810946	0					
ANR	3811150	ExpressionStatement	fclose ( in )	1972:16:50374:50384	3810946	1	True				
ANR	3811151	CallExpression	fclose ( in )		3810946	0					
ANR	3811152	Callee	fclose		3810946	0					
ANR	3811153	Identifier	fclose		3810946	0					
ANR	3811154	ArgumentList	in		3810946	1					
ANR	3811155	Argument	in		3810946	0					
ANR	3811156	Identifier	in		3810946	0					
ANR	3811157	ExpressionStatement	in = 0	1973:16:50402:50408	3810946	2	True				
ANR	3811158	AssignmentExpression	in = 0		3810946	0		=			
ANR	3811159	Identifier	in		3810946	0					
ANR	3811160	PrimaryExpression	0		3810946	1					
ANR	3811161	ExpressionStatement	argc --	1976:8:50435:50441	3810946	1	True				
ANR	3811162	PostIncDecOperationExpression	argc --		3810946	0					
ANR	3811163	Identifier	argc		3810946	0					
ANR	3811164	IncDec	--		3810946	1					
ANR	3811165	ExpressionStatement	argv ++	1977:8:50451:50457	3810946	2	True				
ANR	3811166	PostIncDecOperationExpression	argv ++		3810946	0					
ANR	3811167	Identifier	argv		3810946	0					
ANR	3811168	IncDec	++		3810946	1					
ANR	3811169	IfStatement	if ( opath == 0 )		3810946	8					
ANR	3811170	Condition	opath == 0	1980:8:50474:50483	3810946	0	True				
ANR	3811171	EqualityExpression	opath == 0		3810946	0		==			
ANR	3811172	Identifier	opath		3810946	0					
ANR	3811173	PrimaryExpression	0		3810946	1					
ANR	3811174	ExpressionStatement	"opath = ""."""	1981:6:50492:50503	3810946	1	True				
ANR	3811175	AssignmentExpression	"opath = ""."""		3810946	0		=			
ANR	3811176	Identifier	opath		3810946	0					
ANR	3811177	PrimaryExpression	"""."""		3810946	1					
ANR	3811178	ExpressionStatement	write_cdata ( opath )	1982:4:50509:50527	3810946	9	True				
ANR	3811179	CallExpression	write_cdata ( opath )		3810946	0					
ANR	3811180	Callee	write_cdata		3810946	0					
ANR	3811181	Identifier	write_cdata		3810946	0					
ANR	3811182	ArgumentList	opath		3810946	1					
ANR	3811183	Argument	opath		3810946	0					
ANR	3811184	Identifier	opath		3810946	0					
ANR	3811185	ReturnStatement	return 0 ;	1984:4:50534:50542	3810946	10	True				
ANR	3811186	PrimaryExpression	0		3810946	0					
ANR	3811187	ReturnType	int		3810946	1					
ANR	3811188	Identifier	main		3810946	2					
ANR	3811189	ParameterList	"int argc , char * argv [ ]"		3810946	3					
ANR	3811190	Parameter	int argc	1927:5:49193:49200	3810946	0	True				
ANR	3811191	ParameterType	int		3810946	0					
ANR	3811192	Identifier	argc		3810946	1					
ANR	3811193	Parameter	char * argv [ ]	1927:15:49203:49214	3810946	1	True				
ANR	3811194	ParameterType	char * [ ]		3810946	0					
ANR	3811195	Identifier	argv		3810946	1					
ANR	3811196	CFGEntryNode	ENTRY		3810946		True				
ANR	3811197	CFGExitNode	EXIT		3810946		True				
ANR	3811198	Symbol	argc		3810946						
ANR	3811199	Symbol	fopen		3810946						
ANR	3811200	Symbol	stdin		3810946						
ANR	3811201	Symbol	NULL		3810946						
ANR	3811202	Symbol	opath		3810946						
ANR	3811203	Symbol	in		3810946						
ANR	3811204	Symbol	* * argv		3810946						
ANR	3811205	Symbol	* argv		3810946						
ANR	3811206	Symbol	stderr		3810946						
ANR	3811207	Symbol	argv		3810946						
ANR	3811208	Symbol	prog		3810946						
