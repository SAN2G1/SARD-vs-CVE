command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3434112	File	data/converged/CVE-2015-8617_php-src/regcomp.c								
ANR	3434113	DeclStmt									
ANR	3434114	Decl							OnigCaseFoldType	OnigCaseFoldType	OnigDefaultCaseFoldFlag
ANR	3434115	Function	onig_get_default_case_fold_flag	34:0:1678:1776							
ANR	3434116	FunctionDef	onig_get_default_case_fold_flag ()		3434115	0					
ANR	3434117	CompoundStatement		36:0:1740:1776	3434115	0					
ANR	3434118	ReturnStatement	return OnigDefaultCaseFoldFlag ;	37:2:1744:1774	3434115	0	True				
ANR	3434119	Identifier	OnigDefaultCaseFoldFlag		3434115	0					
ANR	3434120	ReturnType	extern OnigCaseFoldType		3434115	1					
ANR	3434121	Identifier	onig_get_default_case_fold_flag		3434115	2					
ANR	3434122	ParameterList			3434115	3					
ANR	3434123	CFGEntryNode	ENTRY		3434115		True				
ANR	3434124	CFGExitNode	EXIT		3434115		True				
ANR	3434125	Symbol	OnigDefaultCaseFoldFlag		3434115						
ANR	3434126	Function	onig_set_default_case_fold_flag	40:0:1779:1913							
ANR	3434127	FunctionDef	onig_set_default_case_fold_flag (OnigCaseFoldType case_fold_flag)		3434126	0					
ANR	3434128	CompoundStatement		42:0:1855:1913	3434126	0					
ANR	3434129	ExpressionStatement	OnigDefaultCaseFoldFlag = case_fold_flag	43:2:1859:1899	3434126	0	True				
ANR	3434130	AssignmentExpression	OnigDefaultCaseFoldFlag = case_fold_flag		3434126	0		=			
ANR	3434131	Identifier	OnigDefaultCaseFoldFlag		3434126	0					
ANR	3434132	Identifier	case_fold_flag		3434126	1					
ANR	3434133	ReturnStatement	return 0 ;	44:2:1903:1911	3434126	1	True				
ANR	3434134	PrimaryExpression	0		3434126	0					
ANR	3434135	ReturnType	extern int		3434126	1					
ANR	3434136	Identifier	onig_set_default_case_fold_flag		3434126	2					
ANR	3434137	ParameterList	OnigCaseFoldType case_fold_flag		3434126	3					
ANR	3434138	Parameter	OnigCaseFoldType case_fold_flag	41:32:1822:1852	3434126	0	True				
ANR	3434139	ParameterType	OnigCaseFoldType		3434126	0					
ANR	3434140	Identifier	case_fold_flag		3434126	1					
ANR	3434141	CFGEntryNode	ENTRY		3434126		True				
ANR	3434142	CFGExitNode	EXIT		3434126		True				
ANR	3434143	Symbol	OnigDefaultCaseFoldFlag		3434126						
ANR	3434144	Symbol	case_fold_flag		3434126						
ANR	3434145	DeclStmt									
ANR	3434146	Decl							unsigned char	unsigned char [ WORD_ALIGNMENT_SIZE ]	PadBuf
ANR	3434147	Function	str_dup	52:0:2014:2253							
ANR	3434148	FunctionDef	"str_dup (UChar * s , UChar * end)"		3434147	0					
ANR	3434149	CompoundStatement		54:0:2058:2253	3434147	0					
ANR	3434150	IdentifierDeclStatement	int len = end - s ;	55:2:2062:2079	3434147	0	True				
ANR	3434151	IdentifierDecl	len = end - s		3434147	0					
ANR	3434152	IdentifierDeclType	int		3434147	0					
ANR	3434153	Identifier	len		3434147	1					
ANR	3434154	AssignmentExpression	len = end - s		3434147	2		=			
ANR	3434155	Identifier	len		3434147	0					
ANR	3434156	AdditiveExpression	end - s		3434147	1		-			
ANR	3434157	Identifier	end		3434147	0					
ANR	3434158	Identifier	s		3434147	1					
ANR	3434159	IfStatement	if ( len > 0 )		3434147	1					
ANR	3434160	Condition	len > 0	57:6:2088:2094	3434147	0	True				
ANR	3434161	RelationalExpression	len > 0		3434147	0		>			
ANR	3434162	Identifier	len		3434147	0					
ANR	3434163	PrimaryExpression	0		3434147	1					
ANR	3434164	CompoundStatement		5:4:44:80	3434147	1					
ANR	3434165	IdentifierDeclStatement	UChar * r = ( UChar * ) xmalloc ( len + 1 ) ;	58:4:2103:2139	3434147	0	True				
ANR	3434166	IdentifierDecl	* r = ( UChar * ) xmalloc ( len + 1 )		3434147	0					
ANR	3434167	IdentifierDeclType	UChar *		3434147	0					
ANR	3434168	Identifier	r		3434147	1					
ANR	3434169	AssignmentExpression	* r = ( UChar * ) xmalloc ( len + 1 )		3434147	2		=			
ANR	3434170	Identifier	r		3434147	0					
ANR	3434171	CastExpression	( UChar * ) xmalloc ( len + 1 )		3434147	1					
ANR	3434172	CastTarget	UChar *		3434147	0					
ANR	3434173	CallExpression	xmalloc ( len + 1 )		3434147	1					
ANR	3434174	Callee	xmalloc		3434147	0					
ANR	3434175	Identifier	xmalloc		3434147	0					
ANR	3434176	ArgumentList	len + 1		3434147	1					
ANR	3434177	Argument	len + 1		3434147	0					
ANR	3434178	AdditiveExpression	len + 1		3434147	0		+			
ANR	3434179	Identifier	len		3434147	0					
ANR	3434180	PrimaryExpression	1		3434147	1					
ANR	3434181	ExpressionStatement	CHECK_NULL_RETURN ( r )	59:4:2145:2165	3434147	1	True				
ANR	3434182	CallExpression	CHECK_NULL_RETURN ( r )		3434147	0					
ANR	3434183	Callee	CHECK_NULL_RETURN		3434147	0					
ANR	3434184	Identifier	CHECK_NULL_RETURN		3434147	0					
ANR	3434185	ArgumentList	r		3434147	1					
ANR	3434186	Argument	r		3434147	0					
ANR	3434187	Identifier	r		3434147	0					
ANR	3434188	ExpressionStatement	"xmemcpy ( r , s , len )"	60:4:2171:2189	3434147	2	True				
ANR	3434189	CallExpression	"xmemcpy ( r , s , len )"		3434147	0					
ANR	3434190	Callee	xmemcpy		3434147	0					
ANR	3434191	Identifier	xmemcpy		3434147	0					
ANR	3434192	ArgumentList	r		3434147	1					
ANR	3434193	Argument	r		3434147	0					
ANR	3434194	Identifier	r		3434147	0					
ANR	3434195	Argument	s		3434147	1					
ANR	3434196	Identifier	s		3434147	0					
ANR	3434197	Argument	len		3434147	2					
ANR	3434198	Identifier	len		3434147	0					
ANR	3434199	ExpressionStatement	r [ len ] = ( UChar ) 0	61:4:2195:2213	3434147	3	True				
ANR	3434200	AssignmentExpression	r [ len ] = ( UChar ) 0		3434147	0		=			
ANR	3434201	ArrayIndexing	r [ len ]		3434147	0					
ANR	3434202	Identifier	r		3434147	0					
ANR	3434203	Identifier	len		3434147	1					
ANR	3434204	CastExpression	( UChar ) 0		3434147	1					
ANR	3434205	CastTarget	UChar		3434147	0					
ANR	3434206	PrimaryExpression	0		3434147	1					
ANR	3434207	ReturnStatement	return r ;	62:4:2219:2227	3434147	4	True				
ANR	3434208	Identifier	r		3434147	0					
ANR	3434209	ElseStatement	else		3434147	0					
ANR	3434210	ReturnStatement	return NULL ;	64:7:2240:2251	3434147	0	True				
ANR	3434211	Identifier	NULL		3434147	0					
ANR	3434212	ReturnType	static UChar *		3434147	1					
ANR	3434213	Identifier	str_dup		3434147	2					
ANR	3434214	ParameterList	"UChar * s , UChar * end"		3434147	3					
ANR	3434215	Parameter	UChar * s	53:8:2036:2043	3434147	0	True				
ANR	3434216	ParameterType	UChar *		3434147	0					
ANR	3434217	Identifier	s		3434147	1					
ANR	3434218	Parameter	UChar * end	53:18:2046:2055	3434147	1	True				
ANR	3434219	ParameterType	UChar *		3434147	0					
ANR	3434220	Identifier	end		3434147	1					
ANR	3434221	CFGEntryNode	ENTRY		3434147		True				
ANR	3434222	CFGExitNode	EXIT		3434147		True				
ANR	3434223	Symbol	r		3434147						
ANR	3434224	Symbol	s		3434147						
ANR	3434225	Symbol	NULL		3434147						
ANR	3434226	Symbol	len		3434147						
ANR	3434227	Symbol	xmalloc		3434147						
ANR	3434228	Symbol	end		3434147						
ANR	3434229	Symbol	* r		3434147						
ANR	3434230	Symbol	* len		3434147						
ANR	3434231	Function	swap_node	67:0:2256:2691							
ANR	3434232	FunctionDef	"swap_node (Node * a , Node * b)"		3434231	0					
ANR	3434233	CompoundStatement		69:0:2296:2691	3434231	0					
ANR	3434234	IdentifierDeclStatement	Node c ;	70:2:2300:2306	3434231	0	True				
ANR	3434235	IdentifierDecl	c		3434231	0					
ANR	3434236	IdentifierDeclType	Node		3434231	0					
ANR	3434237	Identifier	c		3434231	1					
ANR	3434238	ExpressionStatement	c = * a	71:2:2310:2316	3434231	1	True				
ANR	3434239	AssignmentExpression	c = * a		3434231	0		=			
ANR	3434240	Identifier	c		3434231	0					
ANR	3434241	UnaryOperationExpression	* a		3434231	1					
ANR	3434242	UnaryOperator	*		3434231	0					
ANR	3434243	Identifier	a		3434231	1					
ANR	3434244	ExpressionStatement	* a = * b	71:10:2318:2325	3434231	2	True				
ANR	3434245	AssignmentExpression	* a = * b		3434231	0		=			
ANR	3434246	UnaryOperationExpression	* a		3434231	0					
ANR	3434247	UnaryOperator	*		3434231	0					
ANR	3434248	Identifier	a		3434231	1					
ANR	3434249	UnaryOperationExpression	* b		3434231	1					
ANR	3434250	UnaryOperator	*		3434231	0					
ANR	3434251	Identifier	b		3434231	1					
ANR	3434252	ExpressionStatement	* b = c	71:19:2327:2333	3434231	3	True				
ANR	3434253	AssignmentExpression	* b = c		3434231	0		=			
ANR	3434254	UnaryOperationExpression	* b		3434231	0					
ANR	3434255	UnaryOperator	*		3434231	0					
ANR	3434256	Identifier	b		3434231	1					
ANR	3434257	Identifier	c		3434231	1					
ANR	3434258	IfStatement	if ( NTYPE ( a ) == NT_STR )		3434231	4					
ANR	3434259	Condition	NTYPE ( a ) == NT_STR	73:6:2342:2359	3434231	0	True				
ANR	3434260	EqualityExpression	NTYPE ( a ) == NT_STR		3434231	0		==			
ANR	3434261	CallExpression	NTYPE ( a )		3434231	0					
ANR	3434262	Callee	NTYPE		3434231	0					
ANR	3434263	Identifier	NTYPE		3434231	0					
ANR	3434264	ArgumentList	a		3434231	1					
ANR	3434265	Argument	a		3434231	0					
ANR	3434266	Identifier	a		3434231	0					
ANR	3434267	Identifier	NT_STR		3434231	1					
ANR	3434268	CompoundStatement		6:4:71:92	3434231	1					
ANR	3434269	IdentifierDeclStatement	StrNode * sn = NSTR ( a ) ;	74:4:2368:2389	3434231	0	True				
ANR	3434270	IdentifierDecl	* sn = NSTR ( a )		3434231	0					
ANR	3434271	IdentifierDeclType	StrNode *		3434231	0					
ANR	3434272	Identifier	sn		3434231	1					
ANR	3434273	AssignmentExpression	* sn = NSTR ( a )		3434231	2		=			
ANR	3434274	Identifier	sn		3434231	0					
ANR	3434275	CallExpression	NSTR ( a )		3434231	1					
ANR	3434276	Callee	NSTR		3434231	0					
ANR	3434277	Identifier	NSTR		3434231	0					
ANR	3434278	ArgumentList	a		3434231	1					
ANR	3434279	Argument	a		3434231	0					
ANR	3434280	Identifier	a		3434231	0					
ANR	3434281	IfStatement	if ( sn -> capa == 0 )		3434231	1					
ANR	3434282	Condition	sn -> capa == 0	75:8:2399:2411	3434231	0	True				
ANR	3434283	EqualityExpression	sn -> capa == 0		3434231	0		==			
ANR	3434284	PtrMemberAccess	sn -> capa		3434231	0					
ANR	3434285	Identifier	sn		3434231	0					
ANR	3434286	Identifier	capa		3434231	1					
ANR	3434287	PrimaryExpression	0		3434231	1					
ANR	3434288	CompoundStatement		8:6:125:150	3434231	1					
ANR	3434289	IdentifierDeclStatement	int len = sn -> end - sn -> s ;	76:6:2422:2447	3434231	0	True				
ANR	3434290	IdentifierDecl	len = sn -> end - sn -> s		3434231	0					
ANR	3434291	IdentifierDeclType	int		3434231	0					
ANR	3434292	Identifier	len		3434231	1					
ANR	3434293	AssignmentExpression	len = sn -> end - sn -> s		3434231	2		=			
ANR	3434294	Identifier	len		3434231	0					
ANR	3434295	AdditiveExpression	sn -> end - sn -> s		3434231	1		-			
ANR	3434296	PtrMemberAccess	sn -> end		3434231	0					
ANR	3434297	Identifier	sn		3434231	0					
ANR	3434298	Identifier	end		3434231	1					
ANR	3434299	PtrMemberAccess	sn -> s		3434231	1					
ANR	3434300	Identifier	sn		3434231	0					
ANR	3434301	Identifier	s		3434231	1					
ANR	3434302	ExpressionStatement	sn -> s = sn -> buf	77:6:2455:2472	3434231	1	True				
ANR	3434303	AssignmentExpression	sn -> s = sn -> buf		3434231	0		=			
ANR	3434304	PtrMemberAccess	sn -> s		3434231	0					
ANR	3434305	Identifier	sn		3434231	0					
ANR	3434306	Identifier	s		3434231	1					
ANR	3434307	PtrMemberAccess	sn -> buf		3434231	1					
ANR	3434308	Identifier	sn		3434231	0					
ANR	3434309	Identifier	buf		3434231	1					
ANR	3434310	ExpressionStatement	sn -> end = sn -> s + len	78:6:2480:2501	3434231	2	True				
ANR	3434311	AssignmentExpression	sn -> end = sn -> s + len		3434231	0		=			
ANR	3434312	PtrMemberAccess	sn -> end		3434231	0					
ANR	3434313	Identifier	sn		3434231	0					
ANR	3434314	Identifier	end		3434231	1					
ANR	3434315	AdditiveExpression	sn -> s + len		3434231	1		+			
ANR	3434316	PtrMemberAccess	sn -> s		3434231	0					
ANR	3434317	Identifier	sn		3434231	0					
ANR	3434318	Identifier	s		3434231	1					
ANR	3434319	Identifier	len		3434231	1					
ANR	3434320	IfStatement	if ( NTYPE ( b ) == NT_STR )		3434231	5					
ANR	3434321	Condition	NTYPE ( b ) == NT_STR	82:6:2520:2537	3434231	0	True				
ANR	3434322	EqualityExpression	NTYPE ( b ) == NT_STR		3434231	0		==			
ANR	3434323	CallExpression	NTYPE ( b )		3434231	0					
ANR	3434324	Callee	NTYPE		3434231	0					
ANR	3434325	Identifier	NTYPE		3434231	0					
ANR	3434326	ArgumentList	b		3434231	1					
ANR	3434327	Argument	b		3434231	0					
ANR	3434328	Identifier	b		3434231	0					
ANR	3434329	Identifier	NT_STR		3434231	1					
ANR	3434330	CompoundStatement		15:4:249:270	3434231	1					
ANR	3434331	IdentifierDeclStatement	StrNode * sn = NSTR ( b ) ;	83:4:2546:2567	3434231	0	True				
ANR	3434332	IdentifierDecl	* sn = NSTR ( b )		3434231	0					
ANR	3434333	IdentifierDeclType	StrNode *		3434231	0					
ANR	3434334	Identifier	sn		3434231	1					
ANR	3434335	AssignmentExpression	* sn = NSTR ( b )		3434231	2		=			
ANR	3434336	Identifier	sn		3434231	0					
ANR	3434337	CallExpression	NSTR ( b )		3434231	1					
ANR	3434338	Callee	NSTR		3434231	0					
ANR	3434339	Identifier	NSTR		3434231	0					
ANR	3434340	ArgumentList	b		3434231	1					
ANR	3434341	Argument	b		3434231	0					
ANR	3434342	Identifier	b		3434231	0					
ANR	3434343	IfStatement	if ( sn -> capa == 0 )		3434231	1					
ANR	3434344	Condition	sn -> capa == 0	84:8:2577:2589	3434231	0	True				
ANR	3434345	EqualityExpression	sn -> capa == 0		3434231	0		==			
ANR	3434346	PtrMemberAccess	sn -> capa		3434231	0					
ANR	3434347	Identifier	sn		3434231	0					
ANR	3434348	Identifier	capa		3434231	1					
ANR	3434349	PrimaryExpression	0		3434231	1					
ANR	3434350	CompoundStatement		17:6:303:328	3434231	1					
ANR	3434351	IdentifierDeclStatement	int len = sn -> end - sn -> s ;	85:6:2600:2625	3434231	0	True				
ANR	3434352	IdentifierDecl	len = sn -> end - sn -> s		3434231	0					
ANR	3434353	IdentifierDeclType	int		3434231	0					
ANR	3434354	Identifier	len		3434231	1					
ANR	3434355	AssignmentExpression	len = sn -> end - sn -> s		3434231	2		=			
ANR	3434356	Identifier	len		3434231	0					
ANR	3434357	AdditiveExpression	sn -> end - sn -> s		3434231	1		-			
ANR	3434358	PtrMemberAccess	sn -> end		3434231	0					
ANR	3434359	Identifier	sn		3434231	0					
ANR	3434360	Identifier	end		3434231	1					
ANR	3434361	PtrMemberAccess	sn -> s		3434231	1					
ANR	3434362	Identifier	sn		3434231	0					
ANR	3434363	Identifier	s		3434231	1					
ANR	3434364	ExpressionStatement	sn -> s = sn -> buf	86:6:2633:2650	3434231	1	True				
ANR	3434365	AssignmentExpression	sn -> s = sn -> buf		3434231	0		=			
ANR	3434366	PtrMemberAccess	sn -> s		3434231	0					
ANR	3434367	Identifier	sn		3434231	0					
ANR	3434368	Identifier	s		3434231	1					
ANR	3434369	PtrMemberAccess	sn -> buf		3434231	1					
ANR	3434370	Identifier	sn		3434231	0					
ANR	3434371	Identifier	buf		3434231	1					
ANR	3434372	ExpressionStatement	sn -> end = sn -> s + len	87:6:2658:2679	3434231	2	True				
ANR	3434373	AssignmentExpression	sn -> end = sn -> s + len		3434231	0		=			
ANR	3434374	PtrMemberAccess	sn -> end		3434231	0					
ANR	3434375	Identifier	sn		3434231	0					
ANR	3434376	Identifier	end		3434231	1					
ANR	3434377	AdditiveExpression	sn -> s + len		3434231	1		+			
ANR	3434378	PtrMemberAccess	sn -> s		3434231	0					
ANR	3434379	Identifier	sn		3434231	0					
ANR	3434380	Identifier	s		3434231	1					
ANR	3434381	Identifier	len		3434231	1					
ANR	3434382	ReturnType	static void		3434231	1					
ANR	3434383	Identifier	swap_node		3434231	2					
ANR	3434384	ParameterList	"Node * a , Node * b"		3434231	3					
ANR	3434385	Parameter	Node * a	68:10:2278:2284	3434231	0	True				
ANR	3434386	ParameterType	Node *		3434231	0					
ANR	3434387	Identifier	a		3434231	1					
ANR	3434388	Parameter	Node * b	68:19:2287:2293	3434231	1	True				
ANR	3434389	ParameterType	Node *		3434231	0					
ANR	3434390	Identifier	b		3434231	1					
ANR	3434391	CFGEntryNode	ENTRY		3434231		True				
ANR	3434392	CFGExitNode	EXIT		3434231		True				
ANR	3434393	Symbol	a		3434231						
ANR	3434394	Symbol	b		3434231						
ANR	3434395	Symbol	* sn		3434231						
ANR	3434396	Symbol	c		3434231						
ANR	3434397	Symbol	sn -> buf		3434231						
ANR	3434398	Symbol	NSTR		3434231						
ANR	3434399	Symbol	* a		3434231						
ANR	3434400	Symbol	* b		3434231						
ANR	3434401	Symbol	sn -> s		3434231						
ANR	3434402	Symbol	len		3434231						
ANR	3434403	Symbol	sn -> capa		3434231						
ANR	3434404	Symbol	NTYPE		3434231						
ANR	3434405	Symbol	sn		3434231						
ANR	3434406	Symbol	sn -> end		3434231						
ANR	3434407	Symbol	NT_STR		3434231						
ANR	3434408	Function	distance_add	92:0:2694:2978							
ANR	3434409	FunctionDef	"distance_add (OnigDistance d1 , OnigDistance d2)"		3434408	0					
ANR	3434410	CompoundStatement		94:0:2761:2978	3434408	0					
ANR	3434411	IfStatement	if ( d1 == ONIG_INFINITE_DISTANCE || d2 == ONIG_INFINITE_DISTANCE )		3434408	0					
ANR	3434412	Condition	d1 == ONIG_INFINITE_DISTANCE || d2 == ONIG_INFINITE_DISTANCE	95:6:2769:2828	3434408	0	True				
ANR	3434413	OrExpression	d1 == ONIG_INFINITE_DISTANCE || d2 == ONIG_INFINITE_DISTANCE		3434408	0		||			
ANR	3434414	EqualityExpression	d1 == ONIG_INFINITE_DISTANCE		3434408	0		==			
ANR	3434415	Identifier	d1		3434408	0					
ANR	3434416	Identifier	ONIG_INFINITE_DISTANCE		3434408	1					
ANR	3434417	EqualityExpression	d2 == ONIG_INFINITE_DISTANCE		3434408	1		==			
ANR	3434418	Identifier	d2		3434408	0					
ANR	3434419	Identifier	ONIG_INFINITE_DISTANCE		3434408	1					
ANR	3434420	ReturnStatement	return ONIG_INFINITE_DISTANCE ;	96:4:2835:2864	3434408	1	True				
ANR	3434421	Identifier	ONIG_INFINITE_DISTANCE		3434408	0					
ANR	3434422	ElseStatement	else		3434408	0					
ANR	3434423	CompoundStatement		4:7:111:111	3434408	0					
ANR	3434424	IfStatement	if ( d1 <= ONIG_INFINITE_DISTANCE - d2 )		3434408	0					
ANR	3434425	Condition	d1 <= ONIG_INFINITE_DISTANCE - d2	98:8:2883:2915	3434408	0	True				
ANR	3434426	RelationalExpression	d1 <= ONIG_INFINITE_DISTANCE - d2		3434408	0		<=			
ANR	3434427	Identifier	d1		3434408	0					
ANR	3434428	AdditiveExpression	ONIG_INFINITE_DISTANCE - d2		3434408	1		-			
ANR	3434429	Identifier	ONIG_INFINITE_DISTANCE		3434408	0					
ANR	3434430	Identifier	d2		3434408	1					
ANR	3434431	ReturnStatement	return d1 + d2 ;	98:43:2918:2932	3434408	1	True				
ANR	3434432	AdditiveExpression	d1 + d2		3434408	0		+			
ANR	3434433	Identifier	d1		3434408	0					
ANR	3434434	Identifier	d2		3434408	1					
ANR	3434435	ElseStatement	else		3434408	0					
ANR	3434436	ReturnStatement	return ONIG_INFINITE_DISTANCE ;	99:9:2943:2972	3434408	0	True				
ANR	3434437	Identifier	ONIG_INFINITE_DISTANCE		3434408	0					
ANR	3434438	ReturnType	static OnigDistance		3434408	1					
ANR	3434439	Identifier	distance_add		3434408	2					
ANR	3434440	ParameterList	"OnigDistance d1 , OnigDistance d2"		3434408	3					
ANR	3434441	Parameter	OnigDistance d1	93:13:2727:2741	3434408	0	True				
ANR	3434442	ParameterType	OnigDistance		3434408	0					
ANR	3434443	Identifier	d1		3434408	1					
ANR	3434444	Parameter	OnigDistance d2	93:30:2744:2758	3434408	1	True				
ANR	3434445	ParameterType	OnigDistance		3434408	0					
ANR	3434446	Identifier	d2		3434408	1					
ANR	3434447	CFGEntryNode	ENTRY		3434408		True				
ANR	3434448	CFGExitNode	EXIT		3434408		True				
ANR	3434449	Symbol	ONIG_INFINITE_DISTANCE		3434408						
ANR	3434450	Symbol	d1		3434408						
ANR	3434451	Symbol	d2		3434408						
ANR	3434452	Function	distance_multiply	103:0:2981:3167							
ANR	3434453	FunctionDef	"distance_multiply (OnigDistance d , int m)"		3434452	0					
ANR	3434454	CompoundStatement		105:0:3042:3167	3434452	0					
ANR	3434455	IfStatement	if ( m == 0 )		3434452	0					
ANR	3434456	Condition	m == 0	106:6:3050:3055	3434452	0	True				
ANR	3434457	EqualityExpression	m == 0		3434452	0		==			
ANR	3434458	Identifier	m		3434452	0					
ANR	3434459	PrimaryExpression	0		3434452	1					
ANR	3434460	ReturnStatement	return 0 ;	106:14:3058:3066	3434452	1	True				
ANR	3434461	PrimaryExpression	0		3434452	0					
ANR	3434462	IfStatement	if ( d < ONIG_INFINITE_DISTANCE / m )		3434452	1					
ANR	3434463	Condition	d < ONIG_INFINITE_DISTANCE / m	108:6:3075:3104	3434452	0	True				
ANR	3434464	RelationalExpression	d < ONIG_INFINITE_DISTANCE / m		3434452	0		<			
ANR	3434465	Identifier	d		3434452	0					
ANR	3434466	MultiplicativeExpression	ONIG_INFINITE_DISTANCE / m		3434452	1		/			
ANR	3434467	Identifier	ONIG_INFINITE_DISTANCE		3434452	0					
ANR	3434468	Identifier	m		3434452	1					
ANR	3434469	ReturnStatement	return d * m ;	109:4:3111:3123	3434452	1	True				
ANR	3434470	MultiplicativeExpression	d * m		3434452	0		*			
ANR	3434471	Identifier	d		3434452	0					
ANR	3434472	Identifier	m		3434452	1					
ANR	3434473	ElseStatement	else		3434452	0					
ANR	3434474	ReturnStatement	return ONIG_INFINITE_DISTANCE ;	111:4:3136:3165	3434452	0	True				
ANR	3434475	Identifier	ONIG_INFINITE_DISTANCE		3434452	0					
ANR	3434476	ReturnType	static OnigDistance		3434452	1					
ANR	3434477	Identifier	distance_multiply		3434452	2					
ANR	3434478	ParameterList	"OnigDistance d , int m"		3434452	3					
ANR	3434479	Parameter	OnigDistance d	104:18:3019:3032	3434452	0	True				
ANR	3434480	ParameterType	OnigDistance		3434452	0					
ANR	3434481	Identifier	d		3434452	1					
ANR	3434482	Parameter	int m	104:34:3035:3039	3434452	1	True				
ANR	3434483	ParameterType	int		3434452	0					
ANR	3434484	Identifier	m		3434452	1					
ANR	3434485	CFGEntryNode	ENTRY		3434452		True				
ANR	3434486	CFGExitNode	EXIT		3434452		True				
ANR	3434487	Symbol	ONIG_INFINITE_DISTANCE		3434452						
ANR	3434488	Symbol	d		3434452						
ANR	3434489	Symbol	m		3434452						
ANR	3434490	Function	bitset_is_empty	114:0:3170:3312							
ANR	3434491	FunctionDef	bitset_is_empty (BitSetRef bs)		3434490	0					
ANR	3434492	CompoundStatement		116:0:3211:3312	3434490	0					
ANR	3434493	IdentifierDeclStatement	int i ;	117:2:3215:3220	3434490	0	True				
ANR	3434494	IdentifierDecl	i		3434490	0					
ANR	3434495	IdentifierDeclType	int		3434490	0					
ANR	3434496	Identifier	i		3434490	1					
ANR	3434497	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		3434490	1					
ANR	3434498	ForInit	i = 0 ;	118:7:3229:3234	3434490	0	True				
ANR	3434499	AssignmentExpression	i = 0		3434490	0		=			
ANR	3434500	Identifier	i		3434490	0					
ANR	3434501	PrimaryExpression	0		3434490	1					
ANR	3434502	Condition	i < ( int ) BITSET_SIZE	118:14:3236:3256	3434490	1	True				
ANR	3434503	RelationalExpression	i < ( int ) BITSET_SIZE		3434490	0		<			
ANR	3434504	Identifier	i		3434490	0					
ANR	3434505	CastExpression	( int ) BITSET_SIZE		3434490	1					
ANR	3434506	CastTarget	int		3434490	0					
ANR	3434507	Identifier	BITSET_SIZE		3434490	1					
ANR	3434508	PostIncDecOperationExpression	i ++	118:37:3259:3261	3434490	2	True				
ANR	3434509	Identifier	i		3434490	0					
ANR	3434510	IncDec	++		3434490	1					
ANR	3434511	CompoundStatement		3:42:52:52	3434490	3					
ANR	3434512	IfStatement	if ( bs [ i ] != 0 )		3434490	0					
ANR	3434513	Condition	bs [ i ] != 0	119:8:3274:3283	3434490	0	True				
ANR	3434514	EqualityExpression	bs [ i ] != 0		3434490	0		!=			
ANR	3434515	ArrayIndexing	bs [ i ]		3434490	0					
ANR	3434516	Identifier	bs		3434490	0					
ANR	3434517	Identifier	i		3434490	1					
ANR	3434518	PrimaryExpression	0		3434490	1					
ANR	3434519	ReturnStatement	return 0 ;	119:20:3286:3294	3434490	1	True				
ANR	3434520	PrimaryExpression	0		3434490	0					
ANR	3434521	ReturnStatement	return 1 ;	121:2:3302:3310	3434490	2	True				
ANR	3434522	PrimaryExpression	1		3434490	0					
ANR	3434523	ReturnType	static int		3434490	1					
ANR	3434524	Identifier	bitset_is_empty		3434490	2					
ANR	3434525	ParameterList	BitSetRef bs		3434490	3					
ANR	3434526	Parameter	BitSetRef bs	115:16:3197:3208	3434490	0	True				
ANR	3434527	ParameterType	BitSetRef		3434490	0					
ANR	3434528	Identifier	bs		3434490	1					
ANR	3434529	CFGEntryNode	ENTRY		3434490		True				
ANR	3434530	CFGExitNode	EXIT		3434490		True				
ANR	3434531	Symbol	bs		3434490						
ANR	3434532	Symbol	* i		3434490						
ANR	3434533	Symbol	* bs		3434490						
ANR	3434534	Symbol	BITSET_SIZE		3434490						
ANR	3434535	Symbol	i		3434490						
ANR	3434536	Function	bitset_on_num	125:0:3333:3486							
ANR	3434537	FunctionDef	bitset_on_num (BitSetRef bs)		3434536	0					
ANR	3434538	CompoundStatement		127:0:3372:3486	3434536	0					
ANR	3434539	IdentifierDeclStatement	"int i , n ;"	128:2:3376:3384	3434536	0	True				
ANR	3434540	IdentifierDecl	i		3434536	0					
ANR	3434541	IdentifierDeclType	int		3434536	0					
ANR	3434542	Identifier	i		3434536	1					
ANR	3434543	IdentifierDecl	n		3434536	1					
ANR	3434544	IdentifierDeclType	int		3434536	0					
ANR	3434545	Identifier	n		3434536	1					
ANR	3434546	ExpressionStatement	n = 0	130:2:3389:3394	3434536	1	True				
ANR	3434547	AssignmentExpression	n = 0		3434536	0		=			
ANR	3434548	Identifier	n		3434536	0					
ANR	3434549	PrimaryExpression	0		3434536	1					
ANR	3434550	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		3434536	2					
ANR	3434551	ForInit	i = 0 ;	131:7:3403:3408	3434536	0	True				
ANR	3434552	AssignmentExpression	i = 0		3434536	0		=			
ANR	3434553	Identifier	i		3434536	0					
ANR	3434554	PrimaryExpression	0		3434536	1					
ANR	3434555	Condition	i < SINGLE_BYTE_SIZE	131:14:3410:3429	3434536	1	True				
ANR	3434556	RelationalExpression	i < SINGLE_BYTE_SIZE		3434536	0		<			
ANR	3434557	Identifier	i		3434536	0					
ANR	3434558	Identifier	SINGLE_BYTE_SIZE		3434536	1					
ANR	3434559	PostIncDecOperationExpression	i ++	131:36:3432:3434	3434536	2	True				
ANR	3434560	Identifier	i		3434536	0					
ANR	3434561	IncDec	++		3434536	1					
ANR	3434562	CompoundStatement		5:41:64:64	3434536	3					
ANR	3434563	IfStatement	"if ( BITSET_AT ( bs , i ) )"		3434536	0					
ANR	3434564	Condition	"BITSET_AT ( bs , i )"	132:8:3447:3462	3434536	0	True				
ANR	3434565	CallExpression	"BITSET_AT ( bs , i )"		3434536	0					
ANR	3434566	Callee	BITSET_AT		3434536	0					
ANR	3434567	Identifier	BITSET_AT		3434536	0					
ANR	3434568	ArgumentList	bs		3434536	1					
ANR	3434569	Argument	bs		3434536	0					
ANR	3434570	Identifier	bs		3434536	0					
ANR	3434571	Argument	i		3434536	1					
ANR	3434572	Identifier	i		3434536	0					
ANR	3434573	ExpressionStatement	n ++	132:26:3465:3468	3434536	1	True				
ANR	3434574	PostIncDecOperationExpression	n ++		3434536	0					
ANR	3434575	Identifier	n		3434536	0					
ANR	3434576	IncDec	++		3434536	1					
ANR	3434577	ReturnStatement	return n ;	134:2:3476:3484	3434536	3	True				
ANR	3434578	Identifier	n		3434536	0					
ANR	3434579	ReturnType	static int		3434536	1					
ANR	3434580	Identifier	bitset_on_num		3434536	2					
ANR	3434581	ParameterList	BitSetRef bs		3434536	3					
ANR	3434582	Parameter	BitSetRef bs	126:14:3358:3369	3434536	0	True				
ANR	3434583	ParameterType	BitSetRef		3434536	0					
ANR	3434584	Identifier	bs		3434536	1					
ANR	3434585	CFGEntryNode	ENTRY		3434536		True				
ANR	3434586	CFGExitNode	EXIT		3434536		True				
ANR	3434587	Symbol	SINGLE_BYTE_SIZE		3434536						
ANR	3434588	Symbol	bs		3434536						
ANR	3434589	Symbol	BITSET_AT		3434536						
ANR	3434590	Symbol	i		3434536						
ANR	3434591	Symbol	n		3434536						
ANR	3434592	Function	onig_bbuf_init	138:0:3496:3754							
ANR	3434593	FunctionDef	"onig_bbuf_init (BBuf * buf , int size)"		3434592	0					
ANR	3434594	CompoundStatement		140:0:3543:3754	3434592	0					
ANR	3434595	IfStatement	if ( size <= 0 )		3434592	0					
ANR	3434596	Condition	size <= 0	141:6:3551:3559	3434592	0	True				
ANR	3434597	RelationalExpression	size <= 0		3434592	0		<=			
ANR	3434598	Identifier	size		3434592	0					
ANR	3434599	PrimaryExpression	0		3434592	1					
ANR	3434600	CompoundStatement		2:17:18:18	3434592	1					
ANR	3434601	ExpressionStatement	size = 0	142:4:3568:3578	3434592	0	True				
ANR	3434602	AssignmentExpression	size = 0		3434592	0		=			
ANR	3434603	Identifier	size		3434592	0					
ANR	3434604	PrimaryExpression	0		3434592	1					
ANR	3434605	ExpressionStatement	buf -> p = NULL	143:4:3584:3597	3434592	1	True				
ANR	3434606	AssignmentExpression	buf -> p = NULL		3434592	0		=			
ANR	3434607	PtrMemberAccess	buf -> p		3434592	0					
ANR	3434608	Identifier	buf		3434592	0					
ANR	3434609	Identifier	p		3434592	1					
ANR	3434610	Identifier	NULL		3434592	1					
ANR	3434611	ElseStatement	else		3434592	0					
ANR	3434612	CompoundStatement		6:7:66:66	3434592	0					
ANR	3434613	ExpressionStatement	buf -> p = ( UChar * ) xmalloc ( size )	146:4:3616:3647	3434592	0	True				
ANR	3434614	AssignmentExpression	buf -> p = ( UChar * ) xmalloc ( size )		3434592	0		=			
ANR	3434615	PtrMemberAccess	buf -> p		3434592	0					
ANR	3434616	Identifier	buf		3434592	0					
ANR	3434617	Identifier	p		3434592	1					
ANR	3434618	CastExpression	( UChar * ) xmalloc ( size )		3434592	1					
ANR	3434619	CastTarget	UChar *		3434592	0					
ANR	3434620	CallExpression	xmalloc ( size )		3434592	1					
ANR	3434621	Callee	xmalloc		3434592	0					
ANR	3434622	Identifier	xmalloc		3434592	0					
ANR	3434623	ArgumentList	size		3434592	1					
ANR	3434624	Argument	size		3434592	0					
ANR	3434625	Identifier	size		3434592	0					
ANR	3434626	IfStatement	if ( IS_NULL ( buf -> p ) )		3434592	1					
ANR	3434627	Condition	IS_NULL ( buf -> p )	147:8:3657:3671	3434592	0	True				
ANR	3434628	CallExpression	IS_NULL ( buf -> p )		3434592	0					
ANR	3434629	Callee	IS_NULL		3434592	0					
ANR	3434630	Identifier	IS_NULL		3434592	0					
ANR	3434631	ArgumentList	buf -> p		3434592	1					
ANR	3434632	Argument	buf -> p		3434592	0					
ANR	3434633	PtrMemberAccess	buf -> p		3434592	0					
ANR	3434634	Identifier	buf		3434592	0					
ANR	3434635	Identifier	p		3434592	1					
ANR	3434636	ReturnStatement	return ( ONIGERR_MEMORY ) ;	147:25:3674:3696	3434592	1	True				
ANR	3434637	Identifier	ONIGERR_MEMORY		3434592	0					
ANR	3434638	ExpressionStatement	buf -> alloc = size	150:2:3705:3722	3434592	1	True				
ANR	3434639	AssignmentExpression	buf -> alloc = size		3434592	0		=			
ANR	3434640	PtrMemberAccess	buf -> alloc		3434592	0					
ANR	3434641	Identifier	buf		3434592	0					
ANR	3434642	Identifier	alloc		3434592	1					
ANR	3434643	Identifier	size		3434592	1					
ANR	3434644	ExpressionStatement	buf -> used = 0	151:2:3726:3740	3434592	2	True				
ANR	3434645	AssignmentExpression	buf -> used = 0		3434592	0		=			
ANR	3434646	PtrMemberAccess	buf -> used		3434592	0					
ANR	3434647	Identifier	buf		3434592	0					
ANR	3434648	Identifier	used		3434592	1					
ANR	3434649	PrimaryExpression	0		3434592	1					
ANR	3434650	ReturnStatement	return 0 ;	152:2:3744:3752	3434592	3	True				
ANR	3434651	PrimaryExpression	0		3434592	0					
ANR	3434652	ReturnType	extern int		3434592	1					
ANR	3434653	Identifier	onig_bbuf_init		3434592	2					
ANR	3434654	ParameterList	"BBuf * buf , int size"		3434592	3					
ANR	3434655	Parameter	BBuf * buf	139:15:3522:3530	3434592	0	True				
ANR	3434656	ParameterType	BBuf *		3434592	0					
ANR	3434657	Identifier	buf		3434592	1					
ANR	3434658	Parameter	int size	139:26:3533:3540	3434592	1	True				
ANR	3434659	ParameterType	int		3434592	0					
ANR	3434660	Identifier	size		3434592	1					
ANR	3434661	CFGEntryNode	ENTRY		3434592		True				
ANR	3434662	CFGExitNode	EXIT		3434592		True				
ANR	3434663	Symbol	buf -> alloc		3434592						
ANR	3434664	Symbol	buf		3434592						
ANR	3434665	Symbol	* buf		3434592						
ANR	3434666	Symbol	NULL		3434592						
ANR	3434667	Symbol	size		3434592						
ANR	3434668	Symbol	IS_NULL		3434592						
ANR	3434669	Symbol	xmalloc		3434592						
ANR	3434670	Symbol	ONIGERR_MEMORY		3434592						
ANR	3434671	Symbol	buf -> used		3434592						
ANR	3434672	Symbol	buf -> p		3434592						
ANR	3434673	Function	unset_addr_list_init	158:0:3782:4028							
ANR	3434674	FunctionDef	"unset_addr_list_init (UnsetAddrList * uslist , int size)"		3434673	0					
ANR	3434675	CompoundStatement		160:0:3847:4028	3434673	0					
ANR	3434676	IdentifierDeclStatement	UnsetAddr * p ;	161:2:3851:3863	3434673	0	True				
ANR	3434677	IdentifierDecl	* p		3434673	0					
ANR	3434678	IdentifierDeclType	UnsetAddr *		3434673	0					
ANR	3434679	Identifier	p		3434673	1					
ANR	3434680	ExpressionStatement	p = ( UnsetAddr * ) xmalloc ( sizeof ( UnsetAddr ) * size )	163:2:3868:3917	3434673	1	True				
ANR	3434681	AssignmentExpression	p = ( UnsetAddr * ) xmalloc ( sizeof ( UnsetAddr ) * size )		3434673	0		=			
ANR	3434682	Identifier	p		3434673	0					
ANR	3434683	CastExpression	( UnsetAddr * ) xmalloc ( sizeof ( UnsetAddr ) * size )		3434673	1					
ANR	3434684	CastTarget	UnsetAddr *		3434673	0					
ANR	3434685	CallExpression	xmalloc ( sizeof ( UnsetAddr ) * size )		3434673	1					
ANR	3434686	Callee	xmalloc		3434673	0					
ANR	3434687	Identifier	xmalloc		3434673	0					
ANR	3434688	ArgumentList	sizeof ( UnsetAddr ) * size		3434673	1					
ANR	3434689	Argument	sizeof ( UnsetAddr ) * size		3434673	0					
ANR	3434690	MultiplicativeExpression	sizeof ( UnsetAddr ) * size		3434673	0		*			
ANR	3434691	SizeofExpression	sizeof ( UnsetAddr )		3434673	0					
ANR	3434692	Sizeof	sizeof		3434673	0					
ANR	3434693	SizeofOperand	UnsetAddr		3434673	1					
ANR	3434694	Identifier	size		3434673	1					
ANR	3434695	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	164:2:3921:3948	3434673	2	True				
ANR	3434696	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		3434673	0					
ANR	3434697	Callee	CHECK_NULL_RETURN_MEMERR		3434673	0					
ANR	3434698	Identifier	CHECK_NULL_RETURN_MEMERR		3434673	0					
ANR	3434699	ArgumentList	p		3434673	1					
ANR	3434700	Argument	p		3434673	0					
ANR	3434701	Identifier	p		3434673	0					
ANR	3434702	ExpressionStatement	uslist -> num = 0	165:2:3952:3969	3434673	3	True				
ANR	3434703	AssignmentExpression	uslist -> num = 0		3434673	0		=			
ANR	3434704	PtrMemberAccess	uslist -> num		3434673	0					
ANR	3434705	Identifier	uslist		3434673	0					
ANR	3434706	Identifier	num		3434673	1					
ANR	3434707	PrimaryExpression	0		3434673	1					
ANR	3434708	ExpressionStatement	uslist -> alloc = size	166:2:3973:3993	3434673	4	True				
ANR	3434709	AssignmentExpression	uslist -> alloc = size		3434673	0		=			
ANR	3434710	PtrMemberAccess	uslist -> alloc		3434673	0					
ANR	3434711	Identifier	uslist		3434673	0					
ANR	3434712	Identifier	alloc		3434673	1					
ANR	3434713	Identifier	size		3434673	1					
ANR	3434714	ExpressionStatement	uslist -> us = p	167:2:3997:4014	3434673	5	True				
ANR	3434715	AssignmentExpression	uslist -> us = p		3434673	0		=			
ANR	3434716	PtrMemberAccess	uslist -> us		3434673	0					
ANR	3434717	Identifier	uslist		3434673	0					
ANR	3434718	Identifier	us		3434673	1					
ANR	3434719	Identifier	p		3434673	1					
ANR	3434720	ReturnStatement	return 0 ;	168:2:4018:4026	3434673	6	True				
ANR	3434721	PrimaryExpression	0		3434673	0					
ANR	3434722	ReturnType	static int		3434673	1					
ANR	3434723	Identifier	unset_addr_list_init		3434673	2					
ANR	3434724	ParameterList	"UnsetAddrList * uslist , int size"		3434673	3					
ANR	3434725	Parameter	UnsetAddrList * uslist	159:21:3814:3834	3434673	0	True				
ANR	3434726	ParameterType	UnsetAddrList *		3434673	0					
ANR	3434727	Identifier	uslist		3434673	1					
ANR	3434728	Parameter	int size	159:44:3837:3844	3434673	1	True				
ANR	3434729	ParameterType	int		3434673	0					
ANR	3434730	Identifier	size		3434673	1					
ANR	3434731	CFGEntryNode	ENTRY		3434673		True				
ANR	3434732	CFGExitNode	EXIT		3434673		True				
ANR	3434733	Symbol	p		3434673						
ANR	3434734	Symbol	uslist -> num		3434673						
ANR	3434735	Symbol	uslist -> alloc		3434673						
ANR	3434736	Symbol	uslist		3434673						
ANR	3434737	Symbol	size		3434673						
ANR	3434738	Symbol	xmalloc		3434673						
ANR	3434739	Symbol	* uslist		3434673						
ANR	3434740	Symbol	uslist -> us		3434673						
ANR	3434741	Function	unset_addr_list_end	171:0:4031:4142							
ANR	3434742	FunctionDef	unset_addr_list_end (UnsetAddrList * uslist)		3434741	0					
ANR	3434743	CompoundStatement		173:0:4086:4142	3434741	0					
ANR	3434744	IfStatement	if ( IS_NOT_NULL ( uslist -> us ) )		3434741	0					
ANR	3434745	Condition	IS_NOT_NULL ( uslist -> us )	174:6:4094:4116	3434741	0	True				
ANR	3434746	CallExpression	IS_NOT_NULL ( uslist -> us )		3434741	0					
ANR	3434747	Callee	IS_NOT_NULL		3434741	0					
ANR	3434748	Identifier	IS_NOT_NULL		3434741	0					
ANR	3434749	ArgumentList	uslist -> us		3434741	1					
ANR	3434750	Argument	uslist -> us		3434741	0					
ANR	3434751	PtrMemberAccess	uslist -> us		3434741	0					
ANR	3434752	Identifier	uslist		3434741	0					
ANR	3434753	Identifier	us		3434741	1					
ANR	3434754	ExpressionStatement	xfree ( uslist -> us )	175:4:4123:4140	3434741	1	True				
ANR	3434755	CallExpression	xfree ( uslist -> us )		3434741	0					
ANR	3434756	Callee	xfree		3434741	0					
ANR	3434757	Identifier	xfree		3434741	0					
ANR	3434758	ArgumentList	uslist -> us		3434741	1					
ANR	3434759	Argument	uslist -> us		3434741	0					
ANR	3434760	PtrMemberAccess	uslist -> us		3434741	0					
ANR	3434761	Identifier	uslist		3434741	0					
ANR	3434762	Identifier	us		3434741	1					
ANR	3434763	ReturnType	static void		3434741	1					
ANR	3434764	Identifier	unset_addr_list_end		3434741	2					
ANR	3434765	ParameterList	UnsetAddrList * uslist		3434741	3					
ANR	3434766	Parameter	UnsetAddrList * uslist	172:20:4063:4083	3434741	0	True				
ANR	3434767	ParameterType	UnsetAddrList *		3434741	0					
ANR	3434768	Identifier	uslist		3434741	1					
ANR	3434769	CFGEntryNode	ENTRY		3434741		True				
ANR	3434770	CFGExitNode	EXIT		3434741		True				
ANR	3434771	Symbol	uslist		3434741						
ANR	3434772	Symbol	IS_NOT_NULL		3434741						
ANR	3434773	Symbol	* uslist		3434741						
ANR	3434774	Symbol	uslist -> us		3434741						
ANR	3434775	Function	unset_addr_list_add	178:0:4145:4599							
ANR	3434776	FunctionDef	"unset_addr_list_add (UnsetAddrList * uslist , int offset , struct _Node * node)"		3434775	0					
ANR	3434777	CompoundStatement		180:0:4231:4599	3434775	0					
ANR	3434778	IdentifierDeclStatement	UnsetAddr * p ;	181:2:4235:4247	3434775	0	True				
ANR	3434779	IdentifierDecl	* p		3434775	0					
ANR	3434780	IdentifierDeclType	UnsetAddr *		3434775	0					
ANR	3434781	Identifier	p		3434775	1					
ANR	3434782	IdentifierDeclStatement	int size ;	182:2:4251:4259	3434775	1	True				
ANR	3434783	IdentifierDecl	size		3434775	0					
ANR	3434784	IdentifierDeclType	int		3434775	0					
ANR	3434785	Identifier	size		3434775	1					
ANR	3434786	IfStatement	if ( uslist -> num >= uslist -> alloc )		3434775	2					
ANR	3434787	Condition	uslist -> num >= uslist -> alloc	184:6:4268:4295	3434775	0	True				
ANR	3434788	RelationalExpression	uslist -> num >= uslist -> alloc		3434775	0		>=			
ANR	3434789	PtrMemberAccess	uslist -> num		3434775	0					
ANR	3434790	Identifier	uslist		3434775	0					
ANR	3434791	Identifier	num		3434775	1					
ANR	3434792	PtrMemberAccess	uslist -> alloc		3434775	1					
ANR	3434793	Identifier	uslist		3434775	0					
ANR	3434794	Identifier	alloc		3434775	1					
ANR	3434795	CompoundStatement		5:36:66:66	3434775	1					
ANR	3434796	ExpressionStatement	size = uslist -> alloc * 2	185:4:4304:4328	3434775	0	True				
ANR	3434797	AssignmentExpression	size = uslist -> alloc * 2		3434775	0		=			
ANR	3434798	Identifier	size		3434775	0					
ANR	3434799	MultiplicativeExpression	uslist -> alloc * 2		3434775	1		*			
ANR	3434800	PtrMemberAccess	uslist -> alloc		3434775	0					
ANR	3434801	Identifier	uslist		3434775	0					
ANR	3434802	Identifier	alloc		3434775	1					
ANR	3434803	PrimaryExpression	2		3434775	1					
ANR	3434804	ExpressionStatement	"p = ( UnsetAddr * ) xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"	186:4:4334:4397	3434775	1	True				
ANR	3434805	AssignmentExpression	"p = ( UnsetAddr * ) xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"		3434775	0		=			
ANR	3434806	Identifier	p		3434775	0					
ANR	3434807	CastExpression	"( UnsetAddr * ) xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"		3434775	1					
ANR	3434808	CastTarget	UnsetAddr *		3434775	0					
ANR	3434809	CallExpression	"xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"		3434775	1					
ANR	3434810	Callee	xrealloc		3434775	0					
ANR	3434811	Identifier	xrealloc		3434775	0					
ANR	3434812	ArgumentList	uslist -> us		3434775	1					
ANR	3434813	Argument	uslist -> us		3434775	0					
ANR	3434814	PtrMemberAccess	uslist -> us		3434775	0					
ANR	3434815	Identifier	uslist		3434775	0					
ANR	3434816	Identifier	us		3434775	1					
ANR	3434817	Argument	sizeof ( UnsetAddr ) * size		3434775	1					
ANR	3434818	MultiplicativeExpression	sizeof ( UnsetAddr ) * size		3434775	0		*			
ANR	3434819	SizeofExpression	sizeof ( UnsetAddr )		3434775	0					
ANR	3434820	Sizeof	sizeof		3434775	0					
ANR	3434821	SizeofOperand	UnsetAddr		3434775	1					
ANR	3434822	Identifier	size		3434775	1					
ANR	3434823	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	187:4:4403:4430	3434775	2	True				
ANR	3434824	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		3434775	0					
ANR	3434825	Callee	CHECK_NULL_RETURN_MEMERR		3434775	0					
ANR	3434826	Identifier	CHECK_NULL_RETURN_MEMERR		3434775	0					
ANR	3434827	ArgumentList	p		3434775	1					
ANR	3434828	Argument	p		3434775	0					
ANR	3434829	Identifier	p		3434775	0					
ANR	3434830	ExpressionStatement	uslist -> alloc = size	188:4:4436:4456	3434775	3	True				
ANR	3434831	AssignmentExpression	uslist -> alloc = size		3434775	0		=			
ANR	3434832	PtrMemberAccess	uslist -> alloc		3434775	0					
ANR	3434833	Identifier	uslist		3434775	0					
ANR	3434834	Identifier	alloc		3434775	1					
ANR	3434835	Identifier	size		3434775	1					
ANR	3434836	ExpressionStatement	uslist -> us = p	189:4:4462:4479	3434775	4	True				
ANR	3434837	AssignmentExpression	uslist -> us = p		3434775	0		=			
ANR	3434838	PtrMemberAccess	uslist -> us		3434775	0					
ANR	3434839	Identifier	uslist		3434775	0					
ANR	3434840	Identifier	us		3434775	1					
ANR	3434841	Identifier	p		3434775	1					
ANR	3434842	ExpressionStatement	uslist -> us [ uslist -> num ] . offset = offset	192:2:4488:4527	3434775	3	True				
ANR	3434843	AssignmentExpression	uslist -> us [ uslist -> num ] . offset = offset		3434775	0		=			
ANR	3434844	MemberAccess	uslist -> us [ uslist -> num ] . offset		3434775	0					
ANR	3434845	ArrayIndexing	uslist -> us [ uslist -> num ]		3434775	0					
ANR	3434846	PtrMemberAccess	uslist -> us		3434775	0					
ANR	3434847	Identifier	uslist		3434775	0					
ANR	3434848	Identifier	us		3434775	1					
ANR	3434849	PtrMemberAccess	uslist -> num		3434775	1					
ANR	3434850	Identifier	uslist		3434775	0					
ANR	3434851	Identifier	num		3434775	1					
ANR	3434852	Identifier	offset		3434775	1					
ANR	3434853	Identifier	offset		3434775	1					
ANR	3434854	ExpressionStatement	uslist -> us [ uslist -> num ] . target = node	193:2:4531:4568	3434775	4	True				
ANR	3434855	AssignmentExpression	uslist -> us [ uslist -> num ] . target = node		3434775	0		=			
ANR	3434856	MemberAccess	uslist -> us [ uslist -> num ] . target		3434775	0					
ANR	3434857	ArrayIndexing	uslist -> us [ uslist -> num ]		3434775	0					
ANR	3434858	PtrMemberAccess	uslist -> us		3434775	0					
ANR	3434859	Identifier	uslist		3434775	0					
ANR	3434860	Identifier	us		3434775	1					
ANR	3434861	PtrMemberAccess	uslist -> num		3434775	1					
ANR	3434862	Identifier	uslist		3434775	0					
ANR	3434863	Identifier	num		3434775	1					
ANR	3434864	Identifier	target		3434775	1					
ANR	3434865	Identifier	node		3434775	1					
ANR	3434866	ExpressionStatement	uslist -> num ++	194:2:4572:4585	3434775	5	True				
ANR	3434867	PostIncDecOperationExpression	uslist -> num ++		3434775	0					
ANR	3434868	PtrMemberAccess	uslist -> num		3434775	0					
ANR	3434869	Identifier	uslist		3434775	0					
ANR	3434870	Identifier	num		3434775	1					
ANR	3434871	IncDec	++		3434775	1					
ANR	3434872	ReturnStatement	return 0 ;	195:2:4589:4597	3434775	6	True				
ANR	3434873	PrimaryExpression	0		3434775	0					
ANR	3434874	ReturnType	static int		3434775	1					
ANR	3434875	Identifier	unset_addr_list_add		3434775	2					
ANR	3434876	ParameterList	"UnsetAddrList * uslist , int offset , struct _Node * node"		3434775	3					
ANR	3434877	Parameter	UnsetAddrList * uslist	179:20:4176:4196	3434775	0	True				
ANR	3434878	ParameterType	UnsetAddrList *		3434775	0					
ANR	3434879	Identifier	uslist		3434775	1					
ANR	3434880	Parameter	int offset	179:43:4199:4208	3434775	1	True				
ANR	3434881	ParameterType	int		3434775	0					
ANR	3434882	Identifier	offset		3434775	1					
ANR	3434883	Parameter	struct _Node * node	179:55:4211:4228	3434775	2	True				
ANR	3434884	ParameterType	struct _Node *		3434775	0					
ANR	3434885	Identifier	node		3434775	1					
ANR	3434886	CFGEntryNode	ENTRY		3434775		True				
ANR	3434887	CFGExitNode	EXIT		3434775		True				
ANR	3434888	Symbol	uslist -> num		3434775						
ANR	3434889	Symbol	uslist -> us [ uslist -> num ] . offset		3434775						
ANR	3434890	Symbol	offset		3434775						
ANR	3434891	Symbol	* * uslist		3434775						
ANR	3434892	Symbol	uslist -> us		3434775						
ANR	3434893	Symbol	p		3434775						
ANR	3434894	Symbol	uslist -> alloc		3434775						
ANR	3434895	Symbol	node		3434775						
ANR	3434896	Symbol	* uslist -> num		3434775						
ANR	3434897	Symbol	uslist		3434775						
ANR	3434898	Symbol	size		3434775						
ANR	3434899	Symbol	* uslist		3434775						
ANR	3434900	Symbol	* uslist -> us		3434775						
ANR	3434901	Symbol	uslist -> us [ uslist -> num ] . target		3434775						
ANR	3434902	Symbol	xrealloc		3434775						
ANR	3434903	Function	add_opcode	200:0:4632:4720							
ANR	3434904	FunctionDef	"add_opcode (regex_t * reg , int opcode)"		3434903	0					
ANR	3434905	CompoundStatement		202:0:4680:4720	3434903	0					
ANR	3434906	ExpressionStatement	"BBUF_ADD1 ( reg , opcode )"	203:2:4684:4706	3434903	0	True				
ANR	3434907	CallExpression	"BBUF_ADD1 ( reg , opcode )"		3434903	0					
ANR	3434908	Callee	BBUF_ADD1		3434903	0					
ANR	3434909	Identifier	BBUF_ADD1		3434903	0					
ANR	3434910	ArgumentList	reg		3434903	1					
ANR	3434911	Argument	reg		3434903	0					
ANR	3434912	Identifier	reg		3434903	0					
ANR	3434913	Argument	opcode		3434903	1					
ANR	3434914	Identifier	opcode		3434903	0					
ANR	3434915	ReturnStatement	return 0 ;	204:2:4710:4718	3434903	1	True				
ANR	3434916	PrimaryExpression	0		3434903	0					
ANR	3434917	ReturnType	static int		3434903	1					
ANR	3434918	Identifier	add_opcode		3434903	2					
ANR	3434919	ParameterList	"regex_t * reg , int opcode"		3434903	3					
ANR	3434920	Parameter	regex_t * reg	201:11:4654:4665	3434903	0	True				
ANR	3434921	ParameterType	regex_t *		3434903	0					
ANR	3434922	Identifier	reg		3434903	1					
ANR	3434923	Parameter	int opcode	201:25:4668:4677	3434903	1	True				
ANR	3434924	ParameterType	int		3434903	0					
ANR	3434925	Identifier	opcode		3434903	1					
ANR	3434926	CFGEntryNode	ENTRY		3434903		True				
ANR	3434927	CFGExitNode	EXIT		3434903		True				
ANR	3434928	Symbol	reg		3434903						
ANR	3434929	Symbol	opcode		3434903						
ANR	3434930	Function	add_state_check_num	208:0:4762:4923							
ANR	3434931	FunctionDef	"add_state_check_num (regex_t * reg , int num)"		3434930	0					
ANR	3434932	CompoundStatement		210:0:4816:4923	3434930	0					
ANR	3434933	IdentifierDeclStatement	StateCheckNumType n = ( StateCheckNumType ) num ;	211:2:4820:4865	3434930	0	True				
ANR	3434934	IdentifierDecl	n = ( StateCheckNumType ) num		3434930	0					
ANR	3434935	IdentifierDeclType	StateCheckNumType		3434930	0					
ANR	3434936	Identifier	n		3434930	1					
ANR	3434937	AssignmentExpression	n = ( StateCheckNumType ) num		3434930	2		=			
ANR	3434938	Identifier	n		3434930	0					
ANR	3434939	CastExpression	( StateCheckNumType ) num		3434930	1					
ANR	3434940	CastTarget	StateCheckNumType		3434930	0					
ANR	3434941	Identifier	num		3434930	1					
ANR	3434942	ExpressionStatement	"BBUF_ADD ( reg , & n , SIZE_STATE_CHECK_NUM )"	213:2:4870:4909	3434930	1	True				
ANR	3434943	CallExpression	"BBUF_ADD ( reg , & n , SIZE_STATE_CHECK_NUM )"		3434930	0					
ANR	3434944	Callee	BBUF_ADD		3434930	0					
ANR	3434945	Identifier	BBUF_ADD		3434930	0					
ANR	3434946	ArgumentList	reg		3434930	1					
ANR	3434947	Argument	reg		3434930	0					
ANR	3434948	Identifier	reg		3434930	0					
ANR	3434949	Argument	& n		3434930	1					
ANR	3434950	UnaryOperationExpression	& n		3434930	0					
ANR	3434951	UnaryOperator	&		3434930	0					
ANR	3434952	Identifier	n		3434930	1					
ANR	3434953	Argument	SIZE_STATE_CHECK_NUM		3434930	2					
ANR	3434954	Identifier	SIZE_STATE_CHECK_NUM		3434930	0					
ANR	3434955	ReturnStatement	return 0 ;	214:2:4913:4921	3434930	2	True				
ANR	3434956	PrimaryExpression	0		3434930	0					
ANR	3434957	ReturnType	static int		3434930	1					
ANR	3434958	Identifier	add_state_check_num		3434930	2					
ANR	3434959	ParameterList	"regex_t * reg , int num"		3434930	3					
ANR	3434960	Parameter	regex_t * reg	209:20:4793:4804	3434930	0	True				
ANR	3434961	ParameterType	regex_t *		3434930	0					
ANR	3434962	Identifier	reg		3434930	1					
ANR	3434963	Parameter	int num	209:34:4807:4813	3434930	1	True				
ANR	3434964	ParameterType	int		3434930	0					
ANR	3434965	Identifier	num		3434930	1					
ANR	3434966	CFGEntryNode	ENTRY		3434930		True				
ANR	3434967	CFGExitNode	EXIT		3434930		True				
ANR	3434968	Symbol	& n		3434930						
ANR	3434969	Symbol	reg		3434930						
ANR	3434970	Symbol	num		3434930						
ANR	3434971	Symbol	n		3434930						
ANR	3434972	Symbol	SIZE_STATE_CHECK_NUM		3434930						
ANR	3434973	Function	add_rel_addr	218:0:4933:5071							
ANR	3434974	FunctionDef	"add_rel_addr (regex_t * reg , int addr)"		3434973	0					
ANR	3434975	CompoundStatement		220:0:4981:5071	3434973	0					
ANR	3434976	IdentifierDeclStatement	RelAddrType ra = ( RelAddrType ) addr ;	221:2:4985:5020	3434973	0	True				
ANR	3434977	IdentifierDecl	ra = ( RelAddrType ) addr		3434973	0					
ANR	3434978	IdentifierDeclType	RelAddrType		3434973	0					
ANR	3434979	Identifier	ra		3434973	1					
ANR	3434980	AssignmentExpression	ra = ( RelAddrType ) addr		3434973	2		=			
ANR	3434981	Identifier	ra		3434973	0					
ANR	3434982	CastExpression	( RelAddrType ) addr		3434973	1					
ANR	3434983	CastTarget	RelAddrType		3434973	0					
ANR	3434984	Identifier	addr		3434973	1					
ANR	3434985	ExpressionStatement	"BBUF_ADD ( reg , & ra , SIZE_RELADDR )"	223:2:5025:5057	3434973	1	True				
ANR	3434986	CallExpression	"BBUF_ADD ( reg , & ra , SIZE_RELADDR )"		3434973	0					
ANR	3434987	Callee	BBUF_ADD		3434973	0					
ANR	3434988	Identifier	BBUF_ADD		3434973	0					
ANR	3434989	ArgumentList	reg		3434973	1					
ANR	3434990	Argument	reg		3434973	0					
ANR	3434991	Identifier	reg		3434973	0					
ANR	3434992	Argument	& ra		3434973	1					
ANR	3434993	UnaryOperationExpression	& ra		3434973	0					
ANR	3434994	UnaryOperator	&		3434973	0					
ANR	3434995	Identifier	ra		3434973	1					
ANR	3434996	Argument	SIZE_RELADDR		3434973	2					
ANR	3434997	Identifier	SIZE_RELADDR		3434973	0					
ANR	3434998	ReturnStatement	return 0 ;	224:2:5061:5069	3434973	2	True				
ANR	3434999	PrimaryExpression	0		3434973	0					
ANR	3435000	ReturnType	static int		3434973	1					
ANR	3435001	Identifier	add_rel_addr		3434973	2					
ANR	3435002	ParameterList	"regex_t * reg , int addr"		3434973	3					
ANR	3435003	Parameter	regex_t * reg	219:13:4957:4968	3434973	0	True				
ANR	3435004	ParameterType	regex_t *		3434973	0					
ANR	3435005	Identifier	reg		3434973	1					
ANR	3435006	Parameter	int addr	219:27:4971:4978	3434973	1	True				
ANR	3435007	ParameterType	int		3434973	0					
ANR	3435008	Identifier	addr		3434973	1					
ANR	3435009	CFGEntryNode	ENTRY		3434973		True				
ANR	3435010	CFGExitNode	EXIT		3434973		True				
ANR	3435011	Symbol	SIZE_RELADDR		3434973						
ANR	3435012	Symbol	reg		3434973						
ANR	3435013	Symbol	& ra		3434973						
ANR	3435014	Symbol	addr		3434973						
ANR	3435015	Symbol	ra		3434973						
ANR	3435016	Function	add_abs_addr	227:0:5074:5212							
ANR	3435017	FunctionDef	"add_abs_addr (regex_t * reg , int addr)"		3435016	0					
ANR	3435018	CompoundStatement		229:0:5122:5212	3435016	0					
ANR	3435019	IdentifierDeclStatement	AbsAddrType ra = ( AbsAddrType ) addr ;	230:2:5126:5161	3435016	0	True				
ANR	3435020	IdentifierDecl	ra = ( AbsAddrType ) addr		3435016	0					
ANR	3435021	IdentifierDeclType	AbsAddrType		3435016	0					
ANR	3435022	Identifier	ra		3435016	1					
ANR	3435023	AssignmentExpression	ra = ( AbsAddrType ) addr		3435016	2		=			
ANR	3435024	Identifier	ra		3435016	0					
ANR	3435025	CastExpression	( AbsAddrType ) addr		3435016	1					
ANR	3435026	CastTarget	AbsAddrType		3435016	0					
ANR	3435027	Identifier	addr		3435016	1					
ANR	3435028	ExpressionStatement	"BBUF_ADD ( reg , & ra , SIZE_ABSADDR )"	232:2:5166:5198	3435016	1	True				
ANR	3435029	CallExpression	"BBUF_ADD ( reg , & ra , SIZE_ABSADDR )"		3435016	0					
ANR	3435030	Callee	BBUF_ADD		3435016	0					
ANR	3435031	Identifier	BBUF_ADD		3435016	0					
ANR	3435032	ArgumentList	reg		3435016	1					
ANR	3435033	Argument	reg		3435016	0					
ANR	3435034	Identifier	reg		3435016	0					
ANR	3435035	Argument	& ra		3435016	1					
ANR	3435036	UnaryOperationExpression	& ra		3435016	0					
ANR	3435037	UnaryOperator	&		3435016	0					
ANR	3435038	Identifier	ra		3435016	1					
ANR	3435039	Argument	SIZE_ABSADDR		3435016	2					
ANR	3435040	Identifier	SIZE_ABSADDR		3435016	0					
ANR	3435041	ReturnStatement	return 0 ;	233:2:5202:5210	3435016	2	True				
ANR	3435042	PrimaryExpression	0		3435016	0					
ANR	3435043	ReturnType	static int		3435016	1					
ANR	3435044	Identifier	add_abs_addr		3435016	2					
ANR	3435045	ParameterList	"regex_t * reg , int addr"		3435016	3					
ANR	3435046	Parameter	regex_t * reg	228:13:5098:5109	3435016	0	True				
ANR	3435047	ParameterType	regex_t *		3435016	0					
ANR	3435048	Identifier	reg		3435016	1					
ANR	3435049	Parameter	int addr	228:27:5112:5119	3435016	1	True				
ANR	3435050	ParameterType	int		3435016	0					
ANR	3435051	Identifier	addr		3435016	1					
ANR	3435052	CFGEntryNode	ENTRY		3435016		True				
ANR	3435053	CFGExitNode	EXIT		3435016		True				
ANR	3435054	Symbol	reg		3435016						
ANR	3435055	Symbol	& ra		3435016						
ANR	3435056	Symbol	addr		3435016						
ANR	3435057	Symbol	SIZE_ABSADDR		3435016						
ANR	3435058	Symbol	ra		3435016						
ANR	3435059	Function	add_length	236:0:5215:5344							
ANR	3435060	FunctionDef	"add_length (regex_t * reg , int len)"		3435059	0					
ANR	3435061	CompoundStatement		238:0:5260:5344	3435059	0					
ANR	3435062	IdentifierDeclStatement	LengthType l = ( LengthType ) len ;	239:2:5264:5295	3435059	0	True				
ANR	3435063	IdentifierDecl	l = ( LengthType ) len		3435059	0					
ANR	3435064	IdentifierDeclType	LengthType		3435059	0					
ANR	3435065	Identifier	l		3435059	1					
ANR	3435066	AssignmentExpression	l = ( LengthType ) len		3435059	2		=			
ANR	3435067	Identifier	l		3435059	0					
ANR	3435068	CastExpression	( LengthType ) len		3435059	1					
ANR	3435069	CastTarget	LengthType		3435059	0					
ANR	3435070	Identifier	len		3435059	1					
ANR	3435071	ExpressionStatement	"BBUF_ADD ( reg , & l , SIZE_LENGTH )"	241:2:5300:5330	3435059	1	True				
ANR	3435072	CallExpression	"BBUF_ADD ( reg , & l , SIZE_LENGTH )"		3435059	0					
ANR	3435073	Callee	BBUF_ADD		3435059	0					
ANR	3435074	Identifier	BBUF_ADD		3435059	0					
ANR	3435075	ArgumentList	reg		3435059	1					
ANR	3435076	Argument	reg		3435059	0					
ANR	3435077	Identifier	reg		3435059	0					
ANR	3435078	Argument	& l		3435059	1					
ANR	3435079	UnaryOperationExpression	& l		3435059	0					
ANR	3435080	UnaryOperator	&		3435059	0					
ANR	3435081	Identifier	l		3435059	1					
ANR	3435082	Argument	SIZE_LENGTH		3435059	2					
ANR	3435083	Identifier	SIZE_LENGTH		3435059	0					
ANR	3435084	ReturnStatement	return 0 ;	242:2:5334:5342	3435059	2	True				
ANR	3435085	PrimaryExpression	0		3435059	0					
ANR	3435086	ReturnType	static int		3435059	1					
ANR	3435087	Identifier	add_length		3435059	2					
ANR	3435088	ParameterList	"regex_t * reg , int len"		3435059	3					
ANR	3435089	Parameter	regex_t * reg	237:11:5237:5248	3435059	0	True				
ANR	3435090	ParameterType	regex_t *		3435059	0					
ANR	3435091	Identifier	reg		3435059	1					
ANR	3435092	Parameter	int len	237:25:5251:5257	3435059	1	True				
ANR	3435093	ParameterType	int		3435059	0					
ANR	3435094	Identifier	len		3435059	1					
ANR	3435095	CFGEntryNode	ENTRY		3435059		True				
ANR	3435096	CFGExitNode	EXIT		3435059		True				
ANR	3435097	Symbol	& l		3435059						
ANR	3435098	Symbol	len		3435059						
ANR	3435099	Symbol	reg		3435059						
ANR	3435100	Symbol	l		3435059						
ANR	3435101	Symbol	SIZE_LENGTH		3435059						
ANR	3435102	Function	add_mem_num	245:0:5347:5477							
ANR	3435103	FunctionDef	"add_mem_num (regex_t * reg , int num)"		3435102	0					
ANR	3435104	CompoundStatement		247:0:5393:5477	3435102	0					
ANR	3435105	IdentifierDeclStatement	MemNumType n = ( MemNumType ) num ;	248:2:5397:5428	3435102	0	True				
ANR	3435106	IdentifierDecl	n = ( MemNumType ) num		3435102	0					
ANR	3435107	IdentifierDeclType	MemNumType		3435102	0					
ANR	3435108	Identifier	n		3435102	1					
ANR	3435109	AssignmentExpression	n = ( MemNumType ) num		3435102	2		=			
ANR	3435110	Identifier	n		3435102	0					
ANR	3435111	CastExpression	( MemNumType ) num		3435102	1					
ANR	3435112	CastTarget	MemNumType		3435102	0					
ANR	3435113	Identifier	num		3435102	1					
ANR	3435114	ExpressionStatement	"BBUF_ADD ( reg , & n , SIZE_MEMNUM )"	250:2:5433:5463	3435102	1	True				
ANR	3435115	CallExpression	"BBUF_ADD ( reg , & n , SIZE_MEMNUM )"		3435102	0					
ANR	3435116	Callee	BBUF_ADD		3435102	0					
ANR	3435117	Identifier	BBUF_ADD		3435102	0					
ANR	3435118	ArgumentList	reg		3435102	1					
ANR	3435119	Argument	reg		3435102	0					
ANR	3435120	Identifier	reg		3435102	0					
ANR	3435121	Argument	& n		3435102	1					
ANR	3435122	UnaryOperationExpression	& n		3435102	0					
ANR	3435123	UnaryOperator	&		3435102	0					
ANR	3435124	Identifier	n		3435102	1					
ANR	3435125	Argument	SIZE_MEMNUM		3435102	2					
ANR	3435126	Identifier	SIZE_MEMNUM		3435102	0					
ANR	3435127	ReturnStatement	return 0 ;	251:2:5467:5475	3435102	2	True				
ANR	3435128	PrimaryExpression	0		3435102	0					
ANR	3435129	ReturnType	static int		3435102	1					
ANR	3435130	Identifier	add_mem_num		3435102	2					
ANR	3435131	ParameterList	"regex_t * reg , int num"		3435102	3					
ANR	3435132	Parameter	regex_t * reg	246:12:5370:5381	3435102	0	True				
ANR	3435133	ParameterType	regex_t *		3435102	0					
ANR	3435134	Identifier	reg		3435102	1					
ANR	3435135	Parameter	int num	246:26:5384:5390	3435102	1	True				
ANR	3435136	ParameterType	int		3435102	0					
ANR	3435137	Identifier	num		3435102	1					
ANR	3435138	CFGEntryNode	ENTRY		3435102		True				
ANR	3435139	CFGExitNode	EXIT		3435102		True				
ANR	3435140	Symbol	SIZE_MEMNUM		3435102						
ANR	3435141	Symbol	& n		3435102						
ANR	3435142	Symbol	reg		3435102						
ANR	3435143	Symbol	num		3435102						
ANR	3435144	Symbol	n		3435102						
ANR	3435145	Function	add_pointer	254:0:5480:5621							
ANR	3435146	FunctionDef	"add_pointer (regex_t * reg , void * addr)"		3435145	0					
ANR	3435147	CompoundStatement		256:0:5529:5621	3435145	0					
ANR	3435148	IdentifierDeclStatement	PointerType ptr = ( PointerType ) addr ;	257:2:5533:5569	3435145	0	True				
ANR	3435149	IdentifierDecl	ptr = ( PointerType ) addr		3435145	0					
ANR	3435150	IdentifierDeclType	PointerType		3435145	0					
ANR	3435151	Identifier	ptr		3435145	1					
ANR	3435152	AssignmentExpression	ptr = ( PointerType ) addr		3435145	2		=			
ANR	3435153	Identifier	ptr		3435145	0					
ANR	3435154	CastExpression	( PointerType ) addr		3435145	1					
ANR	3435155	CastTarget	PointerType		3435145	0					
ANR	3435156	Identifier	addr		3435145	1					
ANR	3435157	ExpressionStatement	"BBUF_ADD ( reg , & ptr , SIZE_POINTER )"	259:2:5574:5607	3435145	1	True				
ANR	3435158	CallExpression	"BBUF_ADD ( reg , & ptr , SIZE_POINTER )"		3435145	0					
ANR	3435159	Callee	BBUF_ADD		3435145	0					
ANR	3435160	Identifier	BBUF_ADD		3435145	0					
ANR	3435161	ArgumentList	reg		3435145	1					
ANR	3435162	Argument	reg		3435145	0					
ANR	3435163	Identifier	reg		3435145	0					
ANR	3435164	Argument	& ptr		3435145	1					
ANR	3435165	UnaryOperationExpression	& ptr		3435145	0					
ANR	3435166	UnaryOperator	&		3435145	0					
ANR	3435167	Identifier	ptr		3435145	1					
ANR	3435168	Argument	SIZE_POINTER		3435145	2					
ANR	3435169	Identifier	SIZE_POINTER		3435145	0					
ANR	3435170	ReturnStatement	return 0 ;	260:2:5611:5619	3435145	2	True				
ANR	3435171	PrimaryExpression	0		3435145	0					
ANR	3435172	ReturnType	static int		3435145	1					
ANR	3435173	Identifier	add_pointer		3435145	2					
ANR	3435174	ParameterList	"regex_t * reg , void * addr"		3435145	3					
ANR	3435175	Parameter	regex_t * reg	255:12:5503:5514	3435145	0	True				
ANR	3435176	ParameterType	regex_t *		3435145	0					
ANR	3435177	Identifier	reg		3435145	1					
ANR	3435178	Parameter	void * addr	255:26:5517:5526	3435145	1	True				
ANR	3435179	ParameterType	void *		3435145	0					
ANR	3435180	Identifier	addr		3435145	1					
ANR	3435181	CFGEntryNode	ENTRY		3435145		True				
ANR	3435182	CFGExitNode	EXIT		3435145		True				
ANR	3435183	Symbol	SIZE_POINTER		3435145						
ANR	3435184	Symbol	& ptr		3435145						
ANR	3435185	Symbol	reg		3435145						
ANR	3435186	Symbol	addr		3435145						
ANR	3435187	Symbol	ptr		3435145						
ANR	3435188	Function	add_option	263:0:5624:5736							
ANR	3435189	FunctionDef	"add_option (regex_t * reg , OnigOptionType option)"		3435188	0					
ANR	3435190	CompoundStatement		265:0:5683:5736	3435188	0					
ANR	3435191	ExpressionStatement	"BBUF_ADD ( reg , & option , SIZE_OPTION )"	266:2:5687:5722	3435188	0	True				
ANR	3435192	CallExpression	"BBUF_ADD ( reg , & option , SIZE_OPTION )"		3435188	0					
ANR	3435193	Callee	BBUF_ADD		3435188	0					
ANR	3435194	Identifier	BBUF_ADD		3435188	0					
ANR	3435195	ArgumentList	reg		3435188	1					
ANR	3435196	Argument	reg		3435188	0					
ANR	3435197	Identifier	reg		3435188	0					
ANR	3435198	Argument	& option		3435188	1					
ANR	3435199	UnaryOperationExpression	& option		3435188	0					
ANR	3435200	UnaryOperator	&		3435188	0					
ANR	3435201	Identifier	option		3435188	1					
ANR	3435202	Argument	SIZE_OPTION		3435188	2					
ANR	3435203	Identifier	SIZE_OPTION		3435188	0					
ANR	3435204	ReturnStatement	return 0 ;	267:2:5726:5734	3435188	1	True				
ANR	3435205	PrimaryExpression	0		3435188	0					
ANR	3435206	ReturnType	static int		3435188	1					
ANR	3435207	Identifier	add_option		3435188	2					
ANR	3435208	ParameterList	"regex_t * reg , OnigOptionType option"		3435188	3					
ANR	3435209	Parameter	regex_t * reg	264:11:5646:5657	3435188	0	True				
ANR	3435210	ParameterType	regex_t *		3435188	0					
ANR	3435211	Identifier	reg		3435188	1					
ANR	3435212	Parameter	OnigOptionType option	264:25:5660:5680	3435188	1	True				
ANR	3435213	ParameterType	OnigOptionType		3435188	0					
ANR	3435214	Identifier	option		3435188	1					
ANR	3435215	CFGEntryNode	ENTRY		3435188		True				
ANR	3435216	CFGExitNode	EXIT		3435188		True				
ANR	3435217	Symbol	& option		3435188						
ANR	3435218	Symbol	reg		3435188						
ANR	3435219	Symbol	SIZE_OPTION		3435188						
ANR	3435220	Symbol	option		3435188						
ANR	3435221	Function	add_opcode_rel_addr	270:0:5739:5911							
ANR	3435222	FunctionDef	"add_opcode_rel_addr (regex_t * reg , int opcode , int addr)"		3435221	0					
ANR	3435223	CompoundStatement		272:0:5806:5911	3435221	0					
ANR	3435224	IdentifierDeclStatement	int r ;	273:2:5810:5815	3435221	0	True				
ANR	3435225	IdentifierDecl	r		3435221	0					
ANR	3435226	IdentifierDeclType	int		3435221	0					
ANR	3435227	Identifier	r		3435221	1					
ANR	3435228	ExpressionStatement	"r = add_opcode ( reg , opcode )"	275:2:5820:5847	3435221	1	True				
ANR	3435229	AssignmentExpression	"r = add_opcode ( reg , opcode )"		3435221	0		=			
ANR	3435230	Identifier	r		3435221	0					
ANR	3435231	CallExpression	"add_opcode ( reg , opcode )"		3435221	1					
ANR	3435232	Callee	add_opcode		3435221	0					
ANR	3435233	Identifier	add_opcode		3435221	0					
ANR	3435234	ArgumentList	reg		3435221	1					
ANR	3435235	Argument	reg		3435221	0					
ANR	3435236	Identifier	reg		3435221	0					
ANR	3435237	Argument	opcode		3435221	1					
ANR	3435238	Identifier	opcode		3435221	0					
ANR	3435239	IfStatement	if ( r )		3435221	2					
ANR	3435240	Condition	r	276:6:5855:5855	3435221	0	True				
ANR	3435241	Identifier	r		3435221	0					
ANR	3435242	ReturnStatement	return r ;	276:9:5858:5866	3435221	1	True				
ANR	3435243	Identifier	r		3435221	0					
ANR	3435244	ExpressionStatement	"r = add_rel_addr ( reg , addr )"	277:2:5870:5897	3435221	3	True				
ANR	3435245	AssignmentExpression	"r = add_rel_addr ( reg , addr )"		3435221	0		=			
ANR	3435246	Identifier	r		3435221	0					
ANR	3435247	CallExpression	"add_rel_addr ( reg , addr )"		3435221	1					
ANR	3435248	Callee	add_rel_addr		3435221	0					
ANR	3435249	Identifier	add_rel_addr		3435221	0					
ANR	3435250	ArgumentList	reg		3435221	1					
ANR	3435251	Argument	reg		3435221	0					
ANR	3435252	Identifier	reg		3435221	0					
ANR	3435253	Argument	addr		3435221	1					
ANR	3435254	Identifier	addr		3435221	0					
ANR	3435255	ReturnStatement	return r ;	278:2:5901:5909	3435221	4	True				
ANR	3435256	Identifier	r		3435221	0					
ANR	3435257	ReturnType	static int		3435221	1					
ANR	3435258	Identifier	add_opcode_rel_addr		3435221	2					
ANR	3435259	ParameterList	"regex_t * reg , int opcode , int addr"		3435221	3					
ANR	3435260	Parameter	regex_t * reg	271:20:5770:5781	3435221	0	True				
ANR	3435261	ParameterType	regex_t *		3435221	0					
ANR	3435262	Identifier	reg		3435221	1					
ANR	3435263	Parameter	int opcode	271:34:5784:5793	3435221	1	True				
ANR	3435264	ParameterType	int		3435221	0					
ANR	3435265	Identifier	opcode		3435221	1					
ANR	3435266	Parameter	int addr	271:46:5796:5803	3435221	2	True				
ANR	3435267	ParameterType	int		3435221	0					
ANR	3435268	Identifier	addr		3435221	1					
ANR	3435269	CFGEntryNode	ENTRY		3435221		True				
ANR	3435270	CFGExitNode	EXIT		3435221		True				
ANR	3435271	Symbol	r		3435221						
ANR	3435272	Symbol	reg		3435221						
ANR	3435273	Symbol	add_opcode		3435221						
ANR	3435274	Symbol	opcode		3435221						
ANR	3435275	Symbol	addr		3435221						
ANR	3435276	Symbol	add_rel_addr		3435221						
ANR	3435277	Function	add_bytes	281:0:5914:6015							
ANR	3435278	FunctionDef	"add_bytes (regex_t * reg , UChar * bytes , int len)"		3435277	0					
ANR	3435279	CompoundStatement		283:0:5972:6015	3435277	0					
ANR	3435280	ExpressionStatement	"BBUF_ADD ( reg , bytes , len )"	284:2:5976:6001	3435277	0	True				
ANR	3435281	CallExpression	"BBUF_ADD ( reg , bytes , len )"		3435277	0					
ANR	3435282	Callee	BBUF_ADD		3435277	0					
ANR	3435283	Identifier	BBUF_ADD		3435277	0					
ANR	3435284	ArgumentList	reg		3435277	1					
ANR	3435285	Argument	reg		3435277	0					
ANR	3435286	Identifier	reg		3435277	0					
ANR	3435287	Argument	bytes		3435277	1					
ANR	3435288	Identifier	bytes		3435277	0					
ANR	3435289	Argument	len		3435277	2					
ANR	3435290	Identifier	len		3435277	0					
ANR	3435291	ReturnStatement	return 0 ;	285:2:6005:6013	3435277	1	True				
ANR	3435292	PrimaryExpression	0		3435277	0					
ANR	3435293	ReturnType	static int		3435277	1					
ANR	3435294	Identifier	add_bytes		3435277	2					
ANR	3435295	ParameterList	"regex_t * reg , UChar * bytes , int len"		3435277	3					
ANR	3435296	Parameter	regex_t * reg	282:10:5935:5946	3435277	0	True				
ANR	3435297	ParameterType	regex_t *		3435277	0					
ANR	3435298	Identifier	reg		3435277	1					
ANR	3435299	Parameter	UChar * bytes	282:24:5949:5960	3435277	1	True				
ANR	3435300	ParameterType	UChar *		3435277	0					
ANR	3435301	Identifier	bytes		3435277	1					
ANR	3435302	Parameter	int len	282:38:5963:5969	3435277	2	True				
ANR	3435303	ParameterType	int		3435277	0					
ANR	3435304	Identifier	len		3435277	1					
ANR	3435305	CFGEntryNode	ENTRY		3435277		True				
ANR	3435306	CFGExitNode	EXIT		3435277		True				
ANR	3435307	Symbol	len		3435277						
ANR	3435308	Symbol	reg		3435277						
ANR	3435309	Symbol	bytes		3435277						
ANR	3435310	Function	add_bitset	288:0:6018:6116							
ANR	3435311	FunctionDef	"add_bitset (regex_t * reg , BitSetRef bs)"		3435310	0					
ANR	3435312	CompoundStatement		290:0:6068:6116	3435310	0					
ANR	3435313	ExpressionStatement	"BBUF_ADD ( reg , bs , SIZE_BITSET )"	291:2:6072:6102	3435310	0	True				
ANR	3435314	CallExpression	"BBUF_ADD ( reg , bs , SIZE_BITSET )"		3435310	0					
ANR	3435315	Callee	BBUF_ADD		3435310	0					
ANR	3435316	Identifier	BBUF_ADD		3435310	0					
ANR	3435317	ArgumentList	reg		3435310	1					
ANR	3435318	Argument	reg		3435310	0					
ANR	3435319	Identifier	reg		3435310	0					
ANR	3435320	Argument	bs		3435310	1					
ANR	3435321	Identifier	bs		3435310	0					
ANR	3435322	Argument	SIZE_BITSET		3435310	2					
ANR	3435323	Identifier	SIZE_BITSET		3435310	0					
ANR	3435324	ReturnStatement	return 0 ;	292:2:6106:6114	3435310	1	True				
ANR	3435325	PrimaryExpression	0		3435310	0					
ANR	3435326	ReturnType	static int		3435310	1					
ANR	3435327	Identifier	add_bitset		3435310	2					
ANR	3435328	ParameterList	"regex_t * reg , BitSetRef bs"		3435310	3					
ANR	3435329	Parameter	regex_t * reg	289:11:6040:6051	3435310	0	True				
ANR	3435330	ParameterType	regex_t *		3435310	0					
ANR	3435331	Identifier	reg		3435310	1					
ANR	3435332	Parameter	BitSetRef bs	289:25:6054:6065	3435310	1	True				
ANR	3435333	ParameterType	BitSetRef		3435310	0					
ANR	3435334	Identifier	bs		3435310	1					
ANR	3435335	CFGEntryNode	ENTRY		3435310		True				
ANR	3435336	CFGExitNode	EXIT		3435310		True				
ANR	3435337	Symbol	SIZE_BITSET		3435310						
ANR	3435338	Symbol	bs		3435310						
ANR	3435339	Symbol	reg		3435310						
ANR	3435340	Function	add_opcode_option	295:0:6119:6302							
ANR	3435341	FunctionDef	"add_opcode_option (regex_t * reg , int opcode , OnigOptionType option)"		3435340	0					
ANR	3435342	CompoundStatement		297:0:6197:6302	3435340	0					
ANR	3435343	IdentifierDeclStatement	int r ;	298:2:6201:6206	3435340	0	True				
ANR	3435344	IdentifierDecl	r		3435340	0					
ANR	3435345	IdentifierDeclType	int		3435340	0					
ANR	3435346	Identifier	r		3435340	1					
ANR	3435347	ExpressionStatement	"r = add_opcode ( reg , opcode )"	300:2:6211:6238	3435340	1	True				
ANR	3435348	AssignmentExpression	"r = add_opcode ( reg , opcode )"		3435340	0		=			
ANR	3435349	Identifier	r		3435340	0					
ANR	3435350	CallExpression	"add_opcode ( reg , opcode )"		3435340	1					
ANR	3435351	Callee	add_opcode		3435340	0					
ANR	3435352	Identifier	add_opcode		3435340	0					
ANR	3435353	ArgumentList	reg		3435340	1					
ANR	3435354	Argument	reg		3435340	0					
ANR	3435355	Identifier	reg		3435340	0					
ANR	3435356	Argument	opcode		3435340	1					
ANR	3435357	Identifier	opcode		3435340	0					
ANR	3435358	IfStatement	if ( r )		3435340	2					
ANR	3435359	Condition	r	301:6:6246:6246	3435340	0	True				
ANR	3435360	Identifier	r		3435340	0					
ANR	3435361	ReturnStatement	return r ;	301:9:6249:6257	3435340	1	True				
ANR	3435362	Identifier	r		3435340	0					
ANR	3435363	ExpressionStatement	"r = add_option ( reg , option )"	302:2:6261:6288	3435340	3	True				
ANR	3435364	AssignmentExpression	"r = add_option ( reg , option )"		3435340	0		=			
ANR	3435365	Identifier	r		3435340	0					
ANR	3435366	CallExpression	"add_option ( reg , option )"		3435340	1					
ANR	3435367	Callee	add_option		3435340	0					
ANR	3435368	Identifier	add_option		3435340	0					
ANR	3435369	ArgumentList	reg		3435340	1					
ANR	3435370	Argument	reg		3435340	0					
ANR	3435371	Identifier	reg		3435340	0					
ANR	3435372	Argument	option		3435340	1					
ANR	3435373	Identifier	option		3435340	0					
ANR	3435374	ReturnStatement	return r ;	303:2:6292:6300	3435340	4	True				
ANR	3435375	Identifier	r		3435340	0					
ANR	3435376	ReturnType	static int		3435340	1					
ANR	3435377	Identifier	add_opcode_option		3435340	2					
ANR	3435378	ParameterList	"regex_t * reg , int opcode , OnigOptionType option"		3435340	3					
ANR	3435379	Parameter	regex_t * reg	296:18:6148:6159	3435340	0	True				
ANR	3435380	ParameterType	regex_t *		3435340	0					
ANR	3435381	Identifier	reg		3435340	1					
ANR	3435382	Parameter	int opcode	296:32:6162:6171	3435340	1	True				
ANR	3435383	ParameterType	int		3435340	0					
ANR	3435384	Identifier	opcode		3435340	1					
ANR	3435385	Parameter	OnigOptionType option	296:44:6174:6194	3435340	2	True				
ANR	3435386	ParameterType	OnigOptionType		3435340	0					
ANR	3435387	Identifier	option		3435340	1					
ANR	3435388	CFGEntryNode	ENTRY		3435340		True				
ANR	3435389	CFGExitNode	EXIT		3435340		True				
ANR	3435390	Symbol	r		3435340						
ANR	3435391	Symbol	reg		3435340						
ANR	3435392	Symbol	add_opcode		3435340						
ANR	3435393	Symbol	opcode		3435340						
ANR	3435394	Symbol	add_option		3435340						
ANR	3435395	Symbol	option		3435340						
ANR	3435396	DeclStmt									
ANR	3435397	Decl							int	"int ( Node * node , regex_t * reg )"	compile_length_tree
ANR	3435398	DeclStmt									
ANR	3435399	Decl							int	"int ( Node * node , regex_t * reg )"	compile_tree
ANR	3435400	Function	select_str_opcode	314:0:6583:7468							
ANR	3435401	FunctionDef	"select_str_opcode (int mb_len , int str_len , int ignore_case)"		3435400	0					
ANR	3435402	CompoundStatement		316:0:6654:7468	3435400	0					
ANR	3435403	IdentifierDeclStatement	int op ;	317:2:6658:6664	3435400	0	True				
ANR	3435404	IdentifierDecl	op		3435400	0					
ANR	3435405	IdentifierDeclType	int		3435400	0					
ANR	3435406	Identifier	op		3435400	1					
ANR	3435407	IfStatement	if ( ignore_case )		3435400	1					
ANR	3435408	Condition	ignore_case	319:6:6673:6683	3435400	0	True				
ANR	3435409	Identifier	ignore_case		3435400	0					
ANR	3435410	CompoundStatement		4:19:31:31	3435400	1					
ANR	3435411	SwitchStatement	switch ( str_len )		3435400	0					
ANR	3435412	Condition	str_len	320:12:6700:6706	3435400	0	True				
ANR	3435413	Identifier	str_len		3435400	0					
ANR	3435414	CompoundStatement		5:21:54:54	3435400	1					
ANR	3435415	Label	case 1 :	321:4:6715:6721	3435400	0	True				
ANR	3435416	ExpressionStatement	op = OP_EXACT1_IC	321:13:6724:6741	3435400	1	True				
ANR	3435417	AssignmentExpression	op = OP_EXACT1_IC		3435400	0		=			
ANR	3435418	Identifier	op		3435400	0					
ANR	3435419	Identifier	OP_EXACT1_IC		3435400	1					
ANR	3435420	BreakStatement	break ;	321:32:6743:6748	3435400	2	True				
ANR	3435421	Label	default :	322:4:6754:6761	3435400	3	True				
ANR	3435422	Identifier	default		3435400	0					
ANR	3435423	ExpressionStatement	op = OP_EXACTN_IC	322:13:6763:6780	3435400	4	True				
ANR	3435424	AssignmentExpression	op = OP_EXACTN_IC		3435400	0		=			
ANR	3435425	Identifier	op		3435400	0					
ANR	3435426	Identifier	OP_EXACTN_IC		3435400	1					
ANR	3435427	BreakStatement	break ;	322:32:6782:6787	3435400	5	True				
ANR	3435428	ElseStatement	else		3435400	0					
ANR	3435429	CompoundStatement		10:7:151:151	3435400	0					
ANR	3435430	SwitchStatement	switch ( mb_len )		3435400	0					
ANR	3435431	Condition	mb_len	326:12:6820:6825	3435400	0	True				
ANR	3435432	Identifier	mb_len		3435400	0					
ANR	3435433	CompoundStatement		11:20:173:173	3435400	1					
ANR	3435434	Label	case 1 :	327:4:6834:6840	3435400	0	True				
ANR	3435435	SwitchStatement	switch ( str_len )		3435400	1					
ANR	3435436	Condition	str_len	328:14:6856:6862	3435400	0	True				
ANR	3435437	Identifier	str_len		3435400	0					
ANR	3435438	CompoundStatement		13:23:210:210	3435400	1					
ANR	3435439	Label	case 1 :	329:6:6873:6879	3435400	0	True				
ANR	3435440	ExpressionStatement	op = OP_EXACT1	329:15:6882:6896	3435400	1	True				
ANR	3435441	AssignmentExpression	op = OP_EXACT1		3435400	0		=			
ANR	3435442	Identifier	op		3435400	0					
ANR	3435443	Identifier	OP_EXACT1		3435400	1					
ANR	3435444	BreakStatement	break ;	329:31:6898:6903	3435400	2	True				
ANR	3435445	Label	case 2 :	330:6:6911:6917	3435400	3	True				
ANR	3435446	ExpressionStatement	op = OP_EXACT2	330:15:6920:6934	3435400	4	True				
ANR	3435447	AssignmentExpression	op = OP_EXACT2		3435400	0		=			
ANR	3435448	Identifier	op		3435400	0					
ANR	3435449	Identifier	OP_EXACT2		3435400	1					
ANR	3435450	BreakStatement	break ;	330:31:6936:6941	3435400	5	True				
ANR	3435451	Label	case 3 :	331:6:6949:6955	3435400	6	True				
ANR	3435452	ExpressionStatement	op = OP_EXACT3	331:15:6958:6972	3435400	7	True				
ANR	3435453	AssignmentExpression	op = OP_EXACT3		3435400	0		=			
ANR	3435454	Identifier	op		3435400	0					
ANR	3435455	Identifier	OP_EXACT3		3435400	1					
ANR	3435456	BreakStatement	break ;	331:31:6974:6979	3435400	8	True				
ANR	3435457	Label	case 4 :	332:6:6987:6993	3435400	9	True				
ANR	3435458	ExpressionStatement	op = OP_EXACT4	332:15:6996:7010	3435400	10	True				
ANR	3435459	AssignmentExpression	op = OP_EXACT4		3435400	0		=			
ANR	3435460	Identifier	op		3435400	0					
ANR	3435461	Identifier	OP_EXACT4		3435400	1					
ANR	3435462	BreakStatement	break ;	332:31:7012:7017	3435400	11	True				
ANR	3435463	Label	case 5 :	333:6:7025:7031	3435400	12	True				
ANR	3435464	ExpressionStatement	op = OP_EXACT5	333:15:7034:7048	3435400	13	True				
ANR	3435465	AssignmentExpression	op = OP_EXACT5		3435400	0		=			
ANR	3435466	Identifier	op		3435400	0					
ANR	3435467	Identifier	OP_EXACT5		3435400	1					
ANR	3435468	BreakStatement	break ;	333:31:7050:7055	3435400	14	True				
ANR	3435469	Label	default :	334:6:7063:7070	3435400	15	True				
ANR	3435470	Identifier	default		3435400	0					
ANR	3435471	ExpressionStatement	op = OP_EXACTN	334:15:7072:7086	3435400	16	True				
ANR	3435472	AssignmentExpression	op = OP_EXACTN		3435400	0		=			
ANR	3435473	Identifier	op		3435400	0					
ANR	3435474	Identifier	OP_EXACTN		3435400	1					
ANR	3435475	BreakStatement	break ;	334:31:7088:7093	3435400	17	True				
ANR	3435476	BreakStatement	break ;	336:6:7109:7114	3435400	2	True				
ANR	3435477	Label	case 2 :	338:4:7121:7127	3435400	3	True				
ANR	3435478	SwitchStatement	switch ( str_len )		3435400	4					
ANR	3435479	Condition	str_len	339:14:7143:7149	3435400	0	True				
ANR	3435480	Identifier	str_len		3435400	0					
ANR	3435481	CompoundStatement		24:23:497:497	3435400	1					
ANR	3435482	Label	case 1 :	340:6:7160:7166	3435400	0	True				
ANR	3435483	ExpressionStatement	op = OP_EXACTMB2N1	340:15:7169:7187	3435400	1	True				
ANR	3435484	AssignmentExpression	op = OP_EXACTMB2N1		3435400	0		=			
ANR	3435485	Identifier	op		3435400	0					
ANR	3435486	Identifier	OP_EXACTMB2N1		3435400	1					
ANR	3435487	BreakStatement	break ;	340:35:7189:7194	3435400	2	True				
ANR	3435488	Label	case 2 :	341:6:7202:7208	3435400	3	True				
ANR	3435489	ExpressionStatement	op = OP_EXACTMB2N2	341:15:7211:7229	3435400	4	True				
ANR	3435490	AssignmentExpression	op = OP_EXACTMB2N2		3435400	0		=			
ANR	3435491	Identifier	op		3435400	0					
ANR	3435492	Identifier	OP_EXACTMB2N2		3435400	1					
ANR	3435493	BreakStatement	break ;	341:35:7231:7236	3435400	5	True				
ANR	3435494	Label	case 3 :	342:6:7244:7250	3435400	6	True				
ANR	3435495	ExpressionStatement	op = OP_EXACTMB2N3	342:15:7253:7271	3435400	7	True				
ANR	3435496	AssignmentExpression	op = OP_EXACTMB2N3		3435400	0		=			
ANR	3435497	Identifier	op		3435400	0					
ANR	3435498	Identifier	OP_EXACTMB2N3		3435400	1					
ANR	3435499	BreakStatement	break ;	342:35:7273:7278	3435400	8	True				
ANR	3435500	Label	default :	343:6:7286:7293	3435400	9	True				
ANR	3435501	Identifier	default		3435400	0					
ANR	3435502	ExpressionStatement	op = OP_EXACTMB2N	343:15:7295:7312	3435400	10	True				
ANR	3435503	AssignmentExpression	op = OP_EXACTMB2N		3435400	0		=			
ANR	3435504	Identifier	op		3435400	0					
ANR	3435505	Identifier	OP_EXACTMB2N		3435400	1					
ANR	3435506	BreakStatement	break ;	343:35:7315:7320	3435400	11	True				
ANR	3435507	BreakStatement	break ;	345:6:7336:7341	3435400	5	True				
ANR	3435508	Label	case 3 :	347:4:7348:7354	3435400	6	True				
ANR	3435509	ExpressionStatement	op = OP_EXACTMB3N	348:6:7362:7379	3435400	7	True				
ANR	3435510	AssignmentExpression	op = OP_EXACTMB3N		3435400	0		=			
ANR	3435511	Identifier	op		3435400	0					
ANR	3435512	Identifier	OP_EXACTMB3N		3435400	1					
ANR	3435513	BreakStatement	break ;	349:6:7387:7392	3435400	8	True				
ANR	3435514	Label	default :	351:4:7399:7406	3435400	9	True				
ANR	3435515	Identifier	default		3435400	0					
ANR	3435516	ExpressionStatement	op = OP_EXACTMBN	352:6:7414:7430	3435400	10	True				
ANR	3435517	AssignmentExpression	op = OP_EXACTMBN		3435400	0		=			
ANR	3435518	Identifier	op		3435400	0					
ANR	3435519	Identifier	OP_EXACTMBN		3435400	1					
ANR	3435520	BreakStatement	break ;	353:6:7438:7443	3435400	11	True				
ANR	3435521	ReturnStatement	return op ;	356:2:7457:7466	3435400	2	True				
ANR	3435522	Identifier	op		3435400	0					
ANR	3435523	ReturnType	static int		3435400	1					
ANR	3435524	Identifier	select_str_opcode		3435400	2					
ANR	3435525	ParameterList	"int mb_len , int str_len , int ignore_case"		3435400	3					
ANR	3435526	Parameter	int mb_len	315:18:6612:6621	3435400	0	True				
ANR	3435527	ParameterType	int		3435400	0					
ANR	3435528	Identifier	mb_len		3435400	1					
ANR	3435529	Parameter	int str_len	315:30:6624:6634	3435400	1	True				
ANR	3435530	ParameterType	int		3435400	0					
ANR	3435531	Identifier	str_len		3435400	1					
ANR	3435532	Parameter	int ignore_case	315:43:6637:6651	3435400	2	True				
ANR	3435533	ParameterType	int		3435400	0					
ANR	3435534	Identifier	ignore_case		3435400	1					
ANR	3435535	CFGEntryNode	ENTRY		3435400		True				
ANR	3435536	CFGExitNode	EXIT		3435400		True				
ANR	3435537	Symbol	OP_EXACTMB3N		3435400						
ANR	3435538	Symbol	op		3435400						
ANR	3435539	Symbol	OP_EXACTMB2N3		3435400						
ANR	3435540	Symbol	OP_EXACTMB2N2		3435400						
ANR	3435541	Symbol	OP_EXACTMB2N		3435400						
ANR	3435542	Symbol	OP_EXACT1_IC		3435400						
ANR	3435543	Symbol	OP_EXACTN		3435400						
ANR	3435544	Symbol	ignore_case		3435400						
ANR	3435545	Symbol	OP_EXACT2		3435400						
ANR	3435546	Symbol	OP_EXACT1		3435400						
ANR	3435547	Symbol	OP_EXACT4		3435400						
ANR	3435548	Symbol	OP_EXACT3		3435400						
ANR	3435549	Symbol	str_len		3435400						
ANR	3435550	Symbol	OP_EXACT5		3435400						
ANR	3435551	Symbol	mb_len		3435400						
ANR	3435552	Symbol	OP_EXACTMBN		3435400						
ANR	3435553	Symbol	OP_EXACTMB2N1		3435400						
ANR	3435554	Symbol	OP_EXACTN_IC		3435400						
ANR	3435555	Function	compile_tree_empty_check	359:0:7471:8304							
ANR	3435556	FunctionDef	"compile_tree_empty_check (Node * node , regex_t * reg , int empty_info)"		3435555	0					
ANR	3435557	CompoundStatement		361:0:7549:8304	3435555	0					
ANR	3435558	IdentifierDeclStatement	int r ;	362:2:7553:7558	3435555	0	True				
ANR	3435559	IdentifierDecl	r		3435555	0					
ANR	3435560	IdentifierDeclType	int		3435555	0					
ANR	3435561	Identifier	r		3435555	1					
ANR	3435562	IdentifierDeclStatement	int saved_num_null_check = reg -> num_null_check ;	363:2:7562:7608	3435555	1	True				
ANR	3435563	IdentifierDecl	saved_num_null_check = reg -> num_null_check		3435555	0					
ANR	3435564	IdentifierDeclType	int		3435555	0					
ANR	3435565	Identifier	saved_num_null_check		3435555	1					
ANR	3435566	AssignmentExpression	saved_num_null_check = reg -> num_null_check		3435555	2		=			
ANR	3435567	Identifier	saved_num_null_check		3435555	0					
ANR	3435568	PtrMemberAccess	reg -> num_null_check		3435555	1					
ANR	3435569	Identifier	reg		3435555	0					
ANR	3435570	Identifier	num_null_check		3435555	1					
ANR	3435571	IfStatement	if ( empty_info != 0 )		3435555	2					
ANR	3435572	Condition	empty_info != 0	365:6:7617:7631	3435555	0	True				
ANR	3435573	EqualityExpression	empty_info != 0		3435555	0		!=			
ANR	3435574	Identifier	empty_info		3435555	0					
ANR	3435575	PrimaryExpression	0		3435555	1					
ANR	3435576	CompoundStatement		5:23:84:84	3435555	1					
ANR	3435577	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_START )"	366:4:7640:7680	3435555	0	True				
ANR	3435578	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_START )"		3435555	0		=			
ANR	3435579	Identifier	r		3435555	0					
ANR	3435580	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_START )"		3435555	1					
ANR	3435581	Callee	add_opcode		3435555	0					
ANR	3435582	Identifier	add_opcode		3435555	0					
ANR	3435583	ArgumentList	reg		3435555	1					
ANR	3435584	Argument	reg		3435555	0					
ANR	3435585	Identifier	reg		3435555	0					
ANR	3435586	Argument	OP_NULL_CHECK_START		3435555	1					
ANR	3435587	Identifier	OP_NULL_CHECK_START		3435555	0					
ANR	3435588	IfStatement	if ( r )		3435555	1					
ANR	3435589	Condition	r	367:8:7690:7690	3435555	0	True				
ANR	3435590	Identifier	r		3435555	0					
ANR	3435591	ReturnStatement	return r ;	367:11:7693:7701	3435555	1	True				
ANR	3435592	Identifier	r		3435555	0					
ANR	3435593	ExpressionStatement	"r = add_mem_num ( reg , reg -> num_null_check )"	368:4:7707:7748	3435555	2	True				
ANR	3435594	AssignmentExpression	"r = add_mem_num ( reg , reg -> num_null_check )"		3435555	0		=			
ANR	3435595	Identifier	r		3435555	0					
ANR	3435596	CallExpression	"add_mem_num ( reg , reg -> num_null_check )"		3435555	1					
ANR	3435597	Callee	add_mem_num		3435555	0					
ANR	3435598	Identifier	add_mem_num		3435555	0					
ANR	3435599	ArgumentList	reg		3435555	1					
ANR	3435600	Argument	reg		3435555	0					
ANR	3435601	Identifier	reg		3435555	0					
ANR	3435602	Argument	reg -> num_null_check		3435555	1					
ANR	3435603	PtrMemberAccess	reg -> num_null_check		3435555	0					
ANR	3435604	Identifier	reg		3435555	0					
ANR	3435605	Identifier	num_null_check		3435555	1					
ANR	3435606	IfStatement	if ( r )		3435555	3					
ANR	3435607	Condition	r	369:8:7778:7778	3435555	0	True				
ANR	3435608	Identifier	r		3435555	0					
ANR	3435609	ReturnStatement	return r ;	369:11:7781:7789	3435555	1	True				
ANR	3435610	Identifier	r		3435555	0					
ANR	3435611	ExpressionStatement	reg -> num_null_check ++	370:4:7795:7816	3435555	4	True				
ANR	3435612	PostIncDecOperationExpression	reg -> num_null_check ++		3435555	0					
ANR	3435613	PtrMemberAccess	reg -> num_null_check		3435555	0					
ANR	3435614	Identifier	reg		3435555	0					
ANR	3435615	Identifier	num_null_check		3435555	1					
ANR	3435616	IncDec	++		3435555	1					
ANR	3435617	ExpressionStatement	"r = compile_tree ( node , reg )"	373:2:7825:7852	3435555	3	True				
ANR	3435618	AssignmentExpression	"r = compile_tree ( node , reg )"		3435555	0		=			
ANR	3435619	Identifier	r		3435555	0					
ANR	3435620	CallExpression	"compile_tree ( node , reg )"		3435555	1					
ANR	3435621	Callee	compile_tree		3435555	0					
ANR	3435622	Identifier	compile_tree		3435555	0					
ANR	3435623	ArgumentList	node		3435555	1					
ANR	3435624	Argument	node		3435555	0					
ANR	3435625	Identifier	node		3435555	0					
ANR	3435626	Argument	reg		3435555	1					
ANR	3435627	Identifier	reg		3435555	0					
ANR	3435628	IfStatement	if ( r )		3435555	4					
ANR	3435629	Condition	r	374:6:7860:7860	3435555	0	True				
ANR	3435630	Identifier	r		3435555	0					
ANR	3435631	ReturnStatement	return r ;	374:9:7863:7871	3435555	1	True				
ANR	3435632	Identifier	r		3435555	0					
ANR	3435633	IfStatement	if ( empty_info != 0 )		3435555	5					
ANR	3435634	Condition	empty_info != 0	376:6:7880:7894	3435555	0	True				
ANR	3435635	EqualityExpression	empty_info != 0		3435555	0		!=			
ANR	3435636	Identifier	empty_info		3435555	0					
ANR	3435637	PrimaryExpression	0		3435555	1					
ANR	3435638	CompoundStatement		16:23:347:347	3435555	1					
ANR	3435639	IfStatement	if ( empty_info == NQ_TARGET_IS_EMPTY )		3435555	0					
ANR	3435640	Condition	empty_info == NQ_TARGET_IS_EMPTY	377:8:7907:7938	3435555	0	True				
ANR	3435641	EqualityExpression	empty_info == NQ_TARGET_IS_EMPTY		3435555	0		==			
ANR	3435642	Identifier	empty_info		3435555	0					
ANR	3435643	Identifier	NQ_TARGET_IS_EMPTY		3435555	1					
ANR	3435644	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_END )"	378:6:7947:7985	3435555	1	True				
ANR	3435645	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_END )"		3435555	0		=			
ANR	3435646	Identifier	r		3435555	0					
ANR	3435647	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_END )"		3435555	1					
ANR	3435648	Callee	add_opcode		3435555	0					
ANR	3435649	Identifier	add_opcode		3435555	0					
ANR	3435650	ArgumentList	reg		3435555	1					
ANR	3435651	Argument	reg		3435555	0					
ANR	3435652	Identifier	reg		3435555	0					
ANR	3435653	Argument	OP_NULL_CHECK_END		3435555	1					
ANR	3435654	Identifier	OP_NULL_CHECK_END		3435555	0					
ANR	3435655	ElseStatement	else		3435555	0					
ANR	3435656	IfStatement	if ( empty_info == NQ_TARGET_IS_EMPTY_MEM )		3435555	0					
ANR	3435657	Condition	empty_info == NQ_TARGET_IS_EMPTY_MEM	379:13:8000:8035	3435555	0	True				
ANR	3435658	EqualityExpression	empty_info == NQ_TARGET_IS_EMPTY_MEM		3435555	0		==			
ANR	3435659	Identifier	empty_info		3435555	0					
ANR	3435660	Identifier	NQ_TARGET_IS_EMPTY_MEM		3435555	1					
ANR	3435661	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST )"	380:6:8044:8088	3435555	1	True				
ANR	3435662	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST )"		3435555	0		=			
ANR	3435663	Identifier	r		3435555	0					
ANR	3435664	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_END_MEMST )"		3435555	1					
ANR	3435665	Callee	add_opcode		3435555	0					
ANR	3435666	Identifier	add_opcode		3435555	0					
ANR	3435667	ArgumentList	reg		3435555	1					
ANR	3435668	Argument	reg		3435555	0					
ANR	3435669	Identifier	reg		3435555	0					
ANR	3435670	Argument	OP_NULL_CHECK_END_MEMST		3435555	1					
ANR	3435671	Identifier	OP_NULL_CHECK_END_MEMST		3435555	0					
ANR	3435672	ElseStatement	else		3435555	0					
ANR	3435673	IfStatement	if ( empty_info == NQ_TARGET_IS_EMPTY_REC )		3435555	0					
ANR	3435674	Condition	empty_info == NQ_TARGET_IS_EMPTY_REC	381:13:8103:8138	3435555	0	True				
ANR	3435675	EqualityExpression	empty_info == NQ_TARGET_IS_EMPTY_REC		3435555	0		==			
ANR	3435676	Identifier	empty_info		3435555	0					
ANR	3435677	Identifier	NQ_TARGET_IS_EMPTY_REC		3435555	1					
ANR	3435678	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST_PUSH )"	382:6:8147:8196	3435555	1	True				
ANR	3435679	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST_PUSH )"		3435555	0		=			
ANR	3435680	Identifier	r		3435555	0					
ANR	3435681	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_END_MEMST_PUSH )"		3435555	1					
ANR	3435682	Callee	add_opcode		3435555	0					
ANR	3435683	Identifier	add_opcode		3435555	0					
ANR	3435684	ArgumentList	reg		3435555	1					
ANR	3435685	Argument	reg		3435555	0					
ANR	3435686	Identifier	reg		3435555	0					
ANR	3435687	Argument	OP_NULL_CHECK_END_MEMST_PUSH		3435555	1					
ANR	3435688	Identifier	OP_NULL_CHECK_END_MEMST_PUSH		3435555	0					
ANR	3435689	IfStatement	if ( r )		3435555	1					
ANR	3435690	Condition	r	384:8:8207:8207	3435555	0	True				
ANR	3435691	Identifier	r		3435555	0					
ANR	3435692	ReturnStatement	return r ;	384:11:8210:8218	3435555	1	True				
ANR	3435693	Identifier	r		3435555	0					
ANR	3435694	ExpressionStatement	"r = add_mem_num ( reg , saved_num_null_check )"	385:4:8224:8266	3435555	2	True				
ANR	3435695	AssignmentExpression	"r = add_mem_num ( reg , saved_num_null_check )"		3435555	0		=			
ANR	3435696	Identifier	r		3435555	0					
ANR	3435697	CallExpression	"add_mem_num ( reg , saved_num_null_check )"		3435555	1					
ANR	3435698	Callee	add_mem_num		3435555	0					
ANR	3435699	Identifier	add_mem_num		3435555	0					
ANR	3435700	ArgumentList	reg		3435555	1					
ANR	3435701	Argument	reg		3435555	0					
ANR	3435702	Identifier	reg		3435555	0					
ANR	3435703	Argument	saved_num_null_check		3435555	1					
ANR	3435704	Identifier	saved_num_null_check		3435555	0					
ANR	3435705	ReturnStatement	return r ;	387:2:8294:8302	3435555	6	True				
ANR	3435706	Identifier	r		3435555	0					
ANR	3435707	ReturnType	static int		3435555	1					
ANR	3435708	Identifier	compile_tree_empty_check		3435555	2					
ANR	3435709	ParameterList	"Node * node , regex_t * reg , int empty_info"		3435555	3					
ANR	3435710	Parameter	Node * node	360:25:7507:7516	3435555	0	True				
ANR	3435711	ParameterType	Node *		3435555	0					
ANR	3435712	Identifier	node		3435555	1					
ANR	3435713	Parameter	regex_t * reg	360:37:7519:7530	3435555	1	True				
ANR	3435714	ParameterType	regex_t *		3435555	0					
ANR	3435715	Identifier	reg		3435555	1					
ANR	3435716	Parameter	int empty_info	360:51:7533:7546	3435555	2	True				
ANR	3435717	ParameterType	int		3435555	0					
ANR	3435718	Identifier	empty_info		3435555	1					
ANR	3435719	CFGEntryNode	ENTRY		3435555		True				
ANR	3435720	CFGExitNode	EXIT		3435555		True				
ANR	3435721	Symbol	NQ_TARGET_IS_EMPTY		3435555						
ANR	3435722	Symbol	NQ_TARGET_IS_EMPTY_MEM		3435555						
ANR	3435723	Symbol	OP_NULL_CHECK_START		3435555						
ANR	3435724	Symbol	OP_NULL_CHECK_END_MEMST		3435555						
ANR	3435725	Symbol	add_mem_num		3435555						
ANR	3435726	Symbol	reg -> num_null_check		3435555						
ANR	3435727	Symbol	node		3435555						
ANR	3435728	Symbol	r		3435555						
ANR	3435729	Symbol	saved_num_null_check		3435555						
ANR	3435730	Symbol	compile_tree		3435555						
ANR	3435731	Symbol	reg		3435555						
ANR	3435732	Symbol	OP_NULL_CHECK_END		3435555						
ANR	3435733	Symbol	OP_NULL_CHECK_END_MEMST_PUSH		3435555						
ANR	3435734	Symbol	empty_info		3435555						
ANR	3435735	Symbol	add_opcode		3435555						
ANR	3435736	Symbol	* reg		3435555						
ANR	3435737	Symbol	NQ_TARGET_IS_EMPTY_REC		3435555						
ANR	3435738	Function	compile_call	391:0:8330:8638							
ANR	3435739	FunctionDef	"compile_call (CallNode * node , regex_t * reg)"		3435738	0					
ANR	3435740	CompoundStatement		393:0:8384:8638	3435738	0					
ANR	3435741	IdentifierDeclStatement	int r ;	394:2:8388:8393	3435738	0	True				
ANR	3435742	IdentifierDecl	r		3435738	0					
ANR	3435743	IdentifierDeclType	int		3435738	0					
ANR	3435744	Identifier	r		3435738	1					
ANR	3435745	ExpressionStatement	"r = add_opcode ( reg , OP_CALL )"	396:2:8398:8426	3435738	1	True				
ANR	3435746	AssignmentExpression	"r = add_opcode ( reg , OP_CALL )"		3435738	0		=			
ANR	3435747	Identifier	r		3435738	0					
ANR	3435748	CallExpression	"add_opcode ( reg , OP_CALL )"		3435738	1					
ANR	3435749	Callee	add_opcode		3435738	0					
ANR	3435750	Identifier	add_opcode		3435738	0					
ANR	3435751	ArgumentList	reg		3435738	1					
ANR	3435752	Argument	reg		3435738	0					
ANR	3435753	Identifier	reg		3435738	0					
ANR	3435754	Argument	OP_CALL		3435738	1					
ANR	3435755	Identifier	OP_CALL		3435738	0					
ANR	3435756	IfStatement	if ( r )		3435738	2					
ANR	3435757	Condition	r	397:6:8434:8434	3435738	0	True				
ANR	3435758	Identifier	r		3435738	0					
ANR	3435759	ReturnStatement	return r ;	397:9:8437:8445	3435738	1	True				
ANR	3435760	Identifier	r		3435738	0					
ANR	3435761	ExpressionStatement	"r = unset_addr_list_add ( node -> unset_addr_list , BBUF_GET_OFFSET_POS ( reg ) , node -> target )"	398:2:8449:8561	3435738	3	True				
ANR	3435762	AssignmentExpression	"r = unset_addr_list_add ( node -> unset_addr_list , BBUF_GET_OFFSET_POS ( reg ) , node -> target )"		3435738	0		=			
ANR	3435763	Identifier	r		3435738	0					
ANR	3435764	CallExpression	"unset_addr_list_add ( node -> unset_addr_list , BBUF_GET_OFFSET_POS ( reg ) , node -> target )"		3435738	1					
ANR	3435765	Callee	unset_addr_list_add		3435738	0					
ANR	3435766	Identifier	unset_addr_list_add		3435738	0					
ANR	3435767	ArgumentList	node -> unset_addr_list		3435738	1					
ANR	3435768	Argument	node -> unset_addr_list		3435738	0					
ANR	3435769	PtrMemberAccess	node -> unset_addr_list		3435738	0					
ANR	3435770	Identifier	node		3435738	0					
ANR	3435771	Identifier	unset_addr_list		3435738	1					
ANR	3435772	Argument	BBUF_GET_OFFSET_POS ( reg )		3435738	1					
ANR	3435773	CallExpression	BBUF_GET_OFFSET_POS ( reg )		3435738	0					
ANR	3435774	Callee	BBUF_GET_OFFSET_POS		3435738	0					
ANR	3435775	Identifier	BBUF_GET_OFFSET_POS		3435738	0					
ANR	3435776	ArgumentList	reg		3435738	1					
ANR	3435777	Argument	reg		3435738	0					
ANR	3435778	Identifier	reg		3435738	0					
ANR	3435779	Argument	node -> target		3435738	2					
ANR	3435780	PtrMemberAccess	node -> target		3435738	0					
ANR	3435781	Identifier	node		3435738	0					
ANR	3435782	Identifier	target		3435738	1					
ANR	3435783	IfStatement	if ( r )		3435738	4					
ANR	3435784	Condition	r	400:6:8569:8569	3435738	0	True				
ANR	3435785	Identifier	r		3435738	0					
ANR	3435786	ReturnStatement	return r ;	400:9:8572:8580	3435738	1	True				
ANR	3435787	Identifier	r		3435738	0					
ANR	3435788	ExpressionStatement	"r = add_abs_addr ( reg , 0 )"	401:2:8584:8624	3435738	5	True				
ANR	3435789	AssignmentExpression	"r = add_abs_addr ( reg , 0 )"		3435738	0		=			
ANR	3435790	Identifier	r		3435738	0					
ANR	3435791	CallExpression	"add_abs_addr ( reg , 0 )"		3435738	1					
ANR	3435792	Callee	add_abs_addr		3435738	0					
ANR	3435793	Identifier	add_abs_addr		3435738	0					
ANR	3435794	ArgumentList	reg		3435738	1					
ANR	3435795	Argument	reg		3435738	0					
ANR	3435796	Identifier	reg		3435738	0					
ANR	3435797	Argument	0		3435738	1					
ANR	3435798	PrimaryExpression	0		3435738	0					
ANR	3435799	ReturnStatement	return r ;	402:2:8628:8636	3435738	6	True				
ANR	3435800	Identifier	r		3435738	0					
ANR	3435801	ReturnType	static int		3435738	1					
ANR	3435802	Identifier	compile_call		3435738	2					
ANR	3435803	ParameterList	"CallNode * node , regex_t * reg"		3435738	3					
ANR	3435804	Parameter	CallNode * node	392:13:8354:8367	3435738	0	True				
ANR	3435805	ParameterType	CallNode *		3435738	0					
ANR	3435806	Identifier	node		3435738	1					
ANR	3435807	Parameter	regex_t * reg	392:29:8370:8381	3435738	1	True				
ANR	3435808	ParameterType	regex_t *		3435738	0					
ANR	3435809	Identifier	reg		3435738	1					
ANR	3435810	CFGEntryNode	ENTRY		3435738		True				
ANR	3435811	CFGExitNode	EXIT		3435738		True				
ANR	3435812	Symbol	node		3435738						
ANR	3435813	Symbol	r		3435738						
ANR	3435814	Symbol	BBUF_GET_OFFSET_POS		3435738						
ANR	3435815	Symbol	node -> unset_addr_list		3435738						
ANR	3435816	Symbol	reg		3435738						
ANR	3435817	Symbol	OP_CALL		3435738						
ANR	3435818	Symbol	add_abs_addr		3435738						
ANR	3435819	Symbol	* node		3435738						
ANR	3435820	Symbol	add_opcode		3435738						
ANR	3435821	Symbol	node -> target		3435738						
ANR	3435822	Symbol	unset_addr_list_add		3435738						
ANR	3435823	Function	compile_tree_n_times	406:0:8648:8826							
ANR	3435824	FunctionDef	"compile_tree_n_times (Node * node , int n , regex_t * reg)"		3435823	0					
ANR	3435825	CompoundStatement		408:0:8713:8826	3435823	0					
ANR	3435826	IdentifierDeclStatement	"int i , r ;"	409:2:8717:8725	3435823	0	True				
ANR	3435827	IdentifierDecl	i		3435823	0					
ANR	3435828	IdentifierDeclType	int		3435823	0					
ANR	3435829	Identifier	i		3435823	1					
ANR	3435830	IdentifierDecl	r		3435823	1					
ANR	3435831	IdentifierDeclType	int		3435823	0					
ANR	3435832	Identifier	r		3435823	1					
ANR	3435833	ForStatement	for ( i = 0 ; i < n ; i ++ )		3435823	1					
ANR	3435834	ForInit	i = 0 ;	411:7:8735:8740	3435823	0	True				
ANR	3435835	AssignmentExpression	i = 0		3435823	0		=			
ANR	3435836	Identifier	i		3435823	0					
ANR	3435837	PrimaryExpression	0		3435823	1					
ANR	3435838	Condition	i < n	411:14:8742:8746	3435823	1	True				
ANR	3435839	RelationalExpression	i < n		3435823	0		<			
ANR	3435840	Identifier	i		3435823	0					
ANR	3435841	Identifier	n		3435823	1					
ANR	3435842	PostIncDecOperationExpression	i ++	411:21:8749:8751	3435823	2	True				
ANR	3435843	Identifier	i		3435823	0					
ANR	3435844	IncDec	++		3435823	1					
ANR	3435845	CompoundStatement		4:26:40:40	3435823	3					
ANR	3435846	ExpressionStatement	"r = compile_tree ( node , reg )"	412:4:8760:8787	3435823	0	True				
ANR	3435847	AssignmentExpression	"r = compile_tree ( node , reg )"		3435823	0		=			
ANR	3435848	Identifier	r		3435823	0					
ANR	3435849	CallExpression	"compile_tree ( node , reg )"		3435823	1					
ANR	3435850	Callee	compile_tree		3435823	0					
ANR	3435851	Identifier	compile_tree		3435823	0					
ANR	3435852	ArgumentList	node		3435823	1					
ANR	3435853	Argument	node		3435823	0					
ANR	3435854	Identifier	node		3435823	0					
ANR	3435855	Argument	reg		3435823	1					
ANR	3435856	Identifier	reg		3435823	0					
ANR	3435857	IfStatement	if ( r )		3435823	1					
ANR	3435858	Condition	r	413:8:8797:8797	3435823	0	True				
ANR	3435859	Identifier	r		3435823	0					
ANR	3435860	ReturnStatement	return r ;	413:11:8800:8808	3435823	1	True				
ANR	3435861	Identifier	r		3435823	0					
ANR	3435862	ReturnStatement	return 0 ;	415:2:8816:8824	3435823	2	True				
ANR	3435863	PrimaryExpression	0		3435823	0					
ANR	3435864	ReturnType	static int		3435823	1					
ANR	3435865	Identifier	compile_tree_n_times		3435823	2					
ANR	3435866	ParameterList	"Node * node , int n , regex_t * reg"		3435823	3					
ANR	3435867	Parameter	Node * node	407:21:8680:8689	3435823	0	True				
ANR	3435868	ParameterType	Node *		3435823	0					
ANR	3435869	Identifier	node		3435823	1					
ANR	3435870	Parameter	int n	407:33:8692:8696	3435823	1	True				
ANR	3435871	ParameterType	int		3435823	0					
ANR	3435872	Identifier	n		3435823	1					
ANR	3435873	Parameter	regex_t * reg	407:40:8699:8710	3435823	2	True				
ANR	3435874	ParameterType	regex_t *		3435823	0					
ANR	3435875	Identifier	reg		3435823	1					
ANR	3435876	CFGEntryNode	ENTRY		3435823		True				
ANR	3435877	CFGExitNode	EXIT		3435823		True				
ANR	3435878	Symbol	node		3435823						
ANR	3435879	Symbol	r		3435823						
ANR	3435880	Symbol	compile_tree		3435823						
ANR	3435881	Symbol	reg		3435823						
ANR	3435882	Symbol	i		3435823						
ANR	3435883	Symbol	n		3435823						
ANR	3435884	DeclStmt									
ANR	3435885	Decl							int	int	len
ANR	3435886	DeclStmt									
ANR	3435887	Decl							int	int	op
ANR	3435888	DeclStmt									
ANR	3435889	Decl							mb_len	mb_len *	str_len
ANR	3435890	Function	add_compile_string	435:0:9227:9687							
ANR	3435891	FunctionDef	"add_compile_string (UChar * s , int mb_len , int str_len , regex_t * reg , int ignore_case)"		3435890	0					
ANR	3435892	CompoundStatement		438:0:9342:9687	3435890	0					
ANR	3435893	IdentifierDeclStatement	"int op = select_str_opcode ( mb_len , str_len , ignore_case ) ;"	439:2:9346:9402	3435890	0	True				
ANR	3435894	IdentifierDecl	"op = select_str_opcode ( mb_len , str_len , ignore_case )"		3435890	0					
ANR	3435895	IdentifierDeclType	int		3435890	0					
ANR	3435896	Identifier	op		3435890	1					
ANR	3435897	AssignmentExpression	"op = select_str_opcode ( mb_len , str_len , ignore_case )"		3435890	2		=			
ANR	3435898	Identifier	op		3435890	0					
ANR	3435899	CallExpression	"select_str_opcode ( mb_len , str_len , ignore_case )"		3435890	1					
ANR	3435900	Callee	select_str_opcode		3435890	0					
ANR	3435901	Identifier	select_str_opcode		3435890	0					
ANR	3435902	ArgumentList	mb_len		3435890	1					
ANR	3435903	Argument	mb_len		3435890	0					
ANR	3435904	Identifier	mb_len		3435890	0					
ANR	3435905	Argument	str_len		3435890	1					
ANR	3435906	Identifier	str_len		3435890	0					
ANR	3435907	Argument	ignore_case		3435890	2					
ANR	3435908	Identifier	ignore_case		3435890	0					
ANR	3435909	ExpressionStatement	"add_opcode ( reg , op )"	440:2:9406:9425	3435890	1	True				
ANR	3435910	CallExpression	"add_opcode ( reg , op )"		3435890	0					
ANR	3435911	Callee	add_opcode		3435890	0					
ANR	3435912	Identifier	add_opcode		3435890	0					
ANR	3435913	ArgumentList	reg		3435890	1					
ANR	3435914	Argument	reg		3435890	0					
ANR	3435915	Identifier	reg		3435890	0					
ANR	3435916	Argument	op		3435890	1					
ANR	3435917	Identifier	op		3435890	0					
ANR	3435918	IfStatement	if ( op == OP_EXACTMBN )		3435890	2					
ANR	3435919	Condition	op == OP_EXACTMBN	442:6:9434:9450	3435890	0	True				
ANR	3435920	EqualityExpression	op == OP_EXACTMBN		3435890	0		==			
ANR	3435921	Identifier	op		3435890	0					
ANR	3435922	Identifier	OP_EXACTMBN		3435890	1					
ANR	3435923	ExpressionStatement	"add_length ( reg , mb_len )"	443:4:9457:9480	3435890	1	True				
ANR	3435924	CallExpression	"add_length ( reg , mb_len )"		3435890	0					
ANR	3435925	Callee	add_length		3435890	0					
ANR	3435926	Identifier	add_length		3435890	0					
ANR	3435927	ArgumentList	reg		3435890	1					
ANR	3435928	Argument	reg		3435890	0					
ANR	3435929	Identifier	reg		3435890	0					
ANR	3435930	Argument	mb_len		3435890	1					
ANR	3435931	Identifier	mb_len		3435890	0					
ANR	3435932	IfStatement	if ( IS_NEED_STR_LEN_OP_EXACT ( op ) )		3435890	3					
ANR	3435933	Condition	IS_NEED_STR_LEN_OP_EXACT ( op )	445:6:9489:9516	3435890	0	True				
ANR	3435934	CallExpression	IS_NEED_STR_LEN_OP_EXACT ( op )		3435890	0					
ANR	3435935	Callee	IS_NEED_STR_LEN_OP_EXACT		3435890	0					
ANR	3435936	Identifier	IS_NEED_STR_LEN_OP_EXACT		3435890	0					
ANR	3435937	ArgumentList	op		3435890	1					
ANR	3435938	Argument	op		3435890	0					
ANR	3435939	Identifier	op		3435890	0					
ANR	3435940	CompoundStatement		8:36:176:176	3435890	1					
ANR	3435941	IfStatement	if ( op == OP_EXACTN_IC )		3435890	0					
ANR	3435942	Condition	op == OP_EXACTN_IC	446:8:9529:9546	3435890	0	True				
ANR	3435943	EqualityExpression	op == OP_EXACTN_IC		3435890	0		==			
ANR	3435944	Identifier	op		3435890	0					
ANR	3435945	Identifier	OP_EXACTN_IC		3435890	1					
ANR	3435946	ExpressionStatement	"add_length ( reg , mb_len * str_len )"	447:6:9555:9588	3435890	1	True				
ANR	3435947	CallExpression	"add_length ( reg , mb_len * str_len )"		3435890	0					
ANR	3435948	Callee	add_length		3435890	0					
ANR	3435949	Identifier	add_length		3435890	0					
ANR	3435950	ArgumentList	reg		3435890	1					
ANR	3435951	Argument	reg		3435890	0					
ANR	3435952	Identifier	reg		3435890	0					
ANR	3435953	Argument	mb_len * str_len		3435890	1					
ANR	3435954	MultiplicativeExpression	mb_len * str_len		3435890	0		*			
ANR	3435955	Identifier	mb_len		3435890	0					
ANR	3435956	Identifier	str_len		3435890	1					
ANR	3435957	ElseStatement	else		3435890	0					
ANR	3435958	ExpressionStatement	"add_length ( reg , str_len )"	449:6:9605:9629	3435890	0	True				
ANR	3435959	CallExpression	"add_length ( reg , str_len )"		3435890	0					
ANR	3435960	Callee	add_length		3435890	0					
ANR	3435961	Identifier	add_length		3435890	0					
ANR	3435962	ArgumentList	reg		3435890	1					
ANR	3435963	Argument	reg		3435890	0					
ANR	3435964	Identifier	reg		3435890	0					
ANR	3435965	Argument	str_len		3435890	1					
ANR	3435966	Identifier	str_len		3435890	0					
ANR	3435967	ExpressionStatement	"add_bytes ( reg , s , mb_len * str_len )"	452:2:9638:9673	3435890	4	True				
ANR	3435968	CallExpression	"add_bytes ( reg , s , mb_len * str_len )"		3435890	0					
ANR	3435969	Callee	add_bytes		3435890	0					
ANR	3435970	Identifier	add_bytes		3435890	0					
ANR	3435971	ArgumentList	reg		3435890	1					
ANR	3435972	Argument	reg		3435890	0					
ANR	3435973	Identifier	reg		3435890	0					
ANR	3435974	Argument	s		3435890	1					
ANR	3435975	Identifier	s		3435890	0					
ANR	3435976	Argument	mb_len * str_len		3435890	2					
ANR	3435977	MultiplicativeExpression	mb_len * str_len		3435890	0		*			
ANR	3435978	Identifier	mb_len		3435890	0					
ANR	3435979	Identifier	str_len		3435890	1					
ANR	3435980	ReturnStatement	return 0 ;	453:2:9677:9685	3435890	5	True				
ANR	3435981	PrimaryExpression	0		3435890	0					
ANR	3435982	ReturnType	static int		3435890	1					
ANR	3435983	Identifier	add_compile_string		3435890	2					
ANR	3435984	ParameterList	"UChar * s , int mb_len , int str_len , regex_t * reg , int ignore_case"		3435890	3					
ANR	3435985	Parameter	UChar * s	436:19:9257:9264	3435890	0	True				
ANR	3435986	ParameterType	UChar *		3435890	0					
ANR	3435987	Identifier	s		3435890	1					
ANR	3435988	Parameter	int mb_len	436:29:9267:9276	3435890	1	True				
ANR	3435989	ParameterType	int		3435890	0					
ANR	3435990	Identifier	mb_len		3435890	1					
ANR	3435991	Parameter	int str_len	436:41:9279:9289	3435890	2	True				
ANR	3435992	ParameterType	int		3435890	0					
ANR	3435993	Identifier	str_len		3435890	1					
ANR	3435994	Parameter	regex_t * reg	437:19:9311:9322	3435890	3	True				
ANR	3435995	ParameterType	regex_t *		3435890	0					
ANR	3435996	Identifier	reg		3435890	1					
ANR	3435997	Parameter	int ignore_case	437:33:9325:9339	3435890	4	True				
ANR	3435998	ParameterType	int		3435890	0					
ANR	3435999	Identifier	ignore_case		3435890	1					
ANR	3436000	CFGEntryNode	ENTRY		3435890		True				
ANR	3436001	CFGExitNode	EXIT		3435890		True				
ANR	3436002	Symbol	ignore_case		3435890						
ANR	3436003	Symbol	select_str_opcode		3435890						
ANR	3436004	Symbol	op		3435890						
ANR	3436005	Symbol	s		3435890						
ANR	3436006	Symbol	str_len		3435890						
ANR	3436007	Symbol	reg		3435890						
ANR	3436008	Symbol	mb_len		3435890						
ANR	3436009	Symbol	OP_EXACTMBN		3435890						
ANR	3436010	Symbol	IS_NEED_STR_LEN_OP_EXACT		3435890						
ANR	3436011	Symbol	OP_EXACTN_IC		3435890						
ANR	3436012	Function	compile_length_string_node	457:0:9691:10421							
ANR	3436013	FunctionDef	"compile_length_string_node (Node * node , regex_t * reg)"		3436012	0					
ANR	3436014	CompoundStatement		459:0:9755:10421	3436012	0					
ANR	3436015	IdentifierDeclStatement	"int rlen , r , len , prev_len , slen , ambig ;"	460:2:9759:9798	3436012	0	True				
ANR	3436016	IdentifierDecl	rlen		3436012	0					
ANR	3436017	IdentifierDeclType	int		3436012	0					
ANR	3436018	Identifier	rlen		3436012	1					
ANR	3436019	IdentifierDecl	r		3436012	1					
ANR	3436020	IdentifierDeclType	int		3436012	0					
ANR	3436021	Identifier	r		3436012	1					
ANR	3436022	IdentifierDecl	len		3436012	2					
ANR	3436023	IdentifierDeclType	int		3436012	0					
ANR	3436024	Identifier	len		3436012	1					
ANR	3436025	IdentifierDecl	prev_len		3436012	3					
ANR	3436026	IdentifierDeclType	int		3436012	0					
ANR	3436027	Identifier	prev_len		3436012	1					
ANR	3436028	IdentifierDecl	slen		3436012	4					
ANR	3436029	IdentifierDeclType	int		3436012	0					
ANR	3436030	Identifier	slen		3436012	1					
ANR	3436031	IdentifierDecl	ambig		3436012	5					
ANR	3436032	IdentifierDeclType	int		3436012	0					
ANR	3436033	Identifier	ambig		3436012	1					
ANR	3436034	IdentifierDeclStatement	OnigEncoding enc = reg -> enc ;	461:2:9802:9829	3436012	1	True				
ANR	3436035	IdentifierDecl	enc = reg -> enc		3436012	0					
ANR	3436036	IdentifierDeclType	OnigEncoding		3436012	0					
ANR	3436037	Identifier	enc		3436012	1					
ANR	3436038	AssignmentExpression	enc = reg -> enc		3436012	2		=			
ANR	3436039	Identifier	enc		3436012	0					
ANR	3436040	PtrMemberAccess	reg -> enc		3436012	1					
ANR	3436041	Identifier	reg		3436012	0					
ANR	3436042	Identifier	enc		3436012	1					
ANR	3436043	IdentifierDeclStatement	"UChar * p , * prev ;"	462:2:9833:9848	3436012	2	True				
ANR	3436044	IdentifierDecl	* p		3436012	0					
ANR	3436045	IdentifierDeclType	UChar *		3436012	0					
ANR	3436046	Identifier	p		3436012	1					
ANR	3436047	IdentifierDecl	* prev		3436012	1					
ANR	3436048	IdentifierDeclType	UChar *		3436012	0					
ANR	3436049	Identifier	prev		3436012	1					
ANR	3436050	IdentifierDeclStatement	StrNode * sn ;	463:2:9852:9863	3436012	3	True				
ANR	3436051	IdentifierDecl	* sn		3436012	0					
ANR	3436052	IdentifierDeclType	StrNode *		3436012	0					
ANR	3436053	Identifier	sn		3436012	1					
ANR	3436054	ExpressionStatement	sn = NSTR ( node )	465:2:9868:9883	3436012	4	True				
ANR	3436055	AssignmentExpression	sn = NSTR ( node )		3436012	0		=			
ANR	3436056	Identifier	sn		3436012	0					
ANR	3436057	CallExpression	NSTR ( node )		3436012	1					
ANR	3436058	Callee	NSTR		3436012	0					
ANR	3436059	Identifier	NSTR		3436012	0					
ANR	3436060	ArgumentList	node		3436012	1					
ANR	3436061	Argument	node		3436012	0					
ANR	3436062	Identifier	node		3436012	0					
ANR	3436063	IfStatement	if ( sn -> end <= sn -> s )		3436012	5					
ANR	3436064	Condition	sn -> end <= sn -> s	466:6:9891:9906	3436012	0	True				
ANR	3436065	RelationalExpression	sn -> end <= sn -> s		3436012	0		<=			
ANR	3436066	PtrMemberAccess	sn -> end		3436012	0					
ANR	3436067	Identifier	sn		3436012	0					
ANR	3436068	Identifier	end		3436012	1					
ANR	3436069	PtrMemberAccess	sn -> s		3436012	1					
ANR	3436070	Identifier	sn		3436012	0					
ANR	3436071	Identifier	s		3436012	1					
ANR	3436072	ReturnStatement	return 0 ;	467:4:9913:9921	3436012	1	True				
ANR	3436073	PrimaryExpression	0		3436012	0					
ANR	3436074	ExpressionStatement	ambig = NSTRING_IS_AMBIG ( node )	469:2:9926:9956	3436012	6	True				
ANR	3436075	AssignmentExpression	ambig = NSTRING_IS_AMBIG ( node )		3436012	0		=			
ANR	3436076	Identifier	ambig		3436012	0					
ANR	3436077	CallExpression	NSTRING_IS_AMBIG ( node )		3436012	1					
ANR	3436078	Callee	NSTRING_IS_AMBIG		3436012	0					
ANR	3436079	Identifier	NSTRING_IS_AMBIG		3436012	0					
ANR	3436080	ArgumentList	node		3436012	1					
ANR	3436081	Argument	node		3436012	0					
ANR	3436082	Identifier	node		3436012	0					
ANR	3436083	ExpressionStatement	p = prev = sn -> s	471:2:9961:9977	3436012	7	True				
ANR	3436084	AssignmentExpression	p = prev = sn -> s		3436012	0		=			
ANR	3436085	Identifier	p		3436012	0					
ANR	3436086	AssignmentExpression	prev = sn -> s		3436012	1		=			
ANR	3436087	Identifier	prev		3436012	0					
ANR	3436088	PtrMemberAccess	sn -> s		3436012	1					
ANR	3436089	Identifier	sn		3436012	0					
ANR	3436090	Identifier	s		3436012	1					
ANR	3436091	ExpressionStatement	"prev_len = enclen ( enc , p )"	472:2:9981:10006	3436012	8	True				
ANR	3436092	AssignmentExpression	"prev_len = enclen ( enc , p )"		3436012	0		=			
ANR	3436093	Identifier	prev_len		3436012	0					
ANR	3436094	CallExpression	"enclen ( enc , p )"		3436012	1					
ANR	3436095	Callee	enclen		3436012	0					
ANR	3436096	Identifier	enclen		3436012	0					
ANR	3436097	ArgumentList	enc		3436012	1					
ANR	3436098	Argument	enc		3436012	0					
ANR	3436099	Identifier	enc		3436012	0					
ANR	3436100	Argument	p		3436012	1					
ANR	3436101	Identifier	p		3436012	0					
ANR	3436102	ExpressionStatement	p += prev_len	473:2:10010:10023	3436012	9	True				
ANR	3436103	AssignmentExpression	p += prev_len		3436012	0		+=			
ANR	3436104	Identifier	p		3436012	0					
ANR	3436105	Identifier	prev_len		3436012	1					
ANR	3436106	ExpressionStatement	slen = 1	474:2:10027:10035	3436012	10	True				
ANR	3436107	AssignmentExpression	slen = 1		3436012	0		=			
ANR	3436108	Identifier	slen		3436012	0					
ANR	3436109	PrimaryExpression	1		3436012	1					
ANR	3436110	ExpressionStatement	rlen = 0	475:2:10039:10047	3436012	11	True				
ANR	3436111	AssignmentExpression	rlen = 0		3436012	0		=			
ANR	3436112	Identifier	rlen		3436012	0					
ANR	3436113	PrimaryExpression	0		3436012	1					
ANR	3436114	ForStatement	for ( ; p < sn -> end ; )		3436012	12					
ANR	3436115	Condition	p < sn -> end	477:9:10059:10069	3436012	0	True				
ANR	3436116	RelationalExpression	p < sn -> end		3436012	0		<			
ANR	3436117	Identifier	p		3436012	0					
ANR	3436118	PtrMemberAccess	sn -> end		3436012	1					
ANR	3436119	Identifier	sn		3436012	0					
ANR	3436120	Identifier	end		3436012	1					
ANR	3436121	CompoundStatement		19:24:318:318	3436012	1					
ANR	3436122	ExpressionStatement	"len = enclen ( enc , p )"	478:4:10080:10100	3436012	0	True				
ANR	3436123	AssignmentExpression	"len = enclen ( enc , p )"		3436012	0		=			
ANR	3436124	Identifier	len		3436012	0					
ANR	3436125	CallExpression	"enclen ( enc , p )"		3436012	1					
ANR	3436126	Callee	enclen		3436012	0					
ANR	3436127	Identifier	enclen		3436012	0					
ANR	3436128	ArgumentList	enc		3436012	1					
ANR	3436129	Argument	enc		3436012	0					
ANR	3436130	Identifier	enc		3436012	0					
ANR	3436131	Argument	p		3436012	1					
ANR	3436132	Identifier	p		3436012	0					
ANR	3436133	IfStatement	if ( len == prev_len )		3436012	1					
ANR	3436134	Condition	len == prev_len	479:8:10110:10124	3436012	0	True				
ANR	3436135	EqualityExpression	len == prev_len		3436012	0		==			
ANR	3436136	Identifier	len		3436012	0					
ANR	3436137	Identifier	prev_len		3436012	1					
ANR	3436138	CompoundStatement		21:25:371:371	3436012	1					
ANR	3436139	ExpressionStatement	slen ++	480:6:10135:10141	3436012	0	True				
ANR	3436140	PostIncDecOperationExpression	slen ++		3436012	0					
ANR	3436141	Identifier	slen		3436012	0					
ANR	3436142	IncDec	++		3436012	1					
ANR	3436143	ElseStatement	else		3436012	0					
ANR	3436144	CompoundStatement		24:9:402:402	3436012	0					
ANR	3436145	ExpressionStatement	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"	483:6:10166:10229	3436012	0	True				
ANR	3436146	AssignmentExpression	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		3436012	0		=			
ANR	3436147	Identifier	r		3436012	0					
ANR	3436148	CallExpression	"add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		3436012	1					
ANR	3436149	Callee	add_compile_string_length		3436012	0					
ANR	3436150	Identifier	add_compile_string_length		3436012	0					
ANR	3436151	ArgumentList	prev		3436012	1					
ANR	3436152	Argument	prev		3436012	0					
ANR	3436153	Identifier	prev		3436012	0					
ANR	3436154	Argument	prev_len		3436012	1					
ANR	3436155	Identifier	prev_len		3436012	0					
ANR	3436156	Argument	slen		3436012	2					
ANR	3436157	Identifier	slen		3436012	0					
ANR	3436158	Argument	reg		3436012	3					
ANR	3436159	Identifier	reg		3436012	0					
ANR	3436160	Argument	ambig		3436012	4					
ANR	3436161	Identifier	ambig		3436012	0					
ANR	3436162	ExpressionStatement	rlen += r	484:6:10237:10246	3436012	1	True				
ANR	3436163	AssignmentExpression	rlen += r		3436012	0		+=			
ANR	3436164	Identifier	rlen		3436012	0					
ANR	3436165	Identifier	r		3436012	1					
ANR	3436166	ExpressionStatement	prev = p	485:6:10254:10262	3436012	2	True				
ANR	3436167	AssignmentExpression	prev = p		3436012	0		=			
ANR	3436168	Identifier	prev		3436012	0					
ANR	3436169	Identifier	p		3436012	1					
ANR	3436170	ExpressionStatement	slen = 1	486:6:10270:10278	3436012	3	True				
ANR	3436171	AssignmentExpression	slen = 1		3436012	0		=			
ANR	3436172	Identifier	slen		3436012	0					
ANR	3436173	PrimaryExpression	1		3436012	1					
ANR	3436174	ExpressionStatement	prev_len = len	487:6:10286:10300	3436012	4	True				
ANR	3436175	AssignmentExpression	prev_len = len		3436012	0		=			
ANR	3436176	Identifier	prev_len		3436012	0					
ANR	3436177	Identifier	len		3436012	1					
ANR	3436178	ExpressionStatement	p += len	489:4:10312:10320	3436012	2	True				
ANR	3436179	AssignmentExpression	p += len		3436012	0		+=			
ANR	3436180	Identifier	p		3436012	0					
ANR	3436181	Identifier	len		3436012	1					
ANR	3436182	ExpressionStatement	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"	491:2:10328:10391	3436012	13	True				
ANR	3436183	AssignmentExpression	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		3436012	0		=			
ANR	3436184	Identifier	r		3436012	0					
ANR	3436185	CallExpression	"add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		3436012	1					
ANR	3436186	Callee	add_compile_string_length		3436012	0					
ANR	3436187	Identifier	add_compile_string_length		3436012	0					
ANR	3436188	ArgumentList	prev		3436012	1					
ANR	3436189	Argument	prev		3436012	0					
ANR	3436190	Identifier	prev		3436012	0					
ANR	3436191	Argument	prev_len		3436012	1					
ANR	3436192	Identifier	prev_len		3436012	0					
ANR	3436193	Argument	slen		3436012	2					
ANR	3436194	Identifier	slen		3436012	0					
ANR	3436195	Argument	reg		3436012	3					
ANR	3436196	Identifier	reg		3436012	0					
ANR	3436197	Argument	ambig		3436012	4					
ANR	3436198	Identifier	ambig		3436012	0					
ANR	3436199	ExpressionStatement	rlen += r	492:2:10395:10404	3436012	14	True				
ANR	3436200	AssignmentExpression	rlen += r		3436012	0		+=			
ANR	3436201	Identifier	rlen		3436012	0					
ANR	3436202	Identifier	r		3436012	1					
ANR	3436203	ReturnStatement	return rlen ;	493:2:10408:10419	3436012	15	True				
ANR	3436204	Identifier	rlen		3436012	0					
ANR	3436205	ReturnType	static int		3436012	1					
ANR	3436206	Identifier	compile_length_string_node		3436012	2					
ANR	3436207	ParameterList	"Node * node , regex_t * reg"		3436012	3					
ANR	3436208	Parameter	Node * node	458:27:9729:9738	3436012	0	True				
ANR	3436209	ParameterType	Node *		3436012	0					
ANR	3436210	Identifier	node		3436012	1					
ANR	3436211	Parameter	regex_t * reg	458:39:9741:9752	3436012	1	True				
ANR	3436212	ParameterType	regex_t *		3436012	0					
ANR	3436213	Identifier	reg		3436012	1					
ANR	3436214	CFGEntryNode	ENTRY		3436012		True				
ANR	3436215	CFGExitNode	EXIT		3436012		True				
ANR	3436216	Symbol	* sn		3436012						
ANR	3436217	Symbol	NSTRING_IS_AMBIG		3436012						
ANR	3436218	Symbol	prev_len		3436012						
ANR	3436219	Symbol	prev		3436012						
ANR	3436220	Symbol	NSTR		3436012						
ANR	3436221	Symbol	enclen		3436012						
ANR	3436222	Symbol	reg -> enc		3436012						
ANR	3436223	Symbol	p		3436012						
ANR	3436224	Symbol	node		3436012						
ANR	3436225	Symbol	r		3436012						
ANR	3436226	Symbol	sn -> s		3436012						
ANR	3436227	Symbol	len		3436012						
ANR	3436228	Symbol	reg		3436012						
ANR	3436229	Symbol	add_compile_string_length		3436012						
ANR	3436230	Symbol	rlen		3436012						
ANR	3436231	Symbol	slen		3436012						
ANR	3436232	Symbol	enc		3436012						
ANR	3436233	Symbol	sn		3436012						
ANR	3436234	Symbol	sn -> end		3436012						
ANR	3436235	Symbol	ambig		3436012						
ANR	3436236	Symbol	* reg		3436012						
ANR	3436237	Function	compile_length_string_raw_node	496:0:10424:10614							
ANR	3436238	FunctionDef	"compile_length_string_raw_node (StrNode * sn , regex_t * reg)"		3436237	0					
ANR	3436239	CompoundStatement		498:0:10493:10614	3436237	0					
ANR	3436240	IfStatement	if ( sn -> end <= sn -> s )		3436237	0					
ANR	3436241	Condition	sn -> end <= sn -> s	499:6:10501:10516	3436237	0	True				
ANR	3436242	RelationalExpression	sn -> end <= sn -> s		3436237	0		<=			
ANR	3436243	PtrMemberAccess	sn -> end		3436237	0					
ANR	3436244	Identifier	sn		3436237	0					
ANR	3436245	Identifier	end		3436237	1					
ANR	3436246	PtrMemberAccess	sn -> s		3436237	1					
ANR	3436247	Identifier	sn		3436237	0					
ANR	3436248	Identifier	s		3436237	1					
ANR	3436249	ReturnStatement	return 0 ;	500:4:10523:10531	3436237	1	True				
ANR	3436250	PrimaryExpression	0		3436237	0					
ANR	3436251	ReturnStatement	"return add_compile_string_length ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 ) ;"	502:2:10536:10612	3436237	1	True				
ANR	3436252	CallExpression	"add_compile_string_length ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 )"		3436237	0					
ANR	3436253	Callee	add_compile_string_length		3436237	0					
ANR	3436254	Identifier	add_compile_string_length		3436237	0					
ANR	3436255	ArgumentList	sn -> s		3436237	1					
ANR	3436256	Argument	sn -> s		3436237	0					
ANR	3436257	PtrMemberAccess	sn -> s		3436237	0					
ANR	3436258	Identifier	sn		3436237	0					
ANR	3436259	Identifier	s		3436237	1					
ANR	3436260	Argument	1		3436237	1					
ANR	3436261	PrimaryExpression	1		3436237	0					
ANR	3436262	Argument	sn -> end - sn -> s		3436237	2					
ANR	3436263	AdditiveExpression	sn -> end - sn -> s		3436237	0		-			
ANR	3436264	PtrMemberAccess	sn -> end		3436237	0					
ANR	3436265	Identifier	sn		3436237	0					
ANR	3436266	Identifier	end		3436237	1					
ANR	3436267	PtrMemberAccess	sn -> s		3436237	1					
ANR	3436268	Identifier	sn		3436237	0					
ANR	3436269	Identifier	s		3436237	1					
ANR	3436270	Argument	reg		3436237	3					
ANR	3436271	Identifier	reg		3436237	0					
ANR	3436272	Argument	0		3436237	4					
ANR	3436273	PrimaryExpression	0		3436237	0					
ANR	3436274	ReturnType	static int		3436237	1					
ANR	3436275	Identifier	compile_length_string_raw_node		3436237	2					
ANR	3436276	ParameterList	"StrNode * sn , regex_t * reg"		3436237	3					
ANR	3436277	Parameter	StrNode * sn	497:31:10466:10476	3436237	0	True				
ANR	3436278	ParameterType	StrNode *		3436237	0					
ANR	3436279	Identifier	sn		3436237	1					
ANR	3436280	Parameter	regex_t * reg	497:44:10479:10490	3436237	1	True				
ANR	3436281	ParameterType	regex_t *		3436237	0					
ANR	3436282	Identifier	reg		3436237	1					
ANR	3436283	CFGEntryNode	ENTRY		3436237		True				
ANR	3436284	CFGExitNode	EXIT		3436237		True				
ANR	3436285	Symbol	* sn		3436237						
ANR	3436286	Symbol	sn -> s		3436237						
ANR	3436287	Symbol	reg		3436237						
ANR	3436288	Symbol	add_compile_string_length		3436237						
ANR	3436289	Symbol	sn		3436237						
ANR	3436290	Symbol	sn -> end		3436237						
ANR	3436291	Function	compile_string_node	505:0:10617:11312							
ANR	3436292	FunctionDef	"compile_string_node (Node * node , regex_t * reg)"		3436291	0					
ANR	3436293	CompoundStatement		507:0:10674:11312	3436291	0					
ANR	3436294	IdentifierDeclStatement	"int r , len , prev_len , slen , ambig ;"	508:2:10678:10711	3436291	0	True				
ANR	3436295	IdentifierDecl	r		3436291	0					
ANR	3436296	IdentifierDeclType	int		3436291	0					
ANR	3436297	Identifier	r		3436291	1					
ANR	3436298	IdentifierDecl	len		3436291	1					
ANR	3436299	IdentifierDeclType	int		3436291	0					
ANR	3436300	Identifier	len		3436291	1					
ANR	3436301	IdentifierDecl	prev_len		3436291	2					
ANR	3436302	IdentifierDeclType	int		3436291	0					
ANR	3436303	Identifier	prev_len		3436291	1					
ANR	3436304	IdentifierDecl	slen		3436291	3					
ANR	3436305	IdentifierDeclType	int		3436291	0					
ANR	3436306	Identifier	slen		3436291	1					
ANR	3436307	IdentifierDecl	ambig		3436291	4					
ANR	3436308	IdentifierDeclType	int		3436291	0					
ANR	3436309	Identifier	ambig		3436291	1					
ANR	3436310	IdentifierDeclStatement	OnigEncoding enc = reg -> enc ;	509:2:10715:10742	3436291	1	True				
ANR	3436311	IdentifierDecl	enc = reg -> enc		3436291	0					
ANR	3436312	IdentifierDeclType	OnigEncoding		3436291	0					
ANR	3436313	Identifier	enc		3436291	1					
ANR	3436314	AssignmentExpression	enc = reg -> enc		3436291	2		=			
ANR	3436315	Identifier	enc		3436291	0					
ANR	3436316	PtrMemberAccess	reg -> enc		3436291	1					
ANR	3436317	Identifier	reg		3436291	0					
ANR	3436318	Identifier	enc		3436291	1					
ANR	3436319	IdentifierDeclStatement	"UChar * p , * prev , * end ;"	510:2:10746:10767	3436291	2	True				
ANR	3436320	IdentifierDecl	* p		3436291	0					
ANR	3436321	IdentifierDeclType	UChar *		3436291	0					
ANR	3436322	Identifier	p		3436291	1					
ANR	3436323	IdentifierDecl	* prev		3436291	1					
ANR	3436324	IdentifierDeclType	UChar *		3436291	0					
ANR	3436325	Identifier	prev		3436291	1					
ANR	3436326	IdentifierDecl	* end		3436291	2					
ANR	3436327	IdentifierDeclType	UChar *		3436291	0					
ANR	3436328	Identifier	end		3436291	1					
ANR	3436329	IdentifierDeclStatement	StrNode * sn ;	511:2:10771:10782	3436291	3	True				
ANR	3436330	IdentifierDecl	* sn		3436291	0					
ANR	3436331	IdentifierDeclType	StrNode *		3436291	0					
ANR	3436332	Identifier	sn		3436291	1					
ANR	3436333	ExpressionStatement	sn = NSTR ( node )	513:2:10787:10802	3436291	4	True				
ANR	3436334	AssignmentExpression	sn = NSTR ( node )		3436291	0		=			
ANR	3436335	Identifier	sn		3436291	0					
ANR	3436336	CallExpression	NSTR ( node )		3436291	1					
ANR	3436337	Callee	NSTR		3436291	0					
ANR	3436338	Identifier	NSTR		3436291	0					
ANR	3436339	ArgumentList	node		3436291	1					
ANR	3436340	Argument	node		3436291	0					
ANR	3436341	Identifier	node		3436291	0					
ANR	3436342	IfStatement	if ( sn -> end <= sn -> s )		3436291	5					
ANR	3436343	Condition	sn -> end <= sn -> s	514:6:10810:10825	3436291	0	True				
ANR	3436344	RelationalExpression	sn -> end <= sn -> s		3436291	0		<=			
ANR	3436345	PtrMemberAccess	sn -> end		3436291	0					
ANR	3436346	Identifier	sn		3436291	0					
ANR	3436347	Identifier	end		3436291	1					
ANR	3436348	PtrMemberAccess	sn -> s		3436291	1					
ANR	3436349	Identifier	sn		3436291	0					
ANR	3436350	Identifier	s		3436291	1					
ANR	3436351	ReturnStatement	return 0 ;	515:4:10832:10840	3436291	1	True				
ANR	3436352	PrimaryExpression	0		3436291	0					
ANR	3436353	ExpressionStatement	end = sn -> end	517:2:10845:10858	3436291	6	True				
ANR	3436354	AssignmentExpression	end = sn -> end		3436291	0		=			
ANR	3436355	Identifier	end		3436291	0					
ANR	3436356	PtrMemberAccess	sn -> end		3436291	1					
ANR	3436357	Identifier	sn		3436291	0					
ANR	3436358	Identifier	end		3436291	1					
ANR	3436359	ExpressionStatement	ambig = NSTRING_IS_AMBIG ( node )	518:2:10862:10892	3436291	7	True				
ANR	3436360	AssignmentExpression	ambig = NSTRING_IS_AMBIG ( node )		3436291	0		=			
ANR	3436361	Identifier	ambig		3436291	0					
ANR	3436362	CallExpression	NSTRING_IS_AMBIG ( node )		3436291	1					
ANR	3436363	Callee	NSTRING_IS_AMBIG		3436291	0					
ANR	3436364	Identifier	NSTRING_IS_AMBIG		3436291	0					
ANR	3436365	ArgumentList	node		3436291	1					
ANR	3436366	Argument	node		3436291	0					
ANR	3436367	Identifier	node		3436291	0					
ANR	3436368	ExpressionStatement	p = prev = sn -> s	520:2:10897:10913	3436291	8	True				
ANR	3436369	AssignmentExpression	p = prev = sn -> s		3436291	0		=			
ANR	3436370	Identifier	p		3436291	0					
ANR	3436371	AssignmentExpression	prev = sn -> s		3436291	1		=			
ANR	3436372	Identifier	prev		3436291	0					
ANR	3436373	PtrMemberAccess	sn -> s		3436291	1					
ANR	3436374	Identifier	sn		3436291	0					
ANR	3436375	Identifier	s		3436291	1					
ANR	3436376	ExpressionStatement	"prev_len = enclen ( enc , p )"	521:2:10917:10942	3436291	9	True				
ANR	3436377	AssignmentExpression	"prev_len = enclen ( enc , p )"		3436291	0		=			
ANR	3436378	Identifier	prev_len		3436291	0					
ANR	3436379	CallExpression	"enclen ( enc , p )"		3436291	1					
ANR	3436380	Callee	enclen		3436291	0					
ANR	3436381	Identifier	enclen		3436291	0					
ANR	3436382	ArgumentList	enc		3436291	1					
ANR	3436383	Argument	enc		3436291	0					
ANR	3436384	Identifier	enc		3436291	0					
ANR	3436385	Argument	p		3436291	1					
ANR	3436386	Identifier	p		3436291	0					
ANR	3436387	ExpressionStatement	p += prev_len	522:2:10946:10959	3436291	10	True				
ANR	3436388	AssignmentExpression	p += prev_len		3436291	0		+=			
ANR	3436389	Identifier	p		3436291	0					
ANR	3436390	Identifier	prev_len		3436291	1					
ANR	3436391	ExpressionStatement	slen = 1	523:2:10963:10971	3436291	11	True				
ANR	3436392	AssignmentExpression	slen = 1		3436291	0		=			
ANR	3436393	Identifier	slen		3436291	0					
ANR	3436394	PrimaryExpression	1		3436291	1					
ANR	3436395	ForStatement	for ( ; p < end ; )		3436291	12					
ANR	3436396	Condition	p < end	525:9:10983:10989	3436291	0	True				
ANR	3436397	RelationalExpression	p < end		3436291	0		<			
ANR	3436398	Identifier	p		3436291	0					
ANR	3436399	Identifier	end		3436291	1					
ANR	3436400	CompoundStatement		19:20:319:319	3436291	1					
ANR	3436401	ExpressionStatement	"len = enclen ( enc , p )"	526:4:11000:11020	3436291	0	True				
ANR	3436402	AssignmentExpression	"len = enclen ( enc , p )"		3436291	0		=			
ANR	3436403	Identifier	len		3436291	0					
ANR	3436404	CallExpression	"enclen ( enc , p )"		3436291	1					
ANR	3436405	Callee	enclen		3436291	0					
ANR	3436406	Identifier	enclen		3436291	0					
ANR	3436407	ArgumentList	enc		3436291	1					
ANR	3436408	Argument	enc		3436291	0					
ANR	3436409	Identifier	enc		3436291	0					
ANR	3436410	Argument	p		3436291	1					
ANR	3436411	Identifier	p		3436291	0					
ANR	3436412	IfStatement	if ( len == prev_len )		3436291	1					
ANR	3436413	Condition	len == prev_len	527:8:11030:11044	3436291	0	True				
ANR	3436414	EqualityExpression	len == prev_len		3436291	0		==			
ANR	3436415	Identifier	len		3436291	0					
ANR	3436416	Identifier	prev_len		3436291	1					
ANR	3436417	CompoundStatement		21:25:372:372	3436291	1					
ANR	3436418	ExpressionStatement	slen ++	528:6:11055:11061	3436291	0	True				
ANR	3436419	PostIncDecOperationExpression	slen ++		3436291	0					
ANR	3436420	Identifier	slen		3436291	0					
ANR	3436421	IncDec	++		3436291	1					
ANR	3436422	ElseStatement	else		3436291	0					
ANR	3436423	CompoundStatement		24:9:403:403	3436291	0					
ANR	3436424	ExpressionStatement	"r = add_compile_string ( prev , prev_len , slen , reg , ambig )"	531:6:11086:11142	3436291	0	True				
ANR	3436425	AssignmentExpression	"r = add_compile_string ( prev , prev_len , slen , reg , ambig )"		3436291	0		=			
ANR	3436426	Identifier	r		3436291	0					
ANR	3436427	CallExpression	"add_compile_string ( prev , prev_len , slen , reg , ambig )"		3436291	1					
ANR	3436428	Callee	add_compile_string		3436291	0					
ANR	3436429	Identifier	add_compile_string		3436291	0					
ANR	3436430	ArgumentList	prev		3436291	1					
ANR	3436431	Argument	prev		3436291	0					
ANR	3436432	Identifier	prev		3436291	0					
ANR	3436433	Argument	prev_len		3436291	1					
ANR	3436434	Identifier	prev_len		3436291	0					
ANR	3436435	Argument	slen		3436291	2					
ANR	3436436	Identifier	slen		3436291	0					
ANR	3436437	Argument	reg		3436291	3					
ANR	3436438	Identifier	reg		3436291	0					
ANR	3436439	Argument	ambig		3436291	4					
ANR	3436440	Identifier	ambig		3436291	0					
ANR	3436441	IfStatement	if ( r )		3436291	1					
ANR	3436442	Condition	r	532:10:11154:11154	3436291	0	True				
ANR	3436443	Identifier	r		3436291	0					
ANR	3436444	ReturnStatement	return r ;	532:13:11157:11165	3436291	1	True				
ANR	3436445	Identifier	r		3436291	0					
ANR	3436446	ExpressionStatement	prev = p	534:6:11174:11183	3436291	2	True				
ANR	3436447	AssignmentExpression	prev = p		3436291	0		=			
ANR	3436448	Identifier	prev		3436291	0					
ANR	3436449	Identifier	p		3436291	1					
ANR	3436450	ExpressionStatement	slen = 1	535:6:11191:11200	3436291	3	True				
ANR	3436451	AssignmentExpression	slen = 1		3436291	0		=			
ANR	3436452	Identifier	slen		3436291	0					
ANR	3436453	PrimaryExpression	1		3436291	1					
ANR	3436454	ExpressionStatement	prev_len = len	536:6:11208:11222	3436291	4	True				
ANR	3436455	AssignmentExpression	prev_len = len		3436291	0		=			
ANR	3436456	Identifier	prev_len		3436291	0					
ANR	3436457	Identifier	len		3436291	1					
ANR	3436458	ExpressionStatement	p += len	539:4:11235:11243	3436291	2	True				
ANR	3436459	AssignmentExpression	p += len		3436291	0		+=			
ANR	3436460	Identifier	p		3436291	0					
ANR	3436461	Identifier	len		3436291	1					
ANR	3436462	ReturnStatement	"return add_compile_string ( prev , prev_len , slen , reg , ambig ) ;"	541:2:11251:11310	3436291	13	True				
ANR	3436463	CallExpression	"add_compile_string ( prev , prev_len , slen , reg , ambig )"		3436291	0					
ANR	3436464	Callee	add_compile_string		3436291	0					
ANR	3436465	Identifier	add_compile_string		3436291	0					
ANR	3436466	ArgumentList	prev		3436291	1					
ANR	3436467	Argument	prev		3436291	0					
ANR	3436468	Identifier	prev		3436291	0					
ANR	3436469	Argument	prev_len		3436291	1					
ANR	3436470	Identifier	prev_len		3436291	0					
ANR	3436471	Argument	slen		3436291	2					
ANR	3436472	Identifier	slen		3436291	0					
ANR	3436473	Argument	reg		3436291	3					
ANR	3436474	Identifier	reg		3436291	0					
ANR	3436475	Argument	ambig		3436291	4					
ANR	3436476	Identifier	ambig		3436291	0					
ANR	3436477	ReturnType	static int		3436291	1					
ANR	3436478	Identifier	compile_string_node		3436291	2					
ANR	3436479	ParameterList	"Node * node , regex_t * reg"		3436291	3					
ANR	3436480	Parameter	Node * node	506:20:10648:10657	3436291	0	True				
ANR	3436481	ParameterType	Node *		3436291	0					
ANR	3436482	Identifier	node		3436291	1					
ANR	3436483	Parameter	regex_t * reg	506:32:10660:10671	3436291	1	True				
ANR	3436484	ParameterType	regex_t *		3436291	0					
ANR	3436485	Identifier	reg		3436291	1					
ANR	3436486	CFGEntryNode	ENTRY		3436291		True				
ANR	3436487	CFGExitNode	EXIT		3436291		True				
ANR	3436488	Symbol	* sn		3436291						
ANR	3436489	Symbol	NSTRING_IS_AMBIG		3436291						
ANR	3436490	Symbol	prev_len		3436291						
ANR	3436491	Symbol	prev		3436291						
ANR	3436492	Symbol	NSTR		3436291						
ANR	3436493	Symbol	enclen		3436291						
ANR	3436494	Symbol	reg -> enc		3436291						
ANR	3436495	Symbol	p		3436291						
ANR	3436496	Symbol	node		3436291						
ANR	3436497	Symbol	r		3436291						
ANR	3436498	Symbol	add_compile_string		3436291						
ANR	3436499	Symbol	sn -> s		3436291						
ANR	3436500	Symbol	len		3436291						
ANR	3436501	Symbol	reg		3436291						
ANR	3436502	Symbol	slen		3436291						
ANR	3436503	Symbol	end		3436291						
ANR	3436504	Symbol	enc		3436291						
ANR	3436505	Symbol	sn		3436291						
ANR	3436506	Symbol	sn -> end		3436291						
ANR	3436507	Symbol	ambig		3436291						
ANR	3436508	Symbol	* reg		3436291						
ANR	3436509	Function	compile_string_raw_node	544:0:11315:11491							
ANR	3436510	FunctionDef	"compile_string_raw_node (StrNode * sn , regex_t * reg)"		3436509	0					
ANR	3436511	CompoundStatement		546:0:11377:11491	3436509	0					
ANR	3436512	IfStatement	if ( sn -> end <= sn -> s )		3436509	0					
ANR	3436513	Condition	sn -> end <= sn -> s	547:6:11385:11400	3436509	0	True				
ANR	3436514	RelationalExpression	sn -> end <= sn -> s		3436509	0		<=			
ANR	3436515	PtrMemberAccess	sn -> end		3436509	0					
ANR	3436516	Identifier	sn		3436509	0					
ANR	3436517	Identifier	end		3436509	1					
ANR	3436518	PtrMemberAccess	sn -> s		3436509	1					
ANR	3436519	Identifier	sn		3436509	0					
ANR	3436520	Identifier	s		3436509	1					
ANR	3436521	ReturnStatement	return 0 ;	548:4:11407:11415	3436509	1	True				
ANR	3436522	PrimaryExpression	0		3436509	0					
ANR	3436523	ReturnStatement	"return add_compile_string ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 ) ;"	550:2:11420:11489	3436509	1	True				
ANR	3436524	CallExpression	"add_compile_string ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 )"		3436509	0					
ANR	3436525	Callee	add_compile_string		3436509	0					
ANR	3436526	Identifier	add_compile_string		3436509	0					
ANR	3436527	ArgumentList	sn -> s		3436509	1					
ANR	3436528	Argument	sn -> s		3436509	0					
ANR	3436529	PtrMemberAccess	sn -> s		3436509	0					
ANR	3436530	Identifier	sn		3436509	0					
ANR	3436531	Identifier	s		3436509	1					
ANR	3436532	Argument	1		3436509	1					
ANR	3436533	PrimaryExpression	1		3436509	0					
ANR	3436534	Argument	sn -> end - sn -> s		3436509	2					
ANR	3436535	AdditiveExpression	sn -> end - sn -> s		3436509	0		-			
ANR	3436536	PtrMemberAccess	sn -> end		3436509	0					
ANR	3436537	Identifier	sn		3436509	0					
ANR	3436538	Identifier	end		3436509	1					
ANR	3436539	PtrMemberAccess	sn -> s		3436509	1					
ANR	3436540	Identifier	sn		3436509	0					
ANR	3436541	Identifier	s		3436509	1					
ANR	3436542	Argument	reg		3436509	3					
ANR	3436543	Identifier	reg		3436509	0					
ANR	3436544	Argument	0		3436509	4					
ANR	3436545	PrimaryExpression	0		3436509	0					
ANR	3436546	ReturnType	static int		3436509	1					
ANR	3436547	Identifier	compile_string_raw_node		3436509	2					
ANR	3436548	ParameterList	"StrNode * sn , regex_t * reg"		3436509	3					
ANR	3436549	Parameter	StrNode * sn	545:24:11350:11360	3436509	0	True				
ANR	3436550	ParameterType	StrNode *		3436509	0					
ANR	3436551	Identifier	sn		3436509	1					
ANR	3436552	Parameter	regex_t * reg	545:37:11363:11374	3436509	1	True				
ANR	3436553	ParameterType	regex_t *		3436509	0					
ANR	3436554	Identifier	reg		3436509	1					
ANR	3436555	CFGEntryNode	ENTRY		3436509		True				
ANR	3436556	CFGExitNode	EXIT		3436509		True				
ANR	3436557	Symbol	* sn		3436509						
ANR	3436558	Symbol	add_compile_string		3436509						
ANR	3436559	Symbol	sn -> s		3436509						
ANR	3436560	Symbol	reg		3436509						
ANR	3436561	Symbol	sn		3436509						
ANR	3436562	Symbol	sn -> end		3436509						
ANR	3436563	Function	add_multi_byte_cclass	553:0:11494:12151							
ANR	3436564	FunctionDef	"add_multi_byte_cclass (BBuf * mbuf , regex_t * reg)"		3436563	0					
ANR	3436565	CompoundStatement		555:0:11553:12151	3436563	0					
ANR	3436566	ExpressionStatement	"add_length ( reg , mbuf -> used )"	557:2:11595:11622	3436563	0	True				
ANR	3436567	CallExpression	"add_length ( reg , mbuf -> used )"		3436563	0					
ANR	3436568	Callee	add_length		3436563	0					
ANR	3436569	Identifier	add_length		3436563	0					
ANR	3436570	ArgumentList	reg		3436563	1					
ANR	3436571	Argument	reg		3436563	0					
ANR	3436572	Identifier	reg		3436563	0					
ANR	3436573	Argument	mbuf -> used		3436563	1					
ANR	3436574	PtrMemberAccess	mbuf -> used		3436563	0					
ANR	3436575	Identifier	mbuf		3436563	0					
ANR	3436576	Identifier	used		3436563	1					
ANR	3436577	ReturnStatement	"return add_bytes ( reg , mbuf -> p , mbuf -> used ) ;"	558:2:11626:11668	3436563	1	True				
ANR	3436578	CallExpression	"add_bytes ( reg , mbuf -> p , mbuf -> used )"		3436563	0					
ANR	3436579	Callee	add_bytes		3436563	0					
ANR	3436580	Identifier	add_bytes		3436563	0					
ANR	3436581	ArgumentList	reg		3436563	1					
ANR	3436582	Argument	reg		3436563	0					
ANR	3436583	Identifier	reg		3436563	0					
ANR	3436584	Argument	mbuf -> p		3436563	1					
ANR	3436585	PtrMemberAccess	mbuf -> p		3436563	0					
ANR	3436586	Identifier	mbuf		3436563	0					
ANR	3436587	Identifier	p		3436563	1					
ANR	3436588	Argument	mbuf -> used		3436563	2					
ANR	3436589	PtrMemberAccess	mbuf -> used		3436563	0					
ANR	3436590	Identifier	mbuf		3436563	0					
ANR	3436591	Identifier	used		3436563	1					
ANR	3436592	ReturnType	static int		3436563	1					
ANR	3436593	Identifier	add_multi_byte_cclass		3436563	2					
ANR	3436594	ParameterList	"BBuf * mbuf , regex_t * reg"		3436563	3					
ANR	3436595	Parameter	BBuf * mbuf	554:22:11527:11536	3436563	0	True				
ANR	3436596	ParameterType	BBuf *		3436563	0					
ANR	3436597	Identifier	mbuf		3436563	1					
ANR	3436598	Parameter	regex_t * reg	554:34:11539:11550	3436563	1	True				
ANR	3436599	ParameterType	regex_t *		3436563	0					
ANR	3436600	Identifier	reg		3436563	1					
ANR	3436601	CFGEntryNode	ENTRY		3436563		True				
ANR	3436602	CFGExitNode	EXIT		3436563		True				
ANR	3436603	Symbol	add_bytes		3436563						
ANR	3436604	Symbol	mbuf		3436563						
ANR	3436605	Symbol	reg		3436563						
ANR	3436606	Symbol	mbuf -> used		3436563						
ANR	3436607	Symbol	* mbuf		3436563						
ANR	3436608	Symbol	mbuf -> p		3436563						
ANR	3436609	Function	compile_length_cclass_node	576:0:12154:12740							
ANR	3436610	FunctionDef	"compile_length_cclass_node (CClassNode * cc , regex_t * reg)"		3436609	0					
ANR	3436611	CompoundStatement		578:0:12222:12740	3436609	0					
ANR	3436612	IdentifierDeclStatement	int len ;	579:2:12226:12233	3436609	0	True				
ANR	3436613	IdentifierDecl	len		3436609	0					
ANR	3436614	IdentifierDeclType	int		3436609	0					
ANR	3436615	Identifier	len		3436609	1					
ANR	3436616	IfStatement	if ( IS_NCCLASS_SHARE ( cc ) )		3436609	1					
ANR	3436617	Condition	IS_NCCLASS_SHARE ( cc )	581:6:12242:12261	3436609	0	True				
ANR	3436618	CallExpression	IS_NCCLASS_SHARE ( cc )		3436609	0					
ANR	3436619	Callee	IS_NCCLASS_SHARE		3436609	0					
ANR	3436620	Identifier	IS_NCCLASS_SHARE		3436609	0					
ANR	3436621	ArgumentList	cc		3436609	1					
ANR	3436622	Argument	cc		3436609	0					
ANR	3436623	Identifier	cc		3436609	0					
ANR	3436624	CompoundStatement		4:28:41:41	3436609	1					
ANR	3436625	ExpressionStatement	len = SIZE_OPCODE + SIZE_POINTER	582:4:12270:12302	3436609	0	True				
ANR	3436626	AssignmentExpression	len = SIZE_OPCODE + SIZE_POINTER		3436609	0		=			
ANR	3436627	Identifier	len		3436609	0					
ANR	3436628	AdditiveExpression	SIZE_OPCODE + SIZE_POINTER		3436609	1		+			
ANR	3436629	Identifier	SIZE_OPCODE		3436609	0					
ANR	3436630	Identifier	SIZE_POINTER		3436609	1					
ANR	3436631	ReturnStatement	return len ;	583:4:12308:12318	3436609	1	True				
ANR	3436632	Identifier	len		3436609	0					
ANR	3436633	IfStatement	if ( IS_NULL ( cc -> mbuf ) )		3436609	2					
ANR	3436634	Condition	IS_NULL ( cc -> mbuf )	586:6:12331:12347	3436609	0	True				
ANR	3436635	CallExpression	IS_NULL ( cc -> mbuf )		3436609	0					
ANR	3436636	Callee	IS_NULL		3436609	0					
ANR	3436637	Identifier	IS_NULL		3436609	0					
ANR	3436638	ArgumentList	cc -> mbuf		3436609	1					
ANR	3436639	Argument	cc -> mbuf		3436609	0					
ANR	3436640	PtrMemberAccess	cc -> mbuf		3436609	0					
ANR	3436641	Identifier	cc		3436609	0					
ANR	3436642	Identifier	mbuf		3436609	1					
ANR	3436643	CompoundStatement		9:25:127:127	3436609	1					
ANR	3436644	ExpressionStatement	len = SIZE_OPCODE + SIZE_BITSET	587:4:12356:12387	3436609	0	True				
ANR	3436645	AssignmentExpression	len = SIZE_OPCODE + SIZE_BITSET		3436609	0		=			
ANR	3436646	Identifier	len		3436609	0					
ANR	3436647	AdditiveExpression	SIZE_OPCODE + SIZE_BITSET		3436609	1		+			
ANR	3436648	Identifier	SIZE_OPCODE		3436609	0					
ANR	3436649	Identifier	SIZE_BITSET		3436609	1					
ANR	3436650	ElseStatement	else		3436609	0					
ANR	3436651	CompoundStatement		12:7:177:177	3436609	0					
ANR	3436652	IfStatement	if ( ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs ) )		3436609	0					
ANR	3436653	Condition	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )	590:8:12410:12468	3436609	0	True				
ANR	3436654	OrExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )		3436609	0		||			
ANR	3436655	RelationalExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1		3436609	0		>			
ANR	3436656	CallExpression	ONIGENC_MBC_MINLEN ( reg -> enc )		3436609	0					
ANR	3436657	Callee	ONIGENC_MBC_MINLEN		3436609	0					
ANR	3436658	Identifier	ONIGENC_MBC_MINLEN		3436609	0					
ANR	3436659	ArgumentList	reg -> enc		3436609	1					
ANR	3436660	Argument	reg -> enc		3436609	0					
ANR	3436661	PtrMemberAccess	reg -> enc		3436609	0					
ANR	3436662	Identifier	reg		3436609	0					
ANR	3436663	Identifier	enc		3436609	1					
ANR	3436664	PrimaryExpression	1		3436609	1					
ANR	3436665	CallExpression	bitset_is_empty ( cc -> bs )		3436609	1					
ANR	3436666	Callee	bitset_is_empty		3436609	0					
ANR	3436667	Identifier	bitset_is_empty		3436609	0					
ANR	3436668	ArgumentList	cc -> bs		3436609	1					
ANR	3436669	Argument	cc -> bs		3436609	0					
ANR	3436670	PtrMemberAccess	cc -> bs		3436609	0					
ANR	3436671	Identifier	cc		3436609	0					
ANR	3436672	Identifier	bs		3436609	1					
ANR	3436673	CompoundStatement		13:69:248:248	3436609	1					
ANR	3436674	ExpressionStatement	len = SIZE_OPCODE	591:6:12479:12496	3436609	0	True				
ANR	3436675	AssignmentExpression	len = SIZE_OPCODE		3436609	0		=			
ANR	3436676	Identifier	len		3436609	0					
ANR	3436677	Identifier	SIZE_OPCODE		3436609	1					
ANR	3436678	ElseStatement	else		3436609	0					
ANR	3436679	CompoundStatement		16:9:290:290	3436609	0					
ANR	3436680	ExpressionStatement	len = SIZE_OPCODE + SIZE_BITSET	594:6:12521:12552	3436609	0	True				
ANR	3436681	AssignmentExpression	len = SIZE_OPCODE + SIZE_BITSET		3436609	0		=			
ANR	3436682	Identifier	len		3436609	0					
ANR	3436683	AdditiveExpression	SIZE_OPCODE + SIZE_BITSET		3436609	1		+			
ANR	3436684	Identifier	SIZE_OPCODE		3436609	0					
ANR	3436685	Identifier	SIZE_BITSET		3436609	1					
ANR	3436686	ExpressionStatement	len += SIZE_LENGTH + cc -> mbuf -> used	597:4:12602:12637	3436609	1	True				
ANR	3436687	AssignmentExpression	len += SIZE_LENGTH + cc -> mbuf -> used		3436609	0		+=			
ANR	3436688	Identifier	len		3436609	0					
ANR	3436689	AdditiveExpression	SIZE_LENGTH + cc -> mbuf -> used		3436609	1		+			
ANR	3436690	Identifier	SIZE_LENGTH		3436609	0					
ANR	3436691	PtrMemberAccess	cc -> mbuf -> used		3436609	1					
ANR	3436692	PtrMemberAccess	cc -> mbuf		3436609	0					
ANR	3436693	Identifier	cc		3436609	0					
ANR	3436694	Identifier	mbuf		3436609	1					
ANR	3436695	Identifier	used		3436609	1					
ANR	3436696	ReturnStatement	return len ;	603:2:12728:12738	3436609	3	True				
ANR	3436697	Identifier	len		3436609	0					
ANR	3436698	ReturnType	static int		3436609	1					
ANR	3436699	Identifier	compile_length_cclass_node		3436609	2					
ANR	3436700	ParameterList	"CClassNode * cc , regex_t * reg"		3436609	3					
ANR	3436701	Parameter	CClassNode * cc	577:27:12192:12205	3436609	0	True				
ANR	3436702	ParameterType	CClassNode *		3436609	0					
ANR	3436703	Identifier	cc		3436609	1					
ANR	3436704	Parameter	regex_t * reg	577:43:12208:12219	3436609	1	True				
ANR	3436705	ParameterType	regex_t *		3436609	0					
ANR	3436706	Identifier	reg		3436609	1					
ANR	3436707	CFGEntryNode	ENTRY		3436609		True				
ANR	3436708	CFGExitNode	EXIT		3436609		True				
ANR	3436709	Symbol	cc		3436609						
ANR	3436710	Symbol	SIZE_BITSET		3436609						
ANR	3436711	Symbol	* cc		3436609						
ANR	3436712	Symbol	ONIGENC_MBC_MINLEN		3436609						
ANR	3436713	Symbol	cc -> mbuf -> used		3436609						
ANR	3436714	Symbol	cc -> mbuf		3436609						
ANR	3436715	Symbol	SIZE_LENGTH		3436609						
ANR	3436716	Symbol	* * cc		3436609						
ANR	3436717	Symbol	reg -> enc		3436609						
ANR	3436718	Symbol	cc -> bs		3436609						
ANR	3436719	Symbol	SIZE_OPCODE		3436609						
ANR	3436720	Symbol	SIZE_POINTER		3436609						
ANR	3436721	Symbol	bitset_is_empty		3436609						
ANR	3436722	Symbol	* cc -> mbuf		3436609						
ANR	3436723	Symbol	len		3436609						
ANR	3436724	Symbol	IS_NULL		3436609						
ANR	3436725	Symbol	reg		3436609						
ANR	3436726	Symbol	IS_NCCLASS_SHARE		3436609						
ANR	3436727	Symbol	* reg		3436609						
ANR	3436728	Function	compile_cclass_node	606:0:12743:13630							
ANR	3436729	FunctionDef	"compile_cclass_node (CClassNode * cc , regex_t * reg)"		3436728	0					
ANR	3436730	CompoundStatement		608:0:12804:13630	3436728	0					
ANR	3436731	IdentifierDeclStatement	int r ;	609:2:12808:12813	3436728	0	True				
ANR	3436732	IdentifierDecl	r		3436728	0					
ANR	3436733	IdentifierDeclType	int		3436728	0					
ANR	3436734	Identifier	r		3436728	1					
ANR	3436735	IfStatement	if ( IS_NCCLASS_SHARE ( cc ) )		3436728	1					
ANR	3436736	Condition	IS_NCCLASS_SHARE ( cc )	611:6:12822:12841	3436728	0	True				
ANR	3436737	CallExpression	IS_NCCLASS_SHARE ( cc )		3436728	0					
ANR	3436738	Callee	IS_NCCLASS_SHARE		3436728	0					
ANR	3436739	Identifier	IS_NCCLASS_SHARE		3436728	0					
ANR	3436740	ArgumentList	cc		3436728	1					
ANR	3436741	Argument	cc		3436728	0					
ANR	3436742	Identifier	cc		3436728	0					
ANR	3436743	CompoundStatement		4:28:39:39	3436728	1					
ANR	3436744	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_NODE )"	612:4:12850:12881	3436728	0	True				
ANR	3436745	CallExpression	"add_opcode ( reg , OP_CCLASS_NODE )"		3436728	0					
ANR	3436746	Callee	add_opcode		3436728	0					
ANR	3436747	Identifier	add_opcode		3436728	0					
ANR	3436748	ArgumentList	reg		3436728	1					
ANR	3436749	Argument	reg		3436728	0					
ANR	3436750	Identifier	reg		3436728	0					
ANR	3436751	Argument	OP_CCLASS_NODE		3436728	1					
ANR	3436752	Identifier	OP_CCLASS_NODE		3436728	0					
ANR	3436753	ExpressionStatement	"r = add_pointer ( reg , cc )"	613:4:12887:12911	3436728	1	True				
ANR	3436754	AssignmentExpression	"r = add_pointer ( reg , cc )"		3436728	0		=			
ANR	3436755	Identifier	r		3436728	0					
ANR	3436756	CallExpression	"add_pointer ( reg , cc )"		3436728	1					
ANR	3436757	Callee	add_pointer		3436728	0					
ANR	3436758	Identifier	add_pointer		3436728	0					
ANR	3436759	ArgumentList	reg		3436728	1					
ANR	3436760	Argument	reg		3436728	0					
ANR	3436761	Identifier	reg		3436728	0					
ANR	3436762	Argument	cc		3436728	1					
ANR	3436763	Identifier	cc		3436728	0					
ANR	3436764	ReturnStatement	return r ;	614:4:12917:12925	3436728	2	True				
ANR	3436765	Identifier	r		3436728	0					
ANR	3436766	IfStatement	if ( IS_NULL ( cc -> mbuf ) )		3436728	2					
ANR	3436767	Condition	IS_NULL ( cc -> mbuf )	617:6:12938:12954	3436728	0	True				
ANR	3436768	CallExpression	IS_NULL ( cc -> mbuf )		3436728	0					
ANR	3436769	Callee	IS_NULL		3436728	0					
ANR	3436770	Identifier	IS_NULL		3436728	0					
ANR	3436771	ArgumentList	cc -> mbuf		3436728	1					
ANR	3436772	Argument	cc -> mbuf		3436728	0					
ANR	3436773	PtrMemberAccess	cc -> mbuf		3436728	0					
ANR	3436774	Identifier	cc		3436728	0					
ANR	3436775	Identifier	mbuf		3436728	1					
ANR	3436776	CompoundStatement		10:25:152:152	3436728	1					
ANR	3436777	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		3436728	0					
ANR	3436778	Condition	IS_NCCLASS_NOT ( cc )	618:8:12967:12984	3436728	0	True				
ANR	3436779	CallExpression	IS_NCCLASS_NOT ( cc )		3436728	0					
ANR	3436780	Callee	IS_NCCLASS_NOT		3436728	0					
ANR	3436781	Identifier	IS_NCCLASS_NOT		3436728	0					
ANR	3436782	ArgumentList	cc		3436728	1					
ANR	3436783	Argument	cc		3436728	0					
ANR	3436784	Identifier	cc		3436728	0					
ANR	3436785	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_NOT )"	619:6:12993:13023	3436728	1	True				
ANR	3436786	CallExpression	"add_opcode ( reg , OP_CCLASS_NOT )"		3436728	0					
ANR	3436787	Callee	add_opcode		3436728	0					
ANR	3436788	Identifier	add_opcode		3436728	0					
ANR	3436789	ArgumentList	reg		3436728	1					
ANR	3436790	Argument	reg		3436728	0					
ANR	3436791	Identifier	reg		3436728	0					
ANR	3436792	Argument	OP_CCLASS_NOT		3436728	1					
ANR	3436793	Identifier	OP_CCLASS_NOT		3436728	0					
ANR	3436794	ElseStatement	else		3436728	0					
ANR	3436795	ExpressionStatement	"add_opcode ( reg , OP_CCLASS )"	621:6:13040:13066	3436728	0	True				
ANR	3436796	CallExpression	"add_opcode ( reg , OP_CCLASS )"		3436728	0					
ANR	3436797	Callee	add_opcode		3436728	0					
ANR	3436798	Identifier	add_opcode		3436728	0					
ANR	3436799	ArgumentList	reg		3436728	1					
ANR	3436800	Argument	reg		3436728	0					
ANR	3436801	Identifier	reg		3436728	0					
ANR	3436802	Argument	OP_CCLASS		3436728	1					
ANR	3436803	Identifier	OP_CCLASS		3436728	0					
ANR	3436804	ExpressionStatement	"r = add_bitset ( reg , cc -> bs )"	623:4:13073:13100	3436728	1	True				
ANR	3436805	AssignmentExpression	"r = add_bitset ( reg , cc -> bs )"		3436728	0		=			
ANR	3436806	Identifier	r		3436728	0					
ANR	3436807	CallExpression	"add_bitset ( reg , cc -> bs )"		3436728	1					
ANR	3436808	Callee	add_bitset		3436728	0					
ANR	3436809	Identifier	add_bitset		3436728	0					
ANR	3436810	ArgumentList	reg		3436728	1					
ANR	3436811	Argument	reg		3436728	0					
ANR	3436812	Identifier	reg		3436728	0					
ANR	3436813	Argument	cc -> bs		3436728	1					
ANR	3436814	PtrMemberAccess	cc -> bs		3436728	0					
ANR	3436815	Identifier	cc		3436728	0					
ANR	3436816	Identifier	bs		3436728	1					
ANR	3436817	ElseStatement	else		3436728	0					
ANR	3436818	CompoundStatement		18:7:308:308	3436728	0					
ANR	3436819	IfStatement	if ( ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs ) )		3436728	0					
ANR	3436820	Condition	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )	626:8:13123:13181	3436728	0	True				
ANR	3436821	OrExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )		3436728	0		||			
ANR	3436822	RelationalExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1		3436728	0		>			
ANR	3436823	CallExpression	ONIGENC_MBC_MINLEN ( reg -> enc )		3436728	0					
ANR	3436824	Callee	ONIGENC_MBC_MINLEN		3436728	0					
ANR	3436825	Identifier	ONIGENC_MBC_MINLEN		3436728	0					
ANR	3436826	ArgumentList	reg -> enc		3436728	1					
ANR	3436827	Argument	reg -> enc		3436728	0					
ANR	3436828	PtrMemberAccess	reg -> enc		3436728	0					
ANR	3436829	Identifier	reg		3436728	0					
ANR	3436830	Identifier	enc		3436728	1					
ANR	3436831	PrimaryExpression	1		3436728	1					
ANR	3436832	CallExpression	bitset_is_empty ( cc -> bs )		3436728	1					
ANR	3436833	Callee	bitset_is_empty		3436728	0					
ANR	3436834	Identifier	bitset_is_empty		3436728	0					
ANR	3436835	ArgumentList	cc -> bs		3436728	1					
ANR	3436836	Argument	cc -> bs		3436728	0					
ANR	3436837	PtrMemberAccess	cc -> bs		3436728	0					
ANR	3436838	Identifier	cc		3436728	0					
ANR	3436839	Identifier	bs		3436728	1					
ANR	3436840	CompoundStatement		19:69:379:379	3436728	1					
ANR	3436841	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		3436728	0					
ANR	3436842	Condition	IS_NCCLASS_NOT ( cc )	627:10:13196:13213	3436728	0	True				
ANR	3436843	CallExpression	IS_NCCLASS_NOT ( cc )		3436728	0					
ANR	3436844	Callee	IS_NCCLASS_NOT		3436728	0					
ANR	3436845	Identifier	IS_NCCLASS_NOT		3436728	0					
ANR	3436846	ArgumentList	cc		3436728	1					
ANR	3436847	Argument	cc		3436728	0					
ANR	3436848	Identifier	cc		3436728	0					
ANR	3436849	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MB_NOT )"	628:8:13224:13257	3436728	1	True				
ANR	3436850	CallExpression	"add_opcode ( reg , OP_CCLASS_MB_NOT )"		3436728	0					
ANR	3436851	Callee	add_opcode		3436728	0					
ANR	3436852	Identifier	add_opcode		3436728	0					
ANR	3436853	ArgumentList	reg		3436728	1					
ANR	3436854	Argument	reg		3436728	0					
ANR	3436855	Identifier	reg		3436728	0					
ANR	3436856	Argument	OP_CCLASS_MB_NOT		3436728	1					
ANR	3436857	Identifier	OP_CCLASS_MB_NOT		3436728	0					
ANR	3436858	ElseStatement	else		3436728	0					
ANR	3436859	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MB )"	630:8:13278:13307	3436728	0	True				
ANR	3436860	CallExpression	"add_opcode ( reg , OP_CCLASS_MB )"		3436728	0					
ANR	3436861	Callee	add_opcode		3436728	0					
ANR	3436862	Identifier	add_opcode		3436728	0					
ANR	3436863	ArgumentList	reg		3436728	1					
ANR	3436864	Argument	reg		3436728	0					
ANR	3436865	Identifier	reg		3436728	0					
ANR	3436866	Argument	OP_CCLASS_MB		3436728	1					
ANR	3436867	Identifier	OP_CCLASS_MB		3436728	0					
ANR	3436868	ExpressionStatement	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"	632:6:13316:13356	3436728	1	True				
ANR	3436869	AssignmentExpression	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"		3436728	0		=			
ANR	3436870	Identifier	r		3436728	0					
ANR	3436871	CallExpression	"add_multi_byte_cclass ( cc -> mbuf , reg )"		3436728	1					
ANR	3436872	Callee	add_multi_byte_cclass		3436728	0					
ANR	3436873	Identifier	add_multi_byte_cclass		3436728	0					
ANR	3436874	ArgumentList	cc -> mbuf		3436728	1					
ANR	3436875	Argument	cc -> mbuf		3436728	0					
ANR	3436876	PtrMemberAccess	cc -> mbuf		3436728	0					
ANR	3436877	Identifier	cc		3436728	0					
ANR	3436878	Identifier	mbuf		3436728	1					
ANR	3436879	Argument	reg		3436728	1					
ANR	3436880	Identifier	reg		3436728	0					
ANR	3436881	ElseStatement	else		3436728	0					
ANR	3436882	CompoundStatement		27:9:568:568	3436728	0					
ANR	3436883	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		3436728	0					
ANR	3436884	Condition	IS_NCCLASS_NOT ( cc )	635:10:13385:13402	3436728	0	True				
ANR	3436885	CallExpression	IS_NCCLASS_NOT ( cc )		3436728	0					
ANR	3436886	Callee	IS_NCCLASS_NOT		3436728	0					
ANR	3436887	Identifier	IS_NCCLASS_NOT		3436728	0					
ANR	3436888	ArgumentList	cc		3436728	1					
ANR	3436889	Argument	cc		3436728	0					
ANR	3436890	Identifier	cc		3436728	0					
ANR	3436891	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MIX_NOT )"	636:8:13413:13447	3436728	1	True				
ANR	3436892	CallExpression	"add_opcode ( reg , OP_CCLASS_MIX_NOT )"		3436728	0					
ANR	3436893	Callee	add_opcode		3436728	0					
ANR	3436894	Identifier	add_opcode		3436728	0					
ANR	3436895	ArgumentList	reg		3436728	1					
ANR	3436896	Argument	reg		3436728	0					
ANR	3436897	Identifier	reg		3436728	0					
ANR	3436898	Argument	OP_CCLASS_MIX_NOT		3436728	1					
ANR	3436899	Identifier	OP_CCLASS_MIX_NOT		3436728	0					
ANR	3436900	ElseStatement	else		3436728	0					
ANR	3436901	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MIX )"	638:8:13468:13498	3436728	0	True				
ANR	3436902	CallExpression	"add_opcode ( reg , OP_CCLASS_MIX )"		3436728	0					
ANR	3436903	Callee	add_opcode		3436728	0					
ANR	3436904	Identifier	add_opcode		3436728	0					
ANR	3436905	ArgumentList	reg		3436728	1					
ANR	3436906	Argument	reg		3436728	0					
ANR	3436907	Identifier	reg		3436728	0					
ANR	3436908	Argument	OP_CCLASS_MIX		3436728	1					
ANR	3436909	Identifier	OP_CCLASS_MIX		3436728	0					
ANR	3436910	ExpressionStatement	"r = add_bitset ( reg , cc -> bs )"	640:6:13507:13534	3436728	1	True				
ANR	3436911	AssignmentExpression	"r = add_bitset ( reg , cc -> bs )"		3436728	0		=			
ANR	3436912	Identifier	r		3436728	0					
ANR	3436913	CallExpression	"add_bitset ( reg , cc -> bs )"		3436728	1					
ANR	3436914	Callee	add_bitset		3436728	0					
ANR	3436915	Identifier	add_bitset		3436728	0					
ANR	3436916	ArgumentList	reg		3436728	1					
ANR	3436917	Argument	reg		3436728	0					
ANR	3436918	Identifier	reg		3436728	0					
ANR	3436919	Argument	cc -> bs		3436728	1					
ANR	3436920	PtrMemberAccess	cc -> bs		3436728	0					
ANR	3436921	Identifier	cc		3436728	0					
ANR	3436922	Identifier	bs		3436728	1					
ANR	3436923	IfStatement	if ( r )		3436728	2					
ANR	3436924	Condition	r	641:10:13546:13546	3436728	0	True				
ANR	3436925	Identifier	r		3436728	0					
ANR	3436926	ReturnStatement	return r ;	641:13:13549:13557	3436728	1	True				
ANR	3436927	Identifier	r		3436728	0					
ANR	3436928	ExpressionStatement	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"	642:6:13565:13605	3436728	3	True				
ANR	3436929	AssignmentExpression	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"		3436728	0		=			
ANR	3436930	Identifier	r		3436728	0					
ANR	3436931	CallExpression	"add_multi_byte_cclass ( cc -> mbuf , reg )"		3436728	1					
ANR	3436932	Callee	add_multi_byte_cclass		3436728	0					
ANR	3436933	Identifier	add_multi_byte_cclass		3436728	0					
ANR	3436934	ArgumentList	cc -> mbuf		3436728	1					
ANR	3436935	Argument	cc -> mbuf		3436728	0					
ANR	3436936	PtrMemberAccess	cc -> mbuf		3436728	0					
ANR	3436937	Identifier	cc		3436728	0					
ANR	3436938	Identifier	mbuf		3436728	1					
ANR	3436939	Argument	reg		3436728	1					
ANR	3436940	Identifier	reg		3436728	0					
ANR	3436941	ReturnStatement	return r ;	646:2:13620:13628	3436728	3	True				
ANR	3436942	Identifier	r		3436728	0					
ANR	3436943	ReturnType	static int		3436728	1					
ANR	3436944	Identifier	compile_cclass_node		3436728	2					
ANR	3436945	ParameterList	"CClassNode * cc , regex_t * reg"		3436728	3					
ANR	3436946	Parameter	CClassNode * cc	607:20:12774:12787	3436728	0	True				
ANR	3436947	ParameterType	CClassNode *		3436728	0					
ANR	3436948	Identifier	cc		3436728	1					
ANR	3436949	Parameter	regex_t * reg	607:36:12790:12801	3436728	1	True				
ANR	3436950	ParameterType	regex_t *		3436728	0					
ANR	3436951	Identifier	reg		3436728	1					
ANR	3436952	CFGEntryNode	ENTRY		3436728		True				
ANR	3436953	CFGExitNode	EXIT		3436728		True				
ANR	3436954	Symbol	cc		3436728						
ANR	3436955	Symbol	OP_CCLASS_MB		3436728						
ANR	3436956	Symbol	* cc		3436728						
ANR	3436957	Symbol	IS_NCCLASS_NOT		3436728						
ANR	3436958	Symbol	OP_CCLASS_NOT		3436728						
ANR	3436959	Symbol	OP_CCLASS		3436728						
ANR	3436960	Symbol	ONIGENC_MBC_MINLEN		3436728						
ANR	3436961	Symbol	OP_CCLASS_NODE		3436728						
ANR	3436962	Symbol	cc -> mbuf		3436728						
ANR	3436963	Symbol	cc -> bs		3436728						
ANR	3436964	Symbol	reg -> enc		3436728						
ANR	3436965	Symbol	OP_CCLASS_MIX		3436728						
ANR	3436966	Symbol	r		3436728						
ANR	3436967	Symbol	bitset_is_empty		3436728						
ANR	3436968	Symbol	OP_CCLASS_MIX_NOT		3436728						
ANR	3436969	Symbol	IS_NULL		3436728						
ANR	3436970	Symbol	reg		3436728						
ANR	3436971	Symbol	IS_NCCLASS_SHARE		3436728						
ANR	3436972	Symbol	add_pointer		3436728						
ANR	3436973	Symbol	add_bitset		3436728						
ANR	3436974	Symbol	* reg		3436728						
ANR	3436975	Symbol	OP_CCLASS_MB_NOT		3436728						
ANR	3436976	Symbol	add_multi_byte_cclass		3436728						
ANR	3436977	Function	entry_repeat_range	649:0:13633:14466							
ANR	3436978	FunctionDef	"entry_repeat_range (regex_t * reg , int id , int lower , int upper)"		3436977	0					
ANR	3436979	CompoundStatement		651:0:13707:14466	3436977	0					
ANR	3436980	Statement	define	652:1:13710:13715	3436977	0	True				
ANR	3436981	Statement	REPEAT_RANGE_ALLOC	652:8:13717:13734	3436977	1	True				
ANR	3436982	Statement	4	652:28:13737:13737	3436977	2	True				
ANR	3436983	IdentifierDeclStatement	OnigRepeatRange * p ;	654:2:13742:13760	3436977	3	True				
ANR	3436984	IdentifierDecl	* p		3436977	0					
ANR	3436985	IdentifierDeclType	OnigRepeatRange *		3436977	0					
ANR	3436986	Identifier	p		3436977	1					
ANR	3436987	IfStatement	if ( reg -> repeat_range_alloc == 0 )		3436977	4					
ANR	3436988	Condition	reg -> repeat_range_alloc == 0	656:6:13769:13796	3436977	0	True				
ANR	3436989	EqualityExpression	reg -> repeat_range_alloc == 0		3436977	0		==			
ANR	3436990	PtrMemberAccess	reg -> repeat_range_alloc		3436977	0					
ANR	3436991	Identifier	reg		3436977	0					
ANR	3436992	Identifier	repeat_range_alloc		3436977	1					
ANR	3436993	PrimaryExpression	0		3436977	1					
ANR	3436994	CompoundStatement		6:36:91:91	3436977	1					
ANR	3436995	ExpressionStatement	p = ( OnigRepeatRange * ) xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )	657:4:13805:13881	3436977	0	True				
ANR	3436996	AssignmentExpression	p = ( OnigRepeatRange * ) xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )		3436977	0		=			
ANR	3436997	Identifier	p		3436977	0					
ANR	3436998	CastExpression	( OnigRepeatRange * ) xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )		3436977	1					
ANR	3436999	CastTarget	OnigRepeatRange *		3436977	0					
ANR	3437000	CallExpression	xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )		3436977	1					
ANR	3437001	Callee	xmalloc		3436977	0					
ANR	3437002	Identifier	xmalloc		3436977	0					
ANR	3437003	ArgumentList	sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC		3436977	1					
ANR	3437004	Argument	sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC		3436977	0					
ANR	3437005	MultiplicativeExpression	sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC		3436977	0		*			
ANR	3437006	SizeofExpression	sizeof ( OnigRepeatRange )		3436977	0					
ANR	3437007	Sizeof	sizeof		3436977	0					
ANR	3437008	SizeofOperand	OnigRepeatRange		3436977	1					
ANR	3437009	Identifier	REPEAT_RANGE_ALLOC		3436977	1					
ANR	3437010	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	658:4:13887:13914	3436977	1	True				
ANR	3437011	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		3436977	0					
ANR	3437012	Callee	CHECK_NULL_RETURN_MEMERR		3436977	0					
ANR	3437013	Identifier	CHECK_NULL_RETURN_MEMERR		3436977	0					
ANR	3437014	ArgumentList	p		3436977	1					
ANR	3437015	Argument	p		3436977	0					
ANR	3437016	Identifier	p		3436977	0					
ANR	3437017	ExpressionStatement	reg -> repeat_range = p	659:4:13920:13941	3436977	2	True				
ANR	3437018	AssignmentExpression	reg -> repeat_range = p		3436977	0		=			
ANR	3437019	PtrMemberAccess	reg -> repeat_range		3436977	0					
ANR	3437020	Identifier	reg		3436977	0					
ANR	3437021	Identifier	repeat_range		3436977	1					
ANR	3437022	Identifier	p		3436977	1					
ANR	3437023	ExpressionStatement	reg -> repeat_range_alloc = REPEAT_RANGE_ALLOC	660:4:13947:13991	3436977	3	True				
ANR	3437024	AssignmentExpression	reg -> repeat_range_alloc = REPEAT_RANGE_ALLOC		3436977	0		=			
ANR	3437025	PtrMemberAccess	reg -> repeat_range_alloc		3436977	0					
ANR	3437026	Identifier	reg		3436977	0					
ANR	3437027	Identifier	repeat_range_alloc		3436977	1					
ANR	3437028	Identifier	REPEAT_RANGE_ALLOC		3436977	1					
ANR	3437029	ElseStatement	else		3436977	0					
ANR	3437030	IfStatement	if ( reg -> repeat_range_alloc <= id )		3436977	0					
ANR	3437031	Condition	reg -> repeat_range_alloc <= id	662:11:14008:14036	3436977	0	True				
ANR	3437032	RelationalExpression	reg -> repeat_range_alloc <= id		3436977	0		<=			
ANR	3437033	PtrMemberAccess	reg -> repeat_range_alloc		3436977	0					
ANR	3437034	Identifier	reg		3436977	0					
ANR	3437035	Identifier	repeat_range_alloc		3436977	1					
ANR	3437036	Identifier	id		3436977	1					
ANR	3437037	CompoundStatement		13:4:337:342	3436977	1					
ANR	3437038	IdentifierDeclStatement	int n ;	663:4:14045:14050	3436977	0	True				
ANR	3437039	IdentifierDecl	n		3436977	0					
ANR	3437040	IdentifierDeclType	int		3436977	0					
ANR	3437041	Identifier	n		3436977	1					
ANR	3437042	ExpressionStatement	n = reg -> repeat_range_alloc + REPEAT_RANGE_ALLOC	664:4:14056:14104	3436977	1	True				
ANR	3437043	AssignmentExpression	n = reg -> repeat_range_alloc + REPEAT_RANGE_ALLOC		3436977	0		=			
ANR	3437044	Identifier	n		3436977	0					
ANR	3437045	AdditiveExpression	reg -> repeat_range_alloc + REPEAT_RANGE_ALLOC		3436977	1		+			
ANR	3437046	PtrMemberAccess	reg -> repeat_range_alloc		3436977	0					
ANR	3437047	Identifier	reg		3436977	0					
ANR	3437048	Identifier	repeat_range_alloc		3436977	1					
ANR	3437049	Identifier	REPEAT_RANGE_ALLOC		3436977	1					
ANR	3437050	ExpressionStatement	"p = ( OnigRepeatRange * ) xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"	665:4:14110:14225	3436977	2	True				
ANR	3437051	AssignmentExpression	"p = ( OnigRepeatRange * ) xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"		3436977	0		=			
ANR	3437052	Identifier	p		3436977	0					
ANR	3437053	CastExpression	"( OnigRepeatRange * ) xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"		3436977	1					
ANR	3437054	CastTarget	OnigRepeatRange *		3436977	0					
ANR	3437055	CallExpression	"xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"		3436977	1					
ANR	3437056	Callee	xrealloc		3436977	0					
ANR	3437057	Identifier	xrealloc		3436977	0					
ANR	3437058	ArgumentList	reg -> repeat_range		3436977	1					
ANR	3437059	Argument	reg -> repeat_range		3436977	0					
ANR	3437060	PtrMemberAccess	reg -> repeat_range		3436977	0					
ANR	3437061	Identifier	reg		3436977	0					
ANR	3437062	Identifier	repeat_range		3436977	1					
ANR	3437063	Argument	sizeof ( OnigRepeatRange ) * n		3436977	1					
ANR	3437064	MultiplicativeExpression	sizeof ( OnigRepeatRange ) * n		3436977	0		*			
ANR	3437065	SizeofExpression	sizeof ( OnigRepeatRange )		3436977	0					
ANR	3437066	Sizeof	sizeof		3436977	0					
ANR	3437067	SizeofOperand	OnigRepeatRange		3436977	1					
ANR	3437068	Identifier	n		3436977	1					
ANR	3437069	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	667:4:14231:14258	3436977	3	True				
ANR	3437070	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		3436977	0					
ANR	3437071	Callee	CHECK_NULL_RETURN_MEMERR		3436977	0					
ANR	3437072	Identifier	CHECK_NULL_RETURN_MEMERR		3436977	0					
ANR	3437073	ArgumentList	p		3436977	1					
ANR	3437074	Argument	p		3436977	0					
ANR	3437075	Identifier	p		3436977	0					
ANR	3437076	ExpressionStatement	reg -> repeat_range = p	668:4:14264:14285	3436977	4	True				
ANR	3437077	AssignmentExpression	reg -> repeat_range = p		3436977	0		=			
ANR	3437078	PtrMemberAccess	reg -> repeat_range		3436977	0					
ANR	3437079	Identifier	reg		3436977	0					
ANR	3437080	Identifier	repeat_range		3436977	1					
ANR	3437081	Identifier	p		3436977	1					
ANR	3437082	ExpressionStatement	reg -> repeat_range_alloc = n	669:4:14291:14318	3436977	5	True				
ANR	3437083	AssignmentExpression	reg -> repeat_range_alloc = n		3436977	0		=			
ANR	3437084	PtrMemberAccess	reg -> repeat_range_alloc		3436977	0					
ANR	3437085	Identifier	reg		3436977	0					
ANR	3437086	Identifier	repeat_range_alloc		3436977	1					
ANR	3437087	Identifier	n		3436977	1					
ANR	3437088	ElseStatement	else		3436977	0					
ANR	3437089	CompoundStatement		21:7:623:623	3436977	0					
ANR	3437090	ExpressionStatement	p = reg -> repeat_range	672:4:14337:14358	3436977	0	True				
ANR	3437091	AssignmentExpression	p = reg -> repeat_range		3436977	0		=			
ANR	3437092	Identifier	p		3436977	0					
ANR	3437093	PtrMemberAccess	reg -> repeat_range		3436977	1					
ANR	3437094	Identifier	reg		3436977	0					
ANR	3437095	Identifier	repeat_range		3436977	1					
ANR	3437096	ExpressionStatement	p [ id ] . lower = lower	675:2:14367:14386	3436977	5	True				
ANR	3437097	AssignmentExpression	p [ id ] . lower = lower		3436977	0		=			
ANR	3437098	MemberAccess	p [ id ] . lower		3436977	0					
ANR	3437099	ArrayIndexing	p [ id ]		3436977	0					
ANR	3437100	Identifier	p		3436977	0					
ANR	3437101	Identifier	id		3436977	1					
ANR	3437102	Identifier	lower		3436977	1					
ANR	3437103	Identifier	lower		3436977	1					
ANR	3437104	ExpressionStatement	p [ id ] . upper = ( IS_REPEAT_INFINITE ( upper ) ? 0x7fffffff : upper )	676:2:14390:14452	3436977	6	True				
ANR	3437105	AssignmentExpression	p [ id ] . upper = ( IS_REPEAT_INFINITE ( upper ) ? 0x7fffffff : upper )		3436977	0		=			
ANR	3437106	MemberAccess	p [ id ] . upper		3436977	0					
ANR	3437107	ArrayIndexing	p [ id ]		3436977	0					
ANR	3437108	Identifier	p		3436977	0					
ANR	3437109	Identifier	id		3436977	1					
ANR	3437110	Identifier	upper		3436977	1					
ANR	3437111	ConditionalExpression	IS_REPEAT_INFINITE ( upper ) ? 0x7fffffff : upper		3436977	1					
ANR	3437112	Condition	IS_REPEAT_INFINITE ( upper )		3436977	0					
ANR	3437113	CallExpression	IS_REPEAT_INFINITE ( upper )		3436977	0					
ANR	3437114	Callee	IS_REPEAT_INFINITE		3436977	0					
ANR	3437115	Identifier	IS_REPEAT_INFINITE		3436977	0					
ANR	3437116	ArgumentList	upper		3436977	1					
ANR	3437117	Argument	upper		3436977	0					
ANR	3437118	Identifier	upper		3436977	0					
ANR	3437119	PrimaryExpression	0x7fffffff		3436977	1					
ANR	3437120	Identifier	upper		3436977	2					
ANR	3437121	ReturnStatement	return 0 ;	677:2:14456:14464	3436977	7	True				
ANR	3437122	PrimaryExpression	0		3436977	0					
ANR	3437123	ReturnType	static int		3436977	1					
ANR	3437124	Identifier	entry_repeat_range		3436977	2					
ANR	3437125	ParameterList	"regex_t * reg , int id , int lower , int upper"		3436977	3					
ANR	3437126	Parameter	regex_t * reg	650:19:13663:13674	3436977	0	True				
ANR	3437127	ParameterType	regex_t *		3436977	0					
ANR	3437128	Identifier	reg		3436977	1					
ANR	3437129	Parameter	int id	650:33:13677:13682	3436977	1	True				
ANR	3437130	ParameterType	int		3436977	0					
ANR	3437131	Identifier	id		3436977	1					
ANR	3437132	Parameter	int lower	650:41:13685:13693	3436977	2	True				
ANR	3437133	ParameterType	int		3436977	0					
ANR	3437134	Identifier	lower		3436977	1					
ANR	3437135	Parameter	int upper	650:52:13696:13704	3436977	3	True				
ANR	3437136	ParameterType	int		3436977	0					
ANR	3437137	Identifier	upper		3436977	1					
ANR	3437138	CFGEntryNode	ENTRY		3436977		True				
ANR	3437139	CFGExitNode	EXIT		3436977		True				
ANR	3437140	Symbol	REPEAT_RANGE_ALLOC		3436977						
ANR	3437141	Symbol	* id		3436977						
ANR	3437142	Symbol	reg -> repeat_range		3436977						
ANR	3437143	Symbol	p [ id ] . lower		3436977						
ANR	3437144	Symbol	lower		3436977						
ANR	3437145	Symbol	upper		3436977						
ANR	3437146	Symbol	p [ id ] . upper		3436977						
ANR	3437147	Symbol	n		3436977						
ANR	3437148	Symbol	p		3436977						
ANR	3437149	Symbol	reg -> repeat_range_alloc		3436977						
ANR	3437150	Symbol	reg		3436977						
ANR	3437151	Symbol	xmalloc		3436977						
ANR	3437152	Symbol	* p		3436977						
ANR	3437153	Symbol	id		3436977						
ANR	3437154	Symbol	IS_REPEAT_INFINITE		3436977						
ANR	3437155	Symbol	xrealloc		3436977						
ANR	3437156	Symbol	* reg		3436977						
ANR	3437157	Function	compile_range_repeat_node	680:0:14469:15414							
ANR	3437158	FunctionDef	"compile_range_repeat_node (QtfrNode * qn , int target_len , int empty_info , regex_t * reg)"		3437157	0					
ANR	3437159	CompoundStatement		683:0:14592:15414	3437157	0					
ANR	3437160	IdentifierDeclStatement	int r ;	684:2:14596:14601	3437157	0	True				
ANR	3437161	IdentifierDecl	r		3437157	0					
ANR	3437162	IdentifierDeclType	int		3437157	0					
ANR	3437163	Identifier	r		3437157	1					
ANR	3437164	IdentifierDeclStatement	int num_repeat = reg -> num_repeat ;	685:2:14605:14637	3437157	1	True				
ANR	3437165	IdentifierDecl	num_repeat = reg -> num_repeat		3437157	0					
ANR	3437166	IdentifierDeclType	int		3437157	0					
ANR	3437167	Identifier	num_repeat		3437157	1					
ANR	3437168	AssignmentExpression	num_repeat = reg -> num_repeat		3437157	2		=			
ANR	3437169	Identifier	num_repeat		3437157	0					
ANR	3437170	PtrMemberAccess	reg -> num_repeat		3437157	1					
ANR	3437171	Identifier	reg		3437157	0					
ANR	3437172	Identifier	num_repeat		3437157	1					
ANR	3437173	ExpressionStatement	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT : OP_REPEAT_NG )"	687:2:14642:14700	3437157	2	True				
ANR	3437174	AssignmentExpression	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT : OP_REPEAT_NG )"		3437157	0		=			
ANR	3437175	Identifier	r		3437157	0					
ANR	3437176	CallExpression	"add_opcode ( reg , qn -> greedy ? OP_REPEAT : OP_REPEAT_NG )"		3437157	1					
ANR	3437177	Callee	add_opcode		3437157	0					
ANR	3437178	Identifier	add_opcode		3437157	0					
ANR	3437179	ArgumentList	reg		3437157	1					
ANR	3437180	Argument	reg		3437157	0					
ANR	3437181	Identifier	reg		3437157	0					
ANR	3437182	Argument	qn -> greedy ? OP_REPEAT : OP_REPEAT_NG		3437157	1					
ANR	3437183	ConditionalExpression	qn -> greedy ? OP_REPEAT : OP_REPEAT_NG		3437157	0					
ANR	3437184	Condition	qn -> greedy		3437157	0					
ANR	3437185	PtrMemberAccess	qn -> greedy		3437157	0					
ANR	3437186	Identifier	qn		3437157	0					
ANR	3437187	Identifier	greedy		3437157	1					
ANR	3437188	Identifier	OP_REPEAT		3437157	1					
ANR	3437189	Identifier	OP_REPEAT_NG		3437157	2					
ANR	3437190	IfStatement	if ( r )		3437157	3					
ANR	3437191	Condition	r	688:6:14708:14708	3437157	0	True				
ANR	3437192	Identifier	r		3437157	0					
ANR	3437193	ReturnStatement	return r ;	688:9:14711:14719	3437157	1	True				
ANR	3437194	Identifier	r		3437157	0					
ANR	3437195	ExpressionStatement	"r = add_mem_num ( reg , num_repeat )"	689:2:14723:14755	3437157	4	True				
ANR	3437196	AssignmentExpression	"r = add_mem_num ( reg , num_repeat )"		3437157	0		=			
ANR	3437197	Identifier	r		3437157	0					
ANR	3437198	CallExpression	"add_mem_num ( reg , num_repeat )"		3437157	1					
ANR	3437199	Callee	add_mem_num		3437157	0					
ANR	3437200	Identifier	add_mem_num		3437157	0					
ANR	3437201	ArgumentList	reg		3437157	1					
ANR	3437202	Argument	reg		3437157	0					
ANR	3437203	Identifier	reg		3437157	0					
ANR	3437204	Argument	num_repeat		3437157	1					
ANR	3437205	Identifier	num_repeat		3437157	0					
ANR	3437206	ExpressionStatement	reg -> num_repeat ++	690:2:14778:14795	3437157	5	True				
ANR	3437207	PostIncDecOperationExpression	reg -> num_repeat ++		3437157	0					
ANR	3437208	PtrMemberAccess	reg -> num_repeat		3437157	0					
ANR	3437209	Identifier	reg		3437157	0					
ANR	3437210	Identifier	num_repeat		3437157	1					
ANR	3437211	IncDec	++		3437157	1					
ANR	3437212	IfStatement	if ( r )		3437157	6					
ANR	3437213	Condition	r	691:6:14803:14803	3437157	0	True				
ANR	3437214	Identifier	r		3437157	0					
ANR	3437215	ReturnStatement	return r ;	691:9:14806:14814	3437157	1	True				
ANR	3437216	Identifier	r		3437157	0					
ANR	3437217	ExpressionStatement	"r = add_rel_addr ( reg , target_len + SIZE_OP_REPEAT_INC )"	692:2:14818:14872	3437157	7	True				
ANR	3437218	AssignmentExpression	"r = add_rel_addr ( reg , target_len + SIZE_OP_REPEAT_INC )"		3437157	0		=			
ANR	3437219	Identifier	r		3437157	0					
ANR	3437220	CallExpression	"add_rel_addr ( reg , target_len + SIZE_OP_REPEAT_INC )"		3437157	1					
ANR	3437221	Callee	add_rel_addr		3437157	0					
ANR	3437222	Identifier	add_rel_addr		3437157	0					
ANR	3437223	ArgumentList	reg		3437157	1					
ANR	3437224	Argument	reg		3437157	0					
ANR	3437225	Identifier	reg		3437157	0					
ANR	3437226	Argument	target_len + SIZE_OP_REPEAT_INC		3437157	1					
ANR	3437227	AdditiveExpression	target_len + SIZE_OP_REPEAT_INC		3437157	0		+			
ANR	3437228	Identifier	target_len		3437157	0					
ANR	3437229	Identifier	SIZE_OP_REPEAT_INC		3437157	1					
ANR	3437230	IfStatement	if ( r )		3437157	8					
ANR	3437231	Condition	r	693:6:14880:14880	3437157	0	True				
ANR	3437232	Identifier	r		3437157	0					
ANR	3437233	ReturnStatement	return r ;	693:9:14883:14891	3437157	1	True				
ANR	3437234	Identifier	r		3437157	0					
ANR	3437235	ExpressionStatement	"r = entry_repeat_range ( reg , num_repeat , qn -> lower , qn -> upper )"	695:2:14896:14957	3437157	9	True				
ANR	3437236	AssignmentExpression	"r = entry_repeat_range ( reg , num_repeat , qn -> lower , qn -> upper )"		3437157	0		=			
ANR	3437237	Identifier	r		3437157	0					
ANR	3437238	CallExpression	"entry_repeat_range ( reg , num_repeat , qn -> lower , qn -> upper )"		3437157	1					
ANR	3437239	Callee	entry_repeat_range		3437157	0					
ANR	3437240	Identifier	entry_repeat_range		3437157	0					
ANR	3437241	ArgumentList	reg		3437157	1					
ANR	3437242	Argument	reg		3437157	0					
ANR	3437243	Identifier	reg		3437157	0					
ANR	3437244	Argument	num_repeat		3437157	1					
ANR	3437245	Identifier	num_repeat		3437157	0					
ANR	3437246	Argument	qn -> lower		3437157	2					
ANR	3437247	PtrMemberAccess	qn -> lower		3437157	0					
ANR	3437248	Identifier	qn		3437157	0					
ANR	3437249	Identifier	lower		3437157	1					
ANR	3437250	Argument	qn -> upper		3437157	3					
ANR	3437251	PtrMemberAccess	qn -> upper		3437157	0					
ANR	3437252	Identifier	qn		3437157	0					
ANR	3437253	Identifier	upper		3437157	1					
ANR	3437254	IfStatement	if ( r )		3437157	10					
ANR	3437255	Condition	r	696:6:14965:14965	3437157	0	True				
ANR	3437256	Identifier	r		3437157	0					
ANR	3437257	ReturnStatement	return r ;	696:9:14968:14976	3437157	1	True				
ANR	3437258	Identifier	r		3437157	0					
ANR	3437259	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	698:2:14981:15038	3437157	11	True				
ANR	3437260	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		3437157	0		=			
ANR	3437261	Identifier	r		3437157	0					
ANR	3437262	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		3437157	1					
ANR	3437263	Callee	compile_tree_empty_check		3437157	0					
ANR	3437264	Identifier	compile_tree_empty_check		3437157	0					
ANR	3437265	ArgumentList	qn -> target		3437157	1					
ANR	3437266	Argument	qn -> target		3437157	0					
ANR	3437267	PtrMemberAccess	qn -> target		3437157	0					
ANR	3437268	Identifier	qn		3437157	0					
ANR	3437269	Identifier	target		3437157	1					
ANR	3437270	Argument	reg		3437157	1					
ANR	3437271	Identifier	reg		3437157	0					
ANR	3437272	Argument	empty_info		3437157	2					
ANR	3437273	Identifier	empty_info		3437157	0					
ANR	3437274	IfStatement	if ( r )		3437157	12					
ANR	3437275	Condition	r	699:6:15046:15046	3437157	0	True				
ANR	3437276	Identifier	r		3437157	0					
ANR	3437277	ReturnStatement	return r ;	699:9:15049:15057	3437157	1	True				
ANR	3437278	Identifier	r		3437157	0					
ANR	3437279	ElseStatement	else		3437157	0					
ANR	3437280	CompoundStatement		26:7:657:657	3437157	0					
ANR	3437281	ExpressionStatement	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG )"	709:4:15256:15322	3437157	0	True				
ANR	3437282	AssignmentExpression	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG )"		3437157	0		=			
ANR	3437283	Identifier	r		3437157	0					
ANR	3437284	CallExpression	"add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG )"		3437157	1					
ANR	3437285	Callee	add_opcode		3437157	0					
ANR	3437286	Identifier	add_opcode		3437157	0					
ANR	3437287	ArgumentList	reg		3437157	1					
ANR	3437288	Argument	reg		3437157	0					
ANR	3437289	Identifier	reg		3437157	0					
ANR	3437290	Argument	qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG		3437157	1					
ANR	3437291	ConditionalExpression	qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG		3437157	0					
ANR	3437292	Condition	qn -> greedy		3437157	0					
ANR	3437293	PtrMemberAccess	qn -> greedy		3437157	0					
ANR	3437294	Identifier	qn		3437157	0					
ANR	3437295	Identifier	greedy		3437157	1					
ANR	3437296	Identifier	OP_REPEAT_INC		3437157	1					
ANR	3437297	Identifier	OP_REPEAT_INC_NG		3437157	2					
ANR	3437298	Statement	if	701:2:15062:15063	3437157	13	True				
ANR	3437299	Statement	(	701:5:15065:15065	3437157	14	True				
ANR	3437300	Statement	reg	703:6:15096:15098	3437157	15	True				
ANR	3437301	Statement	->	703:9:15099:15100	3437157	16	True				
ANR	3437302	Statement	num_call	703:11:15101:15108	3437157	17	True				
ANR	3437303	Statement	>	703:20:15110:15110	3437157	18	True				
ANR	3437304	Statement	0	703:22:15112:15112	3437157	19	True				
ANR	3437305	Statement	||	703:24:15114:15115	3437157	20	True				
ANR	3437306	Statement	IS_QUANTIFIER_IN_REPEAT	705:6:15130:15152	3437157	21	True				
ANR	3437307	Statement	(	705:29:15153:15153	3437157	22	True				
ANR	3437308	Statement	qn	705:30:15154:15155	3437157	23	True				
ANR	3437309	Statement	)	705:32:15156:15156	3437157	24	True				
ANR	3437310	Statement	)	705:33:15157:15157	3437157	25	True				
ANR	3437311	CompoundStatement		23:35:566:566	3437157	26					
ANR	3437312	ExpressionStatement	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG )"	706:4:15165:15237	3437157	0	True				
ANR	3437313	AssignmentExpression	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG )"		3437157	0		=			
ANR	3437314	Identifier	r		3437157	0					
ANR	3437315	CallExpression	"add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG )"		3437157	1					
ANR	3437316	Callee	add_opcode		3437157	0					
ANR	3437317	Identifier	add_opcode		3437157	0					
ANR	3437318	ArgumentList	reg		3437157	1					
ANR	3437319	Argument	reg		3437157	0					
ANR	3437320	Identifier	reg		3437157	0					
ANR	3437321	Argument	qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG		3437157	1					
ANR	3437322	ConditionalExpression	qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG		3437157	0					
ANR	3437323	Condition	qn -> greedy		3437157	0					
ANR	3437324	PtrMemberAccess	qn -> greedy		3437157	0					
ANR	3437325	Identifier	qn		3437157	0					
ANR	3437326	Identifier	greedy		3437157	1					
ANR	3437327	Identifier	OP_REPEAT_INC_SG		3437157	1					
ANR	3437328	Identifier	OP_REPEAT_INC_NG_SG		3437157	2					
ANR	3437329	IfStatement	if ( r )		3437157	27					
ANR	3437330	Condition	r	711:6:15334:15334	3437157	0	True				
ANR	3437331	Identifier	r		3437157	0					
ANR	3437332	ReturnStatement	return r ;	711:9:15337:15345	3437157	1	True				
ANR	3437333	Identifier	r		3437157	0					
ANR	3437334	ExpressionStatement	"r = add_mem_num ( reg , num_repeat )"	712:2:15349:15381	3437157	28	True				
ANR	3437335	AssignmentExpression	"r = add_mem_num ( reg , num_repeat )"		3437157	0		=			
ANR	3437336	Identifier	r		3437157	0					
ANR	3437337	CallExpression	"add_mem_num ( reg , num_repeat )"		3437157	1					
ANR	3437338	Callee	add_mem_num		3437157	0					
ANR	3437339	Identifier	add_mem_num		3437157	0					
ANR	3437340	ArgumentList	reg		3437157	1					
ANR	3437341	Argument	reg		3437157	0					
ANR	3437342	Identifier	reg		3437157	0					
ANR	3437343	Argument	num_repeat		3437157	1					
ANR	3437344	Identifier	num_repeat		3437157	0					
ANR	3437345	ReturnStatement	return r ;	713:2:15404:15412	3437157	29	True				
ANR	3437346	Identifier	r		3437157	0					
ANR	3437347	ReturnType	static int		3437157	1					
ANR	3437348	Identifier	compile_range_repeat_node		3437157	2					
ANR	3437349	ParameterList	"QtfrNode * qn , int target_len , int empty_info , regex_t * reg"		3437157	3					
ANR	3437350	Parameter	QtfrNode * qn	681:26:14506:14517	3437157	0	True				
ANR	3437351	ParameterType	QtfrNode *		3437157	0					
ANR	3437352	Identifier	qn		3437157	1					
ANR	3437353	Parameter	int target_len	681:40:14520:14533	3437157	1	True				
ANR	3437354	ParameterType	int		3437157	0					
ANR	3437355	Identifier	target_len		3437157	1					
ANR	3437356	Parameter	int empty_info	681:56:14536:14549	3437157	2	True				
ANR	3437357	ParameterType	int		3437157	0					
ANR	3437358	Identifier	empty_info		3437157	1					
ANR	3437359	Parameter	regex_t * reg	682:26:14578:14589	3437157	3	True				
ANR	3437360	ParameterType	regex_t *		3437157	0					
ANR	3437361	Identifier	reg		3437157	1					
ANR	3437362	CFGEntryNode	ENTRY		3437157		True				
ANR	3437363	CFGExitNode	EXIT		3437157		True				
ANR	3437364	Symbol	* qn		3437157						
ANR	3437365	Symbol	qn -> greedy		3437157						
ANR	3437366	Symbol	num_repeat		3437157						
ANR	3437367	Symbol	compile_tree_empty_check		3437157						
ANR	3437368	Symbol	add_mem_num		3437157						
ANR	3437369	Symbol	OP_REPEAT_INC_NG		3437157						
ANR	3437370	Symbol	qn -> lower		3437157						
ANR	3437371	Symbol	OP_REPEAT_INC_NG_SG		3437157						
ANR	3437372	Symbol	OP_REPEAT_INC		3437157						
ANR	3437373	Symbol	OP_REPEAT_INC_SG		3437157						
ANR	3437374	Symbol	reg		3437157						
ANR	3437375	Symbol	SIZE_OP_REPEAT_INC		3437157						
ANR	3437376	Symbol	add_opcode		3437157						
ANR	3437377	Symbol	qn		3437157						
ANR	3437378	Symbol	target_len		3437157						
ANR	3437379	Symbol	OP_REPEAT_NG		3437157						
ANR	3437380	Symbol	qn -> target		3437157						
ANR	3437381	Symbol	qn -> upper		3437157						
ANR	3437382	Symbol	r		3437157						
ANR	3437383	Symbol	OP_REPEAT		3437157						
ANR	3437384	Symbol	empty_info		3437157						
ANR	3437385	Symbol	add_rel_addr		3437157						
ANR	3437386	Symbol	entry_repeat_range		3437157						
ANR	3437387	Symbol	* reg		3437157						
ANR	3437388	Symbol	reg -> num_repeat		3437157						
ANR	3437389	Function	is_anychar_star_quantifier	716:0:15417:15595							
ANR	3437390	FunctionDef	is_anychar_star_quantifier (QtfrNode * qn)		3437389	0					
ANR	3437391	CompoundStatement		718:0:15469:15595	3437389	0					
ANR	3437392	IfStatement	if ( qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY )		3437389	0					
ANR	3437393	Condition	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY	719:6:15477:15557	3437389	0	True				
ANR	3437394	AndExpression	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY		3437389	0		&&			
ANR	3437395	PtrMemberAccess	qn -> greedy		3437389	0					
ANR	3437396	Identifier	qn		3437389	0					
ANR	3437397	Identifier	greedy		3437389	1					
ANR	3437398	AndExpression	IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY		3437389	1		&&			
ANR	3437399	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3437389	0					
ANR	3437400	Callee	IS_REPEAT_INFINITE		3437389	0					
ANR	3437401	Identifier	IS_REPEAT_INFINITE		3437389	0					
ANR	3437402	ArgumentList	qn -> upper		3437389	1					
ANR	3437403	Argument	qn -> upper		3437389	0					
ANR	3437404	PtrMemberAccess	qn -> upper		3437389	0					
ANR	3437405	Identifier	qn		3437389	0					
ANR	3437406	Identifier	upper		3437389	1					
ANR	3437407	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		3437389	1		==			
ANR	3437408	CallExpression	NTYPE ( qn -> target )		3437389	0					
ANR	3437409	Callee	NTYPE		3437389	0					
ANR	3437410	Identifier	NTYPE		3437389	0					
ANR	3437411	ArgumentList	qn -> target		3437389	1					
ANR	3437412	Argument	qn -> target		3437389	0					
ANR	3437413	PtrMemberAccess	qn -> target		3437389	0					
ANR	3437414	Identifier	qn		3437389	0					
ANR	3437415	Identifier	target		3437389	1					
ANR	3437416	Identifier	NT_CANY		3437389	1					
ANR	3437417	ReturnStatement	return 1 ;	721:4:15564:15572	3437389	1	True				
ANR	3437418	PrimaryExpression	1		3437389	0					
ANR	3437419	ElseStatement	else		3437389	0					
ANR	3437420	ReturnStatement	return 0 ;	723:4:15585:15593	3437389	0	True				
ANR	3437421	PrimaryExpression	0		3437389	0					
ANR	3437422	ReturnType	static int		3437389	1					
ANR	3437423	Identifier	is_anychar_star_quantifier		3437389	2					
ANR	3437424	ParameterList	QtfrNode * qn		3437389	3					
ANR	3437425	Parameter	QtfrNode * qn	717:27:15455:15466	3437389	0	True				
ANR	3437426	ParameterType	QtfrNode *		3437389	0					
ANR	3437427	Identifier	qn		3437389	1					
ANR	3437428	CFGEntryNode	ENTRY		3437389		True				
ANR	3437429	CFGExitNode	EXIT		3437389		True				
ANR	3437430	Symbol	* qn		3437389						
ANR	3437431	Symbol	qn -> upper		3437389						
ANR	3437432	Symbol	qn -> greedy		3437389						
ANR	3437433	Symbol	NT_CANY		3437389						
ANR	3437434	Symbol	NTYPE		3437389						
ANR	3437435	Symbol	IS_REPEAT_INFINITE		3437389						
ANR	3437436	Symbol	qn		3437389						
ANR	3437437	Symbol	qn -> target		3437389						
ANR	3437438	Function	compile_length_quantifier_node	731:0:15708:17547							
ANR	3437439	FunctionDef	"compile_length_quantifier_node (QtfrNode * qn , regex_t * reg)"		3437438	0					
ANR	3437440	CompoundStatement		733:0:15778:17547	3437438	0					
ANR	3437441	IdentifierDeclStatement	"int len , mod_tlen , cklen ;"	734:2:15782:15806	3437438	0	True				
ANR	3437442	IdentifierDecl	len		3437438	0					
ANR	3437443	IdentifierDeclType	int		3437438	0					
ANR	3437444	Identifier	len		3437438	1					
ANR	3437445	IdentifierDecl	mod_tlen		3437438	1					
ANR	3437446	IdentifierDeclType	int		3437438	0					
ANR	3437447	Identifier	mod_tlen		3437438	1					
ANR	3437448	IdentifierDecl	cklen		3437438	2					
ANR	3437449	IdentifierDeclType	int		3437438	0					
ANR	3437450	Identifier	cklen		3437438	1					
ANR	3437451	IdentifierDeclStatement	int ckn ;	735:2:15810:15817	3437438	1	True				
ANR	3437452	IdentifierDecl	ckn		3437438	0					
ANR	3437453	IdentifierDeclType	int		3437438	0					
ANR	3437454	Identifier	ckn		3437438	1					
ANR	3437455	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	736:2:15821:15865	3437438	2	True				
ANR	3437456	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3437438	0					
ANR	3437457	IdentifierDeclType	int		3437438	0					
ANR	3437458	Identifier	infinite		3437438	1					
ANR	3437459	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3437438	2		=			
ANR	3437460	Identifier	infinite		3437438	0					
ANR	3437461	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3437438	1					
ANR	3437462	Callee	IS_REPEAT_INFINITE		3437438	0					
ANR	3437463	Identifier	IS_REPEAT_INFINITE		3437438	0					
ANR	3437464	ArgumentList	qn -> upper		3437438	1					
ANR	3437465	Argument	qn -> upper		3437438	0					
ANR	3437466	PtrMemberAccess	qn -> upper		3437438	0					
ANR	3437467	Identifier	qn		3437438	0					
ANR	3437468	Identifier	upper		3437438	1					
ANR	3437469	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	737:2:15869:15907	3437438	3	True				
ANR	3437470	IdentifierDecl	empty_info = qn -> target_empty_info		3437438	0					
ANR	3437471	IdentifierDeclType	int		3437438	0					
ANR	3437472	Identifier	empty_info		3437438	1					
ANR	3437473	AssignmentExpression	empty_info = qn -> target_empty_info		3437438	2		=			
ANR	3437474	Identifier	empty_info		3437438	0					
ANR	3437475	PtrMemberAccess	qn -> target_empty_info		3437438	1					
ANR	3437476	Identifier	qn		3437438	0					
ANR	3437477	Identifier	target_empty_info		3437438	1					
ANR	3437478	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	738:2:15911:15958	3437438	4	True				
ANR	3437479	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		3437438	0					
ANR	3437480	IdentifierDeclType	int		3437438	0					
ANR	3437481	Identifier	tlen		3437438	1					
ANR	3437482	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		3437438	2		=			
ANR	3437483	Identifier	tlen		3437438	0					
ANR	3437484	CallExpression	"compile_length_tree ( qn -> target , reg )"		3437438	1					
ANR	3437485	Callee	compile_length_tree		3437438	0					
ANR	3437486	Identifier	compile_length_tree		3437438	0					
ANR	3437487	ArgumentList	qn -> target		3437438	1					
ANR	3437488	Argument	qn -> target		3437438	0					
ANR	3437489	PtrMemberAccess	qn -> target		3437438	0					
ANR	3437490	Identifier	qn		3437438	0					
ANR	3437491	Identifier	target		3437438	1					
ANR	3437492	Argument	reg		3437438	1					
ANR	3437493	Identifier	reg		3437438	0					
ANR	3437494	IfStatement	if ( tlen < 0 )		3437438	5					
ANR	3437495	Condition	tlen < 0	740:6:15967:15974	3437438	0	True				
ANR	3437496	RelationalExpression	tlen < 0		3437438	0		<			
ANR	3437497	Identifier	tlen		3437438	0					
ANR	3437498	PrimaryExpression	0		3437438	1					
ANR	3437499	ReturnStatement	return tlen ;	740:16:15977:15988	3437438	1	True				
ANR	3437500	Identifier	tlen		3437438	0					
ANR	3437501	ExpressionStatement	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )	742:2:15993:16059	3437438	6	True				
ANR	3437502	AssignmentExpression	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )		3437438	0		=			
ANR	3437503	Identifier	ckn		3437438	0					
ANR	3437504	ConditionalExpression	( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0		3437438	1					
ANR	3437505	Condition	reg -> num_comb_exp_check > 0		3437438	0					
ANR	3437506	RelationalExpression	reg -> num_comb_exp_check > 0		3437438	0		>			
ANR	3437507	PtrMemberAccess	reg -> num_comb_exp_check		3437438	0					
ANR	3437508	Identifier	reg		3437438	0					
ANR	3437509	Identifier	num_comb_exp_check		3437438	1					
ANR	3437510	PrimaryExpression	0		3437438	1					
ANR	3437511	PtrMemberAccess	qn -> comb_exp_check_num		3437438	1					
ANR	3437512	Identifier	qn		3437438	0					
ANR	3437513	Identifier	comb_exp_check_num		3437438	1					
ANR	3437514	PrimaryExpression	0		3437438	2					
ANR	3437515	ExpressionStatement	cklen = ( CKN_ON ? SIZE_STATE_CHECK_NUM : 0 )	744:2:16064:16106	3437438	7	True				
ANR	3437516	AssignmentExpression	cklen = ( CKN_ON ? SIZE_STATE_CHECK_NUM : 0 )		3437438	0		=			
ANR	3437517	Identifier	cklen		3437438	0					
ANR	3437518	ConditionalExpression	CKN_ON ? SIZE_STATE_CHECK_NUM : 0		3437438	1					
ANR	3437519	Condition	CKN_ON		3437438	0					
ANR	3437520	Identifier	CKN_ON		3437438	0					
ANR	3437521	Identifier	SIZE_STATE_CHECK_NUM		3437438	1					
ANR	3437522	PrimaryExpression	0		3437438	2					
ANR	3437523	IfStatement	if ( NTYPE ( qn -> target ) == NT_CANY )		3437438	8					
ANR	3437524	Condition	NTYPE ( qn -> target ) == NT_CANY	747:6:16138:16165	3437438	0	True				
ANR	3437525	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		3437438	0		==			
ANR	3437526	CallExpression	NTYPE ( qn -> target )		3437438	0					
ANR	3437527	Callee	NTYPE		3437438	0					
ANR	3437528	Identifier	NTYPE		3437438	0					
ANR	3437529	ArgumentList	qn -> target		3437438	1					
ANR	3437530	Argument	qn -> target		3437438	0					
ANR	3437531	PtrMemberAccess	qn -> target		3437438	0					
ANR	3437532	Identifier	qn		3437438	0					
ANR	3437533	Identifier	target		3437438	1					
ANR	3437534	Identifier	NT_CANY		3437438	1					
ANR	3437535	CompoundStatement		15:36:389:389	3437438	1					
ANR	3437536	IfStatement	if ( qn -> greedy && infinite )		3437438	0					
ANR	3437537	Condition	qn -> greedy && infinite	748:8:16178:16199	3437438	0	True				
ANR	3437538	AndExpression	qn -> greedy && infinite		3437438	0		&&			
ANR	3437539	PtrMemberAccess	qn -> greedy		3437438	0					
ANR	3437540	Identifier	qn		3437438	0					
ANR	3437541	Identifier	greedy		3437438	1					
ANR	3437542	Identifier	infinite		3437438	1					
ANR	3437543	CompoundStatement		16:32:423:423	3437438	1					
ANR	3437544	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON )		3437438	0					
ANR	3437545	Condition	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON	749:10:16214:16256	3437438	0	True				
ANR	3437546	AndExpression	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON		3437438	0		&&			
ANR	3437547	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		3437438	0					
ANR	3437548	Callee	IS_NOT_NULL		3437438	0					
ANR	3437549	Identifier	IS_NOT_NULL		3437438	0					
ANR	3437550	ArgumentList	qn -> next_head_exact		3437438	1					
ANR	3437551	Argument	qn -> next_head_exact		3437438	0					
ANR	3437552	PtrMemberAccess	qn -> next_head_exact		3437438	0					
ANR	3437553	Identifier	qn		3437438	0					
ANR	3437554	Identifier	next_head_exact		3437438	1					
ANR	3437555	UnaryOperationExpression	! CKN_ON		3437438	1					
ANR	3437556	UnaryOperator	!		3437438	0					
ANR	3437557	Identifier	CKN_ON		3437438	1					
ANR	3437558	ReturnStatement	return SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower + cklen ;	750:8:16267:16331	3437438	1	True				
ANR	3437559	AdditiveExpression	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower + cklen		3437438	0		+			
ANR	3437560	Identifier	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		3437438	0					
ANR	3437561	AdditiveExpression	tlen * qn -> lower + cklen		3437438	1		+			
ANR	3437562	MultiplicativeExpression	tlen * qn -> lower		3437438	0		*			
ANR	3437563	Identifier	tlen		3437438	0					
ANR	3437564	PtrMemberAccess	qn -> lower		3437438	1					
ANR	3437565	Identifier	qn		3437438	0					
ANR	3437566	Identifier	lower		3437438	1					
ANR	3437567	Identifier	cklen		3437438	1					
ANR	3437568	ElseStatement	else		3437438	0					
ANR	3437569	ReturnStatement	return SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower + cklen ;	752:8:16352:16406	3437438	0	True				
ANR	3437570	AdditiveExpression	SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower + cklen		3437438	0		+			
ANR	3437571	Identifier	SIZE_OP_ANYCHAR_STAR		3437438	0					
ANR	3437572	AdditiveExpression	tlen * qn -> lower + cklen		3437438	1		+			
ANR	3437573	MultiplicativeExpression	tlen * qn -> lower		3437438	0		*			
ANR	3437574	Identifier	tlen		3437438	0					
ANR	3437575	PtrMemberAccess	qn -> lower		3437438	1					
ANR	3437576	Identifier	qn		3437438	0					
ANR	3437577	Identifier	lower		3437438	1					
ANR	3437578	Identifier	cklen		3437438	1					
ANR	3437579	IfStatement	if ( empty_info != 0 )		3437438	9					
ANR	3437580	Condition	empty_info != 0	756:6:16425:16439	3437438	0	True				
ANR	3437581	EqualityExpression	empty_info != 0		3437438	0		!=			
ANR	3437582	Identifier	empty_info		3437438	0					
ANR	3437583	PrimaryExpression	0		3437438	1					
ANR	3437584	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	757:4:16446:16515	3437438	1	True				
ANR	3437585	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3437438	0		=			
ANR	3437586	Identifier	mod_tlen		3437438	0					
ANR	3437587	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3437438	1		+			
ANR	3437588	Identifier	tlen		3437438	0					
ANR	3437589	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		3437438	1		+			
ANR	3437590	Identifier	SIZE_OP_NULL_CHECK_START		3437438	0					
ANR	3437591	Identifier	SIZE_OP_NULL_CHECK_END		3437438	1					
ANR	3437592	ElseStatement	else		3437438	0					
ANR	3437593	ExpressionStatement	mod_tlen = tlen	759:4:16528:16543	3437438	0	True				
ANR	3437594	AssignmentExpression	mod_tlen = tlen		3437438	0		=			
ANR	3437595	Identifier	mod_tlen		3437438	0					
ANR	3437596	Identifier	tlen		3437438	1					
ANR	3437597	IfStatement	if ( infinite && qn -> lower <= 1 )		3437438	10					
ANR	3437598	Condition	infinite && qn -> lower <= 1	761:6:16552:16577	3437438	0	True				
ANR	3437599	AndExpression	infinite && qn -> lower <= 1		3437438	0		&&			
ANR	3437600	Identifier	infinite		3437438	0					
ANR	3437601	RelationalExpression	qn -> lower <= 1		3437438	1		<=			
ANR	3437602	PtrMemberAccess	qn -> lower		3437438	0					
ANR	3437603	Identifier	qn		3437438	0					
ANR	3437604	Identifier	lower		3437438	1					
ANR	3437605	PrimaryExpression	1		3437438	1					
ANR	3437606	CompoundStatement		29:34:801:801	3437438	1					
ANR	3437607	IfStatement	if ( qn -> greedy )		3437438	0					
ANR	3437608	Condition	qn -> greedy	762:8:16590:16599	3437438	0	True				
ANR	3437609	PtrMemberAccess	qn -> greedy		3437438	0					
ANR	3437610	Identifier	qn		3437438	0					
ANR	3437611	Identifier	greedy		3437438	1					
ANR	3437612	CompoundStatement		30:20:823:823	3437438	1					
ANR	3437613	IfStatement	if ( qn -> lower == 1 )		3437438	0					
ANR	3437614	Condition	qn -> lower == 1	763:10:16614:16627	3437438	0	True				
ANR	3437615	EqualityExpression	qn -> lower == 1		3437438	0		==			
ANR	3437616	PtrMemberAccess	qn -> lower		3437438	0					
ANR	3437617	Identifier	qn		3437438	0					
ANR	3437618	Identifier	lower		3437438	1					
ANR	3437619	PrimaryExpression	1		3437438	1					
ANR	3437620	ExpressionStatement	len = SIZE_OP_JUMP	764:1:16631:16649	3437438	1	True				
ANR	3437621	AssignmentExpression	len = SIZE_OP_JUMP		3437438	0		=			
ANR	3437622	Identifier	len		3437438	0					
ANR	3437623	Identifier	SIZE_OP_JUMP		3437438	1					
ANR	3437624	ElseStatement	else		3437438	0					
ANR	3437625	ExpressionStatement	len = 0	766:1:16663:16670	3437438	0	True				
ANR	3437626	AssignmentExpression	len = 0		3437438	0		=			
ANR	3437627	Identifier	len		3437438	0					
ANR	3437628	PrimaryExpression	0		3437438	1					
ANR	3437629	ExpressionStatement	len += SIZE_OP_PUSH + cklen + mod_tlen + SIZE_OP_JUMP	768:6:16679:16732	3437438	1	True				
ANR	3437630	AssignmentExpression	len += SIZE_OP_PUSH + cklen + mod_tlen + SIZE_OP_JUMP		3437438	0		+=			
ANR	3437631	Identifier	len		3437438	0					
ANR	3437632	AdditiveExpression	SIZE_OP_PUSH + cklen + mod_tlen + SIZE_OP_JUMP		3437438	1		+			
ANR	3437633	Identifier	SIZE_OP_PUSH		3437438	0					
ANR	3437634	AdditiveExpression	cklen + mod_tlen + SIZE_OP_JUMP		3437438	1		+			
ANR	3437635	Identifier	cklen		3437438	0					
ANR	3437636	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3437438	1		+			
ANR	3437637	Identifier	mod_tlen		3437438	0					
ANR	3437638	Identifier	SIZE_OP_JUMP		3437438	1					
ANR	3437639	ElseStatement	else		3437438	0					
ANR	3437640	CompoundStatement		38:9:970:970	3437438	0					
ANR	3437641	IfStatement	if ( qn -> lower == 0 )		3437438	0					
ANR	3437642	Condition	qn -> lower == 0	771:10:16761:16774	3437438	0	True				
ANR	3437643	EqualityExpression	qn -> lower == 0		3437438	0		==			
ANR	3437644	PtrMemberAccess	qn -> lower		3437438	0					
ANR	3437645	Identifier	qn		3437438	0					
ANR	3437646	Identifier	lower		3437438	1					
ANR	3437647	PrimaryExpression	0		3437438	1					
ANR	3437648	ExpressionStatement	len = SIZE_OP_JUMP	772:1:16778:16796	3437438	1	True				
ANR	3437649	AssignmentExpression	len = SIZE_OP_JUMP		3437438	0		=			
ANR	3437650	Identifier	len		3437438	0					
ANR	3437651	Identifier	SIZE_OP_JUMP		3437438	1					
ANR	3437652	ElseStatement	else		3437438	0					
ANR	3437653	ExpressionStatement	len = 0	774:1:16810:16817	3437438	0	True				
ANR	3437654	AssignmentExpression	len = 0		3437438	0		=			
ANR	3437655	Identifier	len		3437438	0					
ANR	3437656	PrimaryExpression	0		3437438	1					
ANR	3437657	ExpressionStatement	len += mod_tlen + SIZE_OP_PUSH + cklen	776:6:16826:16864	3437438	1	True				
ANR	3437658	AssignmentExpression	len += mod_tlen + SIZE_OP_PUSH + cklen		3437438	0		+=			
ANR	3437659	Identifier	len		3437438	0					
ANR	3437660	AdditiveExpression	mod_tlen + SIZE_OP_PUSH + cklen		3437438	1		+			
ANR	3437661	Identifier	mod_tlen		3437438	0					
ANR	3437662	AdditiveExpression	SIZE_OP_PUSH + cklen		3437438	1		+			
ANR	3437663	Identifier	SIZE_OP_PUSH		3437438	0					
ANR	3437664	Identifier	cklen		3437438	1					
ANR	3437665	ElseStatement	else		3437438	0					
ANR	3437666	IfStatement	if ( qn -> upper == 0 )		3437438	0					
ANR	3437667	Condition	qn -> upper == 0	779:11:16887:16900	3437438	0	True				
ANR	3437668	EqualityExpression	qn -> upper == 0		3437438	0		==			
ANR	3437669	PtrMemberAccess	qn -> upper		3437438	0					
ANR	3437670	Identifier	qn		3437438	0					
ANR	3437671	Identifier	upper		3437438	1					
ANR	3437672	PrimaryExpression	0		3437438	1					
ANR	3437673	CompoundStatement		47:27:1124:1124	3437438	1					
ANR	3437674	IfStatement	if ( qn -> is_refered != 0 )		3437438	0					
ANR	3437675	Condition	qn -> is_refered != 0	780:8:16913:16931	3437438	0	True				
ANR	3437676	EqualityExpression	qn -> is_refered != 0		3437438	0		!=			
ANR	3437677	PtrMemberAccess	qn -> is_refered		3437438	0					
ANR	3437678	Identifier	qn		3437438	0					
ANR	3437679	Identifier	is_refered		3437438	1					
ANR	3437680	PrimaryExpression	0		3437438	1					
ANR	3437681	ExpressionStatement	len = SIZE_OP_JUMP + tlen	781:6:16960:16985	3437438	1	True				
ANR	3437682	AssignmentExpression	len = SIZE_OP_JUMP + tlen		3437438	0		=			
ANR	3437683	Identifier	len		3437438	0					
ANR	3437684	AdditiveExpression	SIZE_OP_JUMP + tlen		3437438	1		+			
ANR	3437685	Identifier	SIZE_OP_JUMP		3437438	0					
ANR	3437686	Identifier	tlen		3437438	1					
ANR	3437687	ElseStatement	else		3437438	0					
ANR	3437688	ExpressionStatement	len = 0	783:6:17002:17009	3437438	0	True				
ANR	3437689	AssignmentExpression	len = 0		3437438	0		=			
ANR	3437690	Identifier	len		3437438	0					
ANR	3437691	PrimaryExpression	0		3437438	1					
ANR	3437692	ElseStatement	else		3437438	0					
ANR	3437693	IfStatement	if ( qn -> upper == 1 && qn -> greedy )		3437438	0					
ANR	3437694	Condition	qn -> upper == 1 && qn -> greedy	785:11:17026:17053	3437438	0	True				
ANR	3437695	AndExpression	qn -> upper == 1 && qn -> greedy		3437438	0		&&			
ANR	3437696	EqualityExpression	qn -> upper == 1		3437438	0		==			
ANR	3437697	PtrMemberAccess	qn -> upper		3437438	0					
ANR	3437698	Identifier	qn		3437438	0					
ANR	3437699	Identifier	upper		3437438	1					
ANR	3437700	PrimaryExpression	1		3437438	1					
ANR	3437701	PtrMemberAccess	qn -> greedy		3437438	1					
ANR	3437702	Identifier	qn		3437438	0					
ANR	3437703	Identifier	greedy		3437438	1					
ANR	3437704	CompoundStatement		53:41:1277:1277	3437438	1					
ANR	3437705	IfStatement	if ( qn -> lower == 0 )		3437438	0					
ANR	3437706	Condition	qn -> lower == 0	786:8:17066:17079	3437438	0	True				
ANR	3437707	EqualityExpression	qn -> lower == 0		3437438	0		==			
ANR	3437708	PtrMemberAccess	qn -> lower		3437438	0					
ANR	3437709	Identifier	qn		3437438	0					
ANR	3437710	Identifier	lower		3437438	1					
ANR	3437711	PrimaryExpression	0		3437438	1					
ANR	3437712	CompoundStatement		54:24:1303:1303	3437438	1					
ANR	3437713	IfStatement	if ( CKN_ON )		3437438	0					
ANR	3437714	Condition	CKN_ON	787:10:17094:17099	3437438	0	True				
ANR	3437715	Identifier	CKN_ON		3437438	0					
ANR	3437716	CompoundStatement		55:18:1323:1323	3437438	1					
ANR	3437717	ExpressionStatement	len = SIZE_OP_STATE_CHECK_PUSH + tlen	788:1:17105:17142	3437438	0	True				
ANR	3437718	AssignmentExpression	len = SIZE_OP_STATE_CHECK_PUSH + tlen		3437438	0		=			
ANR	3437719	Identifier	len		3437438	0					
ANR	3437720	AdditiveExpression	SIZE_OP_STATE_CHECK_PUSH + tlen		3437438	1		+			
ANR	3437721	Identifier	SIZE_OP_STATE_CHECK_PUSH		3437438	0					
ANR	3437722	Identifier	tlen		3437438	1					
ANR	3437723	ElseStatement	else		3437438	0					
ANR	3437724	CompoundStatement		58:11:1384:1384	3437438	0					
ANR	3437725	ExpressionStatement	len = SIZE_OP_PUSH + tlen	791:1:17166:17191	3437438	0	True				
ANR	3437726	AssignmentExpression	len = SIZE_OP_PUSH + tlen		3437438	0		=			
ANR	3437727	Identifier	len		3437438	0					
ANR	3437728	AdditiveExpression	SIZE_OP_PUSH + tlen		3437438	1		+			
ANR	3437729	Identifier	SIZE_OP_PUSH		3437438	0					
ANR	3437730	Identifier	tlen		3437438	1					
ANR	3437731	ElseStatement	else		3437438	0					
ANR	3437732	CompoundStatement		62:9:1437:1437	3437438	0					
ANR	3437733	ExpressionStatement	len = tlen	795:6:17224:17234	3437438	0	True				
ANR	3437734	AssignmentExpression	len = tlen		3437438	0		=			
ANR	3437735	Identifier	len		3437438	0					
ANR	3437736	Identifier	tlen		3437438	1					
ANR	3437737	ElseStatement	else		3437438	0					
ANR	3437738	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		3437438	0					
ANR	3437739	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	798:11:17257:17303	3437438	0	True				
ANR	3437740	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		3437438	0		&&			
ANR	3437741	UnaryOperationExpression	! qn -> greedy		3437438	0					
ANR	3437742	UnaryOperator	!		3437438	0					
ANR	3437743	PtrMemberAccess	qn -> greedy		3437438	1					
ANR	3437744	Identifier	qn		3437438	0					
ANR	3437745	Identifier	greedy		3437438	1					
ANR	3437746	AndExpression	qn -> upper == 1 && qn -> lower == 0		3437438	1		&&			
ANR	3437747	EqualityExpression	qn -> upper == 1		3437438	0		==			
ANR	3437748	PtrMemberAccess	qn -> upper		3437438	0					
ANR	3437749	Identifier	qn		3437438	0					
ANR	3437750	Identifier	upper		3437438	1					
ANR	3437751	PrimaryExpression	1		3437438	1					
ANR	3437752	EqualityExpression	qn -> lower == 0		3437438	1		==			
ANR	3437753	PtrMemberAccess	qn -> lower		3437438	0					
ANR	3437754	Identifier	qn		3437438	0					
ANR	3437755	Identifier	lower		3437438	1					
ANR	3437756	PrimaryExpression	0		3437438	1					
ANR	3437757	CompoundStatement		66:60:1527:1527	3437438	1					
ANR	3437758	ExpressionStatement	len = SIZE_OP_PUSH + cklen + SIZE_OP_JUMP + tlen	799:4:17323:17371	3437438	0	True				
ANR	3437759	AssignmentExpression	len = SIZE_OP_PUSH + cklen + SIZE_OP_JUMP + tlen		3437438	0		=			
ANR	3437760	Identifier	len		3437438	0					
ANR	3437761	AdditiveExpression	SIZE_OP_PUSH + cklen + SIZE_OP_JUMP + tlen		3437438	1		+			
ANR	3437762	Identifier	SIZE_OP_PUSH		3437438	0					
ANR	3437763	AdditiveExpression	cklen + SIZE_OP_JUMP + tlen		3437438	1		+			
ANR	3437764	Identifier	cklen		3437438	0					
ANR	3437765	AdditiveExpression	SIZE_OP_JUMP + tlen		3437438	1		+			
ANR	3437766	Identifier	SIZE_OP_JUMP		3437438	0					
ANR	3437767	Identifier	tlen		3437438	1					
ANR	3437768	ElseStatement	else		3437438	0					
ANR	3437769	CompoundStatement		69:7:1605:1605	3437438	0					
ANR	3437770	ExpressionStatement	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM	802:4:17390:17476	3437438	0	True				
ANR	3437771	AssignmentExpression	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3437438	0		=			
ANR	3437772	Identifier	len		3437438	0					
ANR	3437773	AdditiveExpression	SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3437438	1		+			
ANR	3437774	Identifier	SIZE_OP_REPEAT_INC		3437438	0					
ANR	3437775	AdditiveExpression	mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3437438	1		+			
ANR	3437776	Identifier	mod_tlen		3437438	0					
ANR	3437777	AdditiveExpression	SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3437438	1		+			
ANR	3437778	Identifier	SIZE_OPCODE		3437438	0					
ANR	3437779	AdditiveExpression	SIZE_RELADDR + SIZE_MEMNUM		3437438	1		+			
ANR	3437780	Identifier	SIZE_RELADDR		3437438	0					
ANR	3437781	Identifier	SIZE_MEMNUM		3437438	1					
ANR	3437782	IfStatement	if ( CKN_ON )		3437438	1					
ANR	3437783	Condition	CKN_ON	804:8:17486:17491	3437438	0	True				
ANR	3437784	Identifier	CKN_ON		3437438	0					
ANR	3437785	ExpressionStatement	len += SIZE_OP_STATE_CHECK	805:6:17500:17526	3437438	1	True				
ANR	3437786	AssignmentExpression	len += SIZE_OP_STATE_CHECK		3437438	0		+=			
ANR	3437787	Identifier	len		3437438	0					
ANR	3437788	Identifier	SIZE_OP_STATE_CHECK		3437438	1					
ANR	3437789	ReturnStatement	return len ;	808:2:17535:17545	3437438	11	True				
ANR	3437790	Identifier	len		3437438	0					
ANR	3437791	ReturnType	static int		3437438	1					
ANR	3437792	Identifier	compile_length_quantifier_node		3437438	2					
ANR	3437793	ParameterList	"QtfrNode * qn , regex_t * reg"		3437438	3					
ANR	3437794	Parameter	QtfrNode * qn	732:31:15750:15761	3437438	0	True				
ANR	3437795	ParameterType	QtfrNode *		3437438	0					
ANR	3437796	Identifier	qn		3437438	1					
ANR	3437797	Parameter	regex_t * reg	732:45:15764:15775	3437438	1	True				
ANR	3437798	ParameterType	regex_t *		3437438	0					
ANR	3437799	Identifier	reg		3437438	1					
ANR	3437800	CFGEntryNode	ENTRY		3437438		True				
ANR	3437801	CFGExitNode	EXIT		3437438		True				
ANR	3437802	Symbol	* qn		3437438						
ANR	3437803	Symbol	qn -> target_empty_info		3437438						
ANR	3437804	Symbol	qn -> greedy		3437438						
ANR	3437805	Symbol	SIZE_RELADDR		3437438						
ANR	3437806	Symbol	CKN_ON		3437438						
ANR	3437807	Symbol	IS_NOT_NULL		3437438						
ANR	3437808	Symbol	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		3437438						
ANR	3437809	Symbol	infinite		3437438						
ANR	3437810	Symbol	ckn		3437438						
ANR	3437811	Symbol	cklen		3437438						
ANR	3437812	Symbol	qn -> next_head_exact		3437438						
ANR	3437813	Symbol	SIZE_OP_NULL_CHECK_END		3437438						
ANR	3437814	Symbol	SIZE_STATE_CHECK_NUM		3437438						
ANR	3437815	Symbol	SIZE_OPCODE		3437438						
ANR	3437816	Symbol	qn -> lower		3437438						
ANR	3437817	Symbol	SIZE_MEMNUM		3437438						
ANR	3437818	Symbol	len		3437438						
ANR	3437819	Symbol	reg		3437438						
ANR	3437820	Symbol	NT_CANY		3437438						
ANR	3437821	Symbol	SIZE_OP_ANYCHAR_STAR		3437438						
ANR	3437822	Symbol	tlen		3437438						
ANR	3437823	Symbol	reg -> num_comb_exp_check		3437438						
ANR	3437824	Symbol	SIZE_OP_REPEAT_INC		3437438						
ANR	3437825	Symbol	IS_REPEAT_INFINITE		3437438						
ANR	3437826	Symbol	SIZE_OP_NULL_CHECK_START		3437438						
ANR	3437827	Symbol	qn		3437438						
ANR	3437828	Symbol	SIZE_OP_JUMP		3437438						
ANR	3437829	Symbol	SIZE_OP_STATE_CHECK		3437438						
ANR	3437830	Symbol	compile_length_tree		3437438						
ANR	3437831	Symbol	qn -> comb_exp_check_num		3437438						
ANR	3437832	Symbol	SIZE_OP_PUSH		3437438						
ANR	3437833	Symbol	qn -> target		3437438						
ANR	3437834	Symbol	qn -> upper		3437438						
ANR	3437835	Symbol	qn -> is_refered		3437438						
ANR	3437836	Symbol	mod_tlen		3437438						
ANR	3437837	Symbol	empty_info		3437438						
ANR	3437838	Symbol	NTYPE		3437438						
ANR	3437839	Symbol	SIZE_OP_STATE_CHECK_PUSH		3437438						
ANR	3437840	Symbol	* reg		3437438						
ANR	3437841	Function	compile_quantifier_node	811:0:17550:21520							
ANR	3437842	FunctionDef	"compile_quantifier_node (QtfrNode * qn , regex_t * reg)"		3437841	0					
ANR	3437843	CompoundStatement		813:0:17613:21520	3437841	0					
ANR	3437844	IdentifierDeclStatement	"int r , mod_tlen ;"	814:2:17617:17632	3437841	0	True				
ANR	3437845	IdentifierDecl	r		3437841	0					
ANR	3437846	IdentifierDeclType	int		3437841	0					
ANR	3437847	Identifier	r		3437841	1					
ANR	3437848	IdentifierDecl	mod_tlen		3437841	1					
ANR	3437849	IdentifierDeclType	int		3437841	0					
ANR	3437850	Identifier	mod_tlen		3437841	1					
ANR	3437851	IdentifierDeclStatement	int ckn ;	815:2:17636:17643	3437841	1	True				
ANR	3437852	IdentifierDecl	ckn		3437841	0					
ANR	3437853	IdentifierDeclType	int		3437841	0					
ANR	3437854	Identifier	ckn		3437841	1					
ANR	3437855	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	816:2:17647:17691	3437841	2	True				
ANR	3437856	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3437841	0					
ANR	3437857	IdentifierDeclType	int		3437841	0					
ANR	3437858	Identifier	infinite		3437841	1					
ANR	3437859	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3437841	2		=			
ANR	3437860	Identifier	infinite		3437841	0					
ANR	3437861	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3437841	1					
ANR	3437862	Callee	IS_REPEAT_INFINITE		3437841	0					
ANR	3437863	Identifier	IS_REPEAT_INFINITE		3437841	0					
ANR	3437864	ArgumentList	qn -> upper		3437841	1					
ANR	3437865	Argument	qn -> upper		3437841	0					
ANR	3437866	PtrMemberAccess	qn -> upper		3437841	0					
ANR	3437867	Identifier	qn		3437841	0					
ANR	3437868	Identifier	upper		3437841	1					
ANR	3437869	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	817:2:17695:17733	3437841	3	True				
ANR	3437870	IdentifierDecl	empty_info = qn -> target_empty_info		3437841	0					
ANR	3437871	IdentifierDeclType	int		3437841	0					
ANR	3437872	Identifier	empty_info		3437841	1					
ANR	3437873	AssignmentExpression	empty_info = qn -> target_empty_info		3437841	2		=			
ANR	3437874	Identifier	empty_info		3437841	0					
ANR	3437875	PtrMemberAccess	qn -> target_empty_info		3437841	1					
ANR	3437876	Identifier	qn		3437841	0					
ANR	3437877	Identifier	target_empty_info		3437841	1					
ANR	3437878	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	818:2:17737:17784	3437841	4	True				
ANR	3437879	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		3437841	0					
ANR	3437880	IdentifierDeclType	int		3437841	0					
ANR	3437881	Identifier	tlen		3437841	1					
ANR	3437882	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		3437841	2		=			
ANR	3437883	Identifier	tlen		3437841	0					
ANR	3437884	CallExpression	"compile_length_tree ( qn -> target , reg )"		3437841	1					
ANR	3437885	Callee	compile_length_tree		3437841	0					
ANR	3437886	Identifier	compile_length_tree		3437841	0					
ANR	3437887	ArgumentList	qn -> target		3437841	1					
ANR	3437888	Argument	qn -> target		3437841	0					
ANR	3437889	PtrMemberAccess	qn -> target		3437841	0					
ANR	3437890	Identifier	qn		3437841	0					
ANR	3437891	Identifier	target		3437841	1					
ANR	3437892	Argument	reg		3437841	1					
ANR	3437893	Identifier	reg		3437841	0					
ANR	3437894	IfStatement	if ( tlen < 0 )		3437841	5					
ANR	3437895	Condition	tlen < 0	820:6:17793:17800	3437841	0	True				
ANR	3437896	RelationalExpression	tlen < 0		3437841	0		<			
ANR	3437897	Identifier	tlen		3437841	0					
ANR	3437898	PrimaryExpression	0		3437841	1					
ANR	3437899	ReturnStatement	return tlen ;	820:16:17803:17814	3437841	1	True				
ANR	3437900	Identifier	tlen		3437841	0					
ANR	3437901	ExpressionStatement	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )	822:2:17819:17885	3437841	6	True				
ANR	3437902	AssignmentExpression	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )		3437841	0		=			
ANR	3437903	Identifier	ckn		3437841	0					
ANR	3437904	ConditionalExpression	( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0		3437841	1					
ANR	3437905	Condition	reg -> num_comb_exp_check > 0		3437841	0					
ANR	3437906	RelationalExpression	reg -> num_comb_exp_check > 0		3437841	0		>			
ANR	3437907	PtrMemberAccess	reg -> num_comb_exp_check		3437841	0					
ANR	3437908	Identifier	reg		3437841	0					
ANR	3437909	Identifier	num_comb_exp_check		3437841	1					
ANR	3437910	PrimaryExpression	0		3437841	1					
ANR	3437911	PtrMemberAccess	qn -> comb_exp_check_num		3437841	1					
ANR	3437912	Identifier	qn		3437841	0					
ANR	3437913	Identifier	comb_exp_check_num		3437841	1					
ANR	3437914	PrimaryExpression	0		3437841	2					
ANR	3437915	IfStatement	if ( is_anychar_star_quantifier ( qn ) )		3437841	7					
ANR	3437916	Condition	is_anychar_star_quantifier ( qn )	824:6:17894:17923	3437841	0	True				
ANR	3437917	CallExpression	is_anychar_star_quantifier ( qn )		3437841	0					
ANR	3437918	Callee	is_anychar_star_quantifier		3437841	0					
ANR	3437919	Identifier	is_anychar_star_quantifier		3437841	0					
ANR	3437920	ArgumentList	qn		3437841	1					
ANR	3437921	Argument	qn		3437841	0					
ANR	3437922	Identifier	qn		3437841	0					
ANR	3437923	CompoundStatement		12:38:312:312	3437841	1					
ANR	3437924	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	825:4:17932:17984	3437841	0	True				
ANR	3437925	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3437841	0		=			
ANR	3437926	Identifier	r		3437841	0					
ANR	3437927	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3437841	1					
ANR	3437928	Callee	compile_tree_n_times		3437841	0					
ANR	3437929	Identifier	compile_tree_n_times		3437841	0					
ANR	3437930	ArgumentList	qn -> target		3437841	1					
ANR	3437931	Argument	qn -> target		3437841	0					
ANR	3437932	PtrMemberAccess	qn -> target		3437841	0					
ANR	3437933	Identifier	qn		3437841	0					
ANR	3437934	Identifier	target		3437841	1					
ANR	3437935	Argument	qn -> lower		3437841	1					
ANR	3437936	PtrMemberAccess	qn -> lower		3437841	0					
ANR	3437937	Identifier	qn		3437841	0					
ANR	3437938	Identifier	lower		3437841	1					
ANR	3437939	Argument	reg		3437841	2					
ANR	3437940	Identifier	reg		3437841	0					
ANR	3437941	IfStatement	if ( r )		3437841	1					
ANR	3437942	Condition	r	826:8:17994:17994	3437841	0	True				
ANR	3437943	Identifier	r		3437841	0					
ANR	3437944	ReturnStatement	return r ;	826:11:17997:18005	3437841	1	True				
ANR	3437945	Identifier	r		3437841	0					
ANR	3437946	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON )		3437841	2					
ANR	3437947	Condition	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON	827:8:18015:18057	3437841	0	True				
ANR	3437948	AndExpression	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON		3437841	0		&&			
ANR	3437949	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		3437841	0					
ANR	3437950	Callee	IS_NOT_NULL		3437841	0					
ANR	3437951	Identifier	IS_NOT_NULL		3437841	0					
ANR	3437952	ArgumentList	qn -> next_head_exact		3437841	1					
ANR	3437953	Argument	qn -> next_head_exact		3437841	0					
ANR	3437954	PtrMemberAccess	qn -> next_head_exact		3437841	0					
ANR	3437955	Identifier	qn		3437841	0					
ANR	3437956	Identifier	next_head_exact		3437841	1					
ANR	3437957	UnaryOperationExpression	! CKN_ON		3437841	1					
ANR	3437958	UnaryOperator	!		3437841	0					
ANR	3437959	Identifier	CKN_ON		3437841	1					
ANR	3437960	CompoundStatement		15:53:446:446	3437841	1					
ANR	3437961	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		3437841	0					
ANR	3437962	Condition	IS_MULTILINE ( reg -> options )	828:10:18072:18097	3437841	0	True				
ANR	3437963	CallExpression	IS_MULTILINE ( reg -> options )		3437841	0					
ANR	3437964	Callee	IS_MULTILINE		3437841	0					
ANR	3437965	Identifier	IS_MULTILINE		3437841	0					
ANR	3437966	ArgumentList	reg -> options		3437841	1					
ANR	3437967	Argument	reg -> options		3437841	0					
ANR	3437968	PtrMemberAccess	reg -> options		3437841	0					
ANR	3437969	Identifier	reg		3437841	0					
ANR	3437970	Identifier	options		3437841	1					
ANR	3437971	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"	829:1:18101:18150	3437841	1	True				
ANR	3437972	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		3437841	0		=			
ANR	3437973	Identifier	r		3437841	0					
ANR	3437974	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		3437841	1					
ANR	3437975	Callee	add_opcode		3437841	0					
ANR	3437976	Identifier	add_opcode		3437841	0					
ANR	3437977	ArgumentList	reg		3437841	1					
ANR	3437978	Argument	reg		3437841	0					
ANR	3437979	Identifier	reg		3437841	0					
ANR	3437980	Argument	OP_ANYCHAR_ML_STAR_PEEK_NEXT		3437841	1					
ANR	3437981	Identifier	OP_ANYCHAR_ML_STAR_PEEK_NEXT		3437841	0					
ANR	3437982	ElseStatement	else		3437841	0					
ANR	3437983	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"	831:1:18164:18210	3437841	0	True				
ANR	3437984	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		3437841	0		=			
ANR	3437985	Identifier	r		3437841	0					
ANR	3437986	CallExpression	"add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		3437841	1					
ANR	3437987	Callee	add_opcode		3437841	0					
ANR	3437988	Identifier	add_opcode		3437841	0					
ANR	3437989	ArgumentList	reg		3437841	1					
ANR	3437990	Argument	reg		3437841	0					
ANR	3437991	Identifier	reg		3437841	0					
ANR	3437992	Argument	OP_ANYCHAR_STAR_PEEK_NEXT		3437841	1					
ANR	3437993	Identifier	OP_ANYCHAR_STAR_PEEK_NEXT		3437841	0					
ANR	3437994	IfStatement	if ( r )		3437841	1					
ANR	3437995	Condition	r	832:10:18222:18222	3437841	0	True				
ANR	3437996	Identifier	r		3437841	0					
ANR	3437997	ReturnStatement	return r ;	832:13:18225:18233	3437841	1	True				
ANR	3437998	Identifier	r		3437841	0					
ANR	3437999	IfStatement	if ( CKN_ON )		3437841	2					
ANR	3438000	Condition	CKN_ON	833:10:18245:18250	3437841	0	True				
ANR	3438001	Identifier	CKN_ON		3437841	0					
ANR	3438002	CompoundStatement		21:18:639:639	3437841	1					
ANR	3438003	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	834:1:18256:18289	3437841	0	True				
ANR	3438004	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		3437841	0		=			
ANR	3438005	Identifier	r		3437841	0					
ANR	3438006	CallExpression	"add_state_check_num ( reg , ckn )"		3437841	1					
ANR	3438007	Callee	add_state_check_num		3437841	0					
ANR	3438008	Identifier	add_state_check_num		3437841	0					
ANR	3438009	ArgumentList	reg		3437841	1					
ANR	3438010	Argument	reg		3437841	0					
ANR	3438011	Identifier	reg		3437841	0					
ANR	3438012	Argument	ckn		3437841	1					
ANR	3438013	Identifier	ckn		3437841	0					
ANR	3438014	IfStatement	if ( r )		3437841	1					
ANR	3438015	Condition	r	835:5:18296:18296	3437841	0	True				
ANR	3438016	Identifier	r		3437841	0					
ANR	3438017	ReturnStatement	return r ;	835:8:18299:18307	3437841	1	True				
ANR	3438018	Identifier	r		3437841	0					
ANR	3438019	ReturnStatement	"return add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 ) ;"	838:6:18324:18378	3437841	3	True				
ANR	3438020	CallExpression	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"		3437841	0					
ANR	3438021	Callee	add_bytes		3437841	0					
ANR	3438022	Identifier	add_bytes		3437841	0					
ANR	3438023	ArgumentList	reg		3437841	1					
ANR	3438024	Argument	reg		3437841	0					
ANR	3438025	Identifier	reg		3437841	0					
ANR	3438026	Argument	NSTR ( qn -> next_head_exact ) -> s		3437841	1					
ANR	3438027	PtrMemberAccess	NSTR ( qn -> next_head_exact ) -> s		3437841	0					
ANR	3438028	CallExpression	NSTR ( qn -> next_head_exact )		3437841	0					
ANR	3438029	Callee	NSTR		3437841	0					
ANR	3438030	Identifier	NSTR		3437841	0					
ANR	3438031	ArgumentList	qn -> next_head_exact		3437841	1					
ANR	3438032	Argument	qn -> next_head_exact		3437841	0					
ANR	3438033	PtrMemberAccess	qn -> next_head_exact		3437841	0					
ANR	3438034	Identifier	qn		3437841	0					
ANR	3438035	Identifier	next_head_exact		3437841	1					
ANR	3438036	Identifier	s		3437841	1					
ANR	3438037	Argument	1		3437841	2					
ANR	3438038	PrimaryExpression	1		3437841	0					
ANR	3438039	ElseStatement	else		3437841	0					
ANR	3438040	CompoundStatement		28:9:781:781	3437841	0					
ANR	3438041	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		3437841	0					
ANR	3438042	Condition	IS_MULTILINE ( reg -> options )	841:10:18407:18432	3437841	0	True				
ANR	3438043	CallExpression	IS_MULTILINE ( reg -> options )		3437841	0					
ANR	3438044	Callee	IS_MULTILINE		3437841	0					
ANR	3438045	Identifier	IS_MULTILINE		3437841	0					
ANR	3438046	ArgumentList	reg -> options		3437841	1					
ANR	3438047	Argument	reg -> options		3437841	0					
ANR	3438048	PtrMemberAccess	reg -> options		3437841	0					
ANR	3438049	Identifier	reg		3437841	0					
ANR	3438050	Identifier	options		3437841	1					
ANR	3438051	CompoundStatement		29:38:821:821	3437841	1					
ANR	3438052	ExpressionStatement	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR ) )"	842:1:18438:18539	3437841	0	True				
ANR	3438053	AssignmentExpression	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR ) )"		3437841	0		=			
ANR	3438054	Identifier	r		3437841	0					
ANR	3438055	CallExpression	"add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR ) )"		3437841	1					
ANR	3438056	Callee	add_opcode		3437841	0					
ANR	3438057	Identifier	add_opcode		3437841	0					
ANR	3438058	ArgumentList	reg		3437841	1					
ANR	3438059	Argument	reg		3437841	0					
ANR	3438060	Identifier	reg		3437841	0					
ANR	3438061	Argument	CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR		3437841	1					
ANR	3438062	ConditionalExpression	CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR		3437841	0					
ANR	3438063	Condition	CKN_ON		3437841	0					
ANR	3438064	Identifier	CKN_ON		3437841	0					
ANR	3438065	Identifier	OP_STATE_CHECK_ANYCHAR_ML_STAR		3437841	1					
ANR	3438066	Identifier	OP_ANYCHAR_ML_STAR		3437841	2					
ANR	3438067	ElseStatement	else		3437841	0					
ANR	3438068	CompoundStatement		34:11:946:946	3437841	0					
ANR	3438069	ExpressionStatement	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR ) )"	847:1:18563:18658	3437841	0	True				
ANR	3438070	AssignmentExpression	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR ) )"		3437841	0		=			
ANR	3438071	Identifier	r		3437841	0					
ANR	3438072	CallExpression	"add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR ) )"		3437841	1					
ANR	3438073	Callee	add_opcode		3437841	0					
ANR	3438074	Identifier	add_opcode		3437841	0					
ANR	3438075	ArgumentList	reg		3437841	1					
ANR	3438076	Argument	reg		3437841	0					
ANR	3438077	Identifier	reg		3437841	0					
ANR	3438078	Argument	CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR		3437841	1					
ANR	3438079	ConditionalExpression	CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR		3437841	0					
ANR	3438080	Condition	CKN_ON		3437841	0					
ANR	3438081	Identifier	CKN_ON		3437841	0					
ANR	3438082	Identifier	OP_STATE_CHECK_ANYCHAR_STAR		3437841	1					
ANR	3438083	Identifier	OP_ANYCHAR_STAR		3437841	2					
ANR	3438084	IfStatement	if ( r )		3437841	1					
ANR	3438085	Condition	r	851:10:18678:18678	3437841	0	True				
ANR	3438086	Identifier	r		3437841	0					
ANR	3438087	ReturnStatement	return r ;	851:13:18681:18689	3437841	1	True				
ANR	3438088	Identifier	r		3437841	0					
ANR	3438089	IfStatement	if ( CKN_ON )		3437841	2					
ANR	3438090	Condition	CKN_ON	852:10:18701:18706	3437841	0	True				
ANR	3438091	Identifier	CKN_ON		3437841	0					
ANR	3438092	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	853:1:18710:18743	3437841	1	True				
ANR	3438093	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		3437841	0		=			
ANR	3438094	Identifier	r		3437841	0					
ANR	3438095	CallExpression	"add_state_check_num ( reg , ckn )"		3437841	1					
ANR	3438096	Callee	add_state_check_num		3437841	0					
ANR	3438097	Identifier	add_state_check_num		3437841	0					
ANR	3438098	ArgumentList	reg		3437841	1					
ANR	3438099	Argument	reg		3437841	0					
ANR	3438100	Identifier	reg		3437841	0					
ANR	3438101	Argument	ckn		3437841	1					
ANR	3438102	Identifier	ckn		3437841	0					
ANR	3438103	ReturnStatement	return r ;	855:6:18752:18760	3437841	3	True				
ANR	3438104	Identifier	r		3437841	0					
ANR	3438105	IfStatement	if ( empty_info != 0 )		3437841	8					
ANR	3438106	Condition	empty_info != 0	859:6:18779:18793	3437841	0	True				
ANR	3438107	EqualityExpression	empty_info != 0		3437841	0		!=			
ANR	3438108	Identifier	empty_info		3437841	0					
ANR	3438109	PrimaryExpression	0		3437841	1					
ANR	3438110	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	860:4:18800:18869	3437841	1	True				
ANR	3438111	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3437841	0		=			
ANR	3438112	Identifier	mod_tlen		3437841	0					
ANR	3438113	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3437841	1		+			
ANR	3438114	Identifier	tlen		3437841	0					
ANR	3438115	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		3437841	1		+			
ANR	3438116	Identifier	SIZE_OP_NULL_CHECK_START		3437841	0					
ANR	3438117	Identifier	SIZE_OP_NULL_CHECK_END		3437841	1					
ANR	3438118	ElseStatement	else		3437841	0					
ANR	3438119	ExpressionStatement	mod_tlen = tlen	862:4:18882:18897	3437841	0	True				
ANR	3438120	AssignmentExpression	mod_tlen = tlen		3437841	0		=			
ANR	3438121	Identifier	mod_tlen		3437841	0					
ANR	3438122	Identifier	tlen		3437841	1					
ANR	3438123	IfStatement	if ( infinite && qn -> lower <= 1 )		3437841	9					
ANR	3438124	Condition	infinite && qn -> lower <= 1	864:6:18906:18931	3437841	0	True				
ANR	3438125	AndExpression	infinite && qn -> lower <= 1		3437841	0		&&			
ANR	3438126	Identifier	infinite		3437841	0					
ANR	3438127	RelationalExpression	qn -> lower <= 1		3437841	1		<=			
ANR	3438128	PtrMemberAccess	qn -> lower		3437841	0					
ANR	3438129	Identifier	qn		3437841	0					
ANR	3438130	Identifier	lower		3437841	1					
ANR	3438131	PrimaryExpression	1		3437841	1					
ANR	3438132	CompoundStatement		52:34:1320:1320	3437841	1					
ANR	3438133	IfStatement	if ( qn -> greedy )		3437841	0					
ANR	3438134	Condition	qn -> greedy	865:8:18944:18953	3437841	0	True				
ANR	3438135	PtrMemberAccess	qn -> greedy		3437841	0					
ANR	3438136	Identifier	qn		3437841	0					
ANR	3438137	Identifier	greedy		3437841	1					
ANR	3438138	CompoundStatement		53:20:1342:1342	3437841	1					
ANR	3438139	IfStatement	if ( qn -> lower == 1 )		3437841	0					
ANR	3438140	Condition	qn -> lower == 1	866:10:18968:18981	3437841	0	True				
ANR	3438141	EqualityExpression	qn -> lower == 1		3437841	0		==			
ANR	3438142	PtrMemberAccess	qn -> lower		3437841	0					
ANR	3438143	Identifier	qn		3437841	0					
ANR	3438144	Identifier	lower		3437841	1					
ANR	3438145	PrimaryExpression	1		3437841	1					
ANR	3438146	CompoundStatement		54:26:1370:1370	3437841	1					
ANR	3438147	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )"	867:1:18987:19079	3437841	0	True				
ANR	3438148	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )"		3437841	0		=			
ANR	3438149	Identifier	r		3437841	0					
ANR	3438150	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )"		3437841	1					
ANR	3438151	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438152	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438153	ArgumentList	reg		3437841	1					
ANR	3438154	Argument	reg		3437841	0					
ANR	3438155	Identifier	reg		3437841	0					
ANR	3438156	Argument	OP_JUMP		3437841	1					
ANR	3438157	Identifier	OP_JUMP		3437841	0					
ANR	3438158	Argument	CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH		3437841	2					
ANR	3438159	ConditionalExpression	CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH		3437841	0					
ANR	3438160	Condition	CKN_ON		3437841	0					
ANR	3438161	Identifier	CKN_ON		3437841	0					
ANR	3438162	Identifier	SIZE_OP_STATE_CHECK_PUSH		3437841	1					
ANR	3438163	Identifier	SIZE_OP_PUSH		3437841	2					
ANR	3438164	IfStatement	if ( r )		3437841	1					
ANR	3438165	Condition	r	869:5:19086:19086	3437841	0	True				
ANR	3438166	Identifier	r		3437841	0					
ANR	3438167	ReturnStatement	return r ;	869:8:19089:19097	3437841	1	True				
ANR	3438168	Identifier	r		3437841	0					
ANR	3438169	IfStatement	if ( CKN_ON )		3437841	1					
ANR	3438170	Condition	CKN_ON	872:10:19118:19123	3437841	0	True				
ANR	3438171	Identifier	CKN_ON		3437841	0					
ANR	3438172	CompoundStatement		60:18:1512:1512	3437841	1					
ANR	3438173	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"	873:1:19129:19169	3437841	0	True				
ANR	3438174	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"		3437841	0		=			
ANR	3438175	Identifier	r		3437841	0					
ANR	3438176	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH )"		3437841	1					
ANR	3438177	Callee	add_opcode		3437841	0					
ANR	3438178	Identifier	add_opcode		3437841	0					
ANR	3438179	ArgumentList	reg		3437841	1					
ANR	3438180	Argument	reg		3437841	0					
ANR	3438181	Identifier	reg		3437841	0					
ANR	3438182	Argument	OP_STATE_CHECK_PUSH		3437841	1					
ANR	3438183	Identifier	OP_STATE_CHECK_PUSH		3437841	0					
ANR	3438184	IfStatement	if ( r )		3437841	1					
ANR	3438185	Condition	r	874:5:19176:19176	3437841	0	True				
ANR	3438186	Identifier	r		3437841	0					
ANR	3438187	ReturnStatement	return r ;	874:8:19179:19187	3437841	1	True				
ANR	3438188	Identifier	r		3437841	0					
ANR	3438189	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	875:1:19190:19223	3437841	2	True				
ANR	3438190	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		3437841	0		=			
ANR	3438191	Identifier	r		3437841	0					
ANR	3438192	CallExpression	"add_state_check_num ( reg , ckn )"		3437841	1					
ANR	3438193	Callee	add_state_check_num		3437841	0					
ANR	3438194	Identifier	add_state_check_num		3437841	0					
ANR	3438195	ArgumentList	reg		3437841	1					
ANR	3438196	Argument	reg		3437841	0					
ANR	3438197	Identifier	reg		3437841	0					
ANR	3438198	Argument	ckn		3437841	1					
ANR	3438199	Identifier	ckn		3437841	0					
ANR	3438200	IfStatement	if ( r )		3437841	3					
ANR	3438201	Condition	r	876:5:19230:19230	3437841	0	True				
ANR	3438202	Identifier	r		3437841	0					
ANR	3438203	ReturnStatement	return r ;	876:8:19233:19241	3437841	1	True				
ANR	3438204	Identifier	r		3437841	0					
ANR	3438205	ExpressionStatement	"r = add_rel_addr ( reg , mod_tlen + SIZE_OP_JUMP )"	877:1:19244:19290	3437841	4	True				
ANR	3438206	AssignmentExpression	"r = add_rel_addr ( reg , mod_tlen + SIZE_OP_JUMP )"		3437841	0		=			
ANR	3438207	Identifier	r		3437841	0					
ANR	3438208	CallExpression	"add_rel_addr ( reg , mod_tlen + SIZE_OP_JUMP )"		3437841	1					
ANR	3438209	Callee	add_rel_addr		3437841	0					
ANR	3438210	Identifier	add_rel_addr		3437841	0					
ANR	3438211	ArgumentList	reg		3437841	1					
ANR	3438212	Argument	reg		3437841	0					
ANR	3438213	Identifier	reg		3437841	0					
ANR	3438214	Argument	mod_tlen + SIZE_OP_JUMP		3437841	1					
ANR	3438215	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3437841	0		+			
ANR	3438216	Identifier	mod_tlen		3437841	0					
ANR	3438217	Identifier	SIZE_OP_JUMP		3437841	1					
ANR	3438218	ElseStatement	else		3437841	0					
ANR	3438219	CompoundStatement		67:11:1697:1697	3437841	0					
ANR	3438220	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"	880:1:19314:19376	3437841	0	True				
ANR	3438221	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		3437841	0		=			
ANR	3438222	Identifier	r		3437841	0					
ANR	3438223	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		3437841	1					
ANR	3438224	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438225	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438226	ArgumentList	reg		3437841	1					
ANR	3438227	Argument	reg		3437841	0					
ANR	3438228	Identifier	reg		3437841	0					
ANR	3438229	Argument	OP_PUSH		3437841	1					
ANR	3438230	Identifier	OP_PUSH		3437841	0					
ANR	3438231	Argument	mod_tlen + SIZE_OP_JUMP		3437841	2					
ANR	3438232	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3437841	0		+			
ANR	3438233	Identifier	mod_tlen		3437841	0					
ANR	3438234	Identifier	SIZE_OP_JUMP		3437841	1					
ANR	3438235	IfStatement	if ( r )		3437841	2					
ANR	3438236	Condition	r	882:10:19396:19396	3437841	0	True				
ANR	3438237	Identifier	r		3437841	0					
ANR	3438238	ReturnStatement	return r ;	882:13:19399:19407	3437841	1	True				
ANR	3438239	Identifier	r		3437841	0					
ANR	3438240	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	883:6:19415:19472	3437841	3	True				
ANR	3438241	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		3437841	0		=			
ANR	3438242	Identifier	r		3437841	0					
ANR	3438243	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		3437841	1					
ANR	3438244	Callee	compile_tree_empty_check		3437841	0					
ANR	3438245	Identifier	compile_tree_empty_check		3437841	0					
ANR	3438246	ArgumentList	qn -> target		3437841	1					
ANR	3438247	Argument	qn -> target		3437841	0					
ANR	3438248	PtrMemberAccess	qn -> target		3437841	0					
ANR	3438249	Identifier	qn		3437841	0					
ANR	3438250	Identifier	target		3437841	1					
ANR	3438251	Argument	reg		3437841	1					
ANR	3438252	Identifier	reg		3437841	0					
ANR	3438253	Argument	empty_info		3437841	2					
ANR	3438254	Identifier	empty_info		3437841	0					
ANR	3438255	IfStatement	if ( r )		3437841	4					
ANR	3438256	Condition	r	884:10:19484:19484	3437841	0	True				
ANR	3438257	Identifier	r		3437841	0					
ANR	3438258	ReturnStatement	return r ;	884:13:19487:19495	3437841	1	True				
ANR	3438259	Identifier	r		3437841	0					
ANR	3438260	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) ) )"	885:6:19503:19642	3437841	5	True				
ANR	3438261	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) ) )"		3437841	0		=			
ANR	3438262	Identifier	r		3437841	0					
ANR	3438263	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) ) )"		3437841	1					
ANR	3438264	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438265	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438266	ArgumentList	reg		3437841	1					
ANR	3438267	Argument	reg		3437841	0					
ANR	3438268	Identifier	reg		3437841	0					
ANR	3438269	Argument	OP_JUMP		3437841	1					
ANR	3438270	Identifier	OP_JUMP		3437841	0					
ANR	3438271	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )		3437841	2					
ANR	3438272	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )		3437841	0					
ANR	3438273	UnaryOperator	-		3437841	0					
ANR	3438274	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH )		3437841	1		+			
ANR	3438275	Identifier	mod_tlen		3437841	0					
ANR	3438276	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH )		3437841	1		+			
ANR	3438277	CastExpression	( int ) SIZE_OP_JUMP		3437841	0					
ANR	3438278	CastTarget	int		3437841	0					
ANR	3438279	Identifier	SIZE_OP_JUMP		3437841	1					
ANR	3438280	CastExpression	( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH )		3437841	1					
ANR	3438281	CastTarget	int		3437841	0					
ANR	3438282	ConditionalExpression	CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH		3437841	1					
ANR	3438283	Condition	CKN_ON		3437841	0					
ANR	3438284	Identifier	CKN_ON		3437841	0					
ANR	3438285	Identifier	SIZE_OP_STATE_CHECK_PUSH		3437841	1					
ANR	3438286	Identifier	SIZE_OP_PUSH		3437841	2					
ANR	3438287	ElseStatement	else		3437841	0					
ANR	3438288	CompoundStatement		77:9:2045:2045	3437841	0					
ANR	3438289	IfStatement	if ( qn -> lower == 0 )		3437841	0					
ANR	3438290	Condition	qn -> lower == 0	890:10:19671:19684	3437841	0	True				
ANR	3438291	EqualityExpression	qn -> lower == 0		3437841	0		==			
ANR	3438292	PtrMemberAccess	qn -> lower		3437841	0					
ANR	3438293	Identifier	qn		3437841	0					
ANR	3438294	Identifier	lower		3437841	1					
ANR	3438295	PrimaryExpression	0		3437841	1					
ANR	3438296	CompoundStatement		78:26:2073:2073	3437841	1					
ANR	3438297	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"	891:1:19690:19737	3437841	0	True				
ANR	3438298	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		3437841	0		=			
ANR	3438299	Identifier	r		3437841	0					
ANR	3438300	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		3437841	1					
ANR	3438301	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438302	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438303	ArgumentList	reg		3437841	1					
ANR	3438304	Argument	reg		3437841	0					
ANR	3438305	Identifier	reg		3437841	0					
ANR	3438306	Argument	OP_JUMP		3437841	1					
ANR	3438307	Identifier	OP_JUMP		3437841	0					
ANR	3438308	Argument	mod_tlen		3437841	2					
ANR	3438309	Identifier	mod_tlen		3437841	0					
ANR	3438310	IfStatement	if ( r )		3437841	1					
ANR	3438311	Condition	r	892:5:19744:19744	3437841	0	True				
ANR	3438312	Identifier	r		3437841	0					
ANR	3438313	ReturnStatement	return r ;	892:8:19747:19755	3437841	1	True				
ANR	3438314	Identifier	r		3437841	0					
ANR	3438315	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	894:6:19771:19828	3437841	1	True				
ANR	3438316	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		3437841	0		=			
ANR	3438317	Identifier	r		3437841	0					
ANR	3438318	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		3437841	1					
ANR	3438319	Callee	compile_tree_empty_check		3437841	0					
ANR	3438320	Identifier	compile_tree_empty_check		3437841	0					
ANR	3438321	ArgumentList	qn -> target		3437841	1					
ANR	3438322	Argument	qn -> target		3437841	0					
ANR	3438323	PtrMemberAccess	qn -> target		3437841	0					
ANR	3438324	Identifier	qn		3437841	0					
ANR	3438325	Identifier	target		3437841	1					
ANR	3438326	Argument	reg		3437841	1					
ANR	3438327	Identifier	reg		3437841	0					
ANR	3438328	Argument	empty_info		3437841	2					
ANR	3438329	Identifier	empty_info		3437841	0					
ANR	3438330	IfStatement	if ( r )		3437841	2					
ANR	3438331	Condition	r	895:10:19840:19840	3437841	0	True				
ANR	3438332	Identifier	r		3437841	0					
ANR	3438333	ReturnStatement	return r ;	895:13:19843:19851	3437841	1	True				
ANR	3438334	Identifier	r		3437841	0					
ANR	3438335	IfStatement	if ( CKN_ON )		3437841	3					
ANR	3438336	Condition	CKN_ON	896:10:19863:19868	3437841	0	True				
ANR	3438337	Identifier	CKN_ON		3437841	0					
ANR	3438338	CompoundStatement		84:18:2257:2257	3437841	1					
ANR	3438339	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH_OR_JUMP )"	897:1:19874:19922	3437841	0	True				
ANR	3438340	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH_OR_JUMP )"		3437841	0		=			
ANR	3438341	Identifier	r		3437841	0					
ANR	3438342	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH_OR_JUMP )"		3437841	1					
ANR	3438343	Callee	add_opcode		3437841	0					
ANR	3438344	Identifier	add_opcode		3437841	0					
ANR	3438345	ArgumentList	reg		3437841	1					
ANR	3438346	Argument	reg		3437841	0					
ANR	3438347	Identifier	reg		3437841	0					
ANR	3438348	Argument	OP_STATE_CHECK_PUSH_OR_JUMP		3437841	1					
ANR	3438349	Identifier	OP_STATE_CHECK_PUSH_OR_JUMP		3437841	0					
ANR	3438350	IfStatement	if ( r )		3437841	1					
ANR	3438351	Condition	r	898:5:19929:19929	3437841	0	True				
ANR	3438352	Identifier	r		3437841	0					
ANR	3438353	ReturnStatement	return r ;	898:8:19932:19940	3437841	1	True				
ANR	3438354	Identifier	r		3437841	0					
ANR	3438355	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	899:1:19943:19976	3437841	2	True				
ANR	3438356	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		3437841	0		=			
ANR	3438357	Identifier	r		3437841	0					
ANR	3438358	CallExpression	"add_state_check_num ( reg , ckn )"		3437841	1					
ANR	3438359	Callee	add_state_check_num		3437841	0					
ANR	3438360	Identifier	add_state_check_num		3437841	0					
ANR	3438361	ArgumentList	reg		3437841	1					
ANR	3438362	Argument	reg		3437841	0					
ANR	3438363	Identifier	reg		3437841	0					
ANR	3438364	Argument	ckn		3437841	1					
ANR	3438365	Identifier	ckn		3437841	0					
ANR	3438366	IfStatement	if ( r )		3437841	3					
ANR	3438367	Condition	r	900:5:19983:19983	3437841	0	True				
ANR	3438368	Identifier	r		3437841	0					
ANR	3438369	ReturnStatement	return r ;	900:8:19986:19994	3437841	1	True				
ANR	3438370	Identifier	r		3437841	0					
ANR	3438371	ExpressionStatement	"r = add_rel_addr ( reg , - ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP ) )"	901:1:19997:20075	3437841	4	True				
ANR	3438372	AssignmentExpression	"r = add_rel_addr ( reg , - ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP ) )"		3437841	0		=			
ANR	3438373	Identifier	r		3437841	0					
ANR	3438374	CallExpression	"add_rel_addr ( reg , - ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP ) )"		3437841	1					
ANR	3438375	Callee	add_rel_addr		3437841	0					
ANR	3438376	Identifier	add_rel_addr		3437841	0					
ANR	3438377	ArgumentList	reg		3437841	1					
ANR	3438378	Argument	reg		3437841	0					
ANR	3438379	Identifier	reg		3437841	0					
ANR	3438380	Argument	- ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP )		3437841	1					
ANR	3438381	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP )		3437841	0					
ANR	3438382	UnaryOperator	-		3437841	0					
ANR	3438383	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		3437841	1		+			
ANR	3438384	Identifier	mod_tlen		3437841	0					
ANR	3438385	CastExpression	( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		3437841	1					
ANR	3438386	CastTarget	int		3437841	0					
ANR	3438387	Identifier	SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		3437841	1					
ANR	3438388	ElseStatement	else		3437841	0					
ANR	3438389	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"	905:1:20097:20168	3437841	0	True				
ANR	3438390	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		3437841	0		=			
ANR	3438391	Identifier	r		3437841	0					
ANR	3438392	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		3437841	1					
ANR	3438393	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438394	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438395	ArgumentList	reg		3437841	1					
ANR	3438396	Argument	reg		3437841	0					
ANR	3438397	Identifier	reg		3437841	0					
ANR	3438398	Argument	OP_PUSH		3437841	1					
ANR	3438399	Identifier	OP_PUSH		3437841	0					
ANR	3438400	Argument	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		3437841	2					
ANR	3438401	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		3437841	0					
ANR	3438402	UnaryOperator	-		3437841	0					
ANR	3438403	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_PUSH		3437841	1		+			
ANR	3438404	Identifier	mod_tlen		3437841	0					
ANR	3438405	CastExpression	( int ) SIZE_OP_PUSH		3437841	1					
ANR	3438406	CastTarget	int		3437841	0					
ANR	3438407	Identifier	SIZE_OP_PUSH		3437841	1					
ANR	3438408	ElseStatement	else		3437841	0					
ANR	3438409	IfStatement	if ( qn -> upper == 0 )		3437841	0					
ANR	3438410	Condition	qn -> upper == 0	908:11:20191:20204	3437841	0	True				
ANR	3438411	EqualityExpression	qn -> upper == 0		3437841	0		==			
ANR	3438412	PtrMemberAccess	qn -> upper		3437841	0					
ANR	3438413	Identifier	qn		3437841	0					
ANR	3438414	Identifier	upper		3437841	1					
ANR	3438415	PrimaryExpression	0		3437841	1					
ANR	3438416	CompoundStatement		96:27:2593:2593	3437841	1					
ANR	3438417	IfStatement	if ( qn -> is_refered != 0 )		3437841	0					
ANR	3438418	Condition	qn -> is_refered != 0	909:8:20217:20235	3437841	0	True				
ANR	3438419	EqualityExpression	qn -> is_refered != 0		3437841	0		!=			
ANR	3438420	PtrMemberAccess	qn -> is_refered		3437841	0					
ANR	3438421	Identifier	qn		3437841	0					
ANR	3438422	Identifier	is_refered		3437841	1					
ANR	3438423	PrimaryExpression	0		3437841	1					
ANR	3438424	CompoundStatement		97:29:2624:2624	3437841	1					
ANR	3438425	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	910:6:20266:20309	3437841	0	True				
ANR	3438426	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3437841	0		=			
ANR	3438427	Identifier	r		3437841	0					
ANR	3438428	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3437841	1					
ANR	3438429	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438430	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438431	ArgumentList	reg		3437841	1					
ANR	3438432	Argument	reg		3437841	0					
ANR	3438433	Identifier	reg		3437841	0					
ANR	3438434	Argument	OP_JUMP		3437841	1					
ANR	3438435	Identifier	OP_JUMP		3437841	0					
ANR	3438436	Argument	tlen		3437841	2					
ANR	3438437	Identifier	tlen		3437841	0					
ANR	3438438	IfStatement	if ( r )		3437841	1					
ANR	3438439	Condition	r	911:10:20321:20321	3437841	0	True				
ANR	3438440	Identifier	r		3437841	0					
ANR	3438441	ReturnStatement	return r ;	911:13:20324:20332	3437841	1	True				
ANR	3438442	Identifier	r		3437841	0					
ANR	3438443	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	912:6:20340:20373	3437841	2	True				
ANR	3438444	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		3437841	0		=			
ANR	3438445	Identifier	r		3437841	0					
ANR	3438446	CallExpression	"compile_tree ( qn -> target , reg )"		3437841	1					
ANR	3438447	Callee	compile_tree		3437841	0					
ANR	3438448	Identifier	compile_tree		3437841	0					
ANR	3438449	ArgumentList	qn -> target		3437841	1					
ANR	3438450	Argument	qn -> target		3437841	0					
ANR	3438451	PtrMemberAccess	qn -> target		3437841	0					
ANR	3438452	Identifier	qn		3437841	0					
ANR	3438453	Identifier	target		3437841	1					
ANR	3438454	Argument	reg		3437841	1					
ANR	3438455	Identifier	reg		3437841	0					
ANR	3438456	ElseStatement	else		3437841	0					
ANR	3438457	ExpressionStatement	r = 0	915:6:20396:20401	3437841	0	True				
ANR	3438458	AssignmentExpression	r = 0		3437841	0		=			
ANR	3438459	Identifier	r		3437841	0					
ANR	3438460	PrimaryExpression	0		3437841	1					
ANR	3438461	ElseStatement	else		3437841	0					
ANR	3438462	IfStatement	if ( qn -> upper == 1 && qn -> greedy )		3437841	0					
ANR	3438463	Condition	qn -> upper == 1 && qn -> greedy	917:11:20418:20445	3437841	0	True				
ANR	3438464	AndExpression	qn -> upper == 1 && qn -> greedy		3437841	0		&&			
ANR	3438465	EqualityExpression	qn -> upper == 1		3437841	0		==			
ANR	3438466	PtrMemberAccess	qn -> upper		3437841	0					
ANR	3438467	Identifier	qn		3437841	0					
ANR	3438468	Identifier	upper		3437841	1					
ANR	3438469	PrimaryExpression	1		3437841	1					
ANR	3438470	PtrMemberAccess	qn -> greedy		3437841	1					
ANR	3438471	Identifier	qn		3437841	0					
ANR	3438472	Identifier	greedy		3437841	1					
ANR	3438473	CompoundStatement		105:41:2834:2834	3437841	1					
ANR	3438474	IfStatement	if ( qn -> lower == 0 )		3437841	0					
ANR	3438475	Condition	qn -> lower == 0	918:8:20458:20471	3437841	0	True				
ANR	3438476	EqualityExpression	qn -> lower == 0		3437841	0		==			
ANR	3438477	PtrMemberAccess	qn -> lower		3437841	0					
ANR	3438478	Identifier	qn		3437841	0					
ANR	3438479	Identifier	lower		3437841	1					
ANR	3438480	PrimaryExpression	0		3437841	1					
ANR	3438481	CompoundStatement		106:24:2860:2860	3437841	1					
ANR	3438482	IfStatement	if ( CKN_ON )		3437841	0					
ANR	3438483	Condition	CKN_ON	919:10:20486:20491	3437841	0	True				
ANR	3438484	Identifier	CKN_ON		3437841	0					
ANR	3438485	CompoundStatement		107:18:2880:2880	3437841	1					
ANR	3438486	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"	920:1:20497:20537	3437841	0	True				
ANR	3438487	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"		3437841	0		=			
ANR	3438488	Identifier	r		3437841	0					
ANR	3438489	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH )"		3437841	1					
ANR	3438490	Callee	add_opcode		3437841	0					
ANR	3438491	Identifier	add_opcode		3437841	0					
ANR	3438492	ArgumentList	reg		3437841	1					
ANR	3438493	Argument	reg		3437841	0					
ANR	3438494	Identifier	reg		3437841	0					
ANR	3438495	Argument	OP_STATE_CHECK_PUSH		3437841	1					
ANR	3438496	Identifier	OP_STATE_CHECK_PUSH		3437841	0					
ANR	3438497	IfStatement	if ( r )		3437841	1					
ANR	3438498	Condition	r	921:5:20544:20544	3437841	0	True				
ANR	3438499	Identifier	r		3437841	0					
ANR	3438500	ReturnStatement	return r ;	921:8:20547:20555	3437841	1	True				
ANR	3438501	Identifier	r		3437841	0					
ANR	3438502	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	922:1:20558:20591	3437841	2	True				
ANR	3438503	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		3437841	0		=			
ANR	3438504	Identifier	r		3437841	0					
ANR	3438505	CallExpression	"add_state_check_num ( reg , ckn )"		3437841	1					
ANR	3438506	Callee	add_state_check_num		3437841	0					
ANR	3438507	Identifier	add_state_check_num		3437841	0					
ANR	3438508	ArgumentList	reg		3437841	1					
ANR	3438509	Argument	reg		3437841	0					
ANR	3438510	Identifier	reg		3437841	0					
ANR	3438511	Argument	ckn		3437841	1					
ANR	3438512	Identifier	ckn		3437841	0					
ANR	3438513	IfStatement	if ( r )		3437841	3					
ANR	3438514	Condition	r	923:5:20598:20598	3437841	0	True				
ANR	3438515	Identifier	r		3437841	0					
ANR	3438516	ReturnStatement	return r ;	923:8:20601:20609	3437841	1	True				
ANR	3438517	Identifier	r		3437841	0					
ANR	3438518	ExpressionStatement	"r = add_rel_addr ( reg , tlen )"	924:1:20612:20639	3437841	4	True				
ANR	3438519	AssignmentExpression	"r = add_rel_addr ( reg , tlen )"		3437841	0		=			
ANR	3438520	Identifier	r		3437841	0					
ANR	3438521	CallExpression	"add_rel_addr ( reg , tlen )"		3437841	1					
ANR	3438522	Callee	add_rel_addr		3437841	0					
ANR	3438523	Identifier	add_rel_addr		3437841	0					
ANR	3438524	ArgumentList	reg		3437841	1					
ANR	3438525	Argument	reg		3437841	0					
ANR	3438526	Identifier	reg		3437841	0					
ANR	3438527	Argument	tlen		3437841	1					
ANR	3438528	Identifier	tlen		3437841	0					
ANR	3438529	ElseStatement	else		3437841	0					
ANR	3438530	CompoundStatement		114:11:3046:3046	3437841	0					
ANR	3438531	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , tlen )"	927:1:20663:20706	3437841	0	True				
ANR	3438532	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , tlen )"		3437841	0		=			
ANR	3438533	Identifier	r		3437841	0					
ANR	3438534	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , tlen )"		3437841	1					
ANR	3438535	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438536	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438537	ArgumentList	reg		3437841	1					
ANR	3438538	Argument	reg		3437841	0					
ANR	3438539	Identifier	reg		3437841	0					
ANR	3438540	Argument	OP_PUSH		3437841	1					
ANR	3438541	Identifier	OP_PUSH		3437841	0					
ANR	3438542	Argument	tlen		3437841	2					
ANR	3438543	Identifier	tlen		3437841	0					
ANR	3438544	IfStatement	if ( r )		3437841	1					
ANR	3438545	Condition	r	929:10:20726:20726	3437841	0	True				
ANR	3438546	Identifier	r		3437841	0					
ANR	3438547	ReturnStatement	return r ;	929:13:20729:20737	3437841	1	True				
ANR	3438548	Identifier	r		3437841	0					
ANR	3438549	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	932:4:20750:20783	3437841	1	True				
ANR	3438550	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		3437841	0		=			
ANR	3438551	Identifier	r		3437841	0					
ANR	3438552	CallExpression	"compile_tree ( qn -> target , reg )"		3437841	1					
ANR	3438553	Callee	compile_tree		3437841	0					
ANR	3438554	Identifier	compile_tree		3437841	0					
ANR	3438555	ArgumentList	qn -> target		3437841	1					
ANR	3438556	Argument	qn -> target		3437841	0					
ANR	3438557	PtrMemberAccess	qn -> target		3437841	0					
ANR	3438558	Identifier	qn		3437841	0					
ANR	3438559	Identifier	target		3437841	1					
ANR	3438560	Argument	reg		3437841	1					
ANR	3438561	Identifier	reg		3437841	0					
ANR	3438562	ElseStatement	else		3437841	0					
ANR	3438563	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		3437841	0					
ANR	3438564	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	934:11:20800:20846	3437841	0	True				
ANR	3438565	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		3437841	0		&&			
ANR	3438566	UnaryOperationExpression	! qn -> greedy		3437841	0					
ANR	3438567	UnaryOperator	!		3437841	0					
ANR	3438568	PtrMemberAccess	qn -> greedy		3437841	1					
ANR	3438569	Identifier	qn		3437841	0					
ANR	3438570	Identifier	greedy		3437841	1					
ANR	3438571	AndExpression	qn -> upper == 1 && qn -> lower == 0		3437841	1		&&			
ANR	3438572	EqualityExpression	qn -> upper == 1		3437841	0		==			
ANR	3438573	PtrMemberAccess	qn -> upper		3437841	0					
ANR	3438574	Identifier	qn		3437841	0					
ANR	3438575	Identifier	upper		3437841	1					
ANR	3438576	PrimaryExpression	1		3437841	1					
ANR	3438577	EqualityExpression	qn -> lower == 0		3437841	1		==			
ANR	3438578	PtrMemberAccess	qn -> lower		3437841	0					
ANR	3438579	Identifier	qn		3437841	0					
ANR	3438580	Identifier	lower		3437841	1					
ANR	3438581	PrimaryExpression	0		3437841	1					
ANR	3438582	CompoundStatement		122:60:3235:3235	3437841	1					
ANR	3438583	IfStatement	if ( CKN_ON )		3437841	0					
ANR	3438584	Condition	CKN_ON	935:8:20870:20875	3437841	0	True				
ANR	3438585	Identifier	CKN_ON		3437841	0					
ANR	3438586	CompoundStatement		123:16:3264:3264	3437841	1					
ANR	3438587	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"	936:6:20886:20926	3437841	0	True				
ANR	3438588	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"		3437841	0		=			
ANR	3438589	Identifier	r		3437841	0					
ANR	3438590	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH )"		3437841	1					
ANR	3438591	Callee	add_opcode		3437841	0					
ANR	3438592	Identifier	add_opcode		3437841	0					
ANR	3438593	ArgumentList	reg		3437841	1					
ANR	3438594	Argument	reg		3437841	0					
ANR	3438595	Identifier	reg		3437841	0					
ANR	3438596	Argument	OP_STATE_CHECK_PUSH		3437841	1					
ANR	3438597	Identifier	OP_STATE_CHECK_PUSH		3437841	0					
ANR	3438598	IfStatement	if ( r )		3437841	1					
ANR	3438599	Condition	r	937:10:20938:20938	3437841	0	True				
ANR	3438600	Identifier	r		3437841	0					
ANR	3438601	ReturnStatement	return r ;	937:13:20941:20949	3437841	1	True				
ANR	3438602	Identifier	r		3437841	0					
ANR	3438603	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	938:6:20957:20990	3437841	2	True				
ANR	3438604	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		3437841	0		=			
ANR	3438605	Identifier	r		3437841	0					
ANR	3438606	CallExpression	"add_state_check_num ( reg , ckn )"		3437841	1					
ANR	3438607	Callee	add_state_check_num		3437841	0					
ANR	3438608	Identifier	add_state_check_num		3437841	0					
ANR	3438609	ArgumentList	reg		3437841	1					
ANR	3438610	Argument	reg		3437841	0					
ANR	3438611	Identifier	reg		3437841	0					
ANR	3438612	Argument	ckn		3437841	1					
ANR	3438613	Identifier	ckn		3437841	0					
ANR	3438614	IfStatement	if ( r )		3437841	3					
ANR	3438615	Condition	r	939:10:21002:21002	3437841	0	True				
ANR	3438616	Identifier	r		3437841	0					
ANR	3438617	ReturnStatement	return r ;	939:13:21005:21013	3437841	1	True				
ANR	3438618	Identifier	r		3437841	0					
ANR	3438619	ExpressionStatement	"r = add_rel_addr ( reg , SIZE_OP_JUMP )"	940:6:21021:21056	3437841	4	True				
ANR	3438620	AssignmentExpression	"r = add_rel_addr ( reg , SIZE_OP_JUMP )"		3437841	0		=			
ANR	3438621	Identifier	r		3437841	0					
ANR	3438622	CallExpression	"add_rel_addr ( reg , SIZE_OP_JUMP )"		3437841	1					
ANR	3438623	Callee	add_rel_addr		3437841	0					
ANR	3438624	Identifier	add_rel_addr		3437841	0					
ANR	3438625	ArgumentList	reg		3437841	1					
ANR	3438626	Argument	reg		3437841	0					
ANR	3438627	Identifier	reg		3437841	0					
ANR	3438628	Argument	SIZE_OP_JUMP		3437841	1					
ANR	3438629	Identifier	SIZE_OP_JUMP		3437841	0					
ANR	3438630	ElseStatement	else		3437841	0					
ANR	3438631	CompoundStatement		130:9:3459:3459	3437841	0					
ANR	3438632	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"	943:6:21081:21132	3437841	0	True				
ANR	3438633	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		3437841	0		=			
ANR	3438634	Identifier	r		3437841	0					
ANR	3438635	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		3437841	1					
ANR	3438636	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438637	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438638	ArgumentList	reg		3437841	1					
ANR	3438639	Argument	reg		3437841	0					
ANR	3438640	Identifier	reg		3437841	0					
ANR	3438641	Argument	OP_PUSH		3437841	1					
ANR	3438642	Identifier	OP_PUSH		3437841	0					
ANR	3438643	Argument	SIZE_OP_JUMP		3437841	2					
ANR	3438644	Identifier	SIZE_OP_JUMP		3437841	0					
ANR	3438645	IfStatement	if ( r )		3437841	1					
ANR	3438646	Condition	r	946:8:21149:21149	3437841	0	True				
ANR	3438647	Identifier	r		3437841	0					
ANR	3438648	ReturnStatement	return r ;	946:11:21152:21160	3437841	1	True				
ANR	3438649	Identifier	r		3437841	0					
ANR	3438650	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	947:4:21166:21209	3437841	2	True				
ANR	3438651	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3437841	0		=			
ANR	3438652	Identifier	r		3437841	0					
ANR	3438653	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3437841	1					
ANR	3438654	Callee	add_opcode_rel_addr		3437841	0					
ANR	3438655	Identifier	add_opcode_rel_addr		3437841	0					
ANR	3438656	ArgumentList	reg		3437841	1					
ANR	3438657	Argument	reg		3437841	0					
ANR	3438658	Identifier	reg		3437841	0					
ANR	3438659	Argument	OP_JUMP		3437841	1					
ANR	3438660	Identifier	OP_JUMP		3437841	0					
ANR	3438661	Argument	tlen		3437841	2					
ANR	3438662	Identifier	tlen		3437841	0					
ANR	3438663	IfStatement	if ( r )		3437841	3					
ANR	3438664	Condition	r	948:8:21219:21219	3437841	0	True				
ANR	3438665	Identifier	r		3437841	0					
ANR	3438666	ReturnStatement	return r ;	948:11:21222:21230	3437841	1	True				
ANR	3438667	Identifier	r		3437841	0					
ANR	3438668	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	949:4:21236:21269	3437841	4	True				
ANR	3438669	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		3437841	0		=			
ANR	3438670	Identifier	r		3437841	0					
ANR	3438671	CallExpression	"compile_tree ( qn -> target , reg )"		3437841	1					
ANR	3438672	Callee	compile_tree		3437841	0					
ANR	3438673	Identifier	compile_tree		3437841	0					
ANR	3438674	ArgumentList	qn -> target		3437841	1					
ANR	3438675	Argument	qn -> target		3437841	0					
ANR	3438676	PtrMemberAccess	qn -> target		3437841	0					
ANR	3438677	Identifier	qn		3437841	0					
ANR	3438678	Identifier	target		3437841	1					
ANR	3438679	Argument	reg		3437841	1					
ANR	3438680	Identifier	reg		3437841	0					
ANR	3438681	ElseStatement	else		3437841	0					
ANR	3438682	CompoundStatement		139:7:3668:3668	3437841	0					
ANR	3438683	ExpressionStatement	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"	952:4:21288:21348	3437841	0	True				
ANR	3438684	AssignmentExpression	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		3437841	0		=			
ANR	3438685	Identifier	r		3437841	0					
ANR	3438686	CallExpression	"compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		3437841	1					
ANR	3438687	Callee	compile_range_repeat_node		3437841	0					
ANR	3438688	Identifier	compile_range_repeat_node		3437841	0					
ANR	3438689	ArgumentList	qn		3437841	1					
ANR	3438690	Argument	qn		3437841	0					
ANR	3438691	Identifier	qn		3437841	0					
ANR	3438692	Argument	mod_tlen		3437841	1					
ANR	3438693	Identifier	mod_tlen		3437841	0					
ANR	3438694	Argument	empty_info		3437841	2					
ANR	3438695	Identifier	empty_info		3437841	0					
ANR	3438696	Argument	reg		3437841	3					
ANR	3438697	Identifier	reg		3437841	0					
ANR	3438698	IfStatement	if ( CKN_ON )		3437841	1					
ANR	3438699	Condition	CKN_ON	953:8:21358:21363	3437841	0	True				
ANR	3438700	Identifier	CKN_ON		3437841	0					
ANR	3438701	CompoundStatement		141:16:3752:3752	3437841	1					
ANR	3438702	IfStatement	if ( r )		3437841	0					
ANR	3438703	Condition	r	954:10:21378:21378	3437841	0	True				
ANR	3438704	Identifier	r		3437841	0					
ANR	3438705	ReturnStatement	return r ;	954:13:21381:21389	3437841	1	True				
ANR	3438706	Identifier	r		3437841	0					
ANR	3438707	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK )"	955:6:21397:21432	3437841	1	True				
ANR	3438708	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK )"		3437841	0		=			
ANR	3438709	Identifier	r		3437841	0					
ANR	3438710	CallExpression	"add_opcode ( reg , OP_STATE_CHECK )"		3437841	1					
ANR	3438711	Callee	add_opcode		3437841	0					
ANR	3438712	Identifier	add_opcode		3437841	0					
ANR	3438713	ArgumentList	reg		3437841	1					
ANR	3438714	Argument	reg		3437841	0					
ANR	3438715	Identifier	reg		3437841	0					
ANR	3438716	Argument	OP_STATE_CHECK		3437841	1					
ANR	3438717	Identifier	OP_STATE_CHECK		3437841	0					
ANR	3438718	IfStatement	if ( r )		3437841	2					
ANR	3438719	Condition	r	956:10:21444:21444	3437841	0	True				
ANR	3438720	Identifier	r		3437841	0					
ANR	3438721	ReturnStatement	return r ;	956:13:21447:21455	3437841	1	True				
ANR	3438722	Identifier	r		3437841	0					
ANR	3438723	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	957:6:21463:21496	3437841	3	True				
ANR	3438724	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		3437841	0		=			
ANR	3438725	Identifier	r		3437841	0					
ANR	3438726	CallExpression	"add_state_check_num ( reg , ckn )"		3437841	1					
ANR	3438727	Callee	add_state_check_num		3437841	0					
ANR	3438728	Identifier	add_state_check_num		3437841	0					
ANR	3438729	ArgumentList	reg		3437841	1					
ANR	3438730	Argument	reg		3437841	0					
ANR	3438731	Identifier	reg		3437841	0					
ANR	3438732	Argument	ckn		3437841	1					
ANR	3438733	Identifier	ckn		3437841	0					
ANR	3438734	ReturnStatement	return r ;	960:2:21510:21518	3437841	10	True				
ANR	3438735	Identifier	r		3437841	0					
ANR	3438736	ReturnType	static int		3437841	1					
ANR	3438737	Identifier	compile_quantifier_node		3437841	2					
ANR	3438738	ParameterList	"QtfrNode * qn , regex_t * reg"		3437841	3					
ANR	3438739	Parameter	QtfrNode * qn	812:24:17585:17596	3437841	0	True				
ANR	3438740	ParameterType	QtfrNode *		3437841	0					
ANR	3438741	Identifier	qn		3437841	1					
ANR	3438742	Parameter	regex_t * reg	812:38:17599:17610	3437841	1	True				
ANR	3438743	ParameterType	regex_t *		3437841	0					
ANR	3438744	Identifier	reg		3437841	1					
ANR	3438745	CFGEntryNode	ENTRY		3437841		True				
ANR	3438746	CFGExitNode	EXIT		3437841		True				
ANR	3438747	Symbol	OP_ANYCHAR_STAR_PEEK_NEXT		3437841						
ANR	3438748	Symbol	compile_range_repeat_node		3437841						
ANR	3438749	Symbol	ckn		3437841						
ANR	3438750	Symbol	OP_STATE_CHECK_ANYCHAR_ML_STAR		3437841						
ANR	3438751	Symbol	OP_ANYCHAR_ML_STAR_PEEK_NEXT		3437841						
ANR	3438752	Symbol	reg		3437841						
ANR	3438753	Symbol	reg -> options		3437841						
ANR	3438754	Symbol	tlen		3437841						
ANR	3438755	Symbol	OP_ANYCHAR_STAR		3437841						
ANR	3438756	Symbol	IS_REPEAT_INFINITE		3437841						
ANR	3438757	Symbol	add_opcode		3437841						
ANR	3438758	Symbol	SIZE_OP_NULL_CHECK_START		3437841						
ANR	3438759	Symbol	qn		3437841						
ANR	3438760	Symbol	SIZE_OP_JUMP		3437841						
ANR	3438761	Symbol	OP_JUMP		3437841						
ANR	3438762	Symbol	OP_ANYCHAR_ML_STAR		3437841						
ANR	3438763	Symbol	NSTR		3437841						
ANR	3438764	Symbol	* NSTR		3437841						
ANR	3438765	Symbol	qn -> target		3437841						
ANR	3438766	Symbol	qn -> upper		3437841						
ANR	3438767	Symbol	qn -> is_refered		3437841						
ANR	3438768	Symbol	NSTR ( qn -> next_head_exact ) -> s		3437841						
ANR	3438769	Symbol	empty_info		3437841						
ANR	3438770	Symbol	SIZE_OP_STATE_CHECK_PUSH		3437841						
ANR	3438771	Symbol	add_rel_addr		3437841						
ANR	3438772	Symbol	* qn		3437841						
ANR	3438773	Symbol	qn -> target_empty_info		3437841						
ANR	3438774	Symbol	add_bytes		3437841						
ANR	3438775	Symbol	qn -> greedy		3437841						
ANR	3438776	Symbol	CKN_ON		3437841						
ANR	3438777	Symbol	IS_NOT_NULL		3437841						
ANR	3438778	Symbol	infinite		3437841						
ANR	3438779	Symbol	compile_tree_n_times		3437841						
ANR	3438780	Symbol	OP_PUSH		3437841						
ANR	3438781	Symbol	compile_tree_empty_check		3437841						
ANR	3438782	Symbol	qn -> next_head_exact		3437841						
ANR	3438783	Symbol	SIZE_OP_NULL_CHECK_END		3437841						
ANR	3438784	Symbol	OP_STATE_CHECK_ANYCHAR_STAR		3437841						
ANR	3438785	Symbol	qn -> lower		3437841						
ANR	3438786	Symbol	reg -> num_comb_exp_check		3437841						
ANR	3438787	Symbol	OP_STATE_CHECK_PUSH_OR_JUMP		3437841						
ANR	3438788	Symbol	add_opcode_rel_addr		3437841						
ANR	3438789	Symbol	compile_length_tree		3437841						
ANR	3438790	Symbol	SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		3437841						
ANR	3438791	Symbol	qn -> comb_exp_check_num		3437841						
ANR	3438792	Symbol	SIZE_OP_PUSH		3437841						
ANR	3438793	Symbol	is_anychar_star_quantifier		3437841						
ANR	3438794	Symbol	OP_STATE_CHECK_PUSH		3437841						
ANR	3438795	Symbol	OP_STATE_CHECK		3437841						
ANR	3438796	Symbol	r		3437841						
ANR	3438797	Symbol	compile_tree		3437841						
ANR	3438798	Symbol	mod_tlen		3437841						
ANR	3438799	Symbol	IS_MULTILINE		3437841						
ANR	3438800	Symbol	add_state_check_num		3437841						
ANR	3438801	Symbol	* reg		3437841						
ANR	3438802	Function	compile_length_quantifier_node	965:0:21568:23467							
ANR	3438803	FunctionDef	"compile_length_quantifier_node (QtfrNode * qn , regex_t * reg)"		3438802	0					
ANR	3438804	CompoundStatement		967:0:21638:23467	3438802	0					
ANR	3438805	IdentifierDeclStatement	"int len , mod_tlen ;"	968:2:21642:21659	3438802	0	True				
ANR	3438806	IdentifierDecl	len		3438802	0					
ANR	3438807	IdentifierDeclType	int		3438802	0					
ANR	3438808	Identifier	len		3438802	1					
ANR	3438809	IdentifierDecl	mod_tlen		3438802	1					
ANR	3438810	IdentifierDeclType	int		3438802	0					
ANR	3438811	Identifier	mod_tlen		3438802	1					
ANR	3438812	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	969:2:21663:21707	3438802	1	True				
ANR	3438813	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3438802	0					
ANR	3438814	IdentifierDeclType	int		3438802	0					
ANR	3438815	Identifier	infinite		3438802	1					
ANR	3438816	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3438802	2		=			
ANR	3438817	Identifier	infinite		3438802	0					
ANR	3438818	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3438802	1					
ANR	3438819	Callee	IS_REPEAT_INFINITE		3438802	0					
ANR	3438820	Identifier	IS_REPEAT_INFINITE		3438802	0					
ANR	3438821	ArgumentList	qn -> upper		3438802	1					
ANR	3438822	Argument	qn -> upper		3438802	0					
ANR	3438823	PtrMemberAccess	qn -> upper		3438802	0					
ANR	3438824	Identifier	qn		3438802	0					
ANR	3438825	Identifier	upper		3438802	1					
ANR	3438826	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	970:2:21711:21749	3438802	2	True				
ANR	3438827	IdentifierDecl	empty_info = qn -> target_empty_info		3438802	0					
ANR	3438828	IdentifierDeclType	int		3438802	0					
ANR	3438829	Identifier	empty_info		3438802	1					
ANR	3438830	AssignmentExpression	empty_info = qn -> target_empty_info		3438802	2		=			
ANR	3438831	Identifier	empty_info		3438802	0					
ANR	3438832	PtrMemberAccess	qn -> target_empty_info		3438802	1					
ANR	3438833	Identifier	qn		3438802	0					
ANR	3438834	Identifier	target_empty_info		3438802	1					
ANR	3438835	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	971:2:21753:21800	3438802	3	True				
ANR	3438836	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		3438802	0					
ANR	3438837	IdentifierDeclType	int		3438802	0					
ANR	3438838	Identifier	tlen		3438802	1					
ANR	3438839	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		3438802	2		=			
ANR	3438840	Identifier	tlen		3438802	0					
ANR	3438841	CallExpression	"compile_length_tree ( qn -> target , reg )"		3438802	1					
ANR	3438842	Callee	compile_length_tree		3438802	0					
ANR	3438843	Identifier	compile_length_tree		3438802	0					
ANR	3438844	ArgumentList	qn -> target		3438802	1					
ANR	3438845	Argument	qn -> target		3438802	0					
ANR	3438846	PtrMemberAccess	qn -> target		3438802	0					
ANR	3438847	Identifier	qn		3438802	0					
ANR	3438848	Identifier	target		3438802	1					
ANR	3438849	Argument	reg		3438802	1					
ANR	3438850	Identifier	reg		3438802	0					
ANR	3438851	IfStatement	if ( tlen < 0 )		3438802	4					
ANR	3438852	Condition	tlen < 0	973:6:21809:21816	3438802	0	True				
ANR	3438853	RelationalExpression	tlen < 0		3438802	0		<			
ANR	3438854	Identifier	tlen		3438802	0					
ANR	3438855	PrimaryExpression	0		3438802	1					
ANR	3438856	ReturnStatement	return tlen ;	973:16:21819:21830	3438802	1	True				
ANR	3438857	Identifier	tlen		3438802	0					
ANR	3438858	IfStatement	if ( NTYPE ( qn -> target ) == NT_CANY )		3438802	5					
ANR	3438859	Condition	NTYPE ( qn -> target ) == NT_CANY	976:6:21862:21889	3438802	0	True				
ANR	3438860	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		3438802	0		==			
ANR	3438861	CallExpression	NTYPE ( qn -> target )		3438802	0					
ANR	3438862	Callee	NTYPE		3438802	0					
ANR	3438863	Identifier	NTYPE		3438802	0					
ANR	3438864	ArgumentList	qn -> target		3438802	1					
ANR	3438865	Argument	qn -> target		3438802	0					
ANR	3438866	PtrMemberAccess	qn -> target		3438802	0					
ANR	3438867	Identifier	qn		3438802	0					
ANR	3438868	Identifier	target		3438802	1					
ANR	3438869	Identifier	NT_CANY		3438802	1					
ANR	3438870	CompoundStatement		10:36:253:253	3438802	1					
ANR	3438871	IfStatement	if ( qn -> greedy && infinite )		3438802	0					
ANR	3438872	Condition	qn -> greedy && infinite	977:8:21902:21923	3438802	0	True				
ANR	3438873	AndExpression	qn -> greedy && infinite		3438802	0		&&			
ANR	3438874	PtrMemberAccess	qn -> greedy		3438802	0					
ANR	3438875	Identifier	qn		3438802	0					
ANR	3438876	Identifier	greedy		3438802	1					
ANR	3438877	Identifier	infinite		3438802	1					
ANR	3438878	CompoundStatement		11:32:287:287	3438802	1					
ANR	3438879	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		3438802	0					
ANR	3438880	Condition	IS_NOT_NULL ( qn -> next_head_exact )	978:10:21938:21969	3438802	0	True				
ANR	3438881	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		3438802	0					
ANR	3438882	Callee	IS_NOT_NULL		3438802	0					
ANR	3438883	Identifier	IS_NOT_NULL		3438802	0					
ANR	3438884	ArgumentList	qn -> next_head_exact		3438802	1					
ANR	3438885	Argument	qn -> next_head_exact		3438802	0					
ANR	3438886	PtrMemberAccess	qn -> next_head_exact		3438802	0					
ANR	3438887	Identifier	qn		3438802	0					
ANR	3438888	Identifier	next_head_exact		3438802	1					
ANR	3438889	ReturnStatement	return SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower ;	979:8:21980:22036	3438802	1	True				
ANR	3438890	AdditiveExpression	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower		3438802	0		+			
ANR	3438891	Identifier	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		3438802	0					
ANR	3438892	MultiplicativeExpression	tlen * qn -> lower		3438802	1		*			
ANR	3438893	Identifier	tlen		3438802	0					
ANR	3438894	PtrMemberAccess	qn -> lower		3438802	1					
ANR	3438895	Identifier	qn		3438802	0					
ANR	3438896	Identifier	lower		3438802	1					
ANR	3438897	ElseStatement	else		3438802	0					
ANR	3438898	ReturnStatement	return SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower ;	981:8:22057:22103	3438802	0	True				
ANR	3438899	AdditiveExpression	SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower		3438802	0		+			
ANR	3438900	Identifier	SIZE_OP_ANYCHAR_STAR		3438802	0					
ANR	3438901	MultiplicativeExpression	tlen * qn -> lower		3438802	1		*			
ANR	3438902	Identifier	tlen		3438802	0					
ANR	3438903	PtrMemberAccess	qn -> lower		3438802	1					
ANR	3438904	Identifier	qn		3438802	0					
ANR	3438905	Identifier	lower		3438802	1					
ANR	3438906	IfStatement	if ( empty_info != 0 )		3438802	6					
ANR	3438907	Condition	empty_info != 0	985:6:22122:22136	3438802	0	True				
ANR	3438908	EqualityExpression	empty_info != 0		3438802	0		!=			
ANR	3438909	Identifier	empty_info		3438802	0					
ANR	3438910	PrimaryExpression	0		3438802	1					
ANR	3438911	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	986:4:22143:22212	3438802	1	True				
ANR	3438912	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3438802	0		=			
ANR	3438913	Identifier	mod_tlen		3438802	0					
ANR	3438914	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3438802	1		+			
ANR	3438915	Identifier	tlen		3438802	0					
ANR	3438916	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		3438802	1		+			
ANR	3438917	Identifier	SIZE_OP_NULL_CHECK_START		3438802	0					
ANR	3438918	Identifier	SIZE_OP_NULL_CHECK_END		3438802	1					
ANR	3438919	ElseStatement	else		3438802	0					
ANR	3438920	ExpressionStatement	mod_tlen = tlen	988:4:22225:22240	3438802	0	True				
ANR	3438921	AssignmentExpression	mod_tlen = tlen		3438802	0		=			
ANR	3438922	Identifier	mod_tlen		3438802	0					
ANR	3438923	Identifier	tlen		3438802	1					
ANR	3438924	IfStatement	if ( infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		3438802	7					
ANR	3438925	Condition	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )	990:6:22249:22334	3438802	0	True				
ANR	3438926	AndExpression	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )		3438802	0		&&			
ANR	3438927	Identifier	infinite		3438802	0					
ANR	3438928	OrExpression	qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1		||			
ANR	3438929	RelationalExpression	qn -> lower <= 1		3438802	0		<=			
ANR	3438930	PtrMemberAccess	qn -> lower		3438802	0					
ANR	3438931	Identifier	qn		3438802	0					
ANR	3438932	Identifier	lower		3438802	1					
ANR	3438933	PrimaryExpression	1		3438802	1					
ANR	3438934	RelationalExpression	tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1		<=			
ANR	3438935	MultiplicativeExpression	tlen * qn -> lower		3438802	0		*			
ANR	3438936	Identifier	tlen		3438802	0					
ANR	3438937	PtrMemberAccess	qn -> lower		3438802	1					
ANR	3438938	Identifier	qn		3438802	0					
ANR	3438939	Identifier	lower		3438802	1					
ANR	3438940	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1					
ANR	3438941	CompoundStatement		25:76:698:698	3438802	1					
ANR	3438942	IfStatement	if ( qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE )		3438802	0					
ANR	3438943	Condition	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE	992:8:22347:22399	3438802	0	True				
ANR	3438944	AndExpression	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	0		&&			
ANR	3438945	EqualityExpression	qn -> lower == 1		3438802	0		==			
ANR	3438946	PtrMemberAccess	qn -> lower		3438802	0					
ANR	3438947	Identifier	qn		3438802	0					
ANR	3438948	Identifier	lower		3438802	1					
ANR	3438949	PrimaryExpression	1		3438802	1					
ANR	3438950	RelationalExpression	tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1		>			
ANR	3438951	Identifier	tlen		3438802	0					
ANR	3438952	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1					
ANR	3438953	CompoundStatement		26:63:763:763	3438802	1					
ANR	3438954	ExpressionStatement	len = SIZE_OP_JUMP	993:6:22410:22428	3438802	0	True				
ANR	3438955	AssignmentExpression	len = SIZE_OP_JUMP		3438802	0		=			
ANR	3438956	Identifier	len		3438802	0					
ANR	3438957	Identifier	SIZE_OP_JUMP		3438802	1					
ANR	3438958	ElseStatement	else		3438802	0					
ANR	3438959	CompoundStatement		29:9:806:806	3438802	0					
ANR	3438960	ExpressionStatement	len = tlen * qn -> lower	996:6:22453:22475	3438802	0	True				
ANR	3438961	AssignmentExpression	len = tlen * qn -> lower		3438802	0		=			
ANR	3438962	Identifier	len		3438802	0					
ANR	3438963	MultiplicativeExpression	tlen * qn -> lower		3438802	1		*			
ANR	3438964	Identifier	tlen		3438802	0					
ANR	3438965	PtrMemberAccess	qn -> lower		3438802	1					
ANR	3438966	Identifier	qn		3438802	0					
ANR	3438967	Identifier	lower		3438802	1					
ANR	3438968	IfStatement	if ( qn -> greedy )		3438802	1					
ANR	3438969	Condition	qn -> greedy	999:8:22492:22501	3438802	0	True				
ANR	3438970	PtrMemberAccess	qn -> greedy		3438802	0					
ANR	3438971	Identifier	qn		3438802	0					
ANR	3438972	Identifier	greedy		3438802	1					
ANR	3438973	CompoundStatement		33:20:865:865	3438802	1					
ANR	3438974	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		3438802	0					
ANR	3438975	Condition	IS_NOT_NULL ( qn -> head_exact )	1000:10:22516:22542	3438802	0	True				
ANR	3438976	CallExpression	IS_NOT_NULL ( qn -> head_exact )		3438802	0					
ANR	3438977	Callee	IS_NOT_NULL		3438802	0					
ANR	3438978	Identifier	IS_NOT_NULL		3438802	0					
ANR	3438979	ArgumentList	qn -> head_exact		3438802	1					
ANR	3438980	Argument	qn -> head_exact		3438802	0					
ANR	3438981	PtrMemberAccess	qn -> head_exact		3438802	0					
ANR	3438982	Identifier	qn		3438802	0					
ANR	3438983	Identifier	head_exact		3438802	1					
ANR	3438984	ExpressionStatement	len += SIZE_OP_PUSH_OR_JUMP_EXACT1 + mod_tlen + SIZE_OP_JUMP	1001:1:22546:22606	3438802	1	True				
ANR	3438985	AssignmentExpression	len += SIZE_OP_PUSH_OR_JUMP_EXACT1 + mod_tlen + SIZE_OP_JUMP		3438802	0		+=			
ANR	3438986	Identifier	len		3438802	0					
ANR	3438987	AdditiveExpression	SIZE_OP_PUSH_OR_JUMP_EXACT1 + mod_tlen + SIZE_OP_JUMP		3438802	1		+			
ANR	3438988	Identifier	SIZE_OP_PUSH_OR_JUMP_EXACT1		3438802	0					
ANR	3438989	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3438802	1		+			
ANR	3438990	Identifier	mod_tlen		3438802	0					
ANR	3438991	Identifier	SIZE_OP_JUMP		3438802	1					
ANR	3438992	ElseStatement	else		3438802	0					
ANR	3438993	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		3438802	0					
ANR	3438994	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1002:15:22623:22654	3438802	0	True				
ANR	3438995	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		3438802	0					
ANR	3438996	Callee	IS_NOT_NULL		3438802	0					
ANR	3438997	Identifier	IS_NOT_NULL		3438802	0					
ANR	3438998	ArgumentList	qn -> next_head_exact		3438802	1					
ANR	3438999	Argument	qn -> next_head_exact		3438802	0					
ANR	3439000	PtrMemberAccess	qn -> next_head_exact		3438802	0					
ANR	3439001	Identifier	qn		3438802	0					
ANR	3439002	Identifier	next_head_exact		3438802	1					
ANR	3439003	ExpressionStatement	len += SIZE_OP_PUSH_IF_PEEK_NEXT + mod_tlen + SIZE_OP_JUMP	1003:1:22658:22716	3438802	1	True				
ANR	3439004	AssignmentExpression	len += SIZE_OP_PUSH_IF_PEEK_NEXT + mod_tlen + SIZE_OP_JUMP		3438802	0		+=			
ANR	3439005	Identifier	len		3438802	0					
ANR	3439006	AdditiveExpression	SIZE_OP_PUSH_IF_PEEK_NEXT + mod_tlen + SIZE_OP_JUMP		3438802	1		+			
ANR	3439007	Identifier	SIZE_OP_PUSH_IF_PEEK_NEXT		3438802	0					
ANR	3439008	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3438802	1		+			
ANR	3439009	Identifier	mod_tlen		3438802	0					
ANR	3439010	Identifier	SIZE_OP_JUMP		3438802	1					
ANR	3439011	ElseStatement	else		3438802	0					
ANR	3439012	ExpressionStatement	len += SIZE_OP_PUSH + mod_tlen + SIZE_OP_JUMP	1005:1:22730:22775	3438802	0	True				
ANR	3439013	AssignmentExpression	len += SIZE_OP_PUSH + mod_tlen + SIZE_OP_JUMP		3438802	0		+=			
ANR	3439014	Identifier	len		3438802	0					
ANR	3439015	AdditiveExpression	SIZE_OP_PUSH + mod_tlen + SIZE_OP_JUMP		3438802	1		+			
ANR	3439016	Identifier	SIZE_OP_PUSH		3438802	0					
ANR	3439017	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3438802	1		+			
ANR	3439018	Identifier	mod_tlen		3438802	0					
ANR	3439019	Identifier	SIZE_OP_JUMP		3438802	1					
ANR	3439020	ElseStatement	else		3438802	0					
ANR	3439021	ExpressionStatement	len += SIZE_OP_JUMP + mod_tlen + SIZE_OP_PUSH	1008:6:22798:22843	3438802	0	True				
ANR	3439022	AssignmentExpression	len += SIZE_OP_JUMP + mod_tlen + SIZE_OP_PUSH		3438802	0		+=			
ANR	3439023	Identifier	len		3438802	0					
ANR	3439024	AdditiveExpression	SIZE_OP_JUMP + mod_tlen + SIZE_OP_PUSH		3438802	1		+			
ANR	3439025	Identifier	SIZE_OP_JUMP		3438802	0					
ANR	3439026	AdditiveExpression	mod_tlen + SIZE_OP_PUSH		3438802	1		+			
ANR	3439027	Identifier	mod_tlen		3438802	0					
ANR	3439028	Identifier	SIZE_OP_PUSH		3438802	1					
ANR	3439029	ElseStatement	else		3438802	0					
ANR	3439030	IfStatement	if ( qn -> upper == 0 && qn -> is_refered != 0 )		3438802	0					
ANR	3439031	Condition	qn -> upper == 0 && qn -> is_refered != 0	1010:11:22860:22896	3438802	0	True				
ANR	3439032	AndExpression	qn -> upper == 0 && qn -> is_refered != 0		3438802	0		&&			
ANR	3439033	EqualityExpression	qn -> upper == 0		3438802	0		==			
ANR	3439034	PtrMemberAccess	qn -> upper		3438802	0					
ANR	3439035	Identifier	qn		3438802	0					
ANR	3439036	Identifier	upper		3438802	1					
ANR	3439037	PrimaryExpression	0		3438802	1					
ANR	3439038	EqualityExpression	qn -> is_refered != 0		3438802	1		!=			
ANR	3439039	PtrMemberAccess	qn -> is_refered		3438802	0					
ANR	3439040	Identifier	qn		3438802	0					
ANR	3439041	Identifier	is_refered		3438802	1					
ANR	3439042	PrimaryExpression	0		3438802	1					
ANR	3439043	CompoundStatement		44:50:1260:1260	3438802	1					
ANR	3439044	ExpressionStatement	len = SIZE_OP_JUMP + tlen	1011:4:22925:22950	3438802	0	True				
ANR	3439045	AssignmentExpression	len = SIZE_OP_JUMP + tlen		3438802	0		=			
ANR	3439046	Identifier	len		3438802	0					
ANR	3439047	AdditiveExpression	SIZE_OP_JUMP + tlen		3438802	1		+			
ANR	3439048	Identifier	SIZE_OP_JUMP		3438802	0					
ANR	3439049	Identifier	tlen		3438802	1					
ANR	3439050	ElseStatement	else		3438802	0					
ANR	3439051	IfStatement	if ( ! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		3438802	0					
ANR	3439052	Condition	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )	1013:11:22967:23127	3438802	0	True				
ANR	3439053	AndExpression	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		3438802	0		&&			
ANR	3439054	UnaryOperationExpression	! infinite		3438802	0					
ANR	3439055	UnaryOperator	!		3438802	0					
ANR	3439056	Identifier	infinite		3438802	1					
ANR	3439057	AndExpression	qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		3438802	1		&&			
ANR	3439058	PtrMemberAccess	qn -> greedy		3438802	0					
ANR	3439059	Identifier	qn		3438802	0					
ANR	3439060	Identifier	greedy		3438802	1					
ANR	3439061	OrExpression	qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1		||			
ANR	3439062	EqualityExpression	qn -> upper == 1		3438802	0		==			
ANR	3439063	PtrMemberAccess	qn -> upper		3438802	0					
ANR	3439064	Identifier	qn		3438802	0					
ANR	3439065	Identifier	upper		3438802	1					
ANR	3439066	PrimaryExpression	1		3438802	1					
ANR	3439067	RelationalExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1		<=			
ANR	3439068	MultiplicativeExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper		3438802	0		*			
ANR	3439069	AdditiveExpression	tlen + SIZE_OP_PUSH		3438802	0		+			
ANR	3439070	Identifier	tlen		3438802	0					
ANR	3439071	Identifier	SIZE_OP_PUSH		3438802	1					
ANR	3439072	PtrMemberAccess	qn -> upper		3438802	1					
ANR	3439073	Identifier	qn		3438802	0					
ANR	3439074	Identifier	upper		3438802	1					
ANR	3439075	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		3438802	1					
ANR	3439076	CompoundStatement		49:72:1491:1491	3438802	1					
ANR	3439077	ExpressionStatement	len = tlen * qn -> lower	1016:4:23136:23158	3438802	0	True				
ANR	3439078	AssignmentExpression	len = tlen * qn -> lower		3438802	0		=			
ANR	3439079	Identifier	len		3438802	0					
ANR	3439080	MultiplicativeExpression	tlen * qn -> lower		3438802	1		*			
ANR	3439081	Identifier	tlen		3438802	0					
ANR	3439082	PtrMemberAccess	qn -> lower		3438802	1					
ANR	3439083	Identifier	qn		3438802	0					
ANR	3439084	Identifier	lower		3438802	1					
ANR	3439085	ExpressionStatement	len += ( SIZE_OP_PUSH + tlen ) * ( qn -> upper - qn -> lower )	1017:4:23164:23218	3438802	1	True				
ANR	3439086	AssignmentExpression	len += ( SIZE_OP_PUSH + tlen ) * ( qn -> upper - qn -> lower )		3438802	0		+=			
ANR	3439087	Identifier	len		3438802	0					
ANR	3439088	MultiplicativeExpression	( SIZE_OP_PUSH + tlen ) * ( qn -> upper - qn -> lower )		3438802	1		*			
ANR	3439089	AdditiveExpression	SIZE_OP_PUSH + tlen		3438802	0		+			
ANR	3439090	Identifier	SIZE_OP_PUSH		3438802	0					
ANR	3439091	Identifier	tlen		3438802	1					
ANR	3439092	AdditiveExpression	qn -> upper - qn -> lower		3438802	1		-			
ANR	3439093	PtrMemberAccess	qn -> upper		3438802	0					
ANR	3439094	Identifier	qn		3438802	0					
ANR	3439095	Identifier	upper		3438802	1					
ANR	3439096	PtrMemberAccess	qn -> lower		3438802	1					
ANR	3439097	Identifier	qn		3438802	0					
ANR	3439098	Identifier	lower		3438802	1					
ANR	3439099	ElseStatement	else		3438802	0					
ANR	3439100	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		3438802	0					
ANR	3439101	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	1019:11:23235:23281	3438802	0	True				
ANR	3439102	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		3438802	0		&&			
ANR	3439103	UnaryOperationExpression	! qn -> greedy		3438802	0					
ANR	3439104	UnaryOperator	!		3438802	0					
ANR	3439105	PtrMemberAccess	qn -> greedy		3438802	1					
ANR	3439106	Identifier	qn		3438802	0					
ANR	3439107	Identifier	greedy		3438802	1					
ANR	3439108	AndExpression	qn -> upper == 1 && qn -> lower == 0		3438802	1		&&			
ANR	3439109	EqualityExpression	qn -> upper == 1		3438802	0		==			
ANR	3439110	PtrMemberAccess	qn -> upper		3438802	0					
ANR	3439111	Identifier	qn		3438802	0					
ANR	3439112	Identifier	upper		3438802	1					
ANR	3439113	PrimaryExpression	1		3438802	1					
ANR	3439114	EqualityExpression	qn -> lower == 0		3438802	1		==			
ANR	3439115	PtrMemberAccess	qn -> lower		3438802	0					
ANR	3439116	Identifier	qn		3438802	0					
ANR	3439117	Identifier	lower		3438802	1					
ANR	3439118	PrimaryExpression	0		3438802	1					
ANR	3439119	CompoundStatement		53:60:1645:1645	3438802	1					
ANR	3439120	ExpressionStatement	len = SIZE_OP_PUSH + SIZE_OP_JUMP + tlen	1020:4:23301:23341	3438802	0	True				
ANR	3439121	AssignmentExpression	len = SIZE_OP_PUSH + SIZE_OP_JUMP + tlen		3438802	0		=			
ANR	3439122	Identifier	len		3438802	0					
ANR	3439123	AdditiveExpression	SIZE_OP_PUSH + SIZE_OP_JUMP + tlen		3438802	1		+			
ANR	3439124	Identifier	SIZE_OP_PUSH		3438802	0					
ANR	3439125	AdditiveExpression	SIZE_OP_JUMP + tlen		3438802	1		+			
ANR	3439126	Identifier	SIZE_OP_JUMP		3438802	0					
ANR	3439127	Identifier	tlen		3438802	1					
ANR	3439128	ElseStatement	else		3438802	0					
ANR	3439129	CompoundStatement		56:7:1715:1715	3438802	0					
ANR	3439130	ExpressionStatement	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM	1023:4:23360:23446	3438802	0	True				
ANR	3439131	AssignmentExpression	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3438802	0		=			
ANR	3439132	Identifier	len		3438802	0					
ANR	3439133	AdditiveExpression	SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3438802	1		+			
ANR	3439134	Identifier	SIZE_OP_REPEAT_INC		3438802	0					
ANR	3439135	AdditiveExpression	mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3438802	1		+			
ANR	3439136	Identifier	mod_tlen		3438802	0					
ANR	3439137	AdditiveExpression	SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		3438802	1		+			
ANR	3439138	Identifier	SIZE_OPCODE		3438802	0					
ANR	3439139	AdditiveExpression	SIZE_RELADDR + SIZE_MEMNUM		3438802	1		+			
ANR	3439140	Identifier	SIZE_RELADDR		3438802	0					
ANR	3439141	Identifier	SIZE_MEMNUM		3438802	1					
ANR	3439142	ReturnStatement	return len ;	1027:2:23455:23465	3438802	8	True				
ANR	3439143	Identifier	len		3438802	0					
ANR	3439144	ReturnType	static int		3438802	1					
ANR	3439145	Identifier	compile_length_quantifier_node		3438802	2					
ANR	3439146	ParameterList	"QtfrNode * qn , regex_t * reg"		3438802	3					
ANR	3439147	Parameter	QtfrNode * qn	966:31:21610:21621	3438802	0	True				
ANR	3439148	ParameterType	QtfrNode *		3438802	0					
ANR	3439149	Identifier	qn		3438802	1					
ANR	3439150	Parameter	regex_t * reg	966:45:21624:21635	3438802	1	True				
ANR	3439151	ParameterType	regex_t *		3438802	0					
ANR	3439152	Identifier	reg		3438802	1					
ANR	3439153	CFGEntryNode	ENTRY		3438802		True				
ANR	3439154	CFGExitNode	EXIT		3438802		True				
ANR	3439155	Symbol	* qn		3438802						
ANR	3439156	Symbol	qn -> target_empty_info		3438802						
ANR	3439157	Symbol	qn -> greedy		3438802						
ANR	3439158	Symbol	SIZE_RELADDR		3438802						
ANR	3439159	Symbol	IS_NOT_NULL		3438802						
ANR	3439160	Symbol	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		3438802						
ANR	3439161	Symbol	infinite		3438802						
ANR	3439162	Symbol	qn -> next_head_exact		3438802						
ANR	3439163	Symbol	SIZE_OP_NULL_CHECK_END		3438802						
ANR	3439164	Symbol	SIZE_OPCODE		3438802						
ANR	3439165	Symbol	qn -> lower		3438802						
ANR	3439166	Symbol	SIZE_MEMNUM		3438802						
ANR	3439167	Symbol	len		3438802						
ANR	3439168	Symbol	reg		3438802						
ANR	3439169	Symbol	NT_CANY		3438802						
ANR	3439170	Symbol	SIZE_OP_ANYCHAR_STAR		3438802						
ANR	3439171	Symbol	tlen		3438802						
ANR	3439172	Symbol	SIZE_OP_REPEAT_INC		3438802						
ANR	3439173	Symbol	IS_REPEAT_INFINITE		3438802						
ANR	3439174	Symbol	SIZE_OP_NULL_CHECK_START		3438802						
ANR	3439175	Symbol	SIZE_OP_PUSH_IF_PEEK_NEXT		3438802						
ANR	3439176	Symbol	qn		3438802						
ANR	3439177	Symbol	SIZE_OP_JUMP		3438802						
ANR	3439178	Symbol	compile_length_tree		3438802						
ANR	3439179	Symbol	SIZE_OP_PUSH		3438802						
ANR	3439180	Symbol	qn -> target		3438802						
ANR	3439181	Symbol	qn -> head_exact		3438802						
ANR	3439182	Symbol	qn -> upper		3438802						
ANR	3439183	Symbol	QUANTIFIER_EXPAND_LIMIT_SIZE		3438802						
ANR	3439184	Symbol	qn -> is_refered		3438802						
ANR	3439185	Symbol	mod_tlen		3438802						
ANR	3439186	Symbol	empty_info		3438802						
ANR	3439187	Symbol	NTYPE		3438802						
ANR	3439188	Symbol	SIZE_OP_PUSH_OR_JUMP_EXACT1		3438802						
ANR	3439189	Function	compile_quantifier_node	1030:0:23470:27519							
ANR	3439190	FunctionDef	"compile_quantifier_node (QtfrNode * qn , regex_t * reg)"		3439189	0					
ANR	3439191	CompoundStatement		1032:0:23533:27519	3439189	0					
ANR	3439192	IdentifierDeclStatement	"int i , r , mod_tlen ;"	1033:2:23537:23555	3439189	0	True				
ANR	3439193	IdentifierDecl	i		3439189	0					
ANR	3439194	IdentifierDeclType	int		3439189	0					
ANR	3439195	Identifier	i		3439189	1					
ANR	3439196	IdentifierDecl	r		3439189	1					
ANR	3439197	IdentifierDeclType	int		3439189	0					
ANR	3439198	Identifier	r		3439189	1					
ANR	3439199	IdentifierDecl	mod_tlen		3439189	2					
ANR	3439200	IdentifierDeclType	int		3439189	0					
ANR	3439201	Identifier	mod_tlen		3439189	1					
ANR	3439202	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	1034:2:23559:23603	3439189	1	True				
ANR	3439203	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3439189	0					
ANR	3439204	IdentifierDeclType	int		3439189	0					
ANR	3439205	Identifier	infinite		3439189	1					
ANR	3439206	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		3439189	2		=			
ANR	3439207	Identifier	infinite		3439189	0					
ANR	3439208	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3439189	1					
ANR	3439209	Callee	IS_REPEAT_INFINITE		3439189	0					
ANR	3439210	Identifier	IS_REPEAT_INFINITE		3439189	0					
ANR	3439211	ArgumentList	qn -> upper		3439189	1					
ANR	3439212	Argument	qn -> upper		3439189	0					
ANR	3439213	PtrMemberAccess	qn -> upper		3439189	0					
ANR	3439214	Identifier	qn		3439189	0					
ANR	3439215	Identifier	upper		3439189	1					
ANR	3439216	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	1035:2:23607:23645	3439189	2	True				
ANR	3439217	IdentifierDecl	empty_info = qn -> target_empty_info		3439189	0					
ANR	3439218	IdentifierDeclType	int		3439189	0					
ANR	3439219	Identifier	empty_info		3439189	1					
ANR	3439220	AssignmentExpression	empty_info = qn -> target_empty_info		3439189	2		=			
ANR	3439221	Identifier	empty_info		3439189	0					
ANR	3439222	PtrMemberAccess	qn -> target_empty_info		3439189	1					
ANR	3439223	Identifier	qn		3439189	0					
ANR	3439224	Identifier	target_empty_info		3439189	1					
ANR	3439225	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	1036:2:23649:23696	3439189	3	True				
ANR	3439226	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		3439189	0					
ANR	3439227	IdentifierDeclType	int		3439189	0					
ANR	3439228	Identifier	tlen		3439189	1					
ANR	3439229	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		3439189	2		=			
ANR	3439230	Identifier	tlen		3439189	0					
ANR	3439231	CallExpression	"compile_length_tree ( qn -> target , reg )"		3439189	1					
ANR	3439232	Callee	compile_length_tree		3439189	0					
ANR	3439233	Identifier	compile_length_tree		3439189	0					
ANR	3439234	ArgumentList	qn -> target		3439189	1					
ANR	3439235	Argument	qn -> target		3439189	0					
ANR	3439236	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439237	Identifier	qn		3439189	0					
ANR	3439238	Identifier	target		3439189	1					
ANR	3439239	Argument	reg		3439189	1					
ANR	3439240	Identifier	reg		3439189	0					
ANR	3439241	IfStatement	if ( tlen < 0 )		3439189	4					
ANR	3439242	Condition	tlen < 0	1038:6:23705:23712	3439189	0	True				
ANR	3439243	RelationalExpression	tlen < 0		3439189	0		<			
ANR	3439244	Identifier	tlen		3439189	0					
ANR	3439245	PrimaryExpression	0		3439189	1					
ANR	3439246	ReturnStatement	return tlen ;	1038:16:23715:23726	3439189	1	True				
ANR	3439247	Identifier	tlen		3439189	0					
ANR	3439248	IfStatement	if ( is_anychar_star_quantifier ( qn ) )		3439189	5					
ANR	3439249	Condition	is_anychar_star_quantifier ( qn )	1040:6:23735:23764	3439189	0	True				
ANR	3439250	CallExpression	is_anychar_star_quantifier ( qn )		3439189	0					
ANR	3439251	Callee	is_anychar_star_quantifier		3439189	0					
ANR	3439252	Identifier	is_anychar_star_quantifier		3439189	0					
ANR	3439253	ArgumentList	qn		3439189	1					
ANR	3439254	Argument	qn		3439189	0					
ANR	3439255	Identifier	qn		3439189	0					
ANR	3439256	CompoundStatement		9:38:233:233	3439189	1					
ANR	3439257	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1041:4:23773:23825	3439189	0	True				
ANR	3439258	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3439189	0		=			
ANR	3439259	Identifier	r		3439189	0					
ANR	3439260	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3439189	1					
ANR	3439261	Callee	compile_tree_n_times		3439189	0					
ANR	3439262	Identifier	compile_tree_n_times		3439189	0					
ANR	3439263	ArgumentList	qn -> target		3439189	1					
ANR	3439264	Argument	qn -> target		3439189	0					
ANR	3439265	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439266	Identifier	qn		3439189	0					
ANR	3439267	Identifier	target		3439189	1					
ANR	3439268	Argument	qn -> lower		3439189	1					
ANR	3439269	PtrMemberAccess	qn -> lower		3439189	0					
ANR	3439270	Identifier	qn		3439189	0					
ANR	3439271	Identifier	lower		3439189	1					
ANR	3439272	Argument	reg		3439189	2					
ANR	3439273	Identifier	reg		3439189	0					
ANR	3439274	IfStatement	if ( r )		3439189	1					
ANR	3439275	Condition	r	1042:8:23835:23835	3439189	0	True				
ANR	3439276	Identifier	r		3439189	0					
ANR	3439277	ReturnStatement	return r ;	1042:11:23838:23846	3439189	1	True				
ANR	3439278	Identifier	r		3439189	0					
ANR	3439279	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		3439189	2					
ANR	3439280	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1043:8:23856:23887	3439189	0	True				
ANR	3439281	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		3439189	0					
ANR	3439282	Callee	IS_NOT_NULL		3439189	0					
ANR	3439283	Identifier	IS_NOT_NULL		3439189	0					
ANR	3439284	ArgumentList	qn -> next_head_exact		3439189	1					
ANR	3439285	Argument	qn -> next_head_exact		3439189	0					
ANR	3439286	PtrMemberAccess	qn -> next_head_exact		3439189	0					
ANR	3439287	Identifier	qn		3439189	0					
ANR	3439288	Identifier	next_head_exact		3439189	1					
ANR	3439289	CompoundStatement		12:42:356:356	3439189	1					
ANR	3439290	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		3439189	0					
ANR	3439291	Condition	IS_MULTILINE ( reg -> options )	1044:10:23902:23927	3439189	0	True				
ANR	3439292	CallExpression	IS_MULTILINE ( reg -> options )		3439189	0					
ANR	3439293	Callee	IS_MULTILINE		3439189	0					
ANR	3439294	Identifier	IS_MULTILINE		3439189	0					
ANR	3439295	ArgumentList	reg -> options		3439189	1					
ANR	3439296	Argument	reg -> options		3439189	0					
ANR	3439297	PtrMemberAccess	reg -> options		3439189	0					
ANR	3439298	Identifier	reg		3439189	0					
ANR	3439299	Identifier	options		3439189	1					
ANR	3439300	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"	1045:1:23931:23980	3439189	1	True				
ANR	3439301	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		3439189	0		=			
ANR	3439302	Identifier	r		3439189	0					
ANR	3439303	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		3439189	1					
ANR	3439304	Callee	add_opcode		3439189	0					
ANR	3439305	Identifier	add_opcode		3439189	0					
ANR	3439306	ArgumentList	reg		3439189	1					
ANR	3439307	Argument	reg		3439189	0					
ANR	3439308	Identifier	reg		3439189	0					
ANR	3439309	Argument	OP_ANYCHAR_ML_STAR_PEEK_NEXT		3439189	1					
ANR	3439310	Identifier	OP_ANYCHAR_ML_STAR_PEEK_NEXT		3439189	0					
ANR	3439311	ElseStatement	else		3439189	0					
ANR	3439312	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"	1047:1:23994:24040	3439189	0	True				
ANR	3439313	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		3439189	0		=			
ANR	3439314	Identifier	r		3439189	0					
ANR	3439315	CallExpression	"add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		3439189	1					
ANR	3439316	Callee	add_opcode		3439189	0					
ANR	3439317	Identifier	add_opcode		3439189	0					
ANR	3439318	ArgumentList	reg		3439189	1					
ANR	3439319	Argument	reg		3439189	0					
ANR	3439320	Identifier	reg		3439189	0					
ANR	3439321	Argument	OP_ANYCHAR_STAR_PEEK_NEXT		3439189	1					
ANR	3439322	Identifier	OP_ANYCHAR_STAR_PEEK_NEXT		3439189	0					
ANR	3439323	IfStatement	if ( r )		3439189	1					
ANR	3439324	Condition	r	1048:10:24052:24052	3439189	0	True				
ANR	3439325	Identifier	r		3439189	0					
ANR	3439326	ReturnStatement	return r ;	1048:13:24055:24063	3439189	1	True				
ANR	3439327	Identifier	r		3439189	0					
ANR	3439328	ReturnStatement	"return add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 ) ;"	1049:6:24071:24125	3439189	2	True				
ANR	3439329	CallExpression	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"		3439189	0					
ANR	3439330	Callee	add_bytes		3439189	0					
ANR	3439331	Identifier	add_bytes		3439189	0					
ANR	3439332	ArgumentList	reg		3439189	1					
ANR	3439333	Argument	reg		3439189	0					
ANR	3439334	Identifier	reg		3439189	0					
ANR	3439335	Argument	NSTR ( qn -> next_head_exact ) -> s		3439189	1					
ANR	3439336	PtrMemberAccess	NSTR ( qn -> next_head_exact ) -> s		3439189	0					
ANR	3439337	CallExpression	NSTR ( qn -> next_head_exact )		3439189	0					
ANR	3439338	Callee	NSTR		3439189	0					
ANR	3439339	Identifier	NSTR		3439189	0					
ANR	3439340	ArgumentList	qn -> next_head_exact		3439189	1					
ANR	3439341	Argument	qn -> next_head_exact		3439189	0					
ANR	3439342	PtrMemberAccess	qn -> next_head_exact		3439189	0					
ANR	3439343	Identifier	qn		3439189	0					
ANR	3439344	Identifier	next_head_exact		3439189	1					
ANR	3439345	Identifier	s		3439189	1					
ANR	3439346	Argument	1		3439189	2					
ANR	3439347	PrimaryExpression	1		3439189	0					
ANR	3439348	ElseStatement	else		3439189	0					
ANR	3439349	CompoundStatement		20:9:608:608	3439189	0					
ANR	3439350	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		3439189	0					
ANR	3439351	Condition	IS_MULTILINE ( reg -> options )	1052:10:24154:24179	3439189	0	True				
ANR	3439352	CallExpression	IS_MULTILINE ( reg -> options )		3439189	0					
ANR	3439353	Callee	IS_MULTILINE		3439189	0					
ANR	3439354	Identifier	IS_MULTILINE		3439189	0					
ANR	3439355	ArgumentList	reg -> options		3439189	1					
ANR	3439356	Argument	reg -> options		3439189	0					
ANR	3439357	PtrMemberAccess	reg -> options		3439189	0					
ANR	3439358	Identifier	reg		3439189	0					
ANR	3439359	Identifier	options		3439189	1					
ANR	3439360	ReturnStatement	"return add_opcode ( reg , OP_ANYCHAR_ML_STAR ) ;"	1053:1:24183:24225	3439189	1	True				
ANR	3439361	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML_STAR )"		3439189	0					
ANR	3439362	Callee	add_opcode		3439189	0					
ANR	3439363	Identifier	add_opcode		3439189	0					
ANR	3439364	ArgumentList	reg		3439189	1					
ANR	3439365	Argument	reg		3439189	0					
ANR	3439366	Identifier	reg		3439189	0					
ANR	3439367	Argument	OP_ANYCHAR_ML_STAR		3439189	1					
ANR	3439368	Identifier	OP_ANYCHAR_ML_STAR		3439189	0					
ANR	3439369	ElseStatement	else		3439189	0					
ANR	3439370	ReturnStatement	"return add_opcode ( reg , OP_ANYCHAR_STAR ) ;"	1055:1:24239:24278	3439189	0	True				
ANR	3439371	CallExpression	"add_opcode ( reg , OP_ANYCHAR_STAR )"		3439189	0					
ANR	3439372	Callee	add_opcode		3439189	0					
ANR	3439373	Identifier	add_opcode		3439189	0					
ANR	3439374	ArgumentList	reg		3439189	1					
ANR	3439375	Argument	reg		3439189	0					
ANR	3439376	Identifier	reg		3439189	0					
ANR	3439377	Argument	OP_ANYCHAR_STAR		3439189	1					
ANR	3439378	Identifier	OP_ANYCHAR_STAR		3439189	0					
ANR	3439379	IfStatement	if ( empty_info != 0 )		3439189	6					
ANR	3439380	Condition	empty_info != 0	1059:6:24297:24311	3439189	0	True				
ANR	3439381	EqualityExpression	empty_info != 0		3439189	0		!=			
ANR	3439382	Identifier	empty_info		3439189	0					
ANR	3439383	PrimaryExpression	0		3439189	1					
ANR	3439384	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	1060:4:24318:24387	3439189	1	True				
ANR	3439385	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3439189	0		=			
ANR	3439386	Identifier	mod_tlen		3439189	0					
ANR	3439387	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		3439189	1		+			
ANR	3439388	Identifier	tlen		3439189	0					
ANR	3439389	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		3439189	1		+			
ANR	3439390	Identifier	SIZE_OP_NULL_CHECK_START		3439189	0					
ANR	3439391	Identifier	SIZE_OP_NULL_CHECK_END		3439189	1					
ANR	3439392	ElseStatement	else		3439189	0					
ANR	3439393	ExpressionStatement	mod_tlen = tlen	1062:4:24400:24415	3439189	0	True				
ANR	3439394	AssignmentExpression	mod_tlen = tlen		3439189	0		=			
ANR	3439395	Identifier	mod_tlen		3439189	0					
ANR	3439396	Identifier	tlen		3439189	1					
ANR	3439397	IfStatement	if ( infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		3439189	7					
ANR	3439398	Condition	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )	1064:6:24424:24509	3439189	0	True				
ANR	3439399	AndExpression	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )		3439189	0		&&			
ANR	3439400	Identifier	infinite		3439189	0					
ANR	3439401	OrExpression	qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1		||			
ANR	3439402	RelationalExpression	qn -> lower <= 1		3439189	0		<=			
ANR	3439403	PtrMemberAccess	qn -> lower		3439189	0					
ANR	3439404	Identifier	qn		3439189	0					
ANR	3439405	Identifier	lower		3439189	1					
ANR	3439406	PrimaryExpression	1		3439189	1					
ANR	3439407	RelationalExpression	tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1		<=			
ANR	3439408	MultiplicativeExpression	tlen * qn -> lower		3439189	0		*			
ANR	3439409	Identifier	tlen		3439189	0					
ANR	3439410	PtrMemberAccess	qn -> lower		3439189	1					
ANR	3439411	Identifier	qn		3439189	0					
ANR	3439412	Identifier	lower		3439189	1					
ANR	3439413	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1					
ANR	3439414	CompoundStatement		34:76:978:978	3439189	1					
ANR	3439415	IfStatement	if ( qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE )		3439189	0					
ANR	3439416	Condition	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE	1066:8:24522:24574	3439189	0	True				
ANR	3439417	AndExpression	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	0		&&			
ANR	3439418	EqualityExpression	qn -> lower == 1		3439189	0		==			
ANR	3439419	PtrMemberAccess	qn -> lower		3439189	0					
ANR	3439420	Identifier	qn		3439189	0					
ANR	3439421	Identifier	lower		3439189	1					
ANR	3439422	PrimaryExpression	1		3439189	1					
ANR	3439423	RelationalExpression	tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1		>			
ANR	3439424	Identifier	tlen		3439189	0					
ANR	3439425	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1					
ANR	3439426	CompoundStatement		35:63:1043:1043	3439189	1					
ANR	3439427	IfStatement	if ( qn -> greedy )		3439189	0					
ANR	3439428	Condition	qn -> greedy	1067:10:24589:24598	3439189	0	True				
ANR	3439429	PtrMemberAccess	qn -> greedy		3439189	0					
ANR	3439430	Identifier	qn		3439189	0					
ANR	3439431	Identifier	greedy		3439189	1					
ANR	3439432	CompoundStatement		36:22:1067:1067	3439189	1					
ANR	3439433	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		3439189	0					
ANR	3439434	Condition	IS_NOT_NULL ( qn -> head_exact )	1068:5:24608:24634	3439189	0	True				
ANR	3439435	CallExpression	IS_NOT_NULL ( qn -> head_exact )		3439189	0					
ANR	3439436	Callee	IS_NOT_NULL		3439189	0					
ANR	3439437	Identifier	IS_NOT_NULL		3439189	0					
ANR	3439438	ArgumentList	qn -> head_exact		3439189	1					
ANR	3439439	Argument	qn -> head_exact		3439189	0					
ANR	3439440	PtrMemberAccess	qn -> head_exact		3439189	0					
ANR	3439441	Identifier	qn		3439189	0					
ANR	3439442	Identifier	head_exact		3439189	1					
ANR	3439443	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_OR_JUMP_EXACT1 )"	1069:3:24640:24706	3439189	1	True				
ANR	3439444	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_OR_JUMP_EXACT1 )"		3439189	0		=			
ANR	3439445	Identifier	r		3439189	0					
ANR	3439446	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_OR_JUMP_EXACT1 )"		3439189	1					
ANR	3439447	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439448	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439449	ArgumentList	reg		3439189	1					
ANR	3439450	Argument	reg		3439189	0					
ANR	3439451	Identifier	reg		3439189	0					
ANR	3439452	Argument	OP_JUMP		3439189	1					
ANR	3439453	Identifier	OP_JUMP		3439189	0					
ANR	3439454	Argument	SIZE_OP_PUSH_OR_JUMP_EXACT1		3439189	2					
ANR	3439455	Identifier	SIZE_OP_PUSH_OR_JUMP_EXACT1		3439189	0					
ANR	3439456	ElseStatement	else		3439189	0					
ANR	3439457	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		3439189	0					
ANR	3439458	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1070:10:24718:24749	3439189	0	True				
ANR	3439459	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		3439189	0					
ANR	3439460	Callee	IS_NOT_NULL		3439189	0					
ANR	3439461	Identifier	IS_NOT_NULL		3439189	0					
ANR	3439462	ArgumentList	qn -> next_head_exact		3439189	1					
ANR	3439463	Argument	qn -> next_head_exact		3439189	0					
ANR	3439464	PtrMemberAccess	qn -> next_head_exact		3439189	0					
ANR	3439465	Identifier	qn		3439189	0					
ANR	3439466	Identifier	next_head_exact		3439189	1					
ANR	3439467	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_IF_PEEK_NEXT )"	1071:3:24755:24819	3439189	1	True				
ANR	3439468	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_IF_PEEK_NEXT )"		3439189	0		=			
ANR	3439469	Identifier	r		3439189	0					
ANR	3439470	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_IF_PEEK_NEXT )"		3439189	1					
ANR	3439471	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439472	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439473	ArgumentList	reg		3439189	1					
ANR	3439474	Argument	reg		3439189	0					
ANR	3439475	Identifier	reg		3439189	0					
ANR	3439476	Argument	OP_JUMP		3439189	1					
ANR	3439477	Identifier	OP_JUMP		3439189	0					
ANR	3439478	Argument	SIZE_OP_PUSH_IF_PEEK_NEXT		3439189	2					
ANR	3439479	Identifier	SIZE_OP_PUSH_IF_PEEK_NEXT		3439189	0					
ANR	3439480	ElseStatement	else		3439189	0					
ANR	3439481	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH )"	1073:3:24830:24881	3439189	0	True				
ANR	3439482	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH )"		3439189	0		=			
ANR	3439483	Identifier	r		3439189	0					
ANR	3439484	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH )"		3439189	1					
ANR	3439485	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439486	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439487	ArgumentList	reg		3439189	1					
ANR	3439488	Argument	reg		3439189	0					
ANR	3439489	Identifier	reg		3439189	0					
ANR	3439490	Argument	OP_JUMP		3439189	1					
ANR	3439491	Identifier	OP_JUMP		3439189	0					
ANR	3439492	Argument	SIZE_OP_PUSH		3439189	2					
ANR	3439493	Identifier	SIZE_OP_PUSH		3439189	0					
ANR	3439494	ElseStatement	else		3439189	0					
ANR	3439495	CompoundStatement		44:11:1368:1368	3439189	0					
ANR	3439496	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_JUMP )"	1076:1:24905:24956	3439189	0	True				
ANR	3439497	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_JUMP )"		3439189	0		=			
ANR	3439498	Identifier	r		3439189	0					
ANR	3439499	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_JUMP )"		3439189	1					
ANR	3439500	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439501	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439502	ArgumentList	reg		3439189	1					
ANR	3439503	Argument	reg		3439189	0					
ANR	3439504	Identifier	reg		3439189	0					
ANR	3439505	Argument	OP_JUMP		3439189	1					
ANR	3439506	Identifier	OP_JUMP		3439189	0					
ANR	3439507	Argument	SIZE_OP_JUMP		3439189	2					
ANR	3439508	Identifier	SIZE_OP_JUMP		3439189	0					
ANR	3439509	IfStatement	if ( r )		3439189	1					
ANR	3439510	Condition	r	1078:10:24976:24976	3439189	0	True				
ANR	3439511	Identifier	r		3439189	0					
ANR	3439512	ReturnStatement	return r ;	1078:13:24979:24987	3439189	1	True				
ANR	3439513	Identifier	r		3439189	0					
ANR	3439514	ElseStatement	else		3439189	0					
ANR	3439515	CompoundStatement		49:9:1470:1470	3439189	0					
ANR	3439516	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1081:6:25012:25064	3439189	0	True				
ANR	3439517	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3439189	0		=			
ANR	3439518	Identifier	r		3439189	0					
ANR	3439519	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3439189	1					
ANR	3439520	Callee	compile_tree_n_times		3439189	0					
ANR	3439521	Identifier	compile_tree_n_times		3439189	0					
ANR	3439522	ArgumentList	qn -> target		3439189	1					
ANR	3439523	Argument	qn -> target		3439189	0					
ANR	3439524	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439525	Identifier	qn		3439189	0					
ANR	3439526	Identifier	target		3439189	1					
ANR	3439527	Argument	qn -> lower		3439189	1					
ANR	3439528	PtrMemberAccess	qn -> lower		3439189	0					
ANR	3439529	Identifier	qn		3439189	0					
ANR	3439530	Identifier	lower		3439189	1					
ANR	3439531	Argument	reg		3439189	2					
ANR	3439532	Identifier	reg		3439189	0					
ANR	3439533	IfStatement	if ( r )		3439189	1					
ANR	3439534	Condition	r	1082:10:25076:25076	3439189	0	True				
ANR	3439535	Identifier	r		3439189	0					
ANR	3439536	ReturnStatement	return r ;	1082:13:25079:25087	3439189	1	True				
ANR	3439537	Identifier	r		3439189	0					
ANR	3439538	IfStatement	if ( qn -> greedy )		3439189	1					
ANR	3439539	Condition	qn -> greedy	1085:8:25104:25113	3439189	0	True				
ANR	3439540	PtrMemberAccess	qn -> greedy		3439189	0					
ANR	3439541	Identifier	qn		3439189	0					
ANR	3439542	Identifier	greedy		3439189	1					
ANR	3439543	CompoundStatement		54:20:1582:1582	3439189	1					
ANR	3439544	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		3439189	0					
ANR	3439545	Condition	IS_NOT_NULL ( qn -> head_exact )	1086:10:25128:25154	3439189	0	True				
ANR	3439546	CallExpression	IS_NOT_NULL ( qn -> head_exact )		3439189	0					
ANR	3439547	Callee	IS_NOT_NULL		3439189	0					
ANR	3439548	Identifier	IS_NOT_NULL		3439189	0					
ANR	3439549	ArgumentList	qn -> head_exact		3439189	1					
ANR	3439550	Argument	qn -> head_exact		3439189	0					
ANR	3439551	PtrMemberAccess	qn -> head_exact		3439189	0					
ANR	3439552	Identifier	qn		3439189	0					
ANR	3439553	Identifier	head_exact		3439189	1					
ANR	3439554	CompoundStatement		55:39:1623:1623	3439189	1					
ANR	3439555	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_OR_JUMP_EXACT1 , mod_tlen + SIZE_OP_JUMP )"	1087:1:25160:25245	3439189	0	True				
ANR	3439556	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_OR_JUMP_EXACT1 , mod_tlen + SIZE_OP_JUMP )"		3439189	0		=			
ANR	3439557	Identifier	r		3439189	0					
ANR	3439558	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_OR_JUMP_EXACT1 , mod_tlen + SIZE_OP_JUMP )"		3439189	1					
ANR	3439559	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439560	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439561	ArgumentList	reg		3439189	1					
ANR	3439562	Argument	reg		3439189	0					
ANR	3439563	Identifier	reg		3439189	0					
ANR	3439564	Argument	OP_PUSH_OR_JUMP_EXACT1		3439189	1					
ANR	3439565	Identifier	OP_PUSH_OR_JUMP_EXACT1		3439189	0					
ANR	3439566	Argument	mod_tlen + SIZE_OP_JUMP		3439189	2					
ANR	3439567	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3439189	0		+			
ANR	3439568	Identifier	mod_tlen		3439189	0					
ANR	3439569	Identifier	SIZE_OP_JUMP		3439189	1					
ANR	3439570	IfStatement	if ( r )		3439189	1					
ANR	3439571	Condition	r	1089:5:25252:25252	3439189	0	True				
ANR	3439572	Identifier	r		3439189	0					
ANR	3439573	ReturnStatement	return r ;	1089:8:25255:25263	3439189	1	True				
ANR	3439574	Identifier	r		3439189	0					
ANR	3439575	ExpressionStatement	"add_bytes ( reg , NSTR ( qn -> head_exact ) -> s , 1 )"	1090:1:25266:25308	3439189	2	True				
ANR	3439576	CallExpression	"add_bytes ( reg , NSTR ( qn -> head_exact ) -> s , 1 )"		3439189	0					
ANR	3439577	Callee	add_bytes		3439189	0					
ANR	3439578	Identifier	add_bytes		3439189	0					
ANR	3439579	ArgumentList	reg		3439189	1					
ANR	3439580	Argument	reg		3439189	0					
ANR	3439581	Identifier	reg		3439189	0					
ANR	3439582	Argument	NSTR ( qn -> head_exact ) -> s		3439189	1					
ANR	3439583	PtrMemberAccess	NSTR ( qn -> head_exact ) -> s		3439189	0					
ANR	3439584	CallExpression	NSTR ( qn -> head_exact )		3439189	0					
ANR	3439585	Callee	NSTR		3439189	0					
ANR	3439586	Identifier	NSTR		3439189	0					
ANR	3439587	ArgumentList	qn -> head_exact		3439189	1					
ANR	3439588	Argument	qn -> head_exact		3439189	0					
ANR	3439589	PtrMemberAccess	qn -> head_exact		3439189	0					
ANR	3439590	Identifier	qn		3439189	0					
ANR	3439591	Identifier	head_exact		3439189	1					
ANR	3439592	Identifier	s		3439189	1					
ANR	3439593	Argument	1		3439189	2					
ANR	3439594	PrimaryExpression	1		3439189	0					
ANR	3439595	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1091:1:25311:25368	3439189	3	True				
ANR	3439596	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	0		=			
ANR	3439597	Identifier	r		3439189	0					
ANR	3439598	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	1					
ANR	3439599	Callee	compile_tree_empty_check		3439189	0					
ANR	3439600	Identifier	compile_tree_empty_check		3439189	0					
ANR	3439601	ArgumentList	qn -> target		3439189	1					
ANR	3439602	Argument	qn -> target		3439189	0					
ANR	3439603	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439604	Identifier	qn		3439189	0					
ANR	3439605	Identifier	target		3439189	1					
ANR	3439606	Argument	reg		3439189	1					
ANR	3439607	Identifier	reg		3439189	0					
ANR	3439608	Argument	empty_info		3439189	2					
ANR	3439609	Identifier	empty_info		3439189	0					
ANR	3439610	IfStatement	if ( r )		3439189	4					
ANR	3439611	Condition	r	1092:5:25375:25375	3439189	0	True				
ANR	3439612	Identifier	r		3439189	0					
ANR	3439613	ReturnStatement	return r ;	1092:8:25378:25386	3439189	1	True				
ANR	3439614	Identifier	r		3439189	0					
ANR	3439615	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 ) )"	1093:1:25389:25497	3439189	5	True				
ANR	3439616	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 ) )"		3439189	0		=			
ANR	3439617	Identifier	r		3439189	0					
ANR	3439618	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 ) )"		3439189	1					
ANR	3439619	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439620	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439621	ArgumentList	reg		3439189	1					
ANR	3439622	Argument	reg		3439189	0					
ANR	3439623	Identifier	reg		3439189	0					
ANR	3439624	Argument	OP_JUMP		3439189	1					
ANR	3439625	Identifier	OP_JUMP		3439189	0					
ANR	3439626	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 )		3439189	2					
ANR	3439627	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 )		3439189	0					
ANR	3439628	UnaryOperator	-		3439189	0					
ANR	3439629	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1		3439189	1		+			
ANR	3439630	Identifier	mod_tlen		3439189	0					
ANR	3439631	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1		3439189	1		+			
ANR	3439632	CastExpression	( int ) SIZE_OP_JUMP		3439189	0					
ANR	3439633	CastTarget	int		3439189	0					
ANR	3439634	Identifier	SIZE_OP_JUMP		3439189	1					
ANR	3439635	CastExpression	( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1		3439189	1					
ANR	3439636	CastTarget	int		3439189	0					
ANR	3439637	Identifier	SIZE_OP_PUSH_OR_JUMP_EXACT1		3439189	1					
ANR	3439638	ElseStatement	else		3439189	0					
ANR	3439639	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		3439189	0					
ANR	3439640	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1096:15:25522:25553	3439189	0	True				
ANR	3439641	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		3439189	0					
ANR	3439642	Callee	IS_NOT_NULL		3439189	0					
ANR	3439643	Identifier	IS_NOT_NULL		3439189	0					
ANR	3439644	ArgumentList	qn -> next_head_exact		3439189	1					
ANR	3439645	Argument	qn -> next_head_exact		3439189	0					
ANR	3439646	PtrMemberAccess	qn -> next_head_exact		3439189	0					
ANR	3439647	Identifier	qn		3439189	0					
ANR	3439648	Identifier	next_head_exact		3439189	1					
ANR	3439649	CompoundStatement		65:49:2022:2022	3439189	1					
ANR	3439650	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_IF_PEEK_NEXT , mod_tlen + SIZE_OP_JUMP )"	1097:1:25559:25638	3439189	0	True				
ANR	3439651	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_IF_PEEK_NEXT , mod_tlen + SIZE_OP_JUMP )"		3439189	0		=			
ANR	3439652	Identifier	r		3439189	0					
ANR	3439653	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_IF_PEEK_NEXT , mod_tlen + SIZE_OP_JUMP )"		3439189	1					
ANR	3439654	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439655	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439656	ArgumentList	reg		3439189	1					
ANR	3439657	Argument	reg		3439189	0					
ANR	3439658	Identifier	reg		3439189	0					
ANR	3439659	Argument	OP_PUSH_IF_PEEK_NEXT		3439189	1					
ANR	3439660	Identifier	OP_PUSH_IF_PEEK_NEXT		3439189	0					
ANR	3439661	Argument	mod_tlen + SIZE_OP_JUMP		3439189	2					
ANR	3439662	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3439189	0		+			
ANR	3439663	Identifier	mod_tlen		3439189	0					
ANR	3439664	Identifier	SIZE_OP_JUMP		3439189	1					
ANR	3439665	IfStatement	if ( r )		3439189	1					
ANR	3439666	Condition	r	1099:5:25645:25645	3439189	0	True				
ANR	3439667	Identifier	r		3439189	0					
ANR	3439668	ReturnStatement	return r ;	1099:8:25648:25656	3439189	1	True				
ANR	3439669	Identifier	r		3439189	0					
ANR	3439670	ExpressionStatement	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"	1100:1:25659:25706	3439189	2	True				
ANR	3439671	CallExpression	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"		3439189	0					
ANR	3439672	Callee	add_bytes		3439189	0					
ANR	3439673	Identifier	add_bytes		3439189	0					
ANR	3439674	ArgumentList	reg		3439189	1					
ANR	3439675	Argument	reg		3439189	0					
ANR	3439676	Identifier	reg		3439189	0					
ANR	3439677	Argument	NSTR ( qn -> next_head_exact ) -> s		3439189	1					
ANR	3439678	PtrMemberAccess	NSTR ( qn -> next_head_exact ) -> s		3439189	0					
ANR	3439679	CallExpression	NSTR ( qn -> next_head_exact )		3439189	0					
ANR	3439680	Callee	NSTR		3439189	0					
ANR	3439681	Identifier	NSTR		3439189	0					
ANR	3439682	ArgumentList	qn -> next_head_exact		3439189	1					
ANR	3439683	Argument	qn -> next_head_exact		3439189	0					
ANR	3439684	PtrMemberAccess	qn -> next_head_exact		3439189	0					
ANR	3439685	Identifier	qn		3439189	0					
ANR	3439686	Identifier	next_head_exact		3439189	1					
ANR	3439687	Identifier	s		3439189	1					
ANR	3439688	Argument	1		3439189	2					
ANR	3439689	PrimaryExpression	1		3439189	0					
ANR	3439690	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1101:1:25709:25766	3439189	3	True				
ANR	3439691	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	0		=			
ANR	3439692	Identifier	r		3439189	0					
ANR	3439693	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	1					
ANR	3439694	Callee	compile_tree_empty_check		3439189	0					
ANR	3439695	Identifier	compile_tree_empty_check		3439189	0					
ANR	3439696	ArgumentList	qn -> target		3439189	1					
ANR	3439697	Argument	qn -> target		3439189	0					
ANR	3439698	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439699	Identifier	qn		3439189	0					
ANR	3439700	Identifier	target		3439189	1					
ANR	3439701	Argument	reg		3439189	1					
ANR	3439702	Identifier	reg		3439189	0					
ANR	3439703	Argument	empty_info		3439189	2					
ANR	3439704	Identifier	empty_info		3439189	0					
ANR	3439705	IfStatement	if ( r )		3439189	4					
ANR	3439706	Condition	r	1102:5:25773:25773	3439189	0	True				
ANR	3439707	Identifier	r		3439189	0					
ANR	3439708	ReturnStatement	return r ;	1102:8:25776:25784	3439189	1	True				
ANR	3439709	Identifier	r		3439189	0					
ANR	3439710	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT ) )"	1103:1:25787:25902	3439189	5	True				
ANR	3439711	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT ) )"		3439189	0		=			
ANR	3439712	Identifier	r		3439189	0					
ANR	3439713	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT ) )"		3439189	1					
ANR	3439714	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439715	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439716	ArgumentList	reg		3439189	1					
ANR	3439717	Argument	reg		3439189	0					
ANR	3439718	Identifier	reg		3439189	0					
ANR	3439719	Argument	OP_JUMP		3439189	1					
ANR	3439720	Identifier	OP_JUMP		3439189	0					
ANR	3439721	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT )		3439189	2					
ANR	3439722	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT )		3439189	0					
ANR	3439723	UnaryOperator	-		3439189	0					
ANR	3439724	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT		3439189	1		+			
ANR	3439725	Identifier	mod_tlen		3439189	0					
ANR	3439726	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT		3439189	1		+			
ANR	3439727	CastExpression	( int ) SIZE_OP_JUMP		3439189	0					
ANR	3439728	CastTarget	int		3439189	0					
ANR	3439729	Identifier	SIZE_OP_JUMP		3439189	1					
ANR	3439730	CastExpression	( int ) SIZE_OP_PUSH_IF_PEEK_NEXT		3439189	1					
ANR	3439731	CastTarget	int		3439189	0					
ANR	3439732	Identifier	SIZE_OP_PUSH_IF_PEEK_NEXT		3439189	1					
ANR	3439733	ElseStatement	else		3439189	0					
ANR	3439734	CompoundStatement		75:11:2389:2389	3439189	0					
ANR	3439735	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"	1107:1:25926:25988	3439189	0	True				
ANR	3439736	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		3439189	0		=			
ANR	3439737	Identifier	r		3439189	0					
ANR	3439738	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		3439189	1					
ANR	3439739	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439740	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439741	ArgumentList	reg		3439189	1					
ANR	3439742	Argument	reg		3439189	0					
ANR	3439743	Identifier	reg		3439189	0					
ANR	3439744	Argument	OP_PUSH		3439189	1					
ANR	3439745	Identifier	OP_PUSH		3439189	0					
ANR	3439746	Argument	mod_tlen + SIZE_OP_JUMP		3439189	2					
ANR	3439747	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		3439189	0		+			
ANR	3439748	Identifier	mod_tlen		3439189	0					
ANR	3439749	Identifier	SIZE_OP_JUMP		3439189	1					
ANR	3439750	IfStatement	if ( r )		3439189	1					
ANR	3439751	Condition	r	1108:5:25995:25995	3439189	0	True				
ANR	3439752	Identifier	r		3439189	0					
ANR	3439753	ReturnStatement	return r ;	1108:8:25998:26006	3439189	1	True				
ANR	3439754	Identifier	r		3439189	0					
ANR	3439755	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1109:1:26009:26066	3439189	2	True				
ANR	3439756	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	0		=			
ANR	3439757	Identifier	r		3439189	0					
ANR	3439758	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	1					
ANR	3439759	Callee	compile_tree_empty_check		3439189	0					
ANR	3439760	Identifier	compile_tree_empty_check		3439189	0					
ANR	3439761	ArgumentList	qn -> target		3439189	1					
ANR	3439762	Argument	qn -> target		3439189	0					
ANR	3439763	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439764	Identifier	qn		3439189	0					
ANR	3439765	Identifier	target		3439189	1					
ANR	3439766	Argument	reg		3439189	1					
ANR	3439767	Identifier	reg		3439189	0					
ANR	3439768	Argument	empty_info		3439189	2					
ANR	3439769	Identifier	empty_info		3439189	0					
ANR	3439770	IfStatement	if ( r )		3439189	3					
ANR	3439771	Condition	r	1110:5:26073:26073	3439189	0	True				
ANR	3439772	Identifier	r		3439189	0					
ANR	3439773	ReturnStatement	return r ;	1110:8:26076:26084	3439189	1	True				
ANR	3439774	Identifier	r		3439189	0					
ANR	3439775	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH ) )"	1111:1:26087:26186	3439189	4	True				
ANR	3439776	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH ) )"		3439189	0		=			
ANR	3439777	Identifier	r		3439189	0					
ANR	3439778	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH ) )"		3439189	1					
ANR	3439779	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439780	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439781	ArgumentList	reg		3439189	1					
ANR	3439782	Argument	reg		3439189	0					
ANR	3439783	Identifier	reg		3439189	0					
ANR	3439784	Argument	OP_JUMP		3439189	1					
ANR	3439785	Identifier	OP_JUMP		3439189	0					
ANR	3439786	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH )		3439189	2					
ANR	3439787	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH )		3439189	0					
ANR	3439788	UnaryOperator	-		3439189	0					
ANR	3439789	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH		3439189	1		+			
ANR	3439790	Identifier	mod_tlen		3439189	0					
ANR	3439791	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH		3439189	1		+			
ANR	3439792	CastExpression	( int ) SIZE_OP_JUMP		3439189	0					
ANR	3439793	CastTarget	int		3439189	0					
ANR	3439794	Identifier	SIZE_OP_JUMP		3439189	1					
ANR	3439795	CastExpression	( int ) SIZE_OP_PUSH		3439189	1					
ANR	3439796	CastTarget	int		3439189	0					
ANR	3439797	Identifier	SIZE_OP_PUSH		3439189	1					
ANR	3439798	ElseStatement	else		3439189	0					
ANR	3439799	CompoundStatement		84:9:2677:2677	3439189	0					
ANR	3439800	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"	1116:6:26219:26266	3439189	0	True				
ANR	3439801	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		3439189	0		=			
ANR	3439802	Identifier	r		3439189	0					
ANR	3439803	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		3439189	1					
ANR	3439804	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439805	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439806	ArgumentList	reg		3439189	1					
ANR	3439807	Argument	reg		3439189	0					
ANR	3439808	Identifier	reg		3439189	0					
ANR	3439809	Argument	OP_JUMP		3439189	1					
ANR	3439810	Identifier	OP_JUMP		3439189	0					
ANR	3439811	Argument	mod_tlen		3439189	2					
ANR	3439812	Identifier	mod_tlen		3439189	0					
ANR	3439813	IfStatement	if ( r )		3439189	1					
ANR	3439814	Condition	r	1117:10:26278:26278	3439189	0	True				
ANR	3439815	Identifier	r		3439189	0					
ANR	3439816	ReturnStatement	return r ;	1117:13:26281:26289	3439189	1	True				
ANR	3439817	Identifier	r		3439189	0					
ANR	3439818	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1118:6:26297:26354	3439189	2	True				
ANR	3439819	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	0		=			
ANR	3439820	Identifier	r		3439189	0					
ANR	3439821	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		3439189	1					
ANR	3439822	Callee	compile_tree_empty_check		3439189	0					
ANR	3439823	Identifier	compile_tree_empty_check		3439189	0					
ANR	3439824	ArgumentList	qn -> target		3439189	1					
ANR	3439825	Argument	qn -> target		3439189	0					
ANR	3439826	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439827	Identifier	qn		3439189	0					
ANR	3439828	Identifier	target		3439189	1					
ANR	3439829	Argument	reg		3439189	1					
ANR	3439830	Identifier	reg		3439189	0					
ANR	3439831	Argument	empty_info		3439189	2					
ANR	3439832	Identifier	empty_info		3439189	0					
ANR	3439833	IfStatement	if ( r )		3439189	3					
ANR	3439834	Condition	r	1119:10:26366:26366	3439189	0	True				
ANR	3439835	Identifier	r		3439189	0					
ANR	3439836	ReturnStatement	return r ;	1119:13:26369:26377	3439189	1	True				
ANR	3439837	Identifier	r		3439189	0					
ANR	3439838	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"	1120:6:26385:26456	3439189	4	True				
ANR	3439839	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		3439189	0		=			
ANR	3439840	Identifier	r		3439189	0					
ANR	3439841	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		3439189	1					
ANR	3439842	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439843	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439844	ArgumentList	reg		3439189	1					
ANR	3439845	Argument	reg		3439189	0					
ANR	3439846	Identifier	reg		3439189	0					
ANR	3439847	Argument	OP_PUSH		3439189	1					
ANR	3439848	Identifier	OP_PUSH		3439189	0					
ANR	3439849	Argument	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		3439189	2					
ANR	3439850	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		3439189	0					
ANR	3439851	UnaryOperator	-		3439189	0					
ANR	3439852	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_PUSH		3439189	1		+			
ANR	3439853	Identifier	mod_tlen		3439189	0					
ANR	3439854	CastExpression	( int ) SIZE_OP_PUSH		3439189	1					
ANR	3439855	CastTarget	int		3439189	0					
ANR	3439856	Identifier	SIZE_OP_PUSH		3439189	1					
ANR	3439857	ElseStatement	else		3439189	0					
ANR	3439858	IfStatement	if ( qn -> upper == 0 && qn -> is_refered != 0 )		3439189	0					
ANR	3439859	Condition	qn -> upper == 0 && qn -> is_refered != 0	1123:11:26479:26515	3439189	0	True				
ANR	3439860	AndExpression	qn -> upper == 0 && qn -> is_refered != 0		3439189	0		&&			
ANR	3439861	EqualityExpression	qn -> upper == 0		3439189	0		==			
ANR	3439862	PtrMemberAccess	qn -> upper		3439189	0					
ANR	3439863	Identifier	qn		3439189	0					
ANR	3439864	Identifier	upper		3439189	1					
ANR	3439865	PrimaryExpression	0		3439189	1					
ANR	3439866	EqualityExpression	qn -> is_refered != 0		3439189	1		!=			
ANR	3439867	PtrMemberAccess	qn -> is_refered		3439189	0					
ANR	3439868	Identifier	qn		3439189	0					
ANR	3439869	Identifier	is_refered		3439189	1					
ANR	3439870	PrimaryExpression	0		3439189	1					
ANR	3439871	CompoundStatement		92:50:2984:2984	3439189	1					
ANR	3439872	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	1124:4:26544:26587	3439189	0	True				
ANR	3439873	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3439189	0		=			
ANR	3439874	Identifier	r		3439189	0					
ANR	3439875	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3439189	1					
ANR	3439876	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439877	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439878	ArgumentList	reg		3439189	1					
ANR	3439879	Argument	reg		3439189	0					
ANR	3439880	Identifier	reg		3439189	0					
ANR	3439881	Argument	OP_JUMP		3439189	1					
ANR	3439882	Identifier	OP_JUMP		3439189	0					
ANR	3439883	Argument	tlen		3439189	2					
ANR	3439884	Identifier	tlen		3439189	0					
ANR	3439885	IfStatement	if ( r )		3439189	1					
ANR	3439886	Condition	r	1125:8:26597:26597	3439189	0	True				
ANR	3439887	Identifier	r		3439189	0					
ANR	3439888	ReturnStatement	return r ;	1125:11:26600:26608	3439189	1	True				
ANR	3439889	Identifier	r		3439189	0					
ANR	3439890	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1126:4:26614:26647	3439189	2	True				
ANR	3439891	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		3439189	0		=			
ANR	3439892	Identifier	r		3439189	0					
ANR	3439893	CallExpression	"compile_tree ( qn -> target , reg )"		3439189	1					
ANR	3439894	Callee	compile_tree		3439189	0					
ANR	3439895	Identifier	compile_tree		3439189	0					
ANR	3439896	ArgumentList	qn -> target		3439189	1					
ANR	3439897	Argument	qn -> target		3439189	0					
ANR	3439898	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439899	Identifier	qn		3439189	0					
ANR	3439900	Identifier	target		3439189	1					
ANR	3439901	Argument	reg		3439189	1					
ANR	3439902	Identifier	reg		3439189	0					
ANR	3439903	ElseStatement	else		3439189	0					
ANR	3439904	IfStatement	if ( ! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		3439189	0					
ANR	3439905	Condition	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )	1128:11:26664:26820	3439189	0	True				
ANR	3439906	AndExpression	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		3439189	0		&&			
ANR	3439907	UnaryOperationExpression	! infinite		3439189	0					
ANR	3439908	UnaryOperator	!		3439189	0					
ANR	3439909	Identifier	infinite		3439189	1					
ANR	3439910	AndExpression	qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		3439189	1		&&			
ANR	3439911	PtrMemberAccess	qn -> greedy		3439189	0					
ANR	3439912	Identifier	qn		3439189	0					
ANR	3439913	Identifier	greedy		3439189	1					
ANR	3439914	OrExpression	qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1		||			
ANR	3439915	EqualityExpression	qn -> upper == 1		3439189	0		==			
ANR	3439916	PtrMemberAccess	qn -> upper		3439189	0					
ANR	3439917	Identifier	qn		3439189	0					
ANR	3439918	Identifier	upper		3439189	1					
ANR	3439919	PrimaryExpression	1		3439189	1					
ANR	3439920	RelationalExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1		<=			
ANR	3439921	MultiplicativeExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper		3439189	0		*			
ANR	3439922	AdditiveExpression	tlen + SIZE_OP_PUSH		3439189	0		+			
ANR	3439923	Identifier	tlen		3439189	0					
ANR	3439924	Identifier	SIZE_OP_PUSH		3439189	1					
ANR	3439925	PtrMemberAccess	qn -> upper		3439189	1					
ANR	3439926	Identifier	qn		3439189	0					
ANR	3439927	Identifier	upper		3439189	1					
ANR	3439928	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		3439189	1					
ANR	3439929	CompoundStatement		100:4:3295:3324	3439189	1					
ANR	3439930	IdentifierDeclStatement	int n = qn -> upper - qn -> lower ;	1131:4:26829:26858	3439189	0	True				
ANR	3439931	IdentifierDecl	n = qn -> upper - qn -> lower		3439189	0					
ANR	3439932	IdentifierDeclType	int		3439189	0					
ANR	3439933	Identifier	n		3439189	1					
ANR	3439934	AssignmentExpression	n = qn -> upper - qn -> lower		3439189	2		=			
ANR	3439935	Identifier	n		3439189	0					
ANR	3439936	AdditiveExpression	qn -> upper - qn -> lower		3439189	1		-			
ANR	3439937	PtrMemberAccess	qn -> upper		3439189	0					
ANR	3439938	Identifier	qn		3439189	0					
ANR	3439939	Identifier	upper		3439189	1					
ANR	3439940	PtrMemberAccess	qn -> lower		3439189	1					
ANR	3439941	Identifier	qn		3439189	0					
ANR	3439942	Identifier	lower		3439189	1					
ANR	3439943	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1133:4:26865:26917	3439189	1	True				
ANR	3439944	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3439189	0		=			
ANR	3439945	Identifier	r		3439189	0					
ANR	3439946	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3439189	1					
ANR	3439947	Callee	compile_tree_n_times		3439189	0					
ANR	3439948	Identifier	compile_tree_n_times		3439189	0					
ANR	3439949	ArgumentList	qn -> target		3439189	1					
ANR	3439950	Argument	qn -> target		3439189	0					
ANR	3439951	PtrMemberAccess	qn -> target		3439189	0					
ANR	3439952	Identifier	qn		3439189	0					
ANR	3439953	Identifier	target		3439189	1					
ANR	3439954	Argument	qn -> lower		3439189	1					
ANR	3439955	PtrMemberAccess	qn -> lower		3439189	0					
ANR	3439956	Identifier	qn		3439189	0					
ANR	3439957	Identifier	lower		3439189	1					
ANR	3439958	Argument	reg		3439189	2					
ANR	3439959	Identifier	reg		3439189	0					
ANR	3439960	IfStatement	if ( r )		3439189	2					
ANR	3439961	Condition	r	1134:8:26927:26927	3439189	0	True				
ANR	3439962	Identifier	r		3439189	0					
ANR	3439963	ReturnStatement	return r ;	1134:11:26930:26938	3439189	1	True				
ANR	3439964	Identifier	r		3439189	0					
ANR	3439965	ForStatement	for ( i = 0 ; i < n ; i ++ )		3439189	3					
ANR	3439966	ForInit	i = 0 ;	1136:9:26950:26955	3439189	0	True				
ANR	3439967	AssignmentExpression	i = 0		3439189	0		=			
ANR	3439968	Identifier	i		3439189	0					
ANR	3439969	PrimaryExpression	0		3439189	1					
ANR	3439970	Condition	i < n	1136:16:26957:26961	3439189	1	True				
ANR	3439971	RelationalExpression	i < n		3439189	0		<			
ANR	3439972	Identifier	i		3439189	0					
ANR	3439973	Identifier	n		3439189	1					
ANR	3439974	PostIncDecOperationExpression	i ++	1136:23:26964:26966	3439189	2	True				
ANR	3439975	Identifier	i		3439189	0					
ANR	3439976	IncDec	++		3439189	1					
ANR	3439977	CompoundStatement		105:28:3435:3435	3439189	3					
ANR	3439978	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , ( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH )"	1137:6:26977:27065	3439189	0	True				
ANR	3439979	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , ( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH )"		3439189	0		=			
ANR	3439980	Identifier	r		3439189	0					
ANR	3439981	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , ( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH )"		3439189	1					
ANR	3439982	Callee	add_opcode_rel_addr		3439189	0					
ANR	3439983	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3439984	ArgumentList	reg		3439189	1					
ANR	3439985	Argument	reg		3439189	0					
ANR	3439986	Identifier	reg		3439189	0					
ANR	3439987	Argument	OP_PUSH		3439189	1					
ANR	3439988	Identifier	OP_PUSH		3439189	0					
ANR	3439989	Argument	( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH		3439189	2					
ANR	3439990	AdditiveExpression	( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH		3439189	0		+			
ANR	3439991	MultiplicativeExpression	( n - i ) * tlen		3439189	0		*			
ANR	3439992	AdditiveExpression	n - i		3439189	0		-			
ANR	3439993	Identifier	n		3439189	0					
ANR	3439994	Identifier	i		3439189	1					
ANR	3439995	Identifier	tlen		3439189	1					
ANR	3439996	MultiplicativeExpression	( n - i - 1 ) * SIZE_OP_PUSH		3439189	1		*			
ANR	3439997	AdditiveExpression	n - i - 1		3439189	0		-			
ANR	3439998	Identifier	n		3439189	0					
ANR	3439999	AdditiveExpression	i - 1		3439189	1		-			
ANR	3440000	Identifier	i		3439189	0					
ANR	3440001	PrimaryExpression	1		3439189	1					
ANR	3440002	Identifier	SIZE_OP_PUSH		3439189	1					
ANR	3440003	IfStatement	if ( r )		3439189	1					
ANR	3440004	Condition	r	1139:10:27077:27077	3439189	0	True				
ANR	3440005	Identifier	r		3439189	0					
ANR	3440006	ReturnStatement	return r ;	1139:13:27080:27088	3439189	1	True				
ANR	3440007	Identifier	r		3439189	0					
ANR	3440008	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1140:6:27096:27129	3439189	2	True				
ANR	3440009	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		3439189	0		=			
ANR	3440010	Identifier	r		3439189	0					
ANR	3440011	CallExpression	"compile_tree ( qn -> target , reg )"		3439189	1					
ANR	3440012	Callee	compile_tree		3439189	0					
ANR	3440013	Identifier	compile_tree		3439189	0					
ANR	3440014	ArgumentList	qn -> target		3439189	1					
ANR	3440015	Argument	qn -> target		3439189	0					
ANR	3440016	PtrMemberAccess	qn -> target		3439189	0					
ANR	3440017	Identifier	qn		3439189	0					
ANR	3440018	Identifier	target		3439189	1					
ANR	3440019	Argument	reg		3439189	1					
ANR	3440020	Identifier	reg		3439189	0					
ANR	3440021	IfStatement	if ( r )		3439189	3					
ANR	3440022	Condition	r	1141:10:27141:27141	3439189	0	True				
ANR	3440023	Identifier	r		3439189	0					
ANR	3440024	ReturnStatement	return r ;	1141:13:27144:27152	3439189	1	True				
ANR	3440025	Identifier	r		3439189	0					
ANR	3440026	ElseStatement	else		3439189	0					
ANR	3440027	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		3439189	0					
ANR	3440028	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	1144:11:27175:27221	3439189	0	True				
ANR	3440029	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		3439189	0		&&			
ANR	3440030	UnaryOperationExpression	! qn -> greedy		3439189	0					
ANR	3440031	UnaryOperator	!		3439189	0					
ANR	3440032	PtrMemberAccess	qn -> greedy		3439189	1					
ANR	3440033	Identifier	qn		3439189	0					
ANR	3440034	Identifier	greedy		3439189	1					
ANR	3440035	AndExpression	qn -> upper == 1 && qn -> lower == 0		3439189	1		&&			
ANR	3440036	EqualityExpression	qn -> upper == 1		3439189	0		==			
ANR	3440037	PtrMemberAccess	qn -> upper		3439189	0					
ANR	3440038	Identifier	qn		3439189	0					
ANR	3440039	Identifier	upper		3439189	1					
ANR	3440040	PrimaryExpression	1		3439189	1					
ANR	3440041	EqualityExpression	qn -> lower == 0		3439189	1		==			
ANR	3440042	PtrMemberAccess	qn -> lower		3439189	0					
ANR	3440043	Identifier	qn		3439189	0					
ANR	3440044	Identifier	lower		3439189	1					
ANR	3440045	PrimaryExpression	0		3439189	1					
ANR	3440046	CompoundStatement		113:60:3690:3690	3439189	1					
ANR	3440047	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"	1145:4:27241:27292	3439189	0	True				
ANR	3440048	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		3439189	0		=			
ANR	3440049	Identifier	r		3439189	0					
ANR	3440050	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		3439189	1					
ANR	3440051	Callee	add_opcode_rel_addr		3439189	0					
ANR	3440052	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3440053	ArgumentList	reg		3439189	1					
ANR	3440054	Argument	reg		3439189	0					
ANR	3440055	Identifier	reg		3439189	0					
ANR	3440056	Argument	OP_PUSH		3439189	1					
ANR	3440057	Identifier	OP_PUSH		3439189	0					
ANR	3440058	Argument	SIZE_OP_JUMP		3439189	2					
ANR	3440059	Identifier	SIZE_OP_JUMP		3439189	0					
ANR	3440060	IfStatement	if ( r )		3439189	1					
ANR	3440061	Condition	r	1146:8:27302:27302	3439189	0	True				
ANR	3440062	Identifier	r		3439189	0					
ANR	3440063	ReturnStatement	return r ;	1146:11:27305:27313	3439189	1	True				
ANR	3440064	Identifier	r		3439189	0					
ANR	3440065	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	1147:4:27319:27362	3439189	2	True				
ANR	3440066	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3439189	0		=			
ANR	3440067	Identifier	r		3439189	0					
ANR	3440068	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		3439189	1					
ANR	3440069	Callee	add_opcode_rel_addr		3439189	0					
ANR	3440070	Identifier	add_opcode_rel_addr		3439189	0					
ANR	3440071	ArgumentList	reg		3439189	1					
ANR	3440072	Argument	reg		3439189	0					
ANR	3440073	Identifier	reg		3439189	0					
ANR	3440074	Argument	OP_JUMP		3439189	1					
ANR	3440075	Identifier	OP_JUMP		3439189	0					
ANR	3440076	Argument	tlen		3439189	2					
ANR	3440077	Identifier	tlen		3439189	0					
ANR	3440078	IfStatement	if ( r )		3439189	3					
ANR	3440079	Condition	r	1148:8:27372:27372	3439189	0	True				
ANR	3440080	Identifier	r		3439189	0					
ANR	3440081	ReturnStatement	return r ;	1148:11:27375:27383	3439189	1	True				
ANR	3440082	Identifier	r		3439189	0					
ANR	3440083	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1149:4:27389:27422	3439189	4	True				
ANR	3440084	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		3439189	0		=			
ANR	3440085	Identifier	r		3439189	0					
ANR	3440086	CallExpression	"compile_tree ( qn -> target , reg )"		3439189	1					
ANR	3440087	Callee	compile_tree		3439189	0					
ANR	3440088	Identifier	compile_tree		3439189	0					
ANR	3440089	ArgumentList	qn -> target		3439189	1					
ANR	3440090	Argument	qn -> target		3439189	0					
ANR	3440091	PtrMemberAccess	qn -> target		3439189	0					
ANR	3440092	Identifier	qn		3439189	0					
ANR	3440093	Identifier	target		3439189	1					
ANR	3440094	Argument	reg		3439189	1					
ANR	3440095	Identifier	reg		3439189	0					
ANR	3440096	ElseStatement	else		3439189	0					
ANR	3440097	CompoundStatement		120:7:3901:3901	3439189	0					
ANR	3440098	ExpressionStatement	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"	1152:4:27441:27501	3439189	0	True				
ANR	3440099	AssignmentExpression	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		3439189	0		=			
ANR	3440100	Identifier	r		3439189	0					
ANR	3440101	CallExpression	"compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		3439189	1					
ANR	3440102	Callee	compile_range_repeat_node		3439189	0					
ANR	3440103	Identifier	compile_range_repeat_node		3439189	0					
ANR	3440104	ArgumentList	qn		3439189	1					
ANR	3440105	Argument	qn		3439189	0					
ANR	3440106	Identifier	qn		3439189	0					
ANR	3440107	Argument	mod_tlen		3439189	1					
ANR	3440108	Identifier	mod_tlen		3439189	0					
ANR	3440109	Argument	empty_info		3439189	2					
ANR	3440110	Identifier	empty_info		3439189	0					
ANR	3440111	Argument	reg		3439189	3					
ANR	3440112	Identifier	reg		3439189	0					
ANR	3440113	ReturnStatement	return r ;	1154:2:27509:27517	3439189	8	True				
ANR	3440114	Identifier	r		3439189	0					
ANR	3440115	ReturnType	static int		3439189	1					
ANR	3440116	Identifier	compile_quantifier_node		3439189	2					
ANR	3440117	ParameterList	"QtfrNode * qn , regex_t * reg"		3439189	3					
ANR	3440118	Parameter	QtfrNode * qn	1031:24:23505:23516	3439189	0	True				
ANR	3440119	ParameterType	QtfrNode *		3439189	0					
ANR	3440120	Identifier	qn		3439189	1					
ANR	3440121	Parameter	regex_t * reg	1031:38:23519:23530	3439189	1	True				
ANR	3440122	ParameterType	regex_t *		3439189	0					
ANR	3440123	Identifier	reg		3439189	1					
ANR	3440124	CFGEntryNode	ENTRY		3439189		True				
ANR	3440125	CFGExitNode	EXIT		3439189		True				
ANR	3440126	Symbol	OP_ANYCHAR_STAR_PEEK_NEXT		3439189						
ANR	3440127	Symbol	compile_range_repeat_node		3439189						
ANR	3440128	Symbol	OP_ANYCHAR_ML_STAR_PEEK_NEXT		3439189						
ANR	3440129	Symbol	reg		3439189						
ANR	3440130	Symbol	reg -> options		3439189						
ANR	3440131	Symbol	tlen		3439189						
ANR	3440132	Symbol	OP_ANYCHAR_STAR		3439189						
ANR	3440133	Symbol	IS_REPEAT_INFINITE		3439189						
ANR	3440134	Symbol	add_opcode		3439189						
ANR	3440135	Symbol	SIZE_OP_NULL_CHECK_START		3439189						
ANR	3440136	Symbol	SIZE_OP_PUSH_IF_PEEK_NEXT		3439189						
ANR	3440137	Symbol	qn		3439189						
ANR	3440138	Symbol	SIZE_OP_JUMP		3439189						
ANR	3440139	Symbol	OP_JUMP		3439189						
ANR	3440140	Symbol	OP_ANYCHAR_ML_STAR		3439189						
ANR	3440141	Symbol	NSTR		3439189						
ANR	3440142	Symbol	* NSTR		3439189						
ANR	3440143	Symbol	qn -> target		3439189						
ANR	3440144	Symbol	OP_PUSH_OR_JUMP_EXACT1		3439189						
ANR	3440145	Symbol	qn -> upper		3439189						
ANR	3440146	Symbol	OP_PUSH_IF_PEEK_NEXT		3439189						
ANR	3440147	Symbol	qn -> is_refered		3439189						
ANR	3440148	Symbol	NSTR ( qn -> next_head_exact ) -> s		3439189						
ANR	3440149	Symbol	NSTR ( qn -> head_exact ) -> s		3439189						
ANR	3440150	Symbol	empty_info		3439189						
ANR	3440151	Symbol	SIZE_OP_PUSH_OR_JUMP_EXACT1		3439189						
ANR	3440152	Symbol	* qn		3439189						
ANR	3440153	Symbol	qn -> target_empty_info		3439189						
ANR	3440154	Symbol	add_bytes		3439189						
ANR	3440155	Symbol	qn -> greedy		3439189						
ANR	3440156	Symbol	IS_NOT_NULL		3439189						
ANR	3440157	Symbol	infinite		3439189						
ANR	3440158	Symbol	compile_tree_n_times		3439189						
ANR	3440159	Symbol	OP_PUSH		3439189						
ANR	3440160	Symbol	compile_tree_empty_check		3439189						
ANR	3440161	Symbol	qn -> next_head_exact		3439189						
ANR	3440162	Symbol	SIZE_OP_NULL_CHECK_END		3439189						
ANR	3440163	Symbol	qn -> lower		3439189						
ANR	3440164	Symbol	add_opcode_rel_addr		3439189						
ANR	3440165	Symbol	compile_length_tree		3439189						
ANR	3440166	Symbol	i		3439189						
ANR	3440167	Symbol	SIZE_OP_PUSH		3439189						
ANR	3440168	Symbol	is_anychar_star_quantifier		3439189						
ANR	3440169	Symbol	qn -> head_exact		3439189						
ANR	3440170	Symbol	n		3439189						
ANR	3440171	Symbol	r		3439189						
ANR	3440172	Symbol	QUANTIFIER_EXPAND_LIMIT_SIZE		3439189						
ANR	3440173	Symbol	compile_tree		3439189						
ANR	3440174	Symbol	mod_tlen		3439189						
ANR	3440175	Symbol	IS_MULTILINE		3439189						
ANR	3440176	Symbol	* reg		3439189						
ANR	3440177	Function	compile_length_option_node	1158:0:27567:28012							
ANR	3440178	FunctionDef	"compile_length_option_node (EncloseNode * node , regex_t * reg)"		3440177	0					
ANR	3440179	CompoundStatement		1160:0:27638:28012	3440177	0					
ANR	3440180	IdentifierDeclStatement	int tlen ;	1161:2:27642:27650	3440177	0	True				
ANR	3440181	IdentifierDecl	tlen		3440177	0					
ANR	3440182	IdentifierDeclType	int		3440177	0					
ANR	3440183	Identifier	tlen		3440177	1					
ANR	3440184	IdentifierDeclStatement	OnigOptionType prev = reg -> options ;	1162:2:27654:27688	3440177	1	True				
ANR	3440185	IdentifierDecl	prev = reg -> options		3440177	0					
ANR	3440186	IdentifierDeclType	OnigOptionType		3440177	0					
ANR	3440187	Identifier	prev		3440177	1					
ANR	3440188	AssignmentExpression	prev = reg -> options		3440177	2		=			
ANR	3440189	Identifier	prev		3440177	0					
ANR	3440190	PtrMemberAccess	reg -> options		3440177	1					
ANR	3440191	Identifier	reg		3440177	0					
ANR	3440192	Identifier	options		3440177	1					
ANR	3440193	ExpressionStatement	reg -> options = node -> option	1164:2:27693:27720	3440177	2	True				
ANR	3440194	AssignmentExpression	reg -> options = node -> option		3440177	0		=			
ANR	3440195	PtrMemberAccess	reg -> options		3440177	0					
ANR	3440196	Identifier	reg		3440177	0					
ANR	3440197	Identifier	options		3440177	1					
ANR	3440198	PtrMemberAccess	node -> option		3440177	1					
ANR	3440199	Identifier	node		3440177	0					
ANR	3440200	Identifier	option		3440177	1					
ANR	3440201	ExpressionStatement	"tlen = compile_length_tree ( node -> target , reg )"	1165:2:27724:27769	3440177	3	True				
ANR	3440202	AssignmentExpression	"tlen = compile_length_tree ( node -> target , reg )"		3440177	0		=			
ANR	3440203	Identifier	tlen		3440177	0					
ANR	3440204	CallExpression	"compile_length_tree ( node -> target , reg )"		3440177	1					
ANR	3440205	Callee	compile_length_tree		3440177	0					
ANR	3440206	Identifier	compile_length_tree		3440177	0					
ANR	3440207	ArgumentList	node -> target		3440177	1					
ANR	3440208	Argument	node -> target		3440177	0					
ANR	3440209	PtrMemberAccess	node -> target		3440177	0					
ANR	3440210	Identifier	node		3440177	0					
ANR	3440211	Identifier	target		3440177	1					
ANR	3440212	Argument	reg		3440177	1					
ANR	3440213	Identifier	reg		3440177	0					
ANR	3440214	ExpressionStatement	reg -> options = prev	1166:2:27773:27792	3440177	4	True				
ANR	3440215	AssignmentExpression	reg -> options = prev		3440177	0		=			
ANR	3440216	PtrMemberAccess	reg -> options		3440177	0					
ANR	3440217	Identifier	reg		3440177	0					
ANR	3440218	Identifier	options		3440177	1					
ANR	3440219	Identifier	prev		3440177	1					
ANR	3440220	IfStatement	if ( tlen < 0 )		3440177	5					
ANR	3440221	Condition	tlen < 0	1168:6:27801:27808	3440177	0	True				
ANR	3440222	RelationalExpression	tlen < 0		3440177	0		<			
ANR	3440223	Identifier	tlen		3440177	0					
ANR	3440224	PrimaryExpression	0		3440177	1					
ANR	3440225	ReturnStatement	return tlen ;	1168:16:27811:27822	3440177	1	True				
ANR	3440226	Identifier	tlen		3440177	0					
ANR	3440227	IfStatement	if ( IS_DYNAMIC_OPTION ( prev ^ node -> option ) )		3440177	6					
ANR	3440228	Condition	IS_DYNAMIC_OPTION ( prev ^ node -> option )	1170:6:27831:27868	3440177	0	True				
ANR	3440229	CallExpression	IS_DYNAMIC_OPTION ( prev ^ node -> option )		3440177	0					
ANR	3440230	Callee	IS_DYNAMIC_OPTION		3440177	0					
ANR	3440231	Identifier	IS_DYNAMIC_OPTION		3440177	0					
ANR	3440232	ArgumentList	prev ^ node -> option		3440177	1					
ANR	3440233	Argument	prev ^ node -> option		3440177	0					
ANR	3440234	ExclusiveOrExpression	prev ^ node -> option		3440177	0		^			
ANR	3440235	Identifier	prev		3440177	0					
ANR	3440236	PtrMemberAccess	node -> option		3440177	1					
ANR	3440237	Identifier	node		3440177	0					
ANR	3440238	Identifier	option		3440177	1					
ANR	3440239	CompoundStatement		11:46:232:232	3440177	1					
ANR	3440240	ReturnStatement	return SIZE_OP_SET_OPTION_PUSH + SIZE_OP_SET_OPTION + SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION ;	1171:4:27877:27982	3440177	0	True				
ANR	3440241	AdditiveExpression	SIZE_OP_SET_OPTION_PUSH + SIZE_OP_SET_OPTION + SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION		3440177	0		+			
ANR	3440242	Identifier	SIZE_OP_SET_OPTION_PUSH		3440177	0					
ANR	3440243	AdditiveExpression	SIZE_OP_SET_OPTION + SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION		3440177	1		+			
ANR	3440244	Identifier	SIZE_OP_SET_OPTION		3440177	0					
ANR	3440245	AdditiveExpression	SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION		3440177	1		+			
ANR	3440246	Identifier	SIZE_OP_FAIL		3440177	0					
ANR	3440247	AdditiveExpression	tlen + SIZE_OP_SET_OPTION		3440177	1		+			
ANR	3440248	Identifier	tlen		3440177	0					
ANR	3440249	Identifier	SIZE_OP_SET_OPTION		3440177	1					
ANR	3440250	ElseStatement	else		3440177	0					
ANR	3440251	ReturnStatement	return tlen ;	1175:4:27999:28010	3440177	0	True				
ANR	3440252	Identifier	tlen		3440177	0					
ANR	3440253	ReturnType	static int		3440177	1					
ANR	3440254	Identifier	compile_length_option_node		3440177	2					
ANR	3440255	ParameterList	"EncloseNode * node , regex_t * reg"		3440177	3					
ANR	3440256	Parameter	EncloseNode * node	1159:27:27605:27621	3440177	0	True				
ANR	3440257	ParameterType	EncloseNode *		3440177	0					
ANR	3440258	Identifier	node		3440177	1					
ANR	3440259	Parameter	regex_t * reg	1159:46:27624:27635	3440177	1	True				
ANR	3440260	ParameterType	regex_t *		3440177	0					
ANR	3440261	Identifier	reg		3440177	1					
ANR	3440262	CFGEntryNode	ENTRY		3440177		True				
ANR	3440263	CFGExitNode	EXIT		3440177		True				
ANR	3440264	Symbol	compile_length_tree		3440177						
ANR	3440265	Symbol	prev		3440177						
ANR	3440266	Symbol	node -> option		3440177						
ANR	3440267	Symbol	SIZE_OP_SET_OPTION		3440177						
ANR	3440268	Symbol	IS_DYNAMIC_OPTION		3440177						
ANR	3440269	Symbol	SIZE_OP_FAIL		3440177						
ANR	3440270	Symbol	node		3440177						
ANR	3440271	Symbol	reg		3440177						
ANR	3440272	Symbol	reg -> options		3440177						
ANR	3440273	Symbol	tlen		3440177						
ANR	3440274	Symbol	SIZE_OP_SET_OPTION_PUSH		3440177						
ANR	3440275	Symbol	* node		3440177						
ANR	3440276	Symbol	node -> target		3440177						
ANR	3440277	Symbol	* reg		3440177						
ANR	3440278	Function	compile_option_node	1178:0:28015:28630							
ANR	3440279	FunctionDef	"compile_option_node (EncloseNode * node , regex_t * reg)"		3440278	0					
ANR	3440280	CompoundStatement		1180:0:28079:28630	3440278	0					
ANR	3440281	IdentifierDeclStatement	int r ;	1181:2:28083:28088	3440278	0	True				
ANR	3440282	IdentifierDecl	r		3440278	0					
ANR	3440283	IdentifierDeclType	int		3440278	0					
ANR	3440284	Identifier	r		3440278	1					
ANR	3440285	IdentifierDeclStatement	OnigOptionType prev = reg -> options ;	1182:2:28092:28126	3440278	1	True				
ANR	3440286	IdentifierDecl	prev = reg -> options		3440278	0					
ANR	3440287	IdentifierDeclType	OnigOptionType		3440278	0					
ANR	3440288	Identifier	prev		3440278	1					
ANR	3440289	AssignmentExpression	prev = reg -> options		3440278	2		=			
ANR	3440290	Identifier	prev		3440278	0					
ANR	3440291	PtrMemberAccess	reg -> options		3440278	1					
ANR	3440292	Identifier	reg		3440278	0					
ANR	3440293	Identifier	options		3440278	1					
ANR	3440294	IfStatement	if ( IS_DYNAMIC_OPTION ( prev ^ node -> option ) )		3440278	2					
ANR	3440295	Condition	IS_DYNAMIC_OPTION ( prev ^ node -> option )	1184:6:28135:28172	3440278	0	True				
ANR	3440296	CallExpression	IS_DYNAMIC_OPTION ( prev ^ node -> option )		3440278	0					
ANR	3440297	Callee	IS_DYNAMIC_OPTION		3440278	0					
ANR	3440298	Identifier	IS_DYNAMIC_OPTION		3440278	0					
ANR	3440299	ArgumentList	prev ^ node -> option		3440278	1					
ANR	3440300	Argument	prev ^ node -> option		3440278	0					
ANR	3440301	ExclusiveOrExpression	prev ^ node -> option		3440278	0		^			
ANR	3440302	Identifier	prev		3440278	0					
ANR	3440303	PtrMemberAccess	node -> option		3440278	1					
ANR	3440304	Identifier	node		3440278	0					
ANR	3440305	Identifier	option		3440278	1					
ANR	3440306	CompoundStatement		5:46:95:95	3440278	1					
ANR	3440307	ExpressionStatement	"r = add_opcode_option ( reg , OP_SET_OPTION_PUSH , node -> option )"	1185:4:28181:28241	3440278	0	True				
ANR	3440308	AssignmentExpression	"r = add_opcode_option ( reg , OP_SET_OPTION_PUSH , node -> option )"		3440278	0		=			
ANR	3440309	Identifier	r		3440278	0					
ANR	3440310	CallExpression	"add_opcode_option ( reg , OP_SET_OPTION_PUSH , node -> option )"		3440278	1					
ANR	3440311	Callee	add_opcode_option		3440278	0					
ANR	3440312	Identifier	add_opcode_option		3440278	0					
ANR	3440313	ArgumentList	reg		3440278	1					
ANR	3440314	Argument	reg		3440278	0					
ANR	3440315	Identifier	reg		3440278	0					
ANR	3440316	Argument	OP_SET_OPTION_PUSH		3440278	1					
ANR	3440317	Identifier	OP_SET_OPTION_PUSH		3440278	0					
ANR	3440318	Argument	node -> option		3440278	2					
ANR	3440319	PtrMemberAccess	node -> option		3440278	0					
ANR	3440320	Identifier	node		3440278	0					
ANR	3440321	Identifier	option		3440278	1					
ANR	3440322	IfStatement	if ( r )		3440278	1					
ANR	3440323	Condition	r	1186:8:28251:28251	3440278	0	True				
ANR	3440324	Identifier	r		3440278	0					
ANR	3440325	ReturnStatement	return r ;	1186:11:28254:28262	3440278	1	True				
ANR	3440326	Identifier	r		3440278	0					
ANR	3440327	ExpressionStatement	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"	1187:4:28268:28315	3440278	2	True				
ANR	3440328	AssignmentExpression	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"		3440278	0		=			
ANR	3440329	Identifier	r		3440278	0					
ANR	3440330	CallExpression	"add_opcode_option ( reg , OP_SET_OPTION , prev )"		3440278	1					
ANR	3440331	Callee	add_opcode_option		3440278	0					
ANR	3440332	Identifier	add_opcode_option		3440278	0					
ANR	3440333	ArgumentList	reg		3440278	1					
ANR	3440334	Argument	reg		3440278	0					
ANR	3440335	Identifier	reg		3440278	0					
ANR	3440336	Argument	OP_SET_OPTION		3440278	1					
ANR	3440337	Identifier	OP_SET_OPTION		3440278	0					
ANR	3440338	Argument	prev		3440278	2					
ANR	3440339	Identifier	prev		3440278	0					
ANR	3440340	IfStatement	if ( r )		3440278	3					
ANR	3440341	Condition	r	1188:8:28325:28325	3440278	0	True				
ANR	3440342	Identifier	r		3440278	0					
ANR	3440343	ReturnStatement	return r ;	1188:11:28328:28336	3440278	1	True				
ANR	3440344	Identifier	r		3440278	0					
ANR	3440345	ExpressionStatement	"r = add_opcode ( reg , OP_FAIL )"	1189:4:28342:28370	3440278	4	True				
ANR	3440346	AssignmentExpression	"r = add_opcode ( reg , OP_FAIL )"		3440278	0		=			
ANR	3440347	Identifier	r		3440278	0					
ANR	3440348	CallExpression	"add_opcode ( reg , OP_FAIL )"		3440278	1					
ANR	3440349	Callee	add_opcode		3440278	0					
ANR	3440350	Identifier	add_opcode		3440278	0					
ANR	3440351	ArgumentList	reg		3440278	1					
ANR	3440352	Argument	reg		3440278	0					
ANR	3440353	Identifier	reg		3440278	0					
ANR	3440354	Argument	OP_FAIL		3440278	1					
ANR	3440355	Identifier	OP_FAIL		3440278	0					
ANR	3440356	IfStatement	if ( r )		3440278	5					
ANR	3440357	Condition	r	1190:8:28380:28380	3440278	0	True				
ANR	3440358	Identifier	r		3440278	0					
ANR	3440359	ReturnStatement	return r ;	1190:11:28383:28391	3440278	1	True				
ANR	3440360	Identifier	r		3440278	0					
ANR	3440361	ExpressionStatement	reg -> options = node -> option	1193:2:28400:28427	3440278	3	True				
ANR	3440362	AssignmentExpression	reg -> options = node -> option		3440278	0		=			
ANR	3440363	PtrMemberAccess	reg -> options		3440278	0					
ANR	3440364	Identifier	reg		3440278	0					
ANR	3440365	Identifier	options		3440278	1					
ANR	3440366	PtrMemberAccess	node -> option		3440278	1					
ANR	3440367	Identifier	node		3440278	0					
ANR	3440368	Identifier	option		3440278	1					
ANR	3440369	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1194:2:28431:28466	3440278	4	True				
ANR	3440370	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		3440278	0		=			
ANR	3440371	Identifier	r		3440278	0					
ANR	3440372	CallExpression	"compile_tree ( node -> target , reg )"		3440278	1					
ANR	3440373	Callee	compile_tree		3440278	0					
ANR	3440374	Identifier	compile_tree		3440278	0					
ANR	3440375	ArgumentList	node -> target		3440278	1					
ANR	3440376	Argument	node -> target		3440278	0					
ANR	3440377	PtrMemberAccess	node -> target		3440278	0					
ANR	3440378	Identifier	node		3440278	0					
ANR	3440379	Identifier	target		3440278	1					
ANR	3440380	Argument	reg		3440278	1					
ANR	3440381	Identifier	reg		3440278	0					
ANR	3440382	ExpressionStatement	reg -> options = prev	1195:2:28470:28489	3440278	5	True				
ANR	3440383	AssignmentExpression	reg -> options = prev		3440278	0		=			
ANR	3440384	PtrMemberAccess	reg -> options		3440278	0					
ANR	3440385	Identifier	reg		3440278	0					
ANR	3440386	Identifier	options		3440278	1					
ANR	3440387	Identifier	prev		3440278	1					
ANR	3440388	IfStatement	if ( IS_DYNAMIC_OPTION ( prev ^ node -> option ) )		3440278	6					
ANR	3440389	Condition	IS_DYNAMIC_OPTION ( prev ^ node -> option )	1197:6:28498:28535	3440278	0	True				
ANR	3440390	CallExpression	IS_DYNAMIC_OPTION ( prev ^ node -> option )		3440278	0					
ANR	3440391	Callee	IS_DYNAMIC_OPTION		3440278	0					
ANR	3440392	Identifier	IS_DYNAMIC_OPTION		3440278	0					
ANR	3440393	ArgumentList	prev ^ node -> option		3440278	1					
ANR	3440394	Argument	prev ^ node -> option		3440278	0					
ANR	3440395	ExclusiveOrExpression	prev ^ node -> option		3440278	0		^			
ANR	3440396	Identifier	prev		3440278	0					
ANR	3440397	PtrMemberAccess	node -> option		3440278	1					
ANR	3440398	Identifier	node		3440278	0					
ANR	3440399	Identifier	option		3440278	1					
ANR	3440400	CompoundStatement		18:46:458:458	3440278	1					
ANR	3440401	IfStatement	if ( r )		3440278	0					
ANR	3440402	Condition	r	1198:8:28548:28548	3440278	0	True				
ANR	3440403	Identifier	r		3440278	0					
ANR	3440404	ReturnStatement	return r ;	1198:11:28551:28559	3440278	1	True				
ANR	3440405	Identifier	r		3440278	0					
ANR	3440406	ExpressionStatement	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"	1199:4:28565:28612	3440278	1	True				
ANR	3440407	AssignmentExpression	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"		3440278	0		=			
ANR	3440408	Identifier	r		3440278	0					
ANR	3440409	CallExpression	"add_opcode_option ( reg , OP_SET_OPTION , prev )"		3440278	1					
ANR	3440410	Callee	add_opcode_option		3440278	0					
ANR	3440411	Identifier	add_opcode_option		3440278	0					
ANR	3440412	ArgumentList	reg		3440278	1					
ANR	3440413	Argument	reg		3440278	0					
ANR	3440414	Identifier	reg		3440278	0					
ANR	3440415	Argument	OP_SET_OPTION		3440278	1					
ANR	3440416	Identifier	OP_SET_OPTION		3440278	0					
ANR	3440417	Argument	prev		3440278	2					
ANR	3440418	Identifier	prev		3440278	0					
ANR	3440419	ReturnStatement	return r ;	1201:2:28620:28628	3440278	7	True				
ANR	3440420	Identifier	r		3440278	0					
ANR	3440421	ReturnType	static int		3440278	1					
ANR	3440422	Identifier	compile_option_node		3440278	2					
ANR	3440423	ParameterList	"EncloseNode * node , regex_t * reg"		3440278	3					
ANR	3440424	Parameter	EncloseNode * node	1179:20:28046:28062	3440278	0	True				
ANR	3440425	ParameterType	EncloseNode *		3440278	0					
ANR	3440426	Identifier	node		3440278	1					
ANR	3440427	Parameter	regex_t * reg	1179:39:28065:28076	3440278	1	True				
ANR	3440428	ParameterType	regex_t *		3440278	0					
ANR	3440429	Identifier	reg		3440278	1					
ANR	3440430	CFGEntryNode	ENTRY		3440278		True				
ANR	3440431	CFGExitNode	EXIT		3440278		True				
ANR	3440432	Symbol	OP_SET_OPTION_PUSH		3440278						
ANR	3440433	Symbol	prev		3440278						
ANR	3440434	Symbol	node -> option		3440278						
ANR	3440435	Symbol	IS_DYNAMIC_OPTION		3440278						
ANR	3440436	Symbol	node		3440278						
ANR	3440437	Symbol	add_opcode_option		3440278						
ANR	3440438	Symbol	r		3440278						
ANR	3440439	Symbol	OP_SET_OPTION		3440278						
ANR	3440440	Symbol	compile_tree		3440278						
ANR	3440441	Symbol	reg		3440278						
ANR	3440442	Symbol	reg -> options		3440278						
ANR	3440443	Symbol	OP_FAIL		3440278						
ANR	3440444	Symbol	* node		3440278						
ANR	3440445	Symbol	add_opcode		3440278						
ANR	3440446	Symbol	node -> target		3440278						
ANR	3440447	Symbol	* reg		3440278						
ANR	3440448	Function	compile_length_enclose_node	1204:0:28633:30159							
ANR	3440449	FunctionDef	"compile_length_enclose_node (EncloseNode * node , regex_t * reg)"		3440448	0					
ANR	3440450	CompoundStatement		1206:0:28705:30159	3440448	0					
ANR	3440451	IdentifierDeclStatement	int len ;	1207:2:28709:28716	3440448	0	True				
ANR	3440452	IdentifierDecl	len		3440448	0					
ANR	3440453	IdentifierDeclType	int		3440448	0					
ANR	3440454	Identifier	len		3440448	1					
ANR	3440455	IdentifierDeclStatement	int tlen ;	1208:2:28720:28728	3440448	1	True				
ANR	3440456	IdentifierDecl	tlen		3440448	0					
ANR	3440457	IdentifierDeclType	int		3440448	0					
ANR	3440458	Identifier	tlen		3440448	1					
ANR	3440459	IfStatement	if ( node -> type == ENCLOSE_OPTION )		3440448	2					
ANR	3440460	Condition	node -> type == ENCLOSE_OPTION	1210:6:28737:28764	3440448	0	True				
ANR	3440461	EqualityExpression	node -> type == ENCLOSE_OPTION		3440448	0		==			
ANR	3440462	PtrMemberAccess	node -> type		3440448	0					
ANR	3440463	Identifier	node		3440448	0					
ANR	3440464	Identifier	type		3440448	1					
ANR	3440465	Identifier	ENCLOSE_OPTION		3440448	1					
ANR	3440466	ReturnStatement	"return compile_length_option_node ( node , reg ) ;"	1211:4:28771:28815	3440448	1	True				
ANR	3440467	CallExpression	"compile_length_option_node ( node , reg )"		3440448	0					
ANR	3440468	Callee	compile_length_option_node		3440448	0					
ANR	3440469	Identifier	compile_length_option_node		3440448	0					
ANR	3440470	ArgumentList	node		3440448	1					
ANR	3440471	Argument	node		3440448	0					
ANR	3440472	Identifier	node		3440448	0					
ANR	3440473	Argument	reg		3440448	1					
ANR	3440474	Identifier	reg		3440448	0					
ANR	3440475	IfStatement	if ( node -> target )		3440448	3					
ANR	3440476	Condition	node -> target	1213:6:28824:28835	3440448	0	True				
ANR	3440477	PtrMemberAccess	node -> target		3440448	0					
ANR	3440478	Identifier	node		3440448	0					
ANR	3440479	Identifier	target		3440448	1					
ANR	3440480	CompoundStatement		8:20:132:132	3440448	1					
ANR	3440481	ExpressionStatement	"tlen = compile_length_tree ( node -> target , reg )"	1214:4:28844:28889	3440448	0	True				
ANR	3440482	AssignmentExpression	"tlen = compile_length_tree ( node -> target , reg )"		3440448	0		=			
ANR	3440483	Identifier	tlen		3440448	0					
ANR	3440484	CallExpression	"compile_length_tree ( node -> target , reg )"		3440448	1					
ANR	3440485	Callee	compile_length_tree		3440448	0					
ANR	3440486	Identifier	compile_length_tree		3440448	0					
ANR	3440487	ArgumentList	node -> target		3440448	1					
ANR	3440488	Argument	node -> target		3440448	0					
ANR	3440489	PtrMemberAccess	node -> target		3440448	0					
ANR	3440490	Identifier	node		3440448	0					
ANR	3440491	Identifier	target		3440448	1					
ANR	3440492	Argument	reg		3440448	1					
ANR	3440493	Identifier	reg		3440448	0					
ANR	3440494	IfStatement	if ( tlen < 0 )		3440448	1					
ANR	3440495	Condition	tlen < 0	1215:8:28899:28906	3440448	0	True				
ANR	3440496	RelationalExpression	tlen < 0		3440448	0		<			
ANR	3440497	Identifier	tlen		3440448	0					
ANR	3440498	PrimaryExpression	0		3440448	1					
ANR	3440499	ReturnStatement	return tlen ;	1215:18:28909:28920	3440448	1	True				
ANR	3440500	Identifier	tlen		3440448	0					
ANR	3440501	ElseStatement	else		3440448	0					
ANR	3440502	ExpressionStatement	tlen = 0	1218:4:28937:28945	3440448	0	True				
ANR	3440503	AssignmentExpression	tlen = 0		3440448	0		=			
ANR	3440504	Identifier	tlen		3440448	0					
ANR	3440505	PrimaryExpression	0		3440448	1					
ANR	3440506	SwitchStatement	switch ( node -> type )		3440448	4					
ANR	3440507	Condition	node -> type	1220:10:28958:28967	3440448	0	True				
ANR	3440508	PtrMemberAccess	node -> type		3440448	0					
ANR	3440509	Identifier	node		3440448	0					
ANR	3440510	Identifier	type		3440448	1					
ANR	3440511	CompoundStatement		15:22:264:264	3440448	1					
ANR	3440512	Label	case ENCLOSE_MEMORY :	1221:2:28974:28993	3440448	0	True				
ANR	3440513	Identifier	ENCLOSE_MEMORY		3440448	0					
ANR	3440514	IfStatement	if ( IS_ENCLOSE_CALLED ( node ) )		3440448	1					
ANR	3440515	Condition	IS_ENCLOSE_CALLED ( node )	1223:8:29026:29048	3440448	0	True				
ANR	3440516	CallExpression	IS_ENCLOSE_CALLED ( node )		3440448	0					
ANR	3440517	Callee	IS_ENCLOSE_CALLED		3440448	0					
ANR	3440518	Identifier	IS_ENCLOSE_CALLED		3440448	0					
ANR	3440519	ArgumentList	node		3440448	1					
ANR	3440520	Argument	node		3440448	0					
ANR	3440521	Identifier	node		3440448	0					
ANR	3440522	CompoundStatement		18:33:345:345	3440448	1					
ANR	3440523	ExpressionStatement	len = SIZE_OP_MEMORY_START_PUSH + tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN	1224:6:29059:29147	3440448	0	True				
ANR	3440524	AssignmentExpression	len = SIZE_OP_MEMORY_START_PUSH + tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		3440448	0		=			
ANR	3440525	Identifier	len		3440448	0					
ANR	3440526	AdditiveExpression	SIZE_OP_MEMORY_START_PUSH + tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		3440448	1		+			
ANR	3440527	Identifier	SIZE_OP_MEMORY_START_PUSH		3440448	0					
ANR	3440528	AdditiveExpression	tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		3440448	1		+			
ANR	3440529	Identifier	tlen		3440448	0					
ANR	3440530	AdditiveExpression	SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		3440448	1		+			
ANR	3440531	Identifier	SIZE_OP_CALL		3440448	0					
ANR	3440532	AdditiveExpression	SIZE_OP_JUMP + SIZE_OP_RETURN		3440448	1		+			
ANR	3440533	Identifier	SIZE_OP_JUMP		3440448	0					
ANR	3440534	Identifier	SIZE_OP_RETURN		3440448	1					
ANR	3440535	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		3440448	1					
ANR	3440536	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1226:10:29159:29202	3440448	0	True				
ANR	3440537	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		3440448	0					
ANR	3440538	Callee	BIT_STATUS_AT		3440448	0					
ANR	3440539	Identifier	BIT_STATUS_AT		3440448	0					
ANR	3440540	ArgumentList	reg -> bt_mem_end		3440448	1					
ANR	3440541	Argument	reg -> bt_mem_end		3440448	0					
ANR	3440542	PtrMemberAccess	reg -> bt_mem_end		3440448	0					
ANR	3440543	Identifier	reg		3440448	0					
ANR	3440544	Identifier	bt_mem_end		3440448	1					
ANR	3440545	Argument	node -> regnum		3440448	1					
ANR	3440546	PtrMemberAccess	node -> regnum		3440448	0					
ANR	3440547	Identifier	node		3440448	0					
ANR	3440548	Identifier	regnum		3440448	1					
ANR	3440549	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )	1227:1:29206:29299	3440448	1	True				
ANR	3440550	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )		3440448	0		+=			
ANR	3440551	Identifier	len		3440448	0					
ANR	3440552	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH		3440448	1					
ANR	3440553	Condition	IS_ENCLOSE_RECURSION ( node )		3440448	0					
ANR	3440554	CallExpression	IS_ENCLOSE_RECURSION ( node )		3440448	0					
ANR	3440555	Callee	IS_ENCLOSE_RECURSION		3440448	0					
ANR	3440556	Identifier	IS_ENCLOSE_RECURSION		3440448	0					
ANR	3440557	ArgumentList	node		3440448	1					
ANR	3440558	Argument	node		3440448	0					
ANR	3440559	Identifier	node		3440448	0					
ANR	3440560	Identifier	SIZE_OP_MEMORY_END_PUSH_REC		3440448	1					
ANR	3440561	Identifier	SIZE_OP_MEMORY_END_PUSH		3440448	2					
ANR	3440562	ElseStatement	else		3440448	0					
ANR	3440563	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )	1230:1:29313:29396	3440448	0	True				
ANR	3440564	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )		3440448	0		+=			
ANR	3440565	Identifier	len		3440448	0					
ANR	3440566	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END		3440448	1					
ANR	3440567	Condition	IS_ENCLOSE_RECURSION ( node )		3440448	0					
ANR	3440568	CallExpression	IS_ENCLOSE_RECURSION ( node )		3440448	0					
ANR	3440569	Callee	IS_ENCLOSE_RECURSION		3440448	0					
ANR	3440570	Identifier	IS_ENCLOSE_RECURSION		3440448	0					
ANR	3440571	ArgumentList	node		3440448	1					
ANR	3440572	Argument	node		3440448	0					
ANR	3440573	Identifier	node		3440448	0					
ANR	3440574	Identifier	SIZE_OP_MEMORY_END_REC		3440448	1					
ANR	3440575	Identifier	SIZE_OP_MEMORY_END		3440448	2					
ANR	3440576	ElseStatement	else		3440448	0					
ANR	3440577	CompoundStatement		30:4:718:718	3440448	0					
ANR	3440578	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum ) )"		3440448	0					
ANR	3440579	Condition	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"	1236:10:29436:29481	3440448	0	True				
ANR	3440580	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"		3440448	0					
ANR	3440581	Callee	BIT_STATUS_AT		3440448	0					
ANR	3440582	Identifier	BIT_STATUS_AT		3440448	0					
ANR	3440583	ArgumentList	reg -> bt_mem_start		3440448	1					
ANR	3440584	Argument	reg -> bt_mem_start		3440448	0					
ANR	3440585	PtrMemberAccess	reg -> bt_mem_start		3440448	0					
ANR	3440586	Identifier	reg		3440448	0					
ANR	3440587	Identifier	bt_mem_start		3440448	1					
ANR	3440588	Argument	node -> regnum		3440448	1					
ANR	3440589	PtrMemberAccess	node -> regnum		3440448	0					
ANR	3440590	Identifier	node		3440448	0					
ANR	3440591	Identifier	regnum		3440448	1					
ANR	3440592	ExpressionStatement	len = SIZE_OP_MEMORY_START_PUSH	1237:1:29485:29516	3440448	1	True				
ANR	3440593	AssignmentExpression	len = SIZE_OP_MEMORY_START_PUSH		3440448	0		=			
ANR	3440594	Identifier	len		3440448	0					
ANR	3440595	Identifier	SIZE_OP_MEMORY_START_PUSH		3440448	1					
ANR	3440596	ElseStatement	else		3440448	0					
ANR	3440597	ExpressionStatement	len = SIZE_OP_MEMORY_START	1239:1:29530:29556	3440448	0	True				
ANR	3440598	AssignmentExpression	len = SIZE_OP_MEMORY_START		3440448	0		=			
ANR	3440599	Identifier	len		3440448	0					
ANR	3440600	Identifier	SIZE_OP_MEMORY_START		3440448	1					
ANR	3440601	ExpressionStatement	"len += tlen + ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END )"	1241:6:29565:29679	3440448	1	True				
ANR	3440602	AssignmentExpression	"len += tlen + ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END )"		3440448	0		+=			
ANR	3440603	Identifier	len		3440448	0					
ANR	3440604	AdditiveExpression	"tlen + ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END )"		3440448	1		+			
ANR	3440605	Identifier	tlen		3440448	0					
ANR	3440606	ConditionalExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END"		3440448	1					
ANR	3440607	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		3440448	0					
ANR	3440608	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		3440448	0					
ANR	3440609	Callee	BIT_STATUS_AT		3440448	0					
ANR	3440610	Identifier	BIT_STATUS_AT		3440448	0					
ANR	3440611	ArgumentList	reg -> bt_mem_end		3440448	1					
ANR	3440612	Argument	reg -> bt_mem_end		3440448	0					
ANR	3440613	PtrMemberAccess	reg -> bt_mem_end		3440448	0					
ANR	3440614	Identifier	reg		3440448	0					
ANR	3440615	Identifier	bt_mem_end		3440448	1					
ANR	3440616	Argument	node -> regnum		3440448	1					
ANR	3440617	PtrMemberAccess	node -> regnum		3440448	0					
ANR	3440618	Identifier	node		3440448	0					
ANR	3440619	Identifier	regnum		3440448	1					
ANR	3440620	Identifier	SIZE_OP_MEMORY_END_PUSH		3440448	1					
ANR	3440621	Identifier	SIZE_OP_MEMORY_END		3440448	2					
ANR	3440622	BreakStatement	break ;	1244:4:29691:29696	3440448	2	True				
ANR	3440623	Label	case ENCLOSE_STOP_BACKTRACK :	1246:2:29701:29728	3440448	3	True				
ANR	3440624	Identifier	ENCLOSE_STOP_BACKTRACK		3440448	0					
ANR	3440625	IfStatement	if ( IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node ) )		3440448	4					
ANR	3440626	Condition	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )	1247:8:29738:29775	3440448	0	True				
ANR	3440627	CallExpression	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )		3440448	0					
ANR	3440628	Callee	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		3440448	0					
ANR	3440629	Identifier	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		3440448	0					
ANR	3440630	ArgumentList	node		3440448	1					
ANR	3440631	Argument	node		3440448	0					
ANR	3440632	Identifier	node		3440448	0					
ANR	3440633	CompoundStatement		43:6:1080:1114	3440448	1					
ANR	3440634	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node -> target ) ;	1248:6:29786:29820	3440448	0	True				
ANR	3440635	IdentifierDecl	* qn = NQTFR ( node -> target )		3440448	0					
ANR	3440636	IdentifierDeclType	QtfrNode *		3440448	0					
ANR	3440637	Identifier	qn		3440448	1					
ANR	3440638	AssignmentExpression	* qn = NQTFR ( node -> target )		3440448	2		=			
ANR	3440639	Identifier	qn		3440448	0					
ANR	3440640	CallExpression	NQTFR ( node -> target )		3440448	1					
ANR	3440641	Callee	NQTFR		3440448	0					
ANR	3440642	Identifier	NQTFR		3440448	0					
ANR	3440643	ArgumentList	node -> target		3440448	1					
ANR	3440644	Argument	node -> target		3440448	0					
ANR	3440645	PtrMemberAccess	node -> target		3440448	0					
ANR	3440646	Identifier	node		3440448	0					
ANR	3440647	Identifier	target		3440448	1					
ANR	3440648	ExpressionStatement	"tlen = compile_length_tree ( qn -> target , reg )"	1249:6:29828:29871	3440448	1	True				
ANR	3440649	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		3440448	0		=			
ANR	3440650	Identifier	tlen		3440448	0					
ANR	3440651	CallExpression	"compile_length_tree ( qn -> target , reg )"		3440448	1					
ANR	3440652	Callee	compile_length_tree		3440448	0					
ANR	3440653	Identifier	compile_length_tree		3440448	0					
ANR	3440654	ArgumentList	qn -> target		3440448	1					
ANR	3440655	Argument	qn -> target		3440448	0					
ANR	3440656	PtrMemberAccess	qn -> target		3440448	0					
ANR	3440657	Identifier	qn		3440448	0					
ANR	3440658	Identifier	target		3440448	1					
ANR	3440659	Argument	reg		3440448	1					
ANR	3440660	Identifier	reg		3440448	0					
ANR	3440661	IfStatement	if ( tlen < 0 )		3440448	2					
ANR	3440662	Condition	tlen < 0	1250:10:29883:29890	3440448	0	True				
ANR	3440663	RelationalExpression	tlen < 0		3440448	0		<			
ANR	3440664	Identifier	tlen		3440448	0					
ANR	3440665	PrimaryExpression	0		3440448	1					
ANR	3440666	ReturnStatement	return tlen ;	1250:20:29893:29904	3440448	1	True				
ANR	3440667	Identifier	tlen		3440448	0					
ANR	3440668	ExpressionStatement	len = tlen * qn -> lower + SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP	1252:6:29913:29989	3440448	3	True				
ANR	3440669	AssignmentExpression	len = tlen * qn -> lower + SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP		3440448	0		=			
ANR	3440670	Identifier	len		3440448	0					
ANR	3440671	AdditiveExpression	tlen * qn -> lower + SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP		3440448	1		+			
ANR	3440672	MultiplicativeExpression	tlen * qn -> lower		3440448	0		*			
ANR	3440673	Identifier	tlen		3440448	0					
ANR	3440674	PtrMemberAccess	qn -> lower		3440448	1					
ANR	3440675	Identifier	qn		3440448	0					
ANR	3440676	Identifier	lower		3440448	1					
ANR	3440677	AdditiveExpression	SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP		3440448	1		+			
ANR	3440678	Identifier	SIZE_OP_PUSH		3440448	0					
ANR	3440679	AdditiveExpression	tlen + SIZE_OP_POP + SIZE_OP_JUMP		3440448	1		+			
ANR	3440680	Identifier	tlen		3440448	0					
ANR	3440681	AdditiveExpression	SIZE_OP_POP + SIZE_OP_JUMP		3440448	1		+			
ANR	3440682	Identifier	SIZE_OP_POP		3440448	0					
ANR	3440683	Identifier	SIZE_OP_JUMP		3440448	1					
ANR	3440684	ElseStatement	else		3440448	0					
ANR	3440685	CompoundStatement		50:9:1300:1300	3440448	0					
ANR	3440686	ExpressionStatement	len = SIZE_OP_PUSH_STOP_BT + tlen + SIZE_OP_POP_STOP_BT	1256:6:30014:30069	3440448	0	True				
ANR	3440687	AssignmentExpression	len = SIZE_OP_PUSH_STOP_BT + tlen + SIZE_OP_POP_STOP_BT		3440448	0		=			
ANR	3440688	Identifier	len		3440448	0					
ANR	3440689	AdditiveExpression	SIZE_OP_PUSH_STOP_BT + tlen + SIZE_OP_POP_STOP_BT		3440448	1		+			
ANR	3440690	Identifier	SIZE_OP_PUSH_STOP_BT		3440448	0					
ANR	3440691	AdditiveExpression	tlen + SIZE_OP_POP_STOP_BT		3440448	1		+			
ANR	3440692	Identifier	tlen		3440448	0					
ANR	3440693	Identifier	SIZE_OP_POP_STOP_BT		3440448	1					
ANR	3440694	BreakStatement	break ;	1258:4:30081:30086	3440448	5	True				
ANR	3440695	Label	default :	1260:2:30091:30098	3440448	6	True				
ANR	3440696	Identifier	default		3440448	0					
ANR	3440697	ReturnStatement	return ONIGERR_TYPE_BUG ;	1261:4:30104:30127	3440448	7	True				
ANR	3440698	Identifier	ONIGERR_TYPE_BUG		3440448	0					
ANR	3440699	BreakStatement	break ;	1262:4:30133:30138	3440448	8	True				
ANR	3440700	ReturnStatement	return len ;	1265:2:30147:30157	3440448	5	True				
ANR	3440701	Identifier	len		3440448	0					
ANR	3440702	ReturnType	static int		3440448	1					
ANR	3440703	Identifier	compile_length_enclose_node		3440448	2					
ANR	3440704	ParameterList	"EncloseNode * node , regex_t * reg"		3440448	3					
ANR	3440705	Parameter	EncloseNode * node	1205:28:28672:28688	3440448	0	True				
ANR	3440706	ParameterType	EncloseNode *		3440448	0					
ANR	3440707	Identifier	node		3440448	1					
ANR	3440708	Parameter	regex_t * reg	1205:47:28691:28702	3440448	1	True				
ANR	3440709	ParameterType	regex_t *		3440448	0					
ANR	3440710	Identifier	reg		3440448	1					
ANR	3440711	CFGEntryNode	ENTRY		3440448		True				
ANR	3440712	CFGExitNode	EXIT		3440448		True				
ANR	3440713	Symbol	* qn		3440448						
ANR	3440714	Symbol	SIZE_OP_MEMORY_END_PUSH_REC		3440448						
ANR	3440715	Symbol	ENCLOSE_OPTION		3440448						
ANR	3440716	Symbol	SIZE_OP_MEMORY_START		3440448						
ANR	3440717	Symbol	SIZE_OP_MEMORY_END		3440448						
ANR	3440718	Symbol	NQTFR		3440448						
ANR	3440719	Symbol	SIZE_OP_MEMORY_START_PUSH		3440448						
ANR	3440720	Symbol	qn -> lower		3440448						
ANR	3440721	Symbol	len		3440448						
ANR	3440722	Symbol	reg -> bt_mem_end		3440448						
ANR	3440723	Symbol	reg		3440448						
ANR	3440724	Symbol	tlen		3440448						
ANR	3440725	Symbol	SIZE_OP_MEMORY_END_REC		3440448						
ANR	3440726	Symbol	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		3440448						
ANR	3440727	Symbol	SIZE_OP_PUSH_STOP_BT		3440448						
ANR	3440728	Symbol	* node		3440448						
ANR	3440729	Symbol	qn		3440448						
ANR	3440730	Symbol	SIZE_OP_JUMP		3440448						
ANR	3440731	Symbol	BIT_STATUS_AT		3440448						
ANR	3440732	Symbol	compile_length_tree		3440448						
ANR	3440733	Symbol	compile_length_option_node		3440448						
ANR	3440734	Symbol	IS_ENCLOSE_CALLED		3440448						
ANR	3440735	Symbol	SIZE_OP_PUSH		3440448						
ANR	3440736	Symbol	node -> regnum		3440448						
ANR	3440737	Symbol	SIZE_OP_POP_STOP_BT		3440448						
ANR	3440738	Symbol	ONIGERR_TYPE_BUG		3440448						
ANR	3440739	Symbol	qn -> target		3440448						
ANR	3440740	Symbol	node		3440448						
ANR	3440741	Symbol	SIZE_OP_CALL		3440448						
ANR	3440742	Symbol	reg -> bt_mem_start		3440448						
ANR	3440743	Symbol	SIZE_OP_POP		3440448						
ANR	3440744	Symbol	node -> type		3440448						
ANR	3440745	Symbol	IS_ENCLOSE_RECURSION		3440448						
ANR	3440746	Symbol	SIZE_OP_RETURN		3440448						
ANR	3440747	Symbol	node -> target		3440448						
ANR	3440748	Symbol	* reg		3440448						
ANR	3440749	Symbol	SIZE_OP_MEMORY_END_PUSH		3440448						
ANR	3440750	DeclStmt									
ANR	3440751	Decl							int	"int ( Node * node , regex_t * reg , int * len )"	get_char_length_tree
ANR	3440752	Function	compile_enclose_node	1270:0:30232:33119							
ANR	3440753	FunctionDef	"compile_enclose_node (EncloseNode * node , regex_t * reg)"		3440752	0					
ANR	3440754	CompoundStatement		1272:0:30297:33119	3440752	0					
ANR	3440755	IdentifierDeclStatement	"int r , len ;"	1273:2:30301:30311	3440752	0	True				
ANR	3440756	IdentifierDecl	r		3440752	0					
ANR	3440757	IdentifierDeclType	int		3440752	0					
ANR	3440758	Identifier	r		3440752	1					
ANR	3440759	IdentifierDecl	len		3440752	1					
ANR	3440760	IdentifierDeclType	int		3440752	0					
ANR	3440761	Identifier	len		3440752	1					
ANR	3440762	IfStatement	if ( node -> type == ENCLOSE_OPTION )		3440752	1					
ANR	3440763	Condition	node -> type == ENCLOSE_OPTION	1275:6:30320:30347	3440752	0	True				
ANR	3440764	EqualityExpression	node -> type == ENCLOSE_OPTION		3440752	0		==			
ANR	3440765	PtrMemberAccess	node -> type		3440752	0					
ANR	3440766	Identifier	node		3440752	0					
ANR	3440767	Identifier	type		3440752	1					
ANR	3440768	Identifier	ENCLOSE_OPTION		3440752	1					
ANR	3440769	ReturnStatement	"return compile_option_node ( node , reg ) ;"	1276:4:30354:30391	3440752	1	True				
ANR	3440770	CallExpression	"compile_option_node ( node , reg )"		3440752	0					
ANR	3440771	Callee	compile_option_node		3440752	0					
ANR	3440772	Identifier	compile_option_node		3440752	0					
ANR	3440773	ArgumentList	node		3440752	1					
ANR	3440774	Argument	node		3440752	0					
ANR	3440775	Identifier	node		3440752	0					
ANR	3440776	Argument	reg		3440752	1					
ANR	3440777	Identifier	reg		3440752	0					
ANR	3440778	SwitchStatement	switch ( node -> type )		3440752	2					
ANR	3440779	Condition	node -> type	1278:10:30404:30413	3440752	0	True				
ANR	3440780	PtrMemberAccess	node -> type		3440752	0					
ANR	3440781	Identifier	node		3440752	0					
ANR	3440782	Identifier	type		3440752	1					
ANR	3440783	CompoundStatement		7:22:118:118	3440752	1					
ANR	3440784	Label	case ENCLOSE_MEMORY :	1279:2:30420:30439	3440752	0	True				
ANR	3440785	Identifier	ENCLOSE_MEMORY		3440752	0					
ANR	3440786	IfStatement	if ( IS_ENCLOSE_CALLED ( node ) )		3440752	1					
ANR	3440787	Condition	IS_ENCLOSE_CALLED ( node )	1281:8:30472:30494	3440752	0	True				
ANR	3440788	CallExpression	IS_ENCLOSE_CALLED ( node )		3440752	0					
ANR	3440789	Callee	IS_ENCLOSE_CALLED		3440752	0					
ANR	3440790	Identifier	IS_ENCLOSE_CALLED		3440752	0					
ANR	3440791	ArgumentList	node		3440752	1					
ANR	3440792	Argument	node		3440752	0					
ANR	3440793	Identifier	node		3440752	0					
ANR	3440794	CompoundStatement		10:33:199:199	3440752	1					
ANR	3440795	ExpressionStatement	"r = add_opcode ( reg , OP_CALL )"	1282:6:30505:30533	3440752	0	True				
ANR	3440796	AssignmentExpression	"r = add_opcode ( reg , OP_CALL )"		3440752	0		=			
ANR	3440797	Identifier	r		3440752	0					
ANR	3440798	CallExpression	"add_opcode ( reg , OP_CALL )"		3440752	1					
ANR	3440799	Callee	add_opcode		3440752	0					
ANR	3440800	Identifier	add_opcode		3440752	0					
ANR	3440801	ArgumentList	reg		3440752	1					
ANR	3440802	Argument	reg		3440752	0					
ANR	3440803	Identifier	reg		3440752	0					
ANR	3440804	Argument	OP_CALL		3440752	1					
ANR	3440805	Identifier	OP_CALL		3440752	0					
ANR	3440806	IfStatement	if ( r )		3440752	1					
ANR	3440807	Condition	r	1283:10:30545:30545	3440752	0	True				
ANR	3440808	Identifier	r		3440752	0					
ANR	3440809	ReturnStatement	return r ;	1283:13:30548:30556	3440752	1	True				
ANR	3440810	Identifier	r		3440752	0					
ANR	3440811	ExpressionStatement	node -> call_addr = BBUF_GET_OFFSET_POS ( reg ) + SIZE_ABSADDR + SIZE_OP_JUMP	1284:6:30564:30636	3440752	2	True				
ANR	3440812	AssignmentExpression	node -> call_addr = BBUF_GET_OFFSET_POS ( reg ) + SIZE_ABSADDR + SIZE_OP_JUMP		3440752	0		=			
ANR	3440813	PtrMemberAccess	node -> call_addr		3440752	0					
ANR	3440814	Identifier	node		3440752	0					
ANR	3440815	Identifier	call_addr		3440752	1					
ANR	3440816	AdditiveExpression	BBUF_GET_OFFSET_POS ( reg ) + SIZE_ABSADDR + SIZE_OP_JUMP		3440752	1		+			
ANR	3440817	CallExpression	BBUF_GET_OFFSET_POS ( reg )		3440752	0					
ANR	3440818	Callee	BBUF_GET_OFFSET_POS		3440752	0					
ANR	3440819	Identifier	BBUF_GET_OFFSET_POS		3440752	0					
ANR	3440820	ArgumentList	reg		3440752	1					
ANR	3440821	Argument	reg		3440752	0					
ANR	3440822	Identifier	reg		3440752	0					
ANR	3440823	AdditiveExpression	SIZE_ABSADDR + SIZE_OP_JUMP		3440752	1		+			
ANR	3440824	Identifier	SIZE_ABSADDR		3440752	0					
ANR	3440825	Identifier	SIZE_OP_JUMP		3440752	1					
ANR	3440826	ExpressionStatement	node -> state |= NST_ADDR_FIXED	1285:6:30644:30673	3440752	3	True				
ANR	3440827	AssignmentExpression	node -> state |= NST_ADDR_FIXED		3440752	0		|=			
ANR	3440828	PtrMemberAccess	node -> state		3440752	0					
ANR	3440829	Identifier	node		3440752	0					
ANR	3440830	Identifier	state		3440752	1					
ANR	3440831	Identifier	NST_ADDR_FIXED		3440752	1					
ANR	3440832	ExpressionStatement	"r = add_abs_addr ( reg , ( int ) node -> call_addr )"	1286:6:30681:30725	3440752	4	True				
ANR	3440833	AssignmentExpression	"r = add_abs_addr ( reg , ( int ) node -> call_addr )"		3440752	0		=			
ANR	3440834	Identifier	r		3440752	0					
ANR	3440835	CallExpression	"add_abs_addr ( reg , ( int ) node -> call_addr )"		3440752	1					
ANR	3440836	Callee	add_abs_addr		3440752	0					
ANR	3440837	Identifier	add_abs_addr		3440752	0					
ANR	3440838	ArgumentList	reg		3440752	1					
ANR	3440839	Argument	reg		3440752	0					
ANR	3440840	Identifier	reg		3440752	0					
ANR	3440841	Argument	( int ) node -> call_addr		3440752	1					
ANR	3440842	CastExpression	( int ) node -> call_addr		3440752	0					
ANR	3440843	CastTarget	int		3440752	0					
ANR	3440844	PtrMemberAccess	node -> call_addr		3440752	1					
ANR	3440845	Identifier	node		3440752	0					
ANR	3440846	Identifier	call_addr		3440752	1					
ANR	3440847	IfStatement	if ( r )		3440752	5					
ANR	3440848	Condition	r	1287:10:30737:30737	3440752	0	True				
ANR	3440849	Identifier	r		3440752	0					
ANR	3440850	ReturnStatement	return r ;	1287:13:30740:30748	3440752	1	True				
ANR	3440851	Identifier	r		3440752	0					
ANR	3440852	ExpressionStatement	"len = compile_length_tree ( node -> target , reg )"	1288:6:30756:30800	3440752	6	True				
ANR	3440853	AssignmentExpression	"len = compile_length_tree ( node -> target , reg )"		3440752	0		=			
ANR	3440854	Identifier	len		3440752	0					
ANR	3440855	CallExpression	"compile_length_tree ( node -> target , reg )"		3440752	1					
ANR	3440856	Callee	compile_length_tree		3440752	0					
ANR	3440857	Identifier	compile_length_tree		3440752	0					
ANR	3440858	ArgumentList	node -> target		3440752	1					
ANR	3440859	Argument	node -> target		3440752	0					
ANR	3440860	PtrMemberAccess	node -> target		3440752	0					
ANR	3440861	Identifier	node		3440752	0					
ANR	3440862	Identifier	target		3440752	1					
ANR	3440863	Argument	reg		3440752	1					
ANR	3440864	Identifier	reg		3440752	0					
ANR	3440865	ExpressionStatement	len += ( SIZE_OP_MEMORY_START_PUSH + SIZE_OP_RETURN )	1289:6:30808:30859	3440752	7	True				
ANR	3440866	AssignmentExpression	len += ( SIZE_OP_MEMORY_START_PUSH + SIZE_OP_RETURN )		3440752	0		+=			
ANR	3440867	Identifier	len		3440752	0					
ANR	3440868	AdditiveExpression	SIZE_OP_MEMORY_START_PUSH + SIZE_OP_RETURN		3440752	1		+			
ANR	3440869	Identifier	SIZE_OP_MEMORY_START_PUSH		3440752	0					
ANR	3440870	Identifier	SIZE_OP_RETURN		3440752	1					
ANR	3440871	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		3440752	8					
ANR	3440872	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1290:10:30871:30914	3440752	0	True				
ANR	3440873	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		3440752	0					
ANR	3440874	Callee	BIT_STATUS_AT		3440752	0					
ANR	3440875	Identifier	BIT_STATUS_AT		3440752	0					
ANR	3440876	ArgumentList	reg -> bt_mem_end		3440752	1					
ANR	3440877	Argument	reg -> bt_mem_end		3440752	0					
ANR	3440878	PtrMemberAccess	reg -> bt_mem_end		3440752	0					
ANR	3440879	Identifier	reg		3440752	0					
ANR	3440880	Identifier	bt_mem_end		3440752	1					
ANR	3440881	Argument	node -> regnum		3440752	1					
ANR	3440882	PtrMemberAccess	node -> regnum		3440752	0					
ANR	3440883	Identifier	node		3440752	0					
ANR	3440884	Identifier	regnum		3440752	1					
ANR	3440885	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )	1291:1:30918:31011	3440752	1	True				
ANR	3440886	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )		3440752	0		+=			
ANR	3440887	Identifier	len		3440752	0					
ANR	3440888	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH		3440752	1					
ANR	3440889	Condition	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3440890	CallExpression	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3440891	Callee	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3440892	Identifier	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3440893	ArgumentList	node		3440752	1					
ANR	3440894	Argument	node		3440752	0					
ANR	3440895	Identifier	node		3440752	0					
ANR	3440896	Identifier	SIZE_OP_MEMORY_END_PUSH_REC		3440752	1					
ANR	3440897	Identifier	SIZE_OP_MEMORY_END_PUSH		3440752	2					
ANR	3440898	ElseStatement	else		3440752	0					
ANR	3440899	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )	1294:1:31025:31108	3440752	0	True				
ANR	3440900	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )		3440752	0		+=			
ANR	3440901	Identifier	len		3440752	0					
ANR	3440902	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END		3440752	1					
ANR	3440903	Condition	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3440904	CallExpression	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3440905	Callee	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3440906	Identifier	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3440907	ArgumentList	node		3440752	1					
ANR	3440908	Argument	node		3440752	0					
ANR	3440909	Identifier	node		3440752	0					
ANR	3440910	Identifier	SIZE_OP_MEMORY_END_REC		3440752	1					
ANR	3440911	Identifier	SIZE_OP_MEMORY_END		3440752	2					
ANR	3440912	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"	1297:6:31117:31159	3440752	9	True				
ANR	3440913	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"		3440752	0		=			
ANR	3440914	Identifier	r		3440752	0					
ANR	3440915	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , len )"		3440752	1					
ANR	3440916	Callee	add_opcode_rel_addr		3440752	0					
ANR	3440917	Identifier	add_opcode_rel_addr		3440752	0					
ANR	3440918	ArgumentList	reg		3440752	1					
ANR	3440919	Argument	reg		3440752	0					
ANR	3440920	Identifier	reg		3440752	0					
ANR	3440921	Argument	OP_JUMP		3440752	1					
ANR	3440922	Identifier	OP_JUMP		3440752	0					
ANR	3440923	Argument	len		3440752	2					
ANR	3440924	Identifier	len		3440752	0					
ANR	3440925	IfStatement	if ( r )		3440752	10					
ANR	3440926	Condition	r	1298:10:31171:31171	3440752	0	True				
ANR	3440927	Identifier	r		3440752	0					
ANR	3440928	ReturnStatement	return r ;	1298:13:31174:31182	3440752	1	True				
ANR	3440929	Identifier	r		3440752	0					
ANR	3440930	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum ) )"		3440752	2					
ANR	3440931	Condition	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"	1301:8:31205:31250	3440752	0	True				
ANR	3440932	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"		3440752	0					
ANR	3440933	Callee	BIT_STATUS_AT		3440752	0					
ANR	3440934	Identifier	BIT_STATUS_AT		3440752	0					
ANR	3440935	ArgumentList	reg -> bt_mem_start		3440752	1					
ANR	3440936	Argument	reg -> bt_mem_start		3440752	0					
ANR	3440937	PtrMemberAccess	reg -> bt_mem_start		3440752	0					
ANR	3440938	Identifier	reg		3440752	0					
ANR	3440939	Identifier	bt_mem_start		3440752	1					
ANR	3440940	Argument	node -> regnum		3440752	1					
ANR	3440941	PtrMemberAccess	node -> regnum		3440752	0					
ANR	3440942	Identifier	node		3440752	0					
ANR	3440943	Identifier	regnum		3440752	1					
ANR	3440944	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_START_PUSH )"	1302:6:31259:31300	3440752	1	True				
ANR	3440945	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_START_PUSH )"		3440752	0		=			
ANR	3440946	Identifier	r		3440752	0					
ANR	3440947	CallExpression	"add_opcode ( reg , OP_MEMORY_START_PUSH )"		3440752	1					
ANR	3440948	Callee	add_opcode		3440752	0					
ANR	3440949	Identifier	add_opcode		3440752	0					
ANR	3440950	ArgumentList	reg		3440752	1					
ANR	3440951	Argument	reg		3440752	0					
ANR	3440952	Identifier	reg		3440752	0					
ANR	3440953	Argument	OP_MEMORY_START_PUSH		3440752	1					
ANR	3440954	Identifier	OP_MEMORY_START_PUSH		3440752	0					
ANR	3440955	ElseStatement	else		3440752	0					
ANR	3440956	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_START )"	1304:6:31317:31353	3440752	0	True				
ANR	3440957	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_START )"		3440752	0		=			
ANR	3440958	Identifier	r		3440752	0					
ANR	3440959	CallExpression	"add_opcode ( reg , OP_MEMORY_START )"		3440752	1					
ANR	3440960	Callee	add_opcode		3440752	0					
ANR	3440961	Identifier	add_opcode		3440752	0					
ANR	3440962	ArgumentList	reg		3440752	1					
ANR	3440963	Argument	reg		3440752	0					
ANR	3440964	Identifier	reg		3440752	0					
ANR	3440965	Argument	OP_MEMORY_START		3440752	1					
ANR	3440966	Identifier	OP_MEMORY_START		3440752	0					
ANR	3440967	IfStatement	if ( r )		3440752	3					
ANR	3440968	Condition	r	1305:8:31363:31363	3440752	0	True				
ANR	3440969	Identifier	r		3440752	0					
ANR	3440970	ReturnStatement	return r ;	1305:11:31366:31374	3440752	1	True				
ANR	3440971	Identifier	r		3440752	0					
ANR	3440972	ExpressionStatement	"r = add_mem_num ( reg , node -> regnum )"	1306:4:31380:31414	3440752	4	True				
ANR	3440973	AssignmentExpression	"r = add_mem_num ( reg , node -> regnum )"		3440752	0		=			
ANR	3440974	Identifier	r		3440752	0					
ANR	3440975	CallExpression	"add_mem_num ( reg , node -> regnum )"		3440752	1					
ANR	3440976	Callee	add_mem_num		3440752	0					
ANR	3440977	Identifier	add_mem_num		3440752	0					
ANR	3440978	ArgumentList	reg		3440752	1					
ANR	3440979	Argument	reg		3440752	0					
ANR	3440980	Identifier	reg		3440752	0					
ANR	3440981	Argument	node -> regnum		3440752	1					
ANR	3440982	PtrMemberAccess	node -> regnum		3440752	0					
ANR	3440983	Identifier	node		3440752	0					
ANR	3440984	Identifier	regnum		3440752	1					
ANR	3440985	IfStatement	if ( r )		3440752	5					
ANR	3440986	Condition	r	1307:8:31424:31424	3440752	0	True				
ANR	3440987	Identifier	r		3440752	0					
ANR	3440988	ReturnStatement	return r ;	1307:11:31427:31435	3440752	1	True				
ANR	3440989	Identifier	r		3440752	0					
ANR	3440990	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1308:4:31441:31476	3440752	6	True				
ANR	3440991	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		3440752	0		=			
ANR	3440992	Identifier	r		3440752	0					
ANR	3440993	CallExpression	"compile_tree ( node -> target , reg )"		3440752	1					
ANR	3440994	Callee	compile_tree		3440752	0					
ANR	3440995	Identifier	compile_tree		3440752	0					
ANR	3440996	ArgumentList	node -> target		3440752	1					
ANR	3440997	Argument	node -> target		3440752	0					
ANR	3440998	PtrMemberAccess	node -> target		3440752	0					
ANR	3440999	Identifier	node		3440752	0					
ANR	3441000	Identifier	target		3440752	1					
ANR	3441001	Argument	reg		3440752	1					
ANR	3441002	Identifier	reg		3440752	0					
ANR	3441003	IfStatement	if ( r )		3440752	7					
ANR	3441004	Condition	r	1309:8:31486:31486	3440752	0	True				
ANR	3441005	Identifier	r		3440752	0					
ANR	3441006	ReturnStatement	return r ;	1309:11:31489:31497	3440752	1	True				
ANR	3441007	Identifier	r		3440752	0					
ANR	3441008	IfStatement	if ( IS_ENCLOSE_CALLED ( node ) )		3440752	8					
ANR	3441009	Condition	IS_ENCLOSE_CALLED ( node )	1311:8:31530:31552	3440752	0	True				
ANR	3441010	CallExpression	IS_ENCLOSE_CALLED ( node )		3440752	0					
ANR	3441011	Callee	IS_ENCLOSE_CALLED		3440752	0					
ANR	3441012	Identifier	IS_ENCLOSE_CALLED		3440752	0					
ANR	3441013	ArgumentList	node		3440752	1					
ANR	3441014	Argument	node		3440752	0					
ANR	3441015	Identifier	node		3440752	0					
ANR	3441016	CompoundStatement		40:33:1257:1257	3440752	1					
ANR	3441017	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		3440752	0					
ANR	3441018	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1312:10:31567:31610	3440752	0	True				
ANR	3441019	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		3440752	0					
ANR	3441020	Callee	BIT_STATUS_AT		3440752	0					
ANR	3441021	Identifier	BIT_STATUS_AT		3440752	0					
ANR	3441022	ArgumentList	reg -> bt_mem_end		3440752	1					
ANR	3441023	Argument	reg -> bt_mem_end		3440752	0					
ANR	3441024	PtrMemberAccess	reg -> bt_mem_end		3440752	0					
ANR	3441025	Identifier	reg		3440752	0					
ANR	3441026	Identifier	bt_mem_end		3440752	1					
ANR	3441027	Argument	node -> regnum		3440752	1					
ANR	3441028	PtrMemberAccess	node -> regnum		3440752	0					
ANR	3441029	Identifier	node		3440752	0					
ANR	3441030	Identifier	regnum		3440752	1					
ANR	3441031	ExpressionStatement	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH ) )"	1313:1:31614:31717	3440752	1	True				
ANR	3441032	AssignmentExpression	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH ) )"		3440752	0		=			
ANR	3441033	Identifier	r		3440752	0					
ANR	3441034	CallExpression	"add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH ) )"		3440752	1					
ANR	3441035	Callee	add_opcode		3440752	0					
ANR	3441036	Identifier	add_opcode		3440752	0					
ANR	3441037	ArgumentList	reg		3440752	1					
ANR	3441038	Argument	reg		3440752	0					
ANR	3441039	Identifier	reg		3440752	0					
ANR	3441040	Argument	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH		3440752	1					
ANR	3441041	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH		3440752	0					
ANR	3441042	Condition	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3441043	CallExpression	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3441044	Callee	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3441045	Identifier	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3441046	ArgumentList	node		3440752	1					
ANR	3441047	Argument	node		3440752	0					
ANR	3441048	Identifier	node		3440752	0					
ANR	3441049	Identifier	OP_MEMORY_END_PUSH_REC		3440752	1					
ANR	3441050	Identifier	OP_MEMORY_END_PUSH		3440752	2					
ANR	3441051	ElseStatement	else		3440752	0					
ANR	3441052	ExpressionStatement	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END ) )"	1316:1:31731:31824	3440752	0	True				
ANR	3441053	AssignmentExpression	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END ) )"		3440752	0		=			
ANR	3441054	Identifier	r		3440752	0					
ANR	3441055	CallExpression	"add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END ) )"		3440752	1					
ANR	3441056	Callee	add_opcode		3440752	0					
ANR	3441057	Identifier	add_opcode		3440752	0					
ANR	3441058	ArgumentList	reg		3440752	1					
ANR	3441059	Argument	reg		3440752	0					
ANR	3441060	Identifier	reg		3440752	0					
ANR	3441061	Argument	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END		3440752	1					
ANR	3441062	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END		3440752	0					
ANR	3441063	Condition	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3441064	CallExpression	IS_ENCLOSE_RECURSION ( node )		3440752	0					
ANR	3441065	Callee	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3441066	Identifier	IS_ENCLOSE_RECURSION		3440752	0					
ANR	3441067	ArgumentList	node		3440752	1					
ANR	3441068	Argument	node		3440752	0					
ANR	3441069	Identifier	node		3440752	0					
ANR	3441070	Identifier	OP_MEMORY_END_REC		3440752	1					
ANR	3441071	Identifier	OP_MEMORY_END		3440752	2					
ANR	3441072	IfStatement	if ( r )		3440752	1					
ANR	3441073	Condition	r	1319:10:31837:31837	3440752	0	True				
ANR	3441074	Identifier	r		3440752	0					
ANR	3441075	ReturnStatement	return r ;	1319:13:31840:31848	3440752	1	True				
ANR	3441076	Identifier	r		3440752	0					
ANR	3441077	ExpressionStatement	"r = add_mem_num ( reg , node -> regnum )"	1320:6:31856:31890	3440752	2	True				
ANR	3441078	AssignmentExpression	"r = add_mem_num ( reg , node -> regnum )"		3440752	0		=			
ANR	3441079	Identifier	r		3440752	0					
ANR	3441080	CallExpression	"add_mem_num ( reg , node -> regnum )"		3440752	1					
ANR	3441081	Callee	add_mem_num		3440752	0					
ANR	3441082	Identifier	add_mem_num		3440752	0					
ANR	3441083	ArgumentList	reg		3440752	1					
ANR	3441084	Argument	reg		3440752	0					
ANR	3441085	Identifier	reg		3440752	0					
ANR	3441086	Argument	node -> regnum		3440752	1					
ANR	3441087	PtrMemberAccess	node -> regnum		3440752	0					
ANR	3441088	Identifier	node		3440752	0					
ANR	3441089	Identifier	regnum		3440752	1					
ANR	3441090	IfStatement	if ( r )		3440752	3					
ANR	3441091	Condition	r	1321:10:31902:31902	3440752	0	True				
ANR	3441092	Identifier	r		3440752	0					
ANR	3441093	ReturnStatement	return r ;	1321:13:31905:31913	3440752	1	True				
ANR	3441094	Identifier	r		3440752	0					
ANR	3441095	ExpressionStatement	"r = add_opcode ( reg , OP_RETURN )"	1322:6:31921:31951	3440752	4	True				
ANR	3441096	AssignmentExpression	"r = add_opcode ( reg , OP_RETURN )"		3440752	0		=			
ANR	3441097	Identifier	r		3440752	0					
ANR	3441098	CallExpression	"add_opcode ( reg , OP_RETURN )"		3440752	1					
ANR	3441099	Callee	add_opcode		3440752	0					
ANR	3441100	Identifier	add_opcode		3440752	0					
ANR	3441101	ArgumentList	reg		3440752	1					
ANR	3441102	Argument	reg		3440752	0					
ANR	3441103	Identifier	reg		3440752	0					
ANR	3441104	Argument	OP_RETURN		3440752	1					
ANR	3441105	Identifier	OP_RETURN		3440752	0					
ANR	3441106	ElseStatement	else		3440752	0					
ANR	3441107	CompoundStatement		55:4:1681:1681	3440752	0					
ANR	3441108	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		3440752	0					
ANR	3441109	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1327:10:31991:32034	3440752	0	True				
ANR	3441110	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		3440752	0					
ANR	3441111	Callee	BIT_STATUS_AT		3440752	0					
ANR	3441112	Identifier	BIT_STATUS_AT		3440752	0					
ANR	3441113	ArgumentList	reg -> bt_mem_end		3440752	1					
ANR	3441114	Argument	reg -> bt_mem_end		3440752	0					
ANR	3441115	PtrMemberAccess	reg -> bt_mem_end		3440752	0					
ANR	3441116	Identifier	reg		3440752	0					
ANR	3441117	Identifier	bt_mem_end		3440752	1					
ANR	3441118	Argument	node -> regnum		3440752	1					
ANR	3441119	PtrMemberAccess	node -> regnum		3440752	0					
ANR	3441120	Identifier	node		3440752	0					
ANR	3441121	Identifier	regnum		3440752	1					
ANR	3441122	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_END_PUSH )"	1328:1:32038:32077	3440752	1	True				
ANR	3441123	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_END_PUSH )"		3440752	0		=			
ANR	3441124	Identifier	r		3440752	0					
ANR	3441125	CallExpression	"add_opcode ( reg , OP_MEMORY_END_PUSH )"		3440752	1					
ANR	3441126	Callee	add_opcode		3440752	0					
ANR	3441127	Identifier	add_opcode		3440752	0					
ANR	3441128	ArgumentList	reg		3440752	1					
ANR	3441129	Argument	reg		3440752	0					
ANR	3441130	Identifier	reg		3440752	0					
ANR	3441131	Argument	OP_MEMORY_END_PUSH		3440752	1					
ANR	3441132	Identifier	OP_MEMORY_END_PUSH		3440752	0					
ANR	3441133	ElseStatement	else		3440752	0					
ANR	3441134	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_END )"	1330:1:32091:32125	3440752	0	True				
ANR	3441135	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_END )"		3440752	0		=			
ANR	3441136	Identifier	r		3440752	0					
ANR	3441137	CallExpression	"add_opcode ( reg , OP_MEMORY_END )"		3440752	1					
ANR	3441138	Callee	add_opcode		3440752	0					
ANR	3441139	Identifier	add_opcode		3440752	0					
ANR	3441140	ArgumentList	reg		3440752	1					
ANR	3441141	Argument	reg		3440752	0					
ANR	3441142	Identifier	reg		3440752	0					
ANR	3441143	Argument	OP_MEMORY_END		3440752	1					
ANR	3441144	Identifier	OP_MEMORY_END		3440752	0					
ANR	3441145	IfStatement	if ( r )		3440752	1					
ANR	3441146	Condition	r	1331:10:32137:32137	3440752	0	True				
ANR	3441147	Identifier	r		3440752	0					
ANR	3441148	ReturnStatement	return r ;	1331:13:32140:32148	3440752	1	True				
ANR	3441149	Identifier	r		3440752	0					
ANR	3441150	ExpressionStatement	"r = add_mem_num ( reg , node -> regnum )"	1332:6:32156:32190	3440752	2	True				
ANR	3441151	AssignmentExpression	"r = add_mem_num ( reg , node -> regnum )"		3440752	0		=			
ANR	3441152	Identifier	r		3440752	0					
ANR	3441153	CallExpression	"add_mem_num ( reg , node -> regnum )"		3440752	1					
ANR	3441154	Callee	add_mem_num		3440752	0					
ANR	3441155	Identifier	add_mem_num		3440752	0					
ANR	3441156	ArgumentList	reg		3440752	1					
ANR	3441157	Argument	reg		3440752	0					
ANR	3441158	Identifier	reg		3440752	0					
ANR	3441159	Argument	node -> regnum		3440752	1					
ANR	3441160	PtrMemberAccess	node -> regnum		3440752	0					
ANR	3441161	Identifier	node		3440752	0					
ANR	3441162	Identifier	regnum		3440752	1					
ANR	3441163	BreakStatement	break ;	1334:4:32202:32207	3440752	9	True				
ANR	3441164	Label	case ENCLOSE_STOP_BACKTRACK :	1336:2:32212:32239	3440752	10	True				
ANR	3441165	Identifier	ENCLOSE_STOP_BACKTRACK		3440752	0					
ANR	3441166	IfStatement	if ( IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node ) )		3440752	11					
ANR	3441167	Condition	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )	1337:8:32249:32286	3440752	0	True				
ANR	3441168	CallExpression	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )		3440752	0					
ANR	3441169	Callee	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		3440752	0					
ANR	3441170	Identifier	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		3440752	0					
ANR	3441171	ArgumentList	node		3440752	1					
ANR	3441172	Argument	node		3440752	0					
ANR	3441173	Identifier	node		3440752	0					
ANR	3441174	CompoundStatement		67:6:1999:2033	3440752	1					
ANR	3441175	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node -> target ) ;	1338:6:32297:32331	3440752	0	True				
ANR	3441176	IdentifierDecl	* qn = NQTFR ( node -> target )		3440752	0					
ANR	3441177	IdentifierDeclType	QtfrNode *		3440752	0					
ANR	3441178	Identifier	qn		3440752	1					
ANR	3441179	AssignmentExpression	* qn = NQTFR ( node -> target )		3440752	2		=			
ANR	3441180	Identifier	qn		3440752	0					
ANR	3441181	CallExpression	NQTFR ( node -> target )		3440752	1					
ANR	3441182	Callee	NQTFR		3440752	0					
ANR	3441183	Identifier	NQTFR		3440752	0					
ANR	3441184	ArgumentList	node -> target		3440752	1					
ANR	3441185	Argument	node -> target		3440752	0					
ANR	3441186	PtrMemberAccess	node -> target		3440752	0					
ANR	3441187	Identifier	node		3440752	0					
ANR	3441188	Identifier	target		3440752	1					
ANR	3441189	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1339:6:32339:32391	3440752	1	True				
ANR	3441190	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3440752	0		=			
ANR	3441191	Identifier	r		3440752	0					
ANR	3441192	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		3440752	1					
ANR	3441193	Callee	compile_tree_n_times		3440752	0					
ANR	3441194	Identifier	compile_tree_n_times		3440752	0					
ANR	3441195	ArgumentList	qn -> target		3440752	1					
ANR	3441196	Argument	qn -> target		3440752	0					
ANR	3441197	PtrMemberAccess	qn -> target		3440752	0					
ANR	3441198	Identifier	qn		3440752	0					
ANR	3441199	Identifier	target		3440752	1					
ANR	3441200	Argument	qn -> lower		3440752	1					
ANR	3441201	PtrMemberAccess	qn -> lower		3440752	0					
ANR	3441202	Identifier	qn		3440752	0					
ANR	3441203	Identifier	lower		3440752	1					
ANR	3441204	Argument	reg		3440752	2					
ANR	3441205	Identifier	reg		3440752	0					
ANR	3441206	IfStatement	if ( r )		3440752	2					
ANR	3441207	Condition	r	1340:10:32403:32403	3440752	0	True				
ANR	3441208	Identifier	r		3440752	0					
ANR	3441209	ReturnStatement	return r ;	1340:13:32406:32414	3440752	1	True				
ANR	3441210	Identifier	r		3440752	0					
ANR	3441211	ExpressionStatement	"len = compile_length_tree ( qn -> target , reg )"	1342:6:32423:32465	3440752	3	True				
ANR	3441212	AssignmentExpression	"len = compile_length_tree ( qn -> target , reg )"		3440752	0		=			
ANR	3441213	Identifier	len		3440752	0					
ANR	3441214	CallExpression	"compile_length_tree ( qn -> target , reg )"		3440752	1					
ANR	3441215	Callee	compile_length_tree		3440752	0					
ANR	3441216	Identifier	compile_length_tree		3440752	0					
ANR	3441217	ArgumentList	qn -> target		3440752	1					
ANR	3441218	Argument	qn -> target		3440752	0					
ANR	3441219	PtrMemberAccess	qn -> target		3440752	0					
ANR	3441220	Identifier	qn		3440752	0					
ANR	3441221	Identifier	target		3440752	1					
ANR	3441222	Argument	reg		3440752	1					
ANR	3441223	Identifier	reg		3440752	0					
ANR	3441224	IfStatement	if ( len < 0 )		3440752	4					
ANR	3441225	Condition	len < 0	1343:10:32477:32483	3440752	0	True				
ANR	3441226	RelationalExpression	len < 0		3440752	0		<			
ANR	3441227	Identifier	len		3440752	0					
ANR	3441228	PrimaryExpression	0		3440752	1					
ANR	3441229	ReturnStatement	return len ;	1343:19:32486:32496	3440752	1	True				
ANR	3441230	Identifier	len		3440752	0					
ANR	3441231	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_POP + SIZE_OP_JUMP )"	1345:6:32505:32576	3440752	5	True				
ANR	3441232	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_POP + SIZE_OP_JUMP )"		3440752	0		=			
ANR	3441233	Identifier	r		3440752	0					
ANR	3441234	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_POP + SIZE_OP_JUMP )"		3440752	1					
ANR	3441235	Callee	add_opcode_rel_addr		3440752	0					
ANR	3441236	Identifier	add_opcode_rel_addr		3440752	0					
ANR	3441237	ArgumentList	reg		3440752	1					
ANR	3441238	Argument	reg		3440752	0					
ANR	3441239	Identifier	reg		3440752	0					
ANR	3441240	Argument	OP_PUSH		3440752	1					
ANR	3441241	Identifier	OP_PUSH		3440752	0					
ANR	3441242	Argument	len + SIZE_OP_POP + SIZE_OP_JUMP		3440752	2					
ANR	3441243	AdditiveExpression	len + SIZE_OP_POP + SIZE_OP_JUMP		3440752	0		+			
ANR	3441244	Identifier	len		3440752	0					
ANR	3441245	AdditiveExpression	SIZE_OP_POP + SIZE_OP_JUMP		3440752	1		+			
ANR	3441246	Identifier	SIZE_OP_POP		3440752	0					
ANR	3441247	Identifier	SIZE_OP_JUMP		3440752	1					
ANR	3441248	IfStatement	if ( r )		3440752	6					
ANR	3441249	Condition	r	1346:10:32588:32588	3440752	0	True				
ANR	3441250	Identifier	r		3440752	0					
ANR	3441251	ReturnStatement	return r ;	1346:13:32591:32599	3440752	1	True				
ANR	3441252	Identifier	r		3440752	0					
ANR	3441253	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1347:6:32607:32640	3440752	7	True				
ANR	3441254	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		3440752	0		=			
ANR	3441255	Identifier	r		3440752	0					
ANR	3441256	CallExpression	"compile_tree ( qn -> target , reg )"		3440752	1					
ANR	3441257	Callee	compile_tree		3440752	0					
ANR	3441258	Identifier	compile_tree		3440752	0					
ANR	3441259	ArgumentList	qn -> target		3440752	1					
ANR	3441260	Argument	qn -> target		3440752	0					
ANR	3441261	PtrMemberAccess	qn -> target		3440752	0					
ANR	3441262	Identifier	qn		3440752	0					
ANR	3441263	Identifier	target		3440752	1					
ANR	3441264	Argument	reg		3440752	1					
ANR	3441265	Identifier	reg		3440752	0					
ANR	3441266	IfStatement	if ( r )		3440752	8					
ANR	3441267	Condition	r	1348:10:32652:32652	3440752	0	True				
ANR	3441268	Identifier	r		3440752	0					
ANR	3441269	ReturnStatement	return r ;	1348:13:32655:32663	3440752	1	True				
ANR	3441270	Identifier	r		3440752	0					
ANR	3441271	ExpressionStatement	"r = add_opcode ( reg , OP_POP )"	1349:6:32671:32698	3440752	9	True				
ANR	3441272	AssignmentExpression	"r = add_opcode ( reg , OP_POP )"		3440752	0		=			
ANR	3441273	Identifier	r		3440752	0					
ANR	3441274	CallExpression	"add_opcode ( reg , OP_POP )"		3440752	1					
ANR	3441275	Callee	add_opcode		3440752	0					
ANR	3441276	Identifier	add_opcode		3440752	0					
ANR	3441277	ArgumentList	reg		3440752	1					
ANR	3441278	Argument	reg		3440752	0					
ANR	3441279	Identifier	reg		3440752	0					
ANR	3441280	Argument	OP_POP		3440752	1					
ANR	3441281	Identifier	OP_POP		3440752	0					
ANR	3441282	IfStatement	if ( r )		3440752	10					
ANR	3441283	Condition	r	1350:10:32710:32710	3440752	0	True				
ANR	3441284	Identifier	r		3440752	0					
ANR	3441285	ReturnStatement	return r ;	1350:13:32713:32721	3440752	1	True				
ANR	3441286	Identifier	r		3440752	0					
ANR	3441287	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP ) )"	1351:6:32729:32838	3440752	11	True				
ANR	3441288	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP ) )"		3440752	0		=			
ANR	3441289	Identifier	r		3440752	0					
ANR	3441290	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP ) )"		3440752	1					
ANR	3441291	Callee	add_opcode_rel_addr		3440752	0					
ANR	3441292	Identifier	add_opcode_rel_addr		3440752	0					
ANR	3441293	ArgumentList	reg		3440752	1					
ANR	3441294	Argument	reg		3440752	0					
ANR	3441295	Identifier	reg		3440752	0					
ANR	3441296	Argument	OP_JUMP		3440752	1					
ANR	3441297	Identifier	OP_JUMP		3440752	0					
ANR	3441298	Argument	- ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP )		3440752	2					
ANR	3441299	UnaryOperationExpression	- ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP )		3440752	0					
ANR	3441300	UnaryOperator	-		3440752	0					
ANR	3441301	AdditiveExpression	( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP		3440752	1		+			
ANR	3441302	CastExpression	( int ) SIZE_OP_PUSH		3440752	0					
ANR	3441303	CastTarget	int		3440752	0					
ANR	3441304	Identifier	SIZE_OP_PUSH		3440752	1					
ANR	3441305	AdditiveExpression	len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP		3440752	1		+			
ANR	3441306	Identifier	len		3440752	0					
ANR	3441307	AdditiveExpression	( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP		3440752	1		+			
ANR	3441308	CastExpression	( int ) SIZE_OP_POP		3440752	0					
ANR	3441309	CastTarget	int		3440752	0					
ANR	3441310	Identifier	SIZE_OP_POP		3440752	1					
ANR	3441311	CastExpression	( int ) SIZE_OP_JUMP		3440752	1					
ANR	3441312	CastTarget	int		3440752	0					
ANR	3441313	Identifier	SIZE_OP_JUMP		3440752	1					
ANR	3441314	ElseStatement	else		3440752	0					
ANR	3441315	CompoundStatement		83:9:2557:2557	3440752	0					
ANR	3441316	ExpressionStatement	"r = add_opcode ( reg , OP_PUSH_STOP_BT )"	1355:6:32863:32899	3440752	0	True				
ANR	3441317	AssignmentExpression	"r = add_opcode ( reg , OP_PUSH_STOP_BT )"		3440752	0		=			
ANR	3441318	Identifier	r		3440752	0					
ANR	3441319	CallExpression	"add_opcode ( reg , OP_PUSH_STOP_BT )"		3440752	1					
ANR	3441320	Callee	add_opcode		3440752	0					
ANR	3441321	Identifier	add_opcode		3440752	0					
ANR	3441322	ArgumentList	reg		3440752	1					
ANR	3441323	Argument	reg		3440752	0					
ANR	3441324	Identifier	reg		3440752	0					
ANR	3441325	Argument	OP_PUSH_STOP_BT		3440752	1					
ANR	3441326	Identifier	OP_PUSH_STOP_BT		3440752	0					
ANR	3441327	IfStatement	if ( r )		3440752	1					
ANR	3441328	Condition	r	1356:10:32911:32911	3440752	0	True				
ANR	3441329	Identifier	r		3440752	0					
ANR	3441330	ReturnStatement	return r ;	1356:13:32914:32922	3440752	1	True				
ANR	3441331	Identifier	r		3440752	0					
ANR	3441332	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1357:6:32930:32965	3440752	2	True				
ANR	3441333	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		3440752	0		=			
ANR	3441334	Identifier	r		3440752	0					
ANR	3441335	CallExpression	"compile_tree ( node -> target , reg )"		3440752	1					
ANR	3441336	Callee	compile_tree		3440752	0					
ANR	3441337	Identifier	compile_tree		3440752	0					
ANR	3441338	ArgumentList	node -> target		3440752	1					
ANR	3441339	Argument	node -> target		3440752	0					
ANR	3441340	PtrMemberAccess	node -> target		3440752	0					
ANR	3441341	Identifier	node		3440752	0					
ANR	3441342	Identifier	target		3440752	1					
ANR	3441343	Argument	reg		3440752	1					
ANR	3441344	Identifier	reg		3440752	0					
ANR	3441345	IfStatement	if ( r )		3440752	3					
ANR	3441346	Condition	r	1358:10:32977:32977	3440752	0	True				
ANR	3441347	Identifier	r		3440752	0					
ANR	3441348	ReturnStatement	return r ;	1358:13:32980:32988	3440752	1	True				
ANR	3441349	Identifier	r		3440752	0					
ANR	3441350	ExpressionStatement	"r = add_opcode ( reg , OP_POP_STOP_BT )"	1359:6:32996:33031	3440752	4	True				
ANR	3441351	AssignmentExpression	"r = add_opcode ( reg , OP_POP_STOP_BT )"		3440752	0		=			
ANR	3441352	Identifier	r		3440752	0					
ANR	3441353	CallExpression	"add_opcode ( reg , OP_POP_STOP_BT )"		3440752	1					
ANR	3441354	Callee	add_opcode		3440752	0					
ANR	3441355	Identifier	add_opcode		3440752	0					
ANR	3441356	ArgumentList	reg		3440752	1					
ANR	3441357	Argument	reg		3440752	0					
ANR	3441358	Identifier	reg		3440752	0					
ANR	3441359	Argument	OP_POP_STOP_BT		3440752	1					
ANR	3441360	Identifier	OP_POP_STOP_BT		3440752	0					
ANR	3441361	BreakStatement	break ;	1361:4:33043:33048	3440752	12	True				
ANR	3441362	Label	default :	1363:2:33053:33060	3440752	13	True				
ANR	3441363	Identifier	default		3440752	0					
ANR	3441364	ReturnStatement	return ONIGERR_TYPE_BUG ;	1364:4:33066:33089	3440752	14	True				
ANR	3441365	Identifier	ONIGERR_TYPE_BUG		3440752	0					
ANR	3441366	BreakStatement	break ;	1365:4:33095:33100	3440752	15	True				
ANR	3441367	ReturnStatement	return r ;	1368:2:33109:33117	3440752	3	True				
ANR	3441368	Identifier	r		3440752	0					
ANR	3441369	ReturnType	static int		3440752	1					
ANR	3441370	Identifier	compile_enclose_node		3440752	2					
ANR	3441371	ParameterList	"EncloseNode * node , regex_t * reg"		3440752	3					
ANR	3441372	Parameter	EncloseNode * node	1271:21:30264:30280	3440752	0	True				
ANR	3441373	ParameterType	EncloseNode *		3440752	0					
ANR	3441374	Identifier	node		3440752	1					
ANR	3441375	Parameter	regex_t * reg	1271:40:30283:30294	3440752	1	True				
ANR	3441376	ParameterType	regex_t *		3440752	0					
ANR	3441377	Identifier	reg		3440752	1					
ANR	3441378	CFGEntryNode	ENTRY		3440752		True				
ANR	3441379	CFGExitNode	EXIT		3440752		True				
ANR	3441380	Symbol	BBUF_GET_OFFSET_POS		3440752						
ANR	3441381	Symbol	OP_RETURN		3440752						
ANR	3441382	Symbol	SIZE_OP_MEMORY_END_PUSH_REC		3440752						
ANR	3441383	Symbol	ENCLOSE_OPTION		3440752						
ANR	3441384	Symbol	NQTFR		3440752						
ANR	3441385	Symbol	SIZE_OP_MEMORY_START_PUSH		3440752						
ANR	3441386	Symbol	OP_MEMORY_END_PUSH		3440752						
ANR	3441387	Symbol	len		3440752						
ANR	3441388	Symbol	reg		3440752						
ANR	3441389	Symbol	compile_option_node		3440752						
ANR	3441390	Symbol	OP_CALL		3440752						
ANR	3441391	Symbol	OP_PUSH_STOP_BT		3440752						
ANR	3441392	Symbol	* node		3440752						
ANR	3441393	Symbol	add_opcode		3440752						
ANR	3441394	Symbol	OP_POP_STOP_BT		3440752						
ANR	3441395	Symbol	qn		3440752						
ANR	3441396	Symbol	SIZE_OP_JUMP		3440752						
ANR	3441397	Symbol	BIT_STATUS_AT		3440752						
ANR	3441398	Symbol	OP_JUMP		3440752						
ANR	3441399	Symbol	NST_ADDR_FIXED		3440752						
ANR	3441400	Symbol	OP_MEMORY_END_REC		3440752						
ANR	3441401	Symbol	add_abs_addr		3440752						
ANR	3441402	Symbol	node -> regnum		3440752						
ANR	3441403	Symbol	ONIGERR_TYPE_BUG		3440752						
ANR	3441404	Symbol	qn -> target		3440752						
ANR	3441405	Symbol	node		3440752						
ANR	3441406	Symbol	OP_POP		3440752						
ANR	3441407	Symbol	OP_MEMORY_END_PUSH_REC		3440752						
ANR	3441408	Symbol	node -> type		3440752						
ANR	3441409	Symbol	OP_MEMORY_END		3440752						
ANR	3441410	Symbol	OP_MEMORY_START_PUSH		3440752						
ANR	3441411	Symbol	SIZE_OP_MEMORY_END_PUSH		3440752						
ANR	3441412	Symbol	* qn		3440752						
ANR	3441413	Symbol	compile_tree_n_times		3440752						
ANR	3441414	Symbol	OP_PUSH		3440752						
ANR	3441415	Symbol	SIZE_OP_MEMORY_END		3440752						
ANR	3441416	Symbol	OP_MEMORY_START		3440752						
ANR	3441417	Symbol	add_mem_num		3440752						
ANR	3441418	Symbol	qn -> lower		3440752						
ANR	3441419	Symbol	reg -> bt_mem_end		3440752						
ANR	3441420	Symbol	SIZE_OP_MEMORY_END_REC		3440752						
ANR	3441421	Symbol	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		3440752						
ANR	3441422	Symbol	node -> call_addr		3440752						
ANR	3441423	Symbol	add_opcode_rel_addr		3440752						
ANR	3441424	Symbol	compile_length_tree		3440752						
ANR	3441425	Symbol	IS_ENCLOSE_CALLED		3440752						
ANR	3441426	Symbol	SIZE_OP_PUSH		3440752						
ANR	3441427	Symbol	SIZE_ABSADDR		3440752						
ANR	3441428	Symbol	node -> state		3440752						
ANR	3441429	Symbol	r		3440752						
ANR	3441430	Symbol	compile_tree		3440752						
ANR	3441431	Symbol	reg -> bt_mem_start		3440752						
ANR	3441432	Symbol	SIZE_OP_POP		3440752						
ANR	3441433	Symbol	IS_ENCLOSE_RECURSION		3440752						
ANR	3441434	Symbol	SIZE_OP_RETURN		3440752						
ANR	3441435	Symbol	node -> target		3440752						
ANR	3441436	Symbol	* reg		3440752						
ANR	3441437	Function	compile_length_anchor_node	1371:0:33122:33803							
ANR	3441438	FunctionDef	"compile_length_anchor_node (AnchorNode * node , regex_t * reg)"		3441437	0					
ANR	3441439	CompoundStatement		1373:0:33192:33803	3441437	0					
ANR	3441440	IdentifierDeclStatement	int len ;	1374:2:33196:33203	3441437	0	True				
ANR	3441441	IdentifierDecl	len		3441437	0					
ANR	3441442	IdentifierDeclType	int		3441437	0					
ANR	3441443	Identifier	len		3441437	1					
ANR	3441444	IdentifierDeclStatement	int tlen = 0 ;	1375:2:33207:33219	3441437	1	True				
ANR	3441445	IdentifierDecl	tlen = 0		3441437	0					
ANR	3441446	IdentifierDeclType	int		3441437	0					
ANR	3441447	Identifier	tlen		3441437	1					
ANR	3441448	AssignmentExpression	tlen = 0		3441437	2		=			
ANR	3441449	Identifier	tlen		3441437	0					
ANR	3441450	PrimaryExpression	0		3441437	1					
ANR	3441451	IfStatement	if ( node -> target )		3441437	2					
ANR	3441452	Condition	node -> target	1377:6:33228:33239	3441437	0	True				
ANR	3441453	PtrMemberAccess	node -> target		3441437	0					
ANR	3441454	Identifier	node		3441437	0					
ANR	3441455	Identifier	target		3441437	1					
ANR	3441456	CompoundStatement		5:20:49:49	3441437	1					
ANR	3441457	ExpressionStatement	"tlen = compile_length_tree ( node -> target , reg )"	1378:4:33248:33293	3441437	0	True				
ANR	3441458	AssignmentExpression	"tlen = compile_length_tree ( node -> target , reg )"		3441437	0		=			
ANR	3441459	Identifier	tlen		3441437	0					
ANR	3441460	CallExpression	"compile_length_tree ( node -> target , reg )"		3441437	1					
ANR	3441461	Callee	compile_length_tree		3441437	0					
ANR	3441462	Identifier	compile_length_tree		3441437	0					
ANR	3441463	ArgumentList	node -> target		3441437	1					
ANR	3441464	Argument	node -> target		3441437	0					
ANR	3441465	PtrMemberAccess	node -> target		3441437	0					
ANR	3441466	Identifier	node		3441437	0					
ANR	3441467	Identifier	target		3441437	1					
ANR	3441468	Argument	reg		3441437	1					
ANR	3441469	Identifier	reg		3441437	0					
ANR	3441470	IfStatement	if ( tlen < 0 )		3441437	1					
ANR	3441471	Condition	tlen < 0	1379:8:33303:33310	3441437	0	True				
ANR	3441472	RelationalExpression	tlen < 0		3441437	0		<			
ANR	3441473	Identifier	tlen		3441437	0					
ANR	3441474	PrimaryExpression	0		3441437	1					
ANR	3441475	ReturnStatement	return tlen ;	1379:18:33313:33324	3441437	1	True				
ANR	3441476	Identifier	tlen		3441437	0					
ANR	3441477	SwitchStatement	switch ( node -> type )		3441437	3					
ANR	3441478	Condition	node -> type	1382:10:33341:33350	3441437	0	True				
ANR	3441479	PtrMemberAccess	node -> type		3441437	0					
ANR	3441480	Identifier	node		3441437	0					
ANR	3441481	Identifier	type		3441437	1					
ANR	3441482	CompoundStatement		10:22:160:160	3441437	1					
ANR	3441483	Label	case ANCHOR_PREC_READ :	1383:2:33357:33378	3441437	0	True				
ANR	3441484	Identifier	ANCHOR_PREC_READ		3441437	0					
ANR	3441485	ExpressionStatement	len = SIZE_OP_PUSH_POS + tlen + SIZE_OP_POP_POS	1384:4:33384:33431	3441437	1	True				
ANR	3441486	AssignmentExpression	len = SIZE_OP_PUSH_POS + tlen + SIZE_OP_POP_POS		3441437	0		=			
ANR	3441487	Identifier	len		3441437	0					
ANR	3441488	AdditiveExpression	SIZE_OP_PUSH_POS + tlen + SIZE_OP_POP_POS		3441437	1		+			
ANR	3441489	Identifier	SIZE_OP_PUSH_POS		3441437	0					
ANR	3441490	AdditiveExpression	tlen + SIZE_OP_POP_POS		3441437	1		+			
ANR	3441491	Identifier	tlen		3441437	0					
ANR	3441492	Identifier	SIZE_OP_POP_POS		3441437	1					
ANR	3441493	BreakStatement	break ;	1385:4:33437:33442	3441437	2	True				
ANR	3441494	Label	case ANCHOR_PREC_READ_NOT :	1386:2:33446:33471	3441437	3	True				
ANR	3441495	Identifier	ANCHOR_PREC_READ_NOT		3441437	0					
ANR	3441496	ExpressionStatement	len = SIZE_OP_PUSH_POS_NOT + tlen + SIZE_OP_FAIL_POS	1387:4:33477:33529	3441437	4	True				
ANR	3441497	AssignmentExpression	len = SIZE_OP_PUSH_POS_NOT + tlen + SIZE_OP_FAIL_POS		3441437	0		=			
ANR	3441498	Identifier	len		3441437	0					
ANR	3441499	AdditiveExpression	SIZE_OP_PUSH_POS_NOT + tlen + SIZE_OP_FAIL_POS		3441437	1		+			
ANR	3441500	Identifier	SIZE_OP_PUSH_POS_NOT		3441437	0					
ANR	3441501	AdditiveExpression	tlen + SIZE_OP_FAIL_POS		3441437	1		+			
ANR	3441502	Identifier	tlen		3441437	0					
ANR	3441503	Identifier	SIZE_OP_FAIL_POS		3441437	1					
ANR	3441504	BreakStatement	break ;	1388:4:33535:33540	3441437	5	True				
ANR	3441505	Label	case ANCHOR_LOOK_BEHIND :	1389:2:33544:33567	3441437	6	True				
ANR	3441506	Identifier	ANCHOR_LOOK_BEHIND		3441437	0					
ANR	3441507	ExpressionStatement	len = SIZE_OP_LOOK_BEHIND + tlen	1390:4:33573:33605	3441437	7	True				
ANR	3441508	AssignmentExpression	len = SIZE_OP_LOOK_BEHIND + tlen		3441437	0		=			
ANR	3441509	Identifier	len		3441437	0					
ANR	3441510	AdditiveExpression	SIZE_OP_LOOK_BEHIND + tlen		3441437	1		+			
ANR	3441511	Identifier	SIZE_OP_LOOK_BEHIND		3441437	0					
ANR	3441512	Identifier	tlen		3441437	1					
ANR	3441513	BreakStatement	break ;	1391:4:33611:33616	3441437	8	True				
ANR	3441514	Label	case ANCHOR_LOOK_BEHIND_NOT :	1392:2:33620:33647	3441437	9	True				
ANR	3441515	Identifier	ANCHOR_LOOK_BEHIND_NOT		3441437	0					
ANR	3441516	ExpressionStatement	len = SIZE_OP_PUSH_LOOK_BEHIND_NOT + tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT	1393:4:33653:33725	3441437	10	True				
ANR	3441517	AssignmentExpression	len = SIZE_OP_PUSH_LOOK_BEHIND_NOT + tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441437	0		=			
ANR	3441518	Identifier	len		3441437	0					
ANR	3441519	AdditiveExpression	SIZE_OP_PUSH_LOOK_BEHIND_NOT + tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441437	1		+			
ANR	3441520	Identifier	SIZE_OP_PUSH_LOOK_BEHIND_NOT		3441437	0					
ANR	3441521	AdditiveExpression	tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441437	1		+			
ANR	3441522	Identifier	tlen		3441437	0					
ANR	3441523	Identifier	SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441437	1					
ANR	3441524	BreakStatement	break ;	1394:4:33731:33736	3441437	11	True				
ANR	3441525	Label	default :	1396:2:33741:33748	3441437	12	True				
ANR	3441526	Identifier	default		3441437	0					
ANR	3441527	ExpressionStatement	len = SIZE_OPCODE	1397:4:33754:33771	3441437	13	True				
ANR	3441528	AssignmentExpression	len = SIZE_OPCODE		3441437	0		=			
ANR	3441529	Identifier	len		3441437	0					
ANR	3441530	Identifier	SIZE_OPCODE		3441437	1					
ANR	3441531	BreakStatement	break ;	1398:4:33777:33782	3441437	14	True				
ANR	3441532	ReturnStatement	return len ;	1401:2:33791:33801	3441437	4	True				
ANR	3441533	Identifier	len		3441437	0					
ANR	3441534	ReturnType	static int		3441437	1					
ANR	3441535	Identifier	compile_length_anchor_node		3441437	2					
ANR	3441536	ParameterList	"AnchorNode * node , regex_t * reg"		3441437	3					
ANR	3441537	Parameter	AnchorNode * node	1372:27:33160:33175	3441437	0	True				
ANR	3441538	ParameterType	AnchorNode *		3441437	0					
ANR	3441539	Identifier	node		3441437	1					
ANR	3441540	Parameter	regex_t * reg	1372:45:33178:33189	3441437	1	True				
ANR	3441541	ParameterType	regex_t *		3441437	0					
ANR	3441542	Identifier	reg		3441437	1					
ANR	3441543	CFGEntryNode	ENTRY		3441437		True				
ANR	3441544	CFGExitNode	EXIT		3441437		True				
ANR	3441545	Symbol	SIZE_OP_FAIL_POS		3441437						
ANR	3441546	Symbol	compile_length_tree		3441437						
ANR	3441547	Symbol	SIZE_OP_POP_POS		3441437						
ANR	3441548	Symbol	SIZE_OP_LOOK_BEHIND		3441437						
ANR	3441549	Symbol	SIZE_OP_PUSH_LOOK_BEHIND_NOT		3441437						
ANR	3441550	Symbol	node		3441437						
ANR	3441551	Symbol	SIZE_OPCODE		3441437						
ANR	3441552	Symbol	len		3441437						
ANR	3441553	Symbol	SIZE_OP_PUSH_POS_NOT		3441437						
ANR	3441554	Symbol	SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441437						
ANR	3441555	Symbol	reg		3441437						
ANR	3441556	Symbol	tlen		3441437						
ANR	3441557	Symbol	node -> type		3441437						
ANR	3441558	Symbol	* node		3441437						
ANR	3441559	Symbol	node -> target		3441437						
ANR	3441560	Symbol	SIZE_OP_PUSH_POS		3441437						
ANR	3441561	Function	compile_anchor_node	1404:0:33806:36285							
ANR	3441562	FunctionDef	"compile_anchor_node (AnchorNode * node , regex_t * reg)"		3441561	0					
ANR	3441563	CompoundStatement		1406:0:33869:36285	3441561	0					
ANR	3441564	IdentifierDeclStatement	"int r , len ;"	1407:2:33873:33883	3441561	0	True				
ANR	3441565	IdentifierDecl	r		3441561	0					
ANR	3441566	IdentifierDeclType	int		3441561	0					
ANR	3441567	Identifier	r		3441561	1					
ANR	3441568	IdentifierDecl	len		3441561	1					
ANR	3441569	IdentifierDeclType	int		3441561	0					
ANR	3441570	Identifier	len		3441561	1					
ANR	3441571	SwitchStatement	switch ( node -> type )		3441561	1					
ANR	3441572	Condition	node -> type	1409:10:33896:33905	3441561	0	True				
ANR	3441573	PtrMemberAccess	node -> type		3441561	0					
ANR	3441574	Identifier	node		3441561	0					
ANR	3441575	Identifier	type		3441561	1					
ANR	3441576	CompoundStatement		4:22:38:38	3441561	1					
ANR	3441577	Label	case ANCHOR_BEGIN_BUF :	1410:2:33912:33933	3441561	0	True				
ANR	3441578	Identifier	ANCHOR_BEGIN_BUF		3441561	0					
ANR	3441579	ExpressionStatement	"r = add_opcode ( reg , OP_BEGIN_BUF )"	1410:30:33940:33973	3441561	1	True				
ANR	3441580	AssignmentExpression	"r = add_opcode ( reg , OP_BEGIN_BUF )"		3441561	0		=			
ANR	3441581	Identifier	r		3441561	0					
ANR	3441582	CallExpression	"add_opcode ( reg , OP_BEGIN_BUF )"		3441561	1					
ANR	3441583	Callee	add_opcode		3441561	0					
ANR	3441584	Identifier	add_opcode		3441561	0					
ANR	3441585	ArgumentList	reg		3441561	1					
ANR	3441586	Argument	reg		3441561	0					
ANR	3441587	Identifier	reg		3441561	0					
ANR	3441588	Argument	OP_BEGIN_BUF		3441561	1					
ANR	3441589	Identifier	OP_BEGIN_BUF		3441561	0					
ANR	3441590	BreakStatement	break ;	1410:70:33980:33985	3441561	2	True				
ANR	3441591	Label	case ANCHOR_END_BUF :	1411:2:33989:34008	3441561	3	True				
ANR	3441592	Identifier	ANCHOR_END_BUF		3441561	0					
ANR	3441593	ExpressionStatement	"r = add_opcode ( reg , OP_END_BUF )"	1411:30:34017:34048	3441561	4	True				
ANR	3441594	AssignmentExpression	"r = add_opcode ( reg , OP_END_BUF )"		3441561	0		=			
ANR	3441595	Identifier	r		3441561	0					
ANR	3441596	CallExpression	"add_opcode ( reg , OP_END_BUF )"		3441561	1					
ANR	3441597	Callee	add_opcode		3441561	0					
ANR	3441598	Identifier	add_opcode		3441561	0					
ANR	3441599	ArgumentList	reg		3441561	1					
ANR	3441600	Argument	reg		3441561	0					
ANR	3441601	Identifier	reg		3441561	0					
ANR	3441602	Argument	OP_END_BUF		3441561	1					
ANR	3441603	Identifier	OP_END_BUF		3441561	0					
ANR	3441604	BreakStatement	break ;	1411:70:34057:34062	3441561	5	True				
ANR	3441605	Label	case ANCHOR_BEGIN_LINE :	1412:2:34066:34088	3441561	6	True				
ANR	3441606	Identifier	ANCHOR_BEGIN_LINE		3441561	0					
ANR	3441607	ExpressionStatement	"r = add_opcode ( reg , OP_BEGIN_LINE )"	1412:30:34094:34128	3441561	7	True				
ANR	3441608	AssignmentExpression	"r = add_opcode ( reg , OP_BEGIN_LINE )"		3441561	0		=			
ANR	3441609	Identifier	r		3441561	0					
ANR	3441610	CallExpression	"add_opcode ( reg , OP_BEGIN_LINE )"		3441561	1					
ANR	3441611	Callee	add_opcode		3441561	0					
ANR	3441612	Identifier	add_opcode		3441561	0					
ANR	3441613	ArgumentList	reg		3441561	1					
ANR	3441614	Argument	reg		3441561	0					
ANR	3441615	Identifier	reg		3441561	0					
ANR	3441616	Argument	OP_BEGIN_LINE		3441561	1					
ANR	3441617	Identifier	OP_BEGIN_LINE		3441561	0					
ANR	3441618	BreakStatement	break ;	1412:70:34134:34139	3441561	8	True				
ANR	3441619	Label	case ANCHOR_END_LINE :	1413:2:34143:34163	3441561	9	True				
ANR	3441620	Identifier	ANCHOR_END_LINE		3441561	0					
ANR	3441621	ExpressionStatement	"r = add_opcode ( reg , OP_END_LINE )"	1413:30:34171:34203	3441561	10	True				
ANR	3441622	AssignmentExpression	"r = add_opcode ( reg , OP_END_LINE )"		3441561	0		=			
ANR	3441623	Identifier	r		3441561	0					
ANR	3441624	CallExpression	"add_opcode ( reg , OP_END_LINE )"		3441561	1					
ANR	3441625	Callee	add_opcode		3441561	0					
ANR	3441626	Identifier	add_opcode		3441561	0					
ANR	3441627	ArgumentList	reg		3441561	1					
ANR	3441628	Argument	reg		3441561	0					
ANR	3441629	Identifier	reg		3441561	0					
ANR	3441630	Argument	OP_END_LINE		3441561	1					
ANR	3441631	Identifier	OP_END_LINE		3441561	0					
ANR	3441632	BreakStatement	break ;	1413:70:34211:34216	3441561	11	True				
ANR	3441633	Label	case ANCHOR_SEMI_END_BUF :	1414:2:34220:34244	3441561	12	True				
ANR	3441634	Identifier	ANCHOR_SEMI_END_BUF		3441561	0					
ANR	3441635	ExpressionStatement	"r = add_opcode ( reg , OP_SEMI_END_BUF )"	1414:30:34248:34284	3441561	13	True				
ANR	3441636	AssignmentExpression	"r = add_opcode ( reg , OP_SEMI_END_BUF )"		3441561	0		=			
ANR	3441637	Identifier	r		3441561	0					
ANR	3441638	CallExpression	"add_opcode ( reg , OP_SEMI_END_BUF )"		3441561	1					
ANR	3441639	Callee	add_opcode		3441561	0					
ANR	3441640	Identifier	add_opcode		3441561	0					
ANR	3441641	ArgumentList	reg		3441561	1					
ANR	3441642	Argument	reg		3441561	0					
ANR	3441643	Identifier	reg		3441561	0					
ANR	3441644	Argument	OP_SEMI_END_BUF		3441561	1					
ANR	3441645	Identifier	OP_SEMI_END_BUF		3441561	0					
ANR	3441646	BreakStatement	break ;	1414:70:34288:34293	3441561	14	True				
ANR	3441647	Label	case ANCHOR_BEGIN_POSITION :	1415:2:34297:34323	3441561	15	True				
ANR	3441648	Identifier	ANCHOR_BEGIN_POSITION		3441561	0					
ANR	3441649	ExpressionStatement	"r = add_opcode ( reg , OP_BEGIN_POSITION )"	1415:30:34325:34363	3441561	16	True				
ANR	3441650	AssignmentExpression	"r = add_opcode ( reg , OP_BEGIN_POSITION )"		3441561	0		=			
ANR	3441651	Identifier	r		3441561	0					
ANR	3441652	CallExpression	"add_opcode ( reg , OP_BEGIN_POSITION )"		3441561	1					
ANR	3441653	Callee	add_opcode		3441561	0					
ANR	3441654	Identifier	add_opcode		3441561	0					
ANR	3441655	ArgumentList	reg		3441561	1					
ANR	3441656	Argument	reg		3441561	0					
ANR	3441657	Identifier	reg		3441561	0					
ANR	3441658	Argument	OP_BEGIN_POSITION		3441561	1					
ANR	3441659	Identifier	OP_BEGIN_POSITION		3441561	0					
ANR	3441660	BreakStatement	break ;	1415:70:34365:34370	3441561	17	True				
ANR	3441661	Label	case ANCHOR_WORD_BOUND :	1417:2:34375:34397	3441561	18	True				
ANR	3441662	Identifier	ANCHOR_WORD_BOUND		3441561	0					
ANR	3441663	ExpressionStatement	"r = add_opcode ( reg , OP_WORD_BOUND )"	1417:30:34403:34437	3441561	19	True				
ANR	3441664	AssignmentExpression	"r = add_opcode ( reg , OP_WORD_BOUND )"		3441561	0		=			
ANR	3441665	Identifier	r		3441561	0					
ANR	3441666	CallExpression	"add_opcode ( reg , OP_WORD_BOUND )"		3441561	1					
ANR	3441667	Callee	add_opcode		3441561	0					
ANR	3441668	Identifier	add_opcode		3441561	0					
ANR	3441669	ArgumentList	reg		3441561	1					
ANR	3441670	Argument	reg		3441561	0					
ANR	3441671	Identifier	reg		3441561	0					
ANR	3441672	Argument	OP_WORD_BOUND		3441561	1					
ANR	3441673	Identifier	OP_WORD_BOUND		3441561	0					
ANR	3441674	BreakStatement	break ;	1417:70:34443:34448	3441561	20	True				
ANR	3441675	Label	case ANCHOR_NOT_WORD_BOUND :	1418:2:34452:34478	3441561	21	True				
ANR	3441676	Identifier	ANCHOR_NOT_WORD_BOUND		3441561	0					
ANR	3441677	ExpressionStatement	"r = add_opcode ( reg , OP_NOT_WORD_BOUND )"	1418:30:34480:34518	3441561	22	True				
ANR	3441678	AssignmentExpression	"r = add_opcode ( reg , OP_NOT_WORD_BOUND )"		3441561	0		=			
ANR	3441679	Identifier	r		3441561	0					
ANR	3441680	CallExpression	"add_opcode ( reg , OP_NOT_WORD_BOUND )"		3441561	1					
ANR	3441681	Callee	add_opcode		3441561	0					
ANR	3441682	Identifier	add_opcode		3441561	0					
ANR	3441683	ArgumentList	reg		3441561	1					
ANR	3441684	Argument	reg		3441561	0					
ANR	3441685	Identifier	reg		3441561	0					
ANR	3441686	Argument	OP_NOT_WORD_BOUND		3441561	1					
ANR	3441687	Identifier	OP_NOT_WORD_BOUND		3441561	0					
ANR	3441688	BreakStatement	break ;	1418:70:34520:34525	3441561	23	True				
ANR	3441689	Label	case ANCHOR_WORD_BEGIN :	1420:2:34555:34577	3441561	24	True				
ANR	3441690	Identifier	ANCHOR_WORD_BEGIN		3441561	0					
ANR	3441691	ExpressionStatement	"r = add_opcode ( reg , OP_WORD_BEGIN )"	1420:30:34583:34617	3441561	25	True				
ANR	3441692	AssignmentExpression	"r = add_opcode ( reg , OP_WORD_BEGIN )"		3441561	0		=			
ANR	3441693	Identifier	r		3441561	0					
ANR	3441694	CallExpression	"add_opcode ( reg , OP_WORD_BEGIN )"		3441561	1					
ANR	3441695	Callee	add_opcode		3441561	0					
ANR	3441696	Identifier	add_opcode		3441561	0					
ANR	3441697	ArgumentList	reg		3441561	1					
ANR	3441698	Argument	reg		3441561	0					
ANR	3441699	Identifier	reg		3441561	0					
ANR	3441700	Argument	OP_WORD_BEGIN		3441561	1					
ANR	3441701	Identifier	OP_WORD_BEGIN		3441561	0					
ANR	3441702	BreakStatement	break ;	1420:70:34623:34628	3441561	26	True				
ANR	3441703	Label	case ANCHOR_WORD_END :	1421:2:34632:34652	3441561	27	True				
ANR	3441704	Identifier	ANCHOR_WORD_END		3441561	0					
ANR	3441705	ExpressionStatement	"r = add_opcode ( reg , OP_WORD_END )"	1421:30:34660:34692	3441561	28	True				
ANR	3441706	AssignmentExpression	"r = add_opcode ( reg , OP_WORD_END )"		3441561	0		=			
ANR	3441707	Identifier	r		3441561	0					
ANR	3441708	CallExpression	"add_opcode ( reg , OP_WORD_END )"		3441561	1					
ANR	3441709	Callee	add_opcode		3441561	0					
ANR	3441710	Identifier	add_opcode		3441561	0					
ANR	3441711	ArgumentList	reg		3441561	1					
ANR	3441712	Argument	reg		3441561	0					
ANR	3441713	Identifier	reg		3441561	0					
ANR	3441714	Argument	OP_WORD_END		3441561	1					
ANR	3441715	Identifier	OP_WORD_END		3441561	0					
ANR	3441716	BreakStatement	break ;	1421:70:34700:34705	3441561	29	True				
ANR	3441717	Label	case ANCHOR_PREC_READ :	1424:2:34717:34738	3441561	30	True				
ANR	3441718	Identifier	ANCHOR_PREC_READ		3441561	0					
ANR	3441719	ExpressionStatement	"r = add_opcode ( reg , OP_PUSH_POS )"	1425:4:34744:34776	3441561	31	True				
ANR	3441720	AssignmentExpression	"r = add_opcode ( reg , OP_PUSH_POS )"		3441561	0		=			
ANR	3441721	Identifier	r		3441561	0					
ANR	3441722	CallExpression	"add_opcode ( reg , OP_PUSH_POS )"		3441561	1					
ANR	3441723	Callee	add_opcode		3441561	0					
ANR	3441724	Identifier	add_opcode		3441561	0					
ANR	3441725	ArgumentList	reg		3441561	1					
ANR	3441726	Argument	reg		3441561	0					
ANR	3441727	Identifier	reg		3441561	0					
ANR	3441728	Argument	OP_PUSH_POS		3441561	1					
ANR	3441729	Identifier	OP_PUSH_POS		3441561	0					
ANR	3441730	IfStatement	if ( r )		3441561	32					
ANR	3441731	Condition	r	1426:8:34786:34786	3441561	0	True				
ANR	3441732	Identifier	r		3441561	0					
ANR	3441733	ReturnStatement	return r ;	1426:11:34789:34797	3441561	1	True				
ANR	3441734	Identifier	r		3441561	0					
ANR	3441735	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1427:4:34803:34838	3441561	33	True				
ANR	3441736	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		3441561	0		=			
ANR	3441737	Identifier	r		3441561	0					
ANR	3441738	CallExpression	"compile_tree ( node -> target , reg )"		3441561	1					
ANR	3441739	Callee	compile_tree		3441561	0					
ANR	3441740	Identifier	compile_tree		3441561	0					
ANR	3441741	ArgumentList	node -> target		3441561	1					
ANR	3441742	Argument	node -> target		3441561	0					
ANR	3441743	PtrMemberAccess	node -> target		3441561	0					
ANR	3441744	Identifier	node		3441561	0					
ANR	3441745	Identifier	target		3441561	1					
ANR	3441746	Argument	reg		3441561	1					
ANR	3441747	Identifier	reg		3441561	0					
ANR	3441748	IfStatement	if ( r )		3441561	34					
ANR	3441749	Condition	r	1428:8:34848:34848	3441561	0	True				
ANR	3441750	Identifier	r		3441561	0					
ANR	3441751	ReturnStatement	return r ;	1428:11:34851:34859	3441561	1	True				
ANR	3441752	Identifier	r		3441561	0					
ANR	3441753	ExpressionStatement	"r = add_opcode ( reg , OP_POP_POS )"	1429:4:34865:34896	3441561	35	True				
ANR	3441754	AssignmentExpression	"r = add_opcode ( reg , OP_POP_POS )"		3441561	0		=			
ANR	3441755	Identifier	r		3441561	0					
ANR	3441756	CallExpression	"add_opcode ( reg , OP_POP_POS )"		3441561	1					
ANR	3441757	Callee	add_opcode		3441561	0					
ANR	3441758	Identifier	add_opcode		3441561	0					
ANR	3441759	ArgumentList	reg		3441561	1					
ANR	3441760	Argument	reg		3441561	0					
ANR	3441761	Identifier	reg		3441561	0					
ANR	3441762	Argument	OP_POP_POS		3441561	1					
ANR	3441763	Identifier	OP_POP_POS		3441561	0					
ANR	3441764	BreakStatement	break ;	1430:4:34902:34907	3441561	36	True				
ANR	3441765	Label	case ANCHOR_PREC_READ_NOT :	1432:2:34912:34937	3441561	37	True				
ANR	3441766	Identifier	ANCHOR_PREC_READ_NOT		3441561	0					
ANR	3441767	ExpressionStatement	"len = compile_length_tree ( node -> target , reg )"	1433:4:34943:34987	3441561	38	True				
ANR	3441768	AssignmentExpression	"len = compile_length_tree ( node -> target , reg )"		3441561	0		=			
ANR	3441769	Identifier	len		3441561	0					
ANR	3441770	CallExpression	"compile_length_tree ( node -> target , reg )"		3441561	1					
ANR	3441771	Callee	compile_length_tree		3441561	0					
ANR	3441772	Identifier	compile_length_tree		3441561	0					
ANR	3441773	ArgumentList	node -> target		3441561	1					
ANR	3441774	Argument	node -> target		3441561	0					
ANR	3441775	PtrMemberAccess	node -> target		3441561	0					
ANR	3441776	Identifier	node		3441561	0					
ANR	3441777	Identifier	target		3441561	1					
ANR	3441778	Argument	reg		3441561	1					
ANR	3441779	Identifier	reg		3441561	0					
ANR	3441780	IfStatement	if ( len < 0 )		3441561	39					
ANR	3441781	Condition	len < 0	1434:8:34997:35003	3441561	0	True				
ANR	3441782	RelationalExpression	len < 0		3441561	0		<			
ANR	3441783	Identifier	len		3441561	0					
ANR	3441784	PrimaryExpression	0		3441561	1					
ANR	3441785	ReturnStatement	return len ;	1434:17:35006:35016	3441561	1	True				
ANR	3441786	Identifier	len		3441561	0					
ANR	3441787	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_POS_NOT , len + SIZE_OP_FAIL_POS )"	1435:4:35022:35091	3441561	40	True				
ANR	3441788	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_POS_NOT , len + SIZE_OP_FAIL_POS )"		3441561	0		=			
ANR	3441789	Identifier	r		3441561	0					
ANR	3441790	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_POS_NOT , len + SIZE_OP_FAIL_POS )"		3441561	1					
ANR	3441791	Callee	add_opcode_rel_addr		3441561	0					
ANR	3441792	Identifier	add_opcode_rel_addr		3441561	0					
ANR	3441793	ArgumentList	reg		3441561	1					
ANR	3441794	Argument	reg		3441561	0					
ANR	3441795	Identifier	reg		3441561	0					
ANR	3441796	Argument	OP_PUSH_POS_NOT		3441561	1					
ANR	3441797	Identifier	OP_PUSH_POS_NOT		3441561	0					
ANR	3441798	Argument	len + SIZE_OP_FAIL_POS		3441561	2					
ANR	3441799	AdditiveExpression	len + SIZE_OP_FAIL_POS		3441561	0		+			
ANR	3441800	Identifier	len		3441561	0					
ANR	3441801	Identifier	SIZE_OP_FAIL_POS		3441561	1					
ANR	3441802	IfStatement	if ( r )		3441561	41					
ANR	3441803	Condition	r	1436:8:35101:35101	3441561	0	True				
ANR	3441804	Identifier	r		3441561	0					
ANR	3441805	ReturnStatement	return r ;	1436:11:35104:35112	3441561	1	True				
ANR	3441806	Identifier	r		3441561	0					
ANR	3441807	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1437:4:35118:35153	3441561	42	True				
ANR	3441808	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		3441561	0		=			
ANR	3441809	Identifier	r		3441561	0					
ANR	3441810	CallExpression	"compile_tree ( node -> target , reg )"		3441561	1					
ANR	3441811	Callee	compile_tree		3441561	0					
ANR	3441812	Identifier	compile_tree		3441561	0					
ANR	3441813	ArgumentList	node -> target		3441561	1					
ANR	3441814	Argument	node -> target		3441561	0					
ANR	3441815	PtrMemberAccess	node -> target		3441561	0					
ANR	3441816	Identifier	node		3441561	0					
ANR	3441817	Identifier	target		3441561	1					
ANR	3441818	Argument	reg		3441561	1					
ANR	3441819	Identifier	reg		3441561	0					
ANR	3441820	IfStatement	if ( r )		3441561	43					
ANR	3441821	Condition	r	1438:8:35163:35163	3441561	0	True				
ANR	3441822	Identifier	r		3441561	0					
ANR	3441823	ReturnStatement	return r ;	1438:11:35166:35174	3441561	1	True				
ANR	3441824	Identifier	r		3441561	0					
ANR	3441825	ExpressionStatement	"r = add_opcode ( reg , OP_FAIL_POS )"	1439:4:35180:35212	3441561	44	True				
ANR	3441826	AssignmentExpression	"r = add_opcode ( reg , OP_FAIL_POS )"		3441561	0		=			
ANR	3441827	Identifier	r		3441561	0					
ANR	3441828	CallExpression	"add_opcode ( reg , OP_FAIL_POS )"		3441561	1					
ANR	3441829	Callee	add_opcode		3441561	0					
ANR	3441830	Identifier	add_opcode		3441561	0					
ANR	3441831	ArgumentList	reg		3441561	1					
ANR	3441832	Argument	reg		3441561	0					
ANR	3441833	Identifier	reg		3441561	0					
ANR	3441834	Argument	OP_FAIL_POS		3441561	1					
ANR	3441835	Identifier	OP_FAIL_POS		3441561	0					
ANR	3441836	BreakStatement	break ;	1440:4:35218:35223	3441561	45	True				
ANR	3441837	Label	case ANCHOR_LOOK_BEHIND :	1442:2:35228:35251	3441561	46	True				
ANR	3441838	Identifier	ANCHOR_LOOK_BEHIND		3441561	0					
ANR	3441839	CompoundStatement		39:6:1395:1400	3441561	47					
ANR	3441840	IdentifierDeclStatement	int n ;	1444:6:35265:35270	3441561	0	True				
ANR	3441841	IdentifierDecl	n		3441561	0					
ANR	3441842	IdentifierDeclType	int		3441561	0					
ANR	3441843	Identifier	n		3441561	1					
ANR	3441844	ExpressionStatement	"r = add_opcode ( reg , OP_LOOK_BEHIND )"	1445:6:35278:35313	3441561	1	True				
ANR	3441845	AssignmentExpression	"r = add_opcode ( reg , OP_LOOK_BEHIND )"		3441561	0		=			
ANR	3441846	Identifier	r		3441561	0					
ANR	3441847	CallExpression	"add_opcode ( reg , OP_LOOK_BEHIND )"		3441561	1					
ANR	3441848	Callee	add_opcode		3441561	0					
ANR	3441849	Identifier	add_opcode		3441561	0					
ANR	3441850	ArgumentList	reg		3441561	1					
ANR	3441851	Argument	reg		3441561	0					
ANR	3441852	Identifier	reg		3441561	0					
ANR	3441853	Argument	OP_LOOK_BEHIND		3441561	1					
ANR	3441854	Identifier	OP_LOOK_BEHIND		3441561	0					
ANR	3441855	IfStatement	if ( r )		3441561	2					
ANR	3441856	Condition	r	1446:10:35325:35325	3441561	0	True				
ANR	3441857	Identifier	r		3441561	0					
ANR	3441858	ReturnStatement	return r ;	1446:13:35328:35336	3441561	1	True				
ANR	3441859	Identifier	r		3441561	0					
ANR	3441860	IfStatement	if ( node -> char_len < 0 )		3441561	3					
ANR	3441861	Condition	node -> char_len < 0	1447:10:35348:35365	3441561	0	True				
ANR	3441862	RelationalExpression	node -> char_len < 0		3441561	0		<			
ANR	3441863	PtrMemberAccess	node -> char_len		3441561	0					
ANR	3441864	Identifier	node		3441561	0					
ANR	3441865	Identifier	char_len		3441561	1					
ANR	3441866	PrimaryExpression	0		3441561	1					
ANR	3441867	CompoundStatement		42:30:1498:1498	3441561	1					
ANR	3441868	ExpressionStatement	"r = get_char_length_tree ( node -> target , reg , & n )"	1448:1:35371:35418	3441561	0	True				
ANR	3441869	AssignmentExpression	"r = get_char_length_tree ( node -> target , reg , & n )"		3441561	0		=			
ANR	3441870	Identifier	r		3441561	0					
ANR	3441871	CallExpression	"get_char_length_tree ( node -> target , reg , & n )"		3441561	1					
ANR	3441872	Callee	get_char_length_tree		3441561	0					
ANR	3441873	Identifier	get_char_length_tree		3441561	0					
ANR	3441874	ArgumentList	node -> target		3441561	1					
ANR	3441875	Argument	node -> target		3441561	0					
ANR	3441876	PtrMemberAccess	node -> target		3441561	0					
ANR	3441877	Identifier	node		3441561	0					
ANR	3441878	Identifier	target		3441561	1					
ANR	3441879	Argument	reg		3441561	1					
ANR	3441880	Identifier	reg		3441561	0					
ANR	3441881	Argument	& n		3441561	2					
ANR	3441882	UnaryOperationExpression	& n		3441561	0					
ANR	3441883	UnaryOperator	&		3441561	0					
ANR	3441884	Identifier	n		3441561	1					
ANR	3441885	IfStatement	if ( r )		3441561	1					
ANR	3441886	Condition	r	1449:5:35425:35425	3441561	0	True				
ANR	3441887	Identifier	r		3441561	0					
ANR	3441888	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	1449:8:35428:35470	3441561	1	True				
ANR	3441889	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3441561	0					
ANR	3441890	ElseStatement	else		3441561	0					
ANR	3441891	ExpressionStatement	n = node -> char_len	1452:1:35492:35510	3441561	0	True				
ANR	3441892	AssignmentExpression	n = node -> char_len		3441561	0		=			
ANR	3441893	Identifier	n		3441561	0					
ANR	3441894	PtrMemberAccess	node -> char_len		3441561	1					
ANR	3441895	Identifier	node		3441561	0					
ANR	3441896	Identifier	char_len		3441561	1					
ANR	3441897	ExpressionStatement	"r = add_length ( reg , n )"	1453:6:35518:35540	3441561	4	True				
ANR	3441898	AssignmentExpression	"r = add_length ( reg , n )"		3441561	0		=			
ANR	3441899	Identifier	r		3441561	0					
ANR	3441900	CallExpression	"add_length ( reg , n )"		3441561	1					
ANR	3441901	Callee	add_length		3441561	0					
ANR	3441902	Identifier	add_length		3441561	0					
ANR	3441903	ArgumentList	reg		3441561	1					
ANR	3441904	Argument	reg		3441561	0					
ANR	3441905	Identifier	reg		3441561	0					
ANR	3441906	Argument	n		3441561	1					
ANR	3441907	Identifier	n		3441561	0					
ANR	3441908	IfStatement	if ( r )		3441561	5					
ANR	3441909	Condition	r	1454:10:35552:35552	3441561	0	True				
ANR	3441910	Identifier	r		3441561	0					
ANR	3441911	ReturnStatement	return r ;	1454:13:35555:35563	3441561	1	True				
ANR	3441912	Identifier	r		3441561	0					
ANR	3441913	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1455:6:35571:35606	3441561	6	True				
ANR	3441914	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		3441561	0		=			
ANR	3441915	Identifier	r		3441561	0					
ANR	3441916	CallExpression	"compile_tree ( node -> target , reg )"		3441561	1					
ANR	3441917	Callee	compile_tree		3441561	0					
ANR	3441918	Identifier	compile_tree		3441561	0					
ANR	3441919	ArgumentList	node -> target		3441561	1					
ANR	3441920	Argument	node -> target		3441561	0					
ANR	3441921	PtrMemberAccess	node -> target		3441561	0					
ANR	3441922	Identifier	node		3441561	0					
ANR	3441923	Identifier	target		3441561	1					
ANR	3441924	Argument	reg		3441561	1					
ANR	3441925	Identifier	reg		3441561	0					
ANR	3441926	BreakStatement	break ;	1457:4:35618:35623	3441561	48	True				
ANR	3441927	Label	case ANCHOR_LOOK_BEHIND_NOT :	1459:2:35628:35655	3441561	49	True				
ANR	3441928	Identifier	ANCHOR_LOOK_BEHIND_NOT		3441561	0					
ANR	3441929	CompoundStatement		56:6:1799:1804	3441561	50					
ANR	3441930	IdentifierDeclStatement	int n ;	1461:6:35669:35674	3441561	0	True				
ANR	3441931	IdentifierDecl	n		3441561	0					
ANR	3441932	IdentifierDeclType	int		3441561	0					
ANR	3441933	Identifier	n		3441561	1					
ANR	3441934	ExpressionStatement	"len = compile_length_tree ( node -> target , reg )"	1462:6:35682:35726	3441561	1	True				
ANR	3441935	AssignmentExpression	"len = compile_length_tree ( node -> target , reg )"		3441561	0		=			
ANR	3441936	Identifier	len		3441561	0					
ANR	3441937	CallExpression	"compile_length_tree ( node -> target , reg )"		3441561	1					
ANR	3441938	Callee	compile_length_tree		3441561	0					
ANR	3441939	Identifier	compile_length_tree		3441561	0					
ANR	3441940	ArgumentList	node -> target		3441561	1					
ANR	3441941	Argument	node -> target		3441561	0					
ANR	3441942	PtrMemberAccess	node -> target		3441561	0					
ANR	3441943	Identifier	node		3441561	0					
ANR	3441944	Identifier	target		3441561	1					
ANR	3441945	Argument	reg		3441561	1					
ANR	3441946	Identifier	reg		3441561	0					
ANR	3441947	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_LOOK_BEHIND_NOT , len + SIZE_OP_FAIL_LOOK_BEHIND_NOT )"	1463:6:35734:35829	3441561	2	True				
ANR	3441948	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_LOOK_BEHIND_NOT , len + SIZE_OP_FAIL_LOOK_BEHIND_NOT )"		3441561	0		=			
ANR	3441949	Identifier	r		3441561	0					
ANR	3441950	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_LOOK_BEHIND_NOT , len + SIZE_OP_FAIL_LOOK_BEHIND_NOT )"		3441561	1					
ANR	3441951	Callee	add_opcode_rel_addr		3441561	0					
ANR	3441952	Identifier	add_opcode_rel_addr		3441561	0					
ANR	3441953	ArgumentList	reg		3441561	1					
ANR	3441954	Argument	reg		3441561	0					
ANR	3441955	Identifier	reg		3441561	0					
ANR	3441956	Argument	OP_PUSH_LOOK_BEHIND_NOT		3441561	1					
ANR	3441957	Identifier	OP_PUSH_LOOK_BEHIND_NOT		3441561	0					
ANR	3441958	Argument	len + SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441561	2					
ANR	3441959	AdditiveExpression	len + SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441561	0		+			
ANR	3441960	Identifier	len		3441561	0					
ANR	3441961	Identifier	SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441561	1					
ANR	3441962	IfStatement	if ( r )		3441561	3					
ANR	3441963	Condition	r	1465:10:35841:35841	3441561	0	True				
ANR	3441964	Identifier	r		3441561	0					
ANR	3441965	ReturnStatement	return r ;	1465:13:35844:35852	3441561	1	True				
ANR	3441966	Identifier	r		3441561	0					
ANR	3441967	IfStatement	if ( node -> char_len < 0 )		3441561	4					
ANR	3441968	Condition	node -> char_len < 0	1466:10:35864:35881	3441561	0	True				
ANR	3441969	RelationalExpression	node -> char_len < 0		3441561	0		<			
ANR	3441970	PtrMemberAccess	node -> char_len		3441561	0					
ANR	3441971	Identifier	node		3441561	0					
ANR	3441972	Identifier	char_len		3441561	1					
ANR	3441973	PrimaryExpression	0		3441561	1					
ANR	3441974	CompoundStatement		61:30:2014:2014	3441561	1					
ANR	3441975	ExpressionStatement	"r = get_char_length_tree ( node -> target , reg , & n )"	1467:1:35887:35934	3441561	0	True				
ANR	3441976	AssignmentExpression	"r = get_char_length_tree ( node -> target , reg , & n )"		3441561	0		=			
ANR	3441977	Identifier	r		3441561	0					
ANR	3441978	CallExpression	"get_char_length_tree ( node -> target , reg , & n )"		3441561	1					
ANR	3441979	Callee	get_char_length_tree		3441561	0					
ANR	3441980	Identifier	get_char_length_tree		3441561	0					
ANR	3441981	ArgumentList	node -> target		3441561	1					
ANR	3441982	Argument	node -> target		3441561	0					
ANR	3441983	PtrMemberAccess	node -> target		3441561	0					
ANR	3441984	Identifier	node		3441561	0					
ANR	3441985	Identifier	target		3441561	1					
ANR	3441986	Argument	reg		3441561	1					
ANR	3441987	Identifier	reg		3441561	0					
ANR	3441988	Argument	& n		3441561	2					
ANR	3441989	UnaryOperationExpression	& n		3441561	0					
ANR	3441990	UnaryOperator	&		3441561	0					
ANR	3441991	Identifier	n		3441561	1					
ANR	3441992	IfStatement	if ( r )		3441561	1					
ANR	3441993	Condition	r	1468:5:35941:35941	3441561	0	True				
ANR	3441994	Identifier	r		3441561	0					
ANR	3441995	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	1468:8:35944:35986	3441561	1	True				
ANR	3441996	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3441561	0					
ANR	3441997	ElseStatement	else		3441561	0					
ANR	3441998	ExpressionStatement	n = node -> char_len	1471:1:36008:36026	3441561	0	True				
ANR	3441999	AssignmentExpression	n = node -> char_len		3441561	0		=			
ANR	3442000	Identifier	n		3441561	0					
ANR	3442001	PtrMemberAccess	node -> char_len		3441561	1					
ANR	3442002	Identifier	node		3441561	0					
ANR	3442003	Identifier	char_len		3441561	1					
ANR	3442004	ExpressionStatement	"r = add_length ( reg , n )"	1472:6:36034:36056	3441561	5	True				
ANR	3442005	AssignmentExpression	"r = add_length ( reg , n )"		3441561	0		=			
ANR	3442006	Identifier	r		3441561	0					
ANR	3442007	CallExpression	"add_length ( reg , n )"		3441561	1					
ANR	3442008	Callee	add_length		3441561	0					
ANR	3442009	Identifier	add_length		3441561	0					
ANR	3442010	ArgumentList	reg		3441561	1					
ANR	3442011	Argument	reg		3441561	0					
ANR	3442012	Identifier	reg		3441561	0					
ANR	3442013	Argument	n		3441561	1					
ANR	3442014	Identifier	n		3441561	0					
ANR	3442015	IfStatement	if ( r )		3441561	6					
ANR	3442016	Condition	r	1473:10:36068:36068	3441561	0	True				
ANR	3442017	Identifier	r		3441561	0					
ANR	3442018	ReturnStatement	return r ;	1473:13:36071:36079	3441561	1	True				
ANR	3442019	Identifier	r		3441561	0					
ANR	3442020	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1474:6:36087:36122	3441561	7	True				
ANR	3442021	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		3441561	0		=			
ANR	3442022	Identifier	r		3441561	0					
ANR	3442023	CallExpression	"compile_tree ( node -> target , reg )"		3441561	1					
ANR	3442024	Callee	compile_tree		3441561	0					
ANR	3442025	Identifier	compile_tree		3441561	0					
ANR	3442026	ArgumentList	node -> target		3441561	1					
ANR	3442027	Argument	node -> target		3441561	0					
ANR	3442028	PtrMemberAccess	node -> target		3441561	0					
ANR	3442029	Identifier	node		3441561	0					
ANR	3442030	Identifier	target		3441561	1					
ANR	3442031	Argument	reg		3441561	1					
ANR	3442032	Identifier	reg		3441561	0					
ANR	3442033	IfStatement	if ( r )		3441561	8					
ANR	3442034	Condition	r	1475:10:36134:36134	3441561	0	True				
ANR	3442035	Identifier	r		3441561	0					
ANR	3442036	ReturnStatement	return r ;	1475:13:36137:36145	3441561	1	True				
ANR	3442037	Identifier	r		3441561	0					
ANR	3442038	ExpressionStatement	"r = add_opcode ( reg , OP_FAIL_LOOK_BEHIND_NOT )"	1476:6:36153:36197	3441561	9	True				
ANR	3442039	AssignmentExpression	"r = add_opcode ( reg , OP_FAIL_LOOK_BEHIND_NOT )"		3441561	0		=			
ANR	3442040	Identifier	r		3441561	0					
ANR	3442041	CallExpression	"add_opcode ( reg , OP_FAIL_LOOK_BEHIND_NOT )"		3441561	1					
ANR	3442042	Callee	add_opcode		3441561	0					
ANR	3442043	Identifier	add_opcode		3441561	0					
ANR	3442044	ArgumentList	reg		3441561	1					
ANR	3442045	Argument	reg		3441561	0					
ANR	3442046	Identifier	reg		3441561	0					
ANR	3442047	Argument	OP_FAIL_LOOK_BEHIND_NOT		3441561	1					
ANR	3442048	Identifier	OP_FAIL_LOOK_BEHIND_NOT		3441561	0					
ANR	3442049	BreakStatement	break ;	1478:4:36209:36214	3441561	51	True				
ANR	3442050	Label	default :	1480:2:36219:36226	3441561	52	True				
ANR	3442051	Identifier	default		3441561	0					
ANR	3442052	ReturnStatement	return ONIGERR_TYPE_BUG ;	1481:4:36232:36255	3441561	53	True				
ANR	3442053	Identifier	ONIGERR_TYPE_BUG		3441561	0					
ANR	3442054	BreakStatement	break ;	1482:4:36261:36266	3441561	54	True				
ANR	3442055	ReturnStatement	return r ;	1485:2:36275:36283	3441561	2	True				
ANR	3442056	Identifier	r		3441561	0					
ANR	3442057	ReturnType	static int		3441561	1					
ANR	3442058	Identifier	compile_anchor_node		3441561	2					
ANR	3442059	ParameterList	"AnchorNode * node , regex_t * reg"		3441561	3					
ANR	3442060	Parameter	AnchorNode * node	1405:20:33837:33852	3441561	0	True				
ANR	3442061	ParameterType	AnchorNode *		3441561	0					
ANR	3442062	Identifier	node		3441561	1					
ANR	3442063	Parameter	regex_t * reg	1405:38:33855:33866	3441561	1	True				
ANR	3442064	ParameterType	regex_t *		3441561	0					
ANR	3442065	Identifier	reg		3441561	1					
ANR	3442066	CFGEntryNode	ENTRY		3441561		True				
ANR	3442067	CFGExitNode	EXIT		3441561		True				
ANR	3442068	Symbol	OP_SEMI_END_BUF		3441561						
ANR	3442069	Symbol	SIZE_OP_FAIL_POS		3441561						
ANR	3442070	Symbol	OP_PUSH_LOOK_BEHIND_NOT		3441561						
ANR	3442071	Symbol	OP_NOT_WORD_BOUND		3441561						
ANR	3442072	Symbol	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3441561						
ANR	3442073	Symbol	add_length		3441561						
ANR	3442074	Symbol	OP_BEGIN_LINE		3441561						
ANR	3442075	Symbol	OP_LOOK_BEHIND		3441561						
ANR	3442076	Symbol	OP_FAIL_POS		3441561						
ANR	3442077	Symbol	len		3441561						
ANR	3442078	Symbol	OP_PUSH_POS_NOT		3441561						
ANR	3442079	Symbol	reg		3441561						
ANR	3442080	Symbol	OP_WORD_BOUND		3441561						
ANR	3442081	Symbol	* node		3441561						
ANR	3442082	Symbol	add_opcode		3441561						
ANR	3442083	Symbol	OP_BEGIN_POSITION		3441561						
ANR	3442084	Symbol	OP_FAIL_LOOK_BEHIND_NOT		3441561						
ANR	3442085	Symbol	OP_END_BUF		3441561						
ANR	3442086	Symbol	add_opcode_rel_addr		3441561						
ANR	3442087	Symbol	compile_length_tree		3441561						
ANR	3442088	Symbol	node -> char_len		3441561						
ANR	3442089	Symbol	ONIGERR_TYPE_BUG		3441561						
ANR	3442090	Symbol	OP_PUSH_POS		3441561						
ANR	3442091	Symbol	n		3441561						
ANR	3442092	Symbol	node		3441561						
ANR	3442093	Symbol	get_char_length_tree		3441561						
ANR	3442094	Symbol	r		3441561						
ANR	3442095	Symbol	OP_WORD_END		3441561						
ANR	3442096	Symbol	compile_tree		3441561						
ANR	3442097	Symbol	& n		3441561						
ANR	3442098	Symbol	SIZE_OP_FAIL_LOOK_BEHIND_NOT		3441561						
ANR	3442099	Symbol	node -> type		3441561						
ANR	3442100	Symbol	OP_WORD_BEGIN		3441561						
ANR	3442101	Symbol	OP_POP_POS		3441561						
ANR	3442102	Symbol	OP_BEGIN_BUF		3441561						
ANR	3442103	Symbol	OP_END_LINE		3441561						
ANR	3442104	Symbol	node -> target		3441561						
ANR	3442105	Function	compile_length_tree	1488:0:36288:38093							
ANR	3442106	FunctionDef	"compile_length_tree (Node * node , regex_t * reg)"		3442105	0					
ANR	3442107	CompoundStatement		1490:0:36345:38093	3442105	0					
ANR	3442108	IdentifierDeclStatement	"int len , type , r ;"	1491:2:36349:36365	3442105	0	True				
ANR	3442109	IdentifierDecl	len		3442105	0					
ANR	3442110	IdentifierDeclType	int		3442105	0					
ANR	3442111	Identifier	len		3442105	1					
ANR	3442112	IdentifierDecl	type		3442105	1					
ANR	3442113	IdentifierDeclType	int		3442105	0					
ANR	3442114	Identifier	type		3442105	1					
ANR	3442115	IdentifierDecl	r		3442105	2					
ANR	3442116	IdentifierDeclType	int		3442105	0					
ANR	3442117	Identifier	r		3442105	1					
ANR	3442118	ExpressionStatement	type = NTYPE ( node )	1493:2:36370:36388	3442105	1	True				
ANR	3442119	AssignmentExpression	type = NTYPE ( node )		3442105	0		=			
ANR	3442120	Identifier	type		3442105	0					
ANR	3442121	CallExpression	NTYPE ( node )		3442105	1					
ANR	3442122	Callee	NTYPE		3442105	0					
ANR	3442123	Identifier	NTYPE		3442105	0					
ANR	3442124	ArgumentList	node		3442105	1					
ANR	3442125	Argument	node		3442105	0					
ANR	3442126	Identifier	node		3442105	0					
ANR	3442127	SwitchStatement	switch ( type )		3442105	2					
ANR	3442128	Condition	type	1494:10:36400:36403	3442105	0	True				
ANR	3442129	Identifier	type		3442105	0					
ANR	3442130	CompoundStatement		5:16:60:60	3442105	1					
ANR	3442131	Label	case NT_LIST :	1495:2:36410:36422	3442105	0	True				
ANR	3442132	Identifier	NT_LIST		3442105	0					
ANR	3442133	ExpressionStatement	len = 0	1496:4:36428:36435	3442105	1	True				
ANR	3442134	AssignmentExpression	len = 0		3442105	0		=			
ANR	3442135	Identifier	len		3442105	0					
ANR	3442136	PrimaryExpression	0		3442105	1					
ANR	3442137	DoStatement	do		3442105	2					
ANR	3442138	CompoundStatement		8:7:98:98	3442105	0					
ANR	3442139	ExpressionStatement	"r = compile_length_tree ( NCAR ( node ) , reg )"	1498:6:36452:36492	3442105	0	True				
ANR	3442140	AssignmentExpression	"r = compile_length_tree ( NCAR ( node ) , reg )"		3442105	0		=			
ANR	3442141	Identifier	r		3442105	0					
ANR	3442142	CallExpression	"compile_length_tree ( NCAR ( node ) , reg )"		3442105	1					
ANR	3442143	Callee	compile_length_tree		3442105	0					
ANR	3442144	Identifier	compile_length_tree		3442105	0					
ANR	3442145	ArgumentList	NCAR ( node )		3442105	1					
ANR	3442146	Argument	NCAR ( node )		3442105	0					
ANR	3442147	CallExpression	NCAR ( node )		3442105	0					
ANR	3442148	Callee	NCAR		3442105	0					
ANR	3442149	Identifier	NCAR		3442105	0					
ANR	3442150	ArgumentList	node		3442105	1					
ANR	3442151	Argument	node		3442105	0					
ANR	3442152	Identifier	node		3442105	0					
ANR	3442153	Argument	reg		3442105	1					
ANR	3442154	Identifier	reg		3442105	0					
ANR	3442155	IfStatement	if ( r < 0 )		3442105	1					
ANR	3442156	Condition	r < 0	1499:10:36504:36508	3442105	0	True				
ANR	3442157	RelationalExpression	r < 0		3442105	0		<			
ANR	3442158	Identifier	r		3442105	0					
ANR	3442159	PrimaryExpression	0		3442105	1					
ANR	3442160	ReturnStatement	return r ;	1499:17:36511:36519	3442105	1	True				
ANR	3442161	Identifier	r		3442105	0					
ANR	3442162	ExpressionStatement	len += r	1500:6:36527:36535	3442105	2	True				
ANR	3442163	AssignmentExpression	len += r		3442105	0		+=			
ANR	3442164	Identifier	len		3442105	0					
ANR	3442165	Identifier	r		3442105	1					
ANR	3442166	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	1501:13:36550:36579	3442105	1	True				
ANR	3442167	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3442105	0					
ANR	3442168	Callee	IS_NOT_NULL		3442105	0					
ANR	3442169	Identifier	IS_NOT_NULL		3442105	0					
ANR	3442170	ArgumentList	node = NCDR ( node )		3442105	1					
ANR	3442171	Argument	node = NCDR ( node )		3442105	0					
ANR	3442172	AssignmentExpression	node = NCDR ( node )		3442105	0		=			
ANR	3442173	Identifier	node		3442105	0					
ANR	3442174	CallExpression	NCDR ( node )		3442105	1					
ANR	3442175	Callee	NCDR		3442105	0					
ANR	3442176	Identifier	NCDR		3442105	0					
ANR	3442177	ArgumentList	node		3442105	1					
ANR	3442178	Argument	node		3442105	0					
ANR	3442179	Identifier	node		3442105	0					
ANR	3442180	ExpressionStatement	r = len	1502:4:36587:36594	3442105	3	True				
ANR	3442181	AssignmentExpression	r = len		3442105	0		=			
ANR	3442182	Identifier	r		3442105	0					
ANR	3442183	Identifier	len		3442105	1					
ANR	3442184	BreakStatement	break ;	1503:4:36600:36605	3442105	4	True				
ANR	3442185	Label	case NT_ALT :	1505:2:36610:36621	3442105	5	True				
ANR	3442186	Identifier	NT_ALT		3442105	0					
ANR	3442187	CompoundStatement		18:6:289:294	3442105	6					
ANR	3442188	IdentifierDeclStatement	int n ;	1507:6:36635:36640	3442105	0	True				
ANR	3442189	IdentifierDecl	n		3442105	0					
ANR	3442190	IdentifierDeclType	int		3442105	0					
ANR	3442191	Identifier	n		3442105	1					
ANR	3442192	ExpressionStatement	n = r = 0	1509:6:36649:36658	3442105	1	True				
ANR	3442193	AssignmentExpression	n = r = 0		3442105	0		=			
ANR	3442194	Identifier	n		3442105	0					
ANR	3442195	AssignmentExpression	r = 0		3442105	1		=			
ANR	3442196	Identifier	r		3442105	0					
ANR	3442197	PrimaryExpression	0		3442105	1					
ANR	3442198	DoStatement	do		3442105	2					
ANR	3442199	CompoundStatement		21:9:323:323	3442105	0					
ANR	3442200	ExpressionStatement	"r += compile_length_tree ( NCAR ( node ) , reg )"	1511:1:36672:36713	3442105	0	True				
ANR	3442201	AssignmentExpression	"r += compile_length_tree ( NCAR ( node ) , reg )"		3442105	0		+=			
ANR	3442202	Identifier	r		3442105	0					
ANR	3442203	CallExpression	"compile_length_tree ( NCAR ( node ) , reg )"		3442105	1					
ANR	3442204	Callee	compile_length_tree		3442105	0					
ANR	3442205	Identifier	compile_length_tree		3442105	0					
ANR	3442206	ArgumentList	NCAR ( node )		3442105	1					
ANR	3442207	Argument	NCAR ( node )		3442105	0					
ANR	3442208	CallExpression	NCAR ( node )		3442105	0					
ANR	3442209	Callee	NCAR		3442105	0					
ANR	3442210	Identifier	NCAR		3442105	0					
ANR	3442211	ArgumentList	node		3442105	1					
ANR	3442212	Argument	node		3442105	0					
ANR	3442213	Identifier	node		3442105	0					
ANR	3442214	Argument	reg		3442105	1					
ANR	3442215	Identifier	reg		3442105	0					
ANR	3442216	ExpressionStatement	n ++	1512:1:36716:36719	3442105	1	True				
ANR	3442217	PostIncDecOperationExpression	n ++		3442105	0					
ANR	3442218	Identifier	n		3442105	0					
ANR	3442219	IncDec	++		3442105	1					
ANR	3442220	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	1513:15:36736:36765	3442105	1	True				
ANR	3442221	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3442105	0					
ANR	3442222	Callee	IS_NOT_NULL		3442105	0					
ANR	3442223	Identifier	IS_NOT_NULL		3442105	0					
ANR	3442224	ArgumentList	node = NCDR ( node )		3442105	1					
ANR	3442225	Argument	node = NCDR ( node )		3442105	0					
ANR	3442226	AssignmentExpression	node = NCDR ( node )		3442105	0		=			
ANR	3442227	Identifier	node		3442105	0					
ANR	3442228	CallExpression	NCDR ( node )		3442105	1					
ANR	3442229	Callee	NCDR		3442105	0					
ANR	3442230	Identifier	NCDR		3442105	0					
ANR	3442231	ArgumentList	node		3442105	1					
ANR	3442232	Argument	node		3442105	0					
ANR	3442233	Identifier	node		3442105	0					
ANR	3442234	ExpressionStatement	r += ( SIZE_OP_PUSH + SIZE_OP_JUMP ) * ( n - 1 )	1514:6:36775:36819	3442105	3	True				
ANR	3442235	AssignmentExpression	r += ( SIZE_OP_PUSH + SIZE_OP_JUMP ) * ( n - 1 )		3442105	0		+=			
ANR	3442236	Identifier	r		3442105	0					
ANR	3442237	MultiplicativeExpression	( SIZE_OP_PUSH + SIZE_OP_JUMP ) * ( n - 1 )		3442105	1		*			
ANR	3442238	AdditiveExpression	SIZE_OP_PUSH + SIZE_OP_JUMP		3442105	0		+			
ANR	3442239	Identifier	SIZE_OP_PUSH		3442105	0					
ANR	3442240	Identifier	SIZE_OP_JUMP		3442105	1					
ANR	3442241	AdditiveExpression	n - 1		3442105	1		-			
ANR	3442242	Identifier	n		3442105	0					
ANR	3442243	PrimaryExpression	1		3442105	1					
ANR	3442244	BreakStatement	break ;	1516:4:36831:36836	3442105	7	True				
ANR	3442245	Label	case NT_STR :	1518:2:36841:36852	3442105	8	True				
ANR	3442246	Identifier	NT_STR		3442105	0					
ANR	3442247	IfStatement	if ( NSTRING_IS_RAW ( node ) )		3442105	9					
ANR	3442248	Condition	NSTRING_IS_RAW ( node )	1519:8:36862:36881	3442105	0	True				
ANR	3442249	CallExpression	NSTRING_IS_RAW ( node )		3442105	0					
ANR	3442250	Callee	NSTRING_IS_RAW		3442105	0					
ANR	3442251	Identifier	NSTRING_IS_RAW		3442105	0					
ANR	3442252	ArgumentList	node		3442105	1					
ANR	3442253	Argument	node		3442105	0					
ANR	3442254	Identifier	node		3442105	0					
ANR	3442255	ExpressionStatement	"r = compile_length_string_raw_node ( NSTR ( node ) , reg )"	1520:6:36890:36941	3442105	1	True				
ANR	3442256	AssignmentExpression	"r = compile_length_string_raw_node ( NSTR ( node ) , reg )"		3442105	0		=			
ANR	3442257	Identifier	r		3442105	0					
ANR	3442258	CallExpression	"compile_length_string_raw_node ( NSTR ( node ) , reg )"		3442105	1					
ANR	3442259	Callee	compile_length_string_raw_node		3442105	0					
ANR	3442260	Identifier	compile_length_string_raw_node		3442105	0					
ANR	3442261	ArgumentList	NSTR ( node )		3442105	1					
ANR	3442262	Argument	NSTR ( node )		3442105	0					
ANR	3442263	CallExpression	NSTR ( node )		3442105	0					
ANR	3442264	Callee	NSTR		3442105	0					
ANR	3442265	Identifier	NSTR		3442105	0					
ANR	3442266	ArgumentList	node		3442105	1					
ANR	3442267	Argument	node		3442105	0					
ANR	3442268	Identifier	node		3442105	0					
ANR	3442269	Argument	reg		3442105	1					
ANR	3442270	Identifier	reg		3442105	0					
ANR	3442271	ElseStatement	else		3442105	0					
ANR	3442272	ExpressionStatement	"r = compile_length_string_node ( node , reg )"	1522:6:36958:36999	3442105	0	True				
ANR	3442273	AssignmentExpression	"r = compile_length_string_node ( node , reg )"		3442105	0		=			
ANR	3442274	Identifier	r		3442105	0					
ANR	3442275	CallExpression	"compile_length_string_node ( node , reg )"		3442105	1					
ANR	3442276	Callee	compile_length_string_node		3442105	0					
ANR	3442277	Identifier	compile_length_string_node		3442105	0					
ANR	3442278	ArgumentList	node		3442105	1					
ANR	3442279	Argument	node		3442105	0					
ANR	3442280	Identifier	node		3442105	0					
ANR	3442281	Argument	reg		3442105	1					
ANR	3442282	Identifier	reg		3442105	0					
ANR	3442283	BreakStatement	break ;	1523:4:37005:37010	3442105	10	True				
ANR	3442284	Label	case NT_CCLASS :	1525:2:37015:37029	3442105	11	True				
ANR	3442285	Identifier	NT_CCLASS		3442105	0					
ANR	3442286	ExpressionStatement	"r = compile_length_cclass_node ( NCCLASS ( node ) , reg )"	1526:4:37035:37085	3442105	12	True				
ANR	3442287	AssignmentExpression	"r = compile_length_cclass_node ( NCCLASS ( node ) , reg )"		3442105	0		=			
ANR	3442288	Identifier	r		3442105	0					
ANR	3442289	CallExpression	"compile_length_cclass_node ( NCCLASS ( node ) , reg )"		3442105	1					
ANR	3442290	Callee	compile_length_cclass_node		3442105	0					
ANR	3442291	Identifier	compile_length_cclass_node		3442105	0					
ANR	3442292	ArgumentList	NCCLASS ( node )		3442105	1					
ANR	3442293	Argument	NCCLASS ( node )		3442105	0					
ANR	3442294	CallExpression	NCCLASS ( node )		3442105	0					
ANR	3442295	Callee	NCCLASS		3442105	0					
ANR	3442296	Identifier	NCCLASS		3442105	0					
ANR	3442297	ArgumentList	node		3442105	1					
ANR	3442298	Argument	node		3442105	0					
ANR	3442299	Identifier	node		3442105	0					
ANR	3442300	Argument	reg		3442105	1					
ANR	3442301	Identifier	reg		3442105	0					
ANR	3442302	BreakStatement	break ;	1527:4:37091:37096	3442105	13	True				
ANR	3442303	Label	case NT_CTYPE :	1529:2:37101:37114	3442105	14	True				
ANR	3442304	Identifier	NT_CTYPE		3442105	0					
ANR	3442305	Label	case NT_CANY :	1530:2:37118:37130	3442105	15	True				
ANR	3442306	Identifier	NT_CANY		3442105	0					
ANR	3442307	ExpressionStatement	r = SIZE_OPCODE	1531:4:37136:37151	3442105	16	True				
ANR	3442308	AssignmentExpression	r = SIZE_OPCODE		3442105	0		=			
ANR	3442309	Identifier	r		3442105	0					
ANR	3442310	Identifier	SIZE_OPCODE		3442105	1					
ANR	3442311	BreakStatement	break ;	1532:4:37157:37162	3442105	17	True				
ANR	3442312	Label	case NT_BREF :	1534:2:37167:37179	3442105	18	True				
ANR	3442313	Identifier	NT_BREF		3442105	0					
ANR	3442314	CompoundStatement		47:6:847:873	3442105	19					
ANR	3442315	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	1536:6:37193:37219	3442105	0	True				
ANR	3442316	IdentifierDecl	* br = NBREF ( node )		3442105	0					
ANR	3442317	IdentifierDeclType	BRefNode *		3442105	0					
ANR	3442318	Identifier	br		3442105	1					
ANR	3442319	AssignmentExpression	* br = NBREF ( node )		3442105	2		=			
ANR	3442320	Identifier	br		3442105	0					
ANR	3442321	CallExpression	NBREF ( node )		3442105	1					
ANR	3442322	Callee	NBREF		3442105	0					
ANR	3442323	Identifier	NBREF		3442105	0					
ANR	3442324	ArgumentList	node		3442105	1					
ANR	3442325	Argument	node		3442105	0					
ANR	3442326	Identifier	node		3442105	0					
ANR	3442327	IfStatement	if ( IS_BACKREF_NEST_LEVEL ( br ) )		3442105	1					
ANR	3442328	Condition	IS_BACKREF_NEST_LEVEL ( br )	1539:10:37262:37286	3442105	0	True				
ANR	3442329	CallExpression	IS_BACKREF_NEST_LEVEL ( br )		3442105	0					
ANR	3442330	Callee	IS_BACKREF_NEST_LEVEL		3442105	0					
ANR	3442331	Identifier	IS_BACKREF_NEST_LEVEL		3442105	0					
ANR	3442332	ArgumentList	br		3442105	1					
ANR	3442333	Argument	br		3442105	0					
ANR	3442334	Identifier	br		3442105	0					
ANR	3442335	CompoundStatement		50:37:943:943	3442105	1					
ANR	3442336	ExpressionStatement	r = SIZE_OPCODE + SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )	1540:8:37299:37399	3442105	0	True				
ANR	3442337	AssignmentExpression	r = SIZE_OPCODE + SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	0		=			
ANR	3442338	Identifier	r		3442105	0					
ANR	3442339	AdditiveExpression	SIZE_OPCODE + SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	1		+			
ANR	3442340	Identifier	SIZE_OPCODE		3442105	0					
ANR	3442341	AdditiveExpression	SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	1		+			
ANR	3442342	Identifier	SIZE_OPTION		3442105	0					
ANR	3442343	AdditiveExpression	SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	1		+			
ANR	3442344	Identifier	SIZE_LENGTH		3442105	0					
ANR	3442345	AdditiveExpression	SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	1		+			
ANR	3442346	Identifier	SIZE_LENGTH		3442105	0					
ANR	3442347	MultiplicativeExpression	SIZE_MEMNUM * br -> back_num		3442105	1		*			
ANR	3442348	Identifier	SIZE_MEMNUM		3442105	0					
ANR	3442349	PtrMemberAccess	br -> back_num		3442105	1					
ANR	3442350	Identifier	br		3442105	0					
ANR	3442351	Identifier	back_num		3442105	1					
ANR	3442352	ElseStatement	else		3442105	0					
ANR	3442353	IfStatement	if ( br -> back_num == 1 )		3442105	0					
ANR	3442354	Condition	br -> back_num == 1	1545:10:37437:37453	3442105	0	True				
ANR	3442355	EqualityExpression	br -> back_num == 1		3442105	0		==			
ANR	3442356	PtrMemberAccess	br -> back_num		3442105	0					
ANR	3442357	Identifier	br		3442105	0					
ANR	3442358	Identifier	back_num		3442105	1					
ANR	3442359	PrimaryExpression	1		3442105	1					
ANR	3442360	CompoundStatement		56:29:1110:1110	3442105	1					
ANR	3442361	ExpressionStatement	r = ( ( ! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2 ) ? SIZE_OPCODE : ( SIZE_OPCODE + SIZE_MEMNUM ) )	1546:1:37459:37572	3442105	0	True				
ANR	3442362	AssignmentExpression	r = ( ( ! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2 ) ? SIZE_OPCODE : ( SIZE_OPCODE + SIZE_MEMNUM ) )		3442105	0		=			
ANR	3442363	Identifier	r		3442105	0					
ANR	3442364	ConditionalExpression	( ! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2 ) ? SIZE_OPCODE : ( SIZE_OPCODE + SIZE_MEMNUM )		3442105	1					
ANR	3442365	Condition	! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2		3442105	0					
ANR	3442366	AndExpression	! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2		3442105	0		&&			
ANR	3442367	UnaryOperationExpression	! IS_IGNORECASE ( reg -> options )		3442105	0					
ANR	3442368	UnaryOperator	!		3442105	0					
ANR	3442369	CallExpression	IS_IGNORECASE ( reg -> options )		3442105	1					
ANR	3442370	Callee	IS_IGNORECASE		3442105	0					
ANR	3442371	Identifier	IS_IGNORECASE		3442105	0					
ANR	3442372	ArgumentList	reg -> options		3442105	1					
ANR	3442373	Argument	reg -> options		3442105	0					
ANR	3442374	PtrMemberAccess	reg -> options		3442105	0					
ANR	3442375	Identifier	reg		3442105	0					
ANR	3442376	Identifier	options		3442105	1					
ANR	3442377	RelationalExpression	br -> back_static [ 0 ] <= 2		3442105	1		<=			
ANR	3442378	ArrayIndexing	br -> back_static [ 0 ]		3442105	0					
ANR	3442379	PtrMemberAccess	br -> back_static		3442105	0					
ANR	3442380	Identifier	br		3442105	0					
ANR	3442381	Identifier	back_static		3442105	1					
ANR	3442382	PrimaryExpression	0		3442105	1					
ANR	3442383	PrimaryExpression	2		3442105	1					
ANR	3442384	Identifier	SIZE_OPCODE		3442105	1					
ANR	3442385	AdditiveExpression	SIZE_OPCODE + SIZE_MEMNUM		3442105	2		+			
ANR	3442386	Identifier	SIZE_OPCODE		3442105	0					
ANR	3442387	Identifier	SIZE_MEMNUM		3442105	1					
ANR	3442388	ElseStatement	else		3442105	0					
ANR	3442389	CompoundStatement		60:11:1247:1247	3442105	0					
ANR	3442390	ExpressionStatement	r = SIZE_OPCODE + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )	1550:1:37596:37656	3442105	0	True				
ANR	3442391	AssignmentExpression	r = SIZE_OPCODE + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	0		=			
ANR	3442392	Identifier	r		3442105	0					
ANR	3442393	AdditiveExpression	SIZE_OPCODE + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	1		+			
ANR	3442394	Identifier	SIZE_OPCODE		3442105	0					
ANR	3442395	AdditiveExpression	SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		3442105	1		+			
ANR	3442396	Identifier	SIZE_LENGTH		3442105	0					
ANR	3442397	MultiplicativeExpression	SIZE_MEMNUM * br -> back_num		3442105	1		*			
ANR	3442398	Identifier	SIZE_MEMNUM		3442105	0					
ANR	3442399	PtrMemberAccess	br -> back_num		3442105	1					
ANR	3442400	Identifier	br		3442105	0					
ANR	3442401	Identifier	back_num		3442105	1					
ANR	3442402	BreakStatement	break ;	1553:4:37676:37681	3442105	20	True				
ANR	3442403	Label	case NT_CALL :	1556:2:37709:37721	3442105	21	True				
ANR	3442404	Identifier	NT_CALL		3442105	0					
ANR	3442405	ExpressionStatement	r = SIZE_OP_CALL	1557:4:37727:37743	3442105	22	True				
ANR	3442406	AssignmentExpression	r = SIZE_OP_CALL		3442105	0		=			
ANR	3442407	Identifier	r		3442105	0					
ANR	3442408	Identifier	SIZE_OP_CALL		3442105	1					
ANR	3442409	BreakStatement	break ;	1558:4:37749:37754	3442105	23	True				
ANR	3442410	Label	case NT_QTFR :	1561:2:37766:37778	3442105	24	True				
ANR	3442411	Identifier	NT_QTFR		3442105	0					
ANR	3442412	ExpressionStatement	"r = compile_length_quantifier_node ( NQTFR ( node ) , reg )"	1562:4:37784:37836	3442105	25	True				
ANR	3442413	AssignmentExpression	"r = compile_length_quantifier_node ( NQTFR ( node ) , reg )"		3442105	0		=			
ANR	3442414	Identifier	r		3442105	0					
ANR	3442415	CallExpression	"compile_length_quantifier_node ( NQTFR ( node ) , reg )"		3442105	1					
ANR	3442416	Callee	compile_length_quantifier_node		3442105	0					
ANR	3442417	Identifier	compile_length_quantifier_node		3442105	0					
ANR	3442418	ArgumentList	NQTFR ( node )		3442105	1					
ANR	3442419	Argument	NQTFR ( node )		3442105	0					
ANR	3442420	CallExpression	NQTFR ( node )		3442105	0					
ANR	3442421	Callee	NQTFR		3442105	0					
ANR	3442422	Identifier	NQTFR		3442105	0					
ANR	3442423	ArgumentList	node		3442105	1					
ANR	3442424	Argument	node		3442105	0					
ANR	3442425	Identifier	node		3442105	0					
ANR	3442426	Argument	reg		3442105	1					
ANR	3442427	Identifier	reg		3442105	0					
ANR	3442428	BreakStatement	break ;	1563:4:37842:37847	3442105	26	True				
ANR	3442429	Label	case NT_ENCLOSE :	1565:2:37852:37867	3442105	27	True				
ANR	3442430	Identifier	NT_ENCLOSE		3442105	0					
ANR	3442431	ExpressionStatement	"r = compile_length_enclose_node ( NENCLOSE ( node ) , reg )"	1566:4:37873:37925	3442105	28	True				
ANR	3442432	AssignmentExpression	"r = compile_length_enclose_node ( NENCLOSE ( node ) , reg )"		3442105	0		=			
ANR	3442433	Identifier	r		3442105	0					
ANR	3442434	CallExpression	"compile_length_enclose_node ( NENCLOSE ( node ) , reg )"		3442105	1					
ANR	3442435	Callee	compile_length_enclose_node		3442105	0					
ANR	3442436	Identifier	compile_length_enclose_node		3442105	0					
ANR	3442437	ArgumentList	NENCLOSE ( node )		3442105	1					
ANR	3442438	Argument	NENCLOSE ( node )		3442105	0					
ANR	3442439	CallExpression	NENCLOSE ( node )		3442105	0					
ANR	3442440	Callee	NENCLOSE		3442105	0					
ANR	3442441	Identifier	NENCLOSE		3442105	0					
ANR	3442442	ArgumentList	node		3442105	1					
ANR	3442443	Argument	node		3442105	0					
ANR	3442444	Identifier	node		3442105	0					
ANR	3442445	Argument	reg		3442105	1					
ANR	3442446	Identifier	reg		3442105	0					
ANR	3442447	BreakStatement	break ;	1567:4:37931:37936	3442105	29	True				
ANR	3442448	Label	case NT_ANCHOR :	1569:2:37941:37955	3442105	30	True				
ANR	3442449	Identifier	NT_ANCHOR		3442105	0					
ANR	3442450	ExpressionStatement	"r = compile_length_anchor_node ( NANCHOR ( node ) , reg )"	1570:4:37961:38011	3442105	31	True				
ANR	3442451	AssignmentExpression	"r = compile_length_anchor_node ( NANCHOR ( node ) , reg )"		3442105	0		=			
ANR	3442452	Identifier	r		3442105	0					
ANR	3442453	CallExpression	"compile_length_anchor_node ( NANCHOR ( node ) , reg )"		3442105	1					
ANR	3442454	Callee	compile_length_anchor_node		3442105	0					
ANR	3442455	Identifier	compile_length_anchor_node		3442105	0					
ANR	3442456	ArgumentList	NANCHOR ( node )		3442105	1					
ANR	3442457	Argument	NANCHOR ( node )		3442105	0					
ANR	3442458	CallExpression	NANCHOR ( node )		3442105	0					
ANR	3442459	Callee	NANCHOR		3442105	0					
ANR	3442460	Identifier	NANCHOR		3442105	0					
ANR	3442461	ArgumentList	node		3442105	1					
ANR	3442462	Argument	node		3442105	0					
ANR	3442463	Identifier	node		3442105	0					
ANR	3442464	Argument	reg		3442105	1					
ANR	3442465	Identifier	reg		3442105	0					
ANR	3442466	BreakStatement	break ;	1571:4:38017:38022	3442105	32	True				
ANR	3442467	Label	default :	1573:2:38027:38034	3442105	33	True				
ANR	3442468	Identifier	default		3442105	0					
ANR	3442469	ReturnStatement	return ONIGERR_TYPE_BUG ;	1574:4:38040:38063	3442105	34	True				
ANR	3442470	Identifier	ONIGERR_TYPE_BUG		3442105	0					
ANR	3442471	BreakStatement	break ;	1575:4:38069:38074	3442105	35	True				
ANR	3442472	ReturnStatement	return r ;	1578:2:38083:38091	3442105	3	True				
ANR	3442473	Identifier	r		3442105	0					
ANR	3442474	ReturnType	static int		3442105	1					
ANR	3442475	Identifier	compile_length_tree		3442105	2					
ANR	3442476	ParameterList	"Node * node , regex_t * reg"		3442105	3					
ANR	3442477	Parameter	Node * node	1489:20:36319:36328	3442105	0	True				
ANR	3442478	ParameterType	Node *		3442105	0					
ANR	3442479	Identifier	node		3442105	1					
ANR	3442480	Parameter	regex_t * reg	1489:32:36331:36342	3442105	1	True				
ANR	3442481	ParameterType	regex_t *		3442105	0					
ANR	3442482	Identifier	reg		3442105	1					
ANR	3442483	CFGEntryNode	ENTRY		3442105		True				
ANR	3442484	CFGExitNode	EXIT		3442105		True				
ANR	3442485	Symbol	IS_NOT_NULL		3442105						
ANR	3442486	Symbol	NCAR		3442105						
ANR	3442487	Symbol	br -> back_num		3442105						
ANR	3442488	Symbol	compile_length_enclose_node		3442105						
ANR	3442489	Symbol	* br -> back_static		3442105						
ANR	3442490	Symbol	NSTRING_IS_RAW		3442105						
ANR	3442491	Symbol	type		3442105						
ANR	3442492	Symbol	SIZE_LENGTH		3442105						
ANR	3442493	Symbol	NQTFR		3442105						
ANR	3442494	Symbol	NCCLASS		3442105						
ANR	3442495	Symbol	br		3442105						
ANR	3442496	Symbol	SIZE_OPCODE		3442105						
ANR	3442497	Symbol	compile_length_string_node		3442105						
ANR	3442498	Symbol	SIZE_MEMNUM		3442105						
ANR	3442499	Symbol	len		3442105						
ANR	3442500	Symbol	compile_length_anchor_node		3442105						
ANR	3442501	Symbol	reg		3442105						
ANR	3442502	Symbol	NBREF		3442105						
ANR	3442503	Symbol	* br		3442105						
ANR	3442504	Symbol	reg -> options		3442105						
ANR	3442505	Symbol	NENCLOSE		3442105						
ANR	3442506	Symbol	SIZE_OPTION		3442105						
ANR	3442507	Symbol	compile_length_string_raw_node		3442105						
ANR	3442508	Symbol	SIZE_OP_JUMP		3442105						
ANR	3442509	Symbol	compile_length_tree		3442105						
ANR	3442510	Symbol	compile_length_cclass_node		3442105						
ANR	3442511	Symbol	NCDR		3442105						
ANR	3442512	Symbol	NSTR		3442105						
ANR	3442513	Symbol	SIZE_OP_PUSH		3442105						
ANR	3442514	Symbol	ONIGERR_TYPE_BUG		3442105						
ANR	3442515	Symbol	n		3442105						
ANR	3442516	Symbol	br -> back_static		3442105						
ANR	3442517	Symbol	node		3442105						
ANR	3442518	Symbol	r		3442105						
ANR	3442519	Symbol	SIZE_OP_CALL		3442105						
ANR	3442520	Symbol	IS_IGNORECASE		3442105						
ANR	3442521	Symbol	NANCHOR		3442105						
ANR	3442522	Symbol	NTYPE		3442105						
ANR	3442523	Symbol	IS_BACKREF_NEST_LEVEL		3442105						
ANR	3442524	Symbol	* reg		3442105						
ANR	3442525	Symbol	* * br		3442105						
ANR	3442526	Symbol	compile_length_quantifier_node		3442105						
ANR	3442527	Function	compile_tree	1581:0:38096:41545							
ANR	3442528	FunctionDef	"compile_tree (Node * node , regex_t * reg)"		3442527	0					
ANR	3442529	CompoundStatement		1583:0:38146:41545	3442527	0					
ANR	3442530	IdentifierDeclStatement	"int n , type , len , pos , r = 0 ;"	1584:2:38150:38178	3442527	0	True				
ANR	3442531	IdentifierDecl	n		3442527	0					
ANR	3442532	IdentifierDeclType	int		3442527	0					
ANR	3442533	Identifier	n		3442527	1					
ANR	3442534	IdentifierDecl	type		3442527	1					
ANR	3442535	IdentifierDeclType	int		3442527	0					
ANR	3442536	Identifier	type		3442527	1					
ANR	3442537	IdentifierDecl	len		3442527	2					
ANR	3442538	IdentifierDeclType	int		3442527	0					
ANR	3442539	Identifier	len		3442527	1					
ANR	3442540	IdentifierDecl	pos		3442527	3					
ANR	3442541	IdentifierDeclType	int		3442527	0					
ANR	3442542	Identifier	pos		3442527	1					
ANR	3442543	IdentifierDecl	r = 0		3442527	4					
ANR	3442544	IdentifierDeclType	int		3442527	0					
ANR	3442545	Identifier	r		3442527	1					
ANR	3442546	AssignmentExpression	r = 0		3442527	2		=			
ANR	3442547	Identifier	r		3442527	0					
ANR	3442548	PrimaryExpression	0		3442527	1					
ANR	3442549	ExpressionStatement	type = NTYPE ( node )	1586:2:38183:38201	3442527	1	True				
ANR	3442550	AssignmentExpression	type = NTYPE ( node )		3442527	0		=			
ANR	3442551	Identifier	type		3442527	0					
ANR	3442552	CallExpression	NTYPE ( node )		3442527	1					
ANR	3442553	Callee	NTYPE		3442527	0					
ANR	3442554	Identifier	NTYPE		3442527	0					
ANR	3442555	ArgumentList	node		3442527	1					
ANR	3442556	Argument	node		3442527	0					
ANR	3442557	Identifier	node		3442527	0					
ANR	3442558	SwitchStatement	switch ( type )		3442527	2					
ANR	3442559	Condition	type	1587:10:38213:38216	3442527	0	True				
ANR	3442560	Identifier	type		3442527	0					
ANR	3442561	CompoundStatement		5:16:72:72	3442527	1					
ANR	3442562	Label	case NT_LIST :	1588:2:38223:38235	3442527	0	True				
ANR	3442563	Identifier	NT_LIST		3442527	0					
ANR	3442564	DoStatement	do		3442527	1					
ANR	3442565	CompoundStatement		7:7:97:97	3442527	0					
ANR	3442566	ExpressionStatement	"r = compile_tree ( NCAR ( node ) , reg )"	1590:6:38252:38285	3442527	0	True				
ANR	3442567	AssignmentExpression	"r = compile_tree ( NCAR ( node ) , reg )"		3442527	0		=			
ANR	3442568	Identifier	r		3442527	0					
ANR	3442569	CallExpression	"compile_tree ( NCAR ( node ) , reg )"		3442527	1					
ANR	3442570	Callee	compile_tree		3442527	0					
ANR	3442571	Identifier	compile_tree		3442527	0					
ANR	3442572	ArgumentList	NCAR ( node )		3442527	1					
ANR	3442573	Argument	NCAR ( node )		3442527	0					
ANR	3442574	CallExpression	NCAR ( node )		3442527	0					
ANR	3442575	Callee	NCAR		3442527	0					
ANR	3442576	Identifier	NCAR		3442527	0					
ANR	3442577	ArgumentList	node		3442527	1					
ANR	3442578	Argument	node		3442527	0					
ANR	3442579	Identifier	node		3442527	0					
ANR	3442580	Argument	reg		3442527	1					
ANR	3442581	Identifier	reg		3442527	0					
ANR	3442582	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1591:13:38300:38339	3442527	1	True				
ANR	3442583	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3442527	0		&&			
ANR	3442584	EqualityExpression	r == 0		3442527	0		==			
ANR	3442585	Identifier	r		3442527	0					
ANR	3442586	PrimaryExpression	0		3442527	1					
ANR	3442587	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3442527	1					
ANR	3442588	Callee	IS_NOT_NULL		3442527	0					
ANR	3442589	Identifier	IS_NOT_NULL		3442527	0					
ANR	3442590	ArgumentList	node = NCDR ( node )		3442527	1					
ANR	3442591	Argument	node = NCDR ( node )		3442527	0					
ANR	3442592	AssignmentExpression	node = NCDR ( node )		3442527	0		=			
ANR	3442593	Identifier	node		3442527	0					
ANR	3442594	CallExpression	NCDR ( node )		3442527	1					
ANR	3442595	Callee	NCDR		3442527	0					
ANR	3442596	Identifier	NCDR		3442527	0					
ANR	3442597	ArgumentList	node		3442527	1					
ANR	3442598	Argument	node		3442527	0					
ANR	3442599	Identifier	node		3442527	0					
ANR	3442600	BreakStatement	break ;	1592:4:38347:38352	3442527	2	True				
ANR	3442601	Label	case NT_ALT :	1594:2:38357:38368	3442527	3	True				
ANR	3442602	Identifier	NT_ALT		3442527	0					
ANR	3442603	CompoundStatement		14:6:235:249	3442527	4					
ANR	3442604	IdentifierDeclStatement	Node * x = node ;	1596:6:38382:38396	3442527	0	True				
ANR	3442605	IdentifierDecl	* x = node		3442527	0					
ANR	3442606	IdentifierDeclType	Node *		3442527	0					
ANR	3442607	Identifier	x		3442527	1					
ANR	3442608	AssignmentExpression	* x = node		3442527	2		=			
ANR	3442609	Identifier	node		3442527	0					
ANR	3442610	Identifier	node		3442527	1					
ANR	3442611	ExpressionStatement	len = 0	1597:6:38404:38411	3442527	1	True				
ANR	3442612	AssignmentExpression	len = 0		3442527	0		=			
ANR	3442613	Identifier	len		3442527	0					
ANR	3442614	PrimaryExpression	0		3442527	1					
ANR	3442615	DoStatement	do		3442527	2					
ANR	3442616	CompoundStatement		16:9:275:275	3442527	0					
ANR	3442617	ExpressionStatement	"len += compile_length_tree ( NCAR ( x ) , reg )"	1599:1:38425:38465	3442527	0	True				
ANR	3442618	AssignmentExpression	"len += compile_length_tree ( NCAR ( x ) , reg )"		3442527	0		+=			
ANR	3442619	Identifier	len		3442527	0					
ANR	3442620	CallExpression	"compile_length_tree ( NCAR ( x ) , reg )"		3442527	1					
ANR	3442621	Callee	compile_length_tree		3442527	0					
ANR	3442622	Identifier	compile_length_tree		3442527	0					
ANR	3442623	ArgumentList	NCAR ( x )		3442527	1					
ANR	3442624	Argument	NCAR ( x )		3442527	0					
ANR	3442625	CallExpression	NCAR ( x )		3442527	0					
ANR	3442626	Callee	NCAR		3442527	0					
ANR	3442627	Identifier	NCAR		3442527	0					
ANR	3442628	ArgumentList	x		3442527	1					
ANR	3442629	Argument	x		3442527	0					
ANR	3442630	Identifier	x		3442527	0					
ANR	3442631	Argument	reg		3442527	1					
ANR	3442632	Identifier	reg		3442527	0					
ANR	3442633	IfStatement	if ( NCDR ( x ) != NULL )		3442527	1					
ANR	3442634	Condition	NCDR ( x ) != NULL	1600:5:38472:38486	3442527	0	True				
ANR	3442635	EqualityExpression	NCDR ( x ) != NULL		3442527	0		!=			
ANR	3442636	CallExpression	NCDR ( x )		3442527	0					
ANR	3442637	Callee	NCDR		3442527	0					
ANR	3442638	Identifier	NCDR		3442527	0					
ANR	3442639	ArgumentList	x		3442527	1					
ANR	3442640	Argument	x		3442527	0					
ANR	3442641	Identifier	x		3442527	0					
ANR	3442642	Identifier	NULL		3442527	1					
ANR	3442643	CompoundStatement		18:22:342:342	3442527	1					
ANR	3442644	ExpressionStatement	len += SIZE_OP_PUSH + SIZE_OP_JUMP	1601:3:38494:38528	3442527	0	True				
ANR	3442645	AssignmentExpression	len += SIZE_OP_PUSH + SIZE_OP_JUMP		3442527	0		+=			
ANR	3442646	Identifier	len		3442527	0					
ANR	3442647	AdditiveExpression	SIZE_OP_PUSH + SIZE_OP_JUMP		3442527	1		+			
ANR	3442648	Identifier	SIZE_OP_PUSH		3442527	0					
ANR	3442649	Identifier	SIZE_OP_JUMP		3442527	1					
ANR	3442650	Condition	IS_NOT_NULL ( x = NCDR ( x ) )	1603:15:38548:38571	3442527	1	True				
ANR	3442651	CallExpression	IS_NOT_NULL ( x = NCDR ( x ) )		3442527	0					
ANR	3442652	Callee	IS_NOT_NULL		3442527	0					
ANR	3442653	Identifier	IS_NOT_NULL		3442527	0					
ANR	3442654	ArgumentList	x = NCDR ( x )		3442527	1					
ANR	3442655	Argument	x = NCDR ( x )		3442527	0					
ANR	3442656	AssignmentExpression	x = NCDR ( x )		3442527	0		=			
ANR	3442657	Identifier	x		3442527	0					
ANR	3442658	CallExpression	NCDR ( x )		3442527	1					
ANR	3442659	Callee	NCDR		3442527	0					
ANR	3442660	Identifier	NCDR		3442527	0					
ANR	3442661	ArgumentList	x		3442527	1					
ANR	3442662	Argument	x		3442527	0					
ANR	3442663	Identifier	x		3442527	0					
ANR	3442664	ExpressionStatement	pos = reg -> used + len	1604:6:38581:38602	3442527	3	True				
ANR	3442665	AssignmentExpression	pos = reg -> used + len		3442527	0		=			
ANR	3442666	Identifier	pos		3442527	0					
ANR	3442667	AdditiveExpression	reg -> used + len		3442527	1		+			
ANR	3442668	PtrMemberAccess	reg -> used		3442527	0					
ANR	3442669	Identifier	reg		3442527	0					
ANR	3442670	Identifier	used		3442527	1					
ANR	3442671	Identifier	len		3442527	1					
ANR	3442672	DoStatement	do		3442527	4					
ANR	3442673	CompoundStatement		24:9:488:488	3442527	0					
ANR	3442674	ExpressionStatement	"len = compile_length_tree ( NCAR ( node ) , reg )"	1607:1:38638:38680	3442527	0	True				
ANR	3442675	AssignmentExpression	"len = compile_length_tree ( NCAR ( node ) , reg )"		3442527	0		=			
ANR	3442676	Identifier	len		3442527	0					
ANR	3442677	CallExpression	"compile_length_tree ( NCAR ( node ) , reg )"		3442527	1					
ANR	3442678	Callee	compile_length_tree		3442527	0					
ANR	3442679	Identifier	compile_length_tree		3442527	0					
ANR	3442680	ArgumentList	NCAR ( node )		3442527	1					
ANR	3442681	Argument	NCAR ( node )		3442527	0					
ANR	3442682	CallExpression	NCAR ( node )		3442527	0					
ANR	3442683	Callee	NCAR		3442527	0					
ANR	3442684	Identifier	NCAR		3442527	0					
ANR	3442685	ArgumentList	node		3442527	1					
ANR	3442686	Argument	node		3442527	0					
ANR	3442687	Identifier	node		3442527	0					
ANR	3442688	Argument	reg		3442527	1					
ANR	3442689	Identifier	reg		3442527	0					
ANR	3442690	IfStatement	if ( IS_NOT_NULL ( NCDR ( node ) ) )		3442527	1					
ANR	3442691	Condition	IS_NOT_NULL ( NCDR ( node ) )	1608:5:38687:38709	3442527	0	True				
ANR	3442692	CallExpression	IS_NOT_NULL ( NCDR ( node ) )		3442527	0					
ANR	3442693	Callee	IS_NOT_NULL		3442527	0					
ANR	3442694	Identifier	IS_NOT_NULL		3442527	0					
ANR	3442695	ArgumentList	NCDR ( node )		3442527	1					
ANR	3442696	Argument	NCDR ( node )		3442527	0					
ANR	3442697	CallExpression	NCDR ( node )		3442527	0					
ANR	3442698	Callee	NCDR		3442527	0					
ANR	3442699	Identifier	NCDR		3442527	0					
ANR	3442700	ArgumentList	node		3442527	1					
ANR	3442701	Argument	node		3442527	0					
ANR	3442702	Identifier	node		3442527	0					
ANR	3442703	CompoundStatement		26:30:565:565	3442527	1					
ANR	3442704	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_JUMP )"	1609:3:38717:38774	3442527	0	True				
ANR	3442705	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_JUMP )"		3442527	0		=			
ANR	3442706	Identifier	r		3442527	0					
ANR	3442707	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_JUMP )"		3442527	1					
ANR	3442708	Callee	add_opcode_rel_addr		3442527	0					
ANR	3442709	Identifier	add_opcode_rel_addr		3442527	0					
ANR	3442710	ArgumentList	reg		3442527	1					
ANR	3442711	Argument	reg		3442527	0					
ANR	3442712	Identifier	reg		3442527	0					
ANR	3442713	Argument	OP_PUSH		3442527	1					
ANR	3442714	Identifier	OP_PUSH		3442527	0					
ANR	3442715	Argument	len + SIZE_OP_JUMP		3442527	2					
ANR	3442716	AdditiveExpression	len + SIZE_OP_JUMP		3442527	0		+			
ANR	3442717	Identifier	len		3442527	0					
ANR	3442718	Identifier	SIZE_OP_JUMP		3442527	1					
ANR	3442719	IfStatement	if ( r )		3442527	1					
ANR	3442720	Condition	r	1610:7:38783:38783	3442527	0	True				
ANR	3442721	Identifier	r		3442527	0					
ANR	3442722	BreakStatement	break ;	1610:10:38786:38791	3442527	1	True				
ANR	3442723	ExpressionStatement	"r = compile_tree ( NCAR ( node ) , reg )"	1612:1:38797:38830	3442527	2	True				
ANR	3442724	AssignmentExpression	"r = compile_tree ( NCAR ( node ) , reg )"		3442527	0		=			
ANR	3442725	Identifier	r		3442527	0					
ANR	3442726	CallExpression	"compile_tree ( NCAR ( node ) , reg )"		3442527	1					
ANR	3442727	Callee	compile_tree		3442527	0					
ANR	3442728	Identifier	compile_tree		3442527	0					
ANR	3442729	ArgumentList	NCAR ( node )		3442527	1					
ANR	3442730	Argument	NCAR ( node )		3442527	0					
ANR	3442731	CallExpression	NCAR ( node )		3442527	0					
ANR	3442732	Callee	NCAR		3442527	0					
ANR	3442733	Identifier	NCAR		3442527	0					
ANR	3442734	ArgumentList	node		3442527	1					
ANR	3442735	Argument	node		3442527	0					
ANR	3442736	Identifier	node		3442527	0					
ANR	3442737	Argument	reg		3442527	1					
ANR	3442738	Identifier	reg		3442527	0					
ANR	3442739	IfStatement	if ( r )		3442527	3					
ANR	3442740	Condition	r	1613:5:38837:38837	3442527	0	True				
ANR	3442741	Identifier	r		3442527	0					
ANR	3442742	BreakStatement	break ;	1613:8:38840:38845	3442527	1	True				
ANR	3442743	IfStatement	if ( IS_NOT_NULL ( NCDR ( node ) ) )		3442527	4					
ANR	3442744	Condition	IS_NOT_NULL ( NCDR ( node ) )	1614:5:38852:38874	3442527	0	True				
ANR	3442745	CallExpression	IS_NOT_NULL ( NCDR ( node ) )		3442527	0					
ANR	3442746	Callee	IS_NOT_NULL		3442527	0					
ANR	3442747	Identifier	IS_NOT_NULL		3442527	0					
ANR	3442748	ArgumentList	NCDR ( node )		3442527	1					
ANR	3442749	Argument	NCDR ( node )		3442527	0					
ANR	3442750	CallExpression	NCDR ( node )		3442527	0					
ANR	3442751	Callee	NCDR		3442527	0					
ANR	3442752	Identifier	NCDR		3442527	0					
ANR	3442753	ArgumentList	node		3442527	1					
ANR	3442754	Argument	node		3442527	0					
ANR	3442755	Identifier	node		3442527	0					
ANR	3442756	CompoundStatement		32:30:730:730	3442527	1					
ANR	3442757	ExpressionStatement	len = pos - ( reg -> used + SIZE_OP_JUMP )	1615:3:38882:38920	3442527	0	True				
ANR	3442758	AssignmentExpression	len = pos - ( reg -> used + SIZE_OP_JUMP )		3442527	0		=			
ANR	3442759	Identifier	len		3442527	0					
ANR	3442760	AdditiveExpression	pos - ( reg -> used + SIZE_OP_JUMP )		3442527	1		-			
ANR	3442761	Identifier	pos		3442527	0					
ANR	3442762	AdditiveExpression	reg -> used + SIZE_OP_JUMP		3442527	1		+			
ANR	3442763	PtrMemberAccess	reg -> used		3442527	0					
ANR	3442764	Identifier	reg		3442527	0					
ANR	3442765	Identifier	used		3442527	1					
ANR	3442766	Identifier	SIZE_OP_JUMP		3442527	1					
ANR	3442767	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"	1616:3:38925:38967	3442527	1	True				
ANR	3442768	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"		3442527	0		=			
ANR	3442769	Identifier	r		3442527	0					
ANR	3442770	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , len )"		3442527	1					
ANR	3442771	Callee	add_opcode_rel_addr		3442527	0					
ANR	3442772	Identifier	add_opcode_rel_addr		3442527	0					
ANR	3442773	ArgumentList	reg		3442527	1					
ANR	3442774	Argument	reg		3442527	0					
ANR	3442775	Identifier	reg		3442527	0					
ANR	3442776	Argument	OP_JUMP		3442527	1					
ANR	3442777	Identifier	OP_JUMP		3442527	0					
ANR	3442778	Argument	len		3442527	2					
ANR	3442779	Identifier	len		3442527	0					
ANR	3442780	IfStatement	if ( r )		3442527	2					
ANR	3442781	Condition	r	1617:7:38976:38976	3442527	0	True				
ANR	3442782	Identifier	r		3442527	0					
ANR	3442783	BreakStatement	break ;	1617:10:38979:38984	3442527	1	True				
ANR	3442784	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	1619:15:39004:39033	3442527	1	True				
ANR	3442785	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3442527	0					
ANR	3442786	Callee	IS_NOT_NULL		3442527	0					
ANR	3442787	Identifier	IS_NOT_NULL		3442527	0					
ANR	3442788	ArgumentList	node = NCDR ( node )		3442527	1					
ANR	3442789	Argument	node = NCDR ( node )		3442527	0					
ANR	3442790	AssignmentExpression	node = NCDR ( node )		3442527	0		=			
ANR	3442791	Identifier	node		3442527	0					
ANR	3442792	CallExpression	NCDR ( node )		3442527	1					
ANR	3442793	Callee	NCDR		3442527	0					
ANR	3442794	Identifier	NCDR		3442527	0					
ANR	3442795	ArgumentList	node		3442527	1					
ANR	3442796	Argument	node		3442527	0					
ANR	3442797	Identifier	node		3442527	0					
ANR	3442798	BreakStatement	break ;	1621:4:39047:39052	3442527	5	True				
ANR	3442799	Label	case NT_STR :	1623:2:39057:39068	3442527	6	True				
ANR	3442800	Identifier	NT_STR		3442527	0					
ANR	3442801	IfStatement	if ( NSTRING_IS_RAW ( node ) )		3442527	7					
ANR	3442802	Condition	NSTRING_IS_RAW ( node )	1624:8:39078:39097	3442527	0	True				
ANR	3442803	CallExpression	NSTRING_IS_RAW ( node )		3442527	0					
ANR	3442804	Callee	NSTRING_IS_RAW		3442527	0					
ANR	3442805	Identifier	NSTRING_IS_RAW		3442527	0					
ANR	3442806	ArgumentList	node		3442527	1					
ANR	3442807	Argument	node		3442527	0					
ANR	3442808	Identifier	node		3442527	0					
ANR	3442809	ExpressionStatement	"r = compile_string_raw_node ( NSTR ( node ) , reg )"	1625:6:39106:39150	3442527	1	True				
ANR	3442810	AssignmentExpression	"r = compile_string_raw_node ( NSTR ( node ) , reg )"		3442527	0		=			
ANR	3442811	Identifier	r		3442527	0					
ANR	3442812	CallExpression	"compile_string_raw_node ( NSTR ( node ) , reg )"		3442527	1					
ANR	3442813	Callee	compile_string_raw_node		3442527	0					
ANR	3442814	Identifier	compile_string_raw_node		3442527	0					
ANR	3442815	ArgumentList	NSTR ( node )		3442527	1					
ANR	3442816	Argument	NSTR ( node )		3442527	0					
ANR	3442817	CallExpression	NSTR ( node )		3442527	0					
ANR	3442818	Callee	NSTR		3442527	0					
ANR	3442819	Identifier	NSTR		3442527	0					
ANR	3442820	ArgumentList	node		3442527	1					
ANR	3442821	Argument	node		3442527	0					
ANR	3442822	Identifier	node		3442527	0					
ANR	3442823	Argument	reg		3442527	1					
ANR	3442824	Identifier	reg		3442527	0					
ANR	3442825	ElseStatement	else		3442527	0					
ANR	3442826	ExpressionStatement	"r = compile_string_node ( node , reg )"	1627:6:39167:39201	3442527	0	True				
ANR	3442827	AssignmentExpression	"r = compile_string_node ( node , reg )"		3442527	0		=			
ANR	3442828	Identifier	r		3442527	0					
ANR	3442829	CallExpression	"compile_string_node ( node , reg )"		3442527	1					
ANR	3442830	Callee	compile_string_node		3442527	0					
ANR	3442831	Identifier	compile_string_node		3442527	0					
ANR	3442832	ArgumentList	node		3442527	1					
ANR	3442833	Argument	node		3442527	0					
ANR	3442834	Identifier	node		3442527	0					
ANR	3442835	Argument	reg		3442527	1					
ANR	3442836	Identifier	reg		3442527	0					
ANR	3442837	BreakStatement	break ;	1628:4:39207:39212	3442527	8	True				
ANR	3442838	Label	case NT_CCLASS :	1630:2:39217:39231	3442527	9	True				
ANR	3442839	Identifier	NT_CCLASS		3442527	0					
ANR	3442840	ExpressionStatement	"r = compile_cclass_node ( NCCLASS ( node ) , reg )"	1631:4:39237:39280	3442527	10	True				
ANR	3442841	AssignmentExpression	"r = compile_cclass_node ( NCCLASS ( node ) , reg )"		3442527	0		=			
ANR	3442842	Identifier	r		3442527	0					
ANR	3442843	CallExpression	"compile_cclass_node ( NCCLASS ( node ) , reg )"		3442527	1					
ANR	3442844	Callee	compile_cclass_node		3442527	0					
ANR	3442845	Identifier	compile_cclass_node		3442527	0					
ANR	3442846	ArgumentList	NCCLASS ( node )		3442527	1					
ANR	3442847	Argument	NCCLASS ( node )		3442527	0					
ANR	3442848	CallExpression	NCCLASS ( node )		3442527	0					
ANR	3442849	Callee	NCCLASS		3442527	0					
ANR	3442850	Identifier	NCCLASS		3442527	0					
ANR	3442851	ArgumentList	node		3442527	1					
ANR	3442852	Argument	node		3442527	0					
ANR	3442853	Identifier	node		3442527	0					
ANR	3442854	Argument	reg		3442527	1					
ANR	3442855	Identifier	reg		3442527	0					
ANR	3442856	BreakStatement	break ;	1632:4:39286:39291	3442527	11	True				
ANR	3442857	Label	case NT_CTYPE :	1634:2:39296:39309	3442527	12	True				
ANR	3442858	Identifier	NT_CTYPE		3442527	0					
ANR	3442859	CompoundStatement		54:6:1176:1182	3442527	13					
ANR	3442860	IdentifierDeclStatement	int op ;	1636:6:39323:39329	3442527	0	True				
ANR	3442861	IdentifierDecl	op		3442527	0					
ANR	3442862	IdentifierDeclType	int		3442527	0					
ANR	3442863	Identifier	op		3442527	1					
ANR	3442864	SwitchStatement	switch ( NCTYPE ( node ) -> ctype )		3442527	1					
ANR	3442865	Condition	NCTYPE ( node ) -> ctype	1638:14:39346:39364	3442527	0	True				
ANR	3442866	PtrMemberAccess	NCTYPE ( node ) -> ctype		3442527	0					
ANR	3442867	CallExpression	NCTYPE ( node )		3442527	0					
ANR	3442868	Callee	NCTYPE		3442527	0					
ANR	3442869	Identifier	NCTYPE		3442527	0					
ANR	3442870	ArgumentList	node		3442527	1					
ANR	3442871	Argument	node		3442527	0					
ANR	3442872	Identifier	node		3442527	0					
ANR	3442873	Identifier	ctype		3442527	1					
ANR	3442874	CompoundStatement		56:35:1220:1220	3442527	1					
ANR	3442875	Label	case ONIGENC_CTYPE_WORD :	1639:6:39375:39398	3442527	0	True				
ANR	3442876	Identifier	ONIGENC_CTYPE_WORD		3442527	0					
ANR	3442877	IfStatement	if ( NCTYPE ( node ) -> not != 0 )		3442527	1					
ANR	3442878	Condition	NCTYPE ( node ) -> not != 0	1640:5:39405:39426	3442527	0	True				
ANR	3442879	EqualityExpression	NCTYPE ( node ) -> not != 0		3442527	0		!=			
ANR	3442880	PtrMemberAccess	NCTYPE ( node ) -> not		3442527	0					
ANR	3442881	CallExpression	NCTYPE ( node )		3442527	0					
ANR	3442882	Callee	NCTYPE		3442527	0					
ANR	3442883	Identifier	NCTYPE		3442527	0					
ANR	3442884	ArgumentList	node		3442527	1					
ANR	3442885	Argument	node		3442527	0					
ANR	3442886	Identifier	node		3442527	0					
ANR	3442887	Identifier	not		3442527	1					
ANR	3442888	PrimaryExpression	0		3442527	1					
ANR	3442889	ExpressionStatement	op = OP_NOT_WORD	1640:30:39430:39446	3442527	1	True				
ANR	3442890	AssignmentExpression	op = OP_NOT_WORD		3442527	0		=			
ANR	3442891	Identifier	op		3442527	0					
ANR	3442892	Identifier	OP_NOT_WORD		3442527	1					
ANR	3442893	ElseStatement	else		3442527	0					
ANR	3442894	ExpressionStatement	op = OP_WORD	1641:30:39478:39490	3442527	0	True				
ANR	3442895	AssignmentExpression	op = OP_WORD		3442527	0		=			
ANR	3442896	Identifier	op		3442527	0					
ANR	3442897	Identifier	OP_WORD		3442527	1					
ANR	3442898	BreakStatement	break ;	1642:1:39493:39498	3442527	2	True				
ANR	3442899	Label	default :	1643:6:39506:39513	3442527	3	True				
ANR	3442900	Identifier	default		3442527	0					
ANR	3442901	ReturnStatement	return ONIGERR_TYPE_BUG ;	1644:1:39516:39539	3442527	4	True				
ANR	3442902	Identifier	ONIGERR_TYPE_BUG		3442527	0					
ANR	3442903	BreakStatement	break ;	1645:1:39542:39547	3442527	5	True				
ANR	3442904	ExpressionStatement	"r = add_opcode ( reg , op )"	1647:6:39563:39586	3442527	2	True				
ANR	3442905	AssignmentExpression	"r = add_opcode ( reg , op )"		3442527	0		=			
ANR	3442906	Identifier	r		3442527	0					
ANR	3442907	CallExpression	"add_opcode ( reg , op )"		3442527	1					
ANR	3442908	Callee	add_opcode		3442527	0					
ANR	3442909	Identifier	add_opcode		3442527	0					
ANR	3442910	ArgumentList	reg		3442527	1					
ANR	3442911	Argument	reg		3442527	0					
ANR	3442912	Identifier	reg		3442527	0					
ANR	3442913	Argument	op		3442527	1					
ANR	3442914	Identifier	op		3442527	0					
ANR	3442915	BreakStatement	break ;	1649:4:39598:39603	3442527	14	True				
ANR	3442916	Label	case NT_CANY :	1651:2:39608:39620	3442527	15	True				
ANR	3442917	Identifier	NT_CANY		3442527	0					
ANR	3442918	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		3442527	16					
ANR	3442919	Condition	IS_MULTILINE ( reg -> options )	1652:8:39630:39655	3442527	0	True				
ANR	3442920	CallExpression	IS_MULTILINE ( reg -> options )		3442527	0					
ANR	3442921	Callee	IS_MULTILINE		3442527	0					
ANR	3442922	Identifier	IS_MULTILINE		3442527	0					
ANR	3442923	ArgumentList	reg -> options		3442527	1					
ANR	3442924	Argument	reg -> options		3442527	0					
ANR	3442925	PtrMemberAccess	reg -> options		3442527	0					
ANR	3442926	Identifier	reg		3442527	0					
ANR	3442927	Identifier	options		3442527	1					
ANR	3442928	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_ML )"	1653:6:39664:39698	3442527	1	True				
ANR	3442929	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_ML )"		3442527	0		=			
ANR	3442930	Identifier	r		3442527	0					
ANR	3442931	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML )"		3442527	1					
ANR	3442932	Callee	add_opcode		3442527	0					
ANR	3442933	Identifier	add_opcode		3442527	0					
ANR	3442934	ArgumentList	reg		3442527	1					
ANR	3442935	Argument	reg		3442527	0					
ANR	3442936	Identifier	reg		3442527	0					
ANR	3442937	Argument	OP_ANYCHAR_ML		3442527	1					
ANR	3442938	Identifier	OP_ANYCHAR_ML		3442527	0					
ANR	3442939	ElseStatement	else		3442527	0					
ANR	3442940	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR )"	1655:6:39715:39746	3442527	0	True				
ANR	3442941	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR )"		3442527	0		=			
ANR	3442942	Identifier	r		3442527	0					
ANR	3442943	CallExpression	"add_opcode ( reg , OP_ANYCHAR )"		3442527	1					
ANR	3442944	Callee	add_opcode		3442527	0					
ANR	3442945	Identifier	add_opcode		3442527	0					
ANR	3442946	ArgumentList	reg		3442527	1					
ANR	3442947	Argument	reg		3442527	0					
ANR	3442948	Identifier	reg		3442527	0					
ANR	3442949	Argument	OP_ANYCHAR		3442527	1					
ANR	3442950	Identifier	OP_ANYCHAR		3442527	0					
ANR	3442951	BreakStatement	break ;	1656:4:39752:39757	3442527	17	True				
ANR	3442952	Label	case NT_BREF :	1658:2:39762:39774	3442527	18	True				
ANR	3442953	Identifier	NT_BREF		3442527	0					
ANR	3442954	CompoundStatement		78:6:1641:1667	3442527	19					
ANR	3442955	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	1660:6:39788:39814	3442527	0	True				
ANR	3442956	IdentifierDecl	* br = NBREF ( node )		3442527	0					
ANR	3442957	IdentifierDeclType	BRefNode *		3442527	0					
ANR	3442958	Identifier	br		3442527	1					
ANR	3442959	AssignmentExpression	* br = NBREF ( node )		3442527	2		=			
ANR	3442960	Identifier	br		3442527	0					
ANR	3442961	CallExpression	NBREF ( node )		3442527	1					
ANR	3442962	Callee	NBREF		3442527	0					
ANR	3442963	Identifier	NBREF		3442527	0					
ANR	3442964	ArgumentList	node		3442527	1					
ANR	3442965	Argument	node		3442527	0					
ANR	3442966	Identifier	node		3442527	0					
ANR	3442967	IfStatement	if ( IS_BACKREF_NEST_LEVEL ( br ) )		3442527	1					
ANR	3442968	Condition	IS_BACKREF_NEST_LEVEL ( br )	1663:10:39857:39881	3442527	0	True				
ANR	3442969	CallExpression	IS_BACKREF_NEST_LEVEL ( br )		3442527	0					
ANR	3442970	Callee	IS_BACKREF_NEST_LEVEL		3442527	0					
ANR	3442971	Identifier	IS_BACKREF_NEST_LEVEL		3442527	0					
ANR	3442972	ArgumentList	br		3442527	1					
ANR	3442973	Argument	br		3442527	0					
ANR	3442974	Identifier	br		3442527	0					
ANR	3442975	CompoundStatement		81:37:1737:1737	3442527	1					
ANR	3442976	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF_WITH_LEVEL )"	1664:1:39887:39929	3442527	0	True				
ANR	3442977	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF_WITH_LEVEL )"		3442527	0		=			
ANR	3442978	Identifier	r		3442527	0					
ANR	3442979	CallExpression	"add_opcode ( reg , OP_BACKREF_WITH_LEVEL )"		3442527	1					
ANR	3442980	Callee	add_opcode		3442527	0					
ANR	3442981	Identifier	add_opcode		3442527	0					
ANR	3442982	ArgumentList	reg		3442527	1					
ANR	3442983	Argument	reg		3442527	0					
ANR	3442984	Identifier	reg		3442527	0					
ANR	3442985	Argument	OP_BACKREF_WITH_LEVEL		3442527	1					
ANR	3442986	Identifier	OP_BACKREF_WITH_LEVEL		3442527	0					
ANR	3442987	IfStatement	if ( r )		3442527	1					
ANR	3442988	Condition	r	1665:5:39936:39936	3442527	0	True				
ANR	3442989	Identifier	r		3442527	0					
ANR	3442990	ReturnStatement	return r ;	1665:8:39939:39947	3442527	1	True				
ANR	3442991	Identifier	r		3442527	0					
ANR	3442992	ExpressionStatement	"r = add_option ( reg , ( reg -> options & ONIG_OPTION_IGNORECASE ) )"	1666:1:39950:40010	3442527	2	True				
ANR	3442993	AssignmentExpression	"r = add_option ( reg , ( reg -> options & ONIG_OPTION_IGNORECASE ) )"		3442527	0		=			
ANR	3442994	Identifier	r		3442527	0					
ANR	3442995	CallExpression	"add_option ( reg , ( reg -> options & ONIG_OPTION_IGNORECASE ) )"		3442527	1					
ANR	3442996	Callee	add_option		3442527	0					
ANR	3442997	Identifier	add_option		3442527	0					
ANR	3442998	ArgumentList	reg		3442527	1					
ANR	3442999	Argument	reg		3442527	0					
ANR	3443000	Identifier	reg		3442527	0					
ANR	3443001	Argument	reg -> options & ONIG_OPTION_IGNORECASE		3442527	1					
ANR	3443002	BitAndExpression	reg -> options & ONIG_OPTION_IGNORECASE		3442527	0		&			
ANR	3443003	PtrMemberAccess	reg -> options		3442527	0					
ANR	3443004	Identifier	reg		3442527	0					
ANR	3443005	Identifier	options		3442527	1					
ANR	3443006	Identifier	ONIG_OPTION_IGNORECASE		3442527	1					
ANR	3443007	IfStatement	if ( r )		3442527	3					
ANR	3443008	Condition	r	1667:5:40017:40017	3442527	0	True				
ANR	3443009	Identifier	r		3442527	0					
ANR	3443010	ReturnStatement	return r ;	1667:8:40020:40028	3442527	1	True				
ANR	3443011	Identifier	r		3442527	0					
ANR	3443012	ExpressionStatement	"r = add_length ( reg , br -> nest_level )"	1668:1:40031:40066	3442527	4	True				
ANR	3443013	AssignmentExpression	"r = add_length ( reg , br -> nest_level )"		3442527	0		=			
ANR	3443014	Identifier	r		3442527	0					
ANR	3443015	CallExpression	"add_length ( reg , br -> nest_level )"		3442527	1					
ANR	3443016	Callee	add_length		3442527	0					
ANR	3443017	Identifier	add_length		3442527	0					
ANR	3443018	ArgumentList	reg		3442527	1					
ANR	3443019	Argument	reg		3442527	0					
ANR	3443020	Identifier	reg		3442527	0					
ANR	3443021	Argument	br -> nest_level		3442527	1					
ANR	3443022	PtrMemberAccess	br -> nest_level		3442527	0					
ANR	3443023	Identifier	br		3442527	0					
ANR	3443024	Identifier	nest_level		3442527	1					
ANR	3443025	IfStatement	if ( r )		3442527	5					
ANR	3443026	Condition	r	1669:5:40073:40073	3442527	0	True				
ANR	3443027	Identifier	r		3442527	0					
ANR	3443028	ReturnStatement	return r ;	1669:8:40076:40084	3442527	1	True				
ANR	3443029	Identifier	r		3442527	0					
ANR	3443030	GotoStatement	goto add_bacref_mems ;	1671:1:40088:40108	3442527	6	True				
ANR	3443031	Identifier	add_bacref_mems		3442527	0					
ANR	3443032	ElseStatement	else		3442527	0					
ANR	3443033	IfStatement	if ( br -> back_num == 1 )		3442527	0					
ANR	3443034	Condition	br -> back_num == 1	1675:10:40146:40162	3442527	0	True				
ANR	3443035	EqualityExpression	br -> back_num == 1		3442527	0		==			
ANR	3443036	PtrMemberAccess	br -> back_num		3442527	0					
ANR	3443037	Identifier	br		3442527	0					
ANR	3443038	Identifier	back_num		3442527	1					
ANR	3443039	PrimaryExpression	1		3442527	1					
ANR	3443040	CompoundStatement		93:29:2018:2018	3442527	1					
ANR	3443041	ExpressionStatement	n = br -> back_static [ 0 ]	1676:1:40168:40190	3442527	0	True				
ANR	3443042	AssignmentExpression	n = br -> back_static [ 0 ]		3442527	0		=			
ANR	3443043	Identifier	n		3442527	0					
ANR	3443044	ArrayIndexing	br -> back_static [ 0 ]		3442527	1					
ANR	3443045	PtrMemberAccess	br -> back_static		3442527	0					
ANR	3443046	Identifier	br		3442527	0					
ANR	3443047	Identifier	back_static		3442527	1					
ANR	3443048	PrimaryExpression	0		3442527	1					
ANR	3443049	IfStatement	if ( IS_IGNORECASE ( reg -> options ) )		3442527	1					
ANR	3443050	Condition	IS_IGNORECASE ( reg -> options )	1677:5:40197:40223	3442527	0	True				
ANR	3443051	CallExpression	IS_IGNORECASE ( reg -> options )		3442527	0					
ANR	3443052	Callee	IS_IGNORECASE		3442527	0					
ANR	3443053	Identifier	IS_IGNORECASE		3442527	0					
ANR	3443054	ArgumentList	reg -> options		3442527	1					
ANR	3443055	Argument	reg -> options		3442527	0					
ANR	3443056	PtrMemberAccess	reg -> options		3442527	0					
ANR	3443057	Identifier	reg		3442527	0					
ANR	3443058	Identifier	options		3442527	1					
ANR	3443059	CompoundStatement		95:34:2079:2079	3442527	1					
ANR	3443060	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREFN_IC )"	1678:3:40231:40266	3442527	0	True				
ANR	3443061	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREFN_IC )"		3442527	0		=			
ANR	3443062	Identifier	r		3442527	0					
ANR	3443063	CallExpression	"add_opcode ( reg , OP_BACKREFN_IC )"		3442527	1					
ANR	3443064	Callee	add_opcode		3442527	0					
ANR	3443065	Identifier	add_opcode		3442527	0					
ANR	3443066	ArgumentList	reg		3442527	1					
ANR	3443067	Argument	reg		3442527	0					
ANR	3443068	Identifier	reg		3442527	0					
ANR	3443069	Argument	OP_BACKREFN_IC		3442527	1					
ANR	3443070	Identifier	OP_BACKREFN_IC		3442527	0					
ANR	3443071	IfStatement	if ( r )		3442527	1					
ANR	3443072	Condition	r	1679:7:40275:40275	3442527	0	True				
ANR	3443073	Identifier	r		3442527	0					
ANR	3443074	ReturnStatement	return r ;	1679:10:40278:40286	3442527	1	True				
ANR	3443075	Identifier	r		3442527	0					
ANR	3443076	ExpressionStatement	"r = add_mem_num ( reg , n )"	1680:3:40291:40314	3442527	2	True				
ANR	3443077	AssignmentExpression	"r = add_mem_num ( reg , n )"		3442527	0		=			
ANR	3443078	Identifier	r		3442527	0					
ANR	3443079	CallExpression	"add_mem_num ( reg , n )"		3442527	1					
ANR	3443080	Callee	add_mem_num		3442527	0					
ANR	3443081	Identifier	add_mem_num		3442527	0					
ANR	3443082	ArgumentList	reg		3442527	1					
ANR	3443083	Argument	reg		3442527	0					
ANR	3443084	Identifier	reg		3442527	0					
ANR	3443085	Argument	n		3442527	1					
ANR	3443086	Identifier	n		3442527	0					
ANR	3443087	ElseStatement	else		3442527	0					
ANR	3443088	CompoundStatement		100:6:2178:2178	3442527	0					
ANR	3443089	SwitchStatement	switch ( n )		3442527	0					
ANR	3443090	Condition	n	1683:11:40338:40338	3442527	0	True				
ANR	3443091	Identifier	n		3442527	0					
ANR	3443092	CompoundStatement		101:14:2194:2194	3442527	1					
ANR	3443093	Label	case 1 :	1684:3:40346:40352	3442527	0	True				
ANR	3443094	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF1 )"	1684:12:40355:40387	3442527	1	True				
ANR	3443095	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF1 )"		3442527	0		=			
ANR	3443096	Identifier	r		3442527	0					
ANR	3443097	CallExpression	"add_opcode ( reg , OP_BACKREF1 )"		3442527	1					
ANR	3443098	Callee	add_opcode		3442527	0					
ANR	3443099	Identifier	add_opcode		3442527	0					
ANR	3443100	ArgumentList	reg		3442527	1					
ANR	3443101	Argument	reg		3442527	0					
ANR	3443102	Identifier	reg		3442527	0					
ANR	3443103	Argument	OP_BACKREF1		3442527	1					
ANR	3443104	Identifier	OP_BACKREF1		3442527	0					
ANR	3443105	BreakStatement	break ;	1684:46:40389:40394	3442527	2	True				
ANR	3443106	Label	case 2 :	1685:3:40399:40405	3442527	3	True				
ANR	3443107	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF2 )"	1685:12:40408:40440	3442527	4	True				
ANR	3443108	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF2 )"		3442527	0		=			
ANR	3443109	Identifier	r		3442527	0					
ANR	3443110	CallExpression	"add_opcode ( reg , OP_BACKREF2 )"		3442527	1					
ANR	3443111	Callee	add_opcode		3442527	0					
ANR	3443112	Identifier	add_opcode		3442527	0					
ANR	3443113	ArgumentList	reg		3442527	1					
ANR	3443114	Argument	reg		3442527	0					
ANR	3443115	Identifier	reg		3442527	0					
ANR	3443116	Argument	OP_BACKREF2		3442527	1					
ANR	3443117	Identifier	OP_BACKREF2		3442527	0					
ANR	3443118	BreakStatement	break ;	1685:46:40442:40447	3442527	5	True				
ANR	3443119	Label	default :	1686:3:40452:40459	3442527	6	True				
ANR	3443120	Identifier	default		3442527	0					
ANR	3443121	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREFN )"	1687:5:40466:40498	3442527	7	True				
ANR	3443122	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREFN )"		3442527	0		=			
ANR	3443123	Identifier	r		3442527	0					
ANR	3443124	CallExpression	"add_opcode ( reg , OP_BACKREFN )"		3442527	1					
ANR	3443125	Callee	add_opcode		3442527	0					
ANR	3443126	Identifier	add_opcode		3442527	0					
ANR	3443127	ArgumentList	reg		3442527	1					
ANR	3443128	Argument	reg		3442527	0					
ANR	3443129	Identifier	reg		3442527	0					
ANR	3443130	Argument	OP_BACKREFN		3442527	1					
ANR	3443131	Identifier	OP_BACKREFN		3442527	0					
ANR	3443132	IfStatement	if ( r )		3442527	8					
ANR	3443133	Condition	r	1688:9:40509:40509	3442527	0	True				
ANR	3443134	Identifier	r		3442527	0					
ANR	3443135	ReturnStatement	return r ;	1688:12:40512:40520	3442527	1	True				
ANR	3443136	Identifier	r		3442527	0					
ANR	3443137	ExpressionStatement	"r = add_mem_num ( reg , n )"	1689:5:40527:40550	3442527	9	True				
ANR	3443138	AssignmentExpression	"r = add_mem_num ( reg , n )"		3442527	0		=			
ANR	3443139	Identifier	r		3442527	0					
ANR	3443140	CallExpression	"add_mem_num ( reg , n )"		3442527	1					
ANR	3443141	Callee	add_mem_num		3442527	0					
ANR	3443142	Identifier	add_mem_num		3442527	0					
ANR	3443143	ArgumentList	reg		3442527	1					
ANR	3443144	Argument	reg		3442527	0					
ANR	3443145	Identifier	reg		3442527	0					
ANR	3443146	Argument	n		3442527	1					
ANR	3443147	Identifier	n		3442527	0					
ANR	3443148	BreakStatement	break ;	1690:5:40557:40562	3442527	10	True				
ANR	3443149	ElseStatement	else		3442527	0					
ANR	3443150	CompoundStatement		114:1:2455:2461	3442527	0					
ANR	3443151	IdentifierDeclStatement	int i ;	1695:1:40594:40599	3442527	0	True				
ANR	3443152	IdentifierDecl	i		3442527	0					
ANR	3443153	IdentifierDeclType	int		3442527	0					
ANR	3443154	Identifier	i		3442527	1					
ANR	3443155	IdentifierDeclStatement	int * p ;	1696:1:40602:40608	3442527	1	True				
ANR	3443156	IdentifierDecl	* p		3442527	0					
ANR	3443157	IdentifierDeclType	int *		3442527	0					
ANR	3443158	Identifier	p		3442527	1					
ANR	3443159	IfStatement	if ( IS_IGNORECASE ( reg -> options ) )		3442527	2					
ANR	3443160	Condition	IS_IGNORECASE ( reg -> options )	1698:12:40623:40649	3442527	0	True				
ANR	3443161	CallExpression	IS_IGNORECASE ( reg -> options )		3442527	0					
ANR	3443162	Callee	IS_IGNORECASE		3442527	0					
ANR	3443163	Identifier	IS_IGNORECASE		3442527	0					
ANR	3443164	ArgumentList	reg -> options		3442527	1					
ANR	3443165	Argument	reg -> options		3442527	0					
ANR	3443166	PtrMemberAccess	reg -> options		3442527	0					
ANR	3443167	Identifier	reg		3442527	0					
ANR	3443168	Identifier	options		3442527	1					
ANR	3443169	CompoundStatement		116:41:2505:2505	3442527	1					
ANR	3443170	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF_MULTI_IC )"	1699:10:40664:40704	3442527	0	True				
ANR	3443171	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF_MULTI_IC )"		3442527	0		=			
ANR	3443172	Identifier	r		3442527	0					
ANR	3443173	CallExpression	"add_opcode ( reg , OP_BACKREF_MULTI_IC )"		3442527	1					
ANR	3443174	Callee	add_opcode		3442527	0					
ANR	3443175	Identifier	add_opcode		3442527	0					
ANR	3443176	ArgumentList	reg		3442527	1					
ANR	3443177	Argument	reg		3442527	0					
ANR	3443178	Identifier	reg		3442527	0					
ANR	3443179	Argument	OP_BACKREF_MULTI_IC		3442527	1					
ANR	3443180	Identifier	OP_BACKREF_MULTI_IC		3442527	0					
ANR	3443181	ElseStatement	else		3442527	0					
ANR	3443182	CompoundStatement		119:13:2582:2582	3442527	0					
ANR	3443183	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF_MULTI )"	1702:10:40741:40778	3442527	0	True				
ANR	3443184	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF_MULTI )"		3442527	0		=			
ANR	3443185	Identifier	r		3442527	0					
ANR	3443186	CallExpression	"add_opcode ( reg , OP_BACKREF_MULTI )"		3442527	1					
ANR	3443187	Callee	add_opcode		3442527	0					
ANR	3443188	Identifier	add_opcode		3442527	0					
ANR	3443189	ArgumentList	reg		3442527	1					
ANR	3443190	Argument	reg		3442527	0					
ANR	3443191	Identifier	reg		3442527	0					
ANR	3443192	Argument	OP_BACKREF_MULTI		3442527	1					
ANR	3443193	Identifier	OP_BACKREF_MULTI		3442527	0					
ANR	3443194	IfStatement	if ( r )		3442527	3					
ANR	3443195	Condition	r	1704:5:40795:40795	3442527	0	True				
ANR	3443196	Identifier	r		3442527	0					
ANR	3443197	ReturnStatement	return r ;	1704:8:40798:40806	3442527	1	True				
ANR	3443198	Identifier	r		3442527	0					
ANR	3443199	Label	add_bacref_mems :	1707:6:40845:40860	3442527	4	True				
ANR	3443200	Identifier	add_bacref_mems		3442527	0					
ANR	3443201	ExpressionStatement	"r = add_length ( reg , br -> back_num )"	1709:1:40870:40903	3442527	5	True				
ANR	3443202	AssignmentExpression	"r = add_length ( reg , br -> back_num )"		3442527	0		=			
ANR	3443203	Identifier	r		3442527	0					
ANR	3443204	CallExpression	"add_length ( reg , br -> back_num )"		3442527	1					
ANR	3443205	Callee	add_length		3442527	0					
ANR	3443206	Identifier	add_length		3442527	0					
ANR	3443207	ArgumentList	reg		3442527	1					
ANR	3443208	Argument	reg		3442527	0					
ANR	3443209	Identifier	reg		3442527	0					
ANR	3443210	Argument	br -> back_num		3442527	1					
ANR	3443211	PtrMemberAccess	br -> back_num		3442527	0					
ANR	3443212	Identifier	br		3442527	0					
ANR	3443213	Identifier	back_num		3442527	1					
ANR	3443214	IfStatement	if ( r )		3442527	6					
ANR	3443215	Condition	r	1710:5:40910:40910	3442527	0	True				
ANR	3443216	Identifier	r		3442527	0					
ANR	3443217	ReturnStatement	return r ;	1710:8:40913:40921	3442527	1	True				
ANR	3443218	Identifier	r		3442527	0					
ANR	3443219	ExpressionStatement	p = BACKREFS_P ( br )	1711:1:40924:40942	3442527	7	True				
ANR	3443220	AssignmentExpression	p = BACKREFS_P ( br )		3442527	0		=			
ANR	3443221	Identifier	p		3442527	0					
ANR	3443222	CallExpression	BACKREFS_P ( br )		3442527	1					
ANR	3443223	Callee	BACKREFS_P		3442527	0					
ANR	3443224	Identifier	BACKREFS_P		3442527	0					
ANR	3443225	ArgumentList	br		3442527	1					
ANR	3443226	Argument	br		3442527	0					
ANR	3443227	Identifier	br		3442527	0					
ANR	3443228	ForStatement	for ( i = br -> back_num - 1 ; i >= 0 ; i -- )		3442527	8					
ANR	3443229	ForInit	i = br -> back_num - 1 ;	1712:6:40950:40970	3442527	0	True				
ANR	3443230	AssignmentExpression	i = br -> back_num - 1		3442527	0		=			
ANR	3443231	Identifier	i		3442527	0					
ANR	3443232	AdditiveExpression	br -> back_num - 1		3442527	1		-			
ANR	3443233	PtrMemberAccess	br -> back_num		3442527	0					
ANR	3443234	Identifier	br		3442527	0					
ANR	3443235	Identifier	back_num		3442527	1					
ANR	3443236	PrimaryExpression	1		3442527	1					
ANR	3443237	Condition	i >= 0	1712:28:40972:40977	3442527	1	True				
ANR	3443238	RelationalExpression	i >= 0		3442527	0		>=			
ANR	3443239	Identifier	i		3442527	0					
ANR	3443240	PrimaryExpression	0		3442527	1					
ANR	3443241	PostIncDecOperationExpression	i --	1712:36:40980:40982	3442527	2	True				
ANR	3443242	Identifier	i		3442527	0					
ANR	3443243	IncDec	--		3442527	1					
ANR	3443244	CompoundStatement		130:41:2838:2838	3442527	3					
ANR	3443245	ExpressionStatement	"r = add_mem_num ( reg , p [ i ] )"	1713:3:40990:41016	3442527	0	True				
ANR	3443246	AssignmentExpression	"r = add_mem_num ( reg , p [ i ] )"		3442527	0		=			
ANR	3443247	Identifier	r		3442527	0					
ANR	3443248	CallExpression	"add_mem_num ( reg , p [ i ] )"		3442527	1					
ANR	3443249	Callee	add_mem_num		3442527	0					
ANR	3443250	Identifier	add_mem_num		3442527	0					
ANR	3443251	ArgumentList	reg		3442527	1					
ANR	3443252	Argument	reg		3442527	0					
ANR	3443253	Identifier	reg		3442527	0					
ANR	3443254	Argument	p [ i ]		3442527	1					
ANR	3443255	ArrayIndexing	p [ i ]		3442527	0					
ANR	3443256	Identifier	p		3442527	0					
ANR	3443257	Identifier	i		3442527	1					
ANR	3443258	IfStatement	if ( r )		3442527	1					
ANR	3443259	Condition	r	1714:7:41025:41025	3442527	0	True				
ANR	3443260	Identifier	r		3442527	0					
ANR	3443261	ReturnStatement	return r ;	1714:10:41028:41036	3442527	1	True				
ANR	3443262	Identifier	r		3442527	0					
ANR	3443263	BreakStatement	break ;	1718:4:41059:41064	3442527	20	True				
ANR	3443264	Label	case NT_CALL :	1721:2:41092:41104	3442527	21	True				
ANR	3443265	Identifier	NT_CALL		3442527	0					
ANR	3443266	ExpressionStatement	"r = compile_call ( NCALL ( node ) , reg )"	1722:4:41110:41144	3442527	22	True				
ANR	3443267	AssignmentExpression	"r = compile_call ( NCALL ( node ) , reg )"		3442527	0		=			
ANR	3443268	Identifier	r		3442527	0					
ANR	3443269	CallExpression	"compile_call ( NCALL ( node ) , reg )"		3442527	1					
ANR	3443270	Callee	compile_call		3442527	0					
ANR	3443271	Identifier	compile_call		3442527	0					
ANR	3443272	ArgumentList	NCALL ( node )		3442527	1					
ANR	3443273	Argument	NCALL ( node )		3442527	0					
ANR	3443274	CallExpression	NCALL ( node )		3442527	0					
ANR	3443275	Callee	NCALL		3442527	0					
ANR	3443276	Identifier	NCALL		3442527	0					
ANR	3443277	ArgumentList	node		3442527	1					
ANR	3443278	Argument	node		3442527	0					
ANR	3443279	Identifier	node		3442527	0					
ANR	3443280	Argument	reg		3442527	1					
ANR	3443281	Identifier	reg		3442527	0					
ANR	3443282	BreakStatement	break ;	1723:4:41150:41155	3442527	23	True				
ANR	3443283	Label	case NT_QTFR :	1726:2:41167:41179	3442527	24	True				
ANR	3443284	Identifier	NT_QTFR		3442527	0					
ANR	3443285	ExpressionStatement	"r = compile_quantifier_node ( NQTFR ( node ) , reg )"	1727:4:41185:41230	3442527	25	True				
ANR	3443286	AssignmentExpression	"r = compile_quantifier_node ( NQTFR ( node ) , reg )"		3442527	0		=			
ANR	3443287	Identifier	r		3442527	0					
ANR	3443288	CallExpression	"compile_quantifier_node ( NQTFR ( node ) , reg )"		3442527	1					
ANR	3443289	Callee	compile_quantifier_node		3442527	0					
ANR	3443290	Identifier	compile_quantifier_node		3442527	0					
ANR	3443291	ArgumentList	NQTFR ( node )		3442527	1					
ANR	3443292	Argument	NQTFR ( node )		3442527	0					
ANR	3443293	CallExpression	NQTFR ( node )		3442527	0					
ANR	3443294	Callee	NQTFR		3442527	0					
ANR	3443295	Identifier	NQTFR		3442527	0					
ANR	3443296	ArgumentList	node		3442527	1					
ANR	3443297	Argument	node		3442527	0					
ANR	3443298	Identifier	node		3442527	0					
ANR	3443299	Argument	reg		3442527	1					
ANR	3443300	Identifier	reg		3442527	0					
ANR	3443301	BreakStatement	break ;	1728:4:41236:41241	3442527	26	True				
ANR	3443302	Label	case NT_ENCLOSE :	1730:2:41246:41261	3442527	27	True				
ANR	3443303	Identifier	NT_ENCLOSE		3442527	0					
ANR	3443304	ExpressionStatement	"r = compile_enclose_node ( NENCLOSE ( node ) , reg )"	1731:4:41267:41312	3442527	28	True				
ANR	3443305	AssignmentExpression	"r = compile_enclose_node ( NENCLOSE ( node ) , reg )"		3442527	0		=			
ANR	3443306	Identifier	r		3442527	0					
ANR	3443307	CallExpression	"compile_enclose_node ( NENCLOSE ( node ) , reg )"		3442527	1					
ANR	3443308	Callee	compile_enclose_node		3442527	0					
ANR	3443309	Identifier	compile_enclose_node		3442527	0					
ANR	3443310	ArgumentList	NENCLOSE ( node )		3442527	1					
ANR	3443311	Argument	NENCLOSE ( node )		3442527	0					
ANR	3443312	CallExpression	NENCLOSE ( node )		3442527	0					
ANR	3443313	Callee	NENCLOSE		3442527	0					
ANR	3443314	Identifier	NENCLOSE		3442527	0					
ANR	3443315	ArgumentList	node		3442527	1					
ANR	3443316	Argument	node		3442527	0					
ANR	3443317	Identifier	node		3442527	0					
ANR	3443318	Argument	reg		3442527	1					
ANR	3443319	Identifier	reg		3442527	0					
ANR	3443320	BreakStatement	break ;	1732:4:41318:41323	3442527	29	True				
ANR	3443321	Label	case NT_ANCHOR :	1734:2:41328:41342	3442527	30	True				
ANR	3443322	Identifier	NT_ANCHOR		3442527	0					
ANR	3443323	ExpressionStatement	"r = compile_anchor_node ( NANCHOR ( node ) , reg )"	1735:4:41348:41391	3442527	31	True				
ANR	3443324	AssignmentExpression	"r = compile_anchor_node ( NANCHOR ( node ) , reg )"		3442527	0		=			
ANR	3443325	Identifier	r		3442527	0					
ANR	3443326	CallExpression	"compile_anchor_node ( NANCHOR ( node ) , reg )"		3442527	1					
ANR	3443327	Callee	compile_anchor_node		3442527	0					
ANR	3443328	Identifier	compile_anchor_node		3442527	0					
ANR	3443329	ArgumentList	NANCHOR ( node )		3442527	1					
ANR	3443330	Argument	NANCHOR ( node )		3442527	0					
ANR	3443331	CallExpression	NANCHOR ( node )		3442527	0					
ANR	3443332	Callee	NANCHOR		3442527	0					
ANR	3443333	Identifier	NANCHOR		3442527	0					
ANR	3443334	ArgumentList	node		3442527	1					
ANR	3443335	Argument	node		3442527	0					
ANR	3443336	Identifier	node		3442527	0					
ANR	3443337	Argument	reg		3442527	1					
ANR	3443338	Identifier	reg		3442527	0					
ANR	3443339	BreakStatement	break ;	1736:4:41397:41402	3442527	32	True				
ANR	3443340	Label	default :	1738:2:41407:41414	3442527	33	True				
ANR	3443341	Identifier	default		3442527	0					
ANR	3443342	ExpressionStatement	"fprintf ( stderr , ""compile_tree: undefined node type %d\\n"" , NTYPE ( node ) )"	1740:4:41438:41508	3442527	34	True				
ANR	3443343	CallExpression	"fprintf ( stderr , ""compile_tree: undefined node type %d\\n"" , NTYPE ( node ) )"		3442527	0					
ANR	3443344	Callee	fprintf		3442527	0					
ANR	3443345	Identifier	fprintf		3442527	0					
ANR	3443346	ArgumentList	stderr		3442527	1					
ANR	3443347	Argument	stderr		3442527	0					
ANR	3443348	Identifier	stderr		3442527	0					
ANR	3443349	Argument	"""compile_tree: undefined node type %d\\n"""		3442527	1					
ANR	3443350	PrimaryExpression	"""compile_tree: undefined node type %d\\n"""		3442527	0					
ANR	3443351	Argument	NTYPE ( node )		3442527	2					
ANR	3443352	CallExpression	NTYPE ( node )		3442527	0					
ANR	3443353	Callee	NTYPE		3442527	0					
ANR	3443354	Identifier	NTYPE		3442527	0					
ANR	3443355	ArgumentList	node		3442527	1					
ANR	3443356	Argument	node		3442527	0					
ANR	3443357	Identifier	node		3442527	0					
ANR	3443358	BreakStatement	break ;	1742:4:41521:41526	3442527	35	True				
ANR	3443359	ReturnStatement	return r ;	1745:2:41535:41543	3442527	3	True				
ANR	3443360	Identifier	r		3442527	0					
ANR	3443361	ReturnType	static int		3442527	1					
ANR	3443362	Identifier	compile_tree		3442527	2					
ANR	3443363	ParameterList	"Node * node , regex_t * reg"		3442527	3					
ANR	3443364	Parameter	Node * node	1582:13:38120:38129	3442527	0	True				
ANR	3443365	ParameterType	Node *		3442527	0					
ANR	3443366	Identifier	node		3442527	1					
ANR	3443367	Parameter	regex_t * reg	1582:25:38132:38143	3442527	1	True				
ANR	3443368	ParameterType	regex_t *		3442527	0					
ANR	3443369	Identifier	reg		3442527	1					
ANR	3443370	CFGEntryNode	ENTRY		3442527		True				
ANR	3443371	CFGExitNode	EXIT		3442527		True				
ANR	3443372	Symbol	NCAR		3442527						
ANR	3443373	Symbol	br -> back_num		3442527						
ANR	3443374	Symbol	OP_ANYCHAR_ML		3442527						
ANR	3443375	Symbol	ONIG_OPTION_IGNORECASE		3442527						
ANR	3443376	Symbol	* br -> back_static		3442527						
ANR	3443377	Symbol	compile_string_node		3442527						
ANR	3443378	Symbol	type		3442527						
ANR	3443379	Symbol	NQTFR		3442527						
ANR	3443380	Symbol	NCCLASS		3442527						
ANR	3443381	Symbol	* NCTYPE		3442527						
ANR	3443382	Symbol	len		3442527						
ANR	3443383	Symbol	reg		3442527						
ANR	3443384	Symbol	* br		3442527						
ANR	3443385	Symbol	reg -> options		3442527						
ANR	3443386	Symbol	compile_cclass_node		3442527						
ANR	3443387	Symbol	add_opcode		3442527						
ANR	3443388	Symbol	SIZE_OP_JUMP		3442527						
ANR	3443389	Symbol	NCTYPE		3442527						
ANR	3443390	Symbol	OP_JUMP		3442527						
ANR	3443391	Symbol	NULL		3442527						
ANR	3443392	Symbol	NCDR		3442527						
ANR	3443393	Symbol	NSTR		3442527						
ANR	3443394	Symbol	OP_BACKREF1		3442527						
ANR	3443395	Symbol	compile_anchor_node		3442527						
ANR	3443396	Symbol	ONIGERR_TYPE_BUG		3442527						
ANR	3443397	Symbol	stderr		3442527						
ANR	3443398	Symbol	OP_BACKREF2		3442527						
ANR	3443399	Symbol	br -> back_static		3442527						
ANR	3443400	Symbol	OP_BACKREFN_IC		3442527						
ANR	3443401	Symbol	node		3442527						
ANR	3443402	Symbol	compile_string_raw_node		3442527						
ANR	3443403	Symbol	BACKREFS_P		3442527						
ANR	3443404	Symbol	OP_BACKREF_WITH_LEVEL		3442527						
ANR	3443405	Symbol	compile_call		3442527						
ANR	3443406	Symbol	* * br		3442527						
ANR	3443407	Symbol	compile_enclose_node		3442527						
ANR	3443408	Symbol	IS_NOT_NULL		3442527						
ANR	3443409	Symbol	NCTYPE ( node ) -> ctype		3442527						
ANR	3443410	Symbol	add_length		3442527						
ANR	3443411	Symbol	NCALL		3442527						
ANR	3443412	Symbol	OP_PUSH		3442527						
ANR	3443413	Symbol	OP_BACKREF_MULTI_IC		3442527						
ANR	3443414	Symbol	OP_BACKREFN		3442527						
ANR	3443415	Symbol	NSTRING_IS_RAW		3442527						
ANR	3443416	Symbol	add_mem_num		3442527						
ANR	3443417	Symbol	br		3442527						
ANR	3443418	Symbol	pos		3442527						
ANR	3443419	Symbol	NBREF		3442527						
ANR	3443420	Symbol	compile_quantifier_node		3442527						
ANR	3443421	Symbol	NENCLOSE		3442527						
ANR	3443422	Symbol	OP_WORD		3442527						
ANR	3443423	Symbol	OP_BACKREF_MULTI		3442527						
ANR	3443424	Symbol	op		3442527						
ANR	3443425	Symbol	add_opcode_rel_addr		3442527						
ANR	3443426	Symbol	compile_length_tree		3442527						
ANR	3443427	Symbol	SIZE_OP_PUSH		3442527						
ANR	3443428	Symbol	i		3442527						
ANR	3443429	Symbol	add_option		3442527						
ANR	3443430	Symbol	br -> nest_level		3442527						
ANR	3443431	Symbol	n		3442527						
ANR	3443432	Symbol	p		3442527						
ANR	3443433	Symbol	r		3442527						
ANR	3443434	Symbol	compile_tree		3442527						
ANR	3443435	Symbol	* i		3442527						
ANR	3443436	Symbol	OP_ANYCHAR		3442527						
ANR	3443437	Symbol	NCTYPE ( node ) -> not		3442527						
ANR	3443438	Symbol	IS_IGNORECASE		3442527						
ANR	3443439	Symbol	x		3442527						
ANR	3443440	Symbol	NANCHOR		3442527						
ANR	3443441	Symbol	IS_MULTILINE		3442527						
ANR	3443442	Symbol	NTYPE		3442527						
ANR	3443443	Symbol	OP_NOT_WORD		3442527						
ANR	3443444	Symbol	* p		3442527						
ANR	3443445	Symbol	reg -> used		3442527						
ANR	3443446	Symbol	* reg		3442527						
ANR	3443447	Symbol	IS_BACKREF_NEST_LEVEL		3442527						
ANR	3443448	Function	noname_disable_map	1750:0:41572:42711							
ANR	3443449	FunctionDef	"noname_disable_map (Node * * plink , GroupNumRemap * map , int * counter)"		3443448	0					
ANR	3443450	CompoundStatement		1752:0:41650:42711	3443448	0					
ANR	3443451	IdentifierDeclStatement	int r = 0 ;	1753:2:41654:41663	3443448	0	True				
ANR	3443452	IdentifierDecl	r = 0		3443448	0					
ANR	3443453	IdentifierDeclType	int		3443448	0					
ANR	3443454	Identifier	r		3443448	1					
ANR	3443455	AssignmentExpression	r = 0		3443448	2		=			
ANR	3443456	Identifier	r		3443448	0					
ANR	3443457	PrimaryExpression	0		3443448	1					
ANR	3443458	IdentifierDeclStatement	Node * node = * plink ;	1754:2:41667:41686	3443448	1	True				
ANR	3443459	IdentifierDecl	* node = * plink		3443448	0					
ANR	3443460	IdentifierDeclType	Node *		3443448	0					
ANR	3443461	Identifier	node		3443448	1					
ANR	3443462	AssignmentExpression	* node = * plink		3443448	2		=			
ANR	3443463	Identifier	node		3443448	0					
ANR	3443464	UnaryOperationExpression	* plink		3443448	1					
ANR	3443465	UnaryOperator	*		3443448	0					
ANR	3443466	Identifier	plink		3443448	1					
ANR	3443467	SwitchStatement	switch ( NTYPE ( node ) )		3443448	2					
ANR	3443468	Condition	NTYPE ( node )	1756:10:41699:41709	3443448	0	True				
ANR	3443469	CallExpression	NTYPE ( node )		3443448	0					
ANR	3443470	Callee	NTYPE		3443448	0					
ANR	3443471	Identifier	NTYPE		3443448	0					
ANR	3443472	ArgumentList	node		3443448	1					
ANR	3443473	Argument	node		3443448	0					
ANR	3443474	Identifier	node		3443448	0					
ANR	3443475	CompoundStatement		5:23:61:61	3443448	1					
ANR	3443476	Label	case NT_LIST :	1757:2:41716:41728	3443448	0	True				
ANR	3443477	Identifier	NT_LIST		3443448	0					
ANR	3443478	Label	case NT_ALT :	1758:2:41732:41743	3443448	1	True				
ANR	3443479	Identifier	NT_ALT		3443448	0					
ANR	3443480	DoStatement	do		3443448	2					
ANR	3443481	CompoundStatement		8:7:101:101	3443448	0					
ANR	3443482	ExpressionStatement	"r = noname_disable_map ( & ( NCAR ( node ) ) , map , counter )"	1760:6:41760:41811	3443448	0	True				
ANR	3443483	AssignmentExpression	"r = noname_disable_map ( & ( NCAR ( node ) ) , map , counter )"		3443448	0		=			
ANR	3443484	Identifier	r		3443448	0					
ANR	3443485	CallExpression	"noname_disable_map ( & ( NCAR ( node ) ) , map , counter )"		3443448	1					
ANR	3443486	Callee	noname_disable_map		3443448	0					
ANR	3443487	Identifier	noname_disable_map		3443448	0					
ANR	3443488	ArgumentList	& ( NCAR ( node ) )		3443448	1					
ANR	3443489	Argument	& ( NCAR ( node ) )		3443448	0					
ANR	3443490	UnaryOperationExpression	& ( NCAR ( node ) )		3443448	0					
ANR	3443491	UnaryOperator	&		3443448	0					
ANR	3443492	CallExpression	NCAR ( node )		3443448	1					
ANR	3443493	Callee	NCAR		3443448	0					
ANR	3443494	Identifier	NCAR		3443448	0					
ANR	3443495	ArgumentList	node		3443448	1					
ANR	3443496	Argument	node		3443448	0					
ANR	3443497	Identifier	node		3443448	0					
ANR	3443498	Argument	map		3443448	1					
ANR	3443499	Identifier	map		3443448	0					
ANR	3443500	Argument	counter		3443448	2					
ANR	3443501	Identifier	counter		3443448	0					
ANR	3443502	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1761:13:41826:41865	3443448	1	True				
ANR	3443503	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3443448	0		&&			
ANR	3443504	EqualityExpression	r == 0		3443448	0		==			
ANR	3443505	Identifier	r		3443448	0					
ANR	3443506	PrimaryExpression	0		3443448	1					
ANR	3443507	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3443448	1					
ANR	3443508	Callee	IS_NOT_NULL		3443448	0					
ANR	3443509	Identifier	IS_NOT_NULL		3443448	0					
ANR	3443510	ArgumentList	node = NCDR ( node )		3443448	1					
ANR	3443511	Argument	node = NCDR ( node )		3443448	0					
ANR	3443512	AssignmentExpression	node = NCDR ( node )		3443448	0		=			
ANR	3443513	Identifier	node		3443448	0					
ANR	3443514	CallExpression	NCDR ( node )		3443448	1					
ANR	3443515	Callee	NCDR		3443448	0					
ANR	3443516	Identifier	NCDR		3443448	0					
ANR	3443517	ArgumentList	node		3443448	1					
ANR	3443518	Argument	node		3443448	0					
ANR	3443519	Identifier	node		3443448	0					
ANR	3443520	BreakStatement	break ;	1762:4:41873:41878	3443448	3	True				
ANR	3443521	Label	case NT_QTFR :	1764:2:41883:41895	3443448	4	True				
ANR	3443522	Identifier	NT_QTFR		3443448	0					
ANR	3443523	CompoundStatement		16:6:305:326	3443448	5					
ANR	3443524	IdentifierDeclStatement	Node * * ptarget = & ( NQTFR ( node ) -> target ) ;	1766:6:41909:41948	3443448	0	True				
ANR	3443525	IdentifierDecl	* * ptarget = & ( NQTFR ( node ) -> target )		3443448	0					
ANR	3443526	IdentifierDeclType	Node * *		3443448	0					
ANR	3443527	Identifier	ptarget		3443448	1					
ANR	3443528	AssignmentExpression	* * ptarget = & ( NQTFR ( node ) -> target )		3443448	2		=			
ANR	3443529	Identifier	ptarget		3443448	0					
ANR	3443530	UnaryOperationExpression	& ( NQTFR ( node ) -> target )		3443448	1					
ANR	3443531	UnaryOperator	&		3443448	0					
ANR	3443532	PtrMemberAccess	NQTFR ( node ) -> target		3443448	1					
ANR	3443533	CallExpression	NQTFR ( node )		3443448	0					
ANR	3443534	Callee	NQTFR		3443448	0					
ANR	3443535	Identifier	NQTFR		3443448	0					
ANR	3443536	ArgumentList	node		3443448	1					
ANR	3443537	Argument	node		3443448	0					
ANR	3443538	Identifier	node		3443448	0					
ANR	3443539	Identifier	target		3443448	1					
ANR	3443540	IdentifierDeclStatement	Node * old = * ptarget ;	1767:6:41956:41977	3443448	1	True				
ANR	3443541	IdentifierDecl	* old = * ptarget		3443448	0					
ANR	3443542	IdentifierDeclType	Node *		3443448	0					
ANR	3443543	Identifier	old		3443448	1					
ANR	3443544	AssignmentExpression	* old = * ptarget		3443448	2		=			
ANR	3443545	Identifier	old		3443448	0					
ANR	3443546	UnaryOperationExpression	* ptarget		3443448	1					
ANR	3443547	UnaryOperator	*		3443448	0					
ANR	3443548	Identifier	ptarget		3443448	1					
ANR	3443549	ExpressionStatement	"r = noname_disable_map ( ptarget , map , counter )"	1768:6:41985:42030	3443448	2	True				
ANR	3443550	AssignmentExpression	"r = noname_disable_map ( ptarget , map , counter )"		3443448	0		=			
ANR	3443551	Identifier	r		3443448	0					
ANR	3443552	CallExpression	"noname_disable_map ( ptarget , map , counter )"		3443448	1					
ANR	3443553	Callee	noname_disable_map		3443448	0					
ANR	3443554	Identifier	noname_disable_map		3443448	0					
ANR	3443555	ArgumentList	ptarget		3443448	1					
ANR	3443556	Argument	ptarget		3443448	0					
ANR	3443557	Identifier	ptarget		3443448	0					
ANR	3443558	Argument	map		3443448	1					
ANR	3443559	Identifier	map		3443448	0					
ANR	3443560	Argument	counter		3443448	2					
ANR	3443561	Identifier	counter		3443448	0					
ANR	3443562	IfStatement	if ( * ptarget != old && NTYPE ( * ptarget ) == NT_QTFR )		3443448	3					
ANR	3443563	Condition	* ptarget != old && NTYPE ( * ptarget ) == NT_QTFR	1769:10:42042:42086	3443448	0	True				
ANR	3443564	AndExpression	* ptarget != old && NTYPE ( * ptarget ) == NT_QTFR		3443448	0		&&			
ANR	3443565	EqualityExpression	* ptarget != old		3443448	0		!=			
ANR	3443566	UnaryOperationExpression	* ptarget		3443448	0					
ANR	3443567	UnaryOperator	*		3443448	0					
ANR	3443568	Identifier	ptarget		3443448	1					
ANR	3443569	Identifier	old		3443448	1					
ANR	3443570	EqualityExpression	NTYPE ( * ptarget ) == NT_QTFR		3443448	1		==			
ANR	3443571	CallExpression	NTYPE ( * ptarget )		3443448	0					
ANR	3443572	Callee	NTYPE		3443448	0					
ANR	3443573	Identifier	NTYPE		3443448	0					
ANR	3443574	ArgumentList	* ptarget		3443448	1					
ANR	3443575	Argument	* ptarget		3443448	0					
ANR	3443576	UnaryOperationExpression	* ptarget		3443448	0					
ANR	3443577	UnaryOperator	*		3443448	0					
ANR	3443578	Identifier	ptarget		3443448	1					
ANR	3443579	Identifier	NT_QTFR		3443448	1					
ANR	3443580	CompoundStatement		18:57:438:438	3443448	1					
ANR	3443581	ExpressionStatement	"onig_reduce_nested_quantifier ( node , * ptarget )"	1770:1:42092:42137	3443448	0	True				
ANR	3443582	CallExpression	"onig_reduce_nested_quantifier ( node , * ptarget )"		3443448	0					
ANR	3443583	Callee	onig_reduce_nested_quantifier		3443448	0					
ANR	3443584	Identifier	onig_reduce_nested_quantifier		3443448	0					
ANR	3443585	ArgumentList	node		3443448	1					
ANR	3443586	Argument	node		3443448	0					
ANR	3443587	Identifier	node		3443448	0					
ANR	3443588	Argument	* ptarget		3443448	1					
ANR	3443589	UnaryOperationExpression	* ptarget		3443448	0					
ANR	3443590	UnaryOperator	*		3443448	0					
ANR	3443591	Identifier	ptarget		3443448	1					
ANR	3443592	BreakStatement	break ;	1773:4:42157:42162	3443448	6	True				
ANR	3443593	Label	case NT_ENCLOSE :	1775:2:42167:42182	3443448	7	True				
ANR	3443594	Identifier	NT_ENCLOSE		3443448	0					
ANR	3443595	CompoundStatement		26:6:545:577	3443448	8					
ANR	3443596	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	1777:6:42196:42228	3443448	0	True				
ANR	3443597	IdentifierDecl	* en = NENCLOSE ( node )		3443448	0					
ANR	3443598	IdentifierDeclType	EncloseNode *		3443448	0					
ANR	3443599	Identifier	en		3443448	1					
ANR	3443600	AssignmentExpression	* en = NENCLOSE ( node )		3443448	2		=			
ANR	3443601	Identifier	en		3443448	0					
ANR	3443602	CallExpression	NENCLOSE ( node )		3443448	1					
ANR	3443603	Callee	NENCLOSE		3443448	0					
ANR	3443604	Identifier	NENCLOSE		3443448	0					
ANR	3443605	ArgumentList	node		3443448	1					
ANR	3443606	Argument	node		3443448	0					
ANR	3443607	Identifier	node		3443448	0					
ANR	3443608	IfStatement	if ( en -> type == ENCLOSE_MEMORY )		3443448	1					
ANR	3443609	Condition	en -> type == ENCLOSE_MEMORY	1778:10:42240:42265	3443448	0	True				
ANR	3443610	EqualityExpression	en -> type == ENCLOSE_MEMORY		3443448	0		==			
ANR	3443611	PtrMemberAccess	en -> type		3443448	0					
ANR	3443612	Identifier	en		3443448	0					
ANR	3443613	Identifier	type		3443448	1					
ANR	3443614	Identifier	ENCLOSE_MEMORY		3443448	1					
ANR	3443615	CompoundStatement		27:38:617:617	3443448	1					
ANR	3443616	IfStatement	if ( IS_ENCLOSE_NAMED_GROUP ( en ) )		3443448	0					
ANR	3443617	Condition	IS_ENCLOSE_NAMED_GROUP ( en )	1779:5:42275:42300	3443448	0	True				
ANR	3443618	CallExpression	IS_ENCLOSE_NAMED_GROUP ( en )		3443448	0					
ANR	3443619	Callee	IS_ENCLOSE_NAMED_GROUP		3443448	0					
ANR	3443620	Identifier	IS_ENCLOSE_NAMED_GROUP		3443448	0					
ANR	3443621	ArgumentList	en		3443448	1					
ANR	3443622	Argument	en		3443448	0					
ANR	3443623	Identifier	en		3443448	0					
ANR	3443624	CompoundStatement		28:33:652:652	3443448	1					
ANR	3443625	ExpressionStatement	( * counter ) ++	1780:3:42308:42320	3443448	0	True				
ANR	3443626	PostIncDecOperationExpression	( * counter ) ++		3443448	0					
ANR	3443627	UnaryOperationExpression	* counter		3443448	0					
ANR	3443628	UnaryOperator	*		3443448	0					
ANR	3443629	Identifier	counter		3443448	1					
ANR	3443630	IncDec	++		3443448	1					
ANR	3443631	ExpressionStatement	map [ en -> regnum ] . new_val = * counter	1781:3:42325:42359	3443448	1	True				
ANR	3443632	AssignmentExpression	map [ en -> regnum ] . new_val = * counter		3443448	0		=			
ANR	3443633	MemberAccess	map [ en -> regnum ] . new_val		3443448	0					
ANR	3443634	ArrayIndexing	map [ en -> regnum ]		3443448	0					
ANR	3443635	Identifier	map		3443448	0					
ANR	3443636	PtrMemberAccess	en -> regnum		3443448	1					
ANR	3443637	Identifier	en		3443448	0					
ANR	3443638	Identifier	regnum		3443448	1					
ANR	3443639	Identifier	new_val		3443448	1					
ANR	3443640	UnaryOperationExpression	* counter		3443448	1					
ANR	3443641	UnaryOperator	*		3443448	0					
ANR	3443642	Identifier	counter		3443448	1					
ANR	3443643	ExpressionStatement	en -> regnum = * counter	1782:3:42364:42385	3443448	2	True				
ANR	3443644	AssignmentExpression	en -> regnum = * counter		3443448	0		=			
ANR	3443645	PtrMemberAccess	en -> regnum		3443448	0					
ANR	3443646	Identifier	en		3443448	0					
ANR	3443647	Identifier	regnum		3443448	1					
ANR	3443648	UnaryOperationExpression	* counter		3443448	1					
ANR	3443649	UnaryOperator	*		3443448	0					
ANR	3443650	Identifier	counter		3443448	1					
ANR	3443651	ExpressionStatement	"r = noname_disable_map ( & ( en -> target ) , map , counter )"	1783:3:42390:42441	3443448	3	True				
ANR	3443652	AssignmentExpression	"r = noname_disable_map ( & ( en -> target ) , map , counter )"		3443448	0		=			
ANR	3443653	Identifier	r		3443448	0					
ANR	3443654	CallExpression	"noname_disable_map ( & ( en -> target ) , map , counter )"		3443448	1					
ANR	3443655	Callee	noname_disable_map		3443448	0					
ANR	3443656	Identifier	noname_disable_map		3443448	0					
ANR	3443657	ArgumentList	& ( en -> target )		3443448	1					
ANR	3443658	Argument	& ( en -> target )		3443448	0					
ANR	3443659	UnaryOperationExpression	& ( en -> target )		3443448	0					
ANR	3443660	UnaryOperator	&		3443448	0					
ANR	3443661	PtrMemberAccess	en -> target		3443448	1					
ANR	3443662	Identifier	en		3443448	0					
ANR	3443663	Identifier	target		3443448	1					
ANR	3443664	Argument	map		3443448	1					
ANR	3443665	Identifier	map		3443448	0					
ANR	3443666	Argument	counter		3443448	2					
ANR	3443667	Identifier	counter		3443448	0					
ANR	3443668	ElseStatement	else		3443448	0					
ANR	3443669	CompoundStatement		34:6:801:801	3443448	0					
ANR	3443670	ExpressionStatement	* plink = en -> target	1786:3:42457:42476	3443448	0	True				
ANR	3443671	AssignmentExpression	* plink = en -> target		3443448	0		=			
ANR	3443672	UnaryOperationExpression	* plink		3443448	0					
ANR	3443673	UnaryOperator	*		3443448	0					
ANR	3443674	Identifier	plink		3443448	1					
ANR	3443675	PtrMemberAccess	en -> target		3443448	1					
ANR	3443676	Identifier	en		3443448	0					
ANR	3443677	Identifier	target		3443448	1					
ANR	3443678	ExpressionStatement	en -> target = NULL_NODE	1787:3:42481:42503	3443448	1	True				
ANR	3443679	AssignmentExpression	en -> target = NULL_NODE		3443448	0		=			
ANR	3443680	PtrMemberAccess	en -> target		3443448	0					
ANR	3443681	Identifier	en		3443448	0					
ANR	3443682	Identifier	target		3443448	1					
ANR	3443683	Identifier	NULL_NODE		3443448	1					
ANR	3443684	ExpressionStatement	onig_node_free ( node )	1788:3:42508:42528	3443448	2	True				
ANR	3443685	CallExpression	onig_node_free ( node )		3443448	0					
ANR	3443686	Callee	onig_node_free		3443448	0					
ANR	3443687	Identifier	onig_node_free		3443448	0					
ANR	3443688	ArgumentList	node		3443448	1					
ANR	3443689	Argument	node		3443448	0					
ANR	3443690	Identifier	node		3443448	0					
ANR	3443691	ExpressionStatement	"r = noname_disable_map ( plink , map , counter )"	1789:3:42533:42576	3443448	3	True				
ANR	3443692	AssignmentExpression	"r = noname_disable_map ( plink , map , counter )"		3443448	0		=			
ANR	3443693	Identifier	r		3443448	0					
ANR	3443694	CallExpression	"noname_disable_map ( plink , map , counter )"		3443448	1					
ANR	3443695	Callee	noname_disable_map		3443448	0					
ANR	3443696	Identifier	noname_disable_map		3443448	0					
ANR	3443697	ArgumentList	plink		3443448	1					
ANR	3443698	Argument	plink		3443448	0					
ANR	3443699	Identifier	plink		3443448	0					
ANR	3443700	Argument	map		3443448	1					
ANR	3443701	Identifier	map		3443448	0					
ANR	3443702	Argument	counter		3443448	2					
ANR	3443703	Identifier	counter		3443448	0					
ANR	3443704	ElseStatement	else		3443448	0					
ANR	3443705	ExpressionStatement	"r = noname_disable_map ( & ( en -> target ) , map , counter )"	1793:1:42601:42652	3443448	0	True				
ANR	3443706	AssignmentExpression	"r = noname_disable_map ( & ( en -> target ) , map , counter )"		3443448	0		=			
ANR	3443707	Identifier	r		3443448	0					
ANR	3443708	CallExpression	"noname_disable_map ( & ( en -> target ) , map , counter )"		3443448	1					
ANR	3443709	Callee	noname_disable_map		3443448	0					
ANR	3443710	Identifier	noname_disable_map		3443448	0					
ANR	3443711	ArgumentList	& ( en -> target )		3443448	1					
ANR	3443712	Argument	& ( en -> target )		3443448	0					
ANR	3443713	UnaryOperationExpression	& ( en -> target )		3443448	0					
ANR	3443714	UnaryOperator	&		3443448	0					
ANR	3443715	PtrMemberAccess	en -> target		3443448	1					
ANR	3443716	Identifier	en		3443448	0					
ANR	3443717	Identifier	target		3443448	1					
ANR	3443718	Argument	map		3443448	1					
ANR	3443719	Identifier	map		3443448	0					
ANR	3443720	Argument	counter		3443448	2					
ANR	3443721	Identifier	counter		3443448	0					
ANR	3443722	BreakStatement	break ;	1795:4:42664:42669	3443448	9	True				
ANR	3443723	Label	default :	1797:2:42674:42681	3443448	10	True				
ANR	3443724	Identifier	default		3443448	0					
ANR	3443725	BreakStatement	break ;	1798:4:42687:42692	3443448	11	True				
ANR	3443726	ReturnStatement	return r ;	1801:2:42701:42709	3443448	3	True				
ANR	3443727	Identifier	r		3443448	0					
ANR	3443728	ReturnType	static int		3443448	1					
ANR	3443729	Identifier	noname_disable_map		3443448	2					
ANR	3443730	ParameterList	"Node * * plink , GroupNumRemap * map , int * counter"		3443448	3					
ANR	3443731	Parameter	Node * * plink	1751:19:41602:41613	3443448	0	True				
ANR	3443732	ParameterType	Node * *		3443448	0					
ANR	3443733	Identifier	plink		3443448	1					
ANR	3443734	Parameter	GroupNumRemap * map	1751:33:41616:41633	3443448	1	True				
ANR	3443735	ParameterType	GroupNumRemap *		3443448	0					
ANR	3443736	Identifier	map		3443448	1					
ANR	3443737	Parameter	int * counter	1751:53:41636:41647	3443448	2	True				
ANR	3443738	ParameterType	int *		3443448	0					
ANR	3443739	Identifier	counter		3443448	1					
ANR	3443740	CFGEntryNode	ENTRY		3443448		True				
ANR	3443741	CFGExitNode	EXIT		3443448		True				
ANR	3443742	Symbol	IS_NOT_NULL		3443448						
ANR	3443743	Symbol	* map		3443448						
ANR	3443744	Symbol	IS_ENCLOSE_NAMED_GROUP		3443448						
ANR	3443745	Symbol	* plink		3443448						
ANR	3443746	Symbol	NQTFR		3443448						
ANR	3443747	Symbol	* en		3443448						
ANR	3443748	Symbol	& en -> target		3443448						
ANR	3443749	Symbol	& NQTFR ( node ) -> target		3443448						
ANR	3443750	Symbol	* ptarget		3443448						
ANR	3443751	Symbol	map [ en -> regnum ] . new_val		3443448						
ANR	3443752	Symbol	NT_QTFR		3443448						
ANR	3443753	Symbol	NENCLOSE		3443448						
ANR	3443754	Symbol	ENCLOSE_MEMORY		3443448						
ANR	3443755	Symbol	en -> type		3443448						
ANR	3443756	Symbol	* * en		3443448						
ANR	3443757	Symbol	map		3443448						
ANR	3443758	Symbol	& NCAR		3443448						
ANR	3443759	Symbol	en -> regnum		3443448						
ANR	3443760	Symbol	old		3443448						
ANR	3443761	Symbol	NCDR		3443448						
ANR	3443762	Symbol	en		3443448						
ANR	3443763	Symbol	counter		3443448						
ANR	3443764	Symbol	* en -> regnum		3443448						
ANR	3443765	Symbol	node		3443448						
ANR	3443766	Symbol	noname_disable_map		3443448						
ANR	3443767	Symbol	* counter		3443448						
ANR	3443768	Symbol	r		3443448						
ANR	3443769	Symbol	plink		3443448						
ANR	3443770	Symbol	en -> target		3443448						
ANR	3443771	Symbol	ptarget		3443448						
ANR	3443772	Symbol	NTYPE		3443448						
ANR	3443773	Symbol	NULL_NODE		3443448						
ANR	3443774	Function	renumber_node_backref	1804:0:42714:43240							
ANR	3443775	FunctionDef	"renumber_node_backref (Node * node , GroupNumRemap * map)"		3443774	0					
ANR	3443776	CompoundStatement		1806:0:42779:43240	3443774	0					
ANR	3443777	IdentifierDeclStatement	"int i , pos , n , old_num ;"	1807:2:42783:42805	3443774	0	True				
ANR	3443778	IdentifierDecl	i		3443774	0					
ANR	3443779	IdentifierDeclType	int		3443774	0					
ANR	3443780	Identifier	i		3443774	1					
ANR	3443781	IdentifierDecl	pos		3443774	1					
ANR	3443782	IdentifierDeclType	int		3443774	0					
ANR	3443783	Identifier	pos		3443774	1					
ANR	3443784	IdentifierDecl	n		3443774	2					
ANR	3443785	IdentifierDeclType	int		3443774	0					
ANR	3443786	Identifier	n		3443774	1					
ANR	3443787	IdentifierDecl	old_num		3443774	3					
ANR	3443788	IdentifierDeclType	int		3443774	0					
ANR	3443789	Identifier	old_num		3443774	1					
ANR	3443790	IdentifierDeclStatement	int * backs ;	1808:2:42809:42819	3443774	1	True				
ANR	3443791	IdentifierDecl	* backs		3443774	0					
ANR	3443792	IdentifierDeclType	int *		3443774	0					
ANR	3443793	Identifier	backs		3443774	1					
ANR	3443794	IdentifierDeclStatement	BRefNode * bn = NBREF ( node ) ;	1809:2:42823:42849	3443774	2	True				
ANR	3443795	IdentifierDecl	* bn = NBREF ( node )		3443774	0					
ANR	3443796	IdentifierDeclType	BRefNode *		3443774	0					
ANR	3443797	Identifier	bn		3443774	1					
ANR	3443798	AssignmentExpression	* bn = NBREF ( node )		3443774	2		=			
ANR	3443799	Identifier	bn		3443774	0					
ANR	3443800	CallExpression	NBREF ( node )		3443774	1					
ANR	3443801	Callee	NBREF		3443774	0					
ANR	3443802	Identifier	NBREF		3443774	0					
ANR	3443803	ArgumentList	node		3443774	1					
ANR	3443804	Argument	node		3443774	0					
ANR	3443805	Identifier	node		3443774	0					
ANR	3443806	IfStatement	if ( ! IS_BACKREF_NAME_REF ( bn ) )		3443774	3					
ANR	3443807	Condition	! IS_BACKREF_NAME_REF ( bn )	1811:6:42858:42882	3443774	0	True				
ANR	3443808	UnaryOperationExpression	! IS_BACKREF_NAME_REF ( bn )		3443774	0					
ANR	3443809	UnaryOperator	!		3443774	0					
ANR	3443810	CallExpression	IS_BACKREF_NAME_REF ( bn )		3443774	1					
ANR	3443811	Callee	IS_BACKREF_NAME_REF		3443774	0					
ANR	3443812	Identifier	IS_BACKREF_NAME_REF		3443774	0					
ANR	3443813	ArgumentList	bn		3443774	1					
ANR	3443814	Argument	bn		3443774	0					
ANR	3443815	Identifier	bn		3443774	0					
ANR	3443816	ReturnStatement	return ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED ;	1812:4:42889:42940	3443774	1	True				
ANR	3443817	Identifier	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		3443774	0					
ANR	3443818	ExpressionStatement	old_num = bn -> back_num	1814:2:42945:42967	3443774	4	True				
ANR	3443819	AssignmentExpression	old_num = bn -> back_num		3443774	0		=			
ANR	3443820	Identifier	old_num		3443774	0					
ANR	3443821	PtrMemberAccess	bn -> back_num		3443774	1					
ANR	3443822	Identifier	bn		3443774	0					
ANR	3443823	Identifier	back_num		3443774	1					
ANR	3443824	IfStatement	if ( IS_NULL ( bn -> back_dynamic ) )		3443774	5					
ANR	3443825	Condition	IS_NULL ( bn -> back_dynamic )	1815:6:42975:42999	3443774	0	True				
ANR	3443826	CallExpression	IS_NULL ( bn -> back_dynamic )		3443774	0					
ANR	3443827	Callee	IS_NULL		3443774	0					
ANR	3443828	Identifier	IS_NULL		3443774	0					
ANR	3443829	ArgumentList	bn -> back_dynamic		3443774	1					
ANR	3443830	Argument	bn -> back_dynamic		3443774	0					
ANR	3443831	PtrMemberAccess	bn -> back_dynamic		3443774	0					
ANR	3443832	Identifier	bn		3443774	0					
ANR	3443833	Identifier	back_dynamic		3443774	1					
ANR	3443834	ExpressionStatement	backs = bn -> back_static	1816:4:43006:43029	3443774	1	True				
ANR	3443835	AssignmentExpression	backs = bn -> back_static		3443774	0		=			
ANR	3443836	Identifier	backs		3443774	0					
ANR	3443837	PtrMemberAccess	bn -> back_static		3443774	1					
ANR	3443838	Identifier	bn		3443774	0					
ANR	3443839	Identifier	back_static		3443774	1					
ANR	3443840	ElseStatement	else		3443774	0					
ANR	3443841	ExpressionStatement	backs = bn -> back_dynamic	1818:4:43042:43066	3443774	0	True				
ANR	3443842	AssignmentExpression	backs = bn -> back_dynamic		3443774	0		=			
ANR	3443843	Identifier	backs		3443774	0					
ANR	3443844	PtrMemberAccess	bn -> back_dynamic		3443774	1					
ANR	3443845	Identifier	bn		3443774	0					
ANR	3443846	Identifier	back_dynamic		3443774	1					
ANR	3443847	ForStatement	"for ( i = 0 , pos = 0 ; i < old_num ; i ++ )"		3443774	6					
ANR	3443848	ForInit	"i = 0 , pos = 0 ;"	1820:7:43076:43090	3443774	0	True				
ANR	3443849	Expression	"i = 0 , pos = 0"		3443774	0					
ANR	3443850	AssignmentExpression	i = 0		3443774	0		=			
ANR	3443851	Identifier	i		3443774	0					
ANR	3443852	PrimaryExpression	0		3443774	1					
ANR	3443853	AssignmentExpression	pos = 0		3443774	1		=			
ANR	3443854	Identifier	pos		3443774	0					
ANR	3443855	PrimaryExpression	0		3443774	1					
ANR	3443856	Condition	i < old_num	1820:23:43092:43102	3443774	1	True				
ANR	3443857	RelationalExpression	i < old_num		3443774	0		<			
ANR	3443858	Identifier	i		3443774	0					
ANR	3443859	Identifier	old_num		3443774	1					
ANR	3443860	PostIncDecOperationExpression	i ++	1820:36:43105:43107	3443774	2	True				
ANR	3443861	Identifier	i		3443774	0					
ANR	3443862	IncDec	++		3443774	1					
ANR	3443863	CompoundStatement		15:41:330:330	3443774	3					
ANR	3443864	ExpressionStatement	n = map [ backs [ i ] ] . new_val	1821:4:43116:43141	3443774	0	True				
ANR	3443865	AssignmentExpression	n = map [ backs [ i ] ] . new_val		3443774	0		=			
ANR	3443866	Identifier	n		3443774	0					
ANR	3443867	MemberAccess	map [ backs [ i ] ] . new_val		3443774	1					
ANR	3443868	ArrayIndexing	map [ backs [ i ] ]		3443774	0					
ANR	3443869	Identifier	map		3443774	0					
ANR	3443870	ArrayIndexing	backs [ i ]		3443774	1					
ANR	3443871	Identifier	backs		3443774	0					
ANR	3443872	Identifier	i		3443774	1					
ANR	3443873	Identifier	new_val		3443774	1					
ANR	3443874	IfStatement	if ( n > 0 )		3443774	1					
ANR	3443875	Condition	n > 0	1822:8:43151:43155	3443774	0	True				
ANR	3443876	RelationalExpression	n > 0		3443774	0		>			
ANR	3443877	Identifier	n		3443774	0					
ANR	3443878	PrimaryExpression	0		3443774	1					
ANR	3443879	CompoundStatement		17:15:378:378	3443774	1					
ANR	3443880	ExpressionStatement	backs [ pos ] = n	1823:6:43166:43180	3443774	0	True				
ANR	3443881	AssignmentExpression	backs [ pos ] = n		3443774	0		=			
ANR	3443882	ArrayIndexing	backs [ pos ]		3443774	0					
ANR	3443883	Identifier	backs		3443774	0					
ANR	3443884	Identifier	pos		3443774	1					
ANR	3443885	Identifier	n		3443774	1					
ANR	3443886	ExpressionStatement	pos ++	1824:6:43188:43193	3443774	1	True				
ANR	3443887	PostIncDecOperationExpression	pos ++		3443774	0					
ANR	3443888	Identifier	pos		3443774	0					
ANR	3443889	IncDec	++		3443774	1					
ANR	3443890	ExpressionStatement	bn -> back_num = pos	1828:2:43208:43226	3443774	7	True				
ANR	3443891	AssignmentExpression	bn -> back_num = pos		3443774	0		=			
ANR	3443892	PtrMemberAccess	bn -> back_num		3443774	0					
ANR	3443893	Identifier	bn		3443774	0					
ANR	3443894	Identifier	back_num		3443774	1					
ANR	3443895	Identifier	pos		3443774	1					
ANR	3443896	ReturnStatement	return 0 ;	1829:2:43230:43238	3443774	8	True				
ANR	3443897	PrimaryExpression	0		3443774	0					
ANR	3443898	ReturnType	static int		3443774	1					
ANR	3443899	Identifier	renumber_node_backref		3443774	2					
ANR	3443900	ParameterList	"Node * node , GroupNumRemap * map"		3443774	3					
ANR	3443901	Parameter	Node * node	1805:22:42747:42756	3443774	0	True				
ANR	3443902	ParameterType	Node *		3443774	0					
ANR	3443903	Identifier	node		3443774	1					
ANR	3443904	Parameter	GroupNumRemap * map	1805:34:42759:42776	3443774	1	True				
ANR	3443905	ParameterType	GroupNumRemap *		3443774	0					
ANR	3443906	Identifier	map		3443774	1					
ANR	3443907	CFGEntryNode	ENTRY		3443774		True				
ANR	3443908	CFGExitNode	EXIT		3443774		True				
ANR	3443909	Symbol	* * i		3443774						
ANR	3443910	Symbol	old_num		3443774						
ANR	3443911	Symbol	* backs		3443774						
ANR	3443912	Symbol	* map		3443774						
ANR	3443913	Symbol	i		3443774						
ANR	3443914	Symbol	bn -> back_num		3443774						
ANR	3443915	Symbol	bn -> back_static		3443774						
ANR	3443916	Symbol	bn		3443774						
ANR	3443917	Symbol	n		3443774						
ANR	3443918	Symbol	node		3443774						
ANR	3443919	Symbol	* bn		3443774						
ANR	3443920	Symbol	* i		3443774						
ANR	3443921	Symbol	* * backs		3443774						
ANR	3443922	Symbol	IS_NULL		3443774						
ANR	3443923	Symbol	pos		3443774						
ANR	3443924	Symbol	NBREF		3443774						
ANR	3443925	Symbol	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		3443774						
ANR	3443926	Symbol	IS_BACKREF_NAME_REF		3443774						
ANR	3443927	Symbol	bn -> back_dynamic		3443774						
ANR	3443928	Symbol	map [ backs [ i ] ] . new_val		3443774						
ANR	3443929	Symbol	map		3443774						
ANR	3443930	Symbol	backs		3443774						
ANR	3443931	Symbol	* pos		3443774						
ANR	3443932	Function	renumber_by_map	1832:0:43243:43766							
ANR	3443933	FunctionDef	"renumber_by_map (Node * node , GroupNumRemap * map)"		3443932	0					
ANR	3443934	CompoundStatement		1834:0:43302:43766	3443932	0					
ANR	3443935	IdentifierDeclStatement	int r = 0 ;	1835:2:43306:43315	3443932	0	True				
ANR	3443936	IdentifierDecl	r = 0		3443932	0					
ANR	3443937	IdentifierDeclType	int		3443932	0					
ANR	3443938	Identifier	r		3443932	1					
ANR	3443939	AssignmentExpression	r = 0		3443932	2		=			
ANR	3443940	Identifier	r		3443932	0					
ANR	3443941	PrimaryExpression	0		3443932	1					
ANR	3443942	SwitchStatement	switch ( NTYPE ( node ) )		3443932	1					
ANR	3443943	Condition	NTYPE ( node )	1837:10:43328:43338	3443932	0	True				
ANR	3443944	CallExpression	NTYPE ( node )		3443932	0					
ANR	3443945	Callee	NTYPE		3443932	0					
ANR	3443946	Identifier	NTYPE		3443932	0					
ANR	3443947	ArgumentList	node		3443932	1					
ANR	3443948	Argument	node		3443932	0					
ANR	3443949	Identifier	node		3443932	0					
ANR	3443950	CompoundStatement		4:23:38:38	3443932	1					
ANR	3443951	Label	case NT_LIST :	1838:2:43345:43357	3443932	0	True				
ANR	3443952	Identifier	NT_LIST		3443932	0					
ANR	3443953	Label	case NT_ALT :	1839:2:43361:43372	3443932	1	True				
ANR	3443954	Identifier	NT_ALT		3443932	0					
ANR	3443955	DoStatement	do		3443932	2					
ANR	3443956	CompoundStatement		7:7:78:78	3443932	0					
ANR	3443957	ExpressionStatement	"r = renumber_by_map ( NCAR ( node ) , map )"	1841:6:43389:43425	3443932	0	True				
ANR	3443958	AssignmentExpression	"r = renumber_by_map ( NCAR ( node ) , map )"		3443932	0		=			
ANR	3443959	Identifier	r		3443932	0					
ANR	3443960	CallExpression	"renumber_by_map ( NCAR ( node ) , map )"		3443932	1					
ANR	3443961	Callee	renumber_by_map		3443932	0					
ANR	3443962	Identifier	renumber_by_map		3443932	0					
ANR	3443963	ArgumentList	NCAR ( node )		3443932	1					
ANR	3443964	Argument	NCAR ( node )		3443932	0					
ANR	3443965	CallExpression	NCAR ( node )		3443932	0					
ANR	3443966	Callee	NCAR		3443932	0					
ANR	3443967	Identifier	NCAR		3443932	0					
ANR	3443968	ArgumentList	node		3443932	1					
ANR	3443969	Argument	node		3443932	0					
ANR	3443970	Identifier	node		3443932	0					
ANR	3443971	Argument	map		3443932	1					
ANR	3443972	Identifier	map		3443932	0					
ANR	3443973	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1842:13:43440:43479	3443932	1	True				
ANR	3443974	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3443932	0		&&			
ANR	3443975	EqualityExpression	r == 0		3443932	0		==			
ANR	3443976	Identifier	r		3443932	0					
ANR	3443977	PrimaryExpression	0		3443932	1					
ANR	3443978	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3443932	1					
ANR	3443979	Callee	IS_NOT_NULL		3443932	0					
ANR	3443980	Identifier	IS_NOT_NULL		3443932	0					
ANR	3443981	ArgumentList	node = NCDR ( node )		3443932	1					
ANR	3443982	Argument	node = NCDR ( node )		3443932	0					
ANR	3443983	AssignmentExpression	node = NCDR ( node )		3443932	0		=			
ANR	3443984	Identifier	node		3443932	0					
ANR	3443985	CallExpression	NCDR ( node )		3443932	1					
ANR	3443986	Callee	NCDR		3443932	0					
ANR	3443987	Identifier	NCDR		3443932	0					
ANR	3443988	ArgumentList	node		3443932	1					
ANR	3443989	Argument	node		3443932	0					
ANR	3443990	Identifier	node		3443932	0					
ANR	3443991	BreakStatement	break ;	1843:4:43487:43492	3443932	3	True				
ANR	3443992	Label	case NT_QTFR :	1844:2:43496:43508	3443932	4	True				
ANR	3443993	Identifier	NT_QTFR		3443932	0					
ANR	3443994	ExpressionStatement	"r = renumber_by_map ( NQTFR ( node ) -> target , map )"	1845:4:43514:43559	3443932	5	True				
ANR	3443995	AssignmentExpression	"r = renumber_by_map ( NQTFR ( node ) -> target , map )"		3443932	0		=			
ANR	3443996	Identifier	r		3443932	0					
ANR	3443997	CallExpression	"renumber_by_map ( NQTFR ( node ) -> target , map )"		3443932	1					
ANR	3443998	Callee	renumber_by_map		3443932	0					
ANR	3443999	Identifier	renumber_by_map		3443932	0					
ANR	3444000	ArgumentList	NQTFR ( node ) -> target		3443932	1					
ANR	3444001	Argument	NQTFR ( node ) -> target		3443932	0					
ANR	3444002	PtrMemberAccess	NQTFR ( node ) -> target		3443932	0					
ANR	3444003	CallExpression	NQTFR ( node )		3443932	0					
ANR	3444004	Callee	NQTFR		3443932	0					
ANR	3444005	Identifier	NQTFR		3443932	0					
ANR	3444006	ArgumentList	node		3443932	1					
ANR	3444007	Argument	node		3443932	0					
ANR	3444008	Identifier	node		3443932	0					
ANR	3444009	Identifier	target		3443932	1					
ANR	3444010	Argument	map		3443932	1					
ANR	3444011	Identifier	map		3443932	0					
ANR	3444012	BreakStatement	break ;	1846:4:43565:43570	3443932	6	True				
ANR	3444013	Label	case NT_ENCLOSE :	1847:2:43574:43589	3443932	7	True				
ANR	3444014	Identifier	NT_ENCLOSE		3443932	0					
ANR	3444015	ExpressionStatement	"r = renumber_by_map ( NENCLOSE ( node ) -> target , map )"	1848:4:43595:43643	3443932	8	True				
ANR	3444016	AssignmentExpression	"r = renumber_by_map ( NENCLOSE ( node ) -> target , map )"		3443932	0		=			
ANR	3444017	Identifier	r		3443932	0					
ANR	3444018	CallExpression	"renumber_by_map ( NENCLOSE ( node ) -> target , map )"		3443932	1					
ANR	3444019	Callee	renumber_by_map		3443932	0					
ANR	3444020	Identifier	renumber_by_map		3443932	0					
ANR	3444021	ArgumentList	NENCLOSE ( node ) -> target		3443932	1					
ANR	3444022	Argument	NENCLOSE ( node ) -> target		3443932	0					
ANR	3444023	PtrMemberAccess	NENCLOSE ( node ) -> target		3443932	0					
ANR	3444024	CallExpression	NENCLOSE ( node )		3443932	0					
ANR	3444025	Callee	NENCLOSE		3443932	0					
ANR	3444026	Identifier	NENCLOSE		3443932	0					
ANR	3444027	ArgumentList	node		3443932	1					
ANR	3444028	Argument	node		3443932	0					
ANR	3444029	Identifier	node		3443932	0					
ANR	3444030	Identifier	target		3443932	1					
ANR	3444031	Argument	map		3443932	1					
ANR	3444032	Identifier	map		3443932	0					
ANR	3444033	BreakStatement	break ;	1849:4:43649:43654	3443932	9	True				
ANR	3444034	Label	case NT_BREF :	1851:2:43659:43671	3443932	10	True				
ANR	3444035	Identifier	NT_BREF		3443932	0					
ANR	3444036	ExpressionStatement	"r = renumber_node_backref ( node , map )"	1852:4:43677:43713	3443932	11	True				
ANR	3444037	AssignmentExpression	"r = renumber_node_backref ( node , map )"		3443932	0		=			
ANR	3444038	Identifier	r		3443932	0					
ANR	3444039	CallExpression	"renumber_node_backref ( node , map )"		3443932	1					
ANR	3444040	Callee	renumber_node_backref		3443932	0					
ANR	3444041	Identifier	renumber_node_backref		3443932	0					
ANR	3444042	ArgumentList	node		3443932	1					
ANR	3444043	Argument	node		3443932	0					
ANR	3444044	Identifier	node		3443932	0					
ANR	3444045	Argument	map		3443932	1					
ANR	3444046	Identifier	map		3443932	0					
ANR	3444047	BreakStatement	break ;	1853:4:43719:43724	3443932	12	True				
ANR	3444048	Label	default :	1855:2:43729:43736	3443932	13	True				
ANR	3444049	Identifier	default		3443932	0					
ANR	3444050	BreakStatement	break ;	1856:4:43742:43747	3443932	14	True				
ANR	3444051	ReturnStatement	return r ;	1859:2:43756:43764	3443932	2	True				
ANR	3444052	Identifier	r		3443932	0					
ANR	3444053	ReturnType	static int		3443932	1					
ANR	3444054	Identifier	renumber_by_map		3443932	2					
ANR	3444055	ParameterList	"Node * node , GroupNumRemap * map"		3443932	3					
ANR	3444056	Parameter	Node * node	1833:16:43270:43279	3443932	0	True				
ANR	3444057	ParameterType	Node *		3443932	0					
ANR	3444058	Identifier	node		3443932	1					
ANR	3444059	Parameter	GroupNumRemap * map	1833:28:43282:43299	3443932	1	True				
ANR	3444060	ParameterType	GroupNumRemap *		3443932	0					
ANR	3444061	Identifier	map		3443932	1					
ANR	3444062	CFGEntryNode	ENTRY		3443932		True				
ANR	3444063	CFGExitNode	EXIT		3443932		True				
ANR	3444064	Symbol	renumber_by_map		3443932						
ANR	3444065	Symbol	NQTFR ( node ) -> target		3443932						
ANR	3444066	Symbol	IS_NOT_NULL		3443932						
ANR	3444067	Symbol	NCAR		3443932						
ANR	3444068	Symbol	* NENCLOSE		3443932						
ANR	3444069	Symbol	NCDR		3443932						
ANR	3444070	Symbol	NQTFR		3443932						
ANR	3444071	Symbol	NENCLOSE ( node ) -> target		3443932						
ANR	3444072	Symbol	node		3443932						
ANR	3444073	Symbol	r		3443932						
ANR	3444074	Symbol	* NQTFR		3443932						
ANR	3444075	Symbol	NENCLOSE		3443932						
ANR	3444076	Symbol	renumber_node_backref		3443932						
ANR	3444077	Symbol	NTYPE		3443932						
ANR	3444078	Symbol	map		3443932						
ANR	3444079	Function	numbered_ref_check	1862:0:43769:44330							
ANR	3444080	FunctionDef	numbered_ref_check (Node * node)		3444079	0					
ANR	3444081	CompoundStatement		1864:0:43811:44330	3444079	0					
ANR	3444082	IdentifierDeclStatement	int r = 0 ;	1865:2:43815:43824	3444079	0	True				
ANR	3444083	IdentifierDecl	r = 0		3444079	0					
ANR	3444084	IdentifierDeclType	int		3444079	0					
ANR	3444085	Identifier	r		3444079	1					
ANR	3444086	AssignmentExpression	r = 0		3444079	2		=			
ANR	3444087	Identifier	r		3444079	0					
ANR	3444088	PrimaryExpression	0		3444079	1					
ANR	3444089	SwitchStatement	switch ( NTYPE ( node ) )		3444079	1					
ANR	3444090	Condition	NTYPE ( node )	1867:10:43837:43847	3444079	0	True				
ANR	3444091	CallExpression	NTYPE ( node )		3444079	0					
ANR	3444092	Callee	NTYPE		3444079	0					
ANR	3444093	Identifier	NTYPE		3444079	0					
ANR	3444094	ArgumentList	node		3444079	1					
ANR	3444095	Argument	node		3444079	0					
ANR	3444096	Identifier	node		3444079	0					
ANR	3444097	CompoundStatement		4:23:38:38	3444079	1					
ANR	3444098	Label	case NT_LIST :	1868:2:43854:43866	3444079	0	True				
ANR	3444099	Identifier	NT_LIST		3444079	0					
ANR	3444100	Label	case NT_ALT :	1869:2:43870:43881	3444079	1	True				
ANR	3444101	Identifier	NT_ALT		3444079	0					
ANR	3444102	DoStatement	do		3444079	2					
ANR	3444103	CompoundStatement		7:7:78:78	3444079	0					
ANR	3444104	ExpressionStatement	r = numbered_ref_check ( NCAR ( node ) )	1871:6:43898:43932	3444079	0	True				
ANR	3444105	AssignmentExpression	r = numbered_ref_check ( NCAR ( node ) )		3444079	0		=			
ANR	3444106	Identifier	r		3444079	0					
ANR	3444107	CallExpression	numbered_ref_check ( NCAR ( node ) )		3444079	1					
ANR	3444108	Callee	numbered_ref_check		3444079	0					
ANR	3444109	Identifier	numbered_ref_check		3444079	0					
ANR	3444110	ArgumentList	NCAR ( node )		3444079	1					
ANR	3444111	Argument	NCAR ( node )		3444079	0					
ANR	3444112	CallExpression	NCAR ( node )		3444079	0					
ANR	3444113	Callee	NCAR		3444079	0					
ANR	3444114	Identifier	NCAR		3444079	0					
ANR	3444115	ArgumentList	node		3444079	1					
ANR	3444116	Argument	node		3444079	0					
ANR	3444117	Identifier	node		3444079	0					
ANR	3444118	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1872:13:43947:43986	3444079	1	True				
ANR	3444119	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3444079	0		&&			
ANR	3444120	EqualityExpression	r == 0		3444079	0		==			
ANR	3444121	Identifier	r		3444079	0					
ANR	3444122	PrimaryExpression	0		3444079	1					
ANR	3444123	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3444079	1					
ANR	3444124	Callee	IS_NOT_NULL		3444079	0					
ANR	3444125	Identifier	IS_NOT_NULL		3444079	0					
ANR	3444126	ArgumentList	node = NCDR ( node )		3444079	1					
ANR	3444127	Argument	node = NCDR ( node )		3444079	0					
ANR	3444128	AssignmentExpression	node = NCDR ( node )		3444079	0		=			
ANR	3444129	Identifier	node		3444079	0					
ANR	3444130	CallExpression	NCDR ( node )		3444079	1					
ANR	3444131	Callee	NCDR		3444079	0					
ANR	3444132	Identifier	NCDR		3444079	0					
ANR	3444133	ArgumentList	node		3444079	1					
ANR	3444134	Argument	node		3444079	0					
ANR	3444135	Identifier	node		3444079	0					
ANR	3444136	BreakStatement	break ;	1873:4:43994:43999	3444079	3	True				
ANR	3444137	Label	case NT_QTFR :	1874:2:44003:44015	3444079	4	True				
ANR	3444138	Identifier	NT_QTFR		3444079	0					
ANR	3444139	ExpressionStatement	r = numbered_ref_check ( NQTFR ( node ) -> target )	1875:4:44021:44064	3444079	5	True				
ANR	3444140	AssignmentExpression	r = numbered_ref_check ( NQTFR ( node ) -> target )		3444079	0		=			
ANR	3444141	Identifier	r		3444079	0					
ANR	3444142	CallExpression	numbered_ref_check ( NQTFR ( node ) -> target )		3444079	1					
ANR	3444143	Callee	numbered_ref_check		3444079	0					
ANR	3444144	Identifier	numbered_ref_check		3444079	0					
ANR	3444145	ArgumentList	NQTFR ( node ) -> target		3444079	1					
ANR	3444146	Argument	NQTFR ( node ) -> target		3444079	0					
ANR	3444147	PtrMemberAccess	NQTFR ( node ) -> target		3444079	0					
ANR	3444148	CallExpression	NQTFR ( node )		3444079	0					
ANR	3444149	Callee	NQTFR		3444079	0					
ANR	3444150	Identifier	NQTFR		3444079	0					
ANR	3444151	ArgumentList	node		3444079	1					
ANR	3444152	Argument	node		3444079	0					
ANR	3444153	Identifier	node		3444079	0					
ANR	3444154	Identifier	target		3444079	1					
ANR	3444155	BreakStatement	break ;	1876:4:44070:44075	3444079	6	True				
ANR	3444156	Label	case NT_ENCLOSE :	1877:2:44079:44094	3444079	7	True				
ANR	3444157	Identifier	NT_ENCLOSE		3444079	0					
ANR	3444158	ExpressionStatement	r = numbered_ref_check ( NENCLOSE ( node ) -> target )	1878:4:44100:44146	3444079	8	True				
ANR	3444159	AssignmentExpression	r = numbered_ref_check ( NENCLOSE ( node ) -> target )		3444079	0		=			
ANR	3444160	Identifier	r		3444079	0					
ANR	3444161	CallExpression	numbered_ref_check ( NENCLOSE ( node ) -> target )		3444079	1					
ANR	3444162	Callee	numbered_ref_check		3444079	0					
ANR	3444163	Identifier	numbered_ref_check		3444079	0					
ANR	3444164	ArgumentList	NENCLOSE ( node ) -> target		3444079	1					
ANR	3444165	Argument	NENCLOSE ( node ) -> target		3444079	0					
ANR	3444166	PtrMemberAccess	NENCLOSE ( node ) -> target		3444079	0					
ANR	3444167	CallExpression	NENCLOSE ( node )		3444079	0					
ANR	3444168	Callee	NENCLOSE		3444079	0					
ANR	3444169	Identifier	NENCLOSE		3444079	0					
ANR	3444170	ArgumentList	node		3444079	1					
ANR	3444171	Argument	node		3444079	0					
ANR	3444172	Identifier	node		3444079	0					
ANR	3444173	Identifier	target		3444079	1					
ANR	3444174	BreakStatement	break ;	1879:4:44152:44157	3444079	9	True				
ANR	3444175	Label	case NT_BREF :	1881:2:44162:44174	3444079	10	True				
ANR	3444176	Identifier	NT_BREF		3444079	0					
ANR	3444177	IfStatement	if ( ! IS_BACKREF_NAME_REF ( NBREF ( node ) ) )		3444079	11					
ANR	3444178	Condition	! IS_BACKREF_NAME_REF ( NBREF ( node ) )	1882:8:44184:44217	3444079	0	True				
ANR	3444179	UnaryOperationExpression	! IS_BACKREF_NAME_REF ( NBREF ( node ) )		3444079	0					
ANR	3444180	UnaryOperator	!		3444079	0					
ANR	3444181	CallExpression	IS_BACKREF_NAME_REF ( NBREF ( node ) )		3444079	1					
ANR	3444182	Callee	IS_BACKREF_NAME_REF		3444079	0					
ANR	3444183	Identifier	IS_BACKREF_NAME_REF		3444079	0					
ANR	3444184	ArgumentList	NBREF ( node )		3444079	1					
ANR	3444185	Argument	NBREF ( node )		3444079	0					
ANR	3444186	CallExpression	NBREF ( node )		3444079	0					
ANR	3444187	Callee	NBREF		3444079	0					
ANR	3444188	Identifier	NBREF		3444079	0					
ANR	3444189	ArgumentList	node		3444079	1					
ANR	3444190	Argument	node		3444079	0					
ANR	3444191	Identifier	node		3444079	0					
ANR	3444192	ReturnStatement	return ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED ;	1883:6:44226:44277	3444079	1	True				
ANR	3444193	Identifier	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		3444079	0					
ANR	3444194	BreakStatement	break ;	1884:4:44283:44288	3444079	12	True				
ANR	3444195	Label	default :	1886:2:44293:44300	3444079	13	True				
ANR	3444196	Identifier	default		3444079	0					
ANR	3444197	BreakStatement	break ;	1887:4:44306:44311	3444079	14	True				
ANR	3444198	ReturnStatement	return r ;	1890:2:44320:44328	3444079	2	True				
ANR	3444199	Identifier	r		3444079	0					
ANR	3444200	ReturnType	static int		3444079	1					
ANR	3444201	Identifier	numbered_ref_check		3444079	2					
ANR	3444202	ParameterList	Node * node		3444079	3					
ANR	3444203	Parameter	Node * node	1863:19:43799:43808	3444079	0	True				
ANR	3444204	ParameterType	Node *		3444079	0					
ANR	3444205	Identifier	node		3444079	1					
ANR	3444206	CFGEntryNode	ENTRY		3444079		True				
ANR	3444207	CFGExitNode	EXIT		3444079		True				
ANR	3444208	Symbol	NQTFR ( node ) -> target		3444079						
ANR	3444209	Symbol	IS_NOT_NULL		3444079						
ANR	3444210	Symbol	NCAR		3444079						
ANR	3444211	Symbol	* NENCLOSE		3444079						
ANR	3444212	Symbol	NCDR		3444079						
ANR	3444213	Symbol	NQTFR		3444079						
ANR	3444214	Symbol	NENCLOSE ( node ) -> target		3444079						
ANR	3444215	Symbol	node		3444079						
ANR	3444216	Symbol	r		3444079						
ANR	3444217	Symbol	* NQTFR		3444079						
ANR	3444218	Symbol	NBREF		3444079						
ANR	3444219	Symbol	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		3444079						
ANR	3444220	Symbol	NENCLOSE		3444079						
ANR	3444221	Symbol	IS_BACKREF_NAME_REF		3444079						
ANR	3444222	Symbol	NTYPE		3444079						
ANR	3444223	Symbol	numbered_ref_check		3444079						
ANR	3444224	Function	disable_noname_group_capture	1893:0:44333:45333							
ANR	3444225	FunctionDef	"disable_noname_group_capture (Node * * root , regex_t * reg , ScanEnv * env)"		3444224	0					
ANR	3444226	CompoundStatement		1895:0:44414:45333	3444224	0					
ANR	3444227	IdentifierDeclStatement	"int r , i , pos , counter ;"	1896:2:44418:44440	3444224	0	True				
ANR	3444228	IdentifierDecl	r		3444224	0					
ANR	3444229	IdentifierDeclType	int		3444224	0					
ANR	3444230	Identifier	r		3444224	1					
ANR	3444231	IdentifierDecl	i		3444224	1					
ANR	3444232	IdentifierDeclType	int		3444224	0					
ANR	3444233	Identifier	i		3444224	1					
ANR	3444234	IdentifierDecl	pos		3444224	2					
ANR	3444235	IdentifierDeclType	int		3444224	0					
ANR	3444236	Identifier	pos		3444224	1					
ANR	3444237	IdentifierDecl	counter		3444224	3					
ANR	3444238	IdentifierDeclType	int		3444224	0					
ANR	3444239	Identifier	counter		3444224	1					
ANR	3444240	IdentifierDeclStatement	BitStatusType loc ;	1897:2:44444:44461	3444224	1	True				
ANR	3444241	IdentifierDecl	loc		3444224	0					
ANR	3444242	IdentifierDeclType	BitStatusType		3444224	0					
ANR	3444243	Identifier	loc		3444224	1					
ANR	3444244	IdentifierDeclStatement	GroupNumRemap * map ;	1898:2:44465:44483	3444224	2	True				
ANR	3444245	IdentifierDecl	* map		3444224	0					
ANR	3444246	IdentifierDeclType	GroupNumRemap *		3444224	0					
ANR	3444247	Identifier	map		3444224	1					
ANR	3444248	ExpressionStatement	map = ( GroupNumRemap * ) xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )	1900:2:44488:44562	3444224	3	True				
ANR	3444249	AssignmentExpression	map = ( GroupNumRemap * ) xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )		3444224	0		=			
ANR	3444250	Identifier	map		3444224	0					
ANR	3444251	CastExpression	( GroupNumRemap * ) xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )		3444224	1					
ANR	3444252	CastTarget	GroupNumRemap *		3444224	0					
ANR	3444253	CallExpression	xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )		3444224	1					
ANR	3444254	Callee	xalloca		3444224	0					
ANR	3444255	Identifier	xalloca		3444224	0					
ANR	3444256	ArgumentList	sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 )		3444224	1					
ANR	3444257	Argument	sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 )		3444224	0					
ANR	3444258	MultiplicativeExpression	sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 )		3444224	0		*			
ANR	3444259	SizeofExpression	sizeof ( GroupNumRemap )		3444224	0					
ANR	3444260	Sizeof	sizeof		3444224	0					
ANR	3444261	SizeofOperand	GroupNumRemap		3444224	1					
ANR	3444262	AdditiveExpression	env -> num_mem + 1		3444224	1		+			
ANR	3444263	PtrMemberAccess	env -> num_mem		3444224	0					
ANR	3444264	Identifier	env		3444224	0					
ANR	3444265	Identifier	num_mem		3444224	1					
ANR	3444266	PrimaryExpression	1		3444224	1					
ANR	3444267	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( map )	1901:2:44566:44595	3444224	4	True				
ANR	3444268	CallExpression	CHECK_NULL_RETURN_MEMERR ( map )		3444224	0					
ANR	3444269	Callee	CHECK_NULL_RETURN_MEMERR		3444224	0					
ANR	3444270	Identifier	CHECK_NULL_RETURN_MEMERR		3444224	0					
ANR	3444271	ArgumentList	map		3444224	1					
ANR	3444272	Argument	map		3444224	0					
ANR	3444273	Identifier	map		3444224	0					
ANR	3444274	ForStatement	for ( i = 1 ; i <= env -> num_mem ; i ++ )		3444224	5					
ANR	3444275	ForInit	i = 1 ;	1902:7:44604:44609	3444224	0	True				
ANR	3444276	AssignmentExpression	i = 1		3444224	0		=			
ANR	3444277	Identifier	i		3444224	0					
ANR	3444278	PrimaryExpression	1		3444224	1					
ANR	3444279	Condition	i <= env -> num_mem	1902:14:44611:44627	3444224	1	True				
ANR	3444280	RelationalExpression	i <= env -> num_mem		3444224	0		<=			
ANR	3444281	Identifier	i		3444224	0					
ANR	3444282	PtrMemberAccess	env -> num_mem		3444224	1					
ANR	3444283	Identifier	env		3444224	0					
ANR	3444284	Identifier	num_mem		3444224	1					
ANR	3444285	PostIncDecOperationExpression	i ++	1902:33:44630:44632	3444224	2	True				
ANR	3444286	Identifier	i		3444224	0					
ANR	3444287	IncDec	++		3444224	1					
ANR	3444288	CompoundStatement		8:38:220:220	3444224	3					
ANR	3444289	ExpressionStatement	map [ i ] . new_val = 0	1903:4:44641:44659	3444224	0	True				
ANR	3444290	AssignmentExpression	map [ i ] . new_val = 0		3444224	0		=			
ANR	3444291	MemberAccess	map [ i ] . new_val		3444224	0					
ANR	3444292	ArrayIndexing	map [ i ]		3444224	0					
ANR	3444293	Identifier	map		3444224	0					
ANR	3444294	Identifier	i		3444224	1					
ANR	3444295	Identifier	new_val		3444224	1					
ANR	3444296	PrimaryExpression	0		3444224	1					
ANR	3444297	ExpressionStatement	counter = 0	1905:2:44667:44678	3444224	6	True				
ANR	3444298	AssignmentExpression	counter = 0		3444224	0		=			
ANR	3444299	Identifier	counter		3444224	0					
ANR	3444300	PrimaryExpression	0		3444224	1					
ANR	3444301	ExpressionStatement	"r = noname_disable_map ( root , map , & counter )"	1906:2:44682:44725	3444224	7	True				
ANR	3444302	AssignmentExpression	"r = noname_disable_map ( root , map , & counter )"		3444224	0		=			
ANR	3444303	Identifier	r		3444224	0					
ANR	3444304	CallExpression	"noname_disable_map ( root , map , & counter )"		3444224	1					
ANR	3444305	Callee	noname_disable_map		3444224	0					
ANR	3444306	Identifier	noname_disable_map		3444224	0					
ANR	3444307	ArgumentList	root		3444224	1					
ANR	3444308	Argument	root		3444224	0					
ANR	3444309	Identifier	root		3444224	0					
ANR	3444310	Argument	map		3444224	1					
ANR	3444311	Identifier	map		3444224	0					
ANR	3444312	Argument	& counter		3444224	2					
ANR	3444313	UnaryOperationExpression	& counter		3444224	0					
ANR	3444314	UnaryOperator	&		3444224	0					
ANR	3444315	Identifier	counter		3444224	1					
ANR	3444316	IfStatement	if ( r != 0 )		3444224	8					
ANR	3444317	Condition	r != 0	1907:6:44733:44738	3444224	0	True				
ANR	3444318	EqualityExpression	r != 0		3444224	0		!=			
ANR	3444319	Identifier	r		3444224	0					
ANR	3444320	PrimaryExpression	0		3444224	1					
ANR	3444321	ReturnStatement	return r ;	1907:14:44741:44749	3444224	1	True				
ANR	3444322	Identifier	r		3444224	0					
ANR	3444323	ExpressionStatement	"r = renumber_by_map ( * root , map )"	1909:2:44754:44785	3444224	9	True				
ANR	3444324	AssignmentExpression	"r = renumber_by_map ( * root , map )"		3444224	0		=			
ANR	3444325	Identifier	r		3444224	0					
ANR	3444326	CallExpression	"renumber_by_map ( * root , map )"		3444224	1					
ANR	3444327	Callee	renumber_by_map		3444224	0					
ANR	3444328	Identifier	renumber_by_map		3444224	0					
ANR	3444329	ArgumentList	* root		3444224	1					
ANR	3444330	Argument	* root		3444224	0					
ANR	3444331	UnaryOperationExpression	* root		3444224	0					
ANR	3444332	UnaryOperator	*		3444224	0					
ANR	3444333	Identifier	root		3444224	1					
ANR	3444334	Argument	map		3444224	1					
ANR	3444335	Identifier	map		3444224	0					
ANR	3444336	IfStatement	if ( r != 0 )		3444224	10					
ANR	3444337	Condition	r != 0	1910:6:44793:44798	3444224	0	True				
ANR	3444338	EqualityExpression	r != 0		3444224	0		!=			
ANR	3444339	Identifier	r		3444224	0					
ANR	3444340	PrimaryExpression	0		3444224	1					
ANR	3444341	ReturnStatement	return r ;	1910:14:44801:44809	3444224	1	True				
ANR	3444342	Identifier	r		3444224	0					
ANR	3444343	ForStatement	"for ( i = 1 , pos = 1 ; i <= env -> num_mem ; i ++ )"		3444224	11					
ANR	3444344	ForInit	"i = 1 , pos = 1 ;"	1912:7:44819:44833	3444224	0	True				
ANR	3444345	Expression	"i = 1 , pos = 1"		3444224	0					
ANR	3444346	AssignmentExpression	i = 1		3444224	0		=			
ANR	3444347	Identifier	i		3444224	0					
ANR	3444348	PrimaryExpression	1		3444224	1					
ANR	3444349	AssignmentExpression	pos = 1		3444224	1		=			
ANR	3444350	Identifier	pos		3444224	0					
ANR	3444351	PrimaryExpression	1		3444224	1					
ANR	3444352	Condition	i <= env -> num_mem	1912:23:44835:44851	3444224	1	True				
ANR	3444353	RelationalExpression	i <= env -> num_mem		3444224	0		<=			
ANR	3444354	Identifier	i		3444224	0					
ANR	3444355	PtrMemberAccess	env -> num_mem		3444224	1					
ANR	3444356	Identifier	env		3444224	0					
ANR	3444357	Identifier	num_mem		3444224	1					
ANR	3444358	PostIncDecOperationExpression	i ++	1912:42:44854:44856	3444224	2	True				
ANR	3444359	Identifier	i		3444224	0					
ANR	3444360	IncDec	++		3444224	1					
ANR	3444361	CompoundStatement		18:47:444:444	3444224	3					
ANR	3444362	IfStatement	if ( map [ i ] . new_val > 0 )		3444224	0					
ANR	3444363	Condition	map [ i ] . new_val > 0	1913:8:44869:44886	3444224	0	True				
ANR	3444364	RelationalExpression	map [ i ] . new_val > 0		3444224	0		>			
ANR	3444365	MemberAccess	map [ i ] . new_val		3444224	0					
ANR	3444366	ArrayIndexing	map [ i ]		3444224	0					
ANR	3444367	Identifier	map		3444224	0					
ANR	3444368	Identifier	i		3444224	1					
ANR	3444369	Identifier	new_val		3444224	1					
ANR	3444370	PrimaryExpression	0		3444224	1					
ANR	3444371	CompoundStatement		19:28:474:474	3444224	1					
ANR	3444372	ExpressionStatement	SCANENV_MEM_NODES ( env ) [ pos ] = SCANENV_MEM_NODES ( env ) [ i ]	1914:6:44897:44952	3444224	0	True				
ANR	3444373	AssignmentExpression	SCANENV_MEM_NODES ( env ) [ pos ] = SCANENV_MEM_NODES ( env ) [ i ]		3444224	0		=			
ANR	3444374	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ pos ]		3444224	0					
ANR	3444375	CallExpression	SCANENV_MEM_NODES ( env )		3444224	0					
ANR	3444376	Callee	SCANENV_MEM_NODES		3444224	0					
ANR	3444377	Identifier	SCANENV_MEM_NODES		3444224	0					
ANR	3444378	ArgumentList	env		3444224	1					
ANR	3444379	Argument	env		3444224	0					
ANR	3444380	Identifier	env		3444224	0					
ANR	3444381	Identifier	pos		3444224	1					
ANR	3444382	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ i ]		3444224	1					
ANR	3444383	CallExpression	SCANENV_MEM_NODES ( env )		3444224	0					
ANR	3444384	Callee	SCANENV_MEM_NODES		3444224	0					
ANR	3444385	Identifier	SCANENV_MEM_NODES		3444224	0					
ANR	3444386	ArgumentList	env		3444224	1					
ANR	3444387	Argument	env		3444224	0					
ANR	3444388	Identifier	env		3444224	0					
ANR	3444389	Identifier	i		3444224	1					
ANR	3444390	ExpressionStatement	pos ++	1915:6:44960:44965	3444224	1	True				
ANR	3444391	PostIncDecOperationExpression	pos ++		3444224	0					
ANR	3444392	Identifier	pos		3444224	0					
ANR	3444393	IncDec	++		3444224	1					
ANR	3444394	ExpressionStatement	loc = env -> capture_history	1919:2:44980:45006	3444224	12	True				
ANR	3444395	AssignmentExpression	loc = env -> capture_history		3444224	0		=			
ANR	3444396	Identifier	loc		3444224	0					
ANR	3444397	PtrMemberAccess	env -> capture_history		3444224	1					
ANR	3444398	Identifier	env		3444224	0					
ANR	3444399	Identifier	capture_history		3444224	1					
ANR	3444400	ExpressionStatement	BIT_STATUS_CLEAR ( env -> capture_history )	1920:2:45010:45048	3444224	13	True				
ANR	3444401	CallExpression	BIT_STATUS_CLEAR ( env -> capture_history )		3444224	0					
ANR	3444402	Callee	BIT_STATUS_CLEAR		3444224	0					
ANR	3444403	Identifier	BIT_STATUS_CLEAR		3444224	0					
ANR	3444404	ArgumentList	env -> capture_history		3444224	1					
ANR	3444405	Argument	env -> capture_history		3444224	0					
ANR	3444406	PtrMemberAccess	env -> capture_history		3444224	0					
ANR	3444407	Identifier	env		3444224	0					
ANR	3444408	Identifier	capture_history		3444224	1					
ANR	3444409	ForStatement	for ( i = 1 ; i <= ONIG_MAX_CAPTURE_HISTORY_GROUP ; i ++ )		3444224	14					
ANR	3444410	ForInit	i = 1 ;	1921:7:45057:45062	3444224	0	True				
ANR	3444411	AssignmentExpression	i = 1		3444224	0		=			
ANR	3444412	Identifier	i		3444224	0					
ANR	3444413	PrimaryExpression	1		3444224	1					
ANR	3444414	Condition	i <= ONIG_MAX_CAPTURE_HISTORY_GROUP	1921:14:45064:45098	3444224	1	True				
ANR	3444415	RelationalExpression	i <= ONIG_MAX_CAPTURE_HISTORY_GROUP		3444224	0		<=			
ANR	3444416	Identifier	i		3444224	0					
ANR	3444417	Identifier	ONIG_MAX_CAPTURE_HISTORY_GROUP		3444224	1					
ANR	3444418	PostIncDecOperationExpression	i ++	1921:51:45101:45103	3444224	2	True				
ANR	3444419	Identifier	i		3444224	0					
ANR	3444420	IncDec	++		3444224	1					
ANR	3444421	CompoundStatement		27:56:691:691	3444224	3					
ANR	3444422	IfStatement	"if ( BIT_STATUS_AT ( loc , i ) )"		3444224	0					
ANR	3444423	Condition	"BIT_STATUS_AT ( loc , i )"	1922:8:45116:45136	3444224	0	True				
ANR	3444424	CallExpression	"BIT_STATUS_AT ( loc , i )"		3444224	0					
ANR	3444425	Callee	BIT_STATUS_AT		3444224	0					
ANR	3444426	Identifier	BIT_STATUS_AT		3444224	0					
ANR	3444427	ArgumentList	loc		3444224	1					
ANR	3444428	Argument	loc		3444224	0					
ANR	3444429	Identifier	loc		3444224	0					
ANR	3444430	Argument	i		3444224	1					
ANR	3444431	Identifier	i		3444224	0					
ANR	3444432	CompoundStatement		28:31:724:724	3444224	1					
ANR	3444433	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , map [ i ] . new_val )"	1923:6:45147:45208	3444224	0	True				
ANR	3444434	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , map [ i ] . new_val )"		3444224	0					
ANR	3444435	Callee	BIT_STATUS_ON_AT_SIMPLE		3444224	0					
ANR	3444436	Identifier	BIT_STATUS_ON_AT_SIMPLE		3444224	0					
ANR	3444437	ArgumentList	env -> capture_history		3444224	1					
ANR	3444438	Argument	env -> capture_history		3444224	0					
ANR	3444439	PtrMemberAccess	env -> capture_history		3444224	0					
ANR	3444440	Identifier	env		3444224	0					
ANR	3444441	Identifier	capture_history		3444224	1					
ANR	3444442	Argument	map [ i ] . new_val		3444224	1					
ANR	3444443	MemberAccess	map [ i ] . new_val		3444224	0					
ANR	3444444	ArrayIndexing	map [ i ]		3444224	0					
ANR	3444445	Identifier	map		3444224	0					
ANR	3444446	Identifier	i		3444224	1					
ANR	3444447	Identifier	new_val		3444224	1					
ANR	3444448	ExpressionStatement	env -> num_mem = env -> num_named	1927:2:45223:45252	3444224	15	True				
ANR	3444449	AssignmentExpression	env -> num_mem = env -> num_named		3444224	0		=			
ANR	3444450	PtrMemberAccess	env -> num_mem		3444224	0					
ANR	3444451	Identifier	env		3444224	0					
ANR	3444452	Identifier	num_mem		3444224	1					
ANR	3444453	PtrMemberAccess	env -> num_named		3444224	1					
ANR	3444454	Identifier	env		3444224	0					
ANR	3444455	Identifier	num_named		3444224	1					
ANR	3444456	ExpressionStatement	reg -> num_mem = env -> num_named	1928:2:45256:45285	3444224	16	True				
ANR	3444457	AssignmentExpression	reg -> num_mem = env -> num_named		3444224	0		=			
ANR	3444458	PtrMemberAccess	reg -> num_mem		3444224	0					
ANR	3444459	Identifier	reg		3444224	0					
ANR	3444460	Identifier	num_mem		3444224	1					
ANR	3444461	PtrMemberAccess	env -> num_named		3444224	1					
ANR	3444462	Identifier	env		3444224	0					
ANR	3444463	Identifier	num_named		3444224	1					
ANR	3444464	ReturnStatement	"return onig_renumber_name_table ( reg , map ) ;"	1930:2:45290:45331	3444224	17	True				
ANR	3444465	CallExpression	"onig_renumber_name_table ( reg , map )"		3444224	0					
ANR	3444466	Callee	onig_renumber_name_table		3444224	0					
ANR	3444467	Identifier	onig_renumber_name_table		3444224	0					
ANR	3444468	ArgumentList	reg		3444224	1					
ANR	3444469	Argument	reg		3444224	0					
ANR	3444470	Identifier	reg		3444224	0					
ANR	3444471	Argument	map		3444224	1					
ANR	3444472	Identifier	map		3444224	0					
ANR	3444473	ReturnType	static int		3444224	1					
ANR	3444474	Identifier	disable_noname_group_capture		3444224	2					
ANR	3444475	ParameterList	"Node * * root , regex_t * reg , ScanEnv * env"		3444224	3					
ANR	3444476	Parameter	Node * * root	1894:29:44373:44383	3444224	0	True				
ANR	3444477	ParameterType	Node * *		3444224	0					
ANR	3444478	Identifier	root		3444224	1					
ANR	3444479	Parameter	regex_t * reg	1894:42:44386:44397	3444224	1	True				
ANR	3444480	ParameterType	regex_t *		3444224	0					
ANR	3444481	Identifier	reg		3444224	1					
ANR	3444482	Parameter	ScanEnv * env	1894:56:44400:44411	3444224	2	True				
ANR	3444483	ParameterType	ScanEnv *		3444224	0					
ANR	3444484	Identifier	env		3444224	1					
ANR	3444485	CFGEntryNode	ENTRY		3444224		True				
ANR	3444486	CFGExitNode	EXIT		3444224		True				
ANR	3444487	Symbol	loc		3444224						
ANR	3444488	Symbol	* map		3444224						
ANR	3444489	Symbol	ONIG_MAX_CAPTURE_HISTORY_GROUP		3444224						
ANR	3444490	Symbol	env -> num_named		3444224						
ANR	3444491	Symbol	* SCANENV_MEM_NODES		3444224						
ANR	3444492	Symbol	xalloca		3444224						
ANR	3444493	Symbol	reg		3444224						
ANR	3444494	Symbol	pos		3444224						
ANR	3444495	Symbol	root		3444224						
ANR	3444496	Symbol	onig_renumber_name_table		3444224						
ANR	3444497	Symbol	SCANENV_MEM_NODES		3444224						
ANR	3444498	Symbol	env -> capture_history		3444224						
ANR	3444499	Symbol	map		3444224						
ANR	3444500	Symbol	reg -> num_mem		3444224						
ANR	3444501	Symbol	renumber_by_map		3444224						
ANR	3444502	Symbol	BIT_STATUS_AT		3444224						
ANR	3444503	Symbol	& counter		3444224						
ANR	3444504	Symbol	env -> num_mem		3444224						
ANR	3444505	Symbol	* env		3444224						
ANR	3444506	Symbol	i		3444224						
ANR	3444507	Symbol	counter		3444224						
ANR	3444508	Symbol	env		3444224						
ANR	3444509	Symbol	noname_disable_map		3444224						
ANR	3444510	Symbol	r		3444224						
ANR	3444511	Symbol	map [ i ] . new_val		3444224						
ANR	3444512	Symbol	* i		3444224						
ANR	3444513	Symbol	* root		3444224						
ANR	3444514	Symbol	* pos		3444224						
ANR	3444515	Symbol	* reg		3444224						
ANR	3444516	Function	unset_addr_list_fix	1935:0:45388:45786							
ANR	3444517	FunctionDef	"unset_addr_list_fix (UnsetAddrList * uslist , regex_t * reg)"		3444516	0					
ANR	3444518	CompoundStatement		1937:0:45456:45786	3444516	0					
ANR	3444519	IdentifierDeclStatement	"int i , offset ;"	1938:2:45460:45473	3444516	0	True				
ANR	3444520	IdentifierDecl	i		3444516	0					
ANR	3444521	IdentifierDeclType	int		3444516	0					
ANR	3444522	Identifier	i		3444516	1					
ANR	3444523	IdentifierDecl	offset		3444516	1					
ANR	3444524	IdentifierDeclType	int		3444516	0					
ANR	3444525	Identifier	offset		3444516	1					
ANR	3444526	IdentifierDeclStatement	EncloseNode * en ;	1939:2:45477:45492	3444516	1	True				
ANR	3444527	IdentifierDecl	* en		3444516	0					
ANR	3444528	IdentifierDeclType	EncloseNode *		3444516	0					
ANR	3444529	Identifier	en		3444516	1					
ANR	3444530	IdentifierDeclStatement	AbsAddrType addr ;	1940:2:45496:45512	3444516	2	True				
ANR	3444531	IdentifierDecl	addr		3444516	0					
ANR	3444532	IdentifierDeclType	AbsAddrType		3444516	0					
ANR	3444533	Identifier	addr		3444516	1					
ANR	3444534	ForStatement	for ( i = 0 ; i < uslist -> num ; i ++ )		3444516	3					
ANR	3444535	ForInit	i = 0 ;	1942:7:45522:45527	3444516	0	True				
ANR	3444536	AssignmentExpression	i = 0		3444516	0		=			
ANR	3444537	Identifier	i		3444516	0					
ANR	3444538	PrimaryExpression	0		3444516	1					
ANR	3444539	Condition	i < uslist -> num	1942:14:45529:45543	3444516	1	True				
ANR	3444540	RelationalExpression	i < uslist -> num		3444516	0		<			
ANR	3444541	Identifier	i		3444516	0					
ANR	3444542	PtrMemberAccess	uslist -> num		3444516	1					
ANR	3444543	Identifier	uslist		3444516	0					
ANR	3444544	Identifier	num		3444516	1					
ANR	3444545	PostIncDecOperationExpression	i ++	1942:31:45546:45548	3444516	2	True				
ANR	3444546	Identifier	i		3444516	0					
ANR	3444547	IncDec	++		3444516	1					
ANR	3444548	CompoundStatement		6:36:94:94	3444516	3					
ANR	3444549	ExpressionStatement	en = NENCLOSE ( uslist -> us [ i ] . target )	1943:4:45557:45592	3444516	0	True				
ANR	3444550	AssignmentExpression	en = NENCLOSE ( uslist -> us [ i ] . target )		3444516	0		=			
ANR	3444551	Identifier	en		3444516	0					
ANR	3444552	CallExpression	NENCLOSE ( uslist -> us [ i ] . target )		3444516	1					
ANR	3444553	Callee	NENCLOSE		3444516	0					
ANR	3444554	Identifier	NENCLOSE		3444516	0					
ANR	3444555	ArgumentList	uslist -> us [ i ] . target		3444516	1					
ANR	3444556	Argument	uslist -> us [ i ] . target		3444516	0					
ANR	3444557	MemberAccess	uslist -> us [ i ] . target		3444516	0					
ANR	3444558	ArrayIndexing	uslist -> us [ i ]		3444516	0					
ANR	3444559	PtrMemberAccess	uslist -> us		3444516	0					
ANR	3444560	Identifier	uslist		3444516	0					
ANR	3444561	Identifier	us		3444516	1					
ANR	3444562	Identifier	i		3444516	1					
ANR	3444563	Identifier	target		3444516	1					
ANR	3444564	IfStatement	if ( ! IS_ENCLOSE_ADDR_FIXED ( en ) )		3444516	1					
ANR	3444565	Condition	! IS_ENCLOSE_ADDR_FIXED ( en )	1944:8:45602:45628	3444516	0	True				
ANR	3444566	UnaryOperationExpression	! IS_ENCLOSE_ADDR_FIXED ( en )		3444516	0					
ANR	3444567	UnaryOperator	!		3444516	0					
ANR	3444568	CallExpression	IS_ENCLOSE_ADDR_FIXED ( en )		3444516	1					
ANR	3444569	Callee	IS_ENCLOSE_ADDR_FIXED		3444516	0					
ANR	3444570	Identifier	IS_ENCLOSE_ADDR_FIXED		3444516	0					
ANR	3444571	ArgumentList	en		3444516	1					
ANR	3444572	Argument	en		3444516	0					
ANR	3444573	Identifier	en		3444516	0					
ANR	3444574	ReturnStatement	return ONIGERR_PARSER_BUG ;	1944:37:45631:45656	3444516	1	True				
ANR	3444575	Identifier	ONIGERR_PARSER_BUG		3444516	0					
ANR	3444576	ExpressionStatement	addr = en -> call_addr	1945:4:45662:45682	3444516	2	True				
ANR	3444577	AssignmentExpression	addr = en -> call_addr		3444516	0		=			
ANR	3444578	Identifier	addr		3444516	0					
ANR	3444579	PtrMemberAccess	en -> call_addr		3444516	1					
ANR	3444580	Identifier	en		3444516	0					
ANR	3444581	Identifier	call_addr		3444516	1					
ANR	3444582	ExpressionStatement	offset = uslist -> us [ i ] . offset	1946:4:45688:45717	3444516	3	True				
ANR	3444583	AssignmentExpression	offset = uslist -> us [ i ] . offset		3444516	0		=			
ANR	3444584	Identifier	offset		3444516	0					
ANR	3444585	MemberAccess	uslist -> us [ i ] . offset		3444516	1					
ANR	3444586	ArrayIndexing	uslist -> us [ i ]		3444516	0					
ANR	3444587	PtrMemberAccess	uslist -> us		3444516	0					
ANR	3444588	Identifier	uslist		3444516	0					
ANR	3444589	Identifier	us		3444516	1					
ANR	3444590	Identifier	i		3444516	1					
ANR	3444591	Identifier	offset		3444516	1					
ANR	3444592	ExpressionStatement	"BBUF_WRITE ( reg , offset , & addr , SIZE_ABSADDR )"	1948:4:45724:45768	3444516	4	True				
ANR	3444593	CallExpression	"BBUF_WRITE ( reg , offset , & addr , SIZE_ABSADDR )"		3444516	0					
ANR	3444594	Callee	BBUF_WRITE		3444516	0					
ANR	3444595	Identifier	BBUF_WRITE		3444516	0					
ANR	3444596	ArgumentList	reg		3444516	1					
ANR	3444597	Argument	reg		3444516	0					
ANR	3444598	Identifier	reg		3444516	0					
ANR	3444599	Argument	offset		3444516	1					
ANR	3444600	Identifier	offset		3444516	0					
ANR	3444601	Argument	& addr		3444516	2					
ANR	3444602	UnaryOperationExpression	& addr		3444516	0					
ANR	3444603	UnaryOperator	&		3444516	0					
ANR	3444604	Identifier	addr		3444516	1					
ANR	3444605	Argument	SIZE_ABSADDR		3444516	3					
ANR	3444606	Identifier	SIZE_ABSADDR		3444516	0					
ANR	3444607	ReturnStatement	return 0 ;	1950:2:45776:45784	3444516	4	True				
ANR	3444608	PrimaryExpression	0		3444516	0					
ANR	3444609	ReturnType	static int		3444516	1					
ANR	3444610	Identifier	unset_addr_list_fix		3444516	2					
ANR	3444611	ParameterList	"UnsetAddrList * uslist , regex_t * reg"		3444516	3					
ANR	3444612	Parameter	UnsetAddrList * uslist	1936:20:45419:45439	3444516	0	True				
ANR	3444613	ParameterType	UnsetAddrList *		3444516	0					
ANR	3444614	Identifier	uslist		3444516	1					
ANR	3444615	Parameter	regex_t * reg	1936:43:45442:45453	3444516	1	True				
ANR	3444616	ParameterType	regex_t *		3444516	0					
ANR	3444617	Identifier	reg		3444516	1					
ANR	3444618	CFGEntryNode	ENTRY		3444516		True				
ANR	3444619	CFGExitNode	EXIT		3444516		True				
ANR	3444620	Symbol	uslist -> num		3444516						
ANR	3444621	Symbol	uslist -> us [ i ] . target		3444516						
ANR	3444622	Symbol	& addr		3444516						
ANR	3444623	Symbol	offset		3444516						
ANR	3444624	Symbol	i		3444516						
ANR	3444625	Symbol	en		3444516						
ANR	3444626	Symbol	* * uslist		3444516						
ANR	3444627	Symbol	* en		3444516						
ANR	3444628	Symbol	SIZE_ABSADDR		3444516						
ANR	3444629	Symbol	ONIGERR_PARSER_BUG		3444516						
ANR	3444630	Symbol	uslist -> us		3444516						
ANR	3444631	Symbol	uslist -> us [ i ] . offset		3444516						
ANR	3444632	Symbol	uslist		3444516						
ANR	3444633	Symbol	* i		3444516						
ANR	3444634	Symbol	reg		3444516						
ANR	3444635	Symbol	* uslist		3444516						
ANR	3444636	Symbol	* uslist -> us		3444516						
ANR	3444637	Symbol	NENCLOSE		3444516						
ANR	3444638	Symbol	IS_ENCLOSE_ADDR_FIXED		3444516						
ANR	3444639	Symbol	addr		3444516						
ANR	3444640	Symbol	en -> call_addr		3444516						
ANR	3444641	Function	quantifiers_memory_node_info	1955:0:45851:47000							
ANR	3444642	FunctionDef	quantifiers_memory_node_info (Node * node)		3444641	0					
ANR	3444643	CompoundStatement		1957:0:45903:47000	3444641	0					
ANR	3444644	IdentifierDeclStatement	int r = 0 ;	1958:2:45907:45916	3444641	0	True				
ANR	3444645	IdentifierDecl	r = 0		3444641	0					
ANR	3444646	IdentifierDeclType	int		3444641	0					
ANR	3444647	Identifier	r		3444641	1					
ANR	3444648	AssignmentExpression	r = 0		3444641	2		=			
ANR	3444649	Identifier	r		3444641	0					
ANR	3444650	PrimaryExpression	0		3444641	1					
ANR	3444651	SwitchStatement	switch ( NTYPE ( node ) )		3444641	1					
ANR	3444652	Condition	NTYPE ( node )	1960:10:45929:45939	3444641	0	True				
ANR	3444653	CallExpression	NTYPE ( node )		3444641	0					
ANR	3444654	Callee	NTYPE		3444641	0					
ANR	3444655	Identifier	NTYPE		3444641	0					
ANR	3444656	ArgumentList	node		3444641	1					
ANR	3444657	Argument	node		3444641	0					
ANR	3444658	Identifier	node		3444641	0					
ANR	3444659	CompoundStatement		4:23:38:38	3444641	1					
ANR	3444660	Label	case NT_LIST :	1961:2:45946:45958	3444641	0	True				
ANR	3444661	Identifier	NT_LIST		3444641	0					
ANR	3444662	Label	case NT_ALT :	1962:2:45962:45973	3444641	1	True				
ANR	3444663	Identifier	NT_ALT		3444641	0					
ANR	3444664	CompoundStatement		8:6:83:88	3444641	2					
ANR	3444665	IdentifierDeclStatement	int v ;	1964:6:45987:45992	3444641	0	True				
ANR	3444666	IdentifierDecl	v		3444641	0					
ANR	3444667	IdentifierDeclType	int		3444641	0					
ANR	3444668	Identifier	v		3444641	1					
ANR	3444669	DoStatement	do		3444641	1					
ANR	3444670	CompoundStatement		9:9:99:99	3444641	0					
ANR	3444671	ExpressionStatement	v = quantifiers_memory_node_info ( NCAR ( node ) )	1966:1:46006:46050	3444641	0	True				
ANR	3444672	AssignmentExpression	v = quantifiers_memory_node_info ( NCAR ( node ) )		3444641	0		=			
ANR	3444673	Identifier	v		3444641	0					
ANR	3444674	CallExpression	quantifiers_memory_node_info ( NCAR ( node ) )		3444641	1					
ANR	3444675	Callee	quantifiers_memory_node_info		3444641	0					
ANR	3444676	Identifier	quantifiers_memory_node_info		3444641	0					
ANR	3444677	ArgumentList	NCAR ( node )		3444641	1					
ANR	3444678	Argument	NCAR ( node )		3444641	0					
ANR	3444679	CallExpression	NCAR ( node )		3444641	0					
ANR	3444680	Callee	NCAR		3444641	0					
ANR	3444681	Identifier	NCAR		3444641	0					
ANR	3444682	ArgumentList	node		3444641	1					
ANR	3444683	Argument	node		3444641	0					
ANR	3444684	Identifier	node		3444641	0					
ANR	3444685	IfStatement	if ( v > r )		3444641	1					
ANR	3444686	Condition	v > r	1967:5:46057:46061	3444641	0	True				
ANR	3444687	RelationalExpression	v > r		3444641	0		>			
ANR	3444688	Identifier	v		3444641	0					
ANR	3444689	Identifier	r		3444641	1					
ANR	3444690	ExpressionStatement	r = v	1967:12:46064:46069	3444641	1	True				
ANR	3444691	AssignmentExpression	r = v		3444641	0		=			
ANR	3444692	Identifier	r		3444641	0					
ANR	3444693	Identifier	v		3444641	1					
ANR	3444694	Condition	v >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1968:15:46086:46125	3444641	1	True				
ANR	3444695	AndExpression	v >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3444641	0		&&			
ANR	3444696	RelationalExpression	v >= 0		3444641	0		>=			
ANR	3444697	Identifier	v		3444641	0					
ANR	3444698	PrimaryExpression	0		3444641	1					
ANR	3444699	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3444641	1					
ANR	3444700	Callee	IS_NOT_NULL		3444641	0					
ANR	3444701	Identifier	IS_NOT_NULL		3444641	0					
ANR	3444702	ArgumentList	node = NCDR ( node )		3444641	1					
ANR	3444703	Argument	node = NCDR ( node )		3444641	0					
ANR	3444704	AssignmentExpression	node = NCDR ( node )		3444641	0		=			
ANR	3444705	Identifier	node		3444641	0					
ANR	3444706	CallExpression	NCDR ( node )		3444641	1					
ANR	3444707	Callee	NCDR		3444641	0					
ANR	3444708	Identifier	NCDR		3444641	0					
ANR	3444709	ArgumentList	node		3444641	1					
ANR	3444710	Argument	node		3444641	0					
ANR	3444711	Identifier	node		3444641	0					
ANR	3444712	BreakStatement	break ;	1970:4:46139:46144	3444641	3	True				
ANR	3444713	Label	case NT_CALL :	1973:2:46172:46184	3444641	4	True				
ANR	3444714	Identifier	NT_CALL		3444641	0					
ANR	3444715	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		3444641	5					
ANR	3444716	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	1974:8:46194:46223	3444641	0	True				
ANR	3444717	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		3444641	0					
ANR	3444718	Callee	IS_CALL_RECURSION		3444641	0					
ANR	3444719	Identifier	IS_CALL_RECURSION		3444641	0					
ANR	3444720	ArgumentList	NCALL ( node )		3444641	1					
ANR	3444721	Argument	NCALL ( node )		3444641	0					
ANR	3444722	CallExpression	NCALL ( node )		3444641	0					
ANR	3444723	Callee	NCALL		3444641	0					
ANR	3444724	Identifier	NCALL		3444641	0					
ANR	3444725	ArgumentList	node		3444641	1					
ANR	3444726	Argument	node		3444641	0					
ANR	3444727	Identifier	node		3444641	0					
ANR	3444728	CompoundStatement		18:40:322:322	3444641	1					
ANR	3444729	ReturnStatement	return NQ_TARGET_IS_EMPTY_REC ;	1975:6:46234:46263	3444641	0	True				
ANR	3444730	Identifier	NQ_TARGET_IS_EMPTY_REC		3444641	0					
ANR	3444731	ElseStatement	else		3444641	0					
ANR	3444732	ExpressionStatement	r = quantifiers_memory_node_info ( NCALL ( node ) -> target )	1978:6:46305:46358	3444641	0	True				
ANR	3444733	AssignmentExpression	r = quantifiers_memory_node_info ( NCALL ( node ) -> target )		3444641	0		=			
ANR	3444734	Identifier	r		3444641	0					
ANR	3444735	CallExpression	quantifiers_memory_node_info ( NCALL ( node ) -> target )		3444641	1					
ANR	3444736	Callee	quantifiers_memory_node_info		3444641	0					
ANR	3444737	Identifier	quantifiers_memory_node_info		3444641	0					
ANR	3444738	ArgumentList	NCALL ( node ) -> target		3444641	1					
ANR	3444739	Argument	NCALL ( node ) -> target		3444641	0					
ANR	3444740	PtrMemberAccess	NCALL ( node ) -> target		3444641	0					
ANR	3444741	CallExpression	NCALL ( node )		3444641	0					
ANR	3444742	Callee	NCALL		3444641	0					
ANR	3444743	Identifier	NCALL		3444641	0					
ANR	3444744	ArgumentList	node		3444641	1					
ANR	3444745	Argument	node		3444641	0					
ANR	3444746	Identifier	node		3444641	0					
ANR	3444747	Identifier	target		3444641	1					
ANR	3444748	BreakStatement	break ;	1979:4:46364:46369	3444641	6	True				
ANR	3444749	Label	case NT_QTFR :	1982:2:46381:46393	3444641	7	True				
ANR	3444750	Identifier	NT_QTFR		3444641	0					
ANR	3444751	CompoundStatement		28:6:503:529	3444641	8					
ANR	3444752	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	1984:6:46407:46433	3444641	0	True				
ANR	3444753	IdentifierDecl	* qn = NQTFR ( node )		3444641	0					
ANR	3444754	IdentifierDeclType	QtfrNode *		3444641	0					
ANR	3444755	Identifier	qn		3444641	1					
ANR	3444756	AssignmentExpression	* qn = NQTFR ( node )		3444641	2		=			
ANR	3444757	Identifier	qn		3444641	0					
ANR	3444758	CallExpression	NQTFR ( node )		3444641	1					
ANR	3444759	Callee	NQTFR		3444641	0					
ANR	3444760	Identifier	NQTFR		3444641	0					
ANR	3444761	ArgumentList	node		3444641	1					
ANR	3444762	Argument	node		3444641	0					
ANR	3444763	Identifier	node		3444641	0					
ANR	3444764	IfStatement	if ( qn -> upper != 0 )		3444641	1					
ANR	3444765	Condition	qn -> upper != 0	1985:10:46445:46458	3444641	0	True				
ANR	3444766	EqualityExpression	qn -> upper != 0		3444641	0		!=			
ANR	3444767	PtrMemberAccess	qn -> upper		3444641	0					
ANR	3444768	Identifier	qn		3444641	0					
ANR	3444769	Identifier	upper		3444641	1					
ANR	3444770	PrimaryExpression	0		3444641	1					
ANR	3444771	CompoundStatement		29:26:557:557	3444641	1					
ANR	3444772	ExpressionStatement	r = quantifiers_memory_node_info ( qn -> target )	1986:1:46464:46508	3444641	0	True				
ANR	3444773	AssignmentExpression	r = quantifiers_memory_node_info ( qn -> target )		3444641	0		=			
ANR	3444774	Identifier	r		3444641	0					
ANR	3444775	CallExpression	quantifiers_memory_node_info ( qn -> target )		3444641	1					
ANR	3444776	Callee	quantifiers_memory_node_info		3444641	0					
ANR	3444777	Identifier	quantifiers_memory_node_info		3444641	0					
ANR	3444778	ArgumentList	qn -> target		3444641	1					
ANR	3444779	Argument	qn -> target		3444641	0					
ANR	3444780	PtrMemberAccess	qn -> target		3444641	0					
ANR	3444781	Identifier	qn		3444641	0					
ANR	3444782	Identifier	target		3444641	1					
ANR	3444783	BreakStatement	break ;	1989:4:46528:46533	3444641	9	True				
ANR	3444784	Label	case NT_ENCLOSE :	1991:2:46538:46553	3444641	10	True				
ANR	3444785	Identifier	NT_ENCLOSE		3444641	0					
ANR	3444786	CompoundStatement		37:6:663:695	3444641	11					
ANR	3444787	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	1993:6:46567:46599	3444641	0	True				
ANR	3444788	IdentifierDecl	* en = NENCLOSE ( node )		3444641	0					
ANR	3444789	IdentifierDeclType	EncloseNode *		3444641	0					
ANR	3444790	Identifier	en		3444641	1					
ANR	3444791	AssignmentExpression	* en = NENCLOSE ( node )		3444641	2		=			
ANR	3444792	Identifier	en		3444641	0					
ANR	3444793	CallExpression	NENCLOSE ( node )		3444641	1					
ANR	3444794	Callee	NENCLOSE		3444641	0					
ANR	3444795	Identifier	NENCLOSE		3444641	0					
ANR	3444796	ArgumentList	node		3444641	1					
ANR	3444797	Argument	node		3444641	0					
ANR	3444798	Identifier	node		3444641	0					
ANR	3444799	SwitchStatement	switch ( en -> type )		3444641	1					
ANR	3444800	Condition	en -> type	1994:14:46615:46622	3444641	0	True				
ANR	3444801	PtrMemberAccess	en -> type		3444641	0					
ANR	3444802	Identifier	en		3444641	0					
ANR	3444803	Identifier	type		3444641	1					
ANR	3444804	CompoundStatement		38:24:721:721	3444641	1					
ANR	3444805	Label	case ENCLOSE_MEMORY :	1995:6:46633:46652	3444641	0	True				
ANR	3444806	Identifier	ENCLOSE_MEMORY		3444641	0					
ANR	3444807	ReturnStatement	return NQ_TARGET_IS_EMPTY_MEM ;	1996:1:46655:46684	3444641	1	True				
ANR	3444808	Identifier	NQ_TARGET_IS_EMPTY_MEM		3444641	0					
ANR	3444809	BreakStatement	break ;	1997:1:46687:46692	3444641	2	True				
ANR	3444810	Label	case ENCLOSE_OPTION :	1999:6:46701:46720	3444641	3	True				
ANR	3444811	Identifier	ENCLOSE_OPTION		3444641	0					
ANR	3444812	Label	case ENCLOSE_STOP_BACKTRACK :	2000:6:46728:46755	3444641	4	True				
ANR	3444813	Identifier	ENCLOSE_STOP_BACKTRACK		3444641	0					
ANR	3444814	ExpressionStatement	r = quantifiers_memory_node_info ( en -> target )	2001:1:46758:46802	3444641	5	True				
ANR	3444815	AssignmentExpression	r = quantifiers_memory_node_info ( en -> target )		3444641	0		=			
ANR	3444816	Identifier	r		3444641	0					
ANR	3444817	CallExpression	quantifiers_memory_node_info ( en -> target )		3444641	1					
ANR	3444818	Callee	quantifiers_memory_node_info		3444641	0					
ANR	3444819	Identifier	quantifiers_memory_node_info		3444641	0					
ANR	3444820	ArgumentList	en -> target		3444641	1					
ANR	3444821	Argument	en -> target		3444641	0					
ANR	3444822	PtrMemberAccess	en -> target		3444641	0					
ANR	3444823	Identifier	en		3444641	0					
ANR	3444824	Identifier	target		3444641	1					
ANR	3444825	BreakStatement	break ;	2002:1:46805:46810	3444641	6	True				
ANR	3444826	Label	default :	2003:6:46818:46825	3444641	7	True				
ANR	3444827	Identifier	default		3444641	0					
ANR	3444828	BreakStatement	break ;	2004:1:46828:46833	3444641	8	True				
ANR	3444829	BreakStatement	break ;	2007:4:46853:46858	3444641	12	True				
ANR	3444830	Label	case NT_BREF :	2009:2:46863:46875	3444641	13	True				
ANR	3444831	Identifier	NT_BREF		3444641	0					
ANR	3444832	Label	case NT_STR :	2010:2:46879:46890	3444641	14	True				
ANR	3444833	Identifier	NT_STR		3444641	0					
ANR	3444834	Label	case NT_CTYPE :	2011:2:46894:46907	3444641	15	True				
ANR	3444835	Identifier	NT_CTYPE		3444641	0					
ANR	3444836	Label	case NT_CCLASS :	2012:2:46911:46925	3444641	16	True				
ANR	3444837	Identifier	NT_CCLASS		3444641	0					
ANR	3444838	Label	case NT_CANY :	2013:2:46929:46941	3444641	17	True				
ANR	3444839	Identifier	NT_CANY		3444641	0					
ANR	3444840	Label	case NT_ANCHOR :	2014:2:46945:46959	3444641	18	True				
ANR	3444841	Identifier	NT_ANCHOR		3444641	0					
ANR	3444842	Label	default :	2015:2:46963:46970	3444641	19	True				
ANR	3444843	Identifier	default		3444641	0					
ANR	3444844	BreakStatement	break ;	2016:4:46976:46981	3444641	20	True				
ANR	3444845	ReturnStatement	return r ;	2019:2:46990:46998	3444641	2	True				
ANR	3444846	Identifier	r		3444641	0					
ANR	3444847	ReturnType	static int		3444641	1					
ANR	3444848	Identifier	quantifiers_memory_node_info		3444641	2					
ANR	3444849	ParameterList	Node * node		3444641	3					
ANR	3444850	Parameter	Node * node	1956:29:45891:45900	3444641	0	True				
ANR	3444851	ParameterType	Node *		3444641	0					
ANR	3444852	Identifier	node		3444641	1					
ANR	3444853	CFGEntryNode	ENTRY		3444641		True				
ANR	3444854	CFGExitNode	EXIT		3444641		True				
ANR	3444855	Symbol	* qn		3444641						
ANR	3444856	Symbol	IS_NOT_NULL		3444641						
ANR	3444857	Symbol	NCAR		3444641						
ANR	3444858	Symbol	NQ_TARGET_IS_EMPTY_MEM		3444641						
ANR	3444859	Symbol	NCALL		3444641						
ANR	3444860	Symbol	NCDR		3444641						
ANR	3444861	Symbol	quantifiers_memory_node_info		3444641						
ANR	3444862	Symbol	en		3444641						
ANR	3444863	Symbol	NQTFR		3444641						
ANR	3444864	Symbol	* en		3444641						
ANR	3444865	Symbol	qn -> target		3444641						
ANR	3444866	Symbol	node		3444641						
ANR	3444867	Symbol	qn -> upper		3444641						
ANR	3444868	Symbol	r		3444641						
ANR	3444869	Symbol	v		3444641						
ANR	3444870	Symbol	NENCLOSE		3444641						
ANR	3444871	Symbol	en -> target		3444641						
ANR	3444872	Symbol	en -> type		3444641						
ANR	3444873	Symbol	NCALL ( node ) -> target		3444641						
ANR	3444874	Symbol	IS_CALL_RECURSION		3444641						
ANR	3444875	Symbol	NTYPE		3444641						
ANR	3444876	Symbol	* NCALL		3444641						
ANR	3444877	Symbol	qn		3444641						
ANR	3444878	Symbol	NQ_TARGET_IS_EMPTY_REC		3444641						
ANR	3444879	Function	get_min_match_length	2023:0:47064:49551							
ANR	3444880	FunctionDef	"get_min_match_length (Node * node , OnigDistance * min , ScanEnv * env)"		3444879	0					
ANR	3444881	CompoundStatement		2025:0:47141:49551	3444879	0					
ANR	3444882	IdentifierDeclStatement	OnigDistance tmin ;	2026:2:47145:47162	3444879	0	True				
ANR	3444883	IdentifierDecl	tmin		3444879	0					
ANR	3444884	IdentifierDeclType	OnigDistance		3444879	0					
ANR	3444885	Identifier	tmin		3444879	1					
ANR	3444886	IdentifierDeclStatement	int r = 0 ;	2027:2:47166:47175	3444879	1	True				
ANR	3444887	IdentifierDecl	r = 0		3444879	0					
ANR	3444888	IdentifierDeclType	int		3444879	0					
ANR	3444889	Identifier	r		3444879	1					
ANR	3444890	AssignmentExpression	r = 0		3444879	2		=			
ANR	3444891	Identifier	r		3444879	0					
ANR	3444892	PrimaryExpression	0		3444879	1					
ANR	3444893	ExpressionStatement	* min = 0	2029:2:47180:47188	3444879	2	True				
ANR	3444894	AssignmentExpression	* min = 0		3444879	0		=			
ANR	3444895	UnaryOperationExpression	* min		3444879	0					
ANR	3444896	UnaryOperator	*		3444879	0					
ANR	3444897	Identifier	min		3444879	1					
ANR	3444898	PrimaryExpression	0		3444879	1					
ANR	3444899	SwitchStatement	switch ( NTYPE ( node ) )		3444879	3					
ANR	3444900	Condition	NTYPE ( node )	2030:10:47200:47210	3444879	0	True				
ANR	3444901	CallExpression	NTYPE ( node )		3444879	0					
ANR	3444902	Callee	NTYPE		3444879	0					
ANR	3444903	Identifier	NTYPE		3444879	0					
ANR	3444904	ArgumentList	node		3444879	1					
ANR	3444905	Argument	node		3444879	0					
ANR	3444906	Identifier	node		3444879	0					
ANR	3444907	CompoundStatement		6:23:71:71	3444879	1					
ANR	3444908	Label	case NT_BREF :	2031:2:47217:47229	3444879	0	True				
ANR	3444909	Identifier	NT_BREF		3444879	0					
ANR	3444910	CompoundStatement		12:6:177:203	3444879	1					
ANR	3444911	IdentifierDeclStatement	int i ;	2033:6:47243:47248	3444879	0	True				
ANR	3444912	IdentifierDecl	i		3444879	0					
ANR	3444913	IdentifierDeclType	int		3444879	0					
ANR	3444914	Identifier	i		3444879	1					
ANR	3444915	IdentifierDeclStatement	int * backs ;	2034:6:47256:47266	3444879	1	True				
ANR	3444916	IdentifierDecl	* backs		3444879	0					
ANR	3444917	IdentifierDeclType	int *		3444879	0					
ANR	3444918	Identifier	backs		3444879	1					
ANR	3444919	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	2035:6:47274:47311	3444879	2	True				
ANR	3444920	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		3444879	0					
ANR	3444921	IdentifierDeclType	Node * *		3444879	0					
ANR	3444922	Identifier	nodes		3444879	1					
ANR	3444923	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		3444879	2		=			
ANR	3444924	Identifier	nodes		3444879	0					
ANR	3444925	CallExpression	SCANENV_MEM_NODES ( env )		3444879	1					
ANR	3444926	Callee	SCANENV_MEM_NODES		3444879	0					
ANR	3444927	Identifier	SCANENV_MEM_NODES		3444879	0					
ANR	3444928	ArgumentList	env		3444879	1					
ANR	3444929	Argument	env		3444879	0					
ANR	3444930	Identifier	env		3444879	0					
ANR	3444931	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	2036:6:47319:47345	3444879	3	True				
ANR	3444932	IdentifierDecl	* br = NBREF ( node )		3444879	0					
ANR	3444933	IdentifierDeclType	BRefNode *		3444879	0					
ANR	3444934	Identifier	br		3444879	1					
ANR	3444935	AssignmentExpression	* br = NBREF ( node )		3444879	2		=			
ANR	3444936	Identifier	br		3444879	0					
ANR	3444937	CallExpression	NBREF ( node )		3444879	1					
ANR	3444938	Callee	NBREF		3444879	0					
ANR	3444939	Identifier	NBREF		3444879	0					
ANR	3444940	ArgumentList	node		3444879	1					
ANR	3444941	Argument	node		3444879	0					
ANR	3444942	Identifier	node		3444879	0					
ANR	3444943	IfStatement	if ( br -> state & NST_RECURSION )		3444879	4					
ANR	3444944	Condition	br -> state & NST_RECURSION	2037:10:47357:47381	3444879	0	True				
ANR	3444945	BitAndExpression	br -> state & NST_RECURSION		3444879	0		&			
ANR	3444946	PtrMemberAccess	br -> state		3444879	0					
ANR	3444947	Identifier	br		3444879	0					
ANR	3444948	Identifier	state		3444879	1					
ANR	3444949	Identifier	NST_RECURSION		3444879	1					
ANR	3444950	BreakStatement	break ;	2037:37:47384:47389	3444879	1	True				
ANR	3444951	ExpressionStatement	backs = BACKREFS_P ( br )	2039:6:47398:47420	3444879	5	True				
ANR	3444952	AssignmentExpression	backs = BACKREFS_P ( br )		3444879	0		=			
ANR	3444953	Identifier	backs		3444879	0					
ANR	3444954	CallExpression	BACKREFS_P ( br )		3444879	1					
ANR	3444955	Callee	BACKREFS_P		3444879	0					
ANR	3444956	Identifier	BACKREFS_P		3444879	0					
ANR	3444957	ArgumentList	br		3444879	1					
ANR	3444958	Argument	br		3444879	0					
ANR	3444959	Identifier	br		3444879	0					
ANR	3444960	IfStatement	if ( backs [ 0 ] > env -> num_mem )		3444879	6					
ANR	3444961	Condition	backs [ 0 ] > env -> num_mem	2040:10:47432:47454	3444879	0	True				
ANR	3444962	RelationalExpression	backs [ 0 ] > env -> num_mem		3444879	0		>			
ANR	3444963	ArrayIndexing	backs [ 0 ]		3444879	0					
ANR	3444964	Identifier	backs		3444879	0					
ANR	3444965	PrimaryExpression	0		3444879	1					
ANR	3444966	PtrMemberAccess	env -> num_mem		3444879	1					
ANR	3444967	Identifier	env		3444879	0					
ANR	3444968	Identifier	num_mem		3444879	1					
ANR	3444969	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	2040:36:47458:47488	3444879	1	True				
ANR	3444970	Identifier	ONIGERR_INVALID_BACKREF		3444879	0					
ANR	3444971	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , min , env )"	2041:6:47496:47547	3444879	7	True				
ANR	3444972	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , min , env )"		3444879	0		=			
ANR	3444973	Identifier	r		3444879	0					
ANR	3444974	CallExpression	"get_min_match_length ( nodes [ backs [ 0 ] ] , min , env )"		3444879	1					
ANR	3444975	Callee	get_min_match_length		3444879	0					
ANR	3444976	Identifier	get_min_match_length		3444879	0					
ANR	3444977	ArgumentList	nodes [ backs [ 0 ] ]		3444879	1					
ANR	3444978	Argument	nodes [ backs [ 0 ] ]		3444879	0					
ANR	3444979	ArrayIndexing	nodes [ backs [ 0 ] ]		3444879	0					
ANR	3444980	Identifier	nodes		3444879	0					
ANR	3444981	ArrayIndexing	backs [ 0 ]		3444879	1					
ANR	3444982	Identifier	backs		3444879	0					
ANR	3444983	PrimaryExpression	0		3444879	1					
ANR	3444984	Argument	min		3444879	1					
ANR	3444985	Identifier	min		3444879	0					
ANR	3444986	Argument	env		3444879	2					
ANR	3444987	Identifier	env		3444879	0					
ANR	3444988	IfStatement	if ( r != 0 )		3444879	8					
ANR	3444989	Condition	r != 0	2042:10:47559:47564	3444879	0	True				
ANR	3444990	EqualityExpression	r != 0		3444879	0		!=			
ANR	3444991	Identifier	r		3444879	0					
ANR	3444992	PrimaryExpression	0		3444879	1					
ANR	3444993	BreakStatement	break ;	2042:18:47567:47572	3444879	1	True				
ANR	3444994	ForStatement	for ( i = 1 ; i < br -> back_num ; i ++ )		3444879	9					
ANR	3444995	ForInit	i = 1 ;	2043:11:47585:47590	3444879	0	True				
ANR	3444996	AssignmentExpression	i = 1		3444879	0		=			
ANR	3444997	Identifier	i		3444879	0					
ANR	3444998	PrimaryExpression	1		3444879	1					
ANR	3444999	Condition	i < br -> back_num	2043:18:47592:47607	3444879	1	True				
ANR	3445000	RelationalExpression	i < br -> back_num		3444879	0		<			
ANR	3445001	Identifier	i		3444879	0					
ANR	3445002	PtrMemberAccess	br -> back_num		3444879	1					
ANR	3445003	Identifier	br		3444879	0					
ANR	3445004	Identifier	back_num		3444879	1					
ANR	3445005	PostIncDecOperationExpression	i ++	2043:36:47610:47612	3444879	2	True				
ANR	3445006	Identifier	i		3444879	0					
ANR	3445007	IncDec	++		3444879	1					
ANR	3445008	CompoundStatement		19:41:473:473	3444879	3					
ANR	3445009	IfStatement	if ( backs [ i ] > env -> num_mem )		3444879	0					
ANR	3445010	Condition	backs [ i ] > env -> num_mem	2044:5:47622:47644	3444879	0	True				
ANR	3445011	RelationalExpression	backs [ i ] > env -> num_mem		3444879	0		>			
ANR	3445012	ArrayIndexing	backs [ i ]		3444879	0					
ANR	3445013	Identifier	backs		3444879	0					
ANR	3445014	Identifier	i		3444879	1					
ANR	3445015	PtrMemberAccess	env -> num_mem		3444879	1					
ANR	3445016	Identifier	env		3444879	0					
ANR	3445017	Identifier	num_mem		3444879	1					
ANR	3445018	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	2044:31:47648:47678	3444879	1	True				
ANR	3445019	Identifier	ONIGERR_INVALID_BACKREF		3444879	0					
ANR	3445020	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env )"	2045:1:47681:47734	3444879	1	True				
ANR	3445021	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env )"		3444879	0		=			
ANR	3445022	Identifier	r		3444879	0					
ANR	3445023	CallExpression	"get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env )"		3444879	1					
ANR	3445024	Callee	get_min_match_length		3444879	0					
ANR	3445025	Identifier	get_min_match_length		3444879	0					
ANR	3445026	ArgumentList	nodes [ backs [ i ] ]		3444879	1					
ANR	3445027	Argument	nodes [ backs [ i ] ]		3444879	0					
ANR	3445028	ArrayIndexing	nodes [ backs [ i ] ]		3444879	0					
ANR	3445029	Identifier	nodes		3444879	0					
ANR	3445030	ArrayIndexing	backs [ i ]		3444879	1					
ANR	3445031	Identifier	backs		3444879	0					
ANR	3445032	Identifier	i		3444879	1					
ANR	3445033	Argument	& tmin		3444879	1					
ANR	3445034	UnaryOperationExpression	& tmin		3444879	0					
ANR	3445035	UnaryOperator	&		3444879	0					
ANR	3445036	Identifier	tmin		3444879	1					
ANR	3445037	Argument	env		3444879	2					
ANR	3445038	Identifier	env		3444879	0					
ANR	3445039	IfStatement	if ( r != 0 )		3444879	2					
ANR	3445040	Condition	r != 0	2046:5:47741:47746	3444879	0	True				
ANR	3445041	EqualityExpression	r != 0		3444879	0		!=			
ANR	3445042	Identifier	r		3444879	0					
ANR	3445043	PrimaryExpression	0		3444879	1					
ANR	3445044	BreakStatement	break ;	2046:13:47749:47754	3444879	1	True				
ANR	3445045	IfStatement	if ( * min > tmin )		3444879	3					
ANR	3445046	Condition	* min > tmin	2047:5:47761:47771	3444879	0	True				
ANR	3445047	RelationalExpression	* min > tmin		3444879	0		>			
ANR	3445048	UnaryOperationExpression	* min		3444879	0					
ANR	3445049	UnaryOperator	*		3444879	0					
ANR	3445050	Identifier	min		3444879	1					
ANR	3445051	Identifier	tmin		3444879	1					
ANR	3445052	ExpressionStatement	* min = tmin	2047:18:47774:47785	3444879	1	True				
ANR	3445053	AssignmentExpression	* min = tmin		3444879	0		=			
ANR	3445054	UnaryOperationExpression	* min		3444879	0					
ANR	3445055	UnaryOperator	*		3444879	0					
ANR	3445056	Identifier	min		3444879	1					
ANR	3445057	Identifier	tmin		3444879	1					
ANR	3445058	BreakStatement	break ;	2050:4:47805:47810	3444879	2	True				
ANR	3445059	Label	case NT_CALL :	2053:2:47838:47850	3444879	3	True				
ANR	3445060	Identifier	NT_CALL		3444879	0					
ANR	3445061	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		3444879	4					
ANR	3445062	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	2054:8:47860:47889	3444879	0	True				
ANR	3445063	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		3444879	0					
ANR	3445064	Callee	IS_CALL_RECURSION		3444879	0					
ANR	3445065	Identifier	IS_CALL_RECURSION		3444879	0					
ANR	3445066	ArgumentList	NCALL ( node )		3444879	1					
ANR	3445067	Argument	NCALL ( node )		3444879	0					
ANR	3445068	CallExpression	NCALL ( node )		3444879	0					
ANR	3445069	Callee	NCALL		3444879	0					
ANR	3445070	Identifier	NCALL		3444879	0					
ANR	3445071	ArgumentList	node		3444879	1					
ANR	3445072	Argument	node		3444879	0					
ANR	3445073	Identifier	node		3444879	0					
ANR	3445074	CompoundStatement		31:6:758:805	3444879	1					
ANR	3445075	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( NCALL ( node ) -> target ) ;	2055:6:47900:47947	3444879	0	True				
ANR	3445076	IdentifierDecl	* en = NENCLOSE ( NCALL ( node ) -> target )		3444879	0					
ANR	3445077	IdentifierDeclType	EncloseNode *		3444879	0					
ANR	3445078	Identifier	en		3444879	1					
ANR	3445079	AssignmentExpression	* en = NENCLOSE ( NCALL ( node ) -> target )		3444879	2		=			
ANR	3445080	Identifier	en		3444879	0					
ANR	3445081	CallExpression	NENCLOSE ( NCALL ( node ) -> target )		3444879	1					
ANR	3445082	Callee	NENCLOSE		3444879	0					
ANR	3445083	Identifier	NENCLOSE		3444879	0					
ANR	3445084	ArgumentList	NCALL ( node ) -> target		3444879	1					
ANR	3445085	Argument	NCALL ( node ) -> target		3444879	0					
ANR	3445086	PtrMemberAccess	NCALL ( node ) -> target		3444879	0					
ANR	3445087	CallExpression	NCALL ( node )		3444879	0					
ANR	3445088	Callee	NCALL		3444879	0					
ANR	3445089	Identifier	NCALL		3444879	0					
ANR	3445090	ArgumentList	node		3444879	1					
ANR	3445091	Argument	node		3444879	0					
ANR	3445092	Identifier	node		3444879	0					
ANR	3445093	Identifier	target		3444879	1					
ANR	3445094	IfStatement	if ( IS_ENCLOSE_MIN_FIXED ( en ) )		3444879	1					
ANR	3445095	Condition	IS_ENCLOSE_MIN_FIXED ( en )	2056:10:47959:47982	3444879	0	True				
ANR	3445096	CallExpression	IS_ENCLOSE_MIN_FIXED ( en )		3444879	0					
ANR	3445097	Callee	IS_ENCLOSE_MIN_FIXED		3444879	0					
ANR	3445098	Identifier	IS_ENCLOSE_MIN_FIXED		3444879	0					
ANR	3445099	ArgumentList	en		3444879	1					
ANR	3445100	Argument	en		3444879	0					
ANR	3445101	Identifier	en		3444879	0					
ANR	3445102	ExpressionStatement	* min = en -> min_len	2057:1:47986:48004	3444879	1	True				
ANR	3445103	AssignmentExpression	* min = en -> min_len		3444879	0		=			
ANR	3445104	UnaryOperationExpression	* min		3444879	0					
ANR	3445105	UnaryOperator	*		3444879	0					
ANR	3445106	Identifier	min		3444879	1					
ANR	3445107	PtrMemberAccess	en -> min_len		3444879	1					
ANR	3445108	Identifier	en		3444879	0					
ANR	3445109	Identifier	min_len		3444879	1					
ANR	3445110	ElseStatement	else		3444879	0					
ANR	3445111	ExpressionStatement	"r = get_min_match_length ( NCALL ( node ) -> target , min , env )"	2060:6:48027:48082	3444879	0	True				
ANR	3445112	AssignmentExpression	"r = get_min_match_length ( NCALL ( node ) -> target , min , env )"		3444879	0		=			
ANR	3445113	Identifier	r		3444879	0					
ANR	3445114	CallExpression	"get_min_match_length ( NCALL ( node ) -> target , min , env )"		3444879	1					
ANR	3445115	Callee	get_min_match_length		3444879	0					
ANR	3445116	Identifier	get_min_match_length		3444879	0					
ANR	3445117	ArgumentList	NCALL ( node ) -> target		3444879	1					
ANR	3445118	Argument	NCALL ( node ) -> target		3444879	0					
ANR	3445119	PtrMemberAccess	NCALL ( node ) -> target		3444879	0					
ANR	3445120	CallExpression	NCALL ( node )		3444879	0					
ANR	3445121	Callee	NCALL		3444879	0					
ANR	3445122	Identifier	NCALL		3444879	0					
ANR	3445123	ArgumentList	node		3444879	1					
ANR	3445124	Argument	node		3444879	0					
ANR	3445125	Identifier	node		3444879	0					
ANR	3445126	Identifier	target		3444879	1					
ANR	3445127	Argument	min		3444879	1					
ANR	3445128	Identifier	min		3444879	0					
ANR	3445129	Argument	env		3444879	2					
ANR	3445130	Identifier	env		3444879	0					
ANR	3445131	BreakStatement	break ;	2061:4:48088:48093	3444879	5	True				
ANR	3445132	Label	case NT_LIST :	2064:2:48105:48117	3444879	6	True				
ANR	3445133	Identifier	NT_LIST		3444879	0					
ANR	3445134	DoStatement	do		3444879	7					
ANR	3445135	CompoundStatement		41:7:984:984	3444879	0					
ANR	3445136	ExpressionStatement	"r = get_min_match_length ( NCAR ( node ) , & tmin , env )"	2066:6:48134:48182	3444879	0	True				
ANR	3445137	AssignmentExpression	"r = get_min_match_length ( NCAR ( node ) , & tmin , env )"		3444879	0		=			
ANR	3445138	Identifier	r		3444879	0					
ANR	3445139	CallExpression	"get_min_match_length ( NCAR ( node ) , & tmin , env )"		3444879	1					
ANR	3445140	Callee	get_min_match_length		3444879	0					
ANR	3445141	Identifier	get_min_match_length		3444879	0					
ANR	3445142	ArgumentList	NCAR ( node )		3444879	1					
ANR	3445143	Argument	NCAR ( node )		3444879	0					
ANR	3445144	CallExpression	NCAR ( node )		3444879	0					
ANR	3445145	Callee	NCAR		3444879	0					
ANR	3445146	Identifier	NCAR		3444879	0					
ANR	3445147	ArgumentList	node		3444879	1					
ANR	3445148	Argument	node		3444879	0					
ANR	3445149	Identifier	node		3444879	0					
ANR	3445150	Argument	& tmin		3444879	1					
ANR	3445151	UnaryOperationExpression	& tmin		3444879	0					
ANR	3445152	UnaryOperator	&		3444879	0					
ANR	3445153	Identifier	tmin		3444879	1					
ANR	3445154	Argument	env		3444879	2					
ANR	3445155	Identifier	env		3444879	0					
ANR	3445156	IfStatement	if ( r == 0 )		3444879	1					
ANR	3445157	Condition	r == 0	2067:10:48194:48199	3444879	0	True				
ANR	3445158	EqualityExpression	r == 0		3444879	0		==			
ANR	3445159	Identifier	r		3444879	0					
ANR	3445160	PrimaryExpression	0		3444879	1					
ANR	3445161	ExpressionStatement	* min += tmin	2067:18:48202:48214	3444879	1	True				
ANR	3445162	AssignmentExpression	* min += tmin		3444879	0		+=			
ANR	3445163	UnaryOperationExpression	* min		3444879	0					
ANR	3445164	UnaryOperator	*		3444879	0					
ANR	3445165	Identifier	min		3444879	1					
ANR	3445166	Identifier	tmin		3444879	1					
ANR	3445167	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2068:13:48229:48268	3444879	1	True				
ANR	3445168	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3444879	0		&&			
ANR	3445169	EqualityExpression	r == 0		3444879	0		==			
ANR	3445170	Identifier	r		3444879	0					
ANR	3445171	PrimaryExpression	0		3444879	1					
ANR	3445172	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3444879	1					
ANR	3445173	Callee	IS_NOT_NULL		3444879	0					
ANR	3445174	Identifier	IS_NOT_NULL		3444879	0					
ANR	3445175	ArgumentList	node = NCDR ( node )		3444879	1					
ANR	3445176	Argument	node = NCDR ( node )		3444879	0					
ANR	3445177	AssignmentExpression	node = NCDR ( node )		3444879	0		=			
ANR	3445178	Identifier	node		3444879	0					
ANR	3445179	CallExpression	NCDR ( node )		3444879	1					
ANR	3445180	Callee	NCDR		3444879	0					
ANR	3445181	Identifier	NCDR		3444879	0					
ANR	3445182	ArgumentList	node		3444879	1					
ANR	3445183	Argument	node		3444879	0					
ANR	3445184	Identifier	node		3444879	0					
ANR	3445185	BreakStatement	break ;	2069:4:48276:48281	3444879	8	True				
ANR	3445186	Label	case NT_ALT :	2071:2:48286:48297	3444879	9	True				
ANR	3445187	Identifier	NT_ALT		3444879	0					
ANR	3445188	CompoundStatement		49:6:1169:1180	3444879	10					
ANR	3445189	IdentifierDeclStatement	"Node * x , * y ;"	2073:6:48311:48322	3444879	0	True				
ANR	3445190	IdentifierDecl	* x		3444879	0					
ANR	3445191	IdentifierDeclType	Node *		3444879	0					
ANR	3445192	Identifier	x		3444879	1					
ANR	3445193	IdentifierDecl	* y		3444879	1					
ANR	3445194	IdentifierDeclType	Node *		3444879	0					
ANR	3445195	Identifier	y		3444879	1					
ANR	3445196	ExpressionStatement	y = node	2074:6:48330:48338	3444879	1	True				
ANR	3445197	AssignmentExpression	y = node		3444879	0		=			
ANR	3445198	Identifier	y		3444879	0					
ANR	3445199	Identifier	node		3444879	1					
ANR	3445200	DoStatement	do		3444879	2					
ANR	3445201	CompoundStatement		51:9:1207:1207	3444879	0					
ANR	3445202	ExpressionStatement	x = NCAR ( y )	2076:1:48352:48363	3444879	0	True				
ANR	3445203	AssignmentExpression	x = NCAR ( y )		3444879	0		=			
ANR	3445204	Identifier	x		3444879	0					
ANR	3445205	CallExpression	NCAR ( y )		3444879	1					
ANR	3445206	Callee	NCAR		3444879	0					
ANR	3445207	Identifier	NCAR		3444879	0					
ANR	3445208	ArgumentList	y		3444879	1					
ANR	3445209	Argument	y		3444879	0					
ANR	3445210	Identifier	y		3444879	0					
ANR	3445211	ExpressionStatement	"r = get_min_match_length ( x , & tmin , env )"	2077:1:48366:48405	3444879	1	True				
ANR	3445212	AssignmentExpression	"r = get_min_match_length ( x , & tmin , env )"		3444879	0		=			
ANR	3445213	Identifier	r		3444879	0					
ANR	3445214	CallExpression	"get_min_match_length ( x , & tmin , env )"		3444879	1					
ANR	3445215	Callee	get_min_match_length		3444879	0					
ANR	3445216	Identifier	get_min_match_length		3444879	0					
ANR	3445217	ArgumentList	x		3444879	1					
ANR	3445218	Argument	x		3444879	0					
ANR	3445219	Identifier	x		3444879	0					
ANR	3445220	Argument	& tmin		3444879	1					
ANR	3445221	UnaryOperationExpression	& tmin		3444879	0					
ANR	3445222	UnaryOperator	&		3444879	0					
ANR	3445223	Identifier	tmin		3444879	1					
ANR	3445224	Argument	env		3444879	2					
ANR	3445225	Identifier	env		3444879	0					
ANR	3445226	IfStatement	if ( r != 0 )		3444879	2					
ANR	3445227	Condition	r != 0	2078:5:48412:48417	3444879	0	True				
ANR	3445228	EqualityExpression	r != 0		3444879	0		!=			
ANR	3445229	Identifier	r		3444879	0					
ANR	3445230	PrimaryExpression	0		3444879	1					
ANR	3445231	BreakStatement	break ;	2078:13:48420:48425	3444879	1	True				
ANR	3445232	IfStatement	if ( y == node )		3444879	3					
ANR	3445233	Condition	y == node	2079:5:48432:48440	3444879	0	True				
ANR	3445234	EqualityExpression	y == node		3444879	0		==			
ANR	3445235	Identifier	y		3444879	0					
ANR	3445236	Identifier	node		3444879	1					
ANR	3445237	ExpressionStatement	* min = tmin	2079:16:48443:48454	3444879	1	True				
ANR	3445238	AssignmentExpression	* min = tmin		3444879	0		=			
ANR	3445239	UnaryOperationExpression	* min		3444879	0					
ANR	3445240	UnaryOperator	*		3444879	0					
ANR	3445241	Identifier	min		3444879	1					
ANR	3445242	Identifier	tmin		3444879	1					
ANR	3445243	ElseStatement	else		3444879	0					
ANR	3445244	IfStatement	if ( * min > tmin )		3444879	0					
ANR	3445245	Condition	* min > tmin	2080:10:48466:48476	3444879	0	True				
ANR	3445246	RelationalExpression	* min > tmin		3444879	0		>			
ANR	3445247	UnaryOperationExpression	* min		3444879	0					
ANR	3445248	UnaryOperator	*		3444879	0					
ANR	3445249	Identifier	min		3444879	1					
ANR	3445250	Identifier	tmin		3444879	1					
ANR	3445251	ExpressionStatement	* min = tmin	2080:23:48479:48490	3444879	1	True				
ANR	3445252	AssignmentExpression	* min = tmin		3444879	0		=			
ANR	3445253	UnaryOperationExpression	* min		3444879	0					
ANR	3445254	UnaryOperator	*		3444879	0					
ANR	3445255	Identifier	min		3444879	1					
ANR	3445256	Identifier	tmin		3444879	1					
ANR	3445257	Condition	r == 0 && IS_NOT_NULL ( y = NCDR ( y ) )	2081:15:48507:48540	3444879	1	True				
ANR	3445258	AndExpression	r == 0 && IS_NOT_NULL ( y = NCDR ( y ) )		3444879	0		&&			
ANR	3445259	EqualityExpression	r == 0		3444879	0		==			
ANR	3445260	Identifier	r		3444879	0					
ANR	3445261	PrimaryExpression	0		3444879	1					
ANR	3445262	CallExpression	IS_NOT_NULL ( y = NCDR ( y ) )		3444879	1					
ANR	3445263	Callee	IS_NOT_NULL		3444879	0					
ANR	3445264	Identifier	IS_NOT_NULL		3444879	0					
ANR	3445265	ArgumentList	y = NCDR ( y )		3444879	1					
ANR	3445266	Argument	y = NCDR ( y )		3444879	0					
ANR	3445267	AssignmentExpression	y = NCDR ( y )		3444879	0		=			
ANR	3445268	Identifier	y		3444879	0					
ANR	3445269	CallExpression	NCDR ( y )		3444879	1					
ANR	3445270	Callee	NCDR		3444879	0					
ANR	3445271	Identifier	NCDR		3444879	0					
ANR	3445272	ArgumentList	y		3444879	1					
ANR	3445273	Argument	y		3444879	0					
ANR	3445274	Identifier	y		3444879	0					
ANR	3445275	BreakStatement	break ;	2083:4:48554:48559	3444879	11	True				
ANR	3445276	Label	case NT_STR :	2085:2:48564:48575	3444879	12	True				
ANR	3445277	Identifier	NT_STR		3444879	0					
ANR	3445278	CompoundStatement		63:6:1447:1471	3444879	13					
ANR	3445279	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2087:6:48589:48613	3444879	0	True				
ANR	3445280	IdentifierDecl	* sn = NSTR ( node )		3444879	0					
ANR	3445281	IdentifierDeclType	StrNode *		3444879	0					
ANR	3445282	Identifier	sn		3444879	1					
ANR	3445283	AssignmentExpression	* sn = NSTR ( node )		3444879	2		=			
ANR	3445284	Identifier	sn		3444879	0					
ANR	3445285	CallExpression	NSTR ( node )		3444879	1					
ANR	3445286	Callee	NSTR		3444879	0					
ANR	3445287	Identifier	NSTR		3444879	0					
ANR	3445288	ArgumentList	node		3444879	1					
ANR	3445289	Argument	node		3444879	0					
ANR	3445290	Identifier	node		3444879	0					
ANR	3445291	ExpressionStatement	* min = sn -> end - sn -> s	2088:6:48621:48643	3444879	1	True				
ANR	3445292	AssignmentExpression	* min = sn -> end - sn -> s		3444879	0		=			
ANR	3445293	UnaryOperationExpression	* min		3444879	0					
ANR	3445294	UnaryOperator	*		3444879	0					
ANR	3445295	Identifier	min		3444879	1					
ANR	3445296	AdditiveExpression	sn -> end - sn -> s		3444879	1		-			
ANR	3445297	PtrMemberAccess	sn -> end		3444879	0					
ANR	3445298	Identifier	sn		3444879	0					
ANR	3445299	Identifier	end		3444879	1					
ANR	3445300	PtrMemberAccess	sn -> s		3444879	1					
ANR	3445301	Identifier	sn		3444879	0					
ANR	3445302	Identifier	s		3444879	1					
ANR	3445303	BreakStatement	break ;	2090:4:48655:48660	3444879	14	True				
ANR	3445304	Label	case NT_CTYPE :	2092:2:48665:48678	3444879	15	True				
ANR	3445305	Identifier	NT_CTYPE		3444879	0					
ANR	3445306	ExpressionStatement	* min = 1	2093:4:48684:48692	3444879	16	True				
ANR	3445307	AssignmentExpression	* min = 1		3444879	0		=			
ANR	3445308	UnaryOperationExpression	* min		3444879	0					
ANR	3445309	UnaryOperator	*		3444879	0					
ANR	3445310	Identifier	min		3444879	1					
ANR	3445311	PrimaryExpression	1		3444879	1					
ANR	3445312	BreakStatement	break ;	2094:4:48698:48703	3444879	17	True				
ANR	3445313	Label	case NT_CCLASS :	2096:2:48708:48722	3444879	18	True				
ANR	3445314	Identifier	NT_CCLASS		3444879	0					
ANR	3445315	Label	case NT_CANY :	2097:2:48726:48738	3444879	19	True				
ANR	3445316	Identifier	NT_CANY		3444879	0					
ANR	3445317	ExpressionStatement	* min = 1	2098:4:48744:48752	3444879	20	True				
ANR	3445318	AssignmentExpression	* min = 1		3444879	0		=			
ANR	3445319	UnaryOperationExpression	* min		3444879	0					
ANR	3445320	UnaryOperator	*		3444879	0					
ANR	3445321	Identifier	min		3444879	1					
ANR	3445322	PrimaryExpression	1		3444879	1					
ANR	3445323	BreakStatement	break ;	2099:4:48758:48763	3444879	21	True				
ANR	3445324	Label	case NT_QTFR :	2101:2:48768:48780	3444879	22	True				
ANR	3445325	Identifier	NT_QTFR		3444879	0					
ANR	3445326	CompoundStatement		79:6:1652:1678	3444879	23					
ANR	3445327	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2103:6:48794:48820	3444879	0	True				
ANR	3445328	IdentifierDecl	* qn = NQTFR ( node )		3444879	0					
ANR	3445329	IdentifierDeclType	QtfrNode *		3444879	0					
ANR	3445330	Identifier	qn		3444879	1					
ANR	3445331	AssignmentExpression	* qn = NQTFR ( node )		3444879	2		=			
ANR	3445332	Identifier	qn		3444879	0					
ANR	3445333	CallExpression	NQTFR ( node )		3444879	1					
ANR	3445334	Callee	NQTFR		3444879	0					
ANR	3445335	Identifier	NQTFR		3444879	0					
ANR	3445336	ArgumentList	node		3444879	1					
ANR	3445337	Argument	node		3444879	0					
ANR	3445338	Identifier	node		3444879	0					
ANR	3445339	IfStatement	if ( qn -> lower > 0 )		3444879	1					
ANR	3445340	Condition	qn -> lower > 0	2105:10:48833:48845	3444879	0	True				
ANR	3445341	RelationalExpression	qn -> lower > 0		3444879	0		>			
ANR	3445342	PtrMemberAccess	qn -> lower		3444879	0					
ANR	3445343	Identifier	qn		3444879	0					
ANR	3445344	Identifier	lower		3444879	1					
ANR	3445345	PrimaryExpression	0		3444879	1					
ANR	3445346	CompoundStatement		81:25:1706:1706	3444879	1					
ANR	3445347	ExpressionStatement	"r = get_min_match_length ( qn -> target , min , env )"	2106:1:48851:48897	3444879	0	True				
ANR	3445348	AssignmentExpression	"r = get_min_match_length ( qn -> target , min , env )"		3444879	0		=			
ANR	3445349	Identifier	r		3444879	0					
ANR	3445350	CallExpression	"get_min_match_length ( qn -> target , min , env )"		3444879	1					
ANR	3445351	Callee	get_min_match_length		3444879	0					
ANR	3445352	Identifier	get_min_match_length		3444879	0					
ANR	3445353	ArgumentList	qn -> target		3444879	1					
ANR	3445354	Argument	qn -> target		3444879	0					
ANR	3445355	PtrMemberAccess	qn -> target		3444879	0					
ANR	3445356	Identifier	qn		3444879	0					
ANR	3445357	Identifier	target		3444879	1					
ANR	3445358	Argument	min		3444879	1					
ANR	3445359	Identifier	min		3444879	0					
ANR	3445360	Argument	env		3444879	2					
ANR	3445361	Identifier	env		3444879	0					
ANR	3445362	IfStatement	if ( r == 0 )		3444879	1					
ANR	3445363	Condition	r == 0	2107:5:48904:48909	3444879	0	True				
ANR	3445364	EqualityExpression	r == 0		3444879	0		==			
ANR	3445365	Identifier	r		3444879	0					
ANR	3445366	PrimaryExpression	0		3444879	1					
ANR	3445367	ExpressionStatement	"* min = distance_multiply ( * min , qn -> lower )"	2108:3:48915:48956	3444879	1	True				
ANR	3445368	AssignmentExpression	"* min = distance_multiply ( * min , qn -> lower )"		3444879	0		=			
ANR	3445369	UnaryOperationExpression	* min		3444879	0					
ANR	3445370	UnaryOperator	*		3444879	0					
ANR	3445371	Identifier	min		3444879	1					
ANR	3445372	CallExpression	"distance_multiply ( * min , qn -> lower )"		3444879	1					
ANR	3445373	Callee	distance_multiply		3444879	0					
ANR	3445374	Identifier	distance_multiply		3444879	0					
ANR	3445375	ArgumentList	* min		3444879	1					
ANR	3445376	Argument	* min		3444879	0					
ANR	3445377	UnaryOperationExpression	* min		3444879	0					
ANR	3445378	UnaryOperator	*		3444879	0					
ANR	3445379	Identifier	min		3444879	1					
ANR	3445380	Argument	qn -> lower		3444879	1					
ANR	3445381	PtrMemberAccess	qn -> lower		3444879	0					
ANR	3445382	Identifier	qn		3444879	0					
ANR	3445383	Identifier	lower		3444879	1					
ANR	3445384	BreakStatement	break ;	2111:4:48976:48981	3444879	24	True				
ANR	3445385	Label	case NT_ENCLOSE :	2113:2:48986:49001	3444879	25	True				
ANR	3445386	Identifier	NT_ENCLOSE		3444879	0					
ANR	3445387	CompoundStatement		91:6:1873:1905	3444879	26					
ANR	3445388	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2115:6:49015:49047	3444879	0	True				
ANR	3445389	IdentifierDecl	* en = NENCLOSE ( node )		3444879	0					
ANR	3445390	IdentifierDeclType	EncloseNode *		3444879	0					
ANR	3445391	Identifier	en		3444879	1					
ANR	3445392	AssignmentExpression	* en = NENCLOSE ( node )		3444879	2		=			
ANR	3445393	Identifier	en		3444879	0					
ANR	3445394	CallExpression	NENCLOSE ( node )		3444879	1					
ANR	3445395	Callee	NENCLOSE		3444879	0					
ANR	3445396	Identifier	NENCLOSE		3444879	0					
ANR	3445397	ArgumentList	node		3444879	1					
ANR	3445398	Argument	node		3444879	0					
ANR	3445399	Identifier	node		3444879	0					
ANR	3445400	SwitchStatement	switch ( en -> type )		3444879	1					
ANR	3445401	Condition	en -> type	2116:14:49063:49070	3444879	0	True				
ANR	3445402	PtrMemberAccess	en -> type		3444879	0					
ANR	3445403	Identifier	en		3444879	0					
ANR	3445404	Identifier	type		3444879	1					
ANR	3445405	CompoundStatement		92:24:1931:1931	3444879	1					
ANR	3445406	Label	case ENCLOSE_MEMORY :	2117:6:49081:49100	3444879	0	True				
ANR	3445407	Identifier	ENCLOSE_MEMORY		3444879	0					
ANR	3445408	IfStatement	if ( IS_ENCLOSE_MIN_FIXED ( en ) )		3444879	1					
ANR	3445409	Condition	IS_ENCLOSE_MIN_FIXED ( en )	2119:5:49130:49153	3444879	0	True				
ANR	3445410	CallExpression	IS_ENCLOSE_MIN_FIXED ( en )		3444879	0					
ANR	3445411	Callee	IS_ENCLOSE_MIN_FIXED		3444879	0					
ANR	3445412	Identifier	IS_ENCLOSE_MIN_FIXED		3444879	0					
ANR	3445413	ArgumentList	en		3444879	1					
ANR	3445414	Argument	en		3444879	0					
ANR	3445415	Identifier	en		3444879	0					
ANR	3445416	ExpressionStatement	* min = en -> min_len	2120:3:49159:49177	3444879	1	True				
ANR	3445417	AssignmentExpression	* min = en -> min_len		3444879	0		=			
ANR	3445418	UnaryOperationExpression	* min		3444879	0					
ANR	3445419	UnaryOperator	*		3444879	0					
ANR	3445420	Identifier	min		3444879	1					
ANR	3445421	PtrMemberAccess	en -> min_len		3444879	1					
ANR	3445422	Identifier	en		3444879	0					
ANR	3445423	Identifier	min_len		3444879	1					
ANR	3445424	ElseStatement	else		3444879	0					
ANR	3445425	CompoundStatement		97:6:2043:2043	3444879	0					
ANR	3445426	ExpressionStatement	"r = get_min_match_length ( en -> target , min , env )"	2122:3:49190:49236	3444879	0	True				
ANR	3445427	AssignmentExpression	"r = get_min_match_length ( en -> target , min , env )"		3444879	0		=			
ANR	3445428	Identifier	r		3444879	0					
ANR	3445429	CallExpression	"get_min_match_length ( en -> target , min , env )"		3444879	1					
ANR	3445430	Callee	get_min_match_length		3444879	0					
ANR	3445431	Identifier	get_min_match_length		3444879	0					
ANR	3445432	ArgumentList	en -> target		3444879	1					
ANR	3445433	Argument	en -> target		3444879	0					
ANR	3445434	PtrMemberAccess	en -> target		3444879	0					
ANR	3445435	Identifier	en		3444879	0					
ANR	3445436	Identifier	target		3444879	1					
ANR	3445437	Argument	min		3444879	1					
ANR	3445438	Identifier	min		3444879	0					
ANR	3445439	Argument	env		3444879	2					
ANR	3445440	Identifier	env		3444879	0					
ANR	3445441	IfStatement	if ( r == 0 )		3444879	1					
ANR	3445442	Condition	r == 0	2123:7:49245:49250	3444879	0	True				
ANR	3445443	EqualityExpression	r == 0		3444879	0		==			
ANR	3445444	Identifier	r		3444879	0					
ANR	3445445	PrimaryExpression	0		3444879	1					
ANR	3445446	CompoundStatement		99:15:2111:2111	3444879	1					
ANR	3445447	ExpressionStatement	en -> min_len = * min	2124:5:49260:49278	3444879	0	True				
ANR	3445448	AssignmentExpression	en -> min_len = * min		3444879	0		=			
ANR	3445449	PtrMemberAccess	en -> min_len		3444879	0					
ANR	3445450	Identifier	en		3444879	0					
ANR	3445451	Identifier	min_len		3444879	1					
ANR	3445452	UnaryOperationExpression	* min		3444879	1					
ANR	3445453	UnaryOperator	*		3444879	0					
ANR	3445454	Identifier	min		3444879	1					
ANR	3445455	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MIN_FIXED )"	2125:5:49285:49324	3444879	1	True				
ANR	3445456	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MIN_FIXED )"		3444879	0					
ANR	3445457	Callee	SET_ENCLOSE_STATUS		3444879	0					
ANR	3445458	Identifier	SET_ENCLOSE_STATUS		3444879	0					
ANR	3445459	ArgumentList	node		3444879	1					
ANR	3445460	Argument	node		3444879	0					
ANR	3445461	Identifier	node		3444879	0					
ANR	3445462	Argument	NST_MIN_FIXED		3444879	1					
ANR	3445463	Identifier	NST_MIN_FIXED		3444879	0					
ANR	3445464	BreakStatement	break ;	2128:1:49335:49340	3444879	2	True				
ANR	3445465	Label	case ENCLOSE_OPTION :	2130:6:49355:49374	3444879	3	True				
ANR	3445466	Identifier	ENCLOSE_OPTION		3444879	0					
ANR	3445467	Label	case ENCLOSE_STOP_BACKTRACK :	2131:6:49382:49409	3444879	4	True				
ANR	3445468	Identifier	ENCLOSE_STOP_BACKTRACK		3444879	0					
ANR	3445469	ExpressionStatement	"r = get_min_match_length ( en -> target , min , env )"	2132:1:49412:49458	3444879	5	True				
ANR	3445470	AssignmentExpression	"r = get_min_match_length ( en -> target , min , env )"		3444879	0		=			
ANR	3445471	Identifier	r		3444879	0					
ANR	3445472	CallExpression	"get_min_match_length ( en -> target , min , env )"		3444879	1					
ANR	3445473	Callee	get_min_match_length		3444879	0					
ANR	3445474	Identifier	get_min_match_length		3444879	0					
ANR	3445475	ArgumentList	en -> target		3444879	1					
ANR	3445476	Argument	en -> target		3444879	0					
ANR	3445477	PtrMemberAccess	en -> target		3444879	0					
ANR	3445478	Identifier	en		3444879	0					
ANR	3445479	Identifier	target		3444879	1					
ANR	3445480	Argument	min		3444879	1					
ANR	3445481	Identifier	min		3444879	0					
ANR	3445482	Argument	env		3444879	2					
ANR	3445483	Identifier	env		3444879	0					
ANR	3445484	BreakStatement	break ;	2133:1:49461:49466	3444879	6	True				
ANR	3445485	BreakStatement	break ;	2136:4:49486:49491	3444879	27	True				
ANR	3445486	Label	case NT_ANCHOR :	2138:2:49496:49510	3444879	28	True				
ANR	3445487	Identifier	NT_ANCHOR		3444879	0					
ANR	3445488	Label	default :	2139:2:49514:49521	3444879	29	True				
ANR	3445489	Identifier	default		3444879	0					
ANR	3445490	BreakStatement	break ;	2140:4:49527:49532	3444879	30	True				
ANR	3445491	ReturnStatement	return r ;	2143:2:49541:49549	3444879	4	True				
ANR	3445492	Identifier	r		3444879	0					
ANR	3445493	ReturnType	static int		3444879	1					
ANR	3445494	Identifier	get_min_match_length		3444879	2					
ANR	3445495	ParameterList	"Node * node , OnigDistance * min , ScanEnv * env"		3444879	3					
ANR	3445496	Parameter	Node * node	2024:21:47096:47105	3444879	0	True				
ANR	3445497	ParameterType	Node *		3444879	0					
ANR	3445498	Identifier	node		3444879	1					
ANR	3445499	Parameter	OnigDistance * min	2024:33:47108:47124	3444879	1	True				
ANR	3445500	ParameterType	OnigDistance *		3444879	0					
ANR	3445501	Identifier	min		3444879	1					
ANR	3445502	Parameter	ScanEnv * env	2024:52:47127:47138	3444879	2	True				
ANR	3445503	ParameterType	ScanEnv *		3444879	0					
ANR	3445504	Identifier	env		3444879	1					
ANR	3445505	CFGEntryNode	ENTRY		3444879		True				
ANR	3445506	CFGExitNode	EXIT		3444879		True				
ANR	3445507	Symbol	br -> back_num		3444879						
ANR	3445508	Symbol	NCAR		3444879						
ANR	3445509	Symbol	* sn		3444879						
ANR	3445510	Symbol	* backs		3444879						
ANR	3445511	Symbol	NQTFR		3444879						
ANR	3445512	Symbol	sn -> s		3444879						
ANR	3445513	Symbol	* br		3444879						
ANR	3445514	Symbol	en -> type		3444879						
ANR	3445515	Symbol	* nodes		3444879						
ANR	3445516	Symbol	SCANENV_MEM_NODES		3444879						
ANR	3445517	Symbol	qn		3444879						
ANR	3445518	Symbol	* * i		3444879						
ANR	3445519	Symbol	NCDR		3444879						
ANR	3445520	Symbol	NSTR		3444879						
ANR	3445521	Symbol	* env		3444879						
ANR	3445522	Symbol	en		3444879						
ANR	3445523	Symbol	NST_MIN_FIXED		3444879						
ANR	3445524	Symbol	qn -> target		3444879						
ANR	3445525	Symbol	distance_multiply		3444879						
ANR	3445526	Symbol	node		3444879						
ANR	3445527	Symbol	BACKREFS_P		3444879						
ANR	3445528	Symbol	get_min_match_length		3444879						
ANR	3445529	Symbol	IS_CALL_RECURSION		3444879						
ANR	3445530	Symbol	* min		3444879						
ANR	3445531	Symbol	en -> min_len		3444879						
ANR	3445532	Symbol	IS_ENCLOSE_MIN_FIXED		3444879						
ANR	3445533	Symbol	* qn		3444879						
ANR	3445534	Symbol	ONIGERR_INVALID_BACKREF		3444879						
ANR	3445535	Symbol	IS_NOT_NULL		3444879						
ANR	3445536	Symbol	NCALL		3444879						
ANR	3445537	Symbol	& tmin		3444879						
ANR	3445538	Symbol	* en		3444879						
ANR	3445539	Symbol	br		3444879						
ANR	3445540	Symbol	qn -> lower		3444879						
ANR	3445541	Symbol	min		3444879						
ANR	3445542	Symbol	* * backs		3444879						
ANR	3445543	Symbol	NBREF		3444879						
ANR	3445544	Symbol	NST_RECURSION		3444879						
ANR	3445545	Symbol	NENCLOSE		3444879						
ANR	3445546	Symbol	NCALL ( node ) -> target		3444879						
ANR	3445547	Symbol	sn		3444879						
ANR	3445548	Symbol	sn -> end		3444879						
ANR	3445549	Symbol	tmin		3444879						
ANR	3445550	Symbol	env -> num_mem		3444879						
ANR	3445551	Symbol	i		3444879						
ANR	3445552	Symbol	env		3444879						
ANR	3445553	Symbol	r		3444879						
ANR	3445554	Symbol	nodes		3444879						
ANR	3445555	Symbol	* i		3444879						
ANR	3445556	Symbol	en -> target		3444879						
ANR	3445557	Symbol	x		3444879						
ANR	3445558	Symbol	br -> state		3444879						
ANR	3445559	Symbol	y		3444879						
ANR	3445560	Symbol	NTYPE		3444879						
ANR	3445561	Symbol	* NCALL		3444879						
ANR	3445562	Symbol	backs		3444879						
ANR	3445563	Function	get_max_match_length	2146:0:49554:51955							
ANR	3445564	FunctionDef	"get_max_match_length (Node * node , OnigDistance * max , ScanEnv * env)"		3445563	0					
ANR	3445565	CompoundStatement		2148:0:49631:51955	3445563	0					
ANR	3445566	IdentifierDeclStatement	OnigDistance tmax ;	2149:2:49635:49652	3445563	0	True				
ANR	3445567	IdentifierDecl	tmax		3445563	0					
ANR	3445568	IdentifierDeclType	OnigDistance		3445563	0					
ANR	3445569	Identifier	tmax		3445563	1					
ANR	3445570	IdentifierDeclStatement	int r = 0 ;	2150:2:49656:49665	3445563	1	True				
ANR	3445571	IdentifierDecl	r = 0		3445563	0					
ANR	3445572	IdentifierDeclType	int		3445563	0					
ANR	3445573	Identifier	r		3445563	1					
ANR	3445574	AssignmentExpression	r = 0		3445563	2		=			
ANR	3445575	Identifier	r		3445563	0					
ANR	3445576	PrimaryExpression	0		3445563	1					
ANR	3445577	ExpressionStatement	* max = 0	2152:2:49670:49678	3445563	2	True				
ANR	3445578	AssignmentExpression	* max = 0		3445563	0		=			
ANR	3445579	UnaryOperationExpression	* max		3445563	0					
ANR	3445580	UnaryOperator	*		3445563	0					
ANR	3445581	Identifier	max		3445563	1					
ANR	3445582	PrimaryExpression	0		3445563	1					
ANR	3445583	SwitchStatement	switch ( NTYPE ( node ) )		3445563	3					
ANR	3445584	Condition	NTYPE ( node )	2153:10:49690:49700	3445563	0	True				
ANR	3445585	CallExpression	NTYPE ( node )		3445563	0					
ANR	3445586	Callee	NTYPE		3445563	0					
ANR	3445587	Identifier	NTYPE		3445563	0					
ANR	3445588	ArgumentList	node		3445563	1					
ANR	3445589	Argument	node		3445563	0					
ANR	3445590	Identifier	node		3445563	0					
ANR	3445591	CompoundStatement		6:23:71:71	3445563	1					
ANR	3445592	Label	case NT_LIST :	2154:2:49707:49719	3445563	0	True				
ANR	3445593	Identifier	NT_LIST		3445563	0					
ANR	3445594	DoStatement	do		3445563	1					
ANR	3445595	CompoundStatement		8:7:96:96	3445563	0					
ANR	3445596	ExpressionStatement	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"	2156:6:49736:49784	3445563	0	True				
ANR	3445597	AssignmentExpression	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"		3445563	0		=			
ANR	3445598	Identifier	r		3445563	0					
ANR	3445599	CallExpression	"get_max_match_length ( NCAR ( node ) , & tmax , env )"		3445563	1					
ANR	3445600	Callee	get_max_match_length		3445563	0					
ANR	3445601	Identifier	get_max_match_length		3445563	0					
ANR	3445602	ArgumentList	NCAR ( node )		3445563	1					
ANR	3445603	Argument	NCAR ( node )		3445563	0					
ANR	3445604	CallExpression	NCAR ( node )		3445563	0					
ANR	3445605	Callee	NCAR		3445563	0					
ANR	3445606	Identifier	NCAR		3445563	0					
ANR	3445607	ArgumentList	node		3445563	1					
ANR	3445608	Argument	node		3445563	0					
ANR	3445609	Identifier	node		3445563	0					
ANR	3445610	Argument	& tmax		3445563	1					
ANR	3445611	UnaryOperationExpression	& tmax		3445563	0					
ANR	3445612	UnaryOperator	&		3445563	0					
ANR	3445613	Identifier	tmax		3445563	1					
ANR	3445614	Argument	env		3445563	2					
ANR	3445615	Identifier	env		3445563	0					
ANR	3445616	IfStatement	if ( r == 0 )		3445563	1					
ANR	3445617	Condition	r == 0	2157:10:49796:49801	3445563	0	True				
ANR	3445618	EqualityExpression	r == 0		3445563	0		==			
ANR	3445619	Identifier	r		3445563	0					
ANR	3445620	PrimaryExpression	0		3445563	1					
ANR	3445621	ExpressionStatement	"* max = distance_add ( * max , tmax )"	2158:1:49805:49836	3445563	1	True				
ANR	3445622	AssignmentExpression	"* max = distance_add ( * max , tmax )"		3445563	0		=			
ANR	3445623	UnaryOperationExpression	* max		3445563	0					
ANR	3445624	UnaryOperator	*		3445563	0					
ANR	3445625	Identifier	max		3445563	1					
ANR	3445626	CallExpression	"distance_add ( * max , tmax )"		3445563	1					
ANR	3445627	Callee	distance_add		3445563	0					
ANR	3445628	Identifier	distance_add		3445563	0					
ANR	3445629	ArgumentList	* max		3445563	1					
ANR	3445630	Argument	* max		3445563	0					
ANR	3445631	UnaryOperationExpression	* max		3445563	0					
ANR	3445632	UnaryOperator	*		3445563	0					
ANR	3445633	Identifier	max		3445563	1					
ANR	3445634	Argument	tmax		3445563	1					
ANR	3445635	Identifier	tmax		3445563	0					
ANR	3445636	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2159:13:49851:49890	3445563	1	True				
ANR	3445637	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3445563	0		&&			
ANR	3445638	EqualityExpression	r == 0		3445563	0		==			
ANR	3445639	Identifier	r		3445563	0					
ANR	3445640	PrimaryExpression	0		3445563	1					
ANR	3445641	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3445563	1					
ANR	3445642	Callee	IS_NOT_NULL		3445563	0					
ANR	3445643	Identifier	IS_NOT_NULL		3445563	0					
ANR	3445644	ArgumentList	node = NCDR ( node )		3445563	1					
ANR	3445645	Argument	node = NCDR ( node )		3445563	0					
ANR	3445646	AssignmentExpression	node = NCDR ( node )		3445563	0		=			
ANR	3445647	Identifier	node		3445563	0					
ANR	3445648	CallExpression	NCDR ( node )		3445563	1					
ANR	3445649	Callee	NCDR		3445563	0					
ANR	3445650	Identifier	NCDR		3445563	0					
ANR	3445651	ArgumentList	node		3445563	1					
ANR	3445652	Argument	node		3445563	0					
ANR	3445653	Identifier	node		3445563	0					
ANR	3445654	BreakStatement	break ;	2160:4:49898:49903	3445563	2	True				
ANR	3445655	Label	case NT_ALT :	2162:2:49908:49919	3445563	3	True				
ANR	3445656	Identifier	NT_ALT		3445563	0					
ANR	3445657	DoStatement	do		3445563	4					
ANR	3445658	CompoundStatement		16:7:296:296	3445563	0					
ANR	3445659	ExpressionStatement	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"	2164:6:49936:49984	3445563	0	True				
ANR	3445660	AssignmentExpression	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"		3445563	0		=			
ANR	3445661	Identifier	r		3445563	0					
ANR	3445662	CallExpression	"get_max_match_length ( NCAR ( node ) , & tmax , env )"		3445563	1					
ANR	3445663	Callee	get_max_match_length		3445563	0					
ANR	3445664	Identifier	get_max_match_length		3445563	0					
ANR	3445665	ArgumentList	NCAR ( node )		3445563	1					
ANR	3445666	Argument	NCAR ( node )		3445563	0					
ANR	3445667	CallExpression	NCAR ( node )		3445563	0					
ANR	3445668	Callee	NCAR		3445563	0					
ANR	3445669	Identifier	NCAR		3445563	0					
ANR	3445670	ArgumentList	node		3445563	1					
ANR	3445671	Argument	node		3445563	0					
ANR	3445672	Identifier	node		3445563	0					
ANR	3445673	Argument	& tmax		3445563	1					
ANR	3445674	UnaryOperationExpression	& tmax		3445563	0					
ANR	3445675	UnaryOperator	&		3445563	0					
ANR	3445676	Identifier	tmax		3445563	1					
ANR	3445677	Argument	env		3445563	2					
ANR	3445678	Identifier	env		3445563	0					
ANR	3445679	IfStatement	if ( r == 0 && * max < tmax )		3445563	1					
ANR	3445680	Condition	r == 0 && * max < tmax	2165:10:49996:50016	3445563	0	True				
ANR	3445681	AndExpression	r == 0 && * max < tmax		3445563	0		&&			
ANR	3445682	EqualityExpression	r == 0		3445563	0		==			
ANR	3445683	Identifier	r		3445563	0					
ANR	3445684	PrimaryExpression	0		3445563	1					
ANR	3445685	RelationalExpression	* max < tmax		3445563	1		<			
ANR	3445686	UnaryOperationExpression	* max		3445563	0					
ANR	3445687	UnaryOperator	*		3445563	0					
ANR	3445688	Identifier	max		3445563	1					
ANR	3445689	Identifier	tmax		3445563	1					
ANR	3445690	ExpressionStatement	* max = tmax	2165:33:50019:50030	3445563	1	True				
ANR	3445691	AssignmentExpression	* max = tmax		3445563	0		=			
ANR	3445692	UnaryOperationExpression	* max		3445563	0					
ANR	3445693	UnaryOperator	*		3445563	0					
ANR	3445694	Identifier	max		3445563	1					
ANR	3445695	Identifier	tmax		3445563	1					
ANR	3445696	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2166:13:50045:50084	3445563	1	True				
ANR	3445697	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3445563	0		&&			
ANR	3445698	EqualityExpression	r == 0		3445563	0		==			
ANR	3445699	Identifier	r		3445563	0					
ANR	3445700	PrimaryExpression	0		3445563	1					
ANR	3445701	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3445563	1					
ANR	3445702	Callee	IS_NOT_NULL		3445563	0					
ANR	3445703	Identifier	IS_NOT_NULL		3445563	0					
ANR	3445704	ArgumentList	node = NCDR ( node )		3445563	1					
ANR	3445705	Argument	node = NCDR ( node )		3445563	0					
ANR	3445706	AssignmentExpression	node = NCDR ( node )		3445563	0		=			
ANR	3445707	Identifier	node		3445563	0					
ANR	3445708	CallExpression	NCDR ( node )		3445563	1					
ANR	3445709	Callee	NCDR		3445563	0					
ANR	3445710	Identifier	NCDR		3445563	0					
ANR	3445711	ArgumentList	node		3445563	1					
ANR	3445712	Argument	node		3445563	0					
ANR	3445713	Identifier	node		3445563	0					
ANR	3445714	BreakStatement	break ;	2167:4:50092:50097	3445563	5	True				
ANR	3445715	Label	case NT_STR :	2169:2:50102:50113	3445563	6	True				
ANR	3445716	Identifier	NT_STR		3445563	0					
ANR	3445717	CompoundStatement		24:6:495:519	3445563	7					
ANR	3445718	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2171:6:50127:50151	3445563	0	True				
ANR	3445719	IdentifierDecl	* sn = NSTR ( node )		3445563	0					
ANR	3445720	IdentifierDeclType	StrNode *		3445563	0					
ANR	3445721	Identifier	sn		3445563	1					
ANR	3445722	AssignmentExpression	* sn = NSTR ( node )		3445563	2		=			
ANR	3445723	Identifier	sn		3445563	0					
ANR	3445724	CallExpression	NSTR ( node )		3445563	1					
ANR	3445725	Callee	NSTR		3445563	0					
ANR	3445726	Identifier	NSTR		3445563	0					
ANR	3445727	ArgumentList	node		3445563	1					
ANR	3445728	Argument	node		3445563	0					
ANR	3445729	Identifier	node		3445563	0					
ANR	3445730	ExpressionStatement	* max = sn -> end - sn -> s	2172:6:50159:50181	3445563	1	True				
ANR	3445731	AssignmentExpression	* max = sn -> end - sn -> s		3445563	0		=			
ANR	3445732	UnaryOperationExpression	* max		3445563	0					
ANR	3445733	UnaryOperator	*		3445563	0					
ANR	3445734	Identifier	max		3445563	1					
ANR	3445735	AdditiveExpression	sn -> end - sn -> s		3445563	1		-			
ANR	3445736	PtrMemberAccess	sn -> end		3445563	0					
ANR	3445737	Identifier	sn		3445563	0					
ANR	3445738	Identifier	end		3445563	1					
ANR	3445739	PtrMemberAccess	sn -> s		3445563	1					
ANR	3445740	Identifier	sn		3445563	0					
ANR	3445741	Identifier	s		3445563	1					
ANR	3445742	BreakStatement	break ;	2174:4:50193:50198	3445563	8	True				
ANR	3445743	Label	case NT_CTYPE :	2176:2:50203:50216	3445563	9	True				
ANR	3445744	Identifier	NT_CTYPE		3445563	0					
ANR	3445745	ExpressionStatement	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )	2177:4:50222:50262	3445563	10	True				
ANR	3445746	AssignmentExpression	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3445563	0		=			
ANR	3445747	UnaryOperationExpression	* max		3445563	0					
ANR	3445748	UnaryOperator	*		3445563	0					
ANR	3445749	Identifier	max		3445563	1					
ANR	3445750	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3445563	1					
ANR	3445751	Callee	ONIGENC_MBC_MAXLEN_DIST		3445563	0					
ANR	3445752	Identifier	ONIGENC_MBC_MAXLEN_DIST		3445563	0					
ANR	3445753	ArgumentList	env -> enc		3445563	1					
ANR	3445754	Argument	env -> enc		3445563	0					
ANR	3445755	PtrMemberAccess	env -> enc		3445563	0					
ANR	3445756	Identifier	env		3445563	0					
ANR	3445757	Identifier	enc		3445563	1					
ANR	3445758	BreakStatement	break ;	2178:4:50268:50273	3445563	11	True				
ANR	3445759	Label	case NT_CCLASS :	2180:2:50278:50292	3445563	12	True				
ANR	3445760	Identifier	NT_CCLASS		3445563	0					
ANR	3445761	Label	case NT_CANY :	2181:2:50296:50308	3445563	13	True				
ANR	3445762	Identifier	NT_CANY		3445563	0					
ANR	3445763	ExpressionStatement	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )	2182:4:50314:50354	3445563	14	True				
ANR	3445764	AssignmentExpression	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3445563	0		=			
ANR	3445765	UnaryOperationExpression	* max		3445563	0					
ANR	3445766	UnaryOperator	*		3445563	0					
ANR	3445767	Identifier	max		3445563	1					
ANR	3445768	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3445563	1					
ANR	3445769	Callee	ONIGENC_MBC_MAXLEN_DIST		3445563	0					
ANR	3445770	Identifier	ONIGENC_MBC_MAXLEN_DIST		3445563	0					
ANR	3445771	ArgumentList	env -> enc		3445563	1					
ANR	3445772	Argument	env -> enc		3445563	0					
ANR	3445773	PtrMemberAccess	env -> enc		3445563	0					
ANR	3445774	Identifier	env		3445563	0					
ANR	3445775	Identifier	enc		3445563	1					
ANR	3445776	BreakStatement	break ;	2183:4:50360:50365	3445563	15	True				
ANR	3445777	Label	case NT_BREF :	2185:2:50370:50382	3445563	16	True				
ANR	3445778	Identifier	NT_BREF		3445563	0					
ANR	3445779	CompoundStatement		43:6:840:866	3445563	17					
ANR	3445780	IdentifierDeclStatement	int i ;	2187:6:50396:50401	3445563	0	True				
ANR	3445781	IdentifierDecl	i		3445563	0					
ANR	3445782	IdentifierDeclType	int		3445563	0					
ANR	3445783	Identifier	i		3445563	1					
ANR	3445784	IdentifierDeclStatement	int * backs ;	2188:6:50409:50419	3445563	1	True				
ANR	3445785	IdentifierDecl	* backs		3445563	0					
ANR	3445786	IdentifierDeclType	int *		3445563	0					
ANR	3445787	Identifier	backs		3445563	1					
ANR	3445788	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	2189:6:50427:50464	3445563	2	True				
ANR	3445789	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		3445563	0					
ANR	3445790	IdentifierDeclType	Node * *		3445563	0					
ANR	3445791	Identifier	nodes		3445563	1					
ANR	3445792	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		3445563	2		=			
ANR	3445793	Identifier	nodes		3445563	0					
ANR	3445794	CallExpression	SCANENV_MEM_NODES ( env )		3445563	1					
ANR	3445795	Callee	SCANENV_MEM_NODES		3445563	0					
ANR	3445796	Identifier	SCANENV_MEM_NODES		3445563	0					
ANR	3445797	ArgumentList	env		3445563	1					
ANR	3445798	Argument	env		3445563	0					
ANR	3445799	Identifier	env		3445563	0					
ANR	3445800	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	2190:6:50472:50498	3445563	3	True				
ANR	3445801	IdentifierDecl	* br = NBREF ( node )		3445563	0					
ANR	3445802	IdentifierDeclType	BRefNode *		3445563	0					
ANR	3445803	Identifier	br		3445563	1					
ANR	3445804	AssignmentExpression	* br = NBREF ( node )		3445563	2		=			
ANR	3445805	Identifier	br		3445563	0					
ANR	3445806	CallExpression	NBREF ( node )		3445563	1					
ANR	3445807	Callee	NBREF		3445563	0					
ANR	3445808	Identifier	NBREF		3445563	0					
ANR	3445809	ArgumentList	node		3445563	1					
ANR	3445810	Argument	node		3445563	0					
ANR	3445811	Identifier	node		3445563	0					
ANR	3445812	IfStatement	if ( br -> state & NST_RECURSION )		3445563	4					
ANR	3445813	Condition	br -> state & NST_RECURSION	2191:10:50510:50534	3445563	0	True				
ANR	3445814	BitAndExpression	br -> state & NST_RECURSION		3445563	0		&			
ANR	3445815	PtrMemberAccess	br -> state		3445563	0					
ANR	3445816	Identifier	br		3445563	0					
ANR	3445817	Identifier	state		3445563	1					
ANR	3445818	Identifier	NST_RECURSION		3445563	1					
ANR	3445819	CompoundStatement		44:37:905:905	3445563	1					
ANR	3445820	ExpressionStatement	* max = ONIG_INFINITE_DISTANCE	2192:1:50540:50569	3445563	0	True				
ANR	3445821	AssignmentExpression	* max = ONIG_INFINITE_DISTANCE		3445563	0		=			
ANR	3445822	UnaryOperationExpression	* max		3445563	0					
ANR	3445823	UnaryOperator	*		3445563	0					
ANR	3445824	Identifier	max		3445563	1					
ANR	3445825	Identifier	ONIG_INFINITE_DISTANCE		3445563	1					
ANR	3445826	BreakStatement	break ;	2193:1:50572:50577	3445563	1	True				
ANR	3445827	ExpressionStatement	backs = BACKREFS_P ( br )	2195:6:50593:50615	3445563	5	True				
ANR	3445828	AssignmentExpression	backs = BACKREFS_P ( br )		3445563	0		=			
ANR	3445829	Identifier	backs		3445563	0					
ANR	3445830	CallExpression	BACKREFS_P ( br )		3445563	1					
ANR	3445831	Callee	BACKREFS_P		3445563	0					
ANR	3445832	Identifier	BACKREFS_P		3445563	0					
ANR	3445833	ArgumentList	br		3445563	1					
ANR	3445834	Argument	br		3445563	0					
ANR	3445835	Identifier	br		3445563	0					
ANR	3445836	ForStatement	for ( i = 0 ; i < br -> back_num ; i ++ )		3445563	6					
ANR	3445837	ForInit	i = 0 ;	2196:11:50628:50633	3445563	0	True				
ANR	3445838	AssignmentExpression	i = 0		3445563	0		=			
ANR	3445839	Identifier	i		3445563	0					
ANR	3445840	PrimaryExpression	0		3445563	1					
ANR	3445841	Condition	i < br -> back_num	2196:18:50635:50650	3445563	1	True				
ANR	3445842	RelationalExpression	i < br -> back_num		3445563	0		<			
ANR	3445843	Identifier	i		3445563	0					
ANR	3445844	PtrMemberAccess	br -> back_num		3445563	1					
ANR	3445845	Identifier	br		3445563	0					
ANR	3445846	Identifier	back_num		3445563	1					
ANR	3445847	PostIncDecOperationExpression	i ++	2196:36:50653:50655	3445563	2	True				
ANR	3445848	Identifier	i		3445563	0					
ANR	3445849	IncDec	++		3445563	1					
ANR	3445850	CompoundStatement		49:41:1026:1026	3445563	3					
ANR	3445851	IfStatement	if ( backs [ i ] > env -> num_mem )		3445563	0					
ANR	3445852	Condition	backs [ i ] > env -> num_mem	2197:5:50665:50687	3445563	0	True				
ANR	3445853	RelationalExpression	backs [ i ] > env -> num_mem		3445563	0		>			
ANR	3445854	ArrayIndexing	backs [ i ]		3445563	0					
ANR	3445855	Identifier	backs		3445563	0					
ANR	3445856	Identifier	i		3445563	1					
ANR	3445857	PtrMemberAccess	env -> num_mem		3445563	1					
ANR	3445858	Identifier	env		3445563	0					
ANR	3445859	Identifier	num_mem		3445563	1					
ANR	3445860	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	2197:31:50691:50721	3445563	1	True				
ANR	3445861	Identifier	ONIGERR_INVALID_BACKREF		3445563	0					
ANR	3445862	ExpressionStatement	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env )"	2198:1:50724:50777	3445563	1	True				
ANR	3445863	AssignmentExpression	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env )"		3445563	0		=			
ANR	3445864	Identifier	r		3445563	0					
ANR	3445865	CallExpression	"get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env )"		3445563	1					
ANR	3445866	Callee	get_max_match_length		3445563	0					
ANR	3445867	Identifier	get_max_match_length		3445563	0					
ANR	3445868	ArgumentList	nodes [ backs [ i ] ]		3445563	1					
ANR	3445869	Argument	nodes [ backs [ i ] ]		3445563	0					
ANR	3445870	ArrayIndexing	nodes [ backs [ i ] ]		3445563	0					
ANR	3445871	Identifier	nodes		3445563	0					
ANR	3445872	ArrayIndexing	backs [ i ]		3445563	1					
ANR	3445873	Identifier	backs		3445563	0					
ANR	3445874	Identifier	i		3445563	1					
ANR	3445875	Argument	& tmax		3445563	1					
ANR	3445876	UnaryOperationExpression	& tmax		3445563	0					
ANR	3445877	UnaryOperator	&		3445563	0					
ANR	3445878	Identifier	tmax		3445563	1					
ANR	3445879	Argument	env		3445563	2					
ANR	3445880	Identifier	env		3445563	0					
ANR	3445881	IfStatement	if ( r != 0 )		3445563	2					
ANR	3445882	Condition	r != 0	2199:5:50784:50789	3445563	0	True				
ANR	3445883	EqualityExpression	r != 0		3445563	0		!=			
ANR	3445884	Identifier	r		3445563	0					
ANR	3445885	PrimaryExpression	0		3445563	1					
ANR	3445886	BreakStatement	break ;	2199:13:50792:50797	3445563	1	True				
ANR	3445887	IfStatement	if ( * max < tmax )		3445563	3					
ANR	3445888	Condition	* max < tmax	2200:5:50804:50814	3445563	0	True				
ANR	3445889	RelationalExpression	* max < tmax		3445563	0		<			
ANR	3445890	UnaryOperationExpression	* max		3445563	0					
ANR	3445891	UnaryOperator	*		3445563	0					
ANR	3445892	Identifier	max		3445563	1					
ANR	3445893	Identifier	tmax		3445563	1					
ANR	3445894	ExpressionStatement	* max = tmax	2200:18:50817:50828	3445563	1	True				
ANR	3445895	AssignmentExpression	* max = tmax		3445563	0		=			
ANR	3445896	UnaryOperationExpression	* max		3445563	0					
ANR	3445897	UnaryOperator	*		3445563	0					
ANR	3445898	Identifier	max		3445563	1					
ANR	3445899	Identifier	tmax		3445563	1					
ANR	3445900	BreakStatement	break ;	2203:4:50848:50853	3445563	18	True				
ANR	3445901	Label	case NT_CALL :	2206:2:50881:50893	3445563	19	True				
ANR	3445902	Identifier	NT_CALL		3445563	0					
ANR	3445903	IfStatement	if ( ! IS_CALL_RECURSION ( NCALL ( node ) ) )		3445563	20					
ANR	3445904	Condition	! IS_CALL_RECURSION ( NCALL ( node ) )	2207:8:50903:50934	3445563	0	True				
ANR	3445905	UnaryOperationExpression	! IS_CALL_RECURSION ( NCALL ( node ) )		3445563	0					
ANR	3445906	UnaryOperator	!		3445563	0					
ANR	3445907	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		3445563	1					
ANR	3445908	Callee	IS_CALL_RECURSION		3445563	0					
ANR	3445909	Identifier	IS_CALL_RECURSION		3445563	0					
ANR	3445910	ArgumentList	NCALL ( node )		3445563	1					
ANR	3445911	Argument	NCALL ( node )		3445563	0					
ANR	3445912	CallExpression	NCALL ( node )		3445563	0					
ANR	3445913	Callee	NCALL		3445563	0					
ANR	3445914	Identifier	NCALL		3445563	0					
ANR	3445915	ArgumentList	node		3445563	1					
ANR	3445916	Argument	node		3445563	0					
ANR	3445917	Identifier	node		3445563	0					
ANR	3445918	ExpressionStatement	"r = get_max_match_length ( NCALL ( node ) -> target , max , env )"	2208:6:50943:50998	3445563	1	True				
ANR	3445919	AssignmentExpression	"r = get_max_match_length ( NCALL ( node ) -> target , max , env )"		3445563	0		=			
ANR	3445920	Identifier	r		3445563	0					
ANR	3445921	CallExpression	"get_max_match_length ( NCALL ( node ) -> target , max , env )"		3445563	1					
ANR	3445922	Callee	get_max_match_length		3445563	0					
ANR	3445923	Identifier	get_max_match_length		3445563	0					
ANR	3445924	ArgumentList	NCALL ( node ) -> target		3445563	1					
ANR	3445925	Argument	NCALL ( node ) -> target		3445563	0					
ANR	3445926	PtrMemberAccess	NCALL ( node ) -> target		3445563	0					
ANR	3445927	CallExpression	NCALL ( node )		3445563	0					
ANR	3445928	Callee	NCALL		3445563	0					
ANR	3445929	Identifier	NCALL		3445563	0					
ANR	3445930	ArgumentList	node		3445563	1					
ANR	3445931	Argument	node		3445563	0					
ANR	3445932	Identifier	node		3445563	0					
ANR	3445933	Identifier	target		3445563	1					
ANR	3445934	Argument	max		3445563	1					
ANR	3445935	Identifier	max		3445563	0					
ANR	3445936	Argument	env		3445563	2					
ANR	3445937	Identifier	env		3445563	0					
ANR	3445938	ElseStatement	else		3445563	0					
ANR	3445939	ExpressionStatement	* max = ONIG_INFINITE_DISTANCE	2210:6:51015:51044	3445563	0	True				
ANR	3445940	AssignmentExpression	* max = ONIG_INFINITE_DISTANCE		3445563	0		=			
ANR	3445941	UnaryOperationExpression	* max		3445563	0					
ANR	3445942	UnaryOperator	*		3445563	0					
ANR	3445943	Identifier	max		3445563	1					
ANR	3445944	Identifier	ONIG_INFINITE_DISTANCE		3445563	1					
ANR	3445945	BreakStatement	break ;	2211:4:51050:51055	3445563	21	True				
ANR	3445946	Label	case NT_QTFR :	2214:2:51067:51079	3445563	22	True				
ANR	3445947	Identifier	NT_QTFR		3445563	0					
ANR	3445948	CompoundStatement		69:6:1461:1487	3445563	23					
ANR	3445949	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2216:6:51093:51119	3445563	0	True				
ANR	3445950	IdentifierDecl	* qn = NQTFR ( node )		3445563	0					
ANR	3445951	IdentifierDeclType	QtfrNode *		3445563	0					
ANR	3445952	Identifier	qn		3445563	1					
ANR	3445953	AssignmentExpression	* qn = NQTFR ( node )		3445563	2		=			
ANR	3445954	Identifier	qn		3445563	0					
ANR	3445955	CallExpression	NQTFR ( node )		3445563	1					
ANR	3445956	Callee	NQTFR		3445563	0					
ANR	3445957	Identifier	NQTFR		3445563	0					
ANR	3445958	ArgumentList	node		3445563	1					
ANR	3445959	Argument	node		3445563	0					
ANR	3445960	Identifier	node		3445563	0					
ANR	3445961	IfStatement	if ( qn -> upper != 0 )		3445563	1					
ANR	3445962	Condition	qn -> upper != 0	2218:10:51132:51145	3445563	0	True				
ANR	3445963	EqualityExpression	qn -> upper != 0		3445563	0		!=			
ANR	3445964	PtrMemberAccess	qn -> upper		3445563	0					
ANR	3445965	Identifier	qn		3445563	0					
ANR	3445966	Identifier	upper		3445563	1					
ANR	3445967	PrimaryExpression	0		3445563	1					
ANR	3445968	CompoundStatement		71:26:1516:1516	3445563	1					
ANR	3445969	ExpressionStatement	"r = get_max_match_length ( qn -> target , max , env )"	2219:1:51151:51197	3445563	0	True				
ANR	3445970	AssignmentExpression	"r = get_max_match_length ( qn -> target , max , env )"		3445563	0		=			
ANR	3445971	Identifier	r		3445563	0					
ANR	3445972	CallExpression	"get_max_match_length ( qn -> target , max , env )"		3445563	1					
ANR	3445973	Callee	get_max_match_length		3445563	0					
ANR	3445974	Identifier	get_max_match_length		3445563	0					
ANR	3445975	ArgumentList	qn -> target		3445563	1					
ANR	3445976	Argument	qn -> target		3445563	0					
ANR	3445977	PtrMemberAccess	qn -> target		3445563	0					
ANR	3445978	Identifier	qn		3445563	0					
ANR	3445979	Identifier	target		3445563	1					
ANR	3445980	Argument	max		3445563	1					
ANR	3445981	Identifier	max		3445563	0					
ANR	3445982	Argument	env		3445563	2					
ANR	3445983	Identifier	env		3445563	0					
ANR	3445984	IfStatement	if ( r == 0 && * max != 0 )		3445563	1					
ANR	3445985	Condition	r == 0 && * max != 0	2220:5:51204:51222	3445563	0	True				
ANR	3445986	AndExpression	r == 0 && * max != 0		3445563	0		&&			
ANR	3445987	EqualityExpression	r == 0		3445563	0		==			
ANR	3445988	Identifier	r		3445563	0					
ANR	3445989	PrimaryExpression	0		3445563	1					
ANR	3445990	EqualityExpression	* max != 0		3445563	1		!=			
ANR	3445991	UnaryOperationExpression	* max		3445563	0					
ANR	3445992	UnaryOperator	*		3445563	0					
ANR	3445993	Identifier	max		3445563	1					
ANR	3445994	PrimaryExpression	0		3445563	1					
ANR	3445995	CompoundStatement		73:26:1593:1593	3445563	1					
ANR	3445996	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> upper ) )		3445563	0					
ANR	3445997	Condition	! IS_REPEAT_INFINITE ( qn -> upper )	2221:7:51234:51264	3445563	0	True				
ANR	3445998	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> upper )		3445563	0					
ANR	3445999	UnaryOperator	!		3445563	0					
ANR	3446000	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3445563	1					
ANR	3446001	Callee	IS_REPEAT_INFINITE		3445563	0					
ANR	3446002	Identifier	IS_REPEAT_INFINITE		3445563	0					
ANR	3446003	ArgumentList	qn -> upper		3445563	1					
ANR	3446004	Argument	qn -> upper		3445563	0					
ANR	3446005	PtrMemberAccess	qn -> upper		3445563	0					
ANR	3446006	Identifier	qn		3445563	0					
ANR	3446007	Identifier	upper		3445563	1					
ANR	3446008	ExpressionStatement	"* max = distance_multiply ( * max , qn -> upper )"	2222:5:51272:51313	3445563	1	True				
ANR	3446009	AssignmentExpression	"* max = distance_multiply ( * max , qn -> upper )"		3445563	0		=			
ANR	3446010	UnaryOperationExpression	* max		3445563	0					
ANR	3446011	UnaryOperator	*		3445563	0					
ANR	3446012	Identifier	max		3445563	1					
ANR	3446013	CallExpression	"distance_multiply ( * max , qn -> upper )"		3445563	1					
ANR	3446014	Callee	distance_multiply		3445563	0					
ANR	3446015	Identifier	distance_multiply		3445563	0					
ANR	3446016	ArgumentList	* max		3445563	1					
ANR	3446017	Argument	* max		3445563	0					
ANR	3446018	UnaryOperationExpression	* max		3445563	0					
ANR	3446019	UnaryOperator	*		3445563	0					
ANR	3446020	Identifier	max		3445563	1					
ANR	3446021	Argument	qn -> upper		3445563	1					
ANR	3446022	PtrMemberAccess	qn -> upper		3445563	0					
ANR	3446023	Identifier	qn		3445563	0					
ANR	3446024	Identifier	upper		3445563	1					
ANR	3446025	ElseStatement	else		3445563	0					
ANR	3446026	ExpressionStatement	* max = ONIG_INFINITE_DISTANCE	2224:5:51328:51357	3445563	0	True				
ANR	3446027	AssignmentExpression	* max = ONIG_INFINITE_DISTANCE		3445563	0		=			
ANR	3446028	UnaryOperationExpression	* max		3445563	0					
ANR	3446029	UnaryOperator	*		3445563	0					
ANR	3446030	Identifier	max		3445563	1					
ANR	3446031	Identifier	ONIG_INFINITE_DISTANCE		3445563	1					
ANR	3446032	BreakStatement	break ;	2228:4:51380:51385	3445563	24	True				
ANR	3446033	Label	case NT_ENCLOSE :	2230:2:51390:51405	3445563	25	True				
ANR	3446034	Identifier	NT_ENCLOSE		3445563	0					
ANR	3446035	CompoundStatement		85:6:1787:1819	3445563	26					
ANR	3446036	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2232:6:51419:51451	3445563	0	True				
ANR	3446037	IdentifierDecl	* en = NENCLOSE ( node )		3445563	0					
ANR	3446038	IdentifierDeclType	EncloseNode *		3445563	0					
ANR	3446039	Identifier	en		3445563	1					
ANR	3446040	AssignmentExpression	* en = NENCLOSE ( node )		3445563	2		=			
ANR	3446041	Identifier	en		3445563	0					
ANR	3446042	CallExpression	NENCLOSE ( node )		3445563	1					
ANR	3446043	Callee	NENCLOSE		3445563	0					
ANR	3446044	Identifier	NENCLOSE		3445563	0					
ANR	3446045	ArgumentList	node		3445563	1					
ANR	3446046	Argument	node		3445563	0					
ANR	3446047	Identifier	node		3445563	0					
ANR	3446048	SwitchStatement	switch ( en -> type )		3445563	1					
ANR	3446049	Condition	en -> type	2233:14:51467:51474	3445563	0	True				
ANR	3446050	PtrMemberAccess	en -> type		3445563	0					
ANR	3446051	Identifier	en		3445563	0					
ANR	3446052	Identifier	type		3445563	1					
ANR	3446053	CompoundStatement		86:24:1845:1845	3445563	1					
ANR	3446054	Label	case ENCLOSE_MEMORY :	2234:6:51485:51504	3445563	0	True				
ANR	3446055	Identifier	ENCLOSE_MEMORY		3445563	0					
ANR	3446056	IfStatement	if ( IS_ENCLOSE_MAX_FIXED ( en ) )		3445563	1					
ANR	3446057	Condition	IS_ENCLOSE_MAX_FIXED ( en )	2236:5:51534:51557	3445563	0	True				
ANR	3446058	CallExpression	IS_ENCLOSE_MAX_FIXED ( en )		3445563	0					
ANR	3446059	Callee	IS_ENCLOSE_MAX_FIXED		3445563	0					
ANR	3446060	Identifier	IS_ENCLOSE_MAX_FIXED		3445563	0					
ANR	3446061	ArgumentList	en		3445563	1					
ANR	3446062	Argument	en		3445563	0					
ANR	3446063	Identifier	en		3445563	0					
ANR	3446064	ExpressionStatement	* max = en -> max_len	2237:3:51563:51581	3445563	1	True				
ANR	3446065	AssignmentExpression	* max = en -> max_len		3445563	0		=			
ANR	3446066	UnaryOperationExpression	* max		3445563	0					
ANR	3446067	UnaryOperator	*		3445563	0					
ANR	3446068	Identifier	max		3445563	1					
ANR	3446069	PtrMemberAccess	en -> max_len		3445563	1					
ANR	3446070	Identifier	en		3445563	0					
ANR	3446071	Identifier	max_len		3445563	1					
ANR	3446072	ElseStatement	else		3445563	0					
ANR	3446073	CompoundStatement		91:6:1957:1957	3445563	0					
ANR	3446074	ExpressionStatement	"r = get_max_match_length ( en -> target , max , env )"	2239:3:51594:51640	3445563	0	True				
ANR	3446075	AssignmentExpression	"r = get_max_match_length ( en -> target , max , env )"		3445563	0		=			
ANR	3446076	Identifier	r		3445563	0					
ANR	3446077	CallExpression	"get_max_match_length ( en -> target , max , env )"		3445563	1					
ANR	3446078	Callee	get_max_match_length		3445563	0					
ANR	3446079	Identifier	get_max_match_length		3445563	0					
ANR	3446080	ArgumentList	en -> target		3445563	1					
ANR	3446081	Argument	en -> target		3445563	0					
ANR	3446082	PtrMemberAccess	en -> target		3445563	0					
ANR	3446083	Identifier	en		3445563	0					
ANR	3446084	Identifier	target		3445563	1					
ANR	3446085	Argument	max		3445563	1					
ANR	3446086	Identifier	max		3445563	0					
ANR	3446087	Argument	env		3445563	2					
ANR	3446088	Identifier	env		3445563	0					
ANR	3446089	IfStatement	if ( r == 0 )		3445563	1					
ANR	3446090	Condition	r == 0	2240:7:51649:51654	3445563	0	True				
ANR	3446091	EqualityExpression	r == 0		3445563	0		==			
ANR	3446092	Identifier	r		3445563	0					
ANR	3446093	PrimaryExpression	0		3445563	1					
ANR	3446094	CompoundStatement		93:15:2025:2025	3445563	1					
ANR	3446095	ExpressionStatement	en -> max_len = * max	2241:5:51664:51682	3445563	0	True				
ANR	3446096	AssignmentExpression	en -> max_len = * max		3445563	0		=			
ANR	3446097	PtrMemberAccess	en -> max_len		3445563	0					
ANR	3446098	Identifier	en		3445563	0					
ANR	3446099	Identifier	max_len		3445563	1					
ANR	3446100	UnaryOperationExpression	* max		3445563	1					
ANR	3446101	UnaryOperator	*		3445563	0					
ANR	3446102	Identifier	max		3445563	1					
ANR	3446103	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MAX_FIXED )"	2242:5:51689:51728	3445563	1	True				
ANR	3446104	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MAX_FIXED )"		3445563	0					
ANR	3446105	Callee	SET_ENCLOSE_STATUS		3445563	0					
ANR	3446106	Identifier	SET_ENCLOSE_STATUS		3445563	0					
ANR	3446107	ArgumentList	node		3445563	1					
ANR	3446108	Argument	node		3445563	0					
ANR	3446109	Identifier	node		3445563	0					
ANR	3446110	Argument	NST_MAX_FIXED		3445563	1					
ANR	3446111	Identifier	NST_MAX_FIXED		3445563	0					
ANR	3446112	BreakStatement	break ;	2245:1:51739:51744	3445563	2	True				
ANR	3446113	Label	case ENCLOSE_OPTION :	2247:6:51759:51778	3445563	3	True				
ANR	3446114	Identifier	ENCLOSE_OPTION		3445563	0					
ANR	3446115	Label	case ENCLOSE_STOP_BACKTRACK :	2248:6:51786:51813	3445563	4	True				
ANR	3446116	Identifier	ENCLOSE_STOP_BACKTRACK		3445563	0					
ANR	3446117	ExpressionStatement	"r = get_max_match_length ( en -> target , max , env )"	2249:1:51816:51862	3445563	5	True				
ANR	3446118	AssignmentExpression	"r = get_max_match_length ( en -> target , max , env )"		3445563	0		=			
ANR	3446119	Identifier	r		3445563	0					
ANR	3446120	CallExpression	"get_max_match_length ( en -> target , max , env )"		3445563	1					
ANR	3446121	Callee	get_max_match_length		3445563	0					
ANR	3446122	Identifier	get_max_match_length		3445563	0					
ANR	3446123	ArgumentList	en -> target		3445563	1					
ANR	3446124	Argument	en -> target		3445563	0					
ANR	3446125	PtrMemberAccess	en -> target		3445563	0					
ANR	3446126	Identifier	en		3445563	0					
ANR	3446127	Identifier	target		3445563	1					
ANR	3446128	Argument	max		3445563	1					
ANR	3446129	Identifier	max		3445563	0					
ANR	3446130	Argument	env		3445563	2					
ANR	3446131	Identifier	env		3445563	0					
ANR	3446132	BreakStatement	break ;	2250:1:51865:51870	3445563	6	True				
ANR	3446133	BreakStatement	break ;	2253:4:51890:51895	3445563	27	True				
ANR	3446134	Label	case NT_ANCHOR :	2255:2:51900:51914	3445563	28	True				
ANR	3446135	Identifier	NT_ANCHOR		3445563	0					
ANR	3446136	Label	default :	2256:2:51918:51925	3445563	29	True				
ANR	3446137	Identifier	default		3445563	0					
ANR	3446138	BreakStatement	break ;	2257:4:51931:51936	3445563	30	True				
ANR	3446139	ReturnStatement	return r ;	2260:2:51945:51953	3445563	4	True				
ANR	3446140	Identifier	r		3445563	0					
ANR	3446141	ReturnType	static int		3445563	1					
ANR	3446142	Identifier	get_max_match_length		3445563	2					
ANR	3446143	ParameterList	"Node * node , OnigDistance * max , ScanEnv * env"		3445563	3					
ANR	3446144	Parameter	Node * node	2147:21:49586:49595	3445563	0	True				
ANR	3446145	ParameterType	Node *		3445563	0					
ANR	3446146	Identifier	node		3445563	1					
ANR	3446147	Parameter	OnigDistance * max	2147:33:49598:49614	3445563	1	True				
ANR	3446148	ParameterType	OnigDistance *		3445563	0					
ANR	3446149	Identifier	max		3445563	1					
ANR	3446150	Parameter	ScanEnv * env	2147:52:49617:49628	3445563	2	True				
ANR	3446151	ParameterType	ScanEnv *		3445563	0					
ANR	3446152	Identifier	env		3445563	1					
ANR	3446153	CFGEntryNode	ENTRY		3445563		True				
ANR	3446154	CFGExitNode	EXIT		3445563		True				
ANR	3446155	Symbol	NCAR		3445563						
ANR	3446156	Symbol	* sn		3445563						
ANR	3446157	Symbol	br -> back_num		3445563						
ANR	3446158	Symbol	* backs		3445563						
ANR	3446159	Symbol	NQTFR		3445563						
ANR	3446160	Symbol	* max		3445563						
ANR	3446161	Symbol	ONIG_INFINITE_DISTANCE		3445563						
ANR	3446162	Symbol	sn -> s		3445563						
ANR	3446163	Symbol	* br		3445563						
ANR	3446164	Symbol	en -> type		3445563						
ANR	3446165	Symbol	ONIGENC_MBC_MAXLEN_DIST		3445563						
ANR	3446166	Symbol	* nodes		3445563						
ANR	3446167	Symbol	SCANENV_MEM_NODES		3445563						
ANR	3446168	Symbol	IS_REPEAT_INFINITE		3445563						
ANR	3446169	Symbol	qn		3445563						
ANR	3446170	Symbol	* * i		3445563						
ANR	3446171	Symbol	IS_ENCLOSE_MAX_FIXED		3445563						
ANR	3446172	Symbol	NCDR		3445563						
ANR	3446173	Symbol	NSTR		3445563						
ANR	3446174	Symbol	* env		3445563						
ANR	3446175	Symbol	en		3445563						
ANR	3446176	Symbol	qn -> target		3445563						
ANR	3446177	Symbol	distance_multiply		3445563						
ANR	3446178	Symbol	node		3445563						
ANR	3446179	Symbol	qn -> upper		3445563						
ANR	3446180	Symbol	en -> max_len		3445563						
ANR	3446181	Symbol	get_max_match_length		3445563						
ANR	3446182	Symbol	BACKREFS_P		3445563						
ANR	3446183	Symbol	IS_CALL_RECURSION		3445563						
ANR	3446184	Symbol	* qn		3445563						
ANR	3446185	Symbol	IS_NOT_NULL		3445563						
ANR	3446186	Symbol	ONIGERR_INVALID_BACKREF		3445563						
ANR	3446187	Symbol	tmax		3445563						
ANR	3446188	Symbol	NCALL		3445563						
ANR	3446189	Symbol	NST_MAX_FIXED		3445563						
ANR	3446190	Symbol	env -> enc		3445563						
ANR	3446191	Symbol	distance_add		3445563						
ANR	3446192	Symbol	* en		3445563						
ANR	3446193	Symbol	br		3445563						
ANR	3446194	Symbol	* * backs		3445563						
ANR	3446195	Symbol	NBREF		3445563						
ANR	3446196	Symbol	NST_RECURSION		3445563						
ANR	3446197	Symbol	NENCLOSE		3445563						
ANR	3446198	Symbol	NCALL ( node ) -> target		3445563						
ANR	3446199	Symbol	sn		3445563						
ANR	3446200	Symbol	sn -> end		3445563						
ANR	3446201	Symbol	max		3445563						
ANR	3446202	Symbol	env -> num_mem		3445563						
ANR	3446203	Symbol	i		3445563						
ANR	3446204	Symbol	env		3445563						
ANR	3446205	Symbol	r		3445563						
ANR	3446206	Symbol	nodes		3445563						
ANR	3446207	Symbol	* i		3445563						
ANR	3446208	Symbol	en -> target		3445563						
ANR	3446209	Symbol	br -> state		3445563						
ANR	3446210	Symbol	NTYPE		3445563						
ANR	3446211	Symbol	& tmax		3445563						
ANR	3446212	Symbol	* NCALL		3445563						
ANR	3446213	Symbol	backs		3445563						
ANR	3446214	Function	get_char_length_tree1	2267:0:52076:54341							
ANR	3446215	FunctionDef	"get_char_length_tree1 (Node * node , regex_t * reg , int * len , int level)"		3446214	0					
ANR	3446216	CompoundStatement		2269:0:52156:54341	3446214	0					
ANR	3446217	IdentifierDeclStatement	int tlen ;	2270:2:52160:52168	3446214	0	True				
ANR	3446218	IdentifierDecl	tlen		3446214	0					
ANR	3446219	IdentifierDeclType	int		3446214	0					
ANR	3446220	Identifier	tlen		3446214	1					
ANR	3446221	IdentifierDeclStatement	int r = 0 ;	2271:2:52172:52181	3446214	1	True				
ANR	3446222	IdentifierDecl	r = 0		3446214	0					
ANR	3446223	IdentifierDeclType	int		3446214	0					
ANR	3446224	Identifier	r		3446214	1					
ANR	3446225	AssignmentExpression	r = 0		3446214	2		=			
ANR	3446226	Identifier	r		3446214	0					
ANR	3446227	PrimaryExpression	0		3446214	1					
ANR	3446228	ExpressionStatement	level ++	2273:2:52186:52193	3446214	2	True				
ANR	3446229	PostIncDecOperationExpression	level ++		3446214	0					
ANR	3446230	Identifier	level		3446214	0					
ANR	3446231	IncDec	++		3446214	1					
ANR	3446232	ExpressionStatement	* len = 0	2274:2:52197:52205	3446214	3	True				
ANR	3446233	AssignmentExpression	* len = 0		3446214	0		=			
ANR	3446234	UnaryOperationExpression	* len		3446214	0					
ANR	3446235	UnaryOperator	*		3446214	0					
ANR	3446236	Identifier	len		3446214	1					
ANR	3446237	PrimaryExpression	0		3446214	1					
ANR	3446238	SwitchStatement	switch ( NTYPE ( node ) )		3446214	4					
ANR	3446239	Condition	NTYPE ( node )	2275:10:52217:52227	3446214	0	True				
ANR	3446240	CallExpression	NTYPE ( node )		3446214	0					
ANR	3446241	Callee	NTYPE		3446214	0					
ANR	3446242	Identifier	NTYPE		3446214	0					
ANR	3446243	ArgumentList	node		3446214	1					
ANR	3446244	Argument	node		3446214	0					
ANR	3446245	Identifier	node		3446214	0					
ANR	3446246	CompoundStatement		7:23:73:73	3446214	1					
ANR	3446247	Label	case NT_LIST :	2276:2:52234:52246	3446214	0	True				
ANR	3446248	Identifier	NT_LIST		3446214	0					
ANR	3446249	DoStatement	do		3446214	1					
ANR	3446250	CompoundStatement		9:7:98:98	3446214	0					
ANR	3446251	ExpressionStatement	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"	2278:6:52263:52319	3446214	0	True				
ANR	3446252	AssignmentExpression	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		3446214	0		=			
ANR	3446253	Identifier	r		3446214	0					
ANR	3446254	CallExpression	"get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		3446214	1					
ANR	3446255	Callee	get_char_length_tree1		3446214	0					
ANR	3446256	Identifier	get_char_length_tree1		3446214	0					
ANR	3446257	ArgumentList	NCAR ( node )		3446214	1					
ANR	3446258	Argument	NCAR ( node )		3446214	0					
ANR	3446259	CallExpression	NCAR ( node )		3446214	0					
ANR	3446260	Callee	NCAR		3446214	0					
ANR	3446261	Identifier	NCAR		3446214	0					
ANR	3446262	ArgumentList	node		3446214	1					
ANR	3446263	Argument	node		3446214	0					
ANR	3446264	Identifier	node		3446214	0					
ANR	3446265	Argument	reg		3446214	1					
ANR	3446266	Identifier	reg		3446214	0					
ANR	3446267	Argument	& tlen		3446214	2					
ANR	3446268	UnaryOperationExpression	& tlen		3446214	0					
ANR	3446269	UnaryOperator	&		3446214	0					
ANR	3446270	Identifier	tlen		3446214	1					
ANR	3446271	Argument	level		3446214	3					
ANR	3446272	Identifier	level		3446214	0					
ANR	3446273	IfStatement	if ( r == 0 )		3446214	1					
ANR	3446274	Condition	r == 0	2279:10:52331:52336	3446214	0	True				
ANR	3446275	EqualityExpression	r == 0		3446214	0		==			
ANR	3446276	Identifier	r		3446214	0					
ANR	3446277	PrimaryExpression	0		3446214	1					
ANR	3446278	ExpressionStatement	"* len = distance_add ( * len , tlen )"	2280:1:52340:52371	3446214	1	True				
ANR	3446279	AssignmentExpression	"* len = distance_add ( * len , tlen )"		3446214	0		=			
ANR	3446280	UnaryOperationExpression	* len		3446214	0					
ANR	3446281	UnaryOperator	*		3446214	0					
ANR	3446282	Identifier	len		3446214	1					
ANR	3446283	CallExpression	"distance_add ( * len , tlen )"		3446214	1					
ANR	3446284	Callee	distance_add		3446214	0					
ANR	3446285	Identifier	distance_add		3446214	0					
ANR	3446286	ArgumentList	* len		3446214	1					
ANR	3446287	Argument	* len		3446214	0					
ANR	3446288	UnaryOperationExpression	* len		3446214	0					
ANR	3446289	UnaryOperator	*		3446214	0					
ANR	3446290	Identifier	len		3446214	1					
ANR	3446291	Argument	tlen		3446214	1					
ANR	3446292	Identifier	tlen		3446214	0					
ANR	3446293	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2281:13:52386:52425	3446214	1	True				
ANR	3446294	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3446214	0		&&			
ANR	3446295	EqualityExpression	r == 0		3446214	0		==			
ANR	3446296	Identifier	r		3446214	0					
ANR	3446297	PrimaryExpression	0		3446214	1					
ANR	3446298	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3446214	1					
ANR	3446299	Callee	IS_NOT_NULL		3446214	0					
ANR	3446300	Identifier	IS_NOT_NULL		3446214	0					
ANR	3446301	ArgumentList	node = NCDR ( node )		3446214	1					
ANR	3446302	Argument	node = NCDR ( node )		3446214	0					
ANR	3446303	AssignmentExpression	node = NCDR ( node )		3446214	0		=			
ANR	3446304	Identifier	node		3446214	0					
ANR	3446305	CallExpression	NCDR ( node )		3446214	1					
ANR	3446306	Callee	NCDR		3446214	0					
ANR	3446307	Identifier	NCDR		3446214	0					
ANR	3446308	ArgumentList	node		3446214	1					
ANR	3446309	Argument	node		3446214	0					
ANR	3446310	Identifier	node		3446214	0					
ANR	3446311	BreakStatement	break ;	2282:4:52433:52438	3446214	2	True				
ANR	3446312	Label	case NT_ALT :	2284:2:52443:52454	3446214	3	True				
ANR	3446313	Identifier	NT_ALT		3446214	0					
ANR	3446314	CompoundStatement		19:6:328:342	3446214	4					
ANR	3446315	IdentifierDeclStatement	int tlen2 ;	2286:6:52468:52477	3446214	0	True				
ANR	3446316	IdentifierDecl	tlen2		3446214	0					
ANR	3446317	IdentifierDeclType	int		3446214	0					
ANR	3446318	Identifier	tlen2		3446214	1					
ANR	3446319	IdentifierDeclStatement	int varlen = 0 ;	2287:6:52485:52499	3446214	1	True				
ANR	3446320	IdentifierDecl	varlen = 0		3446214	0					
ANR	3446321	IdentifierDeclType	int		3446214	0					
ANR	3446322	Identifier	varlen		3446214	1					
ANR	3446323	AssignmentExpression	varlen = 0		3446214	2		=			
ANR	3446324	Identifier	varlen		3446214	0					
ANR	3446325	PrimaryExpression	0		3446214	1					
ANR	3446326	ExpressionStatement	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"	2289:6:52508:52564	3446214	2	True				
ANR	3446327	AssignmentExpression	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		3446214	0		=			
ANR	3446328	Identifier	r		3446214	0					
ANR	3446329	CallExpression	"get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		3446214	1					
ANR	3446330	Callee	get_char_length_tree1		3446214	0					
ANR	3446331	Identifier	get_char_length_tree1		3446214	0					
ANR	3446332	ArgumentList	NCAR ( node )		3446214	1					
ANR	3446333	Argument	NCAR ( node )		3446214	0					
ANR	3446334	CallExpression	NCAR ( node )		3446214	0					
ANR	3446335	Callee	NCAR		3446214	0					
ANR	3446336	Identifier	NCAR		3446214	0					
ANR	3446337	ArgumentList	node		3446214	1					
ANR	3446338	Argument	node		3446214	0					
ANR	3446339	Identifier	node		3446214	0					
ANR	3446340	Argument	reg		3446214	1					
ANR	3446341	Identifier	reg		3446214	0					
ANR	3446342	Argument	& tlen		3446214	2					
ANR	3446343	UnaryOperationExpression	& tlen		3446214	0					
ANR	3446344	UnaryOperator	&		3446214	0					
ANR	3446345	Identifier	tlen		3446214	1					
ANR	3446346	Argument	level		3446214	3					
ANR	3446347	Identifier	level		3446214	0					
ANR	3446348	WhileStatement	while ( r == 0 && IS_NOT_NULL ( node = NCDR ( node ) ) )		3446214	3					
ANR	3446349	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2290:13:52579:52618	3446214	0	True				
ANR	3446350	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3446214	0		&&			
ANR	3446351	EqualityExpression	r == 0		3446214	0		==			
ANR	3446352	Identifier	r		3446214	0					
ANR	3446353	PrimaryExpression	0		3446214	1					
ANR	3446354	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3446214	1					
ANR	3446355	Callee	IS_NOT_NULL		3446214	0					
ANR	3446356	Identifier	IS_NOT_NULL		3446214	0					
ANR	3446357	ArgumentList	node = NCDR ( node )		3446214	1					
ANR	3446358	Argument	node = NCDR ( node )		3446214	0					
ANR	3446359	AssignmentExpression	node = NCDR ( node )		3446214	0		=			
ANR	3446360	Identifier	node		3446214	0					
ANR	3446361	CallExpression	NCDR ( node )		3446214	1					
ANR	3446362	Callee	NCDR		3446214	0					
ANR	3446363	Identifier	NCDR		3446214	0					
ANR	3446364	ArgumentList	node		3446214	1					
ANR	3446365	Argument	node		3446214	0					
ANR	3446366	Identifier	node		3446214	0					
ANR	3446367	CompoundStatement		22:55:464:464	3446214	1					
ANR	3446368	ExpressionStatement	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen2 , level )"	2291:1:52624:52681	3446214	0	True				
ANR	3446369	AssignmentExpression	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen2 , level )"		3446214	0		=			
ANR	3446370	Identifier	r		3446214	0					
ANR	3446371	CallExpression	"get_char_length_tree1 ( NCAR ( node ) , reg , & tlen2 , level )"		3446214	1					
ANR	3446372	Callee	get_char_length_tree1		3446214	0					
ANR	3446373	Identifier	get_char_length_tree1		3446214	0					
ANR	3446374	ArgumentList	NCAR ( node )		3446214	1					
ANR	3446375	Argument	NCAR ( node )		3446214	0					
ANR	3446376	CallExpression	NCAR ( node )		3446214	0					
ANR	3446377	Callee	NCAR		3446214	0					
ANR	3446378	Identifier	NCAR		3446214	0					
ANR	3446379	ArgumentList	node		3446214	1					
ANR	3446380	Argument	node		3446214	0					
ANR	3446381	Identifier	node		3446214	0					
ANR	3446382	Argument	reg		3446214	1					
ANR	3446383	Identifier	reg		3446214	0					
ANR	3446384	Argument	& tlen2		3446214	2					
ANR	3446385	UnaryOperationExpression	& tlen2		3446214	0					
ANR	3446386	UnaryOperator	&		3446214	0					
ANR	3446387	Identifier	tlen2		3446214	1					
ANR	3446388	Argument	level		3446214	3					
ANR	3446389	Identifier	level		3446214	0					
ANR	3446390	IfStatement	if ( r == 0 )		3446214	1					
ANR	3446391	Condition	r == 0	2292:5:52688:52693	3446214	0	True				
ANR	3446392	EqualityExpression	r == 0		3446214	0		==			
ANR	3446393	Identifier	r		3446214	0					
ANR	3446394	PrimaryExpression	0		3446214	1					
ANR	3446395	CompoundStatement		24:13:539:539	3446214	1					
ANR	3446396	IfStatement	if ( tlen != tlen2 )		3446214	0					
ANR	3446397	Condition	tlen != tlen2	2293:7:52705:52717	3446214	0	True				
ANR	3446398	EqualityExpression	tlen != tlen2		3446214	0		!=			
ANR	3446399	Identifier	tlen		3446214	0					
ANR	3446400	Identifier	tlen2		3446214	1					
ANR	3446401	ExpressionStatement	varlen = 1	2294:5:52725:52735	3446214	1	True				
ANR	3446402	AssignmentExpression	varlen = 1		3446214	0		=			
ANR	3446403	Identifier	varlen		3446214	0					
ANR	3446404	PrimaryExpression	1		3446214	1					
ANR	3446405	IfStatement	if ( r == 0 )		3446214	4					
ANR	3446406	Condition	r == 0	2297:10:52758:52763	3446214	0	True				
ANR	3446407	EqualityExpression	r == 0		3446214	0		==			
ANR	3446408	Identifier	r		3446214	0					
ANR	3446409	PrimaryExpression	0		3446214	1					
ANR	3446410	CompoundStatement		29:18:609:609	3446214	1					
ANR	3446411	IfStatement	if ( varlen != 0 )		3446214	0					
ANR	3446412	Condition	varlen != 0	2298:5:52773:52783	3446214	0	True				
ANR	3446413	EqualityExpression	varlen != 0		3446214	0		!=			
ANR	3446414	Identifier	varlen		3446214	0					
ANR	3446415	PrimaryExpression	0		3446214	1					
ANR	3446416	CompoundStatement		30:18:629:629	3446214	1					
ANR	3446417	IfStatement	if ( level == 1 )		3446214	0					
ANR	3446418	Condition	level == 1	2299:7:52795:52804	3446214	0	True				
ANR	3446419	EqualityExpression	level == 1		3446214	0		==			
ANR	3446420	Identifier	level		3446214	0					
ANR	3446421	PrimaryExpression	1		3446214	1					
ANR	3446422	ExpressionStatement	r = GET_CHAR_LEN_TOP_ALT_VARLEN	2300:5:52812:52843	3446214	1	True				
ANR	3446423	AssignmentExpression	r = GET_CHAR_LEN_TOP_ALT_VARLEN		3446214	0		=			
ANR	3446424	Identifier	r		3446214	0					
ANR	3446425	Identifier	GET_CHAR_LEN_TOP_ALT_VARLEN		3446214	1					
ANR	3446426	ElseStatement	else		3446214	0					
ANR	3446427	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2302:5:52858:52881	3446214	0	True				
ANR	3446428	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		3446214	0		=			
ANR	3446429	Identifier	r		3446214	0					
ANR	3446430	Identifier	GET_CHAR_LEN_VARLEN		3446214	1					
ANR	3446431	ElseStatement	else		3446214	0					
ANR	3446432	ExpressionStatement	* len = tlen	2305:3:52895:52906	3446214	0	True				
ANR	3446433	AssignmentExpression	* len = tlen		3446214	0		=			
ANR	3446434	UnaryOperationExpression	* len		3446214	0					
ANR	3446435	UnaryOperator	*		3446214	0					
ANR	3446436	Identifier	len		3446214	1					
ANR	3446437	Identifier	tlen		3446214	1					
ANR	3446438	BreakStatement	break ;	2308:4:52926:52931	3446214	5	True				
ANR	3446439	Label	case NT_STR :	2310:2:52936:52947	3446214	6	True				
ANR	3446440	Identifier	NT_STR		3446214	0					
ANR	3446441	CompoundStatement		45:6:836:852	3446214	7					
ANR	3446442	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2312:6:52961:52985	3446214	0	True				
ANR	3446443	IdentifierDecl	* sn = NSTR ( node )		3446214	0					
ANR	3446444	IdentifierDeclType	StrNode *		3446214	0					
ANR	3446445	Identifier	sn		3446214	1					
ANR	3446446	AssignmentExpression	* sn = NSTR ( node )		3446214	2		=			
ANR	3446447	Identifier	sn		3446214	0					
ANR	3446448	CallExpression	NSTR ( node )		3446214	1					
ANR	3446449	Callee	NSTR		3446214	0					
ANR	3446450	Identifier	NSTR		3446214	0					
ANR	3446451	ArgumentList	node		3446214	1					
ANR	3446452	Argument	node		3446214	0					
ANR	3446453	Identifier	node		3446214	0					
ANR	3446454	IdentifierDeclStatement	UChar * s = sn -> s ;	2313:6:52993:53009	3446214	1	True				
ANR	3446455	IdentifierDecl	* s = sn -> s		3446214	0					
ANR	3446456	IdentifierDeclType	UChar *		3446214	0					
ANR	3446457	Identifier	s		3446214	1					
ANR	3446458	AssignmentExpression	* s = sn -> s		3446214	2		=			
ANR	3446459	Identifier	s		3446214	0					
ANR	3446460	PtrMemberAccess	sn -> s		3446214	1					
ANR	3446461	Identifier	sn		3446214	0					
ANR	3446462	Identifier	s		3446214	1					
ANR	3446463	WhileStatement	while ( s < sn -> end )		3446214	2					
ANR	3446464	Condition	s < sn -> end	2314:13:53024:53034	3446214	0	True				
ANR	3446465	RelationalExpression	s < sn -> end		3446214	0		<			
ANR	3446466	Identifier	s		3446214	0					
ANR	3446467	PtrMemberAccess	sn -> end		3446214	1					
ANR	3446468	Identifier	sn		3446214	0					
ANR	3446469	Identifier	end		3446214	1					
ANR	3446470	CompoundStatement		46:26:880:880	3446214	1					
ANR	3446471	ExpressionStatement	"s += enclen ( reg -> enc , s )"	2315:1:53040:53064	3446214	0	True				
ANR	3446472	AssignmentExpression	"s += enclen ( reg -> enc , s )"		3446214	0		+=			
ANR	3446473	Identifier	s		3446214	0					
ANR	3446474	CallExpression	"enclen ( reg -> enc , s )"		3446214	1					
ANR	3446475	Callee	enclen		3446214	0					
ANR	3446476	Identifier	enclen		3446214	0					
ANR	3446477	ArgumentList	reg -> enc		3446214	1					
ANR	3446478	Argument	reg -> enc		3446214	0					
ANR	3446479	PtrMemberAccess	reg -> enc		3446214	0					
ANR	3446480	Identifier	reg		3446214	0					
ANR	3446481	Identifier	enc		3446214	1					
ANR	3446482	Argument	s		3446214	1					
ANR	3446483	Identifier	s		3446214	0					
ANR	3446484	ExpressionStatement	( * len ) ++	2316:1:53067:53075	3446214	1	True				
ANR	3446485	PostIncDecOperationExpression	( * len ) ++		3446214	0					
ANR	3446486	UnaryOperationExpression	* len		3446214	0					
ANR	3446487	UnaryOperator	*		3446214	0					
ANR	3446488	Identifier	len		3446214	1					
ANR	3446489	IncDec	++		3446214	1					
ANR	3446490	BreakStatement	break ;	2319:4:53095:53100	3446214	8	True				
ANR	3446491	Label	case NT_QTFR :	2321:2:53105:53117	3446214	9	True				
ANR	3446492	Identifier	NT_QTFR		3446214	0					
ANR	3446493	CompoundStatement		55:6:974:1000	3446214	10					
ANR	3446494	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2323:6:53131:53157	3446214	0	True				
ANR	3446495	IdentifierDecl	* qn = NQTFR ( node )		3446214	0					
ANR	3446496	IdentifierDeclType	QtfrNode *		3446214	0					
ANR	3446497	Identifier	qn		3446214	1					
ANR	3446498	AssignmentExpression	* qn = NQTFR ( node )		3446214	2		=			
ANR	3446499	Identifier	qn		3446214	0					
ANR	3446500	CallExpression	NQTFR ( node )		3446214	1					
ANR	3446501	Callee	NQTFR		3446214	0					
ANR	3446502	Identifier	NQTFR		3446214	0					
ANR	3446503	ArgumentList	node		3446214	1					
ANR	3446504	Argument	node		3446214	0					
ANR	3446505	Identifier	node		3446214	0					
ANR	3446506	IfStatement	if ( qn -> lower == qn -> upper )		3446214	1					
ANR	3446507	Condition	qn -> lower == qn -> upper	2324:10:53169:53190	3446214	0	True				
ANR	3446508	EqualityExpression	qn -> lower == qn -> upper		3446214	0		==			
ANR	3446509	PtrMemberAccess	qn -> lower		3446214	0					
ANR	3446510	Identifier	qn		3446214	0					
ANR	3446511	Identifier	lower		3446214	1					
ANR	3446512	PtrMemberAccess	qn -> upper		3446214	1					
ANR	3446513	Identifier	qn		3446214	0					
ANR	3446514	Identifier	upper		3446214	1					
ANR	3446515	CompoundStatement		56:34:1036:1036	3446214	1					
ANR	3446516	ExpressionStatement	"r = get_char_length_tree1 ( qn -> target , reg , & tlen , level )"	2325:1:53196:53252	3446214	0	True				
ANR	3446517	AssignmentExpression	"r = get_char_length_tree1 ( qn -> target , reg , & tlen , level )"		3446214	0		=			
ANR	3446518	Identifier	r		3446214	0					
ANR	3446519	CallExpression	"get_char_length_tree1 ( qn -> target , reg , & tlen , level )"		3446214	1					
ANR	3446520	Callee	get_char_length_tree1		3446214	0					
ANR	3446521	Identifier	get_char_length_tree1		3446214	0					
ANR	3446522	ArgumentList	qn -> target		3446214	1					
ANR	3446523	Argument	qn -> target		3446214	0					
ANR	3446524	PtrMemberAccess	qn -> target		3446214	0					
ANR	3446525	Identifier	qn		3446214	0					
ANR	3446526	Identifier	target		3446214	1					
ANR	3446527	Argument	reg		3446214	1					
ANR	3446528	Identifier	reg		3446214	0					
ANR	3446529	Argument	& tlen		3446214	2					
ANR	3446530	UnaryOperationExpression	& tlen		3446214	0					
ANR	3446531	UnaryOperator	&		3446214	0					
ANR	3446532	Identifier	tlen		3446214	1					
ANR	3446533	Argument	level		3446214	3					
ANR	3446534	Identifier	level		3446214	0					
ANR	3446535	IfStatement	if ( r == 0 )		3446214	1					
ANR	3446536	Condition	r == 0	2326:5:53259:53264	3446214	0	True				
ANR	3446537	EqualityExpression	r == 0		3446214	0		==			
ANR	3446538	Identifier	r		3446214	0					
ANR	3446539	PrimaryExpression	0		3446214	1					
ANR	3446540	ExpressionStatement	"* len = distance_multiply ( tlen , qn -> lower )"	2327:3:53270:53311	3446214	1	True				
ANR	3446541	AssignmentExpression	"* len = distance_multiply ( tlen , qn -> lower )"		3446214	0		=			
ANR	3446542	UnaryOperationExpression	* len		3446214	0					
ANR	3446543	UnaryOperator	*		3446214	0					
ANR	3446544	Identifier	len		3446214	1					
ANR	3446545	CallExpression	"distance_multiply ( tlen , qn -> lower )"		3446214	1					
ANR	3446546	Callee	distance_multiply		3446214	0					
ANR	3446547	Identifier	distance_multiply		3446214	0					
ANR	3446548	ArgumentList	tlen		3446214	1					
ANR	3446549	Argument	tlen		3446214	0					
ANR	3446550	Identifier	tlen		3446214	0					
ANR	3446551	Argument	qn -> lower		3446214	1					
ANR	3446552	PtrMemberAccess	qn -> lower		3446214	0					
ANR	3446553	Identifier	qn		3446214	0					
ANR	3446554	Identifier	lower		3446214	1					
ANR	3446555	ElseStatement	else		3446214	0					
ANR	3446556	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2330:1:53333:53356	3446214	0	True				
ANR	3446557	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		3446214	0		=			
ANR	3446558	Identifier	r		3446214	0					
ANR	3446559	Identifier	GET_CHAR_LEN_VARLEN		3446214	1					
ANR	3446560	BreakStatement	break ;	2332:4:53368:53373	3446214	11	True				
ANR	3446561	Label	case NT_CALL :	2335:2:53401:53413	3446214	12	True				
ANR	3446562	Identifier	NT_CALL		3446214	0					
ANR	3446563	IfStatement	if ( ! IS_CALL_RECURSION ( NCALL ( node ) ) )		3446214	13					
ANR	3446564	Condition	! IS_CALL_RECURSION ( NCALL ( node ) )	2336:8:53423:53454	3446214	0	True				
ANR	3446565	UnaryOperationExpression	! IS_CALL_RECURSION ( NCALL ( node ) )		3446214	0					
ANR	3446566	UnaryOperator	!		3446214	0					
ANR	3446567	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		3446214	1					
ANR	3446568	Callee	IS_CALL_RECURSION		3446214	0					
ANR	3446569	Identifier	IS_CALL_RECURSION		3446214	0					
ANR	3446570	ArgumentList	NCALL ( node )		3446214	1					
ANR	3446571	Argument	NCALL ( node )		3446214	0					
ANR	3446572	CallExpression	NCALL ( node )		3446214	0					
ANR	3446573	Callee	NCALL		3446214	0					
ANR	3446574	Identifier	NCALL		3446214	0					
ANR	3446575	ArgumentList	node		3446214	1					
ANR	3446576	Argument	node		3446214	0					
ANR	3446577	Identifier	node		3446214	0					
ANR	3446578	ExpressionStatement	"r = get_char_length_tree1 ( NCALL ( node ) -> target , reg , len , level )"	2337:6:53463:53526	3446214	1	True				
ANR	3446579	AssignmentExpression	"r = get_char_length_tree1 ( NCALL ( node ) -> target , reg , len , level )"		3446214	0		=			
ANR	3446580	Identifier	r		3446214	0					
ANR	3446581	CallExpression	"get_char_length_tree1 ( NCALL ( node ) -> target , reg , len , level )"		3446214	1					
ANR	3446582	Callee	get_char_length_tree1		3446214	0					
ANR	3446583	Identifier	get_char_length_tree1		3446214	0					
ANR	3446584	ArgumentList	NCALL ( node ) -> target		3446214	1					
ANR	3446585	Argument	NCALL ( node ) -> target		3446214	0					
ANR	3446586	PtrMemberAccess	NCALL ( node ) -> target		3446214	0					
ANR	3446587	CallExpression	NCALL ( node )		3446214	0					
ANR	3446588	Callee	NCALL		3446214	0					
ANR	3446589	Identifier	NCALL		3446214	0					
ANR	3446590	ArgumentList	node		3446214	1					
ANR	3446591	Argument	node		3446214	0					
ANR	3446592	Identifier	node		3446214	0					
ANR	3446593	Identifier	target		3446214	1					
ANR	3446594	Argument	reg		3446214	1					
ANR	3446595	Identifier	reg		3446214	0					
ANR	3446596	Argument	len		3446214	2					
ANR	3446597	Identifier	len		3446214	0					
ANR	3446598	Argument	level		3446214	3					
ANR	3446599	Identifier	level		3446214	0					
ANR	3446600	ElseStatement	else		3446214	0					
ANR	3446601	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2339:6:53543:53566	3446214	0	True				
ANR	3446602	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		3446214	0		=			
ANR	3446603	Identifier	r		3446214	0					
ANR	3446604	Identifier	GET_CHAR_LEN_VARLEN		3446214	1					
ANR	3446605	BreakStatement	break ;	2340:4:53572:53577	3446214	14	True				
ANR	3446606	Label	case NT_CTYPE :	2343:2:53589:53602	3446214	15	True				
ANR	3446607	Identifier	NT_CTYPE		3446214	0					
ANR	3446608	ExpressionStatement	* len = 1	2344:4:53608:53616	3446214	16	True				
ANR	3446609	AssignmentExpression	* len = 1		3446214	0		=			
ANR	3446610	UnaryOperationExpression	* len		3446214	0					
ANR	3446611	UnaryOperator	*		3446214	0					
ANR	3446612	Identifier	len		3446214	1					
ANR	3446613	PrimaryExpression	1		3446214	1					
ANR	3446614	BreakStatement	break ;	2345:4:53622:53627	3446214	17	True				
ANR	3446615	Label	case NT_CCLASS :	2347:2:53632:53646	3446214	18	True				
ANR	3446616	Identifier	NT_CCLASS		3446214	0					
ANR	3446617	Label	case NT_CANY :	2348:2:53650:53662	3446214	19	True				
ANR	3446618	Identifier	NT_CANY		3446214	0					
ANR	3446619	ExpressionStatement	* len = 1	2349:4:53668:53676	3446214	20	True				
ANR	3446620	AssignmentExpression	* len = 1		3446214	0		=			
ANR	3446621	UnaryOperationExpression	* len		3446214	0					
ANR	3446622	UnaryOperator	*		3446214	0					
ANR	3446623	Identifier	len		3446214	1					
ANR	3446624	PrimaryExpression	1		3446214	1					
ANR	3446625	BreakStatement	break ;	2350:4:53682:53687	3446214	21	True				
ANR	3446626	Label	case NT_ENCLOSE :	2352:2:53692:53707	3446214	22	True				
ANR	3446627	Identifier	NT_ENCLOSE		3446214	0					
ANR	3446628	CompoundStatement		86:6:1564:1596	3446214	23					
ANR	3446629	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2354:6:53721:53753	3446214	0	True				
ANR	3446630	IdentifierDecl	* en = NENCLOSE ( node )		3446214	0					
ANR	3446631	IdentifierDeclType	EncloseNode *		3446214	0					
ANR	3446632	Identifier	en		3446214	1					
ANR	3446633	AssignmentExpression	* en = NENCLOSE ( node )		3446214	2		=			
ANR	3446634	Identifier	en		3446214	0					
ANR	3446635	CallExpression	NENCLOSE ( node )		3446214	1					
ANR	3446636	Callee	NENCLOSE		3446214	0					
ANR	3446637	Identifier	NENCLOSE		3446214	0					
ANR	3446638	ArgumentList	node		3446214	1					
ANR	3446639	Argument	node		3446214	0					
ANR	3446640	Identifier	node		3446214	0					
ANR	3446641	SwitchStatement	switch ( en -> type )		3446214	1					
ANR	3446642	Condition	en -> type	2355:14:53769:53776	3446214	0	True				
ANR	3446643	PtrMemberAccess	en -> type		3446214	0					
ANR	3446644	Identifier	en		3446214	0					
ANR	3446645	Identifier	type		3446214	1					
ANR	3446646	CompoundStatement		87:24:1622:1622	3446214	1					
ANR	3446647	Label	case ENCLOSE_MEMORY :	2356:6:53787:53806	3446214	0	True				
ANR	3446648	Identifier	ENCLOSE_MEMORY		3446214	0					
ANR	3446649	IfStatement	if ( IS_ENCLOSE_CLEN_FIXED ( en ) )		3446214	1					
ANR	3446650	Condition	IS_ENCLOSE_CLEN_FIXED ( en )	2358:5:53836:53860	3446214	0	True				
ANR	3446651	CallExpression	IS_ENCLOSE_CLEN_FIXED ( en )		3446214	0					
ANR	3446652	Callee	IS_ENCLOSE_CLEN_FIXED		3446214	0					
ANR	3446653	Identifier	IS_ENCLOSE_CLEN_FIXED		3446214	0					
ANR	3446654	ArgumentList	en		3446214	1					
ANR	3446655	Argument	en		3446214	0					
ANR	3446656	Identifier	en		3446214	0					
ANR	3446657	ExpressionStatement	* len = en -> char_len	2359:3:53866:53885	3446214	1	True				
ANR	3446658	AssignmentExpression	* len = en -> char_len		3446214	0		=			
ANR	3446659	UnaryOperationExpression	* len		3446214	0					
ANR	3446660	UnaryOperator	*		3446214	0					
ANR	3446661	Identifier	len		3446214	1					
ANR	3446662	PtrMemberAccess	en -> char_len		3446214	1					
ANR	3446663	Identifier	en		3446214	0					
ANR	3446664	Identifier	char_len		3446214	1					
ANR	3446665	ElseStatement	else		3446214	0					
ANR	3446666	CompoundStatement		92:6:1736:1736	3446214	0					
ANR	3446667	ExpressionStatement	"r = get_char_length_tree1 ( en -> target , reg , len , level )"	2361:3:53898:53952	3446214	0	True				
ANR	3446668	AssignmentExpression	"r = get_char_length_tree1 ( en -> target , reg , len , level )"		3446214	0		=			
ANR	3446669	Identifier	r		3446214	0					
ANR	3446670	CallExpression	"get_char_length_tree1 ( en -> target , reg , len , level )"		3446214	1					
ANR	3446671	Callee	get_char_length_tree1		3446214	0					
ANR	3446672	Identifier	get_char_length_tree1		3446214	0					
ANR	3446673	ArgumentList	en -> target		3446214	1					
ANR	3446674	Argument	en -> target		3446214	0					
ANR	3446675	PtrMemberAccess	en -> target		3446214	0					
ANR	3446676	Identifier	en		3446214	0					
ANR	3446677	Identifier	target		3446214	1					
ANR	3446678	Argument	reg		3446214	1					
ANR	3446679	Identifier	reg		3446214	0					
ANR	3446680	Argument	len		3446214	2					
ANR	3446681	Identifier	len		3446214	0					
ANR	3446682	Argument	level		3446214	3					
ANR	3446683	Identifier	level		3446214	0					
ANR	3446684	IfStatement	if ( r == 0 )		3446214	1					
ANR	3446685	Condition	r == 0	2362:7:53961:53966	3446214	0	True				
ANR	3446686	EqualityExpression	r == 0		3446214	0		==			
ANR	3446687	Identifier	r		3446214	0					
ANR	3446688	PrimaryExpression	0		3446214	1					
ANR	3446689	CompoundStatement		94:15:1812:1812	3446214	1					
ANR	3446690	ExpressionStatement	en -> char_len = * len	2363:5:53976:53995	3446214	0	True				
ANR	3446691	AssignmentExpression	en -> char_len = * len		3446214	0		=			
ANR	3446692	PtrMemberAccess	en -> char_len		3446214	0					
ANR	3446693	Identifier	en		3446214	0					
ANR	3446694	Identifier	char_len		3446214	1					
ANR	3446695	UnaryOperationExpression	* len		3446214	1					
ANR	3446696	UnaryOperator	*		3446214	0					
ANR	3446697	Identifier	len		3446214	1					
ANR	3446698	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_CLEN_FIXED )"	2364:5:54002:54042	3446214	1	True				
ANR	3446699	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_CLEN_FIXED )"		3446214	0					
ANR	3446700	Callee	SET_ENCLOSE_STATUS		3446214	0					
ANR	3446701	Identifier	SET_ENCLOSE_STATUS		3446214	0					
ANR	3446702	ArgumentList	node		3446214	1					
ANR	3446703	Argument	node		3446214	0					
ANR	3446704	Identifier	node		3446214	0					
ANR	3446705	Argument	NST_CLEN_FIXED		3446214	1					
ANR	3446706	Identifier	NST_CLEN_FIXED		3446214	0					
ANR	3446707	BreakStatement	break ;	2367:1:54053:54058	3446214	2	True				
ANR	3446708	Label	case ENCLOSE_OPTION :	2369:6:54073:54092	3446214	3	True				
ANR	3446709	Identifier	ENCLOSE_OPTION		3446214	0					
ANR	3446710	Label	case ENCLOSE_STOP_BACKTRACK :	2370:6:54100:54127	3446214	4	True				
ANR	3446711	Identifier	ENCLOSE_STOP_BACKTRACK		3446214	0					
ANR	3446712	ExpressionStatement	"r = get_char_length_tree1 ( en -> target , reg , len , level )"	2371:1:54130:54184	3446214	5	True				
ANR	3446713	AssignmentExpression	"r = get_char_length_tree1 ( en -> target , reg , len , level )"		3446214	0		=			
ANR	3446714	Identifier	r		3446214	0					
ANR	3446715	CallExpression	"get_char_length_tree1 ( en -> target , reg , len , level )"		3446214	1					
ANR	3446716	Callee	get_char_length_tree1		3446214	0					
ANR	3446717	Identifier	get_char_length_tree1		3446214	0					
ANR	3446718	ArgumentList	en -> target		3446214	1					
ANR	3446719	Argument	en -> target		3446214	0					
ANR	3446720	PtrMemberAccess	en -> target		3446214	0					
ANR	3446721	Identifier	en		3446214	0					
ANR	3446722	Identifier	target		3446214	1					
ANR	3446723	Argument	reg		3446214	1					
ANR	3446724	Identifier	reg		3446214	0					
ANR	3446725	Argument	len		3446214	2					
ANR	3446726	Identifier	len		3446214	0					
ANR	3446727	Argument	level		3446214	3					
ANR	3446728	Identifier	level		3446214	0					
ANR	3446729	BreakStatement	break ;	2372:1:54187:54192	3446214	6	True				
ANR	3446730	Label	default :	2373:6:54200:54207	3446214	7	True				
ANR	3446731	Identifier	default		3446214	0					
ANR	3446732	BreakStatement	break ;	2374:1:54210:54215	3446214	8	True				
ANR	3446733	BreakStatement	break ;	2377:4:54235:54240	3446214	24	True				
ANR	3446734	Label	case NT_ANCHOR :	2379:2:54245:54259	3446214	25	True				
ANR	3446735	Identifier	NT_ANCHOR		3446214	0					
ANR	3446736	BreakStatement	break ;	2380:4:54265:54270	3446214	26	True				
ANR	3446737	Label	default :	2382:2:54275:54282	3446214	27	True				
ANR	3446738	Identifier	default		3446214	0					
ANR	3446739	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2383:4:54288:54311	3446214	28	True				
ANR	3446740	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		3446214	0		=			
ANR	3446741	Identifier	r		3446214	0					
ANR	3446742	Identifier	GET_CHAR_LEN_VARLEN		3446214	1					
ANR	3446743	BreakStatement	break ;	2384:4:54317:54322	3446214	29	True				
ANR	3446744	ReturnStatement	return r ;	2387:2:54331:54339	3446214	5	True				
ANR	3446745	Identifier	r		3446214	0					
ANR	3446746	ReturnType	static int		3446214	1					
ANR	3446747	Identifier	get_char_length_tree1		3446214	2					
ANR	3446748	ParameterList	"Node * node , regex_t * reg , int * len , int level"		3446214	3					
ANR	3446749	Parameter	Node * node	2268:22:52109:52118	3446214	0	True				
ANR	3446750	ParameterType	Node *		3446214	0					
ANR	3446751	Identifier	node		3446214	1					
ANR	3446752	Parameter	regex_t * reg	2268:34:52121:52132	3446214	1	True				
ANR	3446753	ParameterType	regex_t *		3446214	0					
ANR	3446754	Identifier	reg		3446214	1					
ANR	3446755	Parameter	int * len	2268:48:52135:52142	3446214	2	True				
ANR	3446756	ParameterType	int *		3446214	0					
ANR	3446757	Identifier	len		3446214	1					
ANR	3446758	Parameter	int level	2268:58:52145:52153	3446214	3	True				
ANR	3446759	ParameterType	int		3446214	0					
ANR	3446760	Identifier	level		3446214	1					
ANR	3446761	CFGEntryNode	ENTRY		3446214		True				
ANR	3446762	CFGExitNode	EXIT		3446214		True				
ANR	3446763	Symbol	* qn		3446214						
ANR	3446764	Symbol	IS_NOT_NULL		3446214						
ANR	3446765	Symbol	NCAR		3446214						
ANR	3446766	Symbol	* sn		3446214						
ANR	3446767	Symbol	NCALL		3446214						
ANR	3446768	Symbol	NST_CLEN_FIXED		3446214						
ANR	3446769	Symbol	& tlen		3446214						
ANR	3446770	Symbol	distance_add		3446214						
ANR	3446771	Symbol	NQTFR		3446214						
ANR	3446772	Symbol	* en		3446214						
ANR	3446773	Symbol	qn -> lower		3446214						
ANR	3446774	Symbol	sn -> s		3446214						
ANR	3446775	Symbol	len		3446214						
ANR	3446776	Symbol	GET_CHAR_LEN_TOP_ALT_VARLEN		3446214						
ANR	3446777	Symbol	reg		3446214						
ANR	3446778	Symbol	NENCLOSE		3446214						
ANR	3446779	Symbol	tlen		3446214						
ANR	3446780	Symbol	GET_CHAR_LEN_VARLEN		3446214						
ANR	3446781	Symbol	en -> type		3446214						
ANR	3446782	Symbol	IS_ENCLOSE_CLEN_FIXED		3446214						
ANR	3446783	Symbol	NCALL ( node ) -> target		3446214						
ANR	3446784	Symbol	sn		3446214						
ANR	3446785	Symbol	sn -> end		3446214						
ANR	3446786	Symbol	qn		3446214						
ANR	3446787	Symbol	tlen2		3446214						
ANR	3446788	Symbol	level		3446214						
ANR	3446789	Symbol	varlen		3446214						
ANR	3446790	Symbol	en -> char_len		3446214						
ANR	3446791	Symbol	NCDR		3446214						
ANR	3446792	Symbol	get_char_length_tree1		3446214						
ANR	3446793	Symbol	NSTR		3446214						
ANR	3446794	Symbol	en		3446214						
ANR	3446795	Symbol	& tlen2		3446214						
ANR	3446796	Symbol	enclen		3446214						
ANR	3446797	Symbol	qn -> target		3446214						
ANR	3446798	Symbol	reg -> enc		3446214						
ANR	3446799	Symbol	distance_multiply		3446214						
ANR	3446800	Symbol	node		3446214						
ANR	3446801	Symbol	qn -> upper		3446214						
ANR	3446802	Symbol	r		3446214						
ANR	3446803	Symbol	s		3446214						
ANR	3446804	Symbol	en -> target		3446214						
ANR	3446805	Symbol	IS_CALL_RECURSION		3446214						
ANR	3446806	Symbol	NTYPE		3446214						
ANR	3446807	Symbol	* NCALL		3446214						
ANR	3446808	Symbol	* reg		3446214						
ANR	3446809	Symbol	* len		3446214						
ANR	3446810	Function	get_char_length_tree	2390:0:54344:54465							
ANR	3446811	FunctionDef	"get_char_length_tree (Node * node , regex_t * reg , int * len)"		3446810	0					
ANR	3446812	CompoundStatement		2392:0:54412:54465	3446810	0					
ANR	3446813	ReturnStatement	"return get_char_length_tree1 ( node , reg , len , 0 ) ;"	2393:2:54416:54463	3446810	0	True				
ANR	3446814	CallExpression	"get_char_length_tree1 ( node , reg , len , 0 )"		3446810	0					
ANR	3446815	Callee	get_char_length_tree1		3446810	0					
ANR	3446816	Identifier	get_char_length_tree1		3446810	0					
ANR	3446817	ArgumentList	node		3446810	1					
ANR	3446818	Argument	node		3446810	0					
ANR	3446819	Identifier	node		3446810	0					
ANR	3446820	Argument	reg		3446810	1					
ANR	3446821	Identifier	reg		3446810	0					
ANR	3446822	Argument	len		3446810	2					
ANR	3446823	Identifier	len		3446810	0					
ANR	3446824	Argument	0		3446810	3					
ANR	3446825	PrimaryExpression	0		3446810	0					
ANR	3446826	ReturnType	static int		3446810	1					
ANR	3446827	Identifier	get_char_length_tree		3446810	2					
ANR	3446828	ParameterList	"Node * node , regex_t * reg , int * len"		3446810	3					
ANR	3446829	Parameter	Node * node	2391:21:54376:54385	3446810	0	True				
ANR	3446830	ParameterType	Node *		3446810	0					
ANR	3446831	Identifier	node		3446810	1					
ANR	3446832	Parameter	regex_t * reg	2391:33:54388:54399	3446810	1	True				
ANR	3446833	ParameterType	regex_t *		3446810	0					
ANR	3446834	Identifier	reg		3446810	1					
ANR	3446835	Parameter	int * len	2391:47:54402:54409	3446810	2	True				
ANR	3446836	ParameterType	int *		3446810	0					
ANR	3446837	Identifier	len		3446810	1					
ANR	3446838	CFGEntryNode	ENTRY		3446810		True				
ANR	3446839	CFGExitNode	EXIT		3446810		True				
ANR	3446840	Symbol	node		3446810						
ANR	3446841	Symbol	len		3446810						
ANR	3446842	Symbol	reg		3446810						
ANR	3446843	Symbol	get_char_length_tree1		3446810						
ANR	3446844	Function	is_not_included	2397:0:54505:57757							
ANR	3446845	FunctionDef	"is_not_included (Node * x , Node * y , regex_t * reg)"		3446844	0					
ANR	3446846	CompoundStatement		2399:0:54564:57757	3446844	0					
ANR	3446847	IdentifierDeclStatement	"int i , len ;"	2400:2:54568:54578	3446844	0	True				
ANR	3446848	IdentifierDecl	i		3446844	0					
ANR	3446849	IdentifierDeclType	int		3446844	0					
ANR	3446850	Identifier	i		3446844	1					
ANR	3446851	IdentifierDecl	len		3446844	1					
ANR	3446852	IdentifierDeclType	int		3446844	0					
ANR	3446853	Identifier	len		3446844	1					
ANR	3446854	IdentifierDeclStatement	OnigCodePoint code ;	2401:2:54582:54600	3446844	1	True				
ANR	3446855	IdentifierDecl	code		3446844	0					
ANR	3446856	IdentifierDeclType	OnigCodePoint		3446844	0					
ANR	3446857	Identifier	code		3446844	1					
ANR	3446858	IdentifierDeclStatement	UChar * p ;	2402:2:54604:54612	3446844	2	True				
ANR	3446859	IdentifierDecl	* p		3446844	0					
ANR	3446860	IdentifierDeclType	UChar *		3446844	0					
ANR	3446861	Identifier	p		3446844	1					
ANR	3446862	IdentifierDeclStatement	int ytype ;	2403:2:54616:54625	3446844	3	True				
ANR	3446863	IdentifierDecl	ytype		3446844	0					
ANR	3446864	IdentifierDeclType	int		3446844	0					
ANR	3446865	Identifier	ytype		3446844	1					
ANR	3446866	Label	retry :	2405:1:54629:54634	3446844	4	True				
ANR	3446867	Identifier	retry		3446844	0					
ANR	3446868	ExpressionStatement	ytype = NTYPE ( y )	2406:2:54638:54654	3446844	5	True				
ANR	3446869	AssignmentExpression	ytype = NTYPE ( y )		3446844	0		=			
ANR	3446870	Identifier	ytype		3446844	0					
ANR	3446871	CallExpression	NTYPE ( y )		3446844	1					
ANR	3446872	Callee	NTYPE		3446844	0					
ANR	3446873	Identifier	NTYPE		3446844	0					
ANR	3446874	ArgumentList	y		3446844	1					
ANR	3446875	Argument	y		3446844	0					
ANR	3446876	Identifier	y		3446844	0					
ANR	3446877	SwitchStatement	switch ( NTYPE ( x ) )		3446844	6					
ANR	3446878	Condition	NTYPE ( x )	2407:10:54666:54673	3446844	0	True				
ANR	3446879	CallExpression	NTYPE ( x )		3446844	0					
ANR	3446880	Callee	NTYPE		3446844	0					
ANR	3446881	Identifier	NTYPE		3446844	0					
ANR	3446882	ArgumentList	x		3446844	1					
ANR	3446883	Argument	x		3446844	0					
ANR	3446884	Identifier	x		3446844	0					
ANR	3446885	CompoundStatement		9:20:111:111	3446844	1					
ANR	3446886	Label	case NT_CTYPE :	2408:2:54680:54693	3446844	0	True				
ANR	3446887	Identifier	NT_CTYPE		3446844	0					
ANR	3446888	CompoundStatement		11:4:134:134	3446844	1					
ANR	3446889	SwitchStatement	switch ( ytype )		3446844	0					
ANR	3446890	Condition	ytype	2410:14:54715:54719	3446844	0	True				
ANR	3446891	Identifier	ytype		3446844	0					
ANR	3446892	CompoundStatement		12:21:157:157	3446844	1					
ANR	3446893	Label	case NT_CTYPE :	2411:6:54730:54743	3446844	0	True				
ANR	3446894	Identifier	NT_CTYPE		3446844	0					
ANR	3446895	IfStatement	if ( NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype && NCTYPE ( y ) -> not != NCTYPE ( x ) -> not )		3446844	1					
ANR	3446896	Condition	NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype && NCTYPE ( y ) -> not != NCTYPE ( x ) -> not	2412:5:54750:54828	3446844	0	True				
ANR	3446897	AndExpression	NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype && NCTYPE ( y ) -> not != NCTYPE ( x ) -> not		3446844	0		&&			
ANR	3446898	EqualityExpression	NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype		3446844	0		==			
ANR	3446899	PtrMemberAccess	NCTYPE ( y ) -> ctype		3446844	0					
ANR	3446900	CallExpression	NCTYPE ( y )		3446844	0					
ANR	3446901	Callee	NCTYPE		3446844	0					
ANR	3446902	Identifier	NCTYPE		3446844	0					
ANR	3446903	ArgumentList	y		3446844	1					
ANR	3446904	Argument	y		3446844	0					
ANR	3446905	Identifier	y		3446844	0					
ANR	3446906	Identifier	ctype		3446844	1					
ANR	3446907	PtrMemberAccess	NCTYPE ( x ) -> ctype		3446844	1					
ANR	3446908	CallExpression	NCTYPE ( x )		3446844	0					
ANR	3446909	Callee	NCTYPE		3446844	0					
ANR	3446910	Identifier	NCTYPE		3446844	0					
ANR	3446911	ArgumentList	x		3446844	1					
ANR	3446912	Argument	x		3446844	0					
ANR	3446913	Identifier	x		3446844	0					
ANR	3446914	Identifier	ctype		3446844	1					
ANR	3446915	EqualityExpression	NCTYPE ( y ) -> not != NCTYPE ( x ) -> not		3446844	1		!=			
ANR	3446916	PtrMemberAccess	NCTYPE ( y ) -> not		3446844	0					
ANR	3446917	CallExpression	NCTYPE ( y )		3446844	0					
ANR	3446918	Callee	NCTYPE		3446844	0					
ANR	3446919	Identifier	NCTYPE		3446844	0					
ANR	3446920	ArgumentList	y		3446844	1					
ANR	3446921	Argument	y		3446844	0					
ANR	3446922	Identifier	y		3446844	0					
ANR	3446923	Identifier	not		3446844	1					
ANR	3446924	PtrMemberAccess	NCTYPE ( x ) -> not		3446844	1					
ANR	3446925	CallExpression	NCTYPE ( x )		3446844	0					
ANR	3446926	Callee	NCTYPE		3446844	0					
ANR	3446927	Identifier	NCTYPE		3446844	0					
ANR	3446928	ArgumentList	x		3446844	1					
ANR	3446929	Argument	x		3446844	0					
ANR	3446930	Identifier	x		3446844	0					
ANR	3446931	Identifier	not		3446844	1					
ANR	3446932	ReturnStatement	return 1 ;	2414:3:54834:54842	3446844	1	True				
ANR	3446933	PrimaryExpression	1		3446844	0					
ANR	3446934	ElseStatement	else		3446844	0					
ANR	3446935	ReturnStatement	return 0 ;	2416:3:54853:54861	3446844	0	True				
ANR	3446936	PrimaryExpression	0		3446844	0					
ANR	3446937	BreakStatement	break ;	2417:1:54864:54869	3446844	2	True				
ANR	3446938	Label	case NT_CCLASS :	2419:6:54878:54892	3446844	3	True				
ANR	3446939	Identifier	NT_CCLASS		3446844	0					
ANR	3446940	Label	swap :	2420:6:54900:54904	3446844	4	True				
ANR	3446941	Identifier	swap		3446844	0					
ANR	3446942	CompoundStatement		24:3:347:356	3446844	5					
ANR	3446943	IdentifierDeclStatement	Node * tmp ;	2422:3:54912:54921	3446844	0	True				
ANR	3446944	IdentifierDecl	* tmp		3446844	0					
ANR	3446945	IdentifierDeclType	Node *		3446844	0					
ANR	3446946	Identifier	tmp		3446844	1					
ANR	3446947	ExpressionStatement	tmp = x	2423:3:54926:54933	3446844	1	True				
ANR	3446948	AssignmentExpression	tmp = x		3446844	0		=			
ANR	3446949	Identifier	tmp		3446844	0					
ANR	3446950	Identifier	x		3446844	1					
ANR	3446951	ExpressionStatement	x = y	2423:12:54935:54940	3446844	2	True				
ANR	3446952	AssignmentExpression	x = y		3446844	0		=			
ANR	3446953	Identifier	x		3446844	0					
ANR	3446954	Identifier	y		3446844	1					
ANR	3446955	ExpressionStatement	y = tmp	2423:19:54942:54949	3446844	3	True				
ANR	3446956	AssignmentExpression	y = tmp		3446844	0		=			
ANR	3446957	Identifier	y		3446844	0					
ANR	3446958	Identifier	tmp		3446844	1					
ANR	3446959	GotoStatement	goto retry ;	2424:3:54954:54964	3446844	4	True				
ANR	3446960	Identifier	retry		3446844	0					
ANR	3446961	BreakStatement	break ;	2426:1:54970:54975	3446844	6	True				
ANR	3446962	Label	case NT_STR :	2428:6:54984:54995	3446844	7	True				
ANR	3446963	Identifier	NT_STR		3446844	0					
ANR	3446964	GotoStatement	goto swap ;	2429:1:54998:55007	3446844	8	True				
ANR	3446965	Identifier	swap		3446844	0					
ANR	3446966	BreakStatement	break ;	2430:1:55010:55015	3446844	9	True				
ANR	3446967	Label	default :	2432:6:55024:55031	3446844	10	True				
ANR	3446968	Identifier	default		3446844	0					
ANR	3446969	BreakStatement	break ;	2433:1:55034:55039	3446844	11	True				
ANR	3446970	BreakStatement	break ;	2436:4:55059:55064	3446844	2	True				
ANR	3446971	Label	case NT_CCLASS :	2438:2:55069:55083	3446844	3	True				
ANR	3446972	Identifier	NT_CCLASS		3446844	0					
ANR	3446973	CompoundStatement		42:6:532:559	3446844	4					
ANR	3446974	IdentifierDeclStatement	CClassNode * xc = NCCLASS ( x ) ;	2440:6:55097:55124	3446844	0	True				
ANR	3446975	IdentifierDecl	* xc = NCCLASS ( x )		3446844	0					
ANR	3446976	IdentifierDeclType	CClassNode *		3446844	0					
ANR	3446977	Identifier	xc		3446844	1					
ANR	3446978	AssignmentExpression	* xc = NCCLASS ( x )		3446844	2		=			
ANR	3446979	Identifier	xc		3446844	0					
ANR	3446980	CallExpression	NCCLASS ( x )		3446844	1					
ANR	3446981	Callee	NCCLASS		3446844	0					
ANR	3446982	Identifier	NCCLASS		3446844	0					
ANR	3446983	ArgumentList	x		3446844	1					
ANR	3446984	Argument	x		3446844	0					
ANR	3446985	Identifier	x		3446844	0					
ANR	3446986	SwitchStatement	switch ( ytype )		3446844	1					
ANR	3446987	Condition	ytype	2441:14:55140:55144	3446844	0	True				
ANR	3446988	Identifier	ytype		3446844	0					
ANR	3446989	CompoundStatement		43:21:582:582	3446844	1					
ANR	3446990	Label	case NT_CTYPE :	2442:6:55155:55168	3446844	0	True				
ANR	3446991	Identifier	NT_CTYPE		3446844	0					
ANR	3446992	SwitchStatement	switch ( NCTYPE ( y ) -> ctype )		3446844	1					
ANR	3446993	Condition	NCTYPE ( y ) -> ctype	2443:9:55179:55194	3446844	0	True				
ANR	3446994	PtrMemberAccess	NCTYPE ( y ) -> ctype		3446844	0					
ANR	3446995	CallExpression	NCTYPE ( y )		3446844	0					
ANR	3446996	Callee	NCTYPE		3446844	0					
ANR	3446997	Identifier	NCTYPE		3446844	0					
ANR	3446998	ArgumentList	y		3446844	1					
ANR	3446999	Argument	y		3446844	0					
ANR	3447000	Identifier	y		3446844	0					
ANR	3447001	Identifier	ctype		3446844	1					
ANR	3447002	CompoundStatement		45:27:632:632	3446844	1					
ANR	3447003	Label	case ONIGENC_CTYPE_WORD :	2444:1:55200:55223	3446844	0	True				
ANR	3447004	Identifier	ONIGENC_CTYPE_WORD		3446844	0					
ANR	3447005	IfStatement	if ( NCTYPE ( y ) -> not == 0 )		3446844	1					
ANR	3447006	Condition	NCTYPE ( y ) -> not == 0	2445:7:55232:55250	3446844	0	True				
ANR	3447007	EqualityExpression	NCTYPE ( y ) -> not == 0		3446844	0		==			
ANR	3447008	PtrMemberAccess	NCTYPE ( y ) -> not		3446844	0					
ANR	3447009	CallExpression	NCTYPE ( y )		3446844	0					
ANR	3447010	Callee	NCTYPE		3446844	0					
ANR	3447011	Identifier	NCTYPE		3446844	0					
ANR	3447012	ArgumentList	y		3446844	1					
ANR	3447013	Argument	y		3446844	0					
ANR	3447014	Identifier	y		3446844	0					
ANR	3447015	Identifier	not		3446844	1					
ANR	3447016	PrimaryExpression	0		3446844	1					
ANR	3447017	CompoundStatement		47:28:688:688	3446844	1					
ANR	3447018	IfStatement	if ( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) )		3446844	0					
ANR	3447019	Condition	IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc )	2446:9:55264:55303	3446844	0	True				
ANR	3447020	AndExpression	IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc )		3446844	0		&&			
ANR	3447021	CallExpression	IS_NULL ( xc -> mbuf )		3446844	0					
ANR	3447022	Callee	IS_NULL		3446844	0					
ANR	3447023	Identifier	IS_NULL		3446844	0					
ANR	3447024	ArgumentList	xc -> mbuf		3446844	1					
ANR	3447025	Argument	xc -> mbuf		3446844	0					
ANR	3447026	PtrMemberAccess	xc -> mbuf		3446844	0					
ANR	3447027	Identifier	xc		3446844	0					
ANR	3447028	Identifier	mbuf		3446844	1					
ANR	3447029	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447030	UnaryOperator	!		3446844	0					
ANR	3447031	CallExpression	IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447032	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447033	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447034	ArgumentList	xc		3446844	1					
ANR	3447035	Argument	xc		3446844	0					
ANR	3447036	Identifier	xc		3446844	0					
ANR	3447037	CompoundStatement		48:51:741:741	3446844	1					
ANR	3447038	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		3446844	0					
ANR	3447039	ForInit	i = 0 ;	2447:12:55320:55325	3446844	0	True				
ANR	3447040	AssignmentExpression	i = 0		3446844	0		=			
ANR	3447041	Identifier	i		3446844	0					
ANR	3447042	PrimaryExpression	0		3446844	1					
ANR	3447043	Condition	i < SINGLE_BYTE_SIZE	2447:19:55327:55346	3446844	1	True				
ANR	3447044	RelationalExpression	i < SINGLE_BYTE_SIZE		3446844	0		<			
ANR	3447045	Identifier	i		3446844	0					
ANR	3447046	Identifier	SINGLE_BYTE_SIZE		3446844	1					
ANR	3447047	PostIncDecOperationExpression	i ++	2447:41:55349:55351	3446844	2	True				
ANR	3447048	Identifier	i		3446844	0					
ANR	3447049	IncDec	++		3446844	1					
ANR	3447050	CompoundStatement		49:46:789:789	3446844	3					
ANR	3447051	IfStatement	"if ( BITSET_AT ( xc -> bs , i ) )"		3446844	0					
ANR	3447052	Condition	"BITSET_AT ( xc -> bs , i )"	2448:6:55362:55381	3446844	0	True				
ANR	3447053	CallExpression	"BITSET_AT ( xc -> bs , i )"		3446844	0					
ANR	3447054	Callee	BITSET_AT		3446844	0					
ANR	3447055	Identifier	BITSET_AT		3446844	0					
ANR	3447056	ArgumentList	xc -> bs		3446844	1					
ANR	3447057	Argument	xc -> bs		3446844	0					
ANR	3447058	PtrMemberAccess	xc -> bs		3446844	0					
ANR	3447059	Identifier	xc		3446844	0					
ANR	3447060	Identifier	bs		3446844	1					
ANR	3447061	Argument	i		3446844	1					
ANR	3447062	Identifier	i		3446844	0					
ANR	3447063	CompoundStatement		50:28:819:819	3446844	1					
ANR	3447064	IfStatement	"if ( IS_CODE_SB_WORD ( reg -> enc , i ) )"		3446844	0					
ANR	3447065	Condition	"IS_CODE_SB_WORD ( reg -> enc , i )"	2449:8:55394:55421	3446844	0	True				
ANR	3447066	CallExpression	"IS_CODE_SB_WORD ( reg -> enc , i )"		3446844	0					
ANR	3447067	Callee	IS_CODE_SB_WORD		3446844	0					
ANR	3447068	Identifier	IS_CODE_SB_WORD		3446844	0					
ANR	3447069	ArgumentList	reg -> enc		3446844	1					
ANR	3447070	Argument	reg -> enc		3446844	0					
ANR	3447071	PtrMemberAccess	reg -> enc		3446844	0					
ANR	3447072	Identifier	reg		3446844	0					
ANR	3447073	Identifier	enc		3446844	1					
ANR	3447074	Argument	i		3446844	1					
ANR	3447075	Identifier	i		3446844	0					
ANR	3447076	ReturnStatement	return 0 ;	2449:38:55424:55432	3446844	1	True				
ANR	3447077	PrimaryExpression	0		3446844	0					
ANR	3447078	ReturnStatement	return 1 ;	2452:7:55454:55462	3446844	1	True				
ANR	3447079	PrimaryExpression	1		3446844	0					
ANR	3447080	ReturnStatement	return 0 ;	2454:5:55476:55484	3446844	1	True				
ANR	3447081	PrimaryExpression	0		3446844	0					
ANR	3447082	ElseStatement	else		3446844	0					
ANR	3447083	CompoundStatement		58:8:934:934	3446844	0					
ANR	3447084	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		3446844	0					
ANR	3447085	ForInit	i = 0 ;	2457:10:55511:55516	3446844	0	True				
ANR	3447086	AssignmentExpression	i = 0		3446844	0		=			
ANR	3447087	Identifier	i		3446844	0					
ANR	3447088	PrimaryExpression	0		3446844	1					
ANR	3447089	Condition	i < SINGLE_BYTE_SIZE	2457:17:55518:55537	3446844	1	True				
ANR	3447090	RelationalExpression	i < SINGLE_BYTE_SIZE		3446844	0		<			
ANR	3447091	Identifier	i		3446844	0					
ANR	3447092	Identifier	SINGLE_BYTE_SIZE		3446844	1					
ANR	3447093	PostIncDecOperationExpression	i ++	2457:39:55540:55542	3446844	2	True				
ANR	3447094	Identifier	i		3446844	0					
ANR	3447095	IncDec	++		3446844	1					
ANR	3447096	CompoundStatement		59:44:980:980	3446844	3					
ANR	3447097	IfStatement	"if ( ! IS_CODE_SB_WORD ( reg -> enc , i ) )"		3446844	0					
ANR	3447098	Condition	"! IS_CODE_SB_WORD ( reg -> enc , i )"	2458:11:55558:55587	3446844	0	True				
ANR	3447099	UnaryOperationExpression	"! IS_CODE_SB_WORD ( reg -> enc , i )"		3446844	0					
ANR	3447100	UnaryOperator	!		3446844	0					
ANR	3447101	CallExpression	"IS_CODE_SB_WORD ( reg -> enc , i )"		3446844	1					
ANR	3447102	Callee	IS_CODE_SB_WORD		3446844	0					
ANR	3447103	Identifier	IS_CODE_SB_WORD		3446844	0					
ANR	3447104	ArgumentList	reg -> enc		3446844	1					
ANR	3447105	Argument	reg -> enc		3446844	0					
ANR	3447106	PtrMemberAccess	reg -> enc		3446844	0					
ANR	3447107	Identifier	reg		3446844	0					
ANR	3447108	Identifier	enc		3446844	1					
ANR	3447109	Argument	i		3446844	1					
ANR	3447110	Identifier	i		3446844	0					
ANR	3447111	CompoundStatement		60:43:1025:1025	3446844	1					
ANR	3447112	IfStatement	if ( ! IS_NCCLASS_NOT ( xc ) )		3446844	0					
ANR	3447113	Condition	! IS_NCCLASS_NOT ( xc )	2459:6:55598:55616	3446844	0	True				
ANR	3447114	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		3446844	0					
ANR	3447115	UnaryOperator	!		3446844	0					
ANR	3447116	CallExpression	IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447117	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447118	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447119	ArgumentList	xc		3446844	1					
ANR	3447120	Argument	xc		3446844	0					
ANR	3447121	Identifier	xc		3446844	0					
ANR	3447122	CompoundStatement		61:27:1054:1054	3446844	1					
ANR	3447123	IfStatement	"if ( BITSET_AT ( xc -> bs , i ) )"		3446844	0					
ANR	3447124	Condition	"BITSET_AT ( xc -> bs , i )"	2460:8:55629:55648	3446844	0	True				
ANR	3447125	CallExpression	"BITSET_AT ( xc -> bs , i )"		3446844	0					
ANR	3447126	Callee	BITSET_AT		3446844	0					
ANR	3447127	Identifier	BITSET_AT		3446844	0					
ANR	3447128	ArgumentList	xc -> bs		3446844	1					
ANR	3447129	Argument	xc -> bs		3446844	0					
ANR	3447130	PtrMemberAccess	xc -> bs		3446844	0					
ANR	3447131	Identifier	xc		3446844	0					
ANR	3447132	Identifier	bs		3446844	1					
ANR	3447133	Argument	i		3446844	1					
ANR	3447134	Identifier	i		3446844	0					
ANR	3447135	ReturnStatement	return 0 ;	2461:6:55657:55665	3446844	1	True				
ANR	3447136	PrimaryExpression	0		3446844	0					
ANR	3447137	ElseStatement	else		3446844	0					
ANR	3447138	CompoundStatement		65:7:1113:1113	3446844	0					
ANR	3447139	IfStatement	"if ( ! BITSET_AT ( xc -> bs , i ) )"		3446844	0					
ANR	3447140	Condition	"! BITSET_AT ( xc -> bs , i )"	2464:8:55688:55709	3446844	0	True				
ANR	3447141	UnaryOperationExpression	"! BITSET_AT ( xc -> bs , i )"		3446844	0					
ANR	3447142	UnaryOperator	!		3446844	0					
ANR	3447143	CallExpression	"BITSET_AT ( xc -> bs , i )"		3446844	1					
ANR	3447144	Callee	BITSET_AT		3446844	0					
ANR	3447145	Identifier	BITSET_AT		3446844	0					
ANR	3447146	ArgumentList	xc -> bs		3446844	1					
ANR	3447147	Argument	xc -> bs		3446844	0					
ANR	3447148	PtrMemberAccess	xc -> bs		3446844	0					
ANR	3447149	Identifier	xc		3446844	0					
ANR	3447150	Identifier	bs		3446844	1					
ANR	3447151	Argument	i		3446844	1					
ANR	3447152	Identifier	i		3446844	0					
ANR	3447153	ReturnStatement	return 0 ;	2465:6:55718:55726	3446844	1	True				
ANR	3447154	PrimaryExpression	0		3446844	0					
ANR	3447155	ReturnStatement	return 1 ;	2469:5:55753:55761	3446844	1	True				
ANR	3447156	PrimaryExpression	1		3446844	0					
ANR	3447157	BreakStatement	break ;	2471:3:55771:55776	3446844	2	True				
ANR	3447158	Label	default :	2473:1:55780:55787	3446844	3	True				
ANR	3447159	Identifier	default		3446844	0					
ANR	3447160	BreakStatement	break ;	2474:3:55792:55797	3446844	4	True				
ANR	3447161	BreakStatement	break ;	2476:1:55803:55808	3446844	2	True				
ANR	3447162	Label	case NT_CCLASS :	2478:6:55817:55831	3446844	3	True				
ANR	3447163	Identifier	NT_CCLASS		3446844	0					
ANR	3447164	CompoundStatement		83:3:1284:1311	3446844	4					
ANR	3447165	IdentifierDeclStatement	int v ;	2480:3:55839:55844	3446844	0	True				
ANR	3447166	IdentifierDecl	v		3446844	0					
ANR	3447167	IdentifierDeclType	int		3446844	0					
ANR	3447168	Identifier	v		3446844	1					
ANR	3447169	IdentifierDeclStatement	CClassNode * yc = NCCLASS ( y ) ;	2481:3:55849:55876	3446844	1	True				
ANR	3447170	IdentifierDecl	* yc = NCCLASS ( y )		3446844	0					
ANR	3447171	IdentifierDeclType	CClassNode *		3446844	0					
ANR	3447172	Identifier	yc		3446844	1					
ANR	3447173	AssignmentExpression	* yc = NCCLASS ( y )		3446844	2		=			
ANR	3447174	Identifier	yc		3446844	0					
ANR	3447175	CallExpression	NCCLASS ( y )		3446844	1					
ANR	3447176	Callee	NCCLASS		3446844	0					
ANR	3447177	Identifier	NCCLASS		3446844	0					
ANR	3447178	ArgumentList	y		3446844	1					
ANR	3447179	Argument	y		3446844	0					
ANR	3447180	Identifier	y		3446844	0					
ANR	3447181	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		3446844	2					
ANR	3447182	ForInit	i = 0 ;	2483:8:55887:55892	3446844	0	True				
ANR	3447183	AssignmentExpression	i = 0		3446844	0		=			
ANR	3447184	Identifier	i		3446844	0					
ANR	3447185	PrimaryExpression	0		3446844	1					
ANR	3447186	Condition	i < SINGLE_BYTE_SIZE	2483:15:55894:55913	3446844	1	True				
ANR	3447187	RelationalExpression	i < SINGLE_BYTE_SIZE		3446844	0		<			
ANR	3447188	Identifier	i		3446844	0					
ANR	3447189	Identifier	SINGLE_BYTE_SIZE		3446844	1					
ANR	3447190	PostIncDecOperationExpression	i ++	2483:37:55916:55918	3446844	2	True				
ANR	3447191	Identifier	i		3446844	0					
ANR	3447192	IncDec	++		3446844	1					
ANR	3447193	CompoundStatement		85:42:1356:1356	3446844	3					
ANR	3447194	ExpressionStatement	"v = BITSET_AT ( xc -> bs , i )"	2484:5:55928:55952	3446844	0	True				
ANR	3447195	AssignmentExpression	"v = BITSET_AT ( xc -> bs , i )"		3446844	0		=			
ANR	3447196	Identifier	v		3446844	0					
ANR	3447197	CallExpression	"BITSET_AT ( xc -> bs , i )"		3446844	1					
ANR	3447198	Callee	BITSET_AT		3446844	0					
ANR	3447199	Identifier	BITSET_AT		3446844	0					
ANR	3447200	ArgumentList	xc -> bs		3446844	1					
ANR	3447201	Argument	xc -> bs		3446844	0					
ANR	3447202	PtrMemberAccess	xc -> bs		3446844	0					
ANR	3447203	Identifier	xc		3446844	0					
ANR	3447204	Identifier	bs		3446844	1					
ANR	3447205	Argument	i		3446844	1					
ANR	3447206	Identifier	i		3446844	0					
ANR	3447207	IfStatement	if ( ( v != 0 && ! IS_NCCLASS_NOT ( xc ) ) || ( v == 0 && IS_NCCLASS_NOT ( xc ) ) )		3446844	1					
ANR	3447208	Condition	( v != 0 && ! IS_NCCLASS_NOT ( xc ) ) || ( v == 0 && IS_NCCLASS_NOT ( xc ) )	2485:9:55963:56043	3446844	0	True				
ANR	3447209	OrExpression	( v != 0 && ! IS_NCCLASS_NOT ( xc ) ) || ( v == 0 && IS_NCCLASS_NOT ( xc ) )		3446844	0		||			
ANR	3447210	AndExpression	v != 0 && ! IS_NCCLASS_NOT ( xc )		3446844	0		&&			
ANR	3447211	EqualityExpression	v != 0		3446844	0		!=			
ANR	3447212	Identifier	v		3446844	0					
ANR	3447213	PrimaryExpression	0		3446844	1					
ANR	3447214	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447215	UnaryOperator	!		3446844	0					
ANR	3447216	CallExpression	IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447217	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447218	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447219	ArgumentList	xc		3446844	1					
ANR	3447220	Argument	xc		3446844	0					
ANR	3447221	Identifier	xc		3446844	0					
ANR	3447222	AndExpression	v == 0 && IS_NCCLASS_NOT ( xc )		3446844	1		&&			
ANR	3447223	EqualityExpression	v == 0		3446844	0		==			
ANR	3447224	Identifier	v		3446844	0					
ANR	3447225	PrimaryExpression	0		3446844	1					
ANR	3447226	CallExpression	IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447227	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447228	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447229	ArgumentList	xc		3446844	1					
ANR	3447230	Argument	xc		3446844	0					
ANR	3447231	Identifier	xc		3446844	0					
ANR	3447232	CompoundStatement		88:48:1481:1481	3446844	1					
ANR	3447233	ExpressionStatement	"v = BITSET_AT ( yc -> bs , i )"	2487:7:56055:56079	3446844	0	True				
ANR	3447234	AssignmentExpression	"v = BITSET_AT ( yc -> bs , i )"		3446844	0		=			
ANR	3447235	Identifier	v		3446844	0					
ANR	3447236	CallExpression	"BITSET_AT ( yc -> bs , i )"		3446844	1					
ANR	3447237	Callee	BITSET_AT		3446844	0					
ANR	3447238	Identifier	BITSET_AT		3446844	0					
ANR	3447239	ArgumentList	yc -> bs		3446844	1					
ANR	3447240	Argument	yc -> bs		3446844	0					
ANR	3447241	PtrMemberAccess	yc -> bs		3446844	0					
ANR	3447242	Identifier	yc		3446844	0					
ANR	3447243	Identifier	bs		3446844	1					
ANR	3447244	Argument	i		3446844	1					
ANR	3447245	Identifier	i		3446844	0					
ANR	3447246	IfStatement	if ( ( v != 0 && ! IS_NCCLASS_NOT ( yc ) ) || ( v == 0 && IS_NCCLASS_NOT ( yc ) ) )		3446844	1					
ANR	3447247	Condition	( v != 0 && ! IS_NCCLASS_NOT ( yc ) ) || ( v == 0 && IS_NCCLASS_NOT ( yc ) )	2488:11:56092:56174	3446844	0	True				
ANR	3447248	OrExpression	( v != 0 && ! IS_NCCLASS_NOT ( yc ) ) || ( v == 0 && IS_NCCLASS_NOT ( yc ) )		3446844	0		||			
ANR	3447249	AndExpression	v != 0 && ! IS_NCCLASS_NOT ( yc )		3446844	0		&&			
ANR	3447250	EqualityExpression	v != 0		3446844	0		!=			
ANR	3447251	Identifier	v		3446844	0					
ANR	3447252	PrimaryExpression	0		3446844	1					
ANR	3447253	UnaryOperationExpression	! IS_NCCLASS_NOT ( yc )		3446844	1					
ANR	3447254	UnaryOperator	!		3446844	0					
ANR	3447255	CallExpression	IS_NCCLASS_NOT ( yc )		3446844	1					
ANR	3447256	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447257	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447258	ArgumentList	yc		3446844	1					
ANR	3447259	Argument	yc		3446844	0					
ANR	3447260	Identifier	yc		3446844	0					
ANR	3447261	AndExpression	v == 0 && IS_NCCLASS_NOT ( yc )		3446844	1		&&			
ANR	3447262	EqualityExpression	v == 0		3446844	0		==			
ANR	3447263	Identifier	v		3446844	0					
ANR	3447264	PrimaryExpression	0		3446844	1					
ANR	3447265	CallExpression	IS_NCCLASS_NOT ( yc )		3446844	1					
ANR	3447266	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447267	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447268	ArgumentList	yc		3446844	1					
ANR	3447269	Argument	yc		3446844	0					
ANR	3447270	Identifier	yc		3446844	0					
ANR	3447271	ReturnStatement	return 0 ;	2490:2:56179:56187	3446844	1	True				
ANR	3447272	PrimaryExpression	0		3446844	0					
ANR	3447273	IfStatement	if ( ( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) ) || ( IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc ) ) )		3446844	3					
ANR	3447274	Condition	( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) ) || ( IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc ) )	2493:7:56208:56302	3446844	0	True				
ANR	3447275	OrExpression	( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) ) || ( IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc ) )		3446844	0		||			
ANR	3447276	AndExpression	IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc )		3446844	0		&&			
ANR	3447277	CallExpression	IS_NULL ( xc -> mbuf )		3446844	0					
ANR	3447278	Callee	IS_NULL		3446844	0					
ANR	3447279	Identifier	IS_NULL		3446844	0					
ANR	3447280	ArgumentList	xc -> mbuf		3446844	1					
ANR	3447281	Argument	xc -> mbuf		3446844	0					
ANR	3447282	PtrMemberAccess	xc -> mbuf		3446844	0					
ANR	3447283	Identifier	xc		3446844	0					
ANR	3447284	Identifier	mbuf		3446844	1					
ANR	3447285	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447286	UnaryOperator	!		3446844	0					
ANR	3447287	CallExpression	IS_NCCLASS_NOT ( xc )		3446844	1					
ANR	3447288	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447289	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447290	ArgumentList	xc		3446844	1					
ANR	3447291	Argument	xc		3446844	0					
ANR	3447292	Identifier	xc		3446844	0					
ANR	3447293	AndExpression	IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc )		3446844	1		&&			
ANR	3447294	CallExpression	IS_NULL ( yc -> mbuf )		3446844	0					
ANR	3447295	Callee	IS_NULL		3446844	0					
ANR	3447296	Identifier	IS_NULL		3446844	0					
ANR	3447297	ArgumentList	yc -> mbuf		3446844	1					
ANR	3447298	Argument	yc -> mbuf		3446844	0					
ANR	3447299	PtrMemberAccess	yc -> mbuf		3446844	0					
ANR	3447300	Identifier	yc		3446844	0					
ANR	3447301	Identifier	mbuf		3446844	1					
ANR	3447302	UnaryOperationExpression	! IS_NCCLASS_NOT ( yc )		3446844	1					
ANR	3447303	UnaryOperator	!		3446844	0					
ANR	3447304	CallExpression	IS_NCCLASS_NOT ( yc )		3446844	1					
ANR	3447305	Callee	IS_NCCLASS_NOT		3446844	0					
ANR	3447306	Identifier	IS_NCCLASS_NOT		3446844	0					
ANR	3447307	ArgumentList	yc		3446844	1					
ANR	3447308	Argument	yc		3446844	0					
ANR	3447309	Identifier	yc		3446844	0					
ANR	3447310	ReturnStatement	return 1 ;	2495:5:56310:56318	3446844	1	True				
ANR	3447311	PrimaryExpression	1		3446844	0					
ANR	3447312	ReturnStatement	return 0 ;	2496:3:56323:56331	3446844	4	True				
ANR	3447313	PrimaryExpression	0		3446844	0					
ANR	3447314	BreakStatement	break ;	2498:1:56337:56342	3446844	5	True				
ANR	3447315	Label	case NT_STR :	2500:6:56351:56362	3446844	6	True				
ANR	3447316	Identifier	NT_STR		3446844	0					
ANR	3447317	GotoStatement	goto swap ;	2501:1:56365:56374	3446844	7	True				
ANR	3447318	Identifier	swap		3446844	0					
ANR	3447319	BreakStatement	break ;	2502:1:56377:56382	3446844	8	True				
ANR	3447320	Label	default :	2504:6:56391:56398	3446844	9	True				
ANR	3447321	Identifier	default		3446844	0					
ANR	3447322	BreakStatement	break ;	2505:1:56401:56406	3446844	10	True				
ANR	3447323	BreakStatement	break ;	2508:4:56426:56431	3446844	5	True				
ANR	3447324	Label	case NT_STR :	2510:2:56436:56447	3446844	6	True				
ANR	3447325	Identifier	NT_STR		3446844	0					
ANR	3447326	CompoundStatement		114:6:1896:1917	3446844	7					
ANR	3447327	IdentifierDeclStatement	StrNode * xs = NSTR ( x ) ;	2512:6:56461:56482	3446844	0	True				
ANR	3447328	IdentifierDecl	* xs = NSTR ( x )		3446844	0					
ANR	3447329	IdentifierDeclType	StrNode *		3446844	0					
ANR	3447330	Identifier	xs		3446844	1					
ANR	3447331	AssignmentExpression	* xs = NSTR ( x )		3446844	2		=			
ANR	3447332	Identifier	xs		3446844	0					
ANR	3447333	CallExpression	NSTR ( x )		3446844	1					
ANR	3447334	Callee	NSTR		3446844	0					
ANR	3447335	Identifier	NSTR		3446844	0					
ANR	3447336	ArgumentList	x		3446844	1					
ANR	3447337	Argument	x		3446844	0					
ANR	3447338	Identifier	x		3446844	0					
ANR	3447339	IfStatement	if ( NSTRING_LEN ( x ) == 0 )		3446844	1					
ANR	3447340	Condition	NSTRING_LEN ( x ) == 0	2513:10:56494:56512	3446844	0	True				
ANR	3447341	EqualityExpression	NSTRING_LEN ( x ) == 0		3446844	0		==			
ANR	3447342	CallExpression	NSTRING_LEN ( x )		3446844	0					
ANR	3447343	Callee	NSTRING_LEN		3446844	0					
ANR	3447344	Identifier	NSTRING_LEN		3446844	0					
ANR	3447345	ArgumentList	x		3446844	1					
ANR	3447346	Argument	x		3446844	0					
ANR	3447347	Identifier	x		3446844	0					
ANR	3447348	PrimaryExpression	0		3446844	1					
ANR	3447349	BreakStatement	break ;	2514:1:56516:56521	3446844	1	True				
ANR	3447350	SwitchStatement	switch ( ytype )		3446844	2					
ANR	3447351	Condition	ytype	2517:14:56560:56564	3446844	0	True				
ANR	3447352	Identifier	ytype		3446844	0					
ANR	3447353	CompoundStatement		119:21:2002:2002	3446844	1					
ANR	3447354	Label	case NT_CTYPE :	2518:6:56575:56588	3446844	0	True				
ANR	3447355	Identifier	NT_CTYPE		3446844	0					
ANR	3447356	SwitchStatement	switch ( NCTYPE ( y ) -> ctype )		3446844	1					
ANR	3447357	Condition	NCTYPE ( y ) -> ctype	2519:16:56606:56621	3446844	0	True				
ANR	3447358	PtrMemberAccess	NCTYPE ( y ) -> ctype		3446844	0					
ANR	3447359	CallExpression	NCTYPE ( y )		3446844	0					
ANR	3447360	Callee	NCTYPE		3446844	0					
ANR	3447361	Identifier	NCTYPE		3446844	0					
ANR	3447362	ArgumentList	y		3446844	1					
ANR	3447363	Argument	y		3446844	0					
ANR	3447364	Identifier	y		3446844	0					
ANR	3447365	Identifier	ctype		3446844	1					
ANR	3447366	CompoundStatement		121:34:2059:2059	3446844	1					
ANR	3447367	Label	case ONIGENC_CTYPE_WORD :	2520:8:56634:56657	3446844	0	True				
ANR	3447368	Identifier	ONIGENC_CTYPE_WORD		3446844	0					
ANR	3447369	IfStatement	"if ( ONIGENC_IS_MBC_WORD ( reg -> enc , xs -> s , xs -> end ) )"		3446844	1					
ANR	3447370	Condition	"ONIGENC_IS_MBC_WORD ( reg -> enc , xs -> s , xs -> end )"	2521:14:56673:56717	3446844	0	True				
ANR	3447371	CallExpression	"ONIGENC_IS_MBC_WORD ( reg -> enc , xs -> s , xs -> end )"		3446844	0					
ANR	3447372	Callee	ONIGENC_IS_MBC_WORD		3446844	0					
ANR	3447373	Identifier	ONIGENC_IS_MBC_WORD		3446844	0					
ANR	3447374	ArgumentList	reg -> enc		3446844	1					
ANR	3447375	Argument	reg -> enc		3446844	0					
ANR	3447376	PtrMemberAccess	reg -> enc		3446844	0					
ANR	3447377	Identifier	reg		3446844	0					
ANR	3447378	Identifier	enc		3446844	1					
ANR	3447379	Argument	xs -> s		3446844	1					
ANR	3447380	PtrMemberAccess	xs -> s		3446844	0					
ANR	3447381	Identifier	xs		3446844	0					
ANR	3447382	Identifier	s		3446844	1					
ANR	3447383	Argument	xs -> end		3446844	2					
ANR	3447384	PtrMemberAccess	xs -> end		3446844	0					
ANR	3447385	Identifier	xs		3446844	0					
ANR	3447386	Identifier	end		3446844	1					
ANR	3447387	ReturnStatement	return NCTYPE ( y ) -> not ;	2522:12:56732:56753	3446844	1	True				
ANR	3447388	PtrMemberAccess	NCTYPE ( y ) -> not		3446844	0					
ANR	3447389	CallExpression	NCTYPE ( y )		3446844	0					
ANR	3447390	Callee	NCTYPE		3446844	0					
ANR	3447391	Identifier	NCTYPE		3446844	0					
ANR	3447392	ArgumentList	y		3446844	1					
ANR	3447393	Argument	y		3446844	0					
ANR	3447394	Identifier	y		3446844	0					
ANR	3447395	Identifier	not		3446844	1					
ANR	3447396	ElseStatement	else		3446844	0					
ANR	3447397	ReturnStatement	return ! ( NCTYPE ( y ) -> not ) ;	2524:12:56782:56806	3446844	0	True				
ANR	3447398	UnaryOperationExpression	! ( NCTYPE ( y ) -> not )		3446844	0					
ANR	3447399	UnaryOperator	!		3446844	0					
ANR	3447400	PtrMemberAccess	NCTYPE ( y ) -> not		3446844	1					
ANR	3447401	CallExpression	NCTYPE ( y )		3446844	0					
ANR	3447402	Callee	NCTYPE		3446844	0					
ANR	3447403	Identifier	NCTYPE		3446844	0					
ANR	3447404	ArgumentList	y		3446844	1					
ANR	3447405	Argument	y		3446844	0					
ANR	3447406	Identifier	y		3446844	0					
ANR	3447407	Identifier	not		3446844	1					
ANR	3447408	BreakStatement	break ;	2525:10:56818:56823	3446844	2	True				
ANR	3447409	Label	default :	2526:8:56833:56840	3446844	3	True				
ANR	3447410	Identifier	default		3446844	0					
ANR	3447411	BreakStatement	break ;	2527:10:56852:56857	3446844	4	True				
ANR	3447412	BreakStatement	break ;	2529:8:56877:56882	3446844	2	True				
ANR	3447413	Label	case NT_CCLASS :	2531:6:56891:56905	3446844	3	True				
ANR	3447414	Identifier	NT_CCLASS		3446844	0					
ANR	3447415	CompoundStatement		135:10:2362:2389	3446844	4					
ANR	3447416	IdentifierDeclStatement	CClassNode * cc = NCCLASS ( y ) ;	2533:10:56927:56954	3446844	0	True				
ANR	3447417	IdentifierDecl	* cc = NCCLASS ( y )		3446844	0					
ANR	3447418	IdentifierDeclType	CClassNode *		3446844	0					
ANR	3447419	Identifier	cc		3446844	1					
ANR	3447420	AssignmentExpression	* cc = NCCLASS ( y )		3446844	2		=			
ANR	3447421	Identifier	cc		3446844	0					
ANR	3447422	CallExpression	NCCLASS ( y )		3446844	1					
ANR	3447423	Callee	NCCLASS		3446844	0					
ANR	3447424	Identifier	NCCLASS		3446844	0					
ANR	3447425	ArgumentList	y		3446844	1					
ANR	3447426	Argument	y		3446844	0					
ANR	3447427	Identifier	y		3446844	0					
ANR	3447428	ExpressionStatement	"code = ONIGENC_MBC_TO_CODE ( reg -> enc , xs -> s , xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc ) )"	2535:10:56967:57085	3446844	1	True				
ANR	3447429	AssignmentExpression	"code = ONIGENC_MBC_TO_CODE ( reg -> enc , xs -> s , xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc ) )"		3446844	0		=			
ANR	3447430	Identifier	code		3446844	0					
ANR	3447431	CallExpression	"ONIGENC_MBC_TO_CODE ( reg -> enc , xs -> s , xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc ) )"		3446844	1					
ANR	3447432	Callee	ONIGENC_MBC_TO_CODE		3446844	0					
ANR	3447433	Identifier	ONIGENC_MBC_TO_CODE		3446844	0					
ANR	3447434	ArgumentList	reg -> enc		3446844	1					
ANR	3447435	Argument	reg -> enc		3446844	0					
ANR	3447436	PtrMemberAccess	reg -> enc		3446844	0					
ANR	3447437	Identifier	reg		3446844	0					
ANR	3447438	Identifier	enc		3446844	1					
ANR	3447439	Argument	xs -> s		3446844	1					
ANR	3447440	PtrMemberAccess	xs -> s		3446844	0					
ANR	3447441	Identifier	xs		3446844	0					
ANR	3447442	Identifier	s		3446844	1					
ANR	3447443	Argument	xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc )		3446844	2					
ANR	3447444	AdditiveExpression	xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc )		3446844	0		+			
ANR	3447445	PtrMemberAccess	xs -> s		3446844	0					
ANR	3447446	Identifier	xs		3446844	0					
ANR	3447447	Identifier	s		3446844	1					
ANR	3447448	CallExpression	ONIGENC_MBC_MAXLEN ( reg -> enc )		3446844	1					
ANR	3447449	Callee	ONIGENC_MBC_MAXLEN		3446844	0					
ANR	3447450	Identifier	ONIGENC_MBC_MAXLEN		3446844	0					
ANR	3447451	ArgumentList	reg -> enc		3446844	1					
ANR	3447452	Argument	reg -> enc		3446844	0					
ANR	3447453	PtrMemberAccess	reg -> enc		3446844	0					
ANR	3447454	Identifier	reg		3446844	0					
ANR	3447455	Identifier	enc		3446844	1					
ANR	3447456	ReturnStatement	"return ( onig_is_code_in_cc ( reg -> enc , code , cc ) != 0 ? 0 : 1 ) ;"	2537:10:57097:57157	3446844	2	True				
ANR	3447457	ConditionalExpression	"onig_is_code_in_cc ( reg -> enc , code , cc ) != 0 ? 0 : 1"		3446844	0					
ANR	3447458	Condition	"onig_is_code_in_cc ( reg -> enc , code , cc ) != 0"		3446844	0					
ANR	3447459	EqualityExpression	"onig_is_code_in_cc ( reg -> enc , code , cc ) != 0"		3446844	0		!=			
ANR	3447460	CallExpression	"onig_is_code_in_cc ( reg -> enc , code , cc )"		3446844	0					
ANR	3447461	Callee	onig_is_code_in_cc		3446844	0					
ANR	3447462	Identifier	onig_is_code_in_cc		3446844	0					
ANR	3447463	ArgumentList	reg -> enc		3446844	1					
ANR	3447464	Argument	reg -> enc		3446844	0					
ANR	3447465	PtrMemberAccess	reg -> enc		3446844	0					
ANR	3447466	Identifier	reg		3446844	0					
ANR	3447467	Identifier	enc		3446844	1					
ANR	3447468	Argument	code		3446844	1					
ANR	3447469	Identifier	code		3446844	0					
ANR	3447470	Argument	cc		3446844	2					
ANR	3447471	Identifier	cc		3446844	0					
ANR	3447472	PrimaryExpression	0		3446844	1					
ANR	3447473	PrimaryExpression	0		3446844	1					
ANR	3447474	PrimaryExpression	1		3446844	2					
ANR	3447475	BreakStatement	break ;	2539:8:57177:57182	3446844	5	True				
ANR	3447476	Label	case NT_STR :	2541:6:57191:57202	3446844	6	True				
ANR	3447477	Identifier	NT_STR		3446844	0					
ANR	3447478	CompoundStatement		146:10:2679:2700	3446844	7					
ANR	3447479	IdentifierDeclStatement	UChar * q ;	2543:10:57224:57232	3446844	0	True				
ANR	3447480	IdentifierDecl	* q		3446844	0					
ANR	3447481	IdentifierDeclType	UChar *		3446844	0					
ANR	3447482	Identifier	q		3446844	1					
ANR	3447483	IdentifierDeclStatement	StrNode * ys = NSTR ( y ) ;	2544:10:57244:57265	3446844	1	True				
ANR	3447484	IdentifierDecl	* ys = NSTR ( y )		3446844	0					
ANR	3447485	IdentifierDeclType	StrNode *		3446844	0					
ANR	3447486	Identifier	ys		3446844	1					
ANR	3447487	AssignmentExpression	* ys = NSTR ( y )		3446844	2		=			
ANR	3447488	Identifier	ys		3446844	0					
ANR	3447489	CallExpression	NSTR ( y )		3446844	1					
ANR	3447490	Callee	NSTR		3446844	0					
ANR	3447491	Identifier	NSTR		3446844	0					
ANR	3447492	ArgumentList	y		3446844	1					
ANR	3447493	Argument	y		3446844	0					
ANR	3447494	Identifier	y		3446844	0					
ANR	3447495	ExpressionStatement	len = NSTRING_LEN ( x )	2545:10:57277:57297	3446844	2	True				
ANR	3447496	AssignmentExpression	len = NSTRING_LEN ( x )		3446844	0		=			
ANR	3447497	Identifier	len		3446844	0					
ANR	3447498	CallExpression	NSTRING_LEN ( x )		3446844	1					
ANR	3447499	Callee	NSTRING_LEN		3446844	0					
ANR	3447500	Identifier	NSTRING_LEN		3446844	0					
ANR	3447501	ArgumentList	x		3446844	1					
ANR	3447502	Argument	x		3446844	0					
ANR	3447503	Identifier	x		3446844	0					
ANR	3447504	IfStatement	if ( len > NSTRING_LEN ( y ) )		3446844	3					
ANR	3447505	Condition	len > NSTRING_LEN ( y )	2546:14:57313:57332	3446844	0	True				
ANR	3447506	RelationalExpression	len > NSTRING_LEN ( y )		3446844	0		>			
ANR	3447507	Identifier	len		3446844	0					
ANR	3447508	CallExpression	NSTRING_LEN ( y )		3446844	1					
ANR	3447509	Callee	NSTRING_LEN		3446844	0					
ANR	3447510	Identifier	NSTRING_LEN		3446844	0					
ANR	3447511	ArgumentList	y		3446844	1					
ANR	3447512	Argument	y		3446844	0					
ANR	3447513	Identifier	y		3446844	0					
ANR	3447514	ExpressionStatement	len = NSTRING_LEN ( y )	2546:36:57335:57355	3446844	1	True				
ANR	3447515	AssignmentExpression	len = NSTRING_LEN ( y )		3446844	0		=			
ANR	3447516	Identifier	len		3446844	0					
ANR	3447517	CallExpression	NSTRING_LEN ( y )		3446844	1					
ANR	3447518	Callee	NSTRING_LEN		3446844	0					
ANR	3447519	Identifier	NSTRING_LEN		3446844	0					
ANR	3447520	ArgumentList	y		3446844	1					
ANR	3447521	Argument	y		3446844	0					
ANR	3447522	Identifier	y		3446844	0					
ANR	3447523	IfStatement	if ( NSTRING_IS_AMBIG ( x ) || NSTRING_IS_AMBIG ( y ) )		3446844	4					
ANR	3447524	Condition	NSTRING_IS_AMBIG ( x ) || NSTRING_IS_AMBIG ( y )	2547:14:57371:57412	3446844	0	True				
ANR	3447525	OrExpression	NSTRING_IS_AMBIG ( x ) || NSTRING_IS_AMBIG ( y )		3446844	0		||			
ANR	3447526	CallExpression	NSTRING_IS_AMBIG ( x )		3446844	0					
ANR	3447527	Callee	NSTRING_IS_AMBIG		3446844	0					
ANR	3447528	Identifier	NSTRING_IS_AMBIG		3446844	0					
ANR	3447529	ArgumentList	x		3446844	1					
ANR	3447530	Argument	x		3446844	0					
ANR	3447531	Identifier	x		3446844	0					
ANR	3447532	CallExpression	NSTRING_IS_AMBIG ( y )		3446844	1					
ANR	3447533	Callee	NSTRING_IS_AMBIG		3446844	0					
ANR	3447534	Identifier	NSTRING_IS_AMBIG		3446844	0					
ANR	3447535	ArgumentList	y		3446844	1					
ANR	3447536	Argument	y		3446844	0					
ANR	3447537	Identifier	y		3446844	0					
ANR	3447538	CompoundStatement		149:58:2850:2850	3446844	1					
ANR	3447539	ReturnStatement	return 0 ;	2549:12:57460:57468	3446844	0	True				
ANR	3447540	PrimaryExpression	0		3446844	0					
ANR	3447541	ElseStatement	else		3446844	0					
ANR	3447542	CompoundStatement		153:15:2932:2932	3446844	0					
ANR	3447543	ForStatement	"for ( i = 0 , p = ys -> s , q = xs -> s ; i < len ; i ++ , p ++ , q ++ )"		3446844	0					
ANR	3447544	ForInit	"i = 0 , p = ys -> s , q = xs -> s ;"	2552:17:57516:57543	3446844	0	True				
ANR	3447545	Expression	"i = 0 , p = ys -> s , q = xs -> s"		3446844	0					
ANR	3447546	AssignmentExpression	i = 0		3446844	0		=			
ANR	3447547	Identifier	i		3446844	0					
ANR	3447548	PrimaryExpression	0		3446844	1					
ANR	3447549	Expression	"p = ys -> s , q = xs -> s"		3446844	1					
ANR	3447550	AssignmentExpression	p = ys -> s		3446844	0		=			
ANR	3447551	Identifier	p		3446844	0					
ANR	3447552	PtrMemberAccess	ys -> s		3446844	1					
ANR	3447553	Identifier	ys		3446844	0					
ANR	3447554	Identifier	s		3446844	1					
ANR	3447555	AssignmentExpression	q = xs -> s		3446844	1		=			
ANR	3447556	Identifier	q		3446844	0					
ANR	3447557	PtrMemberAccess	xs -> s		3446844	1					
ANR	3447558	Identifier	xs		3446844	0					
ANR	3447559	Identifier	s		3446844	1					
ANR	3447560	Condition	i < len	2552:46:57545:57551	3446844	1	True				
ANR	3447561	RelationalExpression	i < len		3446844	0		<			
ANR	3447562	Identifier	i		3446844	0					
ANR	3447563	Identifier	len		3446844	1					
ANR	3447564	Expression	"i ++ , p ++ , q ++"	2552:55:57554:57566	3446844	2	True				
ANR	3447565	PostIncDecOperationExpression	i ++		3446844	0					
ANR	3447566	Identifier	i		3446844	0					
ANR	3447567	IncDec	++		3446844	1					
ANR	3447568	Expression	"p ++ , q ++"		3446844	1					
ANR	3447569	PostIncDecOperationExpression	p ++		3446844	0					
ANR	3447570	Identifier	p		3446844	0					
ANR	3447571	IncDec	++		3446844	1					
ANR	3447572	PostIncDecOperationExpression	q ++		3446844	1					
ANR	3447573	Identifier	q		3446844	0					
ANR	3447574	IncDec	++		3446844	1					
ANR	3447575	CompoundStatement		154:70:3004:3004	3446844	3					
ANR	3447576	IfStatement	if ( * p != * q )		3446844	0					
ANR	3447577	Condition	* p != * q	2553:18:57589:57596	3446844	0	True				
ANR	3447578	EqualityExpression	* p != * q		3446844	0		!=			
ANR	3447579	UnaryOperationExpression	* p		3446844	0					
ANR	3447580	UnaryOperator	*		3446844	0					
ANR	3447581	Identifier	p		3446844	1					
ANR	3447582	UnaryOperationExpression	* q		3446844	1					
ANR	3447583	UnaryOperator	*		3446844	0					
ANR	3447584	Identifier	q		3446844	1					
ANR	3447585	ReturnStatement	return 1 ;	2553:28:57599:57607	3446844	1	True				
ANR	3447586	PrimaryExpression	1		3446844	0					
ANR	3447587	BreakStatement	break ;	2557:8:57653:57658	3446844	8	True				
ANR	3447588	Label	default :	2559:6:57668:57675	3446844	9	True				
ANR	3447589	Identifier	default		3446844	0					
ANR	3447590	BreakStatement	break ;	2560:8:57685:57690	3446844	10	True				
ANR	3447591	BreakStatement	break ;	2563:4:57710:57715	3446844	8	True				
ANR	3447592	Label	default :	2565:2:57720:57727	3446844	9	True				
ANR	3447593	Identifier	default		3446844	0					
ANR	3447594	BreakStatement	break ;	2566:4:57733:57738	3446844	10	True				
ANR	3447595	ReturnStatement	return 0 ;	2569:2:57747:57755	3446844	7	True				
ANR	3447596	PrimaryExpression	0		3446844	0					
ANR	3447597	ReturnType	static int		3446844	1					
ANR	3447598	Identifier	is_not_included		3446844	2					
ANR	3447599	ParameterList	"Node * x , Node * y , regex_t * reg"		3446844	3					
ANR	3447600	Parameter	Node * x	2398:16:54532:54538	3446844	0	True				
ANR	3447601	ParameterType	Node *		3446844	0					
ANR	3447602	Identifier	x		3446844	1					
ANR	3447603	Parameter	Node * y	2398:25:54541:54547	3446844	1	True				
ANR	3447604	ParameterType	Node *		3446844	0					
ANR	3447605	Identifier	y		3446844	1					
ANR	3447606	Parameter	regex_t * reg	2398:34:54550:54561	3446844	2	True				
ANR	3447607	ParameterType	regex_t *		3446844	0					
ANR	3447608	Identifier	reg		3446844	1					
ANR	3447609	CFGEntryNode	ENTRY		3446844		True				
ANR	3447610	CFGExitNode	EXIT		3446844		True				
ANR	3447611	Symbol	BITSET_AT		3446844						
ANR	3447612	Symbol	xc -> mbuf		3446844						
ANR	3447613	Symbol	IS_NCCLASS_NOT		3446844						
ANR	3447614	Symbol	yc		3446844						
ANR	3447615	Symbol	NCCLASS		3446844						
ANR	3447616	Symbol	* NCTYPE		3446844						
ANR	3447617	Symbol	len		3446844						
ANR	3447618	Symbol	reg		3446844						
ANR	3447619	Symbol	tmp		3446844						
ANR	3447620	Symbol	ys		3446844						
ANR	3447621	Symbol	onig_is_code_in_cc		3446844						
ANR	3447622	Symbol	NCTYPE		3446844						
ANR	3447623	Symbol	ONIGENC_MBC_TO_CODE		3446844						
ANR	3447624	Symbol	SINGLE_BYTE_SIZE		3446844						
ANR	3447625	Symbol	* xs		3446844						
ANR	3447626	Symbol	yc -> bs		3446844						
ANR	3447627	Symbol	NSTRING_IS_AMBIG		3446844						
ANR	3447628	Symbol	NSTR		3446844						
ANR	3447629	Symbol	reg -> enc		3446844						
ANR	3447630	Symbol	* xc		3446844						
ANR	3447631	Symbol	NCTYPE ( y ) -> ctype		3446844						
ANR	3447632	Symbol	code		3446844						
ANR	3447633	Symbol	* ys		3446844						
ANR	3447634	Symbol	xs -> s		3446844						
ANR	3447635	Symbol	IS_CODE_SB_WORD		3446844						
ANR	3447636	Symbol	NCTYPE ( x ) -> ctype		3446844						
ANR	3447637	Symbol	yc -> mbuf		3446844						
ANR	3447638	Symbol	* yc		3446844						
ANR	3447639	Symbol	IS_NULL		3446844						
ANR	3447640	Symbol	NCTYPE ( x ) -> not		3446844						
ANR	3447641	Symbol	cc		3446844						
ANR	3447642	Symbol	ONIGENC_MBC_MAXLEN		3446844						
ANR	3447643	Symbol	i		3446844						
ANR	3447644	Symbol	xc		3446844						
ANR	3447645	Symbol	ytype		3446844						
ANR	3447646	Symbol	xc -> bs		3446844						
ANR	3447647	Symbol	ys -> s		3446844						
ANR	3447648	Symbol	p		3446844						
ANR	3447649	Symbol	q		3446844						
ANR	3447650	Symbol	v		3446844						
ANR	3447651	Symbol	NCTYPE ( y ) -> not		3446844						
ANR	3447652	Symbol	xs -> end		3446844						
ANR	3447653	Symbol	x		3446844						
ANR	3447654	Symbol	y		3446844						
ANR	3447655	Symbol	NTYPE		3446844						
ANR	3447656	Symbol	* p		3446844						
ANR	3447657	Symbol	xs		3446844						
ANR	3447658	Symbol	* q		3446844						
ANR	3447659	Symbol	NSTRING_LEN		3446844						
ANR	3447660	Symbol	ONIGENC_IS_MBC_WORD		3446844						
ANR	3447661	Symbol	* reg		3446844						
ANR	3447662	Function	get_head_value_node	2572:0:57760:59253							
ANR	3447663	FunctionDef	"get_head_value_node (Node * node , int exact , regex_t * reg)"		3447662	0					
ANR	3447664	CompoundStatement		2574:0:57830:59253	3447662	0					
ANR	3447665	IdentifierDeclStatement	Node * n = NULL_NODE ;	2575:2:57834:57853	3447662	0	True				
ANR	3447666	IdentifierDecl	* n = NULL_NODE		3447662	0					
ANR	3447667	IdentifierDeclType	Node *		3447662	0					
ANR	3447668	Identifier	n		3447662	1					
ANR	3447669	AssignmentExpression	* n = NULL_NODE		3447662	2		=			
ANR	3447670	Identifier	NULL_NODE		3447662	0					
ANR	3447671	Identifier	NULL_NODE		3447662	1					
ANR	3447672	SwitchStatement	switch ( NTYPE ( node ) )		3447662	1					
ANR	3447673	Condition	NTYPE ( node )	2577:10:57866:57876	3447662	0	True				
ANR	3447674	CallExpression	NTYPE ( node )		3447662	0					
ANR	3447675	Callee	NTYPE		3447662	0					
ANR	3447676	Identifier	NTYPE		3447662	0					
ANR	3447677	ArgumentList	node		3447662	1					
ANR	3447678	Argument	node		3447662	0					
ANR	3447679	Identifier	node		3447662	0					
ANR	3447680	CompoundStatement		4:23:48:48	3447662	1					
ANR	3447681	Label	case NT_BREF :	2578:2:57883:57895	3447662	0	True				
ANR	3447682	Identifier	NT_BREF		3447662	0					
ANR	3447683	Label	case NT_ALT :	2579:2:57899:57910	3447662	1	True				
ANR	3447684	Identifier	NT_ALT		3447662	0					
ANR	3447685	Label	case NT_CANY :	2580:2:57914:57926	3447662	2	True				
ANR	3447686	Identifier	NT_CANY		3447662	0					
ANR	3447687	Label	case NT_CALL :	2582:2:57953:57965	3447662	3	True				
ANR	3447688	Identifier	NT_CALL		3447662	0					
ANR	3447689	BreakStatement	break ;	2584:4:57978:57983	3447662	4	True				
ANR	3447690	Label	case NT_CTYPE :	2586:2:57988:58001	3447662	5	True				
ANR	3447691	Identifier	NT_CTYPE		3447662	0					
ANR	3447692	Label	case NT_CCLASS :	2587:2:58005:58019	3447662	6	True				
ANR	3447693	Identifier	NT_CCLASS		3447662	0					
ANR	3447694	IfStatement	if ( exact == 0 )		3447662	7					
ANR	3447695	Condition	exact == 0	2588:8:58029:58038	3447662	0	True				
ANR	3447696	EqualityExpression	exact == 0		3447662	0		==			
ANR	3447697	Identifier	exact		3447662	0					
ANR	3447698	PrimaryExpression	0		3447662	1					
ANR	3447699	CompoundStatement		15:20:210:210	3447662	1					
ANR	3447700	ExpressionStatement	n = node	2589:6:58049:58057	3447662	0	True				
ANR	3447701	AssignmentExpression	n = node		3447662	0		=			
ANR	3447702	Identifier	n		3447662	0					
ANR	3447703	Identifier	node		3447662	1					
ANR	3447704	BreakStatement	break ;	2591:4:58069:58074	3447662	8	True				
ANR	3447705	Label	case NT_LIST :	2593:2:58079:58091	3447662	9	True				
ANR	3447706	Identifier	NT_LIST		3447662	0					
ANR	3447707	ExpressionStatement	"n = get_head_value_node ( NCAR ( node ) , exact , reg )"	2594:4:58097:58144	3447662	10	True				
ANR	3447708	AssignmentExpression	"n = get_head_value_node ( NCAR ( node ) , exact , reg )"		3447662	0		=			
ANR	3447709	Identifier	n		3447662	0					
ANR	3447710	CallExpression	"get_head_value_node ( NCAR ( node ) , exact , reg )"		3447662	1					
ANR	3447711	Callee	get_head_value_node		3447662	0					
ANR	3447712	Identifier	get_head_value_node		3447662	0					
ANR	3447713	ArgumentList	NCAR ( node )		3447662	1					
ANR	3447714	Argument	NCAR ( node )		3447662	0					
ANR	3447715	CallExpression	NCAR ( node )		3447662	0					
ANR	3447716	Callee	NCAR		3447662	0					
ANR	3447717	Identifier	NCAR		3447662	0					
ANR	3447718	ArgumentList	node		3447662	1					
ANR	3447719	Argument	node		3447662	0					
ANR	3447720	Identifier	node		3447662	0					
ANR	3447721	Argument	exact		3447662	1					
ANR	3447722	Identifier	exact		3447662	0					
ANR	3447723	Argument	reg		3447662	2					
ANR	3447724	Identifier	reg		3447662	0					
ANR	3447725	BreakStatement	break ;	2595:4:58150:58155	3447662	11	True				
ANR	3447726	Label	case NT_STR :	2597:2:58160:58171	3447662	12	True				
ANR	3447727	Identifier	NT_STR		3447662	0					
ANR	3447728	CompoundStatement		26:6:354:378	3447662	13					
ANR	3447729	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2599:6:58185:58209	3447662	0	True				
ANR	3447730	IdentifierDecl	* sn = NSTR ( node )		3447662	0					
ANR	3447731	IdentifierDeclType	StrNode *		3447662	0					
ANR	3447732	Identifier	sn		3447662	1					
ANR	3447733	AssignmentExpression	* sn = NSTR ( node )		3447662	2		=			
ANR	3447734	Identifier	sn		3447662	0					
ANR	3447735	CallExpression	NSTR ( node )		3447662	1					
ANR	3447736	Callee	NSTR		3447662	0					
ANR	3447737	Identifier	NSTR		3447662	0					
ANR	3447738	ArgumentList	node		3447662	1					
ANR	3447739	Argument	node		3447662	0					
ANR	3447740	Identifier	node		3447662	0					
ANR	3447741	IfStatement	if ( sn -> end <= sn -> s )		3447662	1					
ANR	3447742	Condition	sn -> end <= sn -> s	2601:10:58222:58237	3447662	0	True				
ANR	3447743	RelationalExpression	sn -> end <= sn -> s		3447662	0		<=			
ANR	3447744	PtrMemberAccess	sn -> end		3447662	0					
ANR	3447745	Identifier	sn		3447662	0					
ANR	3447746	Identifier	end		3447662	1					
ANR	3447747	PtrMemberAccess	sn -> s		3447662	1					
ANR	3447748	Identifier	sn		3447662	0					
ANR	3447749	Identifier	s		3447662	1					
ANR	3447750	BreakStatement	break ;	2602:1:58241:58246	3447662	1	True				
ANR	3447751	IfStatement	if ( exact != 0 && ! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options ) )		3447662	2					
ANR	3447752	Condition	exact != 0 && ! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options )	2604:10:58259:58327	3447662	0	True				
ANR	3447753	AndExpression	exact != 0 && ! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options )		3447662	0		&&			
ANR	3447754	EqualityExpression	exact != 0		3447662	0		!=			
ANR	3447755	Identifier	exact		3447662	0					
ANR	3447756	PrimaryExpression	0		3447662	1					
ANR	3447757	AndExpression	! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options )		3447662	1		&&			
ANR	3447758	UnaryOperationExpression	! NSTRING_IS_RAW ( node )		3447662	0					
ANR	3447759	UnaryOperator	!		3447662	0					
ANR	3447760	CallExpression	NSTRING_IS_RAW ( node )		3447662	1					
ANR	3447761	Callee	NSTRING_IS_RAW		3447662	0					
ANR	3447762	Identifier	NSTRING_IS_RAW		3447662	0					
ANR	3447763	ArgumentList	node		3447662	1					
ANR	3447764	Argument	node		3447662	0					
ANR	3447765	Identifier	node		3447662	0					
ANR	3447766	CallExpression	IS_IGNORECASE ( reg -> options )		3447662	1					
ANR	3447767	Callee	IS_IGNORECASE		3447662	0					
ANR	3447768	Identifier	IS_IGNORECASE		3447662	0					
ANR	3447769	ArgumentList	reg -> options		3447662	1					
ANR	3447770	Argument	reg -> options		3447662	0					
ANR	3447771	PtrMemberAccess	reg -> options		3447662	0					
ANR	3447772	Identifier	reg		3447662	0					
ANR	3447773	Identifier	options		3447662	1					
ANR	3447774	CompoundStatement		32:57:499:499	3447662	1					
ANR	3447775	ElseStatement	else		3447662	0					
ANR	3447776	CompoundStatement		34:11:520:520	3447662	0					
ANR	3447777	ExpressionStatement	n = node	2608:1:58354:58362	3447662	0	True				
ANR	3447778	AssignmentExpression	n = node		3447662	0		=			
ANR	3447779	Identifier	n		3447662	0					
ANR	3447780	Identifier	node		3447662	1					
ANR	3447781	BreakStatement	break ;	2611:4:58382:58387	3447662	14	True				
ANR	3447782	Label	case NT_QTFR :	2613:2:58392:58404	3447662	15	True				
ANR	3447783	Identifier	NT_QTFR		3447662	0					
ANR	3447784	CompoundStatement		42:6:587:613	3447662	16					
ANR	3447785	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2615:6:58418:58444	3447662	0	True				
ANR	3447786	IdentifierDecl	* qn = NQTFR ( node )		3447662	0					
ANR	3447787	IdentifierDeclType	QtfrNode *		3447662	0					
ANR	3447788	Identifier	qn		3447662	1					
ANR	3447789	AssignmentExpression	* qn = NQTFR ( node )		3447662	2		=			
ANR	3447790	Identifier	qn		3447662	0					
ANR	3447791	CallExpression	NQTFR ( node )		3447662	1					
ANR	3447792	Callee	NQTFR		3447662	0					
ANR	3447793	Identifier	NQTFR		3447662	0					
ANR	3447794	ArgumentList	node		3447662	1					
ANR	3447795	Argument	node		3447662	0					
ANR	3447796	Identifier	node		3447662	0					
ANR	3447797	IfStatement	if ( qn -> lower > 0 )		3447662	1					
ANR	3447798	Condition	qn -> lower > 0	2616:10:58456:58468	3447662	0	True				
ANR	3447799	RelationalExpression	qn -> lower > 0		3447662	0		>			
ANR	3447800	PtrMemberAccess	qn -> lower		3447662	0					
ANR	3447801	Identifier	qn		3447662	0					
ANR	3447802	Identifier	lower		3447662	1					
ANR	3447803	PrimaryExpression	0		3447662	1					
ANR	3447804	CompoundStatement		43:25:640:640	3447662	1					
ANR	3447805	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		3447662	0					
ANR	3447806	Condition	IS_NOT_NULL ( qn -> head_exact )	2617:5:58478:58504	3447662	0	True				
ANR	3447807	CallExpression	IS_NOT_NULL ( qn -> head_exact )		3447662	0					
ANR	3447808	Callee	IS_NOT_NULL		3447662	0					
ANR	3447809	Identifier	IS_NOT_NULL		3447662	0					
ANR	3447810	ArgumentList	qn -> head_exact		3447662	1					
ANR	3447811	Argument	qn -> head_exact		3447662	0					
ANR	3447812	PtrMemberAccess	qn -> head_exact		3447662	0					
ANR	3447813	Identifier	qn		3447662	0					
ANR	3447814	Identifier	head_exact		3447662	1					
ANR	3447815	ExpressionStatement	n = qn -> head_exact	2618:3:58510:58528	3447662	1	True				
ANR	3447816	AssignmentExpression	n = qn -> head_exact		3447662	0		=			
ANR	3447817	Identifier	n		3447662	0					
ANR	3447818	PtrMemberAccess	qn -> head_exact		3447662	1					
ANR	3447819	Identifier	qn		3447662	0					
ANR	3447820	Identifier	head_exact		3447662	1					
ANR	3447821	ElseStatement	else		3447662	0					
ANR	3447822	ExpressionStatement	"n = get_head_value_node ( qn -> target , exact , reg )"	2620:3:58539:58586	3447662	0	True				
ANR	3447823	AssignmentExpression	"n = get_head_value_node ( qn -> target , exact , reg )"		3447662	0		=			
ANR	3447824	Identifier	n		3447662	0					
ANR	3447825	CallExpression	"get_head_value_node ( qn -> target , exact , reg )"		3447662	1					
ANR	3447826	Callee	get_head_value_node		3447662	0					
ANR	3447827	Identifier	get_head_value_node		3447662	0					
ANR	3447828	ArgumentList	qn -> target		3447662	1					
ANR	3447829	Argument	qn -> target		3447662	0					
ANR	3447830	PtrMemberAccess	qn -> target		3447662	0					
ANR	3447831	Identifier	qn		3447662	0					
ANR	3447832	Identifier	target		3447662	1					
ANR	3447833	Argument	exact		3447662	1					
ANR	3447834	Identifier	exact		3447662	0					
ANR	3447835	Argument	reg		3447662	2					
ANR	3447836	Identifier	reg		3447662	0					
ANR	3447837	BreakStatement	break ;	2623:4:58606:58611	3447662	17	True				
ANR	3447838	Label	case NT_ENCLOSE :	2625:2:58616:58631	3447662	18	True				
ANR	3447839	Identifier	NT_ENCLOSE		3447662	0					
ANR	3447840	CompoundStatement		54:6:814:846	3447662	19					
ANR	3447841	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2627:6:58645:58677	3447662	0	True				
ANR	3447842	IdentifierDecl	* en = NENCLOSE ( node )		3447662	0					
ANR	3447843	IdentifierDeclType	EncloseNode *		3447662	0					
ANR	3447844	Identifier	en		3447662	1					
ANR	3447845	AssignmentExpression	* en = NENCLOSE ( node )		3447662	2		=			
ANR	3447846	Identifier	en		3447662	0					
ANR	3447847	CallExpression	NENCLOSE ( node )		3447662	1					
ANR	3447848	Callee	NENCLOSE		3447662	0					
ANR	3447849	Identifier	NENCLOSE		3447662	0					
ANR	3447850	ArgumentList	node		3447662	1					
ANR	3447851	Argument	node		3447662	0					
ANR	3447852	Identifier	node		3447662	0					
ANR	3447853	SwitchStatement	switch ( en -> type )		3447662	1					
ANR	3447854	Condition	en -> type	2628:14:58693:58700	3447662	0	True				
ANR	3447855	PtrMemberAccess	en -> type		3447662	0					
ANR	3447856	Identifier	en		3447662	0					
ANR	3447857	Identifier	type		3447662	1					
ANR	3447858	CompoundStatement		55:24:872:872	3447662	1					
ANR	3447859	Label	case ENCLOSE_OPTION :	2629:6:58711:58730	3447662	0	True				
ANR	3447860	Identifier	ENCLOSE_OPTION		3447662	0					
ANR	3447861	CompoundStatement		58:3:907:944	3447662	1					
ANR	3447862	IdentifierDeclStatement	OnigOptionType options = reg -> options ;	2631:3:58738:58775	3447662	0	True				
ANR	3447863	IdentifierDecl	options = reg -> options		3447662	0					
ANR	3447864	IdentifierDeclType	OnigOptionType		3447662	0					
ANR	3447865	Identifier	options		3447662	1					
ANR	3447866	AssignmentExpression	options = reg -> options		3447662	2		=			
ANR	3447867	Identifier	options		3447662	0					
ANR	3447868	PtrMemberAccess	reg -> options		3447662	1					
ANR	3447869	Identifier	reg		3447662	0					
ANR	3447870	Identifier	options		3447662	1					
ANR	3447871	ExpressionStatement	reg -> options = NENCLOSE ( node ) -> option	2633:3:58781:58818	3447662	1	True				
ANR	3447872	AssignmentExpression	reg -> options = NENCLOSE ( node ) -> option		3447662	0		=			
ANR	3447873	PtrMemberAccess	reg -> options		3447662	0					
ANR	3447874	Identifier	reg		3447662	0					
ANR	3447875	Identifier	options		3447662	1					
ANR	3447876	PtrMemberAccess	NENCLOSE ( node ) -> option		3447662	1					
ANR	3447877	CallExpression	NENCLOSE ( node )		3447662	0					
ANR	3447878	Callee	NENCLOSE		3447662	0					
ANR	3447879	Identifier	NENCLOSE		3447662	0					
ANR	3447880	ArgumentList	node		3447662	1					
ANR	3447881	Argument	node		3447662	0					
ANR	3447882	Identifier	node		3447662	0					
ANR	3447883	Identifier	option		3447662	1					
ANR	3447884	ExpressionStatement	"n = get_head_value_node ( NENCLOSE ( node ) -> target , exact , reg )"	2634:3:58823:58882	3447662	2	True				
ANR	3447885	AssignmentExpression	"n = get_head_value_node ( NENCLOSE ( node ) -> target , exact , reg )"		3447662	0		=			
ANR	3447886	Identifier	n		3447662	0					
ANR	3447887	CallExpression	"get_head_value_node ( NENCLOSE ( node ) -> target , exact , reg )"		3447662	1					
ANR	3447888	Callee	get_head_value_node		3447662	0					
ANR	3447889	Identifier	get_head_value_node		3447662	0					
ANR	3447890	ArgumentList	NENCLOSE ( node ) -> target		3447662	1					
ANR	3447891	Argument	NENCLOSE ( node ) -> target		3447662	0					
ANR	3447892	PtrMemberAccess	NENCLOSE ( node ) -> target		3447662	0					
ANR	3447893	CallExpression	NENCLOSE ( node )		3447662	0					
ANR	3447894	Callee	NENCLOSE		3447662	0					
ANR	3447895	Identifier	NENCLOSE		3447662	0					
ANR	3447896	ArgumentList	node		3447662	1					
ANR	3447897	Argument	node		3447662	0					
ANR	3447898	Identifier	node		3447662	0					
ANR	3447899	Identifier	target		3447662	1					
ANR	3447900	Argument	exact		3447662	1					
ANR	3447901	Identifier	exact		3447662	0					
ANR	3447902	Argument	reg		3447662	2					
ANR	3447903	Identifier	reg		3447662	0					
ANR	3447904	ExpressionStatement	reg -> options = options	2635:3:58887:58909	3447662	3	True				
ANR	3447905	AssignmentExpression	reg -> options = options		3447662	0		=			
ANR	3447906	PtrMemberAccess	reg -> options		3447662	0					
ANR	3447907	Identifier	reg		3447662	0					
ANR	3447908	Identifier	options		3447662	1					
ANR	3447909	Identifier	options		3447662	1					
ANR	3447910	BreakStatement	break ;	2637:1:58915:58920	3447662	2	True				
ANR	3447911	Label	case ENCLOSE_MEMORY :	2639:6:58929:58948	3447662	3	True				
ANR	3447912	Identifier	ENCLOSE_MEMORY		3447662	0					
ANR	3447913	Label	case ENCLOSE_STOP_BACKTRACK :	2640:6:58956:58983	3447662	4	True				
ANR	3447914	Identifier	ENCLOSE_STOP_BACKTRACK		3447662	0					
ANR	3447915	ExpressionStatement	"n = get_head_value_node ( en -> target , exact , reg )"	2641:1:58986:59033	3447662	5	True				
ANR	3447916	AssignmentExpression	"n = get_head_value_node ( en -> target , exact , reg )"		3447662	0		=			
ANR	3447917	Identifier	n		3447662	0					
ANR	3447918	CallExpression	"get_head_value_node ( en -> target , exact , reg )"		3447662	1					
ANR	3447919	Callee	get_head_value_node		3447662	0					
ANR	3447920	Identifier	get_head_value_node		3447662	0					
ANR	3447921	ArgumentList	en -> target		3447662	1					
ANR	3447922	Argument	en -> target		3447662	0					
ANR	3447923	PtrMemberAccess	en -> target		3447662	0					
ANR	3447924	Identifier	en		3447662	0					
ANR	3447925	Identifier	target		3447662	1					
ANR	3447926	Argument	exact		3447662	1					
ANR	3447927	Identifier	exact		3447662	0					
ANR	3447928	Argument	reg		3447662	2					
ANR	3447929	Identifier	reg		3447662	0					
ANR	3447930	BreakStatement	break ;	2642:1:59036:59041	3447662	6	True				
ANR	3447931	BreakStatement	break ;	2645:4:59061:59066	3447662	20	True				
ANR	3447932	Label	case NT_ANCHOR :	2647:2:59071:59085	3447662	21	True				
ANR	3447933	Identifier	NT_ANCHOR		3447662	0					
ANR	3447934	IfStatement	if ( NANCHOR ( node ) -> type == ANCHOR_PREC_READ )		3447662	22					
ANR	3447935	Condition	NANCHOR ( node ) -> type == ANCHOR_PREC_READ	2648:8:59095:59133	3447662	0	True				
ANR	3447936	EqualityExpression	NANCHOR ( node ) -> type == ANCHOR_PREC_READ		3447662	0		==			
ANR	3447937	PtrMemberAccess	NANCHOR ( node ) -> type		3447662	0					
ANR	3447938	CallExpression	NANCHOR ( node )		3447662	0					
ANR	3447939	Callee	NANCHOR		3447662	0					
ANR	3447940	Identifier	NANCHOR		3447662	0					
ANR	3447941	ArgumentList	node		3447662	1					
ANR	3447942	Argument	node		3447662	0					
ANR	3447943	Identifier	node		3447662	0					
ANR	3447944	Identifier	type		3447662	1					
ANR	3447945	Identifier	ANCHOR_PREC_READ		3447662	1					
ANR	3447946	ExpressionStatement	"n = get_head_value_node ( NANCHOR ( node ) -> target , exact , reg )"	2649:6:59142:59200	3447662	1	True				
ANR	3447947	AssignmentExpression	"n = get_head_value_node ( NANCHOR ( node ) -> target , exact , reg )"		3447662	0		=			
ANR	3447948	Identifier	n		3447662	0					
ANR	3447949	CallExpression	"get_head_value_node ( NANCHOR ( node ) -> target , exact , reg )"		3447662	1					
ANR	3447950	Callee	get_head_value_node		3447662	0					
ANR	3447951	Identifier	get_head_value_node		3447662	0					
ANR	3447952	ArgumentList	NANCHOR ( node ) -> target		3447662	1					
ANR	3447953	Argument	NANCHOR ( node ) -> target		3447662	0					
ANR	3447954	PtrMemberAccess	NANCHOR ( node ) -> target		3447662	0					
ANR	3447955	CallExpression	NANCHOR ( node )		3447662	0					
ANR	3447956	Callee	NANCHOR		3447662	0					
ANR	3447957	Identifier	NANCHOR		3447662	0					
ANR	3447958	ArgumentList	node		3447662	1					
ANR	3447959	Argument	node		3447662	0					
ANR	3447960	Identifier	node		3447662	0					
ANR	3447961	Identifier	target		3447662	1					
ANR	3447962	Argument	exact		3447662	1					
ANR	3447963	Identifier	exact		3447662	0					
ANR	3447964	Argument	reg		3447662	2					
ANR	3447965	Identifier	reg		3447662	0					
ANR	3447966	BreakStatement	break ;	2650:4:59206:59211	3447662	23	True				
ANR	3447967	Label	default :	2652:2:59216:59223	3447662	24	True				
ANR	3447968	Identifier	default		3447662	0					
ANR	3447969	BreakStatement	break ;	2653:4:59229:59234	3447662	25	True				
ANR	3447970	ReturnStatement	return n ;	2656:2:59243:59251	3447662	2	True				
ANR	3447971	Identifier	n		3447662	0					
ANR	3447972	ReturnType	static Node *		3447662	1					
ANR	3447973	Identifier	get_head_value_node		3447662	2					
ANR	3447974	ParameterList	"Node * node , int exact , regex_t * reg"		3447662	3					
ANR	3447975	Parameter	Node * node	2573:20:57793:57802	3447662	0	True				
ANR	3447976	ParameterType	Node *		3447662	0					
ANR	3447977	Identifier	node		3447662	1					
ANR	3447978	Parameter	int exact	2573:32:57805:57813	3447662	1	True				
ANR	3447979	ParameterType	int		3447662	0					
ANR	3447980	Identifier	exact		3447662	1					
ANR	3447981	Parameter	regex_t * reg	2573:43:57816:57827	3447662	2	True				
ANR	3447982	ParameterType	regex_t *		3447662	0					
ANR	3447983	Identifier	reg		3447662	1					
ANR	3447984	CFGEntryNode	ENTRY		3447662		True				
ANR	3447985	CFGExitNode	EXIT		3447662		True				
ANR	3447986	Symbol	* qn		3447662						
ANR	3447987	Symbol	NCAR		3447662						
ANR	3447988	Symbol	* sn		3447662						
ANR	3447989	Symbol	IS_NOT_NULL		3447662						
ANR	3447990	Symbol	* NENCLOSE		3447662						
ANR	3447991	Symbol	NSTRING_IS_RAW		3447662						
ANR	3447992	Symbol	NANCHOR ( node ) -> type		3447662						
ANR	3447993	Symbol	NQTFR		3447662						
ANR	3447994	Symbol	* en		3447662						
ANR	3447995	Symbol	qn -> lower		3447662						
ANR	3447996	Symbol	sn -> s		3447662						
ANR	3447997	Symbol	reg		3447662						
ANR	3447998	Symbol	reg -> options		3447662						
ANR	3447999	Symbol	NENCLOSE		3447662						
ANR	3448000	Symbol	* NANCHOR		3447662						
ANR	3448001	Symbol	en -> type		3447662						
ANR	3448002	Symbol	options		3447662						
ANR	3448003	Symbol	sn		3447662						
ANR	3448004	Symbol	sn -> end		3447662						
ANR	3448005	Symbol	qn		3447662						
ANR	3448006	Symbol	NENCLOSE ( node ) -> option		3447662						
ANR	3448007	Symbol	NSTR		3447662						
ANR	3448008	Symbol	NANCHOR ( node ) -> target		3447662						
ANR	3448009	Symbol	en		3447662						
ANR	3448010	Symbol	n		3447662						
ANR	3448011	Symbol	qn -> head_exact		3447662						
ANR	3448012	Symbol	qn -> target		3447662						
ANR	3448013	Symbol	NENCLOSE ( node ) -> target		3447662						
ANR	3448014	Symbol	get_head_value_node		3447662						
ANR	3448015	Symbol	ANCHOR_PREC_READ		3447662						
ANR	3448016	Symbol	node		3447662						
ANR	3448017	Symbol	en -> target		3447662						
ANR	3448018	Symbol	IS_IGNORECASE		3447662						
ANR	3448019	Symbol	exact		3447662						
ANR	3448020	Symbol	NANCHOR		3447662						
ANR	3448021	Symbol	NTYPE		3447662						
ANR	3448022	Symbol	NULL_NODE		3447662						
ANR	3448023	Symbol	* reg		3447662						
ANR	3448024	Function	check_type_tree	2659:0:59256:60259							
ANR	3448025	FunctionDef	"check_type_tree (Node * node , int type_mask , int enclose_mask , int anchor_mask)"		3448024	0					
ANR	3448026	CompoundStatement		2661:0:59345:60259	3448024	0					
ANR	3448027	IdentifierDeclStatement	"int type , r = 0 ;"	2662:2:59349:59364	3448024	0	True				
ANR	3448028	IdentifierDecl	type		3448024	0					
ANR	3448029	IdentifierDeclType	int		3448024	0					
ANR	3448030	Identifier	type		3448024	1					
ANR	3448031	IdentifierDecl	r = 0		3448024	1					
ANR	3448032	IdentifierDeclType	int		3448024	0					
ANR	3448033	Identifier	r		3448024	1					
ANR	3448034	AssignmentExpression	r = 0		3448024	2		=			
ANR	3448035	Identifier	r		3448024	0					
ANR	3448036	PrimaryExpression	0		3448024	1					
ANR	3448037	ExpressionStatement	type = NTYPE ( node )	2664:2:59369:59387	3448024	1	True				
ANR	3448038	AssignmentExpression	type = NTYPE ( node )		3448024	0		=			
ANR	3448039	Identifier	type		3448024	0					
ANR	3448040	CallExpression	NTYPE ( node )		3448024	1					
ANR	3448041	Callee	NTYPE		3448024	0					
ANR	3448042	Identifier	NTYPE		3448024	0					
ANR	3448043	ArgumentList	node		3448024	1					
ANR	3448044	Argument	node		3448024	0					
ANR	3448045	Identifier	node		3448024	0					
ANR	3448046	IfStatement	if ( ( NTYPE2BIT ( type ) & type_mask ) == 0 )		3448024	2					
ANR	3448047	Condition	( NTYPE2BIT ( type ) & type_mask ) == 0	2665:6:59395:59428	3448024	0	True				
ANR	3448048	EqualityExpression	( NTYPE2BIT ( type ) & type_mask ) == 0		3448024	0		==			
ANR	3448049	BitAndExpression	NTYPE2BIT ( type ) & type_mask		3448024	0		&			
ANR	3448050	CallExpression	NTYPE2BIT ( type )		3448024	0					
ANR	3448051	Callee	NTYPE2BIT		3448024	0					
ANR	3448052	Identifier	NTYPE2BIT		3448024	0					
ANR	3448053	ArgumentList	type		3448024	1					
ANR	3448054	Argument	type		3448024	0					
ANR	3448055	Identifier	type		3448024	0					
ANR	3448056	Identifier	type_mask		3448024	1					
ANR	3448057	PrimaryExpression	0		3448024	1					
ANR	3448058	ReturnStatement	return 1 ;	2666:4:59435:59443	3448024	1	True				
ANR	3448059	PrimaryExpression	1		3448024	0					
ANR	3448060	SwitchStatement	switch ( type )		3448024	3					
ANR	3448061	Condition	type	2668:10:59456:59459	3448024	0	True				
ANR	3448062	Identifier	type		3448024	0					
ANR	3448063	CompoundStatement		8:16:116:116	3448024	1					
ANR	3448064	Label	case NT_LIST :	2669:2:59466:59478	3448024	0	True				
ANR	3448065	Identifier	NT_LIST		3448024	0					
ANR	3448066	Label	case NT_ALT :	2670:2:59482:59493	3448024	1	True				
ANR	3448067	Identifier	NT_ALT		3448024	0					
ANR	3448068	DoStatement	do		3448024	2					
ANR	3448069	CompoundStatement		11:7:156:156	3448024	0					
ANR	3448070	ExpressionStatement	"r = check_type_tree ( NCAR ( node ) , type_mask , enclose_mask , anchor_mask )"	2672:6:59510:59584	3448024	0	True				
ANR	3448071	AssignmentExpression	"r = check_type_tree ( NCAR ( node ) , type_mask , enclose_mask , anchor_mask )"		3448024	0		=			
ANR	3448072	Identifier	r		3448024	0					
ANR	3448073	CallExpression	"check_type_tree ( NCAR ( node ) , type_mask , enclose_mask , anchor_mask )"		3448024	1					
ANR	3448074	Callee	check_type_tree		3448024	0					
ANR	3448075	Identifier	check_type_tree		3448024	0					
ANR	3448076	ArgumentList	NCAR ( node )		3448024	1					
ANR	3448077	Argument	NCAR ( node )		3448024	0					
ANR	3448078	CallExpression	NCAR ( node )		3448024	0					
ANR	3448079	Callee	NCAR		3448024	0					
ANR	3448080	Identifier	NCAR		3448024	0					
ANR	3448081	ArgumentList	node		3448024	1					
ANR	3448082	Argument	node		3448024	0					
ANR	3448083	Identifier	node		3448024	0					
ANR	3448084	Argument	type_mask		3448024	1					
ANR	3448085	Identifier	type_mask		3448024	0					
ANR	3448086	Argument	enclose_mask		3448024	2					
ANR	3448087	Identifier	enclose_mask		3448024	0					
ANR	3448088	Argument	anchor_mask		3448024	3					
ANR	3448089	Identifier	anchor_mask		3448024	0					
ANR	3448090	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2674:13:59599:59638	3448024	1	True				
ANR	3448091	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3448024	0		&&			
ANR	3448092	EqualityExpression	r == 0		3448024	0		==			
ANR	3448093	Identifier	r		3448024	0					
ANR	3448094	PrimaryExpression	0		3448024	1					
ANR	3448095	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3448024	1					
ANR	3448096	Callee	IS_NOT_NULL		3448024	0					
ANR	3448097	Identifier	IS_NOT_NULL		3448024	0					
ANR	3448098	ArgumentList	node = NCDR ( node )		3448024	1					
ANR	3448099	Argument	node = NCDR ( node )		3448024	0					
ANR	3448100	AssignmentExpression	node = NCDR ( node )		3448024	0		=			
ANR	3448101	Identifier	node		3448024	0					
ANR	3448102	CallExpression	NCDR ( node )		3448024	1					
ANR	3448103	Callee	NCDR		3448024	0					
ANR	3448104	Identifier	NCDR		3448024	0					
ANR	3448105	ArgumentList	node		3448024	1					
ANR	3448106	Argument	node		3448024	0					
ANR	3448107	Identifier	node		3448024	0					
ANR	3448108	BreakStatement	break ;	2675:4:59646:59651	3448024	3	True				
ANR	3448109	Label	case NT_QTFR :	2677:2:59656:59668	3448024	4	True				
ANR	3448110	Identifier	NT_QTFR		3448024	0					
ANR	3448111	ExpressionStatement	"r = check_type_tree ( NQTFR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"	2678:4:59674:59755	3448024	5	True				
ANR	3448112	AssignmentExpression	"r = check_type_tree ( NQTFR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		3448024	0		=			
ANR	3448113	Identifier	r		3448024	0					
ANR	3448114	CallExpression	"check_type_tree ( NQTFR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		3448024	1					
ANR	3448115	Callee	check_type_tree		3448024	0					
ANR	3448116	Identifier	check_type_tree		3448024	0					
ANR	3448117	ArgumentList	NQTFR ( node ) -> target		3448024	1					
ANR	3448118	Argument	NQTFR ( node ) -> target		3448024	0					
ANR	3448119	PtrMemberAccess	NQTFR ( node ) -> target		3448024	0					
ANR	3448120	CallExpression	NQTFR ( node )		3448024	0					
ANR	3448121	Callee	NQTFR		3448024	0					
ANR	3448122	Identifier	NQTFR		3448024	0					
ANR	3448123	ArgumentList	node		3448024	1					
ANR	3448124	Argument	node		3448024	0					
ANR	3448125	Identifier	node		3448024	0					
ANR	3448126	Identifier	target		3448024	1					
ANR	3448127	Argument	type_mask		3448024	1					
ANR	3448128	Identifier	type_mask		3448024	0					
ANR	3448129	Argument	enclose_mask		3448024	2					
ANR	3448130	Identifier	enclose_mask		3448024	0					
ANR	3448131	Argument	anchor_mask		3448024	3					
ANR	3448132	Identifier	anchor_mask		3448024	0					
ANR	3448133	BreakStatement	break ;	2680:4:59761:59766	3448024	6	True				
ANR	3448134	Label	case NT_ENCLOSE :	2682:2:59771:59786	3448024	7	True				
ANR	3448135	Identifier	NT_ENCLOSE		3448024	0					
ANR	3448136	CompoundStatement		24:6:454:486	3448024	8					
ANR	3448137	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2684:6:59800:59832	3448024	0	True				
ANR	3448138	IdentifierDecl	* en = NENCLOSE ( node )		3448024	0					
ANR	3448139	IdentifierDeclType	EncloseNode *		3448024	0					
ANR	3448140	Identifier	en		3448024	1					
ANR	3448141	AssignmentExpression	* en = NENCLOSE ( node )		3448024	2		=			
ANR	3448142	Identifier	en		3448024	0					
ANR	3448143	CallExpression	NENCLOSE ( node )		3448024	1					
ANR	3448144	Callee	NENCLOSE		3448024	0					
ANR	3448145	Identifier	NENCLOSE		3448024	0					
ANR	3448146	ArgumentList	node		3448024	1					
ANR	3448147	Argument	node		3448024	0					
ANR	3448148	Identifier	node		3448024	0					
ANR	3448149	IfStatement	if ( ( en -> type & enclose_mask ) == 0 )		3448024	1					
ANR	3448150	Condition	( en -> type & enclose_mask ) == 0	2685:10:59844:59873	3448024	0	True				
ANR	3448151	EqualityExpression	( en -> type & enclose_mask ) == 0		3448024	0		==			
ANR	3448152	BitAndExpression	en -> type & enclose_mask		3448024	0		&			
ANR	3448153	PtrMemberAccess	en -> type		3448024	0					
ANR	3448154	Identifier	en		3448024	0					
ANR	3448155	Identifier	type		3448024	1					
ANR	3448156	Identifier	enclose_mask		3448024	1					
ANR	3448157	PrimaryExpression	0		3448024	1					
ANR	3448158	ReturnStatement	return 1 ;	2686:1:59877:59885	3448024	1	True				
ANR	3448159	PrimaryExpression	1		3448024	0					
ANR	3448160	ExpressionStatement	"r = check_type_tree ( en -> target , type_mask , enclose_mask , anchor_mask )"	2688:6:59894:59963	3448024	2	True				
ANR	3448161	AssignmentExpression	"r = check_type_tree ( en -> target , type_mask , enclose_mask , anchor_mask )"		3448024	0		=			
ANR	3448162	Identifier	r		3448024	0					
ANR	3448163	CallExpression	"check_type_tree ( en -> target , type_mask , enclose_mask , anchor_mask )"		3448024	1					
ANR	3448164	Callee	check_type_tree		3448024	0					
ANR	3448165	Identifier	check_type_tree		3448024	0					
ANR	3448166	ArgumentList	en -> target		3448024	1					
ANR	3448167	Argument	en -> target		3448024	0					
ANR	3448168	PtrMemberAccess	en -> target		3448024	0					
ANR	3448169	Identifier	en		3448024	0					
ANR	3448170	Identifier	target		3448024	1					
ANR	3448171	Argument	type_mask		3448024	1					
ANR	3448172	Identifier	type_mask		3448024	0					
ANR	3448173	Argument	enclose_mask		3448024	2					
ANR	3448174	Identifier	enclose_mask		3448024	0					
ANR	3448175	Argument	anchor_mask		3448024	3					
ANR	3448176	Identifier	anchor_mask		3448024	0					
ANR	3448177	BreakStatement	break ;	2690:4:59975:59980	3448024	9	True				
ANR	3448178	Label	case NT_ANCHOR :	2692:2:59985:59999	3448024	10	True				
ANR	3448179	Identifier	NT_ANCHOR		3448024	0					
ANR	3448180	ExpressionStatement	type = NANCHOR ( node ) -> type	2693:4:60005:60031	3448024	11	True				
ANR	3448181	AssignmentExpression	type = NANCHOR ( node ) -> type		3448024	0		=			
ANR	3448182	Identifier	type		3448024	0					
ANR	3448183	PtrMemberAccess	NANCHOR ( node ) -> type		3448024	1					
ANR	3448184	CallExpression	NANCHOR ( node )		3448024	0					
ANR	3448185	Callee	NANCHOR		3448024	0					
ANR	3448186	Identifier	NANCHOR		3448024	0					
ANR	3448187	ArgumentList	node		3448024	1					
ANR	3448188	Argument	node		3448024	0					
ANR	3448189	Identifier	node		3448024	0					
ANR	3448190	Identifier	type		3448024	1					
ANR	3448191	IfStatement	if ( ( type & anchor_mask ) == 0 )		3448024	12					
ANR	3448192	Condition	( type & anchor_mask ) == 0	2694:8:60041:60065	3448024	0	True				
ANR	3448193	EqualityExpression	( type & anchor_mask ) == 0		3448024	0		==			
ANR	3448194	BitAndExpression	type & anchor_mask		3448024	0		&			
ANR	3448195	Identifier	type		3448024	0					
ANR	3448196	Identifier	anchor_mask		3448024	1					
ANR	3448197	PrimaryExpression	0		3448024	1					
ANR	3448198	ReturnStatement	return 1 ;	2695:6:60074:60082	3448024	1	True				
ANR	3448199	PrimaryExpression	1		3448024	0					
ANR	3448200	IfStatement	if ( NANCHOR ( node ) -> target )		3448024	13					
ANR	3448201	Condition	NANCHOR ( node ) -> target	2697:8:60093:60113	3448024	0	True				
ANR	3448202	PtrMemberAccess	NANCHOR ( node ) -> target		3448024	0					
ANR	3448203	CallExpression	NANCHOR ( node )		3448024	0					
ANR	3448204	Callee	NANCHOR		3448024	0					
ANR	3448205	Identifier	NANCHOR		3448024	0					
ANR	3448206	ArgumentList	node		3448024	1					
ANR	3448207	Argument	node		3448024	0					
ANR	3448208	Identifier	node		3448024	0					
ANR	3448209	Identifier	target		3448024	1					
ANR	3448210	ExpressionStatement	"r = check_type_tree ( NANCHOR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"	2698:6:60122:60207	3448024	1	True				
ANR	3448211	AssignmentExpression	"r = check_type_tree ( NANCHOR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		3448024	0		=			
ANR	3448212	Identifier	r		3448024	0					
ANR	3448213	CallExpression	"check_type_tree ( NANCHOR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		3448024	1					
ANR	3448214	Callee	check_type_tree		3448024	0					
ANR	3448215	Identifier	check_type_tree		3448024	0					
ANR	3448216	ArgumentList	NANCHOR ( node ) -> target		3448024	1					
ANR	3448217	Argument	NANCHOR ( node ) -> target		3448024	0					
ANR	3448218	PtrMemberAccess	NANCHOR ( node ) -> target		3448024	0					
ANR	3448219	CallExpression	NANCHOR ( node )		3448024	0					
ANR	3448220	Callee	NANCHOR		3448024	0					
ANR	3448221	Identifier	NANCHOR		3448024	0					
ANR	3448222	ArgumentList	node		3448024	1					
ANR	3448223	Argument	node		3448024	0					
ANR	3448224	Identifier	node		3448024	0					
ANR	3448225	Identifier	target		3448024	1					
ANR	3448226	Argument	type_mask		3448024	1					
ANR	3448227	Identifier	type_mask		3448024	0					
ANR	3448228	Argument	enclose_mask		3448024	2					
ANR	3448229	Identifier	enclose_mask		3448024	0					
ANR	3448230	Argument	anchor_mask		3448024	3					
ANR	3448231	Identifier	anchor_mask		3448024	0					
ANR	3448232	BreakStatement	break ;	2700:4:60213:60218	3448024	14	True				
ANR	3448233	Label	default :	2702:2:60223:60230	3448024	15	True				
ANR	3448234	Identifier	default		3448024	0					
ANR	3448235	BreakStatement	break ;	2703:4:60236:60241	3448024	16	True				
ANR	3448236	ReturnStatement	return r ;	2705:2:60249:60257	3448024	4	True				
ANR	3448237	Identifier	r		3448024	0					
ANR	3448238	ReturnType	static int		3448024	1					
ANR	3448239	Identifier	check_type_tree		3448024	2					
ANR	3448240	ParameterList	"Node * node , int type_mask , int enclose_mask , int anchor_mask"		3448024	3					
ANR	3448241	Parameter	Node * node	2660:16:59283:59292	3448024	0	True				
ANR	3448242	ParameterType	Node *		3448024	0					
ANR	3448243	Identifier	node		3448024	1					
ANR	3448244	Parameter	int type_mask	2660:28:59295:59307	3448024	1	True				
ANR	3448245	ParameterType	int		3448024	0					
ANR	3448246	Identifier	type_mask		3448024	1					
ANR	3448247	Parameter	int enclose_mask	2660:43:59310:59325	3448024	2	True				
ANR	3448248	ParameterType	int		3448024	0					
ANR	3448249	Identifier	enclose_mask		3448024	1					
ANR	3448250	Parameter	int anchor_mask	2660:61:59328:59342	3448024	3	True				
ANR	3448251	ParameterType	int		3448024	0					
ANR	3448252	Identifier	anchor_mask		3448024	1					
ANR	3448253	CFGEntryNode	ENTRY		3448024		True				
ANR	3448254	CFGExitNode	EXIT		3448024		True				
ANR	3448255	Symbol	type_mask		3448024						
ANR	3448256	Symbol	NQTFR ( node ) -> target		3448024						
ANR	3448257	Symbol	IS_NOT_NULL		3448024						
ANR	3448258	Symbol	NCAR		3448024						
ANR	3448259	Symbol	anchor_mask		3448024						
ANR	3448260	Symbol	NCDR		3448024						
ANR	3448261	Symbol	NANCHOR ( node ) -> target		3448024						
ANR	3448262	Symbol	check_type_tree		3448024						
ANR	3448263	Symbol	en		3448024						
ANR	3448264	Symbol	enclose_mask		3448024						
ANR	3448265	Symbol	NANCHOR ( node ) -> type		3448024						
ANR	3448266	Symbol	type		3448024						
ANR	3448267	Symbol	NQTFR		3448024						
ANR	3448268	Symbol	* en		3448024						
ANR	3448269	Symbol	NTYPE2BIT		3448024						
ANR	3448270	Symbol	node		3448024						
ANR	3448271	Symbol	r		3448024						
ANR	3448272	Symbol	* NQTFR		3448024						
ANR	3448273	Symbol	NENCLOSE		3448024						
ANR	3448274	Symbol	en -> target		3448024						
ANR	3448275	Symbol	* NANCHOR		3448024						
ANR	3448276	Symbol	en -> type		3448024						
ANR	3448277	Symbol	NANCHOR		3448024						
ANR	3448278	Symbol	NTYPE		3448024						
ANR	3448279	Function	subexp_inf_recursive_check	2713:0:60351:62161							
ANR	3448280	FunctionDef	"subexp_inf_recursive_check (Node * node , ScanEnv * env , int head)"		3448279	0					
ANR	3448281	CompoundStatement		2715:0:60425:62161	3448279	0					
ANR	3448282	IdentifierDeclStatement	int type ;	2716:2:60429:60437	3448279	0	True				
ANR	3448283	IdentifierDecl	type		3448279	0					
ANR	3448284	IdentifierDeclType	int		3448279	0					
ANR	3448285	Identifier	type		3448279	1					
ANR	3448286	IdentifierDeclStatement	int r = 0 ;	2717:2:60441:60450	3448279	1	True				
ANR	3448287	IdentifierDecl	r = 0		3448279	0					
ANR	3448288	IdentifierDeclType	int		3448279	0					
ANR	3448289	Identifier	r		3448279	1					
ANR	3448290	AssignmentExpression	r = 0		3448279	2		=			
ANR	3448291	Identifier	r		3448279	0					
ANR	3448292	PrimaryExpression	0		3448279	1					
ANR	3448293	ExpressionStatement	type = NTYPE ( node )	2719:2:60455:60473	3448279	2	True				
ANR	3448294	AssignmentExpression	type = NTYPE ( node )		3448279	0		=			
ANR	3448295	Identifier	type		3448279	0					
ANR	3448296	CallExpression	NTYPE ( node )		3448279	1					
ANR	3448297	Callee	NTYPE		3448279	0					
ANR	3448298	Identifier	NTYPE		3448279	0					
ANR	3448299	ArgumentList	node		3448279	1					
ANR	3448300	Argument	node		3448279	0					
ANR	3448301	Identifier	node		3448279	0					
ANR	3448302	SwitchStatement	switch ( type )		3448279	3					
ANR	3448303	Condition	type	2720:10:60485:60488	3448279	0	True				
ANR	3448304	Identifier	type		3448279	0					
ANR	3448305	CompoundStatement		6:16:65:65	3448279	1					
ANR	3448306	Label	case NT_LIST :	2721:2:60495:60507	3448279	0	True				
ANR	3448307	Identifier	NT_LIST		3448279	0					
ANR	3448308	CompoundStatement		11:6:134:141	3448279	1					
ANR	3448309	IdentifierDeclStatement	Node * x ;	2723:6:60521:60528	3448279	0	True				
ANR	3448310	IdentifierDecl	* x		3448279	0					
ANR	3448311	IdentifierDeclType	Node *		3448279	0					
ANR	3448312	Identifier	x		3448279	1					
ANR	3448313	IdentifierDeclStatement	OnigDistance min ;	2724:6:60536:60552	3448279	1	True				
ANR	3448314	IdentifierDecl	min		3448279	0					
ANR	3448315	IdentifierDeclType	OnigDistance		3448279	0					
ANR	3448316	Identifier	min		3448279	1					
ANR	3448317	IdentifierDeclStatement	int ret ;	2725:6:60560:60567	3448279	2	True				
ANR	3448318	IdentifierDecl	ret		3448279	0					
ANR	3448319	IdentifierDeclType	int		3448279	0					
ANR	3448320	Identifier	ret		3448279	1					
ANR	3448321	ExpressionStatement	x = node	2727:6:60576:60584	3448279	3	True				
ANR	3448322	AssignmentExpression	x = node		3448279	0		=			
ANR	3448323	Identifier	x		3448279	0					
ANR	3448324	Identifier	node		3448279	1					
ANR	3448325	DoStatement	do		3448279	4					
ANR	3448326	CompoundStatement		14:9:169:169	3448279	0					
ANR	3448327	ExpressionStatement	"ret = subexp_inf_recursive_check ( NCAR ( x ) , env , head )"	2729:1:60598:60650	3448279	0	True				
ANR	3448328	AssignmentExpression	"ret = subexp_inf_recursive_check ( NCAR ( x ) , env , head )"		3448279	0		=			
ANR	3448329	Identifier	ret		3448279	0					
ANR	3448330	CallExpression	"subexp_inf_recursive_check ( NCAR ( x ) , env , head )"		3448279	1					
ANR	3448331	Callee	subexp_inf_recursive_check		3448279	0					
ANR	3448332	Identifier	subexp_inf_recursive_check		3448279	0					
ANR	3448333	ArgumentList	NCAR ( x )		3448279	1					
ANR	3448334	Argument	NCAR ( x )		3448279	0					
ANR	3448335	CallExpression	NCAR ( x )		3448279	0					
ANR	3448336	Callee	NCAR		3448279	0					
ANR	3448337	Identifier	NCAR		3448279	0					
ANR	3448338	ArgumentList	x		3448279	1					
ANR	3448339	Argument	x		3448279	0					
ANR	3448340	Identifier	x		3448279	0					
ANR	3448341	Argument	env		3448279	1					
ANR	3448342	Identifier	env		3448279	0					
ANR	3448343	Argument	head		3448279	2					
ANR	3448344	Identifier	head		3448279	0					
ANR	3448345	IfStatement	if ( ret < 0 || ret == RECURSION_INFINITE )		3448279	1					
ANR	3448346	Condition	ret < 0 || ret == RECURSION_INFINITE	2730:5:60657:60692	3448279	0	True				
ANR	3448347	OrExpression	ret < 0 || ret == RECURSION_INFINITE		3448279	0		||			
ANR	3448348	RelationalExpression	ret < 0		3448279	0		<			
ANR	3448349	Identifier	ret		3448279	0					
ANR	3448350	PrimaryExpression	0		3448279	1					
ANR	3448351	EqualityExpression	ret == RECURSION_INFINITE		3448279	1		==			
ANR	3448352	Identifier	ret		3448279	0					
ANR	3448353	Identifier	RECURSION_INFINITE		3448279	1					
ANR	3448354	ReturnStatement	return ret ;	2730:43:60695:60705	3448279	1	True				
ANR	3448355	Identifier	ret		3448279	0					
ANR	3448356	ExpressionStatement	r |= ret	2731:1:60708:60716	3448279	2	True				
ANR	3448357	AssignmentExpression	r |= ret		3448279	0		|=			
ANR	3448358	Identifier	r		3448279	0					
ANR	3448359	Identifier	ret		3448279	1					
ANR	3448360	IfStatement	if ( head )		3448279	3					
ANR	3448361	Condition	head	2732:5:60723:60726	3448279	0	True				
ANR	3448362	Identifier	head		3448279	0					
ANR	3448363	CompoundStatement		18:11:303:303	3448279	1					
ANR	3448364	ExpressionStatement	"ret = get_min_match_length ( NCAR ( x ) , & min , env )"	2733:3:60734:60780	3448279	0	True				
ANR	3448365	AssignmentExpression	"ret = get_min_match_length ( NCAR ( x ) , & min , env )"		3448279	0		=			
ANR	3448366	Identifier	ret		3448279	0					
ANR	3448367	CallExpression	"get_min_match_length ( NCAR ( x ) , & min , env )"		3448279	1					
ANR	3448368	Callee	get_min_match_length		3448279	0					
ANR	3448369	Identifier	get_min_match_length		3448279	0					
ANR	3448370	ArgumentList	NCAR ( x )		3448279	1					
ANR	3448371	Argument	NCAR ( x )		3448279	0					
ANR	3448372	CallExpression	NCAR ( x )		3448279	0					
ANR	3448373	Callee	NCAR		3448279	0					
ANR	3448374	Identifier	NCAR		3448279	0					
ANR	3448375	ArgumentList	x		3448279	1					
ANR	3448376	Argument	x		3448279	0					
ANR	3448377	Identifier	x		3448279	0					
ANR	3448378	Argument	& min		3448279	1					
ANR	3448379	UnaryOperationExpression	& min		3448279	0					
ANR	3448380	UnaryOperator	&		3448279	0					
ANR	3448381	Identifier	min		3448279	1					
ANR	3448382	Argument	env		3448279	2					
ANR	3448383	Identifier	env		3448279	0					
ANR	3448384	IfStatement	if ( ret != 0 )		3448279	1					
ANR	3448385	Condition	ret != 0	2734:7:60789:60796	3448279	0	True				
ANR	3448386	EqualityExpression	ret != 0		3448279	0		!=			
ANR	3448387	Identifier	ret		3448279	0					
ANR	3448388	PrimaryExpression	0		3448279	1					
ANR	3448389	ReturnStatement	return ret ;	2734:17:60799:60809	3448279	1	True				
ANR	3448390	Identifier	ret		3448279	0					
ANR	3448391	IfStatement	if ( min != 0 )		3448279	2					
ANR	3448392	Condition	min != 0	2735:7:60818:60825	3448279	0	True				
ANR	3448393	EqualityExpression	min != 0		3448279	0		!=			
ANR	3448394	Identifier	min		3448279	0					
ANR	3448395	PrimaryExpression	0		3448279	1					
ANR	3448396	ExpressionStatement	head = 0	2735:17:60828:60836	3448279	1	True				
ANR	3448397	AssignmentExpression	head = 0		3448279	0		=			
ANR	3448398	Identifier	head		3448279	0					
ANR	3448399	PrimaryExpression	0		3448279	1					
ANR	3448400	Condition	IS_NOT_NULL ( x = NCDR ( x ) )	2737:15:60856:60879	3448279	1	True				
ANR	3448401	CallExpression	IS_NOT_NULL ( x = NCDR ( x ) )		3448279	0					
ANR	3448402	Callee	IS_NOT_NULL		3448279	0					
ANR	3448403	Identifier	IS_NOT_NULL		3448279	0					
ANR	3448404	ArgumentList	x = NCDR ( x )		3448279	1					
ANR	3448405	Argument	x = NCDR ( x )		3448279	0					
ANR	3448406	AssignmentExpression	x = NCDR ( x )		3448279	0		=			
ANR	3448407	Identifier	x		3448279	0					
ANR	3448408	CallExpression	NCDR ( x )		3448279	1					
ANR	3448409	Callee	NCDR		3448279	0					
ANR	3448410	Identifier	NCDR		3448279	0					
ANR	3448411	ArgumentList	x		3448279	1					
ANR	3448412	Argument	x		3448279	0					
ANR	3448413	Identifier	x		3448279	0					
ANR	3448414	BreakStatement	break ;	2739:4:60893:60898	3448279	2	True				
ANR	3448415	Label	case NT_ALT :	2741:2:60903:60914	3448279	3	True				
ANR	3448416	Identifier	NT_ALT		3448279	0					
ANR	3448417	CompoundStatement		29:6:502:509	3448279	4					
ANR	3448418	IdentifierDeclStatement	int ret ;	2743:6:60928:60935	3448279	0	True				
ANR	3448419	IdentifierDecl	ret		3448279	0					
ANR	3448420	IdentifierDeclType	int		3448279	0					
ANR	3448421	Identifier	ret		3448279	1					
ANR	3448422	ExpressionStatement	r = RECURSION_EXIST	2744:6:60943:60962	3448279	1	True				
ANR	3448423	AssignmentExpression	r = RECURSION_EXIST		3448279	0		=			
ANR	3448424	Identifier	r		3448279	0					
ANR	3448425	Identifier	RECURSION_EXIST		3448279	1					
ANR	3448426	DoStatement	do		3448279	2					
ANR	3448427	CompoundStatement		31:9:547:547	3448279	0					
ANR	3448428	ExpressionStatement	"ret = subexp_inf_recursive_check ( NCAR ( node ) , env , head )"	2746:1:60976:61031	3448279	0	True				
ANR	3448429	AssignmentExpression	"ret = subexp_inf_recursive_check ( NCAR ( node ) , env , head )"		3448279	0		=			
ANR	3448430	Identifier	ret		3448279	0					
ANR	3448431	CallExpression	"subexp_inf_recursive_check ( NCAR ( node ) , env , head )"		3448279	1					
ANR	3448432	Callee	subexp_inf_recursive_check		3448279	0					
ANR	3448433	Identifier	subexp_inf_recursive_check		3448279	0					
ANR	3448434	ArgumentList	NCAR ( node )		3448279	1					
ANR	3448435	Argument	NCAR ( node )		3448279	0					
ANR	3448436	CallExpression	NCAR ( node )		3448279	0					
ANR	3448437	Callee	NCAR		3448279	0					
ANR	3448438	Identifier	NCAR		3448279	0					
ANR	3448439	ArgumentList	node		3448279	1					
ANR	3448440	Argument	node		3448279	0					
ANR	3448441	Identifier	node		3448279	0					
ANR	3448442	Argument	env		3448279	1					
ANR	3448443	Identifier	env		3448279	0					
ANR	3448444	Argument	head		3448279	2					
ANR	3448445	Identifier	head		3448279	0					
ANR	3448446	IfStatement	if ( ret < 0 || ret == RECURSION_INFINITE )		3448279	1					
ANR	3448447	Condition	ret < 0 || ret == RECURSION_INFINITE	2747:5:61038:61073	3448279	0	True				
ANR	3448448	OrExpression	ret < 0 || ret == RECURSION_INFINITE		3448279	0		||			
ANR	3448449	RelationalExpression	ret < 0		3448279	0		<			
ANR	3448450	Identifier	ret		3448279	0					
ANR	3448451	PrimaryExpression	0		3448279	1					
ANR	3448452	EqualityExpression	ret == RECURSION_INFINITE		3448279	1		==			
ANR	3448453	Identifier	ret		3448279	0					
ANR	3448454	Identifier	RECURSION_INFINITE		3448279	1					
ANR	3448455	ReturnStatement	return ret ;	2747:43:61076:61086	3448279	1	True				
ANR	3448456	Identifier	ret		3448279	0					
ANR	3448457	ExpressionStatement	r &= ret	2748:1:61089:61097	3448279	2	True				
ANR	3448458	AssignmentExpression	r &= ret		3448279	0		&=			
ANR	3448459	Identifier	r		3448279	0					
ANR	3448460	Identifier	ret		3448279	1					
ANR	3448461	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2749:15:61114:61143	3448279	1	True				
ANR	3448462	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3448279	0					
ANR	3448463	Callee	IS_NOT_NULL		3448279	0					
ANR	3448464	Identifier	IS_NOT_NULL		3448279	0					
ANR	3448465	ArgumentList	node = NCDR ( node )		3448279	1					
ANR	3448466	Argument	node = NCDR ( node )		3448279	0					
ANR	3448467	AssignmentExpression	node = NCDR ( node )		3448279	0		=			
ANR	3448468	Identifier	node		3448279	0					
ANR	3448469	CallExpression	NCDR ( node )		3448279	1					
ANR	3448470	Callee	NCDR		3448279	0					
ANR	3448471	Identifier	NCDR		3448279	0					
ANR	3448472	ArgumentList	node		3448279	1					
ANR	3448473	Argument	node		3448279	0					
ANR	3448474	Identifier	node		3448279	0					
ANR	3448475	BreakStatement	break ;	2751:4:61157:61162	3448279	5	True				
ANR	3448476	Label	case NT_QTFR :	2753:2:61167:61179	3448279	6	True				
ANR	3448477	Identifier	NT_QTFR		3448279	0					
ANR	3448478	ExpressionStatement	"r = subexp_inf_recursive_check ( NQTFR ( node ) -> target , env , head )"	2754:4:61185:61247	3448279	7	True				
ANR	3448479	AssignmentExpression	"r = subexp_inf_recursive_check ( NQTFR ( node ) -> target , env , head )"		3448279	0		=			
ANR	3448480	Identifier	r		3448279	0					
ANR	3448481	CallExpression	"subexp_inf_recursive_check ( NQTFR ( node ) -> target , env , head )"		3448279	1					
ANR	3448482	Callee	subexp_inf_recursive_check		3448279	0					
ANR	3448483	Identifier	subexp_inf_recursive_check		3448279	0					
ANR	3448484	ArgumentList	NQTFR ( node ) -> target		3448279	1					
ANR	3448485	Argument	NQTFR ( node ) -> target		3448279	0					
ANR	3448486	PtrMemberAccess	NQTFR ( node ) -> target		3448279	0					
ANR	3448487	CallExpression	NQTFR ( node )		3448279	0					
ANR	3448488	Callee	NQTFR		3448279	0					
ANR	3448489	Identifier	NQTFR		3448279	0					
ANR	3448490	ArgumentList	node		3448279	1					
ANR	3448491	Argument	node		3448279	0					
ANR	3448492	Identifier	node		3448279	0					
ANR	3448493	Identifier	target		3448279	1					
ANR	3448494	Argument	env		3448279	1					
ANR	3448495	Identifier	env		3448279	0					
ANR	3448496	Argument	head		3448279	2					
ANR	3448497	Identifier	head		3448279	0					
ANR	3448498	IfStatement	if ( r == RECURSION_EXIST )		3448279	8					
ANR	3448499	Condition	r == RECURSION_EXIST	2755:8:61257:61276	3448279	0	True				
ANR	3448500	EqualityExpression	r == RECURSION_EXIST		3448279	0		==			
ANR	3448501	Identifier	r		3448279	0					
ANR	3448502	Identifier	RECURSION_EXIST		3448279	1					
ANR	3448503	CompoundStatement		41:30:853:853	3448279	1					
ANR	3448504	IfStatement	if ( NQTFR ( node ) -> lower == 0 )		3448279	0					
ANR	3448505	Condition	NQTFR ( node ) -> lower == 0	2756:10:61291:61313	3448279	0	True				
ANR	3448506	EqualityExpression	NQTFR ( node ) -> lower == 0		3448279	0		==			
ANR	3448507	PtrMemberAccess	NQTFR ( node ) -> lower		3448279	0					
ANR	3448508	CallExpression	NQTFR ( node )		3448279	0					
ANR	3448509	Callee	NQTFR		3448279	0					
ANR	3448510	Identifier	NQTFR		3448279	0					
ANR	3448511	ArgumentList	node		3448279	1					
ANR	3448512	Argument	node		3448279	0					
ANR	3448513	Identifier	node		3448279	0					
ANR	3448514	Identifier	lower		3448279	1					
ANR	3448515	PrimaryExpression	0		3448279	1					
ANR	3448516	ExpressionStatement	r = 0	2756:35:61316:61321	3448279	1	True				
ANR	3448517	AssignmentExpression	r = 0		3448279	0		=			
ANR	3448518	Identifier	r		3448279	0					
ANR	3448519	PrimaryExpression	0		3448279	1					
ANR	3448520	BreakStatement	break ;	2758:4:61333:61338	3448279	9	True				
ANR	3448521	Label	case NT_ANCHOR :	2760:2:61343:61357	3448279	10	True				
ANR	3448522	Identifier	NT_ANCHOR		3448279	0					
ANR	3448523	CompoundStatement		48:6:945:975	3448279	11					
ANR	3448524	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2762:6:61371:61401	3448279	0	True				
ANR	3448525	IdentifierDecl	* an = NANCHOR ( node )		3448279	0					
ANR	3448526	IdentifierDeclType	AnchorNode *		3448279	0					
ANR	3448527	Identifier	an		3448279	1					
ANR	3448528	AssignmentExpression	* an = NANCHOR ( node )		3448279	2		=			
ANR	3448529	Identifier	an		3448279	0					
ANR	3448530	CallExpression	NANCHOR ( node )		3448279	1					
ANR	3448531	Callee	NANCHOR		3448279	0					
ANR	3448532	Identifier	NANCHOR		3448279	0					
ANR	3448533	ArgumentList	node		3448279	1					
ANR	3448534	Argument	node		3448279	0					
ANR	3448535	Identifier	node		3448279	0					
ANR	3448536	SwitchStatement	switch ( an -> type )		3448279	1					
ANR	3448537	Condition	an -> type	2763:14:61417:61424	3448279	0	True				
ANR	3448538	PtrMemberAccess	an -> type		3448279	0					
ANR	3448539	Identifier	an		3448279	0					
ANR	3448540	Identifier	type		3448279	1					
ANR	3448541	CompoundStatement		49:24:1001:1001	3448279	1					
ANR	3448542	Label	case ANCHOR_PREC_READ :	2764:6:61435:61456	3448279	0	True				
ANR	3448543	Identifier	ANCHOR_PREC_READ		3448279	0					
ANR	3448544	Label	case ANCHOR_PREC_READ_NOT :	2765:6:61464:61489	3448279	1	True				
ANR	3448545	Identifier	ANCHOR_PREC_READ_NOT		3448279	0					
ANR	3448546	Label	case ANCHOR_LOOK_BEHIND :	2766:6:61497:61520	3448279	2	True				
ANR	3448547	Identifier	ANCHOR_LOOK_BEHIND		3448279	0					
ANR	3448548	Label	case ANCHOR_LOOK_BEHIND_NOT :	2767:6:61528:61555	3448279	3	True				
ANR	3448549	Identifier	ANCHOR_LOOK_BEHIND_NOT		3448279	0					
ANR	3448550	ExpressionStatement	"r = subexp_inf_recursive_check ( an -> target , env , head )"	2768:1:61558:61611	3448279	4	True				
ANR	3448551	AssignmentExpression	"r = subexp_inf_recursive_check ( an -> target , env , head )"		3448279	0		=			
ANR	3448552	Identifier	r		3448279	0					
ANR	3448553	CallExpression	"subexp_inf_recursive_check ( an -> target , env , head )"		3448279	1					
ANR	3448554	Callee	subexp_inf_recursive_check		3448279	0					
ANR	3448555	Identifier	subexp_inf_recursive_check		3448279	0					
ANR	3448556	ArgumentList	an -> target		3448279	1					
ANR	3448557	Argument	an -> target		3448279	0					
ANR	3448558	PtrMemberAccess	an -> target		3448279	0					
ANR	3448559	Identifier	an		3448279	0					
ANR	3448560	Identifier	target		3448279	1					
ANR	3448561	Argument	env		3448279	1					
ANR	3448562	Identifier	env		3448279	0					
ANR	3448563	Argument	head		3448279	2					
ANR	3448564	Identifier	head		3448279	0					
ANR	3448565	BreakStatement	break ;	2769:1:61614:61619	3448279	5	True				
ANR	3448566	BreakStatement	break ;	2772:4:61639:61644	3448279	12	True				
ANR	3448567	Label	case NT_CALL :	2774:2:61649:61661	3448279	13	True				
ANR	3448568	Identifier	NT_CALL		3448279	0					
ANR	3448569	ExpressionStatement	"r = subexp_inf_recursive_check ( NCALL ( node ) -> target , env , head )"	2775:4:61667:61729	3448279	14	True				
ANR	3448570	AssignmentExpression	"r = subexp_inf_recursive_check ( NCALL ( node ) -> target , env , head )"		3448279	0		=			
ANR	3448571	Identifier	r		3448279	0					
ANR	3448572	CallExpression	"subexp_inf_recursive_check ( NCALL ( node ) -> target , env , head )"		3448279	1					
ANR	3448573	Callee	subexp_inf_recursive_check		3448279	0					
ANR	3448574	Identifier	subexp_inf_recursive_check		3448279	0					
ANR	3448575	ArgumentList	NCALL ( node ) -> target		3448279	1					
ANR	3448576	Argument	NCALL ( node ) -> target		3448279	0					
ANR	3448577	PtrMemberAccess	NCALL ( node ) -> target		3448279	0					
ANR	3448578	CallExpression	NCALL ( node )		3448279	0					
ANR	3448579	Callee	NCALL		3448279	0					
ANR	3448580	Identifier	NCALL		3448279	0					
ANR	3448581	ArgumentList	node		3448279	1					
ANR	3448582	Argument	node		3448279	0					
ANR	3448583	Identifier	node		3448279	0					
ANR	3448584	Identifier	target		3448279	1					
ANR	3448585	Argument	env		3448279	1					
ANR	3448586	Identifier	env		3448279	0					
ANR	3448587	Argument	head		3448279	2					
ANR	3448588	Identifier	head		3448279	0					
ANR	3448589	BreakStatement	break ;	2776:4:61735:61740	3448279	15	True				
ANR	3448590	Label	case NT_ENCLOSE :	2778:2:61745:61760	3448279	16	True				
ANR	3448591	Identifier	NT_ENCLOSE		3448279	0					
ANR	3448592	IfStatement	if ( IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) ) )		3448279	17					
ANR	3448593	Condition	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )	2779:8:61770:61801	3448279	0	True				
ANR	3448594	CallExpression	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )		3448279	0					
ANR	3448595	Callee	IS_ENCLOSE_MARK2		3448279	0					
ANR	3448596	Identifier	IS_ENCLOSE_MARK2		3448279	0					
ANR	3448597	ArgumentList	NENCLOSE ( node )		3448279	1					
ANR	3448598	Argument	NENCLOSE ( node )		3448279	0					
ANR	3448599	CallExpression	NENCLOSE ( node )		3448279	0					
ANR	3448600	Callee	NENCLOSE		3448279	0					
ANR	3448601	Identifier	NENCLOSE		3448279	0					
ANR	3448602	ArgumentList	node		3448279	1					
ANR	3448603	Argument	node		3448279	0					
ANR	3448604	Identifier	node		3448279	0					
ANR	3448605	ReturnStatement	return 0 ;	2780:6:61810:61818	3448279	1	True				
ANR	3448606	PrimaryExpression	0		3448279	0					
ANR	3448607	ElseStatement	else		3448279	0					
ANR	3448608	IfStatement	if ( IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) ) )		3448279	0					
ANR	3448609	Condition	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )	2781:13:61833:61864	3448279	0	True				
ANR	3448610	CallExpression	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )		3448279	0					
ANR	3448611	Callee	IS_ENCLOSE_MARK1		3448279	0					
ANR	3448612	Identifier	IS_ENCLOSE_MARK1		3448279	0					
ANR	3448613	ArgumentList	NENCLOSE ( node )		3448279	1					
ANR	3448614	Argument	NENCLOSE ( node )		3448279	0					
ANR	3448615	CallExpression	NENCLOSE ( node )		3448279	0					
ANR	3448616	Callee	NENCLOSE		3448279	0					
ANR	3448617	Identifier	NENCLOSE		3448279	0					
ANR	3448618	ArgumentList	node		3448279	1					
ANR	3448619	Argument	node		3448279	0					
ANR	3448620	Identifier	node		3448279	0					
ANR	3448621	ReturnStatement	return ( head == 0 ? RECURSION_EXIST : RECURSION_INFINITE ) ;	2782:6:61873:61930	3448279	1	True				
ANR	3448622	ConditionalExpression	head == 0 ? RECURSION_EXIST : RECURSION_INFINITE		3448279	0					
ANR	3448623	Condition	head == 0		3448279	0					
ANR	3448624	EqualityExpression	head == 0		3448279	0		==			
ANR	3448625	Identifier	head		3448279	0					
ANR	3448626	PrimaryExpression	0		3448279	1					
ANR	3448627	Identifier	RECURSION_EXIST		3448279	1					
ANR	3448628	Identifier	RECURSION_INFINITE		3448279	2					
ANR	3448629	ElseStatement	else		3448279	0					
ANR	3448630	CompoundStatement		69:9:1515:1515	3448279	0					
ANR	3448631	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"	2784:6:61949:61984	3448279	0	True				
ANR	3448632	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"		3448279	0					
ANR	3448633	Callee	SET_ENCLOSE_STATUS		3448279	0					
ANR	3448634	Identifier	SET_ENCLOSE_STATUS		3448279	0					
ANR	3448635	ArgumentList	node		3448279	1					
ANR	3448636	Argument	node		3448279	0					
ANR	3448637	Identifier	node		3448279	0					
ANR	3448638	Argument	NST_MARK2		3448279	1					
ANR	3448639	Identifier	NST_MARK2		3448279	0					
ANR	3448640	ExpressionStatement	"r = subexp_inf_recursive_check ( NENCLOSE ( node ) -> target , env , head )"	2785:6:61992:62057	3448279	1	True				
ANR	3448641	AssignmentExpression	"r = subexp_inf_recursive_check ( NENCLOSE ( node ) -> target , env , head )"		3448279	0		=			
ANR	3448642	Identifier	r		3448279	0					
ANR	3448643	CallExpression	"subexp_inf_recursive_check ( NENCLOSE ( node ) -> target , env , head )"		3448279	1					
ANR	3448644	Callee	subexp_inf_recursive_check		3448279	0					
ANR	3448645	Identifier	subexp_inf_recursive_check		3448279	0					
ANR	3448646	ArgumentList	NENCLOSE ( node ) -> target		3448279	1					
ANR	3448647	Argument	NENCLOSE ( node ) -> target		3448279	0					
ANR	3448648	PtrMemberAccess	NENCLOSE ( node ) -> target		3448279	0					
ANR	3448649	CallExpression	NENCLOSE ( node )		3448279	0					
ANR	3448650	Callee	NENCLOSE		3448279	0					
ANR	3448651	Identifier	NENCLOSE		3448279	0					
ANR	3448652	ArgumentList	node		3448279	1					
ANR	3448653	Argument	node		3448279	0					
ANR	3448654	Identifier	node		3448279	0					
ANR	3448655	Identifier	target		3448279	1					
ANR	3448656	Argument	env		3448279	1					
ANR	3448657	Identifier	env		3448279	0					
ANR	3448658	Argument	head		3448279	2					
ANR	3448659	Identifier	head		3448279	0					
ANR	3448660	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"	2786:6:62065:62102	3448279	2	True				
ANR	3448661	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"		3448279	0					
ANR	3448662	Callee	CLEAR_ENCLOSE_STATUS		3448279	0					
ANR	3448663	Identifier	CLEAR_ENCLOSE_STATUS		3448279	0					
ANR	3448664	ArgumentList	node		3448279	1					
ANR	3448665	Argument	node		3448279	0					
ANR	3448666	Identifier	node		3448279	0					
ANR	3448667	Argument	NST_MARK2		3448279	1					
ANR	3448668	Identifier	NST_MARK2		3448279	0					
ANR	3448669	BreakStatement	break ;	2788:4:62114:62119	3448279	18	True				
ANR	3448670	Label	default :	2790:2:62124:62131	3448279	19	True				
ANR	3448671	Identifier	default		3448279	0					
ANR	3448672	BreakStatement	break ;	2791:4:62137:62142	3448279	20	True				
ANR	3448673	ReturnStatement	return r ;	2794:2:62151:62159	3448279	4	True				
ANR	3448674	Identifier	r		3448279	0					
ANR	3448675	ReturnType	static int		3448279	1					
ANR	3448676	Identifier	subexp_inf_recursive_check		3448279	2					
ANR	3448677	ParameterList	"Node * node , ScanEnv * env , int head"		3448279	3					
ANR	3448678	Parameter	Node * node	2714:27:60389:60398	3448279	0	True				
ANR	3448679	ParameterType	Node *		3448279	0					
ANR	3448680	Identifier	node		3448279	1					
ANR	3448681	Parameter	ScanEnv * env	2714:39:60401:60412	3448279	1	True				
ANR	3448682	ParameterType	ScanEnv *		3448279	0					
ANR	3448683	Identifier	env		3448279	1					
ANR	3448684	Parameter	int head	2714:53:60415:60422	3448279	2	True				
ANR	3448685	ParameterType	int		3448279	0					
ANR	3448686	Identifier	head		3448279	1					
ANR	3448687	CFGEntryNode	ENTRY		3448279		True				
ANR	3448688	CFGExitNode	EXIT		3448279		True				
ANR	3448689	Symbol	NQTFR ( node ) -> target		3448279						
ANR	3448690	Symbol	IS_NOT_NULL		3448279						
ANR	3448691	Symbol	NCAR		3448279						
ANR	3448692	Symbol	RECURSION_EXIST		3448279						
ANR	3448693	Symbol	NQTFR ( node ) -> lower		3448279						
ANR	3448694	Symbol	NCALL		3448279						
ANR	3448695	Symbol	* NENCLOSE		3448279						
ANR	3448696	Symbol	an -> type		3448279						
ANR	3448697	Symbol	IS_ENCLOSE_MARK2		3448279						
ANR	3448698	Symbol	type		3448279						
ANR	3448699	Symbol	NQTFR		3448279						
ANR	3448700	Symbol	head		3448279						
ANR	3448701	Symbol	min		3448279						
ANR	3448702	Symbol	* NQTFR		3448279						
ANR	3448703	Symbol	NENCLOSE		3448279						
ANR	3448704	Symbol	NCALL ( node ) -> target		3448279						
ANR	3448705	Symbol	ret		3448279						
ANR	3448706	Symbol	NCDR		3448279						
ANR	3448707	Symbol	NST_MARK2		3448279						
ANR	3448708	Symbol	env		3448279						
ANR	3448709	Symbol	an		3448279						
ANR	3448710	Symbol	NENCLOSE ( node ) -> target		3448279						
ANR	3448711	Symbol	* an		3448279						
ANR	3448712	Symbol	node		3448279						
ANR	3448713	Symbol	r		3448279						
ANR	3448714	Symbol	an -> target		3448279						
ANR	3448715	Symbol	IS_ENCLOSE_MARK1		3448279						
ANR	3448716	Symbol	get_min_match_length		3448279						
ANR	3448717	Symbol	x		3448279						
ANR	3448718	Symbol	RECURSION_INFINITE		3448279						
ANR	3448719	Symbol	NANCHOR		3448279						
ANR	3448720	Symbol	NTYPE		3448279						
ANR	3448721	Symbol	subexp_inf_recursive_check		3448279						
ANR	3448722	Symbol	* NCALL		3448279						
ANR	3448723	Symbol	& min		3448279						
ANR	3448724	Function	subexp_inf_recursive_check_trav	2797:0:62164:63281							
ANR	3448725	FunctionDef	"subexp_inf_recursive_check_trav (Node * node , ScanEnv * env)"		3448724	0					
ANR	3448726	CompoundStatement		2799:0:62233:63281	3448724	0					
ANR	3448727	IdentifierDeclStatement	int type ;	2800:2:62237:62245	3448724	0	True				
ANR	3448728	IdentifierDecl	type		3448724	0					
ANR	3448729	IdentifierDeclType	int		3448724	0					
ANR	3448730	Identifier	type		3448724	1					
ANR	3448731	IdentifierDeclStatement	int r = 0 ;	2801:2:62249:62258	3448724	1	True				
ANR	3448732	IdentifierDecl	r = 0		3448724	0					
ANR	3448733	IdentifierDeclType	int		3448724	0					
ANR	3448734	Identifier	r		3448724	1					
ANR	3448735	AssignmentExpression	r = 0		3448724	2		=			
ANR	3448736	Identifier	r		3448724	0					
ANR	3448737	PrimaryExpression	0		3448724	1					
ANR	3448738	ExpressionStatement	type = NTYPE ( node )	2803:2:62263:62281	3448724	2	True				
ANR	3448739	AssignmentExpression	type = NTYPE ( node )		3448724	0		=			
ANR	3448740	Identifier	type		3448724	0					
ANR	3448741	CallExpression	NTYPE ( node )		3448724	1					
ANR	3448742	Callee	NTYPE		3448724	0					
ANR	3448743	Identifier	NTYPE		3448724	0					
ANR	3448744	ArgumentList	node		3448724	1					
ANR	3448745	Argument	node		3448724	0					
ANR	3448746	Identifier	node		3448724	0					
ANR	3448747	SwitchStatement	switch ( type )		3448724	3					
ANR	3448748	Condition	type	2804:10:62293:62296	3448724	0	True				
ANR	3448749	Identifier	type		3448724	0					
ANR	3448750	CompoundStatement		6:16:65:65	3448724	1					
ANR	3448751	Label	case NT_LIST :	2805:2:62303:62315	3448724	0	True				
ANR	3448752	Identifier	NT_LIST		3448724	0					
ANR	3448753	Label	case NT_ALT :	2806:2:62319:62330	3448724	1	True				
ANR	3448754	Identifier	NT_ALT		3448724	0					
ANR	3448755	DoStatement	do		3448724	2					
ANR	3448756	CompoundStatement		9:7:105:105	3448724	0					
ANR	3448757	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( NCAR ( node ) , env )"	2808:6:62347:62399	3448724	0	True				
ANR	3448758	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( NCAR ( node ) , env )"		3448724	0		=			
ANR	3448759	Identifier	r		3448724	0					
ANR	3448760	CallExpression	"subexp_inf_recursive_check_trav ( NCAR ( node ) , env )"		3448724	1					
ANR	3448761	Callee	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448762	Identifier	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448763	ArgumentList	NCAR ( node )		3448724	1					
ANR	3448764	Argument	NCAR ( node )		3448724	0					
ANR	3448765	CallExpression	NCAR ( node )		3448724	0					
ANR	3448766	Callee	NCAR		3448724	0					
ANR	3448767	Identifier	NCAR		3448724	0					
ANR	3448768	ArgumentList	node		3448724	1					
ANR	3448769	Argument	node		3448724	0					
ANR	3448770	Identifier	node		3448724	0					
ANR	3448771	Argument	env		3448724	1					
ANR	3448772	Identifier	env		3448724	0					
ANR	3448773	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2809:13:62414:62453	3448724	1	True				
ANR	3448774	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3448724	0		&&			
ANR	3448775	EqualityExpression	r == 0		3448724	0		==			
ANR	3448776	Identifier	r		3448724	0					
ANR	3448777	PrimaryExpression	0		3448724	1					
ANR	3448778	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3448724	1					
ANR	3448779	Callee	IS_NOT_NULL		3448724	0					
ANR	3448780	Identifier	IS_NOT_NULL		3448724	0					
ANR	3448781	ArgumentList	node = NCDR ( node )		3448724	1					
ANR	3448782	Argument	node = NCDR ( node )		3448724	0					
ANR	3448783	AssignmentExpression	node = NCDR ( node )		3448724	0		=			
ANR	3448784	Identifier	node		3448724	0					
ANR	3448785	CallExpression	NCDR ( node )		3448724	1					
ANR	3448786	Callee	NCDR		3448724	0					
ANR	3448787	Identifier	NCDR		3448724	0					
ANR	3448788	ArgumentList	node		3448724	1					
ANR	3448789	Argument	node		3448724	0					
ANR	3448790	Identifier	node		3448724	0					
ANR	3448791	BreakStatement	break ;	2810:4:62461:62466	3448724	3	True				
ANR	3448792	Label	case NT_QTFR :	2812:2:62471:62483	3448724	4	True				
ANR	3448793	Identifier	NT_QTFR		3448724	0					
ANR	3448794	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( NQTFR ( node ) -> target , env )"	2813:4:62489:62550	3448724	5	True				
ANR	3448795	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( NQTFR ( node ) -> target , env )"		3448724	0		=			
ANR	3448796	Identifier	r		3448724	0					
ANR	3448797	CallExpression	"subexp_inf_recursive_check_trav ( NQTFR ( node ) -> target , env )"		3448724	1					
ANR	3448798	Callee	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448799	Identifier	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448800	ArgumentList	NQTFR ( node ) -> target		3448724	1					
ANR	3448801	Argument	NQTFR ( node ) -> target		3448724	0					
ANR	3448802	PtrMemberAccess	NQTFR ( node ) -> target		3448724	0					
ANR	3448803	CallExpression	NQTFR ( node )		3448724	0					
ANR	3448804	Callee	NQTFR		3448724	0					
ANR	3448805	Identifier	NQTFR		3448724	0					
ANR	3448806	ArgumentList	node		3448724	1					
ANR	3448807	Argument	node		3448724	0					
ANR	3448808	Identifier	node		3448724	0					
ANR	3448809	Identifier	target		3448724	1					
ANR	3448810	Argument	env		3448724	1					
ANR	3448811	Identifier	env		3448724	0					
ANR	3448812	BreakStatement	break ;	2814:4:62556:62561	3448724	6	True				
ANR	3448813	Label	case NT_ANCHOR :	2816:2:62566:62580	3448724	7	True				
ANR	3448814	Identifier	NT_ANCHOR		3448724	0					
ANR	3448815	CompoundStatement		20:6:360:390	3448724	8					
ANR	3448816	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2818:6:62594:62624	3448724	0	True				
ANR	3448817	IdentifierDecl	* an = NANCHOR ( node )		3448724	0					
ANR	3448818	IdentifierDeclType	AnchorNode *		3448724	0					
ANR	3448819	Identifier	an		3448724	1					
ANR	3448820	AssignmentExpression	* an = NANCHOR ( node )		3448724	2		=			
ANR	3448821	Identifier	an		3448724	0					
ANR	3448822	CallExpression	NANCHOR ( node )		3448724	1					
ANR	3448823	Callee	NANCHOR		3448724	0					
ANR	3448824	Identifier	NANCHOR		3448724	0					
ANR	3448825	ArgumentList	node		3448724	1					
ANR	3448826	Argument	node		3448724	0					
ANR	3448827	Identifier	node		3448724	0					
ANR	3448828	SwitchStatement	switch ( an -> type )		3448724	1					
ANR	3448829	Condition	an -> type	2819:14:62640:62647	3448724	0	True				
ANR	3448830	PtrMemberAccess	an -> type		3448724	0					
ANR	3448831	Identifier	an		3448724	0					
ANR	3448832	Identifier	type		3448724	1					
ANR	3448833	CompoundStatement		21:24:416:416	3448724	1					
ANR	3448834	Label	case ANCHOR_PREC_READ :	2820:6:62658:62679	3448724	0	True				
ANR	3448835	Identifier	ANCHOR_PREC_READ		3448724	0					
ANR	3448836	Label	case ANCHOR_PREC_READ_NOT :	2821:6:62687:62712	3448724	1	True				
ANR	3448837	Identifier	ANCHOR_PREC_READ_NOT		3448724	0					
ANR	3448838	Label	case ANCHOR_LOOK_BEHIND :	2822:6:62720:62743	3448724	2	True				
ANR	3448839	Identifier	ANCHOR_LOOK_BEHIND		3448724	0					
ANR	3448840	Label	case ANCHOR_LOOK_BEHIND_NOT :	2823:6:62751:62778	3448724	3	True				
ANR	3448841	Identifier	ANCHOR_LOOK_BEHIND_NOT		3448724	0					
ANR	3448842	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( an -> target , env )"	2824:1:62781:62833	3448724	4	True				
ANR	3448843	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( an -> target , env )"		3448724	0		=			
ANR	3448844	Identifier	r		3448724	0					
ANR	3448845	CallExpression	"subexp_inf_recursive_check_trav ( an -> target , env )"		3448724	1					
ANR	3448846	Callee	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448847	Identifier	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448848	ArgumentList	an -> target		3448724	1					
ANR	3448849	Argument	an -> target		3448724	0					
ANR	3448850	PtrMemberAccess	an -> target		3448724	0					
ANR	3448851	Identifier	an		3448724	0					
ANR	3448852	Identifier	target		3448724	1					
ANR	3448853	Argument	env		3448724	1					
ANR	3448854	Identifier	env		3448724	0					
ANR	3448855	BreakStatement	break ;	2825:1:62836:62841	3448724	5	True				
ANR	3448856	BreakStatement	break ;	2828:4:62861:62866	3448724	9	True				
ANR	3448857	Label	case NT_ENCLOSE :	2830:2:62871:62886	3448724	10	True				
ANR	3448858	Identifier	NT_ENCLOSE		3448724	0					
ANR	3448859	CompoundStatement		34:6:666:698	3448724	11					
ANR	3448860	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2832:6:62900:62932	3448724	0	True				
ANR	3448861	IdentifierDecl	* en = NENCLOSE ( node )		3448724	0					
ANR	3448862	IdentifierDeclType	EncloseNode *		3448724	0					
ANR	3448863	Identifier	en		3448724	1					
ANR	3448864	AssignmentExpression	* en = NENCLOSE ( node )		3448724	2		=			
ANR	3448865	Identifier	en		3448724	0					
ANR	3448866	CallExpression	NENCLOSE ( node )		3448724	1					
ANR	3448867	Callee	NENCLOSE		3448724	0					
ANR	3448868	Identifier	NENCLOSE		3448724	0					
ANR	3448869	ArgumentList	node		3448724	1					
ANR	3448870	Argument	node		3448724	0					
ANR	3448871	Identifier	node		3448724	0					
ANR	3448872	IfStatement	if ( IS_ENCLOSE_RECURSION ( en ) )		3448724	1					
ANR	3448873	Condition	IS_ENCLOSE_RECURSION ( en )	2834:10:62945:62968	3448724	0	True				
ANR	3448874	CallExpression	IS_ENCLOSE_RECURSION ( en )		3448724	0					
ANR	3448875	Callee	IS_ENCLOSE_RECURSION		3448724	0					
ANR	3448876	Identifier	IS_ENCLOSE_RECURSION		3448724	0					
ANR	3448877	ArgumentList	en		3448724	1					
ANR	3448878	Argument	en		3448724	0					
ANR	3448879	Identifier	en		3448724	0					
ANR	3448880	CompoundStatement		36:36:737:737	3448724	1					
ANR	3448881	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"	2835:1:62974:63009	3448724	0	True				
ANR	3448882	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"		3448724	0					
ANR	3448883	Callee	SET_ENCLOSE_STATUS		3448724	0					
ANR	3448884	Identifier	SET_ENCLOSE_STATUS		3448724	0					
ANR	3448885	ArgumentList	node		3448724	1					
ANR	3448886	Argument	node		3448724	0					
ANR	3448887	Identifier	node		3448724	0					
ANR	3448888	Argument	NST_MARK1		3448724	1					
ANR	3448889	Identifier	NST_MARK1		3448724	0					
ANR	3448890	ExpressionStatement	"r = subexp_inf_recursive_check ( en -> target , env , 1 )"	2836:1:63012:63062	3448724	1	True				
ANR	3448891	AssignmentExpression	"r = subexp_inf_recursive_check ( en -> target , env , 1 )"		3448724	0		=			
ANR	3448892	Identifier	r		3448724	0					
ANR	3448893	CallExpression	"subexp_inf_recursive_check ( en -> target , env , 1 )"		3448724	1					
ANR	3448894	Callee	subexp_inf_recursive_check		3448724	0					
ANR	3448895	Identifier	subexp_inf_recursive_check		3448724	0					
ANR	3448896	ArgumentList	en -> target		3448724	1					
ANR	3448897	Argument	en -> target		3448724	0					
ANR	3448898	PtrMemberAccess	en -> target		3448724	0					
ANR	3448899	Identifier	en		3448724	0					
ANR	3448900	Identifier	target		3448724	1					
ANR	3448901	Argument	env		3448724	1					
ANR	3448902	Identifier	env		3448724	0					
ANR	3448903	Argument	1		3448724	2					
ANR	3448904	PrimaryExpression	1		3448724	0					
ANR	3448905	IfStatement	if ( r > 0 )		3448724	2					
ANR	3448906	Condition	r > 0	2837:5:63069:63073	3448724	0	True				
ANR	3448907	RelationalExpression	r > 0		3448724	0		>			
ANR	3448908	Identifier	r		3448724	0					
ANR	3448909	PrimaryExpression	0		3448724	1					
ANR	3448910	ReturnStatement	return ONIGERR_NEVER_ENDING_RECURSION ;	2837:12:63076:63113	3448724	1	True				
ANR	3448911	Identifier	ONIGERR_NEVER_ENDING_RECURSION		3448724	0					
ANR	3448912	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"	2838:1:63116:63153	3448724	3	True				
ANR	3448913	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"		3448724	0					
ANR	3448914	Callee	CLEAR_ENCLOSE_STATUS		3448724	0					
ANR	3448915	Identifier	CLEAR_ENCLOSE_STATUS		3448724	0					
ANR	3448916	ArgumentList	node		3448724	1					
ANR	3448917	Argument	node		3448724	0					
ANR	3448918	Identifier	node		3448724	0					
ANR	3448919	Argument	NST_MARK1		3448724	1					
ANR	3448920	Identifier	NST_MARK1		3448724	0					
ANR	3448921	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( en -> target , env )"	2840:6:63169:63221	3448724	2	True				
ANR	3448922	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( en -> target , env )"		3448724	0		=			
ANR	3448923	Identifier	r		3448724	0					
ANR	3448924	CallExpression	"subexp_inf_recursive_check_trav ( en -> target , env )"		3448724	1					
ANR	3448925	Callee	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448926	Identifier	subexp_inf_recursive_check_trav		3448724	0					
ANR	3448927	ArgumentList	en -> target		3448724	1					
ANR	3448928	Argument	en -> target		3448724	0					
ANR	3448929	PtrMemberAccess	en -> target		3448724	0					
ANR	3448930	Identifier	en		3448724	0					
ANR	3448931	Identifier	target		3448724	1					
ANR	3448932	Argument	env		3448724	1					
ANR	3448933	Identifier	env		3448724	0					
ANR	3448934	BreakStatement	break ;	2843:4:63234:63239	3448724	12	True				
ANR	3448935	Label	default :	2845:2:63244:63251	3448724	13	True				
ANR	3448936	Identifier	default		3448724	0					
ANR	3448937	BreakStatement	break ;	2846:4:63257:63262	3448724	14	True				
ANR	3448938	ReturnStatement	return r ;	2849:2:63271:63279	3448724	4	True				
ANR	3448939	Identifier	r		3448724	0					
ANR	3448940	ReturnType	static int		3448724	1					
ANR	3448941	Identifier	subexp_inf_recursive_check_trav		3448724	2					
ANR	3448942	ParameterList	"Node * node , ScanEnv * env"		3448724	3					
ANR	3448943	Parameter	Node * node	2798:32:62207:62216	3448724	0	True				
ANR	3448944	ParameterType	Node *		3448724	0					
ANR	3448945	Identifier	node		3448724	1					
ANR	3448946	Parameter	ScanEnv * env	2798:44:62219:62230	3448724	1	True				
ANR	3448947	ParameterType	ScanEnv *		3448724	0					
ANR	3448948	Identifier	env		3448724	1					
ANR	3448949	CFGEntryNode	ENTRY		3448724		True				
ANR	3448950	CFGExitNode	EXIT		3448724		True				
ANR	3448951	Symbol	NQTFR ( node ) -> target		3448724						
ANR	3448952	Symbol	IS_NOT_NULL		3448724						
ANR	3448953	Symbol	NCAR		3448724						
ANR	3448954	Symbol	an -> type		3448724						
ANR	3448955	Symbol	type		3448724						
ANR	3448956	Symbol	NQTFR		3448724						
ANR	3448957	Symbol	* en		3448724						
ANR	3448958	Symbol	ONIGERR_NEVER_ENDING_RECURSION		3448724						
ANR	3448959	Symbol	* NQTFR		3448724						
ANR	3448960	Symbol	NENCLOSE		3448724						
ANR	3448961	Symbol	subexp_inf_recursive_check_trav		3448724						
ANR	3448962	Symbol	NCDR		3448724						
ANR	3448963	Symbol	en		3448724						
ANR	3448964	Symbol	NST_MARK1		3448724						
ANR	3448965	Symbol	env		3448724						
ANR	3448966	Symbol	an		3448724						
ANR	3448967	Symbol	* an		3448724						
ANR	3448968	Symbol	node		3448724						
ANR	3448969	Symbol	r		3448724						
ANR	3448970	Symbol	an -> target		3448724						
ANR	3448971	Symbol	en -> target		3448724						
ANR	3448972	Symbol	NANCHOR		3448724						
ANR	3448973	Symbol	NTYPE		3448724						
ANR	3448974	Symbol	IS_ENCLOSE_RECURSION		3448724						
ANR	3448975	Symbol	subexp_inf_recursive_check		3448724						
ANR	3448976	Function	subexp_recursive_check	2852:0:63284:64381							
ANR	3448977	FunctionDef	subexp_recursive_check (Node * node)		3448976	0					
ANR	3448978	CompoundStatement		2854:0:63330:64381	3448976	0					
ANR	3448979	IdentifierDeclStatement	int r = 0 ;	2855:2:63334:63343	3448976	0	True				
ANR	3448980	IdentifierDecl	r = 0		3448976	0					
ANR	3448981	IdentifierDeclType	int		3448976	0					
ANR	3448982	Identifier	r		3448976	1					
ANR	3448983	AssignmentExpression	r = 0		3448976	2		=			
ANR	3448984	Identifier	r		3448976	0					
ANR	3448985	PrimaryExpression	0		3448976	1					
ANR	3448986	SwitchStatement	switch ( NTYPE ( node ) )		3448976	1					
ANR	3448987	Condition	NTYPE ( node )	2857:10:63356:63366	3448976	0	True				
ANR	3448988	CallExpression	NTYPE ( node )		3448976	0					
ANR	3448989	Callee	NTYPE		3448976	0					
ANR	3448990	Identifier	NTYPE		3448976	0					
ANR	3448991	ArgumentList	node		3448976	1					
ANR	3448992	Argument	node		3448976	0					
ANR	3448993	Identifier	node		3448976	0					
ANR	3448994	CompoundStatement		4:23:38:38	3448976	1					
ANR	3448995	Label	case NT_LIST :	2858:2:63373:63385	3448976	0	True				
ANR	3448996	Identifier	NT_LIST		3448976	0					
ANR	3448997	Label	case NT_ALT :	2859:2:63389:63400	3448976	1	True				
ANR	3448998	Identifier	NT_ALT		3448976	0					
ANR	3448999	DoStatement	do		3448976	2					
ANR	3449000	CompoundStatement		7:7:78:78	3448976	0					
ANR	3449001	ExpressionStatement	r |= subexp_recursive_check ( NCAR ( node ) )	2861:6:63417:63456	3448976	0	True				
ANR	3449002	AssignmentExpression	r |= subexp_recursive_check ( NCAR ( node ) )		3448976	0		|=			
ANR	3449003	Identifier	r		3448976	0					
ANR	3449004	CallExpression	subexp_recursive_check ( NCAR ( node ) )		3448976	1					
ANR	3449005	Callee	subexp_recursive_check		3448976	0					
ANR	3449006	Identifier	subexp_recursive_check		3448976	0					
ANR	3449007	ArgumentList	NCAR ( node )		3448976	1					
ANR	3449008	Argument	NCAR ( node )		3448976	0					
ANR	3449009	CallExpression	NCAR ( node )		3448976	0					
ANR	3449010	Callee	NCAR		3448976	0					
ANR	3449011	Identifier	NCAR		3448976	0					
ANR	3449012	ArgumentList	node		3448976	1					
ANR	3449013	Argument	node		3448976	0					
ANR	3449014	Identifier	node		3448976	0					
ANR	3449015	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2862:13:63471:63500	3448976	1	True				
ANR	3449016	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3448976	0					
ANR	3449017	Callee	IS_NOT_NULL		3448976	0					
ANR	3449018	Identifier	IS_NOT_NULL		3448976	0					
ANR	3449019	ArgumentList	node = NCDR ( node )		3448976	1					
ANR	3449020	Argument	node = NCDR ( node )		3448976	0					
ANR	3449021	AssignmentExpression	node = NCDR ( node )		3448976	0		=			
ANR	3449022	Identifier	node		3448976	0					
ANR	3449023	CallExpression	NCDR ( node )		3448976	1					
ANR	3449024	Callee	NCDR		3448976	0					
ANR	3449025	Identifier	NCDR		3448976	0					
ANR	3449026	ArgumentList	node		3448976	1					
ANR	3449027	Argument	node		3448976	0					
ANR	3449028	Identifier	node		3448976	0					
ANR	3449029	BreakStatement	break ;	2863:4:63508:63513	3448976	3	True				
ANR	3449030	Label	case NT_QTFR :	2865:2:63518:63530	3448976	4	True				
ANR	3449031	Identifier	NT_QTFR		3448976	0					
ANR	3449032	ExpressionStatement	r = subexp_recursive_check ( NQTFR ( node ) -> target )	2866:4:63536:63583	3448976	5	True				
ANR	3449033	AssignmentExpression	r = subexp_recursive_check ( NQTFR ( node ) -> target )		3448976	0		=			
ANR	3449034	Identifier	r		3448976	0					
ANR	3449035	CallExpression	subexp_recursive_check ( NQTFR ( node ) -> target )		3448976	1					
ANR	3449036	Callee	subexp_recursive_check		3448976	0					
ANR	3449037	Identifier	subexp_recursive_check		3448976	0					
ANR	3449038	ArgumentList	NQTFR ( node ) -> target		3448976	1					
ANR	3449039	Argument	NQTFR ( node ) -> target		3448976	0					
ANR	3449040	PtrMemberAccess	NQTFR ( node ) -> target		3448976	0					
ANR	3449041	CallExpression	NQTFR ( node )		3448976	0					
ANR	3449042	Callee	NQTFR		3448976	0					
ANR	3449043	Identifier	NQTFR		3448976	0					
ANR	3449044	ArgumentList	node		3448976	1					
ANR	3449045	Argument	node		3448976	0					
ANR	3449046	Identifier	node		3448976	0					
ANR	3449047	Identifier	target		3448976	1					
ANR	3449048	BreakStatement	break ;	2867:4:63589:63594	3448976	6	True				
ANR	3449049	Label	case NT_ANCHOR :	2869:2:63599:63613	3448976	7	True				
ANR	3449050	Identifier	NT_ANCHOR		3448976	0					
ANR	3449051	CompoundStatement		18:6:296:326	3448976	8					
ANR	3449052	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2871:6:63627:63657	3448976	0	True				
ANR	3449053	IdentifierDecl	* an = NANCHOR ( node )		3448976	0					
ANR	3449054	IdentifierDeclType	AnchorNode *		3448976	0					
ANR	3449055	Identifier	an		3448976	1					
ANR	3449056	AssignmentExpression	* an = NANCHOR ( node )		3448976	2		=			
ANR	3449057	Identifier	an		3448976	0					
ANR	3449058	CallExpression	NANCHOR ( node )		3448976	1					
ANR	3449059	Callee	NANCHOR		3448976	0					
ANR	3449060	Identifier	NANCHOR		3448976	0					
ANR	3449061	ArgumentList	node		3448976	1					
ANR	3449062	Argument	node		3448976	0					
ANR	3449063	Identifier	node		3448976	0					
ANR	3449064	SwitchStatement	switch ( an -> type )		3448976	1					
ANR	3449065	Condition	an -> type	2872:14:63673:63680	3448976	0	True				
ANR	3449066	PtrMemberAccess	an -> type		3448976	0					
ANR	3449067	Identifier	an		3448976	0					
ANR	3449068	Identifier	type		3448976	1					
ANR	3449069	CompoundStatement		19:24:352:352	3448976	1					
ANR	3449070	Label	case ANCHOR_PREC_READ :	2873:6:63691:63712	3448976	0	True				
ANR	3449071	Identifier	ANCHOR_PREC_READ		3448976	0					
ANR	3449072	Label	case ANCHOR_PREC_READ_NOT :	2874:6:63720:63745	3448976	1	True				
ANR	3449073	Identifier	ANCHOR_PREC_READ_NOT		3448976	0					
ANR	3449074	Label	case ANCHOR_LOOK_BEHIND :	2875:6:63753:63776	3448976	2	True				
ANR	3449075	Identifier	ANCHOR_LOOK_BEHIND		3448976	0					
ANR	3449076	Label	case ANCHOR_LOOK_BEHIND_NOT :	2876:6:63784:63811	3448976	3	True				
ANR	3449077	Identifier	ANCHOR_LOOK_BEHIND_NOT		3448976	0					
ANR	3449078	ExpressionStatement	r = subexp_recursive_check ( an -> target )	2877:1:63814:63852	3448976	4	True				
ANR	3449079	AssignmentExpression	r = subexp_recursive_check ( an -> target )		3448976	0		=			
ANR	3449080	Identifier	r		3448976	0					
ANR	3449081	CallExpression	subexp_recursive_check ( an -> target )		3448976	1					
ANR	3449082	Callee	subexp_recursive_check		3448976	0					
ANR	3449083	Identifier	subexp_recursive_check		3448976	0					
ANR	3449084	ArgumentList	an -> target		3448976	1					
ANR	3449085	Argument	an -> target		3448976	0					
ANR	3449086	PtrMemberAccess	an -> target		3448976	0					
ANR	3449087	Identifier	an		3448976	0					
ANR	3449088	Identifier	target		3448976	1					
ANR	3449089	BreakStatement	break ;	2878:1:63855:63860	3448976	5	True				
ANR	3449090	BreakStatement	break ;	2881:4:63880:63885	3448976	9	True				
ANR	3449091	Label	case NT_CALL :	2883:2:63890:63902	3448976	10	True				
ANR	3449092	Identifier	NT_CALL		3448976	0					
ANR	3449093	ExpressionStatement	r = subexp_recursive_check ( NCALL ( node ) -> target )	2884:4:63908:63955	3448976	11	True				
ANR	3449094	AssignmentExpression	r = subexp_recursive_check ( NCALL ( node ) -> target )		3448976	0		=			
ANR	3449095	Identifier	r		3448976	0					
ANR	3449096	CallExpression	subexp_recursive_check ( NCALL ( node ) -> target )		3448976	1					
ANR	3449097	Callee	subexp_recursive_check		3448976	0					
ANR	3449098	Identifier	subexp_recursive_check		3448976	0					
ANR	3449099	ArgumentList	NCALL ( node ) -> target		3448976	1					
ANR	3449100	Argument	NCALL ( node ) -> target		3448976	0					
ANR	3449101	PtrMemberAccess	NCALL ( node ) -> target		3448976	0					
ANR	3449102	CallExpression	NCALL ( node )		3448976	0					
ANR	3449103	Callee	NCALL		3448976	0					
ANR	3449104	Identifier	NCALL		3448976	0					
ANR	3449105	ArgumentList	node		3448976	1					
ANR	3449106	Argument	node		3448976	0					
ANR	3449107	Identifier	node		3448976	0					
ANR	3449108	Identifier	target		3448976	1					
ANR	3449109	IfStatement	if ( r != 0 )		3448976	12					
ANR	3449110	Condition	r != 0	2885:8:63965:63970	3448976	0	True				
ANR	3449111	EqualityExpression	r != 0		3448976	0		!=			
ANR	3449112	Identifier	r		3448976	0					
ANR	3449113	PrimaryExpression	0		3448976	1					
ANR	3449114	ExpressionStatement	SET_CALL_RECURSION ( node )	2885:16:63973:63997	3448976	1	True				
ANR	3449115	CallExpression	SET_CALL_RECURSION ( node )		3448976	0					
ANR	3449116	Callee	SET_CALL_RECURSION		3448976	0					
ANR	3449117	Identifier	SET_CALL_RECURSION		3448976	0					
ANR	3449118	ArgumentList	node		3448976	1					
ANR	3449119	Argument	node		3448976	0					
ANR	3449120	Identifier	node		3448976	0					
ANR	3449121	BreakStatement	break ;	2886:4:64003:64008	3448976	13	True				
ANR	3449122	Label	case NT_ENCLOSE :	2888:2:64013:64028	3448976	14	True				
ANR	3449123	Identifier	NT_ENCLOSE		3448976	0					
ANR	3449124	IfStatement	if ( IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) ) )		3448976	15					
ANR	3449125	Condition	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )	2889:8:64038:64069	3448976	0	True				
ANR	3449126	CallExpression	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )		3448976	0					
ANR	3449127	Callee	IS_ENCLOSE_MARK2		3448976	0					
ANR	3449128	Identifier	IS_ENCLOSE_MARK2		3448976	0					
ANR	3449129	ArgumentList	NENCLOSE ( node )		3448976	1					
ANR	3449130	Argument	NENCLOSE ( node )		3448976	0					
ANR	3449131	CallExpression	NENCLOSE ( node )		3448976	0					
ANR	3449132	Callee	NENCLOSE		3448976	0					
ANR	3449133	Identifier	NENCLOSE		3448976	0					
ANR	3449134	ArgumentList	node		3448976	1					
ANR	3449135	Argument	node		3448976	0					
ANR	3449136	Identifier	node		3448976	0					
ANR	3449137	ReturnStatement	return 0 ;	2890:6:64078:64086	3448976	1	True				
ANR	3449138	PrimaryExpression	0		3448976	0					
ANR	3449139	ElseStatement	else		3448976	0					
ANR	3449140	IfStatement	if ( IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) ) )		3448976	0					
ANR	3449141	Condition	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )	2891:13:64101:64132	3448976	0	True				
ANR	3449142	CallExpression	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )		3448976	0					
ANR	3449143	Callee	IS_ENCLOSE_MARK1		3448976	0					
ANR	3449144	Identifier	IS_ENCLOSE_MARK1		3448976	0					
ANR	3449145	ArgumentList	NENCLOSE ( node )		3448976	1					
ANR	3449146	Argument	NENCLOSE ( node )		3448976	0					
ANR	3449147	CallExpression	NENCLOSE ( node )		3448976	0					
ANR	3449148	Callee	NENCLOSE		3448976	0					
ANR	3449149	Identifier	NENCLOSE		3448976	0					
ANR	3449150	ArgumentList	node		3448976	1					
ANR	3449151	Argument	node		3448976	0					
ANR	3449152	Identifier	node		3448976	0					
ANR	3449153	ReturnStatement	return 1 ;	2892:6:64141:64149	3448976	1	True				
ANR	3449154	PrimaryExpression	1		3448976	0					
ANR	3449155	ElseStatement	else		3448976	0					
ANR	3449156	CompoundStatement		40:9:845:845	3448976	0					
ANR	3449157	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"	2894:6:64184:64219	3448976	0	True				
ANR	3449158	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"		3448976	0					
ANR	3449159	Callee	SET_ENCLOSE_STATUS		3448976	0					
ANR	3449160	Identifier	SET_ENCLOSE_STATUS		3448976	0					
ANR	3449161	ArgumentList	node		3448976	1					
ANR	3449162	Argument	node		3448976	0					
ANR	3449163	Identifier	node		3448976	0					
ANR	3449164	Argument	NST_MARK2		3448976	1					
ANR	3449165	Identifier	NST_MARK2		3448976	0					
ANR	3449166	ExpressionStatement	r = subexp_recursive_check ( NENCLOSE ( node ) -> target )	2895:6:64227:64277	3448976	1	True				
ANR	3449167	AssignmentExpression	r = subexp_recursive_check ( NENCLOSE ( node ) -> target )		3448976	0		=			
ANR	3449168	Identifier	r		3448976	0					
ANR	3449169	CallExpression	subexp_recursive_check ( NENCLOSE ( node ) -> target )		3448976	1					
ANR	3449170	Callee	subexp_recursive_check		3448976	0					
ANR	3449171	Identifier	subexp_recursive_check		3448976	0					
ANR	3449172	ArgumentList	NENCLOSE ( node ) -> target		3448976	1					
ANR	3449173	Argument	NENCLOSE ( node ) -> target		3448976	0					
ANR	3449174	PtrMemberAccess	NENCLOSE ( node ) -> target		3448976	0					
ANR	3449175	CallExpression	NENCLOSE ( node )		3448976	0					
ANR	3449176	Callee	NENCLOSE		3448976	0					
ANR	3449177	Identifier	NENCLOSE		3448976	0					
ANR	3449178	ArgumentList	node		3448976	1					
ANR	3449179	Argument	node		3448976	0					
ANR	3449180	Identifier	node		3448976	0					
ANR	3449181	Identifier	target		3448976	1					
ANR	3449182	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"	2896:6:64285:64322	3448976	2	True				
ANR	3449183	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"		3448976	0					
ANR	3449184	Callee	CLEAR_ENCLOSE_STATUS		3448976	0					
ANR	3449185	Identifier	CLEAR_ENCLOSE_STATUS		3448976	0					
ANR	3449186	ArgumentList	node		3448976	1					
ANR	3449187	Argument	node		3448976	0					
ANR	3449188	Identifier	node		3448976	0					
ANR	3449189	Argument	NST_MARK2		3448976	1					
ANR	3449190	Identifier	NST_MARK2		3448976	0					
ANR	3449191	BreakStatement	break ;	2898:4:64334:64339	3448976	16	True				
ANR	3449192	Label	default :	2900:2:64344:64351	3448976	17	True				
ANR	3449193	Identifier	default		3448976	0					
ANR	3449194	BreakStatement	break ;	2901:4:64357:64362	3448976	18	True				
ANR	3449195	ReturnStatement	return r ;	2904:2:64371:64379	3448976	2	True				
ANR	3449196	Identifier	r		3448976	0					
ANR	3449197	ReturnType	static int		3448976	1					
ANR	3449198	Identifier	subexp_recursive_check		3448976	2					
ANR	3449199	ParameterList	Node * node		3448976	3					
ANR	3449200	Parameter	Node * node	2853:23:63318:63327	3448976	0	True				
ANR	3449201	ParameterType	Node *		3448976	0					
ANR	3449202	Identifier	node		3448976	1					
ANR	3449203	CFGEntryNode	ENTRY		3448976		True				
ANR	3449204	CFGExitNode	EXIT		3448976		True				
ANR	3449205	Symbol	NQTFR ( node ) -> target		3448976						
ANR	3449206	Symbol	IS_NOT_NULL		3448976						
ANR	3449207	Symbol	NCAR		3448976						
ANR	3449208	Symbol	NCALL		3448976						
ANR	3449209	Symbol	* NENCLOSE		3448976						
ANR	3449210	Symbol	NCDR		3448976						
ANR	3449211	Symbol	an -> type		3448976						
ANR	3449212	Symbol	IS_ENCLOSE_MARK2		3448976						
ANR	3449213	Symbol	NST_MARK2		3448976						
ANR	3449214	Symbol	subexp_recursive_check		3448976						
ANR	3449215	Symbol	NQTFR		3448976						
ANR	3449216	Symbol	an		3448976						
ANR	3449217	Symbol	NENCLOSE ( node ) -> target		3448976						
ANR	3449218	Symbol	* an		3448976						
ANR	3449219	Symbol	node		3448976						
ANR	3449220	Symbol	r		3448976						
ANR	3449221	Symbol	* NQTFR		3448976						
ANR	3449222	Symbol	an -> target		3448976						
ANR	3449223	Symbol	NENCLOSE		3448976						
ANR	3449224	Symbol	IS_ENCLOSE_MARK1		3448976						
ANR	3449225	Symbol	NANCHOR		3448976						
ANR	3449226	Symbol	NCALL ( node ) -> target		3448976						
ANR	3449227	Symbol	NTYPE		3448976						
ANR	3449228	Symbol	* NCALL		3448976						
ANR	3449229	Function	subexp_recursive_check_trav	2908:0:64385:65813							
ANR	3449230	FunctionDef	"subexp_recursive_check_trav (Node * node , ScanEnv * env)"		3449229	0					
ANR	3449231	CompoundStatement		2910:0:64450:65813	3449229	0					
ANR	3449232	Statement	define	2911:1:64453:64458	3449229	0	True				
ANR	3449233	Statement	FOUND_CALLED_NODE	2911:8:64460:64476	3449229	1	True				
ANR	3449234	Statement	1	2911:29:64481:64481	3449229	2	True				
ANR	3449235	IdentifierDeclStatement	int type ;	2913:2:64486:64494	3449229	3	True				
ANR	3449236	IdentifierDecl	type		3449229	0					
ANR	3449237	IdentifierDeclType	int		3449229	0					
ANR	3449238	Identifier	type		3449229	1					
ANR	3449239	IdentifierDeclStatement	int r = 0 ;	2914:2:64498:64507	3449229	4	True				
ANR	3449240	IdentifierDecl	r = 0		3449229	0					
ANR	3449241	IdentifierDeclType	int		3449229	0					
ANR	3449242	Identifier	r		3449229	1					
ANR	3449243	AssignmentExpression	r = 0		3449229	2		=			
ANR	3449244	Identifier	r		3449229	0					
ANR	3449245	PrimaryExpression	0		3449229	1					
ANR	3449246	ExpressionStatement	type = NTYPE ( node )	2916:2:64512:64530	3449229	5	True				
ANR	3449247	AssignmentExpression	type = NTYPE ( node )		3449229	0		=			
ANR	3449248	Identifier	type		3449229	0					
ANR	3449249	CallExpression	NTYPE ( node )		3449229	1					
ANR	3449250	Callee	NTYPE		3449229	0					
ANR	3449251	Identifier	NTYPE		3449229	0					
ANR	3449252	ArgumentList	node		3449229	1					
ANR	3449253	Argument	node		3449229	0					
ANR	3449254	Identifier	node		3449229	0					
ANR	3449255	SwitchStatement	switch ( type )		3449229	6					
ANR	3449256	Condition	type	2917:10:64542:64545	3449229	0	True				
ANR	3449257	Identifier	type		3449229	0					
ANR	3449258	CompoundStatement		8:16:97:97	3449229	1					
ANR	3449259	Label	case NT_LIST :	2918:2:64552:64564	3449229	0	True				
ANR	3449260	Identifier	NT_LIST		3449229	0					
ANR	3449261	Label	case NT_ALT :	2919:2:64568:64579	3449229	1	True				
ANR	3449262	Identifier	NT_ALT		3449229	0					
ANR	3449263	CompoundStatement		12:6:142:149	3449229	2					
ANR	3449264	IdentifierDeclStatement	int ret ;	2921:6:64593:64600	3449229	0	True				
ANR	3449265	IdentifierDecl	ret		3449229	0					
ANR	3449266	IdentifierDeclType	int		3449229	0					
ANR	3449267	Identifier	ret		3449229	1					
ANR	3449268	DoStatement	do		3449229	1					
ANR	3449269	CompoundStatement		13:9:160:160	3449229	0					
ANR	3449270	ExpressionStatement	"ret = subexp_recursive_check_trav ( NCAR ( node ) , env )"	2923:1:64614:64664	3449229	0	True				
ANR	3449271	AssignmentExpression	"ret = subexp_recursive_check_trav ( NCAR ( node ) , env )"		3449229	0		=			
ANR	3449272	Identifier	ret		3449229	0					
ANR	3449273	CallExpression	"subexp_recursive_check_trav ( NCAR ( node ) , env )"		3449229	1					
ANR	3449274	Callee	subexp_recursive_check_trav		3449229	0					
ANR	3449275	Identifier	subexp_recursive_check_trav		3449229	0					
ANR	3449276	ArgumentList	NCAR ( node )		3449229	1					
ANR	3449277	Argument	NCAR ( node )		3449229	0					
ANR	3449278	CallExpression	NCAR ( node )		3449229	0					
ANR	3449279	Callee	NCAR		3449229	0					
ANR	3449280	Identifier	NCAR		3449229	0					
ANR	3449281	ArgumentList	node		3449229	1					
ANR	3449282	Argument	node		3449229	0					
ANR	3449283	Identifier	node		3449229	0					
ANR	3449284	Argument	env		3449229	1					
ANR	3449285	Identifier	env		3449229	0					
ANR	3449286	IfStatement	if ( ret == FOUND_CALLED_NODE )		3449229	1					
ANR	3449287	Condition	ret == FOUND_CALLED_NODE	2924:5:64671:64694	3449229	0	True				
ANR	3449288	EqualityExpression	ret == FOUND_CALLED_NODE		3449229	0		==			
ANR	3449289	Identifier	ret		3449229	0					
ANR	3449290	Identifier	FOUND_CALLED_NODE		3449229	1					
ANR	3449291	ExpressionStatement	r = FOUND_CALLED_NODE	2924:31:64697:64718	3449229	1	True				
ANR	3449292	AssignmentExpression	r = FOUND_CALLED_NODE		3449229	0		=			
ANR	3449293	Identifier	r		3449229	0					
ANR	3449294	Identifier	FOUND_CALLED_NODE		3449229	1					
ANR	3449295	ElseStatement	else		3449229	0					
ANR	3449296	IfStatement	if ( ret < 0 )		3449229	0					
ANR	3449297	Condition	ret < 0	2925:10:64730:64736	3449229	0	True				
ANR	3449298	RelationalExpression	ret < 0		3449229	0		<			
ANR	3449299	Identifier	ret		3449229	0					
ANR	3449300	PrimaryExpression	0		3449229	1					
ANR	3449301	ReturnStatement	return ret ;	2925:19:64739:64749	3449229	1	True				
ANR	3449302	Identifier	ret		3449229	0					
ANR	3449303	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2926:15:64766:64795	3449229	1	True				
ANR	3449304	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3449229	0					
ANR	3449305	Callee	IS_NOT_NULL		3449229	0					
ANR	3449306	Identifier	IS_NOT_NULL		3449229	0					
ANR	3449307	ArgumentList	node = NCDR ( node )		3449229	1					
ANR	3449308	Argument	node = NCDR ( node )		3449229	0					
ANR	3449309	AssignmentExpression	node = NCDR ( node )		3449229	0		=			
ANR	3449310	Identifier	node		3449229	0					
ANR	3449311	CallExpression	NCDR ( node )		3449229	1					
ANR	3449312	Callee	NCDR		3449229	0					
ANR	3449313	Identifier	NCDR		3449229	0					
ANR	3449314	ArgumentList	node		3449229	1					
ANR	3449315	Argument	node		3449229	0					
ANR	3449316	Identifier	node		3449229	0					
ANR	3449317	BreakStatement	break ;	2928:4:64809:64814	3449229	3	True				
ANR	3449318	Label	case NT_QTFR :	2930:2:64819:64831	3449229	4	True				
ANR	3449319	Identifier	NT_QTFR		3449229	0					
ANR	3449320	ExpressionStatement	"r = subexp_recursive_check_trav ( NQTFR ( node ) -> target , env )"	2931:4:64837:64894	3449229	5	True				
ANR	3449321	AssignmentExpression	"r = subexp_recursive_check_trav ( NQTFR ( node ) -> target , env )"		3449229	0		=			
ANR	3449322	Identifier	r		3449229	0					
ANR	3449323	CallExpression	"subexp_recursive_check_trav ( NQTFR ( node ) -> target , env )"		3449229	1					
ANR	3449324	Callee	subexp_recursive_check_trav		3449229	0					
ANR	3449325	Identifier	subexp_recursive_check_trav		3449229	0					
ANR	3449326	ArgumentList	NQTFR ( node ) -> target		3449229	1					
ANR	3449327	Argument	NQTFR ( node ) -> target		3449229	0					
ANR	3449328	PtrMemberAccess	NQTFR ( node ) -> target		3449229	0					
ANR	3449329	CallExpression	NQTFR ( node )		3449229	0					
ANR	3449330	Callee	NQTFR		3449229	0					
ANR	3449331	Identifier	NQTFR		3449229	0					
ANR	3449332	ArgumentList	node		3449229	1					
ANR	3449333	Argument	node		3449229	0					
ANR	3449334	Identifier	node		3449229	0					
ANR	3449335	Identifier	target		3449229	1					
ANR	3449336	Argument	env		3449229	1					
ANR	3449337	Identifier	env		3449229	0					
ANR	3449338	IfStatement	if ( NQTFR ( node ) -> upper == 0 )		3449229	6					
ANR	3449339	Condition	NQTFR ( node ) -> upper == 0	2932:8:64904:64926	3449229	0	True				
ANR	3449340	EqualityExpression	NQTFR ( node ) -> upper == 0		3449229	0		==			
ANR	3449341	PtrMemberAccess	NQTFR ( node ) -> upper		3449229	0					
ANR	3449342	CallExpression	NQTFR ( node )		3449229	0					
ANR	3449343	Callee	NQTFR		3449229	0					
ANR	3449344	Identifier	NQTFR		3449229	0					
ANR	3449345	ArgumentList	node		3449229	1					
ANR	3449346	Argument	node		3449229	0					
ANR	3449347	Identifier	node		3449229	0					
ANR	3449348	Identifier	upper		3449229	1					
ANR	3449349	PrimaryExpression	0		3449229	1					
ANR	3449350	CompoundStatement		23:33:478:478	3449229	1					
ANR	3449351	IfStatement	if ( r == FOUND_CALLED_NODE )		3449229	0					
ANR	3449352	Condition	r == FOUND_CALLED_NODE	2933:10:64941:64962	3449229	0	True				
ANR	3449353	EqualityExpression	r == FOUND_CALLED_NODE		3449229	0		==			
ANR	3449354	Identifier	r		3449229	0					
ANR	3449355	Identifier	FOUND_CALLED_NODE		3449229	1					
ANR	3449356	ExpressionStatement	NQTFR ( node ) -> is_refered = 1	2934:1:64966:64993	3449229	1	True				
ANR	3449357	AssignmentExpression	NQTFR ( node ) -> is_refered = 1		3449229	0		=			
ANR	3449358	PtrMemberAccess	NQTFR ( node ) -> is_refered		3449229	0					
ANR	3449359	CallExpression	NQTFR ( node )		3449229	0					
ANR	3449360	Callee	NQTFR		3449229	0					
ANR	3449361	Identifier	NQTFR		3449229	0					
ANR	3449362	ArgumentList	node		3449229	1					
ANR	3449363	Argument	node		3449229	0					
ANR	3449364	Identifier	node		3449229	0					
ANR	3449365	Identifier	is_refered		3449229	1					
ANR	3449366	PrimaryExpression	1		3449229	1					
ANR	3449367	BreakStatement	break ;	2936:4:65005:65010	3449229	7	True				
ANR	3449368	Label	case NT_ANCHOR :	2938:2:65015:65029	3449229	8	True				
ANR	3449369	Identifier	NT_ANCHOR		3449229	0					
ANR	3449370	CompoundStatement		31:6:592:622	3449229	9					
ANR	3449371	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2940:6:65043:65073	3449229	0	True				
ANR	3449372	IdentifierDecl	* an = NANCHOR ( node )		3449229	0					
ANR	3449373	IdentifierDeclType	AnchorNode *		3449229	0					
ANR	3449374	Identifier	an		3449229	1					
ANR	3449375	AssignmentExpression	* an = NANCHOR ( node )		3449229	2		=			
ANR	3449376	Identifier	an		3449229	0					
ANR	3449377	CallExpression	NANCHOR ( node )		3449229	1					
ANR	3449378	Callee	NANCHOR		3449229	0					
ANR	3449379	Identifier	NANCHOR		3449229	0					
ANR	3449380	ArgumentList	node		3449229	1					
ANR	3449381	Argument	node		3449229	0					
ANR	3449382	Identifier	node		3449229	0					
ANR	3449383	SwitchStatement	switch ( an -> type )		3449229	1					
ANR	3449384	Condition	an -> type	2941:14:65089:65096	3449229	0	True				
ANR	3449385	PtrMemberAccess	an -> type		3449229	0					
ANR	3449386	Identifier	an		3449229	0					
ANR	3449387	Identifier	type		3449229	1					
ANR	3449388	CompoundStatement		32:24:648:648	3449229	1					
ANR	3449389	Label	case ANCHOR_PREC_READ :	2942:6:65107:65128	3449229	0	True				
ANR	3449390	Identifier	ANCHOR_PREC_READ		3449229	0					
ANR	3449391	Label	case ANCHOR_PREC_READ_NOT :	2943:6:65136:65161	3449229	1	True				
ANR	3449392	Identifier	ANCHOR_PREC_READ_NOT		3449229	0					
ANR	3449393	Label	case ANCHOR_LOOK_BEHIND :	2944:6:65169:65192	3449229	2	True				
ANR	3449394	Identifier	ANCHOR_LOOK_BEHIND		3449229	0					
ANR	3449395	Label	case ANCHOR_LOOK_BEHIND_NOT :	2945:6:65200:65227	3449229	3	True				
ANR	3449396	Identifier	ANCHOR_LOOK_BEHIND_NOT		3449229	0					
ANR	3449397	ExpressionStatement	"r = subexp_recursive_check_trav ( an -> target , env )"	2946:1:65230:65278	3449229	4	True				
ANR	3449398	AssignmentExpression	"r = subexp_recursive_check_trav ( an -> target , env )"		3449229	0		=			
ANR	3449399	Identifier	r		3449229	0					
ANR	3449400	CallExpression	"subexp_recursive_check_trav ( an -> target , env )"		3449229	1					
ANR	3449401	Callee	subexp_recursive_check_trav		3449229	0					
ANR	3449402	Identifier	subexp_recursive_check_trav		3449229	0					
ANR	3449403	ArgumentList	an -> target		3449229	1					
ANR	3449404	Argument	an -> target		3449229	0					
ANR	3449405	PtrMemberAccess	an -> target		3449229	0					
ANR	3449406	Identifier	an		3449229	0					
ANR	3449407	Identifier	target		3449229	1					
ANR	3449408	Argument	env		3449229	1					
ANR	3449409	Identifier	env		3449229	0					
ANR	3449410	BreakStatement	break ;	2947:1:65281:65286	3449229	5	True				
ANR	3449411	BreakStatement	break ;	2950:4:65306:65311	3449229	10	True				
ANR	3449412	Label	case NT_ENCLOSE :	2952:2:65316:65331	3449229	11	True				
ANR	3449413	Identifier	NT_ENCLOSE		3449229	0					
ANR	3449414	CompoundStatement		45:6:894:926	3449229	12					
ANR	3449415	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2954:6:65345:65377	3449229	0	True				
ANR	3449416	IdentifierDecl	* en = NENCLOSE ( node )		3449229	0					
ANR	3449417	IdentifierDeclType	EncloseNode *		3449229	0					
ANR	3449418	Identifier	en		3449229	1					
ANR	3449419	AssignmentExpression	* en = NENCLOSE ( node )		3449229	2		=			
ANR	3449420	Identifier	en		3449229	0					
ANR	3449421	CallExpression	NENCLOSE ( node )		3449229	1					
ANR	3449422	Callee	NENCLOSE		3449229	0					
ANR	3449423	Identifier	NENCLOSE		3449229	0					
ANR	3449424	ArgumentList	node		3449229	1					
ANR	3449425	Argument	node		3449229	0					
ANR	3449426	Identifier	node		3449229	0					
ANR	3449427	IfStatement	if ( ! IS_ENCLOSE_RECURSION ( en ) )		3449229	1					
ANR	3449428	Condition	! IS_ENCLOSE_RECURSION ( en )	2956:10:65390:65415	3449229	0	True				
ANR	3449429	UnaryOperationExpression	! IS_ENCLOSE_RECURSION ( en )		3449229	0					
ANR	3449430	UnaryOperator	!		3449229	0					
ANR	3449431	CallExpression	IS_ENCLOSE_RECURSION ( en )		3449229	1					
ANR	3449432	Callee	IS_ENCLOSE_RECURSION		3449229	0					
ANR	3449433	Identifier	IS_ENCLOSE_RECURSION		3449229	0					
ANR	3449434	ArgumentList	en		3449229	1					
ANR	3449435	Argument	en		3449229	0					
ANR	3449436	Identifier	en		3449229	0					
ANR	3449437	CompoundStatement		47:38:967:967	3449229	1					
ANR	3449438	IfStatement	if ( IS_ENCLOSE_CALLED ( en ) )		3449229	0					
ANR	3449439	Condition	IS_ENCLOSE_CALLED ( en )	2957:5:65425:65445	3449229	0	True				
ANR	3449440	CallExpression	IS_ENCLOSE_CALLED ( en )		3449229	0					
ANR	3449441	Callee	IS_ENCLOSE_CALLED		3449229	0					
ANR	3449442	Identifier	IS_ENCLOSE_CALLED		3449229	0					
ANR	3449443	ArgumentList	en		3449229	1					
ANR	3449444	Argument	en		3449229	0					
ANR	3449445	Identifier	en		3449229	0					
ANR	3449446	CompoundStatement		48:28:997:997	3449229	1					
ANR	3449447	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"	2958:3:65453:65488	3449229	0	True				
ANR	3449448	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"		3449229	0					
ANR	3449449	Callee	SET_ENCLOSE_STATUS		3449229	0					
ANR	3449450	Identifier	SET_ENCLOSE_STATUS		3449229	0					
ANR	3449451	ArgumentList	node		3449229	1					
ANR	3449452	Argument	node		3449229	0					
ANR	3449453	Identifier	node		3449229	0					
ANR	3449454	Argument	NST_MARK1		3449229	1					
ANR	3449455	Identifier	NST_MARK1		3449229	0					
ANR	3449456	ExpressionStatement	r = subexp_recursive_check ( en -> target )	2959:3:65493:65531	3449229	1	True				
ANR	3449457	AssignmentExpression	r = subexp_recursive_check ( en -> target )		3449229	0		=			
ANR	3449458	Identifier	r		3449229	0					
ANR	3449459	CallExpression	subexp_recursive_check ( en -> target )		3449229	1					
ANR	3449460	Callee	subexp_recursive_check		3449229	0					
ANR	3449461	Identifier	subexp_recursive_check		3449229	0					
ANR	3449462	ArgumentList	en -> target		3449229	1					
ANR	3449463	Argument	en -> target		3449229	0					
ANR	3449464	PtrMemberAccess	en -> target		3449229	0					
ANR	3449465	Identifier	en		3449229	0					
ANR	3449466	Identifier	target		3449229	1					
ANR	3449467	IfStatement	if ( r != 0 )		3449229	2					
ANR	3449468	Condition	r != 0	2960:7:65540:65545	3449229	0	True				
ANR	3449469	EqualityExpression	r != 0		3449229	0		!=			
ANR	3449470	Identifier	r		3449229	0					
ANR	3449471	PrimaryExpression	0		3449229	1					
ANR	3449472	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_RECURSION )"	2960:15:65548:65587	3449229	1	True				
ANR	3449473	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_RECURSION )"		3449229	0					
ANR	3449474	Callee	SET_ENCLOSE_STATUS		3449229	0					
ANR	3449475	Identifier	SET_ENCLOSE_STATUS		3449229	0					
ANR	3449476	ArgumentList	node		3449229	1					
ANR	3449477	Argument	node		3449229	0					
ANR	3449478	Identifier	node		3449229	0					
ANR	3449479	Argument	NST_RECURSION		3449229	1					
ANR	3449480	Identifier	NST_RECURSION		3449229	0					
ANR	3449481	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"	2961:3:65592:65629	3449229	3	True				
ANR	3449482	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"		3449229	0					
ANR	3449483	Callee	CLEAR_ENCLOSE_STATUS		3449229	0					
ANR	3449484	Identifier	CLEAR_ENCLOSE_STATUS		3449229	0					
ANR	3449485	ArgumentList	node		3449229	1					
ANR	3449486	Argument	node		3449229	0					
ANR	3449487	Identifier	node		3449229	0					
ANR	3449488	Argument	NST_MARK1		3449229	1					
ANR	3449489	Identifier	NST_MARK1		3449229	0					
ANR	3449490	ExpressionStatement	"r = subexp_recursive_check_trav ( en -> target , env )"	2964:6:65648:65696	3449229	2	True				
ANR	3449491	AssignmentExpression	"r = subexp_recursive_check_trav ( en -> target , env )"		3449229	0		=			
ANR	3449492	Identifier	r		3449229	0					
ANR	3449493	CallExpression	"subexp_recursive_check_trav ( en -> target , env )"		3449229	1					
ANR	3449494	Callee	subexp_recursive_check_trav		3449229	0					
ANR	3449495	Identifier	subexp_recursive_check_trav		3449229	0					
ANR	3449496	ArgumentList	en -> target		3449229	1					
ANR	3449497	Argument	en -> target		3449229	0					
ANR	3449498	PtrMemberAccess	en -> target		3449229	0					
ANR	3449499	Identifier	en		3449229	0					
ANR	3449500	Identifier	target		3449229	1					
ANR	3449501	Argument	env		3449229	1					
ANR	3449502	Identifier	env		3449229	0					
ANR	3449503	IfStatement	if ( IS_ENCLOSE_CALLED ( en ) )		3449229	3					
ANR	3449504	Condition	IS_ENCLOSE_CALLED ( en )	2965:10:65708:65728	3449229	0	True				
ANR	3449505	CallExpression	IS_ENCLOSE_CALLED ( en )		3449229	0					
ANR	3449506	Callee	IS_ENCLOSE_CALLED		3449229	0					
ANR	3449507	Identifier	IS_ENCLOSE_CALLED		3449229	0					
ANR	3449508	ArgumentList	en		3449229	1					
ANR	3449509	Argument	en		3449229	0					
ANR	3449510	Identifier	en		3449229	0					
ANR	3449511	ExpressionStatement	r |= FOUND_CALLED_NODE	2966:1:65732:65754	3449229	1	True				
ANR	3449512	AssignmentExpression	r |= FOUND_CALLED_NODE		3449229	0		|=			
ANR	3449513	Identifier	r		3449229	0					
ANR	3449514	Identifier	FOUND_CALLED_NODE		3449229	1					
ANR	3449515	BreakStatement	break ;	2968:4:65766:65771	3449229	13	True				
ANR	3449516	Label	default :	2970:2:65776:65783	3449229	14	True				
ANR	3449517	Identifier	default		3449229	0					
ANR	3449518	BreakStatement	break ;	2971:4:65789:65794	3449229	15	True				
ANR	3449519	ReturnStatement	return r ;	2974:2:65803:65811	3449229	7	True				
ANR	3449520	Identifier	r		3449229	0					
ANR	3449521	ReturnType	static int		3449229	1					
ANR	3449522	Identifier	subexp_recursive_check_trav		3449229	2					
ANR	3449523	ParameterList	"Node * node , ScanEnv * env"		3449229	3					
ANR	3449524	Parameter	Node * node	2909:28:64424:64433	3449229	0	True				
ANR	3449525	ParameterType	Node *		3449229	0					
ANR	3449526	Identifier	node		3449229	1					
ANR	3449527	Parameter	ScanEnv * env	2909:40:64436:64447	3449229	1	True				
ANR	3449528	ParameterType	ScanEnv *		3449229	0					
ANR	3449529	Identifier	env		3449229	1					
ANR	3449530	CFGEntryNode	ENTRY		3449229		True				
ANR	3449531	CFGExitNode	EXIT		3449229		True				
ANR	3449532	Symbol	NQTFR ( node ) -> target		3449229						
ANR	3449533	Symbol	IS_NOT_NULL		3449229						
ANR	3449534	Symbol	NCAR		3449229						
ANR	3449535	Symbol	an -> type		3449229						
ANR	3449536	Symbol	type		3449229						
ANR	3449537	Symbol	NQTFR		3449229						
ANR	3449538	Symbol	* en		3449229						
ANR	3449539	Symbol	subexp_recursive_check		3449229						
ANR	3449540	Symbol	* NQTFR		3449229						
ANR	3449541	Symbol	NENCLOSE		3449229						
ANR	3449542	Symbol	NST_RECURSION		3449229						
ANR	3449543	Symbol	FOUND_CALLED_NODE		3449229						
ANR	3449544	Symbol	ret		3449229						
ANR	3449545	Symbol	NQTFR ( node ) -> upper		3449229						
ANR	3449546	Symbol	NCDR		3449229						
ANR	3449547	Symbol	IS_ENCLOSE_CALLED		3449229						
ANR	3449548	Symbol	en		3449229						
ANR	3449549	Symbol	NQTFR ( node ) -> is_refered		3449229						
ANR	3449550	Symbol	NST_MARK1		3449229						
ANR	3449551	Symbol	env		3449229						
ANR	3449552	Symbol	an		3449229						
ANR	3449553	Symbol	* an		3449229						
ANR	3449554	Symbol	node		3449229						
ANR	3449555	Symbol	r		3449229						
ANR	3449556	Symbol	an -> target		3449229						
ANR	3449557	Symbol	en -> target		3449229						
ANR	3449558	Symbol	NANCHOR		3449229						
ANR	3449559	Symbol	NTYPE		3449229						
ANR	3449560	Symbol	IS_ENCLOSE_RECURSION		3449229						
ANR	3449561	Symbol	subexp_recursive_check_trav		3449229						
ANR	3449562	Function	setup_subexp_call	2977:0:65816:68295							
ANR	3449563	FunctionDef	"setup_subexp_call (Node * node , ScanEnv * env)"		3449562	0					
ANR	3449564	CompoundStatement		2979:0:65871:68295	3449562	0					
ANR	3449565	IdentifierDeclStatement	int type ;	2980:2:65875:65883	3449562	0	True				
ANR	3449566	IdentifierDecl	type		3449562	0					
ANR	3449567	IdentifierDeclType	int		3449562	0					
ANR	3449568	Identifier	type		3449562	1					
ANR	3449569	IdentifierDeclStatement	int r = 0 ;	2981:2:65887:65896	3449562	1	True				
ANR	3449570	IdentifierDecl	r = 0		3449562	0					
ANR	3449571	IdentifierDeclType	int		3449562	0					
ANR	3449572	Identifier	r		3449562	1					
ANR	3449573	AssignmentExpression	r = 0		3449562	2		=			
ANR	3449574	Identifier	r		3449562	0					
ANR	3449575	PrimaryExpression	0		3449562	1					
ANR	3449576	ExpressionStatement	type = NTYPE ( node )	2983:2:65901:65919	3449562	2	True				
ANR	3449577	AssignmentExpression	type = NTYPE ( node )		3449562	0		=			
ANR	3449578	Identifier	type		3449562	0					
ANR	3449579	CallExpression	NTYPE ( node )		3449562	1					
ANR	3449580	Callee	NTYPE		3449562	0					
ANR	3449581	Identifier	NTYPE		3449562	0					
ANR	3449582	ArgumentList	node		3449562	1					
ANR	3449583	Argument	node		3449562	0					
ANR	3449584	Identifier	node		3449562	0					
ANR	3449585	SwitchStatement	switch ( type )		3449562	3					
ANR	3449586	Condition	type	2984:10:65931:65934	3449562	0	True				
ANR	3449587	Identifier	type		3449562	0					
ANR	3449588	CompoundStatement		6:16:65:65	3449562	1					
ANR	3449589	Label	case NT_LIST :	2985:2:65941:65953	3449562	0	True				
ANR	3449590	Identifier	NT_LIST		3449562	0					
ANR	3449591	DoStatement	do		3449562	1					
ANR	3449592	CompoundStatement		8:7:90:90	3449562	0					
ANR	3449593	ExpressionStatement	"r = setup_subexp_call ( NCAR ( node ) , env )"	2987:6:65970:66008	3449562	0	True				
ANR	3449594	AssignmentExpression	"r = setup_subexp_call ( NCAR ( node ) , env )"		3449562	0		=			
ANR	3449595	Identifier	r		3449562	0					
ANR	3449596	CallExpression	"setup_subexp_call ( NCAR ( node ) , env )"		3449562	1					
ANR	3449597	Callee	setup_subexp_call		3449562	0					
ANR	3449598	Identifier	setup_subexp_call		3449562	0					
ANR	3449599	ArgumentList	NCAR ( node )		3449562	1					
ANR	3449600	Argument	NCAR ( node )		3449562	0					
ANR	3449601	CallExpression	NCAR ( node )		3449562	0					
ANR	3449602	Callee	NCAR		3449562	0					
ANR	3449603	Identifier	NCAR		3449562	0					
ANR	3449604	ArgumentList	node		3449562	1					
ANR	3449605	Argument	node		3449562	0					
ANR	3449606	Identifier	node		3449562	0					
ANR	3449607	Argument	env		3449562	1					
ANR	3449608	Identifier	env		3449562	0					
ANR	3449609	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2988:13:66023:66062	3449562	1	True				
ANR	3449610	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3449562	0		&&			
ANR	3449611	EqualityExpression	r == 0		3449562	0		==			
ANR	3449612	Identifier	r		3449562	0					
ANR	3449613	PrimaryExpression	0		3449562	1					
ANR	3449614	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3449562	1					
ANR	3449615	Callee	IS_NOT_NULL		3449562	0					
ANR	3449616	Identifier	IS_NOT_NULL		3449562	0					
ANR	3449617	ArgumentList	node = NCDR ( node )		3449562	1					
ANR	3449618	Argument	node = NCDR ( node )		3449562	0					
ANR	3449619	AssignmentExpression	node = NCDR ( node )		3449562	0		=			
ANR	3449620	Identifier	node		3449562	0					
ANR	3449621	CallExpression	NCDR ( node )		3449562	1					
ANR	3449622	Callee	NCDR		3449562	0					
ANR	3449623	Identifier	NCDR		3449562	0					
ANR	3449624	ArgumentList	node		3449562	1					
ANR	3449625	Argument	node		3449562	0					
ANR	3449626	Identifier	node		3449562	0					
ANR	3449627	BreakStatement	break ;	2989:4:66070:66075	3449562	2	True				
ANR	3449628	Label	case NT_ALT :	2991:2:66080:66091	3449562	3	True				
ANR	3449629	Identifier	NT_ALT		3449562	0					
ANR	3449630	DoStatement	do		3449562	4					
ANR	3449631	CompoundStatement		14:7:228:228	3449562	0					
ANR	3449632	ExpressionStatement	"r = setup_subexp_call ( NCAR ( node ) , env )"	2993:6:66108:66146	3449562	0	True				
ANR	3449633	AssignmentExpression	"r = setup_subexp_call ( NCAR ( node ) , env )"		3449562	0		=			
ANR	3449634	Identifier	r		3449562	0					
ANR	3449635	CallExpression	"setup_subexp_call ( NCAR ( node ) , env )"		3449562	1					
ANR	3449636	Callee	setup_subexp_call		3449562	0					
ANR	3449637	Identifier	setup_subexp_call		3449562	0					
ANR	3449638	ArgumentList	NCAR ( node )		3449562	1					
ANR	3449639	Argument	NCAR ( node )		3449562	0					
ANR	3449640	CallExpression	NCAR ( node )		3449562	0					
ANR	3449641	Callee	NCAR		3449562	0					
ANR	3449642	Identifier	NCAR		3449562	0					
ANR	3449643	ArgumentList	node		3449562	1					
ANR	3449644	Argument	node		3449562	0					
ANR	3449645	Identifier	node		3449562	0					
ANR	3449646	Argument	env		3449562	1					
ANR	3449647	Identifier	env		3449562	0					
ANR	3449648	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2994:13:66161:66200	3449562	1	True				
ANR	3449649	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3449562	0		&&			
ANR	3449650	EqualityExpression	r == 0		3449562	0		==			
ANR	3449651	Identifier	r		3449562	0					
ANR	3449652	PrimaryExpression	0		3449562	1					
ANR	3449653	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3449562	1					
ANR	3449654	Callee	IS_NOT_NULL		3449562	0					
ANR	3449655	Identifier	IS_NOT_NULL		3449562	0					
ANR	3449656	ArgumentList	node = NCDR ( node )		3449562	1					
ANR	3449657	Argument	node = NCDR ( node )		3449562	0					
ANR	3449658	AssignmentExpression	node = NCDR ( node )		3449562	0		=			
ANR	3449659	Identifier	node		3449562	0					
ANR	3449660	CallExpression	NCDR ( node )		3449562	1					
ANR	3449661	Callee	NCDR		3449562	0					
ANR	3449662	Identifier	NCDR		3449562	0					
ANR	3449663	ArgumentList	node		3449562	1					
ANR	3449664	Argument	node		3449562	0					
ANR	3449665	Identifier	node		3449562	0					
ANR	3449666	BreakStatement	break ;	2995:4:66208:66213	3449562	5	True				
ANR	3449667	Label	case NT_QTFR :	2997:2:66218:66230	3449562	6	True				
ANR	3449668	Identifier	NT_QTFR		3449562	0					
ANR	3449669	ExpressionStatement	"r = setup_subexp_call ( NQTFR ( node ) -> target , env )"	2998:4:66236:66283	3449562	7	True				
ANR	3449670	AssignmentExpression	"r = setup_subexp_call ( NQTFR ( node ) -> target , env )"		3449562	0		=			
ANR	3449671	Identifier	r		3449562	0					
ANR	3449672	CallExpression	"setup_subexp_call ( NQTFR ( node ) -> target , env )"		3449562	1					
ANR	3449673	Callee	setup_subexp_call		3449562	0					
ANR	3449674	Identifier	setup_subexp_call		3449562	0					
ANR	3449675	ArgumentList	NQTFR ( node ) -> target		3449562	1					
ANR	3449676	Argument	NQTFR ( node ) -> target		3449562	0					
ANR	3449677	PtrMemberAccess	NQTFR ( node ) -> target		3449562	0					
ANR	3449678	CallExpression	NQTFR ( node )		3449562	0					
ANR	3449679	Callee	NQTFR		3449562	0					
ANR	3449680	Identifier	NQTFR		3449562	0					
ANR	3449681	ArgumentList	node		3449562	1					
ANR	3449682	Argument	node		3449562	0					
ANR	3449683	Identifier	node		3449562	0					
ANR	3449684	Identifier	target		3449562	1					
ANR	3449685	Argument	env		3449562	1					
ANR	3449686	Identifier	env		3449562	0					
ANR	3449687	BreakStatement	break ;	2999:4:66289:66294	3449562	8	True				
ANR	3449688	Label	case NT_ENCLOSE :	3000:2:66298:66313	3449562	9	True				
ANR	3449689	Identifier	NT_ENCLOSE		3449562	0					
ANR	3449690	ExpressionStatement	"r = setup_subexp_call ( NENCLOSE ( node ) -> target , env )"	3001:4:66319:66369	3449562	10	True				
ANR	3449691	AssignmentExpression	"r = setup_subexp_call ( NENCLOSE ( node ) -> target , env )"		3449562	0		=			
ANR	3449692	Identifier	r		3449562	0					
ANR	3449693	CallExpression	"setup_subexp_call ( NENCLOSE ( node ) -> target , env )"		3449562	1					
ANR	3449694	Callee	setup_subexp_call		3449562	0					
ANR	3449695	Identifier	setup_subexp_call		3449562	0					
ANR	3449696	ArgumentList	NENCLOSE ( node ) -> target		3449562	1					
ANR	3449697	Argument	NENCLOSE ( node ) -> target		3449562	0					
ANR	3449698	PtrMemberAccess	NENCLOSE ( node ) -> target		3449562	0					
ANR	3449699	CallExpression	NENCLOSE ( node )		3449562	0					
ANR	3449700	Callee	NENCLOSE		3449562	0					
ANR	3449701	Identifier	NENCLOSE		3449562	0					
ANR	3449702	ArgumentList	node		3449562	1					
ANR	3449703	Argument	node		3449562	0					
ANR	3449704	Identifier	node		3449562	0					
ANR	3449705	Identifier	target		3449562	1					
ANR	3449706	Argument	env		3449562	1					
ANR	3449707	Identifier	env		3449562	0					
ANR	3449708	BreakStatement	break ;	3002:4:66375:66380	3449562	11	True				
ANR	3449709	Label	case NT_CALL :	3004:2:66385:66397	3449562	12	True				
ANR	3449710	Identifier	NT_CALL		3449562	0					
ANR	3449711	CompoundStatement		29:6:573:610	3449562	13					
ANR	3449712	IdentifierDeclStatement	CallNode * cn = NCALL ( node ) ;	3006:6:66411:66437	3449562	0	True				
ANR	3449713	IdentifierDecl	* cn = NCALL ( node )		3449562	0					
ANR	3449714	IdentifierDeclType	CallNode *		3449562	0					
ANR	3449715	Identifier	cn		3449562	1					
ANR	3449716	AssignmentExpression	* cn = NCALL ( node )		3449562	2		=			
ANR	3449717	Identifier	cn		3449562	0					
ANR	3449718	CallExpression	NCALL ( node )		3449562	1					
ANR	3449719	Callee	NCALL		3449562	0					
ANR	3449720	Identifier	NCALL		3449562	0					
ANR	3449721	ArgumentList	node		3449562	1					
ANR	3449722	Argument	node		3449562	0					
ANR	3449723	Identifier	node		3449562	0					
ANR	3449724	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	3007:6:66445:66482	3449562	1	True				
ANR	3449725	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		3449562	0					
ANR	3449726	IdentifierDeclType	Node * *		3449562	0					
ANR	3449727	Identifier	nodes		3449562	1					
ANR	3449728	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		3449562	2		=			
ANR	3449729	Identifier	nodes		3449562	0					
ANR	3449730	CallExpression	SCANENV_MEM_NODES ( env )		3449562	1					
ANR	3449731	Callee	SCANENV_MEM_NODES		3449562	0					
ANR	3449732	Identifier	SCANENV_MEM_NODES		3449562	0					
ANR	3449733	ArgumentList	env		3449562	1					
ANR	3449734	Argument	env		3449562	0					
ANR	3449735	Identifier	env		3449562	0					
ANR	3449736	IfStatement	if ( cn -> group_num != 0 )		3449562	2					
ANR	3449737	Condition	cn -> group_num != 0	3009:10:66495:66512	3449562	0	True				
ANR	3449738	EqualityExpression	cn -> group_num != 0		3449562	0		!=			
ANR	3449739	PtrMemberAccess	cn -> group_num		3449562	0					
ANR	3449740	Identifier	cn		3449562	0					
ANR	3449741	Identifier	group_num		3449562	1					
ANR	3449742	PrimaryExpression	0		3449562	1					
ANR	3449743	CompoundStatement		32:1:646:670	3449562	1					
ANR	3449744	IdentifierDeclStatement	int gnum = cn -> group_num ;	3010:1:66518:66542	3449562	0	True				
ANR	3449745	IdentifierDecl	gnum = cn -> group_num		3449562	0					
ANR	3449746	IdentifierDeclType	int		3449562	0					
ANR	3449747	Identifier	gnum		3449562	1					
ANR	3449748	AssignmentExpression	gnum = cn -> group_num		3449562	2		=			
ANR	3449749	Identifier	gnum		3449562	0					
ANR	3449750	PtrMemberAccess	cn -> group_num		3449562	1					
ANR	3449751	Identifier	cn		3449562	0					
ANR	3449752	Identifier	group_num		3449562	1					
ANR	3449753	IfStatement	"if ( env -> num_named > 0 && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP ) )"		3449562	1					
ANR	3449754	Condition	"env -> num_named > 0 && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"	3013:5:66573:66726	3449562	0	True				
ANR	3449755	AndExpression	"env -> num_named > 0 && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		3449562	0		&&			
ANR	3449756	RelationalExpression	env -> num_named > 0		3449562	0		>			
ANR	3449757	PtrMemberAccess	env -> num_named		3449562	0					
ANR	3449758	Identifier	env		3449562	0					
ANR	3449759	Identifier	num_named		3449562	1					
ANR	3449760	PrimaryExpression	0		3449562	1					
ANR	3449761	AndExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		3449562	1		&&			
ANR	3449762	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP )"		3449562	0					
ANR	3449763	Callee	IS_SYNTAX_BV		3449562	0					
ANR	3449764	Identifier	IS_SYNTAX_BV		3449562	0					
ANR	3449765	ArgumentList	env -> syntax		3449562	1					
ANR	3449766	Argument	env -> syntax		3449562	0					
ANR	3449767	PtrMemberAccess	env -> syntax		3449562	0					
ANR	3449768	Identifier	env		3449562	0					
ANR	3449769	Identifier	syntax		3449562	1					
ANR	3449770	Argument	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3449562	1					
ANR	3449771	Identifier	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3449562	0					
ANR	3449772	UnaryOperationExpression	"! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		3449562	1					
ANR	3449773	UnaryOperator	!		3449562	0					
ANR	3449774	CallExpression	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		3449562	1					
ANR	3449775	Callee	ONIG_IS_OPTION_ON		3449562	0					
ANR	3449776	Identifier	ONIG_IS_OPTION_ON		3449562	0					
ANR	3449777	ArgumentList	env -> option		3449562	1					
ANR	3449778	Argument	env -> option		3449562	0					
ANR	3449779	PtrMemberAccess	env -> option		3449562	0					
ANR	3449780	Identifier	env		3449562	0					
ANR	3449781	Identifier	option		3449562	1					
ANR	3449782	Argument	ONIG_OPTION_CAPTURE_GROUP		3449562	1					
ANR	3449783	Identifier	ONIG_OPTION_CAPTURE_GROUP		3449562	0					
ANR	3449784	CompoundStatement		37:65:857:857	3449562	1					
ANR	3449785	ReturnStatement	return ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED ;	3016:3:66734:66785	3449562	0	True				
ANR	3449786	Identifier	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		3449562	0					
ANR	3449787	IfStatement	if ( gnum > env -> num_mem )		3449562	2					
ANR	3449788	Condition	gnum > env -> num_mem	3019:5:66802:66820	3449562	0	True				
ANR	3449789	RelationalExpression	gnum > env -> num_mem		3449562	0		>			
ANR	3449790	Identifier	gnum		3449562	0					
ANR	3449791	PtrMemberAccess	env -> num_mem		3449562	1					
ANR	3449792	Identifier	env		3449562	0					
ANR	3449793	Identifier	num_mem		3449562	1					
ANR	3449794	CompoundStatement		41:26:951:951	3449562	1					
ANR	3449795	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_GROUP_REFERENCE , cn -> name , cn -> name_end )"	3020:3:66828:66925	3449562	0	True				
ANR	3449796	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_GROUP_REFERENCE , cn -> name , cn -> name_end )"		3449562	0					
ANR	3449797	Callee	onig_scan_env_set_error_string		3449562	0					
ANR	3449798	Identifier	onig_scan_env_set_error_string		3449562	0					
ANR	3449799	ArgumentList	env		3449562	1					
ANR	3449800	Argument	env		3449562	0					
ANR	3449801	Identifier	env		3449562	0					
ANR	3449802	Argument	ONIGERR_UNDEFINED_GROUP_REFERENCE		3449562	1					
ANR	3449803	Identifier	ONIGERR_UNDEFINED_GROUP_REFERENCE		3449562	0					
ANR	3449804	Argument	cn -> name		3449562	2					
ANR	3449805	PtrMemberAccess	cn -> name		3449562	0					
ANR	3449806	Identifier	cn		3449562	0					
ANR	3449807	Identifier	name		3449562	1					
ANR	3449808	Argument	cn -> name_end		3449562	3					
ANR	3449809	PtrMemberAccess	cn -> name_end		3449562	0					
ANR	3449810	Identifier	cn		3449562	0					
ANR	3449811	Identifier	name_end		3449562	1					
ANR	3449812	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_REFERENCE ;	3022:3:66930:66970	3449562	1	True				
ANR	3449813	Identifier	ONIGERR_UNDEFINED_GROUP_REFERENCE		3449562	0					
ANR	3449814	Label	set_call_attr :	3026:6:67005:67018	3449562	3	True				
ANR	3449815	Identifier	set_call_attr		3449562	0					
ANR	3449816	ExpressionStatement	cn -> target = nodes [ cn -> group_num ]	3028:1:67028:67061	3449562	4	True				
ANR	3449817	AssignmentExpression	cn -> target = nodes [ cn -> group_num ]		3449562	0		=			
ANR	3449818	PtrMemberAccess	cn -> target		3449562	0					
ANR	3449819	Identifier	cn		3449562	0					
ANR	3449820	Identifier	target		3449562	1					
ANR	3449821	ArrayIndexing	nodes [ cn -> group_num ]		3449562	1					
ANR	3449822	Identifier	nodes		3449562	0					
ANR	3449823	PtrMemberAccess	cn -> group_num		3449562	1					
ANR	3449824	Identifier	cn		3449562	0					
ANR	3449825	Identifier	group_num		3449562	1					
ANR	3449826	IfStatement	if ( IS_NULL ( cn -> target ) )		3449562	5					
ANR	3449827	Condition	IS_NULL ( cn -> target )	3029:5:67068:67086	3449562	0	True				
ANR	3449828	CallExpression	IS_NULL ( cn -> target )		3449562	0					
ANR	3449829	Callee	IS_NULL		3449562	0					
ANR	3449830	Identifier	IS_NULL		3449562	0					
ANR	3449831	ArgumentList	cn -> target		3449562	1					
ANR	3449832	Argument	cn -> target		3449562	0					
ANR	3449833	PtrMemberAccess	cn -> target		3449562	0					
ANR	3449834	Identifier	cn		3449562	0					
ANR	3449835	Identifier	target		3449562	1					
ANR	3449836	CompoundStatement		51:26:1217:1217	3449562	1					
ANR	3449837	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"	3030:3:67094:67190	3449562	0	True				
ANR	3449838	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"		3449562	0					
ANR	3449839	Callee	onig_scan_env_set_error_string		3449562	0					
ANR	3449840	Identifier	onig_scan_env_set_error_string		3449562	0					
ANR	3449841	ArgumentList	env		3449562	1					
ANR	3449842	Argument	env		3449562	0					
ANR	3449843	Identifier	env		3449562	0					
ANR	3449844	Argument	ONIGERR_UNDEFINED_NAME_REFERENCE		3449562	1					
ANR	3449845	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		3449562	0					
ANR	3449846	Argument	cn -> name		3449562	2					
ANR	3449847	PtrMemberAccess	cn -> name		3449562	0					
ANR	3449848	Identifier	cn		3449562	0					
ANR	3449849	Identifier	name		3449562	1					
ANR	3449850	Argument	cn -> name_end		3449562	3					
ANR	3449851	PtrMemberAccess	cn -> name_end		3449562	0					
ANR	3449852	Identifier	cn		3449562	0					
ANR	3449853	Identifier	name_end		3449562	1					
ANR	3449854	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	3032:3:67195:67234	3449562	1	True				
ANR	3449855	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		3449562	0					
ANR	3449856	ExpressionStatement	"SET_ENCLOSE_STATUS ( cn -> target , NST_CALLED )"	3034:1:67240:67282	3449562	6	True				
ANR	3449857	CallExpression	"SET_ENCLOSE_STATUS ( cn -> target , NST_CALLED )"		3449562	0					
ANR	3449858	Callee	SET_ENCLOSE_STATUS		3449562	0					
ANR	3449859	Identifier	SET_ENCLOSE_STATUS		3449562	0					
ANR	3449860	ArgumentList	cn -> target		3449562	1					
ANR	3449861	Argument	cn -> target		3449562	0					
ANR	3449862	PtrMemberAccess	cn -> target		3449562	0					
ANR	3449863	Identifier	cn		3449562	0					
ANR	3449864	Identifier	target		3449562	1					
ANR	3449865	Argument	NST_CALLED		3449562	1					
ANR	3449866	Identifier	NST_CALLED		3449562	0					
ANR	3449867	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_start , cn -> group_num )"	3035:1:67285:67335	3449562	7	True				
ANR	3449868	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_start , cn -> group_num )"		3449562	0					
ANR	3449869	Callee	BIT_STATUS_ON_AT		3449562	0					
ANR	3449870	Identifier	BIT_STATUS_ON_AT		3449562	0					
ANR	3449871	ArgumentList	env -> bt_mem_start		3449562	1					
ANR	3449872	Argument	env -> bt_mem_start		3449562	0					
ANR	3449873	PtrMemberAccess	env -> bt_mem_start		3449562	0					
ANR	3449874	Identifier	env		3449562	0					
ANR	3449875	Identifier	bt_mem_start		3449562	1					
ANR	3449876	Argument	cn -> group_num		3449562	1					
ANR	3449877	PtrMemberAccess	cn -> group_num		3449562	0					
ANR	3449878	Identifier	cn		3449562	0					
ANR	3449879	Identifier	group_num		3449562	1					
ANR	3449880	ExpressionStatement	cn -> unset_addr_list = env -> unset_addr_list	3036:1:67338:67380	3449562	8	True				
ANR	3449881	AssignmentExpression	cn -> unset_addr_list = env -> unset_addr_list		3449562	0		=			
ANR	3449882	PtrMemberAccess	cn -> unset_addr_list		3449562	0					
ANR	3449883	Identifier	cn		3449562	0					
ANR	3449884	Identifier	unset_addr_list		3449562	1					
ANR	3449885	PtrMemberAccess	env -> unset_addr_list		3449562	1					
ANR	3449886	Identifier	env		3449562	0					
ANR	3449887	Identifier	unset_addr_list		3449562	1					
ANR	3449888	ElseStatement	else		3449562	0					
ANR	3449889	CompoundStatement		64:1:1568:1651	3449562	0					
ANR	3449890	IdentifierDeclStatement	int * refs ;	3040:1:67427:67436	3449562	0	True				
ANR	3449891	IdentifierDecl	* refs		3449562	0					
ANR	3449892	IdentifierDeclType	int *		3449562	0					
ANR	3449893	Identifier	refs		3449562	1					
ANR	3449894	IdentifierDeclStatement	"int n = onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs ) ;"	3042:1:67440:67523	3449562	1	True				
ANR	3449895	IdentifierDecl	"n = onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs )"		3449562	0					
ANR	3449896	IdentifierDeclType	int		3449562	0					
ANR	3449897	Identifier	n		3449562	1					
ANR	3449898	AssignmentExpression	"n = onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs )"		3449562	2		=			
ANR	3449899	Identifier	n		3449562	0					
ANR	3449900	CallExpression	"onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs )"		3449562	1					
ANR	3449901	Callee	onig_name_to_group_numbers		3449562	0					
ANR	3449902	Identifier	onig_name_to_group_numbers		3449562	0					
ANR	3449903	ArgumentList	env -> reg		3449562	1					
ANR	3449904	Argument	env -> reg		3449562	0					
ANR	3449905	PtrMemberAccess	env -> reg		3449562	0					
ANR	3449906	Identifier	env		3449562	0					
ANR	3449907	Identifier	reg		3449562	1					
ANR	3449908	Argument	cn -> name		3449562	1					
ANR	3449909	PtrMemberAccess	cn -> name		3449562	0					
ANR	3449910	Identifier	cn		3449562	0					
ANR	3449911	Identifier	name		3449562	1					
ANR	3449912	Argument	cn -> name_end		3449562	2					
ANR	3449913	PtrMemberAccess	cn -> name_end		3449562	0					
ANR	3449914	Identifier	cn		3449562	0					
ANR	3449915	Identifier	name_end		3449562	1					
ANR	3449916	Argument	& refs		3449562	3					
ANR	3449917	UnaryOperationExpression	& refs		3449562	0					
ANR	3449918	UnaryOperator	&		3449562	0					
ANR	3449919	Identifier	refs		3449562	1					
ANR	3449920	IfStatement	if ( n <= 0 )		3449562	2					
ANR	3449921	Condition	n <= 0	3044:5:67530:67535	3449562	0	True				
ANR	3449922	RelationalExpression	n <= 0		3449562	0		<=			
ANR	3449923	Identifier	n		3449562	0					
ANR	3449924	PrimaryExpression	0		3449562	1					
ANR	3449925	CompoundStatement		66:13:1666:1666	3449562	1					
ANR	3449926	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"	3045:3:67543:67639	3449562	0	True				
ANR	3449927	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"		3449562	0					
ANR	3449928	Callee	onig_scan_env_set_error_string		3449562	0					
ANR	3449929	Identifier	onig_scan_env_set_error_string		3449562	0					
ANR	3449930	ArgumentList	env		3449562	1					
ANR	3449931	Argument	env		3449562	0					
ANR	3449932	Identifier	env		3449562	0					
ANR	3449933	Argument	ONIGERR_UNDEFINED_NAME_REFERENCE		3449562	1					
ANR	3449934	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		3449562	0					
ANR	3449935	Argument	cn -> name		3449562	2					
ANR	3449936	PtrMemberAccess	cn -> name		3449562	0					
ANR	3449937	Identifier	cn		3449562	0					
ANR	3449938	Identifier	name		3449562	1					
ANR	3449939	Argument	cn -> name_end		3449562	3					
ANR	3449940	PtrMemberAccess	cn -> name_end		3449562	0					
ANR	3449941	Identifier	cn		3449562	0					
ANR	3449942	Identifier	name_end		3449562	1					
ANR	3449943	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	3047:3:67644:67683	3449562	1	True				
ANR	3449944	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		3449562	0					
ANR	3449945	ElseStatement	else		3449562	0					
ANR	3449946	IfStatement	if ( n > 1 )		3449562	0					
ANR	3449947	Condition	n > 1	3049:10:67698:67702	3449562	0	True				
ANR	3449948	RelationalExpression	n > 1		3449562	0		>			
ANR	3449949	Identifier	n		3449562	0					
ANR	3449950	PrimaryExpression	1		3449562	1					
ANR	3449951	CompoundStatement		71:17:1833:1833	3449562	1					
ANR	3449952	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL , cn -> name , cn -> name_end )"	3050:3:67710:67814	3449562	0	True				
ANR	3449953	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL , cn -> name , cn -> name_end )"		3449562	0					
ANR	3449954	Callee	onig_scan_env_set_error_string		3449562	0					
ANR	3449955	Identifier	onig_scan_env_set_error_string		3449562	0					
ANR	3449956	ArgumentList	env		3449562	1					
ANR	3449957	Argument	env		3449562	0					
ANR	3449958	Identifier	env		3449562	0					
ANR	3449959	Argument	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		3449562	1					
ANR	3449960	Identifier	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		3449562	0					
ANR	3449961	Argument	cn -> name		3449562	2					
ANR	3449962	PtrMemberAccess	cn -> name		3449562	0					
ANR	3449963	Identifier	cn		3449562	0					
ANR	3449964	Identifier	name		3449562	1					
ANR	3449965	Argument	cn -> name_end		3449562	3					
ANR	3449966	PtrMemberAccess	cn -> name_end		3449562	0					
ANR	3449967	Identifier	cn		3449562	0					
ANR	3449968	Identifier	name_end		3449562	1					
ANR	3449969	ReturnStatement	return ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL ;	3052:3:67819:67864	3449562	1	True				
ANR	3449970	Identifier	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		3449562	0					
ANR	3449971	ElseStatement	else		3449562	0					
ANR	3449972	CompoundStatement		76:6:2003:2003	3449562	0					
ANR	3449973	ExpressionStatement	cn -> group_num = refs [ 0 ]	3055:3:67880:67903	3449562	0	True				
ANR	3449974	AssignmentExpression	cn -> group_num = refs [ 0 ]		3449562	0		=			
ANR	3449975	PtrMemberAccess	cn -> group_num		3449562	0					
ANR	3449976	Identifier	cn		3449562	0					
ANR	3449977	Identifier	group_num		3449562	1					
ANR	3449978	ArrayIndexing	refs [ 0 ]		3449562	1					
ANR	3449979	Identifier	refs		3449562	0					
ANR	3449980	PrimaryExpression	0		3449562	1					
ANR	3449981	GotoStatement	goto set_call_attr ;	3056:3:67908:67926	3449562	1	True				
ANR	3449982	Identifier	set_call_attr		3449562	0					
ANR	3449983	BreakStatement	break ;	3061:4:67956:67961	3449562	14	True				
ANR	3449984	Label	case NT_ANCHOR :	3063:2:67966:67980	3449562	15	True				
ANR	3449985	Identifier	NT_ANCHOR		3449562	0					
ANR	3449986	CompoundStatement		87:6:2122:2152	3449562	16					
ANR	3449987	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3065:6:67994:68024	3449562	0	True				
ANR	3449988	IdentifierDecl	* an = NANCHOR ( node )		3449562	0					
ANR	3449989	IdentifierDeclType	AnchorNode *		3449562	0					
ANR	3449990	Identifier	an		3449562	1					
ANR	3449991	AssignmentExpression	* an = NANCHOR ( node )		3449562	2		=			
ANR	3449992	Identifier	an		3449562	0					
ANR	3449993	CallExpression	NANCHOR ( node )		3449562	1					
ANR	3449994	Callee	NANCHOR		3449562	0					
ANR	3449995	Identifier	NANCHOR		3449562	0					
ANR	3449996	ArgumentList	node		3449562	1					
ANR	3449997	Argument	node		3449562	0					
ANR	3449998	Identifier	node		3449562	0					
ANR	3449999	SwitchStatement	switch ( an -> type )		3449562	1					
ANR	3450000	Condition	an -> type	3067:14:68041:68048	3449562	0	True				
ANR	3450001	PtrMemberAccess	an -> type		3449562	0					
ANR	3450002	Identifier	an		3449562	0					
ANR	3450003	Identifier	type		3449562	1					
ANR	3450004	CompoundStatement		89:24:2179:2179	3449562	1					
ANR	3450005	Label	case ANCHOR_PREC_READ :	3068:6:68059:68080	3449562	0	True				
ANR	3450006	Identifier	ANCHOR_PREC_READ		3449562	0					
ANR	3450007	Label	case ANCHOR_PREC_READ_NOT :	3069:6:68088:68113	3449562	1	True				
ANR	3450008	Identifier	ANCHOR_PREC_READ_NOT		3449562	0					
ANR	3450009	Label	case ANCHOR_LOOK_BEHIND :	3070:6:68121:68144	3449562	2	True				
ANR	3450010	Identifier	ANCHOR_LOOK_BEHIND		3449562	0					
ANR	3450011	Label	case ANCHOR_LOOK_BEHIND_NOT :	3071:6:68152:68179	3449562	3	True				
ANR	3450012	Identifier	ANCHOR_LOOK_BEHIND_NOT		3449562	0					
ANR	3450013	ExpressionStatement	"r = setup_subexp_call ( an -> target , env )"	3072:1:68182:68220	3449562	4	True				
ANR	3450014	AssignmentExpression	"r = setup_subexp_call ( an -> target , env )"		3449562	0		=			
ANR	3450015	Identifier	r		3449562	0					
ANR	3450016	CallExpression	"setup_subexp_call ( an -> target , env )"		3449562	1					
ANR	3450017	Callee	setup_subexp_call		3449562	0					
ANR	3450018	Identifier	setup_subexp_call		3449562	0					
ANR	3450019	ArgumentList	an -> target		3449562	1					
ANR	3450020	Argument	an -> target		3449562	0					
ANR	3450021	PtrMemberAccess	an -> target		3449562	0					
ANR	3450022	Identifier	an		3449562	0					
ANR	3450023	Identifier	target		3449562	1					
ANR	3450024	Argument	env		3449562	1					
ANR	3450025	Identifier	env		3449562	0					
ANR	3450026	BreakStatement	break ;	3073:1:68223:68228	3449562	5	True				
ANR	3450027	BreakStatement	break ;	3076:4:68248:68253	3449562	17	True				
ANR	3450028	Label	default :	3078:2:68258:68265	3449562	18	True				
ANR	3450029	Identifier	default		3449562	0					
ANR	3450030	BreakStatement	break ;	3079:4:68271:68276	3449562	19	True				
ANR	3450031	ReturnStatement	return r ;	3082:2:68285:68293	3449562	4	True				
ANR	3450032	Identifier	r		3449562	0					
ANR	3450033	ReturnType	static int		3449562	1					
ANR	3450034	Identifier	setup_subexp_call		3449562	2					
ANR	3450035	ParameterList	"Node * node , ScanEnv * env"		3449562	3					
ANR	3450036	Parameter	Node * node	2978:18:65845:65854	3449562	0	True				
ANR	3450037	ParameterType	Node *		3449562	0					
ANR	3450038	Identifier	node		3449562	1					
ANR	3450039	Parameter	ScanEnv * env	2978:30:65857:65868	3449562	1	True				
ANR	3450040	ParameterType	ScanEnv *		3449562	0					
ANR	3450041	Identifier	env		3449562	1					
ANR	3450042	CFGEntryNode	ENTRY		3449562		True				
ANR	3450043	CFGExitNode	EXIT		3449562		True				
ANR	3450044	Symbol	NQTFR ( node ) -> target		3449562						
ANR	3450045	Symbol	NCAR		3449562						
ANR	3450046	Symbol	env -> bt_mem_start		3449562						
ANR	3450047	Symbol	env -> num_named		3449562						
ANR	3450048	Symbol	cn -> name_end		3449562						
ANR	3450049	Symbol	type		3449562						
ANR	3450050	Symbol	NQTFR		3449562						
ANR	3450051	Symbol	gnum		3449562						
ANR	3450052	Symbol	env -> reg		3449562						
ANR	3450053	Symbol	env -> option		3449562						
ANR	3450054	Symbol	setup_subexp_call		3449562						
ANR	3450055	Symbol	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3449562						
ANR	3450056	Symbol	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		3449562						
ANR	3450057	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		3449562						
ANR	3450058	Symbol	cn -> target		3449562						
ANR	3450059	Symbol	IS_SYNTAX_BV		3449562						
ANR	3450060	Symbol	* nodes		3449562						
ANR	3450061	Symbol	SCANENV_MEM_NODES		3449562						
ANR	3450062	Symbol	NCDR		3449562						
ANR	3450063	Symbol	* env		3449562						
ANR	3450064	Symbol	& refs		3449562						
ANR	3450065	Symbol	env -> unset_addr_list		3449562						
ANR	3450066	Symbol	an		3449562						
ANR	3450067	Symbol	NENCLOSE ( node ) -> target		3449562						
ANR	3450068	Symbol	env -> syntax		3449562						
ANR	3450069	Symbol	node		3449562						
ANR	3450070	Symbol	* cn		3449562						
ANR	3450071	Symbol	an -> target		3449562						
ANR	3450072	Symbol	* cn -> group_num		3449562						
ANR	3450073	Symbol	IS_NOT_NULL		3449562						
ANR	3450074	Symbol	onig_name_to_group_numbers		3449562						
ANR	3450075	Symbol	* NENCLOSE		3449562						
ANR	3450076	Symbol	NCALL		3449562						
ANR	3450077	Symbol	an -> type		3449562						
ANR	3450078	Symbol	cn -> name		3449562						
ANR	3450079	Symbol	cn -> unset_addr_list		3449562						
ANR	3450080	Symbol	IS_NULL		3449562						
ANR	3450081	Symbol	* NQTFR		3449562						
ANR	3450082	Symbol	* * cn		3449562						
ANR	3450083	Symbol	* refs		3449562						
ANR	3450084	Symbol	NENCLOSE		3449562						
ANR	3450085	Symbol	cn -> group_num		3449562						
ANR	3450086	Symbol	ONIG_IS_OPTION_ON		3449562						
ANR	3450087	Symbol	NST_CALLED		3449562						
ANR	3450088	Symbol	env -> num_mem		3449562						
ANR	3450089	Symbol	cn		3449562						
ANR	3450090	Symbol	env		3449562						
ANR	3450091	Symbol	ONIG_OPTION_CAPTURE_GROUP		3449562						
ANR	3450092	Symbol	n		3449562						
ANR	3450093	Symbol	* an		3449562						
ANR	3450094	Symbol	r		3449562						
ANR	3450095	Symbol	nodes		3449562						
ANR	3450096	Symbol	ONIGERR_UNDEFINED_GROUP_REFERENCE		3449562						
ANR	3450097	Symbol	refs		3449562						
ANR	3450098	Symbol	NANCHOR		3449562						
ANR	3450099	Symbol	NTYPE		3449562						
ANR	3450100	Symbol	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		3449562						
ANR	3450101	Function	divide_look_behind_alternatives	3090:0:68421:69092							
ANR	3450102	FunctionDef	divide_look_behind_alternatives (Node * node)		3450101	0					
ANR	3450103	CompoundStatement		3092:0:68476:69092	3450101	0					
ANR	3450104	IdentifierDeclStatement	"Node * head , * np , * insert_node ;"	3093:2:68480:68509	3450101	0	True				
ANR	3450105	IdentifierDecl	* head		3450101	0					
ANR	3450106	IdentifierDeclType	Node *		3450101	0					
ANR	3450107	Identifier	head		3450101	1					
ANR	3450108	IdentifierDecl	* np		3450101	1					
ANR	3450109	IdentifierDeclType	Node *		3450101	0					
ANR	3450110	Identifier	np		3450101	1					
ANR	3450111	IdentifierDecl	* insert_node		3450101	2					
ANR	3450112	IdentifierDeclType	Node *		3450101	0					
ANR	3450113	Identifier	insert_node		3450101	1					
ANR	3450114	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3094:2:68513:68543	3450101	1	True				
ANR	3450115	IdentifierDecl	* an = NANCHOR ( node )		3450101	0					
ANR	3450116	IdentifierDeclType	AnchorNode *		3450101	0					
ANR	3450117	Identifier	an		3450101	1					
ANR	3450118	AssignmentExpression	* an = NANCHOR ( node )		3450101	2		=			
ANR	3450119	Identifier	an		3450101	0					
ANR	3450120	CallExpression	NANCHOR ( node )		3450101	1					
ANR	3450121	Callee	NANCHOR		3450101	0					
ANR	3450122	Identifier	NANCHOR		3450101	0					
ANR	3450123	ArgumentList	node		3450101	1					
ANR	3450124	Argument	node		3450101	0					
ANR	3450125	Identifier	node		3450101	0					
ANR	3450126	IdentifierDeclStatement	int anc_type = an -> type ;	3095:2:68547:68570	3450101	2	True				
ANR	3450127	IdentifierDecl	anc_type = an -> type		3450101	0					
ANR	3450128	IdentifierDeclType	int		3450101	0					
ANR	3450129	Identifier	anc_type		3450101	1					
ANR	3450130	AssignmentExpression	anc_type = an -> type		3450101	2		=			
ANR	3450131	Identifier	anc_type		3450101	0					
ANR	3450132	PtrMemberAccess	an -> type		3450101	1					
ANR	3450133	Identifier	an		3450101	0					
ANR	3450134	Identifier	type		3450101	1					
ANR	3450135	ExpressionStatement	head = an -> target	3097:2:68575:68592	3450101	3	True				
ANR	3450136	AssignmentExpression	head = an -> target		3450101	0		=			
ANR	3450137	Identifier	head		3450101	0					
ANR	3450138	PtrMemberAccess	an -> target		3450101	1					
ANR	3450139	Identifier	an		3450101	0					
ANR	3450140	Identifier	target		3450101	1					
ANR	3450141	ExpressionStatement	np = NCAR ( head )	3098:2:68596:68611	3450101	4	True				
ANR	3450142	AssignmentExpression	np = NCAR ( head )		3450101	0		=			
ANR	3450143	Identifier	np		3450101	0					
ANR	3450144	CallExpression	NCAR ( head )		3450101	1					
ANR	3450145	Callee	NCAR		3450101	0					
ANR	3450146	Identifier	NCAR		3450101	0					
ANR	3450147	ArgumentList	head		3450101	1					
ANR	3450148	Argument	head		3450101	0					
ANR	3450149	Identifier	head		3450101	0					
ANR	3450150	ExpressionStatement	"swap_node ( node , head )"	3099:2:68615:68636	3450101	5	True				
ANR	3450151	CallExpression	"swap_node ( node , head )"		3450101	0					
ANR	3450152	Callee	swap_node		3450101	0					
ANR	3450153	Identifier	swap_node		3450101	0					
ANR	3450154	ArgumentList	node		3450101	1					
ANR	3450155	Argument	node		3450101	0					
ANR	3450156	Identifier	node		3450101	0					
ANR	3450157	Argument	head		3450101	1					
ANR	3450158	Identifier	head		3450101	0					
ANR	3450159	ExpressionStatement	NCAR ( node ) = head	3100:2:68640:68657	3450101	6	True				
ANR	3450160	AssignmentExpression	NCAR ( node ) = head		3450101	0		=			
ANR	3450161	CallExpression	NCAR ( node )		3450101	0					
ANR	3450162	Callee	NCAR		3450101	0					
ANR	3450163	Identifier	NCAR		3450101	0					
ANR	3450164	ArgumentList	node		3450101	1					
ANR	3450165	Argument	node		3450101	0					
ANR	3450166	Identifier	node		3450101	0					
ANR	3450167	Identifier	head		3450101	1					
ANR	3450168	ExpressionStatement	NANCHOR ( head ) -> target = np	3101:2:68661:68687	3450101	7	True				
ANR	3450169	AssignmentExpression	NANCHOR ( head ) -> target = np		3450101	0		=			
ANR	3450170	PtrMemberAccess	NANCHOR ( head ) -> target		3450101	0					
ANR	3450171	CallExpression	NANCHOR ( head )		3450101	0					
ANR	3450172	Callee	NANCHOR		3450101	0					
ANR	3450173	Identifier	NANCHOR		3450101	0					
ANR	3450174	ArgumentList	head		3450101	1					
ANR	3450175	Argument	head		3450101	0					
ANR	3450176	Identifier	head		3450101	0					
ANR	3450177	Identifier	target		3450101	1					
ANR	3450178	Identifier	np		3450101	1					
ANR	3450179	ExpressionStatement	np = node	3103:2:68692:68701	3450101	8	True				
ANR	3450180	AssignmentExpression	np = node		3450101	0		=			
ANR	3450181	Identifier	np		3450101	0					
ANR	3450182	Identifier	node		3450101	1					
ANR	3450183	WhileStatement	while ( ( np = NCDR ( np ) ) != NULL_NODE )		3450101	9					
ANR	3450184	Condition	( np = NCDR ( np ) ) != NULL_NODE	3104:9:68712:68739	3450101	0	True				
ANR	3450185	EqualityExpression	( np = NCDR ( np ) ) != NULL_NODE		3450101	0		!=			
ANR	3450186	AssignmentExpression	np = NCDR ( np )		3450101	0		=			
ANR	3450187	Identifier	np		3450101	0					
ANR	3450188	CallExpression	NCDR ( np )		3450101	1					
ANR	3450189	Callee	NCDR		3450101	0					
ANR	3450190	Identifier	NCDR		3450101	0					
ANR	3450191	ArgumentList	np		3450101	1					
ANR	3450192	Argument	np		3450101	0					
ANR	3450193	Identifier	np		3450101	0					
ANR	3450194	Identifier	NULL_NODE		3450101	1					
ANR	3450195	CompoundStatement		13:39:265:265	3450101	1					
ANR	3450196	ExpressionStatement	insert_node = onig_node_new_anchor ( anc_type )	3105:4:68748:68792	3450101	0	True				
ANR	3450197	AssignmentExpression	insert_node = onig_node_new_anchor ( anc_type )		3450101	0		=			
ANR	3450198	Identifier	insert_node		3450101	0					
ANR	3450199	CallExpression	onig_node_new_anchor ( anc_type )		3450101	1					
ANR	3450200	Callee	onig_node_new_anchor		3450101	0					
ANR	3450201	Identifier	onig_node_new_anchor		3450101	0					
ANR	3450202	ArgumentList	anc_type		3450101	1					
ANR	3450203	Argument	anc_type		3450101	0					
ANR	3450204	Identifier	anc_type		3450101	0					
ANR	3450205	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( insert_node )	3106:4:68798:68835	3450101	1	True				
ANR	3450206	CallExpression	CHECK_NULL_RETURN_MEMERR ( insert_node )		3450101	0					
ANR	3450207	Callee	CHECK_NULL_RETURN_MEMERR		3450101	0					
ANR	3450208	Identifier	CHECK_NULL_RETURN_MEMERR		3450101	0					
ANR	3450209	ArgumentList	insert_node		3450101	1					
ANR	3450210	Argument	insert_node		3450101	0					
ANR	3450211	Identifier	insert_node		3450101	0					
ANR	3450212	ExpressionStatement	NANCHOR ( insert_node ) -> target = NCAR ( np )	3107:4:68841:68880	3450101	2	True				
ANR	3450213	AssignmentExpression	NANCHOR ( insert_node ) -> target = NCAR ( np )		3450101	0		=			
ANR	3450214	PtrMemberAccess	NANCHOR ( insert_node ) -> target		3450101	0					
ANR	3450215	CallExpression	NANCHOR ( insert_node )		3450101	0					
ANR	3450216	Callee	NANCHOR		3450101	0					
ANR	3450217	Identifier	NANCHOR		3450101	0					
ANR	3450218	ArgumentList	insert_node		3450101	1					
ANR	3450219	Argument	insert_node		3450101	0					
ANR	3450220	Identifier	insert_node		3450101	0					
ANR	3450221	Identifier	target		3450101	1					
ANR	3450222	CallExpression	NCAR ( np )		3450101	1					
ANR	3450223	Callee	NCAR		3450101	0					
ANR	3450224	Identifier	NCAR		3450101	0					
ANR	3450225	ArgumentList	np		3450101	1					
ANR	3450226	Argument	np		3450101	0					
ANR	3450227	Identifier	np		3450101	0					
ANR	3450228	ExpressionStatement	NCAR ( np ) = insert_node	3108:4:68886:68908	3450101	3	True				
ANR	3450229	AssignmentExpression	NCAR ( np ) = insert_node		3450101	0		=			
ANR	3450230	CallExpression	NCAR ( np )		3450101	0					
ANR	3450231	Callee	NCAR		3450101	0					
ANR	3450232	Identifier	NCAR		3450101	0					
ANR	3450233	ArgumentList	np		3450101	1					
ANR	3450234	Argument	np		3450101	0					
ANR	3450235	Identifier	np		3450101	0					
ANR	3450236	Identifier	insert_node		3450101	1					
ANR	3450237	IfStatement	if ( anc_type == ANCHOR_LOOK_BEHIND_NOT )		3450101	10					
ANR	3450238	Condition	anc_type == ANCHOR_LOOK_BEHIND_NOT	3111:6:68921:68954	3450101	0	True				
ANR	3450239	EqualityExpression	anc_type == ANCHOR_LOOK_BEHIND_NOT		3450101	0		==			
ANR	3450240	Identifier	anc_type		3450101	0					
ANR	3450241	Identifier	ANCHOR_LOOK_BEHIND_NOT		3450101	1					
ANR	3450242	CompoundStatement		20:42:480:480	3450101	1					
ANR	3450243	ExpressionStatement	np = node	3112:4:68963:68972	3450101	0	True				
ANR	3450244	AssignmentExpression	np = node		3450101	0		=			
ANR	3450245	Identifier	np		3450101	0					
ANR	3450246	Identifier	node		3450101	1					
ANR	3450247	DoStatement	do		3450101	1					
ANR	3450248	CompoundStatement		22:7:504:504	3450101	0					
ANR	3450249	ExpressionStatement	"SET_NTYPE ( np , NT_LIST )"	3114:6:68989:69011	3450101	0	True				
ANR	3450250	CallExpression	"SET_NTYPE ( np , NT_LIST )"		3450101	0					
ANR	3450251	Callee	SET_NTYPE		3450101	0					
ANR	3450252	Identifier	SET_NTYPE		3450101	0					
ANR	3450253	ArgumentList	np		3450101	1					
ANR	3450254	Argument	np		3450101	0					
ANR	3450255	Identifier	np		3450101	0					
ANR	3450256	Argument	NT_LIST		3450101	1					
ANR	3450257	Identifier	NT_LIST		3450101	0					
ANR	3450258	Condition	( np = NCDR ( np ) ) != NULL_NODE	3115:13:69045:69072	3450101	1	True				
ANR	3450259	EqualityExpression	( np = NCDR ( np ) ) != NULL_NODE		3450101	0		!=			
ANR	3450260	AssignmentExpression	np = NCDR ( np )		3450101	0		=			
ANR	3450261	Identifier	np		3450101	0					
ANR	3450262	CallExpression	NCDR ( np )		3450101	1					
ANR	3450263	Callee	NCDR		3450101	0					
ANR	3450264	Identifier	NCDR		3450101	0					
ANR	3450265	ArgumentList	np		3450101	1					
ANR	3450266	Argument	np		3450101	0					
ANR	3450267	Identifier	np		3450101	0					
ANR	3450268	Identifier	NULL_NODE		3450101	1					
ANR	3450269	ReturnStatement	return 0 ;	3117:2:69082:69090	3450101	11	True				
ANR	3450270	PrimaryExpression	0		3450101	0					
ANR	3450271	ReturnType	static int		3450101	1					
ANR	3450272	Identifier	divide_look_behind_alternatives		3450101	2					
ANR	3450273	ParameterList	Node * node		3450101	3					
ANR	3450274	Parameter	Node * node	3091:32:68464:68473	3450101	0	True				
ANR	3450275	ParameterType	Node *		3450101	0					
ANR	3450276	Identifier	node		3450101	1					
ANR	3450277	CFGEntryNode	ENTRY		3450101		True				
ANR	3450278	CFGExitNode	EXIT		3450101		True				
ANR	3450279	Symbol	np		3450101						
ANR	3450280	Symbol	NCAR		3450101						
ANR	3450281	Symbol	anc_type		3450101						
ANR	3450282	Symbol	NCDR		3450101						
ANR	3450283	Symbol	an -> type		3450101						
ANR	3450284	Symbol	NT_LIST		3450101						
ANR	3450285	Symbol	an		3450101						
ANR	3450286	Symbol	NANCHOR ( insert_node ) -> target		3450101						
ANR	3450287	Symbol	head		3450101						
ANR	3450288	Symbol	* an		3450101						
ANR	3450289	Symbol	NANCHOR ( head ) -> target		3450101						
ANR	3450290	Symbol	node		3450101						
ANR	3450291	Symbol	an -> target		3450101						
ANR	3450292	Symbol	* NANCHOR		3450101						
ANR	3450293	Symbol	ANCHOR_LOOK_BEHIND_NOT		3450101						
ANR	3450294	Symbol	NANCHOR		3450101						
ANR	3450295	Symbol	NULL_NODE		3450101						
ANR	3450296	Symbol	onig_node_new_anchor		3450101						
ANR	3450297	Symbol	insert_node		3450101						
ANR	3450298	Function	setup_look_behind	3120:0:69095:69630							
ANR	3450299	FunctionDef	"setup_look_behind (Node * node , regex_t * reg , ScanEnv * env)"		3450298	0					
ANR	3450300	CompoundStatement		3122:0:69164:69630	3450298	0					
ANR	3450301	IdentifierDeclStatement	"int r , len ;"	3123:2:69168:69178	3450298	0	True				
ANR	3450302	IdentifierDecl	r		3450298	0					
ANR	3450303	IdentifierDeclType	int		3450298	0					
ANR	3450304	Identifier	r		3450298	1					
ANR	3450305	IdentifierDecl	len		3450298	1					
ANR	3450306	IdentifierDeclType	int		3450298	0					
ANR	3450307	Identifier	len		3450298	1					
ANR	3450308	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3124:2:69182:69212	3450298	1	True				
ANR	3450309	IdentifierDecl	* an = NANCHOR ( node )		3450298	0					
ANR	3450310	IdentifierDeclType	AnchorNode *		3450298	0					
ANR	3450311	Identifier	an		3450298	1					
ANR	3450312	AssignmentExpression	* an = NANCHOR ( node )		3450298	2		=			
ANR	3450313	Identifier	an		3450298	0					
ANR	3450314	CallExpression	NANCHOR ( node )		3450298	1					
ANR	3450315	Callee	NANCHOR		3450298	0					
ANR	3450316	Identifier	NANCHOR		3450298	0					
ANR	3450317	ArgumentList	node		3450298	1					
ANR	3450318	Argument	node		3450298	0					
ANR	3450319	Identifier	node		3450298	0					
ANR	3450320	ExpressionStatement	"r = get_char_length_tree ( an -> target , reg , & len )"	3126:2:69217:69264	3450298	2	True				
ANR	3450321	AssignmentExpression	"r = get_char_length_tree ( an -> target , reg , & len )"		3450298	0		=			
ANR	3450322	Identifier	r		3450298	0					
ANR	3450323	CallExpression	"get_char_length_tree ( an -> target , reg , & len )"		3450298	1					
ANR	3450324	Callee	get_char_length_tree		3450298	0					
ANR	3450325	Identifier	get_char_length_tree		3450298	0					
ANR	3450326	ArgumentList	an -> target		3450298	1					
ANR	3450327	Argument	an -> target		3450298	0					
ANR	3450328	PtrMemberAccess	an -> target		3450298	0					
ANR	3450329	Identifier	an		3450298	0					
ANR	3450330	Identifier	target		3450298	1					
ANR	3450331	Argument	reg		3450298	1					
ANR	3450332	Identifier	reg		3450298	0					
ANR	3450333	Argument	& len		3450298	2					
ANR	3450334	UnaryOperationExpression	& len		3450298	0					
ANR	3450335	UnaryOperator	&		3450298	0					
ANR	3450336	Identifier	len		3450298	1					
ANR	3450337	IfStatement	if ( r == 0 )		3450298	3					
ANR	3450338	Condition	r == 0	3127:6:69272:69277	3450298	0	True				
ANR	3450339	EqualityExpression	r == 0		3450298	0		==			
ANR	3450340	Identifier	r		3450298	0					
ANR	3450341	PrimaryExpression	0		3450298	1					
ANR	3450342	ExpressionStatement	an -> char_len = len	3128:4:69284:69302	3450298	1	True				
ANR	3450343	AssignmentExpression	an -> char_len = len		3450298	0		=			
ANR	3450344	PtrMemberAccess	an -> char_len		3450298	0					
ANR	3450345	Identifier	an		3450298	0					
ANR	3450346	Identifier	char_len		3450298	1					
ANR	3450347	Identifier	len		3450298	1					
ANR	3450348	ElseStatement	else		3450298	0					
ANR	3450349	IfStatement	if ( r == GET_CHAR_LEN_VARLEN )		3450298	0					
ANR	3450350	Condition	r == GET_CHAR_LEN_VARLEN	3129:11:69315:69338	3450298	0	True				
ANR	3450351	EqualityExpression	r == GET_CHAR_LEN_VARLEN		3450298	0		==			
ANR	3450352	Identifier	r		3450298	0					
ANR	3450353	Identifier	GET_CHAR_LEN_VARLEN		3450298	1					
ANR	3450354	ExpressionStatement	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN	3130:4:69345:69384	3450298	1	True				
ANR	3450355	AssignmentExpression	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3450298	0		=			
ANR	3450356	Identifier	r		3450298	0					
ANR	3450357	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3450298	1					
ANR	3450358	ElseStatement	else		3450298	0					
ANR	3450359	IfStatement	if ( r == GET_CHAR_LEN_TOP_ALT_VARLEN )		3450298	0					
ANR	3450360	Condition	r == GET_CHAR_LEN_TOP_ALT_VARLEN	3131:11:69397:69428	3450298	0	True				
ANR	3450361	EqualityExpression	r == GET_CHAR_LEN_TOP_ALT_VARLEN		3450298	0		==			
ANR	3450362	Identifier	r		3450298	0					
ANR	3450363	Identifier	GET_CHAR_LEN_TOP_ALT_VARLEN		3450298	1					
ANR	3450364	CompoundStatement		10:45:266:266	3450298	1					
ANR	3450365	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND ) )"		3450298	0					
ANR	3450366	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND )"	3132:8:69441:69505	3450298	0	True				
ANR	3450367	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND )"		3450298	0					
ANR	3450368	Callee	IS_SYNTAX_BV		3450298	0					
ANR	3450369	Identifier	IS_SYNTAX_BV		3450298	0					
ANR	3450370	ArgumentList	env -> syntax		3450298	1					
ANR	3450371	Argument	env -> syntax		3450298	0					
ANR	3450372	PtrMemberAccess	env -> syntax		3450298	0					
ANR	3450373	Identifier	env		3450298	0					
ANR	3450374	Identifier	syntax		3450298	1					
ANR	3450375	Argument	ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND		3450298	1					
ANR	3450376	Identifier	ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND		3450298	0					
ANR	3450377	ExpressionStatement	r = divide_look_behind_alternatives ( node )	3133:6:69514:69555	3450298	1	True				
ANR	3450378	AssignmentExpression	r = divide_look_behind_alternatives ( node )		3450298	0		=			
ANR	3450379	Identifier	r		3450298	0					
ANR	3450380	CallExpression	divide_look_behind_alternatives ( node )		3450298	1					
ANR	3450381	Callee	divide_look_behind_alternatives		3450298	0					
ANR	3450382	Identifier	divide_look_behind_alternatives		3450298	0					
ANR	3450383	ArgumentList	node		3450298	1					
ANR	3450384	Argument	node		3450298	0					
ANR	3450385	Identifier	node		3450298	0					
ANR	3450386	ElseStatement	else		3450298	0					
ANR	3450387	ExpressionStatement	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN	3135:6:69572:69611	3450298	0	True				
ANR	3450388	AssignmentExpression	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3450298	0		=			
ANR	3450389	Identifier	r		3450298	0					
ANR	3450390	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3450298	1					
ANR	3450391	ReturnStatement	return r ;	3138:2:69620:69628	3450298	4	True				
ANR	3450392	Identifier	r		3450298	0					
ANR	3450393	ReturnType	static int		3450298	1					
ANR	3450394	Identifier	setup_look_behind		3450298	2					
ANR	3450395	ParameterList	"Node * node , regex_t * reg , ScanEnv * env"		3450298	3					
ANR	3450396	Parameter	Node * node	3121:18:69124:69133	3450298	0	True				
ANR	3450397	ParameterType	Node *		3450298	0					
ANR	3450398	Identifier	node		3450298	1					
ANR	3450399	Parameter	regex_t * reg	3121:30:69136:69147	3450298	1	True				
ANR	3450400	ParameterType	regex_t *		3450298	0					
ANR	3450401	Identifier	reg		3450298	1					
ANR	3450402	Parameter	ScanEnv * env	3121:44:69150:69161	3450298	2	True				
ANR	3450403	ParameterType	ScanEnv *		3450298	0					
ANR	3450404	Identifier	env		3450298	1					
ANR	3450405	CFGEntryNode	ENTRY		3450298		True				
ANR	3450406	CFGExitNode	EXIT		3450298		True				
ANR	3450407	Symbol	ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND		3450298						
ANR	3450408	Symbol	an -> char_len		3450298						
ANR	3450409	Symbol	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3450298						
ANR	3450410	Symbol	* env		3450298						
ANR	3450411	Symbol	env		3450298						
ANR	3450412	Symbol	an		3450298						
ANR	3450413	Symbol	env -> syntax		3450298						
ANR	3450414	Symbol	* an		3450298						
ANR	3450415	Symbol	node		3450298						
ANR	3450416	Symbol	get_char_length_tree		3450298						
ANR	3450417	Symbol	r		3450298						
ANR	3450418	Symbol	len		3450298						
ANR	3450419	Symbol	GET_CHAR_LEN_TOP_ALT_VARLEN		3450298						
ANR	3450420	Symbol	reg		3450298						
ANR	3450421	Symbol	an -> target		3450298						
ANR	3450422	Symbol	GET_CHAR_LEN_VARLEN		3450298						
ANR	3450423	Symbol	NANCHOR		3450298						
ANR	3450424	Symbol	IS_SYNTAX_BV		3450298						
ANR	3450425	Symbol	& len		3450298						
ANR	3450426	Symbol	divide_look_behind_alternatives		3450298						
ANR	3450427	Function	next_setup	3141:0:69633:70842							
ANR	3450428	FunctionDef	"next_setup (Node * node , Node * next_node , regex_t * reg)"		3450427	0					
ANR	3450429	CompoundStatement		3143:0:69698:70842	3450427	0					
ANR	3450430	IdentifierDeclStatement	int type ;	3144:2:69702:69710	3450427	0	True				
ANR	3450431	IdentifierDecl	type		3450427	0					
ANR	3450432	IdentifierDeclType	int		3450427	0					
ANR	3450433	Identifier	type		3450427	1					
ANR	3450434	Label	retry :	3146:1:69714:69719	3450427	1	True				
ANR	3450435	Identifier	retry		3450427	0					
ANR	3450436	ExpressionStatement	type = NTYPE ( node )	3147:2:69723:69741	3450427	2	True				
ANR	3450437	AssignmentExpression	type = NTYPE ( node )		3450427	0		=			
ANR	3450438	Identifier	type		3450427	0					
ANR	3450439	CallExpression	NTYPE ( node )		3450427	1					
ANR	3450440	Callee	NTYPE		3450427	0					
ANR	3450441	Identifier	NTYPE		3450427	0					
ANR	3450442	ArgumentList	node		3450427	1					
ANR	3450443	Argument	node		3450427	0					
ANR	3450444	Identifier	node		3450427	0					
ANR	3450445	IfStatement	if ( type == NT_QTFR )		3450427	3					
ANR	3450446	Condition	type == NT_QTFR	3148:6:69749:69763	3450427	0	True				
ANR	3450447	EqualityExpression	type == NT_QTFR		3450427	0		==			
ANR	3450448	Identifier	type		3450427	0					
ANR	3450449	Identifier	NT_QTFR		3450427	1					
ANR	3450450	CompoundStatement		7:4:73:99	3450427	1					
ANR	3450451	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	3149:4:69772:69798	3450427	0	True				
ANR	3450452	IdentifierDecl	* qn = NQTFR ( node )		3450427	0					
ANR	3450453	IdentifierDeclType	QtfrNode *		3450427	0					
ANR	3450454	Identifier	qn		3450427	1					
ANR	3450455	AssignmentExpression	* qn = NQTFR ( node )		3450427	2		=			
ANR	3450456	Identifier	qn		3450427	0					
ANR	3450457	CallExpression	NQTFR ( node )		3450427	1					
ANR	3450458	Callee	NQTFR		3450427	0					
ANR	3450459	Identifier	NQTFR		3450427	0					
ANR	3450460	ArgumentList	node		3450427	1					
ANR	3450461	Argument	node		3450427	0					
ANR	3450462	Identifier	node		3450427	0					
ANR	3450463	IfStatement	if ( qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) )		3450427	1					
ANR	3450464	Condition	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper )	3150:8:69808:69850	3450427	0	True				
ANR	3450465	AndExpression	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper )		3450427	0		&&			
ANR	3450466	PtrMemberAccess	qn -> greedy		3450427	0					
ANR	3450467	Identifier	qn		3450427	0					
ANR	3450468	Identifier	greedy		3450427	1					
ANR	3450469	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3450427	1					
ANR	3450470	Callee	IS_REPEAT_INFINITE		3450427	0					
ANR	3450471	Identifier	IS_REPEAT_INFINITE		3450427	0					
ANR	3450472	ArgumentList	qn -> upper		3450427	1					
ANR	3450473	Argument	qn -> upper		3450427	0					
ANR	3450474	PtrMemberAccess	qn -> upper		3450427	0					
ANR	3450475	Identifier	qn		3450427	0					
ANR	3450476	Identifier	upper		3450427	1					
ANR	3450477	CompoundStatement		10:6:188:236	3450427	1					
ANR	3450478	IdentifierDeclStatement	"Node * n = get_head_value_node ( next_node , 1 , reg ) ;"	3152:6:69887:69935	3450427	0	True				
ANR	3450479	IdentifierDecl	"* n = get_head_value_node ( next_node , 1 , reg )"		3450427	0					
ANR	3450480	IdentifierDeclType	Node *		3450427	0					
ANR	3450481	Identifier	n		3450427	1					
ANR	3450482	AssignmentExpression	"* n = get_head_value_node ( next_node , 1 , reg )"		3450427	2		=			
ANR	3450483	Identifier	n		3450427	0					
ANR	3450484	CallExpression	"get_head_value_node ( next_node , 1 , reg )"		3450427	1					
ANR	3450485	Callee	get_head_value_node		3450427	0					
ANR	3450486	Identifier	get_head_value_node		3450427	0					
ANR	3450487	ArgumentList	next_node		3450427	1					
ANR	3450488	Argument	next_node		3450427	0					
ANR	3450489	Identifier	next_node		3450427	0					
ANR	3450490	Argument	1		3450427	1					
ANR	3450491	PrimaryExpression	1		3450427	0					
ANR	3450492	Argument	reg		3450427	2					
ANR	3450493	Identifier	reg		3450427	0					
ANR	3450494	IfStatement	if ( IS_NOT_NULL ( n ) && NSTR ( n ) -> s [ 0 ] != '\\0' )		3450427	1					
ANR	3450495	Condition	IS_NOT_NULL ( n ) && NSTR ( n ) -> s [ 0 ] != '\\0'	3154:10:69985:70023	3450427	0	True				
ANR	3450496	AndExpression	IS_NOT_NULL ( n ) && NSTR ( n ) -> s [ 0 ] != '\\0'		3450427	0		&&			
ANR	3450497	CallExpression	IS_NOT_NULL ( n )		3450427	0					
ANR	3450498	Callee	IS_NOT_NULL		3450427	0					
ANR	3450499	Identifier	IS_NOT_NULL		3450427	0					
ANR	3450500	ArgumentList	n		3450427	1					
ANR	3450501	Argument	n		3450427	0					
ANR	3450502	Identifier	n		3450427	0					
ANR	3450503	EqualityExpression	NSTR ( n ) -> s [ 0 ] != '\\0'		3450427	1		!=			
ANR	3450504	ArrayIndexing	NSTR ( n ) -> s [ 0 ]		3450427	0					
ANR	3450505	PtrMemberAccess	NSTR ( n ) -> s		3450427	0					
ANR	3450506	CallExpression	NSTR ( n )		3450427	0					
ANR	3450507	Callee	NSTR		3450427	0					
ANR	3450508	Identifier	NSTR		3450427	0					
ANR	3450509	ArgumentList	n		3450427	1					
ANR	3450510	Argument	n		3450427	0					
ANR	3450511	Identifier	n		3450427	0					
ANR	3450512	Identifier	s		3450427	1					
ANR	3450513	PrimaryExpression	0		3450427	1					
ANR	3450514	PrimaryExpression	'\\0'		3450427	1					
ANR	3450515	CompoundStatement		12:51:327:327	3450427	1					
ANR	3450516	ExpressionStatement	qn -> next_head_exact = n	3155:1:70029:70052	3450427	0	True				
ANR	3450517	AssignmentExpression	qn -> next_head_exact = n		3450427	0		=			
ANR	3450518	PtrMemberAccess	qn -> next_head_exact		3450427	0					
ANR	3450519	Identifier	qn		3450427	0					
ANR	3450520	Identifier	next_head_exact		3450427	1					
ANR	3450521	Identifier	n		3450427	1					
ANR	3450522	IfStatement	if ( qn -> lower <= 1 )		3450427	2					
ANR	3450523	Condition	qn -> lower <= 1	3159:10:70130:70143	3450427	0	True				
ANR	3450524	RelationalExpression	qn -> lower <= 1		3450427	0		<=			
ANR	3450525	PtrMemberAccess	qn -> lower		3450427	0					
ANR	3450526	Identifier	qn		3450427	0					
ANR	3450527	Identifier	lower		3450427	1					
ANR	3450528	PrimaryExpression	1		3450427	1					
ANR	3450529	CompoundStatement		18:1:450:479	3450427	1					
ANR	3450530	IdentifierDeclStatement	int ttype = NTYPE ( qn -> target ) ;	3160:1:70149:70178	3450427	0	True				
ANR	3450531	IdentifierDecl	ttype = NTYPE ( qn -> target )		3450427	0					
ANR	3450532	IdentifierDeclType	int		3450427	0					
ANR	3450533	Identifier	ttype		3450427	1					
ANR	3450534	AssignmentExpression	ttype = NTYPE ( qn -> target )		3450427	2		=			
ANR	3450535	Identifier	ttype		3450427	0					
ANR	3450536	CallExpression	NTYPE ( qn -> target )		3450427	1					
ANR	3450537	Callee	NTYPE		3450427	0					
ANR	3450538	Identifier	NTYPE		3450427	0					
ANR	3450539	ArgumentList	qn -> target		3450427	1					
ANR	3450540	Argument	qn -> target		3450427	0					
ANR	3450541	PtrMemberAccess	qn -> target		3450427	0					
ANR	3450542	Identifier	qn		3450427	0					
ANR	3450543	Identifier	target		3450427	1					
ANR	3450544	IfStatement	if ( IS_NODE_TYPE_SIMPLE ( ttype ) )		3450427	1					
ANR	3450545	Condition	IS_NODE_TYPE_SIMPLE ( ttype )	3161:5:70185:70210	3450427	0	True				
ANR	3450546	CallExpression	IS_NODE_TYPE_SIMPLE ( ttype )		3450427	0					
ANR	3450547	Callee	IS_NODE_TYPE_SIMPLE		3450427	0					
ANR	3450548	Identifier	IS_NODE_TYPE_SIMPLE		3450427	0					
ANR	3450549	ArgumentList	ttype		3450427	1					
ANR	3450550	Argument	ttype		3450427	0					
ANR	3450551	Identifier	ttype		3450427	0					
ANR	3450552	CompoundStatement		20:3:519:530	3450427	1					
ANR	3450553	IdentifierDeclStatement	"Node * x , * y ;"	3162:3:70218:70229	3450427	0	True				
ANR	3450554	IdentifierDecl	* x		3450427	0					
ANR	3450555	IdentifierDeclType	Node *		3450427	0					
ANR	3450556	Identifier	x		3450427	1					
ANR	3450557	IdentifierDecl	* y		3450427	1					
ANR	3450558	IdentifierDeclType	Node *		3450427	0					
ANR	3450559	Identifier	y		3450427	1					
ANR	3450560	ExpressionStatement	"x = get_head_value_node ( qn -> target , 0 , reg )"	3163:3:70234:70277	3450427	1	True				
ANR	3450561	AssignmentExpression	"x = get_head_value_node ( qn -> target , 0 , reg )"		3450427	0		=			
ANR	3450562	Identifier	x		3450427	0					
ANR	3450563	CallExpression	"get_head_value_node ( qn -> target , 0 , reg )"		3450427	1					
ANR	3450564	Callee	get_head_value_node		3450427	0					
ANR	3450565	Identifier	get_head_value_node		3450427	0					
ANR	3450566	ArgumentList	qn -> target		3450427	1					
ANR	3450567	Argument	qn -> target		3450427	0					
ANR	3450568	PtrMemberAccess	qn -> target		3450427	0					
ANR	3450569	Identifier	qn		3450427	0					
ANR	3450570	Identifier	target		3450427	1					
ANR	3450571	Argument	0		3450427	1					
ANR	3450572	PrimaryExpression	0		3450427	0					
ANR	3450573	Argument	reg		3450427	2					
ANR	3450574	Identifier	reg		3450427	0					
ANR	3450575	IfStatement	if ( IS_NOT_NULL ( x ) )		3450427	2					
ANR	3450576	Condition	IS_NOT_NULL ( x )	3164:7:70286:70299	3450427	0	True				
ANR	3450577	CallExpression	IS_NOT_NULL ( x )		3450427	0					
ANR	3450578	Callee	IS_NOT_NULL		3450427	0					
ANR	3450579	Identifier	IS_NOT_NULL		3450427	0					
ANR	3450580	ArgumentList	x		3450427	1					
ANR	3450581	Argument	x		3450427	0					
ANR	3450582	Identifier	x		3450427	0					
ANR	3450583	CompoundStatement		22:23:603:603	3450427	1					
ANR	3450584	ExpressionStatement	"y = get_head_value_node ( next_node , 0 , reg )"	3165:5:70309:70352	3450427	0	True				
ANR	3450585	AssignmentExpression	"y = get_head_value_node ( next_node , 0 , reg )"		3450427	0		=			
ANR	3450586	Identifier	y		3450427	0					
ANR	3450587	CallExpression	"get_head_value_node ( next_node , 0 , reg )"		3450427	1					
ANR	3450588	Callee	get_head_value_node		3450427	0					
ANR	3450589	Identifier	get_head_value_node		3450427	0					
ANR	3450590	ArgumentList	next_node		3450427	1					
ANR	3450591	Argument	next_node		3450427	0					
ANR	3450592	Identifier	next_node		3450427	0					
ANR	3450593	Argument	0		3450427	1					
ANR	3450594	PrimaryExpression	0		3450427	0					
ANR	3450595	Argument	reg		3450427	2					
ANR	3450596	Identifier	reg		3450427	0					
ANR	3450597	IfStatement	"if ( IS_NOT_NULL ( y ) && is_not_included ( x , y , reg ) )"		3450427	1					
ANR	3450598	Condition	"IS_NOT_NULL ( y ) && is_not_included ( x , y , reg )"	3166:9:70363:70406	3450427	0	True				
ANR	3450599	AndExpression	"IS_NOT_NULL ( y ) && is_not_included ( x , y , reg )"		3450427	0		&&			
ANR	3450600	CallExpression	IS_NOT_NULL ( y )		3450427	0					
ANR	3450601	Callee	IS_NOT_NULL		3450427	0					
ANR	3450602	Identifier	IS_NOT_NULL		3450427	0					
ANR	3450603	ArgumentList	y		3450427	1					
ANR	3450604	Argument	y		3450427	0					
ANR	3450605	Identifier	y		3450427	0					
ANR	3450606	CallExpression	"is_not_included ( x , y , reg )"		3450427	1					
ANR	3450607	Callee	is_not_included		3450427	0					
ANR	3450608	Identifier	is_not_included		3450427	0					
ANR	3450609	ArgumentList	x		3450427	1					
ANR	3450610	Argument	x		3450427	0					
ANR	3450611	Identifier	x		3450427	0					
ANR	3450612	Argument	y		3450427	1					
ANR	3450613	Identifier	y		3450427	0					
ANR	3450614	Argument	reg		3450427	2					
ANR	3450615	Identifier	reg		3450427	0					
ANR	3450616	CompoundStatement		25:7:719:775	3450427	1					
ANR	3450617	IdentifierDeclStatement	Node * en = onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK ) ;	3167:7:70418:70474	3450427	0	True				
ANR	3450618	IdentifierDecl	* en = onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		3450427	0					
ANR	3450619	IdentifierDeclType	Node *		3450427	0					
ANR	3450620	Identifier	en		3450427	1					
ANR	3450621	AssignmentExpression	* en = onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		3450427	2		=			
ANR	3450622	Identifier	en		3450427	0					
ANR	3450623	CallExpression	onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		3450427	1					
ANR	3450624	Callee	onig_node_new_enclose		3450427	0					
ANR	3450625	Identifier	onig_node_new_enclose		3450427	0					
ANR	3450626	ArgumentList	ENCLOSE_STOP_BACKTRACK		3450427	1					
ANR	3450627	Argument	ENCLOSE_STOP_BACKTRACK		3450427	0					
ANR	3450628	Identifier	ENCLOSE_STOP_BACKTRACK		3450427	0					
ANR	3450629	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( en )	3168:7:70483:70511	3450427	1	True				
ANR	3450630	CallExpression	CHECK_NULL_RETURN_MEMERR ( en )		3450427	0					
ANR	3450631	Callee	CHECK_NULL_RETURN_MEMERR		3450427	0					
ANR	3450632	Identifier	CHECK_NULL_RETURN_MEMERR		3450427	0					
ANR	3450633	ArgumentList	en		3450427	1					
ANR	3450634	Argument	en		3450427	0					
ANR	3450635	Identifier	en		3450427	0					
ANR	3450636	ExpressionStatement	"SET_ENCLOSE_STATUS ( en , NST_STOP_BT_SIMPLE_REPEAT )"	3169:7:70520:70569	3450427	2	True				
ANR	3450637	CallExpression	"SET_ENCLOSE_STATUS ( en , NST_STOP_BT_SIMPLE_REPEAT )"		3450427	0					
ANR	3450638	Callee	SET_ENCLOSE_STATUS		3450427	0					
ANR	3450639	Identifier	SET_ENCLOSE_STATUS		3450427	0					
ANR	3450640	ArgumentList	en		3450427	1					
ANR	3450641	Argument	en		3450427	0					
ANR	3450642	Identifier	en		3450427	0					
ANR	3450643	Argument	NST_STOP_BT_SIMPLE_REPEAT		3450427	1					
ANR	3450644	Identifier	NST_STOP_BT_SIMPLE_REPEAT		3450427	0					
ANR	3450645	ExpressionStatement	"swap_node ( node , en )"	3170:7:70578:70597	3450427	3	True				
ANR	3450646	CallExpression	"swap_node ( node , en )"		3450427	0					
ANR	3450647	Callee	swap_node		3450427	0					
ANR	3450648	Identifier	swap_node		3450427	0					
ANR	3450649	ArgumentList	node		3450427	1					
ANR	3450650	Argument	node		3450427	0					
ANR	3450651	Identifier	node		3450427	0					
ANR	3450652	Argument	en		3450427	1					
ANR	3450653	Identifier	en		3450427	0					
ANR	3450654	ExpressionStatement	NENCLOSE ( node ) -> target = en	3171:7:70606:70633	3450427	4	True				
ANR	3450655	AssignmentExpression	NENCLOSE ( node ) -> target = en		3450427	0		=			
ANR	3450656	PtrMemberAccess	NENCLOSE ( node ) -> target		3450427	0					
ANR	3450657	CallExpression	NENCLOSE ( node )		3450427	0					
ANR	3450658	Callee	NENCLOSE		3450427	0					
ANR	3450659	Identifier	NENCLOSE		3450427	0					
ANR	3450660	ArgumentList	node		3450427	1					
ANR	3450661	Argument	node		3450427	0					
ANR	3450662	Identifier	node		3450427	0					
ANR	3450663	Identifier	target		3450427	1					
ANR	3450664	Identifier	en		3450427	1					
ANR	3450665	ElseStatement	else		3450427	0					
ANR	3450666	IfStatement	if ( type == NT_ENCLOSE )		3450427	0					
ANR	3450667	Condition	type == NT_ENCLOSE	3178:11:70679:70696	3450427	0	True				
ANR	3450668	EqualityExpression	type == NT_ENCLOSE		3450427	0		==			
ANR	3450669	Identifier	type		3450427	0					
ANR	3450670	Identifier	NT_ENCLOSE		3450427	1					
ANR	3450671	CompoundStatement		37:4:1006:1038	3450427	1					
ANR	3450672	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	3179:4:70705:70737	3450427	0	True				
ANR	3450673	IdentifierDecl	* en = NENCLOSE ( node )		3450427	0					
ANR	3450674	IdentifierDeclType	EncloseNode *		3450427	0					
ANR	3450675	Identifier	en		3450427	1					
ANR	3450676	AssignmentExpression	* en = NENCLOSE ( node )		3450427	2		=			
ANR	3450677	Identifier	en		3450427	0					
ANR	3450678	CallExpression	NENCLOSE ( node )		3450427	1					
ANR	3450679	Callee	NENCLOSE		3450427	0					
ANR	3450680	Identifier	NENCLOSE		3450427	0					
ANR	3450681	ArgumentList	node		3450427	1					
ANR	3450682	Argument	node		3450427	0					
ANR	3450683	Identifier	node		3450427	0					
ANR	3450684	IfStatement	if ( en -> type == ENCLOSE_MEMORY )		3450427	1					
ANR	3450685	Condition	en -> type == ENCLOSE_MEMORY	3180:8:70747:70772	3450427	0	True				
ANR	3450686	EqualityExpression	en -> type == ENCLOSE_MEMORY		3450427	0		==			
ANR	3450687	PtrMemberAccess	en -> type		3450427	0					
ANR	3450688	Identifier	en		3450427	0					
ANR	3450689	Identifier	type		3450427	1					
ANR	3450690	Identifier	ENCLOSE_MEMORY		3450427	1					
ANR	3450691	CompoundStatement		38:36:1076:1076	3450427	1					
ANR	3450692	ExpressionStatement	node = en -> target	3181:6:70783:70800	3450427	0	True				
ANR	3450693	AssignmentExpression	node = en -> target		3450427	0		=			
ANR	3450694	Identifier	node		3450427	0					
ANR	3450695	PtrMemberAccess	en -> target		3450427	1					
ANR	3450696	Identifier	en		3450427	0					
ANR	3450697	Identifier	target		3450427	1					
ANR	3450698	GotoStatement	goto retry ;	3182:6:70808:70818	3450427	1	True				
ANR	3450699	Identifier	retry		3450427	0					
ANR	3450700	ReturnStatement	return 0 ;	3185:2:70832:70840	3450427	4	True				
ANR	3450701	PrimaryExpression	0		3450427	0					
ANR	3450702	ReturnType	static int		3450427	1					
ANR	3450703	Identifier	next_setup		3450427	2					
ANR	3450704	ParameterList	"Node * node , Node * next_node , regex_t * reg"		3450427	3					
ANR	3450705	Parameter	Node * node	3142:11:69655:69664	3450427	0	True				
ANR	3450706	ParameterType	Node *		3450427	0					
ANR	3450707	Identifier	node		3450427	1					
ANR	3450708	Parameter	Node * next_node	3142:23:69667:69681	3450427	1	True				
ANR	3450709	ParameterType	Node *		3450427	0					
ANR	3450710	Identifier	next_node		3450427	1					
ANR	3450711	Parameter	regex_t * reg	3142:40:69684:69695	3450427	2	True				
ANR	3450712	ParameterType	regex_t *		3450427	0					
ANR	3450713	Identifier	reg		3450427	1					
ANR	3450714	CFGEntryNode	ENTRY		3450427		True				
ANR	3450715	CFGExitNode	EXIT		3450427		True				
ANR	3450716	Symbol	* qn		3450427						
ANR	3450717	Symbol	qn -> greedy		3450427						
ANR	3450718	Symbol	IS_NOT_NULL		3450427						
ANR	3450719	Symbol	next_node		3450427						
ANR	3450720	Symbol	* NENCLOSE		3450427						
ANR	3450721	Symbol	qn -> next_head_exact		3450427						
ANR	3450722	Symbol	type		3450427						
ANR	3450723	Symbol	NQTFR		3450427						
ANR	3450724	Symbol	onig_node_new_enclose		3450427						
ANR	3450725	Symbol	* en		3450427						
ANR	3450726	Symbol	qn -> lower		3450427						
ANR	3450727	Symbol	IS_NODE_TYPE_SIMPLE		3450427						
ANR	3450728	Symbol	reg		3450427						
ANR	3450729	Symbol	NT_QTFR		3450427						
ANR	3450730	Symbol	is_not_included		3450427						
ANR	3450731	Symbol	NENCLOSE		3450427						
ANR	3450732	Symbol	ENCLOSE_MEMORY		3450427						
ANR	3450733	Symbol	en -> type		3450427						
ANR	3450734	Symbol	IS_REPEAT_INFINITE		3450427						
ANR	3450735	Symbol	qn		3450427						
ANR	3450736	Symbol	NSTR ( n ) -> s		3450427						
ANR	3450737	Symbol	* * NSTR		3450427						
ANR	3450738	Symbol	NSTR		3450427						
ANR	3450739	Symbol	ENCLOSE_STOP_BACKTRACK		3450427						
ANR	3450740	Symbol	en		3450427						
ANR	3450741	Symbol	* NSTR		3450427						
ANR	3450742	Symbol	n		3450427						
ANR	3450743	Symbol	qn -> target		3450427						
ANR	3450744	Symbol	NENCLOSE ( node ) -> target		3450427						
ANR	3450745	Symbol	get_head_value_node		3450427						
ANR	3450746	Symbol	node		3450427						
ANR	3450747	Symbol	qn -> upper		3450427						
ANR	3450748	Symbol	NST_STOP_BT_SIMPLE_REPEAT		3450427						
ANR	3450749	Symbol	NT_ENCLOSE		3450427						
ANR	3450750	Symbol	en -> target		3450427						
ANR	3450751	Symbol	ttype		3450427						
ANR	3450752	Symbol	x		3450427						
ANR	3450753	Symbol	y		3450427						
ANR	3450754	Symbol	NTYPE		3450427						
ANR	3450755	Symbol	* NSTR ( n ) -> s		3450427						
ANR	3450756	Function	update_string_node_case_fold	3189:0:70846:71726							
ANR	3450757	FunctionDef	"update_string_node_case_fold (regex_t * reg , Node * node)"		3450756	0					
ANR	3450758	CompoundStatement		3191:0:70912:71726	3450756	0					
ANR	3450759	IdentifierDeclStatement	"UChar * p , * end , buf [ ONIGENC_MBC_CASE_FOLD_MAXLEN ] ;"	3192:2:70916:70965	3450756	0	True				
ANR	3450760	IdentifierDecl	* p		3450756	0					
ANR	3450761	IdentifierDeclType	UChar *		3450756	0					
ANR	3450762	Identifier	p		3450756	1					
ANR	3450763	IdentifierDecl	* end		3450756	1					
ANR	3450764	IdentifierDeclType	UChar *		3450756	0					
ANR	3450765	Identifier	end		3450756	1					
ANR	3450766	IdentifierDecl	buf [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3450756	2					
ANR	3450767	IdentifierDeclType	UChar [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3450756	0					
ANR	3450768	Identifier	buf		3450756	1					
ANR	3450769	Identifier	ONIGENC_MBC_CASE_FOLD_MAXLEN		3450756	2					
ANR	3450770	IdentifierDeclStatement	"UChar * sbuf , * ebuf , * sp ;"	3193:2:70969:70992	3450756	1	True				
ANR	3450771	IdentifierDecl	* sbuf		3450756	0					
ANR	3450772	IdentifierDeclType	UChar *		3450756	0					
ANR	3450773	Identifier	sbuf		3450756	1					
ANR	3450774	IdentifierDecl	* ebuf		3450756	1					
ANR	3450775	IdentifierDeclType	UChar *		3450756	0					
ANR	3450776	Identifier	ebuf		3450756	1					
ANR	3450777	IdentifierDecl	* sp		3450756	2					
ANR	3450778	IdentifierDeclType	UChar *		3450756	0					
ANR	3450779	Identifier	sp		3450756	1					
ANR	3450780	IdentifierDeclStatement	"int r , i , len , sbuf_size ;"	3194:2:70996:71020	3450756	2	True				
ANR	3450781	IdentifierDecl	r		3450756	0					
ANR	3450782	IdentifierDeclType	int		3450756	0					
ANR	3450783	Identifier	r		3450756	1					
ANR	3450784	IdentifierDecl	i		3450756	1					
ANR	3450785	IdentifierDeclType	int		3450756	0					
ANR	3450786	Identifier	i		3450756	1					
ANR	3450787	IdentifierDecl	len		3450756	2					
ANR	3450788	IdentifierDeclType	int		3450756	0					
ANR	3450789	Identifier	len		3450756	1					
ANR	3450790	IdentifierDecl	sbuf_size		3450756	3					
ANR	3450791	IdentifierDeclType	int		3450756	0					
ANR	3450792	Identifier	sbuf_size		3450756	1					
ANR	3450793	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	3195:2:71024:71048	3450756	3	True				
ANR	3450794	IdentifierDecl	* sn = NSTR ( node )		3450756	0					
ANR	3450795	IdentifierDeclType	StrNode *		3450756	0					
ANR	3450796	Identifier	sn		3450756	1					
ANR	3450797	AssignmentExpression	* sn = NSTR ( node )		3450756	2		=			
ANR	3450798	Identifier	sn		3450756	0					
ANR	3450799	CallExpression	NSTR ( node )		3450756	1					
ANR	3450800	Callee	NSTR		3450756	0					
ANR	3450801	Identifier	NSTR		3450756	0					
ANR	3450802	ArgumentList	node		3450756	1					
ANR	3450803	Argument	node		3450756	0					
ANR	3450804	Identifier	node		3450756	0					
ANR	3450805	ExpressionStatement	end = sn -> end	3197:2:71053:71066	3450756	4	True				
ANR	3450806	AssignmentExpression	end = sn -> end		3450756	0		=			
ANR	3450807	Identifier	end		3450756	0					
ANR	3450808	PtrMemberAccess	sn -> end		3450756	1					
ANR	3450809	Identifier	sn		3450756	0					
ANR	3450810	Identifier	end		3450756	1					
ANR	3450811	ExpressionStatement	sbuf_size = ( end - sn -> s ) * 2	3198:2:71070:71099	3450756	5	True				
ANR	3450812	AssignmentExpression	sbuf_size = ( end - sn -> s ) * 2		3450756	0		=			
ANR	3450813	Identifier	sbuf_size		3450756	0					
ANR	3450814	MultiplicativeExpression	( end - sn -> s ) * 2		3450756	1		*			
ANR	3450815	AdditiveExpression	end - sn -> s		3450756	0		-			
ANR	3450816	Identifier	end		3450756	0					
ANR	3450817	PtrMemberAccess	sn -> s		3450756	1					
ANR	3450818	Identifier	sn		3450756	0					
ANR	3450819	Identifier	s		3450756	1					
ANR	3450820	PrimaryExpression	2		3450756	1					
ANR	3450821	ExpressionStatement	sbuf = ( UChar * ) xmalloc ( sbuf_size )	3199:2:71103:71137	3450756	6	True				
ANR	3450822	AssignmentExpression	sbuf = ( UChar * ) xmalloc ( sbuf_size )		3450756	0		=			
ANR	3450823	Identifier	sbuf		3450756	0					
ANR	3450824	CastExpression	( UChar * ) xmalloc ( sbuf_size )		3450756	1					
ANR	3450825	CastTarget	UChar *		3450756	0					
ANR	3450826	CallExpression	xmalloc ( sbuf_size )		3450756	1					
ANR	3450827	Callee	xmalloc		3450756	0					
ANR	3450828	Identifier	xmalloc		3450756	0					
ANR	3450829	ArgumentList	sbuf_size		3450756	1					
ANR	3450830	Argument	sbuf_size		3450756	0					
ANR	3450831	Identifier	sbuf_size		3450756	0					
ANR	3450832	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( sbuf )	3200:2:71141:71171	3450756	7	True				
ANR	3450833	CallExpression	CHECK_NULL_RETURN_MEMERR ( sbuf )		3450756	0					
ANR	3450834	Callee	CHECK_NULL_RETURN_MEMERR		3450756	0					
ANR	3450835	Identifier	CHECK_NULL_RETURN_MEMERR		3450756	0					
ANR	3450836	ArgumentList	sbuf		3450756	1					
ANR	3450837	Argument	sbuf		3450756	0					
ANR	3450838	Identifier	sbuf		3450756	0					
ANR	3450839	ExpressionStatement	ebuf = sbuf + sbuf_size	3201:2:71175:71198	3450756	8	True				
ANR	3450840	AssignmentExpression	ebuf = sbuf + sbuf_size		3450756	0		=			
ANR	3450841	Identifier	ebuf		3450756	0					
ANR	3450842	AdditiveExpression	sbuf + sbuf_size		3450756	1		+			
ANR	3450843	Identifier	sbuf		3450756	0					
ANR	3450844	Identifier	sbuf_size		3450756	1					
ANR	3450845	ExpressionStatement	sp = sbuf	3203:2:71203:71212	3450756	9	True				
ANR	3450846	AssignmentExpression	sp = sbuf		3450756	0		=			
ANR	3450847	Identifier	sp		3450756	0					
ANR	3450848	Identifier	sbuf		3450756	1					
ANR	3450849	ExpressionStatement	p = sn -> s	3204:2:71216:71225	3450756	10	True				
ANR	3450850	AssignmentExpression	p = sn -> s		3450756	0		=			
ANR	3450851	Identifier	p		3450756	0					
ANR	3450852	PtrMemberAccess	sn -> s		3450756	1					
ANR	3450853	Identifier	sn		3450756	0					
ANR	3450854	Identifier	s		3450756	1					
ANR	3450855	WhileStatement	while ( p < end )		3450756	11					
ANR	3450856	Condition	p < end	3205:9:71236:71242	3450756	0	True				
ANR	3450857	RelationalExpression	p < end		3450756	0		<			
ANR	3450858	Identifier	p		3450756	0					
ANR	3450859	Identifier	end		3450756	1					
ANR	3450860	CompoundStatement		15:18:332:332	3450756	1					
ANR	3450861	ExpressionStatement	"len = ONIGENC_MBC_CASE_FOLD ( reg -> enc , reg -> case_fold_flag , & p , end , buf )"	3206:4:71251:71323	3450756	0	True				
ANR	3450862	AssignmentExpression	"len = ONIGENC_MBC_CASE_FOLD ( reg -> enc , reg -> case_fold_flag , & p , end , buf )"		3450756	0		=			
ANR	3450863	Identifier	len		3450756	0					
ANR	3450864	CallExpression	"ONIGENC_MBC_CASE_FOLD ( reg -> enc , reg -> case_fold_flag , & p , end , buf )"		3450756	1					
ANR	3450865	Callee	ONIGENC_MBC_CASE_FOLD		3450756	0					
ANR	3450866	Identifier	ONIGENC_MBC_CASE_FOLD		3450756	0					
ANR	3450867	ArgumentList	reg -> enc		3450756	1					
ANR	3450868	Argument	reg -> enc		3450756	0					
ANR	3450869	PtrMemberAccess	reg -> enc		3450756	0					
ANR	3450870	Identifier	reg		3450756	0					
ANR	3450871	Identifier	enc		3450756	1					
ANR	3450872	Argument	reg -> case_fold_flag		3450756	1					
ANR	3450873	PtrMemberAccess	reg -> case_fold_flag		3450756	0					
ANR	3450874	Identifier	reg		3450756	0					
ANR	3450875	Identifier	case_fold_flag		3450756	1					
ANR	3450876	Argument	& p		3450756	2					
ANR	3450877	UnaryOperationExpression	& p		3450756	0					
ANR	3450878	UnaryOperator	&		3450756	0					
ANR	3450879	Identifier	p		3450756	1					
ANR	3450880	Argument	end		3450756	3					
ANR	3450881	Identifier	end		3450756	0					
ANR	3450882	Argument	buf		3450756	4					
ANR	3450883	Identifier	buf		3450756	0					
ANR	3450884	ForStatement	for ( i = 0 ; i < len ; i ++ )		3450756	1					
ANR	3450885	ForInit	i = 0 ;	3207:9:71334:71339	3450756	0	True				
ANR	3450886	AssignmentExpression	i = 0		3450756	0		=			
ANR	3450887	Identifier	i		3450756	0					
ANR	3450888	PrimaryExpression	0		3450756	1					
ANR	3450889	Condition	i < len	3207:16:71341:71347	3450756	1	True				
ANR	3450890	RelationalExpression	i < len		3450756	0		<			
ANR	3450891	Identifier	i		3450756	0					
ANR	3450892	Identifier	len		3450756	1					
ANR	3450893	PostIncDecOperationExpression	i ++	3207:25:71350:71352	3450756	2	True				
ANR	3450894	Identifier	i		3450756	0					
ANR	3450895	IncDec	++		3450756	1					
ANR	3450896	CompoundStatement		17:30:442:442	3450756	3					
ANR	3450897	IfStatement	if ( sp >= ebuf )		3450756	0					
ANR	3450898	Condition	sp >= ebuf	3208:10:71367:71376	3450756	0	True				
ANR	3450899	RelationalExpression	sp >= ebuf		3450756	0		>=			
ANR	3450900	Identifier	sp		3450756	0					
ANR	3450901	Identifier	ebuf		3450756	1					
ANR	3450902	CompoundStatement		18:22:466:466	3450756	1					
ANR	3450903	ExpressionStatement	"sbuf = ( UChar * ) xrealloc ( sbuf , sbuf_size * 2 )"	3209:8:71389:71434	3450756	0	True				
ANR	3450904	AssignmentExpression	"sbuf = ( UChar * ) xrealloc ( sbuf , sbuf_size * 2 )"		3450756	0		=			
ANR	3450905	Identifier	sbuf		3450756	0					
ANR	3450906	CastExpression	"( UChar * ) xrealloc ( sbuf , sbuf_size * 2 )"		3450756	1					
ANR	3450907	CastTarget	UChar *		3450756	0					
ANR	3450908	CallExpression	"xrealloc ( sbuf , sbuf_size * 2 )"		3450756	1					
ANR	3450909	Callee	xrealloc		3450756	0					
ANR	3450910	Identifier	xrealloc		3450756	0					
ANR	3450911	ArgumentList	sbuf		3450756	1					
ANR	3450912	Argument	sbuf		3450756	0					
ANR	3450913	Identifier	sbuf		3450756	0					
ANR	3450914	Argument	sbuf_size * 2		3450756	1					
ANR	3450915	MultiplicativeExpression	sbuf_size * 2		3450756	0		*			
ANR	3450916	Identifier	sbuf_size		3450756	0					
ANR	3450917	PrimaryExpression	2		3450756	1					
ANR	3450918	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( sbuf )	3210:8:71444:71474	3450756	1	True				
ANR	3450919	CallExpression	CHECK_NULL_RETURN_MEMERR ( sbuf )		3450756	0					
ANR	3450920	Callee	CHECK_NULL_RETURN_MEMERR		3450756	0					
ANR	3450921	Identifier	CHECK_NULL_RETURN_MEMERR		3450756	0					
ANR	3450922	ArgumentList	sbuf		3450756	1					
ANR	3450923	Argument	sbuf		3450756	0					
ANR	3450924	Identifier	sbuf		3450756	0					
ANR	3450925	ExpressionStatement	sp = sbuf + sbuf_size	3211:8:71484:71505	3450756	2	True				
ANR	3450926	AssignmentExpression	sp = sbuf + sbuf_size		3450756	0		=			
ANR	3450927	Identifier	sp		3450756	0					
ANR	3450928	AdditiveExpression	sbuf + sbuf_size		3450756	1		+			
ANR	3450929	Identifier	sbuf		3450756	0					
ANR	3450930	Identifier	sbuf_size		3450756	1					
ANR	3450931	ExpressionStatement	sbuf_size *= 2	3212:8:71515:71529	3450756	3	True				
ANR	3450932	AssignmentExpression	sbuf_size *= 2		3450756	0		*=			
ANR	3450933	Identifier	sbuf_size		3450756	0					
ANR	3450934	PrimaryExpression	2		3450756	1					
ANR	3450935	ExpressionStatement	ebuf = sbuf + sbuf_size	3213:8:71539:71562	3450756	4	True				
ANR	3450936	AssignmentExpression	ebuf = sbuf + sbuf_size		3450756	0		=			
ANR	3450937	Identifier	ebuf		3450756	0					
ANR	3450938	AdditiveExpression	sbuf + sbuf_size		3450756	1		+			
ANR	3450939	Identifier	sbuf		3450756	0					
ANR	3450940	Identifier	sbuf_size		3450756	1					
ANR	3450941	ExpressionStatement	* sp ++ = buf [ i ]	3216:6:71579:71593	3450756	1	True				
ANR	3450942	AssignmentExpression	* sp ++ = buf [ i ]		3450756	0		=			
ANR	3450943	UnaryOperationExpression	* sp ++		3450756	0					
ANR	3450944	UnaryOperator	*		3450756	0					
ANR	3450945	PostIncDecOperationExpression	sp ++		3450756	1					
ANR	3450946	Identifier	sp		3450756	0					
ANR	3450947	IncDec	++		3450756	1					
ANR	3450948	ArrayIndexing	buf [ i ]		3450756	1					
ANR	3450949	Identifier	buf		3450756	0					
ANR	3450950	Identifier	i		3450756	1					
ANR	3450951	ExpressionStatement	"r = onig_node_str_set ( node , sbuf , sp )"	3220:2:71608:71645	3450756	12	True				
ANR	3450952	AssignmentExpression	"r = onig_node_str_set ( node , sbuf , sp )"		3450756	0		=			
ANR	3450953	Identifier	r		3450756	0					
ANR	3450954	CallExpression	"onig_node_str_set ( node , sbuf , sp )"		3450756	1					
ANR	3450955	Callee	onig_node_str_set		3450756	0					
ANR	3450956	Identifier	onig_node_str_set		3450756	0					
ANR	3450957	ArgumentList	node		3450756	1					
ANR	3450958	Argument	node		3450756	0					
ANR	3450959	Identifier	node		3450756	0					
ANR	3450960	Argument	sbuf		3450756	1					
ANR	3450961	Identifier	sbuf		3450756	0					
ANR	3450962	Argument	sp		3450756	2					
ANR	3450963	Identifier	sp		3450756	0					
ANR	3450964	IfStatement	if ( r != 0 )		3450756	13					
ANR	3450965	Condition	r != 0	3221:6:71653:71658	3450756	0	True				
ANR	3450966	EqualityExpression	r != 0		3450756	0		!=			
ANR	3450967	Identifier	r		3450756	0					
ANR	3450968	PrimaryExpression	0		3450756	1					
ANR	3450969	CompoundStatement		31:14:748:748	3450756	1					
ANR	3450970	ExpressionStatement	xfree ( sbuf )	3222:4:71667:71678	3450756	0	True				
ANR	3450971	CallExpression	xfree ( sbuf )		3450756	0					
ANR	3450972	Callee	xfree		3450756	0					
ANR	3450973	Identifier	xfree		3450756	0					
ANR	3450974	ArgumentList	sbuf		3450756	1					
ANR	3450975	Argument	sbuf		3450756	0					
ANR	3450976	Identifier	sbuf		3450756	0					
ANR	3450977	ReturnStatement	return r ;	3223:4:71684:71692	3450756	1	True				
ANR	3450978	Identifier	r		3450756	0					
ANR	3450979	ExpressionStatement	xfree ( sbuf )	3226:2:71701:71712	3450756	14	True				
ANR	3450980	CallExpression	xfree ( sbuf )		3450756	0					
ANR	3450981	Callee	xfree		3450756	0					
ANR	3450982	Identifier	xfree		3450756	0					
ANR	3450983	ArgumentList	sbuf		3450756	1					
ANR	3450984	Argument	sbuf		3450756	0					
ANR	3450985	Identifier	sbuf		3450756	0					
ANR	3450986	ReturnStatement	return 0 ;	3227:2:71716:71724	3450756	15	True				
ANR	3450987	PrimaryExpression	0		3450756	0					
ANR	3450988	ReturnType	static int		3450756	1					
ANR	3450989	Identifier	update_string_node_case_fold		3450756	2					
ANR	3450990	ParameterList	"regex_t * reg , Node * node"		3450756	3					
ANR	3450991	Parameter	regex_t * reg	3190:29:70886:70897	3450756	0	True				
ANR	3450992	ParameterType	regex_t *		3450756	0					
ANR	3450993	Identifier	reg		3450756	1					
ANR	3450994	Parameter	Node * node	3190:43:70900:70909	3450756	1	True				
ANR	3450995	ParameterType	Node *		3450756	0					
ANR	3450996	Identifier	node		3450756	1					
ANR	3450997	CFGEntryNode	ENTRY		3450756		True				
ANR	3450998	CFGExitNode	EXIT		3450756		True				
ANR	3450999	Symbol	ebuf		3450756						
ANR	3451000	Symbol	* sn		3450756						
ANR	3451001	Symbol	sn -> s		3450756						
ANR	3451002	Symbol	len		3450756						
ANR	3451003	Symbol	reg		3450756						
ANR	3451004	Symbol	sbuf		3450756						
ANR	3451005	Symbol	xmalloc		3450756						
ANR	3451006	Symbol	end		3450756						
ANR	3451007	Symbol	sn		3450756						
ANR	3451008	Symbol	sn -> end		3450756						
ANR	3451009	Symbol	xrealloc		3450756						
ANR	3451010	Symbol	sp		3450756						
ANR	3451011	Symbol	* buf		3450756						
ANR	3451012	Symbol	* sp ++		3450756						
ANR	3451013	Symbol	onig_node_str_set		3450756						
ANR	3451014	Symbol	NSTR		3450756						
ANR	3451015	Symbol	sbuf_size		3450756						
ANR	3451016	Symbol	i		3450756						
ANR	3451017	Symbol	reg -> enc		3450756						
ANR	3451018	Symbol	p		3450756						
ANR	3451019	Symbol	node		3450756						
ANR	3451020	Symbol	buf		3450756						
ANR	3451021	Symbol	r		3450756						
ANR	3451022	Symbol	* i		3450756						
ANR	3451023	Symbol	ONIGENC_MBC_CASE_FOLD		3450756						
ANR	3451024	Symbol	& p		3450756						
ANR	3451025	Symbol	reg -> case_fold_flag		3450756						
ANR	3451026	Symbol	* reg		3450756						
ANR	3451027	Function	expand_case_fold_make_rem_string	3230:0:71729:72138							
ANR	3451028	FunctionDef	"expand_case_fold_make_rem_string (Node * * rnode , UChar * s , UChar * end , regex_t * reg)"		3451027	0					
ANR	3451029	CompoundStatement		3233:0:71828:72138	3451027	0					
ANR	3451030	IdentifierDeclStatement	int r ;	3234:2:71832:71837	3451027	0	True				
ANR	3451031	IdentifierDecl	r		3451027	0					
ANR	3451032	IdentifierDeclType	int		3451027	0					
ANR	3451033	Identifier	r		3451027	1					
ANR	3451034	IdentifierDeclStatement	Node * node ;	3235:2:71841:71851	3451027	1	True				
ANR	3451035	IdentifierDecl	* node		3451027	0					
ANR	3451036	IdentifierDeclType	Node *		3451027	0					
ANR	3451037	Identifier	node		3451027	1					
ANR	3451038	ExpressionStatement	"node = onig_node_new_str ( s , end )"	3237:2:71856:71888	3451027	2	True				
ANR	3451039	AssignmentExpression	"node = onig_node_new_str ( s , end )"		3451027	0		=			
ANR	3451040	Identifier	node		3451027	0					
ANR	3451041	CallExpression	"onig_node_new_str ( s , end )"		3451027	1					
ANR	3451042	Callee	onig_node_new_str		3451027	0					
ANR	3451043	Identifier	onig_node_new_str		3451027	0					
ANR	3451044	ArgumentList	s		3451027	1					
ANR	3451045	Argument	s		3451027	0					
ANR	3451046	Identifier	s		3451027	0					
ANR	3451047	Argument	end		3451027	1					
ANR	3451048	Identifier	end		3451027	0					
ANR	3451049	IfStatement	if ( IS_NULL ( node ) )		3451027	3					
ANR	3451050	Condition	IS_NULL ( node )	3238:6:71896:71908	3451027	0	True				
ANR	3451051	CallExpression	IS_NULL ( node )		3451027	0					
ANR	3451052	Callee	IS_NULL		3451027	0					
ANR	3451053	Identifier	IS_NULL		3451027	0					
ANR	3451054	ArgumentList	node		3451027	1					
ANR	3451055	Argument	node		3451027	0					
ANR	3451056	Identifier	node		3451027	0					
ANR	3451057	ReturnStatement	return ONIGERR_MEMORY ;	3238:21:71911:71932	3451027	1	True				
ANR	3451058	Identifier	ONIGERR_MEMORY		3451027	0					
ANR	3451059	ExpressionStatement	"r = update_string_node_case_fold ( reg , node )"	3240:2:71937:71980	3451027	4	True				
ANR	3451060	AssignmentExpression	"r = update_string_node_case_fold ( reg , node )"		3451027	0		=			
ANR	3451061	Identifier	r		3451027	0					
ANR	3451062	CallExpression	"update_string_node_case_fold ( reg , node )"		3451027	1					
ANR	3451063	Callee	update_string_node_case_fold		3451027	0					
ANR	3451064	Identifier	update_string_node_case_fold		3451027	0					
ANR	3451065	ArgumentList	reg		3451027	1					
ANR	3451066	Argument	reg		3451027	0					
ANR	3451067	Identifier	reg		3451027	0					
ANR	3451068	Argument	node		3451027	1					
ANR	3451069	Identifier	node		3451027	0					
ANR	3451070	IfStatement	if ( r != 0 )		3451027	5					
ANR	3451071	Condition	r != 0	3241:6:71988:71993	3451027	0	True				
ANR	3451072	EqualityExpression	r != 0		3451027	0		!=			
ANR	3451073	Identifier	r		3451027	0					
ANR	3451074	PrimaryExpression	0		3451027	1					
ANR	3451075	CompoundStatement		9:14:167:167	3451027	1					
ANR	3451076	ExpressionStatement	onig_node_free ( node )	3242:4:72002:72022	3451027	0	True				
ANR	3451077	CallExpression	onig_node_free ( node )		3451027	0					
ANR	3451078	Callee	onig_node_free		3451027	0					
ANR	3451079	Identifier	onig_node_free		3451027	0					
ANR	3451080	ArgumentList	node		3451027	1					
ANR	3451081	Argument	node		3451027	0					
ANR	3451082	Identifier	node		3451027	0					
ANR	3451083	ReturnStatement	return r ;	3243:4:72028:72036	3451027	1	True				
ANR	3451084	Identifier	r		3451027	0					
ANR	3451085	ExpressionStatement	NSTRING_SET_AMBIG ( node )	3246:2:72045:72068	3451027	6	True				
ANR	3451086	CallExpression	NSTRING_SET_AMBIG ( node )		3451027	0					
ANR	3451087	Callee	NSTRING_SET_AMBIG		3451027	0					
ANR	3451088	Identifier	NSTRING_SET_AMBIG		3451027	0					
ANR	3451089	ArgumentList	node		3451027	1					
ANR	3451090	Argument	node		3451027	0					
ANR	3451091	Identifier	node		3451027	0					
ANR	3451092	ExpressionStatement	NSTRING_SET_DONT_GET_OPT_INFO ( node )	3247:2:72072:72107	3451027	7	True				
ANR	3451093	CallExpression	NSTRING_SET_DONT_GET_OPT_INFO ( node )		3451027	0					
ANR	3451094	Callee	NSTRING_SET_DONT_GET_OPT_INFO		3451027	0					
ANR	3451095	Identifier	NSTRING_SET_DONT_GET_OPT_INFO		3451027	0					
ANR	3451096	ArgumentList	node		3451027	1					
ANR	3451097	Argument	node		3451027	0					
ANR	3451098	Identifier	node		3451027	0					
ANR	3451099	ExpressionStatement	* rnode = node	3248:2:72111:72124	3451027	8	True				
ANR	3451100	AssignmentExpression	* rnode = node		3451027	0		=			
ANR	3451101	UnaryOperationExpression	* rnode		3451027	0					
ANR	3451102	UnaryOperator	*		3451027	0					
ANR	3451103	Identifier	rnode		3451027	1					
ANR	3451104	Identifier	node		3451027	1					
ANR	3451105	ReturnStatement	return 0 ;	3249:2:72128:72136	3451027	9	True				
ANR	3451106	PrimaryExpression	0		3451027	0					
ANR	3451107	ReturnType	static int		3451027	1					
ANR	3451108	Identifier	expand_case_fold_make_rem_string		3451027	2					
ANR	3451109	ParameterList	"Node * * rnode , UChar * s , UChar * end , regex_t * reg"		3451027	3					
ANR	3451110	Parameter	Node * * rnode	3231:33:71773:71784	3451027	0	True				
ANR	3451111	ParameterType	Node * *		3451027	0					
ANR	3451112	Identifier	rnode		3451027	1					
ANR	3451113	Parameter	UChar * s	3231:47:71787:71794	3451027	1	True				
ANR	3451114	ParameterType	UChar *		3451027	0					
ANR	3451115	Identifier	s		3451027	1					
ANR	3451116	Parameter	UChar * end	3231:57:71797:71806	3451027	2	True				
ANR	3451117	ParameterType	UChar *		3451027	0					
ANR	3451118	Identifier	end		3451027	1					
ANR	3451119	Parameter	regex_t * reg	3232:5:71814:71825	3451027	3	True				
ANR	3451120	ParameterType	regex_t *		3451027	0					
ANR	3451121	Identifier	reg		3451027	1					
ANR	3451122	CFGEntryNode	ENTRY		3451027		True				
ANR	3451123	CFGExitNode	EXIT		3451027		True				
ANR	3451124	Symbol	node		3451027						
ANR	3451125	Symbol	r		3451027						
ANR	3451126	Symbol	s		3451027						
ANR	3451127	Symbol	update_string_node_case_fold		3451027						
ANR	3451128	Symbol	IS_NULL		3451027						
ANR	3451129	Symbol	* rnode		3451027						
ANR	3451130	Symbol	reg		3451027						
ANR	3451131	Symbol	ONIGERR_MEMORY		3451027						
ANR	3451132	Symbol	end		3451027						
ANR	3451133	Symbol	onig_node_new_str		3451027						
ANR	3451134	Symbol	rnode		3451027						
ANR	3451135	Function	expand_case_fold_string_alt	3252:0:72141:74640							
ANR	3451136	FunctionDef	"expand_case_fold_string_alt (int item_num , OnigCaseFoldCodeItem items [ ] , UChar * p , int slen , UChar * end , regex_t * reg , Node * * rnode)"		3451135	0					
ANR	3451137	CompoundStatement		3256:0:72298:74640	3451135	0					
ANR	3451138	IdentifierDeclStatement	"int r , i , j , len , varlen ;"	3257:2:72302:72326	3451135	0	True				
ANR	3451139	IdentifierDecl	r		3451135	0					
ANR	3451140	IdentifierDeclType	int		3451135	0					
ANR	3451141	Identifier	r		3451135	1					
ANR	3451142	IdentifierDecl	i		3451135	1					
ANR	3451143	IdentifierDeclType	int		3451135	0					
ANR	3451144	Identifier	i		3451135	1					
ANR	3451145	IdentifierDecl	j		3451135	2					
ANR	3451146	IdentifierDeclType	int		3451135	0					
ANR	3451147	Identifier	j		3451135	1					
ANR	3451148	IdentifierDecl	len		3451135	3					
ANR	3451149	IdentifierDeclType	int		3451135	0					
ANR	3451150	Identifier	len		3451135	1					
ANR	3451151	IdentifierDecl	varlen		3451135	4					
ANR	3451152	IdentifierDeclType	int		3451135	0					
ANR	3451153	Identifier	varlen		3451135	1					
ANR	3451154	IdentifierDeclStatement	"Node * anode , * var_anode , * snode , * xnode , * an ;"	3258:2:72330:72374	3451135	1	True				
ANR	3451155	IdentifierDecl	* anode		3451135	0					
ANR	3451156	IdentifierDeclType	Node *		3451135	0					
ANR	3451157	Identifier	anode		3451135	1					
ANR	3451158	IdentifierDecl	* var_anode		3451135	1					
ANR	3451159	IdentifierDeclType	Node *		3451135	0					
ANR	3451160	Identifier	var_anode		3451135	1					
ANR	3451161	IdentifierDecl	* snode		3451135	2					
ANR	3451162	IdentifierDeclType	Node *		3451135	0					
ANR	3451163	Identifier	snode		3451135	1					
ANR	3451164	IdentifierDecl	* xnode		3451135	3					
ANR	3451165	IdentifierDeclType	Node *		3451135	0					
ANR	3451166	Identifier	xnode		3451135	1					
ANR	3451167	IdentifierDecl	* an		3451135	4					
ANR	3451168	IdentifierDeclType	Node *		3451135	0					
ANR	3451169	Identifier	an		3451135	1					
ANR	3451170	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	3259:2:72378:72415	3451135	2	True				
ANR	3451171	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3451135	0					
ANR	3451172	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3451135	0					
ANR	3451173	Identifier	buf		3451135	1					
ANR	3451174	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		3451135	2					
ANR	3451175	ExpressionStatement	* rnode = var_anode = NULL_NODE	3261:2:72420:72450	3451135	3	True				
ANR	3451176	AssignmentExpression	* rnode = var_anode = NULL_NODE		3451135	0		=			
ANR	3451177	UnaryOperationExpression	* rnode		3451135	0					
ANR	3451178	UnaryOperator	*		3451135	0					
ANR	3451179	Identifier	rnode		3451135	1					
ANR	3451180	AssignmentExpression	var_anode = NULL_NODE		3451135	1		=			
ANR	3451181	Identifier	var_anode		3451135	0					
ANR	3451182	Identifier	NULL_NODE		3451135	1					
ANR	3451183	ExpressionStatement	varlen = 0	3263:2:72455:72465	3451135	4	True				
ANR	3451184	AssignmentExpression	varlen = 0		3451135	0		=			
ANR	3451185	Identifier	varlen		3451135	0					
ANR	3451186	PrimaryExpression	0		3451135	1					
ANR	3451187	ForStatement	for ( i = 0 ; i < item_num ; i ++ )		3451135	5					
ANR	3451188	ForInit	i = 0 ;	3264:7:72474:72479	3451135	0	True				
ANR	3451189	AssignmentExpression	i = 0		3451135	0		=			
ANR	3451190	Identifier	i		3451135	0					
ANR	3451191	PrimaryExpression	0		3451135	1					
ANR	3451192	Condition	i < item_num	3264:14:72481:72492	3451135	1	True				
ANR	3451193	RelationalExpression	i < item_num		3451135	0		<			
ANR	3451194	Identifier	i		3451135	0					
ANR	3451195	Identifier	item_num		3451135	1					
ANR	3451196	PostIncDecOperationExpression	i ++	3264:28:72495:72497	3451135	2	True				
ANR	3451197	Identifier	i		3451135	0					
ANR	3451198	IncDec	++		3451135	1					
ANR	3451199	CompoundStatement		9:33:201:201	3451135	3					
ANR	3451200	IfStatement	if ( items [ i ] . byte_len != slen )		3451135	0					
ANR	3451201	Condition	items [ i ] . byte_len != slen	3265:8:72510:72534	3451135	0	True				
ANR	3451202	EqualityExpression	items [ i ] . byte_len != slen		3451135	0		!=			
ANR	3451203	MemberAccess	items [ i ] . byte_len		3451135	0					
ANR	3451204	ArrayIndexing	items [ i ]		3451135	0					
ANR	3451205	Identifier	items		3451135	0					
ANR	3451206	Identifier	i		3451135	1					
ANR	3451207	Identifier	byte_len		3451135	1					
ANR	3451208	Identifier	slen		3451135	1					
ANR	3451209	CompoundStatement		10:35:238:238	3451135	1					
ANR	3451210	ExpressionStatement	varlen = 1	3266:6:72545:72555	3451135	0	True				
ANR	3451211	AssignmentExpression	varlen = 1		3451135	0		=			
ANR	3451212	Identifier	varlen		3451135	0					
ANR	3451213	PrimaryExpression	1		3451135	1					
ANR	3451214	BreakStatement	break ;	3267:6:72563:72568	3451135	1	True				
ANR	3451215	IfStatement	if ( varlen != 0 )		3451135	6					
ANR	3451216	Condition	varlen != 0	3271:6:72587:72597	3451135	0	True				
ANR	3451217	EqualityExpression	varlen != 0		3451135	0		!=			
ANR	3451218	Identifier	varlen		3451135	0					
ANR	3451219	PrimaryExpression	0		3451135	1					
ANR	3451220	CompoundStatement		16:19:301:301	3451135	1					
ANR	3451221	ExpressionStatement	"* rnode = var_anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3272:4:72606:72666	3451135	0	True				
ANR	3451222	AssignmentExpression	"* rnode = var_anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	0		=			
ANR	3451223	UnaryOperationExpression	* rnode		3451135	0					
ANR	3451224	UnaryOperator	*		3451135	0					
ANR	3451225	Identifier	rnode		3451135	1					
ANR	3451226	AssignmentExpression	"var_anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	1		=			
ANR	3451227	Identifier	var_anode		3451135	0					
ANR	3451228	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	1					
ANR	3451229	Callee	onig_node_new_alt		3451135	0					
ANR	3451230	Identifier	onig_node_new_alt		3451135	0					
ANR	3451231	ArgumentList	NULL_NODE		3451135	1					
ANR	3451232	Argument	NULL_NODE		3451135	0					
ANR	3451233	Identifier	NULL_NODE		3451135	0					
ANR	3451234	Argument	NULL_NODE		3451135	1					
ANR	3451235	Identifier	NULL_NODE		3451135	0					
ANR	3451236	IfStatement	if ( IS_NULL ( var_anode ) )		3451135	1					
ANR	3451237	Condition	IS_NULL ( var_anode )	3273:8:72676:72693	3451135	0	True				
ANR	3451238	CallExpression	IS_NULL ( var_anode )		3451135	0					
ANR	3451239	Callee	IS_NULL		3451135	0					
ANR	3451240	Identifier	IS_NULL		3451135	0					
ANR	3451241	ArgumentList	var_anode		3451135	1					
ANR	3451242	Argument	var_anode		3451135	0					
ANR	3451243	Identifier	var_anode		3451135	0					
ANR	3451244	ReturnStatement	return ONIGERR_MEMORY ;	3273:28:72696:72717	3451135	1	True				
ANR	3451245	Identifier	ONIGERR_MEMORY		3451135	0					
ANR	3451246	ExpressionStatement	"xnode = onig_node_new_list ( NULL , NULL )"	3275:4:72724:72762	3451135	2	True				
ANR	3451247	AssignmentExpression	"xnode = onig_node_new_list ( NULL , NULL )"		3451135	0		=			
ANR	3451248	Identifier	xnode		3451135	0					
ANR	3451249	CallExpression	"onig_node_new_list ( NULL , NULL )"		3451135	1					
ANR	3451250	Callee	onig_node_new_list		3451135	0					
ANR	3451251	Identifier	onig_node_new_list		3451135	0					
ANR	3451252	ArgumentList	NULL		3451135	1					
ANR	3451253	Argument	NULL		3451135	0					
ANR	3451254	Identifier	NULL		3451135	0					
ANR	3451255	Argument	NULL		3451135	1					
ANR	3451256	Identifier	NULL		3451135	0					
ANR	3451257	IfStatement	if ( IS_NULL ( xnode ) )		3451135	3					
ANR	3451258	Condition	IS_NULL ( xnode )	3276:8:72772:72785	3451135	0	True				
ANR	3451259	CallExpression	IS_NULL ( xnode )		3451135	0					
ANR	3451260	Callee	IS_NULL		3451135	0					
ANR	3451261	Identifier	IS_NULL		3451135	0					
ANR	3451262	ArgumentList	xnode		3451135	1					
ANR	3451263	Argument	xnode		3451135	0					
ANR	3451264	Identifier	xnode		3451135	0					
ANR	3451265	GotoStatement	goto mem_err ;	3276:24:72788:72800	3451135	1	True				
ANR	3451266	Identifier	mem_err		3451135	0					
ANR	3451267	ExpressionStatement	NCAR ( var_anode ) = xnode	3277:4:72806:72829	3451135	4	True				
ANR	3451268	AssignmentExpression	NCAR ( var_anode ) = xnode		3451135	0		=			
ANR	3451269	CallExpression	NCAR ( var_anode )		3451135	0					
ANR	3451270	Callee	NCAR		3451135	0					
ANR	3451271	Identifier	NCAR		3451135	0					
ANR	3451272	ArgumentList	var_anode		3451135	1					
ANR	3451273	Argument	var_anode		3451135	0					
ANR	3451274	Identifier	var_anode		3451135	0					
ANR	3451275	Identifier	xnode		3451135	1					
ANR	3451276	ExpressionStatement	"anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3279:4:72836:72883	3451135	5	True				
ANR	3451277	AssignmentExpression	"anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	0		=			
ANR	3451278	Identifier	anode		3451135	0					
ANR	3451279	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	1					
ANR	3451280	Callee	onig_node_new_alt		3451135	0					
ANR	3451281	Identifier	onig_node_new_alt		3451135	0					
ANR	3451282	ArgumentList	NULL_NODE		3451135	1					
ANR	3451283	Argument	NULL_NODE		3451135	0					
ANR	3451284	Identifier	NULL_NODE		3451135	0					
ANR	3451285	Argument	NULL_NODE		3451135	1					
ANR	3451286	Identifier	NULL_NODE		3451135	0					
ANR	3451287	IfStatement	if ( IS_NULL ( anode ) )		3451135	6					
ANR	3451288	Condition	IS_NULL ( anode )	3280:8:72893:72906	3451135	0	True				
ANR	3451289	CallExpression	IS_NULL ( anode )		3451135	0					
ANR	3451290	Callee	IS_NULL		3451135	0					
ANR	3451291	Identifier	IS_NULL		3451135	0					
ANR	3451292	ArgumentList	anode		3451135	1					
ANR	3451293	Argument	anode		3451135	0					
ANR	3451294	Identifier	anode		3451135	0					
ANR	3451295	GotoStatement	goto mem_err ;	3280:24:72909:72921	3451135	1	True				
ANR	3451296	Identifier	mem_err		3451135	0					
ANR	3451297	ExpressionStatement	NCAR ( xnode ) = anode	3281:4:72927:72946	3451135	7	True				
ANR	3451298	AssignmentExpression	NCAR ( xnode ) = anode		3451135	0		=			
ANR	3451299	CallExpression	NCAR ( xnode )		3451135	0					
ANR	3451300	Callee	NCAR		3451135	0					
ANR	3451301	Identifier	NCAR		3451135	0					
ANR	3451302	ArgumentList	xnode		3451135	1					
ANR	3451303	Argument	xnode		3451135	0					
ANR	3451304	Identifier	xnode		3451135	0					
ANR	3451305	Identifier	anode		3451135	1					
ANR	3451306	ElseStatement	else		3451135	0					
ANR	3451307	CompoundStatement		28:7:660:660	3451135	0					
ANR	3451308	ExpressionStatement	"* rnode = anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3284:4:72965:73021	3451135	0	True				
ANR	3451309	AssignmentExpression	"* rnode = anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	0		=			
ANR	3451310	UnaryOperationExpression	* rnode		3451135	0					
ANR	3451311	UnaryOperator	*		3451135	0					
ANR	3451312	Identifier	rnode		3451135	1					
ANR	3451313	AssignmentExpression	"anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	1		=			
ANR	3451314	Identifier	anode		3451135	0					
ANR	3451315	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	1					
ANR	3451316	Callee	onig_node_new_alt		3451135	0					
ANR	3451317	Identifier	onig_node_new_alt		3451135	0					
ANR	3451318	ArgumentList	NULL_NODE		3451135	1					
ANR	3451319	Argument	NULL_NODE		3451135	0					
ANR	3451320	Identifier	NULL_NODE		3451135	0					
ANR	3451321	Argument	NULL_NODE		3451135	1					
ANR	3451322	Identifier	NULL_NODE		3451135	0					
ANR	3451323	IfStatement	if ( IS_NULL ( anode ) )		3451135	1					
ANR	3451324	Condition	IS_NULL ( anode )	3285:8:73031:73044	3451135	0	True				
ANR	3451325	CallExpression	IS_NULL ( anode )		3451135	0					
ANR	3451326	Callee	IS_NULL		3451135	0					
ANR	3451327	Identifier	IS_NULL		3451135	0					
ANR	3451328	ArgumentList	anode		3451135	1					
ANR	3451329	Argument	anode		3451135	0					
ANR	3451330	Identifier	anode		3451135	0					
ANR	3451331	ReturnStatement	return ONIGERR_MEMORY ;	3285:24:73047:73068	3451135	1	True				
ANR	3451332	Identifier	ONIGERR_MEMORY		3451135	0					
ANR	3451333	ExpressionStatement	"snode = onig_node_new_str ( p , p + slen )"	3288:2:73077:73115	3451135	7	True				
ANR	3451334	AssignmentExpression	"snode = onig_node_new_str ( p , p + slen )"		3451135	0		=			
ANR	3451335	Identifier	snode		3451135	0					
ANR	3451336	CallExpression	"onig_node_new_str ( p , p + slen )"		3451135	1					
ANR	3451337	Callee	onig_node_new_str		3451135	0					
ANR	3451338	Identifier	onig_node_new_str		3451135	0					
ANR	3451339	ArgumentList	p		3451135	1					
ANR	3451340	Argument	p		3451135	0					
ANR	3451341	Identifier	p		3451135	0					
ANR	3451342	Argument	p + slen		3451135	1					
ANR	3451343	AdditiveExpression	p + slen		3451135	0		+			
ANR	3451344	Identifier	p		3451135	0					
ANR	3451345	Identifier	slen		3451135	1					
ANR	3451346	IfStatement	if ( IS_NULL ( snode ) )		3451135	8					
ANR	3451347	Condition	IS_NULL ( snode )	3289:6:73123:73136	3451135	0	True				
ANR	3451348	CallExpression	IS_NULL ( snode )		3451135	0					
ANR	3451349	Callee	IS_NULL		3451135	0					
ANR	3451350	Identifier	IS_NULL		3451135	0					
ANR	3451351	ArgumentList	snode		3451135	1					
ANR	3451352	Argument	snode		3451135	0					
ANR	3451353	Identifier	snode		3451135	0					
ANR	3451354	GotoStatement	goto mem_err ;	3289:22:73139:73151	3451135	1	True				
ANR	3451355	Identifier	mem_err		3451135	0					
ANR	3451356	ExpressionStatement	NCAR ( anode ) = snode	3291:2:73156:73175	3451135	9	True				
ANR	3451357	AssignmentExpression	NCAR ( anode ) = snode		3451135	0		=			
ANR	3451358	CallExpression	NCAR ( anode )		3451135	0					
ANR	3451359	Callee	NCAR		3451135	0					
ANR	3451360	Identifier	NCAR		3451135	0					
ANR	3451361	ArgumentList	anode		3451135	1					
ANR	3451362	Argument	anode		3451135	0					
ANR	3451363	Identifier	anode		3451135	0					
ANR	3451364	Identifier	snode		3451135	1					
ANR	3451365	ForStatement	for ( i = 0 ; i < item_num ; i ++ )		3451135	10					
ANR	3451366	ForInit	i = 0 ;	3293:7:73185:73190	3451135	0	True				
ANR	3451367	AssignmentExpression	i = 0		3451135	0		=			
ANR	3451368	Identifier	i		3451135	0					
ANR	3451369	PrimaryExpression	0		3451135	1					
ANR	3451370	Condition	i < item_num	3293:14:73192:73203	3451135	1	True				
ANR	3451371	RelationalExpression	i < item_num		3451135	0		<			
ANR	3451372	Identifier	i		3451135	0					
ANR	3451373	Identifier	item_num		3451135	1					
ANR	3451374	PostIncDecOperationExpression	i ++	3293:28:73206:73208	3451135	2	True				
ANR	3451375	Identifier	i		3451135	0					
ANR	3451376	IncDec	++		3451135	1					
ANR	3451377	CompoundStatement		38:33:912:912	3451135	3					
ANR	3451378	ExpressionStatement	"snode = onig_node_new_str ( NULL , NULL )"	3294:4:73217:73254	3451135	0	True				
ANR	3451379	AssignmentExpression	"snode = onig_node_new_str ( NULL , NULL )"		3451135	0		=			
ANR	3451380	Identifier	snode		3451135	0					
ANR	3451381	CallExpression	"onig_node_new_str ( NULL , NULL )"		3451135	1					
ANR	3451382	Callee	onig_node_new_str		3451135	0					
ANR	3451383	Identifier	onig_node_new_str		3451135	0					
ANR	3451384	ArgumentList	NULL		3451135	1					
ANR	3451385	Argument	NULL		3451135	0					
ANR	3451386	Identifier	NULL		3451135	0					
ANR	3451387	Argument	NULL		3451135	1					
ANR	3451388	Identifier	NULL		3451135	0					
ANR	3451389	IfStatement	if ( IS_NULL ( snode ) )		3451135	1					
ANR	3451390	Condition	IS_NULL ( snode )	3295:8:73264:73277	3451135	0	True				
ANR	3451391	CallExpression	IS_NULL ( snode )		3451135	0					
ANR	3451392	Callee	IS_NULL		3451135	0					
ANR	3451393	Identifier	IS_NULL		3451135	0					
ANR	3451394	ArgumentList	snode		3451135	1					
ANR	3451395	Argument	snode		3451135	0					
ANR	3451396	Identifier	snode		3451135	0					
ANR	3451397	GotoStatement	goto mem_err ;	3295:24:73280:73292	3451135	1	True				
ANR	3451398	Identifier	mem_err		3451135	0					
ANR	3451399	ForStatement	for ( j = 0 ; j < items [ i ] . code_len ; j ++ )		3451135	2					
ANR	3451400	ForInit	j = 0 ;	3297:9:73308:73313	3451135	0	True				
ANR	3451401	AssignmentExpression	j = 0		3451135	0		=			
ANR	3451402	Identifier	j		3451135	0					
ANR	3451403	PrimaryExpression	0		3451135	1					
ANR	3451404	Condition	j < items [ i ] . code_len	3297:16:73315:73335	3451135	1	True				
ANR	3451405	RelationalExpression	j < items [ i ] . code_len		3451135	0		<			
ANR	3451406	Identifier	j		3451135	0					
ANR	3451407	MemberAccess	items [ i ] . code_len		3451135	1					
ANR	3451408	ArrayIndexing	items [ i ]		3451135	0					
ANR	3451409	Identifier	items		3451135	0					
ANR	3451410	Identifier	i		3451135	1					
ANR	3451411	Identifier	code_len		3451135	1					
ANR	3451412	PostIncDecOperationExpression	j ++	3297:39:73338:73340	3451135	2	True				
ANR	3451413	Identifier	j		3451135	0					
ANR	3451414	IncDec	++		3451135	1					
ANR	3451415	CompoundStatement		42:44:1044:1044	3451135	3					
ANR	3451416	ExpressionStatement	"len = ONIGENC_CODE_TO_MBC ( reg -> enc , items [ i ] . code [ j ] , buf )"	3298:6:73351:73409	3451135	0	True				
ANR	3451417	AssignmentExpression	"len = ONIGENC_CODE_TO_MBC ( reg -> enc , items [ i ] . code [ j ] , buf )"		3451135	0		=			
ANR	3451418	Identifier	len		3451135	0					
ANR	3451419	CallExpression	"ONIGENC_CODE_TO_MBC ( reg -> enc , items [ i ] . code [ j ] , buf )"		3451135	1					
ANR	3451420	Callee	ONIGENC_CODE_TO_MBC		3451135	0					
ANR	3451421	Identifier	ONIGENC_CODE_TO_MBC		3451135	0					
ANR	3451422	ArgumentList	reg -> enc		3451135	1					
ANR	3451423	Argument	reg -> enc		3451135	0					
ANR	3451424	PtrMemberAccess	reg -> enc		3451135	0					
ANR	3451425	Identifier	reg		3451135	0					
ANR	3451426	Identifier	enc		3451135	1					
ANR	3451427	Argument	items [ i ] . code [ j ]		3451135	1					
ANR	3451428	ArrayIndexing	items [ i ] . code [ j ]		3451135	0					
ANR	3451429	MemberAccess	items [ i ] . code		3451135	0					
ANR	3451430	ArrayIndexing	items [ i ]		3451135	0					
ANR	3451431	Identifier	items		3451135	0					
ANR	3451432	Identifier	i		3451135	1					
ANR	3451433	Identifier	code		3451135	1					
ANR	3451434	Identifier	j		3451135	1					
ANR	3451435	Argument	buf		3451135	2					
ANR	3451436	Identifier	buf		3451135	0					
ANR	3451437	IfStatement	if ( len < 0 )		3451135	1					
ANR	3451438	Condition	len < 0	3299:10:73421:73427	3451135	0	True				
ANR	3451439	RelationalExpression	len < 0		3451135	0		<			
ANR	3451440	Identifier	len		3451135	0					
ANR	3451441	PrimaryExpression	0		3451135	1					
ANR	3451442	CompoundStatement		44:19:1131:1131	3451135	1					
ANR	3451443	ExpressionStatement	r = len	3300:1:73433:73440	3451135	0	True				
ANR	3451444	AssignmentExpression	r = len		3451135	0		=			
ANR	3451445	Identifier	r		3451135	0					
ANR	3451446	Identifier	len		3451135	1					
ANR	3451447	GotoStatement	goto mem_err2 ;	3301:1:73443:73456	3451135	1	True				
ANR	3451448	Identifier	mem_err2		3451135	0					
ANR	3451449	ExpressionStatement	"r = onig_node_str_cat ( snode , buf , buf + len )"	3304:6:73473:73517	3451135	2	True				
ANR	3451450	AssignmentExpression	"r = onig_node_str_cat ( snode , buf , buf + len )"		3451135	0		=			
ANR	3451451	Identifier	r		3451135	0					
ANR	3451452	CallExpression	"onig_node_str_cat ( snode , buf , buf + len )"		3451135	1					
ANR	3451453	Callee	onig_node_str_cat		3451135	0					
ANR	3451454	Identifier	onig_node_str_cat		3451135	0					
ANR	3451455	ArgumentList	snode		3451135	1					
ANR	3451456	Argument	snode		3451135	0					
ANR	3451457	Identifier	snode		3451135	0					
ANR	3451458	Argument	buf		3451135	1					
ANR	3451459	Identifier	buf		3451135	0					
ANR	3451460	Argument	buf + len		3451135	2					
ANR	3451461	AdditiveExpression	buf + len		3451135	0		+			
ANR	3451462	Identifier	buf		3451135	0					
ANR	3451463	Identifier	len		3451135	1					
ANR	3451464	IfStatement	if ( r != 0 )		3451135	3					
ANR	3451465	Condition	r != 0	3305:10:73529:73534	3451135	0	True				
ANR	3451466	EqualityExpression	r != 0		3451135	0		!=			
ANR	3451467	Identifier	r		3451135	0					
ANR	3451468	PrimaryExpression	0		3451135	1					
ANR	3451469	GotoStatement	goto mem_err2 ;	3305:18:73537:73550	3451135	1	True				
ANR	3451470	Identifier	mem_err2		3451135	0					
ANR	3451471	ExpressionStatement	"an = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3308:4:73563:73607	3451135	3	True				
ANR	3451472	AssignmentExpression	"an = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	0		=			
ANR	3451473	Identifier	an		3451135	0					
ANR	3451474	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		3451135	1					
ANR	3451475	Callee	onig_node_new_alt		3451135	0					
ANR	3451476	Identifier	onig_node_new_alt		3451135	0					
ANR	3451477	ArgumentList	NULL_NODE		3451135	1					
ANR	3451478	Argument	NULL_NODE		3451135	0					
ANR	3451479	Identifier	NULL_NODE		3451135	0					
ANR	3451480	Argument	NULL_NODE		3451135	1					
ANR	3451481	Identifier	NULL_NODE		3451135	0					
ANR	3451482	IfStatement	if ( IS_NULL ( an ) )		3451135	4					
ANR	3451483	Condition	IS_NULL ( an )	3309:8:73617:73627	3451135	0	True				
ANR	3451484	CallExpression	IS_NULL ( an )		3451135	0					
ANR	3451485	Callee	IS_NULL		3451135	0					
ANR	3451486	Identifier	IS_NULL		3451135	0					
ANR	3451487	ArgumentList	an		3451135	1					
ANR	3451488	Argument	an		3451135	0					
ANR	3451489	Identifier	an		3451135	0					
ANR	3451490	CompoundStatement		54:21:1331:1331	3451135	1					
ANR	3451491	GotoStatement	goto mem_err2 ;	3310:6:73638:73651	3451135	0	True				
ANR	3451492	Identifier	mem_err2		3451135	0					
ANR	3451493	IfStatement	if ( items [ i ] . byte_len != slen )		3451135	5					
ANR	3451494	Condition	items [ i ] . byte_len != slen	3313:8:73668:73692	3451135	0	True				
ANR	3451495	EqualityExpression	items [ i ] . byte_len != slen		3451135	0		!=			
ANR	3451496	MemberAccess	items [ i ] . byte_len		3451135	0					
ANR	3451497	ArrayIndexing	items [ i ]		3451135	0					
ANR	3451498	Identifier	items		3451135	0					
ANR	3451499	Identifier	i		3451135	1					
ANR	3451500	Identifier	byte_len		3451135	1					
ANR	3451501	Identifier	slen		3451135	1					
ANR	3451502	CompoundStatement		60:6:1421:1453	3451135	1					
ANR	3451503	IdentifierDeclStatement	Node * rem ;	3314:6:73703:73712	3451135	0	True				
ANR	3451504	IdentifierDecl	* rem		3451135	0					
ANR	3451505	IdentifierDeclType	Node *		3451135	0					
ANR	3451506	Identifier	rem		3451135	1					
ANR	3451507	IdentifierDeclStatement	UChar * q = p + items [ i ] . byte_len ;	3315:6:73720:73752	3451135	1	True				
ANR	3451508	IdentifierDecl	* q = p + items [ i ] . byte_len		3451135	0					
ANR	3451509	IdentifierDeclType	UChar *		3451135	0					
ANR	3451510	Identifier	q		3451135	1					
ANR	3451511	AssignmentExpression	* q = p + items [ i ] . byte_len		3451135	2		=			
ANR	3451512	Identifier	q		3451135	0					
ANR	3451513	AdditiveExpression	p + items [ i ] . byte_len		3451135	1		+			
ANR	3451514	Identifier	p		3451135	0					
ANR	3451515	MemberAccess	items [ i ] . byte_len		3451135	1					
ANR	3451516	ArrayIndexing	items [ i ]		3451135	0					
ANR	3451517	Identifier	items		3451135	0					
ANR	3451518	Identifier	i		3451135	1					
ANR	3451519	Identifier	byte_len		3451135	1					
ANR	3451520	IfStatement	if ( q < end )		3451135	2					
ANR	3451521	Condition	q < end	3317:10:73765:73771	3451135	0	True				
ANR	3451522	RelationalExpression	q < end		3451135	0		<			
ANR	3451523	Identifier	q		3451135	0					
ANR	3451524	Identifier	end		3451135	1					
ANR	3451525	CompoundStatement		62:19:1475:1475	3451135	1					
ANR	3451526	ExpressionStatement	"r = expand_case_fold_make_rem_string ( & rem , q , end , reg )"	3318:8:73784:73839	3451135	0	True				
ANR	3451527	AssignmentExpression	"r = expand_case_fold_make_rem_string ( & rem , q , end , reg )"		3451135	0		=			
ANR	3451528	Identifier	r		3451135	0					
ANR	3451529	CallExpression	"expand_case_fold_make_rem_string ( & rem , q , end , reg )"		3451135	1					
ANR	3451530	Callee	expand_case_fold_make_rem_string		3451135	0					
ANR	3451531	Identifier	expand_case_fold_make_rem_string		3451135	0					
ANR	3451532	ArgumentList	& rem		3451135	1					
ANR	3451533	Argument	& rem		3451135	0					
ANR	3451534	UnaryOperationExpression	& rem		3451135	0					
ANR	3451535	UnaryOperator	&		3451135	0					
ANR	3451536	Identifier	rem		3451135	1					
ANR	3451537	Argument	q		3451135	1					
ANR	3451538	Identifier	q		3451135	0					
ANR	3451539	Argument	end		3451135	2					
ANR	3451540	Identifier	end		3451135	0					
ANR	3451541	Argument	reg		3451135	3					
ANR	3451542	Identifier	reg		3451135	0					
ANR	3451543	IfStatement	if ( r != 0 )		3451135	1					
ANR	3451544	Condition	r != 0	3319:12:73853:73858	3451135	0	True				
ANR	3451545	EqualityExpression	r != 0		3451135	0		!=			
ANR	3451546	Identifier	r		3451135	0					
ANR	3451547	PrimaryExpression	0		3451135	1					
ANR	3451548	CompoundStatement		64:20:1562:1562	3451135	1					
ANR	3451549	ExpressionStatement	onig_node_free ( an )	3320:10:73873:73891	3451135	0	True				
ANR	3451550	CallExpression	onig_node_free ( an )		3451135	0					
ANR	3451551	Callee	onig_node_free		3451135	0					
ANR	3451552	Identifier	onig_node_free		3451135	0					
ANR	3451553	ArgumentList	an		3451135	1					
ANR	3451554	Argument	an		3451135	0					
ANR	3451555	Identifier	an		3451135	0					
ANR	3451556	GotoStatement	goto mem_err2 ;	3321:10:73903:73916	3451135	1	True				
ANR	3451557	Identifier	mem_err2		3451135	0					
ANR	3451558	ExpressionStatement	"xnode = onig_node_list_add ( NULL_NODE , snode )"	3324:8:73937:73981	3451135	2	True				
ANR	3451559	AssignmentExpression	"xnode = onig_node_list_add ( NULL_NODE , snode )"		3451135	0		=			
ANR	3451560	Identifier	xnode		3451135	0					
ANR	3451561	CallExpression	"onig_node_list_add ( NULL_NODE , snode )"		3451135	1					
ANR	3451562	Callee	onig_node_list_add		3451135	0					
ANR	3451563	Identifier	onig_node_list_add		3451135	0					
ANR	3451564	ArgumentList	NULL_NODE		3451135	1					
ANR	3451565	Argument	NULL_NODE		3451135	0					
ANR	3451566	Identifier	NULL_NODE		3451135	0					
ANR	3451567	Argument	snode		3451135	1					
ANR	3451568	Identifier	snode		3451135	0					
ANR	3451569	IfStatement	if ( IS_NULL ( xnode ) )		3451135	3					
ANR	3451570	Condition	IS_NULL ( xnode )	3325:12:73995:74008	3451135	0	True				
ANR	3451571	CallExpression	IS_NULL ( xnode )		3451135	0					
ANR	3451572	Callee	IS_NULL		3451135	0					
ANR	3451573	Identifier	IS_NULL		3451135	0					
ANR	3451574	ArgumentList	xnode		3451135	1					
ANR	3451575	Argument	xnode		3451135	0					
ANR	3451576	Identifier	xnode		3451135	0					
ANR	3451577	CompoundStatement		70:28:1712:1712	3451135	1					
ANR	3451578	ExpressionStatement	onig_node_free ( an )	3326:10:74023:74041	3451135	0	True				
ANR	3451579	CallExpression	onig_node_free ( an )		3451135	0					
ANR	3451580	Callee	onig_node_free		3451135	0					
ANR	3451581	Identifier	onig_node_free		3451135	0					
ANR	3451582	ArgumentList	an		3451135	1					
ANR	3451583	Argument	an		3451135	0					
ANR	3451584	Identifier	an		3451135	0					
ANR	3451585	ExpressionStatement	onig_node_free ( rem )	3327:10:74053:74072	3451135	1	True				
ANR	3451586	CallExpression	onig_node_free ( rem )		3451135	0					
ANR	3451587	Callee	onig_node_free		3451135	0					
ANR	3451588	Identifier	onig_node_free		3451135	0					
ANR	3451589	ArgumentList	rem		3451135	1					
ANR	3451590	Argument	rem		3451135	0					
ANR	3451591	Identifier	rem		3451135	0					
ANR	3451592	GotoStatement	goto mem_err2 ;	3328:10:74084:74097	3451135	2	True				
ANR	3451593	Identifier	mem_err2		3451135	0					
ANR	3451594	IfStatement	"if ( IS_NULL ( onig_node_list_add ( xnode , rem ) ) )"		3451135	4					
ANR	3451595	Condition	"IS_NULL ( onig_node_list_add ( xnode , rem ) )"	3330:12:74121:74159	3451135	0	True				
ANR	3451596	CallExpression	"IS_NULL ( onig_node_list_add ( xnode , rem ) )"		3451135	0					
ANR	3451597	Callee	IS_NULL		3451135	0					
ANR	3451598	Identifier	IS_NULL		3451135	0					
ANR	3451599	ArgumentList	"onig_node_list_add ( xnode , rem )"		3451135	1					
ANR	3451600	Argument	"onig_node_list_add ( xnode , rem )"		3451135	0					
ANR	3451601	CallExpression	"onig_node_list_add ( xnode , rem )"		3451135	0					
ANR	3451602	Callee	onig_node_list_add		3451135	0					
ANR	3451603	Identifier	onig_node_list_add		3451135	0					
ANR	3451604	ArgumentList	xnode		3451135	1					
ANR	3451605	Argument	xnode		3451135	0					
ANR	3451606	Identifier	xnode		3451135	0					
ANR	3451607	Argument	rem		3451135	1					
ANR	3451608	Identifier	rem		3451135	0					
ANR	3451609	CompoundStatement		75:53:1863:1863	3451135	1					
ANR	3451610	ExpressionStatement	onig_node_free ( an )	3331:10:74174:74192	3451135	0	True				
ANR	3451611	CallExpression	onig_node_free ( an )		3451135	0					
ANR	3451612	Callee	onig_node_free		3451135	0					
ANR	3451613	Identifier	onig_node_free		3451135	0					
ANR	3451614	ArgumentList	an		3451135	1					
ANR	3451615	Argument	an		3451135	0					
ANR	3451616	Identifier	an		3451135	0					
ANR	3451617	ExpressionStatement	onig_node_free ( xnode )	3332:10:74204:74225	3451135	1	True				
ANR	3451618	CallExpression	onig_node_free ( xnode )		3451135	0					
ANR	3451619	Callee	onig_node_free		3451135	0					
ANR	3451620	Identifier	onig_node_free		3451135	0					
ANR	3451621	ArgumentList	xnode		3451135	1					
ANR	3451622	Argument	xnode		3451135	0					
ANR	3451623	Identifier	xnode		3451135	0					
ANR	3451624	ExpressionStatement	onig_node_free ( rem )	3333:10:74237:74256	3451135	2	True				
ANR	3451625	CallExpression	onig_node_free ( rem )		3451135	0					
ANR	3451626	Callee	onig_node_free		3451135	0					
ANR	3451627	Identifier	onig_node_free		3451135	0					
ANR	3451628	ArgumentList	rem		3451135	1					
ANR	3451629	Argument	rem		3451135	0					
ANR	3451630	Identifier	rem		3451135	0					
ANR	3451631	GotoStatement	goto mem_err ;	3334:10:74268:74280	3451135	3	True				
ANR	3451632	Identifier	mem_err		3451135	0					
ANR	3451633	ExpressionStatement	NCAR ( an ) = xnode	3337:8:74301:74317	3451135	5	True				
ANR	3451634	AssignmentExpression	NCAR ( an ) = xnode		3451135	0		=			
ANR	3451635	CallExpression	NCAR ( an )		3451135	0					
ANR	3451636	Callee	NCAR		3451135	0					
ANR	3451637	Identifier	NCAR		3451135	0					
ANR	3451638	ArgumentList	an		3451135	1					
ANR	3451639	Argument	an		3451135	0					
ANR	3451640	Identifier	an		3451135	0					
ANR	3451641	Identifier	xnode		3451135	1					
ANR	3451642	ElseStatement	else		3451135	0					
ANR	3451643	CompoundStatement		84:11:2039:2039	3451135	0					
ANR	3451644	ExpressionStatement	NCAR ( an ) = snode	3340:8:74348:74364	3451135	0	True				
ANR	3451645	AssignmentExpression	NCAR ( an ) = snode		3451135	0		=			
ANR	3451646	CallExpression	NCAR ( an )		3451135	0					
ANR	3451647	Callee	NCAR		3451135	0					
ANR	3451648	Identifier	NCAR		3451135	0					
ANR	3451649	ArgumentList	an		3451135	1					
ANR	3451650	Argument	an		3451135	0					
ANR	3451651	Identifier	an		3451135	0					
ANR	3451652	Identifier	snode		3451135	1					
ANR	3451653	ExpressionStatement	NCDR ( var_anode ) = an	3343:6:74381:74401	3451135	3	True				
ANR	3451654	AssignmentExpression	NCDR ( var_anode ) = an		3451135	0		=			
ANR	3451655	CallExpression	NCDR ( var_anode )		3451135	0					
ANR	3451656	Callee	NCDR		3451135	0					
ANR	3451657	Identifier	NCDR		3451135	0					
ANR	3451658	ArgumentList	var_anode		3451135	1					
ANR	3451659	Argument	var_anode		3451135	0					
ANR	3451660	Identifier	var_anode		3451135	0					
ANR	3451661	Identifier	an		3451135	1					
ANR	3451662	ExpressionStatement	var_anode = an	3344:6:74409:74423	3451135	4	True				
ANR	3451663	AssignmentExpression	var_anode = an		3451135	0		=			
ANR	3451664	Identifier	var_anode		3451135	0					
ANR	3451665	Identifier	an		3451135	1					
ANR	3451666	ElseStatement	else		3451135	0					
ANR	3451667	CompoundStatement		91:9:2141:2141	3451135	0					
ANR	3451668	ExpressionStatement	NCAR ( an ) = snode	3347:6:74448:74468	3451135	0	True				
ANR	3451669	AssignmentExpression	NCAR ( an ) = snode		3451135	0		=			
ANR	3451670	CallExpression	NCAR ( an )		3451135	0					
ANR	3451671	Callee	NCAR		3451135	0					
ANR	3451672	Identifier	NCAR		3451135	0					
ANR	3451673	ArgumentList	an		3451135	1					
ANR	3451674	Argument	an		3451135	0					
ANR	3451675	Identifier	an		3451135	0					
ANR	3451676	Identifier	snode		3451135	1					
ANR	3451677	ExpressionStatement	NCDR ( anode ) = an	3348:6:74476:74492	3451135	1	True				
ANR	3451678	AssignmentExpression	NCDR ( anode ) = an		3451135	0		=			
ANR	3451679	CallExpression	NCDR ( anode )		3451135	0					
ANR	3451680	Callee	NCDR		3451135	0					
ANR	3451681	Identifier	NCDR		3451135	0					
ANR	3451682	ArgumentList	anode		3451135	1					
ANR	3451683	Argument	anode		3451135	0					
ANR	3451684	Identifier	anode		3451135	0					
ANR	3451685	Identifier	an		3451135	1					
ANR	3451686	ExpressionStatement	anode = an	3349:6:74500:74510	3451135	2	True				
ANR	3451687	AssignmentExpression	anode = an		3451135	0		=			
ANR	3451688	Identifier	anode		3451135	0					
ANR	3451689	Identifier	an		3451135	1					
ANR	3451690	ReturnStatement	return varlen ;	3353:2:74525:74538	3451135	11	True				
ANR	3451691	Identifier	varlen		3451135	0					
ANR	3451692	Label	mem_err2 :	3355:1:74542:74550	3451135	12	True				
ANR	3451693	Identifier	mem_err2		3451135	0					
ANR	3451694	ExpressionStatement	onig_node_free ( snode )	3356:2:74554:74575	3451135	13	True				
ANR	3451695	CallExpression	onig_node_free ( snode )		3451135	0					
ANR	3451696	Callee	onig_node_free		3451135	0					
ANR	3451697	Identifier	onig_node_free		3451135	0					
ANR	3451698	ArgumentList	snode		3451135	1					
ANR	3451699	Argument	snode		3451135	0					
ANR	3451700	Identifier	snode		3451135	0					
ANR	3451701	Label	mem_err :	3358:1:74579:74586	3451135	14	True				
ANR	3451702	Identifier	mem_err		3451135	0					
ANR	3451703	ExpressionStatement	onig_node_free ( * rnode )	3359:2:74590:74612	3451135	15	True				
ANR	3451704	CallExpression	onig_node_free ( * rnode )		3451135	0					
ANR	3451705	Callee	onig_node_free		3451135	0					
ANR	3451706	Identifier	onig_node_free		3451135	0					
ANR	3451707	ArgumentList	* rnode		3451135	1					
ANR	3451708	Argument	* rnode		3451135	0					
ANR	3451709	UnaryOperationExpression	* rnode		3451135	0					
ANR	3451710	UnaryOperator	*		3451135	0					
ANR	3451711	Identifier	rnode		3451135	1					
ANR	3451712	ReturnStatement	return ONIGERR_MEMORY ;	3361:2:74617:74638	3451135	16	True				
ANR	3451713	Identifier	ONIGERR_MEMORY		3451135	0					
ANR	3451714	ReturnType	static int		3451135	1					
ANR	3451715	Identifier	expand_case_fold_string_alt		3451135	2					
ANR	3451716	ParameterList	"int item_num , OnigCaseFoldCodeItem items [ ] , UChar * p , int slen , UChar * end , regex_t * reg , Node * * rnode"		3451135	3					
ANR	3451717	Parameter	int item_num	3253:28:72180:72191	3451135	0	True				
ANR	3451718	ParameterType	int		3451135	0					
ANR	3451719	Identifier	item_num		3451135	1					
ANR	3451720	Parameter	OnigCaseFoldCodeItem items [ ]	3253:42:72194:72221	3451135	1	True				
ANR	3451721	ParameterType	OnigCaseFoldCodeItem [ ]		3451135	0					
ANR	3451722	Identifier	items		3451135	1					
ANR	3451723	Parameter	UChar * p	3254:7:72231:72238	3451135	2	True				
ANR	3451724	ParameterType	UChar *		3451135	0					
ANR	3451725	Identifier	p		3451135	1					
ANR	3451726	Parameter	int slen	3254:17:72241:72248	3451135	3	True				
ANR	3451727	ParameterType	int		3451135	0					
ANR	3451728	Identifier	slen		3451135	1					
ANR	3451729	Parameter	UChar * end	3254:27:72251:72260	3451135	4	True				
ANR	3451730	ParameterType	UChar *		3451135	0					
ANR	3451731	Identifier	end		3451135	1					
ANR	3451732	Parameter	regex_t * reg	3255:7:72270:72281	3451135	5	True				
ANR	3451733	ParameterType	regex_t *		3451135	0					
ANR	3451734	Identifier	reg		3451135	1					
ANR	3451735	Parameter	Node * * rnode	3255:21:72284:72295	3451135	6	True				
ANR	3451736	ParameterType	Node * *		3451135	0					
ANR	3451737	Identifier	rnode		3451135	1					
ANR	3451738	CFGEntryNode	ENTRY		3451135		True				
ANR	3451739	CFGExitNode	EXIT		3451135		True				
ANR	3451740	Symbol	var_anode		3451135						
ANR	3451741	Symbol	NCAR		3451135						
ANR	3451742	Symbol	* items [ i ] . code		3451135						
ANR	3451743	Symbol	expand_case_fold_make_rem_string		3451135						
ANR	3451744	Symbol	& rem		3451135						
ANR	3451745	Symbol	items [ i ] . byte_len		3451135						
ANR	3451746	Symbol	rnode		3451135						
ANR	3451747	Symbol	len		3451135						
ANR	3451748	Symbol	* items		3451135						
ANR	3451749	Symbol	IS_NULL		3451135						
ANR	3451750	Symbol	reg		3451135						
ANR	3451751	Symbol	end		3451135						
ANR	3451752	Symbol	rem		3451135						
ANR	3451753	Symbol	onig_node_new_alt		3451135						
ANR	3451754	Symbol	* * i		3451135						
ANR	3451755	Symbol	NULL		3451135						
ANR	3451756	Symbol	* rnode		3451135						
ANR	3451757	Symbol	varlen		3451135						
ANR	3451758	Symbol	items [ i ] . code		3451135						
ANR	3451759	Symbol	NCDR		3451135						
ANR	3451760	Symbol	ONIGERR_MEMORY		3451135						
ANR	3451761	Symbol	i		3451135						
ANR	3451762	Symbol	anode		3451135						
ANR	3451763	Symbol	j		3451135						
ANR	3451764	Symbol	* * items		3451135						
ANR	3451765	Symbol	an		3451135						
ANR	3451766	Symbol	item_num		3451135						
ANR	3451767	Symbol	items [ i ] . code_len		3451135						
ANR	3451768	Symbol	reg -> enc		3451135						
ANR	3451769	Symbol	p		3451135						
ANR	3451770	Symbol	q		3451135						
ANR	3451771	Symbol	onig_node_list_add		3451135						
ANR	3451772	Symbol	r		3451135						
ANR	3451773	Symbol	buf		3451135						
ANR	3451774	Symbol	* i		3451135						
ANR	3451775	Symbol	ONIGENC_CODE_TO_MBC		3451135						
ANR	3451776	Symbol	onig_node_str_cat		3451135						
ANR	3451777	Symbol	xnode		3451135						
ANR	3451778	Symbol	* j		3451135						
ANR	3451779	Symbol	slen		3451135						
ANR	3451780	Symbol	onig_node_new_str		3451135						
ANR	3451781	Symbol	NULL_NODE		3451135						
ANR	3451782	Symbol	onig_node_new_list		3451135						
ANR	3451783	Symbol	items		3451135						
ANR	3451784	Symbol	snode		3451135						
ANR	3451785	Symbol	* reg		3451135						
ANR	3451786	Function	expand_case_fold_string	3364:0:74643:77513							
ANR	3451787	FunctionDef	"expand_case_fold_string (Node * node , regex_t * reg)"		3451786	0					
ANR	3451788	CompoundStatement		3366:0:74704:77513	3451786	0					
ANR	3451789	Statement	define	3367:1:74707:74712	3451786	0	True				
ANR	3451790	Statement	THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION	3367:8:74714:74750	3451786	1	True				
ANR	3451791	Statement	8	3367:47:74753:74753	3451786	2	True				
ANR	3451792	IdentifierDeclStatement	"int r , n , len , alt_num ;"	3369:2:74758:74780	3451786	3	True				
ANR	3451793	IdentifierDecl	r		3451786	0					
ANR	3451794	IdentifierDeclType	int		3451786	0					
ANR	3451795	Identifier	r		3451786	1					
ANR	3451796	IdentifierDecl	n		3451786	1					
ANR	3451797	IdentifierDeclType	int		3451786	0					
ANR	3451798	Identifier	n		3451786	1					
ANR	3451799	IdentifierDecl	len		3451786	2					
ANR	3451800	IdentifierDeclType	int		3451786	0					
ANR	3451801	Identifier	len		3451786	1					
ANR	3451802	IdentifierDecl	alt_num		3451786	3					
ANR	3451803	IdentifierDeclType	int		3451786	0					
ANR	3451804	Identifier	alt_num		3451786	1					
ANR	3451805	IdentifierDeclStatement	"UChar * start , * end , * p ;"	3370:2:74784:74806	3451786	4	True				
ANR	3451806	IdentifierDecl	* start		3451786	0					
ANR	3451807	IdentifierDeclType	UChar *		3451786	0					
ANR	3451808	Identifier	start		3451786	1					
ANR	3451809	IdentifierDecl	* end		3451786	1					
ANR	3451810	IdentifierDeclType	UChar *		3451786	0					
ANR	3451811	Identifier	end		3451786	1					
ANR	3451812	IdentifierDecl	* p		3451786	2					
ANR	3451813	IdentifierDeclType	UChar *		3451786	0					
ANR	3451814	Identifier	p		3451786	1					
ANR	3451815	IdentifierDeclStatement	"Node * top_root , * root , * snode , * prev_node ;"	3371:2:74810:74851	3451786	5	True				
ANR	3451816	IdentifierDecl	* top_root		3451786	0					
ANR	3451817	IdentifierDeclType	Node *		3451786	0					
ANR	3451818	Identifier	top_root		3451786	1					
ANR	3451819	IdentifierDecl	* root		3451786	1					
ANR	3451820	IdentifierDeclType	Node *		3451786	0					
ANR	3451821	Identifier	root		3451786	1					
ANR	3451822	IdentifierDecl	* snode		3451786	2					
ANR	3451823	IdentifierDeclType	Node *		3451786	0					
ANR	3451824	Identifier	snode		3451786	1					
ANR	3451825	IdentifierDecl	* prev_node		3451786	3					
ANR	3451826	IdentifierDeclType	Node *		3451786	0					
ANR	3451827	Identifier	prev_node		3451786	1					
ANR	3451828	IdentifierDeclStatement	OnigCaseFoldCodeItem items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ] ;	3372:2:74855:74918	3451786	6	True				
ANR	3451829	IdentifierDecl	items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		3451786	0					
ANR	3451830	IdentifierDeclType	OnigCaseFoldCodeItem [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		3451786	0					
ANR	3451831	Identifier	items		3451786	1					
ANR	3451832	Identifier	ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM		3451786	2					
ANR	3451833	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	3373:2:74922:74946	3451786	7	True				
ANR	3451834	IdentifierDecl	* sn = NSTR ( node )		3451786	0					
ANR	3451835	IdentifierDeclType	StrNode *		3451786	0					
ANR	3451836	Identifier	sn		3451786	1					
ANR	3451837	AssignmentExpression	* sn = NSTR ( node )		3451786	2		=			
ANR	3451838	Identifier	sn		3451786	0					
ANR	3451839	CallExpression	NSTR ( node )		3451786	1					
ANR	3451840	Callee	NSTR		3451786	0					
ANR	3451841	Identifier	NSTR		3451786	0					
ANR	3451842	ArgumentList	node		3451786	1					
ANR	3451843	Argument	node		3451786	0					
ANR	3451844	Identifier	node		3451786	0					
ANR	3451845	IfStatement	if ( NSTRING_IS_AMBIG ( node ) )		3451786	8					
ANR	3451846	Condition	NSTRING_IS_AMBIG ( node )	3375:6:74955:74976	3451786	0	True				
ANR	3451847	CallExpression	NSTRING_IS_AMBIG ( node )		3451786	0					
ANR	3451848	Callee	NSTRING_IS_AMBIG		3451786	0					
ANR	3451849	Identifier	NSTRING_IS_AMBIG		3451786	0					
ANR	3451850	ArgumentList	node		3451786	1					
ANR	3451851	Argument	node		3451786	0					
ANR	3451852	Identifier	node		3451786	0					
ANR	3451853	ReturnStatement	return 0 ;	3375:30:74979:74987	3451786	1	True				
ANR	3451854	PrimaryExpression	0		3451786	0					
ANR	3451855	ExpressionStatement	start = sn -> s	3377:2:74992:75005	3451786	9	True				
ANR	3451856	AssignmentExpression	start = sn -> s		3451786	0		=			
ANR	3451857	Identifier	start		3451786	0					
ANR	3451858	PtrMemberAccess	sn -> s		3451786	1					
ANR	3451859	Identifier	sn		3451786	0					
ANR	3451860	Identifier	s		3451786	1					
ANR	3451861	ExpressionStatement	end = sn -> end	3378:2:75009:75024	3451786	10	True				
ANR	3451862	AssignmentExpression	end = sn -> end		3451786	0		=			
ANR	3451863	Identifier	end		3451786	0					
ANR	3451864	PtrMemberAccess	sn -> end		3451786	1					
ANR	3451865	Identifier	sn		3451786	0					
ANR	3451866	Identifier	end		3451786	1					
ANR	3451867	IfStatement	if ( start >= end )		3451786	11					
ANR	3451868	Condition	start >= end	3379:6:75032:75043	3451786	0	True				
ANR	3451869	RelationalExpression	start >= end		3451786	0		>=			
ANR	3451870	Identifier	start		3451786	0					
ANR	3451871	Identifier	end		3451786	1					
ANR	3451872	ReturnStatement	return 0 ;	3379:20:75046:75054	3451786	1	True				
ANR	3451873	PrimaryExpression	0		3451786	0					
ANR	3451874	ExpressionStatement	r = 0	3381:2:75059:75064	3451786	12	True				
ANR	3451875	AssignmentExpression	r = 0		3451786	0		=			
ANR	3451876	Identifier	r		3451786	0					
ANR	3451877	PrimaryExpression	0		3451786	1					
ANR	3451878	ExpressionStatement	top_root = root = prev_node = snode = NULL_NODE	3382:2:75068:75115	3451786	13	True				
ANR	3451879	AssignmentExpression	top_root = root = prev_node = snode = NULL_NODE		3451786	0		=			
ANR	3451880	Identifier	top_root		3451786	0					
ANR	3451881	AssignmentExpression	root = prev_node = snode = NULL_NODE		3451786	1		=			
ANR	3451882	Identifier	root		3451786	0					
ANR	3451883	AssignmentExpression	prev_node = snode = NULL_NODE		3451786	1		=			
ANR	3451884	Identifier	prev_node		3451786	0					
ANR	3451885	AssignmentExpression	snode = NULL_NODE		3451786	1		=			
ANR	3451886	Identifier	snode		3451786	0					
ANR	3451887	Identifier	NULL_NODE		3451786	1					
ANR	3451888	ExpressionStatement	alt_num = 1	3383:2:75119:75130	3451786	14	True				
ANR	3451889	AssignmentExpression	alt_num = 1		3451786	0		=			
ANR	3451890	Identifier	alt_num		3451786	0					
ANR	3451891	PrimaryExpression	1		3451786	1					
ANR	3451892	ExpressionStatement	p = start	3384:2:75134:75143	3451786	15	True				
ANR	3451893	AssignmentExpression	p = start		3451786	0		=			
ANR	3451894	Identifier	p		3451786	0					
ANR	3451895	Identifier	start		3451786	1					
ANR	3451896	WhileStatement	while ( p < end )		3451786	16					
ANR	3451897	Condition	p < end	3385:9:75154:75160	3451786	0	True				
ANR	3451898	RelationalExpression	p < end		3451786	0		<			
ANR	3451899	Identifier	p		3451786	0					
ANR	3451900	Identifier	end		3451786	1					
ANR	3451901	CompoundStatement		20:18:458:458	3451786	1					
ANR	3451902	ExpressionStatement	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( reg -> enc , reg -> case_fold_flag , p , end , items )"	3386:4:75169:75261	3451786	0	True				
ANR	3451903	AssignmentExpression	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( reg -> enc , reg -> case_fold_flag , p , end , items )"		3451786	0		=			
ANR	3451904	Identifier	n		3451786	0					
ANR	3451905	CallExpression	"ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( reg -> enc , reg -> case_fold_flag , p , end , items )"		3451786	1					
ANR	3451906	Callee	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		3451786	0					
ANR	3451907	Identifier	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		3451786	0					
ANR	3451908	ArgumentList	reg -> enc		3451786	1					
ANR	3451909	Argument	reg -> enc		3451786	0					
ANR	3451910	PtrMemberAccess	reg -> enc		3451786	0					
ANR	3451911	Identifier	reg		3451786	0					
ANR	3451912	Identifier	enc		3451786	1					
ANR	3451913	Argument	reg -> case_fold_flag		3451786	1					
ANR	3451914	PtrMemberAccess	reg -> case_fold_flag		3451786	0					
ANR	3451915	Identifier	reg		3451786	0					
ANR	3451916	Identifier	case_fold_flag		3451786	1					
ANR	3451917	Argument	p		3451786	2					
ANR	3451918	Identifier	p		3451786	0					
ANR	3451919	Argument	end		3451786	3					
ANR	3451920	Identifier	end		3451786	0					
ANR	3451921	Argument	items		3451786	4					
ANR	3451922	Identifier	items		3451786	0					
ANR	3451923	IfStatement	if ( n < 0 )		3451786	1					
ANR	3451924	Condition	n < 0	3388:8:75271:75275	3451786	0	True				
ANR	3451925	RelationalExpression	n < 0		3451786	0		<			
ANR	3451926	Identifier	n		3451786	0					
ANR	3451927	PrimaryExpression	0		3451786	1					
ANR	3451928	CompoundStatement		23:15:573:573	3451786	1					
ANR	3451929	ExpressionStatement	r = n	3389:6:75286:75291	3451786	0	True				
ANR	3451930	AssignmentExpression	r = n		3451786	0		=			
ANR	3451931	Identifier	r		3451786	0					
ANR	3451932	Identifier	n		3451786	1					
ANR	3451933	GotoStatement	goto err ;	3390:6:75299:75307	3451786	1	True				
ANR	3451934	Identifier	err		3451786	0					
ANR	3451935	ExpressionStatement	"len = enclen ( reg -> enc , p )"	3393:4:75320:75345	3451786	2	True				
ANR	3451936	AssignmentExpression	"len = enclen ( reg -> enc , p )"		3451786	0		=			
ANR	3451937	Identifier	len		3451786	0					
ANR	3451938	CallExpression	"enclen ( reg -> enc , p )"		3451786	1					
ANR	3451939	Callee	enclen		3451786	0					
ANR	3451940	Identifier	enclen		3451786	0					
ANR	3451941	ArgumentList	reg -> enc		3451786	1					
ANR	3451942	Argument	reg -> enc		3451786	0					
ANR	3451943	PtrMemberAccess	reg -> enc		3451786	0					
ANR	3451944	Identifier	reg		3451786	0					
ANR	3451945	Identifier	enc		3451786	1					
ANR	3451946	Argument	p		3451786	1					
ANR	3451947	Identifier	p		3451786	0					
ANR	3451948	IfStatement	if ( n == 0 )		3451786	3					
ANR	3451949	Condition	n == 0	3395:8:75356:75361	3451786	0	True				
ANR	3451950	EqualityExpression	n == 0		3451786	0		==			
ANR	3451951	Identifier	n		3451786	0					
ANR	3451952	PrimaryExpression	0		3451786	1					
ANR	3451953	CompoundStatement		30:16:659:659	3451786	1					
ANR	3451954	IfStatement	if ( IS_NULL ( snode ) )		3451786	0					
ANR	3451955	Condition	IS_NULL ( snode )	3396:10:75376:75389	3451786	0	True				
ANR	3451956	CallExpression	IS_NULL ( snode )		3451786	0					
ANR	3451957	Callee	IS_NULL		3451786	0					
ANR	3451958	Identifier	IS_NULL		3451786	0					
ANR	3451959	ArgumentList	snode		3451786	1					
ANR	3451960	Argument	snode		3451786	0					
ANR	3451961	Identifier	snode		3451786	0					
ANR	3451962	CompoundStatement		31:26:687:687	3451786	1					
ANR	3451963	IfStatement	if ( IS_NULL ( root ) && IS_NOT_NULL ( prev_node ) )		3451786	0					
ANR	3451964	Condition	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )	3397:5:75399:75437	3451786	0	True				
ANR	3451965	AndExpression	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )		3451786	0		&&			
ANR	3451966	CallExpression	IS_NULL ( root )		3451786	0					
ANR	3451967	Callee	IS_NULL		3451786	0					
ANR	3451968	Identifier	IS_NULL		3451786	0					
ANR	3451969	ArgumentList	root		3451786	1					
ANR	3451970	Argument	root		3451786	0					
ANR	3451971	Identifier	root		3451786	0					
ANR	3451972	CallExpression	IS_NOT_NULL ( prev_node )		3451786	1					
ANR	3451973	Callee	IS_NOT_NULL		3451786	0					
ANR	3451974	Identifier	IS_NOT_NULL		3451786	0					
ANR	3451975	ArgumentList	prev_node		3451786	1					
ANR	3451976	Argument	prev_node		3451786	0					
ANR	3451977	Identifier	prev_node		3451786	0					
ANR	3451978	CompoundStatement		32:46:735:735	3451786	1					
ANR	3451979	ExpressionStatement	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"	3398:3:75445:75503	3451786	0	True				
ANR	3451980	AssignmentExpression	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"		3451786	0		=			
ANR	3451981	Identifier	top_root		3451786	0					
ANR	3451982	AssignmentExpression	"root = onig_node_list_add ( NULL_NODE , prev_node )"		3451786	1		=			
ANR	3451983	Identifier	root		3451786	0					
ANR	3451984	CallExpression	"onig_node_list_add ( NULL_NODE , prev_node )"		3451786	1					
ANR	3451985	Callee	onig_node_list_add		3451786	0					
ANR	3451986	Identifier	onig_node_list_add		3451786	0					
ANR	3451987	ArgumentList	NULL_NODE		3451786	1					
ANR	3451988	Argument	NULL_NODE		3451786	0					
ANR	3451989	Identifier	NULL_NODE		3451786	0					
ANR	3451990	Argument	prev_node		3451786	1					
ANR	3451991	Identifier	prev_node		3451786	0					
ANR	3451992	IfStatement	if ( IS_NULL ( root ) )		3451786	1					
ANR	3451993	Condition	IS_NULL ( root )	3399:7:75512:75524	3451786	0	True				
ANR	3451994	CallExpression	IS_NULL ( root )		3451786	0					
ANR	3451995	Callee	IS_NULL		3451786	0					
ANR	3451996	Identifier	IS_NULL		3451786	0					
ANR	3451997	ArgumentList	root		3451786	1					
ANR	3451998	Argument	root		3451786	0					
ANR	3451999	Identifier	root		3451786	0					
ANR	3452000	CompoundStatement		34:22:822:822	3451786	1					
ANR	3452001	ExpressionStatement	onig_node_free ( prev_node )	3400:5:75534:75559	3451786	0	True				
ANR	3452002	CallExpression	onig_node_free ( prev_node )		3451786	0					
ANR	3452003	Callee	onig_node_free		3451786	0					
ANR	3452004	Identifier	onig_node_free		3451786	0					
ANR	3452005	ArgumentList	prev_node		3451786	1					
ANR	3452006	Argument	prev_node		3451786	0					
ANR	3452007	Identifier	prev_node		3451786	0					
ANR	3452008	GotoStatement	goto mem_err ;	3401:5:75566:75578	3451786	1	True				
ANR	3452009	Identifier	mem_err		3451786	0					
ANR	3452010	ExpressionStatement	"prev_node = snode = onig_node_new_str ( NULL , NULL )"	3405:1:75590:75639	3451786	1	True				
ANR	3452011	AssignmentExpression	"prev_node = snode = onig_node_new_str ( NULL , NULL )"		3451786	0		=			
ANR	3452012	Identifier	prev_node		3451786	0					
ANR	3452013	AssignmentExpression	"snode = onig_node_new_str ( NULL , NULL )"		3451786	1		=			
ANR	3452014	Identifier	snode		3451786	0					
ANR	3452015	CallExpression	"onig_node_new_str ( NULL , NULL )"		3451786	1					
ANR	3452016	Callee	onig_node_new_str		3451786	0					
ANR	3452017	Identifier	onig_node_new_str		3451786	0					
ANR	3452018	ArgumentList	NULL		3451786	1					
ANR	3452019	Argument	NULL		3451786	0					
ANR	3452020	Identifier	NULL		3451786	0					
ANR	3452021	Argument	NULL		3451786	1					
ANR	3452022	Identifier	NULL		3451786	0					
ANR	3452023	IfStatement	if ( IS_NULL ( snode ) )		3451786	2					
ANR	3452024	Condition	IS_NULL ( snode )	3406:5:75646:75659	3451786	0	True				
ANR	3452025	CallExpression	IS_NULL ( snode )		3451786	0					
ANR	3452026	Callee	IS_NULL		3451786	0					
ANR	3452027	Identifier	IS_NULL		3451786	0					
ANR	3452028	ArgumentList	snode		3451786	1					
ANR	3452029	Argument	snode		3451786	0					
ANR	3452030	Identifier	snode		3451786	0					
ANR	3452031	GotoStatement	goto mem_err ;	3406:21:75662:75674	3451786	1	True				
ANR	3452032	Identifier	mem_err		3451786	0					
ANR	3452033	IfStatement	if ( IS_NOT_NULL ( root ) )		3451786	3					
ANR	3452034	Condition	IS_NOT_NULL ( root )	3407:5:75681:75697	3451786	0	True				
ANR	3452035	CallExpression	IS_NOT_NULL ( root )		3451786	0					
ANR	3452036	Callee	IS_NOT_NULL		3451786	0					
ANR	3452037	Identifier	IS_NOT_NULL		3451786	0					
ANR	3452038	ArgumentList	root		3451786	1					
ANR	3452039	Argument	root		3451786	0					
ANR	3452040	Identifier	root		3451786	0					
ANR	3452041	CompoundStatement		42:24:995:995	3451786	1					
ANR	3452042	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , snode ) ) )"		3451786	0					
ANR	3452043	Condition	"IS_NULL ( onig_node_list_add ( root , snode ) )"	3408:7:75709:75748	3451786	0	True				
ANR	3452044	CallExpression	"IS_NULL ( onig_node_list_add ( root , snode ) )"		3451786	0					
ANR	3452045	Callee	IS_NULL		3451786	0					
ANR	3452046	Identifier	IS_NULL		3451786	0					
ANR	3452047	ArgumentList	"onig_node_list_add ( root , snode )"		3451786	1					
ANR	3452048	Argument	"onig_node_list_add ( root , snode )"		3451786	0					
ANR	3452049	CallExpression	"onig_node_list_add ( root , snode )"		3451786	0					
ANR	3452050	Callee	onig_node_list_add		3451786	0					
ANR	3452051	Identifier	onig_node_list_add		3451786	0					
ANR	3452052	ArgumentList	root		3451786	1					
ANR	3452053	Argument	root		3451786	0					
ANR	3452054	Identifier	root		3451786	0					
ANR	3452055	Argument	snode		3451786	1					
ANR	3452056	Identifier	snode		3451786	0					
ANR	3452057	CompoundStatement		43:49:1046:1046	3451786	1					
ANR	3452058	ExpressionStatement	onig_node_free ( snode )	3409:5:75758:75779	3451786	0	True				
ANR	3452059	CallExpression	onig_node_free ( snode )		3451786	0					
ANR	3452060	Callee	onig_node_free		3451786	0					
ANR	3452061	Identifier	onig_node_free		3451786	0					
ANR	3452062	ArgumentList	snode		3451786	1					
ANR	3452063	Argument	snode		3451786	0					
ANR	3452064	Identifier	snode		3451786	0					
ANR	3452065	GotoStatement	goto mem_err ;	3410:5:75786:75798	3451786	1	True				
ANR	3452066	Identifier	mem_err		3451786	0					
ANR	3452067	ExpressionStatement	"r = onig_node_str_cat ( snode , p , p + len )"	3415:6:75823:75863	3451786	1	True				
ANR	3452068	AssignmentExpression	"r = onig_node_str_cat ( snode , p , p + len )"		3451786	0		=			
ANR	3452069	Identifier	r		3451786	0					
ANR	3452070	CallExpression	"onig_node_str_cat ( snode , p , p + len )"		3451786	1					
ANR	3452071	Callee	onig_node_str_cat		3451786	0					
ANR	3452072	Identifier	onig_node_str_cat		3451786	0					
ANR	3452073	ArgumentList	snode		3451786	1					
ANR	3452074	Argument	snode		3451786	0					
ANR	3452075	Identifier	snode		3451786	0					
ANR	3452076	Argument	p		3451786	1					
ANR	3452077	Identifier	p		3451786	0					
ANR	3452078	Argument	p + len		3451786	2					
ANR	3452079	AdditiveExpression	p + len		3451786	0		+			
ANR	3452080	Identifier	p		3451786	0					
ANR	3452081	Identifier	len		3451786	1					
ANR	3452082	IfStatement	if ( r != 0 )		3451786	2					
ANR	3452083	Condition	r != 0	3416:10:75875:75880	3451786	0	True				
ANR	3452084	EqualityExpression	r != 0		3451786	0		!=			
ANR	3452085	Identifier	r		3451786	0					
ANR	3452086	PrimaryExpression	0		3451786	1					
ANR	3452087	GotoStatement	goto err ;	3416:18:75883:75891	3451786	1	True				
ANR	3452088	Identifier	err		3451786	0					
ANR	3452089	ElseStatement	else		3451786	0					
ANR	3452090	CompoundStatement		53:9:1203:1203	3451786	0					
ANR	3452091	ExpressionStatement	alt_num *= ( n + 1 )	3419:6:75916:75934	3451786	0	True				
ANR	3452092	AssignmentExpression	alt_num *= ( n + 1 )		3451786	0		*=			
ANR	3452093	Identifier	alt_num		3451786	0					
ANR	3452094	AdditiveExpression	n + 1		3451786	1		+			
ANR	3452095	Identifier	n		3451786	0					
ANR	3452096	PrimaryExpression	1		3451786	1					
ANR	3452097	IfStatement	if ( alt_num > THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION )		3451786	1					
ANR	3452098	Condition	alt_num > THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION	3420:10:75946:75992	3451786	0	True				
ANR	3452099	RelationalExpression	alt_num > THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION		3451786	0		>			
ANR	3452100	Identifier	alt_num		3451786	0					
ANR	3452101	Identifier	THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION		3451786	1					
ANR	3452102	BreakStatement	break ;	3420:59:75995:76000	3451786	1	True				
ANR	3452103	IfStatement	if ( IS_NULL ( root ) && IS_NOT_NULL ( prev_node ) )		3451786	2					
ANR	3452104	Condition	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )	3422:10:76013:76051	3451786	0	True				
ANR	3452105	AndExpression	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )		3451786	0		&&			
ANR	3452106	CallExpression	IS_NULL ( root )		3451786	0					
ANR	3452107	Callee	IS_NULL		3451786	0					
ANR	3452108	Identifier	IS_NULL		3451786	0					
ANR	3452109	ArgumentList	root		3451786	1					
ANR	3452110	Argument	root		3451786	0					
ANR	3452111	Identifier	root		3451786	0					
ANR	3452112	CallExpression	IS_NOT_NULL ( prev_node )		3451786	1					
ANR	3452113	Callee	IS_NOT_NULL		3451786	0					
ANR	3452114	Identifier	IS_NOT_NULL		3451786	0					
ANR	3452115	ArgumentList	prev_node		3451786	1					
ANR	3452116	Argument	prev_node		3451786	0					
ANR	3452117	Identifier	prev_node		3451786	0					
ANR	3452118	CompoundStatement		57:51:1349:1349	3451786	1					
ANR	3452119	ExpressionStatement	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"	3423:1:76057:76115	3451786	0	True				
ANR	3452120	AssignmentExpression	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"		3451786	0		=			
ANR	3452121	Identifier	top_root		3451786	0					
ANR	3452122	AssignmentExpression	"root = onig_node_list_add ( NULL_NODE , prev_node )"		3451786	1		=			
ANR	3452123	Identifier	root		3451786	0					
ANR	3452124	CallExpression	"onig_node_list_add ( NULL_NODE , prev_node )"		3451786	1					
ANR	3452125	Callee	onig_node_list_add		3451786	0					
ANR	3452126	Identifier	onig_node_list_add		3451786	0					
ANR	3452127	ArgumentList	NULL_NODE		3451786	1					
ANR	3452128	Argument	NULL_NODE		3451786	0					
ANR	3452129	Identifier	NULL_NODE		3451786	0					
ANR	3452130	Argument	prev_node		3451786	1					
ANR	3452131	Identifier	prev_node		3451786	0					
ANR	3452132	IfStatement	if ( IS_NULL ( root ) )		3451786	1					
ANR	3452133	Condition	IS_NULL ( root )	3424:5:76122:76134	3451786	0	True				
ANR	3452134	CallExpression	IS_NULL ( root )		3451786	0					
ANR	3452135	Callee	IS_NULL		3451786	0					
ANR	3452136	Identifier	IS_NULL		3451786	0					
ANR	3452137	ArgumentList	root		3451786	1					
ANR	3452138	Argument	root		3451786	0					
ANR	3452139	Identifier	root		3451786	0					
ANR	3452140	CompoundStatement		59:20:1432:1432	3451786	1					
ANR	3452141	ExpressionStatement	onig_node_free ( prev_node )	3425:3:76142:76167	3451786	0	True				
ANR	3452142	CallExpression	onig_node_free ( prev_node )		3451786	0					
ANR	3452143	Callee	onig_node_free		3451786	0					
ANR	3452144	Identifier	onig_node_free		3451786	0					
ANR	3452145	ArgumentList	prev_node		3451786	1					
ANR	3452146	Argument	prev_node		3451786	0					
ANR	3452147	Identifier	prev_node		3451786	0					
ANR	3452148	GotoStatement	goto mem_err ;	3426:3:76172:76184	3451786	1	True				
ANR	3452149	Identifier	mem_err		3451786	0					
ANR	3452150	ExpressionStatement	"r = expand_case_fold_string_alt ( n , items , p , len , end , reg , & prev_node )"	3430:6:76204:76275	3451786	3	True				
ANR	3452151	AssignmentExpression	"r = expand_case_fold_string_alt ( n , items , p , len , end , reg , & prev_node )"		3451786	0		=			
ANR	3452152	Identifier	r		3451786	0					
ANR	3452153	CallExpression	"expand_case_fold_string_alt ( n , items , p , len , end , reg , & prev_node )"		3451786	1					
ANR	3452154	Callee	expand_case_fold_string_alt		3451786	0					
ANR	3452155	Identifier	expand_case_fold_string_alt		3451786	0					
ANR	3452156	ArgumentList	n		3451786	1					
ANR	3452157	Argument	n		3451786	0					
ANR	3452158	Identifier	n		3451786	0					
ANR	3452159	Argument	items		3451786	1					
ANR	3452160	Identifier	items		3451786	0					
ANR	3452161	Argument	p		3451786	2					
ANR	3452162	Identifier	p		3451786	0					
ANR	3452163	Argument	len		3451786	3					
ANR	3452164	Identifier	len		3451786	0					
ANR	3452165	Argument	end		3451786	4					
ANR	3452166	Identifier	end		3451786	0					
ANR	3452167	Argument	reg		3451786	5					
ANR	3452168	Identifier	reg		3451786	0					
ANR	3452169	Argument	& prev_node		3451786	6					
ANR	3452170	UnaryOperationExpression	& prev_node		3451786	0					
ANR	3452171	UnaryOperator	&		3451786	0					
ANR	3452172	Identifier	prev_node		3451786	1					
ANR	3452173	IfStatement	if ( r < 0 )		3451786	4					
ANR	3452174	Condition	r < 0	3431:10:76287:76291	3451786	0	True				
ANR	3452175	RelationalExpression	r < 0		3451786	0		<			
ANR	3452176	Identifier	r		3451786	0					
ANR	3452177	PrimaryExpression	0		3451786	1					
ANR	3452178	GotoStatement	goto mem_err ;	3431:17:76294:76306	3451786	1	True				
ANR	3452179	Identifier	mem_err		3451786	0					
ANR	3452180	IfStatement	if ( r == 1 )		3451786	5					
ANR	3452181	Condition	r == 1	3432:10:76318:76323	3451786	0	True				
ANR	3452182	EqualityExpression	r == 1		3451786	0		==			
ANR	3452183	Identifier	r		3451786	0					
ANR	3452184	PrimaryExpression	1		3451786	1					
ANR	3452185	CompoundStatement		67:18:1621:1621	3451786	1					
ANR	3452186	IfStatement	if ( IS_NULL ( root ) )		3451786	0					
ANR	3452187	Condition	IS_NULL ( root )	3433:5:76333:76345	3451786	0	True				
ANR	3452188	CallExpression	IS_NULL ( root )		3451786	0					
ANR	3452189	Callee	IS_NULL		3451786	0					
ANR	3452190	Identifier	IS_NULL		3451786	0					
ANR	3452191	ArgumentList	root		3451786	1					
ANR	3452192	Argument	root		3451786	0					
ANR	3452193	Identifier	root		3451786	0					
ANR	3452194	CompoundStatement		68:20:1643:1643	3451786	1					
ANR	3452195	ExpressionStatement	top_root = prev_node	3434:3:76353:76373	3451786	0	True				
ANR	3452196	AssignmentExpression	top_root = prev_node		3451786	0		=			
ANR	3452197	Identifier	top_root		3451786	0					
ANR	3452198	Identifier	prev_node		3451786	1					
ANR	3452199	ElseStatement	else		3451786	0					
ANR	3452200	CompoundStatement		71:6:1679:1679	3451786	0					
ANR	3452201	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , prev_node ) ) )"		3451786	0					
ANR	3452202	Condition	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"	3437:7:76393:76436	3451786	0	True				
ANR	3452203	CallExpression	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"		3451786	0					
ANR	3452204	Callee	IS_NULL		3451786	0					
ANR	3452205	Identifier	IS_NULL		3451786	0					
ANR	3452206	ArgumentList	"onig_node_list_add ( root , prev_node )"		3451786	1					
ANR	3452207	Argument	"onig_node_list_add ( root , prev_node )"		3451786	0					
ANR	3452208	CallExpression	"onig_node_list_add ( root , prev_node )"		3451786	0					
ANR	3452209	Callee	onig_node_list_add		3451786	0					
ANR	3452210	Identifier	onig_node_list_add		3451786	0					
ANR	3452211	ArgumentList	root		3451786	1					
ANR	3452212	Argument	root		3451786	0					
ANR	3452213	Identifier	root		3451786	0					
ANR	3452214	Argument	prev_node		3451786	1					
ANR	3452215	Identifier	prev_node		3451786	0					
ANR	3452216	CompoundStatement		72:53:1734:1734	3451786	1					
ANR	3452217	ExpressionStatement	onig_node_free ( prev_node )	3438:5:76446:76471	3451786	0	True				
ANR	3452218	CallExpression	onig_node_free ( prev_node )		3451786	0					
ANR	3452219	Callee	onig_node_free		3451786	0					
ANR	3452220	Identifier	onig_node_free		3451786	0					
ANR	3452221	ArgumentList	prev_node		3451786	1					
ANR	3452222	Argument	prev_node		3451786	0					
ANR	3452223	Identifier	prev_node		3451786	0					
ANR	3452224	GotoStatement	goto mem_err ;	3439:5:76478:76490	3451786	1	True				
ANR	3452225	Identifier	mem_err		3451786	0					
ANR	3452226	ExpressionStatement	root = NCAR ( prev_node )	3443:1:76502:76524	3451786	1	True				
ANR	3452227	AssignmentExpression	root = NCAR ( prev_node )		3451786	0		=			
ANR	3452228	Identifier	root		3451786	0					
ANR	3452229	CallExpression	NCAR ( prev_node )		3451786	1					
ANR	3452230	Callee	NCAR		3451786	0					
ANR	3452231	Identifier	NCAR		3451786	0					
ANR	3452232	ArgumentList	prev_node		3451786	1					
ANR	3452233	Argument	prev_node		3451786	0					
ANR	3452234	Identifier	prev_node		3451786	0					
ANR	3452235	ElseStatement	else		3451786	0					
ANR	3452236	CompoundStatement		80:11:1840:1840	3451786	0					
ANR	3452237	IfStatement	if ( IS_NOT_NULL ( root ) )		3451786	0					
ANR	3452238	Condition	IS_NOT_NULL ( root )	3446:5:76565:76581	3451786	0	True				
ANR	3452239	CallExpression	IS_NOT_NULL ( root )		3451786	0					
ANR	3452240	Callee	IS_NOT_NULL		3451786	0					
ANR	3452241	Identifier	IS_NOT_NULL		3451786	0					
ANR	3452242	ArgumentList	root		3451786	1					
ANR	3452243	Argument	root		3451786	0					
ANR	3452244	Identifier	root		3451786	0					
ANR	3452245	CompoundStatement		81:24:1879:1879	3451786	1					
ANR	3452246	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , prev_node ) ) )"		3451786	0					
ANR	3452247	Condition	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"	3447:7:76593:76636	3451786	0	True				
ANR	3452248	CallExpression	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"		3451786	0					
ANR	3452249	Callee	IS_NULL		3451786	0					
ANR	3452250	Identifier	IS_NULL		3451786	0					
ANR	3452251	ArgumentList	"onig_node_list_add ( root , prev_node )"		3451786	1					
ANR	3452252	Argument	"onig_node_list_add ( root , prev_node )"		3451786	0					
ANR	3452253	CallExpression	"onig_node_list_add ( root , prev_node )"		3451786	0					
ANR	3452254	Callee	onig_node_list_add		3451786	0					
ANR	3452255	Identifier	onig_node_list_add		3451786	0					
ANR	3452256	ArgumentList	root		3451786	1					
ANR	3452257	Argument	root		3451786	0					
ANR	3452258	Identifier	root		3451786	0					
ANR	3452259	Argument	prev_node		3451786	1					
ANR	3452260	Identifier	prev_node		3451786	0					
ANR	3452261	CompoundStatement		82:53:1934:1934	3451786	1					
ANR	3452262	ExpressionStatement	onig_node_free ( prev_node )	3448:5:76646:76671	3451786	0	True				
ANR	3452263	CallExpression	onig_node_free ( prev_node )		3451786	0					
ANR	3452264	Callee	onig_node_free		3451786	0					
ANR	3452265	Identifier	onig_node_free		3451786	0					
ANR	3452266	ArgumentList	prev_node		3451786	1					
ANR	3452267	Argument	prev_node		3451786	0					
ANR	3452268	Identifier	prev_node		3451786	0					
ANR	3452269	GotoStatement	goto mem_err ;	3449:5:76678:76690	3451786	1	True				
ANR	3452270	Identifier	mem_err		3451786	0					
ANR	3452271	ExpressionStatement	snode = NULL_NODE	3454:6:76715:76732	3451786	6	True				
ANR	3452272	AssignmentExpression	snode = NULL_NODE		3451786	0		=			
ANR	3452273	Identifier	snode		3451786	0					
ANR	3452274	Identifier	NULL_NODE		3451786	1					
ANR	3452275	ExpressionStatement	p += len	3457:4:76745:76753	3451786	4	True				
ANR	3452276	AssignmentExpression	p += len		3451786	0		+=			
ANR	3452277	Identifier	p		3451786	0					
ANR	3452278	Identifier	len		3451786	1					
ANR	3452279	IfStatement	if ( p < end )		3451786	17					
ANR	3452280	Condition	p < end	3460:6:76766:76772	3451786	0	True				
ANR	3452281	RelationalExpression	p < end		3451786	0		<			
ANR	3452282	Identifier	p		3451786	0					
ANR	3452283	Identifier	end		3451786	1					
ANR	3452284	CompoundStatement		96:4:2076:2086	3451786	1					
ANR	3452285	IdentifierDeclStatement	Node * srem ;	3461:4:76781:76791	3451786	0	True				
ANR	3452286	IdentifierDecl	* srem		3451786	0					
ANR	3452287	IdentifierDeclType	Node *		3451786	0					
ANR	3452288	Identifier	srem		3451786	1					
ANR	3452289	ExpressionStatement	"r = expand_case_fold_make_rem_string ( & srem , p , end , reg )"	3463:4:76798:76854	3451786	1	True				
ANR	3452290	AssignmentExpression	"r = expand_case_fold_make_rem_string ( & srem , p , end , reg )"		3451786	0		=			
ANR	3452291	Identifier	r		3451786	0					
ANR	3452292	CallExpression	"expand_case_fold_make_rem_string ( & srem , p , end , reg )"		3451786	1					
ANR	3452293	Callee	expand_case_fold_make_rem_string		3451786	0					
ANR	3452294	Identifier	expand_case_fold_make_rem_string		3451786	0					
ANR	3452295	ArgumentList	& srem		3451786	1					
ANR	3452296	Argument	& srem		3451786	0					
ANR	3452297	UnaryOperationExpression	& srem		3451786	0					
ANR	3452298	UnaryOperator	&		3451786	0					
ANR	3452299	Identifier	srem		3451786	1					
ANR	3452300	Argument	p		3451786	1					
ANR	3452301	Identifier	p		3451786	0					
ANR	3452302	Argument	end		3451786	2					
ANR	3452303	Identifier	end		3451786	0					
ANR	3452304	Argument	reg		3451786	3					
ANR	3452305	Identifier	reg		3451786	0					
ANR	3452306	IfStatement	if ( r != 0 )		3451786	2					
ANR	3452307	Condition	r != 0	3464:8:76864:76869	3451786	0	True				
ANR	3452308	EqualityExpression	r != 0		3451786	0		!=			
ANR	3452309	Identifier	r		3451786	0					
ANR	3452310	PrimaryExpression	0		3451786	1					
ANR	3452311	GotoStatement	goto mem_err ;	3464:16:76872:76884	3451786	1	True				
ANR	3452312	Identifier	mem_err		3451786	0					
ANR	3452313	IfStatement	if ( IS_NOT_NULL ( prev_node ) && IS_NULL ( root ) )		3451786	3					
ANR	3452314	Condition	IS_NOT_NULL ( prev_node ) && IS_NULL ( root )	3466:8:76895:76933	3451786	0	True				
ANR	3452315	AndExpression	IS_NOT_NULL ( prev_node ) && IS_NULL ( root )		3451786	0		&&			
ANR	3452316	CallExpression	IS_NOT_NULL ( prev_node )		3451786	0					
ANR	3452317	Callee	IS_NOT_NULL		3451786	0					
ANR	3452318	Identifier	IS_NOT_NULL		3451786	0					
ANR	3452319	ArgumentList	prev_node		3451786	1					
ANR	3452320	Argument	prev_node		3451786	0					
ANR	3452321	Identifier	prev_node		3451786	0					
ANR	3452322	CallExpression	IS_NULL ( root )		3451786	1					
ANR	3452323	Callee	IS_NULL		3451786	0					
ANR	3452324	Identifier	IS_NULL		3451786	0					
ANR	3452325	ArgumentList	root		3451786	1					
ANR	3452326	Argument	root		3451786	0					
ANR	3452327	Identifier	root		3451786	0					
ANR	3452328	CompoundStatement		101:49:2231:2231	3451786	1					
ANR	3452329	ExpressionStatement	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"	3467:6:76944:77002	3451786	0	True				
ANR	3452330	AssignmentExpression	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"		3451786	0		=			
ANR	3452331	Identifier	top_root		3451786	0					
ANR	3452332	AssignmentExpression	"root = onig_node_list_add ( NULL_NODE , prev_node )"		3451786	1		=			
ANR	3452333	Identifier	root		3451786	0					
ANR	3452334	CallExpression	"onig_node_list_add ( NULL_NODE , prev_node )"		3451786	1					
ANR	3452335	Callee	onig_node_list_add		3451786	0					
ANR	3452336	Identifier	onig_node_list_add		3451786	0					
ANR	3452337	ArgumentList	NULL_NODE		3451786	1					
ANR	3452338	Argument	NULL_NODE		3451786	0					
ANR	3452339	Identifier	NULL_NODE		3451786	0					
ANR	3452340	Argument	prev_node		3451786	1					
ANR	3452341	Identifier	prev_node		3451786	0					
ANR	3452342	IfStatement	if ( IS_NULL ( root ) )		3451786	1					
ANR	3452343	Condition	IS_NULL ( root )	3468:10:77014:77026	3451786	0	True				
ANR	3452344	CallExpression	IS_NULL ( root )		3451786	0					
ANR	3452345	Callee	IS_NULL		3451786	0					
ANR	3452346	Identifier	IS_NULL		3451786	0					
ANR	3452347	ArgumentList	root		3451786	1					
ANR	3452348	Argument	root		3451786	0					
ANR	3452349	Identifier	root		3451786	0					
ANR	3452350	CompoundStatement		103:25:2324:2324	3451786	1					
ANR	3452351	ExpressionStatement	onig_node_free ( srem )	3469:1:77032:77052	3451786	0	True				
ANR	3452352	CallExpression	onig_node_free ( srem )		3451786	0					
ANR	3452353	Callee	onig_node_free		3451786	0					
ANR	3452354	Identifier	onig_node_free		3451786	0					
ANR	3452355	ArgumentList	srem		3451786	1					
ANR	3452356	Argument	srem		3451786	0					
ANR	3452357	Identifier	srem		3451786	0					
ANR	3452358	ExpressionStatement	onig_node_free ( prev_node )	3470:1:77055:77080	3451786	1	True				
ANR	3452359	CallExpression	onig_node_free ( prev_node )		3451786	0					
ANR	3452360	Callee	onig_node_free		3451786	0					
ANR	3452361	Identifier	onig_node_free		3451786	0					
ANR	3452362	ArgumentList	prev_node		3451786	1					
ANR	3452363	Argument	prev_node		3451786	0					
ANR	3452364	Identifier	prev_node		3451786	0					
ANR	3452365	GotoStatement	goto mem_err ;	3471:1:77083:77095	3451786	2	True				
ANR	3452366	Identifier	mem_err		3451786	0					
ANR	3452367	IfStatement	if ( IS_NULL ( root ) )		3451786	4					
ANR	3452368	Condition	IS_NULL ( root )	3475:8:77120:77132	3451786	0	True				
ANR	3452369	CallExpression	IS_NULL ( root )		3451786	0					
ANR	3452370	Callee	IS_NULL		3451786	0					
ANR	3452371	Identifier	IS_NULL		3451786	0					
ANR	3452372	ArgumentList	root		3451786	1					
ANR	3452373	Argument	root		3451786	0					
ANR	3452374	Identifier	root		3451786	0					
ANR	3452375	CompoundStatement		110:23:2430:2430	3451786	1					
ANR	3452376	ExpressionStatement	prev_node = srem	3476:6:77143:77159	3451786	0	True				
ANR	3452377	AssignmentExpression	prev_node = srem		3451786	0		=			
ANR	3452378	Identifier	prev_node		3451786	0					
ANR	3452379	Identifier	srem		3451786	1					
ANR	3452380	ElseStatement	else		3451786	0					
ANR	3452381	CompoundStatement		113:9:2471:2471	3451786	0					
ANR	3452382	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , srem ) ) )"		3451786	0					
ANR	3452383	Condition	"IS_NULL ( onig_node_list_add ( root , srem ) )"	3479:10:77188:77226	3451786	0	True				
ANR	3452384	CallExpression	"IS_NULL ( onig_node_list_add ( root , srem ) )"		3451786	0					
ANR	3452385	Callee	IS_NULL		3451786	0					
ANR	3452386	Identifier	IS_NULL		3451786	0					
ANR	3452387	ArgumentList	"onig_node_list_add ( root , srem )"		3451786	1					
ANR	3452388	Argument	"onig_node_list_add ( root , srem )"		3451786	0					
ANR	3452389	CallExpression	"onig_node_list_add ( root , srem )"		3451786	0					
ANR	3452390	Callee	onig_node_list_add		3451786	0					
ANR	3452391	Identifier	onig_node_list_add		3451786	0					
ANR	3452392	ArgumentList	root		3451786	1					
ANR	3452393	Argument	root		3451786	0					
ANR	3452394	Identifier	root		3451786	0					
ANR	3452395	Argument	srem		3451786	1					
ANR	3452396	Identifier	srem		3451786	0					
ANR	3452397	CompoundStatement		114:51:2524:2524	3451786	1					
ANR	3452398	ExpressionStatement	onig_node_free ( srem )	3480:1:77232:77252	3451786	0	True				
ANR	3452399	CallExpression	onig_node_free ( srem )		3451786	0					
ANR	3452400	Callee	onig_node_free		3451786	0					
ANR	3452401	Identifier	onig_node_free		3451786	0					
ANR	3452402	ArgumentList	srem		3451786	1					
ANR	3452403	Argument	srem		3451786	0					
ANR	3452404	Identifier	srem		3451786	0					
ANR	3452405	GotoStatement	goto mem_err ;	3481:1:77255:77267	3451786	1	True				
ANR	3452406	Identifier	mem_err		3451786	0					
ANR	3452407	ExpressionStatement	top_root = ( IS_NOT_NULL ( top_root ) ? top_root : prev_node )	3487:2:77305:77362	3451786	18	True				
ANR	3452408	AssignmentExpression	top_root = ( IS_NOT_NULL ( top_root ) ? top_root : prev_node )		3451786	0		=			
ANR	3452409	Identifier	top_root		3451786	0					
ANR	3452410	ConditionalExpression	IS_NOT_NULL ( top_root ) ? top_root : prev_node		3451786	1					
ANR	3452411	Condition	IS_NOT_NULL ( top_root )		3451786	0					
ANR	3452412	CallExpression	IS_NOT_NULL ( top_root )		3451786	0					
ANR	3452413	Callee	IS_NOT_NULL		3451786	0					
ANR	3452414	Identifier	IS_NOT_NULL		3451786	0					
ANR	3452415	ArgumentList	top_root		3451786	1					
ANR	3452416	Argument	top_root		3451786	0					
ANR	3452417	Identifier	top_root		3451786	0					
ANR	3452418	Identifier	top_root		3451786	1					
ANR	3452419	Identifier	prev_node		3451786	2					
ANR	3452420	ExpressionStatement	"swap_node ( node , top_root )"	3488:2:77366:77391	3451786	19	True				
ANR	3452421	CallExpression	"swap_node ( node , top_root )"		3451786	0					
ANR	3452422	Callee	swap_node		3451786	0					
ANR	3452423	Identifier	swap_node		3451786	0					
ANR	3452424	ArgumentList	node		3451786	1					
ANR	3452425	Argument	node		3451786	0					
ANR	3452426	Identifier	node		3451786	0					
ANR	3452427	Argument	top_root		3451786	1					
ANR	3452428	Identifier	top_root		3451786	0					
ANR	3452429	ExpressionStatement	onig_node_free ( top_root )	3489:2:77395:77419	3451786	20	True				
ANR	3452430	CallExpression	onig_node_free ( top_root )		3451786	0					
ANR	3452431	Callee	onig_node_free		3451786	0					
ANR	3452432	Identifier	onig_node_free		3451786	0					
ANR	3452433	ArgumentList	top_root		3451786	1					
ANR	3452434	Argument	top_root		3451786	0					
ANR	3452435	Identifier	top_root		3451786	0					
ANR	3452436	ReturnStatement	return 0 ;	3490:2:77423:77431	3451786	21	True				
ANR	3452437	PrimaryExpression	0		3451786	0					
ANR	3452438	Label	mem_err :	3492:1:77435:77442	3451786	22	True				
ANR	3452439	Identifier	mem_err		3451786	0					
ANR	3452440	ExpressionStatement	r = ONIGERR_MEMORY	3493:2:77446:77464	3451786	23	True				
ANR	3452441	AssignmentExpression	r = ONIGERR_MEMORY		3451786	0		=			
ANR	3452442	Identifier	r		3451786	0					
ANR	3452443	Identifier	ONIGERR_MEMORY		3451786	1					
ANR	3452444	Label	err :	3495:1:77468:77471	3451786	24	True				
ANR	3452445	Identifier	err		3451786	0					
ANR	3452446	ExpressionStatement	onig_node_free ( top_root )	3496:2:77475:77499	3451786	25	True				
ANR	3452447	CallExpression	onig_node_free ( top_root )		3451786	0					
ANR	3452448	Callee	onig_node_free		3451786	0					
ANR	3452449	Identifier	onig_node_free		3451786	0					
ANR	3452450	ArgumentList	top_root		3451786	1					
ANR	3452451	Argument	top_root		3451786	0					
ANR	3452452	Identifier	top_root		3451786	0					
ANR	3452453	ReturnStatement	return r ;	3497:2:77503:77511	3451786	26	True				
ANR	3452454	Identifier	r		3451786	0					
ANR	3452455	ReturnType	static int		3451786	1					
ANR	3452456	Identifier	expand_case_fold_string		3451786	2					
ANR	3452457	ParameterList	"Node * node , regex_t * reg"		3451786	3					
ANR	3452458	Parameter	Node * node	3365:24:74678:74687	3451786	0	True				
ANR	3452459	ParameterType	Node *		3451786	0					
ANR	3452460	Identifier	node		3451786	1					
ANR	3452461	Parameter	regex_t * reg	3365:36:74690:74701	3451786	1	True				
ANR	3452462	ParameterType	regex_t *		3451786	0					
ANR	3452463	Identifier	reg		3451786	1					
ANR	3452464	CFGEntryNode	ENTRY		3451786		True				
ANR	3452465	CFGExitNode	EXIT		3451786		True				
ANR	3452466	Symbol	* sn		3451786						
ANR	3452467	Symbol	IS_NOT_NULL		3451786						
ANR	3452468	Symbol	NCAR		3451786						
ANR	3452469	Symbol	expand_case_fold_make_rem_string		3451786						
ANR	3452470	Symbol	& srem		3451786						
ANR	3452471	Symbol	sn -> s		3451786						
ANR	3452472	Symbol	len		3451786						
ANR	3452473	Symbol	IS_NULL		3451786						
ANR	3452474	Symbol	reg		3451786						
ANR	3452475	Symbol	root		3451786						
ANR	3452476	Symbol	prev_node		3451786						
ANR	3452477	Symbol	end		3451786						
ANR	3452478	Symbol	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		3451786						
ANR	3452479	Symbol	sn		3451786						
ANR	3452480	Symbol	sn -> end		3451786						
ANR	3452481	Symbol	& prev_node		3451786						
ANR	3452482	Symbol	NSTRING_IS_AMBIG		3451786						
ANR	3452483	Symbol	NULL		3451786						
ANR	3452484	Symbol	alt_num		3451786						
ANR	3452485	Symbol	top_root		3451786						
ANR	3452486	Symbol	NSTR		3451786						
ANR	3452487	Symbol	start		3451786						
ANR	3452488	Symbol	ONIGERR_MEMORY		3451786						
ANR	3452489	Symbol	enclen		3451786						
ANR	3452490	Symbol	n		3451786						
ANR	3452491	Symbol	reg -> enc		3451786						
ANR	3452492	Symbol	p		3451786						
ANR	3452493	Symbol	node		3451786						
ANR	3452494	Symbol	onig_node_list_add		3451786						
ANR	3452495	Symbol	THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION		3451786						
ANR	3452496	Symbol	r		3451786						
ANR	3452497	Symbol	srem		3451786						
ANR	3452498	Symbol	onig_node_str_cat		3451786						
ANR	3452499	Symbol	expand_case_fold_string_alt		3451786						
ANR	3452500	Symbol	reg -> case_fold_flag		3451786						
ANR	3452501	Symbol	onig_node_new_str		3451786						
ANR	3452502	Symbol	NULL_NODE		3451786						
ANR	3452503	Symbol	snode		3451786						
ANR	3452504	Symbol	items		3451786						
ANR	3452505	Symbol	* reg		3451786						
ANR	3452506	Function	setup_comb_exp_check	3510:0:77772:80595							
ANR	3452507	FunctionDef	"setup_comb_exp_check (Node * node , int state , ScanEnv * env)"		3452506	0					
ANR	3452508	CompoundStatement		3512:0:77841:80595	3452506	0					
ANR	3452509	IdentifierDeclStatement	int type ;	3513:2:77845:77853	3452506	0	True				
ANR	3452510	IdentifierDecl	type		3452506	0					
ANR	3452511	IdentifierDeclType	int		3452506	0					
ANR	3452512	Identifier	type		3452506	1					
ANR	3452513	IdentifierDeclStatement	int r = state ;	3514:2:77857:77870	3452506	1	True				
ANR	3452514	IdentifierDecl	r = state		3452506	0					
ANR	3452515	IdentifierDeclType	int		3452506	0					
ANR	3452516	Identifier	r		3452506	1					
ANR	3452517	AssignmentExpression	r = state		3452506	2		=			
ANR	3452518	Identifier	state		3452506	0					
ANR	3452519	Identifier	state		3452506	1					
ANR	3452520	ExpressionStatement	type = NTYPE ( node )	3516:2:77875:77893	3452506	2	True				
ANR	3452521	AssignmentExpression	type = NTYPE ( node )		3452506	0		=			
ANR	3452522	Identifier	type		3452506	0					
ANR	3452523	CallExpression	NTYPE ( node )		3452506	1					
ANR	3452524	Callee	NTYPE		3452506	0					
ANR	3452525	Identifier	NTYPE		3452506	0					
ANR	3452526	ArgumentList	node		3452506	1					
ANR	3452527	Argument	node		3452506	0					
ANR	3452528	Identifier	node		3452506	0					
ANR	3452529	SwitchStatement	switch ( type )		3452506	3					
ANR	3452530	Condition	type	3517:10:77905:77908	3452506	0	True				
ANR	3452531	Identifier	type		3452506	0					
ANR	3452532	CompoundStatement		6:16:69:69	3452506	1					
ANR	3452533	Label	case NT_LIST :	3518:2:77915:77927	3452506	0	True				
ANR	3452534	Identifier	NT_LIST		3452506	0					
ANR	3452535	CompoundStatement		9:6:99:121	3452506	1					
ANR	3452536	IdentifierDeclStatement	Node * prev = NULL_NODE ;	3520:6:77941:77963	3452506	0	True				
ANR	3452537	IdentifierDecl	* prev = NULL_NODE		3452506	0					
ANR	3452538	IdentifierDeclType	Node *		3452506	0					
ANR	3452539	Identifier	prev		3452506	1					
ANR	3452540	AssignmentExpression	* prev = NULL_NODE		3452506	2		=			
ANR	3452541	Identifier	NULL_NODE		3452506	0					
ANR	3452542	Identifier	NULL_NODE		3452506	1					
ANR	3452543	DoStatement	do		3452506	1					
ANR	3452544	CompoundStatement		10:9:132:132	3452506	0					
ANR	3452545	ExpressionStatement	"r = setup_comb_exp_check ( NCAR ( node ) , r , env )"	3522:1:77977:78021	3452506	0	True				
ANR	3452546	AssignmentExpression	"r = setup_comb_exp_check ( NCAR ( node ) , r , env )"		3452506	0		=			
ANR	3452547	Identifier	r		3452506	0					
ANR	3452548	CallExpression	"setup_comb_exp_check ( NCAR ( node ) , r , env )"		3452506	1					
ANR	3452549	Callee	setup_comb_exp_check		3452506	0					
ANR	3452550	Identifier	setup_comb_exp_check		3452506	0					
ANR	3452551	ArgumentList	NCAR ( node )		3452506	1					
ANR	3452552	Argument	NCAR ( node )		3452506	0					
ANR	3452553	CallExpression	NCAR ( node )		3452506	0					
ANR	3452554	Callee	NCAR		3452506	0					
ANR	3452555	Identifier	NCAR		3452506	0					
ANR	3452556	ArgumentList	node		3452506	1					
ANR	3452557	Argument	node		3452506	0					
ANR	3452558	Identifier	node		3452506	0					
ANR	3452559	Argument	r		3452506	1					
ANR	3452560	Identifier	r		3452506	0					
ANR	3452561	Argument	env		3452506	2					
ANR	3452562	Identifier	env		3452506	0					
ANR	3452563	ExpressionStatement	prev = NCAR ( node )	3523:1:78024:78041	3452506	1	True				
ANR	3452564	AssignmentExpression	prev = NCAR ( node )		3452506	0		=			
ANR	3452565	Identifier	prev		3452506	0					
ANR	3452566	CallExpression	NCAR ( node )		3452506	1					
ANR	3452567	Callee	NCAR		3452506	0					
ANR	3452568	Identifier	NCAR		3452506	0					
ANR	3452569	ArgumentList	node		3452506	1					
ANR	3452570	Argument	node		3452506	0					
ANR	3452571	Identifier	node		3452506	0					
ANR	3452572	Condition	r >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3524:15:78058:78097	3452506	1	True				
ANR	3452573	AndExpression	r >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3452506	0		&&			
ANR	3452574	RelationalExpression	r >= 0		3452506	0		>=			
ANR	3452575	Identifier	r		3452506	0					
ANR	3452576	PrimaryExpression	0		3452506	1					
ANR	3452577	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3452506	1					
ANR	3452578	Callee	IS_NOT_NULL		3452506	0					
ANR	3452579	Identifier	IS_NOT_NULL		3452506	0					
ANR	3452580	ArgumentList	node = NCDR ( node )		3452506	1					
ANR	3452581	Argument	node = NCDR ( node )		3452506	0					
ANR	3452582	AssignmentExpression	node = NCDR ( node )		3452506	0		=			
ANR	3452583	Identifier	node		3452506	0					
ANR	3452584	CallExpression	NCDR ( node )		3452506	1					
ANR	3452585	Callee	NCDR		3452506	0					
ANR	3452586	Identifier	NCDR		3452506	0					
ANR	3452587	ArgumentList	node		3452506	1					
ANR	3452588	Argument	node		3452506	0					
ANR	3452589	Identifier	node		3452506	0					
ANR	3452590	BreakStatement	break ;	3526:4:78111:78116	3452506	2	True				
ANR	3452591	Label	case NT_ALT :	3528:2:78121:78132	3452506	3	True				
ANR	3452592	Identifier	NT_ALT		3452506	0					
ANR	3452593	CompoundStatement		19:6:304:311	3452506	4					
ANR	3452594	IdentifierDeclStatement	int ret ;	3530:6:78146:78153	3452506	0	True				
ANR	3452595	IdentifierDecl	ret		3452506	0					
ANR	3452596	IdentifierDeclType	int		3452506	0					
ANR	3452597	Identifier	ret		3452506	1					
ANR	3452598	DoStatement	do		3452506	1					
ANR	3452599	CompoundStatement		20:9:322:322	3452506	0					
ANR	3452600	ExpressionStatement	"ret = setup_comb_exp_check ( NCAR ( node ) , state , env )"	3532:1:78167:78217	3452506	0	True				
ANR	3452601	AssignmentExpression	"ret = setup_comb_exp_check ( NCAR ( node ) , state , env )"		3452506	0		=			
ANR	3452602	Identifier	ret		3452506	0					
ANR	3452603	CallExpression	"setup_comb_exp_check ( NCAR ( node ) , state , env )"		3452506	1					
ANR	3452604	Callee	setup_comb_exp_check		3452506	0					
ANR	3452605	Identifier	setup_comb_exp_check		3452506	0					
ANR	3452606	ArgumentList	NCAR ( node )		3452506	1					
ANR	3452607	Argument	NCAR ( node )		3452506	0					
ANR	3452608	CallExpression	NCAR ( node )		3452506	0					
ANR	3452609	Callee	NCAR		3452506	0					
ANR	3452610	Identifier	NCAR		3452506	0					
ANR	3452611	ArgumentList	node		3452506	1					
ANR	3452612	Argument	node		3452506	0					
ANR	3452613	Identifier	node		3452506	0					
ANR	3452614	Argument	state		3452506	1					
ANR	3452615	Identifier	state		3452506	0					
ANR	3452616	Argument	env		3452506	2					
ANR	3452617	Identifier	env		3452506	0					
ANR	3452618	ExpressionStatement	r |= ret	3533:1:78220:78228	3452506	1	True				
ANR	3452619	AssignmentExpression	r |= ret		3452506	0		|=			
ANR	3452620	Identifier	r		3452506	0					
ANR	3452621	Identifier	ret		3452506	1					
ANR	3452622	Condition	ret >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3534:15:78245:78286	3452506	1	True				
ANR	3452623	AndExpression	ret >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3452506	0		&&			
ANR	3452624	RelationalExpression	ret >= 0		3452506	0		>=			
ANR	3452625	Identifier	ret		3452506	0					
ANR	3452626	PrimaryExpression	0		3452506	1					
ANR	3452627	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3452506	1					
ANR	3452628	Callee	IS_NOT_NULL		3452506	0					
ANR	3452629	Identifier	IS_NOT_NULL		3452506	0					
ANR	3452630	ArgumentList	node = NCDR ( node )		3452506	1					
ANR	3452631	Argument	node = NCDR ( node )		3452506	0					
ANR	3452632	AssignmentExpression	node = NCDR ( node )		3452506	0		=			
ANR	3452633	Identifier	node		3452506	0					
ANR	3452634	CallExpression	NCDR ( node )		3452506	1					
ANR	3452635	Callee	NCDR		3452506	0					
ANR	3452636	Identifier	NCDR		3452506	0					
ANR	3452637	ArgumentList	node		3452506	1					
ANR	3452638	Argument	node		3452506	0					
ANR	3452639	Identifier	node		3452506	0					
ANR	3452640	BreakStatement	break ;	3536:4:78300:78305	3452506	5	True				
ANR	3452641	Label	case NT_QTFR :	3538:2:78310:78322	3452506	6	True				
ANR	3452642	Identifier	NT_QTFR		3452506	0					
ANR	3452643	CompoundStatement		33:6:617:628	3452506	7					
ANR	3452644	IdentifierDeclStatement	int child_state = state ;	3540:6:78336:78359	3452506	0	True				
ANR	3452645	IdentifierDecl	child_state = state		3452506	0					
ANR	3452646	IdentifierDeclType	int		3452506	0					
ANR	3452647	Identifier	child_state		3452506	1					
ANR	3452648	AssignmentExpression	child_state = state		3452506	2		=			
ANR	3452649	Identifier	state		3452506	0					
ANR	3452650	Identifier	state		3452506	1					
ANR	3452651	IdentifierDeclStatement	int add_state = 0 ;	3541:6:78367:78384	3452506	1	True				
ANR	3452652	IdentifierDecl	add_state = 0		3452506	0					
ANR	3452653	IdentifierDeclType	int		3452506	0					
ANR	3452654	Identifier	add_state		3452506	1					
ANR	3452655	AssignmentExpression	add_state = 0		3452506	2		=			
ANR	3452656	Identifier	add_state		3452506	0					
ANR	3452657	PrimaryExpression	0		3452506	1					
ANR	3452658	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	3542:6:78392:78418	3452506	2	True				
ANR	3452659	IdentifierDecl	* qn = NQTFR ( node )		3452506	0					
ANR	3452660	IdentifierDeclType	QtfrNode *		3452506	0					
ANR	3452661	Identifier	qn		3452506	1					
ANR	3452662	AssignmentExpression	* qn = NQTFR ( node )		3452506	2		=			
ANR	3452663	Identifier	qn		3452506	0					
ANR	3452664	CallExpression	NQTFR ( node )		3452506	1					
ANR	3452665	Callee	NQTFR		3452506	0					
ANR	3452666	Identifier	NQTFR		3452506	0					
ANR	3452667	ArgumentList	node		3452506	1					
ANR	3452668	Argument	node		3452506	0					
ANR	3452669	Identifier	node		3452506	0					
ANR	3452670	IdentifierDeclStatement	Node * target = qn -> target ;	3543:6:78426:78451	3452506	3	True				
ANR	3452671	IdentifierDecl	* target = qn -> target		3452506	0					
ANR	3452672	IdentifierDeclType	Node *		3452506	0					
ANR	3452673	Identifier	target		3452506	1					
ANR	3452674	AssignmentExpression	* target = qn -> target		3452506	2		=			
ANR	3452675	Identifier	target		3452506	0					
ANR	3452676	PtrMemberAccess	qn -> target		3452506	1					
ANR	3452677	Identifier	qn		3452506	0					
ANR	3452678	Identifier	target		3452506	1					
ANR	3452679	IdentifierDeclStatement	int var_num ;	3544:6:78459:78470	3452506	4	True				
ANR	3452680	IdentifierDecl	var_num		3452506	0					
ANR	3452681	IdentifierDeclType	int		3452506	0					
ANR	3452682	Identifier	var_num		3452506	1					
ANR	3452683	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> upper ) )		3452506	5					
ANR	3452684	Condition	! IS_REPEAT_INFINITE ( qn -> upper )	3546:10:78483:78513	3452506	0	True				
ANR	3452685	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> upper )		3452506	0					
ANR	3452686	UnaryOperator	!		3452506	0					
ANR	3452687	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3452506	1					
ANR	3452688	Callee	IS_REPEAT_INFINITE		3452506	0					
ANR	3452689	Identifier	IS_REPEAT_INFINITE		3452506	0					
ANR	3452690	ArgumentList	qn -> upper		3452506	1					
ANR	3452691	Argument	qn -> upper		3452506	0					
ANR	3452692	PtrMemberAccess	qn -> upper		3452506	0					
ANR	3452693	Identifier	qn		3452506	0					
ANR	3452694	Identifier	upper		3452506	1					
ANR	3452695	CompoundStatement		35:43:674:674	3452506	1					
ANR	3452696	IfStatement	if ( qn -> upper > 1 )		3452506	0					
ANR	3452697	Condition	qn -> upper > 1	3547:5:78523:78535	3452506	0	True				
ANR	3452698	RelationalExpression	qn -> upper > 1		3452506	0		>			
ANR	3452699	PtrMemberAccess	qn -> upper		3452506	0					
ANR	3452700	Identifier	qn		3452506	0					
ANR	3452701	Identifier	upper		3452506	1					
ANR	3452702	PrimaryExpression	1		3452506	1					
ANR	3452703	CompoundStatement		36:20:696:696	3452506	1					
ANR	3452704	ExpressionStatement	child_state |= CEC_IN_FINITE_REPEAT	3549:3:78577:78612	3452506	0	True				
ANR	3452705	AssignmentExpression	child_state |= CEC_IN_FINITE_REPEAT		3452506	0		|=			
ANR	3452706	Identifier	child_state		3452506	0					
ANR	3452707	Identifier	CEC_IN_FINITE_REPEAT		3452506	1					
ANR	3452708	IfStatement	if ( env -> backrefed_mem == 0 )		3452506	1					
ANR	3452709	Condition	env -> backrefed_mem == 0	3552:7:78682:78704	3452506	0	True				
ANR	3452710	EqualityExpression	env -> backrefed_mem == 0		3452506	0		==			
ANR	3452711	PtrMemberAccess	env -> backrefed_mem		3452506	0					
ANR	3452712	Identifier	env		3452506	0					
ANR	3452713	Identifier	backrefed_mem		3452506	1					
ANR	3452714	PrimaryExpression	0		3452506	1					
ANR	3452715	CompoundStatement		41:32:865:865	3452506	1					
ANR	3452716	IfStatement	if ( NTYPE ( qn -> target ) == NT_ENCLOSE )		3452506	0					
ANR	3452717	Condition	NTYPE ( qn -> target ) == NT_ENCLOSE	3553:9:78718:78748	3452506	0	True				
ANR	3452718	EqualityExpression	NTYPE ( qn -> target ) == NT_ENCLOSE		3452506	0		==			
ANR	3452719	CallExpression	NTYPE ( qn -> target )		3452506	0					
ANR	3452720	Callee	NTYPE		3452506	0					
ANR	3452721	Identifier	NTYPE		3452506	0					
ANR	3452722	ArgumentList	qn -> target		3452506	1					
ANR	3452723	Argument	qn -> target		3452506	0					
ANR	3452724	PtrMemberAccess	qn -> target		3452506	0					
ANR	3452725	Identifier	qn		3452506	0					
ANR	3452726	Identifier	target		3452506	1					
ANR	3452727	Identifier	NT_ENCLOSE		3452506	1					
ANR	3452728	CompoundStatement		43:7:918:956	3452506	1					
ANR	3452729	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( qn -> target ) ;	3554:7:78760:78798	3452506	0	True				
ANR	3452730	IdentifierDecl	* en = NENCLOSE ( qn -> target )		3452506	0					
ANR	3452731	IdentifierDeclType	EncloseNode *		3452506	0					
ANR	3452732	Identifier	en		3452506	1					
ANR	3452733	AssignmentExpression	* en = NENCLOSE ( qn -> target )		3452506	2		=			
ANR	3452734	Identifier	en		3452506	0					
ANR	3452735	CallExpression	NENCLOSE ( qn -> target )		3452506	1					
ANR	3452736	Callee	NENCLOSE		3452506	0					
ANR	3452737	Identifier	NENCLOSE		3452506	0					
ANR	3452738	ArgumentList	qn -> target		3452506	1					
ANR	3452739	Argument	qn -> target		3452506	0					
ANR	3452740	PtrMemberAccess	qn -> target		3452506	0					
ANR	3452741	Identifier	qn		3452506	0					
ANR	3452742	Identifier	target		3452506	1					
ANR	3452743	IfStatement	if ( en -> type == ENCLOSE_MEMORY )		3452506	1					
ANR	3452744	Condition	en -> type == ENCLOSE_MEMORY	3555:11:78811:78836	3452506	0	True				
ANR	3452745	EqualityExpression	en -> type == ENCLOSE_MEMORY		3452506	0		==			
ANR	3452746	PtrMemberAccess	en -> type		3452506	0					
ANR	3452747	Identifier	en		3452506	0					
ANR	3452748	Identifier	type		3452506	1					
ANR	3452749	Identifier	ENCLOSE_MEMORY		3452506	1					
ANR	3452750	CompoundStatement		44:39:997:997	3452506	1					
ANR	3452751	IfStatement	if ( NTYPE ( en -> target ) == NT_QTFR )		3452506	0					
ANR	3452752	Condition	NTYPE ( en -> target ) == NT_QTFR	3556:6:78847:78874	3452506	0	True				
ANR	3452753	EqualityExpression	NTYPE ( en -> target ) == NT_QTFR		3452506	0		==			
ANR	3452754	CallExpression	NTYPE ( en -> target )		3452506	0					
ANR	3452755	Callee	NTYPE		3452506	0					
ANR	3452756	Identifier	NTYPE		3452506	0					
ANR	3452757	ArgumentList	en -> target		3452506	1					
ANR	3452758	Argument	en -> target		3452506	0					
ANR	3452759	PtrMemberAccess	en -> target		3452506	0					
ANR	3452760	Identifier	en		3452506	0					
ANR	3452761	Identifier	target		3452506	1					
ANR	3452762	Identifier	NT_QTFR		3452506	1					
ANR	3452763	CompoundStatement		46:4:1041:1072	3452506	1					
ANR	3452764	IdentifierDeclStatement	QtfrNode * q = NQTFR ( en -> target ) ;	3557:4:78883:78914	3452506	0	True				
ANR	3452765	IdentifierDecl	* q = NQTFR ( en -> target )		3452506	0					
ANR	3452766	IdentifierDeclType	QtfrNode *		3452506	0					
ANR	3452767	Identifier	q		3452506	1					
ANR	3452768	AssignmentExpression	* q = NQTFR ( en -> target )		3452506	2		=			
ANR	3452769	Identifier	q		3452506	0					
ANR	3452770	CallExpression	NQTFR ( en -> target )		3452506	1					
ANR	3452771	Callee	NQTFR		3452506	0					
ANR	3452772	Identifier	NQTFR		3452506	0					
ANR	3452773	ArgumentList	en -> target		3452506	1					
ANR	3452774	Argument	en -> target		3452506	0					
ANR	3452775	PtrMemberAccess	en -> target		3452506	0					
ANR	3452776	Identifier	en		3452506	0					
ANR	3452777	Identifier	target		3452506	1					
ANR	3452778	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) && q -> greedy == qn -> greedy )		3452506	1					
ANR	3452779	Condition	IS_REPEAT_INFINITE ( q -> upper ) && q -> greedy == qn -> greedy	3558:8:78924:78986	3452506	0	True				
ANR	3452780	AndExpression	IS_REPEAT_INFINITE ( q -> upper ) && q -> greedy == qn -> greedy		3452506	0		&&			
ANR	3452781	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		3452506	0					
ANR	3452782	Callee	IS_REPEAT_INFINITE		3452506	0					
ANR	3452783	Identifier	IS_REPEAT_INFINITE		3452506	0					
ANR	3452784	ArgumentList	q -> upper		3452506	1					
ANR	3452785	Argument	q -> upper		3452506	0					
ANR	3452786	PtrMemberAccess	q -> upper		3452506	0					
ANR	3452787	Identifier	q		3452506	0					
ANR	3452788	Identifier	upper		3452506	1					
ANR	3452789	EqualityExpression	q -> greedy == qn -> greedy		3452506	1		==			
ANR	3452790	PtrMemberAccess	q -> greedy		3452506	0					
ANR	3452791	Identifier	q		3452506	0					
ANR	3452792	Identifier	greedy		3452506	1					
ANR	3452793	PtrMemberAccess	qn -> greedy		3452506	1					
ANR	3452794	Identifier	qn		3452506	0					
ANR	3452795	Identifier	greedy		3452506	1					
ANR	3452796	CompoundStatement		48:36:1147:1147	3452506	1					
ANR	3452797	ExpressionStatement	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )	3560:6:78997:79041	3452506	0	True				
ANR	3452798	AssignmentExpression	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )		3452506	0		=			
ANR	3452799	PtrMemberAccess	qn -> upper		3452506	0					
ANR	3452800	Identifier	qn		3452506	0					
ANR	3452801	Identifier	upper		3452506	1					
ANR	3452802	ConditionalExpression	qn -> lower == 0 ? 1 : qn -> lower		3452506	1					
ANR	3452803	Condition	qn -> lower == 0		3452506	0					
ANR	3452804	EqualityExpression	qn -> lower == 0		3452506	0		==			
ANR	3452805	PtrMemberAccess	qn -> lower		3452506	0					
ANR	3452806	Identifier	qn		3452506	0					
ANR	3452807	Identifier	lower		3452506	1					
ANR	3452808	PrimaryExpression	0		3452506	1					
ANR	3452809	PrimaryExpression	1		3452506	1					
ANR	3452810	PtrMemberAccess	qn -> lower		3452506	2					
ANR	3452811	Identifier	qn		3452506	0					
ANR	3452812	Identifier	lower		3452506	1					
ANR	3452813	IfStatement	if ( qn -> upper == 1 )		3452506	1					
ANR	3452814	Condition	qn -> upper == 1	3561:10:79053:79066	3452506	0	True				
ANR	3452815	EqualityExpression	qn -> upper == 1		3452506	0		==			
ANR	3452816	PtrMemberAccess	qn -> upper		3452506	0					
ANR	3452817	Identifier	qn		3452506	0					
ANR	3452818	Identifier	upper		3452506	1					
ANR	3452819	PrimaryExpression	1		3452506	1					
ANR	3452820	ExpressionStatement	child_state = state	3562:8:79077:79096	3452506	1	True				
ANR	3452821	AssignmentExpression	child_state = state		3452506	0		=			
ANR	3452822	Identifier	child_state		3452506	0					
ANR	3452823	Identifier	state		3452506	1					
ANR	3452824	IfStatement	if ( state & CEC_IN_FINITE_REPEAT )		3452506	6					
ANR	3452825	Condition	state & CEC_IN_FINITE_REPEAT	3571:10:79151:79178	3452506	0	True				
ANR	3452826	BitAndExpression	state & CEC_IN_FINITE_REPEAT		3452506	0		&			
ANR	3452827	Identifier	state		3452506	0					
ANR	3452828	Identifier	CEC_IN_FINITE_REPEAT		3452506	1					
ANR	3452829	CompoundStatement		60:40:1339:1339	3452506	1					
ANR	3452830	ExpressionStatement	qn -> comb_exp_check_num = - 1	3572:1:79184:79211	3452506	0	True				
ANR	3452831	AssignmentExpression	qn -> comb_exp_check_num = - 1		3452506	0		=			
ANR	3452832	PtrMemberAccess	qn -> comb_exp_check_num		3452506	0					
ANR	3452833	Identifier	qn		3452506	0					
ANR	3452834	Identifier	comb_exp_check_num		3452506	1					
ANR	3452835	UnaryOperationExpression	- 1		3452506	1					
ANR	3452836	UnaryOperator	-		3452506	0					
ANR	3452837	PrimaryExpression	1		3452506	1					
ANR	3452838	ElseStatement	else		3452506	0					
ANR	3452839	CompoundStatement		63:11:1390:1390	3452506	0					
ANR	3452840	IfStatement	if ( IS_REPEAT_INFINITE ( qn -> upper ) )		3452506	0					
ANR	3452841	Condition	IS_REPEAT_INFINITE ( qn -> upper )	3575:5:79239:79267	3452506	0	True				
ANR	3452842	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3452506	0					
ANR	3452843	Callee	IS_REPEAT_INFINITE		3452506	0					
ANR	3452844	Identifier	IS_REPEAT_INFINITE		3452506	0					
ANR	3452845	ArgumentList	qn -> upper		3452506	1					
ANR	3452846	Argument	qn -> upper		3452506	0					
ANR	3452847	PtrMemberAccess	qn -> upper		3452506	0					
ANR	3452848	Identifier	qn		3452506	0					
ANR	3452849	Identifier	upper		3452506	1					
ANR	3452850	CompoundStatement		64:36:1428:1428	3452506	1					
ANR	3452851	ExpressionStatement	var_num = CEC_INFINITE_NUM	3576:3:79275:79301	3452506	0	True				
ANR	3452852	AssignmentExpression	var_num = CEC_INFINITE_NUM		3452506	0		=			
ANR	3452853	Identifier	var_num		3452506	0					
ANR	3452854	Identifier	CEC_INFINITE_NUM		3452506	1					
ANR	3452855	ExpressionStatement	child_state |= CEC_IN_INFINITE_REPEAT	3577:3:79306:79343	3452506	1	True				
ANR	3452856	AssignmentExpression	child_state |= CEC_IN_INFINITE_REPEAT		3452506	0		|=			
ANR	3452857	Identifier	child_state		3452506	0					
ANR	3452858	Identifier	CEC_IN_INFINITE_REPEAT		3452506	1					
ANR	3452859	ElseStatement	else		3452506	0					
ANR	3452860	CompoundStatement		68:6:1512:1512	3452506	0					
ANR	3452861	ExpressionStatement	var_num = qn -> upper - qn -> lower	3580:3:79359:79390	3452506	0	True				
ANR	3452862	AssignmentExpression	var_num = qn -> upper - qn -> lower		3452506	0		=			
ANR	3452863	Identifier	var_num		3452506	0					
ANR	3452864	AdditiveExpression	qn -> upper - qn -> lower		3452506	1		-			
ANR	3452865	PtrMemberAccess	qn -> upper		3452506	0					
ANR	3452866	Identifier	qn		3452506	0					
ANR	3452867	Identifier	upper		3452506	1					
ANR	3452868	PtrMemberAccess	qn -> lower		3452506	1					
ANR	3452869	Identifier	qn		3452506	0					
ANR	3452870	Identifier	lower		3452506	1					
ANR	3452871	IfStatement	if ( var_num >= CEC_THRES_NUM_BIG_REPEAT )		3452506	1					
ANR	3452872	Condition	var_num >= CEC_THRES_NUM_BIG_REPEAT	3583:5:79401:79435	3452506	0	True				
ANR	3452873	RelationalExpression	var_num >= CEC_THRES_NUM_BIG_REPEAT		3452506	0		>=			
ANR	3452874	Identifier	var_num		3452506	0					
ANR	3452875	Identifier	CEC_THRES_NUM_BIG_REPEAT		3452506	1					
ANR	3452876	ExpressionStatement	add_state |= CEC_CONT_BIG_REPEAT	3584:3:79441:79473	3452506	1	True				
ANR	3452877	AssignmentExpression	add_state |= CEC_CONT_BIG_REPEAT		3452506	0		|=			
ANR	3452878	Identifier	add_state		3452506	0					
ANR	3452879	Identifier	CEC_CONT_BIG_REPEAT		3452506	1					
ANR	3452880	IfStatement	if ( ( ( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0 ) || ( ( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT ) )		3452506	2					
ANR	3452881	Condition	( ( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0 ) || ( ( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT )	3586:5:79481:79625	3452506	0	True				
ANR	3452882	OrExpression	( ( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0 ) || ( ( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT )		3452506	0		||			
ANR	3452883	AndExpression	( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0		3452506	0		&&			
ANR	3452884	EqualityExpression	( state & CEC_IN_INFINITE_REPEAT ) != 0		3452506	0		!=			
ANR	3452885	BitAndExpression	state & CEC_IN_INFINITE_REPEAT		3452506	0		&			
ANR	3452886	Identifier	state		3452506	0					
ANR	3452887	Identifier	CEC_IN_INFINITE_REPEAT		3452506	1					
ANR	3452888	PrimaryExpression	0		3452506	1					
ANR	3452889	EqualityExpression	var_num != 0		3452506	1		!=			
ANR	3452890	Identifier	var_num		3452506	0					
ANR	3452891	PrimaryExpression	0		3452506	1					
ANR	3452892	AndExpression	( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT		3452506	1		&&			
ANR	3452893	EqualityExpression	( state & CEC_CONT_BIG_REPEAT ) != 0		3452506	0		!=			
ANR	3452894	BitAndExpression	state & CEC_CONT_BIG_REPEAT		3452506	0		&			
ANR	3452895	Identifier	state		3452506	0					
ANR	3452896	Identifier	CEC_CONT_BIG_REPEAT		3452506	1					
ANR	3452897	PrimaryExpression	0		3452506	1					
ANR	3452898	RelationalExpression	var_num >= CEC_THRES_NUM_BIG_REPEAT		3452506	1		>=			
ANR	3452899	Identifier	var_num		3452506	0					
ANR	3452900	Identifier	CEC_THRES_NUM_BIG_REPEAT		3452506	1					
ANR	3452901	CompoundStatement		77:44:1786:1786	3452506	1					
ANR	3452902	IfStatement	if ( qn -> comb_exp_check_num == 0 )		3452506	0					
ANR	3452903	Condition	qn -> comb_exp_check_num == 0	3589:7:79637:79663	3452506	0	True				
ANR	3452904	EqualityExpression	qn -> comb_exp_check_num == 0		3452506	0		==			
ANR	3452905	PtrMemberAccess	qn -> comb_exp_check_num		3452506	0					
ANR	3452906	Identifier	qn		3452506	0					
ANR	3452907	Identifier	comb_exp_check_num		3452506	1					
ANR	3452908	PrimaryExpression	0		3452506	1					
ANR	3452909	CompoundStatement		78:36:1824:1824	3452506	1					
ANR	3452910	ExpressionStatement	env -> num_comb_exp_check ++	3590:5:79673:79698	3452506	0	True				
ANR	3452911	PostIncDecOperationExpression	env -> num_comb_exp_check ++		3452506	0					
ANR	3452912	PtrMemberAccess	env -> num_comb_exp_check		3452506	0					
ANR	3452913	Identifier	env		3452506	0					
ANR	3452914	Identifier	num_comb_exp_check		3452506	1					
ANR	3452915	IncDec	++		3452506	1					
ANR	3452916	ExpressionStatement	qn -> comb_exp_check_num = env -> num_comb_exp_check	3591:5:79705:79753	3452506	1	True				
ANR	3452917	AssignmentExpression	qn -> comb_exp_check_num = env -> num_comb_exp_check		3452506	0		=			
ANR	3452918	PtrMemberAccess	qn -> comb_exp_check_num		3452506	0					
ANR	3452919	Identifier	qn		3452506	0					
ANR	3452920	Identifier	comb_exp_check_num		3452506	1					
ANR	3452921	PtrMemberAccess	env -> num_comb_exp_check		3452506	1					
ANR	3452922	Identifier	env		3452506	0					
ANR	3452923	Identifier	num_comb_exp_check		3452506	1					
ANR	3452924	IfStatement	if ( env -> curr_max_regnum > env -> comb_exp_max_regnum )		3452506	2					
ANR	3452925	Condition	env -> curr_max_regnum > env -> comb_exp_max_regnum	3592:9:79764:79810	3452506	0	True				
ANR	3452926	RelationalExpression	env -> curr_max_regnum > env -> comb_exp_max_regnum		3452506	0		>			
ANR	3452927	PtrMemberAccess	env -> curr_max_regnum		3452506	0					
ANR	3452928	Identifier	env		3452506	0					
ANR	3452929	Identifier	curr_max_regnum		3452506	1					
ANR	3452930	PtrMemberAccess	env -> comb_exp_max_regnum		3452506	1					
ANR	3452931	Identifier	env		3452506	0					
ANR	3452932	Identifier	comb_exp_max_regnum		3452506	1					
ANR	3452933	ExpressionStatement	env -> comb_exp_max_regnum = env -> curr_max_regnum	3593:7:79820:79867	3452506	1	True				
ANR	3452934	AssignmentExpression	env -> comb_exp_max_regnum = env -> curr_max_regnum		3452506	0		=			
ANR	3452935	PtrMemberAccess	env -> comb_exp_max_regnum		3452506	0					
ANR	3452936	Identifier	env		3452506	0					
ANR	3452937	Identifier	comb_exp_max_regnum		3452506	1					
ANR	3452938	PtrMemberAccess	env -> curr_max_regnum		3452506	1					
ANR	3452939	Identifier	env		3452506	0					
ANR	3452940	Identifier	curr_max_regnum		3452506	1					
ANR	3452941	ExpressionStatement	"r = setup_comb_exp_check ( target , child_state , env )"	3598:6:79892:79942	3452506	7	True				
ANR	3452942	AssignmentExpression	"r = setup_comb_exp_check ( target , child_state , env )"		3452506	0		=			
ANR	3452943	Identifier	r		3452506	0					
ANR	3452944	CallExpression	"setup_comb_exp_check ( target , child_state , env )"		3452506	1					
ANR	3452945	Callee	setup_comb_exp_check		3452506	0					
ANR	3452946	Identifier	setup_comb_exp_check		3452506	0					
ANR	3452947	ArgumentList	target		3452506	1					
ANR	3452948	Argument	target		3452506	0					
ANR	3452949	Identifier	target		3452506	0					
ANR	3452950	Argument	child_state		3452506	1					
ANR	3452951	Identifier	child_state		3452506	0					
ANR	3452952	Argument	env		3452506	2					
ANR	3452953	Identifier	env		3452506	0					
ANR	3452954	ExpressionStatement	r |= add_state	3599:6:79950:79964	3452506	8	True				
ANR	3452955	AssignmentExpression	r |= add_state		3452506	0		|=			
ANR	3452956	Identifier	r		3452506	0					
ANR	3452957	Identifier	add_state		3452506	1					
ANR	3452958	BreakStatement	break ;	3601:4:79976:79981	3452506	8	True				
ANR	3452959	Label	case NT_ENCLOSE :	3603:2:79986:80001	3452506	9	True				
ANR	3452960	Identifier	NT_ENCLOSE		3452506	0					
ANR	3452961	CompoundStatement		94:6:2173:2205	3452506	10					
ANR	3452962	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	3605:6:80015:80047	3452506	0	True				
ANR	3452963	IdentifierDecl	* en = NENCLOSE ( node )		3452506	0					
ANR	3452964	IdentifierDeclType	EncloseNode *		3452506	0					
ANR	3452965	Identifier	en		3452506	1					
ANR	3452966	AssignmentExpression	* en = NENCLOSE ( node )		3452506	2		=			
ANR	3452967	Identifier	en		3452506	0					
ANR	3452968	CallExpression	NENCLOSE ( node )		3452506	1					
ANR	3452969	Callee	NENCLOSE		3452506	0					
ANR	3452970	Identifier	NENCLOSE		3452506	0					
ANR	3452971	ArgumentList	node		3452506	1					
ANR	3452972	Argument	node		3452506	0					
ANR	3452973	Identifier	node		3452506	0					
ANR	3452974	SwitchStatement	switch ( en -> type )		3452506	1					
ANR	3452975	Condition	en -> type	3607:14:80064:80071	3452506	0	True				
ANR	3452976	PtrMemberAccess	en -> type		3452506	0					
ANR	3452977	Identifier	en		3452506	0					
ANR	3452978	Identifier	type		3452506	1					
ANR	3452979	CompoundStatement		96:24:2232:2232	3452506	1					
ANR	3452980	Label	case ENCLOSE_MEMORY :	3608:6:80082:80101	3452506	0	True				
ANR	3452981	Identifier	ENCLOSE_MEMORY		3452506	0					
ANR	3452982	CompoundStatement		98:1:2262:2262	3452506	1					
ANR	3452983	IfStatement	if ( env -> curr_max_regnum < en -> regnum )		3452506	0					
ANR	3452984	Condition	env -> curr_max_regnum < en -> regnum	3610:7:80113:80145	3452506	0	True				
ANR	3452985	RelationalExpression	env -> curr_max_regnum < en -> regnum		3452506	0		<			
ANR	3452986	PtrMemberAccess	env -> curr_max_regnum		3452506	0					
ANR	3452987	Identifier	env		3452506	0					
ANR	3452988	Identifier	curr_max_regnum		3452506	1					
ANR	3452989	PtrMemberAccess	en -> regnum		3452506	1					
ANR	3452990	Identifier	en		3452506	0					
ANR	3452991	Identifier	regnum		3452506	1					
ANR	3452992	ExpressionStatement	env -> curr_max_regnum = en -> regnum	3611:5:80153:80186	3452506	1	True				
ANR	3452993	AssignmentExpression	env -> curr_max_regnum = en -> regnum		3452506	0		=			
ANR	3452994	PtrMemberAccess	env -> curr_max_regnum		3452506	0					
ANR	3452995	Identifier	env		3452506	0					
ANR	3452996	Identifier	curr_max_regnum		3452506	1					
ANR	3452997	PtrMemberAccess	en -> regnum		3452506	1					
ANR	3452998	Identifier	en		3452506	0					
ANR	3452999	Identifier	regnum		3452506	1					
ANR	3453000	ExpressionStatement	"r = setup_comb_exp_check ( en -> target , state , env )"	3613:3:80192:80240	3452506	1	True				
ANR	3453001	AssignmentExpression	"r = setup_comb_exp_check ( en -> target , state , env )"		3452506	0		=			
ANR	3453002	Identifier	r		3452506	0					
ANR	3453003	CallExpression	"setup_comb_exp_check ( en -> target , state , env )"		3452506	1					
ANR	3453004	Callee	setup_comb_exp_check		3452506	0					
ANR	3453005	Identifier	setup_comb_exp_check		3452506	0					
ANR	3453006	ArgumentList	en -> target		3452506	1					
ANR	3453007	Argument	en -> target		3452506	0					
ANR	3453008	PtrMemberAccess	en -> target		3452506	0					
ANR	3453009	Identifier	en		3452506	0					
ANR	3453010	Identifier	target		3452506	1					
ANR	3453011	Argument	state		3452506	1					
ANR	3453012	Identifier	state		3452506	0					
ANR	3453013	Argument	env		3452506	2					
ANR	3453014	Identifier	env		3452506	0					
ANR	3453015	BreakStatement	break ;	3615:1:80246:80251	3452506	2	True				
ANR	3453016	Label	default :	3617:6:80260:80267	3452506	3	True				
ANR	3453017	Identifier	default		3452506	0					
ANR	3453018	ExpressionStatement	"r = setup_comb_exp_check ( en -> target , state , env )"	3618:1:80270:80318	3452506	4	True				
ANR	3453019	AssignmentExpression	"r = setup_comb_exp_check ( en -> target , state , env )"		3452506	0		=			
ANR	3453020	Identifier	r		3452506	0					
ANR	3453021	CallExpression	"setup_comb_exp_check ( en -> target , state , env )"		3452506	1					
ANR	3453022	Callee	setup_comb_exp_check		3452506	0					
ANR	3453023	Identifier	setup_comb_exp_check		3452506	0					
ANR	3453024	ArgumentList	en -> target		3452506	1					
ANR	3453025	Argument	en -> target		3452506	0					
ANR	3453026	PtrMemberAccess	en -> target		3452506	0					
ANR	3453027	Identifier	en		3452506	0					
ANR	3453028	Identifier	target		3452506	1					
ANR	3453029	Argument	state		3452506	1					
ANR	3453030	Identifier	state		3452506	0					
ANR	3453031	Argument	env		3452506	2					
ANR	3453032	Identifier	env		3452506	0					
ANR	3453033	BreakStatement	break ;	3619:1:80321:80326	3452506	5	True				
ANR	3453034	BreakStatement	break ;	3622:4:80346:80351	3452506	11	True				
ANR	3453035	Label	case NT_CALL :	3625:2:80379:80391	3452506	12	True				
ANR	3453036	Identifier	NT_CALL		3452506	0					
ANR	3453037	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		3452506	13					
ANR	3453038	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	3626:8:80401:80430	3452506	0	True				
ANR	3453039	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		3452506	0					
ANR	3453040	Callee	IS_CALL_RECURSION		3452506	0					
ANR	3453041	Identifier	IS_CALL_RECURSION		3452506	0					
ANR	3453042	ArgumentList	NCALL ( node )		3452506	1					
ANR	3453043	Argument	NCALL ( node )		3452506	0					
ANR	3453044	CallExpression	NCALL ( node )		3452506	0					
ANR	3453045	Callee	NCALL		3452506	0					
ANR	3453046	Identifier	NCALL		3452506	0					
ANR	3453047	ArgumentList	node		3452506	1					
ANR	3453048	Argument	node		3452506	0					
ANR	3453049	Identifier	node		3452506	0					
ANR	3453050	ExpressionStatement	env -> has_recursion = 1	3627:6:80439:80461	3452506	1	True				
ANR	3453051	AssignmentExpression	env -> has_recursion = 1		3452506	0		=			
ANR	3453052	PtrMemberAccess	env -> has_recursion		3452506	0					
ANR	3453053	Identifier	env		3452506	0					
ANR	3453054	Identifier	has_recursion		3452506	1					
ANR	3453055	PrimaryExpression	1		3452506	1					
ANR	3453056	ElseStatement	else		3452506	0					
ANR	3453057	ExpressionStatement	"r = setup_comb_exp_check ( NCALL ( node ) -> target , state , env )"	3629:6:80478:80535	3452506	0	True				
ANR	3453058	AssignmentExpression	"r = setup_comb_exp_check ( NCALL ( node ) -> target , state , env )"		3452506	0		=			
ANR	3453059	Identifier	r		3452506	0					
ANR	3453060	CallExpression	"setup_comb_exp_check ( NCALL ( node ) -> target , state , env )"		3452506	1					
ANR	3453061	Callee	setup_comb_exp_check		3452506	0					
ANR	3453062	Identifier	setup_comb_exp_check		3452506	0					
ANR	3453063	ArgumentList	NCALL ( node ) -> target		3452506	1					
ANR	3453064	Argument	NCALL ( node ) -> target		3452506	0					
ANR	3453065	PtrMemberAccess	NCALL ( node ) -> target		3452506	0					
ANR	3453066	CallExpression	NCALL ( node )		3452506	0					
ANR	3453067	Callee	NCALL		3452506	0					
ANR	3453068	Identifier	NCALL		3452506	0					
ANR	3453069	ArgumentList	node		3452506	1					
ANR	3453070	Argument	node		3452506	0					
ANR	3453071	Identifier	node		3452506	0					
ANR	3453072	Identifier	target		3452506	1					
ANR	3453073	Argument	state		3452506	1					
ANR	3453074	Identifier	state		3452506	0					
ANR	3453075	Argument	env		3452506	2					
ANR	3453076	Identifier	env		3452506	0					
ANR	3453077	BreakStatement	break ;	3630:4:80541:80546	3452506	14	True				
ANR	3453078	Label	default :	3633:2:80558:80565	3452506	15	True				
ANR	3453079	Identifier	default		3452506	0					
ANR	3453080	BreakStatement	break ;	3634:4:80571:80576	3452506	16	True				
ANR	3453081	ReturnStatement	return r ;	3637:2:80585:80593	3452506	4	True				
ANR	3453082	Identifier	r		3452506	0					
ANR	3453083	ReturnType	static int		3452506	1					
ANR	3453084	Identifier	setup_comb_exp_check		3452506	2					
ANR	3453085	ParameterList	"Node * node , int state , ScanEnv * env"		3452506	3					
ANR	3453086	Parameter	Node * node	3511:21:77804:77813	3452506	0	True				
ANR	3453087	ParameterType	Node *		3452506	0					
ANR	3453088	Identifier	node		3452506	1					
ANR	3453089	Parameter	int state	3511:33:77816:77824	3452506	1	True				
ANR	3453090	ParameterType	int		3452506	0					
ANR	3453091	Identifier	state		3452506	1					
ANR	3453092	Parameter	ScanEnv * env	3511:44:77827:77838	3452506	2	True				
ANR	3453093	ParameterType	ScanEnv *		3452506	0					
ANR	3453094	Identifier	env		3452506	1					
ANR	3453095	CFGEntryNode	ENTRY		3452506		True				
ANR	3453096	CFGExitNode	EXIT		3452506		True				
ANR	3453097	Symbol	NCAR		3452506						
ANR	3453098	Symbol	prev		3452506						
ANR	3453099	Symbol	add_state		3452506						
ANR	3453100	Symbol	type		3452506						
ANR	3453101	Symbol	NQTFR		3452506						
ANR	3453102	Symbol	ENCLOSE_MEMORY		3452506						
ANR	3453103	Symbol	en -> type		3452506						
ANR	3453104	Symbol	env -> curr_max_regnum		3452506						
ANR	3453105	Symbol	state		3452506						
ANR	3453106	Symbol	IS_REPEAT_INFINITE		3452506						
ANR	3453107	Symbol	env -> backrefed_mem		3452506						
ANR	3453108	Symbol	qn		3452506						
ANR	3453109	Symbol	ret		3452506						
ANR	3453110	Symbol	CEC_IN_FINITE_REPEAT		3452506						
ANR	3453111	Symbol	en -> regnum		3452506						
ANR	3453112	Symbol	CEC_THRES_NUM_BIG_REPEAT		3452506						
ANR	3453113	Symbol	NCDR		3452506						
ANR	3453114	Symbol	* env		3452506						
ANR	3453115	Symbol	en		3452506						
ANR	3453116	Symbol	qn -> target		3452506						
ANR	3453117	Symbol	env -> has_recursion		3452506						
ANR	3453118	Symbol	node		3452506						
ANR	3453119	Symbol	qn -> upper		3452506						
ANR	3453120	Symbol	q -> greedy		3452506						
ANR	3453121	Symbol	NT_ENCLOSE		3452506						
ANR	3453122	Symbol	IS_CALL_RECURSION		3452506						
ANR	3453123	Symbol	NULL_NODE		3452506						
ANR	3453124	Symbol	* qn		3452506						
ANR	3453125	Symbol	qn -> greedy		3452506						
ANR	3453126	Symbol	IS_NOT_NULL		3452506						
ANR	3453127	Symbol	child_state		3452506						
ANR	3453128	Symbol	NCALL		3452506						
ANR	3453129	Symbol	env -> num_comb_exp_check		3452506						
ANR	3453130	Symbol	* en		3452506						
ANR	3453131	Symbol	CEC_CONT_BIG_REPEAT		3452506						
ANR	3453132	Symbol	q -> upper		3452506						
ANR	3453133	Symbol	qn -> lower		3452506						
ANR	3453134	Symbol	NT_QTFR		3452506						
ANR	3453135	Symbol	NENCLOSE		3452506						
ANR	3453136	Symbol	setup_comb_exp_check		3452506						
ANR	3453137	Symbol	NCALL ( node ) -> target		3452506						
ANR	3453138	Symbol	env -> comb_exp_max_regnum		3452506						
ANR	3453139	Symbol	qn -> comb_exp_check_num		3452506						
ANR	3453140	Symbol	CEC_INFINITE_NUM		3452506						
ANR	3453141	Symbol	CEC_IN_INFINITE_REPEAT		3452506						
ANR	3453142	Symbol	env		3452506						
ANR	3453143	Symbol	target		3452506						
ANR	3453144	Symbol	q		3452506						
ANR	3453145	Symbol	r		3452506						
ANR	3453146	Symbol	var_num		3452506						
ANR	3453147	Symbol	en -> target		3452506						
ANR	3453148	Symbol	NTYPE		3452506						
ANR	3453149	Symbol	* q		3452506						
ANR	3453150	Symbol	* NCALL		3452506						
ANR	3453151	Function	setup_tree	3654:0:81047:87189							
ANR	3453152	FunctionDef	"setup_tree (Node * node , regex_t * reg , int state , ScanEnv * env)"		3453151	0					
ANR	3453153	CompoundStatement		3656:0:81120:87189	3453151	0					
ANR	3453154	IdentifierDeclStatement	int type ;	3657:2:81124:81132	3453151	0	True				
ANR	3453155	IdentifierDecl	type		3453151	0					
ANR	3453156	IdentifierDeclType	int		3453151	0					
ANR	3453157	Identifier	type		3453151	1					
ANR	3453158	IdentifierDeclStatement	int r = 0 ;	3658:2:81136:81145	3453151	1	True				
ANR	3453159	IdentifierDecl	r = 0		3453151	0					
ANR	3453160	IdentifierDeclType	int		3453151	0					
ANR	3453161	Identifier	r		3453151	1					
ANR	3453162	AssignmentExpression	r = 0		3453151	2		=			
ANR	3453163	Identifier	r		3453151	0					
ANR	3453164	PrimaryExpression	0		3453151	1					
ANR	3453165	ExpressionStatement	type = NTYPE ( node )	3660:2:81150:81168	3453151	2	True				
ANR	3453166	AssignmentExpression	type = NTYPE ( node )		3453151	0		=			
ANR	3453167	Identifier	type		3453151	0					
ANR	3453168	CallExpression	NTYPE ( node )		3453151	1					
ANR	3453169	Callee	NTYPE		3453151	0					
ANR	3453170	Identifier	NTYPE		3453151	0					
ANR	3453171	ArgumentList	node		3453151	1					
ANR	3453172	Argument	node		3453151	0					
ANR	3453173	Identifier	node		3453151	0					
ANR	3453174	SwitchStatement	switch ( type )		3453151	3					
ANR	3453175	Condition	type	3661:10:81180:81183	3453151	0	True				
ANR	3453176	Identifier	type		3453151	0					
ANR	3453177	CompoundStatement		6:16:65:65	3453151	1					
ANR	3453178	Label	case NT_LIST :	3662:2:81190:81202	3453151	0	True				
ANR	3453179	Identifier	NT_LIST		3453151	0					
ANR	3453180	CompoundStatement		9:6:95:117	3453151	1					
ANR	3453181	IdentifierDeclStatement	Node * prev = NULL_NODE ;	3664:6:81216:81238	3453151	0	True				
ANR	3453182	IdentifierDecl	* prev = NULL_NODE		3453151	0					
ANR	3453183	IdentifierDeclType	Node *		3453151	0					
ANR	3453184	Identifier	prev		3453151	1					
ANR	3453185	AssignmentExpression	* prev = NULL_NODE		3453151	2		=			
ANR	3453186	Identifier	NULL_NODE		3453151	0					
ANR	3453187	Identifier	NULL_NODE		3453151	1					
ANR	3453188	DoStatement	do		3453151	1					
ANR	3453189	CompoundStatement		10:9:128:128	3453151	0					
ANR	3453190	ExpressionStatement	"r = setup_tree ( NCAR ( node ) , reg , state , env )"	3666:1:81252:81295	3453151	0	True				
ANR	3453191	AssignmentExpression	"r = setup_tree ( NCAR ( node ) , reg , state , env )"		3453151	0		=			
ANR	3453192	Identifier	r		3453151	0					
ANR	3453193	CallExpression	"setup_tree ( NCAR ( node ) , reg , state , env )"		3453151	1					
ANR	3453194	Callee	setup_tree		3453151	0					
ANR	3453195	Identifier	setup_tree		3453151	0					
ANR	3453196	ArgumentList	NCAR ( node )		3453151	1					
ANR	3453197	Argument	NCAR ( node )		3453151	0					
ANR	3453198	CallExpression	NCAR ( node )		3453151	0					
ANR	3453199	Callee	NCAR		3453151	0					
ANR	3453200	Identifier	NCAR		3453151	0					
ANR	3453201	ArgumentList	node		3453151	1					
ANR	3453202	Argument	node		3453151	0					
ANR	3453203	Identifier	node		3453151	0					
ANR	3453204	Argument	reg		3453151	1					
ANR	3453205	Identifier	reg		3453151	0					
ANR	3453206	Argument	state		3453151	2					
ANR	3453207	Identifier	state		3453151	0					
ANR	3453208	Argument	env		3453151	3					
ANR	3453209	Identifier	env		3453151	0					
ANR	3453210	IfStatement	if ( IS_NOT_NULL ( prev ) && r == 0 )		3453151	1					
ANR	3453211	Condition	IS_NOT_NULL ( prev ) && r == 0	3667:5:81302:81328	3453151	0	True				
ANR	3453212	AndExpression	IS_NOT_NULL ( prev ) && r == 0		3453151	0		&&			
ANR	3453213	CallExpression	IS_NOT_NULL ( prev )		3453151	0					
ANR	3453214	Callee	IS_NOT_NULL		3453151	0					
ANR	3453215	Identifier	IS_NOT_NULL		3453151	0					
ANR	3453216	ArgumentList	prev		3453151	1					
ANR	3453217	Argument	prev		3453151	0					
ANR	3453218	Identifier	prev		3453151	0					
ANR	3453219	EqualityExpression	r == 0		3453151	1		==			
ANR	3453220	Identifier	r		3453151	0					
ANR	3453221	PrimaryExpression	0		3453151	1					
ANR	3453222	CompoundStatement		12:34:210:210	3453151	1					
ANR	3453223	ExpressionStatement	"r = next_setup ( prev , NCAR ( node ) , reg )"	3668:3:81336:81373	3453151	0	True				
ANR	3453224	AssignmentExpression	"r = next_setup ( prev , NCAR ( node ) , reg )"		3453151	0		=			
ANR	3453225	Identifier	r		3453151	0					
ANR	3453226	CallExpression	"next_setup ( prev , NCAR ( node ) , reg )"		3453151	1					
ANR	3453227	Callee	next_setup		3453151	0					
ANR	3453228	Identifier	next_setup		3453151	0					
ANR	3453229	ArgumentList	prev		3453151	1					
ANR	3453230	Argument	prev		3453151	0					
ANR	3453231	Identifier	prev		3453151	0					
ANR	3453232	Argument	NCAR ( node )		3453151	1					
ANR	3453233	CallExpression	NCAR ( node )		3453151	0					
ANR	3453234	Callee	NCAR		3453151	0					
ANR	3453235	Identifier	NCAR		3453151	0					
ANR	3453236	ArgumentList	node		3453151	1					
ANR	3453237	Argument	node		3453151	0					
ANR	3453238	Identifier	node		3453151	0					
ANR	3453239	Argument	reg		3453151	2					
ANR	3453240	Identifier	reg		3453151	0					
ANR	3453241	ExpressionStatement	prev = NCAR ( node )	3670:1:81379:81396	3453151	2	True				
ANR	3453242	AssignmentExpression	prev = NCAR ( node )		3453151	0		=			
ANR	3453243	Identifier	prev		3453151	0					
ANR	3453244	CallExpression	NCAR ( node )		3453151	1					
ANR	3453245	Callee	NCAR		3453151	0					
ANR	3453246	Identifier	NCAR		3453151	0					
ANR	3453247	ArgumentList	node		3453151	1					
ANR	3453248	Argument	node		3453151	0					
ANR	3453249	Identifier	node		3453151	0					
ANR	3453250	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3671:15:81413:81452	3453151	1	True				
ANR	3453251	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3453151	0		&&			
ANR	3453252	EqualityExpression	r == 0		3453151	0		==			
ANR	3453253	Identifier	r		3453151	0					
ANR	3453254	PrimaryExpression	0		3453151	1					
ANR	3453255	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3453151	1					
ANR	3453256	Callee	IS_NOT_NULL		3453151	0					
ANR	3453257	Identifier	IS_NOT_NULL		3453151	0					
ANR	3453258	ArgumentList	node = NCDR ( node )		3453151	1					
ANR	3453259	Argument	node = NCDR ( node )		3453151	0					
ANR	3453260	AssignmentExpression	node = NCDR ( node )		3453151	0		=			
ANR	3453261	Identifier	node		3453151	0					
ANR	3453262	CallExpression	NCDR ( node )		3453151	1					
ANR	3453263	Callee	NCDR		3453151	0					
ANR	3453264	Identifier	NCDR		3453151	0					
ANR	3453265	ArgumentList	node		3453151	1					
ANR	3453266	Argument	node		3453151	0					
ANR	3453267	Identifier	node		3453151	0					
ANR	3453268	BreakStatement	break ;	3673:4:81466:81471	3453151	2	True				
ANR	3453269	Label	case NT_ALT :	3675:2:81476:81487	3453151	3	True				
ANR	3453270	Identifier	NT_ALT		3453151	0					
ANR	3453271	DoStatement	do		3453151	4					
ANR	3453272	CompoundStatement		21:7:375:375	3453151	0					
ANR	3453273	ExpressionStatement	"r = setup_tree ( NCAR ( node ) , reg , ( state | IN_ALT ) , env )"	3677:6:81504:81558	3453151	0	True				
ANR	3453274	AssignmentExpression	"r = setup_tree ( NCAR ( node ) , reg , ( state | IN_ALT ) , env )"		3453151	0		=			
ANR	3453275	Identifier	r		3453151	0					
ANR	3453276	CallExpression	"setup_tree ( NCAR ( node ) , reg , ( state | IN_ALT ) , env )"		3453151	1					
ANR	3453277	Callee	setup_tree		3453151	0					
ANR	3453278	Identifier	setup_tree		3453151	0					
ANR	3453279	ArgumentList	NCAR ( node )		3453151	1					
ANR	3453280	Argument	NCAR ( node )		3453151	0					
ANR	3453281	CallExpression	NCAR ( node )		3453151	0					
ANR	3453282	Callee	NCAR		3453151	0					
ANR	3453283	Identifier	NCAR		3453151	0					
ANR	3453284	ArgumentList	node		3453151	1					
ANR	3453285	Argument	node		3453151	0					
ANR	3453286	Identifier	node		3453151	0					
ANR	3453287	Argument	reg		3453151	1					
ANR	3453288	Identifier	reg		3453151	0					
ANR	3453289	Argument	state | IN_ALT		3453151	2					
ANR	3453290	InclusiveOrExpression	state | IN_ALT		3453151	0		|			
ANR	3453291	Identifier	state		3453151	0					
ANR	3453292	Identifier	IN_ALT		3453151	1					
ANR	3453293	Argument	env		3453151	3					
ANR	3453294	Identifier	env		3453151	0					
ANR	3453295	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3678:13:81573:81612	3453151	1	True				
ANR	3453296	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		3453151	0		&&			
ANR	3453297	EqualityExpression	r == 0		3453151	0		==			
ANR	3453298	Identifier	r		3453151	0					
ANR	3453299	PrimaryExpression	0		3453151	1					
ANR	3453300	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3453151	1					
ANR	3453301	Callee	IS_NOT_NULL		3453151	0					
ANR	3453302	Identifier	IS_NOT_NULL		3453151	0					
ANR	3453303	ArgumentList	node = NCDR ( node )		3453151	1					
ANR	3453304	Argument	node = NCDR ( node )		3453151	0					
ANR	3453305	AssignmentExpression	node = NCDR ( node )		3453151	0		=			
ANR	3453306	Identifier	node		3453151	0					
ANR	3453307	CallExpression	NCDR ( node )		3453151	1					
ANR	3453308	Callee	NCDR		3453151	0					
ANR	3453309	Identifier	NCDR		3453151	0					
ANR	3453310	ArgumentList	node		3453151	1					
ANR	3453311	Argument	node		3453151	0					
ANR	3453312	Identifier	node		3453151	0					
ANR	3453313	BreakStatement	break ;	3679:4:81620:81625	3453151	5	True				
ANR	3453314	Label	case NT_CCLASS :	3681:2:81630:81644	3453151	6	True				
ANR	3453315	Identifier	NT_CCLASS		3453151	0					
ANR	3453316	BreakStatement	break ;	3682:4:81650:81655	3453151	7	True				
ANR	3453317	Label	case NT_STR :	3684:2:81660:81671	3453151	8	True				
ANR	3453318	Identifier	NT_STR		3453151	0					
ANR	3453319	IfStatement	if ( IS_IGNORECASE ( reg -> options ) && ! NSTRING_IS_RAW ( node ) )		3453151	9					
ANR	3453320	Condition	IS_IGNORECASE ( reg -> options ) && ! NSTRING_IS_RAW ( node )	3685:8:81681:81732	3453151	0	True				
ANR	3453321	AndExpression	IS_IGNORECASE ( reg -> options ) && ! NSTRING_IS_RAW ( node )		3453151	0		&&			
ANR	3453322	CallExpression	IS_IGNORECASE ( reg -> options )		3453151	0					
ANR	3453323	Callee	IS_IGNORECASE		3453151	0					
ANR	3453324	Identifier	IS_IGNORECASE		3453151	0					
ANR	3453325	ArgumentList	reg -> options		3453151	1					
ANR	3453326	Argument	reg -> options		3453151	0					
ANR	3453327	PtrMemberAccess	reg -> options		3453151	0					
ANR	3453328	Identifier	reg		3453151	0					
ANR	3453329	Identifier	options		3453151	1					
ANR	3453330	UnaryOperationExpression	! NSTRING_IS_RAW ( node )		3453151	1					
ANR	3453331	UnaryOperator	!		3453151	0					
ANR	3453332	CallExpression	NSTRING_IS_RAW ( node )		3453151	1					
ANR	3453333	Callee	NSTRING_IS_RAW		3453151	0					
ANR	3453334	Identifier	NSTRING_IS_RAW		3453151	0					
ANR	3453335	ArgumentList	node		3453151	1					
ANR	3453336	Argument	node		3453151	0					
ANR	3453337	Identifier	node		3453151	0					
ANR	3453338	CompoundStatement		30:62:614:614	3453151	1					
ANR	3453339	ExpressionStatement	"r = expand_case_fold_string ( node , reg )"	3686:6:81743:81781	3453151	0	True				
ANR	3453340	AssignmentExpression	"r = expand_case_fold_string ( node , reg )"		3453151	0		=			
ANR	3453341	Identifier	r		3453151	0					
ANR	3453342	CallExpression	"expand_case_fold_string ( node , reg )"		3453151	1					
ANR	3453343	Callee	expand_case_fold_string		3453151	0					
ANR	3453344	Identifier	expand_case_fold_string		3453151	0					
ANR	3453345	ArgumentList	node		3453151	1					
ANR	3453346	Argument	node		3453151	0					
ANR	3453347	Identifier	node		3453151	0					
ANR	3453348	Argument	reg		3453151	1					
ANR	3453349	Identifier	reg		3453151	0					
ANR	3453350	BreakStatement	break ;	3688:4:81793:81798	3453151	10	True				
ANR	3453351	Label	case NT_CTYPE :	3690:2:81803:81816	3453151	11	True				
ANR	3453352	Identifier	NT_CTYPE		3453151	0					
ANR	3453353	Label	case NT_CANY :	3691:2:81820:81832	3453151	12	True				
ANR	3453354	Identifier	NT_CANY		3453151	0					
ANR	3453355	BreakStatement	break ;	3692:4:81838:81843	3453151	13	True				
ANR	3453356	Label	case NT_CALL :	3695:2:81871:81883	3453151	14	True				
ANR	3453357	Identifier	NT_CALL		3453151	0					
ANR	3453358	BreakStatement	break ;	3696:4:81889:81894	3453151	15	True				
ANR	3453359	Label	case NT_BREF :	3699:2:81906:81918	3453151	16	True				
ANR	3453360	Identifier	NT_BREF		3453151	0					
ANR	3453361	CompoundStatement		49:6:883:909	3453151	17					
ANR	3453362	IdentifierDeclStatement	int i ;	3701:6:81932:81937	3453151	0	True				
ANR	3453363	IdentifierDecl	i		3453151	0					
ANR	3453364	IdentifierDeclType	int		3453151	0					
ANR	3453365	Identifier	i		3453151	1					
ANR	3453366	IdentifierDeclStatement	int * p ;	3702:6:81945:81951	3453151	1	True				
ANR	3453367	IdentifierDecl	* p		3453151	0					
ANR	3453368	IdentifierDeclType	int *		3453151	0					
ANR	3453369	Identifier	p		3453151	1					
ANR	3453370	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	3703:6:81959:81996	3453151	2	True				
ANR	3453371	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		3453151	0					
ANR	3453372	IdentifierDeclType	Node * *		3453151	0					
ANR	3453373	Identifier	nodes		3453151	1					
ANR	3453374	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		3453151	2		=			
ANR	3453375	Identifier	nodes		3453151	0					
ANR	3453376	CallExpression	SCANENV_MEM_NODES ( env )		3453151	1					
ANR	3453377	Callee	SCANENV_MEM_NODES		3453151	0					
ANR	3453378	Identifier	SCANENV_MEM_NODES		3453151	0					
ANR	3453379	ArgumentList	env		3453151	1					
ANR	3453380	Argument	env		3453151	0					
ANR	3453381	Identifier	env		3453151	0					
ANR	3453382	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	3704:6:82004:82030	3453151	3	True				
ANR	3453383	IdentifierDecl	* br = NBREF ( node )		3453151	0					
ANR	3453384	IdentifierDeclType	BRefNode *		3453151	0					
ANR	3453385	Identifier	br		3453151	1					
ANR	3453386	AssignmentExpression	* br = NBREF ( node )		3453151	2		=			
ANR	3453387	Identifier	br		3453151	0					
ANR	3453388	CallExpression	NBREF ( node )		3453151	1					
ANR	3453389	Callee	NBREF		3453151	0					
ANR	3453390	Identifier	NBREF		3453151	0					
ANR	3453391	ArgumentList	node		3453151	1					
ANR	3453392	Argument	node		3453151	0					
ANR	3453393	Identifier	node		3453151	0					
ANR	3453394	ExpressionStatement	p = BACKREFS_P ( br )	3705:6:82038:82056	3453151	4	True				
ANR	3453395	AssignmentExpression	p = BACKREFS_P ( br )		3453151	0		=			
ANR	3453396	Identifier	p		3453151	0					
ANR	3453397	CallExpression	BACKREFS_P ( br )		3453151	1					
ANR	3453398	Callee	BACKREFS_P		3453151	0					
ANR	3453399	Identifier	BACKREFS_P		3453151	0					
ANR	3453400	ArgumentList	br		3453151	1					
ANR	3453401	Argument	br		3453151	0					
ANR	3453402	Identifier	br		3453151	0					
ANR	3453403	ForStatement	for ( i = 0 ; i < br -> back_num ; i ++ )		3453151	5					
ANR	3453404	ForInit	i = 0 ;	3706:11:82069:82074	3453151	0	True				
ANR	3453405	AssignmentExpression	i = 0		3453151	0		=			
ANR	3453406	Identifier	i		3453151	0					
ANR	3453407	PrimaryExpression	0		3453151	1					
ANR	3453408	Condition	i < br -> back_num	3706:18:82076:82091	3453151	1	True				
ANR	3453409	RelationalExpression	i < br -> back_num		3453151	0		<			
ANR	3453410	Identifier	i		3453151	0					
ANR	3453411	PtrMemberAccess	br -> back_num		3453151	1					
ANR	3453412	Identifier	br		3453151	0					
ANR	3453413	Identifier	back_num		3453151	1					
ANR	3453414	PostIncDecOperationExpression	i ++	3706:36:82094:82096	3453151	2	True				
ANR	3453415	Identifier	i		3453151	0					
ANR	3453416	IncDec	++		3453151	1					
ANR	3453417	CompoundStatement		51:41:978:978	3453151	3					
ANR	3453418	IfStatement	if ( p [ i ] > env -> num_mem )		3453151	0					
ANR	3453419	Condition	p [ i ] > env -> num_mem	3707:5:82106:82124	3453151	0	True				
ANR	3453420	RelationalExpression	p [ i ] > env -> num_mem		3453151	0		>			
ANR	3453421	ArrayIndexing	p [ i ]		3453151	0					
ANR	3453422	Identifier	p		3453151	0					
ANR	3453423	Identifier	i		3453151	1					
ANR	3453424	PtrMemberAccess	env -> num_mem		3453151	1					
ANR	3453425	Identifier	env		3453151	0					
ANR	3453426	Identifier	num_mem		3453151	1					
ANR	3453427	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3707:27:82128:82158	3453151	1	True				
ANR	3453428	Identifier	ONIGERR_INVALID_BACKREF		3453151	0					
ANR	3453429	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> backrefed_mem , p [ i ] )"	3708:1:82161:82203	3453151	1	True				
ANR	3453430	CallExpression	"BIT_STATUS_ON_AT ( env -> backrefed_mem , p [ i ] )"		3453151	0					
ANR	3453431	Callee	BIT_STATUS_ON_AT		3453151	0					
ANR	3453432	Identifier	BIT_STATUS_ON_AT		3453151	0					
ANR	3453433	ArgumentList	env -> backrefed_mem		3453151	1					
ANR	3453434	Argument	env -> backrefed_mem		3453151	0					
ANR	3453435	PtrMemberAccess	env -> backrefed_mem		3453151	0					
ANR	3453436	Identifier	env		3453151	0					
ANR	3453437	Identifier	backrefed_mem		3453151	1					
ANR	3453438	Argument	p [ i ]		3453151	1					
ANR	3453439	ArrayIndexing	p [ i ]		3453151	0					
ANR	3453440	Identifier	p		3453151	0					
ANR	3453441	Identifier	i		3453151	1					
ANR	3453442	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_start , p [ i ] )"	3709:1:82206:82247	3453151	2	True				
ANR	3453443	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_start , p [ i ] )"		3453151	0					
ANR	3453444	Callee	BIT_STATUS_ON_AT		3453151	0					
ANR	3453445	Identifier	BIT_STATUS_ON_AT		3453151	0					
ANR	3453446	ArgumentList	env -> bt_mem_start		3453151	1					
ANR	3453447	Argument	env -> bt_mem_start		3453151	0					
ANR	3453448	PtrMemberAccess	env -> bt_mem_start		3453151	0					
ANR	3453449	Identifier	env		3453151	0					
ANR	3453450	Identifier	bt_mem_start		3453151	1					
ANR	3453451	Argument	p [ i ]		3453151	1					
ANR	3453452	ArrayIndexing	p [ i ]		3453151	0					
ANR	3453453	Identifier	p		3453151	0					
ANR	3453454	Identifier	i		3453151	1					
ANR	3453455	IfStatement	if ( IS_BACKREF_NEST_LEVEL ( br ) )		3453151	3					
ANR	3453456	Condition	IS_BACKREF_NEST_LEVEL ( br )	3711:5:82284:82308	3453151	0	True				
ANR	3453457	CallExpression	IS_BACKREF_NEST_LEVEL ( br )		3453151	0					
ANR	3453458	Callee	IS_BACKREF_NEST_LEVEL		3453151	0					
ANR	3453459	Identifier	IS_BACKREF_NEST_LEVEL		3453151	0					
ANR	3453460	ArgumentList	br		3453151	1					
ANR	3453461	Argument	br		3453151	0					
ANR	3453462	Identifier	br		3453151	0					
ANR	3453463	CompoundStatement		56:32:1190:1190	3453151	1					
ANR	3453464	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_end , p [ i ] )"	3712:3:82316:82355	3453151	0	True				
ANR	3453465	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_end , p [ i ] )"		3453151	0					
ANR	3453466	Callee	BIT_STATUS_ON_AT		3453151	0					
ANR	3453467	Identifier	BIT_STATUS_ON_AT		3453151	0					
ANR	3453468	ArgumentList	env -> bt_mem_end		3453151	1					
ANR	3453469	Argument	env -> bt_mem_end		3453151	0					
ANR	3453470	PtrMemberAccess	env -> bt_mem_end		3453151	0					
ANR	3453471	Identifier	env		3453151	0					
ANR	3453472	Identifier	bt_mem_end		3453151	1					
ANR	3453473	Argument	p [ i ]		3453151	1					
ANR	3453474	ArrayIndexing	p [ i ]		3453151	0					
ANR	3453475	Identifier	p		3453151	0					
ANR	3453476	Identifier	i		3453151	1					
ANR	3453477	ExpressionStatement	"SET_ENCLOSE_STATUS ( nodes [ p [ i ] ] , NST_MEM_BACKREFED )"	3715:1:82368:82418	3453151	4	True				
ANR	3453478	CallExpression	"SET_ENCLOSE_STATUS ( nodes [ p [ i ] ] , NST_MEM_BACKREFED )"		3453151	0					
ANR	3453479	Callee	SET_ENCLOSE_STATUS		3453151	0					
ANR	3453480	Identifier	SET_ENCLOSE_STATUS		3453151	0					
ANR	3453481	ArgumentList	nodes [ p [ i ] ]		3453151	1					
ANR	3453482	Argument	nodes [ p [ i ] ]		3453151	0					
ANR	3453483	ArrayIndexing	nodes [ p [ i ] ]		3453151	0					
ANR	3453484	Identifier	nodes		3453151	0					
ANR	3453485	ArrayIndexing	p [ i ]		3453151	1					
ANR	3453486	Identifier	p		3453151	0					
ANR	3453487	Identifier	i		3453151	1					
ANR	3453488	Argument	NST_MEM_BACKREFED		3453151	1					
ANR	3453489	Identifier	NST_MEM_BACKREFED		3453151	0					
ANR	3453490	BreakStatement	break ;	3718:4:82438:82443	3453151	18	True				
ANR	3453491	Label	case NT_QTFR :	3720:2:82448:82460	3453151	19	True				
ANR	3453492	Identifier	NT_QTFR		3453151	0					
ANR	3453493	CompoundStatement		69:6:1409:1434	3453151	20					
ANR	3453494	IdentifierDeclStatement	OnigDistance d ;	3722:6:82474:82488	3453151	0	True				
ANR	3453495	IdentifierDecl	d		3453151	0					
ANR	3453496	IdentifierDeclType	OnigDistance		3453151	0					
ANR	3453497	Identifier	d		3453151	1					
ANR	3453498	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	3723:6:82496:82522	3453151	1	True				
ANR	3453499	IdentifierDecl	* qn = NQTFR ( node )		3453151	0					
ANR	3453500	IdentifierDeclType	QtfrNode *		3453151	0					
ANR	3453501	Identifier	qn		3453151	1					
ANR	3453502	AssignmentExpression	* qn = NQTFR ( node )		3453151	2		=			
ANR	3453503	Identifier	qn		3453151	0					
ANR	3453504	CallExpression	NQTFR ( node )		3453151	1					
ANR	3453505	Callee	NQTFR		3453151	0					
ANR	3453506	Identifier	NQTFR		3453151	0					
ANR	3453507	ArgumentList	node		3453151	1					
ANR	3453508	Argument	node		3453151	0					
ANR	3453509	Identifier	node		3453151	0					
ANR	3453510	IdentifierDeclStatement	Node * target = qn -> target ;	3724:6:82530:82555	3453151	2	True				
ANR	3453511	IdentifierDecl	* target = qn -> target		3453151	0					
ANR	3453512	IdentifierDeclType	Node *		3453151	0					
ANR	3453513	Identifier	target		3453151	1					
ANR	3453514	AssignmentExpression	* target = qn -> target		3453151	2		=			
ANR	3453515	Identifier	target		3453151	0					
ANR	3453516	PtrMemberAccess	qn -> target		3453151	1					
ANR	3453517	Identifier	qn		3453151	0					
ANR	3453518	Identifier	target		3453151	1					
ANR	3453519	IfStatement	if ( ( state & IN_REPEAT ) != 0 )		3453151	3					
ANR	3453520	Condition	( state & IN_REPEAT ) != 0	3726:10:82568:82591	3453151	0	True				
ANR	3453521	EqualityExpression	( state & IN_REPEAT ) != 0		3453151	0		!=			
ANR	3453522	BitAndExpression	state & IN_REPEAT		3453151	0		&			
ANR	3453523	Identifier	state		3453151	0					
ANR	3453524	Identifier	IN_REPEAT		3453151	1					
ANR	3453525	PrimaryExpression	0		3453151	1					
ANR	3453526	CompoundStatement		71:36:1473:1473	3453151	1					
ANR	3453527	ExpressionStatement	qn -> state |= NST_IN_REPEAT	3727:8:82604:82630	3453151	0	True				
ANR	3453528	AssignmentExpression	qn -> state |= NST_IN_REPEAT		3453151	0		|=			
ANR	3453529	PtrMemberAccess	qn -> state		3453151	0					
ANR	3453530	Identifier	qn		3453151	0					
ANR	3453531	Identifier	state		3453151	1					
ANR	3453532	Identifier	NST_IN_REPEAT		3453151	1					
ANR	3453533	IfStatement	if ( IS_REPEAT_INFINITE ( qn -> upper ) || qn -> upper >= 1 )		3453151	4					
ANR	3453534	Condition	IS_REPEAT_INFINITE ( qn -> upper ) || qn -> upper >= 1	3730:10:82651:82697	3453151	0	True				
ANR	3453535	OrExpression	IS_REPEAT_INFINITE ( qn -> upper ) || qn -> upper >= 1		3453151	0		||			
ANR	3453536	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3453151	0					
ANR	3453537	Callee	IS_REPEAT_INFINITE		3453151	0					
ANR	3453538	Identifier	IS_REPEAT_INFINITE		3453151	0					
ANR	3453539	ArgumentList	qn -> upper		3453151	1					
ANR	3453540	Argument	qn -> upper		3453151	0					
ANR	3453541	PtrMemberAccess	qn -> upper		3453151	0					
ANR	3453542	Identifier	qn		3453151	0					
ANR	3453543	Identifier	upper		3453151	1					
ANR	3453544	RelationalExpression	qn -> upper >= 1		3453151	1		>=			
ANR	3453545	PtrMemberAccess	qn -> upper		3453151	0					
ANR	3453546	Identifier	qn		3453151	0					
ANR	3453547	Identifier	upper		3453151	1					
ANR	3453548	PrimaryExpression	1		3453151	1					
ANR	3453549	CompoundStatement		75:59:1579:1579	3453151	1					
ANR	3453550	ExpressionStatement	"r = get_min_match_length ( target , & d , env )"	3731:1:82703:82744	3453151	0	True				
ANR	3453551	AssignmentExpression	"r = get_min_match_length ( target , & d , env )"		3453151	0		=			
ANR	3453552	Identifier	r		3453151	0					
ANR	3453553	CallExpression	"get_min_match_length ( target , & d , env )"		3453151	1					
ANR	3453554	Callee	get_min_match_length		3453151	0					
ANR	3453555	Identifier	get_min_match_length		3453151	0					
ANR	3453556	ArgumentList	target		3453151	1					
ANR	3453557	Argument	target		3453151	0					
ANR	3453558	Identifier	target		3453151	0					
ANR	3453559	Argument	& d		3453151	1					
ANR	3453560	UnaryOperationExpression	& d		3453151	0					
ANR	3453561	UnaryOperator	&		3453151	0					
ANR	3453562	Identifier	d		3453151	1					
ANR	3453563	Argument	env		3453151	2					
ANR	3453564	Identifier	env		3453151	0					
ANR	3453565	IfStatement	if ( r )		3453151	1					
ANR	3453566	Condition	r	3732:5:82751:82751	3453151	0	True				
ANR	3453567	Identifier	r		3453151	0					
ANR	3453568	BreakStatement	break ;	3732:8:82754:82759	3453151	1	True				
ANR	3453569	IfStatement	if ( d == 0 )		3453151	2					
ANR	3453570	Condition	d == 0	3733:5:82766:82771	3453151	0	True				
ANR	3453571	EqualityExpression	d == 0		3453151	0		==			
ANR	3453572	Identifier	d		3453151	0					
ANR	3453573	PrimaryExpression	0		3453151	1					
ANR	3453574	CompoundStatement		78:13:1653:1653	3453151	1					
ANR	3453575	ExpressionStatement	qn -> target_empty_info = NQ_TARGET_IS_EMPTY	3734:3:82779:82821	3453151	0	True				
ANR	3453576	AssignmentExpression	qn -> target_empty_info = NQ_TARGET_IS_EMPTY		3453151	0		=			
ANR	3453577	PtrMemberAccess	qn -> target_empty_info		3453151	0					
ANR	3453578	Identifier	qn		3453151	0					
ANR	3453579	Identifier	target_empty_info		3453151	1					
ANR	3453580	Identifier	NQ_TARGET_IS_EMPTY		3453151	1					
ANR	3453581	ExpressionStatement	r = quantifiers_memory_node_info ( target )	3736:3:82881:82921	3453151	1	True				
ANR	3453582	AssignmentExpression	r = quantifiers_memory_node_info ( target )		3453151	0		=			
ANR	3453583	Identifier	r		3453151	0					
ANR	3453584	CallExpression	quantifiers_memory_node_info ( target )		3453151	1					
ANR	3453585	Callee	quantifiers_memory_node_info		3453151	0					
ANR	3453586	Identifier	quantifiers_memory_node_info		3453151	0					
ANR	3453587	ArgumentList	target		3453151	1					
ANR	3453588	Argument	target		3453151	0					
ANR	3453589	Identifier	target		3453151	0					
ANR	3453590	IfStatement	if ( r < 0 )		3453151	2					
ANR	3453591	Condition	r < 0	3737:7:82930:82934	3453151	0	True				
ANR	3453592	RelationalExpression	r < 0		3453151	0		<			
ANR	3453593	Identifier	r		3453151	0					
ANR	3453594	PrimaryExpression	0		3453151	1					
ANR	3453595	BreakStatement	break ;	3737:14:82937:82942	3453151	1	True				
ANR	3453596	IfStatement	if ( r > 0 )		3453151	3					
ANR	3453597	Condition	r > 0	3738:7:82951:82955	3453151	0	True				
ANR	3453598	RelationalExpression	r > 0		3453151	0		>			
ANR	3453599	Identifier	r		3453151	0					
ANR	3453600	PrimaryExpression	0		3453151	1					
ANR	3453601	CompoundStatement		83:14:1837:1837	3453151	1					
ANR	3453602	ExpressionStatement	qn -> target_empty_info = r	3739:5:82965:82990	3453151	0	True				
ANR	3453603	AssignmentExpression	qn -> target_empty_info = r		3453151	0		=			
ANR	3453604	PtrMemberAccess	qn -> target_empty_info		3453151	0					
ANR	3453605	Identifier	qn		3453151	0					
ANR	3453606	Identifier	target_empty_info		3453151	1					
ANR	3453607	Identifier	r		3453151	1					
ANR	3453608	ExpressionStatement	"r = get_max_match_length ( target , & d , env )"	3743:3:83013:83054	3453151	4	True				
ANR	3453609	AssignmentExpression	"r = get_max_match_length ( target , & d , env )"		3453151	0		=			
ANR	3453610	Identifier	r		3453151	0					
ANR	3453611	CallExpression	"get_max_match_length ( target , & d , env )"		3453151	1					
ANR	3453612	Callee	get_max_match_length		3453151	0					
ANR	3453613	Identifier	get_max_match_length		3453151	0					
ANR	3453614	ArgumentList	target		3453151	1					
ANR	3453615	Argument	target		3453151	0					
ANR	3453616	Identifier	target		3453151	0					
ANR	3453617	Argument	& d		3453151	1					
ANR	3453618	UnaryOperationExpression	& d		3453151	0					
ANR	3453619	UnaryOperator	&		3453151	0					
ANR	3453620	Identifier	d		3453151	1					
ANR	3453621	Argument	env		3453151	2					
ANR	3453622	Identifier	env		3453151	0					
ANR	3453623	IfStatement	if ( r == 0 && d == 0 )		3453151	5					
ANR	3453624	Condition	r == 0 && d == 0	3744:7:83063:83078	3453151	0	True				
ANR	3453625	AndExpression	r == 0 && d == 0		3453151	0		&&			
ANR	3453626	EqualityExpression	r == 0		3453151	0		==			
ANR	3453627	Identifier	r		3453151	0					
ANR	3453628	PrimaryExpression	0		3453151	1					
ANR	3453629	EqualityExpression	d == 0		3453151	1		==			
ANR	3453630	Identifier	d		3453151	0					
ANR	3453631	PrimaryExpression	0		3453151	1					
ANR	3453632	CompoundStatement		89:25:1960:1960	3453151	1					
ANR	3453633	ExpressionStatement	qn -> upper = 1	3746:5:83125:83138	3453151	0	True				
ANR	3453634	AssignmentExpression	qn -> upper = 1		3453151	0		=			
ANR	3453635	PtrMemberAccess	qn -> upper		3453151	0					
ANR	3453636	Identifier	qn		3453151	0					
ANR	3453637	Identifier	upper		3453151	1					
ANR	3453638	PrimaryExpression	1		3453151	1					
ANR	3453639	IfStatement	if ( qn -> lower > 1 )		3453151	1					
ANR	3453640	Condition	qn -> lower > 1	3747:9:83149:83161	3453151	0	True				
ANR	3453641	RelationalExpression	qn -> lower > 1		3453151	0		>			
ANR	3453642	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453643	Identifier	qn		3453151	0					
ANR	3453644	Identifier	lower		3453151	1					
ANR	3453645	PrimaryExpression	1		3453151	1					
ANR	3453646	ExpressionStatement	qn -> lower = 1	3747:24:83164:83177	3453151	1	True				
ANR	3453647	AssignmentExpression	qn -> lower = 1		3453151	0		=			
ANR	3453648	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453649	Identifier	qn		3453151	0					
ANR	3453650	Identifier	lower		3453151	1					
ANR	3453651	PrimaryExpression	1		3453151	1					
ANR	3453652	IfStatement	if ( NTYPE ( target ) == NT_STR )		3453151	2					
ANR	3453653	Condition	NTYPE ( target ) == NT_STR	3748:9:83188:83210	3453151	0	True				
ANR	3453654	EqualityExpression	NTYPE ( target ) == NT_STR		3453151	0		==			
ANR	3453655	CallExpression	NTYPE ( target )		3453151	0					
ANR	3453656	Callee	NTYPE		3453151	0					
ANR	3453657	Identifier	NTYPE		3453151	0					
ANR	3453658	ArgumentList	target		3453151	1					
ANR	3453659	Argument	target		3453151	0					
ANR	3453660	Identifier	target		3453151	0					
ANR	3453661	Identifier	NT_STR		3453151	1					
ANR	3453662	CompoundStatement		93:34:2092:2092	3453151	1					
ANR	3453663	ExpressionStatement	qn -> upper = qn -> lower = 0	3749:7:83222:83247	3453151	0	True				
ANR	3453664	AssignmentExpression	qn -> upper = qn -> lower = 0		3453151	0		=			
ANR	3453665	PtrMemberAccess	qn -> upper		3453151	0					
ANR	3453666	Identifier	qn		3453151	0					
ANR	3453667	Identifier	upper		3453151	1					
ANR	3453668	AssignmentExpression	qn -> lower = 0		3453151	1		=			
ANR	3453669	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453670	Identifier	qn		3453151	0					
ANR	3453671	Identifier	lower		3453151	1					
ANR	3453672	PrimaryExpression	0		3453151	1					
ANR	3453673	ExpressionStatement	state |= IN_REPEAT	3756:6:83308:83326	3453151	5	True				
ANR	3453674	AssignmentExpression	state |= IN_REPEAT		3453151	0		|=			
ANR	3453675	Identifier	state		3453151	0					
ANR	3453676	Identifier	IN_REPEAT		3453151	1					
ANR	3453677	IfStatement	if ( qn -> lower != qn -> upper )		3453151	6					
ANR	3453678	Condition	qn -> lower != qn -> upper	3757:10:83338:83359	3453151	0	True				
ANR	3453679	EqualityExpression	qn -> lower != qn -> upper		3453151	0		!=			
ANR	3453680	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453681	Identifier	qn		3453151	0					
ANR	3453682	Identifier	lower		3453151	1					
ANR	3453683	PtrMemberAccess	qn -> upper		3453151	1					
ANR	3453684	Identifier	qn		3453151	0					
ANR	3453685	Identifier	upper		3453151	1					
ANR	3453686	ExpressionStatement	state |= IN_VAR_REPEAT	3758:1:83363:83385	3453151	1	True				
ANR	3453687	AssignmentExpression	state |= IN_VAR_REPEAT		3453151	0		|=			
ANR	3453688	Identifier	state		3453151	0					
ANR	3453689	Identifier	IN_VAR_REPEAT		3453151	1					
ANR	3453690	ExpressionStatement	"r = setup_tree ( target , reg , state , env )"	3759:6:83393:83432	3453151	7	True				
ANR	3453691	AssignmentExpression	"r = setup_tree ( target , reg , state , env )"		3453151	0		=			
ANR	3453692	Identifier	r		3453151	0					
ANR	3453693	CallExpression	"setup_tree ( target , reg , state , env )"		3453151	1					
ANR	3453694	Callee	setup_tree		3453151	0					
ANR	3453695	Identifier	setup_tree		3453151	0					
ANR	3453696	ArgumentList	target		3453151	1					
ANR	3453697	Argument	target		3453151	0					
ANR	3453698	Identifier	target		3453151	0					
ANR	3453699	Argument	reg		3453151	1					
ANR	3453700	Identifier	reg		3453151	0					
ANR	3453701	Argument	state		3453151	2					
ANR	3453702	Identifier	state		3453151	0					
ANR	3453703	Argument	env		3453151	3					
ANR	3453704	Identifier	env		3453151	0					
ANR	3453705	IfStatement	if ( r )		3453151	8					
ANR	3453706	Condition	r	3760:10:83444:83444	3453151	0	True				
ANR	3453707	Identifier	r		3453151	0					
ANR	3453708	BreakStatement	break ;	3760:13:83447:83452	3453151	1	True				
ANR	3453709	Statement	define	3763:1:83482:83487	3453151	9	True				
ANR	3453710	Statement	EXPAND_STRING_MAX_LENGTH	3763:8:83489:83512	3453151	10	True				
ANR	3453711	Statement	100	3763:34:83515:83517	3453151	11	True				
ANR	3453712	IfStatement	if ( NTYPE ( target ) == NT_STR )		3453151	12					
ANR	3453713	Condition	NTYPE ( target ) == NT_STR	3764:10:83529:83551	3453151	0	True				
ANR	3453714	EqualityExpression	NTYPE ( target ) == NT_STR		3453151	0		==			
ANR	3453715	CallExpression	NTYPE ( target )		3453151	0					
ANR	3453716	Callee	NTYPE		3453151	0					
ANR	3453717	Identifier	NTYPE		3453151	0					
ANR	3453718	ArgumentList	target		3453151	1					
ANR	3453719	Argument	target		3453151	0					
ANR	3453720	Identifier	target		3453151	0					
ANR	3453721	Identifier	NT_STR		3453151	1					
ANR	3453722	CompoundStatement		109:35:2433:2433	3453151	1					
ANR	3453723	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> lower ) && qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH )		3453151	0					
ANR	3453724	Condition	! IS_REPEAT_INFINITE ( qn -> lower ) && qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH	3765:5:83561:83679	3453151	0	True				
ANR	3453725	AndExpression	! IS_REPEAT_INFINITE ( qn -> lower ) && qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH		3453151	0		&&			
ANR	3453726	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> lower )		3453151	0					
ANR	3453727	UnaryOperator	!		3453151	0					
ANR	3453728	CallExpression	IS_REPEAT_INFINITE ( qn -> lower )		3453151	1					
ANR	3453729	Callee	IS_REPEAT_INFINITE		3453151	0					
ANR	3453730	Identifier	IS_REPEAT_INFINITE		3453151	0					
ANR	3453731	ArgumentList	qn -> lower		3453151	1					
ANR	3453732	Argument	qn -> lower		3453151	0					
ANR	3453733	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453734	Identifier	qn		3453151	0					
ANR	3453735	Identifier	lower		3453151	1					
ANR	3453736	AndExpression	qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH		3453151	1		&&			
ANR	3453737	EqualityExpression	qn -> lower == qn -> upper		3453151	0		==			
ANR	3453738	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453739	Identifier	qn		3453151	0					
ANR	3453740	Identifier	lower		3453151	1					
ANR	3453741	PtrMemberAccess	qn -> upper		3453151	1					
ANR	3453742	Identifier	qn		3453151	0					
ANR	3453743	Identifier	upper		3453151	1					
ANR	3453744	AndExpression	qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH		3453151	1		&&			
ANR	3453745	RelationalExpression	qn -> lower > 1		3453151	0		>			
ANR	3453746	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453747	Identifier	qn		3453151	0					
ANR	3453748	Identifier	lower		3453151	1					
ANR	3453749	PrimaryExpression	1		3453151	1					
ANR	3453750	RelationalExpression	qn -> lower <= EXPAND_STRING_MAX_LENGTH		3453151	1		<=			
ANR	3453751	PtrMemberAccess	qn -> lower		3453151	0					
ANR	3453752	Identifier	qn		3453151	0					
ANR	3453753	Identifier	lower		3453151	1					
ANR	3453754	Identifier	EXPAND_STRING_MAX_LENGTH		3453151	1					
ANR	3453755	CompoundStatement		113:3:2600:2626	3453151	1					
ANR	3453756	IdentifierDeclStatement	int len = NSTRING_LEN ( target ) ;	3767:3:83687:83716	3453151	0	True				
ANR	3453757	IdentifierDecl	len = NSTRING_LEN ( target )		3453151	0					
ANR	3453758	IdentifierDeclType	int		3453151	0					
ANR	3453759	Identifier	len		3453151	1					
ANR	3453760	AssignmentExpression	len = NSTRING_LEN ( target )		3453151	2		=			
ANR	3453761	Identifier	len		3453151	0					
ANR	3453762	CallExpression	NSTRING_LEN ( target )		3453151	1					
ANR	3453763	Callee	NSTRING_LEN		3453151	0					
ANR	3453764	Identifier	NSTRING_LEN		3453151	0					
ANR	3453765	ArgumentList	target		3453151	1					
ANR	3453766	Argument	target		3453151	0					
ANR	3453767	Identifier	target		3453151	0					
ANR	3453768	IdentifierDeclStatement	StrNode * sn = NSTR ( target ) ;	3768:3:83721:83747	3453151	1	True				
ANR	3453769	IdentifierDecl	* sn = NSTR ( target )		3453151	0					
ANR	3453770	IdentifierDeclType	StrNode *		3453151	0					
ANR	3453771	Identifier	sn		3453151	1					
ANR	3453772	AssignmentExpression	* sn = NSTR ( target )		3453151	2		=			
ANR	3453773	Identifier	sn		3453151	0					
ANR	3453774	CallExpression	NSTR ( target )		3453151	1					
ANR	3453775	Callee	NSTR		3453151	0					
ANR	3453776	Identifier	NSTR		3453151	0					
ANR	3453777	ArgumentList	target		3453151	1					
ANR	3453778	Argument	target		3453151	0					
ANR	3453779	Identifier	target		3453151	0					
ANR	3453780	IfStatement	if ( len * qn -> lower <= EXPAND_STRING_MAX_LENGTH )		3453151	2					
ANR	3453781	Condition	len * qn -> lower <= EXPAND_STRING_MAX_LENGTH	3770:7:83757:83799	3453151	0	True				
ANR	3453782	RelationalExpression	len * qn -> lower <= EXPAND_STRING_MAX_LENGTH		3453151	0		<=			
ANR	3453783	MultiplicativeExpression	len * qn -> lower		3453151	0		*			
ANR	3453784	Identifier	len		3453151	0					
ANR	3453785	PtrMemberAccess	qn -> lower		3453151	1					
ANR	3453786	Identifier	qn		3453151	0					
ANR	3453787	Identifier	lower		3453151	1					
ANR	3453788	Identifier	EXPAND_STRING_MAX_LENGTH		3453151	1					
ANR	3453789	CompoundStatement		116:5:2688:2708	3453151	1					
ANR	3453790	IdentifierDeclStatement	"int i , n = qn -> lower ;"	3771:5:83809:83829	3453151	0	True				
ANR	3453791	IdentifierDecl	i		3453151	0					
ANR	3453792	IdentifierDeclType	int		3453151	0					
ANR	3453793	Identifier	i		3453151	1					
ANR	3453794	IdentifierDecl	n = qn -> lower		3453151	1					
ANR	3453795	IdentifierDeclType	int		3453151	0					
ANR	3453796	Identifier	n		3453151	1					
ANR	3453797	AssignmentExpression	n = qn -> lower		3453151	2		=			
ANR	3453798	Identifier	n		3453151	0					
ANR	3453799	PtrMemberAccess	qn -> lower		3453151	1					
ANR	3453800	Identifier	qn		3453151	0					
ANR	3453801	Identifier	lower		3453151	1					
ANR	3453802	ExpressionStatement	"onig_node_conv_to_str_node ( node , NSTR ( target ) -> flag )"	3772:5:83836:83888	3453151	1	True				
ANR	3453803	CallExpression	"onig_node_conv_to_str_node ( node , NSTR ( target ) -> flag )"		3453151	0					
ANR	3453804	Callee	onig_node_conv_to_str_node		3453151	0					
ANR	3453805	Identifier	onig_node_conv_to_str_node		3453151	0					
ANR	3453806	ArgumentList	node		3453151	1					
ANR	3453807	Argument	node		3453151	0					
ANR	3453808	Identifier	node		3453151	0					
ANR	3453809	Argument	NSTR ( target ) -> flag		3453151	1					
ANR	3453810	PtrMemberAccess	NSTR ( target ) -> flag		3453151	0					
ANR	3453811	CallExpression	NSTR ( target )		3453151	0					
ANR	3453812	Callee	NSTR		3453151	0					
ANR	3453813	Identifier	NSTR		3453151	0					
ANR	3453814	ArgumentList	target		3453151	1					
ANR	3453815	Argument	target		3453151	0					
ANR	3453816	Identifier	target		3453151	0					
ANR	3453817	Identifier	flag		3453151	1					
ANR	3453818	ForStatement	for ( i = 0 ; i < n ; i ++ )		3453151	2					
ANR	3453819	ForInit	i = 0 ;	3773:10:83900:83905	3453151	0	True				
ANR	3453820	AssignmentExpression	i = 0		3453151	0		=			
ANR	3453821	Identifier	i		3453151	0					
ANR	3453822	PrimaryExpression	0		3453151	1					
ANR	3453823	Condition	i < n	3773:17:83907:83911	3453151	1	True				
ANR	3453824	RelationalExpression	i < n		3453151	0		<			
ANR	3453825	Identifier	i		3453151	0					
ANR	3453826	Identifier	n		3453151	1					
ANR	3453827	PostIncDecOperationExpression	i ++	3773:24:83914:83916	3453151	2	True				
ANR	3453828	Identifier	i		3453151	0					
ANR	3453829	IncDec	++		3453151	1					
ANR	3453830	CompoundStatement		118:29:2798:2798	3453151	3					
ANR	3453831	ExpressionStatement	"r = onig_node_str_cat ( node , sn -> s , sn -> end )"	3774:7:83928:83971	3453151	0	True				
ANR	3453832	AssignmentExpression	"r = onig_node_str_cat ( node , sn -> s , sn -> end )"		3453151	0		=			
ANR	3453833	Identifier	r		3453151	0					
ANR	3453834	CallExpression	"onig_node_str_cat ( node , sn -> s , sn -> end )"		3453151	1					
ANR	3453835	Callee	onig_node_str_cat		3453151	0					
ANR	3453836	Identifier	onig_node_str_cat		3453151	0					
ANR	3453837	ArgumentList	node		3453151	1					
ANR	3453838	Argument	node		3453151	0					
ANR	3453839	Identifier	node		3453151	0					
ANR	3453840	Argument	sn -> s		3453151	1					
ANR	3453841	PtrMemberAccess	sn -> s		3453151	0					
ANR	3453842	Identifier	sn		3453151	0					
ANR	3453843	Identifier	s		3453151	1					
ANR	3453844	Argument	sn -> end		3453151	2					
ANR	3453845	PtrMemberAccess	sn -> end		3453151	0					
ANR	3453846	Identifier	sn		3453151	0					
ANR	3453847	Identifier	end		3453151	1					
ANR	3453848	IfStatement	if ( r )		3453151	1					
ANR	3453849	Condition	r	3775:11:83984:83984	3453151	0	True				
ANR	3453850	Identifier	r		3453151	0					
ANR	3453851	BreakStatement	break ;	3775:14:83987:83992	3453151	1	True				
ANR	3453852	ExpressionStatement	onig_node_free ( target )	3777:5:84006:84028	3453151	3	True				
ANR	3453853	CallExpression	onig_node_free ( target )		3453151	0					
ANR	3453854	Callee	onig_node_free		3453151	0					
ANR	3453855	Identifier	onig_node_free		3453151	0					
ANR	3453856	ArgumentList	target		3453151	1					
ANR	3453857	Argument	target		3453151	0					
ANR	3453858	Identifier	target		3453151	0					
ANR	3453859	BreakStatement	break ;	3778:5:84035:84040	3453151	4	True				
ANR	3453860	IfStatement	if ( qn -> greedy && ( qn -> target_empty_info != 0 ) )		3453151	13					
ANR	3453861	Condition	qn -> greedy && ( qn -> target_empty_info != 0 )	3784:10:84128:84169	3453151	0	True				
ANR	3453862	AndExpression	qn -> greedy && ( qn -> target_empty_info != 0 )		3453151	0		&&			
ANR	3453863	PtrMemberAccess	qn -> greedy		3453151	0					
ANR	3453864	Identifier	qn		3453151	0					
ANR	3453865	Identifier	greedy		3453151	1					
ANR	3453866	EqualityExpression	qn -> target_empty_info != 0		3453151	1		!=			
ANR	3453867	PtrMemberAccess	qn -> target_empty_info		3453151	0					
ANR	3453868	Identifier	qn		3453151	0					
ANR	3453869	Identifier	target_empty_info		3453151	1					
ANR	3453870	PrimaryExpression	0		3453151	1					
ANR	3453871	CompoundStatement		129:54:3051:3051	3453151	1					
ANR	3453872	IfStatement	if ( NTYPE ( target ) == NT_QTFR )		3453151	0					
ANR	3453873	Condition	NTYPE ( target ) == NT_QTFR	3785:5:84179:84202	3453151	0	True				
ANR	3453874	EqualityExpression	NTYPE ( target ) == NT_QTFR		3453151	0		==			
ANR	3453875	CallExpression	NTYPE ( target )		3453151	0					
ANR	3453876	Callee	NTYPE		3453151	0					
ANR	3453877	Identifier	NTYPE		3453151	0					
ANR	3453878	ArgumentList	target		3453151	1					
ANR	3453879	Argument	target		3453151	0					
ANR	3453880	Identifier	target		3453151	0					
ANR	3453881	Identifier	NT_QTFR		3453151	1					
ANR	3453882	CompoundStatement		131:3:3089:3118	3453151	1					
ANR	3453883	IdentifierDeclStatement	QtfrNode * tqn = NQTFR ( target ) ;	3786:3:84210:84239	3453151	0	True				
ANR	3453884	IdentifierDecl	* tqn = NQTFR ( target )		3453151	0					
ANR	3453885	IdentifierDeclType	QtfrNode *		3453151	0					
ANR	3453886	Identifier	tqn		3453151	1					
ANR	3453887	AssignmentExpression	* tqn = NQTFR ( target )		3453151	2		=			
ANR	3453888	Identifier	tqn		3453151	0					
ANR	3453889	CallExpression	NQTFR ( target )		3453151	1					
ANR	3453890	Callee	NQTFR		3453151	0					
ANR	3453891	Identifier	NQTFR		3453151	0					
ANR	3453892	ArgumentList	target		3453151	1					
ANR	3453893	Argument	target		3453151	0					
ANR	3453894	Identifier	target		3453151	0					
ANR	3453895	IfStatement	if ( IS_NOT_NULL ( tqn -> head_exact ) )		3453151	1					
ANR	3453896	Condition	IS_NOT_NULL ( tqn -> head_exact )	3787:7:84248:84275	3453151	0	True				
ANR	3453897	CallExpression	IS_NOT_NULL ( tqn -> head_exact )		3453151	0					
ANR	3453898	Callee	IS_NOT_NULL		3453151	0					
ANR	3453899	Identifier	IS_NOT_NULL		3453151	0					
ANR	3453900	ArgumentList	tqn -> head_exact		3453151	1					
ANR	3453901	Argument	tqn -> head_exact		3453151	0					
ANR	3453902	PtrMemberAccess	tqn -> head_exact		3453151	0					
ANR	3453903	Identifier	tqn		3453151	0					
ANR	3453904	Identifier	head_exact		3453151	1					
ANR	3453905	CompoundStatement		132:37:3157:3157	3453151	1					
ANR	3453906	ExpressionStatement	qn -> head_exact = tqn -> head_exact	3788:5:84285:84318	3453151	0	True				
ANR	3453907	AssignmentExpression	qn -> head_exact = tqn -> head_exact		3453151	0		=			
ANR	3453908	PtrMemberAccess	qn -> head_exact		3453151	0					
ANR	3453909	Identifier	qn		3453151	0					
ANR	3453910	Identifier	head_exact		3453151	1					
ANR	3453911	PtrMemberAccess	tqn -> head_exact		3453151	1					
ANR	3453912	Identifier	tqn		3453151	0					
ANR	3453913	Identifier	head_exact		3453151	1					
ANR	3453914	ExpressionStatement	tqn -> head_exact = NULL	3789:5:84325:84347	3453151	1	True				
ANR	3453915	AssignmentExpression	tqn -> head_exact = NULL		3453151	0		=			
ANR	3453916	PtrMemberAccess	tqn -> head_exact		3453151	0					
ANR	3453917	Identifier	tqn		3453151	0					
ANR	3453918	Identifier	head_exact		3453151	1					
ANR	3453919	Identifier	NULL		3453151	1					
ANR	3453920	ElseStatement	else		3453151	0					
ANR	3453921	CompoundStatement		137:6:3242:3242	3453151	0					
ANR	3453922	ExpressionStatement	"qn -> head_exact = get_head_value_node ( qn -> target , 1 , reg )"	3793:3:84368:84424	3453151	0	True				
ANR	3453923	AssignmentExpression	"qn -> head_exact = get_head_value_node ( qn -> target , 1 , reg )"		3453151	0		=			
ANR	3453924	PtrMemberAccess	qn -> head_exact		3453151	0					
ANR	3453925	Identifier	qn		3453151	0					
ANR	3453926	Identifier	head_exact		3453151	1					
ANR	3453927	CallExpression	"get_head_value_node ( qn -> target , 1 , reg )"		3453151	1					
ANR	3453928	Callee	get_head_value_node		3453151	0					
ANR	3453929	Identifier	get_head_value_node		3453151	0					
ANR	3453930	ArgumentList	qn -> target		3453151	1					
ANR	3453931	Argument	qn -> target		3453151	0					
ANR	3453932	PtrMemberAccess	qn -> target		3453151	0					
ANR	3453933	Identifier	qn		3453151	0					
ANR	3453934	Identifier	target		3453151	1					
ANR	3453935	Argument	1		3453151	1					
ANR	3453936	PrimaryExpression	1		3453151	0					
ANR	3453937	Argument	reg		3453151	2					
ANR	3453938	Identifier	reg		3453151	0					
ANR	3453939	BreakStatement	break ;	3798:4:84454:84459	3453151	21	True				
ANR	3453940	Label	case NT_ENCLOSE :	3800:2:84464:84479	3453151	22	True				
ANR	3453941	Identifier	NT_ENCLOSE		3453151	0					
ANR	3453942	CompoundStatement		147:6:3372:3404	3453151	23					
ANR	3453943	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	3802:6:84493:84525	3453151	0	True				
ANR	3453944	IdentifierDecl	* en = NENCLOSE ( node )		3453151	0					
ANR	3453945	IdentifierDeclType	EncloseNode *		3453151	0					
ANR	3453946	Identifier	en		3453151	1					
ANR	3453947	AssignmentExpression	* en = NENCLOSE ( node )		3453151	2		=			
ANR	3453948	Identifier	en		3453151	0					
ANR	3453949	CallExpression	NENCLOSE ( node )		3453151	1					
ANR	3453950	Callee	NENCLOSE		3453151	0					
ANR	3453951	Identifier	NENCLOSE		3453151	0					
ANR	3453952	ArgumentList	node		3453151	1					
ANR	3453953	Argument	node		3453151	0					
ANR	3453954	Identifier	node		3453151	0					
ANR	3453955	SwitchStatement	switch ( en -> type )		3453151	1					
ANR	3453956	Condition	en -> type	3804:14:84542:84549	3453151	0	True				
ANR	3453957	PtrMemberAccess	en -> type		3453151	0					
ANR	3453958	Identifier	en		3453151	0					
ANR	3453959	Identifier	type		3453151	1					
ANR	3453960	CompoundStatement		149:24:3431:3431	3453151	1					
ANR	3453961	Label	case ENCLOSE_OPTION :	3805:6:84560:84579	3453151	0	True				
ANR	3453962	Identifier	ENCLOSE_OPTION		3453151	0					
ANR	3453963	CompoundStatement		152:3:3466:3503	3453151	1					
ANR	3453964	IdentifierDeclStatement	OnigOptionType options = reg -> options ;	3807:3:84587:84624	3453151	0	True				
ANR	3453965	IdentifierDecl	options = reg -> options		3453151	0					
ANR	3453966	IdentifierDeclType	OnigOptionType		3453151	0					
ANR	3453967	Identifier	options		3453151	1					
ANR	3453968	AssignmentExpression	options = reg -> options		3453151	2		=			
ANR	3453969	Identifier	options		3453151	0					
ANR	3453970	PtrMemberAccess	reg -> options		3453151	1					
ANR	3453971	Identifier	reg		3453151	0					
ANR	3453972	Identifier	options		3453151	1					
ANR	3453973	ExpressionStatement	reg -> options = NENCLOSE ( node ) -> option	3808:3:84629:84666	3453151	1	True				
ANR	3453974	AssignmentExpression	reg -> options = NENCLOSE ( node ) -> option		3453151	0		=			
ANR	3453975	PtrMemberAccess	reg -> options		3453151	0					
ANR	3453976	Identifier	reg		3453151	0					
ANR	3453977	Identifier	options		3453151	1					
ANR	3453978	PtrMemberAccess	NENCLOSE ( node ) -> option		3453151	1					
ANR	3453979	CallExpression	NENCLOSE ( node )		3453151	0					
ANR	3453980	Callee	NENCLOSE		3453151	0					
ANR	3453981	Identifier	NENCLOSE		3453151	0					
ANR	3453982	ArgumentList	node		3453151	1					
ANR	3453983	Argument	node		3453151	0					
ANR	3453984	Identifier	node		3453151	0					
ANR	3453985	Identifier	option		3453151	1					
ANR	3453986	ExpressionStatement	"r = setup_tree ( NENCLOSE ( node ) -> target , reg , state , env )"	3809:3:84671:84726	3453151	2	True				
ANR	3453987	AssignmentExpression	"r = setup_tree ( NENCLOSE ( node ) -> target , reg , state , env )"		3453151	0		=			
ANR	3453988	Identifier	r		3453151	0					
ANR	3453989	CallExpression	"setup_tree ( NENCLOSE ( node ) -> target , reg , state , env )"		3453151	1					
ANR	3453990	Callee	setup_tree		3453151	0					
ANR	3453991	Identifier	setup_tree		3453151	0					
ANR	3453992	ArgumentList	NENCLOSE ( node ) -> target		3453151	1					
ANR	3453993	Argument	NENCLOSE ( node ) -> target		3453151	0					
ANR	3453994	PtrMemberAccess	NENCLOSE ( node ) -> target		3453151	0					
ANR	3453995	CallExpression	NENCLOSE ( node )		3453151	0					
ANR	3453996	Callee	NENCLOSE		3453151	0					
ANR	3453997	Identifier	NENCLOSE		3453151	0					
ANR	3453998	ArgumentList	node		3453151	1					
ANR	3453999	Argument	node		3453151	0					
ANR	3454000	Identifier	node		3453151	0					
ANR	3454001	Identifier	target		3453151	1					
ANR	3454002	Argument	reg		3453151	1					
ANR	3454003	Identifier	reg		3453151	0					
ANR	3454004	Argument	state		3453151	2					
ANR	3454005	Identifier	state		3453151	0					
ANR	3454006	Argument	env		3453151	3					
ANR	3454007	Identifier	env		3453151	0					
ANR	3454008	ExpressionStatement	reg -> options = options	3810:3:84731:84753	3453151	3	True				
ANR	3454009	AssignmentExpression	reg -> options = options		3453151	0		=			
ANR	3454010	PtrMemberAccess	reg -> options		3453151	0					
ANR	3454011	Identifier	reg		3453151	0					
ANR	3454012	Identifier	options		3453151	1					
ANR	3454013	Identifier	options		3453151	1					
ANR	3454014	BreakStatement	break ;	3812:1:84759:84764	3453151	2	True				
ANR	3454015	Label	case ENCLOSE_MEMORY :	3814:6:84773:84792	3453151	3	True				
ANR	3454016	Identifier	ENCLOSE_MEMORY		3453151	0					
ANR	3454017	IfStatement	if ( ( state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT ) ) != 0 )		3453151	4					
ANR	3454018	Condition	( state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT ) ) != 0	3815:5:84799:84846	3453151	0	True				
ANR	3454019	EqualityExpression	( state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT ) ) != 0		3453151	0		!=			
ANR	3454020	BitAndExpression	state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT )		3453151	0		&			
ANR	3454021	Identifier	state		3453151	0					
ANR	3454022	InclusiveOrExpression	IN_ALT | IN_NOT | IN_VAR_REPEAT		3453151	1		|			
ANR	3454023	Identifier	IN_ALT		3453151	0					
ANR	3454024	InclusiveOrExpression	IN_NOT | IN_VAR_REPEAT		3453151	1		|			
ANR	3454025	Identifier	IN_NOT		3453151	0					
ANR	3454026	Identifier	IN_VAR_REPEAT		3453151	1					
ANR	3454027	PrimaryExpression	0		3453151	1					
ANR	3454028	CompoundStatement		160:55:3728:3728	3453151	1					
ANR	3454029	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_start , en -> regnum )"	3816:3:84854:84901	3453151	0	True				
ANR	3454030	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_start , en -> regnum )"		3453151	0					
ANR	3454031	Callee	BIT_STATUS_ON_AT		3453151	0					
ANR	3454032	Identifier	BIT_STATUS_ON_AT		3453151	0					
ANR	3454033	ArgumentList	env -> bt_mem_start		3453151	1					
ANR	3454034	Argument	env -> bt_mem_start		3453151	0					
ANR	3454035	PtrMemberAccess	env -> bt_mem_start		3453151	0					
ANR	3454036	Identifier	env		3453151	0					
ANR	3454037	Identifier	bt_mem_start		3453151	1					
ANR	3454038	Argument	en -> regnum		3453151	1					
ANR	3454039	PtrMemberAccess	en -> regnum		3453151	0					
ANR	3454040	Identifier	en		3453151	0					
ANR	3454041	Identifier	regnum		3453151	1					
ANR	3454042	ExpressionStatement	"r = setup_tree ( en -> target , reg , state , env )"	3819:8:84969:85012	3453151	5	True				
ANR	3454043	AssignmentExpression	"r = setup_tree ( en -> target , reg , state , env )"		3453151	0		=			
ANR	3454044	Identifier	r		3453151	0					
ANR	3454045	CallExpression	"setup_tree ( en -> target , reg , state , env )"		3453151	1					
ANR	3454046	Callee	setup_tree		3453151	0					
ANR	3454047	Identifier	setup_tree		3453151	0					
ANR	3454048	ArgumentList	en -> target		3453151	1					
ANR	3454049	Argument	en -> target		3453151	0					
ANR	3454050	PtrMemberAccess	en -> target		3453151	0					
ANR	3454051	Identifier	en		3453151	0					
ANR	3454052	Identifier	target		3453151	1					
ANR	3454053	Argument	reg		3453151	1					
ANR	3454054	Identifier	reg		3453151	0					
ANR	3454055	Argument	state		3453151	2					
ANR	3454056	Identifier	state		3453151	0					
ANR	3454057	Argument	env		3453151	3					
ANR	3454058	Identifier	env		3453151	0					
ANR	3454059	BreakStatement	break ;	3820:8:85022:85027	3453151	6	True				
ANR	3454060	Label	case ENCLOSE_STOP_BACKTRACK :	3822:6:85036:85063	3453151	7	True				
ANR	3454061	Identifier	ENCLOSE_STOP_BACKTRACK		3453151	0					
ANR	3454062	CompoundStatement		169:3:3950:3975	3453151	8					
ANR	3454063	IdentifierDeclStatement	Node * target = en -> target ;	3824:3:85071:85096	3453151	0	True				
ANR	3454064	IdentifierDecl	* target = en -> target		3453151	0					
ANR	3454065	IdentifierDeclType	Node *		3453151	0					
ANR	3454066	Identifier	target		3453151	1					
ANR	3454067	AssignmentExpression	* target = en -> target		3453151	2		=			
ANR	3454068	Identifier	target		3453151	0					
ANR	3454069	PtrMemberAccess	en -> target		3453151	1					
ANR	3454070	Identifier	en		3453151	0					
ANR	3454071	Identifier	target		3453151	1					
ANR	3454072	ExpressionStatement	"r = setup_tree ( target , reg , state , env )"	3825:3:85101:85140	3453151	1	True				
ANR	3454073	AssignmentExpression	"r = setup_tree ( target , reg , state , env )"		3453151	0		=			
ANR	3454074	Identifier	r		3453151	0					
ANR	3454075	CallExpression	"setup_tree ( target , reg , state , env )"		3453151	1					
ANR	3454076	Callee	setup_tree		3453151	0					
ANR	3454077	Identifier	setup_tree		3453151	0					
ANR	3454078	ArgumentList	target		3453151	1					
ANR	3454079	Argument	target		3453151	0					
ANR	3454080	Identifier	target		3453151	0					
ANR	3454081	Argument	reg		3453151	1					
ANR	3454082	Identifier	reg		3453151	0					
ANR	3454083	Argument	state		3453151	2					
ANR	3454084	Identifier	state		3453151	0					
ANR	3454085	Argument	env		3453151	3					
ANR	3454086	Identifier	env		3453151	0					
ANR	3454087	IfStatement	if ( NTYPE ( target ) == NT_QTFR )		3453151	2					
ANR	3454088	Condition	NTYPE ( target ) == NT_QTFR	3826:7:85149:85172	3453151	0	True				
ANR	3454089	EqualityExpression	NTYPE ( target ) == NT_QTFR		3453151	0		==			
ANR	3454090	CallExpression	NTYPE ( target )		3453151	0					
ANR	3454091	Callee	NTYPE		3453151	0					
ANR	3454092	Identifier	NTYPE		3453151	0					
ANR	3454093	ArgumentList	target		3453151	1					
ANR	3454094	Argument	target		3453151	0					
ANR	3454095	Identifier	target		3453151	0					
ANR	3454096	Identifier	NT_QTFR		3453151	1					
ANR	3454097	CompoundStatement		172:5:4061:4090	3453151	1					
ANR	3454098	IdentifierDeclStatement	QtfrNode * tqn = NQTFR ( target ) ;	3827:5:85182:85211	3453151	0	True				
ANR	3454099	IdentifierDecl	* tqn = NQTFR ( target )		3453151	0					
ANR	3454100	IdentifierDeclType	QtfrNode *		3453151	0					
ANR	3454101	Identifier	tqn		3453151	1					
ANR	3454102	AssignmentExpression	* tqn = NQTFR ( target )		3453151	2		=			
ANR	3454103	Identifier	tqn		3453151	0					
ANR	3454104	CallExpression	NQTFR ( target )		3453151	1					
ANR	3454105	Callee	NQTFR		3453151	0					
ANR	3454106	Identifier	NQTFR		3453151	0					
ANR	3454107	ArgumentList	target		3453151	1					
ANR	3454108	Argument	target		3453151	0					
ANR	3454109	Identifier	target		3453151	0					
ANR	3454110	IfStatement	if ( IS_REPEAT_INFINITE ( tqn -> upper ) && tqn -> lower <= 1 && tqn -> greedy != 0 )		3453151	1					
ANR	3454111	Condition	IS_REPEAT_INFINITE ( tqn -> upper ) && tqn -> lower <= 1 && tqn -> greedy != 0	3828:9:85222:85292	3453151	0	True				
ANR	3454112	AndExpression	IS_REPEAT_INFINITE ( tqn -> upper ) && tqn -> lower <= 1 && tqn -> greedy != 0		3453151	0		&&			
ANR	3454113	CallExpression	IS_REPEAT_INFINITE ( tqn -> upper )		3453151	0					
ANR	3454114	Callee	IS_REPEAT_INFINITE		3453151	0					
ANR	3454115	Identifier	IS_REPEAT_INFINITE		3453151	0					
ANR	3454116	ArgumentList	tqn -> upper		3453151	1					
ANR	3454117	Argument	tqn -> upper		3453151	0					
ANR	3454118	PtrMemberAccess	tqn -> upper		3453151	0					
ANR	3454119	Identifier	tqn		3453151	0					
ANR	3454120	Identifier	upper		3453151	1					
ANR	3454121	AndExpression	tqn -> lower <= 1 && tqn -> greedy != 0		3453151	1		&&			
ANR	3454122	RelationalExpression	tqn -> lower <= 1		3453151	0		<=			
ANR	3454123	PtrMemberAccess	tqn -> lower		3453151	0					
ANR	3454124	Identifier	tqn		3453151	0					
ANR	3454125	Identifier	lower		3453151	1					
ANR	3454126	PrimaryExpression	1		3453151	1					
ANR	3454127	EqualityExpression	tqn -> greedy != 0		3453151	1		!=			
ANR	3454128	PtrMemberAccess	tqn -> greedy		3453151	0					
ANR	3454129	Identifier	tqn		3453151	0					
ANR	3454130	Identifier	greedy		3453151	1					
ANR	3454131	PrimaryExpression	0		3453151	1					
ANR	3454132	CompoundStatement		175:7:4209:4239	3453151	1					
ANR	3454133	IdentifierDeclStatement	int qtype = NTYPE ( tqn -> target ) ;	3830:7:85330:85360	3453151	0	True				
ANR	3454134	IdentifierDecl	qtype = NTYPE ( tqn -> target )		3453151	0					
ANR	3454135	IdentifierDeclType	int		3453151	0					
ANR	3454136	Identifier	qtype		3453151	1					
ANR	3454137	AssignmentExpression	qtype = NTYPE ( tqn -> target )		3453151	2		=			
ANR	3454138	Identifier	qtype		3453151	0					
ANR	3454139	CallExpression	NTYPE ( tqn -> target )		3453151	1					
ANR	3454140	Callee	NTYPE		3453151	0					
ANR	3454141	Identifier	NTYPE		3453151	0					
ANR	3454142	ArgumentList	tqn -> target		3453151	1					
ANR	3454143	Argument	tqn -> target		3453151	0					
ANR	3454144	PtrMemberAccess	tqn -> target		3453151	0					
ANR	3454145	Identifier	tqn		3453151	0					
ANR	3454146	Identifier	target		3453151	1					
ANR	3454147	IfStatement	if ( IS_NODE_TYPE_SIMPLE ( qtype ) )		3453151	1					
ANR	3454148	Condition	IS_NODE_TYPE_SIMPLE ( qtype )	3831:11:85373:85398	3453151	0	True				
ANR	3454149	CallExpression	IS_NODE_TYPE_SIMPLE ( qtype )		3453151	0					
ANR	3454150	Callee	IS_NODE_TYPE_SIMPLE		3453151	0					
ANR	3454151	Identifier	IS_NODE_TYPE_SIMPLE		3453151	0					
ANR	3454152	ArgumentList	qtype		3453151	1					
ANR	3454153	Argument	qtype		3453151	0					
ANR	3454154	Identifier	qtype		3453151	0					
ANR	3454155	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_STOP_BT_SIMPLE_REPEAT )"	3832:2:85403:85454	3453151	1	True				
ANR	3454156	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_STOP_BT_SIMPLE_REPEAT )"		3453151	0					
ANR	3454157	Callee	SET_ENCLOSE_STATUS		3453151	0					
ANR	3454158	Identifier	SET_ENCLOSE_STATUS		3453151	0					
ANR	3454159	ArgumentList	node		3453151	1					
ANR	3454160	Argument	node		3453151	0					
ANR	3454161	Identifier	node		3453151	0					
ANR	3454162	Argument	NST_STOP_BT_SIMPLE_REPEAT		3453151	1					
ANR	3454163	Identifier	NST_STOP_BT_SIMPLE_REPEAT		3453151	0					
ANR	3454164	BreakStatement	break ;	3836:1:85472:85477	3453151	9	True				
ANR	3454165	BreakStatement	break ;	3839:4:85497:85502	3453151	24	True				
ANR	3454166	Label	case NT_ANCHOR :	3841:2:85507:85521	3453151	25	True				
ANR	3454167	Identifier	NT_ANCHOR		3453151	0					
ANR	3454168	CompoundStatement		188:6:4414:4444	3453151	26					
ANR	3454169	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3843:6:85535:85565	3453151	0	True				
ANR	3454170	IdentifierDecl	* an = NANCHOR ( node )		3453151	0					
ANR	3454171	IdentifierDeclType	AnchorNode *		3453151	0					
ANR	3454172	Identifier	an		3453151	1					
ANR	3454173	AssignmentExpression	* an = NANCHOR ( node )		3453151	2		=			
ANR	3454174	Identifier	an		3453151	0					
ANR	3454175	CallExpression	NANCHOR ( node )		3453151	1					
ANR	3454176	Callee	NANCHOR		3453151	0					
ANR	3454177	Identifier	NANCHOR		3453151	0					
ANR	3454178	ArgumentList	node		3453151	1					
ANR	3454179	Argument	node		3453151	0					
ANR	3454180	Identifier	node		3453151	0					
ANR	3454181	SwitchStatement	switch ( an -> type )		3453151	1					
ANR	3454182	Condition	an -> type	3845:14:85582:85589	3453151	0	True				
ANR	3454183	PtrMemberAccess	an -> type		3453151	0					
ANR	3454184	Identifier	an		3453151	0					
ANR	3454185	Identifier	type		3453151	1					
ANR	3454186	CompoundStatement		190:24:4471:4471	3453151	1					
ANR	3454187	Label	case ANCHOR_PREC_READ :	3846:6:85600:85621	3453151	0	True				
ANR	3454188	Identifier	ANCHOR_PREC_READ		3453151	0					
ANR	3454189	ExpressionStatement	"r = setup_tree ( an -> target , reg , state , env )"	3847:1:85624:85667	3453151	1	True				
ANR	3454190	AssignmentExpression	"r = setup_tree ( an -> target , reg , state , env )"		3453151	0		=			
ANR	3454191	Identifier	r		3453151	0					
ANR	3454192	CallExpression	"setup_tree ( an -> target , reg , state , env )"		3453151	1					
ANR	3454193	Callee	setup_tree		3453151	0					
ANR	3454194	Identifier	setup_tree		3453151	0					
ANR	3454195	ArgumentList	an -> target		3453151	1					
ANR	3454196	Argument	an -> target		3453151	0					
ANR	3454197	PtrMemberAccess	an -> target		3453151	0					
ANR	3454198	Identifier	an		3453151	0					
ANR	3454199	Identifier	target		3453151	1					
ANR	3454200	Argument	reg		3453151	1					
ANR	3454201	Identifier	reg		3453151	0					
ANR	3454202	Argument	state		3453151	2					
ANR	3454203	Identifier	state		3453151	0					
ANR	3454204	Argument	env		3453151	3					
ANR	3454205	Identifier	env		3453151	0					
ANR	3454206	BreakStatement	break ;	3848:1:85670:85675	3453151	2	True				
ANR	3454207	Label	case ANCHOR_PREC_READ_NOT :	3849:6:85683:85708	3453151	3	True				
ANR	3454208	Identifier	ANCHOR_PREC_READ_NOT		3453151	0					
ANR	3454209	ExpressionStatement	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"	3850:1:85711:85765	3453151	4	True				
ANR	3454210	AssignmentExpression	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		3453151	0		=			
ANR	3454211	Identifier	r		3453151	0					
ANR	3454212	CallExpression	"setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		3453151	1					
ANR	3454213	Callee	setup_tree		3453151	0					
ANR	3454214	Identifier	setup_tree		3453151	0					
ANR	3454215	ArgumentList	an -> target		3453151	1					
ANR	3454216	Argument	an -> target		3453151	0					
ANR	3454217	PtrMemberAccess	an -> target		3453151	0					
ANR	3454218	Identifier	an		3453151	0					
ANR	3454219	Identifier	target		3453151	1					
ANR	3454220	Argument	reg		3453151	1					
ANR	3454221	Identifier	reg		3453151	0					
ANR	3454222	Argument	state | IN_NOT		3453151	2					
ANR	3454223	InclusiveOrExpression	state | IN_NOT		3453151	0		|			
ANR	3454224	Identifier	state		3453151	0					
ANR	3454225	Identifier	IN_NOT		3453151	1					
ANR	3454226	Argument	env		3453151	3					
ANR	3454227	Identifier	env		3453151	0					
ANR	3454228	BreakStatement	break ;	3851:1:85768:85773	3453151	5	True				
ANR	3454229	Statement	define	3854:1:85817:85822	3453151	6	True				
ANR	3454230	Statement	ALLOWED_TYPE_IN_LB	3854:8:85824:85841	3453151	7	True				
ANR	3454231	Statement	(	3855:2:85848:85848	3453151	8	True				
ANR	3454232	Statement	BIT_NT_LIST	3855:4:85850:85860	3453151	9	True				
ANR	3454233	Statement	|	3855:16:85862:85862	3453151	10	True				
ANR	3454234	Statement	BIT_NT_ALT	3855:18:85864:85873	3453151	11	True				
ANR	3454235	Statement	|	3855:29:85875:85875	3453151	12	True				
ANR	3454236	Statement	BIT_NT_STR	3855:31:85877:85886	3453151	13	True				
ANR	3454237	Statement	|	3855:42:85888:85888	3453151	14	True				
ANR	3454238	Statement	BIT_NT_CCLASS	3855:44:85890:85902	3453151	15	True				
ANR	3454239	Statement	|	3855:58:85904:85904	3453151	16	True				
ANR	3454240	Statement	BIT_NT_CTYPE	3855:60:85906:85917	3453151	17	True				
ANR	3454241	Statement	|	3855:73:85919:85919	3453151	18	True				
ANR	3454242	Statement	BIT_NT_CANY	3856:4:85927:85937	3453151	19	True				
ANR	3454243	Statement	|	3856:16:85939:85939	3453151	20	True				
ANR	3454244	Statement	BIT_NT_ANCHOR	3856:18:85941:85953	3453151	21	True				
ANR	3454245	Statement	|	3856:32:85955:85955	3453151	22	True				
ANR	3454246	Statement	BIT_NT_ENCLOSE	3856:34:85957:85970	3453151	23	True				
ANR	3454247	Statement	|	3856:49:85972:85972	3453151	24	True				
ANR	3454248	Statement	BIT_NT_QTFR	3856:51:85974:85984	3453151	25	True				
ANR	3454249	Statement	|	3856:63:85986:85986	3453151	26	True				
ANR	3454250	Statement	BIT_NT_CALL	3856:65:85988:85998	3453151	27	True				
ANR	3454251	Statement	)	3856:77:86000:86000	3453151	28	True				
ANR	3454252	Statement	define	3858:1:86004:86009	3453151	29	True				
ANR	3454253	Statement	ALLOWED_ENCLOSE_IN_LB	3858:8:86011:86031	3453151	30	True				
ANR	3454254	Statement	(	3858:36:86039:86039	3453151	31	True				
ANR	3454255	Statement	ENCLOSE_MEMORY	3858:38:86041:86054	3453151	32	True				
ANR	3454256	Statement	)	3858:53:86056:86056	3453151	33	True				
ANR	3454257	Statement	define	3859:1:86059:86064	3453151	34	True				
ANR	3454258	Statement	ALLOWED_ENCLOSE_IN_LB_NOT	3859:8:86066:86090	3453151	35	True				
ANR	3454259	Statement	0	3859:36:86094:86094	3453151	36	True				
ANR	3454260	Statement	define	3861:1:86098:86103	3453151	37	True				
ANR	3454261	Statement	ALLOWED_ANCHOR_IN_LB	3861:8:86105:86124	3453151	38	True				
ANR	3454262	Statement	(	3862:0:86128:86128	3453151	39	True				
ANR	3454263	Statement	ANCHOR_LOOK_BEHIND	3862:2:86130:86147	3453151	40	True				
ANR	3454264	Statement	|	3862:21:86149:86149	3453151	41	True				
ANR	3454265	Statement	ANCHOR_BEGIN_LINE	3862:23:86151:86167	3453151	42	True				
ANR	3454266	Statement	|	3862:41:86169:86169	3453151	43	True				
ANR	3454267	Statement	ANCHOR_END_LINE	3862:43:86171:86185	3453151	44	True				
ANR	3454268	Statement	|	3862:59:86187:86187	3453151	45	True				
ANR	3454269	Statement	ANCHOR_BEGIN_BUF	3862:61:86189:86204	3453151	46	True				
ANR	3454270	Statement	|	3862:78:86206:86206	3453151	47	True				
ANR	3454271	Statement	ANCHOR_BEGIN_POSITION	3862:80:86208:86228	3453151	48	True				
ANR	3454272	Statement	)	3862:102:86230:86230	3453151	49	True				
ANR	3454273	Statement	define	3863:1:86233:86238	3453151	50	True				
ANR	3454274	Statement	ALLOWED_ANCHOR_IN_LB_NOT	3863:8:86240:86263	3453151	51	True				
ANR	3454275	Statement	(	3864:0:86267:86267	3453151	52	True				
ANR	3454276	Statement	ANCHOR_LOOK_BEHIND	3864:2:86269:86286	3453151	53	True				
ANR	3454277	Statement	|	3864:21:86288:86288	3453151	54	True				
ANR	3454278	Statement	ANCHOR_LOOK_BEHIND_NOT	3864:23:86290:86311	3453151	55	True				
ANR	3454279	Statement	|	3864:46:86313:86313	3453151	56	True				
ANR	3454280	Statement	ANCHOR_BEGIN_LINE	3864:48:86315:86331	3453151	57	True				
ANR	3454281	Statement	|	3864:66:86333:86333	3453151	58	True				
ANR	3454282	Statement	ANCHOR_END_LINE	3864:68:86335:86349	3453151	59	True				
ANR	3454283	Statement	|	3864:84:86351:86351	3453151	60	True				
ANR	3454284	Statement	ANCHOR_BEGIN_BUF	3864:86:86353:86368	3453151	61	True				
ANR	3454285	Statement	|	3864:103:86370:86370	3453151	62	True				
ANR	3454286	Statement	ANCHOR_BEGIN_POSITION	3864:105:86372:86392	3453151	63	True				
ANR	3454287	Statement	)	3864:127:86394:86394	3453151	64	True				
ANR	3454288	Label	case ANCHOR_LOOK_BEHIND :	3866:6:86403:86426	3453151	65	True				
ANR	3454289	Identifier	ANCHOR_LOOK_BEHIND		3453151	0					
ANR	3454290	CompoundStatement		212:1:5308:5308	3453151	66					
ANR	3454291	ExpressionStatement	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB , ALLOWED_ANCHOR_IN_LB )"	3868:3:86434:86539	3453151	0	True				
ANR	3454292	AssignmentExpression	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB , ALLOWED_ANCHOR_IN_LB )"		3453151	0		=			
ANR	3454293	Identifier	r		3453151	0					
ANR	3454294	CallExpression	"check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB , ALLOWED_ANCHOR_IN_LB )"		3453151	1					
ANR	3454295	Callee	check_type_tree		3453151	0					
ANR	3454296	Identifier	check_type_tree		3453151	0					
ANR	3454297	ArgumentList	an -> target		3453151	1					
ANR	3454298	Argument	an -> target		3453151	0					
ANR	3454299	PtrMemberAccess	an -> target		3453151	0					
ANR	3454300	Identifier	an		3453151	0					
ANR	3454301	Identifier	target		3453151	1					
ANR	3454302	Argument	ALLOWED_TYPE_IN_LB		3453151	1					
ANR	3454303	Identifier	ALLOWED_TYPE_IN_LB		3453151	0					
ANR	3454304	Argument	ALLOWED_ENCLOSE_IN_LB		3453151	2					
ANR	3454305	Identifier	ALLOWED_ENCLOSE_IN_LB		3453151	0					
ANR	3454306	Argument	ALLOWED_ANCHOR_IN_LB		3453151	3					
ANR	3454307	Identifier	ALLOWED_ANCHOR_IN_LB		3453151	0					
ANR	3454308	IfStatement	if ( r < 0 )		3453151	1					
ANR	3454309	Condition	r < 0	3870:7:86548:86552	3453151	0	True				
ANR	3454310	RelationalExpression	r < 0		3453151	0		<			
ANR	3454311	Identifier	r		3453151	0					
ANR	3454312	PrimaryExpression	0		3453151	1					
ANR	3454313	ReturnStatement	return r ;	3870:14:86555:86563	3453151	1	True				
ANR	3454314	Identifier	r		3453151	0					
ANR	3454315	IfStatement	if ( r > 0 )		3453151	2					
ANR	3454316	Condition	r > 0	3871:7:86572:86576	3453151	0	True				
ANR	3454317	RelationalExpression	r > 0		3453151	0		>			
ANR	3454318	Identifier	r		3453151	0					
ANR	3454319	PrimaryExpression	0		3453151	1					
ANR	3454320	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	3871:14:86579:86621	3453151	1	True				
ANR	3454321	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3453151	0					
ANR	3454322	ExpressionStatement	"r = setup_look_behind ( node , reg , env )"	3872:3:86626:86663	3453151	3	True				
ANR	3454323	AssignmentExpression	"r = setup_look_behind ( node , reg , env )"		3453151	0		=			
ANR	3454324	Identifier	r		3453151	0					
ANR	3454325	CallExpression	"setup_look_behind ( node , reg , env )"		3453151	1					
ANR	3454326	Callee	setup_look_behind		3453151	0					
ANR	3454327	Identifier	setup_look_behind		3453151	0					
ANR	3454328	ArgumentList	node		3453151	1					
ANR	3454329	Argument	node		3453151	0					
ANR	3454330	Identifier	node		3453151	0					
ANR	3454331	Argument	reg		3453151	1					
ANR	3454332	Identifier	reg		3453151	0					
ANR	3454333	Argument	env		3453151	2					
ANR	3454334	Identifier	env		3453151	0					
ANR	3454335	IfStatement	if ( r != 0 )		3453151	4					
ANR	3454336	Condition	r != 0	3873:7:86672:86677	3453151	0	True				
ANR	3454337	EqualityExpression	r != 0		3453151	0		!=			
ANR	3454338	Identifier	r		3453151	0					
ANR	3454339	PrimaryExpression	0		3453151	1					
ANR	3454340	ReturnStatement	return r ;	3873:15:86680:86688	3453151	1	True				
ANR	3454341	Identifier	r		3453151	0					
ANR	3454342	ExpressionStatement	"r = setup_tree ( an -> target , reg , state , env )"	3874:3:86693:86736	3453151	5	True				
ANR	3454343	AssignmentExpression	"r = setup_tree ( an -> target , reg , state , env )"		3453151	0		=			
ANR	3454344	Identifier	r		3453151	0					
ANR	3454345	CallExpression	"setup_tree ( an -> target , reg , state , env )"		3453151	1					
ANR	3454346	Callee	setup_tree		3453151	0					
ANR	3454347	Identifier	setup_tree		3453151	0					
ANR	3454348	ArgumentList	an -> target		3453151	1					
ANR	3454349	Argument	an -> target		3453151	0					
ANR	3454350	PtrMemberAccess	an -> target		3453151	0					
ANR	3454351	Identifier	an		3453151	0					
ANR	3454352	Identifier	target		3453151	1					
ANR	3454353	Argument	reg		3453151	1					
ANR	3454354	Identifier	reg		3453151	0					
ANR	3454355	Argument	state		3453151	2					
ANR	3454356	Identifier	state		3453151	0					
ANR	3454357	Argument	env		3453151	3					
ANR	3454358	Identifier	env		3453151	0					
ANR	3454359	BreakStatement	break ;	3876:1:86742:86747	3453151	67	True				
ANR	3454360	Label	case ANCHOR_LOOK_BEHIND_NOT :	3878:6:86756:86783	3453151	68	True				
ANR	3454361	Identifier	ANCHOR_LOOK_BEHIND_NOT		3453151	0					
ANR	3454362	CompoundStatement		224:1:5665:5665	3453151	69					
ANR	3454363	ExpressionStatement	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB_NOT , ALLOWED_ANCHOR_IN_LB_NOT )"	3880:3:86791:86903	3453151	0	True				
ANR	3454364	AssignmentExpression	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB_NOT , ALLOWED_ANCHOR_IN_LB_NOT )"		3453151	0		=			
ANR	3454365	Identifier	r		3453151	0					
ANR	3454366	CallExpression	"check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB_NOT , ALLOWED_ANCHOR_IN_LB_NOT )"		3453151	1					
ANR	3454367	Callee	check_type_tree		3453151	0					
ANR	3454368	Identifier	check_type_tree		3453151	0					
ANR	3454369	ArgumentList	an -> target		3453151	1					
ANR	3454370	Argument	an -> target		3453151	0					
ANR	3454371	PtrMemberAccess	an -> target		3453151	0					
ANR	3454372	Identifier	an		3453151	0					
ANR	3454373	Identifier	target		3453151	1					
ANR	3454374	Argument	ALLOWED_TYPE_IN_LB		3453151	1					
ANR	3454375	Identifier	ALLOWED_TYPE_IN_LB		3453151	0					
ANR	3454376	Argument	ALLOWED_ENCLOSE_IN_LB_NOT		3453151	2					
ANR	3454377	Identifier	ALLOWED_ENCLOSE_IN_LB_NOT		3453151	0					
ANR	3454378	Argument	ALLOWED_ANCHOR_IN_LB_NOT		3453151	3					
ANR	3454379	Identifier	ALLOWED_ANCHOR_IN_LB_NOT		3453151	0					
ANR	3454380	IfStatement	if ( r < 0 )		3453151	1					
ANR	3454381	Condition	r < 0	3882:7:86912:86916	3453151	0	True				
ANR	3454382	RelationalExpression	r < 0		3453151	0		<			
ANR	3454383	Identifier	r		3453151	0					
ANR	3454384	PrimaryExpression	0		3453151	1					
ANR	3454385	ReturnStatement	return r ;	3882:14:86919:86927	3453151	1	True				
ANR	3454386	Identifier	r		3453151	0					
ANR	3454387	IfStatement	if ( r > 0 )		3453151	2					
ANR	3454388	Condition	r > 0	3883:7:86936:86940	3453151	0	True				
ANR	3454389	RelationalExpression	r > 0		3453151	0		>			
ANR	3454390	Identifier	r		3453151	0					
ANR	3454391	PrimaryExpression	0		3453151	1					
ANR	3454392	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	3883:14:86943:86985	3453151	1	True				
ANR	3454393	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3453151	0					
ANR	3454394	ExpressionStatement	"r = setup_look_behind ( node , reg , env )"	3884:3:86990:87027	3453151	3	True				
ANR	3454395	AssignmentExpression	"r = setup_look_behind ( node , reg , env )"		3453151	0		=			
ANR	3454396	Identifier	r		3453151	0					
ANR	3454397	CallExpression	"setup_look_behind ( node , reg , env )"		3453151	1					
ANR	3454398	Callee	setup_look_behind		3453151	0					
ANR	3454399	Identifier	setup_look_behind		3453151	0					
ANR	3454400	ArgumentList	node		3453151	1					
ANR	3454401	Argument	node		3453151	0					
ANR	3454402	Identifier	node		3453151	0					
ANR	3454403	Argument	reg		3453151	1					
ANR	3454404	Identifier	reg		3453151	0					
ANR	3454405	Argument	env		3453151	2					
ANR	3454406	Identifier	env		3453151	0					
ANR	3454407	IfStatement	if ( r != 0 )		3453151	4					
ANR	3454408	Condition	r != 0	3885:7:87036:87041	3453151	0	True				
ANR	3454409	EqualityExpression	r != 0		3453151	0		!=			
ANR	3454410	Identifier	r		3453151	0					
ANR	3454411	PrimaryExpression	0		3453151	1					
ANR	3454412	ReturnStatement	return r ;	3885:15:87044:87052	3453151	1	True				
ANR	3454413	Identifier	r		3453151	0					
ANR	3454414	ExpressionStatement	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"	3886:3:87057:87111	3453151	5	True				
ANR	3454415	AssignmentExpression	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		3453151	0		=			
ANR	3454416	Identifier	r		3453151	0					
ANR	3454417	CallExpression	"setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		3453151	1					
ANR	3454418	Callee	setup_tree		3453151	0					
ANR	3454419	Identifier	setup_tree		3453151	0					
ANR	3454420	ArgumentList	an -> target		3453151	1					
ANR	3454421	Argument	an -> target		3453151	0					
ANR	3454422	PtrMemberAccess	an -> target		3453151	0					
ANR	3454423	Identifier	an		3453151	0					
ANR	3454424	Identifier	target		3453151	1					
ANR	3454425	Argument	reg		3453151	1					
ANR	3454426	Identifier	reg		3453151	0					
ANR	3454427	Argument	state | IN_NOT		3453151	2					
ANR	3454428	InclusiveOrExpression	state | IN_NOT		3453151	0		|			
ANR	3454429	Identifier	state		3453151	0					
ANR	3454430	Identifier	IN_NOT		3453151	1					
ANR	3454431	Argument	env		3453151	3					
ANR	3454432	Identifier	env		3453151	0					
ANR	3454433	BreakStatement	break ;	3888:1:87117:87122	3453151	70	True				
ANR	3454434	BreakStatement	break ;	3891:4:87142:87147	3453151	27	True				
ANR	3454435	Label	default :	3893:2:87152:87159	3453151	28	True				
ANR	3454436	Identifier	default		3453151	0					
ANR	3454437	BreakStatement	break ;	3894:4:87165:87170	3453151	29	True				
ANR	3454438	ReturnStatement	return r ;	3897:2:87179:87187	3453151	4	True				
ANR	3454439	Identifier	r		3453151	0					
ANR	3454440	ReturnType	static int		3453151	1					
ANR	3454441	Identifier	setup_tree		3453151	2					
ANR	3454442	ParameterList	"Node * node , regex_t * reg , int state , ScanEnv * env"		3453151	3					
ANR	3454443	Parameter	Node * node	3655:11:81069:81078	3453151	0	True				
ANR	3454444	ParameterType	Node *		3453151	0					
ANR	3454445	Identifier	node		3453151	1					
ANR	3454446	Parameter	regex_t * reg	3655:23:81081:81092	3453151	1	True				
ANR	3454447	ParameterType	regex_t *		3453151	0					
ANR	3454448	Identifier	reg		3453151	1					
ANR	3454449	Parameter	int state	3655:37:81095:81103	3453151	2	True				
ANR	3454450	ParameterType	int		3453151	0					
ANR	3454451	Identifier	state		3453151	1					
ANR	3454452	Parameter	ScanEnv * env	3655:48:81106:81117	3453151	3	True				
ANR	3454453	ParameterType	ScanEnv *		3453151	0					
ANR	3454454	Identifier	env		3453151	1					
ANR	3454455	CFGEntryNode	ENTRY		3453151		True				
ANR	3454456	CFGExitNode	EXIT		3453151		True				
ANR	3454457	Symbol	* sn		3453151						
ANR	3454458	Symbol	env -> bt_mem_start		3453151						
ANR	3454459	Symbol	tqn -> target		3453151						
ANR	3454460	Symbol	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		3453151						
ANR	3454461	Symbol	prev		3453151						
ANR	3454462	Symbol	tqn -> upper		3453151						
ANR	3454463	Symbol	type		3453151						
ANR	3454464	Symbol	NQTFR		3453151						
ANR	3454465	Symbol	env -> bt_mem_end		3453151						
ANR	3454466	Symbol	expand_case_fold_string		3453151						
ANR	3454467	Symbol	len		3453151						
ANR	3454468	Symbol	IS_NODE_TYPE_SIMPLE		3453151						
ANR	3454469	Symbol	* br		3453151						
ANR	3454470	Symbol	en -> type		3453151						
ANR	3454471	Symbol	options		3453151						
ANR	3454472	Symbol	SCANENV_MEM_NODES		3453151						
ANR	3454473	Symbol	state		3453151						
ANR	3454474	Symbol	IS_REPEAT_INFINITE		3453151						
ANR	3454475	Symbol	qn		3453151						
ANR	3454476	Symbol	NENCLOSE ( node ) -> option		3453151						
ANR	3454477	Symbol	en -> regnum		3453151						
ANR	3454478	Symbol	NCDR		3453151						
ANR	3454479	Symbol	NSTR		3453151						
ANR	3454480	Symbol	tqn -> lower		3453151						
ANR	3454481	Symbol	NSTR ( target ) -> flag		3453151						
ANR	3454482	Symbol	check_type_tree		3453151						
ANR	3454483	Symbol	an		3453151						
ANR	3454484	Symbol	qn -> target		3453151						
ANR	3454485	Symbol	node		3453151						
ANR	3454486	Symbol	BACKREFS_P		3453151						
ANR	3454487	Symbol	get_max_match_length		3453151						
ANR	3454488	Symbol	an -> target		3453151						
ANR	3454489	Symbol	NST_STOP_BT_SIMPLE_REPEAT		3453151						
ANR	3454490	Symbol	next_setup		3453151						
ANR	3454491	Symbol	ALLOWED_ENCLOSE_IN_LB		3453151						
ANR	3454492	Symbol	qtype		3453151						
ANR	3454493	Symbol	NSTRING_IS_RAW		3453151						
ANR	3454494	Symbol	* en		3453151						
ANR	3454495	Symbol	br		3453151						
ANR	3454496	Symbol	qn -> lower		3453151						
ANR	3454497	Symbol	NBREF		3453151						
ANR	3454498	Symbol	NENCLOSE		3453151						
ANR	3454499	Symbol	* * p		3453151						
ANR	3454500	Symbol	sn		3453151						
ANR	3454501	Symbol	d		3453151						
ANR	3454502	Symbol	IN_ALT		3453151						
ANR	3454503	Symbol	i		3453151						
ANR	3454504	Symbol	ALLOWED_ENCLOSE_IN_LB_NOT		3453151						
ANR	3454505	Symbol	n		3453151						
ANR	3454506	Symbol	get_head_value_node		3453151						
ANR	3454507	Symbol	p		3453151						
ANR	3454508	Symbol	r		3453151						
ANR	3454509	Symbol	ALLOWED_TYPE_IN_LB		3453151						
ANR	3454510	Symbol	ALLOWED_ANCHOR_IN_LB		3453151						
ANR	3454511	Symbol	setup_look_behind		3453151						
ANR	3454512	Symbol	en -> target		3453151						
ANR	3454513	Symbol	ALLOWED_ANCHOR_IN_LB_NOT		3453151						
ANR	3454514	Symbol	IS_IGNORECASE		3453151						
ANR	3454515	Symbol	NSTRING_LEN		3453151						
ANR	3454516	Symbol	NCAR		3453151						
ANR	3454517	Symbol	br -> back_num		3453151						
ANR	3454518	Symbol	EXPAND_STRING_MAX_LENGTH		3453151						
ANR	3454519	Symbol	qn -> state		3453151						
ANR	3454520	Symbol	tqn		3453151						
ANR	3454521	Symbol	IN_NOT		3453151						
ANR	3454522	Symbol	sn -> s		3453151						
ANR	3454523	Symbol	reg		3453151						
ANR	3454524	Symbol	reg -> options		3453151						
ANR	3454525	Symbol	* nodes		3453151						
ANR	3454526	Symbol	IN_REPEAT		3453151						
ANR	3454527	Symbol	tqn -> head_exact		3453151						
ANR	3454528	Symbol	env -> backrefed_mem		3453151						
ANR	3454529	Symbol	* * i		3453151						
ANR	3454530	Symbol	NQ_TARGET_IS_EMPTY		3453151						
ANR	3454531	Symbol	NULL		3453151						
ANR	3454532	Symbol	* env		3453151						
ANR	3454533	Symbol	en		3453151						
ANR	3454534	Symbol	* NSTR		3453151						
ANR	3454535	Symbol	NENCLOSE ( node ) -> target		3453151						
ANR	3454536	Symbol	qn -> upper		3453151						
ANR	3454537	Symbol	get_min_match_length		3453151						
ANR	3454538	Symbol	NULL_NODE		3453151						
ANR	3454539	Symbol	* qn		3453151						
ANR	3454540	Symbol	qn -> target_empty_info		3453151						
ANR	3454541	Symbol	qn -> greedy		3453151						
ANR	3454542	Symbol	IS_NOT_NULL		3453151						
ANR	3454543	Symbol	ONIGERR_INVALID_BACKREF		3453151						
ANR	3454544	Symbol	* NENCLOSE		3453151						
ANR	3454545	Symbol	an -> type		3453151						
ANR	3454546	Symbol	NST_MEM_BACKREFED		3453151						
ANR	3454547	Symbol	NT_QTFR		3453151						
ANR	3454548	Symbol	NST_IN_REPEAT		3453151						
ANR	3454549	Symbol	sn -> end		3453151						
ANR	3454550	Symbol	env -> num_mem		3453151						
ANR	3454551	Symbol	quantifiers_memory_node_info		3453151						
ANR	3454552	Symbol	& d		3453151						
ANR	3454553	Symbol	env		3453151						
ANR	3454554	Symbol	tqn -> greedy		3453151						
ANR	3454555	Symbol	setup_tree		3453151						
ANR	3454556	Symbol	qn -> head_exact		3453151						
ANR	3454557	Symbol	target		3453151						
ANR	3454558	Symbol	* an		3453151						
ANR	3454559	Symbol	nodes		3453151						
ANR	3454560	Symbol	* i		3453151						
ANR	3454561	Symbol	onig_node_str_cat		3453151						
ANR	3454562	Symbol	NANCHOR		3453151						
ANR	3454563	Symbol	NTYPE		3453151						
ANR	3454564	Symbol	* p		3453151						
ANR	3454565	Symbol	IN_VAR_REPEAT		3453151						
ANR	3454566	Symbol	* tqn		3453151						
ANR	3454567	Symbol	* reg		3453151						
ANR	3454568	Symbol	IS_BACKREF_NEST_LEVEL		3453151						
ANR	3454569	Symbol	NT_STR		3453151						
ANR	3454570	Function	set_bm_skip	3901:0:87233:87872							
ANR	3454571	FunctionDef	"set_bm_skip (UChar * s , UChar * end , OnigEncoding enc ARG_UNUSED , UChar skip [ ] , int * * int_skip)"		3454570	0					
ANR	3454572	CompoundStatement		3904:0:87342:87872	3454570	0					
ANR	3454573	IdentifierDeclStatement	"int i , len ;"	3905:2:87346:87356	3454570	0	True				
ANR	3454574	IdentifierDecl	i		3454570	0					
ANR	3454575	IdentifierDeclType	int		3454570	0					
ANR	3454576	Identifier	i		3454570	1					
ANR	3454577	IdentifierDecl	len		3454570	1					
ANR	3454578	IdentifierDeclType	int		3454570	0					
ANR	3454579	Identifier	len		3454570	1					
ANR	3454580	ExpressionStatement	len = end - s	3907:2:87361:87374	3454570	1	True				
ANR	3454581	AssignmentExpression	len = end - s		3454570	0		=			
ANR	3454582	Identifier	len		3454570	0					
ANR	3454583	AdditiveExpression	end - s		3454570	1		-			
ANR	3454584	Identifier	end		3454570	0					
ANR	3454585	Identifier	s		3454570	1					
ANR	3454586	IfStatement	if ( len < ONIG_CHAR_TABLE_SIZE )		3454570	2					
ANR	3454587	Condition	len < ONIG_CHAR_TABLE_SIZE	3908:6:87382:87407	3454570	0	True				
ANR	3454588	RelationalExpression	len < ONIG_CHAR_TABLE_SIZE		3454570	0		<			
ANR	3454589	Identifier	len		3454570	0					
ANR	3454590	Identifier	ONIG_CHAR_TABLE_SIZE		3454570	1					
ANR	3454591	CompoundStatement		5:34:67:67	3454570	1					
ANR	3454592	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		3454570	0					
ANR	3454593	ForInit	i = 0 ;	3909:9:87421:87426	3454570	0	True				
ANR	3454594	AssignmentExpression	i = 0		3454570	0		=			
ANR	3454595	Identifier	i		3454570	0					
ANR	3454596	PrimaryExpression	0		3454570	1					
ANR	3454597	Condition	i < ONIG_CHAR_TABLE_SIZE	3909:16:87428:87451	3454570	1	True				
ANR	3454598	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		3454570	0		<			
ANR	3454599	Identifier	i		3454570	0					
ANR	3454600	Identifier	ONIG_CHAR_TABLE_SIZE		3454570	1					
ANR	3454601	PostIncDecOperationExpression	i ++	3909:42:87454:87456	3454570	2	True				
ANR	3454602	Identifier	i		3454570	0					
ANR	3454603	IncDec	++		3454570	1					
ANR	3454604	ExpressionStatement	skip [ i ] = len	3909:47:87459:87472	3454570	3	True				
ANR	3454605	AssignmentExpression	skip [ i ] = len		3454570	0		=			
ANR	3454606	ArrayIndexing	skip [ i ]		3454570	0					
ANR	3454607	Identifier	skip		3454570	0					
ANR	3454608	Identifier	i		3454570	1					
ANR	3454609	Identifier	len		3454570	1					
ANR	3454610	ForStatement	for ( i = 0 ; i < len - 1 ; i ++ )		3454570	1					
ANR	3454611	ForInit	i = 0 ;	3911:9:87484:87489	3454570	0	True				
ANR	3454612	AssignmentExpression	i = 0		3454570	0		=			
ANR	3454613	Identifier	i		3454570	0					
ANR	3454614	PrimaryExpression	0		3454570	1					
ANR	3454615	Condition	i < len - 1	3911:16:87491:87501	3454570	1	True				
ANR	3454616	RelationalExpression	i < len - 1		3454570	0		<			
ANR	3454617	Identifier	i		3454570	0					
ANR	3454618	AdditiveExpression	len - 1		3454570	1		-			
ANR	3454619	Identifier	len		3454570	0					
ANR	3454620	PrimaryExpression	1		3454570	1					
ANR	3454621	PostIncDecOperationExpression	i ++	3911:29:87504:87506	3454570	2	True				
ANR	3454622	Identifier	i		3454570	0					
ANR	3454623	IncDec	++		3454570	1					
ANR	3454624	ExpressionStatement	skip [ s [ i ] ] = len - 1 - i	3912:6:87515:87539	3454570	3	True				
ANR	3454625	AssignmentExpression	skip [ s [ i ] ] = len - 1 - i		3454570	0		=			
ANR	3454626	ArrayIndexing	skip [ s [ i ] ]		3454570	0					
ANR	3454627	Identifier	skip		3454570	0					
ANR	3454628	ArrayIndexing	s [ i ]		3454570	1					
ANR	3454629	Identifier	s		3454570	0					
ANR	3454630	Identifier	i		3454570	1					
ANR	3454631	AdditiveExpression	len - 1 - i		3454570	1		-			
ANR	3454632	Identifier	len		3454570	0					
ANR	3454633	AdditiveExpression	1 - i		3454570	1		-			
ANR	3454634	PrimaryExpression	1		3454570	0					
ANR	3454635	Identifier	i		3454570	1					
ANR	3454636	ElseStatement	else		3454570	0					
ANR	3454637	CompoundStatement		11:7:209:209	3454570	0					
ANR	3454638	IfStatement	if ( IS_NULL ( * int_skip ) )		3454570	0					
ANR	3454639	Condition	IS_NULL ( * int_skip )	3915:8:87562:87579	3454570	0	True				
ANR	3454640	CallExpression	IS_NULL ( * int_skip )		3454570	0					
ANR	3454641	Callee	IS_NULL		3454570	0					
ANR	3454642	Identifier	IS_NULL		3454570	0					
ANR	3454643	ArgumentList	* int_skip		3454570	1					
ANR	3454644	Argument	* int_skip		3454570	0					
ANR	3454645	UnaryOperationExpression	* int_skip		3454570	0					
ANR	3454646	UnaryOperator	*		3454570	0					
ANR	3454647	Identifier	int_skip		3454570	1					
ANR	3454648	CompoundStatement		12:28:239:239	3454570	1					
ANR	3454649	ExpressionStatement	* int_skip = ( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )	3916:6:87590:87652	3454570	0	True				
ANR	3454650	AssignmentExpression	* int_skip = ( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		3454570	0		=			
ANR	3454651	UnaryOperationExpression	* int_skip		3454570	0					
ANR	3454652	UnaryOperator	*		3454570	0					
ANR	3454653	Identifier	int_skip		3454570	1					
ANR	3454654	CastExpression	( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		3454570	1					
ANR	3454655	CastTarget	int *		3454570	0					
ANR	3454656	CallExpression	xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		3454570	1					
ANR	3454657	Callee	xmalloc		3454570	0					
ANR	3454658	Identifier	xmalloc		3454570	0					
ANR	3454659	ArgumentList	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		3454570	1					
ANR	3454660	Argument	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		3454570	0					
ANR	3454661	MultiplicativeExpression	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		3454570	0		*			
ANR	3454662	SizeofExpression	sizeof ( int )		3454570	0					
ANR	3454663	Sizeof	sizeof		3454570	0					
ANR	3454664	SizeofOperand	int		3454570	1					
ANR	3454665	Identifier	ONIG_CHAR_TABLE_SIZE		3454570	1					
ANR	3454666	IfStatement	if ( IS_NULL ( * int_skip ) )		3454570	1					
ANR	3454667	Condition	IS_NULL ( * int_skip )	3917:10:87664:87681	3454570	0	True				
ANR	3454668	CallExpression	IS_NULL ( * int_skip )		3454570	0					
ANR	3454669	Callee	IS_NULL		3454570	0					
ANR	3454670	Identifier	IS_NULL		3454570	0					
ANR	3454671	ArgumentList	* int_skip		3454570	1					
ANR	3454672	Argument	* int_skip		3454570	0					
ANR	3454673	UnaryOperationExpression	* int_skip		3454570	0					
ANR	3454674	UnaryOperator	*		3454570	0					
ANR	3454675	Identifier	int_skip		3454570	1					
ANR	3454676	ReturnStatement	return ONIGERR_MEMORY ;	3917:30:87684:87705	3454570	1	True				
ANR	3454677	Identifier	ONIGERR_MEMORY		3454570	0					
ANR	3454678	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		3454570	1					
ANR	3454679	ForInit	i = 0 ;	3919:9:87722:87727	3454570	0	True				
ANR	3454680	AssignmentExpression	i = 0		3454570	0		=			
ANR	3454681	Identifier	i		3454570	0					
ANR	3454682	PrimaryExpression	0		3454570	1					
ANR	3454683	Condition	i < ONIG_CHAR_TABLE_SIZE	3919:16:87729:87752	3454570	1	True				
ANR	3454684	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		3454570	0		<			
ANR	3454685	Identifier	i		3454570	0					
ANR	3454686	Identifier	ONIG_CHAR_TABLE_SIZE		3454570	1					
ANR	3454687	PostIncDecOperationExpression	i ++	3919:42:87755:87757	3454570	2	True				
ANR	3454688	Identifier	i		3454570	0					
ANR	3454689	IncDec	++		3454570	1					
ANR	3454690	ExpressionStatement	( * int_skip ) [ i ] = len	3919:47:87760:87780	3454570	3	True				
ANR	3454691	AssignmentExpression	( * int_skip ) [ i ] = len		3454570	0		=			
ANR	3454692	ArrayIndexing	( * int_skip ) [ i ]		3454570	0					
ANR	3454693	UnaryOperationExpression	* int_skip		3454570	0					
ANR	3454694	UnaryOperator	*		3454570	0					
ANR	3454695	Identifier	int_skip		3454570	1					
ANR	3454696	Identifier	i		3454570	1					
ANR	3454697	Identifier	len		3454570	1					
ANR	3454698	ForStatement	for ( i = 0 ; i < len - 1 ; i ++ )		3454570	2					
ANR	3454699	ForInit	i = 0 ;	3921:9:87792:87797	3454570	0	True				
ANR	3454700	AssignmentExpression	i = 0		3454570	0		=			
ANR	3454701	Identifier	i		3454570	0					
ANR	3454702	PrimaryExpression	0		3454570	1					
ANR	3454703	Condition	i < len - 1	3921:16:87799:87809	3454570	1	True				
ANR	3454704	RelationalExpression	i < len - 1		3454570	0		<			
ANR	3454705	Identifier	i		3454570	0					
ANR	3454706	AdditiveExpression	len - 1		3454570	1		-			
ANR	3454707	Identifier	len		3454570	0					
ANR	3454708	PrimaryExpression	1		3454570	1					
ANR	3454709	PostIncDecOperationExpression	i ++	3921:29:87812:87814	3454570	2	True				
ANR	3454710	Identifier	i		3454570	0					
ANR	3454711	IncDec	++		3454570	1					
ANR	3454712	ExpressionStatement	( * int_skip ) [ s [ i ] ] = len - 1 - i	3922:6:87823:87854	3454570	3	True				
ANR	3454713	AssignmentExpression	( * int_skip ) [ s [ i ] ] = len - 1 - i		3454570	0		=			
ANR	3454714	ArrayIndexing	( * int_skip ) [ s [ i ] ]		3454570	0					
ANR	3454715	UnaryOperationExpression	* int_skip		3454570	0					
ANR	3454716	UnaryOperator	*		3454570	0					
ANR	3454717	Identifier	int_skip		3454570	1					
ANR	3454718	ArrayIndexing	s [ i ]		3454570	1					
ANR	3454719	Identifier	s		3454570	0					
ANR	3454720	Identifier	i		3454570	1					
ANR	3454721	AdditiveExpression	len - 1 - i		3454570	1		-			
ANR	3454722	Identifier	len		3454570	0					
ANR	3454723	AdditiveExpression	1 - i		3454570	1		-			
ANR	3454724	PrimaryExpression	1		3454570	0					
ANR	3454725	Identifier	i		3454570	1					
ANR	3454726	ReturnStatement	return 0 ;	3924:2:87862:87870	3454570	3	True				
ANR	3454727	PrimaryExpression	0		3454570	0					
ANR	3454728	ReturnType	static int		3454570	1					
ANR	3454729	Identifier	set_bm_skip		3454570	2					
ANR	3454730	ParameterList	"UChar * s , UChar * end , OnigEncoding enc ARG_UNUSED , UChar skip [ ] , int * * int_skip"		3454570	3					
ANR	3454731	Parameter	UChar * s	3902:12:87256:87263	3454570	0	True				
ANR	3454732	ParameterType	UChar *		3454570	0					
ANR	3454733	Identifier	s		3454570	1					
ANR	3454734	Parameter	UChar * end	3902:22:87266:87275	3454570	1	True				
ANR	3454735	ParameterType	UChar *		3454570	0					
ANR	3454736	Identifier	end		3454570	1					
ANR	3454737	Parameter	OnigEncoding enc ARG_UNUSED	3902:34:87278:87304	3454570	2	True				
ANR	3454738	ParameterType	OnigEncoding enc		3454570	0					
ANR	3454739	Identifier	ARG_UNUSED		3454570	1					
ANR	3454740	Parameter	UChar skip [ ]	3903:5:87312:87323	3454570	3	True				
ANR	3454741	ParameterType	UChar [ ]		3454570	0					
ANR	3454742	Identifier	skip		3454570	1					
ANR	3454743	Parameter	int * * int_skip	3903:19:87326:87339	3454570	4	True				
ANR	3454744	ParameterType	int * *		3454570	0					
ANR	3454745	Identifier	int_skip		3454570	1					
ANR	3454746	CFGEntryNode	ENTRY		3454570		True				
ANR	3454747	CFGExitNode	EXIT		3454570		True				
ANR	3454748	Symbol	* * i		3454570						
ANR	3454749	Symbol	* int_skip		3454570						
ANR	3454750	Symbol	int_skip		3454570						
ANR	3454751	Symbol	ONIGERR_MEMORY		3454570						
ANR	3454752	Symbol	i		3454570						
ANR	3454753	Symbol	skip		3454570						
ANR	3454754	Symbol	ARG_UNUSED		3454570						
ANR	3454755	Symbol	* skip		3454570						
ANR	3454756	Symbol	s		3454570						
ANR	3454757	Symbol	ONIG_CHAR_TABLE_SIZE		3454570						
ANR	3454758	Symbol	* i		3454570						
ANR	3454759	Symbol	len		3454570						
ANR	3454760	Symbol	IS_NULL		3454570						
ANR	3454761	Symbol	xmalloc		3454570						
ANR	3454762	Symbol	* * s		3454570						
ANR	3454763	Symbol	end		3454570						
ANR	3454764	Symbol	* * int_skip		3454570						
ANR	3454765	Symbol	* s		3454570						
ANR	3454766	ClassDef	<unnamed>	3929:8:87914:88020							
ANR	3454767	DeclStmt									
ANR	3454768	Decl							OnigDistance	OnigDistance	min
ANR	3454769	DeclStmt									
ANR	3454770	Decl							OnigDistance	OnigDistance	max
ANR	3454771	DeclStmt									
ANR	3454772	Decl									MinMaxLen
ANR	3454773	ClassDef	<unnamed>	3934:8:88031:88188							
ANR	3454774	DeclStmt									
ANR	3454775	Decl							MinMaxLen	MinMaxLen	mmd
ANR	3454776	DeclStmt									
ANR	3454777	Decl							OnigEncoding	OnigEncoding	enc
ANR	3454778	DeclStmt									
ANR	3454779	Decl							OnigOptionType	OnigOptionType	options
ANR	3454780	DeclStmt									
ANR	3454781	Decl							OnigCaseFoldType	OnigCaseFoldType	case_fold_flag
ANR	3454782	DeclStmt									
ANR	3454783	Decl							ScanEnv	ScanEnv *	scan_env
ANR	3454784	DeclStmt									
ANR	3454785	Decl									OptEnv
ANR	3454786	ClassDef	<unnamed>	3942:8:88199:88259							
ANR	3454787	DeclStmt									
ANR	3454788	Decl							int	int	left_anchor
ANR	3454789	DeclStmt									
ANR	3454790	Decl							int	int	right_anchor
ANR	3454791	DeclStmt									
ANR	3454792	Decl									OptAncInfo
ANR	3454793	ClassDef	<unnamed>	3947:8:88270:88432							
ANR	3454794	DeclStmt									
ANR	3454795	Decl							MinMaxLen	MinMaxLen	mmd
ANR	3454796	DeclStmt									
ANR	3454797	Decl							OptAncInfo	OptAncInfo	anc
ANR	3454798	DeclStmt									
ANR	3454799	Decl							int	int	reach_end
ANR	3454800	DeclStmt									
ANR	3454801	Decl							int	int	ignore_case
ANR	3454802	DeclStmt									
ANR	3454803	Decl							int	int	len
ANR	3454804	DeclStmt									
ANR	3454805	Decl							UChar	UChar [ OPT_EXACT_MAXLEN ]	s
ANR	3454806	DeclStmt									
ANR	3454807	Decl									OptExactInfo
ANR	3454808	ClassDef	<unnamed>	3957:8:88443:88596							
ANR	3454809	DeclStmt									
ANR	3454810	Decl							MinMaxLen	MinMaxLen	mmd
ANR	3454811	DeclStmt									
ANR	3454812	Decl							OptAncInfo	OptAncInfo	anc
ANR	3454813	DeclStmt									
ANR	3454814	Decl							int	int	value
ANR	3454815	DeclStmt									
ANR	3454816	Decl							UChar	UChar [ ONIG_CHAR_TABLE_SIZE ]	map
ANR	3454817	DeclStmt									
ANR	3454818	Decl									OptMapInfo
ANR	3454819	ClassDef	<unnamed>	3965:8:88607:88829							
ANR	3454820	DeclStmt									
ANR	3454821	Decl							MinMaxLen	MinMaxLen	len
ANR	3454822	DeclStmt									
ANR	3454823	Decl							OptAncInfo	OptAncInfo	anc
ANR	3454824	DeclStmt									
ANR	3454825	Decl							OptExactInfo	OptExactInfo	exb
ANR	3454826	DeclStmt									
ANR	3454827	Decl							OptExactInfo	OptExactInfo	exm
ANR	3454828	DeclStmt									
ANR	3454829	Decl							OptExactInfo	OptExactInfo	expr
ANR	3454830	DeclStmt									
ANR	3454831	Decl							OptMapInfo	OptMapInfo	map
ANR	3454832	DeclStmt									
ANR	3454833	Decl									NodeOptInfo
ANR	3454834	Function	map_position_value	3977:0:88833:89705							
ANR	3454835	FunctionDef	"map_position_value (OnigEncoding enc , int i)"		3454834	0					
ANR	3454836	CompoundStatement		3979:0:88888:89705	3454834	0					
ANR	3454837	Statement	static	3980:2:88892:88897	3454834	0	True				
ANR	3454838	IdentifierDeclStatement	"const short int ByteValTable [ ] = { 5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 10 , 10 , 1 , 1 , 10 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 12 , 4 , 7 , 4 , 4 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 6 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 1 } ;"	3980:9:88899:89480	3454834	1	True				
ANR	3454839	IdentifierDecl	"ByteValTable [ ] = { 5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 10 , 10 , 1 , 1 , 10 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 12 , 4 , 7 , 4 , 4 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 6 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 1 }"		3454834	0					
ANR	3454840	IdentifierDeclType	const short int [ ]		3454834	0					
ANR	3454841	Identifier	ByteValTable		3454834	1					
ANR	3454842	AssignmentExpression	"ByteValTable [ ] = { 5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 10 , 10 , 1 , 1 , 10 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 12 , 4 , 7 , 4 , 4 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 6 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 1 }"		3454834	2		=			
ANR	3454843	Identifier	ByteValTable		3454834	0					
ANR	3454844	InitializerList	5		3454834	1					
ANR	3454845	PrimaryExpression	5		3454834	0					
ANR	3454846	PrimaryExpression	1		3454834	1					
ANR	3454847	PrimaryExpression	1		3454834	2					
ANR	3454848	PrimaryExpression	1		3454834	3					
ANR	3454849	PrimaryExpression	1		3454834	4					
ANR	3454850	PrimaryExpression	1		3454834	5					
ANR	3454851	PrimaryExpression	1		3454834	6					
ANR	3454852	PrimaryExpression	1		3454834	7					
ANR	3454853	PrimaryExpression	1		3454834	8					
ANR	3454854	PrimaryExpression	10		3454834	9					
ANR	3454855	PrimaryExpression	10		3454834	10					
ANR	3454856	PrimaryExpression	1		3454834	11					
ANR	3454857	PrimaryExpression	1		3454834	12					
ANR	3454858	PrimaryExpression	10		3454834	13					
ANR	3454859	PrimaryExpression	1		3454834	14					
ANR	3454860	PrimaryExpression	1		3454834	15					
ANR	3454861	PrimaryExpression	1		3454834	16					
ANR	3454862	PrimaryExpression	1		3454834	17					
ANR	3454863	PrimaryExpression	1		3454834	18					
ANR	3454864	PrimaryExpression	1		3454834	19					
ANR	3454865	PrimaryExpression	1		3454834	20					
ANR	3454866	PrimaryExpression	1		3454834	21					
ANR	3454867	PrimaryExpression	1		3454834	22					
ANR	3454868	PrimaryExpression	1		3454834	23					
ANR	3454869	PrimaryExpression	1		3454834	24					
ANR	3454870	PrimaryExpression	1		3454834	25					
ANR	3454871	PrimaryExpression	1		3454834	26					
ANR	3454872	PrimaryExpression	1		3454834	27					
ANR	3454873	PrimaryExpression	1		3454834	28					
ANR	3454874	PrimaryExpression	1		3454834	29					
ANR	3454875	PrimaryExpression	1		3454834	30					
ANR	3454876	PrimaryExpression	1		3454834	31					
ANR	3454877	PrimaryExpression	12		3454834	32					
ANR	3454878	PrimaryExpression	4		3454834	33					
ANR	3454879	PrimaryExpression	7		3454834	34					
ANR	3454880	PrimaryExpression	4		3454834	35					
ANR	3454881	PrimaryExpression	4		3454834	36					
ANR	3454882	PrimaryExpression	4		3454834	37					
ANR	3454883	PrimaryExpression	4		3454834	38					
ANR	3454884	PrimaryExpression	4		3454834	39					
ANR	3454885	PrimaryExpression	4		3454834	40					
ANR	3454886	PrimaryExpression	5		3454834	41					
ANR	3454887	PrimaryExpression	5		3454834	42					
ANR	3454888	PrimaryExpression	5		3454834	43					
ANR	3454889	PrimaryExpression	5		3454834	44					
ANR	3454890	PrimaryExpression	5		3454834	45					
ANR	3454891	PrimaryExpression	5		3454834	46					
ANR	3454892	PrimaryExpression	5		3454834	47					
ANR	3454893	PrimaryExpression	6		3454834	48					
ANR	3454894	PrimaryExpression	6		3454834	49					
ANR	3454895	PrimaryExpression	6		3454834	50					
ANR	3454896	PrimaryExpression	6		3454834	51					
ANR	3454897	PrimaryExpression	6		3454834	52					
ANR	3454898	PrimaryExpression	6		3454834	53					
ANR	3454899	PrimaryExpression	6		3454834	54					
ANR	3454900	PrimaryExpression	6		3454834	55					
ANR	3454901	PrimaryExpression	6		3454834	56					
ANR	3454902	PrimaryExpression	6		3454834	57					
ANR	3454903	PrimaryExpression	5		3454834	58					
ANR	3454904	PrimaryExpression	5		3454834	59					
ANR	3454905	PrimaryExpression	5		3454834	60					
ANR	3454906	PrimaryExpression	5		3454834	61					
ANR	3454907	PrimaryExpression	5		3454834	62					
ANR	3454908	PrimaryExpression	5		3454834	63					
ANR	3454909	PrimaryExpression	5		3454834	64					
ANR	3454910	PrimaryExpression	6		3454834	65					
ANR	3454911	PrimaryExpression	6		3454834	66					
ANR	3454912	PrimaryExpression	6		3454834	67					
ANR	3454913	PrimaryExpression	6		3454834	68					
ANR	3454914	PrimaryExpression	7		3454834	69					
ANR	3454915	PrimaryExpression	6		3454834	70					
ANR	3454916	PrimaryExpression	6		3454834	71					
ANR	3454917	PrimaryExpression	6		3454834	72					
ANR	3454918	PrimaryExpression	6		3454834	73					
ANR	3454919	PrimaryExpression	6		3454834	74					
ANR	3454920	PrimaryExpression	6		3454834	75					
ANR	3454921	PrimaryExpression	6		3454834	76					
ANR	3454922	PrimaryExpression	6		3454834	77					
ANR	3454923	PrimaryExpression	6		3454834	78					
ANR	3454924	PrimaryExpression	6		3454834	79					
ANR	3454925	PrimaryExpression	6		3454834	80					
ANR	3454926	PrimaryExpression	6		3454834	81					
ANR	3454927	PrimaryExpression	6		3454834	82					
ANR	3454928	PrimaryExpression	6		3454834	83					
ANR	3454929	PrimaryExpression	6		3454834	84					
ANR	3454930	PrimaryExpression	6		3454834	85					
ANR	3454931	PrimaryExpression	6		3454834	86					
ANR	3454932	PrimaryExpression	6		3454834	87					
ANR	3454933	PrimaryExpression	6		3454834	88					
ANR	3454934	PrimaryExpression	6		3454834	89					
ANR	3454935	PrimaryExpression	6		3454834	90					
ANR	3454936	PrimaryExpression	5		3454834	91					
ANR	3454937	PrimaryExpression	6		3454834	92					
ANR	3454938	PrimaryExpression	5		3454834	93					
ANR	3454939	PrimaryExpression	5		3454834	94					
ANR	3454940	PrimaryExpression	5		3454834	95					
ANR	3454941	PrimaryExpression	5		3454834	96					
ANR	3454942	PrimaryExpression	6		3454834	97					
ANR	3454943	PrimaryExpression	6		3454834	98					
ANR	3454944	PrimaryExpression	6		3454834	99					
ANR	3454945	PrimaryExpression	6		3454834	100					
ANR	3454946	PrimaryExpression	7		3454834	101					
ANR	3454947	PrimaryExpression	6		3454834	102					
ANR	3454948	PrimaryExpression	6		3454834	103					
ANR	3454949	PrimaryExpression	6		3454834	104					
ANR	3454950	PrimaryExpression	6		3454834	105					
ANR	3454951	PrimaryExpression	6		3454834	106					
ANR	3454952	PrimaryExpression	6		3454834	107					
ANR	3454953	PrimaryExpression	6		3454834	108					
ANR	3454954	PrimaryExpression	6		3454834	109					
ANR	3454955	PrimaryExpression	6		3454834	110					
ANR	3454956	PrimaryExpression	6		3454834	111					
ANR	3454957	PrimaryExpression	6		3454834	112					
ANR	3454958	PrimaryExpression	6		3454834	113					
ANR	3454959	PrimaryExpression	6		3454834	114					
ANR	3454960	PrimaryExpression	6		3454834	115					
ANR	3454961	PrimaryExpression	6		3454834	116					
ANR	3454962	PrimaryExpression	6		3454834	117					
ANR	3454963	PrimaryExpression	6		3454834	118					
ANR	3454964	PrimaryExpression	6		3454834	119					
ANR	3454965	PrimaryExpression	6		3454834	120					
ANR	3454966	PrimaryExpression	6		3454834	121					
ANR	3454967	PrimaryExpression	6		3454834	122					
ANR	3454968	PrimaryExpression	5		3454834	123					
ANR	3454969	PrimaryExpression	5		3454834	124					
ANR	3454970	PrimaryExpression	5		3454834	125					
ANR	3454971	PrimaryExpression	5		3454834	126					
ANR	3454972	PrimaryExpression	1		3454834	127					
ANR	3454973	IfStatement	if ( i < ( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) ) )		3454834	2					
ANR	3454974	Condition	i < ( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) )	3991:6:89489:89544	3454834	0	True				
ANR	3454975	RelationalExpression	i < ( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) )		3454834	0		<			
ANR	3454976	Identifier	i		3454834	0					
ANR	3454977	CastExpression	( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) )		3454834	1					
ANR	3454978	CastTarget	int		3454834	0					
ANR	3454979	MultiplicativeExpression	sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] )		3454834	1		/			
ANR	3454980	SizeofExpression	sizeof ( ByteValTable )		3454834	0					
ANR	3454981	Sizeof	sizeof		3454834	0					
ANR	3454982	SizeofOperand	ByteValTable		3454834	1					
ANR	3454983	SizeofExpression	sizeof ( ByteValTable [ 0 ] )		3454834	1					
ANR	3454984	Sizeof	sizeof		3454834	0					
ANR	3454985	ArrayIndexing	ByteValTable [ 0 ]		3454834	1					
ANR	3454986	Identifier	ByteValTable		3454834	0					
ANR	3454987	PrimaryExpression	0		3454834	1					
ANR	3454988	CompoundStatement		13:64:658:658	3454834	1					
ANR	3454989	IfStatement	if ( i == 0 && ONIGENC_MBC_MINLEN ( enc ) > 1 )		3454834	0					
ANR	3454990	Condition	i == 0 && ONIGENC_MBC_MINLEN ( enc ) > 1	3992:8:89557:89593	3454834	0	True				
ANR	3454991	AndExpression	i == 0 && ONIGENC_MBC_MINLEN ( enc ) > 1		3454834	0		&&			
ANR	3454992	EqualityExpression	i == 0		3454834	0		==			
ANR	3454993	Identifier	i		3454834	0					
ANR	3454994	PrimaryExpression	0		3454834	1					
ANR	3454995	RelationalExpression	ONIGENC_MBC_MINLEN ( enc ) > 1		3454834	1		>			
ANR	3454996	CallExpression	ONIGENC_MBC_MINLEN ( enc )		3454834	0					
ANR	3454997	Callee	ONIGENC_MBC_MINLEN		3454834	0					
ANR	3454998	Identifier	ONIGENC_MBC_MINLEN		3454834	0					
ANR	3454999	ArgumentList	enc		3454834	1					
ANR	3455000	Argument	enc		3454834	0					
ANR	3455001	Identifier	enc		3454834	0					
ANR	3455002	PrimaryExpression	1		3454834	1					
ANR	3455003	ReturnStatement	return 20 ;	3993:6:89602:89611	3454834	1	True				
ANR	3455004	PrimaryExpression	20		3454834	0					
ANR	3455005	ElseStatement	else		3454834	0					
ANR	3455006	ReturnStatement	return ( int ) ByteValTable [ i ] ;	3995:6:89628:89656	3454834	0	True				
ANR	3455007	CastExpression	( int ) ByteValTable [ i ]		3454834	0					
ANR	3455008	CastTarget	int		3454834	0					
ANR	3455009	ArrayIndexing	ByteValTable [ i ]		3454834	1					
ANR	3455010	Identifier	ByteValTable		3454834	0					
ANR	3455011	Identifier	i		3454834	1					
ANR	3455012	ElseStatement	else		3454834	0					
ANR	3455013	ReturnStatement	return 4 ;	3998:4:89673:89681	3454834	0	True				
ANR	3455014	PrimaryExpression	4		3454834	0					
ANR	3455015	ReturnType	static int		3454834	1					
ANR	3455016	Identifier	map_position_value		3454834	2					
ANR	3455017	ParameterList	"OnigEncoding enc , int i"		3454834	3					
ANR	3455018	Parameter	OnigEncoding enc	3978:19:88863:88878	3454834	0	True				
ANR	3455019	ParameterType	OnigEncoding		3454834	0					
ANR	3455020	Identifier	enc		3454834	1					
ANR	3455021	Parameter	int i	3978:37:88881:88885	3454834	1	True				
ANR	3455022	ParameterType	int		3454834	0					
ANR	3455023	Identifier	i		3454834	1					
ANR	3455024	CFGEntryNode	ENTRY		3454834		True				
ANR	3455025	CFGExitNode	EXIT		3454834		True				
ANR	3455026	Symbol	* ByteValTable		3454834						
ANR	3455027	Symbol	ByteValTable		3454834						
ANR	3455028	Symbol	* i		3454834						
ANR	3455029	Symbol	ONIGENC_MBC_MINLEN		3454834						
ANR	3455030	Symbol	i		3454834						
ANR	3455031	Symbol	enc		3454834						
ANR	3455032	Function	distance_value	4001:0:89708:90730							
ANR	3455033	FunctionDef	distance_value (MinMaxLen * mm)		3455032	0					
ANR	3455034	CompoundStatement		4003:0:89749:90730	3455032	0					
ANR	3455035	Statement	static	4005:2:89787:89792	3455032	0	True				
ANR	3455036	IdentifierDeclStatement	"const short int dist_vals [ ] = { 1000 , 500 , 333 , 250 , 200 , 167 , 143 , 125 , 111 , 100 , 91 , 83 , 77 , 71 , 67 , 63 , 59 , 56 , 53 , 50 , 48 , 45 , 43 , 42 , 40 , 38 , 37 , 36 , 34 , 33 , 32 , 31 , 30 , 29 , 29 , 28 , 27 , 26 , 26 , 25 , 24 , 24 , 23 , 23 , 22 , 22 , 21 , 21 , 20 , 20 , 20 , 19 , 19 , 19 , 18 , 18 , 18 , 17 , 17 , 17 , 16 , 16 , 16 , 16 , 15 , 15 , 15 , 15 , 14 , 14 , 14 , 14 , 14 , 14 , 13 , 13 , 13 , 13 , 13 , 13 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 } ;"	4005:9:89794:90477	3455032	1	True				
ANR	3455037	IdentifierDecl	"dist_vals [ ] = { 1000 , 500 , 333 , 250 , 200 , 167 , 143 , 125 , 111 , 100 , 91 , 83 , 77 , 71 , 67 , 63 , 59 , 56 , 53 , 50 , 48 , 45 , 43 , 42 , 40 , 38 , 37 , 36 , 34 , 33 , 32 , 31 , 30 , 29 , 29 , 28 , 27 , 26 , 26 , 25 , 24 , 24 , 23 , 23 , 22 , 22 , 21 , 21 , 20 , 20 , 20 , 19 , 19 , 19 , 18 , 18 , 18 , 17 , 17 , 17 , 16 , 16 , 16 , 16 , 15 , 15 , 15 , 15 , 14 , 14 , 14 , 14 , 14 , 14 , 13 , 13 , 13 , 13 , 13 , 13 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 }"		3455032	0					
ANR	3455038	IdentifierDeclType	const short int [ ]		3455032	0					
ANR	3455039	Identifier	dist_vals		3455032	1					
ANR	3455040	AssignmentExpression	"dist_vals [ ] = { 1000 , 500 , 333 , 250 , 200 , 167 , 143 , 125 , 111 , 100 , 91 , 83 , 77 , 71 , 67 , 63 , 59 , 56 , 53 , 50 , 48 , 45 , 43 , 42 , 40 , 38 , 37 , 36 , 34 , 33 , 32 , 31 , 30 , 29 , 29 , 28 , 27 , 26 , 26 , 25 , 24 , 24 , 23 , 23 , 22 , 22 , 21 , 21 , 20 , 20 , 20 , 19 , 19 , 19 , 18 , 18 , 18 , 17 , 17 , 17 , 16 , 16 , 16 , 16 , 15 , 15 , 15 , 15 , 14 , 14 , 14 , 14 , 14 , 14 , 13 , 13 , 13 , 13 , 13 , 13 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 }"		3455032	2		=			
ANR	3455041	Identifier	dist_vals		3455032	0					
ANR	3455042	InitializerList	1000		3455032	1					
ANR	3455043	PrimaryExpression	1000		3455032	0					
ANR	3455044	PrimaryExpression	500		3455032	1					
ANR	3455045	PrimaryExpression	333		3455032	2					
ANR	3455046	PrimaryExpression	250		3455032	3					
ANR	3455047	PrimaryExpression	200		3455032	4					
ANR	3455048	PrimaryExpression	167		3455032	5					
ANR	3455049	PrimaryExpression	143		3455032	6					
ANR	3455050	PrimaryExpression	125		3455032	7					
ANR	3455051	PrimaryExpression	111		3455032	8					
ANR	3455052	PrimaryExpression	100		3455032	9					
ANR	3455053	PrimaryExpression	91		3455032	10					
ANR	3455054	PrimaryExpression	83		3455032	11					
ANR	3455055	PrimaryExpression	77		3455032	12					
ANR	3455056	PrimaryExpression	71		3455032	13					
ANR	3455057	PrimaryExpression	67		3455032	14					
ANR	3455058	PrimaryExpression	63		3455032	15					
ANR	3455059	PrimaryExpression	59		3455032	16					
ANR	3455060	PrimaryExpression	56		3455032	17					
ANR	3455061	PrimaryExpression	53		3455032	18					
ANR	3455062	PrimaryExpression	50		3455032	19					
ANR	3455063	PrimaryExpression	48		3455032	20					
ANR	3455064	PrimaryExpression	45		3455032	21					
ANR	3455065	PrimaryExpression	43		3455032	22					
ANR	3455066	PrimaryExpression	42		3455032	23					
ANR	3455067	PrimaryExpression	40		3455032	24					
ANR	3455068	PrimaryExpression	38		3455032	25					
ANR	3455069	PrimaryExpression	37		3455032	26					
ANR	3455070	PrimaryExpression	36		3455032	27					
ANR	3455071	PrimaryExpression	34		3455032	28					
ANR	3455072	PrimaryExpression	33		3455032	29					
ANR	3455073	PrimaryExpression	32		3455032	30					
ANR	3455074	PrimaryExpression	31		3455032	31					
ANR	3455075	PrimaryExpression	30		3455032	32					
ANR	3455076	PrimaryExpression	29		3455032	33					
ANR	3455077	PrimaryExpression	29		3455032	34					
ANR	3455078	PrimaryExpression	28		3455032	35					
ANR	3455079	PrimaryExpression	27		3455032	36					
ANR	3455080	PrimaryExpression	26		3455032	37					
ANR	3455081	PrimaryExpression	26		3455032	38					
ANR	3455082	PrimaryExpression	25		3455032	39					
ANR	3455083	PrimaryExpression	24		3455032	40					
ANR	3455084	PrimaryExpression	24		3455032	41					
ANR	3455085	PrimaryExpression	23		3455032	42					
ANR	3455086	PrimaryExpression	23		3455032	43					
ANR	3455087	PrimaryExpression	22		3455032	44					
ANR	3455088	PrimaryExpression	22		3455032	45					
ANR	3455089	PrimaryExpression	21		3455032	46					
ANR	3455090	PrimaryExpression	21		3455032	47					
ANR	3455091	PrimaryExpression	20		3455032	48					
ANR	3455092	PrimaryExpression	20		3455032	49					
ANR	3455093	PrimaryExpression	20		3455032	50					
ANR	3455094	PrimaryExpression	19		3455032	51					
ANR	3455095	PrimaryExpression	19		3455032	52					
ANR	3455096	PrimaryExpression	19		3455032	53					
ANR	3455097	PrimaryExpression	18		3455032	54					
ANR	3455098	PrimaryExpression	18		3455032	55					
ANR	3455099	PrimaryExpression	18		3455032	56					
ANR	3455100	PrimaryExpression	17		3455032	57					
ANR	3455101	PrimaryExpression	17		3455032	58					
ANR	3455102	PrimaryExpression	17		3455032	59					
ANR	3455103	PrimaryExpression	16		3455032	60					
ANR	3455104	PrimaryExpression	16		3455032	61					
ANR	3455105	PrimaryExpression	16		3455032	62					
ANR	3455106	PrimaryExpression	16		3455032	63					
ANR	3455107	PrimaryExpression	15		3455032	64					
ANR	3455108	PrimaryExpression	15		3455032	65					
ANR	3455109	PrimaryExpression	15		3455032	66					
ANR	3455110	PrimaryExpression	15		3455032	67					
ANR	3455111	PrimaryExpression	14		3455032	68					
ANR	3455112	PrimaryExpression	14		3455032	69					
ANR	3455113	PrimaryExpression	14		3455032	70					
ANR	3455114	PrimaryExpression	14		3455032	71					
ANR	3455115	PrimaryExpression	14		3455032	72					
ANR	3455116	PrimaryExpression	14		3455032	73					
ANR	3455117	PrimaryExpression	13		3455032	74					
ANR	3455118	PrimaryExpression	13		3455032	75					
ANR	3455119	PrimaryExpression	13		3455032	76					
ANR	3455120	PrimaryExpression	13		3455032	77					
ANR	3455121	PrimaryExpression	13		3455032	78					
ANR	3455122	PrimaryExpression	13		3455032	79					
ANR	3455123	PrimaryExpression	12		3455032	80					
ANR	3455124	PrimaryExpression	12		3455032	81					
ANR	3455125	PrimaryExpression	12		3455032	82					
ANR	3455126	PrimaryExpression	12		3455032	83					
ANR	3455127	PrimaryExpression	12		3455032	84					
ANR	3455128	PrimaryExpression	12		3455032	85					
ANR	3455129	PrimaryExpression	11		3455032	86					
ANR	3455130	PrimaryExpression	11		3455032	87					
ANR	3455131	PrimaryExpression	11		3455032	88					
ANR	3455132	PrimaryExpression	11		3455032	89					
ANR	3455133	PrimaryExpression	11		3455032	90					
ANR	3455134	PrimaryExpression	11		3455032	91					
ANR	3455135	PrimaryExpression	11		3455032	92					
ANR	3455136	PrimaryExpression	11		3455032	93					
ANR	3455137	PrimaryExpression	11		3455032	94					
ANR	3455138	PrimaryExpression	10		3455032	95					
ANR	3455139	PrimaryExpression	10		3455032	96					
ANR	3455140	PrimaryExpression	10		3455032	97					
ANR	3455141	PrimaryExpression	10		3455032	98					
ANR	3455142	PrimaryExpression	10		3455032	99					
ANR	3455143	IdentifierDeclStatement	int d ;	4018:2:90482:90487	3455032	2	True				
ANR	3455144	IdentifierDecl	d		3455032	0					
ANR	3455145	IdentifierDeclType	int		3455032	0					
ANR	3455146	Identifier	d		3455032	1					
ANR	3455147	IfStatement	if ( mm -> max == ONIG_INFINITE_DISTANCE )		3455032	3					
ANR	3455148	Condition	mm -> max == ONIG_INFINITE_DISTANCE	4020:6:90496:90528	3455032	0	True				
ANR	3455149	EqualityExpression	mm -> max == ONIG_INFINITE_DISTANCE		3455032	0		==			
ANR	3455150	PtrMemberAccess	mm -> max		3455032	0					
ANR	3455151	Identifier	mm		3455032	0					
ANR	3455152	Identifier	max		3455032	1					
ANR	3455153	Identifier	ONIG_INFINITE_DISTANCE		3455032	1					
ANR	3455154	ReturnStatement	return 0 ;	4020:41:90531:90539	3455032	1	True				
ANR	3455155	PrimaryExpression	0		3455032	0					
ANR	3455156	ExpressionStatement	d = mm -> max - mm -> min	4022:2:90544:90565	3455032	4	True				
ANR	3455157	AssignmentExpression	d = mm -> max - mm -> min		3455032	0		=			
ANR	3455158	Identifier	d		3455032	0					
ANR	3455159	AdditiveExpression	mm -> max - mm -> min		3455032	1		-			
ANR	3455160	PtrMemberAccess	mm -> max		3455032	0					
ANR	3455161	Identifier	mm		3455032	0					
ANR	3455162	Identifier	max		3455032	1					
ANR	3455163	PtrMemberAccess	mm -> min		3455032	1					
ANR	3455164	Identifier	mm		3455032	0					
ANR	3455165	Identifier	min		3455032	1					
ANR	3455166	IfStatement	if ( d < ( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) ) )		3455032	5					
ANR	3455167	Condition	d < ( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) )	4023:6:90573:90622	3455032	0	True				
ANR	3455168	RelationalExpression	d < ( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) )		3455032	0		<			
ANR	3455169	Identifier	d		3455032	0					
ANR	3455170	CastExpression	( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) )		3455032	1					
ANR	3455171	CastTarget	int		3455032	0					
ANR	3455172	MultiplicativeExpression	sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] )		3455032	1		/			
ANR	3455173	SizeofExpression	sizeof ( dist_vals )		3455032	0					
ANR	3455174	Sizeof	sizeof		3455032	0					
ANR	3455175	SizeofOperand	dist_vals		3455032	1					
ANR	3455176	SizeofExpression	sizeof ( dist_vals [ 0 ] )		3455032	1					
ANR	3455177	Sizeof	sizeof		3455032	0					
ANR	3455178	ArrayIndexing	dist_vals [ 0 ]		3455032	1					
ANR	3455179	Identifier	dist_vals		3455032	0					
ANR	3455180	PrimaryExpression	0		3455032	1					
ANR	3455181	ReturnStatement	return ( int ) dist_vals [ d ] ;	4025:4:90682:90707	3455032	1	True				
ANR	3455182	CastExpression	( int ) dist_vals [ d ]		3455032	0					
ANR	3455183	CastTarget	int		3455032	0					
ANR	3455184	ArrayIndexing	dist_vals [ d ]		3455032	1					
ANR	3455185	Identifier	dist_vals		3455032	0					
ANR	3455186	Identifier	d		3455032	1					
ANR	3455187	ElseStatement	else		3455032	0					
ANR	3455188	ReturnStatement	return 1 ;	4027:4:90720:90728	3455032	0	True				
ANR	3455189	PrimaryExpression	1		3455032	0					
ANR	3455190	ReturnType	static int		3455032	1					
ANR	3455191	Identifier	distance_value		3455032	2					
ANR	3455192	ParameterList	MinMaxLen * mm		3455032	3					
ANR	3455193	Parameter	MinMaxLen * mm	4002:15:89734:89746	3455032	0	True				
ANR	3455194	ParameterType	MinMaxLen *		3455032	0					
ANR	3455195	Identifier	mm		3455032	1					
ANR	3455196	CFGEntryNode	ENTRY		3455032		True				
ANR	3455197	CFGExitNode	EXIT		3455032		True				
ANR	3455198	Symbol	mm		3455032						
ANR	3455199	Symbol	ONIG_INFINITE_DISTANCE		3455032						
ANR	3455200	Symbol	d		3455032						
ANR	3455201	Symbol	* mm		3455032						
ANR	3455202	Symbol	mm -> max		3455032						
ANR	3455203	Symbol	dist_vals		3455032						
ANR	3455204	Symbol	mm -> min		3455032						
ANR	3455205	Symbol	* d		3455032						
ANR	3455206	Symbol	* dist_vals		3455032						
ANR	3455207	Function	comp_distance_value	4030:0:90733:91059							
ANR	3455208	FunctionDef	"comp_distance_value (MinMaxLen * d1 , MinMaxLen * d2 , int v1 , int v2)"		3455207	0					
ANR	3455209	CompoundStatement		4032:0:90810:91059	3455207	0					
ANR	3455210	IfStatement	if ( v2 <= 0 )		3455207	0					
ANR	3455211	Condition	v2 <= 0	4033:6:90818:90824	3455207	0	True				
ANR	3455212	RelationalExpression	v2 <= 0		3455207	0		<=			
ANR	3455213	Identifier	v2		3455207	0					
ANR	3455214	PrimaryExpression	0		3455207	1					
ANR	3455215	ReturnStatement	return - 1 ;	4033:15:90827:90836	3455207	1	True				
ANR	3455216	UnaryOperationExpression	- 1		3455207	0					
ANR	3455217	UnaryOperator	-		3455207	0					
ANR	3455218	PrimaryExpression	1		3455207	1					
ANR	3455219	IfStatement	if ( v1 <= 0 )		3455207	1					
ANR	3455220	Condition	v1 <= 0	4034:6:90844:90850	3455207	0	True				
ANR	3455221	RelationalExpression	v1 <= 0		3455207	0		<=			
ANR	3455222	Identifier	v1		3455207	0					
ANR	3455223	PrimaryExpression	0		3455207	1					
ANR	3455224	ReturnStatement	return 1 ;	4034:15:90853:90862	3455207	1	True				
ANR	3455225	PrimaryExpression	1		3455207	0					
ANR	3455226	ExpressionStatement	v1 *= distance_value ( d1 )	4036:2:90867:90891	3455207	2	True				
ANR	3455227	AssignmentExpression	v1 *= distance_value ( d1 )		3455207	0		*=			
ANR	3455228	Identifier	v1		3455207	0					
ANR	3455229	CallExpression	distance_value ( d1 )		3455207	1					
ANR	3455230	Callee	distance_value		3455207	0					
ANR	3455231	Identifier	distance_value		3455207	0					
ANR	3455232	ArgumentList	d1		3455207	1					
ANR	3455233	Argument	d1		3455207	0					
ANR	3455234	Identifier	d1		3455207	0					
ANR	3455235	ExpressionStatement	v2 *= distance_value ( d2 )	4037:2:90895:90919	3455207	3	True				
ANR	3455236	AssignmentExpression	v2 *= distance_value ( d2 )		3455207	0		*=			
ANR	3455237	Identifier	v2		3455207	0					
ANR	3455238	CallExpression	distance_value ( d2 )		3455207	1					
ANR	3455239	Callee	distance_value		3455207	0					
ANR	3455240	Identifier	distance_value		3455207	0					
ANR	3455241	ArgumentList	d2		3455207	1					
ANR	3455242	Argument	d2		3455207	0					
ANR	3455243	Identifier	d2		3455207	0					
ANR	3455244	IfStatement	if ( v2 > v1 )		3455207	4					
ANR	3455245	Condition	v2 > v1	4039:6:90928:90934	3455207	0	True				
ANR	3455246	RelationalExpression	v2 > v1		3455207	0		>			
ANR	3455247	Identifier	v2		3455207	0					
ANR	3455248	Identifier	v1		3455207	1					
ANR	3455249	ReturnStatement	return 1 ;	4039:15:90937:90946	3455207	1	True				
ANR	3455250	PrimaryExpression	1		3455207	0					
ANR	3455251	IfStatement	if ( v2 < v1 )		3455207	5					
ANR	3455252	Condition	v2 < v1	4040:6:90954:90960	3455207	0	True				
ANR	3455253	RelationalExpression	v2 < v1		3455207	0		<			
ANR	3455254	Identifier	v2		3455207	0					
ANR	3455255	Identifier	v1		3455207	1					
ANR	3455256	ReturnStatement	return - 1 ;	4040:15:90963:90972	3455207	1	True				
ANR	3455257	UnaryOperationExpression	- 1		3455207	0					
ANR	3455258	UnaryOperator	-		3455207	0					
ANR	3455259	PrimaryExpression	1		3455207	1					
ANR	3455260	IfStatement	if ( d2 -> min < d1 -> min )		3455207	6					
ANR	3455261	Condition	d2 -> min < d1 -> min	4042:6:90981:90997	3455207	0	True				
ANR	3455262	RelationalExpression	d2 -> min < d1 -> min		3455207	0		<			
ANR	3455263	PtrMemberAccess	d2 -> min		3455207	0					
ANR	3455264	Identifier	d2		3455207	0					
ANR	3455265	Identifier	min		3455207	1					
ANR	3455266	PtrMemberAccess	d1 -> min		3455207	1					
ANR	3455267	Identifier	d1		3455207	0					
ANR	3455268	Identifier	min		3455207	1					
ANR	3455269	ReturnStatement	return 1 ;	4042:25:91000:91009	3455207	1	True				
ANR	3455270	PrimaryExpression	1		3455207	0					
ANR	3455271	IfStatement	if ( d2 -> min > d1 -> min )		3455207	7					
ANR	3455272	Condition	d2 -> min > d1 -> min	4043:6:91017:91033	3455207	0	True				
ANR	3455273	RelationalExpression	d2 -> min > d1 -> min		3455207	0		>			
ANR	3455274	PtrMemberAccess	d2 -> min		3455207	0					
ANR	3455275	Identifier	d2		3455207	0					
ANR	3455276	Identifier	min		3455207	1					
ANR	3455277	PtrMemberAccess	d1 -> min		3455207	1					
ANR	3455278	Identifier	d1		3455207	0					
ANR	3455279	Identifier	min		3455207	1					
ANR	3455280	ReturnStatement	return - 1 ;	4043:25:91036:91045	3455207	1	True				
ANR	3455281	UnaryOperationExpression	- 1		3455207	0					
ANR	3455282	UnaryOperator	-		3455207	0					
ANR	3455283	PrimaryExpression	1		3455207	1					
ANR	3455284	ReturnStatement	return 0 ;	4044:2:91049:91057	3455207	8	True				
ANR	3455285	PrimaryExpression	0		3455207	0					
ANR	3455286	ReturnType	static int		3455207	1					
ANR	3455287	Identifier	comp_distance_value		3455207	2					
ANR	3455288	ParameterList	"MinMaxLen * d1 , MinMaxLen * d2 , int v1 , int v2"		3455207	3					
ANR	3455289	Parameter	MinMaxLen * d1	4031:20:90764:90776	3455207	0	True				
ANR	3455290	ParameterType	MinMaxLen *		3455207	0					
ANR	3455291	Identifier	d1		3455207	1					
ANR	3455292	Parameter	MinMaxLen * d2	4031:35:90779:90791	3455207	1	True				
ANR	3455293	ParameterType	MinMaxLen *		3455207	0					
ANR	3455294	Identifier	d2		3455207	1					
ANR	3455295	Parameter	int v1	4031:50:90794:90799	3455207	2	True				
ANR	3455296	ParameterType	int		3455207	0					
ANR	3455297	Identifier	v1		3455207	1					
ANR	3455298	Parameter	int v2	4031:58:90802:90807	3455207	3	True				
ANR	3455299	ParameterType	int		3455207	0					
ANR	3455300	Identifier	v2		3455207	1					
ANR	3455301	CFGEntryNode	ENTRY		3455207		True				
ANR	3455302	CFGExitNode	EXIT		3455207		True				
ANR	3455303	Symbol	* d1		3455207						
ANR	3455304	Symbol	d2 -> min		3455207						
ANR	3455305	Symbol	d1 -> min		3455207						
ANR	3455306	Symbol	* d2		3455207						
ANR	3455307	Symbol	v1		3455207						
ANR	3455308	Symbol	distance_value		3455207						
ANR	3455309	Symbol	v2		3455207						
ANR	3455310	Symbol	d1		3455207						
ANR	3455311	Symbol	d2		3455207						
ANR	3455312	Function	is_equal_mml	4047:0:91062:91173							
ANR	3455313	FunctionDef	"is_equal_mml (MinMaxLen * a , MinMaxLen * b)"		3455312	0					
ANR	3455314	CompoundStatement		4049:0:91114:91173	3455312	0					
ANR	3455315	ReturnStatement	return ( a -> min == b -> min && a -> max == b -> max ) ? 1 : 0 ;	4050:2:91118:91171	3455312	0	True				
ANR	3455316	ConditionalExpression	( a -> min == b -> min && a -> max == b -> max ) ? 1 : 0		3455312	0					
ANR	3455317	Condition	a -> min == b -> min && a -> max == b -> max		3455312	0					
ANR	3455318	AndExpression	a -> min == b -> min && a -> max == b -> max		3455312	0		&&			
ANR	3455319	EqualityExpression	a -> min == b -> min		3455312	0		==			
ANR	3455320	PtrMemberAccess	a -> min		3455312	0					
ANR	3455321	Identifier	a		3455312	0					
ANR	3455322	Identifier	min		3455312	1					
ANR	3455323	PtrMemberAccess	b -> min		3455312	1					
ANR	3455324	Identifier	b		3455312	0					
ANR	3455325	Identifier	min		3455312	1					
ANR	3455326	EqualityExpression	a -> max == b -> max		3455312	1		==			
ANR	3455327	PtrMemberAccess	a -> max		3455312	0					
ANR	3455328	Identifier	a		3455312	0					
ANR	3455329	Identifier	max		3455312	1					
ANR	3455330	PtrMemberAccess	b -> max		3455312	1					
ANR	3455331	Identifier	b		3455312	0					
ANR	3455332	Identifier	max		3455312	1					
ANR	3455333	PrimaryExpression	1		3455312	1					
ANR	3455334	PrimaryExpression	0		3455312	2					
ANR	3455335	ReturnType	static int		3455312	1					
ANR	3455336	Identifier	is_equal_mml		3455312	2					
ANR	3455337	ParameterList	"MinMaxLen * a , MinMaxLen * b"		3455312	3					
ANR	3455338	Parameter	MinMaxLen * a	4048:13:91086:91097	3455312	0	True				
ANR	3455339	ParameterType	MinMaxLen *		3455312	0					
ANR	3455340	Identifier	a		3455312	1					
ANR	3455341	Parameter	MinMaxLen * b	4048:27:91100:91111	3455312	1	True				
ANR	3455342	ParameterType	MinMaxLen *		3455312	0					
ANR	3455343	Identifier	b		3455312	1					
ANR	3455344	CFGEntryNode	ENTRY		3455312		True				
ANR	3455345	CFGExitNode	EXIT		3455312		True				
ANR	3455346	Symbol	a		3455312						
ANR	3455347	Symbol	b		3455312						
ANR	3455348	Symbol	a -> max		3455312						
ANR	3455349	Symbol	* a		3455312						
ANR	3455350	Symbol	* b		3455312						
ANR	3455351	Symbol	b -> max		3455312						
ANR	3455352	Symbol	b -> min		3455312						
ANR	3455353	Symbol	a -> min		3455312						
ANR	3455354	Function	set_mml	4054:0:91177:91287							
ANR	3455355	FunctionDef	"set_mml (MinMaxLen * mml , OnigDistance min , OnigDistance max)"		3455354	0					
ANR	3455356	CompoundStatement		4056:0:91249:91287	3455354	0					
ANR	3455357	ExpressionStatement	mml -> min = min	4057:2:91253:91267	3455354	0	True				
ANR	3455358	AssignmentExpression	mml -> min = min		3455354	0		=			
ANR	3455359	PtrMemberAccess	mml -> min		3455354	0					
ANR	3455360	Identifier	mml		3455354	0					
ANR	3455361	Identifier	min		3455354	1					
ANR	3455362	Identifier	min		3455354	1					
ANR	3455363	ExpressionStatement	mml -> max = max	4058:2:91271:91285	3455354	1	True				
ANR	3455364	AssignmentExpression	mml -> max = max		3455354	0		=			
ANR	3455365	PtrMemberAccess	mml -> max		3455354	0					
ANR	3455366	Identifier	mml		3455354	0					
ANR	3455367	Identifier	max		3455354	1					
ANR	3455368	Identifier	max		3455354	1					
ANR	3455369	ReturnType	static void		3455354	1					
ANR	3455370	Identifier	set_mml		3455354	2					
ANR	3455371	ParameterList	"MinMaxLen * mml , OnigDistance min , OnigDistance max"		3455354	3					
ANR	3455372	Parameter	MinMaxLen * mml	4055:8:91197:91210	3455354	0	True				
ANR	3455373	ParameterType	MinMaxLen *		3455354	0					
ANR	3455374	Identifier	mml		3455354	1					
ANR	3455375	Parameter	OnigDistance min	4055:24:91213:91228	3455354	1	True				
ANR	3455376	ParameterType	OnigDistance		3455354	0					
ANR	3455377	Identifier	min		3455354	1					
ANR	3455378	Parameter	OnigDistance max	4055:42:91231:91246	3455354	2	True				
ANR	3455379	ParameterType	OnigDistance		3455354	0					
ANR	3455380	Identifier	max		3455354	1					
ANR	3455381	CFGEntryNode	ENTRY		3455354		True				
ANR	3455382	CFGExitNode	EXIT		3455354		True				
ANR	3455383	Symbol	min		3455354						
ANR	3455384	Symbol	max		3455354						
ANR	3455385	Symbol	mml -> min		3455354						
ANR	3455386	Symbol	* mml		3455354						
ANR	3455387	Symbol	mml -> max		3455354						
ANR	3455388	Symbol	mml		3455354						
ANR	3455389	Function	clear_mml	4061:0:91290:91357							
ANR	3455390	FunctionDef	clear_mml (MinMaxLen * mml)		3455389	0					
ANR	3455391	CompoundStatement		4063:0:91328:91357	3455389	0					
ANR	3455392	ExpressionStatement	mml -> min = mml -> max = 0	4064:2:91332:91355	3455389	0	True				
ANR	3455393	AssignmentExpression	mml -> min = mml -> max = 0		3455389	0		=			
ANR	3455394	PtrMemberAccess	mml -> min		3455389	0					
ANR	3455395	Identifier	mml		3455389	0					
ANR	3455396	Identifier	min		3455389	1					
ANR	3455397	AssignmentExpression	mml -> max = 0		3455389	1		=			
ANR	3455398	PtrMemberAccess	mml -> max		3455389	0					
ANR	3455399	Identifier	mml		3455389	0					
ANR	3455400	Identifier	max		3455389	1					
ANR	3455401	PrimaryExpression	0		3455389	1					
ANR	3455402	ReturnType	static void		3455389	1					
ANR	3455403	Identifier	clear_mml		3455389	2					
ANR	3455404	ParameterList	MinMaxLen * mml		3455389	3					
ANR	3455405	Parameter	MinMaxLen * mml	4062:10:91312:91325	3455389	0	True				
ANR	3455406	ParameterType	MinMaxLen *		3455389	0					
ANR	3455407	Identifier	mml		3455389	1					
ANR	3455408	CFGEntryNode	ENTRY		3455389		True				
ANR	3455409	CFGExitNode	EXIT		3455389		True				
ANR	3455410	Symbol	mml -> min		3455389						
ANR	3455411	Symbol	* mml		3455389						
ANR	3455412	Symbol	mml -> max		3455389						
ANR	3455413	Symbol	mml		3455389						
ANR	3455414	Function	copy_mml	4067:0:91360:91461							
ANR	3455415	FunctionDef	"copy_mml (MinMaxLen * to , MinMaxLen * from)"		3455414	0					
ANR	3455416	CompoundStatement		4069:0:91413:91461	3455414	0					
ANR	3455417	ExpressionStatement	to -> min = from -> min	4070:2:91417:91436	3455414	0	True				
ANR	3455418	AssignmentExpression	to -> min = from -> min		3455414	0		=			
ANR	3455419	PtrMemberAccess	to -> min		3455414	0					
ANR	3455420	Identifier	to		3455414	0					
ANR	3455421	Identifier	min		3455414	1					
ANR	3455422	PtrMemberAccess	from -> min		3455414	1					
ANR	3455423	Identifier	from		3455414	0					
ANR	3455424	Identifier	min		3455414	1					
ANR	3455425	ExpressionStatement	to -> max = from -> max	4071:2:91440:91459	3455414	1	True				
ANR	3455426	AssignmentExpression	to -> max = from -> max		3455414	0		=			
ANR	3455427	PtrMemberAccess	to -> max		3455414	0					
ANR	3455428	Identifier	to		3455414	0					
ANR	3455429	Identifier	max		3455414	1					
ANR	3455430	PtrMemberAccess	from -> max		3455414	1					
ANR	3455431	Identifier	from		3455414	0					
ANR	3455432	Identifier	max		3455414	1					
ANR	3455433	ReturnType	static void		3455414	1					
ANR	3455434	Identifier	copy_mml		3455414	2					
ANR	3455435	ParameterList	"MinMaxLen * to , MinMaxLen * from"		3455414	3					
ANR	3455436	Parameter	MinMaxLen * to	4068:9:91381:91393	3455414	0	True				
ANR	3455437	ParameterType	MinMaxLen *		3455414	0					
ANR	3455438	Identifier	to		3455414	1					
ANR	3455439	Parameter	MinMaxLen * from	4068:24:91396:91410	3455414	1	True				
ANR	3455440	ParameterType	MinMaxLen *		3455414	0					
ANR	3455441	Identifier	from		3455414	1					
ANR	3455442	CFGEntryNode	ENTRY		3455414		True				
ANR	3455443	CFGExitNode	EXIT		3455414		True				
ANR	3455444	Symbol	from -> max		3455414						
ANR	3455445	Symbol	* to		3455414						
ANR	3455446	Symbol	from -> min		3455414						
ANR	3455447	Symbol	to -> min		3455414						
ANR	3455448	Symbol	from		3455414						
ANR	3455449	Symbol	to -> max		3455414						
ANR	3455450	Symbol	to		3455414						
ANR	3455451	Symbol	* from		3455414						
ANR	3455452	Function	add_mml	4074:0:91464:91610							
ANR	3455453	FunctionDef	"add_mml (MinMaxLen * to , MinMaxLen * from)"		3455452	0					
ANR	3455454	CompoundStatement		4076:0:91516:91610	3455452	0					
ANR	3455455	ExpressionStatement	"to -> min = distance_add ( to -> min , from -> min )"	4077:2:91520:91562	3455452	0	True				
ANR	3455456	AssignmentExpression	"to -> min = distance_add ( to -> min , from -> min )"		3455452	0		=			
ANR	3455457	PtrMemberAccess	to -> min		3455452	0					
ANR	3455458	Identifier	to		3455452	0					
ANR	3455459	Identifier	min		3455452	1					
ANR	3455460	CallExpression	"distance_add ( to -> min , from -> min )"		3455452	1					
ANR	3455461	Callee	distance_add		3455452	0					
ANR	3455462	Identifier	distance_add		3455452	0					
ANR	3455463	ArgumentList	to -> min		3455452	1					
ANR	3455464	Argument	to -> min		3455452	0					
ANR	3455465	PtrMemberAccess	to -> min		3455452	0					
ANR	3455466	Identifier	to		3455452	0					
ANR	3455467	Identifier	min		3455452	1					
ANR	3455468	Argument	from -> min		3455452	1					
ANR	3455469	PtrMemberAccess	from -> min		3455452	0					
ANR	3455470	Identifier	from		3455452	0					
ANR	3455471	Identifier	min		3455452	1					
ANR	3455472	ExpressionStatement	"to -> max = distance_add ( to -> max , from -> max )"	4078:2:91566:91608	3455452	1	True				
ANR	3455473	AssignmentExpression	"to -> max = distance_add ( to -> max , from -> max )"		3455452	0		=			
ANR	3455474	PtrMemberAccess	to -> max		3455452	0					
ANR	3455475	Identifier	to		3455452	0					
ANR	3455476	Identifier	max		3455452	1					
ANR	3455477	CallExpression	"distance_add ( to -> max , from -> max )"		3455452	1					
ANR	3455478	Callee	distance_add		3455452	0					
ANR	3455479	Identifier	distance_add		3455452	0					
ANR	3455480	ArgumentList	to -> max		3455452	1					
ANR	3455481	Argument	to -> max		3455452	0					
ANR	3455482	PtrMemberAccess	to -> max		3455452	0					
ANR	3455483	Identifier	to		3455452	0					
ANR	3455484	Identifier	max		3455452	1					
ANR	3455485	Argument	from -> max		3455452	1					
ANR	3455486	PtrMemberAccess	from -> max		3455452	0					
ANR	3455487	Identifier	from		3455452	0					
ANR	3455488	Identifier	max		3455452	1					
ANR	3455489	ReturnType	static void		3455452	1					
ANR	3455490	Identifier	add_mml		3455452	2					
ANR	3455491	ParameterList	"MinMaxLen * to , MinMaxLen * from"		3455452	3					
ANR	3455492	Parameter	MinMaxLen * to	4075:8:91484:91496	3455452	0	True				
ANR	3455493	ParameterType	MinMaxLen *		3455452	0					
ANR	3455494	Identifier	to		3455452	1					
ANR	3455495	Parameter	MinMaxLen * from	4075:23:91499:91513	3455452	1	True				
ANR	3455496	ParameterType	MinMaxLen *		3455452	0					
ANR	3455497	Identifier	from		3455452	1					
ANR	3455498	CFGEntryNode	ENTRY		3455452		True				
ANR	3455499	CFGExitNode	EXIT		3455452		True				
ANR	3455500	Symbol	from -> max		3455452						
ANR	3455501	Symbol	* to		3455452						
ANR	3455502	Symbol	from -> min		3455452						
ANR	3455503	Symbol	to -> min		3455452						
ANR	3455504	Symbol	from		3455452						
ANR	3455505	Symbol	distance_add		3455452						
ANR	3455506	Symbol	to -> max		3455452						
ANR	3455507	Symbol	to		3455452						
ANR	3455508	Symbol	* from		3455452						
ANR	3455509	Function	add_len_mml	4082:0:91619:91758							
ANR	3455510	FunctionDef	"add_len_mml (MinMaxLen * to , OnigDistance len)"		3455509	0					
ANR	3455511	CompoundStatement		4084:0:91676:91758	3455509	0					
ANR	3455512	ExpressionStatement	"to -> min = distance_add ( to -> min , len )"	4085:2:91680:91716	3455509	0	True				
ANR	3455513	AssignmentExpression	"to -> min = distance_add ( to -> min , len )"		3455509	0		=			
ANR	3455514	PtrMemberAccess	to -> min		3455509	0					
ANR	3455515	Identifier	to		3455509	0					
ANR	3455516	Identifier	min		3455509	1					
ANR	3455517	CallExpression	"distance_add ( to -> min , len )"		3455509	1					
ANR	3455518	Callee	distance_add		3455509	0					
ANR	3455519	Identifier	distance_add		3455509	0					
ANR	3455520	ArgumentList	to -> min		3455509	1					
ANR	3455521	Argument	to -> min		3455509	0					
ANR	3455522	PtrMemberAccess	to -> min		3455509	0					
ANR	3455523	Identifier	to		3455509	0					
ANR	3455524	Identifier	min		3455509	1					
ANR	3455525	Argument	len		3455509	1					
ANR	3455526	Identifier	len		3455509	0					
ANR	3455527	ExpressionStatement	"to -> max = distance_add ( to -> max , len )"	4086:2:91720:91756	3455509	1	True				
ANR	3455528	AssignmentExpression	"to -> max = distance_add ( to -> max , len )"		3455509	0		=			
ANR	3455529	PtrMemberAccess	to -> max		3455509	0					
ANR	3455530	Identifier	to		3455509	0					
ANR	3455531	Identifier	max		3455509	1					
ANR	3455532	CallExpression	"distance_add ( to -> max , len )"		3455509	1					
ANR	3455533	Callee	distance_add		3455509	0					
ANR	3455534	Identifier	distance_add		3455509	0					
ANR	3455535	ArgumentList	to -> max		3455509	1					
ANR	3455536	Argument	to -> max		3455509	0					
ANR	3455537	PtrMemberAccess	to -> max		3455509	0					
ANR	3455538	Identifier	to		3455509	0					
ANR	3455539	Identifier	max		3455509	1					
ANR	3455540	Argument	len		3455509	1					
ANR	3455541	Identifier	len		3455509	0					
ANR	3455542	ReturnType	static void		3455509	1					
ANR	3455543	Identifier	add_len_mml		3455509	2					
ANR	3455544	ParameterList	"MinMaxLen * to , OnigDistance len"		3455509	3					
ANR	3455545	Parameter	MinMaxLen * to	4083:12:91643:91655	3455509	0	True				
ANR	3455546	ParameterType	MinMaxLen *		3455509	0					
ANR	3455547	Identifier	to		3455509	1					
ANR	3455548	Parameter	OnigDistance len	4083:27:91658:91673	3455509	1	True				
ANR	3455549	ParameterType	OnigDistance		3455509	0					
ANR	3455550	Identifier	len		3455509	1					
ANR	3455551	CFGEntryNode	ENTRY		3455509		True				
ANR	3455552	CFGExitNode	EXIT		3455509		True				
ANR	3455553	Symbol	* to		3455509						
ANR	3455554	Symbol	len		3455509						
ANR	3455555	Symbol	to -> min		3455509						
ANR	3455556	Symbol	distance_add		3455509						
ANR	3455557	Symbol	to -> max		3455509						
ANR	3455558	Symbol	to		3455509						
ANR	3455559	Function	alt_merge_mml	4090:0:91768:91924							
ANR	3455560	FunctionDef	"alt_merge_mml (MinMaxLen * to , MinMaxLen * from)"		3455559	0					
ANR	3455561	CompoundStatement		4092:0:91826:91924	3455559	0					
ANR	3455562	IfStatement	if ( to -> min > from -> min )		3455559	0					
ANR	3455563	Condition	to -> min > from -> min	4093:6:91834:91852	3455559	0	True				
ANR	3455564	RelationalExpression	to -> min > from -> min		3455559	0		>			
ANR	3455565	PtrMemberAccess	to -> min		3455559	0					
ANR	3455566	Identifier	to		3455559	0					
ANR	3455567	Identifier	min		3455559	1					
ANR	3455568	PtrMemberAccess	from -> min		3455559	1					
ANR	3455569	Identifier	from		3455559	0					
ANR	3455570	Identifier	min		3455559	1					
ANR	3455571	ExpressionStatement	to -> min = from -> min	4093:27:91855:91874	3455559	1	True				
ANR	3455572	AssignmentExpression	to -> min = from -> min		3455559	0		=			
ANR	3455573	PtrMemberAccess	to -> min		3455559	0					
ANR	3455574	Identifier	to		3455559	0					
ANR	3455575	Identifier	min		3455559	1					
ANR	3455576	PtrMemberAccess	from -> min		3455559	1					
ANR	3455577	Identifier	from		3455559	0					
ANR	3455578	Identifier	min		3455559	1					
ANR	3455579	IfStatement	if ( to -> max < from -> max )		3455559	1					
ANR	3455580	Condition	to -> max < from -> max	4094:6:91882:91900	3455559	0	True				
ANR	3455581	RelationalExpression	to -> max < from -> max		3455559	0		<			
ANR	3455582	PtrMemberAccess	to -> max		3455559	0					
ANR	3455583	Identifier	to		3455559	0					
ANR	3455584	Identifier	max		3455559	1					
ANR	3455585	PtrMemberAccess	from -> max		3455559	1					
ANR	3455586	Identifier	from		3455559	0					
ANR	3455587	Identifier	max		3455559	1					
ANR	3455588	ExpressionStatement	to -> max = from -> max	4094:27:91903:91922	3455559	1	True				
ANR	3455589	AssignmentExpression	to -> max = from -> max		3455559	0		=			
ANR	3455590	PtrMemberAccess	to -> max		3455559	0					
ANR	3455591	Identifier	to		3455559	0					
ANR	3455592	Identifier	max		3455559	1					
ANR	3455593	PtrMemberAccess	from -> max		3455559	1					
ANR	3455594	Identifier	from		3455559	0					
ANR	3455595	Identifier	max		3455559	1					
ANR	3455596	ReturnType	static void		3455559	1					
ANR	3455597	Identifier	alt_merge_mml		3455559	2					
ANR	3455598	ParameterList	"MinMaxLen * to , MinMaxLen * from"		3455559	3					
ANR	3455599	Parameter	MinMaxLen * to	4091:14:91794:91806	3455559	0	True				
ANR	3455600	ParameterType	MinMaxLen *		3455559	0					
ANR	3455601	Identifier	to		3455559	1					
ANR	3455602	Parameter	MinMaxLen * from	4091:29:91809:91823	3455559	1	True				
ANR	3455603	ParameterType	MinMaxLen *		3455559	0					
ANR	3455604	Identifier	from		3455559	1					
ANR	3455605	CFGEntryNode	ENTRY		3455559		True				
ANR	3455606	CFGExitNode	EXIT		3455559		True				
ANR	3455607	Symbol	from -> max		3455559						
ANR	3455608	Symbol	* to		3455559						
ANR	3455609	Symbol	from -> min		3455559						
ANR	3455610	Symbol	to -> min		3455559						
ANR	3455611	Symbol	from		3455559						
ANR	3455612	Symbol	to -> max		3455559						
ANR	3455613	Symbol	to		3455559						
ANR	3455614	Symbol	* from		3455559						
ANR	3455615	Function	copy_opt_env	4097:0:91927:91995							
ANR	3455616	FunctionDef	"copy_opt_env (OptEnv * to , OptEnv * from)"		3455615	0					
ANR	3455617	CompoundStatement		4099:0:91978:91995	3455615	0					
ANR	3455618	ExpressionStatement	* to = * from	4100:2:91982:91993	3455615	0	True				
ANR	3455619	AssignmentExpression	* to = * from		3455615	0		=			
ANR	3455620	UnaryOperationExpression	* to		3455615	0					
ANR	3455621	UnaryOperator	*		3455615	0					
ANR	3455622	Identifier	to		3455615	1					
ANR	3455623	UnaryOperationExpression	* from		3455615	1					
ANR	3455624	UnaryOperator	*		3455615	0					
ANR	3455625	Identifier	from		3455615	1					
ANR	3455626	ReturnType	static void		3455615	1					
ANR	3455627	Identifier	copy_opt_env		3455615	2					
ANR	3455628	ParameterList	"OptEnv * to , OptEnv * from"		3455615	3					
ANR	3455629	Parameter	OptEnv * to	4098:13:91952:91961	3455615	0	True				
ANR	3455630	ParameterType	OptEnv *		3455615	0					
ANR	3455631	Identifier	to		3455615	1					
ANR	3455632	Parameter	OptEnv * from	4098:25:91964:91975	3455615	1	True				
ANR	3455633	ParameterType	OptEnv *		3455615	0					
ANR	3455634	Identifier	from		3455615	1					
ANR	3455635	CFGEntryNode	ENTRY		3455615		True				
ANR	3455636	CFGExitNode	EXIT		3455615		True				
ANR	3455637	Symbol	* to		3455615						
ANR	3455638	Symbol	from		3455615						
ANR	3455639	Symbol	to		3455615						
ANR	3455640	Symbol	* from		3455615						
ANR	3455641	Function	clear_opt_anc_info	4103:0:91998:92098							
ANR	3455642	FunctionDef	clear_opt_anc_info (OptAncInfo * anc)		3455641	0					
ANR	3455643	CompoundStatement		4105:0:92046:92098	3455641	0					
ANR	3455644	ExpressionStatement	anc -> left_anchor = 0	4106:2:92050:92071	3455641	0	True				
ANR	3455645	AssignmentExpression	anc -> left_anchor = 0		3455641	0		=			
ANR	3455646	PtrMemberAccess	anc -> left_anchor		3455641	0					
ANR	3455647	Identifier	anc		3455641	0					
ANR	3455648	Identifier	left_anchor		3455641	1					
ANR	3455649	PrimaryExpression	0		3455641	1					
ANR	3455650	ExpressionStatement	anc -> right_anchor = 0	4107:2:92075:92096	3455641	1	True				
ANR	3455651	AssignmentExpression	anc -> right_anchor = 0		3455641	0		=			
ANR	3455652	PtrMemberAccess	anc -> right_anchor		3455641	0					
ANR	3455653	Identifier	anc		3455641	0					
ANR	3455654	Identifier	right_anchor		3455641	1					
ANR	3455655	PrimaryExpression	0		3455641	1					
ANR	3455656	ReturnType	static void		3455641	1					
ANR	3455657	Identifier	clear_opt_anc_info		3455641	2					
ANR	3455658	ParameterList	OptAncInfo * anc		3455641	3					
ANR	3455659	Parameter	OptAncInfo * anc	4104:19:92029:92043	3455641	0	True				
ANR	3455660	ParameterType	OptAncInfo *		3455641	0					
ANR	3455661	Identifier	anc		3455641	1					
ANR	3455662	CFGEntryNode	ENTRY		3455641		True				
ANR	3455663	CFGExitNode	EXIT		3455641		True				
ANR	3455664	Symbol	anc -> left_anchor		3455641						
ANR	3455665	Symbol	anc		3455641						
ANR	3455666	Symbol	anc -> right_anchor		3455641						
ANR	3455667	Symbol	* anc		3455641						
ANR	3455668	Function	copy_opt_anc_info	4110:0:92101:92182							
ANR	3455669	FunctionDef	"copy_opt_anc_info (OptAncInfo * to , OptAncInfo * from)"		3455668	0					
ANR	3455670	CompoundStatement		4112:0:92165:92182	3455668	0					
ANR	3455671	ExpressionStatement	* to = * from	4113:2:92169:92180	3455668	0	True				
ANR	3455672	AssignmentExpression	* to = * from		3455668	0		=			
ANR	3455673	UnaryOperationExpression	* to		3455668	0					
ANR	3455674	UnaryOperator	*		3455668	0					
ANR	3455675	Identifier	to		3455668	1					
ANR	3455676	UnaryOperationExpression	* from		3455668	1					
ANR	3455677	UnaryOperator	*		3455668	0					
ANR	3455678	Identifier	from		3455668	1					
ANR	3455679	ReturnType	static void		3455668	1					
ANR	3455680	Identifier	copy_opt_anc_info		3455668	2					
ANR	3455681	ParameterList	"OptAncInfo * to , OptAncInfo * from"		3455668	3					
ANR	3455682	Parameter	OptAncInfo * to	4111:18:92131:92144	3455668	0	True				
ANR	3455683	ParameterType	OptAncInfo *		3455668	0					
ANR	3455684	Identifier	to		3455668	1					
ANR	3455685	Parameter	OptAncInfo * from	4111:34:92147:92162	3455668	1	True				
ANR	3455686	ParameterType	OptAncInfo *		3455668	0					
ANR	3455687	Identifier	from		3455668	1					
ANR	3455688	CFGEntryNode	ENTRY		3455668		True				
ANR	3455689	CFGExitNode	EXIT		3455668		True				
ANR	3455690	Symbol	* to		3455668						
ANR	3455691	Symbol	from		3455668						
ANR	3455692	Symbol	to		3455668						
ANR	3455693	Symbol	* from		3455668						
ANR	3455694	Function	concat_opt_anc_info	4116:0:92185:92576							
ANR	3455695	FunctionDef	"concat_opt_anc_info (OptAncInfo * to , OptAncInfo * left , OptAncInfo * right , OnigDistance left_len , OnigDistance right_len)"		3455694	0					
ANR	3455696	CompoundStatement		4119:0:92323:92576	3455694	0					
ANR	3455697	ExpressionStatement	clear_opt_anc_info ( to )	4120:2:92327:92349	3455694	0	True				
ANR	3455698	CallExpression	clear_opt_anc_info ( to )		3455694	0					
ANR	3455699	Callee	clear_opt_anc_info		3455694	0					
ANR	3455700	Identifier	clear_opt_anc_info		3455694	0					
ANR	3455701	ArgumentList	to		3455694	1					
ANR	3455702	Argument	to		3455694	0					
ANR	3455703	Identifier	to		3455694	0					
ANR	3455704	ExpressionStatement	to -> left_anchor = left -> left_anchor	4122:2:92354:92389	3455694	1	True				
ANR	3455705	AssignmentExpression	to -> left_anchor = left -> left_anchor		3455694	0		=			
ANR	3455706	PtrMemberAccess	to -> left_anchor		3455694	0					
ANR	3455707	Identifier	to		3455694	0					
ANR	3455708	Identifier	left_anchor		3455694	1					
ANR	3455709	PtrMemberAccess	left -> left_anchor		3455694	1					
ANR	3455710	Identifier	left		3455694	0					
ANR	3455711	Identifier	left_anchor		3455694	1					
ANR	3455712	IfStatement	if ( left_len == 0 )		3455694	2					
ANR	3455713	Condition	left_len == 0	4123:6:92397:92409	3455694	0	True				
ANR	3455714	EqualityExpression	left_len == 0		3455694	0		==			
ANR	3455715	Identifier	left_len		3455694	0					
ANR	3455716	PrimaryExpression	0		3455694	1					
ANR	3455717	CompoundStatement		5:21:88:88	3455694	1					
ANR	3455718	ExpressionStatement	to -> left_anchor |= right -> left_anchor	4124:4:92418:92455	3455694	0	True				
ANR	3455719	AssignmentExpression	to -> left_anchor |= right -> left_anchor		3455694	0		|=			
ANR	3455720	PtrMemberAccess	to -> left_anchor		3455694	0					
ANR	3455721	Identifier	to		3455694	0					
ANR	3455722	Identifier	left_anchor		3455694	1					
ANR	3455723	PtrMemberAccess	right -> left_anchor		3455694	1					
ANR	3455724	Identifier	right		3455694	0					
ANR	3455725	Identifier	left_anchor		3455694	1					
ANR	3455726	ExpressionStatement	to -> right_anchor = right -> right_anchor	4127:2:92464:92502	3455694	3	True				
ANR	3455727	AssignmentExpression	to -> right_anchor = right -> right_anchor		3455694	0		=			
ANR	3455728	PtrMemberAccess	to -> right_anchor		3455694	0					
ANR	3455729	Identifier	to		3455694	0					
ANR	3455730	Identifier	right_anchor		3455694	1					
ANR	3455731	PtrMemberAccess	right -> right_anchor		3455694	1					
ANR	3455732	Identifier	right		3455694	0					
ANR	3455733	Identifier	right_anchor		3455694	1					
ANR	3455734	IfStatement	if ( right_len == 0 )		3455694	4					
ANR	3455735	Condition	right_len == 0	4128:6:92510:92523	3455694	0	True				
ANR	3455736	EqualityExpression	right_len == 0		3455694	0		==			
ANR	3455737	Identifier	right_len		3455694	0					
ANR	3455738	PrimaryExpression	0		3455694	1					
ANR	3455739	CompoundStatement		10:22:202:202	3455694	1					
ANR	3455740	ExpressionStatement	to -> right_anchor |= left -> right_anchor	4129:4:92532:92570	3455694	0	True				
ANR	3455741	AssignmentExpression	to -> right_anchor |= left -> right_anchor		3455694	0		|=			
ANR	3455742	PtrMemberAccess	to -> right_anchor		3455694	0					
ANR	3455743	Identifier	to		3455694	0					
ANR	3455744	Identifier	right_anchor		3455694	1					
ANR	3455745	PtrMemberAccess	left -> right_anchor		3455694	1					
ANR	3455746	Identifier	left		3455694	0					
ANR	3455747	Identifier	right_anchor		3455694	1					
ANR	3455748	ReturnType	static void		3455694	1					
ANR	3455749	Identifier	concat_opt_anc_info		3455694	2					
ANR	3455750	ParameterList	"OptAncInfo * to , OptAncInfo * left , OptAncInfo * right , OnigDistance left_len , OnigDistance right_len"		3455694	3					
ANR	3455751	Parameter	OptAncInfo * to	4117:20:92217:92230	3455694	0	True				
ANR	3455752	ParameterType	OptAncInfo *		3455694	0					
ANR	3455753	Identifier	to		3455694	1					
ANR	3455754	Parameter	OptAncInfo * left	4117:36:92233:92248	3455694	1	True				
ANR	3455755	ParameterType	OptAncInfo *		3455694	0					
ANR	3455756	Identifier	left		3455694	1					
ANR	3455757	Parameter	OptAncInfo * right	4117:54:92251:92267	3455694	2	True				
ANR	3455758	ParameterType	OptAncInfo *		3455694	0					
ANR	3455759	Identifier	right		3455694	1					
ANR	3455760	Parameter	OnigDistance left_len	4118:6:92276:92296	3455694	3	True				
ANR	3455761	ParameterType	OnigDistance		3455694	0					
ANR	3455762	Identifier	left_len		3455694	1					
ANR	3455763	Parameter	OnigDistance right_len	4118:29:92299:92320	3455694	4	True				
ANR	3455764	ParameterType	OnigDistance		3455694	0					
ANR	3455765	Identifier	right_len		3455694	1					
ANR	3455766	CFGEntryNode	ENTRY		3455694		True				
ANR	3455767	CFGExitNode	EXIT		3455694		True				
ANR	3455768	Symbol	* to		3455694						
ANR	3455769	Symbol	to -> left_anchor		3455694						
ANR	3455770	Symbol	to -> right_anchor		3455694						
ANR	3455771	Symbol	right -> right_anchor		3455694						
ANR	3455772	Symbol	right		3455694						
ANR	3455773	Symbol	right_len		3455694						
ANR	3455774	Symbol	right -> left_anchor		3455694						
ANR	3455775	Symbol	left_len		3455694						
ANR	3455776	Symbol	left -> left_anchor		3455694						
ANR	3455777	Symbol	left -> right_anchor		3455694						
ANR	3455778	Symbol	left		3455694						
ANR	3455779	Symbol	to		3455694						
ANR	3455780	Symbol	* left		3455694						
ANR	3455781	Symbol	* right		3455694						
ANR	3455782	Function	is_left_anchor	4133:0:92579:92798							
ANR	3455783	FunctionDef	is_left_anchor (int anc)		3455782	0					
ANR	3455784	CompoundStatement		4135:0:92614:92798	3455782	0					
ANR	3455785	IfStatement	if ( anc == ANCHOR_END_BUF || anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT )		3455782	0					
ANR	3455786	Condition	anc == ANCHOR_END_BUF || anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT	4136:6:92622:92768	3455782	0	True				
ANR	3455787	OrExpression	anc == ANCHOR_END_BUF || anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		3455782	0		||			
ANR	3455788	EqualityExpression	anc == ANCHOR_END_BUF		3455782	0		==			
ANR	3455789	Identifier	anc		3455782	0					
ANR	3455790	Identifier	ANCHOR_END_BUF		3455782	1					
ANR	3455791	OrExpression	anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		3455782	1		||			
ANR	3455792	EqualityExpression	anc == ANCHOR_SEMI_END_BUF		3455782	0		==			
ANR	3455793	Identifier	anc		3455782	0					
ANR	3455794	Identifier	ANCHOR_SEMI_END_BUF		3455782	1					
ANR	3455795	OrExpression	anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		3455782	1		||			
ANR	3455796	EqualityExpression	anc == ANCHOR_END_LINE		3455782	0		==			
ANR	3455797	Identifier	anc		3455782	0					
ANR	3455798	Identifier	ANCHOR_END_LINE		3455782	1					
ANR	3455799	OrExpression	anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		3455782	1		||			
ANR	3455800	EqualityExpression	anc == ANCHOR_PREC_READ		3455782	0		==			
ANR	3455801	Identifier	anc		3455782	0					
ANR	3455802	Identifier	ANCHOR_PREC_READ		3455782	1					
ANR	3455803	EqualityExpression	anc == ANCHOR_PREC_READ_NOT		3455782	1		==			
ANR	3455804	Identifier	anc		3455782	0					
ANR	3455805	Identifier	ANCHOR_PREC_READ_NOT		3455782	1					
ANR	3455806	ReturnStatement	return 0 ;	4139:4:92775:92783	3455782	1	True				
ANR	3455807	PrimaryExpression	0		3455782	0					
ANR	3455808	ReturnStatement	return 1 ;	4141:2:92788:92796	3455782	1	True				
ANR	3455809	PrimaryExpression	1		3455782	0					
ANR	3455810	ReturnType	static int		3455782	1					
ANR	3455811	Identifier	is_left_anchor		3455782	2					
ANR	3455812	ParameterList	int anc		3455782	3					
ANR	3455813	Parameter	int anc	4134:15:92605:92611	3455782	0	True				
ANR	3455814	ParameterType	int		3455782	0					
ANR	3455815	Identifier	anc		3455782	1					
ANR	3455816	CFGEntryNode	ENTRY		3455782		True				
ANR	3455817	CFGExitNode	EXIT		3455782		True				
ANR	3455818	Symbol	ANCHOR_END_BUF		3455782						
ANR	3455819	Symbol	ANCHOR_PREC_READ_NOT		3455782						
ANR	3455820	Symbol	ANCHOR_SEMI_END_BUF		3455782						
ANR	3455821	Symbol	anc		3455782						
ANR	3455822	Symbol	ANCHOR_END_LINE		3455782						
ANR	3455823	Symbol	ANCHOR_PREC_READ		3455782						
ANR	3455824	Function	is_set_opt_anc_info	4144:0:92801:92956							
ANR	3455825	FunctionDef	"is_set_opt_anc_info (OptAncInfo * to , int anc)"		3455824	0					
ANR	3455826	CompoundStatement		4146:0:92857:92956	3455824	0					
ANR	3455827	IfStatement	if ( ( to -> left_anchor & anc ) != 0 )		3455824	0					
ANR	3455828	Condition	( to -> left_anchor & anc ) != 0	4147:6:92865:92892	3455824	0	True				
ANR	3455829	EqualityExpression	( to -> left_anchor & anc ) != 0		3455824	0		!=			
ANR	3455830	BitAndExpression	to -> left_anchor & anc		3455824	0		&			
ANR	3455831	PtrMemberAccess	to -> left_anchor		3455824	0					
ANR	3455832	Identifier	to		3455824	0					
ANR	3455833	Identifier	left_anchor		3455824	1					
ANR	3455834	Identifier	anc		3455824	1					
ANR	3455835	PrimaryExpression	0		3455824	1					
ANR	3455836	ReturnStatement	return 1 ;	4147:36:92895:92903	3455824	1	True				
ANR	3455837	PrimaryExpression	1		3455824	0					
ANR	3455838	ReturnStatement	return ( ( to -> right_anchor & anc ) != 0 ? 1 : 0 ) ;	4149:2:92908:92954	3455824	1	True				
ANR	3455839	ConditionalExpression	( to -> right_anchor & anc ) != 0 ? 1 : 0		3455824	0					
ANR	3455840	Condition	( to -> right_anchor & anc ) != 0		3455824	0					
ANR	3455841	EqualityExpression	( to -> right_anchor & anc ) != 0		3455824	0		!=			
ANR	3455842	BitAndExpression	to -> right_anchor & anc		3455824	0		&			
ANR	3455843	PtrMemberAccess	to -> right_anchor		3455824	0					
ANR	3455844	Identifier	to		3455824	0					
ANR	3455845	Identifier	right_anchor		3455824	1					
ANR	3455846	Identifier	anc		3455824	1					
ANR	3455847	PrimaryExpression	0		3455824	1					
ANR	3455848	PrimaryExpression	1		3455824	1					
ANR	3455849	PrimaryExpression	0		3455824	2					
ANR	3455850	ReturnType	static int		3455824	1					
ANR	3455851	Identifier	is_set_opt_anc_info		3455824	2					
ANR	3455852	ParameterList	"OptAncInfo * to , int anc"		3455824	3					
ANR	3455853	Parameter	OptAncInfo * to	4145:20:92832:92845	3455824	0	True				
ANR	3455854	ParameterType	OptAncInfo *		3455824	0					
ANR	3455855	Identifier	to		3455824	1					
ANR	3455856	Parameter	int anc	4145:36:92848:92854	3455824	1	True				
ANR	3455857	ParameterType	int		3455824	0					
ANR	3455858	Identifier	anc		3455824	1					
ANR	3455859	CFGEntryNode	ENTRY		3455824		True				
ANR	3455860	CFGExitNode	EXIT		3455824		True				
ANR	3455861	Symbol	* to		3455824						
ANR	3455862	Symbol	to -> left_anchor		3455824						
ANR	3455863	Symbol	to -> right_anchor		3455824						
ANR	3455864	Symbol	anc		3455824						
ANR	3455865	Symbol	to		3455824						
ANR	3455866	Function	add_opt_anc_info	4152:0:92959:93106							
ANR	3455867	FunctionDef	"add_opt_anc_info (OptAncInfo * to , int anc)"		3455866	0					
ANR	3455868	CompoundStatement		4154:0:93013:93106	3455866	0					
ANR	3455869	IfStatement	if ( is_left_anchor ( anc ) )		3455866	0					
ANR	3455870	Condition	is_left_anchor ( anc )	4155:6:93021:93039	3455866	0	True				
ANR	3455871	CallExpression	is_left_anchor ( anc )		3455866	0					
ANR	3455872	Callee	is_left_anchor		3455866	0					
ANR	3455873	Identifier	is_left_anchor		3455866	0					
ANR	3455874	ArgumentList	anc		3455866	1					
ANR	3455875	Argument	anc		3455866	0					
ANR	3455876	Identifier	anc		3455866	0					
ANR	3455877	ExpressionStatement	to -> left_anchor |= anc	4156:4:93046:93068	3455866	1	True				
ANR	3455878	AssignmentExpression	to -> left_anchor |= anc		3455866	0		|=			
ANR	3455879	PtrMemberAccess	to -> left_anchor		3455866	0					
ANR	3455880	Identifier	to		3455866	0					
ANR	3455881	Identifier	left_anchor		3455866	1					
ANR	3455882	Identifier	anc		3455866	1					
ANR	3455883	ElseStatement	else		3455866	0					
ANR	3455884	ExpressionStatement	to -> right_anchor |= anc	4158:4:93081:93104	3455866	0	True				
ANR	3455885	AssignmentExpression	to -> right_anchor |= anc		3455866	0		|=			
ANR	3455886	PtrMemberAccess	to -> right_anchor		3455866	0					
ANR	3455887	Identifier	to		3455866	0					
ANR	3455888	Identifier	right_anchor		3455866	1					
ANR	3455889	Identifier	anc		3455866	1					
ANR	3455890	ReturnType	static void		3455866	1					
ANR	3455891	Identifier	add_opt_anc_info		3455866	2					
ANR	3455892	ParameterList	"OptAncInfo * to , int anc"		3455866	3					
ANR	3455893	Parameter	OptAncInfo * to	4153:17:92988:93001	3455866	0	True				
ANR	3455894	ParameterType	OptAncInfo *		3455866	0					
ANR	3455895	Identifier	to		3455866	1					
ANR	3455896	Parameter	int anc	4153:33:93004:93010	3455866	1	True				
ANR	3455897	ParameterType	int		3455866	0					
ANR	3455898	Identifier	anc		3455866	1					
ANR	3455899	CFGEntryNode	ENTRY		3455866		True				
ANR	3455900	CFGExitNode	EXIT		3455866		True				
ANR	3455901	Symbol	* to		3455866						
ANR	3455902	Symbol	to -> left_anchor		3455866						
ANR	3455903	Symbol	to -> right_anchor		3455866						
ANR	3455904	Symbol	anc		3455866						
ANR	3455905	Symbol	to		3455866						
ANR	3455906	Symbol	is_left_anchor		3455866						
ANR	3455907	Function	remove_opt_anc_info	4161:0:93109:93261							
ANR	3455908	FunctionDef	"remove_opt_anc_info (OptAncInfo * to , int anc)"		3455907	0					
ANR	3455909	CompoundStatement		4163:0:93166:93261	3455907	0					
ANR	3455910	IfStatement	if ( is_left_anchor ( anc ) )		3455907	0					
ANR	3455911	Condition	is_left_anchor ( anc )	4164:6:93174:93192	3455907	0	True				
ANR	3455912	CallExpression	is_left_anchor ( anc )		3455907	0					
ANR	3455913	Callee	is_left_anchor		3455907	0					
ANR	3455914	Identifier	is_left_anchor		3455907	0					
ANR	3455915	ArgumentList	anc		3455907	1					
ANR	3455916	Argument	anc		3455907	0					
ANR	3455917	Identifier	anc		3455907	0					
ANR	3455918	ExpressionStatement	to -> left_anchor &= ~anc	4165:4:93199:93222	3455907	1	True				
ANR	3455919	AssignmentExpression	to -> left_anchor &= ~anc		3455907	0		&=			
ANR	3455920	PtrMemberAccess	to -> left_anchor		3455907	0					
ANR	3455921	Identifier	to		3455907	0					
ANR	3455922	Identifier	left_anchor		3455907	1					
ANR	3455923	Identifier	~anc		3455907	1					
ANR	3455924	ElseStatement	else		3455907	0					
ANR	3455925	ExpressionStatement	to -> right_anchor &= ~anc	4167:4:93235:93259	3455907	0	True				
ANR	3455926	AssignmentExpression	to -> right_anchor &= ~anc		3455907	0		&=			
ANR	3455927	PtrMemberAccess	to -> right_anchor		3455907	0					
ANR	3455928	Identifier	to		3455907	0					
ANR	3455929	Identifier	right_anchor		3455907	1					
ANR	3455930	Identifier	~anc		3455907	1					
ANR	3455931	ReturnType	static void		3455907	1					
ANR	3455932	Identifier	remove_opt_anc_info		3455907	2					
ANR	3455933	ParameterList	"OptAncInfo * to , int anc"		3455907	3					
ANR	3455934	Parameter	OptAncInfo * to	4162:20:93141:93154	3455907	0	True				
ANR	3455935	ParameterType	OptAncInfo *		3455907	0					
ANR	3455936	Identifier	to		3455907	1					
ANR	3455937	Parameter	int anc	4162:36:93157:93163	3455907	1	True				
ANR	3455938	ParameterType	int		3455907	0					
ANR	3455939	Identifier	anc		3455907	1					
ANR	3455940	CFGEntryNode	ENTRY		3455907		True				
ANR	3455941	CFGExitNode	EXIT		3455907		True				
ANR	3455942	Symbol	~anc		3455907						
ANR	3455943	Symbol	* to		3455907						
ANR	3455944	Symbol	to -> left_anchor		3455907						
ANR	3455945	Symbol	to -> right_anchor		3455907						
ANR	3455946	Symbol	anc		3455907						
ANR	3455947	Symbol	to		3455907						
ANR	3455948	Symbol	is_left_anchor		3455907						
ANR	3455949	Function	alt_merge_opt_anc_info	4170:0:93264:93415							
ANR	3455950	FunctionDef	"alt_merge_opt_anc_info (OptAncInfo * to , OptAncInfo * add)"		3455949	0					
ANR	3455951	CompoundStatement		4172:0:93332:93415	3455949	0					
ANR	3455952	ExpressionStatement	to -> left_anchor &= add -> left_anchor	4173:2:93336:93372	3455949	0	True				
ANR	3455953	AssignmentExpression	to -> left_anchor &= add -> left_anchor		3455949	0		&=			
ANR	3455954	PtrMemberAccess	to -> left_anchor		3455949	0					
ANR	3455955	Identifier	to		3455949	0					
ANR	3455956	Identifier	left_anchor		3455949	1					
ANR	3455957	PtrMemberAccess	add -> left_anchor		3455949	1					
ANR	3455958	Identifier	add		3455949	0					
ANR	3455959	Identifier	left_anchor		3455949	1					
ANR	3455960	ExpressionStatement	to -> right_anchor &= add -> right_anchor	4174:2:93376:93413	3455949	1	True				
ANR	3455961	AssignmentExpression	to -> right_anchor &= add -> right_anchor		3455949	0		&=			
ANR	3455962	PtrMemberAccess	to -> right_anchor		3455949	0					
ANR	3455963	Identifier	to		3455949	0					
ANR	3455964	Identifier	right_anchor		3455949	1					
ANR	3455965	PtrMemberAccess	add -> right_anchor		3455949	1					
ANR	3455966	Identifier	add		3455949	0					
ANR	3455967	Identifier	right_anchor		3455949	1					
ANR	3455968	ReturnType	static void		3455949	1					
ANR	3455969	Identifier	alt_merge_opt_anc_info		3455949	2					
ANR	3455970	ParameterList	"OptAncInfo * to , OptAncInfo * add"		3455949	3					
ANR	3455971	Parameter	OptAncInfo * to	4171:23:93299:93312	3455949	0	True				
ANR	3455972	ParameterType	OptAncInfo *		3455949	0					
ANR	3455973	Identifier	to		3455949	1					
ANR	3455974	Parameter	OptAncInfo * add	4171:39:93315:93329	3455949	1	True				
ANR	3455975	ParameterType	OptAncInfo *		3455949	0					
ANR	3455976	Identifier	add		3455949	1					
ANR	3455977	CFGEntryNode	ENTRY		3455949		True				
ANR	3455978	CFGExitNode	EXIT		3455949		True				
ANR	3455979	Symbol	add		3455949						
ANR	3455980	Symbol	add -> right_anchor		3455949						
ANR	3455981	Symbol	* to		3455949						
ANR	3455982	Symbol	* add		3455949						
ANR	3455983	Symbol	to -> left_anchor		3455949						
ANR	3455984	Symbol	to -> right_anchor		3455949						
ANR	3455985	Symbol	add -> left_anchor		3455949						
ANR	3455986	Symbol	to		3455949						
ANR	3455987	Function	is_full_opt_exact_info	4177:0:93418:93520							
ANR	3455988	FunctionDef	is_full_opt_exact_info (OptExactInfo * ex)		3455987	0					
ANR	3455989	CompoundStatement		4179:0:93470:93520	3455987	0					
ANR	3455990	ReturnStatement	return ( ex -> len >= OPT_EXACT_MAXLEN ? 1 : 0 ) ;	4180:2:93474:93518	3455987	0	True				
ANR	3455991	ConditionalExpression	ex -> len >= OPT_EXACT_MAXLEN ? 1 : 0		3455987	0					
ANR	3455992	Condition	ex -> len >= OPT_EXACT_MAXLEN		3455987	0					
ANR	3455993	RelationalExpression	ex -> len >= OPT_EXACT_MAXLEN		3455987	0		>=			
ANR	3455994	PtrMemberAccess	ex -> len		3455987	0					
ANR	3455995	Identifier	ex		3455987	0					
ANR	3455996	Identifier	len		3455987	1					
ANR	3455997	Identifier	OPT_EXACT_MAXLEN		3455987	1					
ANR	3455998	PrimaryExpression	1		3455987	1					
ANR	3455999	PrimaryExpression	0		3455987	2					
ANR	3456000	ReturnType	static int		3455987	1					
ANR	3456001	Identifier	is_full_opt_exact_info		3455987	2					
ANR	3456002	ParameterList	OptExactInfo * ex		3455987	3					
ANR	3456003	Parameter	OptExactInfo * ex	4178:23:93452:93467	3455987	0	True				
ANR	3456004	ParameterType	OptExactInfo *		3455987	0					
ANR	3456005	Identifier	ex		3455987	1					
ANR	3456006	CFGEntryNode	ENTRY		3455987		True				
ANR	3456007	CFGExitNode	EXIT		3455987		True				
ANR	3456008	Symbol	OPT_EXACT_MAXLEN		3455987						
ANR	3456009	Symbol	ex		3455987						
ANR	3456010	Symbol	* ex		3455987						
ANR	3456011	Symbol	ex -> len		3455987						
ANR	3456012	Function	clear_opt_exact_info	4183:0:93523:93726							
ANR	3456013	FunctionDef	clear_opt_exact_info (OptExactInfo * ex)		3456012	0					
ANR	3456014	CompoundStatement		4185:0:93574:93726	3456012	0					
ANR	3456015	ExpressionStatement	clear_mml ( & ex -> mmd )	4186:2:93578:93597	3456012	0	True				
ANR	3456016	CallExpression	clear_mml ( & ex -> mmd )		3456012	0					
ANR	3456017	Callee	clear_mml		3456012	0					
ANR	3456018	Identifier	clear_mml		3456012	0					
ANR	3456019	ArgumentList	& ex -> mmd		3456012	1					
ANR	3456020	Argument	& ex -> mmd		3456012	0					
ANR	3456021	UnaryOperationExpression	& ex -> mmd		3456012	0					
ANR	3456022	UnaryOperator	&		3456012	0					
ANR	3456023	PtrMemberAccess	ex -> mmd		3456012	1					
ANR	3456024	Identifier	ex		3456012	0					
ANR	3456025	Identifier	mmd		3456012	1					
ANR	3456026	ExpressionStatement	clear_opt_anc_info ( & ex -> anc )	4187:2:93601:93629	3456012	1	True				
ANR	3456027	CallExpression	clear_opt_anc_info ( & ex -> anc )		3456012	0					
ANR	3456028	Callee	clear_opt_anc_info		3456012	0					
ANR	3456029	Identifier	clear_opt_anc_info		3456012	0					
ANR	3456030	ArgumentList	& ex -> anc		3456012	1					
ANR	3456031	Argument	& ex -> anc		3456012	0					
ANR	3456032	UnaryOperationExpression	& ex -> anc		3456012	0					
ANR	3456033	UnaryOperator	&		3456012	0					
ANR	3456034	PtrMemberAccess	ex -> anc		3456012	1					
ANR	3456035	Identifier	ex		3456012	0					
ANR	3456036	Identifier	anc		3456012	1					
ANR	3456037	ExpressionStatement	ex -> reach_end = 0	4188:2:93633:93652	3456012	2	True				
ANR	3456038	AssignmentExpression	ex -> reach_end = 0		3456012	0		=			
ANR	3456039	PtrMemberAccess	ex -> reach_end		3456012	0					
ANR	3456040	Identifier	ex		3456012	0					
ANR	3456041	Identifier	reach_end		3456012	1					
ANR	3456042	PrimaryExpression	0		3456012	1					
ANR	3456043	ExpressionStatement	ex -> ignore_case = 0	4189:2:93656:93675	3456012	3	True				
ANR	3456044	AssignmentExpression	ex -> ignore_case = 0		3456012	0		=			
ANR	3456045	PtrMemberAccess	ex -> ignore_case		3456012	0					
ANR	3456046	Identifier	ex		3456012	0					
ANR	3456047	Identifier	ignore_case		3456012	1					
ANR	3456048	PrimaryExpression	0		3456012	1					
ANR	3456049	ExpressionStatement	ex -> len = 0	4190:2:93679:93698	3456012	4	True				
ANR	3456050	AssignmentExpression	ex -> len = 0		3456012	0		=			
ANR	3456051	PtrMemberAccess	ex -> len		3456012	0					
ANR	3456052	Identifier	ex		3456012	0					
ANR	3456053	Identifier	len		3456012	1					
ANR	3456054	PrimaryExpression	0		3456012	1					
ANR	3456055	ExpressionStatement	ex -> s [ 0 ] = '\\0'	4191:2:93702:93724	3456012	5	True				
ANR	3456056	AssignmentExpression	ex -> s [ 0 ] = '\\0'		3456012	0		=			
ANR	3456057	ArrayIndexing	ex -> s [ 0 ]		3456012	0					
ANR	3456058	PtrMemberAccess	ex -> s		3456012	0					
ANR	3456059	Identifier	ex		3456012	0					
ANR	3456060	Identifier	s		3456012	1					
ANR	3456061	PrimaryExpression	0		3456012	1					
ANR	3456062	PrimaryExpression	'\\0'		3456012	1					
ANR	3456063	ReturnType	static void		3456012	1					
ANR	3456064	Identifier	clear_opt_exact_info		3456012	2					
ANR	3456065	ParameterList	OptExactInfo * ex		3456012	3					
ANR	3456066	Parameter	OptExactInfo * ex	4184:21:93556:93571	3456012	0	True				
ANR	3456067	ParameterType	OptExactInfo *		3456012	0					
ANR	3456068	Identifier	ex		3456012	1					
ANR	3456069	CFGEntryNode	ENTRY		3456012		True				
ANR	3456070	CFGExitNode	EXIT		3456012		True				
ANR	3456071	Symbol	& ex -> mmd		3456012						
ANR	3456072	Symbol	ex -> ignore_case		3456012						
ANR	3456073	Symbol	& ex -> anc		3456012						
ANR	3456074	Symbol	ex -> s		3456012						
ANR	3456075	Symbol	ex		3456012						
ANR	3456076	Symbol	* ex -> s		3456012						
ANR	3456077	Symbol	* ex		3456012						
ANR	3456078	Symbol	ex -> reach_end		3456012						
ANR	3456079	Symbol	ex -> len		3456012						
ANR	3456080	Symbol	* * ex		3456012						
ANR	3456081	Function	copy_opt_exact_info	4194:0:93729:93816							
ANR	3456082	FunctionDef	"copy_opt_exact_info (OptExactInfo * to , OptExactInfo * from)"		3456081	0					
ANR	3456083	CompoundStatement		4196:0:93799:93816	3456081	0					
ANR	3456084	ExpressionStatement	* to = * from	4197:2:93803:93814	3456081	0	True				
ANR	3456085	AssignmentExpression	* to = * from		3456081	0		=			
ANR	3456086	UnaryOperationExpression	* to		3456081	0					
ANR	3456087	UnaryOperator	*		3456081	0					
ANR	3456088	Identifier	to		3456081	1					
ANR	3456089	UnaryOperationExpression	* from		3456081	1					
ANR	3456090	UnaryOperator	*		3456081	0					
ANR	3456091	Identifier	from		3456081	1					
ANR	3456092	ReturnType	static void		3456081	1					
ANR	3456093	Identifier	copy_opt_exact_info		3456081	2					
ANR	3456094	ParameterList	"OptExactInfo * to , OptExactInfo * from"		3456081	3					
ANR	3456095	Parameter	OptExactInfo * to	4195:20:93761:93776	3456081	0	True				
ANR	3456096	ParameterType	OptExactInfo *		3456081	0					
ANR	3456097	Identifier	to		3456081	1					
ANR	3456098	Parameter	OptExactInfo * from	4195:38:93779:93796	3456081	1	True				
ANR	3456099	ParameterType	OptExactInfo *		3456081	0					
ANR	3456100	Identifier	from		3456081	1					
ANR	3456101	CFGEntryNode	ENTRY		3456081		True				
ANR	3456102	CFGExitNode	EXIT		3456081		True				
ANR	3456103	Symbol	* to		3456081						
ANR	3456104	Symbol	from		3456081						
ANR	3456105	Symbol	to		3456081						
ANR	3456106	Symbol	* from		3456081						
ANR	3456107	Function	concat_opt_exact_info	4200:0:93819:94511							
ANR	3456108	FunctionDef	"concat_opt_exact_info (OptExactInfo * to , OptExactInfo * add , OnigEncoding enc)"		3456107	0					
ANR	3456109	CompoundStatement		4202:0:93908:94511	3456107	0					
ANR	3456110	IdentifierDeclStatement	"int i , j , len ;"	4203:2:93912:93925	3456107	0	True				
ANR	3456111	IdentifierDecl	i		3456107	0					
ANR	3456112	IdentifierDeclType	int		3456107	0					
ANR	3456113	Identifier	i		3456107	1					
ANR	3456114	IdentifierDecl	j		3456107	1					
ANR	3456115	IdentifierDeclType	int		3456107	0					
ANR	3456116	Identifier	j		3456107	1					
ANR	3456117	IdentifierDecl	len		3456107	2					
ANR	3456118	IdentifierDeclType	int		3456107	0					
ANR	3456119	Identifier	len		3456107	1					
ANR	3456120	IdentifierDeclStatement	"UChar * p , * end ;"	4204:2:93929:93943	3456107	1	True				
ANR	3456121	IdentifierDecl	* p		3456107	0					
ANR	3456122	IdentifierDeclType	UChar *		3456107	0					
ANR	3456123	Identifier	p		3456107	1					
ANR	3456124	IdentifierDecl	* end		3456107	1					
ANR	3456125	IdentifierDeclType	UChar *		3456107	0					
ANR	3456126	Identifier	end		3456107	1					
ANR	3456127	IdentifierDeclStatement	OptAncInfo tanc ;	4205:2:93947:93962	3456107	2	True				
ANR	3456128	IdentifierDecl	tanc		3456107	0					
ANR	3456129	IdentifierDeclType	OptAncInfo		3456107	0					
ANR	3456130	Identifier	tanc		3456107	1					
ANR	3456131	IfStatement	if ( ! to -> ignore_case && add -> ignore_case )		3456107	3					
ANR	3456132	Condition	! to -> ignore_case && add -> ignore_case	4207:6:93971:94007	3456107	0	True				
ANR	3456133	AndExpression	! to -> ignore_case && add -> ignore_case		3456107	0		&&			
ANR	3456134	UnaryOperationExpression	! to -> ignore_case		3456107	0					
ANR	3456135	UnaryOperator	!		3456107	0					
ANR	3456136	PtrMemberAccess	to -> ignore_case		3456107	1					
ANR	3456137	Identifier	to		3456107	0					
ANR	3456138	Identifier	ignore_case		3456107	1					
ANR	3456139	PtrMemberAccess	add -> ignore_case		3456107	1					
ANR	3456140	Identifier	add		3456107	0					
ANR	3456141	Identifier	ignore_case		3456107	1					
ANR	3456142	CompoundStatement		6:45:101:101	3456107	1					
ANR	3456143	IfStatement	if ( to -> len >= add -> len )		3456107	0					
ANR	3456144	Condition	to -> len >= add -> len	4208:8:94020:94038	3456107	0	True				
ANR	3456145	RelationalExpression	to -> len >= add -> len		3456107	0		>=			
ANR	3456146	PtrMemberAccess	to -> len		3456107	0					
ANR	3456147	Identifier	to		3456107	0					
ANR	3456148	Identifier	len		3456107	1					
ANR	3456149	PtrMemberAccess	add -> len		3456107	1					
ANR	3456150	Identifier	add		3456107	0					
ANR	3456151	Identifier	len		3456107	1					
ANR	3456152	ReturnStatement	return ;	4208:29:94041:94048	3456107	1	True				
ANR	3456153	ExpressionStatement	to -> ignore_case = 1	4210:4:94068:94087	3456107	1	True				
ANR	3456154	AssignmentExpression	to -> ignore_case = 1		3456107	0		=			
ANR	3456155	PtrMemberAccess	to -> ignore_case		3456107	0					
ANR	3456156	Identifier	to		3456107	0					
ANR	3456157	Identifier	ignore_case		3456107	1					
ANR	3456158	PrimaryExpression	1		3456107	1					
ANR	3456159	ExpressionStatement	p = add -> s	4213:2:94096:94106	3456107	4	True				
ANR	3456160	AssignmentExpression	p = add -> s		3456107	0		=			
ANR	3456161	Identifier	p		3456107	0					
ANR	3456162	PtrMemberAccess	add -> s		3456107	1					
ANR	3456163	Identifier	add		3456107	0					
ANR	3456164	Identifier	s		3456107	1					
ANR	3456165	ExpressionStatement	end = p + add -> len	4214:2:94110:94128	3456107	5	True				
ANR	3456166	AssignmentExpression	end = p + add -> len		3456107	0		=			
ANR	3456167	Identifier	end		3456107	0					
ANR	3456168	AdditiveExpression	p + add -> len		3456107	1		+			
ANR	3456169	Identifier	p		3456107	0					
ANR	3456170	PtrMemberAccess	add -> len		3456107	1					
ANR	3456171	Identifier	add		3456107	0					
ANR	3456172	Identifier	len		3456107	1					
ANR	3456173	ForStatement	for ( i = to -> len ; p < end ; )		3456107	6					
ANR	3456174	ForInit	i = to -> len ;	4215:7:94137:94148	3456107	0	True				
ANR	3456175	AssignmentExpression	i = to -> len		3456107	0		=			
ANR	3456176	Identifier	i		3456107	0					
ANR	3456177	PtrMemberAccess	to -> len		3456107	1					
ANR	3456178	Identifier	to		3456107	0					
ANR	3456179	Identifier	len		3456107	1					
ANR	3456180	Condition	p < end	4215:20:94150:94156	3456107	1	True				
ANR	3456181	RelationalExpression	p < end		3456107	0		<			
ANR	3456182	Identifier	p		3456107	0					
ANR	3456183	Identifier	end		3456107	1					
ANR	3456184	CompoundStatement		14:31:252:252	3456107	2					
ANR	3456185	ExpressionStatement	"len = enclen ( enc , p )"	4216:4:94167:94187	3456107	0	True				
ANR	3456186	AssignmentExpression	"len = enclen ( enc , p )"		3456107	0		=			
ANR	3456187	Identifier	len		3456107	0					
ANR	3456188	CallExpression	"enclen ( enc , p )"		3456107	1					
ANR	3456189	Callee	enclen		3456107	0					
ANR	3456190	Identifier	enclen		3456107	0					
ANR	3456191	ArgumentList	enc		3456107	1					
ANR	3456192	Argument	enc		3456107	0					
ANR	3456193	Identifier	enc		3456107	0					
ANR	3456194	Argument	p		3456107	1					
ANR	3456195	Identifier	p		3456107	0					
ANR	3456196	IfStatement	if ( i + len > OPT_EXACT_MAXLEN )		3456107	1					
ANR	3456197	Condition	i + len > OPT_EXACT_MAXLEN	4217:8:94197:94222	3456107	0	True				
ANR	3456198	RelationalExpression	i + len > OPT_EXACT_MAXLEN		3456107	0		>			
ANR	3456199	AdditiveExpression	i + len		3456107	0		+			
ANR	3456200	Identifier	i		3456107	0					
ANR	3456201	Identifier	len		3456107	1					
ANR	3456202	Identifier	OPT_EXACT_MAXLEN		3456107	1					
ANR	3456203	BreakStatement	break ;	4217:36:94225:94230	3456107	1	True				
ANR	3456204	ForStatement	for ( j = 0 ; j < len && p < end ; j ++ )		3456107	2					
ANR	3456205	ForInit	j = 0 ;	4218:9:94241:94246	3456107	0	True				
ANR	3456206	AssignmentExpression	j = 0		3456107	0		=			
ANR	3456207	Identifier	j		3456107	0					
ANR	3456208	PrimaryExpression	0		3456107	1					
ANR	3456209	Condition	j < len && p < end	4218:16:94248:94265	3456107	1	True				
ANR	3456210	AndExpression	j < len && p < end		3456107	0		&&			
ANR	3456211	RelationalExpression	j < len		3456107	0		<			
ANR	3456212	Identifier	j		3456107	0					
ANR	3456213	Identifier	len		3456107	1					
ANR	3456214	RelationalExpression	p < end		3456107	1		<			
ANR	3456215	Identifier	p		3456107	0					
ANR	3456216	Identifier	end		3456107	1					
ANR	3456217	PostIncDecOperationExpression	j ++	4218:36:94268:94270	3456107	2	True				
ANR	3456218	Identifier	j		3456107	0					
ANR	3456219	IncDec	++		3456107	1					
ANR	3456220	ExpressionStatement	to -> s [ i ++ ] = * p ++	4219:6:94279:94296	3456107	3	True				
ANR	3456221	AssignmentExpression	to -> s [ i ++ ] = * p ++		3456107	0		=			
ANR	3456222	ArrayIndexing	to -> s [ i ++ ]		3456107	0					
ANR	3456223	PtrMemberAccess	to -> s		3456107	0					
ANR	3456224	Identifier	to		3456107	0					
ANR	3456225	Identifier	s		3456107	1					
ANR	3456226	PostIncDecOperationExpression	i ++		3456107	1					
ANR	3456227	Identifier	i		3456107	0					
ANR	3456228	IncDec	++		3456107	1					
ANR	3456229	UnaryOperationExpression	* p ++		3456107	1					
ANR	3456230	UnaryOperator	*		3456107	0					
ANR	3456231	PostIncDecOperationExpression	p ++		3456107	1					
ANR	3456232	Identifier	p		3456107	0					
ANR	3456233	IncDec	++		3456107	1					
ANR	3456234	ExpressionStatement	to -> len = i	4222:2:94305:94316	3456107	7	True				
ANR	3456235	AssignmentExpression	to -> len = i		3456107	0		=			
ANR	3456236	PtrMemberAccess	to -> len		3456107	0					
ANR	3456237	Identifier	to		3456107	0					
ANR	3456238	Identifier	len		3456107	1					
ANR	3456239	Identifier	i		3456107	1					
ANR	3456240	ExpressionStatement	to -> reach_end = ( p == end ? add -> reach_end : 0 )	4223:2:94320:94367	3456107	8	True				
ANR	3456241	AssignmentExpression	to -> reach_end = ( p == end ? add -> reach_end : 0 )		3456107	0		=			
ANR	3456242	PtrMemberAccess	to -> reach_end		3456107	0					
ANR	3456243	Identifier	to		3456107	0					
ANR	3456244	Identifier	reach_end		3456107	1					
ANR	3456245	ConditionalExpression	p == end ? add -> reach_end : 0		3456107	1					
ANR	3456246	Condition	p == end		3456107	0					
ANR	3456247	EqualityExpression	p == end		3456107	0		==			
ANR	3456248	Identifier	p		3456107	0					
ANR	3456249	Identifier	end		3456107	1					
ANR	3456250	PtrMemberAccess	add -> reach_end		3456107	1					
ANR	3456251	Identifier	add		3456107	0					
ANR	3456252	Identifier	reach_end		3456107	1					
ANR	3456253	PrimaryExpression	0		3456107	2					
ANR	3456254	ExpressionStatement	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , 1 , 1 )"	4225:2:94372:94425	3456107	9	True				
ANR	3456255	CallExpression	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , 1 , 1 )"		3456107	0					
ANR	3456256	Callee	concat_opt_anc_info		3456107	0					
ANR	3456257	Identifier	concat_opt_anc_info		3456107	0					
ANR	3456258	ArgumentList	& tanc		3456107	1					
ANR	3456259	Argument	& tanc		3456107	0					
ANR	3456260	UnaryOperationExpression	& tanc		3456107	0					
ANR	3456261	UnaryOperator	&		3456107	0					
ANR	3456262	Identifier	tanc		3456107	1					
ANR	3456263	Argument	& to -> anc		3456107	1					
ANR	3456264	UnaryOperationExpression	& to -> anc		3456107	0					
ANR	3456265	UnaryOperator	&		3456107	0					
ANR	3456266	PtrMemberAccess	to -> anc		3456107	1					
ANR	3456267	Identifier	to		3456107	0					
ANR	3456268	Identifier	anc		3456107	1					
ANR	3456269	Argument	& add -> anc		3456107	2					
ANR	3456270	UnaryOperationExpression	& add -> anc		3456107	0					
ANR	3456271	UnaryOperator	&		3456107	0					
ANR	3456272	PtrMemberAccess	add -> anc		3456107	1					
ANR	3456273	Identifier	add		3456107	0					
ANR	3456274	Identifier	anc		3456107	1					
ANR	3456275	Argument	1		3456107	3					
ANR	3456276	PrimaryExpression	1		3456107	0					
ANR	3456277	Argument	1		3456107	4					
ANR	3456278	PrimaryExpression	1		3456107	0					
ANR	3456279	IfStatement	if ( ! to -> reach_end )		3456107	10					
ANR	3456280	Condition	! to -> reach_end	4226:6:94433:94447	3456107	0	True				
ANR	3456281	UnaryOperationExpression	! to -> reach_end		3456107	0					
ANR	3456282	UnaryOperator	!		3456107	0					
ANR	3456283	PtrMemberAccess	to -> reach_end		3456107	1					
ANR	3456284	Identifier	to		3456107	0					
ANR	3456285	Identifier	reach_end		3456107	1					
ANR	3456286	ExpressionStatement	tanc . right_anchor = 0	4226:23:94450:94471	3456107	1	True				
ANR	3456287	AssignmentExpression	tanc . right_anchor = 0		3456107	0		=			
ANR	3456288	MemberAccess	tanc . right_anchor		3456107	0					
ANR	3456289	Identifier	tanc		3456107	0					
ANR	3456290	Identifier	right_anchor		3456107	1					
ANR	3456291	PrimaryExpression	0		3456107	1					
ANR	3456292	ExpressionStatement	"copy_opt_anc_info ( & to -> anc , & tanc )"	4227:2:94475:94509	3456107	11	True				
ANR	3456293	CallExpression	"copy_opt_anc_info ( & to -> anc , & tanc )"		3456107	0					
ANR	3456294	Callee	copy_opt_anc_info		3456107	0					
ANR	3456295	Identifier	copy_opt_anc_info		3456107	0					
ANR	3456296	ArgumentList	& to -> anc		3456107	1					
ANR	3456297	Argument	& to -> anc		3456107	0					
ANR	3456298	UnaryOperationExpression	& to -> anc		3456107	0					
ANR	3456299	UnaryOperator	&		3456107	0					
ANR	3456300	PtrMemberAccess	to -> anc		3456107	1					
ANR	3456301	Identifier	to		3456107	0					
ANR	3456302	Identifier	anc		3456107	1					
ANR	3456303	Argument	& tanc		3456107	1					
ANR	3456304	UnaryOperationExpression	& tanc		3456107	0					
ANR	3456305	UnaryOperator	&		3456107	0					
ANR	3456306	Identifier	tanc		3456107	1					
ANR	3456307	ReturnType	static void		3456107	1					
ANR	3456308	Identifier	concat_opt_exact_info		3456107	2					
ANR	3456309	ParameterList	"OptExactInfo * to , OptExactInfo * add , OnigEncoding enc"		3456107	3					
ANR	3456310	Parameter	OptExactInfo * to	4201:22:93853:93868	3456107	0	True				
ANR	3456311	ParameterType	OptExactInfo *		3456107	0					
ANR	3456312	Identifier	to		3456107	1					
ANR	3456313	Parameter	OptExactInfo * add	4201:40:93871:93887	3456107	1	True				
ANR	3456314	ParameterType	OptExactInfo *		3456107	0					
ANR	3456315	Identifier	add		3456107	1					
ANR	3456316	Parameter	OnigEncoding enc	4201:59:93890:93905	3456107	2	True				
ANR	3456317	ParameterType	OnigEncoding		3456107	0					
ANR	3456318	Identifier	enc		3456107	1					
ANR	3456319	CFGEntryNode	ENTRY		3456107		True				
ANR	3456320	CFGExitNode	EXIT		3456107		True				
ANR	3456321	Symbol	OPT_EXACT_MAXLEN		3456107						
ANR	3456322	Symbol	to -> reach_end		3456107						
ANR	3456323	Symbol	& add -> anc		3456107						
ANR	3456324	Symbol	& tanc		3456107						
ANR	3456325	Symbol	add -> ignore_case		3456107						
ANR	3456326	Symbol	add -> reach_end		3456107						
ANR	3456327	Symbol	len		3456107						
ANR	3456328	Symbol	tanc		3456107						
ANR	3456329	Symbol	add -> len		3456107						
ANR	3456330	Symbol	end		3456107						
ANR	3456331	Symbol	enc		3456107						
ANR	3456332	Symbol	to -> len		3456107						
ANR	3456333	Symbol	to -> s		3456107						
ANR	3456334	Symbol	add -> s		3456107						
ANR	3456335	Symbol	add		3456107						
ANR	3456336	Symbol	* to		3456107						
ANR	3456337	Symbol	& to -> anc		3456107						
ANR	3456338	Symbol	* * to		3456107						
ANR	3456339	Symbol	* to -> s		3456107						
ANR	3456340	Symbol	* p ++		3456107						
ANR	3456341	Symbol	i		3456107						
ANR	3456342	Symbol	j		3456107						
ANR	3456343	Symbol	to -> ignore_case		3456107						
ANR	3456344	Symbol	enclen		3456107						
ANR	3456345	Symbol	tanc . right_anchor		3456107						
ANR	3456346	Symbol	p		3456107						
ANR	3456347	Symbol	* add		3456107						
ANR	3456348	Symbol	to		3456107						
ANR	3456349	Function	concat_opt_exact_info_str	4230:0:94514:94886							
ANR	3456350	FunctionDef	"concat_opt_exact_info_str (OptExactInfo * to , UChar * s , UChar * end , int raw ARG_UNUSED , OnigEncoding enc)"		3456349	0					
ANR	3456351	CompoundStatement		4233:0:94635:94886	3456349	0					
ANR	3456352	IdentifierDeclStatement	"int i , j , len ;"	4234:2:94639:94652	3456349	0	True				
ANR	3456353	IdentifierDecl	i		3456349	0					
ANR	3456354	IdentifierDeclType	int		3456349	0					
ANR	3456355	Identifier	i		3456349	1					
ANR	3456356	IdentifierDecl	j		3456349	1					
ANR	3456357	IdentifierDeclType	int		3456349	0					
ANR	3456358	Identifier	j		3456349	1					
ANR	3456359	IdentifierDecl	len		3456349	2					
ANR	3456360	IdentifierDeclType	int		3456349	0					
ANR	3456361	Identifier	len		3456349	1					
ANR	3456362	IdentifierDeclStatement	UChar * p ;	4235:2:94656:94664	3456349	1	True				
ANR	3456363	IdentifierDecl	* p		3456349	0					
ANR	3456364	IdentifierDeclType	UChar *		3456349	0					
ANR	3456365	Identifier	p		3456349	1					
ANR	3456366	ForStatement	"for ( i = to -> len , p = s ; p < end && i < OPT_EXACT_MAXLEN ; )"		3456349	2					
ANR	3456367	ForInit	"i = to -> len , p = s ;"	4237:7:94674:94692	3456349	0	True				
ANR	3456368	Expression	"i = to -> len , p = s"		3456349	0					
ANR	3456369	AssignmentExpression	i = to -> len		3456349	0		=			
ANR	3456370	Identifier	i		3456349	0					
ANR	3456371	PtrMemberAccess	to -> len		3456349	1					
ANR	3456372	Identifier	to		3456349	0					
ANR	3456373	Identifier	len		3456349	1					
ANR	3456374	AssignmentExpression	p = s		3456349	1		=			
ANR	3456375	Identifier	p		3456349	0					
ANR	3456376	Identifier	s		3456349	1					
ANR	3456377	Condition	p < end && i < OPT_EXACT_MAXLEN	4237:27:94694:94724	3456349	1	True				
ANR	3456378	AndExpression	p < end && i < OPT_EXACT_MAXLEN		3456349	0		&&			
ANR	3456379	RelationalExpression	p < end		3456349	0		<			
ANR	3456380	Identifier	p		3456349	0					
ANR	3456381	Identifier	end		3456349	1					
ANR	3456382	RelationalExpression	i < OPT_EXACT_MAXLEN		3456349	1		<			
ANR	3456383	Identifier	i		3456349	0					
ANR	3456384	Identifier	OPT_EXACT_MAXLEN		3456349	1					
ANR	3456385	CompoundStatement		5:62:93:93	3456349	2					
ANR	3456386	ExpressionStatement	"len = enclen ( enc , p )"	4238:4:94735:94755	3456349	0	True				
ANR	3456387	AssignmentExpression	"len = enclen ( enc , p )"		3456349	0		=			
ANR	3456388	Identifier	len		3456349	0					
ANR	3456389	CallExpression	"enclen ( enc , p )"		3456349	1					
ANR	3456390	Callee	enclen		3456349	0					
ANR	3456391	Identifier	enclen		3456349	0					
ANR	3456392	ArgumentList	enc		3456349	1					
ANR	3456393	Argument	enc		3456349	0					
ANR	3456394	Identifier	enc		3456349	0					
ANR	3456395	Argument	p		3456349	1					
ANR	3456396	Identifier	p		3456349	0					
ANR	3456397	IfStatement	if ( i + len > OPT_EXACT_MAXLEN )		3456349	1					
ANR	3456398	Condition	i + len > OPT_EXACT_MAXLEN	4239:8:94765:94790	3456349	0	True				
ANR	3456399	RelationalExpression	i + len > OPT_EXACT_MAXLEN		3456349	0		>			
ANR	3456400	AdditiveExpression	i + len		3456349	0		+			
ANR	3456401	Identifier	i		3456349	0					
ANR	3456402	Identifier	len		3456349	1					
ANR	3456403	Identifier	OPT_EXACT_MAXLEN		3456349	1					
ANR	3456404	BreakStatement	break ;	4239:36:94793:94798	3456349	1	True				
ANR	3456405	ForStatement	for ( j = 0 ; j < len && p < end ; j ++ )		3456349	2					
ANR	3456406	ForInit	j = 0 ;	4240:9:94809:94814	3456349	0	True				
ANR	3456407	AssignmentExpression	j = 0		3456349	0		=			
ANR	3456408	Identifier	j		3456349	0					
ANR	3456409	PrimaryExpression	0		3456349	1					
ANR	3456410	Condition	j < len && p < end	4240:16:94816:94833	3456349	1	True				
ANR	3456411	AndExpression	j < len && p < end		3456349	0		&&			
ANR	3456412	RelationalExpression	j < len		3456349	0		<			
ANR	3456413	Identifier	j		3456349	0					
ANR	3456414	Identifier	len		3456349	1					
ANR	3456415	RelationalExpression	p < end		3456349	1		<			
ANR	3456416	Identifier	p		3456349	0					
ANR	3456417	Identifier	end		3456349	1					
ANR	3456418	PostIncDecOperationExpression	j ++	4240:36:94836:94838	3456349	2	True				
ANR	3456419	Identifier	j		3456349	0					
ANR	3456420	IncDec	++		3456349	1					
ANR	3456421	ExpressionStatement	to -> s [ i ++ ] = * p ++	4241:6:94847:94864	3456349	3	True				
ANR	3456422	AssignmentExpression	to -> s [ i ++ ] = * p ++		3456349	0		=			
ANR	3456423	ArrayIndexing	to -> s [ i ++ ]		3456349	0					
ANR	3456424	PtrMemberAccess	to -> s		3456349	0					
ANR	3456425	Identifier	to		3456349	0					
ANR	3456426	Identifier	s		3456349	1					
ANR	3456427	PostIncDecOperationExpression	i ++		3456349	1					
ANR	3456428	Identifier	i		3456349	0					
ANR	3456429	IncDec	++		3456349	1					
ANR	3456430	UnaryOperationExpression	* p ++		3456349	1					
ANR	3456431	UnaryOperator	*		3456349	0					
ANR	3456432	PostIncDecOperationExpression	p ++		3456349	1					
ANR	3456433	Identifier	p		3456349	0					
ANR	3456434	IncDec	++		3456349	1					
ANR	3456435	ExpressionStatement	to -> len = i	4244:2:94873:94884	3456349	3	True				
ANR	3456436	AssignmentExpression	to -> len = i		3456349	0		=			
ANR	3456437	PtrMemberAccess	to -> len		3456349	0					
ANR	3456438	Identifier	to		3456349	0					
ANR	3456439	Identifier	len		3456349	1					
ANR	3456440	Identifier	i		3456349	1					
ANR	3456441	ReturnType	static void		3456349	1					
ANR	3456442	Identifier	concat_opt_exact_info_str		3456349	2					
ANR	3456443	ParameterList	"OptExactInfo * to , UChar * s , UChar * end , int raw ARG_UNUSED , OnigEncoding enc"		3456349	3					
ANR	3456444	Parameter	OptExactInfo * to	4231:26:94552:94567	3456349	0	True				
ANR	3456445	ParameterType	OptExactInfo *		3456349	0					
ANR	3456446	Identifier	to		3456349	1					
ANR	3456447	Parameter	UChar * s	4231:44:94570:94577	3456349	1	True				
ANR	3456448	ParameterType	UChar *		3456349	0					
ANR	3456449	Identifier	s		3456349	1					
ANR	3456450	Parameter	UChar * end	4231:54:94580:94589	3456349	2	True				
ANR	3456451	ParameterType	UChar *		3456349	0					
ANR	3456452	Identifier	end		3456349	1					
ANR	3456453	Parameter	int raw ARG_UNUSED	4232:5:94597:94614	3456349	3	True				
ANR	3456454	ParameterType	int raw		3456349	0					
ANR	3456455	Identifier	ARG_UNUSED		3456349	1					
ANR	3456456	Parameter	OnigEncoding enc	4232:25:94617:94632	3456349	4	True				
ANR	3456457	ParameterType	OnigEncoding		3456349	0					
ANR	3456458	Identifier	enc		3456349	1					
ANR	3456459	CFGEntryNode	ENTRY		3456349		True				
ANR	3456460	CFGExitNode	EXIT		3456349		True				
ANR	3456461	Symbol	OPT_EXACT_MAXLEN		3456349						
ANR	3456462	Symbol	* to		3456349						
ANR	3456463	Symbol	* * to		3456349						
ANR	3456464	Symbol	* to -> s		3456349						
ANR	3456465	Symbol	* p ++		3456349						
ANR	3456466	Symbol	i		3456349						
ANR	3456467	Symbol	j		3456349						
ANR	3456468	Symbol	ARG_UNUSED		3456349						
ANR	3456469	Symbol	enclen		3456349						
ANR	3456470	Symbol	p		3456349						
ANR	3456471	Symbol	s		3456349						
ANR	3456472	Symbol	len		3456349						
ANR	3456473	Symbol	end		3456349						
ANR	3456474	Symbol	to		3456349						
ANR	3456475	Symbol	enc		3456349						
ANR	3456476	Symbol	to -> len		3456349						
ANR	3456477	Symbol	to -> s		3456349						
ANR	3456478	Function	alt_merge_opt_exact_info	4247:0:94889:95661							
ANR	3456479	FunctionDef	"alt_merge_opt_exact_info (OptExactInfo * to , OptExactInfo * add , OptEnv * env)"		3456478	0					
ANR	3456480	CompoundStatement		4249:0:94976:95661	3456478	0					
ANR	3456481	IdentifierDeclStatement	"int i , j , len ;"	4250:2:94980:94993	3456478	0	True				
ANR	3456482	IdentifierDecl	i		3456478	0					
ANR	3456483	IdentifierDeclType	int		3456478	0					
ANR	3456484	Identifier	i		3456478	1					
ANR	3456485	IdentifierDecl	j		3456478	1					
ANR	3456486	IdentifierDeclType	int		3456478	0					
ANR	3456487	Identifier	j		3456478	1					
ANR	3456488	IdentifierDecl	len		3456478	2					
ANR	3456489	IdentifierDeclType	int		3456478	0					
ANR	3456490	Identifier	len		3456478	1					
ANR	3456491	IfStatement	if ( add -> len == 0 || to -> len == 0 )		3456478	1					
ANR	3456492	Condition	add -> len == 0 || to -> len == 0	4252:6:95002:95030	3456478	0	True				
ANR	3456493	OrExpression	add -> len == 0 || to -> len == 0		3456478	0		||			
ANR	3456494	EqualityExpression	add -> len == 0		3456478	0		==			
ANR	3456495	PtrMemberAccess	add -> len		3456478	0					
ANR	3456496	Identifier	add		3456478	0					
ANR	3456497	Identifier	len		3456478	1					
ANR	3456498	PrimaryExpression	0		3456478	1					
ANR	3456499	EqualityExpression	to -> len == 0		3456478	1		==			
ANR	3456500	PtrMemberAccess	to -> len		3456478	0					
ANR	3456501	Identifier	to		3456478	0					
ANR	3456502	Identifier	len		3456478	1					
ANR	3456503	PrimaryExpression	0		3456478	1					
ANR	3456504	CompoundStatement		4:37:56:56	3456478	1					
ANR	3456505	ExpressionStatement	clear_opt_exact_info ( to )	4253:4:95039:95063	3456478	0	True				
ANR	3456506	CallExpression	clear_opt_exact_info ( to )		3456478	0					
ANR	3456507	Callee	clear_opt_exact_info		3456478	0					
ANR	3456508	Identifier	clear_opt_exact_info		3456478	0					
ANR	3456509	ArgumentList	to		3456478	1					
ANR	3456510	Argument	to		3456478	0					
ANR	3456511	Identifier	to		3456478	0					
ANR	3456512	ReturnStatement	return ;	4254:4:95069:95076	3456478	1	True				
ANR	3456513	IfStatement	"if ( ! is_equal_mml ( & to -> mmd , & add -> mmd ) )"		3456478	2					
ANR	3456514	Condition	"! is_equal_mml ( & to -> mmd , & add -> mmd )"	4257:6:95089:95123	3456478	0	True				
ANR	3456515	UnaryOperationExpression	"! is_equal_mml ( & to -> mmd , & add -> mmd )"		3456478	0					
ANR	3456516	UnaryOperator	!		3456478	0					
ANR	3456517	CallExpression	"is_equal_mml ( & to -> mmd , & add -> mmd )"		3456478	1					
ANR	3456518	Callee	is_equal_mml		3456478	0					
ANR	3456519	Identifier	is_equal_mml		3456478	0					
ANR	3456520	ArgumentList	& to -> mmd		3456478	1					
ANR	3456521	Argument	& to -> mmd		3456478	0					
ANR	3456522	UnaryOperationExpression	& to -> mmd		3456478	0					
ANR	3456523	UnaryOperator	&		3456478	0					
ANR	3456524	PtrMemberAccess	to -> mmd		3456478	1					
ANR	3456525	Identifier	to		3456478	0					
ANR	3456526	Identifier	mmd		3456478	1					
ANR	3456527	Argument	& add -> mmd		3456478	1					
ANR	3456528	UnaryOperationExpression	& add -> mmd		3456478	0					
ANR	3456529	UnaryOperator	&		3456478	0					
ANR	3456530	PtrMemberAccess	add -> mmd		3456478	1					
ANR	3456531	Identifier	add		3456478	0					
ANR	3456532	Identifier	mmd		3456478	1					
ANR	3456533	CompoundStatement		9:43:149:149	3456478	1					
ANR	3456534	ExpressionStatement	clear_opt_exact_info ( to )	4258:4:95132:95156	3456478	0	True				
ANR	3456535	CallExpression	clear_opt_exact_info ( to )		3456478	0					
ANR	3456536	Callee	clear_opt_exact_info		3456478	0					
ANR	3456537	Identifier	clear_opt_exact_info		3456478	0					
ANR	3456538	ArgumentList	to		3456478	1					
ANR	3456539	Argument	to		3456478	0					
ANR	3456540	Identifier	to		3456478	0					
ANR	3456541	ReturnStatement	return ;	4259:4:95162:95169	3456478	1	True				
ANR	3456542	ForStatement	for ( i = 0 ; i < to -> len && i < add -> len ; )		3456478	3					
ANR	3456543	ForInit	i = 0 ;	4262:7:95183:95188	3456478	0	True				
ANR	3456544	AssignmentExpression	i = 0		3456478	0		=			
ANR	3456545	Identifier	i		3456478	0					
ANR	3456546	PrimaryExpression	0		3456478	1					
ANR	3456547	Condition	i < to -> len && i < add -> len	4262:14:95190:95216	3456478	1	True				
ANR	3456548	AndExpression	i < to -> len && i < add -> len		3456478	0		&&			
ANR	3456549	RelationalExpression	i < to -> len		3456478	0		<			
ANR	3456550	Identifier	i		3456478	0					
ANR	3456551	PtrMemberAccess	to -> len		3456478	1					
ANR	3456552	Identifier	to		3456478	0					
ANR	3456553	Identifier	len		3456478	1					
ANR	3456554	RelationalExpression	i < add -> len		3456478	1		<			
ANR	3456555	Identifier	i		3456478	0					
ANR	3456556	PtrMemberAccess	add -> len		3456478	1					
ANR	3456557	Identifier	add		3456478	0					
ANR	3456558	Identifier	len		3456478	1					
ANR	3456559	CompoundStatement		14:45:244:244	3456478	2					
ANR	3456560	IfStatement	if ( to -> s [ i ] != add -> s [ i ] )		3456478	0					
ANR	3456561	Condition	to -> s [ i ] != add -> s [ i ]	4263:8:95231:95251	3456478	0	True				
ANR	3456562	EqualityExpression	to -> s [ i ] != add -> s [ i ]		3456478	0		!=			
ANR	3456563	ArrayIndexing	to -> s [ i ]		3456478	0					
ANR	3456564	PtrMemberAccess	to -> s		3456478	0					
ANR	3456565	Identifier	to		3456478	0					
ANR	3456566	Identifier	s		3456478	1					
ANR	3456567	Identifier	i		3456478	1					
ANR	3456568	ArrayIndexing	add -> s [ i ]		3456478	1					
ANR	3456569	PtrMemberAccess	add -> s		3456478	0					
ANR	3456570	Identifier	add		3456478	0					
ANR	3456571	Identifier	s		3456478	1					
ANR	3456572	Identifier	i		3456478	1					
ANR	3456573	BreakStatement	break ;	4263:31:95254:95259	3456478	1	True				
ANR	3456574	ExpressionStatement	"len = enclen ( env -> enc , to -> s + i )"	4264:4:95265:95298	3456478	1	True				
ANR	3456575	AssignmentExpression	"len = enclen ( env -> enc , to -> s + i )"		3456478	0		=			
ANR	3456576	Identifier	len		3456478	0					
ANR	3456577	CallExpression	"enclen ( env -> enc , to -> s + i )"		3456478	1					
ANR	3456578	Callee	enclen		3456478	0					
ANR	3456579	Identifier	enclen		3456478	0					
ANR	3456580	ArgumentList	env -> enc		3456478	1					
ANR	3456581	Argument	env -> enc		3456478	0					
ANR	3456582	PtrMemberAccess	env -> enc		3456478	0					
ANR	3456583	Identifier	env		3456478	0					
ANR	3456584	Identifier	enc		3456478	1					
ANR	3456585	Argument	to -> s + i		3456478	1					
ANR	3456586	AdditiveExpression	to -> s + i		3456478	0		+			
ANR	3456587	PtrMemberAccess	to -> s		3456478	0					
ANR	3456588	Identifier	to		3456478	0					
ANR	3456589	Identifier	s		3456478	1					
ANR	3456590	Identifier	i		3456478	1					
ANR	3456591	ForStatement	for ( j = 1 ; j < len ; j ++ )		3456478	2					
ANR	3456592	ForInit	j = 1 ;	4266:9:95310:95315	3456478	0	True				
ANR	3456593	AssignmentExpression	j = 1		3456478	0		=			
ANR	3456594	Identifier	j		3456478	0					
ANR	3456595	PrimaryExpression	1		3456478	1					
ANR	3456596	Condition	j < len	4266:16:95317:95323	3456478	1	True				
ANR	3456597	RelationalExpression	j < len		3456478	0		<			
ANR	3456598	Identifier	j		3456478	0					
ANR	3456599	Identifier	len		3456478	1					
ANR	3456600	PostIncDecOperationExpression	j ++	4266:25:95326:95328	3456478	2	True				
ANR	3456601	Identifier	j		3456478	0					
ANR	3456602	IncDec	++		3456478	1					
ANR	3456603	CompoundStatement		18:30:354:354	3456478	3					
ANR	3456604	IfStatement	if ( to -> s [ i + j ] != add -> s [ i + j ] )		3456478	0					
ANR	3456605	Condition	to -> s [ i + j ] != add -> s [ i + j ]	4267:10:95343:95367	3456478	0	True				
ANR	3456606	EqualityExpression	to -> s [ i + j ] != add -> s [ i + j ]		3456478	0		!=			
ANR	3456607	ArrayIndexing	to -> s [ i + j ]		3456478	0					
ANR	3456608	PtrMemberAccess	to -> s		3456478	0					
ANR	3456609	Identifier	to		3456478	0					
ANR	3456610	Identifier	s		3456478	1					
ANR	3456611	AdditiveExpression	i + j		3456478	1		+			
ANR	3456612	Identifier	i		3456478	0					
ANR	3456613	Identifier	j		3456478	1					
ANR	3456614	ArrayIndexing	add -> s [ i + j ]		3456478	1					
ANR	3456615	PtrMemberAccess	add -> s		3456478	0					
ANR	3456616	Identifier	add		3456478	0					
ANR	3456617	Identifier	s		3456478	1					
ANR	3456618	AdditiveExpression	i + j		3456478	1		+			
ANR	3456619	Identifier	i		3456478	0					
ANR	3456620	Identifier	j		3456478	1					
ANR	3456621	BreakStatement	break ;	4267:37:95370:95375	3456478	1	True				
ANR	3456622	IfStatement	if ( j < len )		3456478	3					
ANR	3456623	Condition	j < len	4269:8:95391:95397	3456478	0	True				
ANR	3456624	RelationalExpression	j < len		3456478	0		<			
ANR	3456625	Identifier	j		3456478	0					
ANR	3456626	Identifier	len		3456478	1					
ANR	3456627	BreakStatement	break ;	4269:17:95400:95405	3456478	1	True				
ANR	3456628	ExpressionStatement	i += len	4270:4:95411:95419	3456478	4	True				
ANR	3456629	AssignmentExpression	i += len		3456478	0		+=			
ANR	3456630	Identifier	i		3456478	0					
ANR	3456631	Identifier	len		3456478	1					
ANR	3456632	IfStatement	if ( ! add -> reach_end || i < add -> len || i < to -> len )		3456478	4					
ANR	3456633	Condition	! add -> reach_end || i < add -> len || i < to -> len	4273:6:95432:95478	3456478	0	True				
ANR	3456634	OrExpression	! add -> reach_end || i < add -> len || i < to -> len		3456478	0		||			
ANR	3456635	UnaryOperationExpression	! add -> reach_end		3456478	0					
ANR	3456636	UnaryOperator	!		3456478	0					
ANR	3456637	PtrMemberAccess	add -> reach_end		3456478	1					
ANR	3456638	Identifier	add		3456478	0					
ANR	3456639	Identifier	reach_end		3456478	1					
ANR	3456640	OrExpression	i < add -> len || i < to -> len		3456478	1		||			
ANR	3456641	RelationalExpression	i < add -> len		3456478	0		<			
ANR	3456642	Identifier	i		3456478	0					
ANR	3456643	PtrMemberAccess	add -> len		3456478	1					
ANR	3456644	Identifier	add		3456478	0					
ANR	3456645	Identifier	len		3456478	1					
ANR	3456646	RelationalExpression	i < to -> len		3456478	1		<			
ANR	3456647	Identifier	i		3456478	0					
ANR	3456648	PtrMemberAccess	to -> len		3456478	1					
ANR	3456649	Identifier	to		3456478	0					
ANR	3456650	Identifier	len		3456478	1					
ANR	3456651	CompoundStatement		25:55:504:504	3456478	1					
ANR	3456652	ExpressionStatement	to -> reach_end = 0	4274:4:95487:95504	3456478	0	True				
ANR	3456653	AssignmentExpression	to -> reach_end = 0		3456478	0		=			
ANR	3456654	PtrMemberAccess	to -> reach_end		3456478	0					
ANR	3456655	Identifier	to		3456478	0					
ANR	3456656	Identifier	reach_end		3456478	1					
ANR	3456657	PrimaryExpression	0		3456478	1					
ANR	3456658	ExpressionStatement	to -> len = i	4276:2:95512:95523	3456478	5	True				
ANR	3456659	AssignmentExpression	to -> len = i		3456478	0		=			
ANR	3456660	PtrMemberAccess	to -> len		3456478	0					
ANR	3456661	Identifier	to		3456478	0					
ANR	3456662	Identifier	len		3456478	1					
ANR	3456663	Identifier	i		3456478	1					
ANR	3456664	ExpressionStatement	to -> ignore_case |= add -> ignore_case	4277:2:95527:95562	3456478	6	True				
ANR	3456665	AssignmentExpression	to -> ignore_case |= add -> ignore_case		3456478	0		|=			
ANR	3456666	PtrMemberAccess	to -> ignore_case		3456478	0					
ANR	3456667	Identifier	to		3456478	0					
ANR	3456668	Identifier	ignore_case		3456478	1					
ANR	3456669	PtrMemberAccess	add -> ignore_case		3456478	1					
ANR	3456670	Identifier	add		3456478	0					
ANR	3456671	Identifier	ignore_case		3456478	1					
ANR	3456672	ExpressionStatement	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"	4279:2:95567:95610	3456478	7	True				
ANR	3456673	CallExpression	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"		3456478	0					
ANR	3456674	Callee	alt_merge_opt_anc_info		3456478	0					
ANR	3456675	Identifier	alt_merge_opt_anc_info		3456478	0					
ANR	3456676	ArgumentList	& to -> anc		3456478	1					
ANR	3456677	Argument	& to -> anc		3456478	0					
ANR	3456678	UnaryOperationExpression	& to -> anc		3456478	0					
ANR	3456679	UnaryOperator	&		3456478	0					
ANR	3456680	PtrMemberAccess	to -> anc		3456478	1					
ANR	3456681	Identifier	to		3456478	0					
ANR	3456682	Identifier	anc		3456478	1					
ANR	3456683	Argument	& add -> anc		3456478	1					
ANR	3456684	UnaryOperationExpression	& add -> anc		3456478	0					
ANR	3456685	UnaryOperator	&		3456478	0					
ANR	3456686	PtrMemberAccess	add -> anc		3456478	1					
ANR	3456687	Identifier	add		3456478	0					
ANR	3456688	Identifier	anc		3456478	1					
ANR	3456689	IfStatement	if ( ! to -> reach_end )		3456478	8					
ANR	3456690	Condition	! to -> reach_end	4280:6:95618:95632	3456478	0	True				
ANR	3456691	UnaryOperationExpression	! to -> reach_end		3456478	0					
ANR	3456692	UnaryOperator	!		3456478	0					
ANR	3456693	PtrMemberAccess	to -> reach_end		3456478	1					
ANR	3456694	Identifier	to		3456478	0					
ANR	3456695	Identifier	reach_end		3456478	1					
ANR	3456696	ExpressionStatement	to -> anc . right_anchor = 0	4280:23:95635:95659	3456478	1	True				
ANR	3456697	AssignmentExpression	to -> anc . right_anchor = 0		3456478	0		=			
ANR	3456698	MemberAccess	to -> anc . right_anchor		3456478	0					
ANR	3456699	PtrMemberAccess	to -> anc		3456478	0					
ANR	3456700	Identifier	to		3456478	0					
ANR	3456701	Identifier	anc		3456478	1					
ANR	3456702	Identifier	right_anchor		3456478	1					
ANR	3456703	PrimaryExpression	0		3456478	1					
ANR	3456704	ReturnType	static void		3456478	1					
ANR	3456705	Identifier	alt_merge_opt_exact_info		3456478	2					
ANR	3456706	ParameterList	"OptExactInfo * to , OptExactInfo * add , OptEnv * env"		3456478	3					
ANR	3456707	Parameter	OptExactInfo * to	4248:25:94926:94941	3456478	0	True				
ANR	3456708	ParameterType	OptExactInfo *		3456478	0					
ANR	3456709	Identifier	to		3456478	1					
ANR	3456710	Parameter	OptExactInfo * add	4248:43:94944:94960	3456478	1	True				
ANR	3456711	ParameterType	OptExactInfo *		3456478	0					
ANR	3456712	Identifier	add		3456478	1					
ANR	3456713	Parameter	OptEnv * env	4248:62:94963:94973	3456478	2	True				
ANR	3456714	ParameterType	OptEnv *		3456478	0					
ANR	3456715	Identifier	env		3456478	1					
ANR	3456716	CFGEntryNode	ENTRY		3456478		True				
ANR	3456717	CFGExitNode	EXIT		3456478		True				
ANR	3456718	Symbol	to -> reach_end		3456478						
ANR	3456719	Symbol	* add -> s		3456478						
ANR	3456720	Symbol	to -> anc		3456478						
ANR	3456721	Symbol	& add -> anc		3456478						
ANR	3456722	Symbol	env -> enc		3456478						
ANR	3456723	Symbol	add -> ignore_case		3456478						
ANR	3456724	Symbol	add -> reach_end		3456478						
ANR	3456725	Symbol	len		3456478						
ANR	3456726	Symbol	add -> len		3456478						
ANR	3456727	Symbol	to -> len		3456478						
ANR	3456728	Symbol	to -> s		3456478						
ANR	3456729	Symbol	add -> s		3456478						
ANR	3456730	Symbol	add		3456478						
ANR	3456731	Symbol	* to		3456478						
ANR	3456732	Symbol	& to -> anc		3456478						
ANR	3456733	Symbol	* * to		3456478						
ANR	3456734	Symbol	* to -> s		3456478						
ANR	3456735	Symbol	* env		3456478						
ANR	3456736	Symbol	i		3456478						
ANR	3456737	Symbol	j		3456478						
ANR	3456738	Symbol	& add -> mmd		3456478						
ANR	3456739	Symbol	env		3456478						
ANR	3456740	Symbol	enclen		3456478						
ANR	3456741	Symbol	to -> ignore_case		3456478						
ANR	3456742	Symbol	is_equal_mml		3456478						
ANR	3456743	Symbol	& to -> mmd		3456478						
ANR	3456744	Symbol	* i		3456478						
ANR	3456745	Symbol	* add		3456478						
ANR	3456746	Symbol	* j		3456478						
ANR	3456747	Symbol	* * add		3456478						
ANR	3456748	Symbol	to		3456478						
ANR	3456749	Symbol	to -> anc . right_anchor		3456478						
ANR	3456750	Function	select_opt_exact_info	4283:0:95664:96331							
ANR	3456751	FunctionDef	"select_opt_exact_info (OnigEncoding enc , OptExactInfo * now , OptExactInfo * alt)"		3456750	0					
ANR	3456752	CompoundStatement		4285:0:95754:96331	3456750	0					
ANR	3456753	IdentifierDeclStatement	"int v1 , v2 ;"	4286:2:95758:95768	3456750	0	True				
ANR	3456754	IdentifierDecl	v1		3456750	0					
ANR	3456755	IdentifierDeclType	int		3456750	0					
ANR	3456756	Identifier	v1		3456750	1					
ANR	3456757	IdentifierDecl	v2		3456750	1					
ANR	3456758	IdentifierDeclType	int		3456750	0					
ANR	3456759	Identifier	v2		3456750	1					
ANR	3456760	ExpressionStatement	v1 = now -> len	4288:2:95773:95786	3456750	1	True				
ANR	3456761	AssignmentExpression	v1 = now -> len		3456750	0		=			
ANR	3456762	Identifier	v1		3456750	0					
ANR	3456763	PtrMemberAccess	now -> len		3456750	1					
ANR	3456764	Identifier	now		3456750	0					
ANR	3456765	Identifier	len		3456750	1					
ANR	3456766	ExpressionStatement	v2 = alt -> len	4289:2:95790:95803	3456750	2	True				
ANR	3456767	AssignmentExpression	v2 = alt -> len		3456750	0		=			
ANR	3456768	Identifier	v2		3456750	0					
ANR	3456769	PtrMemberAccess	alt -> len		3456750	1					
ANR	3456770	Identifier	alt		3456750	0					
ANR	3456771	Identifier	len		3456750	1					
ANR	3456772	IfStatement	if ( v2 == 0 )		3456750	3					
ANR	3456773	Condition	v2 == 0	4291:6:95812:95818	3456750	0	True				
ANR	3456774	EqualityExpression	v2 == 0		3456750	0		==			
ANR	3456775	Identifier	v2		3456750	0					
ANR	3456776	PrimaryExpression	0		3456750	1					
ANR	3456777	CompoundStatement		7:15:66:66	3456750	1					
ANR	3456778	ReturnStatement	return ;	4292:4:95827:95834	3456750	0	True				
ANR	3456779	ElseStatement	else		3456750	0					
ANR	3456780	IfStatement	if ( v1 == 0 )		3456750	0					
ANR	3456781	Condition	v1 == 0	4294:11:95851:95857	3456750	0	True				
ANR	3456782	EqualityExpression	v1 == 0		3456750	0		==			
ANR	3456783	Identifier	v1		3456750	0					
ANR	3456784	PrimaryExpression	0		3456750	1					
ANR	3456785	CompoundStatement		10:20:105:105	3456750	1					
ANR	3456786	ExpressionStatement	"copy_opt_exact_info ( now , alt )"	4295:4:95866:95895	3456750	0	True				
ANR	3456787	CallExpression	"copy_opt_exact_info ( now , alt )"		3456750	0					
ANR	3456788	Callee	copy_opt_exact_info		3456750	0					
ANR	3456789	Identifier	copy_opt_exact_info		3456750	0					
ANR	3456790	ArgumentList	now		3456750	1					
ANR	3456791	Argument	now		3456750	0					
ANR	3456792	Identifier	now		3456750	0					
ANR	3456793	Argument	alt		3456750	1					
ANR	3456794	Identifier	alt		3456750	0					
ANR	3456795	ReturnStatement	return ;	4296:4:95901:95908	3456750	1	True				
ANR	3456796	ElseStatement	else		3456750	0					
ANR	3456797	IfStatement	if ( v1 <= 2 && v2 <= 2 )		3456750	0					
ANR	3456798	Condition	v1 <= 2 && v2 <= 2	4298:11:95925:95942	3456750	0	True				
ANR	3456799	AndExpression	v1 <= 2 && v2 <= 2		3456750	0		&&			
ANR	3456800	RelationalExpression	v1 <= 2		3456750	0		<=			
ANR	3456801	Identifier	v1		3456750	0					
ANR	3456802	PrimaryExpression	2		3456750	1					
ANR	3456803	RelationalExpression	v2 <= 2		3456750	1		<=			
ANR	3456804	Identifier	v2		3456750	0					
ANR	3456805	PrimaryExpression	2		3456750	1					
ANR	3456806	CompoundStatement		14:31:190:190	3456750	1					
ANR	3456807	ExpressionStatement	"v2 = map_position_value ( enc , now -> s [ 0 ] )"	4300:4:96004:96043	3456750	0	True				
ANR	3456808	AssignmentExpression	"v2 = map_position_value ( enc , now -> s [ 0 ] )"		3456750	0		=			
ANR	3456809	Identifier	v2		3456750	0					
ANR	3456810	CallExpression	"map_position_value ( enc , now -> s [ 0 ] )"		3456750	1					
ANR	3456811	Callee	map_position_value		3456750	0					
ANR	3456812	Identifier	map_position_value		3456750	0					
ANR	3456813	ArgumentList	enc		3456750	1					
ANR	3456814	Argument	enc		3456750	0					
ANR	3456815	Identifier	enc		3456750	0					
ANR	3456816	Argument	now -> s [ 0 ]		3456750	1					
ANR	3456817	ArrayIndexing	now -> s [ 0 ]		3456750	0					
ANR	3456818	PtrMemberAccess	now -> s		3456750	0					
ANR	3456819	Identifier	now		3456750	0					
ANR	3456820	Identifier	s		3456750	1					
ANR	3456821	PrimaryExpression	0		3456750	1					
ANR	3456822	ExpressionStatement	"v1 = map_position_value ( enc , alt -> s [ 0 ] )"	4301:4:96049:96088	3456750	1	True				
ANR	3456823	AssignmentExpression	"v1 = map_position_value ( enc , alt -> s [ 0 ] )"		3456750	0		=			
ANR	3456824	Identifier	v1		3456750	0					
ANR	3456825	CallExpression	"map_position_value ( enc , alt -> s [ 0 ] )"		3456750	1					
ANR	3456826	Callee	map_position_value		3456750	0					
ANR	3456827	Identifier	map_position_value		3456750	0					
ANR	3456828	ArgumentList	enc		3456750	1					
ANR	3456829	Argument	enc		3456750	0					
ANR	3456830	Identifier	enc		3456750	0					
ANR	3456831	Argument	alt -> s [ 0 ]		3456750	1					
ANR	3456832	ArrayIndexing	alt -> s [ 0 ]		3456750	0					
ANR	3456833	PtrMemberAccess	alt -> s		3456750	0					
ANR	3456834	Identifier	alt		3456750	0					
ANR	3456835	Identifier	s		3456750	1					
ANR	3456836	PrimaryExpression	0		3456750	1					
ANR	3456837	IfStatement	if ( now -> len > 1 )		3456750	2					
ANR	3456838	Condition	now -> len > 1	4303:8:96099:96110	3456750	0	True				
ANR	3456839	RelationalExpression	now -> len > 1		3456750	0		>			
ANR	3456840	PtrMemberAccess	now -> len		3456750	0					
ANR	3456841	Identifier	now		3456750	0					
ANR	3456842	Identifier	len		3456750	1					
ANR	3456843	PrimaryExpression	1		3456750	1					
ANR	3456844	ExpressionStatement	v1 += 5	4303:22:96113:96120	3456750	1	True				
ANR	3456845	AssignmentExpression	v1 += 5		3456750	0		+=			
ANR	3456846	Identifier	v1		3456750	0					
ANR	3456847	PrimaryExpression	5		3456750	1					
ANR	3456848	IfStatement	if ( alt -> len > 1 )		3456750	3					
ANR	3456849	Condition	alt -> len > 1	4304:8:96130:96141	3456750	0	True				
ANR	3456850	RelationalExpression	alt -> len > 1		3456750	0		>			
ANR	3456851	PtrMemberAccess	alt -> len		3456750	0					
ANR	3456852	Identifier	alt		3456750	0					
ANR	3456853	Identifier	len		3456750	1					
ANR	3456854	PrimaryExpression	1		3456750	1					
ANR	3456855	ExpressionStatement	v2 += 5	4304:22:96144:96151	3456750	1	True				
ANR	3456856	AssignmentExpression	v2 += 5		3456750	0		+=			
ANR	3456857	Identifier	v2		3456750	0					
ANR	3456858	PrimaryExpression	5		3456750	1					
ANR	3456859	IfStatement	if ( now -> ignore_case == 0 )		3456750	4					
ANR	3456860	Condition	now -> ignore_case == 0	4307:6:96164:96184	3456750	0	True				
ANR	3456861	EqualityExpression	now -> ignore_case == 0		3456750	0		==			
ANR	3456862	PtrMemberAccess	now -> ignore_case		3456750	0					
ANR	3456863	Identifier	now		3456750	0					
ANR	3456864	Identifier	ignore_case		3456750	1					
ANR	3456865	PrimaryExpression	0		3456750	1					
ANR	3456866	ExpressionStatement	v1 *= 2	4307:29:96187:96194	3456750	1	True				
ANR	3456867	AssignmentExpression	v1 *= 2		3456750	0		*=			
ANR	3456868	Identifier	v1		3456750	0					
ANR	3456869	PrimaryExpression	2		3456750	1					
ANR	3456870	IfStatement	if ( alt -> ignore_case == 0 )		3456750	5					
ANR	3456871	Condition	alt -> ignore_case == 0	4308:6:96202:96222	3456750	0	True				
ANR	3456872	EqualityExpression	alt -> ignore_case == 0		3456750	0		==			
ANR	3456873	PtrMemberAccess	alt -> ignore_case		3456750	0					
ANR	3456874	Identifier	alt		3456750	0					
ANR	3456875	Identifier	ignore_case		3456750	1					
ANR	3456876	PrimaryExpression	0		3456750	1					
ANR	3456877	ExpressionStatement	v2 *= 2	4308:29:96225:96232	3456750	1	True				
ANR	3456878	AssignmentExpression	v2 *= 2		3456750	0		*=			
ANR	3456879	Identifier	v2		3456750	0					
ANR	3456880	PrimaryExpression	2		3456750	1					
ANR	3456881	IfStatement	"if ( comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0 )"		3456750	6					
ANR	3456882	Condition	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"	4310:6:96241:96293	3456750	0	True				
ANR	3456883	RelationalExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"		3456750	0		>			
ANR	3456884	CallExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 )"		3456750	0					
ANR	3456885	Callee	comp_distance_value		3456750	0					
ANR	3456886	Identifier	comp_distance_value		3456750	0					
ANR	3456887	ArgumentList	& now -> mmd		3456750	1					
ANR	3456888	Argument	& now -> mmd		3456750	0					
ANR	3456889	UnaryOperationExpression	& now -> mmd		3456750	0					
ANR	3456890	UnaryOperator	&		3456750	0					
ANR	3456891	PtrMemberAccess	now -> mmd		3456750	1					
ANR	3456892	Identifier	now		3456750	0					
ANR	3456893	Identifier	mmd		3456750	1					
ANR	3456894	Argument	& alt -> mmd		3456750	1					
ANR	3456895	UnaryOperationExpression	& alt -> mmd		3456750	0					
ANR	3456896	UnaryOperator	&		3456750	0					
ANR	3456897	PtrMemberAccess	alt -> mmd		3456750	1					
ANR	3456898	Identifier	alt		3456750	0					
ANR	3456899	Identifier	mmd		3456750	1					
ANR	3456900	Argument	v1		3456750	2					
ANR	3456901	Identifier	v1		3456750	0					
ANR	3456902	Argument	v2		3456750	3					
ANR	3456903	Identifier	v2		3456750	0					
ANR	3456904	PrimaryExpression	0		3456750	1					
ANR	3456905	ExpressionStatement	"copy_opt_exact_info ( now , alt )"	4311:4:96300:96329	3456750	1	True				
ANR	3456906	CallExpression	"copy_opt_exact_info ( now , alt )"		3456750	0					
ANR	3456907	Callee	copy_opt_exact_info		3456750	0					
ANR	3456908	Identifier	copy_opt_exact_info		3456750	0					
ANR	3456909	ArgumentList	now		3456750	1					
ANR	3456910	Argument	now		3456750	0					
ANR	3456911	Identifier	now		3456750	0					
ANR	3456912	Argument	alt		3456750	1					
ANR	3456913	Identifier	alt		3456750	0					
ANR	3456914	ReturnType	static void		3456750	1					
ANR	3456915	Identifier	select_opt_exact_info		3456750	2					
ANR	3456916	ParameterList	"OnigEncoding enc , OptExactInfo * now , OptExactInfo * alt"		3456750	3					
ANR	3456917	Parameter	OnigEncoding enc	4284:22:95698:95713	3456750	0	True				
ANR	3456918	ParameterType	OnigEncoding		3456750	0					
ANR	3456919	Identifier	enc		3456750	1					
ANR	3456920	Parameter	OptExactInfo * now	4284:40:95716:95732	3456750	1	True				
ANR	3456921	ParameterType	OptExactInfo *		3456750	0					
ANR	3456922	Identifier	now		3456750	1					
ANR	3456923	Parameter	OptExactInfo * alt	4284:59:95735:95751	3456750	2	True				
ANR	3456924	ParameterType	OptExactInfo *		3456750	0					
ANR	3456925	Identifier	alt		3456750	1					
ANR	3456926	CFGEntryNode	ENTRY		3456750		True				
ANR	3456927	CFGExitNode	EXIT		3456750		True				
ANR	3456928	Symbol	* now		3456750						
ANR	3456929	Symbol	now -> len		3456750						
ANR	3456930	Symbol	map_position_value		3456750						
ANR	3456931	Symbol	comp_distance_value		3456750						
ANR	3456932	Symbol	* alt -> s		3456750						
ANR	3456933	Symbol	alt -> s		3456750						
ANR	3456934	Symbol	alt		3456750						
ANR	3456935	Symbol	* * now		3456750						
ANR	3456936	Symbol	alt -> ignore_case		3456750						
ANR	3456937	Symbol	* alt		3456750						
ANR	3456938	Symbol	now -> s		3456750						
ANR	3456939	Symbol	now -> ignore_case		3456750						
ANR	3456940	Symbol	now		3456750						
ANR	3456941	Symbol	enc		3456750						
ANR	3456942	Symbol	v1		3456750						
ANR	3456943	Symbol	alt -> len		3456750						
ANR	3456944	Symbol	v2		3456750						
ANR	3456945	Symbol	* now -> s		3456750						
ANR	3456946	Symbol	* * alt		3456750						
ANR	3456947	Symbol	& alt -> mmd		3456750						
ANR	3456948	Symbol	& now -> mmd		3456750						
ANR	3456949	Function	clear_opt_map_info	4314:0:96334:97378							
ANR	3456950	FunctionDef	clear_opt_map_info (OptMapInfo * map)		3456949	0					
ANR	3456951	CompoundStatement		4316:0:96382:97378	3456949	0					
ANR	3456952	Statement	static	4317:2:96386:96391	3456949	0	True				
ANR	3456953	IdentifierDeclStatement	"const OptMapInfo clean_info = { { 0 , 0 } , { 0 , 0 } , 0 , { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } } ;"	4317:9:96393:97326	3456949	1	True				
ANR	3456954	IdentifierDecl	"clean_info = { { 0 , 0 } , { 0 , 0 } , 0 , { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } }"		3456949	0					
ANR	3456955	IdentifierDeclType	const OptMapInfo		3456949	0					
ANR	3456956	Identifier	clean_info		3456949	1					
ANR	3456957	AssignmentExpression	"clean_info = { { 0 , 0 } , { 0 , 0 } , 0 , { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } }"		3456949	2		=			
ANR	3456958	Identifier	clean_info		3456949	0					
ANR	3456959	InitializerList	0		3456949	1					
ANR	3456960	InitializerList	0		3456949	0					
ANR	3456961	PrimaryExpression	0		3456949	0					
ANR	3456962	PrimaryExpression	0		3456949	1					
ANR	3456963	InitializerList	0		3456949	1					
ANR	3456964	PrimaryExpression	0		3456949	0					
ANR	3456965	PrimaryExpression	0		3456949	1					
ANR	3456966	PrimaryExpression	0		3456949	2					
ANR	3456967	InitializerList	0		3456949	3					
ANR	3456968	PrimaryExpression	0		3456949	0					
ANR	3456969	PrimaryExpression	0		3456949	1					
ANR	3456970	PrimaryExpression	0		3456949	2					
ANR	3456971	PrimaryExpression	0		3456949	3					
ANR	3456972	PrimaryExpression	0		3456949	4					
ANR	3456973	PrimaryExpression	0		3456949	5					
ANR	3456974	PrimaryExpression	0		3456949	6					
ANR	3456975	PrimaryExpression	0		3456949	7					
ANR	3456976	PrimaryExpression	0		3456949	8					
ANR	3456977	PrimaryExpression	0		3456949	9					
ANR	3456978	PrimaryExpression	0		3456949	10					
ANR	3456979	PrimaryExpression	0		3456949	11					
ANR	3456980	PrimaryExpression	0		3456949	12					
ANR	3456981	PrimaryExpression	0		3456949	13					
ANR	3456982	PrimaryExpression	0		3456949	14					
ANR	3456983	PrimaryExpression	0		3456949	15					
ANR	3456984	PrimaryExpression	0		3456949	16					
ANR	3456985	PrimaryExpression	0		3456949	17					
ANR	3456986	PrimaryExpression	0		3456949	18					
ANR	3456987	PrimaryExpression	0		3456949	19					
ANR	3456988	PrimaryExpression	0		3456949	20					
ANR	3456989	PrimaryExpression	0		3456949	21					
ANR	3456990	PrimaryExpression	0		3456949	22					
ANR	3456991	PrimaryExpression	0		3456949	23					
ANR	3456992	PrimaryExpression	0		3456949	24					
ANR	3456993	PrimaryExpression	0		3456949	25					
ANR	3456994	PrimaryExpression	0		3456949	26					
ANR	3456995	PrimaryExpression	0		3456949	27					
ANR	3456996	PrimaryExpression	0		3456949	28					
ANR	3456997	PrimaryExpression	0		3456949	29					
ANR	3456998	PrimaryExpression	0		3456949	30					
ANR	3456999	PrimaryExpression	0		3456949	31					
ANR	3457000	PrimaryExpression	0		3456949	32					
ANR	3457001	PrimaryExpression	0		3456949	33					
ANR	3457002	PrimaryExpression	0		3456949	34					
ANR	3457003	PrimaryExpression	0		3456949	35					
ANR	3457004	PrimaryExpression	0		3456949	36					
ANR	3457005	PrimaryExpression	0		3456949	37					
ANR	3457006	PrimaryExpression	0		3456949	38					
ANR	3457007	PrimaryExpression	0		3456949	39					
ANR	3457008	PrimaryExpression	0		3456949	40					
ANR	3457009	PrimaryExpression	0		3456949	41					
ANR	3457010	PrimaryExpression	0		3456949	42					
ANR	3457011	PrimaryExpression	0		3456949	43					
ANR	3457012	PrimaryExpression	0		3456949	44					
ANR	3457013	PrimaryExpression	0		3456949	45					
ANR	3457014	PrimaryExpression	0		3456949	46					
ANR	3457015	PrimaryExpression	0		3456949	47					
ANR	3457016	PrimaryExpression	0		3456949	48					
ANR	3457017	PrimaryExpression	0		3456949	49					
ANR	3457018	PrimaryExpression	0		3456949	50					
ANR	3457019	PrimaryExpression	0		3456949	51					
ANR	3457020	PrimaryExpression	0		3456949	52					
ANR	3457021	PrimaryExpression	0		3456949	53					
ANR	3457022	PrimaryExpression	0		3456949	54					
ANR	3457023	PrimaryExpression	0		3456949	55					
ANR	3457024	PrimaryExpression	0		3456949	56					
ANR	3457025	PrimaryExpression	0		3456949	57					
ANR	3457026	PrimaryExpression	0		3456949	58					
ANR	3457027	PrimaryExpression	0		3456949	59					
ANR	3457028	PrimaryExpression	0		3456949	60					
ANR	3457029	PrimaryExpression	0		3456949	61					
ANR	3457030	PrimaryExpression	0		3456949	62					
ANR	3457031	PrimaryExpression	0		3456949	63					
ANR	3457032	PrimaryExpression	0		3456949	64					
ANR	3457033	PrimaryExpression	0		3456949	65					
ANR	3457034	PrimaryExpression	0		3456949	66					
ANR	3457035	PrimaryExpression	0		3456949	67					
ANR	3457036	PrimaryExpression	0		3456949	68					
ANR	3457037	PrimaryExpression	0		3456949	69					
ANR	3457038	PrimaryExpression	0		3456949	70					
ANR	3457039	PrimaryExpression	0		3456949	71					
ANR	3457040	PrimaryExpression	0		3456949	72					
ANR	3457041	PrimaryExpression	0		3456949	73					
ANR	3457042	PrimaryExpression	0		3456949	74					
ANR	3457043	PrimaryExpression	0		3456949	75					
ANR	3457044	PrimaryExpression	0		3456949	76					
ANR	3457045	PrimaryExpression	0		3456949	77					
ANR	3457046	PrimaryExpression	0		3456949	78					
ANR	3457047	PrimaryExpression	0		3456949	79					
ANR	3457048	PrimaryExpression	0		3456949	80					
ANR	3457049	PrimaryExpression	0		3456949	81					
ANR	3457050	PrimaryExpression	0		3456949	82					
ANR	3457051	PrimaryExpression	0		3456949	83					
ANR	3457052	PrimaryExpression	0		3456949	84					
ANR	3457053	PrimaryExpression	0		3456949	85					
ANR	3457054	PrimaryExpression	0		3456949	86					
ANR	3457055	PrimaryExpression	0		3456949	87					
ANR	3457056	PrimaryExpression	0		3456949	88					
ANR	3457057	PrimaryExpression	0		3456949	89					
ANR	3457058	PrimaryExpression	0		3456949	90					
ANR	3457059	PrimaryExpression	0		3456949	91					
ANR	3457060	PrimaryExpression	0		3456949	92					
ANR	3457061	PrimaryExpression	0		3456949	93					
ANR	3457062	PrimaryExpression	0		3456949	94					
ANR	3457063	PrimaryExpression	0		3456949	95					
ANR	3457064	PrimaryExpression	0		3456949	96					
ANR	3457065	PrimaryExpression	0		3456949	97					
ANR	3457066	PrimaryExpression	0		3456949	98					
ANR	3457067	PrimaryExpression	0		3456949	99					
ANR	3457068	PrimaryExpression	0		3456949	100					
ANR	3457069	PrimaryExpression	0		3456949	101					
ANR	3457070	PrimaryExpression	0		3456949	102					
ANR	3457071	PrimaryExpression	0		3456949	103					
ANR	3457072	PrimaryExpression	0		3456949	104					
ANR	3457073	PrimaryExpression	0		3456949	105					
ANR	3457074	PrimaryExpression	0		3456949	106					
ANR	3457075	PrimaryExpression	0		3456949	107					
ANR	3457076	PrimaryExpression	0		3456949	108					
ANR	3457077	PrimaryExpression	0		3456949	109					
ANR	3457078	PrimaryExpression	0		3456949	110					
ANR	3457079	PrimaryExpression	0		3456949	111					
ANR	3457080	PrimaryExpression	0		3456949	112					
ANR	3457081	PrimaryExpression	0		3456949	113					
ANR	3457082	PrimaryExpression	0		3456949	114					
ANR	3457083	PrimaryExpression	0		3456949	115					
ANR	3457084	PrimaryExpression	0		3456949	116					
ANR	3457085	PrimaryExpression	0		3456949	117					
ANR	3457086	PrimaryExpression	0		3456949	118					
ANR	3457087	PrimaryExpression	0		3456949	119					
ANR	3457088	PrimaryExpression	0		3456949	120					
ANR	3457089	PrimaryExpression	0		3456949	121					
ANR	3457090	PrimaryExpression	0		3456949	122					
ANR	3457091	PrimaryExpression	0		3456949	123					
ANR	3457092	PrimaryExpression	0		3456949	124					
ANR	3457093	PrimaryExpression	0		3456949	125					
ANR	3457094	PrimaryExpression	0		3456949	126					
ANR	3457095	PrimaryExpression	0		3456949	127					
ANR	3457096	PrimaryExpression	0		3456949	128					
ANR	3457097	PrimaryExpression	0		3456949	129					
ANR	3457098	PrimaryExpression	0		3456949	130					
ANR	3457099	PrimaryExpression	0		3456949	131					
ANR	3457100	PrimaryExpression	0		3456949	132					
ANR	3457101	PrimaryExpression	0		3456949	133					
ANR	3457102	PrimaryExpression	0		3456949	134					
ANR	3457103	PrimaryExpression	0		3456949	135					
ANR	3457104	PrimaryExpression	0		3456949	136					
ANR	3457105	PrimaryExpression	0		3456949	137					
ANR	3457106	PrimaryExpression	0		3456949	138					
ANR	3457107	PrimaryExpression	0		3456949	139					
ANR	3457108	PrimaryExpression	0		3456949	140					
ANR	3457109	PrimaryExpression	0		3456949	141					
ANR	3457110	PrimaryExpression	0		3456949	142					
ANR	3457111	PrimaryExpression	0		3456949	143					
ANR	3457112	PrimaryExpression	0		3456949	144					
ANR	3457113	PrimaryExpression	0		3456949	145					
ANR	3457114	PrimaryExpression	0		3456949	146					
ANR	3457115	PrimaryExpression	0		3456949	147					
ANR	3457116	PrimaryExpression	0		3456949	148					
ANR	3457117	PrimaryExpression	0		3456949	149					
ANR	3457118	PrimaryExpression	0		3456949	150					
ANR	3457119	PrimaryExpression	0		3456949	151					
ANR	3457120	PrimaryExpression	0		3456949	152					
ANR	3457121	PrimaryExpression	0		3456949	153					
ANR	3457122	PrimaryExpression	0		3456949	154					
ANR	3457123	PrimaryExpression	0		3456949	155					
ANR	3457124	PrimaryExpression	0		3456949	156					
ANR	3457125	PrimaryExpression	0		3456949	157					
ANR	3457126	PrimaryExpression	0		3456949	158					
ANR	3457127	PrimaryExpression	0		3456949	159					
ANR	3457128	PrimaryExpression	0		3456949	160					
ANR	3457129	PrimaryExpression	0		3456949	161					
ANR	3457130	PrimaryExpression	0		3456949	162					
ANR	3457131	PrimaryExpression	0		3456949	163					
ANR	3457132	PrimaryExpression	0		3456949	164					
ANR	3457133	PrimaryExpression	0		3456949	165					
ANR	3457134	PrimaryExpression	0		3456949	166					
ANR	3457135	PrimaryExpression	0		3456949	167					
ANR	3457136	PrimaryExpression	0		3456949	168					
ANR	3457137	PrimaryExpression	0		3456949	169					
ANR	3457138	PrimaryExpression	0		3456949	170					
ANR	3457139	PrimaryExpression	0		3456949	171					
ANR	3457140	PrimaryExpression	0		3456949	172					
ANR	3457141	PrimaryExpression	0		3456949	173					
ANR	3457142	PrimaryExpression	0		3456949	174					
ANR	3457143	PrimaryExpression	0		3456949	175					
ANR	3457144	PrimaryExpression	0		3456949	176					
ANR	3457145	PrimaryExpression	0		3456949	177					
ANR	3457146	PrimaryExpression	0		3456949	178					
ANR	3457147	PrimaryExpression	0		3456949	179					
ANR	3457148	PrimaryExpression	0		3456949	180					
ANR	3457149	PrimaryExpression	0		3456949	181					
ANR	3457150	PrimaryExpression	0		3456949	182					
ANR	3457151	PrimaryExpression	0		3456949	183					
ANR	3457152	PrimaryExpression	0		3456949	184					
ANR	3457153	PrimaryExpression	0		3456949	185					
ANR	3457154	PrimaryExpression	0		3456949	186					
ANR	3457155	PrimaryExpression	0		3456949	187					
ANR	3457156	PrimaryExpression	0		3456949	188					
ANR	3457157	PrimaryExpression	0		3456949	189					
ANR	3457158	PrimaryExpression	0		3456949	190					
ANR	3457159	PrimaryExpression	0		3456949	191					
ANR	3457160	PrimaryExpression	0		3456949	192					
ANR	3457161	PrimaryExpression	0		3456949	193					
ANR	3457162	PrimaryExpression	0		3456949	194					
ANR	3457163	PrimaryExpression	0		3456949	195					
ANR	3457164	PrimaryExpression	0		3456949	196					
ANR	3457165	PrimaryExpression	0		3456949	197					
ANR	3457166	PrimaryExpression	0		3456949	198					
ANR	3457167	PrimaryExpression	0		3456949	199					
ANR	3457168	PrimaryExpression	0		3456949	200					
ANR	3457169	PrimaryExpression	0		3456949	201					
ANR	3457170	PrimaryExpression	0		3456949	202					
ANR	3457171	PrimaryExpression	0		3456949	203					
ANR	3457172	PrimaryExpression	0		3456949	204					
ANR	3457173	PrimaryExpression	0		3456949	205					
ANR	3457174	PrimaryExpression	0		3456949	206					
ANR	3457175	PrimaryExpression	0		3456949	207					
ANR	3457176	PrimaryExpression	0		3456949	208					
ANR	3457177	PrimaryExpression	0		3456949	209					
ANR	3457178	PrimaryExpression	0		3456949	210					
ANR	3457179	PrimaryExpression	0		3456949	211					
ANR	3457180	PrimaryExpression	0		3456949	212					
ANR	3457181	PrimaryExpression	0		3456949	213					
ANR	3457182	PrimaryExpression	0		3456949	214					
ANR	3457183	PrimaryExpression	0		3456949	215					
ANR	3457184	PrimaryExpression	0		3456949	216					
ANR	3457185	PrimaryExpression	0		3456949	217					
ANR	3457186	PrimaryExpression	0		3456949	218					
ANR	3457187	PrimaryExpression	0		3456949	219					
ANR	3457188	PrimaryExpression	0		3456949	220					
ANR	3457189	PrimaryExpression	0		3456949	221					
ANR	3457190	PrimaryExpression	0		3456949	222					
ANR	3457191	PrimaryExpression	0		3456949	223					
ANR	3457192	PrimaryExpression	0		3456949	224					
ANR	3457193	PrimaryExpression	0		3456949	225					
ANR	3457194	PrimaryExpression	0		3456949	226					
ANR	3457195	PrimaryExpression	0		3456949	227					
ANR	3457196	PrimaryExpression	0		3456949	228					
ANR	3457197	PrimaryExpression	0		3456949	229					
ANR	3457198	PrimaryExpression	0		3456949	230					
ANR	3457199	PrimaryExpression	0		3456949	231					
ANR	3457200	PrimaryExpression	0		3456949	232					
ANR	3457201	PrimaryExpression	0		3456949	233					
ANR	3457202	PrimaryExpression	0		3456949	234					
ANR	3457203	PrimaryExpression	0		3456949	235					
ANR	3457204	PrimaryExpression	0		3456949	236					
ANR	3457205	PrimaryExpression	0		3456949	237					
ANR	3457206	PrimaryExpression	0		3456949	238					
ANR	3457207	PrimaryExpression	0		3456949	239					
ANR	3457208	PrimaryExpression	0		3456949	240					
ANR	3457209	PrimaryExpression	0		3456949	241					
ANR	3457210	PrimaryExpression	0		3456949	242					
ANR	3457211	PrimaryExpression	0		3456949	243					
ANR	3457212	PrimaryExpression	0		3456949	244					
ANR	3457213	PrimaryExpression	0		3456949	245					
ANR	3457214	PrimaryExpression	0		3456949	246					
ANR	3457215	PrimaryExpression	0		3456949	247					
ANR	3457216	PrimaryExpression	0		3456949	248					
ANR	3457217	PrimaryExpression	0		3456949	249					
ANR	3457218	PrimaryExpression	0		3456949	250					
ANR	3457219	PrimaryExpression	0		3456949	251					
ANR	3457220	PrimaryExpression	0		3456949	252					
ANR	3457221	PrimaryExpression	0		3456949	253					
ANR	3457222	PrimaryExpression	0		3456949	254					
ANR	3457223	PrimaryExpression	0		3456949	255					
ANR	3457224	ExpressionStatement	"xmemcpy ( map , & clean_info , sizeof ( OptMapInfo ) )"	4339:2:97331:97376	3456949	2	True				
ANR	3457225	CallExpression	"xmemcpy ( map , & clean_info , sizeof ( OptMapInfo ) )"		3456949	0					
ANR	3457226	Callee	xmemcpy		3456949	0					
ANR	3457227	Identifier	xmemcpy		3456949	0					
ANR	3457228	ArgumentList	map		3456949	1					
ANR	3457229	Argument	map		3456949	0					
ANR	3457230	Identifier	map		3456949	0					
ANR	3457231	Argument	& clean_info		3456949	1					
ANR	3457232	UnaryOperationExpression	& clean_info		3456949	0					
ANR	3457233	UnaryOperator	&		3456949	0					
ANR	3457234	Identifier	clean_info		3456949	1					
ANR	3457235	Argument	sizeof ( OptMapInfo )		3456949	2					
ANR	3457236	SizeofExpression	sizeof ( OptMapInfo )		3456949	0					
ANR	3457237	Sizeof	sizeof		3456949	0					
ANR	3457238	SizeofOperand	OptMapInfo		3456949	1					
ANR	3457239	ReturnType	static void		3456949	1					
ANR	3457240	Identifier	clear_opt_map_info		3456949	2					
ANR	3457241	ParameterList	OptMapInfo * map		3456949	3					
ANR	3457242	Parameter	OptMapInfo * map	4315:19:96365:96379	3456949	0	True				
ANR	3457243	ParameterType	OptMapInfo *		3456949	0					
ANR	3457244	Identifier	map		3456949	1					
ANR	3457245	CFGEntryNode	ENTRY		3456949		True				
ANR	3457246	CFGExitNode	EXIT		3456949		True				
ANR	3457247	Symbol	& clean_info		3456949						
ANR	3457248	Symbol	map		3456949						
ANR	3457249	Symbol	clean_info		3456949						
ANR	3457250	Function	copy_opt_map_info	4342:0:97381:97462							
ANR	3457251	FunctionDef	"copy_opt_map_info (OptMapInfo * to , OptMapInfo * from)"		3457250	0					
ANR	3457252	CompoundStatement		4344:0:97445:97462	3457250	0					
ANR	3457253	ExpressionStatement	* to = * from	4345:2:97449:97460	3457250	0	True				
ANR	3457254	AssignmentExpression	* to = * from		3457250	0		=			
ANR	3457255	UnaryOperationExpression	* to		3457250	0					
ANR	3457256	UnaryOperator	*		3457250	0					
ANR	3457257	Identifier	to		3457250	1					
ANR	3457258	UnaryOperationExpression	* from		3457250	1					
ANR	3457259	UnaryOperator	*		3457250	0					
ANR	3457260	Identifier	from		3457250	1					
ANR	3457261	ReturnType	static void		3457250	1					
ANR	3457262	Identifier	copy_opt_map_info		3457250	2					
ANR	3457263	ParameterList	"OptMapInfo * to , OptMapInfo * from"		3457250	3					
ANR	3457264	Parameter	OptMapInfo * to	4343:18:97411:97424	3457250	0	True				
ANR	3457265	ParameterType	OptMapInfo *		3457250	0					
ANR	3457266	Identifier	to		3457250	1					
ANR	3457267	Parameter	OptMapInfo * from	4343:34:97427:97442	3457250	1	True				
ANR	3457268	ParameterType	OptMapInfo *		3457250	0					
ANR	3457269	Identifier	from		3457250	1					
ANR	3457270	CFGEntryNode	ENTRY		3457250		True				
ANR	3457271	CFGExitNode	EXIT		3457250		True				
ANR	3457272	Symbol	* to		3457250						
ANR	3457273	Symbol	from		3457250						
ANR	3457274	Symbol	to		3457250						
ANR	3457275	Symbol	* from		3457250						
ANR	3457276	Function	add_char_opt_map_info	4348:0:97465:97642							
ANR	3457277	FunctionDef	"add_char_opt_map_info (OptMapInfo * map , UChar c , OnigEncoding enc)"		3457276	0					
ANR	3457278	CompoundStatement		4350:0:97543:97642	3457276	0					
ANR	3457279	IfStatement	if ( map -> map [ c ] == 0 )		3457276	0					
ANR	3457280	Condition	map -> map [ c ] == 0	4351:6:97551:97566	3457276	0	True				
ANR	3457281	EqualityExpression	map -> map [ c ] == 0		3457276	0		==			
ANR	3457282	ArrayIndexing	map -> map [ c ]		3457276	0					
ANR	3457283	PtrMemberAccess	map -> map		3457276	0					
ANR	3457284	Identifier	map		3457276	0					
ANR	3457285	Identifier	map		3457276	1					
ANR	3457286	Identifier	c		3457276	1					
ANR	3457287	PrimaryExpression	0		3457276	1					
ANR	3457288	CompoundStatement		2:24:25:25	3457276	1					
ANR	3457289	ExpressionStatement	map -> map [ c ] = 1	4352:4:97575:97590	3457276	0	True				
ANR	3457290	AssignmentExpression	map -> map [ c ] = 1		3457276	0		=			
ANR	3457291	ArrayIndexing	map -> map [ c ]		3457276	0					
ANR	3457292	PtrMemberAccess	map -> map		3457276	0					
ANR	3457293	Identifier	map		3457276	0					
ANR	3457294	Identifier	map		3457276	1					
ANR	3457295	Identifier	c		3457276	1					
ANR	3457296	PrimaryExpression	1		3457276	1					
ANR	3457297	ExpressionStatement	"map -> value += map_position_value ( enc , c )"	4353:4:97596:97636	3457276	1	True				
ANR	3457298	AssignmentExpression	"map -> value += map_position_value ( enc , c )"		3457276	0		+=			
ANR	3457299	PtrMemberAccess	map -> value		3457276	0					
ANR	3457300	Identifier	map		3457276	0					
ANR	3457301	Identifier	value		3457276	1					
ANR	3457302	CallExpression	"map_position_value ( enc , c )"		3457276	1					
ANR	3457303	Callee	map_position_value		3457276	0					
ANR	3457304	Identifier	map_position_value		3457276	0					
ANR	3457305	ArgumentList	enc		3457276	1					
ANR	3457306	Argument	enc		3457276	0					
ANR	3457307	Identifier	enc		3457276	0					
ANR	3457308	Argument	c		3457276	1					
ANR	3457309	Identifier	c		3457276	0					
ANR	3457310	ReturnType	static void		3457276	1					
ANR	3457311	Identifier	add_char_opt_map_info		3457276	2					
ANR	3457312	ParameterList	"OptMapInfo * map , UChar c , OnigEncoding enc"		3457276	3					
ANR	3457313	Parameter	OptMapInfo * map	4349:22:97499:97513	3457276	0	True				
ANR	3457314	ParameterType	OptMapInfo *		3457276	0					
ANR	3457315	Identifier	map		3457276	1					
ANR	3457316	Parameter	UChar c	4349:39:97516:97522	3457276	1	True				
ANR	3457317	ParameterType	UChar		3457276	0					
ANR	3457318	Identifier	c		3457276	1					
ANR	3457319	Parameter	OnigEncoding enc	4349:48:97525:97540	3457276	2	True				
ANR	3457320	ParameterType	OnigEncoding		3457276	0					
ANR	3457321	Identifier	enc		3457276	1					
ANR	3457322	CFGEntryNode	ENTRY		3457276		True				
ANR	3457323	CFGExitNode	EXIT		3457276		True				
ANR	3457324	Symbol	* * map		3457276						
ANR	3457325	Symbol	map_position_value		3457276						
ANR	3457326	Symbol	c		3457276						
ANR	3457327	Symbol	map -> map		3457276						
ANR	3457328	Symbol	* map		3457276						
ANR	3457329	Symbol	* map -> map		3457276						
ANR	3457330	Symbol	enc		3457276						
ANR	3457331	Symbol	map		3457276						
ANR	3457332	Symbol	* c		3457276						
ANR	3457333	Symbol	map -> value		3457276						
ANR	3457334	Function	add_char_amb_opt_map_info	4357:0:97645:98273							
ANR	3457335	FunctionDef	"add_char_amb_opt_map_info (OptMapInfo * map , UChar * p , UChar * end , OnigEncoding enc , OnigCaseFoldType case_fold_flag)"		3457334	0					
ANR	3457336	CompoundStatement		4360:0:97798:98273	3457334	0					
ANR	3457337	IdentifierDeclStatement	OnigCaseFoldCodeItem items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ] ;	4361:2:97802:97865	3457334	0	True				
ANR	3457338	IdentifierDecl	items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		3457334	0					
ANR	3457339	IdentifierDeclType	OnigCaseFoldCodeItem [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		3457334	0					
ANR	3457340	Identifier	items		3457334	1					
ANR	3457341	Identifier	ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM		3457334	2					
ANR	3457342	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	4362:2:97869:97906	3457334	1	True				
ANR	3457343	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3457334	0					
ANR	3457344	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3457334	0					
ANR	3457345	Identifier	buf		3457334	1					
ANR	3457346	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		3457334	2					
ANR	3457347	IdentifierDeclStatement	"int i , n ;"	4363:2:97910:97918	3457334	2	True				
ANR	3457348	IdentifierDecl	i		3457334	0					
ANR	3457349	IdentifierDeclType	int		3457334	0					
ANR	3457350	Identifier	i		3457334	1					
ANR	3457351	IdentifierDecl	n		3457334	1					
ANR	3457352	IdentifierDeclType	int		3457334	0					
ANR	3457353	Identifier	n		3457334	1					
ANR	3457354	ExpressionStatement	"add_char_opt_map_info ( map , p [ 0 ] , enc )"	4365:2:97923:97960	3457334	3	True				
ANR	3457355	CallExpression	"add_char_opt_map_info ( map , p [ 0 ] , enc )"		3457334	0					
ANR	3457356	Callee	add_char_opt_map_info		3457334	0					
ANR	3457357	Identifier	add_char_opt_map_info		3457334	0					
ANR	3457358	ArgumentList	map		3457334	1					
ANR	3457359	Argument	map		3457334	0					
ANR	3457360	Identifier	map		3457334	0					
ANR	3457361	Argument	p [ 0 ]		3457334	1					
ANR	3457362	ArrayIndexing	p [ 0 ]		3457334	0					
ANR	3457363	Identifier	p		3457334	0					
ANR	3457364	PrimaryExpression	0		3457334	1					
ANR	3457365	Argument	enc		3457334	2					
ANR	3457366	Identifier	enc		3457334	0					
ANR	3457367	ExpressionStatement	case_fold_flag = DISABLE_CASE_FOLD_MULTI_CHAR ( case_fold_flag )	4367:2:97965:98026	3457334	4	True				
ANR	3457368	AssignmentExpression	case_fold_flag = DISABLE_CASE_FOLD_MULTI_CHAR ( case_fold_flag )		3457334	0		=			
ANR	3457369	Identifier	case_fold_flag		3457334	0					
ANR	3457370	CallExpression	DISABLE_CASE_FOLD_MULTI_CHAR ( case_fold_flag )		3457334	1					
ANR	3457371	Callee	DISABLE_CASE_FOLD_MULTI_CHAR		3457334	0					
ANR	3457372	Identifier	DISABLE_CASE_FOLD_MULTI_CHAR		3457334	0					
ANR	3457373	ArgumentList	case_fold_flag		3457334	1					
ANR	3457374	Argument	case_fold_flag		3457334	0					
ANR	3457375	Identifier	case_fold_flag		3457334	0					
ANR	3457376	ExpressionStatement	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( enc , case_fold_flag , p , end , items )"	4368:2:98030:98104	3457334	5	True				
ANR	3457377	AssignmentExpression	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( enc , case_fold_flag , p , end , items )"		3457334	0		=			
ANR	3457378	Identifier	n		3457334	0					
ANR	3457379	CallExpression	"ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( enc , case_fold_flag , p , end , items )"		3457334	1					
ANR	3457380	Callee	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		3457334	0					
ANR	3457381	Identifier	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		3457334	0					
ANR	3457382	ArgumentList	enc		3457334	1					
ANR	3457383	Argument	enc		3457334	0					
ANR	3457384	Identifier	enc		3457334	0					
ANR	3457385	Argument	case_fold_flag		3457334	1					
ANR	3457386	Identifier	case_fold_flag		3457334	0					
ANR	3457387	Argument	p		3457334	2					
ANR	3457388	Identifier	p		3457334	0					
ANR	3457389	Argument	end		3457334	3					
ANR	3457390	Identifier	end		3457334	0					
ANR	3457391	Argument	items		3457334	4					
ANR	3457392	Identifier	items		3457334	0					
ANR	3457393	IfStatement	if ( n < 0 )		3457334	6					
ANR	3457394	Condition	n < 0	4369:6:98112:98116	3457334	0	True				
ANR	3457395	RelationalExpression	n < 0		3457334	0		<			
ANR	3457396	Identifier	n		3457334	0					
ANR	3457397	PrimaryExpression	0		3457334	1					
ANR	3457398	ReturnStatement	return n ;	4369:13:98119:98127	3457334	1	True				
ANR	3457399	Identifier	n		3457334	0					
ANR	3457400	ForStatement	for ( i = 0 ; i < n ; i ++ )		3457334	7					
ANR	3457401	ForInit	i = 0 ;	4371:7:98137:98142	3457334	0	True				
ANR	3457402	AssignmentExpression	i = 0		3457334	0		=			
ANR	3457403	Identifier	i		3457334	0					
ANR	3457404	PrimaryExpression	0		3457334	1					
ANR	3457405	Condition	i < n	4371:14:98144:98148	3457334	1	True				
ANR	3457406	RelationalExpression	i < n		3457334	0		<			
ANR	3457407	Identifier	i		3457334	0					
ANR	3457408	Identifier	n		3457334	1					
ANR	3457409	PostIncDecOperationExpression	i ++	4371:21:98151:98153	3457334	2	True				
ANR	3457410	Identifier	i		3457334	0					
ANR	3457411	IncDec	++		3457334	1					
ANR	3457412	CompoundStatement		12:26:357:357	3457334	3					
ANR	3457413	ExpressionStatement	"ONIGENC_CODE_TO_MBC ( enc , items [ i ] . code [ 0 ] , buf )"	4372:4:98162:98209	3457334	0	True				
ANR	3457414	CallExpression	"ONIGENC_CODE_TO_MBC ( enc , items [ i ] . code [ 0 ] , buf )"		3457334	0					
ANR	3457415	Callee	ONIGENC_CODE_TO_MBC		3457334	0					
ANR	3457416	Identifier	ONIGENC_CODE_TO_MBC		3457334	0					
ANR	3457417	ArgumentList	enc		3457334	1					
ANR	3457418	Argument	enc		3457334	0					
ANR	3457419	Identifier	enc		3457334	0					
ANR	3457420	Argument	items [ i ] . code [ 0 ]		3457334	1					
ANR	3457421	ArrayIndexing	items [ i ] . code [ 0 ]		3457334	0					
ANR	3457422	MemberAccess	items [ i ] . code		3457334	0					
ANR	3457423	ArrayIndexing	items [ i ]		3457334	0					
ANR	3457424	Identifier	items		3457334	0					
ANR	3457425	Identifier	i		3457334	1					
ANR	3457426	Identifier	code		3457334	1					
ANR	3457427	PrimaryExpression	0		3457334	1					
ANR	3457428	Argument	buf		3457334	2					
ANR	3457429	Identifier	buf		3457334	0					
ANR	3457430	ExpressionStatement	"add_char_opt_map_info ( map , buf [ 0 ] , enc )"	4373:4:98215:98254	3457334	1	True				
ANR	3457431	CallExpression	"add_char_opt_map_info ( map , buf [ 0 ] , enc )"		3457334	0					
ANR	3457432	Callee	add_char_opt_map_info		3457334	0					
ANR	3457433	Identifier	add_char_opt_map_info		3457334	0					
ANR	3457434	ArgumentList	map		3457334	1					
ANR	3457435	Argument	map		3457334	0					
ANR	3457436	Identifier	map		3457334	0					
ANR	3457437	Argument	buf [ 0 ]		3457334	1					
ANR	3457438	ArrayIndexing	buf [ 0 ]		3457334	0					
ANR	3457439	Identifier	buf		3457334	0					
ANR	3457440	PrimaryExpression	0		3457334	1					
ANR	3457441	Argument	enc		3457334	2					
ANR	3457442	Identifier	enc		3457334	0					
ANR	3457443	ReturnStatement	return 0 ;	4376:2:98263:98271	3457334	8	True				
ANR	3457444	PrimaryExpression	0		3457334	0					
ANR	3457445	ReturnType	static int		3457334	1					
ANR	3457446	Identifier	add_char_amb_opt_map_info		3457334	2					
ANR	3457447	ParameterList	"OptMapInfo * map , UChar * p , UChar * end , OnigEncoding enc , OnigCaseFoldType case_fold_flag"		3457334	3					
ANR	3457448	Parameter	OptMapInfo * map	4358:26:97682:97696	3457334	0	True				
ANR	3457449	ParameterType	OptMapInfo *		3457334	0					
ANR	3457450	Identifier	map		3457334	1					
ANR	3457451	Parameter	UChar * p	4358:43:97699:97706	3457334	1	True				
ANR	3457452	ParameterType	UChar *		3457334	0					
ANR	3457453	Identifier	p		3457334	1					
ANR	3457454	Parameter	UChar * end	4358:53:97709:97718	3457334	2	True				
ANR	3457455	ParameterType	UChar *		3457334	0					
ANR	3457456	Identifier	end		3457334	1					
ANR	3457457	Parameter	OnigEncoding enc	4359:26:97747:97762	3457334	3	True				
ANR	3457458	ParameterType	OnigEncoding		3457334	0					
ANR	3457459	Identifier	enc		3457334	1					
ANR	3457460	Parameter	OnigCaseFoldType case_fold_flag	4359:44:97765:97795	3457334	4	True				
ANR	3457461	ParameterType	OnigCaseFoldType		3457334	0					
ANR	3457462	Identifier	case_fold_flag		3457334	1					
ANR	3457463	CFGEntryNode	ENTRY		3457334		True				
ANR	3457464	CFGExitNode	EXIT		3457334		True				
ANR	3457465	Symbol	* * i		3457334						
ANR	3457466	Symbol	* buf		3457334						
ANR	3457467	Symbol	* items [ i ] . code		3457334						
ANR	3457468	Symbol	items [ i ] . code		3457334						
ANR	3457469	Symbol	DISABLE_CASE_FOLD_MULTI_CHAR		3457334						
ANR	3457470	Symbol	i		3457334						
ANR	3457471	Symbol	* * items		3457334						
ANR	3457472	Symbol	n		3457334						
ANR	3457473	Symbol	p		3457334						
ANR	3457474	Symbol	case_fold_flag		3457334						
ANR	3457475	Symbol	buf		3457334						
ANR	3457476	Symbol	* i		3457334						
ANR	3457477	Symbol	* items		3457334						
ANR	3457478	Symbol	end		3457334						
ANR	3457479	Symbol	* p		3457334						
ANR	3457480	Symbol	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		3457334						
ANR	3457481	Symbol	enc		3457334						
ANR	3457482	Symbol	map		3457334						
ANR	3457483	Symbol	items		3457334						
ANR	3457484	Function	select_opt_map_info	4379:0:98276:98665							
ANR	3457485	FunctionDef	"select_opt_map_info (OptMapInfo * now , OptMapInfo * alt)"		3457484	0					
ANR	3457486	CompoundStatement		4381:0:98342:98665	3457484	0					
ANR	3457487	Statement	static	4382:2:98346:98351	3457484	0	True				
ANR	3457488	IdentifierDeclStatement	int z = 1 << 15 ;	4382:9:98353:98366	3457484	1	True				
ANR	3457489	IdentifierDecl	z = 1 << 15		3457484	0					
ANR	3457490	IdentifierDeclType	int		3457484	0					
ANR	3457491	Identifier	z		3457484	1					
ANR	3457492	AssignmentExpression	z = 1 << 15		3457484	2		=			
ANR	3457493	Identifier	z		3457484	0					
ANR	3457494	ShiftExpression	1 << 15		3457484	1		<<			
ANR	3457495	PrimaryExpression	1		3457484	0					
ANR	3457496	PrimaryExpression	15		3457484	1					
ANR	3457497	IdentifierDeclStatement	"int v1 , v2 ;"	4384:2:98404:98414	3457484	2	True				
ANR	3457498	IdentifierDecl	v1		3457484	0					
ANR	3457499	IdentifierDeclType	int		3457484	0					
ANR	3457500	Identifier	v1		3457484	1					
ANR	3457501	IdentifierDecl	v2		3457484	1					
ANR	3457502	IdentifierDeclType	int		3457484	0					
ANR	3457503	Identifier	v2		3457484	1					
ANR	3457504	IfStatement	if ( alt -> value == 0 )		3457484	3					
ANR	3457505	Condition	alt -> value == 0	4386:6:98423:98437	3457484	0	True				
ANR	3457506	EqualityExpression	alt -> value == 0		3457484	0		==			
ANR	3457507	PtrMemberAccess	alt -> value		3457484	0					
ANR	3457508	Identifier	alt		3457484	0					
ANR	3457509	Identifier	value		3457484	1					
ANR	3457510	PrimaryExpression	0		3457484	1					
ANR	3457511	ReturnStatement	return ;	4386:23:98440:98447	3457484	1	True				
ANR	3457512	IfStatement	if ( now -> value == 0 )		3457484	4					
ANR	3457513	Condition	now -> value == 0	4387:6:98455:98469	3457484	0	True				
ANR	3457514	EqualityExpression	now -> value == 0		3457484	0		==			
ANR	3457515	PtrMemberAccess	now -> value		3457484	0					
ANR	3457516	Identifier	now		3457484	0					
ANR	3457517	Identifier	value		3457484	1					
ANR	3457518	PrimaryExpression	0		3457484	1					
ANR	3457519	CompoundStatement		7:23:129:129	3457484	1					
ANR	3457520	ExpressionStatement	"copy_opt_map_info ( now , alt )"	4388:4:98478:98505	3457484	0	True				
ANR	3457521	CallExpression	"copy_opt_map_info ( now , alt )"		3457484	0					
ANR	3457522	Callee	copy_opt_map_info		3457484	0					
ANR	3457523	Identifier	copy_opt_map_info		3457484	0					
ANR	3457524	ArgumentList	now		3457484	1					
ANR	3457525	Argument	now		3457484	0					
ANR	3457526	Identifier	now		3457484	0					
ANR	3457527	Argument	alt		3457484	1					
ANR	3457528	Identifier	alt		3457484	0					
ANR	3457529	ReturnStatement	return ;	4389:4:98511:98518	3457484	1	True				
ANR	3457530	ExpressionStatement	v1 = z / now -> value	4392:2:98527:98546	3457484	5	True				
ANR	3457531	AssignmentExpression	v1 = z / now -> value		3457484	0		=			
ANR	3457532	Identifier	v1		3457484	0					
ANR	3457533	MultiplicativeExpression	z / now -> value		3457484	1		/			
ANR	3457534	Identifier	z		3457484	0					
ANR	3457535	PtrMemberAccess	now -> value		3457484	1					
ANR	3457536	Identifier	now		3457484	0					
ANR	3457537	Identifier	value		3457484	1					
ANR	3457538	ExpressionStatement	v2 = z / alt -> value	4393:2:98550:98569	3457484	6	True				
ANR	3457539	AssignmentExpression	v2 = z / alt -> value		3457484	0		=			
ANR	3457540	Identifier	v2		3457484	0					
ANR	3457541	MultiplicativeExpression	z / alt -> value		3457484	1		/			
ANR	3457542	Identifier	z		3457484	0					
ANR	3457543	PtrMemberAccess	alt -> value		3457484	1					
ANR	3457544	Identifier	alt		3457484	0					
ANR	3457545	Identifier	value		3457484	1					
ANR	3457546	IfStatement	"if ( comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0 )"		3457484	7					
ANR	3457547	Condition	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"	4394:6:98577:98629	3457484	0	True				
ANR	3457548	RelationalExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"		3457484	0		>			
ANR	3457549	CallExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 )"		3457484	0					
ANR	3457550	Callee	comp_distance_value		3457484	0					
ANR	3457551	Identifier	comp_distance_value		3457484	0					
ANR	3457552	ArgumentList	& now -> mmd		3457484	1					
ANR	3457553	Argument	& now -> mmd		3457484	0					
ANR	3457554	UnaryOperationExpression	& now -> mmd		3457484	0					
ANR	3457555	UnaryOperator	&		3457484	0					
ANR	3457556	PtrMemberAccess	now -> mmd		3457484	1					
ANR	3457557	Identifier	now		3457484	0					
ANR	3457558	Identifier	mmd		3457484	1					
ANR	3457559	Argument	& alt -> mmd		3457484	1					
ANR	3457560	UnaryOperationExpression	& alt -> mmd		3457484	0					
ANR	3457561	UnaryOperator	&		3457484	0					
ANR	3457562	PtrMemberAccess	alt -> mmd		3457484	1					
ANR	3457563	Identifier	alt		3457484	0					
ANR	3457564	Identifier	mmd		3457484	1					
ANR	3457565	Argument	v1		3457484	2					
ANR	3457566	Identifier	v1		3457484	0					
ANR	3457567	Argument	v2		3457484	3					
ANR	3457568	Identifier	v2		3457484	0					
ANR	3457569	PrimaryExpression	0		3457484	1					
ANR	3457570	ExpressionStatement	"copy_opt_map_info ( now , alt )"	4395:4:98636:98663	3457484	1	True				
ANR	3457571	CallExpression	"copy_opt_map_info ( now , alt )"		3457484	0					
ANR	3457572	Callee	copy_opt_map_info		3457484	0					
ANR	3457573	Identifier	copy_opt_map_info		3457484	0					
ANR	3457574	ArgumentList	now		3457484	1					
ANR	3457575	Argument	now		3457484	0					
ANR	3457576	Identifier	now		3457484	0					
ANR	3457577	Argument	alt		3457484	1					
ANR	3457578	Identifier	alt		3457484	0					
ANR	3457579	ReturnType	static void		3457484	1					
ANR	3457580	Identifier	select_opt_map_info		3457484	2					
ANR	3457581	ParameterList	"OptMapInfo * now , OptMapInfo * alt"		3457484	3					
ANR	3457582	Parameter	OptMapInfo * now	4380:20:98308:98322	3457484	0	True				
ANR	3457583	ParameterType	OptMapInfo *		3457484	0					
ANR	3457584	Identifier	now		3457484	1					
ANR	3457585	Parameter	OptMapInfo * alt	4380:37:98325:98339	3457484	1	True				
ANR	3457586	ParameterType	OptMapInfo *		3457484	0					
ANR	3457587	Identifier	alt		3457484	1					
ANR	3457588	CFGEntryNode	ENTRY		3457484		True				
ANR	3457589	CFGExitNode	EXIT		3457484		True				
ANR	3457590	Symbol	* now		3457484						
ANR	3457591	Symbol	now -> value		3457484						
ANR	3457592	Symbol	comp_distance_value		3457484						
ANR	3457593	Symbol	alt -> value		3457484						
ANR	3457594	Symbol	now		3457484						
ANR	3457595	Symbol	alt		3457484						
ANR	3457596	Symbol	z		3457484						
ANR	3457597	Symbol	v1		3457484						
ANR	3457598	Symbol	v2		3457484						
ANR	3457599	Symbol	* alt		3457484						
ANR	3457600	Symbol	& alt -> mmd		3457484						
ANR	3457601	Symbol	& now -> mmd		3457484						
ANR	3457602	Function	comp_opt_exact_or_map_info	4398:0:98668:98966							
ANR	3457603	FunctionDef	"comp_opt_exact_or_map_info (OptExactInfo * e , OptMapInfo * m)"		3457602	0					
ANR	3457604	CompoundStatement		4400:0:98738:98966	3457602	0					
ANR	3457605	Statement	define	4401:1:98741:98746	3457602	0	True				
ANR	3457606	Statement	COMP_EM_BASE	4401:8:98748:98759	3457602	1	True				
ANR	3457607	Statement	20	4401:22:98762:98763	3457602	2	True				
ANR	3457608	IdentifierDeclStatement	"int ve , vm ;"	4402:2:98767:98777	3457602	3	True				
ANR	3457609	IdentifierDecl	ve		3457602	0					
ANR	3457610	IdentifierDeclType	int		3457602	0					
ANR	3457611	Identifier	ve		3457602	1					
ANR	3457612	IdentifierDecl	vm		3457602	1					
ANR	3457613	IdentifierDeclType	int		3457602	0					
ANR	3457614	Identifier	vm		3457602	1					
ANR	3457615	IfStatement	if ( m -> value <= 0 )		3457602	4					
ANR	3457616	Condition	m -> value <= 0	4404:6:98786:98798	3457602	0	True				
ANR	3457617	RelationalExpression	m -> value <= 0		3457602	0		<=			
ANR	3457618	PtrMemberAccess	m -> value		3457602	0					
ANR	3457619	Identifier	m		3457602	0					
ANR	3457620	Identifier	value		3457602	1					
ANR	3457621	PrimaryExpression	0		3457602	1					
ANR	3457622	ReturnStatement	return - 1 ;	4404:21:98801:98810	3457602	1	True				
ANR	3457623	UnaryOperationExpression	- 1		3457602	0					
ANR	3457624	UnaryOperator	-		3457602	0					
ANR	3457625	PrimaryExpression	1		3457602	1					
ANR	3457626	ExpressionStatement	ve = COMP_EM_BASE * e -> len * ( e -> ignore_case ? 1 : 2 )	4406:2:98815:98868	3457602	5	True				
ANR	3457627	AssignmentExpression	ve = COMP_EM_BASE * e -> len * ( e -> ignore_case ? 1 : 2 )		3457602	0		=			
ANR	3457628	Identifier	ve		3457602	0					
ANR	3457629	MultiplicativeExpression	COMP_EM_BASE * e -> len * ( e -> ignore_case ? 1 : 2 )		3457602	1		*			
ANR	3457630	Identifier	COMP_EM_BASE		3457602	0					
ANR	3457631	MultiplicativeExpression	e -> len * ( e -> ignore_case ? 1 : 2 )		3457602	1		*			
ANR	3457632	PtrMemberAccess	e -> len		3457602	0					
ANR	3457633	Identifier	e		3457602	0					
ANR	3457634	Identifier	len		3457602	1					
ANR	3457635	ConditionalExpression	e -> ignore_case ? 1 : 2		3457602	1					
ANR	3457636	Condition	e -> ignore_case		3457602	0					
ANR	3457637	PtrMemberAccess	e -> ignore_case		3457602	0					
ANR	3457638	Identifier	e		3457602	0					
ANR	3457639	Identifier	ignore_case		3457602	1					
ANR	3457640	PrimaryExpression	1		3457602	1					
ANR	3457641	PrimaryExpression	2		3457602	2					
ANR	3457642	ExpressionStatement	vm = COMP_EM_BASE * 5 * 2 / m -> value	4407:2:98872:98908	3457602	6	True				
ANR	3457643	AssignmentExpression	vm = COMP_EM_BASE * 5 * 2 / m -> value		3457602	0		=			
ANR	3457644	Identifier	vm		3457602	0					
ANR	3457645	MultiplicativeExpression	COMP_EM_BASE * 5 * 2 / m -> value		3457602	1		*			
ANR	3457646	Identifier	COMP_EM_BASE		3457602	0					
ANR	3457647	MultiplicativeExpression	5 * 2 / m -> value		3457602	1		*			
ANR	3457648	PrimaryExpression	5		3457602	0					
ANR	3457649	MultiplicativeExpression	2 / m -> value		3457602	1		/			
ANR	3457650	PrimaryExpression	2		3457602	0					
ANR	3457651	PtrMemberAccess	m -> value		3457602	1					
ANR	3457652	Identifier	m		3457602	0					
ANR	3457653	Identifier	value		3457602	1					
ANR	3457654	ReturnStatement	"return comp_distance_value ( & e -> mmd , & m -> mmd , ve , vm ) ;"	4408:2:98912:98964	3457602	7	True				
ANR	3457655	CallExpression	"comp_distance_value ( & e -> mmd , & m -> mmd , ve , vm )"		3457602	0					
ANR	3457656	Callee	comp_distance_value		3457602	0					
ANR	3457657	Identifier	comp_distance_value		3457602	0					
ANR	3457658	ArgumentList	& e -> mmd		3457602	1					
ANR	3457659	Argument	& e -> mmd		3457602	0					
ANR	3457660	UnaryOperationExpression	& e -> mmd		3457602	0					
ANR	3457661	UnaryOperator	&		3457602	0					
ANR	3457662	PtrMemberAccess	e -> mmd		3457602	1					
ANR	3457663	Identifier	e		3457602	0					
ANR	3457664	Identifier	mmd		3457602	1					
ANR	3457665	Argument	& m -> mmd		3457602	1					
ANR	3457666	UnaryOperationExpression	& m -> mmd		3457602	0					
ANR	3457667	UnaryOperator	&		3457602	0					
ANR	3457668	PtrMemberAccess	m -> mmd		3457602	1					
ANR	3457669	Identifier	m		3457602	0					
ANR	3457670	Identifier	mmd		3457602	1					
ANR	3457671	Argument	ve		3457602	2					
ANR	3457672	Identifier	ve		3457602	0					
ANR	3457673	Argument	vm		3457602	3					
ANR	3457674	Identifier	vm		3457602	0					
ANR	3457675	ReturnType	static int		3457602	1					
ANR	3457676	Identifier	comp_opt_exact_or_map_info		3457602	2					
ANR	3457677	ParameterList	"OptExactInfo * e , OptMapInfo * m"		3457602	3					
ANR	3457678	Parameter	OptExactInfo * e	4399:27:98706:98720	3457602	0	True				
ANR	3457679	ParameterType	OptExactInfo *		3457602	0					
ANR	3457680	Identifier	e		3457602	1					
ANR	3457681	Parameter	OptMapInfo * m	4399:44:98723:98735	3457602	1	True				
ANR	3457682	ParameterType	OptMapInfo *		3457602	0					
ANR	3457683	Identifier	m		3457602	1					
ANR	3457684	CFGEntryNode	ENTRY		3457602		True				
ANR	3457685	CFGExitNode	EXIT		3457602		True				
ANR	3457686	Symbol	& m -> mmd		3457602						
ANR	3457687	Symbol	e -> len		3457602						
ANR	3457688	Symbol	m -> value		3457602						
ANR	3457689	Symbol	e		3457602						
ANR	3457690	Symbol	comp_distance_value		3457602						
ANR	3457691	Symbol	m		3457602						
ANR	3457692	Symbol	ve		3457602						
ANR	3457693	Symbol	* e		3457602						
ANR	3457694	Symbol	vm		3457602						
ANR	3457695	Symbol	* m		3457602						
ANR	3457696	Symbol	e -> ignore_case		3457602						
ANR	3457697	Symbol	& e -> mmd		3457602						
ANR	3457698	Symbol	COMP_EM_BASE		3457602						
ANR	3457699	Function	alt_merge_opt_map_info	4411:0:98969:99535							
ANR	3457700	FunctionDef	"alt_merge_opt_map_info (OnigEncoding enc , OptMapInfo * to , OptMapInfo * add)"		3457699	0					
ANR	3457701	CompoundStatement		4413:0:99055:99535	3457699	0					
ANR	3457702	IdentifierDeclStatement	"int i , val ;"	4414:2:99059:99069	3457699	0	True				
ANR	3457703	IdentifierDecl	i		3457699	0					
ANR	3457704	IdentifierDeclType	int		3457699	0					
ANR	3457705	Identifier	i		3457699	1					
ANR	3457706	IdentifierDecl	val		3457699	1					
ANR	3457707	IdentifierDeclType	int		3457699	0					
ANR	3457708	Identifier	val		3457699	1					
ANR	3457709	IfStatement	if ( to -> value == 0 )		3457699	1					
ANR	3457710	Condition	to -> value == 0	4417:6:99136:99149	3457699	0	True				
ANR	3457711	EqualityExpression	to -> value == 0		3457699	0		==			
ANR	3457712	PtrMemberAccess	to -> value		3457699	0					
ANR	3457713	Identifier	to		3457699	0					
ANR	3457714	Identifier	value		3457699	1					
ANR	3457715	PrimaryExpression	0		3457699	1					
ANR	3457716	ReturnStatement	return ;	4417:22:99152:99159	3457699	1	True				
ANR	3457717	IfStatement	if ( add -> value == 0 || to -> mmd . max < add -> mmd . min )		3457699	2					
ANR	3457718	Condition	add -> value == 0 || to -> mmd . max < add -> mmd . min	4418:6:99167:99211	3457699	0	True				
ANR	3457719	OrExpression	add -> value == 0 || to -> mmd . max < add -> mmd . min		3457699	0		||			
ANR	3457720	EqualityExpression	add -> value == 0		3457699	0		==			
ANR	3457721	PtrMemberAccess	add -> value		3457699	0					
ANR	3457722	Identifier	add		3457699	0					
ANR	3457723	Identifier	value		3457699	1					
ANR	3457724	PrimaryExpression	0		3457699	1					
ANR	3457725	RelationalExpression	to -> mmd . max < add -> mmd . min		3457699	1		<			
ANR	3457726	MemberAccess	to -> mmd . max		3457699	0					
ANR	3457727	PtrMemberAccess	to -> mmd		3457699	0					
ANR	3457728	Identifier	to		3457699	0					
ANR	3457729	Identifier	mmd		3457699	1					
ANR	3457730	Identifier	max		3457699	1					
ANR	3457731	MemberAccess	add -> mmd . min		3457699	1					
ANR	3457732	PtrMemberAccess	add -> mmd		3457699	0					
ANR	3457733	Identifier	add		3457699	0					
ANR	3457734	Identifier	mmd		3457699	1					
ANR	3457735	Identifier	min		3457699	1					
ANR	3457736	CompoundStatement		6:53:158:158	3457699	1					
ANR	3457737	ExpressionStatement	clear_opt_map_info ( to )	4419:4:99220:99242	3457699	0	True				
ANR	3457738	CallExpression	clear_opt_map_info ( to )		3457699	0					
ANR	3457739	Callee	clear_opt_map_info		3457699	0					
ANR	3457740	Identifier	clear_opt_map_info		3457699	0					
ANR	3457741	ArgumentList	to		3457699	1					
ANR	3457742	Argument	to		3457699	0					
ANR	3457743	Identifier	to		3457699	0					
ANR	3457744	ReturnStatement	return ;	4420:4:99248:99255	3457699	1	True				
ANR	3457745	ExpressionStatement	"alt_merge_mml ( & to -> mmd , & add -> mmd )"	4423:2:99264:99298	3457699	3	True				
ANR	3457746	CallExpression	"alt_merge_mml ( & to -> mmd , & add -> mmd )"		3457699	0					
ANR	3457747	Callee	alt_merge_mml		3457699	0					
ANR	3457748	Identifier	alt_merge_mml		3457699	0					
ANR	3457749	ArgumentList	& to -> mmd		3457699	1					
ANR	3457750	Argument	& to -> mmd		3457699	0					
ANR	3457751	UnaryOperationExpression	& to -> mmd		3457699	0					
ANR	3457752	UnaryOperator	&		3457699	0					
ANR	3457753	PtrMemberAccess	to -> mmd		3457699	1					
ANR	3457754	Identifier	to		3457699	0					
ANR	3457755	Identifier	mmd		3457699	1					
ANR	3457756	Argument	& add -> mmd		3457699	1					
ANR	3457757	UnaryOperationExpression	& add -> mmd		3457699	0					
ANR	3457758	UnaryOperator	&		3457699	0					
ANR	3457759	PtrMemberAccess	add -> mmd		3457699	1					
ANR	3457760	Identifier	add		3457699	0					
ANR	3457761	Identifier	mmd		3457699	1					
ANR	3457762	ExpressionStatement	val = 0	4425:2:99303:99310	3457699	4	True				
ANR	3457763	AssignmentExpression	val = 0		3457699	0		=			
ANR	3457764	Identifier	val		3457699	0					
ANR	3457765	PrimaryExpression	0		3457699	1					
ANR	3457766	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		3457699	5					
ANR	3457767	ForInit	i = 0 ;	4426:7:99319:99324	3457699	0	True				
ANR	3457768	AssignmentExpression	i = 0		3457699	0		=			
ANR	3457769	Identifier	i		3457699	0					
ANR	3457770	PrimaryExpression	0		3457699	1					
ANR	3457771	Condition	i < ONIG_CHAR_TABLE_SIZE	4426:14:99326:99349	3457699	1	True				
ANR	3457772	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		3457699	0		<			
ANR	3457773	Identifier	i		3457699	0					
ANR	3457774	Identifier	ONIG_CHAR_TABLE_SIZE		3457699	1					
ANR	3457775	PostIncDecOperationExpression	i ++	4426:40:99352:99354	3457699	2	True				
ANR	3457776	Identifier	i		3457699	0					
ANR	3457777	IncDec	++		3457699	1					
ANR	3457778	CompoundStatement		14:45:301:301	3457699	3					
ANR	3457779	IfStatement	if ( add -> map [ i ] )		3457699	0					
ANR	3457780	Condition	add -> map [ i ]	4427:8:99367:99377	3457699	0	True				
ANR	3457781	ArrayIndexing	add -> map [ i ]		3457699	0					
ANR	3457782	PtrMemberAccess	add -> map		3457699	0					
ANR	3457783	Identifier	add		3457699	0					
ANR	3457784	Identifier	map		3457699	1					
ANR	3457785	Identifier	i		3457699	1					
ANR	3457786	ExpressionStatement	to -> map [ i ] = 1	4428:6:99386:99400	3457699	1	True				
ANR	3457787	AssignmentExpression	to -> map [ i ] = 1		3457699	0		=			
ANR	3457788	ArrayIndexing	to -> map [ i ]		3457699	0					
ANR	3457789	PtrMemberAccess	to -> map		3457699	0					
ANR	3457790	Identifier	to		3457699	0					
ANR	3457791	Identifier	map		3457699	1					
ANR	3457792	Identifier	i		3457699	1					
ANR	3457793	PrimaryExpression	1		3457699	1					
ANR	3457794	IfStatement	if ( to -> map [ i ] )		3457699	1					
ANR	3457795	Condition	to -> map [ i ]	4430:8:99411:99420	3457699	0	True				
ANR	3457796	ArrayIndexing	to -> map [ i ]		3457699	0					
ANR	3457797	PtrMemberAccess	to -> map		3457699	0					
ANR	3457798	Identifier	to		3457699	0					
ANR	3457799	Identifier	map		3457699	1					
ANR	3457800	Identifier	i		3457699	1					
ANR	3457801	ExpressionStatement	"val += map_position_value ( enc , i )"	4431:6:99429:99462	3457699	1	True				
ANR	3457802	AssignmentExpression	"val += map_position_value ( enc , i )"		3457699	0		+=			
ANR	3457803	Identifier	val		3457699	0					
ANR	3457804	CallExpression	"map_position_value ( enc , i )"		3457699	1					
ANR	3457805	Callee	map_position_value		3457699	0					
ANR	3457806	Identifier	map_position_value		3457699	0					
ANR	3457807	ArgumentList	enc		3457699	1					
ANR	3457808	Argument	enc		3457699	0					
ANR	3457809	Identifier	enc		3457699	0					
ANR	3457810	Argument	i		3457699	1					
ANR	3457811	Identifier	i		3457699	0					
ANR	3457812	ExpressionStatement	to -> value = val	4433:2:99470:99485	3457699	6	True				
ANR	3457813	AssignmentExpression	to -> value = val		3457699	0		=			
ANR	3457814	PtrMemberAccess	to -> value		3457699	0					
ANR	3457815	Identifier	to		3457699	0					
ANR	3457816	Identifier	value		3457699	1					
ANR	3457817	Identifier	val		3457699	1					
ANR	3457818	ExpressionStatement	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"	4435:2:99490:99533	3457699	7	True				
ANR	3457819	CallExpression	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"		3457699	0					
ANR	3457820	Callee	alt_merge_opt_anc_info		3457699	0					
ANR	3457821	Identifier	alt_merge_opt_anc_info		3457699	0					
ANR	3457822	ArgumentList	& to -> anc		3457699	1					
ANR	3457823	Argument	& to -> anc		3457699	0					
ANR	3457824	UnaryOperationExpression	& to -> anc		3457699	0					
ANR	3457825	UnaryOperator	&		3457699	0					
ANR	3457826	PtrMemberAccess	to -> anc		3457699	1					
ANR	3457827	Identifier	to		3457699	0					
ANR	3457828	Identifier	anc		3457699	1					
ANR	3457829	Argument	& add -> anc		3457699	1					
ANR	3457830	UnaryOperationExpression	& add -> anc		3457699	0					
ANR	3457831	UnaryOperator	&		3457699	0					
ANR	3457832	PtrMemberAccess	add -> anc		3457699	1					
ANR	3457833	Identifier	add		3457699	0					
ANR	3457834	Identifier	anc		3457699	1					
ANR	3457835	ReturnType	static void		3457699	1					
ANR	3457836	Identifier	alt_merge_opt_map_info		3457699	2					
ANR	3457837	ParameterList	"OnigEncoding enc , OptMapInfo * to , OptMapInfo * add"		3457699	3					
ANR	3457838	Parameter	OnigEncoding enc	4412:23:99004:99019	3457699	0	True				
ANR	3457839	ParameterType	OnigEncoding		3457699	0					
ANR	3457840	Identifier	enc		3457699	1					
ANR	3457841	Parameter	OptMapInfo * to	4412:41:99022:99035	3457699	1	True				
ANR	3457842	ParameterType	OptMapInfo *		3457699	0					
ANR	3457843	Identifier	to		3457699	1					
ANR	3457844	Parameter	OptMapInfo * add	4412:57:99038:99052	3457699	2	True				
ANR	3457845	ParameterType	OptMapInfo *		3457699	0					
ANR	3457846	Identifier	add		3457699	1					
ANR	3457847	CFGEntryNode	ENTRY		3457699		True				
ANR	3457848	CFGExitNode	EXIT		3457699		True				
ANR	3457849	Symbol	to -> map		3457699						
ANR	3457850	Symbol	map_position_value		3457699						
ANR	3457851	Symbol	to -> mmd . max		3457699						
ANR	3457852	Symbol	& add -> anc		3457699						
ANR	3457853	Symbol	* add -> map		3457699						
ANR	3457854	Symbol	enc		3457699						
ANR	3457855	Symbol	add -> mmd . min		3457699						
ANR	3457856	Symbol	add -> map		3457699						
ANR	3457857	Symbol	* to -> map		3457699						
ANR	3457858	Symbol	add		3457699						
ANR	3457859	Symbol	val		3457699						
ANR	3457860	Symbol	* to		3457699						
ANR	3457861	Symbol	to -> value		3457699						
ANR	3457862	Symbol	& to -> anc		3457699						
ANR	3457863	Symbol	add -> value		3457699						
ANR	3457864	Symbol	add -> mmd		3457699						
ANR	3457865	Symbol	* * to		3457699						
ANR	3457866	Symbol	i		3457699						
ANR	3457867	Symbol	to -> mmd		3457699						
ANR	3457868	Symbol	& add -> mmd		3457699						
ANR	3457869	Symbol	& to -> mmd		3457699						
ANR	3457870	Symbol	ONIG_CHAR_TABLE_SIZE		3457699						
ANR	3457871	Symbol	* i		3457699						
ANR	3457872	Symbol	* add		3457699						
ANR	3457873	Symbol	* * add		3457699						
ANR	3457874	Symbol	to		3457699						
ANR	3457875	Function	set_bound_node_opt_info	4438:0:99538:99715							
ANR	3457876	FunctionDef	"set_bound_node_opt_info (NodeOptInfo * opt , MinMaxLen * mmd)"		3457875	0					
ANR	3457877	CompoundStatement		4440:0:99608:99715	3457875	0					
ANR	3457878	ExpressionStatement	"copy_mml ( & ( opt -> exb . mmd ) , mmd )"	4441:2:99612:99643	3457875	0	True				
ANR	3457879	CallExpression	"copy_mml ( & ( opt -> exb . mmd ) , mmd )"		3457875	0					
ANR	3457880	Callee	copy_mml		3457875	0					
ANR	3457881	Identifier	copy_mml		3457875	0					
ANR	3457882	ArgumentList	& ( opt -> exb . mmd )		3457875	1					
ANR	3457883	Argument	& ( opt -> exb . mmd )		3457875	0					
ANR	3457884	UnaryOperationExpression	& ( opt -> exb . mmd )		3457875	0					
ANR	3457885	UnaryOperator	&		3457875	0					
ANR	3457886	MemberAccess	opt -> exb . mmd		3457875	1					
ANR	3457887	PtrMemberAccess	opt -> exb		3457875	0					
ANR	3457888	Identifier	opt		3457875	0					
ANR	3457889	Identifier	exb		3457875	1					
ANR	3457890	Identifier	mmd		3457875	1					
ANR	3457891	Argument	mmd		3457875	1					
ANR	3457892	Identifier	mmd		3457875	0					
ANR	3457893	ExpressionStatement	"copy_mml ( & ( opt -> expr . mmd ) , mmd )"	4442:2:99647:99678	3457875	1	True				
ANR	3457894	CallExpression	"copy_mml ( & ( opt -> expr . mmd ) , mmd )"		3457875	0					
ANR	3457895	Callee	copy_mml		3457875	0					
ANR	3457896	Identifier	copy_mml		3457875	0					
ANR	3457897	ArgumentList	& ( opt -> expr . mmd )		3457875	1					
ANR	3457898	Argument	& ( opt -> expr . mmd )		3457875	0					
ANR	3457899	UnaryOperationExpression	& ( opt -> expr . mmd )		3457875	0					
ANR	3457900	UnaryOperator	&		3457875	0					
ANR	3457901	MemberAccess	opt -> expr . mmd		3457875	1					
ANR	3457902	PtrMemberAccess	opt -> expr		3457875	0					
ANR	3457903	Identifier	opt		3457875	0					
ANR	3457904	Identifier	expr		3457875	1					
ANR	3457905	Identifier	mmd		3457875	1					
ANR	3457906	Argument	mmd		3457875	1					
ANR	3457907	Identifier	mmd		3457875	0					
ANR	3457908	ExpressionStatement	"copy_mml ( & ( opt -> map . mmd ) , mmd )"	4443:2:99682:99713	3457875	2	True				
ANR	3457909	CallExpression	"copy_mml ( & ( opt -> map . mmd ) , mmd )"		3457875	0					
ANR	3457910	Callee	copy_mml		3457875	0					
ANR	3457911	Identifier	copy_mml		3457875	0					
ANR	3457912	ArgumentList	& ( opt -> map . mmd )		3457875	1					
ANR	3457913	Argument	& ( opt -> map . mmd )		3457875	0					
ANR	3457914	UnaryOperationExpression	& ( opt -> map . mmd )		3457875	0					
ANR	3457915	UnaryOperator	&		3457875	0					
ANR	3457916	MemberAccess	opt -> map . mmd		3457875	1					
ANR	3457917	PtrMemberAccess	opt -> map		3457875	0					
ANR	3457918	Identifier	opt		3457875	0					
ANR	3457919	Identifier	map		3457875	1					
ANR	3457920	Identifier	mmd		3457875	1					
ANR	3457921	Argument	mmd		3457875	1					
ANR	3457922	Identifier	mmd		3457875	0					
ANR	3457923	ReturnType	static void		3457875	1					
ANR	3457924	Identifier	set_bound_node_opt_info		3457875	2					
ANR	3457925	ParameterList	"NodeOptInfo * opt , MinMaxLen * mmd"		3457875	3					
ANR	3457926	Parameter	NodeOptInfo * opt	4439:24:99574:99589	3457875	0	True				
ANR	3457927	ParameterType	NodeOptInfo *		3457875	0					
ANR	3457928	Identifier	opt		3457875	1					
ANR	3457929	Parameter	MinMaxLen * mmd	4439:42:99592:99605	3457875	1	True				
ANR	3457930	ParameterType	MinMaxLen *		3457875	0					
ANR	3457931	Identifier	mmd		3457875	1					
ANR	3457932	CFGEntryNode	ENTRY		3457875		True				
ANR	3457933	CFGExitNode	EXIT		3457875		True				
ANR	3457934	Symbol	opt -> exb		3457875						
ANR	3457935	Symbol	opt		3457875						
ANR	3457936	Symbol	mmd		3457875						
ANR	3457937	Symbol	& opt -> map		3457875						
ANR	3457938	Symbol	& opt -> exb		3457875						
ANR	3457939	Symbol	& opt -> exb . mmd		3457875						
ANR	3457940	Symbol	opt -> map		3457875						
ANR	3457941	Symbol	& opt -> map . mmd		3457875						
ANR	3457942	Symbol	& opt -> expr . mmd		3457875						
ANR	3457943	Symbol	* opt		3457875						
ANR	3457944	Symbol	opt -> expr		3457875						
ANR	3457945	Symbol	& opt -> expr		3457875						
ANR	3457946	Function	clear_node_opt_info	4446:0:99718:99966							
ANR	3457947	FunctionDef	clear_node_opt_info (NodeOptInfo * opt)		3457946	0					
ANR	3457948	CompoundStatement		4448:0:99768:99966	3457946	0					
ANR	3457949	ExpressionStatement	clear_mml ( & opt -> len )	4449:2:99772:99792	3457946	0	True				
ANR	3457950	CallExpression	clear_mml ( & opt -> len )		3457946	0					
ANR	3457951	Callee	clear_mml		3457946	0					
ANR	3457952	Identifier	clear_mml		3457946	0					
ANR	3457953	ArgumentList	& opt -> len		3457946	1					
ANR	3457954	Argument	& opt -> len		3457946	0					
ANR	3457955	UnaryOperationExpression	& opt -> len		3457946	0					
ANR	3457956	UnaryOperator	&		3457946	0					
ANR	3457957	PtrMemberAccess	opt -> len		3457946	1					
ANR	3457958	Identifier	opt		3457946	0					
ANR	3457959	Identifier	len		3457946	1					
ANR	3457960	ExpressionStatement	clear_opt_anc_info ( & opt -> anc )	4450:2:99796:99825	3457946	1	True				
ANR	3457961	CallExpression	clear_opt_anc_info ( & opt -> anc )		3457946	0					
ANR	3457962	Callee	clear_opt_anc_info		3457946	0					
ANR	3457963	Identifier	clear_opt_anc_info		3457946	0					
ANR	3457964	ArgumentList	& opt -> anc		3457946	1					
ANR	3457965	Argument	& opt -> anc		3457946	0					
ANR	3457966	UnaryOperationExpression	& opt -> anc		3457946	0					
ANR	3457967	UnaryOperator	&		3457946	0					
ANR	3457968	PtrMemberAccess	opt -> anc		3457946	1					
ANR	3457969	Identifier	opt		3457946	0					
ANR	3457970	Identifier	anc		3457946	1					
ANR	3457971	ExpressionStatement	clear_opt_exact_info ( & opt -> exb )	4451:2:99829:99860	3457946	2	True				
ANR	3457972	CallExpression	clear_opt_exact_info ( & opt -> exb )		3457946	0					
ANR	3457973	Callee	clear_opt_exact_info		3457946	0					
ANR	3457974	Identifier	clear_opt_exact_info		3457946	0					
ANR	3457975	ArgumentList	& opt -> exb		3457946	1					
ANR	3457976	Argument	& opt -> exb		3457946	0					
ANR	3457977	UnaryOperationExpression	& opt -> exb		3457946	0					
ANR	3457978	UnaryOperator	&		3457946	0					
ANR	3457979	PtrMemberAccess	opt -> exb		3457946	1					
ANR	3457980	Identifier	opt		3457946	0					
ANR	3457981	Identifier	exb		3457946	1					
ANR	3457982	ExpressionStatement	clear_opt_exact_info ( & opt -> exm )	4452:2:99864:99895	3457946	3	True				
ANR	3457983	CallExpression	clear_opt_exact_info ( & opt -> exm )		3457946	0					
ANR	3457984	Callee	clear_opt_exact_info		3457946	0					
ANR	3457985	Identifier	clear_opt_exact_info		3457946	0					
ANR	3457986	ArgumentList	& opt -> exm		3457946	1					
ANR	3457987	Argument	& opt -> exm		3457946	0					
ANR	3457988	UnaryOperationExpression	& opt -> exm		3457946	0					
ANR	3457989	UnaryOperator	&		3457946	0					
ANR	3457990	PtrMemberAccess	opt -> exm		3457946	1					
ANR	3457991	Identifier	opt		3457946	0					
ANR	3457992	Identifier	exm		3457946	1					
ANR	3457993	ExpressionStatement	clear_opt_exact_info ( & opt -> expr )	4453:2:99899:99931	3457946	4	True				
ANR	3457994	CallExpression	clear_opt_exact_info ( & opt -> expr )		3457946	0					
ANR	3457995	Callee	clear_opt_exact_info		3457946	0					
ANR	3457996	Identifier	clear_opt_exact_info		3457946	0					
ANR	3457997	ArgumentList	& opt -> expr		3457946	1					
ANR	3457998	Argument	& opt -> expr		3457946	0					
ANR	3457999	UnaryOperationExpression	& opt -> expr		3457946	0					
ANR	3458000	UnaryOperator	&		3457946	0					
ANR	3458001	PtrMemberAccess	opt -> expr		3457946	1					
ANR	3458002	Identifier	opt		3457946	0					
ANR	3458003	Identifier	expr		3457946	1					
ANR	3458004	ExpressionStatement	clear_opt_map_info ( & opt -> map )	4454:2:99935:99964	3457946	5	True				
ANR	3458005	CallExpression	clear_opt_map_info ( & opt -> map )		3457946	0					
ANR	3458006	Callee	clear_opt_map_info		3457946	0					
ANR	3458007	Identifier	clear_opt_map_info		3457946	0					
ANR	3458008	ArgumentList	& opt -> map		3457946	1					
ANR	3458009	Argument	& opt -> map		3457946	0					
ANR	3458010	UnaryOperationExpression	& opt -> map		3457946	0					
ANR	3458011	UnaryOperator	&		3457946	0					
ANR	3458012	PtrMemberAccess	opt -> map		3457946	1					
ANR	3458013	Identifier	opt		3457946	0					
ANR	3458014	Identifier	map		3457946	1					
ANR	3458015	ReturnType	static void		3457946	1					
ANR	3458016	Identifier	clear_node_opt_info		3457946	2					
ANR	3458017	ParameterList	NodeOptInfo * opt		3457946	3					
ANR	3458018	Parameter	NodeOptInfo * opt	4447:20:99750:99765	3457946	0	True				
ANR	3458019	ParameterType	NodeOptInfo *		3457946	0					
ANR	3458020	Identifier	opt		3457946	1					
ANR	3458021	CFGEntryNode	ENTRY		3457946		True				
ANR	3458022	CFGExitNode	EXIT		3457946		True				
ANR	3458023	Symbol	opt		3457946						
ANR	3458024	Symbol	& opt -> exm		3457946						
ANR	3458025	Symbol	& opt -> map		3457946						
ANR	3458026	Symbol	& opt -> exb		3457946						
ANR	3458027	Symbol	& opt -> len		3457946						
ANR	3458028	Symbol	& opt -> anc		3457946						
ANR	3458029	Symbol	& opt -> expr		3457946						
ANR	3458030	Function	copy_node_opt_info	4457:0:99969:100053							
ANR	3458031	FunctionDef	"copy_node_opt_info (NodeOptInfo * to , NodeOptInfo * from)"		3458030	0					
ANR	3458032	CompoundStatement		4459:0:100036:100053	3458030	0					
ANR	3458033	ExpressionStatement	* to = * from	4460:2:100040:100051	3458030	0	True				
ANR	3458034	AssignmentExpression	* to = * from		3458030	0		=			
ANR	3458035	UnaryOperationExpression	* to		3458030	0					
ANR	3458036	UnaryOperator	*		3458030	0					
ANR	3458037	Identifier	to		3458030	1					
ANR	3458038	UnaryOperationExpression	* from		3458030	1					
ANR	3458039	UnaryOperator	*		3458030	0					
ANR	3458040	Identifier	from		3458030	1					
ANR	3458041	ReturnType	static void		3458030	1					
ANR	3458042	Identifier	copy_node_opt_info		3458030	2					
ANR	3458043	ParameterList	"NodeOptInfo * to , NodeOptInfo * from"		3458030	3					
ANR	3458044	Parameter	NodeOptInfo * to	4458:19:100000:100014	3458030	0	True				
ANR	3458045	ParameterType	NodeOptInfo *		3458030	0					
ANR	3458046	Identifier	to		3458030	1					
ANR	3458047	Parameter	NodeOptInfo * from	4458:36:100017:100033	3458030	1	True				
ANR	3458048	ParameterType	NodeOptInfo *		3458030	0					
ANR	3458049	Identifier	from		3458030	1					
ANR	3458050	CFGEntryNode	ENTRY		3458030		True				
ANR	3458051	CFGExitNode	EXIT		3458030		True				
ANR	3458052	Symbol	* to		3458030						
ANR	3458053	Symbol	from		3458030						
ANR	3458054	Symbol	to		3458030						
ANR	3458055	Symbol	* from		3458030						
ANR	3458056	Function	concat_left_node_opt_info	4463:0:100056:101602							
ANR	3458057	FunctionDef	"concat_left_node_opt_info (OnigEncoding enc , NodeOptInfo * to , NodeOptInfo * add)"		3458056	0					
ANR	3458058	CompoundStatement		4465:0:100147:101602	3458056	0					
ANR	3458059	IdentifierDeclStatement	"int exb_reach , exm_reach ;"	4466:2:100151:100175	3458056	0	True				
ANR	3458060	IdentifierDecl	exb_reach		3458056	0					
ANR	3458061	IdentifierDeclType	int		3458056	0					
ANR	3458062	Identifier	exb_reach		3458056	1					
ANR	3458063	IdentifierDecl	exm_reach		3458056	1					
ANR	3458064	IdentifierDeclType	int		3458056	0					
ANR	3458065	Identifier	exm_reach		3458056	1					
ANR	3458066	IdentifierDeclStatement	OptAncInfo tanc ;	4467:2:100179:100194	3458056	1	True				
ANR	3458067	IdentifierDecl	tanc		3458056	0					
ANR	3458068	IdentifierDeclType	OptAncInfo		3458056	0					
ANR	3458069	Identifier	tanc		3458056	1					
ANR	3458070	ExpressionStatement	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , to -> len . max , add -> len . max )"	4469:2:100199:100273	3458056	2	True				
ANR	3458071	CallExpression	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , to -> len . max , add -> len . max )"		3458056	0					
ANR	3458072	Callee	concat_opt_anc_info		3458056	0					
ANR	3458073	Identifier	concat_opt_anc_info		3458056	0					
ANR	3458074	ArgumentList	& tanc		3458056	1					
ANR	3458075	Argument	& tanc		3458056	0					
ANR	3458076	UnaryOperationExpression	& tanc		3458056	0					
ANR	3458077	UnaryOperator	&		3458056	0					
ANR	3458078	Identifier	tanc		3458056	1					
ANR	3458079	Argument	& to -> anc		3458056	1					
ANR	3458080	UnaryOperationExpression	& to -> anc		3458056	0					
ANR	3458081	UnaryOperator	&		3458056	0					
ANR	3458082	PtrMemberAccess	to -> anc		3458056	1					
ANR	3458083	Identifier	to		3458056	0					
ANR	3458084	Identifier	anc		3458056	1					
ANR	3458085	Argument	& add -> anc		3458056	2					
ANR	3458086	UnaryOperationExpression	& add -> anc		3458056	0					
ANR	3458087	UnaryOperator	&		3458056	0					
ANR	3458088	PtrMemberAccess	add -> anc		3458056	1					
ANR	3458089	Identifier	add		3458056	0					
ANR	3458090	Identifier	anc		3458056	1					
ANR	3458091	Argument	to -> len . max		3458056	3					
ANR	3458092	MemberAccess	to -> len . max		3458056	0					
ANR	3458093	PtrMemberAccess	to -> len		3458056	0					
ANR	3458094	Identifier	to		3458056	0					
ANR	3458095	Identifier	len		3458056	1					
ANR	3458096	Identifier	max		3458056	1					
ANR	3458097	Argument	add -> len . max		3458056	4					
ANR	3458098	MemberAccess	add -> len . max		3458056	0					
ANR	3458099	PtrMemberAccess	add -> len		3458056	0					
ANR	3458100	Identifier	add		3458056	0					
ANR	3458101	Identifier	len		3458056	1					
ANR	3458102	Identifier	max		3458056	1					
ANR	3458103	ExpressionStatement	"copy_opt_anc_info ( & to -> anc , & tanc )"	4470:2:100277:100311	3458056	3	True				
ANR	3458104	CallExpression	"copy_opt_anc_info ( & to -> anc , & tanc )"		3458056	0					
ANR	3458105	Callee	copy_opt_anc_info		3458056	0					
ANR	3458106	Identifier	copy_opt_anc_info		3458056	0					
ANR	3458107	ArgumentList	& to -> anc		3458056	1					
ANR	3458108	Argument	& to -> anc		3458056	0					
ANR	3458109	UnaryOperationExpression	& to -> anc		3458056	0					
ANR	3458110	UnaryOperator	&		3458056	0					
ANR	3458111	PtrMemberAccess	to -> anc		3458056	1					
ANR	3458112	Identifier	to		3458056	0					
ANR	3458113	Identifier	anc		3458056	1					
ANR	3458114	Argument	& tanc		3458056	1					
ANR	3458115	UnaryOperationExpression	& tanc		3458056	0					
ANR	3458116	UnaryOperator	&		3458056	0					
ANR	3458117	Identifier	tanc		3458056	1					
ANR	3458118	IfStatement	if ( add -> exb . len > 0 && to -> len . max == 0 )		3458056	4					
ANR	3458119	Condition	add -> exb . len > 0 && to -> len . max == 0	4472:6:100320:100355	3458056	0	True				
ANR	3458120	AndExpression	add -> exb . len > 0 && to -> len . max == 0		3458056	0		&&			
ANR	3458121	RelationalExpression	add -> exb . len > 0		3458056	0		>			
ANR	3458122	MemberAccess	add -> exb . len		3458056	0					
ANR	3458123	PtrMemberAccess	add -> exb		3458056	0					
ANR	3458124	Identifier	add		3458056	0					
ANR	3458125	Identifier	exb		3458056	1					
ANR	3458126	Identifier	len		3458056	1					
ANR	3458127	PrimaryExpression	0		3458056	1					
ANR	3458128	EqualityExpression	to -> len . max == 0		3458056	1		==			
ANR	3458129	MemberAccess	to -> len . max		3458056	0					
ANR	3458130	PtrMemberAccess	to -> len		3458056	0					
ANR	3458131	Identifier	to		3458056	0					
ANR	3458132	Identifier	len		3458056	1					
ANR	3458133	Identifier	max		3458056	1					
ANR	3458134	PrimaryExpression	0		3458056	1					
ANR	3458135	CompoundStatement		8:44:210:210	3458056	1					
ANR	3458136	ExpressionStatement	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> exb . anc , to -> len . max , add -> len . max )"	4473:4:100364:100445	3458056	0	True				
ANR	3458137	CallExpression	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> exb . anc , to -> len . max , add -> len . max )"		3458056	0					
ANR	3458138	Callee	concat_opt_anc_info		3458056	0					
ANR	3458139	Identifier	concat_opt_anc_info		3458056	0					
ANR	3458140	ArgumentList	& tanc		3458056	1					
ANR	3458141	Argument	& tanc		3458056	0					
ANR	3458142	UnaryOperationExpression	& tanc		3458056	0					
ANR	3458143	UnaryOperator	&		3458056	0					
ANR	3458144	Identifier	tanc		3458056	1					
ANR	3458145	Argument	& to -> anc		3458056	1					
ANR	3458146	UnaryOperationExpression	& to -> anc		3458056	0					
ANR	3458147	UnaryOperator	&		3458056	0					
ANR	3458148	PtrMemberAccess	to -> anc		3458056	1					
ANR	3458149	Identifier	to		3458056	0					
ANR	3458150	Identifier	anc		3458056	1					
ANR	3458151	Argument	& add -> exb . anc		3458056	2					
ANR	3458152	UnaryOperationExpression	& add -> exb . anc		3458056	0					
ANR	3458153	UnaryOperator	&		3458056	0					
ANR	3458154	MemberAccess	add -> exb . anc		3458056	1					
ANR	3458155	PtrMemberAccess	add -> exb		3458056	0					
ANR	3458156	Identifier	add		3458056	0					
ANR	3458157	Identifier	exb		3458056	1					
ANR	3458158	Identifier	anc		3458056	1					
ANR	3458159	Argument	to -> len . max		3458056	3					
ANR	3458160	MemberAccess	to -> len . max		3458056	0					
ANR	3458161	PtrMemberAccess	to -> len		3458056	0					
ANR	3458162	Identifier	to		3458056	0					
ANR	3458163	Identifier	len		3458056	1					
ANR	3458164	Identifier	max		3458056	1					
ANR	3458165	Argument	add -> len . max		3458056	4					
ANR	3458166	MemberAccess	add -> len . max		3458056	0					
ANR	3458167	PtrMemberAccess	add -> len		3458056	0					
ANR	3458168	Identifier	add		3458056	0					
ANR	3458169	Identifier	len		3458056	1					
ANR	3458170	Identifier	max		3458056	1					
ANR	3458171	ExpressionStatement	"copy_opt_anc_info ( & add -> exb . anc , & tanc )"	4475:4:100451:100490	3458056	1	True				
ANR	3458172	CallExpression	"copy_opt_anc_info ( & add -> exb . anc , & tanc )"		3458056	0					
ANR	3458173	Callee	copy_opt_anc_info		3458056	0					
ANR	3458174	Identifier	copy_opt_anc_info		3458056	0					
ANR	3458175	ArgumentList	& add -> exb . anc		3458056	1					
ANR	3458176	Argument	& add -> exb . anc		3458056	0					
ANR	3458177	UnaryOperationExpression	& add -> exb . anc		3458056	0					
ANR	3458178	UnaryOperator	&		3458056	0					
ANR	3458179	MemberAccess	add -> exb . anc		3458056	1					
ANR	3458180	PtrMemberAccess	add -> exb		3458056	0					
ANR	3458181	Identifier	add		3458056	0					
ANR	3458182	Identifier	exb		3458056	1					
ANR	3458183	Identifier	anc		3458056	1					
ANR	3458184	Argument	& tanc		3458056	1					
ANR	3458185	UnaryOperationExpression	& tanc		3458056	0					
ANR	3458186	UnaryOperator	&		3458056	0					
ANR	3458187	Identifier	tanc		3458056	1					
ANR	3458188	IfStatement	if ( add -> map . value > 0 && to -> len . max == 0 )		3458056	5					
ANR	3458189	Condition	add -> map . value > 0 && to -> len . max == 0	4478:6:100503:100540	3458056	0	True				
ANR	3458190	AndExpression	add -> map . value > 0 && to -> len . max == 0		3458056	0		&&			
ANR	3458191	RelationalExpression	add -> map . value > 0		3458056	0		>			
ANR	3458192	MemberAccess	add -> map . value		3458056	0					
ANR	3458193	PtrMemberAccess	add -> map		3458056	0					
ANR	3458194	Identifier	add		3458056	0					
ANR	3458195	Identifier	map		3458056	1					
ANR	3458196	Identifier	value		3458056	1					
ANR	3458197	PrimaryExpression	0		3458056	1					
ANR	3458198	EqualityExpression	to -> len . max == 0		3458056	1		==			
ANR	3458199	MemberAccess	to -> len . max		3458056	0					
ANR	3458200	PtrMemberAccess	to -> len		3458056	0					
ANR	3458201	Identifier	to		3458056	0					
ANR	3458202	Identifier	len		3458056	1					
ANR	3458203	Identifier	max		3458056	1					
ANR	3458204	PrimaryExpression	0		3458056	1					
ANR	3458205	CompoundStatement		14:46:395:395	3458056	1					
ANR	3458206	IfStatement	if ( add -> map . mmd . max == 0 )		3458056	0					
ANR	3458207	Condition	add -> map . mmd . max == 0	4479:8:100553:100573	3458056	0	True				
ANR	3458208	EqualityExpression	add -> map . mmd . max == 0		3458056	0		==			
ANR	3458209	MemberAccess	add -> map . mmd . max		3458056	0					
ANR	3458210	MemberAccess	add -> map . mmd		3458056	0					
ANR	3458211	PtrMemberAccess	add -> map		3458056	0					
ANR	3458212	Identifier	add		3458056	0					
ANR	3458213	Identifier	map		3458056	1					
ANR	3458214	Identifier	mmd		3458056	1					
ANR	3458215	Identifier	max		3458056	1					
ANR	3458216	PrimaryExpression	0		3458056	1					
ANR	3458217	ExpressionStatement	add -> map . anc . left_anchor |= to -> anc . left_anchor	4480:6:100582:100629	3458056	1	True				
ANR	3458218	AssignmentExpression	add -> map . anc . left_anchor |= to -> anc . left_anchor		3458056	0		|=			
ANR	3458219	MemberAccess	add -> map . anc . left_anchor		3458056	0					
ANR	3458220	MemberAccess	add -> map . anc		3458056	0					
ANR	3458221	PtrMemberAccess	add -> map		3458056	0					
ANR	3458222	Identifier	add		3458056	0					
ANR	3458223	Identifier	map		3458056	1					
ANR	3458224	Identifier	anc		3458056	1					
ANR	3458225	Identifier	left_anchor		3458056	1					
ANR	3458226	MemberAccess	to -> anc . left_anchor		3458056	1					
ANR	3458227	PtrMemberAccess	to -> anc		3458056	0					
ANR	3458228	Identifier	to		3458056	0					
ANR	3458229	Identifier	anc		3458056	1					
ANR	3458230	Identifier	left_anchor		3458056	1					
ANR	3458231	ExpressionStatement	exb_reach = to -> exb . reach_end	4483:2:100638:100667	3458056	6	True				
ANR	3458232	AssignmentExpression	exb_reach = to -> exb . reach_end		3458056	0		=			
ANR	3458233	Identifier	exb_reach		3458056	0					
ANR	3458234	MemberAccess	to -> exb . reach_end		3458056	1					
ANR	3458235	PtrMemberAccess	to -> exb		3458056	0					
ANR	3458236	Identifier	to		3458056	0					
ANR	3458237	Identifier	exb		3458056	1					
ANR	3458238	Identifier	reach_end		3458056	1					
ANR	3458239	ExpressionStatement	exm_reach = to -> exm . reach_end	4484:2:100671:100700	3458056	7	True				
ANR	3458240	AssignmentExpression	exm_reach = to -> exm . reach_end		3458056	0		=			
ANR	3458241	Identifier	exm_reach		3458056	0					
ANR	3458242	MemberAccess	to -> exm . reach_end		3458056	1					
ANR	3458243	PtrMemberAccess	to -> exm		3458056	0					
ANR	3458244	Identifier	to		3458056	0					
ANR	3458245	Identifier	exm		3458056	1					
ANR	3458246	Identifier	reach_end		3458056	1					
ANR	3458247	IfStatement	if ( add -> len . max != 0 )		3458056	8					
ANR	3458248	Condition	add -> len . max != 0	4486:6:100709:100725	3458056	0	True				
ANR	3458249	EqualityExpression	add -> len . max != 0		3458056	0		!=			
ANR	3458250	MemberAccess	add -> len . max		3458056	0					
ANR	3458251	PtrMemberAccess	add -> len		3458056	0					
ANR	3458252	Identifier	add		3458056	0					
ANR	3458253	Identifier	len		3458056	1					
ANR	3458254	Identifier	max		3458056	1					
ANR	3458255	PrimaryExpression	0		3458056	1					
ANR	3458256	ExpressionStatement	to -> exb . reach_end = to -> exm . reach_end = 0	4487:4:100732:100773	3458056	1	True				
ANR	3458257	AssignmentExpression	to -> exb . reach_end = to -> exm . reach_end = 0		3458056	0		=			
ANR	3458258	MemberAccess	to -> exb . reach_end		3458056	0					
ANR	3458259	PtrMemberAccess	to -> exb		3458056	0					
ANR	3458260	Identifier	to		3458056	0					
ANR	3458261	Identifier	exb		3458056	1					
ANR	3458262	Identifier	reach_end		3458056	1					
ANR	3458263	AssignmentExpression	to -> exm . reach_end = 0		3458056	1		=			
ANR	3458264	MemberAccess	to -> exm . reach_end		3458056	0					
ANR	3458265	PtrMemberAccess	to -> exm		3458056	0					
ANR	3458266	Identifier	to		3458056	0					
ANR	3458267	Identifier	exm		3458056	1					
ANR	3458268	Identifier	reach_end		3458056	1					
ANR	3458269	PrimaryExpression	0		3458056	1					
ANR	3458270	IfStatement	if ( add -> exb . len > 0 )		3458056	9					
ANR	3458271	Condition	add -> exb . len > 0	4489:6:100782:100797	3458056	0	True				
ANR	3458272	RelationalExpression	add -> exb . len > 0		3458056	0		>			
ANR	3458273	MemberAccess	add -> exb . len		3458056	0					
ANR	3458274	PtrMemberAccess	add -> exb		3458056	0					
ANR	3458275	Identifier	add		3458056	0					
ANR	3458276	Identifier	exb		3458056	1					
ANR	3458277	Identifier	len		3458056	1					
ANR	3458278	PrimaryExpression	0		3458056	1					
ANR	3458279	CompoundStatement		25:24:652:652	3458056	1					
ANR	3458280	IfStatement	if ( exb_reach )		3458056	0					
ANR	3458281	Condition	exb_reach	4490:8:100810:100818	3458056	0	True				
ANR	3458282	Identifier	exb_reach		3458056	0					
ANR	3458283	CompoundStatement		26:19:673:673	3458056	1					
ANR	3458284	ExpressionStatement	"concat_opt_exact_info ( & to -> exb , & add -> exb , enc )"	4491:6:100829:100876	3458056	0	True				
ANR	3458285	CallExpression	"concat_opt_exact_info ( & to -> exb , & add -> exb , enc )"		3458056	0					
ANR	3458286	Callee	concat_opt_exact_info		3458056	0					
ANR	3458287	Identifier	concat_opt_exact_info		3458056	0					
ANR	3458288	ArgumentList	& to -> exb		3458056	1					
ANR	3458289	Argument	& to -> exb		3458056	0					
ANR	3458290	UnaryOperationExpression	& to -> exb		3458056	0					
ANR	3458291	UnaryOperator	&		3458056	0					
ANR	3458292	PtrMemberAccess	to -> exb		3458056	1					
ANR	3458293	Identifier	to		3458056	0					
ANR	3458294	Identifier	exb		3458056	1					
ANR	3458295	Argument	& add -> exb		3458056	1					
ANR	3458296	UnaryOperationExpression	& add -> exb		3458056	0					
ANR	3458297	UnaryOperator	&		3458056	0					
ANR	3458298	PtrMemberAccess	add -> exb		3458056	1					
ANR	3458299	Identifier	add		3458056	0					
ANR	3458300	Identifier	exb		3458056	1					
ANR	3458301	Argument	enc		3458056	2					
ANR	3458302	Identifier	enc		3458056	0					
ANR	3458303	ExpressionStatement	clear_opt_exact_info ( & add -> exb )	4492:6:100884:100915	3458056	1	True				
ANR	3458304	CallExpression	clear_opt_exact_info ( & add -> exb )		3458056	0					
ANR	3458305	Callee	clear_opt_exact_info		3458056	0					
ANR	3458306	Identifier	clear_opt_exact_info		3458056	0					
ANR	3458307	ArgumentList	& add -> exb		3458056	1					
ANR	3458308	Argument	& add -> exb		3458056	0					
ANR	3458309	UnaryOperationExpression	& add -> exb		3458056	0					
ANR	3458310	UnaryOperator	&		3458056	0					
ANR	3458311	PtrMemberAccess	add -> exb		3458056	1					
ANR	3458312	Identifier	add		3458056	0					
ANR	3458313	Identifier	exb		3458056	1					
ANR	3458314	ElseStatement	else		3458056	0					
ANR	3458315	IfStatement	if ( exm_reach )		3458056	0					
ANR	3458316	Condition	exm_reach	4494:13:100936:100944	3458056	0	True				
ANR	3458317	Identifier	exm_reach		3458056	0					
ANR	3458318	CompoundStatement		30:24:799:799	3458056	1					
ANR	3458319	ExpressionStatement	"concat_opt_exact_info ( & to -> exm , & add -> exb , enc )"	4495:6:100955:101002	3458056	0	True				
ANR	3458320	CallExpression	"concat_opt_exact_info ( & to -> exm , & add -> exb , enc )"		3458056	0					
ANR	3458321	Callee	concat_opt_exact_info		3458056	0					
ANR	3458322	Identifier	concat_opt_exact_info		3458056	0					
ANR	3458323	ArgumentList	& to -> exm		3458056	1					
ANR	3458324	Argument	& to -> exm		3458056	0					
ANR	3458325	UnaryOperationExpression	& to -> exm		3458056	0					
ANR	3458326	UnaryOperator	&		3458056	0					
ANR	3458327	PtrMemberAccess	to -> exm		3458056	1					
ANR	3458328	Identifier	to		3458056	0					
ANR	3458329	Identifier	exm		3458056	1					
ANR	3458330	Argument	& add -> exb		3458056	1					
ANR	3458331	UnaryOperationExpression	& add -> exb		3458056	0					
ANR	3458332	UnaryOperator	&		3458056	0					
ANR	3458333	PtrMemberAccess	add -> exb		3458056	1					
ANR	3458334	Identifier	add		3458056	0					
ANR	3458335	Identifier	exb		3458056	1					
ANR	3458336	Argument	enc		3458056	2					
ANR	3458337	Identifier	enc		3458056	0					
ANR	3458338	ExpressionStatement	clear_opt_exact_info ( & add -> exb )	4496:6:101010:101041	3458056	1	True				
ANR	3458339	CallExpression	clear_opt_exact_info ( & add -> exb )		3458056	0					
ANR	3458340	Callee	clear_opt_exact_info		3458056	0					
ANR	3458341	Identifier	clear_opt_exact_info		3458056	0					
ANR	3458342	ArgumentList	& add -> exb		3458056	1					
ANR	3458343	Argument	& add -> exb		3458056	0					
ANR	3458344	UnaryOperationExpression	& add -> exb		3458056	0					
ANR	3458345	UnaryOperator	&		3458056	0					
ANR	3458346	PtrMemberAccess	add -> exb		3458056	1					
ANR	3458347	Identifier	add		3458056	0					
ANR	3458348	Identifier	exb		3458056	1					
ANR	3458349	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exm , & add -> exb )"	4499:2:101055:101102	3458056	10	True				
ANR	3458350	CallExpression	"select_opt_exact_info ( enc , & to -> exm , & add -> exb )"		3458056	0					
ANR	3458351	Callee	select_opt_exact_info		3458056	0					
ANR	3458352	Identifier	select_opt_exact_info		3458056	0					
ANR	3458353	ArgumentList	enc		3458056	1					
ANR	3458354	Argument	enc		3458056	0					
ANR	3458355	Identifier	enc		3458056	0					
ANR	3458356	Argument	& to -> exm		3458056	1					
ANR	3458357	UnaryOperationExpression	& to -> exm		3458056	0					
ANR	3458358	UnaryOperator	&		3458056	0					
ANR	3458359	PtrMemberAccess	to -> exm		3458056	1					
ANR	3458360	Identifier	to		3458056	0					
ANR	3458361	Identifier	exm		3458056	1					
ANR	3458362	Argument	& add -> exb		3458056	2					
ANR	3458363	UnaryOperationExpression	& add -> exb		3458056	0					
ANR	3458364	UnaryOperator	&		3458056	0					
ANR	3458365	PtrMemberAccess	add -> exb		3458056	1					
ANR	3458366	Identifier	add		3458056	0					
ANR	3458367	Identifier	exb		3458056	1					
ANR	3458368	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exm , & add -> exm )"	4500:2:101106:101153	3458056	11	True				
ANR	3458369	CallExpression	"select_opt_exact_info ( enc , & to -> exm , & add -> exm )"		3458056	0					
ANR	3458370	Callee	select_opt_exact_info		3458056	0					
ANR	3458371	Identifier	select_opt_exact_info		3458056	0					
ANR	3458372	ArgumentList	enc		3458056	1					
ANR	3458373	Argument	enc		3458056	0					
ANR	3458374	Identifier	enc		3458056	0					
ANR	3458375	Argument	& to -> exm		3458056	1					
ANR	3458376	UnaryOperationExpression	& to -> exm		3458056	0					
ANR	3458377	UnaryOperator	&		3458056	0					
ANR	3458378	PtrMemberAccess	to -> exm		3458056	1					
ANR	3458379	Identifier	to		3458056	0					
ANR	3458380	Identifier	exm		3458056	1					
ANR	3458381	Argument	& add -> exm		3458056	2					
ANR	3458382	UnaryOperationExpression	& add -> exm		3458056	0					
ANR	3458383	UnaryOperator	&		3458056	0					
ANR	3458384	PtrMemberAccess	add -> exm		3458056	1					
ANR	3458385	Identifier	add		3458056	0					
ANR	3458386	Identifier	exm		3458056	1					
ANR	3458387	IfStatement	if ( to -> expr . len > 0 )		3458056	12					
ANR	3458388	Condition	to -> expr . len > 0	4502:6:101162:101177	3458056	0	True				
ANR	3458389	RelationalExpression	to -> expr . len > 0		3458056	0		>			
ANR	3458390	MemberAccess	to -> expr . len		3458056	0					
ANR	3458391	PtrMemberAccess	to -> expr		3458056	0					
ANR	3458392	Identifier	to		3458056	0					
ANR	3458393	Identifier	expr		3458056	1					
ANR	3458394	Identifier	len		3458056	1					
ANR	3458395	PrimaryExpression	0		3458056	1					
ANR	3458396	CompoundStatement		38:24:1032:1032	3458056	1					
ANR	3458397	IfStatement	if ( add -> len . max > 0 )		3458056	0					
ANR	3458398	Condition	add -> len . max > 0	4503:8:101190:101205	3458056	0	True				
ANR	3458399	RelationalExpression	add -> len . max > 0		3458056	0		>			
ANR	3458400	MemberAccess	add -> len . max		3458056	0					
ANR	3458401	PtrMemberAccess	add -> len		3458056	0					
ANR	3458402	Identifier	add		3458056	0					
ANR	3458403	Identifier	len		3458056	1					
ANR	3458404	Identifier	max		3458056	1					
ANR	3458405	PrimaryExpression	0		3458056	1					
ANR	3458406	CompoundStatement		39:26:1060:1060	3458056	1					
ANR	3458407	IfStatement	if ( to -> expr . len > ( int ) add -> len . max )		3458056	0					
ANR	3458408	Condition	to -> expr . len > ( int ) add -> len . max	4504:10:101220:101252	3458056	0	True				
ANR	3458409	RelationalExpression	to -> expr . len > ( int ) add -> len . max		3458056	0		>			
ANR	3458410	MemberAccess	to -> expr . len		3458056	0					
ANR	3458411	PtrMemberAccess	to -> expr		3458056	0					
ANR	3458412	Identifier	to		3458056	0					
ANR	3458413	Identifier	expr		3458056	1					
ANR	3458414	Identifier	len		3458056	1					
ANR	3458415	CastExpression	( int ) add -> len . max		3458056	1					
ANR	3458416	CastTarget	int		3458056	0					
ANR	3458417	MemberAccess	add -> len . max		3458056	1					
ANR	3458418	PtrMemberAccess	add -> len		3458056	0					
ANR	3458419	Identifier	add		3458056	0					
ANR	3458420	Identifier	len		3458056	1					
ANR	3458421	Identifier	max		3458056	1					
ANR	3458422	ExpressionStatement	to -> expr . len = add -> len . max	4505:1:101256:101283	3458056	1	True				
ANR	3458423	AssignmentExpression	to -> expr . len = add -> len . max		3458056	0		=			
ANR	3458424	MemberAccess	to -> expr . len		3458056	0					
ANR	3458425	PtrMemberAccess	to -> expr		3458056	0					
ANR	3458426	Identifier	to		3458056	0					
ANR	3458427	Identifier	expr		3458056	1					
ANR	3458428	Identifier	len		3458056	1					
ANR	3458429	MemberAccess	add -> len . max		3458056	1					
ANR	3458430	PtrMemberAccess	add -> len		3458056	0					
ANR	3458431	Identifier	add		3458056	0					
ANR	3458432	Identifier	len		3458056	1					
ANR	3458433	Identifier	max		3458056	1					
ANR	3458434	IfStatement	if ( to -> expr . mmd . max == 0 )		3458056	1					
ANR	3458435	Condition	to -> expr . mmd . max == 0	4507:10:101296:101316	3458056	0	True				
ANR	3458436	EqualityExpression	to -> expr . mmd . max == 0		3458056	0		==			
ANR	3458437	MemberAccess	to -> expr . mmd . max		3458056	0					
ANR	3458438	MemberAccess	to -> expr . mmd		3458056	0					
ANR	3458439	PtrMemberAccess	to -> expr		3458056	0					
ANR	3458440	Identifier	to		3458056	0					
ANR	3458441	Identifier	expr		3458056	1					
ANR	3458442	Identifier	mmd		3458056	1					
ANR	3458443	Identifier	max		3458056	1					
ANR	3458444	PrimaryExpression	0		3458056	1					
ANR	3458445	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exb , & to -> expr )"	4508:1:101320:101367	3458056	1	True				
ANR	3458446	CallExpression	"select_opt_exact_info ( enc , & to -> exb , & to -> expr )"		3458056	0					
ANR	3458447	Callee	select_opt_exact_info		3458056	0					
ANR	3458448	Identifier	select_opt_exact_info		3458056	0					
ANR	3458449	ArgumentList	enc		3458056	1					
ANR	3458450	Argument	enc		3458056	0					
ANR	3458451	Identifier	enc		3458056	0					
ANR	3458452	Argument	& to -> exb		3458056	1					
ANR	3458453	UnaryOperationExpression	& to -> exb		3458056	0					
ANR	3458454	UnaryOperator	&		3458056	0					
ANR	3458455	PtrMemberAccess	to -> exb		3458056	1					
ANR	3458456	Identifier	to		3458056	0					
ANR	3458457	Identifier	exb		3458056	1					
ANR	3458458	Argument	& to -> expr		3458056	2					
ANR	3458459	UnaryOperationExpression	& to -> expr		3458056	0					
ANR	3458460	UnaryOperator	&		3458056	0					
ANR	3458461	PtrMemberAccess	to -> expr		3458056	1					
ANR	3458462	Identifier	to		3458056	0					
ANR	3458463	Identifier	expr		3458056	1					
ANR	3458464	ElseStatement	else		3458056	0					
ANR	3458465	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exm , & to -> expr )"	4510:1:101381:101428	3458056	0	True				
ANR	3458466	CallExpression	"select_opt_exact_info ( enc , & to -> exm , & to -> expr )"		3458056	0					
ANR	3458467	Callee	select_opt_exact_info		3458056	0					
ANR	3458468	Identifier	select_opt_exact_info		3458056	0					
ANR	3458469	ArgumentList	enc		3458056	1					
ANR	3458470	Argument	enc		3458056	0					
ANR	3458471	Identifier	enc		3458056	0					
ANR	3458472	Argument	& to -> exm		3458056	1					
ANR	3458473	UnaryOperationExpression	& to -> exm		3458056	0					
ANR	3458474	UnaryOperator	&		3458056	0					
ANR	3458475	PtrMemberAccess	to -> exm		3458056	1					
ANR	3458476	Identifier	to		3458056	0					
ANR	3458477	Identifier	exm		3458056	1					
ANR	3458478	Argument	& to -> expr		3458056	2					
ANR	3458479	UnaryOperationExpression	& to -> expr		3458056	0					
ANR	3458480	UnaryOperator	&		3458056	0					
ANR	3458481	PtrMemberAccess	to -> expr		3458056	1					
ANR	3458482	Identifier	to		3458056	0					
ANR	3458483	Identifier	expr		3458056	1					
ANR	3458484	ElseStatement	else		3458056	0					
ANR	3458485	IfStatement	if ( add -> expr . len > 0 )		3458056	0					
ANR	3458486	Condition	add -> expr . len > 0	4513:11:101451:101467	3458056	0	True				
ANR	3458487	RelationalExpression	add -> expr . len > 0		3458056	0		>			
ANR	3458488	MemberAccess	add -> expr . len		3458056	0					
ANR	3458489	PtrMemberAccess	add -> expr		3458056	0					
ANR	3458490	Identifier	add		3458056	0					
ANR	3458491	Identifier	expr		3458056	1					
ANR	3458492	Identifier	len		3458056	1					
ANR	3458493	PrimaryExpression	0		3458056	1					
ANR	3458494	CompoundStatement		49:30:1322:1322	3458056	1					
ANR	3458495	ExpressionStatement	"copy_opt_exact_info ( & to -> expr , & add -> expr )"	4514:4:101476:101518	3458056	0	True				
ANR	3458496	CallExpression	"copy_opt_exact_info ( & to -> expr , & add -> expr )"		3458056	0					
ANR	3458497	Callee	copy_opt_exact_info		3458056	0					
ANR	3458498	Identifier	copy_opt_exact_info		3458056	0					
ANR	3458499	ArgumentList	& to -> expr		3458056	1					
ANR	3458500	Argument	& to -> expr		3458056	0					
ANR	3458501	UnaryOperationExpression	& to -> expr		3458056	0					
ANR	3458502	UnaryOperator	&		3458056	0					
ANR	3458503	PtrMemberAccess	to -> expr		3458056	1					
ANR	3458504	Identifier	to		3458056	0					
ANR	3458505	Identifier	expr		3458056	1					
ANR	3458506	Argument	& add -> expr		3458056	1					
ANR	3458507	UnaryOperationExpression	& add -> expr		3458056	0					
ANR	3458508	UnaryOperator	&		3458056	0					
ANR	3458509	PtrMemberAccess	add -> expr		3458056	1					
ANR	3458510	Identifier	add		3458056	0					
ANR	3458511	Identifier	expr		3458056	1					
ANR	3458512	ExpressionStatement	"select_opt_map_info ( & to -> map , & add -> map )"	4517:2:101527:101567	3458056	13	True				
ANR	3458513	CallExpression	"select_opt_map_info ( & to -> map , & add -> map )"		3458056	0					
ANR	3458514	Callee	select_opt_map_info		3458056	0					
ANR	3458515	Identifier	select_opt_map_info		3458056	0					
ANR	3458516	ArgumentList	& to -> map		3458056	1					
ANR	3458517	Argument	& to -> map		3458056	0					
ANR	3458518	UnaryOperationExpression	& to -> map		3458056	0					
ANR	3458519	UnaryOperator	&		3458056	0					
ANR	3458520	PtrMemberAccess	to -> map		3458056	1					
ANR	3458521	Identifier	to		3458056	0					
ANR	3458522	Identifier	map		3458056	1					
ANR	3458523	Argument	& add -> map		3458056	1					
ANR	3458524	UnaryOperationExpression	& add -> map		3458056	0					
ANR	3458525	UnaryOperator	&		3458056	0					
ANR	3458526	PtrMemberAccess	add -> map		3458056	1					
ANR	3458527	Identifier	add		3458056	0					
ANR	3458528	Identifier	map		3458056	1					
ANR	3458529	ExpressionStatement	"add_mml ( & to -> len , & add -> len )"	4519:2:101572:101600	3458056	14	True				
ANR	3458530	CallExpression	"add_mml ( & to -> len , & add -> len )"		3458056	0					
ANR	3458531	Callee	add_mml		3458056	0					
ANR	3458532	Identifier	add_mml		3458056	0					
ANR	3458533	ArgumentList	& to -> len		3458056	1					
ANR	3458534	Argument	& to -> len		3458056	0					
ANR	3458535	UnaryOperationExpression	& to -> len		3458056	0					
ANR	3458536	UnaryOperator	&		3458056	0					
ANR	3458537	PtrMemberAccess	to -> len		3458056	1					
ANR	3458538	Identifier	to		3458056	0					
ANR	3458539	Identifier	len		3458056	1					
ANR	3458540	Argument	& add -> len		3458056	1					
ANR	3458541	UnaryOperationExpression	& add -> len		3458056	0					
ANR	3458542	UnaryOperator	&		3458056	0					
ANR	3458543	PtrMemberAccess	add -> len		3458056	1					
ANR	3458544	Identifier	add		3458056	0					
ANR	3458545	Identifier	len		3458056	1					
ANR	3458546	ReturnType	static void		3458056	1					
ANR	3458547	Identifier	concat_left_node_opt_info		3458056	2					
ANR	3458548	ParameterList	"OnigEncoding enc , NodeOptInfo * to , NodeOptInfo * add"		3458056	3					
ANR	3458549	Parameter	OnigEncoding enc	4464:26:100094:100109	3458056	0	True				
ANR	3458550	ParameterType	OnigEncoding		3458056	0					
ANR	3458551	Identifier	enc		3458056	1					
ANR	3458552	Parameter	NodeOptInfo * to	4464:44:100112:100126	3458056	1	True				
ANR	3458553	ParameterType	NodeOptInfo *		3458056	0					
ANR	3458554	Identifier	to		3458056	1					
ANR	3458555	Parameter	NodeOptInfo * add	4464:61:100129:100144	3458056	2	True				
ANR	3458556	ParameterType	NodeOptInfo *		3458056	0					
ANR	3458557	Identifier	add		3458056	1					
ANR	3458558	CFGEntryNode	ENTRY		3458056		True				
ANR	3458559	CFGExitNode	EXIT		3458056		True				
ANR	3458560	Symbol	to -> exm		3458056						
ANR	3458561	Symbol	& add -> exm		3458056						
ANR	3458562	Symbol	exb_reach		3458056						
ANR	3458563	Symbol	to -> anc		3458056						
ANR	3458564	Symbol	& add -> map		3458056						
ANR	3458565	Symbol	& add -> anc		3458056						
ANR	3458566	Symbol	to -> expr . len		3458056						
ANR	3458567	Symbol	& tanc		3458056						
ANR	3458568	Symbol	add -> map . value		3458056						
ANR	3458569	Symbol	add -> map . mmd . max		3458056						
ANR	3458570	Symbol	to -> expr		3458056						
ANR	3458571	Symbol	add -> map . mmd		3458056						
ANR	3458572	Symbol	& add -> expr		3458056						
ANR	3458573	Symbol	tanc		3458056						
ANR	3458574	Symbol	add -> len		3458056						
ANR	3458575	Symbol	to -> exb		3458056						
ANR	3458576	Symbol	to -> exm . reach_end		3458056						
ANR	3458577	Symbol	enc		3458056						
ANR	3458578	Symbol	to -> len		3458056						
ANR	3458579	Symbol	add -> map		3458056						
ANR	3458580	Symbol	& to -> expr		3458056						
ANR	3458581	Symbol	to -> anc . left_anchor		3458056						
ANR	3458582	Symbol	add		3458056						
ANR	3458583	Symbol	& to -> len		3458056						
ANR	3458584	Symbol	* to		3458056						
ANR	3458585	Symbol	& to -> anc		3458056						
ANR	3458586	Symbol	to -> len . max		3458056						
ANR	3458587	Symbol	& to -> exm		3458056						
ANR	3458588	Symbol	exm_reach		3458056						
ANR	3458589	Symbol	& to -> map		3458056						
ANR	3458590	Symbol	add -> exb . len		3458056						
ANR	3458591	Symbol	add -> exb		3458056						
ANR	3458592	Symbol	& add -> exb . anc		3458056						
ANR	3458593	Symbol	to -> expr . mmd . max		3458056						
ANR	3458594	Symbol	* add		3458056						
ANR	3458595	Symbol	add -> map . anc . left_anchor		3458056						
ANR	3458596	Symbol	to -> expr . mmd		3458056						
ANR	3458597	Symbol	add -> expr		3458056						
ANR	3458598	Symbol	add -> len . max		3458056						
ANR	3458599	Symbol	to		3458056						
ANR	3458600	Symbol	to -> exb . reach_end		3458056						
ANR	3458601	Symbol	& to -> exb		3458056						
ANR	3458602	Symbol	& add -> len		3458056						
ANR	3458603	Symbol	add -> map . anc		3458056						
ANR	3458604	Symbol	& add -> exb		3458056						
ANR	3458605	Symbol	add -> expr . len		3458056						
ANR	3458606	Function	alt_merge_node_opt_info	4522:0:101605:102004							
ANR	3458607	FunctionDef	"alt_merge_node_opt_info (NodeOptInfo * to , NodeOptInfo * add , OptEnv * env)"		3458606	0					
ANR	3458608	CompoundStatement		4524:0:101689:102004	3458606	0					
ANR	3458609	ExpressionStatement	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"	4525:2:101693:101739	3458606	0	True				
ANR	3458610	CallExpression	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"		3458606	0					
ANR	3458611	Callee	alt_merge_opt_anc_info		3458606	0					
ANR	3458612	Identifier	alt_merge_opt_anc_info		3458606	0					
ANR	3458613	ArgumentList	& to -> anc		3458606	1					
ANR	3458614	Argument	& to -> anc		3458606	0					
ANR	3458615	UnaryOperationExpression	& to -> anc		3458606	0					
ANR	3458616	UnaryOperator	&		3458606	0					
ANR	3458617	PtrMemberAccess	to -> anc		3458606	1					
ANR	3458618	Identifier	to		3458606	0					
ANR	3458619	Identifier	anc		3458606	1					
ANR	3458620	Argument	& add -> anc		3458606	1					
ANR	3458621	UnaryOperationExpression	& add -> anc		3458606	0					
ANR	3458622	UnaryOperator	&		3458606	0					
ANR	3458623	PtrMemberAccess	add -> anc		3458606	1					
ANR	3458624	Identifier	add		3458606	0					
ANR	3458625	Identifier	anc		3458606	1					
ANR	3458626	ExpressionStatement	"alt_merge_opt_exact_info ( & to -> exb , & add -> exb , env )"	4526:2:101743:101794	3458606	1	True				
ANR	3458627	CallExpression	"alt_merge_opt_exact_info ( & to -> exb , & add -> exb , env )"		3458606	0					
ANR	3458628	Callee	alt_merge_opt_exact_info		3458606	0					
ANR	3458629	Identifier	alt_merge_opt_exact_info		3458606	0					
ANR	3458630	ArgumentList	& to -> exb		3458606	1					
ANR	3458631	Argument	& to -> exb		3458606	0					
ANR	3458632	UnaryOperationExpression	& to -> exb		3458606	0					
ANR	3458633	UnaryOperator	&		3458606	0					
ANR	3458634	PtrMemberAccess	to -> exb		3458606	1					
ANR	3458635	Identifier	to		3458606	0					
ANR	3458636	Identifier	exb		3458606	1					
ANR	3458637	Argument	& add -> exb		3458606	1					
ANR	3458638	UnaryOperationExpression	& add -> exb		3458606	0					
ANR	3458639	UnaryOperator	&		3458606	0					
ANR	3458640	PtrMemberAccess	add -> exb		3458606	1					
ANR	3458641	Identifier	add		3458606	0					
ANR	3458642	Identifier	exb		3458606	1					
ANR	3458643	Argument	env		3458606	2					
ANR	3458644	Identifier	env		3458606	0					
ANR	3458645	ExpressionStatement	"alt_merge_opt_exact_info ( & to -> exm , & add -> exm , env )"	4527:2:101798:101849	3458606	2	True				
ANR	3458646	CallExpression	"alt_merge_opt_exact_info ( & to -> exm , & add -> exm , env )"		3458606	0					
ANR	3458647	Callee	alt_merge_opt_exact_info		3458606	0					
ANR	3458648	Identifier	alt_merge_opt_exact_info		3458606	0					
ANR	3458649	ArgumentList	& to -> exm		3458606	1					
ANR	3458650	Argument	& to -> exm		3458606	0					
ANR	3458651	UnaryOperationExpression	& to -> exm		3458606	0					
ANR	3458652	UnaryOperator	&		3458606	0					
ANR	3458653	PtrMemberAccess	to -> exm		3458606	1					
ANR	3458654	Identifier	to		3458606	0					
ANR	3458655	Identifier	exm		3458606	1					
ANR	3458656	Argument	& add -> exm		3458606	1					
ANR	3458657	UnaryOperationExpression	& add -> exm		3458606	0					
ANR	3458658	UnaryOperator	&		3458606	0					
ANR	3458659	PtrMemberAccess	add -> exm		3458606	1					
ANR	3458660	Identifier	add		3458606	0					
ANR	3458661	Identifier	exm		3458606	1					
ANR	3458662	Argument	env		3458606	2					
ANR	3458663	Identifier	env		3458606	0					
ANR	3458664	ExpressionStatement	"alt_merge_opt_exact_info ( & to -> expr , & add -> expr , env )"	4528:2:101853:101905	3458606	3	True				
ANR	3458665	CallExpression	"alt_merge_opt_exact_info ( & to -> expr , & add -> expr , env )"		3458606	0					
ANR	3458666	Callee	alt_merge_opt_exact_info		3458606	0					
ANR	3458667	Identifier	alt_merge_opt_exact_info		3458606	0					
ANR	3458668	ArgumentList	& to -> expr		3458606	1					
ANR	3458669	Argument	& to -> expr		3458606	0					
ANR	3458670	UnaryOperationExpression	& to -> expr		3458606	0					
ANR	3458671	UnaryOperator	&		3458606	0					
ANR	3458672	PtrMemberAccess	to -> expr		3458606	1					
ANR	3458673	Identifier	to		3458606	0					
ANR	3458674	Identifier	expr		3458606	1					
ANR	3458675	Argument	& add -> expr		3458606	1					
ANR	3458676	UnaryOperationExpression	& add -> expr		3458606	0					
ANR	3458677	UnaryOperator	&		3458606	0					
ANR	3458678	PtrMemberAccess	add -> expr		3458606	1					
ANR	3458679	Identifier	add		3458606	0					
ANR	3458680	Identifier	expr		3458606	1					
ANR	3458681	Argument	env		3458606	2					
ANR	3458682	Identifier	env		3458606	0					
ANR	3458683	ExpressionStatement	"alt_merge_opt_map_info ( env -> enc , & to -> map , & add -> map )"	4529:2:101909:101963	3458606	4	True				
ANR	3458684	CallExpression	"alt_merge_opt_map_info ( env -> enc , & to -> map , & add -> map )"		3458606	0					
ANR	3458685	Callee	alt_merge_opt_map_info		3458606	0					
ANR	3458686	Identifier	alt_merge_opt_map_info		3458606	0					
ANR	3458687	ArgumentList	env -> enc		3458606	1					
ANR	3458688	Argument	env -> enc		3458606	0					
ANR	3458689	PtrMemberAccess	env -> enc		3458606	0					
ANR	3458690	Identifier	env		3458606	0					
ANR	3458691	Identifier	enc		3458606	1					
ANR	3458692	Argument	& to -> map		3458606	1					
ANR	3458693	UnaryOperationExpression	& to -> map		3458606	0					
ANR	3458694	UnaryOperator	&		3458606	0					
ANR	3458695	PtrMemberAccess	to -> map		3458606	1					
ANR	3458696	Identifier	to		3458606	0					
ANR	3458697	Identifier	map		3458606	1					
ANR	3458698	Argument	& add -> map		3458606	2					
ANR	3458699	UnaryOperationExpression	& add -> map		3458606	0					
ANR	3458700	UnaryOperator	&		3458606	0					
ANR	3458701	PtrMemberAccess	add -> map		3458606	1					
ANR	3458702	Identifier	add		3458606	0					
ANR	3458703	Identifier	map		3458606	1					
ANR	3458704	ExpressionStatement	"alt_merge_mml ( & to -> len , & add -> len )"	4531:2:101968:102002	3458606	5	True				
ANR	3458705	CallExpression	"alt_merge_mml ( & to -> len , & add -> len )"		3458606	0					
ANR	3458706	Callee	alt_merge_mml		3458606	0					
ANR	3458707	Identifier	alt_merge_mml		3458606	0					
ANR	3458708	ArgumentList	& to -> len		3458606	1					
ANR	3458709	Argument	& to -> len		3458606	0					
ANR	3458710	UnaryOperationExpression	& to -> len		3458606	0					
ANR	3458711	UnaryOperator	&		3458606	0					
ANR	3458712	PtrMemberAccess	to -> len		3458606	1					
ANR	3458713	Identifier	to		3458606	0					
ANR	3458714	Identifier	len		3458606	1					
ANR	3458715	Argument	& add -> len		3458606	1					
ANR	3458716	UnaryOperationExpression	& add -> len		3458606	0					
ANR	3458717	UnaryOperator	&		3458606	0					
ANR	3458718	PtrMemberAccess	add -> len		3458606	1					
ANR	3458719	Identifier	add		3458606	0					
ANR	3458720	Identifier	len		3458606	1					
ANR	3458721	ReturnType	static void		3458606	1					
ANR	3458722	Identifier	alt_merge_node_opt_info		3458606	2					
ANR	3458723	ParameterList	"NodeOptInfo * to , NodeOptInfo * add , OptEnv * env"		3458606	3					
ANR	3458724	Parameter	NodeOptInfo * to	4523:24:101641:101655	3458606	0	True				
ANR	3458725	ParameterType	NodeOptInfo *		3458606	0					
ANR	3458726	Identifier	to		3458606	1					
ANR	3458727	Parameter	NodeOptInfo * add	4523:41:101658:101673	3458606	1	True				
ANR	3458728	ParameterType	NodeOptInfo *		3458606	0					
ANR	3458729	Identifier	add		3458606	1					
ANR	3458730	Parameter	OptEnv * env	4523:59:101676:101686	3458606	2	True				
ANR	3458731	ParameterType	OptEnv *		3458606	0					
ANR	3458732	Identifier	env		3458606	1					
ANR	3458733	CFGEntryNode	ENTRY		3458606		True				
ANR	3458734	CFGExitNode	EXIT		3458606		True				
ANR	3458735	Symbol	add		3458606						
ANR	3458736	Symbol	& add -> exm		3458606						
ANR	3458737	Symbol	& to -> len		3458606						
ANR	3458738	Symbol	& to -> anc		3458606						
ANR	3458739	Symbol	& add -> map		3458606						
ANR	3458740	Symbol	& add -> anc		3458606						
ANR	3458741	Symbol	& to -> exm		3458606						
ANR	3458742	Symbol	& to -> map		3458606						
ANR	3458743	Symbol	* env		3458606						
ANR	3458744	Symbol	env -> enc		3458606						
ANR	3458745	Symbol	env		3458606						
ANR	3458746	Symbol	& add -> expr		3458606						
ANR	3458747	Symbol	to		3458606						
ANR	3458748	Symbol	& to -> exb		3458606						
ANR	3458749	Symbol	& add -> len		3458606						
ANR	3458750	Symbol	& to -> expr		3458606						
ANR	3458751	Symbol	& add -> exb		3458606						
ANR	3458752	Function	optimize_node_left	4537:0:102050:110077							
ANR	3458753	FunctionDef	"optimize_node_left (Node * node , NodeOptInfo * opt , OptEnv * env)"		3458752	0					
ANR	3458754	CompoundStatement		4539:0:102123:110077	3458752	0					
ANR	3458755	IdentifierDeclStatement	int type ;	4540:2:102127:102135	3458752	0	True				
ANR	3458756	IdentifierDecl	type		3458752	0					
ANR	3458757	IdentifierDeclType	int		3458752	0					
ANR	3458758	Identifier	type		3458752	1					
ANR	3458759	IdentifierDeclStatement	int r = 0 ;	4541:2:102139:102148	3458752	1	True				
ANR	3458760	IdentifierDecl	r = 0		3458752	0					
ANR	3458761	IdentifierDeclType	int		3458752	0					
ANR	3458762	Identifier	r		3458752	1					
ANR	3458763	AssignmentExpression	r = 0		3458752	2		=			
ANR	3458764	Identifier	r		3458752	0					
ANR	3458765	PrimaryExpression	0		3458752	1					
ANR	3458766	ExpressionStatement	clear_node_opt_info ( opt )	4543:2:102153:102177	3458752	2	True				
ANR	3458767	CallExpression	clear_node_opt_info ( opt )		3458752	0					
ANR	3458768	Callee	clear_node_opt_info		3458752	0					
ANR	3458769	Identifier	clear_node_opt_info		3458752	0					
ANR	3458770	ArgumentList	opt		3458752	1					
ANR	3458771	Argument	opt		3458752	0					
ANR	3458772	Identifier	opt		3458752	0					
ANR	3458773	ExpressionStatement	"set_bound_node_opt_info ( opt , & env -> mmd )"	4544:2:102181:102220	3458752	3	True				
ANR	3458774	CallExpression	"set_bound_node_opt_info ( opt , & env -> mmd )"		3458752	0					
ANR	3458775	Callee	set_bound_node_opt_info		3458752	0					
ANR	3458776	Identifier	set_bound_node_opt_info		3458752	0					
ANR	3458777	ArgumentList	opt		3458752	1					
ANR	3458778	Argument	opt		3458752	0					
ANR	3458779	Identifier	opt		3458752	0					
ANR	3458780	Argument	& env -> mmd		3458752	1					
ANR	3458781	UnaryOperationExpression	& env -> mmd		3458752	0					
ANR	3458782	UnaryOperator	&		3458752	0					
ANR	3458783	PtrMemberAccess	env -> mmd		3458752	1					
ANR	3458784	Identifier	env		3458752	0					
ANR	3458785	Identifier	mmd		3458752	1					
ANR	3458786	ExpressionStatement	type = NTYPE ( node )	4546:2:102225:102243	3458752	4	True				
ANR	3458787	AssignmentExpression	type = NTYPE ( node )		3458752	0		=			
ANR	3458788	Identifier	type		3458752	0					
ANR	3458789	CallExpression	NTYPE ( node )		3458752	1					
ANR	3458790	Callee	NTYPE		3458752	0					
ANR	3458791	Identifier	NTYPE		3458752	0					
ANR	3458792	ArgumentList	node		3458752	1					
ANR	3458793	Argument	node		3458752	0					
ANR	3458794	Identifier	node		3458752	0					
ANR	3458795	SwitchStatement	switch ( type )		3458752	5					
ANR	3458796	Condition	type	4547:10:102255:102258	3458752	0	True				
ANR	3458797	Identifier	type		3458752	0					
ANR	3458798	CompoundStatement		9:16:137:137	3458752	1					
ANR	3458799	Label	case NT_LIST :	4548:2:102265:102277	3458752	0	True				
ANR	3458800	Identifier	NT_LIST		3458752	0					
ANR	3458801	CompoundStatement		14:6:210:225	3458752	1					
ANR	3458802	IdentifierDeclStatement	OptEnv nenv ;	4550:6:102291:102302	3458752	0	True				
ANR	3458803	IdentifierDecl	nenv		3458752	0					
ANR	3458804	IdentifierDeclType	OptEnv		3458752	0					
ANR	3458805	Identifier	nenv		3458752	1					
ANR	3458806	IdentifierDeclStatement	NodeOptInfo nopt ;	4551:6:102310:102326	3458752	1	True				
ANR	3458807	IdentifierDecl	nopt		3458752	0					
ANR	3458808	IdentifierDeclType	NodeOptInfo		3458752	0					
ANR	3458809	Identifier	nopt		3458752	1					
ANR	3458810	IdentifierDeclStatement	Node * nd = node ;	4552:6:102334:102349	3458752	2	True				
ANR	3458811	IdentifierDecl	* nd = node		3458752	0					
ANR	3458812	IdentifierDeclType	Node *		3458752	0					
ANR	3458813	Identifier	nd		3458752	1					
ANR	3458814	AssignmentExpression	* nd = node		3458752	2		=			
ANR	3458815	Identifier	node		3458752	0					
ANR	3458816	Identifier	node		3458752	1					
ANR	3458817	ExpressionStatement	"copy_opt_env ( & nenv , env )"	4554:6:102358:102382	3458752	3	True				
ANR	3458818	CallExpression	"copy_opt_env ( & nenv , env )"		3458752	0					
ANR	3458819	Callee	copy_opt_env		3458752	0					
ANR	3458820	Identifier	copy_opt_env		3458752	0					
ANR	3458821	ArgumentList	& nenv		3458752	1					
ANR	3458822	Argument	& nenv		3458752	0					
ANR	3458823	UnaryOperationExpression	& nenv		3458752	0					
ANR	3458824	UnaryOperator	&		3458752	0					
ANR	3458825	Identifier	nenv		3458752	1					
ANR	3458826	Argument	env		3458752	1					
ANR	3458827	Identifier	env		3458752	0					
ANR	3458828	DoStatement	do		3458752	4					
ANR	3458829	CompoundStatement		17:9:269:269	3458752	0					
ANR	3458830	ExpressionStatement	"r = optimize_node_left ( NCAR ( nd ) , & nopt , & nenv )"	4556:1:102396:102442	3458752	0	True				
ANR	3458831	AssignmentExpression	"r = optimize_node_left ( NCAR ( nd ) , & nopt , & nenv )"		3458752	0		=			
ANR	3458832	Identifier	r		3458752	0					
ANR	3458833	CallExpression	"optimize_node_left ( NCAR ( nd ) , & nopt , & nenv )"		3458752	1					
ANR	3458834	Callee	optimize_node_left		3458752	0					
ANR	3458835	Identifier	optimize_node_left		3458752	0					
ANR	3458836	ArgumentList	NCAR ( nd )		3458752	1					
ANR	3458837	Argument	NCAR ( nd )		3458752	0					
ANR	3458838	CallExpression	NCAR ( nd )		3458752	0					
ANR	3458839	Callee	NCAR		3458752	0					
ANR	3458840	Identifier	NCAR		3458752	0					
ANR	3458841	ArgumentList	nd		3458752	1					
ANR	3458842	Argument	nd		3458752	0					
ANR	3458843	Identifier	nd		3458752	0					
ANR	3458844	Argument	& nopt		3458752	1					
ANR	3458845	UnaryOperationExpression	& nopt		3458752	0					
ANR	3458846	UnaryOperator	&		3458752	0					
ANR	3458847	Identifier	nopt		3458752	1					
ANR	3458848	Argument	& nenv		3458752	2					
ANR	3458849	UnaryOperationExpression	& nenv		3458752	0					
ANR	3458850	UnaryOperator	&		3458752	0					
ANR	3458851	Identifier	nenv		3458752	1					
ANR	3458852	IfStatement	if ( r == 0 )		3458752	1					
ANR	3458853	Condition	r == 0	4557:5:102449:102454	3458752	0	True				
ANR	3458854	EqualityExpression	r == 0		3458752	0		==			
ANR	3458855	Identifier	r		3458752	0					
ANR	3458856	PrimaryExpression	0		3458752	1					
ANR	3458857	CompoundStatement		19:13:333:333	3458752	1					
ANR	3458858	ExpressionStatement	"add_mml ( & nenv . mmd , & nopt . len )"	4558:3:102462:102491	3458752	0	True				
ANR	3458859	CallExpression	"add_mml ( & nenv . mmd , & nopt . len )"		3458752	0					
ANR	3458860	Callee	add_mml		3458752	0					
ANR	3458861	Identifier	add_mml		3458752	0					
ANR	3458862	ArgumentList	& nenv . mmd		3458752	1					
ANR	3458863	Argument	& nenv . mmd		3458752	0					
ANR	3458864	UnaryOperationExpression	& nenv . mmd		3458752	0					
ANR	3458865	UnaryOperator	&		3458752	0					
ANR	3458866	MemberAccess	nenv . mmd		3458752	1					
ANR	3458867	Identifier	nenv		3458752	0					
ANR	3458868	Identifier	mmd		3458752	1					
ANR	3458869	Argument	& nopt . len		3458752	1					
ANR	3458870	UnaryOperationExpression	& nopt . len		3458752	0					
ANR	3458871	UnaryOperator	&		3458752	0					
ANR	3458872	MemberAccess	nopt . len		3458752	1					
ANR	3458873	Identifier	nopt		3458752	0					
ANR	3458874	Identifier	len		3458752	1					
ANR	3458875	ExpressionStatement	"concat_left_node_opt_info ( env -> enc , opt , & nopt )"	4559:3:102496:102543	3458752	1	True				
ANR	3458876	CallExpression	"concat_left_node_opt_info ( env -> enc , opt , & nopt )"		3458752	0					
ANR	3458877	Callee	concat_left_node_opt_info		3458752	0					
ANR	3458878	Identifier	concat_left_node_opt_info		3458752	0					
ANR	3458879	ArgumentList	env -> enc		3458752	1					
ANR	3458880	Argument	env -> enc		3458752	0					
ANR	3458881	PtrMemberAccess	env -> enc		3458752	0					
ANR	3458882	Identifier	env		3458752	0					
ANR	3458883	Identifier	enc		3458752	1					
ANR	3458884	Argument	opt		3458752	1					
ANR	3458885	Identifier	opt		3458752	0					
ANR	3458886	Argument	& nopt		3458752	2					
ANR	3458887	UnaryOperationExpression	& nopt		3458752	0					
ANR	3458888	UnaryOperator	&		3458752	0					
ANR	3458889	Identifier	nopt		3458752	1					
ANR	3458890	Condition	r == 0 && IS_NOT_NULL ( nd = NCDR ( nd ) )	4561:15:102563:102598	3458752	1	True				
ANR	3458891	AndExpression	r == 0 && IS_NOT_NULL ( nd = NCDR ( nd ) )		3458752	0		&&			
ANR	3458892	EqualityExpression	r == 0		3458752	0		==			
ANR	3458893	Identifier	r		3458752	0					
ANR	3458894	PrimaryExpression	0		3458752	1					
ANR	3458895	CallExpression	IS_NOT_NULL ( nd = NCDR ( nd ) )		3458752	1					
ANR	3458896	Callee	IS_NOT_NULL		3458752	0					
ANR	3458897	Identifier	IS_NOT_NULL		3458752	0					
ANR	3458898	ArgumentList	nd = NCDR ( nd )		3458752	1					
ANR	3458899	Argument	nd = NCDR ( nd )		3458752	0					
ANR	3458900	AssignmentExpression	nd = NCDR ( nd )		3458752	0		=			
ANR	3458901	Identifier	nd		3458752	0					
ANR	3458902	CallExpression	NCDR ( nd )		3458752	1					
ANR	3458903	Callee	NCDR		3458752	0					
ANR	3458904	Identifier	NCDR		3458752	0					
ANR	3458905	ArgumentList	nd		3458752	1					
ANR	3458906	Argument	nd		3458752	0					
ANR	3458907	Identifier	nd		3458752	0					
ANR	3458908	BreakStatement	break ;	4563:4:102612:102617	3458752	2	True				
ANR	3458909	Label	case NT_ALT :	4565:2:102622:102633	3458752	3	True				
ANR	3458910	Identifier	NT_ALT		3458752	0					
ANR	3458911	CompoundStatement		30:6:547:562	3458752	4					
ANR	3458912	IdentifierDeclStatement	NodeOptInfo nopt ;	4567:6:102647:102663	3458752	0	True				
ANR	3458913	IdentifierDecl	nopt		3458752	0					
ANR	3458914	IdentifierDeclType	NodeOptInfo		3458752	0					
ANR	3458915	Identifier	nopt		3458752	1					
ANR	3458916	IdentifierDeclStatement	Node * nd = node ;	4568:6:102671:102686	3458752	1	True				
ANR	3458917	IdentifierDecl	* nd = node		3458752	0					
ANR	3458918	IdentifierDeclType	Node *		3458752	0					
ANR	3458919	Identifier	nd		3458752	1					
ANR	3458920	AssignmentExpression	* nd = node		3458752	2		=			
ANR	3458921	Identifier	node		3458752	0					
ANR	3458922	Identifier	node		3458752	1					
ANR	3458923	DoStatement	do		3458752	2					
ANR	3458924	CompoundStatement		32:9:574:574	3458752	0					
ANR	3458925	ExpressionStatement	"r = optimize_node_left ( NCAR ( nd ) , & nopt , env )"	4571:1:102701:102745	3458752	0	True				
ANR	3458926	AssignmentExpression	"r = optimize_node_left ( NCAR ( nd ) , & nopt , env )"		3458752	0		=			
ANR	3458927	Identifier	r		3458752	0					
ANR	3458928	CallExpression	"optimize_node_left ( NCAR ( nd ) , & nopt , env )"		3458752	1					
ANR	3458929	Callee	optimize_node_left		3458752	0					
ANR	3458930	Identifier	optimize_node_left		3458752	0					
ANR	3458931	ArgumentList	NCAR ( nd )		3458752	1					
ANR	3458932	Argument	NCAR ( nd )		3458752	0					
ANR	3458933	CallExpression	NCAR ( nd )		3458752	0					
ANR	3458934	Callee	NCAR		3458752	0					
ANR	3458935	Identifier	NCAR		3458752	0					
ANR	3458936	ArgumentList	nd		3458752	1					
ANR	3458937	Argument	nd		3458752	0					
ANR	3458938	Identifier	nd		3458752	0					
ANR	3458939	Argument	& nopt		3458752	1					
ANR	3458940	UnaryOperationExpression	& nopt		3458752	0					
ANR	3458941	UnaryOperator	&		3458752	0					
ANR	3458942	Identifier	nopt		3458752	1					
ANR	3458943	Argument	env		3458752	2					
ANR	3458944	Identifier	env		3458752	0					
ANR	3458945	IfStatement	if ( r == 0 )		3458752	1					
ANR	3458946	Condition	r == 0	4572:5:102752:102757	3458752	0	True				
ANR	3458947	EqualityExpression	r == 0		3458752	0		==			
ANR	3458948	Identifier	r		3458752	0					
ANR	3458949	PrimaryExpression	0		3458752	1					
ANR	3458950	CompoundStatement		34:13:636:636	3458752	1					
ANR	3458951	IfStatement	if ( nd == node )		3458752	0					
ANR	3458952	Condition	nd == node	4573:7:102769:102778	3458752	0	True				
ANR	3458953	EqualityExpression	nd == node		3458752	0		==			
ANR	3458954	Identifier	nd		3458752	0					
ANR	3458955	Identifier	node		3458752	1					
ANR	3458956	ExpressionStatement	"copy_node_opt_info ( opt , & nopt )"	4573:19:102781:102811	3458752	1	True				
ANR	3458957	CallExpression	"copy_node_opt_info ( opt , & nopt )"		3458752	0					
ANR	3458958	Callee	copy_node_opt_info		3458752	0					
ANR	3458959	Identifier	copy_node_opt_info		3458752	0					
ANR	3458960	ArgumentList	opt		3458752	1					
ANR	3458961	Argument	opt		3458752	0					
ANR	3458962	Identifier	opt		3458752	0					
ANR	3458963	Argument	& nopt		3458752	1					
ANR	3458964	UnaryOperationExpression	& nopt		3458752	0					
ANR	3458965	UnaryOperator	&		3458752	0					
ANR	3458966	Identifier	nopt		3458752	1					
ANR	3458967	ElseStatement	else		3458752	0					
ANR	3458968	ExpressionStatement	"alt_merge_node_opt_info ( opt , & nopt , env )"	4574:19:102832:102872	3458752	0	True				
ANR	3458969	CallExpression	"alt_merge_node_opt_info ( opt , & nopt , env )"		3458752	0					
ANR	3458970	Callee	alt_merge_node_opt_info		3458752	0					
ANR	3458971	Identifier	alt_merge_node_opt_info		3458752	0					
ANR	3458972	ArgumentList	opt		3458752	1					
ANR	3458973	Argument	opt		3458752	0					
ANR	3458974	Identifier	opt		3458752	0					
ANR	3458975	Argument	& nopt		3458752	1					
ANR	3458976	UnaryOperationExpression	& nopt		3458752	0					
ANR	3458977	UnaryOperator	&		3458752	0					
ANR	3458978	Identifier	nopt		3458752	1					
ANR	3458979	Argument	env		3458752	2					
ANR	3458980	Identifier	env		3458752	0					
ANR	3458981	Condition	( r == 0 ) && IS_NOT_NULL ( nd = NCDR ( nd ) )	4576:15:102892:102929	3458752	1	True				
ANR	3458982	AndExpression	( r == 0 ) && IS_NOT_NULL ( nd = NCDR ( nd ) )		3458752	0		&&			
ANR	3458983	EqualityExpression	r == 0		3458752	0		==			
ANR	3458984	Identifier	r		3458752	0					
ANR	3458985	PrimaryExpression	0		3458752	1					
ANR	3458986	CallExpression	IS_NOT_NULL ( nd = NCDR ( nd ) )		3458752	1					
ANR	3458987	Callee	IS_NOT_NULL		3458752	0					
ANR	3458988	Identifier	IS_NOT_NULL		3458752	0					
ANR	3458989	ArgumentList	nd = NCDR ( nd )		3458752	1					
ANR	3458990	Argument	nd = NCDR ( nd )		3458752	0					
ANR	3458991	AssignmentExpression	nd = NCDR ( nd )		3458752	0		=			
ANR	3458992	Identifier	nd		3458752	0					
ANR	3458993	CallExpression	NCDR ( nd )		3458752	1					
ANR	3458994	Callee	NCDR		3458752	0					
ANR	3458995	Identifier	NCDR		3458752	0					
ANR	3458996	ArgumentList	nd		3458752	1					
ANR	3458997	Argument	nd		3458752	0					
ANR	3458998	Identifier	nd		3458752	0					
ANR	3458999	BreakStatement	break ;	4578:4:102943:102948	3458752	5	True				
ANR	3459000	Label	case NT_STR :	4580:2:102953:102964	3458752	6	True				
ANR	3459001	Identifier	NT_STR		3458752	0					
ANR	3459002	CompoundStatement		46:6:920:953	3458752	7					
ANR	3459003	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	4582:6:102978:103002	3458752	0	True				
ANR	3459004	IdentifierDecl	* sn = NSTR ( node )		3458752	0					
ANR	3459005	IdentifierDeclType	StrNode *		3458752	0					
ANR	3459006	Identifier	sn		3458752	1					
ANR	3459007	AssignmentExpression	* sn = NSTR ( node )		3458752	2		=			
ANR	3459008	Identifier	sn		3458752	0					
ANR	3459009	CallExpression	NSTR ( node )		3458752	1					
ANR	3459010	Callee	NSTR		3458752	0					
ANR	3459011	Identifier	NSTR		3458752	0					
ANR	3459012	ArgumentList	node		3458752	1					
ANR	3459013	Argument	node		3458752	0					
ANR	3459014	Identifier	node		3458752	0					
ANR	3459015	IdentifierDeclStatement	int slen = sn -> end - sn -> s ;	4583:6:103010:103036	3458752	1	True				
ANR	3459016	IdentifierDecl	slen = sn -> end - sn -> s		3458752	0					
ANR	3459017	IdentifierDeclType	int		3458752	0					
ANR	3459018	Identifier	slen		3458752	1					
ANR	3459019	AssignmentExpression	slen = sn -> end - sn -> s		3458752	2		=			
ANR	3459020	Identifier	slen		3458752	0					
ANR	3459021	AdditiveExpression	sn -> end - sn -> s		3458752	1		-			
ANR	3459022	PtrMemberAccess	sn -> end		3458752	0					
ANR	3459023	Identifier	sn		3458752	0					
ANR	3459024	Identifier	end		3458752	1					
ANR	3459025	PtrMemberAccess	sn -> s		3458752	1					
ANR	3459026	Identifier	sn		3458752	0					
ANR	3459027	Identifier	s		3458752	1					
ANR	3459028	IdentifierDeclStatement	int is_raw = NSTRING_IS_RAW ( node ) ;	4584:6:103044:103077	3458752	2	True				
ANR	3459029	IdentifierDecl	is_raw = NSTRING_IS_RAW ( node )		3458752	0					
ANR	3459030	IdentifierDeclType	int		3458752	0					
ANR	3459031	Identifier	is_raw		3458752	1					
ANR	3459032	AssignmentExpression	is_raw = NSTRING_IS_RAW ( node )		3458752	2		=			
ANR	3459033	Identifier	is_raw		3458752	0					
ANR	3459034	CallExpression	NSTRING_IS_RAW ( node )		3458752	1					
ANR	3459035	Callee	NSTRING_IS_RAW		3458752	0					
ANR	3459036	Identifier	NSTRING_IS_RAW		3458752	0					
ANR	3459037	ArgumentList	node		3458752	1					
ANR	3459038	Argument	node		3458752	0					
ANR	3459039	Identifier	node		3458752	0					
ANR	3459040	IfStatement	if ( ! NSTRING_IS_AMBIG ( node ) )		3458752	3					
ANR	3459041	Condition	! NSTRING_IS_AMBIG ( node )	4586:10:103090:103113	3458752	0	True				
ANR	3459042	UnaryOperationExpression	! NSTRING_IS_AMBIG ( node )		3458752	0					
ANR	3459043	UnaryOperator	!		3458752	0					
ANR	3459044	CallExpression	NSTRING_IS_AMBIG ( node )		3458752	1					
ANR	3459045	Callee	NSTRING_IS_AMBIG		3458752	0					
ANR	3459046	Identifier	NSTRING_IS_AMBIG		3458752	0					
ANR	3459047	ArgumentList	node		3458752	1					
ANR	3459048	Argument	node		3458752	0					
ANR	3459049	Identifier	node		3458752	0					
ANR	3459050	CompoundStatement		48:36:992:992	3458752	1					
ANR	3459051	ExpressionStatement	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , NSTRING_IS_RAW ( node ) , env -> enc )"	4587:1:103119:103209	3458752	0	True				
ANR	3459052	CallExpression	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , NSTRING_IS_RAW ( node ) , env -> enc )"		3458752	0					
ANR	3459053	Callee	concat_opt_exact_info_str		3458752	0					
ANR	3459054	Identifier	concat_opt_exact_info_str		3458752	0					
ANR	3459055	ArgumentList	& opt -> exb		3458752	1					
ANR	3459056	Argument	& opt -> exb		3458752	0					
ANR	3459057	UnaryOperationExpression	& opt -> exb		3458752	0					
ANR	3459058	UnaryOperator	&		3458752	0					
ANR	3459059	PtrMemberAccess	opt -> exb		3458752	1					
ANR	3459060	Identifier	opt		3458752	0					
ANR	3459061	Identifier	exb		3458752	1					
ANR	3459062	Argument	sn -> s		3458752	1					
ANR	3459063	PtrMemberAccess	sn -> s		3458752	0					
ANR	3459064	Identifier	sn		3458752	0					
ANR	3459065	Identifier	s		3458752	1					
ANR	3459066	Argument	sn -> end		3458752	2					
ANR	3459067	PtrMemberAccess	sn -> end		3458752	0					
ANR	3459068	Identifier	sn		3458752	0					
ANR	3459069	Identifier	end		3458752	1					
ANR	3459070	Argument	NSTRING_IS_RAW ( node )		3458752	3					
ANR	3459071	CallExpression	NSTRING_IS_RAW ( node )		3458752	0					
ANR	3459072	Callee	NSTRING_IS_RAW		3458752	0					
ANR	3459073	Identifier	NSTRING_IS_RAW		3458752	0					
ANR	3459074	ArgumentList	node		3458752	1					
ANR	3459075	Argument	node		3458752	0					
ANR	3459076	Identifier	node		3458752	0					
ANR	3459077	Argument	env -> enc		3458752	4					
ANR	3459078	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459079	Identifier	env		3458752	0					
ANR	3459080	Identifier	enc		3458752	1					
ANR	3459081	IfStatement	if ( slen > 0 )		3458752	1					
ANR	3459082	Condition	slen > 0	4589:5:103216:103223	3458752	0	True				
ANR	3459083	RelationalExpression	slen > 0		3458752	0		>			
ANR	3459084	Identifier	slen		3458752	0					
ANR	3459085	PrimaryExpression	0		3458752	1					
ANR	3459086	CompoundStatement		51:15:1102:1102	3458752	1					
ANR	3459087	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , * ( sn -> s ) , env -> enc )"	4590:3:103231:103283	3458752	0	True				
ANR	3459088	CallExpression	"add_char_opt_map_info ( & opt -> map , * ( sn -> s ) , env -> enc )"		3458752	0					
ANR	3459089	Callee	add_char_opt_map_info		3458752	0					
ANR	3459090	Identifier	add_char_opt_map_info		3458752	0					
ANR	3459091	ArgumentList	& opt -> map		3458752	1					
ANR	3459092	Argument	& opt -> map		3458752	0					
ANR	3459093	UnaryOperationExpression	& opt -> map		3458752	0					
ANR	3459094	UnaryOperator	&		3458752	0					
ANR	3459095	PtrMemberAccess	opt -> map		3458752	1					
ANR	3459096	Identifier	opt		3458752	0					
ANR	3459097	Identifier	map		3458752	1					
ANR	3459098	Argument	* ( sn -> s )		3458752	1					
ANR	3459099	UnaryOperationExpression	* ( sn -> s )		3458752	0					
ANR	3459100	UnaryOperator	*		3458752	0					
ANR	3459101	PtrMemberAccess	sn -> s		3458752	1					
ANR	3459102	Identifier	sn		3458752	0					
ANR	3459103	Identifier	s		3458752	1					
ANR	3459104	Argument	env -> enc		3458752	2					
ANR	3459105	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459106	Identifier	env		3458752	0					
ANR	3459107	Identifier	enc		3458752	1					
ANR	3459108	ExpressionStatement	"set_mml ( & opt -> len , slen , slen )"	4592:8:103296:103326	3458752	2	True				
ANR	3459109	CallExpression	"set_mml ( & opt -> len , slen , slen )"		3458752	0					
ANR	3459110	Callee	set_mml		3458752	0					
ANR	3459111	Identifier	set_mml		3458752	0					
ANR	3459112	ArgumentList	& opt -> len		3458752	1					
ANR	3459113	Argument	& opt -> len		3458752	0					
ANR	3459114	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3459115	UnaryOperator	&		3458752	0					
ANR	3459116	PtrMemberAccess	opt -> len		3458752	1					
ANR	3459117	Identifier	opt		3458752	0					
ANR	3459118	Identifier	len		3458752	1					
ANR	3459119	Argument	slen		3458752	1					
ANR	3459120	Identifier	slen		3458752	0					
ANR	3459121	Argument	slen		3458752	2					
ANR	3459122	Identifier	slen		3458752	0					
ANR	3459123	ElseStatement	else		3458752	0					
ANR	3459124	CompoundStatement		57:8:1233:1240	3458752	0					
ANR	3459125	IdentifierDeclStatement	int max ;	4595:8:103357:103364	3458752	0	True				
ANR	3459126	IdentifierDecl	max		3458752	0					
ANR	3459127	IdentifierDeclType	int		3458752	0					
ANR	3459128	Identifier	max		3458752	1					
ANR	3459129	IfStatement	if ( NSTRING_IS_DONT_GET_OPT_INFO ( node ) )		3458752	1					
ANR	3459130	Condition	NSTRING_IS_DONT_GET_OPT_INFO ( node )	4597:5:103372:103405	3458752	0	True				
ANR	3459131	CallExpression	NSTRING_IS_DONT_GET_OPT_INFO ( node )		3458752	0					
ANR	3459132	Callee	NSTRING_IS_DONT_GET_OPT_INFO		3458752	0					
ANR	3459133	Identifier	NSTRING_IS_DONT_GET_OPT_INFO		3458752	0					
ANR	3459134	ArgumentList	node		3458752	1					
ANR	3459135	Argument	node		3458752	0					
ANR	3459136	Identifier	node		3458752	0					
ANR	3459137	CompoundStatement		60:10:1296:1344	3458752	1					
ANR	3459138	IdentifierDeclStatement	"int n = onigenc_strlen ( env -> enc , sn -> s , sn -> end ) ;"	4598:10:103420:103468	3458752	0	True				
ANR	3459139	IdentifierDecl	"n = onigenc_strlen ( env -> enc , sn -> s , sn -> end )"		3458752	0					
ANR	3459140	IdentifierDeclType	int		3458752	0					
ANR	3459141	Identifier	n		3458752	1					
ANR	3459142	AssignmentExpression	"n = onigenc_strlen ( env -> enc , sn -> s , sn -> end )"		3458752	2		=			
ANR	3459143	Identifier	n		3458752	0					
ANR	3459144	CallExpression	"onigenc_strlen ( env -> enc , sn -> s , sn -> end )"		3458752	1					
ANR	3459145	Callee	onigenc_strlen		3458752	0					
ANR	3459146	Identifier	onigenc_strlen		3458752	0					
ANR	3459147	ArgumentList	env -> enc		3458752	1					
ANR	3459148	Argument	env -> enc		3458752	0					
ANR	3459149	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459150	Identifier	env		3458752	0					
ANR	3459151	Identifier	enc		3458752	1					
ANR	3459152	Argument	sn -> s		3458752	1					
ANR	3459153	PtrMemberAccess	sn -> s		3458752	0					
ANR	3459154	Identifier	sn		3458752	0					
ANR	3459155	Identifier	s		3458752	1					
ANR	3459156	Argument	sn -> end		3458752	2					
ANR	3459157	PtrMemberAccess	sn -> end		3458752	0					
ANR	3459158	Identifier	sn		3458752	0					
ANR	3459159	Identifier	end		3458752	1					
ANR	3459160	ExpressionStatement	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) * n	4599:10:103480:103523	3458752	1	True				
ANR	3459161	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) * n		3458752	0		=			
ANR	3459162	Identifier	max		3458752	0					
ANR	3459163	MultiplicativeExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) * n		3458752	1		*			
ANR	3459164	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	0					
ANR	3459165	Callee	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459166	Identifier	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459167	ArgumentList	env -> enc		3458752	1					
ANR	3459168	Argument	env -> enc		3458752	0					
ANR	3459169	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459170	Identifier	env		3458752	0					
ANR	3459171	Identifier	enc		3458752	1					
ANR	3459172	Identifier	n		3458752	1					
ANR	3459173	ElseStatement	else		3458752	0					
ANR	3459174	CompoundStatement		63:6:1410:1410	3458752	0					
ANR	3459175	ExpressionStatement	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , is_raw , env -> enc )"	4602:3:103539:103617	3458752	0	True				
ANR	3459176	CallExpression	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , is_raw , env -> enc )"		3458752	0					
ANR	3459177	Callee	concat_opt_exact_info_str		3458752	0					
ANR	3459178	Identifier	concat_opt_exact_info_str		3458752	0					
ANR	3459179	ArgumentList	& opt -> exb		3458752	1					
ANR	3459180	Argument	& opt -> exb		3458752	0					
ANR	3459181	UnaryOperationExpression	& opt -> exb		3458752	0					
ANR	3459182	UnaryOperator	&		3458752	0					
ANR	3459183	PtrMemberAccess	opt -> exb		3458752	1					
ANR	3459184	Identifier	opt		3458752	0					
ANR	3459185	Identifier	exb		3458752	1					
ANR	3459186	Argument	sn -> s		3458752	1					
ANR	3459187	PtrMemberAccess	sn -> s		3458752	0					
ANR	3459188	Identifier	sn		3458752	0					
ANR	3459189	Identifier	s		3458752	1					
ANR	3459190	Argument	sn -> end		3458752	2					
ANR	3459191	PtrMemberAccess	sn -> end		3458752	0					
ANR	3459192	Identifier	sn		3458752	0					
ANR	3459193	Identifier	end		3458752	1					
ANR	3459194	Argument	is_raw		3458752	3					
ANR	3459195	Identifier	is_raw		3458752	0					
ANR	3459196	Argument	env -> enc		3458752	4					
ANR	3459197	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459198	Identifier	env		3458752	0					
ANR	3459199	Identifier	enc		3458752	1					
ANR	3459200	ExpressionStatement	opt -> exb . ignore_case = 1	4604:3:103622:103646	3458752	1	True				
ANR	3459201	AssignmentExpression	opt -> exb . ignore_case = 1		3458752	0		=			
ANR	3459202	MemberAccess	opt -> exb . ignore_case		3458752	0					
ANR	3459203	PtrMemberAccess	opt -> exb		3458752	0					
ANR	3459204	Identifier	opt		3458752	0					
ANR	3459205	Identifier	exb		3458752	1					
ANR	3459206	Identifier	ignore_case		3458752	1					
ANR	3459207	PrimaryExpression	1		3458752	1					
ANR	3459208	IfStatement	if ( slen > 0 )		3458752	2					
ANR	3459209	Condition	slen > 0	4606:7:103656:103663	3458752	0	True				
ANR	3459210	RelationalExpression	slen > 0		3458752	0		>			
ANR	3459211	Identifier	slen		3458752	0					
ANR	3459212	PrimaryExpression	0		3458752	1					
ANR	3459213	CompoundStatement		68:17:1542:1542	3458752	1					
ANR	3459214	ExpressionStatement	"r = add_char_amb_opt_map_info ( & opt -> map , sn -> s , sn -> end , env -> enc , env -> case_fold_flag )"	4607:5:103673:103767	3458752	0	True				
ANR	3459215	AssignmentExpression	"r = add_char_amb_opt_map_info ( & opt -> map , sn -> s , sn -> end , env -> enc , env -> case_fold_flag )"		3458752	0		=			
ANR	3459216	Identifier	r		3458752	0					
ANR	3459217	CallExpression	"add_char_amb_opt_map_info ( & opt -> map , sn -> s , sn -> end , env -> enc , env -> case_fold_flag )"		3458752	1					
ANR	3459218	Callee	add_char_amb_opt_map_info		3458752	0					
ANR	3459219	Identifier	add_char_amb_opt_map_info		3458752	0					
ANR	3459220	ArgumentList	& opt -> map		3458752	1					
ANR	3459221	Argument	& opt -> map		3458752	0					
ANR	3459222	UnaryOperationExpression	& opt -> map		3458752	0					
ANR	3459223	UnaryOperator	&		3458752	0					
ANR	3459224	PtrMemberAccess	opt -> map		3458752	1					
ANR	3459225	Identifier	opt		3458752	0					
ANR	3459226	Identifier	map		3458752	1					
ANR	3459227	Argument	sn -> s		3458752	1					
ANR	3459228	PtrMemberAccess	sn -> s		3458752	0					
ANR	3459229	Identifier	sn		3458752	0					
ANR	3459230	Identifier	s		3458752	1					
ANR	3459231	Argument	sn -> end		3458752	2					
ANR	3459232	PtrMemberAccess	sn -> end		3458752	0					
ANR	3459233	Identifier	sn		3458752	0					
ANR	3459234	Identifier	end		3458752	1					
ANR	3459235	Argument	env -> enc		3458752	3					
ANR	3459236	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459237	Identifier	env		3458752	0					
ANR	3459238	Identifier	enc		3458752	1					
ANR	3459239	Argument	env -> case_fold_flag		3458752	4					
ANR	3459240	PtrMemberAccess	env -> case_fold_flag		3458752	0					
ANR	3459241	Identifier	env		3458752	0					
ANR	3459242	Identifier	case_fold_flag		3458752	1					
ANR	3459243	IfStatement	if ( r != 0 )		3458752	1					
ANR	3459244	Condition	r != 0	4609:9:103778:103783	3458752	0	True				
ANR	3459245	EqualityExpression	r != 0		3458752	0		!=			
ANR	3459246	Identifier	r		3458752	0					
ANR	3459247	PrimaryExpression	0		3458752	1					
ANR	3459248	BreakStatement	break ;	4609:17:103786:103791	3458752	1	True				
ANR	3459249	ExpressionStatement	max = slen	4612:3:103802:103812	3458752	3	True				
ANR	3459250	AssignmentExpression	max = slen		3458752	0		=			
ANR	3459251	Identifier	max		3458752	0					
ANR	3459252	Identifier	slen		3458752	1					
ANR	3459253	ExpressionStatement	"set_mml ( & opt -> len , slen , max )"	4615:8:103826:103855	3458752	2	True				
ANR	3459254	CallExpression	"set_mml ( & opt -> len , slen , max )"		3458752	0					
ANR	3459255	Callee	set_mml		3458752	0					
ANR	3459256	Identifier	set_mml		3458752	0					
ANR	3459257	ArgumentList	& opt -> len		3458752	1					
ANR	3459258	Argument	& opt -> len		3458752	0					
ANR	3459259	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3459260	UnaryOperator	&		3458752	0					
ANR	3459261	PtrMemberAccess	opt -> len		3458752	1					
ANR	3459262	Identifier	opt		3458752	0					
ANR	3459263	Identifier	len		3458752	1					
ANR	3459264	Argument	slen		3458752	1					
ANR	3459265	Identifier	slen		3458752	0					
ANR	3459266	Argument	max		3458752	2					
ANR	3459267	Identifier	max		3458752	0					
ANR	3459268	IfStatement	if ( opt -> exb . len == slen )		3458752	4					
ANR	3459269	Condition	opt -> exb . len == slen	4618:10:103876:103895	3458752	0	True				
ANR	3459270	EqualityExpression	opt -> exb . len == slen		3458752	0		==			
ANR	3459271	MemberAccess	opt -> exb . len		3458752	0					
ANR	3459272	PtrMemberAccess	opt -> exb		3458752	0					
ANR	3459273	Identifier	opt		3458752	0					
ANR	3459274	Identifier	exb		3458752	1					
ANR	3459275	Identifier	len		3458752	1					
ANR	3459276	Identifier	slen		3458752	1					
ANR	3459277	ExpressionStatement	opt -> exb . reach_end = 1	4619:1:103899:103921	3458752	1	True				
ANR	3459278	AssignmentExpression	opt -> exb . reach_end = 1		3458752	0		=			
ANR	3459279	MemberAccess	opt -> exb . reach_end		3458752	0					
ANR	3459280	PtrMemberAccess	opt -> exb		3458752	0					
ANR	3459281	Identifier	opt		3458752	0					
ANR	3459282	Identifier	exb		3458752	1					
ANR	3459283	Identifier	reach_end		3458752	1					
ANR	3459284	PrimaryExpression	1		3458752	1					
ANR	3459285	BreakStatement	break ;	4621:4:103933:103938	3458752	8	True				
ANR	3459286	Label	case NT_CCLASS :	4623:2:103943:103957	3458752	9	True				
ANR	3459287	Identifier	NT_CCLASS		3458752	0					
ANR	3459288	CompoundStatement		88:6:1863:1893	3458752	10					
ANR	3459289	IdentifierDeclStatement	"int i , z ;"	4625:6:103971:103979	3458752	0	True				
ANR	3459290	IdentifierDecl	i		3458752	0					
ANR	3459291	IdentifierDeclType	int		3458752	0					
ANR	3459292	Identifier	i		3458752	1					
ANR	3459293	IdentifierDecl	z		3458752	1					
ANR	3459294	IdentifierDeclType	int		3458752	0					
ANR	3459295	Identifier	z		3458752	1					
ANR	3459296	IdentifierDeclStatement	CClassNode * cc = NCCLASS ( node ) ;	4626:6:103987:104017	3458752	1	True				
ANR	3459297	IdentifierDecl	* cc = NCCLASS ( node )		3458752	0					
ANR	3459298	IdentifierDeclType	CClassNode *		3458752	0					
ANR	3459299	Identifier	cc		3458752	1					
ANR	3459300	AssignmentExpression	* cc = NCCLASS ( node )		3458752	2		=			
ANR	3459301	Identifier	cc		3458752	0					
ANR	3459302	CallExpression	NCCLASS ( node )		3458752	1					
ANR	3459303	Callee	NCCLASS		3458752	0					
ANR	3459304	Identifier	NCCLASS		3458752	0					
ANR	3459305	ArgumentList	node		3458752	1					
ANR	3459306	Argument	node		3458752	0					
ANR	3459307	Identifier	node		3458752	0					
ANR	3459308	IfStatement	if ( IS_NOT_NULL ( cc -> mbuf ) || IS_NCCLASS_NOT ( cc ) )		3458752	2					
ANR	3459309	Condition	IS_NOT_NULL ( cc -> mbuf ) || IS_NCCLASS_NOT ( cc )	4630:10:104098:104140	3458752	0	True				
ANR	3459310	OrExpression	IS_NOT_NULL ( cc -> mbuf ) || IS_NCCLASS_NOT ( cc )		3458752	0		||			
ANR	3459311	CallExpression	IS_NOT_NULL ( cc -> mbuf )		3458752	0					
ANR	3459312	Callee	IS_NOT_NULL		3458752	0					
ANR	3459313	Identifier	IS_NOT_NULL		3458752	0					
ANR	3459314	ArgumentList	cc -> mbuf		3458752	1					
ANR	3459315	Argument	cc -> mbuf		3458752	0					
ANR	3459316	PtrMemberAccess	cc -> mbuf		3458752	0					
ANR	3459317	Identifier	cc		3458752	0					
ANR	3459318	Identifier	mbuf		3458752	1					
ANR	3459319	CallExpression	IS_NCCLASS_NOT ( cc )		3458752	1					
ANR	3459320	Callee	IS_NCCLASS_NOT		3458752	0					
ANR	3459321	Identifier	IS_NCCLASS_NOT		3458752	0					
ANR	3459322	ArgumentList	cc		3458752	1					
ANR	3459323	Argument	cc		3458752	0					
ANR	3459324	Identifier	cc		3458752	0					
ANR	3459325	CompoundStatement		94:1:2079:2131	3458752	1					
ANR	3459326	IdentifierDeclStatement	OnigDistance min = ONIGENC_MBC_MINLEN ( env -> enc ) ;	4631:8:104153:104200	3458752	0	True				
ANR	3459327	IdentifierDecl	min = ONIGENC_MBC_MINLEN ( env -> enc )		3458752	0					
ANR	3459328	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459329	Identifier	min		3458752	1					
ANR	3459330	AssignmentExpression	min = ONIGENC_MBC_MINLEN ( env -> enc )		3458752	2		=			
ANR	3459331	Identifier	min		3458752	0					
ANR	3459332	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3458752	1					
ANR	3459333	Callee	ONIGENC_MBC_MINLEN		3458752	0					
ANR	3459334	Identifier	ONIGENC_MBC_MINLEN		3458752	0					
ANR	3459335	ArgumentList	env -> enc		3458752	1					
ANR	3459336	Argument	env -> enc		3458752	0					
ANR	3459337	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459338	Identifier	env		3458752	0					
ANR	3459339	Identifier	enc		3458752	1					
ANR	3459340	IdentifierDeclStatement	OnigDistance max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) ;	4632:1:104203:104255	3458752	1	True				
ANR	3459341	IdentifierDecl	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	0					
ANR	3459342	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459343	Identifier	max		3458752	1					
ANR	3459344	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	2		=			
ANR	3459345	Identifier	max		3458752	0					
ANR	3459346	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	1					
ANR	3459347	Callee	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459348	Identifier	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459349	ArgumentList	env -> enc		3458752	1					
ANR	3459350	Argument	env -> enc		3458752	0					
ANR	3459351	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459352	Identifier	env		3458752	0					
ANR	3459353	Identifier	enc		3458752	1					
ANR	3459354	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4634:1:104259:104287	3458752	2	True				
ANR	3459355	CallExpression	"set_mml ( & opt -> len , min , max )"		3458752	0					
ANR	3459356	Callee	set_mml		3458752	0					
ANR	3459357	Identifier	set_mml		3458752	0					
ANR	3459358	ArgumentList	& opt -> len		3458752	1					
ANR	3459359	Argument	& opt -> len		3458752	0					
ANR	3459360	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3459361	UnaryOperator	&		3458752	0					
ANR	3459362	PtrMemberAccess	opt -> len		3458752	1					
ANR	3459363	Identifier	opt		3458752	0					
ANR	3459364	Identifier	len		3458752	1					
ANR	3459365	Argument	min		3458752	1					
ANR	3459366	Identifier	min		3458752	0					
ANR	3459367	Argument	max		3458752	2					
ANR	3459368	Identifier	max		3458752	0					
ANR	3459369	ElseStatement	else		3458752	0					
ANR	3459370	CompoundStatement		98:11:2184:2184	3458752	0					
ANR	3459371	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		3458752	0					
ANR	3459372	ForInit	i = 0 ;	4637:13:104323:104328	3458752	0	True				
ANR	3459373	AssignmentExpression	i = 0		3458752	0		=			
ANR	3459374	Identifier	i		3458752	0					
ANR	3459375	PrimaryExpression	0		3458752	1					
ANR	3459376	Condition	i < SINGLE_BYTE_SIZE	4637:20:104330:104349	3458752	1	True				
ANR	3459377	RelationalExpression	i < SINGLE_BYTE_SIZE		3458752	0		<			
ANR	3459378	Identifier	i		3458752	0					
ANR	3459379	Identifier	SINGLE_BYTE_SIZE		3458752	1					
ANR	3459380	PostIncDecOperationExpression	i ++	4637:42:104352:104354	3458752	2	True				
ANR	3459381	Identifier	i		3458752	0					
ANR	3459382	IncDec	++		3458752	1					
ANR	3459383	CompoundStatement		99:47:2233:2233	3458752	3					
ANR	3459384	ExpressionStatement	"z = BITSET_AT ( cc -> bs , i )"	4638:10:104369:104393	3458752	0	True				
ANR	3459385	AssignmentExpression	"z = BITSET_AT ( cc -> bs , i )"		3458752	0		=			
ANR	3459386	Identifier	z		3458752	0					
ANR	3459387	CallExpression	"BITSET_AT ( cc -> bs , i )"		3458752	1					
ANR	3459388	Callee	BITSET_AT		3458752	0					
ANR	3459389	Identifier	BITSET_AT		3458752	0					
ANR	3459390	ArgumentList	cc -> bs		3458752	1					
ANR	3459391	Argument	cc -> bs		3458752	0					
ANR	3459392	PtrMemberAccess	cc -> bs		3458752	0					
ANR	3459393	Identifier	cc		3458752	0					
ANR	3459394	Identifier	bs		3458752	1					
ANR	3459395	Argument	i		3458752	1					
ANR	3459396	Identifier	i		3458752	0					
ANR	3459397	IfStatement	if ( ( z && ! IS_NCCLASS_NOT ( cc ) ) || ( ! z && IS_NCCLASS_NOT ( cc ) ) )		3458752	1					
ANR	3459398	Condition	( z && ! IS_NCCLASS_NOT ( cc ) ) || ( ! z && IS_NCCLASS_NOT ( cc ) )	4639:14:104409:104464	3458752	0	True				
ANR	3459399	OrExpression	( z && ! IS_NCCLASS_NOT ( cc ) ) || ( ! z && IS_NCCLASS_NOT ( cc ) )		3458752	0		||			
ANR	3459400	AndExpression	z && ! IS_NCCLASS_NOT ( cc )		3458752	0		&&			
ANR	3459401	Identifier	z		3458752	0					
ANR	3459402	UnaryOperationExpression	! IS_NCCLASS_NOT ( cc )		3458752	1					
ANR	3459403	UnaryOperator	!		3458752	0					
ANR	3459404	CallExpression	IS_NCCLASS_NOT ( cc )		3458752	1					
ANR	3459405	Callee	IS_NCCLASS_NOT		3458752	0					
ANR	3459406	Identifier	IS_NCCLASS_NOT		3458752	0					
ANR	3459407	ArgumentList	cc		3458752	1					
ANR	3459408	Argument	cc		3458752	0					
ANR	3459409	Identifier	cc		3458752	0					
ANR	3459410	AndExpression	! z && IS_NCCLASS_NOT ( cc )		3458752	1		&&			
ANR	3459411	UnaryOperationExpression	! z		3458752	0					
ANR	3459412	UnaryOperator	!		3458752	0					
ANR	3459413	Identifier	z		3458752	1					
ANR	3459414	CallExpression	IS_NCCLASS_NOT ( cc )		3458752	1					
ANR	3459415	Callee	IS_NCCLASS_NOT		3458752	0					
ANR	3459416	Identifier	IS_NCCLASS_NOT		3458752	0					
ANR	3459417	ArgumentList	cc		3458752	1					
ANR	3459418	Argument	cc		3458752	0					
ANR	3459419	Identifier	cc		3458752	0					
ANR	3459420	CompoundStatement		101:72:2343:2343	3458752	1					
ANR	3459421	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"	4640:12:104481:104534	3458752	0	True				
ANR	3459422	CallExpression	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"		3458752	0					
ANR	3459423	Callee	add_char_opt_map_info		3458752	0					
ANR	3459424	Identifier	add_char_opt_map_info		3458752	0					
ANR	3459425	ArgumentList	& opt -> map		3458752	1					
ANR	3459426	Argument	& opt -> map		3458752	0					
ANR	3459427	UnaryOperationExpression	& opt -> map		3458752	0					
ANR	3459428	UnaryOperator	&		3458752	0					
ANR	3459429	PtrMemberAccess	opt -> map		3458752	1					
ANR	3459430	Identifier	opt		3458752	0					
ANR	3459431	Identifier	map		3458752	1					
ANR	3459432	Argument	( UChar ) i		3458752	1					
ANR	3459433	CastExpression	( UChar ) i		3458752	0					
ANR	3459434	CastTarget	UChar		3458752	0					
ANR	3459435	Identifier	i		3458752	1					
ANR	3459436	Argument	env -> enc		3458752	2					
ANR	3459437	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459438	Identifier	env		3458752	0					
ANR	3459439	Identifier	enc		3458752	1					
ANR	3459440	ExpressionStatement	"set_mml ( & opt -> len , 1 , 1 )"	4643:1:104559:104583	3458752	1	True				
ANR	3459441	CallExpression	"set_mml ( & opt -> len , 1 , 1 )"		3458752	0					
ANR	3459442	Callee	set_mml		3458752	0					
ANR	3459443	Identifier	set_mml		3458752	0					
ANR	3459444	ArgumentList	& opt -> len		3458752	1					
ANR	3459445	Argument	& opt -> len		3458752	0					
ANR	3459446	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3459447	UnaryOperator	&		3458752	0					
ANR	3459448	PtrMemberAccess	opt -> len		3458752	1					
ANR	3459449	Identifier	opt		3458752	0					
ANR	3459450	Identifier	len		3458752	1					
ANR	3459451	Argument	1		3458752	1					
ANR	3459452	PrimaryExpression	1		3458752	0					
ANR	3459453	Argument	1		3458752	2					
ANR	3459454	PrimaryExpression	1		3458752	0					
ANR	3459455	BreakStatement	break ;	4646:4:104603:104608	3458752	11	True				
ANR	3459456	Label	case NT_CTYPE :	4648:2:104613:104626	3458752	12	True				
ANR	3459457	Identifier	NT_CTYPE		3458752	0					
ANR	3459458	CompoundStatement		112:6:2516:2531	3458752	13					
ANR	3459459	IdentifierDeclStatement	"int i , min , max ;"	4650:6:104640:104655	3458752	0	True				
ANR	3459460	IdentifierDecl	i		3458752	0					
ANR	3459461	IdentifierDeclType	int		3458752	0					
ANR	3459462	Identifier	i		3458752	1					
ANR	3459463	IdentifierDecl	min		3458752	1					
ANR	3459464	IdentifierDeclType	int		3458752	0					
ANR	3459465	Identifier	min		3458752	1					
ANR	3459466	IdentifierDecl	max		3458752	2					
ANR	3459467	IdentifierDeclType	int		3458752	0					
ANR	3459468	Identifier	max		3458752	1					
ANR	3459469	ExpressionStatement	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )	4652:6:104664:104703	3458752	1	True				
ANR	3459470	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	0		=			
ANR	3459471	Identifier	max		3458752	0					
ANR	3459472	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	1					
ANR	3459473	Callee	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459474	Identifier	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459475	ArgumentList	env -> enc		3458752	1					
ANR	3459476	Argument	env -> enc		3458752	0					
ANR	3459477	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459478	Identifier	env		3458752	0					
ANR	3459479	Identifier	enc		3458752	1					
ANR	3459480	IfStatement	if ( max == 1 )		3458752	2					
ANR	3459481	Condition	max == 1	4654:10:104716:104723	3458752	0	True				
ANR	3459482	EqualityExpression	max == 1		3458752	0		==			
ANR	3459483	Identifier	max		3458752	0					
ANR	3459484	PrimaryExpression	1		3458752	1					
ANR	3459485	CompoundStatement		116:20:2602:2602	3458752	1					
ANR	3459486	ExpressionStatement	min = 1	4655:8:104736:104743	3458752	0	True				
ANR	3459487	AssignmentExpression	min = 1		3458752	0		=			
ANR	3459488	Identifier	min		3458752	0					
ANR	3459489	PrimaryExpression	1		3458752	1					
ANR	3459490	SwitchStatement	switch ( NCTYPE ( node ) -> ctype )		3458752	1					
ANR	3459491	Condition	NCTYPE ( node ) -> ctype	4657:9:104755:104773	3458752	0	True				
ANR	3459492	PtrMemberAccess	NCTYPE ( node ) -> ctype		3458752	0					
ANR	3459493	CallExpression	NCTYPE ( node )		3458752	0					
ANR	3459494	Callee	NCTYPE		3458752	0					
ANR	3459495	Identifier	NCTYPE		3458752	0					
ANR	3459496	ArgumentList	node		3458752	1					
ANR	3459497	Argument	node		3458752	0					
ANR	3459498	Identifier	node		3458752	0					
ANR	3459499	Identifier	ctype		3458752	1					
ANR	3459500	CompoundStatement		119:30:2652:2652	3458752	1					
ANR	3459501	Label	case ONIGENC_CTYPE_WORD :	4658:1:104779:104802	3458752	0	True				
ANR	3459502	Identifier	ONIGENC_CTYPE_WORD		3458752	0					
ANR	3459503	IfStatement	if ( NCTYPE ( node ) -> not != 0 )		3458752	1					
ANR	3459504	Condition	NCTYPE ( node ) -> not != 0	4659:7:104811:104832	3458752	0	True				
ANR	3459505	EqualityExpression	NCTYPE ( node ) -> not != 0		3458752	0		!=			
ANR	3459506	PtrMemberAccess	NCTYPE ( node ) -> not		3458752	0					
ANR	3459507	CallExpression	NCTYPE ( node )		3458752	0					
ANR	3459508	Callee	NCTYPE		3458752	0					
ANR	3459509	Identifier	NCTYPE		3458752	0					
ANR	3459510	ArgumentList	node		3458752	1					
ANR	3459511	Argument	node		3458752	0					
ANR	3459512	Identifier	node		3458752	0					
ANR	3459513	Identifier	not		3458752	1					
ANR	3459514	PrimaryExpression	0		3458752	1					
ANR	3459515	CompoundStatement		121:31:2711:2711	3458752	1					
ANR	3459516	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		3458752	0					
ANR	3459517	ForInit	i = 0 ;	4660:10:104847:104852	3458752	0	True				
ANR	3459518	AssignmentExpression	i = 0		3458752	0		=			
ANR	3459519	Identifier	i		3458752	0					
ANR	3459520	PrimaryExpression	0		3458752	1					
ANR	3459521	Condition	i < SINGLE_BYTE_SIZE	4660:17:104854:104873	3458752	1	True				
ANR	3459522	RelationalExpression	i < SINGLE_BYTE_SIZE		3458752	0		<			
ANR	3459523	Identifier	i		3458752	0					
ANR	3459524	Identifier	SINGLE_BYTE_SIZE		3458752	1					
ANR	3459525	PostIncDecOperationExpression	i ++	4660:39:104876:104878	3458752	2	True				
ANR	3459526	Identifier	i		3458752	0					
ANR	3459527	IncDec	++		3458752	1					
ANR	3459528	CompoundStatement		122:44:2757:2757	3458752	3					
ANR	3459529	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( env -> enc , i ) )"		3458752	0					
ANR	3459530	Condition	"! ONIGENC_IS_CODE_WORD ( env -> enc , i )"	4661:11:104894:104928	3458752	0	True				
ANR	3459531	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( env -> enc , i )"		3458752	0					
ANR	3459532	UnaryOperator	!		3458752	0					
ANR	3459533	CallExpression	"ONIGENC_IS_CODE_WORD ( env -> enc , i )"		3458752	1					
ANR	3459534	Callee	ONIGENC_IS_CODE_WORD		3458752	0					
ANR	3459535	Identifier	ONIGENC_IS_CODE_WORD		3458752	0					
ANR	3459536	ArgumentList	env -> enc		3458752	1					
ANR	3459537	Argument	env -> enc		3458752	0					
ANR	3459538	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459539	Identifier	env		3458752	0					
ANR	3459540	Identifier	enc		3458752	1					
ANR	3459541	Argument	i		3458752	1					
ANR	3459542	Identifier	i		3458752	0					
ANR	3459543	CompoundStatement		123:48:2807:2807	3458752	1					
ANR	3459544	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"	4662:2:104935:104988	3458752	0	True				
ANR	3459545	CallExpression	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"		3458752	0					
ANR	3459546	Callee	add_char_opt_map_info		3458752	0					
ANR	3459547	Identifier	add_char_opt_map_info		3458752	0					
ANR	3459548	ArgumentList	& opt -> map		3458752	1					
ANR	3459549	Argument	& opt -> map		3458752	0					
ANR	3459550	UnaryOperationExpression	& opt -> map		3458752	0					
ANR	3459551	UnaryOperator	&		3458752	0					
ANR	3459552	PtrMemberAccess	opt -> map		3458752	1					
ANR	3459553	Identifier	opt		3458752	0					
ANR	3459554	Identifier	map		3458752	1					
ANR	3459555	Argument	( UChar ) i		3458752	1					
ANR	3459556	CastExpression	( UChar ) i		3458752	0					
ANR	3459557	CastTarget	UChar		3458752	0					
ANR	3459558	Identifier	i		3458752	1					
ANR	3459559	Argument	env -> enc		3458752	2					
ANR	3459560	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459561	Identifier	env		3458752	0					
ANR	3459562	Identifier	enc		3458752	1					
ANR	3459563	ElseStatement	else		3458752	0					
ANR	3459564	CompoundStatement		128:8:2895:2895	3458752	0					
ANR	3459565	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		3458752	0					
ANR	3459566	ForInit	i = 0 ;	4667:10:105031:105036	3458752	0	True				
ANR	3459567	AssignmentExpression	i = 0		3458752	0		=			
ANR	3459568	Identifier	i		3458752	0					
ANR	3459569	PrimaryExpression	0		3458752	1					
ANR	3459570	Condition	i < SINGLE_BYTE_SIZE	4667:17:105038:105057	3458752	1	True				
ANR	3459571	RelationalExpression	i < SINGLE_BYTE_SIZE		3458752	0		<			
ANR	3459572	Identifier	i		3458752	0					
ANR	3459573	Identifier	SINGLE_BYTE_SIZE		3458752	1					
ANR	3459574	PostIncDecOperationExpression	i ++	4667:39:105060:105062	3458752	2	True				
ANR	3459575	Identifier	i		3458752	0					
ANR	3459576	IncDec	++		3458752	1					
ANR	3459577	CompoundStatement		129:44:2941:2941	3458752	3					
ANR	3459578	IfStatement	"if ( ONIGENC_IS_CODE_WORD ( env -> enc , i ) )"		3458752	0					
ANR	3459579	Condition	"ONIGENC_IS_CODE_WORD ( env -> enc , i )"	4668:11:105078:105110	3458752	0	True				
ANR	3459580	CallExpression	"ONIGENC_IS_CODE_WORD ( env -> enc , i )"		3458752	0					
ANR	3459581	Callee	ONIGENC_IS_CODE_WORD		3458752	0					
ANR	3459582	Identifier	ONIGENC_IS_CODE_WORD		3458752	0					
ANR	3459583	ArgumentList	env -> enc		3458752	1					
ANR	3459584	Argument	env -> enc		3458752	0					
ANR	3459585	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459586	Identifier	env		3458752	0					
ANR	3459587	Identifier	enc		3458752	1					
ANR	3459588	Argument	i		3458752	1					
ANR	3459589	Identifier	i		3458752	0					
ANR	3459590	CompoundStatement		130:46:2989:2989	3458752	1					
ANR	3459591	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"	4669:2:105117:105170	3458752	0	True				
ANR	3459592	CallExpression	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"		3458752	0					
ANR	3459593	Callee	add_char_opt_map_info		3458752	0					
ANR	3459594	Identifier	add_char_opt_map_info		3458752	0					
ANR	3459595	ArgumentList	& opt -> map		3458752	1					
ANR	3459596	Argument	& opt -> map		3458752	0					
ANR	3459597	UnaryOperationExpression	& opt -> map		3458752	0					
ANR	3459598	UnaryOperator	&		3458752	0					
ANR	3459599	PtrMemberAccess	opt -> map		3458752	1					
ANR	3459600	Identifier	opt		3458752	0					
ANR	3459601	Identifier	map		3458752	1					
ANR	3459602	Argument	( UChar ) i		3458752	1					
ANR	3459603	CastExpression	( UChar ) i		3458752	0					
ANR	3459604	CastTarget	UChar		3458752	0					
ANR	3459605	Identifier	i		3458752	1					
ANR	3459606	Argument	env -> enc		3458752	2					
ANR	3459607	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459608	Identifier	env		3458752	0					
ANR	3459609	Identifier	enc		3458752	1					
ANR	3459610	BreakStatement	break ;	4673:3:105196:105201	3458752	2	True				
ANR	3459611	ElseStatement	else		3458752	0					
ANR	3459612	CompoundStatement		138:11:3101:3101	3458752	0					
ANR	3459613	ExpressionStatement	min = ONIGENC_MBC_MINLEN ( env -> enc )	4677:8:105235:105269	3458752	0	True				
ANR	3459614	AssignmentExpression	min = ONIGENC_MBC_MINLEN ( env -> enc )		3458752	0		=			
ANR	3459615	Identifier	min		3458752	0					
ANR	3459616	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3458752	1					
ANR	3459617	Callee	ONIGENC_MBC_MINLEN		3458752	0					
ANR	3459618	Identifier	ONIGENC_MBC_MINLEN		3458752	0					
ANR	3459619	ArgumentList	env -> enc		3458752	1					
ANR	3459620	Argument	env -> enc		3458752	0					
ANR	3459621	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459622	Identifier	env		3458752	0					
ANR	3459623	Identifier	enc		3458752	1					
ANR	3459624	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4679:6:105285:105313	3458752	3	True				
ANR	3459625	CallExpression	"set_mml ( & opt -> len , min , max )"		3458752	0					
ANR	3459626	Callee	set_mml		3458752	0					
ANR	3459627	Identifier	set_mml		3458752	0					
ANR	3459628	ArgumentList	& opt -> len		3458752	1					
ANR	3459629	Argument	& opt -> len		3458752	0					
ANR	3459630	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3459631	UnaryOperator	&		3458752	0					
ANR	3459632	PtrMemberAccess	opt -> len		3458752	1					
ANR	3459633	Identifier	opt		3458752	0					
ANR	3459634	Identifier	len		3458752	1					
ANR	3459635	Argument	min		3458752	1					
ANR	3459636	Identifier	min		3458752	0					
ANR	3459637	Argument	max		3458752	2					
ANR	3459638	Identifier	max		3458752	0					
ANR	3459639	BreakStatement	break ;	4681:4:105325:105330	3458752	14	True				
ANR	3459640	Label	case NT_CANY :	4683:2:105335:105347	3458752	15	True				
ANR	3459641	Identifier	NT_CANY		3458752	0					
ANR	3459642	CompoundStatement		148:6:3292:3344	3458752	16					
ANR	3459643	IdentifierDeclStatement	OnigDistance min = ONIGENC_MBC_MINLEN ( env -> enc ) ;	4685:6:105361:105408	3458752	0	True				
ANR	3459644	IdentifierDecl	min = ONIGENC_MBC_MINLEN ( env -> enc )		3458752	0					
ANR	3459645	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459646	Identifier	min		3458752	1					
ANR	3459647	AssignmentExpression	min = ONIGENC_MBC_MINLEN ( env -> enc )		3458752	2		=			
ANR	3459648	Identifier	min		3458752	0					
ANR	3459649	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3458752	1					
ANR	3459650	Callee	ONIGENC_MBC_MINLEN		3458752	0					
ANR	3459651	Identifier	ONIGENC_MBC_MINLEN		3458752	0					
ANR	3459652	ArgumentList	env -> enc		3458752	1					
ANR	3459653	Argument	env -> enc		3458752	0					
ANR	3459654	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459655	Identifier	env		3458752	0					
ANR	3459656	Identifier	enc		3458752	1					
ANR	3459657	IdentifierDeclStatement	OnigDistance max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) ;	4686:6:105416:105468	3458752	1	True				
ANR	3459658	IdentifierDecl	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	0					
ANR	3459659	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459660	Identifier	max		3458752	1					
ANR	3459661	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	2		=			
ANR	3459662	Identifier	max		3458752	0					
ANR	3459663	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		3458752	1					
ANR	3459664	Callee	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459665	Identifier	ONIGENC_MBC_MAXLEN_DIST		3458752	0					
ANR	3459666	ArgumentList	env -> enc		3458752	1					
ANR	3459667	Argument	env -> enc		3458752	0					
ANR	3459668	PtrMemberAccess	env -> enc		3458752	0					
ANR	3459669	Identifier	env		3458752	0					
ANR	3459670	Identifier	enc		3458752	1					
ANR	3459671	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4687:6:105476:105504	3458752	2	True				
ANR	3459672	CallExpression	"set_mml ( & opt -> len , min , max )"		3458752	0					
ANR	3459673	Callee	set_mml		3458752	0					
ANR	3459674	Identifier	set_mml		3458752	0					
ANR	3459675	ArgumentList	& opt -> len		3458752	1					
ANR	3459676	Argument	& opt -> len		3458752	0					
ANR	3459677	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3459678	UnaryOperator	&		3458752	0					
ANR	3459679	PtrMemberAccess	opt -> len		3458752	1					
ANR	3459680	Identifier	opt		3458752	0					
ANR	3459681	Identifier	len		3458752	1					
ANR	3459682	Argument	min		3458752	1					
ANR	3459683	Identifier	min		3458752	0					
ANR	3459684	Argument	max		3458752	2					
ANR	3459685	Identifier	max		3458752	0					
ANR	3459686	BreakStatement	break ;	4689:4:105516:105521	3458752	17	True				
ANR	3459687	Label	case NT_ANCHOR :	4691:2:105526:105540	3458752	18	True				
ANR	3459688	Identifier	NT_ANCHOR		3458752	0					
ANR	3459689	SwitchStatement	switch ( NANCHOR ( node ) -> type )		3458752	19					
ANR	3459690	Condition	NANCHOR ( node ) -> type	4692:12:105554:105572	3458752	0	True				
ANR	3459691	PtrMemberAccess	NANCHOR ( node ) -> type		3458752	0					
ANR	3459692	CallExpression	NANCHOR ( node )		3458752	0					
ANR	3459693	Callee	NANCHOR		3458752	0					
ANR	3459694	Identifier	NANCHOR		3458752	0					
ANR	3459695	ArgumentList	node		3458752	1					
ANR	3459696	Argument	node		3458752	0					
ANR	3459697	Identifier	node		3458752	0					
ANR	3459698	Identifier	type		3458752	1					
ANR	3459699	CompoundStatement		154:33:3451:3451	3458752	1					
ANR	3459700	Label	case ANCHOR_BEGIN_BUF :	4693:4:105581:105602	3458752	0	True				
ANR	3459701	Identifier	ANCHOR_BEGIN_BUF		3458752	0					
ANR	3459702	Label	case ANCHOR_BEGIN_POSITION :	4694:4:105608:105634	3458752	1	True				
ANR	3459703	Identifier	ANCHOR_BEGIN_POSITION		3458752	0					
ANR	3459704	Label	case ANCHOR_BEGIN_LINE :	4695:4:105640:105662	3458752	2	True				
ANR	3459705	Identifier	ANCHOR_BEGIN_LINE		3458752	0					
ANR	3459706	Label	case ANCHOR_END_BUF :	4696:4:105668:105687	3458752	3	True				
ANR	3459707	Identifier	ANCHOR_END_BUF		3458752	0					
ANR	3459708	Label	case ANCHOR_SEMI_END_BUF :	4697:4:105693:105717	3458752	4	True				
ANR	3459709	Identifier	ANCHOR_SEMI_END_BUF		3458752	0					
ANR	3459710	Label	case ANCHOR_END_LINE :	4698:4:105723:105743	3458752	5	True				
ANR	3459711	Identifier	ANCHOR_END_LINE		3458752	0					
ANR	3459712	ExpressionStatement	"add_opt_anc_info ( & opt -> anc , NANCHOR ( node ) -> type )"	4699:6:105751:105799	3458752	6	True				
ANR	3459713	CallExpression	"add_opt_anc_info ( & opt -> anc , NANCHOR ( node ) -> type )"		3458752	0					
ANR	3459714	Callee	add_opt_anc_info		3458752	0					
ANR	3459715	Identifier	add_opt_anc_info		3458752	0					
ANR	3459716	ArgumentList	& opt -> anc		3458752	1					
ANR	3459717	Argument	& opt -> anc		3458752	0					
ANR	3459718	UnaryOperationExpression	& opt -> anc		3458752	0					
ANR	3459719	UnaryOperator	&		3458752	0					
ANR	3459720	PtrMemberAccess	opt -> anc		3458752	1					
ANR	3459721	Identifier	opt		3458752	0					
ANR	3459722	Identifier	anc		3458752	1					
ANR	3459723	Argument	NANCHOR ( node ) -> type		3458752	1					
ANR	3459724	PtrMemberAccess	NANCHOR ( node ) -> type		3458752	0					
ANR	3459725	CallExpression	NANCHOR ( node )		3458752	0					
ANR	3459726	Callee	NANCHOR		3458752	0					
ANR	3459727	Identifier	NANCHOR		3458752	0					
ANR	3459728	ArgumentList	node		3458752	1					
ANR	3459729	Argument	node		3458752	0					
ANR	3459730	Identifier	node		3458752	0					
ANR	3459731	Identifier	type		3458752	1					
ANR	3459732	BreakStatement	break ;	4700:6:105807:105812	3458752	7	True				
ANR	3459733	Label	case ANCHOR_PREC_READ :	4702:4:105819:105840	3458752	8	True				
ANR	3459734	Identifier	ANCHOR_PREC_READ		3458752	0					
ANR	3459735	CompoundStatement		166:1:3727:3743	3458752	9					
ANR	3459736	IdentifierDeclStatement	NodeOptInfo nopt ;	4704:1:105851:105867	3458752	0	True				
ANR	3459737	IdentifierDecl	nopt		3458752	0					
ANR	3459738	IdentifierDeclType	NodeOptInfo		3458752	0					
ANR	3459739	Identifier	nopt		3458752	1					
ANR	3459740	ExpressionStatement	"r = optimize_node_left ( NANCHOR ( node ) -> target , & nopt , env )"	4706:1:105871:105928	3458752	1	True				
ANR	3459741	AssignmentExpression	"r = optimize_node_left ( NANCHOR ( node ) -> target , & nopt , env )"		3458752	0		=			
ANR	3459742	Identifier	r		3458752	0					
ANR	3459743	CallExpression	"optimize_node_left ( NANCHOR ( node ) -> target , & nopt , env )"		3458752	1					
ANR	3459744	Callee	optimize_node_left		3458752	0					
ANR	3459745	Identifier	optimize_node_left		3458752	0					
ANR	3459746	ArgumentList	NANCHOR ( node ) -> target		3458752	1					
ANR	3459747	Argument	NANCHOR ( node ) -> target		3458752	0					
ANR	3459748	PtrMemberAccess	NANCHOR ( node ) -> target		3458752	0					
ANR	3459749	CallExpression	NANCHOR ( node )		3458752	0					
ANR	3459750	Callee	NANCHOR		3458752	0					
ANR	3459751	Identifier	NANCHOR		3458752	0					
ANR	3459752	ArgumentList	node		3458752	1					
ANR	3459753	Argument	node		3458752	0					
ANR	3459754	Identifier	node		3458752	0					
ANR	3459755	Identifier	target		3458752	1					
ANR	3459756	Argument	& nopt		3458752	1					
ANR	3459757	UnaryOperationExpression	& nopt		3458752	0					
ANR	3459758	UnaryOperator	&		3458752	0					
ANR	3459759	Identifier	nopt		3458752	1					
ANR	3459760	Argument	env		3458752	2					
ANR	3459761	Identifier	env		3458752	0					
ANR	3459762	IfStatement	if ( r == 0 )		3458752	2					
ANR	3459763	Condition	r == 0	4707:5:105935:105940	3458752	0	True				
ANR	3459764	EqualityExpression	r == 0		3458752	0		==			
ANR	3459765	Identifier	r		3458752	0					
ANR	3459766	PrimaryExpression	0		3458752	1					
ANR	3459767	CompoundStatement		169:13:3819:3819	3458752	1					
ANR	3459768	IfStatement	if ( nopt . exb . len > 0 )		3458752	0					
ANR	3459769	Condition	nopt . exb . len > 0	4708:7:105952:105967	3458752	0	True				
ANR	3459770	RelationalExpression	nopt . exb . len > 0		3458752	0		>			
ANR	3459771	MemberAccess	nopt . exb . len		3458752	0					
ANR	3459772	MemberAccess	nopt . exb		3458752	0					
ANR	3459773	Identifier	nopt		3458752	0					
ANR	3459774	Identifier	exb		3458752	1					
ANR	3459775	Identifier	len		3458752	1					
ANR	3459776	PrimaryExpression	0		3458752	1					
ANR	3459777	ExpressionStatement	"copy_opt_exact_info ( & opt -> expr , & nopt . exb )"	4709:5:105975:106017	3458752	1	True				
ANR	3459778	CallExpression	"copy_opt_exact_info ( & opt -> expr , & nopt . exb )"		3458752	0					
ANR	3459779	Callee	copy_opt_exact_info		3458752	0					
ANR	3459780	Identifier	copy_opt_exact_info		3458752	0					
ANR	3459781	ArgumentList	& opt -> expr		3458752	1					
ANR	3459782	Argument	& opt -> expr		3458752	0					
ANR	3459783	UnaryOperationExpression	& opt -> expr		3458752	0					
ANR	3459784	UnaryOperator	&		3458752	0					
ANR	3459785	PtrMemberAccess	opt -> expr		3458752	1					
ANR	3459786	Identifier	opt		3458752	0					
ANR	3459787	Identifier	expr		3458752	1					
ANR	3459788	Argument	& nopt . exb		3458752	1					
ANR	3459789	UnaryOperationExpression	& nopt . exb		3458752	0					
ANR	3459790	UnaryOperator	&		3458752	0					
ANR	3459791	MemberAccess	nopt . exb		3458752	1					
ANR	3459792	Identifier	nopt		3458752	0					
ANR	3459793	Identifier	exb		3458752	1					
ANR	3459794	ElseStatement	else		3458752	0					
ANR	3459795	IfStatement	if ( nopt . exm . len > 0 )		3458752	0					
ANR	3459796	Condition	nopt . exm . len > 0	4710:12:106031:106046	3458752	0	True				
ANR	3459797	RelationalExpression	nopt . exm . len > 0		3458752	0		>			
ANR	3459798	MemberAccess	nopt . exm . len		3458752	0					
ANR	3459799	MemberAccess	nopt . exm		3458752	0					
ANR	3459800	Identifier	nopt		3458752	0					
ANR	3459801	Identifier	exm		3458752	1					
ANR	3459802	Identifier	len		3458752	1					
ANR	3459803	PrimaryExpression	0		3458752	1					
ANR	3459804	ExpressionStatement	"copy_opt_exact_info ( & opt -> expr , & nopt . exm )"	4711:5:106054:106096	3458752	1	True				
ANR	3459805	CallExpression	"copy_opt_exact_info ( & opt -> expr , & nopt . exm )"		3458752	0					
ANR	3459806	Callee	copy_opt_exact_info		3458752	0					
ANR	3459807	Identifier	copy_opt_exact_info		3458752	0					
ANR	3459808	ArgumentList	& opt -> expr		3458752	1					
ANR	3459809	Argument	& opt -> expr		3458752	0					
ANR	3459810	UnaryOperationExpression	& opt -> expr		3458752	0					
ANR	3459811	UnaryOperator	&		3458752	0					
ANR	3459812	PtrMemberAccess	opt -> expr		3458752	1					
ANR	3459813	Identifier	opt		3458752	0					
ANR	3459814	Identifier	expr		3458752	1					
ANR	3459815	Argument	& nopt . exm		3458752	1					
ANR	3459816	UnaryOperationExpression	& nopt . exm		3458752	0					
ANR	3459817	UnaryOperator	&		3458752	0					
ANR	3459818	MemberAccess	nopt . exm		3458752	1					
ANR	3459819	Identifier	nopt		3458752	0					
ANR	3459820	Identifier	exm		3458752	1					
ANR	3459821	ExpressionStatement	opt -> expr . reach_end = 0	4713:3:106102:106125	3458752	1	True				
ANR	3459822	AssignmentExpression	opt -> expr . reach_end = 0		3458752	0		=			
ANR	3459823	MemberAccess	opt -> expr . reach_end		3458752	0					
ANR	3459824	PtrMemberAccess	opt -> expr		3458752	0					
ANR	3459825	Identifier	opt		3458752	0					
ANR	3459826	Identifier	expr		3458752	1					
ANR	3459827	Identifier	reach_end		3458752	1					
ANR	3459828	PrimaryExpression	0		3458752	1					
ANR	3459829	IfStatement	if ( nopt . map . value > 0 )		3458752	2					
ANR	3459830	Condition	nopt . map . value > 0	4715:7:106135:106152	3458752	0	True				
ANR	3459831	RelationalExpression	nopt . map . value > 0		3458752	0		>			
ANR	3459832	MemberAccess	nopt . map . value		3458752	0					
ANR	3459833	MemberAccess	nopt . map		3458752	0					
ANR	3459834	Identifier	nopt		3458752	0					
ANR	3459835	Identifier	map		3458752	1					
ANR	3459836	Identifier	value		3458752	1					
ANR	3459837	PrimaryExpression	0		3458752	1					
ANR	3459838	ExpressionStatement	"copy_opt_map_info ( & opt -> map , & nopt . map )"	4716:5:106160:106199	3458752	1	True				
ANR	3459839	CallExpression	"copy_opt_map_info ( & opt -> map , & nopt . map )"		3458752	0					
ANR	3459840	Callee	copy_opt_map_info		3458752	0					
ANR	3459841	Identifier	copy_opt_map_info		3458752	0					
ANR	3459842	ArgumentList	& opt -> map		3458752	1					
ANR	3459843	Argument	& opt -> map		3458752	0					
ANR	3459844	UnaryOperationExpression	& opt -> map		3458752	0					
ANR	3459845	UnaryOperator	&		3458752	0					
ANR	3459846	PtrMemberAccess	opt -> map		3458752	1					
ANR	3459847	Identifier	opt		3458752	0					
ANR	3459848	Identifier	map		3458752	1					
ANR	3459849	Argument	& nopt . map		3458752	1					
ANR	3459850	UnaryOperationExpression	& nopt . map		3458752	0					
ANR	3459851	UnaryOperator	&		3458752	0					
ANR	3459852	MemberAccess	nopt . map		3458752	1					
ANR	3459853	Identifier	nopt		3458752	0					
ANR	3459854	Identifier	map		3458752	1					
ANR	3459855	BreakStatement	break ;	4719:6:106218:106223	3458752	10	True				
ANR	3459856	Label	case ANCHOR_PREC_READ_NOT :	4721:4:106230:106255	3458752	11	True				
ANR	3459857	Identifier	ANCHOR_PREC_READ_NOT		3458752	0					
ANR	3459858	Label	case ANCHOR_LOOK_BEHIND :	4722:4:106261:106284	3458752	12	True				
ANR	3459859	Identifier	ANCHOR_LOOK_BEHIND		3458752	0					
ANR	3459860	Label	case ANCHOR_LOOK_BEHIND_NOT :	4723:4:106327:106354	3458752	13	True				
ANR	3459861	Identifier	ANCHOR_LOOK_BEHIND_NOT		3458752	0					
ANR	3459862	BreakStatement	break ;	4724:6:106362:106367	3458752	14	True				
ANR	3459863	BreakStatement	break ;	4726:4:106379:106384	3458752	20	True				
ANR	3459864	Label	case NT_BREF :	4728:2:106389:106401	3458752	21	True				
ANR	3459865	Identifier	NT_BREF		3458752	0					
ANR	3459866	CompoundStatement		196:6:4418:4444	3458752	22					
ANR	3459867	IdentifierDeclStatement	int i ;	4730:6:106415:106420	3458752	0	True				
ANR	3459868	IdentifierDecl	i		3458752	0					
ANR	3459869	IdentifierDeclType	int		3458752	0					
ANR	3459870	Identifier	i		3458752	1					
ANR	3459871	IdentifierDeclStatement	int * backs ;	4731:6:106428:106438	3458752	1	True				
ANR	3459872	IdentifierDecl	* backs		3458752	0					
ANR	3459873	IdentifierDeclType	int *		3458752	0					
ANR	3459874	Identifier	backs		3458752	1					
ANR	3459875	IdentifierDeclStatement	"OnigDistance min , max , tmin , tmax ;"	4732:6:106446:106479	3458752	2	True				
ANR	3459876	IdentifierDecl	min		3458752	0					
ANR	3459877	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459878	Identifier	min		3458752	1					
ANR	3459879	IdentifierDecl	max		3458752	1					
ANR	3459880	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459881	Identifier	max		3458752	1					
ANR	3459882	IdentifierDecl	tmin		3458752	2					
ANR	3459883	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459884	Identifier	tmin		3458752	1					
ANR	3459885	IdentifierDecl	tmax		3458752	3					
ANR	3459886	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3459887	Identifier	tmax		3458752	1					
ANR	3459888	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env -> scan_env ) ;	4733:6:106487:106534	3458752	3	True				
ANR	3459889	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env -> scan_env )		3458752	0					
ANR	3459890	IdentifierDeclType	Node * *		3458752	0					
ANR	3459891	Identifier	nodes		3458752	1					
ANR	3459892	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env -> scan_env )		3458752	2		=			
ANR	3459893	Identifier	nodes		3458752	0					
ANR	3459894	CallExpression	SCANENV_MEM_NODES ( env -> scan_env )		3458752	1					
ANR	3459895	Callee	SCANENV_MEM_NODES		3458752	0					
ANR	3459896	Identifier	SCANENV_MEM_NODES		3458752	0					
ANR	3459897	ArgumentList	env -> scan_env		3458752	1					
ANR	3459898	Argument	env -> scan_env		3458752	0					
ANR	3459899	PtrMemberAccess	env -> scan_env		3458752	0					
ANR	3459900	Identifier	env		3458752	0					
ANR	3459901	Identifier	scan_env		3458752	1					
ANR	3459902	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	4734:6:106542:106568	3458752	4	True				
ANR	3459903	IdentifierDecl	* br = NBREF ( node )		3458752	0					
ANR	3459904	IdentifierDeclType	BRefNode *		3458752	0					
ANR	3459905	Identifier	br		3458752	1					
ANR	3459906	AssignmentExpression	* br = NBREF ( node )		3458752	2		=			
ANR	3459907	Identifier	br		3458752	0					
ANR	3459908	CallExpression	NBREF ( node )		3458752	1					
ANR	3459909	Callee	NBREF		3458752	0					
ANR	3459910	Identifier	NBREF		3458752	0					
ANR	3459911	ArgumentList	node		3458752	1					
ANR	3459912	Argument	node		3458752	0					
ANR	3459913	Identifier	node		3458752	0					
ANR	3459914	IfStatement	if ( br -> state & NST_RECURSION )		3458752	5					
ANR	3459915	Condition	br -> state & NST_RECURSION	4736:10:106581:106605	3458752	0	True				
ANR	3459916	BitAndExpression	br -> state & NST_RECURSION		3458752	0		&			
ANR	3459917	PtrMemberAccess	br -> state		3458752	0					
ANR	3459918	Identifier	br		3458752	0					
ANR	3459919	Identifier	state		3458752	1					
ANR	3459920	Identifier	NST_RECURSION		3458752	1					
ANR	3459921	CompoundStatement		198:37:4484:4484	3458752	1					
ANR	3459922	ExpressionStatement	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"	4737:1:106611:106656	3458752	0	True				
ANR	3459923	CallExpression	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"		3458752	0					
ANR	3459924	Callee	set_mml		3458752	0					
ANR	3459925	Identifier	set_mml		3458752	0					
ANR	3459926	ArgumentList	& opt -> len		3458752	1					
ANR	3459927	Argument	& opt -> len		3458752	0					
ANR	3459928	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3459929	UnaryOperator	&		3458752	0					
ANR	3459930	PtrMemberAccess	opt -> len		3458752	1					
ANR	3459931	Identifier	opt		3458752	0					
ANR	3459932	Identifier	len		3458752	1					
ANR	3459933	Argument	0		3458752	1					
ANR	3459934	PrimaryExpression	0		3458752	0					
ANR	3459935	Argument	ONIG_INFINITE_DISTANCE		3458752	2					
ANR	3459936	Identifier	ONIG_INFINITE_DISTANCE		3458752	0					
ANR	3459937	BreakStatement	break ;	4738:1:106659:106664	3458752	1	True				
ANR	3459938	ExpressionStatement	backs = BACKREFS_P ( br )	4740:6:106680:106702	3458752	6	True				
ANR	3459939	AssignmentExpression	backs = BACKREFS_P ( br )		3458752	0		=			
ANR	3459940	Identifier	backs		3458752	0					
ANR	3459941	CallExpression	BACKREFS_P ( br )		3458752	1					
ANR	3459942	Callee	BACKREFS_P		3458752	0					
ANR	3459943	Identifier	BACKREFS_P		3458752	0					
ANR	3459944	ArgumentList	br		3458752	1					
ANR	3459945	Argument	br		3458752	0					
ANR	3459946	Identifier	br		3458752	0					
ANR	3459947	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , & min , env -> scan_env )"	4741:6:106710:106772	3458752	7	True				
ANR	3459948	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , & min , env -> scan_env )"		3458752	0		=			
ANR	3459949	Identifier	r		3458752	0					
ANR	3459950	CallExpression	"get_min_match_length ( nodes [ backs [ 0 ] ] , & min , env -> scan_env )"		3458752	1					
ANR	3459951	Callee	get_min_match_length		3458752	0					
ANR	3459952	Identifier	get_min_match_length		3458752	0					
ANR	3459953	ArgumentList	nodes [ backs [ 0 ] ]		3458752	1					
ANR	3459954	Argument	nodes [ backs [ 0 ] ]		3458752	0					
ANR	3459955	ArrayIndexing	nodes [ backs [ 0 ] ]		3458752	0					
ANR	3459956	Identifier	nodes		3458752	0					
ANR	3459957	ArrayIndexing	backs [ 0 ]		3458752	1					
ANR	3459958	Identifier	backs		3458752	0					
ANR	3459959	PrimaryExpression	0		3458752	1					
ANR	3459960	Argument	& min		3458752	1					
ANR	3459961	UnaryOperationExpression	& min		3458752	0					
ANR	3459962	UnaryOperator	&		3458752	0					
ANR	3459963	Identifier	min		3458752	1					
ANR	3459964	Argument	env -> scan_env		3458752	2					
ANR	3459965	PtrMemberAccess	env -> scan_env		3458752	0					
ANR	3459966	Identifier	env		3458752	0					
ANR	3459967	Identifier	scan_env		3458752	1					
ANR	3459968	IfStatement	if ( r != 0 )		3458752	8					
ANR	3459969	Condition	r != 0	4742:10:106784:106789	3458752	0	True				
ANR	3459970	EqualityExpression	r != 0		3458752	0		!=			
ANR	3459971	Identifier	r		3458752	0					
ANR	3459972	PrimaryExpression	0		3458752	1					
ANR	3459973	BreakStatement	break ;	4742:18:106792:106797	3458752	1	True				
ANR	3459974	ExpressionStatement	"r = get_max_match_length ( nodes [ backs [ 0 ] ] , & max , env -> scan_env )"	4743:6:106805:106867	3458752	9	True				
ANR	3459975	AssignmentExpression	"r = get_max_match_length ( nodes [ backs [ 0 ] ] , & max , env -> scan_env )"		3458752	0		=			
ANR	3459976	Identifier	r		3458752	0					
ANR	3459977	CallExpression	"get_max_match_length ( nodes [ backs [ 0 ] ] , & max , env -> scan_env )"		3458752	1					
ANR	3459978	Callee	get_max_match_length		3458752	0					
ANR	3459979	Identifier	get_max_match_length		3458752	0					
ANR	3459980	ArgumentList	nodes [ backs [ 0 ] ]		3458752	1					
ANR	3459981	Argument	nodes [ backs [ 0 ] ]		3458752	0					
ANR	3459982	ArrayIndexing	nodes [ backs [ 0 ] ]		3458752	0					
ANR	3459983	Identifier	nodes		3458752	0					
ANR	3459984	ArrayIndexing	backs [ 0 ]		3458752	1					
ANR	3459985	Identifier	backs		3458752	0					
ANR	3459986	PrimaryExpression	0		3458752	1					
ANR	3459987	Argument	& max		3458752	1					
ANR	3459988	UnaryOperationExpression	& max		3458752	0					
ANR	3459989	UnaryOperator	&		3458752	0					
ANR	3459990	Identifier	max		3458752	1					
ANR	3459991	Argument	env -> scan_env		3458752	2					
ANR	3459992	PtrMemberAccess	env -> scan_env		3458752	0					
ANR	3459993	Identifier	env		3458752	0					
ANR	3459994	Identifier	scan_env		3458752	1					
ANR	3459995	IfStatement	if ( r != 0 )		3458752	10					
ANR	3459996	Condition	r != 0	4744:10:106879:106884	3458752	0	True				
ANR	3459997	EqualityExpression	r != 0		3458752	0		!=			
ANR	3459998	Identifier	r		3458752	0					
ANR	3459999	PrimaryExpression	0		3458752	1					
ANR	3460000	BreakStatement	break ;	4744:18:106887:106892	3458752	1	True				
ANR	3460001	ForStatement	for ( i = 1 ; i < br -> back_num ; i ++ )		3458752	11					
ANR	3460002	ForInit	i = 1 ;	4745:11:106905:106910	3458752	0	True				
ANR	3460003	AssignmentExpression	i = 1		3458752	0		=			
ANR	3460004	Identifier	i		3458752	0					
ANR	3460005	PrimaryExpression	1		3458752	1					
ANR	3460006	Condition	i < br -> back_num	4745:18:106912:106927	3458752	1	True				
ANR	3460007	RelationalExpression	i < br -> back_num		3458752	0		<			
ANR	3460008	Identifier	i		3458752	0					
ANR	3460009	PtrMemberAccess	br -> back_num		3458752	1					
ANR	3460010	Identifier	br		3458752	0					
ANR	3460011	Identifier	back_num		3458752	1					
ANR	3460012	PostIncDecOperationExpression	i ++	4745:36:106930:106932	3458752	2	True				
ANR	3460013	Identifier	i		3458752	0					
ANR	3460014	IncDec	++		3458752	1					
ANR	3460015	CompoundStatement		207:41:4811:4811	3458752	3					
ANR	3460016	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env -> scan_env )"	4746:1:106938:107001	3458752	0	True				
ANR	3460017	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env -> scan_env )"		3458752	0		=			
ANR	3460018	Identifier	r		3458752	0					
ANR	3460019	CallExpression	"get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env -> scan_env )"		3458752	1					
ANR	3460020	Callee	get_min_match_length		3458752	0					
ANR	3460021	Identifier	get_min_match_length		3458752	0					
ANR	3460022	ArgumentList	nodes [ backs [ i ] ]		3458752	1					
ANR	3460023	Argument	nodes [ backs [ i ] ]		3458752	0					
ANR	3460024	ArrayIndexing	nodes [ backs [ i ] ]		3458752	0					
ANR	3460025	Identifier	nodes		3458752	0					
ANR	3460026	ArrayIndexing	backs [ i ]		3458752	1					
ANR	3460027	Identifier	backs		3458752	0					
ANR	3460028	Identifier	i		3458752	1					
ANR	3460029	Argument	& tmin		3458752	1					
ANR	3460030	UnaryOperationExpression	& tmin		3458752	0					
ANR	3460031	UnaryOperator	&		3458752	0					
ANR	3460032	Identifier	tmin		3458752	1					
ANR	3460033	Argument	env -> scan_env		3458752	2					
ANR	3460034	PtrMemberAccess	env -> scan_env		3458752	0					
ANR	3460035	Identifier	env		3458752	0					
ANR	3460036	Identifier	scan_env		3458752	1					
ANR	3460037	IfStatement	if ( r != 0 )		3458752	1					
ANR	3460038	Condition	r != 0	4747:5:107008:107013	3458752	0	True				
ANR	3460039	EqualityExpression	r != 0		3458752	0		!=			
ANR	3460040	Identifier	r		3458752	0					
ANR	3460041	PrimaryExpression	0		3458752	1					
ANR	3460042	BreakStatement	break ;	4747:13:107016:107021	3458752	1	True				
ANR	3460043	ExpressionStatement	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env -> scan_env )"	4748:1:107024:107087	3458752	2	True				
ANR	3460044	AssignmentExpression	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env -> scan_env )"		3458752	0		=			
ANR	3460045	Identifier	r		3458752	0					
ANR	3460046	CallExpression	"get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env -> scan_env )"		3458752	1					
ANR	3460047	Callee	get_max_match_length		3458752	0					
ANR	3460048	Identifier	get_max_match_length		3458752	0					
ANR	3460049	ArgumentList	nodes [ backs [ i ] ]		3458752	1					
ANR	3460050	Argument	nodes [ backs [ i ] ]		3458752	0					
ANR	3460051	ArrayIndexing	nodes [ backs [ i ] ]		3458752	0					
ANR	3460052	Identifier	nodes		3458752	0					
ANR	3460053	ArrayIndexing	backs [ i ]		3458752	1					
ANR	3460054	Identifier	backs		3458752	0					
ANR	3460055	Identifier	i		3458752	1					
ANR	3460056	Argument	& tmax		3458752	1					
ANR	3460057	UnaryOperationExpression	& tmax		3458752	0					
ANR	3460058	UnaryOperator	&		3458752	0					
ANR	3460059	Identifier	tmax		3458752	1					
ANR	3460060	Argument	env -> scan_env		3458752	2					
ANR	3460061	PtrMemberAccess	env -> scan_env		3458752	0					
ANR	3460062	Identifier	env		3458752	0					
ANR	3460063	Identifier	scan_env		3458752	1					
ANR	3460064	IfStatement	if ( r != 0 )		3458752	3					
ANR	3460065	Condition	r != 0	4749:5:107094:107099	3458752	0	True				
ANR	3460066	EqualityExpression	r != 0		3458752	0		!=			
ANR	3460067	Identifier	r		3458752	0					
ANR	3460068	PrimaryExpression	0		3458752	1					
ANR	3460069	BreakStatement	break ;	4749:13:107102:107107	3458752	1	True				
ANR	3460070	IfStatement	if ( min > tmin )		3458752	4					
ANR	3460071	Condition	min > tmin	4750:5:107114:107123	3458752	0	True				
ANR	3460072	RelationalExpression	min > tmin		3458752	0		>			
ANR	3460073	Identifier	min		3458752	0					
ANR	3460074	Identifier	tmin		3458752	1					
ANR	3460075	ExpressionStatement	min = tmin	4750:17:107126:107136	3458752	1	True				
ANR	3460076	AssignmentExpression	min = tmin		3458752	0		=			
ANR	3460077	Identifier	min		3458752	0					
ANR	3460078	Identifier	tmin		3458752	1					
ANR	3460079	IfStatement	if ( max < tmax )		3458752	5					
ANR	3460080	Condition	max < tmax	4751:5:107143:107152	3458752	0	True				
ANR	3460081	RelationalExpression	max < tmax		3458752	0		<			
ANR	3460082	Identifier	max		3458752	0					
ANR	3460083	Identifier	tmax		3458752	1					
ANR	3460084	ExpressionStatement	max = tmax	4751:17:107155:107165	3458752	1	True				
ANR	3460085	AssignmentExpression	max = tmax		3458752	0		=			
ANR	3460086	Identifier	max		3458752	0					
ANR	3460087	Identifier	tmax		3458752	1					
ANR	3460088	IfStatement	if ( r == 0 )		3458752	12					
ANR	3460089	Condition	r == 0	4753:10:107185:107190	3458752	0	True				
ANR	3460090	EqualityExpression	r == 0		3458752	0		==			
ANR	3460091	Identifier	r		3458752	0					
ANR	3460092	PrimaryExpression	0		3458752	1					
ANR	3460093	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4753:18:107193:107221	3458752	1	True				
ANR	3460094	CallExpression	"set_mml ( & opt -> len , min , max )"		3458752	0					
ANR	3460095	Callee	set_mml		3458752	0					
ANR	3460096	Identifier	set_mml		3458752	0					
ANR	3460097	ArgumentList	& opt -> len		3458752	1					
ANR	3460098	Argument	& opt -> len		3458752	0					
ANR	3460099	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3460100	UnaryOperator	&		3458752	0					
ANR	3460101	PtrMemberAccess	opt -> len		3458752	1					
ANR	3460102	Identifier	opt		3458752	0					
ANR	3460103	Identifier	len		3458752	1					
ANR	3460104	Argument	min		3458752	1					
ANR	3460105	Identifier	min		3458752	0					
ANR	3460106	Argument	max		3458752	2					
ANR	3460107	Identifier	max		3458752	0					
ANR	3460108	BreakStatement	break ;	4755:4:107233:107238	3458752	23	True				
ANR	3460109	Label	case NT_CALL :	4758:2:107266:107278	3458752	24	True				
ANR	3460110	Identifier	NT_CALL		3458752	0					
ANR	3460111	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		3458752	25					
ANR	3460112	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	4759:8:107288:107317	3458752	0	True				
ANR	3460113	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		3458752	0					
ANR	3460114	Callee	IS_CALL_RECURSION		3458752	0					
ANR	3460115	Identifier	IS_CALL_RECURSION		3458752	0					
ANR	3460116	ArgumentList	NCALL ( node )		3458752	1					
ANR	3460117	Argument	NCALL ( node )		3458752	0					
ANR	3460118	CallExpression	NCALL ( node )		3458752	0					
ANR	3460119	Callee	NCALL		3458752	0					
ANR	3460120	Identifier	NCALL		3458752	0					
ANR	3460121	ArgumentList	node		3458752	1					
ANR	3460122	Argument	node		3458752	0					
ANR	3460123	Identifier	node		3458752	0					
ANR	3460124	ExpressionStatement	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"	4760:6:107326:107371	3458752	1	True				
ANR	3460125	CallExpression	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"		3458752	0					
ANR	3460126	Callee	set_mml		3458752	0					
ANR	3460127	Identifier	set_mml		3458752	0					
ANR	3460128	ArgumentList	& opt -> len		3458752	1					
ANR	3460129	Argument	& opt -> len		3458752	0					
ANR	3460130	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3460131	UnaryOperator	&		3458752	0					
ANR	3460132	PtrMemberAccess	opt -> len		3458752	1					
ANR	3460133	Identifier	opt		3458752	0					
ANR	3460134	Identifier	len		3458752	1					
ANR	3460135	Argument	0		3458752	1					
ANR	3460136	PrimaryExpression	0		3458752	0					
ANR	3460137	Argument	ONIG_INFINITE_DISTANCE		3458752	2					
ANR	3460138	Identifier	ONIG_INFINITE_DISTANCE		3458752	0					
ANR	3460139	ElseStatement	else		3458752	0					
ANR	3460140	CompoundStatement		224:6:5266:5300	3458752	0					
ANR	3460141	IdentifierDeclStatement	OnigOptionType save = env -> options ;	4762:6:107390:107424	3458752	0	True				
ANR	3460142	IdentifierDecl	save = env -> options		3458752	0					
ANR	3460143	IdentifierDeclType	OnigOptionType		3458752	0					
ANR	3460144	Identifier	save		3458752	1					
ANR	3460145	AssignmentExpression	save = env -> options		3458752	2		=			
ANR	3460146	Identifier	save		3458752	0					
ANR	3460147	PtrMemberAccess	env -> options		3458752	1					
ANR	3460148	Identifier	env		3458752	0					
ANR	3460149	Identifier	options		3458752	1					
ANR	3460150	ExpressionStatement	env -> options = NENCLOSE ( NCALL ( node ) -> target ) -> option	4763:6:107432:107484	3458752	1	True				
ANR	3460151	AssignmentExpression	env -> options = NENCLOSE ( NCALL ( node ) -> target ) -> option		3458752	0		=			
ANR	3460152	PtrMemberAccess	env -> options		3458752	0					
ANR	3460153	Identifier	env		3458752	0					
ANR	3460154	Identifier	options		3458752	1					
ANR	3460155	PtrMemberAccess	NENCLOSE ( NCALL ( node ) -> target ) -> option		3458752	1					
ANR	3460156	CallExpression	NENCLOSE ( NCALL ( node ) -> target )		3458752	0					
ANR	3460157	Callee	NENCLOSE		3458752	0					
ANR	3460158	Identifier	NENCLOSE		3458752	0					
ANR	3460159	ArgumentList	NCALL ( node ) -> target		3458752	1					
ANR	3460160	Argument	NCALL ( node ) -> target		3458752	0					
ANR	3460161	PtrMemberAccess	NCALL ( node ) -> target		3458752	0					
ANR	3460162	CallExpression	NCALL ( node )		3458752	0					
ANR	3460163	Callee	NCALL		3458752	0					
ANR	3460164	Identifier	NCALL		3458752	0					
ANR	3460165	ArgumentList	node		3458752	1					
ANR	3460166	Argument	node		3458752	0					
ANR	3460167	Identifier	node		3458752	0					
ANR	3460168	Identifier	target		3458752	1					
ANR	3460169	Identifier	option		3458752	1					
ANR	3460170	ExpressionStatement	"r = optimize_node_left ( NCALL ( node ) -> target , opt , env )"	4764:6:107492:107545	3458752	2	True				
ANR	3460171	AssignmentExpression	"r = optimize_node_left ( NCALL ( node ) -> target , opt , env )"		3458752	0		=			
ANR	3460172	Identifier	r		3458752	0					
ANR	3460173	CallExpression	"optimize_node_left ( NCALL ( node ) -> target , opt , env )"		3458752	1					
ANR	3460174	Callee	optimize_node_left		3458752	0					
ANR	3460175	Identifier	optimize_node_left		3458752	0					
ANR	3460176	ArgumentList	NCALL ( node ) -> target		3458752	1					
ANR	3460177	Argument	NCALL ( node ) -> target		3458752	0					
ANR	3460178	PtrMemberAccess	NCALL ( node ) -> target		3458752	0					
ANR	3460179	CallExpression	NCALL ( node )		3458752	0					
ANR	3460180	Callee	NCALL		3458752	0					
ANR	3460181	Identifier	NCALL		3458752	0					
ANR	3460182	ArgumentList	node		3458752	1					
ANR	3460183	Argument	node		3458752	0					
ANR	3460184	Identifier	node		3458752	0					
ANR	3460185	Identifier	target		3458752	1					
ANR	3460186	Argument	opt		3458752	1					
ANR	3460187	Identifier	opt		3458752	0					
ANR	3460188	Argument	env		3458752	2					
ANR	3460189	Identifier	env		3458752	0					
ANR	3460190	ExpressionStatement	env -> options = save	4765:6:107553:107572	3458752	3	True				
ANR	3460191	AssignmentExpression	env -> options = save		3458752	0		=			
ANR	3460192	PtrMemberAccess	env -> options		3458752	0					
ANR	3460193	Identifier	env		3458752	0					
ANR	3460194	Identifier	options		3458752	1					
ANR	3460195	Identifier	save		3458752	1					
ANR	3460196	BreakStatement	break ;	4767:4:107584:107589	3458752	26	True				
ANR	3460197	Label	case NT_QTFR :	4770:2:107601:107613	3458752	27	True				
ANR	3460198	Identifier	NT_QTFR		3458752	0					
ANR	3460199	CompoundStatement		237:6:5569:5595	3458752	28					
ANR	3460200	IdentifierDeclStatement	int i ;	4772:6:107627:107632	3458752	0	True				
ANR	3460201	IdentifierDecl	i		3458752	0					
ANR	3460202	IdentifierDeclType	int		3458752	0					
ANR	3460203	Identifier	i		3458752	1					
ANR	3460204	IdentifierDeclStatement	"OnigDistance min , max ;"	4773:6:107640:107661	3458752	1	True				
ANR	3460205	IdentifierDecl	min		3458752	0					
ANR	3460206	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3460207	Identifier	min		3458752	1					
ANR	3460208	IdentifierDecl	max		3458752	1					
ANR	3460209	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3460210	Identifier	max		3458752	1					
ANR	3460211	IdentifierDeclStatement	NodeOptInfo nopt ;	4774:6:107669:107685	3458752	2	True				
ANR	3460212	IdentifierDecl	nopt		3458752	0					
ANR	3460213	IdentifierDeclType	NodeOptInfo		3458752	0					
ANR	3460214	Identifier	nopt		3458752	1					
ANR	3460215	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	4775:6:107693:107719	3458752	3	True				
ANR	3460216	IdentifierDecl	* qn = NQTFR ( node )		3458752	0					
ANR	3460217	IdentifierDeclType	QtfrNode *		3458752	0					
ANR	3460218	Identifier	qn		3458752	1					
ANR	3460219	AssignmentExpression	* qn = NQTFR ( node )		3458752	2		=			
ANR	3460220	Identifier	qn		3458752	0					
ANR	3460221	CallExpression	NQTFR ( node )		3458752	1					
ANR	3460222	Callee	NQTFR		3458752	0					
ANR	3460223	Identifier	NQTFR		3458752	0					
ANR	3460224	ArgumentList	node		3458752	1					
ANR	3460225	Argument	node		3458752	0					
ANR	3460226	Identifier	node		3458752	0					
ANR	3460227	ExpressionStatement	"r = optimize_node_left ( qn -> target , & nopt , env )"	4777:6:107728:107774	3458752	4	True				
ANR	3460228	AssignmentExpression	"r = optimize_node_left ( qn -> target , & nopt , env )"		3458752	0		=			
ANR	3460229	Identifier	r		3458752	0					
ANR	3460230	CallExpression	"optimize_node_left ( qn -> target , & nopt , env )"		3458752	1					
ANR	3460231	Callee	optimize_node_left		3458752	0					
ANR	3460232	Identifier	optimize_node_left		3458752	0					
ANR	3460233	ArgumentList	qn -> target		3458752	1					
ANR	3460234	Argument	qn -> target		3458752	0					
ANR	3460235	PtrMemberAccess	qn -> target		3458752	0					
ANR	3460236	Identifier	qn		3458752	0					
ANR	3460237	Identifier	target		3458752	1					
ANR	3460238	Argument	& nopt		3458752	1					
ANR	3460239	UnaryOperationExpression	& nopt		3458752	0					
ANR	3460240	UnaryOperator	&		3458752	0					
ANR	3460241	Identifier	nopt		3458752	1					
ANR	3460242	Argument	env		3458752	2					
ANR	3460243	Identifier	env		3458752	0					
ANR	3460244	IfStatement	if ( r )		3458752	5					
ANR	3460245	Condition	r	4778:10:107786:107786	3458752	0	True				
ANR	3460246	Identifier	r		3458752	0					
ANR	3460247	BreakStatement	break ;	4778:13:107789:107794	3458752	1	True				
ANR	3460248	IfStatement	if ( qn -> lower == 0 && IS_REPEAT_INFINITE ( qn -> upper ) )		3458752	6					
ANR	3460249	Condition	qn -> lower == 0 && IS_REPEAT_INFINITE ( qn -> upper )	4780:10:107807:107853	3458752	0	True				
ANR	3460250	AndExpression	qn -> lower == 0 && IS_REPEAT_INFINITE ( qn -> upper )		3458752	0		&&			
ANR	3460251	EqualityExpression	qn -> lower == 0		3458752	0		==			
ANR	3460252	PtrMemberAccess	qn -> lower		3458752	0					
ANR	3460253	Identifier	qn		3458752	0					
ANR	3460254	Identifier	lower		3458752	1					
ANR	3460255	PrimaryExpression	0		3458752	1					
ANR	3460256	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3458752	1					
ANR	3460257	Callee	IS_REPEAT_INFINITE		3458752	0					
ANR	3460258	Identifier	IS_REPEAT_INFINITE		3458752	0					
ANR	3460259	ArgumentList	qn -> upper		3458752	1					
ANR	3460260	Argument	qn -> upper		3458752	0					
ANR	3460261	PtrMemberAccess	qn -> upper		3458752	0					
ANR	3460262	Identifier	qn		3458752	0					
ANR	3460263	Identifier	upper		3458752	1					
ANR	3460264	CompoundStatement		242:59:5732:5732	3458752	1					
ANR	3460265	IfStatement	if ( env -> mmd . max == 0 && NTYPE ( qn -> target ) == NT_CANY && qn -> greedy )		3458752	0					
ANR	3460266	Condition	env -> mmd . max == 0 && NTYPE ( qn -> target ) == NT_CANY && qn -> greedy	4781:5:107863:107930	3458752	0	True				
ANR	3460267	AndExpression	env -> mmd . max == 0 && NTYPE ( qn -> target ) == NT_CANY && qn -> greedy		3458752	0		&&			
ANR	3460268	EqualityExpression	env -> mmd . max == 0		3458752	0		==			
ANR	3460269	MemberAccess	env -> mmd . max		3458752	0					
ANR	3460270	PtrMemberAccess	env -> mmd		3458752	0					
ANR	3460271	Identifier	env		3458752	0					
ANR	3460272	Identifier	mmd		3458752	1					
ANR	3460273	Identifier	max		3458752	1					
ANR	3460274	PrimaryExpression	0		3458752	1					
ANR	3460275	AndExpression	NTYPE ( qn -> target ) == NT_CANY && qn -> greedy		3458752	1		&&			
ANR	3460276	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		3458752	0		==			
ANR	3460277	CallExpression	NTYPE ( qn -> target )		3458752	0					
ANR	3460278	Callee	NTYPE		3458752	0					
ANR	3460279	Identifier	NTYPE		3458752	0					
ANR	3460280	ArgumentList	qn -> target		3458752	1					
ANR	3460281	Argument	qn -> target		3458752	0					
ANR	3460282	PtrMemberAccess	qn -> target		3458752	0					
ANR	3460283	Identifier	qn		3458752	0					
ANR	3460284	Identifier	target		3458752	1					
ANR	3460285	Identifier	NT_CANY		3458752	1					
ANR	3460286	PtrMemberAccess	qn -> greedy		3458752	1					
ANR	3460287	Identifier	qn		3458752	0					
ANR	3460288	Identifier	greedy		3458752	1					
ANR	3460289	CompoundStatement		244:49:5809:5809	3458752	1					
ANR	3460290	IfStatement	if ( IS_MULTILINE ( env -> options ) )		3458752	0					
ANR	3460291	Condition	IS_MULTILINE ( env -> options )	4783:7:107942:107967	3458752	0	True				
ANR	3460292	CallExpression	IS_MULTILINE ( env -> options )		3458752	0					
ANR	3460293	Callee	IS_MULTILINE		3458752	0					
ANR	3460294	Identifier	IS_MULTILINE		3458752	0					
ANR	3460295	ArgumentList	env -> options		3458752	1					
ANR	3460296	Argument	env -> options		3458752	0					
ANR	3460297	PtrMemberAccess	env -> options		3458752	0					
ANR	3460298	Identifier	env		3458752	0					
ANR	3460299	Identifier	options		3458752	1					
ANR	3460300	ExpressionStatement	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_ML )"	4784:5:107975:108026	3458752	1	True				
ANR	3460301	CallExpression	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_ML )"		3458752	0					
ANR	3460302	Callee	add_opt_anc_info		3458752	0					
ANR	3460303	Identifier	add_opt_anc_info		3458752	0					
ANR	3460304	ArgumentList	& opt -> anc		3458752	1					
ANR	3460305	Argument	& opt -> anc		3458752	0					
ANR	3460306	UnaryOperationExpression	& opt -> anc		3458752	0					
ANR	3460307	UnaryOperator	&		3458752	0					
ANR	3460308	PtrMemberAccess	opt -> anc		3458752	1					
ANR	3460309	Identifier	opt		3458752	0					
ANR	3460310	Identifier	anc		3458752	1					
ANR	3460311	Argument	ANCHOR_ANYCHAR_STAR_ML		3458752	1					
ANR	3460312	Identifier	ANCHOR_ANYCHAR_STAR_ML		3458752	0					
ANR	3460313	ElseStatement	else		3458752	0					
ANR	3460314	ExpressionStatement	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR )"	4786:5:108041:108089	3458752	0	True				
ANR	3460315	CallExpression	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR )"		3458752	0					
ANR	3460316	Callee	add_opt_anc_info		3458752	0					
ANR	3460317	Identifier	add_opt_anc_info		3458752	0					
ANR	3460318	ArgumentList	& opt -> anc		3458752	1					
ANR	3460319	Argument	& opt -> anc		3458752	0					
ANR	3460320	UnaryOperationExpression	& opt -> anc		3458752	0					
ANR	3460321	UnaryOperator	&		3458752	0					
ANR	3460322	PtrMemberAccess	opt -> anc		3458752	1					
ANR	3460323	Identifier	opt		3458752	0					
ANR	3460324	Identifier	anc		3458752	1					
ANR	3460325	Argument	ANCHOR_ANYCHAR_STAR		3458752	1					
ANR	3460326	Identifier	ANCHOR_ANYCHAR_STAR		3458752	0					
ANR	3460327	ElseStatement	else		3458752	0					
ANR	3460328	CompoundStatement		251:11:5989:5989	3458752	0					
ANR	3460329	IfStatement	if ( qn -> lower > 0 )		3458752	0					
ANR	3460330	Condition	qn -> lower > 0	4790:5:108120:108132	3458752	0	True				
ANR	3460331	RelationalExpression	qn -> lower > 0		3458752	0		>			
ANR	3460332	PtrMemberAccess	qn -> lower		3458752	0					
ANR	3460333	Identifier	qn		3458752	0					
ANR	3460334	Identifier	lower		3458752	1					
ANR	3460335	PrimaryExpression	0		3458752	1					
ANR	3460336	CompoundStatement		252:20:6011:6011	3458752	1					
ANR	3460337	ExpressionStatement	"copy_node_opt_info ( opt , & nopt )"	4791:3:108140:108170	3458752	0	True				
ANR	3460338	CallExpression	"copy_node_opt_info ( opt , & nopt )"		3458752	0					
ANR	3460339	Callee	copy_node_opt_info		3458752	0					
ANR	3460340	Identifier	copy_node_opt_info		3458752	0					
ANR	3460341	ArgumentList	opt		3458752	1					
ANR	3460342	Argument	opt		3458752	0					
ANR	3460343	Identifier	opt		3458752	0					
ANR	3460344	Argument	& nopt		3458752	1					
ANR	3460345	UnaryOperationExpression	& nopt		3458752	0					
ANR	3460346	UnaryOperator	&		3458752	0					
ANR	3460347	Identifier	nopt		3458752	1					
ANR	3460348	IfStatement	if ( nopt . exb . len > 0 )		3458752	1					
ANR	3460349	Condition	nopt . exb . len > 0	4792:7:108179:108194	3458752	0	True				
ANR	3460350	RelationalExpression	nopt . exb . len > 0		3458752	0		>			
ANR	3460351	MemberAccess	nopt . exb . len		3458752	0					
ANR	3460352	MemberAccess	nopt . exb		3458752	0					
ANR	3460353	Identifier	nopt		3458752	0					
ANR	3460354	Identifier	exb		3458752	1					
ANR	3460355	Identifier	len		3458752	1					
ANR	3460356	PrimaryExpression	0		3458752	1					
ANR	3460357	CompoundStatement		254:25:6073:6073	3458752	1					
ANR	3460358	IfStatement	if ( nopt . exb . reach_end )		3458752	0					
ANR	3460359	Condition	nopt . exb . reach_end	4793:9:108208:108225	3458752	0	True				
ANR	3460360	MemberAccess	nopt . exb . reach_end		3458752	0					
ANR	3460361	MemberAccess	nopt . exb		3458752	0					
ANR	3460362	Identifier	nopt		3458752	0					
ANR	3460363	Identifier	exb		3458752	1					
ANR	3460364	Identifier	reach_end		3458752	1					
ANR	3460365	CompoundStatement		255:29:6104:6104	3458752	1					
ANR	3460366	ForStatement	for ( i = 2 ; i <= qn -> lower && ! is_full_opt_exact_info ( & opt -> exb ) ; i ++ )		3458752	0					
ANR	3460367	ForInit	i = 2 ;	4794:12:108242:108247	3458752	0	True				
ANR	3460368	AssignmentExpression	i = 2		3458752	0		=			
ANR	3460369	Identifier	i		3458752	0					
ANR	3460370	PrimaryExpression	2		3458752	1					
ANR	3460371	Condition	i <= qn -> lower && ! is_full_opt_exact_info ( & opt -> exb )	4794:19:108249:108313	3458752	1	True				
ANR	3460372	AndExpression	i <= qn -> lower && ! is_full_opt_exact_info ( & opt -> exb )		3458752	0		&&			
ANR	3460373	RelationalExpression	i <= qn -> lower		3458752	0		<=			
ANR	3460374	Identifier	i		3458752	0					
ANR	3460375	PtrMemberAccess	qn -> lower		3458752	1					
ANR	3460376	Identifier	qn		3458752	0					
ANR	3460377	Identifier	lower		3458752	1					
ANR	3460378	UnaryOperationExpression	! is_full_opt_exact_info ( & opt -> exb )		3458752	1					
ANR	3460379	UnaryOperator	!		3458752	0					
ANR	3460380	CallExpression	is_full_opt_exact_info ( & opt -> exb )		3458752	1					
ANR	3460381	Callee	is_full_opt_exact_info		3458752	0					
ANR	3460382	Identifier	is_full_opt_exact_info		3458752	0					
ANR	3460383	ArgumentList	& opt -> exb		3458752	1					
ANR	3460384	Argument	& opt -> exb		3458752	0					
ANR	3460385	UnaryOperationExpression	& opt -> exb		3458752	0					
ANR	3460386	UnaryOperator	&		3458752	0					
ANR	3460387	PtrMemberAccess	opt -> exb		3458752	1					
ANR	3460388	Identifier	opt		3458752	0					
ANR	3460389	Identifier	exb		3458752	1					
ANR	3460390	PostIncDecOperationExpression	i ++	4795:49:108316:108318	3458752	2	True				
ANR	3460391	Identifier	i		3458752	0					
ANR	3460392	IncDec	++		3458752	1					
ANR	3460393	CompoundStatement		257:54:6197:6197	3458752	3					
ANR	3460394	ExpressionStatement	"concat_opt_exact_info ( & opt -> exb , & nopt . exb , env -> enc )"	4796:2:108325:108378	3458752	0	True				
ANR	3460395	CallExpression	"concat_opt_exact_info ( & opt -> exb , & nopt . exb , env -> enc )"		3458752	0					
ANR	3460396	Callee	concat_opt_exact_info		3458752	0					
ANR	3460397	Identifier	concat_opt_exact_info		3458752	0					
ANR	3460398	ArgumentList	& opt -> exb		3458752	1					
ANR	3460399	Argument	& opt -> exb		3458752	0					
ANR	3460400	UnaryOperationExpression	& opt -> exb		3458752	0					
ANR	3460401	UnaryOperator	&		3458752	0					
ANR	3460402	PtrMemberAccess	opt -> exb		3458752	1					
ANR	3460403	Identifier	opt		3458752	0					
ANR	3460404	Identifier	exb		3458752	1					
ANR	3460405	Argument	& nopt . exb		3458752	1					
ANR	3460406	UnaryOperationExpression	& nopt . exb		3458752	0					
ANR	3460407	UnaryOperator	&		3458752	0					
ANR	3460408	MemberAccess	nopt . exb		3458752	1					
ANR	3460409	Identifier	nopt		3458752	0					
ANR	3460410	Identifier	exb		3458752	1					
ANR	3460411	Argument	env -> enc		3458752	2					
ANR	3460412	PtrMemberAccess	env -> enc		3458752	0					
ANR	3460413	Identifier	env		3458752	0					
ANR	3460414	Identifier	enc		3458752	1					
ANR	3460415	IfStatement	if ( i < qn -> lower )		3458752	1					
ANR	3460416	Condition	i < qn -> lower	4798:11:108400:108412	3458752	0	True				
ANR	3460417	RelationalExpression	i < qn -> lower		3458752	0		<			
ANR	3460418	Identifier	i		3458752	0					
ANR	3460419	PtrMemberAccess	qn -> lower		3458752	1					
ANR	3460420	Identifier	qn		3458752	0					
ANR	3460421	Identifier	lower		3458752	1					
ANR	3460422	CompoundStatement		260:26:6291:6291	3458752	1					
ANR	3460423	ExpressionStatement	opt -> exb . reach_end = 0	4799:2:108419:108441	3458752	0	True				
ANR	3460424	AssignmentExpression	opt -> exb . reach_end = 0		3458752	0		=			
ANR	3460425	MemberAccess	opt -> exb . reach_end		3458752	0					
ANR	3460426	PtrMemberAccess	opt -> exb		3458752	0					
ANR	3460427	Identifier	opt		3458752	0					
ANR	3460428	Identifier	exb		3458752	1					
ANR	3460429	Identifier	reach_end		3458752	1					
ANR	3460430	PrimaryExpression	0		3458752	1					
ANR	3460431	IfStatement	if ( qn -> lower != qn -> upper )		3458752	2					
ANR	3460432	Condition	qn -> lower != qn -> upper	4804:7:108472:108493	3458752	0	True				
ANR	3460433	EqualityExpression	qn -> lower != qn -> upper		3458752	0		!=			
ANR	3460434	PtrMemberAccess	qn -> lower		3458752	0					
ANR	3460435	Identifier	qn		3458752	0					
ANR	3460436	Identifier	lower		3458752	1					
ANR	3460437	PtrMemberAccess	qn -> upper		3458752	1					
ANR	3460438	Identifier	qn		3458752	0					
ANR	3460439	Identifier	upper		3458752	1					
ANR	3460440	CompoundStatement		266:31:6372:6372	3458752	1					
ANR	3460441	ExpressionStatement	opt -> exb . reach_end = 0	4805:5:108503:108525	3458752	0	True				
ANR	3460442	AssignmentExpression	opt -> exb . reach_end = 0		3458752	0		=			
ANR	3460443	MemberAccess	opt -> exb . reach_end		3458752	0					
ANR	3460444	PtrMemberAccess	opt -> exb		3458752	0					
ANR	3460445	Identifier	opt		3458752	0					
ANR	3460446	Identifier	exb		3458752	1					
ANR	3460447	Identifier	reach_end		3458752	1					
ANR	3460448	PrimaryExpression	0		3458752	1					
ANR	3460449	ExpressionStatement	opt -> exm . reach_end = 0	4806:5:108532:108554	3458752	1	True				
ANR	3460450	AssignmentExpression	opt -> exm . reach_end = 0		3458752	0		=			
ANR	3460451	MemberAccess	opt -> exm . reach_end		3458752	0					
ANR	3460452	PtrMemberAccess	opt -> exm		3458752	0					
ANR	3460453	Identifier	opt		3458752	0					
ANR	3460454	Identifier	exm		3458752	1					
ANR	3460455	Identifier	reach_end		3458752	1					
ANR	3460456	PrimaryExpression	0		3458752	1					
ANR	3460457	IfStatement	if ( qn -> lower > 1 )		3458752	3					
ANR	3460458	Condition	qn -> lower > 1	4808:7:108568:108580	3458752	0	True				
ANR	3460459	RelationalExpression	qn -> lower > 1		3458752	0		>			
ANR	3460460	PtrMemberAccess	qn -> lower		3458752	0					
ANR	3460461	Identifier	qn		3458752	0					
ANR	3460462	Identifier	lower		3458752	1					
ANR	3460463	PrimaryExpression	1		3458752	1					
ANR	3460464	ExpressionStatement	opt -> exm . reach_end = 0	4809:5:108588:108610	3458752	1	True				
ANR	3460465	AssignmentExpression	opt -> exm . reach_end = 0		3458752	0		=			
ANR	3460466	MemberAccess	opt -> exm . reach_end		3458752	0					
ANR	3460467	PtrMemberAccess	opt -> exm		3458752	0					
ANR	3460468	Identifier	opt		3458752	0					
ANR	3460469	Identifier	exm		3458752	1					
ANR	3460470	Identifier	reach_end		3458752	1					
ANR	3460471	PrimaryExpression	0		3458752	1					
ANR	3460472	ExpressionStatement	"min = distance_multiply ( nopt . len . min , qn -> lower )"	4813:6:108630:108678	3458752	7	True				
ANR	3460473	AssignmentExpression	"min = distance_multiply ( nopt . len . min , qn -> lower )"		3458752	0		=			
ANR	3460474	Identifier	min		3458752	0					
ANR	3460475	CallExpression	"distance_multiply ( nopt . len . min , qn -> lower )"		3458752	1					
ANR	3460476	Callee	distance_multiply		3458752	0					
ANR	3460477	Identifier	distance_multiply		3458752	0					
ANR	3460478	ArgumentList	nopt . len . min		3458752	1					
ANR	3460479	Argument	nopt . len . min		3458752	0					
ANR	3460480	MemberAccess	nopt . len . min		3458752	0					
ANR	3460481	MemberAccess	nopt . len		3458752	0					
ANR	3460482	Identifier	nopt		3458752	0					
ANR	3460483	Identifier	len		3458752	1					
ANR	3460484	Identifier	min		3458752	1					
ANR	3460485	Argument	qn -> lower		3458752	1					
ANR	3460486	PtrMemberAccess	qn -> lower		3458752	0					
ANR	3460487	Identifier	qn		3458752	0					
ANR	3460488	Identifier	lower		3458752	1					
ANR	3460489	IfStatement	if ( IS_REPEAT_INFINITE ( qn -> upper ) )		3458752	8					
ANR	3460490	Condition	IS_REPEAT_INFINITE ( qn -> upper )	4814:10:108690:108718	3458752	0	True				
ANR	3460491	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3458752	0					
ANR	3460492	Callee	IS_REPEAT_INFINITE		3458752	0					
ANR	3460493	Identifier	IS_REPEAT_INFINITE		3458752	0					
ANR	3460494	ArgumentList	qn -> upper		3458752	1					
ANR	3460495	Argument	qn -> upper		3458752	0					
ANR	3460496	PtrMemberAccess	qn -> upper		3458752	0					
ANR	3460497	Identifier	qn		3458752	0					
ANR	3460498	Identifier	upper		3458752	1					
ANR	3460499	ExpressionStatement	max = ( nopt . len . max > 0 ? ONIG_INFINITE_DISTANCE : 0 )	4815:1:108722:108775	3458752	1	True				
ANR	3460500	AssignmentExpression	max = ( nopt . len . max > 0 ? ONIG_INFINITE_DISTANCE : 0 )		3458752	0		=			
ANR	3460501	Identifier	max		3458752	0					
ANR	3460502	ConditionalExpression	nopt . len . max > 0 ? ONIG_INFINITE_DISTANCE : 0		3458752	1					
ANR	3460503	Condition	nopt . len . max > 0		3458752	0					
ANR	3460504	RelationalExpression	nopt . len . max > 0		3458752	0		>			
ANR	3460505	MemberAccess	nopt . len . max		3458752	0					
ANR	3460506	MemberAccess	nopt . len		3458752	0					
ANR	3460507	Identifier	nopt		3458752	0					
ANR	3460508	Identifier	len		3458752	1					
ANR	3460509	Identifier	max		3458752	1					
ANR	3460510	PrimaryExpression	0		3458752	1					
ANR	3460511	Identifier	ONIG_INFINITE_DISTANCE		3458752	1					
ANR	3460512	PrimaryExpression	0		3458752	2					
ANR	3460513	ElseStatement	else		3458752	0					
ANR	3460514	ExpressionStatement	"max = distance_multiply ( nopt . len . max , qn -> upper )"	4817:1:108789:108837	3458752	0	True				
ANR	3460515	AssignmentExpression	"max = distance_multiply ( nopt . len . max , qn -> upper )"		3458752	0		=			
ANR	3460516	Identifier	max		3458752	0					
ANR	3460517	CallExpression	"distance_multiply ( nopt . len . max , qn -> upper )"		3458752	1					
ANR	3460518	Callee	distance_multiply		3458752	0					
ANR	3460519	Identifier	distance_multiply		3458752	0					
ANR	3460520	ArgumentList	nopt . len . max		3458752	1					
ANR	3460521	Argument	nopt . len . max		3458752	0					
ANR	3460522	MemberAccess	nopt . len . max		3458752	0					
ANR	3460523	MemberAccess	nopt . len		3458752	0					
ANR	3460524	Identifier	nopt		3458752	0					
ANR	3460525	Identifier	len		3458752	1					
ANR	3460526	Identifier	max		3458752	1					
ANR	3460527	Argument	qn -> upper		3458752	1					
ANR	3460528	PtrMemberAccess	qn -> upper		3458752	0					
ANR	3460529	Identifier	qn		3458752	0					
ANR	3460530	Identifier	upper		3458752	1					
ANR	3460531	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4819:6:108846:108874	3458752	9	True				
ANR	3460532	CallExpression	"set_mml ( & opt -> len , min , max )"		3458752	0					
ANR	3460533	Callee	set_mml		3458752	0					
ANR	3460534	Identifier	set_mml		3458752	0					
ANR	3460535	ArgumentList	& opt -> len		3458752	1					
ANR	3460536	Argument	& opt -> len		3458752	0					
ANR	3460537	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3460538	UnaryOperator	&		3458752	0					
ANR	3460539	PtrMemberAccess	opt -> len		3458752	1					
ANR	3460540	Identifier	opt		3458752	0					
ANR	3460541	Identifier	len		3458752	1					
ANR	3460542	Argument	min		3458752	1					
ANR	3460543	Identifier	min		3458752	0					
ANR	3460544	Argument	max		3458752	2					
ANR	3460545	Identifier	max		3458752	0					
ANR	3460546	BreakStatement	break ;	4821:4:108886:108891	3458752	29	True				
ANR	3460547	Label	case NT_ENCLOSE :	4823:2:108896:108911	3458752	30	True				
ANR	3460548	Identifier	NT_ENCLOSE		3458752	0					
ANR	3460549	CompoundStatement		287:6:6801:6833	3458752	31					
ANR	3460550	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	4825:6:108925:108957	3458752	0	True				
ANR	3460551	IdentifierDecl	* en = NENCLOSE ( node )		3458752	0					
ANR	3460552	IdentifierDeclType	EncloseNode *		3458752	0					
ANR	3460553	Identifier	en		3458752	1					
ANR	3460554	AssignmentExpression	* en = NENCLOSE ( node )		3458752	2		=			
ANR	3460555	Identifier	en		3458752	0					
ANR	3460556	CallExpression	NENCLOSE ( node )		3458752	1					
ANR	3460557	Callee	NENCLOSE		3458752	0					
ANR	3460558	Identifier	NENCLOSE		3458752	0					
ANR	3460559	ArgumentList	node		3458752	1					
ANR	3460560	Argument	node		3458752	0					
ANR	3460561	Identifier	node		3458752	0					
ANR	3460562	SwitchStatement	switch ( en -> type )		3458752	1					
ANR	3460563	Condition	en -> type	4827:14:108974:108981	3458752	0	True				
ANR	3460564	PtrMemberAccess	en -> type		3458752	0					
ANR	3460565	Identifier	en		3458752	0					
ANR	3460566	Identifier	type		3458752	1					
ANR	3460567	CompoundStatement		289:24:6860:6860	3458752	1					
ANR	3460568	Label	case ENCLOSE_OPTION :	4828:6:108992:109011	3458752	0	True				
ANR	3460569	Identifier	ENCLOSE_OPTION		3458752	0					
ANR	3460570	CompoundStatement		292:3:6895:6929	3458752	1					
ANR	3460571	IdentifierDeclStatement	OnigOptionType save = env -> options ;	4830:3:109019:109053	3458752	0	True				
ANR	3460572	IdentifierDecl	save = env -> options		3458752	0					
ANR	3460573	IdentifierDeclType	OnigOptionType		3458752	0					
ANR	3460574	Identifier	save		3458752	1					
ANR	3460575	AssignmentExpression	save = env -> options		3458752	2		=			
ANR	3460576	Identifier	save		3458752	0					
ANR	3460577	PtrMemberAccess	env -> options		3458752	1					
ANR	3460578	Identifier	env		3458752	0					
ANR	3460579	Identifier	options		3458752	1					
ANR	3460580	ExpressionStatement	env -> options = en -> option	4832:3:109059:109084	3458752	1	True				
ANR	3460581	AssignmentExpression	env -> options = en -> option		3458752	0		=			
ANR	3460582	PtrMemberAccess	env -> options		3458752	0					
ANR	3460583	Identifier	env		3458752	0					
ANR	3460584	Identifier	options		3458752	1					
ANR	3460585	PtrMemberAccess	en -> option		3458752	1					
ANR	3460586	Identifier	en		3458752	0					
ANR	3460587	Identifier	option		3458752	1					
ANR	3460588	ExpressionStatement	"r = optimize_node_left ( en -> target , opt , env )"	4833:3:109089:109133	3458752	2	True				
ANR	3460589	AssignmentExpression	"r = optimize_node_left ( en -> target , opt , env )"		3458752	0		=			
ANR	3460590	Identifier	r		3458752	0					
ANR	3460591	CallExpression	"optimize_node_left ( en -> target , opt , env )"		3458752	1					
ANR	3460592	Callee	optimize_node_left		3458752	0					
ANR	3460593	Identifier	optimize_node_left		3458752	0					
ANR	3460594	ArgumentList	en -> target		3458752	1					
ANR	3460595	Argument	en -> target		3458752	0					
ANR	3460596	PtrMemberAccess	en -> target		3458752	0					
ANR	3460597	Identifier	en		3458752	0					
ANR	3460598	Identifier	target		3458752	1					
ANR	3460599	Argument	opt		3458752	1					
ANR	3460600	Identifier	opt		3458752	0					
ANR	3460601	Argument	env		3458752	2					
ANR	3460602	Identifier	env		3458752	0					
ANR	3460603	ExpressionStatement	env -> options = save	4834:3:109138:109157	3458752	3	True				
ANR	3460604	AssignmentExpression	env -> options = save		3458752	0		=			
ANR	3460605	PtrMemberAccess	env -> options		3458752	0					
ANR	3460606	Identifier	env		3458752	0					
ANR	3460607	Identifier	options		3458752	1					
ANR	3460608	Identifier	save		3458752	1					
ANR	3460609	BreakStatement	break ;	4836:1:109163:109168	3458752	2	True				
ANR	3460610	Label	case ENCLOSE_MEMORY :	4838:6:109177:109196	3458752	3	True				
ANR	3460611	Identifier	ENCLOSE_MEMORY		3458752	0					
ANR	3460612	ExpressionStatement	en -> opt_count ++	4840:1:109222:109237	3458752	4	True				
ANR	3460613	PostIncDecOperationExpression	en -> opt_count ++		3458752	0					
ANR	3460614	PtrMemberAccess	en -> opt_count		3458752	0					
ANR	3460615	Identifier	en		3458752	0					
ANR	3460616	Identifier	opt_count		3458752	1					
ANR	3460617	IncDec	++		3458752	1					
ANR	3460618	IfStatement	if ( en -> opt_count > MAX_NODE_OPT_INFO_REF_COUNT )		3458752	5					
ANR	3460619	Condition	en -> opt_count > MAX_NODE_OPT_INFO_REF_COUNT	4841:5:109244:109286	3458752	0	True				
ANR	3460620	RelationalExpression	en -> opt_count > MAX_NODE_OPT_INFO_REF_COUNT		3458752	0		>			
ANR	3460621	PtrMemberAccess	en -> opt_count		3458752	0					
ANR	3460622	Identifier	en		3458752	0					
ANR	3460623	Identifier	opt_count		3458752	1					
ANR	3460624	Identifier	MAX_NODE_OPT_INFO_REF_COUNT		3458752	1					
ANR	3460625	CompoundStatement		304:3:7170:7191	3458752	1					
ANR	3460626	IdentifierDeclStatement	"OnigDistance min , max ;"	4842:3:109294:109315	3458752	0	True				
ANR	3460627	IdentifierDecl	min		3458752	0					
ANR	3460628	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3460629	Identifier	min		3458752	1					
ANR	3460630	IdentifierDecl	max		3458752	1					
ANR	3460631	IdentifierDeclType	OnigDistance		3458752	0					
ANR	3460632	Identifier	max		3458752	1					
ANR	3460633	ExpressionStatement	min = 0	4844:3:109321:109328	3458752	1	True				
ANR	3460634	AssignmentExpression	min = 0		3458752	0		=			
ANR	3460635	Identifier	min		3458752	0					
ANR	3460636	PrimaryExpression	0		3458752	1					
ANR	3460637	ExpressionStatement	max = ONIG_INFINITE_DISTANCE	4845:3:109333:109361	3458752	2	True				
ANR	3460638	AssignmentExpression	max = ONIG_INFINITE_DISTANCE		3458752	0		=			
ANR	3460639	Identifier	max		3458752	0					
ANR	3460640	Identifier	ONIG_INFINITE_DISTANCE		3458752	1					
ANR	3460641	IfStatement	if ( IS_ENCLOSE_MIN_FIXED ( en ) )		3458752	3					
ANR	3460642	Condition	IS_ENCLOSE_MIN_FIXED ( en )	4846:7:109370:109393	3458752	0	True				
ANR	3460643	CallExpression	IS_ENCLOSE_MIN_FIXED ( en )		3458752	0					
ANR	3460644	Callee	IS_ENCLOSE_MIN_FIXED		3458752	0					
ANR	3460645	Identifier	IS_ENCLOSE_MIN_FIXED		3458752	0					
ANR	3460646	ArgumentList	en		3458752	1					
ANR	3460647	Argument	en		3458752	0					
ANR	3460648	Identifier	en		3458752	0					
ANR	3460649	ExpressionStatement	min = en -> min_len	4846:33:109396:109413	3458752	1	True				
ANR	3460650	AssignmentExpression	min = en -> min_len		3458752	0		=			
ANR	3460651	Identifier	min		3458752	0					
ANR	3460652	PtrMemberAccess	en -> min_len		3458752	1					
ANR	3460653	Identifier	en		3458752	0					
ANR	3460654	Identifier	min_len		3458752	1					
ANR	3460655	IfStatement	if ( IS_ENCLOSE_MAX_FIXED ( en ) )		3458752	4					
ANR	3460656	Condition	IS_ENCLOSE_MAX_FIXED ( en )	4847:7:109422:109445	3458752	0	True				
ANR	3460657	CallExpression	IS_ENCLOSE_MAX_FIXED ( en )		3458752	0					
ANR	3460658	Callee	IS_ENCLOSE_MAX_FIXED		3458752	0					
ANR	3460659	Identifier	IS_ENCLOSE_MAX_FIXED		3458752	0					
ANR	3460660	ArgumentList	en		3458752	1					
ANR	3460661	Argument	en		3458752	0					
ANR	3460662	Identifier	en		3458752	0					
ANR	3460663	ExpressionStatement	max = en -> max_len	4847:33:109448:109465	3458752	1	True				
ANR	3460664	AssignmentExpression	max = en -> max_len		3458752	0		=			
ANR	3460665	Identifier	max		3458752	0					
ANR	3460666	PtrMemberAccess	en -> max_len		3458752	1					
ANR	3460667	Identifier	en		3458752	0					
ANR	3460668	Identifier	max_len		3458752	1					
ANR	3460669	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4848:3:109470:109498	3458752	5	True				
ANR	3460670	CallExpression	"set_mml ( & opt -> len , min , max )"		3458752	0					
ANR	3460671	Callee	set_mml		3458752	0					
ANR	3460672	Identifier	set_mml		3458752	0					
ANR	3460673	ArgumentList	& opt -> len		3458752	1					
ANR	3460674	Argument	& opt -> len		3458752	0					
ANR	3460675	UnaryOperationExpression	& opt -> len		3458752	0					
ANR	3460676	UnaryOperator	&		3458752	0					
ANR	3460677	PtrMemberAccess	opt -> len		3458752	1					
ANR	3460678	Identifier	opt		3458752	0					
ANR	3460679	Identifier	len		3458752	1					
ANR	3460680	Argument	min		3458752	1					
ANR	3460681	Identifier	min		3458752	0					
ANR	3460682	Argument	max		3458752	2					
ANR	3460683	Identifier	max		3458752	0					
ANR	3460684	ElseStatement	else		3458752	0					
ANR	3460685	CompoundStatement		314:1:7393:7393	3458752	0					
ANR	3460686	ExpressionStatement	"r = optimize_node_left ( en -> target , opt , env )"	4853:3:109522:109566	3458752	0	True				
ANR	3460687	AssignmentExpression	"r = optimize_node_left ( en -> target , opt , env )"		3458752	0		=			
ANR	3460688	Identifier	r		3458752	0					
ANR	3460689	CallExpression	"optimize_node_left ( en -> target , opt , env )"		3458752	1					
ANR	3460690	Callee	optimize_node_left		3458752	0					
ANR	3460691	Identifier	optimize_node_left		3458752	0					
ANR	3460692	ArgumentList	en -> target		3458752	1					
ANR	3460693	Argument	en -> target		3458752	0					
ANR	3460694	PtrMemberAccess	en -> target		3458752	0					
ANR	3460695	Identifier	en		3458752	0					
ANR	3460696	Identifier	target		3458752	1					
ANR	3460697	Argument	opt		3458752	1					
ANR	3460698	Identifier	opt		3458752	0					
ANR	3460699	Argument	env		3458752	2					
ANR	3460700	Identifier	env		3458752	0					
ANR	3460701	IfStatement	"if ( is_set_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK ) )"		3458752	1					
ANR	3460702	Condition	"is_set_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"	4855:7:109576:109631	3458752	0	True				
ANR	3460703	CallExpression	"is_set_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"		3458752	0					
ANR	3460704	Callee	is_set_opt_anc_info		3458752	0					
ANR	3460705	Identifier	is_set_opt_anc_info		3458752	0					
ANR	3460706	ArgumentList	& opt -> anc		3458752	1					
ANR	3460707	Argument	& opt -> anc		3458752	0					
ANR	3460708	UnaryOperationExpression	& opt -> anc		3458752	0					
ANR	3460709	UnaryOperator	&		3458752	0					
ANR	3460710	PtrMemberAccess	opt -> anc		3458752	1					
ANR	3460711	Identifier	opt		3458752	0					
ANR	3460712	Identifier	anc		3458752	1					
ANR	3460713	Argument	ANCHOR_ANYCHAR_STAR_MASK		3458752	1					
ANR	3460714	Identifier	ANCHOR_ANYCHAR_STAR_MASK		3458752	0					
ANR	3460715	CompoundStatement		317:65:7510:7510	3458752	1					
ANR	3460716	IfStatement	"if ( BIT_STATUS_AT ( env -> scan_env -> backrefed_mem , en -> regnum ) )"		3458752	0					
ANR	3460717	Condition	"BIT_STATUS_AT ( env -> scan_env -> backrefed_mem , en -> regnum )"	4856:9:109645:109699	3458752	0	True				
ANR	3460718	CallExpression	"BIT_STATUS_AT ( env -> scan_env -> backrefed_mem , en -> regnum )"		3458752	0					
ANR	3460719	Callee	BIT_STATUS_AT		3458752	0					
ANR	3460720	Identifier	BIT_STATUS_AT		3458752	0					
ANR	3460721	ArgumentList	env -> scan_env -> backrefed_mem		3458752	1					
ANR	3460722	Argument	env -> scan_env -> backrefed_mem		3458752	0					
ANR	3460723	PtrMemberAccess	env -> scan_env -> backrefed_mem		3458752	0					
ANR	3460724	PtrMemberAccess	env -> scan_env		3458752	0					
ANR	3460725	Identifier	env		3458752	0					
ANR	3460726	Identifier	scan_env		3458752	1					
ANR	3460727	Identifier	backrefed_mem		3458752	1					
ANR	3460728	Argument	en -> regnum		3458752	1					
ANR	3460729	PtrMemberAccess	en -> regnum		3458752	0					
ANR	3460730	Identifier	en		3458752	0					
ANR	3460731	Identifier	regnum		3458752	1					
ANR	3460732	ExpressionStatement	"remove_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"	4857:7:109709:109765	3458752	1	True				
ANR	3460733	CallExpression	"remove_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"		3458752	0					
ANR	3460734	Callee	remove_opt_anc_info		3458752	0					
ANR	3460735	Identifier	remove_opt_anc_info		3458752	0					
ANR	3460736	ArgumentList	& opt -> anc		3458752	1					
ANR	3460737	Argument	& opt -> anc		3458752	0					
ANR	3460738	UnaryOperationExpression	& opt -> anc		3458752	0					
ANR	3460739	UnaryOperator	&		3458752	0					
ANR	3460740	PtrMemberAccess	opt -> anc		3458752	1					
ANR	3460741	Identifier	opt		3458752	0					
ANR	3460742	Identifier	anc		3458752	1					
ANR	3460743	Argument	ANCHOR_ANYCHAR_STAR_MASK		3458752	1					
ANR	3460744	Identifier	ANCHOR_ANYCHAR_STAR_MASK		3458752	0					
ANR	3460745	BreakStatement	break ;	4860:1:109776:109781	3458752	6	True				
ANR	3460746	Label	case ENCLOSE_STOP_BACKTRACK :	4862:6:109790:109817	3458752	7	True				
ANR	3460747	Identifier	ENCLOSE_STOP_BACKTRACK		3458752	0					
ANR	3460748	ExpressionStatement	"r = optimize_node_left ( en -> target , opt , env )"	4863:1:109820:109864	3458752	8	True				
ANR	3460749	AssignmentExpression	"r = optimize_node_left ( en -> target , opt , env )"		3458752	0		=			
ANR	3460750	Identifier	r		3458752	0					
ANR	3460751	CallExpression	"optimize_node_left ( en -> target , opt , env )"		3458752	1					
ANR	3460752	Callee	optimize_node_left		3458752	0					
ANR	3460753	Identifier	optimize_node_left		3458752	0					
ANR	3460754	ArgumentList	en -> target		3458752	1					
ANR	3460755	Argument	en -> target		3458752	0					
ANR	3460756	PtrMemberAccess	en -> target		3458752	0					
ANR	3460757	Identifier	en		3458752	0					
ANR	3460758	Identifier	target		3458752	1					
ANR	3460759	Argument	opt		3458752	1					
ANR	3460760	Identifier	opt		3458752	0					
ANR	3460761	Argument	env		3458752	2					
ANR	3460762	Identifier	env		3458752	0					
ANR	3460763	BreakStatement	break ;	4864:1:109867:109872	3458752	9	True				
ANR	3460764	BreakStatement	break ;	4867:4:109892:109897	3458752	32	True				
ANR	3460765	Label	default :	4869:2:109902:109909	3458752	33	True				
ANR	3460766	Identifier	default		3458752	0					
ANR	3460767	ExpressionStatement	"fprintf ( stderr , ""optimize_node_left: undefined node type %d\\n"" , NTYPE ( node ) )"	4871:4:109933:110014	3458752	34	True				
ANR	3460768	CallExpression	"fprintf ( stderr , ""optimize_node_left: undefined node type %d\\n"" , NTYPE ( node ) )"		3458752	0					
ANR	3460769	Callee	fprintf		3458752	0					
ANR	3460770	Identifier	fprintf		3458752	0					
ANR	3460771	ArgumentList	stderr		3458752	1					
ANR	3460772	Argument	stderr		3458752	0					
ANR	3460773	Identifier	stderr		3458752	0					
ANR	3460774	Argument	"""optimize_node_left: undefined node type %d\\n"""		3458752	1					
ANR	3460775	PrimaryExpression	"""optimize_node_left: undefined node type %d\\n"""		3458752	0					
ANR	3460776	Argument	NTYPE ( node )		3458752	2					
ANR	3460777	CallExpression	NTYPE ( node )		3458752	0					
ANR	3460778	Callee	NTYPE		3458752	0					
ANR	3460779	Identifier	NTYPE		3458752	0					
ANR	3460780	ArgumentList	node		3458752	1					
ANR	3460781	Argument	node		3458752	0					
ANR	3460782	Identifier	node		3458752	0					
ANR	3460783	ExpressionStatement	r = ONIGERR_TYPE_BUG	4874:4:110027:110047	3458752	35	True				
ANR	3460784	AssignmentExpression	r = ONIGERR_TYPE_BUG		3458752	0		=			
ANR	3460785	Identifier	r		3458752	0					
ANR	3460786	Identifier	ONIGERR_TYPE_BUG		3458752	1					
ANR	3460787	BreakStatement	break ;	4875:4:110053:110058	3458752	36	True				
ANR	3460788	ReturnStatement	return r ;	4878:2:110067:110075	3458752	6	True				
ANR	3460789	Identifier	r		3458752	0					
ANR	3460790	ReturnType	static int		3458752	1					
ANR	3460791	Identifier	optimize_node_left		3458752	2					
ANR	3460792	ParameterList	"Node * node , NodeOptInfo * opt , OptEnv * env"		3458752	3					
ANR	3460793	Parameter	Node * node	4538:19:102080:102089	3458752	0	True				
ANR	3460794	ParameterType	Node *		3458752	0					
ANR	3460795	Identifier	node		3458752	1					
ANR	3460796	Parameter	NodeOptInfo * opt	4538:31:102092:102107	3458752	1	True				
ANR	3460797	ParameterType	NodeOptInfo *		3458752	0					
ANR	3460798	Identifier	opt		3458752	1					
ANR	3460799	Parameter	OptEnv * env	4538:49:102110:102120	3458752	2	True				
ANR	3460800	ParameterType	OptEnv *		3458752	0					
ANR	3460801	Identifier	env		3458752	1					
ANR	3460802	CFGEntryNode	ENTRY		3458752		True				
ANR	3460803	CFGExitNode	EXIT		3458752		True				
ANR	3460804	Symbol	* sn		3458752						
ANR	3460805	Symbol	* cc		3458752						
ANR	3460806	Symbol	* backs		3458752						
ANR	3460807	Symbol	cc -> mbuf		3458752						
ANR	3460808	Symbol	type		3458752						
ANR	3460809	Symbol	NQTFR		3458752						
ANR	3460810	Symbol	opt -> exm . reach_end		3458752						
ANR	3460811	Symbol	ONIG_INFINITE_DISTANCE		3458752						
ANR	3460812	Symbol	nopt . map . value		3458752						
ANR	3460813	Symbol	* br		3458752						
ANR	3460814	Symbol	en -> type		3458752						
ANR	3460815	Symbol	SCANENV_MEM_NODES		3458752						
ANR	3460816	Symbol	IS_REPEAT_INFINITE		3458752						
ANR	3460817	Symbol	* env -> scan_env		3458752						
ANR	3460818	Symbol	qn		3458752						
ANR	3460819	Symbol	opt -> expr . reach_end		3458752						
ANR	3460820	Symbol	NSTRING_IS_AMBIG		3458752						
ANR	3460821	Symbol	en -> regnum		3458752						
ANR	3460822	Symbol	NCDR		3458752						
ANR	3460823	Symbol	NSTR		3458752						
ANR	3460824	Symbol	* sn -> s		3458752						
ANR	3460825	Symbol	qn -> target		3458752						
ANR	3460826	Symbol	cc -> bs		3458752						
ANR	3460827	Symbol	env -> options		3458752						
ANR	3460828	Symbol	distance_multiply		3458752						
ANR	3460829	Symbol	opt -> exb . reach_end		3458752						
ANR	3460830	Symbol	node		3458752						
ANR	3460831	Symbol	BACKREFS_P		3458752						
ANR	3460832	Symbol	get_max_match_length		3458752						
ANR	3460833	Symbol	& nopt . len		3458752						
ANR	3460834	Symbol	is_raw		3458752						
ANR	3460835	Symbol	opt -> expr		3458752						
ANR	3460836	Symbol	& nopt . exm		3458752						
ANR	3460837	Symbol	IS_ENCLOSE_MIN_FIXED		3458752						
ANR	3460838	Symbol	* * env		3458752						
ANR	3460839	Symbol	NCTYPE ( node ) -> ctype		3458752						
ANR	3460840	Symbol	tmax		3458752						
ANR	3460841	Symbol	ONIGENC_MBC_MINLEN		3458752						
ANR	3460842	Symbol	save		3458752						
ANR	3460843	Symbol	env -> enc		3458752						
ANR	3460844	Symbol	NSTRING_IS_RAW		3458752						
ANR	3460845	Symbol	opt -> exb . ignore_case		3458752						
ANR	3460846	Symbol	nopt . map		3458752						
ANR	3460847	Symbol	* en		3458752						
ANR	3460848	Symbol	& max		3458752						
ANR	3460849	Symbol	br		3458752						
ANR	3460850	Symbol	qn -> lower		3458752						
ANR	3460851	Symbol	min		3458752						
ANR	3460852	Symbol	* * backs		3458752						
ANR	3460853	Symbol	onigenc_strlen		3458752						
ANR	3460854	Symbol	NBREF		3458752						
ANR	3460855	Symbol	NT_CANY		3458752						
ANR	3460856	Symbol	* NANCHOR		3458752						
ANR	3460857	Symbol	NST_RECURSION		3458752						
ANR	3460858	Symbol	NENCLOSE		3458752						
ANR	3460859	Symbol	NCALL ( node ) -> target		3458752						
ANR	3460860	Symbol	sn		3458752						
ANR	3460861	Symbol	env -> mmd		3458752						
ANR	3460862	Symbol	cc		3458752						
ANR	3460863	Symbol	& opt -> map		3458752						
ANR	3460864	Symbol	max		3458752						
ANR	3460865	Symbol	tmin		3458752						
ANR	3460866	Symbol	i		3458752						
ANR	3460867	Symbol	nopt . exb . reach_end		3458752						
ANR	3460868	Symbol	nopt . exm . len		3458752						
ANR	3460869	Symbol	* ( sn -> s )		3458752						
ANR	3460870	Symbol	n		3458752						
ANR	3460871	Symbol	& nopt . map		3458752						
ANR	3460872	Symbol	MAX_NODE_OPT_INFO_REF_COUNT		3458752						
ANR	3460873	Symbol	r		3458752						
ANR	3460874	Symbol	env -> scan_env -> backrefed_mem		3458752						
ANR	3460875	Symbol	NCTYPE ( node ) -> not		3458752						
ANR	3460876	Symbol	en -> target		3458752						
ANR	3460877	Symbol	env -> case_fold_flag		3458752						
ANR	3460878	Symbol	br -> state		3458752						
ANR	3460879	Symbol	z		3458752						
ANR	3460880	Symbol	is_full_opt_exact_info		3458752						
ANR	3460881	Symbol	ANCHOR_ANYCHAR_STAR		3458752						
ANR	3460882	Symbol	& min		3458752						
ANR	3460883	Symbol	nopt . len . min		3458752						
ANR	3460884	Symbol	BITSET_AT		3458752						
ANR	3460885	Symbol	NCAR		3458752						
ANR	3460886	Symbol	br -> back_num		3458752						
ANR	3460887	Symbol	IS_NCCLASS_NOT		3458752						
ANR	3460888	Symbol	nopt . exb		3458752						
ANR	3460889	Symbol	nopt . exm		3458752						
ANR	3460890	Symbol	nenv		3458752						
ANR	3460891	Symbol	nopt . len		3458752						
ANR	3460892	Symbol	NCCLASS		3458752						
ANR	3460893	Symbol	ANCHOR_ANYCHAR_STAR_MASK		3458752						
ANR	3460894	Symbol	& env -> mmd		3458752						
ANR	3460895	Symbol	* NCTYPE		3458752						
ANR	3460896	Symbol	nopt . len . max		3458752						
ANR	3460897	Symbol	sn -> s		3458752						
ANR	3460898	Symbol	ONIGENC_MBC_MAXLEN_DIST		3458752						
ANR	3460899	Symbol	* nodes		3458752						
ANR	3460900	Symbol	NCTYPE		3458752						
ANR	3460901	Symbol	NSTRING_IS_DONT_GET_OPT_INFO		3458752						
ANR	3460902	Symbol	SINGLE_BYTE_SIZE		3458752						
ANR	3460903	Symbol	BIT_STATUS_AT		3458752						
ANR	3460904	Symbol	* * i		3458752						
ANR	3460905	Symbol	en -> option		3458752						
ANR	3460906	Symbol	IS_ENCLOSE_MAX_FIXED		3458752						
ANR	3460907	Symbol	* env		3458752						
ANR	3460908	Symbol	NANCHOR ( node ) -> target		3458752						
ANR	3460909	Symbol	en		3458752						
ANR	3460910	Symbol	stderr		3458752						
ANR	3460911	Symbol	ONIGERR_TYPE_BUG		3458752						
ANR	3460912	Symbol	add_char_amb_opt_map_info		3458752						
ANR	3460913	Symbol	qn -> upper		3458752						
ANR	3460914	Symbol	en -> max_len		3458752						
ANR	3460915	Symbol	opt		3458752						
ANR	3460916	Symbol	is_set_opt_anc_info		3458752						
ANR	3460917	Symbol	nopt		3458752						
ANR	3460918	Symbol	nd		3458752						
ANR	3460919	Symbol	& opt -> exb		3458752						
ANR	3460920	Symbol	& nenv		3458752						
ANR	3460921	Symbol	get_min_match_length		3458752						
ANR	3460922	Symbol	IS_CALL_RECURSION		3458752						
ANR	3460923	Symbol	en -> opt_count		3458752						
ANR	3460924	Symbol	& opt -> len		3458752						
ANR	3460925	Symbol	opt -> exb . len		3458752						
ANR	3460926	Symbol	en -> min_len		3458752						
ANR	3460927	Symbol	* qn		3458752						
ANR	3460928	Symbol	qn -> greedy		3458752						
ANR	3460929	Symbol	IS_NOT_NULL		3458752						
ANR	3460930	Symbol	* * sn		3458752						
ANR	3460931	Symbol	& nopt . exb		3458752						
ANR	3460932	Symbol	NCALL		3458752						
ANR	3460933	Symbol	* NENCLOSE		3458752						
ANR	3460934	Symbol	& tmin		3458752						
ANR	3460935	Symbol	NENCLOSE ( NCALL ( node ) -> target ) -> option		3458752						
ANR	3460936	Symbol	NANCHOR ( node ) -> type		3458752						
ANR	3460937	Symbol	ONIGENC_IS_CODE_WORD		3458752						
ANR	3460938	Symbol	& opt -> expr		3458752						
ANR	3460939	Symbol	nopt . exb . len		3458752						
ANR	3460940	Symbol	sn -> end		3458752						
ANR	3460941	Symbol	env -> mmd . max		3458752						
ANR	3460942	Symbol	* opt		3458752						
ANR	3460943	Symbol	ANCHOR_ANYCHAR_STAR_ML		3458752						
ANR	3460944	Symbol	opt -> exm		3458752						
ANR	3460945	Symbol	env		3458752						
ANR	3460946	Symbol	& nopt		3458752						
ANR	3460947	Symbol	opt -> exb		3458752						
ANR	3460948	Symbol	nodes		3458752						
ANR	3460949	Symbol	* i		3458752						
ANR	3460950	Symbol	env -> scan_env		3458752						
ANR	3460951	Symbol	slen		3458752						
ANR	3460952	Symbol	optimize_node_left		3458752						
ANR	3460953	Symbol	NANCHOR		3458752						
ANR	3460954	Symbol	IS_MULTILINE		3458752						
ANR	3460955	Symbol	NTYPE		3458752						
ANR	3460956	Symbol	& tmax		3458752						
ANR	3460957	Symbol	& nenv . mmd		3458752						
ANR	3460958	Symbol	* NCALL		3458752						
ANR	3460959	Symbol	backs		3458752						
ANR	3460960	Symbol	& opt -> anc		3458752						
ANR	3460961	Function	set_optimize_exact_info	4881:0:110080:111235							
ANR	3460962	FunctionDef	"set_optimize_exact_info (regex_t * reg , OptExactInfo * e)"		3460961	0					
ANR	3460963	CompoundStatement		4883:0:110146:111235	3460961	0					
ANR	3460964	IdentifierDeclStatement	int r ;	4884:2:110150:110155	3460961	0	True				
ANR	3460965	IdentifierDecl	r		3460961	0					
ANR	3460966	IdentifierDeclType	int		3460961	0					
ANR	3460967	Identifier	r		3460961	1					
ANR	3460968	IfStatement	if ( e -> len == 0 )		3460961	1					
ANR	3460969	Condition	e -> len == 0	4886:6:110164:110174	3460961	0	True				
ANR	3460970	EqualityExpression	e -> len == 0		3460961	0		==			
ANR	3460971	PtrMemberAccess	e -> len		3460961	0					
ANR	3460972	Identifier	e		3460961	0					
ANR	3460973	Identifier	len		3460961	1					
ANR	3460974	PrimaryExpression	0		3460961	1					
ANR	3460975	ReturnStatement	return 0 ;	4886:19:110177:110185	3460961	1	True				
ANR	3460976	PrimaryExpression	0		3460961	0					
ANR	3460977	IfStatement	if ( e -> ignore_case )		3460961	2					
ANR	3460978	Condition	e -> ignore_case	4888:6:110194:110207	3460961	0	True				
ANR	3460979	PtrMemberAccess	e -> ignore_case		3460961	0					
ANR	3460980	Identifier	e		3460961	0					
ANR	3460981	Identifier	ignore_case		3460961	1					
ANR	3460982	CompoundStatement		6:22:63:63	3460961	1					
ANR	3460983	ExpressionStatement	reg -> exact = ( UChar * ) xmalloc ( e -> len )	4889:4:110216:110253	3460961	0	True				
ANR	3460984	AssignmentExpression	reg -> exact = ( UChar * ) xmalloc ( e -> len )		3460961	0		=			
ANR	3460985	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3460986	Identifier	reg		3460961	0					
ANR	3460987	Identifier	exact		3460961	1					
ANR	3460988	CastExpression	( UChar * ) xmalloc ( e -> len )		3460961	1					
ANR	3460989	CastTarget	UChar *		3460961	0					
ANR	3460990	CallExpression	xmalloc ( e -> len )		3460961	1					
ANR	3460991	Callee	xmalloc		3460961	0					
ANR	3460992	Identifier	xmalloc		3460961	0					
ANR	3460993	ArgumentList	e -> len		3460961	1					
ANR	3460994	Argument	e -> len		3460961	0					
ANR	3460995	PtrMemberAccess	e -> len		3460961	0					
ANR	3460996	Identifier	e		3460961	0					
ANR	3460997	Identifier	len		3460961	1					
ANR	3460998	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( reg -> exact )	4890:4:110259:110295	3460961	1	True				
ANR	3460999	CallExpression	CHECK_NULL_RETURN_MEMERR ( reg -> exact )		3460961	0					
ANR	3461000	Callee	CHECK_NULL_RETURN_MEMERR		3460961	0					
ANR	3461001	Identifier	CHECK_NULL_RETURN_MEMERR		3460961	0					
ANR	3461002	ArgumentList	reg -> exact		3460961	1					
ANR	3461003	Argument	reg -> exact		3460961	0					
ANR	3461004	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461005	Identifier	reg		3460961	0					
ANR	3461006	Identifier	exact		3460961	1					
ANR	3461007	ExpressionStatement	"xmemcpy ( reg -> exact , e -> s , e -> len )"	4891:4:110301:110334	3460961	2	True				
ANR	3461008	CallExpression	"xmemcpy ( reg -> exact , e -> s , e -> len )"		3460961	0					
ANR	3461009	Callee	xmemcpy		3460961	0					
ANR	3461010	Identifier	xmemcpy		3460961	0					
ANR	3461011	ArgumentList	reg -> exact		3460961	1					
ANR	3461012	Argument	reg -> exact		3460961	0					
ANR	3461013	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461014	Identifier	reg		3460961	0					
ANR	3461015	Identifier	exact		3460961	1					
ANR	3461016	Argument	e -> s		3460961	1					
ANR	3461017	PtrMemberAccess	e -> s		3460961	0					
ANR	3461018	Identifier	e		3460961	0					
ANR	3461019	Identifier	s		3460961	1					
ANR	3461020	Argument	e -> len		3460961	2					
ANR	3461021	PtrMemberAccess	e -> len		3460961	0					
ANR	3461022	Identifier	e		3460961	0					
ANR	3461023	Identifier	len		3460961	1					
ANR	3461024	ExpressionStatement	reg -> exact_end = reg -> exact + e -> len	4892:4:110340:110376	3460961	3	True				
ANR	3461025	AssignmentExpression	reg -> exact_end = reg -> exact + e -> len		3460961	0		=			
ANR	3461026	PtrMemberAccess	reg -> exact_end		3460961	0					
ANR	3461027	Identifier	reg		3460961	0					
ANR	3461028	Identifier	exact_end		3460961	1					
ANR	3461029	AdditiveExpression	reg -> exact + e -> len		3460961	1		+			
ANR	3461030	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461031	Identifier	reg		3460961	0					
ANR	3461032	Identifier	exact		3460961	1					
ANR	3461033	PtrMemberAccess	e -> len		3460961	1					
ANR	3461034	Identifier	e		3460961	0					
ANR	3461035	Identifier	len		3460961	1					
ANR	3461036	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_EXACT_IC	4893:4:110382:110420	3460961	4	True				
ANR	3461037	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_EXACT_IC		3460961	0		=			
ANR	3461038	PtrMemberAccess	reg -> optimize		3460961	0					
ANR	3461039	Identifier	reg		3460961	0					
ANR	3461040	Identifier	optimize		3460961	1					
ANR	3461041	Identifier	ONIG_OPTIMIZE_EXACT_IC		3460961	1					
ANR	3461042	ElseStatement	else		3460961	0					
ANR	3461043	CompoundStatement		14:4:292:309	3460961	0					
ANR	3461044	IdentifierDeclStatement	int allow_reverse ;	4896:4:110439:110456	3460961	0	True				
ANR	3461045	IdentifierDecl	allow_reverse		3460961	0					
ANR	3461046	IdentifierDeclType	int		3460961	0					
ANR	3461047	Identifier	allow_reverse		3460961	1					
ANR	3461048	ExpressionStatement	"reg -> exact = str_dup ( e -> s , e -> s + e -> len )"	4898:4:110463:110504	3460961	1	True				
ANR	3461049	AssignmentExpression	"reg -> exact = str_dup ( e -> s , e -> s + e -> len )"		3460961	0		=			
ANR	3461050	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461051	Identifier	reg		3460961	0					
ANR	3461052	Identifier	exact		3460961	1					
ANR	3461053	CallExpression	"str_dup ( e -> s , e -> s + e -> len )"		3460961	1					
ANR	3461054	Callee	str_dup		3460961	0					
ANR	3461055	Identifier	str_dup		3460961	0					
ANR	3461056	ArgumentList	e -> s		3460961	1					
ANR	3461057	Argument	e -> s		3460961	0					
ANR	3461058	PtrMemberAccess	e -> s		3460961	0					
ANR	3461059	Identifier	e		3460961	0					
ANR	3461060	Identifier	s		3460961	1					
ANR	3461061	Argument	e -> s + e -> len		3460961	1					
ANR	3461062	AdditiveExpression	e -> s + e -> len		3460961	0		+			
ANR	3461063	PtrMemberAccess	e -> s		3460961	0					
ANR	3461064	Identifier	e		3460961	0					
ANR	3461065	Identifier	s		3460961	1					
ANR	3461066	PtrMemberAccess	e -> len		3460961	1					
ANR	3461067	Identifier	e		3460961	0					
ANR	3461068	Identifier	len		3460961	1					
ANR	3461069	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( reg -> exact )	4899:4:110510:110546	3460961	2	True				
ANR	3461070	CallExpression	CHECK_NULL_RETURN_MEMERR ( reg -> exact )		3460961	0					
ANR	3461071	Callee	CHECK_NULL_RETURN_MEMERR		3460961	0					
ANR	3461072	Identifier	CHECK_NULL_RETURN_MEMERR		3460961	0					
ANR	3461073	ArgumentList	reg -> exact		3460961	1					
ANR	3461074	Argument	reg -> exact		3460961	0					
ANR	3461075	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461076	Identifier	reg		3460961	0					
ANR	3461077	Identifier	exact		3460961	1					
ANR	3461078	ExpressionStatement	reg -> exact_end = reg -> exact + e -> len	4900:4:110552:110588	3460961	3	True				
ANR	3461079	AssignmentExpression	reg -> exact_end = reg -> exact + e -> len		3460961	0		=			
ANR	3461080	PtrMemberAccess	reg -> exact_end		3460961	0					
ANR	3461081	Identifier	reg		3460961	0					
ANR	3461082	Identifier	exact_end		3460961	1					
ANR	3461083	AdditiveExpression	reg -> exact + e -> len		3460961	1		+			
ANR	3461084	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461085	Identifier	reg		3460961	0					
ANR	3461086	Identifier	exact		3460961	1					
ANR	3461087	PtrMemberAccess	e -> len		3460961	1					
ANR	3461088	Identifier	e		3460961	0					
ANR	3461089	Identifier	len		3460961	1					
ANR	3461090	ExpressionStatement	"allow_reverse = ONIGENC_IS_ALLOWED_REVERSE_MATCH ( reg -> enc , reg -> exact , reg -> exact_end )"	4902:4:110596:110683	3460961	4	True				
ANR	3461091	AssignmentExpression	"allow_reverse = ONIGENC_IS_ALLOWED_REVERSE_MATCH ( reg -> enc , reg -> exact , reg -> exact_end )"		3460961	0		=			
ANR	3461092	Identifier	allow_reverse		3460961	0					
ANR	3461093	CallExpression	"ONIGENC_IS_ALLOWED_REVERSE_MATCH ( reg -> enc , reg -> exact , reg -> exact_end )"		3460961	1					
ANR	3461094	Callee	ONIGENC_IS_ALLOWED_REVERSE_MATCH		3460961	0					
ANR	3461095	Identifier	ONIGENC_IS_ALLOWED_REVERSE_MATCH		3460961	0					
ANR	3461096	ArgumentList	reg -> enc		3460961	1					
ANR	3461097	Argument	reg -> enc		3460961	0					
ANR	3461098	PtrMemberAccess	reg -> enc		3460961	0					
ANR	3461099	Identifier	reg		3460961	0					
ANR	3461100	Identifier	enc		3460961	1					
ANR	3461101	Argument	reg -> exact		3460961	1					
ANR	3461102	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461103	Identifier	reg		3460961	0					
ANR	3461104	Identifier	exact		3460961	1					
ANR	3461105	Argument	reg -> exact_end		3460961	2					
ANR	3461106	PtrMemberAccess	reg -> exact_end		3460961	0					
ANR	3461107	Identifier	reg		3460961	0					
ANR	3461108	Identifier	exact_end		3460961	1					
ANR	3461109	IfStatement	if ( e -> len >= 3 || ( e -> len >= 2 && allow_reverse ) )		3460961	5					
ANR	3461110	Condition	e -> len >= 3 || ( e -> len >= 2 && allow_reverse )	4905:8:110694:110738	3460961	0	True				
ANR	3461111	OrExpression	e -> len >= 3 || ( e -> len >= 2 && allow_reverse )		3460961	0		||			
ANR	3461112	RelationalExpression	e -> len >= 3		3460961	0		>=			
ANR	3461113	PtrMemberAccess	e -> len		3460961	0					
ANR	3461114	Identifier	e		3460961	0					
ANR	3461115	Identifier	len		3460961	1					
ANR	3461116	PrimaryExpression	3		3460961	1					
ANR	3461117	AndExpression	e -> len >= 2 && allow_reverse		3460961	1		&&			
ANR	3461118	RelationalExpression	e -> len >= 2		3460961	0		>=			
ANR	3461119	PtrMemberAccess	e -> len		3460961	0					
ANR	3461120	Identifier	e		3460961	0					
ANR	3461121	Identifier	len		3460961	1					
ANR	3461122	PrimaryExpression	2		3460961	1					
ANR	3461123	Identifier	allow_reverse		3460961	1					
ANR	3461124	CompoundStatement		23:55:594:594	3460961	1					
ANR	3461125	ExpressionStatement	"r = set_bm_skip ( reg -> exact , reg -> exact_end , reg -> enc , reg -> map , & ( reg -> int_map ) )"	4906:6:110749:110844	3460961	0	True				
ANR	3461126	AssignmentExpression	"r = set_bm_skip ( reg -> exact , reg -> exact_end , reg -> enc , reg -> map , & ( reg -> int_map ) )"		3460961	0		=			
ANR	3461127	Identifier	r		3460961	0					
ANR	3461128	CallExpression	"set_bm_skip ( reg -> exact , reg -> exact_end , reg -> enc , reg -> map , & ( reg -> int_map ) )"		3460961	1					
ANR	3461129	Callee	set_bm_skip		3460961	0					
ANR	3461130	Identifier	set_bm_skip		3460961	0					
ANR	3461131	ArgumentList	reg -> exact		3460961	1					
ANR	3461132	Argument	reg -> exact		3460961	0					
ANR	3461133	PtrMemberAccess	reg -> exact		3460961	0					
ANR	3461134	Identifier	reg		3460961	0					
ANR	3461135	Identifier	exact		3460961	1					
ANR	3461136	Argument	reg -> exact_end		3460961	1					
ANR	3461137	PtrMemberAccess	reg -> exact_end		3460961	0					
ANR	3461138	Identifier	reg		3460961	0					
ANR	3461139	Identifier	exact_end		3460961	1					
ANR	3461140	Argument	reg -> enc		3460961	2					
ANR	3461141	PtrMemberAccess	reg -> enc		3460961	0					
ANR	3461142	Identifier	reg		3460961	0					
ANR	3461143	Identifier	enc		3460961	1					
ANR	3461144	Argument	reg -> map		3460961	3					
ANR	3461145	PtrMemberAccess	reg -> map		3460961	0					
ANR	3461146	Identifier	reg		3460961	0					
ANR	3461147	Identifier	map		3460961	1					
ANR	3461148	Argument	& ( reg -> int_map )		3460961	4					
ANR	3461149	UnaryOperationExpression	& ( reg -> int_map )		3460961	0					
ANR	3461150	UnaryOperator	&		3460961	0					
ANR	3461151	PtrMemberAccess	reg -> int_map		3460961	1					
ANR	3461152	Identifier	reg		3460961	0					
ANR	3461153	Identifier	int_map		3460961	1					
ANR	3461154	IfStatement	if ( r )		3460961	1					
ANR	3461155	Condition	r	4908:10:110856:110856	3460961	0	True				
ANR	3461156	Identifier	r		3460961	0					
ANR	3461157	ReturnStatement	return r ;	4908:13:110859:110867	3460961	1	True				
ANR	3461158	Identifier	r		3460961	0					
ANR	3461159	ExpressionStatement	reg -> optimize = ( allow_reverse != 0 ? ONIG_OPTIMIZE_EXACT_BM : ONIG_OPTIMIZE_EXACT_BM_NOT_REV )	4910:6:110876:110979	3460961	2	True				
ANR	3461160	AssignmentExpression	reg -> optimize = ( allow_reverse != 0 ? ONIG_OPTIMIZE_EXACT_BM : ONIG_OPTIMIZE_EXACT_BM_NOT_REV )		3460961	0		=			
ANR	3461161	PtrMemberAccess	reg -> optimize		3460961	0					
ANR	3461162	Identifier	reg		3460961	0					
ANR	3461163	Identifier	optimize		3460961	1					
ANR	3461164	ConditionalExpression	allow_reverse != 0 ? ONIG_OPTIMIZE_EXACT_BM : ONIG_OPTIMIZE_EXACT_BM_NOT_REV		3460961	1					
ANR	3461165	Condition	allow_reverse != 0		3460961	0					
ANR	3461166	EqualityExpression	allow_reverse != 0		3460961	0		!=			
ANR	3461167	Identifier	allow_reverse		3460961	0					
ANR	3461168	PrimaryExpression	0		3460961	1					
ANR	3461169	Identifier	ONIG_OPTIMIZE_EXACT_BM		3460961	1					
ANR	3461170	Identifier	ONIG_OPTIMIZE_EXACT_BM_NOT_REV		3460961	2					
ANR	3461171	ElseStatement	else		3460961	0					
ANR	3461172	CompoundStatement		31:9:849:849	3460961	0					
ANR	3461173	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_EXACT	4914:6:111004:111039	3460961	0	True				
ANR	3461174	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_EXACT		3460961	0		=			
ANR	3461175	PtrMemberAccess	reg -> optimize		3460961	0					
ANR	3461176	Identifier	reg		3460961	0					
ANR	3461177	Identifier	optimize		3460961	1					
ANR	3461178	Identifier	ONIG_OPTIMIZE_EXACT		3460961	1					
ANR	3461179	ExpressionStatement	reg -> dmin = e -> mmd . min	4918:2:111054:111076	3460961	3	True				
ANR	3461180	AssignmentExpression	reg -> dmin = e -> mmd . min		3460961	0		=			
ANR	3461181	PtrMemberAccess	reg -> dmin		3460961	0					
ANR	3461182	Identifier	reg		3460961	0					
ANR	3461183	Identifier	dmin		3460961	1					
ANR	3461184	MemberAccess	e -> mmd . min		3460961	1					
ANR	3461185	PtrMemberAccess	e -> mmd		3460961	0					
ANR	3461186	Identifier	e		3460961	0					
ANR	3461187	Identifier	mmd		3460961	1					
ANR	3461188	Identifier	min		3460961	1					
ANR	3461189	ExpressionStatement	reg -> dmax = e -> mmd . max	4919:2:111080:111102	3460961	4	True				
ANR	3461190	AssignmentExpression	reg -> dmax = e -> mmd . max		3460961	0		=			
ANR	3461191	PtrMemberAccess	reg -> dmax		3460961	0					
ANR	3461192	Identifier	reg		3460961	0					
ANR	3461193	Identifier	dmax		3460961	1					
ANR	3461194	MemberAccess	e -> mmd . max		3460961	1					
ANR	3461195	PtrMemberAccess	e -> mmd		3460961	0					
ANR	3461196	Identifier	e		3460961	0					
ANR	3461197	Identifier	mmd		3460961	1					
ANR	3461198	Identifier	max		3460961	1					
ANR	3461199	IfStatement	if ( reg -> dmin != ONIG_INFINITE_DISTANCE )		3460961	5					
ANR	3461200	Condition	reg -> dmin != ONIG_INFINITE_DISTANCE	4921:6:111111:111145	3460961	0	True				
ANR	3461201	EqualityExpression	reg -> dmin != ONIG_INFINITE_DISTANCE		3460961	0		!=			
ANR	3461202	PtrMemberAccess	reg -> dmin		3460961	0					
ANR	3461203	Identifier	reg		3460961	0					
ANR	3461204	Identifier	dmin		3460961	1					
ANR	3461205	Identifier	ONIG_INFINITE_DISTANCE		3460961	1					
ANR	3461206	CompoundStatement		39:43:1001:1001	3460961	1					
ANR	3461207	ExpressionStatement	reg -> threshold_len = reg -> dmin + ( reg -> exact_end - reg -> exact )	4922:4:111154:111216	3460961	0	True				
ANR	3461208	AssignmentExpression	reg -> threshold_len = reg -> dmin + ( reg -> exact_end - reg -> exact )		3460961	0		=			
ANR	3461209	PtrMemberAccess	reg -> threshold_len		3460961	0					
ANR	3461210	Identifier	reg		3460961	0					
ANR	3461211	Identifier	threshold_len		3460961	1					
ANR	3461212	AdditiveExpression	reg -> dmin + ( reg -> exact_end - reg -> exact )		3460961	1		+			
ANR	3461213	PtrMemberAccess	reg -> dmin		3460961	0					
ANR	3461214	Identifier	reg		3460961	0					
ANR	3461215	Identifier	dmin		3460961	1					
ANR	3461216	AdditiveExpression	reg -> exact_end - reg -> exact		3460961	1		-			
ANR	3461217	PtrMemberAccess	reg -> exact_end		3460961	0					
ANR	3461218	Identifier	reg		3460961	0					
ANR	3461219	Identifier	exact_end		3460961	1					
ANR	3461220	PtrMemberAccess	reg -> exact		3460961	1					
ANR	3461221	Identifier	reg		3460961	0					
ANR	3461222	Identifier	exact		3460961	1					
ANR	3461223	ReturnStatement	return 0 ;	4925:2:111225:111233	3460961	6	True				
ANR	3461224	PrimaryExpression	0		3460961	0					
ANR	3461225	ReturnType	static int		3460961	1					
ANR	3461226	Identifier	set_optimize_exact_info		3460961	2					
ANR	3461227	ParameterList	"regex_t * reg , OptExactInfo * e"		3460961	3					
ANR	3461228	Parameter	regex_t * reg	4882:24:110115:110126	3460961	0	True				
ANR	3461229	ParameterType	regex_t *		3460961	0					
ANR	3461230	Identifier	reg		3460961	1					
ANR	3461231	Parameter	OptExactInfo * e	4882:38:110129:110143	3460961	1	True				
ANR	3461232	ParameterType	OptExactInfo *		3460961	0					
ANR	3461233	Identifier	e		3460961	1					
ANR	3461234	CFGEntryNode	ENTRY		3460961		True				
ANR	3461235	CFGExitNode	EXIT		3460961		True				
ANR	3461236	Symbol	ONIGENC_IS_ALLOWED_REVERSE_MATCH		3460961						
ANR	3461237	Symbol	reg -> dmin		3460961						
ANR	3461238	Symbol	reg -> threshold_len		3460961						
ANR	3461239	Symbol	set_bm_skip		3460961						
ANR	3461240	Symbol	reg -> exact_end		3460961						
ANR	3461241	Symbol	& reg -> int_map		3460961						
ANR	3461242	Symbol	e -> mmd . max		3460961						
ANR	3461243	Symbol	ONIG_INFINITE_DISTANCE		3460961						
ANR	3461244	Symbol	e -> mmd		3460961						
ANR	3461245	Symbol	reg		3460961						
ANR	3461246	Symbol	xmalloc		3460961						
ANR	3461247	Symbol	reg -> optimize		3460961						
ANR	3461248	Symbol	ONIG_OPTIMIZE_EXACT		3460961						
ANR	3461249	Symbol	str_dup		3460961						
ANR	3461250	Symbol	reg -> map		3460961						
ANR	3461251	Symbol	e -> mmd . min		3460961						
ANR	3461252	Symbol	e -> len		3460961						
ANR	3461253	Symbol	ONIG_OPTIMIZE_EXACT_BM		3460961						
ANR	3461254	Symbol	e		3460961						
ANR	3461255	Symbol	ONIG_OPTIMIZE_EXACT_BM_NOT_REV		3460961						
ANR	3461256	Symbol	e -> s		3460961						
ANR	3461257	Symbol	* e		3460961						
ANR	3461258	Symbol	reg -> enc		3460961						
ANR	3461259	Symbol	r		3460961						
ANR	3461260	Symbol	ONIG_OPTIMIZE_EXACT_IC		3460961						
ANR	3461261	Symbol	allow_reverse		3460961						
ANR	3461262	Symbol	reg -> dmax		3460961						
ANR	3461263	Symbol	reg -> exact		3460961						
ANR	3461264	Symbol	e -> ignore_case		3460961						
ANR	3461265	Symbol	* reg		3460961						
ANR	3461266	Function	set_optimize_map_info	4928:0:111238:111581							
ANR	3461267	FunctionDef	"set_optimize_map_info (regex_t * reg , OptMapInfo * m)"		3461266	0					
ANR	3461268	CompoundStatement		4930:0:111301:111581	3461266	0					
ANR	3461269	IdentifierDeclStatement	int i ;	4931:2:111305:111310	3461266	0	True				
ANR	3461270	IdentifierDecl	i		3461266	0					
ANR	3461271	IdentifierDeclType	int		3461266	0					
ANR	3461272	Identifier	i		3461266	1					
ANR	3461273	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		3461266	1					
ANR	3461274	ForInit	i = 0 ;	4933:7:111320:111325	3461266	0	True				
ANR	3461275	AssignmentExpression	i = 0		3461266	0		=			
ANR	3461276	Identifier	i		3461266	0					
ANR	3461277	PrimaryExpression	0		3461266	1					
ANR	3461278	Condition	i < ONIG_CHAR_TABLE_SIZE	4933:14:111327:111350	3461266	1	True				
ANR	3461279	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		3461266	0		<			
ANR	3461280	Identifier	i		3461266	0					
ANR	3461281	Identifier	ONIG_CHAR_TABLE_SIZE		3461266	1					
ANR	3461282	PostIncDecOperationExpression	i ++	4933:40:111353:111355	3461266	2	True				
ANR	3461283	Identifier	i		3461266	0					
ANR	3461284	IncDec	++		3461266	1					
ANR	3461285	ExpressionStatement	reg -> map [ i ] = m -> map [ i ]	4934:4:111362:111385	3461266	3	True				
ANR	3461286	AssignmentExpression	reg -> map [ i ] = m -> map [ i ]		3461266	0		=			
ANR	3461287	ArrayIndexing	reg -> map [ i ]		3461266	0					
ANR	3461288	PtrMemberAccess	reg -> map		3461266	0					
ANR	3461289	Identifier	reg		3461266	0					
ANR	3461290	Identifier	map		3461266	1					
ANR	3461291	Identifier	i		3461266	1					
ANR	3461292	ArrayIndexing	m -> map [ i ]		3461266	1					
ANR	3461293	PtrMemberAccess	m -> map		3461266	0					
ANR	3461294	Identifier	m		3461266	0					
ANR	3461295	Identifier	map		3461266	1					
ANR	3461296	Identifier	i		3461266	1					
ANR	3461297	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_MAP	4936:2:111390:111425	3461266	2	True				
ANR	3461298	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_MAP		3461266	0		=			
ANR	3461299	PtrMemberAccess	reg -> optimize		3461266	0					
ANR	3461300	Identifier	reg		3461266	0					
ANR	3461301	Identifier	optimize		3461266	1					
ANR	3461302	Identifier	ONIG_OPTIMIZE_MAP		3461266	1					
ANR	3461303	ExpressionStatement	reg -> dmin = m -> mmd . min	4937:2:111429:111457	3461266	3	True				
ANR	3461304	AssignmentExpression	reg -> dmin = m -> mmd . min		3461266	0		=			
ANR	3461305	PtrMemberAccess	reg -> dmin		3461266	0					
ANR	3461306	Identifier	reg		3461266	0					
ANR	3461307	Identifier	dmin		3461266	1					
ANR	3461308	MemberAccess	m -> mmd . min		3461266	1					
ANR	3461309	PtrMemberAccess	m -> mmd		3461266	0					
ANR	3461310	Identifier	m		3461266	0					
ANR	3461311	Identifier	mmd		3461266	1					
ANR	3461312	Identifier	min		3461266	1					
ANR	3461313	ExpressionStatement	reg -> dmax = m -> mmd . max	4938:2:111461:111489	3461266	4	True				
ANR	3461314	AssignmentExpression	reg -> dmax = m -> mmd . max		3461266	0		=			
ANR	3461315	PtrMemberAccess	reg -> dmax		3461266	0					
ANR	3461316	Identifier	reg		3461266	0					
ANR	3461317	Identifier	dmax		3461266	1					
ANR	3461318	MemberAccess	m -> mmd . max		3461266	1					
ANR	3461319	PtrMemberAccess	m -> mmd		3461266	0					
ANR	3461320	Identifier	m		3461266	0					
ANR	3461321	Identifier	mmd		3461266	1					
ANR	3461322	Identifier	max		3461266	1					
ANR	3461323	IfStatement	if ( reg -> dmin != ONIG_INFINITE_DISTANCE )		3461266	5					
ANR	3461324	Condition	reg -> dmin != ONIG_INFINITE_DISTANCE	4940:6:111498:111532	3461266	0	True				
ANR	3461325	EqualityExpression	reg -> dmin != ONIG_INFINITE_DISTANCE		3461266	0		!=			
ANR	3461326	PtrMemberAccess	reg -> dmin		3461266	0					
ANR	3461327	Identifier	reg		3461266	0					
ANR	3461328	Identifier	dmin		3461266	1					
ANR	3461329	Identifier	ONIG_INFINITE_DISTANCE		3461266	1					
ANR	3461330	CompoundStatement		11:43:233:233	3461266	1					
ANR	3461331	ExpressionStatement	reg -> threshold_len = reg -> dmin + 1	4941:4:111541:111575	3461266	0	True				
ANR	3461332	AssignmentExpression	reg -> threshold_len = reg -> dmin + 1		3461266	0		=			
ANR	3461333	PtrMemberAccess	reg -> threshold_len		3461266	0					
ANR	3461334	Identifier	reg		3461266	0					
ANR	3461335	Identifier	threshold_len		3461266	1					
ANR	3461336	AdditiveExpression	reg -> dmin + 1		3461266	1		+			
ANR	3461337	PtrMemberAccess	reg -> dmin		3461266	0					
ANR	3461338	Identifier	reg		3461266	0					
ANR	3461339	Identifier	dmin		3461266	1					
ANR	3461340	PrimaryExpression	1		3461266	1					
ANR	3461341	ReturnType	static void		3461266	1					
ANR	3461342	Identifier	set_optimize_map_info		3461266	2					
ANR	3461343	ParameterList	"regex_t * reg , OptMapInfo * m"		3461266	3					
ANR	3461344	Parameter	regex_t * reg	4929:22:111272:111283	3461266	0	True				
ANR	3461345	ParameterType	regex_t *		3461266	0					
ANR	3461346	Identifier	reg		3461266	1					
ANR	3461347	Parameter	OptMapInfo * m	4929:36:111286:111298	3461266	1	True				
ANR	3461348	ParameterType	OptMapInfo *		3461266	0					
ANR	3461349	Identifier	m		3461266	1					
ANR	3461350	CFGEntryNode	ENTRY		3461266		True				
ANR	3461351	CFGExitNode	EXIT		3461266		True				
ANR	3461352	Symbol	reg -> map		3461266						
ANR	3461353	Symbol	m -> mmd		3461266						
ANR	3461354	Symbol	reg -> dmin		3461266						
ANR	3461355	Symbol	reg -> threshold_len		3461266						
ANR	3461356	Symbol	* * reg		3461266						
ANR	3461357	Symbol	i		3461266						
ANR	3461358	Symbol	m -> mmd . min		3461266						
ANR	3461359	Symbol	m -> map		3461266						
ANR	3461360	Symbol	m		3461266						
ANR	3461361	Symbol	ONIG_INFINITE_DISTANCE		3461266						
ANR	3461362	Symbol	ONIG_CHAR_TABLE_SIZE		3461266						
ANR	3461363	Symbol	* i		3461266						
ANR	3461364	Symbol	* m -> map		3461266						
ANR	3461365	Symbol	reg		3461266						
ANR	3461366	Symbol	reg -> dmax		3461266						
ANR	3461367	Symbol	reg -> optimize		3461266						
ANR	3461368	Symbol	* m		3461266						
ANR	3461369	Symbol	ONIG_OPTIMIZE_MAP		3461266						
ANR	3461370	Symbol	* reg -> map		3461266						
ANR	3461371	Symbol	m -> mmd . max		3461266						
ANR	3461372	Symbol	* reg		3461266						
ANR	3461373	Symbol	* * m		3461266						
ANR	3461374	Function	set_sub_anchor	4945:0:111584:111762							
ANR	3461375	FunctionDef	"set_sub_anchor (regex_t * reg , OptAncInfo * anc)"		3461374	0					
ANR	3461376	CompoundStatement		4947:0:111642:111762	3461374	0					
ANR	3461377	ExpressionStatement	reg -> sub_anchor |= anc -> left_anchor & ANCHOR_BEGIN_LINE	4948:2:111646:111702	3461374	0	True				
ANR	3461378	AssignmentExpression	reg -> sub_anchor |= anc -> left_anchor & ANCHOR_BEGIN_LINE		3461374	0		|=			
ANR	3461379	PtrMemberAccess	reg -> sub_anchor		3461374	0					
ANR	3461380	Identifier	reg		3461374	0					
ANR	3461381	Identifier	sub_anchor		3461374	1					
ANR	3461382	BitAndExpression	anc -> left_anchor & ANCHOR_BEGIN_LINE		3461374	1		&			
ANR	3461383	PtrMemberAccess	anc -> left_anchor		3461374	0					
ANR	3461384	Identifier	anc		3461374	0					
ANR	3461385	Identifier	left_anchor		3461374	1					
ANR	3461386	Identifier	ANCHOR_BEGIN_LINE		3461374	1					
ANR	3461387	ExpressionStatement	reg -> sub_anchor |= anc -> right_anchor & ANCHOR_END_LINE	4949:2:111706:111760	3461374	1	True				
ANR	3461388	AssignmentExpression	reg -> sub_anchor |= anc -> right_anchor & ANCHOR_END_LINE		3461374	0		|=			
ANR	3461389	PtrMemberAccess	reg -> sub_anchor		3461374	0					
ANR	3461390	Identifier	reg		3461374	0					
ANR	3461391	Identifier	sub_anchor		3461374	1					
ANR	3461392	BitAndExpression	anc -> right_anchor & ANCHOR_END_LINE		3461374	1		&			
ANR	3461393	PtrMemberAccess	anc -> right_anchor		3461374	0					
ANR	3461394	Identifier	anc		3461374	0					
ANR	3461395	Identifier	right_anchor		3461374	1					
ANR	3461396	Identifier	ANCHOR_END_LINE		3461374	1					
ANR	3461397	ReturnType	static void		3461374	1					
ANR	3461398	Identifier	set_sub_anchor		3461374	2					
ANR	3461399	ParameterList	"regex_t * reg , OptAncInfo * anc"		3461374	3					
ANR	3461400	Parameter	regex_t * reg	4946:15:111611:111622	3461374	0	True				
ANR	3461401	ParameterType	regex_t *		3461374	0					
ANR	3461402	Identifier	reg		3461374	1					
ANR	3461403	Parameter	OptAncInfo * anc	4946:29:111625:111639	3461374	1	True				
ANR	3461404	ParameterType	OptAncInfo *		3461374	0					
ANR	3461405	Identifier	anc		3461374	1					
ANR	3461406	CFGEntryNode	ENTRY		3461374		True				
ANR	3461407	CFGExitNode	EXIT		3461374		True				
ANR	3461408	Symbol	anc -> left_anchor		3461374						
ANR	3461409	Symbol	reg		3461374						
ANR	3461410	Symbol	reg -> sub_anchor		3461374						
ANR	3461411	Symbol	anc		3461374						
ANR	3461412	Symbol	ANCHOR_END_LINE		3461374						
ANR	3461413	Symbol	ANCHOR_BEGIN_LINE		3461374						
ANR	3461414	Symbol	anc -> right_anchor		3461374						
ANR	3461415	Symbol	* reg		3461374						
ANR	3461416	Symbol	* anc		3461374						
ANR	3461417	DeclStmt									
ANR	3461418	Decl							void	"void ( FILE * f , regex_t * reg )"	print_optimize_info
ANR	3461419	Function	set_optimize_info_from_tree	4956:0:111847:113302							
ANR	3461420	FunctionDef	"set_optimize_info_from_tree (Node * node , regex_t * reg , ScanEnv * scan_env)"		3461419	0					
ANR	3461421	CompoundStatement		4958:0:111931:113302	3461419	0					
ANR	3461422	IdentifierDeclStatement	int r ;	4960:2:111936:111941	3461419	0	True				
ANR	3461423	IdentifierDecl	r		3461419	0					
ANR	3461424	IdentifierDeclType	int		3461419	0					
ANR	3461425	Identifier	r		3461419	1					
ANR	3461426	IdentifierDeclStatement	NodeOptInfo opt ;	4961:2:111945:111960	3461419	1	True				
ANR	3461427	IdentifierDecl	opt		3461419	0					
ANR	3461428	IdentifierDeclType	NodeOptInfo		3461419	0					
ANR	3461429	Identifier	opt		3461419	1					
ANR	3461430	IdentifierDeclStatement	OptEnv env ;	4962:2:111964:111974	3461419	2	True				
ANR	3461431	IdentifierDecl	env		3461419	0					
ANR	3461432	IdentifierDeclType	OptEnv		3461419	0					
ANR	3461433	Identifier	env		3461419	1					
ANR	3461434	ExpressionStatement	env . enc = reg -> enc	4964:2:111979:112008	3461419	3	True				
ANR	3461435	AssignmentExpression	env . enc = reg -> enc		3461419	0		=			
ANR	3461436	MemberAccess	env . enc		3461419	0					
ANR	3461437	Identifier	env		3461419	0					
ANR	3461438	Identifier	enc		3461419	1					
ANR	3461439	PtrMemberAccess	reg -> enc		3461419	1					
ANR	3461440	Identifier	reg		3461419	0					
ANR	3461441	Identifier	enc		3461419	1					
ANR	3461442	ExpressionStatement	env . options = reg -> options	4965:2:112012:112045	3461419	4	True				
ANR	3461443	AssignmentExpression	env . options = reg -> options		3461419	0		=			
ANR	3461444	MemberAccess	env . options		3461419	0					
ANR	3461445	Identifier	env		3461419	0					
ANR	3461446	Identifier	options		3461419	1					
ANR	3461447	PtrMemberAccess	reg -> options		3461419	1					
ANR	3461448	Identifier	reg		3461419	0					
ANR	3461449	Identifier	options		3461419	1					
ANR	3461450	ExpressionStatement	env . case_fold_flag = reg -> case_fold_flag	4966:2:112049:112089	3461419	5	True				
ANR	3461451	AssignmentExpression	env . case_fold_flag = reg -> case_fold_flag		3461419	0		=			
ANR	3461452	MemberAccess	env . case_fold_flag		3461419	0					
ANR	3461453	Identifier	env		3461419	0					
ANR	3461454	Identifier	case_fold_flag		3461419	1					
ANR	3461455	PtrMemberAccess	reg -> case_fold_flag		3461419	1					
ANR	3461456	Identifier	reg		3461419	0					
ANR	3461457	Identifier	case_fold_flag		3461419	1					
ANR	3461458	ExpressionStatement	env . scan_env = scan_env	4967:2:112093:112118	3461419	6	True				
ANR	3461459	AssignmentExpression	env . scan_env = scan_env		3461419	0		=			
ANR	3461460	MemberAccess	env . scan_env		3461419	0					
ANR	3461461	Identifier	env		3461419	0					
ANR	3461462	Identifier	scan_env		3461419	1					
ANR	3461463	Identifier	scan_env		3461419	1					
ANR	3461464	ExpressionStatement	clear_mml ( & env . mmd )	4968:2:112122:112141	3461419	7	True				
ANR	3461465	CallExpression	clear_mml ( & env . mmd )		3461419	0					
ANR	3461466	Callee	clear_mml		3461419	0					
ANR	3461467	Identifier	clear_mml		3461419	0					
ANR	3461468	ArgumentList	& env . mmd		3461419	1					
ANR	3461469	Argument	& env . mmd		3461419	0					
ANR	3461470	UnaryOperationExpression	& env . mmd		3461419	0					
ANR	3461471	UnaryOperator	&		3461419	0					
ANR	3461472	MemberAccess	env . mmd		3461419	1					
ANR	3461473	Identifier	env		3461419	0					
ANR	3461474	Identifier	mmd		3461419	1					
ANR	3461475	ExpressionStatement	"r = optimize_node_left ( node , & opt , & env )"	4970:2:112146:112186	3461419	8	True				
ANR	3461476	AssignmentExpression	"r = optimize_node_left ( node , & opt , & env )"		3461419	0		=			
ANR	3461477	Identifier	r		3461419	0					
ANR	3461478	CallExpression	"optimize_node_left ( node , & opt , & env )"		3461419	1					
ANR	3461479	Callee	optimize_node_left		3461419	0					
ANR	3461480	Identifier	optimize_node_left		3461419	0					
ANR	3461481	ArgumentList	node		3461419	1					
ANR	3461482	Argument	node		3461419	0					
ANR	3461483	Identifier	node		3461419	0					
ANR	3461484	Argument	& opt		3461419	1					
ANR	3461485	UnaryOperationExpression	& opt		3461419	0					
ANR	3461486	UnaryOperator	&		3461419	0					
ANR	3461487	Identifier	opt		3461419	1					
ANR	3461488	Argument	& env		3461419	2					
ANR	3461489	UnaryOperationExpression	& env		3461419	0					
ANR	3461490	UnaryOperator	&		3461419	0					
ANR	3461491	Identifier	env		3461419	1					
ANR	3461492	IfStatement	if ( r )		3461419	9					
ANR	3461493	Condition	r	4971:6:112194:112194	3461419	0	True				
ANR	3461494	Identifier	r		3461419	0					
ANR	3461495	ReturnStatement	return r ;	4971:9:112197:112205	3461419	1	True				
ANR	3461496	Identifier	r		3461419	0					
ANR	3461497	ExpressionStatement	reg -> anchor = opt . anc . left_anchor & ( ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML )	4973:2:112210:112343	3461419	10	True				
ANR	3461498	AssignmentExpression	reg -> anchor = opt . anc . left_anchor & ( ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML )		3461419	0		=			
ANR	3461499	PtrMemberAccess	reg -> anchor		3461419	0					
ANR	3461500	Identifier	reg		3461419	0					
ANR	3461501	Identifier	anchor		3461419	1					
ANR	3461502	BitAndExpression	opt . anc . left_anchor & ( ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML )		3461419	1		&			
ANR	3461503	MemberAccess	opt . anc . left_anchor		3461419	0					
ANR	3461504	MemberAccess	opt . anc		3461419	0					
ANR	3461505	Identifier	opt		3461419	0					
ANR	3461506	Identifier	anc		3461419	1					
ANR	3461507	Identifier	left_anchor		3461419	1					
ANR	3461508	InclusiveOrExpression	ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML		3461419	1		|			
ANR	3461509	Identifier	ANCHOR_BEGIN_BUF		3461419	0					
ANR	3461510	InclusiveOrExpression	ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML		3461419	1		|			
ANR	3461511	Identifier	ANCHOR_BEGIN_POSITION		3461419	0					
ANR	3461512	InclusiveOrExpression	ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML		3461419	1		|			
ANR	3461513	Identifier	ANCHOR_ANYCHAR_STAR		3461419	0					
ANR	3461514	Identifier	ANCHOR_ANYCHAR_STAR_ML		3461419	1					
ANR	3461515	ExpressionStatement	reg -> anchor |= opt . anc . right_anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )	4976:2:112348:112424	3461419	11	True				
ANR	3461516	AssignmentExpression	reg -> anchor |= opt . anc . right_anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )		3461419	0		|=			
ANR	3461517	PtrMemberAccess	reg -> anchor		3461419	0					
ANR	3461518	Identifier	reg		3461419	0					
ANR	3461519	Identifier	anchor		3461419	1					
ANR	3461520	BitAndExpression	opt . anc . right_anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )		3461419	1		&			
ANR	3461521	MemberAccess	opt . anc . right_anchor		3461419	0					
ANR	3461522	MemberAccess	opt . anc		3461419	0					
ANR	3461523	Identifier	opt		3461419	0					
ANR	3461524	Identifier	anc		3461419	1					
ANR	3461525	Identifier	right_anchor		3461419	1					
ANR	3461526	InclusiveOrExpression	ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF		3461419	1		|			
ANR	3461527	Identifier	ANCHOR_END_BUF		3461419	0					
ANR	3461528	Identifier	ANCHOR_SEMI_END_BUF		3461419	1					
ANR	3461529	IfStatement	if ( reg -> anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF ) )		3461419	12					
ANR	3461530	Condition	reg -> anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )	4978:6:112433:112484	3461419	0	True				
ANR	3461531	BitAndExpression	reg -> anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )		3461419	0		&			
ANR	3461532	PtrMemberAccess	reg -> anchor		3461419	0					
ANR	3461533	Identifier	reg		3461419	0					
ANR	3461534	Identifier	anchor		3461419	1					
ANR	3461535	InclusiveOrExpression	ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF		3461419	1		|			
ANR	3461536	Identifier	ANCHOR_END_BUF		3461419	0					
ANR	3461537	Identifier	ANCHOR_SEMI_END_BUF		3461419	1					
ANR	3461538	CompoundStatement		21:60:555:555	3461419	1					
ANR	3461539	ExpressionStatement	reg -> anchor_dmin = opt . len . min	4979:4:112493:112523	3461419	0	True				
ANR	3461540	AssignmentExpression	reg -> anchor_dmin = opt . len . min		3461419	0		=			
ANR	3461541	PtrMemberAccess	reg -> anchor_dmin		3461419	0					
ANR	3461542	Identifier	reg		3461419	0					
ANR	3461543	Identifier	anchor_dmin		3461419	1					
ANR	3461544	MemberAccess	opt . len . min		3461419	1					
ANR	3461545	MemberAccess	opt . len		3461419	0					
ANR	3461546	Identifier	opt		3461419	0					
ANR	3461547	Identifier	len		3461419	1					
ANR	3461548	Identifier	min		3461419	1					
ANR	3461549	ExpressionStatement	reg -> anchor_dmax = opt . len . max	4980:4:112529:112559	3461419	1	True				
ANR	3461550	AssignmentExpression	reg -> anchor_dmax = opt . len . max		3461419	0		=			
ANR	3461551	PtrMemberAccess	reg -> anchor_dmax		3461419	0					
ANR	3461552	Identifier	reg		3461419	0					
ANR	3461553	Identifier	anchor_dmax		3461419	1					
ANR	3461554	MemberAccess	opt . len . max		3461419	1					
ANR	3461555	MemberAccess	opt . len		3461419	0					
ANR	3461556	Identifier	opt		3461419	0					
ANR	3461557	Identifier	len		3461419	1					
ANR	3461558	Identifier	max		3461419	1					
ANR	3461559	IfStatement	if ( opt . exb . len > 0 || opt . exm . len > 0 )		3461419	13					
ANR	3461560	Condition	opt . exb . len > 0 || opt . exm . len > 0	4983:6:112572:112605	3461419	0	True				
ANR	3461561	OrExpression	opt . exb . len > 0 || opt . exm . len > 0		3461419	0		||			
ANR	3461562	RelationalExpression	opt . exb . len > 0		3461419	0		>			
ANR	3461563	MemberAccess	opt . exb . len		3461419	0					
ANR	3461564	MemberAccess	opt . exb		3461419	0					
ANR	3461565	Identifier	opt		3461419	0					
ANR	3461566	Identifier	exb		3461419	1					
ANR	3461567	Identifier	len		3461419	1					
ANR	3461568	PrimaryExpression	0		3461419	1					
ANR	3461569	RelationalExpression	opt . exm . len > 0		3461419	1		>			
ANR	3461570	MemberAccess	opt . exm . len		3461419	0					
ANR	3461571	MemberAccess	opt . exm		3461419	0					
ANR	3461572	Identifier	opt		3461419	0					
ANR	3461573	Identifier	exm		3461419	1					
ANR	3461574	Identifier	len		3461419	1					
ANR	3461575	PrimaryExpression	0		3461419	1					
ANR	3461576	CompoundStatement		26:42:676:676	3461419	1					
ANR	3461577	ExpressionStatement	"select_opt_exact_info ( reg -> enc , & opt . exb , & opt . exm )"	4984:4:112614:112665	3461419	0	True				
ANR	3461578	CallExpression	"select_opt_exact_info ( reg -> enc , & opt . exb , & opt . exm )"		3461419	0					
ANR	3461579	Callee	select_opt_exact_info		3461419	0					
ANR	3461580	Identifier	select_opt_exact_info		3461419	0					
ANR	3461581	ArgumentList	reg -> enc		3461419	1					
ANR	3461582	Argument	reg -> enc		3461419	0					
ANR	3461583	PtrMemberAccess	reg -> enc		3461419	0					
ANR	3461584	Identifier	reg		3461419	0					
ANR	3461585	Identifier	enc		3461419	1					
ANR	3461586	Argument	& opt . exb		3461419	1					
ANR	3461587	UnaryOperationExpression	& opt . exb		3461419	0					
ANR	3461588	UnaryOperator	&		3461419	0					
ANR	3461589	MemberAccess	opt . exb		3461419	1					
ANR	3461590	Identifier	opt		3461419	0					
ANR	3461591	Identifier	exb		3461419	1					
ANR	3461592	Argument	& opt . exm		3461419	2					
ANR	3461593	UnaryOperationExpression	& opt . exm		3461419	0					
ANR	3461594	UnaryOperator	&		3461419	0					
ANR	3461595	MemberAccess	opt . exm		3461419	1					
ANR	3461596	Identifier	opt		3461419	0					
ANR	3461597	Identifier	exm		3461419	1					
ANR	3461598	IfStatement	"if ( opt . map . value > 0 && comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0 )"		3461419	1					
ANR	3461599	Condition	"opt . map . value > 0 && comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0"	4985:8:112675:112746	3461419	0	True				
ANR	3461600	AndExpression	"opt . map . value > 0 && comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0"		3461419	0		&&			
ANR	3461601	RelationalExpression	opt . map . value > 0		3461419	0		>			
ANR	3461602	MemberAccess	opt . map . value		3461419	0					
ANR	3461603	MemberAccess	opt . map		3461419	0					
ANR	3461604	Identifier	opt		3461419	0					
ANR	3461605	Identifier	map		3461419	1					
ANR	3461606	Identifier	value		3461419	1					
ANR	3461607	PrimaryExpression	0		3461419	1					
ANR	3461608	RelationalExpression	"comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0"		3461419	1		>			
ANR	3461609	CallExpression	"comp_opt_exact_or_map_info ( & opt . exb , & opt . map )"		3461419	0					
ANR	3461610	Callee	comp_opt_exact_or_map_info		3461419	0					
ANR	3461611	Identifier	comp_opt_exact_or_map_info		3461419	0					
ANR	3461612	ArgumentList	& opt . exb		3461419	1					
ANR	3461613	Argument	& opt . exb		3461419	0					
ANR	3461614	UnaryOperationExpression	& opt . exb		3461419	0					
ANR	3461615	UnaryOperator	&		3461419	0					
ANR	3461616	MemberAccess	opt . exb		3461419	1					
ANR	3461617	Identifier	opt		3461419	0					
ANR	3461618	Identifier	exb		3461419	1					
ANR	3461619	Argument	& opt . map		3461419	1					
ANR	3461620	UnaryOperationExpression	& opt . map		3461419	0					
ANR	3461621	UnaryOperator	&		3461419	0					
ANR	3461622	MemberAccess	opt . map		3461419	1					
ANR	3461623	Identifier	opt		3461419	0					
ANR	3461624	Identifier	map		3461419	1					
ANR	3461625	PrimaryExpression	0		3461419	1					
ANR	3461626	CompoundStatement		29:53:817:817	3461419	1					
ANR	3461627	GotoStatement	goto set_map ;	4987:6:112757:112769	3461419	0	True				
ANR	3461628	Identifier	set_map		3461419	0					
ANR	3461629	ElseStatement	else		3461419	0					
ANR	3461630	CompoundStatement		32:9:854:854	3461419	0					
ANR	3461631	ExpressionStatement	"r = set_optimize_exact_info ( reg , & opt . exb )"	4990:6:112794:112836	3461419	0	True				
ANR	3461632	AssignmentExpression	"r = set_optimize_exact_info ( reg , & opt . exb )"		3461419	0		=			
ANR	3461633	Identifier	r		3461419	0					
ANR	3461634	CallExpression	"set_optimize_exact_info ( reg , & opt . exb )"		3461419	1					
ANR	3461635	Callee	set_optimize_exact_info		3461419	0					
ANR	3461636	Identifier	set_optimize_exact_info		3461419	0					
ANR	3461637	ArgumentList	reg		3461419	1					
ANR	3461638	Argument	reg		3461419	0					
ANR	3461639	Identifier	reg		3461419	0					
ANR	3461640	Argument	& opt . exb		3461419	1					
ANR	3461641	UnaryOperationExpression	& opt . exb		3461419	0					
ANR	3461642	UnaryOperator	&		3461419	0					
ANR	3461643	MemberAccess	opt . exb		3461419	1					
ANR	3461644	Identifier	opt		3461419	0					
ANR	3461645	Identifier	exb		3461419	1					
ANR	3461646	ExpressionStatement	"set_sub_anchor ( reg , & opt . exb . anc )"	4991:6:112844:112877	3461419	1	True				
ANR	3461647	CallExpression	"set_sub_anchor ( reg , & opt . exb . anc )"		3461419	0					
ANR	3461648	Callee	set_sub_anchor		3461419	0					
ANR	3461649	Identifier	set_sub_anchor		3461419	0					
ANR	3461650	ArgumentList	reg		3461419	1					
ANR	3461651	Argument	reg		3461419	0					
ANR	3461652	Identifier	reg		3461419	0					
ANR	3461653	Argument	& opt . exb . anc		3461419	1					
ANR	3461654	UnaryOperationExpression	& opt . exb . anc		3461419	0					
ANR	3461655	UnaryOperator	&		3461419	0					
ANR	3461656	MemberAccess	opt . exb . anc		3461419	1					
ANR	3461657	MemberAccess	opt . exb		3461419	0					
ANR	3461658	Identifier	opt		3461419	0					
ANR	3461659	Identifier	exb		3461419	1					
ANR	3461660	Identifier	anc		3461419	1					
ANR	3461661	ElseStatement	else		3461419	0					
ANR	3461662	IfStatement	if ( opt . map . value > 0 )		3461419	0					
ANR	3461663	Condition	opt . map . value > 0	4994:11:112900:112916	3461419	0	True				
ANR	3461664	RelationalExpression	opt . map . value > 0		3461419	0		>			
ANR	3461665	MemberAccess	opt . map . value		3461419	0					
ANR	3461666	MemberAccess	opt . map		3461419	0					
ANR	3461667	Identifier	opt		3461419	0					
ANR	3461668	Identifier	map		3461419	1					
ANR	3461669	Identifier	value		3461419	1					
ANR	3461670	PrimaryExpression	0		3461419	1					
ANR	3461671	CompoundStatement		37:30:987:987	3461419	1					
ANR	3461672	Label	set_map :	4995:2:112923:112930	3461419	0	True				
ANR	3461673	Identifier	set_map		3461419	0					
ANR	3461674	ExpressionStatement	"set_optimize_map_info ( reg , & opt . map )"	4996:4:112936:112972	3461419	1	True				
ANR	3461675	CallExpression	"set_optimize_map_info ( reg , & opt . map )"		3461419	0					
ANR	3461676	Callee	set_optimize_map_info		3461419	0					
ANR	3461677	Identifier	set_optimize_map_info		3461419	0					
ANR	3461678	ArgumentList	reg		3461419	1					
ANR	3461679	Argument	reg		3461419	0					
ANR	3461680	Identifier	reg		3461419	0					
ANR	3461681	Argument	& opt . map		3461419	1					
ANR	3461682	UnaryOperationExpression	& opt . map		3461419	0					
ANR	3461683	UnaryOperator	&		3461419	0					
ANR	3461684	MemberAccess	opt . map		3461419	1					
ANR	3461685	Identifier	opt		3461419	0					
ANR	3461686	Identifier	map		3461419	1					
ANR	3461687	ExpressionStatement	"set_sub_anchor ( reg , & opt . map . anc )"	4997:4:112978:113011	3461419	2	True				
ANR	3461688	CallExpression	"set_sub_anchor ( reg , & opt . map . anc )"		3461419	0					
ANR	3461689	Callee	set_sub_anchor		3461419	0					
ANR	3461690	Identifier	set_sub_anchor		3461419	0					
ANR	3461691	ArgumentList	reg		3461419	1					
ANR	3461692	Argument	reg		3461419	0					
ANR	3461693	Identifier	reg		3461419	0					
ANR	3461694	Argument	& opt . map . anc		3461419	1					
ANR	3461695	UnaryOperationExpression	& opt . map . anc		3461419	0					
ANR	3461696	UnaryOperator	&		3461419	0					
ANR	3461697	MemberAccess	opt . map . anc		3461419	1					
ANR	3461698	MemberAccess	opt . map		3461419	0					
ANR	3461699	Identifier	opt		3461419	0					
ANR	3461700	Identifier	map		3461419	1					
ANR	3461701	Identifier	anc		3461419	1					
ANR	3461702	ElseStatement	else		3461419	0					
ANR	3461703	CompoundStatement		42:7:1092:1092	3461419	0					
ANR	3461704	ExpressionStatement	reg -> sub_anchor |= opt . anc . left_anchor & ANCHOR_BEGIN_LINE	5000:4:113030:113088	3461419	0	True				
ANR	3461705	AssignmentExpression	reg -> sub_anchor |= opt . anc . left_anchor & ANCHOR_BEGIN_LINE		3461419	0		|=			
ANR	3461706	PtrMemberAccess	reg -> sub_anchor		3461419	0					
ANR	3461707	Identifier	reg		3461419	0					
ANR	3461708	Identifier	sub_anchor		3461419	1					
ANR	3461709	BitAndExpression	opt . anc . left_anchor & ANCHOR_BEGIN_LINE		3461419	1		&			
ANR	3461710	MemberAccess	opt . anc . left_anchor		3461419	0					
ANR	3461711	MemberAccess	opt . anc		3461419	0					
ANR	3461712	Identifier	opt		3461419	0					
ANR	3461713	Identifier	anc		3461419	1					
ANR	3461714	Identifier	left_anchor		3461419	1					
ANR	3461715	Identifier	ANCHOR_BEGIN_LINE		3461419	1					
ANR	3461716	IfStatement	if ( opt . len . max == 0 )		3461419	1					
ANR	3461717	Condition	opt . len . max == 0	5001:8:113098:113113	3461419	0	True				
ANR	3461718	EqualityExpression	opt . len . max == 0		3461419	0		==			
ANR	3461719	MemberAccess	opt . len . max		3461419	0					
ANR	3461720	MemberAccess	opt . len		3461419	0					
ANR	3461721	Identifier	opt		3461419	0					
ANR	3461722	Identifier	len		3461419	1					
ANR	3461723	Identifier	max		3461419	1					
ANR	3461724	PrimaryExpression	0		3461419	1					
ANR	3461725	ExpressionStatement	reg -> sub_anchor |= opt . anc . right_anchor & ANCHOR_END_LINE	5002:6:113122:113179	3461419	1	True				
ANR	3461726	AssignmentExpression	reg -> sub_anchor |= opt . anc . right_anchor & ANCHOR_END_LINE		3461419	0		|=			
ANR	3461727	PtrMemberAccess	reg -> sub_anchor		3461419	0					
ANR	3461728	Identifier	reg		3461419	0					
ANR	3461729	Identifier	sub_anchor		3461419	1					
ANR	3461730	BitAndExpression	opt . anc . right_anchor & ANCHOR_END_LINE		3461419	1		&			
ANR	3461731	MemberAccess	opt . anc . right_anchor		3461419	0					
ANR	3461732	MemberAccess	opt . anc		3461419	0					
ANR	3461733	Identifier	opt		3461419	0					
ANR	3461734	Identifier	anc		3461419	1					
ANR	3461735	Identifier	right_anchor		3461419	1					
ANR	3461736	Identifier	ANCHOR_END_LINE		3461419	1					
ANR	3461737	ExpressionStatement	"print_optimize_info ( stderr , reg )"	5006:2:113249:113281	3461419	14	True				
ANR	3461738	CallExpression	"print_optimize_info ( stderr , reg )"		3461419	0					
ANR	3461739	Callee	print_optimize_info		3461419	0					
ANR	3461740	Identifier	print_optimize_info		3461419	0					
ANR	3461741	ArgumentList	stderr		3461419	1					
ANR	3461742	Argument	stderr		3461419	0					
ANR	3461743	Identifier	stderr		3461419	0					
ANR	3461744	Argument	reg		3461419	1					
ANR	3461745	Identifier	reg		3461419	0					
ANR	3461746	ReturnStatement	return r ;	5008:2:113292:113300	3461419	15	True				
ANR	3461747	Identifier	r		3461419	0					
ANR	3461748	ReturnType	static int		3461419	1					
ANR	3461749	Identifier	set_optimize_info_from_tree		3461419	2					
ANR	3461750	ParameterList	"Node * node , regex_t * reg , ScanEnv * scan_env"		3461419	3					
ANR	3461751	Parameter	Node * node	4957:28:111886:111895	3461419	0	True				
ANR	3461752	ParameterType	Node *		3461419	0					
ANR	3461753	Identifier	node		3461419	1					
ANR	3461754	Parameter	regex_t * reg	4957:40:111898:111909	3461419	1	True				
ANR	3461755	ParameterType	regex_t *		3461419	0					
ANR	3461756	Identifier	reg		3461419	1					
ANR	3461757	Parameter	ScanEnv * scan_env	4957:54:111912:111928	3461419	2	True				
ANR	3461758	ParameterType	ScanEnv *		3461419	0					
ANR	3461759	Identifier	scan_env		3461419	1					
ANR	3461760	CFGEntryNode	ENTRY		3461419		True				
ANR	3461761	CFGExitNode	EXIT		3461419		True				
ANR	3461762	Symbol	ANCHOR_END_BUF		3461419						
ANR	3461763	Symbol	opt . anc		3461419						
ANR	3461764	Symbol	env . scan_env		3461419						
ANR	3461765	Symbol	ANCHOR_END_LINE		3461419						
ANR	3461766	Symbol	opt . map		3461419						
ANR	3461767	Symbol	opt . len . max		3461419						
ANR	3461768	Symbol	reg		3461419						
ANR	3461769	Symbol	reg -> anchor_dmax		3461419						
ANR	3461770	Symbol	& opt . map		3461419						
ANR	3461771	Symbol	reg -> options		3461419						
ANR	3461772	Symbol	opt . exb . len		3461419						
ANR	3461773	Symbol	& opt . map . anc		3461419						
ANR	3461774	Symbol	& opt		3461419						
ANR	3461775	Symbol	& opt . exb		3461419						
ANR	3461776	Symbol	ANCHOR_BEGIN_POSITION		3461419						
ANR	3461777	Symbol	reg -> anchor_dmin		3461419						
ANR	3461778	Symbol	stderr		3461419						
ANR	3461779	Symbol	env . options		3461419						
ANR	3461780	Symbol	reg -> enc		3461419						
ANR	3461781	Symbol	node		3461419						
ANR	3461782	Symbol	opt		3461419						
ANR	3461783	Symbol	opt . anc . right_anchor		3461419						
ANR	3461784	Symbol	ANCHOR_BEGIN_LINE		3461419						
ANR	3461785	Symbol	opt . len		3461419						
ANR	3461786	Symbol	ANCHOR_SEMI_END_BUF		3461419						
ANR	3461787	Symbol	reg -> anchor		3461419						
ANR	3461788	Symbol	ANCHOR_BEGIN_BUF		3461419						
ANR	3461789	Symbol	opt . exb		3461419						
ANR	3461790	Symbol	set_optimize_exact_info		3461419						
ANR	3461791	Symbol	opt . exm		3461419						
ANR	3461792	Symbol	& env . mmd		3461419						
ANR	3461793	Symbol	opt . map . value		3461419						
ANR	3461794	Symbol	& env		3461419						
ANR	3461795	Symbol	env . case_fold_flag		3461419						
ANR	3461796	Symbol	reg -> sub_anchor		3461419						
ANR	3461797	Symbol	& opt . exm		3461419						
ANR	3461798	Symbol	scan_env		3461419						
ANR	3461799	Symbol	& opt . exb . anc		3461419						
ANR	3461800	Symbol	ANCHOR_ANYCHAR_STAR_ML		3461419						
ANR	3461801	Symbol	comp_opt_exact_or_map_info		3461419						
ANR	3461802	Symbol	env . enc		3461419						
ANR	3461803	Symbol	opt . anc . left_anchor		3461419						
ANR	3461804	Symbol	env		3461419						
ANR	3461805	Symbol	opt . len . min		3461419						
ANR	3461806	Symbol	r		3461419						
ANR	3461807	Symbol	opt . exm . len		3461419						
ANR	3461808	Symbol	optimize_node_left		3461419						
ANR	3461809	Symbol	reg -> case_fold_flag		3461419						
ANR	3461810	Symbol	ANCHOR_ANYCHAR_STAR		3461419						
ANR	3461811	Symbol	* reg		3461419						
ANR	3461812	Function	clear_optimize_info	5011:0:113305:113656							
ANR	3461813	FunctionDef	clear_optimize_info (regex_t * reg)		3461812	0					
ANR	3461814	CompoundStatement		5013:0:113351:113656	3461812	0					
ANR	3461815	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_NONE	5014:2:113355:113394	3461812	0	True				
ANR	3461816	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_NONE		3461812	0		=			
ANR	3461817	PtrMemberAccess	reg -> optimize		3461812	0					
ANR	3461818	Identifier	reg		3461812	0					
ANR	3461819	Identifier	optimize		3461812	1					
ANR	3461820	Identifier	ONIG_OPTIMIZE_NONE		3461812	1					
ANR	3461821	ExpressionStatement	reg -> anchor = 0	5015:2:113398:113420	3461812	1	True				
ANR	3461822	AssignmentExpression	reg -> anchor = 0		3461812	0		=			
ANR	3461823	PtrMemberAccess	reg -> anchor		3461812	0					
ANR	3461824	Identifier	reg		3461812	0					
ANR	3461825	Identifier	anchor		3461812	1					
ANR	3461826	PrimaryExpression	0		3461812	1					
ANR	3461827	ExpressionStatement	reg -> anchor_dmin = 0	5016:2:113424:113446	3461812	2	True				
ANR	3461828	AssignmentExpression	reg -> anchor_dmin = 0		3461812	0		=			
ANR	3461829	PtrMemberAccess	reg -> anchor_dmin		3461812	0					
ANR	3461830	Identifier	reg		3461812	0					
ANR	3461831	Identifier	anchor_dmin		3461812	1					
ANR	3461832	PrimaryExpression	0		3461812	1					
ANR	3461833	ExpressionStatement	reg -> anchor_dmax = 0	5017:2:113450:113472	3461812	3	True				
ANR	3461834	AssignmentExpression	reg -> anchor_dmax = 0		3461812	0		=			
ANR	3461835	PtrMemberAccess	reg -> anchor_dmax		3461812	0					
ANR	3461836	Identifier	reg		3461812	0					
ANR	3461837	Identifier	anchor_dmax		3461812	1					
ANR	3461838	PrimaryExpression	0		3461812	1					
ANR	3461839	ExpressionStatement	reg -> sub_anchor = 0	5018:2:113476:113498	3461812	4	True				
ANR	3461840	AssignmentExpression	reg -> sub_anchor = 0		3461812	0		=			
ANR	3461841	PtrMemberAccess	reg -> sub_anchor		3461812	0					
ANR	3461842	Identifier	reg		3461812	0					
ANR	3461843	Identifier	sub_anchor		3461812	1					
ANR	3461844	PrimaryExpression	0		3461812	1					
ANR	3461845	ExpressionStatement	reg -> exact_end = ( UChar * ) NULL	5019:2:113502:113536	3461812	5	True				
ANR	3461846	AssignmentExpression	reg -> exact_end = ( UChar * ) NULL		3461812	0		=			
ANR	3461847	PtrMemberAccess	reg -> exact_end		3461812	0					
ANR	3461848	Identifier	reg		3461812	0					
ANR	3461849	Identifier	exact_end		3461812	1					
ANR	3461850	CastExpression	( UChar * ) NULL		3461812	1					
ANR	3461851	CastTarget	UChar *		3461812	0					
ANR	3461852	Identifier	NULL		3461812	1					
ANR	3461853	ExpressionStatement	reg -> threshold_len = 0	5020:2:113540:113562	3461812	6	True				
ANR	3461854	AssignmentExpression	reg -> threshold_len = 0		3461812	0		=			
ANR	3461855	PtrMemberAccess	reg -> threshold_len		3461812	0					
ANR	3461856	Identifier	reg		3461812	0					
ANR	3461857	Identifier	threshold_len		3461812	1					
ANR	3461858	PrimaryExpression	0		3461812	1					
ANR	3461859	IfStatement	if ( IS_NOT_NULL ( reg -> exact ) )		3461812	7					
ANR	3461860	Condition	IS_NOT_NULL ( reg -> exact )	5021:6:113570:113592	3461812	0	True				
ANR	3461861	CallExpression	IS_NOT_NULL ( reg -> exact )		3461812	0					
ANR	3461862	Callee	IS_NOT_NULL		3461812	0					
ANR	3461863	Identifier	IS_NOT_NULL		3461812	0					
ANR	3461864	ArgumentList	reg -> exact		3461812	1					
ANR	3461865	Argument	reg -> exact		3461812	0					
ANR	3461866	PtrMemberAccess	reg -> exact		3461812	0					
ANR	3461867	Identifier	reg		3461812	0					
ANR	3461868	Identifier	exact		3461812	1					
ANR	3461869	CompoundStatement		9:31:243:243	3461812	1					
ANR	3461870	ExpressionStatement	xfree ( reg -> exact )	5022:4:113601:113618	3461812	0	True				
ANR	3461871	CallExpression	xfree ( reg -> exact )		3461812	0					
ANR	3461872	Callee	xfree		3461812	0					
ANR	3461873	Identifier	xfree		3461812	0					
ANR	3461874	ArgumentList	reg -> exact		3461812	1					
ANR	3461875	Argument	reg -> exact		3461812	0					
ANR	3461876	PtrMemberAccess	reg -> exact		3461812	0					
ANR	3461877	Identifier	reg		3461812	0					
ANR	3461878	Identifier	exact		3461812	1					
ANR	3461879	ExpressionStatement	reg -> exact = ( UChar * ) NULL	5023:4:113624:113650	3461812	1	True				
ANR	3461880	AssignmentExpression	reg -> exact = ( UChar * ) NULL		3461812	0		=			
ANR	3461881	PtrMemberAccess	reg -> exact		3461812	0					
ANR	3461882	Identifier	reg		3461812	0					
ANR	3461883	Identifier	exact		3461812	1					
ANR	3461884	CastExpression	( UChar * ) NULL		3461812	1					
ANR	3461885	CastTarget	UChar *		3461812	0					
ANR	3461886	Identifier	NULL		3461812	1					
ANR	3461887	ReturnType	static void		3461812	1					
ANR	3461888	Identifier	clear_optimize_info		3461812	2					
ANR	3461889	ParameterList	regex_t * reg		3461812	3					
ANR	3461890	Parameter	regex_t * reg	5012:20:113337:113348	3461812	0	True				
ANR	3461891	ParameterType	regex_t *		3461812	0					
ANR	3461892	Identifier	reg		3461812	1					
ANR	3461893	CFGEntryNode	ENTRY		3461812		True				
ANR	3461894	CFGExitNode	EXIT		3461812		True				
ANR	3461895	Symbol	IS_NOT_NULL		3461812						
ANR	3461896	Symbol	reg -> anchor		3461812						
ANR	3461897	Symbol	NULL		3461812						
ANR	3461898	Symbol	reg -> anchor_dmin		3461812						
ANR	3461899	Symbol	reg -> threshold_len		3461812						
ANR	3461900	Symbol	reg -> exact_end		3461812						
ANR	3461901	Symbol	reg		3461812						
ANR	3461902	Symbol	reg -> anchor_dmax		3461812						
ANR	3461903	Symbol	reg -> optimize		3461812						
ANR	3461904	Symbol	reg -> sub_anchor		3461812						
ANR	3461905	Symbol	reg -> exact		3461812						
ANR	3461906	Symbol	ONIG_OPTIMIZE_NONE		3461812						
ANR	3461907	Symbol	* reg		3461812						
ANR	3461908	Function	print_enc_string	5029:0:113678:114230							
ANR	3461909	FunctionDef	"print_enc_string (FILE * fp , OnigEncoding enc , const UChar * s , const UChar * end)"		3461908	0					
ANR	3461910	CompoundStatement		5031:0:113777:114230	3461908	0					
ANR	3461911	ExpressionStatement	"fprintf ( fp , ""\\nPATTERN: /"" )"	5032:2:113781:113808	3461908	0	True				
ANR	3461912	CallExpression	"fprintf ( fp , ""\\nPATTERN: /"" )"		3461908	0					
ANR	3461913	Callee	fprintf		3461908	0					
ANR	3461914	Identifier	fprintf		3461908	0					
ANR	3461915	ArgumentList	fp		3461908	1					
ANR	3461916	Argument	fp		3461908	0					
ANR	3461917	Identifier	fp		3461908	0					
ANR	3461918	Argument	"""\\nPATTERN: /"""		3461908	1					
ANR	3461919	PrimaryExpression	"""\\nPATTERN: /"""		3461908	0					
ANR	3461920	IfStatement	if ( ONIGENC_MBC_MINLEN ( enc ) > 1 )		3461908	1					
ANR	3461921	Condition	ONIGENC_MBC_MINLEN ( enc ) > 1	5034:6:113817:113843	3461908	0	True				
ANR	3461922	RelationalExpression	ONIGENC_MBC_MINLEN ( enc ) > 1		3461908	0		>			
ANR	3461923	CallExpression	ONIGENC_MBC_MINLEN ( enc )		3461908	0					
ANR	3461924	Callee	ONIGENC_MBC_MINLEN		3461908	0					
ANR	3461925	Identifier	ONIGENC_MBC_MINLEN		3461908	0					
ANR	3461926	ArgumentList	enc		3461908	1					
ANR	3461927	Argument	enc		3461908	0					
ANR	3461928	Identifier	enc		3461908	0					
ANR	3461929	PrimaryExpression	1		3461908	1					
ANR	3461930	CompoundStatement		6:4:94:112	3461908	1					
ANR	3461931	IdentifierDeclStatement	const UChar * p ;	5035:4:113852:113866	3461908	0	True				
ANR	3461932	IdentifierDecl	* p		3461908	0					
ANR	3461933	IdentifierDeclType	const UChar *		3461908	0					
ANR	3461934	Identifier	p		3461908	1					
ANR	3461935	IdentifierDeclStatement	OnigCodePoint code ;	5036:4:113872:113890	3461908	1	True				
ANR	3461936	IdentifierDecl	code		3461908	0					
ANR	3461937	IdentifierDeclType	OnigCodePoint		3461908	0					
ANR	3461938	Identifier	code		3461908	1					
ANR	3461939	ExpressionStatement	p = s	5038:4:113897:113902	3461908	2	True				
ANR	3461940	AssignmentExpression	p = s		3461908	0		=			
ANR	3461941	Identifier	p		3461908	0					
ANR	3461942	Identifier	s		3461908	1					
ANR	3461943	WhileStatement	while ( p < end )		3461908	3					
ANR	3461944	Condition	p < end	5039:11:113915:113921	3461908	0	True				
ANR	3461945	RelationalExpression	p < end		3461908	0		<			
ANR	3461946	Identifier	p		3461908	0					
ANR	3461947	Identifier	end		3461908	1					
ANR	3461948	CompoundStatement		9:20:146:146	3461908	1					
ANR	3461949	ExpressionStatement	"code = ONIGENC_MBC_TO_CODE ( enc , p , end )"	5040:6:113932:113971	3461908	0	True				
ANR	3461950	AssignmentExpression	"code = ONIGENC_MBC_TO_CODE ( enc , p , end )"		3461908	0		=			
ANR	3461951	Identifier	code		3461908	0					
ANR	3461952	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , end )"		3461908	1					
ANR	3461953	Callee	ONIGENC_MBC_TO_CODE		3461908	0					
ANR	3461954	Identifier	ONIGENC_MBC_TO_CODE		3461908	0					
ANR	3461955	ArgumentList	enc		3461908	1					
ANR	3461956	Argument	enc		3461908	0					
ANR	3461957	Identifier	enc		3461908	0					
ANR	3461958	Argument	p		3461908	1					
ANR	3461959	Identifier	p		3461908	0					
ANR	3461960	Argument	end		3461908	2					
ANR	3461961	Identifier	end		3461908	0					
ANR	3461962	IfStatement	if ( code >= 0x80 )		3461908	1					
ANR	3461963	Condition	code >= 0x80	5041:10:113983:113994	3461908	0	True				
ANR	3461964	RelationalExpression	code >= 0x80		3461908	0		>=			
ANR	3461965	Identifier	code		3461908	0					
ANR	3461966	PrimaryExpression	0x80		3461908	1					
ANR	3461967	CompoundStatement		11:24:219:219	3461908	1					
ANR	3461968	ExpressionStatement	"fprintf ( fp , "" 0x%04x "" , ( int ) code )"	5042:1:114000:114035	3461908	0	True				
ANR	3461969	CallExpression	"fprintf ( fp , "" 0x%04x "" , ( int ) code )"		3461908	0					
ANR	3461970	Callee	fprintf		3461908	0					
ANR	3461971	Identifier	fprintf		3461908	0					
ANR	3461972	ArgumentList	fp		3461908	1					
ANR	3461973	Argument	fp		3461908	0					
ANR	3461974	Identifier	fp		3461908	0					
ANR	3461975	Argument	""" 0x%04x """		3461908	1					
ANR	3461976	PrimaryExpression	""" 0x%04x """		3461908	0					
ANR	3461977	Argument	( int ) code		3461908	2					
ANR	3461978	CastExpression	( int ) code		3461908	0					
ANR	3461979	CastTarget	int		3461908	0					
ANR	3461980	Identifier	code		3461908	1					
ANR	3461981	ElseStatement	else		3461908	0					
ANR	3461982	CompoundStatement		14:11:278:278	3461908	0					
ANR	3461983	ExpressionStatement	"fputc ( ( int ) code , fp )"	5045:1:114059:114080	3461908	0	True				
ANR	3461984	CallExpression	"fputc ( ( int ) code , fp )"		3461908	0					
ANR	3461985	Callee	fputc		3461908	0					
ANR	3461986	Identifier	fputc		3461908	0					
ANR	3461987	ArgumentList	( int ) code		3461908	1					
ANR	3461988	Argument	( int ) code		3461908	0					
ANR	3461989	CastExpression	( int ) code		3461908	0					
ANR	3461990	CastTarget	int		3461908	0					
ANR	3461991	Identifier	code		3461908	1					
ANR	3461992	Argument	fp		3461908	1					
ANR	3461993	Identifier	fp		3461908	0					
ANR	3461994	ExpressionStatement	"p += enclen ( enc , p )"	5048:6:114097:114116	3461908	2	True				
ANR	3461995	AssignmentExpression	"p += enclen ( enc , p )"		3461908	0		+=			
ANR	3461996	Identifier	p		3461908	0					
ANR	3461997	CallExpression	"enclen ( enc , p )"		3461908	1					
ANR	3461998	Callee	enclen		3461908	0					
ANR	3461999	Identifier	enclen		3461908	0					
ANR	3462000	ArgumentList	enc		3461908	1					
ANR	3462001	Argument	enc		3461908	0					
ANR	3462002	Identifier	enc		3461908	0					
ANR	3462003	Argument	p		3461908	1					
ANR	3462004	Identifier	p		3461908	0					
ANR	3462005	ElseStatement	else		3461908	0					
ANR	3462006	CompoundStatement		21:7:357:357	3461908	0					
ANR	3462007	WhileStatement	while ( s < end )		3461908	0					
ANR	3462008	Condition	s < end	5052:11:114148:114154	3461908	0	True				
ANR	3462009	RelationalExpression	s < end		3461908	0		<			
ANR	3462010	Identifier	s		3461908	0					
ANR	3462011	Identifier	end		3461908	1					
ANR	3462012	CompoundStatement		22:20:379:379	3461908	1					
ANR	3462013	ExpressionStatement	"fputc ( ( int ) * s , fp )"	5053:6:114165:114184	3461908	0	True				
ANR	3462014	CallExpression	"fputc ( ( int ) * s , fp )"		3461908	0					
ANR	3462015	Callee	fputc		3461908	0					
ANR	3462016	Identifier	fputc		3461908	0					
ANR	3462017	ArgumentList	( int ) * s		3461908	1					
ANR	3462018	Argument	( int ) * s		3461908	0					
ANR	3462019	CastExpression	( int ) * s		3461908	0					
ANR	3462020	CastTarget	int		3461908	0					
ANR	3462021	UnaryOperationExpression	* s		3461908	1					
ANR	3462022	UnaryOperator	*		3461908	0					
ANR	3462023	Identifier	s		3461908	1					
ANR	3462024	Argument	fp		3461908	1					
ANR	3462025	Identifier	fp		3461908	0					
ANR	3462026	ExpressionStatement	s ++	5054:6:114192:114195	3461908	1	True				
ANR	3462027	PostIncDecOperationExpression	s ++		3461908	0					
ANR	3462028	Identifier	s		3461908	0					
ANR	3462029	IncDec	++		3461908	1					
ANR	3462030	ExpressionStatement	"fprintf ( fp , ""/\\n"" )"	5058:2:114210:114228	3461908	2	True				
ANR	3462031	CallExpression	"fprintf ( fp , ""/\\n"" )"		3461908	0					
ANR	3462032	Callee	fprintf		3461908	0					
ANR	3462033	Identifier	fprintf		3461908	0					
ANR	3462034	ArgumentList	fp		3461908	1					
ANR	3462035	Argument	fp		3461908	0					
ANR	3462036	Identifier	fp		3461908	0					
ANR	3462037	Argument	"""/\\n"""		3461908	1					
ANR	3462038	PrimaryExpression	"""/\\n"""		3461908	0					
ANR	3462039	ReturnType	static void		3461908	1					
ANR	3462040	Identifier	print_enc_string		3461908	2					
ANR	3462041	ParameterList	"FILE * fp , OnigEncoding enc , const UChar * s , const UChar * end"		3461908	3					
ANR	3462042	Parameter	FILE * fp	5029:29:113707:113714	3461908	0	True				
ANR	3462043	ParameterType	FILE *		3461908	0					
ANR	3462044	Identifier	fp		3461908	1					
ANR	3462045	Parameter	OnigEncoding enc	5029:39:113717:113732	3461908	1	True				
ANR	3462046	ParameterType	OnigEncoding		3461908	0					
ANR	3462047	Identifier	enc		3461908	1					
ANR	3462048	Parameter	const UChar * s	5030:8:113743:113756	3461908	2	True				
ANR	3462049	ParameterType	const UChar *		3461908	0					
ANR	3462050	Identifier	s		3461908	1					
ANR	3462051	Parameter	const UChar * end	5030:24:113759:113774	3461908	3	True				
ANR	3462052	ParameterType	const UChar *		3461908	0					
ANR	3462053	Identifier	end		3461908	1					
ANR	3462054	CFGEntryNode	ENTRY		3461908		True				
ANR	3462055	CFGExitNode	EXIT		3461908		True				
ANR	3462056	Symbol	p		3461908						
ANR	3462057	Symbol	s		3461908						
ANR	3462058	Symbol	code		3461908						
ANR	3462059	Symbol	ONIGENC_MBC_MINLEN		3461908						
ANR	3462060	Symbol	fp		3461908						
ANR	3462061	Symbol	end		3461908						
ANR	3462062	Symbol	enc		3461908						
ANR	3462063	Symbol	enclen		3461908						
ANR	3462064	Symbol	* s		3461908						
ANR	3462065	Symbol	ONIGENC_MBC_TO_CODE		3461908						
ANR	3462066	Function	print_distance_range	5061:0:114233:114508							
ANR	3462067	FunctionDef	"print_distance_range (FILE * f , OnigDistance a , OnigDistance b)"		3462066	0					
ANR	3462068	CompoundStatement		5063:0:114307:114508	3462066	0					
ANR	3462069	IfStatement	if ( a == ONIG_INFINITE_DISTANCE )		3462066	0					
ANR	3462070	Condition	a == ONIG_INFINITE_DISTANCE	5064:6:114315:114341	3462066	0	True				
ANR	3462071	EqualityExpression	a == ONIG_INFINITE_DISTANCE		3462066	0		==			
ANR	3462072	Identifier	a		3462066	0					
ANR	3462073	Identifier	ONIG_INFINITE_DISTANCE		3462066	1					
ANR	3462074	ExpressionStatement	"fputs ( ""inf"" , f )"	5065:4:114348:114363	3462066	1	True				
ANR	3462075	CallExpression	"fputs ( ""inf"" , f )"		3462066	0					
ANR	3462076	Callee	fputs		3462066	0					
ANR	3462077	Identifier	fputs		3462066	0					
ANR	3462078	ArgumentList	"""inf"""		3462066	1					
ANR	3462079	Argument	"""inf"""		3462066	0					
ANR	3462080	PrimaryExpression	"""inf"""		3462066	0					
ANR	3462081	Argument	f		3462066	1					
ANR	3462082	Identifier	f		3462066	0					
ANR	3462083	ElseStatement	else		3462066	0					
ANR	3462084	ExpressionStatement	"fprintf ( f , ""(%u)"" , a )"	5067:4:114376:114397	3462066	0	True				
ANR	3462085	CallExpression	"fprintf ( f , ""(%u)"" , a )"		3462066	0					
ANR	3462086	Callee	fprintf		3462066	0					
ANR	3462087	Identifier	fprintf		3462066	0					
ANR	3462088	ArgumentList	f		3462066	1					
ANR	3462089	Argument	f		3462066	0					
ANR	3462090	Identifier	f		3462066	0					
ANR	3462091	Argument	"""(%u)"""		3462066	1					
ANR	3462092	PrimaryExpression	"""(%u)"""		3462066	0					
ANR	3462093	Argument	a		3462066	2					
ANR	3462094	Identifier	a		3462066	0					
ANR	3462095	ExpressionStatement	"fputs ( ""-"" , f )"	5069:2:114402:114415	3462066	1	True				
ANR	3462096	CallExpression	"fputs ( ""-"" , f )"		3462066	0					
ANR	3462097	Callee	fputs		3462066	0					
ANR	3462098	Identifier	fputs		3462066	0					
ANR	3462099	ArgumentList	"""-"""		3462066	1					
ANR	3462100	Argument	"""-"""		3462066	0					
ANR	3462101	PrimaryExpression	"""-"""		3462066	0					
ANR	3462102	Argument	f		3462066	1					
ANR	3462103	Identifier	f		3462066	0					
ANR	3462104	IfStatement	if ( b == ONIG_INFINITE_DISTANCE )		3462066	2					
ANR	3462105	Condition	b == ONIG_INFINITE_DISTANCE	5071:6:114424:114450	3462066	0	True				
ANR	3462106	EqualityExpression	b == ONIG_INFINITE_DISTANCE		3462066	0		==			
ANR	3462107	Identifier	b		3462066	0					
ANR	3462108	Identifier	ONIG_INFINITE_DISTANCE		3462066	1					
ANR	3462109	ExpressionStatement	"fputs ( ""inf"" , f )"	5072:4:114457:114472	3462066	1	True				
ANR	3462110	CallExpression	"fputs ( ""inf"" , f )"		3462066	0					
ANR	3462111	Callee	fputs		3462066	0					
ANR	3462112	Identifier	fputs		3462066	0					
ANR	3462113	ArgumentList	"""inf"""		3462066	1					
ANR	3462114	Argument	"""inf"""		3462066	0					
ANR	3462115	PrimaryExpression	"""inf"""		3462066	0					
ANR	3462116	Argument	f		3462066	1					
ANR	3462117	Identifier	f		3462066	0					
ANR	3462118	ElseStatement	else		3462066	0					
ANR	3462119	ExpressionStatement	"fprintf ( f , ""(%u)"" , b )"	5074:4:114485:114506	3462066	0	True				
ANR	3462120	CallExpression	"fprintf ( f , ""(%u)"" , b )"		3462066	0					
ANR	3462121	Callee	fprintf		3462066	0					
ANR	3462122	Identifier	fprintf		3462066	0					
ANR	3462123	ArgumentList	f		3462066	1					
ANR	3462124	Argument	f		3462066	0					
ANR	3462125	Identifier	f		3462066	0					
ANR	3462126	Argument	"""(%u)"""		3462066	1					
ANR	3462127	PrimaryExpression	"""(%u)"""		3462066	0					
ANR	3462128	Argument	b		3462066	2					
ANR	3462129	Identifier	b		3462066	0					
ANR	3462130	ReturnType	static void		3462066	1					
ANR	3462131	Identifier	print_distance_range		3462066	2					
ANR	3462132	ParameterList	"FILE * f , OnigDistance a , OnigDistance b"		3462066	3					
ANR	3462133	Parameter	FILE * f	5062:21:114266:114272	3462066	0	True				
ANR	3462134	ParameterType	FILE *		3462066	0					
ANR	3462135	Identifier	f		3462066	1					
ANR	3462136	Parameter	OnigDistance a	5062:30:114275:114288	3462066	1	True				
ANR	3462137	ParameterType	OnigDistance		3462066	0					
ANR	3462138	Identifier	a		3462066	1					
ANR	3462139	Parameter	OnigDistance b	5062:46:114291:114304	3462066	2	True				
ANR	3462140	ParameterType	OnigDistance		3462066	0					
ANR	3462141	Identifier	b		3462066	1					
ANR	3462142	CFGEntryNode	ENTRY		3462066		True				
ANR	3462143	CFGExitNode	EXIT		3462066		True				
ANR	3462144	Symbol	a		3462066						
ANR	3462145	Symbol	ONIG_INFINITE_DISTANCE		3462066						
ANR	3462146	Symbol	b		3462066						
ANR	3462147	Symbol	f		3462066						
ANR	3462148	Function	print_anchor	5077:0:114511:115462							
ANR	3462149	FunctionDef	"print_anchor (FILE * f , int anchor)"		3462148	0					
ANR	3462150	CompoundStatement		5079:0:114557:115462	3462148	0					
ANR	3462151	IdentifierDeclStatement	int q = 0 ;	5080:2:114561:114570	3462148	0	True				
ANR	3462152	IdentifierDecl	q = 0		3462148	0					
ANR	3462153	IdentifierDeclType	int		3462148	0					
ANR	3462154	Identifier	q		3462148	1					
ANR	3462155	AssignmentExpression	q = 0		3462148	2		=			
ANR	3462156	Identifier	q		3462148	0					
ANR	3462157	PrimaryExpression	0		3462148	1					
ANR	3462158	ExpressionStatement	"fprintf ( f , ""["" )"	5082:2:114575:114590	3462148	1	True				
ANR	3462159	CallExpression	"fprintf ( f , ""["" )"		3462148	0					
ANR	3462160	Callee	fprintf		3462148	0					
ANR	3462161	Identifier	fprintf		3462148	0					
ANR	3462162	ArgumentList	f		3462148	1					
ANR	3462163	Argument	f		3462148	0					
ANR	3462164	Identifier	f		3462148	0					
ANR	3462165	Argument	"""["""		3462148	1					
ANR	3462166	PrimaryExpression	"""["""		3462148	0					
ANR	3462167	IfStatement	if ( anchor & ANCHOR_BEGIN_BUF )		3462148	2					
ANR	3462168	Condition	anchor & ANCHOR_BEGIN_BUF	5084:6:114599:114623	3462148	0	True				
ANR	3462169	BitAndExpression	anchor & ANCHOR_BEGIN_BUF		3462148	0		&			
ANR	3462170	Identifier	anchor		3462148	0					
ANR	3462171	Identifier	ANCHOR_BEGIN_BUF		3462148	1					
ANR	3462172	CompoundStatement		6:33:68:68	3462148	1					
ANR	3462173	ExpressionStatement	"fprintf ( f , ""begin-buf"" )"	5085:4:114632:114655	3462148	0	True				
ANR	3462174	CallExpression	"fprintf ( f , ""begin-buf"" )"		3462148	0					
ANR	3462175	Callee	fprintf		3462148	0					
ANR	3462176	Identifier	fprintf		3462148	0					
ANR	3462177	ArgumentList	f		3462148	1					
ANR	3462178	Argument	f		3462148	0					
ANR	3462179	Identifier	f		3462148	0					
ANR	3462180	Argument	"""begin-buf"""		3462148	1					
ANR	3462181	PrimaryExpression	"""begin-buf"""		3462148	0					
ANR	3462182	ExpressionStatement	q = 1	5086:4:114661:114666	3462148	1	True				
ANR	3462183	AssignmentExpression	q = 1		3462148	0		=			
ANR	3462184	Identifier	q		3462148	0					
ANR	3462185	PrimaryExpression	1		3462148	1					
ANR	3462186	IfStatement	if ( anchor & ANCHOR_BEGIN_LINE )		3462148	3					
ANR	3462187	Condition	anchor & ANCHOR_BEGIN_LINE	5088:6:114678:114703	3462148	0	True				
ANR	3462188	BitAndExpression	anchor & ANCHOR_BEGIN_LINE		3462148	0		&			
ANR	3462189	Identifier	anchor		3462148	0					
ANR	3462190	Identifier	ANCHOR_BEGIN_LINE		3462148	1					
ANR	3462191	CompoundStatement		10:34:148:148	3462148	1					
ANR	3462192	IfStatement	if ( q )		3462148	0					
ANR	3462193	Condition	q	5089:8:114716:114716	3462148	0	True				
ANR	3462194	Identifier	q		3462148	0					
ANR	3462195	ExpressionStatement	"fprintf ( f , "", "" )"	5089:11:114719:114735	3462148	1	True				
ANR	3462196	CallExpression	"fprintf ( f , "", "" )"		3462148	0					
ANR	3462197	Callee	fprintf		3462148	0					
ANR	3462198	Identifier	fprintf		3462148	0					
ANR	3462199	ArgumentList	f		3462148	1					
ANR	3462200	Argument	f		3462148	0					
ANR	3462201	Identifier	f		3462148	0					
ANR	3462202	Argument	""", """		3462148	1					
ANR	3462203	PrimaryExpression	""", """		3462148	0					
ANR	3462204	ExpressionStatement	q = 1	5090:4:114741:114746	3462148	1	True				
ANR	3462205	AssignmentExpression	q = 1		3462148	0		=			
ANR	3462206	Identifier	q		3462148	0					
ANR	3462207	PrimaryExpression	1		3462148	1					
ANR	3462208	ExpressionStatement	"fprintf ( f , ""begin-line"" )"	5091:4:114752:114776	3462148	2	True				
ANR	3462209	CallExpression	"fprintf ( f , ""begin-line"" )"		3462148	0					
ANR	3462210	Callee	fprintf		3462148	0					
ANR	3462211	Identifier	fprintf		3462148	0					
ANR	3462212	ArgumentList	f		3462148	1					
ANR	3462213	Argument	f		3462148	0					
ANR	3462214	Identifier	f		3462148	0					
ANR	3462215	Argument	"""begin-line"""		3462148	1					
ANR	3462216	PrimaryExpression	"""begin-line"""		3462148	0					
ANR	3462217	IfStatement	if ( anchor & ANCHOR_BEGIN_POSITION )		3462148	4					
ANR	3462218	Condition	anchor & ANCHOR_BEGIN_POSITION	5093:6:114788:114817	3462148	0	True				
ANR	3462219	BitAndExpression	anchor & ANCHOR_BEGIN_POSITION		3462148	0		&			
ANR	3462220	Identifier	anchor		3462148	0					
ANR	3462221	Identifier	ANCHOR_BEGIN_POSITION		3462148	1					
ANR	3462222	CompoundStatement		15:38:262:262	3462148	1					
ANR	3462223	IfStatement	if ( q )		3462148	0					
ANR	3462224	Condition	q	5094:8:114830:114830	3462148	0	True				
ANR	3462225	Identifier	q		3462148	0					
ANR	3462226	ExpressionStatement	"fprintf ( f , "", "" )"	5094:11:114833:114849	3462148	1	True				
ANR	3462227	CallExpression	"fprintf ( f , "", "" )"		3462148	0					
ANR	3462228	Callee	fprintf		3462148	0					
ANR	3462229	Identifier	fprintf		3462148	0					
ANR	3462230	ArgumentList	f		3462148	1					
ANR	3462231	Argument	f		3462148	0					
ANR	3462232	Identifier	f		3462148	0					
ANR	3462233	Argument	""", """		3462148	1					
ANR	3462234	PrimaryExpression	""", """		3462148	0					
ANR	3462235	ExpressionStatement	q = 1	5095:4:114855:114860	3462148	1	True				
ANR	3462236	AssignmentExpression	q = 1		3462148	0		=			
ANR	3462237	Identifier	q		3462148	0					
ANR	3462238	PrimaryExpression	1		3462148	1					
ANR	3462239	ExpressionStatement	"fprintf ( f , ""begin-pos"" )"	5096:4:114866:114889	3462148	2	True				
ANR	3462240	CallExpression	"fprintf ( f , ""begin-pos"" )"		3462148	0					
ANR	3462241	Callee	fprintf		3462148	0					
ANR	3462242	Identifier	fprintf		3462148	0					
ANR	3462243	ArgumentList	f		3462148	1					
ANR	3462244	Argument	f		3462148	0					
ANR	3462245	Identifier	f		3462148	0					
ANR	3462246	Argument	"""begin-pos"""		3462148	1					
ANR	3462247	PrimaryExpression	"""begin-pos"""		3462148	0					
ANR	3462248	IfStatement	if ( anchor & ANCHOR_END_BUF )		3462148	5					
ANR	3462249	Condition	anchor & ANCHOR_END_BUF	5098:6:114901:114923	3462148	0	True				
ANR	3462250	BitAndExpression	anchor & ANCHOR_END_BUF		3462148	0		&			
ANR	3462251	Identifier	anchor		3462148	0					
ANR	3462252	Identifier	ANCHOR_END_BUF		3462148	1					
ANR	3462253	CompoundStatement		20:31:368:368	3462148	1					
ANR	3462254	IfStatement	if ( q )		3462148	0					
ANR	3462255	Condition	q	5099:8:114936:114936	3462148	0	True				
ANR	3462256	Identifier	q		3462148	0					
ANR	3462257	ExpressionStatement	"fprintf ( f , "", "" )"	5099:11:114939:114955	3462148	1	True				
ANR	3462258	CallExpression	"fprintf ( f , "", "" )"		3462148	0					
ANR	3462259	Callee	fprintf		3462148	0					
ANR	3462260	Identifier	fprintf		3462148	0					
ANR	3462261	ArgumentList	f		3462148	1					
ANR	3462262	Argument	f		3462148	0					
ANR	3462263	Identifier	f		3462148	0					
ANR	3462264	Argument	""", """		3462148	1					
ANR	3462265	PrimaryExpression	""", """		3462148	0					
ANR	3462266	ExpressionStatement	q = 1	5100:4:114961:114966	3462148	1	True				
ANR	3462267	AssignmentExpression	q = 1		3462148	0		=			
ANR	3462268	Identifier	q		3462148	0					
ANR	3462269	PrimaryExpression	1		3462148	1					
ANR	3462270	ExpressionStatement	"fprintf ( f , ""end-buf"" )"	5101:4:114972:114993	3462148	2	True				
ANR	3462271	CallExpression	"fprintf ( f , ""end-buf"" )"		3462148	0					
ANR	3462272	Callee	fprintf		3462148	0					
ANR	3462273	Identifier	fprintf		3462148	0					
ANR	3462274	ArgumentList	f		3462148	1					
ANR	3462275	Argument	f		3462148	0					
ANR	3462276	Identifier	f		3462148	0					
ANR	3462277	Argument	"""end-buf"""		3462148	1					
ANR	3462278	PrimaryExpression	"""end-buf"""		3462148	0					
ANR	3462279	IfStatement	if ( anchor & ANCHOR_SEMI_END_BUF )		3462148	6					
ANR	3462280	Condition	anchor & ANCHOR_SEMI_END_BUF	5103:6:115005:115032	3462148	0	True				
ANR	3462281	BitAndExpression	anchor & ANCHOR_SEMI_END_BUF		3462148	0		&			
ANR	3462282	Identifier	anchor		3462148	0					
ANR	3462283	Identifier	ANCHOR_SEMI_END_BUF		3462148	1					
ANR	3462284	CompoundStatement		25:36:477:477	3462148	1					
ANR	3462285	IfStatement	if ( q )		3462148	0					
ANR	3462286	Condition	q	5104:8:115045:115045	3462148	0	True				
ANR	3462287	Identifier	q		3462148	0					
ANR	3462288	ExpressionStatement	"fprintf ( f , "", "" )"	5104:11:115048:115064	3462148	1	True				
ANR	3462289	CallExpression	"fprintf ( f , "", "" )"		3462148	0					
ANR	3462290	Callee	fprintf		3462148	0					
ANR	3462291	Identifier	fprintf		3462148	0					
ANR	3462292	ArgumentList	f		3462148	1					
ANR	3462293	Argument	f		3462148	0					
ANR	3462294	Identifier	f		3462148	0					
ANR	3462295	Argument	""", """		3462148	1					
ANR	3462296	PrimaryExpression	""", """		3462148	0					
ANR	3462297	ExpressionStatement	q = 1	5105:4:115070:115075	3462148	1	True				
ANR	3462298	AssignmentExpression	q = 1		3462148	0		=			
ANR	3462299	Identifier	q		3462148	0					
ANR	3462300	PrimaryExpression	1		3462148	1					
ANR	3462301	ExpressionStatement	"fprintf ( f , ""semi-end-buf"" )"	5106:4:115081:115107	3462148	2	True				
ANR	3462302	CallExpression	"fprintf ( f , ""semi-end-buf"" )"		3462148	0					
ANR	3462303	Callee	fprintf		3462148	0					
ANR	3462304	Identifier	fprintf		3462148	0					
ANR	3462305	ArgumentList	f		3462148	1					
ANR	3462306	Argument	f		3462148	0					
ANR	3462307	Identifier	f		3462148	0					
ANR	3462308	Argument	"""semi-end-buf"""		3462148	1					
ANR	3462309	PrimaryExpression	"""semi-end-buf"""		3462148	0					
ANR	3462310	IfStatement	if ( anchor & ANCHOR_END_LINE )		3462148	7					
ANR	3462311	Condition	anchor & ANCHOR_END_LINE	5108:6:115119:115142	3462148	0	True				
ANR	3462312	BitAndExpression	anchor & ANCHOR_END_LINE		3462148	0		&			
ANR	3462313	Identifier	anchor		3462148	0					
ANR	3462314	Identifier	ANCHOR_END_LINE		3462148	1					
ANR	3462315	CompoundStatement		30:32:587:587	3462148	1					
ANR	3462316	IfStatement	if ( q )		3462148	0					
ANR	3462317	Condition	q	5109:8:115155:115155	3462148	0	True				
ANR	3462318	Identifier	q		3462148	0					
ANR	3462319	ExpressionStatement	"fprintf ( f , "", "" )"	5109:11:115158:115174	3462148	1	True				
ANR	3462320	CallExpression	"fprintf ( f , "", "" )"		3462148	0					
ANR	3462321	Callee	fprintf		3462148	0					
ANR	3462322	Identifier	fprintf		3462148	0					
ANR	3462323	ArgumentList	f		3462148	1					
ANR	3462324	Argument	f		3462148	0					
ANR	3462325	Identifier	f		3462148	0					
ANR	3462326	Argument	""", """		3462148	1					
ANR	3462327	PrimaryExpression	""", """		3462148	0					
ANR	3462328	ExpressionStatement	q = 1	5110:4:115180:115185	3462148	1	True				
ANR	3462329	AssignmentExpression	q = 1		3462148	0		=			
ANR	3462330	Identifier	q		3462148	0					
ANR	3462331	PrimaryExpression	1		3462148	1					
ANR	3462332	ExpressionStatement	"fprintf ( f , ""end-line"" )"	5111:4:115191:115213	3462148	2	True				
ANR	3462333	CallExpression	"fprintf ( f , ""end-line"" )"		3462148	0					
ANR	3462334	Callee	fprintf		3462148	0					
ANR	3462335	Identifier	fprintf		3462148	0					
ANR	3462336	ArgumentList	f		3462148	1					
ANR	3462337	Argument	f		3462148	0					
ANR	3462338	Identifier	f		3462148	0					
ANR	3462339	Argument	"""end-line"""		3462148	1					
ANR	3462340	PrimaryExpression	"""end-line"""		3462148	0					
ANR	3462341	IfStatement	if ( anchor & ANCHOR_ANYCHAR_STAR )		3462148	8					
ANR	3462342	Condition	anchor & ANCHOR_ANYCHAR_STAR	5113:6:115225:115252	3462148	0	True				
ANR	3462343	BitAndExpression	anchor & ANCHOR_ANYCHAR_STAR		3462148	0		&			
ANR	3462344	Identifier	anchor		3462148	0					
ANR	3462345	Identifier	ANCHOR_ANYCHAR_STAR		3462148	1					
ANR	3462346	CompoundStatement		35:36:697:697	3462148	1					
ANR	3462347	IfStatement	if ( q )		3462148	0					
ANR	3462348	Condition	q	5114:8:115265:115265	3462148	0	True				
ANR	3462349	Identifier	q		3462148	0					
ANR	3462350	ExpressionStatement	"fprintf ( f , "", "" )"	5114:11:115268:115284	3462148	1	True				
ANR	3462351	CallExpression	"fprintf ( f , "", "" )"		3462148	0					
ANR	3462352	Callee	fprintf		3462148	0					
ANR	3462353	Identifier	fprintf		3462148	0					
ANR	3462354	ArgumentList	f		3462148	1					
ANR	3462355	Argument	f		3462148	0					
ANR	3462356	Identifier	f		3462148	0					
ANR	3462357	Argument	""", """		3462148	1					
ANR	3462358	PrimaryExpression	""", """		3462148	0					
ANR	3462359	ExpressionStatement	q = 1	5115:4:115290:115295	3462148	1	True				
ANR	3462360	AssignmentExpression	q = 1		3462148	0		=			
ANR	3462361	Identifier	q		3462148	0					
ANR	3462362	PrimaryExpression	1		3462148	1					
ANR	3462363	ExpressionStatement	"fprintf ( f , ""anychar-star"" )"	5116:4:115301:115327	3462148	2	True				
ANR	3462364	CallExpression	"fprintf ( f , ""anychar-star"" )"		3462148	0					
ANR	3462365	Callee	fprintf		3462148	0					
ANR	3462366	Identifier	fprintf		3462148	0					
ANR	3462367	ArgumentList	f		3462148	1					
ANR	3462368	Argument	f		3462148	0					
ANR	3462369	Identifier	f		3462148	0					
ANR	3462370	Argument	"""anychar-star"""		3462148	1					
ANR	3462371	PrimaryExpression	"""anychar-star"""		3462148	0					
ANR	3462372	IfStatement	if ( anchor & ANCHOR_ANYCHAR_STAR_ML )		3462148	9					
ANR	3462373	Condition	anchor & ANCHOR_ANYCHAR_STAR_ML	5118:6:115339:115369	3462148	0	True				
ANR	3462374	BitAndExpression	anchor & ANCHOR_ANYCHAR_STAR_ML		3462148	0		&			
ANR	3462375	Identifier	anchor		3462148	0					
ANR	3462376	Identifier	ANCHOR_ANYCHAR_STAR_ML		3462148	1					
ANR	3462377	CompoundStatement		40:39:814:814	3462148	1					
ANR	3462378	IfStatement	if ( q )		3462148	0					
ANR	3462379	Condition	q	5119:8:115382:115382	3462148	0	True				
ANR	3462380	Identifier	q		3462148	0					
ANR	3462381	ExpressionStatement	"fprintf ( f , "", "" )"	5119:11:115385:115401	3462148	1	True				
ANR	3462382	CallExpression	"fprintf ( f , "", "" )"		3462148	0					
ANR	3462383	Callee	fprintf		3462148	0					
ANR	3462384	Identifier	fprintf		3462148	0					
ANR	3462385	ArgumentList	f		3462148	1					
ANR	3462386	Argument	f		3462148	0					
ANR	3462387	Identifier	f		3462148	0					
ANR	3462388	Argument	""", """		3462148	1					
ANR	3462389	PrimaryExpression	""", """		3462148	0					
ANR	3462390	ExpressionStatement	"fprintf ( f , ""anychar-star-pl"" )"	5120:4:115407:115436	3462148	1	True				
ANR	3462391	CallExpression	"fprintf ( f , ""anychar-star-pl"" )"		3462148	0					
ANR	3462392	Callee	fprintf		3462148	0					
ANR	3462393	Identifier	fprintf		3462148	0					
ANR	3462394	ArgumentList	f		3462148	1					
ANR	3462395	Argument	f		3462148	0					
ANR	3462396	Identifier	f		3462148	0					
ANR	3462397	Argument	"""anychar-star-pl"""		3462148	1					
ANR	3462398	PrimaryExpression	"""anychar-star-pl"""		3462148	0					
ANR	3462399	ExpressionStatement	"fprintf ( f , ""]"" )"	5123:2:115445:115460	3462148	10	True				
ANR	3462400	CallExpression	"fprintf ( f , ""]"" )"		3462148	0					
ANR	3462401	Callee	fprintf		3462148	0					
ANR	3462402	Identifier	fprintf		3462148	0					
ANR	3462403	ArgumentList	f		3462148	1					
ANR	3462404	Argument	f		3462148	0					
ANR	3462405	Identifier	f		3462148	0					
ANR	3462406	Argument	"""]"""		3462148	1					
ANR	3462407	PrimaryExpression	"""]"""		3462148	0					
ANR	3462408	ReturnType	static void		3462148	1					
ANR	3462409	Identifier	print_anchor		3462148	2					
ANR	3462410	ParameterList	"FILE * f , int anchor"		3462148	3					
ANR	3462411	Parameter	FILE * f	5078:13:114536:114542	3462148	0	True				
ANR	3462412	ParameterType	FILE *		3462148	0					
ANR	3462413	Identifier	f		3462148	1					
ANR	3462414	Parameter	int anchor	5078:22:114545:114554	3462148	1	True				
ANR	3462415	ParameterType	int		3462148	0					
ANR	3462416	Identifier	anchor		3462148	1					
ANR	3462417	CFGEntryNode	ENTRY		3462148		True				
ANR	3462418	CFGExitNode	EXIT		3462148		True				
ANR	3462419	Symbol	q		3462148						
ANR	3462420	Symbol	ANCHOR_END_BUF		3462148						
ANR	3462421	Symbol	ANCHOR_ANYCHAR_STAR_ML		3462148						
ANR	3462422	Symbol	ANCHOR_SEMI_END_BUF		3462148						
ANR	3462423	Symbol	ANCHOR_BEGIN_BUF		3462148						
ANR	3462424	Symbol	f		3462148						
ANR	3462425	Symbol	anchor		3462148						
ANR	3462426	Symbol	ANCHOR_BEGIN_POSITION		3462148						
ANR	3462427	Symbol	ANCHOR_END_LINE		3462148						
ANR	3462428	Symbol	ANCHOR_BEGIN_LINE		3462148						
ANR	3462429	Symbol	ANCHOR_ANYCHAR_STAR		3462148						
ANR	3462430	Function	print_optimize_info	5126:0:115465:116847							
ANR	3462431	FunctionDef	"print_optimize_info (FILE * f , regex_t * reg)"		3462430	0					
ANR	3462432	CompoundStatement		5128:0:115520:116847	3462430	0					
ANR	3462433	Statement	static	5129:2:115524:115529	3462430	0	True				
ANR	3462434	IdentifierDeclStatement	"const char * on [ ] = { ""NONE"" , ""EXACT"" , ""EXACT_BM"" , ""EXACT_BM_NOT_REV"" , ""EXACT_IC"" , ""MAP"" } ;"	5129:9:115531:115650	3462430	1	True				
ANR	3462435	IdentifierDecl	"* on [ ] = { ""NONE"" , ""EXACT"" , ""EXACT_BM"" , ""EXACT_BM_NOT_REV"" , ""EXACT_IC"" , ""MAP"" }"		3462430	0					
ANR	3462436	IdentifierDeclType	const char * [ ]		3462430	0					
ANR	3462437	Identifier	on		3462430	1					
ANR	3462438	AssignmentExpression	"* on [ ] = { ""NONE"" , ""EXACT"" , ""EXACT_BM"" , ""EXACT_BM_NOT_REV"" , ""EXACT_IC"" , ""MAP"" }"		3462430	2		=			
ANR	3462439	Identifier	on		3462430	0					
ANR	3462440	InitializerList	"""NONE"""		3462430	1					
ANR	3462441	PrimaryExpression	"""NONE"""		3462430	0					
ANR	3462442	PrimaryExpression	"""EXACT"""		3462430	1					
ANR	3462443	PrimaryExpression	"""EXACT_BM"""		3462430	2					
ANR	3462444	PrimaryExpression	"""EXACT_BM_NOT_REV"""		3462430	3					
ANR	3462445	PrimaryExpression	"""EXACT_IC"""		3462430	4					
ANR	3462446	PrimaryExpression	"""MAP"""		3462430	5					
ANR	3462447	ExpressionStatement	"fprintf ( f , ""optimize: %s\\n"" , on [ reg -> optimize ] )"	5132:2:115655:115702	3462430	2	True				
ANR	3462448	CallExpression	"fprintf ( f , ""optimize: %s\\n"" , on [ reg -> optimize ] )"		3462430	0					
ANR	3462449	Callee	fprintf		3462430	0					
ANR	3462450	Identifier	fprintf		3462430	0					
ANR	3462451	ArgumentList	f		3462430	1					
ANR	3462452	Argument	f		3462430	0					
ANR	3462453	Identifier	f		3462430	0					
ANR	3462454	Argument	"""optimize: %s\\n"""		3462430	1					
ANR	3462455	PrimaryExpression	"""optimize: %s\\n"""		3462430	0					
ANR	3462456	Argument	on [ reg -> optimize ]		3462430	2					
ANR	3462457	ArrayIndexing	on [ reg -> optimize ]		3462430	0					
ANR	3462458	Identifier	on		3462430	0					
ANR	3462459	PtrMemberAccess	reg -> optimize		3462430	1					
ANR	3462460	Identifier	reg		3462430	0					
ANR	3462461	Identifier	optimize		3462430	1					
ANR	3462462	ExpressionStatement	"fprintf ( f , ""  anchor: "" )"	5133:2:115706:115730	3462430	3	True				
ANR	3462463	CallExpression	"fprintf ( f , ""  anchor: "" )"		3462430	0					
ANR	3462464	Callee	fprintf		3462430	0					
ANR	3462465	Identifier	fprintf		3462430	0					
ANR	3462466	ArgumentList	f		3462430	1					
ANR	3462467	Argument	f		3462430	0					
ANR	3462468	Identifier	f		3462430	0					
ANR	3462469	Argument	"""  anchor: """		3462430	1					
ANR	3462470	PrimaryExpression	"""  anchor: """		3462430	0					
ANR	3462471	ExpressionStatement	"print_anchor ( f , reg -> anchor )"	5133:28:115732:115760	3462430	4	True				
ANR	3462472	CallExpression	"print_anchor ( f , reg -> anchor )"		3462430	0					
ANR	3462473	Callee	print_anchor		3462430	0					
ANR	3462474	Identifier	print_anchor		3462430	0					
ANR	3462475	ArgumentList	f		3462430	1					
ANR	3462476	Argument	f		3462430	0					
ANR	3462477	Identifier	f		3462430	0					
ANR	3462478	Argument	reg -> anchor		3462430	1					
ANR	3462479	PtrMemberAccess	reg -> anchor		3462430	0					
ANR	3462480	Identifier	reg		3462430	0					
ANR	3462481	Identifier	anchor		3462430	1					
ANR	3462482	IfStatement	if ( ( reg -> anchor & ANCHOR_END_BUF_MASK ) != 0 )		3462430	5					
ANR	3462483	Condition	( reg -> anchor & ANCHOR_END_BUF_MASK ) != 0	5134:6:115768:115807	3462430	0	True				
ANR	3462484	EqualityExpression	( reg -> anchor & ANCHOR_END_BUF_MASK ) != 0		3462430	0		!=			
ANR	3462485	BitAndExpression	reg -> anchor & ANCHOR_END_BUF_MASK		3462430	0		&			
ANR	3462486	PtrMemberAccess	reg -> anchor		3462430	0					
ANR	3462487	Identifier	reg		3462430	0					
ANR	3462488	Identifier	anchor		3462430	1					
ANR	3462489	Identifier	ANCHOR_END_BUF_MASK		3462430	1					
ANR	3462490	PrimaryExpression	0		3462430	1					
ANR	3462491	ExpressionStatement	"print_distance_range ( f , reg -> anchor_dmin , reg -> anchor_dmax )"	5135:4:115814:115873	3462430	1	True				
ANR	3462492	CallExpression	"print_distance_range ( f , reg -> anchor_dmin , reg -> anchor_dmax )"		3462430	0					
ANR	3462493	Callee	print_distance_range		3462430	0					
ANR	3462494	Identifier	print_distance_range		3462430	0					
ANR	3462495	ArgumentList	f		3462430	1					
ANR	3462496	Argument	f		3462430	0					
ANR	3462497	Identifier	f		3462430	0					
ANR	3462498	Argument	reg -> anchor_dmin		3462430	1					
ANR	3462499	PtrMemberAccess	reg -> anchor_dmin		3462430	0					
ANR	3462500	Identifier	reg		3462430	0					
ANR	3462501	Identifier	anchor_dmin		3462430	1					
ANR	3462502	Argument	reg -> anchor_dmax		3462430	2					
ANR	3462503	PtrMemberAccess	reg -> anchor_dmax		3462430	0					
ANR	3462504	Identifier	reg		3462430	0					
ANR	3462505	Identifier	anchor_dmax		3462430	1					
ANR	3462506	ExpressionStatement	"fprintf ( f , ""\\n"" )"	5136:2:115877:115893	3462430	6	True				
ANR	3462507	CallExpression	"fprintf ( f , ""\\n"" )"		3462430	0					
ANR	3462508	Callee	fprintf		3462430	0					
ANR	3462509	Identifier	fprintf		3462430	0					
ANR	3462510	ArgumentList	f		3462430	1					
ANR	3462511	Argument	f		3462430	0					
ANR	3462512	Identifier	f		3462430	0					
ANR	3462513	Argument	"""\\n"""		3462430	1					
ANR	3462514	PrimaryExpression	"""\\n"""		3462430	0					
ANR	3462515	IfStatement	if ( reg -> optimize )		3462430	7					
ANR	3462516	Condition	reg -> optimize	5138:6:115902:115914	3462430	0	True				
ANR	3462517	PtrMemberAccess	reg -> optimize		3462430	0					
ANR	3462518	Identifier	reg		3462430	0					
ANR	3462519	Identifier	optimize		3462430	1					
ANR	3462520	CompoundStatement		11:21:396:396	3462430	1					
ANR	3462521	ExpressionStatement	"fprintf ( f , ""  sub anchor: "" )"	5139:4:115923:115951	3462430	0	True				
ANR	3462522	CallExpression	"fprintf ( f , ""  sub anchor: "" )"		3462430	0					
ANR	3462523	Callee	fprintf		3462430	0					
ANR	3462524	Identifier	fprintf		3462430	0					
ANR	3462525	ArgumentList	f		3462430	1					
ANR	3462526	Argument	f		3462430	0					
ANR	3462527	Identifier	f		3462430	0					
ANR	3462528	Argument	"""  sub anchor: """		3462430	1					
ANR	3462529	PrimaryExpression	"""  sub anchor: """		3462430	0					
ANR	3462530	ExpressionStatement	"print_anchor ( f , reg -> sub_anchor )"	5139:34:115953:115985	3462430	1	True				
ANR	3462531	CallExpression	"print_anchor ( f , reg -> sub_anchor )"		3462430	0					
ANR	3462532	Callee	print_anchor		3462430	0					
ANR	3462533	Identifier	print_anchor		3462430	0					
ANR	3462534	ArgumentList	f		3462430	1					
ANR	3462535	Argument	f		3462430	0					
ANR	3462536	Identifier	f		3462430	0					
ANR	3462537	Argument	reg -> sub_anchor		3462430	1					
ANR	3462538	PtrMemberAccess	reg -> sub_anchor		3462430	0					
ANR	3462539	Identifier	reg		3462430	0					
ANR	3462540	Identifier	sub_anchor		3462430	1					
ANR	3462541	ExpressionStatement	"fprintf ( f , ""\\n"" )"	5140:4:115991:116007	3462430	2	True				
ANR	3462542	CallExpression	"fprintf ( f , ""\\n"" )"		3462430	0					
ANR	3462543	Callee	fprintf		3462430	0					
ANR	3462544	Identifier	fprintf		3462430	0					
ANR	3462545	ArgumentList	f		3462430	1					
ANR	3462546	Argument	f		3462430	0					
ANR	3462547	Identifier	f		3462430	0					
ANR	3462548	Argument	"""\\n"""		3462430	1					
ANR	3462549	PrimaryExpression	"""\\n"""		3462430	0					
ANR	3462550	ExpressionStatement	"fprintf ( f , ""\\n"" )"	5142:2:116015:116031	3462430	8	True				
ANR	3462551	CallExpression	"fprintf ( f , ""\\n"" )"		3462430	0					
ANR	3462552	Callee	fprintf		3462430	0					
ANR	3462553	Identifier	fprintf		3462430	0					
ANR	3462554	ArgumentList	f		3462430	1					
ANR	3462555	Argument	f		3462430	0					
ANR	3462556	Identifier	f		3462430	0					
ANR	3462557	Argument	"""\\n"""		3462430	1					
ANR	3462558	PrimaryExpression	"""\\n"""		3462430	0					
ANR	3462559	IfStatement	if ( reg -> exact )		3462430	9					
ANR	3462560	Condition	reg -> exact	5144:6:116040:116049	3462430	0	True				
ANR	3462561	PtrMemberAccess	reg -> exact		3462430	0					
ANR	3462562	Identifier	reg		3462430	0					
ANR	3462563	Identifier	exact		3462430	1					
ANR	3462564	CompoundStatement		18:4:537:545	3462430	1					
ANR	3462565	IdentifierDeclStatement	UChar * p ;	5145:4:116058:116066	3462430	0	True				
ANR	3462566	IdentifierDecl	* p		3462430	0					
ANR	3462567	IdentifierDeclType	UChar *		3462430	0					
ANR	3462568	Identifier	p		3462430	1					
ANR	3462569	ExpressionStatement	"fprintf ( f , ""exact: ["" )"	5146:4:116072:116094	3462430	1	True				
ANR	3462570	CallExpression	"fprintf ( f , ""exact: ["" )"		3462430	0					
ANR	3462571	Callee	fprintf		3462430	0					
ANR	3462572	Identifier	fprintf		3462430	0					
ANR	3462573	ArgumentList	f		3462430	1					
ANR	3462574	Argument	f		3462430	0					
ANR	3462575	Identifier	f		3462430	0					
ANR	3462576	Argument	"""exact: ["""		3462430	1					
ANR	3462577	PrimaryExpression	"""exact: ["""		3462430	0					
ANR	3462578	ForStatement	for ( p = reg -> exact ; p < reg -> exact_end ; p ++ )		3462430	2					
ANR	3462579	ForInit	p = reg -> exact ;	5147:9:116105:116119	3462430	0	True				
ANR	3462580	AssignmentExpression	p = reg -> exact		3462430	0		=			
ANR	3462581	Identifier	p		3462430	0					
ANR	3462582	PtrMemberAccess	reg -> exact		3462430	1					
ANR	3462583	Identifier	reg		3462430	0					
ANR	3462584	Identifier	exact		3462430	1					
ANR	3462585	Condition	p < reg -> exact_end	5147:25:116121:116138	3462430	1	True				
ANR	3462586	RelationalExpression	p < reg -> exact_end		3462430	0		<			
ANR	3462587	Identifier	p		3462430	0					
ANR	3462588	PtrMemberAccess	reg -> exact_end		3462430	1					
ANR	3462589	Identifier	reg		3462430	0					
ANR	3462590	Identifier	exact_end		3462430	1					
ANR	3462591	PostIncDecOperationExpression	p ++	5147:45:116141:116143	3462430	2	True				
ANR	3462592	Identifier	p		3462430	0					
ANR	3462593	IncDec	++		3462430	1					
ANR	3462594	CompoundStatement		20:50:625:625	3462430	3					
ANR	3462595	ExpressionStatement	"fputc ( * p , f )"	5148:6:116154:116166	3462430	0	True				
ANR	3462596	CallExpression	"fputc ( * p , f )"		3462430	0					
ANR	3462597	Callee	fputc		3462430	0					
ANR	3462598	Identifier	fputc		3462430	0					
ANR	3462599	ArgumentList	* p		3462430	1					
ANR	3462600	Argument	* p		3462430	0					
ANR	3462601	UnaryOperationExpression	* p		3462430	0					
ANR	3462602	UnaryOperator	*		3462430	0					
ANR	3462603	Identifier	p		3462430	1					
ANR	3462604	Argument	f		3462430	1					
ANR	3462605	Identifier	f		3462430	0					
ANR	3462606	ExpressionStatement	"fprintf ( f , ""]: length: %d\\n"" , ( reg -> exact_end - reg -> exact ) )"	5150:4:116178:116238	3462430	3	True				
ANR	3462607	CallExpression	"fprintf ( f , ""]: length: %d\\n"" , ( reg -> exact_end - reg -> exact ) )"		3462430	0					
ANR	3462608	Callee	fprintf		3462430	0					
ANR	3462609	Identifier	fprintf		3462430	0					
ANR	3462610	ArgumentList	f		3462430	1					
ANR	3462611	Argument	f		3462430	0					
ANR	3462612	Identifier	f		3462430	0					
ANR	3462613	Argument	"""]: length: %d\\n"""		3462430	1					
ANR	3462614	PrimaryExpression	"""]: length: %d\\n"""		3462430	0					
ANR	3462615	Argument	reg -> exact_end - reg -> exact		3462430	2					
ANR	3462616	AdditiveExpression	reg -> exact_end - reg -> exact		3462430	0		-			
ANR	3462617	PtrMemberAccess	reg -> exact_end		3462430	0					
ANR	3462618	Identifier	reg		3462430	0					
ANR	3462619	Identifier	exact_end		3462430	1					
ANR	3462620	PtrMemberAccess	reg -> exact		3462430	1					
ANR	3462621	Identifier	reg		3462430	0					
ANR	3462622	Identifier	exact		3462430	1					
ANR	3462623	ElseStatement	else		3462430	0					
ANR	3462624	IfStatement	if ( reg -> optimize & ONIG_OPTIMIZE_MAP )		3462430	0					
ANR	3462625	Condition	reg -> optimize & ONIG_OPTIMIZE_MAP	5152:11:116255:116287	3462430	0	True				
ANR	3462626	BitAndExpression	reg -> optimize & ONIG_OPTIMIZE_MAP		3462430	0		&			
ANR	3462627	PtrMemberAccess	reg -> optimize		3462430	0					
ANR	3462628	Identifier	reg		3462430	0					
ANR	3462629	Identifier	optimize		3462430	1					
ANR	3462630	Identifier	ONIG_OPTIMIZE_MAP		3462430	1					
ANR	3462631	CompoundStatement		26:4:775:790	3462430	1					
ANR	3462632	IdentifierDeclStatement	"int c , i , n = 0 ;"	5153:4:116296:116311	3462430	0	True				
ANR	3462633	IdentifierDecl	c		3462430	0					
ANR	3462634	IdentifierDeclType	int		3462430	0					
ANR	3462635	Identifier	c		3462430	1					
ANR	3462636	IdentifierDecl	i		3462430	1					
ANR	3462637	IdentifierDeclType	int		3462430	0					
ANR	3462638	Identifier	i		3462430	1					
ANR	3462639	IdentifierDecl	n = 0		3462430	2					
ANR	3462640	IdentifierDeclType	int		3462430	0					
ANR	3462641	Identifier	n		3462430	1					
ANR	3462642	AssignmentExpression	n = 0		3462430	2		=			
ANR	3462643	Identifier	n		3462430	0					
ANR	3462644	PrimaryExpression	0		3462430	1					
ANR	3462645	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		3462430	1					
ANR	3462646	ForInit	i = 0 ;	5155:9:116323:116328	3462430	0	True				
ANR	3462647	AssignmentExpression	i = 0		3462430	0		=			
ANR	3462648	Identifier	i		3462430	0					
ANR	3462649	PrimaryExpression	0		3462430	1					
ANR	3462650	Condition	i < ONIG_CHAR_TABLE_SIZE	5155:16:116330:116353	3462430	1	True				
ANR	3462651	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		3462430	0		<			
ANR	3462652	Identifier	i		3462430	0					
ANR	3462653	Identifier	ONIG_CHAR_TABLE_SIZE		3462430	1					
ANR	3462654	PostIncDecOperationExpression	i ++	5155:42:116356:116358	3462430	2	True				
ANR	3462655	Identifier	i		3462430	0					
ANR	3462656	IncDec	++		3462430	1					
ANR	3462657	IfStatement	if ( reg -> map [ i ] )		3462430	3					
ANR	3462658	Condition	reg -> map [ i ]	5156:10:116371:116381	3462430	0	True				
ANR	3462659	ArrayIndexing	reg -> map [ i ]		3462430	0					
ANR	3462660	PtrMemberAccess	reg -> map		3462430	0					
ANR	3462661	Identifier	reg		3462430	0					
ANR	3462662	Identifier	map		3462430	1					
ANR	3462663	Identifier	i		3462430	1					
ANR	3462664	ExpressionStatement	n ++	5156:23:116384:116387	3462430	1	True				
ANR	3462665	PostIncDecOperationExpression	n ++		3462430	0					
ANR	3462666	Identifier	n		3462430	0					
ANR	3462667	IncDec	++		3462430	1					
ANR	3462668	ExpressionStatement	"fprintf ( f , ""map: n=%d\\n"" , n )"	5158:4:116394:116422	3462430	2	True				
ANR	3462669	CallExpression	"fprintf ( f , ""map: n=%d\\n"" , n )"		3462430	0					
ANR	3462670	Callee	fprintf		3462430	0					
ANR	3462671	Identifier	fprintf		3462430	0					
ANR	3462672	ArgumentList	f		3462430	1					
ANR	3462673	Argument	f		3462430	0					
ANR	3462674	Identifier	f		3462430	0					
ANR	3462675	Argument	"""map: n=%d\\n"""		3462430	1					
ANR	3462676	PrimaryExpression	"""map: n=%d\\n"""		3462430	0					
ANR	3462677	Argument	n		3462430	2					
ANR	3462678	Identifier	n		3462430	0					
ANR	3462679	IfStatement	if ( n > 0 )		3462430	3					
ANR	3462680	Condition	n > 0	5159:8:116432:116436	3462430	0	True				
ANR	3462681	RelationalExpression	n > 0		3462430	0		>			
ANR	3462682	Identifier	n		3462430	0					
ANR	3462683	PrimaryExpression	0		3462430	1					
ANR	3462684	CompoundStatement		32:15:918:918	3462430	1					
ANR	3462685	ExpressionStatement	c = 0	5160:6:116447:116452	3462430	0	True				
ANR	3462686	AssignmentExpression	c = 0		3462430	0		=			
ANR	3462687	Identifier	c		3462430	0					
ANR	3462688	PrimaryExpression	0		3462430	1					
ANR	3462689	ExpressionStatement	"fputc ( '[' , f )"	5161:6:116460:116473	3462430	1	True				
ANR	3462690	CallExpression	"fputc ( '[' , f )"		3462430	0					
ANR	3462691	Callee	fputc		3462430	0					
ANR	3462692	Identifier	fputc		3462430	0					
ANR	3462693	ArgumentList	'['		3462430	1					
ANR	3462694	Argument	'['		3462430	0					
ANR	3462695	PrimaryExpression	'['		3462430	0					
ANR	3462696	Argument	f		3462430	1					
ANR	3462697	Identifier	f		3462430	0					
ANR	3462698	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		3462430	2					
ANR	3462699	ForInit	i = 0 ;	5162:11:116486:116491	3462430	0	True				
ANR	3462700	AssignmentExpression	i = 0		3462430	0		=			
ANR	3462701	Identifier	i		3462430	0					
ANR	3462702	PrimaryExpression	0		3462430	1					
ANR	3462703	Condition	i < ONIG_CHAR_TABLE_SIZE	5162:18:116493:116516	3462430	1	True				
ANR	3462704	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		3462430	0		<			
ANR	3462705	Identifier	i		3462430	0					
ANR	3462706	Identifier	ONIG_CHAR_TABLE_SIZE		3462430	1					
ANR	3462707	PostIncDecOperationExpression	i ++	5162:44:116519:116521	3462430	2	True				
ANR	3462708	Identifier	i		3462430	0					
ANR	3462709	IncDec	++		3462430	1					
ANR	3462710	CompoundStatement		35:49:1003:1003	3462430	3					
ANR	3462711	IfStatement	if ( reg -> map [ i ] != 0 )		3462430	0					
ANR	3462712	Condition	reg -> map [ i ] != 0	5163:5:116531:116546	3462430	0	True				
ANR	3462713	EqualityExpression	reg -> map [ i ] != 0		3462430	0		!=			
ANR	3462714	ArrayIndexing	reg -> map [ i ]		3462430	0					
ANR	3462715	PtrMemberAccess	reg -> map		3462430	0					
ANR	3462716	Identifier	reg		3462430	0					
ANR	3462717	Identifier	map		3462430	1					
ANR	3462718	Identifier	i		3462430	1					
ANR	3462719	PrimaryExpression	0		3462430	1					
ANR	3462720	CompoundStatement		36:23:1028:1028	3462430	1					
ANR	3462721	IfStatement	if ( c > 0 )		3462430	0					
ANR	3462722	Condition	c > 0	5164:14:116565:116569	3462430	0	True				
ANR	3462723	RelationalExpression	c > 0		3462430	0		>			
ANR	3462724	Identifier	c		3462430	0					
ANR	3462725	PrimaryExpression	0		3462430	1					
ANR	3462726	ExpressionStatement	"fputs ( "", "" , f )"	5164:22:116573:116587	3462430	1	True				
ANR	3462727	CallExpression	"fputs ( "", "" , f )"		3462430	0					
ANR	3462728	Callee	fputs		3462430	0					
ANR	3462729	Identifier	fputs		3462430	0					
ANR	3462730	ArgumentList	""", """		3462430	1					
ANR	3462731	Argument	""", """		3462430	0					
ANR	3462732	PrimaryExpression	""", """		3462430	0					
ANR	3462733	Argument	f		3462430	1					
ANR	3462734	Identifier	f		3462430	0					
ANR	3462735	ExpressionStatement	c ++	5165:10:116599:116602	3462430	1	True				
ANR	3462736	PostIncDecOperationExpression	c ++		3462430	0					
ANR	3462737	Identifier	c		3462430	0					
ANR	3462738	IncDec	++		3462430	1					
ANR	3462739	IfStatement	"if ( ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1 && ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i ) )"		3462430	2					
ANR	3462740	Condition	"ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1 && ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i )"	5166:14:116618:116718	3462430	0	True				
ANR	3462741	AndExpression	"ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1 && ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i )"		3462430	0		&&			
ANR	3462742	EqualityExpression	ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1		3462430	0		==			
ANR	3462743	CallExpression	ONIGENC_MBC_MAXLEN ( reg -> enc )		3462430	0					
ANR	3462744	Callee	ONIGENC_MBC_MAXLEN		3462430	0					
ANR	3462745	Identifier	ONIGENC_MBC_MAXLEN		3462430	0					
ANR	3462746	ArgumentList	reg -> enc		3462430	1					
ANR	3462747	Argument	reg -> enc		3462430	0					
ANR	3462748	PtrMemberAccess	reg -> enc		3462430	0					
ANR	3462749	Identifier	reg		3462430	0					
ANR	3462750	Identifier	enc		3462430	1					
ANR	3462751	PrimaryExpression	1		3462430	1					
ANR	3462752	CallExpression	"ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i )"		3462430	1					
ANR	3462753	Callee	ONIGENC_IS_CODE_PRINT		3462430	0					
ANR	3462754	Identifier	ONIGENC_IS_CODE_PRINT		3462430	0					
ANR	3462755	ArgumentList	reg -> enc		3462430	1					
ANR	3462756	Argument	reg -> enc		3462430	0					
ANR	3462757	PtrMemberAccess	reg -> enc		3462430	0					
ANR	3462758	Identifier	reg		3462430	0					
ANR	3462759	Identifier	enc		3462430	1					
ANR	3462760	Argument	( OnigCodePoint ) i		3462430	1					
ANR	3462761	CastExpression	( OnigCodePoint ) i		3462430	0					
ANR	3462762	CastTarget	OnigCodePoint		3462430	0					
ANR	3462763	Identifier	i		3462430	1					
ANR	3462764	ExpressionStatement	"fputc ( i , f )"	5168:12:116733:116744	3462430	1	True				
ANR	3462765	CallExpression	"fputc ( i , f )"		3462430	0					
ANR	3462766	Callee	fputc		3462430	0					
ANR	3462767	Identifier	fputc		3462430	0					
ANR	3462768	ArgumentList	i		3462430	1					
ANR	3462769	Argument	i		3462430	0					
ANR	3462770	Identifier	i		3462430	0					
ANR	3462771	Argument	f		3462430	1					
ANR	3462772	Identifier	f		3462430	0					
ANR	3462773	ElseStatement	else		3462430	0					
ANR	3462774	ExpressionStatement	"fprintf ( f , ""%d"" , i )"	5170:12:116773:116792	3462430	0	True				
ANR	3462775	CallExpression	"fprintf ( f , ""%d"" , i )"		3462430	0					
ANR	3462776	Callee	fprintf		3462430	0					
ANR	3462777	Identifier	fprintf		3462430	0					
ANR	3462778	ArgumentList	f		3462430	1					
ANR	3462779	Argument	f		3462430	0					
ANR	3462780	Identifier	f		3462430	0					
ANR	3462781	Argument	"""%d"""		3462430	1					
ANR	3462782	PrimaryExpression	"""%d"""		3462430	0					
ANR	3462783	Argument	i		3462430	2					
ANR	3462784	Identifier	i		3462430	0					
ANR	3462785	ExpressionStatement	"fprintf ( f , ""]\\n"" )"	5173:6:116818:116835	3462430	3	True				
ANR	3462786	CallExpression	"fprintf ( f , ""]\\n"" )"		3462430	0					
ANR	3462787	Callee	fprintf		3462430	0					
ANR	3462788	Identifier	fprintf		3462430	0					
ANR	3462789	ArgumentList	f		3462430	1					
ANR	3462790	Argument	f		3462430	0					
ANR	3462791	Identifier	f		3462430	0					
ANR	3462792	Argument	"""]\\n"""		3462430	1					
ANR	3462793	PrimaryExpression	"""]\\n"""		3462430	0					
ANR	3462794	ReturnType	static void		3462430	1					
ANR	3462795	Identifier	print_optimize_info		3462430	2					
ANR	3462796	ParameterList	"FILE * f , regex_t * reg"		3462430	3					
ANR	3462797	Parameter	FILE * f	5127:20:115497:115503	3462430	0	True				
ANR	3462798	ParameterType	FILE *		3462430	0					
ANR	3462799	Identifier	f		3462430	1					
ANR	3462800	Parameter	regex_t * reg	5127:29:115506:115517	3462430	1	True				
ANR	3462801	ParameterType	regex_t *		3462430	0					
ANR	3462802	Identifier	reg		3462430	1					
ANR	3462803	CFGEntryNode	ENTRY		3462430		True				
ANR	3462804	CFGExitNode	EXIT		3462430		True				
ANR	3462805	Symbol	reg -> anchor		3462430						
ANR	3462806	Symbol	* on		3462430						
ANR	3462807	Symbol	reg -> exact_end		3462430						
ANR	3462808	Symbol	reg		3462430						
ANR	3462809	Symbol	reg -> anchor_dmax		3462430						
ANR	3462810	Symbol	reg -> optimize		3462430						
ANR	3462811	Symbol	reg -> sub_anchor		3462430						
ANR	3462812	Symbol	on		3462430						
ANR	3462813	Symbol	reg -> map		3462430						
ANR	3462814	Symbol	ONIGENC_MBC_MAXLEN		3462430						
ANR	3462815	Symbol	c		3462430						
ANR	3462816	Symbol	f		3462430						
ANR	3462817	Symbol	reg -> anchor_dmin		3462430						
ANR	3462818	Symbol	* * reg		3462430						
ANR	3462819	Symbol	i		3462430						
ANR	3462820	Symbol	n		3462430						
ANR	3462821	Symbol	reg -> enc		3462430						
ANR	3462822	Symbol	p		3462430						
ANR	3462823	Symbol	ONIG_CHAR_TABLE_SIZE		3462430						
ANR	3462824	Symbol	* i		3462430						
ANR	3462825	Symbol	reg -> exact		3462430						
ANR	3462826	Symbol	ONIGENC_IS_CODE_PRINT		3462430						
ANR	3462827	Symbol	ONIG_OPTIMIZE_MAP		3462430						
ANR	3462828	Symbol	* reg -> optimize		3462430						
ANR	3462829	Symbol	* p		3462430						
ANR	3462830	Symbol	* reg -> map		3462430						
ANR	3462831	Symbol	* reg		3462430						
ANR	3462832	Symbol	ANCHOR_END_BUF_MASK		3462430						
ANR	3462833	Function	onig_free_body	5180:0:116875:117403							
ANR	3462834	FunctionDef	onig_free_body (regex_t * reg)		3462833	0					
ANR	3462835	CompoundStatement		5182:0:116916:117403	3462833	0					
ANR	3462836	IfStatement	if ( IS_NOT_NULL ( reg ) )		3462833	0					
ANR	3462837	Condition	IS_NOT_NULL ( reg )	5183:6:116924:116939	3462833	0	True				
ANR	3462838	CallExpression	IS_NOT_NULL ( reg )		3462833	0					
ANR	3462839	Callee	IS_NOT_NULL		3462833	0					
ANR	3462840	Identifier	IS_NOT_NULL		3462833	0					
ANR	3462841	ArgumentList	reg		3462833	1					
ANR	3462842	Argument	reg		3462833	0					
ANR	3462843	Identifier	reg		3462833	0					
ANR	3462844	CompoundStatement		2:24:25:25	3462833	1					
ANR	3462845	IfStatement	if ( IS_NOT_NULL ( reg -> p ) )		3462833	0					
ANR	3462846	Condition	IS_NOT_NULL ( reg -> p )	5184:8:116952:116970	3462833	0	True				
ANR	3462847	CallExpression	IS_NOT_NULL ( reg -> p )		3462833	0					
ANR	3462848	Callee	IS_NOT_NULL		3462833	0					
ANR	3462849	Identifier	IS_NOT_NULL		3462833	0					
ANR	3462850	ArgumentList	reg -> p		3462833	1					
ANR	3462851	Argument	reg -> p		3462833	0					
ANR	3462852	PtrMemberAccess	reg -> p		3462833	0					
ANR	3462853	Identifier	reg		3462833	0					
ANR	3462854	Identifier	p		3462833	1					
ANR	3462855	ExpressionStatement	xfree ( reg -> p )	5184:44:116988:117001	3462833	1	True				
ANR	3462856	CallExpression	xfree ( reg -> p )		3462833	0					
ANR	3462857	Callee	xfree		3462833	0					
ANR	3462858	Identifier	xfree		3462833	0					
ANR	3462859	ArgumentList	reg -> p		3462833	1					
ANR	3462860	Argument	reg -> p		3462833	0					
ANR	3462861	PtrMemberAccess	reg -> p		3462833	0					
ANR	3462862	Identifier	reg		3462833	0					
ANR	3462863	Identifier	p		3462833	1					
ANR	3462864	IfStatement	if ( IS_NOT_NULL ( reg -> exact ) )		3462833	1					
ANR	3462865	Condition	IS_NOT_NULL ( reg -> exact )	5185:8:117011:117033	3462833	0	True				
ANR	3462866	CallExpression	IS_NOT_NULL ( reg -> exact )		3462833	0					
ANR	3462867	Callee	IS_NOT_NULL		3462833	0					
ANR	3462868	Identifier	IS_NOT_NULL		3462833	0					
ANR	3462869	ArgumentList	reg -> exact		3462833	1					
ANR	3462870	Argument	reg -> exact		3462833	0					
ANR	3462871	PtrMemberAccess	reg -> exact		3462833	0					
ANR	3462872	Identifier	reg		3462833	0					
ANR	3462873	Identifier	exact		3462833	1					
ANR	3462874	ExpressionStatement	xfree ( reg -> exact )	5185:44:117047:117064	3462833	1	True				
ANR	3462875	CallExpression	xfree ( reg -> exact )		3462833	0					
ANR	3462876	Callee	xfree		3462833	0					
ANR	3462877	Identifier	xfree		3462833	0					
ANR	3462878	ArgumentList	reg -> exact		3462833	1					
ANR	3462879	Argument	reg -> exact		3462833	0					
ANR	3462880	PtrMemberAccess	reg -> exact		3462833	0					
ANR	3462881	Identifier	reg		3462833	0					
ANR	3462882	Identifier	exact		3462833	1					
ANR	3462883	IfStatement	if ( IS_NOT_NULL ( reg -> int_map ) )		3462833	2					
ANR	3462884	Condition	IS_NOT_NULL ( reg -> int_map )	5186:8:117074:117098	3462833	0	True				
ANR	3462885	CallExpression	IS_NOT_NULL ( reg -> int_map )		3462833	0					
ANR	3462886	Callee	IS_NOT_NULL		3462833	0					
ANR	3462887	Identifier	IS_NOT_NULL		3462833	0					
ANR	3462888	ArgumentList	reg -> int_map		3462833	1					
ANR	3462889	Argument	reg -> int_map		3462833	0					
ANR	3462890	PtrMemberAccess	reg -> int_map		3462833	0					
ANR	3462891	Identifier	reg		3462833	0					
ANR	3462892	Identifier	int_map		3462833	1					
ANR	3462893	ExpressionStatement	xfree ( reg -> int_map )	5186:44:117110:117129	3462833	1	True				
ANR	3462894	CallExpression	xfree ( reg -> int_map )		3462833	0					
ANR	3462895	Callee	xfree		3462833	0					
ANR	3462896	Identifier	xfree		3462833	0					
ANR	3462897	ArgumentList	reg -> int_map		3462833	1					
ANR	3462898	Argument	reg -> int_map		3462833	0					
ANR	3462899	PtrMemberAccess	reg -> int_map		3462833	0					
ANR	3462900	Identifier	reg		3462833	0					
ANR	3462901	Identifier	int_map		3462833	1					
ANR	3462902	IfStatement	if ( IS_NOT_NULL ( reg -> int_map_backward ) )		3462833	3					
ANR	3462903	Condition	IS_NOT_NULL ( reg -> int_map_backward )	5187:8:117139:117172	3462833	0	True				
ANR	3462904	CallExpression	IS_NOT_NULL ( reg -> int_map_backward )		3462833	0					
ANR	3462905	Callee	IS_NOT_NULL		3462833	0					
ANR	3462906	Identifier	IS_NOT_NULL		3462833	0					
ANR	3462907	ArgumentList	reg -> int_map_backward		3462833	1					
ANR	3462908	Argument	reg -> int_map_backward		3462833	0					
ANR	3462909	PtrMemberAccess	reg -> int_map_backward		3462833	0					
ANR	3462910	Identifier	reg		3462833	0					
ANR	3462911	Identifier	int_map_backward		3462833	1					
ANR	3462912	ExpressionStatement	xfree ( reg -> int_map_backward )	5187:44:117175:117203	3462833	1	True				
ANR	3462913	CallExpression	xfree ( reg -> int_map_backward )		3462833	0					
ANR	3462914	Callee	xfree		3462833	0					
ANR	3462915	Identifier	xfree		3462833	0					
ANR	3462916	ArgumentList	reg -> int_map_backward		3462833	1					
ANR	3462917	Argument	reg -> int_map_backward		3462833	0					
ANR	3462918	PtrMemberAccess	reg -> int_map_backward		3462833	0					
ANR	3462919	Identifier	reg		3462833	0					
ANR	3462920	Identifier	int_map_backward		3462833	1					
ANR	3462921	IfStatement	if ( IS_NOT_NULL ( reg -> repeat_range ) )		3462833	4					
ANR	3462922	Condition	IS_NOT_NULL ( reg -> repeat_range )	5188:8:117213:117242	3462833	0	True				
ANR	3462923	CallExpression	IS_NOT_NULL ( reg -> repeat_range )		3462833	0					
ANR	3462924	Callee	IS_NOT_NULL		3462833	0					
ANR	3462925	Identifier	IS_NOT_NULL		3462833	0					
ANR	3462926	ArgumentList	reg -> repeat_range		3462833	1					
ANR	3462927	Argument	reg -> repeat_range		3462833	0					
ANR	3462928	PtrMemberAccess	reg -> repeat_range		3462833	0					
ANR	3462929	Identifier	reg		3462833	0					
ANR	3462930	Identifier	repeat_range		3462833	1					
ANR	3462931	ExpressionStatement	xfree ( reg -> repeat_range )	5188:44:117249:117273	3462833	1	True				
ANR	3462932	CallExpression	xfree ( reg -> repeat_range )		3462833	0					
ANR	3462933	Callee	xfree		3462833	0					
ANR	3462934	Identifier	xfree		3462833	0					
ANR	3462935	ArgumentList	reg -> repeat_range		3462833	1					
ANR	3462936	Argument	reg -> repeat_range		3462833	0					
ANR	3462937	PtrMemberAccess	reg -> repeat_range		3462833	0					
ANR	3462938	Identifier	reg		3462833	0					
ANR	3462939	Identifier	repeat_range		3462833	1					
ANR	3462940	IfStatement	if ( IS_NOT_NULL ( reg -> chain ) )		3462833	5					
ANR	3462941	Condition	IS_NOT_NULL ( reg -> chain )	5189:8:117283:117305	3462833	0	True				
ANR	3462942	CallExpression	IS_NOT_NULL ( reg -> chain )		3462833	0					
ANR	3462943	Callee	IS_NOT_NULL		3462833	0					
ANR	3462944	Identifier	IS_NOT_NULL		3462833	0					
ANR	3462945	ArgumentList	reg -> chain		3462833	1					
ANR	3462946	Argument	reg -> chain		3462833	0					
ANR	3462947	PtrMemberAccess	reg -> chain		3462833	0					
ANR	3462948	Identifier	reg		3462833	0					
ANR	3462949	Identifier	chain		3462833	1					
ANR	3462950	ExpressionStatement	onig_free ( reg -> chain )	5189:44:117319:117340	3462833	1	True				
ANR	3462951	CallExpression	onig_free ( reg -> chain )		3462833	0					
ANR	3462952	Callee	onig_free		3462833	0					
ANR	3462953	Identifier	onig_free		3462833	0					
ANR	3462954	ArgumentList	reg -> chain		3462833	1					
ANR	3462955	Argument	reg -> chain		3462833	0					
ANR	3462956	PtrMemberAccess	reg -> chain		3462833	0					
ANR	3462957	Identifier	reg		3462833	0					
ANR	3462958	Identifier	chain		3462833	1					
ANR	3462959	ExpressionStatement	onig_names_free ( reg )	5192:4:117370:117390	3462833	6	True				
ANR	3462960	CallExpression	onig_names_free ( reg )		3462833	0					
ANR	3462961	Callee	onig_names_free		3462833	0					
ANR	3462962	Identifier	onig_names_free		3462833	0					
ANR	3462963	ArgumentList	reg		3462833	1					
ANR	3462964	Argument	reg		3462833	0					
ANR	3462965	Identifier	reg		3462833	0					
ANR	3462966	ReturnType	extern void		3462833	1					
ANR	3462967	Identifier	onig_free_body		3462833	2					
ANR	3462968	ParameterList	regex_t * reg		3462833	3					
ANR	3462969	Parameter	regex_t * reg	5181:15:116902:116913	3462833	0	True				
ANR	3462970	ParameterType	regex_t *		3462833	0					
ANR	3462971	Identifier	reg		3462833	1					
ANR	3462972	CFGEntryNode	ENTRY		3462833		True				
ANR	3462973	CFGExitNode	EXIT		3462833		True				
ANR	3462974	Symbol	reg -> int_map		3462833						
ANR	3462975	Symbol	reg -> int_map_backward		3462833						
ANR	3462976	Symbol	IS_NOT_NULL		3462833						
ANR	3462977	Symbol	reg -> repeat_range		3462833						
ANR	3462978	Symbol	reg		3462833						
ANR	3462979	Symbol	reg -> exact		3462833						
ANR	3462980	Symbol	reg -> chain		3462833						
ANR	3462981	Symbol	reg -> p		3462833						
ANR	3462982	Symbol	* reg		3462833						
ANR	3462983	Function	onig_free	5197:0:117406:117515							
ANR	3462984	FunctionDef	onig_free (regex_t * reg)		3462983	0					
ANR	3462985	CompoundStatement		5199:0:117442:117515	3462983	0					
ANR	3462986	IfStatement	if ( IS_NOT_NULL ( reg ) )		3462983	0					
ANR	3462987	Condition	IS_NOT_NULL ( reg )	5200:6:117450:117465	3462983	0	True				
ANR	3462988	CallExpression	IS_NOT_NULL ( reg )		3462983	0					
ANR	3462989	Callee	IS_NOT_NULL		3462983	0					
ANR	3462990	Identifier	IS_NOT_NULL		3462983	0					
ANR	3462991	ArgumentList	reg		3462983	1					
ANR	3462992	Argument	reg		3462983	0					
ANR	3462993	Identifier	reg		3462983	0					
ANR	3462994	CompoundStatement		2:24:25:25	3462983	1					
ANR	3462995	ExpressionStatement	onig_free_body ( reg )	5201:4:117474:117493	3462983	0	True				
ANR	3462996	CallExpression	onig_free_body ( reg )		3462983	0					
ANR	3462997	Callee	onig_free_body		3462983	0					
ANR	3462998	Identifier	onig_free_body		3462983	0					
ANR	3462999	ArgumentList	reg		3462983	1					
ANR	3463000	Argument	reg		3462983	0					
ANR	3463001	Identifier	reg		3462983	0					
ANR	3463002	ExpressionStatement	xfree ( reg )	5202:4:117499:117509	3462983	1	True				
ANR	3463003	CallExpression	xfree ( reg )		3462983	0					
ANR	3463004	Callee	xfree		3462983	0					
ANR	3463005	Identifier	xfree		3462983	0					
ANR	3463006	ArgumentList	reg		3462983	1					
ANR	3463007	Argument	reg		3462983	0					
ANR	3463008	Identifier	reg		3462983	0					
ANR	3463009	ReturnType	extern void		3462983	1					
ANR	3463010	Identifier	onig_free		3462983	2					
ANR	3463011	ParameterList	regex_t * reg		3462983	3					
ANR	3463012	Parameter	regex_t * reg	5198:10:117428:117439	3462983	0	True				
ANR	3463013	ParameterType	regex_t *		3462983	0					
ANR	3463014	Identifier	reg		3462983	1					
ANR	3463015	CFGEntryNode	ENTRY		3462983		True				
ANR	3463016	CFGExitNode	EXIT		3462983		True				
ANR	3463017	Symbol	IS_NOT_NULL		3462983						
ANR	3463018	Symbol	reg		3462983						
ANR	3463019	Function	onig_transfer	5213:0:117683:117811							
ANR	3463020	FunctionDef	"onig_transfer (regex_t * to , regex_t * from)"		3463019	0					
ANR	3463021	CompoundStatement		5215:0:117737:117811	3463019	0					
ANR	3463022	ExpressionStatement	THREAD_ATOMIC_START	5216:2:117741:117760	3463019	0	True				
ANR	3463023	Identifier	THREAD_ATOMIC_START		3463019	0					
ANR	3463024	ExpressionStatement	"REGEX_TRANSFER ( to , from )"	5217:2:117764:117788	3463019	1	True				
ANR	3463025	CallExpression	"REGEX_TRANSFER ( to , from )"		3463019	0					
ANR	3463026	Callee	REGEX_TRANSFER		3463019	0					
ANR	3463027	Identifier	REGEX_TRANSFER		3463019	0					
ANR	3463028	ArgumentList	to		3463019	1					
ANR	3463029	Argument	to		3463019	0					
ANR	3463030	Identifier	to		3463019	0					
ANR	3463031	Argument	from		3463019	1					
ANR	3463032	Identifier	from		3463019	0					
ANR	3463033	ExpressionStatement	THREAD_ATOMIC_END	5218:2:117792:117809	3463019	2	True				
ANR	3463034	Identifier	THREAD_ATOMIC_END		3463019	0					
ANR	3463035	ReturnType	extern void		3463019	1					
ANR	3463036	Identifier	onig_transfer		3463019	2					
ANR	3463037	ParameterList	"regex_t * to , regex_t * from"		3463019	3					
ANR	3463038	Parameter	regex_t * to	5214:14:117709:117719	3463019	0	True				
ANR	3463039	ParameterType	regex_t *		3463019	0					
ANR	3463040	Identifier	to		3463019	1					
ANR	3463041	Parameter	regex_t * from	5214:27:117722:117734	3463019	1	True				
ANR	3463042	ParameterType	regex_t *		3463019	0					
ANR	3463043	Identifier	from		3463019	1					
ANR	3463044	CFGEntryNode	ENTRY		3463019		True				
ANR	3463045	CFGExitNode	EXIT		3463019		True				
ANR	3463046	Symbol	from		3463019						
ANR	3463047	Symbol	to		3463019						
ANR	3463048	Function	onig_chain_link_add	5227:0:117934:118082							
ANR	3463049	FunctionDef	"onig_chain_link_add (regex_t * to , regex_t * add)"		3463048	0					
ANR	3463050	CompoundStatement		5229:0:117993:118082	3463048	0					
ANR	3463051	ExpressionStatement	THREAD_ATOMIC_START	5230:2:117997:118016	3463048	0	True				
ANR	3463052	Identifier	THREAD_ATOMIC_START		3463048	0					
ANR	3463053	ExpressionStatement	REGEX_CHAIN_HEAD ( to )	5231:2:118020:118040	3463048	1	True				
ANR	3463054	CallExpression	REGEX_CHAIN_HEAD ( to )		3463048	0					
ANR	3463055	Callee	REGEX_CHAIN_HEAD		3463048	0					
ANR	3463056	Identifier	REGEX_CHAIN_HEAD		3463048	0					
ANR	3463057	ArgumentList	to		3463048	1					
ANR	3463058	Argument	to		3463048	0					
ANR	3463059	Identifier	to		3463048	0					
ANR	3463060	ExpressionStatement	to -> chain = add	5232:2:118044:118059	3463048	2	True				
ANR	3463061	AssignmentExpression	to -> chain = add		3463048	0		=			
ANR	3463062	PtrMemberAccess	to -> chain		3463048	0					
ANR	3463063	Identifier	to		3463048	0					
ANR	3463064	Identifier	chain		3463048	1					
ANR	3463065	Identifier	add		3463048	1					
ANR	3463066	ExpressionStatement	THREAD_ATOMIC_END	5233:2:118063:118080	3463048	3	True				
ANR	3463067	Identifier	THREAD_ATOMIC_END		3463048	0					
ANR	3463068	ReturnType	extern void		3463048	1					
ANR	3463069	Identifier	onig_chain_link_add		3463048	2					
ANR	3463070	ParameterList	"regex_t * to , regex_t * add"		3463048	3					
ANR	3463071	Parameter	regex_t * to	5228:20:117966:117976	3463048	0	True				
ANR	3463072	ParameterType	regex_t *		3463048	0					
ANR	3463073	Identifier	to		3463048	1					
ANR	3463074	Parameter	regex_t * add	5228:33:117979:117990	3463048	1	True				
ANR	3463075	ParameterType	regex_t *		3463048	0					
ANR	3463076	Identifier	add		3463048	1					
ANR	3463077	CFGEntryNode	ENTRY		3463048		True				
ANR	3463078	CFGExitNode	EXIT		3463048		True				
ANR	3463079	Symbol	add		3463048						
ANR	3463080	Symbol	* to		3463048						
ANR	3463081	Symbol	to -> chain		3463048						
ANR	3463082	Symbol	to		3463048						
ANR	3463083	Function	onig_chain_reduce	5236:0:118085:118415							
ANR	3463084	FunctionDef	onig_chain_reduce (regex_t * reg)		3463083	0					
ANR	3463085	CompoundStatement		5238:0:118129:118415	3463083	0					
ANR	3463086	IdentifierDeclStatement	"regex_t * head , * prev ;"	5239:2:118133:118153	3463083	0	True				
ANR	3463087	IdentifierDecl	* head		3463083	0					
ANR	3463088	IdentifierDeclType	regex_t *		3463083	0					
ANR	3463089	Identifier	head		3463083	1					
ANR	3463090	IdentifierDecl	* prev		3463083	1					
ANR	3463091	IdentifierDeclType	regex_t *		3463083	0					
ANR	3463092	Identifier	prev		3463083	1					
ANR	3463093	ExpressionStatement	prev = reg	5241:2:118158:118168	3463083	1	True				
ANR	3463094	AssignmentExpression	prev = reg		3463083	0		=			
ANR	3463095	Identifier	prev		3463083	0					
ANR	3463096	Identifier	reg		3463083	1					
ANR	3463097	ExpressionStatement	head = prev -> chain	5242:2:118172:118190	3463083	2	True				
ANR	3463098	AssignmentExpression	head = prev -> chain		3463083	0		=			
ANR	3463099	Identifier	head		3463083	0					
ANR	3463100	PtrMemberAccess	prev -> chain		3463083	1					
ANR	3463101	Identifier	prev		3463083	0					
ANR	3463102	Identifier	chain		3463083	1					
ANR	3463103	IfStatement	if ( IS_NOT_NULL ( head ) )		3463083	3					
ANR	3463104	Condition	IS_NOT_NULL ( head )	5243:6:118198:118214	3463083	0	True				
ANR	3463105	CallExpression	IS_NOT_NULL ( head )		3463083	0					
ANR	3463106	Callee	IS_NOT_NULL		3463083	0					
ANR	3463107	Identifier	IS_NOT_NULL		3463083	0					
ANR	3463108	ArgumentList	head		3463083	1					
ANR	3463109	Argument	head		3463083	0					
ANR	3463110	Identifier	head		3463083	0					
ANR	3463111	CompoundStatement		6:25:87:87	3463083	1					
ANR	3463112	ExpressionStatement	reg -> state = ONIG_STATE_MODIFY	5244:4:118223:118253	3463083	0	True				
ANR	3463113	AssignmentExpression	reg -> state = ONIG_STATE_MODIFY		3463083	0		=			
ANR	3463114	PtrMemberAccess	reg -> state		3463083	0					
ANR	3463115	Identifier	reg		3463083	0					
ANR	3463116	Identifier	state		3463083	1					
ANR	3463117	Identifier	ONIG_STATE_MODIFY		3463083	1					
ANR	3463118	WhileStatement	while ( IS_NOT_NULL ( head -> chain ) )		3463083	1					
ANR	3463119	Condition	IS_NOT_NULL ( head -> chain )	5245:11:118266:118289	3463083	0	True				
ANR	3463120	CallExpression	IS_NOT_NULL ( head -> chain )		3463083	0					
ANR	3463121	Callee	IS_NOT_NULL		3463083	0					
ANR	3463122	Identifier	IS_NOT_NULL		3463083	0					
ANR	3463123	ArgumentList	head -> chain		3463083	1					
ANR	3463124	Argument	head -> chain		3463083	0					
ANR	3463125	PtrMemberAccess	head -> chain		3463083	0					
ANR	3463126	Identifier	head		3463083	0					
ANR	3463127	Identifier	chain		3463083	1					
ANR	3463128	CompoundStatement		8:37:162:162	3463083	1					
ANR	3463129	ExpressionStatement	prev = head	5246:6:118300:118311	3463083	0	True				
ANR	3463130	AssignmentExpression	prev = head		3463083	0		=			
ANR	3463131	Identifier	prev		3463083	0					
ANR	3463132	Identifier	head		3463083	1					
ANR	3463133	ExpressionStatement	head = head -> chain	5247:6:118319:118337	3463083	1	True				
ANR	3463134	AssignmentExpression	head = head -> chain		3463083	0		=			
ANR	3463135	Identifier	head		3463083	0					
ANR	3463136	PtrMemberAccess	head -> chain		3463083	1					
ANR	3463137	Identifier	head		3463083	0					
ANR	3463138	Identifier	chain		3463083	1					
ANR	3463139	ExpressionStatement	prev -> chain = ( regex_t * ) NULL	5249:4:118349:118378	3463083	2	True				
ANR	3463140	AssignmentExpression	prev -> chain = ( regex_t * ) NULL		3463083	0		=			
ANR	3463141	PtrMemberAccess	prev -> chain		3463083	0					
ANR	3463142	Identifier	prev		3463083	0					
ANR	3463143	Identifier	chain		3463083	1					
ANR	3463144	CastExpression	( regex_t * ) NULL		3463083	1					
ANR	3463145	CastTarget	regex_t *		3463083	0					
ANR	3463146	Identifier	NULL		3463083	1					
ANR	3463147	ExpressionStatement	"REGEX_TRANSFER ( reg , head )"	5250:4:118384:118409	3463083	3	True				
ANR	3463148	CallExpression	"REGEX_TRANSFER ( reg , head )"		3463083	0					
ANR	3463149	Callee	REGEX_TRANSFER		3463083	0					
ANR	3463150	Identifier	REGEX_TRANSFER		3463083	0					
ANR	3463151	ArgumentList	reg		3463083	1					
ANR	3463152	Argument	reg		3463083	0					
ANR	3463153	Identifier	reg		3463083	0					
ANR	3463154	Argument	head		3463083	1					
ANR	3463155	Identifier	head		3463083	0					
ANR	3463156	ReturnType	extern void		3463083	1					
ANR	3463157	Identifier	onig_chain_reduce		3463083	2					
ANR	3463158	ParameterList	regex_t * reg		3463083	3					
ANR	3463159	Parameter	regex_t * reg	5237:18:118115:118126	3463083	0	True				
ANR	3463160	ParameterType	regex_t *		3463083	0					
ANR	3463161	Identifier	reg		3463083	1					
ANR	3463162	CFGEntryNode	ENTRY		3463083		True				
ANR	3463163	CFGExitNode	EXIT		3463083		True				
ANR	3463164	Symbol	head		3463083						
ANR	3463165	Symbol	IS_NOT_NULL		3463083						
ANR	3463166	Symbol	reg -> state		3463083						
ANR	3463167	Symbol	NULL		3463083						
ANR	3463168	Symbol	reg		3463083						
ANR	3463169	Symbol	prev		3463083						
ANR	3463170	Symbol	ONIG_STATE_MODIFY		3463083						
ANR	3463171	Symbol	prev -> chain		3463083						
ANR	3463172	Symbol	* head		3463083						
ANR	3463173	Symbol	* prev		3463083						
ANR	3463174	Symbol	* reg		3463083						
ANR	3463175	Symbol	head -> chain		3463083						
ANR	3463176	DeclStmt									
ANR	3463177	Decl							void print_compiled_byte_code_list	void print_compiled_byte_code_list	P_
ANR	3463178	DeclStmt									
ANR	3463179	Decl							void print_tree	void print_tree	P_
ANR	3463180	Function	onig_compile	5261:0:118601:123231							
ANR	3463181	FunctionDef	"onig_compile (regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigErrorInfo * einfo)"		3463180	0					
ANR	3463182	CompoundStatement		5264:0:118716:123231	3463180	0					
ANR	3463183	Statement	define	5265:1:118719:118724	3463180	0	True				
ANR	3463184	Statement	COMPILE_INIT_SIZE	5265:8:118726:118742	3463180	1	True				
ANR	3463185	Statement	20	5265:27:118745:118746	3463180	2	True				
ANR	3463186	IdentifierDeclStatement	"int r , init_size ;"	5267:2:118751:118767	3463180	3	True				
ANR	3463187	IdentifierDecl	r		3463180	0					
ANR	3463188	IdentifierDeclType	int		3463180	0					
ANR	3463189	Identifier	r		3463180	1					
ANR	3463190	IdentifierDecl	init_size		3463180	1					
ANR	3463191	IdentifierDeclType	int		3463180	0					
ANR	3463192	Identifier	init_size		3463180	1					
ANR	3463193	IdentifierDeclStatement	Node * root ;	5268:2:118771:118782	3463180	4	True				
ANR	3463194	IdentifierDecl	* root		3463180	0					
ANR	3463195	IdentifierDeclType	Node *		3463180	0					
ANR	3463196	Identifier	root		3463180	1					
ANR	3463197	IdentifierDeclStatement	ScanEnv scan_env ;	5269:2:118786:118803	3463180	5	True				
ANR	3463198	IdentifierDecl	scan_env		3463180	0					
ANR	3463199	IdentifierDeclType	ScanEnv		3463180	0					
ANR	3463200	Identifier	scan_env		3463180	1					
ANR	3463201	IdentifierDeclStatement	UnsetAddrList uslist ;	5271:2:118830:118851	3463180	6	True				
ANR	3463202	IdentifierDecl	uslist		3463180	0					
ANR	3463203	IdentifierDeclType	UnsetAddrList		3463180	0					
ANR	3463204	Identifier	uslist		3463180	1					
ANR	3463205	IfStatement	if ( IS_NOT_NULL ( einfo ) )		3463180	7					
ANR	3463206	Condition	IS_NOT_NULL ( einfo )	5274:6:118867:118884	3463180	0	True				
ANR	3463207	CallExpression	IS_NOT_NULL ( einfo )		3463180	0					
ANR	3463208	Callee	IS_NOT_NULL		3463180	0					
ANR	3463209	Identifier	IS_NOT_NULL		3463180	0					
ANR	3463210	ArgumentList	einfo		3463180	1					
ANR	3463211	Argument	einfo		3463180	0					
ANR	3463212	Identifier	einfo		3463180	0					
ANR	3463213	ExpressionStatement	einfo -> par = ( UChar * ) NULL	5274:26:118887:118913	3463180	1	True				
ANR	3463214	AssignmentExpression	einfo -> par = ( UChar * ) NULL		3463180	0		=			
ANR	3463215	PtrMemberAccess	einfo -> par		3463180	0					
ANR	3463216	Identifier	einfo		3463180	0					
ANR	3463217	Identifier	par		3463180	1					
ANR	3463218	CastExpression	( UChar * ) NULL		3463180	1					
ANR	3463219	CastTarget	UChar *		3463180	0					
ANR	3463220	Identifier	NULL		3463180	1					
ANR	3463221	ExpressionStatement	reg -> state = ONIG_STATE_COMPILING	5276:2:118918:118951	3463180	8	True				
ANR	3463222	AssignmentExpression	reg -> state = ONIG_STATE_COMPILING		3463180	0		=			
ANR	3463223	PtrMemberAccess	reg -> state		3463180	0					
ANR	3463224	Identifier	reg		3463180	0					
ANR	3463225	Identifier	state		3463180	1					
ANR	3463226	Identifier	ONIG_STATE_COMPILING		3463180	1					
ANR	3463227	ExpressionStatement	"print_enc_string ( stderr , reg -> enc , pattern , pattern_end )"	5279:2:118974:119030	3463180	9	True				
ANR	3463228	CallExpression	"print_enc_string ( stderr , reg -> enc , pattern , pattern_end )"		3463180	0					
ANR	3463229	Callee	print_enc_string		3463180	0					
ANR	3463230	Identifier	print_enc_string		3463180	0					
ANR	3463231	ArgumentList	stderr		3463180	1					
ANR	3463232	Argument	stderr		3463180	0					
ANR	3463233	Identifier	stderr		3463180	0					
ANR	3463234	Argument	reg -> enc		3463180	1					
ANR	3463235	PtrMemberAccess	reg -> enc		3463180	0					
ANR	3463236	Identifier	reg		3463180	0					
ANR	3463237	Identifier	enc		3463180	1					
ANR	3463238	Argument	pattern		3463180	2					
ANR	3463239	Identifier	pattern		3463180	0					
ANR	3463240	Argument	pattern_end		3463180	3					
ANR	3463241	Identifier	pattern_end		3463180	0					
ANR	3463242	IfStatement	if ( reg -> alloc == 0 )		3463180	10					
ANR	3463243	Condition	reg -> alloc == 0	5282:6:119046:119060	3463180	0	True				
ANR	3463244	EqualityExpression	reg -> alloc == 0		3463180	0		==			
ANR	3463245	PtrMemberAccess	reg -> alloc		3463180	0					
ANR	3463246	Identifier	reg		3463180	0					
ANR	3463247	Identifier	alloc		3463180	1					
ANR	3463248	PrimaryExpression	0		3463180	1					
ANR	3463249	CompoundStatement		19:23:346:346	3463180	1					
ANR	3463250	ExpressionStatement	init_size = ( pattern_end - pattern ) * 2	5283:4:119069:119108	3463180	0	True				
ANR	3463251	AssignmentExpression	init_size = ( pattern_end - pattern ) * 2		3463180	0		=			
ANR	3463252	Identifier	init_size		3463180	0					
ANR	3463253	MultiplicativeExpression	( pattern_end - pattern ) * 2		3463180	1		*			
ANR	3463254	AdditiveExpression	pattern_end - pattern		3463180	0		-			
ANR	3463255	Identifier	pattern_end		3463180	0					
ANR	3463256	Identifier	pattern		3463180	1					
ANR	3463257	PrimaryExpression	2		3463180	1					
ANR	3463258	IfStatement	if ( init_size <= 0 )		3463180	1					
ANR	3463259	Condition	init_size <= 0	5284:8:119118:119131	3463180	0	True				
ANR	3463260	RelationalExpression	init_size <= 0		3463180	0		<=			
ANR	3463261	Identifier	init_size		3463180	0					
ANR	3463262	PrimaryExpression	0		3463180	1					
ANR	3463263	ExpressionStatement	init_size = COMPILE_INIT_SIZE	5284:24:119134:119163	3463180	1	True				
ANR	3463264	AssignmentExpression	init_size = COMPILE_INIT_SIZE		3463180	0		=			
ANR	3463265	Identifier	init_size		3463180	0					
ANR	3463266	Identifier	COMPILE_INIT_SIZE		3463180	1					
ANR	3463267	ExpressionStatement	"r = BBUF_INIT ( reg , init_size )"	5285:4:119169:119198	3463180	2	True				
ANR	3463268	AssignmentExpression	"r = BBUF_INIT ( reg , init_size )"		3463180	0		=			
ANR	3463269	Identifier	r		3463180	0					
ANR	3463270	CallExpression	"BBUF_INIT ( reg , init_size )"		3463180	1					
ANR	3463271	Callee	BBUF_INIT		3463180	0					
ANR	3463272	Identifier	BBUF_INIT		3463180	0					
ANR	3463273	ArgumentList	reg		3463180	1					
ANR	3463274	Argument	reg		3463180	0					
ANR	3463275	Identifier	reg		3463180	0					
ANR	3463276	Argument	init_size		3463180	1					
ANR	3463277	Identifier	init_size		3463180	0					
ANR	3463278	IfStatement	if ( r != 0 )		3463180	3					
ANR	3463279	Condition	r != 0	5286:8:119208:119213	3463180	0	True				
ANR	3463280	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463281	Identifier	r		3463180	0					
ANR	3463282	PrimaryExpression	0		3463180	1					
ANR	3463283	GotoStatement	goto end ;	5286:16:119216:119224	3463180	1	True				
ANR	3463284	Identifier	end		3463180	0					
ANR	3463285	ElseStatement	else		3463180	0					
ANR	3463286	ExpressionStatement	reg -> used = 0	5289:4:119241:119254	3463180	0	True				
ANR	3463287	AssignmentExpression	reg -> used = 0		3463180	0		=			
ANR	3463288	PtrMemberAccess	reg -> used		3463180	0					
ANR	3463289	Identifier	reg		3463180	0					
ANR	3463290	Identifier	used		3463180	1					
ANR	3463291	PrimaryExpression	0		3463180	1					
ANR	3463292	ExpressionStatement	reg -> num_mem = 0	5291:2:119259:119286	3463180	11	True				
ANR	3463293	AssignmentExpression	reg -> num_mem = 0		3463180	0		=			
ANR	3463294	PtrMemberAccess	reg -> num_mem		3463180	0					
ANR	3463295	Identifier	reg		3463180	0					
ANR	3463296	Identifier	num_mem		3463180	1					
ANR	3463297	PrimaryExpression	0		3463180	1					
ANR	3463298	ExpressionStatement	reg -> num_repeat = 0	5292:2:119290:119317	3463180	12	True				
ANR	3463299	AssignmentExpression	reg -> num_repeat = 0		3463180	0		=			
ANR	3463300	PtrMemberAccess	reg -> num_repeat		3463180	0					
ANR	3463301	Identifier	reg		3463180	0					
ANR	3463302	Identifier	num_repeat		3463180	1					
ANR	3463303	PrimaryExpression	0		3463180	1					
ANR	3463304	ExpressionStatement	reg -> num_null_check = 0	5293:2:119321:119348	3463180	13	True				
ANR	3463305	AssignmentExpression	reg -> num_null_check = 0		3463180	0		=			
ANR	3463306	PtrMemberAccess	reg -> num_null_check		3463180	0					
ANR	3463307	Identifier	reg		3463180	0					
ANR	3463308	Identifier	num_null_check		3463180	1					
ANR	3463309	PrimaryExpression	0		3463180	1					
ANR	3463310	ExpressionStatement	reg -> repeat_range_alloc = 0	5294:2:119352:119379	3463180	14	True				
ANR	3463311	AssignmentExpression	reg -> repeat_range_alloc = 0		3463180	0		=			
ANR	3463312	PtrMemberAccess	reg -> repeat_range_alloc		3463180	0					
ANR	3463313	Identifier	reg		3463180	0					
ANR	3463314	Identifier	repeat_range_alloc		3463180	1					
ANR	3463315	PrimaryExpression	0		3463180	1					
ANR	3463316	ExpressionStatement	reg -> repeat_range = ( OnigRepeatRange * ) NULL	5295:2:119383:119432	3463180	15	True				
ANR	3463317	AssignmentExpression	reg -> repeat_range = ( OnigRepeatRange * ) NULL		3463180	0		=			
ANR	3463318	PtrMemberAccess	reg -> repeat_range		3463180	0					
ANR	3463319	Identifier	reg		3463180	0					
ANR	3463320	Identifier	repeat_range		3463180	1					
ANR	3463321	CastExpression	( OnigRepeatRange * ) NULL		3463180	1					
ANR	3463322	CastTarget	OnigRepeatRange *		3463180	0					
ANR	3463323	Identifier	NULL		3463180	1					
ANR	3463324	ExpressionStatement	reg -> num_comb_exp_check = 0	5297:2:119475:119502	3463180	16	True				
ANR	3463325	AssignmentExpression	reg -> num_comb_exp_check = 0		3463180	0		=			
ANR	3463326	PtrMemberAccess	reg -> num_comb_exp_check		3463180	0					
ANR	3463327	Identifier	reg		3463180	0					
ANR	3463328	Identifier	num_comb_exp_check		3463180	1					
ANR	3463329	PrimaryExpression	0		3463180	1					
ANR	3463330	ExpressionStatement	"r = onig_parse_make_tree ( & root , pattern , pattern_end , reg , & scan_env )"	5300:2:119514:119583	3463180	17	True				
ANR	3463331	AssignmentExpression	"r = onig_parse_make_tree ( & root , pattern , pattern_end , reg , & scan_env )"		3463180	0		=			
ANR	3463332	Identifier	r		3463180	0					
ANR	3463333	CallExpression	"onig_parse_make_tree ( & root , pattern , pattern_end , reg , & scan_env )"		3463180	1					
ANR	3463334	Callee	onig_parse_make_tree		3463180	0					
ANR	3463335	Identifier	onig_parse_make_tree		3463180	0					
ANR	3463336	ArgumentList	& root		3463180	1					
ANR	3463337	Argument	& root		3463180	0					
ANR	3463338	UnaryOperationExpression	& root		3463180	0					
ANR	3463339	UnaryOperator	&		3463180	0					
ANR	3463340	Identifier	root		3463180	1					
ANR	3463341	Argument	pattern		3463180	1					
ANR	3463342	Identifier	pattern		3463180	0					
ANR	3463343	Argument	pattern_end		3463180	2					
ANR	3463344	Identifier	pattern_end		3463180	0					
ANR	3463345	Argument	reg		3463180	3					
ANR	3463346	Identifier	reg		3463180	0					
ANR	3463347	Argument	& scan_env		3463180	4					
ANR	3463348	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463349	UnaryOperator	&		3463180	0					
ANR	3463350	Identifier	scan_env		3463180	1					
ANR	3463351	IfStatement	if ( r != 0 )		3463180	18					
ANR	3463352	Condition	r != 0	5301:6:119591:119596	3463180	0	True				
ANR	3463353	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463354	Identifier	r		3463180	0					
ANR	3463355	PrimaryExpression	0		3463180	1					
ANR	3463356	GotoStatement	goto err ;	5301:14:119599:119607	3463180	1	True				
ANR	3463357	Identifier	err		3463180	0					
ANR	3463358	IfStatement	"if ( scan_env . num_named > 0 && IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP ) )"		3463180	19					
ANR	3463359	Condition	"scan_env . num_named > 0 && IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"	5305:6:119688:119852	3463180	0	True				
ANR	3463360	AndExpression	"scan_env . num_named > 0 && IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3463180	0		&&			
ANR	3463361	RelationalExpression	scan_env . num_named > 0		3463180	0		>			
ANR	3463362	MemberAccess	scan_env . num_named		3463180	0					
ANR	3463363	Identifier	scan_env		3463180	0					
ANR	3463364	Identifier	num_named		3463180	1					
ANR	3463365	PrimaryExpression	0		3463180	1					
ANR	3463366	AndExpression	"IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3463180	1		&&			
ANR	3463367	CallExpression	"IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP )"		3463180	0					
ANR	3463368	Callee	IS_SYNTAX_BV		3463180	0					
ANR	3463369	Identifier	IS_SYNTAX_BV		3463180	0					
ANR	3463370	ArgumentList	scan_env . syntax		3463180	1					
ANR	3463371	Argument	scan_env . syntax		3463180	0					
ANR	3463372	MemberAccess	scan_env . syntax		3463180	0					
ANR	3463373	Identifier	scan_env		3463180	0					
ANR	3463374	Identifier	syntax		3463180	1					
ANR	3463375	Argument	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3463180	1					
ANR	3463376	Identifier	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3463180	0					
ANR	3463377	UnaryOperationExpression	"! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3463180	1					
ANR	3463378	UnaryOperator	!		3463180	0					
ANR	3463379	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3463180	1					
ANR	3463380	Callee	ONIG_IS_OPTION_ON		3463180	0					
ANR	3463381	Identifier	ONIG_IS_OPTION_ON		3463180	0					
ANR	3463382	ArgumentList	reg -> options		3463180	1					
ANR	3463383	Argument	reg -> options		3463180	0					
ANR	3463384	PtrMemberAccess	reg -> options		3463180	0					
ANR	3463385	Identifier	reg		3463180	0					
ANR	3463386	Identifier	options		3463180	1					
ANR	3463387	Argument	ONIG_OPTION_CAPTURE_GROUP		3463180	1					
ANR	3463388	Identifier	ONIG_OPTION_CAPTURE_GROUP		3463180	0					
ANR	3463389	CompoundStatement		44:67:1138:1138	3463180	1					
ANR	3463390	IfStatement	if ( scan_env . num_named != scan_env . num_mem )		3463180	0					
ANR	3463391	Condition	scan_env . num_named != scan_env . num_mem	5308:8:119865:119902	3463180	0	True				
ANR	3463392	EqualityExpression	scan_env . num_named != scan_env . num_mem		3463180	0		!=			
ANR	3463393	MemberAccess	scan_env . num_named		3463180	0					
ANR	3463394	Identifier	scan_env		3463180	0					
ANR	3463395	Identifier	num_named		3463180	1					
ANR	3463396	MemberAccess	scan_env . num_mem		3463180	1					
ANR	3463397	Identifier	scan_env		3463180	0					
ANR	3463398	Identifier	num_mem		3463180	1					
ANR	3463399	ExpressionStatement	"r = disable_noname_group_capture ( & root , reg , & scan_env )"	5309:6:119911:119966	3463180	1	True				
ANR	3463400	AssignmentExpression	"r = disable_noname_group_capture ( & root , reg , & scan_env )"		3463180	0		=			
ANR	3463401	Identifier	r		3463180	0					
ANR	3463402	CallExpression	"disable_noname_group_capture ( & root , reg , & scan_env )"		3463180	1					
ANR	3463403	Callee	disable_noname_group_capture		3463180	0					
ANR	3463404	Identifier	disable_noname_group_capture		3463180	0					
ANR	3463405	ArgumentList	& root		3463180	1					
ANR	3463406	Argument	& root		3463180	0					
ANR	3463407	UnaryOperationExpression	& root		3463180	0					
ANR	3463408	UnaryOperator	&		3463180	0					
ANR	3463409	Identifier	root		3463180	1					
ANR	3463410	Argument	reg		3463180	1					
ANR	3463411	Identifier	reg		3463180	0					
ANR	3463412	Argument	& scan_env		3463180	2					
ANR	3463413	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463414	UnaryOperator	&		3463180	0					
ANR	3463415	Identifier	scan_env		3463180	1					
ANR	3463416	ElseStatement	else		3463180	0					
ANR	3463417	ExpressionStatement	r = numbered_ref_check ( root )	5311:6:119983:120011	3463180	0	True				
ANR	3463418	AssignmentExpression	r = numbered_ref_check ( root )		3463180	0		=			
ANR	3463419	Identifier	r		3463180	0					
ANR	3463420	CallExpression	numbered_ref_check ( root )		3463180	1					
ANR	3463421	Callee	numbered_ref_check		3463180	0					
ANR	3463422	Identifier	numbered_ref_check		3463180	0					
ANR	3463423	ArgumentList	root		3463180	1					
ANR	3463424	Argument	root		3463180	0					
ANR	3463425	Identifier	root		3463180	0					
ANR	3463426	IfStatement	if ( r != 0 )		3463180	1					
ANR	3463427	Condition	r != 0	5313:8:120022:120027	3463180	0	True				
ANR	3463428	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463429	Identifier	r		3463180	0					
ANR	3463430	PrimaryExpression	0		3463180	1					
ANR	3463431	GotoStatement	goto err ;	5313:16:120030:120038	3463180	1	True				
ANR	3463432	Identifier	err		3463180	0					
ANR	3463433	IfStatement	if ( scan_env . num_call > 0 )		3463180	20					
ANR	3463434	Condition	scan_env . num_call > 0	5318:6:120081:120101	3463180	0	True				
ANR	3463435	RelationalExpression	scan_env . num_call > 0		3463180	0		>			
ANR	3463436	MemberAccess	scan_env . num_call		3463180	0					
ANR	3463437	Identifier	scan_env		3463180	0					
ANR	3463438	Identifier	num_call		3463180	1					
ANR	3463439	PrimaryExpression	0		3463180	1					
ANR	3463440	CompoundStatement		55:29:1387:1387	3463180	1					
ANR	3463441	ExpressionStatement	"r = unset_addr_list_init ( & uslist , scan_env . num_call )"	5319:4:120110:120162	3463180	0	True				
ANR	3463442	AssignmentExpression	"r = unset_addr_list_init ( & uslist , scan_env . num_call )"		3463180	0		=			
ANR	3463443	Identifier	r		3463180	0					
ANR	3463444	CallExpression	"unset_addr_list_init ( & uslist , scan_env . num_call )"		3463180	1					
ANR	3463445	Callee	unset_addr_list_init		3463180	0					
ANR	3463446	Identifier	unset_addr_list_init		3463180	0					
ANR	3463447	ArgumentList	& uslist		3463180	1					
ANR	3463448	Argument	& uslist		3463180	0					
ANR	3463449	UnaryOperationExpression	& uslist		3463180	0					
ANR	3463450	UnaryOperator	&		3463180	0					
ANR	3463451	Identifier	uslist		3463180	1					
ANR	3463452	Argument	scan_env . num_call		3463180	1					
ANR	3463453	MemberAccess	scan_env . num_call		3463180	0					
ANR	3463454	Identifier	scan_env		3463180	0					
ANR	3463455	Identifier	num_call		3463180	1					
ANR	3463456	IfStatement	if ( r != 0 )		3463180	1					
ANR	3463457	Condition	r != 0	5320:8:120172:120177	3463180	0	True				
ANR	3463458	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463459	Identifier	r		3463180	0					
ANR	3463460	PrimaryExpression	0		3463180	1					
ANR	3463461	GotoStatement	goto err ;	5320:16:120180:120188	3463180	1	True				
ANR	3463462	Identifier	err		3463180	0					
ANR	3463463	ExpressionStatement	scan_env . unset_addr_list = & uslist	5321:4:120194:120228	3463180	2	True				
ANR	3463464	AssignmentExpression	scan_env . unset_addr_list = & uslist		3463180	0		=			
ANR	3463465	MemberAccess	scan_env . unset_addr_list		3463180	0					
ANR	3463466	Identifier	scan_env		3463180	0					
ANR	3463467	Identifier	unset_addr_list		3463180	1					
ANR	3463468	UnaryOperationExpression	& uslist		3463180	1					
ANR	3463469	UnaryOperator	&		3463180	0					
ANR	3463470	Identifier	uslist		3463180	1					
ANR	3463471	ExpressionStatement	"r = setup_subexp_call ( root , & scan_env )"	5322:4:120234:120272	3463180	3	True				
ANR	3463472	AssignmentExpression	"r = setup_subexp_call ( root , & scan_env )"		3463180	0		=			
ANR	3463473	Identifier	r		3463180	0					
ANR	3463474	CallExpression	"setup_subexp_call ( root , & scan_env )"		3463180	1					
ANR	3463475	Callee	setup_subexp_call		3463180	0					
ANR	3463476	Identifier	setup_subexp_call		3463180	0					
ANR	3463477	ArgumentList	root		3463180	1					
ANR	3463478	Argument	root		3463180	0					
ANR	3463479	Identifier	root		3463180	0					
ANR	3463480	Argument	& scan_env		3463180	1					
ANR	3463481	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463482	UnaryOperator	&		3463180	0					
ANR	3463483	Identifier	scan_env		3463180	1					
ANR	3463484	IfStatement	if ( r != 0 )		3463180	4					
ANR	3463485	Condition	r != 0	5323:8:120282:120287	3463180	0	True				
ANR	3463486	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463487	Identifier	r		3463180	0					
ANR	3463488	PrimaryExpression	0		3463180	1					
ANR	3463489	GotoStatement	goto err_unset ;	5323:16:120290:120304	3463180	1	True				
ANR	3463490	Identifier	err_unset		3463180	0					
ANR	3463491	ExpressionStatement	"r = subexp_recursive_check_trav ( root , & scan_env )"	5324:4:120310:120358	3463180	5	True				
ANR	3463492	AssignmentExpression	"r = subexp_recursive_check_trav ( root , & scan_env )"		3463180	0		=			
ANR	3463493	Identifier	r		3463180	0					
ANR	3463494	CallExpression	"subexp_recursive_check_trav ( root , & scan_env )"		3463180	1					
ANR	3463495	Callee	subexp_recursive_check_trav		3463180	0					
ANR	3463496	Identifier	subexp_recursive_check_trav		3463180	0					
ANR	3463497	ArgumentList	root		3463180	1					
ANR	3463498	Argument	root		3463180	0					
ANR	3463499	Identifier	root		3463180	0					
ANR	3463500	Argument	& scan_env		3463180	1					
ANR	3463501	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463502	UnaryOperator	&		3463180	0					
ANR	3463503	Identifier	scan_env		3463180	1					
ANR	3463504	IfStatement	if ( r < 0 )		3463180	6					
ANR	3463505	Condition	r < 0	5325:8:120368:120373	3463180	0	True				
ANR	3463506	RelationalExpression	r < 0		3463180	0		<			
ANR	3463507	Identifier	r		3463180	0					
ANR	3463508	PrimaryExpression	0		3463180	1					
ANR	3463509	GotoStatement	goto err_unset ;	5325:16:120376:120390	3463180	1	True				
ANR	3463510	Identifier	err_unset		3463180	0					
ANR	3463511	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( root , & scan_env )"	5326:4:120396:120448	3463180	7	True				
ANR	3463512	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( root , & scan_env )"		3463180	0		=			
ANR	3463513	Identifier	r		3463180	0					
ANR	3463514	CallExpression	"subexp_inf_recursive_check_trav ( root , & scan_env )"		3463180	1					
ANR	3463515	Callee	subexp_inf_recursive_check_trav		3463180	0					
ANR	3463516	Identifier	subexp_inf_recursive_check_trav		3463180	0					
ANR	3463517	ArgumentList	root		3463180	1					
ANR	3463518	Argument	root		3463180	0					
ANR	3463519	Identifier	root		3463180	0					
ANR	3463520	Argument	& scan_env		3463180	1					
ANR	3463521	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463522	UnaryOperator	&		3463180	0					
ANR	3463523	Identifier	scan_env		3463180	1					
ANR	3463524	IfStatement	if ( r != 0 )		3463180	8					
ANR	3463525	Condition	r != 0	5327:8:120458:120463	3463180	0	True				
ANR	3463526	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463527	Identifier	r		3463180	0					
ANR	3463528	PrimaryExpression	0		3463180	1					
ANR	3463529	GotoStatement	goto err_unset ;	5327:16:120466:120480	3463180	1	True				
ANR	3463530	Identifier	err_unset		3463180	0					
ANR	3463531	ExpressionStatement	reg -> num_call = scan_env . num_call	5329:4:120487:120520	3463180	9	True				
ANR	3463532	AssignmentExpression	reg -> num_call = scan_env . num_call		3463180	0		=			
ANR	3463533	PtrMemberAccess	reg -> num_call		3463180	0					
ANR	3463534	Identifier	reg		3463180	0					
ANR	3463535	Identifier	num_call		3463180	1					
ANR	3463536	MemberAccess	scan_env . num_call		3463180	1					
ANR	3463537	Identifier	scan_env		3463180	0					
ANR	3463538	Identifier	num_call		3463180	1					
ANR	3463539	ElseStatement	else		3463180	0					
ANR	3463540	ExpressionStatement	reg -> num_call = 0	5332:4:120537:120554	3463180	0	True				
ANR	3463541	AssignmentExpression	reg -> num_call = 0		3463180	0		=			
ANR	3463542	PtrMemberAccess	reg -> num_call		3463180	0					
ANR	3463543	Identifier	reg		3463180	0					
ANR	3463544	Identifier	num_call		3463180	1					
ANR	3463545	PrimaryExpression	0		3463180	1					
ANR	3463546	ExpressionStatement	"r = setup_tree ( root , reg , 0 , & scan_env )"	5335:2:120566:120605	3463180	21	True				
ANR	3463547	AssignmentExpression	"r = setup_tree ( root , reg , 0 , & scan_env )"		3463180	0		=			
ANR	3463548	Identifier	r		3463180	0					
ANR	3463549	CallExpression	"setup_tree ( root , reg , 0 , & scan_env )"		3463180	1					
ANR	3463550	Callee	setup_tree		3463180	0					
ANR	3463551	Identifier	setup_tree		3463180	0					
ANR	3463552	ArgumentList	root		3463180	1					
ANR	3463553	Argument	root		3463180	0					
ANR	3463554	Identifier	root		3463180	0					
ANR	3463555	Argument	reg		3463180	1					
ANR	3463556	Identifier	reg		3463180	0					
ANR	3463557	Argument	0		3463180	2					
ANR	3463558	PrimaryExpression	0		3463180	0					
ANR	3463559	Argument	& scan_env		3463180	3					
ANR	3463560	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463561	UnaryOperator	&		3463180	0					
ANR	3463562	Identifier	scan_env		3463180	1					
ANR	3463563	IfStatement	if ( r != 0 )		3463180	22					
ANR	3463564	Condition	r != 0	5336:6:120613:120618	3463180	0	True				
ANR	3463565	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463566	Identifier	r		3463180	0					
ANR	3463567	PrimaryExpression	0		3463180	1					
ANR	3463568	GotoStatement	goto err_unset ;	5336:14:120621:120635	3463180	1	True				
ANR	3463569	Identifier	err_unset		3463180	0					
ANR	3463570	ExpressionStatement	"print_tree ( stderr , root )"	5339:2:120669:120693	3463180	23	True				
ANR	3463571	CallExpression	"print_tree ( stderr , root )"		3463180	0					
ANR	3463572	Callee	print_tree		3463180	0					
ANR	3463573	Identifier	print_tree		3463180	0					
ANR	3463574	ArgumentList	stderr		3463180	1					
ANR	3463575	Argument	stderr		3463180	0					
ANR	3463576	Identifier	stderr		3463180	0					
ANR	3463577	Argument	root		3463180	1					
ANR	3463578	Identifier	root		3463180	0					
ANR	3463579	ExpressionStatement	reg -> capture_history = scan_env . capture_history	5342:2:120705:120753	3463180	24	True				
ANR	3463580	AssignmentExpression	reg -> capture_history = scan_env . capture_history		3463180	0		=			
ANR	3463581	PtrMemberAccess	reg -> capture_history		3463180	0					
ANR	3463582	Identifier	reg		3463180	0					
ANR	3463583	Identifier	capture_history		3463180	1					
ANR	3463584	MemberAccess	scan_env . capture_history		3463180	1					
ANR	3463585	Identifier	scan_env		3463180	0					
ANR	3463586	Identifier	capture_history		3463180	1					
ANR	3463587	ExpressionStatement	reg -> bt_mem_start = scan_env . bt_mem_start	5343:2:120757:120802	3463180	25	True				
ANR	3463588	AssignmentExpression	reg -> bt_mem_start = scan_env . bt_mem_start		3463180	0		=			
ANR	3463589	PtrMemberAccess	reg -> bt_mem_start		3463180	0					
ANR	3463590	Identifier	reg		3463180	0					
ANR	3463591	Identifier	bt_mem_start		3463180	1					
ANR	3463592	MemberAccess	scan_env . bt_mem_start		3463180	1					
ANR	3463593	Identifier	scan_env		3463180	0					
ANR	3463594	Identifier	bt_mem_start		3463180	1					
ANR	3463595	ExpressionStatement	reg -> bt_mem_start |= reg -> capture_history	5344:2:120806:120850	3463180	26	True				
ANR	3463596	AssignmentExpression	reg -> bt_mem_start |= reg -> capture_history		3463180	0		|=			
ANR	3463597	PtrMemberAccess	reg -> bt_mem_start		3463180	0					
ANR	3463598	Identifier	reg		3463180	0					
ANR	3463599	Identifier	bt_mem_start		3463180	1					
ANR	3463600	PtrMemberAccess	reg -> capture_history		3463180	1					
ANR	3463601	Identifier	reg		3463180	0					
ANR	3463602	Identifier	capture_history		3463180	1					
ANR	3463603	IfStatement	if ( IS_FIND_CONDITION ( reg -> options ) )		3463180	27					
ANR	3463604	Condition	IS_FIND_CONDITION ( reg -> options )	5345:6:120858:120888	3463180	0	True				
ANR	3463605	CallExpression	IS_FIND_CONDITION ( reg -> options )		3463180	0					
ANR	3463606	Callee	IS_FIND_CONDITION		3463180	0					
ANR	3463607	Identifier	IS_FIND_CONDITION		3463180	0					
ANR	3463608	ArgumentList	reg -> options		3463180	1					
ANR	3463609	Argument	reg -> options		3463180	0					
ANR	3463610	PtrMemberAccess	reg -> options		3463180	0					
ANR	3463611	Identifier	reg		3463180	0					
ANR	3463612	Identifier	options		3463180	1					
ANR	3463613	ExpressionStatement	BIT_STATUS_ON_ALL ( reg -> bt_mem_end )	5346:4:120895:120929	3463180	1	True				
ANR	3463614	CallExpression	BIT_STATUS_ON_ALL ( reg -> bt_mem_end )		3463180	0					
ANR	3463615	Callee	BIT_STATUS_ON_ALL		3463180	0					
ANR	3463616	Identifier	BIT_STATUS_ON_ALL		3463180	0					
ANR	3463617	ArgumentList	reg -> bt_mem_end		3463180	1					
ANR	3463618	Argument	reg -> bt_mem_end		3463180	0					
ANR	3463619	PtrMemberAccess	reg -> bt_mem_end		3463180	0					
ANR	3463620	Identifier	reg		3463180	0					
ANR	3463621	Identifier	bt_mem_end		3463180	1					
ANR	3463622	ElseStatement	else		3463180	0					
ANR	3463623	CompoundStatement		84:7:2221:2221	3463180	0					
ANR	3463624	ExpressionStatement	reg -> bt_mem_end = scan_env . bt_mem_end	5348:4:120944:120982	3463180	0	True				
ANR	3463625	AssignmentExpression	reg -> bt_mem_end = scan_env . bt_mem_end		3463180	0		=			
ANR	3463626	PtrMemberAccess	reg -> bt_mem_end		3463180	0					
ANR	3463627	Identifier	reg		3463180	0					
ANR	3463628	Identifier	bt_mem_end		3463180	1					
ANR	3463629	MemberAccess	scan_env . bt_mem_end		3463180	1					
ANR	3463630	Identifier	scan_env		3463180	0					
ANR	3463631	Identifier	bt_mem_end		3463180	1					
ANR	3463632	ExpressionStatement	reg -> bt_mem_end |= reg -> capture_history	5349:4:120988:121027	3463180	1	True				
ANR	3463633	AssignmentExpression	reg -> bt_mem_end |= reg -> capture_history		3463180	0		|=			
ANR	3463634	PtrMemberAccess	reg -> bt_mem_end		3463180	0					
ANR	3463635	Identifier	reg		3463180	0					
ANR	3463636	Identifier	bt_mem_end		3463180	1					
ANR	3463637	PtrMemberAccess	reg -> capture_history		3463180	1					
ANR	3463638	Identifier	reg		3463180	0					
ANR	3463639	Identifier	capture_history		3463180	1					
ANR	3463640	Statement	if	5353:2:121075:121076	3463180	28	True				
ANR	3463641	Statement	(	5353:5:121078:121078	3463180	29	True				
ANR	3463642	Statement	scan_env	5353:6:121079:121086	3463180	30	True				
ANR	3463643	Statement	.	5353:14:121087:121087	3463180	31	True				
ANR	3463644	Statement	backrefed_mem	5353:15:121088:121100	3463180	32	True				
ANR	3463645	Statement	==	5353:29:121102:121103	3463180	33	True				
ANR	3463646	Statement	0	5353:32:121105:121105	3463180	34	True				
ANR	3463647	Statement	||	5355:6:121136:121137	3463180	35	True				
ANR	3463648	Statement	scan_env	5355:9:121139:121146	3463180	36	True				
ANR	3463649	Statement	.	5355:17:121147:121147	3463180	37	True				
ANR	3463650	Statement	num_call	5355:18:121148:121155	3463180	38	True				
ANR	3463651	Statement	==	5355:27:121157:121158	3463180	39	True				
ANR	3463652	Statement	0	5355:30:121160:121160	3463180	40	True				
ANR	3463653	Statement	)	5357:6:121175:121175	3463180	41	True				
ANR	3463654	CompoundStatement		94:8:2460:2460	3463180	42					
ANR	3463655	ExpressionStatement	"setup_comb_exp_check ( root , 0 , & scan_env )"	5358:4:121183:121223	3463180	0	True				
ANR	3463656	CallExpression	"setup_comb_exp_check ( root , 0 , & scan_env )"		3463180	0					
ANR	3463657	Callee	setup_comb_exp_check		3463180	0					
ANR	3463658	Identifier	setup_comb_exp_check		3463180	0					
ANR	3463659	ArgumentList	root		3463180	1					
ANR	3463660	Argument	root		3463180	0					
ANR	3463661	Identifier	root		3463180	0					
ANR	3463662	Argument	0		3463180	1					
ANR	3463663	PrimaryExpression	0		3463180	0					
ANR	3463664	Argument	& scan_env		3463180	2					
ANR	3463665	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463666	UnaryOperator	&		3463180	0					
ANR	3463667	Identifier	scan_env		3463180	1					
ANR	3463668	IfStatement	if ( scan_env . has_recursion != 0 )		3463180	1					
ANR	3463669	Condition	scan_env . has_recursion != 0	5360:8:121256:121282	3463180	0	True				
ANR	3463670	EqualityExpression	scan_env . has_recursion != 0		3463180	0		!=			
ANR	3463671	MemberAccess	scan_env . has_recursion		3463180	0					
ANR	3463672	Identifier	scan_env		3463180	0					
ANR	3463673	Identifier	has_recursion		3463180	1					
ANR	3463674	PrimaryExpression	0		3463180	1					
ANR	3463675	CompoundStatement		97:37:2568:2568	3463180	1					
ANR	3463676	ExpressionStatement	scan_env . num_comb_exp_check = 0	5361:6:121293:121324	3463180	0	True				
ANR	3463677	AssignmentExpression	scan_env . num_comb_exp_check = 0		3463180	0		=			
ANR	3463678	MemberAccess	scan_env . num_comb_exp_check		3463180	0					
ANR	3463679	Identifier	scan_env		3463180	0					
ANR	3463680	Identifier	num_comb_exp_check		3463180	1					
ANR	3463681	PrimaryExpression	0		3463180	1					
ANR	3463682	ElseStatement	else		3463180	0					
ANR	3463683	IfStatement	if ( scan_env . comb_exp_max_regnum > 0 )		3463180	0					
ANR	3463684	Condition	scan_env . comb_exp_max_regnum > 0	5365:8:121356:121387	3463180	0	True				
ANR	3463685	RelationalExpression	scan_env . comb_exp_max_regnum > 0		3463180	0		>			
ANR	3463686	MemberAccess	scan_env . comb_exp_max_regnum		3463180	0					
ANR	3463687	Identifier	scan_env		3463180	0					
ANR	3463688	Identifier	comb_exp_max_regnum		3463180	1					
ANR	3463689	PrimaryExpression	0		3463180	1					
ANR	3463690	CompoundStatement		103:6:2681:2686	3463180	1					
ANR	3463691	IdentifierDeclStatement	int i ;	5366:6:121398:121403	3463180	0	True				
ANR	3463692	IdentifierDecl	i		3463180	0					
ANR	3463693	IdentifierDeclType	int		3463180	0					
ANR	3463694	Identifier	i		3463180	1					
ANR	3463695	ForStatement	for ( i = 1 ; i <= scan_env . comb_exp_max_regnum ; i ++ )		3463180	1					
ANR	3463696	ForInit	i = 1 ;	5367:11:121416:121421	3463180	0	True				
ANR	3463697	AssignmentExpression	i = 1		3463180	0		=			
ANR	3463698	Identifier	i		3463180	0					
ANR	3463699	PrimaryExpression	1		3463180	1					
ANR	3463700	Condition	i <= scan_env . comb_exp_max_regnum	5367:18:121423:121455	3463180	1	True				
ANR	3463701	RelationalExpression	i <= scan_env . comb_exp_max_regnum		3463180	0		<=			
ANR	3463702	Identifier	i		3463180	0					
ANR	3463703	MemberAccess	scan_env . comb_exp_max_regnum		3463180	1					
ANR	3463704	Identifier	scan_env		3463180	0					
ANR	3463705	Identifier	comb_exp_max_regnum		3463180	1					
ANR	3463706	PostIncDecOperationExpression	i ++	5367:53:121458:121460	3463180	2	True				
ANR	3463707	Identifier	i		3463180	0					
ANR	3463708	IncDec	++		3463180	1					
ANR	3463709	CompoundStatement		104:58:2746:2746	3463180	3					
ANR	3463710	IfStatement	"if ( BIT_STATUS_AT ( scan_env . backrefed_mem , i ) != 0 )"		3463180	0					
ANR	3463711	Condition	"BIT_STATUS_AT ( scan_env . backrefed_mem , i ) != 0"	5368:5:121470:121514	3463180	0	True				
ANR	3463712	EqualityExpression	"BIT_STATUS_AT ( scan_env . backrefed_mem , i ) != 0"		3463180	0		!=			
ANR	3463713	CallExpression	"BIT_STATUS_AT ( scan_env . backrefed_mem , i )"		3463180	0					
ANR	3463714	Callee	BIT_STATUS_AT		3463180	0					
ANR	3463715	Identifier	BIT_STATUS_AT		3463180	0					
ANR	3463716	ArgumentList	scan_env . backrefed_mem		3463180	1					
ANR	3463717	Argument	scan_env . backrefed_mem		3463180	0					
ANR	3463718	MemberAccess	scan_env . backrefed_mem		3463180	0					
ANR	3463719	Identifier	scan_env		3463180	0					
ANR	3463720	Identifier	backrefed_mem		3463180	1					
ANR	3463721	Argument	i		3463180	1					
ANR	3463722	Identifier	i		3463180	0					
ANR	3463723	PrimaryExpression	0		3463180	1					
ANR	3463724	CompoundStatement		105:52:2800:2800	3463180	1					
ANR	3463725	ExpressionStatement	scan_env . num_comb_exp_check = 0	5369:3:121522:121553	3463180	0	True				
ANR	3463726	AssignmentExpression	scan_env . num_comb_exp_check = 0		3463180	0		=			
ANR	3463727	MemberAccess	scan_env . num_comb_exp_check		3463180	0					
ANR	3463728	Identifier	scan_env		3463180	0					
ANR	3463729	Identifier	num_comb_exp_check		3463180	1					
ANR	3463730	PrimaryExpression	0		3463180	1					
ANR	3463731	BreakStatement	break ;	5370:3:121558:121563	3463180	1	True				
ANR	3463732	ExpressionStatement	reg -> num_comb_exp_check = scan_env . num_comb_exp_check	5376:2:121589:121642	3463180	43	True				
ANR	3463733	AssignmentExpression	reg -> num_comb_exp_check = scan_env . num_comb_exp_check		3463180	0		=			
ANR	3463734	PtrMemberAccess	reg -> num_comb_exp_check		3463180	0					
ANR	3463735	Identifier	reg		3463180	0					
ANR	3463736	Identifier	num_comb_exp_check		3463180	1					
ANR	3463737	MemberAccess	scan_env . num_comb_exp_check		3463180	1					
ANR	3463738	Identifier	scan_env		3463180	0					
ANR	3463739	Identifier	num_comb_exp_check		3463180	1					
ANR	3463740	ExpressionStatement	clear_optimize_info ( reg )	5379:2:121654:121678	3463180	44	True				
ANR	3463741	CallExpression	clear_optimize_info ( reg )		3463180	0					
ANR	3463742	Callee	clear_optimize_info		3463180	0					
ANR	3463743	Identifier	clear_optimize_info		3463180	0					
ANR	3463744	ArgumentList	reg		3463180	1					
ANR	3463745	Argument	reg		3463180	0					
ANR	3463746	Identifier	reg		3463180	0					
ANR	3463747	ExpressionStatement	"r = set_optimize_info_from_tree ( root , reg , & scan_env )"	5381:2:121709:121762	3463180	45	True				
ANR	3463748	AssignmentExpression	"r = set_optimize_info_from_tree ( root , reg , & scan_env )"		3463180	0		=			
ANR	3463749	Identifier	r		3463180	0					
ANR	3463750	CallExpression	"set_optimize_info_from_tree ( root , reg , & scan_env )"		3463180	1					
ANR	3463751	Callee	set_optimize_info_from_tree		3463180	0					
ANR	3463752	Identifier	set_optimize_info_from_tree		3463180	0					
ANR	3463753	ArgumentList	root		3463180	1					
ANR	3463754	Argument	root		3463180	0					
ANR	3463755	Identifier	root		3463180	0					
ANR	3463756	Argument	reg		3463180	1					
ANR	3463757	Identifier	reg		3463180	0					
ANR	3463758	Argument	& scan_env		3463180	2					
ANR	3463759	UnaryOperationExpression	& scan_env		3463180	0					
ANR	3463760	UnaryOperator	&		3463180	0					
ANR	3463761	Identifier	scan_env		3463180	1					
ANR	3463762	IfStatement	if ( r != 0 )		3463180	46					
ANR	3463763	Condition	r != 0	5382:6:121770:121775	3463180	0	True				
ANR	3463764	EqualityExpression	r != 0		3463180	0		!=			
ANR	3463765	Identifier	r		3463180	0					
ANR	3463766	PrimaryExpression	0		3463180	1					
ANR	3463767	GotoStatement	goto err_unset ;	5382:14:121778:121792	3463180	1	True				
ANR	3463768	Identifier	err_unset		3463180	0					
ANR	3463769	IfStatement	if ( IS_NOT_NULL ( scan_env . mem_nodes_dynamic ) )		3463180	47					
ANR	3463770	Condition	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )	5385:6:121808:121846	3463180	0	True				
ANR	3463771	CallExpression	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )		3463180	0					
ANR	3463772	Callee	IS_NOT_NULL		3463180	0					
ANR	3463773	Identifier	IS_NOT_NULL		3463180	0					
ANR	3463774	ArgumentList	scan_env . mem_nodes_dynamic		3463180	1					
ANR	3463775	Argument	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3463776	MemberAccess	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3463777	Identifier	scan_env		3463180	0					
ANR	3463778	Identifier	mem_nodes_dynamic		3463180	1					
ANR	3463779	CompoundStatement		122:47:3132:3132	3463180	1					
ANR	3463780	ExpressionStatement	xfree ( scan_env . mem_nodes_dynamic )	5386:4:121855:121888	3463180	0	True				
ANR	3463781	CallExpression	xfree ( scan_env . mem_nodes_dynamic )		3463180	0					
ANR	3463782	Callee	xfree		3463180	0					
ANR	3463783	Identifier	xfree		3463180	0					
ANR	3463784	ArgumentList	scan_env . mem_nodes_dynamic		3463180	1					
ANR	3463785	Argument	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3463786	MemberAccess	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3463787	Identifier	scan_env		3463180	0					
ANR	3463788	Identifier	mem_nodes_dynamic		3463180	1					
ANR	3463789	ExpressionStatement	scan_env . mem_nodes_dynamic = ( Node * * ) NULL	5387:4:121894:121936	3463180	1	True				
ANR	3463790	AssignmentExpression	scan_env . mem_nodes_dynamic = ( Node * * ) NULL		3463180	0		=			
ANR	3463791	MemberAccess	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3463792	Identifier	scan_env		3463180	0					
ANR	3463793	Identifier	mem_nodes_dynamic		3463180	1					
ANR	3463794	CastExpression	( Node * * ) NULL		3463180	1					
ANR	3463795	CastTarget	Node * *		3463180	0					
ANR	3463796	Identifier	NULL		3463180	1					
ANR	3463797	ExpressionStatement	"r = compile_tree ( root , reg )"	5390:2:121945:121972	3463180	48	True				
ANR	3463798	AssignmentExpression	"r = compile_tree ( root , reg )"		3463180	0		=			
ANR	3463799	Identifier	r		3463180	0					
ANR	3463800	CallExpression	"compile_tree ( root , reg )"		3463180	1					
ANR	3463801	Callee	compile_tree		3463180	0					
ANR	3463802	Identifier	compile_tree		3463180	0					
ANR	3463803	ArgumentList	root		3463180	1					
ANR	3463804	Argument	root		3463180	0					
ANR	3463805	Identifier	root		3463180	0					
ANR	3463806	Argument	reg		3463180	1					
ANR	3463807	Identifier	reg		3463180	0					
ANR	3463808	IfStatement	if ( r == 0 )		3463180	49					
ANR	3463809	Condition	r == 0	5391:6:121980:121985	3463180	0	True				
ANR	3463810	EqualityExpression	r == 0		3463180	0		==			
ANR	3463811	Identifier	r		3463180	0					
ANR	3463812	PrimaryExpression	0		3463180	1					
ANR	3463813	CompoundStatement		128:14:3271:3271	3463180	1					
ANR	3463814	ExpressionStatement	"r = add_opcode ( reg , OP_END )"	5392:4:121994:122021	3463180	0	True				
ANR	3463815	AssignmentExpression	"r = add_opcode ( reg , OP_END )"		3463180	0		=			
ANR	3463816	Identifier	r		3463180	0					
ANR	3463817	CallExpression	"add_opcode ( reg , OP_END )"		3463180	1					
ANR	3463818	Callee	add_opcode		3463180	0					
ANR	3463819	Identifier	add_opcode		3463180	0					
ANR	3463820	ArgumentList	reg		3463180	1					
ANR	3463821	Argument	reg		3463180	0					
ANR	3463822	Identifier	reg		3463180	0					
ANR	3463823	Argument	OP_END		3463180	1					
ANR	3463824	Identifier	OP_END		3463180	0					
ANR	3463825	IfStatement	if ( scan_env . num_call > 0 )		3463180	1					
ANR	3463826	Condition	scan_env . num_call > 0	5394:8:122054:122074	3463180	0	True				
ANR	3463827	RelationalExpression	scan_env . num_call > 0		3463180	0		>			
ANR	3463828	MemberAccess	scan_env . num_call		3463180	0					
ANR	3463829	Identifier	scan_env		3463180	0					
ANR	3463830	Identifier	num_call		3463180	1					
ANR	3463831	PrimaryExpression	0		3463180	1					
ANR	3463832	CompoundStatement		131:31:3360:3360	3463180	1					
ANR	3463833	ExpressionStatement	"r = unset_addr_list_fix ( & uslist , reg )"	5395:6:122085:122122	3463180	0	True				
ANR	3463834	AssignmentExpression	"r = unset_addr_list_fix ( & uslist , reg )"		3463180	0		=			
ANR	3463835	Identifier	r		3463180	0					
ANR	3463836	CallExpression	"unset_addr_list_fix ( & uslist , reg )"		3463180	1					
ANR	3463837	Callee	unset_addr_list_fix		3463180	0					
ANR	3463838	Identifier	unset_addr_list_fix		3463180	0					
ANR	3463839	ArgumentList	& uslist		3463180	1					
ANR	3463840	Argument	& uslist		3463180	0					
ANR	3463841	UnaryOperationExpression	& uslist		3463180	0					
ANR	3463842	UnaryOperator	&		3463180	0					
ANR	3463843	Identifier	uslist		3463180	1					
ANR	3463844	Argument	reg		3463180	1					
ANR	3463845	Identifier	reg		3463180	0					
ANR	3463846	ExpressionStatement	unset_addr_list_end ( & uslist )	5396:6:122130:122158	3463180	1	True				
ANR	3463847	CallExpression	unset_addr_list_end ( & uslist )		3463180	0					
ANR	3463848	Callee	unset_addr_list_end		3463180	0					
ANR	3463849	Identifier	unset_addr_list_end		3463180	0					
ANR	3463850	ArgumentList	& uslist		3463180	1					
ANR	3463851	Argument	& uslist		3463180	0					
ANR	3463852	UnaryOperationExpression	& uslist		3463180	0					
ANR	3463853	UnaryOperator	&		3463180	0					
ANR	3463854	Identifier	uslist		3463180	1					
ANR	3463855	IfStatement	if ( r )		3463180	2					
ANR	3463856	Condition	r	5397:10:122170:122170	3463180	0	True				
ANR	3463857	Identifier	r		3463180	0					
ANR	3463858	GotoStatement	goto err ;	5397:13:122173:122181	3463180	1	True				
ANR	3463859	Identifier	err		3463180	0					
ANR	3463860	IfStatement	if ( ( reg -> num_repeat != 0 ) || ( reg -> bt_mem_end != 0 ) )		3463180	2					
ANR	3463861	Condition	( reg -> num_repeat != 0 ) || ( reg -> bt_mem_end != 0 )	5401:8:122205:122252	3463180	0	True				
ANR	3463862	OrExpression	( reg -> num_repeat != 0 ) || ( reg -> bt_mem_end != 0 )		3463180	0		||			
ANR	3463863	EqualityExpression	reg -> num_repeat != 0		3463180	0		!=			
ANR	3463864	PtrMemberAccess	reg -> num_repeat		3463180	0					
ANR	3463865	Identifier	reg		3463180	0					
ANR	3463866	Identifier	num_repeat		3463180	1					
ANR	3463867	PrimaryExpression	0		3463180	1					
ANR	3463868	EqualityExpression	reg -> bt_mem_end != 0		3463180	1		!=			
ANR	3463869	PtrMemberAccess	reg -> bt_mem_end		3463180	0					
ANR	3463870	Identifier	reg		3463180	0					
ANR	3463871	Identifier	bt_mem_end		3463180	1					
ANR	3463872	PrimaryExpression	0		3463180	1					
ANR	3463873	ExpressionStatement	reg -> stack_pop_level = STACK_POP_LEVEL_ALL	5402:6:122261:122303	3463180	1	True				
ANR	3463874	AssignmentExpression	reg -> stack_pop_level = STACK_POP_LEVEL_ALL		3463180	0		=			
ANR	3463875	PtrMemberAccess	reg -> stack_pop_level		3463180	0					
ANR	3463876	Identifier	reg		3463180	0					
ANR	3463877	Identifier	stack_pop_level		3463180	1					
ANR	3463878	Identifier	STACK_POP_LEVEL_ALL		3463180	1					
ANR	3463879	ElseStatement	else		3463180	0					
ANR	3463880	CompoundStatement		140:9:3597:3597	3463180	0					
ANR	3463881	IfStatement	if ( reg -> bt_mem_start != 0 )		3463180	0					
ANR	3463882	Condition	reg -> bt_mem_start != 0	5404:10:122326:122347	3463180	0	True				
ANR	3463883	EqualityExpression	reg -> bt_mem_start != 0		3463180	0		!=			
ANR	3463884	PtrMemberAccess	reg -> bt_mem_start		3463180	0					
ANR	3463885	Identifier	reg		3463180	0					
ANR	3463886	Identifier	bt_mem_start		3463180	1					
ANR	3463887	PrimaryExpression	0		3463180	1					
ANR	3463888	ExpressionStatement	reg -> stack_pop_level = STACK_POP_LEVEL_MEM_START	5405:1:122351:122399	3463180	1	True				
ANR	3463889	AssignmentExpression	reg -> stack_pop_level = STACK_POP_LEVEL_MEM_START		3463180	0		=			
ANR	3463890	PtrMemberAccess	reg -> stack_pop_level		3463180	0					
ANR	3463891	Identifier	reg		3463180	0					
ANR	3463892	Identifier	stack_pop_level		3463180	1					
ANR	3463893	Identifier	STACK_POP_LEVEL_MEM_START		3463180	1					
ANR	3463894	ElseStatement	else		3463180	0					
ANR	3463895	ExpressionStatement	reg -> stack_pop_level = STACK_POP_LEVEL_FREE	5407:1:122413:122456	3463180	0	True				
ANR	3463896	AssignmentExpression	reg -> stack_pop_level = STACK_POP_LEVEL_FREE		3463180	0		=			
ANR	3463897	PtrMemberAccess	reg -> stack_pop_level		3463180	0					
ANR	3463898	Identifier	reg		3463180	0					
ANR	3463899	Identifier	stack_pop_level		3463180	1					
ANR	3463900	Identifier	STACK_POP_LEVEL_FREE		3463180	1					
ANR	3463901	ElseStatement	else		3463180	0					
ANR	3463902	IfStatement	if ( scan_env . num_call > 0 )		3463180	0					
ANR	3463903	Condition	scan_env . num_call > 0	5411:11:122502:122522	3463180	0	True				
ANR	3463904	RelationalExpression	scan_env . num_call > 0		3463180	0		>			
ANR	3463905	MemberAccess	scan_env . num_call		3463180	0					
ANR	3463906	Identifier	scan_env		3463180	0					
ANR	3463907	Identifier	num_call		3463180	1					
ANR	3463908	PrimaryExpression	0		3463180	1					
ANR	3463909	CompoundStatement		148:34:3808:3808	3463180	1					
ANR	3463910	ExpressionStatement	unset_addr_list_end ( & uslist )	5412:4:122531:122559	3463180	0	True				
ANR	3463911	CallExpression	unset_addr_list_end ( & uslist )		3463180	0					
ANR	3463912	Callee	unset_addr_list_end		3463180	0					
ANR	3463913	Identifier	unset_addr_list_end		3463180	0					
ANR	3463914	ArgumentList	& uslist		3463180	1					
ANR	3463915	Argument	& uslist		3463180	0					
ANR	3463916	UnaryOperationExpression	& uslist		3463180	0					
ANR	3463917	UnaryOperator	&		3463180	0					
ANR	3463918	Identifier	uslist		3463180	1					
ANR	3463919	ExpressionStatement	onig_node_free ( root )	5415:2:122574:122594	3463180	50	True				
ANR	3463920	CallExpression	onig_node_free ( root )		3463180	0					
ANR	3463921	Callee	onig_node_free		3463180	0					
ANR	3463922	Identifier	onig_node_free		3463180	0					
ANR	3463923	ArgumentList	root		3463180	1					
ANR	3463924	Argument	root		3463180	0					
ANR	3463925	Identifier	root		3463180	0					
ANR	3463926	ExpressionStatement	"onig_print_names ( stderr , reg )"	5419:2:122648:122677	3463180	51	True				
ANR	3463927	CallExpression	"onig_print_names ( stderr , reg )"		3463180	0					
ANR	3463928	Callee	onig_print_names		3463180	0					
ANR	3463929	Identifier	onig_print_names		3463180	0					
ANR	3463930	ArgumentList	stderr		3463180	1					
ANR	3463931	Argument	stderr		3463180	0					
ANR	3463932	Identifier	stderr		3463180	0					
ANR	3463933	Argument	reg		3463180	1					
ANR	3463934	Identifier	reg		3463180	0					
ANR	3463935	ExpressionStatement	"print_compiled_byte_code_list ( stderr , reg )"	5421:2:122688:122730	3463180	52	True				
ANR	3463936	CallExpression	"print_compiled_byte_code_list ( stderr , reg )"		3463180	0					
ANR	3463937	Callee	print_compiled_byte_code_list		3463180	0					
ANR	3463938	Identifier	print_compiled_byte_code_list		3463180	0					
ANR	3463939	ArgumentList	stderr		3463180	1					
ANR	3463940	Argument	stderr		3463180	0					
ANR	3463941	Identifier	stderr		3463180	0					
ANR	3463942	Argument	reg		3463180	1					
ANR	3463943	Identifier	reg		3463180	0					
ANR	3463944	Label	end :	5424:1:122741:122744	3463180	53	True				
ANR	3463945	Identifier	end		3463180	0					
ANR	3463946	ExpressionStatement	reg -> state = ONIG_STATE_NORMAL	5425:2:122748:122778	3463180	54	True				
ANR	3463947	AssignmentExpression	reg -> state = ONIG_STATE_NORMAL		3463180	0		=			
ANR	3463948	PtrMemberAccess	reg -> state		3463180	0					
ANR	3463949	Identifier	reg		3463180	0					
ANR	3463950	Identifier	state		3463180	1					
ANR	3463951	Identifier	ONIG_STATE_NORMAL		3463180	1					
ANR	3463952	ReturnStatement	return r ;	5426:2:122782:122790	3463180	55	True				
ANR	3463953	Identifier	r		3463180	0					
ANR	3463954	Label	err_unset :	5428:1:122794:122803	3463180	56	True				
ANR	3463955	Identifier	err_unset		3463180	0					
ANR	3463956	IfStatement	if ( scan_env . num_call > 0 )		3463180	57					
ANR	3463957	Condition	scan_env . num_call > 0	5430:6:122834:122854	3463180	0	True				
ANR	3463958	RelationalExpression	scan_env . num_call > 0		3463180	0		>			
ANR	3463959	MemberAccess	scan_env . num_call		3463180	0					
ANR	3463960	Identifier	scan_env		3463180	0					
ANR	3463961	Identifier	num_call		3463180	1					
ANR	3463962	PrimaryExpression	0		3463180	1					
ANR	3463963	CompoundStatement		167:29:4140:4140	3463180	1					
ANR	3463964	ExpressionStatement	unset_addr_list_end ( & uslist )	5431:4:122863:122891	3463180	0	True				
ANR	3463965	CallExpression	unset_addr_list_end ( & uslist )		3463180	0					
ANR	3463966	Callee	unset_addr_list_end		3463180	0					
ANR	3463967	Identifier	unset_addr_list_end		3463180	0					
ANR	3463968	ArgumentList	& uslist		3463180	1					
ANR	3463969	Argument	& uslist		3463180	0					
ANR	3463970	UnaryOperationExpression	& uslist		3463180	0					
ANR	3463971	UnaryOperator	&		3463180	0					
ANR	3463972	Identifier	uslist		3463180	1					
ANR	3463973	Label	err :	5434:1:122905:122908	3463180	58	True				
ANR	3463974	Identifier	err		3463180	0					
ANR	3463975	IfStatement	if ( IS_NOT_NULL ( scan_env . error ) )		3463180	59					
ANR	3463976	Condition	IS_NOT_NULL ( scan_env . error )	5435:6:122916:122942	3463180	0	True				
ANR	3463977	CallExpression	IS_NOT_NULL ( scan_env . error )		3463180	0					
ANR	3463978	Callee	IS_NOT_NULL		3463180	0					
ANR	3463979	Identifier	IS_NOT_NULL		3463180	0					
ANR	3463980	ArgumentList	scan_env . error		3463180	1					
ANR	3463981	Argument	scan_env . error		3463180	0					
ANR	3463982	MemberAccess	scan_env . error		3463180	0					
ANR	3463983	Identifier	scan_env		3463180	0					
ANR	3463984	Identifier	error		3463180	1					
ANR	3463985	CompoundStatement		172:35:4228:4228	3463180	1					
ANR	3463986	IfStatement	if ( IS_NOT_NULL ( einfo ) )		3463180	0					
ANR	3463987	Condition	IS_NOT_NULL ( einfo )	5436:8:122955:122972	3463180	0	True				
ANR	3463988	CallExpression	IS_NOT_NULL ( einfo )		3463180	0					
ANR	3463989	Callee	IS_NOT_NULL		3463180	0					
ANR	3463990	Identifier	IS_NOT_NULL		3463180	0					
ANR	3463991	ArgumentList	einfo		3463180	1					
ANR	3463992	Argument	einfo		3463180	0					
ANR	3463993	Identifier	einfo		3463180	0					
ANR	3463994	CompoundStatement		173:28:4258:4258	3463180	1					
ANR	3463995	ExpressionStatement	einfo -> enc = scan_env . enc	5437:6:122983:123012	3463180	0	True				
ANR	3463996	AssignmentExpression	einfo -> enc = scan_env . enc		3463180	0		=			
ANR	3463997	PtrMemberAccess	einfo -> enc		3463180	0					
ANR	3463998	Identifier	einfo		3463180	0					
ANR	3463999	Identifier	enc		3463180	1					
ANR	3464000	MemberAccess	scan_env . enc		3463180	1					
ANR	3464001	Identifier	scan_env		3463180	0					
ANR	3464002	Identifier	enc		3463180	1					
ANR	3464003	ExpressionStatement	einfo -> par = scan_env . error	5438:6:123020:123051	3463180	1	True				
ANR	3464004	AssignmentExpression	einfo -> par = scan_env . error		3463180	0		=			
ANR	3464005	PtrMemberAccess	einfo -> par		3463180	0					
ANR	3464006	Identifier	einfo		3463180	0					
ANR	3464007	Identifier	par		3463180	1					
ANR	3464008	MemberAccess	scan_env . error		3463180	1					
ANR	3464009	Identifier	scan_env		3463180	0					
ANR	3464010	Identifier	error		3463180	1					
ANR	3464011	ExpressionStatement	einfo -> par_end = scan_env . error_end	5439:6:123059:123094	3463180	2	True				
ANR	3464012	AssignmentExpression	einfo -> par_end = scan_env . error_end		3463180	0		=			
ANR	3464013	PtrMemberAccess	einfo -> par_end		3463180	0					
ANR	3464014	Identifier	einfo		3463180	0					
ANR	3464015	Identifier	par_end		3463180	1					
ANR	3464016	MemberAccess	scan_env . error_end		3463180	1					
ANR	3464017	Identifier	scan_env		3463180	0					
ANR	3464018	Identifier	error_end		3463180	1					
ANR	3464019	ExpressionStatement	onig_node_free ( root )	5443:2:123109:123129	3463180	60	True				
ANR	3464020	CallExpression	onig_node_free ( root )		3463180	0					
ANR	3464021	Callee	onig_node_free		3463180	0					
ANR	3464022	Identifier	onig_node_free		3463180	0					
ANR	3464023	ArgumentList	root		3463180	1					
ANR	3464024	Argument	root		3463180	0					
ANR	3464025	Identifier	root		3463180	0					
ANR	3464026	IfStatement	if ( IS_NOT_NULL ( scan_env . mem_nodes_dynamic ) )		3463180	61					
ANR	3464027	Condition	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )	5444:6:123137:123175	3463180	0	True				
ANR	3464028	CallExpression	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )		3463180	0					
ANR	3464029	Callee	IS_NOT_NULL		3463180	0					
ANR	3464030	Identifier	IS_NOT_NULL		3463180	0					
ANR	3464031	ArgumentList	scan_env . mem_nodes_dynamic		3463180	1					
ANR	3464032	Argument	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3464033	MemberAccess	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3464034	Identifier	scan_env		3463180	0					
ANR	3464035	Identifier	mem_nodes_dynamic		3463180	1					
ANR	3464036	ExpressionStatement	xfree ( scan_env . mem_nodes_dynamic )	5445:6:123184:123217	3463180	1	True				
ANR	3464037	CallExpression	xfree ( scan_env . mem_nodes_dynamic )		3463180	0					
ANR	3464038	Callee	xfree		3463180	0					
ANR	3464039	Identifier	xfree		3463180	0					
ANR	3464040	ArgumentList	scan_env . mem_nodes_dynamic		3463180	1					
ANR	3464041	Argument	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3464042	MemberAccess	scan_env . mem_nodes_dynamic		3463180	0					
ANR	3464043	Identifier	scan_env		3463180	0					
ANR	3464044	Identifier	mem_nodes_dynamic		3463180	1					
ANR	3464045	ReturnStatement	return r ;	5446:2:123221:123229	3463180	62	True				
ANR	3464046	Identifier	r		3463180	0					
ANR	3464047	ReturnType	extern int		3463180	1					
ANR	3464048	Identifier	onig_compile		3463180	2					
ANR	3464049	ParameterList	"regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigErrorInfo * einfo"		3463180	3					
ANR	3464050	Parameter	regex_t * reg	5262:13:118625:118636	3463180	0	True				
ANR	3464051	ParameterType	regex_t *		3463180	0					
ANR	3464052	Identifier	reg		3463180	1					
ANR	3464053	Parameter	const UChar * pattern	5262:27:118639:118658	3463180	1	True				
ANR	3464054	ParameterType	const UChar *		3463180	0					
ANR	3464055	Identifier	pattern		3463180	1					
ANR	3464056	Parameter	const UChar * pattern_end	5262:49:118661:118684	3463180	2	True				
ANR	3464057	ParameterType	const UChar *		3463180	0					
ANR	3464058	Identifier	pattern_end		3463180	1					
ANR	3464059	Parameter	OnigErrorInfo * einfo	5263:7:118694:118713	3463180	3	True				
ANR	3464060	ParameterType	OnigErrorInfo *		3463180	0					
ANR	3464061	Identifier	einfo		3463180	1					
ANR	3464062	CFGEntryNode	ENTRY		3463180		True				
ANR	3464063	CFGExitNode	EXIT		3463180		True				
ANR	3464064	Symbol	& scan_env		3463180						
ANR	3464065	Symbol	scan_env . backrefed_mem		3463180						
ANR	3464066	Symbol	reg -> state		3463180						
ANR	3464067	Symbol	scan_env . enc		3463180						
ANR	3464068	Symbol	scan_env . comb_exp_max_regnum		3463180						
ANR	3464069	Symbol	einfo -> par_end		3463180						
ANR	3464070	Symbol	disable_noname_group_capture		3463180						
ANR	3464071	Symbol	scan_env . capture_history		3463180						
ANR	3464072	Symbol	scan_env . syntax		3463180						
ANR	3464073	Symbol	scan_env . num_mem		3463180						
ANR	3464074	Symbol	uslist		3463180						
ANR	3464075	Symbol	setup_subexp_call		3463180						
ANR	3464076	Symbol	onig_parse_make_tree		3463180						
ANR	3464077	Symbol	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3463180						
ANR	3464078	Symbol	& uslist		3463180						
ANR	3464079	Symbol	reg		3463180						
ANR	3464080	Symbol	reg -> options		3463180						
ANR	3464081	Symbol	IS_SYNTAX_BV		3463180						
ANR	3464082	Symbol	add_opcode		3463180						
ANR	3464083	Symbol	scan_env . unset_addr_list		3463180						
ANR	3464084	Symbol	ONIG_STATE_COMPILING		3463180						
ANR	3464085	Symbol	IS_FIND_CONDITION		3463180						
ANR	3464086	Symbol	BIT_STATUS_AT		3463180						
ANR	3464087	Symbol	reg -> stack_pop_level		3463180						
ANR	3464088	Symbol	NULL		3463180						
ANR	3464089	Symbol	subexp_inf_recursive_check_trav		3463180						
ANR	3464090	Symbol	scan_env . bt_mem_start		3463180						
ANR	3464091	Symbol	pattern_end		3463180						
ANR	3464092	Symbol	reg -> capture_history		3463180						
ANR	3464093	Symbol	stderr		3463180						
ANR	3464094	Symbol	reg -> enc		3463180						
ANR	3464095	Symbol	reg -> num_null_check		3463180						
ANR	3464096	Symbol	scan_env . num_named		3463180						
ANR	3464097	Symbol	unset_addr_list_fix		3463180						
ANR	3464098	Symbol	einfo -> par		3463180						
ANR	3464099	Symbol	numbered_ref_check		3463180						
ANR	3464100	Symbol	* einfo		3463180						
ANR	3464101	Symbol	scan_env . num_comb_exp_check		3463180						
ANR	3464102	Symbol	OP_END		3463180						
ANR	3464103	Symbol	ONIG_STATE_NORMAL		3463180						
ANR	3464104	Symbol	IS_NOT_NULL		3463180						
ANR	3464105	Symbol	reg -> repeat_range		3463180						
ANR	3464106	Symbol	pattern		3463180						
ANR	3464107	Symbol	scan_env . bt_mem_end		3463180						
ANR	3464108	Symbol	BBUF_INIT		3463180						
ANR	3464109	Symbol	STACK_POP_LEVEL_FREE		3463180						
ANR	3464110	Symbol	& root		3463180						
ANR	3464111	Symbol	einfo		3463180						
ANR	3464112	Symbol	reg -> repeat_range_alloc		3463180						
ANR	3464113	Symbol	reg -> bt_mem_end		3463180						
ANR	3464114	Symbol	STACK_POP_LEVEL_MEM_START		3463180						
ANR	3464115	Symbol	root		3463180						
ANR	3464116	Symbol	reg -> num_comb_exp_check		3463180						
ANR	3464117	Symbol	scan_env . mem_nodes_dynamic		3463180						
ANR	3464118	Symbol	scan_env		3463180						
ANR	3464119	Symbol	reg -> num_mem		3463180						
ANR	3464120	Symbol	scan_env . error_end		3463180						
ANR	3464121	Symbol	COMPILE_INIT_SIZE		3463180						
ANR	3464122	Symbol	unset_addr_list_init		3463180						
ANR	3464123	Symbol	ONIG_IS_OPTION_ON		3463180						
ANR	3464124	Symbol	set_optimize_info_from_tree		3463180						
ANR	3464125	Symbol	i		3463180						
ANR	3464126	Symbol	reg -> num_call		3463180						
ANR	3464127	Symbol	scan_env . num_call		3463180						
ANR	3464128	Symbol	ONIG_OPTION_CAPTURE_GROUP		3463180						
ANR	3464129	Symbol	setup_tree		3463180						
ANR	3464130	Symbol	STACK_POP_LEVEL_ALL		3463180						
ANR	3464131	Symbol	r		3463180						
ANR	3464132	Symbol	init_size		3463180						
ANR	3464133	Symbol	compile_tree		3463180						
ANR	3464134	Symbol	reg -> bt_mem_start		3463180						
ANR	3464135	Symbol	scan_env . has_recursion		3463180						
ANR	3464136	Symbol	scan_env . error		3463180						
ANR	3464137	Symbol	subexp_recursive_check_trav		3463180						
ANR	3464138	Symbol	einfo -> enc		3463180						
ANR	3464139	Symbol	* reg		3463180						
ANR	3464140	Symbol	reg -> alloc		3463180						
ANR	3464141	Symbol	reg -> used		3463180						
ANR	3464142	Symbol	reg -> num_repeat		3463180						
ANR	3464143	Function	onig_recompile	5450:0:123259:123718							
ANR	3464144	FunctionDef	"onig_recompile (regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo)"		3464143	0					
ANR	3464145	CompoundStatement		5454:0:123444:123718	3464143	0					
ANR	3464146	IdentifierDeclStatement	int r ;	5455:2:123448:123453	3464143	0	True				
ANR	3464147	IdentifierDecl	r		3464143	0					
ANR	3464148	IdentifierDeclType	int		3464143	0					
ANR	3464149	Identifier	r		3464143	1					
ANR	3464150	IdentifierDeclStatement	regex_t * new_reg ;	5456:2:123457:123473	3464143	1	True				
ANR	3464151	IdentifierDecl	* new_reg		3464143	0					
ANR	3464152	IdentifierDeclType	regex_t *		3464143	0					
ANR	3464153	Identifier	new_reg		3464143	1					
ANR	3464154	ExpressionStatement	"r = onig_new ( & new_reg , pattern , pattern_end , option , enc , syntax , einfo )"	5458:2:123478:123550	3464143	2	True				
ANR	3464155	AssignmentExpression	"r = onig_new ( & new_reg , pattern , pattern_end , option , enc , syntax , einfo )"		3464143	0		=			
ANR	3464156	Identifier	r		3464143	0					
ANR	3464157	CallExpression	"onig_new ( & new_reg , pattern , pattern_end , option , enc , syntax , einfo )"		3464143	1					
ANR	3464158	Callee	onig_new		3464143	0					
ANR	3464159	Identifier	onig_new		3464143	0					
ANR	3464160	ArgumentList	& new_reg		3464143	1					
ANR	3464161	Argument	& new_reg		3464143	0					
ANR	3464162	UnaryOperationExpression	& new_reg		3464143	0					
ANR	3464163	UnaryOperator	&		3464143	0					
ANR	3464164	Identifier	new_reg		3464143	1					
ANR	3464165	Argument	pattern		3464143	1					
ANR	3464166	Identifier	pattern		3464143	0					
ANR	3464167	Argument	pattern_end		3464143	2					
ANR	3464168	Identifier	pattern_end		3464143	0					
ANR	3464169	Argument	option		3464143	3					
ANR	3464170	Identifier	option		3464143	0					
ANR	3464171	Argument	enc		3464143	4					
ANR	3464172	Identifier	enc		3464143	0					
ANR	3464173	Argument	syntax		3464143	5					
ANR	3464174	Identifier	syntax		3464143	0					
ANR	3464175	Argument	einfo		3464143	6					
ANR	3464176	Identifier	einfo		3464143	0					
ANR	3464177	IfStatement	if ( r )		3464143	3					
ANR	3464178	Condition	r	5459:6:123558:123558	3464143	0	True				
ANR	3464179	Identifier	r		3464143	0					
ANR	3464180	ReturnStatement	return r ;	5459:9:123561:123569	3464143	1	True				
ANR	3464181	Identifier	r		3464143	0					
ANR	3464182	IfStatement	if ( ONIG_STATE ( reg ) == ONIG_STATE_NORMAL )		3464143	4					
ANR	3464183	Condition	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL	5460:6:123577:123612	3464143	0	True				
ANR	3464184	EqualityExpression	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL		3464143	0		==			
ANR	3464185	CallExpression	ONIG_STATE ( reg )		3464143	0					
ANR	3464186	Callee	ONIG_STATE		3464143	0					
ANR	3464187	Identifier	ONIG_STATE		3464143	0					
ANR	3464188	ArgumentList	reg		3464143	1					
ANR	3464189	Argument	reg		3464143	0					
ANR	3464190	Identifier	reg		3464143	0					
ANR	3464191	Identifier	ONIG_STATE_NORMAL		3464143	1					
ANR	3464192	CompoundStatement		7:44:170:170	3464143	1					
ANR	3464193	ExpressionStatement	"onig_transfer ( reg , new_reg )"	5461:4:123621:123648	3464143	0	True				
ANR	3464194	CallExpression	"onig_transfer ( reg , new_reg )"		3464143	0					
ANR	3464195	Callee	onig_transfer		3464143	0					
ANR	3464196	Identifier	onig_transfer		3464143	0					
ANR	3464197	ArgumentList	reg		3464143	1					
ANR	3464198	Argument	reg		3464143	0					
ANR	3464199	Identifier	reg		3464143	0					
ANR	3464200	Argument	new_reg		3464143	1					
ANR	3464201	Identifier	new_reg		3464143	0					
ANR	3464202	ElseStatement	else		3464143	0					
ANR	3464203	CompoundStatement		10:7:216:216	3464143	0					
ANR	3464204	ExpressionStatement	"onig_chain_link_add ( reg , new_reg )"	5464:4:123667:123700	3464143	0	True				
ANR	3464205	CallExpression	"onig_chain_link_add ( reg , new_reg )"		3464143	0					
ANR	3464206	Callee	onig_chain_link_add		3464143	0					
ANR	3464207	Identifier	onig_chain_link_add		3464143	0					
ANR	3464208	ArgumentList	reg		3464143	1					
ANR	3464209	Argument	reg		3464143	0					
ANR	3464210	Identifier	reg		3464143	0					
ANR	3464211	Argument	new_reg		3464143	1					
ANR	3464212	Identifier	new_reg		3464143	0					
ANR	3464213	ReturnStatement	return 0 ;	5466:2:123708:123716	3464143	5	True				
ANR	3464214	PrimaryExpression	0		3464143	0					
ANR	3464215	ReturnType	extern int		3464143	1					
ANR	3464216	Identifier	onig_recompile		3464143	2					
ANR	3464217	ParameterList	"regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo"		3464143	3					
ANR	3464218	Parameter	regex_t * reg	5451:15:123285:123296	3464143	0	True				
ANR	3464219	ParameterType	regex_t *		3464143	0					
ANR	3464220	Identifier	reg		3464143	1					
ANR	3464221	Parameter	const UChar * pattern	5451:29:123299:123318	3464143	1	True				
ANR	3464222	ParameterType	const UChar *		3464143	0					
ANR	3464223	Identifier	pattern		3464143	1					
ANR	3464224	Parameter	const UChar * pattern_end	5451:51:123321:123344	3464143	2	True				
ANR	3464225	ParameterType	const UChar *		3464143	0					
ANR	3464226	Identifier	pattern_end		3464143	1					
ANR	3464227	Parameter	OnigOptionType option	5452:5:123352:123372	3464143	3	True				
ANR	3464228	ParameterType	OnigOptionType		3464143	0					
ANR	3464229	Identifier	option		3464143	1					
ANR	3464230	Parameter	OnigEncoding enc	5452:28:123375:123390	3464143	4	True				
ANR	3464231	ParameterType	OnigEncoding		3464143	0					
ANR	3464232	Identifier	enc		3464143	1					
ANR	3464233	Parameter	OnigSyntaxType * syntax	5452:46:123393:123414	3464143	5	True				
ANR	3464234	ParameterType	OnigSyntaxType *		3464143	0					
ANR	3464235	Identifier	syntax		3464143	1					
ANR	3464236	Parameter	OnigErrorInfo * einfo	5453:5:123422:123441	3464143	6	True				
ANR	3464237	ParameterType	OnigErrorInfo *		3464143	0					
ANR	3464238	Identifier	einfo		3464143	1					
ANR	3464239	CFGEntryNode	ENTRY		3464143		True				
ANR	3464240	CFGExitNode	EXIT		3464143		True				
ANR	3464241	Symbol	ONIG_STATE		3464143						
ANR	3464242	Symbol	pattern		3464143						
ANR	3464243	Symbol	pattern_end		3464143						
ANR	3464244	Symbol	onig_new		3464143						
ANR	3464245	Symbol	r		3464143						
ANR	3464246	Symbol	einfo		3464143						
ANR	3464247	Symbol	reg		3464143						
ANR	3464248	Symbol	new_reg		3464143						
ANR	3464249	Symbol	& new_reg		3464143						
ANR	3464250	Symbol	syntax		3464143						
ANR	3464251	Symbol	enc		3464143						
ANR	3464252	Symbol	option		3464143						
ANR	3464253	Symbol	ONIG_STATE_NORMAL		3464143						
ANR	3464254	DeclStmt									
ANR	3464255	Decl							int	int	onig_inited
ANR	3464256	Function	onig_reg_init	5472:0:123757:125007							
ANR	3464257	FunctionDef	"onig_reg_init (regex_t * reg , OnigOptionType option , OnigCaseFoldType case_fold_flag , OnigEncoding enc , OnigSyntaxType * syntax)"		3464256	0					
ANR	3464258	CompoundStatement		5476:0:123908:125007	3464256	0					
ANR	3464259	IfStatement	if ( ! onig_inited )		3464256	0					
ANR	3464260	Condition	! onig_inited	5477:6:123916:123928	3464256	0	True				
ANR	3464261	UnaryOperationExpression	! onig_inited		3464256	0					
ANR	3464262	UnaryOperator	!		3464256	0					
ANR	3464263	Identifier	onig_inited		3464256	1					
ANR	3464264	ExpressionStatement	onig_init ( )	5478:4:123935:123946	3464256	1	True				
ANR	3464265	CallExpression	onig_init ( )		3464256	0					
ANR	3464266	Callee	onig_init		3464256	0					
ANR	3464267	Identifier	onig_init		3464256	0					
ANR	3464268	ArgumentList			3464256	1					
ANR	3464269	IfStatement	if ( IS_NULL ( reg ) )		3464256	1					
ANR	3464270	Condition	IS_NULL ( reg )	5480:6:123955:123966	3464256	0	True				
ANR	3464271	CallExpression	IS_NULL ( reg )		3464256	0					
ANR	3464272	Callee	IS_NULL		3464256	0					
ANR	3464273	Identifier	IS_NULL		3464256	0					
ANR	3464274	ArgumentList	reg		3464256	1					
ANR	3464275	Argument	reg		3464256	0					
ANR	3464276	Identifier	reg		3464256	0					
ANR	3464277	ReturnStatement	return ONIGERR_INVALID_ARGUMENT ;	5481:4:123973:124004	3464256	1	True				
ANR	3464278	Identifier	ONIGERR_INVALID_ARGUMENT		3464256	0					
ANR	3464279	IfStatement	if ( ONIGENC_IS_UNDEF ( enc ) )		3464256	2					
ANR	3464280	Condition	ONIGENC_IS_UNDEF ( enc )	5483:6:124013:124033	3464256	0	True				
ANR	3464281	CallExpression	ONIGENC_IS_UNDEF ( enc )		3464256	0					
ANR	3464282	Callee	ONIGENC_IS_UNDEF		3464256	0					
ANR	3464283	Identifier	ONIGENC_IS_UNDEF		3464256	0					
ANR	3464284	ArgumentList	enc		3464256	1					
ANR	3464285	Argument	enc		3464256	0					
ANR	3464286	Identifier	enc		3464256	0					
ANR	3464287	ReturnStatement	return ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED ;	5484:4:124040:124085	3464256	1	True				
ANR	3464288	Identifier	ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED		3464256	0					
ANR	3464289	IfStatement	if ( ( option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) ) == ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) )		3464256	3					
ANR	3464290	Condition	( option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) ) == ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP )	5486:6:124094:124230	3464256	0	True				
ANR	3464291	EqualityExpression	( option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) ) == ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP )		3464256	0		==			
ANR	3464292	BitAndExpression	option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP )		3464256	0		&			
ANR	3464293	Identifier	option		3464256	0					
ANR	3464294	InclusiveOrExpression	ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP		3464256	1		|			
ANR	3464295	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		3464256	0					
ANR	3464296	Identifier	ONIG_OPTION_CAPTURE_GROUP		3464256	1					
ANR	3464297	InclusiveOrExpression	ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP		3464256	1		|			
ANR	3464298	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		3464256	0					
ANR	3464299	Identifier	ONIG_OPTION_CAPTURE_GROUP		3464256	1					
ANR	3464300	CompoundStatement		12:69:324:324	3464256	1					
ANR	3464301	ReturnStatement	return ONIGERR_INVALID_COMBINATION_OF_OPTIONS ;	5488:4:124239:124284	3464256	0	True				
ANR	3464302	Identifier	ONIGERR_INVALID_COMBINATION_OF_OPTIONS		3464256	0					
ANR	3464303	ExpressionStatement	( reg ) -> state = ONIG_STATE_MODIFY	5491:2:124293:124325	3464256	4	True				
ANR	3464304	AssignmentExpression	( reg ) -> state = ONIG_STATE_MODIFY		3464256	0		=			
ANR	3464305	PtrMemberAccess	( reg ) -> state		3464256	0					
ANR	3464306	Identifier	reg		3464256	0					
ANR	3464307	Identifier	state		3464256	1					
ANR	3464308	Identifier	ONIG_STATE_MODIFY		3464256	1					
ANR	3464309	IfStatement	if ( ( option & ONIG_OPTION_NEGATE_SINGLELINE ) != 0 )		3464256	5					
ANR	3464310	Condition	( option & ONIG_OPTION_NEGATE_SINGLELINE ) != 0	5493:6:124334:124378	3464256	0	True				
ANR	3464311	EqualityExpression	( option & ONIG_OPTION_NEGATE_SINGLELINE ) != 0		3464256	0		!=			
ANR	3464312	BitAndExpression	option & ONIG_OPTION_NEGATE_SINGLELINE		3464256	0		&			
ANR	3464313	Identifier	option		3464256	0					
ANR	3464314	Identifier	ONIG_OPTION_NEGATE_SINGLELINE		3464256	1					
ANR	3464315	PrimaryExpression	0		3464256	1					
ANR	3464316	CompoundStatement		18:53:472:472	3464256	1					
ANR	3464317	ExpressionStatement	option |= syntax -> options	5494:4:124387:124412	3464256	0	True				
ANR	3464318	AssignmentExpression	option |= syntax -> options		3464256	0		|=			
ANR	3464319	Identifier	option		3464256	0					
ANR	3464320	PtrMemberAccess	syntax -> options		3464256	1					
ANR	3464321	Identifier	syntax		3464256	0					
ANR	3464322	Identifier	options		3464256	1					
ANR	3464323	ExpressionStatement	option &= ~ONIG_OPTION_SINGLELINE	5495:4:124418:124451	3464256	1	True				
ANR	3464324	AssignmentExpression	option &= ~ONIG_OPTION_SINGLELINE		3464256	0		&=			
ANR	3464325	Identifier	option		3464256	0					
ANR	3464326	Identifier	~ONIG_OPTION_SINGLELINE		3464256	1					
ANR	3464327	ElseStatement	else		3464256	0					
ANR	3464328	ExpressionStatement	option |= syntax -> options	5498:4:124468:124493	3464256	0	True				
ANR	3464329	AssignmentExpression	option |= syntax -> options		3464256	0		|=			
ANR	3464330	Identifier	option		3464256	0					
ANR	3464331	PtrMemberAccess	syntax -> options		3464256	1					
ANR	3464332	Identifier	syntax		3464256	0					
ANR	3464333	Identifier	options		3464256	1					
ANR	3464334	ExpressionStatement	( reg ) -> enc = enc	5500:2:124498:124527	3464256	6	True				
ANR	3464335	AssignmentExpression	( reg ) -> enc = enc		3464256	0		=			
ANR	3464336	PtrMemberAccess	( reg ) -> enc		3464256	0					
ANR	3464337	Identifier	reg		3464256	0					
ANR	3464338	Identifier	enc		3464256	1					
ANR	3464339	Identifier	enc		3464256	1					
ANR	3464340	ExpressionStatement	( reg ) -> options = option	5501:2:124531:124563	3464256	7	True				
ANR	3464341	AssignmentExpression	( reg ) -> options = option		3464256	0		=			
ANR	3464342	PtrMemberAccess	( reg ) -> options		3464256	0					
ANR	3464343	Identifier	reg		3464256	0					
ANR	3464344	Identifier	options		3464256	1					
ANR	3464345	Identifier	option		3464256	1					
ANR	3464346	ExpressionStatement	( reg ) -> syntax = syntax	5502:2:124567:124599	3464256	8	True				
ANR	3464347	AssignmentExpression	( reg ) -> syntax = syntax		3464256	0		=			
ANR	3464348	PtrMemberAccess	( reg ) -> syntax		3464256	0					
ANR	3464349	Identifier	reg		3464256	0					
ANR	3464350	Identifier	syntax		3464256	1					
ANR	3464351	Identifier	syntax		3464256	1					
ANR	3464352	ExpressionStatement	( reg ) -> optimize = 0	5503:2:124603:124630	3464256	9	True				
ANR	3464353	AssignmentExpression	( reg ) -> optimize = 0		3464256	0		=			
ANR	3464354	PtrMemberAccess	( reg ) -> optimize		3464256	0					
ANR	3464355	Identifier	reg		3464256	0					
ANR	3464356	Identifier	optimize		3464256	1					
ANR	3464357	PrimaryExpression	0		3464256	1					
ANR	3464358	ExpressionStatement	( reg ) -> exact = ( UChar * ) NULL	5504:2:124634:124673	3464256	10	True				
ANR	3464359	AssignmentExpression	( reg ) -> exact = ( UChar * ) NULL		3464256	0		=			
ANR	3464360	PtrMemberAccess	( reg ) -> exact		3464256	0					
ANR	3464361	Identifier	reg		3464256	0					
ANR	3464362	Identifier	exact		3464256	1					
ANR	3464363	CastExpression	( UChar * ) NULL		3464256	1					
ANR	3464364	CastTarget	UChar *		3464256	0					
ANR	3464365	Identifier	NULL		3464256	1					
ANR	3464366	ExpressionStatement	( reg ) -> int_map = ( int * ) NULL	5505:2:124677:124714	3464256	11	True				
ANR	3464367	AssignmentExpression	( reg ) -> int_map = ( int * ) NULL		3464256	0		=			
ANR	3464368	PtrMemberAccess	( reg ) -> int_map		3464256	0					
ANR	3464369	Identifier	reg		3464256	0					
ANR	3464370	Identifier	int_map		3464256	1					
ANR	3464371	CastExpression	( int * ) NULL		3464256	1					
ANR	3464372	CastTarget	int *		3464256	0					
ANR	3464373	Identifier	NULL		3464256	1					
ANR	3464374	ExpressionStatement	( reg ) -> int_map_backward = ( int * ) NULL	5506:2:124718:124755	3464256	12	True				
ANR	3464375	AssignmentExpression	( reg ) -> int_map_backward = ( int * ) NULL		3464256	0		=			
ANR	3464376	PtrMemberAccess	( reg ) -> int_map_backward		3464256	0					
ANR	3464377	Identifier	reg		3464256	0					
ANR	3464378	Identifier	int_map_backward		3464256	1					
ANR	3464379	CastExpression	( int * ) NULL		3464256	1					
ANR	3464380	CastTarget	int *		3464256	0					
ANR	3464381	Identifier	NULL		3464256	1					
ANR	3464382	ExpressionStatement	( reg ) -> chain = ( regex_t * ) NULL	5507:2:124759:124800	3464256	13	True				
ANR	3464383	AssignmentExpression	( reg ) -> chain = ( regex_t * ) NULL		3464256	0		=			
ANR	3464384	PtrMemberAccess	( reg ) -> chain		3464256	0					
ANR	3464385	Identifier	reg		3464256	0					
ANR	3464386	Identifier	chain		3464256	1					
ANR	3464387	CastExpression	( regex_t * ) NULL		3464256	1					
ANR	3464388	CastTarget	regex_t *		3464256	0					
ANR	3464389	Identifier	NULL		3464256	1					
ANR	3464390	ExpressionStatement	( reg ) -> p = ( UChar * ) NULL	5509:2:124805:124844	3464256	14	True				
ANR	3464391	AssignmentExpression	( reg ) -> p = ( UChar * ) NULL		3464256	0		=			
ANR	3464392	PtrMemberAccess	( reg ) -> p		3464256	0					
ANR	3464393	Identifier	reg		3464256	0					
ANR	3464394	Identifier	p		3464256	1					
ANR	3464395	CastExpression	( UChar * ) NULL		3464256	1					
ANR	3464396	CastTarget	UChar *		3464256	0					
ANR	3464397	Identifier	NULL		3464256	1					
ANR	3464398	ExpressionStatement	( reg ) -> alloc = 0	5510:2:124848:124875	3464256	15	True				
ANR	3464399	AssignmentExpression	( reg ) -> alloc = 0		3464256	0		=			
ANR	3464400	PtrMemberAccess	( reg ) -> alloc		3464256	0					
ANR	3464401	Identifier	reg		3464256	0					
ANR	3464402	Identifier	alloc		3464256	1					
ANR	3464403	PrimaryExpression	0		3464256	1					
ANR	3464404	ExpressionStatement	( reg ) -> used = 0	5511:2:124879:124906	3464256	16	True				
ANR	3464405	AssignmentExpression	( reg ) -> used = 0		3464256	0		=			
ANR	3464406	PtrMemberAccess	( reg ) -> used		3464256	0					
ANR	3464407	Identifier	reg		3464256	0					
ANR	3464408	Identifier	used		3464256	1					
ANR	3464409	PrimaryExpression	0		3464256	1					
ANR	3464410	ExpressionStatement	( reg ) -> name_table = ( void * ) NULL	5512:2:124910:124948	3464256	17	True				
ANR	3464411	AssignmentExpression	( reg ) -> name_table = ( void * ) NULL		3464256	0		=			
ANR	3464412	PtrMemberAccess	( reg ) -> name_table		3464256	0					
ANR	3464413	Identifier	reg		3464256	0					
ANR	3464414	Identifier	name_table		3464256	1					
ANR	3464415	CastExpression	( void * ) NULL		3464256	1					
ANR	3464416	CastTarget	void *		3464256	0					
ANR	3464417	Identifier	NULL		3464256	1					
ANR	3464418	ExpressionStatement	( reg ) -> case_fold_flag = case_fold_flag	5514:2:124953:124993	3464256	18	True				
ANR	3464419	AssignmentExpression	( reg ) -> case_fold_flag = case_fold_flag		3464256	0		=			
ANR	3464420	PtrMemberAccess	( reg ) -> case_fold_flag		3464256	0					
ANR	3464421	Identifier	reg		3464256	0					
ANR	3464422	Identifier	case_fold_flag		3464256	1					
ANR	3464423	Identifier	case_fold_flag		3464256	1					
ANR	3464424	ReturnStatement	return 0 ;	5515:2:124997:125005	3464256	19	True				
ANR	3464425	PrimaryExpression	0		3464256	0					
ANR	3464426	ReturnType	extern int		3464256	1					
ANR	3464427	Identifier	onig_reg_init		3464256	2					
ANR	3464428	ParameterList	"regex_t * reg , OnigOptionType option , OnigCaseFoldType case_fold_flag , OnigEncoding enc , OnigSyntaxType * syntax"		3464256	3					
ANR	3464429	Parameter	regex_t * reg	5473:14:123782:123793	3464256	0	True				
ANR	3464430	ParameterType	regex_t *		3464256	0					
ANR	3464431	Identifier	reg		3464256	1					
ANR	3464432	Parameter	OnigOptionType option	5473:28:123796:123816	3464256	1	True				
ANR	3464433	ParameterType	OnigOptionType		3464256	0					
ANR	3464434	Identifier	option		3464256	1					
ANR	3464435	Parameter	OnigCaseFoldType case_fold_flag	5474:7:123826:123856	3464256	2	True				
ANR	3464436	ParameterType	OnigCaseFoldType		3464256	0					
ANR	3464437	Identifier	case_fold_flag		3464256	1					
ANR	3464438	Parameter	OnigEncoding enc	5475:7:123866:123881	3464256	3	True				
ANR	3464439	ParameterType	OnigEncoding		3464256	0					
ANR	3464440	Identifier	enc		3464256	1					
ANR	3464441	Parameter	OnigSyntaxType * syntax	5475:25:123884:123905	3464256	4	True				
ANR	3464442	ParameterType	OnigSyntaxType *		3464256	0					
ANR	3464443	Identifier	syntax		3464256	1					
ANR	3464444	CFGEntryNode	ENTRY		3464256		True				
ANR	3464445	CFGExitNode	EXIT		3464256		True				
ANR	3464446	Symbol	ONIG_STATE_MODIFY		3464256						
ANR	3464447	Symbol	ONIGERR_INVALID_ARGUMENT		3464256						
ANR	3464448	Symbol	( reg ) -> chain		3464256						
ANR	3464449	Symbol	* syntax		3464256						
ANR	3464450	Symbol	onig_inited		3464256						
ANR	3464451	Symbol	case_fold_flag		3464256						
ANR	3464452	Symbol	( reg ) -> options		3464256						
ANR	3464453	Symbol	( reg ) -> enc		3464256						
ANR	3464454	Symbol	ONIGENC_IS_UNDEF		3464256						
ANR	3464455	Symbol	IS_NULL		3464256						
ANR	3464456	Symbol	ONIG_OPTION_NEGATE_SINGLELINE		3464256						
ANR	3464457	Symbol	reg		3464256						
ANR	3464458	Symbol	enc		3464256						
ANR	3464459	Symbol	( reg ) -> syntax		3464256						
ANR	3464460	Symbol	ONIGERR_INVALID_COMBINATION_OF_OPTIONS		3464256						
ANR	3464461	Symbol	( reg ) -> optimize		3464256						
ANR	3464462	Symbol	NULL		3464256						
ANR	3464463	Symbol	( reg ) -> case_fold_flag		3464256						
ANR	3464464	Symbol	( reg ) -> p		3464256						
ANR	3464465	Symbol	~ONIG_OPTION_SINGLELINE		3464256						
ANR	3464466	Symbol	( reg ) -> alloc		3464256						
ANR	3464467	Symbol	ONIG_OPTION_CAPTURE_GROUP		3464256						
ANR	3464468	Symbol	( reg ) -> exact		3464256						
ANR	3464469	Symbol	( reg ) -> used		3464256						
ANR	3464470	Symbol	( reg ) -> name_table		3464256						
ANR	3464471	Symbol	( reg ) -> int_map_backward		3464256						
ANR	3464472	Symbol	ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED		3464256						
ANR	3464473	Symbol	( reg ) -> state		3464256						
ANR	3464474	Symbol	syntax		3464256						
ANR	3464475	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		3464256						
ANR	3464476	Symbol	syntax -> options		3464256						
ANR	3464477	Symbol	* reg		3464256						
ANR	3464478	Symbol	option		3464256						
ANR	3464479	Symbol	( reg ) -> int_map		3464256						
ANR	3464480	Function	onig_new_without_alloc	5518:0:125010:125385							
ANR	3464481	FunctionDef	"onig_new_without_alloc (regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo)"		3464480	0					
ANR	3464482	CompoundStatement		5522:0:125213:125385	3464480	0					
ANR	3464483	IdentifierDeclStatement	int r ;	5523:2:125217:125222	3464480	0	True				
ANR	3464484	IdentifierDecl	r		3464480	0					
ANR	3464485	IdentifierDeclType	int		3464480	0					
ANR	3464486	Identifier	r		3464480	1					
ANR	3464487	ExpressionStatement	"r = onig_reg_init ( reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"	5525:2:125227:125297	3464480	1	True				
ANR	3464488	AssignmentExpression	"r = onig_reg_init ( reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		3464480	0		=			
ANR	3464489	Identifier	r		3464480	0					
ANR	3464490	CallExpression	"onig_reg_init ( reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		3464480	1					
ANR	3464491	Callee	onig_reg_init		3464480	0					
ANR	3464492	Identifier	onig_reg_init		3464480	0					
ANR	3464493	ArgumentList	reg		3464480	1					
ANR	3464494	Argument	reg		3464480	0					
ANR	3464495	Identifier	reg		3464480	0					
ANR	3464496	Argument	option		3464480	1					
ANR	3464497	Identifier	option		3464480	0					
ANR	3464498	Argument	ONIGENC_CASE_FOLD_DEFAULT		3464480	2					
ANR	3464499	Identifier	ONIGENC_CASE_FOLD_DEFAULT		3464480	0					
ANR	3464500	Argument	enc		3464480	3					
ANR	3464501	Identifier	enc		3464480	0					
ANR	3464502	Argument	syntax		3464480	4					
ANR	3464503	Identifier	syntax		3464480	0					
ANR	3464504	IfStatement	if ( r )		3464480	2					
ANR	3464505	Condition	r	5526:6:125305:125305	3464480	0	True				
ANR	3464506	Identifier	r		3464480	0					
ANR	3464507	ReturnStatement	return r ;	5526:9:125308:125316	3464480	1	True				
ANR	3464508	Identifier	r		3464480	0					
ANR	3464509	ExpressionStatement	"r = onig_compile ( reg , pattern , pattern_end , einfo )"	5528:2:125321:125371	3464480	3	True				
ANR	3464510	AssignmentExpression	"r = onig_compile ( reg , pattern , pattern_end , einfo )"		3464480	0		=			
ANR	3464511	Identifier	r		3464480	0					
ANR	3464512	CallExpression	"onig_compile ( reg , pattern , pattern_end , einfo )"		3464480	1					
ANR	3464513	Callee	onig_compile		3464480	0					
ANR	3464514	Identifier	onig_compile		3464480	0					
ANR	3464515	ArgumentList	reg		3464480	1					
ANR	3464516	Argument	reg		3464480	0					
ANR	3464517	Identifier	reg		3464480	0					
ANR	3464518	Argument	pattern		3464480	1					
ANR	3464519	Identifier	pattern		3464480	0					
ANR	3464520	Argument	pattern_end		3464480	2					
ANR	3464521	Identifier	pattern_end		3464480	0					
ANR	3464522	Argument	einfo		3464480	3					
ANR	3464523	Identifier	einfo		3464480	0					
ANR	3464524	ReturnStatement	return r ;	5529:2:125375:125383	3464480	4	True				
ANR	3464525	Identifier	r		3464480	0					
ANR	3464526	ReturnType	extern int		3464480	1					
ANR	3464527	Identifier	onig_new_without_alloc		3464480	2					
ANR	3464528	ParameterList	"regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo"		3464480	3					
ANR	3464529	Parameter	regex_t * reg	5519:23:125044:125055	3464480	0	True				
ANR	3464530	ParameterType	regex_t *		3464480	0					
ANR	3464531	Identifier	reg		3464480	1					
ANR	3464532	Parameter	const UChar * pattern	5519:37:125058:125077	3464480	1	True				
ANR	3464533	ParameterType	const UChar *		3464480	0					
ANR	3464534	Identifier	pattern		3464480	1					
ANR	3464535	Parameter	const UChar * pattern_end	5520:10:125090:125113	3464480	2	True				
ANR	3464536	ParameterType	const UChar *		3464480	0					
ANR	3464537	Identifier	pattern_end		3464480	1					
ANR	3464538	Parameter	OnigOptionType option	5520:36:125116:125136	3464480	3	True				
ANR	3464539	ParameterType	OnigOptionType		3464480	0					
ANR	3464540	Identifier	option		3464480	1					
ANR	3464541	Parameter	OnigEncoding enc	5520:59:125139:125154	3464480	4	True				
ANR	3464542	ParameterType	OnigEncoding		3464480	0					
ANR	3464543	Identifier	enc		3464480	1					
ANR	3464544	Parameter	OnigSyntaxType * syntax	5521:10:125167:125188	3464480	5	True				
ANR	3464545	ParameterType	OnigSyntaxType *		3464480	0					
ANR	3464546	Identifier	syntax		3464480	1					
ANR	3464547	Parameter	OnigErrorInfo * einfo	5521:34:125191:125210	3464480	6	True				
ANR	3464548	ParameterType	OnigErrorInfo *		3464480	0					
ANR	3464549	Identifier	einfo		3464480	1					
ANR	3464550	CFGEntryNode	ENTRY		3464480		True				
ANR	3464551	CFGExitNode	EXIT		3464480		True				
ANR	3464552	Symbol	r		3464480						
ANR	3464553	Symbol	einfo		3464480						
ANR	3464554	Symbol	onig_reg_init		3464480						
ANR	3464555	Symbol	reg		3464480						
ANR	3464556	Symbol	pattern		3464480						
ANR	3464557	Symbol	pattern_end		3464480						
ANR	3464558	Symbol	syntax		3464480						
ANR	3464559	Symbol	ONIGENC_CASE_FOLD_DEFAULT		3464480						
ANR	3464560	Symbol	enc		3464480						
ANR	3464561	Symbol	onig_compile		3464480						
ANR	3464562	Symbol	option		3464480						
ANR	3464563	Function	onig_new	5532:0:125388:125889							
ANR	3464564	FunctionDef	"onig_new (regex_t * * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo)"		3464563	0					
ANR	3464565	CompoundStatement		5536:0:125564:125889	3464563	0					
ANR	3464566	IdentifierDeclStatement	int r ;	5537:2:125568:125573	3464563	0	True				
ANR	3464567	IdentifierDecl	r		3464563	0					
ANR	3464568	IdentifierDeclType	int		3464563	0					
ANR	3464569	Identifier	r		3464563	1					
ANR	3464570	ExpressionStatement	* reg = ( regex_t * ) xmalloc ( sizeof ( regex_t ) )	5539:2:125578:125620	3464563	1	True				
ANR	3464571	AssignmentExpression	* reg = ( regex_t * ) xmalloc ( sizeof ( regex_t ) )		3464563	0		=			
ANR	3464572	UnaryOperationExpression	* reg		3464563	0					
ANR	3464573	UnaryOperator	*		3464563	0					
ANR	3464574	Identifier	reg		3464563	1					
ANR	3464575	CastExpression	( regex_t * ) xmalloc ( sizeof ( regex_t ) )		3464563	1					
ANR	3464576	CastTarget	regex_t *		3464563	0					
ANR	3464577	CallExpression	xmalloc ( sizeof ( regex_t ) )		3464563	1					
ANR	3464578	Callee	xmalloc		3464563	0					
ANR	3464579	Identifier	xmalloc		3464563	0					
ANR	3464580	ArgumentList	sizeof ( regex_t )		3464563	1					
ANR	3464581	Argument	sizeof ( regex_t )		3464563	0					
ANR	3464582	SizeofExpression	sizeof ( regex_t )		3464563	0					
ANR	3464583	Sizeof	sizeof		3464563	0					
ANR	3464584	SizeofOperand	regex_t		3464563	1					
ANR	3464585	IfStatement	if ( IS_NULL ( * reg ) )		3464563	2					
ANR	3464586	Condition	IS_NULL ( * reg )	5540:6:125628:125640	3464563	0	True				
ANR	3464587	CallExpression	IS_NULL ( * reg )		3464563	0					
ANR	3464588	Callee	IS_NULL		3464563	0					
ANR	3464589	Identifier	IS_NULL		3464563	0					
ANR	3464590	ArgumentList	* reg		3464563	1					
ANR	3464591	Argument	* reg		3464563	0					
ANR	3464592	UnaryOperationExpression	* reg		3464563	0					
ANR	3464593	UnaryOperator	*		3464563	0					
ANR	3464594	Identifier	reg		3464563	1					
ANR	3464595	ReturnStatement	return ONIGERR_MEMORY ;	5540:21:125643:125664	3464563	1	True				
ANR	3464596	Identifier	ONIGERR_MEMORY		3464563	0					
ANR	3464597	ExpressionStatement	"r = onig_reg_init ( * reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"	5542:2:125669:125740	3464563	3	True				
ANR	3464598	AssignmentExpression	"r = onig_reg_init ( * reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		3464563	0		=			
ANR	3464599	Identifier	r		3464563	0					
ANR	3464600	CallExpression	"onig_reg_init ( * reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		3464563	1					
ANR	3464601	Callee	onig_reg_init		3464563	0					
ANR	3464602	Identifier	onig_reg_init		3464563	0					
ANR	3464603	ArgumentList	* reg		3464563	1					
ANR	3464604	Argument	* reg		3464563	0					
ANR	3464605	UnaryOperationExpression	* reg		3464563	0					
ANR	3464606	UnaryOperator	*		3464563	0					
ANR	3464607	Identifier	reg		3464563	1					
ANR	3464608	Argument	option		3464563	1					
ANR	3464609	Identifier	option		3464563	0					
ANR	3464610	Argument	ONIGENC_CASE_FOLD_DEFAULT		3464563	2					
ANR	3464611	Identifier	ONIGENC_CASE_FOLD_DEFAULT		3464563	0					
ANR	3464612	Argument	enc		3464563	3					
ANR	3464613	Identifier	enc		3464563	0					
ANR	3464614	Argument	syntax		3464563	4					
ANR	3464615	Identifier	syntax		3464563	0					
ANR	3464616	IfStatement	if ( r )		3464563	4					
ANR	3464617	Condition	r	5543:6:125748:125748	3464563	0	True				
ANR	3464618	Identifier	r		3464563	0					
ANR	3464619	GotoStatement	goto err ;	5543:9:125751:125759	3464563	1	True				
ANR	3464620	Identifier	err		3464563	0					
ANR	3464621	ExpressionStatement	"r = onig_compile ( * reg , pattern , pattern_end , einfo )"	5545:2:125764:125815	3464563	5	True				
ANR	3464622	AssignmentExpression	"r = onig_compile ( * reg , pattern , pattern_end , einfo )"		3464563	0		=			
ANR	3464623	Identifier	r		3464563	0					
ANR	3464624	CallExpression	"onig_compile ( * reg , pattern , pattern_end , einfo )"		3464563	1					
ANR	3464625	Callee	onig_compile		3464563	0					
ANR	3464626	Identifier	onig_compile		3464563	0					
ANR	3464627	ArgumentList	* reg		3464563	1					
ANR	3464628	Argument	* reg		3464563	0					
ANR	3464629	UnaryOperationExpression	* reg		3464563	0					
ANR	3464630	UnaryOperator	*		3464563	0					
ANR	3464631	Identifier	reg		3464563	1					
ANR	3464632	Argument	pattern		3464563	1					
ANR	3464633	Identifier	pattern		3464563	0					
ANR	3464634	Argument	pattern_end		3464563	2					
ANR	3464635	Identifier	pattern_end		3464563	0					
ANR	3464636	Argument	einfo		3464563	3					
ANR	3464637	Identifier	einfo		3464563	0					
ANR	3464638	IfStatement	if ( r )		3464563	6					
ANR	3464639	Condition	r	5546:6:125823:125823	3464563	0	True				
ANR	3464640	Identifier	r		3464563	0					
ANR	3464641	CompoundStatement		11:9:261:261	3464563	1					
ANR	3464642	Label	err :	5547:2:125830:125833	3464563	0	True				
ANR	3464643	Identifier	err		3464563	0					
ANR	3464644	ExpressionStatement	onig_free ( * reg )	5548:4:125839:125854	3464563	1	True				
ANR	3464645	CallExpression	onig_free ( * reg )		3464563	0					
ANR	3464646	Callee	onig_free		3464563	0					
ANR	3464647	Identifier	onig_free		3464563	0					
ANR	3464648	ArgumentList	* reg		3464563	1					
ANR	3464649	Argument	* reg		3464563	0					
ANR	3464650	UnaryOperationExpression	* reg		3464563	0					
ANR	3464651	UnaryOperator	*		3464563	0					
ANR	3464652	Identifier	reg		3464563	1					
ANR	3464653	ExpressionStatement	* reg = NULL	5549:4:125860:125871	3464563	2	True				
ANR	3464654	AssignmentExpression	* reg = NULL		3464563	0		=			
ANR	3464655	UnaryOperationExpression	* reg		3464563	0					
ANR	3464656	UnaryOperator	*		3464563	0					
ANR	3464657	Identifier	reg		3464563	1					
ANR	3464658	Identifier	NULL		3464563	1					
ANR	3464659	ReturnStatement	return r ;	5551:2:125879:125887	3464563	7	True				
ANR	3464660	Identifier	r		3464563	0					
ANR	3464661	ReturnType	extern int		3464563	1					
ANR	3464662	Identifier	onig_new		3464563	2					
ANR	3464663	ParameterList	"regex_t * * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo"		3464563	3					
ANR	3464664	Parameter	regex_t * * reg	5533:9:125408:125420	3464563	0	True				
ANR	3464665	ParameterType	regex_t * *		3464563	0					
ANR	3464666	Identifier	reg		3464563	1					
ANR	3464667	Parameter	const UChar * pattern	5533:24:125423:125442	3464563	1	True				
ANR	3464668	ParameterType	const UChar *		3464563	0					
ANR	3464669	Identifier	pattern		3464563	1					
ANR	3464670	Parameter	const UChar * pattern_end	5533:46:125445:125468	3464563	2	True				
ANR	3464671	ParameterType	const UChar *		3464563	0					
ANR	3464672	Identifier	pattern_end		3464563	1					
ANR	3464673	Parameter	OnigOptionType option	5534:3:125474:125494	3464563	3	True				
ANR	3464674	ParameterType	OnigOptionType		3464563	0					
ANR	3464675	Identifier	option		3464563	1					
ANR	3464676	Parameter	OnigEncoding enc	5534:26:125497:125512	3464563	4	True				
ANR	3464677	ParameterType	OnigEncoding		3464563	0					
ANR	3464678	Identifier	enc		3464563	1					
ANR	3464679	Parameter	OnigSyntaxType * syntax	5534:44:125515:125536	3464563	5	True				
ANR	3464680	ParameterType	OnigSyntaxType *		3464563	0					
ANR	3464681	Identifier	syntax		3464563	1					
ANR	3464682	Parameter	OnigErrorInfo * einfo	5535:3:125542:125561	3464563	6	True				
ANR	3464683	ParameterType	OnigErrorInfo *		3464563	0					
ANR	3464684	Identifier	einfo		3464563	1					
ANR	3464685	CFGEntryNode	ENTRY		3464563		True				
ANR	3464686	CFGExitNode	EXIT		3464563		True				
ANR	3464687	Symbol	NULL		3464563						
ANR	3464688	Symbol	pattern		3464563						
ANR	3464689	Symbol	ONIGERR_MEMORY		3464563						
ANR	3464690	Symbol	pattern_end		3464563						
ANR	3464691	Symbol	ONIGENC_CASE_FOLD_DEFAULT		3464563						
ANR	3464692	Symbol	r		3464563						
ANR	3464693	Symbol	einfo		3464563						
ANR	3464694	Symbol	onig_reg_init		3464563						
ANR	3464695	Symbol	IS_NULL		3464563						
ANR	3464696	Symbol	reg		3464563						
ANR	3464697	Symbol	xmalloc		3464563						
ANR	3464698	Symbol	syntax		3464563						
ANR	3464699	Symbol	enc		3464563						
ANR	3464700	Symbol	onig_compile		3464563						
ANR	3464701	Symbol	* reg		3464563						
ANR	3464702	Symbol	option		3464563						
ANR	3464703	Function	onig_init	5555:0:125893:126198							
ANR	3464704	FunctionDef	onig_init ()		3464703	0					
ANR	3464705	CompoundStatement		5557:0:125920:126198	3464703	0					
ANR	3464706	IfStatement	if ( onig_inited != 0 )		3464703	0					
ANR	3464707	Condition	onig_inited != 0	5558:6:125928:125943	3464703	0	True				
ANR	3464708	EqualityExpression	onig_inited != 0		3464703	0		!=			
ANR	3464709	Identifier	onig_inited		3464703	0					
ANR	3464710	PrimaryExpression	0		3464703	1					
ANR	3464711	ReturnStatement	return 0 ;	5559:4:125950:125958	3464703	1	True				
ANR	3464712	PrimaryExpression	0		3464703	0					
ANR	3464713	ExpressionStatement	THREAD_SYSTEM_INIT	5561:2:125963:125981	3464703	1	True				
ANR	3464714	Identifier	THREAD_SYSTEM_INIT		3464703	0					
ANR	3464715	ExpressionStatement	THREAD_ATOMIC_START	5562:2:125985:126004	3464703	2	True				
ANR	3464716	Identifier	THREAD_ATOMIC_START		3464703	0					
ANR	3464717	ExpressionStatement	onig_inited = 1	5564:2:126009:126024	3464703	3	True				
ANR	3464718	AssignmentExpression	onig_inited = 1		3464703	0		=			
ANR	3464719	Identifier	onig_inited		3464703	0					
ANR	3464720	PrimaryExpression	1		3464703	1					
ANR	3464721	ExpressionStatement	onigenc_init ( )	5566:2:126029:126043	3464703	4	True				
ANR	3464722	CallExpression	onigenc_init ( )		3464703	0					
ANR	3464723	Callee	onigenc_init		3464703	0					
ANR	3464724	Identifier	onigenc_init		3464703	0					
ANR	3464725	ArgumentList			3464703	1					
ANR	3464726	ExpressionStatement	onig_statistics_init ( )	5570:2:126133:126155	3464703	5	True				
ANR	3464727	CallExpression	onig_statistics_init ( )		3464703	0					
ANR	3464728	Callee	onig_statistics_init		3464703	0					
ANR	3464729	Identifier	onig_statistics_init		3464703	0					
ANR	3464730	ArgumentList			3464703	1					
ANR	3464731	ExpressionStatement	THREAD_ATOMIC_END	5573:2:126167:126184	3464703	6	True				
ANR	3464732	Identifier	THREAD_ATOMIC_END		3464703	0					
ANR	3464733	ReturnStatement	return 0 ;	5574:2:126188:126196	3464703	7	True				
ANR	3464734	PrimaryExpression	0		3464703	0					
ANR	3464735	ReturnType	extern int		3464703	1					
ANR	3464736	Identifier	onig_init		3464703	2					
ANR	3464737	ParameterList			3464703	3					
ANR	3464738	CFGEntryNode	ENTRY		3464703		True				
ANR	3464739	CFGExitNode	EXIT		3464703		True				
ANR	3464740	Symbol	onig_inited		3464703						
ANR	3464741	DeclStmt									
ANR	3464742	Decl							OnigEndCallListItemType	OnigEndCallListItemType *	EndCallTop
ANR	3464743	Function	onig_add_end_call	5580:0:126247:126490							
ANR	3464744	FunctionDef	onig_add_end_call (void ( * func ) ( void ))		3464743	0					
ANR	3464745	CompoundStatement		5581:0:126297:126490	3464743	0					
ANR	3464746	IdentifierDeclStatement	OnigEndCallListItemType * item ;	5582:2:126301:126330	3464743	0	True				
ANR	3464747	IdentifierDecl	* item		3464743	0					
ANR	3464748	IdentifierDeclType	OnigEndCallListItemType *		3464743	0					
ANR	3464749	Identifier	item		3464743	1					
ANR	3464750	ExpressionStatement	item = ( OnigEndCallListItemType * ) xmalloc ( sizeof ( * item ) )	5584:2:126335:126391	3464743	1	True				
ANR	3464751	AssignmentExpression	item = ( OnigEndCallListItemType * ) xmalloc ( sizeof ( * item ) )		3464743	0		=			
ANR	3464752	Identifier	item		3464743	0					
ANR	3464753	CastExpression	( OnigEndCallListItemType * ) xmalloc ( sizeof ( * item ) )		3464743	1					
ANR	3464754	CastTarget	OnigEndCallListItemType *		3464743	0					
ANR	3464755	CallExpression	xmalloc ( sizeof ( * item ) )		3464743	1					
ANR	3464756	Callee	xmalloc		3464743	0					
ANR	3464757	Identifier	xmalloc		3464743	0					
ANR	3464758	ArgumentList	sizeof ( * item )		3464743	1					
ANR	3464759	Argument	sizeof ( * item )		3464743	0					
ANR	3464760	SizeofExpression	sizeof ( * item )		3464743	0					
ANR	3464761	Sizeof	sizeof		3464743	0					
ANR	3464762	UnaryOperationExpression	* item		3464743	1					
ANR	3464763	UnaryOperator	*		3464743	0					
ANR	3464764	Identifier	item		3464743	1					
ANR	3464765	IfStatement	if ( item == 0 )		3464743	2					
ANR	3464766	Condition	item == 0	5585:6:126399:126407	3464743	0	True				
ANR	3464767	EqualityExpression	item == 0		3464743	0		==			
ANR	3464768	Identifier	item		3464743	0					
ANR	3464769	PrimaryExpression	0		3464743	1					
ANR	3464770	ReturnStatement	return ;	5585:17:126410:126417	3464743	1	True				
ANR	3464771	ExpressionStatement	item -> next = EndCallTop	5587:2:126422:126445	3464743	3	True				
ANR	3464772	AssignmentExpression	item -> next = EndCallTop		3464743	0		=			
ANR	3464773	PtrMemberAccess	item -> next		3464743	0					
ANR	3464774	Identifier	item		3464743	0					
ANR	3464775	Identifier	next		3464743	1					
ANR	3464776	Identifier	EndCallTop		3464743	1					
ANR	3464777	ExpressionStatement	item -> func = func	5588:2:126449:126466	3464743	4	True				
ANR	3464778	AssignmentExpression	item -> func = func		3464743	0		=			
ANR	3464779	PtrMemberAccess	item -> func		3464743	0					
ANR	3464780	Identifier	item		3464743	0					
ANR	3464781	Identifier	func		3464743	1					
ANR	3464782	Identifier	func		3464743	1					
ANR	3464783	ExpressionStatement	EndCallTop = item	5590:2:126471:126488	3464743	5	True				
ANR	3464784	AssignmentExpression	EndCallTop = item		3464743	0		=			
ANR	3464785	Identifier	EndCallTop		3464743	0					
ANR	3464786	Identifier	item		3464743	1					
ANR	3464787	ReturnType	extern void		3464743	1					
ANR	3464788	Identifier	onig_add_end_call		3464743	2					
ANR	3464789	ParameterList	void ( * func ) ( void )		3464743	3					
ANR	3464790	Parameter	void ( * func ) ( void )	5580:30:126277:126294	3464743	0	True				
ANR	3464791	ParameterType	(( void ) void) *		3464743	0					
ANR	3464792	Identifier	func		3464743	1					
ANR	3464793	CFGEntryNode	ENTRY		3464743		True				
ANR	3464794	CFGExitNode	EXIT		3464743		True				
ANR	3464795	Symbol	item		3464743						
ANR	3464796	Symbol	func		3464743						
ANR	3464797	Symbol	xmalloc		3464743						
ANR	3464798	Symbol	* item		3464743						
ANR	3464799	Symbol	EndCallTop		3464743						
ANR	3464800	Symbol	item -> next		3464743						
ANR	3464801	Symbol	item -> func		3464743						
ANR	3464802	Function	exec_end_call_list	5593:0:126493:126740							
ANR	3464803	FunctionDef	exec_end_call_list ()		3464802	0					
ANR	3464804	CompoundStatement		5595:0:126530:126740	3464802	0					
ANR	3464805	IdentifierDeclStatement	OnigEndCallListItemType * prev ;	5596:2:126534:126563	3464802	0	True				
ANR	3464806	IdentifierDecl	* prev		3464802	0					
ANR	3464807	IdentifierDeclType	OnigEndCallListItemType *		3464802	0					
ANR	3464808	Identifier	prev		3464802	1					
ANR	3464809	IdentifierDeclStatement	void ( * func ) ( void ) ;	5597:2:126567:126585	3464802	1	True				
ANR	3464810	IdentifierDecl	( * func ) ( void )		3464802	0					
ANR	3464811	IdentifierDeclType	void ( * ) ( void )		3464802	0					
ANR	3464812	Identifier	func		3464802	1					
ANR	3464813	WhileStatement	while ( EndCallTop != 0 )		3464802	2					
ANR	3464814	Condition	EndCallTop != 0	5599:9:126597:126611	3464802	0	True				
ANR	3464815	EqualityExpression	EndCallTop != 0		3464802	0		!=			
ANR	3464816	Identifier	EndCallTop		3464802	0					
ANR	3464817	PrimaryExpression	0		3464802	1					
ANR	3464818	CompoundStatement		5:26:83:83	3464802	1					
ANR	3464819	ExpressionStatement	func = EndCallTop -> func	5600:4:126620:126643	3464802	0	True				
ANR	3464820	AssignmentExpression	func = EndCallTop -> func		3464802	0		=			
ANR	3464821	Identifier	func		3464802	0					
ANR	3464822	PtrMemberAccess	EndCallTop -> func		3464802	1					
ANR	3464823	Identifier	EndCallTop		3464802	0					
ANR	3464824	Identifier	func		3464802	1					
ANR	3464825	ExpressionStatement	( * func ) ( )	5601:4:126649:126658	3464802	1	True				
ANR	3464826	CallExpression	( * func ) ( )		3464802	0					
ANR	3464827	Callee	* func		3464802	0					
ANR	3464828	UnaryOperationExpression	* func		3464802	0					
ANR	3464829	UnaryOperator	*		3464802	0					
ANR	3464830	Identifier	func		3464802	1					
ANR	3464831	ArgumentList			3464802	1					
ANR	3464832	ExpressionStatement	prev = EndCallTop	5603:4:126665:126682	3464802	2	True				
ANR	3464833	AssignmentExpression	prev = EndCallTop		3464802	0		=			
ANR	3464834	Identifier	prev		3464802	0					
ANR	3464835	Identifier	EndCallTop		3464802	1					
ANR	3464836	ExpressionStatement	EndCallTop = EndCallTop -> next	5604:4:126688:126717	3464802	3	True				
ANR	3464837	AssignmentExpression	EndCallTop = EndCallTop -> next		3464802	0		=			
ANR	3464838	Identifier	EndCallTop		3464802	0					
ANR	3464839	PtrMemberAccess	EndCallTop -> next		3464802	1					
ANR	3464840	Identifier	EndCallTop		3464802	0					
ANR	3464841	Identifier	next		3464802	1					
ANR	3464842	ExpressionStatement	xfree ( prev )	5605:4:126723:126734	3464802	4	True				
ANR	3464843	CallExpression	xfree ( prev )		3464802	0					
ANR	3464844	Callee	xfree		3464802	0					
ANR	3464845	Identifier	xfree		3464802	0					
ANR	3464846	ArgumentList	prev		3464802	1					
ANR	3464847	Argument	prev		3464802	0					
ANR	3464848	Identifier	prev		3464802	0					
ANR	3464849	ReturnType	static void		3464802	1					
ANR	3464850	Identifier	exec_end_call_list		3464802	2					
ANR	3464851	ParameterList			3464802	3					
ANR	3464852	CFGEntryNode	ENTRY		3464802		True				
ANR	3464853	CFGExitNode	EXIT		3464802		True				
ANR	3464854	Symbol	* EndCallTop		3464802						
ANR	3464855	Symbol	EndCallTop -> next		3464802						
ANR	3464856	Symbol	func		3464802						
ANR	3464857	Symbol	EndCallTop -> func		3464802						
ANR	3464858	Symbol	prev		3464802						
ANR	3464859	Symbol	EndCallTop		3464802						
ANR	3464860	Function	onig_end	5609:0:126743:127106							
ANR	3464861	FunctionDef	onig_end ()		3464860	0					
ANR	3464862	CompoundStatement		5611:0:126769:127106	3464860	0					
ANR	3464863	ExpressionStatement	THREAD_ATOMIC_START	5612:2:126773:126792	3464860	0	True				
ANR	3464864	Identifier	THREAD_ATOMIC_START		3464860	0					
ANR	3464865	ExpressionStatement	exec_end_call_list ( )	5614:2:126797:126817	3464860	1	True				
ANR	3464866	CallExpression	exec_end_call_list ( )		3464860	0					
ANR	3464867	Callee	exec_end_call_list		3464860	0					
ANR	3464868	Identifier	exec_end_call_list		3464860	0					
ANR	3464869	ArgumentList			3464860	1					
ANR	3464870	ExpressionStatement	onig_print_statistics ( stderr )	5617:2:126851:126880	3464860	2	True				
ANR	3464871	CallExpression	onig_print_statistics ( stderr )		3464860	0					
ANR	3464872	Callee	onig_print_statistics		3464860	0					
ANR	3464873	Identifier	onig_print_statistics		3464860	0					
ANR	3464874	ArgumentList	stderr		3464860	1					
ANR	3464875	Argument	stderr		3464860	0					
ANR	3464876	Identifier	stderr		3464860	0					
ANR	3464877	ExpressionStatement	onig_free_shared_cclass_table ( )	5621:2:126923:126954	3464860	3	True				
ANR	3464878	CallExpression	onig_free_shared_cclass_table ( )		3464860	0					
ANR	3464879	Callee	onig_free_shared_cclass_table		3464860	0					
ANR	3464880	Identifier	onig_free_shared_cclass_table		3464860	0					
ANR	3464881	ArgumentList			3464860	1					
ANR	3464882	ExpressionStatement	onig_free_node_list ( )	5625:2:127001:127022	3464860	4	True				
ANR	3464883	CallExpression	onig_free_node_list ( )		3464860	0					
ANR	3464884	Callee	onig_free_node_list		3464860	0					
ANR	3464885	Identifier	onig_free_node_list		3464860	0					
ANR	3464886	ArgumentList			3464860	1					
ANR	3464887	ExpressionStatement	onig_inited = 0	5628:2:127034:127049	3464860	5	True				
ANR	3464888	AssignmentExpression	onig_inited = 0		3464860	0		=			
ANR	3464889	Identifier	onig_inited		3464860	0					
ANR	3464890	PrimaryExpression	0		3464860	1					
ANR	3464891	ExpressionStatement	THREAD_ATOMIC_END	5630:2:127054:127071	3464860	6	True				
ANR	3464892	Identifier	THREAD_ATOMIC_END		3464860	0					
ANR	3464893	ExpressionStatement	THREAD_SYSTEM_END	5631:2:127075:127092	3464860	7	True				
ANR	3464894	Identifier	THREAD_SYSTEM_END		3464860	0					
ANR	3464895	ReturnStatement	return 0 ;	5632:2:127096:127104	3464860	8	True				
ANR	3464896	PrimaryExpression	0		3464860	0					
ANR	3464897	ReturnType	extern int		3464860	1					
ANR	3464898	Identifier	onig_end		3464860	2					
ANR	3464899	ParameterList			3464860	3					
ANR	3464900	CFGEntryNode	ENTRY		3464860		True				
ANR	3464901	CFGExitNode	EXIT		3464860		True				
ANR	3464902	Symbol	stderr		3464860						
ANR	3464903	Symbol	onig_inited		3464860						
ANR	3464904	Function	onig_is_in_code_range	5635:0:127109:127506							
ANR	3464905	FunctionDef	"onig_is_in_code_range (const UChar * p , OnigCodePoint code)"		3464904	0					
ANR	3464906	CompoundStatement		5637:0:127178:127506	3464904	0					
ANR	3464907	IdentifierDeclStatement	"OnigCodePoint n , * data ;"	5638:2:127182:127204	3464904	0	True				
ANR	3464908	IdentifierDecl	n		3464904	0					
ANR	3464909	IdentifierDeclType	OnigCodePoint		3464904	0					
ANR	3464910	Identifier	n		3464904	1					
ANR	3464911	IdentifierDecl	* data		3464904	1					
ANR	3464912	IdentifierDeclType	OnigCodePoint *		3464904	0					
ANR	3464913	Identifier	data		3464904	1					
ANR	3464914	IdentifierDeclStatement	"OnigCodePoint low , high , x ;"	5639:2:127208:127234	3464904	1	True				
ANR	3464915	IdentifierDecl	low		3464904	0					
ANR	3464916	IdentifierDeclType	OnigCodePoint		3464904	0					
ANR	3464917	Identifier	low		3464904	1					
ANR	3464918	IdentifierDecl	high		3464904	1					
ANR	3464919	IdentifierDeclType	OnigCodePoint		3464904	0					
ANR	3464920	Identifier	high		3464904	1					
ANR	3464921	IdentifierDecl	x		3464904	2					
ANR	3464922	IdentifierDeclType	OnigCodePoint		3464904	0					
ANR	3464923	Identifier	x		3464904	1					
ANR	3464924	ExpressionStatement	"GET_CODE_POINT ( n , p )"	5641:2:127239:127259	3464904	2	True				
ANR	3464925	CallExpression	"GET_CODE_POINT ( n , p )"		3464904	0					
ANR	3464926	Callee	GET_CODE_POINT		3464904	0					
ANR	3464927	Identifier	GET_CODE_POINT		3464904	0					
ANR	3464928	ArgumentList	n		3464904	1					
ANR	3464929	Argument	n		3464904	0					
ANR	3464930	Identifier	n		3464904	0					
ANR	3464931	Argument	p		3464904	1					
ANR	3464932	Identifier	p		3464904	0					
ANR	3464933	ExpressionStatement	data = ( OnigCodePoint * ) p	5642:2:127263:127288	3464904	3	True				
ANR	3464934	AssignmentExpression	data = ( OnigCodePoint * ) p		3464904	0		=			
ANR	3464935	Identifier	data		3464904	0					
ANR	3464936	CastExpression	( OnigCodePoint * ) p		3464904	1					
ANR	3464937	CastTarget	OnigCodePoint *		3464904	0					
ANR	3464938	Identifier	p		3464904	1					
ANR	3464939	ExpressionStatement	data ++	5643:2:127292:127298	3464904	4	True				
ANR	3464940	PostIncDecOperationExpression	data ++		3464904	0					
ANR	3464941	Identifier	data		3464904	0					
ANR	3464942	IncDec	++		3464904	1					
ANR	3464943	ForStatement	"for ( low = 0 , high = n ; low < high ; )"		3464904	5					
ANR	3464944	ForInit	"low = 0 , high = n ;"	5645:7:127308:127325	3464904	0	True				
ANR	3464945	Expression	"low = 0 , high = n"		3464904	0					
ANR	3464946	AssignmentExpression	low = 0		3464904	0		=			
ANR	3464947	Identifier	low		3464904	0					
ANR	3464948	PrimaryExpression	0		3464904	1					
ANR	3464949	AssignmentExpression	high = n		3464904	1		=			
ANR	3464950	Identifier	high		3464904	0					
ANR	3464951	Identifier	n		3464904	1					
ANR	3464952	Condition	low < high	5645:26:127327:127336	3464904	1	True				
ANR	3464953	RelationalExpression	low < high		3464904	0		<			
ANR	3464954	Identifier	low		3464904	0					
ANR	3464955	Identifier	high		3464904	1					
ANR	3464956	CompoundStatement		9:40:162:162	3464904	2					
ANR	3464957	ExpressionStatement	x = ( low + high ) >> 1	5646:4:127347:127368	3464904	0	True				
ANR	3464958	AssignmentExpression	x = ( low + high ) >> 1		3464904	0		=			
ANR	3464959	Identifier	x		3464904	0					
ANR	3464960	ShiftExpression	( low + high ) >> 1		3464904	1		>>			
ANR	3464961	AdditiveExpression	low + high		3464904	0		+			
ANR	3464962	Identifier	low		3464904	0					
ANR	3464963	Identifier	high		3464904	1					
ANR	3464964	PrimaryExpression	1		3464904	1					
ANR	3464965	IfStatement	if ( code > data [ x * 2 + 1 ] )		3464904	1					
ANR	3464966	Condition	code > data [ x * 2 + 1 ]	5647:8:127378:127399	3464904	0	True				
ANR	3464967	RelationalExpression	code > data [ x * 2 + 1 ]		3464904	0		>			
ANR	3464968	Identifier	code		3464904	0					
ANR	3464969	ArrayIndexing	data [ x * 2 + 1 ]		3464904	1					
ANR	3464970	Identifier	data		3464904	0					
ANR	3464971	AdditiveExpression	x * 2 + 1		3464904	1		+			
ANR	3464972	MultiplicativeExpression	x * 2		3464904	0		*			
ANR	3464973	Identifier	x		3464904	0					
ANR	3464974	PrimaryExpression	2		3464904	1					
ANR	3464975	PrimaryExpression	1		3464904	1					
ANR	3464976	ExpressionStatement	low = x + 1	5648:6:127408:127419	3464904	1	True				
ANR	3464977	AssignmentExpression	low = x + 1		3464904	0		=			
ANR	3464978	Identifier	low		3464904	0					
ANR	3464979	AdditiveExpression	x + 1		3464904	1		+			
ANR	3464980	Identifier	x		3464904	0					
ANR	3464981	PrimaryExpression	1		3464904	1					
ANR	3464982	ElseStatement	else		3464904	0					
ANR	3464983	ExpressionStatement	high = x	5650:6:127436:127444	3464904	0	True				
ANR	3464984	AssignmentExpression	high = x		3464904	0		=			
ANR	3464985	Identifier	high		3464904	0					
ANR	3464986	Identifier	x		3464904	1					
ANR	3464987	ReturnStatement	return ( ( low < n && code >= data [ low * 2 ] ) ? 1 : 0 ) ;	5653:2:127453:127504	3464904	6	True				
ANR	3464988	ConditionalExpression	( low < n && code >= data [ low * 2 ] ) ? 1 : 0		3464904	0					
ANR	3464989	Condition	low < n && code >= data [ low * 2 ]		3464904	0					
ANR	3464990	AndExpression	low < n && code >= data [ low * 2 ]		3464904	0		&&			
ANR	3464991	RelationalExpression	low < n		3464904	0		<			
ANR	3464992	Identifier	low		3464904	0					
ANR	3464993	Identifier	n		3464904	1					
ANR	3464994	RelationalExpression	code >= data [ low * 2 ]		3464904	1		>=			
ANR	3464995	Identifier	code		3464904	0					
ANR	3464996	ArrayIndexing	data [ low * 2 ]		3464904	1					
ANR	3464997	Identifier	data		3464904	0					
ANR	3464998	MultiplicativeExpression	low * 2		3464904	1		*			
ANR	3464999	Identifier	low		3464904	0					
ANR	3465000	PrimaryExpression	2		3464904	1					
ANR	3465001	PrimaryExpression	1		3464904	1					
ANR	3465002	PrimaryExpression	0		3464904	2					
ANR	3465003	ReturnType	extern int		3464904	1					
ANR	3465004	Identifier	onig_is_in_code_range		3464904	2					
ANR	3465005	ParameterList	"const UChar * p , OnigCodePoint code"		3464904	3					
ANR	3465006	Parameter	const UChar * p	5636:22:127142:127155	3464904	0	True				
ANR	3465007	ParameterType	const UChar *		3464904	0					
ANR	3465008	Identifier	p		3464904	1					
ANR	3465009	Parameter	OnigCodePoint code	5636:38:127158:127175	3464904	1	True				
ANR	3465010	ParameterType	OnigCodePoint		3464904	0					
ANR	3465011	Identifier	code		3464904	1					
ANR	3465012	CFGEntryNode	ENTRY		3464904		True				
ANR	3465013	CFGExitNode	EXIT		3464904		True				
ANR	3465014	Symbol	p		3464904						
ANR	3465015	Symbol	high		3464904						
ANR	3465016	Symbol	* x		3464904						
ANR	3465017	Symbol	code		3464904						
ANR	3465018	Symbol	data		3464904						
ANR	3465019	Symbol	low		3464904						
ANR	3465020	Symbol	x		3464904						
ANR	3465021	Symbol	* data		3464904						
ANR	3465022	Symbol	n		3464904						
ANR	3465023	Symbol	* low		3464904						
ANR	3465024	Function	onig_is_code_in_cc_len	5656:0:127509:127933							
ANR	3465025	FunctionDef	"onig_is_code_in_cc_len (int elen , OnigCodePoint code , CClassNode * cc)"		3465024	0					
ANR	3465026	CompoundStatement		5658:0:127589:127933	3465024	0					
ANR	3465027	IdentifierDeclStatement	int found ;	5659:2:127593:127602	3465024	0	True				
ANR	3465028	IdentifierDecl	found		3465024	0					
ANR	3465029	IdentifierDeclType	int		3465024	0					
ANR	3465030	Identifier	found		3465024	1					
ANR	3465031	IfStatement	if ( elen > 1 || ( code >= SINGLE_BYTE_SIZE ) )		3465024	1					
ANR	3465032	Condition	elen > 1 || ( code >= SINGLE_BYTE_SIZE )	5661:6:127611:127648	3465024	0	True				
ANR	3465033	OrExpression	elen > 1 || ( code >= SINGLE_BYTE_SIZE )		3465024	0		||			
ANR	3465034	RelationalExpression	elen > 1		3465024	0		>			
ANR	3465035	Identifier	elen		3465024	0					
ANR	3465036	PrimaryExpression	1		3465024	1					
ANR	3465037	RelationalExpression	code >= SINGLE_BYTE_SIZE		3465024	1		>=			
ANR	3465038	Identifier	code		3465024	0					
ANR	3465039	Identifier	SINGLE_BYTE_SIZE		3465024	1					
ANR	3465040	CompoundStatement		4:46:61:61	3465024	1					
ANR	3465041	IfStatement	if ( IS_NULL ( cc -> mbuf ) )		3465024	0					
ANR	3465042	Condition	IS_NULL ( cc -> mbuf )	5662:8:127661:127677	3465024	0	True				
ANR	3465043	CallExpression	IS_NULL ( cc -> mbuf )		3465024	0					
ANR	3465044	Callee	IS_NULL		3465024	0					
ANR	3465045	Identifier	IS_NULL		3465024	0					
ANR	3465046	ArgumentList	cc -> mbuf		3465024	1					
ANR	3465047	Argument	cc -> mbuf		3465024	0					
ANR	3465048	PtrMemberAccess	cc -> mbuf		3465024	0					
ANR	3465049	Identifier	cc		3465024	0					
ANR	3465050	Identifier	mbuf		3465024	1					
ANR	3465051	CompoundStatement		5:27:90:90	3465024	1					
ANR	3465052	ExpressionStatement	found = 0	5663:6:127688:127697	3465024	0	True				
ANR	3465053	AssignmentExpression	found = 0		3465024	0		=			
ANR	3465054	Identifier	found		3465024	0					
ANR	3465055	PrimaryExpression	0		3465024	1					
ANR	3465056	ElseStatement	else		3465024	0					
ANR	3465057	CompoundStatement		8:9:124:124	3465024	0					
ANR	3465058	ExpressionStatement	"found = ( onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0 ? 1 : 0 )"	5666:6:127722:127785	3465024	0	True				
ANR	3465059	AssignmentExpression	"found = ( onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0 ? 1 : 0 )"		3465024	0		=			
ANR	3465060	Identifier	found		3465024	0					
ANR	3465061	ConditionalExpression	"onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0 ? 1 : 0"		3465024	1					
ANR	3465062	Condition	"onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0"		3465024	0					
ANR	3465063	EqualityExpression	"onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0"		3465024	0		!=			
ANR	3465064	CallExpression	"onig_is_in_code_range ( cc -> mbuf -> p , code )"		3465024	0					
ANR	3465065	Callee	onig_is_in_code_range		3465024	0					
ANR	3465066	Identifier	onig_is_in_code_range		3465024	0					
ANR	3465067	ArgumentList	cc -> mbuf -> p		3465024	1					
ANR	3465068	Argument	cc -> mbuf -> p		3465024	0					
ANR	3465069	PtrMemberAccess	cc -> mbuf -> p		3465024	0					
ANR	3465070	PtrMemberAccess	cc -> mbuf		3465024	0					
ANR	3465071	Identifier	cc		3465024	0					
ANR	3465072	Identifier	mbuf		3465024	1					
ANR	3465073	Identifier	p		3465024	1					
ANR	3465074	Argument	code		3465024	1					
ANR	3465075	Identifier	code		3465024	0					
ANR	3465076	PrimaryExpression	0		3465024	1					
ANR	3465077	PrimaryExpression	1		3465024	1					
ANR	3465078	PrimaryExpression	0		3465024	2					
ANR	3465079	ElseStatement	else		3465024	0					
ANR	3465080	CompoundStatement		12:7:214:214	3465024	0					
ANR	3465081	ExpressionStatement	"found = ( BITSET_AT ( cc -> bs , code ) == 0 ? 0 : 1 )"	5670:4:127810:127856	3465024	0	True				
ANR	3465082	AssignmentExpression	"found = ( BITSET_AT ( cc -> bs , code ) == 0 ? 0 : 1 )"		3465024	0		=			
ANR	3465083	Identifier	found		3465024	0					
ANR	3465084	ConditionalExpression	"BITSET_AT ( cc -> bs , code ) == 0 ? 0 : 1"		3465024	1					
ANR	3465085	Condition	"BITSET_AT ( cc -> bs , code ) == 0"		3465024	0					
ANR	3465086	EqualityExpression	"BITSET_AT ( cc -> bs , code ) == 0"		3465024	0		==			
ANR	3465087	CallExpression	"BITSET_AT ( cc -> bs , code )"		3465024	0					
ANR	3465088	Callee	BITSET_AT		3465024	0					
ANR	3465089	Identifier	BITSET_AT		3465024	0					
ANR	3465090	ArgumentList	cc -> bs		3465024	1					
ANR	3465091	Argument	cc -> bs		3465024	0					
ANR	3465092	PtrMemberAccess	cc -> bs		3465024	0					
ANR	3465093	Identifier	cc		3465024	0					
ANR	3465094	Identifier	bs		3465024	1					
ANR	3465095	Argument	code		3465024	1					
ANR	3465096	Identifier	code		3465024	0					
ANR	3465097	PrimaryExpression	0		3465024	1					
ANR	3465098	PrimaryExpression	0		3465024	1					
ANR	3465099	PrimaryExpression	1		3465024	2					
ANR	3465100	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		3465024	2					
ANR	3465101	Condition	IS_NCCLASS_NOT ( cc )	5673:6:127869:127886	3465024	0	True				
ANR	3465102	CallExpression	IS_NCCLASS_NOT ( cc )		3465024	0					
ANR	3465103	Callee	IS_NCCLASS_NOT		3465024	0					
ANR	3465104	Identifier	IS_NCCLASS_NOT		3465024	0					
ANR	3465105	ArgumentList	cc		3465024	1					
ANR	3465106	Argument	cc		3465024	0					
ANR	3465107	Identifier	cc		3465024	0					
ANR	3465108	ReturnStatement	return ! found ;	5674:4:127893:127906	3465024	1	True				
ANR	3465109	UnaryOperationExpression	! found		3465024	0					
ANR	3465110	UnaryOperator	!		3465024	0					
ANR	3465111	Identifier	found		3465024	1					
ANR	3465112	ElseStatement	else		3465024	0					
ANR	3465113	ReturnStatement	return found ;	5676:4:127919:127931	3465024	0	True				
ANR	3465114	Identifier	found		3465024	0					
ANR	3465115	ReturnType	extern int		3465024	1					
ANR	3465116	Identifier	onig_is_code_in_cc_len		3465024	2					
ANR	3465117	ParameterList	"int elen , OnigCodePoint code , CClassNode * cc"		3465024	3					
ANR	3465118	Parameter	int elen	5657:23:127543:127550	3465024	0	True				
ANR	3465119	ParameterType	int		3465024	0					
ANR	3465120	Identifier	elen		3465024	1					
ANR	3465121	Parameter	OnigCodePoint code	5657:33:127553:127570	3465024	1	True				
ANR	3465122	ParameterType	OnigCodePoint		3465024	0					
ANR	3465123	Identifier	code		3465024	1					
ANR	3465124	Parameter	CClassNode * cc	5657:53:127573:127586	3465024	2	True				
ANR	3465125	ParameterType	CClassNode *		3465024	0					
ANR	3465126	Identifier	cc		3465024	1					
ANR	3465127	CFGEntryNode	ENTRY		3465024		True				
ANR	3465128	CFGExitNode	EXIT		3465024		True				
ANR	3465129	Symbol	cc		3465024						
ANR	3465130	Symbol	SINGLE_BYTE_SIZE		3465024						
ANR	3465131	Symbol	BITSET_AT		3465024						
ANR	3465132	Symbol	code		3465024						
ANR	3465133	Symbol	* cc		3465024						
ANR	3465134	Symbol	IS_NCCLASS_NOT		3465024						
ANR	3465135	Symbol	cc -> mbuf		3465024						
ANR	3465136	Symbol	cc -> mbuf -> p		3465024						
ANR	3465137	Symbol	* * cc		3465024						
ANR	3465138	Symbol	cc -> bs		3465024						
ANR	3465139	Symbol	* cc -> mbuf		3465024						
ANR	3465140	Symbol	found		3465024						
ANR	3465141	Symbol	IS_NULL		3465024						
ANR	3465142	Symbol	onig_is_in_code_range		3465024						
ANR	3465143	Symbol	elen		3465024						
ANR	3465144	Function	onig_is_code_in_cc	5679:0:127936:128194							
ANR	3465145	FunctionDef	"onig_is_code_in_cc (OnigEncoding enc , OnigCodePoint code , CClassNode * cc)"		3465144	0					
ANR	3465146	CompoundStatement		5681:0:128020:128194	3465144	0					
ANR	3465147	IdentifierDeclStatement	int len ;	5682:2:128024:128031	3465144	0	True				
ANR	3465148	IdentifierDecl	len		3465144	0					
ANR	3465149	IdentifierDeclType	int		3465144	0					
ANR	3465150	Identifier	len		3465144	1					
ANR	3465151	IfStatement	if ( ONIGENC_MBC_MINLEN ( enc ) > 1 )		3465144	1					
ANR	3465152	Condition	ONIGENC_MBC_MINLEN ( enc ) > 1	5684:6:128040:128066	3465144	0	True				
ANR	3465153	RelationalExpression	ONIGENC_MBC_MINLEN ( enc ) > 1		3465144	0		>			
ANR	3465154	CallExpression	ONIGENC_MBC_MINLEN ( enc )		3465144	0					
ANR	3465155	Callee	ONIGENC_MBC_MINLEN		3465144	0					
ANR	3465156	Identifier	ONIGENC_MBC_MINLEN		3465144	0					
ANR	3465157	ArgumentList	enc		3465144	1					
ANR	3465158	Argument	enc		3465144	0					
ANR	3465159	Identifier	enc		3465144	0					
ANR	3465160	PrimaryExpression	1		3465144	1					
ANR	3465161	CompoundStatement		4:35:48:48	3465144	1					
ANR	3465162	ExpressionStatement	len = 2	5685:4:128075:128082	3465144	0	True				
ANR	3465163	AssignmentExpression	len = 2		3465144	0		=			
ANR	3465164	Identifier	len		3465144	0					
ANR	3465165	PrimaryExpression	2		3465144	1					
ANR	3465166	ElseStatement	else		3465144	0					
ANR	3465167	CompoundStatement		7:7:74:74	3465144	0					
ANR	3465168	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( enc , code )"	5688:4:128101:128140	3465144	0	True				
ANR	3465169	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( enc , code )"		3465144	0		=			
ANR	3465170	Identifier	len		3465144	0					
ANR	3465171	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , code )"		3465144	1					
ANR	3465172	Callee	ONIGENC_CODE_TO_MBCLEN		3465144	0					
ANR	3465173	Identifier	ONIGENC_CODE_TO_MBCLEN		3465144	0					
ANR	3465174	ArgumentList	enc		3465144	1					
ANR	3465175	Argument	enc		3465144	0					
ANR	3465176	Identifier	enc		3465144	0					
ANR	3465177	Argument	code		3465144	1					
ANR	3465178	Identifier	code		3465144	0					
ANR	3465179	ReturnStatement	"return onig_is_code_in_cc_len ( len , code , cc ) ;"	5690:2:128148:128192	3465144	2	True				
ANR	3465180	CallExpression	"onig_is_code_in_cc_len ( len , code , cc )"		3465144	0					
ANR	3465181	Callee	onig_is_code_in_cc_len		3465144	0					
ANR	3465182	Identifier	onig_is_code_in_cc_len		3465144	0					
ANR	3465183	ArgumentList	len		3465144	1					
ANR	3465184	Argument	len		3465144	0					
ANR	3465185	Identifier	len		3465144	0					
ANR	3465186	Argument	code		3465144	1					
ANR	3465187	Identifier	code		3465144	0					
ANR	3465188	Argument	cc		3465144	2					
ANR	3465189	Identifier	cc		3465144	0					
ANR	3465190	ReturnType	extern int		3465144	1					
ANR	3465191	Identifier	onig_is_code_in_cc		3465144	2					
ANR	3465192	ParameterList	"OnigEncoding enc , OnigCodePoint code , CClassNode * cc"		3465144	3					
ANR	3465193	Parameter	OnigEncoding enc	5680:19:127966:127981	3465144	0	True				
ANR	3465194	ParameterType	OnigEncoding		3465144	0					
ANR	3465195	Identifier	enc		3465144	1					
ANR	3465196	Parameter	OnigCodePoint code	5680:37:127984:128001	3465144	1	True				
ANR	3465197	ParameterType	OnigCodePoint		3465144	0					
ANR	3465198	Identifier	code		3465144	1					
ANR	3465199	Parameter	CClassNode * cc	5680:57:128004:128017	3465144	2	True				
ANR	3465200	ParameterType	CClassNode *		3465144	0					
ANR	3465201	Identifier	cc		3465144	1					
ANR	3465202	CFGEntryNode	ENTRY		3465144		True				
ANR	3465203	CFGExitNode	EXIT		3465144		True				
ANR	3465204	Symbol	cc		3465144						
ANR	3465205	Symbol	ONIGENC_CODE_TO_MBCLEN		3465144						
ANR	3465206	Symbol	code		3465144						
ANR	3465207	Symbol	len		3465144						
ANR	3465208	Symbol	ONIGENC_MBC_MINLEN		3465144						
ANR	3465209	Symbol	enc		3465144						
ANR	3465210	Symbol	onig_is_code_in_cc_len		3465144						
ANR	3465211	DeclStmt									
ANR	3465212	Decl							OnigOpInfoType	OnigOpInfoType [ ]	OnigOpInfo
ANR	3465213	Function	op2name	5799:0:134138:134321							
ANR	3465214	FunctionDef	op2name (int opcode)		3465213	0					
ANR	3465215	CompoundStatement		5801:0:134171:134321	3465213	0					
ANR	3465216	IdentifierDeclStatement	int i ;	5802:2:134175:134180	3465213	0	True				
ANR	3465217	IdentifierDecl	i		3465213	0					
ANR	3465218	IdentifierDeclType	int		3465213	0					
ANR	3465219	Identifier	i		3465213	1					
ANR	3465220	ForStatement	for ( i = 0 ; OnigOpInfo [ i ] . opcode >= 0 ; i ++ )		3465213	1					
ANR	3465221	ForInit	i = 0 ;	5804:7:134190:134195	3465213	0	True				
ANR	3465222	AssignmentExpression	i = 0		3465213	0		=			
ANR	3465223	Identifier	i		3465213	0					
ANR	3465224	PrimaryExpression	0		3465213	1					
ANR	3465225	Condition	OnigOpInfo [ i ] . opcode >= 0	5804:14:134197:134221	3465213	1	True				
ANR	3465226	RelationalExpression	OnigOpInfo [ i ] . opcode >= 0		3465213	0		>=			
ANR	3465227	MemberAccess	OnigOpInfo [ i ] . opcode		3465213	0					
ANR	3465228	ArrayIndexing	OnigOpInfo [ i ]		3465213	0					
ANR	3465229	Identifier	OnigOpInfo		3465213	0					
ANR	3465230	Identifier	i		3465213	1					
ANR	3465231	Identifier	opcode		3465213	1					
ANR	3465232	PrimaryExpression	0		3465213	1					
ANR	3465233	PostIncDecOperationExpression	i ++	5804:41:134224:134226	3465213	2	True				
ANR	3465234	Identifier	i		3465213	0					
ANR	3465235	IncDec	++		3465213	1					
ANR	3465236	CompoundStatement		4:46:57:57	3465213	3					
ANR	3465237	IfStatement	if ( opcode == OnigOpInfo [ i ] . opcode )		3465213	0					
ANR	3465238	Condition	opcode == OnigOpInfo [ i ] . opcode	5805:8:134239:134268	3465213	0	True				
ANR	3465239	EqualityExpression	opcode == OnigOpInfo [ i ] . opcode		3465213	0		==			
ANR	3465240	Identifier	opcode		3465213	0					
ANR	3465241	MemberAccess	OnigOpInfo [ i ] . opcode		3465213	1					
ANR	3465242	ArrayIndexing	OnigOpInfo [ i ]		3465213	0					
ANR	3465243	Identifier	OnigOpInfo		3465213	0					
ANR	3465244	Identifier	i		3465213	1					
ANR	3465245	Identifier	opcode		3465213	1					
ANR	3465246	ReturnStatement	return OnigOpInfo [ i ] . name ;	5806:6:134277:134302	3465213	1	True				
ANR	3465247	MemberAccess	OnigOpInfo [ i ] . name		3465213	0					
ANR	3465248	ArrayIndexing	OnigOpInfo [ i ]		3465213	0					
ANR	3465249	Identifier	OnigOpInfo		3465213	0					
ANR	3465250	Identifier	i		3465213	1					
ANR	3465251	Identifier	name		3465213	1					
ANR	3465252	ReturnStatement	"return """" ;"	5808:2:134310:134319	3465213	2	True				
ANR	3465253	PrimaryExpression	""""""		3465213	0					
ANR	3465254	ReturnType	static char *		3465213	1					
ANR	3465255	Identifier	op2name		3465213	2					
ANR	3465256	ParameterList	int opcode		3465213	3					
ANR	3465257	Parameter	int opcode	5800:8:134159:134168	3465213	0	True				
ANR	3465258	ParameterType	int		3465213	0					
ANR	3465259	Identifier	opcode		3465213	1					
ANR	3465260	CFGEntryNode	ENTRY		3465213		True				
ANR	3465261	CFGExitNode	EXIT		3465213		True				
ANR	3465262	Symbol	OnigOpInfo [ i ] . opcode		3465213						
ANR	3465263	Symbol	* i		3465213						
ANR	3465264	Symbol	* OnigOpInfo		3465213						
ANR	3465265	Symbol	OnigOpInfo		3465213						
ANR	3465266	Symbol	i		3465213						
ANR	3465267	Symbol	opcode		3465213						
ANR	3465268	Symbol	OnigOpInfo [ i ] . name		3465213						
ANR	3465269	Function	op2arg_type	5811:0:134324:134522							
ANR	3465270	FunctionDef	op2arg_type (int opcode)		3465269	0					
ANR	3465271	CompoundStatement		5813:0:134359:134522	3465269	0					
ANR	3465272	IdentifierDeclStatement	int i ;	5814:2:134363:134368	3465269	0	True				
ANR	3465273	IdentifierDecl	i		3465269	0					
ANR	3465274	IdentifierDeclType	int		3465269	0					
ANR	3465275	Identifier	i		3465269	1					
ANR	3465276	ForStatement	for ( i = 0 ; OnigOpInfo [ i ] . opcode >= 0 ; i ++ )		3465269	1					
ANR	3465277	ForInit	i = 0 ;	5816:7:134378:134383	3465269	0	True				
ANR	3465278	AssignmentExpression	i = 0		3465269	0		=			
ANR	3465279	Identifier	i		3465269	0					
ANR	3465280	PrimaryExpression	0		3465269	1					
ANR	3465281	Condition	OnigOpInfo [ i ] . opcode >= 0	5816:14:134385:134409	3465269	1	True				
ANR	3465282	RelationalExpression	OnigOpInfo [ i ] . opcode >= 0		3465269	0		>=			
ANR	3465283	MemberAccess	OnigOpInfo [ i ] . opcode		3465269	0					
ANR	3465284	ArrayIndexing	OnigOpInfo [ i ]		3465269	0					
ANR	3465285	Identifier	OnigOpInfo		3465269	0					
ANR	3465286	Identifier	i		3465269	1					
ANR	3465287	Identifier	opcode		3465269	1					
ANR	3465288	PrimaryExpression	0		3465269	1					
ANR	3465289	PostIncDecOperationExpression	i ++	5816:41:134412:134414	3465269	2	True				
ANR	3465290	Identifier	i		3465269	0					
ANR	3465291	IncDec	++		3465269	1					
ANR	3465292	CompoundStatement		4:46:57:57	3465269	3					
ANR	3465293	IfStatement	if ( opcode == OnigOpInfo [ i ] . opcode )		3465269	0					
ANR	3465294	Condition	opcode == OnigOpInfo [ i ] . opcode	5817:8:134427:134456	3465269	0	True				
ANR	3465295	EqualityExpression	opcode == OnigOpInfo [ i ] . opcode		3465269	0		==			
ANR	3465296	Identifier	opcode		3465269	0					
ANR	3465297	MemberAccess	OnigOpInfo [ i ] . opcode		3465269	1					
ANR	3465298	ArrayIndexing	OnigOpInfo [ i ]		3465269	0					
ANR	3465299	Identifier	OnigOpInfo		3465269	0					
ANR	3465300	Identifier	i		3465269	1					
ANR	3465301	Identifier	opcode		3465269	1					
ANR	3465302	ReturnStatement	return OnigOpInfo [ i ] . arg_type ;	5818:6:134465:134494	3465269	1	True				
ANR	3465303	MemberAccess	OnigOpInfo [ i ] . arg_type		3465269	0					
ANR	3465304	ArrayIndexing	OnigOpInfo [ i ]		3465269	0					
ANR	3465305	Identifier	OnigOpInfo		3465269	0					
ANR	3465306	Identifier	i		3465269	1					
ANR	3465307	Identifier	arg_type		3465269	1					
ANR	3465308	ReturnStatement	return ARG_SPECIAL ;	5820:2:134502:134520	3465269	2	True				
ANR	3465309	Identifier	ARG_SPECIAL		3465269	0					
ANR	3465310	ReturnType	static int		3465269	1					
ANR	3465311	Identifier	op2arg_type		3465269	2					
ANR	3465312	ParameterList	int opcode		3465269	3					
ANR	3465313	Parameter	int opcode	5812:12:134347:134356	3465269	0	True				
ANR	3465314	ParameterType	int		3465269	0					
ANR	3465315	Identifier	opcode		3465269	1					
ANR	3465316	CFGEntryNode	ENTRY		3465269		True				
ANR	3465317	CFGExitNode	EXIT		3465269		True				
ANR	3465318	Symbol	OnigOpInfo [ i ] . arg_type		3465269						
ANR	3465319	Symbol	OnigOpInfo [ i ] . opcode		3465269						
ANR	3465320	Symbol	* i		3465269						
ANR	3465321	Symbol	* OnigOpInfo		3465269						
ANR	3465322	Symbol	OnigOpInfo		3465269						
ANR	3465323	Symbol	ARG_SPECIAL		3465269						
ANR	3465324	Symbol	i		3465269						
ANR	3465325	Symbol	opcode		3465269						
ANR	3465326	Function	Indent	5823:0:134525:134621							
ANR	3465327	FunctionDef	"Indent (FILE * f , int indent)"		3465326	0					
ANR	3465328	CompoundStatement		5825:0:134565:134621	3465326	0					
ANR	3465329	IdentifierDeclStatement	int i ;	5826:2:134569:134574	3465326	0	True				
ANR	3465330	IdentifierDecl	i		3465326	0					
ANR	3465331	IdentifierDeclType	int		3465326	0					
ANR	3465332	Identifier	i		3465326	1					
ANR	3465333	ForStatement	for ( i = 0 ; i < indent ; i ++ )		3465326	1					
ANR	3465334	ForInit	i = 0 ;	5827:7:134583:134588	3465326	0	True				
ANR	3465335	AssignmentExpression	i = 0		3465326	0		=			
ANR	3465336	Identifier	i		3465326	0					
ANR	3465337	PrimaryExpression	0		3465326	1					
ANR	3465338	Condition	i < indent	5827:14:134590:134599	3465326	1	True				
ANR	3465339	RelationalExpression	i < indent		3465326	0		<			
ANR	3465340	Identifier	i		3465326	0					
ANR	3465341	Identifier	indent		3465326	1					
ANR	3465342	PostIncDecOperationExpression	i ++	5827:26:134602:134604	3465326	2	True				
ANR	3465343	Identifier	i		3465326	0					
ANR	3465344	IncDec	++		3465326	1					
ANR	3465345	ExpressionStatement	"putc ( ' ' , f )"	5827:31:134607:134619	3465326	3	True				
ANR	3465346	CallExpression	"putc ( ' ' , f )"		3465326	0					
ANR	3465347	Callee	putc		3465326	0					
ANR	3465348	Identifier	putc		3465326	0					
ANR	3465349	ArgumentList	' '		3465326	1					
ANR	3465350	Argument	' '		3465326	0					
ANR	3465351	PrimaryExpression	' '		3465326	0					
ANR	3465352	Argument	f		3465326	1					
ANR	3465353	Identifier	f		3465326	0					
ANR	3465354	ReturnType	static void		3465326	1					
ANR	3465355	Identifier	Indent		3465326	2					
ANR	3465356	ParameterList	"FILE * f , int indent"		3465326	3					
ANR	3465357	Parameter	FILE * f	5824:7:134544:134550	3465326	0	True				
ANR	3465358	ParameterType	FILE *		3465326	0					
ANR	3465359	Identifier	f		3465326	1					
ANR	3465360	Parameter	int indent	5824:16:134553:134562	3465326	1	True				
ANR	3465361	ParameterType	int		3465326	0					
ANR	3465362	Identifier	indent		3465326	1					
ANR	3465363	CFGEntryNode	ENTRY		3465326		True				
ANR	3465364	CFGExitNode	EXIT		3465326		True				
ANR	3465365	Symbol	indent		3465326						
ANR	3465366	Symbol	f		3465326						
ANR	3465367	Symbol	i		3465326						
ANR	3465368	Function	p_string	5830:0:134624:134732							
ANR	3465369	FunctionDef	"p_string (FILE * f , int len , UChar * s)"		3465368	0					
ANR	3465370	CompoundStatement		5832:0:134673:134732	3465368	0					
ANR	3465371	ExpressionStatement	"fputs ( "":"" , f )"	5833:2:134677:134690	3465368	0	True				
ANR	3465372	CallExpression	"fputs ( "":"" , f )"		3465368	0					
ANR	3465373	Callee	fputs		3465368	0					
ANR	3465374	Identifier	fputs		3465368	0					
ANR	3465375	ArgumentList	""":"""		3465368	1					
ANR	3465376	Argument	""":"""		3465368	0					
ANR	3465377	PrimaryExpression	""":"""		3465368	0					
ANR	3465378	Argument	f		3465368	1					
ANR	3465379	Identifier	f		3465368	0					
ANR	3465380	WhileStatement	while ( len -- > 0 )		3465368	1					
ANR	3465381	Condition	len -- > 0	5834:9:134701:134709	3465368	0	True				
ANR	3465382	RelationalExpression	len -- > 0		3465368	0		>			
ANR	3465383	PostIncDecOperationExpression	len --		3465368	0					
ANR	3465384	Identifier	len		3465368	0					
ANR	3465385	IncDec	--		3465368	1					
ANR	3465386	PrimaryExpression	0		3465368	1					
ANR	3465387	CompoundStatement		3:20:38:38	3465368	1					
ANR	3465388	ExpressionStatement	"fputc ( * s ++ , f )"	5834:22:134714:134728	3465368	0	True				
ANR	3465389	CallExpression	"fputc ( * s ++ , f )"		3465368	0					
ANR	3465390	Callee	fputc		3465368	0					
ANR	3465391	Identifier	fputc		3465368	0					
ANR	3465392	ArgumentList	* s ++		3465368	1					
ANR	3465393	Argument	* s ++		3465368	0					
ANR	3465394	UnaryOperationExpression	* s ++		3465368	0					
ANR	3465395	UnaryOperator	*		3465368	0					
ANR	3465396	PostIncDecOperationExpression	s ++		3465368	1					
ANR	3465397	Identifier	s		3465368	0					
ANR	3465398	IncDec	++		3465368	1					
ANR	3465399	Argument	f		3465368	1					
ANR	3465400	Identifier	f		3465368	0					
ANR	3465401	ReturnType	static void		3465368	1					
ANR	3465402	Identifier	p_string		3465368	2					
ANR	3465403	ParameterList	"FILE * f , int len , UChar * s"		3465368	3					
ANR	3465404	Parameter	FILE * f	5831:9:134645:134651	3465368	0	True				
ANR	3465405	ParameterType	FILE *		3465368	0					
ANR	3465406	Identifier	f		3465368	1					
ANR	3465407	Parameter	int len	5831:18:134654:134660	3465368	1	True				
ANR	3465408	ParameterType	int		3465368	0					
ANR	3465409	Identifier	len		3465368	1					
ANR	3465410	Parameter	UChar * s	5831:27:134663:134670	3465368	2	True				
ANR	3465411	ParameterType	UChar *		3465368	0					
ANR	3465412	Identifier	s		3465368	1					
ANR	3465413	CFGEntryNode	ENTRY		3465368		True				
ANR	3465414	CFGExitNode	EXIT		3465368		True				
ANR	3465415	Symbol	* s ++		3465368						
ANR	3465416	Symbol	s		3465368						
ANR	3465417	Symbol	len		3465368						
ANR	3465418	Symbol	f		3465368						
ANR	3465419	Function	p_len_string	5837:0:134735:134899							
ANR	3465420	FunctionDef	"p_len_string (FILE * f , LengthType len , int mb_len , UChar * s)"		3465419	0					
ANR	3465421	CompoundStatement		5839:0:134807:134899	3465419	0					
ANR	3465422	IdentifierDeclStatement	int x = len * mb_len ;	5840:2:134811:134831	3465419	0	True				
ANR	3465423	IdentifierDecl	x = len * mb_len		3465419	0					
ANR	3465424	IdentifierDeclType	int		3465419	0					
ANR	3465425	Identifier	x		3465419	1					
ANR	3465426	AssignmentExpression	x = len * mb_len		3465419	2		=			
ANR	3465427	Identifier	x		3465419	0					
ANR	3465428	MultiplicativeExpression	len * mb_len		3465419	1		*			
ANR	3465429	Identifier	len		3465419	0					
ANR	3465430	Identifier	mb_len		3465419	1					
ANR	3465431	ExpressionStatement	"fprintf ( f , "":%d:"" , len )"	5842:2:134836:134859	3465419	1	True				
ANR	3465432	CallExpression	"fprintf ( f , "":%d:"" , len )"		3465419	0					
ANR	3465433	Callee	fprintf		3465419	0					
ANR	3465434	Identifier	fprintf		3465419	0					
ANR	3465435	ArgumentList	f		3465419	1					
ANR	3465436	Argument	f		3465419	0					
ANR	3465437	Identifier	f		3465419	0					
ANR	3465438	Argument	""":%d:"""		3465419	1					
ANR	3465439	PrimaryExpression	""":%d:"""		3465419	0					
ANR	3465440	Argument	len		3465419	2					
ANR	3465441	Identifier	len		3465419	0					
ANR	3465442	WhileStatement	while ( x -- > 0 )		3465419	2					
ANR	3465443	Condition	x -- > 0	5843:9:134870:134876	3465419	0	True				
ANR	3465444	RelationalExpression	x -- > 0		3465419	0		>			
ANR	3465445	PostIncDecOperationExpression	x --		3465419	0					
ANR	3465446	Identifier	x		3465419	0					
ANR	3465447	IncDec	--		3465419	1					
ANR	3465448	PrimaryExpression	0		3465419	1					
ANR	3465449	CompoundStatement		5:18:71:71	3465419	1					
ANR	3465450	ExpressionStatement	"fputc ( * s ++ , f )"	5843:20:134881:134895	3465419	0	True				
ANR	3465451	CallExpression	"fputc ( * s ++ , f )"		3465419	0					
ANR	3465452	Callee	fputc		3465419	0					
ANR	3465453	Identifier	fputc		3465419	0					
ANR	3465454	ArgumentList	* s ++		3465419	1					
ANR	3465455	Argument	* s ++		3465419	0					
ANR	3465456	UnaryOperationExpression	* s ++		3465419	0					
ANR	3465457	UnaryOperator	*		3465419	0					
ANR	3465458	PostIncDecOperationExpression	s ++		3465419	1					
ANR	3465459	Identifier	s		3465419	0					
ANR	3465460	IncDec	++		3465419	1					
ANR	3465461	Argument	f		3465419	1					
ANR	3465462	Identifier	f		3465419	0					
ANR	3465463	ReturnType	static void		3465419	1					
ANR	3465464	Identifier	p_len_string		3465419	2					
ANR	3465465	ParameterList	"FILE * f , LengthType len , int mb_len , UChar * s"		3465419	3					
ANR	3465466	Parameter	FILE * f	5838:13:134760:134766	3465419	0	True				
ANR	3465467	ParameterType	FILE *		3465419	0					
ANR	3465468	Identifier	f		3465419	1					
ANR	3465469	Parameter	LengthType len	5838:22:134769:134782	3465419	1	True				
ANR	3465470	ParameterType	LengthType		3465419	0					
ANR	3465471	Identifier	len		3465419	1					
ANR	3465472	Parameter	int mb_len	5838:38:134785:134794	3465419	2	True				
ANR	3465473	ParameterType	int		3465419	0					
ANR	3465474	Identifier	mb_len		3465419	1					
ANR	3465475	Parameter	UChar * s	5838:50:134797:134804	3465419	3	True				
ANR	3465476	ParameterType	UChar *		3465419	0					
ANR	3465477	Identifier	s		3465419	1					
ANR	3465478	CFGEntryNode	ENTRY		3465419		True				
ANR	3465479	CFGExitNode	EXIT		3465419		True				
ANR	3465480	Symbol	* s ++		3465419						
ANR	3465481	Symbol	s		3465419						
ANR	3465482	Symbol	len		3465419						
ANR	3465483	Symbol	f		3465419						
ANR	3465484	Symbol	x		3465419						
ANR	3465485	Symbol	mb_len		3465419						
ANR	3465486	Function	onig_print_compiled_byte_code	5846:0:134902:140392							
ANR	3465487	FunctionDef	"onig_print_compiled_byte_code (FILE * f , UChar * bp , UChar * * nextp , OnigEncoding enc)"		3465486	0					
ANR	3465488	CompoundStatement		5849:0:135027:140392	3465486	0					
ANR	3465489	IdentifierDeclStatement	"int i , n , arg_type ;"	5850:2:135031:135049	3465486	0	True				
ANR	3465490	IdentifierDecl	i		3465486	0					
ANR	3465491	IdentifierDeclType	int		3465486	0					
ANR	3465492	Identifier	i		3465486	1					
ANR	3465493	IdentifierDecl	n		3465486	1					
ANR	3465494	IdentifierDeclType	int		3465486	0					
ANR	3465495	Identifier	n		3465486	1					
ANR	3465496	IdentifierDecl	arg_type		3465486	2					
ANR	3465497	IdentifierDeclType	int		3465486	0					
ANR	3465498	Identifier	arg_type		3465486	1					
ANR	3465499	IdentifierDeclStatement	RelAddrType addr ;	5851:2:135053:135069	3465486	1	True				
ANR	3465500	IdentifierDecl	addr		3465486	0					
ANR	3465501	IdentifierDeclType	RelAddrType		3465486	0					
ANR	3465502	Identifier	addr		3465486	1					
ANR	3465503	IdentifierDeclStatement	LengthType len ;	5852:2:135073:135087	3465486	2	True				
ANR	3465504	IdentifierDecl	len		3465486	0					
ANR	3465505	IdentifierDeclType	LengthType		3465486	0					
ANR	3465506	Identifier	len		3465486	1					
ANR	3465507	IdentifierDeclStatement	MemNumType mem ;	5853:2:135091:135105	3465486	3	True				
ANR	3465508	IdentifierDecl	mem		3465486	0					
ANR	3465509	IdentifierDeclType	MemNumType		3465486	0					
ANR	3465510	Identifier	mem		3465486	1					
ANR	3465511	IdentifierDeclStatement	StateCheckNumType scn ;	5854:2:135109:135130	3465486	4	True				
ANR	3465512	IdentifierDecl	scn		3465486	0					
ANR	3465513	IdentifierDeclType	StateCheckNumType		3465486	0					
ANR	3465514	Identifier	scn		3465486	1					
ANR	3465515	IdentifierDeclStatement	OnigCodePoint code ;	5855:2:135134:135152	3465486	5	True				
ANR	3465516	IdentifierDecl	code		3465486	0					
ANR	3465517	IdentifierDeclType	OnigCodePoint		3465486	0					
ANR	3465518	Identifier	code		3465486	1					
ANR	3465519	IdentifierDeclStatement	UChar * q ;	5856:2:135156:135164	3465486	6	True				
ANR	3465520	IdentifierDecl	* q		3465486	0					
ANR	3465521	IdentifierDeclType	UChar *		3465486	0					
ANR	3465522	Identifier	q		3465486	1					
ANR	3465523	ExpressionStatement	"fprintf ( f , ""[%s"" , op2name ( * bp ) )"	5858:2:135169:135200	3465486	7	True				
ANR	3465524	CallExpression	"fprintf ( f , ""[%s"" , op2name ( * bp ) )"		3465486	0					
ANR	3465525	Callee	fprintf		3465486	0					
ANR	3465526	Identifier	fprintf		3465486	0					
ANR	3465527	ArgumentList	f		3465486	1					
ANR	3465528	Argument	f		3465486	0					
ANR	3465529	Identifier	f		3465486	0					
ANR	3465530	Argument	"""[%s"""		3465486	1					
ANR	3465531	PrimaryExpression	"""[%s"""		3465486	0					
ANR	3465532	Argument	op2name ( * bp )		3465486	2					
ANR	3465533	CallExpression	op2name ( * bp )		3465486	0					
ANR	3465534	Callee	op2name		3465486	0					
ANR	3465535	Identifier	op2name		3465486	0					
ANR	3465536	ArgumentList	* bp		3465486	1					
ANR	3465537	Argument	* bp		3465486	0					
ANR	3465538	UnaryOperationExpression	* bp		3465486	0					
ANR	3465539	UnaryOperator	*		3465486	0					
ANR	3465540	Identifier	bp		3465486	1					
ANR	3465541	ExpressionStatement	arg_type = op2arg_type ( * bp )	5859:2:135204:135231	3465486	8	True				
ANR	3465542	AssignmentExpression	arg_type = op2arg_type ( * bp )		3465486	0		=			
ANR	3465543	Identifier	arg_type		3465486	0					
ANR	3465544	CallExpression	op2arg_type ( * bp )		3465486	1					
ANR	3465545	Callee	op2arg_type		3465486	0					
ANR	3465546	Identifier	op2arg_type		3465486	0					
ANR	3465547	ArgumentList	* bp		3465486	1					
ANR	3465548	Argument	* bp		3465486	0					
ANR	3465549	UnaryOperationExpression	* bp		3465486	0					
ANR	3465550	UnaryOperator	*		3465486	0					
ANR	3465551	Identifier	bp		3465486	1					
ANR	3465552	IfStatement	if ( arg_type != ARG_SPECIAL )		3465486	9					
ANR	3465553	Condition	arg_type != ARG_SPECIAL	5860:6:135239:135261	3465486	0	True				
ANR	3465554	EqualityExpression	arg_type != ARG_SPECIAL		3465486	0		!=			
ANR	3465555	Identifier	arg_type		3465486	0					
ANR	3465556	Identifier	ARG_SPECIAL		3465486	1					
ANR	3465557	CompoundStatement		12:31:236:236	3465486	1					
ANR	3465558	ExpressionStatement	bp ++	5861:4:135270:135274	3465486	0	True				
ANR	3465559	PostIncDecOperationExpression	bp ++		3465486	0					
ANR	3465560	Identifier	bp		3465486	0					
ANR	3465561	IncDec	++		3465486	1					
ANR	3465562	SwitchStatement	switch ( arg_type )		3465486	1					
ANR	3465563	Condition	arg_type	5862:12:135288:135295	3465486	0	True				
ANR	3465564	Identifier	arg_type		3465486	0					
ANR	3465565	CompoundStatement		14:22:270:270	3465486	1					
ANR	3465566	Label	case ARG_NON :	5863:4:135304:135316	3465486	0	True				
ANR	3465567	Identifier	ARG_NON		3465486	0					
ANR	3465568	BreakStatement	break ;	5864:6:135324:135329	3465486	1	True				
ANR	3465569	Label	case ARG_RELADDR :	5865:4:135335:135351	3465486	2	True				
ANR	3465570	Identifier	ARG_RELADDR		3465486	0					
ANR	3465571	ExpressionStatement	"GET_RELADDR_INC ( addr , bp )"	5866:6:135359:135384	3465486	3	True				
ANR	3465572	CallExpression	"GET_RELADDR_INC ( addr , bp )"		3465486	0					
ANR	3465573	Callee	GET_RELADDR_INC		3465486	0					
ANR	3465574	Identifier	GET_RELADDR_INC		3465486	0					
ANR	3465575	ArgumentList	addr		3465486	1					
ANR	3465576	Argument	addr		3465486	0					
ANR	3465577	Identifier	addr		3465486	0					
ANR	3465578	Argument	bp		3465486	1					
ANR	3465579	Identifier	bp		3465486	0					
ANR	3465580	ExpressionStatement	"fprintf ( f , "":(%d)"" , addr )"	5867:6:135392:135417	3465486	4	True				
ANR	3465581	CallExpression	"fprintf ( f , "":(%d)"" , addr )"		3465486	0					
ANR	3465582	Callee	fprintf		3465486	0					
ANR	3465583	Identifier	fprintf		3465486	0					
ANR	3465584	ArgumentList	f		3465486	1					
ANR	3465585	Argument	f		3465486	0					
ANR	3465586	Identifier	f		3465486	0					
ANR	3465587	Argument	""":(%d)"""		3465486	1					
ANR	3465588	PrimaryExpression	""":(%d)"""		3465486	0					
ANR	3465589	Argument	addr		3465486	2					
ANR	3465590	Identifier	addr		3465486	0					
ANR	3465591	BreakStatement	break ;	5868:6:135425:135430	3465486	5	True				
ANR	3465592	Label	case ARG_ABSADDR :	5869:4:135436:135452	3465486	6	True				
ANR	3465593	Identifier	ARG_ABSADDR		3465486	0					
ANR	3465594	ExpressionStatement	"GET_ABSADDR_INC ( addr , bp )"	5870:6:135460:135485	3465486	7	True				
ANR	3465595	CallExpression	"GET_ABSADDR_INC ( addr , bp )"		3465486	0					
ANR	3465596	Callee	GET_ABSADDR_INC		3465486	0					
ANR	3465597	Identifier	GET_ABSADDR_INC		3465486	0					
ANR	3465598	ArgumentList	addr		3465486	1					
ANR	3465599	Argument	addr		3465486	0					
ANR	3465600	Identifier	addr		3465486	0					
ANR	3465601	Argument	bp		3465486	1					
ANR	3465602	Identifier	bp		3465486	0					
ANR	3465603	ExpressionStatement	"fprintf ( f , "":(%d)"" , addr )"	5871:6:135493:135518	3465486	8	True				
ANR	3465604	CallExpression	"fprintf ( f , "":(%d)"" , addr )"		3465486	0					
ANR	3465605	Callee	fprintf		3465486	0					
ANR	3465606	Identifier	fprintf		3465486	0					
ANR	3465607	ArgumentList	f		3465486	1					
ANR	3465608	Argument	f		3465486	0					
ANR	3465609	Identifier	f		3465486	0					
ANR	3465610	Argument	""":(%d)"""		3465486	1					
ANR	3465611	PrimaryExpression	""":(%d)"""		3465486	0					
ANR	3465612	Argument	addr		3465486	2					
ANR	3465613	Identifier	addr		3465486	0					
ANR	3465614	BreakStatement	break ;	5872:6:135526:135531	3465486	9	True				
ANR	3465615	Label	case ARG_LENGTH :	5873:4:135537:135552	3465486	10	True				
ANR	3465616	Identifier	ARG_LENGTH		3465486	0					
ANR	3465617	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5874:6:135560:135583	3465486	11	True				
ANR	3465618	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3465619	Callee	GET_LENGTH_INC		3465486	0					
ANR	3465620	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3465621	ArgumentList	len		3465486	1					
ANR	3465622	Argument	len		3465486	0					
ANR	3465623	Identifier	len		3465486	0					
ANR	3465624	Argument	bp		3465486	1					
ANR	3465625	Identifier	bp		3465486	0					
ANR	3465626	ExpressionStatement	"fprintf ( f , "":%d"" , len )"	5875:6:135591:135613	3465486	12	True				
ANR	3465627	CallExpression	"fprintf ( f , "":%d"" , len )"		3465486	0					
ANR	3465628	Callee	fprintf		3465486	0					
ANR	3465629	Identifier	fprintf		3465486	0					
ANR	3465630	ArgumentList	f		3465486	1					
ANR	3465631	Argument	f		3465486	0					
ANR	3465632	Identifier	f		3465486	0					
ANR	3465633	Argument	""":%d"""		3465486	1					
ANR	3465634	PrimaryExpression	""":%d"""		3465486	0					
ANR	3465635	Argument	len		3465486	2					
ANR	3465636	Identifier	len		3465486	0					
ANR	3465637	BreakStatement	break ;	5876:6:135621:135626	3465486	13	True				
ANR	3465638	Label	case ARG_MEMNUM :	5877:4:135632:135647	3465486	14	True				
ANR	3465639	Identifier	ARG_MEMNUM		3465486	0					
ANR	3465640	ExpressionStatement	mem = * ( ( MemNumType * ) bp )	5878:6:135655:135680	3465486	15	True				
ANR	3465641	AssignmentExpression	mem = * ( ( MemNumType * ) bp )		3465486	0		=			
ANR	3465642	Identifier	mem		3465486	0					
ANR	3465643	UnaryOperationExpression	* ( ( MemNumType * ) bp )		3465486	1					
ANR	3465644	UnaryOperator	*		3465486	0					
ANR	3465645	CastExpression	( MemNumType * ) bp		3465486	1					
ANR	3465646	CastTarget	MemNumType *		3465486	0					
ANR	3465647	Identifier	bp		3465486	1					
ANR	3465648	ExpressionStatement	bp += SIZE_MEMNUM	5879:6:135688:135705	3465486	16	True				
ANR	3465649	AssignmentExpression	bp += SIZE_MEMNUM		3465486	0		+=			
ANR	3465650	Identifier	bp		3465486	0					
ANR	3465651	Identifier	SIZE_MEMNUM		3465486	1					
ANR	3465652	ExpressionStatement	"fprintf ( f , "":%d"" , mem )"	5880:6:135713:135735	3465486	17	True				
ANR	3465653	CallExpression	"fprintf ( f , "":%d"" , mem )"		3465486	0					
ANR	3465654	Callee	fprintf		3465486	0					
ANR	3465655	Identifier	fprintf		3465486	0					
ANR	3465656	ArgumentList	f		3465486	1					
ANR	3465657	Argument	f		3465486	0					
ANR	3465658	Identifier	f		3465486	0					
ANR	3465659	Argument	""":%d"""		3465486	1					
ANR	3465660	PrimaryExpression	""":%d"""		3465486	0					
ANR	3465661	Argument	mem		3465486	2					
ANR	3465662	Identifier	mem		3465486	0					
ANR	3465663	BreakStatement	break ;	5881:6:135743:135748	3465486	18	True				
ANR	3465664	Label	case ARG_OPTION :	5882:4:135754:135769	3465486	19	True				
ANR	3465665	Identifier	ARG_OPTION		3465486	0					
ANR	3465666	CompoundStatement		36:1:752:799	3465486	20					
ANR	3465667	IdentifierDeclStatement	OnigOptionType option = * ( ( OnigOptionType * ) bp ) ;	5884:1:135780:135827	3465486	0	True				
ANR	3465668	IdentifierDecl	option = * ( ( OnigOptionType * ) bp )		3465486	0					
ANR	3465669	IdentifierDeclType	OnigOptionType		3465486	0					
ANR	3465670	Identifier	option		3465486	1					
ANR	3465671	AssignmentExpression	option = * ( ( OnigOptionType * ) bp )		3465486	2		=			
ANR	3465672	Identifier	option		3465486	0					
ANR	3465673	UnaryOperationExpression	* ( ( OnigOptionType * ) bp )		3465486	1					
ANR	3465674	UnaryOperator	*		3465486	0					
ANR	3465675	CastExpression	( OnigOptionType * ) bp		3465486	1					
ANR	3465676	CastTarget	OnigOptionType *		3465486	0					
ANR	3465677	Identifier	bp		3465486	1					
ANR	3465678	ExpressionStatement	bp += SIZE_OPTION	5885:1:135830:135847	3465486	1	True				
ANR	3465679	AssignmentExpression	bp += SIZE_OPTION		3465486	0		+=			
ANR	3465680	Identifier	bp		3465486	0					
ANR	3465681	Identifier	SIZE_OPTION		3465486	1					
ANR	3465682	ExpressionStatement	"fprintf ( f , "":%d"" , option )"	5886:1:135850:135875	3465486	2	True				
ANR	3465683	CallExpression	"fprintf ( f , "":%d"" , option )"		3465486	0					
ANR	3465684	Callee	fprintf		3465486	0					
ANR	3465685	Identifier	fprintf		3465486	0					
ANR	3465686	ArgumentList	f		3465486	1					
ANR	3465687	Argument	f		3465486	0					
ANR	3465688	Identifier	f		3465486	0					
ANR	3465689	Argument	""":%d"""		3465486	1					
ANR	3465690	PrimaryExpression	""":%d"""		3465486	0					
ANR	3465691	Argument	option		3465486	2					
ANR	3465692	Identifier	option		3465486	0					
ANR	3465693	BreakStatement	break ;	5888:6:135891:135896	3465486	21	True				
ANR	3465694	Label	case ARG_STATE_CHECK :	5890:4:135903:135923	3465486	22	True				
ANR	3465695	Identifier	ARG_STATE_CHECK		3465486	0					
ANR	3465696	ExpressionStatement	scn = * ( ( StateCheckNumType * ) bp )	5891:6:135931:135963	3465486	23	True				
ANR	3465697	AssignmentExpression	scn = * ( ( StateCheckNumType * ) bp )		3465486	0		=			
ANR	3465698	Identifier	scn		3465486	0					
ANR	3465699	UnaryOperationExpression	* ( ( StateCheckNumType * ) bp )		3465486	1					
ANR	3465700	UnaryOperator	*		3465486	0					
ANR	3465701	CastExpression	( StateCheckNumType * ) bp		3465486	1					
ANR	3465702	CastTarget	StateCheckNumType *		3465486	0					
ANR	3465703	Identifier	bp		3465486	1					
ANR	3465704	ExpressionStatement	bp += SIZE_STATE_CHECK_NUM	5892:6:135971:135997	3465486	24	True				
ANR	3465705	AssignmentExpression	bp += SIZE_STATE_CHECK_NUM		3465486	0		+=			
ANR	3465706	Identifier	bp		3465486	0					
ANR	3465707	Identifier	SIZE_STATE_CHECK_NUM		3465486	1					
ANR	3465708	ExpressionStatement	"fprintf ( f , "":%d"" , scn )"	5893:6:136005:136027	3465486	25	True				
ANR	3465709	CallExpression	"fprintf ( f , "":%d"" , scn )"		3465486	0					
ANR	3465710	Callee	fprintf		3465486	0					
ANR	3465711	Identifier	fprintf		3465486	0					
ANR	3465712	ArgumentList	f		3465486	1					
ANR	3465713	Argument	f		3465486	0					
ANR	3465714	Identifier	f		3465486	0					
ANR	3465715	Argument	""":%d"""		3465486	1					
ANR	3465716	PrimaryExpression	""":%d"""		3465486	0					
ANR	3465717	Argument	scn		3465486	2					
ANR	3465718	Identifier	scn		3465486	0					
ANR	3465719	BreakStatement	break ;	5894:6:136035:136040	3465486	26	True				
ANR	3465720	ElseStatement	else		3465486	0					
ANR	3465721	CompoundStatement		49:7:1031:1031	3465486	0					
ANR	3465722	SwitchStatement	switch ( * bp ++ )		3465486	0					
ANR	3465723	Condition	* bp ++	5898:12:136073:136077	3465486	0	True				
ANR	3465724	UnaryOperationExpression	* bp ++		3465486	0					
ANR	3465725	UnaryOperator	*		3465486	0					
ANR	3465726	PostIncDecOperationExpression	bp ++		3465486	1					
ANR	3465727	Identifier	bp		3465486	0					
ANR	3465728	IncDec	++		3465486	1					
ANR	3465729	CompoundStatement		50:19:1052:1052	3465486	1					
ANR	3465730	Label	case OP_EXACT1 :	5899:4:136086:136100	3465486	0	True				
ANR	3465731	Identifier	OP_EXACT1		3465486	0					
ANR	3465732	Label	case OP_ANYCHAR_STAR_PEEK_NEXT :	5900:4:136106:136136	3465486	1	True				
ANR	3465733	Identifier	OP_ANYCHAR_STAR_PEEK_NEXT		3465486	0					
ANR	3465734	Label	case OP_ANYCHAR_ML_STAR_PEEK_NEXT :	5901:4:136142:136175	3465486	2	True				
ANR	3465735	Identifier	OP_ANYCHAR_ML_STAR_PEEK_NEXT		3465486	0					
ANR	3465736	ExpressionStatement	"p_string ( f , 1 , bp ++ )"	5902:6:136183:136203	3465486	3	True				
ANR	3465737	CallExpression	"p_string ( f , 1 , bp ++ )"		3465486	0					
ANR	3465738	Callee	p_string		3465486	0					
ANR	3465739	Identifier	p_string		3465486	0					
ANR	3465740	ArgumentList	f		3465486	1					
ANR	3465741	Argument	f		3465486	0					
ANR	3465742	Identifier	f		3465486	0					
ANR	3465743	Argument	1		3465486	1					
ANR	3465744	PrimaryExpression	1		3465486	0					
ANR	3465745	Argument	bp ++		3465486	2					
ANR	3465746	PostIncDecOperationExpression	bp ++		3465486	0					
ANR	3465747	Identifier	bp		3465486	0					
ANR	3465748	IncDec	++		3465486	1					
ANR	3465749	BreakStatement	break ;	5902:28:136205:136210	3465486	4	True				
ANR	3465750	Label	case OP_EXACT2 :	5903:4:136216:136230	3465486	5	True				
ANR	3465751	Identifier	OP_EXACT2		3465486	0					
ANR	3465752	ExpressionStatement	"p_string ( f , 2 , bp )"	5904:6:136238:136256	3465486	6	True				
ANR	3465753	CallExpression	"p_string ( f , 2 , bp )"		3465486	0					
ANR	3465754	Callee	p_string		3465486	0					
ANR	3465755	Identifier	p_string		3465486	0					
ANR	3465756	ArgumentList	f		3465486	1					
ANR	3465757	Argument	f		3465486	0					
ANR	3465758	Identifier	f		3465486	0					
ANR	3465759	Argument	2		3465486	1					
ANR	3465760	PrimaryExpression	2		3465486	0					
ANR	3465761	Argument	bp		3465486	2					
ANR	3465762	Identifier	bp		3465486	0					
ANR	3465763	ExpressionStatement	bp += 2	5904:26:136258:136265	3465486	7	True				
ANR	3465764	AssignmentExpression	bp += 2		3465486	0		+=			
ANR	3465765	Identifier	bp		3465486	0					
ANR	3465766	PrimaryExpression	2		3465486	1					
ANR	3465767	BreakStatement	break ;	5904:35:136267:136272	3465486	8	True				
ANR	3465768	Label	case OP_EXACT3 :	5905:4:136278:136292	3465486	9	True				
ANR	3465769	Identifier	OP_EXACT3		3465486	0					
ANR	3465770	ExpressionStatement	"p_string ( f , 3 , bp )"	5906:6:136300:136318	3465486	10	True				
ANR	3465771	CallExpression	"p_string ( f , 3 , bp )"		3465486	0					
ANR	3465772	Callee	p_string		3465486	0					
ANR	3465773	Identifier	p_string		3465486	0					
ANR	3465774	ArgumentList	f		3465486	1					
ANR	3465775	Argument	f		3465486	0					
ANR	3465776	Identifier	f		3465486	0					
ANR	3465777	Argument	3		3465486	1					
ANR	3465778	PrimaryExpression	3		3465486	0					
ANR	3465779	Argument	bp		3465486	2					
ANR	3465780	Identifier	bp		3465486	0					
ANR	3465781	ExpressionStatement	bp += 3	5906:26:136320:136327	3465486	11	True				
ANR	3465782	AssignmentExpression	bp += 3		3465486	0		+=			
ANR	3465783	Identifier	bp		3465486	0					
ANR	3465784	PrimaryExpression	3		3465486	1					
ANR	3465785	BreakStatement	break ;	5906:35:136329:136334	3465486	12	True				
ANR	3465786	Label	case OP_EXACT4 :	5907:4:136340:136354	3465486	13	True				
ANR	3465787	Identifier	OP_EXACT4		3465486	0					
ANR	3465788	ExpressionStatement	"p_string ( f , 4 , bp )"	5908:6:136362:136380	3465486	14	True				
ANR	3465789	CallExpression	"p_string ( f , 4 , bp )"		3465486	0					
ANR	3465790	Callee	p_string		3465486	0					
ANR	3465791	Identifier	p_string		3465486	0					
ANR	3465792	ArgumentList	f		3465486	1					
ANR	3465793	Argument	f		3465486	0					
ANR	3465794	Identifier	f		3465486	0					
ANR	3465795	Argument	4		3465486	1					
ANR	3465796	PrimaryExpression	4		3465486	0					
ANR	3465797	Argument	bp		3465486	2					
ANR	3465798	Identifier	bp		3465486	0					
ANR	3465799	ExpressionStatement	bp += 4	5908:26:136382:136389	3465486	15	True				
ANR	3465800	AssignmentExpression	bp += 4		3465486	0		+=			
ANR	3465801	Identifier	bp		3465486	0					
ANR	3465802	PrimaryExpression	4		3465486	1					
ANR	3465803	BreakStatement	break ;	5908:35:136391:136396	3465486	16	True				
ANR	3465804	Label	case OP_EXACT5 :	5909:4:136402:136416	3465486	17	True				
ANR	3465805	Identifier	OP_EXACT5		3465486	0					
ANR	3465806	ExpressionStatement	"p_string ( f , 5 , bp )"	5910:6:136424:136442	3465486	18	True				
ANR	3465807	CallExpression	"p_string ( f , 5 , bp )"		3465486	0					
ANR	3465808	Callee	p_string		3465486	0					
ANR	3465809	Identifier	p_string		3465486	0					
ANR	3465810	ArgumentList	f		3465486	1					
ANR	3465811	Argument	f		3465486	0					
ANR	3465812	Identifier	f		3465486	0					
ANR	3465813	Argument	5		3465486	1					
ANR	3465814	PrimaryExpression	5		3465486	0					
ANR	3465815	Argument	bp		3465486	2					
ANR	3465816	Identifier	bp		3465486	0					
ANR	3465817	ExpressionStatement	bp += 5	5910:26:136444:136451	3465486	19	True				
ANR	3465818	AssignmentExpression	bp += 5		3465486	0		+=			
ANR	3465819	Identifier	bp		3465486	0					
ANR	3465820	PrimaryExpression	5		3465486	1					
ANR	3465821	BreakStatement	break ;	5910:35:136453:136458	3465486	20	True				
ANR	3465822	Label	case OP_EXACTN :	5911:4:136464:136478	3465486	21	True				
ANR	3465823	Identifier	OP_EXACTN		3465486	0					
ANR	3465824	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5912:6:136486:136509	3465486	22	True				
ANR	3465825	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3465826	Callee	GET_LENGTH_INC		3465486	0					
ANR	3465827	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3465828	ArgumentList	len		3465486	1					
ANR	3465829	Argument	len		3465486	0					
ANR	3465830	Identifier	len		3465486	0					
ANR	3465831	Argument	bp		3465486	1					
ANR	3465832	Identifier	bp		3465486	0					
ANR	3465833	ExpressionStatement	"p_len_string ( f , len , 1 , bp )"	5913:6:136517:136544	3465486	23	True				
ANR	3465834	CallExpression	"p_len_string ( f , len , 1 , bp )"		3465486	0					
ANR	3465835	Callee	p_len_string		3465486	0					
ANR	3465836	Identifier	p_len_string		3465486	0					
ANR	3465837	ArgumentList	f		3465486	1					
ANR	3465838	Argument	f		3465486	0					
ANR	3465839	Identifier	f		3465486	0					
ANR	3465840	Argument	len		3465486	1					
ANR	3465841	Identifier	len		3465486	0					
ANR	3465842	Argument	1		3465486	2					
ANR	3465843	PrimaryExpression	1		3465486	0					
ANR	3465844	Argument	bp		3465486	3					
ANR	3465845	Identifier	bp		3465486	0					
ANR	3465846	ExpressionStatement	bp += len	5914:6:136552:136561	3465486	24	True				
ANR	3465847	AssignmentExpression	bp += len		3465486	0		+=			
ANR	3465848	Identifier	bp		3465486	0					
ANR	3465849	Identifier	len		3465486	1					
ANR	3465850	BreakStatement	break ;	5915:6:136569:136574	3465486	25	True				
ANR	3465851	Label	case OP_EXACTMB2N1 :	5917:4:136585:136603	3465486	26	True				
ANR	3465852	Identifier	OP_EXACTMB2N1		3465486	0					
ANR	3465853	ExpressionStatement	"p_string ( f , 2 , bp )"	5918:6:136611:136629	3465486	27	True				
ANR	3465854	CallExpression	"p_string ( f , 2 , bp )"		3465486	0					
ANR	3465855	Callee	p_string		3465486	0					
ANR	3465856	Identifier	p_string		3465486	0					
ANR	3465857	ArgumentList	f		3465486	1					
ANR	3465858	Argument	f		3465486	0					
ANR	3465859	Identifier	f		3465486	0					
ANR	3465860	Argument	2		3465486	1					
ANR	3465861	PrimaryExpression	2		3465486	0					
ANR	3465862	Argument	bp		3465486	2					
ANR	3465863	Identifier	bp		3465486	0					
ANR	3465864	ExpressionStatement	bp += 2	5918:26:136631:136638	3465486	28	True				
ANR	3465865	AssignmentExpression	bp += 2		3465486	0		+=			
ANR	3465866	Identifier	bp		3465486	0					
ANR	3465867	PrimaryExpression	2		3465486	1					
ANR	3465868	BreakStatement	break ;	5918:35:136640:136645	3465486	29	True				
ANR	3465869	Label	case OP_EXACTMB2N2 :	5919:4:136651:136669	3465486	30	True				
ANR	3465870	Identifier	OP_EXACTMB2N2		3465486	0					
ANR	3465871	ExpressionStatement	"p_string ( f , 4 , bp )"	5920:6:136677:136695	3465486	31	True				
ANR	3465872	CallExpression	"p_string ( f , 4 , bp )"		3465486	0					
ANR	3465873	Callee	p_string		3465486	0					
ANR	3465874	Identifier	p_string		3465486	0					
ANR	3465875	ArgumentList	f		3465486	1					
ANR	3465876	Argument	f		3465486	0					
ANR	3465877	Identifier	f		3465486	0					
ANR	3465878	Argument	4		3465486	1					
ANR	3465879	PrimaryExpression	4		3465486	0					
ANR	3465880	Argument	bp		3465486	2					
ANR	3465881	Identifier	bp		3465486	0					
ANR	3465882	ExpressionStatement	bp += 4	5920:26:136697:136704	3465486	32	True				
ANR	3465883	AssignmentExpression	bp += 4		3465486	0		+=			
ANR	3465884	Identifier	bp		3465486	0					
ANR	3465885	PrimaryExpression	4		3465486	1					
ANR	3465886	BreakStatement	break ;	5920:35:136706:136711	3465486	33	True				
ANR	3465887	Label	case OP_EXACTMB2N3 :	5921:4:136717:136735	3465486	34	True				
ANR	3465888	Identifier	OP_EXACTMB2N3		3465486	0					
ANR	3465889	ExpressionStatement	"p_string ( f , 6 , bp )"	5922:6:136743:136761	3465486	35	True				
ANR	3465890	CallExpression	"p_string ( f , 6 , bp )"		3465486	0					
ANR	3465891	Callee	p_string		3465486	0					
ANR	3465892	Identifier	p_string		3465486	0					
ANR	3465893	ArgumentList	f		3465486	1					
ANR	3465894	Argument	f		3465486	0					
ANR	3465895	Identifier	f		3465486	0					
ANR	3465896	Argument	6		3465486	1					
ANR	3465897	PrimaryExpression	6		3465486	0					
ANR	3465898	Argument	bp		3465486	2					
ANR	3465899	Identifier	bp		3465486	0					
ANR	3465900	ExpressionStatement	bp += 6	5922:26:136763:136770	3465486	36	True				
ANR	3465901	AssignmentExpression	bp += 6		3465486	0		+=			
ANR	3465902	Identifier	bp		3465486	0					
ANR	3465903	PrimaryExpression	6		3465486	1					
ANR	3465904	BreakStatement	break ;	5922:35:136772:136777	3465486	37	True				
ANR	3465905	Label	case OP_EXACTMB2N :	5923:4:136783:136800	3465486	38	True				
ANR	3465906	Identifier	OP_EXACTMB2N		3465486	0					
ANR	3465907	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5924:6:136808:136831	3465486	39	True				
ANR	3465908	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3465909	Callee	GET_LENGTH_INC		3465486	0					
ANR	3465910	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3465911	ArgumentList	len		3465486	1					
ANR	3465912	Argument	len		3465486	0					
ANR	3465913	Identifier	len		3465486	0					
ANR	3465914	Argument	bp		3465486	1					
ANR	3465915	Identifier	bp		3465486	0					
ANR	3465916	ExpressionStatement	"p_len_string ( f , len , 2 , bp )"	5925:6:136839:136866	3465486	40	True				
ANR	3465917	CallExpression	"p_len_string ( f , len , 2 , bp )"		3465486	0					
ANR	3465918	Callee	p_len_string		3465486	0					
ANR	3465919	Identifier	p_len_string		3465486	0					
ANR	3465920	ArgumentList	f		3465486	1					
ANR	3465921	Argument	f		3465486	0					
ANR	3465922	Identifier	f		3465486	0					
ANR	3465923	Argument	len		3465486	1					
ANR	3465924	Identifier	len		3465486	0					
ANR	3465925	Argument	2		3465486	2					
ANR	3465926	PrimaryExpression	2		3465486	0					
ANR	3465927	Argument	bp		3465486	3					
ANR	3465928	Identifier	bp		3465486	0					
ANR	3465929	ExpressionStatement	bp += len * 2	5926:6:136874:136887	3465486	41	True				
ANR	3465930	AssignmentExpression	bp += len * 2		3465486	0		+=			
ANR	3465931	Identifier	bp		3465486	0					
ANR	3465932	MultiplicativeExpression	len * 2		3465486	1		*			
ANR	3465933	Identifier	len		3465486	0					
ANR	3465934	PrimaryExpression	2		3465486	1					
ANR	3465935	BreakStatement	break ;	5927:6:136895:136900	3465486	42	True				
ANR	3465936	Label	case OP_EXACTMB3N :	5928:4:136906:136923	3465486	43	True				
ANR	3465937	Identifier	OP_EXACTMB3N		3465486	0					
ANR	3465938	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5929:6:136931:136954	3465486	44	True				
ANR	3465939	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3465940	Callee	GET_LENGTH_INC		3465486	0					
ANR	3465941	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3465942	ArgumentList	len		3465486	1					
ANR	3465943	Argument	len		3465486	0					
ANR	3465944	Identifier	len		3465486	0					
ANR	3465945	Argument	bp		3465486	1					
ANR	3465946	Identifier	bp		3465486	0					
ANR	3465947	ExpressionStatement	"p_len_string ( f , len , 3 , bp )"	5930:6:136962:136989	3465486	45	True				
ANR	3465948	CallExpression	"p_len_string ( f , len , 3 , bp )"		3465486	0					
ANR	3465949	Callee	p_len_string		3465486	0					
ANR	3465950	Identifier	p_len_string		3465486	0					
ANR	3465951	ArgumentList	f		3465486	1					
ANR	3465952	Argument	f		3465486	0					
ANR	3465953	Identifier	f		3465486	0					
ANR	3465954	Argument	len		3465486	1					
ANR	3465955	Identifier	len		3465486	0					
ANR	3465956	Argument	3		3465486	2					
ANR	3465957	PrimaryExpression	3		3465486	0					
ANR	3465958	Argument	bp		3465486	3					
ANR	3465959	Identifier	bp		3465486	0					
ANR	3465960	ExpressionStatement	bp += len * 3	5931:6:136997:137010	3465486	46	True				
ANR	3465961	AssignmentExpression	bp += len * 3		3465486	0		+=			
ANR	3465962	Identifier	bp		3465486	0					
ANR	3465963	MultiplicativeExpression	len * 3		3465486	1		*			
ANR	3465964	Identifier	len		3465486	0					
ANR	3465965	PrimaryExpression	3		3465486	1					
ANR	3465966	BreakStatement	break ;	5932:6:137018:137023	3465486	47	True				
ANR	3465967	Label	case OP_EXACTMBN :	5933:4:137029:137045	3465486	48	True				
ANR	3465968	Identifier	OP_EXACTMBN		3465486	0					
ANR	3465969	CompoundStatement		87:1:2028:2038	3465486	49					
ANR	3465970	IdentifierDeclStatement	int mb_len ;	5935:1:137056:137066	3465486	0	True				
ANR	3465971	IdentifierDecl	mb_len		3465486	0					
ANR	3465972	IdentifierDeclType	int		3465486	0					
ANR	3465973	Identifier	mb_len		3465486	1					
ANR	3465974	ExpressionStatement	"GET_LENGTH_INC ( mb_len , bp )"	5937:1:137076:137102	3465486	1	True				
ANR	3465975	CallExpression	"GET_LENGTH_INC ( mb_len , bp )"		3465486	0					
ANR	3465976	Callee	GET_LENGTH_INC		3465486	0					
ANR	3465977	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3465978	ArgumentList	mb_len		3465486	1					
ANR	3465979	Argument	mb_len		3465486	0					
ANR	3465980	Identifier	mb_len		3465486	0					
ANR	3465981	Argument	bp		3465486	1					
ANR	3465982	Identifier	bp		3465486	0					
ANR	3465983	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5938:1:137105:137128	3465486	2	True				
ANR	3465984	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3465985	Callee	GET_LENGTH_INC		3465486	0					
ANR	3465986	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3465987	ArgumentList	len		3465486	1					
ANR	3465988	Argument	len		3465486	0					
ANR	3465989	Identifier	len		3465486	0					
ANR	3465990	Argument	bp		3465486	1					
ANR	3465991	Identifier	bp		3465486	0					
ANR	3465992	ExpressionStatement	"fprintf ( f , "":%d:%d:"" , mb_len , len )"	5939:1:137131:137165	3465486	3	True				
ANR	3465993	CallExpression	"fprintf ( f , "":%d:%d:"" , mb_len , len )"		3465486	0					
ANR	3465994	Callee	fprintf		3465486	0					
ANR	3465995	Identifier	fprintf		3465486	0					
ANR	3465996	ArgumentList	f		3465486	1					
ANR	3465997	Argument	f		3465486	0					
ANR	3465998	Identifier	f		3465486	0					
ANR	3465999	Argument	""":%d:%d:"""		3465486	1					
ANR	3466000	PrimaryExpression	""":%d:%d:"""		3465486	0					
ANR	3466001	Argument	mb_len		3465486	2					
ANR	3466002	Identifier	mb_len		3465486	0					
ANR	3466003	Argument	len		3465486	3					
ANR	3466004	Identifier	len		3465486	0					
ANR	3466005	ExpressionStatement	n = len * mb_len	5940:1:137168:137184	3465486	4	True				
ANR	3466006	AssignmentExpression	n = len * mb_len		3465486	0		=			
ANR	3466007	Identifier	n		3465486	0					
ANR	3466008	MultiplicativeExpression	len * mb_len		3465486	1		*			
ANR	3466009	Identifier	len		3465486	0					
ANR	3466010	Identifier	mb_len		3465486	1					
ANR	3466011	WhileStatement	while ( n -- > 0 )		3465486	5					
ANR	3466012	Condition	n -- > 0	5941:8:137194:137200	3465486	0	True				
ANR	3466013	RelationalExpression	n -- > 0		3465486	0		>			
ANR	3466014	PostIncDecOperationExpression	n --		3465486	0					
ANR	3466015	Identifier	n		3465486	0					
ANR	3466016	IncDec	--		3465486	1					
ANR	3466017	PrimaryExpression	0		3465486	1					
ANR	3466018	CompoundStatement		93:17:2175:2175	3465486	1					
ANR	3466019	ExpressionStatement	"fputc ( * bp ++ , f )"	5941:19:137205:137220	3465486	0	True				
ANR	3466020	CallExpression	"fputc ( * bp ++ , f )"		3465486	0					
ANR	3466021	Callee	fputc		3465486	0					
ANR	3466022	Identifier	fputc		3465486	0					
ANR	3466023	ArgumentList	* bp ++		3465486	1					
ANR	3466024	Argument	* bp ++		3465486	0					
ANR	3466025	UnaryOperationExpression	* bp ++		3465486	0					
ANR	3466026	UnaryOperator	*		3465486	0					
ANR	3466027	PostIncDecOperationExpression	bp ++		3465486	1					
ANR	3466028	Identifier	bp		3465486	0					
ANR	3466029	IncDec	++		3465486	1					
ANR	3466030	Argument	f		3465486	1					
ANR	3466031	Identifier	f		3465486	0					
ANR	3466032	BreakStatement	break ;	5943:6:137238:137243	3465486	50	True				
ANR	3466033	Label	case OP_EXACT1_IC :	5945:4:137250:137267	3465486	51	True				
ANR	3466034	Identifier	OP_EXACT1_IC		3465486	0					
ANR	3466035	ExpressionStatement	"len = enclen ( enc , bp )"	5946:6:137275:137296	3465486	52	True				
ANR	3466036	AssignmentExpression	"len = enclen ( enc , bp )"		3465486	0		=			
ANR	3466037	Identifier	len		3465486	0					
ANR	3466038	CallExpression	"enclen ( enc , bp )"		3465486	1					
ANR	3466039	Callee	enclen		3465486	0					
ANR	3466040	Identifier	enclen		3465486	0					
ANR	3466041	ArgumentList	enc		3465486	1					
ANR	3466042	Argument	enc		3465486	0					
ANR	3466043	Identifier	enc		3465486	0					
ANR	3466044	Argument	bp		3465486	1					
ANR	3466045	Identifier	bp		3465486	0					
ANR	3466046	ExpressionStatement	"p_string ( f , len , bp )"	5947:6:137304:137324	3465486	53	True				
ANR	3466047	CallExpression	"p_string ( f , len , bp )"		3465486	0					
ANR	3466048	Callee	p_string		3465486	0					
ANR	3466049	Identifier	p_string		3465486	0					
ANR	3466050	ArgumentList	f		3465486	1					
ANR	3466051	Argument	f		3465486	0					
ANR	3466052	Identifier	f		3465486	0					
ANR	3466053	Argument	len		3465486	1					
ANR	3466054	Identifier	len		3465486	0					
ANR	3466055	Argument	bp		3465486	2					
ANR	3466056	Identifier	bp		3465486	0					
ANR	3466057	ExpressionStatement	bp += len	5948:6:137332:137341	3465486	54	True				
ANR	3466058	AssignmentExpression	bp += len		3465486	0		+=			
ANR	3466059	Identifier	bp		3465486	0					
ANR	3466060	Identifier	len		3465486	1					
ANR	3466061	BreakStatement	break ;	5949:6:137349:137354	3465486	55	True				
ANR	3466062	Label	case OP_EXACTN_IC :	5950:4:137360:137377	3465486	56	True				
ANR	3466063	Identifier	OP_EXACTN_IC		3465486	0					
ANR	3466064	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5951:6:137385:137408	3465486	57	True				
ANR	3466065	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3466066	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466067	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466068	ArgumentList	len		3465486	1					
ANR	3466069	Argument	len		3465486	0					
ANR	3466070	Identifier	len		3465486	0					
ANR	3466071	Argument	bp		3465486	1					
ANR	3466072	Identifier	bp		3465486	0					
ANR	3466073	ExpressionStatement	"p_len_string ( f , len , 1 , bp )"	5952:6:137416:137443	3465486	58	True				
ANR	3466074	CallExpression	"p_len_string ( f , len , 1 , bp )"		3465486	0					
ANR	3466075	Callee	p_len_string		3465486	0					
ANR	3466076	Identifier	p_len_string		3465486	0					
ANR	3466077	ArgumentList	f		3465486	1					
ANR	3466078	Argument	f		3465486	0					
ANR	3466079	Identifier	f		3465486	0					
ANR	3466080	Argument	len		3465486	1					
ANR	3466081	Identifier	len		3465486	0					
ANR	3466082	Argument	1		3465486	2					
ANR	3466083	PrimaryExpression	1		3465486	0					
ANR	3466084	Argument	bp		3465486	3					
ANR	3466085	Identifier	bp		3465486	0					
ANR	3466086	ExpressionStatement	bp += len	5953:6:137451:137460	3465486	59	True				
ANR	3466087	AssignmentExpression	bp += len		3465486	0		+=			
ANR	3466088	Identifier	bp		3465486	0					
ANR	3466089	Identifier	len		3465486	1					
ANR	3466090	BreakStatement	break ;	5954:6:137468:137473	3465486	60	True				
ANR	3466091	Label	case OP_CCLASS :	5956:4:137480:137494	3465486	61	True				
ANR	3466092	Identifier	OP_CCLASS		3465486	0					
ANR	3466093	ExpressionStatement	n = bitset_on_num ( ( BitSetRef ) bp )	5957:6:137502:137535	3465486	62	True				
ANR	3466094	AssignmentExpression	n = bitset_on_num ( ( BitSetRef ) bp )		3465486	0		=			
ANR	3466095	Identifier	n		3465486	0					
ANR	3466096	CallExpression	bitset_on_num ( ( BitSetRef ) bp )		3465486	1					
ANR	3466097	Callee	bitset_on_num		3465486	0					
ANR	3466098	Identifier	bitset_on_num		3465486	0					
ANR	3466099	ArgumentList	( BitSetRef ) bp		3465486	1					
ANR	3466100	Argument	( BitSetRef ) bp		3465486	0					
ANR	3466101	CastExpression	( BitSetRef ) bp		3465486	0					
ANR	3466102	CastTarget	BitSetRef		3465486	0					
ANR	3466103	Identifier	bp		3465486	1					
ANR	3466104	ExpressionStatement	bp += SIZE_BITSET	5958:6:137543:137560	3465486	63	True				
ANR	3466105	AssignmentExpression	bp += SIZE_BITSET		3465486	0		+=			
ANR	3466106	Identifier	bp		3465486	0					
ANR	3466107	Identifier	SIZE_BITSET		3465486	1					
ANR	3466108	ExpressionStatement	"fprintf ( f , "":%d"" , n )"	5959:6:137568:137588	3465486	64	True				
ANR	3466109	CallExpression	"fprintf ( f , "":%d"" , n )"		3465486	0					
ANR	3466110	Callee	fprintf		3465486	0					
ANR	3466111	Identifier	fprintf		3465486	0					
ANR	3466112	ArgumentList	f		3465486	1					
ANR	3466113	Argument	f		3465486	0					
ANR	3466114	Identifier	f		3465486	0					
ANR	3466115	Argument	""":%d"""		3465486	1					
ANR	3466116	PrimaryExpression	""":%d"""		3465486	0					
ANR	3466117	Argument	n		3465486	2					
ANR	3466118	Identifier	n		3465486	0					
ANR	3466119	BreakStatement	break ;	5960:6:137596:137601	3465486	65	True				
ANR	3466120	Label	case OP_CCLASS_NOT :	5962:4:137608:137626	3465486	66	True				
ANR	3466121	Identifier	OP_CCLASS_NOT		3465486	0					
ANR	3466122	ExpressionStatement	n = bitset_on_num ( ( BitSetRef ) bp )	5963:6:137634:137667	3465486	67	True				
ANR	3466123	AssignmentExpression	n = bitset_on_num ( ( BitSetRef ) bp )		3465486	0		=			
ANR	3466124	Identifier	n		3465486	0					
ANR	3466125	CallExpression	bitset_on_num ( ( BitSetRef ) bp )		3465486	1					
ANR	3466126	Callee	bitset_on_num		3465486	0					
ANR	3466127	Identifier	bitset_on_num		3465486	0					
ANR	3466128	ArgumentList	( BitSetRef ) bp		3465486	1					
ANR	3466129	Argument	( BitSetRef ) bp		3465486	0					
ANR	3466130	CastExpression	( BitSetRef ) bp		3465486	0					
ANR	3466131	CastTarget	BitSetRef		3465486	0					
ANR	3466132	Identifier	bp		3465486	1					
ANR	3466133	ExpressionStatement	bp += SIZE_BITSET	5964:6:137675:137692	3465486	68	True				
ANR	3466134	AssignmentExpression	bp += SIZE_BITSET		3465486	0		+=			
ANR	3466135	Identifier	bp		3465486	0					
ANR	3466136	Identifier	SIZE_BITSET		3465486	1					
ANR	3466137	ExpressionStatement	"fprintf ( f , "":%d"" , n )"	5965:6:137700:137720	3465486	69	True				
ANR	3466138	CallExpression	"fprintf ( f , "":%d"" , n )"		3465486	0					
ANR	3466139	Callee	fprintf		3465486	0					
ANR	3466140	Identifier	fprintf		3465486	0					
ANR	3466141	ArgumentList	f		3465486	1					
ANR	3466142	Argument	f		3465486	0					
ANR	3466143	Identifier	f		3465486	0					
ANR	3466144	Argument	""":%d"""		3465486	1					
ANR	3466145	PrimaryExpression	""":%d"""		3465486	0					
ANR	3466146	Argument	n		3465486	2					
ANR	3466147	Identifier	n		3465486	0					
ANR	3466148	BreakStatement	break ;	5966:6:137728:137733	3465486	70	True				
ANR	3466149	Label	case OP_CCLASS_MB :	5968:4:137740:137757	3465486	71	True				
ANR	3466150	Identifier	OP_CCLASS_MB		3465486	0					
ANR	3466151	Label	case OP_CCLASS_MB_NOT :	5969:4:137763:137784	3465486	72	True				
ANR	3466152	Identifier	OP_CCLASS_MB_NOT		3465486	0					
ANR	3466153	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5970:6:137792:137815	3465486	73	True				
ANR	3466154	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3466155	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466156	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466157	ArgumentList	len		3465486	1					
ANR	3466158	Argument	len		3465486	0					
ANR	3466159	Identifier	len		3465486	0					
ANR	3466160	Argument	bp		3465486	1					
ANR	3466161	Identifier	bp		3465486	0					
ANR	3466162	ExpressionStatement	q = bp	5971:6:137823:137829	3465486	74	True				
ANR	3466163	AssignmentExpression	q = bp		3465486	0		=			
ANR	3466164	Identifier	q		3465486	0					
ANR	3466165	Identifier	bp		3465486	1					
ANR	3466166	ExpressionStatement	ALIGNMENT_RIGHT ( q )	5973:6:137876:137894	3465486	75	True				
ANR	3466167	CallExpression	ALIGNMENT_RIGHT ( q )		3465486	0					
ANR	3466168	Callee	ALIGNMENT_RIGHT		3465486	0					
ANR	3466169	Identifier	ALIGNMENT_RIGHT		3465486	0					
ANR	3466170	ArgumentList	q		3465486	1					
ANR	3466171	Argument	q		3465486	0					
ANR	3466172	Identifier	q		3465486	0					
ANR	3466173	ExpressionStatement	"GET_CODE_POINT ( code , q )"	5975:6:137909:137932	3465486	76	True				
ANR	3466174	CallExpression	"GET_CODE_POINT ( code , q )"		3465486	0					
ANR	3466175	Callee	GET_CODE_POINT		3465486	0					
ANR	3466176	Identifier	GET_CODE_POINT		3465486	0					
ANR	3466177	ArgumentList	code		3465486	1					
ANR	3466178	Argument	code		3465486	0					
ANR	3466179	Identifier	code		3465486	0					
ANR	3466180	Argument	q		3465486	1					
ANR	3466181	Identifier	q		3465486	0					
ANR	3466182	ExpressionStatement	bp += len	5976:6:137940:137949	3465486	77	True				
ANR	3466183	AssignmentExpression	bp += len		3465486	0		+=			
ANR	3466184	Identifier	bp		3465486	0					
ANR	3466185	Identifier	len		3465486	1					
ANR	3466186	ExpressionStatement	"fprintf ( f , "":%d:%d"" , ( int ) code , len )"	5977:6:137957:137994	3465486	78	True				
ANR	3466187	CallExpression	"fprintf ( f , "":%d:%d"" , ( int ) code , len )"		3465486	0					
ANR	3466188	Callee	fprintf		3465486	0					
ANR	3466189	Identifier	fprintf		3465486	0					
ANR	3466190	ArgumentList	f		3465486	1					
ANR	3466191	Argument	f		3465486	0					
ANR	3466192	Identifier	f		3465486	0					
ANR	3466193	Argument	""":%d:%d"""		3465486	1					
ANR	3466194	PrimaryExpression	""":%d:%d"""		3465486	0					
ANR	3466195	Argument	( int ) code		3465486	2					
ANR	3466196	CastExpression	( int ) code		3465486	0					
ANR	3466197	CastTarget	int		3465486	0					
ANR	3466198	Identifier	code		3465486	1					
ANR	3466199	Argument	len		3465486	3					
ANR	3466200	Identifier	len		3465486	0					
ANR	3466201	BreakStatement	break ;	5978:6:138002:138007	3465486	79	True				
ANR	3466202	Label	case OP_CCLASS_MIX :	5980:4:138014:138032	3465486	80	True				
ANR	3466203	Identifier	OP_CCLASS_MIX		3465486	0					
ANR	3466204	Label	case OP_CCLASS_MIX_NOT :	5981:4:138038:138060	3465486	81	True				
ANR	3466205	Identifier	OP_CCLASS_MIX_NOT		3465486	0					
ANR	3466206	ExpressionStatement	n = bitset_on_num ( ( BitSetRef ) bp )	5982:6:138068:138101	3465486	82	True				
ANR	3466207	AssignmentExpression	n = bitset_on_num ( ( BitSetRef ) bp )		3465486	0		=			
ANR	3466208	Identifier	n		3465486	0					
ANR	3466209	CallExpression	bitset_on_num ( ( BitSetRef ) bp )		3465486	1					
ANR	3466210	Callee	bitset_on_num		3465486	0					
ANR	3466211	Identifier	bitset_on_num		3465486	0					
ANR	3466212	ArgumentList	( BitSetRef ) bp		3465486	1					
ANR	3466213	Argument	( BitSetRef ) bp		3465486	0					
ANR	3466214	CastExpression	( BitSetRef ) bp		3465486	0					
ANR	3466215	CastTarget	BitSetRef		3465486	0					
ANR	3466216	Identifier	bp		3465486	1					
ANR	3466217	ExpressionStatement	bp += SIZE_BITSET	5983:6:138109:138126	3465486	83	True				
ANR	3466218	AssignmentExpression	bp += SIZE_BITSET		3465486	0		+=			
ANR	3466219	Identifier	bp		3465486	0					
ANR	3466220	Identifier	SIZE_BITSET		3465486	1					
ANR	3466221	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5984:6:138134:138157	3465486	84	True				
ANR	3466222	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3466223	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466224	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466225	ArgumentList	len		3465486	1					
ANR	3466226	Argument	len		3465486	0					
ANR	3466227	Identifier	len		3465486	0					
ANR	3466228	Argument	bp		3465486	1					
ANR	3466229	Identifier	bp		3465486	0					
ANR	3466230	ExpressionStatement	q = bp	5985:6:138165:138171	3465486	85	True				
ANR	3466231	AssignmentExpression	q = bp		3465486	0		=			
ANR	3466232	Identifier	q		3465486	0					
ANR	3466233	Identifier	bp		3465486	1					
ANR	3466234	ExpressionStatement	ALIGNMENT_RIGHT ( q )	5987:6:138218:138236	3465486	86	True				
ANR	3466235	CallExpression	ALIGNMENT_RIGHT ( q )		3465486	0					
ANR	3466236	Callee	ALIGNMENT_RIGHT		3465486	0					
ANR	3466237	Identifier	ALIGNMENT_RIGHT		3465486	0					
ANR	3466238	ArgumentList	q		3465486	1					
ANR	3466239	Argument	q		3465486	0					
ANR	3466240	Identifier	q		3465486	0					
ANR	3466241	ExpressionStatement	"GET_CODE_POINT ( code , q )"	5989:6:138251:138274	3465486	87	True				
ANR	3466242	CallExpression	"GET_CODE_POINT ( code , q )"		3465486	0					
ANR	3466243	Callee	GET_CODE_POINT		3465486	0					
ANR	3466244	Identifier	GET_CODE_POINT		3465486	0					
ANR	3466245	ArgumentList	code		3465486	1					
ANR	3466246	Argument	code		3465486	0					
ANR	3466247	Identifier	code		3465486	0					
ANR	3466248	Argument	q		3465486	1					
ANR	3466249	Identifier	q		3465486	0					
ANR	3466250	ExpressionStatement	bp += len	5990:6:138282:138291	3465486	88	True				
ANR	3466251	AssignmentExpression	bp += len		3465486	0		+=			
ANR	3466252	Identifier	bp		3465486	0					
ANR	3466253	Identifier	len		3465486	1					
ANR	3466254	ExpressionStatement	"fprintf ( f , "":%d:%d:%d"" , n , ( int ) code , len )"	5991:6:138299:138342	3465486	89	True				
ANR	3466255	CallExpression	"fprintf ( f , "":%d:%d:%d"" , n , ( int ) code , len )"		3465486	0					
ANR	3466256	Callee	fprintf		3465486	0					
ANR	3466257	Identifier	fprintf		3465486	0					
ANR	3466258	ArgumentList	f		3465486	1					
ANR	3466259	Argument	f		3465486	0					
ANR	3466260	Identifier	f		3465486	0					
ANR	3466261	Argument	""":%d:%d:%d"""		3465486	1					
ANR	3466262	PrimaryExpression	""":%d:%d:%d"""		3465486	0					
ANR	3466263	Argument	n		3465486	2					
ANR	3466264	Identifier	n		3465486	0					
ANR	3466265	Argument	( int ) code		3465486	3					
ANR	3466266	CastExpression	( int ) code		3465486	0					
ANR	3466267	CastTarget	int		3465486	0					
ANR	3466268	Identifier	code		3465486	1					
ANR	3466269	Argument	len		3465486	4					
ANR	3466270	Identifier	len		3465486	0					
ANR	3466271	BreakStatement	break ;	5992:6:138350:138355	3465486	90	True				
ANR	3466272	Label	case OP_CCLASS_NODE :	5994:4:138362:138381	3465486	91	True				
ANR	3466273	Identifier	OP_CCLASS_NODE		3465486	0					
ANR	3466274	CompoundStatement		148:8:3371:3385	3465486	92					
ANR	3466275	IdentifierDeclStatement	CClassNode * cc ;	5996:8:138399:138413	3465486	0	True				
ANR	3466276	IdentifierDecl	* cc		3465486	0					
ANR	3466277	IdentifierDeclType	CClassNode *		3465486	0					
ANR	3466278	Identifier	cc		3465486	1					
ANR	3466279	ExpressionStatement	"GET_POINTER_INC ( cc , bp )"	5998:8:138424:138447	3465486	1	True				
ANR	3466280	CallExpression	"GET_POINTER_INC ( cc , bp )"		3465486	0					
ANR	3466281	Callee	GET_POINTER_INC		3465486	0					
ANR	3466282	Identifier	GET_POINTER_INC		3465486	0					
ANR	3466283	ArgumentList	cc		3465486	1					
ANR	3466284	Argument	cc		3465486	0					
ANR	3466285	Identifier	cc		3465486	0					
ANR	3466286	Argument	bp		3465486	1					
ANR	3466287	Identifier	bp		3465486	0					
ANR	3466288	ExpressionStatement	n = bitset_on_num ( cc -> bs )	5999:8:138457:138482	3465486	2	True				
ANR	3466289	AssignmentExpression	n = bitset_on_num ( cc -> bs )		3465486	0		=			
ANR	3466290	Identifier	n		3465486	0					
ANR	3466291	CallExpression	bitset_on_num ( cc -> bs )		3465486	1					
ANR	3466292	Callee	bitset_on_num		3465486	0					
ANR	3466293	Identifier	bitset_on_num		3465486	0					
ANR	3466294	ArgumentList	cc -> bs		3465486	1					
ANR	3466295	Argument	cc -> bs		3465486	0					
ANR	3466296	PtrMemberAccess	cc -> bs		3465486	0					
ANR	3466297	Identifier	cc		3465486	0					
ANR	3466298	Identifier	bs		3465486	1					
ANR	3466299	ExpressionStatement	"fprintf ( f , "":%u:%d"" , ( unsigned int ) cc , n )"	6000:8:138492:138534	3465486	3	True				
ANR	3466300	CallExpression	"fprintf ( f , "":%u:%d"" , ( unsigned int ) cc , n )"		3465486	0					
ANR	3466301	Callee	fprintf		3465486	0					
ANR	3466302	Identifier	fprintf		3465486	0					
ANR	3466303	ArgumentList	f		3465486	1					
ANR	3466304	Argument	f		3465486	0					
ANR	3466305	Identifier	f		3465486	0					
ANR	3466306	Argument	""":%u:%d"""		3465486	1					
ANR	3466307	PrimaryExpression	""":%u:%d"""		3465486	0					
ANR	3466308	Argument	( unsigned int ) cc		3465486	2					
ANR	3466309	CastExpression	( unsigned int ) cc		3465486	0					
ANR	3466310	CastTarget	unsigned int		3465486	0					
ANR	3466311	Identifier	cc		3465486	1					
ANR	3466312	Argument	n		3465486	3					
ANR	3466313	Identifier	n		3465486	0					
ANR	3466314	BreakStatement	break ;	6002:6:138550:138555	3465486	93	True				
ANR	3466315	Label	case OP_BACKREFN_IC :	6004:4:138562:138581	3465486	94	True				
ANR	3466316	Identifier	OP_BACKREFN_IC		3465486	0					
ANR	3466317	ExpressionStatement	mem = * ( ( MemNumType * ) bp )	6005:6:138589:138614	3465486	95	True				
ANR	3466318	AssignmentExpression	mem = * ( ( MemNumType * ) bp )		3465486	0		=			
ANR	3466319	Identifier	mem		3465486	0					
ANR	3466320	UnaryOperationExpression	* ( ( MemNumType * ) bp )		3465486	1					
ANR	3466321	UnaryOperator	*		3465486	0					
ANR	3466322	CastExpression	( MemNumType * ) bp		3465486	1					
ANR	3466323	CastTarget	MemNumType *		3465486	0					
ANR	3466324	Identifier	bp		3465486	1					
ANR	3466325	ExpressionStatement	bp += SIZE_MEMNUM	6006:6:138622:138639	3465486	96	True				
ANR	3466326	AssignmentExpression	bp += SIZE_MEMNUM		3465486	0		+=			
ANR	3466327	Identifier	bp		3465486	0					
ANR	3466328	Identifier	SIZE_MEMNUM		3465486	1					
ANR	3466329	ExpressionStatement	"fprintf ( f , "":%d"" , mem )"	6007:6:138647:138669	3465486	97	True				
ANR	3466330	CallExpression	"fprintf ( f , "":%d"" , mem )"		3465486	0					
ANR	3466331	Callee	fprintf		3465486	0					
ANR	3466332	Identifier	fprintf		3465486	0					
ANR	3466333	ArgumentList	f		3465486	1					
ANR	3466334	Argument	f		3465486	0					
ANR	3466335	Identifier	f		3465486	0					
ANR	3466336	Argument	""":%d"""		3465486	1					
ANR	3466337	PrimaryExpression	""":%d"""		3465486	0					
ANR	3466338	Argument	mem		3465486	2					
ANR	3466339	Identifier	mem		3465486	0					
ANR	3466340	BreakStatement	break ;	6008:6:138677:138682	3465486	98	True				
ANR	3466341	Label	case OP_BACKREF_MULTI_IC :	6010:4:138689:138713	3465486	99	True				
ANR	3466342	Identifier	OP_BACKREF_MULTI_IC		3465486	0					
ANR	3466343	Label	case OP_BACKREF_MULTI :	6011:4:138719:138740	3465486	100	True				
ANR	3466344	Identifier	OP_BACKREF_MULTI		3465486	0					
ANR	3466345	ExpressionStatement	"fputs ( "" "" , f )"	6012:6:138748:138761	3465486	101	True				
ANR	3466346	CallExpression	"fputs ( "" "" , f )"		3465486	0					
ANR	3466347	Callee	fputs		3465486	0					
ANR	3466348	Identifier	fputs		3465486	0					
ANR	3466349	ArgumentList	""" """		3465486	1					
ANR	3466350	Argument	""" """		3465486	0					
ANR	3466351	PrimaryExpression	""" """		3465486	0					
ANR	3466352	Argument	f		3465486	1					
ANR	3466353	Identifier	f		3465486	0					
ANR	3466354	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6013:6:138769:138792	3465486	102	True				
ANR	3466355	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3466356	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466357	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466358	ArgumentList	len		3465486	1					
ANR	3466359	Argument	len		3465486	0					
ANR	3466360	Identifier	len		3465486	0					
ANR	3466361	Argument	bp		3465486	1					
ANR	3466362	Identifier	bp		3465486	0					
ANR	3466363	ForStatement	for ( i = 0 ; i < len ; i ++ )		3465486	103					
ANR	3466364	ForInit	i = 0 ;	6014:11:138805:138810	3465486	0	True				
ANR	3466365	AssignmentExpression	i = 0		3465486	0		=			
ANR	3466366	Identifier	i		3465486	0					
ANR	3466367	PrimaryExpression	0		3465486	1					
ANR	3466368	Condition	i < len	6014:18:138812:138818	3465486	1	True				
ANR	3466369	RelationalExpression	i < len		3465486	0		<			
ANR	3466370	Identifier	i		3465486	0					
ANR	3466371	Identifier	len		3465486	1					
ANR	3466372	PostIncDecOperationExpression	i ++	6014:27:138821:138823	3465486	2	True				
ANR	3466373	Identifier	i		3465486	0					
ANR	3466374	IncDec	++		3465486	1					
ANR	3466375	CompoundStatement		166:32:3798:3798	3465486	3					
ANR	3466376	ExpressionStatement	"GET_MEMNUM_INC ( mem , bp )"	6015:1:138829:138852	3465486	0	True				
ANR	3466377	CallExpression	"GET_MEMNUM_INC ( mem , bp )"		3465486	0					
ANR	3466378	Callee	GET_MEMNUM_INC		3465486	0					
ANR	3466379	Identifier	GET_MEMNUM_INC		3465486	0					
ANR	3466380	ArgumentList	mem		3465486	1					
ANR	3466381	Argument	mem		3465486	0					
ANR	3466382	Identifier	mem		3465486	0					
ANR	3466383	Argument	bp		3465486	1					
ANR	3466384	Identifier	bp		3465486	0					
ANR	3466385	IfStatement	if ( i > 0 )		3465486	1					
ANR	3466386	Condition	i > 0	6016:5:138859:138863	3465486	0	True				
ANR	3466387	RelationalExpression	i > 0		3465486	0		>			
ANR	3466388	Identifier	i		3465486	0					
ANR	3466389	PrimaryExpression	0		3465486	1					
ANR	3466390	ExpressionStatement	"fputs ( "", "" , f )"	6016:12:138866:138880	3465486	1	True				
ANR	3466391	CallExpression	"fputs ( "", "" , f )"		3465486	0					
ANR	3466392	Callee	fputs		3465486	0					
ANR	3466393	Identifier	fputs		3465486	0					
ANR	3466394	ArgumentList	""", """		3465486	1					
ANR	3466395	Argument	""", """		3465486	0					
ANR	3466396	PrimaryExpression	""", """		3465486	0					
ANR	3466397	Argument	f		3465486	1					
ANR	3466398	Identifier	f		3465486	0					
ANR	3466399	ExpressionStatement	"fprintf ( f , ""%d"" , mem )"	6017:1:138883:138904	3465486	2	True				
ANR	3466400	CallExpression	"fprintf ( f , ""%d"" , mem )"		3465486	0					
ANR	3466401	Callee	fprintf		3465486	0					
ANR	3466402	Identifier	fprintf		3465486	0					
ANR	3466403	ArgumentList	f		3465486	1					
ANR	3466404	Argument	f		3465486	0					
ANR	3466405	Identifier	f		3465486	0					
ANR	3466406	Argument	"""%d"""		3465486	1					
ANR	3466407	PrimaryExpression	"""%d"""		3465486	0					
ANR	3466408	Argument	mem		3465486	2					
ANR	3466409	Identifier	mem		3465486	0					
ANR	3466410	BreakStatement	break ;	6019:6:138920:138925	3465486	104	True				
ANR	3466411	Label	case OP_BACKREF_WITH_LEVEL :	6021:4:138932:138958	3465486	105	True				
ANR	3466412	Identifier	OP_BACKREF_WITH_LEVEL		3465486	0					
ANR	3466413	CompoundStatement		176:1:3965:3981	3465486	106					
ANR	3466414	IdentifierDeclStatement	OnigOptionType option ;	6023:1:138969:138990	3465486	0	True				
ANR	3466415	IdentifierDecl	option		3465486	0					
ANR	3466416	IdentifierDeclType	OnigOptionType		3465486	0					
ANR	3466417	Identifier	option		3465486	1					
ANR	3466418	IdentifierDeclStatement	LengthType level ;	6024:1:138993:139009	3465486	1	True				
ANR	3466419	IdentifierDecl	level		3465486	0					
ANR	3466420	IdentifierDeclType	LengthType		3465486	0					
ANR	3466421	Identifier	level		3465486	1					
ANR	3466422	ExpressionStatement	"GET_OPTION_INC ( option , bp )"	6026:1:139013:139039	3465486	2	True				
ANR	3466423	CallExpression	"GET_OPTION_INC ( option , bp )"		3465486	0					
ANR	3466424	Callee	GET_OPTION_INC		3465486	0					
ANR	3466425	Identifier	GET_OPTION_INC		3465486	0					
ANR	3466426	ArgumentList	option		3465486	1					
ANR	3466427	Argument	option		3465486	0					
ANR	3466428	Identifier	option		3465486	0					
ANR	3466429	Argument	bp		3465486	1					
ANR	3466430	Identifier	bp		3465486	0					
ANR	3466431	ExpressionStatement	"fprintf ( f , "":%d"" , option )"	6027:1:139042:139067	3465486	3	True				
ANR	3466432	CallExpression	"fprintf ( f , "":%d"" , option )"		3465486	0					
ANR	3466433	Callee	fprintf		3465486	0					
ANR	3466434	Identifier	fprintf		3465486	0					
ANR	3466435	ArgumentList	f		3465486	1					
ANR	3466436	Argument	f		3465486	0					
ANR	3466437	Identifier	f		3465486	0					
ANR	3466438	Argument	""":%d"""		3465486	1					
ANR	3466439	PrimaryExpression	""":%d"""		3465486	0					
ANR	3466440	Argument	option		3465486	2					
ANR	3466441	Identifier	option		3465486	0					
ANR	3466442	ExpressionStatement	"GET_LENGTH_INC ( level , bp )"	6028:1:139070:139095	3465486	4	True				
ANR	3466443	CallExpression	"GET_LENGTH_INC ( level , bp )"		3465486	0					
ANR	3466444	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466445	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466446	ArgumentList	level		3465486	1					
ANR	3466447	Argument	level		3465486	0					
ANR	3466448	Identifier	level		3465486	0					
ANR	3466449	Argument	bp		3465486	1					
ANR	3466450	Identifier	bp		3465486	0					
ANR	3466451	ExpressionStatement	"fprintf ( f , "":%d"" , level )"	6029:1:139098:139122	3465486	5	True				
ANR	3466452	CallExpression	"fprintf ( f , "":%d"" , level )"		3465486	0					
ANR	3466453	Callee	fprintf		3465486	0					
ANR	3466454	Identifier	fprintf		3465486	0					
ANR	3466455	ArgumentList	f		3465486	1					
ANR	3466456	Argument	f		3465486	0					
ANR	3466457	Identifier	f		3465486	0					
ANR	3466458	Argument	""":%d"""		3465486	1					
ANR	3466459	PrimaryExpression	""":%d"""		3465486	0					
ANR	3466460	Argument	level		3465486	2					
ANR	3466461	Identifier	level		3465486	0					
ANR	3466462	ExpressionStatement	"fputs ( "" "" , f )"	6031:1:139126:139139	3465486	6	True				
ANR	3466463	CallExpression	"fputs ( "" "" , f )"		3465486	0					
ANR	3466464	Callee	fputs		3465486	0					
ANR	3466465	Identifier	fputs		3465486	0					
ANR	3466466	ArgumentList	""" """		3465486	1					
ANR	3466467	Argument	""" """		3465486	0					
ANR	3466468	PrimaryExpression	""" """		3465486	0					
ANR	3466469	Argument	f		3465486	1					
ANR	3466470	Identifier	f		3465486	0					
ANR	3466471	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6032:1:139142:139165	3465486	7	True				
ANR	3466472	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3466473	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466474	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466475	ArgumentList	len		3465486	1					
ANR	3466476	Argument	len		3465486	0					
ANR	3466477	Identifier	len		3465486	0					
ANR	3466478	Argument	bp		3465486	1					
ANR	3466479	Identifier	bp		3465486	0					
ANR	3466480	ForStatement	for ( i = 0 ; i < len ; i ++ )		3465486	8					
ANR	3466481	ForInit	i = 0 ;	6033:6:139173:139178	3465486	0	True				
ANR	3466482	AssignmentExpression	i = 0		3465486	0		=			
ANR	3466483	Identifier	i		3465486	0					
ANR	3466484	PrimaryExpression	0		3465486	1					
ANR	3466485	Condition	i < len	6033:13:139180:139186	3465486	1	True				
ANR	3466486	RelationalExpression	i < len		3465486	0		<			
ANR	3466487	Identifier	i		3465486	0					
ANR	3466488	Identifier	len		3465486	1					
ANR	3466489	PostIncDecOperationExpression	i ++	6033:22:139189:139191	3465486	2	True				
ANR	3466490	Identifier	i		3465486	0					
ANR	3466491	IncDec	++		3465486	1					
ANR	3466492	CompoundStatement		185:27:4166:4166	3465486	3					
ANR	3466493	ExpressionStatement	"GET_MEMNUM_INC ( mem , bp )"	6034:3:139199:139222	3465486	0	True				
ANR	3466494	CallExpression	"GET_MEMNUM_INC ( mem , bp )"		3465486	0					
ANR	3466495	Callee	GET_MEMNUM_INC		3465486	0					
ANR	3466496	Identifier	GET_MEMNUM_INC		3465486	0					
ANR	3466497	ArgumentList	mem		3465486	1					
ANR	3466498	Argument	mem		3465486	0					
ANR	3466499	Identifier	mem		3465486	0					
ANR	3466500	Argument	bp		3465486	1					
ANR	3466501	Identifier	bp		3465486	0					
ANR	3466502	IfStatement	if ( i > 0 )		3465486	1					
ANR	3466503	Condition	i > 0	6035:7:139231:139235	3465486	0	True				
ANR	3466504	RelationalExpression	i > 0		3465486	0		>			
ANR	3466505	Identifier	i		3465486	0					
ANR	3466506	PrimaryExpression	0		3465486	1					
ANR	3466507	ExpressionStatement	"fputs ( "", "" , f )"	6035:14:139238:139252	3465486	1	True				
ANR	3466508	CallExpression	"fputs ( "", "" , f )"		3465486	0					
ANR	3466509	Callee	fputs		3465486	0					
ANR	3466510	Identifier	fputs		3465486	0					
ANR	3466511	ArgumentList	""", """		3465486	1					
ANR	3466512	Argument	""", """		3465486	0					
ANR	3466513	PrimaryExpression	""", """		3465486	0					
ANR	3466514	Argument	f		3465486	1					
ANR	3466515	Identifier	f		3465486	0					
ANR	3466516	ExpressionStatement	"fprintf ( f , ""%d"" , mem )"	6036:3:139257:139278	3465486	2	True				
ANR	3466517	CallExpression	"fprintf ( f , ""%d"" , mem )"		3465486	0					
ANR	3466518	Callee	fprintf		3465486	0					
ANR	3466519	Identifier	fprintf		3465486	0					
ANR	3466520	ArgumentList	f		3465486	1					
ANR	3466521	Argument	f		3465486	0					
ANR	3466522	Identifier	f		3465486	0					
ANR	3466523	Argument	"""%d"""		3465486	1					
ANR	3466524	PrimaryExpression	"""%d"""		3465486	0					
ANR	3466525	Argument	mem		3465486	2					
ANR	3466526	Identifier	mem		3465486	0					
ANR	3466527	BreakStatement	break ;	6039:6:139297:139302	3465486	107	True				
ANR	3466528	Label	case OP_REPEAT :	6041:4:139309:139323	3465486	108	True				
ANR	3466529	Identifier	OP_REPEAT		3465486	0					
ANR	3466530	Label	case OP_REPEAT_NG :	6042:4:139329:139346	3465486	109	True				
ANR	3466531	Identifier	OP_REPEAT_NG		3465486	0					
ANR	3466532	CompoundStatement		195:6:4326:4326	3465486	110					
ANR	3466533	ExpressionStatement	mem = * ( ( MemNumType * ) bp )	6044:1:139357:139382	3465486	0	True				
ANR	3466534	AssignmentExpression	mem = * ( ( MemNumType * ) bp )		3465486	0		=			
ANR	3466535	Identifier	mem		3465486	0					
ANR	3466536	UnaryOperationExpression	* ( ( MemNumType * ) bp )		3465486	1					
ANR	3466537	UnaryOperator	*		3465486	0					
ANR	3466538	CastExpression	( MemNumType * ) bp		3465486	1					
ANR	3466539	CastTarget	MemNumType *		3465486	0					
ANR	3466540	Identifier	bp		3465486	1					
ANR	3466541	ExpressionStatement	bp += SIZE_MEMNUM	6045:1:139385:139402	3465486	1	True				
ANR	3466542	AssignmentExpression	bp += SIZE_MEMNUM		3465486	0		+=			
ANR	3466543	Identifier	bp		3465486	0					
ANR	3466544	Identifier	SIZE_MEMNUM		3465486	1					
ANR	3466545	ExpressionStatement	addr = * ( ( RelAddrType * ) bp )	6046:1:139405:139432	3465486	2	True				
ANR	3466546	AssignmentExpression	addr = * ( ( RelAddrType * ) bp )		3465486	0		=			
ANR	3466547	Identifier	addr		3465486	0					
ANR	3466548	UnaryOperationExpression	* ( ( RelAddrType * ) bp )		3465486	1					
ANR	3466549	UnaryOperator	*		3465486	0					
ANR	3466550	CastExpression	( RelAddrType * ) bp		3465486	1					
ANR	3466551	CastTarget	RelAddrType *		3465486	0					
ANR	3466552	Identifier	bp		3465486	1					
ANR	3466553	ExpressionStatement	bp += SIZE_RELADDR	6047:1:139435:139453	3465486	3	True				
ANR	3466554	AssignmentExpression	bp += SIZE_RELADDR		3465486	0		+=			
ANR	3466555	Identifier	bp		3465486	0					
ANR	3466556	Identifier	SIZE_RELADDR		3465486	1					
ANR	3466557	ExpressionStatement	"fprintf ( f , "":%d:%d"" , mem , addr )"	6048:1:139456:139487	3465486	4	True				
ANR	3466558	CallExpression	"fprintf ( f , "":%d:%d"" , mem , addr )"		3465486	0					
ANR	3466559	Callee	fprintf		3465486	0					
ANR	3466560	Identifier	fprintf		3465486	0					
ANR	3466561	ArgumentList	f		3465486	1					
ANR	3466562	Argument	f		3465486	0					
ANR	3466563	Identifier	f		3465486	0					
ANR	3466564	Argument	""":%d:%d"""		3465486	1					
ANR	3466565	PrimaryExpression	""":%d:%d"""		3465486	0					
ANR	3466566	Argument	mem		3465486	2					
ANR	3466567	Identifier	mem		3465486	0					
ANR	3466568	Argument	addr		3465486	3					
ANR	3466569	Identifier	addr		3465486	0					
ANR	3466570	BreakStatement	break ;	6050:6:139503:139508	3465486	111	True				
ANR	3466571	Label	case OP_PUSH_OR_JUMP_EXACT1 :	6052:4:139515:139542	3465486	112	True				
ANR	3466572	Identifier	OP_PUSH_OR_JUMP_EXACT1		3465486	0					
ANR	3466573	Label	case OP_PUSH_IF_PEEK_NEXT :	6053:4:139548:139573	3465486	113	True				
ANR	3466574	Identifier	OP_PUSH_IF_PEEK_NEXT		3465486	0					
ANR	3466575	ExpressionStatement	addr = * ( ( RelAddrType * ) bp )	6054:6:139581:139608	3465486	114	True				
ANR	3466576	AssignmentExpression	addr = * ( ( RelAddrType * ) bp )		3465486	0		=			
ANR	3466577	Identifier	addr		3465486	0					
ANR	3466578	UnaryOperationExpression	* ( ( RelAddrType * ) bp )		3465486	1					
ANR	3466579	UnaryOperator	*		3465486	0					
ANR	3466580	CastExpression	( RelAddrType * ) bp		3465486	1					
ANR	3466581	CastTarget	RelAddrType *		3465486	0					
ANR	3466582	Identifier	bp		3465486	1					
ANR	3466583	ExpressionStatement	bp += SIZE_RELADDR	6055:6:139616:139634	3465486	115	True				
ANR	3466584	AssignmentExpression	bp += SIZE_RELADDR		3465486	0		+=			
ANR	3466585	Identifier	bp		3465486	0					
ANR	3466586	Identifier	SIZE_RELADDR		3465486	1					
ANR	3466587	ExpressionStatement	"fprintf ( f , "":(%d)"" , addr )"	6056:6:139642:139667	3465486	116	True				
ANR	3466588	CallExpression	"fprintf ( f , "":(%d)"" , addr )"		3465486	0					
ANR	3466589	Callee	fprintf		3465486	0					
ANR	3466590	Identifier	fprintf		3465486	0					
ANR	3466591	ArgumentList	f		3465486	1					
ANR	3466592	Argument	f		3465486	0					
ANR	3466593	Identifier	f		3465486	0					
ANR	3466594	Argument	""":(%d)"""		3465486	1					
ANR	3466595	PrimaryExpression	""":(%d)"""		3465486	0					
ANR	3466596	Argument	addr		3465486	2					
ANR	3466597	Identifier	addr		3465486	0					
ANR	3466598	ExpressionStatement	"p_string ( f , 1 , bp )"	6057:6:139675:139693	3465486	117	True				
ANR	3466599	CallExpression	"p_string ( f , 1 , bp )"		3465486	0					
ANR	3466600	Callee	p_string		3465486	0					
ANR	3466601	Identifier	p_string		3465486	0					
ANR	3466602	ArgumentList	f		3465486	1					
ANR	3466603	Argument	f		3465486	0					
ANR	3466604	Identifier	f		3465486	0					
ANR	3466605	Argument	1		3465486	1					
ANR	3466606	PrimaryExpression	1		3465486	0					
ANR	3466607	Argument	bp		3465486	2					
ANR	3466608	Identifier	bp		3465486	0					
ANR	3466609	ExpressionStatement	bp += 1	6058:6:139701:139708	3465486	118	True				
ANR	3466610	AssignmentExpression	bp += 1		3465486	0		+=			
ANR	3466611	Identifier	bp		3465486	0					
ANR	3466612	PrimaryExpression	1		3465486	1					
ANR	3466613	BreakStatement	break ;	6059:6:139716:139721	3465486	119	True				
ANR	3466614	Label	case OP_LOOK_BEHIND :	6061:4:139728:139747	3465486	120	True				
ANR	3466615	Identifier	OP_LOOK_BEHIND		3465486	0					
ANR	3466616	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6062:6:139755:139778	3465486	121	True				
ANR	3466617	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3466618	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466619	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466620	ArgumentList	len		3465486	1					
ANR	3466621	Argument	len		3465486	0					
ANR	3466622	Identifier	len		3465486	0					
ANR	3466623	Argument	bp		3465486	1					
ANR	3466624	Identifier	bp		3465486	0					
ANR	3466625	ExpressionStatement	"fprintf ( f , "":%d"" , len )"	6063:6:139786:139808	3465486	122	True				
ANR	3466626	CallExpression	"fprintf ( f , "":%d"" , len )"		3465486	0					
ANR	3466627	Callee	fprintf		3465486	0					
ANR	3466628	Identifier	fprintf		3465486	0					
ANR	3466629	ArgumentList	f		3465486	1					
ANR	3466630	Argument	f		3465486	0					
ANR	3466631	Identifier	f		3465486	0					
ANR	3466632	Argument	""":%d"""		3465486	1					
ANR	3466633	PrimaryExpression	""":%d"""		3465486	0					
ANR	3466634	Argument	len		3465486	2					
ANR	3466635	Identifier	len		3465486	0					
ANR	3466636	BreakStatement	break ;	6064:6:139816:139821	3465486	123	True				
ANR	3466637	Label	case OP_PUSH_LOOK_BEHIND_NOT :	6066:4:139828:139856	3465486	124	True				
ANR	3466638	Identifier	OP_PUSH_LOOK_BEHIND_NOT		3465486	0					
ANR	3466639	ExpressionStatement	"GET_RELADDR_INC ( addr , bp )"	6067:6:139864:139889	3465486	125	True				
ANR	3466640	CallExpression	"GET_RELADDR_INC ( addr , bp )"		3465486	0					
ANR	3466641	Callee	GET_RELADDR_INC		3465486	0					
ANR	3466642	Identifier	GET_RELADDR_INC		3465486	0					
ANR	3466643	ArgumentList	addr		3465486	1					
ANR	3466644	Argument	addr		3465486	0					
ANR	3466645	Identifier	addr		3465486	0					
ANR	3466646	Argument	bp		3465486	1					
ANR	3466647	Identifier	bp		3465486	0					
ANR	3466648	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6068:6:139897:139920	3465486	126	True				
ANR	3466649	CallExpression	"GET_LENGTH_INC ( len , bp )"		3465486	0					
ANR	3466650	Callee	GET_LENGTH_INC		3465486	0					
ANR	3466651	Identifier	GET_LENGTH_INC		3465486	0					
ANR	3466652	ArgumentList	len		3465486	1					
ANR	3466653	Argument	len		3465486	0					
ANR	3466654	Identifier	len		3465486	0					
ANR	3466655	Argument	bp		3465486	1					
ANR	3466656	Identifier	bp		3465486	0					
ANR	3466657	ExpressionStatement	"fprintf ( f , "":%d:(%d)"" , len , addr )"	6069:6:139928:139961	3465486	127	True				
ANR	3466658	CallExpression	"fprintf ( f , "":%d:(%d)"" , len , addr )"		3465486	0					
ANR	3466659	Callee	fprintf		3465486	0					
ANR	3466660	Identifier	fprintf		3465486	0					
ANR	3466661	ArgumentList	f		3465486	1					
ANR	3466662	Argument	f		3465486	0					
ANR	3466663	Identifier	f		3465486	0					
ANR	3466664	Argument	""":%d:(%d)"""		3465486	1					
ANR	3466665	PrimaryExpression	""":%d:(%d)"""		3465486	0					
ANR	3466666	Argument	len		3465486	2					
ANR	3466667	Identifier	len		3465486	0					
ANR	3466668	Argument	addr		3465486	3					
ANR	3466669	Identifier	addr		3465486	0					
ANR	3466670	BreakStatement	break ;	6070:6:139969:139974	3465486	128	True				
ANR	3466671	Label	case OP_STATE_CHECK_PUSH :	6072:4:139981:140005	3465486	129	True				
ANR	3466672	Identifier	OP_STATE_CHECK_PUSH		3465486	0					
ANR	3466673	Label	case OP_STATE_CHECK_PUSH_OR_JUMP :	6073:4:140011:140043	3465486	130	True				
ANR	3466674	Identifier	OP_STATE_CHECK_PUSH_OR_JUMP		3465486	0					
ANR	3466675	ExpressionStatement	scn = * ( ( StateCheckNumType * ) bp )	6074:6:140051:140083	3465486	131	True				
ANR	3466676	AssignmentExpression	scn = * ( ( StateCheckNumType * ) bp )		3465486	0		=			
ANR	3466677	Identifier	scn		3465486	0					
ANR	3466678	UnaryOperationExpression	* ( ( StateCheckNumType * ) bp )		3465486	1					
ANR	3466679	UnaryOperator	*		3465486	0					
ANR	3466680	CastExpression	( StateCheckNumType * ) bp		3465486	1					
ANR	3466681	CastTarget	StateCheckNumType *		3465486	0					
ANR	3466682	Identifier	bp		3465486	1					
ANR	3466683	ExpressionStatement	bp += SIZE_STATE_CHECK_NUM	6075:6:140091:140117	3465486	132	True				
ANR	3466684	AssignmentExpression	bp += SIZE_STATE_CHECK_NUM		3465486	0		+=			
ANR	3466685	Identifier	bp		3465486	0					
ANR	3466686	Identifier	SIZE_STATE_CHECK_NUM		3465486	1					
ANR	3466687	ExpressionStatement	addr = * ( ( RelAddrType * ) bp )	6076:6:140125:140152	3465486	133	True				
ANR	3466688	AssignmentExpression	addr = * ( ( RelAddrType * ) bp )		3465486	0		=			
ANR	3466689	Identifier	addr		3465486	0					
ANR	3466690	UnaryOperationExpression	* ( ( RelAddrType * ) bp )		3465486	1					
ANR	3466691	UnaryOperator	*		3465486	0					
ANR	3466692	CastExpression	( RelAddrType * ) bp		3465486	1					
ANR	3466693	CastTarget	RelAddrType *		3465486	0					
ANR	3466694	Identifier	bp		3465486	1					
ANR	3466695	ExpressionStatement	bp += SIZE_RELADDR	6077:6:140160:140178	3465486	134	True				
ANR	3466696	AssignmentExpression	bp += SIZE_RELADDR		3465486	0		+=			
ANR	3466697	Identifier	bp		3465486	0					
ANR	3466698	Identifier	SIZE_RELADDR		3465486	1					
ANR	3466699	ExpressionStatement	"fprintf ( f , "":%d:(%d)"" , scn , addr )"	6078:6:140186:140219	3465486	135	True				
ANR	3466700	CallExpression	"fprintf ( f , "":%d:(%d)"" , scn , addr )"		3465486	0					
ANR	3466701	Callee	fprintf		3465486	0					
ANR	3466702	Identifier	fprintf		3465486	0					
ANR	3466703	ArgumentList	f		3465486	1					
ANR	3466704	Argument	f		3465486	0					
ANR	3466705	Identifier	f		3465486	0					
ANR	3466706	Argument	""":%d:(%d)"""		3465486	1					
ANR	3466707	PrimaryExpression	""":%d:(%d)"""		3465486	0					
ANR	3466708	Argument	scn		3465486	2					
ANR	3466709	Identifier	scn		3465486	0					
ANR	3466710	Argument	addr		3465486	3					
ANR	3466711	Identifier	addr		3465486	0					
ANR	3466712	BreakStatement	break ;	6079:6:140227:140232	3465486	136	True				
ANR	3466713	Label	default :	6081:4:140239:140246	3465486	137	True				
ANR	3466714	Identifier	default		3465486	0					
ANR	3466715	ExpressionStatement	"fprintf ( stderr , ""onig_print_compiled_byte_code: undefined code %d\\n"" , * -- bp )"	6082:6:140254:140337	3465486	138	True				
ANR	3466716	CallExpression	"fprintf ( stderr , ""onig_print_compiled_byte_code: undefined code %d\\n"" , * -- bp )"		3465486	0					
ANR	3466717	Callee	fprintf		3465486	0					
ANR	3466718	Identifier	fprintf		3465486	0					
ANR	3466719	ArgumentList	stderr		3465486	1					
ANR	3466720	Argument	stderr		3465486	0					
ANR	3466721	Identifier	stderr		3465486	0					
ANR	3466722	Argument	"""onig_print_compiled_byte_code: undefined code %d\\n"""		3465486	1					
ANR	3466723	PrimaryExpression	"""onig_print_compiled_byte_code: undefined code %d\\n"""		3465486	0					
ANR	3466724	Argument	* -- bp		3465486	2					
ANR	3466725	UnaryOperationExpression	* -- bp		3465486	0					
ANR	3466726	UnaryOperator	*		3465486	0					
ANR	3466727	UnaryExpression	-- bp		3465486	1					
ANR	3466728	IncDec	--		3465486	0					
ANR	3466729	Identifier	bp		3465486	1					
ANR	3466730	ExpressionStatement	"fputs ( ""]"" , f )"	6086:2:140351:140364	3465486	10	True				
ANR	3466731	CallExpression	"fputs ( ""]"" , f )"		3465486	0					
ANR	3466732	Callee	fputs		3465486	0					
ANR	3466733	Identifier	fputs		3465486	0					
ANR	3466734	ArgumentList	"""]"""		3465486	1					
ANR	3466735	Argument	"""]"""		3465486	0					
ANR	3466736	PrimaryExpression	"""]"""		3465486	0					
ANR	3466737	Argument	f		3465486	1					
ANR	3466738	Identifier	f		3465486	0					
ANR	3466739	IfStatement	if ( nextp )		3465486	11					
ANR	3466740	Condition	nextp	6087:6:140372:140376	3465486	0	True				
ANR	3466741	Identifier	nextp		3465486	0					
ANR	3466742	ExpressionStatement	* nextp = bp	6087:13:140379:140390	3465486	1	True				
ANR	3466743	AssignmentExpression	* nextp = bp		3465486	0		=			
ANR	3466744	UnaryOperationExpression	* nextp		3465486	0					
ANR	3466745	UnaryOperator	*		3465486	0					
ANR	3466746	Identifier	nextp		3465486	1					
ANR	3466747	Identifier	bp		3465486	1					
ANR	3466748	ReturnType	extern void		3465486	1					
ANR	3466749	Identifier	onig_print_compiled_byte_code		3465486	2					
ANR	3466750	ParameterList	"FILE * f , UChar * bp , UChar * * nextp , OnigEncoding enc"		3465486	3					
ANR	3466751	Parameter	FILE * f	5847:30:134944:134950	3465486	0	True				
ANR	3466752	ParameterType	FILE *		3465486	0					
ANR	3466753	Identifier	f		3465486	1					
ANR	3466754	Parameter	UChar * bp	5847:39:134953:134961	3465486	1	True				
ANR	3466755	ParameterType	UChar *		3465486	0					
ANR	3466756	Identifier	bp		3465486	1					
ANR	3466757	Parameter	UChar * * nextp	5847:50:134964:134976	3465486	2	True				
ANR	3466758	ParameterType	UChar * *		3465486	0					
ANR	3466759	Identifier	nextp		3465486	1					
ANR	3466760	Parameter	OnigEncoding enc	5848:30:135009:135024	3465486	3	True				
ANR	3466761	ParameterType	OnigEncoding		3465486	0					
ANR	3466762	Identifier	enc		3465486	1					
ANR	3466763	CFGEntryNode	ENTRY		3465486		True				
ANR	3466764	CFGExitNode	EXIT		3465486		True				
ANR	3466765	Symbol	op2arg_type		3465486						
ANR	3466766	Symbol	SIZE_RELADDR		3465486						
ANR	3466767	Symbol	code		3465486						
ANR	3466768	Symbol	* ( ( RelAddrType * ) bp )		3465486						
ANR	3466769	Symbol	* bp ++		3465486						
ANR	3466770	Symbol	* cc		3465486						
ANR	3466771	Symbol	bp		3465486						
ANR	3466772	Symbol	SIZE_STATE_CHECK_NUM		3465486						
ANR	3466773	Symbol	arg_type		3465486						
ANR	3466774	Symbol	SIZE_MEMNUM		3465486						
ANR	3466775	Symbol	len		3465486						
ANR	3466776	Symbol	mem		3465486						
ANR	3466777	Symbol	* bp		3465486						
ANR	3466778	Symbol	SIZE_OPTION		3465486						
ANR	3466779	Symbol	op2name		3465486						
ANR	3466780	Symbol	enc		3465486						
ANR	3466781	Symbol	addr		3465486						
ANR	3466782	Symbol	scn		3465486						
ANR	3466783	Symbol	nextp		3465486						
ANR	3466784	Symbol	SIZE_BITSET		3465486						
ANR	3466785	Symbol	cc		3465486						
ANR	3466786	Symbol	level		3465486						
ANR	3466787	Symbol	f		3465486						
ANR	3466788	Symbol	ARG_SPECIAL		3465486						
ANR	3466789	Symbol	i		3465486						
ANR	3466790	Symbol	stderr		3465486						
ANR	3466791	Symbol	enclen		3465486						
ANR	3466792	Symbol	n		3465486						
ANR	3466793	Symbol	* ( ( OnigOptionType * ) bp )		3465486						
ANR	3466794	Symbol	* ( ( StateCheckNumType * ) bp )		3465486						
ANR	3466795	Symbol	cc -> bs		3465486						
ANR	3466796	Symbol	q		3465486						
ANR	3466797	Symbol	bitset_on_num		3465486						
ANR	3466798	Symbol	* -- bp		3465486						
ANR	3466799	Symbol	* ( ( MemNumType * ) bp )		3465486						
ANR	3466800	Symbol	mb_len		3465486						
ANR	3466801	Symbol	* nextp		3465486						
ANR	3466802	Symbol	option		3465486						
ANR	3466803	Function	print_compiled_byte_code_list	6090:0:140395:140810							
ANR	3466804	FunctionDef	"print_compiled_byte_code_list (FILE * f , regex_t * reg)"		3466803	0					
ANR	3466805	CompoundStatement		6092:0:140460:140810	3466803	0					
ANR	3466806	IdentifierDeclStatement	int ncode ;	6093:2:140464:140473	3466803	0	True				
ANR	3466807	IdentifierDecl	ncode		3466803	0					
ANR	3466808	IdentifierDeclType	int		3466803	0					
ANR	3466809	Identifier	ncode		3466803	1					
ANR	3466810	IdentifierDeclStatement	UChar * bp = reg -> p ;	6094:2:140477:140495	3466803	1	True				
ANR	3466811	IdentifierDecl	* bp = reg -> p		3466803	0					
ANR	3466812	IdentifierDeclType	UChar *		3466803	0					
ANR	3466813	Identifier	bp		3466803	1					
ANR	3466814	AssignmentExpression	* bp = reg -> p		3466803	2		=			
ANR	3466815	Identifier	bp		3466803	0					
ANR	3466816	PtrMemberAccess	reg -> p		3466803	1					
ANR	3466817	Identifier	reg		3466803	0					
ANR	3466818	Identifier	p		3466803	1					
ANR	3466819	IdentifierDeclStatement	UChar * end = reg -> p + reg -> used ;	6095:2:140499:140530	3466803	2	True				
ANR	3466820	IdentifierDecl	* end = reg -> p + reg -> used		3466803	0					
ANR	3466821	IdentifierDeclType	UChar *		3466803	0					
ANR	3466822	Identifier	end		3466803	1					
ANR	3466823	AssignmentExpression	* end = reg -> p + reg -> used		3466803	2		=			
ANR	3466824	Identifier	end		3466803	0					
ANR	3466825	AdditiveExpression	reg -> p + reg -> used		3466803	1		+			
ANR	3466826	PtrMemberAccess	reg -> p		3466803	0					
ANR	3466827	Identifier	reg		3466803	0					
ANR	3466828	Identifier	p		3466803	1					
ANR	3466829	PtrMemberAccess	reg -> used		3466803	1					
ANR	3466830	Identifier	reg		3466803	0					
ANR	3466831	Identifier	used		3466803	1					
ANR	3466832	ExpressionStatement	"fprintf ( f , ""code length: %d\\n"" , reg -> used )"	6097:2:140535:140577	3466803	3	True				
ANR	3466833	CallExpression	"fprintf ( f , ""code length: %d\\n"" , reg -> used )"		3466803	0					
ANR	3466834	Callee	fprintf		3466803	0					
ANR	3466835	Identifier	fprintf		3466803	0					
ANR	3466836	ArgumentList	f		3466803	1					
ANR	3466837	Argument	f		3466803	0					
ANR	3466838	Identifier	f		3466803	0					
ANR	3466839	Argument	"""code length: %d\\n"""		3466803	1					
ANR	3466840	PrimaryExpression	"""code length: %d\\n"""		3466803	0					
ANR	3466841	Argument	reg -> used		3466803	2					
ANR	3466842	PtrMemberAccess	reg -> used		3466803	0					
ANR	3466843	Identifier	reg		3466803	0					
ANR	3466844	Identifier	used		3466803	1					
ANR	3466845	ExpressionStatement	ncode = 0	6099:2:140582:140591	3466803	4	True				
ANR	3466846	AssignmentExpression	ncode = 0		3466803	0		=			
ANR	3466847	Identifier	ncode		3466803	0					
ANR	3466848	PrimaryExpression	0		3466803	1					
ANR	3466849	WhileStatement	while ( bp < end )		3466803	5					
ANR	3466850	Condition	bp < end	6100:9:140602:140609	3466803	0	True				
ANR	3466851	RelationalExpression	bp < end		3466803	0		<			
ANR	3466852	Identifier	bp		3466803	0					
ANR	3466853	Identifier	end		3466803	1					
ANR	3466854	CompoundStatement		9:19:151:151	3466803	1					
ANR	3466855	ExpressionStatement	ncode ++	6101:4:140618:140625	3466803	0	True				
ANR	3466856	PostIncDecOperationExpression	ncode ++		3466803	0					
ANR	3466857	Identifier	ncode		3466803	0					
ANR	3466858	IncDec	++		3466803	1					
ANR	3466859	IfStatement	if ( bp > reg -> p )		3466803	1					
ANR	3466860	Condition	bp > reg -> p	6102:8:140635:140645	3466803	0	True				
ANR	3466861	RelationalExpression	bp > reg -> p		3466803	0		>			
ANR	3466862	Identifier	bp		3466803	0					
ANR	3466863	PtrMemberAccess	reg -> p		3466803	1					
ANR	3466864	Identifier	reg		3466803	0					
ANR	3466865	Identifier	p		3466803	1					
ANR	3466866	CompoundStatement		11:21:187:187	3466803	1					
ANR	3466867	IfStatement	if ( ncode % 5 == 0 )		3466803	0					
ANR	3466868	Condition	ncode % 5 == 0	6103:10:140660:140673	3466803	0	True				
ANR	3466869	EqualityExpression	ncode % 5 == 0		3466803	0		==			
ANR	3466870	MultiplicativeExpression	ncode % 5		3466803	0		%			
ANR	3466871	Identifier	ncode		3466803	0					
ANR	3466872	PrimaryExpression	5		3466803	1					
ANR	3466873	PrimaryExpression	0		3466803	1					
ANR	3466874	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6104:1:140677:140693	3466803	1	True				
ANR	3466875	CallExpression	"fprintf ( f , ""\\n"" )"		3466803	0					
ANR	3466876	Callee	fprintf		3466803	0					
ANR	3466877	Identifier	fprintf		3466803	0					
ANR	3466878	ArgumentList	f		3466803	1					
ANR	3466879	Argument	f		3466803	0					
ANR	3466880	Identifier	f		3466803	0					
ANR	3466881	Argument	"""\\n"""		3466803	1					
ANR	3466882	PrimaryExpression	"""\\n"""		3466803	0					
ANR	3466883	ElseStatement	else		3466803	0					
ANR	3466884	ExpressionStatement	"fputs ( "" "" , f )"	6106:1:140707:140720	3466803	0	True				
ANR	3466885	CallExpression	"fputs ( "" "" , f )"		3466803	0					
ANR	3466886	Callee	fputs		3466803	0					
ANR	3466887	Identifier	fputs		3466803	0					
ANR	3466888	ArgumentList	""" """		3466803	1					
ANR	3466889	Argument	""" """		3466803	0					
ANR	3466890	PrimaryExpression	""" """		3466803	0					
ANR	3466891	Argument	f		3466803	1					
ANR	3466892	Identifier	f		3466803	0					
ANR	3466893	ExpressionStatement	"onig_print_compiled_byte_code ( f , bp , & bp , reg -> enc )"	6108:4:140732:140783	3466803	2	True				
ANR	3466894	CallExpression	"onig_print_compiled_byte_code ( f , bp , & bp , reg -> enc )"		3466803	0					
ANR	3466895	Callee	onig_print_compiled_byte_code		3466803	0					
ANR	3466896	Identifier	onig_print_compiled_byte_code		3466803	0					
ANR	3466897	ArgumentList	f		3466803	1					
ANR	3466898	Argument	f		3466803	0					
ANR	3466899	Identifier	f		3466803	0					
ANR	3466900	Argument	bp		3466803	1					
ANR	3466901	Identifier	bp		3466803	0					
ANR	3466902	Argument	& bp		3466803	2					
ANR	3466903	UnaryOperationExpression	& bp		3466803	0					
ANR	3466904	UnaryOperator	&		3466803	0					
ANR	3466905	Identifier	bp		3466803	1					
ANR	3466906	Argument	reg -> enc		3466803	3					
ANR	3466907	PtrMemberAccess	reg -> enc		3466803	0					
ANR	3466908	Identifier	reg		3466803	0					
ANR	3466909	Identifier	enc		3466803	1					
ANR	3466910	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6111:2:140792:140808	3466803	6	True				
ANR	3466911	CallExpression	"fprintf ( f , ""\\n"" )"		3466803	0					
ANR	3466912	Callee	fprintf		3466803	0					
ANR	3466913	Identifier	fprintf		3466803	0					
ANR	3466914	ArgumentList	f		3466803	1					
ANR	3466915	Argument	f		3466803	0					
ANR	3466916	Identifier	f		3466803	0					
ANR	3466917	Argument	"""\\n"""		3466803	1					
ANR	3466918	PrimaryExpression	"""\\n"""		3466803	0					
ANR	3466919	ReturnType	static void		3466803	1					
ANR	3466920	Identifier	print_compiled_byte_code_list		3466803	2					
ANR	3466921	ParameterList	"FILE * f , regex_t * reg"		3466803	3					
ANR	3466922	Parameter	FILE * f	6091:30:140437:140443	3466803	0	True				
ANR	3466923	ParameterType	FILE *		3466803	0					
ANR	3466924	Identifier	f		3466803	1					
ANR	3466925	Parameter	regex_t * reg	6091:39:140446:140457	3466803	1	True				
ANR	3466926	ParameterType	regex_t *		3466803	0					
ANR	3466927	Identifier	reg		3466803	1					
ANR	3466928	CFGEntryNode	ENTRY		3466803		True				
ANR	3466929	CFGExitNode	EXIT		3466803		True				
ANR	3466930	Symbol	reg		3466803						
ANR	3466931	Symbol	f		3466803						
ANR	3466932	Symbol	ncode		3466803						
ANR	3466933	Symbol	& bp		3466803						
ANR	3466934	Symbol	end		3466803						
ANR	3466935	Symbol	reg -> p		3466803						
ANR	3466936	Symbol	* reg		3466803						
ANR	3466937	Symbol	bp		3466803						
ANR	3466938	Symbol	reg -> used		3466803						
ANR	3466939	Symbol	reg -> enc		3466803						
ANR	3466940	Function	print_indent_tree	6114:0:140813:145106							
ANR	3466941	FunctionDef	"print_indent_tree (FILE * f , Node * node , int indent)"		3466940	0					
ANR	3466942	CompoundStatement		6116:0:140876:145106	3466940	0					
ANR	3466943	IdentifierDeclStatement	"int i , type ;"	6117:2:140880:140891	3466940	0	True				
ANR	3466944	IdentifierDecl	i		3466940	0					
ANR	3466945	IdentifierDeclType	int		3466940	0					
ANR	3466946	Identifier	i		3466940	1					
ANR	3466947	IdentifierDecl	type		3466940	1					
ANR	3466948	IdentifierDeclType	int		3466940	0					
ANR	3466949	Identifier	type		3466940	1					
ANR	3466950	IdentifierDeclStatement	int add = 3 ;	6118:2:140895:140906	3466940	1	True				
ANR	3466951	IdentifierDecl	add = 3		3466940	0					
ANR	3466952	IdentifierDeclType	int		3466940	0					
ANR	3466953	Identifier	add		3466940	1					
ANR	3466954	AssignmentExpression	add = 3		3466940	2		=			
ANR	3466955	Identifier	add		3466940	0					
ANR	3466956	PrimaryExpression	3		3466940	1					
ANR	3466957	IdentifierDeclStatement	UChar * p ;	6119:2:140910:140918	3466940	2	True				
ANR	3466958	IdentifierDecl	* p		3466940	0					
ANR	3466959	IdentifierDeclType	UChar *		3466940	0					
ANR	3466960	Identifier	p		3466940	1					
ANR	3466961	ExpressionStatement	"Indent ( f , indent )"	6121:2:140923:140940	3466940	3	True				
ANR	3466962	CallExpression	"Indent ( f , indent )"		3466940	0					
ANR	3466963	Callee	Indent		3466940	0					
ANR	3466964	Identifier	Indent		3466940	0					
ANR	3466965	ArgumentList	f		3466940	1					
ANR	3466966	Argument	f		3466940	0					
ANR	3466967	Identifier	f		3466940	0					
ANR	3466968	Argument	indent		3466940	1					
ANR	3466969	Identifier	indent		3466940	0					
ANR	3466970	IfStatement	if ( IS_NULL ( node ) )		3466940	4					
ANR	3466971	Condition	IS_NULL ( node )	6122:6:140948:140960	3466940	0	True				
ANR	3466972	CallExpression	IS_NULL ( node )		3466940	0					
ANR	3466973	Callee	IS_NULL		3466940	0					
ANR	3466974	Identifier	IS_NULL		3466940	0					
ANR	3466975	ArgumentList	node		3466940	1					
ANR	3466976	Argument	node		3466940	0					
ANR	3466977	Identifier	node		3466940	0					
ANR	3466978	CompoundStatement		7:21:86:86	3466940	1					
ANR	3466979	ExpressionStatement	"fprintf ( f , ""ERROR: null node!!!\\n"" )"	6123:4:140969:141004	3466940	0	True				
ANR	3466980	CallExpression	"fprintf ( f , ""ERROR: null node!!!\\n"" )"		3466940	0					
ANR	3466981	Callee	fprintf		3466940	0					
ANR	3466982	Identifier	fprintf		3466940	0					
ANR	3466983	ArgumentList	f		3466940	1					
ANR	3466984	Argument	f		3466940	0					
ANR	3466985	Identifier	f		3466940	0					
ANR	3466986	Argument	"""ERROR: null node!!!\\n"""		3466940	1					
ANR	3466987	PrimaryExpression	"""ERROR: null node!!!\\n"""		3466940	0					
ANR	3466988	ExpressionStatement	exit ( 0 )	6124:4:141010:141018	3466940	1	True				
ANR	3466989	CallExpression	exit ( 0 )		3466940	0					
ANR	3466990	Callee	exit		3466940	0					
ANR	3466991	Identifier	exit		3466940	0					
ANR	3466992	ArgumentList	0		3466940	1					
ANR	3466993	Argument	0		3466940	0					
ANR	3466994	PrimaryExpression	0		3466940	0					
ANR	3466995	ExpressionStatement	type = NTYPE ( node )	6127:2:141027:141045	3466940	5	True				
ANR	3466996	AssignmentExpression	type = NTYPE ( node )		3466940	0		=			
ANR	3466997	Identifier	type		3466940	0					
ANR	3466998	CallExpression	NTYPE ( node )		3466940	1					
ANR	3466999	Callee	NTYPE		3466940	0					
ANR	3467000	Identifier	NTYPE		3466940	0					
ANR	3467001	ArgumentList	node		3466940	1					
ANR	3467002	Argument	node		3466940	0					
ANR	3467003	Identifier	node		3466940	0					
ANR	3467004	SwitchStatement	switch ( type )		3466940	6					
ANR	3467005	Condition	type	6128:10:141057:141060	3466940	0	True				
ANR	3467006	Identifier	type		3466940	0					
ANR	3467007	CompoundStatement		13:16:186:186	3466940	1					
ANR	3467008	Label	case NT_LIST :	6129:2:141067:141079	3466940	0	True				
ANR	3467009	Identifier	NT_LIST		3466940	0					
ANR	3467010	Label	case NT_ALT :	6130:2:141083:141094	3466940	1	True				
ANR	3467011	Identifier	NT_ALT		3466940	0					
ANR	3467012	IfStatement	if ( NTYPE ( node ) == NT_LIST )		3466940	2					
ANR	3467013	Condition	NTYPE ( node ) == NT_LIST	6131:8:141104:141125	3466940	0	True				
ANR	3467014	EqualityExpression	NTYPE ( node ) == NT_LIST		3466940	0		==			
ANR	3467015	CallExpression	NTYPE ( node )		3466940	0					
ANR	3467016	Callee	NTYPE		3466940	0					
ANR	3467017	Identifier	NTYPE		3466940	0					
ANR	3467018	ArgumentList	node		3466940	1					
ANR	3467019	Argument	node		3466940	0					
ANR	3467020	Identifier	node		3466940	0					
ANR	3467021	Identifier	NT_LIST		3466940	1					
ANR	3467022	ExpressionStatement	"fprintf ( f , ""<list:%x>\\n"" , ( int ) node )"	6132:6:141134:141171	3466940	1	True				
ANR	3467023	CallExpression	"fprintf ( f , ""<list:%x>\\n"" , ( int ) node )"		3466940	0					
ANR	3467024	Callee	fprintf		3466940	0					
ANR	3467025	Identifier	fprintf		3466940	0					
ANR	3467026	ArgumentList	f		3466940	1					
ANR	3467027	Argument	f		3466940	0					
ANR	3467028	Identifier	f		3466940	0					
ANR	3467029	Argument	"""<list:%x>\\n"""		3466940	1					
ANR	3467030	PrimaryExpression	"""<list:%x>\\n"""		3466940	0					
ANR	3467031	Argument	( int ) node		3466940	2					
ANR	3467032	CastExpression	( int ) node		3466940	0					
ANR	3467033	CastTarget	int		3466940	0					
ANR	3467034	Identifier	node		3466940	1					
ANR	3467035	ElseStatement	else		3466940	0					
ANR	3467036	ExpressionStatement	"fprintf ( f , ""<alt:%x>\\n"" , ( int ) node )"	6134:6:141188:141224	3466940	0	True				
ANR	3467037	CallExpression	"fprintf ( f , ""<alt:%x>\\n"" , ( int ) node )"		3466940	0					
ANR	3467038	Callee	fprintf		3466940	0					
ANR	3467039	Identifier	fprintf		3466940	0					
ANR	3467040	ArgumentList	f		3466940	1					
ANR	3467041	Argument	f		3466940	0					
ANR	3467042	Identifier	f		3466940	0					
ANR	3467043	Argument	"""<alt:%x>\\n"""		3466940	1					
ANR	3467044	PrimaryExpression	"""<alt:%x>\\n"""		3466940	0					
ANR	3467045	Argument	( int ) node		3466940	2					
ANR	3467046	CastExpression	( int ) node		3466940	0					
ANR	3467047	CastTarget	int		3466940	0					
ANR	3467048	Identifier	node		3466940	1					
ANR	3467049	ExpressionStatement	"print_indent_tree ( f , NCAR ( node ) , indent + add )"	6136:4:141231:141277	3466940	3	True				
ANR	3467050	CallExpression	"print_indent_tree ( f , NCAR ( node ) , indent + add )"		3466940	0					
ANR	3467051	Callee	print_indent_tree		3466940	0					
ANR	3467052	Identifier	print_indent_tree		3466940	0					
ANR	3467053	ArgumentList	f		3466940	1					
ANR	3467054	Argument	f		3466940	0					
ANR	3467055	Identifier	f		3466940	0					
ANR	3467056	Argument	NCAR ( node )		3466940	1					
ANR	3467057	CallExpression	NCAR ( node )		3466940	0					
ANR	3467058	Callee	NCAR		3466940	0					
ANR	3467059	Identifier	NCAR		3466940	0					
ANR	3467060	ArgumentList	node		3466940	1					
ANR	3467061	Argument	node		3466940	0					
ANR	3467062	Identifier	node		3466940	0					
ANR	3467063	Argument	indent + add		3466940	2					
ANR	3467064	AdditiveExpression	indent + add		3466940	0		+			
ANR	3467065	Identifier	indent		3466940	0					
ANR	3467066	Identifier	add		3466940	1					
ANR	3467067	WhileStatement	while ( IS_NOT_NULL ( node = NCDR ( node ) ) )		3466940	4					
ANR	3467068	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	6137:11:141290:141319	3466940	0	True				
ANR	3467069	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3466940	0					
ANR	3467070	Callee	IS_NOT_NULL		3466940	0					
ANR	3467071	Identifier	IS_NOT_NULL		3466940	0					
ANR	3467072	ArgumentList	node = NCDR ( node )		3466940	1					
ANR	3467073	Argument	node = NCDR ( node )		3466940	0					
ANR	3467074	AssignmentExpression	node = NCDR ( node )		3466940	0		=			
ANR	3467075	Identifier	node		3466940	0					
ANR	3467076	CallExpression	NCDR ( node )		3466940	1					
ANR	3467077	Callee	NCDR		3466940	0					
ANR	3467078	Identifier	NCDR		3466940	0					
ANR	3467079	ArgumentList	node		3466940	1					
ANR	3467080	Argument	node		3466940	0					
ANR	3467081	Identifier	node		3466940	0					
ANR	3467082	CompoundStatement		22:43:445:445	3466940	1					
ANR	3467083	IfStatement	if ( NTYPE ( node ) != type )		3466940	0					
ANR	3467084	Condition	NTYPE ( node ) != type	6138:10:141334:141352	3466940	0	True				
ANR	3467085	EqualityExpression	NTYPE ( node ) != type		3466940	0		!=			
ANR	3467086	CallExpression	NTYPE ( node )		3466940	0					
ANR	3467087	Callee	NTYPE		3466940	0					
ANR	3467088	Identifier	NTYPE		3466940	0					
ANR	3467089	ArgumentList	node		3466940	1					
ANR	3467090	Argument	node		3466940	0					
ANR	3467091	Identifier	node		3466940	0					
ANR	3467092	Identifier	type		3466940	1					
ANR	3467093	CompoundStatement		23:31:478:478	3466940	1					
ANR	3467094	ExpressionStatement	"fprintf ( f , ""ERROR: list/alt right is not a cons. %d\\n"" , NTYPE ( node ) )"	6139:1:141358:141426	3466940	0	True				
ANR	3467095	CallExpression	"fprintf ( f , ""ERROR: list/alt right is not a cons. %d\\n"" , NTYPE ( node ) )"		3466940	0					
ANR	3467096	Callee	fprintf		3466940	0					
ANR	3467097	Identifier	fprintf		3466940	0					
ANR	3467098	ArgumentList	f		3466940	1					
ANR	3467099	Argument	f		3466940	0					
ANR	3467100	Identifier	f		3466940	0					
ANR	3467101	Argument	"""ERROR: list/alt right is not a cons. %d\\n"""		3466940	1					
ANR	3467102	PrimaryExpression	"""ERROR: list/alt right is not a cons. %d\\n"""		3466940	0					
ANR	3467103	Argument	NTYPE ( node )		3466940	2					
ANR	3467104	CallExpression	NTYPE ( node )		3466940	0					
ANR	3467105	Callee	NTYPE		3466940	0					
ANR	3467106	Identifier	NTYPE		3466940	0					
ANR	3467107	ArgumentList	node		3466940	1					
ANR	3467108	Argument	node		3466940	0					
ANR	3467109	Identifier	node		3466940	0					
ANR	3467110	ExpressionStatement	exit ( 0 )	6140:1:141429:141436	3466940	1	True				
ANR	3467111	CallExpression	exit ( 0 )		3466940	0					
ANR	3467112	Callee	exit		3466940	0					
ANR	3467113	Identifier	exit		3466940	0					
ANR	3467114	ArgumentList	0		3466940	1					
ANR	3467115	Argument	0		3466940	0					
ANR	3467116	PrimaryExpression	0		3466940	0					
ANR	3467117	ExpressionStatement	"print_indent_tree ( f , NCAR ( node ) , indent + add )"	6142:6:141452:141498	3466940	1	True				
ANR	3467118	CallExpression	"print_indent_tree ( f , NCAR ( node ) , indent + add )"		3466940	0					
ANR	3467119	Callee	print_indent_tree		3466940	0					
ANR	3467120	Identifier	print_indent_tree		3466940	0					
ANR	3467121	ArgumentList	f		3466940	1					
ANR	3467122	Argument	f		3466940	0					
ANR	3467123	Identifier	f		3466940	0					
ANR	3467124	Argument	NCAR ( node )		3466940	1					
ANR	3467125	CallExpression	NCAR ( node )		3466940	0					
ANR	3467126	Callee	NCAR		3466940	0					
ANR	3467127	Identifier	NCAR		3466940	0					
ANR	3467128	ArgumentList	node		3466940	1					
ANR	3467129	Argument	node		3466940	0					
ANR	3467130	Identifier	node		3466940	0					
ANR	3467131	Argument	indent + add		3466940	2					
ANR	3467132	AdditiveExpression	indent + add		3466940	0		+			
ANR	3467133	Identifier	indent		3466940	0					
ANR	3467134	Identifier	add		3466940	1					
ANR	3467135	BreakStatement	break ;	6144:4:141510:141515	3466940	5	True				
ANR	3467136	Label	case NT_STR :	6146:2:141520:141531	3466940	6	True				
ANR	3467137	Identifier	NT_STR		3466940	0					
ANR	3467138	ExpressionStatement	"fprintf ( f , ""<string%s:%x>"" , ( NSTRING_IS_RAW ( node ) ? ""-raw"" : """" ) , ( int ) node )"	6147:4:141537:141619	3466940	7	True				
ANR	3467139	CallExpression	"fprintf ( f , ""<string%s:%x>"" , ( NSTRING_IS_RAW ( node ) ? ""-raw"" : """" ) , ( int ) node )"		3466940	0					
ANR	3467140	Callee	fprintf		3466940	0					
ANR	3467141	Identifier	fprintf		3466940	0					
ANR	3467142	ArgumentList	f		3466940	1					
ANR	3467143	Argument	f		3466940	0					
ANR	3467144	Identifier	f		3466940	0					
ANR	3467145	Argument	"""<string%s:%x>"""		3466940	1					
ANR	3467146	PrimaryExpression	"""<string%s:%x>"""		3466940	0					
ANR	3467147	Argument	"NSTRING_IS_RAW ( node ) ? ""-raw"" : """""		3466940	2					
ANR	3467148	ConditionalExpression	"NSTRING_IS_RAW ( node ) ? ""-raw"" : """""		3466940	0					
ANR	3467149	Condition	NSTRING_IS_RAW ( node )		3466940	0					
ANR	3467150	CallExpression	NSTRING_IS_RAW ( node )		3466940	0					
ANR	3467151	Callee	NSTRING_IS_RAW		3466940	0					
ANR	3467152	Identifier	NSTRING_IS_RAW		3466940	0					
ANR	3467153	ArgumentList	node		3466940	1					
ANR	3467154	Argument	node		3466940	0					
ANR	3467155	Identifier	node		3466940	0					
ANR	3467156	PrimaryExpression	"""-raw"""		3466940	1					
ANR	3467157	PrimaryExpression	""""""		3466940	2					
ANR	3467158	Argument	( int ) node		3466940	3					
ANR	3467159	CastExpression	( int ) node		3466940	0					
ANR	3467160	CastTarget	int		3466940	0					
ANR	3467161	Identifier	node		3466940	1					
ANR	3467162	ForStatement	for ( p = NSTR ( node ) -> s ; p < NSTR ( node ) -> end ; p ++ )		3466940	8					
ANR	3467163	ForInit	p = NSTR ( node ) -> s ;	6149:9:141630:141647	3466940	0	True				
ANR	3467164	AssignmentExpression	p = NSTR ( node ) -> s		3466940	0		=			
ANR	3467165	Identifier	p		3466940	0					
ANR	3467166	PtrMemberAccess	NSTR ( node ) -> s		3466940	1					
ANR	3467167	CallExpression	NSTR ( node )		3466940	0					
ANR	3467168	Callee	NSTR		3466940	0					
ANR	3467169	Identifier	NSTR		3466940	0					
ANR	3467170	ArgumentList	node		3466940	1					
ANR	3467171	Argument	node		3466940	0					
ANR	3467172	Identifier	node		3466940	0					
ANR	3467173	Identifier	s		3466940	1					
ANR	3467174	Condition	p < NSTR ( node ) -> end	6149:28:141649:141667	3466940	1	True				
ANR	3467175	RelationalExpression	p < NSTR ( node ) -> end		3466940	0		<			
ANR	3467176	Identifier	p		3466940	0					
ANR	3467177	PtrMemberAccess	NSTR ( node ) -> end		3466940	1					
ANR	3467178	CallExpression	NSTR ( node )		3466940	0					
ANR	3467179	Callee	NSTR		3466940	0					
ANR	3467180	Identifier	NSTR		3466940	0					
ANR	3467181	ArgumentList	node		3466940	1					
ANR	3467182	Argument	node		3466940	0					
ANR	3467183	Identifier	node		3466940	0					
ANR	3467184	Identifier	end		3466940	1					
ANR	3467185	PostIncDecOperationExpression	p ++	6149:49:141670:141672	3466940	2	True				
ANR	3467186	Identifier	p		3466940	0					
ANR	3467187	IncDec	++		3466940	1					
ANR	3467188	CompoundStatement		34:54:798:798	3466940	3					
ANR	3467189	IfStatement	if ( * p >= 0x20 && * p < 0x7f )		3466940	0					
ANR	3467190	Condition	* p >= 0x20 && * p < 0x7f	6150:10:141687:141709	3466940	0	True				
ANR	3467191	AndExpression	* p >= 0x20 && * p < 0x7f		3466940	0		&&			
ANR	3467192	RelationalExpression	* p >= 0x20		3466940	0		>=			
ANR	3467193	UnaryOperationExpression	* p		3466940	0					
ANR	3467194	UnaryOperator	*		3466940	0					
ANR	3467195	Identifier	p		3466940	1					
ANR	3467196	PrimaryExpression	0x20		3466940	1					
ANR	3467197	RelationalExpression	* p < 0x7f		3466940	1		<			
ANR	3467198	UnaryOperationExpression	* p		3466940	0					
ANR	3467199	UnaryOperator	*		3466940	0					
ANR	3467200	Identifier	p		3466940	1					
ANR	3467201	PrimaryExpression	0x7f		3466940	1					
ANR	3467202	ExpressionStatement	"fputc ( * p , f )"	6151:1:141713:141725	3466940	1	True				
ANR	3467203	CallExpression	"fputc ( * p , f )"		3466940	0					
ANR	3467204	Callee	fputc		3466940	0					
ANR	3467205	Identifier	fputc		3466940	0					
ANR	3467206	ArgumentList	* p		3466940	1					
ANR	3467207	Argument	* p		3466940	0					
ANR	3467208	UnaryOperationExpression	* p		3466940	0					
ANR	3467209	UnaryOperator	*		3466940	0					
ANR	3467210	Identifier	p		3466940	1					
ANR	3467211	Argument	f		3466940	1					
ANR	3467212	Identifier	f		3466940	0					
ANR	3467213	ElseStatement	else		3466940	0					
ANR	3467214	CompoundStatement		37:11:861:861	3466940	0					
ANR	3467215	ExpressionStatement	"fprintf ( f , "" 0x%02x"" , * p )"	6153:1:141741:141766	3466940	0	True				
ANR	3467216	CallExpression	"fprintf ( f , "" 0x%02x"" , * p )"		3466940	0					
ANR	3467217	Callee	fprintf		3466940	0					
ANR	3467218	Identifier	fprintf		3466940	0					
ANR	3467219	ArgumentList	f		3466940	1					
ANR	3467220	Argument	f		3466940	0					
ANR	3467221	Identifier	f		3466940	0					
ANR	3467222	Argument	""" 0x%02x"""		3466940	1					
ANR	3467223	PrimaryExpression	""" 0x%02x"""		3466940	0					
ANR	3467224	Argument	* p		3466940	2					
ANR	3467225	UnaryOperationExpression	* p		3466940	0					
ANR	3467226	UnaryOperator	*		3466940	0					
ANR	3467227	Identifier	p		3466940	1					
ANR	3467228	BreakStatement	break ;	6156:4:141786:141791	3466940	9	True				
ANR	3467229	Label	case NT_CCLASS :	6158:2:141796:141810	3466940	10	True				
ANR	3467230	Identifier	NT_CCLASS		3466940	0					
ANR	3467231	ExpressionStatement	"fprintf ( f , ""<cclass:%x>"" , ( int ) node )"	6159:4:141816:141853	3466940	11	True				
ANR	3467232	CallExpression	"fprintf ( f , ""<cclass:%x>"" , ( int ) node )"		3466940	0					
ANR	3467233	Callee	fprintf		3466940	0					
ANR	3467234	Identifier	fprintf		3466940	0					
ANR	3467235	ArgumentList	f		3466940	1					
ANR	3467236	Argument	f		3466940	0					
ANR	3467237	Identifier	f		3466940	0					
ANR	3467238	Argument	"""<cclass:%x>"""		3466940	1					
ANR	3467239	PrimaryExpression	"""<cclass:%x>"""		3466940	0					
ANR	3467240	Argument	( int ) node		3466940	2					
ANR	3467241	CastExpression	( int ) node		3466940	0					
ANR	3467242	CastTarget	int		3466940	0					
ANR	3467243	Identifier	node		3466940	1					
ANR	3467244	IfStatement	if ( IS_NCCLASS_NOT ( NCCLASS ( node ) ) )		3466940	12					
ANR	3467245	Condition	IS_NCCLASS_NOT ( NCCLASS ( node ) )	6160:8:141863:141891	3466940	0	True				
ANR	3467246	CallExpression	IS_NCCLASS_NOT ( NCCLASS ( node ) )		3466940	0					
ANR	3467247	Callee	IS_NCCLASS_NOT		3466940	0					
ANR	3467248	Identifier	IS_NCCLASS_NOT		3466940	0					
ANR	3467249	ArgumentList	NCCLASS ( node )		3466940	1					
ANR	3467250	Argument	NCCLASS ( node )		3466940	0					
ANR	3467251	CallExpression	NCCLASS ( node )		3466940	0					
ANR	3467252	Callee	NCCLASS		3466940	0					
ANR	3467253	Identifier	NCCLASS		3466940	0					
ANR	3467254	ArgumentList	node		3466940	1					
ANR	3467255	Argument	node		3466940	0					
ANR	3467256	Identifier	node		3466940	0					
ANR	3467257	ExpressionStatement	"fputs ( "" not"" , f )"	6160:39:141894:141910	3466940	1	True				
ANR	3467258	CallExpression	"fputs ( "" not"" , f )"		3466940	0					
ANR	3467259	Callee	fputs		3466940	0					
ANR	3467260	Identifier	fputs		3466940	0					
ANR	3467261	ArgumentList	""" not"""		3466940	1					
ANR	3467262	Argument	""" not"""		3466940	0					
ANR	3467263	PrimaryExpression	""" not"""		3466940	0					
ANR	3467264	Argument	f		3466940	1					
ANR	3467265	Identifier	f		3466940	0					
ANR	3467266	IfStatement	if ( NCCLASS ( node ) -> mbuf )		3466940	13					
ANR	3467267	Condition	NCCLASS ( node ) -> mbuf	6161:8:141920:141938	3466940	0	True				
ANR	3467268	PtrMemberAccess	NCCLASS ( node ) -> mbuf		3466940	0					
ANR	3467269	CallExpression	NCCLASS ( node )		3466940	0					
ANR	3467270	Callee	NCCLASS		3466940	0					
ANR	3467271	Identifier	NCCLASS		3466940	0					
ANR	3467272	ArgumentList	node		3466940	1					
ANR	3467273	Argument	node		3466940	0					
ANR	3467274	Identifier	node		3466940	0					
ANR	3467275	Identifier	mbuf		3466940	1					
ANR	3467276	CompoundStatement		47:6:1072:1104	3466940	1					
ANR	3467277	IdentifierDeclStatement	BBuf * bbuf = NCCLASS ( node ) -> mbuf ;	6162:6:141949:141981	3466940	0	True				
ANR	3467278	IdentifierDecl	* bbuf = NCCLASS ( node ) -> mbuf		3466940	0					
ANR	3467279	IdentifierDeclType	BBuf *		3466940	0					
ANR	3467280	Identifier	bbuf		3466940	1					
ANR	3467281	AssignmentExpression	* bbuf = NCCLASS ( node ) -> mbuf		3466940	2		=			
ANR	3467282	Identifier	bbuf		3466940	0					
ANR	3467283	PtrMemberAccess	NCCLASS ( node ) -> mbuf		3466940	1					
ANR	3467284	CallExpression	NCCLASS ( node )		3466940	0					
ANR	3467285	Callee	NCCLASS		3466940	0					
ANR	3467286	Identifier	NCCLASS		3466940	0					
ANR	3467287	ArgumentList	node		3466940	1					
ANR	3467288	Argument	node		3466940	0					
ANR	3467289	Identifier	node		3466940	0					
ANR	3467290	Identifier	mbuf		3466940	1					
ANR	3467291	ForStatement	for ( i = 0 ; i < bbuf -> used ; i ++ )		3466940	1					
ANR	3467292	ForInit	i = 0 ;	6163:11:141994:141999	3466940	0	True				
ANR	3467293	AssignmentExpression	i = 0		3466940	0		=			
ANR	3467294	Identifier	i		3466940	0					
ANR	3467295	PrimaryExpression	0		3466940	1					
ANR	3467296	Condition	i < bbuf -> used	6163:18:142001:142014	3466940	1	True				
ANR	3467297	RelationalExpression	i < bbuf -> used		3466940	0		<			
ANR	3467298	Identifier	i		3466940	0					
ANR	3467299	PtrMemberAccess	bbuf -> used		3466940	1					
ANR	3467300	Identifier	bbuf		3466940	0					
ANR	3467301	Identifier	used		3466940	1					
ANR	3467302	PostIncDecOperationExpression	i ++	6163:34:142017:142019	3466940	2	True				
ANR	3467303	Identifier	i		3466940	0					
ANR	3467304	IncDec	++		3466940	1					
ANR	3467305	CompoundStatement		48:39:1145:1145	3466940	3					
ANR	3467306	IfStatement	if ( i > 0 )		3466940	0					
ANR	3467307	Condition	i > 0	6164:5:142029:142033	3466940	0	True				
ANR	3467308	RelationalExpression	i > 0		3466940	0		>			
ANR	3467309	Identifier	i		3466940	0					
ANR	3467310	PrimaryExpression	0		3466940	1					
ANR	3467311	ExpressionStatement	"fprintf ( f , "","" )"	6164:12:142036:142051	3466940	1	True				
ANR	3467312	CallExpression	"fprintf ( f , "","" )"		3466940	0					
ANR	3467313	Callee	fprintf		3466940	0					
ANR	3467314	Identifier	fprintf		3466940	0					
ANR	3467315	ArgumentList	f		3466940	1					
ANR	3467316	Argument	f		3466940	0					
ANR	3467317	Identifier	f		3466940	0					
ANR	3467318	Argument	""","""		3466940	1					
ANR	3467319	PrimaryExpression	""","""		3466940	0					
ANR	3467320	ExpressionStatement	"fprintf ( f , ""%0x"" , bbuf -> p [ i ] )"	6165:1:142054:142083	3466940	1	True				
ANR	3467321	CallExpression	"fprintf ( f , ""%0x"" , bbuf -> p [ i ] )"		3466940	0					
ANR	3467322	Callee	fprintf		3466940	0					
ANR	3467323	Identifier	fprintf		3466940	0					
ANR	3467324	ArgumentList	f		3466940	1					
ANR	3467325	Argument	f		3466940	0					
ANR	3467326	Identifier	f		3466940	0					
ANR	3467327	Argument	"""%0x"""		3466940	1					
ANR	3467328	PrimaryExpression	"""%0x"""		3466940	0					
ANR	3467329	Argument	bbuf -> p [ i ]		3466940	2					
ANR	3467330	ArrayIndexing	bbuf -> p [ i ]		3466940	0					
ANR	3467331	PtrMemberAccess	bbuf -> p		3466940	0					
ANR	3467332	Identifier	bbuf		3466940	0					
ANR	3467333	Identifier	p		3466940	1					
ANR	3467334	Identifier	i		3466940	1					
ANR	3467335	BreakStatement	break ;	6168:4:142103:142108	3466940	14	True				
ANR	3467336	Label	case NT_CTYPE :	6170:2:142113:142126	3466940	15	True				
ANR	3467337	Identifier	NT_CTYPE		3466940	0					
ANR	3467338	ExpressionStatement	"fprintf ( f , ""<ctype:%x> "" , ( int ) node )"	6171:4:142132:142169	3466940	16	True				
ANR	3467339	CallExpression	"fprintf ( f , ""<ctype:%x> "" , ( int ) node )"		3466940	0					
ANR	3467340	Callee	fprintf		3466940	0					
ANR	3467341	Identifier	fprintf		3466940	0					
ANR	3467342	ArgumentList	f		3466940	1					
ANR	3467343	Argument	f		3466940	0					
ANR	3467344	Identifier	f		3466940	0					
ANR	3467345	Argument	"""<ctype:%x> """		3466940	1					
ANR	3467346	PrimaryExpression	"""<ctype:%x> """		3466940	0					
ANR	3467347	Argument	( int ) node		3466940	2					
ANR	3467348	CastExpression	( int ) node		3466940	0					
ANR	3467349	CastTarget	int		3466940	0					
ANR	3467350	Identifier	node		3466940	1					
ANR	3467351	SwitchStatement	switch ( NCTYPE ( node ) -> ctype )		3466940	17					
ANR	3467352	Condition	NCTYPE ( node ) -> ctype	6172:12:142183:142201	3466940	0	True				
ANR	3467353	PtrMemberAccess	NCTYPE ( node ) -> ctype		3466940	0					
ANR	3467354	CallExpression	NCTYPE ( node )		3466940	0					
ANR	3467355	Callee	NCTYPE		3466940	0					
ANR	3467356	Identifier	NCTYPE		3466940	0					
ANR	3467357	ArgumentList	node		3466940	1					
ANR	3467358	Argument	node		3466940	0					
ANR	3467359	Identifier	node		3466940	0					
ANR	3467360	Identifier	ctype		3466940	1					
ANR	3467361	CompoundStatement		57:33:1327:1327	3466940	1					
ANR	3467362	Label	case ONIGENC_CTYPE_WORD :	6173:4:142210:142233	3466940	0	True				
ANR	3467363	Identifier	ONIGENC_CTYPE_WORD		3466940	0					
ANR	3467364	IfStatement	if ( NCTYPE ( node ) -> not != 0 )		3466940	1					
ANR	3467365	Condition	NCTYPE ( node ) -> not != 0	6174:10:142245:142266	3466940	0	True				
ANR	3467366	EqualityExpression	NCTYPE ( node ) -> not != 0		3466940	0		!=			
ANR	3467367	PtrMemberAccess	NCTYPE ( node ) -> not		3466940	0					
ANR	3467368	CallExpression	NCTYPE ( node )		3466940	0					
ANR	3467369	Callee	NCTYPE		3466940	0					
ANR	3467370	Identifier	NCTYPE		3466940	0					
ANR	3467371	ArgumentList	node		3466940	1					
ANR	3467372	Argument	node		3466940	0					
ANR	3467373	Identifier	node		3466940	0					
ANR	3467374	Identifier	not		3466940	1					
ANR	3467375	PrimaryExpression	0		3466940	1					
ANR	3467376	ExpressionStatement	"fputs ( ""not word"" , f )"	6175:1:142270:142296	3466940	1	True				
ANR	3467377	CallExpression	"fputs ( ""not word"" , f )"		3466940	0					
ANR	3467378	Callee	fputs		3466940	0					
ANR	3467379	Identifier	fputs		3466940	0					
ANR	3467380	ArgumentList	"""not word"""		3466940	1					
ANR	3467381	Argument	"""not word"""		3466940	0					
ANR	3467382	PrimaryExpression	"""not word"""		3466940	0					
ANR	3467383	Argument	f		3466940	1					
ANR	3467384	Identifier	f		3466940	0					
ANR	3467385	ElseStatement	else		3466940	0					
ANR	3467386	ExpressionStatement	"fputs ( ""word"" , f )"	6177:1:142310:142336	3466940	0	True				
ANR	3467387	CallExpression	"fputs ( ""word"" , f )"		3466940	0					
ANR	3467388	Callee	fputs		3466940	0					
ANR	3467389	Identifier	fputs		3466940	0					
ANR	3467390	ArgumentList	"""word"""		3466940	1					
ANR	3467391	Argument	"""word"""		3466940	0					
ANR	3467392	PrimaryExpression	"""word"""		3466940	0					
ANR	3467393	Argument	f		3466940	1					
ANR	3467394	Identifier	f		3466940	0					
ANR	3467395	BreakStatement	break ;	6178:6:142344:142349	3466940	2	True				
ANR	3467396	Label	default :	6180:4:142356:142363	3466940	3	True				
ANR	3467397	Identifier	default		3466940	0					
ANR	3467398	ExpressionStatement	"fprintf ( f , ""ERROR: undefined ctype.\\n"" )"	6181:6:142371:142410	3466940	4	True				
ANR	3467399	CallExpression	"fprintf ( f , ""ERROR: undefined ctype.\\n"" )"		3466940	0					
ANR	3467400	Callee	fprintf		3466940	0					
ANR	3467401	Identifier	fprintf		3466940	0					
ANR	3467402	ArgumentList	f		3466940	1					
ANR	3467403	Argument	f		3466940	0					
ANR	3467404	Identifier	f		3466940	0					
ANR	3467405	Argument	"""ERROR: undefined ctype.\\n"""		3466940	1					
ANR	3467406	PrimaryExpression	"""ERROR: undefined ctype.\\n"""		3466940	0					
ANR	3467407	ExpressionStatement	exit ( 0 )	6182:6:142418:142425	3466940	5	True				
ANR	3467408	CallExpression	exit ( 0 )		3466940	0					
ANR	3467409	Callee	exit		3466940	0					
ANR	3467410	Identifier	exit		3466940	0					
ANR	3467411	ArgumentList	0		3466940	1					
ANR	3467412	Argument	0		3466940	0					
ANR	3467413	PrimaryExpression	0		3466940	0					
ANR	3467414	BreakStatement	break ;	6184:4:142437:142442	3466940	18	True				
ANR	3467415	Label	case NT_CANY :	6186:2:142447:142459	3466940	19	True				
ANR	3467416	Identifier	NT_CANY		3466940	0					
ANR	3467417	ExpressionStatement	"fprintf ( f , ""<anychar:%x>"" , ( int ) node )"	6187:4:142465:142503	3466940	20	True				
ANR	3467418	CallExpression	"fprintf ( f , ""<anychar:%x>"" , ( int ) node )"		3466940	0					
ANR	3467419	Callee	fprintf		3466940	0					
ANR	3467420	Identifier	fprintf		3466940	0					
ANR	3467421	ArgumentList	f		3466940	1					
ANR	3467422	Argument	f		3466940	0					
ANR	3467423	Identifier	f		3466940	0					
ANR	3467424	Argument	"""<anychar:%x>"""		3466940	1					
ANR	3467425	PrimaryExpression	"""<anychar:%x>"""		3466940	0					
ANR	3467426	Argument	( int ) node		3466940	2					
ANR	3467427	CastExpression	( int ) node		3466940	0					
ANR	3467428	CastTarget	int		3466940	0					
ANR	3467429	Identifier	node		3466940	1					
ANR	3467430	BreakStatement	break ;	6188:4:142509:142514	3466940	21	True				
ANR	3467431	Label	case NT_ANCHOR :	6190:2:142519:142533	3466940	22	True				
ANR	3467432	Identifier	NT_ANCHOR		3466940	0					
ANR	3467433	ExpressionStatement	"fprintf ( f , ""<anchor:%x> "" , ( int ) node )"	6191:4:142539:142577	3466940	23	True				
ANR	3467434	CallExpression	"fprintf ( f , ""<anchor:%x> "" , ( int ) node )"		3466940	0					
ANR	3467435	Callee	fprintf		3466940	0					
ANR	3467436	Identifier	fprintf		3466940	0					
ANR	3467437	ArgumentList	f		3466940	1					
ANR	3467438	Argument	f		3466940	0					
ANR	3467439	Identifier	f		3466940	0					
ANR	3467440	Argument	"""<anchor:%x> """		3466940	1					
ANR	3467441	PrimaryExpression	"""<anchor:%x> """		3466940	0					
ANR	3467442	Argument	( int ) node		3466940	2					
ANR	3467443	CastExpression	( int ) node		3466940	0					
ANR	3467444	CastTarget	int		3466940	0					
ANR	3467445	Identifier	node		3466940	1					
ANR	3467446	SwitchStatement	switch ( NANCHOR ( node ) -> type )		3466940	24					
ANR	3467447	Condition	NANCHOR ( node ) -> type	6192:12:142591:142609	3466940	0	True				
ANR	3467448	PtrMemberAccess	NANCHOR ( node ) -> type		3466940	0					
ANR	3467449	CallExpression	NANCHOR ( node )		3466940	0					
ANR	3467450	Callee	NANCHOR		3466940	0					
ANR	3467451	Identifier	NANCHOR		3466940	0					
ANR	3467452	ArgumentList	node		3466940	1					
ANR	3467453	Argument	node		3466940	0					
ANR	3467454	Identifier	node		3466940	0					
ANR	3467455	Identifier	type		3466940	1					
ANR	3467456	CompoundStatement		77:33:1735:1735	3466940	1					
ANR	3467457	Label	case ANCHOR_BEGIN_BUF :	6193:4:142618:142639	3466940	0	True				
ANR	3467458	Identifier	ANCHOR_BEGIN_BUF		3466940	0					
ANR	3467459	ExpressionStatement	"fputs ( ""begin buf"" , f )"	6193:32:142646:142672	3466940	1	True				
ANR	3467460	CallExpression	"fputs ( ""begin buf"" , f )"		3466940	0					
ANR	3467461	Callee	fputs		3466940	0					
ANR	3467462	Identifier	fputs		3466940	0					
ANR	3467463	ArgumentList	"""begin buf"""		3466940	1					
ANR	3467464	Argument	"""begin buf"""		3466940	0					
ANR	3467465	PrimaryExpression	"""begin buf"""		3466940	0					
ANR	3467466	Argument	f		3466940	1					
ANR	3467467	Identifier	f		3466940	0					
ANR	3467468	BreakStatement	break ;	6193:60:142674:142679	3466940	2	True				
ANR	3467469	Label	case ANCHOR_END_BUF :	6194:4:142685:142704	3466940	3	True				
ANR	3467470	Identifier	ANCHOR_END_BUF		3466940	0					
ANR	3467471	ExpressionStatement	"fputs ( ""end buf"" , f )"	6194:32:142713:142739	3466940	4	True				
ANR	3467472	CallExpression	"fputs ( ""end buf"" , f )"		3466940	0					
ANR	3467473	Callee	fputs		3466940	0					
ANR	3467474	Identifier	fputs		3466940	0					
ANR	3467475	ArgumentList	"""end buf"""		3466940	1					
ANR	3467476	Argument	"""end buf"""		3466940	0					
ANR	3467477	PrimaryExpression	"""end buf"""		3466940	0					
ANR	3467478	Argument	f		3466940	1					
ANR	3467479	Identifier	f		3466940	0					
ANR	3467480	BreakStatement	break ;	6194:60:142741:142746	3466940	5	True				
ANR	3467481	Label	case ANCHOR_BEGIN_LINE :	6195:4:142752:142774	3466940	6	True				
ANR	3467482	Identifier	ANCHOR_BEGIN_LINE		3466940	0					
ANR	3467483	ExpressionStatement	"fputs ( ""begin line"" , f )"	6195:32:142780:142806	3466940	7	True				
ANR	3467484	CallExpression	"fputs ( ""begin line"" , f )"		3466940	0					
ANR	3467485	Callee	fputs		3466940	0					
ANR	3467486	Identifier	fputs		3466940	0					
ANR	3467487	ArgumentList	"""begin line"""		3466940	1					
ANR	3467488	Argument	"""begin line"""		3466940	0					
ANR	3467489	PrimaryExpression	"""begin line"""		3466940	0					
ANR	3467490	Argument	f		3466940	1					
ANR	3467491	Identifier	f		3466940	0					
ANR	3467492	BreakStatement	break ;	6195:60:142808:142813	3466940	8	True				
ANR	3467493	Label	case ANCHOR_END_LINE :	6196:4:142819:142839	3466940	9	True				
ANR	3467494	Identifier	ANCHOR_END_LINE		3466940	0					
ANR	3467495	ExpressionStatement	"fputs ( ""end line"" , f )"	6196:32:142847:142873	3466940	10	True				
ANR	3467496	CallExpression	"fputs ( ""end line"" , f )"		3466940	0					
ANR	3467497	Callee	fputs		3466940	0					
ANR	3467498	Identifier	fputs		3466940	0					
ANR	3467499	ArgumentList	"""end line"""		3466940	1					
ANR	3467500	Argument	"""end line"""		3466940	0					
ANR	3467501	PrimaryExpression	"""end line"""		3466940	0					
ANR	3467502	Argument	f		3466940	1					
ANR	3467503	Identifier	f		3466940	0					
ANR	3467504	BreakStatement	break ;	6196:60:142875:142880	3466940	11	True				
ANR	3467505	Label	case ANCHOR_SEMI_END_BUF :	6197:4:142886:142910	3466940	12	True				
ANR	3467506	Identifier	ANCHOR_SEMI_END_BUF		3466940	0					
ANR	3467507	ExpressionStatement	"fputs ( ""semi end buf"" , f )"	6197:32:142914:142940	3466940	13	True				
ANR	3467508	CallExpression	"fputs ( ""semi end buf"" , f )"		3466940	0					
ANR	3467509	Callee	fputs		3466940	0					
ANR	3467510	Identifier	fputs		3466940	0					
ANR	3467511	ArgumentList	"""semi end buf"""		3466940	1					
ANR	3467512	Argument	"""semi end buf"""		3466940	0					
ANR	3467513	PrimaryExpression	"""semi end buf"""		3466940	0					
ANR	3467514	Argument	f		3466940	1					
ANR	3467515	Identifier	f		3466940	0					
ANR	3467516	BreakStatement	break ;	6197:60:142942:142947	3466940	14	True				
ANR	3467517	Label	case ANCHOR_BEGIN_POSITION :	6198:4:142953:142979	3466940	15	True				
ANR	3467518	Identifier	ANCHOR_BEGIN_POSITION		3466940	0					
ANR	3467519	ExpressionStatement	"fputs ( ""begin position"" , f )"	6198:32:142981:143007	3466940	16	True				
ANR	3467520	CallExpression	"fputs ( ""begin position"" , f )"		3466940	0					
ANR	3467521	Callee	fputs		3466940	0					
ANR	3467522	Identifier	fputs		3466940	0					
ANR	3467523	ArgumentList	"""begin position"""		3466940	1					
ANR	3467524	Argument	"""begin position"""		3466940	0					
ANR	3467525	PrimaryExpression	"""begin position"""		3466940	0					
ANR	3467526	Argument	f		3466940	1					
ANR	3467527	Identifier	f		3466940	0					
ANR	3467528	BreakStatement	break ;	6198:60:143009:143014	3466940	17	True				
ANR	3467529	Label	case ANCHOR_WORD_BOUND :	6200:4:143021:143043	3466940	18	True				
ANR	3467530	Identifier	ANCHOR_WORD_BOUND		3466940	0					
ANR	3467531	ExpressionStatement	"fputs ( ""word bound"" , f )"	6200:33:143050:143076	3466940	19	True				
ANR	3467532	CallExpression	"fputs ( ""word bound"" , f )"		3466940	0					
ANR	3467533	Callee	fputs		3466940	0					
ANR	3467534	Identifier	fputs		3466940	0					
ANR	3467535	ArgumentList	"""word bound"""		3466940	1					
ANR	3467536	Argument	"""word bound"""		3466940	0					
ANR	3467537	PrimaryExpression	"""word bound"""		3466940	0					
ANR	3467538	Argument	f		3466940	1					
ANR	3467539	Identifier	f		3466940	0					
ANR	3467540	BreakStatement	break ;	6200:61:143078:143083	3466940	20	True				
ANR	3467541	Label	case ANCHOR_NOT_WORD_BOUND :	6201:4:143089:143115	3466940	21	True				
ANR	3467542	Identifier	ANCHOR_NOT_WORD_BOUND		3466940	0					
ANR	3467543	ExpressionStatement	"fputs ( ""not word bound"" , f )"	6201:33:143118:143144	3466940	22	True				
ANR	3467544	CallExpression	"fputs ( ""not word bound"" , f )"		3466940	0					
ANR	3467545	Callee	fputs		3466940	0					
ANR	3467546	Identifier	fputs		3466940	0					
ANR	3467547	ArgumentList	"""not word bound"""		3466940	1					
ANR	3467548	Argument	"""not word bound"""		3466940	0					
ANR	3467549	PrimaryExpression	"""not word bound"""		3466940	0					
ANR	3467550	Argument	f		3466940	1					
ANR	3467551	Identifier	f		3466940	0					
ANR	3467552	BreakStatement	break ;	6201:61:143146:143151	3466940	23	True				
ANR	3467553	Label	case ANCHOR_WORD_BEGIN :	6203:4:143183:143205	3466940	24	True				
ANR	3467554	Identifier	ANCHOR_WORD_BEGIN		3466940	0					
ANR	3467555	ExpressionStatement	"fputs ( ""word begin"" , f )"	6203:33:143212:143234	3466940	25	True				
ANR	3467556	CallExpression	"fputs ( ""word begin"" , f )"		3466940	0					
ANR	3467557	Callee	fputs		3466940	0					
ANR	3467558	Identifier	fputs		3466940	0					
ANR	3467559	ArgumentList	"""word begin"""		3466940	1					
ANR	3467560	Argument	"""word begin"""		3466940	0					
ANR	3467561	PrimaryExpression	"""word begin"""		3466940	0					
ANR	3467562	Argument	f		3466940	1					
ANR	3467563	Identifier	f		3466940	0					
ANR	3467564	BreakStatement	break ;	6203:61:143240:143245	3466940	26	True				
ANR	3467565	Label	case ANCHOR_WORD_END :	6204:4:143251:143271	3466940	27	True				
ANR	3467566	Identifier	ANCHOR_WORD_END		3466940	0					
ANR	3467567	ExpressionStatement	"fputs ( ""word end"" , f )"	6204:33:143280:143300	3466940	28	True				
ANR	3467568	CallExpression	"fputs ( ""word end"" , f )"		3466940	0					
ANR	3467569	Callee	fputs		3466940	0					
ANR	3467570	Identifier	fputs		3466940	0					
ANR	3467571	ArgumentList	"""word end"""		3466940	1					
ANR	3467572	Argument	"""word end"""		3466940	0					
ANR	3467573	PrimaryExpression	"""word end"""		3466940	0					
ANR	3467574	Argument	f		3466940	1					
ANR	3467575	Identifier	f		3466940	0					
ANR	3467576	BreakStatement	break ;	6204:61:143308:143313	3466940	29	True				
ANR	3467577	Label	case ANCHOR_PREC_READ :	6206:4:143326:143347	3466940	30	True				
ANR	3467578	Identifier	ANCHOR_PREC_READ		3466940	0					
ANR	3467579	ExpressionStatement	"fputs ( ""prec read"" , f )"	6206:33:143355:143381	3466940	31	True				
ANR	3467580	CallExpression	"fputs ( ""prec read"" , f )"		3466940	0					
ANR	3467581	Callee	fputs		3466940	0					
ANR	3467582	Identifier	fputs		3466940	0					
ANR	3467583	ArgumentList	"""prec read"""		3466940	1					
ANR	3467584	Argument	"""prec read"""		3466940	0					
ANR	3467585	PrimaryExpression	"""prec read"""		3466940	0					
ANR	3467586	Argument	f		3466940	1					
ANR	3467587	Identifier	f		3466940	0					
ANR	3467588	BreakStatement	break ;	6206:61:143383:143388	3466940	32	True				
ANR	3467589	Label	case ANCHOR_PREC_READ_NOT :	6207:4:143394:143419	3466940	33	True				
ANR	3467590	Identifier	ANCHOR_PREC_READ_NOT		3466940	0					
ANR	3467591	ExpressionStatement	"fputs ( ""prec read not"" , f )"	6207:33:143423:143449	3466940	34	True				
ANR	3467592	CallExpression	"fputs ( ""prec read not"" , f )"		3466940	0					
ANR	3467593	Callee	fputs		3466940	0					
ANR	3467594	Identifier	fputs		3466940	0					
ANR	3467595	ArgumentList	"""prec read not"""		3466940	1					
ANR	3467596	Argument	"""prec read not"""		3466940	0					
ANR	3467597	PrimaryExpression	"""prec read not"""		3466940	0					
ANR	3467598	Argument	f		3466940	1					
ANR	3467599	Identifier	f		3466940	0					
ANR	3467600	BreakStatement	break ;	6207:61:143451:143456	3466940	35	True				
ANR	3467601	Label	case ANCHOR_LOOK_BEHIND :	6208:4:143462:143485	3466940	36	True				
ANR	3467602	Identifier	ANCHOR_LOOK_BEHIND		3466940	0					
ANR	3467603	ExpressionStatement	"fputs ( ""look_behind"" , f )"	6208:33:143491:143517	3466940	37	True				
ANR	3467604	CallExpression	"fputs ( ""look_behind"" , f )"		3466940	0					
ANR	3467605	Callee	fputs		3466940	0					
ANR	3467606	Identifier	fputs		3466940	0					
ANR	3467607	ArgumentList	"""look_behind"""		3466940	1					
ANR	3467608	Argument	"""look_behind"""		3466940	0					
ANR	3467609	PrimaryExpression	"""look_behind"""		3466940	0					
ANR	3467610	Argument	f		3466940	1					
ANR	3467611	Identifier	f		3466940	0					
ANR	3467612	BreakStatement	break ;	6208:61:143519:143524	3466940	38	True				
ANR	3467613	Label	case ANCHOR_LOOK_BEHIND_NOT :	6209:4:143530:143557	3466940	39	True				
ANR	3467614	Identifier	ANCHOR_LOOK_BEHIND_NOT		3466940	0					
ANR	3467615	ExpressionStatement	"fputs ( ""look_behind_not"" , f )"	6209:33:143559:143585	3466940	40	True				
ANR	3467616	CallExpression	"fputs ( ""look_behind_not"" , f )"		3466940	0					
ANR	3467617	Callee	fputs		3466940	0					
ANR	3467618	Identifier	fputs		3466940	0					
ANR	3467619	ArgumentList	"""look_behind_not"""		3466940	1					
ANR	3467620	Argument	"""look_behind_not"""		3466940	0					
ANR	3467621	PrimaryExpression	"""look_behind_not"""		3466940	0					
ANR	3467622	Argument	f		3466940	1					
ANR	3467623	Identifier	f		3466940	0					
ANR	3467624	BreakStatement	break ;	6209:61:143587:143592	3466940	41	True				
ANR	3467625	Label	default :	6211:4:143599:143606	3466940	42	True				
ANR	3467626	Identifier	default		3466940	0					
ANR	3467627	ExpressionStatement	"fprintf ( f , ""ERROR: undefined anchor type.\\n"" )"	6212:6:143614:143659	3466940	43	True				
ANR	3467628	CallExpression	"fprintf ( f , ""ERROR: undefined anchor type.\\n"" )"		3466940	0					
ANR	3467629	Callee	fprintf		3466940	0					
ANR	3467630	Identifier	fprintf		3466940	0					
ANR	3467631	ArgumentList	f		3466940	1					
ANR	3467632	Argument	f		3466940	0					
ANR	3467633	Identifier	f		3466940	0					
ANR	3467634	Argument	"""ERROR: undefined anchor type.\\n"""		3466940	1					
ANR	3467635	PrimaryExpression	"""ERROR: undefined anchor type.\\n"""		3466940	0					
ANR	3467636	BreakStatement	break ;	6213:6:143667:143672	3466940	44	True				
ANR	3467637	BreakStatement	break ;	6215:4:143684:143689	3466940	25	True				
ANR	3467638	Label	case NT_BREF :	6217:2:143694:143706	3466940	26	True				
ANR	3467639	Identifier	NT_BREF		3466940	0					
ANR	3467640	CompoundStatement		105:6:2857:2883	3466940	27					
ANR	3467641	IdentifierDeclStatement	int * p ;	6219:6:143720:143726	3466940	0	True				
ANR	3467642	IdentifierDecl	* p		3466940	0					
ANR	3467643	IdentifierDeclType	int *		3466940	0					
ANR	3467644	Identifier	p		3466940	1					
ANR	3467645	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	6220:6:143734:143760	3466940	1	True				
ANR	3467646	IdentifierDecl	* br = NBREF ( node )		3466940	0					
ANR	3467647	IdentifierDeclType	BRefNode *		3466940	0					
ANR	3467648	Identifier	br		3466940	1					
ANR	3467649	AssignmentExpression	* br = NBREF ( node )		3466940	2		=			
ANR	3467650	Identifier	br		3466940	0					
ANR	3467651	CallExpression	NBREF ( node )		3466940	1					
ANR	3467652	Callee	NBREF		3466940	0					
ANR	3467653	Identifier	NBREF		3466940	0					
ANR	3467654	ArgumentList	node		3466940	1					
ANR	3467655	Argument	node		3466940	0					
ANR	3467656	Identifier	node		3466940	0					
ANR	3467657	ExpressionStatement	p = BACKREFS_P ( br )	6221:6:143768:143786	3466940	2	True				
ANR	3467658	AssignmentExpression	p = BACKREFS_P ( br )		3466940	0		=			
ANR	3467659	Identifier	p		3466940	0					
ANR	3467660	CallExpression	BACKREFS_P ( br )		3466940	1					
ANR	3467661	Callee	BACKREFS_P		3466940	0					
ANR	3467662	Identifier	BACKREFS_P		3466940	0					
ANR	3467663	ArgumentList	br		3466940	1					
ANR	3467664	Argument	br		3466940	0					
ANR	3467665	Identifier	br		3466940	0					
ANR	3467666	ExpressionStatement	"fprintf ( f , ""<backref:%x>"" , ( int ) node )"	6222:6:143794:143832	3466940	3	True				
ANR	3467667	CallExpression	"fprintf ( f , ""<backref:%x>"" , ( int ) node )"		3466940	0					
ANR	3467668	Callee	fprintf		3466940	0					
ANR	3467669	Identifier	fprintf		3466940	0					
ANR	3467670	ArgumentList	f		3466940	1					
ANR	3467671	Argument	f		3466940	0					
ANR	3467672	Identifier	f		3466940	0					
ANR	3467673	Argument	"""<backref:%x>"""		3466940	1					
ANR	3467674	PrimaryExpression	"""<backref:%x>"""		3466940	0					
ANR	3467675	Argument	( int ) node		3466940	2					
ANR	3467676	CastExpression	( int ) node		3466940	0					
ANR	3467677	CastTarget	int		3466940	0					
ANR	3467678	Identifier	node		3466940	1					
ANR	3467679	ForStatement	for ( i = 0 ; i < br -> back_num ; i ++ )		3466940	4					
ANR	3467680	ForInit	i = 0 ;	6223:11:143845:143850	3466940	0	True				
ANR	3467681	AssignmentExpression	i = 0		3466940	0		=			
ANR	3467682	Identifier	i		3466940	0					
ANR	3467683	PrimaryExpression	0		3466940	1					
ANR	3467684	Condition	i < br -> back_num	6223:18:143852:143867	3466940	1	True				
ANR	3467685	RelationalExpression	i < br -> back_num		3466940	0		<			
ANR	3467686	Identifier	i		3466940	0					
ANR	3467687	PtrMemberAccess	br -> back_num		3466940	1					
ANR	3467688	Identifier	br		3466940	0					
ANR	3467689	Identifier	back_num		3466940	1					
ANR	3467690	PostIncDecOperationExpression	i ++	6223:36:143870:143872	3466940	2	True				
ANR	3467691	Identifier	i		3466940	0					
ANR	3467692	IncDec	++		3466940	1					
ANR	3467693	CompoundStatement		108:41:2998:2998	3466940	3					
ANR	3467694	IfStatement	if ( i > 0 )		3466940	0					
ANR	3467695	Condition	i > 0	6224:5:143882:143886	3466940	0	True				
ANR	3467696	RelationalExpression	i > 0		3466940	0		>			
ANR	3467697	Identifier	i		3466940	0					
ANR	3467698	PrimaryExpression	0		3466940	1					
ANR	3467699	ExpressionStatement	"fputs ( "", "" , f )"	6224:12:143889:143903	3466940	1	True				
ANR	3467700	CallExpression	"fputs ( "", "" , f )"		3466940	0					
ANR	3467701	Callee	fputs		3466940	0					
ANR	3467702	Identifier	fputs		3466940	0					
ANR	3467703	ArgumentList	""", """		3466940	1					
ANR	3467704	Argument	""", """		3466940	0					
ANR	3467705	PrimaryExpression	""", """		3466940	0					
ANR	3467706	Argument	f		3466940	1					
ANR	3467707	Identifier	f		3466940	0					
ANR	3467708	ExpressionStatement	"fprintf ( f , ""%d"" , p [ i ] )"	6225:1:143906:143928	3466940	1	True				
ANR	3467709	CallExpression	"fprintf ( f , ""%d"" , p [ i ] )"		3466940	0					
ANR	3467710	Callee	fprintf		3466940	0					
ANR	3467711	Identifier	fprintf		3466940	0					
ANR	3467712	ArgumentList	f		3466940	1					
ANR	3467713	Argument	f		3466940	0					
ANR	3467714	Identifier	f		3466940	0					
ANR	3467715	Argument	"""%d"""		3466940	1					
ANR	3467716	PrimaryExpression	"""%d"""		3466940	0					
ANR	3467717	Argument	p [ i ]		3466940	2					
ANR	3467718	ArrayIndexing	p [ i ]		3466940	0					
ANR	3467719	Identifier	p		3466940	0					
ANR	3467720	Identifier	i		3466940	1					
ANR	3467721	BreakStatement	break ;	6228:4:143948:143953	3466940	28	True				
ANR	3467722	Label	case NT_CALL :	6231:2:143981:143993	3466940	29	True				
ANR	3467723	Identifier	NT_CALL		3466940	0					
ANR	3467724	CompoundStatement		118:6:3130:3156	3466940	30					
ANR	3467725	IdentifierDeclStatement	CallNode * cn = NCALL ( node ) ;	6233:6:144007:144033	3466940	0	True				
ANR	3467726	IdentifierDecl	* cn = NCALL ( node )		3466940	0					
ANR	3467727	IdentifierDeclType	CallNode *		3466940	0					
ANR	3467728	Identifier	cn		3466940	1					
ANR	3467729	AssignmentExpression	* cn = NCALL ( node )		3466940	2		=			
ANR	3467730	Identifier	cn		3466940	0					
ANR	3467731	CallExpression	NCALL ( node )		3466940	1					
ANR	3467732	Callee	NCALL		3466940	0					
ANR	3467733	Identifier	NCALL		3466940	0					
ANR	3467734	ArgumentList	node		3466940	1					
ANR	3467735	Argument	node		3466940	0					
ANR	3467736	Identifier	node		3466940	0					
ANR	3467737	ExpressionStatement	"fprintf ( f , ""<call:%x>"" , ( int ) node )"	6234:6:144041:144076	3466940	1	True				
ANR	3467738	CallExpression	"fprintf ( f , ""<call:%x>"" , ( int ) node )"		3466940	0					
ANR	3467739	Callee	fprintf		3466940	0					
ANR	3467740	Identifier	fprintf		3466940	0					
ANR	3467741	ArgumentList	f		3466940	1					
ANR	3467742	Argument	f		3466940	0					
ANR	3467743	Identifier	f		3466940	0					
ANR	3467744	Argument	"""<call:%x>"""		3466940	1					
ANR	3467745	PrimaryExpression	"""<call:%x>"""		3466940	0					
ANR	3467746	Argument	( int ) node		3466940	2					
ANR	3467747	CastExpression	( int ) node		3466940	0					
ANR	3467748	CastTarget	int		3466940	0					
ANR	3467749	Identifier	node		3466940	1					
ANR	3467750	ExpressionStatement	"p_string ( f , cn -> name_end - cn -> name , cn -> name )"	6235:6:144084:144130	3466940	2	True				
ANR	3467751	CallExpression	"p_string ( f , cn -> name_end - cn -> name , cn -> name )"		3466940	0					
ANR	3467752	Callee	p_string		3466940	0					
ANR	3467753	Identifier	p_string		3466940	0					
ANR	3467754	ArgumentList	f		3466940	1					
ANR	3467755	Argument	f		3466940	0					
ANR	3467756	Identifier	f		3466940	0					
ANR	3467757	Argument	cn -> name_end - cn -> name		3466940	1					
ANR	3467758	AdditiveExpression	cn -> name_end - cn -> name		3466940	0		-			
ANR	3467759	PtrMemberAccess	cn -> name_end		3466940	0					
ANR	3467760	Identifier	cn		3466940	0					
ANR	3467761	Identifier	name_end		3466940	1					
ANR	3467762	PtrMemberAccess	cn -> name		3466940	1					
ANR	3467763	Identifier	cn		3466940	0					
ANR	3467764	Identifier	name		3466940	1					
ANR	3467765	Argument	cn -> name		3466940	2					
ANR	3467766	PtrMemberAccess	cn -> name		3466940	0					
ANR	3467767	Identifier	cn		3466940	0					
ANR	3467768	Identifier	name		3466940	1					
ANR	3467769	BreakStatement	break ;	6237:4:144142:144147	3466940	31	True				
ANR	3467770	Label	case NT_QTFR :	6240:2:144159:144171	3466940	32	True				
ANR	3467771	Identifier	NT_QTFR		3466940	0					
ANR	3467772	ExpressionStatement	"fprintf ( f , ""<quantifier:%x>{%d,%d}%s\\n"" , ( int ) node , NQTFR ( node ) -> lower , NQTFR ( node ) -> upper , ( NQTFR ( node ) -> greedy ? """" : ""?"" ) )"	6241:4:144177:144313	3466940	33	True				
ANR	3467773	CallExpression	"fprintf ( f , ""<quantifier:%x>{%d,%d}%s\\n"" , ( int ) node , NQTFR ( node ) -> lower , NQTFR ( node ) -> upper , ( NQTFR ( node ) -> greedy ? """" : ""?"" ) )"		3466940	0					
ANR	3467774	Callee	fprintf		3466940	0					
ANR	3467775	Identifier	fprintf		3466940	0					
ANR	3467776	ArgumentList	f		3466940	1					
ANR	3467777	Argument	f		3466940	0					
ANR	3467778	Identifier	f		3466940	0					
ANR	3467779	Argument	"""<quantifier:%x>{%d,%d}%s\\n"""		3466940	1					
ANR	3467780	PrimaryExpression	"""<quantifier:%x>{%d,%d}%s\\n"""		3466940	0					
ANR	3467781	Argument	( int ) node		3466940	2					
ANR	3467782	CastExpression	( int ) node		3466940	0					
ANR	3467783	CastTarget	int		3466940	0					
ANR	3467784	Identifier	node		3466940	1					
ANR	3467785	Argument	NQTFR ( node ) -> lower		3466940	3					
ANR	3467786	PtrMemberAccess	NQTFR ( node ) -> lower		3466940	0					
ANR	3467787	CallExpression	NQTFR ( node )		3466940	0					
ANR	3467788	Callee	NQTFR		3466940	0					
ANR	3467789	Identifier	NQTFR		3466940	0					
ANR	3467790	ArgumentList	node		3466940	1					
ANR	3467791	Argument	node		3466940	0					
ANR	3467792	Identifier	node		3466940	0					
ANR	3467793	Identifier	lower		3466940	1					
ANR	3467794	Argument	NQTFR ( node ) -> upper		3466940	4					
ANR	3467795	PtrMemberAccess	NQTFR ( node ) -> upper		3466940	0					
ANR	3467796	CallExpression	NQTFR ( node )		3466940	0					
ANR	3467797	Callee	NQTFR		3466940	0					
ANR	3467798	Identifier	NQTFR		3466940	0					
ANR	3467799	ArgumentList	node		3466940	1					
ANR	3467800	Argument	node		3466940	0					
ANR	3467801	Identifier	node		3466940	0					
ANR	3467802	Identifier	upper		3466940	1					
ANR	3467803	Argument	"NQTFR ( node ) -> greedy ? """" : ""?"""		3466940	5					
ANR	3467804	ConditionalExpression	"NQTFR ( node ) -> greedy ? """" : ""?"""		3466940	0					
ANR	3467805	Condition	NQTFR ( node ) -> greedy		3466940	0					
ANR	3467806	PtrMemberAccess	NQTFR ( node ) -> greedy		3466940	0					
ANR	3467807	CallExpression	NQTFR ( node )		3466940	0					
ANR	3467808	Callee	NQTFR		3466940	0					
ANR	3467809	Identifier	NQTFR		3466940	0					
ANR	3467810	ArgumentList	node		3466940	1					
ANR	3467811	Argument	node		3466940	0					
ANR	3467812	Identifier	node		3466940	0					
ANR	3467813	Identifier	greedy		3466940	1					
ANR	3467814	PrimaryExpression	""""""		3466940	1					
ANR	3467815	PrimaryExpression	"""?"""		3466940	2					
ANR	3467816	ExpressionStatement	"print_indent_tree ( f , NQTFR ( node ) -> target , indent + add )"	6244:4:144319:144374	3466940	34	True				
ANR	3467817	CallExpression	"print_indent_tree ( f , NQTFR ( node ) -> target , indent + add )"		3466940	0					
ANR	3467818	Callee	print_indent_tree		3466940	0					
ANR	3467819	Identifier	print_indent_tree		3466940	0					
ANR	3467820	ArgumentList	f		3466940	1					
ANR	3467821	Argument	f		3466940	0					
ANR	3467822	Identifier	f		3466940	0					
ANR	3467823	Argument	NQTFR ( node ) -> target		3466940	1					
ANR	3467824	PtrMemberAccess	NQTFR ( node ) -> target		3466940	0					
ANR	3467825	CallExpression	NQTFR ( node )		3466940	0					
ANR	3467826	Callee	NQTFR		3466940	0					
ANR	3467827	Identifier	NQTFR		3466940	0					
ANR	3467828	ArgumentList	node		3466940	1					
ANR	3467829	Argument	node		3466940	0					
ANR	3467830	Identifier	node		3466940	0					
ANR	3467831	Identifier	target		3466940	1					
ANR	3467832	Argument	indent + add		3466940	2					
ANR	3467833	AdditiveExpression	indent + add		3466940	0		+			
ANR	3467834	Identifier	indent		3466940	0					
ANR	3467835	Identifier	add		3466940	1					
ANR	3467836	BreakStatement	break ;	6245:4:144380:144385	3466940	35	True				
ANR	3467837	Label	case NT_ENCLOSE :	6247:2:144390:144405	3466940	36	True				
ANR	3467838	Identifier	NT_ENCLOSE		3466940	0					
ANR	3467839	ExpressionStatement	"fprintf ( f , ""<enclose:%x> "" , ( int ) node )"	6248:4:144411:144450	3466940	37	True				
ANR	3467840	CallExpression	"fprintf ( f , ""<enclose:%x> "" , ( int ) node )"		3466940	0					
ANR	3467841	Callee	fprintf		3466940	0					
ANR	3467842	Identifier	fprintf		3466940	0					
ANR	3467843	ArgumentList	f		3466940	1					
ANR	3467844	Argument	f		3466940	0					
ANR	3467845	Identifier	f		3466940	0					
ANR	3467846	Argument	"""<enclose:%x> """		3466940	1					
ANR	3467847	PrimaryExpression	"""<enclose:%x> """		3466940	0					
ANR	3467848	Argument	( int ) node		3466940	2					
ANR	3467849	CastExpression	( int ) node		3466940	0					
ANR	3467850	CastTarget	int		3466940	0					
ANR	3467851	Identifier	node		3466940	1					
ANR	3467852	SwitchStatement	switch ( NENCLOSE ( node ) -> type )		3466940	38					
ANR	3467853	Condition	NENCLOSE ( node ) -> type	6249:12:144464:144483	3466940	0	True				
ANR	3467854	PtrMemberAccess	NENCLOSE ( node ) -> type		3466940	0					
ANR	3467855	CallExpression	NENCLOSE ( node )		3466940	0					
ANR	3467856	Callee	NENCLOSE		3466940	0					
ANR	3467857	Identifier	NENCLOSE		3466940	0					
ANR	3467858	ArgumentList	node		3466940	1					
ANR	3467859	Argument	node		3466940	0					
ANR	3467860	Identifier	node		3466940	0					
ANR	3467861	Identifier	type		3466940	1					
ANR	3467862	CompoundStatement		134:34:3609:3609	3466940	1					
ANR	3467863	Label	case ENCLOSE_OPTION :	6250:4:144492:144511	3466940	0	True				
ANR	3467864	Identifier	ENCLOSE_OPTION		3466940	0					
ANR	3467865	ExpressionStatement	"fprintf ( f , ""option:%d"" , NENCLOSE ( node ) -> option )"	6251:6:144519:144566	3466940	1	True				
ANR	3467866	CallExpression	"fprintf ( f , ""option:%d"" , NENCLOSE ( node ) -> option )"		3466940	0					
ANR	3467867	Callee	fprintf		3466940	0					
ANR	3467868	Identifier	fprintf		3466940	0					
ANR	3467869	ArgumentList	f		3466940	1					
ANR	3467870	Argument	f		3466940	0					
ANR	3467871	Identifier	f		3466940	0					
ANR	3467872	Argument	"""option:%d"""		3466940	1					
ANR	3467873	PrimaryExpression	"""option:%d"""		3466940	0					
ANR	3467874	Argument	NENCLOSE ( node ) -> option		3466940	2					
ANR	3467875	PtrMemberAccess	NENCLOSE ( node ) -> option		3466940	0					
ANR	3467876	CallExpression	NENCLOSE ( node )		3466940	0					
ANR	3467877	Callee	NENCLOSE		3466940	0					
ANR	3467878	Identifier	NENCLOSE		3466940	0					
ANR	3467879	ArgumentList	node		3466940	1					
ANR	3467880	Argument	node		3466940	0					
ANR	3467881	Identifier	node		3466940	0					
ANR	3467882	Identifier	option		3466940	1					
ANR	3467883	BreakStatement	break ;	6252:6:144574:144579	3466940	2	True				
ANR	3467884	Label	case ENCLOSE_MEMORY :	6253:4:144585:144604	3466940	3	True				
ANR	3467885	Identifier	ENCLOSE_MEMORY		3466940	0					
ANR	3467886	ExpressionStatement	"fprintf ( f , ""memory:%d"" , NENCLOSE ( node ) -> regnum )"	6254:6:144612:144659	3466940	4	True				
ANR	3467887	CallExpression	"fprintf ( f , ""memory:%d"" , NENCLOSE ( node ) -> regnum )"		3466940	0					
ANR	3467888	Callee	fprintf		3466940	0					
ANR	3467889	Identifier	fprintf		3466940	0					
ANR	3467890	ArgumentList	f		3466940	1					
ANR	3467891	Argument	f		3466940	0					
ANR	3467892	Identifier	f		3466940	0					
ANR	3467893	Argument	"""memory:%d"""		3466940	1					
ANR	3467894	PrimaryExpression	"""memory:%d"""		3466940	0					
ANR	3467895	Argument	NENCLOSE ( node ) -> regnum		3466940	2					
ANR	3467896	PtrMemberAccess	NENCLOSE ( node ) -> regnum		3466940	0					
ANR	3467897	CallExpression	NENCLOSE ( node )		3466940	0					
ANR	3467898	Callee	NENCLOSE		3466940	0					
ANR	3467899	Identifier	NENCLOSE		3466940	0					
ANR	3467900	ArgumentList	node		3466940	1					
ANR	3467901	Argument	node		3466940	0					
ANR	3467902	Identifier	node		3466940	0					
ANR	3467903	Identifier	regnum		3466940	1					
ANR	3467904	BreakStatement	break ;	6255:6:144667:144672	3466940	5	True				
ANR	3467905	Label	case ENCLOSE_STOP_BACKTRACK :	6256:4:144678:144705	3466940	6	True				
ANR	3467906	Identifier	ENCLOSE_STOP_BACKTRACK		3466940	0					
ANR	3467907	ExpressionStatement	"fprintf ( f , ""stop-bt"" )"	6257:6:144713:144734	3466940	7	True				
ANR	3467908	CallExpression	"fprintf ( f , ""stop-bt"" )"		3466940	0					
ANR	3467909	Callee	fprintf		3466940	0					
ANR	3467910	Identifier	fprintf		3466940	0					
ANR	3467911	ArgumentList	f		3466940	1					
ANR	3467912	Argument	f		3466940	0					
ANR	3467913	Identifier	f		3466940	0					
ANR	3467914	Argument	"""stop-bt"""		3466940	1					
ANR	3467915	PrimaryExpression	"""stop-bt"""		3466940	0					
ANR	3467916	BreakStatement	break ;	6258:6:144742:144747	3466940	8	True				
ANR	3467917	Label	default :	6260:4:144754:144761	3466940	9	True				
ANR	3467918	Identifier	default		3466940	0					
ANR	3467919	BreakStatement	break ;	6261:6:144769:144774	3466940	10	True				
ANR	3467920	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6263:4:144786:144802	3466940	39	True				
ANR	3467921	CallExpression	"fprintf ( f , ""\\n"" )"		3466940	0					
ANR	3467922	Callee	fprintf		3466940	0					
ANR	3467923	Identifier	fprintf		3466940	0					
ANR	3467924	ArgumentList	f		3466940	1					
ANR	3467925	Argument	f		3466940	0					
ANR	3467926	Identifier	f		3466940	0					
ANR	3467927	Argument	"""\\n"""		3466940	1					
ANR	3467928	PrimaryExpression	"""\\n"""		3466940	0					
ANR	3467929	ExpressionStatement	"print_indent_tree ( f , NENCLOSE ( node ) -> target , indent + add )"	6264:4:144808:144866	3466940	40	True				
ANR	3467930	CallExpression	"print_indent_tree ( f , NENCLOSE ( node ) -> target , indent + add )"		3466940	0					
ANR	3467931	Callee	print_indent_tree		3466940	0					
ANR	3467932	Identifier	print_indent_tree		3466940	0					
ANR	3467933	ArgumentList	f		3466940	1					
ANR	3467934	Argument	f		3466940	0					
ANR	3467935	Identifier	f		3466940	0					
ANR	3467936	Argument	NENCLOSE ( node ) -> target		3466940	1					
ANR	3467937	PtrMemberAccess	NENCLOSE ( node ) -> target		3466940	0					
ANR	3467938	CallExpression	NENCLOSE ( node )		3466940	0					
ANR	3467939	Callee	NENCLOSE		3466940	0					
ANR	3467940	Identifier	NENCLOSE		3466940	0					
ANR	3467941	ArgumentList	node		3466940	1					
ANR	3467942	Argument	node		3466940	0					
ANR	3467943	Identifier	node		3466940	0					
ANR	3467944	Identifier	target		3466940	1					
ANR	3467945	Argument	indent + add		3466940	2					
ANR	3467946	AdditiveExpression	indent + add		3466940	0		+			
ANR	3467947	Identifier	indent		3466940	0					
ANR	3467948	Identifier	add		3466940	1					
ANR	3467949	BreakStatement	break ;	6265:4:144872:144877	3466940	41	True				
ANR	3467950	Label	default :	6267:2:144882:144889	3466940	42	True				
ANR	3467951	Identifier	default		3466940	0					
ANR	3467952	ExpressionStatement	"fprintf ( f , ""print_indent_tree: undefined node type %d\\n"" , NTYPE ( node ) )"	6268:4:144895:144965	3466940	43	True				
ANR	3467953	CallExpression	"fprintf ( f , ""print_indent_tree: undefined node type %d\\n"" , NTYPE ( node ) )"		3466940	0					
ANR	3467954	Callee	fprintf		3466940	0					
ANR	3467955	Identifier	fprintf		3466940	0					
ANR	3467956	ArgumentList	f		3466940	1					
ANR	3467957	Argument	f		3466940	0					
ANR	3467958	Identifier	f		3466940	0					
ANR	3467959	Argument	"""print_indent_tree: undefined node type %d\\n"""		3466940	1					
ANR	3467960	PrimaryExpression	"""print_indent_tree: undefined node type %d\\n"""		3466940	0					
ANR	3467961	Argument	NTYPE ( node )		3466940	2					
ANR	3467962	CallExpression	NTYPE ( node )		3466940	0					
ANR	3467963	Callee	NTYPE		3466940	0					
ANR	3467964	Identifier	NTYPE		3466940	0					
ANR	3467965	ArgumentList	node		3466940	1					
ANR	3467966	Argument	node		3466940	0					
ANR	3467967	Identifier	node		3466940	0					
ANR	3467968	BreakStatement	break ;	6269:4:144971:144976	3466940	44	True				
ANR	3467969	IfStatement	if ( type != NT_LIST && type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE )		3466940	7					
ANR	3467970	Condition	type != NT_LIST && type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE	6272:6:144989:145068	3466940	0	True				
ANR	3467971	AndExpression	type != NT_LIST && type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE		3466940	0		&&			
ANR	3467972	EqualityExpression	type != NT_LIST		3466940	0		!=			
ANR	3467973	Identifier	type		3466940	0					
ANR	3467974	Identifier	NT_LIST		3466940	1					
ANR	3467975	AndExpression	type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE		3466940	1		&&			
ANR	3467976	EqualityExpression	type != NT_ALT		3466940	0		!=			
ANR	3467977	Identifier	type		3466940	0					
ANR	3467978	Identifier	NT_ALT		3466940	1					
ANR	3467979	AndExpression	type != NT_QTFR && type != NT_ENCLOSE		3466940	1		&&			
ANR	3467980	EqualityExpression	type != NT_QTFR		3466940	0		!=			
ANR	3467981	Identifier	type		3466940	0					
ANR	3467982	Identifier	NT_QTFR		3466940	1					
ANR	3467983	EqualityExpression	type != NT_ENCLOSE		3466940	1		!=			
ANR	3467984	Identifier	type		3466940	0					
ANR	3467985	Identifier	NT_ENCLOSE		3466940	1					
ANR	3467986	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6274:4:145075:145091	3466940	1	True				
ANR	3467987	CallExpression	"fprintf ( f , ""\\n"" )"		3466940	0					
ANR	3467988	Callee	fprintf		3466940	0					
ANR	3467989	Identifier	fprintf		3466940	0					
ANR	3467990	ArgumentList	f		3466940	1					
ANR	3467991	Argument	f		3466940	0					
ANR	3467992	Identifier	f		3466940	0					
ANR	3467993	Argument	"""\\n"""		3466940	1					
ANR	3467994	PrimaryExpression	"""\\n"""		3466940	0					
ANR	3467995	ExpressionStatement	fflush ( f )	6275:2:145095:145104	3466940	8	True				
ANR	3467996	CallExpression	fflush ( f )		3466940	0					
ANR	3467997	Callee	fflush		3466940	0					
ANR	3467998	Identifier	fflush		3466940	0					
ANR	3467999	ArgumentList	f		3466940	1					
ANR	3468000	Argument	f		3466940	0					
ANR	3468001	Identifier	f		3466940	0					
ANR	3468002	ReturnType	static void		3466940	1					
ANR	3468003	Identifier	print_indent_tree		3466940	2					
ANR	3468004	ParameterList	"FILE * f , Node * node , int indent"		3466940	3					
ANR	3468005	Parameter	FILE * f	6115:18:140843:140849	3466940	0	True				
ANR	3468006	ParameterType	FILE *		3466940	0					
ANR	3468007	Identifier	f		3466940	1					
ANR	3468008	Parameter	Node * node	6115:27:140852:140861	3466940	1	True				
ANR	3468009	ParameterType	Node *		3466940	0					
ANR	3468010	Identifier	node		3466940	1					
ANR	3468011	Parameter	int indent	6115:39:140864:140873	3466940	2	True				
ANR	3468012	ParameterType	int		3466940	0					
ANR	3468013	Identifier	indent		3466940	1					
ANR	3468014	CFGEntryNode	ENTRY		3466940		True				
ANR	3468015	CFGExitNode	EXIT		3466940		True				
ANR	3468016	Symbol	NQTFR ( node ) -> target		3466940						
ANR	3468017	Symbol	NCAR		3466940						
ANR	3468018	Symbol	* bbuf -> p		3466940						
ANR	3468019	Symbol	br -> back_num		3466940						
ANR	3468020	Symbol	IS_NCCLASS_NOT		3466940						
ANR	3468021	Symbol	cn -> name_end		3466940						
ANR	3468022	Symbol	type		3466940						
ANR	3468023	Symbol	NQTFR		3466940						
ANR	3468024	Symbol	NCCLASS		3466940						
ANR	3468025	Symbol	* NCTYPE		3466940						
ANR	3468026	Symbol	* br		3466940						
ANR	3468027	Symbol	NENCLOSE ( node ) -> regnum		3466940						
ANR	3468028	Symbol	* bbuf		3466940						
ANR	3468029	Symbol	NCTYPE		3466940						
ANR	3468030	Symbol	NENCLOSE ( node ) -> option		3466940						
ANR	3468031	Symbol	add		3466940						
ANR	3468032	Symbol	NQTFR ( node ) -> upper		3466940						
ANR	3468033	Symbol	NCDR		3466940						
ANR	3468034	Symbol	NSTR		3466940						
ANR	3468035	Symbol	NCCLASS ( node ) -> mbuf		3466940						
ANR	3468036	Symbol	* NSTR		3466940						
ANR	3468037	Symbol	NT_LIST		3466940						
ANR	3468038	Symbol	NENCLOSE ( node ) -> target		3466940						
ANR	3468039	Symbol	node		3466940						
ANR	3468040	Symbol	NSTR ( node ) -> s		3466940						
ANR	3468041	Symbol	* cn		3466940						
ANR	3468042	Symbol	BACKREFS_P		3466940						
ANR	3468043	Symbol	bbuf -> p		3466940						
ANR	3468044	Symbol	NT_ENCLOSE		3466940						
ANR	3468045	Symbol	bbuf -> used		3466940						
ANR	3468046	Symbol	IS_NOT_NULL		3466940						
ANR	3468047	Symbol	indent		3466940						
ANR	3468048	Symbol	NCTYPE ( node ) -> ctype		3466940						
ANR	3468049	Symbol	NCALL		3466940						
ANR	3468050	Symbol	NQTFR ( node ) -> lower		3466940						
ANR	3468051	Symbol	* NENCLOSE		3466940						
ANR	3468052	Symbol	cn -> name		3466940						
ANR	3468053	Symbol	NSTRING_IS_RAW		3466940						
ANR	3468054	Symbol	NANCHOR ( node ) -> type		3466940						
ANR	3468055	Symbol	NENCLOSE ( node ) -> type		3466940						
ANR	3468056	Symbol	br		3466940						
ANR	3468057	Symbol	NSTR ( node ) -> end		3466940						
ANR	3468058	Symbol	IS_NULL		3466940						
ANR	3468059	Symbol	NBREF		3466940						
ANR	3468060	Symbol	* NQTFR		3466940						
ANR	3468061	Symbol	NT_QTFR		3466940						
ANR	3468062	Symbol	* NANCHOR		3466940						
ANR	3468063	Symbol	NENCLOSE		3466940						
ANR	3468064	Symbol	NQTFR ( node ) -> greedy		3466940						
ANR	3468065	Symbol	* NCCLASS		3466940						
ANR	3468066	Symbol	f		3466940						
ANR	3468067	Symbol	* * bbuf		3466940						
ANR	3468068	Symbol	i		3466940						
ANR	3468069	Symbol	cn		3466940						
ANR	3468070	Symbol	p		3466940						
ANR	3468071	Symbol	* i		3466940						
ANR	3468072	Symbol	NT_ALT		3466940						
ANR	3468073	Symbol	NCTYPE ( node ) -> not		3466940						
ANR	3468074	Symbol	NANCHOR		3466940						
ANR	3468075	Symbol	NTYPE		3466940						
ANR	3468076	Symbol	* p		3466940						
ANR	3468077	Symbol	bbuf		3466940						
ANR	3468078	Function	print_tree	6280:0:145162:145241							
ANR	3468079	FunctionDef	"print_tree (FILE * f , Node * node)"		3468078	0					
ANR	3468080	CompoundStatement		6282:0:145206:145241	3468078	0					
ANR	3468081	ExpressionStatement	"print_indent_tree ( f , node , 0 )"	6283:2:145210:145239	3468078	0	True				
ANR	3468082	CallExpression	"print_indent_tree ( f , node , 0 )"		3468078	0					
ANR	3468083	Callee	print_indent_tree		3468078	0					
ANR	3468084	Identifier	print_indent_tree		3468078	0					
ANR	3468085	ArgumentList	f		3468078	1					
ANR	3468086	Argument	f		3468078	0					
ANR	3468087	Identifier	f		3468078	0					
ANR	3468088	Argument	node		3468078	1					
ANR	3468089	Identifier	node		3468078	0					
ANR	3468090	Argument	0		3468078	2					
ANR	3468091	PrimaryExpression	0		3468078	0					
ANR	3468092	ReturnType	static void		3468078	1					
ANR	3468093	Identifier	print_tree		3468078	2					
ANR	3468094	ParameterList	"FILE * f , Node * node"		3468078	3					
ANR	3468095	Parameter	FILE * f	6281:11:145185:145191	3468078	0	True				
ANR	3468096	ParameterType	FILE *		3468078	0					
ANR	3468097	Identifier	f		3468078	1					
ANR	3468098	Parameter	Node * node	6281:20:145194:145203	3468078	1	True				
ANR	3468099	ParameterType	Node *		3468078	0					
ANR	3468100	Identifier	node		3468078	1					
ANR	3468101	CFGEntryNode	ENTRY		3468078		True				
ANR	3468102	CFGExitNode	EXIT		3468078		True				
ANR	3468103	Symbol	node		3468078						
ANR	3468104	Symbol	f		3468078						
